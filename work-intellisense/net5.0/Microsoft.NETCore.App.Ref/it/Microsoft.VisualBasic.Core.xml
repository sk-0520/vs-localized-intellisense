<?xml version="1.0" encoding="utf-8"?>
<doc>
  <assembly>
    <name>Microsoft.VisualBasic.Core</name>
  </assembly>
  <members>
    <member name="T:Microsoft.VisualBasic.AppWinStyle">
      <summary>Indica lo stile della finestra da utilizzare per il programma richiamato quando viene chiamata la funzione <see langword="Shell" />.</summary>
    </member>
    <member name="F:Microsoft.VisualBasic.AppWinStyle.Hide">
      <summary>La finestra viene nascosta e lo stato attivo viene passato alla finestra nascosta. Questo membro è equivalente alla costante <see langword="vbHide" />di Visual Basic.</summary>
    </member>
    <member name="F:Microsoft.VisualBasic.AppWinStyle.MaximizedFocus">
      <summary>La finestra è ingrandita con lo stato attivo. Questo membro è equivalente alla costante <see langword="vbMaximizedFocus" />di Visual Basic.</summary>
    </member>
    <member name="F:Microsoft.VisualBasic.AppWinStyle.MinimizedFocus">
      <summary>La finestra viene visualizzata ridotta a icona con lo stato attivo. Questo membro è equivalente alla costante <see langword="vbMinimizedFocus" />di Visual Basic.</summary>
    </member>
    <member name="F:Microsoft.VisualBasic.AppWinStyle.MinimizedNoFocus">
      <summary>La finestra viene visualizzata ridotta a icona. La finestra attiva rimane attiva. Questo membro è equivalente alla costante <see langword="vbMinimizedNoFocus" />di Visual Basic.</summary>
    </member>
    <member name="F:Microsoft.VisualBasic.AppWinStyle.NormalFocus">
      <summary>La finestra ha lo stato attivo e vengono ripristinate le dimensioni e la posizione originali. Questo membro è equivalente alla costante <see langword="vbNormalFocus" />di Visual Basic.</summary>
    </member>
    <member name="F:Microsoft.VisualBasic.AppWinStyle.NormalNoFocus">
      <summary>Vengono ripristinate le dimensioni e la posizione più recenti della finestra. La finestra attiva rimane attiva. Questo membro è equivalente alla costante <see langword="vbNormalNoFocus" />di Visual Basic.</summary>
    </member>
    <member name="T:Microsoft.VisualBasic.CallType">
      <summary>Indica il tipo di routine da richiamare quando viene chiamata la funzione <see langword="CallByName" />.</summary>
    </member>
    <member name="F:Microsoft.VisualBasic.CallType.Get">
      <summary>È in corso il recupero di un valore di proprietà.  Questo membro è equivalente alla costante <see langword="vbGet" />di Visual Basic.</summary>
    </member>
    <member name="F:Microsoft.VisualBasic.CallType.Let">
      <summary>È in corso la determinazione di un valore della proprietà Object. Questo membro è equivalente alla costante <see langword="vbLet" />di Visual Basic.</summary>
    </member>
    <member name="F:Microsoft.VisualBasic.CallType.Method">
      <summary>È in corso la chiamata di un metodo.  Questo membro è equivalente alla costante <see langword="vbMethod" />di Visual Basic.</summary>
    </member>
    <member name="F:Microsoft.VisualBasic.CallType.Set">
      <summary>È in corso la determinazione di un valore di proprietà.  Questo membro è equivalente alla costante <see langword="vbSet" />di Visual Basic.</summary>
    </member>
    <member name="T:Microsoft.VisualBasic.Collection">
      <summary>Un oggetto <see langword="Collection" /> di Visual Basic è un set ordinato di elementi a cui è possibile fare riferimento come singola unità.</summary>
    </member>
    <member name="M:Microsoft.VisualBasic.Collection.#ctor">
      <summary>Crea e restituisce un nuovo oggetto <see cref="T:Microsoft.VisualBasic.Collection" /> Visual Basic.</summary>
    </member>
    <member name="M:Microsoft.VisualBasic.Collection.Add(System.Object,System.String,System.Object,System.Object)">
      <summary>Aggiunge un elemento all'oggetto <see langword="Collection" />.</summary>
      <param name="Item">Obbligatorio. Oggetto di qualsiasi tipo che specifica l'elemento da aggiungere alla raccolta.</param>
      <param name="Key">facoltativo. Espressione <see langword="String" /> univoca che specifica una stringa chiave utilizzabile al posto di un indice di posizione per accedere a questo nuovo elemento della raccolta.</param>
      <param name="Before">facoltativo. Espressione che specifica una posizione relativa nella raccolta. L'elemento da aggiungere viene inserito nella raccolta prima dell'elemento identificato dall'argomento <paramref name="Before" />. Se <paramref name="Before" /> è un'espressione numerica, deve essere un numero compreso tra 1 e il valore della proprietà <see cref="P:Microsoft.VisualBasic.Collection.Count" /> della raccolta. Se <paramref name="Before" /> è un'espressione <see langword="String" />, deve corrispondere alla stringa della chiave specificata quando l'elemento a cui viene fatto riferimento è stato aggiunto alla raccolta. Non è possibile specificare sia <paramref name="Before" /> che <paramref name="After" />.</param>
      <param name="After">facoltativo. Espressione che specifica una posizione relativa nella raccolta. L'elemento da aggiungere viene inserito nella raccolta dopo l'elemento identificato dall'argomento <paramref name="After" />. Se <paramref name="After" /> è un'espressione numerica, deve essere un numero compreso tra 1 e il valore della proprietà <see langword="Count" /> della raccolta. Se <paramref name="After" /> è un'espressione <see langword="String" />, deve corrispondere alla stringa della chiave specificata quando l'elemento a cui viene fatto riferimento è stato aggiunto alla raccolta. Non è possibile specificare sia <paramref name="Before" /> che <paramref name="After" />.</param>
    </member>
    <member name="M:Microsoft.VisualBasic.Collection.Clear">
      <summary>Elimina tutti gli elementi di un oggetto <see langword="Collection" /> di Visual Basic.</summary>
    </member>
    <member name="M:Microsoft.VisualBasic.Collection.Contains(System.String)">
      <summary>Restituisce un valore che indica se un oggetto <see langword="Collection" /> di Visual Basic contiene un elemento con una chiave specifica.</summary>
      <param name="Key">Obbligatorio. Espressione <see langword="String" /> che specifica la chiave per la ricerca degli elementi della raccolta.</param>
      <returns>
        <see langword="true" /> se l'oggetto <see langword="Collection" /> di Visual Basic contiene un elemento con una chiave specifica. In caso contrario, <see langword="false" />.</returns>
    </member>
    <member name="M:Microsoft.VisualBasic.Collection.GetEnumerator">
      <summary>Restituisce un enumeratore che consente di scorrere la raccolta.</summary>
      <returns>Enumeratore che può essere usato per scorrere la raccolta.</returns>
    </member>
    <member name="M:Microsoft.VisualBasic.Collection.Remove(System.Int32)">
      <summary>Rimuove un elemento dall'oggetto <see langword="Collection" />.</summary>
      <param name="Index">Espressione numerica che specifica la posizione di un elemento della raccolta. <paramref name="Index" /> deve essere un numero compreso tra 1 e il valore della proprietà <see cref="P:Microsoft.VisualBasic.Collection.Count" /> della raccolta.</param>
    </member>
    <member name="M:Microsoft.VisualBasic.Collection.Remove(System.String)">
      <summary>Rimuove un elemento dall'oggetto <see langword="Collection" />.</summary>
      <param name="Key">Espressione <see langword="String" /> univoca che specifica una stringa chiave utilizzabile al posto di un indice di posizione per accedere a un elemento della raccolta. <paramref name="Key" /> deve corrispondere all'argomento <paramref name="Key" /> specificato quando l'elemento è stato aggiunto alla raccolta.</param>
    </member>
    <member name="P:Microsoft.VisualBasic.Collection.Count">
      <summary>Ottiene il numero di elementi contenuti in una raccolta.</summary>
      <returns>Numero di elementi contenuti in un insieme.</returns>
    </member>
    <member name="P:Microsoft.VisualBasic.Collection.Item(System.Int32)">
      <summary>Ottiene un elemento specifico di un oggetto <see langword="Collection" /> in base alla posizione o alla chiave.</summary>
      <param name="Index">Espressione numerica che specifica la posizione di un elemento della raccolta. <paramref name="Index" /> deve essere un numero compreso tra 1 e il valore della proprietà <see cref="P:Microsoft.VisualBasic.Collection.Count" /> della raccolta. Oppure (B) un'espressione <see langword="Object" /> che specifica la posizione o la stringa della chiave di un elemento della raccolta.</param>
      <returns>Elemento specifico di un <see langword="Collection" /> oggetto in base alla posizione o alla chiave.</returns>
    </member>
    <member name="P:Microsoft.VisualBasic.Collection.Item(System.Object)">
      <summary>Ottiene un elemento specifico di un oggetto <see langword="Collection" /> in base alla posizione o alla chiave.</summary>
      <param name="Index">Espressione numerica che specifica la posizione di un elemento della raccolta. <paramref name="Index" /> deve essere un numero compreso tra 1 e il valore della proprietà <see cref="P:Microsoft.VisualBasic.Collection.Count" /> della raccolta. Oppure (B) un'espressione <see langword="Object" /> che specifica la posizione o la stringa della chiave di un elemento della raccolta.</param>
      <returns>Elemento specifico di un <see langword="Collection" /> oggetto in base alla posizione o alla chiave.</returns>
    </member>
    <member name="P:Microsoft.VisualBasic.Collection.Item(System.String)">
      <summary>Ottiene un elemento specifico di un oggetto <see langword="Collection" /> in base alla posizione o alla chiave.</summary>
      <param name="Key">Espressione <see langword="String" /> univoca che specifica una stringa chiave utilizzabile al posto di un indice di posizione per accedere a un elemento della raccolta. <paramref name="Key" /> deve corrispondere all'argomento <paramref name="Key" /> specificato quando l'elemento è stato aggiunto alla raccolta.</param>
      <returns>Elemento specifico di un <see langword="Collection" /> oggetto in base alla posizione o alla chiave.</returns>
    </member>
    <member name="T:Microsoft.VisualBasic.ComClassAttribute">
      <summary>L'attributo <see langword="ComClassAttribute" /> comunica al compilatore di aggiungere i metadati che consentono di esporre una classe come oggetto COM.</summary>
    </member>
    <member name="M:Microsoft.VisualBasic.ComClassAttribute.#ctor">
      <summary>Inizializza una nuova istanza della classe <see langword="ComClassAttribute" />.</summary>
    </member>
    <member name="M:Microsoft.VisualBasic.ComClassAttribute.#ctor(System.String)">
      <summary>Inizializza una nuova istanza della classe <see langword="ComClassAttribute" />.</summary>
      <param name="_ClassID">Inizializza il valore della proprietà <see langword="ClassID" /> utilizzato per identificare una classe in modo univoco.</param>
    </member>
    <member name="M:Microsoft.VisualBasic.ComClassAttribute.#ctor(System.String,System.String)">
      <summary>Inizializza una nuova istanza della classe <see langword="ComClassAttribute" />.</summary>
      <param name="_ClassID">Inizializza il valore della proprietà <see langword="ClassID" /> utilizzato per identificare una classe in modo univoco.</param>
      <param name="_InterfaceID">Inizializza il valore della proprietà <see langword="InterfaceID" /> utilizzato per identificare un'interfaccia in modo univoco.</param>
    </member>
    <member name="M:Microsoft.VisualBasic.ComClassAttribute.#ctor(System.String,System.String,System.String)">
      <summary>Inizializza una nuova istanza della classe <see langword="ComClassAttribute" />.</summary>
      <param name="_ClassID">Inizializza il valore della proprietà <see langword="ClassID" /> utilizzato per identificare una classe in modo univoco.</param>
      <param name="_InterfaceID">Inizializza il valore della proprietà <see langword="InterfaceID" /> utilizzato per identificare un'interfaccia in modo univoco.</param>
      <param name="_EventId">Inizializza il valore della proprietà <see langword="EventID" /> utilizzato per identificare un evento in modo univoco.</param>
    </member>
    <member name="P:Microsoft.VisualBasic.ComClassAttribute.ClassID">
      <summary>Ottiene un ID di classe utilizzato per identificare una classe in modo univoco.</summary>
      <returns>Di sola lettura. Stringa che può essere utilizzata dal compilatore per identificare in modo univoco la classe quando viene creato un oggetto COM.</returns>
    </member>
    <member name="P:Microsoft.VisualBasic.ComClassAttribute.EventID">
      <summary>Ottiene un ID di evento utilizzato per identificare un evento in modo univoco.</summary>
      <returns>Sola lettura. Stringa che può essere utilizzata dal compilatore per identificare in modo univoco un evento per la classe quando viene creato un oggetto COM.</returns>
    </member>
    <member name="P:Microsoft.VisualBasic.ComClassAttribute.InterfaceID">
      <summary>Ottiene un ID di interfaccia utilizzato per identificare un'interfaccia in modo univoco.</summary>
      <returns>Di sola lettura. Stringa che può essere utilizzata dal compilatore per identificare in modo univoco un'interfaccia per la classe quando viene creato un oggetto COM.</returns>
    </member>
    <member name="P:Microsoft.VisualBasic.ComClassAttribute.InterfaceShadows">
      <summary>Indica che il nome dell'interfaccia COM nasconde un altro membro della classe o della classe base.</summary>
      <returns>Valore <see langword="Boolean" /> che indica che il nome dell'interfaccia COM nasconde un altro membro della classe o della classe base.</returns>
    </member>
    <member name="T:Microsoft.VisualBasic.CompareMethod">
      <summary>Indica come confrontare le stringhe quando si chiamano funzioni di confronto.</summary>
    </member>
    <member name="F:Microsoft.VisualBasic.CompareMethod.Binary">
      <summary>Esegue un confronto binario. Questo membro è equivalente alla costante <see langword="vbBinaryCompare" />di Visual Basic.</summary>
    </member>
    <member name="F:Microsoft.VisualBasic.CompareMethod.Text">
      <summary>Esegue un confronto di testo. Questo membro è equivalente alla costante <see langword="vbTextCompare" />di Visual Basic.</summary>
    </member>
    <member name="T:Microsoft.VisualBasic.CompilerServices.BooleanType">
      <summary>A partire da Visual Basic 2005, questa classe viene considerata deprecata.</summary>
    </member>
    <member name="M:Microsoft.VisualBasic.CompilerServices.BooleanType.FromObject(System.Object)">
      <summary>Restituisce un valore <see langword="Boolean" /> corrispondente all'oggetto specificato.</summary>
      <param name="Value">Obbligatorio. Oggetto da convertire in un valore <see langword="Boolean" />.</param>
      <returns>Valore <see langword="Boolean" /> corrispondente a <paramref name="Value" />.</returns>
    </member>
    <member name="M:Microsoft.VisualBasic.CompilerServices.BooleanType.FromString(System.String)">
      <summary>Restituisce un valore <see langword="Boolean" /> corrispondente alla stringa specificata.</summary>
      <param name="Value">Obbligatorio. Stringa da convertire in un valore <see langword="Boolean" />.</param>
      <returns>Valore <see langword="Boolean" /> corrispondente a <paramref name="Value" />.</returns>
    </member>
    <member name="T:Microsoft.VisualBasic.CompilerServices.ByteType">
      <summary>A partire da Visual Basic 2005, questa classe viene considerata deprecata.</summary>
    </member>
    <member name="M:Microsoft.VisualBasic.CompilerServices.ByteType.FromObject(System.Object)">
      <summary>Restituisce un valore <see langword="Byte" /> corrispondente all'oggetto specificato.</summary>
      <param name="Value">Obbligatorio. Oggetto da convertire in un valore <see langword="Byte" />.</param>
      <returns>Valore <see langword="Byte" /> corrispondente a <paramref name="Value" />.</returns>
    </member>
    <member name="M:Microsoft.VisualBasic.CompilerServices.ByteType.FromString(System.String)">
      <summary>Restituisce un valore <see langword="Byte" /> corrispondente alla stringa specificata.</summary>
      <param name="Value">Obbligatorio. Stringa da convertire in un valore <see langword="Byte" />.</param>
      <returns>Valore <see langword="Byte" /> corrispondente a <paramref name="Value" />.</returns>
    </member>
    <member name="T:Microsoft.VisualBasic.CompilerServices.CharArrayType">
      <summary>A partire da Visual Basic 2005, questa classe viene considerata deprecata.</summary>
    </member>
    <member name="M:Microsoft.VisualBasic.CompilerServices.CharArrayType.FromObject(System.Object)">
      <summary>Restituisce un valore <see langword="CharArray" /> corrispondente all'oggetto specificato.</summary>
      <param name="Value">Obbligatorio. Oggetto da convertire in un valore <see langword="CharArray" />.</param>
      <returns>Valore <see langword="CharArray" /> corrispondente a <paramref name="Value" />.</returns>
    </member>
    <member name="M:Microsoft.VisualBasic.CompilerServices.CharArrayType.FromString(System.String)">
      <summary>Restituisce un valore <see langword="CharArray" /> corrispondente alla stringa specificata.</summary>
      <param name="Value">Obbligatorio. Stringa da convertire in un valore <see langword="CharArray" />.</param>
      <returns>Valore <see langword="CharArray" /> corrispondente a <paramref name="Value" />.</returns>
    </member>
    <member name="T:Microsoft.VisualBasic.CompilerServices.CharType">
      <summary>A partire da Visual Basic 2005, questa classe viene considerata deprecata.</summary>
    </member>
    <member name="M:Microsoft.VisualBasic.CompilerServices.CharType.FromObject(System.Object)">
      <summary>Restituisce un valore <see langword="Char" /> corrispondente all'oggetto specificato.</summary>
      <param name="Value">Obbligatorio. Oggetto da convertire in un valore <see langword="Char" />.</param>
      <returns>Valore <see langword="Char" /> corrispondente a <paramref name="Value" />.</returns>
    </member>
    <member name="M:Microsoft.VisualBasic.CompilerServices.CharType.FromString(System.String)">
      <summary>Restituisce un valore <see langword="Char" /> corrispondente alla stringa specificata.</summary>
      <param name="Value">Obbligatorio. Stringa da convertire in un valore <see langword="Char" />.</param>
      <returns>Valore <see langword="Char" /> corrispondente a <paramref name="Value" />.</returns>
    </member>
    <member name="T:Microsoft.VisualBasic.CompilerServices.Conversions">
      <summary>Fornisce i metodi che eseguono varie conversioni dei tipi.</summary>
    </member>
    <member name="M:Microsoft.VisualBasic.CompilerServices.Conversions.ChangeType(System.Object,System.Type)">
      <summary>Converte un oggetto nel tipo specificato.</summary>
      <param name="Expression">Oggetto da convertire.</param>
      <param name="TargetType">Tipo in cui convertire l'oggetto.</param>
      <returns>Oggetto del tipo di destinazione specificato.</returns>
    </member>
    <member name="M:Microsoft.VisualBasic.CompilerServices.Conversions.FallbackUserDefinedConversion(System.Object,System.Type)">
      <summary>Converte un oggetto nel tipo specificato.</summary>
      <param name="Expression">Oggetto da convertire.</param>
      <param name="TargetType">Tipo in cui convertire l'oggetto.</param>
      <returns>Oggetto del tipo di destinazione specificato.</returns>
    </member>
    <member name="M:Microsoft.VisualBasic.CompilerServices.Conversions.FromCharAndCount(System.Char,System.Int32)">
      <summary>Converte un valore <see cref="T:System.Char" /> in una stringa, dato un numero di byte.</summary>
      <param name="Value">Valore <see langword="Char" /> da convertire.</param>
      <param name="Count">Numero di byte del valore <see langword="Char" />.</param>
      <returns>Rappresentazione di stringa del valore specificato.</returns>
    </member>
    <member name="M:Microsoft.VisualBasic.CompilerServices.Conversions.FromCharArray(System.Char[])">
      <summary>Converte una matrice <see cref="T:System.Char" /> in una stringa.</summary>
      <param name="Value">Matrice <see langword="Char" /> da convertire.</param>
      <returns>Rappresentazione di stringa della matrice specificata.</returns>
    </member>
    <member name="M:Microsoft.VisualBasic.CompilerServices.Conversions.FromCharArraySubset(System.Char[],System.Int32,System.Int32)">
      <summary>Converte un subset di una matrice <see cref="T:System.Char" /> in una stringa.</summary>
      <param name="Value">Matrice <see langword="Char" /> da convertire.</param>
      <param name="StartIndex">Indice in base zero della posizione iniziale.</param>
      <param name="Length">Lunghezza del subset in byte.</param>
      <returns>Rappresentazione di stringa della matrice specificata dalla posizione iniziale della lunghezza specificata.</returns>
    </member>
    <member name="M:Microsoft.VisualBasic.CompilerServices.Conversions.ToBoolean(System.Object)">
      <summary>Converte un oggetto in un valore <see cref="T:System.Boolean" />.</summary>
      <param name="Value">Oggetto da convertire.</param>
      <returns>Valore <see langword="Boolean" />. Restituisce <see langword="False" /> se l'oggetto è null. In caso contrario, restituisce <see langword="True" />.</returns>
    </member>
    <member name="M:Microsoft.VisualBasic.CompilerServices.Conversions.ToBoolean(System.String)">
      <summary>Converte una stringa in un valore <see cref="T:System.Boolean" />.</summary>
      <param name="Value">Stringa da convertire.</param>
      <returns>Valore <see langword="Boolean" />. Restituisce <see langword="False" /> se la stringa è null. In caso contrario, <see langword="True" />.</returns>
    </member>
    <member name="M:Microsoft.VisualBasic.CompilerServices.Conversions.ToByte(System.Object)">
      <summary>Converte un oggetto in un valore <see cref="T:System.Byte" />.</summary>
      <param name="Value">Oggetto da convertire.</param>
      <returns>Valore <see langword="Byte" /> dell'oggetto.</returns>
    </member>
    <member name="M:Microsoft.VisualBasic.CompilerServices.Conversions.ToByte(System.String)">
      <summary>Converte una stringa in un valore <see cref="T:System.Byte" />.</summary>
      <param name="Value">Stringa da convertire.</param>
      <returns>Valore <see langword="Byte" /> della stringa.</returns>
    </member>
    <member name="M:Microsoft.VisualBasic.CompilerServices.Conversions.ToChar(System.Object)">
      <summary>Converte un oggetto in un valore <see cref="T:System.Char" />.</summary>
      <param name="Value">Oggetto da convertire.</param>
      <returns>Valore <see langword="Char" /> dell'oggetto.</returns>
    </member>
    <member name="M:Microsoft.VisualBasic.CompilerServices.Conversions.ToChar(System.String)">
      <summary>Converte una stringa in un valore <see cref="T:System.Char" />.</summary>
      <param name="Value">Stringa da convertire.</param>
      <returns>Valore <see langword="Char" /> della stringa.</returns>
    </member>
    <member name="M:Microsoft.VisualBasic.CompilerServices.Conversions.ToCharArrayRankOne(System.Object)">
      <summary>Converte un oggetto in una matrice <see cref="T:System.Char" /> unidimensionale.</summary>
      <param name="Value">Oggetto da convertire.</param>
      <returns>Matrice <see langword="Char" /> unidimensionale.</returns>
    </member>
    <member name="M:Microsoft.VisualBasic.CompilerServices.Conversions.ToCharArrayRankOne(System.String)">
      <summary>Converte una stringa in una matrice <see cref="T:System.Char" /> unidimensionale.</summary>
      <param name="Value">Stringa da convertire.</param>
      <returns>Matrice <see langword="Char" /> unidimensionale.</returns>
    </member>
    <member name="M:Microsoft.VisualBasic.CompilerServices.Conversions.ToDate(System.Object)">
      <summary>Converte un oggetto in un valore <see cref="T:System.DateTime" />.</summary>
      <param name="Value">Oggetto da convertire.</param>
      <returns>Valore <see langword="DateTime" /> dell'oggetto.</returns>
    </member>
    <member name="M:Microsoft.VisualBasic.CompilerServices.Conversions.ToDate(System.String)">
      <summary>Converte una stringa in un valore <see cref="T:System.DateTime" />.</summary>
      <param name="Value">Stringa da convertire.</param>
      <returns>Valore <see langword="DateTime" /> della stringa.</returns>
    </member>
    <member name="M:Microsoft.VisualBasic.CompilerServices.Conversions.ToDecimal(System.Boolean)">
      <summary>Converte un valore <see cref="T:System.Boolean" /> in valore <see cref="T:System.Decimal" />.</summary>
      <param name="Value">Valore Boolean da convertire.</param>
      <returns>Valore <see langword="Decimal" /> del valore Boolean.</returns>
    </member>
    <member name="M:Microsoft.VisualBasic.CompilerServices.Conversions.ToDecimal(System.Object)">
      <summary>Converte un oggetto in un valore <see cref="T:System.Decimal" />.</summary>
      <param name="Value">Oggetto da convertire.</param>
      <returns>Valore <see langword="Decimal" /> dell'oggetto.</returns>
    </member>
    <member name="M:Microsoft.VisualBasic.CompilerServices.Conversions.ToDecimal(System.String)">
      <summary>Converte una stringa in un valore <see cref="T:System.Decimal" />.</summary>
      <param name="Value">Stringa da convertire.</param>
      <returns>Valore <see langword="Decimal" /> della stringa.</returns>
    </member>
    <member name="M:Microsoft.VisualBasic.CompilerServices.Conversions.ToDouble(System.Object)">
      <summary>Converte un oggetto in un valore <see cref="T:System.Double" />.</summary>
      <param name="Value">Oggetto da convertire.</param>
      <returns>Valore <see cref="T:System.Double" /> dell'oggetto.</returns>
    </member>
    <member name="M:Microsoft.VisualBasic.CompilerServices.Conversions.ToDouble(System.String)">
      <summary>Converte una stringa in un valore <see cref="T:System.Double" />.</summary>
      <param name="Value">Stringa da convertire.</param>
      <returns>Valore <see cref="T:System.Double" /> della stringa.</returns>
    </member>
    <member name="M:Microsoft.VisualBasic.CompilerServices.Conversions.ToGenericParameter``1(System.Object)">
      <summary>Converte un oggetto in un oggetto <paramref name="T" /> di tipo generico.</summary>
      <param name="Value">Oggetto da convertire.</param>
      <typeparam name="T">Tipo in cui convertire <paramref name="Value" />.</typeparam>
      <returns>Struttura o oggetto di <paramref name="T" /> di tipo generico.</returns>
    </member>
    <member name="M:Microsoft.VisualBasic.CompilerServices.Conversions.ToInteger(System.Object)">
      <summary>Converte un oggetto in un valore intero.</summary>
      <param name="Value">Oggetto da convertire.</param>
      <returns>Valore <see langword="int" /> dell'oggetto.</returns>
    </member>
    <member name="M:Microsoft.VisualBasic.CompilerServices.Conversions.ToInteger(System.String)">
      <summary>Converte una stringa in un valore intero.</summary>
      <param name="Value">Stringa da convertire.</param>
      <returns>Valore <see langword="int" /> della stringa.</returns>
    </member>
    <member name="M:Microsoft.VisualBasic.CompilerServices.Conversions.ToLong(System.Object)">
      <summary>Converte un oggetto in un valore <see langword="Long" />.</summary>
      <param name="Value">Oggetto da convertire.</param>
      <returns>Valore <see langword="Long" /> dell'oggetto.</returns>
    </member>
    <member name="M:Microsoft.VisualBasic.CompilerServices.Conversions.ToLong(System.String)">
      <summary>Converte una stringa in un valore <see langword="Long" />.</summary>
      <param name="Value">Stringa da convertire.</param>
      <returns>Valore <see langword="Long" /> della stringa.</returns>
    </member>
    <member name="M:Microsoft.VisualBasic.CompilerServices.Conversions.ToSByte(System.Object)">
      <summary>Converte un oggetto in un valore <see cref="T:System.SByte" />.</summary>
      <param name="Value">Oggetto da convertire.</param>
      <returns>Valore <see langword="SByte" /> dell'oggetto.</returns>
    </member>
    <member name="M:Microsoft.VisualBasic.CompilerServices.Conversions.ToSByte(System.String)">
      <summary>Converte una stringa in un valore <see cref="T:System.SByte" />.</summary>
      <param name="Value">Stringa da convertire.</param>
      <returns>Valore <see langword="SByte" /> della stringa.</returns>
    </member>
    <member name="M:Microsoft.VisualBasic.CompilerServices.Conversions.ToShort(System.Object)">
      <summary>Converte un oggetto in un valore <see langword="Short" />.</summary>
      <param name="Value">Oggetto da convertire.</param>
      <returns>Valore <see langword="Short" /> dell'oggetto.</returns>
    </member>
    <member name="M:Microsoft.VisualBasic.CompilerServices.Conversions.ToShort(System.String)">
      <summary>Converte una stringa in un valore <see langword="Short" />.</summary>
      <param name="Value">Stringa da convertire.</param>
      <returns>Valore <see langword="Short" /> della stringa.</returns>
    </member>
    <member name="M:Microsoft.VisualBasic.CompilerServices.Conversions.ToSingle(System.Object)">
      <summary>Converte un oggetto in un valore <see cref="T:System.Single" />.</summary>
      <param name="Value">Oggetto da convertire.</param>
      <returns>Valore <see cref="T:System.Single" /> dell'oggetto.</returns>
    </member>
    <member name="M:Microsoft.VisualBasic.CompilerServices.Conversions.ToSingle(System.String)">
      <summary>Converte un valore <see cref="T:System.String" /> in un valore <see cref="T:System.Single" />.</summary>
      <param name="Value">Stringa da convertire.</param>
      <returns>Valore <see cref="T:System.Single" /> della stringa.</returns>
    </member>
    <member name="M:Microsoft.VisualBasic.CompilerServices.Conversions.ToString(System.Boolean)">
      <summary>Converte un valore <see cref="T:System.Boolean" /> in valore <see cref="T:System.String" />.</summary>
      <param name="Value">Valore <see langword="Boolean" /> da convertire.</param>
      <returns>Rappresentazione <see langword="String" /> del valore <see langword="Boolean" />.</returns>
    </member>
    <member name="M:Microsoft.VisualBasic.CompilerServices.Conversions.ToString(System.Byte)">
      <summary>Converte un valore <see cref="T:System.Byte" /> in valore <see cref="T:System.String" />.</summary>
      <param name="Value">Valore <see langword="Byte" /> da convertire.</param>
      <returns>Rappresentazione <see langword="String" /> del valore <see langword="Byte" />.</returns>
    </member>
    <member name="M:Microsoft.VisualBasic.CompilerServices.Conversions.ToString(System.Char)">
      <summary>Converte un valore <see cref="T:System.Char" /> in valore <see cref="T:System.String" />.</summary>
      <param name="Value">Valore <see langword="Char" /> da convertire.</param>
      <returns>Rappresentazione <see langword="String" /> del valore <see langword="Char" />.</returns>
    </member>
    <member name="M:Microsoft.VisualBasic.CompilerServices.Conversions.ToString(System.DateTime)">
      <summary>Converte un valore <see cref="T:System.DateTime" /> in valore <see cref="T:System.String" />.</summary>
      <param name="Value">Valore <see langword="DateTime" /> da convertire.</param>
      <returns>Rappresentazione <see langword="String" /> del valore <see langword="DateTime" />.</returns>
    </member>
    <member name="M:Microsoft.VisualBasic.CompilerServices.Conversions.ToString(System.Decimal)">
      <summary>Converte un valore <see cref="T:System.Decimal" /> in valore <see cref="T:System.String" />.</summary>
      <param name="Value">Valore <see langword="Decimal" /> da convertire.</param>
      <returns>Rappresentazione <see langword="String" /> del valore <see langword="Decimal" />.</returns>
    </member>
    <member name="M:Microsoft.VisualBasic.CompilerServices.Conversions.ToString(System.Decimal,System.Globalization.NumberFormatInfo)">
      <summary>Converte un valore <see cref="T:System.Decimal" /> in un valore <see cref="T:System.String" />, utilizzando il formato numerico specificato.</summary>
      <param name="Value">Valore <see langword="decimal" /> da convertire.</param>
      <param name="NumberFormat">Formato numerico da utilizzare, in base a <see cref="T:System.Globalization.NumberFormatInfo" />.</param>
      <returns>Rappresentazione <see langword="String" /> del valore <see langword="Decimal" />.</returns>
    </member>
    <member name="M:Microsoft.VisualBasic.CompilerServices.Conversions.ToString(System.Double)">
      <summary>Converte un valore <see cref="T:System.Double" /> in valore <see cref="T:System.String" />.</summary>
      <param name="Value">Valore <see cref="T:System.Double" /> da convertire.</param>
      <returns>Rappresentazione in forma di stringa del valore <see cref="T:System.Double" />.</returns>
    </member>
    <member name="M:Microsoft.VisualBasic.CompilerServices.Conversions.ToString(System.Double,System.Globalization.NumberFormatInfo)">
      <summary>Converte un valore <see cref="T:System.Double" /> in un valore <see cref="T:System.String" />, utilizzando il formato numerico specificato.</summary>
      <param name="Value">Valore <see cref="T:System.Double" /> da convertire.</param>
      <param name="NumberFormat">Formato numerico da utilizzare, in base a <see cref="T:System.Globalization.NumberFormatInfo" />.</param>
      <returns>Rappresentazione in forma di stringa del valore <see cref="T:System.Double" />.</returns>
    </member>
    <member name="M:Microsoft.VisualBasic.CompilerServices.Conversions.ToString(System.Int16)">
      <summary>Converte un valore <see langword="Short" /> in valore <see cref="T:System.String" />.</summary>
      <param name="Value">Valore <see langword="Short" /> da convertire.</param>
      <returns>Rappresentazione <see langword="String" /> del valore <see langword="Short" />.</returns>
    </member>
    <member name="M:Microsoft.VisualBasic.CompilerServices.Conversions.ToString(System.Int32)">
      <summary>Converte un intero in un valore <see cref="T:System.String" />.</summary>
      <param name="Value">Valore <see langword="int" /> da convertire.</param>
      <returns>Rappresentazione <see langword="String" /> del valore <see langword="int" />.</returns>
    </member>
    <member name="M:Microsoft.VisualBasic.CompilerServices.Conversions.ToString(System.Int64)">
      <summary>Converte un valore <see langword="Long" /> in valore <see cref="T:System.String" />.</summary>
      <param name="Value">Valore <see langword="Long" /> da convertire.</param>
      <returns>Rappresentazione <see langword="String" /> del valore <see langword="Long" />.</returns>
    </member>
    <member name="M:Microsoft.VisualBasic.CompilerServices.Conversions.ToString(System.Object)">
      <summary>Converte un oggetto in un valore <see cref="T:System.String" />.</summary>
      <param name="Value">Oggetto da convertire.</param>
      <returns>Rappresentazione <see langword="String" /> dell'oggetto.</returns>
    </member>
    <member name="M:Microsoft.VisualBasic.CompilerServices.Conversions.ToString(System.Single)">
      <summary>Converte un valore <see cref="T:System.Single" /> (numero a virgola mobile e precisione singola) in un valore <see cref="T:System.String" />.</summary>
      <param name="Value">Valore <see cref="T:System.Single" /> da convertire.</param>
      <returns>Rappresentazione in forma di stringa del valore <see cref="T:System.Single" />.</returns>
    </member>
    <member name="M:Microsoft.VisualBasic.CompilerServices.Conversions.ToString(System.Single,System.Globalization.NumberFormatInfo)">
      <summary>Converte un valore <see cref="T:System.Single" /> in un valore <see cref="T:System.String" />, utilizzando il formato numerico specificato.</summary>
      <param name="Value">Valore <see cref="T:System.Single" /> da convertire.</param>
      <param name="NumberFormat">Formato numerico da utilizzare, in base a <see cref="T:System.Globalization.NumberFormatInfo" />.</param>
      <returns>Rappresentazione in forma di stringa del valore <see cref="T:System.Single" />.</returns>
    </member>
    <member name="M:Microsoft.VisualBasic.CompilerServices.Conversions.ToString(System.UInt32)">
      <summary>Converte un valore <see langword="uint" /> in valore <see cref="T:System.String" />.</summary>
      <param name="Value">Valore <see langword="Uint" /> da convertire.</param>
      <returns>Rappresentazione <see langword="String" /> del valore <see langword="Uint" />.</returns>
    </member>
    <member name="M:Microsoft.VisualBasic.CompilerServices.Conversions.ToString(System.UInt64)">
      <summary>Converte un valore <see langword="Ulong" /> in valore <see cref="T:System.String" />.</summary>
      <param name="Value">Valore <see langword="Ulong" /> da convertire.</param>
      <returns>Rappresentazione <see langword="String" /> del valore <see langword="Ulong" />.</returns>
    </member>
    <member name="M:Microsoft.VisualBasic.CompilerServices.Conversions.ToUInteger(System.Object)">
      <summary>Converte un oggetto in un valore <see langword="Uint" />.</summary>
      <param name="Value">Oggetto da convertire.</param>
      <returns>Valore <see langword="Uint" /> dell'oggetto.</returns>
    </member>
    <member name="M:Microsoft.VisualBasic.CompilerServices.Conversions.ToUInteger(System.String)">
      <summary>Converte una stringa in un valore <see langword="Uint" />.</summary>
      <param name="Value">Stringa da convertire.</param>
      <returns>Valore <see langword="Uint" /> della stringa.</returns>
    </member>
    <member name="M:Microsoft.VisualBasic.CompilerServices.Conversions.ToULong(System.Object)">
      <summary>Converte un oggetto in un valore <see langword="Ulong" />.</summary>
      <param name="Value">Oggetto da convertire.</param>
      <returns>Valore <see langword="Ulong" /> dell'oggetto.</returns>
    </member>
    <member name="M:Microsoft.VisualBasic.CompilerServices.Conversions.ToULong(System.String)">
      <summary>Converte una stringa in un valore <see langword="Ulong" />.</summary>
      <param name="Value">Stringa da convertire.</param>
      <returns>Valore <see langword="Ulong" /> della stringa.</returns>
    </member>
    <member name="M:Microsoft.VisualBasic.CompilerServices.Conversions.ToUShort(System.Object)">
      <summary>Converte un oggetto in un valore <see langword="Ushort" />.</summary>
      <param name="Value">Oggetto da convertire.</param>
      <returns>Valore <see langword="Ushort" /> dell'oggetto.</returns>
    </member>
    <member name="M:Microsoft.VisualBasic.CompilerServices.Conversions.ToUShort(System.String)">
      <summary>Converte una stringa in un valore <see langword="Ushort" />.</summary>
      <param name="Value">Stringa da convertire.</param>
      <returns>Valore <see langword="Ushort" /> della stringa.</returns>
    </member>
    <member name="T:Microsoft.VisualBasic.CompilerServices.DateType">
      <summary>A partire da Visual Basic 2005, questa classe viene considerata deprecata.</summary>
    </member>
    <member name="M:Microsoft.VisualBasic.CompilerServices.DateType.FromObject(System.Object)">
      <summary>Restituisce un valore <see langword="Date" /> corrispondente all'oggetto specificato.</summary>
      <param name="Value">Obbligatorio. Oggetto da convertire in un valore <see langword="Date" />.</param>
      <returns>Valore <see langword="Date" /> corrispondente a <paramref name="Value" />.</returns>
    </member>
    <member name="M:Microsoft.VisualBasic.CompilerServices.DateType.FromString(System.String)">
      <summary>Restituisce un valore <see langword="Date" /> corrispondente alla stringa specificata.</summary>
      <param name="Value">Obbligatorio. Stringa da convertire in un valore <see langword="Date" />.</param>
      <returns>Valore <see langword="Date" /> corrispondente a <paramref name="Value" />.</returns>
    </member>
    <member name="M:Microsoft.VisualBasic.CompilerServices.DateType.FromString(System.String,System.Globalization.CultureInfo)">
      <summary>Restituisce un valore <see langword="Date" /> corrispondente alla stringa specificata, nonché informazioni sulle impostazioni cultura.</summary>
      <param name="Value">Obbligatorio. Stringa da convertire in un valore <see langword="Date" />.</param>
      <param name="culture">Obbligatorio. Oggetto <see cref="T:System.Globalization.CultureInfo" /> che definisce la modalità di formattazione e visualizzazione dei valori di data, in base alle impostazioni cultura.</param>
      <returns>Valore <see langword="Date" /> corrispondente a <paramref name="Value" />.</returns>
    </member>
    <member name="T:Microsoft.VisualBasic.CompilerServices.DecimalType">
      <summary>A partire da Visual Basic 2005, questa classe viene considerata deprecata.</summary>
    </member>
    <member name="M:Microsoft.VisualBasic.CompilerServices.DecimalType.FromBoolean(System.Boolean)">
      <summary>Restituisce un valore <see langword="Decimal" /> corrispondente al valore <see langword="Boolean" /> specificato.</summary>
      <param name="Value">Obbligatorio. Valore <see langword="Boolean" /> da convertire in valore <see langword="Decimal" />.</param>
      <returns>Valore <see langword="Decimal" /> corrispondente a <paramref name="Value" />.</returns>
    </member>
    <member name="M:Microsoft.VisualBasic.CompilerServices.DecimalType.FromObject(System.Object)">
      <summary>Restituisce un valore <see langword="Decimal" /> corrispondente all'oggetto specificato.</summary>
      <param name="Value">Obbligatorio. Oggetto da convertire in un valore <see langword="Decimal" />.</param>
      <returns>Valore <see langword="Decimal" /> corrispondente a <paramref name="Value" />.</returns>
    </member>
    <member name="M:Microsoft.VisualBasic.CompilerServices.DecimalType.FromObject(System.Object,System.Globalization.NumberFormatInfo)">
      <summary>Restituisce un valore <see langword="Decimal" /> corrispondente all'oggetto specificato, nonché informazioni sul formato numerico.</summary>
      <param name="Value">Obbligatorio. Oggetto da convertire in un valore <see langword="Decimal" />.</param>
      <param name="NumberFormat">Oggetto <see cref="T:System.Globalization.NumberFormatInfo" /> che definisce la modalità di formattazione e visualizzazione dei valori numerici, in base alle impostazioni cultura.</param>
      <returns>Valore <see langword="Decimal" /> corrispondente a <paramref name="Value" />.</returns>
    </member>
    <member name="M:Microsoft.VisualBasic.CompilerServices.DecimalType.FromString(System.String)">
      <summary>Restituisce un valore <see langword="Decimal" /> corrispondente alla stringa specificata.</summary>
      <param name="Value">Obbligatorio. Stringa da convertire in un valore <see langword="Decimal" />.</param>
      <returns>Valore <see langword="Decimal" /> corrispondente a <paramref name="Value" />.</returns>
    </member>
    <member name="M:Microsoft.VisualBasic.CompilerServices.DecimalType.FromString(System.String,System.Globalization.NumberFormatInfo)">
      <summary>Restituisce un valore <see langword="Decimal" /> corrispondente alla stringa specificata, nonché informazioni sul formato numerico.</summary>
      <param name="Value">Obbligatorio. Stringa da convertire in un valore <see langword="Decimal" />.</param>
      <param name="NumberFormat">Oggetto <see cref="T:System.Globalization.NumberFormatInfo" /> che definisce la modalità di formattazione e visualizzazione dei valori numerici, in base alle impostazioni cultura.</param>
      <returns>Valore <see langword="Decimal" /> corrispondente a <paramref name="Value" />.</returns>
    </member>
    <member name="M:Microsoft.VisualBasic.CompilerServices.DecimalType.Parse(System.String,System.Globalization.NumberFormatInfo)">
      <summary>Restituisce un valore <see langword="Decimal" /> corrispondente alla stringa specificata, nonché informazioni sul formato numerico.</summary>
      <param name="Value">Obbligatorio. Stringa da convertire in un valore <see langword="Decimal" />.</param>
      <param name="NumberFormat">Oggetto <see cref="T:System.Globalization.NumberFormatInfo" /> che definisce la modalità di formattazione e visualizzazione dei valori numerici, in base alle impostazioni cultura.</param>
      <returns>Valore <see langword="Decimal" /> corrispondente a <paramref name="Value" />.</returns>
    </member>
    <member name="T:Microsoft.VisualBasic.CompilerServices.DesignerGeneratedAttribute">
      <summary>Quando applicato a una classe, il compilatore chiama in modo implicito un metodo di inizializzazione dei componenti dal costruttore sintetico predefinito.</summary>
    </member>
    <member name="M:Microsoft.VisualBasic.CompilerServices.DesignerGeneratedAttribute.#ctor">
      <summary>Inizializza una nuova istanza dell'attributo <see cref="T:Microsoft.VisualBasic.CompilerServices.DesignerGeneratedAttribute" />.</summary>
    </member>
    <member name="T:Microsoft.VisualBasic.CompilerServices.DoubleType">
      <summary>A partire da Visual Basic 2005, questa classe viene considerata deprecata.</summary>
    </member>
    <member name="M:Microsoft.VisualBasic.CompilerServices.DoubleType.FromObject(System.Object)">
      <summary>Restituisce un valore <see cref="T:System.Double" /> corrispondente all'oggetto specificato.</summary>
      <param name="Value">Obbligatorio. Oggetto da convertire in un valore <see cref="T:System.Double" />.</param>
      <returns>Valore <see cref="T:System.Double" /> corrispondente a <paramref name="Value" />.</returns>
    </member>
    <member name="M:Microsoft.VisualBasic.CompilerServices.DoubleType.FromObject(System.Object,System.Globalization.NumberFormatInfo)">
      <summary>Restituisce un valore <see cref="T:System.Double" /> corrispondente all'oggetto specificato.</summary>
      <param name="Value">Obbligatorio. Oggetto da convertire in un valore <see cref="T:System.Double" />.</param>
      <param name="NumberFormat">Oggetto <see cref="T:System.Globalization.NumberFormatInfo" /> che definisce la modalità di formattazione e visualizzazione dei valori numerici, in base alle impostazioni cultura.</param>
      <returns>Valore <see cref="T:System.Double" /> corrispondente a <paramref name="Value" />.</returns>
    </member>
    <member name="M:Microsoft.VisualBasic.CompilerServices.DoubleType.FromString(System.String)">
      <summary>Restituisce un valore <see cref="T:System.Double" /> corrispondente alla stringa specificata.</summary>
      <param name="Value">Obbligatorio. Stringa da convertire in un valore <see cref="T:System.Double" />.</param>
      <returns>Valore <see cref="T:System.Double" /> corrispondente a <paramref name="Value" />.</returns>
    </member>
    <member name="M:Microsoft.VisualBasic.CompilerServices.DoubleType.FromString(System.String,System.Globalization.NumberFormatInfo)">
      <summary>Restituisce un valore <see cref="T:System.Double" /> corrispondente alla stringa specificata, nonché informazioni sul formato numerico.</summary>
      <param name="Value">Obbligatorio. Stringa da convertire in un valore <see cref="T:System.Double" />.</param>
      <param name="NumberFormat">Oggetto <see cref="T:System.Globalization.NumberFormatInfo" /> che definisce la modalità di formattazione e visualizzazione dei valori numerici, in base alle impostazioni cultura.</param>
      <returns>Valore <see cref="T:System.Double" /> corrispondente a <paramref name="Value" />.</returns>
    </member>
    <member name="M:Microsoft.VisualBasic.CompilerServices.DoubleType.Parse(System.String)">
      <summary>Restituisce un valore <see cref="T:System.Double" /> corrispondente alla stringa specificata.</summary>
      <param name="Value">Obbligatorio. Stringa da convertire in un valore <see cref="T:System.Double" />.</param>
      <returns>Valore <see cref="T:System.Double" /> corrispondente a <paramref name="Value" />.</returns>
    </member>
    <member name="M:Microsoft.VisualBasic.CompilerServices.DoubleType.Parse(System.String,System.Globalization.NumberFormatInfo)">
      <summary>Restituisce un valore <see cref="T:System.Double" /> corrispondente alla stringa specificata, nonché informazioni sul formato numerico.</summary>
      <param name="Value">Obbligatorio. Stringa da convertire in un valore <see cref="T:System.Double" />.</param>
      <param name="NumberFormat">Oggetto <see cref="T:System.Globalization.NumberFormatInfo" /> che definisce la modalità di formattazione e visualizzazione dei valori numerici, in base alle impostazioni cultura.</param>
      <returns>Valore <see cref="T:System.Double" /> corrispondente a <paramref name="Value" />.</returns>
    </member>
    <member name="T:Microsoft.VisualBasic.CompilerServices.IncompleteInitialization">
      <summary>Il compilatore Visual Basic utilizza questa classe durante l'inizializzazione locale statica; non è destinato a essere chiamato in modo diretto dal codice. Questo tipo di eccezione viene generato se una variabile locale statica non viene inizializzata.</summary>
    </member>
    <member name="M:Microsoft.VisualBasic.CompilerServices.IncompleteInitialization.#ctor">
      <summary>Inizializza una nuova istanza della classe <see cref="T:Microsoft.VisualBasic.CompilerServices.IncompleteInitialization" />.</summary>
    </member>
    <member name="T:Microsoft.VisualBasic.CompilerServices.IntegerType">
      <summary>A partire da Visual Basic 2005, questa classe viene considerata deprecata.</summary>
    </member>
    <member name="M:Microsoft.VisualBasic.CompilerServices.IntegerType.FromObject(System.Object)">
      <summary>Restituisce un valore <see langword="Integer" /> corrispondente all'oggetto specificato.</summary>
      <param name="Value">Obbligatorio. Oggetto da convertire in un valore <see langword="Integer" />.</param>
      <returns>Valore <see langword="Integer" /> corrispondente a <paramref name="Value" />.</returns>
    </member>
    <member name="M:Microsoft.VisualBasic.CompilerServices.IntegerType.FromString(System.String)">
      <summary>Restituisce un valore <see langword="Integer" /> corrispondente alla stringa specificata.</summary>
      <param name="Value">Obbligatorio. Stringa da convertire in un valore <see langword="Integer" />.</param>
      <returns>Valore <see langword="Integer" /> corrispondente a <paramref name="Value" />.</returns>
    </member>
    <member name="T:Microsoft.VisualBasic.CompilerServices.LateBinding">
      <summary>A partire da Visual Basic 2005, questa classe viene considerata deprecata.</summary>
    </member>
    <member name="M:Microsoft.VisualBasic.CompilerServices.LateBinding.LateCall(System.Object,System.Type,System.String,System.Object[],System.String[],System.Boolean[])">
      <summary>Esegue una chiamata ad associazione tardiva a un metodo di oggetto.</summary>
      <param name="o">Oggetto sul quale chiamare un metodo.</param>
      <param name="objType">Tipo dell'oggetto.</param>
      <param name="name">Nome del metodo da chiamare per <paramref name="o" />.</param>
      <param name="args">Matrice dei valori di parametri da passare al metodo.</param>
      <param name="paramnames">Matrice contenente i nomi dei parametri a cui vengono passati i valori nella matrice <paramref name="args" />.</param>
      <param name="CopyBack">Matrice di valori <see langword="Boolean" />, dove <see langword="True" /> indica che al parametro associato viene passato <see langword="ByRef" />.</param>
    </member>
    <member name="M:Microsoft.VisualBasic.CompilerServices.LateBinding.LateGet(System.Object,System.Type,System.String,System.Object[],System.String[],System.Boolean[])">
      <summary>Restituisce un valore ad associazione tardiva da un oggetto.</summary>
      <param name="o">Oggetto dal quale restituire il valore.</param>
      <param name="objType">Tipo dell'oggetto.</param>
      <param name="name">Nome del membro di <paramref name="o" /> dal quale recuperare un valore.</param>
      <param name="args">Matrice di uno o più valori di indice che specificano il percorso in <paramref name="o" /> se <paramref name="o" /> è una matrice unidimensionale o multidimensionale oppure valori di argomento da passare all'oggetto <paramref name="o" />.</param>
      <param name="paramnames">Matrice contenente i nomi dei parametri a cui vengono passati i valori nella matrice <paramref name="args" />.</param>
      <param name="CopyBack">Matrice di valori <see langword="Boolean" />, dove <see langword="True" /> indica che al parametro associato viene passato <see langword="ByRef" />.</param>
      <returns>Se <paramref name="o" /> è una matrice, valore di <paramref name="o" /> nel percorso specificato da <paramref name="args" />. Se <paramref name="o" /> è un oggetto, valore restituito di <paramref name="o" /> richiamato mediante i parametri denominati in <paramref name="paramnames" /> e i rispettivi valori associati in <paramref name="args" />.</returns>
    </member>
    <member name="M:Microsoft.VisualBasic.CompilerServices.LateBinding.LateIndexGet(System.Object,System.Object[],System.String[])">
      <summary>Restituisce un valore ad associazione tardiva da un oggetto, utilizzando l'indice o i parametri specificati.</summary>
      <param name="o">Oggetto dal quale restituire il valore.</param>
      <param name="args">Matrice di uno o più valori di indice che specificano il percorso in <paramref name="o" /> se <paramref name="o" /> è una matrice unidimensionale o multidimensionale oppure valori di argomento da passare all'oggetto <paramref name="o" />.</param>
      <param name="paramnames">Matrice contenente i nomi dei parametri a cui vengono passati i valori nella matrice <paramref name="args" />.</param>
      <returns>Se <paramref name="o" /> è una matrice, valore di <paramref name="o" /> nel percorso specificato da <paramref name="args" />. Se <paramref name="o" /> è un oggetto, valore restituito di <paramref name="o" /> richiamato mediante i parametri denominati in <paramref name="paramnames" /> e i rispettivi valori associati in <paramref name="args" />.</returns>
    </member>
    <member name="M:Microsoft.VisualBasic.CompilerServices.LateBinding.LateIndexSet(System.Object,System.Object[],System.String[])">
      <summary>Imposta un valore ad associazione tardiva di un oggetto, utilizzando i parametri specificati.</summary>
      <param name="o">Oggetto per il quale impostare il valore.</param>
      <param name="args">Matrice di uno o più valori di indice che specificano il percorso in <paramref name="o" /> se <paramref name="o" /> è una matrice unidimensionale o multidimensionale oppure valori di argomento da passare all'oggetto <paramref name="o" />.</param>
      <param name="paramnames">Matrice contenente i nomi dei parametri a cui vengono passati i valori nella matrice <paramref name="args" />.</param>
    </member>
    <member name="M:Microsoft.VisualBasic.CompilerServices.LateBinding.LateIndexSetComplex(System.Object,System.Object[],System.String[],System.Boolean,System.Boolean)">
      <summary>Imposta un valore ad associazione tardiva di un oggetto, utilizzando i parametri specificati.</summary>
      <param name="o">Oggetto per il quale impostare il valore.</param>
      <param name="args">Matrice di uno o più valori di parametro da passare all'oggetto <paramref name="o" />.</param>
      <param name="paramnames">Matrice contenente i nomi dei parametri a cui vengono passati i valori nella matrice <paramref name="args" />.</param>
      <param name="OptimisticSet">
        <see langword="True" /> per eliminare l'eccezione generata quando il membro impostato non viene trovato.</param>
      <param name="RValueBase">
        <see langword="True" /> per identificare <paramref name="o" /> come risultato di un'espressione ad associazione tardiva.</param>
    </member>
    <member name="M:Microsoft.VisualBasic.CompilerServices.LateBinding.LateSet(System.Object,System.Type,System.String,System.Object[],System.String[])">
      <summary>Imposta un valore ad associazione tardiva di un membro di un oggetto, utilizzando i parametri specificati.</summary>
      <param name="o">Oggetto per il quale impostare il valore del membro.</param>
      <param name="objType">Tipo dell'oggetto.</param>
      <param name="name">Nome del membro da impostare.</param>
      <param name="args">Matrice di uno o più valori di parametro da passare al membro di <paramref name="o" />.</param>
      <param name="paramnames">Matrice contenente i nomi dei parametri a cui vengono passati i valori nella matrice <paramref name="args" />.</param>
    </member>
    <member name="M:Microsoft.VisualBasic.CompilerServices.LateBinding.LateSetComplex(System.Object,System.Type,System.String,System.Object[],System.String[],System.Boolean,System.Boolean)">
      <summary>Imposta un valore ad associazione tardiva di un membro di un oggetto, utilizzando i parametri specificati.</summary>
      <param name="o">Oggetto per il quale impostare il valore del membro.</param>
      <param name="objType">Tipo dell'oggetto.</param>
      <param name="name">Nome del membro da impostare.</param>
      <param name="args">Matrice di uno o più valori di parametro da passare al membro di <paramref name="o" />.</param>
      <param name="paramnames">Matrice contenente i nomi dei parametri a cui vengono passati i valori nella matrice <paramref name="args" />.</param>
      <param name="OptimisticSet">
        <see langword="True" /> per eliminare l'eccezione generata quando il membro impostato non viene trovato.</param>
      <param name="RValueBase">
        <see langword="True" /> per identificare <paramref name="o" /> come risultato di un'espressione ad associazione tardiva.</param>
    </member>
    <member name="T:Microsoft.VisualBasic.CompilerServices.LikeOperator">
      <summary>Questa classe offre funzioni di supporto che il compilatore Visual Basic usa per eseguire interventi per Like Operator. Non è destinata a essere chiamata direttamente dal codice.</summary>
    </member>
    <member name="M:Microsoft.VisualBasic.CompilerServices.LikeOperator.LikeObject(System.Object,System.Object,Microsoft.VisualBasic.CompareMethod)">
      <summary>In presenza di due oggetti, ne esegue il confronto binario o di testo. Questo metodo di supporto non deve essere chiamato in modo diretto dal codice.</summary>
      <param name="Source">Stringa da confrontare.</param>
      <param name="Pattern">Stringa con la quale confrontare <paramref name="Source" />.</param>
      <param name="CompareOption">Enumerazione <see cref="T:Microsoft.VisualBasic.CompareMethod" /> che specifica se utilizzare il confronto di testo. Se <see cref="F:Microsoft.VisualBasic.CompareMethod.Text" />, il metodo utilizza il confronto di testo; se <see cref="F:Microsoft.VisualBasic.CompareMethod.Binary" />, utilizza il confronto binario.</param>
      <returns>
        <see langword="True" /> se la stringhe corrispondono; in caso contrario, <see langword="False" />.</returns>
    </member>
    <member name="M:Microsoft.VisualBasic.CompilerServices.LikeOperator.LikeString(System.String,System.String,Microsoft.VisualBasic.CompareMethod)">
      <summary>In presenza di due stringhe, ne esegue il confronto binario o di testo. Questo metodo di supporto non deve essere chiamato in modo diretto dal codice.</summary>
      <param name="Source">Stringa da confrontare.</param>
      <param name="Pattern">Stringa con la quale confrontare <paramref name="Source" />.</param>
      <param name="CompareOption">Enumerazione <see cref="T:Microsoft.VisualBasic.CompareMethod" /> che specifica se utilizzare il confronto di testo. Se <see cref="F:Microsoft.VisualBasic.CompareMethod.Text" />, il metodo utilizza il confronto di testo; se <see cref="F:Microsoft.VisualBasic.CompareMethod.Binary" />, utilizza il confronto binario.</param>
      <returns>
        <see langword="True" /> se la stringhe corrispondono; in caso contrario, <see langword="False" />.</returns>
    </member>
    <member name="T:Microsoft.VisualBasic.CompilerServices.LongType">
      <summary>A partire da Visual Basic 2005, questa classe viene considerata deprecata.</summary>
    </member>
    <member name="M:Microsoft.VisualBasic.CompilerServices.LongType.FromObject(System.Object)">
      <summary>Restituisce un valore <see langword="Long" /> corrispondente all'oggetto specificato.</summary>
      <param name="Value">Obbligatorio. Oggetto da convertire in un valore <see langword="Long" />.</param>
      <returns>Valore <see langword="Long" /> corrispondente a <paramref name="Value" />.</returns>
    </member>
    <member name="M:Microsoft.VisualBasic.CompilerServices.LongType.FromString(System.String)">
      <summary>Restituisce un valore <see langword="Long" /> corrispondente alla stringa specificata.</summary>
      <param name="Value">Obbligatorio. Stringa da convertire in un valore <see langword="Long" />.</param>
      <returns>Valore <see langword="Long" /> corrispondente a <paramref name="Value" />.</returns>
    </member>
    <member name="T:Microsoft.VisualBasic.CompilerServices.NewLateBinding">
      <summary>Questa classe fornisce funzioni di supporto che il compilatore Visual Basic utilizza per le chiamate di associazione tardiva. Non deve essere chiamata in modo diretto dal codice.</summary>
    </member>
    <member name="M:Microsoft.VisualBasic.CompilerServices.NewLateBinding.FallbackCall(System.Object,System.String,System.Object[],System.String[],System.Boolean)">
      <summary>Esegue un metodo di associazione tardiva o una chiamata di funzione. Questo metodo di supporto non deve essere chiamato in modo diretto dal codice.</summary>
      <param name="Instance">Istanza dell'oggetto di chiamata che espone la proprietà o il metodo.</param>
      <param name="MemberName">Nome della proprietà o del metodo nell'oggetto di chiamata.</param>
      <param name="Arguments">Matrice contenente gli argomenti da passare alla proprietà o al metodo chiamati.</param>
      <param name="ArgumentNames">Matrice di nomi di argomento.</param>
      <param name="IgnoreReturn">Valore <see langword="Boolean" /> che indica se il valore restituito può essere ignorato.</param>
      <returns>Istanza dell'oggetto di chiamata.</returns>
    </member>
    <member name="M:Microsoft.VisualBasic.CompilerServices.NewLateBinding.FallbackGet(System.Object,System.String,System.Object[],System.String[])">
      <summary>Esegue un metodo Get della proprietà di associazione tardiva o una chiamata di accesso al campo. Questo metodo di supporto non deve essere chiamato in modo diretto dal codice.</summary>
      <param name="Instance">Istanza dell'oggetto di chiamata che espone la proprietà o il metodo.</param>
      <param name="MemberName">Nome della proprietà o del metodo nell'oggetto di chiamata.</param>
      <param name="Arguments">Matrice contenente gli argomenti da passare alla proprietà o al metodo chiamati.</param>
      <param name="ArgumentNames">Matrice di nomi di argomento.</param>
      <returns>Istanza dell'oggetto di chiamata.</returns>
    </member>
    <member name="M:Microsoft.VisualBasic.CompilerServices.NewLateBinding.FallbackIndexSet(System.Object,System.Object[],System.String[])">
      <summary>Esegue un metodo Set della proprietà di associazione tardiva o una chiamata di scrittura del campo. Questo metodo di supporto non deve essere chiamato in modo diretto dal codice.</summary>
      <param name="Instance">Istanza dell'oggetto di chiamata che espone la proprietà o il metodo.</param>
      <param name="Arguments">Matrice contenente gli argomenti da passare alla proprietà o al metodo chiamati.</param>
      <param name="ArgumentNames">Matrice di nomi di argomento.</param>
    </member>
    <member name="M:Microsoft.VisualBasic.CompilerServices.NewLateBinding.FallbackIndexSetComplex(System.Object,System.Object[],System.String[],System.Boolean,System.Boolean)">
      <summary>Esegue un metodo Set della proprietà di associazione tardiva o una chiamata di scrittura del campo. Questo metodo di supporto non deve essere chiamato in modo diretto dal codice.</summary>
      <param name="Instance">Istanza dell'oggetto di chiamata che espone la proprietà o il metodo.</param>
      <param name="Arguments">Matrice contenente gli argomenti da passare alla proprietà o al metodo chiamati.</param>
      <param name="ArgumentNames">Matrice di nomi di argomento.</param>
      <param name="OptimisticSet">Valore <see langword="Boolean" /> utilizzato per determinare se l'operazione di impostazione funzionerà. Impostare su <see langword="True" /> se si suppone sia stato impostato un valore intermedio nella proprietà o nel campo; in caso contrario, <see langword="False" />.</param>
      <param name="RValueBase">Valore <see langword="Boolean" /> che specifica quando il riferimento di base del riferimento tardivo è <see langword="RValue" />. Impostare su <see langword="True" /> quando il riferimento di base del riferimento tardivo è <see langword="RValue" />. Ciò consente di generare un'eccezione in fase di esecuzione per le assegnazioni tardive ai campi di <see langword="RValues" /> di tipi dei valori. In caso contrario, impostare su <see langword="False" />.</param>
    </member>
    <member name="M:Microsoft.VisualBasic.CompilerServices.NewLateBinding.FallbackInvokeDefault1(System.Object,System.Object[],System.String[],System.Boolean)">
      <summary>Esegue un'operazione get ad associazione tardiva per ottenere la proprietà o il campo predefinito oppure una chiamata alla funzione o al metodo predefinito. Questo metodo di supporto non deve essere chiamato in modo diretto dal codice.</summary>
      <param name="Instance">Istanza dell'oggetto di chiamata che espone la proprietà o il metodo. Se <paramref name="Instance" /> è di tipo <see cref="T:System.Dynamic.IDynamicMetaObjectProvider" />, eseguire l'associazione tramite DLR (Dynamic Language Runtime); in caso contrario eseguire un'associazione tardiva standard.</param>
      <param name="Arguments">Matrice contenente gli argomenti da passare alla proprietà o al metodo chiamati.</param>
      <param name="ArgumentNames">Matrice di nomi di argomento.</param>
      <param name="ReportErrors">Valore <see langword="Boolean" /> utilizzato per specificare se generare eccezioni quando viene rilevato un errore. Impostare su <see langword="True" /> per generare eccezioni. Impostare su <see langword="False" /> per restituire <see langword="Nothing" /> quando viene rilevato un errore.</param>
      <returns>Istanza dell'oggetto di chiamata.</returns>
    </member>
    <member name="M:Microsoft.VisualBasic.CompilerServices.NewLateBinding.FallbackInvokeDefault2(System.Object,System.Object[],System.String[],System.Boolean)">
      <summary>Esegue un'operazione get ad associazione tardiva per ottenere la proprietà o il campo predefinito oppure una chiamata alla funzione o al metodo predefinito. Questo metodo di supporto non deve essere chiamato in modo diretto dal codice.</summary>
      <param name="Instance">Istanza dell'oggetto di chiamata che espone la proprietà o il metodo.</param>
      <param name="Arguments">Matrice contenente gli argomenti da passare alla proprietà o al metodo chiamati.</param>
      <param name="ArgumentNames">Matrice di nomi di argomento.</param>
      <param name="ReportErrors">Valore <see langword="Boolean" /> utilizzato per specificare se generare eccezioni quando viene rilevato un errore. Impostare su <see langword="True" /> per generare eccezioni. Impostare su <see langword="False" /> per restituire <see langword="Nothing" /> quando viene rilevato un errore.</param>
      <returns>Istanza dell'oggetto di chiamata.</returns>
    </member>
    <member name="M:Microsoft.VisualBasic.CompilerServices.NewLateBinding.FallbackSet(System.Object,System.String,System.Object[])">
      <summary>Esegue un metodo Set della proprietà di associazione tardiva o una chiamata di scrittura del campo. Questo metodo di supporto non deve essere chiamato in modo diretto dal codice.</summary>
      <param name="Instance">Istanza dell'oggetto di chiamata che espone la proprietà o il metodo.</param>
      <param name="MemberName">Nome della proprietà o del metodo nell'oggetto di chiamata.</param>
      <param name="Arguments">Matrice contenente gli argomenti da passare alla proprietà o al metodo chiamati.</param>
    </member>
    <member name="M:Microsoft.VisualBasic.CompilerServices.NewLateBinding.FallbackSetComplex(System.Object,System.String,System.Object[],System.Boolean,System.Boolean)">
      <summary>Esegue un metodo Set della proprietà di associazione tardiva o una chiamata di scrittura del campo. Questo metodo di supporto non deve essere chiamato in modo diretto dal codice.</summary>
      <param name="Instance">Istanza dell'oggetto di chiamata che espone la proprietà o il metodo.</param>
      <param name="MemberName">Nome della proprietà o del metodo nell'oggetto di chiamata.</param>
      <param name="Arguments">Matrice contenente gli argomenti da passare alla proprietà o al metodo chiamati.</param>
      <param name="OptimisticSet">Valore <see langword="Boolean" /> utilizzato per determinare se l'operazione di impostazione funzionerà. Impostare su <see langword="True" /> se si suppone sia stato impostato un valore intermedio nella proprietà o nel campo; in caso contrario, <see langword="False" />.</param>
      <param name="RValueBase">Valore <see langword="Boolean" /> che specifica quando il riferimento di base del riferimento tardivo è <see langword="RValue" />. Impostare su <see langword="True" /> quando il riferimento di base del riferimento tardivo è <see langword="RValue" />. Ciò consente di generare un'eccezione in fase di esecuzione per le assegnazioni tardive ai campi di <see langword="RValues" /> di tipi dei valori. In caso contrario, impostare su <see langword="False" />.</param>
    </member>
    <member name="M:Microsoft.VisualBasic.CompilerServices.NewLateBinding.LateCall(System.Object,System.Type,System.String,System.Object[],System.String[],System.Type[],System.Boolean[],System.Boolean)">
      <summary>Esegue un metodo di associazione tardiva o una chiamata di funzione. Questo metodo di supporto non deve essere chiamato in modo diretto dal codice.</summary>
      <param name="Instance">Istanza dell'oggetto di chiamata che espone la proprietà o il metodo.</param>
      <param name="Type">Tipo dell'oggetto di chiamata.</param>
      <param name="MemberName">Nome della proprietà o del metodo nell'oggetto di chiamata.</param>
      <param name="Arguments">Matrice contenente gli argomenti da passare alla proprietà o al metodo chiamati.</param>
      <param name="ArgumentNames">Matrice di nomi di argomento.</param>
      <param name="TypeArguments">Matrice di tipi di argomento utilizzata solo per chiamate generiche per passare i tipi di argomento.</param>
      <param name="CopyBack">Matrice di valori <see langword="Boolean" /> che il gestore di associazione tardivo utilizza per comunicare nuovamente al sito di chiamata gli argomenti che corrispondono ai parametri <see langword="ByRef" />. Ogni valore <see langword="True" /> indica che gli argomenti corrispondono e devono essere copiati una volta completata la chiamata al metodo <see langword="LateCall" />.</param>
      <param name="IgnoreReturn">Valore <see langword="Boolean" /> che indica se il valore restituito può essere ignorato.</param>
      <returns>Istanza dell'oggetto di chiamata.</returns>
    </member>
    <member name="M:Microsoft.VisualBasic.CompilerServices.NewLateBinding.LateCallInvokeDefault(System.Object,System.Object[],System.String[],System.Boolean)">
      <summary>Esegue una chiamata ad associazione tardiva alla funzione o al metodo predefinito. Questo metodo di supporto non deve essere chiamato in modo diretto dal codice.</summary>
      <param name="Instance">Istanza dell'oggetto di chiamata che espone la proprietà o il metodo.</param>
      <param name="Arguments">Matrice contenente gli argomenti da passare alla proprietà o al metodo chiamati.</param>
      <param name="ArgumentNames">Matrice di nomi di argomento.</param>
      <param name="ReportErrors">Valore <see langword="Boolean" /> utilizzato per specificare se generare eccezioni quando viene rilevato un errore. Impostare su <see langword="True" /> per generare eccezioni. Impostare su <see langword="False" /> per restituire <see langword="Nothing" /> quando viene rilevato un errore.</param>
      <returns>Istanza dell'oggetto di chiamata.</returns>
    </member>
    <member name="M:Microsoft.VisualBasic.CompilerServices.NewLateBinding.LateGet(System.Object,System.Type,System.String,System.Object[],System.String[],System.Type[],System.Boolean[])">
      <summary>Esegue un metodo Get della proprietà di associazione tardiva o una chiamata di accesso al campo. Questo metodo di supporto non deve essere chiamato in modo diretto dal codice.</summary>
      <param name="Instance">Istanza dell'oggetto di chiamata che espone la proprietà o il metodo.</param>
      <param name="Type">Tipo dell'oggetto di chiamata.</param>
      <param name="MemberName">Nome della proprietà o del metodo nell'oggetto di chiamata.</param>
      <param name="Arguments">Matrice contenente gli argomenti da passare alla proprietà o al metodo chiamati.</param>
      <param name="ArgumentNames">Matrice di nomi di argomento.</param>
      <param name="TypeArguments">Matrice di tipi di argomento utilizzata solo per chiamate generiche per passare i tipi di argomento.</param>
      <param name="CopyBack">Matrice di valori <see langword="Boolean" /> che il gestore di associazione tardivo utilizza per comunicare nuovamente al sito di chiamata gli argomenti che corrispondono ai parametri <see langword="ByRef" />. Ogni valore <see langword="True" /> indica che gli argomenti corrispondono e devono essere copiati una volta completata la chiamata al metodo <see langword="LateCall" />.</param>
      <returns>Istanza dell'oggetto di chiamata.</returns>
    </member>
    <member name="M:Microsoft.VisualBasic.CompilerServices.NewLateBinding.LateGetInvokeDefault(System.Object,System.Object[],System.String[],System.Boolean)">
      <summary>Esegue un'operazione get ad associazione tardiva per ottenere la proprietà o il campo predefinito. Questo metodo di supporto non deve essere chiamato in modo diretto dal codice.</summary>
      <param name="Instance">Istanza dell'oggetto di chiamata che espone la proprietà o il metodo.</param>
      <param name="Arguments">Matrice contenente gli argomenti da passare alla proprietà o al metodo chiamati.</param>
      <param name="ArgumentNames">Matrice di nomi di argomento.</param>
      <param name="ReportErrors">Valore <see langword="Boolean" /> utilizzato per specificare se generare eccezioni quando viene rilevato un errore. Impostare su <see langword="True" /> per generare eccezioni. Impostare su <see langword="False" /> per restituire <see langword="Nothing" /> quando viene rilevato un errore.</param>
      <returns>Istanza dell'oggetto di chiamata.</returns>
    </member>
    <member name="M:Microsoft.VisualBasic.CompilerServices.NewLateBinding.LateIndexGet(System.Object,System.Object[],System.String[])">
      <summary>Esegue un metodo Get della proprietà di associazione tardiva o una chiamata di accesso al campo. Questo metodo di supporto non deve essere chiamato in modo diretto dal codice.</summary>
      <param name="Instance">Istanza dell'oggetto di chiamata che espone la proprietà o il metodo.</param>
      <param name="Arguments">Matrice contenente gli argomenti da passare alla proprietà o al metodo chiamati.</param>
      <param name="ArgumentNames">Matrice di nomi di argomento.</param>
      <returns>Istanza dell'oggetto di chiamata.</returns>
    </member>
    <member name="M:Microsoft.VisualBasic.CompilerServices.NewLateBinding.LateIndexSet(System.Object,System.Object[],System.String[])">
      <summary>Esegue un metodo Set della proprietà di associazione tardiva o una chiamata di scrittura del campo. Questo metodo di supporto non deve essere chiamato in modo diretto dal codice.</summary>
      <param name="Instance">Istanza dell'oggetto di chiamata che espone la proprietà o il metodo.</param>
      <param name="Arguments">Matrice contenente gli argomenti da passare alla proprietà o al metodo chiamati.</param>
      <param name="ArgumentNames">Matrice di nomi di argomento.</param>
    </member>
    <member name="M:Microsoft.VisualBasic.CompilerServices.NewLateBinding.LateIndexSetComplex(System.Object,System.Object[],System.String[],System.Boolean,System.Boolean)">
      <summary>Esegue un metodo Set della proprietà di associazione tardiva o una chiamata di scrittura del campo. Questo metodo di supporto non deve essere chiamato in modo diretto dal codice.</summary>
      <param name="Instance">Istanza dell'oggetto di chiamata che espone la proprietà o il metodo.</param>
      <param name="Arguments">Matrice contenente gli argomenti da passare alla proprietà o al metodo chiamati.</param>
      <param name="ArgumentNames">Matrice di nomi di argomento.</param>
      <param name="OptimisticSet">Valore <see langword="Boolean" /> utilizzato per determinare se l'operazione di impostazione funzionerà. Impostare su <see langword="True" /> se si suppone sia stato impostato un valore intermedio nella proprietà o nel campo; in caso contrario, <see langword="False" />.</param>
      <param name="RValueBase">Valore <see langword="Boolean" /> che specifica quando il riferimento di base del riferimento tardivo è <see langword="RValue" />. Impostare su <see langword="True" /> quando il riferimento di base del riferimento tardivo è <see langword="RValue" />. Ciò consente di generare un'eccezione in fase di esecuzione per le assegnazioni tardive ai campi di <see langword="RValues" /> di tipi dei valori. In caso contrario, impostare su <see langword="False" />.</param>
    </member>
    <member name="M:Microsoft.VisualBasic.CompilerServices.NewLateBinding.LateSet(System.Object,System.Type,System.String,System.Object[],System.String[],System.Type[])">
      <summary>Esegue un metodo Set della proprietà di associazione tardiva o una chiamata di scrittura del campo. Questo metodo di supporto non deve essere chiamato in modo diretto dal codice.</summary>
      <param name="Instance">Istanza dell'oggetto di chiamata che espone la proprietà o il metodo.</param>
      <param name="Type">Tipo dell'oggetto di chiamata.</param>
      <param name="MemberName">Nome della proprietà o del metodo nell'oggetto di chiamata.</param>
      <param name="Arguments">Matrice contenente gli argomenti da passare alla proprietà o al metodo chiamati.</param>
      <param name="ArgumentNames">Matrice di nomi di argomento.</param>
      <param name="TypeArguments">Matrice di tipi di argomento utilizzata solo per chiamate generiche per passare i tipi di argomento.</param>
    </member>
    <member name="M:Microsoft.VisualBasic.CompilerServices.NewLateBinding.LateSet(System.Object,System.Type,System.String,System.Object[],System.String[],System.Type[],System.Boolean,System.Boolean,Microsoft.VisualBasic.CallType)">
      <summary>Esegue un metodo Set della proprietà di associazione tardiva o una chiamata di scrittura del campo. Questo metodo di supporto non deve essere chiamato in modo diretto dal codice.</summary>
      <param name="Instance">Istanza dell'oggetto di chiamata che espone la proprietà o il metodo.</param>
      <param name="Type">Tipo dell'oggetto di chiamata.</param>
      <param name="MemberName">Nome della proprietà o del metodo nell'oggetto di chiamata.</param>
      <param name="Arguments">Matrice contenente gli argomenti da passare alla proprietà o al metodo chiamati.</param>
      <param name="ArgumentNames">Matrice di nomi di argomento.</param>
      <param name="TypeArguments">Matrice di tipi di argomento utilizzata solo per chiamate generiche per passare i tipi di argomento.</param>
      <param name="OptimisticSet">Valore <see langword="Boolean" /> utilizzato per determinare se l'operazione di impostazione funzionerà. Impostare su <see langword="True" /> se si suppone sia stato impostato un valore intermedio nella proprietà o nel campo; in caso contrario, <see langword="False" />.</param>
      <param name="RValueBase">Valore <see langword="Boolean" /> che specifica quando il riferimento di base del riferimento tardivo è <see langword="RValue" />. Impostare su <see langword="True" /> quando il riferimento di base del riferimento tardivo è <see langword="RValue" />. Ciò consente di generare un'eccezione in fase di esecuzione per le assegnazioni tardive ai campi di <see langword="RValues" /> di tipi dei valori. In caso contrario, impostare su <see langword="False" />.</param>
      <param name="CallType">Membro di enumerazione di tipo <see cref="T:Microsoft.VisualBasic.CallType" /> che rappresenta il tipo di routine chiamato. Il valore di CallType può essere <see langword="Method" />, <see langword="Get" /> o <see langword="Set" />. Solo <see langword="Set" /> viene utilizzato</param>
    </member>
    <member name="M:Microsoft.VisualBasic.CompilerServices.NewLateBinding.LateSetComplex(System.Object,System.Type,System.String,System.Object[],System.String[],System.Type[],System.Boolean,System.Boolean)">
      <summary>Esegue un metodo Set della proprietà di associazione tardiva o una chiamata di scrittura del campo. Questo metodo di supporto non deve essere chiamato in modo diretto dal codice.</summary>
      <param name="Instance">Istanza dell'oggetto di chiamata che espone la proprietà o il metodo.</param>
      <param name="Type">Tipo dell'oggetto di chiamata.</param>
      <param name="MemberName">Nome della proprietà o del metodo nell'oggetto di chiamata.</param>
      <param name="Arguments">Matrice contenente gli argomenti da passare alla proprietà o al metodo chiamati.</param>
      <param name="ArgumentNames">Matrice di nomi di argomento.</param>
      <param name="TypeArguments">Matrice di tipi di argomento utilizzata solo per chiamate generiche per passare i tipi di argomento.</param>
      <param name="OptimisticSet">Valore <see langword="Boolean" /> utilizzato per determinare se l'operazione di impostazione funzionerà. Impostare su <see langword="True" /> se si suppone sia stato impostato un valore intermedio nella proprietà o nel campo; in caso contrario, <see langword="False" />.</param>
      <param name="RValueBase">Valore <see langword="Boolean" /> che specifica quando il riferimento di base del riferimento tardivo è <see langword="RValue" />. Impostare su <see langword="True" /> quando il riferimento di base del riferimento tardivo è <see langword="RValue" />. Ciò consente di generare un'eccezione in fase di esecuzione per le assegnazioni tardive ai campi di <see langword="RValues" /> di tipi dei valori. In caso contrario, impostare su <see langword="False" />.</param>
    </member>
    <member name="T:Microsoft.VisualBasic.CompilerServices.ObjectFlowControl">
      <summary>Il compilatore Visual Basic utilizza questa classe per il controllo del flusso dell'oggetto; non è destinato a essere chiamato in modo diretto dal codice.</summary>
    </member>
    <member name="M:Microsoft.VisualBasic.CompilerServices.ObjectFlowControl.CheckForSyncLockOnValueType(System.Object)">
      <summary>Verifica un blocco di sincronizzazione nel tipo specificato.</summary>
      <param name="Expression">Tipo di dati per i quali verificare il blocco di sincronizzazione.</param>
    </member>
    <member name="T:Microsoft.VisualBasic.CompilerServices.ObjectFlowControl.ForLoopControl">
      <summary>Fornisce servizi al compilatore Visual Basic per la compilazione di cicli <see langword="For...Next" />.</summary>
    </member>
    <member name="M:Microsoft.VisualBasic.CompilerServices.ObjectFlowControl.ForLoopControl.ForLoopInitObj(System.Object,System.Object,System.Object,System.Object,System.Object@,System.Object@)">
      <summary>Inizializza un ciclo <see langword="For...Next" />.</summary>
      <param name="Counter">Variabile del contatore di cicli.</param>
      <param name="Start">Valore iniziale del contatore di cicli.</param>
      <param name="Limit">Valore dell'opzione <see langword="To" />.</param>
      <param name="StepValue">Valore dell'opzione <see langword="Step" />.</param>
      <param name="LoopForResult">Oggetto contenente valori verificati per i valori del ciclo.</param>
      <param name="CounterResult">Valore del contatore per l'iterazione del ciclo successiva.</param>
      <returns>
        <see langword="False" /> se il ciclo è terminato; in caso contrario, <see langword="True" />.</returns>
    </member>
    <member name="M:Microsoft.VisualBasic.CompilerServices.ObjectFlowControl.ForLoopControl.ForNextCheckDec(System.Decimal,System.Decimal,System.Decimal)">
      <summary>Verifica la presenza di valori validi per i valori <see langword="Step" /> e <see langword="To" /> del contatore di cicli.</summary>
      <param name="count">Obbligatorio. Valore <see langword="Decimal" /> che rappresenta il valore iniziale passato per la variabile del contatore di cicli.</param>
      <param name="limit">Obbligatorio. Valore <see langword="Decimal" /> che rappresenta il valore passato utilizzando la parola chiave <see langword="To" />.</param>
      <param name="StepValue">Obbligatorio. Valore <see langword="Decimal" /> che rappresenta il valore passato utilizzando la parola chiave <see langword="Step" />.</param>
      <returns>
        <see langword="True" /> se <paramref name="StepValue" /> è maggiore di zero e <paramref name="count" /> è minore o uguale a <paramref name="limit" />, oppure se <paramref name="StepValue" /> è minore o uguale a zero e <paramref name="count" /> è maggiore o uguale a <paramref name="limit" />; in caso contrario, <see langword="False" />.</returns>
    </member>
    <member name="M:Microsoft.VisualBasic.CompilerServices.ObjectFlowControl.ForLoopControl.ForNextCheckObj(System.Object,System.Object,System.Object@)">
      <summary>Incrementa un ciclo <see langword="For...Next" />.</summary>
      <param name="Counter">Variabile del contatore di cicli.</param>
      <param name="LoopObj">Oggetto contenente valori verificati per i valori del ciclo.</param>
      <param name="CounterResult">Valore del contatore per l'iterazione del ciclo successiva.</param>
      <returns>
        <see langword="False" /> se il ciclo è terminato; in caso contrario, <see langword="True" />.</returns>
    </member>
    <member name="M:Microsoft.VisualBasic.CompilerServices.ObjectFlowControl.ForLoopControl.ForNextCheckR4(System.Single,System.Single,System.Single)">
      <summary>Verifica la presenza di valori validi per i valori <see langword="Step" /> e <see langword="To" /> del contatore di cicli.</summary>
      <param name="count">Obbligatorio. Valore <see cref="T:System.Single" /> che rappresenta il valore iniziale passato per la variabile del contatore di cicli.</param>
      <param name="limit">Obbligatorio. Valore <see cref="T:System.Single" /> che rappresenta il valore passato utilizzando la parola chiave <see langword="To" />.</param>
      <param name="StepValue">Obbligatorio. Valore <see cref="T:System.Single" /> che rappresenta il valore passato utilizzando la parola chiave <see langword="Step" />.</param>
      <returns>
        <see langword="True" /> se <paramref name="StepValue" /> è maggiore di zero e <paramref name="count" /> è minore o uguale a <paramref name="limit" />, oppure se <paramref name="StepValue" /> è minore o uguale a zero e <paramref name="count" /> è maggiore o uguale a <paramref name="limit" />; in caso contrario, <see langword="False" />.</returns>
    </member>
    <member name="M:Microsoft.VisualBasic.CompilerServices.ObjectFlowControl.ForLoopControl.ForNextCheckR8(System.Double,System.Double,System.Double)">
      <summary>Verifica la presenza di valori validi per i valori <see langword="Step" /> e <see langword="To" /> del contatore di cicli.</summary>
      <param name="count">Obbligatorio. Valore <see cref="T:System.Double" /> che rappresenta il valore iniziale passato per la variabile del contatore di cicli.</param>
      <param name="limit">Obbligatorio. Valore <see cref="T:System.Double" /> che rappresenta il valore passato utilizzando la parola chiave <see langword="To" />.</param>
      <param name="StepValue">Obbligatorio. Valore <see cref="T:System.Double" /> che rappresenta il valore passato utilizzando la parola chiave <see langword="Step" />.</param>
      <returns>
        <see langword="True" /> se <paramref name="StepValue" /> è maggiore di zero e <paramref name="count" /> è minore o uguale a <paramref name="limit" />, oppure se <paramref name="StepValue" /> è minore o uguale a zero e <paramref name="count" /> è maggiore o uguale a <paramref name="limit" />; in caso contrario, <see langword="False" />.</returns>
    </member>
    <member name="T:Microsoft.VisualBasic.CompilerServices.ObjectType">
      <summary>A partire da Visual Basic 2005, questa classe viene considerata deprecata.</summary>
    </member>
    <member name="M:Microsoft.VisualBasic.CompilerServices.ObjectType.#ctor">
      <summary>Inizializza una nuova istanza della classe <see cref="T:Microsoft.VisualBasic.CompilerServices.ObjectType" />.</summary>
    </member>
    <member name="M:Microsoft.VisualBasic.CompilerServices.ObjectType.AddObj(System.Object,System.Object)">
      <summary>Esegue un'operazione di addizione (+).</summary>
      <param name="o1">Obbligatorio. Qualsiasi espressione numerica.</param>
      <param name="o2">Obbligatorio. Qualsiasi espressione numerica.</param>
      <returns>Somma di <paramref name="o1" /> e <paramref name="o2" />.</returns>
    </member>
    <member name="M:Microsoft.VisualBasic.CompilerServices.ObjectType.BitAndObj(System.Object,System.Object)">
      <summary>Esegue un'operazione <see langword="And" /> bit per bit.</summary>
      <param name="obj1">Obbligatorio. Qualsiasi espressione <see langword="Boolean" /> o numerica.</param>
      <param name="obj2">Obbligatorio. Qualsiasi espressione <see langword="Boolean" /> o numerica.</param>
      <returns>1 se <paramref name="obj1" /> e <paramref name="obj2" /> hanno un valore pari a 1; in caso contrario, 0.</returns>
    </member>
    <member name="M:Microsoft.VisualBasic.CompilerServices.ObjectType.BitOrObj(System.Object,System.Object)">
      <summary>Esegue un'operazione <see langword="Or" /> bit per bit.</summary>
      <param name="obj1">Obbligatorio. Qualsiasi espressione <see langword="Boolean" /> o numerica.</param>
      <param name="obj2">Obbligatorio. Qualsiasi espressione <see langword="Boolean" /> o numerica.</param>
      <returns>0 se <paramref name="obj1" /> e <paramref name="obj2" /> hanno un valore pari a 0; in caso contrario, 1.</returns>
    </member>
    <member name="M:Microsoft.VisualBasic.CompilerServices.ObjectType.BitXorObj(System.Object,System.Object)">
      <summary>Esegue un'operazione <see langword="Xor" />.</summary>
      <param name="obj1">Obbligatorio. Qualsiasi espressione <see langword="Boolean" /> o numerica.</param>
      <param name="obj2">Obbligatorio. Qualsiasi espressione <see langword="Boolean" /> o numerica.</param>
      <returns>Valore numerico che rappresenta l'esclusione bit per bit (disgiunzione bit per bit esclusiva) di due schemi di bit numerici. Per altre informazioni, vedere Operatore Xor.</returns>
    </member>
    <member name="M:Microsoft.VisualBasic.CompilerServices.ObjectType.DivObj(System.Object,System.Object)">
      <summary>Esegue un'operazione di divisione (/).</summary>
      <param name="o1">Obbligatorio. Qualsiasi espressione numerica.</param>
      <param name="o2">Obbligatorio. Qualsiasi espressione numerica.</param>
      <returns>Quoziente completo di <paramref name="o1" /> diviso per <paramref name="o2" />, incluso l'eventuale resto.</returns>
    </member>
    <member name="M:Microsoft.VisualBasic.CompilerServices.ObjectType.GetObjectValuePrimitive(System.Object)">
      <summary>Restituisce un valore primitivo boxed. Questo metodo viene utilizzato per impedire una copia ripetitiva delle strutture.</summary>
      <param name="o">Obbligatorio. Qualsiasi espressione.</param>
      <returns>Valore primitivo di <paramref name="o" /> tipizzato come oggetto.</returns>
    </member>
    <member name="M:Microsoft.VisualBasic.CompilerServices.ObjectType.IDivObj(System.Object,System.Object)">
      <summary>Esegue un'operazione di divisione (\) con interi.</summary>
      <param name="o1">Obbligatorio. Qualsiasi espressione numerica.</param>
      <param name="o2">Obbligatorio. Qualsiasi espressione numerica.</param>
      <returns>Quoziente intero di <paramref name="o1" /> diviso per <paramref name="o2" />, in cui l'eventuale resto viene ignorato e viene mantenuta solo la parte intera.</returns>
    </member>
    <member name="M:Microsoft.VisualBasic.CompilerServices.ObjectType.LikeObj(System.Object,System.Object,Microsoft.VisualBasic.CompareMethod)">
      <summary>Esegue un confronto <see langword="Like" />.</summary>
      <param name="vLeft">Obbligatorio. Qualsiasi espressione.</param>
      <param name="vRight">Obbligatorio. Qualsiasi espressione stringa conforme alle convenzioni sui criteri di ricerca descritte nell'operatore Like.</param>
      <param name="CompareOption">Obbligatorio. Valore <see cref="T:Microsoft.VisualBasic.CompareMethod" /> che specifica che l'operazione utilizza un confronto di testo o binario.</param>
      <returns>
        <see langword="True" /> se la rappresentazione di stringa del valore in <paramref name="vLeft" /> soddisfa il modello contenuto in <paramref name="vRight" />; in caso contrario, <see langword="False" />. <see langword="True" /> se <paramref name="vLeft" /> e <paramref name="vRight" /> sono <see langword="Nothing" />.</returns>
    </member>
    <member name="M:Microsoft.VisualBasic.CompilerServices.ObjectType.ModObj(System.Object,System.Object)">
      <summary>Esegue un'operazione modulo (<see langword="Mod" />).</summary>
      <param name="o1">Obbligatorio. Qualsiasi espressione numerica.</param>
      <param name="o2">Obbligatorio. Qualsiasi espressione numerica.</param>
      <returns>Resto ottenuto dividendo <paramref name="o1" /> per <paramref name="o2" />.</returns>
    </member>
    <member name="M:Microsoft.VisualBasic.CompilerServices.ObjectType.MulObj(System.Object,System.Object)">
      <summary>Esegue un'operazione di moltiplicazione (*).</summary>
      <param name="o1">Obbligatorio. Qualsiasi espressione numerica.</param>
      <param name="o2">Obbligatorio. Qualsiasi espressione numerica.</param>
      <returns>Prodotto di <paramref name="o1" /> e <paramref name="o2" />.</returns>
    </member>
    <member name="M:Microsoft.VisualBasic.CompilerServices.ObjectType.NegObj(System.Object)">
      <summary>Esegue un'operazione di sottrazione (-) unaria.</summary>
      <param name="obj">Obbligatorio. Qualsiasi espressione numerica.</param>
      <returns>Valore negativo di <paramref name="obj" />.</returns>
    </member>
    <member name="M:Microsoft.VisualBasic.CompilerServices.ObjectType.NotObj(System.Object)">
      <summary>Esegue un'operazione <see langword="Not" />.</summary>
      <param name="obj">Obbligatorio. Qualsiasi espressione <see langword="Boolean" /> o numerica.</param>
      <returns>Nel caso di operazioni <see langword="Boolean" />, <see langword="False" /> se <paramref name="obj" /> è <see langword="True" />; in caso contrario, <see langword="True" />. Nel caso di operazioni bit per bit, 1 se <paramref name="obj" /> è 0; in caso contrario, 0.</returns>
    </member>
    <member name="M:Microsoft.VisualBasic.CompilerServices.ObjectType.ObjTst(System.Object,System.Object,System.Boolean)">
      <summary>Dati due oggetti, esegue un confronto binario o tra stringhe di testo.</summary>
      <param name="o1">Obbligatorio. Qualsiasi espressione.</param>
      <param name="o2">Obbligatorio. Qualsiasi espressione.</param>
      <param name="TextCompare">Obbligatorio. <see langword="True" /> per eseguire un confronto di stringhe senza distinzione tra maiuscole e minuscole; in caso contrario, <see langword="False" />.</param>
      <returns>
        <list type="table">
          <listheader>
            <term> Valore</term>
            <description> Condizione</description>
          </listheader>
          <item>
            <term> -1</term>
            <description>
              <paramref name="o1" /> è minore di <paramref name="o2" />.</description>
          </item>
          <item>
            <term> 0</term>
            <description>
              <paramref name="o1" /> è uguale a <paramref name="o2" />.</description>
          </item>
          <item>
            <term> 1</term>
            <description>
              <paramref name="o1" /> è maggiore di <paramref name="o2" />.</description>
          </item>
        </list>
      </returns>
    </member>
    <member name="M:Microsoft.VisualBasic.CompilerServices.ObjectType.PlusObj(System.Object)">
      <summary>Esegue un'operazione di addizione (+) unaria.</summary>
      <param name="obj">Obbligatorio. Qualsiasi espressione numerica.</param>
      <returns>Valore di <paramref name="obj" />. Il segno di <paramref name="obj" /> resta invariato.</returns>
    </member>
    <member name="M:Microsoft.VisualBasic.CompilerServices.ObjectType.PowObj(System.Object,System.Object)">
      <summary>Esegue un'operazione esponenziale (^).</summary>
      <param name="obj1">Obbligatorio. Qualsiasi espressione numerica.</param>
      <param name="obj2">Obbligatorio. Qualsiasi espressione numerica.</param>
      <returns>Risultato di <paramref name="obj1" /> elevato alla potenza di <paramref name="obj2" />.</returns>
    </member>
    <member name="M:Microsoft.VisualBasic.CompilerServices.ObjectType.ShiftLeftObj(System.Object,System.Int32)">
      <summary>Esegue un'operazione di scorrimento a sinistra aritmetico (&lt;&lt;).</summary>
      <param name="o1">Obbligatorio. Espressione numerica integrale. Schema di bit da spostare. Il tipo di dati deve essere integrale (<see langword="SByte" />, <see langword="Byte" />, <see langword="Short" />, <see langword="UShort" />, <see langword="Integer" />, <see langword="UInteger" />, <see langword="Long" /> o <see langword="ULong" />).</param>
      <param name="amount">Obbligatorio. Espressione numerica. Numero di bit per spostare lo schema di bit. Il tipo di dati deve essere <see langword="Integer" /> o ampliato a <see langword="Integer" />.</param>
      <returns>Valore numerico integrale. Risultato dello spostamento dello schema di bit. Il tipo di dati corrisponde a quello di <paramref name="o1" />.</returns>
    </member>
    <member name="M:Microsoft.VisualBasic.CompilerServices.ObjectType.ShiftRightObj(System.Object,System.Int32)">
      <summary>Esegue un'operazione di scorrimento a destra aritmetico (&gt;&gt;).</summary>
      <param name="o1">Obbligatorio. Espressione numerica integrale. Schema di bit da spostare. Il tipo di dati deve essere integrale (<see langword="SByte" />, <see langword="Byte" />, <see langword="Short" />, <see langword="UShort" />, <see langword="Integer" />, <see langword="UInteger" />, <see langword="Long" /> o <see langword="ULong" />).</param>
      <param name="amount">Obbligatorio. Espressione numerica. Numero di bit per spostare lo schema di bit. Il tipo di dati deve essere <see langword="Integer" /> o ampliato a <see langword="Integer" />.</param>
      <returns>Valore numerico integrale. Risultato dello spostamento dello schema di bit. Il tipo di dati corrisponde a quello di <paramref name="o1" />.</returns>
    </member>
    <member name="M:Microsoft.VisualBasic.CompilerServices.ObjectType.StrCatObj(System.Object,System.Object)">
      <summary>Esegue un'operazione di concatenazione di stringhe (&amp;).</summary>
      <param name="vLeft">Obbligatorio. Qualsiasi espressione.</param>
      <param name="vRight">Obbligatorio. Qualsiasi espressione.</param>
      <returns>Stringa che rappresenta la concatenazione di <paramref name="vLeft" /> e <paramref name="vRight" />.</returns>
    </member>
    <member name="M:Microsoft.VisualBasic.CompilerServices.ObjectType.SubObj(System.Object,System.Object)">
      <summary>Esegue un'operazione di sottrazione (-).</summary>
      <param name="o1">Obbligatorio. Qualsiasi espressione numerica.</param>
      <param name="o2">Obbligatorio. Qualsiasi espressione numerica.</param>
      <returns>Differenza tra <paramref name="o1" /> e <paramref name="o2" />.</returns>
    </member>
    <member name="M:Microsoft.VisualBasic.CompilerServices.ObjectType.XorObj(System.Object,System.Object)">
      <summary>Esegue un confronto <see langword="Xor" />.</summary>
      <param name="obj1">Obbligatorio. Qualsiasi espressione <see langword="Boolean" /> o numerica.</param>
      <param name="obj2">Obbligatorio. Qualsiasi espressione <see langword="Boolean" /> o numerica.</param>
      <returns>Valore <see langword="Boolean" /> o numerico. Nel caso di un confronto <see langword="Boolean" />, il valore restituito è l'esclusione logica (disgiunzione logica esclusiva) di due valori <see langword="Boolean" />. Nel caso di operazioni bit per bit (numeriche), il valore restituito è un valore numerico che rappresenta l'esclusione bit per bit (disgiunzione bit per bit esclusiva) di due schemi di bit numerici. Per altre informazioni, vedere Operatore Xor.</returns>
    </member>
    <member name="T:Microsoft.VisualBasic.CompilerServices.Operators">
      <summary>Fornisce operatori matematici ad associazione tardiva, quali <see cref="M:Microsoft.VisualBasic.CompilerServices.Operators.AddObject(System.Object,System.Object)" /> e <see cref="M:Microsoft.VisualBasic.CompilerServices.Operators.CompareObject(System.Object,System.Object,System.Boolean)" />, utilizzati internamente dal compilatore Visual Basic.</summary>
    </member>
    <member name="M:Microsoft.VisualBasic.CompilerServices.Operators.AddObject(System.Object,System.Object)">
      <summary>Rappresenta l'operatore di addizione (+) di Visual Basic.</summary>
      <param name="Left">Obbligatorio. Qualsiasi espressione numerica.</param>
      <param name="Right">Obbligatorio. Qualsiasi espressione numerica.</param>
      <returns>Somma di <paramref name="Left" /> e <paramref name="Right" />.</returns>
    </member>
    <member name="M:Microsoft.VisualBasic.CompilerServices.Operators.AndObject(System.Object,System.Object)">
      <summary>Rappresenta l'operatore <see langword="And" /> di Visual Basic.</summary>
      <param name="Left">Obbligatorio. Qualsiasi espressione <see langword="Boolean" /> o numerica.</param>
      <param name="Right">Obbligatorio. Qualsiasi espressione <see langword="Boolean" /> o numerica.</param>
      <returns>Nel caso di operazioni <see langword="Boolean" />, <see langword="True" /> se <paramref name="Left" /> e <paramref name="Right" /> hanno entrambi un valore pari a <see langword="True" />; in caso contrario, <see langword="False" />. Nel caso di operazioni bit per bit, 1 se <paramref name="Left" /> e <paramref name="Right" /> hanno entrambi un valore pari a 1; in caso contrario, 0.</returns>
    </member>
    <member name="M:Microsoft.VisualBasic.CompilerServices.Operators.CompareObjectEqual(System.Object,System.Object,System.Boolean)">
      <summary>Rappresenta l'operatore di uguaglianza (=) di Visual Basic.</summary>
      <param name="Left">Obbligatorio. Qualsiasi espressione.</param>
      <param name="Right">Obbligatorio. Qualsiasi espressione.</param>
      <param name="TextCompare">Obbligatorio. <see langword="True" /> per eseguire un confronto di stringhe senza distinzione tra maiuscole e minuscole; in caso contrario, <see langword="False" />.</param>
      <returns>
        <see langword="True" /> se <paramref name="Left" /> e <paramref name="Right" /> sono uguali; in caso contrario, <see langword="False" />.</returns>
    </member>
    <member name="M:Microsoft.VisualBasic.CompilerServices.Operators.CompareObjectGreater(System.Object,System.Object,System.Boolean)">
      <summary>Rappresenta l'operatore di maggioranza (&gt;) di Visual Basic.</summary>
      <param name="Left">Obbligatorio. Qualsiasi espressione.</param>
      <param name="Right">Obbligatorio. Qualsiasi espressione.</param>
      <param name="TextCompare">Obbligatorio. <see langword="True" /> per eseguire un confronto di stringhe senza distinzione tra maiuscole e minuscole; in caso contrario, <see langword="False" />.</param>
      <returns>
        <see langword="True" /> se <paramref name="Left" /> è maggiore di <paramref name="Right" />; in caso contrario, <see langword="False" />.</returns>
    </member>
    <member name="M:Microsoft.VisualBasic.CompilerServices.Operators.CompareObjectGreaterEqual(System.Object,System.Object,System.Boolean)">
      <summary>Rappresenta l'operatore di maggioranza o uguaglianza (&gt;) di Visual Basic.</summary>
      <param name="Left">Obbligatorio. Qualsiasi espressione.</param>
      <param name="Right">Obbligatorio. Qualsiasi espressione.</param>
      <param name="TextCompare">Obbligatorio. <see langword="True" /> per eseguire un confronto di stringhe senza distinzione tra maiuscole e minuscole; in caso contrario, <see langword="False" />.</param>
      <returns>
        <see langword="True" /> se <paramref name="Left" /> è maggiore o uguale a <paramref name="Right" />; in caso contrario, <see langword="False" />.</returns>
    </member>
    <member name="M:Microsoft.VisualBasic.CompilerServices.Operators.CompareObjectLess(System.Object,System.Object,System.Boolean)">
      <summary>Rappresenta l'operatore di minoranza (&lt;) di Visual Basic.</summary>
      <param name="Left">Obbligatorio. Qualsiasi espressione.</param>
      <param name="Right">Obbligatorio. Qualsiasi espressione.</param>
      <param name="TextCompare">Obbligatorio. <see langword="True" /> per eseguire un confronto di stringhe senza distinzione tra maiuscole e minuscole; in caso contrario, <see langword="False" />.</param>
      <returns>
        <see langword="True" /> se <paramref name="Left" /> è minore di <paramref name="Right" />; in caso contrario, <see langword="False" />.</returns>
    </member>
    <member name="M:Microsoft.VisualBasic.CompilerServices.Operators.CompareObjectLessEqual(System.Object,System.Object,System.Boolean)">
      <summary>Rappresenta l'operatore di minoranza o uguaglianza (&lt;) di Visual Basic.</summary>
      <param name="Left">Obbligatorio. Qualsiasi espressione.</param>
      <param name="Right">Obbligatorio. Qualsiasi espressione.</param>
      <param name="TextCompare">Obbligatorio. <see langword="True" /> per eseguire un confronto di stringhe senza distinzione tra maiuscole e minuscole; in caso contrario, <see langword="False" />.</param>
      <returns>
        <see langword="True" /> se <paramref name="Left" /> è minore o uguale a <paramref name="Right" />; in caso contrario, <see langword="False" />.</returns>
    </member>
    <member name="M:Microsoft.VisualBasic.CompilerServices.Operators.CompareObjectNotEqual(System.Object,System.Object,System.Boolean)">
      <summary>Rappresenta l'operatore di disuguaglianza (&lt;&gt;) di Visual Basic.</summary>
      <param name="Left">Obbligatorio. Qualsiasi espressione.</param>
      <param name="Right">Obbligatorio. Qualsiasi espressione.</param>
      <param name="TextCompare">Obbligatorio. <see langword="True" /> per eseguire un confronto di stringhe senza distinzione tra maiuscole e minuscole; in caso contrario, <see langword="False" />.</param>
      <returns>
        <see langword="True" /> se <paramref name="Left" /> non è uguale a <paramref name="Right" />; in caso contrario, <see langword="False" />.</returns>
    </member>
    <member name="M:Microsoft.VisualBasic.CompilerServices.Operators.CompareString(System.String,System.String,System.Boolean)">
      <summary>Date due stringhe, esegue un confronto binario o tra stringhe di testo.</summary>
      <param name="Left">Obbligatorio. Qualsiasi espressione <see langword="String" /> .</param>
      <param name="Right">Obbligatorio. Qualsiasi espressione <see langword="String" /> .</param>
      <param name="TextCompare">Obbligatorio. <see langword="True" /> per eseguire un confronto di stringhe senza distinzione tra maiuscole e minuscole; in caso contrario, <see langword="False" />.</param>
      <returns>
        <list type="table">
          <listheader>
            <term> Valore</term>
            <description> Condizione</description>
          </listheader>
          <item>
            <term> -1</term>
            <description>
              <paramref name="Left" /> è minore di <paramref name="Right" />.</description>
          </item>
          <item>
            <term> 0</term>
            <description>
              <paramref name="Left" /> è uguale a <paramref name="Right" />.</description>
          </item>
          <item>
            <term> 1</term>
            <description>
              <paramref name="Left" /> è maggiore di <paramref name="Right" />.</description>
          </item>
        </list>
      </returns>
    </member>
    <member name="M:Microsoft.VisualBasic.CompilerServices.Operators.ConcatenateObject(System.Object,System.Object)">
      <summary>Rappresenta l'operatore di concatenazione (&amp;) di Visual Basic.</summary>
      <param name="Left">Obbligatorio. Qualsiasi espressione.</param>
      <param name="Right">Obbligatorio. Qualsiasi espressione.</param>
      <returns>Stringa che rappresenta la concatenazione di <paramref name="Left" /> e <paramref name="Right" />.</returns>
    </member>
    <member name="M:Microsoft.VisualBasic.CompilerServices.Operators.ConditionalCompareObjectEqual(System.Object,System.Object,System.Boolean)">
      <summary>Rappresenta l'operatore di uguaglianza (=) di overload di Visual Basic.</summary>
      <param name="Left">Obbligatorio. Qualsiasi espressione.</param>
      <param name="Right">Obbligatorio. Qualsiasi espressione.</param>
      <param name="TextCompare">Obbligatorio. <see langword="True" /> per eseguire un confronto di stringhe senza distinzione tra maiuscole e minuscole; in caso contrario, <see langword="False" />.</param>
      <returns>Risultato dell'operatore di uguaglianza di overload. <see langword="False" /> se l'overload dell'operatore non è supportato.</returns>
    </member>
    <member name="M:Microsoft.VisualBasic.CompilerServices.Operators.ConditionalCompareObjectGreater(System.Object,System.Object,System.Boolean)">
      <summary>Rappresenta l'operatore di maggioranza di overload (&gt;) di Visual Basic.</summary>
      <param name="Left">Obbligatorio. Qualsiasi espressione.</param>
      <param name="Right">Obbligatorio. Qualsiasi espressione.</param>
      <param name="TextCompare">Obbligatorio. <see langword="True" /> per eseguire un confronto di stringhe senza distinzione tra maiuscole e minuscole; in caso contrario, <see langword="False" />.</param>
      <returns>Risultato dell'operatore di maggioranza di overload. <see langword="False" /> se l'overload dell'operatore non è supportato.</returns>
    </member>
    <member name="M:Microsoft.VisualBasic.CompilerServices.Operators.ConditionalCompareObjectGreaterEqual(System.Object,System.Object,System.Boolean)">
      <summary>Rappresenta l'operatore di maggioranza o uguaglianza di overload (&gt;) di Visual Basic.</summary>
      <param name="Left">Obbligatorio. Qualsiasi espressione.</param>
      <param name="Right">Obbligatorio. Qualsiasi espressione.</param>
      <param name="TextCompare">Obbligatorio. <see langword="True" /> per eseguire un confronto di stringhe senza distinzione tra maiuscole e minuscole; in caso contrario, <see langword="False" />.</param>
      <returns>Risultato dell'operatore di maggioranza o uguaglianza di overload. <see langword="False" /> se l'overload dell'operatore non è supportato.</returns>
    </member>
    <member name="M:Microsoft.VisualBasic.CompilerServices.Operators.ConditionalCompareObjectLess(System.Object,System.Object,System.Boolean)">
      <summary>Rappresenta l'operatore di minoranza di overload (&lt;) di Visual Basic.</summary>
      <param name="Left">Obbligatorio. Qualsiasi espressione.</param>
      <param name="Right">Obbligatorio. Qualsiasi espressione.</param>
      <param name="TextCompare">Obbligatorio. <see langword="True" /> per eseguire un confronto di stringhe senza distinzione tra maiuscole e minuscole; in caso contrario, <see langword="False" />.</param>
      <returns>Risultato dell'operatore di minoranza di overload. <see langword="False" /> se l'overload dell'operatore non è supportato.</returns>
    </member>
    <member name="M:Microsoft.VisualBasic.CompilerServices.Operators.ConditionalCompareObjectLessEqual(System.Object,System.Object,System.Boolean)">
      <summary>Rappresenta l'operatore di minoranza o uguaglianza di overload (&lt;) di Visual Basic.</summary>
      <param name="Left">Obbligatorio. Qualsiasi espressione.</param>
      <param name="Right">Obbligatorio. Qualsiasi espressione.</param>
      <param name="TextCompare">Obbligatorio. <see langword="True" /> per eseguire un confronto di stringhe senza distinzione tra maiuscole e minuscole; in caso contrario, <see langword="False" />.</param>
      <returns>Risultato dell'operatore di minoranza o uguaglianza di overload. <see langword="False" /> se l'overload dell'operatore non è supportato.</returns>
    </member>
    <member name="M:Microsoft.VisualBasic.CompilerServices.Operators.ConditionalCompareObjectNotEqual(System.Object,System.Object,System.Boolean)">
      <summary>Rappresenta l'operatore di disuguaglianza di overload (&lt;&gt;) di Visual Basic.</summary>
      <param name="Left">Obbligatorio. Qualsiasi espressione.</param>
      <param name="Right">Obbligatorio. Qualsiasi espressione.</param>
      <param name="TextCompare">Obbligatorio. <see langword="True" /> per eseguire un confronto di stringhe senza distinzione tra maiuscole e minuscole; in caso contrario, <see langword="False" />.</param>
      <returns>Risultato dell'operatore di disuguaglianza di overload. <see langword="False" /> se l'overload dell'operatore non è supportato.</returns>
    </member>
    <member name="M:Microsoft.VisualBasic.CompilerServices.Operators.DivideObject(System.Object,System.Object)">
      <summary>Rappresenta l'operatore di divisione (/) di Visual Basic.</summary>
      <param name="Left">Obbligatorio. Qualsiasi espressione numerica.</param>
      <param name="Right">Obbligatorio. Qualsiasi espressione numerica.</param>
      <returns>Quoziente completo di <paramref name="Left" /> diviso per <paramref name="Right" />, incluso l'eventuale resto.</returns>
    </member>
    <member name="M:Microsoft.VisualBasic.CompilerServices.Operators.ExponentObject(System.Object,System.Object)">
      <summary>Rappresenta l'operatore esponenziale (^) di Visual Basic.</summary>
      <param name="Left">Obbligatorio. Qualsiasi espressione numerica.</param>
      <param name="Right">Obbligatorio. Qualsiasi espressione numerica.</param>
      <returns>Risultato di <paramref name="Left" /> elevato alla potenza di <paramref name="Right" />.</returns>
    </member>
    <member name="M:Microsoft.VisualBasic.CompilerServices.Operators.FallbackInvokeUserDefinedOperator(System.Object,System.Object[])">
      <summary>Esegue una valutazione ad associazione tardiva di un operatore definito dall'utente. Questo metodo di supporto non deve essere chiamato in modo diretto dal codice.</summary>
      <param name="vbOp">Operatore definito dall'utente.</param>
      <param name="arguments" />
      <returns>Risultato restituito dall'operatore definito dall'utente.</returns>
    </member>
    <member name="M:Microsoft.VisualBasic.CompilerServices.Operators.IntDivideObject(System.Object,System.Object)">
      <summary>Rappresenta l'operatore di divisione con valori interi (\) di Visual Basic.</summary>
      <param name="Left">Obbligatorio. Qualsiasi espressione numerica.</param>
      <param name="Right">Obbligatorio. Qualsiasi espressione numerica.</param>
      <returns>Quoziente intero di <paramref name="Left" /> diviso per <paramref name="Right" />, in cui l'eventuale resto viene ignorato e viene mantenuta solo la parte intera.</returns>
    </member>
    <member name="M:Microsoft.VisualBasic.CompilerServices.Operators.LeftShiftObject(System.Object,System.Object)">
      <summary>Rappresenta l'operatore di scorrimento a sinistra aritmetico (&lt;&lt;) di Visual Basic.</summary>
      <param name="Operand">Obbligatorio. Espressione numerica integrale. Schema di bit da spostare. Il tipo di dati deve essere integrale (<see langword="SByte" />, <see langword="Byte" />, <see langword="Short" />, <see langword="UShort" />, <see langword="Integer" />, <see langword="UInteger" />, <see langword="Long" /> o <see langword="ULong" />).</param>
      <param name="Amount">Obbligatorio. Espressione numerica. Numero di bit per spostare lo schema di bit. Il tipo di dati deve essere <see langword="Integer" /> o ampliato a <see langword="Integer" />.</param>
      <returns>Valore numerico integrale. Risultato dello spostamento dello schema di bit. Il tipo di dati corrisponde a quello di <paramref name="Operand" />.</returns>
    </member>
    <member name="M:Microsoft.VisualBasic.CompilerServices.Operators.ModObject(System.Object,System.Object)">
      <summary>Rappresenta l'operatore <see langword="Mod" /> di Visual Basic.</summary>
      <param name="Left">Obbligatorio. Qualsiasi espressione numerica.</param>
      <param name="Right">Obbligatorio. Qualsiasi espressione numerica.</param>
      <returns>Resto ottenuto dividendo <paramref name="Left" /> per <paramref name="Right" />.</returns>
    </member>
    <member name="M:Microsoft.VisualBasic.CompilerServices.Operators.MultiplyObject(System.Object,System.Object)">
      <summary>Rappresenta l'operatore di moltiplicazione (*) di Visual Basic.</summary>
      <param name="Left">Obbligatorio. Qualsiasi espressione numerica.</param>
      <param name="Right">Obbligatorio. Qualsiasi espressione numerica.</param>
      <returns>Prodotto di <paramref name="Left" /> e <paramref name="Right" />.</returns>
    </member>
    <member name="M:Microsoft.VisualBasic.CompilerServices.Operators.NegateObject(System.Object)">
      <summary>Rappresenta l'operatore meno (-) unario di Visual Basic.</summary>
      <param name="Operand">Obbligatorio. Qualsiasi espressione numerica.</param>
      <returns>Valore negativo di <paramref name="Operand" />.</returns>
    </member>
    <member name="M:Microsoft.VisualBasic.CompilerServices.Operators.NotObject(System.Object)">
      <summary>Rappresenta l'operatore <see langword="Not" /> di Visual Basic.</summary>
      <param name="Operand">Obbligatorio. Qualsiasi espressione <see langword="Boolean" /> o numerica.</param>
      <returns>Nel caso di operazioni <see langword="Boolean" />, <see langword="False" /> se <paramref name="Operand" /> è <see langword="True" />; in caso contrario, <see langword="True" />. Nel caso di operazioni bit per bit, 1 se <paramref name="Operand" /> è 0; in caso contrario, 0.</returns>
    </member>
    <member name="M:Microsoft.VisualBasic.CompilerServices.Operators.OrObject(System.Object,System.Object)">
      <summary>Rappresenta l'operatore <see langword="Or" /> di Visual Basic.</summary>
      <param name="Left">Obbligatorio. Qualsiasi espressione <see langword="Boolean" /> o numerica.</param>
      <param name="Right">Obbligatorio. Qualsiasi espressione <see langword="Boolean" /> o numerica.</param>
      <returns>Nel caso di operazioni <see langword="Boolean" />, <see langword="False" /> se <paramref name="Left" /> e <paramref name="Right" /> hanno entrambi un valore pari a <see langword="False" />; in caso contrario, <see langword="True" />. Nel caso di operazioni bit per bit, 0 se <paramref name="Left" /> e <paramref name="Right" /> hanno entrambi un valore pari a 0; in caso contrario, 1.</returns>
    </member>
    <member name="M:Microsoft.VisualBasic.CompilerServices.Operators.PlusObject(System.Object)">
      <summary>Rappresenta l'operatore più (+) unario di Visual Basic.</summary>
      <param name="Operand">Obbligatorio. Qualsiasi espressione numerica.</param>
      <returns>Valore di <paramref name="Operand" />. Il segno di <paramref name="Operand" /> resta invariato.</returns>
    </member>
    <member name="M:Microsoft.VisualBasic.CompilerServices.Operators.RightShiftObject(System.Object,System.Object)">
      <summary>Rappresenta l'operatore di scorrimento a destra aritmetico (&gt;&gt;) di Visual Basic.</summary>
      <param name="Operand">Obbligatorio. Espressione numerica integrale. Schema di bit da spostare. Il tipo di dati deve essere integrale (<see langword="SByte" />, <see langword="Byte" />, <see langword="Short" />, <see langword="UShort" />, <see langword="Integer" />, <see langword="UInteger" />, <see langword="Long" /> o <see langword="ULong" />).</param>
      <param name="Amount">Obbligatorio. Espressione numerica. Numero di bit per spostare lo schema di bit. Il tipo di dati deve essere <see langword="Integer" /> o ampliato a <see langword="Integer" />.</param>
      <returns>Valore numerico integrale. Risultato dello spostamento dello schema di bit. Il tipo di dati corrisponde a quello di <paramref name="Operand" />.</returns>
    </member>
    <member name="M:Microsoft.VisualBasic.CompilerServices.Operators.SubtractObject(System.Object,System.Object)">
      <summary>Rappresenta l'operatore di sottrazione (-) di Visual Basic.</summary>
      <param name="Left">Obbligatorio. Qualsiasi espressione numerica.</param>
      <param name="Right">Obbligatorio. Qualsiasi espressione numerica.</param>
      <returns>Differenza tra <paramref name="Left" /> e <paramref name="Right" />.</returns>
    </member>
    <member name="M:Microsoft.VisualBasic.CompilerServices.Operators.XorObject(System.Object,System.Object)">
      <summary>Rappresenta l'operatore <see langword="Xor" /> di Visual Basic.</summary>
      <param name="Left">Obbligatorio. Qualsiasi espressione <see langword="Boolean" /> o numerica.</param>
      <param name="Right">Obbligatorio. Qualsiasi espressione <see langword="Boolean" /> o numerica.</param>
      <returns>Valore <see langword="Boolean" /> o numerico. Nel caso di un confronto <see langword="Boolean" />, il valore restituito è l'esclusione logica (disgiunzione logica esclusiva) di due valori <see langword="Boolean" />. Nel caso di operazioni bit per bit (numeriche), il valore restituito è un valore numerico che rappresenta l'esclusione bit per bit (disgiunzione bit per bit esclusiva) di due schemi di bit numerici. Per altre informazioni, vedere Operatore Xor.</returns>
    </member>
    <member name="T:Microsoft.VisualBasic.CompilerServices.OptionCompareAttribute">
      <summary>Specifica che l'impostazione <see langword="Option Compare" /> corrente deve essere passata come valore predefinito per un argomento.</summary>
    </member>
    <member name="M:Microsoft.VisualBasic.CompilerServices.OptionCompareAttribute.#ctor">
      <summary>Inizializza una nuova istanza della classe <see cref="T:Microsoft.VisualBasic.CompilerServices.OptionCompareAttribute" />.</summary>
    </member>
    <member name="T:Microsoft.VisualBasic.CompilerServices.OptionTextAttribute">
      <summary>Il compilatore di Visual Basic genera questa classe di supporto per indicare (per il debug di Visual Basic) l'opzione di confronto usata, ovvero confronto binario o di testo.</summary>
    </member>
    <member name="M:Microsoft.VisualBasic.CompilerServices.OptionTextAttribute.#ctor">
      <summary>Inizializza una nuova istanza della classe <see cref="T:Microsoft.VisualBasic.CompilerServices.OptionTextAttribute" />. Si tratta di un metodo di supporto.</summary>
    </member>
    <member name="T:Microsoft.VisualBasic.CompilerServices.ProjectData">
      <summary>Fornisce supporti per l'oggetto <see langword="Err" /> di Visual Basic.</summary>
    </member>
    <member name="M:Microsoft.VisualBasic.CompilerServices.ProjectData.ClearProjectError">
      <summary>Esegue le operazioni per il metodo <see langword="Clear" /> dell'oggetto <see langword="Err" />. Metodo di supporto.</summary>
    </member>
    <member name="M:Microsoft.VisualBasic.CompilerServices.ProjectData.CreateProjectError(System.Int32)">
      <summary>Esegue le operazioni per il metodo <see langword="Raise" /> dell'oggetto <see langword="Err" />. Metodo di supporto.</summary>
      <param name="hr">Valore intero che identifica la natura dell'errore. Gli errori di Visual Basic rientrano nell'intervallo 0-65535. L'intervallo 0-512 è riservato agli errori di sistema, mentre l'intervallo 513-65535 è disponibile per gli errori definiti dall'utente.</param>
      <returns>Oggetto <see cref="T:System.Exception" />.</returns>
    </member>
    <member name="M:Microsoft.VisualBasic.CompilerServices.ProjectData.EndApp">
      <summary>Chiude tutti i file per l'assembly chiamante e arresta il processo.</summary>
    </member>
    <member name="M:Microsoft.VisualBasic.CompilerServices.ProjectData.SetProjectError(System.Exception)">
      <summary>Il compilatore Visual Basic utilizza questo metodo di supporto per acquisire le eccezioni nell'oggetto <see langword="Err" />.</summary>
      <param name="ex">Oggetto <see cref="T:System.Exception" /> da acquisire.</param>
    </member>
    <member name="M:Microsoft.VisualBasic.CompilerServices.ProjectData.SetProjectError(System.Exception,System.Int32)">
      <summary>Il compilatore Visual Basic utilizza questo metodo di supporto per acquisire le eccezioni nell'oggetto <see langword="Err" />.</summary>
      <param name="ex">Oggetto <see cref="T:System.Exception" /> da acquisire.</param>
      <param name="lErl">Il numero di riga dell'eccezione.</param>
    </member>
    <member name="T:Microsoft.VisualBasic.CompilerServices.ShortType">
      <summary>A partire da Visual Basic 2005, questa classe viene considerata deprecata.</summary>
    </member>
    <member name="M:Microsoft.VisualBasic.CompilerServices.ShortType.FromObject(System.Object)">
      <summary>Restituisce un valore <see langword="Short" /> corrispondente all'oggetto specificato.</summary>
      <param name="Value">Obbligatorio. Oggetto da convertire in un valore <see langword="Short" />.</param>
      <returns>Valore <see langword="Short" /> corrispondente a <paramref name="Value" />.</returns>
    </member>
    <member name="M:Microsoft.VisualBasic.CompilerServices.ShortType.FromString(System.String)">
      <summary>Restituisce un valore <see langword="Short" /> corrispondente alla stringa specificata.</summary>
      <param name="Value">Obbligatorio. Stringa da convertire in un valore <see langword="Short" />.</param>
      <returns>Valore <see langword="Short" /> corrispondente a <paramref name="Value" />.</returns>
    </member>
    <member name="T:Microsoft.VisualBasic.CompilerServices.SingleType">
      <summary>A partire da Visual Basic 2005, questa classe viene considerata deprecata.</summary>
    </member>
    <member name="M:Microsoft.VisualBasic.CompilerServices.SingleType.FromObject(System.Object)">
      <summary>Restituisce un valore <see cref="T:System.Single" /> corrispondente all'oggetto specificato.</summary>
      <param name="Value">Obbligatorio. Oggetto da convertire in un valore <see cref="T:System.Single" />.</param>
      <returns>Valore <see cref="T:System.Single" /> corrispondente a <paramref name="Value" />.</returns>
    </member>
    <member name="M:Microsoft.VisualBasic.CompilerServices.SingleType.FromObject(System.Object,System.Globalization.NumberFormatInfo)">
      <summary>Restituisce un valore <see cref="T:System.Single" /> corrispondente all'oggetto specificato.</summary>
      <param name="Value">Obbligatorio. Oggetto da convertire in un valore <see cref="T:System.Single" />.</param>
      <param name="NumberFormat">Oggetto <see cref="T:System.Globalization.NumberFormatInfo" /> che definisce la modalità di formattazione e visualizzazione dei valori numerici, in base alle impostazioni cultura.</param>
      <returns>Valore <see cref="T:System.Single" /> corrispondente a <paramref name="Value" />.</returns>
    </member>
    <member name="M:Microsoft.VisualBasic.CompilerServices.SingleType.FromString(System.String)">
      <summary>Restituisce un valore <see cref="T:System.Single" /> corrispondente alla stringa specificata.</summary>
      <param name="Value">Obbligatorio. Stringa da convertire in un valore <see cref="T:System.Single" />.</param>
      <returns>Valore <see cref="T:System.Single" /> corrispondente a <paramref name="Value" />.</returns>
    </member>
    <member name="M:Microsoft.VisualBasic.CompilerServices.SingleType.FromString(System.String,System.Globalization.NumberFormatInfo)">
      <summary>Restituisce un valore <see cref="T:System.Single" /> corrispondente alla stringa specificata, nonché informazioni sul formato numerico.</summary>
      <param name="Value">Obbligatorio. Stringa da convertire in un valore <see cref="T:System.Single" />.</param>
      <param name="NumberFormat">Oggetto <see cref="T:System.Globalization.NumberFormatInfo" /> che definisce la modalità di formattazione e visualizzazione dei valori numerici, in base alle impostazioni cultura.</param>
      <returns>Valore <see cref="T:System.Single" /> corrispondente a <paramref name="Value" />.</returns>
    </member>
    <member name="T:Microsoft.VisualBasic.CompilerServices.StandardModuleAttribute">
      <summary>Questa classe fornisce attributi applicati al costrutto del modulo standard quando inviato all'IL (Intermediate Language). Non deve essere chiamato direttamente dal codice.</summary>
    </member>
    <member name="M:Microsoft.VisualBasic.CompilerServices.StandardModuleAttribute.#ctor">
      <summary>Inizializza una nuova istanza della classe <see cref="T:Microsoft.VisualBasic.CompilerServices.StandardModuleAttribute" />.</summary>
    </member>
    <member name="T:Microsoft.VisualBasic.CompilerServices.StaticLocalInitFlag">
      <summary>Il compilatore Visual Basic utilizza questa classe internamente quando inizializza i membri locali statici; non è destinato a essere chiamato in modo diretto dal codice.</summary>
    </member>
    <member name="F:Microsoft.VisualBasic.CompilerServices.StaticLocalInitFlag.State">
      <summary>Restituisce lo stato del flag di inizializzazione del membro locale statico (inizializzato o meno).</summary>
    </member>
    <member name="M:Microsoft.VisualBasic.CompilerServices.StaticLocalInitFlag.#ctor">
      <summary>Inizializza una nuova istanza della classe <see cref="T:Microsoft.VisualBasic.CompilerServices.StaticLocalInitFlag" />.</summary>
    </member>
    <member name="T:Microsoft.VisualBasic.CompilerServices.StringType">
      <summary>A partire da Visual Basic 2005, questa classe viene considerata deprecata.</summary>
    </member>
    <member name="M:Microsoft.VisualBasic.CompilerServices.StringType.FromBoolean(System.Boolean)">
      <summary>Restituisce un valore <see langword="String" /> corrispondente al valore <see langword="Boolean" /> specificato.</summary>
      <param name="Value">Obbligatorio. <see langword="Boolean" /> da convertire in un valore <see langword="String" />.</param>
      <returns>Valore <see langword="String" /> corrispondente a <paramref name="Value" />.</returns>
    </member>
    <member name="M:Microsoft.VisualBasic.CompilerServices.StringType.FromByte(System.Byte)">
      <summary>Restituisce un valore <see langword="String" /> corrispondente al valore <see langword="Byte" /> specificato.</summary>
      <param name="Value">Obbligatorio. <see langword="Byte" /> da convertire in un valore <see langword="String" />.</param>
      <returns>Valore <see langword="String" /> corrispondente a <paramref name="Value" />.</returns>
    </member>
    <member name="M:Microsoft.VisualBasic.CompilerServices.StringType.FromChar(System.Char)">
      <summary>Restituisce un valore <see langword="String" /> corrispondente al valore <see langword="Char" /> specificato.</summary>
      <param name="Value">Obbligatorio. <see langword="Char" /> da convertire in un valore <see langword="String" />.</param>
      <returns>Valore <see langword="String" /> corrispondente a <paramref name="Value" />.</returns>
    </member>
    <member name="M:Microsoft.VisualBasic.CompilerServices.StringType.FromDate(System.DateTime)">
      <summary>Restituisce un valore <see langword="String" /> corrispondente alla data specificata.</summary>
      <param name="Value">Obbligatorio. Data da convertire in un valore <see langword="String" />.</param>
      <returns>Valore <see langword="String" /> corrispondente a <paramref name="Value" />.</returns>
    </member>
    <member name="M:Microsoft.VisualBasic.CompilerServices.StringType.FromDecimal(System.Decimal)">
      <summary>Restituisce un valore <see langword="String" /> corrispondente al valore <see langword="Decimal" /> specificato.</summary>
      <param name="Value">Obbligatorio. <see langword="Decimal" /> da convertire in un valore <see langword="String" />.</param>
      <returns>Valore <see langword="String" /> corrispondente a <paramref name="Value" />.</returns>
    </member>
    <member name="M:Microsoft.VisualBasic.CompilerServices.StringType.FromDecimal(System.Decimal,System.Globalization.NumberFormatInfo)">
      <summary>Restituisce un valore <see langword="String" /> corrispondente a un valore <see langword="Decimal" /> specificato, nonché informazioni sul formato numerico.</summary>
      <param name="Value">Obbligatorio. <see langword="Decimal" /> da convertire in un valore <see langword="String" />.</param>
      <param name="NumberFormat">Oggetto <see cref="T:System.Globalization.NumberFormatInfo" /> che definisce la modalità di formattazione e visualizzazione dei valori numerici, in base alle impostazioni cultura.</param>
      <returns>Valore <see langword="String" /> corrispondente a <paramref name="Value" />.</returns>
    </member>
    <member name="M:Microsoft.VisualBasic.CompilerServices.StringType.FromDouble(System.Double)">
      <summary>Restituisce un valore stringa corrispondente a un oggetto specificato <see cref="T:System.Double" /> .</summary>
      <param name="Value">Obbligatorio. <see cref="T:System.Double" /> da convertire in un valore <see cref="T:System.String" />.</param>
      <returns>Valore <see langword="String" /> corrispondente a <paramref name="Value" />.</returns>
    </member>
    <member name="M:Microsoft.VisualBasic.CompilerServices.StringType.FromDouble(System.Double,System.Globalization.NumberFormatInfo)">
      <summary>Restituisce una stringa che corrisponde a un oggetto specificato <see cref="T:System.Double" /> e alle informazioni sul formato numerico.</summary>
      <param name="Value">Obbligatorio. <see cref="T:System.Double" /> da convertire in un valore <see cref="T:System.String" />.</param>
      <param name="NumberFormat">Oggetto <see cref="T:System.Globalization.NumberFormatInfo" /> che definisce la modalità di formattazione e visualizzazione dei valori numerici, in base alle impostazioni cultura.</param>
      <returns>Rappresentazione di stringa di <paramref name="Value" />.</returns>
    </member>
    <member name="M:Microsoft.VisualBasic.CompilerServices.StringType.FromInteger(System.Int32)">
      <summary>Restituisce un valore <see langword="String" /> corrispondente a un valore <see langword="Integer" /> specificato.</summary>
      <param name="Value">Obbligatorio. <see langword="Integer" /> da convertire in un valore <see langword="String" />.</param>
      <returns>Valore <see langword="String" /> corrispondente a <paramref name="Value" />.</returns>
    </member>
    <member name="M:Microsoft.VisualBasic.CompilerServices.StringType.FromLong(System.Int64)">
      <summary>Restituisce un valore <see langword="String" /> corrispondente a un valore <see cref="T:System.Int64" /> (intero a 64 bit) specificato.</summary>
      <param name="Value">Obbligatorio. <see cref="T:System.Int64" /> da convertire in un valore <see langword="String" />.</param>
      <returns>Valore <see langword="String" /> corrispondente a <paramref name="Value" />.</returns>
    </member>
    <member name="M:Microsoft.VisualBasic.CompilerServices.StringType.FromObject(System.Object)">
      <summary>Restituisce un valore <see langword="String" /> corrispondente all'oggetto specificato.</summary>
      <param name="Value">Obbligatorio. Oggetto da convertire in un valore <see langword="String" />.</param>
      <returns>Valore <see langword="String" /> corrispondente a <paramref name="Value" />.</returns>
    </member>
    <member name="M:Microsoft.VisualBasic.CompilerServices.StringType.FromShort(System.Int16)">
      <summary>Restituisce un valore <see langword="String" /> corrispondente a un valore <see cref="T:System.Int16" /> (intero a 16 bit) specificato.</summary>
      <param name="Value">Obbligatorio. <see langword="Int616" /> da convertire in un valore <see langword="String" />.</param>
      <returns>Valore <see langword="String" /> corrispondente a <paramref name="Value" />.</returns>
    </member>
    <member name="M:Microsoft.VisualBasic.CompilerServices.StringType.FromSingle(System.Single)">
      <summary>Restituisce un valore stringa corrispondente a un oggetto specificato <see cref="T:System.Single" /> .</summary>
      <param name="Value">Obbligatorio. <see cref="T:System.Single" /> da convertire in un valore <see langword="String" />.</param>
      <returns>Valore stringa corrispondente a <paramref name="Value" /> .</returns>
    </member>
    <member name="M:Microsoft.VisualBasic.CompilerServices.StringType.FromSingle(System.Single,System.Globalization.NumberFormatInfo)">
      <summary>Restituisce un valore stringa che corrisponde a un oggetto specificato <see cref="T:System.Single" /> e alle informazioni sul formato numerico.</summary>
      <param name="Value">Obbligatorio. <see cref="T:System.Single" /> da convertire in un valore <see langword="String" />.</param>
      <param name="NumberFormat">Oggetto <see cref="T:System.Globalization.NumberFormatInfo" /> che definisce la modalità di formattazione e visualizzazione dei valori numerici, in base alle impostazioni cultura.</param>
      <returns>Valore stringa corrispondente a <paramref name="Value" /> .</returns>
    </member>
    <member name="M:Microsoft.VisualBasic.CompilerServices.StringType.MidStmtStr(System.String@,System.Int32,System.Int32,System.String)">
      <summary>Sovrascrive il parametro <paramref name="sDest" /> con il contenuto del parametro <paramref name="sInsert" />.</summary>
      <param name="sDest">Obbligatorio. Variabile di tipo stringa da modificare.</param>
      <param name="StartPosition">Obbligatorio. Percorso nel parametro <paramref name="sDest" /> dal quale iniziare la sovrascrittura. L'indice è in base 1.</param>
      <param name="MaxInsertLength">Obbligatorio. Numero massimo di caratteri del parametro <paramref name="sInsert" /> da utilizzare, iniziando dal primo carattere.</param>
      <param name="sInsert">Obbligatorio. Valore stringa con il quale sovrascrivere il parametro <paramref name="sDest" />.</param>
    </member>
    <member name="M:Microsoft.VisualBasic.CompilerServices.StringType.StrCmp(System.String,System.String,System.Boolean)">
      <summary>Confronta due stringhe.</summary>
      <param name="sLeft">Obbligatorio. Stringa da confrontare con <paramref name="sRight" />.</param>
      <param name="sRight">Obbligatorio. Stringa da confrontare con <paramref name="sLeft" />.</param>
      <param name="TextCompare">Obbligatorio. <see langword="True" /> per eseguire un confronto senza distinzione tra maiuscole e minuscole; in caso contrario, <see langword="False" />.</param>
      <returns>
        <list type="table">
          <listheader>
            <term> Valore</term>
            <description> Condizione</description>
          </listheader>
          <item>
            <term> zero</term>
            <description> Le due stringhe sono uguali.</description>
          </item>
          <item>
            <term> minore di zero</term>
            <description>
              <paramref name="sLeft" /> è minore di <paramref name="sRight" />.</description>
          </item>
          <item>
            <term> maggiore di zero</term>
            <description>
              <paramref name="sLeft" /> è maggiore di <paramref name="sRight" />.</description>
          </item>
        </list>
      </returns>
    </member>
    <member name="M:Microsoft.VisualBasic.CompilerServices.StringType.StrLike(System.String,System.String,Microsoft.VisualBasic.CompareMethod)">
      <summary>Confronta i parametri <paramref name="Source" /> e <paramref name="Pattern" /> e restituisce gli stessi risultati dell'operatore <see langword="Like" />.</summary>
      <param name="Source">Obbligatorio. Qualsiasi espressione <see langword="String" /> .</param>
      <param name="Pattern">Qualsiasi espressione <see langword="String" /> conforme alle convenzioni sui criteri di ricerca descritte nell'operatore Like.</param>
      <param name="CompareOption">Specifica come confrontare le stringhe con i modelli in base a <see cref="T:Microsoft.VisualBasic.CompareMethod" />. Può essere <see langword="vbBinaryCompare" /> per il confronto binario oppure <see langword="vbTextCompare" /> per il confronto in base all'ordinamento senza distinzione tra maiuscole e minuscole determinato dal valore <see langword="LocaleID" /> del proprio sistema.</param>
      <returns>Valore <see langword="Boolean" /> che indica se la stringa soddisfa o meno il modello. Se il valore nella stringa soddisfa il modello, il risultato è <see langword="True" />. In caso contrario, il risultato sarà <see langword="False" />. Se la stringa e il modello sono stringhe vuote, il risultato è <see langword="True" />.</returns>
    </member>
    <member name="M:Microsoft.VisualBasic.CompilerServices.StringType.StrLikeBinary(System.String,System.String)">
      <summary>Confronta i parametri <paramref name="Source" /> e <paramref name="Pattern" /> e restituisce gli stessi risultati dell'operatore <see langword="Like" /> mediante il confronto binario.</summary>
      <param name="Source">Obbligatorio. Qualsiasi espressione <see langword="String" /> .</param>
      <param name="Pattern">Obbligatorio. Qualsiasi espressione <see langword="String" /> conforme alle convenzioni sui criteri di ricerca descritte nell'operatore Like.</param>
      <returns>Valore <see langword="Boolean" /> che indica se la stringa soddisfa o meno il modello. Se il valore nella stringa soddisfa il modello, il risultato è <see langword="True" />. In caso contrario, il risultato sarà <see langword="False" />. Se la stringa e il modello sono stringhe vuote, il risultato è <see langword="True" />.</returns>
    </member>
    <member name="M:Microsoft.VisualBasic.CompilerServices.StringType.StrLikeText(System.String,System.String)">
      <summary>Confronta i parametri <paramref name="Source" /> e <paramref name="Pattern" /> e restituisce gli stessi risultati dell'operatore <see langword="Like" /> mediante il confronto di testo.</summary>
      <param name="Source">Obbligatorio. Qualsiasi espressione <see langword="String" /> .</param>
      <param name="Pattern">Obbligatorio. Qualsiasi espressione <see langword="String" /> conforme alle convenzioni sui criteri di ricerca descritte nell'operatore Like.</param>
      <returns>Valore <see langword="Boolean" /> che indica se la stringa soddisfa o meno il modello. Se il valore nella stringa soddisfa il modello, il risultato è <see langword="True" />. In caso contrario, il risultato sarà <see langword="False" />. Se la stringa e il modello sono stringhe vuote, il risultato è <see langword="True" />.</returns>
    </member>
    <member name="T:Microsoft.VisualBasic.CompilerServices.Utils">
      <summary>Contiene le utilità usate dal compilatore Visual Basic.</summary>
    </member>
    <member name="M:Microsoft.VisualBasic.CompilerServices.Utils.CopyArray(System.Array,System.Array)">
      <summary>Utilizzato dal compilatore Visual Basic come supporto per <see langword="Redim" />.</summary>
      <param name="arySrc">Matrice da copiare.</param>
      <param name="aryDest">Matrice di destinazione.</param>
      <returns>Matrice copiata.</returns>
    </member>
    <member name="M:Microsoft.VisualBasic.CompilerServices.Utils.GetResourceString(System.String,System.String[])">
      <summary>Recupera e formatta una stringa di risorse o un messaggio di errore localizzati.</summary>
      <param name="ResourceKey">Identificatore della stringa o del messaggio di errore da recuperare.</param>
      <param name="Args">Matrice di parametri per sostituire i segnaposto nella stringa o nel messaggio di errore.</param>
      <returns>Stringa di risorse o messaggio di errore formattati.</returns>
    </member>
    <member name="T:Microsoft.VisualBasic.CompilerServices.Versioned">
      <summary>Il modulo <see cref="T:Microsoft.VisualBasic.CompilerServices.Versioned" /> contiene procedure che consentono di interagire con oggetti, applicazioni e sistemi.</summary>
    </member>
    <member name="M:Microsoft.VisualBasic.CompilerServices.Versioned.CallByName(System.Object,System.String,Microsoft.VisualBasic.CallType,System.Object[])">
      <summary>Esegue un metodo in un oggetto oppure imposta o restituisce una proprietà in un oggetto.</summary>
      <param name="Instance">Obbligatorio. <see langword="Object" />. Puntatore all'oggetto che espone la proprietà o il metodo.</param>
      <param name="MethodName">Obbligatorio. <see langword="String" />. Espressione stringa contenente il nome della proprietà o del metodo dell'oggetto.</param>
      <param name="UseCallType">Obbligatorio. Membro di enumerazione di tipo <see cref="T:Microsoft.VisualBasic.CallType" /> che rappresenta il tipo di routine chiamato. Il valore di <see langword="CallType" /> può essere <see langword="Method" />, <see langword="Get" /> o <see langword="Set" />.</param>
      <param name="Arguments">facoltativo. <see langword="ParamArray" />. Matrice di parametri contenente gli argomenti da passare alla proprietà o al metodo da chiamare.</param>
      <returns>Esegue un metodo in un oggetto oppure imposta o restituisce una proprietà in un oggetto.</returns>
    </member>
    <member name="M:Microsoft.VisualBasic.CompilerServices.Versioned.IsNumeric(System.Object)">
      <summary>Restituisce un valore Boolean indicante se un'espressione può essere valutata come un numero.</summary>
      <param name="Expression">Obbligatorio. Espressione <see langword="Object" />.</param>
      <returns>Restituisce un valore Boolean indicante se un'espressione può essere valutata come un numero.</returns>
    </member>
    <member name="M:Microsoft.VisualBasic.CompilerServices.Versioned.SystemTypeName(System.String)">
      <summary>Restituisce un valore di stringa contenente il nome di tipo di dati di sistema di una variabile.</summary>
      <param name="VbName">Obbligatorio. Variabile di tipo stringa contenente un nome di tipo Visual Basic.</param>
      <returns>Restituisce un valore di stringa contenente il nome di tipo di dati di sistema di una variabile.</returns>
    </member>
    <member name="M:Microsoft.VisualBasic.CompilerServices.Versioned.TypeName(System.Object)">
      <summary>Restituisce un valore di tipo stringa contenente le informazioni sul tipo di dati relative a una variabile.</summary>
      <param name="Expression">Obbligatorio. Variabile <see langword="Object" />. Se <see langword="Option Strict" /> è <see langword="Off" />, è possibile passare una variabile di qualsiasi tipo di dati tranne una struttura.</param>
      <returns>Restituisce un valore di tipo stringa contenente le informazioni sul tipo di dati relative a una variabile.</returns>
    </member>
    <member name="M:Microsoft.VisualBasic.CompilerServices.Versioned.VbTypeName(System.String)">
      <summary>Restituisce un valore di stringa contenente il nome del tipo di dati di Visual Basic di una variabile.</summary>
      <param name="SystemName">Obbligatorio. Variabile di tipo stringa contenente un nome del tipo utilizzato da Common Language Runtime.</param>
      <returns>Restituisce un valore di stringa contenente il nome del tipo di dati di Visual Basic di una variabile.</returns>
    </member>
    <member name="T:Microsoft.VisualBasic.Constants">
      <summary>Il modulo <see langword="Constants" /> contiene costanti varie. Queste costanti possono essere inserite in qualsiasi punto del codice.</summary>
    </member>
    <member name="F:Microsoft.VisualBasic.Constants.vbAbort">
      <summary>Indica che è stato fatto clic sul pulsante <see langword="Abort" /> in una finestra di messaggio. Restituito dalla funzione <see langword="MsgBox" />.</summary>
    </member>
    <member name="F:Microsoft.VisualBasic.Constants.vbAbortRetryIgnore">
      <summary>Indica che i pulsanti <see langword="Abort" />, <see langword="Retry" /> e <see langword="Ignore" /> vengono visualizzati quando viene chiamata la funzione <see langword="MsgBox" />.</summary>
    </member>
    <member name="F:Microsoft.VisualBasic.Constants.vbApplicationModal">
      <summary>Indica che la finestra di messaggio verrà visualizzata come finestra di dialogo modale quando viene chiamata la funzione <see langword="MsgBox" />.</summary>
    </member>
    <member name="F:Microsoft.VisualBasic.Constants.vbArchive">
      <summary>Indica che il file è cambiato dall'ultima operazione di backup per funzioni di accesso ai file.</summary>
    </member>
    <member name="F:Microsoft.VisualBasic.Constants.vbArray">
      <summary>Indica che il tipo di un oggetto variant è una matrice. Restituito dalla funzione <see langword="VarType" />.</summary>
    </member>
    <member name="F:Microsoft.VisualBasic.Constants.vbBack">
      <summary>Rappresenta un carattere backspace per le funzioni di stampa e visualizzazione.</summary>
    </member>
    <member name="F:Microsoft.VisualBasic.Constants.vbBinaryCompare">
      <summary>Specifica che è necessario eseguire un confronto binario quando vengono chiamate le funzioni di confronto.</summary>
    </member>
    <member name="F:Microsoft.VisualBasic.Constants.vbBoolean">
      <summary>Indica che il tipo di un oggetto variant è <see langword="Boolean" />. Restituito dalla funzione <see langword="VarType" />.</summary>
    </member>
    <member name="F:Microsoft.VisualBasic.Constants.vbByte">
      <summary>Indica che il tipo di un oggetto variant è <see langword="Byte" />. Restituito dalla funzione <see langword="VarType" />.</summary>
    </member>
    <member name="F:Microsoft.VisualBasic.Constants.vbCancel">
      <summary>Indica che è stato fatto clic sul pulsante <see langword="Cancel" /> in una finestra di messaggio. Restituito dalla funzione <see langword="MsgBox" />.</summary>
    </member>
    <member name="F:Microsoft.VisualBasic.Constants.vbCr">
      <summary>Rappresenta un carattere di ritorno a capo per le funzioni di stampa e visualizzazione.</summary>
    </member>
    <member name="F:Microsoft.VisualBasic.Constants.vbCritical">
      <summary>Indica che l'icona del messaggio critico viene visualizzata quando viene chiamata la funzione <see langword="MsgBox" />.</summary>
    </member>
    <member name="F:Microsoft.VisualBasic.Constants.vbCrLf">
      <summary>Rappresenta un carattere di ritorno a capo combinato con un carattere di avanzamento riga per le funzioni di stampa e visualizzazione.</summary>
    </member>
    <member name="F:Microsoft.VisualBasic.Constants.vbCurrency">
      <summary>Indica che il tipo di un oggetto variant è <see langword="Currency" />. Restituito dalla funzione <see langword="VarType" />.</summary>
    </member>
    <member name="F:Microsoft.VisualBasic.Constants.vbDate">
      <summary>Indica che il tipo di un oggetto variant è <see langword="Date" />. Restituito dalla funzione <see langword="VarType" />.</summary>
    </member>
    <member name="F:Microsoft.VisualBasic.Constants.vbDecimal">
      <summary>Indica che il tipo di un oggetto variant è <see langword="Decimal" />. Restituito dalla funzione <see langword="VarType" />.</summary>
    </member>
    <member name="F:Microsoft.VisualBasic.Constants.vbDefaultButton1">
      <summary>Indica che il pulsante più a sinistra è selezionato come pulsante predefinito quando viene visualizzata la finestra di messaggio.</summary>
    </member>
    <member name="F:Microsoft.VisualBasic.Constants.vbDefaultButton2">
      <summary>Indica che il secondo pulsante da sinistra è selezionato come pulsante predefinito quando viene visualizzata la finestra di messaggio.</summary>
    </member>
    <member name="F:Microsoft.VisualBasic.Constants.vbDefaultButton3">
      <summary>Indica che il terzo pulsante da sinistra è selezionato come pulsante predefinito quando viene visualizzata la finestra di messaggio.</summary>
    </member>
    <member name="F:Microsoft.VisualBasic.Constants.vbDirectory">
      <summary>Indica che il file è una directory o una cartella per le funzioni di accesso ai file.</summary>
    </member>
    <member name="F:Microsoft.VisualBasic.Constants.vbDouble">
      <summary>Indica che il tipo di un oggetto variant è <see langword="Double" />. Restituito dalla funzione <see langword="VarType" />.</summary>
    </member>
    <member name="F:Microsoft.VisualBasic.Constants.vbEmpty">
      <summary>Indica che il tipo di un oggetto variant è <see langword="Empty" />. Restituito dalla funzione <see langword="VarType" />.</summary>
    </member>
    <member name="F:Microsoft.VisualBasic.Constants.vbExclamation">
      <summary>Indica che l'icona punto esclamativo viene visualizzata quando viene chiamata la funzione <see langword="MsgBox" />.</summary>
    </member>
    <member name="F:Microsoft.VisualBasic.Constants.vbFalse">
      <summary>Indica che è necessario utilizzare un valore <see langword="Boolean" /> di <see langword="False" /> quando vengono chiamano le funzioni di formattazione dei numeri.</summary>
    </member>
    <member name="F:Microsoft.VisualBasic.Constants.vbFirstFourDays">
      <summary>Indica che la prima settimana dell'anno composta da almeno quattro deve essere utilizzata quando vengono chiamate le funzioni relative alle date.</summary>
    </member>
    <member name="F:Microsoft.VisualBasic.Constants.vbFirstFullWeek">
      <summary>Indica che la prima settimana completa dell'anno deve essere utilizzata quando vengono chiamate le funzioni relative alle date.</summary>
    </member>
    <member name="F:Microsoft.VisualBasic.Constants.vbFirstJan1">
      <summary>Indica che la prima settimana dell'anno in cui è presente 1 gennaio deve essere utilizzata quando vengono chiamate le funzioni relative alle date.</summary>
    </member>
    <member name="F:Microsoft.VisualBasic.Constants.vbFormFeed">
      <summary>Rappresenta un carattere di avanzamento modulo per le funzioni di stampa.</summary>
    </member>
    <member name="F:Microsoft.VisualBasic.Constants.vbFriday">
      <summary>Specifica che venerdì deve essere utilizzato come primo giorno della settimana quando vengono chiamate le funzioni relative alle date.</summary>
    </member>
    <member name="F:Microsoft.VisualBasic.Constants.vbGeneralDate">
      <summary>Indica che il formato data generale per le impostazioni cultura correnti deve essere utilizzato quando viene chiamata la funzione <see langword="FormatDateTime" />.</summary>
    </member>
    <member name="F:Microsoft.VisualBasic.Constants.vbGet">
      <summary>Specifica che un valore della proprietà deve essere recuperato quando viene chiamata la funzione <see langword="CallByName" />.</summary>
    </member>
    <member name="F:Microsoft.VisualBasic.Constants.vbHidden">
      <summary>Indica che il file è un file nascosto per le funzioni di accesso ai file.</summary>
    </member>
    <member name="F:Microsoft.VisualBasic.Constants.vbHide">
      <summary>Indica che lo stile della finestra è nascosto per il programma che viene richiamato quando viene chiamata la funzione <see langword="Shell" />.</summary>
    </member>
    <member name="F:Microsoft.VisualBasic.Constants.vbHiragana">
      <summary>Indica che i caratteri Hiragana devono essere convertiti in caratteri Katakana quando viene chiamata la funzione <see langword="StrConv" />.</summary>
    </member>
    <member name="F:Microsoft.VisualBasic.Constants.vbIgnore">
      <summary>Indica che è stato fatto clic sul pulsante <see langword="Ignore" /> in una finestra di messaggio. Restituito dalla funzione <see langword="MsgBox" />.</summary>
    </member>
    <member name="F:Microsoft.VisualBasic.Constants.vbInformation">
      <summary>Indica che l'icona informazioni viene visualizzata quando viene chiamata la funzione <see langword="MsgBox" />.</summary>
    </member>
    <member name="F:Microsoft.VisualBasic.Constants.vbInteger">
      <summary>Indica che il tipo di un oggetto variant è <see langword="Integer" />. Restituito dalla funzione <see langword="VarType" />.</summary>
    </member>
    <member name="F:Microsoft.VisualBasic.Constants.vbKatakana">
      <summary>Indica che i caratteri Katakana devono essere convertiti in caratteri Hiragana quando viene chiamata la funzione <see langword="StrConv" />.</summary>
    </member>
    <member name="F:Microsoft.VisualBasic.Constants.vbLet">
      <summary>Indica che è necessario impostare un valore della proprietà su un'istanza dell'oggetto quando viene chiamata la funzione <see langword="CallByName" />.</summary>
    </member>
    <member name="F:Microsoft.VisualBasic.Constants.vbLf">
      <summary>Rappresenta un carattere di avanzamento riga per le funzioni di stampa e visualizzazione.</summary>
    </member>
    <member name="F:Microsoft.VisualBasic.Constants.vbLinguisticCasing">
      <summary>Indica che i caratteri devono essere convertiti per l'utilizzo delle regole linguistiche per le maiuscole e le minuscole anziché le regole per le maiuscole e le minuscole del file system nel caso in cui venga chiamata la funzione <see langword="StrConv" />.</summary>
    </member>
    <member name="F:Microsoft.VisualBasic.Constants.vbLong">
      <summary>Indica che il tipo di un oggetto variant è <see langword="Long" />. Restituito dalla funzione <see langword="VarType" />.</summary>
    </member>
    <member name="F:Microsoft.VisualBasic.Constants.vbLongDate">
      <summary>Indica che il formato di data esteso per le impostazioni cultura correnti deve essere utilizzato quando viene chiamata la funzione <see langword="FormatDateTime" />.</summary>
    </member>
    <member name="F:Microsoft.VisualBasic.Constants.vbLongTime">
      <summary>Indica che il formato di ora esteso per le impostazioni cultura correnti deve essere utilizzato quando viene chiamata la funzione <see langword="FormatDateTime" />.</summary>
    </member>
    <member name="F:Microsoft.VisualBasic.Constants.vbLowerCase">
      <summary>Indica che i caratteri devono essere convertiti in caratteri minuscoli quando viene chiamata la funzione <see langword="StrConv" />.</summary>
    </member>
    <member name="F:Microsoft.VisualBasic.Constants.vbMaximizedFocus">
      <summary>Indica che lo stile della finestra è ingrandito con lo stato attivo per il programma che viene richiamato quando viene chiamata la funzione <see langword="Shell" />.</summary>
    </member>
    <member name="F:Microsoft.VisualBasic.Constants.vbMethod">
      <summary>Specifica che il metodo deve essere chiamato quando viene chiamata la funzione <see langword="CallByName" />.</summary>
    </member>
    <member name="F:Microsoft.VisualBasic.Constants.vbMinimizedFocus">
      <summary>Indica che lo stile della finestra è ridotto con lo stato attivo per il programma che viene richiamato quando viene chiamata la funzione <see langword="Shell" />.</summary>
    </member>
    <member name="F:Microsoft.VisualBasic.Constants.vbMinimizedNoFocus">
      <summary>Indica che lo stile della finestra è ridotto senza stato attivo per il programma che viene richiamato quando viene chiamata la funzione <see langword="Shell" />.</summary>
    </member>
    <member name="F:Microsoft.VisualBasic.Constants.vbMonday">
      <summary>Specifica che lunedì deve essere utilizzato come primo giorno della settimana quando vengono chiamate le funzioni relative alle date.</summary>
    </member>
    <member name="F:Microsoft.VisualBasic.Constants.vbMsgBoxHelp">
      <summary>Indica che viene visualizzato il pulsante <see langword="Help" /> quando viene chiamata la funzione <see langword="MsgBox" />.</summary>
    </member>
    <member name="F:Microsoft.VisualBasic.Constants.vbMsgBoxRight">
      <summary>Indica che il testo viene allineato a destra quando viene chiamata la funzione <see langword="MsgBox" />.</summary>
    </member>
    <member name="F:Microsoft.VisualBasic.Constants.vbMsgBoxRtlReading">
      <summary>Indica che il testo con ordine di lettura da destra a sinistra (sistemi in ebraico o arabo) viene visualizzato quando viene chiamata la funzione <see langword="MsgBox" />.</summary>
    </member>
    <member name="F:Microsoft.VisualBasic.Constants.vbMsgBoxSetForeground">
      <summary>Indica che la finestra di messaggio viene visualizzata in primo piano quando viene chiamata la funzione <see langword="MsgBox" />.</summary>
    </member>
    <member name="F:Microsoft.VisualBasic.Constants.vbNarrow">
      <summary>Indica che i caratteri estesi (byte doppio) devono essere convertiti in caratteri stretti (byte singolo) quando viene chiamata la funzione <see langword="StrConv" />.</summary>
    </member>
    <member name="F:Microsoft.VisualBasic.Constants.vbNewLine">
      <summary>Rappresenta un carattere di nuova riga per le funzioni di stampa e visualizzazione.</summary>
    </member>
    <member name="F:Microsoft.VisualBasic.Constants.vbNo">
      <summary>Indica che è stato fatto clic sul pulsante <see langword="No" /> in una finestra di messaggio. Restituito dalla funzione <see langword="MsgBox" />.</summary>
    </member>
    <member name="F:Microsoft.VisualBasic.Constants.vbNormal">
      <summary>Indica che il file è un file normale per le funzioni di accesso ai file.</summary>
    </member>
    <member name="F:Microsoft.VisualBasic.Constants.vbNormalFocus">
      <summary>Indica che lo stile della finestra è normale con lo stato attivo per il programma che viene richiamato quando viene chiamata la funzione <see langword="Shell" />.</summary>
    </member>
    <member name="F:Microsoft.VisualBasic.Constants.vbNormalNoFocus">
      <summary>Indica che lo stile della finestra è normale senza stato attivo per il programma che viene richiamato quando viene chiamata la funzione <see langword="Shell" />.</summary>
    </member>
    <member name="F:Microsoft.VisualBasic.Constants.vbNull">
      <summary>Indica che il tipo di un oggetto variant è <see langword="Nothing" />. Restituito dalla funzione <see langword="VarType" />.</summary>
    </member>
    <member name="F:Microsoft.VisualBasic.Constants.vbNullChar">
      <summary>Rappresenta un carattere null per le funzioni di stampa e visualizzazione.</summary>
    </member>
    <member name="F:Microsoft.VisualBasic.Constants.vbNullString">
      <summary>Rappresenta una stringa di lunghezza zero per le funzioni di stampa e visualizzazione e per la chiamata alle routine esterne.</summary>
    </member>
    <member name="F:Microsoft.VisualBasic.Constants.vbObject">
      <summary>Indica che il tipo di un oggetto variant è <see langword="Object" />. Restituito dalla funzione <see langword="VarType" />.</summary>
    </member>
    <member name="F:Microsoft.VisualBasic.Constants.vbObjectError">
      <summary>Rappresenta il numero errore dell'oggetto. I numeri errore definiti dall'utente devono essere maggiori di questo valore.</summary>
    </member>
    <member name="F:Microsoft.VisualBasic.Constants.vbOK">
      <summary>Indica che è stato fatto clic sul pulsante <see langword="OK" /> in una finestra di messaggio. Restituito dalla funzione <see langword="MsgBox" />.</summary>
    </member>
    <member name="F:Microsoft.VisualBasic.Constants.vbOKCancel">
      <summary>Indica che i pulsanti <see langword="OK" /> e <see langword="Cancel" /> vengono visualizzati quando viene chiamata la funzione <see langword="MsgBox" />.</summary>
    </member>
    <member name="F:Microsoft.VisualBasic.Constants.vbOKOnly">
      <summary>Indica che viene visualizzato solo il pulsante <see langword="OK" /> quando viene chiamata la funzione <see langword="MsgBox" />.</summary>
    </member>
    <member name="F:Microsoft.VisualBasic.Constants.vbProperCase">
      <summary>Indica che è necessario convertire in maiuscolo la prima lettera di ogni parola in una stringa e in minuscolo i caratteri restanti quando viene chiamata la funzione <see langword="StrConv" />.</summary>
    </member>
    <member name="F:Microsoft.VisualBasic.Constants.vbQuestion">
      <summary>Indica che l'icona punto interrogativo viene visualizzata quando viene chiamata la funzione <see langword="MsgBox" />.</summary>
    </member>
    <member name="F:Microsoft.VisualBasic.Constants.vbReadOnly">
      <summary>Indica che il file è un file in sola lettura per le funzioni di accesso ai file.</summary>
    </member>
    <member name="F:Microsoft.VisualBasic.Constants.vbRetry">
      <summary>Indica che è stato fatto clic sul pulsante <see langword="Retry" /> in una finestra di messaggio. Restituito dalla funzione <see langword="MsgBox" />.</summary>
    </member>
    <member name="F:Microsoft.VisualBasic.Constants.vbRetryCancel">
      <summary>Indica che i pulsanti <see langword="Retry" /> e <see langword="Cancel" /> vengono visualizzati quando viene chiamata la funzione <see langword="MsgBox" />.</summary>
    </member>
    <member name="F:Microsoft.VisualBasic.Constants.vbSaturday">
      <summary>Specifica che sabato deve essere utilizzato come primo giorno della settimana quando vengono chiamate le funzioni relative alle date.</summary>
    </member>
    <member name="F:Microsoft.VisualBasic.Constants.vbSet">
      <summary>Indica che è necessario impostare un valore della proprietà quando viene chiamata la funzione <see langword="CallByName" />.</summary>
    </member>
    <member name="F:Microsoft.VisualBasic.Constants.vbShortDate">
      <summary>Indica che il formato di data breve per le impostazioni cultura correnti deve essere utilizzato quando viene chiamata la funzione <see langword="FormatDateTime" />.</summary>
    </member>
    <member name="F:Microsoft.VisualBasic.Constants.vbShortTime">
      <summary>Indica che il formato di ora breve per le impostazioni cultura correnti deve essere utilizzato quando viene chiamata la funzione <see langword="FormatDateTime" />.</summary>
    </member>
    <member name="F:Microsoft.VisualBasic.Constants.vbSimplifiedChinese">
      <summary>Indica che i caratteri devono essere convertiti in caratteri del cinese semplificato quando viene chiamata la funzione <see langword="StrConv" />.</summary>
    </member>
    <member name="F:Microsoft.VisualBasic.Constants.vbSingle">
      <summary>Indica che il tipo di un oggetto variant è <see cref="T:System.Single" />. Restituito dalla funzione <see langword="VarType" />.</summary>
    </member>
    <member name="F:Microsoft.VisualBasic.Constants.vbString">
      <summary>Indica che il tipo di un oggetto variant è <see langword="String" />. Restituito dalla funzione <see langword="VarType" />.</summary>
    </member>
    <member name="F:Microsoft.VisualBasic.Constants.vbSunday">
      <summary>Specifica che domenica deve essere utilizzato come primo giorno della settimana quando vengono chiamate le funzioni relative alle date.</summary>
    </member>
    <member name="F:Microsoft.VisualBasic.Constants.vbSystem">
      <summary>Indica che il file è un file di sistema per le funzioni di accesso ai file.</summary>
    </member>
    <member name="F:Microsoft.VisualBasic.Constants.vbSystemModal">
      <summary>Indica che la finestra di messaggio verrà visualizzata come finestra di dialogo modale quando viene chiamata la funzione <see langword="MsgBox" />.</summary>
    </member>
    <member name="F:Microsoft.VisualBasic.Constants.vbTab">
      <summary>Rappresenta un carattere di tabulazione per le funzioni di stampa e visualizzazione.</summary>
    </member>
    <member name="F:Microsoft.VisualBasic.Constants.vbTextCompare">
      <summary>Indica che è necessario eseguire un confronto di testo quando vengono chiamate le funzioni di confronto.</summary>
    </member>
    <member name="F:Microsoft.VisualBasic.Constants.vbThursday">
      <summary>Specifica che giovedì deve essere utilizzato come primo giorno della settimana quando vengono chiamate le funzioni relative alle date.</summary>
    </member>
    <member name="F:Microsoft.VisualBasic.Constants.vbTraditionalChinese">
      <summary>Indica che i caratteri devono essere convertiti in caratteri del cinese tradizionale quando viene chiamata la funzione <see langword="StrConv" />.</summary>
    </member>
    <member name="F:Microsoft.VisualBasic.Constants.vbTrue">
      <summary>Indica che è necessario utilizzare un valore <see langword="Boolean" /> di <see langword="True" /> quando vengono chiamano le funzioni di formattazione dei numeri.</summary>
    </member>
    <member name="F:Microsoft.VisualBasic.Constants.vbTuesday">
      <summary>Specifica che martedì deve essere utilizzato come primo giorno della settimana quando vengono chiamate le funzioni relative alle date.</summary>
    </member>
    <member name="F:Microsoft.VisualBasic.Constants.vbUpperCase">
      <summary>Indica che i caratteri devono essere convertiti in caratteri maiuscoli quando viene chiamata la funzione <see langword="StrConv" />.</summary>
    </member>
    <member name="F:Microsoft.VisualBasic.Constants.vbUseDefault">
      <summary>Indica che è necessario utilizzare il valore <see langword="Boolean" /> predefinito quando vengono chiamano le funzioni di formattazione dei numeri.</summary>
    </member>
    <member name="F:Microsoft.VisualBasic.Constants.vbUserDefinedType">
      <summary>Indica che il tipo di un oggetto variant è un tipo definito dall'utente. Restituito dalla funzione <see langword="VarType" />.</summary>
    </member>
    <member name="F:Microsoft.VisualBasic.Constants.vbUseSystem">
      <summary>Indica che la settimana specificata dal sistema come prima settimana dell'anno deve essere utilizzata quando vengono chiamate le funzioni relative alle date.</summary>
    </member>
    <member name="F:Microsoft.VisualBasic.Constants.vbUseSystemDayOfWeek">
      <summary>Indica che il giorno specificato dal sistema come primo giorno della settimana deve essere utilizzato quando vengono chiamate le funzioni relative alle date.</summary>
    </member>
    <member name="F:Microsoft.VisualBasic.Constants.vbVariant">
      <summary>Indica che il tipo di un oggetto variant è <see langword="Variant" />. Restituito dalla funzione <see langword="VarType" />.</summary>
    </member>
    <member name="F:Microsoft.VisualBasic.Constants.vbVerticalTab">
      <summary>Rappresenta un carattere di ritorno a capo per le funzioni di stampa.</summary>
    </member>
    <member name="F:Microsoft.VisualBasic.Constants.vbVolume">
      <summary>Indica l'attributo di file dell'etichetta di volume per le funzioni di accesso ai file.</summary>
    </member>
    <member name="F:Microsoft.VisualBasic.Constants.vbWednesday">
      <summary>Specifica che mercoledì deve essere utilizzato come primo giorno della settimana quando vengono chiamate le funzioni relative alle date.</summary>
    </member>
    <member name="F:Microsoft.VisualBasic.Constants.vbWide">
      <summary>Indica che i caratteri stretti (byte singolo) devono essere convertiti in caratteri estesi (byte doppio) quando viene chiamata la funzione <see langword="StrConv" />.</summary>
    </member>
    <member name="F:Microsoft.VisualBasic.Constants.vbYes">
      <summary>Indica che è stato fatto clic sul pulsante <see langword="Yes" /> in una finestra di messaggio. Restituito dalla funzione <see langword="MsgBox" />.</summary>
    </member>
    <member name="F:Microsoft.VisualBasic.Constants.vbYesNo">
      <summary>Indica che i pulsanti <see langword="Yes" /> e <see langword="No" /> vengono visualizzati quando viene chiamata la funzione <see langword="MsgBox" />.</summary>
    </member>
    <member name="F:Microsoft.VisualBasic.Constants.vbYesNoCancel">
      <summary>Indica che i pulsanti <see langword="Yes" />, <see langword="No" /> e <see langword="Cancel" /> vengono visualizzati quando viene chiamata la funzione <see langword="MsgBox" />.</summary>
    </member>
    <member name="T:Microsoft.VisualBasic.ControlChars">
      <summary>Il modulo <see langword="ControlChars" /> contiene costanti utilizzate come caratteri di controllo. Queste costanti possono essere inserite in qualsiasi punto del codice.</summary>
    </member>
    <member name="F:Microsoft.VisualBasic.ControlChars.Back">
      <summary>Rappresenta un carattere backspace (<see langword="vbBack" />).</summary>
    </member>
    <member name="F:Microsoft.VisualBasic.ControlChars.Cr">
      <summary>Rappresenta un carattere di ritorno a capo (<see langword="vbCr" />).</summary>
    </member>
    <member name="F:Microsoft.VisualBasic.ControlChars.CrLf">
      <summary>Rappresenta una combinazione di ritorno a capo/avanzamento riga (<see langword="vbCrLf" />).</summary>
    </member>
    <member name="F:Microsoft.VisualBasic.ControlChars.FormFeed">
      <summary>Rappresenta un carattere di avanzamento modulo per le funzioni di stampa (<see langword="vbFormFeed" />).</summary>
    </member>
    <member name="F:Microsoft.VisualBasic.ControlChars.Lf">
      <summary>Rappresenta un carattere di avanzamento riga (<see langword="vbLf" />).</summary>
    </member>
    <member name="F:Microsoft.VisualBasic.ControlChars.NewLine">
      <summary>Rappresenta un carattere di nuova riga (<see langword="vbNewLine" />).</summary>
    </member>
    <member name="F:Microsoft.VisualBasic.ControlChars.NullChar">
      <summary>Rappresenta un carattere Null (<see langword="vbNullChar" />).</summary>
    </member>
    <member name="F:Microsoft.VisualBasic.ControlChars.Quote">
      <summary>Rappresenta le virgolette doppie.</summary>
    </member>
    <member name="F:Microsoft.VisualBasic.ControlChars.Tab">
      <summary>Rappresenta un carattere di tabulazione (<see langword="vbTab" />).</summary>
    </member>
    <member name="F:Microsoft.VisualBasic.ControlChars.VerticalTab">
      <summary>Rappresenta un carattere di tabulazione verticale (<see langword="vbVerticalTab" />).</summary>
    </member>
    <member name="M:Microsoft.VisualBasic.ControlChars.#ctor">
      <summary>Inizializza una nuova istanza della classe <see cref="T:Microsoft.VisualBasic.ControlChars" />.</summary>
    </member>
    <member name="T:Microsoft.VisualBasic.Conversion">
      <summary>Il modulo <see langword="Conversion" /> contiene procedure che consentono di eseguire operazioni varie operazioni di conversione.</summary>
    </member>
    <member name="M:Microsoft.VisualBasic.Conversion.CTypeDynamic(System.Object,System.Type)">
      <summary>Converte un oggetto nel tipo specificato.</summary>
      <param name="Expression">Oggetto da convertire.</param>
      <param name="TargetType">Tipo in cui convertire l'oggetto.</param>
      <returns>Oggetto il cui tipo in fase di esecuzione è il tipo di destinazione richiesto.</returns>
    </member>
    <member name="M:Microsoft.VisualBasic.Conversion.CTypeDynamic``1(System.Object)">
      <summary>Converte un oggetto nel tipo generico specificato.</summary>
      <param name="Expression">Oggetto da convertire.</param>
      <typeparam name="TargetType">Tipo in cui convertire l'oggetto.</typeparam>
      <returns>Oggetto tipizzato in modo statico come tipo generico richiesto.</returns>
    </member>
    <member name="M:Microsoft.VisualBasic.Conversion.ErrorToString">
      <summary>Restituisce il messaggio di errore corrispondente a un determinato numero di errore.</summary>
      <exception cref="T:System.ArgumentException">
        <paramref name="ErrorNumber" /> non è compreso nell'intervallo consentito.</exception>
      <returns>Messaggio di errore corrispondente all'errore di runtime più recente.</returns>
    </member>
    <member name="M:Microsoft.VisualBasic.Conversion.ErrorToString(System.Int32)">
      <summary>Restituisce il messaggio di errore corrispondente a un determinato numero di errore.</summary>
      <param name="ErrorNumber">facoltativo. Qualsiasi numero di errore valido.</param>
      <exception cref="T:System.ArgumentException">
        <paramref name="ErrorNumber" /> non è compreso nell'intervallo consentito.</exception>
      <returns>Messaggio di errore corrispondente a un numero di errore specificato.</returns>
    </member>
    <member name="M:Microsoft.VisualBasic.Conversion.Fix(System.Decimal)">
      <summary>Restituisce la parte intera di un numero.</summary>
      <param name="Number">Obbligatorio. Numero di tipo <see langword="Decimal" /> o qualsiasi espressione numerica valida.</param>
      <exception cref="T:System.ArgumentNullException">Number non è specificato.</exception>
      <exception cref="T:System.ArgumentException">Number non è un tipo numerico.</exception>
      <returns>Parte intera di un numero.</returns>
    </member>
    <member name="M:Microsoft.VisualBasic.Conversion.Fix(System.Double)">
      <summary>Restituisce la parte intera di un numero.</summary>
      <param name="Number">Obbligatorio. Numero di tipo <see cref="T:System.Double" /> o qualsiasi espressione numerica valida.</param>
      <exception cref="T:System.ArgumentNullException">Number non è specificato.</exception>
      <exception cref="T:System.ArgumentException">Number non è un tipo numerico.</exception>
      <returns>Parte intera di un numero.</returns>
    </member>
    <member name="M:Microsoft.VisualBasic.Conversion.Fix(System.Int16)">
      <summary>Restituisce la parte intera di un numero.</summary>
      <param name="Number">Obbligatorio. Numero di tipo <see langword="Short" /> o qualsiasi espressione numerica valida.</param>
      <exception cref="T:System.ArgumentNullException">Number non è specificato.</exception>
      <exception cref="T:System.ArgumentException">Number non è un tipo numerico.</exception>
      <returns>Parte intera di un numero.</returns>
    </member>
    <member name="M:Microsoft.VisualBasic.Conversion.Fix(System.Int32)">
      <summary>Restituisce la parte intera di un numero.</summary>
      <param name="Number">Obbligatorio. Numero di tipo <see langword="Integer" /> o qualsiasi espressione numerica valida.</param>
      <exception cref="T:System.ArgumentNullException">Number non è specificato.</exception>
      <exception cref="T:System.ArgumentException">Number non è un tipo numerico.</exception>
      <returns>Parte intera di un numero.</returns>
    </member>
    <member name="M:Microsoft.VisualBasic.Conversion.Fix(System.Int64)">
      <summary>Restituisce la parte intera di un numero.</summary>
      <param name="Number">Obbligatorio. Numero di tipo <see langword="Long" /> o qualsiasi espressione numerica valida.</param>
      <exception cref="T:System.ArgumentNullException">Number non è specificato.</exception>
      <exception cref="T:System.ArgumentException">Number non è un tipo numerico.</exception>
      <returns>Parte intera di un numero.</returns>
    </member>
    <member name="M:Microsoft.VisualBasic.Conversion.Fix(System.Object)">
      <summary>Restituisce la parte intera di un numero.</summary>
      <param name="Number">Obbligatorio. Numero di tipo <see langword="Object" /> o qualsiasi espressione numerica valida. Se <paramref name="Number" /> contiene <see langword="Nothing" />, viene restituito <see langword="Nothing" />.</param>
      <exception cref="T:System.ArgumentNullException">Number non è specificato.</exception>
      <exception cref="T:System.ArgumentException">Number non è un tipo numerico.</exception>
      <returns>Parte intera di un numero.</returns>
    </member>
    <member name="M:Microsoft.VisualBasic.Conversion.Fix(System.Single)">
      <summary>Restituisce la parte intera di un numero.</summary>
      <param name="Number">Obbligatorio. Numero di tipo <see cref="T:System.Single" /> o qualsiasi espressione numerica valida.</param>
      <exception cref="T:System.ArgumentNullException">Number non è specificato.</exception>
      <exception cref="T:System.ArgumentException">Number non è un tipo numerico.</exception>
      <returns>Parte intera di un numero.</returns>
    </member>
    <member name="M:Microsoft.VisualBasic.Conversion.Hex(System.Byte)">
      <summary>Restituisce una stringa che rappresenta il valore esadecimale di un numero.</summary>
      <param name="Number">Obbligatorio. Qualsiasi espressione numerica o espressione <see langword="String" /> valida.</param>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="Number" /> non specificato.</exception>
      <exception cref="T:System.ArgumentException">
        <paramref name="Number" /> non è un tipo numerico.</exception>
      <returns>Stringa che rappresenta il valore esadecimale di un numero.</returns>
    </member>
    <member name="M:Microsoft.VisualBasic.Conversion.Hex(System.Int16)">
      <summary>Restituisce una stringa che rappresenta il valore esadecimale di un numero.</summary>
      <param name="Number">Obbligatorio. Qualsiasi espressione numerica o espressione <see langword="String" /> valida.</param>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="Number" /> non specificato.</exception>
      <exception cref="T:System.ArgumentException">
        <paramref name="Number" /> non è un tipo numerico.</exception>
      <returns>Stringa che rappresenta il valore esadecimale di un numero.</returns>
    </member>
    <member name="M:Microsoft.VisualBasic.Conversion.Hex(System.Int32)">
      <summary>Restituisce una stringa che rappresenta il valore esadecimale di un numero.</summary>
      <param name="Number">Obbligatorio. Qualsiasi espressione numerica o espressione <see langword="String" /> valida.</param>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="Number" /> non specificato.</exception>
      <exception cref="T:System.ArgumentException">
        <paramref name="Number" /> non è un tipo numerico.</exception>
      <returns>Stringa che rappresenta il valore esadecimale di un numero.</returns>
    </member>
    <member name="M:Microsoft.VisualBasic.Conversion.Hex(System.Int64)">
      <summary>Restituisce una stringa che rappresenta il valore esadecimale di un numero.</summary>
      <param name="Number">Obbligatorio. Qualsiasi espressione numerica o espressione <see langword="String" /> valida.</param>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="Number" /> non specificato.</exception>
      <exception cref="T:System.ArgumentException">
        <paramref name="Number" /> non è un tipo numerico.</exception>
      <returns>Stringa che rappresenta il valore esadecimale di un numero.</returns>
    </member>
    <member name="M:Microsoft.VisualBasic.Conversion.Hex(System.Object)">
      <summary>Restituisce una stringa che rappresenta il valore esadecimale di un numero.</summary>
      <param name="Number">Obbligatorio. Qualsiasi espressione numerica o espressione <see langword="String" /> valida.</param>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="Number" /> non specificato.</exception>
      <exception cref="T:System.ArgumentException">
        <paramref name="Number" /> non è un tipo numerico.</exception>
      <returns>Stringa che rappresenta il valore esadecimale di un numero.</returns>
    </member>
    <member name="M:Microsoft.VisualBasic.Conversion.Hex(System.SByte)">
      <summary>Restituisce una stringa che rappresenta il valore esadecimale di un numero.</summary>
      <param name="Number">Obbligatorio. Qualsiasi espressione numerica o espressione <see langword="String" /> valida.</param>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="Number" /> non specificato.</exception>
      <exception cref="T:System.ArgumentException">
        <paramref name="Number" /> non è un tipo numerico.</exception>
      <returns>Stringa che rappresenta il valore esadecimale di un numero.</returns>
    </member>
    <member name="M:Microsoft.VisualBasic.Conversion.Hex(System.UInt16)">
      <summary>Restituisce una stringa che rappresenta il valore esadecimale di un numero.</summary>
      <param name="Number">Obbligatorio. Qualsiasi espressione numerica o espressione <see langword="String" /> valida.</param>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="Number" /> non specificato.</exception>
      <exception cref="T:System.ArgumentException">
        <paramref name="Number" /> non è un tipo numerico.</exception>
      <returns>Stringa che rappresenta il valore esadecimale di un numero.</returns>
    </member>
    <member name="M:Microsoft.VisualBasic.Conversion.Hex(System.UInt32)">
      <summary>Restituisce una stringa che rappresenta il valore esadecimale di un numero.</summary>
      <param name="Number">Obbligatorio. Qualsiasi espressione numerica o espressione <see langword="String" /> valida.</param>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="Number" /> non specificato.</exception>
      <exception cref="T:System.ArgumentException">
        <paramref name="Number" /> non è un tipo numerico.</exception>
      <returns>Stringa che rappresenta il valore esadecimale di un numero.</returns>
    </member>
    <member name="M:Microsoft.VisualBasic.Conversion.Hex(System.UInt64)">
      <summary>Restituisce una stringa che rappresenta il valore esadecimale di un numero.</summary>
      <param name="Number">Obbligatorio. Qualsiasi espressione numerica o espressione <see langword="String" /> valida.</param>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="Number" /> non specificato.</exception>
      <exception cref="T:System.ArgumentException">
        <paramref name="Number" /> non è un tipo numerico.</exception>
      <returns>Stringa che rappresenta il valore esadecimale di un numero.</returns>
    </member>
    <member name="M:Microsoft.VisualBasic.Conversion.Int(System.Decimal)">
      <summary>Restituisce la parte intera di un numero.</summary>
      <param name="Number">Obbligatorio. Numero di tipo <see langword="Decimal" /> o qualsiasi espressione numerica valida.</param>
      <exception cref="T:System.ArgumentNullException">Number non è specificato.</exception>
      <exception cref="T:System.ArgumentException">Number non è un tipo numerico.</exception>
      <returns>Parte intera di un numero.</returns>
    </member>
    <member name="M:Microsoft.VisualBasic.Conversion.Int(System.Double)">
      <summary>Restituisce la parte intera di un numero.</summary>
      <param name="Number">Obbligatorio. Numero di tipo <see cref="T:System.Double" /> o qualsiasi espressione numerica valida.</param>
      <exception cref="T:System.ArgumentNullException">Number non è specificato.</exception>
      <exception cref="T:System.ArgumentException">Number non è un tipo numerico.</exception>
      <returns>Parte intera di un numero.</returns>
    </member>
    <member name="M:Microsoft.VisualBasic.Conversion.Int(System.Int16)">
      <summary>Restituisce la parte intera di un numero.</summary>
      <param name="Number">Obbligatorio. Numero di tipo <see langword="Short" /> o qualsiasi espressione numerica valida.</param>
      <exception cref="T:System.ArgumentNullException">Number non è specificato.</exception>
      <exception cref="T:System.ArgumentException">Number non è un tipo numerico.</exception>
      <returns>Parte intera di un numero.</returns>
    </member>
    <member name="M:Microsoft.VisualBasic.Conversion.Int(System.Int32)">
      <summary>Restituisce la parte intera di un numero.</summary>
      <param name="Number">Obbligatorio. Numero di tipo <see langword="Integer" /> o qualsiasi espressione numerica valida.</param>
      <exception cref="T:System.ArgumentNullException">Number non è specificato.</exception>
      <exception cref="T:System.ArgumentException">Number non è un tipo numerico.</exception>
      <returns>Parte intera di un numero.</returns>
    </member>
    <member name="M:Microsoft.VisualBasic.Conversion.Int(System.Int64)">
      <summary>Restituisce la parte intera di un numero.</summary>
      <param name="Number">Obbligatorio. Numero di tipo <see langword="Long" /> o qualsiasi espressione numerica valida.</param>
      <exception cref="T:System.ArgumentNullException">Number non è specificato.</exception>
      <exception cref="T:System.ArgumentException">Number non è un tipo numerico.</exception>
      <returns>Parte intera di un numero.</returns>
    </member>
    <member name="M:Microsoft.VisualBasic.Conversion.Int(System.Object)">
      <summary>Restituisce la parte intera di un numero.</summary>
      <param name="Number">Obbligatorio. Numero di tipo <see langword="Object" /> o qualsiasi espressione numerica valida. Se <paramref name="Number" /> contiene <see langword="Nothing" />, viene restituito <see langword="Nothing" />.</param>
      <exception cref="T:System.ArgumentNullException">Number non è specificato.</exception>
      <exception cref="T:System.ArgumentException">Number non è un tipo numerico.</exception>
      <returns>Parte intera di un numero.</returns>
    </member>
    <member name="M:Microsoft.VisualBasic.Conversion.Int(System.Single)">
      <summary>Restituisce la parte intera di un numero.</summary>
      <param name="Number">Obbligatorio. Numero di tipo <see cref="T:System.Single" /> o qualsiasi espressione numerica valida.</param>
      <exception cref="T:System.ArgumentNullException">Number non è specificato.</exception>
      <exception cref="T:System.ArgumentException">Number non è un tipo numerico.</exception>
      <returns>Parte intera di un numero.</returns>
    </member>
    <member name="M:Microsoft.VisualBasic.Conversion.Oct(System.Byte)">
      <summary>Restituisce una stringa che rappresenta il valore ottale di un numero.</summary>
      <param name="Number">Obbligatorio. Qualsiasi espressione numerica o espressione <see langword="String" /> valida.</param>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="Number" /> non specificato.</exception>
      <exception cref="T:System.ArgumentException">
        <paramref name="Number" /> non è un tipo numerico.</exception>
      <returns>Stringa che rappresenta il valore ottale di un numero.</returns>
    </member>
    <member name="M:Microsoft.VisualBasic.Conversion.Oct(System.Int16)">
      <summary>Restituisce una stringa che rappresenta il valore ottale di un numero.</summary>
      <param name="Number">Obbligatorio. Qualsiasi espressione numerica o espressione <see langword="String" /> valida.</param>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="Number" /> non specificato.</exception>
      <exception cref="T:System.ArgumentException">
        <paramref name="Number" /> non è un tipo numerico.</exception>
      <returns>Stringa che rappresenta il valore ottale di un numero.</returns>
    </member>
    <member name="M:Microsoft.VisualBasic.Conversion.Oct(System.Int32)">
      <summary>Restituisce una stringa che rappresenta il valore ottale di un numero.</summary>
      <param name="Number">Obbligatorio. Qualsiasi espressione numerica o espressione <see langword="String" /> valida.</param>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="Number" /> non specificato.</exception>
      <exception cref="T:System.ArgumentException">
        <paramref name="Number" /> non è un tipo numerico.</exception>
      <returns>Stringa che rappresenta il valore ottale di un numero.</returns>
    </member>
    <member name="M:Microsoft.VisualBasic.Conversion.Oct(System.Int64)">
      <summary>Restituisce una stringa che rappresenta il valore ottale di un numero.</summary>
      <param name="Number">Obbligatorio. Qualsiasi espressione numerica o espressione <see langword="String" /> valida.</param>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="Number" /> non specificato.</exception>
      <exception cref="T:System.ArgumentException">
        <paramref name="Number" /> non è un tipo numerico.</exception>
      <returns>Stringa che rappresenta il valore ottale di un numero.</returns>
    </member>
    <member name="M:Microsoft.VisualBasic.Conversion.Oct(System.Object)">
      <summary>Restituisce una stringa che rappresenta il valore ottale di un numero.</summary>
      <param name="Number">Obbligatorio. Qualsiasi espressione numerica o espressione <see langword="String" /> valida.</param>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="Number" /> non specificato.</exception>
      <exception cref="T:System.ArgumentException">
        <paramref name="Number" /> non è un tipo numerico.</exception>
      <returns>Stringa che rappresenta il valore ottale di un numero.</returns>
    </member>
    <member name="M:Microsoft.VisualBasic.Conversion.Oct(System.SByte)">
      <summary>Restituisce una stringa che rappresenta il valore ottale di un numero.</summary>
      <param name="Number">Obbligatorio. Qualsiasi espressione numerica o espressione <see langword="String" /> valida.</param>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="Number" /> non specificato.</exception>
      <exception cref="T:System.ArgumentException">
        <paramref name="Number" /> non è un tipo numerico.</exception>
      <returns>Stringa che rappresenta il valore ottale di un numero.</returns>
    </member>
    <member name="M:Microsoft.VisualBasic.Conversion.Oct(System.UInt16)">
      <summary>Restituisce una stringa che rappresenta il valore ottale di un numero.</summary>
      <param name="Number">Obbligatorio. Qualsiasi espressione numerica o espressione <see langword="String" /> valida.</param>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="Number" /> non specificato.</exception>
      <exception cref="T:System.ArgumentException">
        <paramref name="Number" /> non è un tipo numerico.</exception>
      <returns>Stringa che rappresenta il valore ottale di un numero.</returns>
    </member>
    <member name="M:Microsoft.VisualBasic.Conversion.Oct(System.UInt32)">
      <summary>Restituisce una stringa che rappresenta il valore ottale di un numero.</summary>
      <param name="Number">Obbligatorio. Qualsiasi espressione numerica o espressione <see langword="String" /> valida.</param>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="Number" /> non specificato.</exception>
      <exception cref="T:System.ArgumentException">
        <paramref name="Number" /> non è un tipo numerico.</exception>
      <returns>Stringa che rappresenta il valore ottale di un numero.</returns>
    </member>
    <member name="M:Microsoft.VisualBasic.Conversion.Oct(System.UInt64)">
      <summary>Restituisce una stringa che rappresenta il valore ottale di un numero.</summary>
      <param name="Number">Obbligatorio. Qualsiasi espressione numerica o espressione <see langword="String" /> valida.</param>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="Number" /> non specificato.</exception>
      <exception cref="T:System.ArgumentException">
        <paramref name="Number" /> non è un tipo numerico.</exception>
      <returns>Stringa che rappresenta il valore ottale di un numero.</returns>
    </member>
    <member name="M:Microsoft.VisualBasic.Conversion.Str(System.Object)">
      <summary>Restituisce una rappresentazione <see langword="String" /> di un numero.</summary>
      <param name="Number">Obbligatorio. Oggetto <see langword="Object" /> contenente qualsiasi espressione numerica valida.</param>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="Number" /> non specificato.</exception>
      <exception cref="T:System.InvalidCastException">
        <paramref name="Number" /> non è un tipo numerico.</exception>
      <returns>Rappresentazione <see langword="String" /> di un numero.</returns>
    </member>
    <member name="M:Microsoft.VisualBasic.Conversion.Val(System.Char)">
      <summary>Restituisce i numeri contenuti in una stringa come valore numerico del tipo appropriato.</summary>
      <param name="Expression">Obbligatorio. Qualsiasi espressione <see langword="String" />, variabile <see langword="Object" /> o valore <see langword="Char" /> valido. Se <paramref name="Expression" /> è di tipo <see langword="Object" />, il valore deve essere convertibile in <see langword="String" /> o si verifica un errore <see cref="T:System.ArgumentException" />.</param>
      <exception cref="T:System.OverflowException">
        <paramref name="InputStr" /> è troppo grande.</exception>
      <exception cref="T:System.ArgumentException">
        <paramref name="Expression" /> è un'espressione di tipo <see langword="Object" /> che non è convertibile in <see langword="String" />.</exception>
      <returns>Numeri contenuti in una stringa come valore numerico di tipo appropriato.</returns>
    </member>
    <member name="M:Microsoft.VisualBasic.Conversion.Val(System.Object)">
      <summary>Restituisce i numeri contenuti in una stringa come valore numerico del tipo appropriato.</summary>
      <param name="Expression">Obbligatorio. Qualsiasi espressione <see langword="String" />, variabile <see langword="Object" /> o valore <see langword="Char" /> valido. Se <paramref name="Expression" /> è di tipo <see langword="Object" />, il valore deve essere convertibile in <see langword="String" /> o si verifica un errore <see cref="T:System.ArgumentException" />.</param>
      <exception cref="T:System.OverflowException">
        <paramref name="InputStr" /> è troppo grande.</exception>
      <exception cref="T:System.ArgumentException">
        <paramref name="Expression" /> è un'espressione di tipo <see langword="Object" /> che non è convertibile in <see langword="String" />.</exception>
      <returns>Numeri contenuti in una stringa come valore numerico di tipo appropriato.</returns>
    </member>
    <member name="M:Microsoft.VisualBasic.Conversion.Val(System.String)">
      <summary>Restituisce i numeri contenuti in una stringa come valore numerico del tipo appropriato.</summary>
      <param name="InputStr">Obbligatorio. Qualsiasi espressione <see langword="String" />, variabile <see langword="Object" /> o valore <see langword="Char" /> valido. Se <paramref name="Expression" /> è di tipo <see langword="Object" />, il valore deve essere convertibile in <see langword="String" /> o si verifica un errore <see cref="T:System.ArgumentException" />.</param>
      <exception cref="T:System.OverflowException">
        <paramref name="InputStr" /> è troppo grande.</exception>
      <exception cref="T:System.ArgumentException">
        <paramref name="Expression" /> è un'espressione di tipo <see langword="Object" /> che non è convertibile in <see langword="String" />.</exception>
      <returns>Numeri contenuti in una stringa come valore numerico di tipo appropriato.</returns>
    </member>
    <member name="T:Microsoft.VisualBasic.DateAndTime">
      <summary>Il modulo <see langword="DateAndTime" /> contiene le procedure e le proprietà utilizzate nelle operazioni di data e ora.</summary>
    </member>
    <member name="M:Microsoft.VisualBasic.DateAndTime.DateAdd(Microsoft.VisualBasic.DateInterval,System.Double,System.DateTime)">
      <summary>Restituisce un valore contenente un valore di data e ora a cui è stato aggiunto un intervallo di tempo specifico.</summary>
      <param name="Interval">Obbligatorio. Valore dell'enumerazione <see cref="T:Microsoft.VisualBasic.DateInterval" /> o espressione String che rappresenta l'intervallo di tempo da aggiungere.</param>
      <param name="Number">Obbligatorio. Espressione a virgola mobile che rappresenta il numero di intervalli che si desidera aggiungere. Può essere positivo (per ottenere valori di data/ora nel futuro) o negativo (per ottenere valori di data/ora nel passato). Può contenere una parte frazionaria se <paramref name="Interval" /> specifica ore, minuti o secondi. Per gli altri valori di <paramref name="Interval" />, un'eventuale parte frazionaria di <paramref name="Number" /> viene ignorata.</param>
      <param name="DateValue">Obbligatorio. Espressione che rappresenta la data e l'ora a cui aggiungere l'intervallo. L'oggetto <paramref name="DateValue" /> stesso non viene modificato nel programma chiamante.</param>
      <exception cref="T:System.InvalidCastException">
        <paramref name="DateValue" /> non può essere assegnato forzatamente a un valore <see langword="Date" />.</exception>
      <exception cref="T:System.ArgumentException">
        <paramref name="Interval" /> non è valido.</exception>
      <exception cref="T:System.ArgumentOutOfRangeException">La data calcolata è precedente alle 00.00.00 dell'1 gennaio dell'anno 1 o successiva alle 23.59.59 del 31 dicembre 9999.</exception>
      <returns>Valore contenente un valore di data e ora a cui è stato aggiunto un intervallo di tempo specifico.</returns>
    </member>
    <member name="M:Microsoft.VisualBasic.DateAndTime.DateAdd(System.String,System.Double,System.Object)">
      <summary>Restituisce un valore contenente un valore di data e ora a cui è stato aggiunto un intervallo di tempo specifico.</summary>
      <param name="Interval">Obbligatorio. Valore dell'enumerazione <see cref="T:Microsoft.VisualBasic.DateInterval" /> o espressione String che rappresenta l'intervallo di tempo da aggiungere.</param>
      <param name="Number">Obbligatorio. Espressione a virgola mobile che rappresenta il numero di intervalli che si desidera aggiungere. <paramref name="Number" /> può essere positivo (per ottenere valori di data/ora nel futuro) o negativo (per ottenere valori di data/ora nel passato). Può contenere una parte frazionaria se <paramref name="Interval" /> specifica ore, minuti o secondi. Per gli altri valori di <paramref name="Interval" />, un'eventuale parte frazionaria di <paramref name="Number" /> viene ignorata.</param>
      <param name="DateValue">Obbligatorio. Espressione che rappresenta la data e l'ora a cui aggiungere l'intervallo. L'oggetto <paramref name="DateValue" /> stesso non viene modificato nel programma chiamante.</param>
      <exception cref="T:System.InvalidCastException">
        <paramref name="DateValue" /> non può essere assegnato forzatamente a un valore <see langword="Date" />.</exception>
      <exception cref="T:System.ArgumentException">
        <paramref name="Interval" /> non è valido.</exception>
      <exception cref="T:System.ArgumentOutOfRangeException">La data calcolata è precedente alle 00.00.00 dell'1 gennaio dell'anno 1 o successiva alle 23.59.59 del 31 dicembre 9999.</exception>
      <returns>Valore contenente un valore di data e ora a cui è stato aggiunto un intervallo di tempo specifico.</returns>
    </member>
    <member name="M:Microsoft.VisualBasic.DateAndTime.DateDiff(Microsoft.VisualBasic.DateInterval,System.DateTime,System.DateTime,Microsoft.VisualBasic.FirstDayOfWeek,Microsoft.VisualBasic.FirstWeekOfYear)">
      <summary>Restituisce un valore long che specifica il numero di intervalli di tempo tra due valori <see langword="Date" />.</summary>
      <param name="Interval">Obbligatorio. Valore dell'enumerazione <see cref="T:Microsoft.VisualBasic.DateInterval" /> o espressione String che rappresenta l'intervallo di tempo da usare come unità di differenza tra <paramref name="Date2" /> e <paramref name="Date1" />.</param>
      <param name="Date1">Obbligatorio. Il primo valore di data/ora che si desidera utilizzare nel calcolo.</param>
      <param name="Date2">Obbligatorio. Il secondo valore di data/ora che si desidera utilizzare nel calcolo.</param>
      <param name="DayOfWeek">facoltativo. Valore scelto dall'enumerazione <see cref="T:Microsoft.VisualBasic.FirstDayOfWeek" /> che specifica il primo giorno della settimana. Se omesso, viene utilizzato <see cref="F:Microsoft.VisualBasic.FirstDayOfWeek.Sunday" />.</param>
      <param name="WeekOfYear">facoltativo. Valore scelto dall'enumerazione <see cref="T:Microsoft.VisualBasic.FirstWeekOfYear" /> che specifica il primo giorno dell'anno. Se omesso, viene utilizzato <see cref="F:Microsoft.VisualBasic.FirstWeekOfYear.Jan1" />.</param>
      <exception cref="T:System.ArgumentException">
        <paramref name="Date1" />, <paramref name="Date2" /> o <paramref name="DayofWeek" /> non è compreso nell'intervallo consentito.</exception>
      <exception cref="T:System.InvalidCastException">
        <paramref name="Date1" /> o <paramref name="Date2" /> è di un tipo non valido.</exception>
      <returns>Valore long che specifica il numero di intervalli di tempo tra due valori <see langword="Date" />.</returns>
    </member>
    <member name="M:Microsoft.VisualBasic.DateAndTime.DateDiff(System.String,System.Object,System.Object,Microsoft.VisualBasic.FirstDayOfWeek,Microsoft.VisualBasic.FirstWeekOfYear)">
      <summary>Restituisce un valore long che specifica il numero di intervalli di tempo tra due valori <see langword="Date" />.</summary>
      <param name="Interval">Obbligatorio. Valore dell'enumerazione <see cref="T:Microsoft.VisualBasic.DateInterval" /> o espressione String che rappresenta l'intervallo di tempo da usare come unità di differenza tra <paramref name="Date2" /> e <paramref name="Date1" />.</param>
      <param name="Date1">Obbligatorio. Il primo valore di data/ora che si desidera utilizzare nel calcolo.</param>
      <param name="Date2">Obbligatorio. Il secondo valore di data/ora che si desidera utilizzare nel calcolo.</param>
      <param name="DayOfWeek">facoltativo. Valore scelto dall'enumerazione <see cref="T:Microsoft.VisualBasic.FirstDayOfWeek" /> che specifica il primo giorno della settimana. Se omesso, viene utilizzato <see cref="F:Microsoft.VisualBasic.FirstDayOfWeek.Sunday" />.</param>
      <param name="WeekOfYear">facoltativo. Valore scelto dall'enumerazione <see cref="T:Microsoft.VisualBasic.FirstWeekOfYear" /> che specifica il primo giorno dell'anno. Se omesso, viene utilizzato <see cref="F:Microsoft.VisualBasic.FirstWeekOfYear.Jan1" />.</param>
      <exception cref="T:System.ArgumentException">
        <paramref name="Date1" />, <paramref name="Date2" /> o <paramref name="DayofWeek" /> non è compreso nell'intervallo consentito.</exception>
      <exception cref="T:System.InvalidCastException">
        <paramref name="Date1" /> o <paramref name="Date2" /> è di un tipo non valido.</exception>
      <returns>Valore long che specifica il numero di intervalli di tempo tra due valori <see langword="Date" />.</returns>
    </member>
    <member name="M:Microsoft.VisualBasic.DateAndTime.DatePart(Microsoft.VisualBasic.DateInterval,System.DateTime,Microsoft.VisualBasic.FirstDayOfWeek,Microsoft.VisualBasic.FirstWeekOfYear)">
      <summary>Restituisce un intero contenente il componente specificato di un determinato valore <see langword="Date" />.</summary>
      <param name="Interval">Obbligatorio. Valore dell'enumerazione <see cref="T:Microsoft.VisualBasic.DateInterval" /> o espressione String che rappresenta la parte del valore di data/ora da restituire.</param>
      <param name="DateValue">Obbligatorio. Valore <see langword="Date" /> da valutare.</param>
      <param name="FirstDayOfWeekValue">facoltativo. Valore scelto dall'enumerazione <see cref="T:Microsoft.VisualBasic.FirstDayOfWeek" /> che specifica il primo giorno della settimana. Se omesso, viene utilizzato <see cref="F:Microsoft.VisualBasic.FirstDayOfWeek.Sunday" />.</param>
      <param name="FirstWeekOfYearValue">facoltativo. Valore scelto dall'enumerazione <see cref="T:Microsoft.VisualBasic.FirstWeekOfYear" /> che specifica il primo giorno dell'anno. Se omesso, viene utilizzato <see cref="F:Microsoft.VisualBasic.FirstWeekOfYear.Jan1" />.</param>
      <exception cref="T:System.ArgumentException">
        <paramref name="Interval" /> non è valido.</exception>
      <exception cref="T:System.InvalidCastException">
        <paramref name="DateValue" /> non può essere assegnato forzatamente a un valore <see langword="Date" />.</exception>
      <returns>Intero contenente il componente specificato di un determinato valore <see langword="Date" />.</returns>
    </member>
    <member name="M:Microsoft.VisualBasic.DateAndTime.DatePart(System.String,System.Object,Microsoft.VisualBasic.FirstDayOfWeek,Microsoft.VisualBasic.FirstWeekOfYear)">
      <summary>Restituisce un valore contenente il componente specificato di un determinato valore <see langword="Date" />.</summary>
      <param name="Interval">Obbligatorio. Valore dell'enumerazione <see cref="T:Microsoft.VisualBasic.DateInterval" /> o espressione String che rappresenta la parte del valore di data/ora da restituire.</param>
      <param name="DateValue">Obbligatorio. Valore <see langword="Date" /> da valutare.</param>
      <param name="DayOfWeek">facoltativo. Valore scelto dall'enumerazione <see cref="T:Microsoft.VisualBasic.FirstDayOfWeek" /> che specifica il primo giorno della settimana. Se omesso, viene utilizzato <see cref="F:Microsoft.VisualBasic.FirstDayOfWeek.Sunday" />.</param>
      <param name="WeekOfYear">facoltativo. Valore scelto dall'enumerazione <see cref="T:Microsoft.VisualBasic.FirstWeekOfYear" /> che specifica il primo giorno dell'anno. Se omesso, viene utilizzato <see cref="F:Microsoft.VisualBasic.FirstWeekOfYear.Jan1" />.</param>
      <exception cref="T:System.ArgumentException">
        <paramref name="Interval" /> non è valido.</exception>
      <exception cref="T:System.InvalidCastException">
        <paramref name="DateValue" /> non può essere assegnato forzatamente a un valore <see langword="Date" />.</exception>
      <returns>Intero contenente il componente specificato di un determinato valore <see langword="Date" />.</returns>
    </member>
    <member name="M:Microsoft.VisualBasic.DateAndTime.DateSerial(System.Int32,System.Int32,System.Int32)">
      <summary>Restituisce un valore <see langword="Date" /> che rappresenta l'anno, il mese e il giorno specificati, con le informazioni sull'ora impostate su mezzanotte (00:00:00).</summary>
      <param name="Year">Obbligatorio. Espressione Integer compresa tra 1 e 9999. Vengono tuttavia accettati anche valori minori di quelli compresi in questo intervallo. Se <paramref name="Year" /> è compreso tra 0 e 99, viene interpretato come appartenente all'intervallo tra 1930 e 2029, come descritto nella sezione "Osservazioni". Se <paramref name="Year" /> è minore di 1, viene sottratto dall'anno corrente.</param>
      <param name="Month">Obbligatorio. Espressione Integer compresa tra 1 e 12. Vengono tuttavia accettati anche valori non compresi in questo intervallo. Il valore di <paramref name="Month" /> viene diminuito di 1 e applicato a gennaio dell'anno calcolato. In altre parole, (<paramref name="Month" /> - 1) viene aggiunto a gennaio. Se necessario, l'anno viene ricalcolato. Questo effetto è illustrato nei seguenti risultati: 
Se <paramref name="Month" /> è uguale a 1, il risultato è gennaio dell'anno calcolato.  
  
Se <paramref name="Month" /> è uguale a 0, il risultato è dicembre dell'anno precedente.  
  
Se <paramref name="Month" /> è uguale a -1, il risultato è novembre dell'anno precedente.  
  
Se <paramref name="Month" /> è uguale a 13, il risultato è gennaio dell'anno successivo.</param>
      <param name="Day">Obbligatorio. Espressione Integer compresa tra 1 e 31. Vengono tuttavia accettati anche valori non compresi in questo intervallo. Il valore di <paramref name="Day" /> viene diminuito di 1 e applicato al primo giorno del mese calcolato. In altre parole, (<paramref name="Day" /> - 1) viene aggiunto al primo giorno del mese. Se necessario, il mese e l'anno vengono ricalcolati. Questo effetto è illustrato nei seguenti risultati: 
Se <paramref name="Day" /> è uguale a 1, il risultato è il primo giorno dell'anno calcolato.  
  
Se <paramref name="Day" /> è uguale a 0, il risultato è l'ultimo giorno del mese precedente.  
  
Se <paramref name="Day" /> è uguale a 1, il risultato è il penultimo giorno del mese precedente.  
  
Se <paramref name="Day" /> è successivo alla fine del mese corrente, il risultato è il giorno appropriato del mese successivo. Se, ad esempio <paramref name="Month" /> è 4 e <paramref name="Day" /> è 31, il risultato è 1 maggio.</param>
      <returns>Valore <see langword="Date" /> che rappresenta l'anno, il mese e il giorno specificati, con le informazioni sull'ora impostate su mezzanotte (00:00:00).</returns>
    </member>
    <member name="M:Microsoft.VisualBasic.DateAndTime.DateValue(System.String)">
      <summary>Restituisce un valore <see langword="Date" /> contenente le informazioni sulla data rappresentate da una stringa e le informazioni sull'ora impostate sulla mezzanotte (00:00:00).</summary>
      <param name="StringDate">Obbligatorio. Espressione String che rappresenta un valore di data/ora compreso tra le ore 00:00:00 del primo gennaio dell'anno 1 e le ore 23:59:59 del 31 dicembre 9999.</param>
      <exception cref="T:System.InvalidCastException">
        <paramref name="StringDate" /> include informazioni sull'ora non valide.</exception>
      <returns>Valore <see langword="Date" /> contenente le informazioni sulla data rappresentate da una stringa, con le informazioni sull'ora impostate sulla mezzanotte (00:00:00).</returns>
    </member>
    <member name="M:Microsoft.VisualBasic.DateAndTime.Day(System.DateTime)">
      <summary>Restituisce un intero compreso tra 1 e 31 che rappresenta il giorno del mese.</summary>
      <param name="DateValue">Obbligatorio. Valore <see langword="Date" /> da cui estrarre il giorno.</param>
      <returns>Intero compreso tra 1 e 31 che rappresenta il giorno del mese.</returns>
    </member>
    <member name="M:Microsoft.VisualBasic.DateAndTime.Hour(System.DateTime)">
      <summary>Restituisce un intero compreso tra 0 e 23 che rappresenta l'ora del giorno.</summary>
      <param name="TimeValue">Obbligatorio. Valore <see langword="Date" /> da cui estrarre l'ora.</param>
      <returns>Intero compreso tra 0 e 23 che rappresenta l'ora del giorno.</returns>
    </member>
    <member name="M:Microsoft.VisualBasic.DateAndTime.Minute(System.DateTime)">
      <summary>Restituisce un intero compreso tra 0 e 59 che rappresenta il minuto dell'ora.</summary>
      <param name="TimeValue">Obbligatorio. Valore <see langword="Date" /> da cui estrarre il minuto.</param>
      <returns>Intero compreso tra 0 e 59 che rappresenta il minuto dell'ora.</returns>
    </member>
    <member name="M:Microsoft.VisualBasic.DateAndTime.Month(System.DateTime)">
      <summary>Intero compreso tra 1 e 12 che rappresenta il mese dell'anno.</summary>
      <param name="DateValue">Obbligatorio. Valore <see langword="Date" /> da cui estrarre il mese.</param>
      <returns>Intero compreso tra 1 e 12 che rappresenta il mese dell'anno.</returns>
    </member>
    <member name="M:Microsoft.VisualBasic.DateAndTime.MonthName(System.Int32,System.Boolean)">
      <summary>Restituisce una valore stringa contenente il nome del mese specificato.</summary>
      <param name="Month">Obbligatorio. Designazione numerica del mese, da 1 a 13. 1 indica gennaio e 12 indica dicembre. È possibile utilizzare il valore 13 con un calendario di 13 mesi. Se il sistema usa il calendario di 12 mesi e <paramref name="Month" /> è uguale a 13, <c>MonthName</c> restituisce una stringa vuota.</param>
      <param name="Abbreviate">facoltativo. <see langword="True" /> per abbreviare il nome del mese. In caso contrario, <see langword="False" />. Il valore predefinito è <see langword="False" />.</param>
      <exception cref="T:System.ArgumentException">
        <paramref name="Month" /> è minore di 1 o maggiore di 13.</exception>
      <returns>Valore stringa contenente il nome del mese specificato.</returns>
    </member>
    <member name="M:Microsoft.VisualBasic.DateAndTime.Second(System.DateTime)">
      <summary>Restituisce un intero compreso tra 0 e 59 che rappresenta il secondo del minuto.</summary>
      <param name="TimeValue">Obbligatorio. Valore <see langword="Date" /> da cui estrarre il secondo.</param>
      <returns>Intero compreso tra 0 e 59 che rappresenta il secondo del minuto.</returns>
    </member>
    <member name="M:Microsoft.VisualBasic.DateAndTime.TimeSerial(System.Int32,System.Int32,System.Int32)">
      <summary>Restituisce un valore <see langword="Date" /> che rappresenta l'ora, i minuti e i secondi specificati, con le informazioni sulla data impostate rispetto all'1 gennaio dell'anno 1.</summary>
      <param name="Hour">Obbligatorio. Espressione Integer compresa tra 0 e 23. Vengono tuttavia accettati anche valori non compresi in questo intervallo.</param>
      <param name="Minute">Obbligatorio. Espressione Integer compresa tra 0 e 59. Vengono tuttavia accettati anche valori non compresi in questo intervallo. Il valore di <paramref name="Minute" /> viene aggiunto all'ora calcolata, quindi un valore negativo specifica i minuti prima di tale ora.</param>
      <param name="Second">Obbligatorio. Espressione Integer compresa tra 0 e 59. Vengono tuttavia accettati anche valori non compresi in questo intervallo. Il valore di <paramref name="Second" /> viene aggiunto al minuto calcolato, quindi un valore negativo specifica i secondi prima di tale minuto.</param>
      <exception cref="T:System.ArgumentException">L'argomento non è compreso nell'intervallo tra -2.147.483.648 e 2.147.483.647.</exception>
      <exception cref="T:System.ArgumentOutOfRangeException">L'ora calcolata è minore dei numeri negativi corrispondenti a 24 ore.</exception>
      <returns>Valore <see langword="Date" /> che rappresenta l'ora, i minuti e i secondi specificati, con le informazioni sulla data impostate rispetto all'1 gennaio dell'anno 1.</returns>
    </member>
    <member name="M:Microsoft.VisualBasic.DateAndTime.TimeValue(System.String)">
      <summary>Restituisce un valore <see langword="Date" /> che contiene le informazioni sull'ora rappresentate da una stringa, con le informazioni sulla data impostate sull'1 gennaio dell'anno 1.</summary>
      <param name="StringTime">Obbligatorio. Espressione String che rappresenta un valore di data/ora compreso tra le ore 00:00:00 del primo gennaio dell'anno 1 e le ore 23:59:59 del 31 dicembre 9999.</param>
      <exception cref="T:System.InvalidCastException">
        <paramref name="StringTime" /> include informazioni sulla data non valide.</exception>
      <returns>Valore <see langword="Date" /> che contiene le informazioni sull'ora rappresentate da una stringa, con le informazioni sulla data impostate sull'1 gennaio dell'anno 1.</returns>
    </member>
    <member name="M:Microsoft.VisualBasic.DateAndTime.Weekday(System.DateTime,Microsoft.VisualBasic.FirstDayOfWeek)">
      <summary>Restituisce un intero contenente un numero che rappresenta il giorno della settimana.</summary>
      <param name="DateValue">Obbligatorio. Valore <see langword="Date" /> per cui determinare il giorno della settimana.</param>
      <param name="DayOfWeek">facoltativo. Valore scelto dall'enumerazione <see cref="T:Microsoft.VisualBasic.FirstDayOfWeek" /> che specifica il primo giorno della settimana. Se omesso, viene utilizzato <see cref="F:Microsoft.VisualBasic.FirstDayOfWeek.Sunday" />.</param>
      <exception cref="T:System.ArgumentException">
        <paramref name="DayOfWeek" /> è minore di 0 o maggiore di 7.</exception>
      <returns>Intero contenente un numero che rappresenta il giorno della settimana.</returns>
    </member>
    <member name="M:Microsoft.VisualBasic.DateAndTime.WeekdayName(System.Int32,System.Boolean,Microsoft.VisualBasic.FirstDayOfWeek)">
      <summary>Restituisce un valore stringa contenente il nome del giorno della settimana specificato.</summary>
      <param name="Weekday">Obbligatorio. Integer. Designazione numerica del giorno della settimana, da 1 a 7. 1 indica il primo giorno della settimana e 7 l'ultimo. Le identità del primo e dell'ultimo giorno dipendono dall'impostazione di <paramref name="FirstDayOfWeekValue" />.</param>
      <param name="Abbreviate">facoltativo. Valore <see langword="Boolean" /> che indica se il nome del giorno della settimana deve essere abbreviato. Se omesso, il valore predefinito è <see langword="False" /> e significa che il nome del giorno della settimana non è abbreviato.</param>
      <param name="FirstDayOfWeekValue">facoltativo. Valore scelto dall'enumerazione <see cref="T:Microsoft.VisualBasic.FirstDayOfWeek" /> che specifica il primo giorno della settimana. Se omesso, viene utilizzato <see langword="FirstDayOfWeek.System" />.</param>
      <exception cref="T:System.ArgumentException">
        <paramref name="Weekday" /> è mino di 1 o maggiore di 7 oppure <paramref name="FirstDayOfWeekValue" /> è minore di 0 o maggiore di 7.</exception>
      <returns>Valore stringa contenente il nome del giorno della settimana specificato.</returns>
    </member>
    <member name="M:Microsoft.VisualBasic.DateAndTime.Year(System.DateTime)">
      <summary>Restituisce un intero compreso tra 1 e 9999 che rappresenta l'anno.</summary>
      <param name="DateValue">Obbligatorio. Valore <see langword="Date" /> da cui estrarre l'anno.</param>
      <returns>Intero compreso tra 1 e 9999 che rappresenta l'anno.</returns>
    </member>
    <member name="P:Microsoft.VisualBasic.DateAndTime.DateString">
      <summary>Restituisce o imposta un valore stringa che rappresenta la data corrente in base alle impostazioni del sistema.</summary>
      <exception cref="T:System.InvalidCastException">Formato non valido utilizzato per l'impostazione del valore di <see cref="P:Microsoft.VisualBasic.DateAndTime.DateString" />.</exception>
      <returns>Restituisce o imposta un valore stringa che rappresenta la data corrente in base alle impostazioni del sistema.</returns>
    </member>
    <member name="P:Microsoft.VisualBasic.DateAndTime.Now">
      <summary>Restituisce un valore contenente la data e l'ora correnti del sistema in uso.</summary>
      <returns>Data e ora correnti in base al sistema.</returns>
    </member>
    <member name="P:Microsoft.VisualBasic.DateAndTime.TimeOfDay">
      <summary>Restituisce o imposta un valore <see langword="Date" /> contenente l'ora corrente del sistema in uso.</summary>
      <returns>Restituisce o imposta un valore <see langword="Date" /> contenente l'ora corrente del sistema in uso.</returns>
    </member>
    <member name="P:Microsoft.VisualBasic.DateAndTime.Timer">
      <summary>Restituisce un valore <see cref="T:System.Double" /> che rappresenta il numero di secondi trascorsi dalla mezzanotte.</summary>
      <returns>Valore che rappresenta il numero di secondi trascorsi dalla mezzanotte.</returns>
    </member>
    <member name="P:Microsoft.VisualBasic.DateAndTime.TimeString">
      <summary>Restituisce o imposta un valore stringa che rappresenta l'ora corrente del giorno in base al sistema in uso.</summary>
      <exception cref="T:System.InvalidCastException">Formato non valido utilizzato per l'impostazione del valore di <see langword="TimeString" />.</exception>
      <returns>Restituisce o imposta un valore stringa che rappresenta l'ora corrente del giorno in base al sistema in uso.</returns>
    </member>
    <member name="P:Microsoft.VisualBasic.DateAndTime.Today">
      <summary>Restituisce o imposta un valore <see langword="Date" /> contenente la data corrente del sistema in uso.</summary>
      <returns>Restituisce o imposta un valore <see langword="Date" /> contenente la data corrente del sistema in uso.</returns>
    </member>
    <member name="T:Microsoft.VisualBasic.DateFormat">
      <summary>Indica come visualizzare le date quando si chiama la funzione <see langword="FormatDateTime" />.</summary>
    </member>
    <member name="F:Microsoft.VisualBasic.DateFormat.GeneralDate">
      <summary>Per i numeri reali, visualizza data e ora. Se il numero non include una parte frazionaria, visualizza solo la data. Se il numero non include una parte intera, visualizza solo l'ora. La visualizzazione della data e dell'ora è determinata dalle impostazioni internazionali del computer. Questo membro è equivalente alla costante <see langword="vbGeneralDate" />di Visual Basic.</summary>
    </member>
    <member name="F:Microsoft.VisualBasic.DateFormat.LongDate">
      <summary>Visualizza la data utilizzando il formato di data lungo specificato nelle impostazioni internazionali del computer. Questo membro è equivalente alla costante <see langword="vbLongDate" />di Visual Basic.</summary>
    </member>
    <member name="F:Microsoft.VisualBasic.DateFormat.LongTime">
      <summary>Visualizza l'ora utilizzando il formato di ora lungo specificato nelle impostazioni internazionali del computer. Questo membro è equivalente alla costante <see langword="vbLongTime" />di Visual Basic.</summary>
    </member>
    <member name="F:Microsoft.VisualBasic.DateFormat.ShortDate">
      <summary>Visualizza la data utilizzando il formato di data breve specificato nelle impostazioni internazionali del computer. Questo membro è equivalente alla costante <see langword="vbShortDate" />di Visual Basic.</summary>
    </member>
    <member name="F:Microsoft.VisualBasic.DateFormat.ShortTime">
      <summary>Visualizza l'ora utilizzando il formato di ora breve specificato nelle impostazioni internazionali del computer. Questo membro è equivalente alla costante <see langword="vbShortTime" />di Visual Basic.</summary>
    </member>
    <member name="T:Microsoft.VisualBasic.DateInterval">
      <summary>Indica come determinare e formattare gli intervalli di date quando si chiamano funzioni relative alle date.</summary>
    </member>
    <member name="F:Microsoft.VisualBasic.DateInterval.Day">
      <summary>Giorno del mese (da 1 a 31).</summary>
    </member>
    <member name="F:Microsoft.VisualBasic.DateInterval.DayOfYear">
      <summary>Giorno dell'anno (da 1 a 366).</summary>
    </member>
    <member name="F:Microsoft.VisualBasic.DateInterval.Hour">
      <summary>Ora (da 0 a 23)</summary>
    </member>
    <member name="F:Microsoft.VisualBasic.DateInterval.Minute">
      <summary>Minuto (da 0 a 59)</summary>
    </member>
    <member name="F:Microsoft.VisualBasic.DateInterval.Month">
      <summary>Mese (da 1 a 12).</summary>
    </member>
    <member name="F:Microsoft.VisualBasic.DateInterval.Quarter">
      <summary>Trimestre dell'anno (da 1 a 4)</summary>
    </member>
    <member name="F:Microsoft.VisualBasic.DateInterval.Second">
      <summary>Secondo (da 0 a 59)</summary>
    </member>
    <member name="F:Microsoft.VisualBasic.DateInterval.Weekday">
      <summary>Giorno della settimana (da 1 a 7).</summary>
    </member>
    <member name="F:Microsoft.VisualBasic.DateInterval.WeekOfYear">
      <summary>Settimana dell'anno (da 1 a 53).</summary>
    </member>
    <member name="F:Microsoft.VisualBasic.DateInterval.Year">
      <summary>Year</summary>
    </member>
    <member name="T:Microsoft.VisualBasic.DueDate">
      <summary>Indica le scadenze dei pagamenti quando vengono chiamati i metodi finanziari.</summary>
    </member>
    <member name="F:Microsoft.VisualBasic.DueDate.BegOfPeriod">
      <summary>Cade all'inizio dell'intervallo di date.</summary>
    </member>
    <member name="F:Microsoft.VisualBasic.DueDate.EndOfPeriod">
      <summary>Cade alla fine dell'intervallo di date.</summary>
    </member>
    <member name="T:Microsoft.VisualBasic.ErrObject">
      <summary>Il modulo <see langword="ErrObject" /> contiene proprietà e procedure che consentono di identificare e gestire gli errori di run-time mediante l'oggetto <see langword="Err" />.</summary>
    </member>
    <member name="M:Microsoft.VisualBasic.ErrObject.Clear">
      <summary>Cancella tutte le impostazioni delle proprietà dell'oggetto <see langword="Err" />.</summary>
    </member>
    <member name="M:Microsoft.VisualBasic.ErrObject.GetException">
      <summary>Restituisce l'eccezione che rappresenta l'errore.</summary>
      <returns>Eccezione che rappresenta l'errore che si è verificato.</returns>
    </member>
    <member name="M:Microsoft.VisualBasic.ErrObject.Raise(System.Int32,System.Object,System.Object,System.Object,System.Object)">
      <summary>Genera un errore di run-time. Può essere utilizzata al posto dell'istruzione <see langword="Error" />.</summary>
      <param name="Number">Obbligatorio. Valore <see langword="Long" /> integer che identifica la natura dell'errore. Gli errori di Visual Basic rientrano nell'intervallo 0-65535. L'intervallo 0-512 è riservato agli errori di sistema, mentre l'intervallo 513-65535 è disponibile per gli errori definiti dall'utente. Per impostare la proprietà <see langword="Number" /> sul codice di errore in un modulo di classe, è necessario aggiungere il numero del codice di errore alla costante <see langword="vbObjectError" />. Ad esempio, per generare l'errore numero 513, assegnare <c>vbObjectError + 513</c> alla proprietà <see langword="Number" />.</param>
      <param name="Source">facoltativo. Espressione <see langword="String" /> che denomina l'oggetto o applicazione che ha generato l'errore. Quando si imposta questa proprietà per un oggetto, usare il formato <c>progetto</c>.<c>classe</c>. Se <paramref name="Source" /> non viene specificato, viene utilizzato l'ID del processo del progetto Visual Basic corrente.</param>
      <param name="Description">facoltativo. Espressione <see langword="String" /> che descrive l'errore. Se omessa, viene esaminato il valore della proprietà <see langword="Number" />. Se può essere associata a un codice di errore di run-time di Visual Basic, la stringa restituita dalla funzione <see langword="Error" /> viene utilizzata come proprietà <see langword="Description" />. Se non è vi alcun errore di Visual Basic che corrisponde alla proprietà <see langword="Number" />, viene utilizzato il messaggio "Errore definito dall'applicazione o dall'oggetto".</param>
      <param name="HelpFile">facoltativo. Percorso completo del file della Guida in cui sono disponibili informazioni sull'errore. Se omessa, viene utilizzato il nome completo dell'unità, del percorso e del file della Guida di Visual Basic.</param>
      <param name="HelpContext">facoltativo. ID di contesto che identifica un argomento di <paramref name="HelpFile" /> contenente informazioni sull'errore. Se omessa, viene utilizzato, se esistente, l'ID di contesto del file della Guida di Visual Basic relativo all'errore corrispondente alla proprietà <see langword="Number" />.</param>
    </member>
    <member name="P:Microsoft.VisualBasic.ErrObject.Description">
      <summary>Restituisce o imposta un'espressione <see langword="String" /> contenente una stringa descrittiva associata a un errore. Proprietà di lettura/scrittura.</summary>
      <returns>Restituisce o imposta un'espressione <see langword="String" /> contenente una stringa descrittiva associata a un errore. Proprietà di lettura/scrittura.</returns>
    </member>
    <member name="P:Microsoft.VisualBasic.ErrObject.Erl">
      <summary>Ottiene un valore intero che indica il numero di riga dell'ultima istruzione eseguita.</summary>
      <returns>Numero di riga dell'ultima istruzione eseguita.</returns>
    </member>
    <member name="P:Microsoft.VisualBasic.ErrObject.HelpContext">
      <summary>Restituisce o imposta un valore <see langword="Integer" /> contenente l'ID di contesto di un argomento di un file della Guida. Proprietà di lettura/scrittura.</summary>
      <returns>Restituisce o imposta un valore <see langword="Integer" /> contenente l'ID di contesto di un argomento di un file della Guida. Proprietà di lettura/scrittura.</returns>
    </member>
    <member name="P:Microsoft.VisualBasic.ErrObject.HelpFile">
      <summary>Restituisce o imposta un'espressione <see langword="String" /> contenente il percorso completo di un file della Guida. Proprietà di lettura/scrittura.</summary>
      <returns>Restituisce o imposta un'espressione <see langword="String" /> contenente il percorso completo di un file della Guida. Proprietà di lettura/scrittura.</returns>
    </member>
    <member name="P:Microsoft.VisualBasic.ErrObject.LastDllError">
      <summary>Ottiene un codice di errore di sistema generato da una chiamata a una libreria di collegamento dinamico (DLL).</summary>
      <returns>Codice di errore di sistema prodotto da una chiamata a una libreria di collegamento dinamico (DLL).</returns>
    </member>
    <member name="P:Microsoft.VisualBasic.ErrObject.Number">
      <summary>Restituisce o imposta un valore numerico che specifica un errore. Proprietà di lettura/scrittura.</summary>
      <exception cref="T:System.ArgumentException">
        <paramref name="Number" /> è maggiore di 65535.</exception>
      <returns>Restituisce o imposta un valore numerico che specifica un errore. Proprietà di lettura/scrittura.</returns>
    </member>
    <member name="P:Microsoft.VisualBasic.ErrObject.Source">
      <summary>Restituisce o imposta un'espressione <see langword="String" /> che specifica il nome dell'oggetto o dell'applicazione che ha generato l'errore. Proprietà di lettura/scrittura.</summary>
      <returns>Restituisce o imposta un'espressione <see langword="String" /> che specifica il nome dell'oggetto o dell'applicazione che ha generato l'errore. Proprietà di lettura/scrittura.</returns>
    </member>
    <member name="T:Microsoft.VisualBasic.FileAttribute">
      <summary>Indica gli attributi file da utilizzare quando si chiamano funzioni di accesso ai file.</summary>
    </member>
    <member name="F:Microsoft.VisualBasic.FileAttribute.Archive">
      <summary>Il file è stato modificato dopo l'ultimo backup. Questo membro è equivalente alla costante <see langword="vbArchive" />di Visual Basic.</summary>
    </member>
    <member name="F:Microsoft.VisualBasic.FileAttribute.Directory">
      <summary>Directory o cartella. Questo membro è equivalente alla costante <see langword="vbDirectory" />di Visual Basic.</summary>
    </member>
    <member name="F:Microsoft.VisualBasic.FileAttribute.Hidden">
      <summary>Nascosto. Questo membro è equivalente alla costante <see langword="vbHidden" />di Visual Basic.</summary>
    </member>
    <member name="F:Microsoft.VisualBasic.FileAttribute.Normal">
      <summary>Normale (predefinito per <see langword="Dir" /> e <see langword="SetAttr" />). Nessuna caratteristica speciale per questo file. Questo membro è equivalente alla costante <see langword="vbNormal" />di Visual Basic.</summary>
    </member>
    <member name="F:Microsoft.VisualBasic.FileAttribute.ReadOnly">
      <summary>Sola lettura. Questo membro è equivalente alla costante <see langword="vbReadOnly" />di Visual Basic.</summary>
    </member>
    <member name="F:Microsoft.VisualBasic.FileAttribute.System">
      <summary>File di sistema. Questo membro è equivalente alla costante <see langword="vbSystem" />di Visual Basic.</summary>
    </member>
    <member name="F:Microsoft.VisualBasic.FileAttribute.Volume">
      <summary>Etichetta di volume. Questo attributo non è valido se utilizzato con <see langword="SetAttr" />. Questo membro è equivalente alla costante <see langword="vbVolume" />di Visual Basic.</summary>
    </member>
    <member name="T:Microsoft.VisualBasic.FileIO.DeleteDirectoryOption">
      <summary>Specifica le azioni da intraprendere quando si deve eliminare una directory contenente file o directory.</summary>
    </member>
    <member name="F:Microsoft.VisualBasic.FileIO.DeleteDirectoryOption.DeleteAllContents">
      <summary>Elimina il contenuto della directory insieme alla directory. Predefinita.</summary>
    </member>
    <member name="F:Microsoft.VisualBasic.FileIO.DeleteDirectoryOption.ThrowIfDirectoryNonEmpty">
      <summary>Se la directory non è vuota, genera un'eccezione <see cref="T:System.IO.IOException" />. La proprietà <see langword="Data" /> dell'eccezione elenca i file che non possono essere eliminati.</summary>
    </member>
    <member name="T:Microsoft.VisualBasic.FileIO.FieldType">
      <summary>Indica se i campi di testo sono delimitati o a larghezza fissa.</summary>
    </member>
    <member name="F:Microsoft.VisualBasic.FileIO.FieldType.Delimited">
      <summary>Indica che i campi sono delimitati</summary>
    </member>
    <member name="F:Microsoft.VisualBasic.FileIO.FieldType.FixedWidth">
      <summary>Indica che i campi sono a larghezza fissa.</summary>
    </member>
    <member name="T:Microsoft.VisualBasic.FileIO.FileSystem">
      <summary>Specifica proprietà e metodi per l'uso di unità, file e directory.</summary>
    </member>
    <member name="M:Microsoft.VisualBasic.FileIO.FileSystem.#ctor">
      <summary>Inizializza una nuova istanza della classe <see cref="T:Microsoft.VisualBasic.FileIO.FileSystem" />.</summary>
    </member>
    <member name="M:Microsoft.VisualBasic.FileIO.FileSystem.CombinePath(System.String,System.String)">
      <summary>Combina due percorsi e restituisce un percorso formattato correttamente.</summary>
      <param name="baseDirectory">
        <see langword="String" />. Primo percorso da combinare.</param>
      <param name="relativePath">
        <see langword="String" />. Secondo percorso da combinare.</param>
      <exception cref="T:System.ArgumentException">
        <paramref name="baseDirectory" /> o <paramref name="relativePath" /> sono percorsi in formato non valido.</exception>
      <returns>Combinazione dei percorsi specificati.</returns>
    </member>
    <member name="M:Microsoft.VisualBasic.FileIO.FileSystem.CopyDirectory(System.String,System.String)">
      <summary>Copia il contenuto di una directory in un'altra directory.</summary>
      <param name="sourceDirectoryName">Directory da copiare.</param>
      <param name="destinationDirectoryName">Posizione in cui deve essere copiato il contenuto della directory.</param>
      <exception cref="T:System.ArgumentException">Il percorso non è valido per uno dei motivi seguenti: è una stringa di lunghezza zero, contiene solo spazi vuoti, contiene caratteri non validi o è il percorso di un dispositivo (inizia con \\.\).</exception>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="destinationDirectoryName" /> o <paramref name="sourceDirectoryName" /> è <see langword="Nothing" /> o una stringa vuota.</exception>
      <exception cref="T:System.IO.DirectoryNotFoundException">La directory di origine non esiste.</exception>
      <exception cref="T:System.IO.IOException">Il percorso di origine e il percorso di destinazione coincidono.</exception>
      <exception cref="T:System.InvalidOperationException">Questa operazione è ciclica.</exception>
      <exception cref="T:System.IO.PathTooLongException">La lunghezza del percorso supera la lunghezza massima definita dal sistema.</exception>
      <exception cref="T:System.NotSupportedException">Nel nome di una cartella nel percorso sono presenti i due punti (:) oppure il formato non è valido.</exception>
      <exception cref="T:System.Security.SecurityException">L'utente non dispone delle autorizzazioni necessarie per visualizzare il percorso.</exception>
      <exception cref="T:System.UnauthorizedAccessException">È disponibile un file di destinazione, ma non è possibile accedervi.</exception>
    </member>
    <member name="M:Microsoft.VisualBasic.FileIO.FileSystem.CopyDirectory(System.String,System.String,Microsoft.VisualBasic.FileIO.UIOption)">
      <summary>Copia il contenuto di una directory in un'altra directory.</summary>
      <param name="sourceDirectoryName">Directory da copiare.</param>
      <param name="destinationDirectoryName">Posizione in cui deve essere copiato il contenuto della directory.</param>
      <param name="showUI">Specifica se tenere traccia in modo visivo dello stato dell'operazione. Il valore predefinito è <see langword="UIOption.OnlyErrorDialogs" />.</param>
      <exception cref="T:System.ArgumentException">Il percorso non è valido per uno dei motivi seguenti: è una stringa di lunghezza zero, contiene solo spazi vuoti, contiene caratteri non validi o è il percorso di un dispositivo (inizia con \\.\).</exception>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="destinationDirectoryName" /> o <paramref name="sourceDirectoryName" /> è <see langword="Nothing" /> o una stringa vuota.</exception>
      <exception cref="T:System.IO.DirectoryNotFoundException">La directory di origine non esiste.</exception>
      <exception cref="T:System.IO.IOException">Il percorso di origine e il percorso di destinazione coincidono.</exception>
      <exception cref="T:System.InvalidOperationException">Questa operazione è ciclica.</exception>
      <exception cref="T:System.IO.PathTooLongException">La lunghezza del percorso supera la lunghezza massima definita dal sistema.</exception>
      <exception cref="T:System.NotSupportedException">Nel nome di una cartella nel percorso sono presenti i due punti (:) oppure il formato non è valido.</exception>
      <exception cref="T:System.Security.SecurityException">L'utente non dispone delle autorizzazioni necessarie per visualizzare il percorso.</exception>
      <exception cref="T:System.UnauthorizedAccessException">È disponibile un file di destinazione, ma non è possibile accedervi.</exception>
      <exception cref="T:System.OperationCanceledException">
        <paramref name="ShowUI" /> è impostato su <see langword="UIOption.AllDialogs" /> e l'utente annulla l'operazione oppure uno o più file nella directory non possono essere copiati.</exception>
    </member>
    <member name="M:Microsoft.VisualBasic.FileIO.FileSystem.CopyDirectory(System.String,System.String,Microsoft.VisualBasic.FileIO.UIOption,Microsoft.VisualBasic.FileIO.UICancelOption)">
      <summary>Copia il contenuto di una directory in un'altra directory.</summary>
      <param name="sourceDirectoryName">Directory da copiare.</param>
      <param name="destinationDirectoryName">Posizione in cui deve essere copiato il contenuto della directory.</param>
      <param name="showUI">Specifica se tenere traccia in modo visivo dello stato dell'operazione. Il valore predefinito è <see langword="UIOption.OnlyErrorDialogs" />.</param>
      <param name="onUserCancel">Specifica le operazioni da eseguire se l'utente fa clic su Annulla durante l'operazione. Il valore predefinito è <see cref="F:Microsoft.VisualBasic.FileIO.UICancelOption.ThrowException" />.</param>
      <exception cref="T:System.ArgumentException">Il percorso non è valido per uno dei motivi seguenti: è una stringa di lunghezza zero, contiene solo spazi vuoti, contiene caratteri non validi o è il percorso di un dispositivo (inizia con \\.\).</exception>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="destinationDirectoryName" /> o <paramref name="sourceDirectoryName" /> è <see langword="Nothing" /> o una stringa vuota.</exception>
      <exception cref="T:System.IO.DirectoryNotFoundException">La directory di origine non esiste.</exception>
      <exception cref="T:System.IO.IOException">Il percorso di origine e il percorso di destinazione coincidono.</exception>
      <exception cref="T:System.InvalidOperationException">Questa operazione è ciclica.</exception>
      <exception cref="T:System.IO.PathTooLongException">La lunghezza del percorso supera la lunghezza massima definita dal sistema.</exception>
      <exception cref="T:System.NotSupportedException">Nel nome di una cartella nel percorso sono presenti i due punti (:) oppure il formato non è valido.</exception>
      <exception cref="T:System.Security.SecurityException">L'utente non dispone delle autorizzazioni necessarie per visualizzare il percorso.</exception>
      <exception cref="T:System.UnauthorizedAccessException">È disponibile un file di destinazione, ma non è possibile accedervi.</exception>
      <exception cref="T:System.OperationCanceledException">
        <paramref name="ShowUI" /> è impostato su <see langword="UIOption.AllDialogs" /> e l'utente annulla l'operazione oppure uno o più file nella directory non possono essere copiati.</exception>
    </member>
    <member name="M:Microsoft.VisualBasic.FileIO.FileSystem.CopyDirectory(System.String,System.String,System.Boolean)">
      <summary>Copia il contenuto di una directory in un'altra directory.</summary>
      <param name="sourceDirectoryName">Directory da copiare.</param>
      <param name="destinationDirectoryName">Posizione in cui deve essere copiato il contenuto della directory.</param>
      <param name="overwrite">
        <see langword="True" /> per sovrascrivere i file esistenti; in caso contrario, <see langword="False" />. Il valore predefinito è <see langword="False" />.</param>
      <exception cref="T:System.ArgumentException">Il percorso non è valido per uno dei motivi seguenti: è una stringa di lunghezza zero, contiene solo spazi vuoti, contiene caratteri non validi o è il percorso di un dispositivo (inizia con \\.\).</exception>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="destinationDirectoryName" /> o <paramref name="sourceDirectoryName" /> è <see langword="Nothing" /> o una stringa vuota.</exception>
      <exception cref="T:System.IO.DirectoryNotFoundException">La directory di origine non esiste.</exception>
      <exception cref="T:System.IO.IOException">Il percorso di origine e il percorso di destinazione coincidono.</exception>
      <exception cref="T:System.InvalidOperationException">Questa operazione è ciclica.</exception>
      <exception cref="T:System.IO.PathTooLongException">La lunghezza del percorso supera la lunghezza massima definita dal sistema.</exception>
      <exception cref="T:System.NotSupportedException">Nel nome di una cartella nel percorso sono presenti i due punti (:) oppure il formato non è valido.</exception>
      <exception cref="T:System.Security.SecurityException">L'utente non dispone delle autorizzazioni necessarie per visualizzare il percorso.</exception>
      <exception cref="T:System.UnauthorizedAccessException">È disponibile un file di destinazione, ma non è possibile accedervi.</exception>
    </member>
    <member name="M:Microsoft.VisualBasic.FileIO.FileSystem.CopyFile(System.String,System.String)">
      <summary>Consente di copiare un file in un nuovo percorso.</summary>
      <param name="sourceFileName">File da copiare.</param>
      <param name="destinationFileName">Percorso in cui copiare il file.</param>
      <exception cref="T:System.ArgumentException">
        <paramref name="destinationFileName" /> contiene informazioni sul percorso.</exception>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="destinationFileName" /> o <paramref name="sourceFileName" /> è <see langword="Nothing" /> o una stringa vuota.</exception>
      <exception cref="T:System.IO.FileNotFoundException">Il file di origine non è valido o non esiste.</exception>
      <exception cref="T:System.IO.IOException">Un file della directory di destinazione con lo stesso nome è già in uso.</exception>
      <exception cref="T:System.NotSupportedException">Nel nome di un file o di una directory del percorso sono presenti i due punti (:) oppure il relativo formato non è valido.</exception>
      <exception cref="T:System.IO.PathTooLongException">La lunghezza del percorso supera la lunghezza massima definita dal sistema.</exception>
      <exception cref="T:System.UnauthorizedAccessException">L'utente non dispone dell'autorizzazione necessaria.</exception>
      <exception cref="T:System.Security.SecurityException">L'utente non dispone delle autorizzazioni necessarie per visualizzare il percorso.</exception>
    </member>
    <member name="M:Microsoft.VisualBasic.FileIO.FileSystem.CopyFile(System.String,System.String,Microsoft.VisualBasic.FileIO.UIOption)">
      <summary>Consente di copiare un file in un nuovo percorso.</summary>
      <param name="sourceFileName">File da copiare.</param>
      <param name="destinationFileName">Percorso in cui copiare il file.</param>
      <param name="showUI">Specifica se tenere traccia in modo visivo dello stato dell'operazione. Il valore predefinito è <see langword="UIOption.OnlyErrorDialogs" />.</param>
      <exception cref="T:System.ArgumentException">
        <paramref name="destinationFileName" /> contiene informazioni sul percorso.</exception>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="destinationFileName" /> o <paramref name="sourceFileName" /> è <see langword="Nothing" /> o una stringa vuota.</exception>
      <exception cref="T:System.IO.FileNotFoundException">Il file di origine non è valido o non esiste.</exception>
      <exception cref="T:System.IO.IOException">Il file di destinazione esiste già e <paramref name="overwrite" /> è impostato su <see langword="False" />.</exception>
      <exception cref="T:System.NotSupportedException">Nel nome di un file o di una directory del percorso sono presenti i due punti (:) oppure il relativo formato non è valido.</exception>
      <exception cref="T:System.IO.PathTooLongException">La lunghezza del percorso supera la lunghezza massima definita dal sistema.</exception>
      <exception cref="T:System.UnauthorizedAccessException">L'utente non dispone dell'autorizzazione necessaria.</exception>
      <exception cref="T:System.Security.SecurityException">L'utente non dispone delle autorizzazioni necessarie per visualizzare il percorso.</exception>
    </member>
    <member name="M:Microsoft.VisualBasic.FileIO.FileSystem.CopyFile(System.String,System.String,Microsoft.VisualBasic.FileIO.UIOption,Microsoft.VisualBasic.FileIO.UICancelOption)">
      <summary>Consente di copiare un file in un nuovo percorso.</summary>
      <param name="sourceFileName">File da copiare.</param>
      <param name="destinationFileName">Percorso in cui copiare il file.</param>
      <param name="showUI">Specifica se tenere traccia in modo visivo dello stato dell'operazione. Il valore predefinito è <see langword="UIOption.OnlyErrorDialogs" />.</param>
      <param name="onUserCancel">Specifica le operazioni da eseguire se l'utente fa clic su Annulla durante l'operazione. Il valore predefinito è <see cref="F:Microsoft.VisualBasic.FileIO.UICancelOption.ThrowException" />.</param>
      <exception cref="T:System.ArgumentException">
        <paramref name="destinationFileName" /> contiene informazioni sul percorso.</exception>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="destinationFileName" /> o <paramref name="sourceFileName" /> è <see langword="Nothing" /> o una stringa vuota.</exception>
      <exception cref="T:System.IO.FileNotFoundException">Il file di origine non è valido o non esiste.</exception>
      <exception cref="T:System.IO.IOException">Il file di destinazione esiste già e <paramref name="overwrite" /> è impostato su <see langword="False" />.</exception>
      <exception cref="T:System.NotSupportedException">Nel nome di un file o di una directory del percorso sono presenti i due punti (:) oppure il relativo formato non è valido.</exception>
      <exception cref="T:System.IO.PathTooLongException">La lunghezza del percorso supera la lunghezza massima definita dal sistema.</exception>
      <exception cref="T:System.UnauthorizedAccessException">L'utente non dispone dell'autorizzazione necessaria.</exception>
      <exception cref="T:System.Security.SecurityException">L'utente non dispone delle autorizzazioni necessarie per visualizzare il percorso.</exception>
      <exception cref="T:System.OperationCanceledException">
        <paramref name="UICancelOption" /> è impostato su <see langword="ThrowException" /> e l'utente ha annullato l'operazione oppure si è verificato un errore di I/O non specificato.</exception>
    </member>
    <member name="M:Microsoft.VisualBasic.FileIO.FileSystem.CopyFile(System.String,System.String,System.Boolean)">
      <summary>Consente di copiare un file in un nuovo percorso.</summary>
      <param name="sourceFileName">File da copiare.</param>
      <param name="destinationFileName">Percorso in cui copiare il file.</param>
      <param name="overwrite">
        <see langword="True" /> se i file esistenti devono essere sovrascritti; in caso contrario, <see langword="False" />. Il valore predefinito è <see langword="False" />.</param>
      <exception cref="T:System.ArgumentException">
        <paramref name="destinationFileName" /> contiene informazioni sul percorso.</exception>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="destinationFileName" /> o <paramref name="sourceFileName" /> è <see langword="Nothing" /> o una stringa vuota.</exception>
      <exception cref="T:System.IO.FileNotFoundException">Il file di origine non è valido o non esiste.</exception>
      <exception cref="T:System.IO.IOException">Il file di destinazione esiste già e <paramref name="overwrite" /> è impostato su <see langword="False" />.</exception>
      <exception cref="T:System.NotSupportedException">Nel nome di un file o di una directory del percorso sono presenti i due punti (:) oppure il relativo formato non è valido.</exception>
      <exception cref="T:System.IO.PathTooLongException">La lunghezza del percorso supera la lunghezza massima definita dal sistema.</exception>
      <exception cref="T:System.UnauthorizedAccessException">L'utente non dispone dell'autorizzazione necessaria.</exception>
      <exception cref="T:System.Security.SecurityException">L'utente non dispone delle autorizzazioni necessarie per visualizzare il percorso.</exception>
    </member>
    <member name="M:Microsoft.VisualBasic.FileIO.FileSystem.CreateDirectory(System.String)">
      <summary>Crea una directory.</summary>
      <param name="directory">Nome e percorso della directory.</param>
      <exception cref="T:System.ArgumentException">Il nome della directory non è valido. Ad esempio, sono contenuti caratteri non consentiti oppure è solo uno spazio vuoto.</exception>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="directory" /> è <see langword="Nothing" /> o una stringa vuota.</exception>
      <exception cref="T:System.IO.PathTooLongException">Il nome della directory è troppo lungo.</exception>
      <exception cref="T:System.NotSupportedException">Il nome della directory contiene solo i due punti (:).</exception>
      <exception cref="T:System.IO.IOException">La directory padre della directory da creare è di sola lettura</exception>
      <exception cref="T:System.UnauthorizedAccessException">L'utente non dispone dell'autorizzazione necessaria per creare la directory.</exception>
    </member>
    <member name="M:Microsoft.VisualBasic.FileIO.FileSystem.DeleteDirectory(System.String,Microsoft.VisualBasic.FileIO.DeleteDirectoryOption)">
      <summary>Elimina una directory.</summary>
      <param name="directory">Directory da eliminare.</param>
      <param name="onDirectoryNotEmpty">Specifica le azioni da intraprendere quando si deve eliminare una directory contenente file o directory. Il valore predefinito è <see langword="DeleteDirectoryOption.DeleteAllContents" />.</param>
      <exception cref="T:System.ArgumentException">Il percorso è una stringa di lunghezza zero, con formato non corretto e contenente solo spazi vuoti o caratteri non validi (compresi i caratteri jolly). Il percorso è il percorso di un dispositivo, ovvero inizia con \\\.</exception>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="directory" /> è <see langword="Nothing" /> o una stringa vuota.</exception>
      <exception cref="T:System.IO.DirectoryNotFoundException">La directory non esiste o è un file.</exception>
      <exception cref="T:System.IO.IOException">Un file della directory o sottodirectory è in uso.</exception>
      <exception cref="T:System.NotSupportedException">Nel nome della directory sono presenti i due punti (:).</exception>
      <exception cref="T:System.IO.PathTooLongException">La lunghezza del percorso supera la lunghezza massima definita dal sistema.</exception>
      <exception cref="T:System.Security.SecurityException">L'utente non dispone delle autorizzazioni necessarie.</exception>
      <exception cref="T:System.OperationCanceledException">L'utente annulla l'operazione o la directory non può essere eliminata.</exception>
    </member>
    <member name="M:Microsoft.VisualBasic.FileIO.FileSystem.DeleteDirectory(System.String,Microsoft.VisualBasic.FileIO.UIOption,Microsoft.VisualBasic.FileIO.RecycleOption)">
      <summary>Elimina una directory.</summary>
      <param name="directory">Directory da eliminare.</param>
      <param name="showUI">Specifica se tenere traccia in modo visivo dello stato dell'operazione. Il valore predefinito è <see langword="UIOption.OnlyErrorDialogs" />.</param>
      <param name="recycle">Specifica se il file eliminato deve essere inviato al Cestino. Il valore predefinito è <see langword="RecycleOption.DeletePermanently" />.</param>
      <exception cref="T:System.ArgumentException">Il percorso è una stringa di lunghezza zero, con formato non corretto e contenente solo spazi vuoti o caratteri non validi (compresi i caratteri jolly). Il percorso è il percorso di un dispositivo, ovvero inizia con \\\.</exception>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="directory" /> è <see langword="Nothing" /> o una stringa vuota.</exception>
      <exception cref="T:System.IO.DirectoryNotFoundException">La directory non esiste o è un file.</exception>
      <exception cref="T:System.IO.IOException">Un file della directory o sottodirectory è in uso.</exception>
      <exception cref="T:System.NotSupportedException">Nel nome della directory sono presenti i due punti (:).</exception>
      <exception cref="T:System.IO.PathTooLongException">La lunghezza del percorso supera la lunghezza massima definita dal sistema.</exception>
      <exception cref="T:System.Security.SecurityException">L'utente non dispone delle autorizzazioni necessarie.</exception>
      <exception cref="T:System.OperationCanceledException">L'utente annulla l'operazione o la directory non può essere eliminata.</exception>
    </member>
    <member name="M:Microsoft.VisualBasic.FileIO.FileSystem.DeleteDirectory(System.String,Microsoft.VisualBasic.FileIO.UIOption,Microsoft.VisualBasic.FileIO.RecycleOption,Microsoft.VisualBasic.FileIO.UICancelOption)">
      <summary>Elimina una directory.</summary>
      <param name="directory">Directory da eliminare.</param>
      <param name="showUI">Specifica se tenere traccia in modo visivo dello stato dell'operazione. Il valore predefinito è <see langword="UIOption.OnlyErrorDialogs" />.</param>
      <param name="recycle">Specifica se il file eliminato deve essere inviato al Cestino. Il valore predefinito è <see langword="RecycleOption.DeletePermanently" />.</param>
      <param name="onUserCancel">Specifica se generare un'eccezione se l'utente fa clic su Annulla.</param>
      <exception cref="T:System.ArgumentException">Il percorso è una stringa di lunghezza zero, con formato non corretto e contenente solo spazi vuoti o caratteri non validi (compresi i caratteri jolly). Il percorso è il percorso di un dispositivo, ovvero inizia con \\\.</exception>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="directory" /> è <see langword="Nothing" /> o una stringa vuota.</exception>
      <exception cref="T:System.IO.DirectoryNotFoundException">La directory non esiste o è un file.</exception>
      <exception cref="T:System.IO.IOException">Un file della directory o sottodirectory è in uso.</exception>
      <exception cref="T:System.NotSupportedException">Nel nome della directory sono presenti i due punti (:).</exception>
      <exception cref="T:System.IO.PathTooLongException">La lunghezza del percorso supera la lunghezza massima definita dal sistema.</exception>
      <exception cref="T:System.Security.SecurityException">L'utente non dispone delle autorizzazioni necessarie.</exception>
      <exception cref="T:System.OperationCanceledException">L'utente annulla l'operazione o la directory non può essere eliminata.</exception>
    </member>
    <member name="M:Microsoft.VisualBasic.FileIO.FileSystem.DeleteFile(System.String)">
      <summary>Elimina un file.</summary>
      <param name="file">Nome e percorso del file da eliminare.</param>
      <exception cref="T:System.ArgumentException">Il percorso non è valido per uno dei motivi seguenti: è una stringa di lunghezza zero, contiene solo spazi vuoti, contiene caratteri non validi, presenta una barra finale nel punto in cui è necessario specificare un file o è il percorso di un dispositivo, ovvero inizia con \\\.</exception>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="file" /> è <see langword="Nothing" /> o una stringa vuota.</exception>
      <exception cref="T:System.IO.PathTooLongException">La lunghezza del percorso supera la lunghezza massima definita dal sistema.</exception>
      <exception cref="T:System.NotSupportedException">Nel nome di un file o di una directory del percorso sono presenti i due punti (:) oppure il relativo formato non è valido.</exception>
      <exception cref="T:System.IO.IOException">Il file è in uso.</exception>
      <exception cref="T:System.Security.SecurityException">L'utente non dispone delle autorizzazioni necessarie per visualizzare il percorso.</exception>
      <exception cref="T:System.IO.FileNotFoundException">Il file specificato non esiste.</exception>
      <exception cref="T:System.UnauthorizedAccessException">L'utente non dispone dell'autorizzazione necessaria per eliminare il file oppure il file è di sola lettura.</exception>
    </member>
    <member name="M:Microsoft.VisualBasic.FileIO.FileSystem.DeleteFile(System.String,Microsoft.VisualBasic.FileIO.UIOption,Microsoft.VisualBasic.FileIO.RecycleOption)">
      <summary>Elimina un file.</summary>
      <param name="file">Nome e percorso del file da eliminare.</param>
      <param name="showUI">Specifica se tenere traccia in modo visivo dello stato dell'operazione. Il valore predefinito è <see langword="UIOption.OnlyErrorDialogs" />.</param>
      <param name="recycle">Indica se il file eliminato deve essere inviato al Cestino. Il valore predefinito è <see langword="RecycleOption.DeletePermanently" />.</param>
      <exception cref="T:System.ArgumentException">Il percorso non è valido per uno dei motivi seguenti: è una stringa di lunghezza zero, contiene solo spazi vuoti, contiene caratteri non validi, presenta una barra finale nel punto in cui è necessario specificare un file o è il percorso di un dispositivo, ovvero inizia con \\\.</exception>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="file" /> è <see langword="Nothing" /> o una stringa vuota.</exception>
      <exception cref="T:System.IO.PathTooLongException">La lunghezza del percorso supera la lunghezza massima definita dal sistema.</exception>
      <exception cref="T:System.NotSupportedException">Nel nome di un file o di una directory del percorso sono presenti i due punti (:) oppure il relativo formato non è valido.</exception>
      <exception cref="T:System.IO.IOException">Il file è in uso.</exception>
      <exception cref="T:System.Security.SecurityException">L'utente non dispone delle autorizzazioni necessarie per visualizzare il percorso.</exception>
      <exception cref="T:System.IO.FileNotFoundException">Il file specificato non esiste.</exception>
      <exception cref="T:System.UnauthorizedAccessException">L'utente non dispone dell'autorizzazione necessaria per eliminare il file oppure il file è di sola lettura.</exception>
    </member>
    <member name="M:Microsoft.VisualBasic.FileIO.FileSystem.DeleteFile(System.String,Microsoft.VisualBasic.FileIO.UIOption,Microsoft.VisualBasic.FileIO.RecycleOption,Microsoft.VisualBasic.FileIO.UICancelOption)">
      <summary>Elimina un file.</summary>
      <param name="file">Nome e percorso del file da eliminare.</param>
      <param name="showUI">Specifica se tenere traccia in modo visivo dello stato dell'operazione. Il valore predefinito è <see langword="UIOption.OnlyErrorDialogs" />.</param>
      <param name="recycle">Indica se il file eliminato deve essere inviato al Cestino. Il valore predefinito è <see langword="RecycleOption.DeletePermanently" />.</param>
      <param name="onUserCancel">Specifica se viene generata un'eccezione quando l'utente annulla l'operazione. Il valore predefinito è <see langword="UICancelOption.ThrowException" />.</param>
      <exception cref="T:System.ArgumentException">Il percorso non è valido per uno dei motivi seguenti: è una stringa di lunghezza zero, contiene solo spazi vuoti, contiene caratteri non validi, presenta una barra finale nel punto in cui è necessario specificare un file o è il percorso di un dispositivo, ovvero inizia con \\\.</exception>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="file" /> è <see langword="Nothing" /> o una stringa vuota.</exception>
      <exception cref="T:System.IO.PathTooLongException">La lunghezza del percorso supera la lunghezza massima definita dal sistema.</exception>
      <exception cref="T:System.NotSupportedException">Nel nome di un file o di una directory del percorso sono presenti i due punti (:) oppure il relativo formato non è valido.</exception>
      <exception cref="T:System.IO.IOException">Il file è in uso.</exception>
      <exception cref="T:System.Security.SecurityException">L'utente non dispone delle autorizzazioni necessarie per visualizzare il percorso.</exception>
      <exception cref="T:System.IO.FileNotFoundException">Il file specificato non esiste.</exception>
      <exception cref="T:System.UnauthorizedAccessException">L'utente non dispone dell'autorizzazione necessaria per eliminare il file oppure il file è di sola lettura.</exception>
      <exception cref="T:System.OperationCanceledException">L'utente ha annullato l'operazione e <paramref name="onUserCancel" /> è impostato su <see cref="F:Microsoft.VisualBasic.FileIO.UICancelOption.ThrowException" />.</exception>
    </member>
    <member name="M:Microsoft.VisualBasic.FileIO.FileSystem.DirectoryExists(System.String)">
      <summary>Restituisce <see langword="True" /> se la directory specificata esiste.</summary>
      <param name="directory">Percorso della directory.</param>
      <returns>
        <see langword="True" /> se la directory esiste. In caso contrario, <see langword="False" />. Questo metodo restituisce anche <see langword="False" /> se il parametro rappresenta il nome e il percorso di un file anziché di una directory.</returns>
    </member>
    <member name="M:Microsoft.VisualBasic.FileIO.FileSystem.FileExists(System.String)">
      <summary>Restituisce <see langword="True" /> se il file specificato esiste.</summary>
      <param name="file">Nome e percorso del file.</param>
      <exception cref="T:System.ArgumentException">Il nome del file termina con una barra rovesciata (\).</exception>
      <returns>Restituisce <see langword="True" /> se il file è presente. In caso contrario, questo metodo restituisce <see langword="False" />. Questo metodo restituisce anche <see langword="False" /> se il parametro rappresenta il percorso di una directory anziché di un file.</returns>
    </member>
    <member name="M:Microsoft.VisualBasic.FileIO.FileSystem.FindInFiles(System.String,System.String,System.Boolean,Microsoft.VisualBasic.FileIO.SearchOption)">
      <summary>Restituisce un insieme di stringhe in sola lettura che rappresenta i nomi dei file contenenti il testo specificato.</summary>
      <param name="directory">Directory in cui eseguire la ricerca.</param>
      <param name="containsText">Testo di ricerca.</param>
      <param name="ignoreCase">
        <see langword="True" /> se per la ricerca deve essere fatta distinzione tra maiuscole e minuscole; in caso contrario, <see langword="False" />. Il valore predefinito è <see langword="True" />.</param>
      <param name="searchType">Specifica se includere le sottocartelle. Il valore predefinito è <see langword="SearchOption.SearchTopLevelOnly" />.</param>
      <exception cref="T:System.ArgumentException">Il percorso non è valido per uno dei motivi seguenti: è una stringa di lunghezza zero. contiene solo spazi vuoti; contiene caratteri non validi; oppure è il percorso di un dispositivo (inizia con <c> \\ . \</c>).</exception>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="directory" /> è <see langword="Nothing" /> o una stringa vuota.</exception>
      <exception cref="T:System.IO.DirectoryNotFoundException">La directory specificata non esiste.</exception>
      <exception cref="T:System.IO.IOException">La directory specificata punta a un file esistente.</exception>
      <exception cref="T:System.IO.PathTooLongException">La lunghezza del percorso supera la lunghezza massima definita dal sistema.</exception>
      <exception cref="T:System.NotSupportedException">Nel percorso della directory specificato sono presenti i due punti (:) oppure il formato non è valido.</exception>
      <exception cref="T:System.Security.SecurityException">L'utente non dispone delle autorizzazioni necessarie per visualizzare il percorso.</exception>
      <exception cref="T:System.UnauthorizedAccessException">L'utente non dispone delle autorizzazioni necessarie.</exception>
      <returns>Raccolta di sola lettura dei nomi di file contenenti il testo specificato.</returns>
    </member>
    <member name="M:Microsoft.VisualBasic.FileIO.FileSystem.FindInFiles(System.String,System.String,System.Boolean,Microsoft.VisualBasic.FileIO.SearchOption,System.String[])">
      <summary>Restituisce un insieme di stringhe in sola lettura che rappresenta i nomi dei file contenenti il testo specificato.</summary>
      <param name="directory">Directory in cui eseguire la ricerca.</param>
      <param name="containsText">Testo di ricerca.</param>
      <param name="ignoreCase">
        <see langword="True" /> se per la ricerca deve essere fatta distinzione tra maiuscole e minuscole; in caso contrario, <see langword="False" />. Il valore predefinito è <see langword="True" />.</param>
      <param name="searchType">Specifica se includere le sottocartelle. Il valore predefinito è <see langword="SearchOption.SearchTopLevelOnly" />.</param>
      <param name="fileWildcards">Criterio da soddisfare.</param>
      <exception cref="T:System.ArgumentException">Il percorso non è valido per uno dei motivi seguenti: è una stringa di lunghezza zero. contiene solo spazi vuoti; contiene caratteri non validi; oppure è il percorso di un dispositivo (inizia con <c> \\ . \</c>).</exception>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="directory" /> è <see langword="Nothing" /> o una stringa vuota.</exception>
      <exception cref="T:System.IO.DirectoryNotFoundException">La directory specificata non esiste.</exception>
      <exception cref="T:System.IO.IOException">La directory specificata punta a un file esistente.</exception>
      <exception cref="T:System.IO.PathTooLongException">La lunghezza del percorso supera la lunghezza massima definita dal sistema.</exception>
      <exception cref="T:System.NotSupportedException">Nel percorso della directory specificato sono presenti i due punti (:) oppure il formato non è valido.</exception>
      <exception cref="T:System.Security.SecurityException">L'utente non dispone delle autorizzazioni necessarie per visualizzare il percorso.</exception>
      <exception cref="T:System.UnauthorizedAccessException">L'utente non dispone delle autorizzazioni necessarie.</exception>
      <returns>Raccolta di sola lettura dei nomi di file contenenti il testo specificato.</returns>
    </member>
    <member name="M:Microsoft.VisualBasic.FileIO.FileSystem.GetDirectories(System.String)">
      <summary>Restituisce un insieme di stringhe che rappresenta i nomi dei percorsi delle sottodirectory contenute in una directory.</summary>
      <param name="directory">Nome e percorso della directory.</param>
      <exception cref="T:System.ArgumentException">Il percorso non è valido per uno dei motivi seguenti: è una stringa di lunghezza zero, contiene solo spazi vuoti, contiene caratteri non validi o è il percorso di un dispositivo (inizia con \\.\).</exception>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="directory" /> è <see langword="Nothing" /> o una stringa vuota.</exception>
      <exception cref="T:System.IO.DirectoryNotFoundException">La directory specificata non esiste.</exception>
      <exception cref="T:System.IO.IOException">La directory specificata punta a un file esistente.</exception>
      <exception cref="T:System.IO.PathTooLongException">La lunghezza del percorso supera la lunghezza massima definita dal sistema.</exception>
      <exception cref="T:System.NotSupportedException">Nel nome di un file o di una directory del percorso sono presenti i due punti (:) oppure il relativo formato non è valido.</exception>
      <exception cref="T:System.Security.SecurityException">L'utente non dispone delle autorizzazioni necessarie per visualizzare il percorso.</exception>
      <exception cref="T:System.UnauthorizedAccessException">L'utente non dispone delle autorizzazioni necessarie.</exception>
      <returns>Insieme di sola lettura dei nomi di percorso delle sottodirectory incluse nella directory specificata.</returns>
    </member>
    <member name="M:Microsoft.VisualBasic.FileIO.FileSystem.GetDirectories(System.String,Microsoft.VisualBasic.FileIO.SearchOption,System.String[])">
      <summary>Restituisce un insieme di stringhe che rappresenta i nomi dei percorsi delle sottodirectory contenute in una directory.</summary>
      <param name="directory">Nome e percorso della directory.</param>
      <param name="searchType">Specifica se includere le sottocartelle. Il valore predefinito è <see langword="SearchOption.SearchTopLevelOnly" />.</param>
      <param name="wildcards">Criterio per la corrispondenza dei nomi.</param>
      <exception cref="T:System.ArgumentException">Il percorso non è valido per uno dei motivi seguenti: è una stringa di lunghezza zero, contiene solo spazi vuoti, contiene caratteri non validi o è il percorso di un dispositivo (inizia con \\.\).</exception>
      <exception cref="T:System.ArgumentNullException">Uno o più dei caratteri jolly specificati è <see langword="Nothing" /> o una stringa vuota oppure in esso sono contenuti solo spazi.</exception>
      <exception cref="T:System.IO.DirectoryNotFoundException">La directory specificata non esiste.</exception>
      <exception cref="T:System.IO.IOException">La directory specificata punta a un file esistente.</exception>
      <exception cref="T:System.IO.PathTooLongException">La lunghezza del percorso supera la lunghezza massima definita dal sistema.</exception>
      <exception cref="T:System.NotSupportedException">Nel nome di un file o di una directory del percorso sono presenti i due punti (:) oppure il relativo formato non è valido.</exception>
      <exception cref="T:System.Security.SecurityException">L'utente non dispone delle autorizzazioni necessarie per visualizzare il percorso.</exception>
      <exception cref="T:System.UnauthorizedAccessException">L'utente non dispone delle autorizzazioni necessarie.</exception>
      <returns>Insieme di sola lettura dei nomi di percorso delle sottodirectory incluse nella directory specificata.</returns>
    </member>
    <member name="M:Microsoft.VisualBasic.FileIO.FileSystem.GetDirectoryInfo(System.String)">
      <summary>Restituisce un oggetto <see cref="T:System.IO.DirectoryInfo" /> per il percorso specificato.</summary>
      <param name="directory">
        <see langword="String" />. Percorso della directory.</param>
      <exception cref="T:System.ArgumentException">Il percorso non è valido per uno dei motivi seguenti: è una stringa di lunghezza zero, contiene solo spazi vuoti, contiene caratteri non validi o è il percorso di un dispositivo (inizia con \\.\).</exception>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="directory" /> è <see langword="Nothing" /> o una stringa vuota.</exception>
      <exception cref="T:System.IO.PathTooLongException">La lunghezza del percorso supera la lunghezza massima definita dal sistema.</exception>
      <exception cref="T:System.NotSupportedException">Nel percorso della directory sono presenti i due punti (:) oppure il formato non è valido.</exception>
      <exception cref="T:System.Security.SecurityException">L'utente non dispone delle autorizzazioni necessarie per visualizzare il percorso</exception>
      <returns>Oggetto <see cref="T:System.IO.DirectoryInfo" /> per il percorso specificato.</returns>
    </member>
    <member name="M:Microsoft.VisualBasic.FileIO.FileSystem.GetDriveInfo(System.String)">
      <summary>Restituisce un oggetto <see cref="T:System.IO.DriveInfo" /> per l'unità specificata.</summary>
      <param name="drive">Unità da esaminare.</param>
      <exception cref="T:System.ArgumentException">Il percorso non è valido per uno dei motivi seguenti: è una stringa di lunghezza zero, contiene solo spazi vuoti, contiene caratteri non validi o è il percorso di un dispositivo (inizia con \\.\).</exception>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="drive" /> è <see langword="Nothing" /> o una stringa vuota.</exception>
      <exception cref="T:System.IO.PathTooLongException">La lunghezza del percorso supera la lunghezza massima definita dal sistema.</exception>
      <exception cref="T:System.Security.SecurityException">L'utente non dispone delle autorizzazioni necessarie per visualizzare il percorso</exception>
      <returns>Oggetto <see cref="T:System.IO.DriveInfo" /> per l'unità specificata.</returns>
    </member>
    <member name="M:Microsoft.VisualBasic.FileIO.FileSystem.GetFileInfo(System.String)">
      <summary>Restituisce un oggetto <see cref="T:System.IO.FileInfo" /> per il file specificato.</summary>
      <param name="file">Nome e percorso del file.</param>
      <exception cref="T:System.ArgumentException">Il nome del percorso non è valido. Ad esempio, sono contenuti caratteri non validi oppure è solo uno spazio vuoto. Il nome file termina con una barra finale.</exception>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="file" /> è <see langword="Nothing" /> o una stringa vuota.</exception>
      <exception cref="T:System.NotSupportedException">Nel percorso sono presenti i due punti a metà della stringa.</exception>
      <exception cref="T:System.IO.PathTooLongException">Percorso troppo lungo.</exception>
      <exception cref="T:System.Security.SecurityException">L'utente non dispone delle autorizzazioni necessarie.</exception>
      <exception cref="T:System.UnauthorizedAccessException">L'utente non dispone dell'accesso ACL (elenco di controllo di accesso) al file.</exception>
      <returns>Oggetto <see cref="T:System.IO.FileInfo" /> per il file specificato.</returns>
    </member>
    <member name="M:Microsoft.VisualBasic.FileIO.FileSystem.GetFiles(System.String)">
      <summary>Restituisce un insieme di stringhe in sola lettura che rappresenta i nomi dei file contenuti in una directory.</summary>
      <param name="directory">Directory in cui eseguire la ricerca.</param>
      <exception cref="T:System.ArgumentException">Il percorso non è valido per uno dei motivi seguenti: è una stringa di lunghezza zero, contiene solo spazi vuoti, contiene caratteri non validi o è il percorso di un dispositivo (inizia con \\.\).</exception>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="directory" /> è <see langword="Nothing" />.</exception>
      <exception cref="T:System.IO.DirectoryNotFoundException">La directory da cercare non esiste.</exception>
      <exception cref="T:System.IO.IOException">
        <paramref name="directory" /> fa riferimento a un file esistente.</exception>
      <exception cref="T:System.IO.PathTooLongException">La lunghezza del percorso supera la lunghezza massima definita dal sistema.</exception>
      <exception cref="T:System.NotSupportedException">Nel nome di un file o di una directory del percorso sono presenti i due punti (:) oppure il relativo formato non è valido.</exception>
      <exception cref="T:System.Security.SecurityException">L'utente non dispone delle autorizzazioni necessarie per visualizzare il percorso.</exception>
      <exception cref="T:System.UnauthorizedAccessException">L'utente non dispone delle autorizzazioni necessarie.</exception>
      <returns>Insieme di sola lettura dei nomi di file della directory specificata.</returns>
    </member>
    <member name="M:Microsoft.VisualBasic.FileIO.FileSystem.GetFiles(System.String,Microsoft.VisualBasic.FileIO.SearchOption,System.String[])">
      <summary>Restituisce un insieme di stringhe in sola lettura che rappresenta i nomi dei file contenuti in una directory.</summary>
      <param name="directory">Directory in cui eseguire la ricerca.</param>
      <param name="searchType">Specifica se includere le sottocartelle. Il valore predefinito è <see langword="SearchOption.SearchTopLevelOnly" />.</param>
      <param name="wildcards">Criterio da soddisfare.</param>
      <exception cref="T:System.ArgumentException">Il percorso non è valido per uno dei motivi seguenti: è una stringa di lunghezza zero, contiene solo spazi vuoti, contiene caratteri non validi o è il percorso di un dispositivo (inizia con \\.\).</exception>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="directory" /> è <see langword="Nothing" />.</exception>
      <exception cref="T:System.IO.DirectoryNotFoundException">La directory da cercare non esiste.</exception>
      <exception cref="T:System.IO.IOException">
        <paramref name="directory" /> fa riferimento a un file esistente.</exception>
      <exception cref="T:System.IO.PathTooLongException">La lunghezza del percorso supera la lunghezza massima definita dal sistema.</exception>
      <exception cref="T:System.NotSupportedException">Nel nome di un file o di una directory del percorso sono presenti i due punti (:) oppure il relativo formato non è valido.</exception>
      <exception cref="T:System.Security.SecurityException">L'utente non dispone delle autorizzazioni necessarie per visualizzare il percorso.</exception>
      <exception cref="T:System.UnauthorizedAccessException">L'utente non dispone delle autorizzazioni necessarie.</exception>
      <returns>Insieme di sola lettura dei nomi di file della directory specificata.</returns>
    </member>
    <member name="M:Microsoft.VisualBasic.FileIO.FileSystem.GetName(System.String)">
      <summary>Analizza il nome del file al di fuori del percorso fornito.</summary>
      <param name="path">Obbligatorio. Percorso da analizzare. <see langword="String" />.</param>
      <returns>Nome del file nel percorso specificato.</returns>
    </member>
    <member name="M:Microsoft.VisualBasic.FileIO.FileSystem.GetParentPath(System.String)">
      <summary>Restituisce il percorso padre del percorso fornito.</summary>
      <param name="path">Percorso da esaminare.</param>
      <exception cref="T:System.ArgumentException">Nel percorso non è contenuto un percorso padre in quanto si tratta di un percorso radice.</exception>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="path" /> è <see langword="Nothing" />.</exception>
      <exception cref="T:System.IO.PathTooLongException">La lunghezza del percorso supera la lunghezza massima definita dal sistema.</exception>
      <exception cref="T:System.NotSupportedException">Nel nome di un file o di una directory del percorso sono presenti i due punti (:) oppure il relativo formato non è valido.</exception>
      <returns>Percorso padre del percorso fornito.</returns>
    </member>
    <member name="M:Microsoft.VisualBasic.FileIO.FileSystem.GetTempFileName">
      <summary>Crea un file temporaneo di zero byte con nome univoco nel disco e restituisce il percorso completo di tale file.</summary>
      <returns>Classe <see langword="String" /> contenente il percorso completo del file temporaneo.</returns>
    </member>
    <member name="M:Microsoft.VisualBasic.FileIO.FileSystem.MoveDirectory(System.String,System.String)">
      <summary>Sposta una directory da un percorso a un altro.</summary>
      <param name="sourceDirectoryName">Percorso della directory da spostare.</param>
      <param name="destinationDirectoryName">Percorso della directory in cui viene spostata la directory di origine.</param>
      <exception cref="T:System.ArgumentException">Il percorso non è valido per uno dei motivi seguenti: è una stringa di lunghezza zero, contiene solo spazi vuoti, contiene caratteri non validi o è il percorso di un dispositivo (inizia con \\.\).</exception>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="sourceDirectoryName" /> o <paramref name="destinationDirectoryName" /> è <see langword="Nothing" /> o una stringa vuota.</exception>
      <exception cref="T:System.IO.DirectoryNotFoundException">La directory non esiste.</exception>
      <exception cref="T:System.IO.IOException">L'origine è una directory radice o il percorso di origine e il percorso di destinazione sono uguali.</exception>
      <exception cref="T:System.IO.PathTooLongException">La lunghezza del percorso supera la lunghezza massima definita dal sistema.</exception>
      <exception cref="T:System.InvalidOperationException">Questa operazione è ciclica.</exception>
      <exception cref="T:System.NotSupportedException">Nel nome di un file o di una directory del percorso sono presenti i due punti (:) oppure il relativo formato non è valido.</exception>
      <exception cref="T:System.Security.SecurityException">L'utente non dispone delle autorizzazioni necessarie per visualizzare il percorso.</exception>
      <exception cref="T:System.UnauthorizedAccessException">L'utente non dispone dell'autorizzazione necessaria.</exception>
    </member>
    <member name="M:Microsoft.VisualBasic.FileIO.FileSystem.MoveDirectory(System.String,System.String,Microsoft.VisualBasic.FileIO.UIOption)">
      <summary>Sposta una directory da un percorso a un altro.</summary>
      <param name="sourceDirectoryName">Percorso della directory da spostare.</param>
      <param name="destinationDirectoryName">Percorso della directory in cui viene spostata la directory di origine.</param>
      <param name="showUI">Specifica se tenere traccia in modo visivo dello stato dell'operazione. Il valore predefinito è <see langword="UIOption.OnlyErrorDialogs" />.</param>
      <exception cref="T:System.ArgumentException">Il percorso non è valido per uno dei motivi seguenti: è una stringa di lunghezza zero, contiene solo spazi vuoti, contiene caratteri non validi o è il percorso di un dispositivo (inizia con \\.\).</exception>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="sourceDirectoryName" /> o <paramref name="destinationDirectoryName" /> è <see langword="Nothing" /> o una stringa vuota.</exception>
      <exception cref="T:System.IO.DirectoryNotFoundException">La directory non esiste.</exception>
      <exception cref="T:System.IO.IOException">La directory di destinazione esiste già e l'elemento <paramref name="overwrite" /> è impostato su <see langword="False" />.</exception>
      <exception cref="T:System.IO.PathTooLongException">La lunghezza del percorso supera la lunghezza massima definita dal sistema.</exception>
      <exception cref="T:System.InvalidOperationException">Questa operazione è ciclica.</exception>
      <exception cref="T:System.NotSupportedException">Nel nome di un file o di una directory del percorso sono presenti i due punti (:) oppure il relativo formato non è valido.</exception>
      <exception cref="T:System.Security.SecurityException">L'utente non dispone delle autorizzazioni necessarie per visualizzare il percorso.</exception>
      <exception cref="T:System.UnauthorizedAccessException">L'utente non dispone dell'autorizzazione necessaria.</exception>
    </member>
    <member name="M:Microsoft.VisualBasic.FileIO.FileSystem.MoveDirectory(System.String,System.String,Microsoft.VisualBasic.FileIO.UIOption,Microsoft.VisualBasic.FileIO.UICancelOption)">
      <summary>Sposta una directory da un percorso a un altro.</summary>
      <param name="sourceDirectoryName">Percorso della directory da spostare.</param>
      <param name="destinationDirectoryName">Percorso della directory in cui viene spostata la directory di origine.</param>
      <param name="showUI">Specifica se tenere traccia in modo visivo dello stato dell'operazione. Il valore predefinito è <see langword="UIOption.OnlyErrorDialogs" />.</param>
      <param name="onUserCancel">Specifica se viene generata un'eccezione quando l'utente annulla l'operazione. Il valore predefinito è <see langword="UICancelOption.ThrowException" />.</param>
      <exception cref="T:System.ArgumentException">Il percorso non è valido per uno dei motivi seguenti: è una stringa di lunghezza zero, contiene solo spazi vuoti, contiene caratteri non validi o è il percorso di un dispositivo (inizia con \\.\).</exception>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="sourceDirectoryName" /> o <paramref name="destinationDirectoryName" /> è <see langword="Nothing" /> o una stringa vuota.</exception>
      <exception cref="T:System.IO.DirectoryNotFoundException">La directory non esiste.</exception>
      <exception cref="T:System.IO.IOException">
        <paramref name="onUserCancel" /> è impostato su <see langword="ThrowException" /> e non è possibile copiare una sottodirectory del file.</exception>
      <exception cref="T:System.OperationCanceledException">
        <paramref name="onUserCancel" /> è impostato su <see langword="ThrowException" /> e l'utente annulla l'operazione oppure non è possibile completarla.</exception>
      <exception cref="T:System.Security.SecurityException">L'utente non dispone delle autorizzazioni necessarie per visualizzare il percorso.</exception>
      <exception cref="T:System.IO.PathTooLongException">La lunghezza del percorso supera la lunghezza massima definita dal sistema.</exception>
      <exception cref="T:System.InvalidOperationException">Questa operazione è ciclica.</exception>
      <exception cref="T:System.NotSupportedException">Nel nome di un file o di una directory del percorso sono presenti i due punti (:) oppure il relativo formato non è valido.</exception>
      <exception cref="T:System.UnauthorizedAccessException">L'utente non dispone dell'autorizzazione necessaria.</exception>
    </member>
    <member name="M:Microsoft.VisualBasic.FileIO.FileSystem.MoveDirectory(System.String,System.String,System.Boolean)">
      <summary>Sposta una directory da un percorso a un altro.</summary>
      <param name="sourceDirectoryName">Percorso della directory da spostare.</param>
      <param name="destinationDirectoryName">Percorso della directory in cui viene spostata la directory di origine.</param>
      <param name="overwrite">
        <see langword="True" /> se le directory esistenti devono essere sovrascritte; in caso contrario, <see langword="False" />. Il valore predefinito è <see langword="False" />.</param>
      <exception cref="T:System.ArgumentException">Il percorso non è valido per uno dei motivi seguenti: è una stringa di lunghezza zero, contiene solo spazi vuoti, contiene caratteri non validi o è il percorso di un dispositivo (inizia con \\.\).</exception>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="sourceDirectoryName" /> o <paramref name="destinationDirectoryName" /> è <see langword="Nothing" /> o una stringa vuota.</exception>
      <exception cref="T:System.IO.DirectoryNotFoundException">La directory non esiste.</exception>
      <exception cref="T:System.IO.IOException">La directory di destinazione esiste già e l'elemento <paramref name="overwrite" /> è impostato su <see langword="False" />.</exception>
      <exception cref="T:System.IO.PathTooLongException">La lunghezza del percorso supera la lunghezza massima definita dal sistema.</exception>
      <exception cref="T:System.InvalidOperationException">Questa operazione è ciclica.</exception>
      <exception cref="T:System.NotSupportedException">Nel nome di un file o di una directory del percorso sono presenti i due punti (:) oppure il relativo formato non è valido.</exception>
      <exception cref="T:System.Security.SecurityException">L'utente non dispone delle autorizzazioni necessarie per visualizzare il percorso.</exception>
      <exception cref="T:System.UnauthorizedAccessException">L'utente non dispone dell'autorizzazione necessaria.</exception>
    </member>
    <member name="M:Microsoft.VisualBasic.FileIO.FileSystem.MoveFile(System.String,System.String)">
      <summary>Sposta un file in un nuovo percorso.</summary>
      <param name="sourceFileName">Percorso del file da spostare.</param>
      <param name="destinationFileName">Percorso della directory in cui spostare il file.</param>
      <exception cref="T:System.ArgumentException">Il percorso non è valido per uno dei motivi seguenti: è una stringa di lunghezza zero; contiene solo spazi vuoti; contiene caratteri non validi o è il percorso di un dispositivo ovvero inizia con \\.\; termina con una barra finale.</exception>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="destinationFileName" /> è <see langword="Nothing" /> o una stringa vuota.</exception>
      <exception cref="T:System.IO.FileNotFoundException">Il file di origine non è valido o non esiste.</exception>
      <exception cref="T:System.IO.IOException">Il file è in uso in un altro processo oppure si verifica un errore di I/O.</exception>
      <exception cref="T:System.IO.PathTooLongException">La lunghezza del percorso supera la lunghezza massima definita dal sistema.</exception>
      <exception cref="T:System.NotSupportedException">Nel nome di un file o di una directory del percorso sono presenti i due punti (:) oppure il relativo formato non è valido.</exception>
      <exception cref="T:System.Security.SecurityException">L'utente non dispone delle autorizzazioni necessarie per visualizzare il percorso.</exception>
    </member>
    <member name="M:Microsoft.VisualBasic.FileIO.FileSystem.MoveFile(System.String,System.String,Microsoft.VisualBasic.FileIO.UIOption)">
      <summary>Sposta un file in un nuovo percorso.</summary>
      <param name="sourceFileName">Percorso del file da spostare.</param>
      <param name="destinationFileName">Percorso della directory in cui spostare il file.</param>
      <param name="showUI">Specifica se tenere traccia in modo visivo dello stato dell'operazione. Il valore predefinito è <see langword="UIOption.OnlyErrorDialogs" />.</param>
      <exception cref="T:System.ArgumentException">Il percorso non è valido per uno dei motivi seguenti: è una stringa di lunghezza zero; contiene solo spazi vuoti; contiene caratteri non validi o è il percorso di un dispositivo ovvero inizia con \\.\; termina con una barra finale.</exception>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="destinationFileName" /> è <see langword="Nothing" /> o una stringa vuota.</exception>
      <exception cref="T:System.IO.FileNotFoundException">Il file di origine non è valido o non esiste.</exception>
      <exception cref="T:System.IO.IOException">Il file è in uso in un altro processo oppure si verifica un errore di I/O.</exception>
      <exception cref="T:System.IO.PathTooLongException">La lunghezza del percorso supera la lunghezza massima definita dal sistema.</exception>
      <exception cref="T:System.NotSupportedException">Nel nome di un file o di una directory del percorso sono presenti i due punti (:) oppure il relativo formato non è valido.</exception>
      <exception cref="T:System.Security.SecurityException">L'utente non dispone delle autorizzazioni necessarie per visualizzare il percorso.</exception>
    </member>
    <member name="M:Microsoft.VisualBasic.FileIO.FileSystem.MoveFile(System.String,System.String,Microsoft.VisualBasic.FileIO.UIOption,Microsoft.VisualBasic.FileIO.UICancelOption)">
      <summary>Sposta un file in un nuovo percorso.</summary>
      <param name="sourceFileName">Percorso del file da spostare.</param>
      <param name="destinationFileName">Percorso della directory in cui spostare il file.</param>
      <param name="showUI">Specifica se tenere traccia in modo visivo dello stato dell'operazione. Il valore predefinito è <see langword="UIOption.OnlyErrorDialogs" />.</param>
      <param name="onUserCancel">Specifica se viene generata un'eccezione quando l'utente annulla l'operazione. Il valore predefinito è <see langword="UICancelOption.ThrowException" />.</param>
      <exception cref="T:System.ArgumentException">Il percorso non è valido per uno dei motivi seguenti: è una stringa di lunghezza zero; contiene solo spazi vuoti; contiene caratteri non validi o è il percorso di un dispositivo ovvero inizia con \\.\; termina con una barra finale.</exception>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="destinationFileName" /> è <see langword="Nothing" /> o una stringa vuota.</exception>
      <exception cref="T:System.IO.FileNotFoundException">Il file di origine non è valido o non esiste.</exception>
      <exception cref="T:System.IO.IOException">Il file è in uso in un altro processo oppure si verifica un errore di I/O.</exception>
      <exception cref="T:System.OperationCanceledException">
        <paramref name="onUserCancel" /> è impostato su <see langword="ThrowException" /> e l'utente ha annullato l'operazione oppure si è verificato un errore di I/O non specificato.</exception>
      <exception cref="T:System.IO.PathTooLongException">La lunghezza del percorso supera la lunghezza massima definita dal sistema.</exception>
      <exception cref="T:System.NotSupportedException">Nel nome di un file o di una directory del percorso sono presenti i due punti (:) oppure il relativo formato non è valido.</exception>
      <exception cref="T:System.Security.SecurityException">L'utente non dispone delle autorizzazioni necessarie per visualizzare il percorso.</exception>
    </member>
    <member name="M:Microsoft.VisualBasic.FileIO.FileSystem.MoveFile(System.String,System.String,System.Boolean)">
      <summary>Sposta un file in un nuovo percorso.</summary>
      <param name="sourceFileName">Percorso del file da spostare.</param>
      <param name="destinationFileName">Percorso della directory in cui spostare il file.</param>
      <param name="overwrite">
        <see langword="True" /> per sovrascrivere i file esistenti; in caso contrario, <see langword="False" />. Il valore predefinito è <see langword="False" />.</param>
      <exception cref="T:System.ArgumentException">Il percorso non è valido per uno dei motivi seguenti: è una stringa di lunghezza zero; contiene solo spazi vuoti; contiene caratteri non validi o è il percorso di un dispositivo ovvero inizia con \\.\; termina con una barra finale.</exception>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="destinationFileName" /> è <see langword="Nothing" /> o una stringa vuota.</exception>
      <exception cref="T:System.IO.FileNotFoundException">Il file di origine non è valido o non esiste.</exception>
      <exception cref="T:System.IO.IOException">Il file è in uso in un altro processo oppure si verifica un errore di I/O.</exception>
      <exception cref="T:System.IO.PathTooLongException">La lunghezza del percorso supera la lunghezza massima definita dal sistema.</exception>
      <exception cref="T:System.NotSupportedException">Nel nome di un file o di una directory del percorso sono presenti i due punti (:) oppure il relativo formato non è valido.</exception>
      <exception cref="T:System.Security.SecurityException">L'utente non dispone delle autorizzazioni necessarie per visualizzare il percorso.</exception>
    </member>
    <member name="M:Microsoft.VisualBasic.FileIO.FileSystem.OpenTextFieldParser(System.String)">
      <summary>Il metodo <see langword="OpenTextFieldParser" /> consente di creare un oggetto <see cref="T:Microsoft.VisualBasic.FileIO.TextFieldParser" />, mediante il quale è possibile analizzare in modo semplice ed efficiente file di testo strutturati, ad esempio i log. L'oggetto <see langword="TextFieldParser" /> può essere utilizzato per leggere sia i file a larghezza fissa che quelli delimitati.</summary>
      <param name="file">File da aprire con <see langword="TextFieldParser" />.</param>
      <exception cref="T:System.ArgumentException">Il percorso non è valido per uno dei motivi seguenti: è una stringa di lunghezza zero; contiene solo spazi vuoti; contiene caratteri non validi o è il percorso di un dispositivo ovvero inizia con \\.\; termina con una barra finale.</exception>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="file" /> è <see langword="Nothing" />.</exception>
      <exception cref="T:System.IO.FileNotFoundException">Il file specificato non esiste.</exception>
      <exception cref="T:System.IO.IOException">Il file è in uso in un altro processo oppure si verifica un errore di I/O.</exception>
      <exception cref="T:System.IO.PathTooLongException">La lunghezza del percorso supera la lunghezza massima definita dal sistema.</exception>
      <exception cref="T:System.NotSupportedException">Nel nome di un file o di una directory del percorso sono presenti i due punti (:) oppure il relativo formato non è valido.</exception>
      <exception cref="T:Microsoft.VisualBasic.FileIO.MalformedLineException">Non è possibile analizzare una riga utilizzando il formato specificato. Il messaggio di eccezione specifica la riga che ha generato l'eccezione, mentre alla proprietà <see cref="P:Microsoft.VisualBasic.FileIO.TextFieldParser.ErrorLine" /> viene assegnato il testo contenuto nella riga.</exception>
      <exception cref="T:System.Security.SecurityException">L'utente non dispone delle autorizzazioni necessarie per visualizzare il percorso.</exception>
      <returns>Oggetto <see cref="T:Microsoft.VisualBasic.FileIO.TextFieldParser" /> per la lettura del file specificato.</returns>
    </member>
    <member name="M:Microsoft.VisualBasic.FileIO.FileSystem.OpenTextFieldParser(System.String,System.Int32[])">
      <summary>Il metodo <see langword="OpenTextFieldParser" /> consente di creare un oggetto <see cref="T:Microsoft.VisualBasic.FileIO.TextFieldParser" />, mediante il quale è possibile analizzare in modo semplice ed efficiente file di testo strutturati, ad esempio log. L'oggetto <see langword="TextFieldParser" /> può essere utilizzato per leggere sia i file a larghezza fissa che quelli delimitati.</summary>
      <param name="file">File da aprire con <see langword="TextFieldParser" />.</param>
      <param name="fieldWidths">Larghezze dei campi.</param>
      <exception cref="T:System.ArgumentException">Il percorso non è valido per uno dei motivi seguenti: è una stringa di lunghezza zero; contiene solo spazi vuoti; contiene caratteri non validi o è il percorso di un dispositivo ovvero inizia con \\.\; termina con una barra finale.</exception>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="file" /> è <see langword="Nothing" />.</exception>
      <exception cref="T:System.IO.FileNotFoundException">Il file specificato non esiste.</exception>
      <exception cref="T:System.IO.IOException">Il file è in uso in un altro processo oppure si verifica un errore di I/O.</exception>
      <exception cref="T:System.IO.PathTooLongException">La lunghezza del percorso supera la lunghezza massima definita dal sistema.</exception>
      <exception cref="T:System.NotSupportedException">Nel nome di un file o di una directory del percorso sono presenti i due punti (:) oppure il relativo formato non è valido.</exception>
      <exception cref="T:Microsoft.VisualBasic.FileIO.MalformedLineException">Non è possibile analizzare una riga utilizzando il formato specificato. Il messaggio di eccezione specifica la riga che ha generato l'eccezione, mentre alla proprietà <see cref="P:Microsoft.VisualBasic.FileIO.TextFieldParser.ErrorLine" /> viene assegnato il testo contenuto nella riga.</exception>
      <exception cref="T:System.Security.SecurityException">L'utente non dispone delle autorizzazioni necessarie per visualizzare il percorso.</exception>
      <returns>Oggetto <see cref="T:Microsoft.VisualBasic.FileIO.TextFieldParser" /> per la lettura del file specificato.</returns>
    </member>
    <member name="M:Microsoft.VisualBasic.FileIO.FileSystem.OpenTextFieldParser(System.String,System.String[])">
      <summary>Il metodo <see langword="OpenTextFieldParser" /> consente di creare un oggetto <see cref="T:Microsoft.VisualBasic.FileIO.TextFieldParser" />, mediante il quale è possibile analizzare in modo semplice ed efficiente file di testo strutturati, ad esempio log. L'oggetto <see langword="TextFieldParser" /> può essere utilizzato per leggere sia i file a larghezza fissa che quelli delimitati.</summary>
      <param name="file">File da aprire con <see langword="TextFieldParser" />.</param>
      <param name="delimiters">Delimitatori dei campi.</param>
      <exception cref="T:System.ArgumentException">Il percorso non è valido per uno dei motivi seguenti: è una stringa di lunghezza zero; contiene solo spazi vuoti; contiene caratteri non validi o è il percorso di un dispositivo ovvero inizia con \\.\; termina con una barra finale.</exception>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="file" /> è <see langword="Nothing" />.</exception>
      <exception cref="T:System.IO.FileNotFoundException">Il file specificato non esiste.</exception>
      <exception cref="T:System.IO.IOException">Il file è in uso in un altro processo oppure si verifica un errore di I/O.</exception>
      <exception cref="T:System.IO.PathTooLongException">La lunghezza del percorso supera la lunghezza massima definita dal sistema.</exception>
      <exception cref="T:System.NotSupportedException">Nel nome di un file o di una directory del percorso sono presenti i due punti (:) oppure il relativo formato non è valido.</exception>
      <exception cref="T:Microsoft.VisualBasic.FileIO.MalformedLineException">Non è possibile analizzare una riga utilizzando il formato specificato. Il messaggio di eccezione specifica la riga che ha generato l'eccezione, mentre alla proprietà <see cref="P:Microsoft.VisualBasic.FileIO.TextFieldParser.ErrorLine" /> viene assegnato il testo contenuto nella riga.</exception>
      <exception cref="T:System.Security.SecurityException">L'utente non dispone delle autorizzazioni necessarie per visualizzare il percorso.</exception>
      <returns>Oggetto <see cref="T:Microsoft.VisualBasic.FileIO.TextFieldParser" /> per la lettura del file specificato.</returns>
    </member>
    <member name="M:Microsoft.VisualBasic.FileIO.FileSystem.OpenTextFileReader(System.String)">
      <summary>Apre un oggetto <see cref="T:System.IO.StreamReader" /> per eseguire la lettura da un file.</summary>
      <param name="file">File da leggere.</param>
      <exception cref="T:System.ArgumentException">Il nome del file termina con una barra rovesciata (\).</exception>
      <exception cref="T:System.IO.FileNotFoundException">Impossibile trovare il file specificato.</exception>
      <exception cref="T:System.Security.SecurityException">L'utente non dispone delle autorizzazioni necessarie per leggere il file.</exception>
      <returns>Oggetto <see cref="T:System.IO.StreamReader" /> per eseguire la lettura dal file.</returns>
    </member>
    <member name="M:Microsoft.VisualBasic.FileIO.FileSystem.OpenTextFileReader(System.String,System.Text.Encoding)">
      <summary>Apre un oggetto <see cref="T:System.IO.StreamReader" /> per eseguire la lettura da un file.</summary>
      <param name="file">File da leggere.</param>
      <param name="encoding">Codifica da utilizzare per il contenuto del file. Il valore predefinito è ASCII.</param>
      <exception cref="T:System.ArgumentException">Il nome del file termina con una barra rovesciata (\).</exception>
      <exception cref="T:System.IO.FileNotFoundException">Impossibile trovare il file specificato.</exception>
      <exception cref="T:System.Security.SecurityException">L'utente non dispone delle autorizzazioni necessarie per leggere il file.</exception>
      <returns>Oggetto <see cref="T:System.IO.StreamReader" /> per eseguire la lettura dal file.</returns>
    </member>
    <member name="M:Microsoft.VisualBasic.FileIO.FileSystem.OpenTextFileWriter(System.String,System.Boolean)">
      <summary>Apre un oggetto <see cref="T:System.IO.StreamWriter" /> per eseguire la scrittura nel file specificato.</summary>
      <param name="file">File in cui scrivere.</param>
      <param name="append">
        <see langword="True" /> per aggiungere i dati al contenuto del file; <see langword="False" /> per sovrascrivere il contenuto del file. Il valore predefinito è <see langword="False" />.</param>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="file" /> è <see langword="Nothing" /> o una stringa vuota.</exception>
      <exception cref="T:System.ArgumentException">Il nome file termina con una barra finale.</exception>
      <returns>Oggetto <see cref="T:System.IO.StreamWriter" /> per eseguire la scrittura nel file specificato.</returns>
    </member>
    <member name="M:Microsoft.VisualBasic.FileIO.FileSystem.OpenTextFileWriter(System.String,System.Boolean,System.Text.Encoding)">
      <summary>Apre un oggetto <see cref="T:System.IO.StreamWriter" /> per eseguire la scrittura nel file specificato.</summary>
      <param name="file">File in cui scrivere.</param>
      <param name="append">
        <see langword="True" /> per aggiungere i dati al contenuto del file; <see langword="False" /> per sovrascrivere il contenuto del file. Il valore predefinito è <see langword="False" />.</param>
      <param name="encoding">Codifica da utilizzare per la scrittura nel file. Il valore predefinito è ASCII.</param>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="file" /> è <see langword="Nothing" /> o una stringa vuota.</exception>
      <exception cref="T:System.ArgumentException">Il nome file termina con una barra finale.</exception>
      <returns>Oggetto <see cref="T:System.IO.StreamWriter" /> per eseguire la scrittura nel file specificato.</returns>
    </member>
    <member name="M:Microsoft.VisualBasic.FileIO.FileSystem.ReadAllBytes(System.String)">
      <summary>Restituisce il contenuto di un file come matrice di byte.</summary>
      <param name="file">File da leggere.</param>
      <exception cref="T:System.ArgumentException">Il percorso non è valido per uno dei motivi seguenti: è una stringa di lunghezza zero; contiene solo spazi vuoti; contiene caratteri non validi o è il percorso di un dispositivo ovvero inizia con \\.\; termina con una barra finale.</exception>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="file" /> è <see langword="Nothing" />.</exception>
      <exception cref="T:System.IO.FileNotFoundException">Il file specificato non esiste.</exception>
      <exception cref="T:System.IO.IOException">Il file è in uso in un altro processo oppure si verifica un errore di I/O.</exception>
      <exception cref="T:System.IO.PathTooLongException">La lunghezza del percorso supera la lunghezza massima definita dal sistema.</exception>
      <exception cref="T:System.NotSupportedException">Nel nome di un file o di una directory del percorso sono presenti i due punti (:) oppure il relativo formato non è valido.</exception>
      <exception cref="T:System.OutOfMemoryException">La memoria disponibile non è sufficiente per la scrittura della stringa nel buffer.</exception>
      <exception cref="T:System.Security.SecurityException">L'utente non dispone delle autorizzazioni necessarie per visualizzare il percorso.</exception>
      <returns>Matrice di <see langword="Byte" /> contenente i contenuti del file.</returns>
    </member>
    <member name="M:Microsoft.VisualBasic.FileIO.FileSystem.ReadAllText(System.String)">
      <summary>Restituisce il contenuto di un file di testo come <see langword="String" />.</summary>
      <param name="file">Nome e percorso del file da leggere.</param>
      <exception cref="T:System.ArgumentException">Il percorso non è valido per uno dei motivi seguenti: è una stringa di lunghezza zero; contiene solo spazi vuoti; contiene caratteri non validi o è il percorso di un dispositivo ovvero inizia con \\.\; termina con una barra finale.</exception>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="file" /> è <see langword="Nothing" />.</exception>
      <exception cref="T:System.IO.FileNotFoundException">Il file specificato non esiste.</exception>
      <exception cref="T:System.IO.IOException">Il file è in uso in un altro processo oppure si verifica un errore di I/O.</exception>
      <exception cref="T:System.IO.PathTooLongException">La lunghezza del percorso supera la lunghezza massima definita dal sistema.</exception>
      <exception cref="T:System.NotSupportedException">Nel nome di un file o di una directory del percorso sono presenti i due punti (:) oppure il relativo formato non è valido.</exception>
      <exception cref="T:System.OutOfMemoryException">La memoria disponibile non è sufficiente per la scrittura della stringa nel buffer.</exception>
      <exception cref="T:System.Security.SecurityException">L'utente non dispone delle autorizzazioni necessarie per visualizzare il percorso.</exception>
      <returns>
        <see langword="String" /> contenente i contenuti del file.</returns>
    </member>
    <member name="M:Microsoft.VisualBasic.FileIO.FileSystem.ReadAllText(System.String,System.Text.Encoding)">
      <summary>Restituisce il contenuto di un file di testo come <see langword="String" />.</summary>
      <param name="file">Nome e percorso del file da leggere.</param>
      <param name="encoding">Codifica dei caratteri da utilizzare nella lettura del file. L'impostazione predefinita è UTF-8.</param>
      <exception cref="T:System.ArgumentException">Il percorso non è valido per uno dei motivi seguenti: è una stringa di lunghezza zero; contiene solo spazi vuoti; contiene caratteri non validi o è il percorso di un dispositivo ovvero inizia con \\.\; termina con una barra finale.</exception>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="file" /> è <see langword="Nothing" />.</exception>
      <exception cref="T:System.IO.FileNotFoundException">Il file specificato non esiste.</exception>
      <exception cref="T:System.IO.IOException">Il file è in uso in un altro processo oppure si verifica un errore di I/O.</exception>
      <exception cref="T:System.IO.PathTooLongException">La lunghezza del percorso supera la lunghezza massima definita dal sistema.</exception>
      <exception cref="T:System.NotSupportedException">Nel nome di un file o di una directory del percorso sono presenti i due punti (:) oppure il relativo formato non è valido.</exception>
      <exception cref="T:System.OutOfMemoryException">La memoria disponibile non è sufficiente per la scrittura della stringa nel buffer.</exception>
      <exception cref="T:System.Security.SecurityException">L'utente non dispone delle autorizzazioni necessarie per visualizzare il percorso.</exception>
      <returns>
        <see langword="String" /> contenente i contenuti del file.</returns>
    </member>
    <member name="M:Microsoft.VisualBasic.FileIO.FileSystem.RenameDirectory(System.String,System.String)">
      <summary>Rinomina una directory.</summary>
      <param name="directory">Percorso e nome della directory da rinominare.</param>
      <param name="newName">Nuovo nome per la directory.</param>
      <exception cref="T:System.ArgumentException">
        <paramref name="newName" /> contiene informazioni sul percorso.</exception>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="directory" /> è <see langword="Nothing" />.  
  
-oppure- 
 <paramref name="newName" /> è <see langword="Nothing" /> o una stringa vuota.</exception>
      <exception cref="T:System.IO.DirectoryNotFoundException">La directory non esiste.</exception>
      <exception cref="T:System.IO.IOException">È disponibile un file o directory esistente con il nome specificato in <paramref name="newName" />.</exception>
      <exception cref="T:System.IO.PathTooLongException">La lunghezza del percorso supera la lunghezza massima definita dal sistema.</exception>
      <exception cref="T:System.NotSupportedException">Nel nome di un file o di una directory del percorso sono presenti i due punti (:) oppure il relativo formato non è valido.</exception>
      <exception cref="T:System.Security.SecurityException">L'utente non dispone delle autorizzazioni necessarie per visualizzare il percorso.</exception>
      <exception cref="T:System.UnauthorizedAccessException">L'utente non dispone dell'autorizzazione necessaria.</exception>
    </member>
    <member name="M:Microsoft.VisualBasic.FileIO.FileSystem.RenameFile(System.String,System.String)">
      <summary>Rinomina un file.</summary>
      <param name="file">File da rinominare.</param>
      <param name="newName">Nuovo nome del file.</param>
      <exception cref="T:System.ArgumentException">
        <paramref name="newName" /> contiene informazioni sul percorso o termina con una barra rovesciata (\).</exception>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="file" /> è <see langword="Nothing" />.  
  
-oppure- 
 <paramref name="newName" /> è <see langword="Nothing" /> o una stringa vuota.</exception>
      <exception cref="T:System.IO.FileNotFoundException">La directory non esiste.</exception>
      <exception cref="T:System.IO.IOException">È disponibile un file o directory esistente con il nome specificato in <paramref name="newName" />.</exception>
      <exception cref="T:System.IO.PathTooLongException">La lunghezza del percorso supera la lunghezza massima definita dal sistema.</exception>
      <exception cref="T:System.NotSupportedException">Nel nome di un file o di una directory del percorso sono presenti i due punti (:) oppure il relativo formato non è valido.</exception>
      <exception cref="T:System.Security.SecurityException">L'utente non dispone delle autorizzazioni necessarie per visualizzare il percorso.</exception>
      <exception cref="T:System.UnauthorizedAccessException">L'utente non dispone dell'autorizzazione necessaria.</exception>
    </member>
    <member name="M:Microsoft.VisualBasic.FileIO.FileSystem.WriteAllBytes(System.String,System.Byte[],System.Boolean)">
      <summary>Scrive dati in un file binario.</summary>
      <param name="file">Percorso e nome del file in cui scrivere.</param>
      <param name="data">Dati da scrivere nel file.</param>
      <param name="append">
        <see langword="True" /> per aggiungere i dati al contenuto del file; <see langword="False" /> per sovrascrivere il contenuto del file. Il valore predefinito è <see langword="False" />.</param>
      <exception cref="T:System.ArgumentException">Il percorso non è valido per uno dei motivi seguenti: è una stringa di lunghezza zero; contiene solo spazi vuoti; contiene caratteri non validi o è il percorso di un dispositivo ovvero inizia con \\.\; termina con una barra finale.</exception>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="file" /> è <see langword="Nothing" />.</exception>
      <exception cref="T:System.IO.FileNotFoundException">Il file specificato non esiste.</exception>
      <exception cref="T:System.IO.IOException">Il file è in uso in un altro processo oppure si verifica un errore di I/O.</exception>
      <exception cref="T:System.IO.PathTooLongException">La lunghezza del percorso supera la lunghezza massima definita dal sistema.</exception>
      <exception cref="T:System.NotSupportedException">Nel nome di un file o di una directory del percorso sono presenti i due punti (:) oppure il relativo formato non è valido.</exception>
      <exception cref="T:System.OutOfMemoryException">La memoria disponibile non è sufficiente per la scrittura della stringa nel buffer.</exception>
      <exception cref="T:System.Security.SecurityException">L'utente non dispone delle autorizzazioni necessarie per visualizzare il percorso.</exception>
    </member>
    <member name="M:Microsoft.VisualBasic.FileIO.FileSystem.WriteAllText(System.String,System.String,System.Boolean)">
      <summary>Scrive testo in un file.</summary>
      <param name="file">File in cui scrivere.</param>
      <param name="text">Testo da scrivere nel file.</param>
      <param name="append">
        <see langword="True" /> per aggiungere i dati al contenuto del file; <see langword="False" /> per sovrascrivere il contenuto del file.</param>
      <exception cref="T:System.ArgumentException">Il percorso non è valido per uno dei motivi seguenti: è una stringa di lunghezza zero; contiene solo spazi vuoti; contiene caratteri non validi o è il percorso di un dispositivo ovvero inizia con \\.\; termina con una barra finale.</exception>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="file" /> è <see langword="Nothing" />.</exception>
      <exception cref="T:System.IO.FileNotFoundException">Il file specificato non esiste.</exception>
      <exception cref="T:System.IO.IOException">Il file è in uso in un altro processo oppure si verifica un errore di I/O.</exception>
      <exception cref="T:System.IO.PathTooLongException">La lunghezza del percorso supera la lunghezza massima definita dal sistema.</exception>
      <exception cref="T:System.NotSupportedException">Nel nome di un file o di una directory del percorso sono presenti i due punti (:) oppure il relativo formato non è valido.</exception>
      <exception cref="T:System.OutOfMemoryException">La memoria disponibile non è sufficiente per la scrittura della stringa nel buffer.</exception>
      <exception cref="T:System.Security.SecurityException">L'utente non dispone delle autorizzazioni necessarie per visualizzare il percorso.</exception>
    </member>
    <member name="M:Microsoft.VisualBasic.FileIO.FileSystem.WriteAllText(System.String,System.String,System.Boolean,System.Text.Encoding)">
      <summary>Scrive testo in un file.</summary>
      <param name="file">File in cui scrivere.</param>
      <param name="text">Testo da scrivere nel file.</param>
      <param name="append">
        <see langword="True" /> per aggiungere i dati al contenuto del file; <see langword="False" /> per sovrascrivere il contenuto del file.</param>
      <param name="encoding">Codifica da utilizzare per la scrittura nel file.</param>
      <exception cref="T:System.ArgumentException">Il percorso non è valido per uno dei motivi seguenti: è una stringa di lunghezza zero; contiene solo spazi vuoti; contiene caratteri non validi o è il percorso di un dispositivo ovvero inizia con \\.\; termina con una barra finale.</exception>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="file" /> è <see langword="Nothing" />.</exception>
      <exception cref="T:System.IO.FileNotFoundException">Il file specificato non esiste.</exception>
      <exception cref="T:System.IO.IOException">Il file è in uso in un altro processo oppure si verifica un errore di I/O.</exception>
      <exception cref="T:System.IO.PathTooLongException">La lunghezza del percorso supera la lunghezza massima definita dal sistema.</exception>
      <exception cref="T:System.NotSupportedException">Nel nome di un file o di una directory del percorso sono presenti i due punti (:) oppure il relativo formato non è valido.</exception>
      <exception cref="T:System.OutOfMemoryException">La memoria disponibile non è sufficiente per la scrittura della stringa nel buffer.</exception>
      <exception cref="T:System.Security.SecurityException">L'utente non dispone delle autorizzazioni necessarie per visualizzare il percorso.</exception>
    </member>
    <member name="P:Microsoft.VisualBasic.FileIO.FileSystem.CurrentDirectory">
      <summary>Ottiene o imposta la directory corrente.</summary>
      <exception cref="T:System.IO.DirectoryNotFoundException">Il percorso non è valido.</exception>
      <exception cref="T:System.UnauthorizedAccessException">L'utente non dispone delle autorizzazioni necessarie.</exception>
      <returns>Directory corrente per le operazioni di I/O di file.</returns>
    </member>
    <member name="P:Microsoft.VisualBasic.FileIO.FileSystem.Drives">
      <summary>Restituisce un insieme in sola lettura di tutti i nomi di unità disponibili.</summary>
      <returns>Insieme di sola lettura di tutte le unità disponibili come oggetti <see cref="T:System.IO.DriveInfo" />.</returns>
    </member>
    <member name="T:Microsoft.VisualBasic.FileIO.MalformedLineException">
      <summary>Eccezione generata quando il metodo <see cref="M:Microsoft.VisualBasic.FileIO.TextFieldParser.ReadFields" /> non è in grado di analizzare una riga utilizzando il formato specificato.</summary>
    </member>
    <member name="M:Microsoft.VisualBasic.FileIO.MalformedLineException.#ctor">
      <summary>Inizializza una nuova istanza della classe <see cref="T:Microsoft.VisualBasic.FileIO.MalformedLineException" />.</summary>
    </member>
    <member name="M:Microsoft.VisualBasic.FileIO.MalformedLineException.#ctor(System.Runtime.Serialization.SerializationInfo,System.Runtime.Serialization.StreamingContext)">
      <summary>Inizializza una nuova istanza della classe <see cref="T:Microsoft.VisualBasic.FileIO.MalformedLineException" /> con dati serializzati.</summary>
      <param name="info">Oggetto <see cref="T:System.Runtime.Serialization.SerializationInfo" /> che contiene i dati di oggetto serializzati relativi all'eccezione generata.</param>
      <param name="context">Struttura <see cref="T:System.Runtime.Serialization.StreamingContext" /> contenente le informazioni contestuali sull'origine o sulla destinazione.</param>
    </member>
    <member name="M:Microsoft.VisualBasic.FileIO.MalformedLineException.#ctor(System.String)">
      <summary>Inizializza una nuova istanza della classe <see cref="T:Microsoft.VisualBasic.FileIO.MalformedLineException" /> con un messaggio di errore specificato.</summary>
      <param name="message">Messaggio in cui viene descritto l'errore,</param>
    </member>
    <member name="M:Microsoft.VisualBasic.FileIO.MalformedLineException.#ctor(System.String,System.Exception)">
      <summary>Inizializza una nuova istanza della classe <see cref="T:Microsoft.VisualBasic.FileIO.MalformedLineException" /> con un messaggio di errore specificato e un riferimento all'eccezione interna che è la causa dell'eccezione corrente.</summary>
      <param name="message">Classe <see cref="T:System.String" /> che descrive l'errore.</param>
      <param name="innerException">Oggetto <see cref="T:System.Exception" /> che rappresenta la causa dell'eccezione corrente. Se il parametro <see cref="P:System.Exception.InnerException" /> non è un riferimento null (<see langword="Nothing" /> in Visual Basic), l'eccezione corrente viene generata in un blocco catch che gestisce l'eccezione interna.</param>
    </member>
    <member name="M:Microsoft.VisualBasic.FileIO.MalformedLineException.#ctor(System.String,System.Int64)">
      <summary>Inizializza una nuova istanza della classe <see cref="T:Microsoft.VisualBasic.FileIO.MalformedLineException" /> con un messaggio di errore specificato e un numero di riga.</summary>
      <param name="message">Messaggio dell'eccezione.</param>
      <param name="lineNumber">Numero di riga della riga in formato non corretto.</param>
    </member>
    <member name="M:Microsoft.VisualBasic.FileIO.MalformedLineException.#ctor(System.String,System.Int64,System.Exception)">
      <summary>Inizializza una nuova istanza della classe <see cref="T:Microsoft.VisualBasic.FileIO.MalformedLineException" /> con un messaggio di errore specificato, un numero di riga e un riferimento all'eccezione interna che è la causa dell'eccezione corrente.</summary>
      <param name="message">Messaggio dell'eccezione.</param>
      <param name="lineNumber">Numero di riga della riga in formato non corretto.</param>
      <param name="innerException">Eccezione <see cref="T:System.Exception" /> che rappresenta la causa dell'eccezione corrente. Se il parametro <see cref="P:System.Exception.InnerException" /> non è un riferimento null (<see langword="Nothing" /> in Visual Basic), l'eccezione corrente viene generata in un blocco catch che gestisce l'eccezione interna.</param>
    </member>
    <member name="M:Microsoft.VisualBasic.FileIO.MalformedLineException.GetObjectData(System.Runtime.Serialization.SerializationInfo,System.Runtime.Serialization.StreamingContext)">
      <summary>Imposta l'oggetto <see cref="T:System.Runtime.Serialization.SerializationInfo" /> con le informazioni sull'eccezione.</summary>
      <param name="info">Oggetto <see cref="T:System.Runtime.Serialization.SerializationInfo" /> che contiene i dati di oggetto serializzati relativi all'eccezione generata.</param>
      <param name="context">Struttura <see cref="T:System.Runtime.Serialization.StreamingContext" /> contenente le informazioni contestuali sull'origine o sulla destinazione.</param>
    </member>
    <member name="M:Microsoft.VisualBasic.FileIO.MalformedLineException.ToString">
      <summary>Crea e restituisce una rappresentazione di stringa dell'eccezione corrente.</summary>
      <returns>Una rappresentazione di stringa dell'eccezione corrente.</returns>
    </member>
    <member name="P:Microsoft.VisualBasic.FileIO.MalformedLineException.LineNumber">
      <summary>Ottiene il numero di riga della riga in formato non corretto.</summary>
      <returns>Numero di riga della riga in formato non corretto.</returns>
    </member>
    <member name="T:Microsoft.VisualBasic.FileIO.RecycleOption">
      <summary>Specifica se è necessario eliminare in modo permanente un file o posizionarlo nel Cestino.</summary>
    </member>
    <member name="F:Microsoft.VisualBasic.FileIO.RecycleOption.DeletePermanently">
      <summary>Elimina il file o la directory in modo permanente. Predefinita.</summary>
    </member>
    <member name="F:Microsoft.VisualBasic.FileIO.RecycleOption.SendToRecycleBin">
      <summary>Sposta il file o la directory nel Cestino.</summary>
    </member>
    <member name="T:Microsoft.VisualBasic.FileIO.SearchOption">
      <summary>Specifica se eseguire la ricerca in tutte le directory o solo in quelle di primo livello.</summary>
    </member>
    <member name="F:Microsoft.VisualBasic.FileIO.SearchOption.SearchAllSubDirectories">
      <summary>Esegue la ricerca nella directory specificata e in tutte le sottodirectory al suo interno. Predefinita.</summary>
    </member>
    <member name="F:Microsoft.VisualBasic.FileIO.SearchOption.SearchTopLevelOnly">
      <summary>Esegue la ricerca solo nella directory specificata, escludendo le sottodirectory.</summary>
    </member>
    <member name="T:Microsoft.VisualBasic.FileIO.SpecialDirectories">
      <summary>Specifica le proprietà per l'accesso alle directory a cui si fa comunemente riferimento.</summary>
    </member>
    <member name="M:Microsoft.VisualBasic.FileIO.SpecialDirectories.#ctor">
      <summary>Restituisce un'istanza della classe <see cref="P:Microsoft.VisualBasic.MyServices.FileSystemProxy.SpecialDirectories" />.</summary>
    </member>
    <member name="P:Microsoft.VisualBasic.FileIO.SpecialDirectories.AllUsersApplicationData">
      <summary>Ottiene il nome di un percorso che punta alla directory Dati applicazioni per tutti gli utenti.</summary>
      <exception cref="T:System.Security.Permissions.EnvironmentPermission">Controlla l'accesso alle variabili di ambiente dell'utente e del sistema. Enumerazione associata: <see cref="F:System.Security.Permissions.PermissionState.Unrestricted" />.</exception>
      <exception cref="T:System.IO.DirectoryNotFoundException">Il percorso è vuoto, generalmente perché la directory non è supportata dal sistema operativo.</exception>
      <returns>Percorso della directory Dati applicazioni per tutti gli utenti.</returns>
    </member>
    <member name="P:Microsoft.VisualBasic.FileIO.SpecialDirectories.CurrentUserApplicationData">
      <summary>Ottiene il nome di un percorso che punta alla directory Dati applicazioni per l'utente corrente.</summary>
      <exception cref="T:System.IO.DirectoryNotFoundException">Il percorso è vuoto, generalmente perché la directory non è supportata dal sistema operativo.</exception>
      <returns>Percorso della directory Dati applicazioni per l'utente corrente.</returns>
    </member>
    <member name="P:Microsoft.VisualBasic.FileIO.SpecialDirectories.Desktop">
      <summary>Ottiene il nome di un percorso che fa riferimento alla directory Desktop.</summary>
      <exception cref="T:System.IO.DirectoryNotFoundException">Il percorso è vuoto, generalmente perché la directory non è supportata dal sistema operativo.</exception>
      <returns>Percorso della directory Desktop.</returns>
    </member>
    <member name="P:Microsoft.VisualBasic.FileIO.SpecialDirectories.MyDocuments">
      <summary>Ottiene un nome di percorso che punta alla directory Documenti.</summary>
      <exception cref="T:System.IO.DirectoryNotFoundException">Il percorso è vuoto, generalmente perché la directory non è supportata dal sistema operativo.</exception>
      <returns>Percorso della directory Documenti.</returns>
    </member>
    <member name="P:Microsoft.VisualBasic.FileIO.SpecialDirectories.MyMusic">
      <summary>Ottiene il nome di un percorso che fa riferimento alla directory Musica.</summary>
      <exception cref="T:System.IO.DirectoryNotFoundException">Il percorso è vuoto, generalmente perché la directory non è supportata dal sistema operativo.</exception>
      <returns>Percorso della directory Musica.</returns>
    </member>
    <member name="P:Microsoft.VisualBasic.FileIO.SpecialDirectories.MyPictures">
      <summary>Ottiene il nome di un percorso che fa riferimento alla directory Immagini.</summary>
      <exception cref="T:System.IO.DirectoryNotFoundException">Il percorso è vuoto, generalmente perché la directory non è supportata dal sistema operativo.</exception>
      <returns>Percorso della directory Immagini.</returns>
    </member>
    <member name="P:Microsoft.VisualBasic.FileIO.SpecialDirectories.ProgramFiles">
      <summary>Ottiene un percorso che punta alla directory Programmi.</summary>
      <exception cref="T:System.IO.DirectoryNotFoundException">Il percorso è vuoto, generalmente perché la directory non è supportata dal sistema operativo.</exception>
      <returns>Percorso della directory dei file di programma .</returns>
    </member>
    <member name="P:Microsoft.VisualBasic.FileIO.SpecialDirectories.Programs">
      <summary>Ottiene il nome di un percorso che fa riferimento alla directory Programmi.</summary>
      <exception cref="T:System.IO.DirectoryNotFoundException">Il percorso è vuoto, generalmente perché la directory non è supportata dal sistema operativo.</exception>
      <returns>Percorso della directory Programmi.</returns>
    </member>
    <member name="P:Microsoft.VisualBasic.FileIO.SpecialDirectories.Temp">
      <summary>Ottiene il nome di un percorso che fa riferimento alla directory Temp.</summary>
      <exception cref="T:System.IO.DirectoryNotFoundException">Il percorso è vuoto, generalmente perché la directory non è supportata dal sistema operativo.</exception>
      <returns>Percorso della directory Temp.</returns>
    </member>
    <member name="T:Microsoft.VisualBasic.FileIO.TextFieldParser">
      <summary>Fornisce i metodi e le proprietà per l'analisi dei file di testo strutturati.</summary>
    </member>
    <member name="M:Microsoft.VisualBasic.FileIO.TextFieldParser.#ctor(System.IO.Stream)">
      <summary>Inizializza una nuova istanza della classe <see langword="TextFieldParser" />.</summary>
      <param name="stream">
        <see cref="T:System.IO.Stream" />. Flusso da analizzare.</param>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="stream" /> è <see langword="Nothing" />.</exception>
      <exception cref="T:System.ArgumentException">Non è possibile leggere da <paramref name="stream" />.</exception>
    </member>
    <member name="M:Microsoft.VisualBasic.FileIO.TextFieldParser.#ctor(System.IO.Stream,System.Text.Encoding)">
      <summary>Inizializza una nuova istanza della classe <see langword="TextFieldParser" />.</summary>
      <param name="stream">
        <see cref="T:System.IO.Stream" />. Flusso da analizzare.</param>
      <param name="defaultEncoding">
        <see cref="T:System.Text.Encoding" />. Codifica dei caratteri da utilizzare se la codifica non è determinata dal file. Il valore predefinito è <see cref="P:System.Text.Encoding.UTF8" />.</param>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="stream" /> o <paramref name="defaultEncoding" /> è <see langword="Nothing" />.</exception>
      <exception cref="T:System.ArgumentException">Non è possibile leggere da <paramref name="stream" />.</exception>
    </member>
    <member name="M:Microsoft.VisualBasic.FileIO.TextFieldParser.#ctor(System.IO.Stream,System.Text.Encoding,System.Boolean)">
      <summary>Inizializza una nuova istanza della classe <see langword="TextFieldParser" />.</summary>
      <param name="stream">
        <see cref="T:System.IO.Stream" />. Flusso da analizzare.</param>
      <param name="defaultEncoding">
        <see cref="T:System.Text.Encoding" />. Codifica dei caratteri da utilizzare se la codifica non è determinata dal file. Il valore predefinito è <see cref="P:System.Text.Encoding.UTF8" />.</param>
      <param name="detectEncoding">
        <see langword="Boolean" />. Indica se cercare i byte order mark all'inizio del file. Il valore predefinito è <see langword="True" />.</param>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="stream" /> o <paramref name="defaultEncoding" /> è <see langword="Nothing" />.</exception>
      <exception cref="T:System.ArgumentException">Non è possibile leggere da <paramref name="stream" />.</exception>
    </member>
    <member name="M:Microsoft.VisualBasic.FileIO.TextFieldParser.#ctor(System.IO.Stream,System.Text.Encoding,System.Boolean,System.Boolean)">
      <summary>Inizializza una nuova istanza della classe <see langword="TextFieldParser" />.</summary>
      <param name="stream">
        <see cref="T:System.IO.Stream" />. Flusso da analizzare.</param>
      <param name="defaultEncoding">
        <see cref="T:System.Text.Encoding" />. Codifica dei caratteri da utilizzare se la codifica non è determinata dal file. Il valore predefinito è <see cref="P:System.Text.Encoding.UTF8" />.</param>
      <param name="detectEncoding">
        <see langword="Boolean" />. Indica se cercare i byte order mark all'inizio del file. Il valore predefinito è <see langword="True" />.</param>
      <param name="leaveOpen">
        <see langword="Boolean" />. Indica se lasciare <paramref name="stream" /> aperto quando l'oggetto <see langword="TextFieldParser" /> è chiuso. Il valore predefinito è <see langword="False" />.</param>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="stream" /> o <paramref name="defaultEncoding" /> è <see langword="Nothing" />.</exception>
      <exception cref="T:System.ArgumentException">Non è possibile leggere da <paramref name="stream" />.</exception>
    </member>
    <member name="M:Microsoft.VisualBasic.FileIO.TextFieldParser.#ctor(System.IO.TextReader)">
      <summary>Inizializza una nuova istanza della classe <see langword="TextFieldParser" />.</summary>
      <param name="reader">
        <see cref="T:System.IO.TextReader" />. Flusso <see cref="T:System.IO.TextReader" /> da analizzare.</param>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="reader" /> è <see langword="Nothing" />.</exception>
    </member>
    <member name="M:Microsoft.VisualBasic.FileIO.TextFieldParser.#ctor(System.String)">
      <summary>Inizializza una nuova istanza della classe <see langword="TextFieldParser" />.</summary>
      <param name="path">
        <see langword="String" />. Percorso completo del file da analizzare.</param>
      <exception cref="T:System.ArgumentNullException">Il parametro <paramref name="path" /> è una stringa vuota.</exception>
    </member>
    <member name="M:Microsoft.VisualBasic.FileIO.TextFieldParser.#ctor(System.String,System.Text.Encoding)">
      <summary>Inizializza una nuova istanza della classe <see langword="TextFieldParser" />.</summary>
      <param name="path">
        <see langword="String" />. Percorso completo del file da analizzare.</param>
      <param name="defaultEncoding">
        <see cref="T:System.Text.Encoding" />. Codifica dei caratteri da utilizzare se la codifica non è determinata dal file. Il valore predefinito è <see cref="P:System.Text.Encoding.UTF8" />.</param>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="path" /> è una stringa vuota o <paramref name="defaultEncoding" /> è <see langword="Nothing" />.</exception>
    </member>
    <member name="M:Microsoft.VisualBasic.FileIO.TextFieldParser.#ctor(System.String,System.Text.Encoding,System.Boolean)">
      <summary>Inizializza una nuova istanza della classe <see langword="TextFieldParser" />.</summary>
      <param name="path">
        <see langword="String" />. Percorso completo del file da analizzare.</param>
      <param name="defaultEncoding">
        <see cref="T:System.Text.Encoding" />. Codifica dei caratteri da utilizzare se la codifica non è determinata dal file. Il valore predefinito è <see cref="P:System.Text.Encoding.UTF8" />.</param>
      <param name="detectEncoding">
        <see langword="Boolean" />. Indica se cercare i byte order mark all'inizio del file. Il valore predefinito è <see langword="True" />.</param>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="path" /> è una stringa vuota o <paramref name="defaultEncoding" /> è <see langword="Nothing" />.</exception>
    </member>
    <member name="M:Microsoft.VisualBasic.FileIO.TextFieldParser.Close">
      <summary>Chiude l'oggetto <see langword="TextFieldParser" /> corrente.</summary>
    </member>
    <member name="M:Microsoft.VisualBasic.FileIO.TextFieldParser.Dispose(System.Boolean)">
      <summary>Rilascia le risorse usate dall'oggetto <see cref="T:Microsoft.VisualBasic.FileIO.TextFieldParser" />.</summary>
      <param name="disposing">Proprietà di tipo Boolean. <see langword="True" /> rilascia sia le risorse gestite che quelle non gestite; <see langword="False" /> rilascia solo le risorse non gestite.</param>
    </member>
    <member name="M:Microsoft.VisualBasic.FileIO.TextFieldParser.Finalize">
      <summary>Consente all'oggetto <see cref="T:Microsoft.VisualBasic.FileIO.TextFieldParser" /> di provare a liberare risorse ed eseguire altre operazioni di pulitura prima che l'oggetto stesso venga recuperato dalla procedura di Garbage Collection.</summary>
    </member>
    <member name="M:Microsoft.VisualBasic.FileIO.TextFieldParser.PeekChars(System.Int32)">
      <summary>Legge il numero di caratteri specificato senza spostare in avanti il cursore.</summary>
      <param name="numberOfChars">Numero di caratteri da leggere. Obbligatorio.</param>
      <exception cref="T:System.ArgumentException">
        <paramref name="numberOfChars" /> è minore di 0.</exception>
      <returns>Stringa che contiene il numero di caratteri letti specificato.</returns>
    </member>
    <member name="M:Microsoft.VisualBasic.FileIO.TextFieldParser.ReadFields">
      <summary>Legge tutti i campi nella riga corrente, li restituisce come una matrice di stringhe e sposta il cursore alla riga successiva contenente dati.</summary>
      <exception cref="T:Microsoft.VisualBasic.FileIO.MalformedLineException">Non è possibile analizzare il campo utilizzando il formato specificato.</exception>
      <returns>Matrice di stringhe che contiene i valori dei campi della riga corrente.</returns>
    </member>
    <member name="M:Microsoft.VisualBasic.FileIO.TextFieldParser.ReadLine">
      <summary>Restituisce la riga corrente come stringa e sposta il cursore alla riga successiva.</summary>
      <returns>Riga corrente dal file o dal flusso.</returns>
    </member>
    <member name="M:Microsoft.VisualBasic.FileIO.TextFieldParser.ReadToEnd">
      <summary>Legge il resto del file di testo e lo restituisce come stringa.</summary>
      <returns>Testo rimanente dal file o dal flusso.</returns>
    </member>
    <member name="M:Microsoft.VisualBasic.FileIO.TextFieldParser.SetDelimiters(System.String[])">
      <summary>Imposta i delimitatori per il lettore sui valori specificati e imposta il tipo di campo su <see langword="Delimited" />.</summary>
      <param name="delimiters">Matrice di tipo <see langword="String" />.</param>
      <exception cref="T:System.ArgumentException">Il delimitatore è di lunghezza zero.</exception>
    </member>
    <member name="M:Microsoft.VisualBasic.FileIO.TextFieldParser.SetFieldWidths(System.Int32[])">
      <summary>Imposta i delimitatori per il lettore sui valori specificati.</summary>
      <param name="fieldWidths">Matrice di valori <see langword="Integer" />.</param>
    </member>
    <member name="M:Microsoft.VisualBasic.FileIO.TextFieldParser.System#IDisposable#Dispose">
      <summary>Rilascia le risorse usate dall'oggetto <see cref="T:Microsoft.VisualBasic.FileIO.TextFieldParser" />.</summary>
    </member>
    <member name="P:Microsoft.VisualBasic.FileIO.TextFieldParser.CommentTokens">
      <summary>Definisce i token di commento. Un token di commento è una stringa che, se posizionata all'inizio di una riga, indica che la riga è un commento e deve essere ignorata dal parser.</summary>
      <exception cref="T:System.ArgumentException">Un token di commento contiene spazi vuoti.</exception>
      <returns>Matrice di stringhe che contiene tutti i token di commento per l'oggetto <see cref="T:Microsoft.VisualBasic.FileIO.TextFieldParser" />.</returns>
    </member>
    <member name="P:Microsoft.VisualBasic.FileIO.TextFieldParser.Delimiters">
      <summary>Definisce i delimitatori per un file di testo.</summary>
      <exception cref="T:System.ArgumentException">Il valore di un delimitatore è impostato su un carattere di nuova riga, una stringa vuota o <see langword="Nothing" />.</exception>
      <returns>Matrice di stringhe che contiene tutti i delimitatori di campo per l'oggetto <see cref="T:Microsoft.VisualBasic.FileIO.TextFieldParser" />.</returns>
    </member>
    <member name="P:Microsoft.VisualBasic.FileIO.TextFieldParser.EndOfData">
      <summary>Restituisce <see langword="True" /> se non sono presenti righe non vuote o righe non di commento tra la posizione del cursore corrente e la fine del file.</summary>
      <returns>
        <see langword="True" /> se non vi sono più dati da leggere. In caso contrario, <see langword="False" />.</returns>
    </member>
    <member name="P:Microsoft.VisualBasic.FileIO.TextFieldParser.ErrorLine">
      <summary>Restituisce la riga che ha provocato la generazione dell'eccezione <see cref="T:Microsoft.VisualBasic.FileIO.MalformedLineException" /> più recente.</summary>
      <returns>Riga che ha provocato l'eccezione <see cref="T:Microsoft.VisualBasic.FileIO.MalformedLineException" /> più recente.</returns>
    </member>
    <member name="P:Microsoft.VisualBasic.FileIO.TextFieldParser.ErrorLineNumber">
      <summary>Restituisce il numero della riga che ha provocato la generazione dell'eccezione <see cref="T:Microsoft.VisualBasic.FileIO.MalformedLineException" /> più recente.</summary>
      <returns>Numero della riga che ha provocato l'eccezione <see cref="T:Microsoft.VisualBasic.FileIO.MalformedLineException" /> più recente.</returns>
    </member>
    <member name="P:Microsoft.VisualBasic.FileIO.TextFieldParser.FieldWidths">
      <summary>Indica la larghezza di ogni colonna nel file di testo da analizzare.</summary>
      <exception cref="T:System.ArgumentException">Un valore di larghezza in qualsiasi percorso diverso dall'ultima voce della matrice è inferiore o uguale a zero.</exception>
      <returns>Matrice di interi che contiene la larghezza di ogni colonna nel file di testo da analizzare.</returns>
    </member>
    <member name="P:Microsoft.VisualBasic.FileIO.TextFieldParser.HasFieldsEnclosedInQuotes">
      <summary>Indica se i campi sono racchiusi tra virgolette quando un file delimitato viene analizzato.</summary>
      <returns>
        <see langword="True" /> se i campi sono racchiusi tra virgolette. In caso contrario, <see langword="False" />.</returns>
    </member>
    <member name="P:Microsoft.VisualBasic.FileIO.TextFieldParser.LineNumber">
      <summary>Restituisce il numero di riga corrente oppure -1 se non sono disponibili ulteriori caratteri all'interno del flusso.</summary>
      <returns>Numero di riga corrente.</returns>
    </member>
    <member name="P:Microsoft.VisualBasic.FileIO.TextFieldParser.TextFieldType">
      <summary>Indica se il file da analizzare è delimitato o a larghezza fissa.</summary>
      <returns>Valore <see cref="P:Microsoft.VisualBasic.FileIO.TextFieldParser.TextFieldType" /> che indica se il file da analizzare è delimitato o a larghezza fissa.</returns>
    </member>
    <member name="P:Microsoft.VisualBasic.FileIO.TextFieldParser.TrimWhiteSpace">
      <summary>Indica se gli spazi vuoti iniziale e finale devono essere tagliati dai valori dei campi.</summary>
      <returns>
        <see langword="True" /> se gli spazi vuoti iniziale e finale devono essere tagliati dai valori dei campi. In caso contrario, <see langword="False" />.</returns>
    </member>
    <member name="T:Microsoft.VisualBasic.FileIO.UICancelOption">
      <summary>Specifica se viene generata un'eccezione quando l'utente fa clic su Annulla nel corso di un'operazione.</summary>
    </member>
    <member name="F:Microsoft.VisualBasic.FileIO.UICancelOption.DoNothing">
      <summary>Non esegue alcuna azione quando l'utente fa clic su Annulla.</summary>
    </member>
    <member name="F:Microsoft.VisualBasic.FileIO.UICancelOption.ThrowException">
      <summary>Genera un'eccezione quando l'utente fa clic su Annulla.</summary>
    </member>
    <member name="T:Microsoft.VisualBasic.FileIO.UIOption">
      <summary>Specifica le finestre di dialogo da visualizzare durante le operazioni di copia, eliminazione o spostamento di file o directory.</summary>
    </member>
    <member name="F:Microsoft.VisualBasic.FileIO.UIOption.AllDialogs">
      <summary>Visualizza la finestra di dialogo di avanzamento ed eventuali finestre di dialogo di errore.</summary>
    </member>
    <member name="F:Microsoft.VisualBasic.FileIO.UIOption.OnlyErrorDialogs">
      <summary>Visualizza solo le finestre di dialogo di errore e nasconde le finestre di dialogo di avanzamento. Predefinita.</summary>
    </member>
    <member name="T:Microsoft.VisualBasic.FileSystem">
      <summary>Il modulo <see langword="FileSystem" /> contiene le procedure utilizzate per eseguire operazioni su file, directory o cartelle e sistema. Nelle operazioni di I/O su file, la funzionalità <see langword="My" /> garantisce produttività e prestazioni migliori rispetto all'utilizzo del modulo <see langword="FileSystem" />. Per altre informazioni, vedere <see cref="T:Microsoft.VisualBasic.FileIO.FileSystem" />.</summary>
    </member>
    <member name="M:Microsoft.VisualBasic.FileSystem.ChDir(System.String)">
      <summary>Cambia la directory o cartella corrente. Nelle operazioni di I/O su file la funzionalità <see langword="My" /> garantisce produttività e prestazioni migliori rispetto alla funzione <see langword="ChDir" />. Per altre informazioni, vedere <see cref="P:Microsoft.VisualBasic.FileIO.FileSystem.CurrentDirectory" />.</summary>
      <param name="Path">Obbligatorio. Espressione stringa che identifica la directory o la cartella che diventa la nuova directory o cartella predefinita. Il parametro <paramref name="Path" /> può includere l'unità. Se non viene specificata alcuna unità, <see langword="ChDir" /> cambia la directory o cartella predefinita dell'unità corrente.</param>
      <exception cref="T:System.ArgumentException">
        <paramref name="Path" /> è vuoto.</exception>
      <exception cref="T:System.IO.FileNotFoundException">L'unità specificata non è valida o non è disponibile.</exception>
    </member>
    <member name="M:Microsoft.VisualBasic.FileSystem.ChDrive(System.Char)">
      <summary>Cambia l'unità corrente.</summary>
      <param name="Drive">Obbligatorio. Espressione String che specifica un'unità esistente. Se viene fornita una stringa di lunghezza zero (""), l'unità corrente non verrà modificata. Se l'argomento <paramref name="Drive" /> è una stringa di più caratteri, <see langword="ChDrive" /> utilizza solo la prima lettera.</param>
      <exception cref="T:System.IO.IOException">L'unità specificata non è valida o non è disponibile.</exception>
    </member>
    <member name="M:Microsoft.VisualBasic.FileSystem.ChDrive(System.String)">
      <summary>Cambia l'unità corrente.</summary>
      <param name="Drive">Obbligatorio. Espressione String che specifica un'unità esistente. Se viene fornita una stringa di lunghezza zero (""), l'unità corrente non verrà modificata. Se l'argomento <paramref name="Drive" /> è una stringa di più caratteri, <see langword="ChDrive" /> utilizza solo la prima lettera.</param>
      <exception cref="T:System.IO.IOException">L'unità specificata non è valida o non è disponibile.</exception>
    </member>
    <member name="M:Microsoft.VisualBasic.FileSystem.CurDir">
      <summary>Restituisce una stringa che rappresenta il percorso corrente. Nelle operazioni di I/O su file, <see cref="T:Microsoft.VisualBasic.FileIO.FileSystem" /> garantisce produttività e prestazioni migliori rispetto a <see langword="CurDir" />. Per altre informazioni, vedere <see cref="P:Microsoft.VisualBasic.FileIO.FileSystem.CurrentDirectory" />.</summary>
      <returns>Stringa che rappresenta il percorso corrente.</returns>
    </member>
    <member name="M:Microsoft.VisualBasic.FileSystem.CurDir(System.Char)">
      <summary>Restituisce una stringa che rappresenta il percorso corrente. Nelle operazioni di I/O su file, <see cref="T:Microsoft.VisualBasic.FileIO.FileSystem" /> garantisce produttività e prestazioni migliori rispetto a <see langword="CurDir" />. Per altre informazioni, vedere <see cref="P:Microsoft.VisualBasic.FileIO.FileSystem.CurrentDirectory" />.</summary>
      <param name="Drive">facoltativo. Espressione <see langword="Char" /> che specifica un'unità esistente. Se non si specifica alcuna unità, o se <paramref name="Drive" /> è una strina di lunghezza zero (""), <see langword="CurDir" /> restituisce il percorso dell'unità corrente.</param>
      <returns>Stringa che rappresenta il percorso corrente.</returns>
    </member>
    <member name="M:Microsoft.VisualBasic.FileSystem.Dir">
      <summary>Restituisce una stringa che rappresenta il nome di un file, di una directory o di una cartella corrispondente a un criterio o a un attributo di file specificato oppure all'etichetta di volume di un'unità. Nelle operazioni di I/O su file, <see cref="T:Microsoft.VisualBasic.FileIO.FileSystem" /> garantisce produttività e prestazioni migliori rispetto alla funzione <see langword="Dir" />. Per altre informazioni, vedere <see cref="M:Microsoft.VisualBasic.FileIO.FileSystem.GetDirectoryInfo(System.String)" />.</summary>
      <returns>Stringa che rappresenta il nome di un file, una directory o una cartella corrispondente a un determinato attributo di file o modello, oppure l'etichetta di volume di un'unità.</returns>
    </member>
    <member name="M:Microsoft.VisualBasic.FileSystem.Dir(System.String,Microsoft.VisualBasic.FileAttribute)">
      <summary>Restituisce una stringa che rappresenta il nome di un file, di una directory o di una cartella corrispondente a un criterio o a un attributo di file specificato oppure all'etichetta di volume di un'unità. Nelle operazioni di I/O su file, <see cref="T:Microsoft.VisualBasic.FileIO.FileSystem" /> garantisce produttività e prestazioni migliori rispetto alla funzione <see langword="Dir" />. Per altre informazioni, vedere <see cref="M:Microsoft.VisualBasic.FileIO.FileSystem.GetDirectoryInfo(System.String)" />.</summary>
      <param name="PathName">facoltativo. Espressione stringa che specifica un nome di file, directory o cartella o un'etichetta di volume di un'unità. Se <paramref name="PathName" /> non viene trovato, verrà restituita una stringa di lunghezza zero (<see langword="&quot;&quot;" />).</param>
      <param name="Attributes">facoltativo. Enumerazione o espressione numerica il cui valore specifica attributi di file. Se omesso, <see langword="Dir" /> restituisce file che corrispondono a <paramref name="Pathname" /> ma sono privi di attributi.</param>
      <returns>Stringa che rappresenta il nome di un file, una directory o una cartella corrispondente a un determinato attributo di file o modello, oppure l'etichetta di volume di un'unità.</returns>
    </member>
    <member name="M:Microsoft.VisualBasic.FileSystem.EOF(System.Int32)">
      <summary>Restituisce un valore Boolean <see langword="True" /> quando viene raggiunta la fine di un file aperto per <see langword="Random" /> o <see langword="Input" /> sequenziale.</summary>
      <param name="FileNumber">Obbligatorio. <see langword="Integer" /> che contiene qualsiasi numero di file valido.</param>
      <exception cref="T:System.IO.IOException">La modalità File non è valida.</exception>
      <returns>Valore Boolean <see langword="True" /> quando viene raggiunta la fine di un file aperto per <see langword="Random" /> o <see langword="Input" /> sequenziale.</returns>
    </member>
    <member name="M:Microsoft.VisualBasic.FileSystem.FileAttr(System.Int32)">
      <summary>Restituisce un'enumerazione che rappresenta la modalità di file per i file aperti utilizzando la funzione <see langword="FileOpen" />. Nelle operazioni di I/O su file, <see cref="T:Microsoft.VisualBasic.FileIO.FileSystem" /> garantisce produttività e prestazioni migliori rispetto alla funzione <see langword="FileAttr" />. Per altre informazioni, vedere <see cref="M:Microsoft.VisualBasic.FileIO.FileSystem.GetFileInfo(System.String)" />.</summary>
      <param name="FileNumber">Obbligatorio. <see langword="Integer" /> Qualsiasi numero di file valido.</param>
      <returns>Uno dei valori seguenti: 
 <list type="table"><listheader><term>Valore</term><description>Modalità di accesso ai file</description></listheader><item><term>1</term><description><see langword="OpenMode.Input" /></description></item><item><term>2</term><description><see langword="OpenMode.Output" /></description></item><item><term>4</term><description><see langword="OpenMode.Random" /></description></item><item><term>8</term><description><see langword="OpenMode.Append" /></description></item><item><term>32</term><description><see langword="OpenMode.Binary" /></description></item></list></returns>
    </member>
    <member name="M:Microsoft.VisualBasic.FileSystem.FileClose(System.Int32[])">
      <summary>Conclude le operazioni di input/output (I/O) in un file aperto con la funzione <see langword="FileOpen" />. Nelle operazioni di I/O di file <see langword="My" /> garantisce produttività e prestazioni migliori. Per altre informazioni, vedere <see cref="T:Microsoft.VisualBasic.FileIO.FileSystem" />.</summary>
      <param name="FileNumbers">facoltativo. Matrice di parametri di 0 o più canali da chiudere.</param>
      <exception cref="T:System.IO.IOException">
        <paramref name="FileNumber" /> non esiste.</exception>
    </member>
    <member name="M:Microsoft.VisualBasic.FileSystem.FileCopy(System.String,System.String)">
      <summary>Copia un file. Nelle operazioni di I/O su file, <see cref="T:Microsoft.VisualBasic.FileIO.FileSystem" /> garantisce produttività e prestazioni migliori rispetto a <see langword="FileCopy" />. Per altre informazioni, vedere <see cref="M:Microsoft.VisualBasic.FileIO.FileSystem.CopyFile(System.String,System.String)" />.</summary>
      <param name="Source">Obbligatorio. Espressione stringa che specifica il nome del file da copiare. L'oggetto <paramref name="Source" /> può includere la directory o la cartella e l'unità del file di origine.</param>
      <param name="Destination">Obbligatorio. Espressione stringa che specifica il nome del file di destinazione. L'oggetto <paramref name="Destination" /> può includere la directory o la cartella e l'unità del file di destinazione.</param>
      <exception cref="T:System.ArgumentException">
        <paramref name="Source" /> o <paramref name="Destination" /> non è valido o non è specificato.</exception>
      <exception cref="T:System.IO.IOException">Il file è già aperto.</exception>
      <exception cref="T:System.IO.FileNotFoundException">Il file non esiste.</exception>
    </member>
    <member name="M:Microsoft.VisualBasic.FileSystem.FileDateTime(System.String)">
      <summary>Restituisce un valore <see langword="Date" /> che indica la data e l'ora della scrittura in un file. La funzionalità <see langword="My" /> offre un livello più elevato di produttività e prestazioni nelle operazioni di I/O dei file rispetto a <see langword="FileDateTime" />. Per altre informazioni, vedere <see cref="M:Microsoft.VisualBasic.FileIO.FileSystem.GetFileInfo(System.String)" />.</summary>
      <param name="PathName">Obbligatorio. Espressione stringa che specifica un nome file. <paramref name="PathName" /> può includere la directory o cartella e l'unità.</param>
      <exception cref="T:System.ArgumentException">
        <paramref name="PathName" /> non è valido o contiene caratteri jolly.</exception>
      <exception cref="T:System.IO.FileNotFoundException">Il file di destinazione non esiste.</exception>
      <returns>Valore <see langword="Date" /> che indica la data e l'ora di creazione o dell'ultima modifica di un file.</returns>
    </member>
    <member name="M:Microsoft.VisualBasic.FileSystem.FileGet(System.Int32,System.Array@,System.Int64,System.Boolean,System.Boolean)">
      <summary>Legge i dati in una variabile da un file aperto sul disco. La funzionalità <see langword="My" /> offre un livello più elevato di produttività e prestazioni nelle operazioni di I/O dei file rispetto a <see langword="FileGet" />. Per altre informazioni, vedere <see cref="T:Microsoft.VisualBasic.FileIO.FileSystem" />.</summary>
      <param name="FileNumber">Obbligatorio. Qualsiasi numero di file valido.</param>
      <param name="Value">Obbligatorio. Nome valido della variabile in cui vengono letti i dati.</param>
      <param name="RecordNumber">facoltativo. Numero di record (file in modalità <see langword="Random" />) o numero di byte (file in modalità <see langword="Binary" />) in corrispondenza del quale viene avviata la lettura.</param>
      <param name="ArrayIsDynamic">facoltativo. Si applica solo durante la scrittura di una matrice. Specifica se la matrice deve essere considerata una matrice dinamica e se è necessario un descrittore della matrice che descrive le dimensioni e i limiti della matrice.</param>
      <param name="StringIsFixedLength">facoltativo. Si applica solo durante la scrittura di una stringa. Specifica se scrivere un descrittore a due byte per la stringa che descrive la lunghezza. Il valore predefinito è <see langword="False" />.</param>
      <exception cref="T:System.ArgumentException">
        <paramref name="RecordNumber" /> &lt; 1 e diverso da -1.</exception>
      <exception cref="T:System.IO.IOException">La modalità File non è valida.</exception>
    </member>
    <member name="M:Microsoft.VisualBasic.FileSystem.FileGet(System.Int32,System.Boolean@,System.Int64)">
      <summary>Legge i dati in una variabile da un file aperto sul disco. La funzionalità <see langword="My" /> offre un livello più elevato di produttività e prestazioni nelle operazioni di I/O dei file rispetto a <see langword="FileGet" />. Per altre informazioni, vedere <see cref="T:Microsoft.VisualBasic.FileIO.FileSystem" />.</summary>
      <param name="FileNumber">Obbligatorio. Qualsiasi numero di file valido.</param>
      <param name="Value">Obbligatorio. Nome valido della variabile in cui vengono letti i dati.</param>
      <param name="RecordNumber">facoltativo. Numero di record (file in modalità <see langword="Random" />) o numero di byte (file in modalità <see langword="Binary" />) in corrispondenza del quale viene avviata la lettura.</param>
      <exception cref="T:System.ArgumentException">
        <paramref name="RecordNumber" /> &lt; 1 e diverso da -1.</exception>
      <exception cref="T:System.IO.IOException">La modalità File non è valida.</exception>
    </member>
    <member name="M:Microsoft.VisualBasic.FileSystem.FileGet(System.Int32,System.Byte@,System.Int64)">
      <summary>Legge i dati in una variabile da un file aperto sul disco. La funzionalità <see langword="My" /> offre un livello più elevato di produttività e prestazioni nelle operazioni di I/O dei file rispetto a <see langword="FileGet" />. Per altre informazioni, vedere <see cref="T:Microsoft.VisualBasic.FileIO.FileSystem" />.</summary>
      <param name="FileNumber">Obbligatorio. Qualsiasi numero di file valido.</param>
      <param name="Value">Obbligatorio. Nome valido della variabile in cui vengono letti i dati.</param>
      <param name="RecordNumber">facoltativo. Numero di record (file in modalità <see langword="Random" />) o numero di byte (file in modalità <see langword="Binary" />) in corrispondenza del quale viene avviata la lettura.</param>
      <exception cref="T:System.ArgumentException">
        <paramref name="RecordNumber" /> &lt; 1 e diverso da -1.</exception>
      <exception cref="T:System.IO.IOException">La modalità File non è valida.</exception>
    </member>
    <member name="M:Microsoft.VisualBasic.FileSystem.FileGet(System.Int32,System.Char@,System.Int64)">
      <summary>Legge i dati in una variabile da un file aperto sul disco. La funzionalità <see langword="My" /> offre un livello più elevato di produttività e prestazioni nelle operazioni di I/O dei file rispetto a <see langword="FileGet" />. Per altre informazioni, vedere <see cref="T:Microsoft.VisualBasic.FileIO.FileSystem" />.</summary>
      <param name="FileNumber">Obbligatorio. Qualsiasi numero di file valido.</param>
      <param name="Value">Obbligatorio. Nome valido della variabile in cui vengono letti i dati.</param>
      <param name="RecordNumber">facoltativo. Numero di record (file in modalità <see langword="Random" />) o numero di byte (file in modalità <see langword="Binary" />) in corrispondenza del quale viene avviata la lettura.</param>
      <exception cref="T:System.ArgumentException">
        <paramref name="RecordNumber" /> &lt; 1 e diverso da -1.</exception>
      <exception cref="T:System.IO.IOException">La modalità File non è valida.</exception>
    </member>
    <member name="M:Microsoft.VisualBasic.FileSystem.FileGet(System.Int32,System.DateTime@,System.Int64)">
      <summary>Legge i dati in una variabile da un file aperto sul disco. La funzionalità <see langword="My" /> offre un livello più elevato di produttività e prestazioni nelle operazioni di I/O dei file rispetto a <see langword="FileGet" />. Per altre informazioni, vedere <see cref="T:Microsoft.VisualBasic.FileIO.FileSystem" />.</summary>
      <param name="FileNumber">Obbligatorio. Qualsiasi numero di file valido.</param>
      <param name="Value">Obbligatorio. Nome valido della variabile in cui vengono letti i dati.</param>
      <param name="RecordNumber">facoltativo. Numero di record (file in modalità <see langword="Random" />) o numero di byte (file in modalità <see langword="Binary" />) in corrispondenza del quale viene avviata la lettura.</param>
      <exception cref="T:System.ArgumentException">
        <paramref name="RecordNumber" /> &lt; 1 e diverso da -1.</exception>
      <exception cref="T:System.IO.IOException">La modalità File non è valida.</exception>
    </member>
    <member name="M:Microsoft.VisualBasic.FileSystem.FileGet(System.Int32,System.Decimal@,System.Int64)">
      <summary>Legge i dati in una variabile da un file aperto sul disco. La funzionalità <see langword="My" /> offre un livello più elevato di produttività e prestazioni nelle operazioni di I/O dei file rispetto a <see langword="FileGet" />. Per altre informazioni, vedere <see cref="T:Microsoft.VisualBasic.FileIO.FileSystem" />.</summary>
      <param name="FileNumber">Obbligatorio. Qualsiasi numero di file valido.</param>
      <param name="Value">Obbligatorio. Nome valido della variabile in cui vengono letti i dati.</param>
      <param name="RecordNumber">facoltativo. Numero di record (file in modalità <see langword="Random" />) o numero di byte (file in modalità <see langword="Binary" />) in corrispondenza del quale viene avviata la lettura.</param>
      <exception cref="T:System.ArgumentException">
        <paramref name="RecordNumber" /> &lt; 1 e diverso da -1.</exception>
      <exception cref="T:System.IO.IOException">La modalità File non è valida.</exception>
    </member>
    <member name="M:Microsoft.VisualBasic.FileSystem.FileGet(System.Int32,System.Double@,System.Int64)">
      <summary>Legge i dati in una variabile da un file aperto sul disco. La funzionalità <see langword="My" /> offre un livello più elevato di produttività e prestazioni nelle operazioni di I/O dei file rispetto a <see langword="FileGet" />. Per altre informazioni, vedere <see cref="T:Microsoft.VisualBasic.FileIO.FileSystem" />.</summary>
      <param name="FileNumber">Obbligatorio. Qualsiasi numero di file valido.</param>
      <param name="Value">Obbligatorio. Nome valido della variabile in cui vengono letti i dati.</param>
      <param name="RecordNumber">facoltativo. Numero di record (file in modalità <see langword="Random" />) o numero di byte (file in modalità <see langword="Binary" />) in corrispondenza del quale viene avviata la lettura.</param>
      <exception cref="T:System.ArgumentException">
        <paramref name="RecordNumber" /> &lt; 1 e diverso da -1.</exception>
      <exception cref="T:System.IO.IOException">La modalità File non è valida.</exception>
    </member>
    <member name="M:Microsoft.VisualBasic.FileSystem.FileGet(System.Int32,System.Int16@,System.Int64)">
      <summary>Legge i dati in una variabile da un file aperto sul disco. La funzionalità <see langword="My" /> offre un livello più elevato di produttività e prestazioni nelle operazioni di I/O dei file rispetto a <see langword="FileGet" />. Per altre informazioni, vedere <see cref="T:Microsoft.VisualBasic.FileIO.FileSystem" />.</summary>
      <param name="FileNumber">Obbligatorio. Qualsiasi numero di file valido.</param>
      <param name="Value">Obbligatorio. Nome valido della variabile in cui vengono letti i dati.</param>
      <param name="RecordNumber">facoltativo. Numero di record (file in modalità <see langword="Random" />) o numero di byte (file in modalità <see langword="Binary" />) in corrispondenza del quale viene avviata la lettura.</param>
      <exception cref="T:System.ArgumentException">
        <paramref name="RecordNumber" /> &lt; 1 e diverso da -1.</exception>
      <exception cref="T:System.IO.IOException">La modalità File non è valida.</exception>
    </member>
    <member name="M:Microsoft.VisualBasic.FileSystem.FileGet(System.Int32,System.Int32@,System.Int64)">
      <summary>Legge i dati in una variabile da un file aperto sul disco. La funzionalità <see langword="My" /> offre un livello più elevato di produttività e prestazioni nelle operazioni di I/O dei file rispetto a <see langword="FileGet" />. Per altre informazioni, vedere <see cref="T:Microsoft.VisualBasic.FileIO.FileSystem" />.</summary>
      <param name="FileNumber">Obbligatorio. Qualsiasi numero di file valido.</param>
      <param name="Value">Obbligatorio. Nome valido della variabile in cui vengono letti i dati.</param>
      <param name="RecordNumber">facoltativo. Numero di record (file in modalità <see langword="Random" />) o numero di byte (file in modalità <see langword="Binary" />) in corrispondenza del quale viene avviata la lettura.</param>
      <exception cref="T:System.ArgumentException">
        <paramref name="RecordNumber" /> &lt; 1 e diverso da -1.</exception>
      <exception cref="T:System.IO.IOException">La modalità File non è valida.</exception>
    </member>
    <member name="M:Microsoft.VisualBasic.FileSystem.FileGet(System.Int32,System.Int64@,System.Int64)">
      <summary>Legge i dati in una variabile da un file aperto sul disco. La funzionalità <see langword="My" /> offre un livello più elevato di produttività e prestazioni nelle operazioni di I/O dei file rispetto a <see langword="FileGet" />. Per altre informazioni, vedere <see cref="T:Microsoft.VisualBasic.FileIO.FileSystem" />.</summary>
      <param name="FileNumber">Obbligatorio. Qualsiasi numero di file valido.</param>
      <param name="Value">Obbligatorio. Nome valido della variabile in cui vengono letti i dati.</param>
      <param name="RecordNumber">facoltativo. Numero di record (file in modalità <see langword="Random" />) o numero di byte (file in modalità <see langword="Binary" />) in corrispondenza del quale viene avviata la lettura.</param>
      <exception cref="T:System.ArgumentException">
        <paramref name="RecordNumber" /> &lt; 1 e diverso da -1.</exception>
      <exception cref="T:System.IO.IOException">La modalità File non è valida.</exception>
    </member>
    <member name="M:Microsoft.VisualBasic.FileSystem.FileGet(System.Int32,System.Single@,System.Int64)">
      <summary>Legge i dati in una variabile da un file aperto sul disco. La funzionalità <see langword="My" /> offre un livello più elevato di produttività e prestazioni nelle operazioni di I/O dei file rispetto a <see langword="FileGet" />. Per altre informazioni, vedere <see cref="T:Microsoft.VisualBasic.FileIO.FileSystem" />.</summary>
      <param name="FileNumber">Obbligatorio. Qualsiasi numero di file valido.</param>
      <param name="Value">Obbligatorio. Nome valido della variabile in cui vengono letti i dati.</param>
      <param name="RecordNumber">facoltativo. Numero di record (file in modalità <see langword="Random" />) o numero di byte (file in modalità <see langword="Binary" />) in corrispondenza del quale viene avviata la lettura.</param>
      <exception cref="T:System.ArgumentException">
        <paramref name="RecordNumber" /> &lt; 1 e diverso da -1.</exception>
      <exception cref="T:System.IO.IOException">La modalità File non è valida.</exception>
    </member>
    <member name="M:Microsoft.VisualBasic.FileSystem.FileGet(System.Int32,System.String@,System.Int64,System.Boolean)">
      <summary>Legge i dati in una variabile da un file aperto sul disco. La funzionalità <see langword="My" /> offre un livello più elevato di produttività e prestazioni nelle operazioni di I/O dei file rispetto a <see langword="FileGet" />. Per altre informazioni, vedere <see cref="T:Microsoft.VisualBasic.FileIO.FileSystem" />.</summary>
      <param name="FileNumber">Obbligatorio. Qualsiasi numero di file valido.</param>
      <param name="Value">Obbligatorio. Nome valido della variabile in cui vengono letti i dati.</param>
      <param name="RecordNumber">facoltativo. Numero di record (file in modalità <see langword="Random" />) o numero di byte (file in modalità <see langword="Binary" />) in corrispondenza del quale viene avviata la lettura.</param>
      <param name="StringIsFixedLength">facoltativo. Si applica solo durante la scrittura di una stringa. Specifica se scrivere un descrittore a due byte per la stringa che descrive la lunghezza. Il valore predefinito è <see langword="False" />.</param>
      <exception cref="T:System.ArgumentException">
        <paramref name="RecordNumber" /> &lt; 1 e diverso da -1.</exception>
      <exception cref="T:System.IO.IOException">La modalità File non è valida.</exception>
    </member>
    <member name="M:Microsoft.VisualBasic.FileSystem.FileGet(System.Int32,System.ValueType@,System.Int64)">
      <summary>Legge i dati in una variabile da un file aperto sul disco. La funzionalità <see langword="My" /> offre un livello più elevato di produttività e prestazioni nelle operazioni di I/O dei file rispetto a <see langword="FileGet" />. Per altre informazioni, vedere <see cref="T:Microsoft.VisualBasic.FileIO.FileSystem" />.</summary>
      <param name="FileNumber">Obbligatorio. Qualsiasi numero di file valido.</param>
      <param name="Value">Obbligatorio. Nome valido della variabile in cui vengono letti i dati.</param>
      <param name="RecordNumber">facoltativo. Numero di record (file in modalità <see langword="Random" />) o numero di byte (file in modalità <see langword="Binary" />) in corrispondenza del quale viene avviata la lettura.</param>
      <exception cref="T:System.ArgumentException">
        <paramref name="RecordNumber" /> &lt; 1 e diverso da -1.</exception>
      <exception cref="T:System.IO.IOException">La modalità File non è valida.</exception>
    </member>
    <member name="M:Microsoft.VisualBasic.FileSystem.FileGetObject(System.Int32,System.Object@,System.Int64)">
      <summary>Legge i dati in una variabile da un file aperto sul disco.  La funzionalità <see langword="My" /> offre un livello più elevato di produttività e prestazioni nelle operazioni di I/O dei file rispetto a <see langword="FileGetObject" />. Per altre informazioni, vedere <see cref="T:Microsoft.VisualBasic.FileIO.FileSystem" />.</summary>
      <param name="FileNumber">Obbligatorio. Qualsiasi numero di file valido.</param>
      <param name="Value">Obbligatorio. Nome valido della variabile in cui vengono letti i dati.</param>
      <param name="RecordNumber">facoltativo. Numero di record (file in modalità <see langword="Random" />) o numero di byte (file in modalità <see langword="Binary" />) in corrispondenza del quale viene avviata la lettura.</param>
    </member>
    <member name="M:Microsoft.VisualBasic.FileSystem.FileLen(System.String)">
      <summary>Restituisce un valore che specifica la lunghezza di un file in byte. La funzionalità <see langword="My" /> offre un livello più elevato di produttività e prestazioni nelle operazioni di I/O dei file rispetto a <see langword="FileLen" />. Per altre informazioni, vedere <see cref="M:Microsoft.VisualBasic.FileIO.FileSystem.GetFileInfo(System.String)" />.</summary>
      <param name="PathName">Obbligatorio. Espressione stringa che specifica un file. <paramref name="PathName" /> può includere la directory o cartella e l'unità.</param>
      <exception cref="T:System.IO.FileNotFoundException">Il file non esiste.</exception>
      <returns>Lunghezza di un file in byte.</returns>
    </member>
    <member name="M:Microsoft.VisualBasic.FileSystem.FileOpen(System.Int32,System.String,Microsoft.VisualBasic.OpenMode,Microsoft.VisualBasic.OpenAccess,Microsoft.VisualBasic.OpenShare,System.Int32)">
      <summary>Apre un file per l'input o l'output. La funzionalità <see langword="My" /> offre un livello più elevato di produttività e prestazioni nelle operazioni di I/O dei file rispetto a <see langword="FileOpen" />. Per altre informazioni, vedere <see cref="T:Microsoft.VisualBasic.FileIO.FileSystem" />.</summary>
      <param name="FileNumber">Obbligatorio. Qualsiasi numero di file valido. Utilizza la funzione <see langword="FreeFile" /> per ottenere il successivo numero di file disponibile.</param>
      <param name="FileName">Obbligatorio. Espressione stringa che specifica un nome di file. Può includere la directory o la cartella e l'unità.</param>
      <param name="Mode">Obbligatorio. Enumerazione che specifica la modalità per il file: <see langword="Append" />, <see langword="Binary" />, <see langword="Input" />, <see langword="Output" /> o <see langword="Random" />. Per altre informazioni, vedere <see cref="T:Microsoft.VisualBasic.OpenMode" />.</param>
      <param name="Access">facoltativo. Enumerazione che specifica le operazioni autorizzate sul file aperto: <see langword="Read" />, <see langword="Write" /> o <see langword="ReadWrite" />. Il valore predefinito è <see langword="ReadWrite" />. Per altre informazioni, vedere <see cref="T:Microsoft.VisualBasic.OpenAccess" />.</param>
      <param name="Share">facoltativo. Enumerazione che specifica le operazioni non autorizzate sul file aperto da altri processi: <see langword="Shared" />, <see langword="Lock Read" />, <see langword="Lock Write" /> e <see langword="Lock Read Write" />. Il valore predefinito è <see langword="Lock Read Write" />. Per altre informazioni, vedere <see cref="T:Microsoft.VisualBasic.OpenShare" />.</param>
      <param name="RecordLength">facoltativo. Numero minore o uguale a 32.767 byte. Per i file aperti per l'accesso Random, questo valore rappresenta la lunghezza del record. Per i file sequenziali, questo valore rappresenta il numero di caratteri memorizzati nel buffer.</param>
      <exception cref="T:System.ArgumentException">Lunghezza del record negativa (e diversa da -1).</exception>
      <exception cref="T:System.IO.IOException">Il parametro <paramref name="FileName" /> è già aperto oppure <paramref name="FileName" /> non è valido.</exception>
    </member>
    <member name="M:Microsoft.VisualBasic.FileSystem.FilePut(System.Int32,System.Array,System.Int64,System.Boolean,System.Boolean)">
      <summary>Scrive dati da una variabile in un file del disco. La funzionalità <see langword="My" /> offre un livello più elevato di produttività e prestazioni nelle operazioni di I/O dei file rispetto a <see langword="FilePut" />. Per altre informazioni, vedere <see cref="T:Microsoft.VisualBasic.FileIO.FileSystem" />.</summary>
      <param name="FileNumber">Obbligatorio. Qualsiasi numero di file valido.</param>
      <param name="Value">Obbligatorio. Nome di variabile valido che contiene i dati scritti su disco.</param>
      <param name="RecordNumber">facoltativo. Numero di record (file in modalità <see langword="Random" />) o numero di byte (file in modalità <see langword="Binary" />) in corrispondenza del quale inizia la scrittura.</param>
      <param name="ArrayIsDynamic">facoltativo. Si applica solo durante la scrittura di una matrice. Specifica se la matrice deve essere considerata dinamica e se deve essere scritto un descrittore di matrice per la stringa che descrive la lunghezza.</param>
      <param name="StringIsFixedLength">facoltativo. Si applica solo durante la scrittura di una stringa. Specifica se scrivere un descrittore di lunghezza a due byte per la stringa nel file. Il valore predefinito è <see langword="False" />.</param>
      <exception cref="T:System.ArgumentException">
        <paramref name="RecordNumber" /> &lt; 1 e diverso da -1.</exception>
      <exception cref="T:System.IO.IOException">La modalità File non è valida.</exception>
    </member>
    <member name="M:Microsoft.VisualBasic.FileSystem.FilePut(System.Int32,System.Boolean,System.Int64)">
      <summary>Scrive dati da una variabile in un file del disco. La funzionalità <see langword="My" /> offre un livello più elevato di produttività e prestazioni nelle operazioni di I/O dei file rispetto a <see langword="FilePut" />. Per altre informazioni, vedere <see cref="T:Microsoft.VisualBasic.FileIO.FileSystem" />.</summary>
      <param name="FileNumber">Obbligatorio. Qualsiasi numero di file valido.</param>
      <param name="Value">Obbligatorio. Nome di variabile valido che contiene i dati scritti su disco.</param>
      <param name="RecordNumber">facoltativo. Numero di record (file in modalità <see langword="Random" />) o numero di byte (file in modalità <see langword="Binary" />) in corrispondenza del quale inizia la scrittura.</param>
      <exception cref="T:System.ArgumentException">
        <paramref name="RecordNumber" /> &lt; 1 e diverso da -1.</exception>
      <exception cref="T:System.IO.IOException">La modalità File non è valida.</exception>
    </member>
    <member name="M:Microsoft.VisualBasic.FileSystem.FilePut(System.Int32,System.Byte,System.Int64)">
      <summary>Scrive dati da una variabile in un file del disco. La funzionalità <see langword="My" /> offre un livello più elevato di produttività e prestazioni nelle operazioni di I/O dei file rispetto a <see langword="FilePut" />. Per altre informazioni, vedere <see cref="T:Microsoft.VisualBasic.FileIO.FileSystem" />.</summary>
      <param name="FileNumber">Obbligatorio. Qualsiasi numero di file valido.</param>
      <param name="Value">Obbligatorio. Nome di variabile valido che contiene i dati scritti su disco.</param>
      <param name="RecordNumber">facoltativo. Numero di record (file in modalità <see langword="Random" />) o numero di byte (file in modalità <see langword="Binary" />) in corrispondenza del quale inizia la scrittura.</param>
      <exception cref="T:System.ArgumentException">
        <paramref name="RecordNumber" /> &lt; 1 e diverso da -1.</exception>
      <exception cref="T:System.IO.IOException">La modalità File non è valida.</exception>
    </member>
    <member name="M:Microsoft.VisualBasic.FileSystem.FilePut(System.Int32,System.Char,System.Int64)">
      <summary>Scrive dati da una variabile in un file del disco. La funzionalità <see langword="My" /> offre un livello più elevato di produttività e prestazioni nelle operazioni di I/O dei file rispetto a <see langword="FilePut" />. Per altre informazioni, vedere <see cref="T:Microsoft.VisualBasic.FileIO.FileSystem" />.</summary>
      <param name="FileNumber">Obbligatorio. Qualsiasi numero di file valido.</param>
      <param name="Value">Obbligatorio. Nome di variabile valido che contiene i dati scritti su disco.</param>
      <param name="RecordNumber">facoltativo. Numero di record (file in modalità <see langword="Random" />) o numero di byte (file in modalità <see langword="Binary" />) in corrispondenza del quale inizia la scrittura.</param>
      <exception cref="T:System.ArgumentException">
        <paramref name="RecordNumber" /> &lt; 1 e diverso da -1.</exception>
      <exception cref="T:System.IO.IOException">La modalità File non è valida.</exception>
    </member>
    <member name="M:Microsoft.VisualBasic.FileSystem.FilePut(System.Int32,System.DateTime,System.Int64)">
      <summary>Scrive dati da una variabile in un file del disco. La funzionalità <see langword="My" /> offre un livello più elevato di produttività e prestazioni nelle operazioni di I/O dei file rispetto a <see langword="FilePut" />. Per altre informazioni, vedere <see cref="T:Microsoft.VisualBasic.FileIO.FileSystem" />.</summary>
      <param name="FileNumber">Obbligatorio. Qualsiasi numero di file valido.</param>
      <param name="Value">Obbligatorio. Nome di variabile valido che contiene i dati scritti su disco.</param>
      <param name="RecordNumber">facoltativo. Numero di record (file in modalità <see langword="Random" />) o numero di byte (file in modalità <see langword="Binary" />) in corrispondenza del quale inizia la scrittura.</param>
      <exception cref="T:System.ArgumentException">
        <paramref name="RecordNumber" /> &lt; 1 e diverso da -1.</exception>
      <exception cref="T:System.IO.IOException">La modalità File non è valida.</exception>
    </member>
    <member name="M:Microsoft.VisualBasic.FileSystem.FilePut(System.Int32,System.Decimal,System.Int64)">
      <summary>Scrive dati da una variabile in un file del disco. La funzionalità <see langword="My" /> offre un livello più elevato di produttività e prestazioni nelle operazioni di I/O dei file rispetto a <see langword="FilePut" />. Per altre informazioni, vedere <see cref="T:Microsoft.VisualBasic.FileIO.FileSystem" />.</summary>
      <param name="FileNumber">Obbligatorio. Qualsiasi numero di file valido.</param>
      <param name="Value">Obbligatorio. Nome di variabile valido che contiene i dati scritti su disco.</param>
      <param name="RecordNumber">facoltativo. Numero di record (file in modalità <see langword="Random" />) o numero di byte (file in modalità <see langword="Binary" />) in corrispondenza del quale inizia la scrittura.</param>
      <exception cref="T:System.ArgumentException">
        <paramref name="RecordNumber" /> &lt; 1 e diverso da -1.</exception>
      <exception cref="T:System.IO.IOException">La modalità File non è valida.</exception>
    </member>
    <member name="M:Microsoft.VisualBasic.FileSystem.FilePut(System.Int32,System.Double,System.Int64)">
      <summary>Scrive dati da una variabile in un file del disco. La funzionalità <see langword="My" /> offre un livello più elevato di produttività e prestazioni nelle operazioni di I/O dei file rispetto a <see langword="FilePut" />. Per altre informazioni, vedere <see cref="T:Microsoft.VisualBasic.FileIO.FileSystem" />.</summary>
      <param name="FileNumber">Obbligatorio. Qualsiasi numero di file valido.</param>
      <param name="Value">Obbligatorio. Nome di variabile valido che contiene i dati scritti su disco.</param>
      <param name="RecordNumber">facoltativo. Numero di record (file in modalità <see langword="Random" />) o numero di byte (file in modalità <see langword="Binary" />) in corrispondenza del quale inizia la scrittura.</param>
      <exception cref="T:System.ArgumentException">
        <paramref name="RecordNumber" /> &lt; 1 e diverso da -1.</exception>
      <exception cref="T:System.IO.IOException">La modalità File non è valida.</exception>
    </member>
    <member name="M:Microsoft.VisualBasic.FileSystem.FilePut(System.Int32,System.Int16,System.Int64)">
      <summary>Scrive dati da una variabile in un file del disco. La funzionalità <see langword="My" /> offre un livello più elevato di produttività e prestazioni nelle operazioni di I/O dei file rispetto a <see langword="FilePut" />. Per altre informazioni, vedere <see cref="T:Microsoft.VisualBasic.FileIO.FileSystem" />.</summary>
      <param name="FileNumber">Obbligatorio. Qualsiasi numero di file valido.</param>
      <param name="Value">Obbligatorio. Nome di variabile valido che contiene i dati scritti su disco.</param>
      <param name="RecordNumber">facoltativo. Numero di record (file in modalità <see langword="Random" />) o numero di byte (file in modalità <see langword="Binary" />) in corrispondenza del quale inizia la scrittura.</param>
      <exception cref="T:System.ArgumentException">
        <paramref name="RecordNumber" /> &lt; 1 e diverso da -1.</exception>
      <exception cref="T:System.IO.IOException">La modalità File non è valida.</exception>
    </member>
    <member name="M:Microsoft.VisualBasic.FileSystem.FilePut(System.Int32,System.Int32,System.Int64)">
      <summary>Scrive dati da una variabile in un file del disco. La funzionalità <see langword="My" /> offre un livello più elevato di produttività e prestazioni nelle operazioni di I/O dei file rispetto a <see langword="FilePut" />. Per altre informazioni, vedere <see cref="T:Microsoft.VisualBasic.FileIO.FileSystem" />.</summary>
      <param name="FileNumber">Obbligatorio. Qualsiasi numero di file valido.</param>
      <param name="Value">Obbligatorio. Nome di variabile valido che contiene i dati scritti su disco.</param>
      <param name="RecordNumber">facoltativo. Numero di record (file in modalità <see langword="Random" />) o numero di byte (file in modalità <see langword="Binary" />) in corrispondenza del quale inizia la scrittura.</param>
      <exception cref="T:System.ArgumentException">
        <paramref name="RecordNumber" /> &lt; 1 e diverso da -1.</exception>
      <exception cref="T:System.IO.IOException">La modalità File non è valida.</exception>
    </member>
    <member name="M:Microsoft.VisualBasic.FileSystem.FilePut(System.Int32,System.Int64,System.Int64)">
      <summary>Scrive dati da una variabile in un file del disco. La funzionalità <see langword="My" /> offre un livello più elevato di produttività e prestazioni nelle operazioni di I/O dei file rispetto a <see langword="FilePut" />. Per altre informazioni, vedere <see cref="T:Microsoft.VisualBasic.FileIO.FileSystem" />.</summary>
      <param name="FileNumber">Obbligatorio. Qualsiasi numero di file valido.</param>
      <param name="Value">Obbligatorio. Nome di variabile valido che contiene i dati scritti su disco.</param>
      <param name="RecordNumber">facoltativo. Numero di record (file in modalità <see langword="Random" />) o numero di byte (file in modalità <see langword="Binary" />) in corrispondenza del quale inizia la scrittura.</param>
      <exception cref="T:System.ArgumentException">
        <paramref name="RecordNumber" /> &lt; 1 e diverso da -1.</exception>
      <exception cref="T:System.IO.IOException">La modalità File non è valida.</exception>
    </member>
    <member name="M:Microsoft.VisualBasic.FileSystem.FilePut(System.Int32,System.Single,System.Int64)">
      <summary>Scrive dati da una variabile in un file del disco. La funzionalità <see langword="My" /> offre un livello più elevato di produttività e prestazioni nelle operazioni di I/O dei file rispetto a <see langword="FilePut" />. Per altre informazioni, vedere <see cref="T:Microsoft.VisualBasic.FileIO.FileSystem" />.</summary>
      <param name="FileNumber">Obbligatorio. Qualsiasi numero di file valido.</param>
      <param name="Value">Obbligatorio. Nome di variabile valido che contiene i dati scritti su disco.</param>
      <param name="RecordNumber">facoltativo. Numero di record (file in modalità <see langword="Random" />) o numero di byte (file in modalità <see langword="Binary" />) in corrispondenza del quale inizia la scrittura.</param>
      <exception cref="T:System.ArgumentException">
        <paramref name="RecordNumber" /> &lt; 1 e diverso da -1.</exception>
      <exception cref="T:System.IO.IOException">La modalità File non è valida.</exception>
    </member>
    <member name="M:Microsoft.VisualBasic.FileSystem.FilePut(System.Int32,System.String,System.Int64,System.Boolean)">
      <summary>Scrive dati da una variabile in un file del disco. La funzionalità <see langword="My" /> offre un livello più elevato di produttività e prestazioni nelle operazioni di I/O dei file rispetto a <see langword="FilePut" />. Per altre informazioni, vedere <see cref="T:Microsoft.VisualBasic.FileIO.FileSystem" />.</summary>
      <param name="FileNumber">Obbligatorio. Qualsiasi numero di file valido.</param>
      <param name="Value">Obbligatorio. Nome di variabile valido che contiene i dati scritti su disco.</param>
      <param name="RecordNumber">facoltativo. Numero di record (file in modalità <see langword="Random" />) o numero di byte (file in modalità <see langword="Binary" />) in corrispondenza del quale inizia la scrittura.</param>
      <param name="StringIsFixedLength">facoltativo. Si applica solo durante la scrittura di una stringa. Specifica se scrivere un descrittore di lunghezza a due byte per la stringa nel file. Il valore predefinito è <see langword="False" />.</param>
      <exception cref="T:System.ArgumentException">
        <paramref name="RecordNumber" /> &lt; 1 e diverso da -1.</exception>
      <exception cref="T:System.IO.IOException">La modalità File non è valida.</exception>
    </member>
    <member name="M:Microsoft.VisualBasic.FileSystem.FilePut(System.Int32,System.ValueType,System.Int64)">
      <summary>Scrive dati da una variabile in un file del disco. La funzionalità <see langword="My" /> offre un livello più elevato di produttività e prestazioni nelle operazioni di I/O dei file rispetto a <see langword="FilePut" />. Per altre informazioni, vedere <see cref="T:Microsoft.VisualBasic.FileIO.FileSystem" />.</summary>
      <param name="FileNumber">Obbligatorio. Qualsiasi numero di file valido.</param>
      <param name="Value">Obbligatorio. Nome di variabile valido che contiene i dati scritti su disco.</param>
      <param name="RecordNumber">facoltativo. Numero di record (file in modalità <see langword="Random" />) o numero di byte (file in modalità <see langword="Binary" />) in corrispondenza del quale inizia la scrittura.</param>
      <exception cref="T:System.ArgumentException">
        <paramref name="RecordNumber" /> &lt; 1 e diverso da -1.</exception>
      <exception cref="T:System.IO.IOException">La modalità File non è valida.</exception>
    </member>
    <member name="M:Microsoft.VisualBasic.FileSystem.FilePut(System.Object,System.Object,System.Object)">
      <summary>Scrive dati da una variabile in un file del disco. La funzionalità <see langword="My" /> offre un livello più elevato di produttività e prestazioni nelle operazioni di I/O dei file rispetto a <see langword="FilePut" />. Per altre informazioni, vedere <see cref="T:Microsoft.VisualBasic.FileIO.FileSystem" />.</summary>
      <param name="FileNumber">Obbligatorio. Qualsiasi numero di file valido.</param>
      <param name="Value">Obbligatorio. Nome di variabile valido che contiene i dati scritti su disco.</param>
      <param name="RecordNumber">facoltativo. Numero di record (file in modalità <see langword="Random" />) o numero di byte (file in modalità <see langword="Binary" />) in corrispondenza del quale inizia la scrittura.</param>
      <exception cref="T:System.ArgumentException">
        <paramref name="RecordNumber" /> &lt; 1 e diverso da -1.</exception>
      <exception cref="T:System.IO.IOException">La modalità File non è valida.</exception>
    </member>
    <member name="M:Microsoft.VisualBasic.FileSystem.FilePutObject(System.Int32,System.Object,System.Int64)">
      <summary>Scrive dati da una variabile in un file del disco.  La funzionalità <see langword="My" /> offre un livello più elevato di produttività e prestazioni nelle operazioni di I/O dei file rispetto a <see langword="FilePutObject" />. Per altre informazioni, vedere <see cref="T:Microsoft.VisualBasic.FileIO.FileSystem" />.</summary>
      <param name="FileNumber">Obbligatorio. Qualsiasi numero di file valido.</param>
      <param name="Value">Obbligatorio. Nome di variabile valido che contiene i dati scritti su disco.</param>
      <param name="RecordNumber">facoltativo. Numero di record (file in modalità <see langword="Random" />) o numero di byte (file in modalità <see langword="Binary" />) in corrispondenza del quale inizia la scrittura.</param>
    </member>
    <member name="M:Microsoft.VisualBasic.FileSystem.FileWidth(System.Int32,System.Int32)">
      <summary>Assegna lo spessore della linea di output per un file aperto mediante la funzione <see langword="FileOpen" />.</summary>
      <param name="FileNumber">Obbligatorio. Qualsiasi numero di file valido.</param>
      <param name="RecordWidth">Obbligatorio. Espressione numerica compresa nell'intervallo tra 0 e 255 inclusi, che indica quanti caratteri devono comparire in una riga prima che ne venga iniziata una nuova. Se <paramref name="RecordWidth" /> è uguale a 0, non viene impostato alcun limite per la lunghezza delle righe. Il valore predefinito di <paramref name="RecordWidth" /> è 0.</param>
      <exception cref="T:System.IO.IOException">La modalità File non è valida.</exception>
    </member>
    <member name="M:Microsoft.VisualBasic.FileSystem.FreeFile">
      <summary>Restituisce un valore <see langword="Integer" /> che rappresenta il successivo numero di file che può essere utilizzato dalla funzione <see langword="FileOpen" />.</summary>
      <exception cref="T:System.IO.IOException">Più di 255 file sono in uso.</exception>
      <returns>Valore Integer che rappresenta il successivo numero di file che può essere usato dalla funzione <see langword="FileOpen" />.</returns>
    </member>
    <member name="M:Microsoft.VisualBasic.FileSystem.GetAttr(System.String)">
      <summary>Restituisce un valore <see langword="FileAttribute" /> che rappresenta gli attributi di un file, di una directory o di una cartella. La funzionalità <see langword="My" /> offre un livello più elevato di produttività e prestazioni nelle operazioni di I/O dei file rispetto a <see langword="FileAttribute" />. Per altre informazioni, vedere <see cref="T:Microsoft.VisualBasic.FileIO.FileSystem" />.</summary>
      <param name="PathName">Obbligatorio. Espressione stringa che specifica un nome di file, directory o cartella. L'oggetto <paramref name="PathName" /> può includere la directory o la cartella e l'unità.</param>
      <exception cref="T:System.IO.IOException">
        <paramref name="Pathname" /> non è valido o contiene caratteri jolly.</exception>
      <exception cref="T:System.IO.FileNotFoundException">Il file di destinazione non esiste.</exception>
      <returns>Combinazione bit per bit dei valori dell'enumerazione.</returns>
    </member>
    <member name="M:Microsoft.VisualBasic.FileSystem.Input(System.Int32,System.Boolean@)">
      <summary>Legge i dati da un file sequenziale aperto e li assegna a variabili.</summary>
      <param name="FileNumber">Obbligatorio. Qualsiasi numero di file valido.</param>
      <param name="Value">Obbligatorio. La variabile cui sono assegnati i valori letti dal file non può essere una matrice o una variabile oggetto.</param>
      <exception cref="T:System.IO.IOException">La modalità File non è valida.</exception>
    </member>
    <member name="M:Microsoft.VisualBasic.FileSystem.Input(System.Int32,System.Byte@)">
      <summary>Legge i dati da un file sequenziale aperto e li assegna a variabili.</summary>
      <param name="FileNumber">Obbligatorio. Qualsiasi numero di file valido.</param>
      <param name="Value">Obbligatorio. La variabile cui sono assegnati i valori letti dal file non può essere una matrice o una variabile oggetto.</param>
      <exception cref="T:System.IO.IOException">La modalità File non è valida.</exception>
    </member>
    <member name="M:Microsoft.VisualBasic.FileSystem.Input(System.Int32,System.Char@)">
      <summary>Legge i dati da un file sequenziale aperto e li assegna a variabili.</summary>
      <param name="FileNumber">Obbligatorio. Qualsiasi numero di file valido.</param>
      <param name="Value">Obbligatorio. La variabile cui sono assegnati i valori letti dal file non può essere una matrice o una variabile oggetto.</param>
      <exception cref="T:System.IO.IOException">La modalità File non è valida.</exception>
    </member>
    <member name="M:Microsoft.VisualBasic.FileSystem.Input(System.Int32,System.DateTime@)">
      <summary>Legge i dati da un file sequenziale aperto e li assegna a variabili.</summary>
      <param name="FileNumber">Obbligatorio. Qualsiasi numero di file valido.</param>
      <param name="Value">Obbligatorio. La variabile cui sono assegnati i valori letti dal file non può essere una matrice o una variabile oggetto.</param>
      <exception cref="T:System.IO.IOException">La modalità File non è valida.</exception>
    </member>
    <member name="M:Microsoft.VisualBasic.FileSystem.Input(System.Int32,System.Decimal@)">
      <summary>Legge i dati da un file sequenziale aperto e li assegna a variabili.</summary>
      <param name="FileNumber">Obbligatorio. Qualsiasi numero di file valido.</param>
      <param name="Value">Obbligatorio. La variabile cui sono assegnati i valori letti dal file non può essere una matrice o una variabile oggetto.</param>
      <exception cref="T:System.IO.IOException">La modalità File non è valida.</exception>
    </member>
    <member name="M:Microsoft.VisualBasic.FileSystem.Input(System.Int32,System.Double@)">
      <summary>Legge i dati da un file sequenziale aperto e li assegna a variabili.</summary>
      <param name="FileNumber">Obbligatorio. Qualsiasi numero di file valido.</param>
      <param name="Value">Obbligatorio. La variabile cui sono assegnati i valori letti dal file non può essere una matrice o una variabile oggetto.</param>
      <exception cref="T:System.IO.IOException">La modalità File non è valida.</exception>
    </member>
    <member name="M:Microsoft.VisualBasic.FileSystem.Input(System.Int32,System.Int16@)">
      <summary>Legge i dati da un file sequenziale aperto e li assegna a variabili.</summary>
      <param name="FileNumber">Obbligatorio. Qualsiasi numero di file valido.</param>
      <param name="Value">Obbligatorio. La variabile cui sono assegnati i valori letti dal file non può essere una matrice o una variabile oggetto.</param>
      <exception cref="T:System.IO.IOException">La modalità File non è valida.</exception>
    </member>
    <member name="M:Microsoft.VisualBasic.FileSystem.Input(System.Int32,System.Int32@)">
      <summary>Legge i dati da un file sequenziale aperto e li assegna a variabili.</summary>
      <param name="FileNumber">Obbligatorio. Qualsiasi numero di file valido.</param>
      <param name="Value">Obbligatorio. La variabile cui sono assegnati i valori letti dal file non può essere una matrice o una variabile oggetto.</param>
      <exception cref="T:System.IO.IOException">La modalità File non è valida.</exception>
    </member>
    <member name="M:Microsoft.VisualBasic.FileSystem.Input(System.Int32,System.Int64@)">
      <summary>Legge i dati da un file sequenziale aperto e li assegna a variabili.</summary>
      <param name="FileNumber">Obbligatorio. Qualsiasi numero di file valido.</param>
      <param name="Value">Obbligatorio. La variabile cui sono assegnati i valori letti dal file non può essere una matrice o una variabile oggetto.</param>
      <exception cref="T:System.IO.IOException">La modalità File non è valida.</exception>
    </member>
    <member name="M:Microsoft.VisualBasic.FileSystem.Input(System.Int32,System.Object@)">
      <summary>Legge i dati da un file sequenziale aperto e li assegna a variabili.</summary>
      <param name="FileNumber">Obbligatorio. Qualsiasi numero di file valido.</param>
      <param name="Value">Obbligatorio. La variabile cui sono assegnati i valori letti dal file non può essere una matrice o una variabile oggetto.</param>
      <exception cref="T:System.IO.IOException">La modalità File non è valida.</exception>
    </member>
    <member name="M:Microsoft.VisualBasic.FileSystem.Input(System.Int32,System.Single@)">
      <summary>Legge i dati da un file sequenziale aperto e li assegna a variabili.</summary>
      <param name="FileNumber">Obbligatorio. Qualsiasi numero di file valido.</param>
      <param name="Value">Obbligatorio. La variabile cui sono assegnati i valori letti dal file non può essere una matrice o una variabile oggetto.</param>
      <exception cref="T:System.IO.IOException">La modalità File non è valida.</exception>
    </member>
    <member name="M:Microsoft.VisualBasic.FileSystem.Input(System.Int32,System.String@)">
      <summary>Legge i dati da un file sequenziale aperto e li assegna a variabili.</summary>
      <param name="FileNumber">Obbligatorio. Qualsiasi numero di file valido.</param>
      <param name="Value">Obbligatorio. La variabile cui sono assegnati i valori letti dal file non può essere una matrice o una variabile oggetto.</param>
      <exception cref="T:System.IO.IOException">La modalità File non è valida.</exception>
    </member>
    <member name="M:Microsoft.VisualBasic.FileSystem.InputString(System.Int32,System.Int32)">
      <summary>Restituisce il valore <see langword="String" /> che contiene i caratteri di un file aperto in modalità <see langword="Input" /> o <see langword="Binary" />. La funzionalità <see langword="My" /> offre un livello più elevato di produttività e prestazioni nelle operazioni di I/O dei file rispetto a <see langword="InputString" />. Per altre informazioni, vedere <see cref="T:Microsoft.VisualBasic.FileIO.FileSystem" />.</summary>
      <param name="FileNumber">Obbligatorio. Qualsiasi numero di file valido.</param>
      <param name="CharCount">Obbligatorio. Qualsiasi espressione numerica valida che specifica il numero di caratteri da leggere.</param>
      <exception cref="T:System.IO.IOException">
        <paramref name="FileNumber" /> non esiste.</exception>
      <exception cref="T:System.ArgumentException">
        <paramref name="CharCount" /> &lt; 0 o &gt; 214.</exception>
      <returns>Stringa che contiene i caratteri di un file aperto in modalità <see langword="Input" /> o <see langword="Binary" />. La funzionalità <see langword="My" /> offre un livello più elevato di produttività e prestazioni nelle operazioni di I/O dei file rispetto a <see langword="InputString" />.</returns>
    </member>
    <member name="M:Microsoft.VisualBasic.FileSystem.Kill(System.String)">
      <summary>Elimina i file da un disco. La funzionalità <see langword="My" /> offre un livello più elevato di produttività e prestazioni nelle operazioni di I/O dei file rispetto a <see langword="Kill" />. Per altre informazioni, vedere <see cref="T:Microsoft.VisualBasic.FileIO.FileSystem" />.</summary>
      <param name="PathName">Obbligatorio. Espressione stringa che specifica uno o più nomi file da eliminare. L'oggetto <paramref name="PathName" /> può includere la directory o la cartella e l'unità.</param>
      <exception cref="T:System.IO.IOException">File di destinazione aperti.</exception>
      <exception cref="T:System.IO.FileNotFoundException">File di destinazione non trovati.</exception>
      <exception cref="T:System.Security.SecurityException">Autorizzazione negata.</exception>
    </member>
    <member name="M:Microsoft.VisualBasic.FileSystem.LineInput(System.Int32)">
      <summary>Legge una sola riga da un file sequenziale aperto e la assegna a una variabile <see langword="String" />.</summary>
      <param name="FileNumber">Obbligatorio. Qualsiasi numero di file valido.</param>
      <exception cref="T:System.IO.EndOfStreamException">Raggiunta la fine del file.</exception>
      <exception cref="T:System.IO.IOException">
        <paramref name="FileNumber" /> non esiste.</exception>
      <returns>Legge una sola riga da un file sequenziale aperto e la assegna a una variabile <see langword="String" />.</returns>
    </member>
    <member name="M:Microsoft.VisualBasic.FileSystem.Loc(System.Int32)">
      <summary>Restituisce un valore che specifica la posizione corrente di lettura/scrittura in un file aperto.</summary>
      <param name="FileNumber">Obbligatorio. Qualsiasi numero di file <see langword="Integer" /> valido.</param>
      <exception cref="T:System.IO.IOException">La modalità File non è valida.</exception>
      <returns>Posizione di lettura/scrittura corrente in un file aperto.</returns>
    </member>
    <member name="M:Microsoft.VisualBasic.FileSystem.Lock(System.Int32)">
      <summary>Controlla l'accesso da parte di altri processi a una parte o a tutto il file aperto mediante la funzione <see langword="Open" />. Nelle operazioni di I/O su file, la funzionalità <see langword="My" /> garantisce produttività e prestazioni migliori rispetto a <see langword="Lock" /> e <see langword="Unlock" />. Per altre informazioni, vedere <see cref="T:Microsoft.VisualBasic.FileIO.FileSystem" />.</summary>
      <param name="FileNumber">Obbligatorio. Qualsiasi numero di file valido.</param>
      <exception cref="T:System.IO.IOException">La modalità File non è valida.</exception>
    </member>
    <member name="M:Microsoft.VisualBasic.FileSystem.Lock(System.Int32,System.Int64)">
      <summary>Controlla l'accesso da parte di altri processi a una parte o a tutto il file aperto mediante la funzione <see langword="Open" />. Nelle operazioni di I/O su file, la funzionalità <see langword="My" /> garantisce produttività e prestazioni migliori rispetto a <see langword="Lock" /> e <see langword="Unlock" />. Per altre informazioni, vedere <see cref="T:Microsoft.VisualBasic.FileIO.FileSystem" />.</summary>
      <param name="FileNumber">Obbligatorio. Qualsiasi numero di file valido.</param>
      <param name="Record">facoltativo. Numero del record o byte da bloccare o sbloccare.</param>
      <exception cref="T:System.IO.IOException">La modalità File non è valida.</exception>
    </member>
    <member name="M:Microsoft.VisualBasic.FileSystem.Lock(System.Int32,System.Int64,System.Int64)">
      <summary>Controlla l'accesso da parte di altri processi a una parte o a tutto il file aperto mediante la funzione <see langword="Open" />. Nelle operazioni di I/O su file, la funzionalità <see langword="My" /> garantisce produttività e prestazioni migliori rispetto a <see langword="Lock" /> e <see langword="Unlock" />. Per altre informazioni, vedere <see cref="T:Microsoft.VisualBasic.FileIO.FileSystem" />.</summary>
      <param name="FileNumber">Obbligatorio. Qualsiasi numero di file valido.</param>
      <param name="FromRecord">facoltativo. Numero del primo record o byte da bloccare o sbloccare.</param>
      <param name="ToRecord">facoltativo. Numero dell'ultimo record o byte da bloccare o sbloccare.</param>
      <exception cref="T:System.IO.IOException">La modalità File non è valida.</exception>
    </member>
    <member name="M:Microsoft.VisualBasic.FileSystem.LOF(System.Int32)">
      <summary>Restituisce le dimensioni, in byte, di un file aperto mediante la funzione <see langword="FileOpen" />. La funzionalità <see langword="My" /> offre un livello più elevato di produttività e prestazioni nelle operazioni di I/O dei file rispetto a <see langword="LOF" />. Per altre informazioni, vedere <see cref="T:Microsoft.VisualBasic.FileIO.FileSystem" />.</summary>
      <param name="FileNumber">Obbligatorio. Valore Integer che contiene un numero di file valido.</param>
      <exception cref="T:System.IO.IOException">La modalità File non è valida.</exception>
      <returns>Dimensioni, in byte, di un file aperto mediante la funzione <see langword="FileOpen" />. La funzionalità <see langword="My" /> offre un livello più elevato di produttività e prestazioni nelle operazioni di I/O dei file rispetto a <see langword="LOF" />.</returns>
    </member>
    <member name="M:Microsoft.VisualBasic.FileSystem.MkDir(System.String)">
      <summary>Crea una nuova directory. La funzionalità <see langword="My" /> offre un livello più elevato di produttività e prestazioni nelle operazioni di I/O dei file rispetto a <see langword="MkDir" />. Per altre informazioni, vedere <see cref="M:Microsoft.VisualBasic.FileIO.FileSystem.CreateDirectory(System.String)" />.</summary>
      <param name="Path">Obbligatorio. Espressione stringa che identifica la directory da creare. Il parametro <paramref name="Path" /> può includere l'unità. Se non viene specificata alcuna unità, <see langword="MkDir" /> crea la nuova directory nell'unità corrente.</param>
      <exception cref="T:System.ArgumentException">
        <paramref name="Path" /> non è specificato o è vuoto.</exception>
      <exception cref="T:System.Security.SecurityException">Autorizzazione negata.</exception>
      <exception cref="T:System.IO.IOException">Directory già esistente.</exception>
    </member>
    <member name="M:Microsoft.VisualBasic.FileSystem.Print(System.Int32,System.Object[])">
      <summary>Scrive i dati formattati per la visualizzazione in un file sequenziale.</summary>
      <param name="FileNumber">Obbligatorio. Qualsiasi numero di file valido.</param>
      <param name="Output">facoltativo. Zero o più espressioni con valori delimitati da virgole da scrivere in un file.  
  
Le impostazioni dell'argomento <paramref name="Output" /> sono le seguenti: 
 <see langword="T:System.IO.IOException" />: la modalità File non è valida.  
  
 <see langword="T:System.IO.IOException" />: <paramref name="FileNumber" /> non esiste.</param>
    </member>
    <member name="M:Microsoft.VisualBasic.FileSystem.PrintLine(System.Int32,System.Object[])">
      <summary>Scrive i dati formattati per la visualizzazione in un file sequenziale.</summary>
      <param name="FileNumber">Obbligatorio. Qualsiasi numero di file valido.</param>
      <param name="Output">facoltativo. Zero o più espressioni con valori delimitati da virgole da scrivere in un file.  
  
Le impostazioni dell'argomento <paramref name="Output" /> sono le seguenti: 
 <see langword="T:System.IO.IOException" />: la modalità File non è valida.  
  
 <see langword="T:System.IO.IOException" />: <paramref name="FileNumber" /> non esiste.</param>
    </member>
    <member name="M:Microsoft.VisualBasic.FileSystem.Rename(System.String,System.String)">
      <summary>Rinomina un file o una directory su disco. La funzionalità <see langword="My" /> offre un livello più elevato di produttività e prestazioni nelle operazioni di I/O dei file rispetto a <see langword="Rename" />. Per altre informazioni, vedere <see cref="T:Microsoft.VisualBasic.FileIO.FileSystem" />.</summary>
      <param name="OldPath">Obbligatorio. Espressione stringa che specifica il nome file esistente e il relativo percorso. L'oggetto <paramref name="OldPath" /> può includere la directory e l'unità del file.</param>
      <param name="NewPath">Obbligatorio. Espressione stringa che specifica il nuovo nome file e il relativo percorso. L'oggetto <paramref name="NewPath" /> può includere la directory e l'unità del percorso di destinazione. Il nome file specificato da <paramref name="NewPath" /> non deve esistere.</param>
      <exception cref="T:System.ArgumentException">Il percorso non è valido.</exception>
      <exception cref="T:System.IO.FileNotFoundException">Il file <paramref name="OldPath" /> non esiste.</exception>
      <exception cref="T:System.IO.IOException">Impossibile rinominare con il nome di un'altro dispositivo.</exception>
    </member>
    <member name="M:Microsoft.VisualBasic.FileSystem.Reset">
      <summary>Chiude tutti i file su disco aperti mediante la funzione <see langword="FileOpen" />. La funzionalità <see langword="My" /> offre un livello più elevato di produttività e prestazioni nelle operazioni di I/O dei file rispetto a <see langword="Reset" />. Per altre informazioni, vedere <see cref="T:Microsoft.VisualBasic.FileIO.FileSystem" />.</summary>
    </member>
    <member name="M:Microsoft.VisualBasic.FileSystem.RmDir(System.String)">
      <summary>Rimuove una directory esistente. La funzionalità <see langword="My" /> offre un livello più elevato di produttività e prestazioni nelle operazioni di I/O dei file rispetto a <see langword="RmDir" />. Per altre informazioni, vedere <see cref="Overload:Microsoft.VisualBasic.FileIO.FileSystem.DeleteDirectory" />.</summary>
      <param name="Path">Obbligatorio. Espressione stringa che identifica la directory o la cartella da rimuovere. Il parametro <paramref name="Path" /> può includere l'unità. Se non viene specificata alcuna unità, <see langword="RmDir" /> rimuove la directory nell'unità corrente.</param>
      <exception cref="T:System.ArgumentException">
        <paramref name="Path" /> non è specificato o è vuoto.</exception>
      <exception cref="T:System.IO.IOException">La directory di destinazione contiene file.</exception>
      <exception cref="T:System.IO.FileNotFoundException">La directory non esiste.</exception>
    </member>
    <member name="M:Microsoft.VisualBasic.FileSystem.Seek(System.Int32)">
      <summary>Restituisce <see langword="Long" />, che specifica la posizione corrente di lettura/scrittura in un file aperto mediante la funzione <see langword="FileOpen" />, o imposta la posizione per la successiva operazione di lettura/scrittura in un file aperto mediante la funzione <see langword="FileOpen" />. La funzionalità <see langword="My" /> offre un livello più elevato di produttività e prestazioni nelle operazioni di I/O dei file rispetto a <see langword="Seek" />. Per altre informazioni, vedere <see cref="T:Microsoft.VisualBasic.FileIO.FileSystem" />.</summary>
      <param name="FileNumber">Obbligatorio. <see langword="Integer" /> che contiene un numero di file valido.</param>
      <exception cref="T:System.IO.IOException">La modalità File non è valida.</exception>
      <returns>Valore <see langword="Long" /> che specifica la posizione corrente di lettura/scrittura in un file aperto mediante la funzione <see langword="FileOpen" />, o imposta la posizione per la successiva operazione di lettura/scrittura in un file aperto mediante la funzione <see langword="FileOpen" />.</returns>
    </member>
    <member name="M:Microsoft.VisualBasic.FileSystem.Seek(System.Int32,System.Int64)">
      <summary>Restituisce <see langword="Long" />, che specifica la posizione corrente di lettura/scrittura in un file aperto mediante la funzione <see langword="FileOpen" />, o imposta la posizione per la successiva operazione di lettura/scrittura in un file aperto mediante la funzione <see langword="FileOpen" />. La funzionalità <see langword="My" /> offre un livello più elevato di produttività e prestazioni nelle operazioni di I/O dei file rispetto a <see langword="Seek" />. Per altre informazioni, vedere <see cref="T:Microsoft.VisualBasic.FileIO.FileSystem" />.</summary>
      <param name="FileNumber">Obbligatorio. <see langword="Integer" /> che contiene un numero di file valido.</param>
      <param name="Position">Obbligatorio. Numero compreso nell'intervallo da 1 a 2.147.483.647 inclusi, che indica dove deve aver luogo la successiva operazione di lettura/scrittura.</param>
      <exception cref="T:System.IO.IOException">La modalità File non è valida.</exception>
    </member>
    <member name="M:Microsoft.VisualBasic.FileSystem.SetAttr(System.String,Microsoft.VisualBasic.FileAttribute)">
      <summary>Imposta le informazioni degli attributi per un file. La funzionalità <see langword="My" /> offre un livello più elevato di produttività e prestazioni nelle operazioni di I/O dei file rispetto a <see langword="SetAttr" />. Per altre informazioni, vedere <see cref="T:Microsoft.VisualBasic.FileIO.FileSystem" />.</summary>
      <param name="PathName">Obbligatorio. Espressione stringa che specifica un nome file. L'oggetto <paramref name="PathName" /> può includere la directory o la cartella e l'unità.</param>
      <param name="Attributes">Obbligatorio. Costante o espressione numerica la cui somma specifica attributi di file.</param>
      <exception cref="T:System.ArgumentException">Tipo di <paramref name="Attribute" /> non valido.</exception>
    </member>
    <member name="M:Microsoft.VisualBasic.FileSystem.SPC(System.Int16)">
      <summary>Utilizzato con le funzioni <see langword="Print" /> o <see langword="PrintLine" /> per posizionare l'output.</summary>
      <param name="Count">Obbligatorio. Numero di spazi da inserire prima di visualizzare o stampare la successiva espressione di un elenco.</param>
      <returns>Utilizzato con le funzioni <see langword="Print" /> o <see langword="PrintLine" /> per posizionare l'output.</returns>
    </member>
    <member name="M:Microsoft.VisualBasic.FileSystem.TAB">
      <summary>Viene utilizzata con la funzione <see langword="Print" /> o <see langword="PrintLine" /> per specificare la posizione dell'output.</summary>
      <returns>Viene utilizzata con la funzione <see langword="Print" /> o <see langword="PrintLine" /> per specificare la posizione dell'output.</returns>
    </member>
    <member name="M:Microsoft.VisualBasic.FileSystem.TAB(System.Int16)">
      <summary>Viene utilizzata con la funzione <see langword="Print" /> o <see langword="PrintLine" /> per specificare la posizione dell'output.</summary>
      <param name="Column">facoltativo. Numero della colonna a cui passare prima di visualizzare o stampare la successiva espressione di un elenco. In caso di omissione, <see langword="TAB" /> sposterà il punto di inserimento all'inizio della successiva area di stampa.</param>
      <returns>Viene utilizzata con la funzione <see langword="Print" /> o <see langword="PrintLine" /> per specificare la posizione dell'output.</returns>
    </member>
    <member name="M:Microsoft.VisualBasic.FileSystem.Unlock(System.Int32)">
      <summary>Controlla l'accesso da parte di altri processi a una parte o a tutto il file aperto mediante la funzione <see langword="Open" />. Nelle operazioni di I/O su file, la funzionalità <see langword="My" /> garantisce produttività e prestazioni migliori rispetto a <see langword="Lock" /> e <see langword="Unlock" />. Per altre informazioni, vedere <see cref="T:Microsoft.VisualBasic.FileIO.FileSystem" />.</summary>
      <param name="FileNumber">Obbligatorio. Qualsiasi numero di file valido.</param>
      <exception cref="T:System.IO.IOException">La modalità File non è valida.</exception>
    </member>
    <member name="M:Microsoft.VisualBasic.FileSystem.Unlock(System.Int32,System.Int64)">
      <summary>Controlla l'accesso da parte di altri processi a una parte o a tutto il file aperto mediante la funzione <see langword="Open" />. Nelle operazioni di I/O su file, la funzionalità <see langword="My" /> garantisce produttività e prestazioni migliori rispetto a <see langword="Lock" /> e <see langword="Unlock" />. Per altre informazioni, vedere <see cref="T:Microsoft.VisualBasic.FileIO.FileSystem" />.</summary>
      <param name="FileNumber">Obbligatorio. Qualsiasi numero di file valido.</param>
      <param name="Record">facoltativo. Numero del record o byte da bloccare o sbloccare</param>
      <exception cref="T:System.IO.IOException">La modalità File non è valida.</exception>
    </member>
    <member name="M:Microsoft.VisualBasic.FileSystem.Unlock(System.Int32,System.Int64,System.Int64)">
      <summary>Controlla l'accesso da parte di altri processi a una parte o a tutto il file aperto mediante la funzione <see langword="Open" />. Nelle operazioni di I/O su file, la funzionalità <see langword="My" /> garantisce produttività e prestazioni migliori rispetto a <see langword="Lock" /> e <see langword="Unlock" />. Per altre informazioni, vedere <see cref="T:Microsoft.VisualBasic.FileIO.FileSystem" />.</summary>
      <param name="FileNumber">Obbligatorio. Qualsiasi numero di file valido.</param>
      <param name="FromRecord">facoltativo. Numero del primo record o byte da bloccare o sbloccare.</param>
      <param name="ToRecord">facoltativo. Numero dell'ultimo record o byte da bloccare o sbloccare.</param>
      <exception cref="T:System.IO.IOException">La modalità File non è valida.</exception>
    </member>
    <member name="M:Microsoft.VisualBasic.FileSystem.Write(System.Int32,System.Object[])">
      <summary>Scrive dati in un file sequenziale. I dati scritti con <see langword="Write" /> vengono in genere letti da un file usando <see langword="Input" />.</summary>
      <param name="FileNumber">Obbligatorio. Espressione <see langword="Integer" /> contenente un numero di file valido.</param>
      <param name="Output">facoltativo. Una o più espressioni con valori delimitati da virgole da scrivere in un file.</param>
      <exception cref="T:System.IO.IOException">La modalità File non è valida.</exception>
    </member>
    <member name="M:Microsoft.VisualBasic.FileSystem.WriteLine(System.Int32,System.Object[])">
      <summary>Scrive dati in un file sequenziale. I dati scritti con <see langword="Write" /> vengono in genere letti da un file usando <see langword="Input" />.</summary>
      <param name="FileNumber">Obbligatorio. Espressione <see langword="Integer" /> contenente un numero di file valido.</param>
      <param name="Output">facoltativo. Una o più espressioni con valori delimitati da virgole da scrivere in un file.</param>
    </member>
    <member name="T:Microsoft.VisualBasic.Financial">
      <summary>Il modulo <see langword="Financial" /> contiene procedure che consentono di eseguire operazioni finanziarie.</summary>
    </member>
    <member name="M:Microsoft.VisualBasic.Financial.DDB(System.Double,System.Double,System.Double,System.Double,System.Double)">
      <summary>Restituisce un valore che specifica l'ammortamento di un bene per un periodo di tempo specifico usando il metodo a doppie quote proporzionali o un altro metodo specificato dall'utente.</summary>
      <param name="Cost">Obbligatorio. Costo iniziale del bene.</param>
      <param name="Salvage">Obbligatorio. Valore del bene alla fine della sua vita utile.</param>
      <param name="Life">Obbligatorio. Durata della vita utile del bene.</param>
      <param name="Period">Obbligatorio. Periodo per cui viene calcolato l'ammortamento del bene.</param>
      <param name="Factor">facoltativo. Tasso di deprezzamento del valore residuo. Se omesso, viene utilizzato 2 (metodo a doppie quote proporzionali).</param>
      <exception cref="T:System.ArgumentException">
        <paramref name="Factor" />&lt;= 0, <paramref name="Salvage" /> &lt; 0, <paramref name="Period" /> &lt; = 0 o <paramref name="Period" /> &gt; <paramref name="Life" /> .</exception>
      <returns>Ammortamento di un bene per un periodo di tempo specifico usando il metodo a doppie quote proporzionali o un altro metodo specificato dall'utente.</returns>
    </member>
    <member name="M:Microsoft.VisualBasic.Financial.FV(System.Double,System.Double,System.Double,System.Double,Microsoft.VisualBasic.DueDate)">
      <summary>Restituisce un valore che specifica il valore futuro di una annualità in base a pagamenti periodici fissi e a un tasso di interesse fisso.</summary>
      <param name="Rate">Obbligatorio. Tasso di interesse per periodo. Ad esempio, nel caso di un prestito per l'acquisto di un'auto con tasso di interesse annuo del 10% da restituire con pagamenti mensili, il tasso per periodo sarà pari a 0,1/12 ovvero 0,0083.</param>
      <param name="NPer">Obbligatorio. Numero totale di periodi di pagamento nell'annualità. Se, ad esempio, si effettuano pagamenti mensili per restituire un prestito quadriennale, i periodi di pagamento totali saranno 48, cioè 4 x 12.</param>
      <param name="Pmt">Obbligatorio. Pagamento da effettuare per ogni periodo. In genere i pagamenti contengono una quota di capitale e una quota di interessi che non cambiano nel corso dell'annualità.</param>
      <param name="PV">facoltativo. Valore attuale di una serie di pagamenti futuri. Ad esempio, quando si richiede un prestito per l'acquisto di un'automobile, l'importo del prestito corrisponde al valore attuale per chi concede il prestito dei pagamenti mensili che verranno effettuati. Se omesso, viene utilizzato il valore 0.</param>
      <param name="Due">facoltativo. Oggetto di tipo <see cref="T:Microsoft.VisualBasic.DueDate" /> che specifica la scadenza dei pagamenti. Questo argomento deve essere <see langword="DueDate.EndOfPeriod" /> se i pagamenti sono dovuti alla fine del periodo di pagamento o <see langword="DueDate.BegOfPeriod" /> se i pagamenti sono dovuti all'inizio del periodo di pagamento. Se omesso, si presuppone <see langword="DueDate.EndOfPeriod" />.</param>
      <returns>Valore futuro di una annualità in base a pagamenti periodici fissi e a un tasso di interesse fisso.</returns>
    </member>
    <member name="M:Microsoft.VisualBasic.Financial.IPmt(System.Double,System.Double,System.Double,System.Double,System.Double,Microsoft.VisualBasic.DueDate)">
      <summary>Restituisce un valore che specifica il pagamento di interessi per un dato periodo di una annualità in base a pagamenti periodici fissi e a un tasso di interesse fisso.</summary>
      <param name="Rate">Obbligatorio. Tasso di interesse per periodo. Ad esempio, nel caso di un prestito per l'acquisto di un'auto con tasso di interesse annuo del 10% da restituire con pagamenti mensili, il tasso per periodo sarà pari a 0,1/12 ovvero 0,0083.</param>
      <param name="Per">Obbligatorio. Periodo di pagamento nell'intervallo compreso tra 1 e <paramref name="NPer" />.</param>
      <param name="NPer">Obbligatorio. Numero totale di periodi di pagamento nell'annualità. Se, ad esempio, si effettuano pagamenti mensili per restituire un prestito quadriennale, i periodi di pagamento totali saranno 48, cioè 4 x 12.</param>
      <param name="PV">Obbligatorio. Valore attuale di una serie di pagamenti o entrate futuri. Ad esempio, quando si richiede un prestito per l'acquisto di un'automobile, l'importo del prestito corrisponde al valore attuale per chi concede il prestito dei pagamenti mensili che verranno effettuati.</param>
      <param name="FV">facoltativo. Valore futuro o il saldo cassa desiderato dopo il pagamento finale. Ad esempio, il valore futuro di un prestito è $0, perché questo è il valore dopo il pagamento finale. Se, invece, si desidera risparmiare $50.000 nell'arco di 18 anni, il valore futuro è pari a $50.000. Se omesso, viene utilizzato il valore 0.</param>
      <param name="Due">facoltativo. Oggetto di tipo <see cref="T:Microsoft.VisualBasic.DueDate" /> che specifica la scadenza dei pagamenti. Questo argomento deve essere <c>DueDate.EndOfPeriod</c> se i pagamenti sono dovuti alla fine del periodo di pagamento o <c>DueDate.BegOfPeriod</c> se i pagamenti sono dovuti all'inizio del periodo di pagamento. Se omesso, viene usato <c>DueDate.EndOfPeriod</c>.</param>
      <exception cref="T:System.ArgumentException">
        <paramref name="Per" />&lt;= 0 o <paramref name="Per" /> &gt;<paramref name="NPer" /></exception>
      <returns>Pagamento di interessi per un dato periodo di una annualità in base a pagamenti periodici fissi e a un tasso di interesse fisso.</returns>
    </member>
    <member name="M:Microsoft.VisualBasic.Financial.IRR(System.Double[]@,System.Double)">
      <summary>Restituisce un valore che specifica il tasso di rendimento interno per una serie di flussi di cassa periodici (uscite ed entrate).</summary>
      <param name="ValueArray">Obbligatorio. Matrice di valori <see cref="T:System.Double" /> che specificano valori del flusso di cassa. La matrice deve contenere almeno un valore negativo (uscita) e un valore positivo (entrata).</param>
      <param name="Guess">facoltativo. Oggetto che specifica il valore che si prevede verrà restituito da <see langword="IRR" />. Se omesso, <paramref name="Guess" /> è 0,1 (10 percento).</param>
      <exception cref="T:System.ArgumentException">I valori dell'argomento di matrice non sono validi o <paramref name="Guess" /> &lt; =-1.</exception>
      <returns>Restituisce un valore che specifica il tasso di rendimento interno per una serie di flussi di cassa periodici (uscite ed entrate).</returns>
    </member>
    <member name="M:Microsoft.VisualBasic.Financial.MIRR(System.Double[]@,System.Double,System.Double)">
      <summary>Restituisce un valore che specifica il tasso di rendimento interno modificato per una serie di flussi di cassa periodici (uscite ed entrate).</summary>
      <param name="ValueArray">Obbligatorio. Matrice di valori <see cref="T:System.Double" /> che specificano valori di flusso di cassa. La matrice deve contenere almeno un valore negativo (uscita) e un valore positivo (entrata).</param>
      <param name="FinanceRate">Obbligatorio. Tasso di interesse dovuto come costo del finanziamento.</param>
      <param name="ReinvestRate">Obbligatorio. Tasso di interesse ricevuto per i proventi del reinvestimento.</param>
      <exception cref="T:System.ArgumentException">Il numero di dimensioni di <paramref name="ValueArray" /> non è uguale a 1, <paramref name="FinanceRate" /> = -1 oppure <paramref name="ReinvestRate" /> = -1</exception>
      <exception cref="T:System.DivideByZeroException">È stata eseguita una divisione per zero.</exception>
      <returns>Tasso di rendimento interno modificato per una serie di flussi di cassa periodici (uscite ed entrate).</returns>
    </member>
    <member name="M:Microsoft.VisualBasic.Financial.NPer(System.Double,System.Double,System.Double,System.Double,Microsoft.VisualBasic.DueDate)">
      <summary>Restituisce un valore che specifica il numero di periodi per un'annualità in base a pagamenti periodici fissi e a un tasso di interesse fisso.</summary>
      <param name="Rate">Obbligatorio. Tasso di interesse per periodo. Ad esempio, nel caso di un prestito per l'acquisto di un'auto con tasso di interesse annuo del 10% da restituire con pagamenti mensili, il tasso per periodo sarà pari a 0,1/12 ovvero 0,0083.</param>
      <param name="Pmt">Obbligatorio. Pagamento da effettuare per ogni periodo. In genere i pagamenti contengono una quota di capitale e una quota di interessi che non cambiano nel corso dell'annualità.</param>
      <param name="PV">Obbligatorio. Valore attuale di una serie di pagamenti o entrate futuri. Ad esempio, quando si richiede un prestito per l'acquisto di un'automobile, l'importo del prestito corrisponde al valore attuale per chi concede il prestito dei pagamenti mensili che verranno effettuati.</param>
      <param name="FV">facoltativo. Valore futuro o il saldo cassa desiderato dopo il pagamento finale. Ad esempio, il valore futuro di un prestito è $0, perché questo è il valore dopo il pagamento finale. Se, invece, si desidera risparmiare $50.000 nell'arco di 18 anni, il valore futuro è pari a $50.000. Se omesso, viene utilizzato il valore 0.</param>
      <param name="Due">facoltativo. Oggetto di tipo <see cref="T:Microsoft.VisualBasic.DueDate" /> che specifica la scadenza dei pagamenti. Questo argomento deve essere <c>DueDate.EndOfPeriod</c> se i pagamenti sono dovuti alla fine del periodo di pagamento o <c>DueDate.BegOfPeriod</c> se i pagamenti sono dovuti all'inizio del periodo di pagamento. Se omesso, viene usato <c>DueDate.EndOfPeriod</c>.</param>
      <exception cref="T:System.ArgumentException">
        <paramref name="Rate" /> = 0 e <paramref name="Pmt" /> = 0</exception>
      <returns>Numero di periodi per un'annualità in base a pagamenti periodici fissi e a un tasso di interesse fisso.</returns>
    </member>
    <member name="M:Microsoft.VisualBasic.Financial.NPV(System.Double,System.Double[]@)">
      <summary>Restituisce un valore che specifica il valore attuale netto di un investimento in base a una serie di flussi di cassa periodici (uscite ed entrate) e un tasso di sconto.</summary>
      <param name="Rate">Obbligatorio. Tasso di sconto per la durata del periodo, espresso come numero decimale.</param>
      <param name="ValueArray">Obbligatorio. Matrice di valori <see cref="T:System.Double" /> che specificano valori del flusso di cassa. La matrice deve contenere almeno un valore negativo (uscita) e un valore positivo (entrata).</param>
      <exception cref="T:System.ArgumentException">
        <paramref name="ValueArray" />è <see langword="Nothing" /> , rango di <paramref name="ValueArray" /> &lt; &gt; 1 o <paramref name="Rate" /> =-1</exception>
      <returns>Valore attuale netto di un investimento in base a una serie di flussi di cassa periodici (uscite ed entrate) e un tasso di sconto.</returns>
    </member>
    <member name="M:Microsoft.VisualBasic.Financial.Pmt(System.Double,System.Double,System.Double,System.Double,Microsoft.VisualBasic.DueDate)">
      <summary>Restituisce un valore che specifica il pagamento per una annualità in base a pagamenti periodici fissi e a un tasso di interesse fisso.</summary>
      <param name="Rate">Obbligatorio. Tasso di interesse per periodo. Ad esempio, nel caso di un prestito per l'acquisto di un'auto con tasso di interesse annuo del 10% da restituire con pagamenti mensili, il tasso per periodo sarà pari a 0,1/12 ovvero 0,0083.</param>
      <param name="NPer">Obbligatorio. Numero totale di periodi di pagamento nell'annualità. Se, ad esempio, si effettuano pagamenti mensili per restituire un prestito quadriennale, i periodi di pagamento totali saranno 48, cioè 4 × 12.</param>
      <param name="PV">Obbligatorio. Valore attuale di una serie di pagamenti da effettuare in futuro. Ad esempio, quando si richiede un prestito per l'acquisto di un'automobile, l'importo del prestito corrisponde al valore attuale per chi concede il prestito dei pagamenti mensili che verranno effettuati.</param>
      <param name="FV">facoltativo. Valore futuro o il saldo cassa desiderato dopo il pagamento finale. Ad esempio, il valore futuro di un prestito è $0, perché questo è il valore dopo il pagamento finale. Se, invece, si desidera risparmiare $50.000 nell'arco di 18 anni, il valore futuro è pari a $50.000. Se omesso, viene utilizzato il valore 0.</param>
      <param name="Due">facoltativo. Oggetto di tipo <see cref="T:Microsoft.VisualBasic.DueDate" /> che specifica la scadenza dei pagamenti. Questo argomento deve essere <c>DueDate.EndOfPeriod</c> se i pagamenti sono dovuti alla fine del periodo di pagamento o <c>DueDate.BegOfPeriod</c> se i pagamenti sono dovuti all'inizio del periodo di pagamento. Se omesso, viene usato <c>DueDate.EndOfPeriod</c>.</param>
      <exception cref="T:System.ArgumentException">
        <paramref name="NPer" /> = 0.</exception>
      <returns>Pagamento per una annualità in base a pagamenti periodici fissi e a un tasso di interesse fisso.</returns>
    </member>
    <member name="M:Microsoft.VisualBasic.Financial.PPmt(System.Double,System.Double,System.Double,System.Double,System.Double,Microsoft.VisualBasic.DueDate)">
      <summary>Restituisce un valore che specifica il pagamento di capitale per un dato periodo di una annualità in base a pagamenti periodici fissi e a un tasso di interesse fisso.</summary>
      <param name="Rate">Obbligatorio. Tasso di interesse per periodo. Ad esempio, nel caso di un prestito per l'acquisto di un'auto con tasso di interesse annuo del 10% da restituire con pagamenti mensili, il tasso per periodo sarà pari a 0,1/12 ovvero 0,0083.</param>
      <param name="Per">Obbligatorio. Periodo di pagamento nell'intervallo compreso tra 1 e <paramref name="NPer" />.</param>
      <param name="NPer">Obbligatorio. Numero totale di periodi di pagamento nell'annualità. Se, ad esempio, si effettuano pagamenti mensili per restituire un prestito quadriennale, i periodi di pagamento totali saranno 48, cioè 4 x 12.</param>
      <param name="PV">Obbligatorio. Valore attuale di una serie di pagamenti o entrate futuri. Ad esempio, quando si richiede un prestito per l'acquisto di un'automobile, l'importo del prestito corrisponde al valore attuale per chi concede il prestito dei pagamenti mensili che verranno effettuati.</param>
      <param name="FV">facoltativo. Valore futuro o il saldo cassa desiderato dopo il pagamento finale. Ad esempio, il valore futuro di un prestito è $0, perché questo è il valore dopo il pagamento finale. Se, invece, si desidera risparmiare $50.000 nell'arco di 18 anni, il valore futuro è pari a $50.000. Se omesso, viene utilizzato il valore 0.</param>
      <param name="Due">facoltativo. Oggetto di tipo <see cref="T:Microsoft.VisualBasic.DueDate" /> che specifica la scadenza dei pagamenti. Questo argomento deve essere <c>DueDate.EndOfPeriod</c> se i pagamenti sono dovuti alla fine del periodo di pagamento o <c>DueDate.BegOfPeriod</c> se i pagamenti sono dovuti all'inizio del periodo di pagamento. Se omesso, viene usato <c>DueDate.EndOfPeriod</c>.</param>
      <exception cref="T:System.ArgumentException">
        <paramref name="Per" />&lt;= 0 o <paramref name="Per" /> &gt; <paramref name="NPer" />.</exception>
      <returns>Pagamento di capitale per un dato periodo di una annualità in base a pagamenti periodici fissi e a un tasso di interesse fisso.</returns>
    </member>
    <member name="M:Microsoft.VisualBasic.Financial.PV(System.Double,System.Double,System.Double,System.Double,Microsoft.VisualBasic.DueDate)">
      <summary>Restituisce un valore che specifica il valore attuale di una annualità in base a pagamenti periodici fissi da corrispondere in futuro e a un tasso di interesse fisso.</summary>
      <param name="Rate">Obbligatorio. Tasso di interesse per periodo. Ad esempio, nel caso di un prestito per l'acquisto di un'auto con tasso di interesse annuo del 10% da restituire con pagamenti mensili, il tasso per periodo sarà pari a 0,1/12 ovvero 0,0083.</param>
      <param name="NPer">Obbligatorio. Numero totale di periodi di pagamento nell'annualità. Se, ad esempio, si effettuano pagamenti mensili per restituire un prestito quadriennale, i periodi di pagamento saranno 48, cioè 4 x 12.</param>
      <param name="Pmt">Obbligatorio. Pagamento da effettuare per ogni periodo. In genere i pagamenti contengono una quota di capitale e una quota di interessi che non cambiano nel corso dell'annualità.</param>
      <param name="FV">facoltativo. Valore futuro o il saldo cassa desiderato dopo il pagamento finale. Ad esempio, il valore futuro di un prestito è $0, perché questo è il valore dopo il pagamento finale. Se, invece, si desidera risparmiare $50.000 nell'arco di 18 anni, il valore futuro è pari a $50.000. Se omesso, viene utilizzato il valore 0.</param>
      <param name="Due">facoltativo. Oggetto di tipo <see cref="T:Microsoft.VisualBasic.DueDate" /> che specifica la scadenza dei pagamenti. Questo argomento deve essere <c>DueDate.EndOfPeriod</c> se i pagamenti sono dovuti alla fine del periodo di pagamento o <c>DueDate.BegOfPeriod</c> se i pagamenti sono dovuti all'inizio del periodo di pagamento. Se omesso, viene usato <c>DueDate.EndOfPeriod</c>.</param>
      <returns>Valore attuale di una annualità in base a pagamenti periodici fissi da corrispondere in futuro e a un tasso di interesse fisso.</returns>
    </member>
    <member name="M:Microsoft.VisualBasic.Financial.Rate(System.Double,System.Double,System.Double,System.Double,Microsoft.VisualBasic.DueDate,System.Double)">
      <summary>Restituisce un valore che specifica il tasso di interesse per periodo per un'annualità.</summary>
      <param name="NPer">Obbligatorio. Numero totale di periodi di pagamento nell'annualità. Ad esempio, nel caso di un prestito per un'automobile quadriennale con pagamenti mensili, il numero totale dei periodi di pagamento sarà 4 * 12 (o 48).</param>
      <param name="Pmt">Obbligatorio. Pagamento da effettuare per ogni periodo. In genere i pagamenti contengono una quota di capitale e una quota di interessi che non cambiano nel corso dell'annualità.</param>
      <param name="PV">Obbligatorio. Valore attuale di una serie di pagamenti o entrate futuri. Ad esempio, quando si richiede un prestito per l'acquisto di un'automobile, l'importo del prestito corrisponde al valore attuale per chi concede il prestito dei pagamenti mensili che verranno effettuati.</param>
      <param name="FV">facoltativo. Valore futuro o il saldo cassa desiderato dopo il pagamento finale. Ad esempio, il valore futuro di un prestito è $0, perché questo è il valore dopo il pagamento finale. Se, invece, si desidera risparmiare $50.000 nell'arco di 18 anni, il valore futuro è pari a $50.000. Se omesso, viene utilizzato il valore 0.</param>
      <param name="Due">facoltativo. Oggetto di tipo <see cref="T:Microsoft.VisualBasic.DueDate" /> che specifica la scadenza dei pagamenti. Questo argomento deve essere <c>DueDate.EndOfPeriod</c> se i pagamenti sono dovuti alla fine del periodo di pagamento o <c>DueDate.BegOfPeriod</c> se i pagamenti sono dovuti all'inizio del periodo di pagamento. Se omesso, viene usato <c>DueDate.EndOfPeriod</c>.</param>
      <param name="Guess">facoltativo. Valore che si prevede venga restituito da <see langword="Rate" />. Se omesso, <paramref name="Guess" /> è 0,1 (10 percento).</param>
      <exception cref="T:System.ArgumentException">
        <paramref name="NPer" />&lt;= 0.</exception>
      <returns>Tasso di interesse per periodo per un'annualità.</returns>
    </member>
    <member name="M:Microsoft.VisualBasic.Financial.SLN(System.Double,System.Double,System.Double)">
      <summary>Restituisce un valore che specifica l'ammortamento costante di un bene per un solo periodo.</summary>
      <param name="Cost">Obbligatorio. Costo iniziale del bene.</param>
      <param name="Salvage">Obbligatorio. Valore del bene alla fine della sua vita utile.</param>
      <param name="Life">Obbligatorio. Durata della vita utile del bene.</param>
      <exception cref="T:System.ArgumentException">
        <paramref name="Life" /> = 0.</exception>
      <returns>Ammortamento costante di un bene per un solo periodo.</returns>
    </member>
    <member name="M:Microsoft.VisualBasic.Financial.SYD(System.Double,System.Double,System.Double,System.Double)">
      <summary>Restituisce un valore che specifica l'ammortamento pluriennale di un bene per un periodo specifico.</summary>
      <param name="Cost">Obbligatorio. Costo iniziale del bene.</param>
      <param name="Salvage">Obbligatorio. Valore del bene alla fine della sua vita utile.</param>
      <param name="Life">Obbligatorio. Durata della vita utile del bene.</param>
      <param name="Period">Obbligatorio. Periodo per cui viene calcolato l'ammortamento del bene.</param>
      <exception cref="T:System.ArgumentException">
        <paramref name="Salvage" />&lt;0, <paramref name="Period" /> &gt; <paramref name="Life" /><paramref name="Period" /> o &lt; = 0.</exception>
      <returns>Ammortamento pluriennale di un bene per un periodo specifico.</returns>
    </member>
    <member name="T:Microsoft.VisualBasic.FirstDayOfWeek">
      <summary>Indica il primo giorno della settimana da utilizzare quando si chiamano funzioni relative alla data.</summary>
    </member>
    <member name="F:Microsoft.VisualBasic.FirstDayOfWeek.Friday">
      <summary>Venerdì. Questo membro è equivalente alla costante <see langword="vbFriday" /> di Visual Basic.</summary>
    </member>
    <member name="F:Microsoft.VisualBasic.FirstDayOfWeek.Monday">
      <summary>Lunedì. Questo membro è equivalente alla costante <see langword="vbMonday" /> di Visual Basic.</summary>
    </member>
    <member name="F:Microsoft.VisualBasic.FirstDayOfWeek.Saturday">
      <summary>Sabato. Questo membro è equivalente alla costante <see langword="vbSaturday" /> di Visual Basic.</summary>
    </member>
    <member name="F:Microsoft.VisualBasic.FirstDayOfWeek.Sunday">
      <summary>Domenica (valore predefinito). Questo membro è equivalente alla costante <see langword="vbSunday" /> di Visual Basic.</summary>
    </member>
    <member name="F:Microsoft.VisualBasic.FirstDayOfWeek.System">
      <summary>Il primo giorno della settimana come specificato dalle impostazioni del sistema. Questo membro è equivalente alla costante<see langword="vbUseSystemDayOfWeek" />.</summary>
    </member>
    <member name="F:Microsoft.VisualBasic.FirstDayOfWeek.Thursday">
      <summary>Giovedì. Questo membro è equivalente alla costante <see langword="vbThursday" /> di Visual Basic.</summary>
    </member>
    <member name="F:Microsoft.VisualBasic.FirstDayOfWeek.Tuesday">
      <summary>Martedì. Questo membro è equivalente alla costante <see langword="vbTuesday" /> di Visual Basic.</summary>
    </member>
    <member name="F:Microsoft.VisualBasic.FirstDayOfWeek.Wednesday">
      <summary>Mercoledì. Questo membro è equivalente alla costante <see langword="vbWednesday" /> di Visual Basic.</summary>
    </member>
    <member name="T:Microsoft.VisualBasic.FirstWeekOfYear">
      <summary>Indica la prima settimana dell'anno da utilizzare quando si chiamano funzioni relative alla data.</summary>
    </member>
    <member name="F:Microsoft.VisualBasic.FirstWeekOfYear.FirstFourDays">
      <summary>Prima settimana del nuovo anno che include almeno quattro giorni. Questo membro è equivalente alla costante <see langword="vbFirstFourDays" />di Visual Basic.</summary>
    </member>
    <member name="F:Microsoft.VisualBasic.FirstWeekOfYear.FirstFullWeek">
      <summary>Prima settimana completa dell'anno. Questo membro è equivalente alla costante <see langword="vbFirstFullWeek" />di Visual Basic.</summary>
    </member>
    <member name="F:Microsoft.VisualBasic.FirstWeekOfYear.Jan1">
      <summary>Settimana in cui cade l'1 gennaio (impostazione predefinita). Questo membro è equivalente alla costante <see langword="vbFirstJan1" />di Visual Basic.</summary>
    </member>
    <member name="F:Microsoft.VisualBasic.FirstWeekOfYear.System">
      <summary>Settimana specificata come prima settimana dell'anno nelle impostazioni del sistema. Questo membro è equivalente alla costante <see langword="vbUseSystem" />di Visual Basic.</summary>
    </member>
    <member name="T:Microsoft.VisualBasic.HideModuleNameAttribute">
      <summary>L'attributo <see langword="HideModuleNameAttribute" />, quando applicato a un modulo, consente di accedere ai membri del modulo utilizzando solo la qualifica necessaria per il modulo.</summary>
    </member>
    <member name="M:Microsoft.VisualBasic.HideModuleNameAttribute.#ctor">
      <summary>Inizializza una nuova istanza dell'attributo <see cref="T:Microsoft.VisualBasic.HideModuleNameAttribute" />.</summary>
    </member>
    <member name="T:Microsoft.VisualBasic.Information">
      <summary>Il modulo <see langword="Information" /> contiene procedure che consentono di restituire, testare o verificare informazioni.</summary>
    </member>
    <member name="M:Microsoft.VisualBasic.Information.Erl">
      <summary>Restituisce un valore intero che indica il numero di riga dell'ultima istruzione eseguita. Di sola lettura.</summary>
      <returns>Restituisce un valore intero che indica il numero di riga dell'ultima istruzione eseguita. Di sola lettura.</returns>
    </member>
    <member name="M:Microsoft.VisualBasic.Information.Err">
      <summary>Contiene informazioni sugli errori di runtime.</summary>
      <returns>Contiene informazioni sugli errori di runtime.</returns>
    </member>
    <member name="M:Microsoft.VisualBasic.Information.IsArray(System.Object)">
      <summary>Restituisce un valore <see langword="Boolean" /> che indica se una variabile rimanda a una matrice.</summary>
      <param name="VarName">Obbligatorio. Variabile <see langword="Object" />.</param>
      <returns>Restituisce un valore <see langword="Boolean" /> che indica se una variabile rimanda a una matrice.</returns>
    </member>
    <member name="M:Microsoft.VisualBasic.Information.IsDate(System.Object)">
      <summary>Restituisce un valore <see langword="Boolean" /> che indica se un'espressione rappresenta un valore <see langword="Date" /> valido.</summary>
      <param name="Expression">Obbligatorio. Espressione <see langword="Object" />.</param>
      <returns>Restituisce un valore <see langword="Boolean" /> che indica se un'espressione rappresenta un valore <see langword="Date" /> valido.</returns>
    </member>
    <member name="M:Microsoft.VisualBasic.Information.IsDBNull(System.Object)">
      <summary>Restituisce un valore <see langword="Boolean" /> che indica se un'espressione restituisce la classe <see cref="T:System.DBNull" />.</summary>
      <param name="Expression">Obbligatorio. Espressione <see langword="Object" />.</param>
      <returns>Restituisce un valore <see langword="Boolean" /> che indica se un'espressione restituisce la classe <see cref="T:System.DBNull" />.</returns>
    </member>
    <member name="M:Microsoft.VisualBasic.Information.IsError(System.Object)">
      <summary>Restituisce un valore <see langword="Boolean" /> che indica se un'espressione è un tipo di eccezione.</summary>
      <param name="Expression">Obbligatorio. Espressione <see langword="Object" />.</param>
      <returns>Restituisce un valore <see langword="Boolean" /> che indica se un'espressione è un tipo di eccezione.</returns>
    </member>
    <member name="M:Microsoft.VisualBasic.Information.IsNothing(System.Object)">
      <summary>Restituisce un valore <see langword="Boolean" /> che indica se a un'espressione non è associato alcun oggetto.</summary>
      <param name="Expression">Obbligatorio. Espressione <see langword="Object" />.</param>
      <returns>Restituisce un valore <see langword="Boolean" /> che indica se a un'espressione non è associato alcun oggetto.</returns>
    </member>
    <member name="M:Microsoft.VisualBasic.Information.IsNumeric(System.Object)">
      <summary>Restituisce un valore <see langword="Boolean" /> che indica se un'espressione può essere valutata come numero.</summary>
      <param name="Expression">Obbligatorio. Espressione <see langword="Object" />.</param>
      <returns>Restituisce un valore <see langword="Boolean" /> che indica se un'espressione può essere valutata come numero.</returns>
    </member>
    <member name="M:Microsoft.VisualBasic.Information.IsReference(System.Object)">
      <summary>Restituisce un valore <see langword="Boolean" /> che indica se un'espressione restituisce un tipo di riferimento.</summary>
      <param name="Expression">Obbligatorio. Espressione <see langword="Object" />.</param>
      <returns>Restituisce un valore <see langword="Boolean" /> che indica se un'espressione restituisce un tipo di riferimento.</returns>
    </member>
    <member name="M:Microsoft.VisualBasic.Information.LBound(System.Array,System.Int32)">
      <summary>Restituisce l'indice più basso disponibile per la dimensione indicata di una matrice.</summary>
      <param name="Array">Obbligatorio. Matrice di qualsiasi tipo di dati. Matrice in cui si desidera trovare l'indice più basso possibile di una dimensione.</param>
      <param name="Rank">facoltativo. <see langword="Integer" />. Dimensione per cui deve essere restituito l'indice più basso possibile. Utilizzare 1 per la prima dimensione, 2 per la seconda e così via. Se <paramref name="Rank" /> viene omesso, viene utilizzato il valore 1.</param>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="Array" /> è <see langword="Nothing" />.</exception>
      <exception cref="T:System.RankException">
        <paramref name="Rank" /> è minore di 1 oppure <paramref name="Rank" /> è maggiore del numero di dimensioni di <paramref name="Array" />.</exception>
      <returns>
        <see langword="Integer" />. Valore più basso che può essere contenuto nell'indice per la dimensione specificata. <see langword="LBound" /> restituisce sempre 0 purché <paramref name="Array" /> sia stato inizializzato, anche se privo di elementi, ad esempio se è una stringa di lunghezza zero. Se <paramref name="Array" /> è <see langword="Nothing" />, <see langword="LBound" /> genera un oggetto <see cref="T:System.ArgumentNullException" />.</returns>
    </member>
    <member name="M:Microsoft.VisualBasic.Information.QBColor(System.Int32)">
      <summary>Restituisce un <see langword="Integer" /> che rappresenta il codice di colore RGB corrispondente al numero di colore specificato.</summary>
      <param name="Color">Obbligatorio. Numero intero compreso nell'intervallo tra 0 e 15.</param>
      <exception cref="T:System.ArgumentException">
        <paramref name="Color" /> non rientra nell'intervallo compreso tra 0 e 15, estremi inclusi.</exception>
      <returns>Restituisce un <see langword="Integer" /> che rappresenta il codice di colore RGB corrispondente al numero di colore specificato.</returns>
    </member>
    <member name="M:Microsoft.VisualBasic.Information.RGB(System.Int32,System.Int32,System.Int32)">
      <summary>Restituisce un <see langword="Integer" /> che rappresenta un valore di colore RGB da un set di componenti rosso, verde e blu.</summary>
      <param name="Red">Obbligatorio. <see langword="Integer" /> nell'intervallo compreso tra 0 e 255 inclusi, che rappresenta l'intensità del componente rosso del colore.</param>
      <param name="Green">Obbligatorio. <see langword="Integer" /> nell'intervallo compreso tra 0 e 255 inclusi, che rappresenta l'intensità del componente verde del colore.</param>
      <param name="Blue">Obbligatorio. <see langword="Integer" /> nell'intervallo compreso tra 0 e 255 inclusi, che rappresenta l'intensità del componente blu del colore.</param>
      <exception cref="T:System.ArgumentException">
        <paramref name="Green" />, <paramref name="Blue" /> o <paramref name="Red" /> non rientra nell'intervallo compreso tra 0 e 255, estremi inclusi.</exception>
      <returns>Restituisce un <see langword="Integer" /> che rappresenta un valore di colore RGB da un set di componenti rosso, verde e blu.</returns>
    </member>
    <member name="M:Microsoft.VisualBasic.Information.SystemTypeName(System.String)">
      <summary>Restituisce un valore <see langword="String" /> contenente il nome del tipo di dati di sistema di una variabile.</summary>
      <param name="VbName">Obbligatorio. Variabile <see langword="String" /> contenente un nome di tipo di Visual Basic.</param>
      <returns>Restituisce un valore <see langword="String" /> contenente il nome del tipo di dati di sistema di una variabile.</returns>
    </member>
    <member name="M:Microsoft.VisualBasic.Information.TypeName(System.Object)">
      <summary>Restituisce un valore <see langword="String" /> contenente informazioni relative al tipo di dati per una variabile.</summary>
      <param name="VarName">Obbligatorio. Variabile <see langword="Object" />. Se <see langword="Option Strict" /> è <see langword="Off" />, è possibile passare una variabile di qualsiasi tipo di dati tranne una struttura.</param>
      <returns>Restituisce un valore <see langword="String" /> contenente informazioni relative al tipo di dati per una variabile.</returns>
    </member>
    <member name="M:Microsoft.VisualBasic.Information.UBound(System.Array,System.Int32)">
      <summary>Restituisce l'indice più alto disponibile per la dimensione indicata di una matrice.</summary>
      <param name="Array">Obbligatorio. Matrice di qualsiasi tipo di dati. Matrice in cui si desidera trovare l'indice più alto possibile di una dimensione.</param>
      <param name="Rank">facoltativo. <see langword="Integer" />. Dimensione per cui deve essere restituito l'indice più alto possibile. Utilizzare 1 per la prima dimensione, 2 per la seconda e così via. Se <paramref name="Rank" /> viene omesso, viene utilizzato il valore 1.</param>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="Array" /> è <see langword="Nothing" />.</exception>
      <exception cref="T:System.RankException">
        <paramref name="Rank" /> è minore di 1 oppure <paramref name="Rank" /> è maggiore del numero di dimensioni di <paramref name="Array" />.</exception>
      <returns>
        <see langword="Integer" />. Il valore più alto possibile che può essere contenuto nell'indice per la dimensione specificata. Se <paramref name="Array" /> ha un solo elemento, <see langword="UBound" /> restituisce 0. Se <paramref name="Array" /> non ha elementi, ad esempio se è una stringa di lunghezza zero, <see langword="UBound" /> restituisce -1.</returns>
    </member>
    <member name="M:Microsoft.VisualBasic.Information.VarType(System.Object)">
      <summary>Restituisce un valore <see langword="Integer" /> contenente la classificazione del tipo di dati di una variabile.</summary>
      <param name="VarName">Obbligatorio. Variabile <see langword="Object" />. Se <see langword="Option Strict" /> è <see langword="Off" />, è possibile passare una variabile di qualsiasi tipo di dati tranne una struttura.</param>
      <returns>Restituisce un valore <see langword="Integer" /> contenente la classificazione del tipo di dati di una variabile.</returns>
    </member>
    <member name="M:Microsoft.VisualBasic.Information.VbTypeName(System.String)">
      <summary>Restituisce un valore <see langword="String" /> contenente il nome del tipo di dati di Visual Basic di una variabile.</summary>
      <param name="UrtName">Obbligatorio. Variabile <see langword="String" /> contenente un nome del tipo utilizzato da Common Language Runtime.</param>
      <returns>Restituisce un valore <see langword="String" /> contenente il nome del tipo di dati di Visual Basic di una variabile.</returns>
    </member>
    <member name="T:Microsoft.VisualBasic.Interaction">
      <summary>Il modulo <see langword="Interaction" /> contiene procedure che consentono di interagire con oggetti, applicazioni e sistemi.</summary>
    </member>
    <member name="M:Microsoft.VisualBasic.Interaction.AppActivate(System.Int32)">
      <summary>Attiva un'applicazione che è già in esecuzione.</summary>
      <param name="ProcessId">
        <see langword="Integer" /> che specifica il numero di ID di processo Win32 assegnato al processo. È possibile utilizzare l'ID restituito dalla <see cref="M:Microsoft.VisualBasic.Interaction.Shell(System.String,Microsoft.VisualBasic.AppWinStyle,System.Boolean,System.Int32)" />, purché sia diverso da zero.</param>
    </member>
    <member name="M:Microsoft.VisualBasic.Interaction.AppActivate(System.String)">
      <summary>Attiva un'applicazione che è già in esecuzione.</summary>
      <param name="Title">Espressione <see langword="String" /> che specifica il titolo presente nella barra del titolo dell'applicazione che si desidera attivare. È possibile utilizzare il titolo assegnato all'applicazione all'avvio.</param>
    </member>
    <member name="M:Microsoft.VisualBasic.Interaction.Beep">
      <summary>Emette un segnale acustico tramite l'altoparlante del computer.</summary>
    </member>
    <member name="M:Microsoft.VisualBasic.Interaction.CallByName(System.Object,System.String,Microsoft.VisualBasic.CallType,System.Object[])">
      <summary>Esegue un metodo in un oggetto oppure imposta o restituisce una proprietà in un oggetto.</summary>
      <param name="ObjectRef">Obbligatorio. <see langword="Object" /> Puntatore all'oggetto che espone la proprietà o il metodo.</param>
      <param name="ProcName">Obbligatorio. <see langword="String" /> Espressione stringa contenente il nome della proprietà o del metodo dell'oggetto.</param>
      <param name="UseCallType">Obbligatorio. Membro di enumerazione di tipo <see cref="T:Microsoft.VisualBasic.CallType" /> che rappresenta il tipo di routine chiamato. Il valore di <see langword="CallType" /> può essere <see langword="Method" />, <see langword="Get" /> o <see langword="Set" />.</param>
      <param name="Args">facoltativo. <see langword="ParamArray" /> Matrice di parametri contenente gli argomenti da passare alla proprietà o al metodo da chiamare.</param>
      <exception cref="T:System.ArgumentException">Valore <paramref name="UseCallType" /> non valido. Deve essere <see langword="Method" />, <see langword="Get" /> o <see langword="Set" />.</exception>
      <returns>Esegue un metodo in un oggetto oppure imposta o restituisce una proprietà in un oggetto.</returns>
    </member>
    <member name="M:Microsoft.VisualBasic.Interaction.Choose(System.Double,System.Object[])">
      <summary>Seleziona e restituisce un valore da un elenco di argomenti.</summary>
      <param name="Index">Obbligatorio. <see cref="T:System.Double" /> Espressione numerica che restituisce un valore compreso tra 1 e il numero di elementi passati nell'argomento <paramref name="Choice" />.</param>
      <param name="Choice">Obbligatorio. Matrice di parametri <see langword="Object" />. È possibile fornire una sola variabile o un'espressione che restituisce il tipo di dati <see langword="Object" /> a un elenco di variabili <see langword="Object" /> o espressioni separate da virgole oppure a una matrice unidimensionale di elementi <see langword="Object" />.</param>
      <returns>Seleziona e restituisce un valore da un elenco di argomenti.</returns>
    </member>
    <member name="M:Microsoft.VisualBasic.Interaction.Command">
      <summary>Restituisce la parte argomento della riga di comando utilizzata per avviare Visual Basic o un programma eseguibile sviluppato con Visual Basic. La funzionalità <see langword="My" /> garantisce maggiore produttività e prestazioni migliori rispetto alla funzione <see langword="Command" />. Per altre informazioni, vedere <see cref="P:Microsoft.VisualBasic.ApplicationServices.ConsoleApplicationBase.CommandLineArgs" />.</summary>
      <returns>Parte argomento della riga di comando usata per avviare Visual Basic o un programma eseguibile sviluppato con Visual Basic.  
  
La funzionalità <see langword="My" /> garantisce maggiore produttività e prestazioni migliori rispetto alla funzione <see langword="Command" />. Per altre informazioni, vedere <see cref="P:Microsoft.VisualBasic.ApplicationServices.ConsoleApplicationBase.CommandLineArgs" />.</returns>
    </member>
    <member name="M:Microsoft.VisualBasic.Interaction.CreateObject(System.String,System.String)">
      <summary>Crea e restituisce un riferimento a un oggetto COM. Non è possibile utilizzare <see langword="CreateObject" /> per creare istanze di classi in Visual Basic a meno che tali classi non vengano esposte in modo esplicito come componenti COM.</summary>
      <param name="ProgId">Obbligatorio. <see langword="String" /> ID di programma dell'oggetto da creare.</param>
      <param name="ServerName">facoltativo. <see langword="String" /> Nome del server di rete in cui verrà creato l'oggetto. Se <paramref name="ServerName" /> è una stringa vuota (""), viene utilizzato il computer locale.</param>
      <exception cref="T:System.Exception">Server non disponibile.</exception>
      <exception cref="T:System.IO.FileNotFoundException">Non esiste alcun oggetto del tipo specificato.</exception>
      <returns>Crea e restituisce un riferimento a un oggetto COM. Non è possibile utilizzare <see langword="CreateObject" /> per creare istanze di classi in Visual Basic a meno che tali classi non vengano esposte in modo esplicito come componenti COM.</returns>
    </member>
    <member name="M:Microsoft.VisualBasic.Interaction.DeleteSetting(System.String,System.String,System.String)">
      <summary>Elimina una sezione o un'impostazione di chiave dalla voce di un'applicazione nel Registro di sistema di Windows. Per quanto riguarda le operazioni nel Registro di sistema, la funzionalità <see langword="My" /> garantisce una maggiore produttività e prestazioni migliori rispetto alla funzione <see langword="DeleteSetting" />. Per altre informazioni, vedere <see cref="P:Microsoft.VisualBasic.Devices.ServerComputer.Registry" />.</summary>
      <param name="AppName">Obbligatorio. Espressione <see langword="String" /> contenente il nome dell'applicazione o del progetto a cui fa riferimento la sezione o l'impostazione di chiave.</param>
      <param name="Section">Obbligatorio. Espressione <see langword="String" /> contenente il nome della sezione da cui si desidera eliminare l'impostazione di chiave. Se vengono specificati solo <paramref name="AppName" /> e <paramref name="Section" />, la sezione specificata viene eliminata insieme a tutte le impostazioni di chiave correlate.</param>
      <param name="Key">facoltativo. Espressione <see langword="String" /> contenente il nome dell'impostazione di chiave da eliminare.</param>
      <exception cref="T:System.ArgumentException">L'utente non è connesso.</exception>
    </member>
    <member name="M:Microsoft.VisualBasic.Interaction.Environ(System.Int32)">
      <summary>Restituisce la stringa associata alla variabile di ambiente del sistema operativo.</summary>
      <param name="Expression">Obbligatorio. Espressione che valuta una stringa contenente il nome di una variabile di ambiente oppure un intero corrispondente all'ordine numerico di una stringa di ambiente nella tabella della stringhe di ambiente.</param>
      <exception cref="T:System.ArgumentException">
        <paramref name="Expression" /> mancante.</exception>
      <returns>Stringa associata a una variabile di ambiente del sistema operativo.</returns>
    </member>
    <member name="M:Microsoft.VisualBasic.Interaction.Environ(System.String)">
      <summary>Restituisce la stringa associata alla variabile di ambiente del sistema operativo.</summary>
      <param name="Expression">Obbligatorio. Espressione che valuta una stringa contenente il nome di una variabile di ambiente oppure un intero corrispondente all'ordine numerico di una stringa di ambiente nella tabella della stringhe di ambiente.</param>
      <exception cref="T:System.ArgumentException">
        <paramref name="Expression" /> mancante.</exception>
      <returns>Stringa associata a una variabile di ambiente del sistema operativo.</returns>
    </member>
    <member name="M:Microsoft.VisualBasic.Interaction.GetAllSettings(System.String,System.String)">
      <summary>Restituisce un elenco di impostazioni di chiavi e dei rispettivi valori (originariamente creati con <see langword="SaveSetting" />) dalla voce di un'applicazione nel Registro di sistema di Windows. Per quanto riguarda le operazioni nel Registro di sistema, la funzionalità <see langword="My" /> garantisce una maggiore produttività e prestazioni migliori rispetto alla funzione <see langword="GetAllSettings" />. Per altre informazioni, vedere <see cref="P:Microsoft.VisualBasic.Devices.ServerComputer.Registry" />.</summary>
      <param name="AppName">Obbligatorio. Espressione <see langword="String" /> contenente il nome dell'applicazione o del progetto di cui si richiedono le impostazioni di chiave.</param>
      <param name="Section">Obbligatorio. Espressione <see langword="String" /> contenente il nome della sezione di cui si richiedono le impostazioni di chiave. <see langword="GetAllSettings" /> restituisce un oggetto contenente una matrice di stringhe bidimensionale. Le stringhe contengono tutte le impostazioni di chiave della sezione specificata, più i valori corrispondenti.</param>
      <exception cref="T:System.ArgumentException">L'utente non è connesso.</exception>
      <returns>Elenco di impostazioni di chiavi e dei rispettivi valori (originariamente creati con <see langword="SaveSetting" />) dalla voce di un'applicazione nel Registro di sistema di Windows.  
  
Per quanto riguarda le operazioni nel Registro di sistema, la funzionalità <see langword="My" /> garantisce una maggiore produttività e prestazioni migliori rispetto alla funzione <see langword="GetAllSettings" />. Per altre informazioni, vedere <see cref="P:Microsoft.VisualBasic.Devices.ServerComputer.Registry" />.</returns>
    </member>
    <member name="M:Microsoft.VisualBasic.Interaction.GetObject(System.String,System.String)">
      <summary>Restituisce un riferimento a un oggetto fornito da un componente COM.</summary>
      <param name="PathName">facoltativo. <see langword="String" /> Percorso completo e nome del file contenente l'oggetto da recuperare. Se <paramref name="PathName" /> viene omesso, è necessario <paramref name="Class" />.</param>
      <param name="Class">Obbligatorio se non viene specificato <paramref name="PathName" />. <see langword="String" /> Stringa che rappresenta la classe dell'oggetto. Di seguito sono descritti la sintassi e le parti dell'argomento <paramref name="Class" />: 
 <c>appname</c><c>.</c><c>objecttype</c>  
  
Parametro [1|1] 
Descrizione [1|2] 
[2|1] <c>appname</c>  
  
[2|2] richiesta. <see langword="String" /> Nome dell'applicazione che fornisce l'oggetto.  
  
[3|1] <c>objecttype</c>  
  
[3|2] richiesta. <see langword="String" /> Tipo o classe dell'oggetto da creare.</param>
      <exception cref="T:System.Exception">Non esiste alcun oggetto con il tipo di classe specificato.</exception>
      <exception cref="T:System.IO.FileNotFoundException">Non esiste alcun oggetto con il percorso e il nome di file specificati.</exception>
      <returns>Riferimento a un oggetto fornito da un componente COM.</returns>
    </member>
    <member name="M:Microsoft.VisualBasic.Interaction.GetSetting(System.String,System.String,System.String,System.String)">
      <summary>Restituisce il valore di un'impostazione di chiave dalla voce di un'applicazione nel Registro di sistema di Windows. Per quanto riguarda le operazioni nel Registro di sistema, la funzionalità <see langword="My" /> garantisce una maggiore produttività e prestazioni migliori rispetto alla funzione <see langword="GetAllSettings" />. Per altre informazioni, vedere <see cref="P:Microsoft.VisualBasic.Devices.ServerComputer.Registry" />.</summary>
      <param name="AppName">Obbligatorio. Espressione <see langword="String" /> contenente il nome dell'applicazione o del progetto di cui si richiede l'impostazione di chiave.</param>
      <param name="Section">Obbligatorio. Espressione <see langword="String" /> contenente il nome della sezione in cui si trova l'impostazione di chiave.</param>
      <param name="Key">Obbligatorio. Espressione <see langword="String" /> contenente il nome dell'impostazione di chiave da restituire.</param>
      <param name="Default">facoltativo. Espressione contenente il valore da restituire se nessun valore è impostato nell'impostazione di <paramref name="Key" />. Se omesso, si presuppone che <paramref name="Default" /> sia una stringa di lunghezza zero ("").</param>
      <exception cref="T:System.ArgumentException">Uno o più argomenti non sono espressioni <see langword="String" /> oppure l'utente non è connesso.</exception>
      <returns>Valore di un'impostazione di chiave dalla voce di un'applicazione nel Registro di sistema di Windows.  
  
Per quanto riguarda le operazioni nel Registro di sistema, la funzionalità <see langword="My" /> garantisce una maggiore produttività e prestazioni migliori rispetto alla funzione <see langword="GetAllSettings" />.</returns>
    </member>
    <member name="M:Microsoft.VisualBasic.Interaction.IIf(System.Boolean,System.Object,System.Object)">
      <summary>Restituisce uno di due oggetti, a seconda della valutazione di un'espressione.</summary>
      <param name="Expression">Obbligatorio. <see langword="Boolean" /> Espressione che si desidera valutare.</param>
      <param name="TruePart">Obbligatorio. <see langword="Object" /> Restituito se <paramref name="Expression" /> è <see langword="True" />.</param>
      <param name="FalsePart">Obbligatorio. <see langword="Object" /> Restituito se <paramref name="Expression" /> è <see langword="False" />.</param>
      <returns>Restituisce uno di due oggetti, a seconda della valutazione di un'espressione.</returns>
    </member>
    <member name="M:Microsoft.VisualBasic.Interaction.InputBox(System.String,System.String,System.String,System.Int32,System.Int32)">
      <summary>Visualizza una richiesta in una finestra di dialogo, attende che l'utente immetta il testo o faccia clic su un pulsante, quindi restituisce una stringa con il contenuto della casella di testo.</summary>
      <param name="Prompt">Obbligatorio. Espressione <see langword="String" /> visualizzata come messaggio nella finestra di dialogo. La lunghezza massima di <paramref name="Prompt" /> è di circa 1024 caratteri, a seconda della larghezza dei caratteri utilizzati. Se <paramref name="Prompt" /> è costituito da più di una riga, è possibile separare le righe usando un carattere di ritorno a capo (<see langword="Chr(" />13<see langword=")" />), un carattere di avanzamento riga (<see langword="Chr(" />10<see langword=")" />) o una combinazione di ritorno a capo e avanzamento riga (<see langword="Chr(" />13<see langword=")" /> &amp; <see langword="Chr(" />10<see langword=")" />) tra ogni riga.</param>
      <param name="Title">facoltativo. Espressione <see langword="String" /> visualizzata nella barra del titolo della finestra di dialogo. Se si omette <paramref name="Title" />, nella barra del titolo viene visualizzato il nome dell'applicazione.</param>
      <param name="DefaultResponse">facoltativo. Espressione <see langword="String" /> visualizzata nella casella di testo come risposta predefinita se non viene specificato altro input. Se si omette <paramref name="DefaultResponse" />, la casella di testo visualizzata è vuota.</param>
      <param name="XPos">facoltativo. Espressione numerica che specifica, in twip, la distanza del bordo sinistro della finestra di dialogo dal bordo sinistro dello schermo. Se si omette <paramref name="XPos" />, la finestra di dialogo viene centrata in senso orizzontale.</param>
      <param name="YPos">facoltativo. Espressione numerica che specifica, in twip, la distanza del bordo superiore della finestra di dialogo dal bordo superiore dello schermo. Se si omette <paramref name="YPos" />, la finestra di dialogo viene collocata a circa un terzo dello schermo in senso verticale partendo dall'alto.</param>
      <returns>Visualizza una richiesta in una finestra di dialogo, attende che l'utente immetta il testo o faccia clic su un pulsante, quindi restituisce una stringa con il contenuto della casella di testo.</returns>
    </member>
    <member name="M:Microsoft.VisualBasic.Interaction.MsgBox(System.Object,Microsoft.VisualBasic.MsgBoxStyle,System.Object)">
      <summary>Visualizza un messaggio in una finestra di dialogo, attende che l'utente faccia clic su un pulsante, quindi restituisce un intero che indica il pulsante scelto dall'utente.</summary>
      <param name="Prompt">Obbligatorio. Espressione <see langword="String" /> visualizzata come messaggio nella finestra di dialogo. La lunghezza massima di <paramref name="Prompt" /> è di circa 1024 caratteri, a seconda della larghezza dei caratteri utilizzati. Se <paramref name="Prompt" /> è costituito da più di una riga, è possibile separare le righe usando un carattere di ritorno a capo (<see langword="Chr(" />13<see langword=")" />), un carattere di avanzamento riga (<see langword="Chr(" />10<see langword=")" />) o una combinazione dei caratteri di ritorno a capo e avanzamento riga (<see langword="Chr(" />13<see langword=")" /> &amp; <see langword="Chr(" />10<see langword=")" />) tra ogni riga.</param>
      <param name="Buttons">facoltativo. Espressione numerica che rappresenta la somma dei valori che specificano il numero e il tipo dei pulsanti da visualizzare, lo stile di icona da utilizzare, l'identità del pulsante predefinito e la modalità della finestra di messaggio. Se si omette <paramref name="Buttons" />, il valore predefinito è zero.</param>
      <param name="Title">facoltativo. Espressione <see langword="String" /> visualizzata nella barra del titolo della finestra di dialogo. Se si omette <paramref name="Title" />, nella barra del titolo viene visualizzato il nome dell'applicazione.</param>
      <exception cref="T:System.ArgumentException">
        <paramref name="Prompt" /> non è un'espressione <see langword="String" /> oppure <paramref name="Title" /> non è valido.</exception>
      <exception cref="T:System.InvalidOperationException">Il processo non viene eseguito in modo interattivo con l'utente.</exception>
      <exception cref="T:System.ComponentModel.InvalidEnumArgumentException">Uno o più parametri non sono membri dell'enumerazione <see langword="MsgBoxResult" /> o <see langword="MsgBoxStyle" />.</exception>
      <returns>Uno dei valori seguenti: <list type="table"><listheader><term>Costante</term><description>Valore</description></listheader><item><term><see langword="OK" /></term><description>1</description></item><item><term><see langword="Cancel" /></term><description>2</description></item><item><term><see langword="Abort" /></term><description>3</description></item><item><term><see langword="Retry" /></term><description>4</description></item><item><term><see langword="Ignore" /></term><description>5</description></item><item><term><see langword="Yes" /></term><description>6</description></item><item><term><see langword="No" /></term><description>7</description></item></list></returns>
    </member>
    <member name="M:Microsoft.VisualBasic.Interaction.Partition(System.Int64,System.Int64,System.Int64,System.Int64)">
      <summary>Restituisce una stringa che rappresenta l'intervallo calcolato che contiene un numero.</summary>
      <param name="Number">Obbligatorio. <see langword="Long" /> Numero intero che si desidera individuare in uno degli intervalli calcolati.</param>
      <param name="Start">Obbligatorio. <see langword="Long" /> Numero intero che indica l'inizio del set di intervalli calcolati. <paramref name="Start" /> non può essere minore di 0.</param>
      <param name="Stop">Obbligatorio. <see langword="Long" /> Numero intero che indica la fine del set di intervalli calcolati. <paramref name="Stop" /> non può essere minore o uguale a <paramref name="Start" />.</param>
      <param name="Interval">Obbligatorio. <see langword="Long" /> Numero intero che indica le dimensioni di ogni intervallo calcolato tra i parametri <paramref name="Start" /> e <paramref name="Stop" />. <paramref name="Interval" /> non può essere minore di 1.</param>
      <exception cref="T:System.ArgumentException">
        <paramref name="Start" /> &lt; 0, <paramref name="Stop" /> &lt;= <paramref name="Start" /> o <paramref name="Interval" /> &lt; 1.</exception>
      <returns>Stringa che rappresenta l'intervallo calcolato che contiene un numero.</returns>
    </member>
    <member name="M:Microsoft.VisualBasic.Interaction.SaveSetting(System.String,System.String,System.String,System.String)">
      <summary>Salva o crea una voce di applicazione nel Registro di sistema di Windows. Per quanto riguarda le operazioni nel Registro di sistema, la funzionalità <see langword="My" /> garantisce una maggiore produttività e prestazioni migliori rispetto alla funzione <see langword="SaveSetting" />. Per altre informazioni, vedere <see cref="P:Microsoft.VisualBasic.Devices.ServerComputer.Registry" />.</summary>
      <param name="AppName">Obbligatorio. Espressione <see langword="String" /> contenente il nome dell'applicazione o del progetto a cui si applica l'impostazione.</param>
      <param name="Section">Obbligatorio. Espressione <see langword="String" /> contenente il nome della sezione in cui viene salvata l'impostazione di chiave.</param>
      <param name="Key">Obbligatorio. Espressione <see langword="String" /> contenente il nome dell'impostazione di chiave da salvare.</param>
      <param name="Setting">Obbligatorio. Espressione contenente il valore su cui viene impostato <paramref name="Key" />.</param>
      <exception cref="T:System.ArgumentException">Non è stato possibile creare la chiave del Registro di sistema, oppure l'utente non è connesso.</exception>
    </member>
    <member name="M:Microsoft.VisualBasic.Interaction.Shell(System.String,Microsoft.VisualBasic.AppWinStyle,System.Boolean,System.Int32)">
      <summary>Esegue un programma eseguibile e restituisce un intero contenente l'ID di processo del programma, se è ancora in esecuzione.</summary>
      <param name="PathName">Obbligatorio. <see langword="String" /> Nome del programma da eseguire, insieme a eventuali argomenti e opzioni della riga di comando necessari. L'oggetto <paramref name="PathName" /> può includere anche l'unità e il percorso della directory o la cartella.  
 Se non si conosce il percorso del programma, è possibile utilizzare il <see cref="Overload:Microsoft.VisualBasic.FileIO.FileSystem.GetFiles" /> per trovarlo. Ad esempio, è possibile chiamare <c>My.Computer.FileSystem.GetFiles("C:\", True, "testFile.txt")</c>, che restituisce il percorso completo di ogni file denominato <c>testFile.txt</c> in un punto qualsiasi sull'unità C:\.</param>
      <param name="Style">facoltativo. <see langword="AppWinStyle" /> Valore scelto da <see cref="T:Microsoft.VisualBasic.AppWinStyle" /> che specifica lo stile della finestra in cui deve essere eseguito il programma. Se <paramref name="Style" /> viene omesso, <see langword="Shell" /> utilizza <see langword="AppWinStyle.MinimizedFocus" />, che avvia il programma nella finestra ridotta a icona e con lo stato attivo.</param>
      <param name="Wait">facoltativo. <see langword="Boolean" /> Valore indicante se la funzione <see langword="Shell" /> deve attendere il completamento del programma. Se <paramref name="Wait" /> viene omesso, <see langword="Shell" /> utilizza <see langword="False" />.</param>
      <param name="Timeout">facoltativo. <see langword="Integer" /> Numero di millisecondi di attesa del completamento se <paramref name="Wait" /> è <see langword="True" />. Se <paramref name="Timeout" /> viene omesso, <see langword="Shell" /> utilizza -1, che significa che non vi è alcun timeout e <see langword="Shell" /> non termina finché il programma non finisce. Se, pertanto, si omette <paramref name="Timeout" /> o lo si imposta su -1, è possibile che <see langword="Shell" /> non restituisca mai il controllo al programma.</param>
      <exception cref="T:System.ArgumentException">
        <paramref name="Style" /> non rientra nell'intervallo compreso tra 0 e 9, estremi inclusi.</exception>
      <exception cref="T:System.IO.FileNotFoundException">
        <see langword="Shell" /> non è in grado di trovare il file <paramref name="PathName" />.</exception>
      <exception cref="T:System.NullReferenceException">
        <paramref name="PathName" /> è <see langword="Nothing" />.</exception>
      <returns>Intero contenente l'ID di processo del programma, se è ancora in esecuzione. 0 se il programma ha già completato l'esecuzione.</returns>
    </member>
    <member name="M:Microsoft.VisualBasic.Interaction.Switch(System.Object[])">
      <summary>Valuta un elenco di espressioni e restituisce un valore <see langword="Object" /> corrispondente alla prima espressione <see langword="True" /> dell'elenco.</summary>
      <param name="VarExpr">Obbligatorio. Matrice di parametri <see langword="Object" />. Il numero di elementi deve essere pari. È possibile specificare un elenco di variabili <see langword="Object" /> o espressioni separate da virgole oppure una matrice unidimensionale di elementi <see langword="Object" />.</param>
      <exception cref="T:System.ArgumentException">Il numero degli argomenti è dispari.</exception>
      <returns>Valuta un elenco di espressioni e restituisce un valore <see langword="Object" /> corrispondente alla prima espressione <see langword="True" /> dell'elenco.</returns>
    </member>
    <member name="T:Microsoft.VisualBasic.MsgBoxResult">
      <summary>Indica il pulsante su cui è stato fatto clic in una finestra di messaggio restituita dalla funzione <see langword="MsgBox" />.</summary>
    </member>
    <member name="F:Microsoft.VisualBasic.MsgBoxResult.Abort">
      <summary>È stato fatto clic sul pulsante Interrompi. Questo membro è equivalente alla costante <see langword="vbAbort" />di Visual Basic.</summary>
    </member>
    <member name="F:Microsoft.VisualBasic.MsgBoxResult.Cancel">
      <summary>È stato fatto clic sul pulsante Annulla. Questo membro è equivalente alla costante <see langword="vbCancel" />di Visual Basic.</summary>
    </member>
    <member name="F:Microsoft.VisualBasic.MsgBoxResult.Ignore">
      <summary>È stato fatto clic sul pulsante Ignora. Questo membro è equivalente alla costante <see langword="vbIgnore" />di Visual Basic.</summary>
    </member>
    <member name="F:Microsoft.VisualBasic.MsgBoxResult.No">
      <summary>È stato fatto clic sul pulsante No. Questo membro è equivalente alla costante <see langword="vbNo" />di Visual Basic.</summary>
    </member>
    <member name="F:Microsoft.VisualBasic.MsgBoxResult.Ok">
      <summary>È stato fatto clic sul pulsante OK. Questo membro è equivalente alla costante <see langword="vbOK" />di Visual Basic.</summary>
    </member>
    <member name="F:Microsoft.VisualBasic.MsgBoxResult.Retry">
      <summary>È stato fatto clic sul pulsante Riprova. Questo membro è equivalente alla costante <see langword="vbRetry" />di Visual Basic.</summary>
    </member>
    <member name="F:Microsoft.VisualBasic.MsgBoxResult.Yes">
      <summary>È stato fatto clic sul pulsante Sì. Questo membro è equivalente alla costante <see langword="vbYes" />di Visual Basic.</summary>
    </member>
    <member name="T:Microsoft.VisualBasic.MsgBoxStyle">
      <summary>Indica i pulsanti da visualizzare durante la chiamata alla funzione <see langword="MsgBox" />.</summary>
    </member>
    <member name="F:Microsoft.VisualBasic.MsgBoxStyle.AbortRetryIgnore">
      <summary>Pulsanti Interrompi, Riprova e Ignora. Questo membro è equivalente alla costante <see langword="vbAbortRetryIgnore" />di Visual Basic.</summary>
    </member>
    <member name="F:Microsoft.VisualBasic.MsgBoxStyle.ApplicationModal">
      <summary>Finestra di messaggio modale dell'applicazione. Questo membro è equivalente alla costante <see langword="vbApplicationModal" />di Visual Basic.</summary>
    </member>
    <member name="F:Microsoft.VisualBasic.MsgBoxStyle.Critical">
      <summary>Messaggio critico. Questo membro è equivalente alla costante <see langword="vbCritical" />di Visual Basic.</summary>
    </member>
    <member name="F:Microsoft.VisualBasic.MsgBoxStyle.DefaultButton1">
      <summary>Il primo pulsante è quello predefinito. Questo membro è equivalente alla costante <see langword="vbDefaultButton1" />di Visual Basic.</summary>
    </member>
    <member name="F:Microsoft.VisualBasic.MsgBoxStyle.DefaultButton2">
      <summary>Il secondo pulsante è quello predefinito. Questo membro è equivalente alla costante <see langword="vbDefaultButton2" />di Visual Basic.</summary>
    </member>
    <member name="F:Microsoft.VisualBasic.MsgBoxStyle.DefaultButton3">
      <summary>Il terzo pulsante è quello predefinito. Questo membro è equivalente alla costante <see langword="vbDefaultButton3" />di Visual Basic.</summary>
    </member>
    <member name="F:Microsoft.VisualBasic.MsgBoxStyle.Exclamation">
      <summary>Messaggio di avviso. Questo membro è equivalente alla costante <see langword="vbExclamation" />di Visual Basic.</summary>
    </member>
    <member name="F:Microsoft.VisualBasic.MsgBoxStyle.Information">
      <summary>Messaggio informativo. Questo membro è equivalente alla costante <see langword="vbInformation" />di Visual Basic.</summary>
    </member>
    <member name="F:Microsoft.VisualBasic.MsgBoxStyle.MsgBoxHelp">
      <summary>Testo della Guida. Questo membro è equivalente alla costante <see langword="vbMsgBoxHelp" />di Visual Basic.</summary>
    </member>
    <member name="F:Microsoft.VisualBasic.MsgBoxStyle.MsgBoxRight">
      <summary>Testo allineato a destra. Questo membro è equivalente alla costante <see langword="vbMsgBoxRight" />di Visual Basic.</summary>
    </member>
    <member name="F:Microsoft.VisualBasic.MsgBoxStyle.MsgBoxRtlReading">
      <summary>Testo con lettura da destra a sinistra (sistemi ebraico e arabo). Questo membro è equivalente alla costante <see langword="vbMsgBoxRtlReading" />di Visual Basic.</summary>
    </member>
    <member name="F:Microsoft.VisualBasic.MsgBoxStyle.MsgBoxSetForeground">
      <summary>Finestra di messaggio in primo piano. Questo membro è equivalente alla costante <see langword="vbMsgBoxSetForeground" />di Visual Basic.</summary>
    </member>
    <member name="F:Microsoft.VisualBasic.MsgBoxStyle.OkCancel">
      <summary>Pulsanti OK e Annulla. Questo membro è equivalente alla costante <see langword="vbOKCancel" />di Visual Basic.</summary>
    </member>
    <member name="F:Microsoft.VisualBasic.MsgBoxStyle.OkOnly">
      <summary>Solo il pulsante OK (impostazione predefinita). Questo membro è equivalente alla costante <see langword="vbOKOnly" />di Visual Basic.</summary>
    </member>
    <member name="F:Microsoft.VisualBasic.MsgBoxStyle.Question">
      <summary>Query di avviso. Questo membro è equivalente alla costante <see langword="vbQuestion" />di Visual Basic.</summary>
    </member>
    <member name="F:Microsoft.VisualBasic.MsgBoxStyle.RetryCancel">
      <summary>Pulsanti Riprova e Annulla. Questo membro è equivalente alla costante <see langword="vbRetryCancel" />di Visual Basic.</summary>
    </member>
    <member name="F:Microsoft.VisualBasic.MsgBoxStyle.SystemModal">
      <summary>Finestra di messaggio modale del sistema. Questo membro è equivalente alla costante <see langword="vbSystemModal" />di Visual Basic.</summary>
    </member>
    <member name="F:Microsoft.VisualBasic.MsgBoxStyle.YesNo">
      <summary>Pulsanti Sì e No. Questo membro è equivalente alla costante <see langword="vbYesNo" />di Visual Basic.</summary>
    </member>
    <member name="F:Microsoft.VisualBasic.MsgBoxStyle.YesNoCancel">
      <summary>Pulsanti Sì, No e Annulla. Questo membro è equivalente alla costante <see langword="vbYesNoCancel" />di Visual Basic.</summary>
    </member>
    <member name="T:Microsoft.VisualBasic.MyGroupCollectionAttribute">
      <summary>Questo attributo supporta <see langword="My.Forms" /> e <see langword="My.WebServices" /> in Visual Basic.</summary>
    </member>
    <member name="M:Microsoft.VisualBasic.MyGroupCollectionAttribute.#ctor(System.String,System.String,System.String,System.String)">
      <summary>Questo attributo supporta <see langword="My.Forms" /> e <see langword="My.WebServices" /> in Visual Basic.</summary>
      <param name="typeToCollect">
        <see langword="String" />. Inizializza la proprietà <see cref="P:Microsoft.VisualBasic.MyGroupCollectionAttribute.MyGroupName" />. Il compilatore genera le proprietà della funzione di accesso per le classi che derivano da questo tipo.</param>
      <param name="createInstanceMethodName">
        <see langword="String" />. Inizializza la proprietà <see cref="P:Microsoft.VisualBasic.MyGroupCollectionAttribute.CreateMethod" />. Specifica il metodo della classe che crea le istanze del tipo.</param>
      <param name="disposeInstanceMethodName">
        <see langword="String" />. Inizializza la proprietà <see cref="P:Microsoft.VisualBasic.MyGroupCollectionAttribute.DisposeMethod" />. Specifica il metodo della classe che elimina le istanze del tipo.</param>
      <param name="defaultInstanceAlias">
        <see langword="String" />. Inizializza la proprietà <see cref="P:Microsoft.VisualBasic.MyGroupCollectionAttribute.DefaultInstanceAlias" />. Specifica il nome della proprietà che restituisce l'istanza predefinita della classe.</param>
    </member>
    <member name="P:Microsoft.VisualBasic.MyGroupCollectionAttribute.CreateMethod">
      <summary>Questa proprietà supporta <see langword="My" /> in Visual Basic.</summary>
      <returns>Specifica il metodo della classe che crea le istanze del tipo.</returns>
    </member>
    <member name="P:Microsoft.VisualBasic.MyGroupCollectionAttribute.DefaultInstanceAlias">
      <summary>Questa proprietà supporta <see langword="My" /> in Visual Basic.</summary>
      <returns>Specifica il nome della proprietà che restituisce l'istanza predefinita della classe.</returns>
    </member>
    <member name="P:Microsoft.VisualBasic.MyGroupCollectionAttribute.DisposeMethod">
      <summary>Questa proprietà supporta <see langword="My" /> in Visual Basic.</summary>
      <returns>Specifica il metodo della classe che elimina le istanze del tipo.</returns>
    </member>
    <member name="P:Microsoft.VisualBasic.MyGroupCollectionAttribute.MyGroupName">
      <summary>Questa proprietà supporta <see langword="My" /> in Visual Basic.</summary>
      <returns>Specifica il nome del tipo per cui il compilatore genera proprietà della funzione di accesso.</returns>
    </member>
    <member name="T:Microsoft.VisualBasic.OpenAccess">
      <summary>Indica la modalità di apertura del file quando si chiamano le funzioni di accesso ai file.</summary>
    </member>
    <member name="F:Microsoft.VisualBasic.OpenAccess.Default">
      <summary>Accesso in lettura e scrittura autorizzato. Questa è l'impostazione predefinita.</summary>
    </member>
    <member name="F:Microsoft.VisualBasic.OpenAccess.Read">
      <summary>Accesso in lettura autorizzato.</summary>
    </member>
    <member name="F:Microsoft.VisualBasic.OpenAccess.ReadWrite">
      <summary>Accesso in lettura e scrittura autorizzato.</summary>
    </member>
    <member name="F:Microsoft.VisualBasic.OpenAccess.Write">
      <summary>Accesso in scrittura autorizzato.</summary>
    </member>
    <member name="T:Microsoft.VisualBasic.OpenMode">
      <summary>Indica la modalità di apertura del file quando si chiamano le funzioni di accesso ai file.</summary>
    </member>
    <member name="F:Microsoft.VisualBasic.OpenMode.Append">
      <summary>File aperto a cui aggiungere dati. Predefinita.</summary>
    </member>
    <member name="F:Microsoft.VisualBasic.OpenMode.Binary">
      <summary>File aperto per l'accesso binario.</summary>
    </member>
    <member name="F:Microsoft.VisualBasic.OpenMode.Input">
      <summary>File aperto per l'accesso in lettura.</summary>
    </member>
    <member name="F:Microsoft.VisualBasic.OpenMode.Output">
      <summary>File aperto per l'accesso in scrittura.</summary>
    </member>
    <member name="F:Microsoft.VisualBasic.OpenMode.Random">
      <summary>File aperto per l'accesso casuale.</summary>
    </member>
    <member name="T:Microsoft.VisualBasic.OpenShare">
      <summary>Indica la modalità di apertura del file quando si chiamano le funzioni di accesso ai file.</summary>
    </member>
    <member name="F:Microsoft.VisualBasic.OpenShare.Default">
      <summary>
        <see langword="LockReadWrite" /> Questa è l'impostazione predefinita.</summary>
    </member>
    <member name="F:Microsoft.VisualBasic.OpenShare.LockRead">
      <summary>Altri processi non possono leggere il file.</summary>
    </member>
    <member name="F:Microsoft.VisualBasic.OpenShare.LockReadWrite">
      <summary>Altri processi non possono leggere o scrivere nel file.</summary>
    </member>
    <member name="F:Microsoft.VisualBasic.OpenShare.LockWrite">
      <summary>Altri processi non possono scrivere nel file.</summary>
    </member>
    <member name="F:Microsoft.VisualBasic.OpenShare.Shared">
      <summary>Altri processi non possono leggere o scrivere nel file.</summary>
    </member>
    <member name="T:Microsoft.VisualBasic.SpcInfo">
      <summary>Questa classe supporta le funzioni <see langword="Print" /> e <see langword="PrintLine" /> di Visual Basic.</summary>
    </member>
    <member name="F:Microsoft.VisualBasic.SpcInfo.Count">
      <summary>Questo campo supporta le funzioni <see langword="Print" /> e <see langword="PrintLine" /> di Visual Basic.</summary>
    </member>
    <member name="T:Microsoft.VisualBasic.Strings">
      <summary>Il modulo <see langword="Strings" /> contiene procedure che consentono di eseguire operazioni sulle stringhe.</summary>
    </member>
    <member name="M:Microsoft.VisualBasic.Strings.Asc(System.Char)">
      <summary>Restituisce un valore Integer che rappresenta il codice corrispondente a un carattere.</summary>
      <param name="String">Obbligatorio. Qualsiasi espressione <see langword="Char" /> o <see langword="String" /> valida. Se <paramref name="String" /> è un'espressione <see langword="String" />, per l'input viene utilizzato solo il primo carattere della stringa. Se <paramref name="String" /> è <see langword="Nothing" /> o non contiene caratteri, si verifica un errore <see cref="T:System.ArgumentException" />.</param>
      <returns>Codice carattere corrispondente a un carattere.</returns>
    </member>
    <member name="M:Microsoft.VisualBasic.Strings.Asc(System.String)">
      <summary>Restituisce un valore Integer che rappresenta il codice corrispondente a un carattere.</summary>
      <param name="String">Obbligatorio. Qualsiasi espressione <see langword="Char" /> o <see langword="String" /> valida. Se <paramref name="String" /> è un'espressione <see langword="String" />, per l'input viene utilizzato solo il primo carattere della stringa. Se <paramref name="String" /> è <see langword="Nothing" /> o non contiene caratteri, si verifica un errore <see cref="T:System.ArgumentException" />.</param>
      <returns>Codice carattere corrispondente a un carattere.</returns>
    </member>
    <member name="M:Microsoft.VisualBasic.Strings.AscW(System.Char)">
      <summary>Restituisce un valore Integer che rappresenta il codice corrispondente a un carattere.</summary>
      <param name="String">Obbligatorio. Qualsiasi espressione <see langword="Char" /> o <see langword="String" /> valida. Se <paramref name="String" /> è un'espressione <see langword="String" />, per l'input viene utilizzato solo il primo carattere della stringa. Se <paramref name="String" /> è <see langword="Nothing" /> o non contiene caratteri, si verifica un errore <see cref="T:System.ArgumentException" />.</param>
      <returns>Codice carattere corrispondente a un carattere.</returns>
    </member>
    <member name="M:Microsoft.VisualBasic.Strings.AscW(System.String)">
      <summary>Restituisce un valore Integer che rappresenta il codice corrispondente a un carattere.</summary>
      <param name="String">Obbligatorio. Qualsiasi espressione <see langword="Char" /> o <see langword="String" /> valida. Se <paramref name="String" /> è un'espressione <see langword="String" />, per l'input viene utilizzato solo il primo carattere della stringa. Se <paramref name="String" /> è <see langword="Nothing" /> o non contiene caratteri, si verifica un errore <see cref="T:System.ArgumentException" />.</param>
      <returns>Codice carattere corrispondente a un carattere.</returns>
    </member>
    <member name="M:Microsoft.VisualBasic.Strings.Chr(System.Int32)">
      <summary>Restituisce il carattere associato al codice carattere specificato.</summary>
      <param name="CharCode">Obbligatorio. Espressione <see langword="Integer" /> che rappresenta il <c>punto di codice</c> o il codice carattere del carattere.</param>
      <exception cref="T:System.ArgumentException">
        <paramref name="CharCode" /> &lt; 0 o &gt; 255 per <see langword="Chr" />.</exception>
      <returns>Carattere associato al codice carattere specificato.</returns>
    </member>
    <member name="M:Microsoft.VisualBasic.Strings.ChrW(System.Int32)">
      <summary>Restituisce il carattere associato al codice carattere specificato.</summary>
      <param name="CharCode">Obbligatorio. Espressione <see langword="Integer" /> che rappresenta il <c>punto di codice</c> o il codice carattere del carattere.</param>
      <exception cref="T:System.ArgumentException">
        <paramref name="CharCode" /> &lt; -32768 o &gt; 65535 per <see langword="ChrW" />.</exception>
      <returns>Carattere associato al codice carattere specificato.</returns>
    </member>
    <member name="M:Microsoft.VisualBasic.Strings.Filter(System.Object[],System.String,System.Boolean,Microsoft.VisualBasic.CompareMethod)">
      <summary>Restituisce una matrice con indice in base zero che contiene un sottoinsieme di una matrice <see langword="String" /> definito in base ai criteri di filtro specificati.</summary>
      <param name="Source">Obbligatorio. Matrice unidimensionale delle stringhe da cercare.</param>
      <param name="Match">Obbligatorio. Stringa da cercare.</param>
      <param name="Include">facoltativo. Valore <see langword="Boolean" /> che indica se restituire sottostringhe che includono o escludono il parametro <paramref name="Match" />. Se <paramref name="Include" /> è <see langword="True" />, la funzione <see langword="Filter" /> restituisce il sottoinsieme della matrice che contiene <paramref name="Match" /> in formato di sottostringa. Se <paramref name="Include" /> è <see langword="False" />, la funzione <see langword="Filter" /> restituisce il sottoinsieme della matrice che non contiene <paramref name="Match" /> in formato di sottostringa.</param>
      <param name="Compare">facoltativo. Valore numerico che indica il tipo di confronto da utilizzare per le stringhe. Per un elenco dei valori possibili, vedere "Impostazioni".</param>
      <exception cref="T:System.ArgumentException">
        <paramref name="Source" /> è <see langword="Nothing" /> oppure non è una matrice unidimensionale.</exception>
      <returns>Matrice in base zero contenente un subset di una matrice <see langword="String" /> sulla base di criteri di filtro specificati.</returns>
    </member>
    <member name="M:Microsoft.VisualBasic.Strings.Filter(System.String[],System.String,System.Boolean,Microsoft.VisualBasic.CompareMethod)">
      <summary>Restituisce una matrice con indice in base zero che contiene un sottoinsieme di una matrice <see langword="String" /> definito in base ai criteri di filtro specificati.</summary>
      <param name="Source">Obbligatorio. Matrice unidimensionale delle stringhe da cercare.</param>
      <param name="Match">Obbligatorio. Stringa da cercare.</param>
      <param name="Include">facoltativo. Valore <see langword="Boolean" /> che indica se restituire sottostringhe che includono o escludono il parametro <paramref name="Match" />. Se <paramref name="Include" /> è <see langword="True" />, la funzione <see langword="Filter" /> restituisce il sottoinsieme della matrice che contiene <paramref name="Match" /> in formato di sottostringa. Se <paramref name="Include" /> è <see langword="False" />, la funzione <see langword="Filter" /> restituisce il sottoinsieme della matrice che non contiene <paramref name="Match" /> in formato di sottostringa.</param>
      <param name="Compare">facoltativo. Valore numerico che indica il tipo di confronto da utilizzare per le stringhe. Per un elenco dei valori possibili, vedere "Impostazioni".</param>
      <exception cref="T:System.ArgumentException">
        <paramref name="Source" /> è <see langword="Nothing" /> oppure non è una matrice unidimensionale.</exception>
      <returns>Matrice in base zero contenente un subset di una matrice <see langword="String" /> sulla base di criteri di filtro specificati.</returns>
    </member>
    <member name="M:Microsoft.VisualBasic.Strings.Format(System.Object,System.String)">
      <summary>Restituisce una stringa formattata in base alle istruzioni contenute in un'espressione <see langword="String" /> di formato.</summary>
      <param name="Expression">Obbligatorio. Qualsiasi espressione valida.</param>
      <param name="Style">facoltativo. Un'espressione <see langword="String" /> di formato denominata o definita dall'utente valida.</param>
      <returns>Stringa formattata in base alle istruzioni contenute in un'espressione <see langword="String" /> di formato.</returns>
    </member>
    <member name="M:Microsoft.VisualBasic.Strings.FormatCurrency(System.Object,System.Int32,Microsoft.VisualBasic.TriState,Microsoft.VisualBasic.TriState,Microsoft.VisualBasic.TriState)">
      <summary>Restituisce un'espressione nel formato valore di valuta utilizzando il simbolo di valuta impostato nel Pannello di controllo del sistema.</summary>
      <param name="Expression">Obbligatorio. Espressione da formattare.</param>
      <param name="NumDigitsAfterDecimal">facoltativo. Valore numerico che indica quante cifre vengono visualizzate a destra del segno decimale. Il valore predefinito è -1, che indica che vengono usate le impostazioni internazionali del computer.</param>
      <param name="IncludeLeadingDigit">facoltativo. Enumerazione <see cref="T:Microsoft.VisualBasic.TriState" /> che indica se visualizzare o meno uno zero iniziale per i valori frazionari. Per informazioni sui valori, vedere la sezione "Osservazioni".</param>
      <param name="UseParensForNegativeNumbers">facoltativo. Enumerazione <see cref="T:Microsoft.VisualBasic.TriState" /> che indica se racchiudere i valori negativi tra parentesi. Per informazioni sui valori, vedere la sezione "Osservazioni".</param>
      <param name="GroupDigits">facoltativo. Enumerazione <see cref="T:Microsoft.VisualBasic.TriState" /> che indica se raggruppare i numeri utilizzando il delimitatore di gruppo specificato nelle impostazioni internazionali del computer. Per informazioni sui valori, vedere la sezione "Osservazioni".</param>
      <exception cref="T:System.ArgumentException">Il numero di cifre dopo il separatore decimale è maggiore di 99.</exception>
      <exception cref="T:System.InvalidCastException">Tipo non numerico.</exception>
      <returns>Espressione formattata come valore di valuta usando il simbolo di valuta definito nel pannello di controllo del sistema.</returns>
    </member>
    <member name="M:Microsoft.VisualBasic.Strings.FormatDateTime(System.DateTime,Microsoft.VisualBasic.DateFormat)">
      <summary>Restituisce un'espressione stringa che rappresenta un valore data/ora.</summary>
      <param name="Expression">Obbligatorio. Espressione <see langword="Date" /> da formattare.</param>
      <param name="NamedFormat">facoltativo. Valore numerico che indica il formato di data e ora utilizzato. Se omesso, viene utilizzato <see langword="DateFormat.GeneralDate" />.</param>
      <exception cref="T:System.ArgumentException">L'impostazione <paramref name="NamedFormat" /> non è valida.</exception>
      <returns>Espressione stringa che rappresenta un valore data/ora.</returns>
    </member>
    <member name="M:Microsoft.VisualBasic.Strings.FormatNumber(System.Object,System.Int32,Microsoft.VisualBasic.TriState,Microsoft.VisualBasic.TriState,Microsoft.VisualBasic.TriState)">
      <summary>Restituisce un'espressione in formato di numero.</summary>
      <param name="Expression">Obbligatorio. Espressione da formattare.</param>
      <param name="NumDigitsAfterDecimal">facoltativo. Valore numerico che indica quante cifre vengono visualizzate a destra del segno decimale. Il valore predefinito è -1, che indica che vengono utilizzate le impostazioni internazionali del computer.</param>
      <param name="IncludeLeadingDigit">facoltativo. Costante <see cref="T:Microsoft.VisualBasic.TriState" /> che indica se visualizzare uno zero iniziale per i valori frazionari. Per un elenco dei valori possibili, vedere "Impostazioni".</param>
      <param name="UseParensForNegativeNumbers">facoltativo. Costante <see cref="T:Microsoft.VisualBasic.TriState" /> che indica se racchiudere i valori negativi tra parentesi. Per un elenco dei valori possibili, vedere "Impostazioni".</param>
      <param name="GroupDigits">facoltativo. Costante <see cref="T:Microsoft.VisualBasic.TriState" /> che consente di specificare se raggruppare o meno i numeri usando il carattere di delimitazione di gruppo specificato nelle impostazioni locali. Per un elenco dei valori possibili, vedere "Impostazioni".</param>
      <exception cref="T:System.InvalidCastException">Tipo non numerico.</exception>
      <returns>Espressione formattata come numero.</returns>
    </member>
    <member name="M:Microsoft.VisualBasic.Strings.FormatPercent(System.Object,System.Int32,Microsoft.VisualBasic.TriState,Microsoft.VisualBasic.TriState,Microsoft.VisualBasic.TriState)">
      <summary>Restituisce un'espressione formattata come percentuale (ovvero moltiplicata per 100) con un carattere % finale.</summary>
      <param name="Expression">Obbligatorio. Espressione da formattare.</param>
      <param name="NumDigitsAfterDecimal">facoltativo. Valore numerico che indica il numero di cifre da visualizzare a destra del separatore decimale. Il valore predefinito -1 indica che vengono usate le impostazioni locali.</param>
      <param name="IncludeLeadingDigit">facoltativo. Costante <see cref="T:Microsoft.VisualBasic.TriState" /> che consente di specificare se visualizzare o meno uno zero davanti ai valori frazionari. Per un elenco dei valori possibili, vedere "Impostazioni".</param>
      <param name="UseParensForNegativeNumbers">facoltativo. Costante <see cref="T:Microsoft.VisualBasic.TriState" /> che consente di specificare se racchiudere o meno i valori negativi tra parentesi. Per un elenco dei valori possibili, vedere "Impostazioni".</param>
      <param name="GroupDigits">facoltativo. Costante <see cref="T:Microsoft.VisualBasic.TriState" /> che consente di specificare se raggruppare o meno i numeri usando il carattere di delimitazione di gruppo specificato nelle impostazioni locali. Per un elenco dei valori possibili, vedere "Impostazioni".</param>
      <exception cref="T:System.InvalidCastException">Tipo non numerico.</exception>
      <returns>Espressione formattata come percentuale (ovvero moltiplicata per 100) con un carattere % finale.</returns>
    </member>
    <member name="M:Microsoft.VisualBasic.Strings.GetChar(System.String,System.Int32)">
      <summary>Restituisce un valore <see langword="Char" /> che rappresenta il carattere dell'indice specificato nella stringa fornita.</summary>
      <param name="str">Obbligatorio. Qualsiasi espressione <see langword="String" /> valida.</param>
      <param name="Index">Obbligatorio. Espressione <see langword="Integer" />. L'indice (in base 1) del carattere di <paramref name="str" /> da restituire.</param>
      <exception cref="T:System.ArgumentException">
        <paramref name="str" /> è <see langword="Nothing" />, <paramref name="Index" /> &lt; 1 o <paramref name="Index" /> è maggiore dell'indice dell'ultimo carattere di <paramref name="str" />.</exception>
      <returns>Valore <see langword="Char" /> che rappresenta il carattere dell'indice specificato nella stringa fornita.</returns>
    </member>
    <member name="M:Microsoft.VisualBasic.Strings.InStr(System.Int32,System.String,System.String,Microsoft.VisualBasic.CompareMethod)">
      <summary>Restituisce un Integer che specifica la posizione di inizio della prima occorrenza di una stringa in un'altra.</summary>
      <param name="StartPos" />
      <param name="String1">Obbligatorio. Espressione <see langword="String" /> in cui cercare.</param>
      <param name="String2">Obbligatorio. Espressione <see langword="String" /> cercata.</param>
      <param name="Compare">facoltativo. Specifica il tipo di confronto delle stringhe. Se <paramref name="Compare" /> viene omesso, il tipo di confronto viene determinato dall'impostazione di <see langword="Option Compare" />.</param>
      <exception cref="T:System.ArgumentException">
        <paramref name="Start" /> &lt; 1.</exception>
      <returns>
        <list type="table">
          <listheader>
            <term>Se</term>
            <description>InStr restituirà</description>
          </listheader>
          <item>
            <term>
              <paramref name="String1" /> è di lunghezza zero o <see langword="Nothing" /></term>
            <description>0</description>
          </item>
          <item>
            <term>
              <paramref name="String2" /> è di lunghezza zero o <see langword="Nothing" /></term>
            <description>
              <paramref name="start" />
            </description>
          </item>
          <item>
            <term>
              <paramref name="String2" /> non trovato.</term>
            <description>0</description>
          </item>
          <item>
            <term>
              <paramref name="String2" /> si trova all'interno di <paramref name="String1" />.</term>
            <description> La posizione di inizio della corrispondenza</description>
          </item>
          <item>
            <term>
              <paramref name="Start" /> &gt; lunghezza di <paramref name="String1" /></term>
            <description>0</description>
          </item>
        </list>
      </returns>
    </member>
    <member name="M:Microsoft.VisualBasic.Strings.InStr(System.String,System.String,Microsoft.VisualBasic.CompareMethod)">
      <summary>Restituisce un Integer che specifica la posizione di inizio della prima occorrenza di una stringa in un'altra.</summary>
      <param name="String1">Obbligatorio. Espressione <see langword="String" /> in cui cercare.</param>
      <param name="String2">Obbligatorio. Espressione <see langword="String" /> cercata.</param>
      <param name="Compare">facoltativo. Specifica il tipo di confronto delle stringhe. Se <paramref name="Compare" /> viene omesso, il tipo di confronto viene determinato dall'impostazione di <see langword="Option Compare" />.</param>
      <returns>
        <list type="table">
          <listheader>
            <term>Se</term>
            <description>InStr restituirà</description>
          </listheader>
          <item>
            <term>
              <paramref name="String1" /> è di lunghezza zero o <see langword="Nothing" /></term>
            <description>0</description>
          </item>
          <item>
            <term>
              <paramref name="String2" /> è di lunghezza zero o <see langword="Nothing" /></term>
            <description>Posizione iniziale per la ricerca, che viene impostata come predefinita in corrispondenza del primo carattere.</description>
          </item>
          <item>
            <term>
              <paramref name="String2" /> non trovato.</term>
            <description>0</description>
          </item>
          <item>
            <term>
              <paramref name="String2" /> si trova all'interno di <paramref name="String1" />.</term>
            <description>Posizione di inizio della corrispondenza.</description>
          </item>
        </list>
      </returns>
    </member>
    <member name="M:Microsoft.VisualBasic.Strings.InStrRev(System.String,System.String,System.Int32,Microsoft.VisualBasic.CompareMethod)">
      <summary>Restituisce la posizione della prima occorrenza di una stringa inclusa in un'altra a partire dalla destra della stringa.</summary>
      <param name="StringCheck">Obbligatorio. Espressione String da cercare.</param>
      <param name="StringMatch">Obbligatorio. Espressione String da cercare.</param>
      <param name="Start">facoltativo. Espressione numerica che imposta la posizione iniziale in base 1 di ogni ricerca, a partire dal lato sinistro della stringa. Se <paramref name="Start" /> viene omesso, viene usato -1, a indicare che la ricerca inizia dalla posizione dell'ultimo carattere. La ricerca procede quindi da destra a sinistra.</param>
      <param name="Compare">facoltativo. Valore numerico che indica il tipo di confronto da utilizzare per la valutazione delle sottostringhe. Se omesso, viene eseguito un confronto binario. Per informazioni sui valori, vedere "Impostazioni".</param>
      <exception cref="T:System.ArgumentException">
        <paramref name="Start" /> = 0 o <paramref name="Start" /> &lt; -1.</exception>
      <returns>
        <list type="table">
          <listheader>
            <term>Se</term>
            <description>InStrRev restituirà</description>
          </listheader>
          <item>
            <term>
              <paramref name="StringCheck" /> è di lunghezza zero</term>
            <description>0</description>
          </item>
          <item>
            <term>
              <paramref name="StringMatch" /> è di lunghezza zero</term>
            <description>
              <paramref name="Start" />
            </description>
          </item>
          <item>
            <term>
              <paramref name="StringMatch" /> non trovato.</term>
            <description>0</description>
          </item>
          <item>
            <term>
              <paramref name="StringMatch" /> si trova all'interno di <paramref name="StringCheck" />.</term>
            <description>La posizione della prima corrispondenza, iniziando dalla destra della stringa.</description>
          </item>
          <item>
            <term>
              <paramref name="Start" /> è maggiore della lunghezza di <paramref name="StringMatch" />.</term>
            <description>0</description>
          </item>
        </list>
      </returns>
    </member>
    <member name="M:Microsoft.VisualBasic.Strings.Join(System.Object[],System.String)">
      <summary>Restituisce una stringa creata unendo un certo numero di sottostringhe di una matrice.</summary>
      <param name="SourceArray">Obbligatorio. Matrice unidimensionale di sottostringhe da unire.</param>
      <param name="Delimiter">facoltativo. Qualsiasi stringa, utilizzata per separare le sottostringhe nella stringa restituita. Se omesso, viene utilizzato il carattere spazio (" "). Se <paramref name="Delimiter" /> è una stringa di lunghezza zero ("") o <see langword="Nothing" />, tutti gli elementi dell'elenco vengono concatenati senza delimitatori.</param>
      <exception cref="T:System.ArgumentException">
        <paramref name="SourceArray" /> non è unidimensionale.</exception>
      <returns>Stringa creata unendo un certo numero di sottostringhe contenute in una matrice.</returns>
    </member>
    <member name="M:Microsoft.VisualBasic.Strings.Join(System.String[],System.String)">
      <summary>Restituisce una stringa creata unendo un certo numero di sottostringhe di una matrice.</summary>
      <param name="SourceArray">Obbligatorio. Matrice unidimensionale di sottostringhe da unire.</param>
      <param name="Delimiter">facoltativo. Qualsiasi stringa, utilizzata per separare le sottostringhe nella stringa restituita. Se omesso, viene utilizzato il carattere spazio (" "). Se <paramref name="Delimiter" /> è una stringa di lunghezza zero ("") o <see langword="Nothing" />, tutti gli elementi dell'elenco vengono concatenati senza delimitatori.</param>
      <exception cref="T:System.ArgumentException">
        <paramref name="SourceArray" /> non è unidimensionale.</exception>
      <returns>Stringa creata unendo un certo numero di sottostringhe contenute in una matrice.</returns>
    </member>
    <member name="M:Microsoft.VisualBasic.Strings.LCase(System.Char)">
      <summary>Restituisce una stringa o un carattere convertito in minuscolo.</summary>
      <param name="Value">Obbligatorio. Qualsiasi espressione <see langword="String" /> o <see langword="Char" /> valida.</param>
      <returns>Stringa o carattere convertito in minuscolo.</returns>
    </member>
    <member name="M:Microsoft.VisualBasic.Strings.LCase(System.String)">
      <summary>Restituisce una stringa o un carattere convertito in minuscolo.</summary>
      <param name="Value">Obbligatorio. Qualsiasi espressione <see langword="String" /> o <see langword="Char" /> valida.</param>
      <returns>Stringa o carattere convertito in minuscolo.</returns>
    </member>
    <member name="M:Microsoft.VisualBasic.Strings.Left(System.String,System.Int32)">
      <summary>Restituisce una stringa contenente un numero specificato di caratteri a partire dal lato sinistro di una stringa.</summary>
      <param name="str">Obbligatorio. Espressione <see langword="String" /> da cui vengono restituiti i primi caratteri a sinistra.</param>
      <param name="Length">Obbligatorio. Espressione <see langword="Integer" />. Espressione numerica che indica quanti caratteri restituire. Se 0, viene restituita una stringa di lunghezza zero (""). Se maggiore o uguale al numero di caratteri di <paramref name="str" />, viene restituita l'intera stringa.</param>
      <exception cref="T:System.ArgumentException">
        <paramref name="Length" /> &lt; 0.</exception>
      <returns>Stringa contenente un numero specificato di caratteri a partire dal lato sinistro di una stringa.</returns>
    </member>
    <member name="M:Microsoft.VisualBasic.Strings.Len(System.Boolean)">
      <summary>Restituisce un valore intero contenente il numero di caratteri di una stringa o il numero nominale di byte richiesti per archiviare una variabile.</summary>
      <param name="Expression">Qualsiasi espressione <see langword="String" /> o nome di variabile valido. Se <paramref name="Expression" /> è di tipo <see langword="Object" />, la funzione <see langword="Len" /> restituisce la dimensione così come verrà scritta nel file dalla funzione <see langword="FilePut" />.</param>
      <returns>Valore Integer contenente il numero di caratteri in una stringa o il numero nominale di byte richiesti per archiviare una variabile.</returns>
    </member>
    <member name="M:Microsoft.VisualBasic.Strings.Len(System.Byte)">
      <summary>Restituisce un valore intero contenente il numero di caratteri di una stringa o il numero nominale di byte richiesti per archiviare una variabile.</summary>
      <param name="Expression">Qualsiasi espressione <see langword="String" /> o nome di variabile valido. Se <paramref name="Expression" /> è di tipo <see langword="Object" />, la funzione <see langword="Len" /> restituisce la dimensione così come verrà scritta nel file dalla funzione <see langword="FilePut" />.</param>
      <returns>Valore Integer contenente il numero di caratteri in una stringa o il numero nominale di byte richiesti per archiviare una variabile.</returns>
    </member>
    <member name="M:Microsoft.VisualBasic.Strings.Len(System.Char)">
      <summary>Restituisce un valore intero contenente il numero di caratteri di una stringa o il numero nominale di byte richiesti per archiviare una variabile.</summary>
      <param name="Expression">Qualsiasi espressione <see langword="String" /> o nome di variabile valido. Se <paramref name="Expression" /> è di tipo <see langword="Object" />, la funzione <see langword="Len" /> restituisce la dimensione così come verrà scritta nel file dalla funzione <see langword="FilePut" />.</param>
      <returns>Valore Integer contenente il numero di caratteri in una stringa o il numero nominale di byte richiesti per archiviare una variabile.</returns>
    </member>
    <member name="M:Microsoft.VisualBasic.Strings.Len(System.DateTime)">
      <summary>Restituisce un valore intero contenente il numero di caratteri di una stringa o il numero nominale di byte richiesti per archiviare una variabile.</summary>
      <param name="Expression">Qualsiasi espressione <see langword="String" /> o nome di variabile valido. Se <paramref name="Expression" /> è di tipo <see langword="Object" />, la funzione <see langword="Len" /> restituisce la dimensione così come verrà scritta nel file dalla funzione <see langword="FilePut" />.</param>
      <returns>Valore Integer contenente il numero di caratteri in una stringa o il numero nominale di byte richiesti per archiviare una variabile.</returns>
    </member>
    <member name="M:Microsoft.VisualBasic.Strings.Len(System.Decimal)">
      <summary>Restituisce un valore intero contenente il numero di caratteri di una stringa o il numero nominale di byte richiesti per archiviare una variabile.</summary>
      <param name="Expression">Qualsiasi espressione <see langword="String" /> o nome di variabile valido. Se <paramref name="Expression" /> è di tipo <see langword="Object" />, la funzione <see langword="Len" /> restituisce la dimensione così come verrà scritta nel file dalla funzione <see langword="FilePut" />.</param>
      <returns>Valore Integer contenente il numero di caratteri in una stringa o il numero nominale di byte richiesti per archiviare una variabile.</returns>
    </member>
    <member name="M:Microsoft.VisualBasic.Strings.Len(System.Double)">
      <summary>Restituisce un valore intero contenente il numero di caratteri di una stringa o il numero nominale di byte richiesti per archiviare una variabile.</summary>
      <param name="Expression">Qualsiasi espressione <see langword="String" /> o nome di variabile valido. Se <paramref name="Expression" /> è di tipo <see langword="Object" />, la funzione <see langword="Len" /> restituisce la dimensione così come verrà scritta nel file dalla funzione <see langword="FilePut" />.</param>
      <returns>Valore Integer contenente il numero di caratteri in una stringa o il numero nominale di byte richiesti per archiviare una variabile.</returns>
    </member>
    <member name="M:Microsoft.VisualBasic.Strings.Len(System.Int16)">
      <summary>Restituisce un valore intero contenente il numero di caratteri di una stringa o il numero nominale di byte richiesti per archiviare una variabile.</summary>
      <param name="Expression">Qualsiasi espressione <see langword="String" /> o nome di variabile valido. Se <paramref name="Expression" /> è di tipo <see langword="Object" />, la funzione <see langword="Len" /> restituisce la dimensione così come verrà scritta nel file dalla funzione <see langword="FilePut" />.</param>
      <returns>Valore Integer contenente il numero di caratteri in una stringa o il numero nominale di byte richiesti per archiviare una variabile.</returns>
    </member>
    <member name="M:Microsoft.VisualBasic.Strings.Len(System.Int32)">
      <summary>Restituisce un valore intero contenente il numero di caratteri di una stringa o il numero nominale di byte richiesti per archiviare una variabile.</summary>
      <param name="Expression">Qualsiasi espressione <see langword="String" /> o nome di variabile valido. Se <paramref name="Expression" /> è di tipo <see langword="Object" />, la funzione <see langword="Len" /> restituisce la dimensione così come verrà scritta nel file dalla funzione <see langword="FilePut" />.</param>
      <returns>Valore Integer contenente il numero di caratteri in una stringa o il numero nominale di byte richiesti per archiviare una variabile.</returns>
    </member>
    <member name="M:Microsoft.VisualBasic.Strings.Len(System.Int64)">
      <summary>Restituisce un valore intero contenente il numero di caratteri di una stringa o il numero nominale di byte richiesti per archiviare una variabile.</summary>
      <param name="Expression">Qualsiasi espressione <see langword="String" /> o nome di variabile valido. Se <paramref name="Expression" /> è di tipo <see langword="Object" />, la funzione <see langword="Len" /> restituisce la dimensione così come verrà scritta nel file dalla funzione <see langword="FilePut" />.</param>
      <returns>Valore Integer contenente il numero di caratteri in una stringa o il numero nominale di byte richiesti per archiviare una variabile.</returns>
    </member>
    <member name="M:Microsoft.VisualBasic.Strings.Len(System.Object)">
      <summary>Restituisce un valore intero contenente il numero di caratteri di una stringa o il numero nominale di byte richiesti per archiviare una variabile.</summary>
      <param name="Expression">Qualsiasi espressione <see langword="String" /> o nome di variabile valido. Se <paramref name="Expression" /> è di tipo <see langword="Object" />, la funzione <see langword="Len" /> restituisce la dimensione così come verrà scritta nel file dalla funzione <see langword="FilePut" />.</param>
      <returns>Valore Integer contenente il numero di caratteri in una stringa o il numero nominale di byte richiesti per archiviare una variabile.</returns>
    </member>
    <member name="M:Microsoft.VisualBasic.Strings.Len(System.SByte)">
      <summary>Restituisce un valore intero contenente il numero di caratteri di una stringa o il numero nominale di byte richiesti per archiviare una variabile.</summary>
      <param name="Expression">Qualsiasi espressione <see langword="String" /> o nome di variabile valido. Se <paramref name="Expression" /> è di tipo <see langword="Object" />, la funzione <see langword="Len" /> restituisce la dimensione così come verrà scritta nel file dalla funzione <see langword="FilePut" />.</param>
      <returns>Valore Integer contenente il numero di caratteri in una stringa o il numero nominale di byte richiesti per archiviare una variabile.</returns>
    </member>
    <member name="M:Microsoft.VisualBasic.Strings.Len(System.Single)">
      <summary>Restituisce un valore intero contenente il numero di caratteri di una stringa o il numero nominale di byte richiesti per archiviare una variabile.</summary>
      <param name="Expression">Qualsiasi espressione <see langword="String" /> o nome di variabile valido. Se <paramref name="Expression" /> è di tipo <see langword="Object" />, la funzione <see langword="Len" /> restituisce la dimensione così come verrà scritta nel file dalla funzione <see langword="FilePut" />.</param>
      <returns>Valore Integer contenente il numero di caratteri in una stringa o il numero nominale di byte richiesti per archiviare una variabile.</returns>
    </member>
    <member name="M:Microsoft.VisualBasic.Strings.Len(System.String)">
      <summary>Restituisce un valore intero contenente il numero di caratteri di una stringa o il numero nominale di byte richiesti per archiviare una variabile.</summary>
      <param name="Expression">Qualsiasi espressione <see langword="String" /> o nome di variabile valido. Se <paramref name="Expression" /> è di tipo <see langword="Object" />, la funzione <see langword="Len" /> restituisce la dimensione così come verrà scritta nel file dalla funzione <see langword="FilePut" />.</param>
      <returns>Valore Integer contenente il numero di caratteri in una stringa o il numero nominale di byte richiesti per archiviare una variabile.</returns>
    </member>
    <member name="M:Microsoft.VisualBasic.Strings.Len(System.UInt16)">
      <summary>Restituisce un valore intero contenente il numero di caratteri di una stringa o il numero nominale di byte richiesti per archiviare una variabile.</summary>
      <param name="Expression">Qualsiasi espressione <see langword="String" /> o nome di variabile valido. Se <paramref name="Expression" /> è di tipo <see langword="Object" />, la funzione <see langword="Len" /> restituisce la dimensione così come verrà scritta nel file dalla funzione <see langword="FilePut" />.</param>
      <returns>Valore Integer contenente il numero di caratteri in una stringa o il numero nominale di byte richiesti per archiviare una variabile.</returns>
    </member>
    <member name="M:Microsoft.VisualBasic.Strings.Len(System.UInt32)">
      <summary>Restituisce un valore intero contenente il numero di caratteri di una stringa o il numero nominale di byte richiesti per archiviare una variabile.</summary>
      <param name="Expression">Qualsiasi espressione <see langword="String" /> o nome di variabile valido. Se <paramref name="Expression" /> è di tipo <see langword="Object" />, la funzione <see langword="Len" /> restituisce la dimensione così come verrà scritta nel file dalla funzione <see langword="FilePut" />.</param>
      <returns>Valore Integer contenente il numero di caratteri in una stringa o il numero nominale di byte richiesti per archiviare una variabile.</returns>
    </member>
    <member name="M:Microsoft.VisualBasic.Strings.Len(System.UInt64)">
      <summary>Restituisce un valore intero contenente il numero di caratteri di una stringa o il numero nominale di byte richiesti per archiviare una variabile.</summary>
      <param name="Expression">Qualsiasi espressione <see langword="String" /> o nome di variabile valido. Se <paramref name="Expression" /> è di tipo <see langword="Object" />, la funzione <see langword="Len" /> restituisce la dimensione così come verrà scritta nel file dalla funzione <see langword="FilePut" />.</param>
      <returns>Valore Integer contenente il numero di caratteri in una stringa o il numero nominale di byte richiesti per archiviare una variabile.</returns>
    </member>
    <member name="M:Microsoft.VisualBasic.Strings.LSet(System.String,System.Int32)">
      <summary>Restituisce una stringa allineata a sinistra contenente la stringa specificata adeguata alla lunghezza specificata.</summary>
      <param name="Source">Obbligatorio. Espressione <see langword="String" />. Nome della variabile String.</param>
      <param name="Length">Obbligatorio. Espressione <see langword="Integer" />. Lunghezza della stringa restituita.</param>
      <returns>Stringa allineata a sinistra contenente la stringa specificata adeguata alla lunghezza specificata.</returns>
    </member>
    <member name="M:Microsoft.VisualBasic.Strings.LTrim(System.String)">
      <summary>Restituisce una stringa contenente una copia di una stringa specificata senza spazi iniziali (<see langword="LTrim" />), senza spazi finali (<see langword="RTrim" />) o senza spazi iniziali o finali (<see langword="Trim" />).</summary>
      <param name="str">Obbligatorio. Qualsiasi espressione <see langword="String" /> valida.</param>
      <returns>Stringa contenente una copia di una stringa specificata senza spazi iniziali (<see langword="LTrim" />), senza spazi finali (<see langword="RTrim" />) o senza spazi iniziali o finali (<see langword="Trim" />).</returns>
    </member>
    <member name="M:Microsoft.VisualBasic.Strings.Mid(System.String,System.Int32)">
      <summary>Restituisce una stringa che contiene tutti i caratteri a partire da una posizione specificata in una stringa.</summary>
      <param name="str">Obbligatorio. Espressione <see langword="String" /> da cui vengono restituiti i caratteri.</param>
      <param name="Start">Obbligatorio. Espressione <see langword="Integer" />. Posizione iniziale dei caratteri da restituire. Se <paramref name="Start" /> è maggiore del numero di caratteri di <paramref name="str" />, la funzione <see langword="Mid" /> restituisce una stringa di lunghezza zero (""). Il parametro <paramref name="Start" /> è in base uno.</param>
      <exception cref="T:System.ArgumentException">
        <paramref name="Start" /> &lt;= 0 o <paramref name="Length" /> &lt; 0.</exception>
      <returns>Una stringa che consiste di tutti i caratteri a partire dalla posizione specificata nella stringa.</returns>
    </member>
    <member name="M:Microsoft.VisualBasic.Strings.Mid(System.String,System.Int32,System.Int32)">
      <summary>Restituisce una stringa che contiene un numero specificato di caratteri a partire da una posizione specificata in una stringa.</summary>
      <param name="str">Obbligatorio. Espressione <see langword="String" /> da cui vengono restituiti i caratteri.</param>
      <param name="Start">Obbligatorio. Espressione <see langword="Integer" />. Posizione iniziale dei caratteri da restituire. Se <paramref name="Start" /> è maggiore del numero di caratteri di <paramref name="str" />, la funzione <see langword="Mid" /> restituisce una stringa di lunghezza zero (""). Il parametro <paramref name="Start" /> è in base uno.</param>
      <param name="Length">facoltativo. Espressione <see langword="Integer" />. Numero dei caratteri da restituire. Se omesso o se il numero di caratteri del testo (incluso il carattere nella posizione indicata da <paramref name="Length" />) è minore di <paramref name="Start" />, vengono restituiti tutti i caratteri dalla posizione iniziale fino alla fine della stringa.</param>
      <exception cref="T:System.ArgumentException">
        <paramref name="Start" /> &lt;= 0 o <paramref name="Length" /> &lt; 0.</exception>
      <returns>Una stringa che consiste del numero specificato di caratteri a partire dalla posizione specificata nella stringa.</returns>
    </member>
    <member name="M:Microsoft.VisualBasic.Strings.Replace(System.String,System.String,System.String,System.Int32,System.Int32,Microsoft.VisualBasic.CompareMethod)">
      <summary>Restituisce una stringa nella quale la sottostringa specificata è stata sostituita con un'altra sottostringa per il numero di volte indicato.</summary>
      <param name="Expression">Obbligatorio. Espressione String contenente la sottostringa da sostituire.</param>
      <param name="Find">Obbligatorio. Sottostringa da cercare.</param>
      <param name="Replacement">Obbligatorio. Sottostringa di sostituzione.</param>
      <param name="Start">facoltativo. Posizione all'interno di <paramref name="Expression" /> in cui inizia una sottostringa utilizzata per la sostituzione. Il valore restituito di <see langword="Replace" /> è una stringa che inizia in corrispondenza di <paramref name="Start" />, con le sostituzioni appropriate. Se omesso, viene usato il valore 1.</param>
      <param name="Count">facoltativo. Numero di sostituzioni della sottostringa da eseguire. Se omesso, il valore predefinito è -1, che indica di eseguire tutte le sostituzioni possibili.</param>
      <param name="Compare">facoltativo. Valore numerico che indica il tipo di confronto da utilizzare per la valutazione delle sottostringhe. Per informazioni sui valori, vedere "Impostazioni".</param>
      <exception cref="T:System.ArgumentException">
        <paramref name="Count" /> &lt; -1 o <paramref name="Start" /> &lt;= 0.</exception>
      <returns>Uno dei valori seguenti.
          <list type="table"><listheader><term>Se</term><description>Replace restituirà</description></listheader><item><term><paramref name="Find" /> è di lunghezza zero o <see langword="Nothing" /></term><description> Copia di <paramref name="Expression" /></description></item><item><term><paramref name="Replace" /> è di lunghezza zero</term><description> Copia di <paramref name="Expression" /> senza occorrenze di <paramref name="Find" /></description></item><item><term><paramref name="Expression" /> è di lunghezza zero o <see langword="Nothing" /> oppure <paramref name="Start" /> è di lunghezza maggiore rispetto a <paramref name="Expression" /></term><description><see langword="Nothing" /></description></item><item><term><paramref name="Count" /> è 0</term><description> Copia di <paramref name="Expression" /></description></item></list></returns>
    </member>
    <member name="M:Microsoft.VisualBasic.Strings.Right(System.String,System.Int32)">
      <summary>Restituisce una stringa contenente un numero di caratteri specificato a partire dalla destra della stringa.</summary>
      <param name="str">Obbligatorio. Espressione <see langword="String" /> da cui vengono restituiti gli ultimi caratteri a destra.</param>
      <param name="Length">Obbligatorio. <see langword="Integer" /> Espressione numerica che indica quanti caratteri restituire. Se 0, viene restituita una stringa di lunghezza zero (""). Se maggiore o uguale al numero di caratteri di <paramref name="str" />, viene restituita l'intera stringa.</param>
      <exception cref="T:System.ArgumentException">
        <paramref name="Length" /> &lt; 0.</exception>
      <returns>Stringa contenente un numero specificato di caratteri dal lato destro di una stringa.</returns>
    </member>
    <member name="M:Microsoft.VisualBasic.Strings.RSet(System.String,System.Int32)">
      <summary>Restituisce una stringa allineata a destra contenente la stringa specificata adattata alla lunghezza specificata.</summary>
      <param name="Source">Obbligatorio. Espressione <see langword="String" />. Nome della variabile String.</param>
      <param name="Length">Obbligatorio. Espressione <see langword="Integer" />. Lunghezza della stringa restituita.</param>
      <returns>Stringa allineata a destra contenente la stringa specificata adattata alla lunghezza specificata.</returns>
    </member>
    <member name="M:Microsoft.VisualBasic.Strings.RTrim(System.String)">
      <summary>Restituisce una stringa contenente una copia di una stringa specificata senza spazi iniziali (<see langword="LTrim" />), senza spazi finali (<see langword="RTrim" />) o senza spazi iniziali o finali (<see langword="Trim" />).</summary>
      <param name="str">Obbligatorio. Qualsiasi espressione <see langword="String" /> valida.</param>
      <returns>Stringa contenente una copia di una stringa specificata senza spazi iniziali (<see langword="LTrim" />), senza spazi finali (<see langword="RTrim" />) o senza spazi iniziali o finali (<see langword="Trim" />).</returns>
    </member>
    <member name="M:Microsoft.VisualBasic.Strings.Space(System.Int32)">
      <summary>Restituisce una stringa composta dal numero di spazi specificato.</summary>
      <param name="Number">Obbligatorio. Espressione <see langword="Integer" />. Numero di spazi desiderati nella stringa.</param>
      <exception cref="T:System.ArgumentException">
        <paramref name="Number" /> &lt; 0.</exception>
      <returns>Stringa composta dal numero di spazi specificato.</returns>
    </member>
    <member name="M:Microsoft.VisualBasic.Strings.Split(System.String,System.String,System.Int32,Microsoft.VisualBasic.CompareMethod)">
      <summary>Restituisce una matrice unidimensionale con indice in base zero che contiene il numero di sottostringhe specificato.</summary>
      <param name="Expression">Obbligatorio. Espressione <see langword="String" /> contenente sottostringhe e delimitatori.</param>
      <param name="Delimiter">facoltativo. Qualsiasi carattere singolo utilizzato per identificare i limiti delle sottostringhe. Se <paramref name="Delimiter" /> viene omesso, come delimitatore viene utilizzato il carattere spazio (" ").</param>
      <param name="Limit">facoltativo. Numero massimo di sottostringhe in cui suddividere la stringa di input. Il valore predefinito, -1, indica che la stringa di input deve essere suddivisa a ogni occorrenza della stringa <paramref name="Delimiter" />.</param>
      <param name="Compare">facoltativo. Valore numerico che indica il tipo di confronto da utilizzare per la valutazione delle sottostringhe. Per un elenco dei valori possibili, vedere "Impostazioni".</param>
      <returns>Matrice<see langword="String" /> . Se <paramref name="Expression" /> è una stringa di lunghezza zero (""), <see langword="Split" /> restituisce una matrice costituita da un solo elemento contenente una stringa di lunghezza zero. Se <paramref name="Delimiter" /> è una stringa di lunghezza zero, oppure se non compare mai nella stringa <paramref name="Expression" />, <see langword="Split" /> restituisce una matrice con un solo elemento contenente l'intera stringa <paramref name="Expression" />.</returns>
    </member>
    <member name="M:Microsoft.VisualBasic.Strings.StrComp(System.String,System.String,Microsoft.VisualBasic.CompareMethod)">
      <summary>Restituisce -1, 0 o 1 in base al risultato di un confronto tra stringhe.</summary>
      <param name="String1">Obbligatorio. Qualsiasi espressione <see langword="String" /> valida.</param>
      <param name="String2">Obbligatorio. Qualsiasi espressione <see langword="String" /> valida.</param>
      <param name="Compare">facoltativo. Specifica il tipo di confronto delle stringhe. Se <paramref name="Compare" /> viene omesso, il tipo di confronto viene determinato dall'impostazione di <see langword="Option Compare" />.</param>
      <exception cref="T:System.ArgumentException">Il valore <paramref name="Compare" /> non è valido.</exception>
      <returns>Uno dei valori seguenti: <list type="table"><listheader><term>Se</term><description>StrComp restituirà</description></listheader><item><term><paramref name="String1" /> si trova nell'ordine prima di <paramref name="String2" /></term><description>-1</description></item><item><term><paramref name="String1" /> è uguale a <paramref name="String2" />.</term><description>0</description></item><item><term><paramref name="String1" /> si trova nell'ordine dopo <paramref name="String2" /></term><description>1</description></item></list></returns>
    </member>
    <member name="M:Microsoft.VisualBasic.Strings.StrConv(System.String,Microsoft.VisualBasic.VbStrConv,System.Int32)">
      <summary>Restituisce una stringa convertita come specificato.</summary>
      <param name="str">Obbligatorio. Espressione <see langword="String" /> da convertire.</param>
      <param name="Conversion">Obbligatorio. Membro <see cref="T:Microsoft.VisualBasic.VbStrConv" />. Valore dell'enumerazione che specifica il tipo di conversione da eseguire.</param>
      <param name="LocaleID">facoltativo. Valore di <see langword="LocaleID" />, se diverso dal valore di <see langword="LocaleID" /> del sistema. (Il valore predefinito è il valore di <see langword="LocaleID" /> del sistema.)</param>
      <exception cref="T:System.ArgumentException">Oggetto <paramref name="LocaleID" /> non supportato, <paramref name="Conversion" /> &lt; 0 o &gt; 2048 oppure conversione non supportata per le impostazioni locali specificate.</exception>
      <returns>Stringa convertita come specificato.</returns>
    </member>
    <member name="M:Microsoft.VisualBasic.Strings.StrDup(System.Int32,System.Char)">
      <summary>Restituisce una stringa o un oggetto composto dal carattere specificato ripetuto per il numero di volte specificato.</summary>
      <param name="Number">Obbligatorio. Espressione <see langword="Integer" />. Lunghezza della stringa da restituire.</param>
      <param name="Character">Obbligatorio. Qualsiasi espressione <see langword="Char" />, <see langword="String" /> o <see langword="Object" /> valida. Verrà utilizzato solo il primo carattere dell'espressione. Se Character è di tipo <see langword="Object" />, deve contenere un oggetto <see langword="Char" /> o un valore <see langword="String" />.</param>
      <exception cref="T:System.ArgumentException">
        <paramref name="Number" /> è minore di 0 o il tipo di <paramref name="Character" /> non è valido.</exception>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="Character" /> costruito in modo predefinito è <see langword="Nothing" />.</exception>
      <returns>Stringa o oggetto composto dal carattere specificato ripetuto per il numero di volte specificato.</returns>
    </member>
    <member name="M:Microsoft.VisualBasic.Strings.StrDup(System.Int32,System.Object)">
      <summary>Restituisce una stringa o un oggetto composto dal carattere specificato ripetuto per il numero di volte specificato.</summary>
      <param name="Number">Obbligatorio. Espressione <see langword="Integer" />. Lunghezza della stringa da restituire.</param>
      <param name="Character">Obbligatorio. Qualsiasi espressione <see langword="Char" />, <see langword="String" /> o <see langword="Object" /> valida. Verrà utilizzato solo il primo carattere dell'espressione. Se Character è di tipo <see langword="Object" />, deve contenere un oggetto <see langword="Char" /> o un valore <see langword="String" />.</param>
      <exception cref="T:System.ArgumentException">
        <paramref name="Number" /> è minore di 0 o il tipo di <paramref name="Character" /> non è valido.</exception>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="Character" /> costruito in modo predefinito è <see langword="Nothing" />.</exception>
      <returns>Stringa o oggetto composto dal carattere specificato ripetuto per il numero di volte specificato.</returns>
    </member>
    <member name="M:Microsoft.VisualBasic.Strings.StrDup(System.Int32,System.String)">
      <summary>Restituisce una stringa o un oggetto composto dal carattere specificato ripetuto per il numero di volte specificato.</summary>
      <param name="Number">Obbligatorio. Espressione <see langword="Integer" />. Lunghezza della stringa da restituire.</param>
      <param name="Character">Obbligatorio. Qualsiasi espressione <see langword="Char" />, <see langword="String" /> o <see langword="Object" /> valida. Verrà utilizzato solo il primo carattere dell'espressione. Se Character è di tipo <see langword="Object" />, deve contenere un oggetto <see langword="Char" /> o un valore <see langword="String" />.</param>
      <exception cref="T:System.ArgumentException">
        <paramref name="Number" /> è minore di 0 o il tipo di <paramref name="Character" /> non è valido.</exception>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="Character" /> costruito in modo predefinito è <see langword="Nothing" />.</exception>
      <returns>Stringa o oggetto composto dal carattere specificato ripetuto per il numero di volte specificato.</returns>
    </member>
    <member name="M:Microsoft.VisualBasic.Strings.StrReverse(System.String)">
      <summary>Restituisce una stringa nella quale è stato invertito l'ordine dei caratteri della stringa specificata.</summary>
      <param name="Expression">Obbligatorio. Espressione String contenente i caratteri da invertire. Se <paramref name="Expression" /> è una stringa di lunghezza zero (""), viene restituita una stringa di lunghezza zero.</param>
      <returns>Stringa nella quale viene invertito l'ordine dei caratteri di una stringa specificata.</returns>
    </member>
    <member name="M:Microsoft.VisualBasic.Strings.Trim(System.String)">
      <summary>Restituisce una stringa contenente una copia di una stringa specificata senza spazi iniziali (<see langword="LTrim" />), senza spazi finali (<see langword="RTrim" />) o senza spazi iniziali o finali (<see langword="Trim" />).</summary>
      <param name="str">Obbligatorio. Qualsiasi espressione <see langword="String" /> valida.</param>
      <returns>Stringa contenente una copia di una stringa specificata senza spazi iniziali (<see langword="LTrim" />), senza spazi finali (<see langword="RTrim" />) o senza spazi iniziali o finali (<see langword="Trim" />).</returns>
    </member>
    <member name="M:Microsoft.VisualBasic.Strings.UCase(System.Char)">
      <summary>Restituisce una stringa o un carattere contenente la stringa specificata convertita in lettere maiuscole.</summary>
      <param name="Value">Obbligatorio. Qualsiasi espressione <see langword="String" /> o <see langword="Char" /> valida.</param>
      <returns>Stringa o carattere contenente la stringa specificata convertita in lettere maiuscole.</returns>
    </member>
    <member name="M:Microsoft.VisualBasic.Strings.UCase(System.String)">
      <summary>Restituisce una stringa o un carattere contenente la stringa specificata convertita in lettere maiuscole.</summary>
      <param name="Value">Obbligatorio. Qualsiasi espressione <see langword="String" /> o <see langword="Char" /> valida.</param>
      <returns>Stringa o carattere contenente la stringa specificata convertita in lettere maiuscole.</returns>
    </member>
    <member name="T:Microsoft.VisualBasic.TabInfo">
      <summary>Questa classe supporta le funzioni <see langword="Print" /> e <see langword="PrintLine" /> di Visual Basic.</summary>
    </member>
    <member name="F:Microsoft.VisualBasic.TabInfo.Column">
      <summary>Questo campo supporta le funzioni <see langword="Print" /> e <see langword="PrintLine" /> di Visual Basic.</summary>
    </member>
    <member name="T:Microsoft.VisualBasic.TriState">
      <summary>Indica un valore Boolean oppure se deve essere utilizzato il valore predefinito quando vengono chiamate funzioni per la formattazione di numeri.</summary>
    </member>
    <member name="F:Microsoft.VisualBasic.TriState.False">
      <summary>False. Il valore numerico di questo membro è 0.</summary>
    </member>
    <member name="F:Microsoft.VisualBasic.TriState.True">
      <summary>True. Il valore numerico di questo membro è -1.</summary>
    </member>
    <member name="F:Microsoft.VisualBasic.TriState.UseDefault">
      <summary>Impostazione predefinita. Il valore numerico di questo membro è -2.</summary>
    </member>
    <member name="T:Microsoft.VisualBasic.VariantType">
      <summary>Indica il tipo di un oggetto Variant restituito dalla funzione <see langword="VarType" />.</summary>
    </member>
    <member name="F:Microsoft.VisualBasic.VariantType.Array">
      <summary>Matrice  Questo membro è equivalente alla costante <see langword="vbArray" />di Visual Basic.</summary>
    </member>
    <member name="F:Microsoft.VisualBasic.VariantType.Boolean">
      <summary>
        <see langword="Boolean" /> (<see langword="True" /> o <see langword="False" />.) Questo membro è equivalente alla costante <see langword="vbBoolean" /> di Visual Basic.</summary>
    </member>
    <member name="F:Microsoft.VisualBasic.VariantType.Byte">
      <summary>
        <see langword="Byte" /> (Da 0 a 255). Questo membro è equivalente alla costante <see langword="vbByte" /> di Visual Basic.</summary>
    </member>
    <member name="F:Microsoft.VisualBasic.VariantType.Char">
      <summary>
        <see langword="Char" /> (Da 0 a 65535). Questo membro è equivalente alla costante <see langword="vbChar" /> di Visual Basic.</summary>
    </member>
    <member name="F:Microsoft.VisualBasic.VariantType.Currency">
      <summary>Currency. Questo membro è equivalente alla costante <see langword="vbCurrency" />di Visual Basic.</summary>
    </member>
    <member name="F:Microsoft.VisualBasic.VariantType.DataObject">
      <summary>DataObject.</summary>
    </member>
    <member name="F:Microsoft.VisualBasic.VariantType.Date">
      <summary>
        <see langword="Date" /> (Dalle 0.00.00 dell'1 gennaio 0001 alle 23.59.59 del 31 dicembre 9999). Questo membro è equivalente alla costante <see langword="vbDate" /> di Visual Basic.</summary>
    </member>
    <member name="F:Microsoft.VisualBasic.VariantType.Decimal">
      <summary>
        <see langword="Decimal" /> (Da 0 a +/-79.228.162.514.264.337.593.543.950.335 senza numeri decimali; da 0 a +/-7,9228162514264337593543950335 con 28 posizioni decimali; il numero minore diverso da zero è +/-0,0000000000000000000000000001). Questo membro è equivalente alla costante <see langword="vbDecimal" /> di Visual Basic.</summary>
    </member>
    <member name="F:Microsoft.VisualBasic.VariantType.Double">
      <summary>
        <see langword="Double" /> (Da -1,79769313486231E+308 a -4,94065645841247E-324 per i valori negativi; da 4,94065645841247E-324 a 1,79769313486231E+308 per i valori positivi). Questo membro è equivalente alla costante <see langword="vbDouble" /> di Visual Basic.</summary>
    </member>
    <member name="F:Microsoft.VisualBasic.VariantType.Empty">
      <summary>Riferimento Null. Questo membro è equivalente alla costante <see langword="vbEmpty" />di Visual Basic.</summary>
    </member>
    <member name="F:Microsoft.VisualBasic.VariantType.Error">
      <summary>
        <see cref="T:System.Exception" />
      </summary>
    </member>
    <member name="F:Microsoft.VisualBasic.VariantType.Integer">
      <summary>
        <see langword="Integer" /> (Da -2.147.483.648 a 2.147.483.647). Questo membro è equivalente alla costante <see langword="vbInteger" /> di Visual Basic.</summary>
    </member>
    <member name="F:Microsoft.VisualBasic.VariantType.Long">
      <summary>
        <see langword="Long" /> (Da -9.223.372.036.854.775.808 a 9.223.372.036.854.775.807). Questo membro è equivalente alla costante <see langword="vbLong" /> di Visual Basic.</summary>
    </member>
    <member name="F:Microsoft.VisualBasic.VariantType.Null">
      <summary>Oggetto Null. Questo membro è equivalente alla costante <see langword="vbNull" />di Visual Basic.</summary>
    </member>
    <member name="F:Microsoft.VisualBasic.VariantType.Object">
      <summary>In una variabile di tipo <see langword="Object" /> è possibile archiviare qualsiasi tipo. Questo membro è equivalente alla costante <see langword="vbObject" />di Visual Basic.</summary>
    </member>
    <member name="F:Microsoft.VisualBasic.VariantType.Short">
      <summary>
        <see langword="Short" /> (Da -32.768 a 32.767).</summary>
    </member>
    <member name="F:Microsoft.VisualBasic.VariantType.Single">
      <summary>
        <see langword="Single" /> (Da -3,402823E+38 a -1,401298E-45 per valori negativi; da 1,401298E-45 a 3,402823E+38 per valori positivi). Questo membro è equivalente alla costante <see langword="vbSingle" /> di Visual Basic.</summary>
    </member>
    <member name="F:Microsoft.VisualBasic.VariantType.String">
      <summary>
        <see langword="String" /> (Da 0 a circa 2 miliardi di caratteri Unicode). Questo membro è equivalente alla costante <see langword="vbString" /> di Visual Basic.</summary>
    </member>
    <member name="F:Microsoft.VisualBasic.VariantType.UserDefinedType">
      <summary>Tipo definito dall'utente. A ogni membro della struttura è associato un intervallo determinato dal tipo di dati e indipendente dagli intervalli degli altri membri. Questo membro è equivalente alla costante <see langword="vbUserDefinedType" />di Visual Basic.</summary>
    </member>
    <member name="F:Microsoft.VisualBasic.VariantType.Variant">
      <summary>
        <see langword="Variant" /> Questo membro è equivalente alla costante <see langword="vbVariant" />di Visual Basic.</summary>
    </member>
    <member name="T:Microsoft.VisualBasic.VBFixedArrayAttribute">
      <summary>Indica che una matrice in una struttura o una variabile non locale deve essere considerata come una matrice a lunghezza fissa.</summary>
    </member>
    <member name="M:Microsoft.VisualBasic.VBFixedArrayAttribute.#ctor(System.Int32)">
      <summary>Inizializza il valore della proprietà <see langword="Bounds" />.</summary>
      <param name="UpperBound1">Inizializza il valore del campo superiore, che rappresenta le dimensioni della prima dimensione della matrice.</param>
    </member>
    <member name="M:Microsoft.VisualBasic.VBFixedArrayAttribute.#ctor(System.Int32,System.Int32)">
      <summary>Inizializza il valore della proprietà <see langword="Bounds" />.</summary>
      <param name="UpperBound1">Inizializza il valore del campo superiore, che rappresenta le dimensioni della prima dimensione della matrice.</param>
      <param name="UpperBound2">Inizializza il valore del campo superiore, che rappresenta le dimensioni della seconda dimensione della matrice.</param>
    </member>
    <member name="P:Microsoft.VisualBasic.VBFixedArrayAttribute.Bounds">
      <summary>Restituisce i limiti della matrice.</summary>
      <returns>Contiene una matrice di interi che rappresenta i limiti della matrice.</returns>
    </member>
    <member name="P:Microsoft.VisualBasic.VBFixedArrayAttribute.Length">
      <summary>Restituisce le dimensioni della matrice.</summary>
      <returns>Contiene un intero che rappresenta il numero di elementi nella matrice.</returns>
    </member>
    <member name="T:Microsoft.VisualBasic.VBFixedStringAttribute">
      <summary>Indica che una stringa deve essere considerata come se avesse una lunghezza fissa.</summary>
    </member>
    <member name="M:Microsoft.VisualBasic.VBFixedStringAttribute.#ctor(System.Int32)">
      <summary>Inizializza il valore del campo <see langword="SizeConst" />.</summary>
      <param name="Length">Lunghezza della stringa fissa.</param>
    </member>
    <member name="P:Microsoft.VisualBasic.VBFixedStringAttribute.Length">
      <summary>Ottiene la lunghezza della stringa.</summary>
      <returns>Lunghezza della stringa.</returns>
    </member>
    <member name="T:Microsoft.VisualBasic.VBMath">
      <summary>Il modulo <see langword="VbMath" /> contiene procedure che consentono di eseguire operazioni matematiche.</summary>
    </member>
    <member name="M:Microsoft.VisualBasic.VBMath.Randomize">
      <summary>Inizializza il generatore di numeri casuali.</summary>
    </member>
    <member name="M:Microsoft.VisualBasic.VBMath.Randomize(System.Double)">
      <summary>Inizializza il generatore di numeri casuali.</summary>
      <param name="Number">facoltativo. Oggetto <see langword="Object" /> o qualsiasi espressione numerica valida.</param>
    </member>
    <member name="M:Microsoft.VisualBasic.VBMath.Rnd">
      <summary>Restituisce un numero casuale di tipo <see cref="T:System.Single" />.</summary>
      <returns>Il successivo numero casuale nella sequenza.</returns>
    </member>
    <member name="M:Microsoft.VisualBasic.VBMath.Rnd(System.Single)">
      <summary>Restituisce un numero casuale di tipo <see cref="T:System.Single" />.</summary>
      <param name="Number">facoltativo. Valore <see cref="T:System.Single" /> o qualsiasi espressione <see cref="T:System.Single" /> valida.</param>
      <returns>Se il valore di Number è minore di zero, Rnd genera lo stesso numero ogni volta, utilizzando <paramref name="Number" /> come valore di inizializzazione. Se il valore di Number è maggiore di zero, Rnd genera il successivo numero casuale nella sequenza. Se il valore di Number è uguale a zero, Rnd genera l'ultimo numero generato. Se Number viene omesso, Rnd genera il successivo numero casuale nella sequenza.</returns>
    </member>
    <member name="T:Microsoft.VisualBasic.VbStrConv">
      <summary>Indica il tipo di conversione da eseguire quando si chiama la funzione <see langword="StrConv" />.</summary>
    </member>
    <member name="F:Microsoft.VisualBasic.VbStrConv.Hiragana">
      <summary>Converte i caratteri Katakana della stringa in caratteri Hiragana. Si applica solo alla lingua giapponese. Questo membro è equivalente alla costante <see langword="vbHiragana" />di Visual Basic.</summary>
    </member>
    <member name="F:Microsoft.VisualBasic.VbStrConv.Katakana">
      <summary>Converte i caratteri Hiragana della stringa in caratteri Katakana. Si applica solo alla lingua giapponese. Questo membro è equivalente alla costante <see langword="vbKatakana" />di Visual Basic.</summary>
    </member>
    <member name="F:Microsoft.VisualBasic.VbStrConv.LinguisticCasing">
      <summary>Converte la stringa dalle regole del file system relative all'uso di maiuscole e minuscole nelle regole linguistiche. Questo membro è equivalente alla costante <see langword="vbLinguisticCasing" />di Visual Basic.</summary>
    </member>
    <member name="F:Microsoft.VisualBasic.VbStrConv.Lowercase">
      <summary>Converte la stringa specificata in lettere minuscole. Questo membro è equivalente alla costante <see langword="vbLowerCase" />di Visual Basic.</summary>
    </member>
    <member name="F:Microsoft.VisualBasic.VbStrConv.Narrow">
      <summary>Converte i caratteri wide (a byte doppio) della stringa in caratteri narrow (a byte singolo). Si applica alle lingue asiatiche. Questo membro è equivalente alla costante <see langword="vbNarrow" />di Visual Basic.</summary>
    </member>
    <member name="F:Microsoft.VisualBasic.VbStrConv.None">
      <summary>Non esegue alcuna conversione.</summary>
    </member>
    <member name="F:Microsoft.VisualBasic.VbStrConv.ProperCase">
      <summary>Converte la prima lettera di ogni parola nella stringa in lettere maiuscole. Questo membro è equivalente alla costante <see langword="vbProperCase" />di Visual Basic.</summary>
    </member>
    <member name="F:Microsoft.VisualBasic.VbStrConv.SimplifiedChinese">
      <summary>Converte la stringa in caratteri in cinese semplificato. Questo membro è equivalente alla costante <see langword="vbSimplifiedChinese" />di Visual Basic.</summary>
    </member>
    <member name="F:Microsoft.VisualBasic.VbStrConv.TraditionalChinese">
      <summary>Converte la stringa in caratteri in cinese tradizionale. Questo membro è equivalente alla costante <see langword="vbTraditionalChinese" />di Visual Basic.</summary>
    </member>
    <member name="F:Microsoft.VisualBasic.VbStrConv.Uppercase">
      <summary>Converte la stringa in lettere maiuscole. Questo membro è equivalente alla costante <see langword="vbUpperCase" />di Visual Basic.</summary>
    </member>
    <member name="F:Microsoft.VisualBasic.VbStrConv.Wide">
      <summary>Converte i caratteri narrow (a byte singolo) della stringa in caratteri wide (a byte doppio). Si applica alle lingue asiatiche. Questo membro è equivalente alla costante <see langword="vbWide" />di Visual Basic. La conversione può usare il formato di normalizzazione C anche se un carattere di input è già a larghezza intera. Ad esempio, la stringa "は゛" (che è già a larghezza intera) viene normalizzata in "ば". Vedere Unicode Normalization Forms.</summary>
    </member>
  </members>
</doc>