<?xml version="1.0" encoding="utf-8"?>
<doc xmlns:vsli="https://github.com/sk-0520/vs-localized-intellisense/tree/master/schema/2024">
  <assembly>
    <name>System.Transactions.Local</name>
  </assembly>
  <members>
    <member name="T:System.Transactions.CommittableTransaction">
      <summary vsli:raw="Describes a committable transaction.">Descrive una transazione di cui è possibile eseguire il commit.</summary>
    </member>
    <member name="M:System.Transactions.CommittableTransaction.#ctor">
      <summary vsli:raw="Initializes a new instance of the &lt;see cref=&quot;T:System.Transactions.CommittableTransaction&quot; /&gt; class.">Inizializza una nuova istanza della classe <see cref="T:System.Transactions.CommittableTransaction" />.</summary>
      <exception cref="T:System.PlatformNotSupportedException">Tentativo di creare una transazione in Windows 98, Windows 98 Second Edition o Windows Millennium Edition.</exception>
    </member>
    <member name="M:System.Transactions.CommittableTransaction.#ctor(System.TimeSpan)">
      <summary vsli:raw="Initializes a new instance of the &lt;see cref=&quot;T:System.Transactions.CommittableTransaction&quot; /&gt; class with the specified &lt;paramref name=&quot;timeout&quot; /&gt; value.">Inizializza una nuova istanza della classe <see cref="T:System.Transactions.CommittableTransaction" /> con il valore <paramref name="timeout" /> specificato.</summary>
      <param name="timeout" vsli:raw="The maximum amount of time the transaction can exist, before it is aborted.">Tempo massimo di esistenza della transazione prima della sua interruzione.</param>
      <exception cref="T:System.PlatformNotSupportedException">Tentativo di creare una transazione in Windows 98, Windows 98 Second Edition o Windows Millennium Edition.</exception>
    </member>
    <member name="M:System.Transactions.CommittableTransaction.#ctor(System.Transactions.TransactionOptions)">
      <summary vsli:raw="Initializes a new instance of the &lt;see cref=&quot;T:System.Transactions.CommittableTransaction&quot; /&gt; class with the specified transaction options.">Inizializza una nuova istanza della classe <see cref="T:System.Transactions.CommittableTransaction" /> con le opzioni di transazione specificate.</summary>
      <param name="options" vsli:raw="A &lt;see cref=&quot;T:System.Transactions.TransactionOptions&quot; /&gt; structure that describes the transaction options to use for the new transaction.">Struttura <see cref="T:System.Transactions.TransactionOptions" /> che descrive le opzioni di transazione da utilizzare per la nuova transazione.</param>
      <exception cref="T:System.PlatformNotSupportedException">Tentativo di creare una transazione in Windows 98, Windows 98 Second Edition o Windows Millennium Edition.</exception>
      <exception cref="T:System.ArgumentException" vsli:raw="&lt;paramref name=&quot;options&quot; /&gt; is invalid.">
        <paramref name="options" /> non è valido.</exception>
    </member>
    <member name="M:System.Transactions.CommittableTransaction.BeginCommit(System.AsyncCallback,System.Object)">
      <summary vsli:raw="Begins an attempt to commit the transaction asynchronously.">Avvia un tentativo di eseguire il commit della transazione in modo asincrono.</summary>
      <param name="asyncCallback" vsli:raw="The &lt;see cref=&quot;T:System.AsyncCallback&quot; /&gt; delegate that is invoked when the transaction completes. This parameter can be &lt;see langword=&quot;null&quot; /&gt;, in which case the application is not notified of the transaction's completion. Instead, the application must use the &lt;see cref=&quot;T:System.IAsyncResult&quot; /&gt; interface to check for completion and wait accordingly, or call &lt;see cref=&quot;M:System.Transactions.CommittableTransaction.EndCommit(System.IAsyncResult)&quot; /&gt; to wait for completion.">Delegato <see cref="T:System.AsyncCallback" /> richiamato quando la transazione viene completata. Questo parametro può essere <see langword="null" />, nel qual caso all'applicazione non viene notificato il completamento della transazione. Al contrario, nell'applicazione deve essere utilizzata l'interfaccia <see cref="T:System.IAsyncResult" /> per verificare il completamento e attendere di conseguenza, oppure deve essere chiamato il metodo <see cref="M:System.Transactions.CommittableTransaction.EndCommit(System.IAsyncResult)" /> per attendere il completamento.</param>
      <param name="asyncState" vsli:raw="An object, which might contain arbitrary state information, associated with the asynchronous commitment. This object is passed to the callback, and is not interpreted by &lt;see cref=&quot;N:System.Transactions&quot; /&gt;. A null reference is permitted.">Oggetto, che può contenere informazioni sullo stato arbitrarie, associato all'esecuzione asincrona del commit. Questo oggetto viene passato al callback e non è interpretato mediante <see cref="N:System.Transactions" />. È consentito un riferimento null.</param>
      <returns vsli:raw="An &lt;see cref=&quot;T:System.IAsyncResult&quot; /&gt; interface that can be used by the caller to check the status of the asynchronous operation, or to wait for the operation to complete.">Interfaccia <see cref="T:System.IAsyncResult" /> che può essere utilizzata dal chiamante per controllare lo stato dell'operazione asincrona o per attendere il completamento dell'operazione.</returns>
    </member>
    <member name="M:System.Transactions.CommittableTransaction.Commit">
      <summary vsli:raw="Attempts to commit the transaction.">Tenta di eseguire il commit della transazione.</summary>
      <exception cref="T:System.Transactions.TransactionInDoubtException" vsli:raw="&lt;see cref=&quot;M:System.Transactions.CommittableTransaction.Commit&quot; /&gt; is called on a transaction and the transaction becomes &lt;see cref=&quot;F:System.Transactions.TransactionStatus.InDoubt&quot; /&gt;.">
        <see cref="M:System.Transactions.CommittableTransaction.Commit" /> viene chiamato in una transazione, che diventa <see cref="F:System.Transactions.TransactionStatus.InDoubt" />.</exception>
      <exception cref="T:System.Transactions.TransactionAbortedException" vsli:raw="&lt;see cref=&quot;M:System.Transactions.CommittableTransaction.Commit&quot; /&gt; is called and the transaction rolls back for the first time.">Viene chiamato <see cref="M:System.Transactions.CommittableTransaction.Commit" /> e viene eseguito il rollback della transazione per la prima volta.</exception>
    </member>
    <member name="M:System.Transactions.CommittableTransaction.EndCommit(System.IAsyncResult)">
      <summary vsli:raw="Ends an attempt to commit the transaction asynchronously.">Termina un tentativo di eseguire il commit della transazione in modo asincrono.</summary>
      <param name="asyncResult" vsli:raw="The &lt;see cref=&quot;T:System.IAsyncResult&quot; /&gt; object associated with the asynchronous commitment.">Oggetto <see cref="T:System.IAsyncResult" /> associato al commit asincrono.</param>
      <exception cref="T:System.Transactions.TransactionAbortedException" vsli:raw="&lt;see cref=&quot;M:System.Transactions.CommittableTransaction.BeginCommit(System.AsyncCallback,System.Object)&quot; /&gt; is called and the transaction rolls back for the first time.">Viene chiamato <see cref="M:System.Transactions.CommittableTransaction.BeginCommit(System.AsyncCallback,System.Object)" /> e viene eseguito il rollback della transazione per la prima volta.</exception>
    </member>
    <member name="P:System.Transactions.CommittableTransaction.System#IAsyncResult#AsyncState">
      <summary vsli:raw="Gets the object provided as the last parameter of the &lt;see cref=&quot;M:System.Transactions.CommittableTransaction.BeginCommit(System.AsyncCallback,System.Object)&quot; /&gt; method call.">Ottiene l'oggetto fornito come ultimo parametro della chiamata del metodo <see cref="M:System.Transactions.CommittableTransaction.BeginCommit(System.AsyncCallback,System.Object)" />.</summary>
      <returns vsli:raw="The object provided as the last parameter of the &lt;see cref=&quot;M:System.Transactions.CommittableTransaction.BeginCommit(System.AsyncCallback,System.Object)&quot; /&gt; method call.">Oggetto fornito come ultimo parametro della chiamata del metodo <see cref="M:System.Transactions.CommittableTransaction.BeginCommit(System.AsyncCallback,System.Object)" />.</returns>
    </member>
    <member name="P:System.Transactions.CommittableTransaction.System#IAsyncResult#AsyncWaitHandle">
      <summary vsli:raw="Gets a &lt;see cref=&quot;T:System.Threading.WaitHandle&quot; /&gt; that is used to wait for an asynchronous operation to complete.">Ottiene un oggetto <see cref="T:System.Threading.WaitHandle" /> che viene usato per attendere il completamento di un'operazione asincrona.</summary>
      <returns vsli:raw="A &lt;see cref=&quot;T:System.Threading.WaitHandle&quot; /&gt; that is used to wait for an asynchronous operation to complete.">Oggetto <see cref="T:System.Threading.WaitHandle" /> che viene usato per attendere il completamento di un'operazione asincrona.</returns>
    </member>
    <member name="P:System.Transactions.CommittableTransaction.System#IAsyncResult#CompletedSynchronously">
      <summary vsli:raw="Gets an indication of whether the asynchronous commit operation completed synchronously.">Ottiene un'indicazione sull'eventuale completamento in modo sincrono di un'operazione di commit asincrona.</summary>
      <returns vsli:raw="&lt;see langword=&quot;true&quot; /&gt; if the asynchronous commit operation completed synchronously; otherwise, &lt;see langword=&quot;false&quot; /&gt;. This property always returns &lt;see langword=&quot;false&quot; /&gt; even if the operation completed synchronously.">
        <see langword="true" /> se l'operazione di commit asincrona è stata completata in modo sincrono, in caso contrario, <see langword="false" />. Questa proprietà restituisce sempre <see langword="false" /> anche se l'operazione viene completata in modo sincrono.</returns>
    </member>
    <member name="P:System.Transactions.CommittableTransaction.System#IAsyncResult#IsCompleted">
      <summary vsli:raw="Gets an indication whether the asynchronous commit operation has completed.">Ottiene un'indicazione del completamento dell'operazione di commit asincrono.</summary>
      <returns vsli:raw="&lt;see langword=&quot;true&quot; /&gt; if the operation is complete; otherwise, &lt;see langword=&quot;false&quot; /&gt;.">
        <see langword="true" /> se l'operazione viene completata. In caso contrario, <see langword="false" />.</returns>
    </member>
    <member name="T:System.Transactions.DependentCloneOption">
      <summary vsli:raw="Controls what kind of dependent transaction to create.">Determina il tipo di transazione dipendente da creare.</summary>
    </member>
    <member name="F:System.Transactions.DependentCloneOption.BlockCommitUntilComplete">
      <summary vsli:raw="The dependent transaction blocks the commit process of the transaction until the parent transaction times out, or &lt;see cref=&quot;M:System.Transactions.DependentTransaction.Complete&quot; /&gt; is called. In this case, additional work can be done on the transaction and new enlistments can be created.">La transazione dipendente blocca il processo di esecuzione del commit della transazione fino al timeout della transazione padre oppure fino alla chiamata del metodo <see cref="M:System.Transactions.DependentTransaction.Complete" />. In questo caso, può essere effettuata un'operazione aggiuntiva sulla transazione ed è possibile creare nuovi elenchi.</summary>
    </member>
    <member name="F:System.Transactions.DependentCloneOption.RollbackIfNotComplete">
      <summary vsli:raw="The dependent transaction automatically aborts the transaction if Commit is called on the parent transaction before &lt;see cref=&quot;M:System.Transactions.DependentTransaction.Complete&quot; /&gt; is called.">La transazione dipendente interrompe automaticamente la transazione se sulla transazione padre viene chiamato Commit prima di <see cref="M:System.Transactions.DependentTransaction.Complete" />.</summary>
    </member>
    <member name="T:System.Transactions.DependentTransaction">
      <summary vsli:raw="Describes a clone of a transaction providing guarantee that the transaction cannot be committed until the application comes to rest regarding work on the transaction. This class cannot be inherited.">Descrive un duplicato di una transazione che garantisce che non può essere eseguito il commit della transazione fino a quando nell'applicazione non si completano le operazioni relative alla transazione. La classe non può essere ereditata.</summary>
    </member>
    <member name="M:System.Transactions.DependentTransaction.Complete">
      <summary vsli:raw="Attempts to complete the dependent transaction.">Tenta di completare la transazione dipendente.</summary>
      <exception cref="T:System.Transactions.TransactionException" vsli:raw="Any attempt for additional work on the transaction after this method is called. These include invoking methods such as &lt;see cref=&quot;Overload:System.Transactions.Transaction.EnlistVolatile&quot; /&gt;, &lt;see cref=&quot;Overload:System.Transactions.Transaction.EnlistDurable&quot; /&gt;, &lt;see cref=&quot;M:System.Transactions.Transaction.Clone&quot; /&gt;, &lt;see cref=&quot;M:System.Transactions.Transaction.DependentClone(System.Transactions.DependentCloneOption)&quot; /&gt; , or any serialization operations on the transaction.">Qualsiasi tentativo di operazioni aggiuntive nella transazione dopo che viene chiamato questo metodo. Sono inclusi metodi di richiamo quali <see cref="Overload:System.Transactions.Transaction.EnlistVolatile" />, <see cref="Overload:System.Transactions.Transaction.EnlistDurable" />, <see cref="M:System.Transactions.Transaction.Clone" />, <see cref="M:System.Transactions.Transaction.DependentClone(System.Transactions.DependentCloneOption)" /> oppure qualsiasi operazione di serializzazione nella transazione.</exception>
    </member>
    <member name="T:System.Transactions.Enlistment">
      <summary vsli:raw="Facilitates communication between an enlisted transaction participant and the transaction manager during the final phase of the transaction.">Facilita la comunicazione tra un partecipante alla transazione integrato e la gestione transazioni durante la fase finale della transazione.</summary>
    </member>
    <member name="M:System.Transactions.Enlistment.Done">
      <summary vsli:raw="Indicates that the transaction participant has completed its work.">Indica che il partecipante alla transazione ha completato le relative operazioni.</summary>
    </member>
    <member name="T:System.Transactions.EnlistmentOptions">
      <summary vsli:raw="Determines whether the object should be enlisted during the prepare phase.">Determina se l'oggetto deve essere integrato durante la fase di preparazione.</summary>
    </member>
    <member name="F:System.Transactions.EnlistmentOptions.EnlistDuringPrepareRequired">
      <summary vsli:raw="The object must enlist during the initial phase of the commitment process.">L'oggetto deve essere integrato durante la fase iniziale del processo di commit.</summary>
    </member>
    <member name="F:System.Transactions.EnlistmentOptions.None">
      <summary vsli:raw="The object does not require enlistment during the initial phase of the commitment process.">L'oggetto non richiede l'integrazione durante la fase iniziale del processo di commit.</summary>
    </member>
    <member name="T:System.Transactions.EnterpriseServicesInteropOption">
      <summary vsli:raw="Specifies how distributed transactions interact with COM+ transactions.">Specifica il modo in cui le transazioni distribuite interagiscono con le transazioni COM+.</summary>
    </member>
    <member name="F:System.Transactions.EnterpriseServicesInteropOption.Automatic">
      <summary vsli:raw="Search for an existing COM+ context and synchronize with it if one exists.">Cerca un contesto COM+ esistente e, se presente, esegue la sincronizzazione con esso.</summary>
    </member>
    <member name="F:System.Transactions.EnterpriseServicesInteropOption.Full">
      <summary vsli:raw="The &lt;see cref=&quot;N:System.EnterpriseServices&quot; /&gt; context (which can be retrieved by calling the static method &lt;see cref=&quot;P:System.EnterpriseServices.ContextUtil.Transaction&quot; /&gt; of the &lt;see cref=&quot;T:System.EnterpriseServices.ContextUtil&quot; /&gt; class) and the &lt;see cref=&quot;N:System.Transactions&quot; /&gt; ambient transaction (which can be retrieved by calling the static method &lt;see cref=&quot;P:System.Transactions.Transaction.Current&quot; /&gt; of the &lt;see cref=&quot;T:System.Transactions.Transaction&quot; /&gt; class) are always synchronized. This introduces a performance penalty because new &lt;see cref=&quot;N:System.EnterpriseServices&quot; /&gt; contexts may need to be created.">Il contesto <see cref="N:System.EnterpriseServices" /> (che può essere recuperato chiamando il metodo statico <see cref="P:System.EnterpriseServices.ContextUtil.Transaction" /> della classe <see cref="T:System.EnterpriseServices.ContextUtil" />) e la transazione di ambiente <see cref="N:System.Transactions" /> (che può essere recuperata chiamando il metodo statico <see cref="P:System.Transactions.Transaction.Current" /> della classe <see cref="T:System.Transactions.Transaction" />) sono sempre sincronizzati. In questo modo si verifica una riduzione delle prestazioni dal momento che può essere necessario creare nuovi contesti <see cref="N:System.EnterpriseServices" />.</summary>
    </member>
    <member name="F:System.Transactions.EnterpriseServicesInteropOption.None">
      <summary vsli:raw="There is no synchronization between &lt;see cref=&quot;P:System.EnterpriseServices.ContextUtil.Transaction&quot; /&gt; and &lt;see cref=&quot;P:System.Transactions.Transaction.Current&quot; /&gt;.">Non esiste alcuna sincronizzazione tra <see cref="P:System.EnterpriseServices.ContextUtil.Transaction" /> e <see cref="P:System.Transactions.Transaction.Current" />.</summary>
    </member>
    <member name="T:System.Transactions.HostCurrentTransactionCallback">
      <summary vsli:raw="Provides a mechanism for the hosting environment to supply its own default notion of &lt;see cref=&quot;P:System.Transactions.Transaction.Current&quot; /&gt;.">Fornisce un meccanismo affinché l'ambiente di hosting specifichi una propria nozione predefinita di <see cref="P:System.Transactions.Transaction.Current" />.</summary>
      <returns vsli:raw="A &lt;see cref=&quot;T:System.Transactions.Transaction&quot; /&gt; object.">Un oggetto <see cref="T:System.Transactions.Transaction" />.</returns>
    </member>
    <member name="T:System.Transactions.IDtcTransaction">
      <summary vsli:raw="Describes a DTC transaction.">Descrive una transazione DTC.</summary>
    </member>
    <member name="M:System.Transactions.IDtcTransaction.Abort(System.IntPtr,System.Int32,System.Int32)">
      <summary vsli:raw="Aborts a transaction.">Interrompe una transazione.</summary>
      <param name="reason" vsli:raw="An optional &lt;see cref=&quot;T:System.EnterpriseServices.BOID&quot; /&gt; that indicates why the transaction is being aborted. This parameter can be &lt;see langword=&quot;null&quot; /&gt;, indicating that no reason for the abort is provided.">
        <see cref="T:System.EnterpriseServices.BOID" /> facoltativo che indica il motivo dell'interruzione della transazione. Questo parametro può essere <see langword="null" />: in tal caso, indica che non è fornita alcuna informazione sul motivo dell'interruzione.</param>
      <param name="retaining" vsli:raw="This value must be &lt;see langword=&quot;false&quot; /&gt;.">Questo valore deve essere <see langword="false" />.</param>
      <param name="async" vsli:raw="When &lt;paramref name=&quot;async&quot; /&gt; is &lt;see langword=&quot;true&quot; /&gt;, an asynchronous abort is performed and the caller must use &lt;see langword=&quot;ITransactionOutcomeEvents&quot; /&gt; to learn about the outcome of the transaction.">Quando <paramref name="async" /> è <see langword="true" />, viene eseguita un'interruzione asincrona e il chiamante deve utilizzare <see langword="ITransactionOutcomeEvents" /> per informazioni sul risultato della transazione.</param>
    </member>
    <member name="M:System.Transactions.IDtcTransaction.Commit(System.Int32,System.Int32,System.Int32)">
      <summary vsli:raw="Commits a transaction.">Esegue il commit di una transazione.</summary>
      <param name="retaining" vsli:raw="This value must be &lt;see langword=&quot;false&quot; /&gt;.">Questo valore deve essere <see langword="false" />.</param>
      <param name="commitType" vsli:raw="A value taken from the OLE DB enumeration &lt;see langword=&quot;XACTTC&quot; /&gt;.">Valore estratto dall'enumerazione OLE DB <see langword="XACTTC" />.</param>
      <param name="reserved" vsli:raw="This value must be zero.">Il valore deve essere zero.</param>
    </member>
    <member name="M:System.Transactions.IDtcTransaction.GetTransactionInfo(System.IntPtr)">
      <summary vsli:raw="Retrieves information about a transaction.">Recupera informazioni su una transazione.</summary>
      <param name="transactionInformation" vsli:raw="Pointer to the caller-allocated &lt;see cref=&quot;T:System.EnterpriseServices.XACTTRANSINFO&quot; /&gt; structure that will receive information about the transaction. This value must not be &lt;see langword=&quot;null&quot; /&gt;.">Puntatore alla struttura <see cref="T:System.EnterpriseServices.XACTTRANSINFO" /> allocata dal chiamante che riceverà le informazioni sulla transazione. Questo valore deve essere diverso da <see langword="null" />.</param>
    </member>
    <member name="T:System.Transactions.IEnlistmentNotification">
      <summary vsli:raw="Describes an interface that a resource manager should implement to provide two phase commit notification callbacks for the transaction manager upon enlisting for participation.">Descrive un'interfaccia che un gestore di risorse deve implementare per fornire i callback di notifica commit a due fasi per la gestione delle transazioni in seguito all'integrazione per la partecipazione.</summary>
    </member>
    <member name="M:System.Transactions.IEnlistmentNotification.Commit(System.Transactions.Enlistment)">
      <summary vsli:raw="Notifies an enlisted object that a transaction is being committed.">Notifica a un oggetto inserito nell'elenco che è in corso l'esecuzione del commit di una transazione.</summary>
      <param name="enlistment" vsli:raw="An &lt;see cref=&quot;T:System.Transactions.Enlistment&quot; /&gt; object used to send a response to the transaction manager.">Oggetto <see cref="T:System.Transactions.Enlistment" /> utilizzato per inviare una risposta alla gestione transazioni.</param>
    </member>
    <member name="M:System.Transactions.IEnlistmentNotification.InDoubt(System.Transactions.Enlistment)">
      <summary vsli:raw="Notifies an enlisted object that the status of a transaction is in doubt.">Notifica a un oggetto inserito nell'elenco che lo stato di una transazione è in dubbio.</summary>
      <param name="enlistment" vsli:raw="An &lt;see cref=&quot;T:System.Transactions.Enlistment&quot; /&gt; object used to send a response to the transaction manager.">Oggetto <see cref="T:System.Transactions.Enlistment" /> utilizzato per inviare una risposta alla gestione transazioni.</param>
    </member>
    <member name="M:System.Transactions.IEnlistmentNotification.Prepare(System.Transactions.PreparingEnlistment)">
      <summary vsli:raw="Notifies an enlisted object that a transaction is being prepared for commitment.">Notifica a un oggetto inserito nell'elenco che è in corso la preparazione di una transazione per il commit.</summary>
      <param name="preparingEnlistment" vsli:raw="A &lt;see cref=&quot;T:System.Transactions.PreparingEnlistment&quot; /&gt; object used to send a response to the transaction manager.">Oggetto <see cref="T:System.Transactions.PreparingEnlistment" /> utilizzato per inviare una risposta al gestore delle transazioni.</param>
    </member>
    <member name="M:System.Transactions.IEnlistmentNotification.Rollback(System.Transactions.Enlistment)">
      <summary vsli:raw="Notifies an enlisted object that a transaction is being rolled back (aborted).">Notifica a un oggetto inserito nell'elenco che è in corso l'esecuzione del rollback (interruzione) di una transazione.</summary>
      <param name="enlistment" vsli:raw="A &lt;see cref=&quot;T:System.Transactions.Enlistment&quot; /&gt; object used to send a response to the transaction manager.">Oggetto <see cref="T:System.Transactions.Enlistment" /> utilizzato per inviare una risposta al gestore delle transazioni.</param>
    </member>
    <member name="T:System.Transactions.IPromotableSinglePhaseNotification">
      <summary vsli:raw="Describes an object that acts as a commit delegate for a non-distributed transaction internal to a resource manager.">Descrive un oggetto che svolge la funzione di delegato di commit per una transazione non distribuita interna a una gestione risorse.</summary>
    </member>
    <member name="M:System.Transactions.IPromotableSinglePhaseNotification.Initialize">
      <summary vsli:raw="Notifies a transaction participant that enlistment has completed successfully.">Notifica a un partecipante alla transazione che l'elenco è stato completato.</summary>
      <exception cref="T:System.Transactions.TransactionException" vsli:raw="An attempt to enlist or serialize a transaction.">Tentativo di integrare nell'elenco o di serializzare una transazione.</exception>
    </member>
    <member name="M:System.Transactions.IPromotableSinglePhaseNotification.Rollback(System.Transactions.SinglePhaseEnlistment)">
      <summary vsli:raw="Notifies an enlisted object that the transaction is being rolled back.">Notifica a un oggetto inserito nell'elenco che è in corso l'esecuzione del rollback della transazione.</summary>
      <param name="singlePhaseEnlistment" vsli:raw="A &lt;see cref=&quot;T:System.Transactions.SinglePhaseEnlistment&quot; /&gt; object used to send a response to the transaction manager.">Oggetto <see cref="T:System.Transactions.SinglePhaseEnlistment" /> utilizzato per inviare una risposta al gestore delle transazioni.</param>
    </member>
    <member name="M:System.Transactions.IPromotableSinglePhaseNotification.SinglePhaseCommit(System.Transactions.SinglePhaseEnlistment)">
      <summary vsli:raw="Notifies an enlisted object that the transaction is being committed.">Notifica a un oggetto inserito nell'elenco che è in corso l'esecuzione del commit della transazione.</summary>
      <param name="singlePhaseEnlistment" vsli:raw="A &lt;see cref=&quot;T:System.Transactions.SinglePhaseEnlistment&quot; /&gt; interface used to send a response to the transaction manager.">Interfaccia <see cref="T:System.Transactions.SinglePhaseEnlistment" /> utilizzata per inviare una risposta alla gestione transazioni.</param>
    </member>
    <member name="T:System.Transactions.ISimpleTransactionSuperior">
      <summary vsli:raw="Represents a transaction that is not a root transaction, but can be escalated to be managed by the MSDTC.">Rappresenta una transazione non di primo livello, ma di cui è possibile eseguire l'escalation per consentirne la gestione mediante MSDTC.</summary>
    </member>
    <member name="M:System.Transactions.ISimpleTransactionSuperior.Rollback">
      <summary vsli:raw="Notifies an enlisted object that the transaction is being rolled back.">Notifica a un oggetto inserito nell'elenco che è in corso l'esecuzione del rollback della transazione.</summary>
    </member>
    <member name="T:System.Transactions.ISinglePhaseNotification">
      <summary vsli:raw="Describes a resource object that supports single phase commit optimization to participate in a transaction.">Descrive un oggetto risorsa che supporta l'ottimizzazione mediante commit monofase per partecipare a una transazione.</summary>
    </member>
    <member name="M:System.Transactions.ISinglePhaseNotification.SinglePhaseCommit(System.Transactions.SinglePhaseEnlistment)">
      <summary vsli:raw="Represents the resource manager's implementation of the callback for the single phase commit optimization.">Rappresenta l'implementazione del callback del gestore delle risorse per l'ottimizzazione del commit a una fase.</summary>
      <param name="singlePhaseEnlistment" vsli:raw="A &lt;see cref=&quot;T:System.Transactions.SinglePhaseEnlistment&quot; /&gt; used to send a response to the transaction manager.">Oggetto <see cref="T:System.Transactions.SinglePhaseEnlistment" /> utilizzato per inviare una risposta alla gestione transazioni.</param>
    </member>
    <member name="T:System.Transactions.IsolationLevel">
      <summary vsli:raw="Specifies the isolation level of a transaction.">Specifica il livello di isolamento di una transazione.</summary>
    </member>
    <member name="F:System.Transactions.IsolationLevel.Chaos">
      <summary vsli:raw="The pending changes from more highly isolated transactions cannot be overwritten.">Le modifiche in sospeso dalle transazioni più isolate non possono essere sovrascritte.</summary>
    </member>
    <member name="F:System.Transactions.IsolationLevel.ReadCommitted">
      <summary vsli:raw="Volatile data cannot be read during the transaction, but can be modified.">Durante la transazione non è possibile leggere i dati volatili, ma è possibile modificarli.</summary>
    </member>
    <member name="F:System.Transactions.IsolationLevel.ReadUncommitted">
      <summary vsli:raw="Volatile data can be read and modified during the transaction.">Durante la transazione è possibile leggere e modificare i dati volatili.</summary>
    </member>
    <member name="F:System.Transactions.IsolationLevel.RepeatableRead">
      <summary vsli:raw="Volatile data can be read but not modified during the transaction. New data can be added during the transaction.">Durante la transazione, è possibile leggere i dati volatili ma non modificarli. Durante la transazione, è possibile aggiungere nuovi dati.</summary>
    </member>
    <member name="F:System.Transactions.IsolationLevel.Serializable">
      <summary vsli:raw="Volatile data can be read but not modified, and no new data can be added during the transaction.">Durante la transazione è possibile leggere ma non modificare i dati volatili e non è possibile aggiungere nuovi dati.</summary>
    </member>
    <member name="F:System.Transactions.IsolationLevel.Snapshot">
      <summary vsli:raw="&lt;para&gt;Volatile data can be read. Before a transaction modifies data, it verifies if another transaction has changed the data after it was initially read. If the data has been updated, an error is raised. This allows a transaction to get to the previously committed value of the data.&lt;/para&gt;&lt;para&gt;When you try to promote a transaction that was created with the &lt;see langword=&quot;Snapshot&quot; /&gt; isolation level, an &lt;see cref=&quot;T:System.InvalidOperationException&quot; /&gt; is thrown with the error message &quot;Transactions with IsolationLevel Snapshot cannot be promoted&quot;.&lt;/para&gt;">
        <para>È possibile leggere i dati volatili. Prima che una transazione modifichi i dati, viene verificato se un'altra transazione ha modificato i dati dopo essere stati letti. Se i dati sono stati aggiornati, viene generato un errore. In questo modo, una transazione può ottenere il valore dei dati di cui è stato precedentemente eseguito il commit.</para>
        <para>Quando si tenta di alzare il livello di una transazione creata con il livello di isolamento <see langword="Snapshot" />, viene generata un'eccezione <see cref="T:System.InvalidOperationException" /> con il messaggio di errore "Impossibile promuovere le transazioni con IsolationLevel Snapshot".</para>
      </summary>
    </member>
    <member name="F:System.Transactions.IsolationLevel.Unspecified">
      <summary vsli:raw="A different isolation level than the one specified is being used, but the level cannot be determined. An exception is thrown if this value is set.">Verrà utilizzato un livello di isolamento diverso da quello specificato, ma il livello non potrà essere determinato. Se viene impostato questo valore, verrà generata un'eccezione.</summary>
    </member>
    <member name="T:System.Transactions.ITransactionPromoter">
      <summary vsli:raw="Describes a delegated transaction for an existing transaction that can be escalated to be managed by the MSDTC when needed.">Descrive una transazione delegata di una transazione esistente di cui è possibile eseguire l'escalation per consentirne la gestione mediante MSDTC, se necessario.</summary>
    </member>
    <member name="M:System.Transactions.ITransactionPromoter.Promote">
      <summary vsli:raw="Notifies an enlisted object that an escalation of the delegated transaction has been requested.">Notifica a un oggetto inserito nell'elenco che è stata richiesta un'escalation della transazione delegata.</summary>
      <returns vsli:raw="A transmitter/receiver propagation token that marshals a distributed transaction. For more information, see &lt;see cref=&quot;M:System.Transactions.TransactionInterop.GetTransactionFromTransmitterPropagationToken(System.Byte[])&quot; /&gt;.">Token di propagazione trasmettitore/ricevitore che effettua il marshalling di una transazione distribuita. Per altre informazioni, vedere <see cref="M:System.Transactions.TransactionInterop.GetTransactionFromTransmitterPropagationToken(System.Byte[])" />.</returns>
    </member>
    <member name="T:System.Transactions.PreparingEnlistment">
      <summary vsli:raw="Facilitates communication between an enlisted transaction participant and the transaction manager during the Prepare phase of the transaction.">Facilita la comunicazione tra un partecipante alla transazione integrato e la gestione transazioni durante la fase di preparazione della transazione.</summary>
    </member>
    <member name="M:System.Transactions.PreparingEnlistment.ForceRollback">
      <summary vsli:raw="Indicates that the transaction should be rolled back.">Indica che deve essere eseguito il rollback della transazione.</summary>
    </member>
    <member name="M:System.Transactions.PreparingEnlistment.ForceRollback(System.Exception)">
      <summary vsli:raw="Indicates that the transaction should be rolled back.">Indica che deve essere eseguito il rollback della transazione.</summary>
      <param name="e" vsli:raw="An explanation of why a rollback is triggered.">Spiegazione del motivo per cui viene avviato un rollback.</param>
    </member>
    <member name="M:System.Transactions.PreparingEnlistment.Prepared">
      <summary vsli:raw="Indicates that the transaction can be committed.">Indica che è possibile eseguire il commit della transazione.</summary>
    </member>
    <member name="M:System.Transactions.PreparingEnlistment.RecoveryInformation">
      <summary vsli:raw="Gets the recovery information of an enlistment.">Ottiene le informazioni per il recupero di un elenco.</summary>
      <exception cref="T:System.InvalidOperationException" vsli:raw="An attempt to get recovery information inside a volatile enlistment, which does not generate any recovery information.">Tentativo di ottenere informazioni per il recupero all'interno di un'integrazione volatile, che non genera alcuna informazione di questo tipo.</exception>
      <returns vsli:raw="The recovery information of an enlistment.">Informazioni per il recupero di un'integrazione.</returns>
    </member>
    <member name="T:System.Transactions.SinglePhaseEnlistment">
      <summary vsli:raw="Provides a set of callbacks that facilitate communication between a participant enlisted for Single Phase Commit and the transaction manager when the &lt;see cref=&quot;M:System.Transactions.ISinglePhaseNotification.SinglePhaseCommit(System.Transactions.SinglePhaseEnlistment)&quot; /&gt; notification is received.">Fornisce un insieme di callback che facilitano la comunicazione tra un partecipante inserito nell'elenco per il commit a una fase e la gestione transazioni quando viene ricevuta la notifica di <see cref="M:System.Transactions.ISinglePhaseNotification.SinglePhaseCommit(System.Transactions.SinglePhaseEnlistment)" />.</summary>
    </member>
    <member name="M:System.Transactions.SinglePhaseEnlistment.Aborted">
      <summary vsli:raw="Represents a callback that is used to indicate to the transaction manager that the transaction should be rolled back.">Rappresenta un callback utilizzato per indicare al gestore delle transazioni che deve essere eseguito il rollback della transazione.</summary>
    </member>
    <member name="M:System.Transactions.SinglePhaseEnlistment.Aborted(System.Exception)">
      <summary vsli:raw="Represents a callback that is used to indicate to the transaction manager that the transaction should be rolled back, and provides an explanation.">Rappresenta un callback utilizzato per indicare al gestore delle transazioni che deve essere eseguito il rollback della transazione e fornisce una spiegazione.</summary>
      <param name="e" vsli:raw="An explanation of why a rollback is initiated.">Spiegazione del motivo per cui viene iniziato un rollback.</param>
    </member>
    <member name="M:System.Transactions.SinglePhaseEnlistment.Committed">
      <summary vsli:raw="Represents a callback that is used to indicate to the transaction manager that the SinglePhaseCommit was successful.">Rappresenta un callback utilizzato per indicare al gestore delle transazioni che il commit a una fase è stato completato.</summary>
    </member>
    <member name="M:System.Transactions.SinglePhaseEnlistment.InDoubt">
      <summary vsli:raw="Represents a callback that is used to indicate to the transaction manager that the status of the transaction is in doubt.">Rappresenta un callback utilizzato per indicare al gestore delle transazioni che lo stato della transazione è in dubbio.</summary>
    </member>
    <member name="M:System.Transactions.SinglePhaseEnlistment.InDoubt(System.Exception)">
      <summary vsli:raw="Represents a callback that is used to indicate to the transaction manager that the status of the transaction is in doubt, and provides an explanation.">Rappresenta un callback utilizzato per indicare al gestore delle transazioni che lo stato della transazione è in dubbio e fornisce una spiegazione.</summary>
      <param name="e" vsli:raw="An explanation of why the transaction is in doubt.">Spiegazione del motivo per cui la transazione è in dubbio.</param>
    </member>
    <member name="T:System.Transactions.SubordinateTransaction">
      <summary vsli:raw="Represents a non-rooted transaction that can be delegated. This class cannot be inherited.">Rappresenta una transazione che non contiene una radice che può essere delegata. La classe non può essere ereditata.</summary>
    </member>
    <member name="M:System.Transactions.SubordinateTransaction.#ctor(System.Transactions.IsolationLevel,System.Transactions.ISimpleTransactionSuperior)">
      <summary vsli:raw="Initializes a new instance of the &lt;see cref=&quot;T:System.Transactions.SubordinateTransaction&quot; /&gt; class.">Inizializza una nuova istanza della classe <see cref="T:System.Transactions.SubordinateTransaction" />.</summary>
      <param name="isoLevel" vsli:raw="The isolation level of the transaction.">Livello di isolamento della transazione</param>
      <param name="superior" vsli:raw="A &lt;see cref=&quot;T:System.Transactions.ISimpleTransactionSuperior&quot; /&gt;.">Elemento <see cref="T:System.Transactions.ISimpleTransactionSuperior" /></param>
    </member>
    <member name="T:System.Transactions.Transaction">
      <summary vsli:raw="Represents a transaction.">Rappresenta una transazione.</summary>
    </member>
    <member name="E:System.Transactions.Transaction.TransactionCompleted">
      <summary vsli:raw="Indicates that the transaction is completed.">Indica che la transazione è stata completata.</summary>
      <exception cref="T:System.ObjectDisposedException" vsli:raw="An attempt to subscribe this event on a transaction that has been disposed.">Tentativo di sottoscrivere questo evento in una transazione che è stata eliminata.</exception>
    </member>
    <member name="M:System.Transactions.Transaction.Clone">
      <summary vsli:raw="Creates a clone of the transaction.">Crea un duplicato della transazione.</summary>
      <returns vsli:raw="A &lt;see cref=&quot;T:System.Transactions.Transaction&quot; /&gt; that is a copy of the current transaction object.">Oggetto <see cref="T:System.Transactions.Transaction" /> che rappresenta una copia dell'oggetto transazione corrente.</returns>
    </member>
    <member name="M:System.Transactions.Transaction.DependentClone(System.Transactions.DependentCloneOption)">
      <summary vsli:raw="Creates a dependent clone of the transaction.">Crea un duplicato dipendente della transazione.</summary>
      <param name="cloneOption" vsli:raw="A &lt;see cref=&quot;T:System.Transactions.DependentCloneOption&quot; /&gt; that controls what kind of dependent transaction to create.">Oggetto <see cref="T:System.Transactions.DependentCloneOption" /> che controlla il tipo di transazione dipendente da creare.</param>
      <returns vsli:raw="A &lt;see cref=&quot;T:System.Transactions.DependentTransaction&quot; /&gt; that represents the dependent clone.">Oggetto <see cref="T:System.Transactions.DependentTransaction" /> che rappresenta il duplicato dipendente.</returns>
    </member>
    <member name="M:System.Transactions.Transaction.Dispose">
      <summary vsli:raw="Releases the resources that are held by the object.">Rilascia le risorse contenute nell'oggetto.</summary>
    </member>
    <member name="M:System.Transactions.Transaction.EnlistDurable(System.Guid,System.Transactions.IEnlistmentNotification,System.Transactions.EnlistmentOptions)">
      <summary vsli:raw="Enlists a durable resource manager that supports two phase commit to participate in a transaction.">Integra una gestione risorse durature che supporta il commit a due fasi per la partecipazione a una transazione.</summary>
      <param name="resourceManagerIdentifier" vsli:raw="A unique identifier for a resource manager, which should persist across resource manager failure or reboot.">Identificatore univoco di un gestore delle risorse, che deve essere mantenuto dopo un riavvio o un errore del gestore delle risorse.</param>
      <param name="enlistmentNotification" vsli:raw="An object that implements the &lt;see cref=&quot;T:System.Transactions.IEnlistmentNotification&quot; /&gt; interface to receive two phase commit notifications.">Oggetto che implementa l'interfaccia <see cref="T:System.Transactions.IEnlistmentNotification" /> per ricevere le notifiche di commit a due fasi.</param>
      <param name="enlistmentOptions" vsli:raw="&lt;see cref=&quot;F:System.Transactions.EnlistmentOptions.EnlistDuringPrepareRequired&quot; /&gt; if the resource manager wants to perform additional work during the prepare phase.">
        <see cref="F:System.Transactions.EnlistmentOptions.EnlistDuringPrepareRequired" /> se il gestore di risorse vuole eseguire altre operazioni durante la fase di preparazione.</param>
      <returns vsli:raw="An &lt;see cref=&quot;T:System.Transactions.Enlistment&quot; /&gt; object that describes the enlistment.">Oggetto <see cref="T:System.Transactions.Enlistment" /> che descrive l'integrazione.</returns>
    </member>
    <member name="M:System.Transactions.Transaction.EnlistDurable(System.Guid,System.Transactions.ISinglePhaseNotification,System.Transactions.EnlistmentOptions)">
      <summary vsli:raw="Enlists a durable resource manager that supports single phase commit optimization to participate in a transaction.">Integra una gestione risorse durature che supporta l'ottimizzazione del commit a una fase per la partecipazione a una transazione.</summary>
      <param name="resourceManagerIdentifier" vsli:raw="A unique identifier for a resource manager, which should persist across resource manager failure or reboot.">Identificatore univoco di un gestore delle risorse, che deve essere mantenuto dopo un riavvio o un errore del gestore delle risorse.</param>
      <param name="singlePhaseNotification" vsli:raw="An object that implements the &lt;see cref=&quot;T:System.Transactions.ISinglePhaseNotification&quot; /&gt; interface that must be able to receive single phase commit and two phase commit notifications.">Oggetto che implementa l'interfaccia <see cref="T:System.Transactions.ISinglePhaseNotification" /> che deve essere in grado di ricevere le notifiche di commit a una fase e di commit a due fasi.</param>
      <param name="enlistmentOptions" vsli:raw="&lt;see cref=&quot;F:System.Transactions.EnlistmentOptions.EnlistDuringPrepareRequired&quot; /&gt; if the resource manager wants to perform additional work during the prepare phase.">
        <see cref="F:System.Transactions.EnlistmentOptions.EnlistDuringPrepareRequired" /> se il gestore di risorse vuole eseguire altre operazioni durante la fase di preparazione.</param>
      <returns vsli:raw="An &lt;see cref=&quot;T:System.Transactions.Enlistment&quot; /&gt; object that describes the enlistment.">Oggetto <see cref="T:System.Transactions.Enlistment" /> che descrive l'integrazione.</returns>
    </member>
    <member name="M:System.Transactions.Transaction.EnlistPromotableSinglePhase(System.Transactions.IPromotableSinglePhaseNotification)">
      <summary vsli:raw="Enlists a resource manager that has an internal transaction using a promotable single phase enlistment (PSPE).">Inserisce un gestore risorse con una transazione interna che usa un'integrazione PSPE (Promotable Single Phase Enlistment).</summary>
      <param name="promotableSinglePhaseNotification" vsli:raw="A &lt;see cref=&quot;T:System.Transactions.IPromotableSinglePhaseNotification&quot; /&gt; interface implemented by the participant.">Interfaccia <see cref="T:System.Transactions.IPromotableSinglePhaseNotification" /> implementata dal partecipante.</param>
      <returns vsli:raw="A &lt;see cref=&quot;T:System.Transactions.SinglePhaseEnlistment&quot; /&gt; interface implementation that describes the enlistment.">Implementazione di un'interfaccia <see cref="T:System.Transactions.SinglePhaseEnlistment" /> che descrive l'integrazione.</returns>
    </member>
    <member name="M:System.Transactions.Transaction.EnlistPromotableSinglePhase(System.Transactions.IPromotableSinglePhaseNotification,System.Guid)">
      <summary vsli:raw="Enlists a resource manager that has an internal transaction using a promotable single phase enlistment (PSPE).">Inserisce un gestore risorse con una transazione interna che usa un'integrazione PSPE (Promotable Single Phase Enlistment).</summary>
      <param name="promotableSinglePhaseNotification" vsli:raw="A &lt;see cref=&quot;T:System.Transactions.IPromotableSinglePhaseNotification&quot; /&gt; interface implemented by the participant.">Interfaccia <see cref="T:System.Transactions.IPromotableSinglePhaseNotification" /> implementata dal partecipante.</param>
      <param name="promoterType" vsli:raw="The type of the distributed transaction processor.">Tipo di elaborazione delle transazioni distribuite.</param>
      <returns vsli:raw="A &lt;see cref=&quot;T:System.Transactions.SinglePhaseEnlistment&quot; /&gt; interface implementation that describes the enlistment.">Implementazione di un'interfaccia <see cref="T:System.Transactions.SinglePhaseEnlistment" /> che descrive l'integrazione.</returns>
    </member>
    <member name="M:System.Transactions.Transaction.EnlistVolatile(System.Transactions.IEnlistmentNotification,System.Transactions.EnlistmentOptions)">
      <summary vsli:raw="Enlists a volatile resource manager that supports two phase commit to participate in a transaction.">Integra un gestore di risorse volatili che supporta il commit a due fasi per partecipare a una transazione.</summary>
      <param name="enlistmentNotification" vsli:raw="An object that implements the &lt;see cref=&quot;T:System.Transactions.IEnlistmentNotification&quot; /&gt; interface to receive two-phase commit notifications.">Oggetto che implementa l'interfaccia <see cref="T:System.Transactions.IEnlistmentNotification" /> per ricevere notifiche relative al commit a due fasi.</param>
      <param name="enlistmentOptions" vsli:raw="&lt;see cref=&quot;F:System.Transactions.EnlistmentOptions.EnlistDuringPrepareRequired&quot; /&gt; if the resource manager wants to perform additional work during the prepare phase.">
        <see cref="F:System.Transactions.EnlistmentOptions.EnlistDuringPrepareRequired" /> se il gestore di risorse vuole eseguire altre operazioni durante la fase di preparazione.</param>
      <returns vsli:raw="An &lt;see cref=&quot;T:System.Transactions.Enlistment&quot; /&gt; object that describes the enlistment.">Oggetto <see cref="T:System.Transactions.Enlistment" /> che descrive l'integrazione.</returns>
    </member>
    <member name="M:System.Transactions.Transaction.EnlistVolatile(System.Transactions.ISinglePhaseNotification,System.Transactions.EnlistmentOptions)">
      <summary vsli:raw="Enlists a volatile resource manager that supports single phase commit optimization to participate in a transaction.">Integra una gestione risorse volatili che supporta l'ottimizzazione del commit a una fase per la partecipazione a una transazione.</summary>
      <param name="singlePhaseNotification" vsli:raw="An object that implements the &lt;see cref=&quot;T:System.Transactions.ISinglePhaseNotification&quot; /&gt; interface that must be able to receive single phase commit and two phase commit notifications.">Oggetto che implementa l'interfaccia <see cref="T:System.Transactions.ISinglePhaseNotification" /> che deve essere in grado di ricevere le notifiche di commit a una fase e di commit a due fasi.</param>
      <param name="enlistmentOptions" vsli:raw="&lt;see cref=&quot;F:System.Transactions.EnlistmentOptions.EnlistDuringPrepareRequired&quot; /&gt; if the resource manager wants to perform additional work during the prepare phase.">
        <see cref="F:System.Transactions.EnlistmentOptions.EnlistDuringPrepareRequired" /> se il gestore di risorse vuole eseguire altre operazioni durante la fase di preparazione.</param>
      <returns vsli:raw="An &lt;see cref=&quot;T:System.Transactions.Enlistment&quot; /&gt; object that describes the enlistment.">Oggetto <see cref="T:System.Transactions.Enlistment" /> che descrive l'integrazione.</returns>
    </member>
    <member name="M:System.Transactions.Transaction.Equals(System.Object)">
      <summary vsli:raw="Determines whether this transaction and the specified object are equal.">Determina se questa transazione e l'oggetto specificato sono uguali.</summary>
      <param name="obj" vsli:raw="The object to compare with this instance.">Oggetto da confrontare con questa istanza.</param>
      <returns vsli:raw="&lt;see langword=&quot;true&quot; /&gt; if &lt;paramref name=&quot;obj&quot; /&gt; and this transaction are identical; otherwise, &lt;see langword=&quot;false&quot; /&gt;.">
        <see langword="true" /> se <paramref name="obj" /> e questa transazione sono identici; in caso contrario, <see langword="false" />.</returns>
    </member>
    <member name="M:System.Transactions.Transaction.GetHashCode">
      <summary vsli:raw="Returns the hash code for this instance.">Restituisce il codice hash per l'istanza.</summary>
      <returns vsli:raw="A 32-bit signed integer hash code.">Codice hash di un intero con segno a 32 bit.</returns>
    </member>
    <member name="M:System.Transactions.Transaction.GetPromotedToken">
      <summary vsli:raw="Gets the  &lt;c&gt;byte[]&lt;/c&gt; returned by the &lt;c&gt;Promote&lt;/c&gt; method when the transaction is promoted.">Ottiene l'oggetto <c>byte[]</c> restituito dal metodo <c>Promote</c> quando la transazione viene promossa.</summary>
      <returns vsli:raw="The  &lt;c&gt;byte[]&lt;/c&gt; returned by the &lt;c&gt;Promote&lt;/c&gt; method when the transaction is promoted.">Oggetto <c>byte[]</c> restituito dal metodo <c>Promote</c> quando la transazione viene promossa.</returns>
    </member>
    <member name="M:System.Transactions.Transaction.op_Equality(System.Transactions.Transaction,System.Transactions.Transaction)">
      <summary vsli:raw="Tests whether two specified &lt;see cref=&quot;T:System.Transactions.Transaction&quot; /&gt; instances are equivalent.">Verifica se due istanze di <see cref="T:System.Transactions.Transaction" /> specificate sono equivalenti.</summary>
      <param name="x" vsli:raw="The &lt;see cref=&quot;T:System.Transactions.Transaction&quot; /&gt; instance that is to the left of the equality operator.">Istanza della struttura <see cref="T:System.Transactions.Transaction" /> a sinistra dell'operatore di uguaglianza.</param>
      <param name="y" vsli:raw="The &lt;see cref=&quot;T:System.Transactions.Transaction&quot; /&gt; instance that is to the right of the equality operator.">Istanza della struttura <see cref="T:System.Transactions.Transaction" /> a destra dell'operatore di uguaglianza.</param>
      <returns vsli:raw="&lt;see langword=&quot;true&quot; /&gt; if &lt;paramref name=&quot;x&quot; /&gt; and &lt;paramref name=&quot;y&quot; /&gt; are equal; otherwise, &lt;see langword=&quot;false&quot; /&gt;.">
        <see langword="true" /> se <paramref name="x" /> e <paramref name="y" /> sono uguali; in caso contrario, <see langword="false" />.</returns>
    </member>
    <member name="M:System.Transactions.Transaction.op_Inequality(System.Transactions.Transaction,System.Transactions.Transaction)">
      <summary vsli:raw="Returns a value that indicates whether two &lt;see cref=&quot;T:System.Transactions.Transaction&quot; /&gt; instances are not equal.">Restituisce un valore che indica se due istanze di <see cref="T:System.Transactions.Transaction" /> non sono uguali.</summary>
      <param name="x" vsli:raw="The &lt;see cref=&quot;T:System.Transactions.Transaction&quot; /&gt; instance that is to the left of the inequality operator.">Istanza di <see cref="T:System.Transactions.Transaction" /> a sinistra dell'operatore di disuguaglianza.</param>
      <param name="y" vsli:raw="The &lt;see cref=&quot;T:System.Transactions.Transaction&quot; /&gt; instance that is to the right of the inequality operator.">Istanza della struttura <see cref="T:System.Transactions.Transaction" /> a destra dell'operatore di disuguaglianza.</param>
      <returns vsli:raw="&lt;see langword=&quot;true&quot; /&gt; if &lt;paramref name=&quot;x&quot; /&gt; and &lt;paramref name=&quot;y&quot; /&gt; are not equal; otherwise, &lt;see langword=&quot;false&quot; /&gt;.">
        <see langword="true" /> se <paramref name="x" /> e <paramref name="y" /> non sono uguali; in caso contrario, <see langword="false" />.</returns>
    </member>
    <member name="M:System.Transactions.Transaction.PromoteAndEnlistDurable(System.Guid,System.Transactions.IPromotableSinglePhaseNotification,System.Transactions.ISinglePhaseNotification,System.Transactions.EnlistmentOptions)">
      <summary vsli:raw="Promotes and enlists a durable resource manager that supports two phase commit to participate in a transaction.">Promuove e inserisce una gestione risorse duratura che supporta il commit a due fasi per la partecipazione a una transazione.</summary>
      <param name="resourceManagerIdentifier" vsli:raw="A unique identifier for a resource manager, which should persist across resource manager failure or reboot.">Identificatore univoco di un gestore delle risorse, che deve essere mantenuto dopo un riavvio o un errore del gestore delle risorse.</param>
      <param name="promotableNotification" vsli:raw="An object that acts as a commit delegate for a non-distributed transaction internal to a resource manager.">Un oggetto che svolge la funzione di delegato di commit per una transazione non distribuita interna a una gestione risorse.</param>
      <param name="enlistmentNotification" vsli:raw="An object that implements the &lt;see cref=&quot;T:System.Transactions.IEnlistmentNotification&quot; /&gt; interface to receive two phase commit notifications.">Oggetto che implementa l'interfaccia <see cref="T:System.Transactions.IEnlistmentNotification" /> per ricevere le notifiche di commit a due fasi.</param>
      <param name="enlistmentOptions" vsli:raw="&lt;see cref=&quot;F:System.Transactions.EnlistmentOptions.EnlistDuringPrepareRequired&quot; /&gt; if the resource manager wants to perform additional work during the prepare phase.">
        <see cref="F:System.Transactions.EnlistmentOptions.EnlistDuringPrepareRequired" /> se il gestore di risorse vuole eseguire altre operazioni durante la fase di preparazione.</param>
    </member>
    <member name="M:System.Transactions.Transaction.Rollback">
      <summary vsli:raw="Rolls back (aborts) the transaction.">Esegue il rollback (interruzione) della transazione.</summary>
    </member>
    <member name="M:System.Transactions.Transaction.Rollback(System.Exception)">
      <summary vsli:raw="Rolls back (aborts) the transaction.">Esegue il rollback (interruzione) della transazione.</summary>
      <param name="e" vsli:raw="An explanation of why a rollback occurred.">Spiegazione del motivo per cui si è verificato un rollback.</param>
    </member>
    <member name="M:System.Transactions.Transaction.SetDistributedTransactionIdentifier(System.Transactions.IPromotableSinglePhaseNotification,System.Guid)">
      <summary vsli:raw="Sets the distributed transaction identifier generated by the non-MSDTC promoter.">Imposta l'identificatore di transazione distribuita generato dal promotore non MSDTC.</summary>
      <param name="promotableNotification" vsli:raw="A &lt;see cref=&quot;T:System.Transactions.IPromotableSinglePhaseNotification&quot; /&gt; interface implemented by the participant.">Interfaccia <see cref="T:System.Transactions.IPromotableSinglePhaseNotification" /> implementata dal partecipante.</param>
      <param name="distributedTransactionIdentifier" vsli:raw="The identifier for the transaction used by the distributed transaction manager.">Identificatore della transazione usato per la gestione transazioni distribuite.</param>
    </member>
    <member name="M:System.Transactions.Transaction.System#Runtime#Serialization#ISerializable#GetObjectData(System.Runtime.Serialization.SerializationInfo,System.Runtime.Serialization.StreamingContext)">
      <summary vsli:raw="Gets a &lt;see cref=&quot;T:System.Runtime.Serialization.SerializationInfo&quot; /&gt; with the data required to serialize this transaction.">Ottiene un oggetto <see cref="T:System.Runtime.Serialization.SerializationInfo" /> con i dati richiesti per la serializzazione di questa transazione.</summary>
      <param name="serializationInfo" vsli:raw="The &lt;see cref=&quot;T:System.Runtime.Serialization.SerializationInfo&quot; /&gt; to populate with data.">Oggetto <see cref="T:System.Runtime.Serialization.SerializationInfo" /> da popolare con i dati.</param>
      <param name="context" vsli:raw="The destination (see &lt;see cref=&quot;T:System.Runtime.Serialization.StreamingContext&quot; /&gt; ) for this serialization.">Destinazione (vedere <see cref="T:System.Runtime.Serialization.StreamingContext" />) della serializzazione.</param>
    </member>
    <member name="P:System.Transactions.Transaction.Current">
      <summary vsli:raw="Gets or sets the ambient transaction.">Ottiene o imposta la transizione dell'ambiente.</summary>
      <returns vsli:raw="A &lt;see cref=&quot;T:System.Transactions.Transaction&quot; /&gt; that describes the current transaction.">Oggetto <see cref="T:System.Transactions.Transaction" /> che descrive la transazione corrente.</returns>
    </member>
    <member name="P:System.Transactions.Transaction.IsolationLevel">
      <summary vsli:raw="Gets the isolation level of the transaction.">Ottiene il livello di isolamento della transazione.</summary>
      <returns vsli:raw="One of the &lt;see cref=&quot;T:System.Transactions.IsolationLevel&quot; /&gt; values that indicates the isolation level of the transaction.">Uno dei valori <see cref="T:System.Transactions.IsolationLevel" /> che indica il livello di isolamento della transazione.</returns>
    </member>
    <member name="P:System.Transactions.Transaction.PromoterType">
      <summary vsli:raw="Uniquely identifies the format of the &lt;c&gt;byte[]&lt;/c&gt; returned by the Promote method when the transaction is promoted.">Identifica in modo univoco il formato dell'oggetto <c>byte[]</c> restituito dal metodo Promote quando la transazione viene promossa.</summary>
      <returns vsli:raw="A guid that uniquely identifies the format of the &lt;c&gt;byte[]&lt;/c&gt; returned by the Promote method when the transaction is promoted.">GUID che identifica in modo univoco il formato del <c>byte []</c> restituito dal metodo Promote quando la transazione viene innalzata di livello.</returns>
    </member>
    <member name="P:System.Transactions.Transaction.TransactionInformation">
      <summary vsli:raw="Retrieves additional information about a transaction.">Recupera informazioni aggiuntive su una transazione.</summary>
      <returns vsli:raw="A &lt;see cref=&quot;T:System.Transactions.TransactionInformation&quot; /&gt; that contains additional information about the transaction.">Oggetto <see cref="T:System.Transactions.TransactionInformation" /> che contiene informazioni aggiuntive sulla transazione.</returns>
    </member>
    <member name="T:System.Transactions.TransactionAbortedException">
      <summary vsli:raw="The exception that is thrown when an operation is attempted on a transaction that has already been rolled back, or an attempt is made to commit the transaction and the transaction aborts.">Eccezione generata quando si è tentato di eseguire un'operazione in una transazione di cui è già stato eseguito il rollback oppure si è tentato di eseguire il commit della transazione e la transazione si interrompe.</summary>
    </member>
    <member name="M:System.Transactions.TransactionAbortedException.#ctor">
      <summary vsli:raw="Initializes a new instance of the &lt;see cref=&quot;T:System.Transactions.TransactionAbortedException&quot; /&gt; class.">Inizializza una nuova istanza della classe <see cref="T:System.Transactions.TransactionAbortedException" />.</summary>
    </member>
    <member name="M:System.Transactions.TransactionAbortedException.#ctor(System.Runtime.Serialization.SerializationInfo,System.Runtime.Serialization.StreamingContext)">
      <summary vsli:raw="Initializes a new instance of the &lt;see cref=&quot;T:System.Transactions.TransactionAbortedException&quot; /&gt; class with the specified serialization and streaming context information.">Inizializza una nuova istanza della classe <see cref="T:System.Transactions.TransactionAbortedException" /> con le informazioni relative a serializzazione e contesto di flusso specificate.</summary>
      <param name="info" vsli:raw="A &lt;see cref=&quot;T:System.Runtime.Serialization.SerializationInfo&quot; /&gt; object that describes a failed serialization.">Oggetto <see cref="T:System.Runtime.Serialization.SerializationInfo" /> che descrive una serializzazione non riuscita.</param>
      <param name="context" vsli:raw="A &lt;see cref=&quot;T:System.Runtime.Serialization.SerializationInfo&quot; /&gt; object that describes a failed serialization context.">Oggetto <see cref="T:System.Runtime.Serialization.SerializationInfo" /> che descrive un contesto di serializzazione non riuscito.</param>
    </member>
    <member name="M:System.Transactions.TransactionAbortedException.#ctor(System.String)">
      <summary vsli:raw="Initializes a new instance of the &lt;see cref=&quot;T:System.Transactions.TransactionAbortedException&quot; /&gt; class with the specified message.">Inizializza una nuova istanza della classe <see cref="T:System.Transactions.TransactionAbortedException" /> con il messaggio specificato.</summary>
      <param name="message" vsli:raw="A &lt;see cref=&quot;T:System.String&quot; /&gt; that contains a message that explains why the exception occurred.">Oggetto <see cref="T:System.String" /> contenente un messaggio in cui è illustrata la causa dell'eccezione.</param>
    </member>
    <member name="M:System.Transactions.TransactionAbortedException.#ctor(System.String,System.Exception)">
      <summary vsli:raw="Initializes a new instance of the &lt;see cref=&quot;T:System.Transactions.TransactionAbortedException&quot; /&gt; class with the specified message and inner exception.">Inizializza una nuova istanza della classe <see cref="T:System.Transactions.TransactionAbortedException" /> con il messaggio e l'eccezione interna specificati.</summary>
      <param name="message" vsli:raw="A &lt;see cref=&quot;T:System.String&quot; /&gt; that contains a message that explains why the exception occurred.">Oggetto <see cref="T:System.String" /> contenente un messaggio in cui è illustrata la causa dell'eccezione.</param>
      <param name="innerException" vsli:raw="Gets the exception instance that causes the current exception. For more information, see the &lt;see cref=&quot;P:System.Exception.InnerException&quot; /&gt; property.">Ottiene l'istanza dell'eccezione che causa l'eccezione corrente. Per altre informazioni, vedere la proprietà <see cref="P:System.Exception.InnerException" />.</param>
    </member>
    <member name="T:System.Transactions.TransactionCompletedEventHandler">
      <summary vsli:raw="Represents the method that handles the &lt;see cref=&quot;E:System.Transactions.Transaction.TransactionCompleted&quot; /&gt; event of a &lt;see cref=&quot;T:System.Transactions.Transaction&quot; /&gt; class.">Rappresenta il metodo che gestisce l'evento <see cref="E:System.Transactions.Transaction.TransactionCompleted" /> di una classe <see cref="T:System.Transactions.Transaction" />.</summary>
      <param name="sender" vsli:raw="The source of the event.">Origine dell'evento.</param>
      <param name="e" vsli:raw="The &lt;see cref=&quot;T:System.Transactions.TransactionEventArgs&quot; /&gt; that contains the event data.">Oggetto <see cref="T:System.Transactions.TransactionEventArgs" /> che contiene i dati dell'evento.</param>
    </member>
    <member name="T:System.Transactions.TransactionEventArgs">
      <summary vsli:raw="Provides data for the following transaction events: &lt;see cref=&quot;E:System.Transactions.TransactionManager.DistributedTransactionStarted&quot; /&gt;, &lt;see cref=&quot;E:System.Transactions.Transaction.TransactionCompleted&quot; /&gt;.">Fornisce i dati per i seguenti eventi di transazione: <see cref="E:System.Transactions.TransactionManager.DistributedTransactionStarted" /> e <see cref="E:System.Transactions.Transaction.TransactionCompleted" />.</summary>
    </member>
    <member name="M:System.Transactions.TransactionEventArgs.#ctor">
      <summary vsli:raw="Initializes a new instance of the &lt;see cref=&quot;T:System.Transactions.TransactionEventArgs&quot; /&gt; class.">Inizializza una nuova istanza della classe <see cref="T:System.Transactions.TransactionEventArgs" />.</summary>
    </member>
    <member name="P:System.Transactions.TransactionEventArgs.Transaction">
      <summary vsli:raw="Gets the transaction for which event status is provided.">Ottiene la transazione per cui viene fornito lo stato di evento.</summary>
      <returns vsli:raw="A &lt;see cref=&quot;T:System.Transactions.Transaction&quot; /&gt; for which event status is provided.">Oggetto <see cref="T:System.Transactions.Transaction" /> per cui viene fornito lo stato di evento.</returns>
    </member>
    <member name="T:System.Transactions.TransactionException">
      <summary vsli:raw="The exception that is thrown when you attempt to do work on a transaction that cannot accept new work.">Eccezione generata quando si tenta di operare in una transazione che non può accettare nuove operazioni.</summary>
    </member>
    <member name="M:System.Transactions.TransactionException.#ctor">
      <summary vsli:raw="Initializes a new instance of the &lt;see cref=&quot;T:System.Transactions.TransactionException&quot; /&gt; class.">Inizializza una nuova istanza della classe <see cref="T:System.Transactions.TransactionException" />.</summary>
    </member>
    <member name="M:System.Transactions.TransactionException.#ctor(System.Runtime.Serialization.SerializationInfo,System.Runtime.Serialization.StreamingContext)">
      <summary vsli:raw="Initializes a new instance of the &lt;see cref=&quot;T:System.Transactions.TransactionException&quot; /&gt; class with the specified serialization and streaming context information.">Inizializza una nuova istanza della classe <see cref="T:System.Transactions.TransactionException" /> con le informazioni relative a serializzazione e contesto di flusso specificate.</summary>
      <param name="info" vsli:raw="A &lt;see cref=&quot;T:System.Runtime.Serialization.SerializationInfo&quot; /&gt; object that describes a failed serialization.">Oggetto <see cref="T:System.Runtime.Serialization.SerializationInfo" /> che descrive una serializzazione non riuscita.</param>
      <param name="context" vsli:raw="A &lt;see cref=&quot;T:System.Runtime.Serialization.SerializationInfo&quot; /&gt; object that describes a failed serialization context.">Oggetto <see cref="T:System.Runtime.Serialization.SerializationInfo" /> che descrive un contesto di serializzazione non riuscito.</param>
    </member>
    <member name="M:System.Transactions.TransactionException.#ctor(System.String)">
      <summary vsli:raw="Initializes a new instance of the &lt;see cref=&quot;T:System.Transactions.TransactionException&quot; /&gt; class with the specified message.">Inizializza una nuova istanza della classe <see cref="T:System.Transactions.TransactionException" /> con il messaggio specificato.</summary>
      <param name="message" vsli:raw="A &lt;see cref=&quot;T:System.String&quot; /&gt; that contains a message that explains why the exception occurred.">Oggetto <see cref="T:System.String" /> contenente un messaggio in cui è illustrata la causa dell'eccezione.</param>
    </member>
    <member name="M:System.Transactions.TransactionException.#ctor(System.String,System.Exception)">
      <summary vsli:raw="Initializes a new instance of the &lt;see cref=&quot;T:System.Transactions.TransactionException&quot; /&gt; class with the specified message and inner exception.">Inizializza una nuova istanza della classe <see cref="T:System.Transactions.TransactionException" /> con il messaggio e l'eccezione interna specificati.</summary>
      <param name="message" vsli:raw="A &lt;see cref=&quot;T:System.String&quot; /&gt; that contains a message that explains why the exception occurred.">Oggetto <see cref="T:System.String" /> contenente un messaggio in cui è illustrata la causa dell'eccezione.</param>
      <param name="innerException" vsli:raw="Gets the exception instance that causes the current exception. For more information, see the &lt;see cref=&quot;P:System.Exception.InnerException&quot; /&gt; property.">Ottiene l'istanza dell'eccezione che causa l'eccezione corrente. Per altre informazioni, vedere la proprietà <see cref="P:System.Exception.InnerException" />.</param>
    </member>
    <member name="T:System.Transactions.TransactionInDoubtException">
      <summary vsli:raw="The exception that is thrown when an operation is attempted on a transaction that is in doubt, or an attempt is made to commit the transaction and the transaction becomes InDoubt.">Eccezione generata quando viene tentata un'operazione su una transazione in dubbio oppure quando si tenta di eseguire il commit della transazione e questa diventa InDoubt.</summary>
    </member>
    <member name="M:System.Transactions.TransactionInDoubtException.#ctor">
      <summary vsli:raw="Initializes a new instance of the &lt;see cref=&quot;T:System.Transactions.TransactionInDoubtException&quot; /&gt; class.">Inizializza una nuova istanza della classe <see cref="T:System.Transactions.TransactionInDoubtException" />.</summary>
    </member>
    <member name="M:System.Transactions.TransactionInDoubtException.#ctor(System.Runtime.Serialization.SerializationInfo,System.Runtime.Serialization.StreamingContext)">
      <summary vsli:raw="Initializes a new instance of the &lt;see cref=&quot;T:System.Transactions.TransactionInDoubtException&quot; /&gt; class with the specified serialization and streaming context information.">Inizializza una nuova istanza della classe <see cref="T:System.Transactions.TransactionInDoubtException" /> con le informazioni relative a serializzazione e contesto di flusso specificate.</summary>
      <param name="info" vsli:raw="A &lt;see cref=&quot;T:System.Runtime.Serialization.SerializationInfo&quot; /&gt; object that describes a failed serialization.">Oggetto <see cref="T:System.Runtime.Serialization.SerializationInfo" /> che descrive una serializzazione non riuscita.</param>
      <param name="context" vsli:raw="A &lt;see cref=&quot;T:System.Runtime.Serialization.SerializationInfo&quot; /&gt; object that describes a failed serialization context.">Oggetto <see cref="T:System.Runtime.Serialization.SerializationInfo" /> che descrive un contesto di serializzazione non riuscito.</param>
    </member>
    <member name="M:System.Transactions.TransactionInDoubtException.#ctor(System.String)">
      <summary vsli:raw="Initializes a new instance of the &lt;see cref=&quot;T:System.Transactions.TransactionInDoubtException&quot; /&gt; class with the specified message.">Inizializza una nuova istanza della classe <see cref="T:System.Transactions.TransactionInDoubtException" /> con il messaggio specificato.</summary>
      <param name="message" vsli:raw="A &lt;see cref=&quot;T:System.String&quot; /&gt; that contains a message that explains why the exception occurred.">Oggetto <see cref="T:System.String" /> contenente un messaggio in cui è illustrata la causa dell'eccezione.</param>
    </member>
    <member name="M:System.Transactions.TransactionInDoubtException.#ctor(System.String,System.Exception)">
      <summary vsli:raw="Initializes a new instance of the &lt;see cref=&quot;T:System.Transactions.TransactionInDoubtException&quot; /&gt; class with the specified message and inner exception.">Inizializza una nuova istanza della classe <see cref="T:System.Transactions.TransactionInDoubtException" /> con il messaggio e l'eccezione interna specificati.</summary>
      <param name="message" vsli:raw="A &lt;see cref=&quot;T:System.String&quot; /&gt; that contains a message that explains why the exception occurred.">Oggetto <see cref="T:System.String" /> contenente un messaggio in cui è illustrata la causa dell'eccezione.</param>
      <param name="innerException" vsli:raw="Gets the exception instance that causes the current exception. For more information, see the &lt;see cref=&quot;P:System.Exception.InnerException&quot; /&gt; property.">Ottiene l'istanza dell'eccezione che causa l'eccezione corrente. Per altre informazioni, vedere la proprietà <see cref="P:System.Exception.InnerException" />.</param>
    </member>
    <member name="T:System.Transactions.TransactionInformation">
      <summary vsli:raw="Provides additional information regarding a transaction.">Fornisce informazioni aggiuntive su una transazione.</summary>
    </member>
    <member name="P:System.Transactions.TransactionInformation.CreationTime">
      <summary vsli:raw="Gets the creation time of the transaction.">Ottiene l'ora di creazione della transazione.</summary>
      <returns vsli:raw="A &lt;see cref=&quot;T:System.DateTime&quot; /&gt; that contains the creation time of the transaction.">Struttura <see cref="T:System.DateTime" /> contenente l'ora di creazione della transazione.</returns>
    </member>
    <member name="P:System.Transactions.TransactionInformation.DistributedIdentifier">
      <summary vsli:raw="Gets a unique identifier of the escalated transaction.">Ottiene un identificatore univoco della transazione per cui è stata eseguita un'escalation.</summary>
      <returns vsli:raw="A &lt;see cref=&quot;T:System.Guid&quot; /&gt; that contains the unique identifier of the escalated transaction.">Oggetto <see cref="T:System.Guid" /> contenente l'identificatore univoco della transazione per cui è stata eseguita un'escalation.</returns>
    </member>
    <member name="P:System.Transactions.TransactionInformation.LocalIdentifier">
      <summary vsli:raw="Gets a unique identifier of the transaction.">Ottiene un identificatore univoco della transazione.</summary>
      <returns vsli:raw="A unique identifier of the transaction.">Identificatore univoco della transazione.</returns>
    </member>
    <member name="P:System.Transactions.TransactionInformation.Status">
      <summary vsli:raw="Gets the status of the transaction.">Ottiene lo stato della transazione.</summary>
      <returns vsli:raw="A &lt;see cref=&quot;T:System.Transactions.TransactionStatus&quot; /&gt; that contains the status of the transaction.">Oggetto <see cref="T:System.Transactions.TransactionStatus" /> contenente lo stato della transazione.</returns>
    </member>
    <member name="T:System.Transactions.TransactionInterop">
      <summary vsli:raw="Facilitates interaction between &lt;see cref=&quot;N:System.Transactions&quot; /&gt; and components that were previously written to interact with MSDTC, COM+, or &lt;see cref=&quot;N:System.EnterpriseServices&quot; /&gt;. This class cannot be inherited.">Facilita l'interazione tra <see cref="N:System.Transactions" /> e i componenti che sono stati precedentemente scritti per interagire con MSDTC, COM+ o <see cref="N:System.EnterpriseServices" />. La classe non può essere ereditata.</summary>
    </member>
    <member name="F:System.Transactions.TransactionInterop.PromoterTypeDtc">
      <summary vsli:raw="The type of the distributed transaction processor.">Tipo di elaborazione delle transazioni distribuite.</summary>
    </member>
    <member name="M:System.Transactions.TransactionInterop.GetDtcTransaction(System.Transactions.Transaction)">
      <summary vsli:raw="Gets an &lt;see cref=&quot;T:System.Transactions.IDtcTransaction&quot; /&gt; instance that represents a &lt;see cref=&quot;T:System.Transactions.Transaction&quot; /&gt;.">Ottiene un'istanza di <see cref="T:System.Transactions.IDtcTransaction" /> che rappresenta un oggetto <see cref="T:System.Transactions.Transaction" />.</summary>
      <param name="transaction" vsli:raw="A &lt;see cref=&quot;T:System.Transactions.Transaction&quot; /&gt; instance to be marshaled.">Istanza di <see cref="T:System.Transactions.Transaction" /> di cui effettuare il marshalling.</param>
      <returns vsli:raw="An &lt;see cref=&quot;T:System.Transactions.IDtcTransaction&quot; /&gt; instance that represents a &lt;see cref=&quot;T:System.Transactions.Transaction&quot; /&gt;.  The &lt;see cref=&quot;T:System.Transactions.IDtcTransaction&quot; /&gt; instance is compatible with the unmanaged form of ITransaction used by MSDTC and with the Managed form of &lt;see cref=&quot;T:System.EnterpriseServices.ITransaction&quot; /&gt; used by &lt;see cref=&quot;N:System.EnterpriseServices&quot; /&gt;.">Istanza di <see cref="T:System.Transactions.IDtcTransaction" /> che rappresenta un oggetto <see cref="T:System.Transactions.Transaction" />.  L'istanza di <see cref="T:System.Transactions.IDtcTransaction" /> è compatibile con la forma non gestita di ITransaction usata da MSDTC e con la forma gestita di <see cref="T:System.EnterpriseServices.ITransaction" /> usata da <see cref="N:System.EnterpriseServices" />.</returns>
    </member>
    <member name="M:System.Transactions.TransactionInterop.GetExportCookie(System.Transactions.Transaction,System.Byte[])">
      <summary vsli:raw="Transforms a transaction object into an export transaction cookie.">Trasforma un oggetto transazione in un cookie della transazione di esportazione.</summary>
      <param name="transaction" vsli:raw="The &lt;see cref=&quot;T:System.Transactions.Transaction&quot; /&gt; object to be marshaled.">Oggetto <see cref="T:System.Transactions.Transaction" /> di cui effettuare il marshalling.</param>
      <param name="whereabouts" vsli:raw="An address that describes the location of the destination transaction manager. This permits two transaction managers to communicate with one another and thereby propagate a transaction from one system to the other.">Indirizzo in cui è descritto il percorso del servizio di gestione transazioni di destinazione. In tal modo due servizi di gestione transazioni saranno in grado di comunicare tra loro e propagare una transazione da un sistema all'altro.</param>
      <returns vsli:raw="An export transaction cookie representing the specified &lt;see cref=&quot;T:System.Transactions.Transaction&quot; /&gt; object.">Cookie della transazione di esportazione che rappresenta l'oggetto <see cref="T:System.Transactions.Transaction" /> specificato.</returns>
    </member>
    <member name="M:System.Transactions.TransactionInterop.GetTransactionFromDtcTransaction(System.Transactions.IDtcTransaction)">
      <summary vsli:raw="Generates a &lt;see cref=&quot;T:System.Transactions.Transaction&quot; /&gt; from a specified &lt;see cref=&quot;T:System.Transactions.IDtcTransaction&quot; /&gt;.">Genera un oggetto <see cref="T:System.Transactions.Transaction" /> da un oggetto <see cref="T:System.Transactions.IDtcTransaction" /> specificato.</summary>
      <param name="transactionNative" vsli:raw="The &lt;see cref=&quot;T:System.Transactions.IDtcTransaction&quot; /&gt; object to be marshaled.">Oggetto <see cref="T:System.Transactions.IDtcTransaction" /> di cui effettuare il marshalling.</param>
      <returns vsli:raw="A &lt;see cref=&quot;T:System.Transactions.Transaction&quot; /&gt; instance that represents the given &lt;see cref=&quot;T:System.Transactions.IDtcTransaction&quot; /&gt;.">Istanza di <see cref="T:System.Transactions.Transaction" /> che rappresenta l'oggetto <see cref="T:System.Transactions.IDtcTransaction" /> dato.</returns>
    </member>
    <member name="M:System.Transactions.TransactionInterop.GetTransactionFromExportCookie(System.Byte[])">
      <summary vsli:raw="Generates a &lt;see cref=&quot;T:System.Transactions.Transaction&quot; /&gt; from the specified an export cookie.">Genera un oggetto <see cref="T:System.Transactions.Transaction" /> da un cookie di esportazione specificato.</summary>
      <param name="cookie" vsli:raw="A marshaled form of the transaction object.">Forma dell'oggetto transazione per cui è stato effettuato il marshalling.</param>
      <returns vsli:raw="A &lt;see cref=&quot;T:System.Transactions.Transaction&quot; /&gt; from the specified export cookie.">Oggetto <see cref="T:System.Transactions.Transaction" /> del cookie di esportazione specificato.</returns>
    </member>
    <member name="M:System.Transactions.TransactionInterop.GetTransactionFromTransmitterPropagationToken(System.Byte[])">
      <summary vsli:raw="Generates a &lt;see cref=&quot;T:System.Transactions.Transaction&quot; /&gt; instance from the specified transmitter propagation token.">Genera un'istanza di <see cref="T:System.Transactions.Transaction" /> dal token di propagazione del trasmettitore specificato.</summary>
      <param name="propagationToken" vsli:raw="A propagation token representing a transaction.">Token di propagazione che rappresenta una transazione.</param>
      <exception cref="T:System.Transactions.TransactionManagerCommunicationException" vsli:raw="The deserialization of a transaction fails because the transaction manager cannot be contacted. This may be caused by network firewall or security settings.">La deserializzazione di una transazione ha esito negativo in quanto il gestore delle transazioni non può essere contattato. Ciò potrebbe essere dovuto al firewall di rete oppure alle impostazioni di sicurezza.</exception>
      <returns vsli:raw="A &lt;see cref=&quot;T:System.Transactions.Transaction&quot; /&gt; from the specified transmitter propagation token.">Oggetto <see cref="T:System.Transactions.Transaction" /> del token di propagazione del trasmettitore specificato.</returns>
    </member>
    <member name="M:System.Transactions.TransactionInterop.GetTransmitterPropagationToken(System.Transactions.Transaction)">
      <summary vsli:raw="Generates a propagation token for the specified &lt;see cref=&quot;T:System.Transactions.Transaction&quot; /&gt;.">Genera un token di propagazione per l'oggetto <see cref="T:System.Transactions.Transaction" /> specificato.</summary>
      <param name="transaction" vsli:raw="A transaction to be marshaled into a propagation token.">Transazione di cui effettuare il marshalling in un token di propagazione.</param>
      <returns vsli:raw="This method, together with the &lt;see cref=&quot;M:System.Transactions.TransactionInterop.GetTransactionFromTransmitterPropagationToken(System.Byte[])&quot; /&gt; method, provide functionality for Transmitter/Receiver propagation, in which the transaction is &quot;pulled&quot; from the remote machine when the latter is called to unmarshal the transaction.  &#xA;  &#xA; For more information on different propagation models, see &lt;see cref=&quot;T:System.Transactions.TransactionInterop&quot; /&gt; class.">Questo metodo, insieme al metodo <see cref="M:System.Transactions.TransactionInterop.GetTransactionFromTransmitterPropagationToken(System.Byte[])" />, fornisce una funzionalità per la propagazione di tipo trasmettitore/ricevitore in cui la transazione viene estratta dal computer remoto quando viene chiamato il secondo metodo per effettuarne l'unmarshalling.  
  
Per altre informazioni sui diversi modelli di propagazione, vedere la classe <see cref="T:System.Transactions.TransactionInterop" />.</returns>
    </member>
    <member name="M:System.Transactions.TransactionInterop.GetWhereabouts">
      <summary vsli:raw="Gets the Whereabouts of the distributed transaction manager that &lt;see cref=&quot;N:System.Transactions&quot; /&gt; uses.">Ottiene il whereabouts del servizio di gestione transazioni distribuito usato da <see cref="N:System.Transactions" />.</summary>
      <returns vsli:raw="The Whereabouts of the distributed transaction manager that &lt;see cref=&quot;N:System.Transactions&quot; /&gt; uses.">Whereabouts del servizio di gestione transazioni distribuito usato da <see cref="N:System.Transactions" />.</returns>
    </member>
    <member name="T:System.Transactions.TransactionManager">
      <summary vsli:raw="Contains methods used for transaction management. This class cannot be inherited.">Contiene i metodi utilizzati per la gestione delle transazioni. La classe non può essere ereditata.</summary>
    </member>
    <member name="E:System.Transactions.TransactionManager.DistributedTransactionStarted">
      <summary vsli:raw="Indicates that a distributed transaction has started.">Indica che è iniziata una transazione distribuita.</summary>
    </member>
    <member name="M:System.Transactions.TransactionManager.RecoveryComplete(System.Guid)">
      <summary vsli:raw="Notifies the transaction manager that a resource manager recovering from failure has finished reenlisting in all unresolved transactions.">Notifica al gestore delle transazioni che un gestore delle risorse, che sta recuperando un errore, ha terminato il reinserimento nell'elenco di tutte le transazioni non risolte.</summary>
      <param name="resourceManagerIdentifier" vsli:raw="A &lt;see cref=&quot;T:System.Guid&quot; /&gt; that uniquely identifies the resource to be recovered from.">Struttura <see cref="T:System.Guid" /> che identifica in modo univoco la risorsa da recuperare.</param>
      <exception cref="T:System.ArgumentNullException" vsli:raw="The &lt;paramref name=&quot;resourceManagerIdentifier&quot; /&gt; parameter is &lt;see langword=&quot;null&quot; /&gt;.">Il valore del parametro <paramref name="resourceManagerIdentifier" /> è <see langword="null" />.</exception>
    </member>
    <member name="M:System.Transactions.TransactionManager.Reenlist(System.Guid,System.Byte[],System.Transactions.IEnlistmentNotification)">
      <summary vsli:raw="Reenlists a durable participant in a transaction.">Reinserisce nell'elenco un partecipante alla transazione duraturo.</summary>
      <param name="resourceManagerIdentifier" vsli:raw="A &lt;see cref=&quot;T:System.Guid&quot; /&gt; that uniquely identifies the resource manager.">Struttura <see cref="T:System.Guid" /> che identifica in modo univoco il gestore delle risorse.</param>
      <param name="recoveryInformation" vsli:raw="Contains additional information of recovery information.">Contiene informazioni aggiuntive alle informazioni per il recupero.</param>
      <param name="enlistmentNotification" vsli:raw="A resource object that implements &lt;see cref=&quot;T:System.Transactions.IEnlistmentNotification&quot; /&gt; to receive notifications.">Oggetto risorsa che implementa <see cref="T:System.Transactions.IEnlistmentNotification" /> per ricevere le notifiche.</param>
      <exception cref="T:System.ArgumentException" vsli:raw="&lt;paramref name=&quot;recoveryInformation&quot; /&gt; is invalid.  &#xA;  &#xA; -or-  &#xA;  &#xA; Transaction Manager information in &lt;paramref name=&quot;recoveryInformation&quot; /&gt; does not match the configured transaction manager.  &#xA;  &#xA; -or-  &#xA;  &#xA; &lt;paramref name=&quot;RecoveryInformation&quot; /&gt; is not recognized by &lt;see cref=&quot;N:System.Transactions&quot; /&gt;.">
        <paramref name="recoveryInformation" /> non è valido.  
  
-oppure- 
Le informazioni sul gestore delle transazioni presenti in <paramref name="recoveryInformation" /> non corrispondono al gestore delle transazioni configurato.  
  
-oppure- 
 <paramref name="RecoveryInformation" /> non è riconosciuto da <see cref="N:System.Transactions" />.</exception>
      <exception cref="T:System.InvalidOperationException" vsli:raw="&lt;see cref=&quot;M:System.Transactions.TransactionManager.RecoveryComplete(System.Guid)&quot; /&gt; has already been called for the specified &lt;paramref name=&quot;resourceManagerIdentifier&quot; /&gt;. The reenlistment is rejected.">
        <see cref="M:System.Transactions.TransactionManager.RecoveryComplete(System.Guid)" /> è gia stato chiamato per l'oggetto <paramref name="resourceManagerIdentifier" /> specificato. L'operazione di reinserimento nell'elenco viene rifiutata.</exception>
      <exception cref="T:System.Transactions.TransactionException" vsli:raw="The &lt;paramref name=&quot;resourceManagerIdentifier&quot; /&gt; does not match the content of the specified recovery information in &lt;paramref name=&quot;recoveryInformation&quot; /&gt;.">
        <paramref name="resourceManagerIdentifier" /> non corrisponde al contenuto delle informazioni per il recupero specificate in <paramref name="recoveryInformation" />.</exception>
      <returns vsli:raw="An &lt;see cref=&quot;T:System.Transactions.Enlistment&quot; /&gt; that describes the enlistment.">Classe <see cref="T:System.Transactions.Enlistment" /> che descrive l'elenco.</returns>
    </member>
    <member name="P:System.Transactions.TransactionManager.DefaultTimeout">
      <summary vsli:raw="Gets the default timeout interval for new transactions.">Ottiene l'intervallo di timeout predefinito per le nuove transazioni.</summary>
      <returns vsli:raw="A &lt;see cref=&quot;T:System.TimeSpan&quot; /&gt; value that specifies the timeout interval for new transactions.">Valore <see cref="T:System.TimeSpan" /> che specifica l'intervallo di timeout per le nuove transazioni.</returns>
    </member>
    <member name="P:System.Transactions.TransactionManager.HostCurrentCallback">
      <summary vsli:raw="Gets or sets a custom transaction factory.">Ottiene o imposta una factory di transazioni personalizzata.</summary>
      <returns vsli:raw="A &lt;see cref=&quot;T:System.Transactions.HostCurrentTransactionCallback&quot; /&gt; that contains a custom transaction factory.">Delegato <see cref="T:System.Transactions.HostCurrentTransactionCallback" /> contenente una factory di transazioni personalizzata.</returns>
    </member>
    <member name="P:System.Transactions.TransactionManager.MaximumTimeout">
      <summary vsli:raw="Gets the default maximum timeout interval for new transactions.">Ottiene l'intervallo massimo di timeout predefinito per le nuove transazioni.</summary>
      <returns vsli:raw="A &lt;see cref=&quot;T:System.TimeSpan&quot; /&gt; value that specifies the maximum timeout interval that is allowed when creating new transactions.">Valore <see cref="T:System.TimeSpan" /> che specifica l'intervallo massimo di timeout consentito durante la creazione di nuove transazioni.</returns>
    </member>
    <member name="T:System.Transactions.TransactionManagerCommunicationException">
      <summary vsli:raw="The exception that is thrown when a resource manager cannot communicate with the transaction manager.">Eccezione generata quando un gestore delle risorse non è in grado di comunicare con il gestore delle transazioni.</summary>
    </member>
    <member name="M:System.Transactions.TransactionManagerCommunicationException.#ctor">
      <summary vsli:raw="Initializes a new instance of the &lt;see cref=&quot;T:System.Transactions.TransactionManagerCommunicationException&quot; /&gt; class.">Inizializza una nuova istanza della classe <see cref="T:System.Transactions.TransactionManagerCommunicationException" />.</summary>
    </member>
    <member name="M:System.Transactions.TransactionManagerCommunicationException.#ctor(System.Runtime.Serialization.SerializationInfo,System.Runtime.Serialization.StreamingContext)">
      <summary vsli:raw="Initializes a new instance of the &lt;see cref=&quot;T:System.Transactions.TransactionManagerCommunicationException&quot; /&gt; class with the specified serialization and streaming context information.">Inizializza una nuova istanza della classe <see cref="T:System.Transactions.TransactionManagerCommunicationException" /> con le informazioni relative a serializzazione e contesto di flusso specificate.</summary>
      <param name="info" vsli:raw="A &lt;see cref=&quot;T:System.Runtime.Serialization.SerializationInfo&quot; /&gt; object that describes a failed serialization.">Oggetto <see cref="T:System.Runtime.Serialization.SerializationInfo" /> che descrive una serializzazione non riuscita.</param>
      <param name="context" vsli:raw="A &lt;see cref=&quot;T:System.Runtime.Serialization.SerializationInfo&quot; /&gt; object that describes a failed serialization context.">Oggetto <see cref="T:System.Runtime.Serialization.SerializationInfo" /> che descrive un contesto di serializzazione non riuscito.</param>
    </member>
    <member name="M:System.Transactions.TransactionManagerCommunicationException.#ctor(System.String)">
      <summary vsli:raw="Initializes a new instance of the &lt;see cref=&quot;T:System.Transactions.TransactionManagerCommunicationException&quot; /&gt; class with the specified message.">Inizializza una nuova istanza della classe <see cref="T:System.Transactions.TransactionManagerCommunicationException" /> con il messaggio specificato.</summary>
      <param name="message" vsli:raw="A &lt;see cref=&quot;T:System.String&quot; /&gt; that contains a message that explains why the exception occurred.">Oggetto <see cref="T:System.String" /> contenente un messaggio in cui è illustrata la causa dell'eccezione.</param>
    </member>
    <member name="M:System.Transactions.TransactionManagerCommunicationException.#ctor(System.String,System.Exception)">
      <summary vsli:raw="Initializes a new instance of the &lt;see cref=&quot;T:System.Transactions.TransactionManagerCommunicationException&quot; /&gt; class with the specified message and inner exception.">Inizializza una nuova istanza della classe <see cref="T:System.Transactions.TransactionManagerCommunicationException" /> con il messaggio e l'eccezione interna specificati.</summary>
      <param name="message" vsli:raw="A &lt;see cref=&quot;T:System.String&quot; /&gt; that contains a message that explains why the exception occurred.">Oggetto <see cref="T:System.String" /> contenente un messaggio in cui è illustrata la causa dell'eccezione.</param>
      <param name="innerException" vsli:raw="Gets the exception instance that causes the current exception. For more information, see the &lt;see cref=&quot;P:System.Exception.InnerException&quot; /&gt; property.">Ottiene l'istanza dell'eccezione che causa l'eccezione corrente. Per altre informazioni, vedere la proprietà <see cref="P:System.Exception.InnerException" />.</param>
    </member>
    <member name="T:System.Transactions.TransactionOptions">
      <summary vsli:raw="Contains additional information that specifies transaction behaviors.">Contiene informazioni aggiuntive che specificano i comportamenti di una transazione.</summary>
    </member>
    <member name="M:System.Transactions.TransactionOptions.Equals(System.Object)">
      <summary vsli:raw="Determines whether this &lt;see cref=&quot;T:System.Transactions.TransactionOptions&quot; /&gt; instance and the specified object are equal.">Determina se questa istanza di <see cref="T:System.Transactions.TransactionOptions" /> e l'oggetto specificato sono uguali.</summary>
      <param name="obj" vsli:raw="The object to compare with this instance.">Oggetto da confrontare con questa istanza.</param>
      <returns vsli:raw="&lt;see langword=&quot;true&quot; /&gt; if &lt;paramref name=&quot;obj&quot; /&gt; and this &lt;see cref=&quot;T:System.Transactions.TransactionOptions&quot; /&gt; instance are identical; otherwise, &lt;see langword=&quot;false&quot; /&gt;.">
        <see langword="true" /> se <paramref name="obj" /> e l'istanza di <see cref="T:System.Transactions.TransactionOptions" /> sono uguali; in caso contrario, <see langword="false" />.</returns>
    </member>
    <member name="M:System.Transactions.TransactionOptions.GetHashCode">
      <summary vsli:raw="Returns the hash code for this instance.">Restituisce il codice hash per l'istanza.</summary>
      <returns vsli:raw="A 32-bit signed integer hash code.">Codice hash di un intero con segno a 32 bit.</returns>
    </member>
    <member name="M:System.Transactions.TransactionOptions.op_Equality(System.Transactions.TransactionOptions,System.Transactions.TransactionOptions)">
      <summary vsli:raw="Tests whether two specified &lt;see cref=&quot;T:System.Transactions.TransactionOptions&quot; /&gt; instances are equivalent.">Verifica se due istanze di <see cref="T:System.Transactions.TransactionOptions" /> specificate sono equivalenti.</summary>
      <param name="x" vsli:raw="The &lt;see cref=&quot;T:System.Transactions.TransactionOptions&quot; /&gt; instance that is to the left of the equality operator.">Istanza della struttura <see cref="T:System.Transactions.TransactionOptions" /> a sinistra dell'operatore di uguaglianza.</param>
      <param name="y" vsli:raw="The &lt;see cref=&quot;T:System.Transactions.TransactionOptions&quot; /&gt; instance that is to the right of the equality operator.">Istanza della struttura <see cref="T:System.Transactions.TransactionOptions" /> a destra dell'operatore di uguaglianza.</param>
      <returns vsli:raw="&lt;see langword=&quot;true&quot; /&gt; if &lt;paramref name=&quot;x&quot; /&gt; and &lt;paramref name=&quot;y&quot; /&gt; are equal; otherwise, &lt;see langword=&quot;false&quot; /&gt;.">
        <see langword="true" /> se <paramref name="x" /> e <paramref name="y" /> sono uguali; in caso contrario, <see langword="false" />.</returns>
    </member>
    <member name="M:System.Transactions.TransactionOptions.op_Inequality(System.Transactions.TransactionOptions,System.Transactions.TransactionOptions)">
      <summary vsli:raw="Returns a value that indicates whether two &lt;see cref=&quot;T:System.Transactions.TransactionOptions&quot; /&gt; instances are not equal.">Restituisce un valore che indica se due istanze di <see cref="T:System.Transactions.TransactionOptions" /> non sono uguali.</summary>
      <param name="x" vsli:raw="The &lt;see cref=&quot;T:System.Transactions.TransactionOptions&quot; /&gt; instance that is to the left of the equality operator.">Istanza della struttura <see cref="T:System.Transactions.TransactionOptions" /> a sinistra dell'operatore di uguaglianza.</param>
      <param name="y" vsli:raw="The &lt;see cref=&quot;T:System.Transactions.TransactionOptions&quot; /&gt; instance that is to the right of the equality operator.">Istanza della struttura <see cref="T:System.Transactions.TransactionOptions" /> a destra dell'operatore di uguaglianza.</param>
      <returns vsli:raw="&lt;see langword=&quot;true&quot; /&gt; if &lt;paramref name=&quot;x&quot; /&gt; and &lt;paramref name=&quot;y&quot; /&gt; are not equal; otherwise, &lt;see langword=&quot;false&quot; /&gt;.">
        <see langword="true" /> se <paramref name="x" /> e <paramref name="y" /> non sono uguali; in caso contrario, <see langword="false" />.</returns>
    </member>
    <member name="P:System.Transactions.TransactionOptions.IsolationLevel">
      <summary vsli:raw="Gets or sets the isolation level of the transaction.">Ottiene o imposta l'isolamento della transazione.</summary>
      <returns vsli:raw="A &lt;see cref=&quot;T:System.Transactions.IsolationLevel&quot; /&gt; enumeration that specifies the isolation level of the transaction.">Enumerazione <see cref="T:System.Transactions.IsolationLevel" /> che specifica il livello di isolamento della transazione.</returns>
    </member>
    <member name="P:System.Transactions.TransactionOptions.Timeout">
      <summary vsli:raw="Gets or sets the timeout period for the transaction.">Ottiene o imposta il periodo di timeout per la transazione.</summary>
      <returns vsli:raw="A &lt;see cref=&quot;T:System.TimeSpan&quot; /&gt; value that specifies the timeout period for the transaction.">Valore <see cref="T:System.TimeSpan" /> che specifica il periodo di timeout per la transazione.</returns>
    </member>
    <member name="T:System.Transactions.TransactionPromotionException">
      <summary vsli:raw="The exception that is thrown when a promotion fails.">Eccezione generata quando una promozione ha esito negativo.</summary>
    </member>
    <member name="M:System.Transactions.TransactionPromotionException.#ctor">
      <summary vsli:raw="Initializes a new instance of the &lt;see cref=&quot;T:System.Transactions.TransactionPromotionException&quot; /&gt; class.">Inizializza una nuova istanza della classe <see cref="T:System.Transactions.TransactionPromotionException" />.</summary>
    </member>
    <member name="M:System.Transactions.TransactionPromotionException.#ctor(System.Runtime.Serialization.SerializationInfo,System.Runtime.Serialization.StreamingContext)">
      <summary vsli:raw="Initializes a new instance of the &lt;see cref=&quot;T:System.Transactions.TransactionPromotionException&quot; /&gt; class with the specified serialization and streaming context information.">Inizializza una nuova istanza della classe <see cref="T:System.Transactions.TransactionPromotionException" /> con le informazioni relative a serializzazione e contesto di flusso specificate.</summary>
      <param name="info" vsli:raw="A &lt;see cref=&quot;T:System.Runtime.Serialization.SerializationInfo&quot; /&gt; object that describes a failed serialization.">Oggetto <see cref="T:System.Runtime.Serialization.SerializationInfo" /> che descrive una serializzazione non riuscita.</param>
      <param name="context" vsli:raw="A &lt;see cref=&quot;T:System.Runtime.Serialization.SerializationInfo&quot; /&gt; object that describes a failed serialization context.">Oggetto <see cref="T:System.Runtime.Serialization.SerializationInfo" /> che descrive un contesto di serializzazione non riuscito.</param>
    </member>
    <member name="M:System.Transactions.TransactionPromotionException.#ctor(System.String)">
      <summary vsli:raw="Initializes a new instance of the &lt;see cref=&quot;T:System.Transactions.TransactionPromotionException&quot; /&gt; class with the specified message.">Inizializza una nuova istanza della classe <see cref="T:System.Transactions.TransactionPromotionException" /> con il messaggio specificato.</summary>
      <param name="message" vsli:raw="A &lt;see cref=&quot;T:System.String&quot; /&gt; that contains a message that explains why the exception occurred.">Oggetto <see cref="T:System.String" /> contenente un messaggio in cui è illustrata la causa dell'eccezione.</param>
    </member>
    <member name="M:System.Transactions.TransactionPromotionException.#ctor(System.String,System.Exception)">
      <summary vsli:raw="Initializes a new instance of the &lt;see cref=&quot;T:System.Transactions.TransactionPromotionException&quot; /&gt; class with the specified message and inner exception.">Inizializza una nuova istanza della classe <see cref="T:System.Transactions.TransactionPromotionException" /> con il messaggio e l'eccezione interna specificati.</summary>
      <param name="message" vsli:raw="A &lt;see cref=&quot;T:System.String&quot; /&gt; that contains a message that explains why the exception occurred.">Oggetto <see cref="T:System.String" /> contenente un messaggio in cui è illustrata la causa dell'eccezione.</param>
      <param name="innerException" vsli:raw="Gets the exception instance that causes the current exception. For more information, see the &lt;see cref=&quot;P:System.Exception.InnerException&quot; /&gt; property.">Ottiene l'istanza dell'eccezione che causa l'eccezione corrente. Per altre informazioni, vedere la proprietà <see cref="P:System.Exception.InnerException" />.</param>
    </member>
    <member name="T:System.Transactions.TransactionScope">
      <summary vsli:raw="Makes a code block transactional. This class cannot be inherited.">Rende transazionale un blocco di codice. La classe non può essere ereditata.</summary>
    </member>
    <member name="M:System.Transactions.TransactionScope.#ctor">
      <summary vsli:raw="Initializes a new instance of the &lt;see cref=&quot;T:System.Transactions.TransactionScope&quot; /&gt; class.">Inizializza una nuova istanza della classe <see cref="T:System.Transactions.TransactionScope" />.</summary>
    </member>
    <member name="M:System.Transactions.TransactionScope.#ctor(System.Transactions.Transaction)">
      <summary vsli:raw="Initializes a new instance of the &lt;see cref=&quot;T:System.Transactions.TransactionScope&quot; /&gt; class and sets the specified transaction as the ambient transaction, so that transactional work done inside the scope uses this transaction.">Inizializza una nuova istanza della classe <see cref="T:System.Transactions.TransactionScope" /> e imposta la transazione specificata come transazione di ambiente, in modo che venga utilizzata dalle operazioni transazionali effettuate all'interno dell'ambito.</summary>
      <param name="transactionToUse" vsli:raw="The transaction to be set as the ambient transaction, so that transactional work done inside the scope uses this transaction.">Transazione da impostare come transazione di ambiente, in modo che venga utilizzata dalle operazioni transazionali effettuate all'interno dell'ambito.</param>
    </member>
    <member name="M:System.Transactions.TransactionScope.#ctor(System.Transactions.Transaction,System.TimeSpan)">
      <summary vsli:raw="Initializes a new instance of the &lt;see cref=&quot;T:System.Transactions.TransactionScope&quot; /&gt; class with the specified timeout value, and sets the specified transaction as the ambient transaction, so that transactional work done inside the scope uses this transaction.">Inizializza una nuova istanza della classe <see cref="T:System.Transactions.TransactionScope" /> con il valore di timeout specificato e imposta la transazione specificata come transazione di ambiente, in modo che venga utilizzata dalle operazioni transazionali effettuate all'interno dell'ambito.</summary>
      <param name="transactionToUse" vsli:raw="The transaction to be set as the ambient transaction, so that transactional work done inside the scope uses this transaction.">Transazione da impostare come transazione di ambiente, in modo che venga utilizzata dalle operazioni transazionali effettuate all'interno dell'ambito.</param>
      <param name="scopeTimeout" vsli:raw="The &lt;see cref=&quot;T:System.TimeSpan&quot; /&gt; after which the transaction scope times out and aborts the transaction.">
        <see cref="T:System.TimeSpan" /> dopo cui si verifica il timeout dell'ambito della transazione e l'interruzione della transazione.</param>
    </member>
    <member name="M:System.Transactions.TransactionScope.#ctor(System.Transactions.Transaction,System.TimeSpan,System.Transactions.EnterpriseServicesInteropOption)">
      <summary vsli:raw="Initializes a new instance of the &lt;see cref=&quot;T:System.Transactions.TransactionScope&quot; /&gt; class with the specified timeout value and COM+ interoperability requirements, and sets the specified transaction as the ambient transaction, so that transactional work done inside the scope uses this transaction.">Inizializza una nuova istanza della classe <see cref="T:System.Transactions.TransactionScope" /> con il valore di timeout e i requisiti di interoperabilità COM+ specificati e imposta la transazione specificata come transazione di ambiente, in modo che venga utilizzata dalle operazioni transazionali effettuate all'interno dell'ambito.</summary>
      <param name="transactionToUse" vsli:raw="The transaction to be set as the ambient transaction, so that transactional work done inside the scope uses this transaction.">Transazione da impostare come transazione di ambiente, in modo che venga utilizzata dalle operazioni transazionali effettuate all'interno dell'ambito.</param>
      <param name="scopeTimeout" vsli:raw="The &lt;see cref=&quot;T:System.TimeSpan&quot; /&gt; after which the transaction scope times out and aborts the transaction.">
        <see cref="T:System.TimeSpan" /> dopo cui si verifica il timeout dell'ambito della transazione e l'interruzione della transazione.</param>
      <param name="interopOption" vsli:raw="An instance of the &lt;see cref=&quot;T:System.Transactions.EnterpriseServicesInteropOption&quot; /&gt; enumeration that describes how the associated transaction interacts with COM+ transactions.">Istanza dell'enumerazione <see cref="T:System.Transactions.EnterpriseServicesInteropOption" /> in cui è descritta la modalità di interazione tra la transazione associata e le transazioni COM+.</param>
    </member>
    <member name="M:System.Transactions.TransactionScope.#ctor(System.Transactions.Transaction,System.TimeSpan,System.Transactions.TransactionScopeAsyncFlowOption)">
      <summary vsli:raw="[Supported in the .NET Framework 4.5.1 and later versions]  &#xA;  &#xA; Initializes a new instance of the &lt;see cref=&quot;T:System.Transactions.TransactionScope&quot; /&gt; class with the specified timeout value, and sets the specified transaction as the ambient transaction, so that transactional work done inside the scope uses this transaction.">[Supportato in .NET Framework 4.5.1 e versioni successive] 
Inizializza una nuova istanza della classe <see cref="T:System.Transactions.TransactionScope" /> con il valore di timeout specificato e imposta la transazione specificata come transazione di ambiente, in modo che venga utilizzata dalle operazioni transazionali effettuate all'interno dell'ambito.</summary>
      <param name="transactionToUse" vsli:raw="The transaction to be set as the ambient transaction, so that transactional work done inside the scope uses this transaction.">Transazione da impostare come transazione di ambiente, in modo che venga utilizzata dalle operazioni transazionali effettuate all'interno dell'ambito.</param>
      <param name="scopeTimeout" vsli:raw="The &lt;see cref=&quot;T:System.TimeSpan&quot; /&gt; after which the transaction scope times out and aborts the transaction.">
        <see cref="T:System.TimeSpan" /> dopo cui si verifica il timeout dell'ambito della transazione e l'interruzione della transazione.</param>
      <param name="asyncFlowOption" vsli:raw="An instance of the &lt;see cref=&quot;T:System.Transactions.TransactionScopeAsyncFlowOption&quot; /&gt; enumeration that describes whether the ambient transaction associated with the transaction scope will flow across thread continuations when using Task or async/await .NET async programming patterns.">Un'istanza dell'enumerazione <see cref="T:System.Transactions.TransactionScopeAsyncFlowOption" /> che descrive se la transazione di ambiente associata all'ambito della transazione passerà attraverso le continuazioni di thread quando si utilizzano i modelli di programmazione asincrona di .NET Task o async/await.</param>
    </member>
    <member name="M:System.Transactions.TransactionScope.#ctor(System.Transactions.Transaction,System.Transactions.TransactionScopeAsyncFlowOption)">
      <summary vsli:raw="[Supported in the .NET Framework 4.5.1 and later versions]  &#xA;  &#xA; Initializes a new instance of the &lt;see cref=&quot;T:System.Transactions.TransactionScope&quot; /&gt; class and sets the specified transaction as the ambient transaction, so that transactional work done inside the scope uses this transaction.">[Supportato in .NET Framework 4.5.1 e versioni successive] 
Inizializza una nuova istanza della classe <see cref="T:System.Transactions.TransactionScope" /> e imposta la transazione specificata come transazione di ambiente, in modo che venga utilizzata dalle operazioni transazionali effettuate all'interno dell'ambito.</summary>
      <param name="transactionToUse" vsli:raw="The transaction to be set as the ambient transaction, so that transactional work done inside the scope uses this transaction.">Transazione da impostare come transazione di ambiente, in modo che venga utilizzata dalle operazioni transazionali effettuate all'interno dell'ambito.</param>
      <param name="asyncFlowOption" vsli:raw="An instance of the &lt;see cref=&quot;T:System.Transactions.TransactionScopeAsyncFlowOption&quot; /&gt; enumeration that describes whether the ambient transaction associated with the transaction scope will flow across thread continuations when using Task or async/await .NET async programming patterns.">Un'istanza dell'enumerazione <see cref="T:System.Transactions.TransactionScopeAsyncFlowOption" /> che descrive se la transazione di ambiente associata all'ambito della transazione passerà attraverso le continuazioni di thread quando si utilizzano i modelli di programmazione asincrona di .NET Task o async/await.</param>
    </member>
    <member name="M:System.Transactions.TransactionScope.#ctor(System.Transactions.TransactionScopeAsyncFlowOption)">
      <summary vsli:raw="Initializes a new instance of the &lt;see cref=&quot;T:System.Transactions.TransactionScope&quot; /&gt; class with the specified asynchronous flow option.">Inizializza una nuova istanza della classe <see cref="T:System.Transactions.TransactionScope" /> con l'opzione del flusso asincrono specificato.</summary>
      <param name="asyncFlowOption" vsli:raw="An instance of the &lt;see cref=&quot;T:System.Transactions.TransactionScopeAsyncFlowOption&quot; /&gt; enumeration that describes whether the ambient transaction associated with the transaction scope will flow across thread continuations when using Task or async/await .NET async programming patterns.">Un'istanza dell'enumerazione <see cref="T:System.Transactions.TransactionScopeAsyncFlowOption" /> che descrive se la transazione di ambiente associata all'ambito della transazione passerà attraverso le continuazioni di thread quando si utilizzano i modelli di programmazione asincrona di .NET Task o async/await.</param>
    </member>
    <member name="M:System.Transactions.TransactionScope.#ctor(System.Transactions.TransactionScopeOption)">
      <summary vsli:raw="Initializes a new instance of the &lt;see cref=&quot;T:System.Transactions.TransactionScope&quot; /&gt; class with the specified requirements.">Inizializza una nuova istanza della classe <see cref="T:System.Transactions.TransactionScope" /> con i requisiti specificati.</summary>
      <param name="scopeOption" vsli:raw="An instance of the &lt;see cref=&quot;T:System.Transactions.TransactionScopeOption&quot; /&gt; enumeration that describes the transaction requirements associated with this transaction scope.">Istanza dell'enumerazione <see cref="T:System.Transactions.TransactionScopeOption" /> che descrive i requisiti della transazione associati al relativo ambito.</param>
    </member>
    <member name="M:System.Transactions.TransactionScope.#ctor(System.Transactions.TransactionScopeOption,System.TimeSpan)">
      <summary vsli:raw="Initializes a new instance of the &lt;see cref=&quot;T:System.Transactions.TransactionScope&quot; /&gt; class with the specified timeout value and requirements.">Inizializza una nuova istanza della classe <see cref="T:System.Transactions.TransactionScope" /> con il valore di timeout e i requisiti specificati.</summary>
      <param name="scopeOption" vsli:raw="An instance of the &lt;see cref=&quot;T:System.Transactions.TransactionScopeOption&quot; /&gt; enumeration that describes the transaction requirements associated with this transaction scope.">Istanza dell'enumerazione <see cref="T:System.Transactions.TransactionScopeOption" /> che descrive i requisiti della transazione associati al relativo ambito.</param>
      <param name="scopeTimeout" vsli:raw="The &lt;see cref=&quot;T:System.TimeSpan&quot; /&gt; after which the transaction scope times out and aborts the transaction.">
        <see cref="T:System.TimeSpan" /> dopo cui si verifica il timeout dell'ambito della transazione e l'interruzione della transazione.</param>
    </member>
    <member name="M:System.Transactions.TransactionScope.#ctor(System.Transactions.TransactionScopeOption,System.TimeSpan,System.Transactions.TransactionScopeAsyncFlowOption)">
      <summary vsli:raw="Initializes a new instance of the &lt;see cref=&quot;T:System.Transactions.TransactionScope&quot; /&gt; class with the specified timeout value, requirements, and asynchronous flow option.">Inizializza una nuova istanza della classe <see cref="T:System.Transactions.TransactionScope" /> con il valore di timeout, i requisiti e le opzioni del flusso asincrono specificati.</summary>
      <param name="scopeOption" vsli:raw="An instance of the &lt;see cref=&quot;T:System.Transactions.TransactionScopeOption&quot; /&gt; enumeration that describes the transaction requirements associated with this transaction scope.">Istanza dell'enumerazione <see cref="T:System.Transactions.TransactionScopeOption" /> che descrive i requisiti della transazione associati al relativo ambito.</param>
      <param name="scopeTimeout" vsli:raw="The &lt;see cref=&quot;T:System.TimeSpan&quot; /&gt; after which the transaction scope times out and aborts the transaction.">
        <see cref="T:System.TimeSpan" /> dopo cui si verifica il timeout dell'ambito della transazione e l'interruzione della transazione.</param>
      <param name="asyncFlowOption" vsli:raw="An instance of the &lt;see cref=&quot;T:System.Transactions.TransactionScopeAsyncFlowOption&quot; /&gt; enumeration that describes whether the ambient transaction associated with the transaction scope will flow across thread continuations when using Task or async/await .NET async programming patterns.">Un'istanza dell'enumerazione <see cref="T:System.Transactions.TransactionScopeAsyncFlowOption" /> che descrive se la transazione di ambiente associata all'ambito della transazione passerà attraverso le continuazioni di thread quando si utilizzano i modelli di programmazione asincrona di .NET Task o async/await.</param>
    </member>
    <member name="M:System.Transactions.TransactionScope.#ctor(System.Transactions.TransactionScopeOption,System.Transactions.TransactionOptions)">
      <summary vsli:raw="Initializes a new instance of the &lt;see cref=&quot;T:System.Transactions.TransactionScope&quot; /&gt; class with the specified requirements.">Inizializza una nuova istanza della classe <see cref="T:System.Transactions.TransactionScope" /> con i requisiti specificati.</summary>
      <param name="scopeOption" vsli:raw="An instance of the &lt;see cref=&quot;T:System.Transactions.TransactionScopeOption&quot; /&gt; enumeration that describes the transaction requirements associated with this transaction scope.">Istanza dell'enumerazione <see cref="T:System.Transactions.TransactionScopeOption" /> che descrive i requisiti della transazione associati al relativo ambito.</param>
      <param name="transactionOptions" vsli:raw="A &lt;see cref=&quot;T:System.Transactions.TransactionOptions&quot; /&gt; structure that describes the transaction options to use if a new transaction is created. If an existing transaction is used, the timeout value in this parameter applies to the transaction scope. If that time expires before the scope is disposed, the transaction is aborted.">Struttura <see cref="T:System.Transactions.TransactionOptions" /> in cui sono descritte le opzioni di transazione da utilizzare se si crea una nuova transazione. Se si utilizza una transazione esistente, il valore di timeout in questo parametro si applica all'ambito della transazione. Se il tempo scade prima dell'eliminazione dell'ambito, la transazione viene interrotta.</param>
    </member>
    <member name="M:System.Transactions.TransactionScope.#ctor(System.Transactions.TransactionScopeOption,System.Transactions.TransactionOptions,System.Transactions.EnterpriseServicesInteropOption)">
      <summary vsli:raw="Initializes a new instance of the &lt;see cref=&quot;T:System.Transactions.TransactionScope&quot; /&gt; class with the specified scope and COM+ interoperability requirements, and transaction options.">Inizializza una nuova istanza della classe <see cref="T:System.Transactions.TransactionScope" /> con l'ambito e i requisiti di interoperabilità COM+ specificati e le opzioni di transazione.</summary>
      <param name="scopeOption" vsli:raw="An instance of the &lt;see cref=&quot;T:System.Transactions.TransactionScopeOption&quot; /&gt; enumeration that describes the transaction requirements associated with this transaction scope.">Istanza dell'enumerazione <see cref="T:System.Transactions.TransactionScopeOption" /> che descrive i requisiti della transazione associati al relativo ambito.</param>
      <param name="transactionOptions" vsli:raw="A &lt;see cref=&quot;T:System.Transactions.TransactionOptions&quot; /&gt; structure that describes the transaction options to use if a new transaction is created. If an existing transaction is used, the timeout value in this parameter applies to the transaction scope. If that time expires before the scope is disposed, the transaction is aborted.">Struttura <see cref="T:System.Transactions.TransactionOptions" /> in cui sono descritte le opzioni di transazione da utilizzare se si crea una nuova transazione. Se si utilizza una transazione esistente, il valore di timeout in questo parametro si applica all'ambito della transazione. Se il tempo scade prima dell'eliminazione dell'ambito, la transazione viene interrotta.</param>
      <param name="interopOption" vsli:raw="An instance of the &lt;see cref=&quot;T:System.Transactions.EnterpriseServicesInteropOption&quot; /&gt; enumeration that describes how the associated transaction interacts with COM+ transactions.">Istanza dell'enumerazione <see cref="T:System.Transactions.EnterpriseServicesInteropOption" /> in cui è descritta la modalità di interazione tra la transazione associata e le transazioni COM+.</param>
    </member>
    <member name="M:System.Transactions.TransactionScope.#ctor(System.Transactions.TransactionScopeOption,System.Transactions.TransactionOptions,System.Transactions.TransactionScopeAsyncFlowOption)">
      <summary vsli:raw="[Supported in the .NET Framework 4.5.1 and later versions]  &#xA;  &#xA; Initializes a new instance of the &lt;see cref=&quot;T:System.Transactions.TransactionScope&quot; /&gt; class with the specified requirements and asynchronous flow option.">[Supportato in .NET Framework 4.5.1 e versioni successive] 
Inizializza una nuova istanza della classe <see cref="T:System.Transactions.TransactionScope" /> con i requisiti e le opzioni del flusso asincrono specificati.</summary>
      <param name="scopeOption" vsli:raw="An instance of the &lt;see cref=&quot;T:System.Transactions.TransactionScopeOption&quot; /&gt; enumeration that describes the transaction requirements associated with this transaction scope.">Istanza dell'enumerazione <see cref="T:System.Transactions.TransactionScopeOption" /> che descrive i requisiti della transazione associati al relativo ambito.</param>
      <param name="transactionOptions" vsli:raw="A &lt;see cref=&quot;T:System.Transactions.TransactionOptions&quot; /&gt; structure that describes the transaction options to use if a new transaction is created. If an existing transaction is used, the timeout value in this parameter applies to the transaction scope. If that time expires before the scope is disposed, the transaction is aborted.">Struttura <see cref="T:System.Transactions.TransactionOptions" /> in cui sono descritte le opzioni di transazione da utilizzare se si crea una nuova transazione. Se si utilizza una transazione esistente, il valore di timeout in questo parametro si applica all'ambito della transazione. Se il tempo scade prima dell'eliminazione dell'ambito, la transazione viene interrotta.</param>
      <param name="asyncFlowOption" vsli:raw="An instance of the &lt;see cref=&quot;T:System.Transactions.TransactionScopeAsyncFlowOption&quot; /&gt; enumeration that describes whether the ambient transaction associated with the transaction scope will flow across thread continuations when using Task or async/await .NET async programming patterns.">Un'istanza dell'enumerazione <see cref="T:System.Transactions.TransactionScopeAsyncFlowOption" /> che descrive se la transazione di ambiente associata all'ambito della transazione passerà attraverso le continuazioni di thread quando si utilizzano i modelli di programmazione asincrona di .NET Task o async/await.</param>
    </member>
    <member name="M:System.Transactions.TransactionScope.#ctor(System.Transactions.TransactionScopeOption,System.Transactions.TransactionScopeAsyncFlowOption)">
      <summary vsli:raw="Initializes a new instance of the &lt;see cref=&quot;T:System.Transactions.TransactionScope&quot; /&gt; class with the specified requirements and asynchronous flow option.">Inizializza una nuova istanza della classe <see cref="T:System.Transactions.TransactionScope" /> con i requisiti e le opzioni del flusso asincrono specificati.</summary>
      <param name="scopeOption" vsli:raw="An instance of the &lt;see cref=&quot;T:System.Transactions.TransactionScopeOption&quot; /&gt; enumeration that describes the transaction requirements associated with this transaction scope.">Istanza dell'enumerazione <see cref="T:System.Transactions.TransactionScopeOption" /> che descrive i requisiti della transazione associati al relativo ambito.</param>
      <param name="asyncFlowOption" vsli:raw="An instance of the &lt;see cref=&quot;T:System.Transactions.TransactionScopeAsyncFlowOption&quot; /&gt; enumeration that describes whether the ambient transaction associated with the transaction scope will flow across thread continuations when using Task or async/await .NET async programming patterns.">Un'istanza dell'enumerazione <see cref="T:System.Transactions.TransactionScopeAsyncFlowOption" /> che descrive se la transazione di ambiente associata all'ambito della transazione passerà attraverso le continuazioni di thread quando si utilizzano i modelli di programmazione asincrona di .NET Task o async/await.</param>
    </member>
    <member name="M:System.Transactions.TransactionScope.Complete">
      <summary vsli:raw="Indicates that all operations within the scope are completed successfully.">Indica che sono state completate tutte le operazioni all'interno dell'ambito.</summary>
      <exception cref="T:System.InvalidOperationException" vsli:raw="This method has already been called once.">Questo metodo è stato già chiamato una volta.</exception>
    </member>
    <member name="M:System.Transactions.TransactionScope.Dispose">
      <summary vsli:raw="Ends the transaction scope.">Termina l'ambito della transazione.</summary>
    </member>
    <member name="T:System.Transactions.TransactionScopeAsyncFlowOption">
      <summary vsli:raw="Specifies whether transaction flow across thread continuations is enabled for &lt;see cref=&quot;T:System.Transactions.TransactionScope&quot; /&gt;.">Specifica se il flusso delle transazioni tra le continuazioni di thread è attivato per <see cref="T:System.Transactions.TransactionScope" /> .</summary>
    </member>
    <member name="F:System.Transactions.TransactionScopeAsyncFlowOption.Enabled">
      <summary vsli:raw="Specifies that transaction flow across thread continuations is enabled.">Specifica che il flusso delle transazioni tra le continuazioni di thread è attivato.</summary>
    </member>
    <member name="F:System.Transactions.TransactionScopeAsyncFlowOption.Suppress">
      <summary vsli:raw="Specifies that transaction flow across thread continuations is suppressed. This is the default setting if no &lt;see langword=&quot;TransactionScopeAsyncFlowOption&quot; /&gt; is specified in the &lt;see cref=&quot;Overload:System.Transactions.TransactionScope.#ctor&quot; /&gt; constructor.">Specifica che il flusso delle transazioni tra le continuazioni di thread è soppresso. Si tratta dell'impostazione predefinita se nessun oggetto <see langword="TransactionScopeAsyncFlowOption" /> viene specificato nel costruttore <see cref="Overload:System.Transactions.TransactionScope.#ctor" />.</summary>
    </member>
    <member name="T:System.Transactions.TransactionScopeOption">
      <summary vsli:raw="Provides additional options for creating a transaction scope.">Fornisce opzioni aggiuntive per la creazione dell'ambito di una transazione.</summary>
    </member>
    <member name="F:System.Transactions.TransactionScopeOption.Required">
      <summary vsli:raw="A transaction is required by the scope. It uses an ambient transaction if one already exists. Otherwise, it creates a new transaction before entering the scope. This is the default value.">Una transazione è necessaria per l’ambito. Utilizza una transazione di ambiente se ne esiste già una. In caso contrario, prima di accedere all'ambito viene creata una nuova transazione. Rappresenta il valore predefinito.</summary>
    </member>
    <member name="F:System.Transactions.TransactionScopeOption.RequiresNew">
      <summary vsli:raw="A new transaction is always created for the scope.">Per l'ambito viene sempre creata una nuova transazione.</summary>
    </member>
    <member name="F:System.Transactions.TransactionScopeOption.Suppress">
      <summary vsli:raw="The ambient transaction context is suppressed when creating the scope. All operations within the scope are done without an ambient transaction context.">Durante la creazione dell'ambito, il contesto della transazione di ambiente viene soppresso. Tutte le operazioni all'interno dell'ambito vengono eseguite senza un tale contesto di transazioni.</summary>
    </member>
    <member name="T:System.Transactions.TransactionStartedEventHandler">
      <summary vsli:raw="Represents the method that will handle the &lt;see cref=&quot;E:System.Transactions.TransactionManager.DistributedTransactionStarted&quot; /&gt; event of a &lt;see cref=&quot;T:System.Transactions.TransactionManager&quot; /&gt; class.">Rappresenta il metodo che gestirà l'evento <see cref="E:System.Transactions.TransactionManager.DistributedTransactionStarted" /> di una classe <see cref="T:System.Transactions.TransactionManager" />.</summary>
      <param name="sender" vsli:raw="The source of the event.">Origine dell'evento.</param>
      <param name="e" vsli:raw="The &lt;see cref=&quot;T:System.Transactions.TransactionEventArgs&quot; /&gt; that contains the transaction from which transaction information can be retrieved.">
        <see cref="T:System.Transactions.TransactionEventArgs" /> contenente la transazione da cui è possibile recuperare le informazioni sulla transazione.</param>
    </member>
    <member name="T:System.Transactions.TransactionStatus">
      <summary vsli:raw="Describes the current status of a distributed transaction.">Descrive lo stato corrente di una transazione distribuita.</summary>
    </member>
    <member name="F:System.Transactions.TransactionStatus.Aborted">
      <summary vsli:raw="The transaction has been rolled back.">È stato eseguito il rollback della transazione.</summary>
    </member>
    <member name="F:System.Transactions.TransactionStatus.Active">
      <summary vsli:raw="The status of the transaction is unknown, because some participants must still be polled.">Lo stato della transazione è sconosciuto, in quanto non è stato ancora eseguito il polling di alcuni partecipanti.</summary>
    </member>
    <member name="F:System.Transactions.TransactionStatus.Committed">
      <summary vsli:raw="The transaction has been committed.">È stato eseguito il commit della transazione.</summary>
    </member>
    <member name="F:System.Transactions.TransactionStatus.InDoubt">
      <summary vsli:raw="The status of the transaction is unknown.">Lo stato della transazione è sconosciuto.</summary>
    </member>
  </members>
</doc>