<?xml version="1.0" encoding="utf-8"?>
<doc>
  <assembly>
    <name>System.Runtime.Serialization.Json</name>
  </assembly>
  <members>
    <member name="T:System.Runtime.Serialization.DateTimeFormat">
      <summary>日付/時刻の書式オプションを指定します。</summary>
    </member>
    <member name="M:System.Runtime.Serialization.DateTimeFormat.#ctor(System.String)">
      <summary>書式文字列を使用して、<see cref="T:System.Runtime.Serialization.DateTimeFormat" /> クラスの新しいインスタンスを初期化します。</summary>
      <param name="formatString">書式指定文字列。</param>
    </member>
    <member name="M:System.Runtime.Serialization.DateTimeFormat.#ctor(System.String,System.IFormatProvider)">
      <summary>書式文字列と書式プロバイダーを使用して、<see cref="T:System.Runtime.Serialization.DateTimeFormat" /> クラスの新しいインスタンスを初期化します。</summary>
      <param name="formatString">書式指定文字列。</param>
      <param name="formatProvider">書式プロバイダー。</param>
    </member>
    <member name="P:System.Runtime.Serialization.DateTimeFormat.DateTimeStyles">
      <summary>いくつかの日時解析メソッドによる文字列の解析をカスタマイズする形式指定オプションを取得または設定します。</summary>
      <returns>いくつかの日時解析メソッドによる文字列の解析をカスタマイズする形式指定オプション。</returns>
    </member>
    <member name="P:System.Runtime.Serialization.DateTimeFormat.FormatProvider">
      <summary>書式を制御するオブジェクトを取得します。</summary>
    </member>
    <member name="P:System.Runtime.Serialization.DateTimeFormat.FormatString">
      <summary>日付または時刻が文字列として表されるときに生成される書式を制御するための書式指定文字列を取得します。</summary>
      <returns>日付または時刻が文字列として表されるときに生成される書式を制御するための書式指定文字列。</returns>
    </member>
    <member name="T:System.Runtime.Serialization.EmitTypeInformation">
      <summary>型情報を出力するための頻度を指定します。</summary>
    </member>
    <member name="F:System.Runtime.Serialization.EmitTypeInformation.Always">
      <summary>常に型情報を出力します。</summary>
    </member>
    <member name="F:System.Runtime.Serialization.EmitTypeInformation.AsNeeded">
      <summary>必要に応じて型情報を出力します。</summary>
    </member>
    <member name="F:System.Runtime.Serialization.EmitTypeInformation.Never">
      <summary>常に型情報を出力しません。</summary>
    </member>
    <member name="T:System.Runtime.Serialization.Json.DataContractJsonSerializer">
      <summary>オブジェクトを JSON (JavaScript Object Notation) にシリアル化し、JSON データをオブジェクトに逆シリアル化します。 このクラスは継承できません。</summary>
    </member>
    <member name="M:System.Runtime.Serialization.Json.DataContractJsonSerializer.#ctor(System.Type)">
      <summary>
        <see cref="T:System.Runtime.Serialization.Json.DataContractJsonSerializer" /> クラスの新しいインスタンスを初期化し、指定した型のオブジェクトをシリアル化または逆シリアル化します。</summary>
      <param name="type">シリアル化または逆シリアル化されるインスタンスの型。</param>
    </member>
    <member name="M:System.Runtime.Serialization.Json.DataContractJsonSerializer.#ctor(System.Type,System.Collections.Generic.IEnumerable{System.Type})">
      <summary>
        <see cref="T:System.Runtime.Serialization.Json.DataContractJsonSerializer" /> クラスの新しいインスタンスを初期化し、指定した型のオブジェクトと、オブジェクト グラフ内に存在可能な既知の型のコレクションをシリアル化または逆シリアル化します。</summary>
      <param name="type">シリアル化または逆シリアル化されるインスタンスの型。</param>
      <param name="knownTypes">オブジェクト グラフ内に存在可能な型を含む <see cref="T:System.Collections.Generic.IEnumerable`1" /> の <see cref="T:System.Type" />。</param>
    </member>
    <member name="M:System.Runtime.Serialization.Json.DataContractJsonSerializer.#ctor(System.Type,System.Runtime.Serialization.Json.DataContractJsonSerializerSettings)">
      <summary>指定した型とシリアライザー設定のオブジェクトをシリアル化または逆シリアル化する <see cref="T:System.Runtime.Serialization.Json.DataContractJsonSerializer" /> クラスの新しいインスタンスを初期化します。</summary>
      <param name="type">シリアル化または逆シリアル化されるインスタンスの型。</param>
      <param name="settings">JSON シリアライザーのシリアライザーの設定。</param>
    </member>
    <member name="M:System.Runtime.Serialization.Json.DataContractJsonSerializer.#ctor(System.Type,System.String)">
      <summary>
        <see cref="T:System.Runtime.Serialization.Json.DataContractJsonSerializer" /> クラスの新しいインスタンスを初期化し、指定した型のオブジェクトを、パラメーターで指定した XML ルート要素を使用してシリアル化または逆シリアル化します。</summary>
      <param name="type">シリアル化または逆シリアル化されるインスタンスの型。</param>
      <param name="rootName">シリアル化または逆シリアル化するコンテンツを囲む XML 要素の名前。</param>
    </member>
    <member name="M:System.Runtime.Serialization.Json.DataContractJsonSerializer.#ctor(System.Type,System.String,System.Collections.Generic.IEnumerable{System.Type})">
      <summary>
        <see cref="T:System.Runtime.Serialization.Json.DataContractJsonSerializer" /> クラスの新しいインスタンスを初期化し、指定した型のオブジェクトと、オブジェクト グラフ内に存在可能な既知の型のコレクションを、パラメーターで指定した XML ルート要素を使用してシリアル化または逆シリアル化します。</summary>
      <param name="type">シリアル化または逆シリアル化されるインスタンスの型。</param>
      <param name="rootName">シリアル化または逆シリアル化するコンテンツを囲む XML 要素の名前。 既定値は "root" です。</param>
      <param name="knownTypes">オブジェクト グラフ内に存在可能な型を含む <see cref="T:System.Collections.Generic.IEnumerable`1" /> の <see cref="T:System.Type" />。</param>
    </member>
    <member name="M:System.Runtime.Serialization.Json.DataContractJsonSerializer.#ctor(System.Type,System.Xml.XmlDictionaryString)">
      <summary>
        <see cref="T:System.Runtime.Serialization.Json.DataContractJsonSerializer" /> クラスの新しいインスタンスを初期化し、指定した型のオブジェクトを、型 <see cref="T:System.Xml.XmlDictionaryString" /> のパラメーターで指定した XML ルート要素を使用してシリアル化または逆シリアル化します。</summary>
      <param name="type">シリアル化または逆シリアル化されるインスタンスの型。</param>
      <param name="rootName">コンテンツのルート要素名を含む <see cref="T:System.Xml.XmlDictionaryString" />。</param>
    </member>
    <member name="M:System.Runtime.Serialization.Json.DataContractJsonSerializer.#ctor(System.Type,System.Xml.XmlDictionaryString,System.Collections.Generic.IEnumerable{System.Type})">
      <summary>
        <see cref="T:System.Runtime.Serialization.Json.DataContractJsonSerializer" /> クラスの新しいインスタンスを初期化し、指定した型のオブジェクトと、オブジェクト グラフ内に存在可能な既知の型のコレクションを、型 <see cref="T:System.Xml.XmlDictionaryString" /> のパラメーターで指定した XML ルート要素を使用してシリアル化または逆シリアル化します。</summary>
      <param name="type">シリアル化または逆シリアル化されるインスタンスの型。</param>
      <param name="rootName">コンテンツのルート要素名を含む <see cref="T:System.Xml.XmlDictionaryString" />。</param>
      <param name="knownTypes">オブジェクト グラフ内に存在可能な型を含む <see cref="T:System.Collections.Generic.IEnumerable`1" /> の <see cref="T:System.Type" />。</param>
    </member>
    <member name="M:System.Runtime.Serialization.Json.DataContractJsonSerializer.IsStartObject(System.Xml.XmlDictionaryReader)">
      <summary>シリアライザーが逆シリアル化できるオブジェクトを表す XML 要素に <see cref="T:System.Xml.XmlDictionaryReader" /> が配置されているかどうかを指定する値を取得します。</summary>
      <param name="reader">JSON からマップされた XML ストリームを読み取るために使用する <see cref="T:System.Xml.XmlDictionaryReader" />。</param>
      <returns>リーダーが正確に配置されている場合は <see langword="true" />。それ以外の場合は <see langword="false" />。</returns>
    </member>
    <member name="M:System.Runtime.Serialization.Json.DataContractJsonSerializer.IsStartObject(System.Xml.XmlReader)">
      <summary>逆シリアル化できるオブジェクトに <see cref="T:System.Xml.XmlReader" /> が配置されているかどうかを決定します。</summary>
      <param name="reader">XML ストリームを読み取るために使用する <see cref="T:System.Xml.XmlReader" />。</param>
      <returns>リーダーが正確に配置されている場合は <see langword="true" />。それ以外の場合は <see langword="false" />。</returns>
    </member>
    <member name="M:System.Runtime.Serialization.Json.DataContractJsonSerializer.ReadObject(System.IO.Stream)">
      <summary>ドキュメント ストリームを JSON (JavaScript Object Notation) 形式で読み取り、逆シリアル化されたオブジェクトを返します。</summary>
      <param name="stream">読み取られる <see cref="T:System.IO.Stream" />。</param>
      <returns>逆シリアル化されたオブジェクト。</returns>
    </member>
    <member name="M:System.Runtime.Serialization.Json.DataContractJsonSerializer.ReadObject(System.Xml.XmlDictionaryReader)">
      <summary>
        <see cref="T:System.Xml.XmlDictionaryReader" /> を使用して、JSON (JavaScript Object Notation) からマップされた XML ドキュメントを読み取り、逆シリアル化されたオブジェクトを返します。</summary>
      <param name="reader">JSON からマップされた XML ドキュメントを読み取るために使用する <see cref="T:System.Xml.XmlDictionaryReader" />。</param>
      <returns>逆シリアル化されたオブジェクト。</returns>
    </member>
    <member name="M:System.Runtime.Serialization.Json.DataContractJsonSerializer.ReadObject(System.Xml.XmlDictionaryReader,System.Boolean)">
      <summary>
        <see cref="T:System.Xml.XmlDictionaryReader" /> を使用して、JSON からマップされた XML ドキュメントを読み取り、逆シリアル化されたオブジェクトを返します。さらに、逆シリアル化を試みる前に、シリアライザーが適切な要素に配置されていることを確認する必要があるかどうかを指定できます。</summary>
      <param name="reader">JSON からマップされた XML ドキュメントを読み取るために使用する <see cref="T:System.Xml.XmlDictionaryReader" />。</param>
      <param name="verifyObjectName">周囲の XML 要素名と名前空間が予期される名前と名前空間に対応するかどうかをチェックする場合は <see langword="true" />。この検査をスキップする場合は <see langword="false" />。 既定値は、<see langword="true" /> です。</param>
      <returns>逆シリアル化されたオブジェクト。</returns>
    </member>
    <member name="M:System.Runtime.Serialization.Json.DataContractJsonSerializer.ReadObject(System.Xml.XmlReader)">
      <summary>
        <see cref="T:System.Xml.XmlReader" /> を使用して、JSON (JavaScript Object Notation) からマップされた XML ドキュメントを読み取り、逆シリアル化されたオブジェクトを返します。</summary>
      <param name="reader">JSON からマップされた XML ドキュメントを読み取るために使用する <see cref="T:System.Xml.XmlReader" />。</param>
      <returns>逆シリアル化されたオブジェクト。</returns>
    </member>
    <member name="M:System.Runtime.Serialization.Json.DataContractJsonSerializer.ReadObject(System.Xml.XmlReader,System.Boolean)">
      <summary>
        <see cref="T:System.Xml.XmlReader" /> を使用して、JSON からマップされた XML ドキュメントを読み取り、逆シリアル化されたオブジェクトを返します。さらに、逆シリアル化を試みる前に、シリアライザーが適切な要素に配置されていることを確認する必要があるかどうかを指定できます。</summary>
      <param name="reader">JSON からマップされた XML ドキュメントを読み取るために使用する <see cref="T:System.Xml.XmlReader" />。</param>
      <param name="verifyObjectName">周囲の XML 要素名と名前空間が予期される名前と名前空間に対応するかどうかをチェックする場合は <see langword="true" />。この検査をスキップする場合は <see langword="false" />。 既定値は、<see langword="true" /> です。</param>
      <returns>逆シリアル化されたオブジェクト。</returns>
    </member>
    <member name="M:System.Runtime.Serialization.Json.DataContractJsonSerializer.WriteEndObject(System.Xml.XmlDictionaryWriter)">
      <summary>XML の終了要素を、<see cref="T:System.Xml.XmlDictionaryWriter" /> を使用して、JSON (JavaScript Object Notation) にマップ可能な XML ドキュメントに書き込みます。</summary>
      <param name="writer">XML ドキュメントを書き込んで、JSON にマップするために使用する <see cref="T:System.Xml.XmlDictionaryWriter" />。</param>
    </member>
    <member name="M:System.Runtime.Serialization.Json.DataContractJsonSerializer.WriteEndObject(System.Xml.XmlWriter)">
      <summary>XML の終了要素を、<see cref="T:System.Xml.XmlWriter" /> を使用して、JSON (JavaScript Object Notation) にマップ可能な XML ドキュメントに書き込みます。</summary>
      <param name="writer">JSON にマップされた XML ドキュメントを書き込むために使用する <see cref="T:System.Xml.XmlWriter" />。</param>
    </member>
    <member name="M:System.Runtime.Serialization.Json.DataContractJsonSerializer.WriteObject(System.IO.Stream,System.Object)">
      <summary>指定したオブジェクトを JSON (JavaScript Object Notation) データにシリアル化し、生成された JSON をストリームに書き込みます。</summary>
      <param name="stream">書き込まれる <see cref="T:System.IO.Stream" />。</param>
      <param name="graph">ストリームに書き込むデータを格納したオブジェクト。</param>
      <exception cref="T:System.Runtime.Serialization.InvalidDataContractException">シリアル化される型がデータ コントラクト規則に準拠していません。 たとえば、<see cref="T:System.Runtime.Serialization.DataContractAttribute" /> 属性が型に適用されていません。</exception>
      <exception cref="T:System.Runtime.Serialization.SerializationException">書き込まれているインスタンスに問題があります。</exception>
      <exception cref="T:System.ServiceModel.QuotaExceededException">シリアル化されるオブジェクトが最大数を超えました。 <see cref="P:System.Runtime.Serialization.DataContractSerializer.MaxItemsInObjectGraph" /> プロパティをチェックします。</exception>
    </member>
    <member name="M:System.Runtime.Serialization.Json.DataContractJsonSerializer.WriteObject(System.Xml.XmlDictionaryWriter,System.Object)">
      <summary>オブジェクトを JSON (JavaScript Object Notation) にマップ可能な XML にシリアル化します。 <see cref="T:System.Xml.XmlDictionaryWriter" /> を使用して、XML の開始要素、コンテンツ、終了要素を含む、すべてのオブジェクト データを書き込みます。</summary>
      <param name="writer">XML ドキュメントまたはストリームを書き込んで、JSON にマップするために使用する <see cref="T:System.Xml.XmlDictionaryWriter" />。</param>
      <param name="graph">書き込むデータを格納したオブジェクト。</param>
      <exception cref="T:System.Runtime.Serialization.InvalidDataContractException">シリアル化される型がデータ コントラクト規則に準拠していません。 たとえば、<see cref="T:System.Runtime.Serialization.DataContractAttribute" /> 属性が型に適用されていません。</exception>
      <exception cref="T:System.Runtime.Serialization.SerializationException">書き込まれているインスタンスに問題があります。</exception>
      <exception cref="T:System.ServiceModel.QuotaExceededException">シリアル化されるオブジェクトが最大数を超えました。 <see cref="P:System.Runtime.Serialization.DataContractSerializer.MaxItemsInObjectGraph" /> プロパティをチェックします。</exception>
    </member>
    <member name="M:System.Runtime.Serialization.Json.DataContractJsonSerializer.WriteObject(System.Xml.XmlWriter,System.Object)">
      <summary>オブジェクトを JSON (JavaScript Object Notation) にマップ可能な XML にシリアル化します。 <see cref="T:System.Xml.XmlWriter" /> を使用して、XML の開始要素、コンテンツ、終了要素を含む、すべてのオブジェクト データを書き込みます。</summary>
      <param name="writer">XML ドキュメントを書き込んで、JSON にマップするために使用する <see cref="T:System.Xml.XmlWriter" />。</param>
      <param name="graph">書き込むデータを格納したオブジェクト。</param>
      <exception cref="T:System.Runtime.Serialization.InvalidDataContractException">シリアル化される型がデータ コントラクト規則に準拠していません。 たとえば、<see cref="T:System.Runtime.Serialization.DataContractAttribute" /> 属性が型に適用されていません。</exception>
      <exception cref="T:System.Runtime.Serialization.SerializationException">書き込まれているインスタンスに問題があります。</exception>
      <exception cref="T:System.ServiceModel.QuotaExceededException">シリアル化されるオブジェクトが最大数を超えました。 <see cref="P:System.Runtime.Serialization.DataContractSerializer.MaxItemsInObjectGraph" /> プロパティをチェックします。</exception>
    </member>
    <member name="M:System.Runtime.Serialization.Json.DataContractJsonSerializer.WriteObjectContent(System.Xml.XmlDictionaryWriter,System.Object)">
      <summary>
        <see cref="T:System.Xml.XmlDictionaryWriter" /> を使用して、JSON (JavaScript Object Notation) にマップ可能な XML コンテンツを書き込みます。</summary>
      <param name="writer">書き込み先の <see cref="T:System.Xml.XmlDictionaryWriter" />。</param>
      <param name="graph">書き込むオブジェクト。</param>
      <exception cref="T:System.Runtime.Serialization.InvalidDataContractException">シリアル化される型がデータ コントラクト規則に準拠していません。 たとえば、<see cref="T:System.Runtime.Serialization.DataContractAttribute" /> 属性が型に適用されていません。</exception>
      <exception cref="T:System.Runtime.Serialization.SerializationException">書き込まれているインスタンスに問題があります。</exception>
      <exception cref="T:System.ServiceModel.QuotaExceededException">シリアル化されるオブジェクトが最大数を超えました。 <see cref="P:System.Runtime.Serialization.DataContractSerializer.MaxItemsInObjectGraph" /> プロパティをチェックします。</exception>
    </member>
    <member name="M:System.Runtime.Serialization.Json.DataContractJsonSerializer.WriteObjectContent(System.Xml.XmlWriter,System.Object)">
      <summary>
        <see cref="T:System.Xml.XmlWriter" /> を使用して、JSON (JavaScript Object Notation) にマップ可能な XML コンテンツを書き込みます。</summary>
      <param name="writer">書き込みに使用する <see cref="T:System.Xml.XmlWriter" />。</param>
      <param name="graph">書き込むオブジェクト。</param>
      <exception cref="T:System.Runtime.Serialization.InvalidDataContractException">シリアル化される型がデータ コントラクト規則に準拠していません。 たとえば、<see cref="T:System.Runtime.Serialization.DataContractAttribute" /> 属性が型に適用されていません。</exception>
      <exception cref="T:System.Runtime.Serialization.SerializationException">書き込まれているインスタンスに問題があります。</exception>
      <exception cref="T:System.ServiceModel.QuotaExceededException">シリアル化されるオブジェクトが最大数を超えました。 <see cref="P:System.Runtime.Serialization.DataContractSerializer.MaxItemsInObjectGraph" /> プロパティをチェックします。</exception>
    </member>
    <member name="M:System.Runtime.Serialization.Json.DataContractJsonSerializer.WriteStartObject(System.Xml.XmlDictionaryWriter,System.Object)">
      <summary>
        <see cref="T:System.Xml.XmlDictionaryWriter" /> を使用して、XML の開始要素を書き込み、オブジェクトを、JSON (JavaScript Object Notation) にマップ可能な XML にシリアル化します。</summary>
      <param name="writer">XML 開始要素を書き込むために使用する <see cref="T:System.Xml.XmlDictionaryWriter" />。</param>
      <param name="graph">書き込むオブジェクト。</param>
    </member>
    <member name="M:System.Runtime.Serialization.Json.DataContractJsonSerializer.WriteStartObject(System.Xml.XmlWriter,System.Object)">
      <summary>
        <see cref="T:System.Xml.XmlWriter" /> を使用して、XML の開始要素を書き込み、オブジェクトを、JSON (JavaScript Object Notation) にマップ可能な XML にシリアル化します。</summary>
      <param name="writer">XML 開始要素を書き込むために使用する <see cref="T:System.Xml.XmlWriter" />。</param>
      <param name="graph">書き込むオブジェクト。</param>
    </member>
    <member name="P:System.Runtime.Serialization.Json.DataContractJsonSerializer.DateTimeFormat">
      <summary>オブジェクト グラフの日付型および時刻型の項目の書式を取得します。</summary>
      <returns>オブジェクト グラフの日付型および時刻型の項目の書式。</returns>
    </member>
    <member name="P:System.Runtime.Serialization.Json.DataContractJsonSerializer.EmitTypeInformation">
      <summary>型情報を出力するデータ コントラクトの JSON シリアライザーの設定を取得または設定します。</summary>
      <returns>型情報を出力するデータ コントラクトの JSON シリアライザーの設定。</returns>
    </member>
    <member name="P:System.Runtime.Serialization.Json.DataContractJsonSerializer.IgnoreExtensionDataObject">
      <summary>逆シリアル化時に未知のデータを無視するかどうか、およびシリアル化時に <see cref="T:System.Runtime.Serialization.IExtensibleDataObject" /> インターフェイスを無視するかどうかを指定する値を取得します。</summary>
      <returns>未知のデータおよび <see langword="true" /> を無視する場合は <see cref="T:System.Runtime.Serialization.IExtensibleDataObject" />。それ以外の場合は <see langword="false" />。</returns>
    </member>
    <member name="P:System.Runtime.Serialization.Json.DataContractJsonSerializer.KnownTypes">
      <summary>
        <see cref="T:System.Runtime.Serialization.Json.DataContractJsonSerializer" /> のこのインスタンスを使用してシリアル化されるオブジェクト グラフ内に存在可能な型のコレクションを取得します。</summary>
      <returns>
        <see cref="T:System.Collections.ObjectModel.ReadOnlyCollection`1" /> コンストラクターに既知の型として渡される、予測型を含む <see cref="T:System.Runtime.Serialization.Json.DataContractJsonSerializer" />。</returns>
    </member>
    <member name="P:System.Runtime.Serialization.Json.DataContractJsonSerializer.MaxItemsInObjectGraph">
      <summary>シリアライザーが 1 回の読み取りまたは書き込みの呼び出しでシリアル化または逆シリアル化するオブジェクト グラフ内の項目の最大数を取得します。</summary>
      <exception cref="T:System.ArgumentOutOfRangeException">項目数が最大値を超えています。</exception>
      <returns>シリアル化、または逆シリアル化する項目の最大数。</returns>
    </member>
    <member name="P:System.Runtime.Serialization.Json.DataContractJsonSerializer.SerializeReadOnlyTypes">
      <summary>読み取り専用の型をシリアル化するかどうかを指定する値を取得または設定します。</summary>
      <returns>読み取り専用の型をシリアル化する場合は <see langword="true" />、それ以外の場合は <see langword="false" />。</returns>
    </member>
    <member name="P:System.Runtime.Serialization.Json.DataContractJsonSerializer.UseSimpleDictionaryFormat">
      <summary>簡単なディクショナリ形式を使用するかどうかを指定する値を取得します。</summary>
      <returns>単純なディクショナリ形式を使用する場合は <see langword="true" />、それ以外の場合は <see langword="false" />。</returns>
    </member>
    <member name="T:System.Runtime.Serialization.Json.DataContractJsonSerializerSettings">
      <summary>
        <see cref="T:System.Runtime.Serialization.Json.DataContractJsonSerializer" /> の設定を指定します。</summary>
    </member>
    <member name="M:System.Runtime.Serialization.Json.DataContractJsonSerializerSettings.#ctor">
      <summary>
        <see cref="T:System.Runtime.Serialization.Json.DataContractJsonSerializerSettings" /> クラスの新しいインスタンスを初期化します。</summary>
    </member>
    <member name="P:System.Runtime.Serialization.Json.DataContractJsonSerializerSettings.DateTimeFormat">
      <summary>カルチャに対応する、日時の表示形式を定義する DateTimeFormat を取得または設定します。</summary>
      <returns>カルチャに対応する、日時の表示形式を定義する DateTimeFormat。</returns>
    </member>
    <member name="P:System.Runtime.Serialization.Json.DataContractJsonSerializerSettings.EmitTypeInformation">
      <summary>型情報を出力するデータ コントラクトの JSON シリアライザーの設定を取得または設定します。</summary>
      <returns>型情報を出力するデータ コントラクトの JSON シリアライザーの設定。</returns>
    </member>
    <member name="P:System.Runtime.Serialization.Json.DataContractJsonSerializerSettings.IgnoreExtensionDataObject">
      <summary>クラスがシリアル化または逆シリアル化されているときに、そのクラスの拡張により提供されるデータを無視するかどうかを指定する値を取得または設定します。</summary>
      <returns>クラスがシリアル化または逆シリアル化されているときに、そのクラスの拡張により提供されるデータを無視するかどうかを指定する場合は <see langword="true" />、それ以外の場合は <see langword="false" />。</returns>
    </member>
    <member name="P:System.Runtime.Serialization.Json.DataContractJsonSerializerSettings.KnownTypes">
      <summary>DataContractJsonSerializerSettings のこのインスタンスを使用してシリアル化されるオブジェクト グラフ内に存在可能な型のコレクションを取得または設定します。</summary>
      <returns>DataContractJsonSerializerSettings のこのインスタンスを使用してシリアル化されるオブジェクト グラフ内に存在可能な型のコレクション。</returns>
    </member>
    <member name="P:System.Runtime.Serialization.Json.DataContractJsonSerializerSettings.MaxItemsInObjectGraph">
      <summary>シリアル化または逆シリアル化するオブジェクト グラフ内の項目の最大数を取得または設定します。</summary>
      <returns>シリアル化または逆シリアル化するオブジェクト グラフ内の項目の最大数。</returns>
    </member>
    <member name="P:System.Runtime.Serialization.Json.DataContractJsonSerializerSettings.RootName">
      <summary>選択したオブジェクトのルート名を取得または設定します。</summary>
      <returns>選択されたオブジェクトのルート名。</returns>
    </member>
    <member name="P:System.Runtime.Serialization.Json.DataContractJsonSerializerSettings.SerializeReadOnlyTypes">
      <summary>読み取り専用の型をシリアル化するかどうかを指定する値を取得または設定します。</summary>
      <returns>読み取り専用の型をシリアル化する場合は <see langword="true" />、それ以外の場合は <see langword="false" />。</returns>
    </member>
    <member name="P:System.Runtime.Serialization.Json.DataContractJsonSerializerSettings.UseSimpleDictionaryFormat">
      <summary>簡単なディクショナリ形式を使用するかどうかを指定する値を取得または設定します。</summary>
      <returns>単純なディクショナリ形式を使用する場合は <see langword="true" />、それ以外の場合は <see langword="false" />。</returns>
    </member>
    <member name="T:System.Runtime.Serialization.Json.IXmlJsonReaderInitializer">
      <summary>JSON (JavaScript Object Notation) リーダーを再利用して特定のストリームまたはバッファーから読み取るときに、JSON (JavaScript Object Notation) リーダーを初期化するためのインターフェイスを指定します。</summary>
    </member>
    <member name="M:System.Runtime.Serialization.Json.IXmlJsonReaderInitializer.SetInput(System.Byte[],System.Int32,System.Int32,System.Text.Encoding,System.Xml.XmlDictionaryReaderQuotas,System.Xml.OnXmlDictionaryReaderClose)">
      <summary>JSON (JavaScript Object Notation) 対応のリーダーを、JSON エンコードされたデータを含む特定のバッファーに再初期化します。</summary>
      <param name="buffer">読み込み元の入力 <see cref="T:System.Byte" /> バッファー配列。</param>
      <param name="offset">
        <paramref name="buffer" /> の読み取り開始位置。</param>
      <param name="count">
        <paramref name="buffer" /> からの読み取り可能バイト数。</param>
      <param name="encoding">リーダーによって使用される <see cref="T:System.Text.Encoding" />。</param>
      <param name="quotas">適用する <see cref="T:System.Xml.XmlDictionaryReaderQuotas" />。</param>
      <param name="onClose">リーダーが閉じられたときに呼び出す <see cref="T:System.Xml.OnXmlDictionaryReaderClose" /> デリゲート。</param>
    </member>
    <member name="M:System.Runtime.Serialization.Json.IXmlJsonReaderInitializer.SetInput(System.IO.Stream,System.Text.Encoding,System.Xml.XmlDictionaryReaderQuotas,System.Xml.OnXmlDictionaryReaderClose)">
      <summary>JSON (JavaScript Object Notation) 対応のリーダーを、JSON エンコードされたデータを含む特定のストリームに再初期化します。</summary>
      <param name="stream">読み込み元の入力 <see cref="T:System.IO.Stream" />。</param>
      <param name="encoding">リーダーによって使用される <see cref="T:System.Text.Encoding" />。</param>
      <param name="quotas">適用する <see cref="T:System.Xml.XmlDictionaryReaderQuotas" />。</param>
      <param name="onClose">リーダーが閉じられたときに呼び出すデリゲート。</param>
    </member>
    <member name="T:System.Runtime.Serialization.Json.IXmlJsonWriterInitializer">
      <summary>JSON (JavaScript Object Notation) ライターを再利用して特定の出力ストリームに書き込むときに、JSON ライターを初期化するためのインターフェイスを指定します。</summary>
    </member>
    <member name="M:System.Runtime.Serialization.Json.IXmlJsonWriterInitializer.SetOutput(System.IO.Stream,System.Text.Encoding,System.Boolean)">
      <summary>JSON (JavaScript Object Notation) ライターを、指定した文字エンコーディングの特定の出力ストリームに初期化 (または、再初期化) します。</summary>
      <param name="stream">ライターの書き込み先となる出力 <see cref="T:System.IO.Stream" />。</param>
      <param name="encoding">
        <see cref="T:System.Text.Encoding" /> は、出力ストリームの文字エンコーディングを指定します。</param>
      <param name="ownsStream">完了時に出力ストリームがライターによって閉じられる場合は <see langword="true" />、それ以外の場合は <see langword="false" />。</param>
    </member>
    <member name="T:System.Runtime.Serialization.Json.JsonReaderWriterFactory">
      <summary>ストリームまたはバッファーから JSON (JavaScript Object Notation) でエンコードされたデータを読み取り、XML Infoset にマップできる <see cref="T:System.Xml.XmlDictionaryReader" /> のインスタンスと、XML Infoset を JSON にマップし、JSON エンコードされたデータをストリームに書き込むことができる <see cref="T:System.Xml.XmlDictionaryWriter" /> のインスタンスを作成します。</summary>
    </member>
    <member name="M:System.Runtime.Serialization.Json.JsonReaderWriterFactory.CreateJsonReader(System.Byte[],System.Int32,System.Int32,System.Text.Encoding,System.Xml.XmlDictionaryReaderQuotas,System.Xml.OnXmlDictionaryReaderClose)">
      <summary>JSON (JavaScript Object Notation) でエンコードされたバッファーを、サイズとオフセットおよび文字エンコーディングを指定して、XML Infoset にマップできる <see cref="T:System.Xml.XmlDictionaryReader" /> を作成します。</summary>
      <param name="buffer">読み込み元の入力 <see cref="T:System.Byte" /> バッファー配列。</param>
      <param name="offset">
        <paramref name="buffer" /> の読み込み開始位置。</param>
      <param name="count">
        <paramref name="buffer" /> からの読み込み可能バイト数。</param>
      <param name="encoding">リーダーによって使用される文字エンコーディングを指定する <see cref="T:System.Text.Encoding" />。 値として <see langword="null" /> が指定されている場合、リーダーは、エンコーディングを自動検出します。</param>
      <param name="quotas">信頼できないデータを読み取るときに、サービス拒否 (DoS) 攻撃を防ぐために使用される <see cref="T:System.Xml.XmlDictionaryReaderQuotas" />。</param>
      <param name="onClose">リーダーが閉じられたときに呼び出す <see cref="T:System.Xml.OnXmlDictionaryReaderClose" /> デリゲート。 既定値は <see langword="null" /> です。</param>
      <returns>JSON (JavaScript Object Notation) を読み取ることができる <see cref="T:System.Xml.XmlDictionaryReader" />。</returns>
    </member>
    <member name="M:System.Runtime.Serialization.Json.JsonReaderWriterFactory.CreateJsonReader(System.Byte[],System.Int32,System.Int32,System.Xml.XmlDictionaryReaderQuotas)">
      <summary>JSON (JavaScript Object Notation) でエンコードされたバッファーを、サイズおよびオフセットを指定して、XML Infoset にマップできる <see cref="T:System.Xml.XmlDictionaryReader" /> を作成します。</summary>
      <param name="buffer">読み込み元の入力 <see cref="T:System.Byte" /> バッファー配列。</param>
      <param name="offset">
        <paramref name="buffer" /> の読み込み開始位置。</param>
      <param name="count">
        <paramref name="buffer" /> からの読み込み可能バイト数。</param>
      <param name="quotas">信頼できないデータを読み取るときに、サービス拒否 (DoS) 攻撃を防ぐために使用される <see cref="T:System.Xml.XmlDictionaryReaderQuotas" />。</param>
      <returns>JSON (JavaScript Object Notation) を読み取ることができる <see cref="T:System.Xml.XmlDictionaryReader" />。</returns>
    </member>
    <member name="M:System.Runtime.Serialization.Json.JsonReaderWriterFactory.CreateJsonReader(System.Byte[],System.Xml.XmlDictionaryReaderQuotas)">
      <summary>JSON (JavaScript Object Notation) でエンコードされたバッファーを XML Infoset にマップできる <see cref="T:System.Xml.XmlDictionaryReader" /> を作成します。</summary>
      <param name="buffer">読み込み元の入力 <see cref="T:System.Byte" /> バッファー配列。</param>
      <param name="quotas">信頼できないデータを読み取るときに、サービス拒否 (DoS) 攻撃を防ぐために使用される <see cref="T:System.Xml.XmlDictionaryReaderQuotas" />。</param>
      <returns>JSON (JavaScript Object Notation) データを処理できる <see cref="T:System.Xml.XmlDictionaryReader" />。</returns>
    </member>
    <member name="M:System.Runtime.Serialization.Json.JsonReaderWriterFactory.CreateJsonReader(System.IO.Stream,System.Text.Encoding,System.Xml.XmlDictionaryReaderQuotas,System.Xml.OnXmlDictionaryReaderClose)">
      <summary>JSON (JavaScript Object Notation) でエンコードされたストリームを、サイズおよびオフセットを指定して、XML Infoset にマップできる <see cref="T:System.Xml.XmlDictionaryReader" /> を作成します。</summary>
      <param name="stream">読み込み元の入力 <see cref="T:System.IO.Stream" />。</param>
      <param name="encoding">リーダーによって使用される文字エンコーディングを指定する <see cref="T:System.Text.Encoding" />。 値として <see langword="null" /> が指定されている場合、リーダーは、エンコーディングを自動検出します。</param>
      <param name="quotas">信頼できないデータを読み取るときに、サービス拒否 (DoS) 攻撃を防ぐために使用される <see cref="T:System.Xml.XmlDictionaryReaderQuotas" />。</param>
      <param name="onClose">リーダーが閉じられたときに呼び出す <see cref="T:System.Xml.OnXmlDictionaryReaderClose" /> デリゲート。</param>
      <returns>JSON (JavaScript Object Notation) を読み取ることができる <see cref="T:System.Xml.XmlDictionaryReader" />。</returns>
    </member>
    <member name="M:System.Runtime.Serialization.Json.JsonReaderWriterFactory.CreateJsonReader(System.IO.Stream,System.Xml.XmlDictionaryReaderQuotas)">
      <summary>JSON (JavaScript Object Notation) でエンコードされたストリームを XML Infoset にマップできる <see cref="T:System.Xml.XmlDictionaryReader" /> を作成します。</summary>
      <param name="stream">読み込み元の入力 <see cref="T:System.IO.Stream" />。</param>
      <param name="quotas">信頼できないデータを読み取るときに、サービス拒否 (DoS) 攻撃を防ぐために使用される <see cref="T:System.Xml.XmlDictionaryReaderQuotas" />。</param>
      <returns>JSON (JavaScript Object Notation) を読み取ることができる <see cref="T:System.Xml.XmlDictionaryReader" />。</returns>
    </member>
    <member name="M:System.Runtime.Serialization.Json.JsonReaderWriterFactory.CreateJsonWriter(System.IO.Stream)">
      <summary>JSON でエンコードされたデータをストリームに書き込む <see cref="T:System.Xml.XmlDictionaryWriter" /> を作成します。</summary>
      <param name="stream">JSON ライターの出力 <see cref="T:System.IO.Stream" />。</param>
      <returns>JSON でエンコードされたデータを、XML Infoset に基づいてストリームに書き込む <see cref="T:System.Xml.XmlDictionaryWriter" />。</returns>
    </member>
    <member name="M:System.Runtime.Serialization.Json.JsonReaderWriterFactory.CreateJsonWriter(System.IO.Stream,System.Text.Encoding)">
      <summary>JSON でエンコードされたデータを、文字エンコーディングを指定してストリームに書き込む <see cref="T:System.Xml.XmlDictionaryWriter" /> を作成します。</summary>
      <param name="stream">JSON ライターの出力 <see cref="T:System.IO.Stream" />。</param>
      <param name="encoding">ライターによって使用される文字エンコーディングを指定する <see cref="T:System.Text.Encoding" />。 既定のエンコーディングは UTF-8 です。</param>
      <returns>JSON でエンコードされたデータを、XML Infoset に基づいてストリームに書き込む <see cref="T:System.Xml.XmlDictionaryWriter" />。</returns>
    </member>
    <member name="M:System.Runtime.Serialization.Json.JsonReaderWriterFactory.CreateJsonWriter(System.IO.Stream,System.Text.Encoding,System.Boolean)">
      <summary>JSON でエンコードされたデータを、文字エンコーディングを指定してストリームに書き込む <see cref="T:System.Xml.XmlDictionaryWriter" /> を作成します。</summary>
      <param name="stream">JSON ライターの出力 <see cref="T:System.IO.Stream" />。</param>
      <param name="encoding">ライターによって使用される文字エンコーディングを指定する <see cref="T:System.Text.Encoding" />。 既定のエンコーディングは UTF-8 です。</param>
      <param name="ownsStream">完了時に出力ストリームがライターによって閉じられる場合は <see langword="true" />、それ以外の場合は <see langword="false" />。 既定値は <see langword="true" /> です。</param>
      <returns>JSON でエンコードされたデータを、XML Infoset に基づいてストリームに書き込む <see cref="T:System.Xml.XmlDictionaryWriter" />。</returns>
    </member>
    <member name="M:System.Runtime.Serialization.Json.JsonReaderWriterFactory.CreateJsonWriter(System.IO.Stream,System.Text.Encoding,System.Boolean,System.Boolean)">
      <summary>JSON でエンコードされたデータを、指定した文字を使用してストリームに書き込む <see cref="T:System.Xml.XmlDictionaryWriter" /> を作成します。</summary>
      <param name="stream">JSON ライターの出力 <see cref="T:System.IO.Stream" />。</param>
      <param name="encoding">ライターによって使用される文字エンコーディングを指定する <see cref="T:System.Text.Encoding" />。 既定のエンコーディングは UTF-8 です。</param>
      <param name="ownsStream">完了時に出力ストリームがライターによって閉じられる場合は <see langword="true" />、それ以外の場合は <see langword="false" />。 既定値は <see langword="true" /> です。</param>
      <param name="indent">
        <see langword="true" /> の場合、出力は複数行形式を使用し、各レベルを適切にインデントします。それ以外の場合は、<see langword="false" /> です。</param>
      <returns>JSON でエンコードされたデータを、XML Infoset に基づいてストリームに書き込む <see cref="T:System.Xml.XmlDictionaryWriter" />。</returns>
    </member>
    <member name="M:System.Runtime.Serialization.Json.JsonReaderWriterFactory.CreateJsonWriter(System.IO.Stream,System.Text.Encoding,System.Boolean,System.Boolean,System.String)">
      <summary>JSON でエンコードされたデータを、指定した文字を使用してストリームに書き込む <see cref="T:System.Xml.XmlDictionaryWriter" /> を作成します。</summary>
      <param name="stream">JSON ライターの出力 <see cref="T:System.IO.Stream" />。</param>
      <param name="encoding">ライターによって使用される文字エンコーディングを指定する <see cref="T:System.Text.Encoding" />。 既定のエンコーディングは UTF-8 です。</param>
      <param name="ownsStream">完了時に出力ストリームがライターによって閉じられる場合は <see langword="true" />、それ以外の場合は <see langword="false" />。 既定値は <see langword="true" /> です。</param>
      <param name="indent">
        <see langword="true" /> の場合、出力は複数行形式を使用し、各レベルを適切にインデントします。それ以外の場合は、<see langword="false" /> です。</param>
      <param name="indentChars">各レベルのインデントに使用される文字列。</param>
      <returns>JSON でエンコードされたデータを、XML Infoset に基づいてストリームに書き込む <see cref="T:System.Xml.XmlDictionaryWriter" />。</returns>
    </member>
  </members>
</doc>