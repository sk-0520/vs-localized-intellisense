<?xml version="1.0" encoding="utf-8"?>
<doc xmlns:vsli="https://github.com/sk-0520/vs-localized-intellisense/tree/master/schema/2024">
  <assembly>
    <name>System.Formats.Asn1</name>
  </assembly>
  <members>
    <member name="T:System.Formats.Asn1.Asn1Tag">
      <summary vsli:raw="This type represents an ASN.1 tag, as described in ITU-T Recommendation X.680.">この型は、ITU-T 推奨 X.680 で説明されているように、ASN.1 タグを表します。</summary>
    </member>
    <member name="F:System.Formats.Asn1.Asn1Tag.Boolean">
      <summary vsli:raw="Represents the universal class tag for a Boolean value.">ブール値のユニバーサル クラス タグを表します。</summary>
    </member>
    <member name="F:System.Formats.Asn1.Asn1Tag.ConstructedBitString">
      <summary vsli:raw="Represents the universal class tag for a Bit String value under a constructed encoding.">構築されたエンコードでのビット文字列値のユニバーサル クラス タグを表します。</summary>
    </member>
    <member name="F:System.Formats.Asn1.Asn1Tag.ConstructedOctetString">
      <summary vsli:raw="Represents the universal class tag for a Octet String value under a constructed encoding.">構築されたエンコードでのオクテット文字列値のユニバーサル クラス タグを表します。</summary>
    </member>
    <member name="F:System.Formats.Asn1.Asn1Tag.Enumerated">
      <summary vsli:raw="Represents the universal class tag for an Enumerated value.">列挙値のユニバーサル クラス タグを表します。</summary>
    </member>
    <member name="F:System.Formats.Asn1.Asn1Tag.GeneralizedTime">
      <summary vsli:raw="Represents the universal class tag for a GeneralizedTime value.">GeneralizedTime 値のユニバーサル クラス タグを表します。</summary>
    </member>
    <member name="F:System.Formats.Asn1.Asn1Tag.Integer">
      <summary vsli:raw="Represents the universal class tag for an Integer value.">整数値のユニバーサル クラス タグを表します。</summary>
    </member>
    <member name="F:System.Formats.Asn1.Asn1Tag.Null">
      <summary vsli:raw="Represents the universal class tag for a &lt;see langword=&quot;null&quot; /&gt; value.">
        <see langword="null" /> 値のユニバーサル クラス タグを表します。</summary>
    </member>
    <member name="F:System.Formats.Asn1.Asn1Tag.ObjectIdentifier">
      <summary vsli:raw="Represents the universal class tag for an Object Identifier value.">オブジェクト識別子値のユニバーサル クラス タグを表します。</summary>
    </member>
    <member name="F:System.Formats.Asn1.Asn1Tag.PrimitiveBitString">
      <summary vsli:raw="Represents the universal class tag for a Bit String value under a primitive encoding.">プリミティブ エンコードでのビット文字列値のユニバーサル クラス タグを表します。</summary>
    </member>
    <member name="F:System.Formats.Asn1.Asn1Tag.PrimitiveOctetString">
      <summary vsli:raw="Represents the universal class tag for an Octet String value under a primitive encoding.">プリミティブ エンコードでのオクテット文字列値のユニバーサル クラス タグを表します。</summary>
    </member>
    <member name="F:System.Formats.Asn1.Asn1Tag.Sequence">
      <summary vsli:raw="Represents the universal class tag for a Sequence value (always a constructed encoding).">シーケンス値のユニバーサル クラス タグ (常に構築されたエンコード) を表します。</summary>
    </member>
    <member name="F:System.Formats.Asn1.Asn1Tag.SetOf">
      <summary vsli:raw="Represents the universal class tag for a SetOf value (always a constructed encoding).">SetOf 値のユニバーサル クラス タグ (常に構築されたエンコード) を表します。</summary>
    </member>
    <member name="F:System.Formats.Asn1.Asn1Tag.UtcTime">
      <summary vsli:raw="Represents the universal class tag for a UtcTime value.">UtcTime 値のユニバーサル クラス タグを表します。</summary>
    </member>
    <member name="M:System.Formats.Asn1.Asn1Tag.#ctor(System.Formats.Asn1.TagClass,System.Int32,System.Boolean)">
      <summary vsli:raw="Create an &lt;see cref=&quot;T:System.Formats.Asn1.Asn1Tag&quot; /&gt; for a specified value within a specified tag class.">指定したタグ クラス内で指定した値の <see cref="T:System.Formats.Asn1.Asn1Tag" /> を作成します。</summary>
      <param name="tagClass" vsli:raw="The tag class for this tag.">このタグのタグ クラス。</param>
      <param name="tagValue" vsli:raw="The numeric value for this tag.">このタグの数値。</param>
      <param name="isConstructed" vsli:raw="&lt;see langword=&quot;true&quot; /&gt; for a constructed tag, &lt;see langword=&quot;false&quot; /&gt; for a primitive tag.">構築されたタグの場合は <see langword="true" />、プリミティブ タグの場合は <see langword="false" />。</param>
      <exception cref="T:System.ArgumentOutOfRangeException" vsli:raw="&lt;paramref name=&quot;tagClass&quot; /&gt; is not a known value.&#xA;             -or- &#xA;               &lt;paramref name=&quot;tagValue&quot; /&gt; is negative.">
        <paramref name="tagClass" /> は既知の値ではありません。
-または- <paramref name="tagValue" /> が負の値です。</exception>
    </member>
    <member name="M:System.Formats.Asn1.Asn1Tag.#ctor(System.Formats.Asn1.UniversalTagNumber,System.Boolean)">
      <summary vsli:raw="Create an &lt;see cref=&quot;T:System.Formats.Asn1.Asn1Tag&quot; /&gt; for a tag from the UNIVERSAL class.">UNIVERSAL クラスからタグの <see cref="T:System.Formats.Asn1.Asn1Tag" /> を作成します。</summary>
      <param name="universalTagNumber" vsli:raw="One of the enumeration values that specifies the semantic type for this tag.">このタグのセマンティック型を指定する列挙値の 1 つ。</param>
      <param name="isConstructed" vsli:raw="&lt;see langword=&quot;true&quot; /&gt; for a constructed tag, &lt;see langword=&quot;false&quot; /&gt; for a primitive tag.">構築されたタグの場合は <see langword="true" />、プリミティブ タグの場合は <see langword="false" />。</param>
      <exception cref="T:System.ArgumentOutOfRangeException" vsli:raw="&lt;paramref name=&quot;universalTagNumber&quot; /&gt; is not a known value.">
        <paramref name="universalTagNumber" /> は既知の値ではありません。</exception>
    </member>
    <member name="M:System.Formats.Asn1.Asn1Tag.AsConstructed">
      <summary vsli:raw="Produces a tag with the same &lt;see cref=&quot;P:System.Formats.Asn1.Asn1Tag.TagClass&quot; /&gt; and &lt;see cref=&quot;P:System.Formats.Asn1.Asn1Tag.TagValue&quot; /&gt; values, but whose &lt;see cref=&quot;P:System.Formats.Asn1.Asn1Tag.IsConstructed&quot; /&gt; is &lt;see langword=&quot;true&quot; /&gt;.">
        <see cref="P:System.Formats.Asn1.Asn1Tag.TagClass" /> と <see cref="P:System.Formats.Asn1.Asn1Tag.TagValue" /> と同じ値を持つが、<see cref="P:System.Formats.Asn1.Asn1Tag.IsConstructed" /> が <see langword="true" /> のタグを生成します。</summary>
      <returns vsli:raw="A tag with the same &lt;see cref=&quot;P:System.Formats.Asn1.Asn1Tag.TagClass&quot; /&gt; and &lt;see cref=&quot;P:System.Formats.Asn1.Asn1Tag.TagValue&quot; /&gt; values, but whose &lt;see cref=&quot;P:System.Formats.Asn1.Asn1Tag.IsConstructed&quot; /&gt; is &lt;see langword=&quot;true&quot; /&gt;.">
        <see cref="P:System.Formats.Asn1.Asn1Tag.TagClass" /> と <see cref="P:System.Formats.Asn1.Asn1Tag.TagValue" /> と同じ値を持つが、<see cref="P:System.Formats.Asn1.Asn1Tag.IsConstructed" /> が <see langword="true" /> のタグ。</returns>
    </member>
    <member name="M:System.Formats.Asn1.Asn1Tag.AsPrimitive">
      <summary vsli:raw="Produces a tag with the same &lt;see cref=&quot;P:System.Formats.Asn1.Asn1Tag.TagClass&quot; /&gt; and &lt;see cref=&quot;P:System.Formats.Asn1.Asn1Tag.TagValue&quot; /&gt; values, but whose &lt;see cref=&quot;P:System.Formats.Asn1.Asn1Tag.IsConstructed&quot; /&gt; is &lt;see langword=&quot;false&quot; /&gt;.">
        <see cref="P:System.Formats.Asn1.Asn1Tag.TagClass" /> と <see cref="P:System.Formats.Asn1.Asn1Tag.TagValue" /> と同じ値を持つが、<see cref="P:System.Formats.Asn1.Asn1Tag.IsConstructed" /> が <see langword="false" /> のタグを生成します。</summary>
      <returns vsli:raw="A tag with the same &lt;see cref=&quot;P:System.Formats.Asn1.Asn1Tag.TagClass&quot; /&gt; and &lt;see cref=&quot;P:System.Formats.Asn1.Asn1Tag.TagValue&quot; /&gt; values, but whose &lt;see cref=&quot;P:System.Formats.Asn1.Asn1Tag.IsConstructed&quot; /&gt; is &lt;see langword=&quot;false&quot; /&gt;.">
        <see cref="P:System.Formats.Asn1.Asn1Tag.TagClass" /> と <see cref="P:System.Formats.Asn1.Asn1Tag.TagValue" /> と同じ値を持つが、<see cref="P:System.Formats.Asn1.Asn1Tag.IsConstructed" /> が <see langword="false" /> のタグ。</returns>
    </member>
    <member name="M:System.Formats.Asn1.Asn1Tag.CalculateEncodedSize">
      <summary vsli:raw="Reports the number of bytes required for the BER-encoding of this tag.">このタグの BER エンコードに必要なバイト数を報告します。</summary>
      <returns vsli:raw="The number of bytes required for the BER-encoding of this tag.">このタグの BER エンコードに必要なバイト数。</returns>
    </member>
    <member name="M:System.Formats.Asn1.Asn1Tag.Decode(System.ReadOnlySpan{System.Byte},System.Int32@)">
      <summary vsli:raw="Reads a BER-encoded tag which starts at &lt;paramref name=&quot;source&quot; /&gt;.">
        <paramref name="source" /> で始まる、BER でエンコードされたタグを読み取ります。</summary>
      <param name="source" vsli:raw="The read only byte sequence whose beginning is a BER-encoded tag.">先頭が BER でエンコードされたタグである読み取り専用のバイト シーケンス。</param>
      <param name="bytesConsumed" vsli:raw="When this method returns, contains the number of bytes that contributed to the encoded tag. This parameter is treated as uninitialized.">このメソッドの戻り値には、エンコードされたタグに提供されたバイト数が含まれます。 このパラメーターは初期化前として処理されます。</param>
      <exception cref="T:System.Formats.Asn1.AsnContentException" vsli:raw="The provided data does not decode to a tag.">指定されたデータはタグにデコードされません。</exception>
      <returns vsli:raw="The decoded tag.">デコードされたタグ。</returns>
    </member>
    <member name="M:System.Formats.Asn1.Asn1Tag.Encode(System.Span{System.Byte})">
      <summary vsli:raw="Writes the BER-encoded form of this tag to &lt;paramref name=&quot;destination&quot; /&gt;.">このタグの BER でエンコードされた形式を <paramref name="destination" /> に書き込みます。</summary>
      <param name="destination" vsli:raw="The start of where the encoded tag should be written.">エンコードされたタグの書き込み先の開始位置。</param>
      <exception cref="T:System.ArgumentException" vsli:raw="&lt;paramref name=&quot;destination&quot; /&gt;.&lt;see cref=&quot;P:System.Span`1.Length&quot; /&gt; &amp;lt; &lt;see cref=&quot;M:System.Formats.Asn1.Asn1Tag.CalculateEncodedSize&quot; /&gt;.">
        <paramref name="destination" />.<see cref="P:System.Span`1.Length" /> &lt; <see cref="M:System.Formats.Asn1.Asn1Tag.CalculateEncodedSize" />。</exception>
      <returns vsli:raw="The number of bytes written to &lt;paramref name=&quot;destination&quot; /&gt;.">
        <paramref name="destination" /> に書き込むバイト数。</returns>
    </member>
    <member name="M:System.Formats.Asn1.Asn1Tag.Equals(System.Formats.Asn1.Asn1Tag)">
      <summary vsli:raw="Tests if &lt;paramref name=&quot;other&quot; /&gt; has the same encoding as this tag.">
        <paramref name="other" /> がこのタグと同じエンコードを持っているかどうかをテストします。</summary>
      <param name="other" vsli:raw="Tag to test for equality.">等しいかどうかをテストするためのタグ。</param>
      <returns vsli:raw="&lt;see langword=&quot;true&quot; /&gt; if &lt;paramref name=&quot;other&quot; /&gt; has the same values for &lt;see cref=&quot;P:System.Formats.Asn1.Asn1Tag.TagClass&quot; /&gt;, &lt;see cref=&quot;P:System.Formats.Asn1.Asn1Tag.TagValue&quot; /&gt;, and &lt;see cref=&quot;P:System.Formats.Asn1.Asn1Tag.IsConstructed&quot; /&gt;; &lt;see langword=&quot;false&quot; /&gt; otherwise.">
        <paramref name="other" /> が <see cref="P:System.Formats.Asn1.Asn1Tag.TagClass" />、<see cref="P:System.Formats.Asn1.Asn1Tag.TagValue" />、<see cref="P:System.Formats.Asn1.Asn1Tag.IsConstructed" /> の値と同じ場合は <see langword="true" />、それ以外の場合は <see langword="false" />。</returns>
    </member>
    <member name="M:System.Formats.Asn1.Asn1Tag.Equals(System.Object)">
      <summary vsli:raw="Tests if &lt;paramref name=&quot;obj&quot; /&gt; is an &lt;see cref=&quot;T:System.Formats.Asn1.Asn1Tag&quot; /&gt; with the same encoding as this tag.">
        <paramref name="obj" /> がこのタグと同じエンコードを持つ <see cref="T:System.Formats.Asn1.Asn1Tag" /> かどうかをテストします。</summary>
      <param name="obj" vsli:raw="Object to test for value equality.">値が等しいかどうかをテストするオブジェクト</param>
      <returns vsli:raw="&lt;see langword=&quot;false&quot; /&gt; if &lt;paramref name=&quot;obj&quot; /&gt; is not an &lt;see cref=&quot;T:System.Formats.Asn1.Asn1Tag&quot; /&gt;, &lt;see cref=&quot;M:System.Formats.Asn1.Asn1Tag.Equals(System.Formats.Asn1.Asn1Tag)&quot; /&gt; otherwise.">
        <paramref name="obj" /> が <see cref="T:System.Formats.Asn1.Asn1Tag" /> ではない場合は <see langword="false" />、それ以外の場合は <see cref="M:System.Formats.Asn1.Asn1Tag.Equals(System.Formats.Asn1.Asn1Tag)" />。</returns>
    </member>
    <member name="M:System.Formats.Asn1.Asn1Tag.GetHashCode">
      <summary vsli:raw="Returns the hash code for this instance.">このインスタンスのハッシュ コードを返します。</summary>
      <returns vsli:raw="A 32-bit signed integer hash code.">32 ビット符号付き整数ハッシュ コード。</returns>
    </member>
    <member name="M:System.Formats.Asn1.Asn1Tag.HasSameClassAndValue(System.Formats.Asn1.Asn1Tag)">
      <summary vsli:raw="Tests if &lt;paramref name=&quot;other&quot; /&gt; has the same &lt;see cref=&quot;P:System.Formats.Asn1.Asn1Tag.TagClass&quot; /&gt; and &lt;see cref=&quot;P:System.Formats.Asn1.Asn1Tag.TagValue&quot; /&gt; values as this tag, and does not compare &lt;see cref=&quot;P:System.Formats.Asn1.Asn1Tag.IsConstructed&quot; /&gt;.">
        <paramref name="other" /> がこのタグと同じ <see cref="P:System.Formats.Asn1.Asn1Tag.TagClass" /> 値と <see cref="P:System.Formats.Asn1.Asn1Tag.TagValue" /> 値を持っているかどうかをテストし、<see cref="P:System.Formats.Asn1.Asn1Tag.IsConstructed" /> は比較しません。</summary>
      <param name="other" vsli:raw="Tag to test for concept equality.">概念が等しいかどうかをテストするためのタグ。</param>
      <returns vsli:raw="&lt;see langword=&quot;true&quot; /&gt; if &lt;paramref name=&quot;other&quot; /&gt; has the same &lt;see cref=&quot;P:System.Formats.Asn1.Asn1Tag.TagClass&quot; /&gt; and &lt;see cref=&quot;P:System.Formats.Asn1.Asn1Tag.TagValue&quot; /&gt; as this tag, &lt;see langword=&quot;false&quot; /&gt; otherwise.">
        <paramref name="other" /> がこのタグと同じ <see cref="P:System.Formats.Asn1.Asn1Tag.TagClass" /> と <see cref="P:System.Formats.Asn1.Asn1Tag.TagValue" /> を持っている場合は <see langword="true" />、それ以外の場合は <see langword="false" />。</returns>
    </member>
    <member name="M:System.Formats.Asn1.Asn1Tag.op_Equality(System.Formats.Asn1.Asn1Tag,System.Formats.Asn1.Asn1Tag)">
      <summary vsli:raw="Tests if two &lt;see cref=&quot;T:System.Formats.Asn1.Asn1Tag&quot; /&gt; values have the same BER encoding.">2 つの <see cref="T:System.Formats.Asn1.Asn1Tag" /> の値の BER エンコードが同じであるかどうかをテストします。</summary>
      <param name="left" vsli:raw="The first value to compare.">比較する最初の値です。</param>
      <param name="right" vsli:raw="The second value to compare.">比較する 2 番目の値です。</param>
      <returns vsli:raw="&lt;see langword=&quot;true&quot; /&gt; if &lt;paramref name=&quot;left&quot; /&gt; and &lt;paramref name=&quot;right&quot; /&gt; have the same BER encoding, &lt;see langword=&quot;false&quot; /&gt; otherwise.">
        <paramref name="left" /> と <paramref name="right" /> の BER エンコードが同じである場合は <see langword="true" />、それ以外の場合は <see langword="false" />。</returns>
    </member>
    <member name="M:System.Formats.Asn1.Asn1Tag.op_Inequality(System.Formats.Asn1.Asn1Tag,System.Formats.Asn1.Asn1Tag)">
      <summary vsli:raw="Tests if two &lt;see cref=&quot;T:System.Formats.Asn1.Asn1Tag&quot; /&gt; values have a different BER encoding.">2 つの <see cref="T:System.Formats.Asn1.Asn1Tag" /> の値の BER エンコードが異なっているかどうかをテストします。</summary>
      <param name="left" vsli:raw="The first value to compare.">比較する最初の値です。</param>
      <param name="right" vsli:raw="The second value to compare.">比較する 2 番目の値です。</param>
      <returns vsli:raw="&lt;see langword=&quot;true&quot; /&gt; if &lt;paramref name=&quot;left&quot; /&gt; and &lt;paramref name=&quot;right&quot; /&gt; have a different BER encoding, &lt;see langword=&quot;false&quot; /&gt; otherwise.">
        <paramref name="left" /> と <paramref name="right" /> の BER エンコードが異なっている場合は <see langword="true" />、それ以外の場合は <see langword="false" />。</returns>
    </member>
    <member name="M:System.Formats.Asn1.Asn1Tag.ToString">
      <summary vsli:raw="Provides a text representation of this tag suitable for debugging.">デバッグに適したこのタグのテキスト表現を指定します。</summary>
      <returns vsli:raw="A text representation of this tag suitable for debugging.">デバッグに適したこのタグのテキスト表現。</returns>
    </member>
    <member name="M:System.Formats.Asn1.Asn1Tag.TryDecode(System.ReadOnlySpan{System.Byte},System.Formats.Asn1.Asn1Tag@,System.Int32@)">
      <summary vsli:raw="Attempts to read a BER-encoded tag which starts at &lt;paramref name=&quot;source&quot; /&gt;.">
        <paramref name="source" /> で始まる、BER でエンコードされたタグの読み取りを試みます。</summary>
      <param name="source" vsli:raw="The read only byte sequence whose beginning is a BER-encoded tag.">先頭が BER でエンコードされたタグである読み取り専用のバイト シーケンス。</param>
      <param name="tag" vsli:raw="The decoded tag.">デコードされたタグ。</param>
      <param name="bytesConsumed" vsli:raw="When this method returns, contains the number of bytes that contributed to the encoded tag, 0 on failure. This parameter is treated as uninitialized.">このメソッドの戻り値には、エンコードされたタグに提供されたバイト数 (失敗した場合は 0) が含まれます。 このパラメーターは初期化前として処理されます。</param>
      <returns vsli:raw="&lt;see langword=&quot;true&quot; /&gt; if a tag was correctly decoded; otherwise, &lt;see langword=&quot;false&quot; /&gt;.">タグが正しくデコードされた場合は <see langword="true" />、それ以外の場合は <see langword="false" />。</returns>
    </member>
    <member name="M:System.Formats.Asn1.Asn1Tag.TryEncode(System.Span{System.Byte},System.Int32@)">
      <summary vsli:raw="Attempts to write the BER-encoded form of this tag to &lt;paramref name=&quot;destination&quot; /&gt;.">このタグの BER でエンコードされた形式の <paramref name="destination" /> への書き込みを試みます。</summary>
      <param name="destination" vsli:raw="The start of where the encoded tag should be written.">エンコードされたタグの書き込み先の開始位置。</param>
      <param name="bytesWritten" vsli:raw="Receives the value from &lt;see cref=&quot;M:System.Formats.Asn1.Asn1Tag.CalculateEncodedSize&quot; /&gt; on success, 0 on failure.">成功した場合は <see cref="M:System.Formats.Asn1.Asn1Tag.CalculateEncodedSize" /> から値を受け取り、失敗した場合は 0 を受け取ります。</param>
      <returns vsli:raw="&lt;see langword=&quot;false&quot; /&gt; if &lt;paramref name=&quot;destination&quot; /&gt;.&lt;see cref=&quot;P:System.Span`1.Length&quot; /&gt; &amp;lt; &lt;see cref=&quot;M:System.Formats.Asn1.Asn1Tag.CalculateEncodedSize&quot; /&gt;(), &lt;see langword=&quot;true&quot; /&gt; otherwise.">
        <paramref name="destination" /> の場合は <see langword="false" />。<see cref="P:System.Span`1.Length" /> それ以外の場合は &lt; <see cref="M:System.Formats.Asn1.Asn1Tag.CalculateEncodedSize" />(), <see langword="true" />。</returns>
    </member>
    <member name="P:System.Formats.Asn1.Asn1Tag.IsConstructed">
      <summary vsli:raw="Indicates if the tag represents a constructed encoding (&lt;see langword=&quot;true&quot; /&gt;), or a primitive encoding (&lt;see langword=&quot;false&quot; /&gt;).">タグが構築されたエンコード (<see langword="true" />)、またはプリミティブ エンコード (<see langword="false" />) を表しているかどうかを示します。</summary>
    </member>
    <member name="P:System.Formats.Asn1.Asn1Tag.TagClass">
      <summary vsli:raw="The tag class to which this tag belongs.">このタグが属するタグ クラス。</summary>
    </member>
    <member name="P:System.Formats.Asn1.Asn1Tag.TagValue">
      <summary vsli:raw="The numeric value for this tag.">このタグの数値。</summary>
    </member>
    <member name="T:System.Formats.Asn1.AsnContentException">
      <summary vsli:raw="The exception that is thrown when an encoded ASN.1 value cannot be successfully decoded.">エンコードされた ASN.1 値を正常にデコードできない場合にスローされる例外。</summary>
    </member>
    <member name="M:System.Formats.Asn1.AsnContentException.#ctor">
      <summary vsli:raw="Initializes a new instance of the &lt;see cref=&quot;T:System.Formats.Asn1.AsnContentException&quot; /&gt; class, using the default message.">既定のメッセージを使用して <see cref="T:System.Formats.Asn1.AsnContentException" /> クラスの新しいインスタンスを初期化します。</summary>
    </member>
    <member name="M:System.Formats.Asn1.AsnContentException.#ctor(System.Runtime.Serialization.SerializationInfo,System.Runtime.Serialization.StreamingContext)">
      <summary vsli:raw="Initializes a new instance of the &lt;see cref=&quot;T:System.Formats.Asn1.AsnContentException&quot; /&gt; class with serialized data.">シリアル化したデータを使用して、<see cref="T:System.Formats.Asn1.AsnContentException" /> クラスの新しいインスタンスを初期化します。</summary>
      <param name="info" vsli:raw="The object that holds the serialized object data.">シリアル化されたオブジェクト データを保持するオブジェクト。</param>
      <param name="context" vsli:raw="The contextual information about the source or destination.">転送元または転送先に関するコンテキスト情報。</param>
    </member>
    <member name="M:System.Formats.Asn1.AsnContentException.#ctor(System.String)">
      <summary vsli:raw="Initializes a new instance of the &lt;see cref=&quot;T:System.Formats.Asn1.AsnContentException&quot; /&gt; class, using the provided message.">提供されたメッセージを使用して <see cref="T:System.Formats.Asn1.AsnContentException" /> クラスの新しいインスタンスを初期化します。</summary>
      <param name="message" vsli:raw="The error message that explains the reason for the exception.">例外の原因を説明するエラー メッセージ。</param>
    </member>
    <member name="M:System.Formats.Asn1.AsnContentException.#ctor(System.String,System.Exception)">
      <summary vsli:raw="Initializes a new instance of the &lt;see cref=&quot;T:System.Formats.Asn1.AsnContentException&quot; /&gt; class, using the provided message and exception that is the cause of this exception.">この例外の原因となった、提供されたメッセージと例外を使用して <see cref="T:System.Formats.Asn1.AsnContentException" /> クラスの新しいインスタンスを初期化します。</summary>
      <param name="message" vsli:raw="The error message that explains the reason for the exception.">例外の原因を説明するエラー メッセージ。</param>
      <param name="inner" vsli:raw="The exception that is the cause of the current exception.">現在の例外の原因となった例外。</param>
    </member>
    <member name="T:System.Formats.Asn1.AsnDecoder">
      <summary vsli:raw="Provides stateless methods for decoding BER-encoded, CER-encoded, and DER-encoded ASN.1 data.">BER、CER、または DER でエンコードされた ASN.1 データをデコードするためのステートレス メソッドを提供します。</summary>
    </member>
    <member name="M:System.Formats.Asn1.AsnDecoder.ReadBitString(System.ReadOnlySpan{System.Byte},System.Formats.Asn1.AsnEncodingRules,System.Int32@,System.Int32@,System.Nullable{System.Formats.Asn1.Asn1Tag})">
      <summary vsli:raw="Reads a Bit String value from &lt;paramref name=&quot;source&quot; /&gt; with a specified tag under the specified encoding rules, returning the contents in a new array.">指定したエンコード規則に基づいて、指定したタグを使用を持つ <paramref name="source" /> からビット文字列値を読み取り、新しい配列でコンテンツを返します。</summary>
      <param name="source" vsli:raw="The buffer containing encoded data.">エンコードされたデータを含むバッファー。</param>
      <param name="ruleSet" vsli:raw="The encoding constraints to use when interpreting the data.">データを解釈するときに使用するエンコード制約。</param>
      <param name="unusedBitCount" vsli:raw="On success, receives the number of bits in the last byte which were reported as &quot;unused&quot; by the writer.&#xA;               This parameter is treated as uninitialized.">成功すると、ライターによって "未使用" として報告された最後のバイトのビット数を受け取ります。
このパラメーターは初期化前として処理されます。</param>
      <param name="bytesConsumed" vsli:raw="When this method returns, the total number of bytes for the encoded value.&#xA;               This parameter is treated as uninitialized.">このメソッドから制御が戻るときに、エンコードされた値の合計バイト数。
このパラメーターは初期化前として処理されます。</param>
      <param name="expectedTag" vsli:raw="The tag to check for before reading, or &lt;see langword=&quot;null&quot; /&gt; for the default tag (Universal 3).">読み取る前にチェックするタグ、または既定のタグ (Universal 3) の場合は <see langword="null" />。</param>
      <exception cref="T:System.ArgumentOutOfRangeException" vsli:raw="&lt;paramref name=&quot;ruleSet&quot; /&gt; is not defined.">
        <paramref name="ruleSet" /> が定義されていません。</exception>
      <exception cref="T:System.Formats.Asn1.AsnContentException" vsli:raw="The next value does not have the correct tag.&#xA;&#xA;-or-&#xA;&#xA;The length encoding is not valid under the current encoding rules.&#xA;&#xA;-or-&#xA;&#xA;The contents are not valid under the current encoding rules.">次の値には、正しいタグがありません。
-または- 現在のエンコード規則では、長さのエンコードが無効です。
-または- 現在のエンコード規則では、コンテンツが有効ではありません。</exception>
      <exception cref="T:System.ArgumentException" vsli:raw="&lt;paramref name=&quot;expectedTag&quot; /&gt;.&lt;see cref=&quot;P:System.Formats.Asn1.Asn1Tag.TagClass&quot; /&gt; is &lt;see cref=&quot;F:System.Formats.Asn1.TagClass.Universal&quot; /&gt;, but &lt;paramref name=&quot;expectedTag&quot; /&gt;.&lt;see cref=&quot;P:System.Formats.Asn1.Asn1Tag.TagValue&quot; /&gt; is not correct for the method.">
        <paramref name="expectedTag" />.<see cref="P:System.Formats.Asn1.Asn1Tag.TagClass" /> は <see cref="F:System.Formats.Asn1.TagClass.Universal" /> ですが、<paramref name="expectedTag" /> です。<see cref="P:System.Formats.Asn1.Asn1Tag.TagValue" /> は、メソッドに対して正しくありません。</exception>
      <returns vsli:raw="An array containing the contents of the Bit String value.">ビット文字列値のコンテンツを含む配列。</returns>
    </member>
    <member name="M:System.Formats.Asn1.AsnDecoder.ReadBoolean(System.ReadOnlySpan{System.Byte},System.Formats.Asn1.AsnEncodingRules,System.Int32@,System.Nullable{System.Formats.Asn1.Asn1Tag})">
      <summary vsli:raw="Reads a Boolean value from &lt;paramref name=&quot;source&quot; /&gt; with a specified tag under the specified encoding rules.">指定したエンコード規則に基づいて、指定したタグを持つ <paramref name="source" /> からブール値を読み取ります。</summary>
      <param name="source" vsli:raw="The buffer containing encoded data.">エンコードされたデータを含むバッファー。</param>
      <param name="ruleSet" vsli:raw="The encoding constraints to use when interpreting the data.">データを解釈するときに使用するエンコード制約。</param>
      <param name="bytesConsumed" vsli:raw="When this method returns, the total number of bytes for the encoded value.&#xA;               This parameter is treated as uninitialized.">このメソッドから制御が戻るときに、エンコードされた値の合計バイト数。
このパラメーターは初期化前として処理されます。</param>
      <param name="expectedTag" vsli:raw="The tag to check for before reading, or &lt;see langword=&quot;null&quot; /&gt; for the default tag (Universal 1).">読み取る前にチェックするタグ、または既定のタグ (Universal 1) の場合は <see langword="null" />。</param>
      <exception cref="T:System.ArgumentOutOfRangeException" vsli:raw="&lt;paramref name=&quot;ruleSet&quot; /&gt; is not defined.">
        <paramref name="ruleSet" /> が定義されていません。</exception>
      <exception cref="T:System.Formats.Asn1.AsnContentException" vsli:raw="The next value does not have the correct tag.&#xA;&#xA;-or-&#xA;&#xA;The length encoding is not valid under the current encoding rules.&#xA;&#xA;-or-&#xA;&#xA;The contents are not valid under the current encoding rules.">次の値には、正しいタグがありません。
-または- 現在のエンコード規則では、長さのエンコードが無効です。
-または- 現在のエンコード規則では、コンテンツが有効ではありません。</exception>
      <exception cref="T:System.ArgumentException" vsli:raw="&lt;paramref name=&quot;expectedTag&quot; /&gt;.&lt;see cref=&quot;P:System.Formats.Asn1.Asn1Tag.TagClass&quot; /&gt; is &lt;see cref=&quot;F:System.Formats.Asn1.TagClass.Universal&quot; /&gt;, but &lt;paramref name=&quot;expectedTag&quot; /&gt;.&lt;see cref=&quot;P:System.Formats.Asn1.Asn1Tag.TagValue&quot; /&gt; is not correct for the method.">
        <paramref name="expectedTag" />.<see cref="P:System.Formats.Asn1.Asn1Tag.TagClass" /> は <see cref="F:System.Formats.Asn1.TagClass.Universal" /> ですが、<paramref name="expectedTag" /> です。<see cref="P:System.Formats.Asn1.Asn1Tag.TagValue" /> は、メソッドに対して正しくありません。</exception>
      <returns vsli:raw="The decoded value.">デコードされた値。</returns>
    </member>
    <member name="M:System.Formats.Asn1.AsnDecoder.ReadCharacterString(System.ReadOnlySpan{System.Byte},System.Formats.Asn1.AsnEncodingRules,System.Formats.Asn1.UniversalTagNumber,System.Int32@,System.Nullable{System.Formats.Asn1.Asn1Tag})">
      <summary vsli:raw="Reads the next value as character string with the specified tag and encoding type, returning the decoded string.">指定したタグとエンコードの種類を持つ文字列として次の値を読み取り、デコードされた文字列を返します。</summary>
      <param name="source" vsli:raw="The buffer containing encoded data.">エンコードされたデータを含むバッファー。</param>
      <param name="ruleSet" vsli:raw="The encoding constraints to use when interpreting the data.">データを解釈するときに使用するエンコード制約。</param>
      <param name="encodingType" vsli:raw="One of the enumeration values which represents the value type to process.">処理する値の型を表す列挙値の 1 つ。</param>
      <param name="bytesConsumed" vsli:raw="When this method returns, the total number of bytes for the encoded value.&#xA;               This parameter is treated as uninitialized.">このメソッドから制御が戻るときに、エンコードされた値の合計バイト数。
このパラメーターは初期化前として処理されます。</param>
      <param name="expectedTag" vsli:raw="The tag to check for before reading, or &lt;see langword=&quot;null&quot; /&gt; for the universal tag that is appropriate to the requested encoding type.">読み取る前に確認するタグ、または要求されたエンコードの種類に適したユニバーサル タグの場合は <see langword="null" />。</param>
      <exception cref="T:System.ArgumentOutOfRangeException" vsli:raw="&lt;paramref name=&quot;ruleSet&quot; /&gt; is not defined.&#xA;&#xA;-or-&#xA;&#xA;&lt;paramref name=&quot;encodingType&quot; /&gt; is not a known character string type.">
        <paramref name="ruleSet" /> が定義されていません。
-または- <paramref name="encodingType" /> は既知の文字列型ではありません。</exception>
      <exception cref="T:System.Formats.Asn1.AsnContentException" vsli:raw="The next value does not have the correct tag.&#xA;&#xA;-or-&#xA;&#xA;The length encoding is not valid under the current encoding rules.&#xA;&#xA;-or-&#xA;&#xA;The contents are not valid under the current encoding rules.&#xA;&#xA;-or-&#xA;&#xA;The string did not successfully decode.">次の値には、正しいタグがありません。
-または- 現在のエンコード規則では、長さのエンコードが無効です。
-または- 現在のエンコード規則では、コンテンツが有効ではありません。
-または- 文字列が正常にデコードされませんでした。</exception>
      <exception cref="T:System.ArgumentException" vsli:raw="&lt;paramref name=&quot;expectedTag&quot; /&gt;.&lt;see cref=&quot;P:System.Formats.Asn1.Asn1Tag.TagClass&quot; /&gt; is &lt;see cref=&quot;F:System.Formats.Asn1.TagClass.Universal&quot; /&gt;, but &lt;paramref name=&quot;expectedTag&quot; /&gt;.&lt;see cref=&quot;P:System.Formats.Asn1.Asn1Tag.TagValue&quot; /&gt; is not the same as &lt;paramref name=&quot;encodingType&quot; /&gt;.">
        <paramref name="expectedTag" />.<see cref="P:System.Formats.Asn1.Asn1Tag.TagClass" /> は <see cref="F:System.Formats.Asn1.TagClass.Universal" /> ですが、<paramref name="expectedTag" /> です。<see cref="P:System.Formats.Asn1.Asn1Tag.TagValue" /> は、<paramref name="encodingType" /> と同じではありません。</exception>
      <returns vsli:raw="The decoded value.">デコードされた値。</returns>
    </member>
    <member name="M:System.Formats.Asn1.AsnDecoder.ReadEncodedValue(System.ReadOnlySpan{System.Byte},System.Formats.Asn1.AsnEncodingRules,System.Int32@,System.Int32@,System.Int32@)">
      <summary vsli:raw="Locates the contents range for the encoded value at the beginning of the &lt;paramref name=&quot;source&quot; /&gt; buffer using the specified encoding rules.">指定したエンコード規則を使用して、<paramref name="source" /> バッファーの先頭にあるエンコードされた値のコンテンツ範囲を検索します。</summary>
      <param name="source" vsli:raw="The buffer containing encoded data.">エンコードされたデータを含むバッファー。</param>
      <param name="ruleSet" vsli:raw="The encoding constraints to use when interpreting the data.">データを解釈するときに使用するエンコード制約。</param>
      <param name="contentOffset" vsli:raw="When this method returns, the offset of the content payload relative to the start of &lt;paramref name=&quot;source&quot; /&gt;.&#xA;              This parameter is treated as uninitialized.">このメソッドから制御が戻るときの、<paramref name="source" /> の開始を基準とするコンテンツ ペイロードのオフセット。
このパラメーターは初期化前として処理されます。</param>
      <param name="contentLength" vsli:raw="When this method returns, the number of bytes in the content payload (which may be 0).&#xA;              This parameter is treated as uninitialized.">このメソッドから制御が戻るときの、コンテンツ ペイロードのバイト数 (0 の場合もあります)。
このパラメーターは初期化前として処理されます。</param>
      <param name="bytesConsumed" vsli:raw="When this method returns, the total number of bytes for the encoded value.&#xA;              This parameter is treated as uninitialized.">このメソッドから制御が戻るときに、エンコードされた値の合計バイト数。
このパラメーターは初期化前として処理されます。</param>
      <exception cref="T:System.ArgumentOutOfRangeException" vsli:raw="&lt;paramref name=&quot;ruleSet&quot; /&gt; is not defined.">
        <paramref name="ruleSet" /> が定義されていません。</exception>
      <exception cref="T:System.Formats.Asn1.AsnContentException" vsli:raw="&lt;paramref name=&quot;source&quot; /&gt; does not represent a value encoded under the specified encoding rules.">
        <paramref name="source" /> は、指定したエンコード規則に基づいてエンコードされた値を表していません。</exception>
      <returns vsli:raw="The tag identifying the content.">コンテンツを識別するタグ。</returns>
    </member>
    <member name="M:System.Formats.Asn1.AsnDecoder.ReadEnumeratedBytes(System.ReadOnlySpan{System.Byte},System.Formats.Asn1.AsnEncodingRules,System.Int32@,System.Nullable{System.Formats.Asn1.Asn1Tag})">
      <summary vsli:raw="Reads an Enumerated value from &lt;paramref name=&quot;source&quot; /&gt; with a specified tag under the specified encoding rules, returning the contents as a slice of the buffer.">指定したエンコード規則に従って、指定したタグを持つ <paramref name="source" /> から列挙値を読み取り、その内容をバッファーのスライスとして返します。</summary>
      <param name="source" vsli:raw="The buffer containing encoded data.">エンコードされたデータを含むバッファー。</param>
      <param name="ruleSet" vsli:raw="The encoding constraints to use when interpreting the data.">データを解釈するときに使用するエンコード制約。</param>
      <param name="bytesConsumed" vsli:raw="When this method returns, the total number of bytes for the encoded value.&#xA;               This parameter is treated as uninitialized.">このメソッドから制御が戻るときに、エンコードされた値の合計バイト数。
このパラメーターは初期化前として処理されます。</param>
      <param name="expectedTag" vsli:raw="The tag to check for before reading, or &lt;see langword=&quot;null&quot; /&gt; for the default tag (Universal 10).">読み取る前にチェックするタグ、または既定のタグ (Universal 10) の場合は <see langword="null" />。</param>
      <exception cref="T:System.ArgumentOutOfRangeException" vsli:raw="&lt;paramref name=&quot;ruleSet&quot; /&gt; is not defined.">
        <paramref name="ruleSet" /> が定義されていません。</exception>
      <exception cref="T:System.Formats.Asn1.AsnContentException" vsli:raw="The next value does not have the correct tag.&#xA;&#xA;-or-&#xA;&#xA;The length encoding is not valid under the current encoding rules.&#xA;&#xA;-or-&#xA;&#xA;The contents are not valid under the current encoding rules.">次の値には、正しいタグがありません。
-または- 現在のエンコード規則では、長さのエンコードが無効です。
-または- 現在のエンコード規則では、コンテンツが有効ではありません。</exception>
      <exception cref="T:System.ArgumentException" vsli:raw="&lt;paramref name=&quot;expectedTag&quot; /&gt;.&lt;see cref=&quot;P:System.Formats.Asn1.Asn1Tag.TagClass&quot; /&gt; is &lt;see cref=&quot;F:System.Formats.Asn1.TagClass.Universal&quot; /&gt;, but &lt;paramref name=&quot;expectedTag&quot; /&gt;.&lt;see cref=&quot;P:System.Formats.Asn1.Asn1Tag.TagValue&quot; /&gt; is not correct for the method.">
        <paramref name="expectedTag" />.<see cref="P:System.Formats.Asn1.Asn1Tag.TagClass" /> は <see cref="F:System.Formats.Asn1.TagClass.Universal" /> ですが、<paramref name="expectedTag" /> です。<see cref="P:System.Formats.Asn1.Asn1Tag.TagValue" /> は、メソッドに対して正しくありません。</exception>
      <returns vsli:raw="The slice of the buffer containing the bytes of the Enumerated value, in signed big-endian form.">符号付きビッグ エンディアン形式の列挙値のバイトを格納しているバッファーのスライス。</returns>
    </member>
    <member name="M:System.Formats.Asn1.AsnDecoder.ReadEnumeratedValue(System.ReadOnlySpan{System.Byte},System.Formats.Asn1.AsnEncodingRules,System.Type,System.Int32@,System.Nullable{System.Formats.Asn1.Asn1Tag})">
      <summary vsli:raw="Reads an Enumerated from &lt;paramref name=&quot;source&quot; /&gt; with a specified tag under the specified encoding rules, converting it to the non-[&lt;see cref=&quot;T:System.FlagsAttribute&quot; /&gt;] enum specified by &lt;paramref name=&quot;enumType&quot; /&gt;.">指定したエンコード規則に基づいて、指定したタグを持つ <paramref name="source" /> から列挙値を読み取り、<paramref name="enumType" /> によって指定された非 [<see cref="T:System.FlagsAttribute" />] 列挙型に変換します。</summary>
      <param name="source" vsli:raw="The buffer containing encoded data.">エンコードされたデータを含むバッファー。</param>
      <param name="ruleSet" vsli:raw="The encoding constraints to use when interpreting the data.">データを解釈するときに使用するエンコード制約。</param>
      <param name="enumType" vsli:raw="Type object representing the destination type.">ターゲットの型を表す型オブジェクト。</param>
      <param name="bytesConsumed" vsli:raw="When this method returns, the total number of bytes for the encoded value.&#xA;               This parameter is treated as uninitialized.">このメソッドから制御が戻るときに、エンコードされた値の合計バイト数。
このパラメーターは初期化前として処理されます。</param>
      <param name="expectedTag" vsli:raw="The tag to check for before reading, or &lt;see langword=&quot;null&quot; /&gt; for the default tag (Universal 10).">読み取る前にチェックするタグ、または既定のタグ (Universal 10) の場合は <see langword="null" />。</param>
      <exception cref="T:System.Formats.Asn1.AsnContentException" vsli:raw="The next value does not have the correct tag.&#xA;&#xA;-or-&#xA;&#xA;The length encoding is not valid under the current encoding rules.&#xA;&#xA;-or-&#xA;&#xA;The contents are not valid under the current encoding rules.&#xA;&#xA;-or-&#xA;&#xA;The encoded value is too big to fit in a &lt;paramref name=&quot;enumType&quot; /&gt; value.">次の値には、正しいタグがありません。
-または- 現在のエンコード規則では、長さのエンコードが無効です。
-または- 現在のエンコード規則では、コンテンツが有効ではありません。
-または- エンコードされた値が大きすぎて <paramref name="enumType" /> 値に収まりません。</exception>
      <exception cref="T:System.ArgumentException" vsli:raw="&lt;paramref name=&quot;enumType&quot; /&gt; is not an enum type.&#xA;&#xA;-or-&#xA;&#xA;&lt;paramref name=&quot;enumType&quot; /&gt; was declared with &lt;see cref=&quot;T:System.FlagsAttribute&quot; /&gt;.&#xA;&#xA;-or-&#xA;&#xA;&lt;paramref name=&quot;enumType&quot; /&gt;.&lt;see cref=&quot;P:System.Formats.Asn1.Asn1Tag.TagClass&quot; /&gt; is &lt;see cref=&quot;F:System.Formats.Asn1.TagClass.Universal&quot; /&gt;, but &lt;paramref name=&quot;enumType&quot; /&gt;.&lt;see cref=&quot;P:System.Formats.Asn1.Asn1Tag.TagValue&quot; /&gt; is not correct for the method.">
        <paramref name="enumType" /> は列挙型ではありません。
-または- <paramref name="enumType" /> が <see cref="T:System.FlagsAttribute" /> で宣言されました。
-または- <paramref name="enumType" />。<see cref="P:System.Formats.Asn1.Asn1Tag.TagClass" /> は <see cref="F:System.Formats.Asn1.TagClass.Universal" /> ですが、<paramref name="enumType" /> です。<see cref="P:System.Formats.Asn1.Asn1Tag.TagValue" /> は、メソッドに対して正しくありません。</exception>
      <exception cref="T:System.ArgumentNullException" vsli:raw="&lt;paramref name=&quot;enumType&quot; /&gt; is &lt;see langword=&quot;null&quot; /&gt;.">
        <paramref name="enumType" /> が <see langword="null" />です。</exception>
      <returns vsli:raw="The Enumerated value converted to a &lt;paramref name=&quot;enumType&quot; /&gt;.">
        <paramref name="enumType" /> に変換された列挙値。</returns>
    </member>
    <member name="M:System.Formats.Asn1.AsnDecoder.ReadEnumeratedValue``1(System.ReadOnlySpan{System.Byte},System.Formats.Asn1.AsnEncodingRules,System.Int32@,System.Nullable{System.Formats.Asn1.Asn1Tag})">
      <summary vsli:raw="Reads an Enumerated from &lt;paramref name=&quot;source&quot; /&gt; with a specified tag under the specified encoding rules, converting it to the non-[&lt;see cref=&quot;T:System.FlagsAttribute&quot; /&gt;] enum specified by &lt;typeparamref name=&quot;TEnum&quot; /&gt;.">指定したエンコード規則に基づいて、指定したタグを持つ <paramref name="source" /> から列挙値を読み取り、<typeparamref name="TEnum" /> によって指定された非 [<see cref="T:System.FlagsAttribute" />] 列挙型に変換します。</summary>
      <param name="source" vsli:raw="The buffer containing encoded data.">エンコードされたデータを含むバッファー。</param>
      <param name="ruleSet" vsli:raw="The encoding constraints to use when interpreting the data.">データを解釈するときに使用するエンコード制約。</param>
      <param name="bytesConsumed" vsli:raw="When this method returns, the total number of bytes for the encoded value.&#xA;               This parameter is treated as uninitialized.">このメソッドから制御が戻るときに、エンコードされた値の合計バイト数。
このパラメーターは初期化前として処理されます。</param>
      <param name="expectedTag" vsli:raw="The tag to check for before reading, or &lt;see langword=&quot;null&quot; /&gt; for the default tag (Universal 10).">読み取る前にチェックするタグ、または既定のタグ (Universal 10) の場合は <see langword="null" />。</param>
      <typeparam name="TEnum" vsli:raw="Destination enum type.">ターゲット列挙型</typeparam>
      <exception cref="T:System.ArgumentOutOfRangeException" vsli:raw="&lt;paramref name=&quot;ruleSet&quot; /&gt; is not defined.">
        <paramref name="ruleSet" /> が定義されていません。</exception>
      <exception cref="T:System.Formats.Asn1.AsnContentException" vsli:raw="The next value does not have the correct tag.&#xA;&#xA;-or-&#xA;&#xA;The length encoding is not valid under the current encoding rules.&#xA;&#xA;-or-&#xA;&#xA;The contents are not valid under the current encoding rules.&#xA;&#xA;-or-&#xA;&#xA;The encoded value is too big to fit in a &lt;paramref name=&quot;enumType&quot; /&gt; value.">次の値には、正しいタグがありません。
-または- 現在のエンコード規則では、長さのエンコードが無効です。
-または- 現在のエンコード規則では、コンテンツが有効ではありません。
-または- エンコードされた値が大きすぎて <typeparamref name="TEnum" /> 値に収まりません。</exception>
      <exception cref="T:System.ArgumentException" vsli:raw="&lt;typeparamref name=&quot;TEnum&quot; /&gt; is not an enum type.&#xA;&#xA;-or-&#xA;&#xA;&lt;typeparamref name=&quot;TEnum&quot; /&gt; was declared with &lt;see cref=&quot;T:System.FlagsAttribute&quot; /&gt;.&#xA;&#xA;-or-&#xA;&#xA;&lt;paramref name=&quot;expectedTag&quot; /&gt;.&lt;see cref=&quot;P:System.Formats.Asn1.Asn1Tag.TagClass&quot; /&gt; is &lt;see cref=&quot;F:System.Formats.Asn1.TagClass.Universal&quot; /&gt;, but &lt;paramref name=&quot;expectedTag&quot; /&gt;.&lt;see cref=&quot;P:System.Formats.Asn1.Asn1Tag.TagValue&quot; /&gt; is not correct for the method.">
        <typeparamref name="TEnum" /> は列挙型ではありません。
-または- <typeparamref name="TEnum" /> が <see cref="T:System.FlagsAttribute" /> で宣言されました。
-または- <paramref name="expectedTag" />。<see cref="P:System.Formats.Asn1.Asn1Tag.TagClass" /> は <see cref="F:System.Formats.Asn1.TagClass.Universal" /> ですが、<paramref name="expectedTag" /> です。<see cref="P:System.Formats.Asn1.Asn1Tag.TagValue" /> は、メソッドに対して正しくありません。</exception>
      <returns vsli:raw="The Enumerated value converted to a &lt;typeparamref name=&quot;TEnum&quot; /&gt;.">
        <typeparamref name="TEnum" /> に変換された列挙値。</returns>
    </member>
    <member name="M:System.Formats.Asn1.AsnDecoder.ReadGeneralizedTime(System.ReadOnlySpan{System.Byte},System.Formats.Asn1.AsnEncodingRules,System.Int32@,System.Nullable{System.Formats.Asn1.Asn1Tag})">
      <summary vsli:raw="Reads a GeneralizedTime value from &lt;paramref name=&quot;source&quot; /&gt; with a specified tag under the specified encoding rules.">指定したエンコード規則に基づいて、指定したタグを持つ <paramref name="source" /> から GeneralizedTime 値を読み取ります。</summary>
      <param name="source" vsli:raw="The buffer containing encoded data.">エンコードされたデータを含むバッファー。</param>
      <param name="ruleSet" vsli:raw="The encoding constraints to use when interpreting the data.">データを解釈するときに使用するエンコード制約。</param>
      <param name="bytesConsumed" vsli:raw="When this method returns, the total number of bytes for the encoded value.&#xA;               This parameter is treated as uninitialized.">このメソッドから制御が戻るときに、エンコードされた値の合計バイト数。
このパラメーターは初期化前として処理されます。</param>
      <param name="expectedTag" vsli:raw="The tag to check for before reading, or &lt;see langword=&quot;null&quot; /&gt; for the default tag (Universal 24).">読み取る前にチェックするタグ、または既定のタグ (Universal 24) の場合は <see langword="null" />。</param>
      <exception cref="T:System.ArgumentOutOfRangeException" vsli:raw="&lt;paramref name=&quot;ruleSet&quot; /&gt; is not defined.">
        <paramref name="ruleSet" /> が定義されていません。</exception>
      <exception cref="T:System.Formats.Asn1.AsnContentException" vsli:raw="The next value does not have the correct tag.&#xA;&#xA;-or-&#xA;&#xA;The length encoding is not valid under the current encoding rules.&#xA;&#xA;-or-&#xA;&#xA;The contents are not valid under the current encoding rules.">次の値には、正しいタグがありません。
-または- 現在のエンコード規則では、長さのエンコードが無効です。
-または- 現在のエンコード規則では、コンテンツが有効ではありません。</exception>
      <exception cref="T:System.ArgumentException" vsli:raw="&lt;paramref name=&quot;expectedTag&quot; /&gt;.&lt;see cref=&quot;P:System.Formats.Asn1.Asn1Tag.TagClass&quot; /&gt; is &lt;see cref=&quot;F:System.Formats.Asn1.TagClass.Universal&quot; /&gt;, but &lt;paramref name=&quot;expectedTag&quot; /&gt;.&lt;see cref=&quot;P:System.Formats.Asn1.Asn1Tag.TagValue&quot; /&gt; is not correct for the method.">
        <paramref name="expectedTag" />.<see cref="P:System.Formats.Asn1.Asn1Tag.TagClass" /> は <see cref="F:System.Formats.Asn1.TagClass.Universal" /> ですが、<paramref name="expectedTag" /> です。<see cref="P:System.Formats.Asn1.Asn1Tag.TagValue" /> は、メソッドに対して正しくありません。</exception>
      <returns vsli:raw="The decoded value.">デコードされた値。</returns>
    </member>
    <member name="M:System.Formats.Asn1.AsnDecoder.ReadInteger(System.ReadOnlySpan{System.Byte},System.Formats.Asn1.AsnEncodingRules,System.Int32@,System.Nullable{System.Formats.Asn1.Asn1Tag})">
      <summary vsli:raw="Reads an Integer value from &lt;paramref name=&quot;source&quot; /&gt; with a specified tag under the specified encoding rules.">指定したエンコード規則に基づいて、指定したタグを持つ <paramref name="source" /> から整数値を読み取ります。</summary>
      <param name="source" vsli:raw="The buffer containing encoded data.">エンコードされたデータを含むバッファー。</param>
      <param name="ruleSet" vsli:raw="The encoding constraints to use when interpreting the data.">データを解釈するときに使用するエンコード制約。</param>
      <param name="bytesConsumed" vsli:raw="When this method returns, the total number of bytes for the encoded value.&#xA;               This parameter is treated as uninitialized.">このメソッドから制御が戻るときに、エンコードされた値の合計バイト数。
このパラメーターは初期化前として処理されます。</param>
      <param name="expectedTag" vsli:raw="The tag to check for before reading, or &lt;see langword=&quot;null&quot; /&gt; for the default tag (Universal 2).">読み取る前にチェックするタグ、または既定のタグ (Universal 2) の場合は <see langword="null" />。</param>
      <exception cref="T:System.ArgumentOutOfRangeException" vsli:raw="&lt;paramref name=&quot;ruleSet&quot; /&gt; is not defined.">
        <paramref name="ruleSet" /> が定義されていません。</exception>
      <exception cref="T:System.Formats.Asn1.AsnContentException" vsli:raw="The next value does not have the correct tag.&#xA;&#xA;-or-&#xA;&#xA;The length encoding is not valid under the current encoding rules.&#xA;&#xA;-or-&#xA;&#xA;The contents are not valid under the current encoding rules.">次の値には、正しいタグがありません。
-または- 現在のエンコード規則では、長さのエンコードが無効です。
-または- 現在のエンコード規則では、コンテンツが有効ではありません。</exception>
      <exception cref="T:System.ArgumentException" vsli:raw="&lt;paramref name=&quot;expectedTag&quot; /&gt;.&lt;see cref=&quot;P:System.Formats.Asn1.Asn1Tag.TagClass&quot; /&gt; is &lt;see cref=&quot;F:System.Formats.Asn1.TagClass.Universal&quot; /&gt;, but &lt;paramref name=&quot;expectedTag&quot; /&gt;.&lt;see cref=&quot;P:System.Formats.Asn1.Asn1Tag.TagValue&quot; /&gt; is not correct for the method.">
        <paramref name="expectedTag" />.<see cref="P:System.Formats.Asn1.Asn1Tag.TagClass" /> は <see cref="F:System.Formats.Asn1.TagClass.Universal" /> ですが、<paramref name="expectedTag" /> です。<see cref="P:System.Formats.Asn1.Asn1Tag.TagValue" /> は、メソッドに対して正しくありません。</exception>
      <returns vsli:raw="The decoded numeric value.">デコードされた数値。</returns>
    </member>
    <member name="M:System.Formats.Asn1.AsnDecoder.ReadIntegerBytes(System.ReadOnlySpan{System.Byte},System.Formats.Asn1.AsnEncodingRules,System.Int32@,System.Nullable{System.Formats.Asn1.Asn1Tag})">
      <summary vsli:raw="Reads an Integer value from &lt;paramref name=&quot;source&quot; /&gt; with a specified tag under the specified encoding rules, returning the contents as a slice of the buffer.">指定したエンコード規則に従って、指定したタグを持つ <paramref name="source" /> から整数値を読み取り、その内容をバッファーのスライスとして返します。</summary>
      <param name="source" vsli:raw="The buffer containing encoded data.">エンコードされたデータを含むバッファー。</param>
      <param name="ruleSet" vsli:raw="The encoding constraints to use when interpreting the data.">データを解釈するときに使用するエンコード制約。</param>
      <param name="bytesConsumed" vsli:raw="When this method returns, the total number of bytes for the encoded value.&#xA;               This parameter is treated as uninitialized.">このメソッドから制御が戻るときに、エンコードされた値の合計バイト数。
このパラメーターは初期化前として処理されます。</param>
      <param name="expectedTag" vsli:raw="The tag to check for before reading, or &lt;see langword=&quot;null&quot; /&gt; for the default tag (Universal 2).">読み取る前にチェックするタグ、または既定のタグ (Universal 2) の場合は <see langword="null" />。</param>
      <exception cref="T:System.ArgumentOutOfRangeException" vsli:raw="&lt;paramref name=&quot;ruleSet&quot; /&gt; is not defined.">
        <paramref name="ruleSet" /> が定義されていません。</exception>
      <exception cref="T:System.Formats.Asn1.AsnContentException" vsli:raw="The next value does not have the correct tag.&#xA;&#xA;-or-&#xA;&#xA;The length encoding is not valid under the current encoding rules.&#xA;&#xA;-or-&#xA;&#xA;The contents are not valid under the current encoding rules.">次の値には、正しいタグがありません。
-または- 現在のエンコード規則では、長さのエンコードが無効です。
-または- 現在のエンコード規則では、コンテンツが有効ではありません。</exception>
      <exception cref="T:System.ArgumentException" vsli:raw="&lt;paramref name=&quot;expectedTag&quot; /&gt;.&lt;see cref=&quot;P:System.Formats.Asn1.Asn1Tag.TagClass&quot; /&gt; is &lt;see cref=&quot;F:System.Formats.Asn1.TagClass.Universal&quot; /&gt;, but &lt;paramref name=&quot;expectedTag&quot; /&gt;.&lt;see cref=&quot;P:System.Formats.Asn1.Asn1Tag.TagValue&quot; /&gt; is not correct for the method.">
        <paramref name="expectedTag" />.<see cref="P:System.Formats.Asn1.Asn1Tag.TagClass" /> は <see cref="F:System.Formats.Asn1.TagClass.Universal" /> ですが、<paramref name="expectedTag" /> です。<see cref="P:System.Formats.Asn1.Asn1Tag.TagValue" /> は、メソッドに対して正しくありません。</exception>
      <returns vsli:raw="The slice of the buffer containing the bytes of the Integer value, in signed big-endian form.">符号付きビッグ エンディアン形式の整数値のバイトを格納しているバッファーのスライス。</returns>
    </member>
    <member name="M:System.Formats.Asn1.AsnDecoder.ReadNamedBitList(System.ReadOnlySpan{System.Byte},System.Formats.Asn1.AsnEncodingRules,System.Int32@,System.Nullable{System.Formats.Asn1.Asn1Tag})">
      <summary vsli:raw="Reads a NamedBitList from &lt;paramref name=&quot;source&quot; /&gt; with a specified tag under the specified encoding rules.">指定したエンコード規則に基づいて、指定したタグを持つ <paramref name="source" /> から NamedBitList を読み取ります。</summary>
      <param name="source" vsli:raw="The buffer containing encoded data.">エンコードされたデータを含むバッファー。</param>
      <param name="ruleSet" vsli:raw="The encoding constraints to use when interpreting the data.">データを解釈するときに使用するエンコード制約。</param>
      <param name="bytesConsumed" vsli:raw="When this method returns, the total number of bytes for the encoded value.&#xA;               This parameter is treated as uninitialized.">このメソッドから制御が戻るときに、エンコードされた値の合計バイト数。
このパラメーターは初期化前として処理されます。</param>
      <param name="expectedTag" vsli:raw="The tag to check for before reading, or &lt;see langword=&quot;null&quot; /&gt; for the default tag (Universal 3).">読み取る前にチェックするタグ、または既定のタグ (Universal 3) の場合は <see langword="null" />。</param>
      <exception cref="T:System.ArgumentOutOfRangeException" vsli:raw="&lt;paramref name=&quot;ruleSet&quot; /&gt; is not defined.">
        <paramref name="ruleSet" /> が定義されていません。</exception>
      <exception cref="T:System.Formats.Asn1.AsnContentException" vsli:raw="The next value does not have the correct tag.&#xA;&#xA;-or-&#xA;&#xA;The length encoding is not valid under the current encoding rules.&#xA;&#xA;-or-&#xA;&#xA;The contents are not valid under the current encoding rules.">次の値には、正しいタグがありません。
-または- 現在のエンコード規則では、長さのエンコードが無効です。
-または- 現在のエンコード規則では、コンテンツが有効ではありません。</exception>
      <exception cref="T:System.ArgumentException" vsli:raw="&lt;paramref name=&quot;expectedTag&quot; /&gt;.&lt;see cref=&quot;P:System.Formats.Asn1.Asn1Tag.TagClass&quot; /&gt; is &lt;see cref=&quot;F:System.Formats.Asn1.TagClass.Universal&quot; /&gt;, but &lt;paramref name=&quot;expectedTag&quot; /&gt;.&lt;see cref=&quot;P:System.Formats.Asn1.Asn1Tag.TagValue&quot; /&gt; is not correct for the method.">
        <paramref name="expectedTag" />.<see cref="P:System.Formats.Asn1.Asn1Tag.TagClass" /> は <see cref="F:System.Formats.Asn1.TagClass.Universal" /> ですが、<paramref name="expectedTag" /> です。<see cref="P:System.Formats.Asn1.Asn1Tag.TagValue" /> は、メソッドに対して正しくありません。</exception>
      <returns vsli:raw="The bits from the encoded value.">エンコードされた値からのビット。</returns>
    </member>
    <member name="M:System.Formats.Asn1.AsnDecoder.ReadNamedBitListValue(System.ReadOnlySpan{System.Byte},System.Formats.Asn1.AsnEncodingRules,System.Type,System.Int32@,System.Nullable{System.Formats.Asn1.Asn1Tag})">
      <summary vsli:raw="Reads a NamedBitList from &lt;paramref name=&quot;source&quot; /&gt; with a specified tag under the specified encoding rules, converting it to the [&lt;see cref=&quot;T:System.FlagsAttribute&quot; /&gt;] enum specified by &lt;paramref name=&quot;flagsEnumType&quot; /&gt;.">指定したエンコード規則に基づいて、指定したタグを持つ <paramref name="source" /> から NamedBitList を読み取り、<paramref name="flagsEnumType" /> によって指定された [<see cref="T:System.FlagsAttribute" />] 列挙型に変換します。</summary>
      <param name="source" vsli:raw="The buffer containing encoded data.">エンコードされたデータを含むバッファー。</param>
      <param name="ruleSet" vsli:raw="The encoding constraints to use when interpreting the data.">データを解釈するときに使用するエンコード制約。</param>
      <param name="flagsEnumType" vsli:raw="Type object representing the destination type.">ターゲットの型を表す型オブジェクト。</param>
      <param name="bytesConsumed" vsli:raw="When this method returns, the total number of bytes for the encoded value.&#xA;               This parameter is treated as uninitialized.">このメソッドから制御が戻るときに、エンコードされた値の合計バイト数。
このパラメーターは初期化前として処理されます。</param>
      <param name="expectedTag" vsli:raw="The tag to check for before reading, or &lt;see langword=&quot;null&quot; /&gt; for the default tag (Universal 3).">読み取る前にチェックするタグ、または既定のタグ (Universal 3) の場合は <see langword="null" />。</param>
      <exception cref="T:System.ArgumentOutOfRangeException" vsli:raw="&lt;paramref name=&quot;ruleSet&quot; /&gt; is not defined.">
        <paramref name="ruleSet" /> が定義されていません。</exception>
      <exception cref="T:System.Formats.Asn1.AsnContentException" vsli:raw="The next value does not have the correct tag.&#xA;&#xA;-or-&#xA;&#xA;The length encoding is not valid under the current encoding rules.&#xA;&#xA;-or-&#xA;&#xA;The contents are not valid under the current encoding rules.&#xA;&#xA;-or-&#xA;&#xA;The encoded value is too big to fit in a &lt;paramref name=&quot;flagsEnumType&quot; /&gt; value.">次の値には、正しいタグがありません。
-または- 現在のエンコード規則では、長さのエンコードが無効です。
-または- 現在のエンコード規則では、コンテンツが有効ではありません。
-または- エンコードされた値が大きすぎて <paramref name="flagsEnumType" /> 値に収まりません。</exception>
      <exception cref="T:System.ArgumentException" vsli:raw="&lt;paramref name=&quot;flagsEnumType&quot; /&gt; is not an enum type.&#xA;&#xA;-or-&#xA;&#xA;&lt;paramref name=&quot;flagsEnumType&quot; /&gt; was not declared with &lt;see cref=&quot;T:System.FlagsAttribute&quot; /&gt;&#xA;&#xA;-or-&#xA;&#xA;&lt;paramref name=&quot;expectedTag&quot; /&gt;.&lt;see cref=&quot;P:System.Formats.Asn1.Asn1Tag.TagClass&quot; /&gt; is &lt;see cref=&quot;F:System.Formats.Asn1.TagClass.Universal&quot; /&gt;, but &lt;paramref name=&quot;expectedTag&quot; /&gt;.&lt;see cref=&quot;P:System.Formats.Asn1.Asn1Tag.TagValue&quot; /&gt; is not correct for the method.">
        <paramref name="flagsEnumType" /> は列挙型ではありません。
-または- <paramref name="flagsEnumType" /> が <see cref="T:System.FlagsAttribute" /> で宣言されていません。-または- <paramref name="expectedTag" />。<see cref="P:System.Formats.Asn1.Asn1Tag.TagClass" /> は <see cref="F:System.Formats.Asn1.TagClass.Universal" /> ですが、<paramref name="expectedTag" /> です。<see cref="P:System.Formats.Asn1.Asn1Tag.TagValue" /> は、メソッドに対して正しくありません。</exception>
      <exception cref="T:System.ArgumentNullException" vsli:raw="&lt;paramref name=&quot;flagsEnumType&quot; /&gt; is &lt;see langword=&quot;null&quot; /&gt;">
        <paramref name="flagsEnumType" /> が <see langword="null" /> である</exception>
      <returns vsli:raw="The NamedBitList value converted to a &lt;paramref name=&quot;flagsEnumType&quot; /&gt;.">
        <paramref name="flagsEnumType" /> に変換された NamedBitList 値。</returns>
    </member>
    <member name="M:System.Formats.Asn1.AsnDecoder.ReadNamedBitListValue``1(System.ReadOnlySpan{System.Byte},System.Formats.Asn1.AsnEncodingRules,System.Int32@,System.Nullable{System.Formats.Asn1.Asn1Tag})">
      <summary vsli:raw="Reads a NamedBitList from &lt;paramref name=&quot;source&quot; /&gt; with a specified tag under the specified encoding rules, converting it to the [&lt;see cref=&quot;T:System.FlagsAttribute&quot; /&gt;] enum specified by &lt;typeparamref name=&quot;TFlagsEnum&quot; /&gt;.">指定したエンコード規則に基づいて、指定したタグを持つ <paramref name="source" /> から NamedBitList を読み取り、<typeparamref name="TFlagsEnum" /> によって指定された [<see cref="T:System.FlagsAttribute" />] 列挙型に変換します。</summary>
      <param name="source" vsli:raw="The buffer containing encoded data.">エンコードされたデータを含むバッファー。</param>
      <param name="ruleSet" vsli:raw="The encoding constraints to use when interpreting the data.">データを解釈するときに使用するエンコード制約。</param>
      <param name="bytesConsumed" vsli:raw="When this method returns, the total number of bytes for the encoded value.&#xA;               This parameter is treated as uninitialized.">このメソッドから制御が戻るときに、エンコードされた値の合計バイト数。
このパラメーターは初期化前として処理されます。</param>
      <param name="expectedTag" vsli:raw="The tag to check for before reading, or &lt;see langword=&quot;null&quot; /&gt; for the default tag (Universal 3).">読み取る前にチェックするタグ、または既定のタグ (Universal 3) の場合は <see langword="null" />。</param>
      <typeparam name="TFlagsEnum" vsli:raw="Destination enum type.">ターゲット列挙型</typeparam>
      <exception cref="T:System.ArgumentOutOfRangeException" vsli:raw="&lt;paramref name=&quot;ruleSet&quot; /&gt; is not defined.">
        <paramref name="ruleSet" /> が定義されていません。</exception>
      <exception cref="T:System.Formats.Asn1.AsnContentException" vsli:raw="The next value does not have the correct tag.&#xA;&#xA;-or-&#xA;&#xA;The length encoding is not valid under the current encoding rules.&#xA;&#xA;-or-&#xA;&#xA;The contents are not valid under the current encoding rules.&#xA;&#xA;-or-&#xA;&#xA;The encoded value is too big to fit in a &lt;paramref name=&quot;TFlagsEnum&quot; /&gt; value.">次の値には、正しいタグがありません。
-または- 現在のエンコード規則では、長さのエンコードが無効です。
-または- 現在のエンコード規則では、コンテンツが有効ではありません。
-または- エンコードされた値が大きすぎて <typeparamref name="TFlagsEnum" /> 値に収まりません。</exception>
      <exception cref="T:System.ArgumentException" vsli:raw="&lt;typeparamref name=&quot;TFlagsEnum&quot; /&gt; is not an enum type.&#xA;&#xA;-or-&#xA;&#xA;&lt;typeparamref name=&quot;TFlagsEnum&quot; /&gt; was not declared with &lt;see cref=&quot;T:System.FlagsAttribute&quot; /&gt;&#xA;&#xA;-or-&#xA;&#xA;&lt;paramref name=&quot;expectedTag&quot; /&gt;.&lt;see cref=&quot;P:System.Formats.Asn1.Asn1Tag.TagClass&quot; /&gt; is &lt;see cref=&quot;F:System.Formats.Asn1.TagClass.Universal&quot; /&gt;, but &lt;paramref name=&quot;expectedTag&quot; /&gt;.&lt;see cref=&quot;P:System.Formats.Asn1.Asn1Tag.TagValue&quot; /&gt; is not correct for the method.">
        <typeparamref name="TFlagsEnum" /> は列挙型ではありません。
-または- <typeparamref name="TFlagsEnum" /> が <see cref="T:System.FlagsAttribute" /> で宣言されていません。-または- <paramref name="expectedTag" />。<see cref="P:System.Formats.Asn1.Asn1Tag.TagClass" /> は <see cref="F:System.Formats.Asn1.TagClass.Universal" /> ですが、<paramref name="expectedTag" /> です。<see cref="P:System.Formats.Asn1.Asn1Tag.TagValue" /> は、メソッドに対して正しくありません。</exception>
      <returns vsli:raw="The NamedBitList value converted to a &lt;typeparamref name=&quot;TFlagsEnum&quot; /&gt;.">
        <typeparamref name="TFlagsEnum" /> に変換された NamedBitList 値。</returns>
    </member>
    <member name="M:System.Formats.Asn1.AsnDecoder.ReadNull(System.ReadOnlySpan{System.Byte},System.Formats.Asn1.AsnEncodingRules,System.Int32@,System.Nullable{System.Formats.Asn1.Asn1Tag})">
      <summary vsli:raw="Reads a &lt;see langword=&quot;null&quot; /&gt; value from &lt;paramref name=&quot;source&quot; /&gt; with a specified tag under the specified encoding rules.">指定したエンコード規則に基づいて、指定したタグを持つ <paramref name="source" /> から <see langword="null" /> 値を読み取ります。</summary>
      <param name="source" vsli:raw="The buffer containing encoded data.">エンコードされたデータを含むバッファー。</param>
      <param name="ruleSet" vsli:raw="The encoding constraints to use when interpreting the data.">データを解釈するときに使用するエンコード制約。</param>
      <param name="bytesConsumed" vsli:raw="When this method returns, the total number of bytes for the encoded value.&#xA;               This parameter is treated as uninitialized.">このメソッドから制御が戻るときに、エンコードされた値の合計バイト数。
このパラメーターは初期化前として処理されます。</param>
      <param name="expectedTag" vsli:raw="The tag to check for before reading, or &lt;see langword=&quot;null&quot; /&gt; for the default tag (Universal 5).">読み取る前にチェックするタグ、または既定のタグ (Universal 5) の場合は <see langword="null" />。</param>
      <exception cref="T:System.ArgumentOutOfRangeException" vsli:raw="&lt;paramref name=&quot;ruleSet&quot; /&gt; is not defined.">
        <paramref name="ruleSet" /> が定義されていません。</exception>
      <exception cref="T:System.Formats.Asn1.AsnContentException" vsli:raw="The next value does not have the correct tag.&#xA;&#xA;-or-&#xA;&#xA;The length encoding is not valid under the current encoding rules.&#xA;&#xA;-or-&#xA;&#xA;The contents are not valid under the current encoding rules.">次の値には、正しいタグがありません。
-または- 現在のエンコード規則では、長さのエンコードが無効です。
-または- 現在のエンコード規則では、コンテンツが有効ではありません。</exception>
      <exception cref="T:System.ArgumentException" vsli:raw="&lt;paramref name=&quot;expectedTag&quot; /&gt;.&lt;see cref=&quot;P:System.Formats.Asn1.Asn1Tag.TagClass&quot; /&gt; is &lt;see cref=&quot;F:System.Formats.Asn1.TagClass.Universal&quot; /&gt;, but &lt;paramref name=&quot;expectedTag&quot; /&gt;.&lt;see cref=&quot;P:System.Formats.Asn1.Asn1Tag.TagValue&quot; /&gt; is not correct for the method.">
        <paramref name="expectedTag" />.<see cref="P:System.Formats.Asn1.Asn1Tag.TagClass" /> は <see cref="F:System.Formats.Asn1.TagClass.Universal" /> ですが、<paramref name="expectedTag" /> です。<see cref="P:System.Formats.Asn1.Asn1Tag.TagValue" /> は、メソッドに対して正しくありません。</exception>
    </member>
    <member name="M:System.Formats.Asn1.AsnDecoder.ReadObjectIdentifier(System.ReadOnlySpan{System.Byte},System.Formats.Asn1.AsnEncodingRules,System.Int32@,System.Nullable{System.Formats.Asn1.Asn1Tag})">
      <summary vsli:raw="Reads an Object Identifier value from &lt;paramref name=&quot;source&quot; /&gt; with a specified tag under the specified encoding rules.">指定したエンコード規則に基づいて、指定したタグを持つ <paramref name="source" /> からオブジェクト識別子値を読み取ります。</summary>
      <param name="source" vsli:raw="The buffer containing encoded data.">エンコードされたデータを含むバッファー。</param>
      <param name="ruleSet" vsli:raw="The encoding constraints to use when interpreting the data.">データを解釈するときに使用するエンコード制約。</param>
      <param name="bytesConsumed" vsli:raw="When this method returns, the total number of bytes for the encoded value.&#xA;               This parameter is treated as uninitialized.">このメソッドから制御が戻るときに、エンコードされた値の合計バイト数。
このパラメーターは初期化前として処理されます。</param>
      <param name="expectedTag" vsli:raw="The tag to check for before reading, or &lt;see langword=&quot;null&quot; /&gt; for the default tag (Universal 6).">読み取る前にチェックするタグ、または既定のタグ (Universal 6) の場合は <see langword="null" />。</param>
      <exception cref="T:System.ArgumentOutOfRangeException" vsli:raw="&lt;paramref name=&quot;ruleSet&quot; /&gt; is not defined.">
        <paramref name="ruleSet" /> が定義されていません。</exception>
      <exception cref="T:System.Formats.Asn1.AsnContentException" vsli:raw="The next value does not have the correct tag.&#xA;&#xA;-or-&#xA;&#xA;The length encoding is not valid under the current encoding rules.&#xA;&#xA;-or-&#xA;&#xA;The contents are not valid under the current encoding rules.">次の値には、正しいタグがありません。
-または- 現在のエンコード規則では、長さのエンコードが無効です。
-または- 現在のエンコード規則では、コンテンツが有効ではありません。</exception>
      <exception cref="T:System.ArgumentException" vsli:raw="&lt;paramref name=&quot;expectedTag&quot; /&gt;.&lt;see cref=&quot;P:System.Formats.Asn1.Asn1Tag.TagClass&quot; /&gt; is &lt;see cref=&quot;F:System.Formats.Asn1.TagClass.Universal&quot; /&gt;, but &lt;paramref name=&quot;expectedTag&quot; /&gt;.&lt;see cref=&quot;P:System.Formats.Asn1.Asn1Tag.TagValue&quot; /&gt; is not correct for the method.">
        <paramref name="expectedTag" />.<see cref="P:System.Formats.Asn1.Asn1Tag.TagClass" /> は <see cref="F:System.Formats.Asn1.TagClass.Universal" /> ですが、<paramref name="expectedTag" /> です。<see cref="P:System.Formats.Asn1.Asn1Tag.TagValue" /> は、メソッドに対して正しくありません。</exception>
      <returns vsli:raw="The decoded object identifier, in dotted-decimal notation.">ドットで区切られた 10 進表記のデコードされたオブジェクト識別子。</returns>
    </member>
    <member name="M:System.Formats.Asn1.AsnDecoder.ReadOctetString(System.ReadOnlySpan{System.Byte},System.Formats.Asn1.AsnEncodingRules,System.Int32@,System.Nullable{System.Formats.Asn1.Asn1Tag})">
      <summary vsli:raw="Reads an Octet String value from &lt;paramref name=&quot;source&quot; /&gt; with a specified tag under the specified encoding rules, returning the contents in a new array.">指定したエンコード規則に基づいて、指定したタグを使用を持つ <paramref name="source" /> からオクテット文字列値を読み取り、新しい配列でコンテンツを返します。</summary>
      <param name="source" vsli:raw="The buffer containing encoded data.">エンコードされたデータを含むバッファー。</param>
      <param name="ruleSet" vsli:raw="The encoding constraints to use when interpreting the data.">データを解釈するときに使用するエンコード制約。</param>
      <param name="bytesConsumed" vsli:raw="When this method returns, the total number of bytes for the encoded value.&#xA;               This parameter is treated as uninitialized.">このメソッドから制御が戻るときに、エンコードされた値の合計バイト数。
このパラメーターは初期化前として処理されます。</param>
      <param name="expectedTag" vsli:raw="The tag to check for before reading, or &lt;see langword=&quot;null&quot; /&gt; for the default tag (Universal 4).">読み取る前にチェックするタグ、または既定のタグ (Universal 4) の場合は <see langword="null" />。</param>
      <exception cref="T:System.ArgumentOutOfRangeException" vsli:raw="&lt;paramref name=&quot;ruleSet&quot; /&gt; is not defined.">
        <paramref name="ruleSet" /> が定義されていません。</exception>
      <exception cref="T:System.Formats.Asn1.AsnContentException" vsli:raw="The next value does not have the correct tag.&#xA;&#xA;-or-&#xA;&#xA;The length encoding is not valid under the current encoding rules.&#xA;&#xA;-or-&#xA;&#xA;The contents are not valid under the current encoding rules.">次の値には、正しいタグがありません。
-または- 現在のエンコード規則では、長さのエンコードが無効です。
-または- 現在のエンコード規則では、コンテンツが有効ではありません。</exception>
      <exception cref="T:System.ArgumentException" vsli:raw="&lt;paramref name=&quot;expectedTag&quot; /&gt;.&lt;see cref=&quot;P:System.Formats.Asn1.Asn1Tag.TagClass&quot; /&gt; is &lt;see cref=&quot;F:System.Formats.Asn1.TagClass.Universal&quot; /&gt;, but &lt;paramref name=&quot;expectedTag&quot; /&gt;.&lt;see cref=&quot;P:System.Formats.Asn1.Asn1Tag.TagValue&quot; /&gt; is not correct for the method.">
        <paramref name="expectedTag" />.<see cref="P:System.Formats.Asn1.Asn1Tag.TagClass" /> は <see cref="F:System.Formats.Asn1.TagClass.Universal" /> ですが、<paramref name="expectedTag" /> です。<see cref="P:System.Formats.Asn1.Asn1Tag.TagValue" /> は、メソッドに対して正しくありません。</exception>
      <returns vsli:raw="An array containing the contents of the Octet String value.">オクテット文字列値のコンテンツを含む配列。</returns>
    </member>
    <member name="M:System.Formats.Asn1.AsnDecoder.ReadSequence(System.ReadOnlySpan{System.Byte},System.Formats.Asn1.AsnEncodingRules,System.Int32@,System.Int32@,System.Int32@,System.Nullable{System.Formats.Asn1.Asn1Tag})">
      <summary vsli:raw="Reads a Sequence or Sequence-Of value from &lt;paramref name=&quot;source&quot; /&gt; with a specified tag under the specified encoding rules.">指定したエンコード規則に基づいて、指定したタグを持つ <paramref name="source" /> から Sequence または Sequence-Of 値を読み取ります。</summary>
      <param name="source" vsli:raw="The buffer containing encoded data.">エンコードされたデータを含むバッファー。</param>
      <param name="ruleSet" vsli:raw="The encoding constraints to use when interpreting the data.">データを解釈するときに使用するエンコード制約。</param>
      <param name="contentOffset" vsli:raw="When this method returns, the offset of the content payload relative to the start of &lt;paramref name=&quot;source&quot; /&gt;.&#xA;               This parameter is treated as uninitialized.">このメソッドから制御が戻るときの、<paramref name="source" /> の開始を基準とするコンテンツ ペイロードのオフセット。
このパラメーターは初期化前として処理されます。</param>
      <param name="contentLength" vsli:raw="When this method returns, the number of bytes in the content payload (which may be 0).&#xA;               This parameter is treated as uninitialized.">このメソッドから制御が戻るときの、コンテンツ ペイロードのバイト数 (0 の場合もあります)。
このパラメーターは初期化前として処理されます。</param>
      <param name="bytesConsumed" vsli:raw="When this method returns, the total number of bytes for the encoded value.&#xA;               This parameter is treated as uninitialized.">このメソッドから制御が戻るときに、エンコードされた値の合計バイト数。
このパラメーターは初期化前として処理されます。</param>
      <param name="expectedTag" vsli:raw="The tag to check for before reading, or &lt;see langword=&quot;null&quot; /&gt; for the default tag (Universal 16).">読み取る前にチェックするタグ、または既定のタグ (Universal 16) の場合は <see langword="null" />。</param>
      <exception cref="T:System.ArgumentOutOfRangeException" vsli:raw="&lt;paramref name=&quot;ruleSet&quot; /&gt; is not defined.">
        <paramref name="ruleSet" /> が定義されていません。</exception>
      <exception cref="T:System.Formats.Asn1.AsnContentException" vsli:raw="The next value does not have the correct tag.&#xA;&#xA;-or-&#xA;&#xA;The length encoding is not valid under the current encoding rules.&#xA;&#xA;-or-&#xA;&#xA;The contents are not valid under the current encoding rules.">次の値には、正しいタグがありません。
-または- 現在のエンコード規則では、長さのエンコードが無効です。
-または- 現在のエンコード規則では、コンテンツが有効ではありません。</exception>
      <exception cref="T:System.ArgumentException" vsli:raw="&lt;paramref name=&quot;expectedTag&quot; /&gt;.&lt;see cref=&quot;P:System.Formats.Asn1.Asn1Tag.TagClass&quot; /&gt; is &lt;see cref=&quot;F:System.Formats.Asn1.TagClass.Universal&quot; /&gt;, but &lt;paramref name=&quot;expectedTag&quot; /&gt;.&lt;see cref=&quot;P:System.Formats.Asn1.Asn1Tag.TagValue&quot; /&gt; is not correct for the method.">
        <paramref name="expectedTag" />.<see cref="P:System.Formats.Asn1.Asn1Tag.TagClass" /> は <see cref="F:System.Formats.Asn1.TagClass.Universal" /> ですが、<paramref name="expectedTag" /> です。<see cref="P:System.Formats.Asn1.Asn1Tag.TagValue" /> は、メソッドに対して正しくありません。</exception>
    </member>
    <member name="M:System.Formats.Asn1.AsnDecoder.ReadSetOf(System.ReadOnlySpan{System.Byte},System.Formats.Asn1.AsnEncodingRules,System.Int32@,System.Int32@,System.Int32@,System.Boolean,System.Nullable{System.Formats.Asn1.Asn1Tag})">
      <summary vsli:raw="Reads a Set-Of value from &lt;paramref name=&quot;source&quot; /&gt; with a specified tag under the specified encoding rules.">指定したエンコード規則に基づいて、指定したタグを持つ <paramref name="source" /> から Set-Of 値を読み取ります。</summary>
      <param name="source" vsli:raw="The buffer containing encoded data.">エンコードされたデータを含むバッファー。</param>
      <param name="ruleSet" vsli:raw="The encoding constraints to use when interpreting the data.">データを解釈するときに使用するエンコード制約。</param>
      <param name="contentOffset" vsli:raw="When this method returns, the offset of the content payload relative to the start of &lt;paramref name=&quot;source&quot; /&gt;.&#xA;               This parameter is treated as uninitialized.">このメソッドから制御が戻るときの、<paramref name="source" /> の開始を基準とするコンテンツ ペイロードのオフセット。
このパラメーターは初期化前として処理されます。</param>
      <param name="contentLength" vsli:raw="When this method returns, the number of bytes in the content payload (which may be 0).&#xA;               This parameter is treated as uninitialized.">このメソッドから制御が戻るときの、コンテンツ ペイロードのバイト数 (0 の場合もあります)。
このパラメーターは初期化前として処理されます。</param>
      <param name="bytesConsumed" vsli:raw="When this method returns, the total number of bytes for the encoded value.&#xA;               This parameter is treated as uninitialized.">このメソッドから制御が戻るときに、エンコードされた値の合計バイト数。
このパラメーターは初期化前として処理されます。</param>
      <param name="skipSortOrderValidation" vsli:raw="&lt;see langword=&quot;true&quot; /&gt; to always accept the data in the order it is presented, &lt;see langword=&quot;false&quot; /&gt; to verify that the data is sorted correctly when the encoding rules say sorting was required (CER and DER).">表示されている順序でデータを常に受け入れる場合は <see langword="true" />、エンコード規則によって並べ替えが必要なときに、データが正しく並べ替えられていることを確認するには <see langword="false" /> (CER および DER)。</param>
      <param name="expectedTag" vsli:raw="The tag to check for before reading, or &lt;see langword=&quot;null&quot; /&gt; for the default tag (Universal 17).">読み取る前にチェックするタグ、または既定のタグ (Universal 17) の場合は <see langword="null" />。</param>
      <exception cref="T:System.ArgumentOutOfRangeException" vsli:raw="&lt;paramref name=&quot;ruleSet&quot; /&gt; is not defined.">
        <paramref name="ruleSet" /> が定義されていません。</exception>
      <exception cref="T:System.Formats.Asn1.AsnContentException" vsli:raw="The next value does not have the correct tag.&#xA;&#xA;-or-&#xA;&#xA;The length encoding is not valid under the current encoding rules.&#xA;&#xA;-or-&#xA;&#xA;The contents are not valid under the current encoding rules.">次の値には、正しいタグがありません。
-または- 現在のエンコード規則では、長さのエンコードが無効です。
-または- 現在のエンコード規則では、コンテンツが有効ではありません。</exception>
      <exception cref="T:System.ArgumentException" vsli:raw="&lt;paramref name=&quot;expectedTag&quot; /&gt;.&lt;see cref=&quot;P:System.Formats.Asn1.Asn1Tag.TagClass&quot; /&gt; is &lt;see cref=&quot;F:System.Formats.Asn1.TagClass.Universal&quot; /&gt;, but &lt;paramref name=&quot;expectedTag&quot; /&gt;.&lt;see cref=&quot;P:System.Formats.Asn1.Asn1Tag.TagValue&quot; /&gt; is not correct for the method.">
        <paramref name="expectedTag" />.<see cref="P:System.Formats.Asn1.Asn1Tag.TagClass" /> は <see cref="F:System.Formats.Asn1.TagClass.Universal" /> ですが、<paramref name="expectedTag" /> です。<see cref="P:System.Formats.Asn1.Asn1Tag.TagValue" /> は、メソッドに対して正しくありません。</exception>
    </member>
    <member name="M:System.Formats.Asn1.AsnDecoder.ReadUtcTime(System.ReadOnlySpan{System.Byte},System.Formats.Asn1.AsnEncodingRules,System.Int32@,System.Int32,System.Nullable{System.Formats.Asn1.Asn1Tag})">
      <summary vsli:raw="Reads a UtcTime value from &lt;paramref name=&quot;source&quot; /&gt; with a specified tag under the specified encoding rules.">指定したエンコード規則に基づいて、指定したタグを持つ <paramref name="source" /> から UtcTime 値の読み取りを試みます。</summary>
      <param name="source" vsli:raw="The buffer containing encoded data.">エンコードされたデータを含むバッファー。</param>
      <param name="ruleSet" vsli:raw="The encoding constraints to use when interpreting the data.">データを解釈するときに使用するエンコード制約。</param>
      <param name="bytesConsumed" vsli:raw="When this method returns, the total number of bytes for the encoded value.&#xA;               This parameter is treated as uninitialized.">このメソッドから制御が戻るときに、エンコードされた値の合計バイト数。
このパラメーターは初期化前として処理されます。</param>
      <param name="twoDigitYearMax" vsli:raw="The largest year to represent with this value.&#xA;               The default value, 2049, represents the 1950-2049 range for X.509 certificates.">この値で表される最大の年。
既定値の 2049 は、X.509 証明書の 1950-2049 の範囲を表しています。</param>
      <param name="expectedTag" vsli:raw="The tag to check for before reading, or &lt;see langword=&quot;null&quot; /&gt; for the default tag (Universal 24).">読み取る前にチェックするタグ、または既定のタグ (Universal 24) の場合は <see langword="null" />。</param>
      <exception cref="T:System.ArgumentOutOfRangeException" vsli:raw="&lt;paramref name=&quot;ruleSet&quot; /&gt; is not defined.&#xA;&#xA;-or-&#xA;&#xA;&lt;paramref name=&quot;twoDigitYearMax&quot; /&gt; is not in the range [99, 9999].">
        <paramref name="ruleSet" /> が定義されていません。
-または- <paramref name="twoDigitYearMax" /> が [99, 9999] の範囲内にありません。</exception>
      <exception cref="T:System.Formats.Asn1.AsnContentException" vsli:raw="The next value does not have the correct tag.&#xA;&#xA;-or-&#xA;&#xA;The length encoding is not valid under the current encoding rules.&#xA;&#xA;-or-&#xA;&#xA;The contents are not valid under the current encoding rules.">次の値には、正しいタグがありません。
-または- 現在のエンコード規則では、長さのエンコードが無効です。
-または- 現在のエンコード規則では、コンテンツが有効ではありません。</exception>
      <exception cref="T:System.ArgumentException" vsli:raw="&lt;paramref name=&quot;expectedTag&quot; /&gt;.&lt;see cref=&quot;P:System.Formats.Asn1.Asn1Tag.TagClass&quot; /&gt; is &lt;see cref=&quot;F:System.Formats.Asn1.TagClass.Universal&quot; /&gt;, but &lt;paramref name=&quot;expectedTag&quot; /&gt;.&lt;see cref=&quot;P:System.Formats.Asn1.Asn1Tag.TagValue&quot; /&gt; is not correct for the method.">
        <paramref name="expectedTag" />.<see cref="P:System.Formats.Asn1.Asn1Tag.TagClass" /> は <see cref="F:System.Formats.Asn1.TagClass.Universal" /> ですが、<paramref name="expectedTag" /> です。<see cref="P:System.Formats.Asn1.Asn1Tag.TagValue" /> は、メソッドに対して正しくありません。</exception>
      <returns vsli:raw="The decoded value.">デコードされた値。</returns>
    </member>
    <member name="M:System.Formats.Asn1.AsnDecoder.TryReadBitString(System.ReadOnlySpan{System.Byte},System.Span{System.Byte},System.Formats.Asn1.AsnEncodingRules,System.Int32@,System.Int32@,System.Int32@,System.Nullable{System.Formats.Asn1.Asn1Tag})">
      <summary vsli:raw="Attempts to copy a Bit String value from &lt;paramref name=&quot;source&quot; /&gt; with a specified tag under the specified encoding rules into &lt;paramref name=&quot;destination&quot; /&gt;.">指定したエンコード規則に基づいて、指定したタグを持つ <paramref name="source" /> から <paramref name="destination" /> にビット文字列値のコピーを試みます。</summary>
      <param name="source" vsli:raw="The buffer containing encoded data.">エンコードされたデータを含むバッファー。</param>
      <param name="destination" vsli:raw="The buffer in which to write.">書き込み先のバッファー。</param>
      <param name="ruleSet" vsli:raw="The encoding constraints to use when interpreting the data.">データを解釈するときに使用するエンコード制約。</param>
      <param name="unusedBitCount" vsli:raw="On success, receives the number of bits in the last byte which were reported as &quot;unused&quot; by the writer.&#xA;               This parameter is treated as uninitialized.">成功すると、ライターによって "未使用" として報告された最後のバイトのビット数を受け取ります。
このパラメーターは初期化前として処理されます。</param>
      <param name="bytesConsumed" vsli:raw="When this method returns, the total number of bytes for the encoded value.&#xA;               This parameter is treated as uninitialized.">このメソッドから制御が戻るときに、エンコードされた値の合計バイト数。
このパラメーターは初期化前として処理されます。</param>
      <param name="bytesWritten" vsli:raw="When this method returns, the total number of bytes written to &lt;paramref name=&quot;destination&quot; /&gt;.&#xA;               This parameter is treated as uninitialized.">このメソッドから制御が戻るときに、<paramref name="destination" /> に書き込まれた合計バイト数。
このパラメーターは初期化前として処理されます。</param>
      <param name="expectedTag" vsli:raw="The tag to check for before reading, or &lt;see langword=&quot;null&quot; /&gt; for the default tag (Universal 3).">読み取る前にチェックするタグ、または既定のタグ (Universal 3) の場合は <see langword="null" />。</param>
      <exception cref="T:System.ArgumentOutOfRangeException" vsli:raw="&lt;paramref name=&quot;ruleSet&quot; /&gt; is not defined.">
        <paramref name="ruleSet" /> が定義されていません。</exception>
      <exception cref="T:System.Formats.Asn1.AsnContentException" vsli:raw="The next value does not have the correct tag.&#xA;&#xA;-or-&#xA;&#xA;The length encoding is not valid under the current encoding rules.&#xA;&#xA;-or-&#xA;&#xA;The contents are not valid under the current encoding rules.">次の値には、正しいタグがありません。
-または- 現在のエンコード規則では、長さのエンコードが無効です。
-または- 現在のエンコード規則では、コンテンツが有効ではありません。</exception>
      <exception cref="T:System.ArgumentException" vsli:raw="&lt;paramref name=&quot;expectedTag&quot; /&gt;.&lt;see cref=&quot;P:System.Formats.Asn1.Asn1Tag.TagClass&quot; /&gt; is &lt;see cref=&quot;F:System.Formats.Asn1.TagClass.Universal&quot; /&gt;, but &lt;paramref name=&quot;expectedTag&quot; /&gt;.&lt;see cref=&quot;P:System.Formats.Asn1.Asn1Tag.TagValue&quot; /&gt; is not correct for the method.&#xA;&#xA;-or-&#xA;&#xA;&lt;paramref name=&quot;destination&quot; /&gt; overlaps &lt;paramref name=&quot;source&quot; /&gt;.">
        <paramref name="expectedTag" />.<see cref="P:System.Formats.Asn1.Asn1Tag.TagClass" /> は <see cref="F:System.Formats.Asn1.TagClass.Universal" /> ですが、<paramref name="expectedTag" /> です。<see cref="P:System.Formats.Asn1.Asn1Tag.TagValue" /> は、メソッドに対して正しくありません。
-または- <paramref name="destination" /> が <paramref name="source" /> と重なっています。</exception>
      <returns vsli:raw="&lt;see langword=&quot;true&quot; /&gt; if &lt;paramref name=&quot;destination&quot; /&gt; is large enough to receive the value of the Bit String; otherwise, &lt;see langword=&quot;false&quot; /&gt;.">
        <paramref name="destination" /> がビット文字列の値を受け取るのに十分な大きさの場合は <see langword="true" />。それ以外の場合は <see langword="false" />。</returns>
    </member>
    <member name="M:System.Formats.Asn1.AsnDecoder.TryReadCharacterString(System.ReadOnlySpan{System.Byte},System.Span{System.Char},System.Formats.Asn1.AsnEncodingRules,System.Formats.Asn1.UniversalTagNumber,System.Int32@,System.Int32@,System.Nullable{System.Formats.Asn1.Asn1Tag})">
      <summary vsli:raw="Reads a character string value from &lt;paramref name=&quot;source&quot; /&gt; with a specified tag under the specified encoding rules, copying the decoded string into a provided destination buffer.">指定したエンコード規則に基づいて、指定したタグを持つ <paramref name="source" /> から文字列を読み取り、指定した対象のバッファーにデコードされた文字列をコピーします。</summary>
      <param name="source" vsli:raw="The buffer containing encoded data.">エンコードされたデータを含むバッファー。</param>
      <param name="destination" vsli:raw="The buffer in which to write.">書き込み先のバッファー。</param>
      <param name="ruleSet" vsli:raw="The encoding constraints to use when interpreting the data.">データを解釈するときに使用するエンコード制約。</param>
      <param name="encodingType" vsli:raw="One of the enumeration values which represents the value type to process.">処理する値の型を表す列挙値の 1 つ。</param>
      <param name="bytesConsumed" vsli:raw="When this method returns, the total number of bytes for the encoded value.&#xA;               This parameter is treated as uninitialized.">このメソッドから制御が戻るときに、エンコードされた値の合計バイト数。
このパラメーターは初期化前として処理されます。</param>
      <param name="charsWritten" vsli:raw="When this method returns, the number of chars written to &lt;paramref name=&quot;destination&quot; /&gt;.&#xA;               This parameter is treated as uninitialized.">このメソッドから制御が戻るときに、<paramref name="destination" /> に書き込まれた文字数。
このパラメーターは初期化前として処理されます。</param>
      <param name="expectedTag" vsli:raw="The tag to check for before reading, or &lt;see langword=&quot;null&quot; /&gt; for the universal tag that is appropriate to the requested encoding type.">読み取る前に確認するタグ、または要求されたエンコードの種類に適したユニバーサル タグの場合は <see langword="null" />。</param>
      <exception cref="T:System.ArgumentOutOfRangeException" vsli:raw="&lt;paramref name=&quot;ruleSet&quot; /&gt; is not defined.&#xA;&#xA;-or-&#xA;&#xA;&lt;paramref name=&quot;encodingType&quot; /&gt; is not a known character string type.">
        <paramref name="ruleSet" /> が定義されていません。
-または- <paramref name="encodingType" /> は既知の文字列型ではありません。</exception>
      <exception cref="T:System.Formats.Asn1.AsnContentException" vsli:raw="The next value does not have the correct tag.&#xA;&#xA;-or-&#xA;&#xA;The length encoding is not valid under the current encoding rules.&#xA;&#xA;-or-&#xA;&#xA;The contents are not valid under the current encoding rules.&#xA;&#xA;-or-&#xA;&#xA;The string did not successfully decode.">次の値には、正しいタグがありません。
-または- 現在のエンコード規則では、長さのエンコードが無効です。
-または- 現在のエンコード規則では、コンテンツが有効ではありません。
-または- 文字列が正常にデコードされませんでした。</exception>
      <exception cref="T:System.ArgumentException" vsli:raw="&lt;paramref name=&quot;expectedTag&quot; /&gt;.&lt;see cref=&quot;P:System.Formats.Asn1.Asn1Tag.TagClass&quot; /&gt; is &lt;see cref=&quot;F:System.Formats.Asn1.TagClass.Universal&quot; /&gt;, but &lt;paramref name=&quot;expectedTag&quot; /&gt;.&lt;see cref=&quot;P:System.Formats.Asn1.Asn1Tag.TagValue&quot; /&gt; is not the same as &lt;paramref name=&quot;encodingType&quot; /&gt;.">
        <paramref name="expectedTag" />.<see cref="P:System.Formats.Asn1.Asn1Tag.TagClass" /> は <see cref="F:System.Formats.Asn1.TagClass.Universal" /> ですが、<paramref name="expectedTag" /> です。<see cref="P:System.Formats.Asn1.Asn1Tag.TagValue" /> は、<paramref name="encodingType" /> と同じではありません。</exception>
      <returns vsli:raw="&lt;see langword=&quot;true&quot; /&gt; and advances the reader if &lt;paramref name=&quot;destination&quot; /&gt; had sufficient length to receive the value, otherwise &lt;see langword=&quot;false&quot; /&gt; and the reader does not advance.">
        <paramref name="destination" /> に値を受け取るのに十分な長さがある場合は、<see langword="true" /> でリーダーを進め、そうでない場合は、<see langword="false" /> でリーダーは進めません。</returns>
    </member>
    <member name="M:System.Formats.Asn1.AsnDecoder.TryReadCharacterStringBytes(System.ReadOnlySpan{System.Byte},System.Span{System.Byte},System.Formats.Asn1.AsnEncodingRules,System.Formats.Asn1.Asn1Tag,System.Int32@,System.Int32@)">
      <summary vsli:raw="Attempts to read a character string value from &lt;paramref name=&quot;source&quot; /&gt; with a specified tag under the specified encoding rules, copying the unprocessed bytes into the provided destination buffer.">指定したエンコード規則に基づいて、指定したタグを持つ <paramref name="source" /> から文字列を読み取り、指定した対象のバッファーに未処理バイトのコピーを試みます。</summary>
      <param name="source" vsli:raw="The buffer containing encoded data.">エンコードされたデータを含むバッファー。</param>
      <param name="destination" vsli:raw="The buffer in which to write.">書き込み先のバッファー。</param>
      <param name="ruleSet" vsli:raw="The encoding constraints to use when interpreting the data.">データを解釈するときに使用するエンコード制約。</param>
      <param name="expectedTag" vsli:raw="The tag to check for before reading.">読み取る前に確認するタグ。</param>
      <param name="bytesConsumed" vsli:raw="When this method returns, the total number of bytes for the encoded value.&#xA;               This parameter is treated as uninitialized.">このメソッドから制御が戻るときに、エンコードされた値の合計バイト数。
このパラメーターは初期化前として処理されます。</param>
      <param name="bytesWritten" vsli:raw="On success, receives the number of bytes written to &lt;paramref name=&quot;destination&quot; /&gt;.">成功すると、<paramref name="destination" /> に書き込まれたバイト数を受け取ります。</param>
      <exception cref="T:System.ArgumentOutOfRangeException" vsli:raw="&lt;paramref name=&quot;ruleSet&quot; /&gt; is not defined.">
        <paramref name="ruleSet" /> が定義されていません。</exception>
      <exception cref="T:System.Formats.Asn1.AsnContentException" vsli:raw="The next value does not have the correct tag.&#xA;&#xA;-or-&#xA;&#xA;The length encoding is not valid under the current encoding rules.&#xA;&#xA;-or-&#xA;&#xA;The contents are not valid under the current encoding rules.">次の値には、正しいタグがありません。
-または- 現在のエンコード規則では、長さのエンコードが無効です。
-または- 現在のエンコード規則では、コンテンツが有効ではありません。</exception>
      <exception cref="T:System.ArgumentException" vsli:raw="&lt;paramref name=&quot;expectedTag&quot; /&gt;.&lt;see cref=&quot;P:System.Formats.Asn1.Asn1Tag.TagClass&quot; /&gt; is &lt;see cref=&quot;F:System.Formats.Asn1.TagClass.Universal&quot; /&gt;, but &lt;paramref name=&quot;expectedTag&quot; /&gt;.&lt;see cref=&quot;P:System.Formats.Asn1.Asn1Tag.TagValue&quot; /&gt; is not a character string tag type.&#xA;&#xA;-or-&#xA;&#xA;&lt;paramref name=&quot;destination&quot; /&gt; overlaps &lt;paramref name=&quot;source&quot; /&gt;.">
        <paramref name="expectedTag" />.<see cref="P:System.Formats.Asn1.Asn1Tag.TagClass" /> は <see cref="F:System.Formats.Asn1.TagClass.Universal" /> ですが、<paramref name="expectedTag" /> です。<see cref="P:System.Formats.Asn1.Asn1Tag.TagValue" /> は文字列型のタグではありません。
-または- <paramref name="destination" /> が <paramref name="source" /> と重なっています。</exception>
      <returns vsli:raw="&lt;see langword=&quot;true&quot; /&gt; if &lt;paramref name=&quot;destination&quot; /&gt; is large enough to receive the value of the unprocessed character string; otherwise, &lt;see langword=&quot;false&quot; /&gt;.">
        <paramref name="destination" /> が未処理の文字列値を受け取るのに十分な大きさの場合は <see langword="true" />。それ以外の場合は <see langword="false" />。</returns>
    </member>
    <member name="M:System.Formats.Asn1.AsnDecoder.TryReadEncodedValue(System.ReadOnlySpan{System.Byte},System.Formats.Asn1.AsnEncodingRules,System.Formats.Asn1.Asn1Tag@,System.Int32@,System.Int32@,System.Int32@)">
      <summary vsli:raw="Attempts locate the contents range for the encoded value at the beginning of the &lt;paramref name=&quot;source&quot; /&gt; buffer using the specified encoding rules.">指定したエンコード規則を使用して、<paramref name="source" /> バッファーの先頭にあるエンコードされた値のコンテンツ範囲の検索を試みます。</summary>
      <param name="source" vsli:raw="The buffer containing encoded data.">エンコードされたデータを含むバッファー。</param>
      <param name="ruleSet" vsli:raw="The encoding constraints to use when interpreting the data.">データを解釈するときに使用するエンコード制約。</param>
      <param name="tag" vsli:raw="When this method returns, the tag identifying the content.&#xA;              This parameter is treated as uninitialized.">このメソッドから制御が戻るときに、コンテンツを識別するタグ。
このパラメーターは初期化前として処理されます。</param>
      <param name="contentOffset" vsli:raw="When this method returns, the offset of the content payload relative to the start of &lt;paramref name=&quot;source&quot; /&gt;.&#xA;              This parameter is treated as uninitialized.">このメソッドから制御が戻るときの、<paramref name="source" /> の開始を基準とするコンテンツ ペイロードのオフセット。
このパラメーターは初期化前として処理されます。</param>
      <param name="contentLength" vsli:raw="When this method returns, the number of bytes in the content payload (which may be 0).&#xA;              This parameter is treated as uninitialized.">このメソッドから制御が戻るときの、コンテンツ ペイロードのバイト数 (0 の場合もあります)。
このパラメーターは初期化前として処理されます。</param>
      <param name="bytesConsumed" vsli:raw="When this method returns, the total number of bytes for the encoded value.&#xA;              This parameter is treated as uninitialized.">このメソッドから制御が戻るときに、エンコードされた値の合計バイト数。
このパラメーターは初期化前として処理されます。</param>
      <exception cref="T:System.ArgumentOutOfRangeException" vsli:raw="&lt;paramref name=&quot;ruleSet&quot; /&gt; is not defined.">
        <paramref name="ruleSet" /> が定義されていません。</exception>
      <returns vsli:raw="&lt;see langword=&quot;true&quot; /&gt; if &lt;paramref name=&quot;source&quot; /&gt; represents a valid structural encoding for the specified encoding rules; otherwise, &lt;see langword=&quot;false&quot; /&gt;.">
        <paramref name="source" /> が指定したエンコード規則で有効な構造のエンコードを表している場合は <see langword="true" />。それ以外の場合は <see langword="false" />。</returns>
    </member>
    <member name="M:System.Formats.Asn1.AsnDecoder.TryReadInt32(System.ReadOnlySpan{System.Byte},System.Formats.Asn1.AsnEncodingRules,System.Int32@,System.Int32@,System.Nullable{System.Formats.Asn1.Asn1Tag})">
      <summary vsli:raw="Attempts to read an Integer value from &lt;paramref name=&quot;source&quot; /&gt; with a specified tag under the specified encoding rules as a signed 32-bit value.">指定したエンコード規則に基づいて、指定したタグを持つ <paramref name="source" /> から、符号付き 32 ビット値として整数値の読み取りを試みます。</summary>
      <param name="source" vsli:raw="The buffer containing encoded data.">エンコードされたデータを含むバッファー。</param>
      <param name="ruleSet" vsli:raw="The encoding constraints to use when interpreting the data.">データを解釈するときに使用するエンコード制約。</param>
      <param name="value" vsli:raw="On success, receives the interpreted numeric value.&#xA;               This parameter is treated as uninitialized.">成功すると、解釈された数値を受け取ります。
このパラメーターは初期化前として処理されます。</param>
      <param name="bytesConsumed" vsli:raw="When this method returns, the total number of bytes for the encoded value.&#xA;               This parameter is treated as uninitialized.">このメソッドから制御が戻るときに、エンコードされた値の合計バイト数。
このパラメーターは初期化前として処理されます。</param>
      <param name="expectedTag" vsli:raw="The tag to check for before reading, or &lt;see langword=&quot;null&quot; /&gt; for the default tag (Universal 2).">読み取る前にチェックするタグ、または既定のタグ (Universal 2) の場合は <see langword="null" />。</param>
      <exception cref="T:System.ArgumentOutOfRangeException" vsli:raw="&lt;paramref name=&quot;ruleSet&quot; /&gt; is not defined.">
        <paramref name="ruleSet" /> が定義されていません。</exception>
      <exception cref="T:System.Formats.Asn1.AsnContentException" vsli:raw="The next value does not have the correct tag.&#xA;&#xA;-or-&#xA;&#xA;The length encoding is not valid under the current encoding rules.&#xA;&#xA;-or-&#xA;&#xA;The contents are not valid under the current encoding rules.">次の値には、正しいタグがありません。
-または- 現在のエンコード規則では、長さのエンコードが無効です。
-または- 現在のエンコード規則では、コンテンツが有効ではありません。</exception>
      <exception cref="T:System.ArgumentException" vsli:raw="&lt;paramref name=&quot;expectedTag&quot; /&gt;.&lt;see cref=&quot;P:System.Formats.Asn1.Asn1Tag.TagClass&quot; /&gt; is &lt;see cref=&quot;F:System.Formats.Asn1.TagClass.Universal&quot; /&gt;, but &lt;paramref name=&quot;expectedTag&quot; /&gt;.&lt;see cref=&quot;P:System.Formats.Asn1.Asn1Tag.TagValue&quot; /&gt; is not correct for the method.">
        <paramref name="expectedTag" />.<see cref="P:System.Formats.Asn1.Asn1Tag.TagClass" /> は <see cref="F:System.Formats.Asn1.TagClass.Universal" /> ですが、<paramref name="expectedTag" /> です。<see cref="P:System.Formats.Asn1.Asn1Tag.TagValue" /> は、メソッドに対して正しくありません。</exception>
      <returns vsli:raw="&lt;see langword=&quot;true&quot; /&gt; if the Integer represents value is between &lt;see cref=&quot;F:System.Int32.MinValue&quot;&gt;Int32.MinValue&lt;/see&gt; and &lt;see cref=&quot;F:System.Int32.MaxValue&quot;&gt;Int32.MaxValue&lt;/see&gt;, inclusive; otherwise, &lt;see langword=&quot;false&quot; /&gt;.">整数値が <see cref="F:System.Int32.MinValue" /> 以上 <see cref="F:System.Int32.MaxValue" /> 以下の場合は <see langword="true" />。それ以外の場合は <see langword="false" />。</returns>
    </member>
    <member name="M:System.Formats.Asn1.AsnDecoder.TryReadInt64(System.ReadOnlySpan{System.Byte},System.Formats.Asn1.AsnEncodingRules,System.Int64@,System.Int32@,System.Nullable{System.Formats.Asn1.Asn1Tag})">
      <summary vsli:raw="Attempts to read an Integer value from &lt;paramref name=&quot;source&quot; /&gt; with a specified tag under the specified encoding rules as a signed 64-bit value.">指定したエンコード規則に基づいて、指定したタグを持つ <paramref name="source" /> から、符号付き 64 ビット値として整数値の読み取りを試みます。</summary>
      <param name="source" vsli:raw="The buffer containing encoded data.">エンコードされたデータを含むバッファー。</param>
      <param name="ruleSet" vsli:raw="The encoding constraints to use when interpreting the data.">データを解釈するときに使用するエンコード制約。</param>
      <param name="value" vsli:raw="On success, receives the interpreted numeric value.&#xA;               This parameter is treated as uninitialized.">成功すると、解釈された数値を受け取ります。
このパラメーターは初期化前として処理されます。</param>
      <param name="bytesConsumed" vsli:raw="When this method returns, the total number of bytes for the encoded value.&#xA;               This parameter is treated as uninitialized.">このメソッドから制御が戻るときに、エンコードされた値の合計バイト数。
このパラメーターは初期化前として処理されます。</param>
      <param name="expectedTag" vsli:raw="The tag to check for before reading, or &lt;see langword=&quot;null&quot; /&gt; for the default tag (Universal 2).">読み取る前にチェックするタグ、または既定のタグ (Universal 2) の場合は <see langword="null" />。</param>
      <exception cref="T:System.ArgumentOutOfRangeException" vsli:raw="&lt;paramref name=&quot;ruleSet&quot; /&gt; is not defined.">
        <paramref name="ruleSet" /> が定義されていません。</exception>
      <exception cref="T:System.Formats.Asn1.AsnContentException" vsli:raw="The next value does not have the correct tag.&#xA;&#xA;-or-&#xA;&#xA;The length encoding is not valid under the current encoding rules.&#xA;&#xA;-or-&#xA;&#xA;The contents are not valid under the current encoding rules.">次の値には、正しいタグがありません。
-または- 現在のエンコード規則では、長さのエンコードが無効です。
-または- 現在のエンコード規則では、コンテンツが有効ではありません。</exception>
      <exception cref="T:System.ArgumentException" vsli:raw="&lt;paramref name=&quot;expectedTag&quot; /&gt;.&lt;see cref=&quot;P:System.Formats.Asn1.Asn1Tag.TagClass&quot; /&gt; is &lt;see cref=&quot;F:System.Formats.Asn1.TagClass.Universal&quot; /&gt;, but &lt;paramref name=&quot;expectedTag&quot; /&gt;.&lt;see cref=&quot;P:System.Formats.Asn1.Asn1Tag.TagValue&quot; /&gt; is not correct for the method.">
        <paramref name="expectedTag" />.<see cref="P:System.Formats.Asn1.Asn1Tag.TagClass" /> は <see cref="F:System.Formats.Asn1.TagClass.Universal" /> ですが、<paramref name="expectedTag" /> です。<see cref="P:System.Formats.Asn1.Asn1Tag.TagValue" /> は、メソッドに対して正しくありません。</exception>
      <returns vsli:raw="&lt;see langword=&quot;true&quot; /&gt; if the Integer represents value is between &lt;see cref=&quot;F:System.Int64.MinValue&quot;&gt;Int64.MinValue&lt;/see&gt; and &lt;see cref=&quot;F:System.Int64.MaxValue&quot;&gt;Int64.MaxValue&lt;/see&gt;, inclusive; otherwise, &lt;see langword=&quot;false&quot; /&gt;.">整数値が <see cref="F:System.Int64.MinValue" /> 以上 <see cref="F:System.Int64.MaxValue" /> 以下の場合は <see langword="true" />。それ以外の場合は <see langword="false" />。</returns>
    </member>
    <member name="M:System.Formats.Asn1.AsnDecoder.TryReadOctetString(System.ReadOnlySpan{System.Byte},System.Span{System.Byte},System.Formats.Asn1.AsnEncodingRules,System.Int32@,System.Int32@,System.Nullable{System.Formats.Asn1.Asn1Tag})">
      <summary vsli:raw="Attempts to get an Octet String value from &lt;paramref name=&quot;source&quot; /&gt; with a specified tag under the specified encoding rules, copying the value into the provided destination buffer.">指定したエンコード規則に基づいて、指定したタグを持つ <paramref name="source" /> からオクテット文字列値を取得し、指定した対象のバッファーに値のコピーを試みます。</summary>
      <param name="source" vsli:raw="The buffer containing encoded data.">エンコードされたデータを含むバッファー。</param>
      <param name="destination" vsli:raw="The buffer in which to write.">書き込み先のバッファー。</param>
      <param name="ruleSet" vsli:raw="The encoding constraints to use when interpreting the data.">データを解釈するときに使用するエンコード制約。</param>
      <param name="bytesConsumed" vsli:raw="When this method returns, the total number of bytes for the encoded value.&#xA;               This parameter is treated as uninitialized.">このメソッドから制御が戻るときに、エンコードされた値の合計バイト数。
このパラメーターは初期化前として処理されます。</param>
      <param name="bytesWritten" vsli:raw="When this method returns, the total number of bytes written to &lt;paramref name=&quot;destination&quot; /&gt;.&#xA;               This parameter is treated as uninitialized.">このメソッドから制御が戻るときに、<paramref name="destination" /> に書き込まれた合計バイト数。
このパラメーターは初期化前として処理されます。</param>
      <param name="expectedTag" vsli:raw="The tag to check for before reading, or &lt;see langword=&quot;null&quot; /&gt; for the default tag (Universal 4).">読み取る前にチェックするタグ、または既定のタグ (Universal 4) の場合は <see langword="null" />。</param>
      <exception cref="T:System.ArgumentOutOfRangeException" vsli:raw="&lt;paramref name=&quot;ruleSet&quot; /&gt; is not defined.">
        <paramref name="ruleSet" /> が定義されていません。</exception>
      <exception cref="T:System.Formats.Asn1.AsnContentException" vsli:raw="The next value does not have the correct tag.&#xA;&#xA;-or-&#xA;&#xA;The length encoding is not valid under the current encoding rules.&#xA;&#xA;-or-&#xA;&#xA;The contents are not valid under the current encoding rules.">次の値には、正しいタグがありません。
-または- 現在のエンコード規則では、長さのエンコードが無効です。
-または- 現在のエンコード規則では、コンテンツが有効ではありません。</exception>
      <exception cref="T:System.ArgumentException" vsli:raw="&lt;paramref name=&quot;expectedTag&quot; /&gt;.&lt;see cref=&quot;P:System.Formats.Asn1.Asn1Tag.TagClass&quot; /&gt; is &lt;see cref=&quot;F:System.Formats.Asn1.TagClass.Universal&quot; /&gt;, but &lt;paramref name=&quot;expectedTag&quot; /&gt;.&lt;see cref=&quot;P:System.Formats.Asn1.Asn1Tag.TagValue&quot; /&gt; is not correct for the method.&#xA;&#xA;-or-&#xA;&#xA;&lt;paramref name=&quot;destination&quot; /&gt; overlaps &lt;paramref name=&quot;source&quot; /&gt;.">
        <paramref name="expectedTag" />.<see cref="P:System.Formats.Asn1.Asn1Tag.TagClass" /> は <see cref="F:System.Formats.Asn1.TagClass.Universal" /> ですが、<paramref name="expectedTag" /> です。<see cref="P:System.Formats.Asn1.Asn1Tag.TagValue" /> は、メソッドに対して正しくありません。
-または- <paramref name="destination" /> が <paramref name="source" /> と重なっています。</exception>
      <returns vsli:raw="&lt;see langword=&quot;true&quot; /&gt; if &lt;paramref name=&quot;destination&quot; /&gt; is large enough to receive the value of the Octet String; otherwise, &lt;see langword=&quot;false&quot; /&gt;.">
        <paramref name="destination" /> がオクテット文字列の値を受け取ることができる大きさである場合は <see langword="true" />。それ以外の場合は <see langword="false" />。</returns>
    </member>
    <member name="M:System.Formats.Asn1.AsnDecoder.TryReadPrimitiveBitString(System.ReadOnlySpan{System.Byte},System.Formats.Asn1.AsnEncodingRules,System.Int32@,System.ReadOnlySpan{System.Byte}@,System.Int32@,System.Nullable{System.Formats.Asn1.Asn1Tag})">
      <summary vsli:raw="Attempts to get a Bit String value from &lt;paramref name=&quot;source&quot; /&gt; with a specified tag under the specified encoding rules, if the value is contained in a single (primitive) encoding.">ビット文字列値が 1 つの (プリミティブ) エンコードに含まれている場合は、指定したエンコード規則に基づいて、指定したタグを持つ <paramref name="source" /> からその値の取得を試みます。</summary>
      <param name="source" vsli:raw="The buffer containing encoded data.">エンコードされたデータを含むバッファー。</param>
      <param name="ruleSet" vsli:raw="The encoding constraints to use when interpreting the data.">データを解釈するときに使用するエンコード制約。</param>
      <param name="unusedBitCount" vsli:raw="On success, receives the number of bits in the last byte which were reported as &quot;unused&quot; by the writer.&#xA;               This parameter is treated as uninitialized.">成功すると、ライターによって "未使用" として報告された最後のバイトのビット数を受け取ります。
このパラメーターは初期化前として処理されます。</param>
      <param name="value" vsli:raw="On success, receives a slice of the input buffer that corresponds to the value of the Bit String.&#xA;               This parameter is treated as uninitialized.">成功すると、ビット文字列の値に対応する入力バッファーのスライスを受け取ります。
このパラメーターは初期化前として処理されます。</param>
      <param name="bytesConsumed" vsli:raw="When this method returns, the total number of bytes for the encoded value.&#xA;               This parameter is treated as uninitialized.">このメソッドから制御が戻るときに、エンコードされた値の合計バイト数。
このパラメーターは初期化前として処理されます。</param>
      <param name="expectedTag" vsli:raw="The tag to check for before reading, or &lt;see langword=&quot;null&quot; /&gt; for the default tag (Universal 3).">読み取る前にチェックするタグ、または既定のタグ (Universal 3) の場合は <see langword="null" />。</param>
      <exception cref="T:System.ArgumentOutOfRangeException" vsli:raw="&lt;paramref name=&quot;ruleSet&quot; /&gt; is not defined.">
        <paramref name="ruleSet" /> が定義されていません。</exception>
      <exception cref="T:System.Formats.Asn1.AsnContentException" vsli:raw="The next value does not have the correct tag.&#xA;&#xA;-or-&#xA;&#xA;The length encoding is not valid under the current encoding rules.&#xA;&#xA;-or-&#xA;&#xA;The contents are not valid under the current encoding rules.">次の値には、正しいタグがありません。
-または- 現在のエンコード規則では、長さのエンコードが無効です。
-または- 現在のエンコード規則では、コンテンツが有効ではありません。</exception>
      <exception cref="T:System.ArgumentException" vsli:raw="&lt;paramref name=&quot;expectedTag&quot; /&gt;.&lt;see cref=&quot;P:System.Formats.Asn1.Asn1Tag.TagClass&quot; /&gt; is &lt;see cref=&quot;F:System.Formats.Asn1.TagClass.Universal&quot; /&gt;, but &lt;paramref name=&quot;expectedTag&quot; /&gt;.&lt;see cref=&quot;P:System.Formats.Asn1.Asn1Tag.TagValue&quot; /&gt; is not correct for the method.">
        <paramref name="expectedTag" />.<see cref="P:System.Formats.Asn1.Asn1Tag.TagClass" /> は <see cref="F:System.Formats.Asn1.TagClass.Universal" /> ですが、<paramref name="expectedTag" /> です。<see cref="P:System.Formats.Asn1.Asn1Tag.TagValue" /> は、メソッドに対して正しくありません。</exception>
      <returns vsli:raw="&lt;see langword=&quot;true&quot; /&gt; if the Bit String value has a primitive encoding and all of the bits reported as unused are set to 0; otherwise, &lt;see langword=&quot;false&quot; /&gt;.">ビット文字列値にプリミティブ エンコードがあり、未使用として報告されたすべてのビットが 0 に設定されている場合は <see langword="true" />。それ以外の場合は <see langword="false" />。</returns>
    </member>
    <member name="M:System.Formats.Asn1.AsnDecoder.TryReadPrimitiveCharacterStringBytes(System.ReadOnlySpan{System.Byte},System.Formats.Asn1.AsnEncodingRules,System.Formats.Asn1.Asn1Tag,System.ReadOnlySpan{System.Byte}@,System.Int32@)">
      <summary vsli:raw="Attempts to get an unprocessed character string value from &lt;paramref name=&quot;source&quot; /&gt; with a specified tag under the specified encoding rules, if the value is contained in a single (primitive) encoding.">未処理の文字列値が 1 つの (プリミティブ) エンコードに含まれている場合は、指定したエンコード規則に基づいて、指定したタグを持つ <paramref name="source" /> からその値の取得を試みます。</summary>
      <param name="source" vsli:raw="The buffer containing encoded data.">エンコードされたデータを含むバッファー。</param>
      <param name="ruleSet" vsli:raw="The encoding constraints to use when interpreting the data.">データを解釈するときに使用するエンコード制約。</param>
      <param name="expectedTag" vsli:raw="The tag to check for before reading.">読み取る前に確認するタグ。</param>
      <param name="value" vsli:raw="On success, receives a slice of the input buffer that corresponds to the value of the Bit String.&#xA;               This parameter is treated as uninitialized.">成功すると、ビット文字列の値に対応する入力バッファーのスライスを受け取ります。
このパラメーターは初期化前として処理されます。</param>
      <param name="bytesConsumed" vsli:raw="When this method returns, the total number of bytes for the encoded value.&#xA;               This parameter is treated as uninitialized.">このメソッドから制御が戻るときに、エンコードされた値の合計バイト数。
このパラメーターは初期化前として処理されます。</param>
      <exception cref="T:System.ArgumentOutOfRangeException" vsli:raw="&lt;paramref name=&quot;ruleSet&quot; /&gt; is not defined.">
        <paramref name="ruleSet" /> が定義されていません。</exception>
      <exception cref="T:System.Formats.Asn1.AsnContentException" vsli:raw="The next value does not have the correct tag.&#xA;&#xA;-or-&#xA;&#xA;The length encoding is not valid under the current encoding rules.&#xA;&#xA;-or-&#xA;&#xA;The contents are not valid under the current encoding rules.">次の値には、正しいタグがありません。
-または- 現在のエンコード規則では、長さのエンコードが無効です。
-または- 現在のエンコード規則では、コンテンツが有効ではありません。</exception>
      <exception cref="T:System.ArgumentException" vsli:raw="&lt;paramref name=&quot;expectedTag&quot; /&gt;.&lt;see cref=&quot;P:System.Formats.Asn1.Asn1Tag.TagClass&quot; /&gt; is &lt;see cref=&quot;F:System.Formats.Asn1.TagClass.Universal&quot; /&gt;, but &lt;paramref name=&quot;expectedTag&quot; /&gt;.&lt;see cref=&quot;P:System.Formats.Asn1.Asn1Tag.TagValue&quot; /&gt; is not a character string tag type.">
        <paramref name="expectedTag" />.<see cref="P:System.Formats.Asn1.Asn1Tag.TagClass" /> は <see cref="F:System.Formats.Asn1.TagClass.Universal" /> ですが、<paramref name="expectedTag" /> です。<see cref="P:System.Formats.Asn1.Asn1Tag.TagValue" /> は文字列型のタグではありません。</exception>
      <returns vsli:raw="&lt;see langword=&quot;true&quot; /&gt; if the character string value has a primitive encoding; otherwise, &lt;see langword=&quot;false&quot; /&gt;.">文字列値にプリミティブ エンコードがある場合は <see langword="true" />。それ以外の場合は <see langword="false" />。</returns>
    </member>
    <member name="M:System.Formats.Asn1.AsnDecoder.TryReadPrimitiveOctetString(System.ReadOnlySpan{System.Byte},System.Formats.Asn1.AsnEncodingRules,System.ReadOnlySpan{System.Byte}@,System.Int32@,System.Nullable{System.Formats.Asn1.Asn1Tag})">
      <summary vsli:raw="Attempts to get an Octet String value from &lt;paramref name=&quot;source&quot; /&gt; with a specified tag under the specified encoding rules, if the value is contained in a single (primitive) encoding.">オクテット文字列値が 1 つの (プリミティブ) エンコードに含まれている場合は、指定したエンコード規則に基づいて、指定したタグを持つ <paramref name="source" /> からその値の取得を試みます。</summary>
      <param name="source" vsli:raw="The buffer containing encoded data.">エンコードされたデータを含むバッファー。</param>
      <param name="ruleSet" vsli:raw="The encoding constraints to use when interpreting the data.">データを解釈するときに使用するエンコード制約。</param>
      <param name="value" vsli:raw="On success, receives a slice of the input buffer that corresponds to the value of the Octet String.&#xA;               This parameter is treated as uninitialized.">成功すると、オクテット文字列の値に対応する入力バッファーのスライスを受け取ります。
このパラメーターは初期化前として処理されます。</param>
      <param name="bytesConsumed" vsli:raw="When this method returns, the total number of bytes for the encoded value.&#xA;               This parameter is treated as uninitialized.">このメソッドから制御が戻るときに、エンコードされた値の合計バイト数。
このパラメーターは初期化前として処理されます。</param>
      <param name="expectedTag" vsli:raw="The tag to check for before reading, or &lt;see langword=&quot;null&quot; /&gt; for the default tag (Universal 4).">読み取る前にチェックするタグ、または既定のタグ (Universal 4) の場合は <see langword="null" />。</param>
      <exception cref="T:System.ArgumentOutOfRangeException" vsli:raw="&lt;paramref name=&quot;ruleSet&quot; /&gt; is not defined.">
        <paramref name="ruleSet" /> が定義されていません。</exception>
      <exception cref="T:System.Formats.Asn1.AsnContentException" vsli:raw="The next value does not have the correct tag.&#xA;&#xA;-or-&#xA;&#xA;The length encoding is not valid under the current encoding rules.&#xA;&#xA;-or-&#xA;&#xA;The contents are not valid under the current encoding rules.">次の値には、正しいタグがありません。
-または- 現在のエンコード規則では、長さのエンコードが無効です。
-または- 現在のエンコード規則では、コンテンツが有効ではありません。</exception>
      <exception cref="T:System.ArgumentException" vsli:raw="&lt;paramref name=&quot;expectedTag&quot; /&gt;.&lt;see cref=&quot;P:System.Formats.Asn1.Asn1Tag.TagClass&quot; /&gt; is &lt;see cref=&quot;F:System.Formats.Asn1.TagClass.Universal&quot; /&gt;, but &lt;paramref name=&quot;expectedTag&quot; /&gt;.&lt;see cref=&quot;P:System.Formats.Asn1.Asn1Tag.TagValue&quot; /&gt; is not correct for the method.">
        <paramref name="expectedTag" />.<see cref="P:System.Formats.Asn1.Asn1Tag.TagClass" /> は <see cref="F:System.Formats.Asn1.TagClass.Universal" /> ですが、<paramref name="expectedTag" /> です。<see cref="P:System.Formats.Asn1.Asn1Tag.TagValue" /> は、メソッドに対して正しくありません。</exception>
      <returns vsli:raw="&lt;see langword=&quot;true&quot; /&gt; if the Octet String value has a primitive encoding; otherwise, &lt;see langword=&quot;false&quot; /&gt;.">オクテット文字列値にプリミティブ エンコードがある場合は <see langword="true" />。それ以外の場合は <see langword="false" />。</returns>
    </member>
    <member name="M:System.Formats.Asn1.AsnDecoder.TryReadUInt32(System.ReadOnlySpan{System.Byte},System.Formats.Asn1.AsnEncodingRules,System.UInt32@,System.Int32@,System.Nullable{System.Formats.Asn1.Asn1Tag})">
      <summary vsli:raw="Attempts to read an Integer value from &lt;paramref name=&quot;source&quot; /&gt; with a specified tag under the specified encoding rules as an unsigned 32-bit value.">指定したエンコード規則に基づいて、指定したタグを持つ <paramref name="source" /> から、符号なし 32 ビット値として整数値の読み取りを試みます。</summary>
      <param name="source" vsli:raw="The buffer containing encoded data.">エンコードされたデータを含むバッファー。</param>
      <param name="ruleSet" vsli:raw="The encoding constraints to use when interpreting the data.">データを解釈するときに使用するエンコード制約。</param>
      <param name="value" vsli:raw="On success, receives the interpreted numeric value.&#xA;               This parameter is treated as uninitialized.">成功すると、解釈された数値を受け取ります。
このパラメーターは初期化前として処理されます。</param>
      <param name="bytesConsumed" vsli:raw="When this method returns, the total number of bytes for the encoded value.&#xA;               This parameter is treated as uninitialized.">このメソッドから制御が戻るときに、エンコードされた値の合計バイト数。
このパラメーターは初期化前として処理されます。</param>
      <param name="expectedTag" vsli:raw="The tag to check for before reading, or &lt;see langword=&quot;null&quot; /&gt; for the default tag (Universal 2).">読み取る前にチェックするタグ、または既定のタグ (Universal 2) の場合は <see langword="null" />。</param>
      <exception cref="T:System.ArgumentOutOfRangeException" vsli:raw="&lt;paramref name=&quot;ruleSet&quot; /&gt; is not defined.">
        <paramref name="ruleSet" /> が定義されていません。</exception>
      <exception cref="T:System.Formats.Asn1.AsnContentException" vsli:raw="The next value does not have the correct tag.&#xA;&#xA;-or-&#xA;&#xA;The length encoding is not valid under the current encoding rules.&#xA;&#xA;-or-&#xA;&#xA;The contents are not valid under the current encoding rules.">次の値には、正しいタグがありません。
-または- 現在のエンコード規則では、長さのエンコードが無効です。
-または- 現在のエンコード規則では、コンテンツが有効ではありません。</exception>
      <exception cref="T:System.ArgumentException" vsli:raw="&lt;paramref name=&quot;expectedTag&quot; /&gt;.&lt;see cref=&quot;P:System.Formats.Asn1.Asn1Tag.TagClass&quot; /&gt; is &lt;see cref=&quot;F:System.Formats.Asn1.TagClass.Universal&quot; /&gt;, but &lt;paramref name=&quot;expectedTag&quot; /&gt;.&lt;see cref=&quot;P:System.Formats.Asn1.Asn1Tag.TagValue&quot; /&gt; is not correct for the method.">
        <paramref name="expectedTag" />.<see cref="P:System.Formats.Asn1.Asn1Tag.TagClass" /> は <see cref="F:System.Formats.Asn1.TagClass.Universal" /> ですが、<paramref name="expectedTag" /> です。<see cref="P:System.Formats.Asn1.Asn1Tag.TagValue" /> は、メソッドに対して正しくありません。</exception>
      <returns vsli:raw="&lt;see langword=&quot;true&quot; /&gt; if the Integer represents value is between &lt;see cref=&quot;F:System.UInt32.MinValue&quot;&gt;UInt32.MinValue&lt;/see&gt; and &lt;see cref=&quot;F:System.UInt32.MaxValue&quot;&gt;UInt32.MaxValue&lt;/see&gt;, inclusive; otherwise, &lt;see langword=&quot;false&quot; /&gt;.">整数値が <see cref="F:System.UInt32.MinValue" /> 以上 <see cref="F:System.UInt32.MaxValue" /> 以下の場合は <see langword="true" />。それ以外の場合は <see langword="false" />。</returns>
    </member>
    <member name="M:System.Formats.Asn1.AsnDecoder.TryReadUInt64(System.ReadOnlySpan{System.Byte},System.Formats.Asn1.AsnEncodingRules,System.UInt64@,System.Int32@,System.Nullable{System.Formats.Asn1.Asn1Tag})">
      <summary vsli:raw="Attempts to read an Integer value from &lt;paramref name=&quot;source&quot; /&gt; with a specified tag under the specified encoding rules as an unsigned 64-bit value.">指定したエンコード規則に基づいて、指定したタグを持つ <paramref name="source" /> から、符号なし 64 ビット値として整数値の読み取りを試みます。</summary>
      <param name="source" vsli:raw="The buffer containing encoded data.">エンコードされたデータを含むバッファー。</param>
      <param name="ruleSet" vsli:raw="The encoding constraints to use when interpreting the data.">データを解釈するときに使用するエンコード制約。</param>
      <param name="value" vsli:raw="On success, receives the interpreted numeric value.&#xA;               This parameter is treated as uninitialized.">成功すると、解釈された数値を受け取ります。
このパラメーターは初期化前として処理されます。</param>
      <param name="bytesConsumed" vsli:raw="When this method returns, the total number of bytes for the encoded value.&#xA;               This parameter is treated as uninitialized.">このメソッドから制御が戻るときに、エンコードされた値の合計バイト数。
このパラメーターは初期化前として処理されます。</param>
      <param name="expectedTag" vsli:raw="The tag to check for before reading, or &lt;see langword=&quot;null&quot; /&gt; for the default tag (Universal 2).">読み取る前にチェックするタグ、または既定のタグ (Universal 2) の場合は <see langword="null" />。</param>
      <exception cref="T:System.ArgumentOutOfRangeException" vsli:raw="&lt;paramref name=&quot;ruleSet&quot; /&gt; is not defined.">
        <paramref name="ruleSet" /> が定義されていません。</exception>
      <exception cref="T:System.Formats.Asn1.AsnContentException" vsli:raw="The next value does not have the correct tag.&#xA;&#xA;-or-&#xA;&#xA;The length encoding is not valid under the current encoding rules.&#xA;&#xA;-or-&#xA;&#xA;The contents are not valid under the current encoding rules.">次の値には、正しいタグがありません。
-または- 現在のエンコード規則では、長さのエンコードが無効です。
-または- 現在のエンコード規則では、コンテンツが有効ではありません。</exception>
      <exception cref="T:System.ArgumentException" vsli:raw="&lt;paramref name=&quot;expectedTag&quot; /&gt;.&lt;see cref=&quot;P:System.Formats.Asn1.Asn1Tag.TagClass&quot; /&gt; is &lt;see cref=&quot;F:System.Formats.Asn1.TagClass.Universal&quot; /&gt;, but &lt;paramref name=&quot;expectedTag&quot; /&gt;.&lt;see cref=&quot;P:System.Formats.Asn1.Asn1Tag.TagValue&quot; /&gt; is not correct for the method.">
        <paramref name="expectedTag" />.<see cref="P:System.Formats.Asn1.Asn1Tag.TagClass" /> は <see cref="F:System.Formats.Asn1.TagClass.Universal" /> ですが、<paramref name="expectedTag" /> です。<see cref="P:System.Formats.Asn1.Asn1Tag.TagValue" /> は、メソッドに対して正しくありません。</exception>
      <returns vsli:raw="&lt;see langword=&quot;true&quot; /&gt; if the Integer represents value is between &lt;see cref=&quot;F:System.UInt64.MinValue&quot;&gt;UInt64.MinValue&lt;/see&gt; and &lt;see cref=&quot;F:System.UInt64.MaxValue&quot;&gt;UInt64.MaxValue&lt;/see&gt;, inclusive; otherwise, &lt;see langword=&quot;false&quot; /&gt;.">整数値が <see cref="F:System.UInt64.MinValue" /> 以上 <see cref="F:System.UInt64.MaxValue" /> 以下の場合は <see langword="true" />。それ以外の場合は <see langword="false" />。</returns>
    </member>
    <member name="T:System.Formats.Asn1.AsnEncodingRules">
      <summary vsli:raw="The encoding ruleset for an &lt;see cref=&quot;T:System.Formats.Asn1.AsnReader&quot; /&gt; or &lt;see cref=&quot;T:System.Formats.Asn1.AsnWriter&quot; /&gt;.">
        <see cref="T:System.Formats.Asn1.AsnReader" /> または <see cref="T:System.Formats.Asn1.AsnWriter" /> のエンコード規則セットです。</summary>
    </member>
    <member name="F:System.Formats.Asn1.AsnEncodingRules.BER">
      <summary vsli:raw="ITU-T X.690 Basic Encoding Rules.">ITU-T X.690 の基本エンコード規則</summary>
    </member>
    <member name="F:System.Formats.Asn1.AsnEncodingRules.CER">
      <summary vsli:raw="ITU-T X.690 Canonical Encoding Rules.">ITU-T X.690 の正規エンコード規則</summary>
    </member>
    <member name="F:System.Formats.Asn1.AsnEncodingRules.DER">
      <summary vsli:raw="ITU-T X.690 Distinguished Encoding Rules.">ITU-T X.690 Distinguished Encoding Rules</summary>
    </member>
    <member name="T:System.Formats.Asn1.AsnReader">
      <summary vsli:raw="A stateful, forward-only reader for BER-, CER-, or DER-encoded ASN.1 data.">BER、CER、または DER でエンコードされた ASN.1 データのステートフルな順方向専用のリーダー。</summary>
    </member>
    <member name="M:System.Formats.Asn1.AsnReader.#ctor(System.ReadOnlyMemory{System.Byte},System.Formats.Asn1.AsnEncodingRules,System.Formats.Asn1.AsnReaderOptions)">
      <summary vsli:raw="Construct an &lt;see cref=&quot;T:System.Formats.Asn1.AsnReader&quot; /&gt; over &lt;paramref name=&quot;data&quot; /&gt; with a given ruleset.">指定されたルールセットを使用して <paramref name="data" /> の上に <see cref="T:System.Formats.Asn1.AsnReader" /> を構築します。</summary>
      <param name="data" vsli:raw="The data to read.">読み取るデータ。</param>
      <param name="ruleSet" vsli:raw="The encoding constraints for the reader.">リーダーのエンコード制約。</param>
      <param name="options" vsli:raw="Additional options for the reader.">リーダーの追加オプション。</param>
      <exception cref="T:System.ArgumentOutOfRangeException" vsli:raw="&lt;paramref name=&quot;ruleSet&quot; /&gt; is not defined.">
        <paramref name="ruleSet" /> が定義されていません。</exception>
    </member>
    <member name="M:System.Formats.Asn1.AsnReader.PeekContentBytes">
      <summary vsli:raw="Get a &lt;see cref=&quot;T:System.ReadOnlyMemory`1&quot; /&gt; view of the content octets (bytes) of the next encoded value without advancing the reader.">リーダーを前進させることなく、次のエンコードされた値のコンテンツ オクテット (バイト) の <see cref="T:System.ReadOnlyMemory`1" /> ビューを取得します。</summary>
      <exception cref="T:System.Formats.Asn1.AsnContentException" vsli:raw="The reader is positioned at a point where the tag or length is invalid under the current encoding rules.">現在のエンコード規則では、タグまたは長さが無効なポイントにリーダーが配置されています。</exception>
      <returns vsli:raw="The bytes of the contents octets of the next encoded value.">次のエンコードされた値のコンテンツ オクテットのバイト。</returns>
    </member>
    <member name="M:System.Formats.Asn1.AsnReader.PeekEncodedValue">
      <summary vsli:raw="Get a &lt;see cref=&quot;T:System.ReadOnlyMemory`1&quot; /&gt; view of the next encoded value without advancing the reader. For indefinite length encodings this includes the End of Contents marker.">リーダーを前進させることなく、次にエンコードされた値の <see cref="T:System.ReadOnlyMemory`1" /> ビューを取得します。 不定長エンコードの場合、これには End of Contents マーカーが含まれます。</summary>
      <exception cref="T:System.Formats.Asn1.AsnContentException" vsli:raw="The reader is positioned at a point where the tag or length is invalid under the current encoding rules.">現在のエンコード規則では、リーダーはタグまたは長さが無効なポイントに配置されます。</exception>
      <returns vsli:raw="The bytes of the next encoded value.">次にエンコードされた値のバイト。</returns>
    </member>
    <member name="M:System.Formats.Asn1.AsnReader.PeekTag">
      <summary vsli:raw="Read the encoded tag at the next data position, without advancing the reader.">リーダーを前進させることなく、次のデータ位置でエンコードされたタグを読み取ります。</summary>
      <exception cref="T:System.Formats.Asn1.AsnContentException" vsli:raw="A tag could not be decoded at the reader's current position.">リーダーの現在位置でタグをデコードできませんでした。</exception>
      <returns vsli:raw="The decoded tag value.">デコードされたタグ値。</returns>
    </member>
    <member name="M:System.Formats.Asn1.AsnReader.ReadBitString(System.Int32@,System.Nullable{System.Formats.Asn1.Asn1Tag})">
      <summary vsli:raw="Reads the next value as a BIT STRING with a specified tag, returning the value in a byte array.">指定したタグを持つ BIT STRING として次の値を読み取り、値をバイト配列で返します。</summary>
      <param name="unusedBitCount" vsli:raw="On success, receives the number of bits in the last byte which were reported as &quot;unused&quot; by the writer.">成功すると、ライターによって "未使用" として報告された最後のバイトのビット数を受け取ります。</param>
      <param name="expectedTag" vsli:raw="The tag to check for before reading, or &lt;see langword=&quot;null&quot; /&gt; for the default tag (Universal 1).">読み取る前にチェックするタグ、または既定のタグ (Universal 1) の場合は <see langword="null" />。</param>
      <exception cref="T:System.Formats.Asn1.AsnContentException" vsli:raw="The next value does not have the correct tag.&#xA;&#xA;-or-&#xA;&#xA;The length encoding is not valid under the current encoding rules.&#xA;&#xA;-or-&#xA;&#xA;The contents are not valid under the current encoding rules.">次の値には、正しいタグがありません。
-または- 現在のエンコード規則では、長さのエンコードが無効です。
-または- 現在のエンコード規則では、コンテンツが有効ではありません。</exception>
      <exception cref="T:System.ArgumentException" vsli:raw="&lt;paramref name=&quot;expectedTag&quot; /&gt;.&lt;see cref=&quot;P:System.Formats.Asn1.Asn1Tag.TagClass&quot; /&gt; is &lt;see cref=&quot;F:System.Formats.Asn1.TagClass.Universal&quot; /&gt;, but &lt;paramref name=&quot;expectedTag&quot; /&gt;.&lt;see cref=&quot;P:System.Formats.Asn1.Asn1Tag.TagValue&quot; /&gt; is not correct for the method.">
        <paramref name="expectedTag" />.<see cref="P:System.Formats.Asn1.Asn1Tag.TagClass" /> は <see cref="F:System.Formats.Asn1.TagClass.Universal" /> ですが、<paramref name="expectedTag" /> です。<see cref="P:System.Formats.Asn1.Asn1Tag.TagValue" /> は、メソッドに対して正しくありません。</exception>
      <returns vsli:raw="A copy of the value in a newly allocated, precisely sized, array.">新しく割り当てられた、厳密にサイズ指定された配列の値のコピー。</returns>
    </member>
    <member name="M:System.Formats.Asn1.AsnReader.ReadBoolean(System.Nullable{System.Formats.Asn1.Asn1Tag})">
      <summary vsli:raw="Reads the next value as a Boolean with a specified tag.">指定したタグを持つブール値として次の値を読み取ります。</summary>
      <param name="expectedTag" vsli:raw="The tag to check for before reading, or &lt;see langword=&quot;null&quot; /&gt; for the default tag (Universal 1).">読み取る前にチェックするタグ、または既定のタグ (Universal 1) の場合は <see langword="null" />。</param>
      <exception cref="T:System.Formats.Asn1.AsnContentException" vsli:raw="The next value does not have the correct tag.&#xA;&#xA;-or-&#xA;&#xA;The length encoding is not valid under the current encoding rules.&#xA;&#xA;-or-&#xA;&#xA;The contents are not valid under the current encoding rules.">次の値には、正しいタグがありません。
-または- 現在のエンコード規則では、長さのエンコードが無効です。
-または- 現在のエンコード規則では、コンテンツが有効ではありません。</exception>
      <exception cref="T:System.ArgumentException" vsli:raw="&lt;paramref name=&quot;expectedTag&quot; /&gt;.&lt;see cref=&quot;P:System.Formats.Asn1.Asn1Tag.TagClass&quot; /&gt; is &lt;see cref=&quot;F:System.Formats.Asn1.TagClass.Universal&quot; /&gt;, but &lt;paramref name=&quot;expectedTag&quot; /&gt;.&lt;see cref=&quot;P:System.Formats.Asn1.Asn1Tag.TagValue&quot; /&gt; is not correct for the method.">
        <paramref name="expectedTag" />.<see cref="P:System.Formats.Asn1.Asn1Tag.TagClass" /> は <see cref="F:System.Formats.Asn1.TagClass.Universal" /> ですが、<paramref name="expectedTag" /> です。<see cref="P:System.Formats.Asn1.Asn1Tag.TagValue" /> は、メソッドに対して正しくありません。</exception>
      <returns vsli:raw="The decoded value.">デコードされた値。</returns>
    </member>
    <member name="M:System.Formats.Asn1.AsnReader.ReadCharacterString(System.Formats.Asn1.UniversalTagNumber,System.Nullable{System.Formats.Asn1.Asn1Tag})">
      <summary vsli:raw="Reads the next value as character string with the specified tag and encoding type, returning the decoded value as a string.">指定したタグとエンコードの種類を持つ文字列として次の値を読み取り、デコードされた値を文字列として返します。</summary>
      <param name="encodingType" vsli:raw="One of the enumeration values representing the value type to process.">処理する値の型を表す列挙値の 1 つ。</param>
      <param name="expectedTag" vsli:raw="The tag to check for before reading, or &lt;see langword=&quot;null&quot; /&gt; for the universal tag that is appropriate to the requested encoding type.">読み取る前に確認するタグ、または要求されたエンコードの種類に適したユニバーサル タグの場合は <see langword="null" />。</param>
      <exception cref="T:System.ArgumentOutOfRangeException" vsli:raw="&lt;paramref name=&quot;encodingType&quot; /&gt; is not a known character string type.">
        <paramref name="encodingType" /> は既知の文字列型ではありません。</exception>
      <exception cref="T:System.Formats.Asn1.AsnContentException" vsli:raw="The next value does not have the correct tag.&#xA;&#xA;-or-&#xA;&#xA;The length encoding is not valid under the current encoding rules.&#xA;&#xA;-or-&#xA;&#xA;The contents are not valid under the current encoding rules.&#xA;&#xA;-or-&#xA;&#xA;The string did not successfully decode.">次の値には、正しいタグがありません。
-または- 現在のエンコード規則では、長さのエンコードが無効です。
-または- 現在のエンコード規則では、コンテンツが有効ではありません。
-または- 文字列が正常にデコードされませんでした。</exception>
      <exception cref="T:System.ArgumentException" vsli:raw="&lt;paramref name=&quot;expectedTag&quot; /&gt;.&lt;see cref=&quot;P:System.Formats.Asn1.Asn1Tag.TagClass&quot; /&gt; is &lt;see cref=&quot;F:System.Formats.Asn1.TagClass.Universal&quot; /&gt;, but &lt;paramref name=&quot;expectedTag&quot; /&gt;.&lt;see cref=&quot;P:System.Formats.Asn1.Asn1Tag.TagValue&quot; /&gt; is not the same as &lt;paramref name=&quot;encodingType&quot; /&gt;.">
        <paramref name="expectedTag" />.<see cref="P:System.Formats.Asn1.Asn1Tag.TagClass" /> は <see cref="F:System.Formats.Asn1.TagClass.Universal" /> ですが、<paramref name="expectedTag" /> です。<see cref="P:System.Formats.Asn1.Asn1Tag.TagValue" /> は <paramref name="encodingType" /> と同じではありません。</exception>
      <returns vsli:raw="The decoded value.">デコードされた値。</returns>
    </member>
    <member name="M:System.Formats.Asn1.AsnReader.ReadEncodedValue">
      <summary vsli:raw="Get a &lt;see cref=&quot;T:System.ReadOnlyMemory`1&quot; /&gt; view of the next encoded value, and advance the reader past it. For an indefinite length encoding this includes the End of Contents marker.">次にエンコードされた値の <see cref="T:System.ReadOnlyMemory`1" /> ビューを取得し、それを越えてリーダーを進めます。 不定長エンコードの場合、これには End of Contents マーカーが含まれます。</summary>
      <returns vsli:raw="A &lt;see cref=&quot;T:System.ReadOnlyMemory`1&quot; /&gt; view of the next encoded value.">次にエンコードされた値の <see cref="T:System.ReadOnlyMemory`1" /> ビュー。</returns>
    </member>
    <member name="M:System.Formats.Asn1.AsnReader.ReadEnumeratedBytes(System.Nullable{System.Formats.Asn1.Asn1Tag})">
      <summary vsli:raw="Reads the next value as a Enumerated with a specified tag, returning the contents as a &lt;see cref=&quot;T:System.ReadOnlyMemory`1&quot; /&gt; over the original data.">指定されたタグを持つ列挙型として次の値を読み取り、元のデータの内容を <see cref="T:System.ReadOnlyMemory`1" /> として返します。</summary>
      <param name="expectedTag" vsli:raw="The tag to check for before reading, or &lt;see langword=&quot;null&quot; /&gt; for the default tag (Universal 10).">読み取る前にチェックするタグ、または既定のタグ (Universal 10) の場合は <see langword="null" />。</param>
      <exception cref="T:System.Formats.Asn1.AsnContentException" vsli:raw="The next value does not have the correct tag.&#xA;&#xA;-or-&#xA;&#xA;The length encoding is not valid under the current encoding rules.&#xA;&#xA;-or-&#xA;&#xA;The contents are not valid under the current encoding rules.">次の値には、正しいタグがありません。
-または- 現在のエンコード規則では、長さのエンコードが無効です。
-または- 現在のエンコード規則では、コンテンツが有効ではありません。</exception>
      <exception cref="T:System.ArgumentException" vsli:raw="&lt;paramref name=&quot;expectedTag&quot; /&gt;.&lt;see cref=&quot;P:System.Formats.Asn1.Asn1Tag.TagClass&quot; /&gt; is &lt;see cref=&quot;F:System.Formats.Asn1.TagClass.Universal&quot; /&gt;, but &lt;paramref name=&quot;expectedTag&quot; /&gt;.&lt;see cref=&quot;P:System.Formats.Asn1.Asn1Tag.TagValue&quot; /&gt; is not correct for the method.">
        <paramref name="expectedTag" />.<see cref="P:System.Formats.Asn1.Asn1Tag.TagClass" /> は <see cref="F:System.Formats.Asn1.TagClass.Universal" /> ですが、<paramref name="expectedTag" /> です。<see cref="P:System.Formats.Asn1.Asn1Tag.TagValue" /> は、メソッドに対して正しくありません。</exception>
      <returns vsli:raw="The bytes of the Enumerated value, in signed big-endian form.">符号付きビッグ エンディアン形式の列挙値のバイト。</returns>
    </member>
    <member name="M:System.Formats.Asn1.AsnReader.ReadEnumeratedValue(System.Type,System.Nullable{System.Formats.Asn1.Asn1Tag})">
      <summary vsli:raw="Reads the next value as an Enumerated with a specified tag, converting it to the non-[&lt;see cref=&quot;T:System.FlagsAttribute&quot; /&gt;] enum specified by &lt;paramref name=&quot;enumType&quot; /&gt;.">指定したタグを持つ列挙型として次の値を読み取り、<paramref name="enumType" /> で指定された non-[<see cref="T:System.FlagsAttribute" />] 列挙型に変換します。</summary>
      <param name="enumType" vsli:raw="Type object representing the destination type.">ターゲットの型を表す型オブジェクト。</param>
      <param name="expectedTag" vsli:raw="The tag to check for before reading, or &lt;see langword=&quot;null&quot; /&gt; for the default tag (Universal 10).">読み取る前にチェックするタグ、または既定のタグ (Universal 10) の場合は <see langword="null" />。</param>
      <exception cref="T:System.Formats.Asn1.AsnContentException" vsli:raw="The next value does not have the correct tag.&#xA;&#xA;-or-&#xA;&#xA;The length encoding is not valid under the current encoding rules.&#xA;&#xA;-or-&#xA;&#xA;The contents are not valid under the current encoding rules.&#xA;&#xA;-or-&#xA;&#xA;The encoded value is too big to fit in a &lt;paramref name=&quot;enumType&quot; /&gt; value.">次の値には、正しいタグがありません。
-または- 現在のエンコード規則では、長さのエンコードが無効です。
-または- 現在のエンコード規則では、コンテンツが有効ではありません。
-または- エンコードされた値が大きすぎて <paramref name="enumType" /> 値に収まりません。</exception>
      <exception cref="T:System.ArgumentException" vsli:raw="&lt;paramref name=&quot;enumType&quot; /&gt; is not an enum type.&#xA;&#xA;-or-&#xA;&#xA;&lt;paramref name=&quot;enumType&quot; /&gt; was declared with &lt;see cref=&quot;T:System.FlagsAttribute&quot; /&gt;.&#xA;&#xA;-or-&#xA;&#xA;&lt;paramref name=&quot;enumType&quot; /&gt;.&lt;see cref=&quot;P:System.Formats.Asn1.Asn1Tag.TagClass&quot; /&gt; is &lt;see cref=&quot;F:System.Formats.Asn1.TagClass.Universal&quot; /&gt;, but &lt;paramref name=&quot;enumType&quot; /&gt;.&lt;see cref=&quot;P:System.Formats.Asn1.Asn1Tag.TagValue&quot; /&gt; is not correct for the method.">
        <paramref name="enumType" /> は列挙型ではありません。
-または- <paramref name="enumType" /> が <see cref="T:System.FlagsAttribute" /> で宣言されました。
-または- <paramref name="enumType" />。<see cref="P:System.Formats.Asn1.Asn1Tag.TagClass" /> は <see cref="F:System.Formats.Asn1.TagClass.Universal" /> ですが、<paramref name="enumType" /> です。<see cref="P:System.Formats.Asn1.Asn1Tag.TagValue" /> は、メソッドに対して正しくありません。</exception>
      <exception cref="T:System.ArgumentNullException" vsli:raw="&lt;paramref name=&quot;enumType&quot; /&gt; is &lt;see langword=&quot;null&quot; /&gt;.">
        <paramref name="enumType" /> が <see langword="null" />です。</exception>
      <returns vsli:raw="The Enumerated value converted to a &lt;paramref name=&quot;enumType&quot; /&gt;.">
        <paramref name="enumType" /> に変換された列挙値。</returns>
    </member>
    <member name="M:System.Formats.Asn1.AsnReader.ReadEnumeratedValue``1(System.Nullable{System.Formats.Asn1.Asn1Tag})">
      <summary vsli:raw="Reads the next value as an Enumerated with a specified tag, converting it to the non-[&lt;see cref=&quot;T:System.FlagsAttribute&quot; /&gt;] enum specified by &lt;typeparamref name=&quot;TEnum&quot; /&gt;.">指定したタグを持つ列挙型として次の値を読み取り、<typeparamref name="TEnum" /> で指定された non-[<see cref="T:System.FlagsAttribute" />] 列挙型に変換します。</summary>
      <param name="expectedTag" vsli:raw="The tag to check for before reading, or &lt;see langword=&quot;null&quot; /&gt; for the default tag (Universal 10).">読み取る前にチェックするタグ、または既定のタグ (Universal 10) の場合は <see langword="null" />。</param>
      <typeparam name="TEnum" vsli:raw="Destination enum type.">ターゲット列挙型</typeparam>
      <exception cref="T:System.Formats.Asn1.AsnContentException" vsli:raw="The next value does not have the correct tag.&#xA;&#xA;-or-&#xA;&#xA;The length encoding is not valid under the current encoding rules.&#xA;&#xA;-or-&#xA;&#xA;The contents are not valid under the current encoding rules.&#xA;&#xA;-or-&#xA;&#xA;The encoded value is too big to fit in a &lt;paramref name=&quot;TEnum&quot; /&gt; value.">次の値には、正しいタグがありません。
-または- 現在のエンコード規則では、長さのエンコードが無効です。
-または- 現在のエンコード規則では、コンテンツが有効ではありません。
-または- エンコードされた値が大きすぎて <typeparamref name="TEnum" /> 値に収まりません。</exception>
      <exception cref="T:System.ArgumentException" vsli:raw="&lt;typeparamref name=&quot;TEnum&quot; /&gt; is not an enum type.&#xA;&#xA;-or-&#xA;&#xA;&lt;typeparamref name=&quot;TEnum&quot; /&gt; was declared with &lt;see cref=&quot;T:System.FlagsAttribute&quot; /&gt;.&#xA;&#xA;-or-&#xA;&#xA;&lt;paramref name=&quot;expectedTag&quot; /&gt;.&lt;see cref=&quot;P:System.Formats.Asn1.Asn1Tag.TagClass&quot; /&gt; is &lt;see cref=&quot;F:System.Formats.Asn1.TagClass.Universal&quot; /&gt;, but &lt;paramref name=&quot;expectedTag&quot; /&gt;.&lt;see cref=&quot;P:System.Formats.Asn1.Asn1Tag.TagValue&quot; /&gt; is not correct for the method.">
        <typeparamref name="TEnum" /> は列挙型ではありません。
-または- <typeparamref name="TEnum" /> が <see cref="T:System.FlagsAttribute" /> で宣言されました。
-または- <paramref name="expectedTag" />。<see cref="P:System.Formats.Asn1.Asn1Tag.TagClass" /> は <see cref="F:System.Formats.Asn1.TagClass.Universal" /> ですが、<paramref name="expectedTag" /> です。<see cref="P:System.Formats.Asn1.Asn1Tag.TagValue" /> は、メソッドに対して正しくありません。</exception>
      <returns vsli:raw="The Enumerated value converted to a &lt;typeparamref name=&quot;TEnum&quot; /&gt;.">
        <typeparamref name="TEnum" /> に変換された列挙値。</returns>
    </member>
    <member name="M:System.Formats.Asn1.AsnReader.ReadGeneralizedTime(System.Nullable{System.Formats.Asn1.Asn1Tag})">
      <summary vsli:raw="Reads the next value as a GeneralizedTime with a specified tag.">指定したタグを持つ GeneralizedTime として次の値を読み取ります。</summary>
      <param name="expectedTag" vsli:raw="The tag to check for before reading, or &lt;see langword=&quot;null&quot; /&gt; for the default tag (Universal 24).">読み取る前にチェックするタグ、または既定のタグ (Universal 24) の場合は <see langword="null" />。</param>
      <exception cref="T:System.Formats.Asn1.AsnContentException" vsli:raw="The next value does not have the correct tag.&#xA;&#xA;-or-&#xA;&#xA;The length encoding is not valid under the current encoding rules.&#xA;&#xA;-or-&#xA;&#xA;The contents are not valid under the current encoding rules.">次の値には、正しいタグがありません。
-または- 現在のエンコード規則では、長さのエンコードが無効です。
-または- 現在のエンコード規則では、コンテンツが有効ではありません。</exception>
      <exception cref="T:System.ArgumentException" vsli:raw="&lt;paramref name=&quot;expectedTag&quot; /&gt;.&lt;see cref=&quot;P:System.Formats.Asn1.Asn1Tag.TagClass&quot; /&gt; is &lt;see cref=&quot;F:System.Formats.Asn1.TagClass.Universal&quot; /&gt;, but &lt;paramref name=&quot;expectedTag&quot; /&gt;.&lt;see cref=&quot;P:System.Formats.Asn1.Asn1Tag.TagValue&quot; /&gt; is not correct for the method.">
        <paramref name="expectedTag" />.<see cref="P:System.Formats.Asn1.Asn1Tag.TagClass" /> は <see cref="F:System.Formats.Asn1.TagClass.Universal" /> ですが、<paramref name="expectedTag" /> です。<see cref="P:System.Formats.Asn1.Asn1Tag.TagValue" /> は、メソッドに対して正しくありません。</exception>
      <returns vsli:raw="The decoded value.">デコードされた値。</returns>
    </member>
    <member name="M:System.Formats.Asn1.AsnReader.ReadInteger(System.Nullable{System.Formats.Asn1.Asn1Tag})">
      <summary vsli:raw="Reads the next value as an Integer with a specified tag.">指定したタグを持つ整数として次の値を読み取ります。</summary>
      <param name="expectedTag" vsli:raw="The tag to check for before reading, or &lt;see langword=&quot;null&quot; /&gt; for the default tag (Universal 2).">読み取る前にチェックするタグ、または既定のタグ (Universal 2) の場合は <see langword="null" />。</param>
      <exception cref="T:System.Formats.Asn1.AsnContentException" vsli:raw="The next value does not have the correct tag.&#xA;&#xA;-or-&#xA;&#xA;The length encoding is not valid under the current encoding rules.&#xA;&#xA;-or-&#xA;&#xA;The contents are not valid under the current encoding rules.">次の値には、正しいタグがありません。
-または- 現在のエンコード規則では、長さのエンコードが無効です。
-または- 現在のエンコード規則では、コンテンツが有効ではありません。</exception>
      <exception cref="T:System.ArgumentException" vsli:raw="&lt;paramref name=&quot;expectedTag&quot; /&gt;.&lt;see cref=&quot;P:System.Formats.Asn1.Asn1Tag.TagClass&quot; /&gt; is &lt;see cref=&quot;F:System.Formats.Asn1.TagClass.Universal&quot; /&gt;, but &lt;paramref name=&quot;expectedTag&quot; /&gt;.&lt;see cref=&quot;P:System.Formats.Asn1.Asn1Tag.TagValue&quot; /&gt; is not correct for the method.">
        <paramref name="expectedTag" />.<see cref="P:System.Formats.Asn1.Asn1Tag.TagClass" /> は <see cref="F:System.Formats.Asn1.TagClass.Universal" /> ですが、<paramref name="expectedTag" /> です。<see cref="P:System.Formats.Asn1.Asn1Tag.TagValue" /> は、メソッドに対して正しくありません。</exception>
      <returns vsli:raw="The decoded value.">デコードされた値。</returns>
    </member>
    <member name="M:System.Formats.Asn1.AsnReader.ReadIntegerBytes(System.Nullable{System.Formats.Asn1.Asn1Tag})">
      <summary vsli:raw="Reads the next value as a Integer with a specified tag, returning the contents as a &lt;see cref=&quot;T:System.ReadOnlyMemory`1&quot; /&gt; over the original data.">指定したタグを持つ整数として次の値を読み取り、元のデータの内容を <see cref="T:System.ReadOnlyMemory`1" /> として返します。</summary>
      <param name="expectedTag" vsli:raw="The tag to check for before reading, or &lt;see langword=&quot;null&quot; /&gt; for the default tag (Universal 2).">読み取る前にチェックするタグ、または既定のタグ (Universal 2) の場合は <see langword="null" />。</param>
      <exception cref="T:System.Formats.Asn1.AsnContentException" vsli:raw="The next value does not have the correct tag.&#xA;&#xA;-or-&#xA;&#xA;The length encoding is not valid under the current encoding rules.&#xA;&#xA;-or-&#xA;&#xA;The contents are not valid under the current encoding rules.">次の値には、正しいタグがありません。
-または- 現在のエンコード規則では、長さのエンコードが無効です。
-または- 現在のエンコード規則では、コンテンツが有効ではありません。</exception>
      <exception cref="T:System.ArgumentException" vsli:raw="&lt;paramref name=&quot;expectedTag&quot; /&gt;.&lt;see cref=&quot;P:System.Formats.Asn1.Asn1Tag.TagClass&quot; /&gt; is &lt;see cref=&quot;F:System.Formats.Asn1.TagClass.Universal&quot; /&gt;, but &lt;paramref name=&quot;expectedTag&quot; /&gt;.&lt;see cref=&quot;P:System.Formats.Asn1.Asn1Tag.TagValue&quot; /&gt; is not correct for the method.">
        <paramref name="expectedTag" />.<see cref="P:System.Formats.Asn1.Asn1Tag.TagClass" /> は <see cref="F:System.Formats.Asn1.TagClass.Universal" /> ですが、<paramref name="expectedTag" /> です。<see cref="P:System.Formats.Asn1.Asn1Tag.TagValue" /> は、メソッドに対して正しくありません。</exception>
      <returns vsli:raw="The bytes of the Integer value, in signed big-endian form.">符号付きビッグ エンディアン形式の整数値のバイト。</returns>
    </member>
    <member name="M:System.Formats.Asn1.AsnReader.ReadNamedBitList(System.Nullable{System.Formats.Asn1.Asn1Tag})">
      <summary vsli:raw="Reads the next value as a NamedBitList with a specified tag.">指定したタグを持つ NamedBitList として次の値を読み取ります。</summary>
      <param name="expectedTag" vsli:raw="The tag to check for before reading.">読み取る前に確認するタグ。</param>
      <exception cref="T:System.Formats.Asn1.AsnContentException" vsli:raw="The next value does not have the correct tag.&#xA;&#xA;-or-&#xA;&#xA;The length encoding is not valid under the current encoding rules.&#xA;&#xA;-or-&#xA;&#xA;The contents are not valid under the current encoding rules.">次の値には、正しいタグがありません。
-または- 現在のエンコード規則では、長さのエンコードが無効です。
-または- 現在のエンコード規則では、コンテンツが有効ではありません。</exception>
      <exception cref="T:System.ArgumentException" vsli:raw="&lt;paramref name=&quot;expectedTag&quot; /&gt;.&lt;see cref=&quot;P:System.Formats.Asn1.Asn1Tag.TagClass&quot; /&gt; is &lt;see cref=&quot;F:System.Formats.Asn1.TagClass.Universal&quot; /&gt;, but &lt;paramref name=&quot;expectedTag&quot; /&gt;.&lt;see cref=&quot;P:System.Formats.Asn1.Asn1Tag.TagValue&quot; /&gt; is not correct for the method.">
        <paramref name="expectedTag" />.<see cref="P:System.Formats.Asn1.Asn1Tag.TagClass" /> は <see cref="F:System.Formats.Asn1.TagClass.Universal" /> ですが、<paramref name="expectedTag" /> です。<see cref="P:System.Formats.Asn1.Asn1Tag.TagValue" /> は、メソッドに対して正しくありません。</exception>
      <returns vsli:raw="The bits from the encoded value.">エンコードされた値からのビット。</returns>
    </member>
    <member name="M:System.Formats.Asn1.AsnReader.ReadNamedBitListValue(System.Type,System.Nullable{System.Formats.Asn1.Asn1Tag})">
      <summary vsli:raw="Reads the next value as a NamedBitList with a specified tag, converting it to the [&lt;see cref=&quot;T:System.FlagsAttribute&quot; /&gt;] enum specified by &lt;paramref name=&quot;flagsEnumType&quot; /&gt;.">指定したタグを持つ NamedBitList として次の値を読み取り、<paramref name="flagsEnumType" /> で指定された [<see cref="T:System.FlagsAttribute" />] 列挙型に変換します。</summary>
      <param name="flagsEnumType" vsli:raw="Type object representing the destination type.">ターゲットの型を表す型オブジェクト。</param>
      <param name="expectedTag" vsli:raw="The tag to check for before reading.">読み取る前に確認するタグ。</param>
      <exception cref="T:System.Formats.Asn1.AsnContentException" vsli:raw="The next value does not have the correct tag.&#xA;&#xA;-or-&#xA;&#xA;The length encoding is not valid under the current encoding rules.&#xA;&#xA;-or-&#xA;&#xA;The contents are not valid under the current encoding rules.&#xA;&#xA;-or-&#xA;&#xA;The encoded value is too big to fit in a &lt;paramref name=&quot;flagsEnumType&quot; /&gt; value.">次の値には、正しいタグがありません。
-または- 現在のエンコード規則では、長さのエンコードが無効です。
-または- 現在のエンコード規則では、コンテンツが有効ではありません。
-または- エンコードされた値が大きすぎて <paramref name="flagsEnumType" /> 値に収まりません。</exception>
      <exception cref="T:System.ArgumentException" vsli:raw="&lt;paramref name=&quot;flagsEnumType&quot; /&gt; is not an enum type.&#xA;&#xA;-or-&#xA;&#xA;&lt;paramref name=&quot;flagsEnumType&quot; /&gt; was not declared with &lt;see cref=&quot;T:System.FlagsAttribute&quot; /&gt;&#xA;&#xA;-or-&#xA;&#xA;&lt;paramref name=&quot;expectedTag&quot; /&gt;.&lt;see cref=&quot;P:System.Formats.Asn1.Asn1Tag.TagClass&quot; /&gt; is &lt;see cref=&quot;F:System.Formats.Asn1.TagClass.Universal&quot; /&gt;, but &lt;paramref name=&quot;expectedTag&quot; /&gt;.&lt;see cref=&quot;P:System.Formats.Asn1.Asn1Tag.TagValue&quot; /&gt; is not correct for the method.">
        <paramref name="flagsEnumType" /> は列挙型ではありません。
-または- <paramref name="flagsEnumType" /> が <see cref="T:System.FlagsAttribute" /> で宣言されていません。-または- <paramref name="expectedTag" />。<see cref="P:System.Formats.Asn1.Asn1Tag.TagClass" /> は <see cref="F:System.Formats.Asn1.TagClass.Universal" /> ですが、<paramref name="expectedTag" /> です。<see cref="P:System.Formats.Asn1.Asn1Tag.TagValue" /> は、メソッドに対して正しくありません。</exception>
      <exception cref="T:System.ArgumentNullException" vsli:raw="&lt;paramref name=&quot;flagsEnumType&quot; /&gt; is &lt;see langword=&quot;null&quot; /&gt;">
        <paramref name="flagsEnumType" /> が <see langword="null" /> である</exception>
      <returns vsli:raw="The NamedBitList value converted to a &lt;paramref name=&quot;flagsEnumType&quot; /&gt;.">
        <paramref name="flagsEnumType" /> に変換された NamedBitList 値。</returns>
    </member>
    <member name="M:System.Formats.Asn1.AsnReader.ReadNamedBitListValue``1(System.Nullable{System.Formats.Asn1.Asn1Tag})">
      <summary vsli:raw="Reads the next value as a NamedBitList with a specified tag, converting it to the [&lt;see cref=&quot;T:System.FlagsAttribute&quot; /&gt;] enum specified by &lt;typeparamref name=&quot;TFlagsEnum&quot; /&gt;.">指定したタグを持つ NamedBitList として次の値を読み取り、<typeparamref name="TFlagsEnum" /> で指定された [<see cref="T:System.FlagsAttribute" />] 列挙型に変換します。</summary>
      <param name="expectedTag" vsli:raw="The tag to check for before reading.">読み取る前に確認するタグ。</param>
      <typeparam name="TFlagsEnum" vsli:raw="Destination enum type.">ターゲット列挙型</typeparam>
      <exception cref="T:System.Formats.Asn1.AsnContentException" vsli:raw="The next value does not have the correct tag.&#xA;&#xA;-or-&#xA;&#xA;The length encoding is not valid under the current encoding rules.&#xA;&#xA;-or-&#xA;&#xA;The contents are not valid under the current encoding rules.&#xA;&#xA;-or-&#xA;&#xA;The encoded value is too big to fit in a &lt;paramref name=&quot;TFlagsEnum&quot; /&gt; value.">次の値には、正しいタグがありません。
-または- 現在のエンコード規則では、長さのエンコードが無効です。
-または- 現在のエンコード規則では、コンテンツが有効ではありません。
-または- エンコードされた値が大きすぎて <typeparamref name="TFlagsEnum" /> 値に収まりません。</exception>
      <exception cref="T:System.ArgumentException" vsli:raw="&lt;typeparamref name=&quot;TFlagsEnum&quot; /&gt; is not an enum type.&#xA;&#xA;-or-&#xA;&#xA;&lt;typeparamref name=&quot;TFlagsEnum&quot; /&gt; was not declared with &lt;see cref=&quot;T:System.FlagsAttribute&quot; /&gt;&#xA;&#xA;-or-&#xA;&#xA;&lt;paramref name=&quot;expectedTag&quot; /&gt;.&lt;see cref=&quot;P:System.Formats.Asn1.Asn1Tag.TagClass&quot; /&gt; is &lt;see cref=&quot;F:System.Formats.Asn1.TagClass.Universal&quot; /&gt;, but &lt;paramref name=&quot;expectedTag&quot; /&gt;.&lt;see cref=&quot;P:System.Formats.Asn1.Asn1Tag.TagValue&quot; /&gt; is not correct for the method.">
        <typeparamref name="TFlagsEnum" /> は列挙型ではありません。
-または- <typeparamref name="TFlagsEnum" /> が <see cref="T:System.FlagsAttribute" /> で宣言されていません。-または- <paramref name="expectedTag" />。<see cref="P:System.Formats.Asn1.Asn1Tag.TagClass" /> は <see cref="F:System.Formats.Asn1.TagClass.Universal" /> ですが、<paramref name="expectedTag" /> です。<see cref="P:System.Formats.Asn1.Asn1Tag.TagValue" /> は、メソッドに対して正しくありません。</exception>
      <returns vsli:raw="The NamedBitList value converted to a &lt;typeparamref name=&quot;TFlagsEnum&quot; /&gt;.">
        <typeparamref name="TFlagsEnum" /> に変換された NamedBitList 値。</returns>
    </member>
    <member name="M:System.Formats.Asn1.AsnReader.ReadNull(System.Nullable{System.Formats.Asn1.Asn1Tag})">
      <summary vsli:raw="Reads the next value as a NULL with a specified tag.">指定したタグを持つ NULL として次の値を読み取ります。</summary>
      <param name="expectedTag" vsli:raw="The tag to check for before reading, or &lt;see langword=&quot;null&quot; /&gt; for the default tag (Universal 5).">読み取る前にチェックするタグ、または既定のタグ (Universal 5) の場合は <see langword="null" />。</param>
      <exception cref="T:System.Formats.Asn1.AsnContentException" vsli:raw="The next value does not have the correct tag.&#xA;&#xA;-or-&#xA;&#xA;The length encoding is not valid under the current encoding rules.&#xA;&#xA;-or-&#xA;&#xA;The contents are not valid under the current encoding rules.">次の値には、正しいタグがありません。
-または- 現在のエンコード規則では、長さのエンコードが無効です。
-または- 現在のエンコード規則では、コンテンツが有効ではありません。</exception>
      <exception cref="T:System.ArgumentException" vsli:raw="&lt;paramref name=&quot;expectedTag&quot; /&gt;.&lt;see cref=&quot;P:System.Formats.Asn1.Asn1Tag.TagClass&quot; /&gt; is &lt;see cref=&quot;F:System.Formats.Asn1.TagClass.Universal&quot; /&gt;, but &lt;paramref name=&quot;expectedTag&quot; /&gt;.&lt;see cref=&quot;P:System.Formats.Asn1.Asn1Tag.TagValue&quot; /&gt; is not correct for the method.">
        <paramref name="expectedTag" />.<see cref="P:System.Formats.Asn1.Asn1Tag.TagClass" /> は <see cref="F:System.Formats.Asn1.TagClass.Universal" /> ですが、<paramref name="expectedTag" /> です。<see cref="P:System.Formats.Asn1.Asn1Tag.TagValue" /> は、メソッドに対して正しくありません。</exception>
    </member>
    <member name="M:System.Formats.Asn1.AsnReader.ReadObjectIdentifier(System.Nullable{System.Formats.Asn1.Asn1Tag})">
      <summary vsli:raw="Reads the next value as an OBJECT IDENTIFIER with a specified tag, returning the value in a dotted decimal format string.">指定したタグを持つ OBJECT IDENTIFIER として次の値を読み取り、ドット付き 10 進形式の文字列で値を返します。</summary>
      <param name="expectedTag" vsli:raw="The tag to check for before reading, or &lt;see langword=&quot;null&quot; /&gt; for the default tag (Universal 6).">読み取る前にチェックするタグ、または既定のタグ (Universal 6) の場合は <see langword="null" />。</param>
      <exception cref="T:System.Formats.Asn1.AsnContentException" vsli:raw="The next value does not have the correct tag.&#xA;&#xA;-or-&#xA;&#xA;The length encoding is not valid under the current encoding rules.&#xA;&#xA;-or-&#xA;&#xA;The contents are not valid under the current encoding rules.">次の値には、正しいタグがありません。
-または- 現在のエンコード規則では、長さのエンコードが無効です。
-または- 現在のエンコード規則では、コンテンツが有効ではありません。</exception>
      <exception cref="T:System.ArgumentException" vsli:raw="&lt;paramref name=&quot;expectedTag&quot; /&gt;.&lt;see cref=&quot;P:System.Formats.Asn1.Asn1Tag.TagClass&quot; /&gt; is &lt;see cref=&quot;F:System.Formats.Asn1.TagClass.Universal&quot; /&gt;, but &lt;paramref name=&quot;expectedTag&quot; /&gt;.&lt;see cref=&quot;P:System.Formats.Asn1.Asn1Tag.TagValue&quot; /&gt; is not correct for the method.">
        <paramref name="expectedTag" />.<see cref="P:System.Formats.Asn1.Asn1Tag.TagClass" /> は <see cref="F:System.Formats.Asn1.TagClass.Universal" /> ですが、<paramref name="expectedTag" /> です。<see cref="P:System.Formats.Asn1.Asn1Tag.TagValue" /> は、メソッドに対して正しくありません。</exception>
      <returns vsli:raw="The object identifier value in a dotted decimal format string.">ドット付き 10 進形式文字列でのオブジェクト識別子の値。</returns>
    </member>
    <member name="M:System.Formats.Asn1.AsnReader.ReadOctetString(System.Nullable{System.Formats.Asn1.Asn1Tag})">
      <summary vsli:raw="Reads the next value as an OCTET STRING with tag UNIVERSAL 4, returning the value in a byte array.">タグ UNIVERSAL 4 を使用して、OCTET STRING として次の値を読み取り、値をバイト配列で返します。</summary>
      <param name="expectedTag" vsli:raw="The tag to check for before reading, or &lt;see langword=&quot;null&quot; /&gt; for the default tag (Universal 4).">読み取る前にチェックするタグ、または既定のタグ (Universal 4) の場合は <see langword="null" />。</param>
      <exception cref="T:System.Formats.Asn1.AsnContentException" vsli:raw="The next value does not have the correct tag.&#xA;&#xA;-or-&#xA;&#xA;The length encoding is not valid under the current encoding rules.&#xA;&#xA;-or-&#xA;&#xA;The contents are not valid under the current encoding rules.">次の値には、正しいタグがありません。
-または- 現在のエンコード規則では、長さのエンコードが無効です。
-または- 現在のエンコード規則では、コンテンツが有効ではありません。</exception>
      <exception cref="T:System.ArgumentException" vsli:raw="&lt;paramref name=&quot;expectedTag&quot; /&gt;.&lt;see cref=&quot;P:System.Formats.Asn1.Asn1Tag.TagClass&quot; /&gt; is &lt;see cref=&quot;F:System.Formats.Asn1.TagClass.Universal&quot; /&gt;, but &lt;paramref name=&quot;expectedTag&quot; /&gt;.&lt;see cref=&quot;P:System.Formats.Asn1.Asn1Tag.TagValue&quot; /&gt; is not correct for the method.">
        <paramref name="expectedTag" />.<see cref="P:System.Formats.Asn1.Asn1Tag.TagClass" /> は <see cref="F:System.Formats.Asn1.TagClass.Universal" /> ですが、<paramref name="expectedTag" /> です。<see cref="P:System.Formats.Asn1.Asn1Tag.TagValue" /> は、メソッドに対して正しくありません。</exception>
      <returns vsli:raw="A copy of the value in a newly allocated, precisely sized, array.">新しく割り当てられた、厳密にサイズ指定された配列の値のコピー。</returns>
    </member>
    <member name="M:System.Formats.Asn1.AsnReader.ReadSequence(System.Nullable{System.Formats.Asn1.Asn1Tag})">
      <summary vsli:raw="Reads the next value as a SEQUENCE or SEQUENCE-OF with the specified tag and returns the result as a new reader positioned at the first value in the sequence (or with &lt;see cref=&quot;P:System.Formats.Asn1.AsnReader.HasData&quot; /&gt; == &lt;see langword=&quot;false&quot; /&gt;).">指定したタグを持つ SEQUENCE または SEQUENCE-OF として次の値を読み取り、その結果をシーケンスの最初の値 (または <see cref="P:System.Formats.Asn1.AsnReader.HasData" /> == <see langword="false" />) に配置された新しいリーダーとして返します。</summary>
      <param name="expectedTag" vsli:raw="The tag to check for before reading, or &lt;see langword=&quot;null&quot; /&gt; for the default tag (Universal 16).">読み取る前にチェックするタグ、または既定のタグ (Universal 16) の場合は <see langword="null" />。</param>
      <exception cref="T:System.Formats.Asn1.AsnContentException" vsli:raw="The next value does not have the correct tag.&#xA;&#xA;-or-&#xA;&#xA;The length encoding is not valid under the current encoding rules.&#xA;&#xA;-or-&#xA;&#xA;The contents are not valid under the current encoding rules.">次の値には、正しいタグがありません。
-または- 現在のエンコード規則では、長さのエンコードが無効です。
-または- 現在のエンコード規則では、コンテンツが有効ではありません。</exception>
      <exception cref="T:System.ArgumentException" vsli:raw="&lt;paramref name=&quot;expectedTag&quot; /&gt;.&lt;see cref=&quot;P:System.Formats.Asn1.Asn1Tag.TagClass&quot; /&gt; is &lt;see cref=&quot;F:System.Formats.Asn1.TagClass.Universal&quot; /&gt;, but &lt;paramref name=&quot;expectedTag&quot; /&gt;.&lt;see cref=&quot;P:System.Formats.Asn1.Asn1Tag.TagValue&quot; /&gt; is not correct for the method.">
        <paramref name="expectedTag" />.<see cref="P:System.Formats.Asn1.Asn1Tag.TagClass" /> は <see cref="F:System.Formats.Asn1.TagClass.Universal" /> ですが、<paramref name="expectedTag" /> です。<see cref="P:System.Formats.Asn1.Asn1Tag.TagValue" /> は、メソッドに対して正しくありません。</exception>
      <returns vsli:raw="A new reader positioned at the first value in the sequence (or with &lt;see cref=&quot;P:System.Formats.Asn1.AsnReader.HasData&quot; /&gt; == &lt;see langword=&quot;false&quot; /&gt;).">シーケンスの最初の値に (または <see cref="P:System.Formats.Asn1.AsnReader.HasData" /> == <see langword="false" /> を使用して) 配置された新しいリーダー。</returns>
    </member>
    <member name="M:System.Formats.Asn1.AsnReader.ReadSetOf(System.Boolean,System.Nullable{System.Formats.Asn1.Asn1Tag})">
      <summary vsli:raw="Reads the next value as a SET-OF with the specified tag and returns the result as a new reader positioned at the first value in the set-of (or with &lt;see cref=&quot;P:System.Formats.Asn1.AsnReader.HasData&quot; /&gt; == &lt;see langword=&quot;false&quot; /&gt;).">指定したタグを持つ SET-OF として次の値を読み取り、その結果を set-of の最初の値 (または <see cref="P:System.Formats.Asn1.AsnReader.HasData" /> == <see langword="false" />) に配置された新しいリーダーとして返します。</summary>
      <param name="skipSortOrderValidation" vsli:raw="&lt;see langword=&quot;true&quot; /&gt; to always accept the data in the order it is presented, &lt;see langword=&quot;false&quot; /&gt; to verify that the data is sorted correctly when the encoding rules say sorting was required (CER and DER).">表示されている順序でデータを常に受け入れる場合は <see langword="true" />、エンコード規則によって並べ替えが必要なときに、データが正しく並べ替えられていることを確認するには <see langword="false" /> (CER および DER)。</param>
      <param name="expectedTag" vsli:raw="The tag to check for before reading, or &lt;see langword=&quot;null&quot; /&gt; for the default tag (Universal 17).">読み取る前にチェックするタグ、または既定のタグ (Universal 17) の場合は <see langword="null" />。</param>
      <exception cref="T:System.Formats.Asn1.AsnContentException" vsli:raw="The next value does not have the correct tag.&#xA;&#xA;-or-&#xA;&#xA;The length encoding is not valid under the current encoding rules.&#xA;&#xA;-or-&#xA;&#xA;The contents are not valid under the current encoding rules.">次の値には、正しいタグがありません。
-または- 現在のエンコード規則では、長さのエンコードが無効です。
-または- 現在のエンコード規則では、コンテンツが有効ではありません。</exception>
      <exception cref="T:System.ArgumentException" vsli:raw="&lt;paramref name=&quot;expectedTag&quot; /&gt;.&lt;see cref=&quot;P:System.Formats.Asn1.Asn1Tag.TagClass&quot; /&gt; is &lt;see cref=&quot;F:System.Formats.Asn1.TagClass.Universal&quot; /&gt;, but &lt;paramref name=&quot;expectedTag&quot; /&gt;.&lt;see cref=&quot;P:System.Formats.Asn1.Asn1Tag.TagValue&quot; /&gt; is not correct for the method.">
        <paramref name="expectedTag" />.<see cref="P:System.Formats.Asn1.Asn1Tag.TagClass" /> は <see cref="F:System.Formats.Asn1.TagClass.Universal" /> ですが、<paramref name="expectedTag" /> です。<see cref="P:System.Formats.Asn1.Asn1Tag.TagValue" /> は、メソッドに対して正しくありません。</exception>
      <returns vsli:raw="A new reader positioned at the first value in the set-of (or with &lt;see cref=&quot;P:System.Formats.Asn1.AsnReader.HasData&quot; /&gt; == &lt;see langword=&quot;false&quot; /&gt;).">set-of の最初の値 (または <see cref="P:System.Formats.Asn1.AsnReader.HasData" /> == <see langword="false" /> を使用して) に配置された新しいリーダー。</returns>
    </member>
    <member name="M:System.Formats.Asn1.AsnReader.ReadSetOf(System.Nullable{System.Formats.Asn1.Asn1Tag})">
      <summary vsli:raw="Reads the next value as a SET-OF with the specified tag and returns the result as a new reader positioned at the first value in the set-of (or with &lt;see cref=&quot;P:System.Formats.Asn1.AsnReader.HasData&quot; /&gt; == &lt;see langword=&quot;false&quot; /&gt;), using the &lt;see cref=&quot;P:System.Formats.Asn1.AsnReaderOptions.SkipSetSortOrderVerification&quot; /&gt; value from the constructor (default &lt;see langword=&quot;false&quot; /&gt;).">指定したタグを持つ SET-OF として次の値を読み取り、コンストラクターの <see cref="P:System.Formats.Asn1.AsnReaderOptions.SkipSetSortOrderVerification" /> 値 (既定値は <see langword="false" />) を使用して、set-of の最初の値 (または <see cref="P:System.Formats.Asn1.AsnReader.HasData" /> == <see langword="false" /> を使用して) に配置された新しいリーダーとして結果を返します。</summary>
      <param name="expectedTag" vsli:raw="The tag to check for before reading, or &lt;see langword=&quot;null&quot; /&gt; for the default tag (Universal 17).">読み取る前にチェックするタグ、または既定のタグ (Universal 17) の場合は <see langword="null" />。</param>
      <exception cref="T:System.Formats.Asn1.AsnContentException" vsli:raw="The next value does not have the correct tag.&#xA;&#xA;-or-&#xA;&#xA;The length encoding is not valid under the current encoding rules.&#xA;&#xA;-or-&#xA;&#xA;The contents are not valid under the current encoding rules.">次の値には、正しいタグがありません。
-または- 現在のエンコード規則では、長さのエンコードが無効です。
-または- 現在のエンコード規則では、コンテンツが有効ではありません。</exception>
      <exception cref="T:System.ArgumentException" vsli:raw="&lt;paramref name=&quot;expectedTag&quot; /&gt;.&lt;see cref=&quot;P:System.Formats.Asn1.Asn1Tag.TagClass&quot; /&gt; is &lt;see cref=&quot;F:System.Formats.Asn1.TagClass.Universal&quot; /&gt;, but &lt;paramref name=&quot;expectedTag&quot; /&gt;.&lt;see cref=&quot;P:System.Formats.Asn1.Asn1Tag.TagValue&quot; /&gt; is not correct for the method.">
        <paramref name="expectedTag" />.<see cref="P:System.Formats.Asn1.Asn1Tag.TagClass" /> は <see cref="F:System.Formats.Asn1.TagClass.Universal" /> ですが、<paramref name="expectedTag" /> です。<see cref="P:System.Formats.Asn1.Asn1Tag.TagValue" /> は、メソッドに対して正しくありません。</exception>
      <returns vsli:raw="A new reader positioned at the first value in the set-of (or with &lt;see cref=&quot;P:System.Formats.Asn1.AsnReader.HasData&quot; /&gt; == &lt;see langword=&quot;false&quot; /&gt;).">set-of の最初の値 (または <see cref="P:System.Formats.Asn1.AsnReader.HasData" /> == <see langword="false" /> を使用して) に配置された新しいリーダー。</returns>
    </member>
    <member name="M:System.Formats.Asn1.AsnReader.ReadUtcTime(System.Int32,System.Nullable{System.Formats.Asn1.Asn1Tag})">
      <summary vsli:raw="Reads the next value as a UTCTime with a specified tag.">指定したタグを持つ UTCTime として次の値を読み取ります。</summary>
      <param name="twoDigitYearMax" vsli:raw="The largest year to represent with this value.">この値で表される最大の年。</param>
      <param name="expectedTag" vsli:raw="The tag to check for before reading, or &lt;see langword=&quot;null&quot; /&gt; for the default tag (Universal 23).">読み取る前にチェックするタグ、または既定のタグ (Universal 23) の場合は <see langword="null" />。</param>
      <exception cref="T:System.Formats.Asn1.AsnContentException" vsli:raw="The next value does not have the correct tag.&#xA;&#xA;-or-&#xA;&#xA;The length encoding is not valid under the current encoding rules.&#xA;&#xA;-or-&#xA;&#xA;The contents are not valid under the current encoding rules.">次の値には、正しいタグがありません。
-または- 現在のエンコード規則では、長さのエンコードが無効です。
-または- 現在のエンコード規則では、コンテンツが有効ではありません。</exception>
      <exception cref="T:System.ArgumentException" vsli:raw="&lt;paramref name=&quot;expectedTag&quot; /&gt;.&lt;see cref=&quot;P:System.Formats.Asn1.Asn1Tag.TagClass&quot; /&gt; is &lt;see cref=&quot;F:System.Formats.Asn1.TagClass.Universal&quot; /&gt;, but &lt;paramref name=&quot;expectedTag&quot; /&gt;.&lt;see cref=&quot;P:System.Formats.Asn1.Asn1Tag.TagValue&quot; /&gt; is not correct for the method.">
        <paramref name="expectedTag" />.<see cref="P:System.Formats.Asn1.Asn1Tag.TagClass" /> は <see cref="F:System.Formats.Asn1.TagClass.Universal" /> ですが、<paramref name="expectedTag" /> です。<see cref="P:System.Formats.Asn1.Asn1Tag.TagValue" /> は、メソッドに対して正しくありません。</exception>
      <returns vsli:raw="The decoded value.">デコードされた値。</returns>
    </member>
    <member name="M:System.Formats.Asn1.AsnReader.ReadUtcTime(System.Nullable{System.Formats.Asn1.Asn1Tag})">
      <summary vsli:raw="Reads the next value as a UTCTime with a specified tag using the &lt;see cref=&quot;P:System.Formats.Asn1.AsnReaderOptions.UtcTimeTwoDigitYearMax&quot; /&gt; value from options passed to the constructor (with a default of 2049).">コンストラクターに渡されたオプションの <see cref="P:System.Formats.Asn1.AsnReaderOptions.UtcTimeTwoDigitYearMax" /> 値を使用して、指定したタグを持つ UTCTime として次の値を読み取ります (既定値は 2049)。</summary>
      <param name="expectedTag" vsli:raw="The tag to check for before reading, or &lt;see langword=&quot;null&quot; /&gt; for the default tag (Universal 23).">読み取る前にチェックするタグ、または既定のタグ (Universal 23) の場合は <see langword="null" />。</param>
      <exception cref="T:System.Formats.Asn1.AsnContentException" vsli:raw="The next value does not have the correct tag.&#xA;&#xA;-or-&#xA;&#xA;The length encoding is not valid under the current encoding rules.&#xA;&#xA;-or-&#xA;&#xA;The contents are not valid under the current encoding rules.">次の値には、正しいタグがありません。
-または- 現在のエンコード規則では、長さのエンコードが無効です。
-または- 現在のエンコード規則では、コンテンツが有効ではありません。</exception>
      <exception cref="T:System.ArgumentException" vsli:raw="&lt;paramref name=&quot;expectedTag&quot; /&gt;.&lt;see cref=&quot;P:System.Formats.Asn1.Asn1Tag.TagClass&quot; /&gt; is &lt;see cref=&quot;F:System.Formats.Asn1.TagClass.Universal&quot; /&gt;, but &lt;paramref name=&quot;expectedTag&quot; /&gt;.&lt;see cref=&quot;P:System.Formats.Asn1.Asn1Tag.TagValue&quot; /&gt; is not correct for the method.">
        <paramref name="expectedTag" />.<see cref="P:System.Formats.Asn1.Asn1Tag.TagClass" /> は <see cref="F:System.Formats.Asn1.TagClass.Universal" /> ですが、<paramref name="expectedTag" /> です。<see cref="P:System.Formats.Asn1.Asn1Tag.TagValue" /> は、メソッドに対して正しくありません。</exception>
      <returns vsli:raw="The decoded value.">デコードされた値。</returns>
    </member>
    <member name="M:System.Formats.Asn1.AsnReader.ThrowIfNotEmpty">
      <summary vsli:raw="Throws a standardized &lt;see cref=&quot;T:System.Formats.Asn1.AsnContentException&quot; /&gt; if the reader has remaining data, performs no function if &lt;see cref=&quot;P:System.Formats.Asn1.AsnReader.HasData&quot; /&gt; returns &lt;see langword=&quot;false&quot; /&gt;.">リーダーに残りのデータがある場合は標準化された <see cref="T:System.Formats.Asn1.AsnContentException" /> をスローし、<see cref="P:System.Formats.Asn1.AsnReader.HasData" /> が <see langword="false" /> を返す場合は、関数を実行しません。</summary>
    </member>
    <member name="M:System.Formats.Asn1.AsnReader.TryReadBitString(System.Span{System.Byte},System.Int32@,System.Int32@,System.Nullable{System.Formats.Asn1.Asn1Tag})">
      <summary vsli:raw="Reads the next value as a BIT STRING with a specified tag, copying the value into a provided destination buffer.">指定したタグを持つ BIT STRING として次の値を読み取り、指定されたコピー先のバッファーに値をコピーします。</summary>
      <param name="destination" vsli:raw="The buffer in which to write.">書き込み先のバッファー。</param>
      <param name="unusedBitCount" vsli:raw="On success, receives the number of bits in the last byte which were reported as &quot;unused&quot; by the writer.">成功すると、ライターによって "未使用" として報告された最後のバイトのビット数を受け取ります。</param>
      <param name="bytesWritten" vsli:raw="On success, receives the number of bytes written to &lt;paramref name=&quot;destination&quot; /&gt;.">成功すると、<paramref name="destination" /> に書き込まれたバイト数を受け取ります。</param>
      <param name="expectedTag" vsli:raw="The tag to check for before reading, or &lt;see langword=&quot;null&quot; /&gt; for the default tag (Universal 1).">読み取る前にチェックするタグ、または既定のタグ (Universal 1) の場合は <see langword="null" />。</param>
      <exception cref="T:System.Formats.Asn1.AsnContentException" vsli:raw="The next value does not have the correct tag.&#xA;&#xA;-or-&#xA;&#xA;The length encoding is not valid under the current encoding rules.&#xA;&#xA;-or-&#xA;&#xA;The contents are not valid under the current encoding rules.">次の値には、正しいタグがありません。
-または- 現在のエンコード規則では、長さのエンコードが無効です。
-または- 現在のエンコード規則では、コンテンツが有効ではありません。</exception>
      <exception cref="T:System.ArgumentException" vsli:raw="&lt;paramref name=&quot;expectedTag&quot; /&gt;.&lt;see cref=&quot;P:System.Formats.Asn1.Asn1Tag.TagClass&quot; /&gt; is &lt;see cref=&quot;F:System.Formats.Asn1.TagClass.Universal&quot; /&gt;, but &lt;paramref name=&quot;expectedTag&quot; /&gt;.&lt;see cref=&quot;P:System.Formats.Asn1.Asn1Tag.TagValue&quot; /&gt; is not correct for the method.">
        <paramref name="expectedTag" />.<see cref="P:System.Formats.Asn1.Asn1Tag.TagClass" /> は <see cref="F:System.Formats.Asn1.TagClass.Universal" /> ですが、<paramref name="expectedTag" /> です。<see cref="P:System.Formats.Asn1.Asn1Tag.TagValue" /> は、メソッドに対して正しくありません。</exception>
      <returns vsli:raw="&lt;see langword=&quot;true&quot; /&gt; and advances the reader if &lt;paramref name=&quot;destination&quot; /&gt; had sufficient length to receive the value, otherwise &lt;see langword=&quot;false&quot; /&gt; and the reader does not advance.">
        <paramref name="destination" /> に値を受け取るのに十分な長さがある場合は、<see langword="true" /> はリーダーを進め、そうでない場合は、<see langword="false" /> とリーダーは進めません。</returns>
    </member>
    <member name="M:System.Formats.Asn1.AsnReader.TryReadCharacterString(System.Span{System.Char},System.Formats.Asn1.UniversalTagNumber,System.Int32@,System.Nullable{System.Formats.Asn1.Asn1Tag})">
      <summary vsli:raw="Reads the next value as character string with the specified tag and encoding type, copying the decoded value into a provided destination buffer.">指定したタグとエンコードの種類を持つ文字列として次の値を読み取り、デコードされた値を指定したコピー先のバッファーにコピーします。</summary>
      <param name="destination" vsli:raw="The buffer in which to write.">書き込み先のバッファー。</param>
      <param name="encodingType" vsli:raw="One of the enumeration values representing the value type to process.">処理する値の型を表す列挙値の 1 つ。</param>
      <param name="charsWritten" vsli:raw="On success, receives the number of chars written to &lt;paramref name=&quot;destination&quot; /&gt;.">成功すると、<paramref name="destination" /> に書き込まれた文字数を受け取ります。</param>
      <param name="expectedTag" vsli:raw="The tag to check for before reading, or &lt;see langword=&quot;null&quot; /&gt; for the universal tag that is appropriate to the requested encoding type.">読み取る前に確認するタグ、または要求されたエンコードの種類に適したユニバーサル タグの場合は <see langword="null" />。</param>
      <exception cref="T:System.ArgumentOutOfRangeException" vsli:raw="&lt;paramref name=&quot;encodingType&quot; /&gt; is not a known character string type.">
        <paramref name="encodingType" /> は既知の文字列型ではありません。</exception>
      <exception cref="T:System.Formats.Asn1.AsnContentException" vsli:raw="The next value does not have the correct tag.&#xA;&#xA;-or-&#xA;&#xA;The length encoding is not valid under the current encoding rules.&#xA;&#xA;-or-&#xA;&#xA;The contents are not valid under the current encoding rules.&#xA;&#xA;-or-&#xA;&#xA;The string did not successfully decode.">次の値には、正しいタグがありません。
-または- 現在のエンコード規則では、長さのエンコードが無効です。
-または- 現在のエンコード規則では、コンテンツが有効ではありません。
-または- 文字列が正常にデコードされませんでした。</exception>
      <exception cref="T:System.ArgumentException" vsli:raw="&lt;paramref name=&quot;expectedTag&quot; /&gt;.&lt;see cref=&quot;P:System.Formats.Asn1.Asn1Tag.TagClass&quot; /&gt; is &lt;see cref=&quot;F:System.Formats.Asn1.TagClass.Universal&quot; /&gt;, but &lt;paramref name=&quot;expectedTag&quot; /&gt;.&lt;see cref=&quot;P:System.Formats.Asn1.Asn1Tag.TagValue&quot; /&gt; is not the same as &lt;paramref name=&quot;encodingType&quot; /&gt;.">
        <paramref name="expectedTag" />.<see cref="P:System.Formats.Asn1.Asn1Tag.TagClass" /> は <see cref="F:System.Formats.Asn1.TagClass.Universal" /> ですが、<paramref name="expectedTag" /> です。<see cref="P:System.Formats.Asn1.Asn1Tag.TagValue" /> は <paramref name="encodingType" /> と同じではありません。</exception>
      <returns vsli:raw="&lt;see langword=&quot;true&quot; /&gt; and advances the reader if &lt;paramref name=&quot;destination&quot; /&gt; had sufficient length to receive the value, otherwise &lt;see langword=&quot;false&quot; /&gt; and the reader does not advance.">
        <paramref name="destination" /> に値を受け取るのに十分な長さがある場合は、<see langword="true" /> でリーダーを進め、そうでない場合は、<see langword="false" /> でリーダーは進めません。</returns>
    </member>
    <member name="M:System.Formats.Asn1.AsnReader.TryReadCharacterStringBytes(System.Span{System.Byte},System.Formats.Asn1.Asn1Tag,System.Int32@)">
      <summary vsli:raw="Reads the next value as character string with the specified tag, copying the unprocessed bytes into a provided destination buffer.">指定したタグを持つ文字列として次の値を読み取り、未処理のバイトを指定したコピー先のバッファーにコピーします。</summary>
      <param name="destination" vsli:raw="The buffer in which to write.">書き込み先のバッファー。</param>
      <param name="expectedTag" vsli:raw="The tag to check for before reading.">読み取る前に確認するタグ。</param>
      <param name="bytesWritten" vsli:raw="On success, receives the number of bytes written to &lt;paramref name=&quot;destination&quot; /&gt;.">成功すると、<paramref name="destination" /> に書き込まれたバイト数を受け取ります。</param>
      <exception cref="T:System.Formats.Asn1.AsnContentException" vsli:raw="The next value does not have the correct tag.&#xA;&#xA;-or-&#xA;&#xA;The length encoding is not valid under the current encoding rules.&#xA;&#xA;-or-&#xA;&#xA;The contents are not valid under the current encoding rules.">次の値には、正しいタグがありません。
-または- 現在のエンコード規則では、長さのエンコードが無効です。
-または- 現在のエンコード規則では、コンテンツが有効ではありません。</exception>
      <exception cref="T:System.ArgumentException" vsli:raw="&lt;paramref name=&quot;expectedTag&quot; /&gt;.&lt;see cref=&quot;P:System.Formats.Asn1.Asn1Tag.TagClass&quot; /&gt; is &lt;see cref=&quot;F:System.Formats.Asn1.TagClass.Universal&quot; /&gt;, but &lt;paramref name=&quot;expectedTag&quot; /&gt;.&lt;see cref=&quot;P:System.Formats.Asn1.Asn1Tag.TagValue&quot; /&gt; is not a character string tag type.">
        <paramref name="expectedTag" />.<see cref="P:System.Formats.Asn1.Asn1Tag.TagClass" /> は <see cref="F:System.Formats.Asn1.TagClass.Universal" /> ですが、<paramref name="expectedTag" /> です。<see cref="P:System.Formats.Asn1.Asn1Tag.TagValue" /> は文字列型のタグではありません。</exception>
      <returns vsli:raw="&lt;see langword=&quot;true&quot; /&gt; and advances the reader if &lt;paramref name=&quot;destination&quot; /&gt; had sufficient length to receive the value, otherwise &lt;see langword=&quot;false&quot; /&gt; and the reader does not advance.">
        <paramref name="destination" /> に値を受け取るのに十分な長さがある場合は、<see langword="true" /> でリーダーを進め、そうでない場合は、<see langword="false" /> でリーダーは進めません。</returns>
    </member>
    <member name="M:System.Formats.Asn1.AsnReader.TryReadInt32(System.Int32@,System.Nullable{System.Formats.Asn1.Asn1Tag})">
      <summary vsli:raw="Attempts to read the next value as an Integer with a specified tag, as a signed 32-bit value.">次の値を、指定したタグを持つ整数として、符号付き 32 ビット値として読み取ろうとします。</summary>
      <param name="value" vsli:raw="On success, receives the decoded value.">成功した場合は、デコードされた値を受け取ります。</param>
      <param name="expectedTag" vsli:raw="The tag to check for before reading, or &lt;see langword=&quot;null&quot; /&gt; for the default tag (Universal 2).">読み取る前にチェックするタグ、または既定のタグ (Universal 2) の場合は <see langword="null" />。</param>
      <exception cref="T:System.Formats.Asn1.AsnContentException" vsli:raw="The next value does not have the correct tag.&#xA;&#xA;-or-&#xA;&#xA;The length encoding is not valid under the current encoding rules.&#xA;&#xA;-or-&#xA;&#xA;The contents are not valid under the current encoding rules.">次の値には、正しいタグがありません。
-または- 現在のエンコード規則では、長さのエンコードが無効です。
-または- 現在のエンコード規則では、コンテンツが有効ではありません。</exception>
      <exception cref="T:System.ArgumentException" vsli:raw="&lt;paramref name=&quot;expectedTag&quot; /&gt;.&lt;see cref=&quot;P:System.Formats.Asn1.Asn1Tag.TagClass&quot; /&gt; is &lt;see cref=&quot;F:System.Formats.Asn1.TagClass.Universal&quot; /&gt;, but &lt;paramref name=&quot;expectedTag&quot; /&gt;.&lt;see cref=&quot;P:System.Formats.Asn1.Asn1Tag.TagValue&quot; /&gt; is not correct for the method.">
        <paramref name="expectedTag" />.<see cref="P:System.Formats.Asn1.Asn1Tag.TagClass" /> は <see cref="F:System.Formats.Asn1.TagClass.Universal" /> ですが、<paramref name="expectedTag" /> です。<see cref="P:System.Formats.Asn1.Asn1Tag.TagValue" /> は、メソッドに対して正しくありません。</exception>
      <returns vsli:raw="&lt;see langword=&quot;false&quot; /&gt; and does not advance the reader if the value is not between &lt;see cref=&quot;F:System.Int32.MinValue&quot;&gt;Int32.MinValue&lt;/see&gt; and &lt;see cref=&quot;F:System.Int32.MaxValue&quot;&gt;Int32.MaxValue&lt;/see&gt;, inclusive; otherwise &lt;see langword=&quot;true&quot; /&gt; is returned and the reader advances.">値が <see cref="F:System.Int32.MinValue" /> と <see cref="F:System.Int32.MaxValue" /> の間にない場合、<see langword="false" /> でリーダーを進めません。それ以外の場合は <see langword="true" /> が返され、リーダーが進みます。</returns>
    </member>
    <member name="M:System.Formats.Asn1.AsnReader.TryReadInt64(System.Int64@,System.Nullable{System.Formats.Asn1.Asn1Tag})">
      <summary vsli:raw="Attempts to read the next value as an Integer with a specified tag, as a signed 64-bit value.">次の値を、指定したタグを持つ整数として、符号付き 64 ビット値として読み取ろうとします。</summary>
      <param name="value" vsli:raw="On success, receives the decoded value.">成功した場合は、デコードされた値を受け取ります。</param>
      <param name="expectedTag" vsli:raw="The tag to check for before reading, or &lt;see langword=&quot;null&quot; /&gt; for the default tag (Universal 2).">読み取る前にチェックするタグ、または既定のタグ (Universal 2) の場合は <see langword="null" />。</param>
      <exception cref="T:System.Formats.Asn1.AsnContentException" vsli:raw="The next value does not have the correct tag.&#xA;&#xA;-or-&#xA;&#xA;The length encoding is not valid under the current encoding rules.&#xA;&#xA;-or-&#xA;&#xA;The contents are not valid under the current encoding rules.">次の値には、正しいタグがありません。
-または- 現在のエンコード規則では、長さのエンコードが無効です。
-または- 現在のエンコード規則では、コンテンツが有効ではありません。</exception>
      <exception cref="T:System.ArgumentException" vsli:raw="&lt;paramref name=&quot;expectedTag&quot; /&gt;.&lt;see cref=&quot;P:System.Formats.Asn1.Asn1Tag.TagClass&quot; /&gt; is &lt;see cref=&quot;F:System.Formats.Asn1.TagClass.Universal&quot; /&gt;, but &lt;paramref name=&quot;expectedTag&quot; /&gt;.&lt;see cref=&quot;P:System.Formats.Asn1.Asn1Tag.TagValue&quot; /&gt; is not correct for the method.">
        <paramref name="expectedTag" />.<see cref="P:System.Formats.Asn1.Asn1Tag.TagClass" /> は <see cref="F:System.Formats.Asn1.TagClass.Universal" /> ですが、<paramref name="expectedTag" /> です。<see cref="P:System.Formats.Asn1.Asn1Tag.TagValue" /> は、メソッドに対して正しくありません。</exception>
      <returns vsli:raw="&lt;see langword=&quot;false&quot; /&gt; and does not advance the reader if the value is not between &lt;see cref=&quot;F:System.Int64.MinValue&quot;&gt;Int64.MinValue&lt;/see&gt; and &lt;see cref=&quot;F:System.Int64.MaxValue&quot;&gt;Int64.MaxValue&lt;/see&gt;, inclusive; otherwise &lt;see langword=&quot;true&quot; /&gt; is returned and the reader advances.">値が <see cref="F:System.Int64.MinValue" /> と <see cref="F:System.Int64.MaxValue" /> の間にない場合、<see langword="false" /> でリーダーを進めません。それ以外の場合は <see langword="true" /> が返され、リーダーが進みます。</returns>
    </member>
    <member name="M:System.Formats.Asn1.AsnReader.TryReadOctetString(System.Span{System.Byte},System.Int32@,System.Nullable{System.Formats.Asn1.Asn1Tag})">
      <summary vsli:raw="Reads the next value as an OCTET STRING with a specified tag, copying the value into a provided destination buffer.">指定したタグを持つ OCTET STRING として次の値を読み取り、指定されたコピー先のバッファーに値をコピーします。</summary>
      <param name="destination" vsli:raw="The buffer in which to write.">書き込み先のバッファー。</param>
      <param name="bytesWritten" vsli:raw="On success, receives the number of bytes written to &lt;paramref name=&quot;destination&quot; /&gt;.">成功すると、<paramref name="destination" /> に書き込まれたバイト数を受け取ります。</param>
      <param name="expectedTag" vsli:raw="The tag to check for before reading, or &lt;see langword=&quot;null&quot; /&gt; for the default tag (Universal 4).">読み取る前にチェックするタグ、または既定のタグ (Universal 4) の場合は <see langword="null" />。</param>
      <exception cref="T:System.Formats.Asn1.AsnContentException" vsli:raw="The next value does not have the correct tag.&#xA;&#xA;-or-&#xA;&#xA;The length encoding is not valid under the current encoding rules.&#xA;&#xA;-or-&#xA;&#xA;The contents are not valid under the current encoding rules.">次の値には、正しいタグがありません。
-または- 現在のエンコード規則では、長さのエンコードが無効です。
-または- 現在のエンコード規則では、コンテンツが有効ではありません。</exception>
      <exception cref="T:System.ArgumentException" vsli:raw="&lt;paramref name=&quot;expectedTag&quot; /&gt;.&lt;see cref=&quot;P:System.Formats.Asn1.Asn1Tag.TagClass&quot; /&gt; is &lt;see cref=&quot;F:System.Formats.Asn1.TagClass.Universal&quot; /&gt;, but &lt;paramref name=&quot;expectedTag&quot; /&gt;.&lt;see cref=&quot;P:System.Formats.Asn1.Asn1Tag.TagValue&quot; /&gt; is not correct for the method.">
        <paramref name="expectedTag" />.<see cref="P:System.Formats.Asn1.Asn1Tag.TagClass" /> は <see cref="F:System.Formats.Asn1.TagClass.Universal" /> ですが、<paramref name="expectedTag" /> です。<see cref="P:System.Formats.Asn1.Asn1Tag.TagValue" /> は、メソッドに対して正しくありません。</exception>
      <returns vsli:raw="&lt;see langword=&quot;true&quot; /&gt; and advances the reader if &lt;paramref name=&quot;destination&quot; /&gt; had sufficient length to receive the value, otherwise &lt;see langword=&quot;false&quot; /&gt; and the reader does not advance.">
        <paramref name="destination" /> に値を受け取るのに十分な長さがある場合は、<see langword="true" /> でリーダーを進め、そうでない場合は、<see langword="false" /> でリーダーは進めません。</returns>
    </member>
    <member name="M:System.Formats.Asn1.AsnReader.TryReadPrimitiveBitString(System.Int32@,System.ReadOnlyMemory{System.Byte}@,System.Nullable{System.Formats.Asn1.Asn1Tag})">
      <summary vsli:raw="Reads the next value as a BIT STRING with a specified tag, returning the contents as a &lt;see cref=&quot;T:System.ReadOnlyMemory`1&quot; /&gt; over the original data.">指定したタグを持つ BIT STRING として次の値を読み取り、元のデータの内容を <see cref="T:System.ReadOnlyMemory`1" /> として返します。</summary>
      <param name="unusedBitCount" vsli:raw="On success, receives the number of bits in the last byte which were reported as &quot;unused&quot; by the writer.">成功すると、ライターによって "未使用" として報告された最後のバイトのビット数を受け取ります。</param>
      <param name="value" vsli:raw="On success, receives a &lt;see cref=&quot;T:System.ReadOnlyMemory`1&quot; /&gt; over the original data corresponding to the value of the BIT STRING.">成功すると、BIT STRING の値に対応する元のデータに対して <see cref="T:System.ReadOnlyMemory`1" /> を受け取ります。</param>
      <param name="expectedTag" vsli:raw="The tag to check for before reading, or &lt;see langword=&quot;null&quot; /&gt; for the default tag (Universal 1).">読み取る前にチェックするタグ、または既定のタグ (Universal 1) の場合は <see langword="null" />。</param>
      <exception cref="T:System.Formats.Asn1.AsnContentException" vsli:raw="The next value does not have the correct tag.&#xA;&#xA;-or-&#xA;&#xA;The length encoding is not valid under the current encoding rules.&#xA;&#xA;-or-&#xA;&#xA;The contents are not valid under the current encoding rules.">次の値には、正しいタグがありません。
-または- 現在のエンコード規則では、長さのエンコードが無効です。
-または- 現在のエンコード規則では、コンテンツが有効ではありません。</exception>
      <exception cref="T:System.ArgumentException" vsli:raw="&lt;paramref name=&quot;expectedTag&quot; /&gt;.&lt;see cref=&quot;P:System.Formats.Asn1.Asn1Tag.TagClass&quot; /&gt; is &lt;see cref=&quot;F:System.Formats.Asn1.TagClass.Universal&quot; /&gt;, but &lt;paramref name=&quot;expectedTag&quot; /&gt;.&lt;see cref=&quot;P:System.Formats.Asn1.Asn1Tag.TagValue&quot; /&gt; is not correct for the method.">
        <paramref name="expectedTag" />.<see cref="P:System.Formats.Asn1.Asn1Tag.TagClass" /> は <see cref="F:System.Formats.Asn1.TagClass.Universal" /> ですが、<paramref name="expectedTag" /> です。<see cref="P:System.Formats.Asn1.Asn1Tag.TagValue" /> は、メソッドに対して正しくありません。</exception>
      <returns vsli:raw="&lt;see langword=&quot;true&quot; /&gt; and advances the reader if the BIT STRING value had a primitive encoding, &lt;see langword=&quot;false&quot; /&gt; and does not advance the reader if it had a constructed encoding.">BIT STRING 値にプリミティブ エンコードが含まれている場合は、<see langword="true" /> でリーダーを進め、構築されたエンコードがある場合は <see langword="false" /> でリーダーを進めません。</returns>
    </member>
    <member name="M:System.Formats.Asn1.AsnReader.TryReadPrimitiveCharacterStringBytes(System.Formats.Asn1.Asn1Tag,System.ReadOnlyMemory{System.Byte}@)">
      <summary vsli:raw="Reads the next value as a character with a specified tag, returning the contents as an unprocessed &lt;see cref=&quot;T:System.ReadOnlyMemory`1&quot; /&gt; over the original data.">指定したタグを持つ文字として次の値を読み取り、元のデータの内容を未処理の <see cref="T:System.ReadOnlyMemory`1" /> として返します。</summary>
      <param name="expectedTag" vsli:raw="The tag to check for before reading.">読み取る前に確認するタグ。</param>
      <param name="contents" vsli:raw="On success, receives a &lt;see cref=&quot;T:System.ReadOnlyMemory`1&quot; /&gt; over the original data corresponding to the value of the character string.">成功すると、文字列の値に対応する元のデータに対して <see cref="T:System.ReadOnlyMemory`1" /> を受け取ります。</param>
      <exception cref="T:System.Formats.Asn1.AsnContentException" vsli:raw="The next value does not have the correct tag.&#xA;&#xA;-or-&#xA;&#xA;The length encoding is not valid under the current encoding rules.&#xA;&#xA;-or-&#xA;&#xA;The contents are not valid under the current encoding rules.">次の値には、正しいタグがありません。
-または- 現在のエンコード規則では、長さのエンコードが無効です。
-または- 現在のエンコード規則では、コンテンツが有効ではありません。</exception>
      <exception cref="T:System.ArgumentException" vsli:raw="&lt;paramref name=&quot;expectedTag&quot; /&gt;.&lt;see cref=&quot;P:System.Formats.Asn1.Asn1Tag.TagClass&quot; /&gt; is &lt;see cref=&quot;F:System.Formats.Asn1.TagClass.Universal&quot; /&gt;, but &lt;paramref name=&quot;expectedTag&quot; /&gt;.&lt;see cref=&quot;P:System.Formats.Asn1.Asn1Tag.TagValue&quot; /&gt; is not a character string tag type.">
        <paramref name="expectedTag" />.<see cref="P:System.Formats.Asn1.Asn1Tag.TagClass" /> は <see cref="F:System.Formats.Asn1.TagClass.Universal" /> ですが、<paramref name="expectedTag" /> です。<see cref="P:System.Formats.Asn1.Asn1Tag.TagValue" /> は文字列型のタグではありません。</exception>
      <returns vsli:raw="&lt;see langword=&quot;true&quot; /&gt; and advances the reader if the character string value had a primitive encoding, &lt;see langword=&quot;false&quot; /&gt; and does not advance the reader if it had a constructed encoding.">文字列値にプリミティブ エンコードが含まれている場合は、<see langword="true" /> でリーダーを進め、構築されたエンコードがある場合は <see langword="false" /> でリーダーを進めません。</returns>
    </member>
    <member name="M:System.Formats.Asn1.AsnReader.TryReadPrimitiveOctetString(System.ReadOnlyMemory{System.Byte}@,System.Nullable{System.Formats.Asn1.Asn1Tag})">
      <summary vsli:raw="Attempts to read the next value as an OCTET STRING with a specified tag, returning the contents as a &lt;see cref=&quot;T:System.ReadOnlyMemory`1&quot; /&gt; over the original data.">指定したタグを持つ OCTET STRING として次の値を読み取ろうとし、元のデータの内容を <see cref="T:System.ReadOnlyMemory`1" /> として返します。</summary>
      <param name="contents" vsli:raw="On success, receives a &lt;see cref=&quot;T:System.ReadOnlyMemory`1&quot; /&gt; over the original data corresponding to the value of the OCTET STRING.">成功すると、OCTET STRING の値に対応する元のデータに対して <see cref="T:System.ReadOnlyMemory`1" /> を受け取ります。</param>
      <param name="expectedTag" vsli:raw="The tag to check for before reading.">読み取る前に確認するタグ。</param>
      <exception cref="T:System.Formats.Asn1.AsnContentException" vsli:raw="The next value does not have the correct tag.&#xA;&#xA;-or-&#xA;&#xA;The length encoding is not valid under the current encoding rules.&#xA;&#xA;-or-&#xA;&#xA;The contents are not valid under the current encoding rules.">次の値には、正しいタグがありません。
-または- 現在のエンコード規則では、長さのエンコードが無効です。
-または- 現在のエンコード規則では、コンテンツが有効ではありません。</exception>
      <exception cref="T:System.ArgumentException" vsli:raw="&lt;paramref name=&quot;expectedTag&quot; /&gt;.&lt;see cref=&quot;P:System.Formats.Asn1.Asn1Tag.TagClass&quot; /&gt; is &lt;see cref=&quot;F:System.Formats.Asn1.TagClass.Universal&quot; /&gt;, but &lt;paramref name=&quot;expectedTag&quot; /&gt;.&lt;see cref=&quot;P:System.Formats.Asn1.Asn1Tag.TagValue&quot; /&gt; is not correct for the method.">
        <paramref name="expectedTag" />.<see cref="P:System.Formats.Asn1.Asn1Tag.TagClass" /> は <see cref="F:System.Formats.Asn1.TagClass.Universal" /> ですが、<paramref name="expectedTag" /> です。<see cref="P:System.Formats.Asn1.Asn1Tag.TagValue" /> は、メソッドに対して正しくありません。</exception>
      <returns vsli:raw="&lt;see langword=&quot;true&quot; /&gt; and advances the reader if the OCTET STRING value had a primitive encoding, &lt;see langword=&quot;false&quot; /&gt; and does not advance the reader if it had a constructed encoding.">OCTET STRING 値にプリミティブ エンコードが含まれている場合は、<see langword="true" /> でリーダーを進め、構築されたエンコードがある場合は <see langword="false" /> でリーダーを進めません。</returns>
    </member>
    <member name="M:System.Formats.Asn1.AsnReader.TryReadUInt32(System.UInt32@,System.Nullable{System.Formats.Asn1.Asn1Tag})">
      <summary vsli:raw="Attempts to read the next value as an Integer with a specified tag, as an unsigned 32-bit value.">次の値を、指定したタグを持つ整数として、符号なし 32 ビット値として読み取ろうとします。</summary>
      <param name="value" vsli:raw="On success, receives the decoded value.">成功した場合は、デコードされた値を受け取ります。</param>
      <param name="expectedTag" vsli:raw="The tag to check for before reading, or &lt;see langword=&quot;null&quot; /&gt; for the default tag (Universal 2).">読み取る前にチェックするタグ、または既定のタグ (Universal 2) の場合は <see langword="null" />。</param>
      <exception cref="T:System.Formats.Asn1.AsnContentException" vsli:raw="The next value does not have the correct tag.&#xA;&#xA;-or-&#xA;&#xA;The length encoding is not valid under the current encoding rules.&#xA;&#xA;-or-&#xA;&#xA;The contents are not valid under the current encoding rules.">次の値には、正しいタグがありません。
-または- 現在のエンコード規則では、長さのエンコードが無効です。
-または- 現在のエンコード規則では、コンテンツが有効ではありません。</exception>
      <exception cref="T:System.ArgumentException" vsli:raw="&lt;paramref name=&quot;expectedTag&quot; /&gt;.&lt;see cref=&quot;P:System.Formats.Asn1.Asn1Tag.TagClass&quot; /&gt; is &lt;see cref=&quot;F:System.Formats.Asn1.TagClass.Universal&quot; /&gt;, but &lt;paramref name=&quot;expectedTag&quot; /&gt;.&lt;see cref=&quot;P:System.Formats.Asn1.Asn1Tag.TagValue&quot; /&gt; is not correct for the method.">
        <paramref name="expectedTag" />.<see cref="P:System.Formats.Asn1.Asn1Tag.TagClass" /> は <see cref="F:System.Formats.Asn1.TagClass.Universal" /> ですが、<paramref name="expectedTag" /> です。<see cref="P:System.Formats.Asn1.Asn1Tag.TagValue" /> は、メソッドに対して正しくありません。</exception>
      <returns vsli:raw="&lt;see langword=&quot;false&quot; /&gt; and does not advance the reader if the value is not between &lt;see cref=&quot;F:System.UInt32.MinValue&quot;&gt;UInt32.MinValue&lt;/see&gt; and &lt;see cref=&quot;F:System.UInt32.MaxValue&quot;&gt;UInt32.MaxValue&lt;/see&gt;, inclusive; otherwise &lt;see langword=&quot;true&quot; /&gt; is returned and the reader advances.">値が <see cref="F:System.UInt32.MinValue" /> と <see cref="F:System.UInt32.MaxValue" /> の間にない場合、<see langword="false" /> でリーダーを進めません。それ以外の場合は <see langword="true" /> が返され、リーダーが進みます。</returns>
    </member>
    <member name="M:System.Formats.Asn1.AsnReader.TryReadUInt64(System.UInt64@,System.Nullable{System.Formats.Asn1.Asn1Tag})">
      <summary vsli:raw="Attempts to read the next value as an Integer with a specified tag, as an unsigned 64-bit value.">次の値を、指定したタグを持つ整数として、符号なし 64 ビット値として読み取ろうとします。</summary>
      <param name="value" vsli:raw="On success, receives the decoded value.">成功した場合は、デコードされた値を受け取ります。</param>
      <param name="expectedTag" vsli:raw="The tag to check for before reading, or &lt;see langword=&quot;null&quot; /&gt; for the default tag (Universal 2).">読み取る前にチェックするタグ、または既定のタグ (Universal 2) の場合は <see langword="null" />。</param>
      <exception cref="T:System.Formats.Asn1.AsnContentException" vsli:raw="The next value does not have the correct tag.&#xA;&#xA;-or-&#xA;&#xA;The length encoding is not valid under the current encoding rules.&#xA;&#xA;-or-&#xA;&#xA;The contents are not valid under the current encoding rules.">次の値には、正しいタグがありません。
-または- 現在のエンコード規則では、長さのエンコードが無効です。
-または- 現在のエンコード規則では、コンテンツが有効ではありません。</exception>
      <exception cref="T:System.ArgumentException" vsli:raw="&lt;paramref name=&quot;expectedTag&quot; /&gt;.&lt;see cref=&quot;P:System.Formats.Asn1.Asn1Tag.TagClass&quot; /&gt; is &lt;see cref=&quot;F:System.Formats.Asn1.TagClass.Universal&quot; /&gt;, but &lt;paramref name=&quot;expectedTag&quot; /&gt;.&lt;see cref=&quot;P:System.Formats.Asn1.Asn1Tag.TagValue&quot; /&gt; is not correct for the method.">
        <paramref name="expectedTag" />.<see cref="P:System.Formats.Asn1.Asn1Tag.TagClass" /> は <see cref="F:System.Formats.Asn1.TagClass.Universal" /> ですが、<paramref name="expectedTag" /> です。<see cref="P:System.Formats.Asn1.Asn1Tag.TagValue" /> は、メソッドに対して正しくありません。</exception>
      <returns vsli:raw="&lt;see langword=&quot;false&quot; /&gt; and does not advance the reader if the value is not between &lt;see cref=&quot;F:System.UInt64.MinValue&quot;&gt;UInt64.MinValue&lt;/see&gt; and &lt;see cref=&quot;F:System.UInt64.MaxValue&quot;&gt;UInt64.MaxValue&lt;/see&gt;, inclusive; otherwise &lt;see langword=&quot;true&quot; /&gt; is returned and the reader advances.">値が <see cref="F:System.UInt64.MinValue" /> と <see cref="F:System.UInt64.MaxValue" /> の間にない場合、<see langword="false" /> でリーダーを進めません。それ以外の場合は <see langword="true" /> が返され、リーダーが進みます。</returns>
    </member>
    <member name="P:System.Formats.Asn1.AsnReader.HasData">
      <summary vsli:raw="Gets an indication of whether the reader has remaining data available to process.">リーダーが処理可能な残りのデータを持っているかどうかの指標を取得します。</summary>
      <returns vsli:raw="&lt;see langword=&quot;true&quot; /&gt; if there is more data available for the reader to process; otherwise, &lt;see langword=&quot;false&quot; /&gt;.">
        <see langword="true" /> リーダーが処理するデータが他にもある場合は、それ以外の場合は <see langword="false" /> 。</returns>
    </member>
    <member name="P:System.Formats.Asn1.AsnReader.RuleSet">
      <summary vsli:raw="Gets the encoding rules in use by this reader.">このリーダーによって使用されているエンコード規則を取得します。</summary>
      <returns vsli:raw="The encoding rules in use by this reader.">このリーダーによって使用されているエンコーディング規則。</returns>
    </member>
    <member name="T:System.Formats.Asn1.AsnReaderOptions">
      <summary vsli:raw="Specifies options that modify the behavior of an &lt;see cref=&quot;T:System.Formats.Asn1.AsnReader&quot; /&gt;.">
        <see cref="T:System.Formats.Asn1.AsnReader" /> の動作を変更するオプションを指定します。</summary>
    </member>
    <member name="P:System.Formats.Asn1.AsnReaderOptions.SkipSetSortOrderVerification">
      <summary vsli:raw="Gets or sets a value that indicates whether the reader should bypass sort ordering on a Set or Set-Of value.">リーダーが Set 値または Set-Of 値の並べ替え順序をバイパスする必要があるかどうかを示す値を取得または設定します。</summary>
      <returns vsli:raw="&lt;see langword=&quot;true&quot; /&gt; if the reader should not validate that a Set or Set-Of value is sorted correctly for the current encoding rules; otherwise &lt;see langword=&quot;false&quot; /&gt;.&#xA;              The default is &lt;see langword=&quot;false&quot; /&gt;.">
        <see langword="true" /> 現在のエンコーディング規則に対してセットまたはセットの値が正しく並べ替えられていることをリーダーが検証しない場合は。それ以外の場合は <see langword="false" /> 。
既定値は、<see langword="false" /> です。</returns>
    </member>
    <member name="P:System.Formats.Asn1.AsnReaderOptions.UtcTimeTwoDigitYearMax">
      <summary vsli:raw="Gets or sets the largest year to represent with a UtcTime value.">UtcTime 値で表される最大の年を取得または設定します。</summary>
      <returns vsli:raw="The largest year to represent with a UtcTime value. The default is 2049.">UtcTime 値で表される最大の年。 既定値は2049です。</returns>
    </member>
    <member name="T:System.Formats.Asn1.AsnWriter">
      <summary vsli:raw="A writer for BER-, CER-, and DER-encoded ASN.1 data.">BER、CER、および DER でエンコードされた ASN.1 データのライター。</summary>
    </member>
    <member name="M:System.Formats.Asn1.AsnWriter.#ctor(System.Formats.Asn1.AsnEncodingRules)">
      <summary vsli:raw="Create a new &lt;see cref=&quot;T:System.Formats.Asn1.AsnWriter&quot; /&gt; with a given set of encoding rules.">指定されたエンコード規則のセットを使用して、新しい <see cref="T:System.Formats.Asn1.AsnWriter" /> を作成します。</summary>
      <param name="ruleSet" vsli:raw="The encoding constraints for the writer.">ライターのエンコード制約。</param>
      <exception cref="T:System.ArgumentOutOfRangeException" vsli:raw="&lt;paramref name=&quot;ruleSet&quot; /&gt; is not defined.">
        <paramref name="ruleSet" /> が定義されていません。</exception>
    </member>
    <member name="M:System.Formats.Asn1.AsnWriter.CopyTo(System.Formats.Asn1.AsnWriter)">
      <summary vsli:raw="Copy the value of this writer into another.">このライターの値を別のライターにコピーします。</summary>
      <param name="destination" vsli:raw="The writer to receive the value.">値を受け取るライター。</param>
      <exception cref="T:System.ArgumentNullException" vsli:raw="&lt;paramref name=&quot;destination&quot; /&gt; is &lt;see langword=&quot;null&quot; /&gt;.">
        <paramref name="destination" /> が <see langword="null" />です。</exception>
      <exception cref="T:System.InvalidOperationException" vsli:raw="A &lt;see cref=&quot;M:System.Formats.Asn1.AsnWriter.PushSequence(System.Nullable{System.Formats.Asn1.Asn1Tag})&quot; /&gt; or &lt;see cref=&quot;M:System.Formats.Asn1.AsnWriter.PushSetOf(System.Nullable{System.Formats.Asn1.Asn1Tag})&quot; /&gt; has not been closed via &lt;see cref=&quot;M:System.Formats.Asn1.AsnWriter.PopSequence(System.Nullable{System.Formats.Asn1.Asn1Tag})&quot; /&gt; or &lt;see cref=&quot;M:System.Formats.Asn1.AsnWriter.PopSetOf(System.Nullable{System.Formats.Asn1.Asn1Tag})&quot; /&gt;.&#xA;             -or- &#xA;               This writer is empty.&#xA;             -or- &#xA;               This writer represents more than one top-level value.&#xA;             -or- &#xA;               This writer's value is encoded in a manner that is not compatible with the ruleset for the destination writer.">
        <see cref="M:System.Formats.Asn1.AsnWriter.PushSequence(System.Nullable{System.Formats.Asn1.Asn1Tag})" /> または <see cref="M:System.Formats.Asn1.AsnWriter.PushSetOf(System.Nullable{System.Formats.Asn1.Asn1Tag})" /> は、<see cref="M:System.Formats.Asn1.AsnWriter.PopSequence(System.Nullable{System.Formats.Asn1.Asn1Tag})" /> または <see cref="M:System.Formats.Asn1.AsnWriter.PopSetOf(System.Nullable{System.Formats.Asn1.Asn1Tag})" /> を介して閉じられていません。
-または- このライターは空です。
-または- このライターは複数の最上位の値を表します。
-または- このライターの値は、コピー先のライターのルールセットと互換性のない方法でエンコードされています。</exception>
    </member>
    <member name="M:System.Formats.Asn1.AsnWriter.Encode">
      <summary vsli:raw="Return a new array containing the encoded value.">エンコードされた値を含む新しい配列を返します。</summary>
      <exception cref="T:System.InvalidOperationException" vsli:raw="A &lt;see cref=&quot;M:System.Formats.Asn1.AsnWriter.PushSequence(System.Nullable{System.Formats.Asn1.Asn1Tag})&quot; /&gt; or &lt;see cref=&quot;M:System.Formats.Asn1.AsnWriter.PushSetOf(System.Nullable{System.Formats.Asn1.Asn1Tag})&quot; /&gt; has not been closed via &lt;see cref=&quot;M:System.Formats.Asn1.AsnWriter.PopSequence(System.Nullable{System.Formats.Asn1.Asn1Tag})&quot; /&gt; or &lt;see cref=&quot;M:System.Formats.Asn1.AsnWriter.PopSetOf(System.Nullable{System.Formats.Asn1.Asn1Tag})&quot; /&gt;.">
        <see cref="M:System.Formats.Asn1.AsnWriter.PushSequence(System.Nullable{System.Formats.Asn1.Asn1Tag})" /> または <see cref="M:System.Formats.Asn1.AsnWriter.PushSetOf(System.Nullable{System.Formats.Asn1.Asn1Tag})" /> は、<see cref="M:System.Formats.Asn1.AsnWriter.PopSequence(System.Nullable{System.Formats.Asn1.Asn1Tag})" /> または <see cref="M:System.Formats.Asn1.AsnWriter.PopSetOf(System.Nullable{System.Formats.Asn1.Asn1Tag})" /> を介して閉じられていません。</exception>
      <returns vsli:raw="A precisely-sized array containing the encoded value.">エンコードされた値を含む正確にサイズ指定された配列。</returns>
    </member>
    <member name="M:System.Formats.Asn1.AsnWriter.Encode(System.Span{System.Byte})">
      <summary vsli:raw="Writes the encoded representation of the data to &lt;paramref name=&quot;destination&quot; /&gt;.">データのエンコードされた表現を <paramref name="destination" /> に書き込みます。</summary>
      <param name="destination" vsli:raw="The buffer in which to write.">書き込み先のバッファー。</param>
      <exception cref="T:System.InvalidOperationException" vsli:raw="A &lt;see cref=&quot;M:System.Formats.Asn1.AsnWriter.PushSequence(System.Nullable{System.Formats.Asn1.Asn1Tag})&quot; /&gt; or &lt;see cref=&quot;M:System.Formats.Asn1.AsnWriter.PushSetOf(System.Nullable{System.Formats.Asn1.Asn1Tag})&quot; /&gt; has not been closed via &lt;see cref=&quot;M:System.Formats.Asn1.AsnWriter.PopSequence(System.Nullable{System.Formats.Asn1.Asn1Tag})&quot; /&gt; or &lt;see cref=&quot;M:System.Formats.Asn1.AsnWriter.PopSetOf(System.Nullable{System.Formats.Asn1.Asn1Tag})&quot; /&gt;.">
        <see cref="M:System.Formats.Asn1.AsnWriter.PushSequence(System.Nullable{System.Formats.Asn1.Asn1Tag})" /> または <see cref="M:System.Formats.Asn1.AsnWriter.PushSetOf(System.Nullable{System.Formats.Asn1.Asn1Tag})" /> は、<see cref="M:System.Formats.Asn1.AsnWriter.PopSequence(System.Nullable{System.Formats.Asn1.Asn1Tag})" /> または <see cref="M:System.Formats.Asn1.AsnWriter.PopSetOf(System.Nullable{System.Formats.Asn1.Asn1Tag})" /> を介して閉じられていません。</exception>
      <returns vsli:raw="The number of bytes written to &lt;paramref name=&quot;destination&quot; /&gt;.">
        <paramref name="destination" /> に書き込むバイト数。</returns>
    </member>
    <member name="M:System.Formats.Asn1.AsnWriter.EncodedValueEquals(System.Formats.Asn1.AsnWriter)">
      <summary vsli:raw="Determines if &lt;see cref=&quot;M:System.Formats.Asn1.AsnWriter.Encode&quot; /&gt; would produce an output identical to &lt;paramref name=&quot;other&quot; /&gt;.">
        <see cref="M:System.Formats.Asn1.AsnWriter.Encode" /> が <paramref name="other" /> と同じ出力を生成するかどうかを判断します。</summary>
      <param name="other" vsli:raw="The instance to compare encoded values against.">エンコードされた値と比較するインスタンス。</param>
      <exception cref="T:System.ArgumentNullException" vsli:raw="&lt;paramref name=&quot;other&quot; /&gt; is &lt;see langword=&quot;null&quot; /&gt;.">
        <paramref name="other" /> が <see langword="null" />です。</exception>
      <exception cref="T:System.InvalidOperationException" vsli:raw="A &lt;see cref=&quot;M:System.Formats.Asn1.AsnWriter.PushSequence(System.Nullable{System.Formats.Asn1.Asn1Tag})&quot; /&gt; or &lt;see cref=&quot;M:System.Formats.Asn1.AsnWriter.PushSetOf(System.Nullable{System.Formats.Asn1.Asn1Tag})&quot; /&gt; has not been closed via &lt;see cref=&quot;M:System.Formats.Asn1.AsnWriter.PopSequence(System.Nullable{System.Formats.Asn1.Asn1Tag})&quot; /&gt; or &lt;see cref=&quot;M:System.Formats.Asn1.AsnWriter.PopSetOf(System.Nullable{System.Formats.Asn1.Asn1Tag})&quot; /&gt;.">
        <see cref="M:System.Formats.Asn1.AsnWriter.PushSequence(System.Nullable{System.Formats.Asn1.Asn1Tag})" /> または <see cref="M:System.Formats.Asn1.AsnWriter.PushSetOf(System.Nullable{System.Formats.Asn1.Asn1Tag})" /> は、<see cref="M:System.Formats.Asn1.AsnWriter.PopSequence(System.Nullable{System.Formats.Asn1.Asn1Tag})" /> または <see cref="M:System.Formats.Asn1.AsnWriter.PopSetOf(System.Nullable{System.Formats.Asn1.Asn1Tag})" /> を介して閉じられていません。</exception>
      <returns vsli:raw="&lt;see langword=&quot;true&quot; /&gt; if the pending encoded data is identical to &lt;paramref name=&quot;other&quot; /&gt;, &lt;see langword=&quot;false&quot; /&gt; otherwise.">保留中のエンコードされたデータが <paramref name="other" /> と同一である場合は <see langword="true" />、それ以外の場合は<see langword="false" />。</returns>
    </member>
    <member name="M:System.Formats.Asn1.AsnWriter.EncodedValueEquals(System.ReadOnlySpan{System.Byte})">
      <summary vsli:raw="Determines if &lt;see cref=&quot;M:System.Formats.Asn1.AsnWriter.Encode&quot; /&gt; would produce an output identical to &lt;paramref name=&quot;other&quot; /&gt;.">
        <see cref="M:System.Formats.Asn1.AsnWriter.Encode" /> が <paramref name="other" /> と同じ出力を生成するかどうかを判断します。</summary>
      <param name="other" vsli:raw="The encoded value to compare against.">比較対象のエンコードされた値。</param>
      <exception cref="T:System.InvalidOperationException" vsli:raw="A &lt;see cref=&quot;M:System.Formats.Asn1.AsnWriter.PushSequence(System.Nullable{System.Formats.Asn1.Asn1Tag})&quot; /&gt; or &lt;see cref=&quot;M:System.Formats.Asn1.AsnWriter.PushSetOf(System.Nullable{System.Formats.Asn1.Asn1Tag})&quot; /&gt; has not been closed via &lt;see cref=&quot;M:System.Formats.Asn1.AsnWriter.PopSequence(System.Nullable{System.Formats.Asn1.Asn1Tag})&quot; /&gt; or &lt;see cref=&quot;M:System.Formats.Asn1.AsnWriter.PopSetOf(System.Nullable{System.Formats.Asn1.Asn1Tag})&quot; /&gt;.">
        <see cref="M:System.Formats.Asn1.AsnWriter.PushSequence(System.Nullable{System.Formats.Asn1.Asn1Tag})" /> または <see cref="M:System.Formats.Asn1.AsnWriter.PushSetOf(System.Nullable{System.Formats.Asn1.Asn1Tag})" /> は、<see cref="M:System.Formats.Asn1.AsnWriter.PopSequence(System.Nullable{System.Formats.Asn1.Asn1Tag})" /> または <see cref="M:System.Formats.Asn1.AsnWriter.PopSetOf(System.Nullable{System.Formats.Asn1.Asn1Tag})" /> を介して閉じられていません。</exception>
      <returns vsli:raw="&lt;see langword=&quot;true&quot; /&gt; if the pending encoded data is identical to &lt;paramref name=&quot;other&quot; /&gt;, &lt;see langword=&quot;false&quot; /&gt; otherwise.">保留中のエンコードされたデータが <paramref name="other" /> と同一である場合は <see langword="true" />、それ以外の場合は<see langword="false" />。</returns>
    </member>
    <member name="M:System.Formats.Asn1.AsnWriter.GetEncodedLength">
      <summary vsli:raw="Gets the number of bytes that would be written by &lt;see cref=&quot;M:System.Formats.Asn1.AsnWriter.TryEncode(System.Span{System.Byte},System.Int32@)&quot; /&gt;.">
        <see cref="M:System.Formats.Asn1.AsnWriter.TryEncode(System.Span{System.Byte},System.Int32@)" /> によって書き込まれるバイト数を取得します。</summary>
      <exception cref="T:System.InvalidOperationException" vsli:raw="&lt;see cref=&quot;M:System.Formats.Asn1.AsnWriter.PushSequence(System.Nullable{System.Formats.Asn1.Asn1Tag})&quot; /&gt;, &lt;see cref=&quot;M:System.Formats.Asn1.AsnWriter.PushSetOf(System.Nullable{System.Formats.Asn1.Asn1Tag})&quot; /&gt;, or &lt;see cref=&quot;M:System.Formats.Asn1.AsnWriter.PushOctetString(System.Nullable{System.Formats.Asn1.Asn1Tag})&quot; /&gt; was called without the corresponding Pop method.">
        <see cref="M:System.Formats.Asn1.AsnWriter.PushSequence(System.Nullable{System.Formats.Asn1.Asn1Tag})" />、<see cref="M:System.Formats.Asn1.AsnWriter.PushSetOf(System.Nullable{System.Formats.Asn1.Asn1Tag})" />、または <see cref="M:System.Formats.Asn1.AsnWriter.PushOctetString(System.Nullable{System.Formats.Asn1.Asn1Tag})" /> が、対応する Pop メソッドなしで呼び出されました。</exception>
      <returns vsli:raw="The number of bytes that would be written by &lt;see cref=&quot;M:System.Formats.Asn1.AsnWriter.TryEncode(System.Span{System.Byte},System.Int32@)&quot; /&gt;.">
        <see cref="M:System.Formats.Asn1.AsnWriter.TryEncode(System.Span{System.Byte},System.Int32@)" /> によって書き込まれるバイト数。</returns>
    </member>
    <member name="M:System.Formats.Asn1.AsnWriter.PopOctetString(System.Nullable{System.Formats.Asn1.Asn1Tag})">
      <summary vsli:raw="Indicate that the open Octet String with the tag UNIVERSAL 4 is closed, returning the writer to the parent context.">タグ UNIVERSAL 4 を持つオープン オクテット文字列が閉じていることを示し、ライターが親コンテキストに返されます。</summary>
      <param name="tag" vsli:raw="The tag to write, or &lt;see langword=&quot;null&quot; /&gt; for the default tag (Universal 4).">書き込むタグ、または既定のタグ (Universal 4) の場合は <see langword="null" />。</param>
      <exception cref="T:System.ArgumentException" vsli:raw="&lt;paramref name=&quot;tag&quot; /&gt;.&lt;see cref=&quot;P:System.Formats.Asn1.Asn1Tag.TagClass&quot; /&gt; is &lt;see cref=&quot;F:System.Formats.Asn1.TagClass.Universal&quot; /&gt;, but &lt;paramref name=&quot;tag&quot; /&gt;.&lt;see cref=&quot;P:System.Formats.Asn1.Asn1Tag.TagValue&quot; /&gt; is not correct for the method.">
        <paramref name="tag" />.<see cref="P:System.Formats.Asn1.Asn1Tag.TagClass" /> は <see cref="F:System.Formats.Asn1.TagClass.Universal" /> ですが、<paramref name="tag" /> です。<see cref="P:System.Formats.Asn1.Asn1Tag.TagValue" /> は、メソッドに対して正しくありません。</exception>
      <exception cref="T:System.InvalidOperationException" vsli:raw="the writer is not currently positioned within an Octet String with the specified tag.">ライターは、現在、指定されたタグを持つオクテット文字列内に配置されていません。</exception>
    </member>
    <member name="M:System.Formats.Asn1.AsnWriter.PopSequence(System.Nullable{System.Formats.Asn1.Asn1Tag})">
      <summary vsli:raw="Indicate that the open Sequence with the specified tag is closed, returning the writer to the parent context.">指定されたタグを持つオープン シーケンス文字列が閉じていることを示し、ライターが親コンテキストに返されます。</summary>
      <param name="tag" vsli:raw="The tag to write, or &lt;see langword=&quot;null&quot; /&gt; for the default tag (Universal 16).">書き込むタグ、または既定のタグ (Universal 16) の場合は <see langword="null" />。</param>
      <exception cref="T:System.ArgumentException" vsli:raw="&lt;paramref name=&quot;tag&quot; /&gt;.&lt;see cref=&quot;P:System.Formats.Asn1.Asn1Tag.TagClass&quot; /&gt; is &lt;see cref=&quot;F:System.Formats.Asn1.TagClass.Universal&quot; /&gt;, but &lt;paramref name=&quot;tag&quot; /&gt;.&lt;see cref=&quot;P:System.Formats.Asn1.Asn1Tag.TagValue&quot; /&gt; is not correct for the method.">
        <paramref name="tag" />.<see cref="P:System.Formats.Asn1.Asn1Tag.TagClass" /> は <see cref="F:System.Formats.Asn1.TagClass.Universal" /> ですが、<paramref name="tag" /> です。<see cref="P:System.Formats.Asn1.Asn1Tag.TagValue" /> は、メソッドに対して正しくありません。</exception>
      <exception cref="T:System.InvalidOperationException" vsli:raw="the writer is not currently positioned within a Sequence with the specified tag.">ライターは、現在、指定されたタグを持つシーケンス内に配置されていません。</exception>
    </member>
    <member name="M:System.Formats.Asn1.AsnWriter.PopSetOf(System.Nullable{System.Formats.Asn1.Asn1Tag})">
      <summary vsli:raw="Indicate that the open Set-Of with the specified tag is closed, returning the writer to the parent context.">指定されたタグを持つオープン Set-Of が閉じていることを示し、ライターが親コンテキストに返されます。</summary>
      <param name="tag" vsli:raw="The tag to write, or &lt;see langword=&quot;null&quot; /&gt; for the default tag (Universal 17).">書き込むタグ、または既定のタグ (Universal 17) の場合は <see langword="null" />。</param>
      <exception cref="T:System.ArgumentException" vsli:raw="&lt;paramref name=&quot;tag&quot; /&gt;.&lt;see cref=&quot;P:System.Formats.Asn1.Asn1Tag.TagClass&quot; /&gt; is &lt;see cref=&quot;F:System.Formats.Asn1.TagClass.Universal&quot; /&gt;, but &lt;paramref name=&quot;tag&quot; /&gt;.&lt;see cref=&quot;P:System.Formats.Asn1.Asn1Tag.TagValue&quot; /&gt; is not correct for the method.">
        <paramref name="tag" />.<see cref="P:System.Formats.Asn1.Asn1Tag.TagClass" /> は <see cref="F:System.Formats.Asn1.TagClass.Universal" /> ですが、<paramref name="tag" /> です。<see cref="P:System.Formats.Asn1.Asn1Tag.TagValue" /> は、メソッドに対して正しくありません。</exception>
      <exception cref="T:System.InvalidOperationException" vsli:raw="the writer is not currently positioned within a Set-Of with the specified tag.">ライターは、現在、指定されたタグを持つ Set-Of 内に配置されていません。</exception>
    </member>
    <member name="M:System.Formats.Asn1.AsnWriter.PushOctetString(System.Nullable{System.Formats.Asn1.Asn1Tag})">
      <summary vsli:raw="Begin writing an Octet String value with a specified tag.">指定されたタグを持つオクテット文字列値の書き込みを開始します。</summary>
      <param name="tag" vsli:raw="The tag to write, or &lt;see langword=&quot;null&quot; /&gt; for the default tag (Universal 4).">書き込むタグ、または既定のタグ (Universal 4) の場合は <see langword="null" />。</param>
      <returns vsli:raw="A disposable value which will automatically call &lt;see cref=&quot;M:System.Formats.Asn1.AsnWriter.PopOctetString(System.Nullable{System.Formats.Asn1.Asn1Tag})&quot; /&gt;.">
        <see cref="M:System.Formats.Asn1.AsnWriter.PopOctetString(System.Nullable{System.Formats.Asn1.Asn1Tag})" /> を自動的に呼び出す、破棄可能な値。</returns>
    </member>
    <member name="M:System.Formats.Asn1.AsnWriter.PushSequence(System.Nullable{System.Formats.Asn1.Asn1Tag})">
      <summary vsli:raw="Begin writing a Sequence with a specified tag.">指定されたタグを持つシーケンスの書き込みを開始します。</summary>
      <param name="tag" vsli:raw="The tag to write, or &lt;see langword=&quot;null&quot; /&gt; for the default tag (Universal 16).">書き込むタグ、または既定のタグ (Universal 16) の場合は <see langword="null" />。</param>
      <exception cref="T:System.ArgumentException" vsli:raw="&lt;paramref name=&quot;tag&quot; /&gt;.&lt;see cref=&quot;P:System.Formats.Asn1.Asn1Tag.TagClass&quot; /&gt; is &lt;see cref=&quot;F:System.Formats.Asn1.TagClass.Universal&quot; /&gt;, but &lt;paramref name=&quot;tag&quot; /&gt;.&lt;see cref=&quot;P:System.Formats.Asn1.Asn1Tag.TagValue&quot; /&gt; is not correct for the method.">
        <paramref name="tag" />.<see cref="P:System.Formats.Asn1.Asn1Tag.TagClass" /> は <see cref="F:System.Formats.Asn1.TagClass.Universal" /> ですが、<paramref name="tag" /> です。<see cref="P:System.Formats.Asn1.Asn1Tag.TagValue" /> は、メソッドに対して正しくありません。</exception>
      <returns vsli:raw="A disposable value which will automatically call &lt;see cref=&quot;M:System.Formats.Asn1.AsnWriter.PopSequence(System.Nullable{System.Formats.Asn1.Asn1Tag})&quot; /&gt;.">
        <see cref="M:System.Formats.Asn1.AsnWriter.PopSequence(System.Nullable{System.Formats.Asn1.Asn1Tag})" /> を自動的に呼び出す、破棄可能な値。</returns>
    </member>
    <member name="M:System.Formats.Asn1.AsnWriter.PushSetOf(System.Nullable{System.Formats.Asn1.Asn1Tag})">
      <summary vsli:raw="Begin writing a Set-Of with a specified tag.">指定されたタグを持つ Set-Of の書き込みを開始します。</summary>
      <param name="tag" vsli:raw="The tag to write, or &lt;see langword=&quot;null&quot; /&gt; for the default tag (Universal 17).">書き込むタグ、または既定のタグ (Universal 17) の場合は <see langword="null" />。</param>
      <exception cref="T:System.ArgumentException" vsli:raw="&lt;paramref name=&quot;tag&quot; /&gt;.&lt;see cref=&quot;P:System.Formats.Asn1.Asn1Tag.TagClass&quot; /&gt; is &lt;see cref=&quot;F:System.Formats.Asn1.TagClass.Universal&quot; /&gt;, but &lt;paramref name=&quot;tag&quot; /&gt;.&lt;see cref=&quot;P:System.Formats.Asn1.Asn1Tag.TagValue&quot; /&gt; is not correct for the method.">
        <paramref name="tag" />.<see cref="P:System.Formats.Asn1.Asn1Tag.TagClass" /> は <see cref="F:System.Formats.Asn1.TagClass.Universal" /> ですが、<paramref name="tag" /> です。<see cref="P:System.Formats.Asn1.Asn1Tag.TagValue" /> は、メソッドに対して正しくありません。</exception>
      <returns vsli:raw="A disposable value which will automatically call &lt;see cref=&quot;M:System.Formats.Asn1.AsnWriter.PopSetOf(System.Nullable{System.Formats.Asn1.Asn1Tag})&quot; /&gt;.">
        <see cref="M:System.Formats.Asn1.AsnWriter.PopSetOf(System.Nullable{System.Formats.Asn1.Asn1Tag})" /> を自動的に呼び出す、破棄可能な値。</returns>
    </member>
    <member name="M:System.Formats.Asn1.AsnWriter.Reset">
      <summary vsli:raw="Reset the writer to have no data, without releasing resources.">リソースを解放せずに、ライターをリセットしてデータを含めないようにします。</summary>
    </member>
    <member name="M:System.Formats.Asn1.AsnWriter.TryEncode(System.Span{System.Byte},System.Int32@)">
      <summary vsli:raw="Attempts to write the encoded representation of the data to &lt;paramref name=&quot;destination&quot; /&gt;.">データのエンコードされた表現の <paramref name="destination" /> への書き込みを試みます。</summary>
      <param name="destination" vsli:raw="The buffer in which to write.">書き込み先のバッファー。</param>
      <param name="bytesWritten" vsli:raw="On success, receives the number of bytes written to &lt;paramref name=&quot;destination&quot; /&gt;.">成功すると、<paramref name="destination" /> に書き込まれたバイト数を受け取ります。</param>
      <exception cref="T:System.InvalidOperationException" vsli:raw="A &lt;see cref=&quot;M:System.Formats.Asn1.AsnWriter.PushSequence(System.Nullable{System.Formats.Asn1.Asn1Tag})&quot; /&gt; or &lt;see cref=&quot;M:System.Formats.Asn1.AsnWriter.PushSetOf(System.Nullable{System.Formats.Asn1.Asn1Tag})&quot; /&gt; has not been closed via &lt;see cref=&quot;M:System.Formats.Asn1.AsnWriter.PopSequence(System.Nullable{System.Formats.Asn1.Asn1Tag})&quot; /&gt; or &lt;see cref=&quot;M:System.Formats.Asn1.AsnWriter.PopSetOf(System.Nullable{System.Formats.Asn1.Asn1Tag})&quot; /&gt;.">
        <see cref="M:System.Formats.Asn1.AsnWriter.PushSequence(System.Nullable{System.Formats.Asn1.Asn1Tag})" /> または <see cref="M:System.Formats.Asn1.AsnWriter.PushSetOf(System.Nullable{System.Formats.Asn1.Asn1Tag})" /> は、<see cref="M:System.Formats.Asn1.AsnWriter.PopSequence(System.Nullable{System.Formats.Asn1.Asn1Tag})" /> または <see cref="M:System.Formats.Asn1.AsnWriter.PopSetOf(System.Nullable{System.Formats.Asn1.Asn1Tag})" /> を介して閉じられていません。</exception>
      <returns vsli:raw="&lt;see langword=&quot;true&quot; /&gt; if the encode succeeded, &lt;see langword=&quot;false&quot; /&gt; if &lt;paramref name=&quot;destination&quot; /&gt; is too small.">エンコードが成功した場合は <see langword="true" />、<paramref name="destination" /> が小さすぎる場合は <see langword="false" />。</returns>
    </member>
    <member name="M:System.Formats.Asn1.AsnWriter.WriteBitString(System.ReadOnlySpan{System.Byte},System.Int32,System.Nullable{System.Formats.Asn1.Asn1Tag})">
      <summary vsli:raw="Write a Bit String value with a specified tag.">指定されたタグを持つビット文字列値を書き込みます。</summary>
      <param name="value" vsli:raw="The value to write.">書き込む値。</param>
      <param name="unusedBitCount" vsli:raw="The number of trailing bits which are not semantic.">セマンティックではない末尾のビットの数。</param>
      <param name="tag" vsli:raw="The tag to write, or &lt;see langword=&quot;null&quot; /&gt; for the default tag (Universal 3).">書き込むタグ、または既定のタグ (Universal 3) の場合は <see langword="null" />。</param>
      <exception cref="T:System.ArgumentException" vsli:raw="&lt;paramref name=&quot;tag&quot; /&gt;.&lt;see cref=&quot;P:System.Formats.Asn1.Asn1Tag.TagClass&quot; /&gt; is &lt;see cref=&quot;F:System.Formats.Asn1.TagClass.Universal&quot; /&gt;, but &lt;paramref name=&quot;tag&quot; /&gt;.&lt;see cref=&quot;P:System.Formats.Asn1.Asn1Tag.TagValue&quot; /&gt; is not correct for the method.&#xA;             -or- &#xA;               &lt;paramref name=&quot;value&quot; /&gt; has length 0 and &lt;paramref name=&quot;unusedBitCount&quot; /&gt; is not 0 &#xA;               -or- &#xA;               &lt;paramref name=&quot;value&quot; /&gt; is not empty and any of the bits identified by &lt;paramref name=&quot;unusedBitCount&quot; /&gt; is set.">
        <paramref name="tag" />.<see cref="P:System.Formats.Asn1.Asn1Tag.TagClass" /> は <see cref="F:System.Formats.Asn1.TagClass.Universal" /> ですが、<paramref name="tag" /> です。<see cref="P:System.Formats.Asn1.Asn1Tag.TagValue" /> は、メソッドに対して正しくありません。
-または- <paramref name="value" /> の長さが 0 で <paramref name="unusedBitCount" /> が 0 ではありません。-または- <paramref name="value" /> が空ではなく、<paramref name="unusedBitCount" /> で識別されるビットのいずれかが設定されています。</exception>
      <exception cref="T:System.ArgumentOutOfRangeException" vsli:raw="&lt;paramref name=&quot;unusedBitCount&quot; /&gt; is not in the range [0,7].">
        <paramref name="unusedBitCount" /> が [0,7] の範囲内にありません。</exception>
    </member>
    <member name="M:System.Formats.Asn1.AsnWriter.WriteBoolean(System.Boolean,System.Nullable{System.Formats.Asn1.Asn1Tag})">
      <summary vsli:raw="Write a Boolean value with a specified tag.">指定されたタグを持つブール値を書き込みます。</summary>
      <param name="value" vsli:raw="The value to write.">書き込む値。</param>
      <param name="tag" vsli:raw="The tag to write, or &lt;see langword=&quot;null&quot; /&gt; for the default tag (Universal 1).">書き込むタグ、または既定のタグ (Universal 1) の場合は <see langword="null" />。</param>
      <exception cref="T:System.ArgumentException" vsli:raw="&lt;paramref name=&quot;tag&quot; /&gt;.&lt;see cref=&quot;P:System.Formats.Asn1.Asn1Tag.TagClass&quot; /&gt; is &lt;see cref=&quot;F:System.Formats.Asn1.TagClass.Universal&quot; /&gt;, but &lt;paramref name=&quot;tag&quot; /&gt;.&lt;see cref=&quot;P:System.Formats.Asn1.Asn1Tag.TagValue&quot; /&gt; is not correct for the method">
        <paramref name="tag" />.<see cref="P:System.Formats.Asn1.Asn1Tag.TagClass" /> は <see cref="F:System.Formats.Asn1.TagClass.Universal" /> ですが、<paramref name="tag" /> です。<see cref="P:System.Formats.Asn1.Asn1Tag.TagValue" /> は、メソッドに対して正しくありません</exception>
    </member>
    <member name="M:System.Formats.Asn1.AsnWriter.WriteCharacterString(System.Formats.Asn1.UniversalTagNumber,System.ReadOnlySpan{System.Char},System.Nullable{System.Formats.Asn1.Asn1Tag})">
      <summary vsli:raw="Write the provided string using the specified encoding type using the specified tag corresponding to the encoding type.">エンコードの種類に対応する指定されたタグを使用して、指定されたエンコードの種類を使用して、指定された文字列を書き込みます。</summary>
      <param name="encodingType" vsli:raw="One of the enumeration values representing the encoding to use.">使用するエンコードを表す列挙値の 1 つ。</param>
      <param name="str" vsli:raw="The string to write.">書き込む文字列。</param>
      <param name="tag" vsli:raw="The tag to write, or &lt;see langword=&quot;null&quot; /&gt; for the universal tag that is appropriate to the requested encoding type.">書き込むタグ、または要求されたエンコードの種類に適したユニバーサル タグの場合は <see langword="null" />。</param>
      <exception cref="T:System.ArgumentOutOfRangeException" vsli:raw="&lt;paramref name=&quot;encodingType&quot; /&gt; is not a restricted character string encoding type.&#xA;             -or- &#xA;               &lt;paramref name=&quot;encodingType&quot; /&gt; is a restricted character string encoding type that is not currently supported by this method.">
        <paramref name="encodingType" /> は、制限された文字列のエンコードの種類ではありません。
-または- <paramref name="encodingType" /> は、このメソッドで現在サポートされていない制限付き文字文字列のエンコードの種類です。</exception>
      <exception cref="T:System.ArgumentException" vsli:raw="&lt;paramref name=&quot;tag&quot; /&gt;.&lt;see cref=&quot;P:System.Formats.Asn1.Asn1Tag.TagClass&quot; /&gt; is &lt;see cref=&quot;F:System.Formats.Asn1.TagClass.Universal&quot; /&gt;, but &lt;paramref name=&quot;tag&quot; /&gt;.&lt;see cref=&quot;P:System.Formats.Asn1.Asn1Tag.TagValue&quot; /&gt; is not correct for the method.">
        <paramref name="tag" />.<see cref="P:System.Formats.Asn1.Asn1Tag.TagClass" /> は <see cref="F:System.Formats.Asn1.TagClass.Universal" /> ですが、<paramref name="tag" /> です。<see cref="P:System.Formats.Asn1.Asn1Tag.TagValue" /> は、メソッドに対して正しくありません。</exception>
    </member>
    <member name="M:System.Formats.Asn1.AsnWriter.WriteCharacterString(System.Formats.Asn1.UniversalTagNumber,System.String,System.Nullable{System.Formats.Asn1.Asn1Tag})">
      <summary vsli:raw="Write the provided string using the specified encoding type using the specified tag corresponding to the encoding type.">エンコードの種類に対応する指定されたタグを使用して、指定されたエンコードの種類を使用して、指定された文字列を書き込みます。</summary>
      <param name="encodingType" vsli:raw="One of the enumeration values representing the encoding to use.">使用するエンコードを表す列挙値の 1 つ。</param>
      <param name="value" vsli:raw="The string to write.">書き込む文字列。</param>
      <param name="tag" vsli:raw="The tag to write, or &lt;see langword=&quot;null&quot; /&gt; for the universal tag that is appropriate to the requested encoding type.">書き込むタグ、または要求されたエンコードの種類に適したユニバーサル タグの場合は <see langword="null" />。</param>
      <exception cref="T:System.ArgumentNullException" vsli:raw="&lt;paramref name=&quot;value&quot; /&gt; is &lt;see langword=&quot;null&quot; /&gt;">
        <paramref name="value" /> が <see langword="null" /> である</exception>
      <exception cref="T:System.ArgumentOutOfRangeException" vsli:raw="&lt;paramref name=&quot;encodingType&quot; /&gt; is not a restricted character string encoding type.&#xA;             -or- &#xA;               &lt;paramref name=&quot;encodingType&quot; /&gt; is a restricted character string encoding type that is not currently supported by this method.">
        <paramref name="encodingType" /> は、制限された文字列のエンコードの種類ではありません。
-または- <paramref name="encodingType" /> は、このメソッドで現在サポートされていない制限付き文字文字列のエンコードの種類です。</exception>
      <exception cref="T:System.ArgumentException" vsli:raw="&lt;paramref name=&quot;tag&quot; /&gt;.&lt;see cref=&quot;P:System.Formats.Asn1.Asn1Tag.TagClass&quot; /&gt; is &lt;see cref=&quot;F:System.Formats.Asn1.TagClass.Universal&quot; /&gt;, but &lt;paramref name=&quot;tag&quot; /&gt;.&lt;see cref=&quot;P:System.Formats.Asn1.Asn1Tag.TagValue&quot; /&gt; is not correct for the method.">
        <paramref name="tag" />.<see cref="P:System.Formats.Asn1.Asn1Tag.TagClass" /> は <see cref="F:System.Formats.Asn1.TagClass.Universal" /> ですが、<paramref name="tag" /> です。<see cref="P:System.Formats.Asn1.Asn1Tag.TagValue" /> は、メソッドに対して正しくありません。</exception>
    </member>
    <member name="M:System.Formats.Asn1.AsnWriter.WriteEncodedValue(System.ReadOnlySpan{System.Byte})">
      <summary vsli:raw="Write a single value which has already been encoded.">既にエンコードされている単一の値を書き込みます。</summary>
      <param name="value" vsli:raw="The value to write.">書き込む値。</param>
      <exception cref="T:System.ArgumentException" vsli:raw="&lt;paramref name=&quot;value&quot; /&gt; could not be read under the current encoding rules.&#xA;             -or- &#xA;               &lt;paramref name=&quot;value&quot; /&gt; has data beyond the end of the first value.">
        <paramref name="value" /> は現在のエンコード規則で読み取れませんでした。
-または- <paramref name="value" /> に最初の値の末尾を越えたデータがあります。</exception>
    </member>
    <member name="M:System.Formats.Asn1.AsnWriter.WriteEnumeratedValue(System.Enum,System.Nullable{System.Formats.Asn1.Asn1Tag})">
      <summary vsli:raw="Write a non-[&lt;see cref=&quot;T:System.FlagsAttribute&quot; /&gt;] enum value as an Enumerated with tag UNIVERSAL 10.">タグ UNIVERSAL 10 を持つ列挙型として non-[<see cref="T:System.FlagsAttribute" />] 列挙値を書き込みます。</summary>
      <param name="value" vsli:raw="The boxed enumeration value to write.">書き込むボックス化された列挙値。</param>
      <param name="tag" vsli:raw="The tag to write, or &lt;see langword=&quot;null&quot; /&gt; for the default tag (Universal 10).">書き込むタグ、または既定のタグ (Universal 10) の場合は <see langword="null" />。</param>
      <exception cref="T:System.ArgumentNullException" vsli:raw="&lt;paramref name=&quot;value&quot; /&gt; is &lt;see langword=&quot;null&quot; /&gt;.">
        <paramref name="value" /> が <see langword="null" />です。</exception>
      <exception cref="T:System.ArgumentException" vsli:raw="&lt;paramref name=&quot;tag&quot; /&gt;.&lt;see cref=&quot;P:System.Formats.Asn1.Asn1Tag.TagClass&quot; /&gt; is &lt;see cref=&quot;F:System.Formats.Asn1.TagClass.Universal&quot; /&gt;, but &lt;paramref name=&quot;tag&quot; /&gt;.&lt;see cref=&quot;P:System.Formats.Asn1.Asn1Tag.TagValue&quot; /&gt; is not correct for the method.&#xA;             -or- &#xA;               &lt;paramref name=&quot;value&quot; /&gt; is not a boxed enum value.&#xA;             -or- &#xA;               the unboxed type of &lt;paramref name=&quot;value&quot; /&gt; is declared [&lt;see cref=&quot;T:System.FlagsAttribute&quot; /&gt;].">
        <paramref name="tag" />.<see cref="P:System.Formats.Asn1.Asn1Tag.TagClass" /> は <see cref="F:System.Formats.Asn1.TagClass.Universal" /> ですが、<paramref name="tag" /> です。<see cref="P:System.Formats.Asn1.Asn1Tag.TagValue" /> は、メソッドに対して正しくありません。
-または- <paramref name="value" /> はボックス化された列挙値ではありません。
-または- <paramref name="value" /> のボックス化解除された型が [<see cref="T:System.FlagsAttribute" />] で宣言されています。</exception>
    </member>
    <member name="M:System.Formats.Asn1.AsnWriter.WriteEnumeratedValue``1(``0,System.Nullable{System.Formats.Asn1.Asn1Tag})">
      <summary vsli:raw="Write a non-[&lt;see cref=&quot;T:System.FlagsAttribute&quot; /&gt;] enum value as an Enumerated with tag UNIVERSAL 10.">タグ UNIVERSAL 10 を持つ列挙型として non-[<see cref="T:System.FlagsAttribute" />] 列挙値を書き込みます。</summary>
      <param name="value" vsli:raw="The boxed enumeration value to write.">書き込むボックス化された列挙値。</param>
      <param name="tag" vsli:raw="The tag to write, or &lt;see langword=&quot;null&quot; /&gt; for the default tag (Universal 10).">書き込むタグ、または既定のタグ (Universal 10) の場合は <see langword="null" />。</param>
      <typeparam name="TEnum" vsli:raw="The non-[&lt;see cref=&quot;T:System.FlagsAttribute&quot; /&gt;] enumeration type to write.">書き込む非 [ <see cref="T:System.FlagsAttribute" /> ] 列挙型。</typeparam>
      <exception cref="T:System.ArgumentNullException" vsli:raw="&lt;paramref name=&quot;value&quot; /&gt; is &lt;see langword=&quot;null&quot; /&gt;.">
        <paramref name="value" /> が <see langword="null" />です。</exception>
      <exception cref="T:System.ArgumentException" vsli:raw="&lt;paramref name=&quot;tag&quot; /&gt;.&lt;see cref=&quot;P:System.Formats.Asn1.Asn1Tag.TagClass&quot; /&gt; is &lt;see cref=&quot;F:System.Formats.Asn1.TagClass.Universal&quot; /&gt;, but &lt;paramref name=&quot;tag&quot; /&gt;.&lt;see cref=&quot;P:System.Formats.Asn1.Asn1Tag.TagValue&quot; /&gt; is not correct for the method.&#xA;             -or- &#xA;               &lt;typeparamref name=&quot;TEnum&quot; /&gt; is not an enum.&#xA;             -or- &#xA;               &lt;typeparamref name=&quot;TEnum&quot; /&gt; is declared [&lt;see cref=&quot;T:System.FlagsAttribute&quot; /&gt;].">
        <paramref name="tag" />.<see cref="P:System.Formats.Asn1.Asn1Tag.TagClass" /> は <see cref="F:System.Formats.Asn1.TagClass.Universal" /> ですが、<paramref name="tag" /> です。<see cref="P:System.Formats.Asn1.Asn1Tag.TagValue" /> は、メソッドに対して正しくありません。
-または- <typeparamref name="TEnum" /> が列挙型ではありません。
-または- <typeparamref name="TEnum" /> が [<see cref="T:System.FlagsAttribute" />] で宣言されています。</exception>
    </member>
    <member name="M:System.Formats.Asn1.AsnWriter.WriteGeneralizedTime(System.DateTimeOffset,System.Boolean,System.Nullable{System.Formats.Asn1.Asn1Tag})">
      <summary vsli:raw="Write the provided &lt;see cref=&quot;T:System.DateTimeOffset&quot; /&gt; as a GeneralizedTime with a specified UNIVERSAL 24, optionally excluding the fractional seconds.">指定した UNIVERSAL 24 を使用して、指定された <see cref="T:System.DateTimeOffset" /> を GeneralizedTime として書き込みます。秒の小数部は任意で除外できます。</summary>
      <param name="value" vsli:raw="The value to write.">書き込む値。</param>
      <param name="omitFractionalSeconds" vsli:raw="&lt;see langword=&quot;true&quot; /&gt; to treat the fractional seconds in &lt;paramref name=&quot;value&quot; /&gt; as 0 even if a non-zero value is present.">0 以外の値が存在する場合でも、<paramref name="value" /> の秒の小数部を 0 として扱う場合は <see langword="true" />。</param>
      <param name="tag" vsli:raw="The tag to write, or &lt;see langword=&quot;null&quot; /&gt; for the default tag (Universal 24).">書き込むタグ、または既定のタグ (Universal 24) の場合は <see langword="null" />。</param>
      <exception cref="T:System.ArgumentException" vsli:raw="&lt;paramref name=&quot;tag&quot; /&gt;.&lt;see cref=&quot;P:System.Formats.Asn1.Asn1Tag.TagClass&quot; /&gt; is &lt;see cref=&quot;F:System.Formats.Asn1.TagClass.Universal&quot; /&gt;, but &lt;paramref name=&quot;tag&quot; /&gt;.&lt;see cref=&quot;P:System.Formats.Asn1.Asn1Tag.TagValue&quot; /&gt; is not correct for the method.">
        <paramref name="tag" />.<see cref="P:System.Formats.Asn1.Asn1Tag.TagClass" /> は <see cref="F:System.Formats.Asn1.TagClass.Universal" /> ですが、<paramref name="tag" /> です。<see cref="P:System.Formats.Asn1.Asn1Tag.TagValue" /> は、メソッドに対して正しくありません。</exception>
    </member>
    <member name="M:System.Formats.Asn1.AsnWriter.WriteInteger(System.Int64,System.Nullable{System.Formats.Asn1.Asn1Tag})">
      <summary vsli:raw="Write an Integer value with a specified tag.">指定されたタグを持つ整数値を書き込みます。</summary>
      <param name="value" vsli:raw="The value to write.">書き込む値。</param>
      <param name="tag" vsli:raw="The tag to write, or &lt;see langword=&quot;null&quot; /&gt; for the default tag (Universal 2).">書き込むタグ、または既定のタグ (Universal 2) の場合は <see langword="null" />。</param>
      <exception cref="T:System.ArgumentException" vsli:raw="&lt;paramref name=&quot;tag&quot; /&gt;.&lt;see cref=&quot;P:System.Formats.Asn1.Asn1Tag.TagClass&quot; /&gt; is &lt;see cref=&quot;F:System.Formats.Asn1.TagClass.Universal&quot; /&gt;, but &lt;paramref name=&quot;tag&quot; /&gt;.&lt;see cref=&quot;P:System.Formats.Asn1.Asn1Tag.TagValue&quot; /&gt; is not correct for the method.">
        <paramref name="tag" />.<see cref="P:System.Formats.Asn1.Asn1Tag.TagClass" /> は <see cref="F:System.Formats.Asn1.TagClass.Universal" /> ですが、<paramref name="tag" /> です。<see cref="P:System.Formats.Asn1.Asn1Tag.TagValue" /> は、メソッドに対して正しくありません。</exception>
    </member>
    <member name="M:System.Formats.Asn1.AsnWriter.WriteInteger(System.Numerics.BigInteger,System.Nullable{System.Formats.Asn1.Asn1Tag})">
      <summary vsli:raw="Write an Integer value with a specified tag.">指定されたタグを持つ整数値を書き込みます。</summary>
      <param name="value" vsli:raw="The value to write.">書き込む値。</param>
      <param name="tag" vsli:raw="The tag to write, or &lt;see langword=&quot;null&quot; /&gt; for the default tag (Universal 2).">書き込むタグ、または既定のタグ (Universal 2) の場合は <see langword="null" />。</param>
      <exception cref="T:System.ArgumentException" vsli:raw="&lt;paramref name=&quot;tag&quot; /&gt;.&lt;see cref=&quot;P:System.Formats.Asn1.Asn1Tag.TagClass&quot; /&gt; is &lt;see cref=&quot;F:System.Formats.Asn1.TagClass.Universal&quot; /&gt;, but &lt;paramref name=&quot;tag&quot; /&gt;.&lt;see cref=&quot;P:System.Formats.Asn1.Asn1Tag.TagValue&quot; /&gt; is not correct for the method.">
        <paramref name="tag" />.<see cref="P:System.Formats.Asn1.Asn1Tag.TagClass" /> は <see cref="F:System.Formats.Asn1.TagClass.Universal" /> ですが、<paramref name="tag" /> です。<see cref="P:System.Formats.Asn1.Asn1Tag.TagValue" /> は、メソッドに対して正しくありません。</exception>
    </member>
    <member name="M:System.Formats.Asn1.AsnWriter.WriteInteger(System.ReadOnlySpan{System.Byte},System.Nullable{System.Formats.Asn1.Asn1Tag})">
      <summary vsli:raw="Write an Integer value with a specified tag.">指定されたタグを持つ整数値を書き込みます。</summary>
      <param name="value" vsli:raw="The integer value to write, in signed big-endian byte order.">符号付きビッグエンディアン バイト順で書き込まれる整数値。</param>
      <param name="tag" vsli:raw="The tag to write, or &lt;see langword=&quot;null&quot; /&gt; for the default tag (Universal 2).">書き込むタグ、または既定のタグ (Universal 2) の場合は <see langword="null" />。</param>
      <exception cref="T:System.ArgumentException" vsli:raw="&lt;paramref name=&quot;tag&quot; /&gt;.&lt;see cref=&quot;P:System.Formats.Asn1.Asn1Tag.TagClass&quot; /&gt; is &lt;see cref=&quot;F:System.Formats.Asn1.TagClass.Universal&quot; /&gt;, but &lt;paramref name=&quot;tag&quot; /&gt;.&lt;see cref=&quot;P:System.Formats.Asn1.Asn1Tag.TagValue&quot; /&gt; is not correct for the method.">
        <paramref name="tag" />.<see cref="P:System.Formats.Asn1.Asn1Tag.TagClass" /> は <see cref="F:System.Formats.Asn1.TagClass.Universal" /> ですが、<paramref name="tag" /> です。<see cref="P:System.Formats.Asn1.Asn1Tag.TagValue" /> は、メソッドに対して正しくありません。</exception>
      <exception cref="T:System.ArgumentException" vsli:raw="the 9 most significant bits are all set.&#xA;             -or- &#xA;               the 9 most significant bits are all unset.">最上位の 9 ビットがすべて設定されています。
-または- 最上位の 9 ビットがすべて未設定です。</exception>
    </member>
    <member name="M:System.Formats.Asn1.AsnWriter.WriteInteger(System.UInt64,System.Nullable{System.Formats.Asn1.Asn1Tag})">
      <summary vsli:raw="Write an Integer value with a specified tag.">指定されたタグを持つ整数値を書き込みます。</summary>
      <param name="value" vsli:raw="The value to write.">書き込む値。</param>
      <param name="tag" vsli:raw="The tag to write, or &lt;see langword=&quot;null&quot; /&gt; for the default tag (Universal 2).">書き込むタグ、または既定のタグ (Universal 2) の場合は <see langword="null" />。</param>
      <exception cref="T:System.ArgumentException" vsli:raw="&lt;paramref name=&quot;tag&quot; /&gt;.&lt;see cref=&quot;P:System.Formats.Asn1.Asn1Tag.TagClass&quot; /&gt; is &lt;see cref=&quot;F:System.Formats.Asn1.TagClass.Universal&quot; /&gt;, but &lt;paramref name=&quot;tag&quot; /&gt;.&lt;see cref=&quot;P:System.Formats.Asn1.Asn1Tag.TagValue&quot; /&gt; is not correct for the method.">
        <paramref name="tag" />.<see cref="P:System.Formats.Asn1.Asn1Tag.TagClass" /> は <see cref="F:System.Formats.Asn1.TagClass.Universal" /> ですが、<paramref name="tag" /> です。<see cref="P:System.Formats.Asn1.Asn1Tag.TagValue" /> は、メソッドに対して正しくありません。</exception>
    </member>
    <member name="M:System.Formats.Asn1.AsnWriter.WriteIntegerUnsigned(System.ReadOnlySpan{System.Byte},System.Nullable{System.Formats.Asn1.Asn1Tag})">
      <summary vsli:raw="Write an Integer value with a specified tag.">指定されたタグを持つ整数値を書き込みます。</summary>
      <param name="value" vsli:raw="The integer value to write, in unsigned big-endian byte order.">符号なしビッグエンディアン バイト順で書き込まれる整数値。</param>
      <param name="tag" vsli:raw="The tag to write, or &lt;see langword=&quot;null&quot; /&gt; for the default tag (Universal 2).">書き込むタグ、または既定のタグ (Universal 2) の場合は <see langword="null" />。</param>
      <exception cref="T:System.ArgumentException" vsli:raw="&lt;paramref name=&quot;tag&quot; /&gt;.&lt;see cref=&quot;P:System.Formats.Asn1.Asn1Tag.TagClass&quot; /&gt; is &lt;see cref=&quot;F:System.Formats.Asn1.TagClass.Universal&quot; /&gt;, but &lt;paramref name=&quot;tag&quot; /&gt;.&lt;see cref=&quot;P:System.Formats.Asn1.Asn1Tag.TagValue&quot; /&gt; is not correct for the method.">
        <paramref name="tag" />.<see cref="P:System.Formats.Asn1.Asn1Tag.TagClass" /> は <see cref="F:System.Formats.Asn1.TagClass.Universal" /> ですが、<paramref name="tag" /> です。<see cref="P:System.Formats.Asn1.Asn1Tag.TagValue" /> は、メソッドに対して正しくありません。</exception>
      <exception cref="T:System.ArgumentException" vsli:raw="the 9 most significant bits are all unset.">最上位の 9 ビットがすべて未設定です。</exception>
    </member>
    <member name="M:System.Formats.Asn1.AsnWriter.WriteNamedBitList(System.Collections.BitArray,System.Nullable{System.Formats.Asn1.Asn1Tag})">
      <summary vsli:raw="Write a bit array value as a NamedBitList with a specified tag.">指定されたタグを持つ NamedBitList としてビット配列値を書き込みます。</summary>
      <param name="value" vsli:raw="The bits to write.">書き込むビット</param>
      <param name="tag" vsli:raw="The tag to write, or &lt;see langword=&quot;null&quot; /&gt; for the default tag (Universal 3).">書き込むタグ、または既定のタグ (Universal 3) の場合は <see langword="null" />。</param>
      <exception cref="T:System.ArgumentException" vsli:raw="&lt;paramref name=&quot;tag&quot; /&gt;.&lt;see cref=&quot;P:System.Formats.Asn1.Asn1Tag.TagClass&quot; /&gt; is &lt;see cref=&quot;F:System.Formats.Asn1.TagClass.Universal&quot; /&gt;, but &lt;paramref name=&quot;tag&quot; /&gt;.&lt;see cref=&quot;P:System.Formats.Asn1.Asn1Tag.TagValue&quot; /&gt; is not correct for the method.">
        <paramref name="tag" />.<see cref="P:System.Formats.Asn1.Asn1Tag.TagClass" /> は <see cref="F:System.Formats.Asn1.TagClass.Universal" /> ですが、<paramref name="tag" /> です。<see cref="P:System.Formats.Asn1.Asn1Tag.TagValue" /> は、メソッドに対して正しくありません。</exception>
      <exception cref="T:System.ArgumentNullException" vsli:raw="&lt;paramref name=&quot;value&quot; /&gt; is &lt;see langword=&quot;null&quot; /&gt;.">
        <paramref name="value" /> が <see langword="null" />です。</exception>
    </member>
    <member name="M:System.Formats.Asn1.AsnWriter.WriteNamedBitList(System.Enum,System.Nullable{System.Formats.Asn1.Asn1Tag})">
      <summary vsli:raw="Write a [&lt;see cref=&quot;T:System.FlagsAttribute&quot; /&gt;] enum value as a NamedBitList with a specified tag.">指定されたタグを持つ NamedBitList として [<see cref="T:System.FlagsAttribute" />] 列挙値を書き込みます。</summary>
      <param name="value" vsli:raw="The boxed enumeration value to write.">書き込むボックス化された列挙値</param>
      <param name="tag" vsli:raw="The tag to write, or &lt;see langword=&quot;null&quot; /&gt; for the default tag (Universal 3).">書き込むタグ、または既定のタグ (Universal 3) の場合は <see langword="null" />。</param>
      <exception cref="T:System.ArgumentException" vsli:raw="&lt;paramref name=&quot;tag&quot; /&gt;.&lt;see cref=&quot;P:System.Formats.Asn1.Asn1Tag.TagClass&quot; /&gt; is &lt;see cref=&quot;F:System.Formats.Asn1.TagClass.Universal&quot; /&gt;, but &lt;paramref name=&quot;tag&quot; /&gt;.&lt;see cref=&quot;P:System.Formats.Asn1.Asn1Tag.TagValue&quot; /&gt; is not correct for the method.&#xA;             -or- &#xA;               &lt;paramref name=&quot;value&quot; /&gt; is not a boxed enum value.&#xA;             -or- &#xA;               the unboxed type of &lt;paramref name=&quot;value&quot; /&gt; is not declared [&lt;see cref=&quot;T:System.FlagsAttribute&quot; /&gt;].">
        <paramref name="tag" />.<see cref="P:System.Formats.Asn1.Asn1Tag.TagClass" /> は <see cref="F:System.Formats.Asn1.TagClass.Universal" /> ですが、<paramref name="tag" /> です。<see cref="P:System.Formats.Asn1.Asn1Tag.TagValue" /> は、メソッドに対して正しくありません。
-または- <paramref name="value" /> はボックス化された列挙値ではありません。
-または- <paramref name="value" /> のボックス化解除された型が [<see cref="T:System.FlagsAttribute" />] で宣言されていません。</exception>
      <exception cref="T:System.ArgumentNullException" vsli:raw="&lt;paramref name=&quot;value&quot; /&gt; is &lt;see langword=&quot;null&quot; /&gt;.">
        <paramref name="value" /> が <see langword="null" />です。</exception>
    </member>
    <member name="M:System.Formats.Asn1.AsnWriter.WriteNamedBitList``1(``0,System.Nullable{System.Formats.Asn1.Asn1Tag})">
      <summary vsli:raw="Write a [&lt;see cref=&quot;T:System.FlagsAttribute&quot; /&gt;] enum value as a NamedBitList with a specified tag.">指定されたタグを持つ NamedBitList として [<see cref="T:System.FlagsAttribute" />] 列挙値を書き込みます。</summary>
      <param name="value" vsli:raw="The enumeration value to write.">書き込む列挙値</param>
      <param name="tag" vsli:raw="The tag to write, or &lt;see langword=&quot;null&quot; /&gt; for the default tag (Universal 3).">書き込むタグ、または既定のタグ (Universal 3) の場合は <see langword="null" />。</param>
      <typeparam name="TEnum" vsli:raw="The [&lt;see cref=&quot;T:System.FlagsAttribute&quot; /&gt;] enumeration type to write.">書き込む [ <see cref="T:System.FlagsAttribute" /> ] 列挙型。</typeparam>
      <exception cref="T:System.ArgumentException" vsli:raw="&lt;paramref name=&quot;tag&quot; /&gt;.&lt;see cref=&quot;P:System.Formats.Asn1.Asn1Tag.TagClass&quot; /&gt; is &lt;see cref=&quot;F:System.Formats.Asn1.TagClass.Universal&quot; /&gt;, but &lt;paramref name=&quot;tag&quot; /&gt;.&lt;see cref=&quot;P:System.Formats.Asn1.Asn1Tag.TagValue&quot; /&gt; is not correct for the method.&#xA;             -or- &#xA;               &lt;typeparamref name=&quot;TEnum&quot; /&gt; is not an enum value.&#xA;             -or- &#xA;               &lt;typeparamref name=&quot;TEnum&quot; /&gt; is not declared [&lt;see cref=&quot;T:System.FlagsAttribute&quot; /&gt;].">
        <paramref name="tag" />.<see cref="P:System.Formats.Asn1.Asn1Tag.TagClass" /> は <see cref="F:System.Formats.Asn1.TagClass.Universal" /> ですが、<paramref name="tag" /> です。<see cref="P:System.Formats.Asn1.Asn1Tag.TagValue" /> は、メソッドに対して正しくありません。
-または- <typeparamref name="TEnum" /> が列挙値ではありません。
-または- <typeparamref name="TEnum" /> が [<see cref="T:System.FlagsAttribute" />] で宣言されていません。</exception>
    </member>
    <member name="M:System.Formats.Asn1.AsnWriter.WriteNull(System.Nullable{System.Formats.Asn1.Asn1Tag})">
      <summary vsli:raw="Write NULL with a specified tag.">指定されたタグを持つ NULL を書き込みます。</summary>
      <param name="tag" vsli:raw="The tag to write, or &lt;see langword=&quot;null&quot; /&gt; for the default tag (Universal 5).">書き込むタグ、または既定のタグ (Universal 5) の場合は <see langword="null" />。</param>
      <exception cref="T:System.ArgumentException" vsli:raw="&lt;paramref name=&quot;tag&quot; /&gt;.&lt;see cref=&quot;P:System.Formats.Asn1.Asn1Tag.TagClass&quot; /&gt; is &lt;see cref=&quot;F:System.Formats.Asn1.TagClass.Universal&quot; /&gt;, but &lt;paramref name=&quot;tag&quot; /&gt;.&lt;see cref=&quot;P:System.Formats.Asn1.Asn1Tag.TagValue&quot; /&gt; is not correct for the method.">
        <paramref name="tag" />.<see cref="P:System.Formats.Asn1.Asn1Tag.TagClass" /> は <see cref="F:System.Formats.Asn1.TagClass.Universal" /> ですが、<paramref name="tag" /> です。<see cref="P:System.Formats.Asn1.Asn1Tag.TagValue" /> は、メソッドに対して正しくありません。</exception>
    </member>
    <member name="M:System.Formats.Asn1.AsnWriter.WriteObjectIdentifier(System.ReadOnlySpan{System.Char},System.Nullable{System.Formats.Asn1.Asn1Tag})">
      <summary vsli:raw="Write an Object Identifier with a specified tag.">指定されたタグを持つオブジェクト識別子を書き込みます。</summary>
      <param name="oidValue" vsli:raw="The object identifier to write.">書き込むオブジェクト識別子。</param>
      <param name="tag" vsli:raw="The tag to write, or &lt;see langword=&quot;null&quot; /&gt; for the default tag (Universal 6).">書き込むタグ、または既定のタグ (Universal 6) の場合は <see langword="null" />。</param>
      <exception cref="T:System.ArgumentException" vsli:raw="&lt;paramref name=&quot;tag&quot; /&gt;.&lt;see cref=&quot;P:System.Formats.Asn1.Asn1Tag.TagClass&quot; /&gt; is &lt;see cref=&quot;F:System.Formats.Asn1.TagClass.Universal&quot; /&gt;, but &lt;paramref name=&quot;tag&quot; /&gt;.&lt;see cref=&quot;P:System.Formats.Asn1.Asn1Tag.TagValue&quot; /&gt; is not correct for the method.&#xA;             -or- &#xA;               &lt;paramref name=&quot;oidValue&quot; /&gt; is not a valid dotted decimal object identifier.">
        <paramref name="tag" />.<see cref="P:System.Formats.Asn1.Asn1Tag.TagClass" /> は <see cref="F:System.Formats.Asn1.TagClass.Universal" /> ですが、<paramref name="tag" /> です。<see cref="P:System.Formats.Asn1.Asn1Tag.TagValue" /> は、メソッドに対して正しくありません。
-または- <paramref name="oidValue" /> が有効なドット形式 10 進オブジェクト識別子ではありません。</exception>
    </member>
    <member name="M:System.Formats.Asn1.AsnWriter.WriteObjectIdentifier(System.String,System.Nullable{System.Formats.Asn1.Asn1Tag})">
      <summary vsli:raw="Write an Object Identifier with a specified tag.">指定されたタグを持つオブジェクト識別子を書き込みます。</summary>
      <param name="oidValue" vsli:raw="The object identifier to write.">書き込むオブジェクト識別子。</param>
      <param name="tag" vsli:raw="The tag to write, or &lt;see langword=&quot;null&quot; /&gt; for the default tag (Universal 6).">書き込むタグ、または既定のタグ (Universal 6) の場合は <see langword="null" />。</param>
      <exception cref="T:System.ArgumentException" vsli:raw="&lt;paramref name=&quot;tag&quot; /&gt;.&lt;see cref=&quot;P:System.Formats.Asn1.Asn1Tag.TagClass&quot; /&gt; is &lt;see cref=&quot;F:System.Formats.Asn1.TagClass.Universal&quot; /&gt;, but &lt;paramref name=&quot;tag&quot; /&gt;.&lt;see cref=&quot;P:System.Formats.Asn1.Asn1Tag.TagValue&quot; /&gt; is not correct for the method.&#xA;             -or- &#xA;               &lt;paramref name=&quot;oidValue&quot; /&gt; is not a valid dotted decimal object identifier.">
        <paramref name="tag" />.<see cref="P:System.Formats.Asn1.Asn1Tag.TagClass" /> は <see cref="F:System.Formats.Asn1.TagClass.Universal" /> ですが、<paramref name="tag" /> です。<see cref="P:System.Formats.Asn1.Asn1Tag.TagValue" /> は、メソッドに対して正しくありません。
-または- <paramref name="oidValue" /> が有効なドット形式 10 進オブジェクト識別子ではありません。</exception>
      <exception cref="T:System.ArgumentNullException" vsli:raw="&lt;paramref name=&quot;oidValue&quot; /&gt; is &lt;see langword=&quot;null&quot; /&gt;.">
        <paramref name="oidValue" /> が <see langword="null" />です。</exception>
    </member>
    <member name="M:System.Formats.Asn1.AsnWriter.WriteOctetString(System.ReadOnlySpan{System.Byte},System.Nullable{System.Formats.Asn1.Asn1Tag})">
      <summary vsli:raw="Write an Octet String value with a specified tag.">指定されたタグを持つオクテット文字列値を書き込みます。</summary>
      <param name="value" vsli:raw="The value to write.">書き込む値。</param>
      <param name="tag" vsli:raw="The tag to write, or &lt;see langword=&quot;null&quot; /&gt; for the default tag (Universal 4).">書き込むタグ、または既定のタグ (Universal 4) の場合は <see langword="null" />。</param>
      <exception cref="T:System.ArgumentException" vsli:raw="&lt;paramref name=&quot;tag&quot; /&gt;.&lt;see cref=&quot;P:System.Formats.Asn1.Asn1Tag.TagClass&quot; /&gt; is &lt;see cref=&quot;F:System.Formats.Asn1.TagClass.Universal&quot; /&gt;, but &lt;paramref name=&quot;tag&quot; /&gt;.&lt;see cref=&quot;P:System.Formats.Asn1.Asn1Tag.TagValue&quot; /&gt; is not correct for the method.">
        <paramref name="tag" />.<see cref="P:System.Formats.Asn1.Asn1Tag.TagClass" /> は <see cref="F:System.Formats.Asn1.TagClass.Universal" /> ですが、<paramref name="tag" /> です。<see cref="P:System.Formats.Asn1.Asn1Tag.TagValue" /> は、メソッドに対して正しくありません。</exception>
    </member>
    <member name="M:System.Formats.Asn1.AsnWriter.WriteUtcTime(System.DateTimeOffset,System.Int32,System.Nullable{System.Formats.Asn1.Asn1Tag})">
      <summary vsli:raw="Write the provided value as a UTCTime with a specified tag, provided the year is in the allowed range.">年が許容範囲内にある場合は、指定された値を、指定したタグを持つ UTCTime として書き込みます。</summary>
      <param name="value" vsli:raw="The value to write.">書き込む値。</param>
      <param name="twoDigitYearMax" vsli:raw="The maximum valid year for &lt;paramref name=&quot;value&quot; /&gt;, after conversion to UTC.&#xA;              For the X.509 Time.utcTime range of 1950-2049, pass &lt;c&gt;2049&lt;/c&gt;.">UTC に変換後の、<paramref name="value" /> の最大有効年。
X.509 Time.utcTime 範囲 1950-2049 の場合は、<c>2049</c> を渡します。</param>
      <param name="tag" vsli:raw="The tag to write, or &lt;see langword=&quot;null&quot; /&gt; for the default tag (Universal 23).">書き込むタグ、または既定のタグ (Universal 23) の場合は <see langword="null" />。</param>
      <exception cref="T:System.ArgumentException" vsli:raw="&lt;paramref name=&quot;tag&quot; /&gt;.&lt;see cref=&quot;P:System.Formats.Asn1.Asn1Tag.TagClass&quot; /&gt; is &lt;see cref=&quot;F:System.Formats.Asn1.TagClass.Universal&quot; /&gt;, but &lt;paramref name=&quot;tag&quot; /&gt;.&lt;see cref=&quot;P:System.Formats.Asn1.Asn1Tag.TagValue&quot; /&gt; is not correct for the method.">
        <paramref name="tag" />.<see cref="P:System.Formats.Asn1.Asn1Tag.TagClass" /> は <see cref="F:System.Formats.Asn1.TagClass.Universal" /> ですが、<paramref name="tag" /> です。<see cref="P:System.Formats.Asn1.Asn1Tag.TagValue" /> は、メソッドに対して正しくありません。</exception>
      <exception cref="T:System.ArgumentOutOfRangeException" vsli:raw="&lt;paramref name=&quot;value&quot; /&gt;.&lt;see cref=&quot;P:System.DateTimeOffset.Year&quot; /&gt; (after conversion to UTC) is not in the range (&lt;paramref name=&quot;twoDigitYearMax&quot; /&gt; - 100, &lt;paramref name=&quot;twoDigitYearMax&quot; /&gt;].">
        <paramref name="value" />.<see cref="P:System.DateTimeOffset.Year" /> (UTC への変換後) は、(<paramref name="twoDigitYearMax" /> - 100, <paramref name="twoDigitYearMax" />] の範囲内にありません。</exception>
    </member>
    <member name="M:System.Formats.Asn1.AsnWriter.WriteUtcTime(System.DateTimeOffset,System.Nullable{System.Formats.Asn1.Asn1Tag})">
      <summary vsli:raw="Write the provided value as a UTCTime with a specified tag, accepting the two-digit year as valid in context.">指定された値を、指定したタグを持つ UTCTime として書き込みます。2 桁の年はコンテキストで有効として受け入れられます。</summary>
      <param name="value" vsli:raw="The value to write.">書き込む値。</param>
      <param name="tag" vsli:raw="The tag to write, or &lt;see langword=&quot;null&quot; /&gt; for the default tag (Universal 23).">書き込むタグ、または既定のタグ (Universal 23) の場合は <see langword="null" />。</param>
      <exception cref="T:System.ArgumentException" vsli:raw="&lt;paramref name=&quot;tag&quot; /&gt;.&lt;see cref=&quot;P:System.Formats.Asn1.Asn1Tag.TagClass&quot; /&gt; is &lt;see cref=&quot;F:System.Formats.Asn1.TagClass.Universal&quot; /&gt;, but &lt;paramref name=&quot;tag&quot; /&gt;.&lt;see cref=&quot;P:System.Formats.Asn1.Asn1Tag.TagValue&quot; /&gt; is not correct for the method.">
        <paramref name="tag" />.<see cref="P:System.Formats.Asn1.Asn1Tag.TagClass" /> は <see cref="F:System.Formats.Asn1.TagClass.Universal" /> ですが、<paramref name="tag" /> です。<see cref="P:System.Formats.Asn1.Asn1Tag.TagValue" /> は、メソッドに対して正しくありません。</exception>
    </member>
    <member name="P:System.Formats.Asn1.AsnWriter.RuleSet">
      <summary vsli:raw="Gets the encoding rules in use by this writer.">このライターによって使用されているエンコード規則を取得します。</summary>
      <returns vsli:raw="The encoding rules in use by this writer.">このライターによって使用されているエンコーディング規則。</returns>
    </member>
    <member name="T:System.Formats.Asn1.AsnWriter.Scope">
      <summary vsli:raw="Provides an &lt;see cref=&quot;T:System.IDisposable&quot; /&gt; target for safely closing an opened tag by using a lexical scope as a logical scope.">論理スコープとして構文のスコープを使用して、開かれているタグを安全に閉じるための <see cref="T:System.IDisposable" /> ターゲットを提供します。</summary>
    </member>
    <member name="M:System.Formats.Asn1.AsnWriter.Scope.Dispose">
      <summary vsli:raw="Performs application-defined tasks associated with freeing, releasing, or resetting unmanaged resources.">アンマネージ リソースの解放またはリセットに関連付けられているアプリケーション定義のタスクを実行します。</summary>
    </member>
    <member name="T:System.Formats.Asn1.TagClass">
      <summary vsli:raw="The tag class for a particular ASN.1 tag.">特定の ASN.1 タグのタグ クラス。</summary>
    </member>
    <member name="F:System.Formats.Asn1.TagClass.Application">
      <summary vsli:raw="The Application tag class.">アプリケーション タグ クラス</summary>
    </member>
    <member name="F:System.Formats.Asn1.TagClass.ContextSpecific">
      <summary vsli:raw="The Context-Specific tag class.">コンテキスト固有のタグ クラス</summary>
    </member>
    <member name="F:System.Formats.Asn1.TagClass.Private">
      <summary vsli:raw="The Private tag class.">プライベート タグ クラス</summary>
    </member>
    <member name="F:System.Formats.Asn1.TagClass.Universal">
      <summary vsli:raw="The Universal tag class.">ユニバーサル タグ クラス</summary>
    </member>
    <member name="T:System.Formats.Asn1.UniversalTagNumber">
      <summary vsli:raw="Tag assignments for the UNIVERSAL class in ITU-T X.680.">ITU-T X.680 のユニバーサル クラスのタグ割り当てです。</summary>
    </member>
    <member name="F:System.Formats.Asn1.UniversalTagNumber.BitString">
      <summary vsli:raw="The universal class tag value for Bit String.">BitString を表すユニバーサル クラスのタグ値。</summary>
    </member>
    <member name="F:System.Formats.Asn1.UniversalTagNumber.BMPString">
      <summary vsli:raw="The universal class tag value for BMPString.">BMPString を表すユニバーサル クラスのタグ値。</summary>
    </member>
    <member name="F:System.Formats.Asn1.UniversalTagNumber.Boolean">
      <summary vsli:raw="The universal class tag value for Boolean.">Boolean を表すユニバーサル クラスのタグ値。</summary>
    </member>
    <member name="F:System.Formats.Asn1.UniversalTagNumber.Date">
      <summary vsli:raw="The universal class tag value for Date.">Date を表すユニバーサル クラスのタグ値。</summary>
    </member>
    <member name="F:System.Formats.Asn1.UniversalTagNumber.DateTime">
      <summary vsli:raw="The universal class tag value for Date-Time.">Date-Time を表すユニバーサル クラスのタグ値。</summary>
    </member>
    <member name="F:System.Formats.Asn1.UniversalTagNumber.Duration">
      <summary vsli:raw="The universal class tag value for Duration.">Duration を表すユニバーサル クラスのタグ値。</summary>
    </member>
    <member name="F:System.Formats.Asn1.UniversalTagNumber.Embedded">
      <summary vsli:raw="The universal class tag value for Embedded-PDV.">Embedded-PDV を表すユニバーサル クラスのタグ値。</summary>
    </member>
    <member name="F:System.Formats.Asn1.UniversalTagNumber.EndOfContents">
      <summary vsli:raw="The reserved identifier for the End-of-Contents marker in an indefinite length encoding.">不確定長エンコードでの End-of-Contents マーカーの予約済み識別子。</summary>
    </member>
    <member name="F:System.Formats.Asn1.UniversalTagNumber.Enumerated">
      <summary vsli:raw="The universal class tag value for Enumerated.">Enumerated を表すユニバーサル クラスのタグ値。</summary>
    </member>
    <member name="F:System.Formats.Asn1.UniversalTagNumber.External">
      <summary vsli:raw="The universal class tag value for External.">External を表すユニバーサル クラスのタグ値。</summary>
    </member>
    <member name="F:System.Formats.Asn1.UniversalTagNumber.GeneralizedTime">
      <summary vsli:raw="The universal class tag value for GeneralizedTime.">GeneralizedTime を表すユニバーサル クラスのタグ値。</summary>
    </member>
    <member name="F:System.Formats.Asn1.UniversalTagNumber.GeneralString">
      <summary vsli:raw="The universal class tag value for GeneralString.">GeneralString を表すユニバーサル クラスのタグ値。</summary>
    </member>
    <member name="F:System.Formats.Asn1.UniversalTagNumber.GraphicString">
      <summary vsli:raw="The universal class tag value for GraphicString.">GraphicString を表すユニバーサル クラスのタグ値。</summary>
    </member>
    <member name="F:System.Formats.Asn1.UniversalTagNumber.IA5String">
      <summary vsli:raw="The universal class tag value for IA5String.">IA5String を表すユニバーサル クラスのタグ値。</summary>
    </member>
    <member name="F:System.Formats.Asn1.UniversalTagNumber.InstanceOf">
      <summary vsli:raw="The universal class tag value for Instance-Of.">Instance-Of を表すユニバーサル クラスのタグ値。</summary>
    </member>
    <member name="F:System.Formats.Asn1.UniversalTagNumber.Integer">
      <summary vsli:raw="The universal class tag value for Integer.">Integer を表すユニバーサル クラスのタグ値。</summary>
    </member>
    <member name="F:System.Formats.Asn1.UniversalTagNumber.ISO646String">
      <summary vsli:raw="The universal class tag value for ISO646String (VisibleString).">ISO646String (VisibleString) を表すユニバーサル クラスのタグ値。</summary>
    </member>
    <member name="F:System.Formats.Asn1.UniversalTagNumber.Null">
      <summary vsli:raw="The universal class tag value for Null.">Null を表すユニバーサル クラスのタグ値。</summary>
    </member>
    <member name="F:System.Formats.Asn1.UniversalTagNumber.NumericString">
      <summary vsli:raw="The universal class tag value for NumericString.">NumericString を表すユニバーサル クラスのタグ値。</summary>
    </member>
    <member name="F:System.Formats.Asn1.UniversalTagNumber.ObjectDescriptor">
      <summary vsli:raw="The universal class tag value for Object Descriptor.">ObjectDescriptor を表すユニバーサル クラスのタグ値。</summary>
    </member>
    <member name="F:System.Formats.Asn1.UniversalTagNumber.ObjectIdentifier">
      <summary vsli:raw="The universal class tag value for Object Identifier.">ObjectIdentifier を表すユニバーサル クラスのタグ値。</summary>
    </member>
    <member name="F:System.Formats.Asn1.UniversalTagNumber.ObjectIdentifierIRI">
      <summary vsli:raw="The universal class tag value for Object Identifier Internationalized Resource Identifier (IRI).">ObjectIdentifier IRI (Internationalized Resource Identifier) を表すユニバーサル クラスのタグ値。</summary>
    </member>
    <member name="F:System.Formats.Asn1.UniversalTagNumber.OctetString">
      <summary vsli:raw="The universal class tag value for Octet String.">OctetString を表すユニバーサル クラスのタグ値。</summary>
    </member>
    <member name="F:System.Formats.Asn1.UniversalTagNumber.PrintableString">
      <summary vsli:raw="The universal class tag value for PrintableString.">PrintableString を表すユニバーサル クラスのタグ値。</summary>
    </member>
    <member name="F:System.Formats.Asn1.UniversalTagNumber.Real">
      <summary vsli:raw="The universal class tag value for Real.">Real を表すユニバーサル クラスのタグ値。</summary>
    </member>
    <member name="F:System.Formats.Asn1.UniversalTagNumber.RelativeObjectIdentifier">
      <summary vsli:raw="The universal class tag value for Relative Object Identifier.">RelativeObjectIdentifier を表すユニバーサル クラスのタグ値。</summary>
    </member>
    <member name="F:System.Formats.Asn1.UniversalTagNumber.RelativeObjectIdentifierIRI">
      <summary vsli:raw="The universal class tag value for Relative Object Identifier Internationalized Resource Identifier (IRI).">RelativeObjectIdentifier IRI (Internationalized Resource Identifier) を表すユニバーサル クラスのタグ値。</summary>
    </member>
    <member name="F:System.Formats.Asn1.UniversalTagNumber.Sequence">
      <summary vsli:raw="The universal class tag value for Sequence.">Sequence を表すユニバーサル クラスのタグ値。</summary>
    </member>
    <member name="F:System.Formats.Asn1.UniversalTagNumber.SequenceOf">
      <summary vsli:raw="The universal class tag value for Sequence-Of.">Sequence-Of を表すユニバーサル クラスのタグ値。</summary>
    </member>
    <member name="F:System.Formats.Asn1.UniversalTagNumber.Set">
      <summary vsli:raw="The universal class tag value for Set.">Set を表すユニバーサル クラスのタグ値。</summary>
    </member>
    <member name="F:System.Formats.Asn1.UniversalTagNumber.SetOf">
      <summary vsli:raw="The universal class tag value for Set-Of.">Set-Of を表すユニバーサル クラスのタグ値。</summary>
    </member>
    <member name="F:System.Formats.Asn1.UniversalTagNumber.T61String">
      <summary vsli:raw="The universal class tag value for T61String (TeletexString).">T61String (TeletexString) を表すユニバーサル クラスのタグ値。</summary>
    </member>
    <member name="F:System.Formats.Asn1.UniversalTagNumber.TeletexString">
      <summary vsli:raw="The universal class tag value for TeletexString (T61String).">TeletexString (T61String) を表すユニバーサル クラスのタグ値。</summary>
    </member>
    <member name="F:System.Formats.Asn1.UniversalTagNumber.Time">
      <summary vsli:raw="The universal class tag value for Time.">Time を表すユニバーサル クラスのタグ値。</summary>
    </member>
    <member name="F:System.Formats.Asn1.UniversalTagNumber.TimeOfDay">
      <summary vsli:raw="The universal class tag value for Time-Of-Day.">Time-Of-Day を表すユニバーサル クラスのタグ値。</summary>
    </member>
    <member name="F:System.Formats.Asn1.UniversalTagNumber.UniversalString">
      <summary vsli:raw="The universal class tag value for UniversalString.">UniversalString を表すユニバーサル クラスのタグ値。</summary>
    </member>
    <member name="F:System.Formats.Asn1.UniversalTagNumber.UnrestrictedCharacterString">
      <summary vsli:raw="The universal class tag value for an unrestricted character string.">無制限の文字列を表すユニバーサル クラスのタグ値。</summary>
    </member>
    <member name="F:System.Formats.Asn1.UniversalTagNumber.UtcTime">
      <summary vsli:raw="The universal class tag value for UTCTime.">UTCTime を表すユニバーサル クラスのタグ値。</summary>
    </member>
    <member name="F:System.Formats.Asn1.UniversalTagNumber.UTF8String">
      <summary vsli:raw="The universal class tag value for UTF8String.">UTF8String を表すユニバーサル クラスのタグ値。</summary>
    </member>
    <member name="F:System.Formats.Asn1.UniversalTagNumber.VideotexString">
      <summary vsli:raw="The universal class tag value for VideotexString.">VideotexString を表すユニバーサル クラスのタグ値。</summary>
    </member>
    <member name="F:System.Formats.Asn1.UniversalTagNumber.VisibleString">
      <summary vsli:raw="The universal class tag value for VisibleString (ISO646String).">VisibleString (ISO646String) を表すユニバーサル クラスのタグ値。</summary>
    </member>
  </members>
</doc>