<?xml version="1.0" encoding="utf-8"?>
<doc xmlns:vsli="https://github.com/sk-0520/vs-localized-intellisense/tree/master/schema/2024">
  <assembly>
    <name>System.ComponentModel.Annotations</name>
  </assembly>
  <members>
    <member name="T:System.ComponentModel.DataAnnotations.AssociatedMetadataTypeTypeDescriptionProvider">
      <summary vsli:raw="Extends the metadata information for a class by adding attributes and property information that is defined in an associated class.">属性、および関連付けられたクラスで定義されたプロパティ情報を追加することにより、クラスのメタデータ情報を拡張します。</summary>
    </member>
    <member name="M:System.ComponentModel.DataAnnotations.AssociatedMetadataTypeTypeDescriptionProvider.#ctor(System.Type)">
      <summary vsli:raw="Initializes a new instance of the &lt;see cref=&quot;T:System.ComponentModel.DataAnnotations.AssociatedMetadataTypeTypeDescriptionProvider&quot; /&gt; class by using the specified type.">指定した型を使用して、<see cref="T:System.ComponentModel.DataAnnotations.AssociatedMetadataTypeTypeDescriptionProvider" /> クラスの新しいインスタンスを初期化します。</summary>
      <param name="type" vsli:raw="The type for which the metadata provider is created.">メタデータ プロバイダーを作成する種類。</param>
    </member>
    <member name="M:System.ComponentModel.DataAnnotations.AssociatedMetadataTypeTypeDescriptionProvider.#ctor(System.Type,System.Type)">
      <summary vsli:raw="Initializes a new instance of the &lt;see cref=&quot;T:System.ComponentModel.DataAnnotations.AssociatedMetadataTypeTypeDescriptionProvider&quot; /&gt; class by using the specified metadata provider type and associated type.">指定したメタデータ プロバイダーの種類および関連づけられた型を使用して、<see cref="T:System.ComponentModel.DataAnnotations.AssociatedMetadataTypeTypeDescriptionProvider" /> クラスの新しいインスタンスを初期化します。</summary>
      <param name="type" vsli:raw="The type for which the metadata provider is created.">メタデータ プロバイダーを作成する種類。</param>
      <param name="associatedMetadataType" vsli:raw="The associated type that contains the metadata.">メタデータを含む関連付けられている型。</param>
      <exception cref="T:System.ArgumentNullException" vsli:raw="The value of &lt;paramref name=&quot;associatedMetadataType&quot; /&gt; is &lt;see langword=&quot;null&quot; /&gt;.">
        <paramref name="associatedMetadataType" /> の値が <see langword="null" /> です。</exception>
    </member>
    <member name="M:System.ComponentModel.DataAnnotations.AssociatedMetadataTypeTypeDescriptionProvider.GetTypeDescriptor(System.Type,System.Object)">
      <summary vsli:raw="Gets a type descriptor for the specified type and object.">指定した型およびオブジェクトの型記述子を取得します。</summary>
      <param name="objectType" vsli:raw="The type of object to retrieve the type descriptor for.">型記述子を取得する対象のオブジェクトの型。</param>
      <param name="instance" vsli:raw="An instance of the type.">型のインスタンス。</param>
      <returns vsli:raw="The descriptor that provides metadata for the type.">型のメタデータを提供する記述子。</returns>
    </member>
    <member name="T:System.ComponentModel.DataAnnotations.AssociationAttribute">
      <summary vsli:raw="Specifies that an entity member represents a data relationship, such as a foreign key relationship.">エンティティ メンバーが外部キー リレーションシップなどのデータ リレーションシップを表すことを指定します。</summary>
    </member>
    <member name="M:System.ComponentModel.DataAnnotations.AssociationAttribute.#ctor(System.String,System.String,System.String)">
      <summary vsli:raw="Initializes a new instance of the &lt;see cref=&quot;T:System.ComponentModel.DataAnnotations.AssociationAttribute&quot; /&gt; class.">
        <see cref="T:System.ComponentModel.DataAnnotations.AssociationAttribute" /> クラスの新しいインスタンスを初期化します。</summary>
      <param name="name" vsli:raw="The name of the association.">アソシエーションの名前。</param>
      <param name="thisKey" vsli:raw="A comma-separated list of the property names of the key values on the &lt;paramref name=&quot;thisKey&quot; /&gt; side of the association.">アソシエーションの <paramref name="thisKey" /> 側にあるキー値のプロパティ名のコンマ区切りリスト。</param>
      <param name="otherKey" vsli:raw="A comma-separated list of the property names of the key values on the &lt;paramref name=&quot;otherKey&quot; /&gt; side of the association.">アソシエーションの <paramref name="otherKey" /> 側にあるキー値のプロパティ名のコンマ区切りリスト。</param>
    </member>
    <member name="P:System.ComponentModel.DataAnnotations.AssociationAttribute.IsForeignKey">
      <summary vsli:raw="Gets or sets a value that indicates whether the association member represents a foreign key.">アソシエーション メンバーが外部キーを表すかどうかを示す値を取得または設定します。</summary>
      <returns vsli:raw="&lt;see langword=&quot;true&quot; /&gt; if the association represents a foreign key; otherwise, &lt;see langword=&quot;false&quot; /&gt;.">アソシエーションが外部キーを表す場合は <see langword="true" />。それ以外の場合は <see langword="false" />。</returns>
    </member>
    <member name="P:System.ComponentModel.DataAnnotations.AssociationAttribute.Name">
      <summary vsli:raw="Gets the name of the association.">アソシエーションの名前を取得します。</summary>
      <returns vsli:raw="The name of the association.">アソシエーションの名前。</returns>
    </member>
    <member name="P:System.ComponentModel.DataAnnotations.AssociationAttribute.OtherKey">
      <summary vsli:raw="Gets the property names of the key values on the OtherKey side of the association.">アソシエーションの OtherKey 側にあるキー値のプロパティ名を取得します。</summary>
      <returns vsli:raw="A comma-separated list of the property names that represent the key values on the OtherKey side of the association.">アソシエーションの OtherKey 側にあるキー値を表すプロパティ名のコンマ区切りリスト。</returns>
    </member>
    <member name="P:System.ComponentModel.DataAnnotations.AssociationAttribute.OtherKeyMembers">
      <summary vsli:raw="Gets a collection of individual key members that are specified in the &lt;see cref=&quot;P:System.ComponentModel.DataAnnotations.AssociationAttribute.OtherKey&quot; /&gt; property.">
        <see cref="P:System.ComponentModel.DataAnnotations.AssociationAttribute.OtherKey" /> プロパティで指定された個々のキー メンバーのコレクションを取得します。</summary>
      <returns vsli:raw="A collection of individual key members that are specified in the &lt;see cref=&quot;P:System.ComponentModel.DataAnnotations.AssociationAttribute.OtherKey&quot; /&gt; property.">
        <see cref="P:System.ComponentModel.DataAnnotations.AssociationAttribute.OtherKey" /> プロパティで指定された個々のキー メンバーのコレクション。</returns>
    </member>
    <member name="P:System.ComponentModel.DataAnnotations.AssociationAttribute.ThisKey">
      <summary vsli:raw="Gets the property names of the key values on the ThisKey side of the association.">アソシエーションの ThisKey 側にあるキー値のプロパティ名を取得します。</summary>
      <returns vsli:raw="A comma-separated list of the property names that represent the key values on the ThisKey side of the association.">アソシエーションの ThisKey 側にあるキー値を表すプロパティ名のコンマ区切りリスト。</returns>
    </member>
    <member name="P:System.ComponentModel.DataAnnotations.AssociationAttribute.ThisKeyMembers">
      <summary vsli:raw="Gets a collection of individual key members that are specified in the &lt;see cref=&quot;P:System.ComponentModel.DataAnnotations.AssociationAttribute.ThisKey&quot; /&gt; property.">
        <see cref="P:System.ComponentModel.DataAnnotations.AssociationAttribute.ThisKey" /> プロパティで指定された個々のキー メンバーのコレクションを取得します。</summary>
      <returns vsli:raw="A collection of individual key members that are specified in the &lt;see cref=&quot;P:System.ComponentModel.DataAnnotations.AssociationAttribute.ThisKey&quot; /&gt; property.">
        <see cref="P:System.ComponentModel.DataAnnotations.AssociationAttribute.ThisKey" /> プロパティで指定された個々のキー メンバーのコレクション。</returns>
    </member>
    <member name="T:System.ComponentModel.DataAnnotations.CompareAttribute">
      <summary vsli:raw="Provides an attribute that compares two properties.">2 つのプロパティを比較する属性を提供します。</summary>
    </member>
    <member name="M:System.ComponentModel.DataAnnotations.CompareAttribute.#ctor(System.String)">
      <summary vsli:raw="Initializes a new instance of the &lt;see cref=&quot;T:System.ComponentModel.DataAnnotations.CompareAttribute&quot; /&gt; class.">
        <see cref="T:System.ComponentModel.DataAnnotations.CompareAttribute" /> クラスの新しいインスタンスを初期化します。</summary>
      <param name="otherProperty" vsli:raw="The property to compare with the current property.">現在のプロパティと比較するプロパティ。</param>
    </member>
    <member name="M:System.ComponentModel.DataAnnotations.CompareAttribute.FormatErrorMessage(System.String)">
      <summary vsli:raw="Applies formatting to an error message, based on the data field where the error occurred.">エラーが発生したデータ フィールドに基づいて、エラー メッセージに書式を適用します。</summary>
      <param name="name" vsli:raw="The name of the field that caused the validation failure.">検証失敗の原因になったフィールドの名前。</param>
      <returns vsli:raw="The formatted error message.">形式を設定したエラー メッセージです。</returns>
    </member>
    <member name="M:System.ComponentModel.DataAnnotations.CompareAttribute.IsValid(System.Object,System.ComponentModel.DataAnnotations.ValidationContext)">
      <summary vsli:raw="Determines whether a specified object is valid.">指定したオブジェクトが有効かどうかを判断します</summary>
      <param name="value" vsli:raw="The object to validate.">検証対象のオブジェクト。</param>
      <param name="validationContext" vsli:raw="An object that contains information about the validation request.">検証要求に関する情報を含んでいるオブジェクト。</param>
      <returns vsli:raw="&lt;see langword=&quot;true&quot; /&gt; if &lt;paramref name=&quot;value&quot; /&gt; is valid; otherwise, &lt;see langword=&quot;false&quot; /&gt;.">
        <paramref name="value" /> が有効な場合は <see langword="true" />。それ以外の場合は <see langword="false" />。</returns>
    </member>
    <member name="P:System.ComponentModel.DataAnnotations.CompareAttribute.OtherProperty">
      <summary vsli:raw="Gets the property to compare with the current property.">現在のプロパティと比較するプロパティを取得します。</summary>
      <returns vsli:raw="The other property.">他のプロパティ。</returns>
    </member>
    <member name="P:System.ComponentModel.DataAnnotations.CompareAttribute.OtherPropertyDisplayName">
      <summary vsli:raw="Gets the display name of the other property.">その他のプロパティの表示名を取得します。</summary>
      <returns vsli:raw="The display name of the other property.">その他のプロパティの表示名。</returns>
    </member>
    <member name="P:System.ComponentModel.DataAnnotations.CompareAttribute.RequiresValidationContext">
      <summary vsli:raw="Gets a value that indicates whether the attribute requires validation context.">属性で検証コンテキストが必要かどうかを示す値を取得します。</summary>
      <returns vsli:raw="&lt;see langword=&quot;true&quot; /&gt; if the attribute requires validation context; otherwise, &lt;see langword=&quot;false&quot; /&gt;.">属性に検証コンテキストが必要な場合は <see langword="true" />。それ以外の場合は <see langword="false" />。</returns>
    </member>
    <member name="T:System.ComponentModel.DataAnnotations.ConcurrencyCheckAttribute">
      <summary vsli:raw="Specifies that a property participates in optimistic concurrency checks.">オプティミスティック コンカレンシー チェックにプロパティを使用することを指定します。</summary>
    </member>
    <member name="M:System.ComponentModel.DataAnnotations.ConcurrencyCheckAttribute.#ctor">
      <summary vsli:raw="Initializes a new instance of the &lt;see cref=&quot;T:System.ComponentModel.DataAnnotations.ConcurrencyCheckAttribute&quot; /&gt; class.">
        <see cref="T:System.ComponentModel.DataAnnotations.ConcurrencyCheckAttribute" /> クラスの新しいインスタンスを初期化します。</summary>
    </member>
    <member name="T:System.ComponentModel.DataAnnotations.CreditCardAttribute">
      <summary vsli:raw="Specifies that a data field value is a credit card number.">データ フィールドの値がクレジット カードの番号であることを指定します。</summary>
    </member>
    <member name="M:System.ComponentModel.DataAnnotations.CreditCardAttribute.#ctor">
      <summary vsli:raw="Initializes a new instance of the &lt;see cref=&quot;T:System.ComponentModel.DataAnnotations.CreditCardAttribute&quot; /&gt; class.">
        <see cref="T:System.ComponentModel.DataAnnotations.CreditCardAttribute" /> クラスの新しいインスタンスを初期化します。</summary>
    </member>
    <member name="M:System.ComponentModel.DataAnnotations.CreditCardAttribute.IsValid(System.Object)">
      <summary vsli:raw="Determines whether the specified credit card number is valid.">指定したクレジット カード番号が有効かどうかを判断します。</summary>
      <param name="value" vsli:raw="The value to validate.">検証する値。</param>
      <returns vsli:raw="&lt;see langword=&quot;true&quot; /&gt; if the credit card number is valid; otherwise, &lt;see langword=&quot;false&quot; /&gt;.">クレジット カード番号が有効な場合は <see langword="true" />。それ以外の場合は <see langword="false" />。</returns>
    </member>
    <member name="T:System.ComponentModel.DataAnnotations.CustomValidationAttribute">
      <summary vsli:raw="Specifies a custom validation method that is used to validate a property or class instance.">プロパティまたはクラス インスタンスを検証するために使用するカスタム検証メソッドを指定します。</summary>
    </member>
    <member name="M:System.ComponentModel.DataAnnotations.CustomValidationAttribute.#ctor(System.Type,System.String)">
      <summary vsli:raw="Initializes a new instance of the &lt;see cref=&quot;T:System.ComponentModel.DataAnnotations.CustomValidationAttribute&quot; /&gt; class.">
        <see cref="T:System.ComponentModel.DataAnnotations.CustomValidationAttribute" /> クラスの新しいインスタンスを初期化します。</summary>
      <param name="validatorType" vsli:raw="The type that contains the method that performs custom validation.">カスタム検証を実行するメソッドを持つ型。</param>
      <param name="method" vsli:raw="The method that performs custom validation.">カスタム検証を実行するメソッド。</param>
    </member>
    <member name="M:System.ComponentModel.DataAnnotations.CustomValidationAttribute.FormatErrorMessage(System.String)">
      <summary vsli:raw="Formats a validation error message.">検証エラー メッセージを書式設定します。</summary>
      <param name="name" vsli:raw="The name to include in the formatted message.">書式設定されたメッセージに含める名前。</param>
      <exception cref="T:System.InvalidOperationException" vsli:raw="The current attribute is malformed.">現在の属性の形式が正しくありません。</exception>
      <returns vsli:raw="An instance of the formatted error message.">書式設定されたエラー メッセージのインスタンス。</returns>
    </member>
    <member name="P:System.ComponentModel.DataAnnotations.CustomValidationAttribute.Method">
      <summary vsli:raw="Gets the validation method.">検証メソッドを取得します。</summary>
      <returns vsli:raw="The name of the validation method.">検証メソッドの名前。</returns>
    </member>
    <member name="P:System.ComponentModel.DataAnnotations.CustomValidationAttribute.ValidatorType">
      <summary vsli:raw="Gets the type that performs custom validation.">カスタム検証を実行する型を取得します。</summary>
      <returns vsli:raw="The type that performs custom validation.">カスタム検証を実行する型。</returns>
    </member>
    <member name="T:System.ComponentModel.DataAnnotations.DataType">
      <summary vsli:raw="Represents an enumeration of the data types associated with data fields and parameters.">データ フィールドとパラメーターに関連付けられているデータ型の列挙体を表します。</summary>
    </member>
    <member name="F:System.ComponentModel.DataAnnotations.DataType.CreditCard">
      <summary vsli:raw="Represents a credit card number.">クレジット カード番号を表します。</summary>
    </member>
    <member name="F:System.ComponentModel.DataAnnotations.DataType.Currency">
      <summary vsli:raw="Represents a currency value.">通貨値を表します。</summary>
    </member>
    <member name="F:System.ComponentModel.DataAnnotations.DataType.Custom">
      <summary vsli:raw="Represents a custom data type.">カスタム データ型を表します。</summary>
    </member>
    <member name="F:System.ComponentModel.DataAnnotations.DataType.Date">
      <summary vsli:raw="Represents a date value.">日付値を表します。</summary>
    </member>
    <member name="F:System.ComponentModel.DataAnnotations.DataType.DateTime">
      <summary vsli:raw="Represents an instant in time, expressed as a date and time of day.">日付と時刻で表現される時間の瞬間を表します。</summary>
    </member>
    <member name="F:System.ComponentModel.DataAnnotations.DataType.Duration">
      <summary vsli:raw="Represents a continuous time during which an object exists.">オブジェクトが存続する連続時間を表します。</summary>
    </member>
    <member name="F:System.ComponentModel.DataAnnotations.DataType.EmailAddress">
      <summary vsli:raw="Represents an email address.">電子メール アドレスを表します。</summary>
    </member>
    <member name="F:System.ComponentModel.DataAnnotations.DataType.Html">
      <summary vsli:raw="Represents an HTML file.">HTML ファイルを表します。</summary>
    </member>
    <member name="F:System.ComponentModel.DataAnnotations.DataType.ImageUrl">
      <summary vsli:raw="Represents a URL to an image.">イメージの URL を表します。</summary>
    </member>
    <member name="F:System.ComponentModel.DataAnnotations.DataType.MultilineText">
      <summary vsli:raw="Represents multi-line text.">複数行テキストを表します。</summary>
    </member>
    <member name="F:System.ComponentModel.DataAnnotations.DataType.Password">
      <summary vsli:raw="Represent a password value.">パスワード値を表します。</summary>
    </member>
    <member name="F:System.ComponentModel.DataAnnotations.DataType.PhoneNumber">
      <summary vsli:raw="Represents a phone number value.">電話番号値を表します。</summary>
    </member>
    <member name="F:System.ComponentModel.DataAnnotations.DataType.PostalCode">
      <summary vsli:raw="Represents a postal code.">郵便番号を表します。</summary>
    </member>
    <member name="F:System.ComponentModel.DataAnnotations.DataType.Text">
      <summary vsli:raw="Represents text that is displayed.">表示されるテキストを表します。</summary>
    </member>
    <member name="F:System.ComponentModel.DataAnnotations.DataType.Time">
      <summary vsli:raw="Represents a time value.">時刻値を表します。</summary>
    </member>
    <member name="F:System.ComponentModel.DataAnnotations.DataType.Upload">
      <summary vsli:raw="Represents file upload data type.">ファイル アップロードのデータ型を表します。</summary>
    </member>
    <member name="F:System.ComponentModel.DataAnnotations.DataType.Url">
      <summary vsli:raw="Represents a URL value.">URL 値を表します。</summary>
    </member>
    <member name="T:System.ComponentModel.DataAnnotations.DataTypeAttribute">
      <summary vsli:raw="Specifies the name of an additional type to associate with a data field.">データ フィールドに関連付ける追加の型の名前を指定します。</summary>
    </member>
    <member name="M:System.ComponentModel.DataAnnotations.DataTypeAttribute.#ctor(System.ComponentModel.DataAnnotations.DataType)">
      <summary vsli:raw="Initializes a new instance of the &lt;see cref=&quot;T:System.ComponentModel.DataAnnotations.DataTypeAttribute&quot; /&gt; class by using the specified type name.">指定した型名を使用して、<see cref="T:System.ComponentModel.DataAnnotations.DataTypeAttribute" /> クラスの新しいインスタンスを初期化します。</summary>
      <param name="dataType" vsli:raw="The name of the type to associate with the data field.">データ フィールドに関連付ける型の名前。</param>
    </member>
    <member name="M:System.ComponentModel.DataAnnotations.DataTypeAttribute.#ctor(System.String)">
      <summary vsli:raw="Initializes a new instance of the &lt;see cref=&quot;T:System.ComponentModel.DataAnnotations.DataTypeAttribute&quot; /&gt; class by using the specified field template name.">指定されたフィールド テンプレート名を使用して、<see cref="T:System.ComponentModel.DataAnnotations.DataTypeAttribute" /> クラスの新しいインスタンスを初期化します。</summary>
      <param name="customDataType" vsli:raw="The name of the custom field template to associate with the data field.">データ フィールドに関連付けるカスタム フィールド テンプレートの名前。</param>
      <exception cref="T:System.ArgumentException" vsli:raw="&lt;paramref name=&quot;customDataType&quot; /&gt; is &lt;see langword=&quot;null&quot; /&gt; or an empty string (&quot;&quot;).">
        <paramref name="customDataType" /> は <see langword="null" /> または空の文字列 ("") です。</exception>
    </member>
    <member name="M:System.ComponentModel.DataAnnotations.DataTypeAttribute.GetDataTypeName">
      <summary vsli:raw="Returns the name of the type that is associated with the data field.">データ フィールドに関連付けられた型の名前を返します。</summary>
      <exception cref="T:System.InvalidOperationException" vsli:raw="The current attribute is ill-formed.">現在の属性の形式が誤っています。</exception>
      <returns vsli:raw="The name of the type associated with the data field.">データ フィールドに関連付けられた型の名前。</returns>
    </member>
    <member name="M:System.ComponentModel.DataAnnotations.DataTypeAttribute.IsValid(System.Object)">
      <summary vsli:raw="Checks that the value of the data field is valid.">データ フィールドの値が有効かどうかをチェックします。</summary>
      <param name="value" vsli:raw="The data field value to validate.">検証するデータ フィールド値。</param>
      <exception cref="T:System.InvalidOperationException" vsli:raw="The current attribute is ill-formed.">現在の属性の形式が誤っています。</exception>
      <returns vsli:raw="&lt;see langword=&quot;true&quot; /&gt; always.">常に <see langword="true" />。</returns>
    </member>
    <member name="P:System.ComponentModel.DataAnnotations.DataTypeAttribute.CustomDataType">
      <summary vsli:raw="Gets the name of custom field template that is associated with the data field.">データ フィールドに関連付けられたカスタム フィールド テンプレートの名前を取得します。</summary>
      <returns vsli:raw="The name of the custom field template that is associated with the data field.">データ フィールドに関連付けられたカスタム フィールド テンプレートの名前。</returns>
    </member>
    <member name="P:System.ComponentModel.DataAnnotations.DataTypeAttribute.DataType">
      <summary vsli:raw="Gets the type that is associated with the data field.">データ フィールドに関連付けられた型を取得します。</summary>
      <returns vsli:raw="One of the &lt;see cref=&quot;T:System.ComponentModel.DataAnnotations.DataType&quot; /&gt; values.">
        <see cref="T:System.ComponentModel.DataAnnotations.DataType" /> 値のいずれか 1 つ。</returns>
    </member>
    <member name="P:System.ComponentModel.DataAnnotations.DataTypeAttribute.DisplayFormat">
      <summary vsli:raw="Gets a data-field display format.">データ フィールドの表示形式を取得します。</summary>
      <returns vsli:raw="The data-field display format.">データ フィールドの表示形式。</returns>
    </member>
    <member name="T:System.ComponentModel.DataAnnotations.DisplayAttribute">
      <summary vsli:raw="Provides a general-purpose attribute that lets you specify localizable strings for types and members of entity partial classes.">エンティティ部分クラスの型やメンバーに対してローカライズ可能な文字列を指定するための汎用属性を提供します。</summary>
    </member>
    <member name="M:System.ComponentModel.DataAnnotations.DisplayAttribute.#ctor">
      <summary vsli:raw="Initializes a new instance of the &lt;see cref=&quot;T:System.ComponentModel.DataAnnotations.DisplayAttribute&quot; /&gt; class.">
        <see cref="T:System.ComponentModel.DataAnnotations.DisplayAttribute" /> クラスの新しいインスタンスを初期化します。</summary>
    </member>
    <member name="M:System.ComponentModel.DataAnnotations.DisplayAttribute.GetAutoGenerateField">
      <summary vsli:raw="Returns the value of the &lt;see cref=&quot;P:System.ComponentModel.DataAnnotations.DisplayAttribute.AutoGenerateField&quot; /&gt; property.">
        <see cref="P:System.ComponentModel.DataAnnotations.DisplayAttribute.AutoGenerateField" /> プロパティの値を返します。</summary>
      <returns vsli:raw="The value of &lt;see cref=&quot;P:System.ComponentModel.DataAnnotations.DisplayAttribute.AutoGenerateField&quot; /&gt; if the property has been initialized; otherwise, &lt;see langword=&quot;null&quot; /&gt;.">
        <see cref="P:System.ComponentModel.DataAnnotations.DisplayAttribute.AutoGenerateField" /> プロパティが初期化されている場合はその値。それ以外の場合は <see langword="null" />。</returns>
    </member>
    <member name="M:System.ComponentModel.DataAnnotations.DisplayAttribute.GetAutoGenerateFilter">
      <summary vsli:raw="Returns a value that indicates whether UI should be generated automatically in order to display filtering for this field.">このフィールドにフィルターを表示するための UI を自動的に生成するかどうかを示す値を返します。</summary>
      <returns vsli:raw="The value of &lt;see cref=&quot;P:System.ComponentModel.DataAnnotations.DisplayAttribute.AutoGenerateFilter&quot; /&gt; if the property has been initialized; otherwise, &lt;see langword=&quot;null&quot; /&gt;.">
        <see cref="P:System.ComponentModel.DataAnnotations.DisplayAttribute.AutoGenerateFilter" /> プロパティが初期化されている場合はその値。それ以外の場合は <see langword="null" />。</returns>
    </member>
    <member name="M:System.ComponentModel.DataAnnotations.DisplayAttribute.GetDescription">
      <summary vsli:raw="Returns the value of the &lt;see cref=&quot;P:System.ComponentModel.DataAnnotations.DisplayAttribute.Description&quot; /&gt; property.">
        <see cref="P:System.ComponentModel.DataAnnotations.DisplayAttribute.Description" /> プロパティの値を返します。</summary>
      <exception cref="T:System.InvalidOperationException" vsli:raw="The &lt;see cref=&quot;P:System.ComponentModel.DataAnnotations.DisplayAttribute.ResourceType&quot; /&gt; property and the &lt;see cref=&quot;P:System.ComponentModel.DataAnnotations.DisplayAttribute.Description&quot; /&gt; property are initialized, but a public static property that has a name that matches the &lt;see cref=&quot;P:System.ComponentModel.DataAnnotations.DisplayAttribute.Description&quot; /&gt; value could not be found for the &lt;see cref=&quot;P:System.ComponentModel.DataAnnotations.DisplayAttribute.ResourceType&quot; /&gt; property.">
        <see cref="P:System.ComponentModel.DataAnnotations.DisplayAttribute.ResourceType" /> プロパティおよび <see cref="P:System.ComponentModel.DataAnnotations.DisplayAttribute.Description" /> プロパティは初期化されますが、<see cref="P:System.ComponentModel.DataAnnotations.DisplayAttribute.Description" /> プロパティの <see cref="P:System.ComponentModel.DataAnnotations.DisplayAttribute.ResourceType" /> 値と一致する名前を持つパブリックな静的プロパティが見つかりませんでした。</exception>
      <returns vsli:raw="The localized description, if the &lt;see cref=&quot;P:System.ComponentModel.DataAnnotations.DisplayAttribute.ResourceType&quot; /&gt; has been specified and the &lt;see cref=&quot;P:System.ComponentModel.DataAnnotations.DisplayAttribute.Description&quot; /&gt; property represents a resource key; otherwise, the non-localized value of the &lt;see cref=&quot;P:System.ComponentModel.DataAnnotations.DisplayAttribute.Description&quot; /&gt; property.">
        <see cref="P:System.ComponentModel.DataAnnotations.DisplayAttribute.ResourceType" /> が指定されており、<see cref="P:System.ComponentModel.DataAnnotations.DisplayAttribute.Description" /> プロパティがリソース キーを表している場合は、ローカライズされた説明。それ以外の場合は、<see cref="P:System.ComponentModel.DataAnnotations.DisplayAttribute.Description" /> プロパティのローカライズされていない値。</returns>
    </member>
    <member name="M:System.ComponentModel.DataAnnotations.DisplayAttribute.GetGroupName">
      <summary vsli:raw="Returns the value of the &lt;see cref=&quot;P:System.ComponentModel.DataAnnotations.DisplayAttribute.GroupName&quot; /&gt; property.">
        <see cref="P:System.ComponentModel.DataAnnotations.DisplayAttribute.GroupName" /> プロパティの値を返します。</summary>
      <exception cref="T:System.InvalidOperationException" vsli:raw="Both the &lt;see cref=&quot;P:System.ComponentModel.DataAnnotations.DisplayAttribute.ResourceType&quot; /&gt; property and &lt;see cref=&quot;P:System.ComponentModel.DataAnnotations.DisplayAttribute.GroupName&quot; /&gt; properties were set, but a public static property with a name matching the &lt;see cref=&quot;P:System.ComponentModel.DataAnnotations.DisplayAttribute.GroupName&quot; /&gt; value couldn't be found on the &lt;see cref=&quot;P:System.ComponentModel.DataAnnotations.DisplayAttribute.ResourceType&quot; /&gt;.">
        <see cref="P:System.ComponentModel.DataAnnotations.DisplayAttribute.ResourceType" /> プロパティと <see cref="P:System.ComponentModel.DataAnnotations.DisplayAttribute.GroupName" /> プロパティの両方が設定されていましたが、名前が <see cref="P:System.ComponentModel.DataAnnotations.DisplayAttribute.GroupName" /> 値に一致しているパブリック静的プロパティを <see cref="P:System.ComponentModel.DataAnnotations.DisplayAttribute.ResourceType" /> で見つけることができませんでした。</exception>
      <returns vsli:raw="A value that will be used for grouping fields in the UI, if &lt;see cref=&quot;P:System.ComponentModel.DataAnnotations.DisplayAttribute.GroupName&quot; /&gt; has been initialized; otherwise, &lt;see langword=&quot;null&quot; /&gt;. If the &lt;see cref=&quot;P:System.ComponentModel.DataAnnotations.DisplayAttribute.ResourceType&quot; /&gt; property has been specified and the &lt;see cref=&quot;P:System.ComponentModel.DataAnnotations.DisplayAttribute.GroupName&quot; /&gt; property represents a resource key, a localized string is returned; otherwise, a non-localized string is returned.">
        <see cref="P:System.ComponentModel.DataAnnotations.DisplayAttribute.GroupName" /> が初期化されている場合は、UI でのフィールドのグループ化に使用される値。それ以外の場合は <see langword="null" />。 <see cref="P:System.ComponentModel.DataAnnotations.DisplayAttribute.ResourceType" /> プロパティが指定されており、<see cref="P:System.ComponentModel.DataAnnotations.DisplayAttribute.GroupName" /> プロパティがリソース キーを表している場合は、ローカライズされた文字列が返されます。それ以外の場合は、ローカライズされていない文字列が返されます。</returns>
    </member>
    <member name="M:System.ComponentModel.DataAnnotations.DisplayAttribute.GetName">
      <summary vsli:raw="Returns a value that is used for field display in the UI.">UI でのフィールドの表示に使用される値を返します。</summary>
      <exception cref="T:System.InvalidOperationException" vsli:raw="The &lt;see cref=&quot;P:System.ComponentModel.DataAnnotations.DisplayAttribute.ResourceType&quot; /&gt; property and the &lt;see cref=&quot;P:System.ComponentModel.DataAnnotations.DisplayAttribute.Name&quot; /&gt; property are initialized, but a public static property that has a name that matches the &lt;see cref=&quot;P:System.ComponentModel.DataAnnotations.DisplayAttribute.Name&quot; /&gt; value could not be found for the &lt;see cref=&quot;P:System.ComponentModel.DataAnnotations.DisplayAttribute.ResourceType&quot; /&gt; property.">
        <see cref="P:System.ComponentModel.DataAnnotations.DisplayAttribute.ResourceType" /> プロパティおよび <see cref="P:System.ComponentModel.DataAnnotations.DisplayAttribute.Name" /> プロパティは初期化されますが、<see cref="P:System.ComponentModel.DataAnnotations.DisplayAttribute.Name" /> プロパティの <see cref="P:System.ComponentModel.DataAnnotations.DisplayAttribute.ResourceType" /> 値と一致する名前を持つパブリックな静的プロパティが見つかりませんでした。</exception>
      <returns vsli:raw="The localized string for the &lt;see cref=&quot;P:System.ComponentModel.DataAnnotations.DisplayAttribute.Name&quot; /&gt; property, if the &lt;see cref=&quot;P:System.ComponentModel.DataAnnotations.DisplayAttribute.ResourceType&quot; /&gt; property has been specified and the &lt;see cref=&quot;P:System.ComponentModel.DataAnnotations.DisplayAttribute.Name&quot; /&gt; property represents a resource key; otherwise, the non-localized value of the &lt;see cref=&quot;P:System.ComponentModel.DataAnnotations.DisplayAttribute.Name&quot; /&gt; property.">
        <see cref="P:System.ComponentModel.DataAnnotations.DisplayAttribute.Name" /> プロパティが指定されており、<see cref="P:System.ComponentModel.DataAnnotations.DisplayAttribute.ResourceType" /> プロパティがリソース キーを表している場合は、<see cref="P:System.ComponentModel.DataAnnotations.DisplayAttribute.Name" /> プロパティのローカライズされた文字列。それ以外の場合は、<see cref="P:System.ComponentModel.DataAnnotations.DisplayAttribute.Name" /> プロパティのローカライズされていない値。</returns>
    </member>
    <member name="M:System.ComponentModel.DataAnnotations.DisplayAttribute.GetOrder">
      <summary vsli:raw="Returns the value of the &lt;see cref=&quot;P:System.ComponentModel.DataAnnotations.DisplayAttribute.Order&quot; /&gt; property.">
        <see cref="P:System.ComponentModel.DataAnnotations.DisplayAttribute.Order" /> プロパティの値を返します。</summary>
      <returns vsli:raw="The value of the &lt;see cref=&quot;P:System.ComponentModel.DataAnnotations.DisplayAttribute.Order&quot; /&gt; property, if it has been set; otherwise, &lt;see langword=&quot;null&quot; /&gt;.">
        <see cref="P:System.ComponentModel.DataAnnotations.DisplayAttribute.Order" /> プロパティが設定されている場合はその値。それ以外の場合は <see langword="null" />。</returns>
    </member>
    <member name="M:System.ComponentModel.DataAnnotations.DisplayAttribute.GetPrompt">
      <summary vsli:raw="Returns the value of the &lt;see cref=&quot;P:System.ComponentModel.DataAnnotations.DisplayAttribute.Prompt&quot; /&gt; property.">
        <see cref="P:System.ComponentModel.DataAnnotations.DisplayAttribute.Prompt" /> プロパティの値を返します。</summary>
      <exception cref="T:System.InvalidOperationException" vsli:raw="Both the &lt;see cref=&quot;P:System.ComponentModel.DataAnnotations.DisplayAttribute.ResourceType&quot; /&gt; property and &lt;see cref=&quot;P:System.ComponentModel.DataAnnotations.DisplayAttribute.Prompt&quot; /&gt; properties were set, but a public static property with a name matching the &lt;see cref=&quot;P:System.ComponentModel.DataAnnotations.DisplayAttribute.Prompt&quot; /&gt; value couldn't be found on the &lt;see cref=&quot;P:System.ComponentModel.DataAnnotations.DisplayAttribute.ResourceType&quot; /&gt;.">
        <see cref="P:System.ComponentModel.DataAnnotations.DisplayAttribute.ResourceType" /> プロパティと <see cref="P:System.ComponentModel.DataAnnotations.DisplayAttribute.Prompt" /> プロパティの両方が設定されていましたが、名前が <see cref="P:System.ComponentModel.DataAnnotations.DisplayAttribute.Prompt" /> 値に一致しているパブリック静的プロパティを <see cref="P:System.ComponentModel.DataAnnotations.DisplayAttribute.ResourceType" /> で見つけることができませんでした。</exception>
      <returns vsli:raw="The localized string for the &lt;see cref=&quot;P:System.ComponentModel.DataAnnotations.DisplayAttribute.Prompt&quot; /&gt; property if the &lt;see cref=&quot;P:System.ComponentModel.DataAnnotations.DisplayAttribute.ResourceType&quot; /&gt; property has been specified and if the &lt;see cref=&quot;P:System.ComponentModel.DataAnnotations.DisplayAttribute.Prompt&quot; /&gt; property represents a resource key; otherwise, the non-localized value of the &lt;see cref=&quot;P:System.ComponentModel.DataAnnotations.DisplayAttribute.Prompt&quot; /&gt; property.">
        <see cref="P:System.ComponentModel.DataAnnotations.DisplayAttribute.Prompt" /> プロパティが指定されており、<see cref="P:System.ComponentModel.DataAnnotations.DisplayAttribute.ResourceType" /> プロパティがリソース キーを表している場合は、<see cref="P:System.ComponentModel.DataAnnotations.DisplayAttribute.Prompt" /> プロパティのローカライズされた文字列。それ以外の場合は、<see cref="P:System.ComponentModel.DataAnnotations.DisplayAttribute.Prompt" /> プロパティのローカライズされていない値。</returns>
    </member>
    <member name="M:System.ComponentModel.DataAnnotations.DisplayAttribute.GetShortName">
      <summary vsli:raw="Returns the value of the &lt;see cref=&quot;P:System.ComponentModel.DataAnnotations.DisplayAttribute.ShortName&quot; /&gt; property.">
        <see cref="P:System.ComponentModel.DataAnnotations.DisplayAttribute.ShortName" /> プロパティの値を返します。</summary>
      <exception cref="T:System.InvalidOperationException" vsli:raw="Both the &lt;see cref=&quot;P:System.ComponentModel.DataAnnotations.DisplayAttribute.ResourceType&quot; /&gt; property and &lt;see cref=&quot;P:System.ComponentModel.DataAnnotations.DisplayAttribute.ShortName&quot; /&gt; properties were set, &#xA;but a public static property with a name matching the &lt;see cref=&quot;P:System.ComponentModel.DataAnnotations.DisplayAttribute.ShortName&quot; /&gt; value couldn't be found on the &lt;see cref=&quot;P:System.ComponentModel.DataAnnotations.DisplayAttribute.ResourceType&quot; /&gt;.">
        <see cref="P:System.ComponentModel.DataAnnotations.DisplayAttribute.ResourceType" /> プロパティと <see cref="P:System.ComponentModel.DataAnnotations.DisplayAttribute.ShortName" /> プロパティの両方が設定されていましたが、名前が <see cref="P:System.ComponentModel.DataAnnotations.DisplayAttribute.ShortName" /> 値に一致しているパブリック静的プロパティを <see cref="P:System.ComponentModel.DataAnnotations.DisplayAttribute.ResourceType" /> で見つけることができませんでした。</exception>
      <returns vsli:raw="The localized string for the &lt;see cref=&quot;P:System.ComponentModel.DataAnnotations.DisplayAttribute.ShortName&quot; /&gt; property if the &lt;see cref=&quot;P:System.ComponentModel.DataAnnotations.DisplayAttribute.ResourceType&quot; /&gt; property has been specified and if the &lt;see cref=&quot;P:System.ComponentModel.DataAnnotations.DisplayAttribute.ShortName&quot; /&gt; property represents a resource key; otherwise, the non-localized value of the &lt;see cref=&quot;P:System.ComponentModel.DataAnnotations.DisplayAttribute.ShortName&quot; /&gt; value property.">
        <see cref="P:System.ComponentModel.DataAnnotations.DisplayAttribute.ShortName" /> プロパティが指定されており、<see cref="P:System.ComponentModel.DataAnnotations.DisplayAttribute.ResourceType" /> プロパティがリソース キーを表している場合は、<see cref="P:System.ComponentModel.DataAnnotations.DisplayAttribute.ShortName" /> プロパティのローカライズされた文字列。それ以外の場合は、<see cref="P:System.ComponentModel.DataAnnotations.DisplayAttribute.ShortName" /> プロパティのローカライズされていない値。</returns>
    </member>
    <member name="P:System.ComponentModel.DataAnnotations.DisplayAttribute.AutoGenerateField">
      <summary vsli:raw="Gets or sets a value that indicates whether UI should be generated automatically in order to display this field.">このフィールドを表示するための UI を自動的に生成するかどうかを示す値を取得または設定します。</summary>
      <exception cref="T:System.InvalidOperationException" vsli:raw="An attempt was made to get the property value before it was set.">プロパティ値を設定する前に取得しようとしました。</exception>
      <returns vsli:raw="&lt;see langword=&quot;true&quot; /&gt; if UI should be generated automatically to display this field; otherwise, &lt;see langword=&quot;false&quot; /&gt;.">このフィールドを表示する UI を自動的に生成する場合は <see langword="true" />。それ以外の場合は <see langword="false" />。</returns>
    </member>
    <member name="P:System.ComponentModel.DataAnnotations.DisplayAttribute.AutoGenerateFilter">
      <summary vsli:raw="Gets or sets a value that indicates whether filtering UI is automatically displayed for this field.">このフィールドにフィルター処理の UI が自動的に表示されるかどうかを示す値を取得または設定します。</summary>
      <exception cref="T:System.InvalidOperationException" vsli:raw="An attempt was made to get the property value before it was set.">プロパティ値を設定する前に取得しようとしました。</exception>
      <returns vsli:raw="&lt;see langword=&quot;true&quot; /&gt; if UI should be generated automatically to display filtering for this field; otherwise, &lt;see langword=&quot;false&quot; /&gt;.">このフィールドにフィルターを表示する UI を自動的に生成する場合は <see langword="true" />。それ以外の場合は <see langword="false" />。</returns>
    </member>
    <member name="P:System.ComponentModel.DataAnnotations.DisplayAttribute.Description">
      <summary vsli:raw="Gets or sets a value that is used to display a description in the UI.">UI に説明を表示するために使用される値を取得または設定します。</summary>
      <returns vsli:raw="The value that is used to display a description in the UI.">UI に説明を表示するために使用される値。</returns>
    </member>
    <member name="P:System.ComponentModel.DataAnnotations.DisplayAttribute.GroupName">
      <summary vsli:raw="Gets or sets a value that is used to group fields in the UI.">UI でのフィールドのグループ化に使用される値を取得または設定します。</summary>
      <returns vsli:raw="A value that is used to group fields in the UI.">UI でのフィールドのグループ化に使用される値。</returns>
    </member>
    <member name="P:System.ComponentModel.DataAnnotations.DisplayAttribute.Name">
      <summary vsli:raw="Gets or sets a value that is used for display in the UI.">UI での表示に使用される値を取得または設定します。</summary>
      <returns vsli:raw="A value that is used for display in the UI.">UI での表示に使用される値。</returns>
    </member>
    <member name="P:System.ComponentModel.DataAnnotations.DisplayAttribute.Order">
      <summary vsli:raw="Gets or sets the order weight of the column.">列の順序の重みを取得または設定します。</summary>
      <exception cref="T:System.InvalidOperationException" vsli:raw="The getter of this property has been invoked but its value has not been explicitly set using the setter.">このプロパティのゲッターは呼び出されていますが、その値がセッターを使用して明示的に設定されていません。</exception>
      <returns vsli:raw="The order weight of the column.">列の順序の重み。</returns>
    </member>
    <member name="P:System.ComponentModel.DataAnnotations.DisplayAttribute.Prompt">
      <summary vsli:raw="Gets or sets a value that will be used to set the watermark for prompts in the UI.">UI にプロンプトのウォーターマークを設定するために使用される値を取得または設定します。</summary>
      <returns vsli:raw="A value that will be used to display a watermark in the UI.">UI にウォーターマークを表示するために使用される値。</returns>
    </member>
    <member name="P:System.ComponentModel.DataAnnotations.DisplayAttribute.ResourceType">
      <summary vsli:raw="Gets or sets the type that contains the resources for the &lt;see cref=&quot;P:System.ComponentModel.DataAnnotations.DisplayAttribute.ShortName&quot; /&gt;, &lt;see cref=&quot;P:System.ComponentModel.DataAnnotations.DisplayAttribute.Name&quot; /&gt;, &lt;see cref=&quot;P:System.ComponentModel.DataAnnotations.DisplayAttribute.Prompt&quot; /&gt;, and &lt;see cref=&quot;P:System.ComponentModel.DataAnnotations.DisplayAttribute.Description&quot; /&gt; properties.">
        <see cref="P:System.ComponentModel.DataAnnotations.DisplayAttribute.ShortName" />、<see cref="P:System.ComponentModel.DataAnnotations.DisplayAttribute.Name" />、<see cref="P:System.ComponentModel.DataAnnotations.DisplayAttribute.Prompt" />、および <see cref="P:System.ComponentModel.DataAnnotations.DisplayAttribute.Description" /> の各プロパティのリソースを含んでいる型を取得または設定します。</summary>
      <returns vsli:raw="The type of the resource that contains the &lt;see cref=&quot;P:System.ComponentModel.DataAnnotations.DisplayAttribute.ShortName&quot; /&gt;, &lt;see cref=&quot;P:System.ComponentModel.DataAnnotations.DisplayAttribute.Name&quot; /&gt;, &lt;see cref=&quot;P:System.ComponentModel.DataAnnotations.DisplayAttribute.Prompt&quot; /&gt;, and &lt;see cref=&quot;P:System.ComponentModel.DataAnnotations.DisplayAttribute.Description&quot; /&gt; properties.">
        <see cref="P:System.ComponentModel.DataAnnotations.DisplayAttribute.ShortName" />、<see cref="P:System.ComponentModel.DataAnnotations.DisplayAttribute.Name" />、<see cref="P:System.ComponentModel.DataAnnotations.DisplayAttribute.Prompt" />、および <see cref="P:System.ComponentModel.DataAnnotations.DisplayAttribute.Description" /> の各プロパティを格納しているリソースの型。</returns>
    </member>
    <member name="P:System.ComponentModel.DataAnnotations.DisplayAttribute.ShortName">
      <summary vsli:raw="Gets or sets a value that is used for the grid column label.">グリッドの列ラベルに使用される値を取得または設定します。</summary>
      <returns vsli:raw="A value that is for the grid column label.">グリッドの列ラベルに使用される値。</returns>
    </member>
    <member name="T:System.ComponentModel.DataAnnotations.DisplayColumnAttribute">
      <summary vsli:raw="Specifies the column that is displayed in the referred table as a foreign-key column.">参照先テーブルで外部キー列として表示される列を指定します。</summary>
    </member>
    <member name="M:System.ComponentModel.DataAnnotations.DisplayColumnAttribute.#ctor(System.String)">
      <summary vsli:raw="Initializes a new instance of the &lt;see cref=&quot;T:System.ComponentModel.DataAnnotations.DisplayColumnAttribute&quot; /&gt; class by using the specified column.">指定された列を使用して、<see cref="T:System.ComponentModel.DataAnnotations.DisplayColumnAttribute" /> クラスの新しいインスタンスを初期化します。</summary>
      <param name="displayColumn" vsli:raw="The name of the column to use as the display column.">表示列として使用する列の名前。</param>
    </member>
    <member name="M:System.ComponentModel.DataAnnotations.DisplayColumnAttribute.#ctor(System.String,System.String)">
      <summary vsli:raw="Initializes a new instance of the &lt;see cref=&quot;T:System.ComponentModel.DataAnnotations.DisplayColumnAttribute&quot; /&gt; class by using the specified display and sort columns.">指定された表示列と並べ替え列を使用して、<see cref="T:System.ComponentModel.DataAnnotations.DisplayColumnAttribute" /> クラスの新しいインスタンスを初期化します。</summary>
      <param name="displayColumn" vsli:raw="The name of the column to use as the display column.">表示列として使用する列の名前。</param>
      <param name="sortColumn" vsli:raw="The name of the column to use for sorting.">並べ替えに使用する列の名前。</param>
    </member>
    <member name="M:System.ComponentModel.DataAnnotations.DisplayColumnAttribute.#ctor(System.String,System.String,System.Boolean)">
      <summary vsli:raw="Initializes a new instance of the &lt;see cref=&quot;T:System.ComponentModel.DataAnnotations.DisplayColumnAttribute&quot; /&gt; class by using the specified display column, and the specified sort column and sort order.">指定された表示列と指定された並べ替え列および並べ替え順序を使用して、<see cref="T:System.ComponentModel.DataAnnotations.DisplayColumnAttribute" /> クラスの新しいインスタンスを初期化します。</summary>
      <param name="displayColumn" vsli:raw="The name of the column to use as the display column.">表示列として使用する列の名前。</param>
      <param name="sortColumn" vsli:raw="The name of the column to use for sorting.">並べ替えに使用する列の名前。</param>
      <param name="sortDescending" vsli:raw="&lt;see langword=&quot;true&quot; /&gt; to sort in descending order; otherwise, &lt;see langword=&quot;false&quot; /&gt;. The default is &lt;see langword=&quot;false&quot; /&gt;.">降順で並べ替える場合は <see langword="true" />。それ以外の場合は <see langword="false" />。 既定値は、<see langword="false" /> です。</param>
    </member>
    <member name="P:System.ComponentModel.DataAnnotations.DisplayColumnAttribute.DisplayColumn">
      <summary vsli:raw="Gets the name of the column to use as the display field.">表示フィールドとして使用する列の名前を取得します。</summary>
      <returns vsli:raw="The name of the display column.">表示列の名前。</returns>
    </member>
    <member name="P:System.ComponentModel.DataAnnotations.DisplayColumnAttribute.SortColumn">
      <summary vsli:raw="Gets the name of the column to use for sorting.">並べ替えに使用する列の名前を取得します。</summary>
      <returns vsli:raw="The name of the sort column.">並べ替え列の名前。</returns>
    </member>
    <member name="P:System.ComponentModel.DataAnnotations.DisplayColumnAttribute.SortDescending">
      <summary vsli:raw="Gets a value that indicates whether to sort in descending or ascending order.">降順と昇順のどちらで並べ替えるかを示す値を取得します。</summary>
      <returns vsli:raw="&lt;see langword=&quot;true&quot; /&gt; if the column will be sorted in descending order; otherwise, &lt;see langword=&quot;false&quot; /&gt;.">列が降順で並べ替えられる場合は <see langword="true" />。それ以外の場合は <see langword="false" />。</returns>
    </member>
    <member name="T:System.ComponentModel.DataAnnotations.DisplayFormatAttribute">
      <summary vsli:raw="Specifies how data fields are displayed and formatted by ASP.NET Dynamic Data.">ASP.NET Dynamic Data によるデータ フィールドの表示方法と書式を指定します。</summary>
    </member>
    <member name="M:System.ComponentModel.DataAnnotations.DisplayFormatAttribute.#ctor">
      <summary vsli:raw="Initializes a new instance of the &lt;see cref=&quot;T:System.ComponentModel.DataAnnotations.DisplayFormatAttribute&quot; /&gt; class.">
        <see cref="T:System.ComponentModel.DataAnnotations.DisplayFormatAttribute" /> クラスの新しいインスタンスを初期化します。</summary>
    </member>
    <member name="M:System.ComponentModel.DataAnnotations.DisplayFormatAttribute.GetNullDisplayText">
      <summary vsli:raw="Returns the UI display string for &lt;see cref=&quot;P:System.ComponentModel.DataAnnotations.DisplayFormatAttribute.NullDisplayText&quot; /&gt;.">
        <see cref="P:System.ComponentModel.DataAnnotations.DisplayFormatAttribute.NullDisplayText" /> に対する UI 表示文字列を返します。</summary>
      <exception cref="T:System.InvalidOperationException" vsli:raw="Both the &lt;see cref=&quot;P:System.ComponentModel.DataAnnotations.DisplayFormatAttribute.NullDisplayTextResourceType&quot; /&gt; and &lt;see cref=&quot;P:System.ComponentModel.DataAnnotations.DisplayFormatAttribute.NullDisplayText&quot; /&gt; properties are set, but a public static property with a name matching the &lt;see cref=&quot;P:System.ComponentModel.DataAnnotations.DisplayFormatAttribute.NullDisplayText&quot; /&gt; value cannot be found on the &lt;see cref=&quot;P:System.ComponentModel.DataAnnotations.DisplayFormatAttribute.NullDisplayTextResourceType&quot; /&gt;.">
        <see cref="P:System.ComponentModel.DataAnnotations.DisplayFormatAttribute.NullDisplayTextResourceType" /> プロパティと <see cref="P:System.ComponentModel.DataAnnotations.DisplayFormatAttribute.NullDisplayText" /> プロパティの両方が設定されていますが、名前が <see cref="P:System.ComponentModel.DataAnnotations.DisplayFormatAttribute.NullDisplayText" /> 値に一致しているパブリック静的プロパティを <see cref="P:System.ComponentModel.DataAnnotations.DisplayFormatAttribute.NullDisplayTextResourceType" /> で見つけることができません。</exception>
      <returns vsli:raw="&lt;para&gt;The UI display string.&lt;/para&gt;&lt;para&gt;If &lt;see cref=&quot;P:System.ComponentModel.DataAnnotations.DisplayFormatAttribute.NullDisplayTextResourceType&quot; /&gt; has not been specified, the value of &lt;see cref=&quot;P:System.ComponentModel.DataAnnotations.DisplayFormatAttribute.NullDisplayText&quot; /&gt; is returned.&lt;/para&gt;&lt;para&gt;If &lt;see cref=&quot;P:System.ComponentModel.DataAnnotations.DisplayFormatAttribute.NullDisplayTextResourceType&quot; /&gt; has been specified and &lt;see cref=&quot;P:System.ComponentModel.DataAnnotations.DisplayFormatAttribute.NullDisplayText&quot; /&gt; represents a resource key within that resource type, the localized value is returned.&lt;/para&gt;&lt;para&gt;If &lt;see cref=&quot;P:System.ComponentModel.DataAnnotations.DisplayFormatAttribute.NullDisplayText&quot; /&gt; and &lt;see cref=&quot;P:System.ComponentModel.DataAnnotations.DisplayFormatAttribute.NullDisplayTextResourceType&quot; /&gt; have not been set, returns &lt;see langword=&quot;null&quot; /&gt;.&lt;/para&gt;">
        <para>UI 表示文字列。</para>
        <para>
          <see cref="P:System.ComponentModel.DataAnnotations.DisplayFormatAttribute.NullDisplayTextResourceType" /> が指定されていない場合、<see cref="P:System.ComponentModel.DataAnnotations.DisplayFormatAttribute.NullDisplayText" /> の値が返されます。</para>
        <para>
          <see cref="P:System.ComponentModel.DataAnnotations.DisplayFormatAttribute.NullDisplayTextResourceType" /> が指定されており、<see cref="P:System.ComponentModel.DataAnnotations.DisplayFormatAttribute.NullDisplayText" /> がそのリソースの種類内でリソース キーを表す場合、ローカライズされた値が返されます。</para>
        <para>
          <see cref="P:System.ComponentModel.DataAnnotations.DisplayFormatAttribute.NullDisplayText" /> と <see cref="P:System.ComponentModel.DataAnnotations.DisplayFormatAttribute.NullDisplayTextResourceType" /> が設定されていない場合は、<see langword="null" /> を返します。</para>
      </returns>
    </member>
    <member name="P:System.ComponentModel.DataAnnotations.DisplayFormatAttribute.ApplyFormatInEditMode">
      <summary vsli:raw="Gets or sets a value that indicates whether the formatting string that is specified by the &lt;see cref=&quot;P:System.ComponentModel.DataAnnotations.DisplayFormatAttribute.DataFormatString&quot; /&gt; property is applied to the field value when the data field is in edit mode.">データ フィールドが編集モードである場合に <see cref="P:System.ComponentModel.DataAnnotations.DisplayFormatAttribute.DataFormatString" /> プロパティで指定した書式指定文字列をフィールド値に適用するかどうかを示す値を取得または設定します。</summary>
      <returns vsli:raw="&lt;see langword=&quot;true&quot; /&gt; if the formatting string applies to the field value in edit mode; otherwise, &lt;see langword=&quot;false&quot; /&gt;. The default is &lt;see langword=&quot;false&quot; /&gt;.">編集モードで書式指定文字列をフィールド値に適用する場合は <see langword="true" />。それ以外の場合は <see langword="false" />。 既定値は、<see langword="false" /> です。</returns>
    </member>
    <member name="P:System.ComponentModel.DataAnnotations.DisplayFormatAttribute.ConvertEmptyStringToNull">
      <summary vsli:raw="Gets or sets a value that indicates whether empty string values (&quot;&quot;) are automatically converted to &lt;see langword=&quot;null&quot; /&gt; when the data field is updated in the data source.">データ ソースのデータ フィールドを更新するときに、空の文字列値 ("") を <see langword="null" /> に自動的に変換するかどうかを示す値を取得または設定します。</summary>
      <returns vsli:raw="&lt;see langword=&quot;true&quot; /&gt; if empty string values are automatically converted to &lt;see langword=&quot;null&quot; /&gt;; otherwise, &lt;see langword=&quot;false&quot; /&gt;. The default is &lt;see langword=&quot;true&quot; /&gt;.">空の文字列値を <see langword="true" /> に自動的に変換する場合は <see langword="null" />。それ以外の場合は <see langword="false" />。 既定値は、<see langword="true" /> です。</returns>
    </member>
    <member name="P:System.ComponentModel.DataAnnotations.DisplayFormatAttribute.DataFormatString">
      <summary vsli:raw="Gets or sets the display format for the field value.">フィールド値の表示形式を取得または設定します。</summary>
      <returns vsli:raw="A formatting string that specifies the display format for the value of the data field. The default is an empty string (&quot;&quot;), which indicates that no special formatting is applied to the field value.">データ フィールドの値の表示形式を指定する書式指定文字列。 既定値は空の文字列 ("") です。この値は、フィールド値に適用される特定の書式が設定されていないことを示します。</returns>
    </member>
    <member name="P:System.ComponentModel.DataAnnotations.DisplayFormatAttribute.HtmlEncode">
      <summary vsli:raw="Gets or sets a value that indicates whether the field should be HTML-encoded.">フィールドを HTML エンコードするかどうかを示す値を取得または設定します。</summary>
      <returns vsli:raw="&lt;see langword=&quot;true&quot; /&gt; if the field should be HTML-encoded; otherwise, &lt;see langword=&quot;false&quot; /&gt;.">フィールドを HTML エンコードする場合は <see langword="true" />。それ以外の場合は <see langword="false" />。</returns>
    </member>
    <member name="P:System.ComponentModel.DataAnnotations.DisplayFormatAttribute.NullDisplayText">
      <summary vsli:raw="Gets or sets the text that is displayed for a field when the field's value is &lt;see langword=&quot;null&quot; /&gt;.">フィールドの値が <see langword="null" /> の場合にフィールドに表示するテキストを取得または設定します。</summary>
      <returns vsli:raw="The text that is displayed for a field when the field's value is &lt;see langword=&quot;null&quot; /&gt;. The default is an empty string (&quot;&quot;), which indicates that this property is not set.">フィールドの値が <see langword="null" /> の場合にフィールドに表示されるテキスト。 既定値は空の文字列 ("") です。このプロパティが設定されていないことを示します。</returns>
    </member>
    <member name="P:System.ComponentModel.DataAnnotations.DisplayFormatAttribute.NullDisplayTextResourceType">
      <summary vsli:raw="Gets or sets the &lt;see cref=&quot;T:System.Type&quot; /&gt; that contains the resources for &lt;see cref=&quot;P:System.ComponentModel.DataAnnotations.DisplayFormatAttribute.NullDisplayText&quot; /&gt;.&#xA;        &#xA;Using &lt;see cref=&quot;P:System.ComponentModel.DataAnnotations.DisplayFormatAttribute.NullDisplayTextResourceType&quot; /&gt; along with &lt;see cref=&quot;P:System.ComponentModel.DataAnnotations.DisplayFormatAttribute.NullDisplayText&quot; /&gt;, allows the &lt;see cref=&quot;M:System.ComponentModel.DataAnnotations.DisplayFormatAttribute.GetNullDisplayText&quot; /&gt; method to return localized values.">
        <see cref="P:System.ComponentModel.DataAnnotations.DisplayFormatAttribute.NullDisplayText" /> のリソースを含む <see cref="T:System.Type" /> を取得または設定します。
        
<see cref="P:System.ComponentModel.DataAnnotations.DisplayFormatAttribute.NullDisplayText" /> と <see cref="P:System.ComponentModel.DataAnnotations.DisplayFormatAttribute.NullDisplayTextResourceType" /> を使用して、<see cref="M:System.ComponentModel.DataAnnotations.DisplayFormatAttribute.GetNullDisplayText" /> メソッドでローカライズされた値を返すことを許可します。</summary>
    </member>
    <member name="T:System.ComponentModel.DataAnnotations.EditableAttribute">
      <summary vsli:raw="Indicates whether a data field is editable.">データ フィールドが編集可能かどうかを示します。</summary>
    </member>
    <member name="M:System.ComponentModel.DataAnnotations.EditableAttribute.#ctor(System.Boolean)">
      <summary vsli:raw="Initializes a new instance of the &lt;see cref=&quot;T:System.ComponentModel.DataAnnotations.EditableAttribute&quot; /&gt; class.">
        <see cref="T:System.ComponentModel.DataAnnotations.EditableAttribute" /> クラスの新しいインスタンスを初期化します。</summary>
      <param name="allowEdit" vsli:raw="&lt;see langword=&quot;true&quot; /&gt; to specify that field is editable; otherwise, &lt;see langword=&quot;false&quot; /&gt;.">フィールドを編集可能として指定する場合は <see langword="true" />。それ以外の場合は <see langword="false" />。</param>
    </member>
    <member name="P:System.ComponentModel.DataAnnotations.EditableAttribute.AllowEdit">
      <summary vsli:raw="Gets a value that indicates whether a field is editable.">フィールドが編集可能かどうかを示す値を取得します。</summary>
      <returns vsli:raw="&lt;see langword=&quot;true&quot; /&gt; if the field is editable; otherwise, &lt;see langword=&quot;false&quot; /&gt;.">フィールドが編集可能の場合は <see langword="true" />。それ以外の場合は <see langword="false" />。</returns>
    </member>
    <member name="P:System.ComponentModel.DataAnnotations.EditableAttribute.AllowInitialValue">
      <summary vsli:raw="Gets or sets a value that indicates whether an initial value is enabled.">初期値が有効かどうかを示す値を取得または設定します。</summary>
      <returns vsli:raw="&lt;see langword=&quot;true&quot; /&gt; if an initial value is enabled; otherwise, &lt;see langword=&quot;false&quot; /&gt;.">
        <see langword="true" /> 初期値が有効になっている場合は。それ以外の場合は <see langword="false" /> 。</returns>
    </member>
    <member name="T:System.ComponentModel.DataAnnotations.EmailAddressAttribute">
      <summary vsli:raw="Validates an email address.">電子メール アドレスを検証します。</summary>
    </member>
    <member name="M:System.ComponentModel.DataAnnotations.EmailAddressAttribute.#ctor">
      <summary vsli:raw="Initializes a new instance of the &lt;see cref=&quot;T:System.ComponentModel.DataAnnotations.EmailAddressAttribute&quot; /&gt; class.">
        <see cref="T:System.ComponentModel.DataAnnotations.EmailAddressAttribute" /> クラスの新しいインスタンスを初期化します。</summary>
    </member>
    <member name="M:System.ComponentModel.DataAnnotations.EmailAddressAttribute.IsValid(System.Object)">
      <summary vsli:raw="Determines whether the specified value matches the pattern of a valid email address.">指定した値が有効な電子メール アドレスのパターンと一致するかどうかを判断します。</summary>
      <param name="value" vsli:raw="The value to validate.">検証する値。</param>
      <returns vsli:raw="&lt;see langword=&quot;true&quot; /&gt; if the specified value is valid or &lt;see langword=&quot;null&quot; /&gt;; otherwise, &lt;see langword=&quot;false&quot; /&gt;.">指定された値が有効であるか、<see langword="true" /> の場合は <see langword="null" />。それ以外の場合は <see langword="false" />。</returns>
    </member>
    <member name="T:System.ComponentModel.DataAnnotations.EnumDataTypeAttribute">
      <summary vsli:raw="Enables a .NET enumeration to be mapped to a data column.">.NET Framework の列挙型をデータ列にマップできるようにします。</summary>
    </member>
    <member name="M:System.ComponentModel.DataAnnotations.EnumDataTypeAttribute.#ctor(System.Type)">
      <summary vsli:raw="Initializes a new instance of the &lt;see cref=&quot;T:System.ComponentModel.DataAnnotations.EnumDataTypeAttribute&quot; /&gt; class.">
        <see cref="T:System.ComponentModel.DataAnnotations.EnumDataTypeAttribute" /> クラスの新しいインスタンスを初期化します。</summary>
      <param name="enumType" vsli:raw="The type of the enumeration.">列挙体の型。</param>
    </member>
    <member name="M:System.ComponentModel.DataAnnotations.EnumDataTypeAttribute.IsValid(System.Object)">
      <summary vsli:raw="Checks that the value of the data field is valid.">データ フィールドの値が有効かどうかをチェックします。</summary>
      <param name="value" vsli:raw="The data field value to validate.">検証するデータ フィールド値。</param>
      <returns vsli:raw="&lt;see langword=&quot;true&quot; /&gt; if the data field value is valid; otherwise, &lt;see langword=&quot;false&quot; /&gt;.">データ フィールドの値が有効である場合は <see langword="true" />。それ以外の場合は <see langword="false" />。</returns>
    </member>
    <member name="P:System.ComponentModel.DataAnnotations.EnumDataTypeAttribute.EnumType">
      <summary vsli:raw="Gets or sets the enumeration type.">列挙型を取得または設定します。</summary>
      <returns vsli:raw="The enumeration type.">列挙型。</returns>
    </member>
    <member name="T:System.ComponentModel.DataAnnotations.FileExtensionsAttribute">
      <summary vsli:raw="Validates file name extensions.">ファイル名拡張子を検証します。</summary>
    </member>
    <member name="M:System.ComponentModel.DataAnnotations.FileExtensionsAttribute.#ctor">
      <summary vsli:raw="Initializes a new instance of the &lt;see cref=&quot;T:System.ComponentModel.DataAnnotations.FileExtensionsAttribute&quot; /&gt; class.">
        <see cref="T:System.ComponentModel.DataAnnotations.FileExtensionsAttribute" /> クラスの新しいインスタンスを初期化します。</summary>
    </member>
    <member name="M:System.ComponentModel.DataAnnotations.FileExtensionsAttribute.FormatErrorMessage(System.String)">
      <summary vsli:raw="Applies formatting to an error message, based on the data field where the error occurred.">エラーが発生したデータ フィールドに基づいて、エラー メッセージに書式を適用します。</summary>
      <param name="name" vsli:raw="The name of the field that caused the validation failure.">検証失敗の原因になったフィールドの名前。</param>
      <returns vsli:raw="The formatted error message.">形式を設定したエラー メッセージです。</returns>
    </member>
    <member name="M:System.ComponentModel.DataAnnotations.FileExtensionsAttribute.IsValid(System.Object)">
      <summary vsli:raw="Checks that the specified file name extension or extensions is valid.">指定したファイル名拡張子または拡張機能が有効であることを確認します。</summary>
      <param name="value" vsli:raw="A comma delimited list of valid file extensions.">有効なファイル拡張子のコンマ区切りのリスト。</param>
      <returns vsli:raw="&lt;see langword=&quot;true&quot; /&gt; if the file name extension is valid; otherwise, &lt;see langword=&quot;false&quot; /&gt;.">ファイル名拡張子が有効である場合は <see langword="true" />。それ以外の場合は <see langword="false" />。</returns>
    </member>
    <member name="P:System.ComponentModel.DataAnnotations.FileExtensionsAttribute.Extensions">
      <summary vsli:raw="Gets or sets the file name extensions.">ファイル名の拡張子を取得または設定します。</summary>
      <returns vsli:raw="The file name extensions, or the default file extensions (&quot;.png&quot;, &quot;.jpg&quot;, &quot;.jpeg&quot;, and &quot;.gif&quot;) if the property is not set.">ファイル名拡張子。プロパティが設定されていない場合は既定のファイル拡張子 (".gif"、".jpg"、".jpeg"、".gif")。</returns>
    </member>
    <member name="T:System.ComponentModel.DataAnnotations.FilterUIHintAttribute">
      <summary vsli:raw="Represents an attribute that is used to specify the filtering behavior for a column.">列のフィルター処理動作を指定するために使用する属性を表します。</summary>
    </member>
    <member name="M:System.ComponentModel.DataAnnotations.FilterUIHintAttribute.#ctor(System.String)">
      <summary vsli:raw="Initializes a new instance of the &lt;see cref=&quot;T:System.ComponentModel.DataAnnotations.FilterUIHintAttribute&quot; /&gt; class by using the filter UI hint.">フィルター UI ヒントを使用して、<see cref="T:System.ComponentModel.DataAnnotations.FilterUIHintAttribute" /> クラスの新しいインスタンスを初期化します。</summary>
      <param name="filterUIHint" vsli:raw="The name of the control to use for filtering.">フィルター処理用のコントロールの名前。</param>
    </member>
    <member name="M:System.ComponentModel.DataAnnotations.FilterUIHintAttribute.#ctor(System.String,System.String)">
      <summary vsli:raw="Initializes a new instance of the &lt;see cref=&quot;T:System.ComponentModel.DataAnnotations.FilterUIHintAttribute&quot; /&gt; class by using the filter UI hint and presentation layer name.">フィルター UI ヒントとプレゼンテーション層の名前を使用して、<see cref="T:System.ComponentModel.DataAnnotations.FilterUIHintAttribute" /> クラスの新しいインスタンスを初期化します。</summary>
      <param name="filterUIHint" vsli:raw="The name of the control to use for filtering.">フィルター処理用のコントロールの名前。</param>
      <param name="presentationLayer" vsli:raw="The name of the presentation layer that supports this control.">このコントロールをサポートするプレゼンテーション層の名前。</param>
    </member>
    <member name="M:System.ComponentModel.DataAnnotations.FilterUIHintAttribute.#ctor(System.String,System.String,System.Object[])">
      <summary vsli:raw="Initializes a new instance of the &lt;see cref=&quot;T:System.ComponentModel.DataAnnotations.FilterUIHintAttribute&quot; /&gt; class by using the filter UI hint, presentation layer name, and control parameters.">フィルター UI ヒント、プレゼンテーション層の名前、およびコントロールのパラメーターを使用して、<see cref="T:System.ComponentModel.DataAnnotations.FilterUIHintAttribute" /> クラスの新しいインスタンスを初期化します。</summary>
      <param name="filterUIHint" vsli:raw="The name of the control to use for filtering.">フィルター処理用のコントロールの名前。</param>
      <param name="presentationLayer" vsli:raw="The name of the presentation layer that supports this control.">このコントロールをサポートするプレゼンテーション層の名前。</param>
      <param name="controlParameters" vsli:raw="The list of parameters for the control.">コントロールのパラメーターのリスト。</param>
    </member>
    <member name="M:System.ComponentModel.DataAnnotations.FilterUIHintAttribute.Equals(System.Object)">
      <summary vsli:raw="Returns a value that indicates whether this attribute instance is equal to a specified object.">この属性インスタンスが、指定したオブジェクトに等しいかどうかを示す値を返します。</summary>
      <param name="obj" vsli:raw="The object to compare with this attribute instance.">この属性インスタンスと比較するオブジェクト。</param>
      <returns vsli:raw="&lt;see langword=&quot;true&quot; /&gt; if the passed object is equal to this attribute instance; otherwise, &lt;see langword=&quot;false&quot; /&gt;.">渡されたオブジェクトがこの属性インスタンスに等しい場合は <see langword="true" />。それ以外の場合は <see langword="false" />。</returns>
    </member>
    <member name="M:System.ComponentModel.DataAnnotations.FilterUIHintAttribute.GetHashCode">
      <summary vsli:raw="Returns the hash code for this attribute instance.">この属性インスタンスのハッシュ コードを返します。</summary>
      <returns vsli:raw="This attribute instance hash code.">この属性インスタンスのハッシュ コード。</returns>
    </member>
    <member name="P:System.ComponentModel.DataAnnotations.FilterUIHintAttribute.ControlParameters">
      <summary vsli:raw="Gets the name/value pairs that are used as parameters in the control's constructor.">コントロールのコンストラクターでパラメーターとして使用される名前と値のペアを取得します。</summary>
      <exception cref="T:System.InvalidOperationException" vsli:raw="The current attribute is ill-formed.">現在の属性の形式が誤っています。</exception>
      <returns vsli:raw="The name/value pairs that are used as parameters in the control's constructor.">コントロールのコンストラクターでパラメーターとして使用される名前と値のペア。</returns>
    </member>
    <member name="P:System.ComponentModel.DataAnnotations.FilterUIHintAttribute.FilterUIHint">
      <summary vsli:raw="Gets the name of the control to use for filtering.">フィルター処理用のコントロールの名前を取得します。</summary>
      <returns vsli:raw="The name of the control to use for filtering.">フィルター処理用のコントロールの名前。</returns>
    </member>
    <member name="P:System.ComponentModel.DataAnnotations.FilterUIHintAttribute.PresentationLayer">
      <summary vsli:raw="Gets the name of the presentation layer that supports this control.">このコントロールをサポートするプレゼンテーション層の名前を取得します。</summary>
      <returns vsli:raw="The name of the presentation layer that supports this control.">このコントロールをサポートするプレゼンテーション層の名前。</returns>
    </member>
    <member name="T:System.ComponentModel.DataAnnotations.IValidatableObject">
      <summary vsli:raw="Provides a way for an object to be validated.">オブジェクトを検証する方法を提供します。</summary>
    </member>
    <member name="M:System.ComponentModel.DataAnnotations.IValidatableObject.Validate(System.ComponentModel.DataAnnotations.ValidationContext)">
      <summary vsli:raw="Determines whether the specified object is valid.">指定されたオブジェクトが有効かどうかを判断します。</summary>
      <param name="validationContext" vsli:raw="The validation context.">検証コンテキスト。</param>
      <returns vsli:raw="A collection that holds failed-validation information.">失敗した検証の情報を保持するコレクション。</returns>
    </member>
    <member name="T:System.ComponentModel.DataAnnotations.KeyAttribute">
      <summary vsli:raw="Denotes one or more properties that uniquely identify an entity.">エンティティを一意に識別する 1 つ以上のプロパティを表します。</summary>
    </member>
    <member name="M:System.ComponentModel.DataAnnotations.KeyAttribute.#ctor">
      <summary vsli:raw="Initializes a new instance of the &lt;see cref=&quot;T:System.ComponentModel.DataAnnotations.KeyAttribute&quot; /&gt; class.">
        <see cref="T:System.ComponentModel.DataAnnotations.KeyAttribute" /> クラスの新しいインスタンスを初期化します。</summary>
    </member>
    <member name="T:System.ComponentModel.DataAnnotations.MaxLengthAttribute">
      <summary vsli:raw="Specifies the maximum length of array or string data allowed in a property.">プロパティで許容される配列または文字列データの最大長を指定します。</summary>
    </member>
    <member name="M:System.ComponentModel.DataAnnotations.MaxLengthAttribute.#ctor">
      <summary vsli:raw="Initializes a new instance of the &lt;see cref=&quot;T:System.ComponentModel.DataAnnotations.MaxLengthAttribute&quot; /&gt; class.">
        <see cref="T:System.ComponentModel.DataAnnotations.MaxLengthAttribute" /> クラスの新しいインスタンスを初期化します。</summary>
    </member>
    <member name="M:System.ComponentModel.DataAnnotations.MaxLengthAttribute.#ctor(System.Int32)">
      <summary vsli:raw="Initializes a new instance of the &lt;see cref=&quot;T:System.ComponentModel.DataAnnotations.MaxLengthAttribute&quot; /&gt; class based on the &lt;paramref name=&quot;length&quot; /&gt; parameter.">
        <paramref name="length" /> パラメーターに基づいて、<see cref="T:System.ComponentModel.DataAnnotations.MaxLengthAttribute" /> クラスの新しいインスタンスを初期化します。</summary>
      <param name="length" vsli:raw="The maximum allowable length of array or string data.">配列または文字列データの許容される最大長。</param>
    </member>
    <member name="M:System.ComponentModel.DataAnnotations.MaxLengthAttribute.FormatErrorMessage(System.String)">
      <summary vsli:raw="Applies formatting to a specified error message.">指定したエラー メッセージに書式を適用します</summary>
      <param name="name" vsli:raw="The name to include in the formatted string.">書式設定された文字列に含める名前。</param>
      <returns vsli:raw="A localized string to describe the maximum acceptable length.">許容される最大長を説明する、ローカライズされた文字列。</returns>
    </member>
    <member name="M:System.ComponentModel.DataAnnotations.MaxLengthAttribute.IsValid(System.Object)">
      <summary vsli:raw="Determines whether a specified object is valid.">指定したオブジェクトが有効かどうかを判断します</summary>
      <param name="value" vsli:raw="The object to validate.">検証対象のオブジェクト。</param>
      <exception cref="T:System.InvalidOperationException" vsli:raw="Length is zero or less than negative one.">長さは 0 または負の 1 より小さい値です。</exception>
      <returns vsli:raw="&lt;see langword=&quot;true&quot; /&gt; if the value is null, or if the value is less than or equal to the specified maximum length; otherwise, &lt;see langword=&quot;false&quot; /&gt;.">値が null の場合、または値が指定された最大長以下の場合は <see langword="true" />。それ以外の場合は <see langword="false" />。</returns>
    </member>
    <member name="P:System.ComponentModel.DataAnnotations.MaxLengthAttribute.Length">
      <summary vsli:raw="Gets the maximum allowable length of the array or string data.">配列または文字列データの許容される最大長を取得します。</summary>
      <returns vsli:raw="The maximum allowable length of the array or string data.">配列または文字列データの許容される最大長。</returns>
    </member>
    <member name="T:System.ComponentModel.DataAnnotations.MetadataTypeAttribute">
      <summary vsli:raw="Specifies the metadata class to associate with a data model class.">データ モデル クラスに関連付けるメタデータ クラスを指定します。</summary>
    </member>
    <member name="M:System.ComponentModel.DataAnnotations.MetadataTypeAttribute.#ctor(System.Type)">
      <summary vsli:raw="Initializes a new instance of the &lt;see cref=&quot;T:System.ComponentModel.DataAnnotations.MetadataTypeAttribute&quot; /&gt; class.">
        <see cref="T:System.ComponentModel.DataAnnotations.MetadataTypeAttribute" /> クラスの新しいインスタンスを初期化します。</summary>
      <param name="metadataClassType" vsli:raw="The metadata class to reference.">参照するメタデータ クラス。</param>
      <exception cref="T:System.ArgumentNullException" vsli:raw="&lt;paramref name=&quot;metadataClassType&quot; /&gt; is &lt;see langword=&quot;null&quot; /&gt;.">
        <paramref name="metadataClassType" /> が <see langword="null" />です。</exception>
    </member>
    <member name="P:System.ComponentModel.DataAnnotations.MetadataTypeAttribute.MetadataClassType">
      <summary vsli:raw="Gets the metadata class that is associated with a data-model partial class.">データ モデル部分クラスに関連付けられたメタデータ クラスを取得します。</summary>
      <returns vsli:raw="The type value that represents the metadata class.">メタデータ クラスを表す型の値。</returns>
    </member>
    <member name="T:System.ComponentModel.DataAnnotations.MinLengthAttribute">
      <summary vsli:raw="Specifies the minimum length of array or string data allowed in a property.">プロパティで許容される配列または文字列データの最小長を指定します。</summary>
    </member>
    <member name="M:System.ComponentModel.DataAnnotations.MinLengthAttribute.#ctor(System.Int32)">
      <summary vsli:raw="Initializes a new instance of the &lt;see cref=&quot;T:System.ComponentModel.DataAnnotations.MinLengthAttribute&quot; /&gt; class.">
        <see cref="T:System.ComponentModel.DataAnnotations.MinLengthAttribute" /> クラスの新しいインスタンスを初期化します。</summary>
      <param name="length" vsli:raw="The length of the array or string data.">配列または文字列データの長さ。</param>
    </member>
    <member name="M:System.ComponentModel.DataAnnotations.MinLengthAttribute.FormatErrorMessage(System.String)">
      <summary vsli:raw="Applies formatting to a specified error message.">指定したエラー メッセージに書式を適用します</summary>
      <param name="name" vsli:raw="The name to include in the formatted string.">書式設定された文字列に含める名前。</param>
      <returns vsli:raw="A localized string to describe the minimum acceptable length.">許容される最小長を説明する、ローカライズされた文字列。</returns>
    </member>
    <member name="M:System.ComponentModel.DataAnnotations.MinLengthAttribute.IsValid(System.Object)">
      <summary vsli:raw="Determines whether a specified object is valid.">指定したオブジェクトが有効かどうかを判断します</summary>
      <param name="value" vsli:raw="The object to validate.">検証対象のオブジェクト。</param>
      <exception cref="T:System.InvalidOperationException" vsli:raw="Length is less than zero.">長さが 0 未満です。</exception>
      <returns vsli:raw="&lt;see langword=&quot;true&quot; /&gt; if the specified object is valid; otherwise, &lt;see langword=&quot;false&quot; /&gt;.">指定したオブジェクトが有効である場合は <see langword="true" />。それ以外の場合は <see langword="false" />。</returns>
    </member>
    <member name="P:System.ComponentModel.DataAnnotations.MinLengthAttribute.Length">
      <summary vsli:raw="Gets or sets the minimum allowable length of the array or string data.">配列または文字列データに許容される最小長を取得または設定します。</summary>
      <returns vsli:raw="The minimum allowable length of the array or string data.">配列または文字列データの許容される最小長。</returns>
    </member>
    <member name="T:System.ComponentModel.DataAnnotations.PhoneAttribute">
      <summary vsli:raw="Specifies that a data field value is a well-formed phone number.">データ フィールドの値が適切な形式のクレジット カードの番号であることを指定します。</summary>
    </member>
    <member name="M:System.ComponentModel.DataAnnotations.PhoneAttribute.#ctor">
      <summary vsli:raw="Initializes a new instance of the &lt;see cref=&quot;T:System.ComponentModel.DataAnnotations.PhoneAttribute&quot; /&gt; class.">
        <see cref="T:System.ComponentModel.DataAnnotations.PhoneAttribute" /> クラスの新しいインスタンスを初期化します。</summary>
    </member>
    <member name="M:System.ComponentModel.DataAnnotations.PhoneAttribute.IsValid(System.Object)">
      <summary vsli:raw="Determines whether the specified phone number is in a valid phone number format.">指定した電話番号が有効な電話番号形式かどうかを判断します。</summary>
      <param name="value" vsli:raw="The value to validate.">検証する値。</param>
      <returns vsli:raw="&lt;see langword=&quot;true&quot; /&gt; if the phone number is valid; otherwise, &lt;see langword=&quot;false&quot; /&gt;.">電話番号が有効である場合は <see langword="true" />。それ以外の場合は <see langword="false" />。</returns>
    </member>
    <member name="T:System.ComponentModel.DataAnnotations.RangeAttribute">
      <summary vsli:raw="Specifies the numeric range constraints for the value of a data field.">データ フィールドの値について数値範囲の制約を指定します。</summary>
    </member>
    <member name="M:System.ComponentModel.DataAnnotations.RangeAttribute.#ctor(System.Double,System.Double)">
      <summary vsli:raw="Initializes a new instance of the &lt;see cref=&quot;T:System.ComponentModel.DataAnnotations.RangeAttribute&quot; /&gt; class by using the specified minimum and maximum values.">指定した最小値と最大値を使用して、<see cref="T:System.ComponentModel.DataAnnotations.RangeAttribute" /> クラスの新しいインスタンスを初期化します。</summary>
      <param name="minimum" vsli:raw="Specifies the minimum value allowed for the data field value.">データ フィールド値の最小許容値を指定します。</param>
      <param name="maximum" vsli:raw="Specifies the maximum value allowed for the data field value.">データ フィールド値の最大許容値を指定します。</param>
    </member>
    <member name="M:System.ComponentModel.DataAnnotations.RangeAttribute.#ctor(System.Int32,System.Int32)">
      <summary vsli:raw="Initializes a new instance of the &lt;see cref=&quot;T:System.ComponentModel.DataAnnotations.RangeAttribute&quot; /&gt; class by using the specified minimum and maximum values.">指定した最小値と最大値を使用して、<see cref="T:System.ComponentModel.DataAnnotations.RangeAttribute" /> クラスの新しいインスタンスを初期化します。</summary>
      <param name="minimum" vsli:raw="Specifies the minimum value allowed for the data field value.">データ フィールド値の最小許容値を指定します。</param>
      <param name="maximum" vsli:raw="Specifies the maximum value allowed for the data field value.">データ フィールド値の最大許容値を指定します。</param>
    </member>
    <member name="M:System.ComponentModel.DataAnnotations.RangeAttribute.#ctor(System.Type,System.String,System.String)">
      <summary vsli:raw="Initializes a new instance of the &lt;see cref=&quot;T:System.ComponentModel.DataAnnotations.RangeAttribute&quot; /&gt; class by using the specified minimum and maximum values and the specific type.">指定した最小値と最大値および特定の型を使用して、<see cref="T:System.ComponentModel.DataAnnotations.RangeAttribute" /> クラスの新しいインスタンスを初期化します。</summary>
      <param name="type" vsli:raw="Specifies the type of the object to test.">テストするオブジェクトの型を指定します。</param>
      <param name="minimum" vsli:raw="Specifies the minimum value allowed for the data field value.">データ フィールド値の最小許容値を指定します。</param>
      <param name="maximum" vsli:raw="Specifies the maximum value allowed for the data field value.">データ フィールド値の最大許容値を指定します。</param>
      <exception cref="T:System.ArgumentNullException" vsli:raw="&lt;paramref name=&quot;type&quot; /&gt; is &lt;see langword=&quot;null&quot; /&gt;.">
        <paramref name="type" /> が <see langword="null" />です。</exception>
    </member>
    <member name="M:System.ComponentModel.DataAnnotations.RangeAttribute.FormatErrorMessage(System.String)">
      <summary vsli:raw="Formats the error message that is displayed when range validation fails.">範囲の検証が失敗したときに表示するエラー メッセージの書式を設定します。</summary>
      <param name="name" vsli:raw="The name of the field that caused the validation failure.">検証失敗の原因になったフィールドの名前。</param>
      <exception cref="T:System.InvalidOperationException" vsli:raw="The current attribute is ill-formed.">現在の属性の形式が誤っています。</exception>
      <returns vsli:raw="The formatted error message.">形式を設定したエラー メッセージです。</returns>
    </member>
    <member name="M:System.ComponentModel.DataAnnotations.RangeAttribute.IsValid(System.Object)">
      <summary vsli:raw="Checks that the value of the data field is in the specified range.">データ フィールドの値が指定範囲に入っていることをチェックします。</summary>
      <param name="value" vsli:raw="The data field value to validate.">検証するデータ フィールド値。</param>
      <exception cref="T:System.ComponentModel.DataAnnotations.ValidationException" vsli:raw="The data field value was outside the allowed range.">データ フィールド値が許容範囲外でした。</exception>
      <exception cref="T:System.InvalidOperationException" vsli:raw="The current attribute is ill-formed.">現在の属性の形式が誤っています。</exception>
      <returns vsli:raw="&lt;see langword=&quot;true&quot; /&gt; if the specified value is in the range; otherwise, &lt;see langword=&quot;false&quot; /&gt;.">指定した値が範囲に入っている場合は <see langword="true" />。それ以外の場合は <see langword="false" />。</returns>
    </member>
    <member name="P:System.ComponentModel.DataAnnotations.RangeAttribute.ConvertValueInInvariantCulture">
      <summary vsli:raw="Gets or sets a value that determines whether any conversions of the value being validated to &lt;see cref=&quot;P:System.ComponentModel.DataAnnotations.RangeAttribute.OperandType&quot; /&gt; as set by the &lt;c&gt;type&lt;/c&gt; parameter of the &lt;see cref=&quot;M:System.ComponentModel.DataAnnotations.RangeAttribute.#ctor(System.Type,System.String,System.String)&quot; /&gt; constructor use the invariant culture or the current culture.">
        <see cref="M:System.ComponentModel.DataAnnotations.RangeAttribute.#ctor(System.Type,System.String,System.String)" /> コンストラクターの<c>型</c>のパラメーターによって設定されているように、<see cref="P:System.ComponentModel.DataAnnotations.RangeAttribute.OperandType" /> に対して検証されている値の変換がすべて、インバリアント カルチャを使用するか、現在のカルチャを使用するかを判断する値を取得または設定します。</summary>
      <returns vsli:raw="&lt;see langword=&quot;true&quot; /&gt; to use the invariant culture for any conversions; &lt;see langword=&quot;false&quot; /&gt; to use the culture that is current at the time of the validation.">
        <see langword="true" /> 変換にインバリアントカルチャを使用するには <see langword="false" /> 検証時に現在のカルチャを使用する場合は。</returns>
    </member>
    <member name="P:System.ComponentModel.DataAnnotations.RangeAttribute.Maximum">
      <summary vsli:raw="Gets the maximum allowed field value.">最大許容フィールド値を取得します。</summary>
      <returns vsli:raw="The maximum value that is allowed for the data field.">データ フィールドの最大許容値。</returns>
    </member>
    <member name="P:System.ComponentModel.DataAnnotations.RangeAttribute.Minimum">
      <summary vsli:raw="Gets the minimum allowed field value.">最小許容フィールド値を取得します。</summary>
      <returns vsli:raw="The minimum value that is allowed for the data field.">データフィールドで使用できる最小値。</returns>
    </member>
    <member name="P:System.ComponentModel.DataAnnotations.RangeAttribute.OperandType">
      <summary vsli:raw="Gets the type of the data field whose value must be validated.">値を検証する必要があるデータ フィールドの型を取得します。</summary>
      <returns vsli:raw="The type of the data field whose value must be validated.">値を検証する必要があるデータ フィールドの型。</returns>
    </member>
    <member name="P:System.ComponentModel.DataAnnotations.RangeAttribute.ParseLimitsInInvariantCulture">
      <summary vsli:raw="Gets or sets a value that determines whether string values for &lt;see cref=&quot;P:System.ComponentModel.DataAnnotations.RangeAttribute.Minimum&quot; /&gt; and &lt;see cref=&quot;P:System.ComponentModel.DataAnnotations.RangeAttribute.Maximum&quot; /&gt; are parsed using the invariant culture rather than the current culture.">
        <see cref="P:System.ComponentModel.DataAnnotations.RangeAttribute.Minimum" /> と <see cref="P:System.ComponentModel.DataAnnotations.RangeAttribute.Maximum" /> に対する文字列値が、現在のカルチャではなく、インバリアント カルチャを使用して解析されるかどうかを判断する値を取得または設定します。</summary>
    </member>
    <member name="T:System.ComponentModel.DataAnnotations.RegularExpressionAttribute">
      <summary vsli:raw="Specifies that a data field value in ASP.NET Dynamic Data must match the specified regular expression.">ASP.NET Dynamic Data のデータ フィールド値が指定した正規表現に一致しなければならないことを指定します。</summary>
    </member>
    <member name="M:System.ComponentModel.DataAnnotations.RegularExpressionAttribute.#ctor(System.String)">
      <summary vsli:raw="Initializes a new instance of the &lt;see cref=&quot;T:System.ComponentModel.DataAnnotations.RegularExpressionAttribute&quot; /&gt; class.">
        <see cref="T:System.ComponentModel.DataAnnotations.RegularExpressionAttribute" /> クラスの新しいインスタンスを初期化します。</summary>
      <param name="pattern" vsli:raw="The regular expression that is used to validate the data field value.">データ フィールド値の検証に使用する正規表現。</param>
      <exception cref="T:System.ArgumentNullException" vsli:raw="&lt;paramref name=&quot;pattern&quot; /&gt; is &lt;see langword=&quot;null&quot; /&gt;.">
        <paramref name="pattern" /> が <see langword="null" />です。</exception>
    </member>
    <member name="M:System.ComponentModel.DataAnnotations.RegularExpressionAttribute.FormatErrorMessage(System.String)">
      <summary vsli:raw="Formats the error message to display if the regular expression validation fails.">正規表現検証が失敗した場合に表示するエラー メッセージを書式設定します。</summary>
      <param name="name" vsli:raw="The name of the field that caused the validation failure.">検証失敗の原因になったフィールドの名前。</param>
      <exception cref="T:System.InvalidOperationException" vsli:raw="The current attribute is ill-formed.">現在の属性の形式が誤っています。</exception>
      <exception cref="T:System.ArgumentException" vsli:raw="The &lt;see cref=&quot;P:System.ComponentModel.DataAnnotations.RegularExpressionAttribute.Pattern&quot; /&gt; is not a valid regular expression.">
        <see cref="P:System.ComponentModel.DataAnnotations.RegularExpressionAttribute.Pattern" /> は有効な正規表現ではありません。</exception>
      <returns vsli:raw="The formatted error message.">形式を設定したエラー メッセージです。</returns>
    </member>
    <member name="M:System.ComponentModel.DataAnnotations.RegularExpressionAttribute.IsValid(System.Object)">
      <summary vsli:raw="Checks whether the value entered by the user matches the regular expression pattern.">ユーザーが入力した値が正規表現パターンと一致するかどうかをチェックします。</summary>
      <param name="value" vsli:raw="The data field value to validate.">検証するデータ フィールド値。</param>
      <exception cref="T:System.ComponentModel.DataAnnotations.ValidationException" vsli:raw="The data field value did not match the regular expression pattern.">データ フィールド値が正規表現パターンと一致しませんでした。</exception>
      <exception cref="T:System.InvalidOperationException" vsli:raw="The current attribute is ill-formed.">現在の属性の形式が誤っています。</exception>
      <exception cref="T:System.ArgumentException" vsli:raw="&lt;see cref=&quot;P:System.ComponentModel.DataAnnotations.RegularExpressionAttribute.Pattern&quot; /&gt; is not a valid regular expression.">
        <see cref="P:System.ComponentModel.DataAnnotations.RegularExpressionAttribute.Pattern" /> は有効な正規表現ではありません。</exception>
      <returns vsli:raw="&lt;see langword=&quot;true&quot; /&gt; if validation is successful; otherwise, &lt;see langword=&quot;false&quot; /&gt;.">検証が成功した場合は <see langword="true" />、それ以外の場合は <see langword="false" />。</returns>
    </member>
    <member name="P:System.ComponentModel.DataAnnotations.RegularExpressionAttribute.MatchTimeoutInMilliseconds">
      <summary vsli:raw="Gets or sets the amount of time in milliseconds to execute a single matching operation before the operation times out.">操作がタイムアウトする前に 1 つの一致操作を実行するミリ秒単位の時間を取得または設定します。</summary>
      <returns vsli:raw="The amount of time in milliseconds to execute a single matching operation.">1 つの一致操作を実行するミリ秒単位の時間。</returns>
    </member>
    <member name="P:System.ComponentModel.DataAnnotations.RegularExpressionAttribute.Pattern">
      <summary vsli:raw="Gets the regular expression pattern.">正規表現パターンを取得します。</summary>
      <returns vsli:raw="The pattern to match.">一致しているか検証するパターン。</returns>
    </member>
    <member name="T:System.ComponentModel.DataAnnotations.RequiredAttribute">
      <summary vsli:raw="Specifies that a data field value is required.">データ フィールドの値が必須であることを指定します。</summary>
    </member>
    <member name="M:System.ComponentModel.DataAnnotations.RequiredAttribute.#ctor">
      <summary vsli:raw="Initializes a new instance of the &lt;see cref=&quot;T:System.ComponentModel.DataAnnotations.RequiredAttribute&quot; /&gt; class.">
        <see cref="T:System.ComponentModel.DataAnnotations.RequiredAttribute" /> クラスの新しいインスタンスを初期化します。</summary>
    </member>
    <member name="M:System.ComponentModel.DataAnnotations.RequiredAttribute.IsValid(System.Object)">
      <summary vsli:raw="Checks that the value of the required data field is not empty.">必須データ フィールドの値が空でないことをチェックします。</summary>
      <param name="value" vsli:raw="The data field value to validate.">検証するデータ フィールド値。</param>
      <exception cref="T:System.ComponentModel.DataAnnotations.ValidationException" vsli:raw="The data field value was &lt;see langword=&quot;null&quot; /&gt;.">データ フィールド値が <see langword="null" /> でした。</exception>
      <returns vsli:raw="&lt;see langword=&quot;true&quot; /&gt; if validation is successful; otherwise, &lt;see langword=&quot;false&quot; /&gt;.">検証が成功した場合は <see langword="true" />、それ以外の場合は <see langword="false" />。</returns>
    </member>
    <member name="P:System.ComponentModel.DataAnnotations.RequiredAttribute.AllowEmptyStrings">
      <summary vsli:raw="Gets or sets a value that indicates whether an empty string is allowed.">空の文字列を使用できるかどうかを示す値を取得または設定します。</summary>
      <returns vsli:raw="&lt;see langword=&quot;true&quot; /&gt; if an empty string is allowed; otherwise, &lt;see langword=&quot;false&quot; /&gt;. The default value is &lt;see langword=&quot;false&quot; /&gt;.">空の文字列を使用できる場合は <see langword="true" />。それ以外の場合は <see langword="false" />。 既定値は <see langword="false" /> です。</returns>
    </member>
    <member name="T:System.ComponentModel.DataAnnotations.ScaffoldColumnAttribute">
      <summary vsli:raw="Specifies whether a class or data column uses scaffolding.">クラスまたはデータ列がスキャフォールディングを使用するかどうかを指定します。</summary>
    </member>
    <member name="M:System.ComponentModel.DataAnnotations.ScaffoldColumnAttribute.#ctor(System.Boolean)">
      <summary vsli:raw="Initializes a new instance of &lt;see cref=&quot;T:System.ComponentModel.DataAnnotations.ScaffoldColumnAttribute&quot; /&gt; using the &lt;see cref=&quot;P:System.ComponentModel.DataAnnotations.ScaffoldColumnAttribute.Scaffold&quot; /&gt; property.">
        <see cref="T:System.ComponentModel.DataAnnotations.ScaffoldColumnAttribute" /> プロパティを使用して、<see cref="P:System.ComponentModel.DataAnnotations.ScaffoldColumnAttribute.Scaffold" /> クラスの新しいインスタンスを初期化します。</summary>
      <param name="scaffold" vsli:raw="The value that specifies whether scaffolding is enabled.">スキャフォールディングを有効にするかどうかを指定する値。</param>
    </member>
    <member name="P:System.ComponentModel.DataAnnotations.ScaffoldColumnAttribute.Scaffold">
      <summary vsli:raw="Gets or sets the value that specifies whether scaffolding is enabled.">スキャフォールディングが有効かどうかを指定する値を取得または設定します。</summary>
      <returns vsli:raw="&lt;see langword=&quot;true&quot; /&gt; if scaffolding is enabled; otherwise, &lt;see langword=&quot;false&quot; /&gt;.">スキャフォールディングが有効な場合は <see langword="true" />。それ以外の場合は <see langword="false" />。</returns>
    </member>
    <member name="T:System.ComponentModel.DataAnnotations.Schema.ColumnAttribute">
      <summary vsli:raw="Represents the database column that a property is mapped to.">プロパティのマップ先のデータベース列を表します。</summary>
    </member>
    <member name="M:System.ComponentModel.DataAnnotations.Schema.ColumnAttribute.#ctor">
      <summary vsli:raw="Initializes a new instance of the &lt;see cref=&quot;T:System.ComponentModel.DataAnnotations.Schema.ColumnAttribute&quot; /&gt; class.">
        <see cref="T:System.ComponentModel.DataAnnotations.Schema.ColumnAttribute" /> クラスの新しいインスタンスを初期化します。</summary>
    </member>
    <member name="M:System.ComponentModel.DataAnnotations.Schema.ColumnAttribute.#ctor(System.String)">
      <summary vsli:raw="Initializes a new instance of the &lt;see cref=&quot;T:System.ComponentModel.DataAnnotations.Schema.ColumnAttribute&quot; /&gt; class.">
        <see cref="T:System.ComponentModel.DataAnnotations.Schema.ColumnAttribute" /> クラスの新しいインスタンスを初期化します。</summary>
      <param name="name" vsli:raw="The name of the column the property is mapped to.">プロパティのマップ先の列の名前。</param>
    </member>
    <member name="P:System.ComponentModel.DataAnnotations.Schema.ColumnAttribute.Name">
      <summary vsli:raw="Gets the name of the column the property is mapped to.">プロパティのマップ先の列の名前を取得します。</summary>
      <returns vsli:raw="The name of the column the property is mapped to.">プロパティのマップ先の列の名前。</returns>
    </member>
    <member name="P:System.ComponentModel.DataAnnotations.Schema.ColumnAttribute.Order">
      <summary vsli:raw="Gets or sets the zero-based order of the column the property is mapped to.">プロパティのマップ先の列の順序を示す 0 から始まる番号を取得または設定します。</summary>
      <returns vsli:raw="The order of the column.">列の順序。</returns>
    </member>
    <member name="P:System.ComponentModel.DataAnnotations.Schema.ColumnAttribute.TypeName">
      <summary vsli:raw="Gets or sets the database provider specific data type of the column the property is mapped to.">プロパティのマップ先の列が持つデータベース プロバイダー固有のデータ型を取得または設定します。</summary>
      <returns vsli:raw="The database provider specific data type of the column the property is mapped to.">プロパティのマップ先の列が持つデータベース プロバイダー固有のデータ型。</returns>
    </member>
    <member name="T:System.ComponentModel.DataAnnotations.Schema.ComplexTypeAttribute">
      <summary vsli:raw="Denotes that the class is a complex type. Complex types are non-scalar properties of entity types that enable scalar properties to be organized within entities. Complex types do not have keys and cannot be managed by the Entity Framework apart from the parent object.">クラスが複合型であることを示します。 複合型はエンティティ型の非スカラー プロパティで、これによってスカラー プロパティをエンティティ内で整理できます。 複合型にはキーがないため、Entity Framework で親オブジェクトから分離して管理することはできません。</summary>
    </member>
    <member name="M:System.ComponentModel.DataAnnotations.Schema.ComplexTypeAttribute.#ctor">
      <summary vsli:raw="Initializes a new instance of the &lt;see cref=&quot;T:System.ComponentModel.DataAnnotations.Schema.ComplexTypeAttribute&quot; /&gt; class.">
        <see cref="T:System.ComponentModel.DataAnnotations.Schema.ComplexTypeAttribute" /> クラスの新しいインスタンスを初期化します。</summary>
    </member>
    <member name="T:System.ComponentModel.DataAnnotations.Schema.DatabaseGeneratedAttribute">
      <summary vsli:raw="Specifies how the database generates values for a property.">データベースがプロパティの値を生成する方法を指定します。</summary>
    </member>
    <member name="M:System.ComponentModel.DataAnnotations.Schema.DatabaseGeneratedAttribute.#ctor(System.ComponentModel.DataAnnotations.Schema.DatabaseGeneratedOption)">
      <summary vsli:raw="Initializes a new instance of the &lt;see cref=&quot;T:System.ComponentModel.DataAnnotations.Schema.DatabaseGeneratedAttribute&quot; /&gt; class.">
        <see cref="T:System.ComponentModel.DataAnnotations.Schema.DatabaseGeneratedAttribute" /> クラスの新しいインスタンスを初期化します。</summary>
      <param name="databaseGeneratedOption" vsli:raw="The database generated option.">データベースを生成するオプションです。</param>
    </member>
    <member name="P:System.ComponentModel.DataAnnotations.Schema.DatabaseGeneratedAttribute.DatabaseGeneratedOption">
      <summary vsli:raw="Gets or sets the pattern used to generate values for the property in the database.">データベースでプロパティの値を生成するために使用されるパターンを取得または設定します。</summary>
      <returns vsli:raw="The database generated option.">データベースを生成するオプションです。</returns>
    </member>
    <member name="T:System.ComponentModel.DataAnnotations.Schema.DatabaseGeneratedOption">
      <summary vsli:raw="Represents the pattern used to generate values for a property in the database.">データベースでプロパティの値を生成するために使用されるパターンを表します。</summary>
    </member>
    <member name="F:System.ComponentModel.DataAnnotations.Schema.DatabaseGeneratedOption.Computed">
      <summary vsli:raw="The database generates a value when a row is inserted or updated.">行が挿入または更新されたときに、データベースで値が生成されます。</summary>
    </member>
    <member name="F:System.ComponentModel.DataAnnotations.Schema.DatabaseGeneratedOption.Identity">
      <summary vsli:raw="The database generates a value when a row is inserted.">行が挿入されたときに、データベースで値が生成されます。</summary>
    </member>
    <member name="F:System.ComponentModel.DataAnnotations.Schema.DatabaseGeneratedOption.None">
      <summary vsli:raw="The database does not generate values.">データベースで値が生成されません。</summary>
    </member>
    <member name="T:System.ComponentModel.DataAnnotations.Schema.ForeignKeyAttribute">
      <summary vsli:raw="Denotes a property used as a foreign key in a relationship.">リレーションシップで外部キーとして使用されるプロパティを示します。</summary>
    </member>
    <member name="M:System.ComponentModel.DataAnnotations.Schema.ForeignKeyAttribute.#ctor(System.String)">
      <summary vsli:raw="Initializes a new instance of the &lt;see cref=&quot;T:System.ComponentModel.DataAnnotations.Schema.ForeignKeyAttribute&quot; /&gt; class.">
        <see cref="T:System.ComponentModel.DataAnnotations.Schema.ForeignKeyAttribute" /> クラスの新しいインスタンスを初期化します。</summary>
      <param name="name" vsli:raw="The name of the associated navigation property, or the name of one or more associated foreign keys.">関連付けられたナビゲーション プロパティの名前、または関連付けられた 1 つ以上の外部キーの名前。</param>
    </member>
    <member name="P:System.ComponentModel.DataAnnotations.Schema.ForeignKeyAttribute.Name">
      <summary vsli:raw="Gets the name of the associated navigation property or of the associated foreign keys.">関連付けられたナビゲーション プロパティまたは関連付けられた外部キーの名前を取得します。</summary>
      <returns vsli:raw="The name of the associated navigation property or of the associated foreign keys.">関連付けられたナビゲーションプロパティまたは関連付けられた外部キーの名前。</returns>
    </member>
    <member name="T:System.ComponentModel.DataAnnotations.Schema.InversePropertyAttribute">
      <summary vsli:raw="Specifies the inverse of a navigation property that represents the other end of the same relationship.">同じリレーションシップのもう一方の End を表すナビゲーション プロパティの逆を指定します。</summary>
    </member>
    <member name="M:System.ComponentModel.DataAnnotations.Schema.InversePropertyAttribute.#ctor(System.String)">
      <summary vsli:raw="Initializes a new instance of the &lt;see cref=&quot;T:System.ComponentModel.DataAnnotations.Schema.InversePropertyAttribute&quot; /&gt; class using the specified property.">指定したプロパティを使用して、<see cref="T:System.ComponentModel.DataAnnotations.Schema.InversePropertyAttribute" /> クラスの新しいインスタンスを初期化します。</summary>
      <param name="property" vsli:raw="The navigation property representing the other end of the same relationship.">同じリレーションシップのもう一方の End を表すナビゲーション プロパティ。</param>
    </member>
    <member name="P:System.ComponentModel.DataAnnotations.Schema.InversePropertyAttribute.Property">
      <summary vsli:raw="Gets the navigation property representing the other end of the same relationship.">同じリレーションシップのもう一方の End を表すナビゲーション プロパティを取得します。</summary>
      <returns vsli:raw="The property of the attribute.">属性のプロパティ。</returns>
    </member>
    <member name="T:System.ComponentModel.DataAnnotations.Schema.NotMappedAttribute">
      <summary vsli:raw="Denotes that a property or class should be excluded from database mapping.">プロパティまたはクラスがデータベース マッピングから除外されることを示します。</summary>
    </member>
    <member name="M:System.ComponentModel.DataAnnotations.Schema.NotMappedAttribute.#ctor">
      <summary vsli:raw="Initializes a new instance of the &lt;see cref=&quot;T:System.ComponentModel.DataAnnotations.Schema.NotMappedAttribute&quot; /&gt; class.">
        <see cref="T:System.ComponentModel.DataAnnotations.Schema.NotMappedAttribute" /> クラスの新しいインスタンスを初期化します。</summary>
    </member>
    <member name="T:System.ComponentModel.DataAnnotations.Schema.TableAttribute">
      <summary vsli:raw="Specifies the database table that a class is mapped to.">クラスのマップ先のデータベース テーブルを指定します。</summary>
    </member>
    <member name="M:System.ComponentModel.DataAnnotations.Schema.TableAttribute.#ctor(System.String)">
      <summary vsli:raw="Initializes a new instance of the &lt;see cref=&quot;T:System.ComponentModel.DataAnnotations.Schema.TableAttribute&quot; /&gt; class using the specified name of the table.">指定したテーブルの名前名を使用して、<see cref="T:System.ComponentModel.DataAnnotations.Schema.TableAttribute" /> クラスの新しいインスタンスを初期化します。</summary>
      <param name="name" vsli:raw="The name of the table the class is mapped to.">クラスのマップ先のテーブルの名前。</param>
    </member>
    <member name="P:System.ComponentModel.DataAnnotations.Schema.TableAttribute.Name">
      <summary vsli:raw="Gets the name of the table the class is mapped to.">クラスのマップ先のテーブルの名前を取得します。</summary>
      <returns vsli:raw="The name of the table the class is mapped to.">クラスのマップ先のテーブルの名前。</returns>
    </member>
    <member name="P:System.ComponentModel.DataAnnotations.Schema.TableAttribute.Schema">
      <summary vsli:raw="Gets or sets the schema of the table the class is mapped to.">クラスのマップ先のテーブルのスキーマを取得または設定します。</summary>
      <returns vsli:raw="The schema of the table the class is mapped to.">クラスのマップ先のテーブルのスキーマ。</returns>
    </member>
    <member name="T:System.ComponentModel.DataAnnotations.StringLengthAttribute">
      <summary vsli:raw="Specifies the minimum and maximum length of characters that are allowed in a data field.">データ フィールドで使用できる最小文字長と最大文字長を指定します。</summary>
    </member>
    <member name="M:System.ComponentModel.DataAnnotations.StringLengthAttribute.#ctor(System.Int32)">
      <summary vsli:raw="Initializes a new instance of the &lt;see cref=&quot;T:System.ComponentModel.DataAnnotations.StringLengthAttribute&quot; /&gt; class by using a specified maximum length.">指定した最大長を使用して、<see cref="T:System.ComponentModel.DataAnnotations.StringLengthAttribute" /> クラスの新しいインスタンスを初期化します。</summary>
      <param name="maximumLength" vsli:raw="The maximum length of a string.">文字列の最大長。</param>
    </member>
    <member name="M:System.ComponentModel.DataAnnotations.StringLengthAttribute.FormatErrorMessage(System.String)">
      <summary vsli:raw="Applies formatting to a specified error message.">指定したエラー メッセージに書式を適用します</summary>
      <param name="name" vsli:raw="The name of the field that caused the validation failure.">検証失敗の原因になったフィールドの名前。</param>
      <exception cref="T:System.ArgumentOutOfRangeException" vsli:raw="&lt;paramref name=&quot;maximumLength&quot; /&gt; is negative.  &#xA;  &#xA; -or-  &#xA;  &#xA; &lt;paramref name=&quot;maximumLength&quot; /&gt; is less than &lt;paramref name=&quot;minimumLength&quot; /&gt;.">
        <paramref name="maximumLength" /> が負の値です。  
  
- または - 
 <paramref name="maximumLength" /> は <paramref name="minimumLength" /> より小さい値です。</exception>
      <exception cref="T:System.InvalidOperationException" vsli:raw="The current attribute is ill-formed.">現在の属性の形式が誤っています。</exception>
      <returns vsli:raw="The formatted error message.">形式を設定したエラー メッセージです。</returns>
    </member>
    <member name="M:System.ComponentModel.DataAnnotations.StringLengthAttribute.IsValid(System.Object)">
      <summary vsli:raw="Determines whether a specified object is valid.">指定したオブジェクトが有効かどうかを判断します</summary>
      <param name="value" vsli:raw="The object to validate.">検証対象のオブジェクト。</param>
      <exception cref="T:System.ArgumentOutOfRangeException" vsli:raw="&lt;paramref name=&quot;maximumLength&quot; /&gt; is negative.  &#xA;  &#xA; -or-  &#xA;  &#xA; &lt;paramref name=&quot;maximumLength&quot; /&gt; is less than &lt;see cref=&quot;P:System.ComponentModel.DataAnnotations.StringLengthAttribute.MinimumLength&quot; /&gt;.">
        <paramref name="maximumLength" /> が負の値です。  
  
- または - 
 <paramref name="maximumLength" /> は <see cref="P:System.ComponentModel.DataAnnotations.StringLengthAttribute.MinimumLength" /> より小さい値です。</exception>
      <exception cref="T:System.InvalidOperationException" vsli:raw="The current attribute is ill-formed.">現在の属性の形式が誤っています。</exception>
      <returns vsli:raw="&lt;see langword=&quot;true&quot; /&gt; if the specified object is valid; otherwise, &lt;see langword=&quot;false&quot; /&gt;.">指定したオブジェクトが有効である場合は <see langword="true" />。それ以外の場合は <see langword="false" />。</returns>
    </member>
    <member name="P:System.ComponentModel.DataAnnotations.StringLengthAttribute.MaximumLength">
      <summary vsli:raw="Gets or sets the maximum length of a string.">文字列の最大長を取得または設定します。</summary>
      <returns vsli:raw="The maximum length a string.">文字列の最大長。</returns>
    </member>
    <member name="P:System.ComponentModel.DataAnnotations.StringLengthAttribute.MinimumLength">
      <summary vsli:raw="Gets or sets the minimum length of a string.">文字列の最小長を取得または設定します。</summary>
      <returns vsli:raw="The minimum length of a string.">文字列の最小長。</returns>
    </member>
    <member name="T:System.ComponentModel.DataAnnotations.TimestampAttribute">
      <summary vsli:raw="Specifies the data type of the column as a row version.">列のデータ型を行バージョンとして指定します。</summary>
    </member>
    <member name="M:System.ComponentModel.DataAnnotations.TimestampAttribute.#ctor">
      <summary vsli:raw="Initializes a new instance of the &lt;see cref=&quot;T:System.ComponentModel.DataAnnotations.TimestampAttribute&quot; /&gt; class.">
        <see cref="T:System.ComponentModel.DataAnnotations.TimestampAttribute" /> クラスの新しいインスタンスを初期化します。</summary>
    </member>
    <member name="T:System.ComponentModel.DataAnnotations.UIHintAttribute">
      <summary vsli:raw="Specifies the template or user control that Dynamic Data uses to display a data field.">動的データでデータ フィールドの表示に使用されるテンプレート コントロールまたはユーザー コントロールを指定します。</summary>
    </member>
    <member name="M:System.ComponentModel.DataAnnotations.UIHintAttribute.#ctor(System.String)">
      <summary vsli:raw="Initializes a new instance of the &lt;see cref=&quot;T:System.ComponentModel.DataAnnotations.UIHintAttribute&quot; /&gt; class by using a specified user control.">指定されたユーザー コントロールを使用して、<see cref="T:System.ComponentModel.DataAnnotations.UIHintAttribute" /> クラスの新しいインスタンスを初期化します。</summary>
      <param name="uiHint" vsli:raw="The user control to use to display the data field.">データ フィールドの表示に使用するユーザー コントロール。</param>
    </member>
    <member name="M:System.ComponentModel.DataAnnotations.UIHintAttribute.#ctor(System.String,System.String)">
      <summary vsli:raw="Initializes a new instance of the &lt;see cref=&quot;T:System.ComponentModel.DataAnnotations.UIHintAttribute&quot; /&gt; class using the specified user control and specified presentation layer.">ユーザー コントロールおよびプレゼンテーション層を指定して、<see cref="T:System.ComponentModel.DataAnnotations.UIHintAttribute" /> クラスの新しいインスタンスを初期化します。</summary>
      <param name="uiHint" vsli:raw="The user control (field template) to use to display the data field.">データ フィールドの表示に使用するユーザー コントロール (フィールド テンプレート)。</param>
      <param name="presentationLayer" vsli:raw="The presentation layer that uses the class. Can be set to &quot;HTML&quot;, &quot;Silverlight&quot;, &quot;WPF&quot;, or &quot;WinForms&quot;.">このクラスを使用するプレゼンテーション層。 "HTML"、"Silverlight"、"WPF"、"WinForms" のいずれかに設定できます。</param>
    </member>
    <member name="M:System.ComponentModel.DataAnnotations.UIHintAttribute.#ctor(System.String,System.String,System.Object[])">
      <summary vsli:raw="Initializes a new instance of the &lt;see cref=&quot;T:System.ComponentModel.DataAnnotations.UIHintAttribute&quot; /&gt; class by using the specified user control, presentation layer, and control parameters.">ユーザー コントロール、プレゼンテーション層、およびコントロールのパラメーターを指定して、<see cref="T:System.ComponentModel.DataAnnotations.UIHintAttribute" /> クラスの新しいインスタンスを初期化します。</summary>
      <param name="uiHint" vsli:raw="The user control (field template) to use to display the data field.">データ フィールドの表示に使用するユーザー コントロール (フィールド テンプレート)。</param>
      <param name="presentationLayer" vsli:raw="The presentation layer that uses the class. Can be set to &quot;HTML&quot;, &quot;Silverlight&quot;, &quot;WPF&quot;, or &quot;WinForms&quot;.">このクラスを使用するプレゼンテーション層。 "HTML"、"Silverlight"、"WPF"、"WinForms" のいずれかに設定できます。</param>
      <param name="controlParameters" vsli:raw="The object to use to retrieve values from any data sources.">データ ソースからの値の取得に使用するオブジェクト。</param>
      <exception cref="T:System.ArgumentException" vsli:raw="&lt;see cref=&quot;P:System.ComponentModel.DataAnnotations.UIHintAttribute.ControlParameters&quot; /&gt; is &lt;see langword=&quot;null&quot; /&gt; or it is a constraint key.  &#xA;  &#xA; -or-  &#xA;  &#xA; The value of &lt;see cref=&quot;P:System.ComponentModel.DataAnnotations.UIHintAttribute.ControlParameters&quot; /&gt; is not a string.">
        <see cref="P:System.ComponentModel.DataAnnotations.UIHintAttribute.ControlParameters" /> は <see langword="null" /> であるか、または制約キーです。  
  
- または - 
<see cref="P:System.ComponentModel.DataAnnotations.UIHintAttribute.ControlParameters" /> の値が文字列ではありません。</exception>
    </member>
    <member name="M:System.ComponentModel.DataAnnotations.UIHintAttribute.Equals(System.Object)">
      <summary vsli:raw="Gets a value that indicates whether this instance is equal to the specified object.">指定したオブジェクトとこのインスタンスが等しいかどうかを示す値を取得します。</summary>
      <param name="obj" vsli:raw="The object to compare with this instance, or a &lt;see langword=&quot;null&quot; /&gt; reference.">このインスタンスと比較するオブジェクト、または <see langword="null" /> 参照。</param>
      <returns vsli:raw="&lt;see langword=&quot;true&quot; /&gt; if the specified object is equal to this instance; otherwise, &lt;see langword=&quot;false&quot; /&gt;.">指定したオブジェクトがこのインスタンスと等しい場合は <see langword="true" />。それ以外の場合は <see langword="false" />。</returns>
    </member>
    <member name="M:System.ComponentModel.DataAnnotations.UIHintAttribute.GetHashCode">
      <summary vsli:raw="Gets the hash code for the current instance of the attribute.">属性の現在のインスタンスのハッシュ コードを取得します。</summary>
      <returns vsli:raw="The attribute instance hash code.">属性インスタンスのハッシュ コード。</returns>
    </member>
    <member name="P:System.ComponentModel.DataAnnotations.UIHintAttribute.ControlParameters">
      <summary vsli:raw="Gets or sets the &lt;see cref=&quot;T:System.Web.DynamicData.DynamicControlParameter&quot; /&gt; object to use to retrieve values from any data source.">データ ソースからの値の取得に使用する <see cref="T:System.Web.DynamicData.DynamicControlParameter" /> オブジェクトを取得または設定します。</summary>
      <exception cref="T:System.InvalidOperationException" vsli:raw="The current attribute is ill-formed.">現在の属性の形式が誤っています。</exception>
      <returns vsli:raw="A collection of key/value pairs.">キーと値のペアのコレクションです。</returns>
    </member>
    <member name="P:System.ComponentModel.DataAnnotations.UIHintAttribute.PresentationLayer">
      <summary vsli:raw="Gets or sets the presentation layer that uses the &lt;see cref=&quot;T:System.ComponentModel.DataAnnotations.UIHintAttribute&quot; /&gt; class.">
        <see cref="T:System.ComponentModel.DataAnnotations.UIHintAttribute" /> クラスを使用するプレゼンテーション層を取得または設定します。</summary>
      <returns vsli:raw="The presentation layer that is used by this class.">このクラスで使用されるプレゼンテーション層。</returns>
    </member>
    <member name="P:System.ComponentModel.DataAnnotations.UIHintAttribute.UIHint">
      <summary vsli:raw="Gets or sets the name of the field template to use to display the data field.">データ フィールドの表示に使用するフィールド テンプレートの名前を取得または設定します。</summary>
      <returns vsli:raw="The name of the field template that displays the data field.">データ フィールドを表示するフィールド テンプレートの名前。</returns>
    </member>
    <member name="T:System.ComponentModel.DataAnnotations.UrlAttribute">
      <summary vsli:raw="Provides URL validation.">URL の検証機能を提供します。</summary>
    </member>
    <member name="M:System.ComponentModel.DataAnnotations.UrlAttribute.#ctor">
      <summary vsli:raw="Initializes a new instance of the &lt;see cref=&quot;T:System.ComponentModel.DataAnnotations.UrlAttribute&quot; /&gt; class.">
        <see cref="T:System.ComponentModel.DataAnnotations.UrlAttribute" /> クラスの新しいインスタンスを初期化します。</summary>
    </member>
    <member name="M:System.ComponentModel.DataAnnotations.UrlAttribute.IsValid(System.Object)">
      <summary vsli:raw="Validates the format of the specified URL.">指定した URL の形式を検証します。</summary>
      <param name="value" vsli:raw="The URL to validate.">検証対象の URL。</param>
      <returns vsli:raw="&lt;see langword=&quot;true&quot; /&gt; if the URL format is valid or &lt;see langword=&quot;null&quot; /&gt;; otherwise, &lt;see langword=&quot;false&quot; /&gt;.">URL 形式が有効であるか <see langword="true" /> の場合は <see langword="null" />。それ以外の場合は <see langword="false" />。</returns>
    </member>
    <member name="T:System.ComponentModel.DataAnnotations.ValidationAttribute">
      <summary vsli:raw="Serves as the base class for all validation attributes.">すべての検証属性の基本クラスとして機能します。</summary>
    </member>
    <member name="M:System.ComponentModel.DataAnnotations.ValidationAttribute.#ctor">
      <summary vsli:raw="Initializes a new instance of the &lt;see cref=&quot;T:System.ComponentModel.DataAnnotations.ValidationAttribute&quot; /&gt; class.">
        <see cref="T:System.ComponentModel.DataAnnotations.ValidationAttribute" /> クラスの新しいインスタンスを初期化します。</summary>
    </member>
    <member name="M:System.ComponentModel.DataAnnotations.ValidationAttribute.#ctor(System.Func{System.String})">
      <summary vsli:raw="Initializes a new instance of the &lt;see cref=&quot;T:System.ComponentModel.DataAnnotations.ValidationAttribute&quot; /&gt; class by using the function that enables access to validation resources.">検証リソースへのアクセスを可能にする関数を使用して <see cref="T:System.ComponentModel.DataAnnotations.ValidationAttribute" /> クラスの新しいインスタンスを初期化します。</summary>
      <param name="errorMessageAccessor" vsli:raw="The function that enables access to validation resources.">検証リソースへのアクセスを可能にする関数。</param>
      <exception cref="T:System.ArgumentNullException" vsli:raw="&lt;paramref name=&quot;errorMessageAccessor&quot; /&gt; is &lt;see langword=&quot;null&quot; /&gt;.">
        <paramref name="errorMessageAccessor" /> が <see langword="null" />です。</exception>
    </member>
    <member name="M:System.ComponentModel.DataAnnotations.ValidationAttribute.#ctor(System.String)">
      <summary vsli:raw="Initializes a new instance of the &lt;see cref=&quot;T:System.ComponentModel.DataAnnotations.ValidationAttribute&quot; /&gt; class by using the error message to associate with a validation control.">検証コントロールに関連付けるエラー メッセージを使用して、<see cref="T:System.ComponentModel.DataAnnotations.ValidationAttribute" /> クラスの新しいインスタンスを初期化します。</summary>
      <param name="errorMessage" vsli:raw="The error message to associate with a validation control.">検証コントロールに関連付けるエラー メッセージ。</param>
    </member>
    <member name="M:System.ComponentModel.DataAnnotations.ValidationAttribute.FormatErrorMessage(System.String)">
      <summary vsli:raw="Applies formatting to an error message, based on the data field where the error occurred.">エラーが発生したデータ フィールドに基づいて、エラー メッセージに書式を適用します。</summary>
      <param name="name" vsli:raw="The name to include in the formatted message.">書式設定されたメッセージに含める名前。</param>
      <exception cref="T:System.InvalidOperationException" vsli:raw="The current attribute is malformed.">現在の属性の形式が正しくありません。</exception>
      <returns vsli:raw="An instance of the formatted error message.">書式設定されたエラー メッセージのインスタンス。</returns>
    </member>
    <member name="M:System.ComponentModel.DataAnnotations.ValidationAttribute.GetValidationResult(System.Object,System.ComponentModel.DataAnnotations.ValidationContext)">
      <summary vsli:raw="Checks whether the specified value is valid with respect to the current validation attribute.">現在の検証属性に対して、指定した値が有効かどうかを確認します。</summary>
      <param name="value" vsli:raw="The value to validate.">検証する値。</param>
      <param name="validationContext" vsli:raw="The context information about the validation operation.">検証操作に関するコンテキスト情報。</param>
      <exception cref="T:System.InvalidOperationException" vsli:raw="The current attribute is malformed.">現在の属性の形式が正しくありません。</exception>
      <exception cref="T:System.ArgumentNullException" vsli:raw="&lt;paramref name=&quot;validationContext&quot; /&gt; is &lt;see langword=&quot;null&quot; /&gt;.">
        <paramref name="validationContext" /> が <see langword="null" />です。</exception>
      <exception cref="T:System.NotImplementedException" vsli:raw="&lt;see cref=&quot;M:System.ComponentModel.DataAnnotations.ValidationAttribute.IsValid(System.Object,System.ComponentModel.DataAnnotations.ValidationContext)&quot; /&gt; has not been implemented by a derived class.">
        <see cref="M:System.ComponentModel.DataAnnotations.ValidationAttribute.IsValid(System.Object,System.ComponentModel.DataAnnotations.ValidationContext)" /> は派生クラスによって実装されませんでした。</exception>
      <returns vsli:raw="An instance of the &lt;see cref=&quot;T:System.ComponentModel.DataAnnotations.ValidationResult&quot; /&gt; class.">
        <see cref="T:System.ComponentModel.DataAnnotations.ValidationResult" /> クラスのインスタンス。</returns>
    </member>
    <member name="M:System.ComponentModel.DataAnnotations.ValidationAttribute.IsValid(System.Object)">
      <summary vsli:raw="Determines whether the specified value of the object is valid.">指定したオブジェクトの値が有効かどうかを判断します。</summary>
      <param name="value" vsli:raw="The value of the object to validate.">検証するオブジェクトの値。</param>
      <exception cref="T:System.InvalidOperationException" vsli:raw="The current attribute is malformed.">現在の属性の形式が正しくありません。</exception>
      <exception cref="T:System.NotImplementedException" vsli:raw="Neither overload of &lt;see langword=&quot;IsValid&quot; /&gt; has been implemented by a derived class.">
        <see langword="IsValid" /> のオーバーロードはどちらも派生クラスによって実装されていません。</exception>
      <returns vsli:raw="&lt;see langword=&quot;true&quot; /&gt; if the specified value is valid; otherwise, &lt;see langword=&quot;false&quot; /&gt;.">指定された値が有効な場合は <see langword="true" />。それ以外の場合は <see langword="false" />。</returns>
    </member>
    <member name="M:System.ComponentModel.DataAnnotations.ValidationAttribute.IsValid(System.Object,System.ComponentModel.DataAnnotations.ValidationContext)">
      <summary vsli:raw="Validates the specified value with respect to the current validation attribute.">現在の検証属性に対して、指定した値を検証します。</summary>
      <param name="value" vsli:raw="The value to validate.">検証する値。</param>
      <param name="validationContext" vsli:raw="The context information about the validation operation.">検証操作に関するコンテキスト情報。</param>
      <exception cref="T:System.InvalidOperationException" vsli:raw="The current attribute is malformed.">現在の属性の形式が正しくありません。</exception>
      <exception cref="T:System.NotImplementedException" vsli:raw="&lt;see cref=&quot;M:System.ComponentModel.DataAnnotations.ValidationAttribute.IsValid(System.Object,System.ComponentModel.DataAnnotations.ValidationContext)&quot; /&gt; has not been implemented by a derived class.">
        <see cref="M:System.ComponentModel.DataAnnotations.ValidationAttribute.IsValid(System.Object,System.ComponentModel.DataAnnotations.ValidationContext)" /> は派生クラスによって実装されませんでした。</exception>
      <returns vsli:raw="An instance of the &lt;see cref=&quot;T:System.ComponentModel.DataAnnotations.ValidationResult&quot; /&gt; class.">
        <see cref="T:System.ComponentModel.DataAnnotations.ValidationResult" /> クラスのインスタンス。</returns>
    </member>
    <member name="M:System.ComponentModel.DataAnnotations.ValidationAttribute.Validate(System.Object,System.ComponentModel.DataAnnotations.ValidationContext)">
      <summary vsli:raw="Validates the specified object.">指定されたオブジェクトを検証します。</summary>
      <param name="value" vsli:raw="The object to validate.">検証対象のオブジェクト。</param>
      <param name="validationContext" vsli:raw="The &lt;see cref=&quot;T:System.ComponentModel.DataAnnotations.ValidationContext&quot; /&gt; object that describes the context where the validation checks are performed. This parameter cannot be &lt;see langword=&quot;null&quot; /&gt;.">検証チェックの実行コンテキストを記述する <see cref="T:System.ComponentModel.DataAnnotations.ValidationContext" /> オブジェクト。 このパラメーターを <see langword="null" /> とすることはできません。</param>
      <exception cref="T:System.ComponentModel.DataAnnotations.ValidationException" vsli:raw="Validation failed.">検証に失敗しました。</exception>
      <exception cref="T:System.InvalidOperationException" vsli:raw="The current attribute is malformed.">現在の属性の形式が正しくありません。</exception>
      <exception cref="T:System.NotImplementedException" vsli:raw="&lt;see cref=&quot;M:System.ComponentModel.DataAnnotations.ValidationAttribute.IsValid(System.Object,System.ComponentModel.DataAnnotations.ValidationContext)&quot; /&gt; has not been implemented by a derived class.">
        <see cref="M:System.ComponentModel.DataAnnotations.ValidationAttribute.IsValid(System.Object,System.ComponentModel.DataAnnotations.ValidationContext)" /> は派生クラスによって実装されませんでした。</exception>
    </member>
    <member name="M:System.ComponentModel.DataAnnotations.ValidationAttribute.Validate(System.Object,System.String)">
      <summary vsli:raw="Validates the specified object.">指定されたオブジェクトを検証します。</summary>
      <param name="value" vsli:raw="The value of the object to validate.">検証するオブジェクトの値。</param>
      <param name="name" vsli:raw="The name to include in the error message.">エラー メッセージに含める名前。</param>
      <exception cref="T:System.ComponentModel.DataAnnotations.ValidationException" vsli:raw="&lt;paramref name=&quot;value&quot; /&gt; is not valid.">
        <paramref name="value" /> が無効です。</exception>
      <exception cref="T:System.InvalidOperationException" vsli:raw="The current attribute is malformed.">現在の属性の形式が正しくありません。</exception>
    </member>
    <member name="P:System.ComponentModel.DataAnnotations.ValidationAttribute.ErrorMessage">
      <summary vsli:raw="Gets or sets an error message to associate with a validation control if validation fails.">検証が失敗した場合に検証コントロールに関連付けるエラー メッセージを取得または設定します。</summary>
      <returns vsli:raw="The error message that is associated with the validation control.">検証コントロールに関連付けられるエラー メッセージ。</returns>
    </member>
    <member name="P:System.ComponentModel.DataAnnotations.ValidationAttribute.ErrorMessageResourceName">
      <summary vsli:raw="Gets or sets the error message resource name to use in order to look up the &lt;see cref=&quot;P:System.ComponentModel.DataAnnotations.ValidationAttribute.ErrorMessageResourceType&quot; /&gt; property value if validation fails.">検証が失敗した場合に <see cref="P:System.ComponentModel.DataAnnotations.ValidationAttribute.ErrorMessageResourceType" /> プロパティ値の検索に使用するエラー メッセージ リソース名を取得または設定します。</summary>
      <returns vsli:raw="The error message resource that is associated with a validation control.">検証コントロールに関連付けられるエラー メッセージ リソース。</returns>
    </member>
    <member name="P:System.ComponentModel.DataAnnotations.ValidationAttribute.ErrorMessageResourceType">
      <summary vsli:raw="Gets or sets the resource type to use for error-message lookup if validation fails.">検証が失敗した場合にエラー メッセージの検索に使用するリソースの種類を取得または設定します。</summary>
      <returns vsli:raw="The type of error message that is associated with a validation control.">検証コントロールに関連付けられるエラー メッセージの型。</returns>
    </member>
    <member name="P:System.ComponentModel.DataAnnotations.ValidationAttribute.ErrorMessageString">
      <summary vsli:raw="Gets the localized validation error message.">ローカライズされた検証エラー メッセージを取得します。</summary>
      <returns vsli:raw="The localized validation error message.">ローカライズされた検証エラー メッセージ。</returns>
    </member>
    <member name="P:System.ComponentModel.DataAnnotations.ValidationAttribute.RequiresValidationContext">
      <summary vsli:raw="Gets a value that indicates whether the attribute requires validation context.">属性で検証コンテキストが必要かどうかを示す値を取得します。</summary>
      <returns vsli:raw="&lt;see langword=&quot;true&quot; /&gt; if the attribute requires validation context; otherwise, &lt;see langword=&quot;false&quot; /&gt;.">属性に検証コンテキストが必要な場合は <see langword="true" />。それ以外の場合は <see langword="false" />。</returns>
    </member>
    <member name="T:System.ComponentModel.DataAnnotations.ValidationContext">
      <summary vsli:raw="Describes the context in which a validation check is performed.">検証チェックの実行コンテキストを記述します。</summary>
    </member>
    <member name="M:System.ComponentModel.DataAnnotations.ValidationContext.#ctor(System.Object)">
      <summary vsli:raw="Initializes a new instance of the &lt;see cref=&quot;T:System.ComponentModel.DataAnnotations.ValidationContext&quot; /&gt; class using the specified object instance.">オブジェクト インスタンスを使用して、<see cref="T:System.ComponentModel.DataAnnotations.ValidationContext" /> クラスの新しいインスタンスを初期化します。</summary>
      <param name="instance" vsli:raw="The object instance to validate. It cannot be &lt;see langword=&quot;null&quot; /&gt;.">検証するオブジェクト インスタンス。 <see langword="null" /> にすることはできません。</param>
      <exception cref="T:System.ArgumentNullException" vsli:raw="&lt;paramref name=&quot;instance&quot; /&gt; is &lt;see langword=&quot;null&quot; /&gt;.">
        <paramref name="instance" /> が <see langword="null" />です。</exception>
    </member>
    <member name="M:System.ComponentModel.DataAnnotations.ValidationContext.#ctor(System.Object,System.Collections.Generic.IDictionary{System.Object,System.Object})">
      <summary vsli:raw="Initializes a new instance of the &lt;see cref=&quot;T:System.ComponentModel.DataAnnotations.ValidationContext&quot; /&gt; class using the specified object and an optional property bag.">オブジェクト インスタンスを使用して、<see cref="T:System.ComponentModel.DataAnnotations.ValidationContext" /> クラスの新しいインスタンスを初期化します</summary>
      <param name="instance" vsli:raw="The object instance to validate.  It cannot be &lt;see langword=&quot;null&quot; /&gt;.">検証するオブジェクト インスタンス。  <see langword="null" /> にすることはできません</param>
      <param name="items" vsli:raw="An optional set of key/value pairs to make available to consumers.">コンシューマーに提供するオプションの一連のキーと値のペア。</param>
      <exception cref="T:System.ArgumentNullException" vsli:raw="&lt;paramref name=&quot;instance&quot; /&gt; is &lt;see langword=&quot;null&quot; /&gt;.">
        <paramref name="instance" /> が <see langword="null" />です。</exception>
    </member>
    <member name="M:System.ComponentModel.DataAnnotations.ValidationContext.#ctor(System.Object,System.IServiceProvider,System.Collections.Generic.IDictionary{System.Object,System.Object})">
      <summary vsli:raw="Initializes a new instance of the &lt;see cref=&quot;T:System.ComponentModel.DataAnnotations.ValidationContext&quot; /&gt; class using the service provider and dictionary of service consumers.">サービス プロバイダーとサービス コンシューマーのディクショナリを使用して、<see cref="T:System.ComponentModel.DataAnnotations.ValidationContext" /> クラスの新しいインスタンスを初期化します。</summary>
      <param name="instance" vsli:raw="The object to validate. This parameter is required.">検証対象のオブジェクト。 このパラメーターは必須です。</param>
      <param name="serviceProvider" vsli:raw="The object that implements the &lt;see cref=&quot;T:System.IServiceProvider&quot; /&gt; interface. This parameter is optional.">
        <see cref="T:System.IServiceProvider" /> インターフェイスを実装するオブジェクト。 このパラメーターは省略できます。</param>
      <param name="items" vsli:raw="A dictionary of key/value pairs to make available to the service consumers. This parameter is optional.">サービス コンシューマーに使用できるようにするキーと値のペアのディクショナリ。 このパラメーターは省略できます。</param>
      <exception cref="T:System.ArgumentNullException" vsli:raw="&lt;paramref name=&quot;instance&quot; /&gt; is &lt;see langword=&quot;null&quot; /&gt;.">
        <paramref name="instance" /> が <see langword="null" />です。</exception>
    </member>
    <member name="M:System.ComponentModel.DataAnnotations.ValidationContext.GetService(System.Type)">
      <summary vsli:raw="Returns the service that provides custom validation.">カスタム検証を提供するサービスを返します。</summary>
      <param name="serviceType" vsli:raw="The type of the service to use for validation.">検証に使用されるサービスの型。</param>
      <returns vsli:raw="An instance of the service, or &lt;see langword=&quot;null&quot; /&gt; if the service is not available.">サービスのインスタンス。サービスを利用できない場合は <see langword="null" />。</returns>
    </member>
    <member name="M:System.ComponentModel.DataAnnotations.ValidationContext.InitializeServiceProvider(System.Func{System.Type,System.Object})">
      <summary vsli:raw="Initializes the &lt;see cref=&quot;T:System.ComponentModel.DataAnnotations.ValidationContext&quot; /&gt; using a service provider that can return service instances by type when &lt;see cref=&quot;M:System.Web.Mvc.IDependencyResolver.GetService(System.Type)&quot; /&gt; is called.">
        <see cref="M:System.Web.Mvc.IDependencyResolver.GetService(System.Type)" /> が呼び出されたときに、型によってサービス インスタンスを返すことができるサービス プロバイダーを使用して <see cref="T:System.ComponentModel.DataAnnotations.ValidationContext" /> を初期化します。</summary>
      <param name="serviceProvider" vsli:raw="The service provider.">サービス プロバイダー。</param>
    </member>
    <member name="P:System.ComponentModel.DataAnnotations.ValidationContext.DisplayName">
      <summary vsli:raw="Gets or sets the name of the member to validate.">検証するメンバーの名前を取得または設定します。</summary>
      <returns vsli:raw="The name of the member to validate.">検証するメンバーの名前。</returns>
    </member>
    <member name="P:System.ComponentModel.DataAnnotations.ValidationContext.Items">
      <summary vsli:raw="Gets the dictionary of key/value pairs that is associated with this context.">このコンテキストに関連付けられているキーと値のペアのディクショナリを取得します。</summary>
      <returns vsli:raw="The dictionary of the key/value pairs for this context.">このコンテキストのキーと値のペアのディクショナリ。</returns>
    </member>
    <member name="P:System.ComponentModel.DataAnnotations.ValidationContext.MemberName">
      <summary vsli:raw="Gets or sets the name of the member to validate.">検証するメンバーの名前を取得または設定します。</summary>
      <returns vsli:raw="The name of the member to validate.">検証するメンバーの名前。</returns>
    </member>
    <member name="P:System.ComponentModel.DataAnnotations.ValidationContext.ObjectInstance">
      <summary vsli:raw="Gets the object to validate.">検証するオブジェクトを取得します。</summary>
      <returns vsli:raw="The object to validate.">検証対象のオブジェクト。</returns>
    </member>
    <member name="P:System.ComponentModel.DataAnnotations.ValidationContext.ObjectType">
      <summary vsli:raw="Gets the type of the object to validate.">検証するオブジェクトの型を取得します。</summary>
      <returns vsli:raw="The type of the object to validate.">検証するオブジェクトの型。</returns>
    </member>
    <member name="T:System.ComponentModel.DataAnnotations.ValidationException">
      <summary vsli:raw="Represents the exception that occurs during validation of a data field when the &lt;see cref=&quot;T:System.ComponentModel.DataAnnotations.ValidationAttribute&quot; /&gt; class is used.">
        <see cref="T:System.ComponentModel.DataAnnotations.ValidationAttribute" /> クラスの使用時にデータ フィールドの検証で発生する例外を表します。</summary>
    </member>
    <member name="M:System.ComponentModel.DataAnnotations.ValidationException.#ctor">
      <summary vsli:raw="Initializes a new instance of the &lt;see cref=&quot;T:System.ComponentModel.DataAnnotations.ValidationException&quot; /&gt; class using an error message generated by the system.">システムによって生成されたエラー メッセージを使用して、<see cref="T:System.ComponentModel.DataAnnotations.ValidationException" /> クラスの新しいインスタンスを初期化します。</summary>
    </member>
    <member name="M:System.ComponentModel.DataAnnotations.ValidationException.#ctor(System.ComponentModel.DataAnnotations.ValidationResult,System.ComponentModel.DataAnnotations.ValidationAttribute,System.Object)">
      <summary vsli:raw="Initializes a new instance of the &lt;see cref=&quot;T:System.ComponentModel.DataAnnotations.ValidationException&quot; /&gt; class by using a validation result, a validation attribute, and the value of the current exception.">検証結果、検証属性、および現在の例外の値を使用して、<see cref="T:System.ComponentModel.DataAnnotations.ValidationException" /> クラスの新しいインスタンスを初期化します。</summary>
      <param name="validationResult" vsli:raw="The list of validation results.">検証結果のリスト。</param>
      <param name="validatingAttribute" vsli:raw="The attribute that caused the current exception.">現在の例外を発生させた属性。</param>
      <param name="value" vsli:raw="The value of the object that caused the attribute to trigger the validation error.">属性で検証エラーが発生する原因となったオブジェクトの値。</param>
    </member>
    <member name="M:System.ComponentModel.DataAnnotations.ValidationException.#ctor(System.Runtime.Serialization.SerializationInfo,System.Runtime.Serialization.StreamingContext)">
      <summary vsli:raw="Initializes a new instance of the &lt;see cref=&quot;T:System.ComponentModel.DataAnnotations.ValidationException&quot; /&gt; class using serialized data.">シリアル化したデータを使用して、<see cref="T:System.ComponentModel.DataAnnotations.ValidationException" /> クラスの新しいインスタンスを初期化します。</summary>
      <param name="info" vsli:raw="The object that holds the serialized data.">シリアル化されたデータを保持するオブジェクト。</param>
      <param name="context" vsli:raw="Context information about the source or destination of the serialized object.">シリアル化されたオブジェクトの発生元または発生先に関するコンテキスト情報。</param>
    </member>
    <member name="M:System.ComponentModel.DataAnnotations.ValidationException.#ctor(System.String)">
      <summary vsli:raw="Initializes a new instance of the &lt;see cref=&quot;T:System.ComponentModel.DataAnnotations.ValidationException&quot; /&gt; class using a specified error message.">指定したエラー メッセージを使用して、<see cref="T:System.ComponentModel.DataAnnotations.ValidationException" /> クラスの新しいインスタンスを初期化します。</summary>
      <param name="message" vsli:raw="A specified message that states the error.">エラーを説明する指定メッセージ。</param>
    </member>
    <member name="M:System.ComponentModel.DataAnnotations.ValidationException.#ctor(System.String,System.ComponentModel.DataAnnotations.ValidationAttribute,System.Object)">
      <summary vsli:raw="Initializes a new instance of the &lt;see cref=&quot;T:System.ComponentModel.DataAnnotations.ValidationException&quot; /&gt; class using a specified error message, a validation attribute, and the value of the current exception.">指定したエラー メッセージ、検証属性、および現在の例外の値を使用して、<see cref="T:System.ComponentModel.DataAnnotations.ValidationException" /> クラスの新しいインスタンスを初期化します。</summary>
      <param name="errorMessage" vsli:raw="The message that states the error.">エラーを説明するメッセージ。</param>
      <param name="validatingAttribute" vsli:raw="The attribute that caused the current exception.">現在の例外を発生させた属性。</param>
      <param name="value" vsli:raw="The value of the object that caused the attribute to trigger validation error.">属性で検証エラーが発生する原因となったオブジェクトの値。</param>
    </member>
    <member name="M:System.ComponentModel.DataAnnotations.ValidationException.#ctor(System.String,System.Exception)">
      <summary vsli:raw="Initializes a new instance of the &lt;see cref=&quot;T:System.ComponentModel.DataAnnotations.ValidationException&quot; /&gt; class using a specified error message and a collection of inner exception instances.">指定したエラー メッセージと内部例外インスタンスのコレクションを使用して、<see cref="T:System.ComponentModel.DataAnnotations.ValidationException" /> クラスの新しいインスタンスを初期化します。</summary>
      <param name="message" vsli:raw="The error message.">エラー メッセージ。</param>
      <param name="innerException" vsli:raw="The collection of validation exceptions.">検証例外のコレクション。</param>
    </member>
    <member name="P:System.ComponentModel.DataAnnotations.ValidationException.ValidationAttribute">
      <summary vsli:raw="Gets the instance of the &lt;see cref=&quot;T:System.ComponentModel.DataAnnotations.ValidationAttribute&quot; /&gt; class that triggered this exception.">この例外を発生させた <see cref="T:System.ComponentModel.DataAnnotations.ValidationAttribute" /> クラスのインスタンスを取得します。</summary>
      <returns vsli:raw="An instance of the validation attribute type that triggered this exception.">この例外を発生させた検証属性型のインスタンス。</returns>
    </member>
    <member name="P:System.ComponentModel.DataAnnotations.ValidationException.ValidationResult">
      <summary vsli:raw="Gets the &lt;see cref=&quot;P:System.ComponentModel.DataAnnotations.ValidationException.ValidationResult&quot; /&gt; instance that describes the validation error.">検証エラーを示す <see cref="P:System.ComponentModel.DataAnnotations.ValidationException.ValidationResult" /> インスタンスを取得します。</summary>
      <returns vsli:raw="The &lt;see cref=&quot;P:System.ComponentModel.DataAnnotations.ValidationException.ValidationResult&quot; /&gt; instance that describes the validation error.">検証エラーを示す <see cref="P:System.ComponentModel.DataAnnotations.ValidationException.ValidationResult" /> インスタンス。</returns>
    </member>
    <member name="P:System.ComponentModel.DataAnnotations.ValidationException.Value">
      <summary vsli:raw="Gets the value of the object that causes the &lt;see cref=&quot;T:System.ComponentModel.DataAnnotations.ValidationAttribute&quot; /&gt; class to trigger this exception.">
        <see cref="T:System.ComponentModel.DataAnnotations.ValidationAttribute" /> クラスでこの例外が発生する原因となるオブジェクトの値を取得します。</summary>
      <returns vsli:raw="The value of the object that caused the &lt;see cref=&quot;T:System.ComponentModel.DataAnnotations.ValidationAttribute&quot; /&gt; class to trigger the validation error.">
        <see cref="T:System.ComponentModel.DataAnnotations.ValidationAttribute" /> クラスで検証エラーが発生する原因となったオブジェクトの値。</returns>
    </member>
    <member name="T:System.ComponentModel.DataAnnotations.ValidationResult">
      <summary vsli:raw="Represents a container for the results of a validation request.">検証要求の結果のコンテナーを表します。</summary>
    </member>
    <member name="F:System.ComponentModel.DataAnnotations.ValidationResult.Success">
      <summary vsli:raw="Represents the success of the validation (&lt;see langword=&quot;true&quot; /&gt; if validation was successful; otherwise, &lt;see langword=&quot;false&quot; /&gt;).">検証の成否を表します (検証が成功した場合は <see langword="true" />、それ以外の場合は <see langword="false" />)。</summary>
    </member>
    <member name="M:System.ComponentModel.DataAnnotations.ValidationResult.#ctor(System.ComponentModel.DataAnnotations.ValidationResult)">
      <summary vsli:raw="Initializes a new instance of the &lt;see cref=&quot;T:System.ComponentModel.DataAnnotations.ValidationResult&quot; /&gt; class by using a &lt;see cref=&quot;T:System.ComponentModel.DataAnnotations.ValidationResult&quot; /&gt; object.">
        <see cref="T:System.ComponentModel.DataAnnotations.ValidationResult" /> オブジェクトを使用して、<see cref="T:System.ComponentModel.DataAnnotations.ValidationResult" /> クラスの新しいインスタンスを初期化します。</summary>
      <param name="validationResult" vsli:raw="The validation result object.">検証結果のオブジェクト。</param>
      <exception cref="T:System.ArgumentNullException" vsli:raw="&lt;paramref name=&quot;validationResult&quot; /&gt; is &lt;see langword=&quot;null&quot; /&gt;.">
        <paramref name="validationResult" /> が <see langword="null" />です。</exception>
    </member>
    <member name="M:System.ComponentModel.DataAnnotations.ValidationResult.#ctor(System.String)">
      <summary vsli:raw="Initializes a new instance of the &lt;see cref=&quot;T:System.ComponentModel.DataAnnotations.ValidationResult&quot; /&gt; class by using an error message.">エラー メッセージを使用して、<see cref="T:System.ComponentModel.DataAnnotations.ValidationResult" /> クラスの新しいインスタンスを初期化します。</summary>
      <param name="errorMessage" vsli:raw="The error message.">エラー メッセージ。</param>
    </member>
    <member name="M:System.ComponentModel.DataAnnotations.ValidationResult.#ctor(System.String,System.Collections.Generic.IEnumerable{System.String})">
      <summary vsli:raw="Initializes a new instance of the &lt;see cref=&quot;T:System.ComponentModel.DataAnnotations.ValidationResult&quot; /&gt; class by using an error message and a list of members that have validation errors.">エラー メッセージと、検証エラーを含んでいるメンバーのリストを使用して、<see cref="T:System.ComponentModel.DataAnnotations.ValidationResult" /> クラスの新しいインスタンスを初期化します。</summary>
      <param name="errorMessage" vsli:raw="The error message.">エラー メッセージ。</param>
      <param name="memberNames" vsli:raw="The list of member names that have validation errors.">検証エラーを含んでいるメンバー名のリスト。</param>
    </member>
    <member name="M:System.ComponentModel.DataAnnotations.ValidationResult.ToString">
      <summary vsli:raw="Returns a string representation of the current validation result.">現在の検証結果の文字列形式を返します。</summary>
      <returns vsli:raw="The current validation result.">現在の検証結果。</returns>
    </member>
    <member name="P:System.ComponentModel.DataAnnotations.ValidationResult.ErrorMessage">
      <summary vsli:raw="Gets the error message for the validation.">検証のエラー メッセージを取得します。</summary>
      <returns vsli:raw="The error message for the validation.">検証のエラー メッセージ。</returns>
    </member>
    <member name="P:System.ComponentModel.DataAnnotations.ValidationResult.MemberNames">
      <summary vsli:raw="Gets the collection of member names that indicate which fields have validation errors.">検証エラーが存在するフィールドを示すメンバー名のコレクションを取得します。</summary>
      <returns vsli:raw="The collection of member names that indicate which fields have validation errors.">検証エラーが存在するフィールドを示すメンバー名のコレクション。</returns>
    </member>
    <member name="T:System.ComponentModel.DataAnnotations.Validator">
      <summary vsli:raw="Defines a helper class that can be used to validate objects, properties, and methods when it is included in their associated &lt;see cref=&quot;T:System.ComponentModel.DataAnnotations.ValidationAttribute&quot; /&gt; attributes.">オブジェクト、プロパティ、およびメソッドに関連付けられている <see cref="T:System.ComponentModel.DataAnnotations.ValidationAttribute" /> に含めることで、これらを検証するために使用できるヘルパー クラスを定義します。</summary>
    </member>
    <member name="M:System.ComponentModel.DataAnnotations.Validator.TryValidateObject(System.Object,System.ComponentModel.DataAnnotations.ValidationContext,System.Collections.Generic.ICollection{System.ComponentModel.DataAnnotations.ValidationResult})">
      <summary vsli:raw="Determines whether the specified object is valid using the validation context and validation results collection.">検証コンテキストおよび検証結果のコレクションを使用して、指定されたオブジェクトが有効かどうかを判断します。</summary>
      <param name="instance" vsli:raw="The object to validate.">検証対象のオブジェクト。</param>
      <param name="validationContext" vsli:raw="The context that describes the object to validate.">検証対象のオブジェクトを説明するコンテキスト。</param>
      <param name="validationResults" vsli:raw="A collection to hold each failed validation.">失敗した各検証を保持するコレクション。</param>
      <exception cref="T:System.ArgumentNullException" vsli:raw="&lt;paramref name=&quot;instance&quot; /&gt; is &lt;see langword=&quot;null&quot; /&gt;.">
        <paramref name="instance" /> が <see langword="null" />です。</exception>
      <exception cref="T:System.ArgumentException" vsli:raw="&lt;paramref name=&quot;instance&quot; /&gt; doesn't match the &lt;see cref=&quot;P:System.ComponentModel.DataAnnotations.ValidationContext.ObjectInstance&quot; /&gt;on &lt;paramref name=&quot;validationContext&quot; /&gt;.">
        <paramref name="instance" /> が <paramref name="validationContext" /> の <see cref="P:System.ComponentModel.DataAnnotations.ValidationContext.ObjectInstance" /> と一致しません。</exception>
      <returns vsli:raw="&lt;see langword=&quot;true&quot; /&gt; if the object validates; otherwise, &lt;see langword=&quot;false&quot; /&gt;.">オブジェクトが有効な場合は <see langword="true" />。それ以外の場合は <see langword="false" />。</returns>
    </member>
    <member name="M:System.ComponentModel.DataAnnotations.Validator.TryValidateObject(System.Object,System.ComponentModel.DataAnnotations.ValidationContext,System.Collections.Generic.ICollection{System.ComponentModel.DataAnnotations.ValidationResult},System.Boolean)">
      <summary vsli:raw="Determines whether the specified object is valid using the validation context, validation results collection, and a value that specifies whether to validate all properties.">検証コンテキスト、検証結果のコレクション、およびすべてのプロパティを検証するかどうかを指定する値を使用して、指定されたオブジェクトが有効かどうかを判断します。</summary>
      <param name="instance" vsli:raw="The object to validate.">検証対象のオブジェクト。</param>
      <param name="validationContext" vsli:raw="The context that describes the object to validate.">検証対象のオブジェクトを説明するコンテキスト。</param>
      <param name="validationResults" vsli:raw="A collection to hold each failed validation.">失敗した各検証を保持するコレクション。</param>
      <param name="validateAllProperties" vsli:raw="&lt;see langword=&quot;true&quot; /&gt; to validate all properties; if &lt;see langword=&quot;false&quot; /&gt;, only required attributes are validated.">すべてのプロパティを検証するには <see langword="true" />、必要な属性のみを検証するには <see langword="false" />。</param>
      <exception cref="T:System.ArgumentNullException" vsli:raw="&lt;paramref name=&quot;instance&quot; /&gt; is &lt;see langword=&quot;null&quot; /&gt;.">
        <paramref name="instance" /> が <see langword="null" />です。</exception>
      <exception cref="T:System.ArgumentException" vsli:raw="&lt;paramref name=&quot;instance&quot; /&gt; doesn't match the&lt;see cref=&quot;P:System.ComponentModel.DataAnnotations.ValidationContext.ObjectInstance&quot; /&gt;on &lt;paramref name=&quot;validationContext&quot; /&gt;.">
        <paramref name="instance" /> が <paramref name="validationContext" /> の <see cref="P:System.ComponentModel.DataAnnotations.ValidationContext.ObjectInstance" /> と一致しません。</exception>
      <returns vsli:raw="&lt;see langword=&quot;true&quot; /&gt; if the object validates; otherwise, &lt;see langword=&quot;false&quot; /&gt;.">オブジェクトが有効な場合は <see langword="true" />。それ以外の場合は <see langword="false" />。</returns>
    </member>
    <member name="M:System.ComponentModel.DataAnnotations.Validator.TryValidateProperty(System.Object,System.ComponentModel.DataAnnotations.ValidationContext,System.Collections.Generic.ICollection{System.ComponentModel.DataAnnotations.ValidationResult})">
      <summary vsli:raw="Validates the property.">プロパティを検証します。</summary>
      <param name="value" vsli:raw="The value to validate.">検証する値。</param>
      <param name="validationContext" vsli:raw="The context that describes the property to validate.">検証対象のプロパティを説明するコンテキスト。</param>
      <param name="validationResults" vsli:raw="A collection to hold each failed validation.">失敗した各検証を保持するコレクション。</param>
      <exception cref="T:System.ArgumentNullException" vsli:raw="&lt;paramref name=&quot;value&quot; /&gt; cannot be assigned to the property.  &#xA;  &#xA; -or-  &#xA;  &#xA; &lt;paramref name=&quot;value&quot; /&gt; is &lt;see langword=&quot;null&quot; /&gt;.">
        <paramref name="value" /> は、このプロパティに代入できません。  
  
- または - 
 <paramref name="value" /> が <see langword="null" />です。</exception>
      <exception cref="T:System.ArgumentException" vsli:raw="The &lt;see cref=&quot;P:System.ComponentModel.DataAnnotations.ValidationContext.MemberName&quot; /&gt; property of &lt;paramref name=&quot;validationContext&quot; /&gt; is not a valid property.">
        <paramref name="validationContext" /> の <see cref="P:System.ComponentModel.DataAnnotations.ValidationContext.MemberName" /> プロパティが、有効なプロパティではありません。</exception>
      <returns vsli:raw="&lt;see langword=&quot;true&quot; /&gt; if the property validates; otherwise, &lt;see langword=&quot;false&quot; /&gt;.">プロパティが有効な場合は <see langword="true" />。それ以外の場合は <see langword="false" />。</returns>
    </member>
    <member name="M:System.ComponentModel.DataAnnotations.Validator.TryValidateValue(System.Object,System.ComponentModel.DataAnnotations.ValidationContext,System.Collections.Generic.ICollection{System.ComponentModel.DataAnnotations.ValidationResult},System.Collections.Generic.IEnumerable{System.ComponentModel.DataAnnotations.ValidationAttribute})">
      <summary vsli:raw="Returns a value that indicates whether the specified value is valid with the specified attributes.">指定された属性を使用して、指定された値が有効かどうかを示す値を返します。</summary>
      <param name="value" vsli:raw="The value to validate.">検証する値。</param>
      <param name="validationContext" vsli:raw="The context that describes the object to validate.">検証対象のオブジェクトを説明するコンテキスト。</param>
      <param name="validationResults" vsli:raw="A collection to hold failed validations.">失敗した検証を保持するコレクション。</param>
      <param name="validationAttributes" vsli:raw="The validation attributes.">検証属性。</param>
      <returns vsli:raw="&lt;see langword=&quot;true&quot; /&gt; if the object validates; otherwise, &lt;see langword=&quot;false&quot; /&gt;.">オブジェクトが有効な場合は <see langword="true" />。それ以外の場合は <see langword="false" />。</returns>
    </member>
    <member name="M:System.ComponentModel.DataAnnotations.Validator.ValidateObject(System.Object,System.ComponentModel.DataAnnotations.ValidationContext)">
      <summary vsli:raw="Determines whether the specified object is valid using the validation context.">検証コンテキストを使用して、指定されたオブジェクトが有効かどうかを判断します。</summary>
      <param name="instance" vsli:raw="The object to validate.">検証対象のオブジェクト。</param>
      <param name="validationContext" vsli:raw="The context that describes the object to validate.">検証対象のオブジェクトを説明するコンテキスト。</param>
      <exception cref="T:System.ComponentModel.DataAnnotations.ValidationException" vsli:raw="The object is not valid.">オブジェクトが無効です。</exception>
      <exception cref="T:System.ArgumentNullException" vsli:raw="&lt;paramref name=&quot;instance&quot; /&gt; is &lt;see langword=&quot;null&quot; /&gt;.">
        <paramref name="instance" /> が <see langword="null" />です。</exception>
      <exception cref="T:System.ArgumentException" vsli:raw="&lt;paramref name=&quot;instance&quot; /&gt; doesn't match the &lt;see cref=&quot;P:System.ComponentModel.DataAnnotations.ValidationContext.ObjectInstance&quot; /&gt; on &lt;paramref name=&quot;validationContext&quot; /&gt;.">
        <paramref name="instance" /> が <paramref name="validationContext" /> の <see cref="P:System.ComponentModel.DataAnnotations.ValidationContext.ObjectInstance" /> と一致しません。</exception>
    </member>
    <member name="M:System.ComponentModel.DataAnnotations.Validator.ValidateObject(System.Object,System.ComponentModel.DataAnnotations.ValidationContext,System.Boolean)">
      <summary vsli:raw="Determines whether the specified object is valid using the validation context, and a value that specifies whether to validate all properties.">検証コンテキスト、およびすべてのプロパティを検証するかどうかを指定する値を使用して、指定されたオブジェクトが有効かどうかを判断します。</summary>
      <param name="instance" vsli:raw="The object to validate.">検証対象のオブジェクト。</param>
      <param name="validationContext" vsli:raw="The context that describes the object to validate.">検証対象のオブジェクトを説明するコンテキスト。</param>
      <param name="validateAllProperties" vsli:raw="&lt;see langword=&quot;true&quot; /&gt; to validate all properties; otherwise, &lt;see langword=&quot;false&quot; /&gt;.">すべてのプロパティを検証する場合は <see langword="true" />。それ以外の場合は <see langword="false" />。</param>
      <exception cref="T:System.ComponentModel.DataAnnotations.ValidationException" vsli:raw="&lt;paramref name=&quot;instance&quot; /&gt; is not valid.">
        <paramref name="instance" /> が無効です。</exception>
      <exception cref="T:System.ArgumentNullException" vsli:raw="&lt;paramref name=&quot;instance&quot; /&gt; is &lt;see langword=&quot;null&quot; /&gt;.">
        <paramref name="instance" /> が <see langword="null" />です。</exception>
      <exception cref="T:System.ArgumentException" vsli:raw="&lt;paramref name=&quot;instance&quot; /&gt; doesn't match the &lt;see cref=&quot;P:System.ComponentModel.DataAnnotations.ValidationContext.ObjectInstance&quot; /&gt; on &lt;paramref name=&quot;validationContext&quot; /&gt;.">
        <paramref name="instance" /> が <paramref name="validationContext" /> の <see cref="P:System.ComponentModel.DataAnnotations.ValidationContext.ObjectInstance" /> と一致しません。</exception>
    </member>
    <member name="M:System.ComponentModel.DataAnnotations.Validator.ValidateProperty(System.Object,System.ComponentModel.DataAnnotations.ValidationContext)">
      <summary vsli:raw="Validates the property.">プロパティを検証します。</summary>
      <param name="value" vsli:raw="The value to validate.">検証する値。</param>
      <param name="validationContext" vsli:raw="The context that describes the property to validate.">検証対象のプロパティを説明するコンテキスト。</param>
      <exception cref="T:System.ArgumentNullException" vsli:raw="&lt;paramref name=&quot;value&quot; /&gt; cannot be assigned to the property.">
        <paramref name="value" /> は、このプロパティに代入できません。</exception>
      <exception cref="T:System.ComponentModel.DataAnnotations.ValidationException" vsli:raw="The &lt;paramref name=&quot;value&quot; /&gt; parameter is not valid.">
        <paramref name="value" /> パラメーターが有効ではありません。</exception>
    </member>
    <member name="M:System.ComponentModel.DataAnnotations.Validator.ValidateValue(System.Object,System.ComponentModel.DataAnnotations.ValidationContext,System.Collections.Generic.IEnumerable{System.ComponentModel.DataAnnotations.ValidationAttribute})">
      <summary vsli:raw="Validates the specified attributes.">指定された属性を検証します。</summary>
      <param name="value" vsli:raw="The value to validate.">検証する値。</param>
      <param name="validationContext" vsli:raw="The context that describes the object to validate.">検証対象のオブジェクトを説明するコンテキスト。</param>
      <param name="validationAttributes" vsli:raw="The validation attributes.">検証属性。</param>
      <exception cref="T:System.ArgumentNullException" vsli:raw="The &lt;paramref name=&quot;validationContext&quot; /&gt; parameter is &lt;see langword=&quot;null&quot; /&gt;.">
        <paramref name="validationContext" /> パラメーターが <see langword="null" /> です。</exception>
      <exception cref="T:System.ComponentModel.DataAnnotations.ValidationException" vsli:raw="The &lt;paramref name=&quot;value&quot; /&gt; parameter does not validate with the &lt;paramref name=&quot;validationAttributes&quot; /&gt; parameter.">
        <paramref name="value" /> パラメーターは、<paramref name="validationAttributes" /> パラメーターで検証しません。</exception>
    </member>
  </members>
</doc>