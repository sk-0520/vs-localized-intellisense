<?xml version="1.0" encoding="utf-8"?>
<doc xmlns:vsli="https://github.com/sk-0520/vs-localized-intellisense/tree/master/schema/2024">
  <assembly>
    <name>System.Net.Security</name>
  </assembly>
  <members>
    <member name="T:System.Net.Security.AuthenticatedStream">
      <summary vsli:raw="Provides methods for passing credentials across a stream and requesting or performing authentication for client-server applications.">ストリームを介して資格情報を渡し、クライアント サーバー アプリケーションの認証を要求または実行するメソッドを提供します。</summary>
    </member>
    <member name="M:System.Net.Security.AuthenticatedStream.#ctor(System.IO.Stream,System.Boolean)">
      <summary vsli:raw="Initializes a new instance of the &lt;see cref=&quot;T:System.Net.Security.AuthenticatedStream&quot; /&gt; class.">
        <see cref="T:System.Net.Security.AuthenticatedStream" /> クラスの新しいインスタンスを初期化します。</summary>
      <param name="innerStream" vsli:raw="A &lt;see cref=&quot;T:System.IO.Stream&quot; /&gt; object used by the &lt;see cref=&quot;T:System.Net.Security.AuthenticatedStream&quot; /&gt; for sending and receiving data.">
        <see cref="T:System.Net.Security.AuthenticatedStream" /> がデータの送受信に使用する <see cref="T:System.IO.Stream" /> オブジェクト。</param>
      <param name="leaveInnerStreamOpen" vsli:raw="A &lt;see cref=&quot;T:System.Boolean&quot; /&gt; that indicates whether closing this &lt;see cref=&quot;T:System.Net.Security.AuthenticatedStream&quot; /&gt; object also closes &lt;paramref name=&quot;innerStream&quot; /&gt;.">この <see cref="T:System.Net.Security.AuthenticatedStream" /> オブジェクトを閉じると、<paramref name="innerStream" /> も閉じられるかどうかを示す <see cref="T:System.Boolean" />。</param>
      <exception cref="T:System.ArgumentNullException" vsli:raw="&lt;paramref name=&quot;innerStream&quot; /&gt; is &lt;see langword=&quot;null&quot; /&gt;.  &#xA;  &#xA; -or-  &#xA;  &#xA; &lt;paramref name=&quot;innerStream&quot; /&gt; is equal to &lt;see cref=&quot;F:System.IO.Stream.Null&quot; /&gt;.">
        <paramref name="innerStream" /> が <see langword="null" />です。  
  
- または - 
 <paramref name="innerStream" /> と <see cref="F:System.IO.Stream.Null" /> が等価です。</exception>
    </member>
    <member name="M:System.Net.Security.AuthenticatedStream.Dispose(System.Boolean)">
      <summary vsli:raw="Releases the unmanaged resources used by the &lt;see cref=&quot;T:System.Net.Security.AuthenticatedStream&quot; /&gt; and optionally releases the managed resources.">
        <see cref="T:System.Net.Security.AuthenticatedStream" /> によって使用されているアンマネージド リソースを解放し、オプションでマネージド リソースも解放します。</summary>
      <param name="disposing" vsli:raw="&lt;see langword=&quot;true&quot; /&gt; to release both managed and unmanaged resources; &lt;see langword=&quot;false&quot; /&gt; to release only unmanaged resources.">マネージド リソースとアンマネージド リソースの両方を解放する場合は <see langword="true" />。アンマネージド リソースだけを解放する場合は <see langword="false" />。</param>
    </member>
    <member name="M:System.Net.Security.AuthenticatedStream.DisposeAsync">
      <summary vsli:raw="Asynchronously releases the unmanaged and managed resources used by the &lt;see cref=&quot;T:System.Net.Security.AuthenticatedStream&quot; /&gt;.">
        <see cref="T:System.Net.Security.AuthenticatedStream" /> によって使用されているアンマネージドまたはマネージド リソースを非同期に解放します。</summary>
      <returns vsli:raw="A task that represents the asynchronous dispose operation.">非同期の破棄操作を表すタスク。</returns>
    </member>
    <member name="P:System.Net.Security.AuthenticatedStream.InnerStream">
      <summary vsli:raw="Gets the stream used by this &lt;see cref=&quot;T:System.Net.Security.AuthenticatedStream&quot; /&gt; for sending and receiving data.">この <see cref="T:System.Net.Security.AuthenticatedStream" /> がデータの送受信に使用するストリームを取得します。</summary>
      <returns vsli:raw="A &lt;see cref=&quot;T:System.IO.Stream&quot; /&gt; object.">
        <see cref="T:System.IO.Stream" /> オブジェクト。</returns>
    </member>
    <member name="P:System.Net.Security.AuthenticatedStream.IsAuthenticated">
      <summary vsli:raw="Gets a &lt;see cref=&quot;T:System.Boolean&quot; /&gt; value that indicates whether authentication was successful.">認証が成功したかどうかを示す <see cref="T:System.Boolean" /> 値を取得します。</summary>
      <returns vsli:raw="&lt;see langword=&quot;true&quot; /&gt; if successful authentication occurred; otherwise, &lt;see langword=&quot;false&quot; /&gt;.">認証が成功した場合は <see langword="true" />。それ以外の場合は <see langword="false" />。</returns>
    </member>
    <member name="P:System.Net.Security.AuthenticatedStream.IsEncrypted">
      <summary vsli:raw="Gets a &lt;see cref=&quot;T:System.Boolean&quot; /&gt; value that indicates whether data sent using this &lt;see cref=&quot;T:System.Net.Security.AuthenticatedStream&quot; /&gt; is encrypted.">この <see cref="T:System.Net.Security.AuthenticatedStream" /> を使用して送信するデータが暗号化されるかどうかを示す <see cref="T:System.Boolean" /> 値を取得します。</summary>
      <returns vsli:raw="&lt;see langword=&quot;true&quot; /&gt; if data is encrypted before being transmitted over the network and decrypted when it reaches the remote endpoint; otherwise, &lt;see langword=&quot;false&quot; /&gt;.">ネットワーク上で送信する前にデータを暗号化し、データがリモート エンドポイントに到達したときに復号化する場合は <see langword="true" />。それ以外の場合は <see langword="false" />。</returns>
    </member>
    <member name="P:System.Net.Security.AuthenticatedStream.IsMutuallyAuthenticated">
      <summary vsli:raw="Gets a &lt;see cref=&quot;T:System.Boolean&quot; /&gt; value that indicates whether both server and client have been authenticated.">サーバーとクライアントの両方が認証されているかどうかを示す <see cref="T:System.Boolean" /> 値を取得します。</summary>
      <returns vsli:raw="&lt;see langword=&quot;true&quot; /&gt; if the client and server have been authenticated; otherwise, &lt;see langword=&quot;false&quot; /&gt;.">クライアントとサーバーが認証されている場合は <see langword="true" />。それ以外の場合は <see langword="false" />。</returns>
    </member>
    <member name="P:System.Net.Security.AuthenticatedStream.IsServer">
      <summary vsli:raw="Gets a &lt;see cref=&quot;T:System.Boolean&quot; /&gt; value that indicates whether the local side of the connection was authenticated as the server.">接続のローカル側がサーバーとして認証されたかどうかを示す <see cref="T:System.Boolean" /> 値を取得します。</summary>
      <returns vsli:raw="&lt;see langword=&quot;true&quot; /&gt; if the local endpoint was authenticated as the server side of a client-server authenticated connection; &lt;see langword=&quot;false&quot; /&gt; if the local endpoint was authenticated as the client.">ローカル エンドポイントが、認証されたクライアント サーバー接続のサーバー側として認証されている場合は <see langword="true" />。ローカル エンドポイントがクライアントとして認証されている場合は <see langword="false" />。</returns>
    </member>
    <member name="P:System.Net.Security.AuthenticatedStream.IsSigned">
      <summary vsli:raw="Gets a &lt;see cref=&quot;T:System.Boolean&quot; /&gt; value that indicates whether the data sent using this stream is signed.">このストリームを使用して送信されるデータに署名するかどうかを示す <see cref="T:System.Boolean" /> 値を取得します。</summary>
      <returns vsli:raw="&lt;see langword=&quot;true&quot; /&gt; if the data is signed before being transmitted; otherwise, &lt;see langword=&quot;false&quot; /&gt;.">データの送信前に署名する場合は <see langword="true" />。それ以外の場合は <see langword="false" />。</returns>
    </member>
    <member name="P:System.Net.Security.AuthenticatedStream.LeaveInnerStreamOpen">
      <summary vsli:raw="Gets whether the stream used by this &lt;see cref=&quot;T:System.Net.Security.AuthenticatedStream&quot; /&gt; for sending and receiving data has been left open.">この <see cref="T:System.Net.Security.AuthenticatedStream" /> がデータの送受信に使用するストリームが、開いたままになっているかどうかを示す値を取得します。</summary>
      <returns vsli:raw="&lt;see langword=&quot;true&quot; /&gt; if the inner stream has been left open; otherwise, &lt;see langword=&quot;false&quot; /&gt;.">内部ストリームが開いたままになっている場合は <see langword="true" />。それ以外の場合は <see langword="false" />。</returns>
    </member>
    <member name="T:System.Net.Security.CipherSuitesPolicy">
      <summary vsli:raw="Specifies allowed cipher suites.">許可されている暗号スイートを指定します。</summary>
    </member>
    <member name="M:System.Net.Security.CipherSuitesPolicy.#ctor(System.Collections.Generic.IEnumerable{System.Net.Security.TlsCipherSuite})">
      <summary vsli:raw="Initializes a new instance of the &lt;see cref=&quot;T:System.Net.Security.CipherSuitesPolicy&quot; /&gt; class that can be used for client or server authentication.">クライアントまたはサーバーの認証に使用できる <see cref="T:System.Net.Security.CipherSuitesPolicy" /> クラスの新しいインスタンスを初期化します。</summary>
      <param name="allowedCipherSuites" vsli:raw="The collection of cipher suites allowed in this policy for negotiation.">ネゴシエーションに対してこのポリシーで許可されている暗号スイートのコレクション。</param>
      <exception cref="T:System.PlatformNotSupportedException" vsli:raw="Platform is not a Linux system with OpenSSL 1.1.1 or higher or a macOS.">プラットフォームは、OpenSSL 1.1.1 以降の Linux システムまたは macOS ではありません。</exception>
    </member>
    <member name="P:System.Net.Security.CipherSuitesPolicy.AllowedCipherSuites">
      <summary vsli:raw="Gets a subset of valid cipher suites passed into &lt;see cref=&quot;M:System.Net.Security.CipherSuitesPolicy.#ctor(System.Collections.Generic.IEnumerable{System.Net.Security.TlsCipherSuite})&quot; /&gt; constructor as a collection of cipher suites allowed in this policy for negotiation.">このポリシーでネゴシエーションに対して許可されている暗号スイートのコレクションとして <see cref="M:System.Net.Security.CipherSuitesPolicy.#ctor(System.Collections.Generic.IEnumerable{System.Net.Security.TlsCipherSuite})" /> コンストラクターに渡された有効な暗号スイートのサブセットを取得します。</summary>
      <returns vsli:raw="The collection of cipher suites allowed in this policy for negotiation.">ネゴシエーションに対してこのポリシーで許可されている暗号スイートのコレクション。</returns>
    </member>
    <member name="T:System.Net.Security.EncryptionPolicy">
      <summary vsli:raw="Specifies the encryption policy.">使用する暗号化ポリシーです。</summary>
    </member>
    <member name="F:System.Net.Security.EncryptionPolicy.AllowNoEncryption">
      <summary vsli:raw="Prefer that full encryption be used, but allow a NULL cipher (no encryption) if the server agrees. Starting in .NET 7, this member is obsolete.">暗号化の使用が推奨される場合に、サーバーの同意があれば NULL 暗号 (暗号化なし) の使用を許可します。</summary>
    </member>
    <member name="F:System.Net.Security.EncryptionPolicy.NoEncryption">
      <summary vsli:raw="Allow no encryption and request that a NULL cipher be used if the other endpoint can handle a NULL cipher. Starting in .NET 7, this member is obsolete.">他のエンドポイントが NULL 暗号を処理できる場合、暗号化の使用を許可せず、NULL 暗号の使用を要求します。</summary>
    </member>
    <member name="F:System.Net.Security.EncryptionPolicy.RequireEncryption">
      <summary vsli:raw="Require encryption and never allow a NULL cipher.">暗号化を必要とし、NULL 暗号の使用を一切許可しません。</summary>
    </member>
    <member name="T:System.Net.Security.LocalCertificateSelectionCallback">
      <summary vsli:raw="Selects the local Secure Sockets Layer (SSL) certificate used for authentication.">認証に使用するローカルの SSL (Secure Sockets Layer) 証明書を選択します。</summary>
      <param name="sender" vsli:raw="An object that contains state information for this validation.">この検証のステータス情報を格納するオブジェクト。</param>
      <param name="targetHost" vsli:raw="The host server specified by the client.">クライアントが指定したホスト サーバー。</param>
      <param name="localCertificates" vsli:raw="An &lt;see cref=&quot;T:System.Security.Cryptography.X509Certificates.X509CertificateCollection&quot; /&gt; containing local certificates.">ローカルの証明書を格納している <see cref="T:System.Security.Cryptography.X509Certificates.X509CertificateCollection" />。</param>
      <param name="remoteCertificate" vsli:raw="The certificate used to authenticate the remote party.">リモート側の認証に使用される証明書。</param>
      <param name="acceptableIssuers" vsli:raw="A &lt;see cref=&quot;T:System.String&quot; /&gt; array of certificate issuers acceptable to the remote party.">リモート側が受け入れることのできる証明書発行者の <see cref="T:System.String" /> 配列。</param>
      <returns vsli:raw="An &lt;see cref=&quot;T:System.Security.Cryptography.X509Certificates.X509Certificate&quot; /&gt; used for establishing an SSL connection.">SSL 接続の確立に使用する <see cref="T:System.Security.Cryptography.X509Certificates.X509Certificate" />。</returns>
    </member>
    <member name="T:System.Net.Security.NegotiateStream">
      <summary vsli:raw="Provides a stream that uses the Negotiate security protocol to authenticate the client, and optionally the server, in client-server communication.">クライアント サーバー通信で Negotiate セキュリティ プロトコルを使用してクライアントの認証と (オプションで) サーバーの認証を行うストリームを提供します。</summary>
    </member>
    <member name="M:System.Net.Security.NegotiateStream.#ctor(System.IO.Stream)">
      <summary vsli:raw="Initializes a new instance of the &lt;see cref=&quot;T:System.Net.Security.NegotiateStream&quot; /&gt; class using the specified &lt;see cref=&quot;T:System.IO.Stream&quot; /&gt;.">指定した <see cref="T:System.IO.Stream" /> を使用して <see cref="T:System.Net.Security.NegotiateStream" /> クラスの新しいインスタンスを初期化します。</summary>
      <param name="innerStream" vsli:raw="A &lt;see cref=&quot;T:System.IO.Stream&quot; /&gt; object used by the &lt;see cref=&quot;T:System.Net.Security.NegotiateStream&quot; /&gt; for sending and receiving data.">
        <see cref="T:System.Net.Security.NegotiateStream" /> がデータの送受信に使用する <see cref="T:System.IO.Stream" /> オブジェクト。</param>
    </member>
    <member name="M:System.Net.Security.NegotiateStream.#ctor(System.IO.Stream,System.Boolean)">
      <summary vsli:raw="Initializes a new instance of the &lt;see cref=&quot;T:System.Net.Security.NegotiateStream&quot; /&gt; class using the specified &lt;see cref=&quot;T:System.IO.Stream&quot; /&gt; and stream closure behavior.">指定した <see cref="T:System.IO.Stream" /> とストリームを閉じる動作を使用して、<see cref="T:System.Net.Security.NegotiateStream" /> クラスの新しいインスタンスを初期化します。</summary>
      <param name="innerStream" vsli:raw="A &lt;see cref=&quot;T:System.IO.Stream&quot; /&gt; object used by the &lt;see cref=&quot;T:System.Net.Security.NegotiateStream&quot; /&gt; for sending and receiving data.">
        <see cref="T:System.Net.Security.NegotiateStream" /> がデータの送受信に使用する <see cref="T:System.IO.Stream" /> オブジェクト。</param>
      <param name="leaveInnerStreamOpen" vsli:raw="&lt;see langword=&quot;true&quot; /&gt; to indicate that closing this &lt;see cref=&quot;T:System.Net.Security.NegotiateStream&quot; /&gt; has no effect on &lt;paramref name=&quot;innerStream&quot; /&gt;; &lt;see langword=&quot;false&quot; /&gt; to indicate that closing this &lt;see cref=&quot;T:System.Net.Security.NegotiateStream&quot; /&gt; also closes &lt;paramref name=&quot;innerStream&quot; /&gt;.">この <see cref="T:System.Net.Security.NegotiateStream" /> を閉じても、<paramref name="innerStream" /> が影響を受けないことを示す場合は <see langword="true" />。この <see cref="T:System.Net.Security.NegotiateStream" /> を閉じると、<paramref name="innerStream" /> も閉じられることを示す場合は <see langword="false" />。</param>
      <exception cref="T:System.ArgumentNullException" vsli:raw="&lt;paramref name=&quot;innerStream&quot; /&gt; is &lt;see langword=&quot;null&quot; /&gt;.  &#xA;  &#xA;-or-&#xA;  &#xA; &lt;paramref name=&quot;innerStream&quot; /&gt; is equal to &lt;see cref=&quot;F:System.IO.Stream.Null&quot; /&gt;.">
        <paramref name="innerStream" /> が <see langword="null" />です。  
  
- または - 
 <paramref name="innerStream" /> と <see cref="F:System.IO.Stream.Null" /> が等価です。</exception>
    </member>
    <member name="M:System.Net.Security.NegotiateStream.AuthenticateAsClient">
      <summary vsli:raw="Called by clients to authenticate the client, and optionally the server, in a client-server connection.">クライアントによって呼び出され、クライアントとサーバー間の接続でクライアントと (オプションで) サーバーを認証します。</summary>
      <exception cref="T:System.Security.Authentication.AuthenticationException" vsli:raw="The authentication failed. You can use this object to retry the authentication.">認証に失敗しました。 このオブジェクトを使用して、認証を再試行できます。</exception>
      <exception cref="T:System.Security.Authentication.InvalidCredentialException" vsli:raw="The authentication failed. You can use this object to retry the authentication.">認証に失敗しました。 このオブジェクトを使用して、認証を再試行できます。</exception>
      <exception cref="T:System.ObjectDisposedException" vsli:raw="This object has been closed.">このオブジェクトは閉じられました。</exception>
      <exception cref="T:System.InvalidOperationException" vsli:raw="Authentication has already occurred.  &#xA;  &#xA;-or-&#xA;  &#xA; This stream was used previously to attempt authentication as the server. You cannot use the stream to retry authentication as the client.">認証が既に発生しました。  
  
- または -
  
 このストリームは、かつて、サーバーとして認証を行う目的で使用されていました。 ストリームを使用して、クライアントとして認証を再試行することはできません。</exception>
    </member>
    <member name="M:System.Net.Security.NegotiateStream.AuthenticateAsClient(System.Net.NetworkCredential,System.Security.Authentication.ExtendedProtection.ChannelBinding,System.String)">
      <summary vsli:raw="Called by clients to authenticate the client, and optionally the server, in a client-server connection. The authentication process uses the specified client credential and the channel binding.">クライアントによって呼び出され、クライアントとサーバー間の接続でクライアントと (オプションで) サーバーを認証します。 認証プロセスでは、指定したクライアントの資格情報およびチャネル バインディングが使用されます。</summary>
      <param name="credential" vsli:raw="The &lt;see cref=&quot;T:System.Net.NetworkCredential&quot; /&gt; that is used to establish the identity of the client.">クライアントの ID を確立するために使用される <see cref="T:System.Net.NetworkCredential" />。</param>
      <param name="binding" vsli:raw="The &lt;see cref=&quot;T:System.Security.Authentication.ExtendedProtection.ChannelBinding&quot; /&gt; that is used for extended protection.">拡張保護に使用する <see cref="T:System.Security.Authentication.ExtendedProtection.ChannelBinding" />。</param>
      <param name="targetName" vsli:raw="The Service Principal Name (SPN) that uniquely identifies the server to authenticate.">認証するサーバーを一意に識別するサービス プリンシパル名 (SPN)。</param>
      <exception cref="T:System.ArgumentNullException" vsli:raw="&lt;paramref name=&quot;targetName&quot; /&gt; is &lt;see langword=&quot;null&quot; /&gt;.  &#xA;  &#xA;-or-&#xA;  &#xA; &lt;paramref name=&quot;credential&quot; /&gt; is &lt;see langword=&quot;null&quot; /&gt;.">
        <paramref name="targetName" /> が <see langword="null" />です。  
  
- または - 
 <paramref name="credential" /> が <see langword="null" />です。</exception>
      <exception cref="T:System.Security.Authentication.AuthenticationException" vsli:raw="The authentication failed. You can use this object to retry the authentication.">認証に失敗しました。 このオブジェクトを使用して、認証を再試行できます。</exception>
      <exception cref="T:System.Security.Authentication.InvalidCredentialException" vsli:raw="The authentication failed. You can use this object to retry the authentication.">認証に失敗しました。 このオブジェクトを使用して、認証を再試行できます。</exception>
      <exception cref="T:System.InvalidOperationException" vsli:raw="Authentication has already occurred.  &#xA;  &#xA;-or-&#xA;  &#xA; This stream was used previously to attempt authentication as the server. You cannot use the stream to retry authentication as the client.">認証が既に発生しました。  
  
- または -
  
 このストリームは、かつて、サーバーとして認証を行う目的で使用されていました。 ストリームを使用して、クライアントとして認証を再試行することはできません。</exception>
      <exception cref="T:System.ObjectDisposedException" vsli:raw="This object has been closed.">このオブジェクトは閉じられました。</exception>
    </member>
    <member name="M:System.Net.Security.NegotiateStream.AuthenticateAsClient(System.Net.NetworkCredential,System.Security.Authentication.ExtendedProtection.ChannelBinding,System.String,System.Net.Security.ProtectionLevel,System.Security.Principal.TokenImpersonationLevel)">
      <summary vsli:raw="Called by clients to authenticate the client, and optionally the server, in a client-server connection. The authentication process uses the specified credential, authentication options, and channel binding.">クライアントによって呼び出され、クライアントとサーバー間の接続でクライアントと (オプションで) サーバーを認証します。 認証プロセスでは、指定した資格情報、認証オプション、およびチャネル バインディングが使用されます。</summary>
      <param name="credential" vsli:raw="The &lt;see cref=&quot;T:System.Net.NetworkCredential&quot; /&gt; that is used to establish the identity of the client.">クライアントの ID を確立するために使用される <see cref="T:System.Net.NetworkCredential" />。</param>
      <param name="binding" vsli:raw="The &lt;see cref=&quot;T:System.Security.Authentication.ExtendedProtection.ChannelBinding&quot; /&gt; that is used for extended protection.">拡張保護に使用する <see cref="T:System.Security.Authentication.ExtendedProtection.ChannelBinding" />。</param>
      <param name="targetName" vsli:raw="The Service Principal Name (SPN) that uniquely identifies the server to authenticate.">認証するサーバーを一意に識別するサービス プリンシパル名 (SPN)。</param>
      <param name="requiredProtectionLevel" vsli:raw="One of the &lt;see cref=&quot;T:System.Net.Security.ProtectionLevel&quot; /&gt; values, indicating the security services for the stream.">ストリームのセキュリティ サービスを示す <see cref="T:System.Net.Security.ProtectionLevel" /> 値の 1 つ。</param>
      <param name="allowedImpersonationLevel" vsli:raw="One of the &lt;see cref=&quot;T:System.Security.Principal.TokenImpersonationLevel&quot; /&gt; values, indicating how the server can use the client's credentials to access resources.">サーバーがクライアントの資格情報を使用してリソースにアクセスする方法を示す <see cref="T:System.Security.Principal.TokenImpersonationLevel" /> 値の 1 つ。</param>
      <exception cref="T:System.ArgumentNullException" vsli:raw="&lt;paramref name=&quot;targetName&quot; /&gt; is &lt;see langword=&quot;null&quot; /&gt;.  &#xA;  &#xA;-or-&#xA;  &#xA; &lt;paramref name=&quot;credential&quot; /&gt; is &lt;see langword=&quot;null&quot; /&gt;.">
        <paramref name="targetName" /> が <see langword="null" />です。  
  
- または - 
 <paramref name="credential" /> が <see langword="null" />です。</exception>
      <exception cref="T:System.ArgumentOutOfRangeException" vsli:raw="&lt;paramref name=&quot;allowedImpersonationLevel&quot; /&gt; is not a valid value.">
        <paramref name="allowedImpersonationLevel" /> は有効な値ではありません。</exception>
      <exception cref="T:System.Security.Authentication.AuthenticationException" vsli:raw="The authentication failed. You can use this object to retry the authentication.">認証に失敗しました。 このオブジェクトを使用して、認証を再試行できます。</exception>
      <exception cref="T:System.Security.Authentication.InvalidCredentialException" vsli:raw="The authentication failed. You can use this object to retry the authentication.">認証に失敗しました。 このオブジェクトを使用して、認証を再試行できます。</exception>
      <exception cref="T:System.InvalidOperationException" vsli:raw="Authentication has already occurred.  &#xA;  &#xA;-or-&#xA;  &#xA; This stream was used previously to attempt authentication as the server. You cannot use the stream to retry authentication as the client.">認証が既に発生しました。  
  
- または -
  
 このストリームは、かつて、サーバーとして認証を行う目的で使用されていました。 ストリームを使用して、クライアントとして認証を再試行することはできません。</exception>
      <exception cref="T:System.ObjectDisposedException" vsli:raw="This object has been closed.">このオブジェクトは閉じられました。</exception>
    </member>
    <member name="M:System.Net.Security.NegotiateStream.AuthenticateAsClient(System.Net.NetworkCredential,System.String)">
      <summary vsli:raw="Called by clients to authenticate the client, and optionally the server, in a client-server connection. The authentication process uses the specified client credential.">クライアントによって呼び出され、クライアントとサーバー間の接続でクライアントと (オプションで) サーバーを認証します。 認証プロセスでは、指定したクライアントの資格情報を使用します。</summary>
      <param name="credential" vsli:raw="The &lt;see cref=&quot;T:System.Net.NetworkCredential&quot; /&gt; that is used to establish the identity of the client.">クライアントの ID を確立するために使用される <see cref="T:System.Net.NetworkCredential" />。</param>
      <param name="targetName" vsli:raw="The Service Principal Name (SPN) that uniquely identifies the server to authenticate.">認証するサーバーを一意に識別するサービス プリンシパル名 (SPN)。</param>
      <exception cref="T:System.Security.Authentication.AuthenticationException" vsli:raw="The authentication failed. You can use this object to retry the authentication.">認証に失敗しました。 このオブジェクトを使用して、認証を再試行できます。</exception>
      <exception cref="T:System.Security.Authentication.InvalidCredentialException" vsli:raw="The authentication failed. You can use this object to retry the authentication.">認証に失敗しました。 このオブジェクトを使用して、認証を再試行できます。</exception>
      <exception cref="T:System.ObjectDisposedException" vsli:raw="This object has been closed.">このオブジェクトは閉じられました。</exception>
      <exception cref="T:System.InvalidOperationException" vsli:raw="Authentication has already occurred.  &#xA;  &#xA;-or-&#xA;  &#xA; This stream was used previously to attempt authentication as the server. You cannot use the stream to retry authentication as the client.">認証が既に発生しました。  
  
- または -
  
 このストリームは、かつて、サーバーとして認証を行う目的で使用されていました。 ストリームを使用して、クライアントとして認証を再試行することはできません。</exception>
      <exception cref="T:System.ArgumentNullException" vsli:raw="&lt;paramref name=&quot;targetName&quot; /&gt; is &lt;see langword=&quot;null&quot; /&gt;.">
        <paramref name="targetName" /> が <see langword="null" />です。</exception>
    </member>
    <member name="M:System.Net.Security.NegotiateStream.AuthenticateAsClient(System.Net.NetworkCredential,System.String,System.Net.Security.ProtectionLevel,System.Security.Principal.TokenImpersonationLevel)">
      <summary vsli:raw="Called by clients to authenticate the client, and optionally the server, in a client-server connection. The authentication process uses the specified credentials and authentication options.">クライアントによって呼び出され、クライアントとサーバー間の接続でクライアントと (オプションで) サーバーを認証します。 認証プロセスでは、指定した資格情報と認証オプションを使用します。</summary>
      <param name="credential" vsli:raw="The &lt;see cref=&quot;T:System.Net.NetworkCredential&quot; /&gt; that is used to establish the identity of the client.">クライアントの ID を確立するために使用される <see cref="T:System.Net.NetworkCredential" />。</param>
      <param name="targetName" vsli:raw="The Service Principal Name (SPN) that uniquely identifies the server to authenticate.">認証するサーバーを一意に識別するサービス プリンシパル名 (SPN)。</param>
      <param name="requiredProtectionLevel" vsli:raw="One of the &lt;see cref=&quot;T:System.Net.Security.ProtectionLevel&quot; /&gt; values, indicating the security services for the stream.">ストリームのセキュリティ サービスを示す <see cref="T:System.Net.Security.ProtectionLevel" /> 値の 1 つ。</param>
      <param name="allowedImpersonationLevel" vsli:raw="One of the &lt;see cref=&quot;T:System.Security.Principal.TokenImpersonationLevel&quot; /&gt; values, indicating how the server can use the client's credentials to access resources.">サーバーがクライアントの資格情報を使用してリソースにアクセスする方法を示す <see cref="T:System.Security.Principal.TokenImpersonationLevel" /> 値の 1 つ。</param>
      <exception cref="T:System.ArgumentOutOfRangeException" vsli:raw="&lt;paramref name=&quot;allowedImpersonationLevel&quot; /&gt; is not a valid value.">
        <paramref name="allowedImpersonationLevel" /> は有効な値ではありません。</exception>
      <exception cref="T:System.ArgumentNullException" vsli:raw="&lt;paramref name=&quot;targetName&quot; /&gt; is null.">
        <paramref name="targetName" /> が null です。</exception>
      <exception cref="T:System.Security.Authentication.AuthenticationException" vsli:raw="The authentication failed. You can use this object to retry the authentication.">認証に失敗しました。 このオブジェクトを使用して、認証を再試行できます。</exception>
      <exception cref="T:System.Security.Authentication.InvalidCredentialException" vsli:raw="The authentication failed. You can use this object to retry the authentication.">認証に失敗しました。 このオブジェクトを使用して、認証を再試行できます。</exception>
      <exception cref="T:System.ObjectDisposedException" vsli:raw="This object has been closed.">このオブジェクトは閉じられました。</exception>
      <exception cref="T:System.InvalidOperationException" vsli:raw="Authentication has already occurred.  &#xA;  &#xA;-or-&#xA;  &#xA; This stream was used previously to attempt authentication as the server. You cannot use the stream to retry authentication as the client.">認証が既に発生しました。  
  
- または -
  
 このストリームは、かつて、サーバーとして認証を行う目的で使用されていました。 ストリームを使用して、クライアントとして認証を再試行することはできません。</exception>
    </member>
    <member name="M:System.Net.Security.NegotiateStream.AuthenticateAsClientAsync">
      <summary vsli:raw="Called by clients to authenticate the client, and optionally the server, in a client-server connection as an asynchronous operation.">クライアントによって呼び出され、クライアントとサーバー間の接続で非同期操作としてクライアントと (オプションで) サーバーを認証します。</summary>
      <exception cref="T:System.Security.Authentication.AuthenticationException" vsli:raw="The authentication failed. You can use this object to retry the authentication.">認証に失敗しました。 このオブジェクトを使用して、認証を再試行できます。</exception>
      <exception cref="T:System.Security.Authentication.InvalidCredentialException" vsli:raw="The authentication failed. You can use this object to retry the authentication.">認証に失敗しました。 このオブジェクトを使用して、認証を再試行できます。</exception>
      <exception cref="T:System.ObjectDisposedException" vsli:raw="This object has been closed.">このオブジェクトは閉じられました。</exception>
      <exception cref="T:System.InvalidOperationException" vsli:raw="Authentication has already occurred.  &#xA;  &#xA;-or-&#xA;  &#xA; This stream was used previously to attempt authentication as the server. You cannot use the stream to retry authentication as the client.">認証が既に発生しました。  
  
- または -
  
 このストリームは、かつて、サーバーとして認証を行う目的で使用されていました。 ストリームを使用して、クライアントとして認証を再試行することはできません。</exception>
      <returns vsli:raw="The task object representing the asynchronous operation.">非同期操作を表すタスク オブジェクト。</returns>
    </member>
    <member name="M:System.Net.Security.NegotiateStream.AuthenticateAsClientAsync(System.Net.NetworkCredential,System.Security.Authentication.ExtendedProtection.ChannelBinding,System.String)">
      <summary vsli:raw="Called by clients to authenticate the client, and optionally the server, in a client-server connection as an asynchronous operation. The authentication process uses the specified client credential and the channel binding.">クライアントによって呼び出され、クライアントとサーバー間の接続で非同期操作としてクライアントと (オプションで) サーバーを認証します。 認証プロセスでは、指定したクライアントの資格情報およびチャネル バインディングが使用されます。</summary>
      <param name="credential" vsli:raw="The &lt;see cref=&quot;T:System.Net.NetworkCredential&quot; /&gt; that is used to establish the identity of the client.">クライアントの ID を確立するために使用される <see cref="T:System.Net.NetworkCredential" />。</param>
      <param name="binding" vsli:raw="The &lt;see cref=&quot;T:System.Security.Authentication.ExtendedProtection.ChannelBinding&quot; /&gt; that is used for extended protection.">拡張保護に使用する <see cref="T:System.Security.Authentication.ExtendedProtection.ChannelBinding" />。</param>
      <param name="targetName" vsli:raw="The Service Principal Name (SPN) that uniquely identifies the server to authenticate.">認証するサーバーを一意に識別するサービス プリンシパル名 (SPN)。</param>
      <exception cref="T:System.ArgumentNullException" vsli:raw="&lt;paramref name=&quot;targetName&quot; /&gt; is &lt;see langword=&quot;null&quot; /&gt;.  &#xA;  &#xA;-or-&#xA;  &#xA; &lt;paramref name=&quot;credential&quot; /&gt; is &lt;see langword=&quot;null&quot; /&gt;.">
        <paramref name="targetName" /> が <see langword="null" />です。  
  
- または - 
 <paramref name="credential" /> が <see langword="null" />です。</exception>
      <exception cref="T:System.Security.Authentication.AuthenticationException" vsli:raw="The authentication failed. You can use this object to retry the authentication.">認証に失敗しました。 このオブジェクトを使用して、認証を再試行できます。</exception>
      <exception cref="T:System.Security.Authentication.InvalidCredentialException" vsli:raw="The authentication failed. You can use this object to retry the authentication.">認証に失敗しました。 このオブジェクトを使用して、認証を再試行できます。</exception>
      <exception cref="T:System.InvalidOperationException" vsli:raw="Authentication has already occurred.  &#xA;  &#xA;-or-&#xA;  &#xA; This stream was used previously to attempt authentication as the server. You cannot use the stream to retry authentication as the client.">認証が既に発生しました。  
  
- または -
  
 このストリームは、かつて、サーバーとして認証を行う目的で使用されていました。 ストリームを使用して、クライアントとして認証を再試行することはできません。</exception>
      <exception cref="T:System.ObjectDisposedException" vsli:raw="This object has been closed.">このオブジェクトは閉じられました。</exception>
      <returns vsli:raw="The task object representing the asynchronous operation.">非同期操作を表すタスク オブジェクト。</returns>
    </member>
    <member name="M:System.Net.Security.NegotiateStream.AuthenticateAsClientAsync(System.Net.NetworkCredential,System.Security.Authentication.ExtendedProtection.ChannelBinding,System.String,System.Net.Security.ProtectionLevel,System.Security.Principal.TokenImpersonationLevel)">
      <summary vsli:raw="Called by clients to authenticate the client, and optionally the server, in a client-server connection as an asynchronous operation. The authentication process uses the specified credential, authentication options, and channel binding.">クライアントによって呼び出され、クライアントとサーバー間の接続で非同期操作としてクライアントと (オプションで) サーバーを認証します。 認証プロセスでは、指定した資格情報、認証オプション、およびチャネル バインディングが使用されます。</summary>
      <param name="credential" vsli:raw="The &lt;see cref=&quot;T:System.Net.NetworkCredential&quot; /&gt; that is used to establish the identity of the client.">クライアントの ID を確立するために使用される <see cref="T:System.Net.NetworkCredential" />。</param>
      <param name="binding" vsli:raw="The &lt;see cref=&quot;T:System.Security.Authentication.ExtendedProtection.ChannelBinding&quot; /&gt; that is used for extended protection.">拡張保護に使用する <see cref="T:System.Security.Authentication.ExtendedProtection.ChannelBinding" />。</param>
      <param name="targetName" vsli:raw="The Service Principal Name (SPN) that uniquely identifies the server to authenticate.">認証するサーバーを一意に識別するサービス プリンシパル名 (SPN)。</param>
      <param name="requiredProtectionLevel" vsli:raw="One of the &lt;see cref=&quot;T:System.Net.Security.ProtectionLevel&quot; /&gt; values, indicating the security services for the stream.">ストリームのセキュリティ サービスを示す <see cref="T:System.Net.Security.ProtectionLevel" /> 値の 1 つ。</param>
      <param name="allowedImpersonationLevel" vsli:raw="One of the &lt;see cref=&quot;T:System.Security.Principal.TokenImpersonationLevel&quot; /&gt; values, indicating how the server can use the client's credentials to access resources.">サーバーがクライアントの資格情報を使用してリソースにアクセスする方法を示す <see cref="T:System.Security.Principal.TokenImpersonationLevel" /> 値の 1 つ。</param>
      <exception cref="T:System.ArgumentNullException" vsli:raw="&lt;paramref name=&quot;targetName&quot; /&gt; is &lt;see langword=&quot;null&quot; /&gt;.  &#xA;  &#xA;-or-&#xA;  &#xA; &lt;paramref name=&quot;credential&quot; /&gt; is &lt;see langword=&quot;null&quot; /&gt;.">
        <paramref name="targetName" /> が <see langword="null" />です。  
  
- または - 
 <paramref name="credential" /> が <see langword="null" />です。</exception>
      <exception cref="T:System.ArgumentOutOfRangeException" vsli:raw="&lt;paramref name=&quot;allowedImpersonationLevel&quot; /&gt; is not a valid value.">
        <paramref name="allowedImpersonationLevel" /> は有効な値ではありません。</exception>
      <exception cref="T:System.Security.Authentication.AuthenticationException" vsli:raw="The authentication failed. You can use this object to retry the authentication.">認証に失敗しました。 このオブジェクトを使用して、認証を再試行できます。</exception>
      <exception cref="T:System.Security.Authentication.InvalidCredentialException" vsli:raw="The authentication failed. You can use this object to retry the authentication.">認証に失敗しました。 このオブジェクトを使用して、認証を再試行できます。</exception>
      <exception cref="T:System.InvalidOperationException" vsli:raw="Authentication has already occurred.  &#xA;  &#xA;-or-&#xA;  &#xA; This stream was used previously to attempt authentication as the server. You cannot use the stream to retry authentication as the client.">認証が既に発生しました。  
  
- または -
  
 このストリームは、かつて、サーバーとして認証を行う目的で使用されていました。 ストリームを使用して、クライアントとして認証を再試行することはできません。</exception>
      <exception cref="T:System.ObjectDisposedException" vsli:raw="This object has been closed.">このオブジェクトは閉じられました。</exception>
      <returns vsli:raw="The task object representing the asynchronous operation.">非同期操作を表すタスク オブジェクト。</returns>
    </member>
    <member name="M:System.Net.Security.NegotiateStream.AuthenticateAsClientAsync(System.Net.NetworkCredential,System.String)">
      <summary vsli:raw="Called by clients to authenticate the client, and optionally the server, in a client-server connection as an asynchronous operation. The authentication process uses the specified client credential.">クライアントによって呼び出され、クライアントとサーバー間の接続で非同期操作としてクライアントと (オプションで) サーバーを認証します。 認証プロセスでは、指定したクライアントの資格情報を使用します。</summary>
      <param name="credential" vsli:raw="The &lt;see cref=&quot;T:System.Net.NetworkCredential&quot; /&gt; that is used to establish the identity of the client.">クライアントの ID を確立するために使用される <see cref="T:System.Net.NetworkCredential" />。</param>
      <param name="targetName" vsli:raw="The Service Principal Name (SPN) that uniquely identifies the server to authenticate.">認証するサーバーを一意に識別するサービス プリンシパル名 (SPN)。</param>
      <exception cref="T:System.Security.Authentication.AuthenticationException" vsli:raw="The authentication failed. You can use this object to retry the authentication.">認証に失敗しました。 このオブジェクトを使用して、認証を再試行できます。</exception>
      <exception cref="T:System.Security.Authentication.InvalidCredentialException" vsli:raw="The authentication failed. You can use this object to retry the authentication.">認証に失敗しました。 このオブジェクトを使用して、認証を再試行できます。</exception>
      <exception cref="T:System.ObjectDisposedException" vsli:raw="This object has been closed.">このオブジェクトは閉じられました。</exception>
      <exception cref="T:System.InvalidOperationException" vsli:raw="Authentication has already occurred.  &#xA;  &#xA;-or-&#xA;  &#xA; This stream was used previously to attempt authentication as the server. You cannot use the stream to retry authentication as the client.">認証が既に発生しました。  
  
- または -
  
 このストリームは、かつて、サーバーとして認証を行う目的で使用されていました。 ストリームを使用して、クライアントとして認証を再試行することはできません。</exception>
      <exception cref="T:System.ArgumentNullException" vsli:raw="&lt;paramref name=&quot;targetName&quot; /&gt; is &lt;see langword=&quot;null&quot; /&gt;.">
        <paramref name="targetName" /> が <see langword="null" />です。</exception>
      <returns vsli:raw="The task object representing the asynchronous operation.">非同期操作を表すタスク オブジェクト。</returns>
    </member>
    <member name="M:System.Net.Security.NegotiateStream.AuthenticateAsClientAsync(System.Net.NetworkCredential,System.String,System.Net.Security.ProtectionLevel,System.Security.Principal.TokenImpersonationLevel)">
      <summary vsli:raw="Called by clients to authenticate the client, and optionally the server, in a client-server connection as an asynchronous operation. The authentication process uses the specified credentials and authentication options.">クライアントによって呼び出され、クライアントとサーバー間の接続で非同期操作としてクライアントと (オプションで) サーバーを認証します。 認証プロセスでは、指定した資格情報と認証オプションを使用します。</summary>
      <param name="credential" vsli:raw="The &lt;see cref=&quot;T:System.Net.NetworkCredential&quot; /&gt; that is used to establish the identity of the client.">クライアントの ID を確立するために使用される <see cref="T:System.Net.NetworkCredential" />。</param>
      <param name="targetName" vsli:raw="The Service Principal Name (SPN) that uniquely identifies the server to authenticate.">認証するサーバーを一意に識別するサービス プリンシパル名 (SPN)。</param>
      <param name="requiredProtectionLevel" vsli:raw="One of the &lt;see cref=&quot;T:System.Net.Security.ProtectionLevel&quot; /&gt; values, indicating the security services for the stream.">ストリームのセキュリティ サービスを示す <see cref="T:System.Net.Security.ProtectionLevel" /> 値の 1 つ。</param>
      <param name="allowedImpersonationLevel" vsli:raw="One of the &lt;see cref=&quot;T:System.Security.Principal.TokenImpersonationLevel&quot; /&gt; values, indicating how the server can use the client's credentials to access resources.">サーバーがクライアントの資格情報を使用してリソースにアクセスする方法を示す <see cref="T:System.Security.Principal.TokenImpersonationLevel" /> 値の 1 つ。</param>
      <exception cref="T:System.ArgumentOutOfRangeException" vsli:raw="&lt;paramref name=&quot;allowedImpersonationLevel&quot; /&gt; is not a valid value.">
        <paramref name="allowedImpersonationLevel" /> は有効な値ではありません。</exception>
      <exception cref="T:System.ArgumentNullException" vsli:raw="&lt;paramref name=&quot;targetName&quot; /&gt; is null.">
        <paramref name="targetName" /> が null です。</exception>
      <exception cref="T:System.Security.Authentication.AuthenticationException" vsli:raw="The authentication failed. You can use this object to retry the authentication.">認証に失敗しました。 このオブジェクトを使用して、認証を再試行できます。</exception>
      <exception cref="T:System.Security.Authentication.InvalidCredentialException" vsli:raw="The authentication failed. You can use this object to retry the authentication.">認証に失敗しました。 このオブジェクトを使用して、認証を再試行できます。</exception>
      <exception cref="T:System.ObjectDisposedException" vsli:raw="This object has been closed.">このオブジェクトは閉じられました。</exception>
      <exception cref="T:System.InvalidOperationException" vsli:raw="Authentication has already occurred.  &#xA;  &#xA;-or-&#xA;  &#xA; This stream was used previously to attempt authentication as the server. You cannot use the stream to retry authentication as the client.">認証が既に発生しました。  
  
- または -
  
 このストリームは、かつて、サーバーとして認証を行う目的で使用されていました。 ストリームを使用して、クライアントとして認証を再試行することはできません。</exception>
      <returns vsli:raw="The task object representing the asynchronous operation.">非同期操作を表すタスク オブジェクト。</returns>
    </member>
    <member name="M:System.Net.Security.NegotiateStream.AuthenticateAsServer">
      <summary vsli:raw="Called by servers to authenticate the client, and optionally the server, in a client-server connection.">サーバーによって呼び出され、クライアントとサーバー間の接続でクライアントと (オプションで) サーバーを認証します。</summary>
      <exception cref="T:System.Security.Authentication.AuthenticationException" vsli:raw="The authentication failed. You can use this object to retry the authentication.">認証に失敗しました。 このオブジェクトを使用して、認証を再試行できます。</exception>
      <exception cref="T:System.Security.Authentication.InvalidCredentialException" vsli:raw="The authentication failed. You can use this object to retry the authentication.">認証に失敗しました。 このオブジェクトを使用して、認証を再試行できます。</exception>
      <exception cref="T:System.ObjectDisposedException" vsli:raw="This object has been closed.">このオブジェクトは閉じられました。</exception>
      <exception cref="T:System.NotSupportedException" vsli:raw="Windows 95 and Windows 98 are not supported.">Windows 95 と Windows 98 はサポートされていません。</exception>
    </member>
    <member name="M:System.Net.Security.NegotiateStream.AuthenticateAsServer(System.Net.NetworkCredential,System.Net.Security.ProtectionLevel,System.Security.Principal.TokenImpersonationLevel)">
      <summary vsli:raw="Called by servers to authenticate the client, and optionally the server, in a client-server connection. The authentication process uses the specified server credentials and authentication options.">サーバーによって呼び出され、クライアントとサーバー間の接続でクライアントと (オプションで) サーバーを認証します。 認証プロセスでは、指定したサーバーの資格情報と認証オプションを使用します。</summary>
      <param name="credential" vsli:raw="The &lt;see cref=&quot;T:System.Net.NetworkCredential&quot; /&gt; that is used to establish the identity of the server.">サーバーの ID を確立するために使用される <see cref="T:System.Net.NetworkCredential" />。</param>
      <param name="requiredProtectionLevel" vsli:raw="One of the &lt;see cref=&quot;T:System.Net.Security.ProtectionLevel&quot; /&gt; values, indicating the security services for the stream.">ストリームのセキュリティ サービスを示す <see cref="T:System.Net.Security.ProtectionLevel" /> 値の 1 つ。</param>
      <param name="requiredImpersonationLevel" vsli:raw="One of the &lt;see cref=&quot;T:System.Security.Principal.TokenImpersonationLevel&quot; /&gt; values, indicating how the server can use the client's credentials to access resources.">サーバーがクライアントの資格情報を使用してリソースにアクセスする方法を示す <see cref="T:System.Security.Principal.TokenImpersonationLevel" /> 値の 1 つ。</param>
      <exception cref="T:System.ArgumentNullException" vsli:raw="&lt;paramref name=&quot;credential&quot; /&gt; is &lt;see langword=&quot;null&quot; /&gt;.">
        <paramref name="credential" /> が <see langword="null" />です。</exception>
      <exception cref="T:System.ArgumentOutOfRangeException" vsli:raw="&lt;paramref name=&quot;requiredImpersonationLevel&quot; /&gt; must be &lt;see cref=&quot;F:System.Security.Principal.TokenImpersonationLevel.Identification&quot; /&gt;, &lt;see cref=&quot;F:System.Security.Principal.TokenImpersonationLevel.Impersonation&quot; /&gt;, or &lt;see cref=&quot;F:System.Security.Principal.TokenImpersonationLevel.Delegation&quot; /&gt;,">
        <paramref name="requiredImpersonationLevel" /> は、<see cref="F:System.Security.Principal.TokenImpersonationLevel.Identification" />、<see cref="F:System.Security.Principal.TokenImpersonationLevel.Impersonation" />、または <see cref="F:System.Security.Principal.TokenImpersonationLevel.Delegation" /> である必要があります。</exception>
      <exception cref="T:System.Security.Authentication.AuthenticationException" vsli:raw="The authentication failed. You can use this object to try to r-authenticate.">認証に失敗しました。 このオブジェクトを使用して、認証を再試行できます。</exception>
      <exception cref="T:System.Security.Authentication.InvalidCredentialException" vsli:raw="The authentication failed. You can use this object to retry the authentication.">認証に失敗しました。 このオブジェクトを使用して、認証を再試行できます。</exception>
      <exception cref="T:System.ObjectDisposedException" vsli:raw="This object has been closed.">このオブジェクトは閉じられました。</exception>
      <exception cref="T:System.InvalidOperationException" vsli:raw="Authentication has already occurred.  &#xA;  &#xA;-or-&#xA;  &#xA; This stream was used previously to attempt authentication as the client. You cannot use the stream to retry authentication as the server.">認証が既に発生しました。  
  
- または -
  
 このストリームは、かつて、クライアントとして認証を行う目的で使用されていました。 このストリームを使用して、サーバーとして認証を再試行することはできません。</exception>
      <exception cref="T:System.NotSupportedException" vsli:raw="Windows 95 and Windows 98 are not supported.">Windows 95 と Windows 98 はサポートされていません。</exception>
    </member>
    <member name="M:System.Net.Security.NegotiateStream.AuthenticateAsServer(System.Net.NetworkCredential,System.Security.Authentication.ExtendedProtection.ExtendedProtectionPolicy,System.Net.Security.ProtectionLevel,System.Security.Principal.TokenImpersonationLevel)">
      <summary vsli:raw="Called by servers to authenticate the client, and optionally the server, in a client-server connection. The authentication process uses the specified server credentials, authentication options, and extended protection policy.">サーバーによって呼び出され、クライアントとサーバー間の接続でクライアントと (オプションで) サーバーを認証します。 認証プロセスでは、指定したサーバーの資格情報、認証オプション、および拡張保護ポリシーが使用されます。</summary>
      <param name="credential" vsli:raw="The &lt;see cref=&quot;T:System.Net.NetworkCredential&quot; /&gt; that is used to establish the identity of the client.">クライアントの ID を確立するために使用される <see cref="T:System.Net.NetworkCredential" />。</param>
      <param name="policy" vsli:raw="The &lt;see cref=&quot;T:System.Security.Authentication.ExtendedProtection.ExtendedProtectionPolicy&quot; /&gt; that is used for extended protection.">拡張保護に使用する <see cref="T:System.Security.Authentication.ExtendedProtection.ExtendedProtectionPolicy" />。</param>
      <param name="requiredProtectionLevel" vsli:raw="One of the &lt;see cref=&quot;T:System.Net.Security.ProtectionLevel&quot; /&gt; values, indicating the security services for the stream.">ストリームのセキュリティ サービスを示す <see cref="T:System.Net.Security.ProtectionLevel" /> 値の 1 つ。</param>
      <param name="requiredImpersonationLevel" vsli:raw="One of the &lt;see cref=&quot;T:System.Security.Principal.TokenImpersonationLevel&quot; /&gt; values, indicating how the server can use the client's credentials to access resources.">サーバーがクライアントの資格情報を使用してリソースにアクセスする方法を示す <see cref="T:System.Security.Principal.TokenImpersonationLevel" /> 値の 1 つ。</param>
      <exception cref="T:System.ArgumentException" vsli:raw="The &lt;see cref=&quot;P:System.Security.Authentication.ExtendedProtection.ExtendedProtectionPolicy.CustomChannelBinding&quot; /&gt; and &lt;see cref=&quot;P:System.Security.Authentication.ExtendedProtection.ExtendedProtectionPolicy.CustomServiceNames&quot; /&gt; on the extended protection policy passed in the &lt;paramref name=&quot;policy&quot; /&gt; parameter are both &lt;see langword=&quot;null&quot; /&gt;.">
        <paramref name="policy" /> パラメーターで渡された拡張保護ポリシーの <see cref="P:System.Security.Authentication.ExtendedProtection.ExtendedProtectionPolicy.CustomChannelBinding" /> と <see cref="P:System.Security.Authentication.ExtendedProtection.ExtendedProtectionPolicy.CustomServiceNames" /> は、どちらも <see langword="null" /> です。</exception>
      <exception cref="T:System.ArgumentNullException" vsli:raw="&lt;paramref name=&quot;credential&quot; /&gt; is &lt;see langword=&quot;null&quot; /&gt;.">
        <paramref name="credential" /> が <see langword="null" />です。</exception>
      <exception cref="T:System.ArgumentOutOfRangeException" vsli:raw="&lt;paramref name=&quot;requiredImpersonationLevel&quot; /&gt; must be &lt;see cref=&quot;F:System.Security.Principal.TokenImpersonationLevel.Identification&quot; /&gt;, &lt;see cref=&quot;F:System.Security.Principal.TokenImpersonationLevel.Impersonation&quot; /&gt;, or &lt;see cref=&quot;F:System.Security.Principal.TokenImpersonationLevel.Delegation&quot; /&gt;,">
        <paramref name="requiredImpersonationLevel" /> は、<see cref="F:System.Security.Principal.TokenImpersonationLevel.Identification" />、<see cref="F:System.Security.Principal.TokenImpersonationLevel.Impersonation" />、または <see cref="F:System.Security.Principal.TokenImpersonationLevel.Delegation" /> である必要があります。</exception>
      <exception cref="T:System.Security.Authentication.AuthenticationException" vsli:raw="The authentication failed. You can use this object to try to r-authenticate.">認証に失敗しました。 このオブジェクトを使用して、認証を再試行できます。</exception>
      <exception cref="T:System.Security.Authentication.InvalidCredentialException" vsli:raw="The authentication failed. You can use this object to retry the authentication.">認証に失敗しました。 このオブジェクトを使用して、認証を再試行できます。</exception>
      <exception cref="T:System.InvalidOperationException" vsli:raw="Authentication has already occurred.  &#xA;  &#xA;-or-&#xA;  &#xA; This stream was used previously to attempt authentication as the client. You cannot use the stream to retry authentication as the server.">認証が既に発生しました。  
  
- または -
  
 このストリームは、かつて、クライアントとして認証を行う目的で使用されていました。 このストリームを使用して、サーバーとして認証を再試行することはできません。</exception>
      <exception cref="T:System.NotSupportedException" vsli:raw="Windows 95 and Windows 98 are not supported.">Windows 95 と Windows 98 はサポートされていません。</exception>
      <exception cref="T:System.ObjectDisposedException" vsli:raw="This object has been closed.">このオブジェクトは閉じられました。</exception>
      <exception cref="T:System.PlatformNotSupportedException" vsli:raw="The &lt;paramref name=&quot;policy&quot; /&gt; parameter was set to &lt;see cref=&quot;F:System.Security.Authentication.ExtendedProtection.PolicyEnforcement.Always&quot; /&gt; on a platform that does not support extended protection.">拡張保護をサポートしていないプラットフォームで、<paramref name="policy" /> パラメーターが <see cref="F:System.Security.Authentication.ExtendedProtection.PolicyEnforcement.Always" /> に設定されました。</exception>
    </member>
    <member name="M:System.Net.Security.NegotiateStream.AuthenticateAsServer(System.Security.Authentication.ExtendedProtection.ExtendedProtectionPolicy)">
      <summary vsli:raw="Called by servers to authenticate the client, and optionally the server, in a client-server connection. The authentication process uses the specified extended protection policy.">サーバーによって呼び出され、クライアントとサーバー間の接続でクライアントと (オプションで) サーバーを認証します。 認証プロセスでは、指定した拡張保護ポリシーが使用されます。</summary>
      <param name="policy" vsli:raw="The &lt;see cref=&quot;T:System.Security.Authentication.ExtendedProtection.ExtendedProtectionPolicy&quot; /&gt; that is used for extended protection.">拡張保護に使用する <see cref="T:System.Security.Authentication.ExtendedProtection.ExtendedProtectionPolicy" />。</param>
      <exception cref="T:System.ArgumentException" vsli:raw="The &lt;see cref=&quot;P:System.Security.Authentication.ExtendedProtection.ExtendedProtectionPolicy.CustomChannelBinding&quot; /&gt; and &lt;see cref=&quot;P:System.Security.Authentication.ExtendedProtection.ExtendedProtectionPolicy.CustomServiceNames&quot; /&gt; on the extended protection policy passed in the &lt;paramref name=&quot;policy&quot; /&gt; parameter are both &lt;see langword=&quot;null&quot; /&gt;.">
        <paramref name="policy" /> パラメーターで渡された拡張保護ポリシーの <see cref="P:System.Security.Authentication.ExtendedProtection.ExtendedProtectionPolicy.CustomChannelBinding" /> と <see cref="P:System.Security.Authentication.ExtendedProtection.ExtendedProtectionPolicy.CustomServiceNames" /> は、どちらも <see langword="null" /> です。</exception>
      <exception cref="T:System.Security.Authentication.AuthenticationException" vsli:raw="The authentication failed. You can use this object to retry the authentication.">認証に失敗しました。 このオブジェクトを使用して、認証を再試行できます。</exception>
      <exception cref="T:System.Security.Authentication.InvalidCredentialException" vsli:raw="The authentication failed. You can use this object to retry the authentication.">認証に失敗しました。 このオブジェクトを使用して、認証を再試行できます。</exception>
      <exception cref="T:System.NotSupportedException" vsli:raw="Windows 95 and Windows 98 are not supported.">Windows 95 と Windows 98 はサポートされていません。</exception>
      <exception cref="T:System.ObjectDisposedException" vsli:raw="This object has been closed.">このオブジェクトは閉じられました。</exception>
      <exception cref="T:System.PlatformNotSupportedException" vsli:raw="The &lt;paramref name=&quot;policy&quot; /&gt; parameter was set to &lt;see cref=&quot;F:System.Security.Authentication.ExtendedProtection.PolicyEnforcement.Always&quot; /&gt; on a platform that does not support extended protection.">拡張保護をサポートしていないプラットフォームで、<paramref name="policy" /> パラメーターが <see cref="F:System.Security.Authentication.ExtendedProtection.PolicyEnforcement.Always" /> に設定されました。</exception>
    </member>
    <member name="M:System.Net.Security.NegotiateStream.AuthenticateAsServerAsync">
      <summary vsli:raw="Called by servers to authenticate the client, and optionally the server, in a client-server connection as an asynchronous operation.">サーバーによって呼び出され、クライアントとサーバー間の接続で非同期操作としてクライアントと (オプションで) サーバーを認証します。</summary>
      <exception cref="T:System.Security.Authentication.AuthenticationException" vsli:raw="The authentication failed. You can use this object to retry the authentication.">認証に失敗しました。 このオブジェクトを使用して、認証を再試行できます。</exception>
      <exception cref="T:System.Security.Authentication.InvalidCredentialException" vsli:raw="The authentication failed. You can use this object to retry the authentication.">認証に失敗しました。 このオブジェクトを使用して、認証を再試行できます。</exception>
      <exception cref="T:System.ObjectDisposedException" vsli:raw="This object has been closed.">このオブジェクトは閉じられました。</exception>
      <exception cref="T:System.NotSupportedException" vsli:raw="Windows 95 and Windows 98 are not supported.">Windows 95 と Windows 98 はサポートされていません。</exception>
      <returns vsli:raw="The task object representing the asynchronous operation.">非同期操作を表すタスク オブジェクト。</returns>
    </member>
    <member name="M:System.Net.Security.NegotiateStream.AuthenticateAsServerAsync(System.Net.NetworkCredential,System.Net.Security.ProtectionLevel,System.Security.Principal.TokenImpersonationLevel)">
      <summary vsli:raw="Called by servers to authenticate the client, and optionally the server, in a client-server connection as an asynchronous operation. The authentication process uses the specified server credentials and authentication options.">サーバーによって呼び出され、クライアントとサーバー間の接続で非同期操作としてクライアントと (オプションで) サーバーを認証します。 認証プロセスでは、指定したサーバーの資格情報と認証オプションを使用します。</summary>
      <param name="credential" vsli:raw="The &lt;see cref=&quot;T:System.Net.NetworkCredential&quot; /&gt; that is used to establish the identity of the server.">サーバーの ID を確立するために使用される <see cref="T:System.Net.NetworkCredential" />。</param>
      <param name="requiredProtectionLevel" vsli:raw="One of the &lt;see cref=&quot;T:System.Net.Security.ProtectionLevel&quot; /&gt; values, indicating the security services for the stream.">ストリームのセキュリティ サービスを示す <see cref="T:System.Net.Security.ProtectionLevel" /> 値の 1 つ。</param>
      <param name="requiredImpersonationLevel" vsli:raw="One of the &lt;see cref=&quot;T:System.Security.Principal.TokenImpersonationLevel&quot; /&gt; values, indicating how the server can use the client's credentials to access resources.">サーバーがクライアントの資格情報を使用してリソースにアクセスする方法を示す <see cref="T:System.Security.Principal.TokenImpersonationLevel" /> 値の 1 つ。</param>
      <exception cref="T:System.ArgumentNullException" vsli:raw="&lt;paramref name=&quot;credential&quot; /&gt; is &lt;see langword=&quot;null&quot; /&gt;.">
        <paramref name="credential" /> が <see langword="null" />です。</exception>
      <exception cref="T:System.ArgumentOutOfRangeException" vsli:raw="&lt;paramref name=&quot;requiredImpersonationLevel&quot; /&gt; must be &lt;see cref=&quot;F:System.Security.Principal.TokenImpersonationLevel.Identification&quot; /&gt;, &lt;see cref=&quot;F:System.Security.Principal.TokenImpersonationLevel.Impersonation&quot; /&gt;, or &lt;see cref=&quot;F:System.Security.Principal.TokenImpersonationLevel.Delegation&quot; /&gt;,">
        <paramref name="requiredImpersonationLevel" /> は、<see cref="F:System.Security.Principal.TokenImpersonationLevel.Identification" />、<see cref="F:System.Security.Principal.TokenImpersonationLevel.Impersonation" />、または <see cref="F:System.Security.Principal.TokenImpersonationLevel.Delegation" /> である必要があります。</exception>
      <exception cref="T:System.Security.Authentication.AuthenticationException" vsli:raw="The authentication failed. You can use this object to try to r-authenticate.">認証に失敗しました。 このオブジェクトを使用して、認証を再試行できます。</exception>
      <exception cref="T:System.Security.Authentication.InvalidCredentialException" vsli:raw="The authentication failed. You can use this object to retry the authentication.">認証に失敗しました。 このオブジェクトを使用して、認証を再試行できます。</exception>
      <exception cref="T:System.ObjectDisposedException" vsli:raw="This object has been closed.">このオブジェクトは閉じられました。</exception>
      <exception cref="T:System.InvalidOperationException" vsli:raw="Authentication has already occurred.  &#xA;  &#xA;-or-&#xA;  &#xA; This stream was used previously to attempt authentication as the client. You cannot use the stream to retry authentication as the server.">認証が既に発生しました。  
  
- または -
  
 このストリームは、かつて、クライアントとして認証を行う目的で使用されていました。 このストリームを使用して、サーバーとして認証を再試行することはできません。</exception>
      <exception cref="T:System.NotSupportedException" vsli:raw="Windows 95 and Windows 98 are not supported.">Windows 95 と Windows 98 はサポートされていません。</exception>
      <returns vsli:raw="The task object representing the asynchronous operation.">非同期操作を表すタスク オブジェクト。</returns>
    </member>
    <member name="M:System.Net.Security.NegotiateStream.AuthenticateAsServerAsync(System.Net.NetworkCredential,System.Security.Authentication.ExtendedProtection.ExtendedProtectionPolicy,System.Net.Security.ProtectionLevel,System.Security.Principal.TokenImpersonationLevel)">
      <summary vsli:raw="Called by servers to authenticate the client, and optionally the server, in a client-server connection as an asynchronous operation. The authentication process uses the specified server credentials, authentication options, and extended protection policy.">サーバーによって呼び出され、クライアントとサーバー間の接続で非同期操作としてクライアントと (オプションで) サーバーを認証します。 認証プロセスでは、指定したサーバーの資格情報、認証オプション、および拡張保護ポリシーが使用されます。</summary>
      <param name="credential" vsli:raw="The &lt;see cref=&quot;T:System.Net.NetworkCredential&quot; /&gt; that is used to establish the identity of the client.">クライアントの ID を確立するために使用される <see cref="T:System.Net.NetworkCredential" />。</param>
      <param name="policy" vsli:raw="The &lt;see cref=&quot;T:System.Security.Authentication.ExtendedProtection.ExtendedProtectionPolicy&quot; /&gt; that is used for extended protection.">拡張保護に使用する <see cref="T:System.Security.Authentication.ExtendedProtection.ExtendedProtectionPolicy" />。</param>
      <param name="requiredProtectionLevel" vsli:raw="One of the &lt;see cref=&quot;T:System.Net.Security.ProtectionLevel&quot; /&gt; values, indicating the security services for the stream.">ストリームのセキュリティ サービスを示す <see cref="T:System.Net.Security.ProtectionLevel" /> 値の 1 つ。</param>
      <param name="requiredImpersonationLevel" vsli:raw="One of the &lt;see cref=&quot;T:System.Security.Principal.TokenImpersonationLevel&quot; /&gt; values, indicating how the server can use the client's credentials to access resources.">サーバーがクライアントの資格情報を使用してリソースにアクセスする方法を示す <see cref="T:System.Security.Principal.TokenImpersonationLevel" /> 値の 1 つ。</param>
      <exception cref="T:System.ArgumentException" vsli:raw="The &lt;see cref=&quot;P:System.Security.Authentication.ExtendedProtection.ExtendedProtectionPolicy.CustomChannelBinding&quot; /&gt; and &lt;see cref=&quot;P:System.Security.Authentication.ExtendedProtection.ExtendedProtectionPolicy.CustomServiceNames&quot; /&gt; on the extended protection policy passed in the &lt;paramref name=&quot;policy&quot; /&gt; parameter are both &lt;see langword=&quot;null&quot; /&gt;.">
        <paramref name="policy" /> パラメーターで渡された拡張保護ポリシーの <see cref="P:System.Security.Authentication.ExtendedProtection.ExtendedProtectionPolicy.CustomChannelBinding" /> と <see cref="P:System.Security.Authentication.ExtendedProtection.ExtendedProtectionPolicy.CustomServiceNames" /> は、どちらも <see langword="null" /> です。</exception>
      <exception cref="T:System.ArgumentNullException" vsli:raw="&lt;paramref name=&quot;credential&quot; /&gt; is &lt;see langword=&quot;null&quot; /&gt;.">
        <paramref name="credential" /> が <see langword="null" />です。</exception>
      <exception cref="T:System.ArgumentOutOfRangeException" vsli:raw="&lt;paramref name=&quot;requiredImpersonationLevel&quot; /&gt; must be &lt;see cref=&quot;F:System.Security.Principal.TokenImpersonationLevel.Identification&quot; /&gt;, &lt;see cref=&quot;F:System.Security.Principal.TokenImpersonationLevel.Impersonation&quot; /&gt;, or &lt;see cref=&quot;F:System.Security.Principal.TokenImpersonationLevel.Delegation&quot; /&gt;,">
        <paramref name="requiredImpersonationLevel" /> は、<see cref="F:System.Security.Principal.TokenImpersonationLevel.Identification" />、<see cref="F:System.Security.Principal.TokenImpersonationLevel.Impersonation" />、または <see cref="F:System.Security.Principal.TokenImpersonationLevel.Delegation" /> である必要があります。</exception>
      <exception cref="T:System.Security.Authentication.AuthenticationException" vsli:raw="The authentication failed. You can use this object to try to r-authenticate.">認証に失敗しました。 このオブジェクトを使用して、認証を再試行できます。</exception>
      <exception cref="T:System.Security.Authentication.InvalidCredentialException" vsli:raw="The authentication failed. You can use this object to retry the authentication.">認証に失敗しました。 このオブジェクトを使用して、認証を再試行できます。</exception>
      <exception cref="T:System.InvalidOperationException" vsli:raw="Authentication has already occurred.  &#xA;  &#xA;-or-&#xA;  &#xA; This stream was used previously to attempt authentication as the client. You cannot use the stream to retry authentication as the server.">認証が既に発生しました。  
  
- または -
  
 このストリームは、かつて、クライアントとして認証を行う目的で使用されていました。 このストリームを使用して、サーバーとして認証を再試行することはできません。</exception>
      <exception cref="T:System.NotSupportedException" vsli:raw="Windows 95 and Windows 98 are not supported.">Windows 95 と Windows 98 はサポートされていません。</exception>
      <exception cref="T:System.ObjectDisposedException" vsli:raw="This object has been closed.">このオブジェクトは閉じられました。</exception>
      <exception cref="T:System.PlatformNotSupportedException" vsli:raw="The &lt;paramref name=&quot;policy&quot; /&gt; parameter was set to &lt;see cref=&quot;F:System.Security.Authentication.ExtendedProtection.PolicyEnforcement.Always&quot; /&gt; on a platform that does not support extended protection.">拡張保護をサポートしていないプラットフォームで、<paramref name="policy" /> パラメーターが <see cref="F:System.Security.Authentication.ExtendedProtection.PolicyEnforcement.Always" /> に設定されました。</exception>
      <returns vsli:raw="The task object representing the asynchronous operation.">非同期操作を表すタスク オブジェクト。</returns>
    </member>
    <member name="M:System.Net.Security.NegotiateStream.AuthenticateAsServerAsync(System.Security.Authentication.ExtendedProtection.ExtendedProtectionPolicy)">
      <summary vsli:raw="Called by servers to authenticate the client, and optionally the server, in a client-server connection as an asynchronous operation. The authentication process uses the specified extended protection policy.">サーバーによって呼び出され、クライアントとサーバー間の接続で非同期操作としてクライアントと (オプションで) サーバーを認証します。 認証プロセスでは、指定した拡張保護ポリシーが使用されます。</summary>
      <param name="policy" vsli:raw="The &lt;see cref=&quot;T:System.Security.Authentication.ExtendedProtection.ExtendedProtectionPolicy&quot; /&gt; that is used for extended protection.">拡張保護に使用する <see cref="T:System.Security.Authentication.ExtendedProtection.ExtendedProtectionPolicy" />。</param>
      <exception cref="T:System.ArgumentException" vsli:raw="The &lt;see cref=&quot;P:System.Security.Authentication.ExtendedProtection.ExtendedProtectionPolicy.CustomChannelBinding&quot; /&gt; and &lt;see cref=&quot;P:System.Security.Authentication.ExtendedProtection.ExtendedProtectionPolicy.CustomServiceNames&quot; /&gt; on the extended protection policy passed in the &lt;paramref name=&quot;policy&quot; /&gt; parameter are both &lt;see langword=&quot;null&quot; /&gt;.">
        <paramref name="policy" /> パラメーターで渡された拡張保護ポリシーの <see cref="P:System.Security.Authentication.ExtendedProtection.ExtendedProtectionPolicy.CustomChannelBinding" /> と <see cref="P:System.Security.Authentication.ExtendedProtection.ExtendedProtectionPolicy.CustomServiceNames" /> は、どちらも <see langword="null" /> です。</exception>
      <exception cref="T:System.Security.Authentication.AuthenticationException" vsli:raw="The authentication failed. You can use this object to retry the authentication.">認証に失敗しました。 このオブジェクトを使用して、認証を再試行できます。</exception>
      <exception cref="T:System.Security.Authentication.InvalidCredentialException" vsli:raw="The authentication failed. You can use this object to retry the authentication.">認証に失敗しました。 このオブジェクトを使用して、認証を再試行できます。</exception>
      <exception cref="T:System.NotSupportedException" vsli:raw="Windows 95 and Windows 98 are not supported.">Windows 95 と Windows 98 はサポートされていません。</exception>
      <exception cref="T:System.ObjectDisposedException" vsli:raw="This object has been closed.">このオブジェクトは閉じられました。</exception>
      <exception cref="T:System.PlatformNotSupportedException" vsli:raw="The &lt;paramref name=&quot;policy&quot; /&gt; parameter was set to &lt;see cref=&quot;F:System.Security.Authentication.ExtendedProtection.PolicyEnforcement.Always&quot; /&gt; on a platform that does not support extended protection.">拡張保護をサポートしていないプラットフォームで、<paramref name="policy" /> パラメーターが <see cref="F:System.Security.Authentication.ExtendedProtection.PolicyEnforcement.Always" /> に設定されました。</exception>
      <returns vsli:raw="The task object representing the asynchronous operation.">非同期操作を表すタスク オブジェクト。</returns>
    </member>
    <member name="M:System.Net.Security.NegotiateStream.BeginAuthenticateAsClient(System.AsyncCallback,System.Object)">
      <summary vsli:raw="Called by clients to begin an asynchronous operation to authenticate the client, and optionally the server, in a client-server connection. This method does not block.">クライアントによって呼び出され、クライアントとサーバー間の接続でクライアントと (オプションで) サーバーを認証する非同期操作を開始します。 このメソッドはブロックしません。</summary>
      <param name="asyncCallback" vsli:raw="An &lt;see cref=&quot;T:System.AsyncCallback&quot; /&gt; delegate that references the method to invoke when the authentication is complete.">認証完了時に呼び出すメソッドを参照する <see cref="T:System.AsyncCallback" /> デリゲート。</param>
      <param name="asyncState" vsli:raw="A user-defined object containing information about the operation. This object is passed to the &lt;paramref name=&quot;asyncCallback&quot; /&gt; delegate when the operation completes.">操作に関する情報を格納するユーザー定義のオブジェクト。 このオブジェクトは、操作の完了時に <paramref name="asyncCallback" /> デリゲートに渡されます。</param>
      <exception cref="T:System.Security.Authentication.AuthenticationException" vsli:raw="The authentication failed. You can use this object to retry the authentication.">認証に失敗しました。 このオブジェクトを使用して、認証を再試行できます。</exception>
      <exception cref="T:System.Security.Authentication.InvalidCredentialException" vsli:raw="The authentication failed. You can use this object to retry the authentication.">認証に失敗しました。 このオブジェクトを使用して、認証を再試行できます。</exception>
      <exception cref="T:System.ObjectDisposedException" vsli:raw="This object has been closed.">このオブジェクトは閉じられました。</exception>
      <exception cref="T:System.InvalidOperationException" vsli:raw="Authentication has already occurred.  &#xA;  &#xA;-or-&#xA;  &#xA; This stream was used previously to attempt authentication as the server. You cannot use the stream to retry authentication as the client.">認証が既に発生しました。  
  
- または -
  
 このストリームは、かつて、サーバーとして認証を行う目的で使用されていました。 ストリームを使用して、クライアントとして認証を再試行することはできません。</exception>
      <returns vsli:raw="An &lt;see cref=&quot;T:System.IAsyncResult&quot; /&gt; object indicating the status of the asynchronous operation.">非同期操作の状態を示す <see cref="T:System.IAsyncResult" /> オブジェクト。</returns>
    </member>
    <member name="M:System.Net.Security.NegotiateStream.BeginAuthenticateAsClient(System.Net.NetworkCredential,System.Security.Authentication.ExtendedProtection.ChannelBinding,System.String,System.AsyncCallback,System.Object)">
      <summary vsli:raw="Called by clients to begin an asynchronous operation to authenticate the client, and optionally the server, in a client-server connection. The authentication process uses the specified credentials and channel binding. This method does not block.">クライアントによって呼び出され、クライアントとサーバー間の接続でクライアントと (オプションで) サーバーを認証する非同期操作を開始します。 認証プロセスでは、指定した資格情報およびチャネル バインディングが使用されます。 このメソッドはブロックしません。</summary>
      <param name="credential" vsli:raw="The &lt;see cref=&quot;T:System.Net.NetworkCredential&quot; /&gt; that is used to establish the identity of the client.">クライアントの ID を確立するために使用される <see cref="T:System.Net.NetworkCredential" />。</param>
      <param name="binding" vsli:raw="The &lt;see cref=&quot;T:System.Security.Authentication.ExtendedProtection.ChannelBinding&quot; /&gt; that is used for extended protection.">拡張保護に使用する <see cref="T:System.Security.Authentication.ExtendedProtection.ChannelBinding" />。</param>
      <param name="targetName" vsli:raw="The Service Principal Name (SPN) that uniquely identifies the server to authenticate.">認証するサーバーを一意に識別するサービス プリンシパル名 (SPN)。</param>
      <param name="asyncCallback" vsli:raw="An &lt;see cref=&quot;T:System.AsyncCallback&quot; /&gt; delegate that references the method to invoke when the authentication is complete.">認証完了時に呼び出すメソッドを参照する <see cref="T:System.AsyncCallback" /> デリゲート。</param>
      <param name="asyncState" vsli:raw="A user-defined object containing information about the write operation. This object is passed to the &lt;paramref name=&quot;asyncCallback&quot; /&gt; delegate when the operation completes.">書き込み操作に関する情報を格納するユーザー定義のオブジェクト。 このオブジェクトは、操作の完了時に <paramref name="asyncCallback" /> デリゲートに渡されます。</param>
      <exception cref="T:System.ArgumentNullException" vsli:raw="&lt;paramref name=&quot;credential&quot; /&gt; is &lt;see langword=&quot;null&quot; /&gt;.  &#xA;  &#xA;-or-&#xA;  &#xA; &lt;paramref name=&quot;targetName&quot; /&gt; is &lt;see langword=&quot;null&quot; /&gt;.">
        <paramref name="credential" /> が <see langword="null" />です。  
  
- または - 
 <paramref name="targetName" /> が <see langword="null" />です。</exception>
      <exception cref="T:System.Security.Authentication.AuthenticationException" vsli:raw="The authentication failed. You can use this object to retry the authentication.">認証に失敗しました。 このオブジェクトを使用して、認証を再試行できます。</exception>
      <exception cref="T:System.Security.Authentication.InvalidCredentialException" vsli:raw="The authentication failed. You can use this object to retry the authentication.">認証に失敗しました。 このオブジェクトを使用して、認証を再試行できます。</exception>
      <exception cref="T:System.InvalidOperationException" vsli:raw="Authentication has already occurred.  &#xA;  &#xA;-or-&#xA;  &#xA; This stream was used previously to attempt authentication as the server. You cannot use the stream to retry authentication as the client.">認証が既に発生しました。  
  
- または -
  
 このストリームは、かつて、サーバーとして認証を行う目的で使用されていました。 ストリームを使用して、クライアントとして認証を再試行することはできません。</exception>
      <exception cref="T:System.ObjectDisposedException" vsli:raw="This object has been closed.">このオブジェクトは閉じられました。</exception>
      <returns vsli:raw="An &lt;see cref=&quot;T:System.IAsyncResult&quot; /&gt; object indicating the status of the asynchronous operation.">非同期操作の状態を示す <see cref="T:System.IAsyncResult" /> オブジェクト。</returns>
    </member>
    <member name="M:System.Net.Security.NegotiateStream.BeginAuthenticateAsClient(System.Net.NetworkCredential,System.Security.Authentication.ExtendedProtection.ChannelBinding,System.String,System.Net.Security.ProtectionLevel,System.Security.Principal.TokenImpersonationLevel,System.AsyncCallback,System.Object)">
      <summary vsli:raw="Called by clients to begin an asynchronous operation to authenticate the client, and optionally the server, in a client-server connection. The authentication process uses the specified credentials, authentication options, and channel binding. This method does not block.">クライアントによって呼び出され、クライアントとサーバー間の接続でクライアントと (オプションで) サーバーを認証する非同期操作を開始します。 認証プロセスでは、指定した資格情報、認証オプション、およびチャネル バインディングが使用されます。 このメソッドはブロックしません。</summary>
      <param name="credential" vsli:raw="The &lt;see cref=&quot;T:System.Net.NetworkCredential&quot; /&gt; that is used to establish the identity of the client.">クライアントの ID を確立するために使用される <see cref="T:System.Net.NetworkCredential" />。</param>
      <param name="binding" vsli:raw="The &lt;see cref=&quot;T:System.Security.Authentication.ExtendedProtection.ChannelBinding&quot; /&gt; that is used for extended protection.">拡張保護に使用する <see cref="T:System.Security.Authentication.ExtendedProtection.ChannelBinding" />。</param>
      <param name="targetName" vsli:raw="The Service Principal Name (SPN) that uniquely identifies the server to authenticate.">認証するサーバーを一意に識別するサービス プリンシパル名 (SPN)。</param>
      <param name="requiredProtectionLevel" vsli:raw="One of the &lt;see cref=&quot;T:System.Net.Security.ProtectionLevel&quot; /&gt; values, indicating the security services for the stream.">ストリームのセキュリティ サービスを示す <see cref="T:System.Net.Security.ProtectionLevel" /> 値の 1 つ。</param>
      <param name="allowedImpersonationLevel" vsli:raw="One of the &lt;see cref=&quot;T:System.Security.Principal.TokenImpersonationLevel&quot; /&gt; values, indicating how the server can use the client's credentials to access resources.">サーバーがクライアントの資格情報を使用してリソースにアクセスする方法を示す <see cref="T:System.Security.Principal.TokenImpersonationLevel" /> 値の 1 つ。</param>
      <param name="asyncCallback" vsli:raw="An &lt;see cref=&quot;T:System.AsyncCallback&quot; /&gt; delegate that references the method to invoke when the authentication is complete.">認証完了時に呼び出すメソッドを参照する <see cref="T:System.AsyncCallback" /> デリゲート。</param>
      <param name="asyncState" vsli:raw="A user-defined object containing information about the write operation. This object is passed to the &lt;paramref name=&quot;asyncCallback&quot; /&gt; delegate when the operation completes.">書き込み操作に関する情報を格納するユーザー定義のオブジェクト。 このオブジェクトは、操作の完了時に <paramref name="asyncCallback" /> デリゲートに渡されます。</param>
      <exception cref="T:System.ArgumentNullException" vsli:raw="&lt;paramref name=&quot;credential&quot; /&gt; is &lt;see langword=&quot;null&quot; /&gt;.  &#xA;  &#xA;-or-&#xA;  &#xA; &lt;paramref name=&quot;targetName&quot; /&gt; is &lt;see langword=&quot;null&quot; /&gt;.">
        <paramref name="credential" /> が <see langword="null" />です。  
  
- または - 
 <paramref name="targetName" /> が <see langword="null" />です。</exception>
      <exception cref="T:System.Security.Authentication.AuthenticationException" vsli:raw="The authentication failed. You can use this object to retry the authentication.">認証に失敗しました。 このオブジェクトを使用して、認証を再試行できます。</exception>
      <exception cref="T:System.Security.Authentication.InvalidCredentialException" vsli:raw="The authentication failed. You can use this object to retry the authentication.">認証に失敗しました。 このオブジェクトを使用して、認証を再試行できます。</exception>
      <exception cref="T:System.InvalidOperationException" vsli:raw="Authentication has already occurred.  &#xA;  &#xA;-or-&#xA;  &#xA; This stream was used previously to attempt authentication as the server. You cannot use the stream to retry authentication as the client.">認証が既に発生しました。  
  
- または -
  
 このストリームは、かつて、サーバーとして認証を行う目的で使用されていました。 ストリームを使用して、クライアントとして認証を再試行することはできません。</exception>
      <exception cref="T:System.ObjectDisposedException" vsli:raw="This object has been closed.">このオブジェクトは閉じられました。</exception>
      <returns vsli:raw="An &lt;see cref=&quot;T:System.IAsyncResult&quot; /&gt; object indicating the status of the asynchronous operation.">非同期操作の状態を示す <see cref="T:System.IAsyncResult" /> オブジェクト。</returns>
    </member>
    <member name="M:System.Net.Security.NegotiateStream.BeginAuthenticateAsClient(System.Net.NetworkCredential,System.String,System.AsyncCallback,System.Object)">
      <summary vsli:raw="Called by clients to begin an asynchronous operation to authenticate the client, and optionally the server, in a client-server connection. The authentication process uses the specified credentials. This method does not block.">クライアントによって呼び出され、クライアントとサーバー間の接続でクライアントと (オプションで) サーバーを認証する非同期操作を開始します。 認証プロセスでは、指定した資格情報を使用します。 このメソッドはブロックしません。</summary>
      <param name="credential" vsli:raw="The &lt;see cref=&quot;T:System.Net.NetworkCredential&quot; /&gt; that is used to establish the identity of the client.">クライアントの ID を確立するために使用される <see cref="T:System.Net.NetworkCredential" />。</param>
      <param name="targetName" vsli:raw="The Service Principal Name (SPN) that uniquely identifies the server to authenticate.">認証するサーバーを一意に識別するサービス プリンシパル名 (SPN)。</param>
      <param name="asyncCallback" vsli:raw="An &lt;see cref=&quot;T:System.AsyncCallback&quot; /&gt; delegate that references the method to invoke when the authentication is complete.">認証完了時に呼び出すメソッドを参照する <see cref="T:System.AsyncCallback" /> デリゲート。</param>
      <param name="asyncState" vsli:raw="A user-defined object containing information about the write operation. This object is passed to the &lt;paramref name=&quot;asyncCallback&quot; /&gt; delegate when the operation completes.">書き込み操作に関する情報を格納するユーザー定義のオブジェクト。 このオブジェクトは、操作の完了時に <paramref name="asyncCallback" /> デリゲートに渡されます。</param>
      <exception cref="T:System.ArgumentNullException" vsli:raw="&lt;paramref name=&quot;credential&quot; /&gt; is &lt;see langword=&quot;null&quot; /&gt;.  &#xA;  &#xA;-or-&#xA;  &#xA; &lt;paramref name=&quot;targetName&quot; /&gt; is &lt;see langword=&quot;null&quot; /&gt;.">
        <paramref name="credential" /> が <see langword="null" />です。  
  
- または - 
 <paramref name="targetName" /> が <see langword="null" />です。</exception>
      <exception cref="T:System.Security.Authentication.AuthenticationException" vsli:raw="The authentication failed. You can use this object to retry the authentication.">認証に失敗しました。 このオブジェクトを使用して、認証を再試行できます。</exception>
      <exception cref="T:System.Security.Authentication.InvalidCredentialException" vsli:raw="The authentication failed. You can use this object to retry the authentication.">認証に失敗しました。 このオブジェクトを使用して、認証を再試行できます。</exception>
      <exception cref="T:System.ObjectDisposedException" vsli:raw="This object has been closed.">このオブジェクトは閉じられました。</exception>
      <exception cref="T:System.InvalidOperationException" vsli:raw="Authentication has already occurred.  &#xA;  &#xA;-or-&#xA;  &#xA; This stream was used previously to attempt authentication as the server. You cannot use the stream to retry authentication as the client.">認証が既に発生しました。  
  
- または -
  
 このストリームは、かつて、サーバーとして認証を行う目的で使用されていました。 ストリームを使用して、クライアントとして認証を再試行することはできません。</exception>
      <returns vsli:raw="An &lt;see cref=&quot;T:System.IAsyncResult&quot; /&gt; object indicating the status of the asynchronous operation.">非同期操作の状態を示す <see cref="T:System.IAsyncResult" /> オブジェクト。</returns>
    </member>
    <member name="M:System.Net.Security.NegotiateStream.BeginAuthenticateAsClient(System.Net.NetworkCredential,System.String,System.Net.Security.ProtectionLevel,System.Security.Principal.TokenImpersonationLevel,System.AsyncCallback,System.Object)">
      <summary vsli:raw="Called by clients to begin an asynchronous operation to authenticate the client, and optionally the server, in a client-server connection. The authentication process uses the specified credentials and authentication options. This method does not block.">クライアントによって呼び出され、クライアントとサーバー間の接続でクライアントと (オプションで) サーバーを認証する非同期操作を開始します。 認証プロセスでは、指定した資格情報と認証オプションを使用します。 このメソッドはブロックしません。</summary>
      <param name="credential" vsli:raw="The &lt;see cref=&quot;T:System.Net.NetworkCredential&quot; /&gt; that is used to establish the identity of the client.">クライアントの ID を確立するために使用される <see cref="T:System.Net.NetworkCredential" />。</param>
      <param name="targetName" vsli:raw="The Service Principal Name (SPN) that uniquely identifies the server to authenticate.">認証するサーバーを一意に識別するサービス プリンシパル名 (SPN)。</param>
      <param name="requiredProtectionLevel" vsli:raw="One of the &lt;see cref=&quot;T:System.Net.Security.ProtectionLevel&quot; /&gt; values, indicating the security services for the stream.">ストリームのセキュリティ サービスを示す <see cref="T:System.Net.Security.ProtectionLevel" /> 値の 1 つ。</param>
      <param name="allowedImpersonationLevel" vsli:raw="One of the &lt;see cref=&quot;T:System.Security.Principal.TokenImpersonationLevel&quot; /&gt; values, indicating how the server can use the client's credentials to access resources.">サーバーがクライアントの資格情報を使用してリソースにアクセスする方法を示す <see cref="T:System.Security.Principal.TokenImpersonationLevel" /> 値の 1 つ。</param>
      <param name="asyncCallback" vsli:raw="An &lt;see cref=&quot;T:System.AsyncCallback&quot; /&gt; delegate that references the method to invoke when the authentication is complete.">認証完了時に呼び出すメソッドを参照する <see cref="T:System.AsyncCallback" /> デリゲート。</param>
      <param name="asyncState" vsli:raw="A user-defined object containing information about the write operation. This object is passed to the &lt;paramref name=&quot;asyncCallback&quot; /&gt; delegate when the operation completes.">書き込み操作に関する情報を格納するユーザー定義のオブジェクト。 このオブジェクトは、操作の完了時に <paramref name="asyncCallback" /> デリゲートに渡されます。</param>
      <exception cref="T:System.ArgumentNullException" vsli:raw="&lt;paramref name=&quot;credential&quot; /&gt; is &lt;see langword=&quot;null&quot; /&gt;.  &#xA;  &#xA;-or-&#xA;  &#xA; &lt;paramref name=&quot;targetName&quot; /&gt; is &lt;see langword=&quot;null&quot; /&gt;.">
        <paramref name="credential" /> が <see langword="null" />です。  
  
- または - 
 <paramref name="targetName" /> が <see langword="null" />です。</exception>
      <exception cref="T:System.Security.Authentication.AuthenticationException" vsli:raw="The authentication failed. You can use this object to retry the authentication.">認証に失敗しました。 このオブジェクトを使用して、認証を再試行できます。</exception>
      <exception cref="T:System.Security.Authentication.InvalidCredentialException" vsli:raw="The authentication failed. You can use this object to retry the authentication.">認証に失敗しました。 このオブジェクトを使用して、認証を再試行できます。</exception>
      <exception cref="T:System.ObjectDisposedException" vsli:raw="This object has been closed.">このオブジェクトは閉じられました。</exception>
      <exception cref="T:System.InvalidOperationException" vsli:raw="Authentication has already occurred.  &#xA;  &#xA;-or-&#xA;  &#xA; This stream was used previously to attempt authentication as the server. You cannot use the stream to retry authentication as the client.">認証が既に発生しました。  
  
- または -
  
 このストリームは、かつて、サーバーとして認証を行う目的で使用されていました。 ストリームを使用して、クライアントとして認証を再試行することはできません。</exception>
      <returns vsli:raw="An &lt;see cref=&quot;T:System.IAsyncResult&quot; /&gt; object indicating the status of the asynchronous operation.">非同期操作の状態を示す <see cref="T:System.IAsyncResult" /> オブジェクト。</returns>
    </member>
    <member name="M:System.Net.Security.NegotiateStream.BeginAuthenticateAsServer(System.AsyncCallback,System.Object)">
      <summary vsli:raw="Called by servers to begin an asynchronous operation to authenticate the client, and optionally the server, in a client-server connection. This method does not block.">サーバーによって呼び出され、クライアントとサーバー間の接続でクライアントと (オプションで) サーバーを認証する非同期操作を開始します。 このメソッドはブロックしません。</summary>
      <param name="asyncCallback" vsli:raw="An &lt;see cref=&quot;T:System.AsyncCallback&quot; /&gt; delegate that references the method to invoke when the authentication is complete.">認証完了時に呼び出すメソッドを参照する <see cref="T:System.AsyncCallback" /> デリゲート。</param>
      <param name="asyncState" vsli:raw="A user-defined object containing information about the operation. This object is passed to the &lt;paramref name=&quot;asyncCallback&quot; /&gt; delegate when the operation completes.">操作に関する情報を格納するユーザー定義のオブジェクト。 このオブジェクトは、操作の完了時に <paramref name="asyncCallback" /> デリゲートに渡されます。</param>
      <exception cref="T:System.Security.Authentication.AuthenticationException" vsli:raw="The authentication failed. You can use this object to retry the authentication.">認証に失敗しました。 このオブジェクトを使用して、認証を再試行できます。</exception>
      <exception cref="T:System.Security.Authentication.InvalidCredentialException" vsli:raw="The authentication failed. You can use this object to retry the authentication.">認証に失敗しました。 このオブジェクトを使用して、認証を再試行できます。</exception>
      <exception cref="T:System.ObjectDisposedException" vsli:raw="This object has been closed.">このオブジェクトは閉じられました。</exception>
      <exception cref="T:System.NotSupportedException" vsli:raw="Windows 95 and Windows 98 are not supported.">Windows 95 と Windows 98 はサポートされていません。</exception>
      <returns vsli:raw="An &lt;see cref=&quot;T:System.IAsyncResult&quot; /&gt; object indicating the status of the asynchronous operation.">非同期操作の状態を示す <see cref="T:System.IAsyncResult" /> オブジェクト。</returns>
    </member>
    <member name="M:System.Net.Security.NegotiateStream.BeginAuthenticateAsServer(System.Net.NetworkCredential,System.Net.Security.ProtectionLevel,System.Security.Principal.TokenImpersonationLevel,System.AsyncCallback,System.Object)">
      <summary vsli:raw="Called by servers to begin an asynchronous operation to authenticate the client, and optionally the server, in a client-server connection. The authentication process uses the specified server credentials and authentication options. This method does not block.">サーバーによって呼び出され、クライアントとサーバー間の接続でクライアントと (オプションで) サーバーを認証する非同期操作を開始します。 認証プロセスでは、指定したサーバーの資格情報と認証オプションを使用します。 このメソッドはブロックしません。</summary>
      <param name="credential" vsli:raw="The &lt;see cref=&quot;T:System.Net.NetworkCredential&quot; /&gt; that is used to establish the identity of the client.">クライアントの ID を確立するために使用される <see cref="T:System.Net.NetworkCredential" />。</param>
      <param name="requiredProtectionLevel" vsli:raw="One of the &lt;see cref=&quot;T:System.Net.Security.ProtectionLevel&quot; /&gt; values, indicating the security services for the stream.">ストリームのセキュリティ サービスを示す <see cref="T:System.Net.Security.ProtectionLevel" /> 値の 1 つ。</param>
      <param name="requiredImpersonationLevel" vsli:raw="One of the &lt;see cref=&quot;T:System.Security.Principal.TokenImpersonationLevel&quot; /&gt; values, indicating how the server can use the client's credentials to access resources.">サーバーがクライアントの資格情報を使用してリソースにアクセスする方法を示す <see cref="T:System.Security.Principal.TokenImpersonationLevel" /> 値の 1 つ。</param>
      <param name="asyncCallback" vsli:raw="An &lt;see cref=&quot;T:System.AsyncCallback&quot; /&gt; delegate that references the method to invoke when the authentication is complete.">認証完了時に呼び出すメソッドを参照する <see cref="T:System.AsyncCallback" /> デリゲート。</param>
      <param name="asyncState" vsli:raw="A user-defined object containing information about the operation. This object is passed to the &lt;paramref name=&quot;asyncCallback&quot; /&gt; delegate when the operation completes.">操作に関する情報を格納するユーザー定義のオブジェクト。 このオブジェクトは、操作の完了時に <paramref name="asyncCallback" /> デリゲートに渡されます。</param>
      <exception cref="T:System.ArgumentNullException" vsli:raw="&lt;paramref name=&quot;credential&quot; /&gt; is &lt;see langword=&quot;null&quot; /&gt;.">
        <paramref name="credential" /> が <see langword="null" />です。</exception>
      <exception cref="T:System.ArgumentOutOfRangeException" vsli:raw="&lt;paramref name=&quot;requiredImpersonationLevel&quot; /&gt; must be &lt;see cref=&quot;F:System.Security.Principal.TokenImpersonationLevel.Identification&quot; /&gt;, &lt;see cref=&quot;F:System.Security.Principal.TokenImpersonationLevel.Impersonation&quot; /&gt;, or &lt;see cref=&quot;F:System.Security.Principal.TokenImpersonationLevel.Delegation&quot; /&gt;,">
        <paramref name="requiredImpersonationLevel" /> は、<see cref="F:System.Security.Principal.TokenImpersonationLevel.Identification" />、<see cref="F:System.Security.Principal.TokenImpersonationLevel.Impersonation" />、または <see cref="F:System.Security.Principal.TokenImpersonationLevel.Delegation" /> である必要があります。</exception>
      <exception cref="T:System.Security.Authentication.AuthenticationException" vsli:raw="The authentication failed. You can use this object to retry the authentication.">認証に失敗しました。 このオブジェクトを使用して、認証を再試行できます。</exception>
      <exception cref="T:System.Security.Authentication.InvalidCredentialException" vsli:raw="The authentication failed. You can use this object to retry the authentication.">認証に失敗しました。 このオブジェクトを使用して、認証を再試行できます。</exception>
      <exception cref="T:System.ObjectDisposedException" vsli:raw="This object has been closed.">このオブジェクトは閉じられました。</exception>
      <exception cref="T:System.InvalidOperationException" vsli:raw="Authentication has already occurred.  &#xA;  &#xA;-or-&#xA;  &#xA; This stream was used previously to attempt authentication as the client. You cannot use the stream to retry authentication as the server.">認証が既に発生しました。  
  
- または -
  
 このストリームは、かつて、クライアントとして認証を行う目的で使用されていました。 このストリームを使用して、サーバーとして認証を再試行することはできません。</exception>
      <exception cref="T:System.NotSupportedException" vsli:raw="Windows 95 and Windows 98 are not supported.">Windows 95 と Windows 98 はサポートされていません。</exception>
      <returns vsli:raw="An &lt;see cref=&quot;T:System.IAsyncResult&quot; /&gt; object indicating the status of the asynchronous operation.">非同期操作の状態を示す <see cref="T:System.IAsyncResult" /> オブジェクト。</returns>
    </member>
    <member name="M:System.Net.Security.NegotiateStream.BeginAuthenticateAsServer(System.Net.NetworkCredential,System.Security.Authentication.ExtendedProtection.ExtendedProtectionPolicy,System.Net.Security.ProtectionLevel,System.Security.Principal.TokenImpersonationLevel,System.AsyncCallback,System.Object)">
      <summary vsli:raw="Called by servers to begin an asynchronous operation to authenticate the client, and optionally the server, in a client-server connection. The authentication process uses the specified server credentials, authentication options, and extended protection policy. This method does not block.">サーバーによって呼び出され、クライアントとサーバー間の接続でクライアントと (オプションで) サーバーを認証する非同期操作を開始します。 認証プロセスでは、指定したサーバーの資格情報、認証オプション、および拡張保護ポリシーが使用されます。 このメソッドはブロックしません。</summary>
      <param name="credential" vsli:raw="The &lt;see cref=&quot;T:System.Net.NetworkCredential&quot; /&gt; that is used to establish the identity of the client.">クライアントの ID を確立するために使用される <see cref="T:System.Net.NetworkCredential" />。</param>
      <param name="policy" vsli:raw="The &lt;see cref=&quot;T:System.Security.Authentication.ExtendedProtection.ExtendedProtectionPolicy&quot; /&gt; that is used for extended protection.">拡張保護に使用する <see cref="T:System.Security.Authentication.ExtendedProtection.ExtendedProtectionPolicy" />。</param>
      <param name="requiredProtectionLevel" vsli:raw="One of the &lt;see cref=&quot;T:System.Net.Security.ProtectionLevel&quot; /&gt; values, indicating the security services for the stream.">ストリームのセキュリティ サービスを示す <see cref="T:System.Net.Security.ProtectionLevel" /> 値の 1 つ。</param>
      <param name="requiredImpersonationLevel" vsli:raw="One of the &lt;see cref=&quot;T:System.Security.Principal.TokenImpersonationLevel&quot; /&gt; values, indicating how the server can use the client's credentials to access resources.">サーバーがクライアントの資格情報を使用してリソースにアクセスする方法を示す <see cref="T:System.Security.Principal.TokenImpersonationLevel" /> 値の 1 つ。</param>
      <param name="asyncCallback" vsli:raw="An &lt;see cref=&quot;T:System.AsyncCallback&quot; /&gt; delegate that references the method to invoke when the authentication is complete.">認証完了時に呼び出すメソッドを参照する <see cref="T:System.AsyncCallback" /> デリゲート。</param>
      <param name="asyncState" vsli:raw="A user-defined object containing information about the write operation. This object is passed to the &lt;paramref name=&quot;asyncCallback&quot; /&gt; delegate when the operation completes.">書き込み操作に関する情報を格納するユーザー定義のオブジェクト。 このオブジェクトは、操作の完了時に <paramref name="asyncCallback" /> デリゲートに渡されます。</param>
      <exception cref="T:System.ArgumentException" vsli:raw="The &lt;see cref=&quot;P:System.Security.Authentication.ExtendedProtection.ExtendedProtectionPolicy.CustomChannelBinding&quot; /&gt; and &lt;see cref=&quot;P:System.Security.Authentication.ExtendedProtection.ExtendedProtectionPolicy.CustomServiceNames&quot; /&gt; on the extended protection policy passed in the &lt;paramref name=&quot;policy&quot; /&gt; parameter are both &lt;see langword=&quot;null&quot; /&gt;.">
        <paramref name="policy" /> パラメーターで渡された拡張保護ポリシーの <see cref="P:System.Security.Authentication.ExtendedProtection.ExtendedProtectionPolicy.CustomChannelBinding" /> と <see cref="P:System.Security.Authentication.ExtendedProtection.ExtendedProtectionPolicy.CustomServiceNames" /> は、どちらも <see langword="null" /> です。</exception>
      <exception cref="T:System.ArgumentNullException" vsli:raw="&lt;paramref name=&quot;credential&quot; /&gt; is &lt;see langword=&quot;null&quot; /&gt;.">
        <paramref name="credential" /> が <see langword="null" />です。</exception>
      <exception cref="T:System.ArgumentOutOfRangeException" vsli:raw="&lt;paramref name=&quot;requiredImpersonationLevel&quot; /&gt; must be &lt;see cref=&quot;F:System.Security.Principal.TokenImpersonationLevel.Identification&quot; /&gt;, &lt;see cref=&quot;F:System.Security.Principal.TokenImpersonationLevel.Impersonation&quot; /&gt;, or &lt;see cref=&quot;F:System.Security.Principal.TokenImpersonationLevel.Delegation&quot; /&gt;,">
        <paramref name="requiredImpersonationLevel" /> は、<see cref="F:System.Security.Principal.TokenImpersonationLevel.Identification" />、<see cref="F:System.Security.Principal.TokenImpersonationLevel.Impersonation" />、または <see cref="F:System.Security.Principal.TokenImpersonationLevel.Delegation" /> である必要があります。</exception>
      <exception cref="T:System.Security.Authentication.AuthenticationException" vsli:raw="The authentication failed. You can use this object to retry the authentication.">認証に失敗しました。 このオブジェクトを使用して、認証を再試行できます。</exception>
      <exception cref="T:System.Security.Authentication.InvalidCredentialException" vsli:raw="The authentication failed. You can use this object to retry the authentication.">認証に失敗しました。 このオブジェクトを使用して、認証を再試行できます。</exception>
      <exception cref="T:System.InvalidOperationException" vsli:raw="Authentication has already occurred.  &#xA;  &#xA;-or-&#xA;  &#xA; This stream was used previously to attempt authentication as the client. You cannot use the stream to retry authentication as the server.">認証が既に発生しました。  
  
- または -
  
 このストリームは、かつて、クライアントとして認証を行う目的で使用されていました。 このストリームを使用して、サーバーとして認証を再試行することはできません。</exception>
      <exception cref="T:System.NotSupportedException" vsli:raw="Windows 95 and Windows 98 are not supported.">Windows 95 と Windows 98 はサポートされていません。</exception>
      <exception cref="T:System.ObjectDisposedException" vsli:raw="This object has been closed.">このオブジェクトは閉じられました。</exception>
      <exception cref="T:System.PlatformNotSupportedException" vsli:raw="The &lt;paramref name=&quot;policy&quot; /&gt; parameter was set to &lt;see cref=&quot;F:System.Security.Authentication.ExtendedProtection.PolicyEnforcement.Always&quot; /&gt; on a platform that does not support extended protection.">拡張保護をサポートしていないプラットフォームで、<paramref name="policy" /> パラメーターが <see cref="F:System.Security.Authentication.ExtendedProtection.PolicyEnforcement.Always" /> に設定されました。</exception>
      <returns vsli:raw="An &lt;see cref=&quot;T:System.IAsyncResult&quot; /&gt; object indicating the status of the asynchronous operation.">非同期操作の状態を示す <see cref="T:System.IAsyncResult" /> オブジェクト。</returns>
    </member>
    <member name="M:System.Net.Security.NegotiateStream.BeginAuthenticateAsServer(System.Security.Authentication.ExtendedProtection.ExtendedProtectionPolicy,System.AsyncCallback,System.Object)">
      <summary vsli:raw="Called by servers to begin an asynchronous operation to authenticate the client, and optionally the server, in a client-server connection. The authentication process uses the specified extended protection policy. This method does not block.">サーバーによって呼び出され、クライアントとサーバー間の接続でクライアントと (オプションで) サーバーを認証する非同期操作を開始します。 認証プロセスでは、指定した拡張保護ポリシーが使用されます。 このメソッドはブロックしません。</summary>
      <param name="policy" vsli:raw="The &lt;see cref=&quot;T:System.Security.Authentication.ExtendedProtection.ExtendedProtectionPolicy&quot; /&gt; that is used for extended protection.">拡張保護に使用する <see cref="T:System.Security.Authentication.ExtendedProtection.ExtendedProtectionPolicy" />。</param>
      <param name="asyncCallback" vsli:raw="An &lt;see cref=&quot;T:System.AsyncCallback&quot; /&gt; delegate that references the method to invoke when the authentication is complete.">認証完了時に呼び出すメソッドを参照する <see cref="T:System.AsyncCallback" /> デリゲート。</param>
      <param name="asyncState" vsli:raw="A user-defined object containing information about the write operation. This object is passed to the &lt;paramref name=&quot;asyncCallback&quot; /&gt; delegate when the operation completes.">書き込み操作に関する情報を格納するユーザー定義のオブジェクト。 このオブジェクトは、操作の完了時に <paramref name="asyncCallback" /> デリゲートに渡されます。</param>
      <exception cref="T:System.ArgumentException" vsli:raw="The &lt;see cref=&quot;P:System.Security.Authentication.ExtendedProtection.ExtendedProtectionPolicy.CustomChannelBinding&quot; /&gt; and &lt;see cref=&quot;P:System.Security.Authentication.ExtendedProtection.ExtendedProtectionPolicy.CustomServiceNames&quot; /&gt; on the extended protection policy passed in the &lt;paramref name=&quot;policy&quot; /&gt; parameter are both &lt;see langword=&quot;null&quot; /&gt;.">
        <paramref name="policy" /> パラメーターで渡された拡張保護ポリシーの <see cref="P:System.Security.Authentication.ExtendedProtection.ExtendedProtectionPolicy.CustomChannelBinding" /> と <see cref="P:System.Security.Authentication.ExtendedProtection.ExtendedProtectionPolicy.CustomServiceNames" /> は、どちらも <see langword="null" /> です。</exception>
      <exception cref="T:System.Security.Authentication.AuthenticationException" vsli:raw="The authentication failed. You can use this object to retry the authentication.">認証に失敗しました。 このオブジェクトを使用して、認証を再試行できます。</exception>
      <exception cref="T:System.Security.Authentication.InvalidCredentialException" vsli:raw="The authentication failed. You can use this object to retry the authentication.">認証に失敗しました。 このオブジェクトを使用して、認証を再試行できます。</exception>
      <exception cref="T:System.NotSupportedException" vsli:raw="Windows 95 and Windows 98 are not supported.">Windows 95 と Windows 98 はサポートされていません。</exception>
      <exception cref="T:System.ObjectDisposedException" vsli:raw="This object has been closed.">このオブジェクトは閉じられました。</exception>
      <exception cref="T:System.PlatformNotSupportedException" vsli:raw="The &lt;paramref name=&quot;policy&quot; /&gt; parameter was set to &lt;see cref=&quot;F:System.Security.Authentication.ExtendedProtection.PolicyEnforcement.Always&quot; /&gt; on a platform that does not support extended protection.">拡張保護をサポートしていないプラットフォームで、<paramref name="policy" /> パラメーターが <see cref="F:System.Security.Authentication.ExtendedProtection.PolicyEnforcement.Always" /> に設定されました。</exception>
      <returns vsli:raw="An &lt;see cref=&quot;T:System.IAsyncResult&quot; /&gt; object indicating the status of the asynchronous operation.">非同期操作の状態を示す <see cref="T:System.IAsyncResult" /> オブジェクト。</returns>
    </member>
    <member name="M:System.Net.Security.NegotiateStream.BeginRead(System.Byte[],System.Int32,System.Int32,System.AsyncCallback,System.Object)">
      <summary vsli:raw="Begins an asynchronous read operation that reads data from the stream and stores it in the specified array.">ストリームからデータを読み取り、指定した配列に格納する非同期読み取り操作を開始します。</summary>
      <param name="buffer" vsli:raw="A &lt;see cref=&quot;T:System.Byte&quot; /&gt; array that receives the bytes read from the stream.">ストリームから読み取ったバイトを受け取る <see cref="T:System.Byte" /> 配列。</param>
      <param name="offset" vsli:raw="The zero-based location in &lt;paramref name=&quot;buffer&quot; /&gt; at which to begin storing the data read from this stream.">このストリームから読み取ったデータの格納を開始する位置を示す、<paramref name="buffer" /> 内のインデックス番号が 0 から始まる位置。</param>
      <param name="count" vsli:raw="The maximum number of bytes to read from the stream.">ストリームから読み取る最大バイト数。</param>
      <param name="asyncCallback" vsli:raw="An &lt;see cref=&quot;T:System.AsyncCallback&quot; /&gt; delegate that references the method to invoke when the read operation is complete.">読み取り操作の完了時に呼び出すメソッドを参照する <see cref="T:System.AsyncCallback" /> デリゲート。</param>
      <param name="asyncState" vsli:raw="A user-defined object containing information about the read operation. This object is passed to the &lt;paramref name=&quot;asyncCallback&quot; /&gt; delegate when the operation completes.">読み取り操作に関する情報を格納するユーザー定義のオブジェクト。 このオブジェクトは、操作の完了時に <paramref name="asyncCallback" /> デリゲートに渡されます。</param>
      <exception cref="T:System.ArgumentNullException" vsli:raw="&lt;paramref name=&quot;buffer&quot; /&gt; is &lt;see langword=&quot;null&quot; /&gt;.">
        <paramref name="buffer" /> が <see langword="null" />です。</exception>
      <exception cref="T:System.ArgumentException" vsli:raw="&lt;paramref name=&quot;offset&quot; /&gt; is less than 0.  &#xA;  &#xA;-or-&#xA;  &#xA; &lt;paramref name=&quot;offset&quot; /&gt; is greater than the length of &lt;paramref name=&quot;buffer&quot; /&gt;.  &#xA;  &#xA;-or-&#xA;  &#xA; &lt;paramref name=&quot;offset&quot; /&gt; plus &lt;paramref name=&quot;count&quot; /&gt; is greater than the length of &lt;paramref name=&quot;buffer&quot; /&gt;.">
        <paramref name="offset" /> が 0 未満です。  
  
- または - 
 <paramref name="offset" /> が <paramref name="buffer" /> の長さを超えています。  
  
- または - 
 <paramref name="offset" /> に <paramref name="count" /> を加算した値が、<paramref name="buffer" /> の長さを超えています。</exception>
      <exception cref="T:System.IO.IOException" vsli:raw="The read operation failed.  &#xA;  &#xA;-or-&#xA;  &#xA; Encryption is in use, but the data could not be decrypted.">読み取り操作に失敗しました。  
  
- または -
  
 暗号化が使用されていますが、データを復号化できませんでした。</exception>
      <exception cref="T:System.NotSupportedException" vsli:raw="There is already a read operation in progress.">既に実行中の読み取り操作が存在します。</exception>
      <exception cref="T:System.ObjectDisposedException" vsli:raw="This object has been closed.">このオブジェクトは閉じられました。</exception>
      <exception cref="T:System.InvalidOperationException" vsli:raw="Authentication has not occurred.">認証が行われていません。</exception>
      <returns vsli:raw="An &lt;see cref=&quot;T:System.IAsyncResult&quot; /&gt; object indicating the status of the asynchronous operation.">非同期操作の状態を示す <see cref="T:System.IAsyncResult" /> オブジェクト。</returns>
    </member>
    <member name="M:System.Net.Security.NegotiateStream.BeginWrite(System.Byte[],System.Int32,System.Int32,System.AsyncCallback,System.Object)">
      <summary vsli:raw="Begins an asynchronous write operation that writes &lt;see cref=&quot;T:System.Byte&quot; /&gt;s from the specified buffer to the stream.">指定したバッファーからストリームに <see cref="T:System.Byte" /> を書き込む非同期書き込み操作を開始します。</summary>
      <param name="buffer" vsli:raw="A &lt;see cref=&quot;T:System.Byte&quot; /&gt; array that supplies the bytes to be written to the stream.">ストリームに書き込むバイトを提供する <see cref="T:System.Byte" /> 配列。</param>
      <param name="offset" vsli:raw="The zero-based location in &lt;paramref name=&quot;buffer&quot; /&gt; at which to begin reading bytes to be written to the stream.">ストリームに書き込むバイトの読み取りを開始する位置を示す、<paramref name="buffer" /> 内のインデックス番号が 0 から始まる位置。</param>
      <param name="count" vsli:raw="An &lt;see cref=&quot;T:System.Int32&quot; /&gt; value that specifies the number of bytes to read from &lt;paramref name=&quot;buffer&quot; /&gt;.">
        <paramref name="buffer" /> から読み取るバイト数を指定する <see cref="T:System.Int32" /> 値。</param>
      <param name="asyncCallback" vsli:raw="An &lt;see cref=&quot;T:System.AsyncCallback&quot; /&gt; delegate that references the method to invoke when the write operation is complete.">書き込み操作の完了時に呼び出すメソッドを参照する <see cref="T:System.AsyncCallback" /> デリゲート。</param>
      <param name="asyncState" vsli:raw="A user-defined object containing information about the write operation. This object is passed to the &lt;paramref name=&quot;asyncCallback&quot; /&gt; delegate when the operation completes.">書き込み操作に関する情報を格納するユーザー定義のオブジェクト。 このオブジェクトは、操作の完了時に <paramref name="asyncCallback" /> デリゲートに渡されます。</param>
      <exception cref="T:System.ArgumentNullException" vsli:raw="&lt;paramref name=&quot;buffer&quot; /&gt; is &lt;see langword=&quot;null&quot; /&gt;.">
        <paramref name="buffer" /> が <see langword="null" />です。</exception>
      <exception cref="T:System.ArgumentException" vsli:raw="&lt;paramref name=&quot;offset is less than 0&quot; /&gt;.  &#xA;  &#xA;-or-&#xA;  &#xA; &lt;paramref name=&quot;offset&quot; /&gt; is greater than the length of &lt;paramref name=&quot;buffer&quot; /&gt;.  &#xA;  &#xA;-or-&#xA;  &#xA; &lt;paramref name=&quot;offset&quot; /&gt; plus count is greater than the length of &lt;paramref name=&quot;buffer&quot; /&gt;.">
        <paramref name="offset is less than 0" />。  
  
- または - 
 <paramref name="offset" /> が <paramref name="buffer" /> の長さを超えています。  
  
- または - 
 <paramref name="offset" /> に count を加算した値が、<paramref name="buffer" /> の長さを超えています。</exception>
      <exception cref="T:System.IO.IOException" vsli:raw="The write operation failed.  &#xA;  &#xA;-or-&#xA;  &#xA; Encryption is in use, but the data could not be encrypted.">書き込み操作に失敗しました。  
  
- または -
  
 暗号化が使用されていますが、データを暗号化できませんでした。</exception>
      <exception cref="T:System.NotSupportedException" vsli:raw="There is already a write operation in progress.">既に実行中の書き込み操作が存在します。</exception>
      <exception cref="T:System.ObjectDisposedException" vsli:raw="This object has been closed.">このオブジェクトは閉じられました。</exception>
      <exception cref="T:System.InvalidOperationException" vsli:raw="Authentication has not occurred.">認証が行われていません。</exception>
      <returns vsli:raw="An &lt;see cref=&quot;T:System.IAsyncResult&quot; /&gt; object indicating the status of the asynchronous operation.">非同期操作の状態を示す <see cref="T:System.IAsyncResult" /> オブジェクト。</returns>
    </member>
    <member name="M:System.Net.Security.NegotiateStream.Dispose(System.Boolean)">
      <summary vsli:raw="Releases the unmanaged resources used by the &lt;see cref=&quot;T:System.Net.Security.NegotiateStream&quot; /&gt; and optionally releases the managed resources.">
        <see cref="T:System.Net.Security.NegotiateStream" /> によって使用されているアンマネージド リソースを解放し、オプションでマネージド リソースも解放します。</summary>
      <param name="disposing" vsli:raw="&lt;see langword=&quot;true&quot; /&gt; to release both managed and unmanaged resources; &lt;see langword=&quot;false&quot; /&gt; to release only unmanaged resources.">マネージド リソースとアンマネージド リソースの両方を解放する場合は <see langword="true" />。アンマネージド リソースだけを解放する場合は <see langword="false" />。</param>
    </member>
    <member name="M:System.Net.Security.NegotiateStream.DisposeAsync">
      <summary vsli:raw="Asynchronously releases the unmanaged and managed resources used by the &lt;see cref=&quot;T:System.Net.Security.NegotiateStream&quot; /&gt;.">
        <see cref="T:System.Net.Security.NegotiateStream" /> によって使用されているアンマネージドまたはマネージド リソースを非同期に解放します。</summary>
      <returns vsli:raw="A task that represents the asynchronous dispose operation.">非同期の破棄操作を表すタスク。</returns>
    </member>
    <member name="M:System.Net.Security.NegotiateStream.EndAuthenticateAsClient(System.IAsyncResult)">
      <summary vsli:raw="Ends a pending asynchronous client authentication operation that was started with a call to &lt;see cref=&quot;Overload:System.Net.Security.NegotiateStream.BeginAuthenticateAsClient&quot; /&gt;.">
        <see cref="Overload:System.Net.Security.NegotiateStream.BeginAuthenticateAsClient" /> の呼び出しで開始した保留中の非同期のクライアント認証操作を終了します。</summary>
      <param name="asyncResult" vsli:raw="An &lt;see cref=&quot;T:System.IAsyncResult&quot; /&gt; instance returned by a call to &lt;see cref=&quot;Overload:System.Net.Security.NegotiateStream.BeginAuthenticateAsClient&quot; /&gt;.">
        <see cref="Overload:System.Net.Security.NegotiateStream.BeginAuthenticateAsClient" /> の呼び出しによって返される <see cref="T:System.IAsyncResult" /> インスタンス。</param>
      <exception cref="T:System.ArgumentNullException" vsli:raw="&lt;paramref name=&quot;asyncResult&quot; /&gt; is &lt;see langword=&quot;null&quot; /&gt;.">
        <paramref name="asyncResult" /> が <see langword="null" />です。</exception>
      <exception cref="T:System.ArgumentException" vsli:raw="&lt;paramref name=&quot;asyncResult&quot; /&gt; was not created by a call to &lt;see cref=&quot;Overload:System.Net.Security.NegotiateStream.BeginAuthenticateAsClient&quot; /&gt;.">
        <see cref="Overload:System.Net.Security.NegotiateStream.BeginAuthenticateAsClient" /> への呼び出しで <paramref name="asyncResult" /> が作成されませんでした。</exception>
      <exception cref="T:System.Security.Authentication.AuthenticationException" vsli:raw="The authentication failed. You can use this object to retry the authentication.">認証に失敗しました。 このオブジェクトを使用して、認証を再試行できます。</exception>
      <exception cref="T:System.Security.Authentication.InvalidCredentialException" vsli:raw="The authentication failed. You can use this object to retry the authentication.">認証に失敗しました。 このオブジェクトを使用して、認証を再試行できます。</exception>
      <exception cref="T:System.InvalidOperationException" vsli:raw="There is no pending client authentication to complete.">完了する保留中のクライアント認証がありません。</exception>
    </member>
    <member name="M:System.Net.Security.NegotiateStream.EndAuthenticateAsServer(System.IAsyncResult)">
      <summary vsli:raw="Ends a pending asynchronous client authentication operation that was started with a call to &lt;see cref=&quot;Overload:System.Net.Security.NegotiateStream.BeginAuthenticateAsServer&quot; /&gt;.">
        <see cref="Overload:System.Net.Security.NegotiateStream.BeginAuthenticateAsServer" /> の呼び出しで開始した保留中の非同期のクライアント認証操作を終了します。</summary>
      <param name="asyncResult" vsli:raw="An &lt;see cref=&quot;T:System.IAsyncResult&quot; /&gt; instance returned by a call to &lt;see cref=&quot;Overload:System.Net.Security.NegotiateStream.BeginAuthenticateAsServer&quot; /&gt;.">
        <see cref="Overload:System.Net.Security.NegotiateStream.BeginAuthenticateAsServer" /> の呼び出しによって返される <see cref="T:System.IAsyncResult" /> インスタンス。</param>
      <exception cref="T:System.ArgumentNullException" vsli:raw="&lt;paramref name=&quot;asyncResult&quot; /&gt; is &lt;see langword=&quot;null&quot; /&gt;.">
        <paramref name="asyncResult" /> が <see langword="null" />です。</exception>
      <exception cref="T:System.ArgumentException" vsli:raw="&lt;paramref name=&quot;asyncResult&quot; /&gt; was not created by a call to &lt;see cref=&quot;Overload:System.Net.Security.NegotiateStream.BeginAuthenticateAsServer&quot; /&gt;.">
        <see cref="Overload:System.Net.Security.NegotiateStream.BeginAuthenticateAsServer" /> への呼び出しで <paramref name="asyncResult" /> が作成されませんでした。</exception>
      <exception cref="T:System.Security.Authentication.AuthenticationException" vsli:raw="The authentication failed. You can use this object to retry the authentication.">認証に失敗しました。 このオブジェクトを使用して、認証を再試行できます。</exception>
      <exception cref="T:System.Security.Authentication.InvalidCredentialException" vsli:raw="The authentication failed. You can use this object to retry the authentication.">認証に失敗しました。 このオブジェクトを使用して、認証を再試行できます。</exception>
      <exception cref="T:System.InvalidOperationException" vsli:raw="There is no pending authentication to complete.">完了する保留中の認証がありません。</exception>
    </member>
    <member name="M:System.Net.Security.NegotiateStream.EndRead(System.IAsyncResult)">
      <summary vsli:raw="Ends an asynchronous read operation that was started with a call to &lt;see cref=&quot;M:System.Net.Security.NegotiateStream.BeginRead(System.Byte[],System.Int32,System.Int32,System.AsyncCallback,System.Object)&quot; /&gt;.">
        <see cref="M:System.Net.Security.NegotiateStream.BeginRead(System.Byte[],System.Int32,System.Int32,System.AsyncCallback,System.Object)" /> の呼び出しで開始された、非同期の読み取り操作を終了します。</summary>
      <param name="asyncResult" vsli:raw="An &lt;see cref=&quot;T:System.IAsyncResult&quot; /&gt; instance returned by a call to &lt;see cref=&quot;M:System.Net.Security.NegotiateStream.BeginRead(System.Byte[],System.Int32,System.Int32,System.AsyncCallback,System.Object)&quot; /&gt;.">
        <see cref="M:System.Net.Security.NegotiateStream.BeginRead(System.Byte[],System.Int32,System.Int32,System.AsyncCallback,System.Object)" /> の呼び出しによって返される <see cref="T:System.IAsyncResult" /> インスタンス。</param>
      <exception cref="T:System.ArgumentNullException" vsli:raw="&lt;paramref name=&quot;asyncResult&quot; /&gt; is &lt;see langword=&quot;null&quot; /&gt;.">
        <paramref name="asyncResult" /> が <see langword="null" />です。</exception>
      <exception cref="T:System.ArgumentException" vsli:raw="The asyncResult was not created by a call to &lt;see cref=&quot;M:System.Net.Security.NegotiateStream.BeginRead(System.Byte[],System.Int32,System.Int32,System.AsyncCallback,System.Object)&quot; /&gt;.">
        <see cref="M:System.Net.Security.NegotiateStream.BeginRead(System.Byte[],System.Int32,System.Int32,System.AsyncCallback,System.Object)" /> の呼び出しで asyncResult が作成されませんでした。</exception>
      <exception cref="T:System.InvalidOperationException" vsli:raw="There is no pending read operation to complete.&#xA;&#xA;-or-&#xA;&#xA;Authentication has not occurred.">完了する保留中の読み取り操作がありません。

- または -

認証が行われていません。</exception>
      <exception cref="T:System.IO.IOException" vsli:raw="The read operation failed.">読み取り操作に失敗しました。</exception>
      <returns vsli:raw="A &lt;see cref=&quot;T:System.Int32&quot; /&gt; value that specifies the number of bytes read from the underlying stream.">基になるストリームから読み取るバイト数を指定する <see cref="T:System.Int32" /> 値。</returns>
    </member>
    <member name="M:System.Net.Security.NegotiateStream.EndWrite(System.IAsyncResult)">
      <summary vsli:raw="Ends an asynchronous write operation that was started with a call to &lt;see cref=&quot;M:System.Net.Security.NegotiateStream.BeginWrite(System.Byte[],System.Int32,System.Int32,System.AsyncCallback,System.Object)&quot; /&gt;.">
        <see cref="M:System.Net.Security.NegotiateStream.BeginWrite(System.Byte[],System.Int32,System.Int32,System.AsyncCallback,System.Object)" /> の呼び出しで開始された、非同期の書き込み操作を終了します。</summary>
      <param name="asyncResult" vsli:raw="An &lt;see cref=&quot;T:System.IAsyncResult&quot; /&gt; instance returned by a call to &lt;see cref=&quot;M:System.Net.Security.NegotiateStream.BeginWrite(System.Byte[],System.Int32,System.Int32,System.AsyncCallback,System.Object)&quot; /&gt;.">
        <see cref="M:System.Net.Security.NegotiateStream.BeginWrite(System.Byte[],System.Int32,System.Int32,System.AsyncCallback,System.Object)" /> の呼び出しによって返される <see cref="T:System.IAsyncResult" /> インスタンス。</param>
      <exception cref="T:System.ArgumentNullException" vsli:raw="&lt;paramref name=&quot;asyncResult&quot; /&gt; is &lt;see langword=&quot;null&quot; /&gt;.">
        <paramref name="asyncResult" /> が <see langword="null" />です。</exception>
      <exception cref="T:System.ArgumentException" vsli:raw="The asyncResult was not created by a call to &lt;see cref=&quot;M:System.Net.Security.NegotiateStream.BeginWrite(System.Byte[],System.Int32,System.Int32,System.AsyncCallback,System.Object)&quot; /&gt;.">
        <see cref="M:System.Net.Security.NegotiateStream.BeginWrite(System.Byte[],System.Int32,System.Int32,System.AsyncCallback,System.Object)" /> の呼び出しで asyncResult が作成されませんでした。</exception>
      <exception cref="T:System.InvalidOperationException" vsli:raw="There is no pending write operation to complete.&#xA;&#xA;-or-&#xA;&#xA;Authentication has not occurred.">完了する保留中の書き込み操作がありません。

- または -

認証が行われていません。</exception>
      <exception cref="T:System.IO.IOException" vsli:raw="The write operation failed.">書き込み操作に失敗しました。</exception>
    </member>
    <member name="M:System.Net.Security.NegotiateStream.Flush">
      <summary vsli:raw="Causes any buffered data to be written to the underlying device.">バッファーに格納されたデータが基になるデバイスに書き込まれるようにします。</summary>
    </member>
    <member name="M:System.Net.Security.NegotiateStream.FlushAsync(System.Threading.CancellationToken)">
      <summary vsli:raw="Asynchronously writes any buffered data to the underlying device.">バッファー内のデータを基になるデバイスに非同期に書き込みます。</summary>
      <param name="cancellationToken" vsli:raw="The token to monitor for cancellation requests.">キャンセル要求を監視するためのトークン。</param>
      <returns vsli:raw="A task that represents the asynchronous flush operation.">非同期のフラッシュ操作を表すタスク。</returns>
    </member>
    <member name="M:System.Net.Security.NegotiateStream.Read(System.Byte[],System.Int32,System.Int32)">
      <summary vsli:raw="Reads data from this stream and stores it in the specified array.">このストリームからデータを読み取り、指定した配列に格納します。</summary>
      <param name="buffer" vsli:raw="A &lt;see cref=&quot;T:System.Byte&quot; /&gt; array that receives the bytes read from the stream.">ストリームから読み取ったバイトを受け取る <see cref="T:System.Byte" /> 配列。</param>
      <param name="offset" vsli:raw="A &lt;see cref=&quot;T:System.Int32&quot; /&gt; containing the zero-based location in &lt;paramref name=&quot;buffer&quot; /&gt; at which to begin storing the data read from this stream.">このストリームから読み取ったデータの格納を開始する位置を示す、<paramref name="buffer" /> 内のインデックス番号が 0 から始まる位置を格納する <see cref="T:System.Int32" />。</param>
      <param name="count" vsli:raw="A &lt;see cref=&quot;T:System.Int32&quot; /&gt; containing the maximum number of bytes to read from the stream.">ストリームから読み取る最大バイト数を格納する <see cref="T:System.Int32" />。</param>
      <exception cref="T:System.IO.IOException" vsli:raw="The read operation failed.">読み取り操作に失敗しました。</exception>
      <exception cref="T:System.InvalidOperationException" vsli:raw="Authentication has not occurred.">認証が行われていません。</exception>
      <exception cref="T:System.NotSupportedException" vsli:raw="A &lt;see cref=&quot;M:System.Net.Security.NegotiateStream.Read(System.Byte[],System.Int32,System.Int32)&quot; /&gt; operation is already in progress.">
        <see cref="M:System.Net.Security.NegotiateStream.Read(System.Byte[],System.Int32,System.Int32)" /> 操作は既に実行されています。</exception>
      <returns vsli:raw="An &lt;see cref=&quot;T:System.Int32&quot; /&gt; value that specifies the number of bytes read from the underlying stream. When there is no more data to be read, returns 0.">基になるストリームから読み取るバイト数を指定する <see cref="T:System.Int32" /> 値。 読み取るデータがこれ以上存在しない場合は 0 を返します。</returns>
    </member>
    <member name="M:System.Net.Security.NegotiateStream.ReadAsync(System.Byte[],System.Int32,System.Int32,System.Threading.CancellationToken)">
      <summary vsli:raw="Reads data asynchronously from this stream and stores it in the specified array.">このストリームからデータを非同期に読み取り、指定された配列に格納します。</summary>
      <param name="buffer" vsli:raw="A &lt;see cref=&quot;T:System.Byte&quot; /&gt; array that receives the bytes read from the stream.">ストリームから読み取ったバイトを受け取る <see cref="T:System.Byte" /> 配列。</param>
      <param name="offset" vsli:raw="A &lt;see cref=&quot;T:System.Int32&quot; /&gt; containing the zero-based location in &lt;paramref name=&quot;buffer&quot; /&gt; at which to begin storing the data read from this stream.">このストリームから読み取ったデータの格納を開始する位置を示す、<paramref name="buffer" /> 内のインデックス番号が 0 から始まる位置を格納する <see cref="T:System.Int32" />。</param>
      <param name="count" vsli:raw="A &lt;see cref=&quot;T:System.Int32&quot; /&gt; containing the maximum number of bytes to read from the stream.">ストリームから読み取る最大バイト数を格納する <see cref="T:System.Int32" />。</param>
      <param name="cancellationToken" vsli:raw="The token to monitor for cancellation requests.">キャンセル要求を監視するためのトークン。</param>
      <exception cref="T:System.IO.IOException" vsli:raw="The read operation failed.">読み取り操作に失敗しました。</exception>
      <exception cref="T:System.InvalidOperationException" vsli:raw="Authentication has not occurred.">認証が行われていません。</exception>
      <exception cref="T:System.NotSupportedException" vsli:raw="A &lt;see cref=&quot;M:System.Net.Security.NegotiateStream.Read(System.Byte[],System.Int32,System.Int32)&quot; /&gt; operation is already in progress.">
        <see cref="M:System.Net.Security.NegotiateStream.Read(System.Byte[],System.Int32,System.Int32)" /> 操作は既に実行されています。</exception>
      <returns vsli:raw="An &lt;see cref=&quot;T:System.Int32&quot; /&gt; value that specifies the number of bytes read from the underlying stream. When there is no more data to be read, returns 0.">基になるストリームから読み取るバイト数を指定する <see cref="T:System.Int32" /> 値。 読み取るデータがこれ以上存在しない場合は 0 を返します。</returns>
    </member>
    <member name="M:System.Net.Security.NegotiateStream.ReadAsync(System.Memory{System.Byte},System.Threading.CancellationToken)">
      <summary vsli:raw="Reads data asynchronously from the &lt;see cref=&quot;T:System.Net.Security.NegotiateStream&quot; /&gt; and stores it in a byte memory range as an asynchronous operation.">
        <see cref="T:System.Net.Security.NegotiateStream" /> からデータを非同期に読み取り、非同期操作としてバイト メモリ範囲に格納します。</summary>
      <param name="buffer" vsli:raw="The buffer to write the data to.">データを書き込むバッファー。</param>
      <param name="cancellationToken" vsli:raw="The token to monitor for cancellation requests.">キャンセル要求を監視するためのトークン。</param>
      <exception cref="T:System.IO.IOException" vsli:raw="The read operation failed.">読み取り操作に失敗しました。</exception>
      <exception cref="T:System.InvalidOperationException" vsli:raw="Authentication has not occurred.">認証が行われていません。</exception>
      <returns vsli:raw="A &lt;see cref=&quot;T:System.Threading.Tasks.ValueTask`1&quot; /&gt; that represents the asynchronous read operation. The value of its &lt;see cref=&quot;P:System.Threading.Tasks.ValueTask`1.Result&quot; /&gt; property contains the total number of bytes read into &lt;paramref name=&quot;buffer&quot; /&gt;.">非同期の読み取り操作を表すタスク <see cref="T:System.Threading.Tasks.ValueTask`1" />。 その <see cref="P:System.Threading.Tasks.ValueTask`1.Result" /> プロパティの値には、<paramref name="buffer" /> に読み取られたバイトの合計数が含まれます。</returns>
    </member>
    <member name="M:System.Net.Security.NegotiateStream.Seek(System.Int64,System.IO.SeekOrigin)">
      <summary vsli:raw="Throws &lt;see cref=&quot;T:System.NotSupportedException&quot; /&gt;.">
        <see cref="T:System.NotSupportedException" /> をスローします。</summary>
      <param name="offset" vsli:raw="This value is ignored.">この値は無視されます。</param>
      <param name="origin" vsli:raw="This value is ignored.">この値は無視されます。</param>
      <exception cref="T:System.NotSupportedException" vsli:raw="Seeking is not supported on &lt;see cref=&quot;T:System.Net.Security.NegotiateStream&quot; /&gt;.">シークは、<see cref="T:System.Net.Security.NegotiateStream" /> でサポートされていません。</exception>
      <returns vsli:raw="Always throws a &lt;see cref=&quot;T:System.NotSupportedException&quot; /&gt;.">常に <see cref="T:System.NotSupportedException" /> をスローします。</returns>
    </member>
    <member name="M:System.Net.Security.NegotiateStream.SetLength(System.Int64)">
      <summary vsli:raw="Sets the length of the underlying stream.">基になるストリームの長さを設定します。</summary>
      <param name="value" vsli:raw="An &lt;see cref=&quot;T:System.Int64&quot; /&gt; value that specifies the length of the stream.">ストリームの長さを指定する <see cref="T:System.Int64" /> 値。</param>
    </member>
    <member name="M:System.Net.Security.NegotiateStream.Write(System.Byte[],System.Int32,System.Int32)">
      <summary vsli:raw="Write the specified number of &lt;see cref=&quot;T:System.Byte&quot; /&gt;s to the underlying stream using the specified buffer and offset.">指定したバッファーとオフセットを使用して、基になるストリームに指定した <see cref="T:System.Byte" /> 数を書き込みます。</summary>
      <param name="buffer" vsli:raw="A &lt;see cref=&quot;T:System.Byte&quot; /&gt; array that supplies the bytes written to the stream.">ストリームに書き込むバイトを提供する <see cref="T:System.Byte" /> 配列。</param>
      <param name="offset" vsli:raw="An &lt;see cref=&quot;T:System.Int32&quot; /&gt; containing the zero-based location in &lt;paramref name=&quot;buffer&quot; /&gt; at which to begin reading bytes to be written to the stream.">ストリームに書き込むバイトの読み取りを開始する位置を示す、<paramref name="buffer" /> 内のインデックス番号が 0 から始まる位置を格納する <see cref="T:System.Int32" />。</param>
      <param name="count" vsli:raw="A &lt;see cref=&quot;T:System.Int32&quot; /&gt; containing the number of bytes to read from &lt;paramref name=&quot;buffer&quot; /&gt;.">
        <paramref name="buffer" /> から読み取るバイト数を格納する <see cref="T:System.Int32" />。</param>
      <exception cref="T:System.ArgumentNullException" vsli:raw="&lt;paramref name=&quot;buffer&quot; /&gt; is &lt;see langword=&quot;null&quot; /&gt;.">
        <paramref name="buffer" /> が <see langword="null" />です。</exception>
      <exception cref="T:System.ArgumentException" vsli:raw="&lt;paramref name=&quot;offset is less than 0&quot; /&gt;.  &#xA;  &#xA;-or-&#xA;  &#xA; &lt;paramref name=&quot;offset&quot; /&gt; is greater than the length of &lt;paramref name=&quot;buffer&quot; /&gt;.  &#xA;  &#xA;-or-&#xA;  &#xA; &lt;paramref name=&quot;offset&quot; /&gt; plus count is greater than the length of &lt;paramref name=&quot;buffer&quot; /&gt;.">
        <paramref name="offset is less than 0" />。  
  
- または - 
 <paramref name="offset" /> が <paramref name="buffer" /> の長さを超えています。  
  
- または - 
 <paramref name="offset" /> に count を加算した値が、<paramref name="buffer" /> の長さを超えています。</exception>
      <exception cref="T:System.IO.IOException" vsli:raw="The write operation failed.  &#xA;  &#xA;-or-&#xA;  &#xA; Encryption is in use, but the data could not be encrypted.">書き込み操作に失敗しました。  
  
- または -
  
 暗号化が使用されていますが、データを暗号化できませんでした。</exception>
      <exception cref="T:System.NotSupportedException" vsli:raw="There is already a write operation in progress.">既に実行中の書き込み操作が存在します。</exception>
      <exception cref="T:System.ObjectDisposedException" vsli:raw="This object has been closed.">このオブジェクトは閉じられました。</exception>
      <exception cref="T:System.InvalidOperationException" vsli:raw="Authentication has not occurred.">認証が行われていません。</exception>
    </member>
    <member name="M:System.Net.Security.NegotiateStream.WriteAsync(System.Byte[],System.Int32,System.Int32,System.Threading.CancellationToken)">
      <summary vsli:raw="Write asynchronously the specified number of &lt;see cref=&quot;T:System.Byte&quot; /&gt;s to the underlying stream.">指定された数の <see cref="T:System.Byte" /> を基になるストリームに非同期に書き込みます。</summary>
      <param name="buffer" vsli:raw="A &lt;see cref=&quot;T:System.Byte&quot; /&gt; array that supplies the bytes written to the stream.">ストリームに書き込むバイトを提供する <see cref="T:System.Byte" /> 配列。</param>
      <param name="offset" vsli:raw="An &lt;see cref=&quot;T:System.Int32&quot; /&gt; containing the zero-based location in &lt;paramref name=&quot;buffer&quot; /&gt; at which to begin reading bytes to be written to the stream.">ストリームに書き込むバイトの読み取りを開始する位置を示す、<paramref name="buffer" /> 内のインデックス番号が 0 から始まる位置を格納する <see cref="T:System.Int32" />。</param>
      <param name="count" vsli:raw="A &lt;see cref=&quot;T:System.Int32&quot; /&gt; containing the number of bytes to read from &lt;paramref name=&quot;buffer&quot; /&gt;.">
        <paramref name="buffer" /> から読み取るバイト数を格納する <see cref="T:System.Int32" />。</param>
      <param name="cancellationToken" vsli:raw="" />
    </member>
    <member name="M:System.Net.Security.NegotiateStream.WriteAsync(System.ReadOnlyMemory{System.Byte},System.Threading.CancellationToken)">
      <summary vsli:raw="Write asynchronously the specified number of &lt;see cref=&quot;T:System.Byte&quot; /&gt;s to the underlying stream.">指定された数の <see cref="T:System.Byte" /> を基になるストリームに非同期に書き込みます。</summary>
      <param name="buffer" vsli:raw="A region of memory that contains the data to write to the &lt;see cref=&quot;T:System.Net.Security.NegotiateStream&quot; /&gt;.">
        <see cref="T:System.Net.Security.NegotiateStream" /> に書き込むデータが含まれるメモリの領域。</param>
      <param name="cancellationToken" vsli:raw="The token to monitor for cancellation requests.">キャンセル要求を監視するためのトークン。</param>
      <exception cref="T:System.ObjectDisposedException" vsli:raw="This object has been closed.">このオブジェクトは閉じられました。</exception>
      <exception cref="T:System.InvalidOperationException" vsli:raw="Authentication has not occurred.">認証が行われていません。</exception>
    </member>
    <member name="P:System.Net.Security.NegotiateStream.CanRead">
      <summary vsli:raw="Gets a &lt;see cref=&quot;T:System.Boolean&quot; /&gt; value that indicates whether the underlying stream is readable.">基になるストリームが読み取り可能かどうかを示す <see cref="T:System.Boolean" /> 値を取得します。</summary>
      <returns vsli:raw="&lt;see langword=&quot;true&quot; /&gt; if authentication has occurred and the underlying stream is readable; otherwise, &lt;see langword=&quot;false&quot; /&gt;.">認証が行われており、基になるストリームが読み取り可能な場合は <see langword="true" />。それ以外の場合は <see langword="false" />。</returns>
    </member>
    <member name="P:System.Net.Security.NegotiateStream.CanSeek">
      <summary vsli:raw="Gets a &lt;see cref=&quot;T:System.Boolean&quot; /&gt; value that indicates whether the underlying stream is seekable.">基になるストリームがシークできるかどうかを示す <see cref="T:System.Boolean" /> 値を取得します。</summary>
      <returns vsli:raw="This property always returns &lt;see langword=&quot;false&quot; /&gt;.">このプロパティは常に <see langword="false" /> を返します。</returns>
    </member>
    <member name="P:System.Net.Security.NegotiateStream.CanTimeout">
      <summary vsli:raw="Gets a &lt;see cref=&quot;T:System.Boolean&quot; /&gt; value that indicates whether the underlying stream supports time-outs.">基になるストリームがタイムアウトをサポートしているかどうかを示す <see cref="T:System.Boolean" /> 値を取得します。</summary>
      <returns vsli:raw="&lt;see langword=&quot;true&quot; /&gt; if the underlying stream supports time-outs; otherwise, &lt;see langword=&quot;false&quot; /&gt;.">基になるストリームがタイムアウトをサポートしている場合は <see langword="true" />。それ以外の場合は <see langword="false" />。</returns>
    </member>
    <member name="P:System.Net.Security.NegotiateStream.CanWrite">
      <summary vsli:raw="Gets a &lt;see cref=&quot;T:System.Boolean&quot; /&gt; value that indicates whether the underlying stream is writable.">基になるストリームが書き込み可能かどうかを示す <see cref="T:System.Boolean" /> 値を取得します。</summary>
      <returns vsli:raw="&lt;see langword=&quot;true&quot; /&gt; if authentication has occurred and the underlying stream is writable; otherwise, &lt;see langword=&quot;false&quot; /&gt;.">認証が行われており、基になるストリームが書き込み可能な場合は <see langword="true" />。それ以外の場合は <see langword="false" />。</returns>
    </member>
    <member name="P:System.Net.Security.NegotiateStream.ImpersonationLevel">
      <summary vsli:raw="Gets a value that indicates how the server can use the client's credentials.">サーバーでクライアントの資格情報を使用する方法を示す値を取得します。</summary>
      <exception cref="T:System.InvalidOperationException" vsli:raw="Authentication failed or has not occurred.">認証に失敗したか、認証が行われていません。</exception>
      <returns vsli:raw="One of the &lt;see cref=&quot;T:System.Security.Principal.TokenImpersonationLevel&quot; /&gt; values.">
        <see cref="T:System.Security.Principal.TokenImpersonationLevel" /> 値のいずれか 1 つ。</returns>
    </member>
    <member name="P:System.Net.Security.NegotiateStream.IsAuthenticated">
      <summary vsli:raw="Gets a &lt;see cref=&quot;T:System.Boolean&quot; /&gt; value that indicates whether authentication was successful.">認証が成功したかどうかを示す <see cref="T:System.Boolean" /> 値を取得します。</summary>
      <returns vsli:raw="&lt;see langword=&quot;true&quot; /&gt; if successful authentication occurred; otherwise, &lt;see langword=&quot;false&quot; /&gt;.">認証が成功した場合は <see langword="true" />。それ以外の場合は <see langword="false" />。</returns>
    </member>
    <member name="P:System.Net.Security.NegotiateStream.IsEncrypted">
      <summary vsli:raw="Gets a &lt;see cref=&quot;T:System.Boolean&quot; /&gt; value that indicates whether this &lt;see cref=&quot;T:System.Net.Security.NegotiateStream&quot; /&gt; uses data encryption.">この <see cref="T:System.Net.Security.NegotiateStream" /> がデータの暗号化を使用するかどうかを示す <see cref="T:System.Boolean" /> 値を取得します。</summary>
      <returns vsli:raw="&lt;see langword=&quot;true&quot; /&gt; if data is encrypted before being transmitted over the network and decrypted when it reaches the remote endpoint; otherwise, &lt;see langword=&quot;false&quot; /&gt;.">ネットワーク上で送信する前にデータを暗号化し、データがリモート エンドポイントに到達したときに復号化する場合は <see langword="true" />。それ以外の場合は <see langword="false" />。</returns>
    </member>
    <member name="P:System.Net.Security.NegotiateStream.IsMutuallyAuthenticated">
      <summary vsli:raw="Gets a &lt;see cref=&quot;T:System.Boolean&quot; /&gt; value that indicates whether both the server and the client have been authenticated.">サーバーとクライアントの両方が認証されているかどうかを示す <see cref="T:System.Boolean" /> 値を取得します。</summary>
      <returns vsli:raw="&lt;see langword=&quot;true&quot; /&gt; if the server has been authenticated; otherwise, &lt;see langword=&quot;false&quot; /&gt;.">サーバーが認証されている場合は <see langword="true" />。それ以外の場合は <see langword="false" />。</returns>
    </member>
    <member name="P:System.Net.Security.NegotiateStream.IsServer">
      <summary vsli:raw="Gets a &lt;see cref=&quot;T:System.Boolean&quot; /&gt; value that indicates whether the local side of the connection used by this &lt;see cref=&quot;T:System.Net.Security.NegotiateStream&quot; /&gt; was authenticated as the server.">この <see cref="T:System.Net.Security.NegotiateStream" /> が使用する接続のローカル側がサーバーとして認証されたかどうかを示す <see cref="T:System.Boolean" /> 値を取得します。</summary>
      <returns vsli:raw="&lt;see langword=&quot;true&quot; /&gt; if the local endpoint was successfully authenticated as the server side of the authenticated connection; otherwise, &lt;see langword=&quot;false&quot; /&gt;.">ローカル エンドポイントが、認証される接続のサーバー側として正常に認証された場合は <see langword="true" />。それ以外の場合は <see langword="false" />。</returns>
    </member>
    <member name="P:System.Net.Security.NegotiateStream.IsSigned">
      <summary vsli:raw="Gets a &lt;see cref=&quot;T:System.Boolean&quot; /&gt; value that indicates whether the data sent using this stream is signed.">このストリームを使用して送信されるデータに署名するかどうかを示す <see cref="T:System.Boolean" /> 値を取得します。</summary>
      <returns vsli:raw="&lt;see langword=&quot;true&quot; /&gt; if the data is signed before being transmitted; otherwise, &lt;see langword=&quot;false&quot; /&gt;.">データの送信前に署名する場合は <see langword="true" />。それ以外の場合は <see langword="false" />。</returns>
    </member>
    <member name="P:System.Net.Security.NegotiateStream.Length">
      <summary vsli:raw="Gets the length of the underlying stream.">基になるストリームの長さを取得します。</summary>
      <exception cref="T:System.NotSupportedException" vsli:raw="Getting the value of this property is not supported when the underlying stream is a &lt;see cref=&quot;T:System.Net.Sockets.NetworkStream&quot; /&gt;.">基になるストリームが <see cref="T:System.Net.Sockets.NetworkStream" /> の場合、このプロパティの値の取得はサポートされていません。</exception>
      <returns vsli:raw="A &lt;see cref=&quot;T:System.Int64&quot; /&gt; that specifies the length of the underlying stream.">基になるストリームの長さを指定する <see cref="T:System.Int64" />。</returns>
    </member>
    <member name="P:System.Net.Security.NegotiateStream.Position">
      <summary vsli:raw="Gets or sets the current position in the underlying stream.">基になるストリーム内の現在位置を取得または設定します。</summary>
      <exception cref="T:System.NotSupportedException" vsli:raw="Setting this property is not supported.  &#xA;  &#xA;-or-&#xA;  &#xA; Getting the value of this property is not supported when the underlying stream is a &lt;see cref=&quot;T:System.Net.Sockets.NetworkStream&quot; /&gt;.">このプロパティの設定は、サポートされていません。  
  
- または - 
基になるストリームが <see cref="T:System.Net.Sockets.NetworkStream" /> の場合、このプロパティの値の取得はサポートされていません。</exception>
      <returns vsli:raw="A &lt;see cref=&quot;T:System.Int64&quot; /&gt; that specifies the current position in the underlying stream.">基になるストリーム内の現在の位置を指定する <see cref="T:System.Int64" />。</returns>
    </member>
    <member name="P:System.Net.Security.NegotiateStream.ReadTimeout">
      <summary vsli:raw="Gets or sets the amount of time a read operation blocks waiting for data.">読み取り操作がブロックしてデータを待機する時間を取得または設定します。</summary>
      <returns vsli:raw="A &lt;see cref=&quot;T:System.Int32&quot; /&gt; that specifies the amount of time that will elapse before a read operation fails.">読み取り操作が失敗するまでの経過時間を指定する <see cref="T:System.Int32" />。</returns>
    </member>
    <member name="P:System.Net.Security.NegotiateStream.RemoteIdentity">
      <summary vsli:raw="Gets information about the identity of the remote party sharing this authenticated stream.">この認証されたストリームを共有するリモート側の ID に関する情報を取得します。</summary>
      <exception cref="T:System.InvalidOperationException" vsli:raw="Authentication failed or has not occurred.">認証に失敗したか、認証が行われていません。</exception>
      <returns vsli:raw="An &lt;see cref=&quot;T:System.Security.Principal.IIdentity&quot; /&gt; object that describes the identity of the remote endpoint.">リモート エンドポイントの ID を示す <see cref="T:System.Security.Principal.IIdentity" /> オブジェクト。</returns>
    </member>
    <member name="P:System.Net.Security.NegotiateStream.WriteTimeout">
      <summary vsli:raw="Gets or sets the amount of time a write operation blocks waiting for data.">書き込み操作がブロックしてデータを待機する時間を取得または設定します。</summary>
      <returns vsli:raw="A &lt;see cref=&quot;T:System.Int32&quot; /&gt; that specifies the amount of time that will elapse before a write operation fails.">書き込み操作が失敗するまでの経過時間を指定する <see cref="T:System.Int32" />。</returns>
    </member>
    <member name="T:System.Net.Security.ProtectionLevel">
      <summary vsli:raw="Indicates the security services requested for an authenticated stream.">認証されたストリームに対して要求されるセキュリティ サービスを示します。</summary>
    </member>
    <member name="F:System.Net.Security.ProtectionLevel.EncryptAndSign">
      <summary vsli:raw="Encrypt and sign data to help ensure the confidentiality and integrity of transmitted data.">データの暗号化と署名を行い、送信データの機密性と整合性を強化します。</summary>
    </member>
    <member name="F:System.Net.Security.ProtectionLevel.None">
      <summary vsli:raw="Authentication only.">認証だけを行います。</summary>
    </member>
    <member name="F:System.Net.Security.ProtectionLevel.Sign">
      <summary vsli:raw="Sign data to help ensure the integrity of transmitted data.">データの署名を行い、送信データの整合性を強化します。</summary>
    </member>
    <member name="T:System.Net.Security.RemoteCertificateValidationCallback">
      <summary vsli:raw="Verifies the remote Secure Sockets Layer (SSL) certificate used for authentication.">認証に使用されるリモートの SSL (Secure Sockets Layer) 証明書を検証します。</summary>
      <param name="sender" vsli:raw="An object that contains state information for this validation.">この検証のステータス情報を格納するオブジェクト。</param>
      <param name="certificate" vsli:raw="The certificate used to authenticate the remote party.">リモート側の認証に使用される証明書。</param>
      <param name="chain" vsli:raw="The chain of certificate authorities associated with the remote certificate.">リモートの証明書に関連付けられた証明機関のチェーン。</param>
      <param name="sslPolicyErrors" vsli:raw="One or more errors associated with the remote certificate.">リモートの証明書に関連付けられた 1 つ以上のエラー。</param>
      <returns vsli:raw="A &lt;see cref=&quot;T:System.Boolean&quot; /&gt; value that determines whether the specified certificate is accepted for authentication.">指定した証明書が認証に使用できるかどうかを判断する <see cref="T:System.Boolean" /> 値。</returns>
    </member>
    <member name="T:System.Net.Security.ServerCertificateSelectionCallback">
      <summary vsli:raw="Selects the server Secure Sockets Layer (SSL) certificate.">サーバーの Secure Sockets Layer (SSL) 証明書を選択します。</summary>
      <param name="sender" vsli:raw="A &lt;see cref=&quot;T:System.Net.Security.SslStream&quot; /&gt; object.">
        <see cref="T:System.Net.Security.SslStream" /> オブジェクト。</param>
      <param name="hostName" vsli:raw="The host name requested by the client. If the client doesn't use the host_name TLS extension, the &lt;paramref name=&quot;hostName&quot; /&gt; is an empty string.">クライアントによって要求されたホスト名。 クライアントで host_name TLS 拡張機能が使用されていない場合、<paramref name="hostName" /> は空の文字列です。</param>
      <returns vsli:raw="An &lt;see cref=&quot;T:System.Security.Cryptography.X509Certificates.X509Certificate&quot; /&gt; used for establishing an SSL connection.">SSL 接続の確立に使用する <see cref="T:System.Security.Cryptography.X509Certificates.X509Certificate" />。</returns>
    </member>
    <member name="T:System.Net.Security.ServerOptionsSelectionCallback">
      <summary vsli:raw="Represents the asynchronous callback method that will select session properties based on the name requested by the client.">クライアントによって要求された名前に基づいて選択されるセッション プロパティの非同期コールバック メソッドを表します。</summary>
      <param name="stream" vsli:raw="The TLS stream on which the authentication happens.">認証が行われる TLS ストリーム。</param>
      <param name="clientHelloInfo" vsli:raw="Information from the Client Hello message.">クライアントの Hello メッセージの情報。</param>
      <param name="state" vsli:raw="The information that was passed when registering the callback.">この情報は、コールバックの登録時に渡されました。</param>
      <param name="cancellationToken" vsli:raw="The token to monitor for cancellation requests.">キャンセル要求を監視するためのトークン。</param>
      <returns vsli:raw="A server authentication property bag.">サーバー認証のプロパティ バッグ。</returns>
    </member>
    <member name="T:System.Net.Security.SslApplicationProtocol">
      <summary vsli:raw="Represents a value of TLS Application protocol.">TLS アプリケーション プロトコルの値を表します。</summary>
    </member>
    <member name="F:System.Net.Security.SslApplicationProtocol.Http11">
      <summary vsli:raw="Gets a &lt;see cref=&quot;T:System.Net.Security.SslApplicationProtocol&quot; /&gt; representing HTTP/1.1 TLS application protocol.">HTTP/1.1 TLS アプリケーション プロトコルを表す <see cref="T:System.Net.Security.SslApplicationProtocol" /> を取得します。</summary>
    </member>
    <member name="F:System.Net.Security.SslApplicationProtocol.Http2">
      <summary vsli:raw="Gets a &lt;see cref=&quot;T:System.Net.Security.SslApplicationProtocol&quot; /&gt; representing HTTP/2 TLS application protocol.">HTTP/2 TLS アプリケーション プロトコルを表す <see cref="T:System.Net.Security.SslApplicationProtocol" /> を取得します。</summary>
    </member>
    <member name="M:System.Net.Security.SslApplicationProtocol.#ctor(System.Byte[])">
      <summary vsli:raw="Initializes a new instance of the &lt;see cref=&quot;T:System.Net.Security.SslApplicationProtocol&quot; /&gt;.">
        <see cref="T:System.Net.Security.SslApplicationProtocol" />の新しいインスタンスを初期化します。</summary>
      <param name="protocol" vsli:raw="TLS Application protocol.">TLS アプリケーション プロトコル。</param>
    </member>
    <member name="M:System.Net.Security.SslApplicationProtocol.#ctor(System.String)">
      <summary vsli:raw="Initializes a new instance of the &lt;see cref=&quot;T:System.Net.Security.SslApplicationProtocol&quot; /&gt;.">
        <see cref="T:System.Net.Security.SslApplicationProtocol" />の新しいインスタンスを初期化します。</summary>
      <param name="protocol" vsli:raw="TLS Application protocol.">TLS アプリケーション プロトコル。</param>
    </member>
    <member name="M:System.Net.Security.SslApplicationProtocol.Equals(System.Net.Security.SslApplicationProtocol)">
      <summary vsli:raw="Compares a &lt;see cref=&quot;T:System.Net.Security.SslApplicationProtocol&quot; /&gt; to the specified &lt;see cref=&quot;T:System.Net.Security.SslApplicationProtocol&quot; /&gt; instance.">
        <see cref="T:System.Net.Security.SslApplicationProtocol" /> と指定した <see cref="T:System.Net.Security.SslApplicationProtocol" /> インスタンスを比較します。</summary>
      <param name="other" vsli:raw="The &lt;see cref=&quot;T:System.Net.Security.SslApplicationProtocol&quot; /&gt; instance to test for equality.">等しいかどうかをテストする <see cref="T:System.Net.Security.SslApplicationProtocol" /> インスタンス。</param>
      <returns vsli:raw="&lt;see langword=&quot;true&quot; /&gt; if the &lt;see cref=&quot;T:System.Net.Security.SslApplicationProtocol&quot; /&gt; instance provided has matching data; otherwise, &lt;see langword=&quot;false&quot; /&gt;.">指定された <see cref="T:System.Net.Security.SslApplicationProtocol" /> インスタンスのデータが一致する場合は <see langword="true" />。それ以外の場合は <see langword="false" />。</returns>
    </member>
    <member name="M:System.Net.Security.SslApplicationProtocol.Equals(System.Object)">
      <summary vsli:raw="Compares the &lt;see cref=&quot;T:System.Net.Security.SslApplicationProtocol&quot; /&gt; to the specified object.">
        <see cref="T:System.Net.Security.SslApplicationProtocol" /> と指定したオブジェクトを比較します。</summary>
      <param name="obj" vsli:raw="The object to test for equality.">同じかどうかを確認する対象のオブジェクト。</param>
      <returns vsli:raw="&lt;see langword=&quot;true&quot; /&gt; if &lt;paramref name=&quot;obj&quot; /&gt; is a &lt;see cref=&quot;T:System.Net.Security.SslApplicationProtocol&quot; /&gt; instance, and the &lt;see cref=&quot;T:System.Net.Security.SslApplicationProtocol&quot; /&gt; instances have matching data; otherwise, &lt;see langword=&quot;false&quot; /&gt;.">
        <paramref name="obj" /> が <see cref="T:System.Net.Security.SslApplicationProtocol" /> インスタンスで、<see cref="T:System.Net.Security.SslApplicationProtocol" /> インスタンスのデータが一致する場合は <see langword="true" />。それ以外の場合は <see langword="false" />。</returns>
    </member>
    <member name="M:System.Net.Security.SslApplicationProtocol.GetHashCode">
      <summary vsli:raw="Returns the hash code for the &lt;see cref=&quot;T:System.Net.Security.SslApplicationProtocol&quot; /&gt; instance.">
        <see cref="T:System.Net.Security.SslApplicationProtocol" /> インスタンスのハッシュ コードを返します。</summary>
      <returns vsli:raw="A 32-bit signed integer hash code used to compare instances of this type.">この型のインスタンスの比較に使用される 32 ビット符号付き整数ハッシュ コード。</returns>
    </member>
    <member name="M:System.Net.Security.SslApplicationProtocol.op_Equality(System.Net.Security.SslApplicationProtocol,System.Net.Security.SslApplicationProtocol)">
      <summary vsli:raw="The equality operator for comparing two &lt;see cref=&quot;T:System.Net.Security.SslApplicationProtocol&quot; /&gt; objects.">2 つの <see cref="T:System.Net.Security.SslApplicationProtocol" /> オブジェクトを比較する等値演算子。</summary>
      <param name="left" vsli:raw="The left &lt;see cref=&quot;T:System.Net.Security.SslApplicationProtocol&quot; /&gt; to an equality operator.">等値演算子の左辺にある <see cref="T:System.Net.Security.SslApplicationProtocol" />。</param>
      <param name="right" vsli:raw="The right &lt;see cref=&quot;T:System.Net.Security.SslApplicationProtocol&quot; /&gt; to an equality operator.">等値演算子に表示される右側の <see cref="T:System.Net.Security.SslApplicationProtocol" />。</param>
      <returns vsli:raw="&lt;see langword=&quot;true&quot; /&gt; if the specified &lt;paramref name=&quot;left&quot; /&gt; and &lt;paramref name=&quot;right&quot; /&gt; parameters are equal; otherwise, &lt;see langword=&quot;false&quot; /&gt;.">指定した <paramref name="left" /> パラメーターと <paramref name="right" /> パラメーターが等しい場合は <see langword="true" />。それ以外の場合は <see langword="false" />。</returns>
    </member>
    <member name="M:System.Net.Security.SslApplicationProtocol.op_Inequality(System.Net.Security.SslApplicationProtocol,System.Net.Security.SslApplicationProtocol)">
      <summary vsli:raw="The inequality operator for comparing two &lt;see cref=&quot;T:System.Net.Security.SslApplicationProtocol&quot; /&gt; objects.">2 つの <see cref="T:System.Net.Security.SslApplicationProtocol" /> オブジェクトを比較する非等値演算子。</summary>
      <param name="left" vsli:raw="The left &lt;see cref=&quot;T:System.Net.Security.SslApplicationProtocol&quot; /&gt; to an inequality operator.">非等値演算子の左辺にある <see cref="T:System.Net.Security.SslApplicationProtocol" />。</param>
      <param name="right" vsli:raw="The right  &lt;see cref=&quot;T:System.Net.Security.SslApplicationProtocol&quot; /&gt; to an inequality operator.">非等値演算子に表示される右側の <see cref="T:System.Net.Security.SslApplicationProtocol" />。</param>
      <returns vsli:raw="&lt;see langword=&quot;true&quot; /&gt; if the specified &lt;paramref name=&quot;left&quot; /&gt; and &lt;paramref name=&quot;right&quot; /&gt; parameters are inequal; otherwise, &lt;see langword=&quot;false&quot; /&gt;.">指定した <paramref name="left" /> パラメーターと <paramref name="right" /> パラメーターが等しくない場合は <see langword="true" />。それ以外の場合は <see langword="false" />。</returns>
    </member>
    <member name="M:System.Net.Security.SslApplicationProtocol.ToString">
      <summary vsli:raw="Overrides the &lt;see cref=&quot;M:System.Object.ToString&quot; /&gt; method.">
        <see cref="M:System.Object.ToString" /> メソッドをオーバーライドします。</summary>
      <returns vsli:raw="Returns a string representation of this &lt;see cref=&quot;T:System.Net.Security.SslApplicationProtocol&quot; /&gt; object.">この <see cref="T:System.Net.Security.SslApplicationProtocol" /> オブジェクトの文字列表現を返します。</returns>
    </member>
    <member name="P:System.Net.Security.SslApplicationProtocol.Protocol">
      <summary vsli:raw="Gets a current TLS application protocol represented by this &lt;see cref=&quot;T:System.Net.Security.SslApplicationProtocol&quot; /&gt;.">この <see cref="T:System.Net.Security.SslApplicationProtocol" /> によって表される現行の TLS アプリケーション プロトコルを取得します。</summary>
      <returns vsli:raw="&#xA;          The read-only byte memory representing a TLS application protocol.">TLS アプリケーションプロトコルを表す読み取り専用のバイトメモリ。</returns>
    </member>
    <member name="T:System.Net.Security.SslClientAuthenticationOptions">
      <summary vsli:raw="Represents a client authentication property bag for the &lt;see cref=&quot;T:System.Net.Security.SslStream&quot; /&gt;.">のクライアント認証プロパティバッグを表し <see cref="T:System.Net.Security.SslStream" /> ます。</summary>
    </member>
    <member name="M:System.Net.Security.SslClientAuthenticationOptions.#ctor">
      <summary vsli:raw="Initializes a new instance of the &lt;see cref=&quot;T:System.Net.Security.SslClientAuthenticationOptions&quot; /&gt; class.">
        <see cref="T:System.Net.Security.SslClientAuthenticationOptions" /> クラスの新しいインスタンスを初期化します。</summary>
    </member>
    <member name="P:System.Net.Security.SslClientAuthenticationOptions.AllowRenegotiation">
      <summary vsli:raw="Gets or sets a value that indicates whether the &lt;see cref=&quot;T:System.Net.Security.SslStream&quot; /&gt; should allow SSL renegotiation.">
        <see cref="T:System.Net.Security.SslStream" /> で SSL の再ネゴシエーションを許可するかどうかを示す値を取得または設定します。</summary>
      <returns vsli:raw="&lt;see langword=&quot;true&quot; /&gt; to indicate that the &lt;see cref=&quot;T:System.Net.Security.SslStream&quot; /&gt; allows SSL renegotiation; otherwise, &lt;see langword=&quot;false&quot; /&gt;. The default value is &lt;see langword=&quot;true&quot; /&gt;.">
        <see langword="true" /> が SSL 再ネゴシエーションを許可することを示す <see cref="T:System.Net.Security.SslStream" /> 場合は。それ以外の場合は <see langword="false" /> 。 既定値は <see langword="true" /> です。</returns>
    </member>
    <member name="P:System.Net.Security.SslClientAuthenticationOptions.ApplicationProtocols">
      <summary vsli:raw="Gets or sets a list of ALPN protocols.">ALPN プロトコルの一覧を取得または設定します。</summary>
    </member>
    <member name="P:System.Net.Security.SslClientAuthenticationOptions.CertificateRevocationCheckMode">
      <summary vsli:raw="Gets or sets the certificate revocation mode for certificate validation.">証明書検証の証明書失効モードを取得または設定します。</summary>
      <exception cref="T:System.ArgumentNullException" vsli:raw="&#xA;          The value contains an invalid enumeration value.">値に無効な列挙値が含まれています。</exception>
      <returns vsli:raw="One of the values in &lt;see cref=&quot;T:System.Security.Cryptography.X509Certificates.X509RevocationMode&quot; /&gt;. The default is &lt;see langword=&quot;NoCheck&quot; /&gt;.">
        <see cref="T:System.Security.Cryptography.X509Certificates.X509RevocationMode" /> のいずれかの値。<see langword="NoCheck" />、<see langword="Online" />、または <see langword="Offline" /> です。 既定値は、<see langword="Online" /> です。</returns>
    </member>
    <member name="P:System.Net.Security.SslClientAuthenticationOptions.CipherSuitesPolicy">
      <summary vsli:raw="Specifies the cipher suites allowed for TLS. When set to &lt;see langword=&quot;null&quot; /&gt;, the operating system default is used. Use extreme caution when changing this setting.">TLS で許可されている暗号スイートを指定します。 <see langword="null" /> に設定すると、オペレーティング システムの既定値が使用されます。 この設定を変更するときは、細心の注意を払ってください。</summary>
    </member>
    <member name="P:System.Net.Security.SslClientAuthenticationOptions.ClientCertificates">
      <summary vsli:raw="A collection of certificates to be considered for the client's authentication to the server.">クライアントがサーバーに対して認証するために考慮する証明書のコレクション。</summary>
    </member>
    <member name="P:System.Net.Security.SslClientAuthenticationOptions.EnabledSslProtocols">
      <summary vsli:raw="Gets or sets the value that represents the protocol versions offered by the client to the server during authentication.">認証時にクライアントからサーバーに提供されるプロトコルのバージョンを表す値を取得または設定します。</summary>
      <returns vsli:raw="The default value is &lt;see cref=&quot;F:System.Security.Authentication.SslProtocols.None&quot; /&gt;, which is the recommended value. For more information, see &lt;see cref=&quot;T:System.Security.Authentication.SslProtocols&quot; /&gt;.">既定値はです <see cref="F:System.Security.Authentication.SslProtocols.None" /> 。これは推奨値です。 詳細については、「<see cref="T:System.Security.Authentication.SslProtocols" />」を参照してください。</returns>
    </member>
    <member name="P:System.Net.Security.SslClientAuthenticationOptions.EncryptionPolicy">
      <summary vsli:raw="Gets or sets the encryption policy.">暗号化ポリシーを取得または設定します。</summary>
      <returns vsli:raw="The default value is &lt;see cref=&quot;F:System.Net.Security.EncryptionPolicy.RequireEncryption&quot; /&gt;.">既定値は <see cref="F:System.Net.Security.EncryptionPolicy.RequireEncryption" /> です。</returns>
    </member>
    <member name="P:System.Net.Security.SslClientAuthenticationOptions.LocalCertificateSelectionCallback">
      <summary vsli:raw="Gets or sets a &lt;see cref=&quot;T:System.Net.Security.LocalCertificateSelectionCallback&quot; /&gt; delegate that's responsible for selecting the client authentication certificate used for authentication.">
        <see cref="T:System.Net.Security.LocalCertificateSelectionCallback" />認証に使用するクライアント認証証明書の選択を担当するデリゲートを取得または設定します。</summary>
    </member>
    <member name="P:System.Net.Security.SslClientAuthenticationOptions.RemoteCertificateValidationCallback">
      <summary vsli:raw="Gets or sets a &lt;see cref=&quot;T:System.Net.Security.RemoteCertificateValidationCallback&quot; /&gt; delegate that's responsible for validating the certificate supplied by the remote party.">
        <see cref="T:System.Net.Security.RemoteCertificateValidationCallback" />リモートパーティによって指定された証明書の検証を担当するデリゲートを取得または設定します。</summary>
    </member>
    <member name="P:System.Net.Security.SslClientAuthenticationOptions.TargetHost">
      <summary vsli:raw="Gets or sets the name of the server the client is trying to connect to. That name is used for server certificate validation. It can be a DNS name or an IP address.">クライアントが接続しようとしているサーバーの名前を取得または設定します。 この名前は、サーバー証明書の検証に使用されます。 DNS 名または IP アドレスを指定できます。</summary>
    </member>
    <member name="T:System.Net.Security.SslClientHelloInfo">
      <summary vsli:raw="This struct contains information from received TLS Client Hello frame.">この構造体には、受信した TLS クライアントの Hello フレームからの情報が格納されます。</summary>
    </member>
    <member name="P:System.Net.Security.SslClientHelloInfo.ServerName">
      <summary vsli:raw="Gets the host server specified by the client.">クライアントが指定したホスト サーバーを取得します。</summary>
    </member>
    <member name="P:System.Net.Security.SslClientHelloInfo.SslProtocols">
      <summary vsli:raw="Gets the TLS/SSL protocols offered by client.">クライアントが提供する TLS/SSL プロトコルを取得します。</summary>
      <returns vsli:raw="A bitwise combination of the enumeration values that specify the TLS or SSL protocols.">TLS または SSL プロトコルを指定する列挙値のビットごとの組み合わせ。</returns>
    </member>
    <member name="T:System.Net.Security.SslServerAuthenticationOptions">
      <summary vsli:raw="This struct represents a server authentication property bag for the &lt;see cref=&quot;T:System.Net.Security.SslStream&quot; /&gt;.">この構造体は、<see cref="T:System.Net.Security.SslStream" /> のサーバー認証プロパティ バッグを表します。</summary>
    </member>
    <member name="M:System.Net.Security.SslServerAuthenticationOptions.#ctor">
      <summary vsli:raw="Initializes a new instance of the &lt;see cref=&quot;T:System.Net.Security.SslServerAuthenticationOptions&quot; /&gt; class.">
        <see cref="T:System.Net.Security.SslServerAuthenticationOptions" /> クラスの新しいインスタンスを初期化します。</summary>
    </member>
    <member name="P:System.Net.Security.SslServerAuthenticationOptions.AllowRenegotiation">
      <summary vsli:raw="Gets or sets a value that indicates whether the &lt;see cref=&quot;T:System.Net.Security.SslStream&quot; /&gt; should allow SSL renegotiation.">
        <see cref="T:System.Net.Security.SslStream" /> で SSL の再ネゴシエーションを許可するかどうかを示す値を取得または設定します。</summary>
      <returns vsli:raw="&lt;see langword=&quot;true&quot; /&gt; to allow SSL renegotiation; otherwise, &lt;see langword=&quot;false&quot; /&gt;. The default value is &lt;see langword=&quot;false&quot; /&gt; in .NET 7 and later versions; in earlier versions, the default value is &lt;see langword=&quot;true&quot; /&gt;.">
        <see langword="true" /> SSL 再ネゴシエーションを <see cref="T:System.Net.Security.SslStream" /> 許可する場合は。それ以外の場合は <see langword="false" /> 。 既定値は <see langword="true" /> です。</returns>
    </member>
    <member name="P:System.Net.Security.SslServerAuthenticationOptions.ApplicationProtocols">
      <summary vsli:raw="Gets or sets a list of ALPN protocols.">ALPN プロトコルの一覧を取得または設定します。</summary>
    </member>
    <member name="P:System.Net.Security.SslServerAuthenticationOptions.CertificateRevocationCheckMode">
      <summary vsli:raw="Gets or sets the certificate revocation mode for certificate validation.">証明書検証の証明書失効モードを取得または設定します。</summary>
      <exception cref="T:System.ArgumentException" vsli:raw="&#xA;          The value contains an invalid enumeration value.">値に無効な列挙値が含まれています。</exception>
      <returns vsli:raw="One of the values in &lt;see cref=&quot;T:System.Security.Cryptography.X509Certificates.X509RevocationMode&quot; /&gt;: &lt;see langword=&quot;NoCheck&quot; /&gt;, &lt;see langword=&quot;Online&quot; /&gt;, or &lt;see langword=&quot;Offline&quot; /&gt;. The default is &lt;see langword=&quot;NoCheck&quot; /&gt;.">
        <see cref="T:System.Security.Cryptography.X509Certificates.X509RevocationMode" /> のいずれかの値。<see langword="NoCheck" />、<see langword="Online" />、または <see langword="Offline" /> です。 既定値は、<see langword="Online" /> です。</returns>
    </member>
    <member name="P:System.Net.Security.SslServerAuthenticationOptions.CipherSuitesPolicy">
      <summary vsli:raw="Specifies the cipher suites allowed for TLS. When set to &lt;see langword=&quot;null&quot; /&gt;, the operating system default is used. Use extreme caution when changing this setting.">TLS で許可されている暗号スイートを指定します。 <see langword="null" /> に設定すると、オペレーティング システムの既定値が使用されます。 この設定を変更するときは、細心の注意を払ってください。</summary>
    </member>
    <member name="P:System.Net.Security.SslServerAuthenticationOptions.ClientCertificateRequired">
      <summary vsli:raw="Gets or sets a value that specifies whether the client is asked for a certificate for authentication. Note that this is only a request -- if no certificate is provided, the server still accepts the connection request.">認証用の証明書をクライアントに要求するかどうかを指定する値を取得または設定します。 これは単なる要求であり、証明書が提供されなくても、サーバーは接続要求を受け入れることに注意してください。</summary>
    </member>
    <member name="P:System.Net.Security.SslServerAuthenticationOptions.EnabledSslProtocols">
      <summary vsli:raw="Gets or sets a value that represents protocol versions used by the server to match the client protocol version during authentication.">認証時にサーバーでクライアントのプロトコル バージョンとの照合に使用するプロトコル バージョンを表す値を取得または設定します。</summary>
      <returns vsli:raw="The default value is &lt;see cref=&quot;F:System.Security.Authentication.SslProtocols.None&quot; /&gt;, which is the recommended value. See &lt;see cref=&quot;T:System.Security.Authentication.SslProtocols&quot; /&gt; for more details.">既定値はです <see cref="F:System.Security.Authentication.SslProtocols.None" /> 。これは推奨値です。 詳細については、「<see cref="T:System.Security.Authentication.SslProtocols" />」を参照してください。</returns>
    </member>
    <member name="P:System.Net.Security.SslServerAuthenticationOptions.EncryptionPolicy">
      <summary vsli:raw="Gets or sets the &lt;see cref=&quot;T:System.Net.Security.EncryptionPolicy&quot; /&gt;.">
        <see cref="T:System.Net.Security.EncryptionPolicy" /> を取得または設定します。</summary>
      <exception cref="T:System.ArgumentException" vsli:raw="&#xA;          The value contains an invalid enumeration value.">値に無効な列挙値が含まれています。</exception>
      <returns vsli:raw="The default value is &lt;see cref=&quot;F:System.Net.Security.EncryptionPolicy.RequireEncryption&quot; /&gt;">既定値は <see cref="F:System.Net.Security.EncryptionPolicy.RequireEncryption" /></returns>
    </member>
    <member name="P:System.Net.Security.SslServerAuthenticationOptions.RemoteCertificateValidationCallback">
      <summary vsli:raw="Gets or sets a &lt;see cref=&quot;T:System.Net.Security.RemoteCertificateValidationCallback&quot; /&gt; delegate responsible for custom validating the certificate supplied by the remote party.">リモート側によって指定される証明書をカスタム検証する <see cref="T:System.Net.Security.RemoteCertificateValidationCallback" /> デリゲートを取得または設定します。</summary>
    </member>
    <member name="P:System.Net.Security.SslServerAuthenticationOptions.ServerCertificate">
      <summary vsli:raw="Gets or sets the server certificate.">サーバー証明書を取得または設定します。</summary>
    </member>
    <member name="P:System.Net.Security.SslServerAuthenticationOptions.ServerCertificateContext">
      <summary vsli:raw="Gets or sets the server certificate context.">サーバー証明書のコンテキストを取得または設定します。</summary>
      <returns vsli:raw="The server certificate context.">サーバー証明書のコンテキスト。</returns>
    </member>
    <member name="P:System.Net.Security.SslServerAuthenticationOptions.ServerCertificateSelectionCallback">
      <summary vsli:raw="Gets or sets the &lt;see cref=&quot;T:System.Net.Security.ServerCertificateSelectionCallback&quot; /&gt; delegate responsible for the server certificate selection.">サーバー証明書の選択を行う <see cref="T:System.Net.Security.ServerCertificateSelectionCallback" /> デリゲートを取得または設定します。</summary>
    </member>
    <member name="T:System.Net.Security.SslStream">
      <summary vsli:raw="Provides a stream used for client-server communication that uses the Secure Socket Layer (SSL) security protocol to authenticate the server and optionally the client.">Secure Socket Layer (SSL) セキュリティ プロトコルを使用し、サーバーと、オプションでクライアントを認証するクライアント サーバー通信に使用されるストリームを提供します。</summary>
    </member>
    <member name="M:System.Net.Security.SslStream.#ctor(System.IO.Stream)">
      <summary vsli:raw="Initializes a new instance of the &lt;see cref=&quot;T:System.Net.Security.SslStream&quot; /&gt; class using the specified &lt;see cref=&quot;T:System.IO.Stream&quot; /&gt;.">指定した <see cref="T:System.IO.Stream" /> を使用して <see cref="T:System.Net.Security.SslStream" /> クラスの新しいインスタンスを初期化します。</summary>
      <param name="innerStream" vsli:raw="A &lt;see cref=&quot;T:System.IO.Stream&quot; /&gt; object used by the &lt;see cref=&quot;T:System.Net.Security.SslStream&quot; /&gt; for sending and receiving data.">
        <see cref="T:System.Net.Security.SslStream" /> がデータの送受信に使用する <see cref="T:System.IO.Stream" /> オブジェクト。</param>
      <exception cref="T:System.ArgumentException" vsli:raw="&lt;paramref name=&quot;innerStream&quot; /&gt; is not readable.  &#xA;  &#xA; -or-  &#xA;  &#xA; &lt;paramref name=&quot;innerStream&quot; /&gt; is not writable.">
        <paramref name="innerStream" /> が読み取り可能ではありません。  
  
- または - 
 <paramref name="innerStream" /> が書き込み可能ではありません。</exception>
      <exception cref="T:System.ArgumentNullException" vsli:raw="&lt;paramref name=&quot;innerStream&quot; /&gt; is &lt;see langword=&quot;null&quot; /&gt;.  &#xA;  &#xA; -or-  &#xA;  &#xA; &lt;paramref name=&quot;innerStream&quot; /&gt; is equal to &lt;see cref=&quot;F:System.IO.Stream.Null&quot; /&gt;.">
        <paramref name="innerStream" /> が <see langword="null" />です。  
  
- または - 
 <paramref name="innerStream" /> と <see cref="F:System.IO.Stream.Null" /> が等価です。</exception>
    </member>
    <member name="M:System.Net.Security.SslStream.#ctor(System.IO.Stream,System.Boolean)">
      <summary vsli:raw="Initializes a new instance of the &lt;see cref=&quot;T:System.Net.Security.SslStream&quot; /&gt; class using the specified &lt;see cref=&quot;T:System.IO.Stream&quot; /&gt; and stream closure behavior.">指定した <see cref="T:System.IO.Stream" /> とストリームを閉じる動作を使用して、<see cref="T:System.Net.Security.SslStream" /> クラスの新しいインスタンスを初期化します。</summary>
      <param name="innerStream" vsli:raw="A &lt;see cref=&quot;T:System.IO.Stream&quot; /&gt; object used by the &lt;see cref=&quot;T:System.Net.Security.SslStream&quot; /&gt; for sending and receiving data.">
        <see cref="T:System.Net.Security.SslStream" /> がデータの送受信に使用する <see cref="T:System.IO.Stream" /> オブジェクト。</param>
      <param name="leaveInnerStreamOpen" vsli:raw="A Boolean value that indicates the closure behavior of the &lt;see cref=&quot;T:System.IO.Stream&quot; /&gt; object used by the &lt;see cref=&quot;T:System.Net.Security.SslStream&quot; /&gt; for sending and receiving data. This parameter indicates if the inner stream is left open.">
        <see cref="T:System.Net.Security.SslStream" /> がデータの送受信に使用する <see cref="T:System.IO.Stream" /> オブジェクトの閉じる動作を示すブール値。 このパラメーターは、内部ストリームを開いたままにするかどうかを示します。</param>
      <exception cref="T:System.ArgumentException" vsli:raw="&lt;paramref name=&quot;innerStream&quot; /&gt; is not readable.  &#xA;  &#xA; -or-  &#xA;  &#xA; &lt;paramref name=&quot;innerStream&quot; /&gt; is not writable.">
        <paramref name="innerStream" /> が読み取り可能ではありません。  
  
- または - 
 <paramref name="innerStream" /> が書き込み可能ではありません。</exception>
      <exception cref="T:System.ArgumentNullException" vsli:raw="&lt;paramref name=&quot;innerStream&quot; /&gt; is &lt;see langword=&quot;null&quot; /&gt;.  &#xA;  &#xA; -or-  &#xA;  &#xA; &lt;paramref name=&quot;innerStream&quot; /&gt; is equal to &lt;see cref=&quot;F:System.IO.Stream.Null&quot; /&gt;.">
        <paramref name="innerStream" /> が <see langword="null" />です。  
  
- または - 
 <paramref name="innerStream" /> と <see cref="F:System.IO.Stream.Null" /> が等価です。</exception>
    </member>
    <member name="M:System.Net.Security.SslStream.#ctor(System.IO.Stream,System.Boolean,System.Net.Security.RemoteCertificateValidationCallback)">
      <summary vsli:raw="Initializes a new instance of the &lt;see cref=&quot;T:System.Net.Security.SslStream&quot; /&gt; class using the specified &lt;see cref=&quot;T:System.IO.Stream&quot; /&gt;, stream closure behavior and certificate validation delegate.">指定した <see cref="T:System.IO.Stream" />、ストリームを閉じる動作、および証明書検証デリゲートを使用して、<see cref="T:System.Net.Security.SslStream" /> クラスの新しいインスタンスを初期化します。</summary>
      <param name="innerStream" vsli:raw="A &lt;see cref=&quot;T:System.IO.Stream&quot; /&gt; object used by the &lt;see cref=&quot;T:System.Net.Security.SslStream&quot; /&gt; for sending and receiving data.">
        <see cref="T:System.Net.Security.SslStream" /> がデータの送受信に使用する <see cref="T:System.IO.Stream" /> オブジェクト。</param>
      <param name="leaveInnerStreamOpen" vsli:raw="A Boolean value that indicates the closure behavior of the &lt;see cref=&quot;T:System.IO.Stream&quot; /&gt; object used by the &lt;see cref=&quot;T:System.Net.Security.SslStream&quot; /&gt; for sending and receiving data. This parameter indicates if the inner stream is left open.">
        <see cref="T:System.Net.Security.SslStream" /> がデータの送受信に使用する <see cref="T:System.IO.Stream" /> オブジェクトの閉じる動作を示すブール値。 このパラメーターは、内部ストリームを開いたままにするかどうかを示します。</param>
      <param name="userCertificateValidationCallback" vsli:raw="A &lt;see cref=&quot;T:System.Net.Security.RemoteCertificateValidationCallback&quot; /&gt; delegate responsible for validating the certificate supplied by the remote party.">リモート側によって提供される証明書を検証する <see cref="T:System.Net.Security.RemoteCertificateValidationCallback" /> デリゲート。</param>
      <exception cref="T:System.ArgumentException" vsli:raw="&lt;paramref name=&quot;innerStream&quot; /&gt; is not readable.  &#xA;  &#xA; -or-  &#xA;  &#xA; &lt;paramref name=&quot;innerStream&quot; /&gt; is not writable.">
        <paramref name="innerStream" /> が読み取り可能ではありません。  
  
- または - 
 <paramref name="innerStream" /> が書き込み可能ではありません。</exception>
      <exception cref="T:System.ArgumentNullException" vsli:raw="&lt;paramref name=&quot;innerStream&quot; /&gt; is &lt;see langword=&quot;null&quot; /&gt;.  &#xA;  &#xA; -or-  &#xA;  &#xA; &lt;paramref name=&quot;innerStream&quot; /&gt; is equal to &lt;see cref=&quot;F:System.IO.Stream.Null&quot; /&gt;.">
        <paramref name="innerStream" /> が <see langword="null" />です。  
  
- または - 
 <paramref name="innerStream" /> と <see cref="F:System.IO.Stream.Null" /> が等価です。</exception>
    </member>
    <member name="M:System.Net.Security.SslStream.#ctor(System.IO.Stream,System.Boolean,System.Net.Security.RemoteCertificateValidationCallback,System.Net.Security.LocalCertificateSelectionCallback)">
      <summary vsli:raw="Initializes a new instance of the &lt;see cref=&quot;T:System.Net.Security.SslStream&quot; /&gt; class using the specified &lt;see cref=&quot;T:System.IO.Stream&quot; /&gt;, stream closure behavior, certificate validation delegate and certificate selection delegate.">指定した <see cref="T:System.IO.Stream" />、ストリームを閉じる動作、証明書検証デリゲート、および証明書選択デリゲートを使用して、<see cref="T:System.Net.Security.SslStream" /> クラスの新しいインスタンスを初期化します。</summary>
      <param name="innerStream" vsli:raw="A &lt;see cref=&quot;T:System.IO.Stream&quot; /&gt; object used by the &lt;see cref=&quot;T:System.Net.Security.SslStream&quot; /&gt; for sending and receiving data.">
        <see cref="T:System.Net.Security.SslStream" /> がデータの送受信に使用する <see cref="T:System.IO.Stream" /> オブジェクト。</param>
      <param name="leaveInnerStreamOpen" vsli:raw="A Boolean value that indicates the closure behavior of the &lt;see cref=&quot;T:System.IO.Stream&quot; /&gt; object used by the &lt;see cref=&quot;T:System.Net.Security.SslStream&quot; /&gt; for sending and receiving data. This parameter indicates if the inner stream is left open.">
        <see cref="T:System.Net.Security.SslStream" /> がデータの送受信に使用する <see cref="T:System.IO.Stream" /> オブジェクトの閉じる動作を示すブール値。 このパラメーターは、内部ストリームを開いたままにするかどうかを示します。</param>
      <param name="userCertificateValidationCallback" vsli:raw="A &lt;see cref=&quot;T:System.Net.Security.RemoteCertificateValidationCallback&quot; /&gt; delegate responsible for validating the certificate supplied by the remote party.">リモート側によって提供される証明書を検証する <see cref="T:System.Net.Security.RemoteCertificateValidationCallback" /> デリゲート。</param>
      <param name="userCertificateSelectionCallback" vsli:raw="A &lt;see cref=&quot;T:System.Net.Security.LocalCertificateSelectionCallback&quot; /&gt; delegate responsible for selecting the certificate used for authentication.">認証に使用する証明書を選択する <see cref="T:System.Net.Security.LocalCertificateSelectionCallback" /> デリゲート。</param>
      <exception cref="T:System.ArgumentException" vsli:raw="&lt;paramref name=&quot;innerStream&quot; /&gt; is not readable.  &#xA;  &#xA; -or-  &#xA;  &#xA; &lt;paramref name=&quot;innerStream&quot; /&gt; is not writable.">
        <paramref name="innerStream" /> が読み取り可能ではありません。  
  
- または - 
 <paramref name="innerStream" /> が書き込み可能ではありません。</exception>
      <exception cref="T:System.ArgumentNullException" vsli:raw="&lt;paramref name=&quot;innerStream&quot; /&gt; is &lt;see langword=&quot;null&quot; /&gt;.  &#xA;  &#xA; -or-  &#xA;  &#xA; &lt;paramref name=&quot;innerStream&quot; /&gt; is equal to &lt;see cref=&quot;F:System.IO.Stream.Null&quot; /&gt;.">
        <paramref name="innerStream" /> が <see langword="null" />です。  
  
- または - 
 <paramref name="innerStream" /> と <see cref="F:System.IO.Stream.Null" /> が等価です。</exception>
    </member>
    <member name="M:System.Net.Security.SslStream.#ctor(System.IO.Stream,System.Boolean,System.Net.Security.RemoteCertificateValidationCallback,System.Net.Security.LocalCertificateSelectionCallback,System.Net.Security.EncryptionPolicy)">
      <summary vsli:raw="Initializes a new instance of the &lt;see cref=&quot;T:System.Net.Security.SslStream&quot; /&gt; class using the specified &lt;see cref=&quot;T:System.IO.Stream&quot; /&gt;.">指定した <see cref="T:System.IO.Stream" /> を使用して、<see cref="T:System.Net.Security.SslStream" /> クラスの新しいインスタンスを初期化します。</summary>
      <param name="innerStream" vsli:raw="A &lt;see cref=&quot;T:System.IO.Stream&quot; /&gt; object used by the &lt;see cref=&quot;T:System.Net.Security.SslStream&quot; /&gt; for sending and receiving data.">
        <see cref="T:System.Net.Security.SslStream" /> がデータの送受信に使用する <see cref="T:System.IO.Stream" /> オブジェクト。</param>
      <param name="leaveInnerStreamOpen" vsli:raw="A Boolean value that indicates the closure behavior of the &lt;see cref=&quot;T:System.IO.Stream&quot; /&gt; object used by the &lt;see cref=&quot;T:System.Net.Security.SslStream&quot; /&gt; for sending and receiving data. This parameter indicates if the inner stream is left open.">
        <see cref="T:System.Net.Security.SslStream" /> がデータの送受信に使用する <see cref="T:System.IO.Stream" /> オブジェクトの閉じる動作を示すブール値。 このパラメーターは、内部ストリームを開いたままにするかどうかを示します。</param>
      <param name="userCertificateValidationCallback" vsli:raw="A &lt;see cref=&quot;T:System.Net.Security.RemoteCertificateValidationCallback&quot; /&gt; delegate responsible for validating the certificate supplied by the remote party.">リモート側によって提供される証明書を検証する <see cref="T:System.Net.Security.RemoteCertificateValidationCallback" /> デリゲート。</param>
      <param name="userCertificateSelectionCallback" vsli:raw="A &lt;see cref=&quot;T:System.Net.Security.LocalCertificateSelectionCallback&quot; /&gt; delegate responsible for selecting the certificate used for authentication.">認証に使用する証明書を選択する <see cref="T:System.Net.Security.LocalCertificateSelectionCallback" /> デリゲート。</param>
      <param name="encryptionPolicy" vsli:raw="The &lt;see cref=&quot;T:System.Net.Security.EncryptionPolicy&quot; /&gt; to use.">使用する <see cref="T:System.Net.Security.EncryptionPolicy" />。</param>
      <exception cref="T:System.ArgumentException" vsli:raw="&lt;paramref name=&quot;innerStream&quot; /&gt; is not readable.  &#xA;  &#xA; -or-  &#xA;  &#xA; &lt;paramref name=&quot;innerStream&quot; /&gt; is not writable.  &#xA;  &#xA; -or-  &#xA;  &#xA; &lt;paramref name=&quot;encryptionPolicy&quot; /&gt; is not valid.">
        <paramref name="innerStream" /> が読み取り可能ではありません。  
  
- または - 
 <paramref name="innerStream" /> が書き込み可能ではありません。  
  
- または - 
 <paramref name="encryptionPolicy" /> が無効です。</exception>
      <exception cref="T:System.ArgumentNullException" vsli:raw="&lt;paramref name=&quot;innerStream&quot; /&gt; is &lt;see langword=&quot;null&quot; /&gt;.  &#xA;  &#xA; -or-  &#xA;  &#xA; &lt;paramref name=&quot;innerStream&quot; /&gt; is equal to &lt;see cref=&quot;F:System.IO.Stream.Null&quot; /&gt;.">
        <paramref name="innerStream" /> が <see langword="null" />です。  
  
- または - 
 <paramref name="innerStream" /> と <see cref="F:System.IO.Stream.Null" /> が等価です。</exception>
    </member>
    <member name="M:System.Net.Security.SslStream.AuthenticateAsClient(System.Net.Security.SslClientAuthenticationOptions)">
      <summary vsli:raw="Called by clients to authenticate the server and optionally the client in a client-server connection.">サーバーおよび必要に応じてクライアントとサーバー間の接続にあるクライアントを認証するために、クライアントによって呼び出されます。</summary>
      <param name="sslClientAuthenticationOptions" vsli:raw="The property bag for the SSL connection.">SSL 接続のプロパティ バッグ。</param>
      <exception cref="T:System.ArgumentNullException" vsli:raw="&lt;paramref name=&quot;targetHost&quot; /&gt; is &lt;see langword=&quot;null&quot; /&gt;.">
        <paramref name="targetHost" /> が <see langword="null" />です。</exception>
      <exception cref="T:System.Security.Authentication.AuthenticationException" vsli:raw="The authentication failed and left this object in an unusable state.">認証に失敗し、このオブジェクトが使用できない状態のままになっています。</exception>
      <exception cref="T:System.InvalidOperationException" vsli:raw="Authentication has already occurred.&#xA;&#xA; -or-&#xA;&#xA; Server authentication using this &lt;see cref=&quot;T:System.Net.Security.SslStream&quot; /&gt; was tried previously.&#xA;&#xA; -or-&#xA;&#xA; Authentication is already in progress.">認証が既に発生しました。

- または -

この <see cref="T:System.Net.Security.SslStream" /> を使用するサーバーの認証は以前に試行されました。

- または -

認証が既に実行中です。</exception>
      <exception cref="T:System.ObjectDisposedException" vsli:raw="This object has been closed.">このオブジェクトは閉じられました。</exception>
    </member>
    <member name="M:System.Net.Security.SslStream.AuthenticateAsClient(System.String)">
      <summary vsli:raw="Called by clients to authenticate the server and optionally the client in a client-server connection.">サーバーおよび必要に応じてクライアントとサーバー間の接続にあるクライアントを認証するために、クライアントによって呼び出されます。</summary>
      <param name="targetHost" vsli:raw="The name of the server that shares this &lt;see cref=&quot;T:System.Net.Security.SslStream&quot; /&gt;.">この <see cref="T:System.Net.Security.SslStream" /> を共有するサーバーの名前。</param>
      <exception cref="T:System.ArgumentNullException" vsli:raw="&lt;paramref name=&quot;targetHost&quot; /&gt; is &lt;see langword=&quot;null&quot; /&gt;.">
        <paramref name="targetHost" /> が <see langword="null" />です。</exception>
      <exception cref="T:System.Security.Authentication.AuthenticationException" vsli:raw="The authentication failed and left this object in an unusable state.">認証に失敗し、このオブジェクトが使用できない状態のままになっています。</exception>
      <exception cref="T:System.InvalidOperationException" vsli:raw="Authentication has already occurred.  &#xA;  &#xA; -or-  &#xA;  &#xA; Server authentication using this &lt;see cref=&quot;T:System.Net.Security.SslStream&quot; /&gt; was tried previously.  &#xA;  &#xA; -or-  &#xA;  &#xA; Authentication is already in progress.">認証が既に発生しました。  
  
- または - 
この <see cref="T:System.Net.Security.SslStream" /> を使用するサーバーの認証は以前に試行されました。  
  
- または - 
認証が既に実行中です。</exception>
      <exception cref="T:System.ObjectDisposedException" vsli:raw="This object has been closed.">このオブジェクトは閉じられました。</exception>
    </member>
    <member name="M:System.Net.Security.SslStream.AuthenticateAsClient(System.String,System.Security.Cryptography.X509Certificates.X509CertificateCollection,System.Boolean)">
      <summary vsli:raw="Called by clients to authenticate the server and optionally the client in a client-server connection. The authentication process uses the specified certificate collection, and the system default SSL protocol.">サーバーおよび必要に応じてクライアントとサーバー間の接続にあるクライアントを認証するために、クライアントによって呼び出されます。 認証プロセスでは、指定された証明書コレクション、およびシステムの既定の SSL プロトコルを使用します。</summary>
      <param name="targetHost" vsli:raw="The name of the server that will share this &lt;see cref=&quot;T:System.Net.Security.SslStream&quot; /&gt;.">この <see cref="T:System.Net.Security.SslStream" /> を共有するサーバーの名前。</param>
      <param name="clientCertificates" vsli:raw="The &lt;see cref=&quot;T:System.Security.Cryptography.X509Certificates.X509CertificateCollection&quot; /&gt; that contains client certificates.">クライアント証明書を格納している <see cref="T:System.Security.Cryptography.X509Certificates.X509CertificateCollection" />。</param>
      <param name="checkCertificateRevocation" vsli:raw="A &lt;see cref=&quot;T:System.Boolean&quot; /&gt; value that specifies whether the certificate revocation list is checked during authentication.">認証時に証明書失効リストをオンにするかどうかを指定する <see cref="T:System.Boolean" /> 値。</param>
    </member>
    <member name="M:System.Net.Security.SslStream.AuthenticateAsClient(System.String,System.Security.Cryptography.X509Certificates.X509CertificateCollection,System.Security.Authentication.SslProtocols,System.Boolean)">
      <summary vsli:raw="Called by clients to authenticate the server and optionally the client in a client-server connection. The authentication process uses the specified certificate collection and SSL protocol.">サーバーおよび必要に応じてクライアントとサーバー間の接続にあるクライアントを認証するために、クライアントによって呼び出されます。 認証プロセスには、指定した証明書コレクションおよび SSL プロトコルが使用されます。</summary>
      <param name="targetHost" vsli:raw="The name of the server that will share this &lt;see cref=&quot;T:System.Net.Security.SslStream&quot; /&gt;.">この <see cref="T:System.Net.Security.SslStream" /> を共有するサーバーの名前。</param>
      <param name="clientCertificates" vsli:raw="The &lt;see cref=&quot;T:System.Security.Cryptography.X509Certificates.X509CertificateCollection&quot; /&gt; that contains client certificates.">クライアント証明書を格納している <see cref="T:System.Security.Cryptography.X509Certificates.X509CertificateCollection" />。</param>
      <param name="enabledSslProtocols" vsli:raw="The &lt;see cref=&quot;T:System.Security.Authentication.SslProtocols&quot; /&gt; value that represents protocols used for authentication.">認証に使用されるプロトコルを表す <see cref="T:System.Security.Authentication.SslProtocols" /> 値。</param>
      <param name="checkCertificateRevocation" vsli:raw="A &lt;see cref=&quot;T:System.Boolean&quot; /&gt; value that specifies whether the certificate revocation list is checked during authentication.">認証時に証明書失効リストをオンにするかどうかを指定する <see cref="T:System.Boolean" /> 値。</param>
    </member>
    <member name="M:System.Net.Security.SslStream.AuthenticateAsClientAsync(System.Net.Security.SslClientAuthenticationOptions,System.Threading.CancellationToken)">
      <summary vsli:raw="Called by clients to authenticate the server and optionally the client in a client-server connection as an asynchronous operation. The authentication process uses information specified in the &lt;paramref name=&quot;sslClientAuthenticationOptions&quot; /&gt; property bag.">サーバーおよび必要に応じて非同期操作としてクライアントとサーバー間の接続にあるクライアントを認証するために、クライアントによって呼び出されます。 認証プロセスでは、<paramref name="sslClientAuthenticationOptions" /> プロパティ バッグで指定されている情報が使用されます。</summary>
      <param name="sslClientAuthenticationOptions" vsli:raw="The property bag for the SSL connection.">SSL 接続のプロパティ バッグ。</param>
      <param name="cancellationToken" vsli:raw="The token to monitor for cancellation requests.">キャンセル要求を監視するためのトークン。</param>
      <exception cref="T:System.ArgumentNullException" vsli:raw="&lt;paramref name=&quot;sslClientAuthenticationOptions&quot; /&gt; is &lt;see langword=&quot;null&quot; /&gt;.">
        <paramref name="sslClientAuthenticationOptions" /> が <see langword="null" />です。</exception>
      <exception cref="T:System.Security.Authentication.AuthenticationException" vsli:raw="The authentication failed and left this object in an unusable state.">認証に失敗し、このオブジェクトが使用できない状態のままになっています。</exception>
      <exception cref="T:System.InvalidOperationException" vsli:raw="Authentication has already occurred.  &#xA;  &#xA; -or-  &#xA;  &#xA; Server authentication using this &lt;see cref=&quot;T:System.Net.Security.SslStream&quot; /&gt; was tried previously.  &#xA;  &#xA; -or-  &#xA;  &#xA; Authentication is already in progress.">認証が既に発生しました。  
  
- または - 
この <see cref="T:System.Net.Security.SslStream" /> を使用するサーバーの認証は以前に試行されました。  
  
- または - 
認証が既に実行中です。</exception>
      <exception cref="T:System.ObjectDisposedException" vsli:raw="This object has been closed.">このオブジェクトは閉じられました。</exception>
      <returns vsli:raw="The task object representing the asynchronous operation.">非同期操作を表すタスク オブジェクト。</returns>
    </member>
    <member name="M:System.Net.Security.SslStream.AuthenticateAsClientAsync(System.String)">
      <summary vsli:raw="Called by clients to authenticate the server and optionally the client in a client-server connection as an asynchronous operation.">サーバーおよび必要に応じて非同期操作としてクライアントとサーバー間の接続にあるクライアントを認証するために、クライアントによって呼び出されます。</summary>
      <param name="targetHost" vsli:raw="The name of the server that shares this &lt;see cref=&quot;T:System.Net.Security.SslStream&quot; /&gt;.">この <see cref="T:System.Net.Security.SslStream" /> を共有するサーバーの名前。</param>
      <exception cref="T:System.ArgumentNullException" vsli:raw="&lt;paramref name=&quot;targetHost&quot; /&gt; is &lt;see langword=&quot;null&quot; /&gt;.">
        <paramref name="targetHost" /> が <see langword="null" />です。</exception>
      <exception cref="T:System.Security.Authentication.AuthenticationException" vsli:raw="The authentication failed and left this object in an unusable state.">認証に失敗し、このオブジェクトが使用できない状態のままになっています。</exception>
      <exception cref="T:System.InvalidOperationException" vsli:raw="Authentication has already occurred.  &#xA;  &#xA; -or-  &#xA;  &#xA; Server authentication using this &lt;see cref=&quot;T:System.Net.Security.SslStream&quot; /&gt; was tried previously.  &#xA;  &#xA; -or-  &#xA;  &#xA; Authentication is already in progress.">認証が既に発生しました。  
  
- または - 
この <see cref="T:System.Net.Security.SslStream" /> を使用するサーバーの認証は以前に試行されました。  
  
- または - 
認証が既に実行中です。</exception>
      <exception cref="T:System.ObjectDisposedException" vsli:raw="This object has been closed.">このオブジェクトは閉じられました。</exception>
      <returns vsli:raw="The task object representing the asynchronous operation.">非同期操作を表すタスク オブジェクト。</returns>
    </member>
    <member name="M:System.Net.Security.SslStream.AuthenticateAsClientAsync(System.String,System.Security.Cryptography.X509Certificates.X509CertificateCollection,System.Boolean)">
      <summary vsli:raw="Called by clients to authenticate the server and optionally the client in a client-server connection as an asynchronous operation. The authentication process uses the specified certificate collection and the system default SSL protocol.">サーバーおよび必要に応じて非同期操作としてクライアントとサーバー間の接続にあるクライアントを認証するために、クライアントによって呼び出されます。 認証プロセスでは、指定された証明書コレクション、およびシステムの既定の SSL プロトコルを使用します。</summary>
      <param name="targetHost" vsli:raw="The name of the server that will share this &lt;see cref=&quot;T:System.Net.Security.SslStream&quot; /&gt;.">この <see cref="T:System.Net.Security.SslStream" /> を共有するサーバーの名前。</param>
      <param name="clientCertificates" vsli:raw="The &lt;see cref=&quot;T:System.Security.Cryptography.X509Certificates.X509CertificateCollection&quot; /&gt; that contains client certificates.">クライアント証明書を格納している <see cref="T:System.Security.Cryptography.X509Certificates.X509CertificateCollection" />。</param>
      <param name="checkCertificateRevocation" vsli:raw="A &lt;see cref=&quot;T:System.Boolean&quot; /&gt; value that specifies whether the certificate revocation list is checked during authentication.">認証時に証明書失効リストをオンにするかどうかを指定する <see cref="T:System.Boolean" /> 値。</param>
      <exception cref="T:System.Security.Authentication.AuthenticationException" vsli:raw="The authentication failed and left this object in an unusable state.">認証に失敗し、このオブジェクトが使用できない状態のままになっています。</exception>
      <exception cref="T:System.InvalidOperationException" vsli:raw="Authentication has already occurred.  &#xA;  &#xA; -or-  &#xA;  &#xA; Server authentication using this &lt;see cref=&quot;T:System.Net.Security.SslStream&quot; /&gt; was tried previously.  &#xA;  &#xA; -or-  &#xA;  &#xA; Authentication is already in progress.">認証が既に発生しました。  
  
- または - 
この <see cref="T:System.Net.Security.SslStream" /> を使用するサーバーの認証は以前に試行されました。  
  
- または - 
認証が既に実行中です。</exception>
      <exception cref="T:System.ObjectDisposedException" vsli:raw="This object has been closed.">このオブジェクトは閉じられました。</exception>
      <returns vsli:raw="The task object representing the asynchronous operation.">非同期操作を表すタスク オブジェクト。</returns>
    </member>
    <member name="M:System.Net.Security.SslStream.AuthenticateAsClientAsync(System.String,System.Security.Cryptography.X509Certificates.X509CertificateCollection,System.Security.Authentication.SslProtocols,System.Boolean)">
      <summary vsli:raw="Called by clients to authenticate the server and optionally the client in a client-server connection as an asynchronous operation. The authentication process uses the specified certificate collection and SSL protocol.">サーバーおよび必要に応じて非同期操作としてクライアントとサーバー間の接続にあるクライアントを認証するために、クライアントによって呼び出されます。 認証プロセスには、指定した証明書コレクションおよび SSL プロトコルが使用されます。</summary>
      <param name="targetHost" vsli:raw="The name of the server that will share this &lt;see cref=&quot;T:System.Net.Security.SslStream&quot; /&gt;.">この <see cref="T:System.Net.Security.SslStream" /> を共有するサーバーの名前。</param>
      <param name="clientCertificates" vsli:raw="The &lt;see cref=&quot;T:System.Security.Cryptography.X509Certificates.X509CertificateCollection&quot; /&gt; that contains client certificates.">クライアント証明書を格納している <see cref="T:System.Security.Cryptography.X509Certificates.X509CertificateCollection" />。</param>
      <param name="enabledSslProtocols" vsli:raw="The &lt;see cref=&quot;T:System.Security.Authentication.SslProtocols&quot; /&gt; value that represents protocols used for authentication.">認証に使用されるプロトコルを表す <see cref="T:System.Security.Authentication.SslProtocols" /> 値。</param>
      <param name="checkCertificateRevocation" vsli:raw="A &lt;see cref=&quot;T:System.Boolean&quot; /&gt; value that specifies whether the certificate revocation list is checked during authentication.">認証時に証明書失効リストをオンにするかどうかを指定する <see cref="T:System.Boolean" /> 値。</param>
      <exception cref="T:System.Security.Authentication.AuthenticationException" vsli:raw="The authentication failed and left this object in an unusable state.">認証に失敗し、このオブジェクトが使用できない状態のままになっています。</exception>
      <exception cref="T:System.InvalidOperationException" vsli:raw="Authentication has already occurred.  &#xA;  &#xA; -or-  &#xA;  &#xA; Server authentication using this &lt;see cref=&quot;T:System.Net.Security.SslStream&quot; /&gt; was tried previously.  &#xA;  &#xA; -or-  &#xA;  &#xA; Authentication is already in progress.">認証が既に発生しました。  
  
- または - 
この <see cref="T:System.Net.Security.SslStream" /> を使用するサーバーの認証は以前に試行されました。  
  
- または - 
認証が既に実行中です。</exception>
      <exception cref="T:System.ObjectDisposedException" vsli:raw="This object has been closed.">このオブジェクトは閉じられました。</exception>
      <returns vsli:raw="The task object representing the asynchronous operation.">非同期操作を表すタスク オブジェクト。</returns>
    </member>
    <member name="M:System.Net.Security.SslStream.AuthenticateAsServer(System.Net.Security.SslServerAuthenticationOptions)">
      <summary vsli:raw="Called by servers to authenticate the server and optionally the client in a client-server connection using the specified certificate.">サーバーによって呼び出され、指定した証明書を使用して、クライアントとサーバー間の接続でサーバーとオプションでクライアントを認証します。</summary>
      <param name="sslServerAuthenticationOptions" vsli:raw="The property bag for the SSL connection.">SSL 接続のプロパティ バッグ。</param>
      <exception cref="T:System.ArgumentNullException" vsli:raw="&lt;paramref name=&quot;serverCertificate&quot; /&gt; is &lt;see langword=&quot;null&quot; /&gt;.">
        <paramref name="serverCertificate" /> が <see langword="null" />です。</exception>
      <exception cref="T:System.Security.Authentication.AuthenticationException" vsli:raw="The authentication failed and left this object in an unusable state.">認証に失敗し、このオブジェクトが使用できない状態のままになっています。</exception>
      <exception cref="T:System.InvalidOperationException" vsli:raw="Authentication has already occurred.  &#xA;  &#xA; -or-  &#xA;  &#xA; Client authentication using this &lt;see cref=&quot;T:System.Net.Security.SslStream&quot; /&gt; was tried previously.  &#xA;  &#xA; -or-  &#xA;  &#xA; Authentication is already in progress.">認証が既に発生しました。  
  
- または - 
この <see cref="T:System.Net.Security.SslStream" /> を使用するクライアントの認証は以前に試行されました。  
  
- または - 
認証が既に実行中です。</exception>
      <exception cref="T:System.ObjectDisposedException" vsli:raw="This object has been closed.">このオブジェクトは閉じられました。</exception>
      <exception cref="T:System.PlatformNotSupportedException" vsli:raw="The &lt;see cref=&quot;Overload:System.Net.Security.SslStream.AuthenticateAsServer&quot; /&gt; method is not supported on Windows 95, Windows 98, or Windows Millennium.">Windows 95、Windows 98、および Windows ME (Millennium Edition) では、<see cref="Overload:System.Net.Security.SslStream.AuthenticateAsServer" /> メソッドはサポートされていません。</exception>
    </member>
    <member name="M:System.Net.Security.SslStream.AuthenticateAsServer(System.Security.Cryptography.X509Certificates.X509Certificate)">
      <summary vsli:raw="Called by servers to authenticate the server and optionally the client in a client-server connection using the specified certificate.">サーバーによって呼び出され、指定した証明書を使用して、クライアントとサーバー間の接続でサーバーとオプションでクライアントを認証します。</summary>
      <param name="serverCertificate" vsli:raw="The certificate used to authenticate the server.">サーバーの認証に使用する証明書。</param>
      <exception cref="T:System.ArgumentNullException" vsli:raw="&lt;paramref name=&quot;serverCertificate&quot; /&gt; is &lt;see langword=&quot;null&quot; /&gt;.">
        <paramref name="serverCertificate" /> が <see langword="null" />です。</exception>
      <exception cref="T:System.Security.Authentication.AuthenticationException" vsli:raw="The authentication failed and left this object in an unusable state.">認証に失敗し、このオブジェクトが使用できない状態のままになっています。</exception>
      <exception cref="T:System.InvalidOperationException" vsli:raw="Authentication has already occurred.  &#xA;  &#xA; -or-  &#xA;  &#xA; Client authentication using this &lt;see cref=&quot;T:System.Net.Security.SslStream&quot; /&gt; was tried previously.  &#xA;  &#xA; -or-  &#xA;  &#xA; Authentication is already in progress.">認証が既に発生しました。  
  
- または - 
この <see cref="T:System.Net.Security.SslStream" /> を使用するクライアントの認証は以前に試行されました。  
  
- または - 
認証が既に実行中です。</exception>
      <exception cref="T:System.ObjectDisposedException" vsli:raw="This object has been closed.">このオブジェクトは閉じられました。</exception>
      <exception cref="T:System.PlatformNotSupportedException" vsli:raw="The &lt;see cref=&quot;Overload:System.Net.Security.SslStream.AuthenticateAsServer&quot; /&gt; method is not supported on Windows 95, Windows 98, or Windows Millennium.">Windows 95、Windows 98、および Windows ME (Millennium Edition) では、<see cref="Overload:System.Net.Security.SslStream.AuthenticateAsServer" /> メソッドはサポートされていません。</exception>
    </member>
    <member name="M:System.Net.Security.SslStream.AuthenticateAsServer(System.Security.Cryptography.X509Certificates.X509Certificate,System.Boolean,System.Boolean)">
      <summary vsli:raw="Called by servers to authenticate the server and optionally the client in a client-server connection using the specified certificates and requirements, and using the system default security protocol.">指定された証明書と要件、およびシステムの既定のセキュリティ プロトコルを使用して、サーバーおよび必要に応じてクライアントとサーバー間の接続にあるクライアントを認証するために、サーバーによって呼び出されます。</summary>
      <param name="serverCertificate" vsli:raw="The X509Certificate used to authenticate the server.">サーバーの認証に使用される X509Certificate。</param>
      <param name="clientCertificateRequired" vsli:raw="A &lt;see cref=&quot;T:System.Boolean&quot; /&gt; value that specifies whether the client is asked for a certificate for authentication. Note that this is only a request -- if no certificate is provided, the server still accepts the connection request.">認証用の証明書をクライアントに要求するかどうかを指定する <see cref="T:System.Boolean" /> 値。 これは単なる要求であり、証明書が提供されなくても、サーバーは接続要求を受け入れることに注意してください。</param>
      <param name="checkCertificateRevocation" vsli:raw="A &lt;see cref=&quot;T:System.Boolean&quot; /&gt; value that specifies whether the certificate revocation list is checked during authentication.">認証時に証明書失効リストをオンにするかどうかを指定する <see cref="T:System.Boolean" /> 値。</param>
      <exception cref="T:System.ArgumentNullException" vsli:raw="&lt;paramref name=&quot;serverCertificate&quot; /&gt; is &lt;see langword=&quot;null&quot; /&gt;.">
        <paramref name="serverCertificate" /> が <see langword="null" />です。</exception>
      <exception cref="T:System.Security.Authentication.AuthenticationException" vsli:raw="The authentication failed and left this object in an unusable state.">認証に失敗し、このオブジェクトが使用できない状態のままになっています。</exception>
      <exception cref="T:System.InvalidOperationException" vsli:raw="Authentication has already occurred.  &#xA;  &#xA; -or-  &#xA;  &#xA; Client authentication using this &lt;see cref=&quot;T:System.Net.Security.SslStream&quot; /&gt; was tried previously.  &#xA;  &#xA; -or-  &#xA;  &#xA; Authentication is already in progress.">認証が既に発生しました。  
  
- または - 
この <see cref="T:System.Net.Security.SslStream" /> を使用するクライアントの認証は以前に試行されました。  
  
- または - 
認証が既に実行中です。</exception>
      <exception cref="T:System.ObjectDisposedException" vsli:raw="This object has been closed.">このオブジェクトは閉じられました。</exception>
      <exception cref="T:System.PlatformNotSupportedException" vsli:raw="The &lt;see cref=&quot;Overload:System.Net.Security.SslStream.AuthenticateAsServer&quot; /&gt; method is not supported on Windows 95, Windows 98, or Windows Millennium.">Windows 95、Windows 98、および Windows ME (Millennium Edition) では、<see cref="Overload:System.Net.Security.SslStream.AuthenticateAsServer" /> メソッドはサポートされていません。</exception>
    </member>
    <member name="M:System.Net.Security.SslStream.AuthenticateAsServer(System.Security.Cryptography.X509Certificates.X509Certificate,System.Boolean,System.Security.Authentication.SslProtocols,System.Boolean)">
      <summary vsli:raw="Called by servers to authenticate the server and optionally the client in a client-server connection using the specified certificates, requirements and security protocol.">指定された証明書、要件、およびセキュリティ プロトコルを使用して、サーバーおよび必要に応じてクライアントとサーバー間の接続にあるクライアントを認証するために、サーバーによって呼び出されます。</summary>
      <param name="serverCertificate" vsli:raw="The X509Certificate used to authenticate the server.">サーバーの認証に使用される X509Certificate。</param>
      <param name="clientCertificateRequired" vsli:raw="A &lt;see cref=&quot;T:System.Boolean&quot; /&gt; value that specifies whether the client is asked for a certificate for authentication. Note that this is only a request -- if no certificate is provided, the server still accepts the connection request.">認証用の証明書をクライアントに要求するかどうかを指定する <see cref="T:System.Boolean" /> 値。 これは単なる要求であり、証明書が提供されなくても、サーバーは接続要求を受け入れることに注意してください。</param>
      <param name="enabledSslProtocols" vsli:raw="The &lt;see cref=&quot;T:System.Security.Authentication.SslProtocols&quot; /&gt; value that represents protocols used for authentication.">認証に使用されるプロトコルを表す <see cref="T:System.Security.Authentication.SslProtocols" /> 値。</param>
      <param name="checkCertificateRevocation" vsli:raw="A &lt;see cref=&quot;T:System.Boolean&quot; /&gt; value that specifies whether the certificate revocation list is checked during authentication.">認証時に証明書失効リストをオンにするかどうかを指定する <see cref="T:System.Boolean" /> 値。</param>
      <exception cref="T:System.ArgumentNullException" vsli:raw="&lt;paramref name=&quot;serverCertificate&quot; /&gt; is &lt;see langword=&quot;null&quot; /&gt;.">
        <paramref name="serverCertificate" /> が <see langword="null" />です。</exception>
      <exception cref="T:System.ArgumentException" vsli:raw="&lt;paramref name=&quot;enabledSslProtocols&quot; /&gt; is not a valid &lt;see cref=&quot;T:System.Security.Authentication.SslProtocols&quot; /&gt; value.">
        <paramref name="enabledSslProtocols" /> は有効な <see cref="T:System.Security.Authentication.SslProtocols" /> 値ではありません。</exception>
      <exception cref="T:System.Security.Authentication.AuthenticationException" vsli:raw="The authentication failed and left this object in an unusable state.">認証に失敗し、このオブジェクトが使用できない状態のままになっています。</exception>
      <exception cref="T:System.InvalidOperationException" vsli:raw="Authentication has already occurred.  &#xA;  &#xA; -or-  &#xA;  &#xA; Client authentication using this &lt;see cref=&quot;T:System.Net.Security.SslStream&quot; /&gt; was tried previously.  &#xA;  &#xA; -or-  &#xA;  &#xA; Authentication is already in progress.">認証が既に発生しました。  
  
- または - 
この <see cref="T:System.Net.Security.SslStream" /> を使用するクライアントの認証は以前に試行されました。  
  
- または - 
認証が既に実行中です。</exception>
      <exception cref="T:System.ObjectDisposedException" vsli:raw="This object has been closed.">このオブジェクトは閉じられました。</exception>
      <exception cref="T:System.PlatformNotSupportedException" vsli:raw="The &lt;see cref=&quot;Overload:System.Net.Security.SslStream.AuthenticateAsServer&quot; /&gt; method is not supported on Windows 95, Windows 98, or Windows Millennium.">Windows 95、Windows 98、および Windows ME (Millennium Edition) では、<see cref="Overload:System.Net.Security.SslStream.AuthenticateAsServer" /> メソッドはサポートされていません。</exception>
    </member>
    <member name="M:System.Net.Security.SslStream.AuthenticateAsServerAsync(System.Net.Security.ServerOptionsSelectionCallback,System.Object,System.Threading.CancellationToken)">
      <summary vsli:raw="Called by servers to authenticate the server and optionally the client in a client-server connection as an asynchronous operation. The authentication process uses information returned by &lt;paramref name=&quot;optionsCallback&quot; /&gt;.">サーバーによって呼び出され、クライアントとサーバー間の接続で非同期操作としてサーバーと (オプションで) クライアントを認証します。 認証プロセスでは、<paramref name="optionsCallback" /> によって返される情報が使用されます。</summary>
      <param name="optionsCallback" vsli:raw="The callback delegate.">コールバック デリゲート。</param>
      <param name="state" vsli:raw="The state object to pass to &lt;paramref name=&quot;optionsCallback&quot; /&gt; when the callback is invoked.">コールバックが呼び出されたときに <paramref name="optionsCallback" /> に渡す状態オブジェクト。</param>
      <param name="cancellationToken" vsli:raw="The token to monitor for cancellation requests.">キャンセル要求を監視するためのトークン。</param>
      <exception cref="T:System.ArgumentNullException" vsli:raw="&#xA;          Either &lt;see cref=&quot;P:System.Net.Security.SslServerAuthenticationOptions.ServerCertificateSelectionCallback&quot; /&gt; or &lt;see cref=&quot;P:System.Net.Security.SslServerAuthenticationOptions.ServerCertificate&quot; /&gt; or &lt;see cref=&quot;P:System.Net.Security.SslServerAuthenticationOptions.ServerCertificateContext&quot; /&gt; is &lt;see langword=&quot;null&quot; /&gt; and &lt;see cref=&quot;T:System.Net.Security.LocalCertificateSelectionCallback&quot; /&gt; is not set in the &lt;see langword=&quot;SslStream&quot; /&gt; constructor.">
        <see cref="P:System.Net.Security.SslServerAuthenticationOptions.ServerCertificateSelectionCallback" />、<see cref="P:System.Net.Security.SslServerAuthenticationOptions.ServerCertificate" />、または <see cref="P:System.Net.Security.SslServerAuthenticationOptions.ServerCertificateContext" /> が <see langword="null" /> であり、<see cref="T:System.Net.Security.LocalCertificateSelectionCallback" /> が <see langword="SslStream" /> コンストラクターで設定されていません。</exception>
      <exception cref="T:System.Security.Authentication.AuthenticationException" vsli:raw="The authentication failed and left this object in an unusable state.">認証に失敗し、このオブジェクトが使用できない状態のままになっています。</exception>
      <exception cref="T:System.InvalidOperationException" vsli:raw="Authentication has already occurred.  &#xA;  &#xA; -or-  &#xA;  &#xA; Client authentication using this &lt;see cref=&quot;T:System.Net.Security.SslStream&quot; /&gt; was tried previously.  &#xA;  &#xA; -or-  &#xA;  &#xA; Authentication is already in progress.">認証が既に発生しました。  
  
- または - 
この <see cref="T:System.Net.Security.SslStream" /> を使用するクライアントの認証は以前に試行されました。  
  
- または - 
認証が既に実行中です。</exception>
      <exception cref="T:System.ObjectDisposedException" vsli:raw="This object has been closed.">このオブジェクトは閉じられました。</exception>
      <returns vsli:raw="The task object representing the asynchronous operation.">非同期操作を表すタスク オブジェクト。</returns>
    </member>
    <member name="M:System.Net.Security.SslStream.AuthenticateAsServerAsync(System.Net.Security.SslServerAuthenticationOptions,System.Threading.CancellationToken)">
      <summary vsli:raw="Called by servers to authenticate the server and optionally the client in a client-server connection as an asynchronous operation. The authentication process uses information specified in the &lt;paramref name=&quot;sslClientAuthenticationOptions&quot; /&gt; property bag.">サーバーによって呼び出され、クライアントとサーバー間の接続で非同期操作としてサーバーと (オプションで) クライアントを認証します。 認証プロセスでは、<paramref name="sslClientAuthenticationOptions" /> プロパティ バッグで指定されている情報が使用されます。</summary>
      <param name="sslServerAuthenticationOptions" vsli:raw="The property bag for the SSL connection.">SSL 接続のプロパティ バッグ。</param>
      <param name="cancellationToken" vsli:raw="The token to monitor for cancellation requests.">キャンセル要求を監視するためのトークン。</param>
      <exception cref="T:System.ArgumentNullException" vsli:raw="&#xA;          Either &lt;see cref=&quot;P:System.Net.Security.SslServerAuthenticationOptions.ServerCertificateSelectionCallback&quot; /&gt; or &lt;see cref=&quot;P:System.Net.Security.SslServerAuthenticationOptions.ServerCertificate&quot; /&gt; or &lt;see cref=&quot;P:System.Net.Security.SslServerAuthenticationOptions.ServerCertificateContext&quot; /&gt; is &lt;see langword=&quot;null&quot; /&gt; and &lt;see cref=&quot;T:System.Net.Security.LocalCertificateSelectionCallback&quot; /&gt; is not set in the &lt;see langword=&quot;SslStream&quot; /&gt; constructor.">
        <see cref="P:System.Net.Security.SslServerAuthenticationOptions.ServerCertificateSelectionCallback" />、<see cref="P:System.Net.Security.SslServerAuthenticationOptions.ServerCertificate" />、または <see cref="P:System.Net.Security.SslServerAuthenticationOptions.ServerCertificateContext" /> が <see langword="null" /> であり、<see cref="T:System.Net.Security.LocalCertificateSelectionCallback" /> が <see langword="SslStream" /> コンストラクターで設定されていません。</exception>
      <exception cref="T:System.ArgumentNullException" vsli:raw="&lt;paramref name=&quot;sslServerAuthenticationOptions&quot; /&gt; is &lt;see langword=&quot;null&quot; /&gt;.">
        <paramref name="sslServerAuthenticationOptions" /> が <see langword="null" />です。</exception>
      <exception cref="T:System.Security.Authentication.AuthenticationException" vsli:raw="The authentication failed and left this object in an unusable state.">認証に失敗し、このオブジェクトが使用できない状態のままになっています。</exception>
      <exception cref="T:System.InvalidOperationException" vsli:raw="Authentication has already occurred.  &#xA;  &#xA; -or-  &#xA;  &#xA; Client authentication using this &lt;see cref=&quot;T:System.Net.Security.SslStream&quot; /&gt; was tried previously.  &#xA;  &#xA; -or-  &#xA;  &#xA; Authentication is already in progress.">認証が既に発生しました。  
  
- または - 
この <see cref="T:System.Net.Security.SslStream" /> を使用するクライアントの認証は以前に試行されました。  
  
- または - 
認証が既に実行中です。</exception>
      <exception cref="T:System.ObjectDisposedException" vsli:raw="This object has been closed.">このオブジェクトは閉じられました。</exception>
      <returns vsli:raw="The task object representing the asynchronous operation.">非同期操作を表すタスク オブジェクト。</returns>
    </member>
    <member name="M:System.Net.Security.SslStream.AuthenticateAsServerAsync(System.Security.Cryptography.X509Certificates.X509Certificate)">
      <summary vsli:raw="Called by servers to authenticate the server and optionally the client in a client-server connection using the specified certificate as an asynchronous operation.">サーバーによって呼び出され、指定した証明書を使用して、クライアントとサーバー間の接続で非同期操作としてサーバーと (オプションで) クライアントを認証します。</summary>
      <param name="serverCertificate" vsli:raw="The certificate used to authenticate the server.">サーバーの認証に使用する証明書。</param>
      <exception cref="T:System.ArgumentNullException" vsli:raw="&lt;paramref name=&quot;serverCertificate&quot; /&gt; is &lt;see langword=&quot;null&quot; /&gt;.">
        <paramref name="serverCertificate" /> が <see langword="null" />です。</exception>
      <exception cref="T:System.Security.Authentication.AuthenticationException" vsli:raw="The authentication failed and left this object in an unusable state.">認証に失敗し、このオブジェクトが使用できない状態のままになっています。</exception>
      <exception cref="T:System.InvalidOperationException" vsli:raw="Authentication has already occurred.  &#xA;  &#xA; -or-  &#xA;  &#xA; Client authentication using this &lt;see cref=&quot;T:System.Net.Security.SslStream&quot; /&gt; was tried previously.  &#xA;  &#xA; -or-  &#xA;  &#xA; Authentication is already in progress.">認証が既に発生しました。  
  
- または - 
この <see cref="T:System.Net.Security.SslStream" /> を使用するクライアントの認証は以前に試行されました。  
  
- または - 
認証が既に実行中です。</exception>
      <exception cref="T:System.ObjectDisposedException" vsli:raw="This object has been closed.">このオブジェクトは閉じられました。</exception>
      <exception cref="T:System.PlatformNotSupportedException" vsli:raw="The &lt;see cref=&quot;Overload:System.Net.Security.SslStream.AuthenticateAsServerAsync&quot; /&gt; method is not supported on Windows 95, Windows 98, or Windows Millennium.">Windows 95、Windows 98、および Windows ME (Millennium Edition) では、<see cref="Overload:System.Net.Security.SslStream.AuthenticateAsServerAsync" /> メソッドはサポートされていません。</exception>
      <returns vsli:raw="The task object representing the asynchronous operation.">非同期操作を表すタスク オブジェクト。</returns>
    </member>
    <member name="M:System.Net.Security.SslStream.AuthenticateAsServerAsync(System.Security.Cryptography.X509Certificates.X509Certificate,System.Boolean,System.Boolean)">
      <summary vsli:raw="Called by servers to authenticate the server and optionally the client in a client-server connection using the specified certificates, requirements and security protocol as an asynchronous operation.">指定された証明書、要件、およびセキュリティ プロトコルを使用して、サーバーおよび必要に応じてクライアントとサーバー間の接続にあるクライアントを認証するために、非同期操作としてサーバーによって呼び出されます。</summary>
      <param name="serverCertificate" vsli:raw="The X509Certificate used to authenticate the server.">サーバーの認証に使用される X509Certificate。</param>
      <param name="clientCertificateRequired" vsli:raw="A &lt;see cref=&quot;T:System.Boolean&quot; /&gt; value that specifies whether the client is asked for a certificate for authentication. Note that this is only a request -- if no certificate is provided, the server still accepts the connection request.">認証用の証明書をクライアントに要求するかどうかを指定する <see cref="T:System.Boolean" /> 値。 これは単なる要求であり、証明書が提供されなくても、サーバーは接続要求を受け入れることに注意してください。</param>
      <param name="checkCertificateRevocation" vsli:raw="A &lt;see cref=&quot;T:System.Boolean&quot; /&gt; value that specifies whether the certificate revocation list is checked during authentication.">認証時に証明書失効リストをオンにするかどうかを指定する <see cref="T:System.Boolean" /> 値。</param>
      <exception cref="T:System.ArgumentNullException" vsli:raw="&lt;paramref name=&quot;serverCertificate&quot; /&gt; is &lt;see langword=&quot;null&quot; /&gt;.">
        <paramref name="serverCertificate" /> が <see langword="null" />です。</exception>
      <exception cref="T:System.Security.Authentication.AuthenticationException" vsli:raw="The authentication failed and left this object in an unusable state.">認証に失敗し、このオブジェクトが使用できない状態のままになっています。</exception>
      <exception cref="T:System.InvalidOperationException" vsli:raw="Authentication has already occurred.  &#xA;  &#xA; -or-  &#xA;  &#xA; Client authentication using this &lt;see cref=&quot;T:System.Net.Security.SslStream&quot; /&gt; was tried previously.  &#xA;  &#xA; -or-  &#xA;  &#xA; Authentication is already in progress.">認証が既に発生しました。  
  
- または - 
この <see cref="T:System.Net.Security.SslStream" /> を使用するクライアントの認証は以前に試行されました。  
  
- または - 
認証が既に実行中です。</exception>
      <exception cref="T:System.ObjectDisposedException" vsli:raw="This object has been closed.">このオブジェクトは閉じられました。</exception>
      <returns vsli:raw="The task object representing the asynchronous operation.">非同期操作を表すタスク オブジェクト。</returns>
    </member>
    <member name="M:System.Net.Security.SslStream.AuthenticateAsServerAsync(System.Security.Cryptography.X509Certificates.X509Certificate,System.Boolean,System.Security.Authentication.SslProtocols,System.Boolean)">
      <summary vsli:raw="Called by servers to authenticate the server and optionally the client in a client-server connection using the specified certificates, requirements and security protocol as an asynchronous operation.">指定された証明書、要件、およびセキュリティ プロトコルを使用して、サーバーおよび必要に応じてクライアントとサーバー間の接続にあるクライアントを認証するために、非同期操作としてサーバーによって呼び出されます。</summary>
      <param name="serverCertificate" vsli:raw="The X509Certificate used to authenticate the server.">サーバーの認証に使用される X509Certificate。</param>
      <param name="clientCertificateRequired" vsli:raw="A &lt;see cref=&quot;T:System.Boolean&quot; /&gt; value that specifies whether the client is asked for a certificate for authentication. Note that this is only a request -- if no certificate is provided, the server still accepts the connection request.">認証用の証明書をクライアントに要求するかどうかを指定する <see cref="T:System.Boolean" /> 値。 これは単なる要求であり、証明書が提供されなくても、サーバーは接続要求を受け入れることに注意してください。</param>
      <param name="enabledSslProtocols" vsli:raw="The &lt;see cref=&quot;T:System.Security.Authentication.SslProtocols&quot; /&gt; value that represents protocols used for authentication.">認証に使用されるプロトコルを表す <see cref="T:System.Security.Authentication.SslProtocols" /> 値。</param>
      <param name="checkCertificateRevocation" vsli:raw="A &lt;see cref=&quot;T:System.Boolean&quot; /&gt; value that specifies whether the certificate revocation list is checked during authentication.">認証時に証明書失効リストをオンにするかどうかを指定する <see cref="T:System.Boolean" /> 値。</param>
      <exception cref="T:System.ArgumentNullException" vsli:raw="&lt;paramref name=&quot;serverCertificate&quot; /&gt; is &lt;see langword=&quot;null&quot; /&gt;.">
        <paramref name="serverCertificate" /> が <see langword="null" />です。</exception>
      <exception cref="T:System.Security.Authentication.AuthenticationException" vsli:raw="The authentication failed and left this object in an unusable state.">認証に失敗し、このオブジェクトが使用できない状態のままになっています。</exception>
      <exception cref="T:System.InvalidOperationException" vsli:raw="Authentication has already occurred.  &#xA;  &#xA; -or-  &#xA;  &#xA; Client authentication using this &lt;see cref=&quot;T:System.Net.Security.SslStream&quot; /&gt; was tried previously.  &#xA;  &#xA; -or-  &#xA;  &#xA; Authentication is already in progress.">認証が既に発生しました。  
  
- または - 
この <see cref="T:System.Net.Security.SslStream" /> を使用するクライアントの認証は以前に試行されました。  
  
- または - 
認証が既に実行中です。</exception>
      <exception cref="T:System.ObjectDisposedException" vsli:raw="This object has been closed.">このオブジェクトは閉じられました。</exception>
      <returns vsli:raw="The task object representing the asynchronous operation.">非同期操作を表すタスク オブジェクト。</returns>
    </member>
    <member name="M:System.Net.Security.SslStream.BeginAuthenticateAsClient(System.String,System.AsyncCallback,System.Object)">
      <summary vsli:raw="Called by clients to begin an asynchronous operation to authenticate the server and optionally the client.">クライアントによって呼び出され、サーバーとオプションでクライアントを認証する非同期操作を開始します。</summary>
      <param name="targetHost" vsli:raw="The name of the server that shares this &lt;see cref=&quot;T:System.Net.Security.SslStream&quot; /&gt;.">この <see cref="T:System.Net.Security.SslStream" /> を共有するサーバーの名前。</param>
      <param name="asyncCallback" vsli:raw="An &lt;see cref=&quot;T:System.AsyncCallback&quot; /&gt; delegate that references the method to invoke when the authentication is complete.">認証完了時に呼び出すメソッドを参照する <see cref="T:System.AsyncCallback" /> デリゲート。</param>
      <param name="asyncState" vsli:raw="A user-defined object that contains information about the operation. This object is passed to the &lt;paramref name=&quot;asyncCallback&quot; /&gt; delegate when the operation completes.">操作に関する情報を格納するユーザー定義のオブジェクト。 このオブジェクトは、操作の完了時に <paramref name="asyncCallback" /> デリゲートに渡されます。</param>
      <exception cref="T:System.ArgumentNullException" vsli:raw="&lt;paramref name=&quot;targetHost&quot; /&gt; is &lt;see langword=&quot;null&quot; /&gt;.">
        <paramref name="targetHost" /> が <see langword="null" />です。</exception>
      <exception cref="T:System.Security.Authentication.AuthenticationException" vsli:raw="The authentication failed and left this object in an unusable state.">認証に失敗し、このオブジェクトが使用できない状態のままになっています。</exception>
      <exception cref="T:System.InvalidOperationException" vsli:raw="Authentication has already occurred.  &#xA;  &#xA; -or-  &#xA;  &#xA; Server authentication using this &lt;see cref=&quot;T:System.Net.Security.SslStream&quot; /&gt; was tried previously.  &#xA;  &#xA; -or-  &#xA;  &#xA; Authentication is already in progress.">認証が既に発生しました。  
  
- または - 
この <see cref="T:System.Net.Security.SslStream" /> を使用するサーバーの認証は以前に試行されました。  
  
- または - 
認証が既に実行中です。</exception>
      <exception cref="T:System.ObjectDisposedException" vsli:raw="This object has been closed.">このオブジェクトは閉じられました。</exception>
      <returns vsli:raw="An &lt;see cref=&quot;T:System.IAsyncResult&quot; /&gt; object that indicates the status of the asynchronous operation.">非同期操作のステータスを示す <see cref="T:System.IAsyncResult" /> オブジェクト。</returns>
    </member>
    <member name="M:System.Net.Security.SslStream.BeginAuthenticateAsClient(System.String,System.Security.Cryptography.X509Certificates.X509CertificateCollection,System.Boolean,System.AsyncCallback,System.Object)">
      <summary vsli:raw="Called by clients to begin an asynchronous operation to authenticate the server and optionally the client using the specified certificates and the system default security protocol.">指定された証明書およびシステムの既定のセキュリティ プロトコルを使用して、サーバー、および必要に応じてクライアントを認証する非同期操作を開始するために、クライアントによって呼び出されます。</summary>
      <param name="targetHost" vsli:raw="The name of the server that shares this &lt;see cref=&quot;T:System.Net.Security.SslStream&quot; /&gt;.">この <see cref="T:System.Net.Security.SslStream" /> を共有するサーバーの名前。</param>
      <param name="clientCertificates" vsli:raw="The &lt;see cref=&quot;T:System.Security.Cryptography.X509Certificates.X509CertificateCollection&quot; /&gt; containing client certificates.">クライアント証明書を含んでいる <see cref="T:System.Security.Cryptography.X509Certificates.X509CertificateCollection" />。</param>
      <param name="checkCertificateRevocation" vsli:raw="A &lt;see cref=&quot;T:System.Boolean&quot; /&gt; value that specifies whether the certificate revocation list is checked during authentication.">認証時に証明書失効リストをオンにするかどうかを指定する <see cref="T:System.Boolean" /> 値。</param>
      <param name="asyncCallback" vsli:raw="An &lt;see cref=&quot;T:System.AsyncCallback&quot; /&gt; delegate that references the method to invoke when the authentication is complete.">認証完了時に呼び出すメソッドを参照する <see cref="T:System.AsyncCallback" /> デリゲート。</param>
      <param name="asyncState" vsli:raw="A user-defined object that contains information about the operation. This object is passed to the &lt;paramref name=&quot;asyncCallback&quot; /&gt; delegate when the operation completes.">操作に関する情報を格納するユーザー定義のオブジェクト。 このオブジェクトは、操作の完了時に <paramref name="asyncCallback" /> デリゲートに渡されます。</param>
      <exception cref="T:System.ArgumentNullException" vsli:raw="&lt;paramref name=&quot;targetHost&quot; /&gt; is &lt;see langword=&quot;null&quot; /&gt;.">
        <paramref name="targetHost" /> が <see langword="null" />です。</exception>
      <exception cref="T:System.Security.Authentication.AuthenticationException" vsli:raw="The authentication failed and left this object in an unusable state.">認証に失敗し、このオブジェクトが使用できない状態のままになっています。</exception>
      <exception cref="T:System.InvalidOperationException" vsli:raw="Authentication has already occurred.  &#xA;  &#xA; -or-  &#xA;  &#xA; Server authentication using this &lt;see cref=&quot;T:System.Net.Security.SslStream&quot; /&gt; was tried previously.  &#xA;  &#xA; -or-  &#xA;  &#xA; Authentication is already in progress.">認証が既に発生しました。  
  
- または - 
この <see cref="T:System.Net.Security.SslStream" /> を使用するサーバーの認証は以前に試行されました。  
  
- または - 
認証が既に実行中です。</exception>
      <exception cref="T:System.ObjectDisposedException" vsli:raw="This object has been closed.">このオブジェクトは閉じられました。</exception>
      <returns vsli:raw="An &lt;see cref=&quot;T:System.IAsyncResult&quot; /&gt; object that indicates the status of the asynchronous operation.">非同期操作のステータスを示す <see cref="T:System.IAsyncResult" /> オブジェクト。</returns>
    </member>
    <member name="M:System.Net.Security.SslStream.BeginAuthenticateAsClient(System.String,System.Security.Cryptography.X509Certificates.X509CertificateCollection,System.Security.Authentication.SslProtocols,System.Boolean,System.AsyncCallback,System.Object)">
      <summary vsli:raw="Called by clients to begin an asynchronous operation to authenticate the server and optionally the client using the specified certificates and security protocol.">クライアントによって呼び出され、指定した証明書とセキュリティ プロトコルを使用して、サーバーとオプションでクライアントを認証する非同期操作を開始します。</summary>
      <param name="targetHost" vsli:raw="The name of the server that shares this &lt;see cref=&quot;T:System.Net.Security.SslStream&quot; /&gt;.">この <see cref="T:System.Net.Security.SslStream" /> を共有するサーバーの名前。</param>
      <param name="clientCertificates" vsli:raw="The &lt;see cref=&quot;T:System.Security.Cryptography.X509Certificates.X509CertificateCollection&quot; /&gt; containing client certificates.">クライアント証明書を含んでいる <see cref="T:System.Security.Cryptography.X509Certificates.X509CertificateCollection" />。</param>
      <param name="enabledSslProtocols" vsli:raw="The &lt;see cref=&quot;T:System.Security.Authentication.SslProtocols&quot; /&gt; value that represents protocols used for authentication.">認証に使用されるプロトコルを表す <see cref="T:System.Security.Authentication.SslProtocols" /> 値。</param>
      <param name="checkCertificateRevocation" vsli:raw="A &lt;see cref=&quot;T:System.Boolean&quot; /&gt; value that specifies whether the certificate revocation list is checked during authentication.">認証時に証明書失効リストをオンにするかどうかを指定する <see cref="T:System.Boolean" /> 値。</param>
      <param name="asyncCallback" vsli:raw="An &lt;see cref=&quot;T:System.AsyncCallback&quot; /&gt; delegate that references the method to invoke when the authentication is complete.">認証完了時に呼び出すメソッドを参照する <see cref="T:System.AsyncCallback" /> デリゲート。</param>
      <param name="asyncState" vsli:raw="A user-defined object that contains information about the operation. This object is passed to the &lt;paramref name=&quot;asyncCallback&quot; /&gt; delegate when the operation completes.">操作に関する情報を格納するユーザー定義のオブジェクト。 このオブジェクトは、操作の完了時に <paramref name="asyncCallback" /> デリゲートに渡されます。</param>
      <exception cref="T:System.ArgumentNullException" vsli:raw="&lt;paramref name=&quot;targetHost&quot; /&gt; is &lt;see langword=&quot;null&quot; /&gt;.">
        <paramref name="targetHost" /> が <see langword="null" />です。</exception>
      <exception cref="T:System.ArgumentException" vsli:raw="&lt;paramref name=&quot;enabledSslProtocols&quot; /&gt; is not a valid &lt;see cref=&quot;T:System.Security.Authentication.SslProtocols&quot; /&gt; value.">
        <paramref name="enabledSslProtocols" /> は有効な <see cref="T:System.Security.Authentication.SslProtocols" /> 値ではありません。</exception>
      <exception cref="T:System.Security.Authentication.AuthenticationException" vsli:raw="The authentication failed and left this object in an unusable state.">認証に失敗し、このオブジェクトが使用できない状態のままになっています。</exception>
      <exception cref="T:System.InvalidOperationException" vsli:raw="Authentication has already occurred.  &#xA;  &#xA; -or-  &#xA;  &#xA; Server authentication using this &lt;see cref=&quot;T:System.Net.Security.SslStream&quot; /&gt; was tried previously.  &#xA;  &#xA; -or-  &#xA;  &#xA; Authentication is already in progress.">認証が既に発生しました。  
  
- または - 
この <see cref="T:System.Net.Security.SslStream" /> を使用するサーバーの認証は以前に試行されました。  
  
- または - 
認証が既に実行中です。</exception>
      <exception cref="T:System.ObjectDisposedException" vsli:raw="This object has been closed.">このオブジェクトは閉じられました。</exception>
      <returns vsli:raw="An &lt;see cref=&quot;T:System.IAsyncResult&quot; /&gt; object that indicates the status of the asynchronous operation.">非同期操作のステータスを示す <see cref="T:System.IAsyncResult" /> オブジェクト。</returns>
    </member>
    <member name="M:System.Net.Security.SslStream.BeginAuthenticateAsServer(System.Security.Cryptography.X509Certificates.X509Certificate,System.AsyncCallback,System.Object)">
      <summary vsli:raw="Called by servers to begin an asynchronous operation to authenticate the client and optionally the server in a client-server connection.">サーバーによって呼び出され、クライアントとサーバー間の接続でクライアントとオプションでサーバーを認証する非同期操作を開始します。</summary>
      <param name="serverCertificate" vsli:raw="The X509Certificate used to authenticate the server.">サーバーの認証に使用される X509Certificate。</param>
      <param name="asyncCallback" vsli:raw="An &lt;see cref=&quot;T:System.AsyncCallback&quot; /&gt; delegate that references the method to invoke when the authentication is complete.">認証完了時に呼び出すメソッドを参照する <see cref="T:System.AsyncCallback" /> デリゲート。</param>
      <param name="asyncState" vsli:raw="A user-defined object that contains information about the operation. This object is passed to the &lt;paramref name=&quot;asyncCallback&quot; /&gt; delegate when the operation completes.">操作に関する情報を格納するユーザー定義のオブジェクト。 このオブジェクトは、操作の完了時に <paramref name="asyncCallback" /> デリゲートに渡されます。</param>
      <exception cref="T:System.ArgumentNullException" vsli:raw="&lt;paramref name=&quot;serverCertificate&quot; /&gt; is &lt;see langword=&quot;null&quot; /&gt;.">
        <paramref name="serverCertificate" /> が <see langword="null" />です。</exception>
      <exception cref="T:System.Security.Authentication.AuthenticationException" vsli:raw="The authentication failed and left this object in an unusable state.">認証に失敗し、このオブジェクトが使用できない状態のままになっています。</exception>
      <exception cref="T:System.InvalidOperationException" vsli:raw="Authentication has already occurred.  &#xA;  &#xA; -or-  &#xA;  &#xA; Client authentication using this &lt;see cref=&quot;T:System.Net.Security.SslStream&quot; /&gt; was tried previously.  &#xA;  &#xA; -or-  &#xA;  &#xA; Authentication is already in progress.">認証が既に発生しました。  
  
- または - 
この <see cref="T:System.Net.Security.SslStream" /> を使用するクライアントの認証は以前に試行されました。  
  
- または - 
認証が既に実行中です。</exception>
      <exception cref="T:System.ObjectDisposedException" vsli:raw="This object has been closed.">このオブジェクトは閉じられました。</exception>
      <exception cref="T:System.PlatformNotSupportedException" vsli:raw="The &lt;see cref=&quot;Overload:System.Net.Security.SslStream.BeginAuthenticateAsServer&quot; /&gt; method is not supported on Windows 95, Windows 98, or Windows Millennium.">Windows 95、Windows 98、および Windows ME (Millennium Edition) では、<see cref="Overload:System.Net.Security.SslStream.BeginAuthenticateAsServer" /> メソッドはサポートされていません。</exception>
      <returns vsli:raw="An &lt;see cref=&quot;T:System.IAsyncResult&quot; /&gt; object indicating the status of the asynchronous operation.">非同期操作の状態を示す <see cref="T:System.IAsyncResult" /> オブジェクト。</returns>
    </member>
    <member name="M:System.Net.Security.SslStream.BeginAuthenticateAsServer(System.Security.Cryptography.X509Certificates.X509Certificate,System.Boolean,System.Boolean,System.AsyncCallback,System.Object)">
      <summary vsli:raw="Called by servers to begin an asynchronous operation to authenticate the server and optionally the client using the specified certificates and requirements, and the system default security protocol.">指定された証明書と要件、およびシステムの既定のセキュリティ プロトコルを使用して、サーバー、および必要に応じてクライアントを認証する非同期操作を開始するために、サーバーによって呼び出されます。</summary>
      <param name="serverCertificate" vsli:raw="The X509Certificate used to authenticate the server.">サーバーの認証に使用される X509Certificate。</param>
      <param name="clientCertificateRequired" vsli:raw="A &lt;see cref=&quot;T:System.Boolean&quot; /&gt; value that specifies whether the client is asked for a certificate for authentication. Note that this is only a request -- if no certificate is provided, the server still accepts the connection request.">認証用の証明書をクライアントに要求するかどうかを指定する <see cref="T:System.Boolean" /> 値。 これは単なる要求であり、証明書が提供されなくても、サーバーは接続要求を受け入れることに注意してください。</param>
      <param name="checkCertificateRevocation" vsli:raw="A &lt;see cref=&quot;T:System.Boolean&quot; /&gt; value that specifies whether the certificate revocation list is checked during authentication.">認証時に証明書失効リストをオンにするかどうかを指定する <see cref="T:System.Boolean" /> 値。</param>
      <param name="asyncCallback" vsli:raw="An &lt;see cref=&quot;T:System.AsyncCallback&quot; /&gt; delegate that references the method to invoke when the authentication is complete.">認証完了時に呼び出すメソッドを参照する <see cref="T:System.AsyncCallback" /> デリゲート。</param>
      <param name="asyncState" vsli:raw="A user-defined object that contains information about the operation. This object is passed to the &lt;paramref name=&quot;asyncCallback&quot; /&gt; delegate when the operation completes.">操作に関する情報を格納するユーザー定義のオブジェクト。 このオブジェクトは、操作の完了時に <paramref name="asyncCallback" /> デリゲートに渡されます。</param>
      <exception cref="T:System.ArgumentNullException" vsli:raw="&lt;paramref name=&quot;serverCertificate&quot; /&gt; is &lt;see langword=&quot;null&quot; /&gt;.">
        <paramref name="serverCertificate" /> が <see langword="null" />です。</exception>
      <exception cref="T:System.Security.Authentication.AuthenticationException" vsli:raw="The authentication failed and left this object in an unusable state.">認証に失敗し、このオブジェクトが使用できない状態のままになっています。</exception>
      <exception cref="T:System.InvalidOperationException" vsli:raw="Authentication has already occurred.  &#xA;  &#xA; -or-  &#xA;  &#xA; Server authentication using this &lt;see cref=&quot;T:System.Net.Security.SslStream&quot; /&gt; was tried previously.  &#xA;  &#xA; -or-  &#xA;  &#xA; Authentication is already in progress.">認証が既に発生しました。  
  
- または - 
この <see cref="T:System.Net.Security.SslStream" /> を使用するサーバーの認証は以前に試行されました。  
  
- または - 
認証が既に実行中です。</exception>
      <exception cref="T:System.ObjectDisposedException" vsli:raw="This object has been closed.">このオブジェクトは閉じられました。</exception>
      <exception cref="T:System.PlatformNotSupportedException" vsli:raw="The &lt;see cref=&quot;Overload:System.Net.Security.SslStream.BeginAuthenticateAsServer&quot; /&gt; method is not supported on Windows 95, Windows 98, or Windows Millennium.">Windows 95、Windows 98、および Windows ME (Millennium Edition) では、<see cref="Overload:System.Net.Security.SslStream.BeginAuthenticateAsServer" /> メソッドはサポートされていません。</exception>
      <returns vsli:raw="An &lt;see cref=&quot;T:System.IAsyncResult&quot; /&gt; object that indicates the status of the asynchronous operation.">非同期操作のステータスを示す <see cref="T:System.IAsyncResult" /> オブジェクト。</returns>
    </member>
    <member name="M:System.Net.Security.SslStream.BeginAuthenticateAsServer(System.Security.Cryptography.X509Certificates.X509Certificate,System.Boolean,System.Security.Authentication.SslProtocols,System.Boolean,System.AsyncCallback,System.Object)">
      <summary vsli:raw="Called by servers to begin an asynchronous operation to authenticate the server and optionally the client using the specified certificates, requirements and security protocol.">指定された証明書、要件、およびセキュリティ プロトコルを使用して、サーバー、および必要に応じてクライアントを認証する非同期操作を開始するために、サーバーによって呼び出されます。</summary>
      <param name="serverCertificate" vsli:raw="The X509Certificate used to authenticate the server.">サーバーの認証に使用される X509Certificate。</param>
      <param name="clientCertificateRequired" vsli:raw="A &lt;see cref=&quot;T:System.Boolean&quot; /&gt; value that specifies whether the client is asked for a certificate for authentication. Note that this is only a request -- if no certificate is provided, the server still accepts the connection request.">認証用の証明書をクライアントに要求するかどうかを指定する <see cref="T:System.Boolean" /> 値。 これは単なる要求であり、証明書が提供されなくても、サーバーは接続要求を受け入れることに注意してください。</param>
      <param name="enabledSslProtocols" vsli:raw="The &lt;see cref=&quot;T:System.Security.Authentication.SslProtocols&quot; /&gt; value that represents protocols used for authentication.">認証に使用されるプロトコルを表す <see cref="T:System.Security.Authentication.SslProtocols" /> 値。</param>
      <param name="checkCertificateRevocation" vsli:raw="A &lt;see cref=&quot;T:System.Boolean&quot; /&gt; value that specifies whether the certificate revocation list is checked during authentication.">認証時に証明書失効リストをオンにするかどうかを指定する <see cref="T:System.Boolean" /> 値。</param>
      <param name="asyncCallback" vsli:raw="An &lt;see cref=&quot;T:System.AsyncCallback&quot; /&gt; delegate that references the method to invoke when the authentication is complete.">認証完了時に呼び出すメソッドを参照する <see cref="T:System.AsyncCallback" /> デリゲート。</param>
      <param name="asyncState" vsli:raw="A user-defined object that contains information about the operation. This object is passed to the &lt;paramref name=&quot;asyncCallback&quot; /&gt; delegate when the operation completes.">操作に関する情報を格納するユーザー定義のオブジェクト。 このオブジェクトは、操作の完了時に <paramref name="asyncCallback" /> デリゲートに渡されます。</param>
      <exception cref="T:System.ArgumentNullException" vsli:raw="&lt;paramref name=&quot;serverCertificate&quot; /&gt; is &lt;see langword=&quot;null&quot; /&gt;.">
        <paramref name="serverCertificate" /> が <see langword="null" />です。</exception>
      <exception cref="T:System.ArgumentException" vsli:raw="&lt;paramref name=&quot;enabledSslProtocols&quot; /&gt; is not a valid &lt;see cref=&quot;T:System.Security.Authentication.SslProtocols&quot; /&gt; value.">
        <paramref name="enabledSslProtocols" /> は有効な <see cref="T:System.Security.Authentication.SslProtocols" /> 値ではありません。</exception>
      <exception cref="T:System.Security.Authentication.AuthenticationException" vsli:raw="The authentication failed and left this object in an unusable state.">認証に失敗し、このオブジェクトが使用できない状態のままになっています。</exception>
      <exception cref="T:System.InvalidOperationException" vsli:raw="Authentication has already occurred.  &#xA;  &#xA; -or-  &#xA;  &#xA; Server authentication using this &lt;see cref=&quot;T:System.Net.Security.SslStream&quot; /&gt; was tried previously.  &#xA;  &#xA; -or-  &#xA;  &#xA; Authentication is already in progress.">認証が既に発生しました。  
  
- または - 
この <see cref="T:System.Net.Security.SslStream" /> を使用するサーバーの認証は以前に試行されました。  
  
- または - 
認証が既に実行中です。</exception>
      <exception cref="T:System.ObjectDisposedException" vsli:raw="This object has been closed.">このオブジェクトは閉じられました。</exception>
      <exception cref="T:System.PlatformNotSupportedException" vsli:raw="The &lt;see cref=&quot;Overload:System.Net.Security.SslStream.BeginAuthenticateAsServer&quot; /&gt; method is not supported on Windows 95, Windows 98, or Windows Millennium.">Windows 95、Windows 98、および Windows ME (Millennium Edition) では、<see cref="Overload:System.Net.Security.SslStream.BeginAuthenticateAsServer" /> メソッドはサポートされていません。</exception>
      <returns vsli:raw="An &lt;see cref=&quot;T:System.IAsyncResult&quot; /&gt; object that indicates the status of the asynchronous operation.">非同期操作のステータスを示す <see cref="T:System.IAsyncResult" /> オブジェクト。</returns>
    </member>
    <member name="M:System.Net.Security.SslStream.BeginRead(System.Byte[],System.Int32,System.Int32,System.AsyncCallback,System.Object)">
      <summary vsli:raw="Begins an asynchronous read operation that reads data from the stream and stores it in the specified array.">ストリームからデータを読み取り、指定した配列に格納する非同期読み取り操作を開始します。</summary>
      <param name="buffer" vsli:raw="A &lt;see cref=&quot;T:System.Byte&quot; /&gt; array that receives the bytes read from the stream.">ストリームから読み取ったバイトを受け取る <see cref="T:System.Byte" /> 配列。</param>
      <param name="offset" vsli:raw="The zero-based location in &lt;paramref name=&quot;buffer&quot; /&gt; at which to begin storing the data read from this stream.">このストリームから読み取ったデータの格納を開始する位置を示す、<paramref name="buffer" /> 内のインデックス番号が 0 から始まる位置。</param>
      <param name="count" vsli:raw="The maximum number of bytes to read from the stream.">ストリームから読み取る最大バイト数。</param>
      <param name="asyncCallback" vsli:raw="An &lt;see cref=&quot;T:System.AsyncCallback&quot; /&gt; delegate that references the method to invoke when the read operation is complete.">読み取り操作の完了時に呼び出すメソッドを参照する <see cref="T:System.AsyncCallback" /> デリゲート。</param>
      <param name="asyncState" vsli:raw="A user-defined object that contains information about the read operation. This object is passed to the &lt;paramref name=&quot;asyncCallback&quot; /&gt; delegate when the operation completes.">読み取り操作に関する情報を格納するユーザー定義のオブジェクト。 このオブジェクトは、操作の完了時に <paramref name="asyncCallback" /> デリゲートに渡されます。</param>
      <exception cref="T:System.ArgumentNullException" vsli:raw="&lt;paramref name=&quot;buffer&quot; /&gt; is &lt;see langword=&quot;null&quot; /&gt;.">
        <paramref name="buffer" /> が <see langword="null" />です。</exception>
      <exception cref="T:System.ArgumentException" vsli:raw="&lt;paramref name=&quot;offset&quot; /&gt; is less than zero.&#xA;&#xA;-or-&#xA;&#xA;&lt;paramref name=&quot;offset&quot; /&gt; is greater than the length of &lt;paramref name=&quot;buffer&quot; /&gt;.  &#xA;&#xA;-or-  &#xA;  &#xA; &lt;paramref name=&quot;offset&quot; /&gt; + count is greater than the length of &lt;paramref name=&quot;buffer&quot; /&gt;.">
        <paramref name="offset" /> が 0 未満です。

- または -

<paramref name="offset" /> が <paramref name="buffer" /> の長さを超えています。  

- または - 
 <paramref name="offset" /> に count を加算した値が、<paramref name="buffer" /> の長さを超えています。</exception>
      <exception cref="T:System.IO.IOException" vsli:raw="The read operation failed.  &#xA;  &#xA; -or-  &#xA;  &#xA; Encryption is in use, but the data could not be decrypted.">読み取り操作に失敗しました。  
  
 - または -  
  
 暗号化が使用されていますが、データを復号化できませんでした。</exception>
      <exception cref="T:System.NotSupportedException" vsli:raw="There is already a read operation in progress.">既に実行中の読み取り操作が存在します。</exception>
      <exception cref="T:System.ObjectDisposedException" vsli:raw="This object has been closed.">このオブジェクトは閉じられました。</exception>
      <exception cref="T:System.InvalidOperationException" vsli:raw="Authentication has not occurred.">認証が行われていません。</exception>
      <returns vsli:raw="An &lt;see cref=&quot;T:System.IAsyncResult&quot; /&gt; object that indicates the status of the asynchronous operation.">非同期操作のステータスを示す <see cref="T:System.IAsyncResult" /> オブジェクト。</returns>
    </member>
    <member name="M:System.Net.Security.SslStream.BeginWrite(System.Byte[],System.Int32,System.Int32,System.AsyncCallback,System.Object)">
      <summary vsli:raw="Begins an asynchronous write operation that writes &lt;see cref=&quot;T:System.Byte&quot; /&gt;s from the specified buffer to the stream.">指定したバッファーからストリームに <see cref="T:System.Byte" /> を書き込む非同期書き込み操作を開始します。</summary>
      <param name="buffer" vsli:raw="A &lt;see cref=&quot;T:System.Byte&quot; /&gt; array that supplies the bytes to be written to the stream.">ストリームに書き込むバイトを提供する <see cref="T:System.Byte" /> 配列。</param>
      <param name="offset" vsli:raw="The zero-based location in &lt;paramref name=&quot;buffer&quot; /&gt; at which to begin reading bytes to be written to the stream.">ストリームに書き込むバイトの読み取りを開始する位置を示す、<paramref name="buffer" /> 内のインデックス番号が 0 から始まる位置。</param>
      <param name="count" vsli:raw="An &lt;see cref=&quot;T:System.Int32&quot; /&gt; value that specifies the number of bytes to read from &lt;paramref name=&quot;buffer&quot; /&gt;.">
        <paramref name="buffer" /> から読み取るバイト数を指定する <see cref="T:System.Int32" /> 値。</param>
      <param name="asyncCallback" vsli:raw="An &lt;see cref=&quot;T:System.AsyncCallback&quot; /&gt; delegate that references the method to invoke when the write operation is complete.">書き込み操作の完了時に呼び出すメソッドを参照する <see cref="T:System.AsyncCallback" /> デリゲート。</param>
      <param name="asyncState" vsli:raw="A user-defined object that contains information about the write operation. This object is passed to the &lt;paramref name=&quot;asyncCallback&quot; /&gt; delegate when the operation completes.">書き込み操作に関する情報を格納するユーザー定義のオブジェクト。 このオブジェクトは、操作の完了時に <paramref name="asyncCallback" /> デリゲートに渡されます。</param>
      <exception cref="T:System.ArgumentNullException" vsli:raw="&lt;paramref name=&quot;buffer&quot; /&gt; is &lt;see langword=&quot;null&quot; /&gt;.">
        <paramref name="buffer" /> が <see langword="null" />です。</exception>
      <exception cref="T:System.ArgumentException" vsli:raw="&lt;paramref name=&quot;offset&quot; /&gt; is less than zero.&#xA;  &#xA;-or-&#xA;          &#xA;&lt;paramref name=&quot;offset&quot; /&gt; is greater than the length of &lt;paramref name=&quot;buffer&quot; /&gt;.  &#xA;  &#xA;-or-&#xA;  &#xA; &lt;paramref name=&quot;offset&quot; /&gt; + count is greater than the length of &lt;paramref name=&quot;buffer&quot; /&gt;.">
        <paramref name="offset" /> が 0 未満です。
  
- または - 
<paramref name="offset" /> が <paramref name="buffer" /> の長さを超えています。  
  
- または - 
 <paramref name="offset" /> に count を加算した値が、<paramref name="buffer" /> の長さを超えています。</exception>
      <exception cref="T:System.IO.IOException" vsli:raw="The write operation failed.">書き込み操作に失敗しました。</exception>
      <exception cref="T:System.NotSupportedException" vsli:raw="There is already a write operation in progress.">既に実行中の書き込み操作が存在します。</exception>
      <exception cref="T:System.ObjectDisposedException" vsli:raw="This object has been closed.">このオブジェクトは閉じられました。</exception>
      <exception cref="T:System.InvalidOperationException" vsli:raw="Authentication has not occurred.">認証が行われていません。</exception>
      <returns vsli:raw="An &lt;see cref=&quot;T:System.IAsyncResult&quot; /&gt; object indicating the status of the asynchronous operation.">非同期操作の状態を示す <see cref="T:System.IAsyncResult" /> オブジェクト。</returns>
    </member>
    <member name="M:System.Net.Security.SslStream.Dispose(System.Boolean)">
      <summary vsli:raw="Releases the unmanaged resources used by the &lt;see cref=&quot;T:System.Net.Security.SslStream&quot; /&gt; and optionally releases the managed resources.">
        <see cref="T:System.Net.Security.SslStream" /> によって使用されているアンマネージド リソースを解放し、オプションでマネージド リソースも解放します。</summary>
      <param name="disposing" vsli:raw="&lt;see langword=&quot;true&quot; /&gt; to release both managed and unmanaged resources; &lt;see langword=&quot;false&quot; /&gt; to release only unmanaged resources.">マネージド リソースとアンマネージド リソースの両方を解放する場合は <see langword="true" />。アンマネージド リソースだけを解放する場合は <see langword="false" />。</param>
    </member>
    <member name="M:System.Net.Security.SslStream.DisposeAsync">
      <summary vsli:raw="Asynchronously releases the unmanaged and managed resources used by the &lt;see cref=&quot;T:System.Net.Security.SslStream&quot; /&gt;.">
        <see cref="T:System.Net.Security.SslStream" /> によって使用されているアンマネージドまたはマネージド リソースを非同期に解放します。</summary>
      <returns vsli:raw="A task that represents the asynchronous dispose operation.">非同期の破棄操作を表すタスク。</returns>
    </member>
    <member name="M:System.Net.Security.SslStream.EndAuthenticateAsClient(System.IAsyncResult)">
      <summary vsli:raw="Ends a pending asynchronous server authentication operation started with a previous call to &lt;see cref=&quot;Overload:System.Net.Security.SslStream.BeginAuthenticateAsClient&quot; /&gt;.">
        <see cref="Overload:System.Net.Security.SslStream.BeginAuthenticateAsClient" /> の以前の呼び出しで開始した保留中の非同期のサーバー認証操作を終了します。</summary>
      <param name="asyncResult" vsli:raw="An &lt;see cref=&quot;T:System.IAsyncResult&quot; /&gt; instance returned by a call to &lt;see cref=&quot;Overload:System.Net.Security.SslStream.BeginAuthenticateAsClient&quot; /&gt;.">
        <see cref="Overload:System.Net.Security.SslStream.BeginAuthenticateAsClient" /> の呼び出しによって返される <see cref="T:System.IAsyncResult" /> インスタンス。</param>
      <exception cref="T:System.ArgumentNullException" vsli:raw="&lt;paramref name=&quot;asyncResult&quot; /&gt; is &lt;see langword=&quot;null&quot; /&gt;.">
        <paramref name="asyncResult" /> が <see langword="null" />です。</exception>
      <exception cref="T:System.ArgumentException" vsli:raw="&lt;paramref name=&quot;asyncResult&quot; /&gt; was not created by a call to &lt;see cref=&quot;Overload:System.Net.Security.SslStream.BeginAuthenticateAsClient&quot; /&gt;.">
        <see cref="Overload:System.Net.Security.SslStream.BeginAuthenticateAsClient" /> への呼び出しで <paramref name="asyncResult" /> が作成されませんでした。</exception>
      <exception cref="T:System.Security.Authentication.AuthenticationException" vsli:raw="The authentication failed and left this object in an unusable state.">認証に失敗し、このオブジェクトが使用できない状態のままになっています。</exception>
      <exception cref="T:System.InvalidOperationException" vsli:raw="There is no pending server authentication to complete.">完了する保留中のサーバー認証がありません。</exception>
    </member>
    <member name="M:System.Net.Security.SslStream.EndAuthenticateAsServer(System.IAsyncResult)">
      <summary vsli:raw="Ends a pending asynchronous client authentication operation started with a previous call to &lt;see cref=&quot;Overload:System.Net.Security.SslStream.BeginAuthenticateAsClient&quot; /&gt;.">
        <see cref="Overload:System.Net.Security.SslStream.BeginAuthenticateAsClient" /> の以前の呼び出しで開始した保留中の非同期のクライアント認証操作を終了します。</summary>
      <param name="asyncResult" vsli:raw="An &lt;see cref=&quot;T:System.IAsyncResult&quot; /&gt; instance returned by a call to &lt;see cref=&quot;Overload:System.Net.Security.SslStream.BeginAuthenticateAsClient&quot; /&gt;.">
        <see cref="Overload:System.Net.Security.SslStream.BeginAuthenticateAsClient" /> の呼び出しによって返される <see cref="T:System.IAsyncResult" /> インスタンス。</param>
      <exception cref="T:System.ArgumentNullException" vsli:raw="&lt;paramref name=&quot;asyncResult&quot; /&gt; is &lt;see langword=&quot;null&quot; /&gt;.">
        <paramref name="asyncResult" /> が <see langword="null" />です。</exception>
      <exception cref="T:System.ArgumentException" vsli:raw="&lt;paramref name=&quot;asyncResult&quot; /&gt; was not created by a call to &lt;see cref=&quot;Overload:System.Net.Security.SslStream.BeginAuthenticateAsClient&quot; /&gt;.">
        <see cref="Overload:System.Net.Security.SslStream.BeginAuthenticateAsClient" /> への呼び出しで <paramref name="asyncResult" /> が作成されませんでした。</exception>
      <exception cref="T:System.Security.Authentication.AuthenticationException" vsli:raw="The authentication failed and left this object in an unusable state.">認証に失敗し、このオブジェクトが使用できない状態のままになっています。</exception>
      <exception cref="T:System.InvalidOperationException" vsli:raw="There is no pending client authentication to complete.">完了する保留中のクライアント認証がありません。</exception>
    </member>
    <member name="M:System.Net.Security.SslStream.EndRead(System.IAsyncResult)">
      <summary vsli:raw="Ends an asynchronous read operation started with a previous call to &lt;see cref=&quot;M:System.Net.Security.SslStream.BeginRead(System.Byte[],System.Int32,System.Int32,System.AsyncCallback,System.Object)&quot; /&gt;.">
        <see cref="M:System.Net.Security.SslStream.BeginRead(System.Byte[],System.Int32,System.Int32,System.AsyncCallback,System.Object)" /> の以前の呼び出しで開始した非同期読み取り操作を終了します。</summary>
      <param name="asyncResult" vsli:raw="An &lt;see cref=&quot;T:System.IAsyncResult&quot; /&gt; instance returned by a call to &lt;see cref=&quot;M:System.Net.Security.SslStream.BeginRead(System.Byte[],System.Int32,System.Int32,System.AsyncCallback,System.Object)&quot; /&gt;.">
        <see cref="M:System.Net.Security.SslStream.BeginRead(System.Byte[],System.Int32,System.Int32,System.AsyncCallback,System.Object)" /> の呼び出しによって返される <see cref="T:System.IAsyncResult" /> インスタンス。</param>
      <exception cref="T:System.ArgumentNullException" vsli:raw="&lt;paramref name=&quot;asyncResult&quot; /&gt; is &lt;see langword=&quot;null&quot; /&gt;.">
        <paramref name="asyncResult" /> が <see langword="null" />です。</exception>
      <exception cref="T:System.ArgumentException" vsli:raw="&lt;paramref name=&quot;asyncResult&quot; /&gt; was not created by a call to &lt;see cref=&quot;M:System.Net.Security.SslStream.BeginRead(System.Byte[],System.Int32,System.Int32,System.AsyncCallback,System.Object)&quot; /&gt;.">
        <see cref="M:System.Net.Security.SslStream.BeginRead(System.Byte[],System.Int32,System.Int32,System.AsyncCallback,System.Object)" /> への呼び出しで <paramref name="asyncResult" /> が作成されませんでした。</exception>
      <exception cref="T:System.InvalidOperationException" vsli:raw="There is no pending read operation to complete.&#xA;&#xA;-or-&#xA;&#xA;Authentication has not occurred.">完了する保留中の読み取り操作がありません。

- または -

認証が行われていません。</exception>
      <exception cref="T:System.IO.IOException" vsli:raw="The read operation failed.">読み取り操作に失敗しました。</exception>
      <returns vsli:raw="A &lt;see cref=&quot;T:System.Int32&quot; /&gt; value that specifies the number of bytes read from the underlying stream.">基になるストリームから読み取るバイト数を指定する <see cref="T:System.Int32" /> 値。</returns>
    </member>
    <member name="M:System.Net.Security.SslStream.EndWrite(System.IAsyncResult)">
      <summary vsli:raw="Ends an asynchronous write operation started with a previous call to &lt;see cref=&quot;M:System.Net.Security.SslStream.BeginWrite(System.Byte[],System.Int32,System.Int32,System.AsyncCallback,System.Object)&quot; /&gt;.">
        <see cref="M:System.Net.Security.SslStream.BeginWrite(System.Byte[],System.Int32,System.Int32,System.AsyncCallback,System.Object)" /> の以前の呼び出しで開始した非同期書き込み操作を終了します。</summary>
      <param name="asyncResult" vsli:raw="An &lt;see cref=&quot;T:System.IAsyncResult&quot; /&gt; instance returned by a call to &lt;see cref=&quot;M:System.Net.Security.SslStream.BeginWrite(System.Byte[],System.Int32,System.Int32,System.AsyncCallback,System.Object)&quot; /&gt;.">
        <see cref="M:System.Net.Security.SslStream.BeginWrite(System.Byte[],System.Int32,System.Int32,System.AsyncCallback,System.Object)" /> の呼び出しによって返される <see cref="T:System.IAsyncResult" /> インスタンス。</param>
      <exception cref="T:System.ArgumentNullException" vsli:raw="&lt;paramref name=&quot;asyncResult&quot; /&gt; is &lt;see langword=&quot;null&quot; /&gt;.">
        <paramref name="asyncResult" /> が <see langword="null" />です。</exception>
      <exception cref="T:System.ArgumentException" vsli:raw="&lt;paramref name=&quot;asyncResult&quot; /&gt; was not created by a call to &lt;see cref=&quot;M:System.Net.Security.SslStream.BeginWrite(System.Byte[],System.Int32,System.Int32,System.AsyncCallback,System.Object)&quot; /&gt;.">
        <see cref="M:System.Net.Security.SslStream.BeginWrite(System.Byte[],System.Int32,System.Int32,System.AsyncCallback,System.Object)" /> への呼び出しで <paramref name="asyncResult" /> が作成されませんでした。</exception>
      <exception cref="T:System.InvalidOperationException" vsli:raw="There is no pending write operation to complete.&#xA;&#xA;-or-&#xA;&#xA;Authentication has not occurred.">完了する保留中の書き込み操作がありません。

- または -

認証が行われていません。</exception>
      <exception cref="T:System.IO.IOException" vsli:raw="The write operation failed.">書き込み操作に失敗しました。</exception>
    </member>
    <member name="M:System.Net.Security.SslStream.Finalize">
      <summary vsli:raw="Releases all resources used by the &lt;see cref=&quot;T:System.Net.Security.SslStream&quot; /&gt;.">
        <see cref="T:System.Net.Security.SslStream" /> によって使用されているすべてのリソースを解放します。</summary>
    </member>
    <member name="M:System.Net.Security.SslStream.Flush">
      <summary vsli:raw="Causes any buffered data to be written to the underlying device.">バッファーに格納されたデータが基になるデバイスに書き込まれるようにします。</summary>
    </member>
    <member name="M:System.Net.Security.SslStream.FlushAsync(System.Threading.CancellationToken)">
      <summary vsli:raw="Asynchronously writes any buffered data to the underlying device.">バッファー内のデータを基になるデバイスに非同期に書き込みます。</summary>
      <param name="cancellationToken" vsli:raw="The token to monitor for cancellation requests.">キャンセル要求を監視するためのトークン。</param>
      <returns vsli:raw="A task that represents the asynchronous flush operation.">非同期のフラッシュ操作を表すタスク。</returns>
    </member>
    <member name="M:System.Net.Security.SslStream.Read(System.Byte[],System.Int32,System.Int32)">
      <summary vsli:raw="Reads data from this stream and stores it in the specified array.">このストリームからデータを読み取り、指定した配列に格納します。</summary>
      <param name="buffer" vsli:raw="A &lt;see cref=&quot;T:System.Byte&quot; /&gt; array that receives the bytes read from this stream.">このストリームから読み取ったバイトを受け取る <see cref="T:System.Byte" /> 配列。</param>
      <param name="offset" vsli:raw="A &lt;see cref=&quot;T:System.Int32&quot; /&gt; that contains the zero-based location in &lt;paramref name=&quot;buffer&quot; /&gt; at which to begin storing the data read from this stream.">このストリームから読み取ったデータの格納を開始する位置を示す、<paramref name="buffer" /> 内のインデックス番号が 0 から始まる位置を格納する <see cref="T:System.Int32" />。</param>
      <param name="count" vsli:raw="A &lt;see cref=&quot;T:System.Int32&quot; /&gt; that contains the maximum number of bytes to read from this stream.">このストリームから読み取る最大バイト数を格納する <see cref="T:System.Int32" />。</param>
      <exception cref="T:System.ArgumentNullException" vsli:raw="&lt;paramref name=&quot;buffer&quot; /&gt; is &lt;see langword=&quot;null&quot; /&gt;.">
        <paramref name="buffer" /> が <see langword="null" />です。</exception>
      <exception cref="T:System.ArgumentException" vsli:raw="&lt;paramref name=&quot;offset&quot; /&gt; is less than zero.&#xA;  &#xA;-or-&#xA;&#xA;&lt;paramref name=&quot;offset&quot; /&gt; is greater than the length of &lt;paramref name=&quot;buffer&quot; /&gt;.  &#xA;&#xA;-or-  &#xA;&#xA; &lt;paramref name=&quot;offset&quot; /&gt; + count is greater than the length of &lt;paramref name=&quot;buffer&quot; /&gt;.">
        <paramref name="offset" /> が 0 未満です。
  
- または -

<paramref name="offset" /> が <paramref name="buffer" /> の長さを超えています。  

- または -

 <paramref name="offset" /> に count を加算した値が、<paramref name="buffer" /> の長さを超えています。</exception>
      <exception cref="T:System.IO.IOException" vsli:raw="The read operation failed. Check the inner exception, if present to determine the cause of the failure.">読み取り操作に失敗しました。 内部例外が存在する場合は、その例外をチェックしてエラーの原因を確認してください。</exception>
      <exception cref="T:System.NotSupportedException" vsli:raw="There is already a read operation in progress.">既に実行中の読み取り操作が存在します。</exception>
      <exception cref="T:System.ObjectDisposedException" vsli:raw="This object has been closed.">このオブジェクトは閉じられました。</exception>
      <exception cref="T:System.InvalidOperationException" vsli:raw="Authentication has not occurred.">認証が行われていません。</exception>
      <returns vsli:raw="A &lt;see cref=&quot;T:System.Int32&quot; /&gt; value that specifies the number of bytes read. When there is no more data to be read, returns 0.">読み取るバイト数を指定する <see cref="T:System.Int32" /> 値。 読み取るデータがこれ以上存在しない場合は 0 を返します。</returns>
    </member>
    <member name="M:System.Net.Security.SslStream.ReadAsync(System.Byte[],System.Int32,System.Int32,System.Threading.CancellationToken)">
      <summary vsli:raw="Asynchronously reads data from this stream and stores it in the specified range of a byte array.">このストリームからデータを非同期的に読み取り、それをバイト配列の指定の範囲に格納します。</summary>
      <param name="buffer" vsli:raw="The buffer that receives the bytes read from this stream.">このストリームから読み取ったバイトを受け取るバッファー。</param>
      <param name="offset" vsli:raw="The zero-based location in &lt;paramref name=&quot;buffer&quot; /&gt; at which to begin storing the data read from this stream.">このストリームから読み取ったデータの格納を開始する位置を示す、<paramref name="buffer" /> 内のインデックス番号が 0 から始まる位置。</param>
      <param name="count" vsli:raw="The maximum number of bytes to read from this stream.">このストリームから読み取られた最大バイト数。</param>
      <param name="cancellationToken" vsli:raw="The token to monitor for cancellation requests.">キャンセル要求を監視するためのトークン。</param>
      <exception cref="T:System.ArgumentNullException" vsli:raw="&lt;paramref name=&quot;buffer&quot; /&gt; is &lt;see langword=&quot;null&quot; /&gt;.">
        <paramref name="buffer" /> が <see langword="null" />です。</exception>
      <exception cref="T:System.ArgumentOutOfRangeException" vsli:raw="&lt;paramref name=&quot;offset&quot; /&gt; is less than 0.  &#xA;  &#xA; -or-  &#xA;  &#xA; &lt;paramref name=&quot;count&quot; /&gt; is less than 0.&#xA;  &#xA; -or-  &#xA;  &#xA; &lt;paramref name=&quot;count&quot; /&gt; is greater than the length of &lt;paramref name=&quot;buffer&quot; /&gt; minus &lt;paramref name=&quot;offset&quot; /&gt;.">
        <paramref name="offset" /> が 0 未満です。  
  
- または - 
 <paramref name="count" /> が 0 未満です。
  
- または - 
 <paramref name="count" /> が、<paramref name="buffer" /> から <paramref name="offset" /> を引いた長さを超えています。</exception>
      <exception cref="T:System.InvalidOperationException" vsli:raw="Authentication has not occurred.">認証が行われていません。</exception>
      <exception cref="T:System.IO.IOException" vsli:raw="The read operation failed. Check the inner exception, if it is present, to determine the cause of the failure.">読み取り操作に失敗しました。 内部例外が存在する場合は、チェックしてエラーの原因を確認してください。</exception>
      <exception cref="T:System.NotSupportedException" vsli:raw="There is already a read operation in progress.">既に実行中の読み取り操作が存在します。</exception>
      <exception cref="T:System.ObjectDisposedException" vsli:raw="This object has been closed.">このオブジェクトは閉じられました。</exception>
      <returns vsli:raw="A task that represents the asynchronous read operation. The value of its &lt;see cref=&quot;P:System.Threading.Tasks.Task`1.Result&quot; /&gt; property contains the total number of bytes read into &lt;paramref name=&quot;buffer&quot; /&gt;. When there is no more data to be read, returns 0.">非同期の読み取り操作を表すタスク。 その <see cref="P:System.Threading.Tasks.Task`1.Result" /> プロパティの値には、<paramref name="buffer" /> に読み取られたバイトの合計数が含まれます。 読み取るデータがこれ以上存在しない場合は 0 を返します。</returns>
    </member>
    <member name="M:System.Net.Security.SslStream.ReadAsync(System.Memory{System.Byte},System.Threading.CancellationToken)">
      <summary vsli:raw="Asynchronously reads data from this stream and stores it in the specified memory range.">このストリームからデータを非同期的に読み取り、それを指定されたメモリ範囲に格納します。</summary>
      <param name="buffer" vsli:raw="The buffer that receives the bytes read from this stream.">このストリームから読み取ったバイトを受け取るバッファー。</param>
      <param name="cancellationToken" vsli:raw="The token to monitor for cancellation requests.">キャンセル要求を監視するためのトークン。</param>
      <exception cref="T:System.InvalidOperationException" vsli:raw="Authentication has not occurred.">認証が行われていません。</exception>
      <exception cref="T:System.IO.IOException" vsli:raw="The read operation failed. Check the inner exception, if it is present, to determine the cause of the failure.">読み取り操作に失敗しました。 内部例外が存在する場合は、チェックしてエラーの原因を確認してください。</exception>
      <exception cref="T:System.NotSupportedException" vsli:raw="There is already a read operation in progress.">既に実行中の読み取り操作が存在します。</exception>
      <exception cref="T:System.ObjectDisposedException" vsli:raw="This object has been closed.">このオブジェクトは閉じられました。</exception>
      <returns vsli:raw="A task that represents the asynchronous read operation. The value of its &lt;see cref=&quot;P:System.Threading.Tasks.ValueTask`1.Result&quot; /&gt; property contains the total number of bytes read into &lt;paramref name=&quot;buffer&quot; /&gt;. When there is no more data to be read, returns 0.">非同期の読み取り操作を表すタスク。 その <see cref="P:System.Threading.Tasks.ValueTask`1.Result" /> プロパティの値には、<paramref name="buffer" /> に読み取られたバイトの合計数が含まれます。 読み取るデータがこれ以上存在しない場合は 0 を返します。</returns>
    </member>
    <member name="M:System.Net.Security.SslStream.ReadByte">
      <summary vsli:raw="Reads a byte from the &lt;see cref=&quot;T:System.Net.Security.SslStream&quot; /&gt; and advances the position within the stream by one byte, or returns -1 if at the end of the stream.">
        <see cref="T:System.Net.Security.SslStream" /> から 1 バイトを読み取り、ストリーム内の位置を 1 バイト進めます。または、ストリームの末尾の場合は -1 を返します。</summary>
      <exception cref="T:System.InvalidOperationException" vsli:raw="Authentication has not occurred.">認証が行われていません。</exception>
      <exception cref="T:System.IO.IOException" vsli:raw="The read operation failed. Check the inner exception, if present to determine the cause of the failure.">読み取り操作に失敗しました。 内部例外が存在する場合は、その例外をチェックしてエラーの原因を確認してください。</exception>
      <exception cref="T:System.NotSupportedException" vsli:raw="There is already a read operation in progress.">既に実行中の読み取り操作が存在します。</exception>
      <exception cref="T:System.ObjectDisposedException" vsli:raw="This object has been closed.">このオブジェクトは閉じられました。</exception>
      <returns vsli:raw="The unsigned byte cast to an &lt;see cref=&quot;T:System.Int32&quot; /&gt;, or -1 if at the end of the stream.">
        <see cref="T:System.Int32" /> にキャストされた符号なしバイト。ストリームの末尾の場合は -1。</returns>
    </member>
    <member name="M:System.Net.Security.SslStream.Seek(System.Int64,System.IO.SeekOrigin)">
      <summary vsli:raw="Throws a &lt;see cref=&quot;T:System.NotSupportedException&quot; /&gt;.">
        <see cref="T:System.NotSupportedException" /> をスローします。</summary>
      <param name="offset" vsli:raw="This value is ignored.">この値は無視されます。</param>
      <param name="origin" vsli:raw="This value is ignored.">この値は無視されます。</param>
      <exception cref="T:System.NotSupportedException" vsli:raw="Seeking is not supported by &lt;see cref=&quot;T:System.Net.Security.SslStream&quot; /&gt; objects.">シークは <see cref="T:System.Net.Security.SslStream" /> オブジェクトでサポートされていません。</exception>
      <returns vsli:raw="Always throws a &lt;see cref=&quot;T:System.NotSupportedException&quot; /&gt;.">常に <see cref="T:System.NotSupportedException" /> をスローします。</returns>
    </member>
    <member name="M:System.Net.Security.SslStream.SetLength(System.Int64)">
      <summary vsli:raw="Sets the length of the underlying stream.">基になるストリームの長さを設定します。</summary>
      <param name="value" vsli:raw="An &lt;see cref=&quot;T:System.Int64&quot; /&gt; value that specifies the length of the stream.">ストリームの長さを指定する <see cref="T:System.Int64" /> 値。</param>
    </member>
    <member name="M:System.Net.Security.SslStream.ShutdownAsync">
      <summary vsli:raw="Shuts down this SslStream.">この SslStream を終了します。</summary>
      <returns vsli:raw="The task object representing the asynchronous operation.">非同期操作を表すタスク オブジェクト。</returns>
    </member>
    <member name="M:System.Net.Security.SslStream.Write(System.Byte[])">
      <summary vsli:raw="Writes the specified data to this stream.">このストリームに指定したデータを書き込みます。</summary>
      <param name="buffer" vsli:raw="A &lt;see cref=&quot;T:System.Byte&quot; /&gt; array that supplies the bytes written to the stream.">ストリームに書き込むバイトを提供する <see cref="T:System.Byte" /> 配列。</param>
      <exception cref="T:System.ArgumentNullException" vsli:raw="&lt;paramref name=&quot;buffer&quot; /&gt; is &lt;see langword=&quot;null&quot; /&gt;.">
        <paramref name="buffer" /> が <see langword="null" />です。</exception>
      <exception cref="T:System.IO.IOException" vsli:raw="The write operation failed.">書き込み操作に失敗しました。</exception>
      <exception cref="T:System.NotSupportedException" vsli:raw="There is already a write operation in progress.">既に実行中の書き込み操作が存在します。</exception>
      <exception cref="T:System.ObjectDisposedException" vsli:raw="This object has been closed.">このオブジェクトは閉じられました。</exception>
      <exception cref="T:System.InvalidOperationException" vsli:raw="Authentication has not occurred.">認証が行われていません。</exception>
    </member>
    <member name="M:System.Net.Security.SslStream.Write(System.Byte[],System.Int32,System.Int32)">
      <summary vsli:raw="Write the specified number of &lt;see cref=&quot;T:System.Byte&quot; /&gt;s to the underlying stream using the specified buffer and offset.">指定したバッファーとオフセットを使用して、基になるストリームに指定した <see cref="T:System.Byte" /> 数を書き込みます。</summary>
      <param name="buffer" vsli:raw="A &lt;see cref=&quot;T:System.Byte&quot; /&gt; array that supplies the bytes written to the stream.">ストリームに書き込むバイトを提供する <see cref="T:System.Byte" /> 配列。</param>
      <param name="offset" vsli:raw="A &lt;see cref=&quot;T:System.Int32&quot; /&gt; that contains the zero-based location in &lt;paramref name=&quot;buffer&quot; /&gt; at which to begin reading bytes to be written to the stream.">ストリームに書き込むバイトの読み取りを開始する位置を示す、<paramref name="buffer" /> 内のインデックス番号が 0 から始まる位置を格納する <see cref="T:System.Int32" />。</param>
      <param name="count" vsli:raw="A &lt;see cref=&quot;T:System.Int32&quot; /&gt; that contains the number of bytes to read from &lt;paramref name=&quot;buffer&quot; /&gt;.">
        <paramref name="buffer" /> から読み取るバイト数を格納する <see cref="T:System.Int32" />。</param>
      <exception cref="T:System.ArgumentNullException" vsli:raw="&lt;paramref name=&quot;buffer&quot; /&gt; is &lt;see langword=&quot;null&quot; /&gt;.">
        <paramref name="buffer" /> が <see langword="null" />です。</exception>
      <exception cref="T:System.ArgumentException" vsli:raw="&lt;paramref name=&quot;offset&quot; /&gt; is less than zero.&#xA;&#xA;-or-&#xA;&#xA;&lt;paramref name=&quot;offset&quot; /&gt; is greater than the length of &lt;paramref name=&quot;buffer&quot; /&gt;.  &#xA;  &#xA; -or-  &#xA;  &#xA; &lt;paramref name=&quot;offset&quot; /&gt; + count is greater than the length of &lt;paramref name=&quot;buffer&quot; /&gt;.">
        <paramref name="offset" /> が 0 未満です。

- または -

<paramref name="offset" /> が <paramref name="buffer" /> の長さを超えています。  
  
- または - 
 <paramref name="offset" /> に count を加算した値が、<paramref name="buffer" /> の長さを超えています。</exception>
      <exception cref="T:System.IO.IOException" vsli:raw="The write operation failed.">書き込み操作に失敗しました。</exception>
      <exception cref="T:System.NotSupportedException" vsli:raw="There is already a write operation in progress.">既に実行中の書き込み操作が存在します。</exception>
      <exception cref="T:System.ObjectDisposedException" vsli:raw="This object has been closed.">このオブジェクトは閉じられました。</exception>
      <exception cref="T:System.InvalidOperationException" vsli:raw="Authentication has not occurred.">認証が行われていません。</exception>
    </member>
    <member name="M:System.Net.Security.SslStream.WriteAsync(System.Byte[],System.Int32,System.Int32,System.Threading.CancellationToken)">
      <summary vsli:raw="Asynchronously writes data to the underlying stream from the specified range of a byte array.">バイト配列の指定された範囲から、基になるストリームに、データを非同期的に書き込みます。</summary>
      <param name="buffer" vsli:raw="The data to write to the underlying stream.">基になるストリームに書き込むデータ。</param>
      <param name="offset" vsli:raw="The location in &lt;paramref name=&quot;buffer&quot; /&gt; from which to start writing data.">データの書き込みを開始する <paramref name="buffer" /> 内の場所。</param>
      <param name="count" vsli:raw="The number of bytes to write to the underlying stream.">基になるストリームに書き込むバイト数。</param>
      <param name="cancellationToken" vsli:raw="The token to monitor for cancellation requests.">キャンセル要求を監視するためのトークン。</param>
      <exception cref="T:System.ArgumentNullException" vsli:raw="&lt;paramref name=&quot;buffer&quot; /&gt; is &lt;see langword=&quot;null&quot; /&gt;.">
        <paramref name="buffer" /> が <see langword="null" />です。</exception>
      <exception cref="T:System.ArgumentOutOfRangeException" vsli:raw="&lt;paramref name=&quot;offset&quot; /&gt; is less than 0.  &#xA;  &#xA; -or-  &#xA;  &#xA; &lt;paramref name=&quot;count&quot; /&gt; is less than 0.&#xA;  &#xA; -or-  &#xA;  &#xA; &lt;paramref name=&quot;count&quot; /&gt; is greater than the length of &lt;paramref name=&quot;buffer&quot; /&gt; minus &lt;paramref name=&quot;offset&quot; /&gt;.">
        <paramref name="offset" /> が 0 未満です。  
  
- または - 
 <paramref name="count" /> が 0 未満です。
  
- または - 
 <paramref name="count" /> が、<paramref name="buffer" /> から <paramref name="offset" /> を引いた長さを超えています。</exception>
      <exception cref="T:System.InvalidOperationException" vsli:raw="Authentication has not occurred.">認証が行われていません。</exception>
      <exception cref="T:System.IO.IOException" vsli:raw="The write operation failed.">書き込み操作に失敗しました。</exception>
      <exception cref="T:System.NotSupportedException" vsli:raw="There is already a write operation in progress.">既に実行中の書き込み操作が存在します。</exception>
      <exception cref="T:System.ObjectDisposedException" vsli:raw="This object has been closed.">このオブジェクトは閉じられました。</exception>
      <returns vsli:raw="A task that represents the asynchronous write operation.">非同期の書き込み操作を表すタスク。</returns>
    </member>
    <member name="M:System.Net.Security.SslStream.WriteAsync(System.ReadOnlyMemory{System.Byte},System.Threading.CancellationToken)">
      <summary vsli:raw="Asynchronously writes data to the underlying stream from a read-only byte memory range.">読み取り専用バイト メモリ範囲から基になるストリームにデータを非同期的に書き込みます。</summary>
      <param name="buffer" vsli:raw="The data to write to the underlying stream.">基になるストリームに書き込むデータ。</param>
      <param name="cancellationToken" vsli:raw="The token to monitor for cancellation requests.">キャンセル要求を監視するためのトークン。</param>
      <exception cref="T:System.InvalidOperationException" vsli:raw="Authentication has not occurred.">認証が行われていません。</exception>
      <exception cref="T:System.IO.IOException" vsli:raw="The write operation failed.">書き込み操作に失敗しました。</exception>
      <exception cref="T:System.NotSupportedException" vsli:raw="There is already a write operation in progress.">既に実行中の書き込み操作が存在します。</exception>
      <exception cref="T:System.ObjectDisposedException" vsli:raw="This object has been closed.">このオブジェクトは閉じられました。</exception>
      <returns vsli:raw="A task that represents the asynchronous write operation.">非同期の書き込み操作を表すタスク。</returns>
    </member>
    <member name="P:System.Net.Security.SslStream.CanRead">
      <summary vsli:raw="Gets a &lt;see cref=&quot;T:System.Boolean&quot; /&gt; value that indicates whether the underlying stream is readable.">基になるストリームが読み取り可能かどうかを示す <see cref="T:System.Boolean" /> 値を取得します。</summary>
      <returns vsli:raw="&lt;see langword=&quot;true&quot; /&gt; if authentication has occurred and the underlying stream is readable; otherwise &lt;see langword=&quot;false&quot; /&gt;.">認証が行われており、基になるストリームが読み取り可能な場合は <see langword="true" />。それ以外の場合は <see langword="false" />。</returns>
    </member>
    <member name="P:System.Net.Security.SslStream.CanSeek">
      <summary vsli:raw="Gets a &lt;see cref=&quot;T:System.Boolean&quot; /&gt; value that indicates whether the underlying stream is seekable.">基になるストリームがシークできるかどうかを示す <see cref="T:System.Boolean" /> 値を取得します。</summary>
      <returns vsli:raw="This property always returns &lt;see langword=&quot;false&quot; /&gt;.">このプロパティは常に <see langword="false" /> を返します。</returns>
    </member>
    <member name="P:System.Net.Security.SslStream.CanTimeout">
      <summary vsli:raw="Gets a &lt;see cref=&quot;T:System.Boolean&quot; /&gt; value that indicates whether the underlying stream supports time-outs.">基になるストリームがタイムアウトをサポートしているかどうかを示す <see cref="T:System.Boolean" /> 値を取得します。</summary>
      <returns vsli:raw="&lt;see langword=&quot;true&quot; /&gt; if the underlying stream supports time-outs; otherwise, &lt;see langword=&quot;false&quot; /&gt;.">基になるストリームがタイムアウトをサポートしている場合は <see langword="true" />。それ以外の場合は <see langword="false" />。</returns>
    </member>
    <member name="P:System.Net.Security.SslStream.CanWrite">
      <summary vsli:raw="Gets a &lt;see cref=&quot;T:System.Boolean&quot; /&gt; value that indicates whether the underlying stream is writable.">基になるストリームが書き込み可能かどうかを示す <see cref="T:System.Boolean" /> 値を取得します。</summary>
      <returns vsli:raw="&lt;see langword=&quot;true&quot; /&gt; if authentication has occurred and the underlying stream is writable; otherwise &lt;see langword=&quot;false&quot; /&gt;.">認証が行われており、基になるストリームが書き込み可能な場合は <see langword="true" />。それ以外の場合は <see langword="false" />。</returns>
    </member>
    <member name="P:System.Net.Security.SslStream.CheckCertRevocationStatus">
      <summary vsli:raw="Gets a &lt;see cref=&quot;T:System.Boolean&quot; /&gt; value that indicates whether the certificate revocation list is checked during the certificate validation process.">証明書検証プロセスで、証明書失効リストを照合するかどうかを示す <see cref="T:System.Boolean" /> 値を取得します。</summary>
      <returns vsli:raw="&lt;see langword=&quot;true&quot; /&gt; if the certificate revocation list is checked; otherwise, &lt;see langword=&quot;false&quot; /&gt;.">証明書失効リストが照合される場合は <see langword="true" />。それ以外の場合は <see langword="false" />。</returns>
    </member>
    <member name="P:System.Net.Security.SslStream.CipherAlgorithm">
      <summary vsli:raw="Gets a value that identifies the bulk encryption algorithm used by this &lt;see cref=&quot;T:System.Net.Security.SslStream&quot; /&gt;.">この <see cref="T:System.Net.Security.SslStream" /> が使用する一括暗号化アルゴリズムを識別する値を取得します。</summary>
      <exception cref="T:System.InvalidOperationException" vsli:raw="The &lt;see cref=&quot;P:System.Net.Security.SslStream.CipherAlgorithm&quot; /&gt; property was accessed before the completion of the authentication process or the authentication process failed.">認証プロセスの完了前に <see cref="P:System.Net.Security.SslStream.CipherAlgorithm" /> プロパティにアクセスしました。または、認証プロセスでエラーが発生しました。</exception>
      <returns vsli:raw="A value that identifies the bulk encryption algorithm used by this &lt;see cref=&quot;T:System.Net.Security.SslStream&quot; /&gt;.">このによって使用される一括暗号化アルゴリズムを識別する値 <see cref="T:System.Net.Security.SslStream" /> 。</returns>
    </member>
    <member name="P:System.Net.Security.SslStream.CipherStrength">
      <summary vsli:raw="Gets a value that identifies the strength of the cipher algorithm used by this &lt;see cref=&quot;T:System.Net.Security.SslStream&quot; /&gt;.">この <see cref="T:System.Net.Security.SslStream" /> が使用する暗号アルゴリズムの強度を識別する値を取得します。</summary>
      <returns vsli:raw="An &lt;see cref=&quot;T:System.Int32&quot; /&gt; value that specifies the strength of the algorithm, in bits.">アルゴリズムの強度をビット単位で指定する <see cref="T:System.Int32" /> 値。</returns>
    </member>
    <member name="P:System.Net.Security.SslStream.HashAlgorithm">
      <summary vsli:raw="Gets the algorithm used for generating message authentication codes (MACs).">メッセージ認証コード (MAC: Message Authentication Code) の生成に使用するアルゴリズムを取得します。</summary>
      <exception cref="T:System.InvalidOperationException" vsli:raw="The &lt;see cref=&quot;P:System.Net.Security.SslStream.HashAlgorithm&quot; /&gt; property was accessed before the completion of the authentication process or the authentication process failed.">認証プロセスの完了前に <see cref="P:System.Net.Security.SslStream.HashAlgorithm" /> プロパティにアクセスしました。または、認証プロセスでエラーが発生しました。</exception>
      <returns vsli:raw="The algorithm used for generating message authentication codes (MACs).">メッセージ認証コード (Mac) を生成するために使用されるアルゴリズム。</returns>
    </member>
    <member name="P:System.Net.Security.SslStream.HashStrength">
      <summary vsli:raw="Gets a value that identifies the strength of the hash algorithm used by this instance.">このインスタンスが使用するハッシュ アルゴリズムの強度を識別する値を取得します。</summary>
      <returns vsli:raw="An &lt;see cref=&quot;T:System.Int32&quot; /&gt; value that specifies the strength of the &lt;see cref=&quot;T:System.Security.Authentication.HashAlgorithmType&quot; /&gt; algorithm, in bits. Valid values are 128 or 160.">
        <see cref="T:System.Int32" /> アルゴリズムの強度をビット単位で指定する <see cref="T:System.Security.Authentication.HashAlgorithmType" /> 値。 有効値は 128 または 160 です。</returns>
    </member>
    <member name="P:System.Net.Security.SslStream.IsAuthenticated">
      <summary vsli:raw="Gets a &lt;see cref=&quot;T:System.Boolean&quot; /&gt; value that indicates whether authentication was successful.">認証が成功したかどうかを示す <see cref="T:System.Boolean" /> 値を取得します。</summary>
      <returns vsli:raw="&lt;see langword=&quot;true&quot; /&gt; if successful authentication occurred; otherwise, &lt;see langword=&quot;false&quot; /&gt;.">認証が成功した場合は <see langword="true" />。それ以外の場合は <see langword="false" />。</returns>
    </member>
    <member name="P:System.Net.Security.SslStream.IsEncrypted">
      <summary vsli:raw="Gets a &lt;see cref=&quot;T:System.Boolean&quot; /&gt; value that indicates whether this &lt;see cref=&quot;T:System.Net.Security.SslStream&quot; /&gt; uses data encryption.">この <see cref="T:System.Net.Security.SslStream" /> がデータの暗号化を使用するかどうかを示す <see cref="T:System.Boolean" /> 値を取得します。</summary>
      <returns vsli:raw="&lt;see langword=&quot;true&quot; /&gt; if data is encrypted before being transmitted over the network and decrypted when it reaches the remote endpoint; otherwise &lt;see langword=&quot;false&quot; /&gt;.">ネットワーク上で送信する前にデータを暗号化し、データがリモート エンドポイントに到達したときに復号化する場合は <see langword="true" />。それ以外の場合は <see langword="false" />。</returns>
    </member>
    <member name="P:System.Net.Security.SslStream.IsMutuallyAuthenticated">
      <summary vsli:raw="Gets a &lt;see cref=&quot;T:System.Boolean&quot; /&gt; value that indicates whether both server and client have been authenticated.">サーバーとクライアントの両方が認証されているかどうかを示す <see cref="T:System.Boolean" /> 値を取得します。</summary>
      <returns vsli:raw="&lt;see langword=&quot;true&quot; /&gt; if both server and client have been authenticated; otherwise &lt;see langword=&quot;false&quot; /&gt;.">サーバーが認証されている場合は <see langword="true" />。それ以外の場合は <see langword="false" />。</returns>
    </member>
    <member name="P:System.Net.Security.SslStream.IsServer">
      <summary vsli:raw="Gets a &lt;see cref=&quot;T:System.Boolean&quot; /&gt; value that indicates whether the local side of the connection used by this &lt;see cref=&quot;T:System.Net.Security.SslStream&quot; /&gt; was authenticated as the server.">この <see cref="T:System.Net.Security.SslStream" /> が使用する接続のローカル側がサーバーとして認証されたかどうかを示す <see cref="T:System.Boolean" /> 値を取得します。</summary>
      <returns vsli:raw="&lt;see langword=&quot;true&quot; /&gt; if the local endpoint was successfully authenticated as the server side of the authenticated connection; otherwise &lt;see langword=&quot;false&quot; /&gt;.">ローカル エンドポイントが、認証された接続のサーバー側として正常に認証された場合は <see langword="true" />。それ以外の場合は <see langword="false" />。</returns>
    </member>
    <member name="P:System.Net.Security.SslStream.IsSigned">
      <summary vsli:raw="Gets a &lt;see cref=&quot;T:System.Boolean&quot; /&gt; value that indicates whether the data sent using this stream is signed.">このストリームを使用して送信されるデータに署名するかどうかを示す <see cref="T:System.Boolean" /> 値を取得します。</summary>
      <returns vsli:raw="&lt;see langword=&quot;true&quot; /&gt; if the data is signed before being transmitted; otherwise &lt;see langword=&quot;false&quot; /&gt;.">データの送信前に署名する場合は <see langword="true" />。それ以外の場合は <see langword="false" />。</returns>
    </member>
    <member name="P:System.Net.Security.SslStream.KeyExchangeAlgorithm">
      <summary vsli:raw="Gets the key exchange algorithm used by this &lt;see cref=&quot;T:System.Net.Security.SslStream&quot; /&gt;.">この <see cref="T:System.Net.Security.SslStream" /> が使用するキー交換アルゴリズムを取得します。</summary>
      <returns vsli:raw="An &lt;see cref=&quot;T:System.Security.Authentication.ExchangeAlgorithmType&quot; /&gt; value.">
        <see cref="T:System.Security.Authentication.ExchangeAlgorithmType" /> 値。</returns>
    </member>
    <member name="P:System.Net.Security.SslStream.KeyExchangeStrength">
      <summary vsli:raw="Gets a value that identifies the strength of the key exchange algorithm used by this instance.">このインスタンスが使用するキー交換アルゴリズムの強度を識別する値を取得します。</summary>
      <returns vsli:raw="An &lt;see cref=&quot;T:System.Int32&quot; /&gt; value that specifies the strength of the &lt;see cref=&quot;T:System.Security.Authentication.ExchangeAlgorithmType&quot; /&gt; algorithm, in bits.">
        <see cref="T:System.Int32" /> アルゴリズムの強度をビット単位で指定する <see cref="T:System.Security.Authentication.ExchangeAlgorithmType" /> 値。</returns>
    </member>
    <member name="P:System.Net.Security.SslStream.Length">
      <summary vsli:raw="Gets the length of the underlying stream.">基になるストリームの長さを取得します。</summary>
      <exception cref="T:System.NotSupportedException" vsli:raw="Getting the value of this property is not supported when the underlying stream is a &lt;see cref=&quot;T:System.Net.Sockets.NetworkStream&quot; /&gt;.">基になるストリームが <see cref="T:System.Net.Sockets.NetworkStream" /> の場合、このプロパティの値の取得はサポートされていません。</exception>
      <returns vsli:raw="The length of the underlying stream.">基になるストリームの長さ。</returns>
    </member>
    <member name="P:System.Net.Security.SslStream.LocalCertificate">
      <summary vsli:raw="Gets the certificate used to authenticate the local endpoint.">ローカル エンドポイントの認証に使用する証明書を取得します。</summary>
      <exception cref="T:System.InvalidOperationException" vsli:raw="Authentication failed or has not occurred.">認証に失敗したか、認証が行われていません。</exception>
      <returns vsli:raw="An X509Certificate object that represents the certificate supplied for authentication or &lt;see langword=&quot;null&quot; /&gt; if no certificate was supplied.">認証用に提供された証明書を表す X509Certificate オブジェクト。証明書が提供されなかった場合は <see langword="null" />。</returns>
    </member>
    <member name="P:System.Net.Security.SslStream.NegotiatedApplicationProtocol">
      <summary vsli:raw="The negotiated application protocol in TLS handshake.">TLS ハンドシェイクでネゴシエートされたアプリケーション プロトコル。</summary>
    </member>
    <member name="P:System.Net.Security.SslStream.NegotiatedCipherSuite">
      <summary vsli:raw="Gets the cipher suite which was negotiated for this connection.">この接続に対してネゴシエートされた暗号スイートを取得します。</summary>
      <exception cref="T:System.InvalidOperationException" vsli:raw="The property was accessed before the completion of the authentication process or the authentication process failed.">認証プロセスの完了前に、プロパティにアクセスしました。または、認証プロセスでエラーが発生しました。</exception>
      <returns vsli:raw="One of the enumeration values that identifies the cipher suite which was negotiated for this connection.">この接続に対してネゴシエートされた暗号スイートを識別する列挙値の1つ。</returns>
    </member>
    <member name="P:System.Net.Security.SslStream.Position">
      <summary vsli:raw="Gets or sets the current position in the underlying stream.">基になるストリーム内の現在位置を取得または設定します。</summary>
      <exception cref="T:System.NotSupportedException" vsli:raw="Setting this property is not supported.  &#xA;  &#xA; -or-  &#xA;  &#xA; Getting the value of this property is not supported when the underlying stream is a &lt;see cref=&quot;T:System.Net.Sockets.NetworkStream&quot; /&gt;.">このプロパティの設定は、サポートされていません。  
  
- または - 
基になるストリームが <see cref="T:System.Net.Sockets.NetworkStream" /> の場合、このプロパティの値の取得はサポートされていません。</exception>
      <returns vsli:raw="The current position in the underlying stream.">基になるストリームの現在の位置。</returns>
    </member>
    <member name="P:System.Net.Security.SslStream.ReadTimeout">
      <summary vsli:raw="Gets or sets the amount of time, expressed in milliseconds, a read operation blocks waiting for data.">読み取り操作がブロックしてデータを待機する時間をミリ秒単位で取得または設定します。</summary>
      <returns vsli:raw="The amount of time, in milliseconds, that elapses before a synchronous read operation fails.">同期読み取り操作が失敗するまでの経過時間 (ミリ秒単位)。</returns>
    </member>
    <member name="P:System.Net.Security.SslStream.RemoteCertificate">
      <summary vsli:raw="Gets the certificate used to authenticate the remote endpoint.">リモート エンドポイントの認証に使用する証明書を取得します。</summary>
      <exception cref="T:System.InvalidOperationException" vsli:raw="Authentication failed or has not occurred.">認証に失敗したか、認証が行われていません。</exception>
      <returns vsli:raw="An X509Certificate object that represents the certificate supplied for authentication or &lt;see langword=&quot;null&quot; /&gt; if no certificate was supplied.">認証用に提供された証明書を表す X509Certificate オブジェクト。証明書が提供されなかった場合は <see langword="null" />。</returns>
    </member>
    <member name="P:System.Net.Security.SslStream.SslProtocol">
      <summary vsli:raw="Gets a value that indicates the security protocol used to authenticate this connection.">この接続の認証に使用するセキュリティ プロトコルを示す値を取得します。</summary>
      <returns vsli:raw="The &lt;see cref=&quot;T:System.Security.Authentication.SslProtocols&quot; /&gt; value that represents protocols used for authentication.">認証に使用されるプロトコルを表す <see cref="T:System.Security.Authentication.SslProtocols" /> 値。</returns>
    </member>
    <member name="P:System.Net.Security.SslStream.TargetHostName">
      <summary vsli:raw="Gets the name of the server the client is trying to connect to. That name is used for server certificate validation. It can be a DNS name or an IP address.">クライアントが接続しようとしているサーバーの名前を取得します。 この名前は、サーバー証明書の検証に使用されます。 DNS 名か IP アドレスのどちらかを指定できます。</summary>
      <returns vsli:raw="The name of the server the client is trying to connect to.">クライアントが接続しようとしているサーバーの名前。</returns>
    </member>
    <member name="P:System.Net.Security.SslStream.TransportContext">
      <summary vsli:raw="Gets the &lt;see cref=&quot;T:System.Net.TransportContext&quot; /&gt; used for authentication using extended protection.">拡張保護を使用した認証に使用する <see cref="T:System.Net.TransportContext" /> を取得します。</summary>
      <returns vsli:raw="The &lt;see cref=&quot;T:System.Net.TransportContext&quot; /&gt; object that contains the channel binding token (CBT) used for extended protection.">拡張保護に使用するチャネル バインディング トークン (CBT: Channel Binding Token) を格納している <see cref="T:System.Net.TransportContext" /> オブジェクト。</returns>
    </member>
    <member name="P:System.Net.Security.SslStream.WriteTimeout">
      <summary vsli:raw="Gets or sets the amount of time a write operation blocks waiting for data.">書き込み操作がブロックしてデータを待機する時間を取得または設定します。</summary>
      <returns vsli:raw="The amount of time that elapses before a synchronous write operation fails.">同期書き込み操作が失敗するまでの経過時間。</returns>
    </member>
    <member name="T:System.Net.Security.SslStreamCertificateContext">
      <summary vsli:raw="Represents a set of certificates used for building a certificate chain.">証明書チェーンの構築に使用する証明書のセットを表します。</summary>
    </member>
    <member name="M:System.Net.Security.SslStreamCertificateContext.Create(System.Security.Cryptography.X509Certificates.X509Certificate2,System.Security.Cryptography.X509Certificates.X509Certificate2Collection,System.Boolean)">
      <summary vsli:raw="Attempts to build the certificate chain from the provided certificates.">提供された証明書から証明書チェーンの構築を試みます。</summary>
      <param name="target" vsli:raw="The server certificate.">サーバー証明書。</param>
      <param name="additionalCertificates" vsli:raw="Supplementary certificates used to build the certificate chain.">証明書チェーンの構築に使用する補助証明書。</param>
      <param name="offline" vsli:raw="&lt;see langword=&quot;false&quot; /&gt; to indicate that the missing certificates can be downloaded from the network; &lt;see langword=&quot;true&quot; /&gt; to indicate that only available X509Certificate stores should be searched for missing certificates.">証明書が見つからない場合にそれをネットワークからダウンロードできることを示すには <see langword="true" />。証明書が見つからない場合、利用可能な X509Certificate ストアのみを検索対象にするには <see langword="false" />。</param>
      <exception cref="T:System.NotSupportedException" vsli:raw="&lt;paramref name=&quot;target&quot; /&gt; doesn't have an associated private key.">
        <paramref name="target" /> に秘密キーが関連付けられていません。</exception>
      <returns vsli:raw="The certificate context with the newly created certificate chain.">新規作成された証明書チェーンを含む証明書コンテキスト。</returns>
    </member>
    <member name="T:System.Net.Security.TlsCipherSuite">
      <summary vsli:raw="Represents cipher suite values for the TLS (formerly SSL) protocol.">TLS (旧称 SSL) プロトコルの暗号スイートの値を表します。</summary>
    </member>
    <member name="F:System.Net.Security.TlsCipherSuite.TLS_AES_128_CCM_8_SHA256">
      <summary vsli:raw="Represents the TLS_AES_128_CCM_8_SHA256 cipher suite.">TLS_AES_128_CCM_8_SHA256 暗号スイートを表します。</summary>
    </member>
    <member name="F:System.Net.Security.TlsCipherSuite.TLS_AES_128_CCM_SHA256">
      <summary vsli:raw="Represents the TLS_AES_128_CCM_SHA256 cipher suite.">TLS_AES_128_CCM_SHA256 暗号スイートを表します。</summary>
    </member>
    <member name="F:System.Net.Security.TlsCipherSuite.TLS_AES_128_GCM_SHA256">
      <summary vsli:raw="Represents the TLS_AES_128_GCM_SHA256 cipher suite.">TLS_AES_128_GCM_SHA256 暗号スイートを表します。</summary>
    </member>
    <member name="F:System.Net.Security.TlsCipherSuite.TLS_AES_256_GCM_SHA384">
      <summary vsli:raw="Represents the TLS_AES_256_GCM_SHA384 cipher suite.">TLS_AES_256_GCM_SHA384 暗号スイートを表します。</summary>
    </member>
    <member name="F:System.Net.Security.TlsCipherSuite.TLS_CHACHA20_POLY1305_SHA256">
      <summary vsli:raw="Represents the TLS_CHACHA20_POLY1305_SHA256 cipher suite.">TLS_CHACHA20_POLY1305_SHA256 暗号スイートを表します。</summary>
    </member>
    <member name="F:System.Net.Security.TlsCipherSuite.TLS_DH_anon_EXPORT_WITH_DES40_CBC_SHA">
      <summary vsli:raw="Represents the TLS_DH_anon_EXPORT_WITH_DES40_CBC_SHA cipher suite.">TLS_DH_anon_EXPORT_WITH_DES40_CBC_SHA 暗号スイートを表します。</summary>
    </member>
    <member name="F:System.Net.Security.TlsCipherSuite.TLS_DH_anon_EXPORT_WITH_RC4_40_MD5">
      <summary vsli:raw="Represents the TLS_DH_anon_EXPORT_WITH_RC4_40_MD5 cipher suite.">TLS_DH_anon_EXPORT_WITH_RC4_40_MD5 暗号スイートを表します。</summary>
    </member>
    <member name="F:System.Net.Security.TlsCipherSuite.TLS_DH_anon_WITH_3DES_EDE_CBC_SHA">
      <summary vsli:raw="Represents the TLS_DH_anon_WITH_3DES_EDE_CBC_SHA cipher suite.">TLS_DH_anon_WITH_3DES_EDE_CBC_SHA 暗号スイートを表します。</summary>
    </member>
    <member name="F:System.Net.Security.TlsCipherSuite.TLS_DH_anon_WITH_AES_128_CBC_SHA">
      <summary vsli:raw="Represents the TLS_DH_anon_WITH_AES_128_CBC_SHA cipher suite.">TLS_DH_anon_WITH_AES_128_CBC_SHA 暗号スイートを表します。</summary>
    </member>
    <member name="F:System.Net.Security.TlsCipherSuite.TLS_DH_anon_WITH_AES_128_CBC_SHA256">
      <summary vsli:raw="Represents the TLS_DH_anon_WITH_AES_128_CBC_SHA256 cipher suite.">TLS_DH_anon_WITH_AES_128_CBC_SHA256 暗号スイートを表します。</summary>
    </member>
    <member name="F:System.Net.Security.TlsCipherSuite.TLS_DH_anon_WITH_AES_128_GCM_SHA256">
      <summary vsli:raw="Represents the TLS_DH_anon_WITH_AES_128_GCM_SHA256 cipher suite.">TLS_DH_anon_WITH_AES_128_GCM_SHA256 暗号スイートを表します。</summary>
    </member>
    <member name="F:System.Net.Security.TlsCipherSuite.TLS_DH_anon_WITH_AES_256_CBC_SHA">
      <summary vsli:raw="Represents the TLS_DH_anon_WITH_AES_256_CBC_SHA cipher suite.">TLS_DH_anon_WITH_AES_256_CBC_SHA 暗号スイートを表します。</summary>
    </member>
    <member name="F:System.Net.Security.TlsCipherSuite.TLS_DH_anon_WITH_AES_256_CBC_SHA256">
      <summary vsli:raw="Represents the TLS_DH_anon_WITH_AES_256_CBC_SHA256 cipher suite.">TLS_DH_anon_WITH_AES_256_CBC_SHA256 暗号スイートを表します。</summary>
    </member>
    <member name="F:System.Net.Security.TlsCipherSuite.TLS_DH_anon_WITH_AES_256_GCM_SHA384">
      <summary vsli:raw="Represents the TLS_DH_anon_WITH_AES_256_GCM_SHA384 cipher suite.">TLS_DH_anon_WITH_AES_256_GCM_SHA384 暗号スイートを表します。</summary>
    </member>
    <member name="F:System.Net.Security.TlsCipherSuite.TLS_DH_anon_WITH_ARIA_128_CBC_SHA256">
      <summary vsli:raw="Represents the TLS_DH_anon_WITH_ARIA_128_CBC_SHA256 cipher suite.">TLS_DH_anon_WITH_ARIA_128_CBC_SHA256 暗号スイートを表します。</summary>
    </member>
    <member name="F:System.Net.Security.TlsCipherSuite.TLS_DH_anon_WITH_ARIA_128_GCM_SHA256">
      <summary vsli:raw="Represents the TLS_DH_anon_WITH_ARIA_128_GCM_SHA256 cipher suite.">TLS_DH_anon_WITH_ARIA_128_GCM_SHA256 暗号スイートを表します。</summary>
    </member>
    <member name="F:System.Net.Security.TlsCipherSuite.TLS_DH_anon_WITH_ARIA_256_CBC_SHA384">
      <summary vsli:raw="Represents the TLS_DH_anon_WITH_ARIA_256_CBC_SHA384 cipher suite.">TLS_DH_anon_WITH_ARIA_256_CBC_SHA384 暗号スイートを表します。</summary>
    </member>
    <member name="F:System.Net.Security.TlsCipherSuite.TLS_DH_anon_WITH_ARIA_256_GCM_SHA384">
      <summary vsli:raw="Represents the TLS_DH_anon_WITH_ARIA_256_GCM_SHA384 cipher suite.">TLS_DH_anon_WITH_ARIA_256_GCM_SHA384 暗号スイートを表します。</summary>
    </member>
    <member name="F:System.Net.Security.TlsCipherSuite.TLS_DH_anon_WITH_CAMELLIA_128_CBC_SHA">
      <summary vsli:raw="Represents the TLS_DH_anon_WITH_CAMELLIA_128_CBC_SHA cipher suite.">TLS_DH_anon_WITH_CAMELLIA_128_CBC_SHA 暗号スイートを表します。</summary>
    </member>
    <member name="F:System.Net.Security.TlsCipherSuite.TLS_DH_anon_WITH_CAMELLIA_128_CBC_SHA256">
      <summary vsli:raw="Represents the TLS_DH_anon_WITH_CAMELLIA_128_CBC_SHA256 cipher suite.">TLS_DH_anon_WITH_CAMELLIA_128_CBC_SHA256 暗号スイートを表します。</summary>
    </member>
    <member name="F:System.Net.Security.TlsCipherSuite.TLS_DH_anon_WITH_CAMELLIA_128_GCM_SHA256">
      <summary vsli:raw="Represents the TLS_DH_anon_WITH_CAMELLIA_128_GCM_SHA256 cipher suite.">TLS_DH_anon_WITH_CAMELLIA_128_GCM_SHA256 暗号スイートを表します。</summary>
    </member>
    <member name="F:System.Net.Security.TlsCipherSuite.TLS_DH_anon_WITH_CAMELLIA_256_CBC_SHA">
      <summary vsli:raw="Represents the TLS_DH_anon_WITH_CAMELLIA_256_CBC_SHA cipher suite.">TLS_DH_anon_WITH_CAMELLIA_256_CBC_SHA 暗号スイートを表します。</summary>
    </member>
    <member name="F:System.Net.Security.TlsCipherSuite.TLS_DH_anon_WITH_CAMELLIA_256_CBC_SHA256">
      <summary vsli:raw="Represents the TLS_DH_anon_WITH_CAMELLIA_256_CBC_SHA256 cipher suite.">TLS_DH_anon_WITH_CAMELLIA_256_CBC_SHA256 暗号スイートを表します。</summary>
    </member>
    <member name="F:System.Net.Security.TlsCipherSuite.TLS_DH_anon_WITH_CAMELLIA_256_GCM_SHA384">
      <summary vsli:raw="Represents the TLS_DH_anon_WITH_CAMELLIA_256_GCM_SHA384 cipher suite.">TLS_DH_anon_WITH_CAMELLIA_256_GCM_SHA384 暗号スイートを表します。</summary>
    </member>
    <member name="F:System.Net.Security.TlsCipherSuite.TLS_DH_anon_WITH_DES_CBC_SHA">
      <summary vsli:raw="Represents the TLS_DH_anon_WITH_DES_CBC_SHA cipher suite.">TLS_DH_anon_WITH_DES_CBC_SHA 暗号スイートを表します。</summary>
    </member>
    <member name="F:System.Net.Security.TlsCipherSuite.TLS_DH_anon_WITH_RC4_128_MD5">
      <summary vsli:raw="Represents the TLS_DH_anon_WITH_RC4_128_MD5 cipher suite.">TLS_DH_anon_WITH_RC4_128_MD5 暗号スイートを表します。</summary>
    </member>
    <member name="F:System.Net.Security.TlsCipherSuite.TLS_DH_anon_WITH_SEED_CBC_SHA">
      <summary vsli:raw="Represents the TLS_DH_anon_WITH_SEED_CBC_SHA cipher suite.">TLS_DH_anon_WITH_SEED_CBC_SHA 暗号スイートを表します。</summary>
    </member>
    <member name="F:System.Net.Security.TlsCipherSuite.TLS_DH_DSS_EXPORT_WITH_DES40_CBC_SHA">
      <summary vsli:raw="Represents the TLS_DH_DSS_EXPORT_WITH_DES40_CBC_SHA cipher suite.">TLS_DH_DSS_EXPORT_WITH_DES40_CBC_SHA 暗号スイートを表します。</summary>
    </member>
    <member name="F:System.Net.Security.TlsCipherSuite.TLS_DH_DSS_WITH_3DES_EDE_CBC_SHA">
      <summary vsli:raw="Represents the TLS_DH_DSS_WITH_3DES_EDE_CBC_SHA cipher suite.">TLS_DH_DSS_WITH_3DES_EDE_CBC_SHA 暗号スイートを表します。</summary>
    </member>
    <member name="F:System.Net.Security.TlsCipherSuite.TLS_DH_DSS_WITH_AES_128_CBC_SHA">
      <summary vsli:raw="Represents the TLS_DH_DSS_WITH_AES_128_CBC_SHA cipher suite.">TLS_DH_DSS_WITH_AES_128_CBC_SHA 暗号スイートを表します。</summary>
    </member>
    <member name="F:System.Net.Security.TlsCipherSuite.TLS_DH_DSS_WITH_AES_128_CBC_SHA256">
      <summary vsli:raw="Represents the TLS_DH_DSS_WITH_AES_128_CBC_SHA256 cipher suite.">TLS_DH_DSS_WITH_AES_128_CBC_SHA256 暗号スイートを表します。</summary>
    </member>
    <member name="F:System.Net.Security.TlsCipherSuite.TLS_DH_DSS_WITH_AES_128_GCM_SHA256">
      <summary vsli:raw="Represents the TLS_DH_DSS_WITH_AES_128_GCM_SHA256 cipher suite.">TLS_DH_DSS_WITH_AES_128_GCM_SHA256 暗号スイートを表します。</summary>
    </member>
    <member name="F:System.Net.Security.TlsCipherSuite.TLS_DH_DSS_WITH_AES_256_CBC_SHA">
      <summary vsli:raw="Represents the TLS_DH_DSS_WITH_AES_256_CBC_SHA cipher suite.">TLS_DH_DSS_WITH_AES_256_CBC_SHA 暗号スイートを表します。</summary>
    </member>
    <member name="F:System.Net.Security.TlsCipherSuite.TLS_DH_DSS_WITH_AES_256_CBC_SHA256">
      <summary vsli:raw="Represents the TLS_DH_DSS_WITH_AES_256_CBC_SHA256 cipher suite.">TLS_DH_DSS_WITH_AES_256_CBC_SHA256 暗号スイートを表します。</summary>
    </member>
    <member name="F:System.Net.Security.TlsCipherSuite.TLS_DH_DSS_WITH_AES_256_GCM_SHA384">
      <summary vsli:raw="Represents the TLS_DH_DSS_WITH_AES_256_GCM_SHA384 cipher suite.">TLS_DH_DSS_WITH_AES_256_GCM_SHA384 暗号スイートを表します。</summary>
    </member>
    <member name="F:System.Net.Security.TlsCipherSuite.TLS_DH_DSS_WITH_ARIA_128_CBC_SHA256">
      <summary vsli:raw="Represents the TLS_DH_DSS_WITH_ARIA_128_CBC_SHA256 cipher suite.">TLS_DH_DSS_WITH_ARIA_128_CBC_SHA256 暗号スイートを表します。</summary>
    </member>
    <member name="F:System.Net.Security.TlsCipherSuite.TLS_DH_DSS_WITH_ARIA_128_GCM_SHA256">
      <summary vsli:raw="Represents the TLS_DH_DSS_WITH_ARIA_128_GCM_SHA256 cipher suite.">TLS_DH_DSS_WITH_ARIA_128_GCM_SHA256 暗号スイートを表します。</summary>
    </member>
    <member name="F:System.Net.Security.TlsCipherSuite.TLS_DH_DSS_WITH_ARIA_256_CBC_SHA384">
      <summary vsli:raw="Represents the TLS_DH_DSS_WITH_ARIA_256_CBC_SHA384 cipher suite.">TLS_DH_DSS_WITH_ARIA_256_CBC_SHA384 暗号スイートを表します。</summary>
    </member>
    <member name="F:System.Net.Security.TlsCipherSuite.TLS_DH_DSS_WITH_ARIA_256_GCM_SHA384">
      <summary vsli:raw="Represents the TLS_DH_DSS_WITH_ARIA_256_GCM_SHA384 cipher suite.">TLS_DH_DSS_WITH_ARIA_256_GCM_SHA384 暗号スイートを表します。</summary>
    </member>
    <member name="F:System.Net.Security.TlsCipherSuite.TLS_DH_DSS_WITH_CAMELLIA_128_CBC_SHA">
      <summary vsli:raw="Represents the TLS_DH_DSS_WITH_CAMELLIA_128_CBC_SHA cipher suite.">TLS_DH_DSS_WITH_CAMELLIA_128_CBC_SHA 暗号スイートを表します。</summary>
    </member>
    <member name="F:System.Net.Security.TlsCipherSuite.TLS_DH_DSS_WITH_CAMELLIA_128_CBC_SHA256">
      <summary vsli:raw="Represents the TLS_DH_DSS_WITH_CAMELLIA_128_CBC_SHA256 cipher suite.">TLS_DH_DSS_WITH_CAMELLIA_128_CBC_SHA256 暗号スイートを表します。</summary>
    </member>
    <member name="F:System.Net.Security.TlsCipherSuite.TLS_DH_DSS_WITH_CAMELLIA_128_GCM_SHA256">
      <summary vsli:raw="Represents the TLS_DH_DSS_WITH_CAMELLIA_128_GCM_SHA256 cipher suite.">TLS_DH_DSS_WITH_CAMELLIA_128_GCM_SHA256 暗号スイートを表します。</summary>
    </member>
    <member name="F:System.Net.Security.TlsCipherSuite.TLS_DH_DSS_WITH_CAMELLIA_256_CBC_SHA">
      <summary vsli:raw="Represents the TLS_DH_DSS_WITH_CAMELLIA_256_CBC_SHA cipher suite.">TLS_DH_DSS_WITH_CAMELLIA_256_CBC_SHA 暗号スイートを表します。</summary>
    </member>
    <member name="F:System.Net.Security.TlsCipherSuite.TLS_DH_DSS_WITH_CAMELLIA_256_CBC_SHA256">
      <summary vsli:raw="Represents the TLS_DH_DSS_WITH_CAMELLIA_256_CBC_SHA256 cipher suite.">TLS_DH_DSS_WITH_CAMELLIA_256_CBC_SHA256 暗号スイートを表します。</summary>
    </member>
    <member name="F:System.Net.Security.TlsCipherSuite.TLS_DH_DSS_WITH_CAMELLIA_256_GCM_SHA384">
      <summary vsli:raw="Represents the TLS_DH_DSS_WITH_CAMELLIA_256_GCM_SHA384 cipher suite.">TLS_DH_DSS_WITH_CAMELLIA_256_GCM_SHA384 暗号スイートを表します。</summary>
    </member>
    <member name="F:System.Net.Security.TlsCipherSuite.TLS_DH_DSS_WITH_DES_CBC_SHA">
      <summary vsli:raw="Represents the TLS_DH_DSS_WITH_DES_CBC_SHA cipher suite.">TLS_DH_DSS_WITH_DES_CBC_SHA 暗号スイートを表します。</summary>
    </member>
    <member name="F:System.Net.Security.TlsCipherSuite.TLS_DH_DSS_WITH_SEED_CBC_SHA">
      <summary vsli:raw="Represents the TLS_DH_DSS_WITH_SEED_CBC_SHA cipher suite.">TLS_DH_DSS_WITH_SEED_CBC_SHA 暗号スイートを表します。</summary>
    </member>
    <member name="F:System.Net.Security.TlsCipherSuite.TLS_DH_RSA_EXPORT_WITH_DES40_CBC_SHA">
      <summary vsli:raw="Represents the TLS_DH_RSA_EXPORT_WITH_DES40_CBC_SHA cipher suite.">TLS_DH_RSA_EXPORT_WITH_DES40_CBC_SHA 暗号スイートを表します。</summary>
    </member>
    <member name="F:System.Net.Security.TlsCipherSuite.TLS_DH_RSA_WITH_3DES_EDE_CBC_SHA">
      <summary vsli:raw="Represents the TLS_DH_RSA_WITH_3DES_EDE_CBC_SHA cipher suite.">TLS_DH_RSA_WITH_3DES_EDE_CBC_SHA 暗号スイートを表します。</summary>
    </member>
    <member name="F:System.Net.Security.TlsCipherSuite.TLS_DH_RSA_WITH_AES_128_CBC_SHA">
      <summary vsli:raw="Represents the TLS_DH_RSA_WITH_AES_128_CBC_SHA cipher suite.">TLS_DH_RSA_WITH_AES_128_CBC_SHA 暗号スイートを表します。</summary>
    </member>
    <member name="F:System.Net.Security.TlsCipherSuite.TLS_DH_RSA_WITH_AES_128_CBC_SHA256">
      <summary vsli:raw="Represents the TLS_DH_RSA_WITH_AES_128_CBC_SHA256 cipher suite.">TLS_DH_RSA_WITH_AES_128_CBC_SHA256 暗号スイートを表します。</summary>
    </member>
    <member name="F:System.Net.Security.TlsCipherSuite.TLS_DH_RSA_WITH_AES_128_GCM_SHA256">
      <summary vsli:raw="Represents the TLS_DH_RSA_WITH_AES_128_GCM_SHA256 cipher suite.">TLS_DH_RSA_WITH_AES_128_GCM_SHA256 暗号スイートを表します。</summary>
    </member>
    <member name="F:System.Net.Security.TlsCipherSuite.TLS_DH_RSA_WITH_AES_256_CBC_SHA">
      <summary vsli:raw="Represents the TLS_DH_RSA_WITH_AES_256_CBC_SHA cipher suite.">TLS_DH_RSA_WITH_AES_256_CBC_SHA 暗号スイートを表します。</summary>
    </member>
    <member name="F:System.Net.Security.TlsCipherSuite.TLS_DH_RSA_WITH_AES_256_CBC_SHA256">
      <summary vsli:raw="Represents the TLS_DH_RSA_WITH_AES_256_CBC_SHA256 cipher suite.">TLS_DH_RSA_WITH_AES_256_CBC_SHA256 暗号スイートを表します。</summary>
    </member>
    <member name="F:System.Net.Security.TlsCipherSuite.TLS_DH_RSA_WITH_AES_256_GCM_SHA384">
      <summary vsli:raw="Represents the TLS_DH_RSA_WITH_AES_256_GCM_SHA384 cipher suite.">TLS_DH_RSA_WITH_AES_256_GCM_SHA384 暗号スイートを表します。</summary>
    </member>
    <member name="F:System.Net.Security.TlsCipherSuite.TLS_DH_RSA_WITH_ARIA_128_CBC_SHA256">
      <summary vsli:raw="Represents the TLS_DH_RSA_WITH_ARIA_128_CBC_SHA256 cipher suite.">TLS_DH_RSA_WITH_ARIA_128_CBC_SHA256 暗号スイートを表します。</summary>
    </member>
    <member name="F:System.Net.Security.TlsCipherSuite.TLS_DH_RSA_WITH_ARIA_128_GCM_SHA256">
      <summary vsli:raw="Represents the TLS_DH_RSA_WITH_ARIA_128_GCM_SHA256 cipher suite.">TLS_DH_RSA_WITH_ARIA_128_GCM_SHA256 暗号スイートを表します。</summary>
    </member>
    <member name="F:System.Net.Security.TlsCipherSuite.TLS_DH_RSA_WITH_ARIA_256_CBC_SHA384">
      <summary vsli:raw="Represents the TLS_DH_RSA_WITH_ARIA_256_CBC_SHA384 cipher suite.">TLS_DH_RSA_WITH_ARIA_256_CBC_SHA384 暗号スイートを表します。</summary>
    </member>
    <member name="F:System.Net.Security.TlsCipherSuite.TLS_DH_RSA_WITH_ARIA_256_GCM_SHA384">
      <summary vsli:raw="Represents the TLS_DH_RSA_WITH_ARIA_256_GCM_SHA384 cipher suite.">TLS_DH_RSA_WITH_ARIA_256_GCM_SHA384 暗号スイートを表します。</summary>
    </member>
    <member name="F:System.Net.Security.TlsCipherSuite.TLS_DH_RSA_WITH_CAMELLIA_128_CBC_SHA">
      <summary vsli:raw="Represents the TLS_DH_RSA_WITH_CAMELLIA_128_CBC_SHA cipher suite.">TLS_DH_RSA_WITH_CAMELLIA_128_CBC_SHA 暗号スイートを表します。</summary>
    </member>
    <member name="F:System.Net.Security.TlsCipherSuite.TLS_DH_RSA_WITH_CAMELLIA_128_CBC_SHA256">
      <summary vsli:raw="Represents the TLS_DH_RSA_WITH_CAMELLIA_128_CBC_SHA256 cipher suite.">TLS_DH_RSA_WITH_CAMELLIA_128_CBC_SHA256 暗号スイートを表します。</summary>
    </member>
    <member name="F:System.Net.Security.TlsCipherSuite.TLS_DH_RSA_WITH_CAMELLIA_128_GCM_SHA256">
      <summary vsli:raw="Represents the TLS_DH_RSA_WITH_CAMELLIA_128_GCM_SHA256 cipher suite.">TLS_DH_RSA_WITH_CAMELLIA_128_GCM_SHA256 暗号スイートを表します。</summary>
    </member>
    <member name="F:System.Net.Security.TlsCipherSuite.TLS_DH_RSA_WITH_CAMELLIA_256_CBC_SHA">
      <summary vsli:raw="Represents the TLS_DH_RSA_WITH_CAMELLIA_256_CBC_SHA cipher suite.">TLS_DH_RSA_WITH_CAMELLIA_256_CBC_SHA 暗号スイートを表します。</summary>
    </member>
    <member name="F:System.Net.Security.TlsCipherSuite.TLS_DH_RSA_WITH_CAMELLIA_256_CBC_SHA256">
      <summary vsli:raw="Represents the TLS_DH_RSA_WITH_CAMELLIA_256_CBC_SHA256 cipher suite.">TLS_DH_RSA_WITH_CAMELLIA_256_CBC_SHA256 暗号スイートを表します。</summary>
    </member>
    <member name="F:System.Net.Security.TlsCipherSuite.TLS_DH_RSA_WITH_CAMELLIA_256_GCM_SHA384">
      <summary vsli:raw="Represents the TLS_DH_RSA_WITH_CAMELLIA_256_GCM_SHA384 cipher suite.">TLS_DH_RSA_WITH_CAMELLIA_256_GCM_SHA384 暗号スイートを表します。</summary>
    </member>
    <member name="F:System.Net.Security.TlsCipherSuite.TLS_DH_RSA_WITH_DES_CBC_SHA">
      <summary vsli:raw="Represents the TLS_DH_RSA_WITH_DES_CBC_SHA cipher suite.">TLS_DH_RSA_WITH_DES_CBC_SHA 暗号スイートを表します。</summary>
    </member>
    <member name="F:System.Net.Security.TlsCipherSuite.TLS_DH_RSA_WITH_SEED_CBC_SHA">
      <summary vsli:raw="Represents the TLS_DH_RSA_WITH_SEED_CBC_SHA cipher suite.">TLS_DH_RSA_WITH_SEED_CBC_SHA 暗号スイートを表します。</summary>
    </member>
    <member name="F:System.Net.Security.TlsCipherSuite.TLS_DHE_DSS_EXPORT_WITH_DES40_CBC_SHA">
      <summary vsli:raw="Represents the TLS_DHE_DSS_EXPORT_WITH_DES40_CBC_SHA cipher suite.">TLS_DHE_DSS_EXPORT_WITH_DES40_CBC_SHA 暗号スイートを表します。</summary>
    </member>
    <member name="F:System.Net.Security.TlsCipherSuite.TLS_DHE_DSS_WITH_3DES_EDE_CBC_SHA">
      <summary vsli:raw="Represents the TLS_DHE_DSS_WITH_3DES_EDE_CBC_SHA cipher suite.">TLS_DHE_DSS_WITH_3DES_EDE_CBC_SHA 暗号スイートを表します。</summary>
    </member>
    <member name="F:System.Net.Security.TlsCipherSuite.TLS_DHE_DSS_WITH_AES_128_CBC_SHA">
      <summary vsli:raw="Represents the TLS_DHE_DSS_WITH_AES_128_CBC_SHA cipher suite.">TLS_DHE_DSS_WITH_AES_128_CBC_SHA 暗号スイートを表します。</summary>
    </member>
    <member name="F:System.Net.Security.TlsCipherSuite.TLS_DHE_DSS_WITH_AES_128_CBC_SHA256">
      <summary vsli:raw="Represents the TLS_DHE_DSS_WITH_AES_128_CBC_SHA256 cipher suite.">TLS_DHE_DSS_WITH_AES_128_CBC_SHA256 暗号スイートを表します。</summary>
    </member>
    <member name="F:System.Net.Security.TlsCipherSuite.TLS_DHE_DSS_WITH_AES_128_GCM_SHA256">
      <summary vsli:raw="Represents the TLS_DHE_DSS_WITH_AES_128_GCM_SHA256 cipher suite.">TLS_DHE_DSS_WITH_AES_128_GCM_SHA256 暗号スイートを表します。</summary>
    </member>
    <member name="F:System.Net.Security.TlsCipherSuite.TLS_DHE_DSS_WITH_AES_256_CBC_SHA">
      <summary vsli:raw="Represents the TLS_DHE_DSS_WITH_AES_256_CBC_SHA cipher suite.">TLS_DHE_DSS_WITH_AES_256_CBC_SHA 暗号スイートを表します。</summary>
    </member>
    <member name="F:System.Net.Security.TlsCipherSuite.TLS_DHE_DSS_WITH_AES_256_CBC_SHA256">
      <summary vsli:raw="Represents the TLS_DHE_DSS_WITH_AES_256_CBC_SHA256 cipher suite.">TLS_DHE_DSS_WITH_AES_256_CBC_SHA256 暗号スイートを表します。</summary>
    </member>
    <member name="F:System.Net.Security.TlsCipherSuite.TLS_DHE_DSS_WITH_AES_256_GCM_SHA384">
      <summary vsli:raw="Represents the TLS_DHE_DSS_WITH_AES_256_GCM_SHA384 cipher suite.">TLS_DHE_DSS_WITH_AES_256_GCM_SHA384 暗号スイートを表します。</summary>
    </member>
    <member name="F:System.Net.Security.TlsCipherSuite.TLS_DHE_DSS_WITH_ARIA_128_CBC_SHA256">
      <summary vsli:raw="Represents the TLS_DHE_DSS_WITH_ARIA_128_CBC_SHA256 cipher suite.">TLS_DHE_DSS_WITH_ARIA_128_CBC_SHA256 暗号スイートを表します。</summary>
    </member>
    <member name="F:System.Net.Security.TlsCipherSuite.TLS_DHE_DSS_WITH_ARIA_128_GCM_SHA256">
      <summary vsli:raw="Represents the TLS_DHE_DSS_WITH_ARIA_128_GCM_SHA256 cipher suite.">TLS_DHE_DSS_WITH_ARIA_128_GCM_SHA256 暗号スイートを表します。</summary>
    </member>
    <member name="F:System.Net.Security.TlsCipherSuite.TLS_DHE_DSS_WITH_ARIA_256_CBC_SHA384">
      <summary vsli:raw="Represents the TLS_DHE_DSS_WITH_ARIA_256_CBC_SHA384 cipher suite.">TLS_DHE_DSS_WITH_ARIA_256_CBC_SHA384 暗号スイートを表します。</summary>
    </member>
    <member name="F:System.Net.Security.TlsCipherSuite.TLS_DHE_DSS_WITH_ARIA_256_GCM_SHA384">
      <summary vsli:raw="Represents the TLS_DHE_DSS_WITH_ARIA_256_GCM_SHA384 cipher suite.">TLS_DHE_DSS_WITH_ARIA_256_GCM_SHA384 暗号スイートを表します。</summary>
    </member>
    <member name="F:System.Net.Security.TlsCipherSuite.TLS_DHE_DSS_WITH_CAMELLIA_128_CBC_SHA">
      <summary vsli:raw="Represents the TLS_DHE_DSS_WITH_CAMELLIA_128_CBC_SHA cipher suite.">TLS_DHE_DSS_WITH_CAMELLIA_128_CBC_SHA 暗号スイートを表します。</summary>
    </member>
    <member name="F:System.Net.Security.TlsCipherSuite.TLS_DHE_DSS_WITH_CAMELLIA_128_CBC_SHA256">
      <summary vsli:raw="Represents the TLS_DHE_DSS_WITH_CAMELLIA_128_CBC_SHA256 cipher suite.">TLS_DHE_DSS_WITH_CAMELLIA_128_CBC_SHA256 暗号スイートを表します。</summary>
    </member>
    <member name="F:System.Net.Security.TlsCipherSuite.TLS_DHE_DSS_WITH_CAMELLIA_128_GCM_SHA256">
      <summary vsli:raw="Represents the TLS_DHE_DSS_WITH_CAMELLIA_128_GCM_SHA256 cipher suite.">TLS_DHE_DSS_WITH_CAMELLIA_128_GCM_SHA256 暗号スイートを表します。</summary>
    </member>
    <member name="F:System.Net.Security.TlsCipherSuite.TLS_DHE_DSS_WITH_CAMELLIA_256_CBC_SHA">
      <summary vsli:raw="Represents the TLS_DHE_DSS_WITH_CAMELLIA_256_CBC_SHA cipher suite.">TLS_DHE_DSS_WITH_CAMELLIA_256_CBC_SHA 暗号スイートを表します。</summary>
    </member>
    <member name="F:System.Net.Security.TlsCipherSuite.TLS_DHE_DSS_WITH_CAMELLIA_256_CBC_SHA256">
      <summary vsli:raw="Represents the TLS_DHE_DSS_WITH_CAMELLIA_256_CBC_SHA256 cipher suite.">TLS_DHE_DSS_WITH_CAMELLIA_256_CBC_SHA256 暗号スイートを表します。</summary>
    </member>
    <member name="F:System.Net.Security.TlsCipherSuite.TLS_DHE_DSS_WITH_CAMELLIA_256_GCM_SHA384">
      <summary vsli:raw="Represents the TLS_DHE_DSS_WITH_CAMELLIA_256_GCM_SHA384 cipher suite.">TLS_DHE_DSS_WITH_CAMELLIA_256_GCM_SHA384 暗号スイートを表します。</summary>
    </member>
    <member name="F:System.Net.Security.TlsCipherSuite.TLS_DHE_DSS_WITH_DES_CBC_SHA">
      <summary vsli:raw="Represents the TLS_DHE_DSS_WITH_DES_CBC_SHA cipher suite.">TLS_DHE_DSS_WITH_DES_CBC_SHA 暗号スイートを表します。</summary>
    </member>
    <member name="F:System.Net.Security.TlsCipherSuite.TLS_DHE_DSS_WITH_SEED_CBC_SHA">
      <summary vsli:raw="Represents the TLS_DHE_DSS_WITH_SEED_CBC_SHA cipher suite.">TLS_DHE_DSS_WITH_SEED_CBC_SHA 暗号スイートを表します。</summary>
    </member>
    <member name="F:System.Net.Security.TlsCipherSuite.TLS_DHE_PSK_WITH_3DES_EDE_CBC_SHA">
      <summary vsli:raw="Represents the TLS_DHE_PSK_WITH_3DES_EDE_CBC_SHA cipher suite.">TLS_DHE_PSK_WITH_3DES_EDE_CBC_SHA 暗号スイートを表します。</summary>
    </member>
    <member name="F:System.Net.Security.TlsCipherSuite.TLS_DHE_PSK_WITH_AES_128_CBC_SHA">
      <summary vsli:raw="Represents the TLS_DHE_PSK_WITH_AES_128_CBC_SHA cipher suite.">TLS_DHE_PSK_WITH_AES_128_CBC_SHA 暗号スイートを表します。</summary>
    </member>
    <member name="F:System.Net.Security.TlsCipherSuite.TLS_DHE_PSK_WITH_AES_128_CBC_SHA256">
      <summary vsli:raw="Represents the TLS_DHE_PSK_WITH_AES_128_CBC_SHA256 cipher suite.">TLS_DHE_PSK_WITH_AES_128_CBC_SHA256 暗号スイートを表します。</summary>
    </member>
    <member name="F:System.Net.Security.TlsCipherSuite.TLS_DHE_PSK_WITH_AES_128_CCM">
      <summary vsli:raw="Represents the TLS_DHE_PSK_WITH_AES_128_CCM cipher suite.">TLS_DHE_PSK_WITH_AES_128_CCM 暗号スイートを表します。</summary>
    </member>
    <member name="F:System.Net.Security.TlsCipherSuite.TLS_DHE_PSK_WITH_AES_128_GCM_SHA256">
      <summary vsli:raw="Represents the TLS_DHE_PSK_WITH_AES_128_GCM_SHA256 cipher suite.">TLS_DHE_PSK_WITH_AES_128_GCM_SHA256 暗号スイートを表します。</summary>
    </member>
    <member name="F:System.Net.Security.TlsCipherSuite.TLS_DHE_PSK_WITH_AES_256_CBC_SHA">
      <summary vsli:raw="Represents the TLS_DHE_PSK_WITH_AES_256_CBC_SHA cipher suite.">TLS_DHE_PSK_WITH_AES_256_CBC_SHA 暗号スイートを表します。</summary>
    </member>
    <member name="F:System.Net.Security.TlsCipherSuite.TLS_DHE_PSK_WITH_AES_256_CBC_SHA384">
      <summary vsli:raw="Represents the TLS_DHE_PSK_WITH_AES_256_CBC_SHA384 cipher suite.">TLS_DHE_PSK_WITH_AES_256_CBC_SHA384 暗号スイートを表します。</summary>
    </member>
    <member name="F:System.Net.Security.TlsCipherSuite.TLS_DHE_PSK_WITH_AES_256_CCM">
      <summary vsli:raw="Represents the TLS_DHE_PSK_WITH_AES_256_CCM cipher suite.">TLS_DHE_PSK_WITH_AES_256_CCM 暗号スイートを表します。</summary>
    </member>
    <member name="F:System.Net.Security.TlsCipherSuite.TLS_DHE_PSK_WITH_AES_256_GCM_SHA384">
      <summary vsli:raw="Represents the TLS_DHE_PSK_WITH_AES_256_GCM_SHA384 cipher suite.">TLS_DHE_PSK_WITH_AES_256_GCM_SHA384 暗号スイートを表します。</summary>
    </member>
    <member name="F:System.Net.Security.TlsCipherSuite.TLS_DHE_PSK_WITH_ARIA_128_CBC_SHA256">
      <summary vsli:raw="Represents the TLS_DHE_PSK_WITH_ARIA_128_CBC_SHA256 cipher suite.">TLS_DHE_PSK_WITH_ARIA_128_CBC_SHA256 暗号スイートを表します。</summary>
    </member>
    <member name="F:System.Net.Security.TlsCipherSuite.TLS_DHE_PSK_WITH_ARIA_128_GCM_SHA256">
      <summary vsli:raw="Represents the TLS_DHE_PSK_WITH_ARIA_128_GCM_SHA256 cipher suite.">TLS_DHE_PSK_WITH_ARIA_128_GCM_SHA256 暗号スイートを表します。</summary>
    </member>
    <member name="F:System.Net.Security.TlsCipherSuite.TLS_DHE_PSK_WITH_ARIA_256_CBC_SHA384">
      <summary vsli:raw="Represents the TLS_DHE_PSK_WITH_ARIA_256_CBC_SHA384 cipher suite.">TLS_DHE_PSK_WITH_ARIA_256_CBC_SHA384 暗号スイートを表します。</summary>
    </member>
    <member name="F:System.Net.Security.TlsCipherSuite.TLS_DHE_PSK_WITH_ARIA_256_GCM_SHA384">
      <summary vsli:raw="Represents the TLS_DHE_PSK_WITH_ARIA_256_GCM_SHA384 cipher suite.">TLS_DHE_PSK_WITH_ARIA_256_GCM_SHA384 暗号スイートを表します。</summary>
    </member>
    <member name="F:System.Net.Security.TlsCipherSuite.TLS_DHE_PSK_WITH_CAMELLIA_128_CBC_SHA256">
      <summary vsli:raw="Represents the TLS_DHE_PSK_WITH_CAMELLIA_128_CBC_SHA256 cipher suite.">TLS_DHE_PSK_WITH_CAMELLIA_128_CBC_SHA256 暗号スイートを表します。</summary>
    </member>
    <member name="F:System.Net.Security.TlsCipherSuite.TLS_DHE_PSK_WITH_CAMELLIA_128_GCM_SHA256">
      <summary vsli:raw="Represents the TLS_DHE_PSK_WITH_CAMELLIA_128_GCM_SHA256 cipher suite.">TLS_DHE_PSK_WITH_CAMELLIA_128_GCM_SHA256 暗号スイートを表します。</summary>
    </member>
    <member name="F:System.Net.Security.TlsCipherSuite.TLS_DHE_PSK_WITH_CAMELLIA_256_CBC_SHA384">
      <summary vsli:raw="Represents the TLS_DHE_PSK_WITH_CAMELLIA_256_CBC_SHA384 cipher suite.">TLS_DHE_PSK_WITH_CAMELLIA_256_CBC_SHA384 暗号スイートを表します。</summary>
    </member>
    <member name="F:System.Net.Security.TlsCipherSuite.TLS_DHE_PSK_WITH_CAMELLIA_256_GCM_SHA384">
      <summary vsli:raw="Represents the TLS_DHE_PSK_WITH_CAMELLIA_256_GCM_SHA384 cipher suite.">TLS_DHE_PSK_WITH_CAMELLIA_256_GCM_SHA384 暗号スイートを表します。</summary>
    </member>
    <member name="F:System.Net.Security.TlsCipherSuite.TLS_DHE_PSK_WITH_CHACHA20_POLY1305_SHA256">
      <summary vsli:raw="Represents the TLS_DHE_PSK_WITH_CHACHA20_POLY1305_SHA256 cipher suite.">TLS_DHE_PSK_WITH_CHACHA20_POLY1305_SHA256 暗号スイートを表します。</summary>
    </member>
    <member name="F:System.Net.Security.TlsCipherSuite.TLS_DHE_PSK_WITH_NULL_SHA">
      <summary vsli:raw="Represents the TLS_DHE_PSK_WITH_NULL_SHA cipher suite.">TLS_DHE_PSK_WITH_NULL_SHA 暗号スイートを表します。</summary>
    </member>
    <member name="F:System.Net.Security.TlsCipherSuite.TLS_DHE_PSK_WITH_NULL_SHA256">
      <summary vsli:raw="Represents the TLS_DHE_PSK_WITH_NULL_SHA256 cipher suite.">TLS_DHE_PSK_WITH_NULL_SHA256 暗号スイートを表します。</summary>
    </member>
    <member name="F:System.Net.Security.TlsCipherSuite.TLS_DHE_PSK_WITH_NULL_SHA384">
      <summary vsli:raw="Represents the TLS_DHE_PSK_WITH_NULL_SHA384 cipher suite.">TLS_DHE_PSK_WITH_NULL_SHA384 暗号スイートを表します。</summary>
    </member>
    <member name="F:System.Net.Security.TlsCipherSuite.TLS_DHE_PSK_WITH_RC4_128_SHA">
      <summary vsli:raw="Represents the TLS_DHE_PSK_WITH_RC4_128_SHA cipher suite.">TLS_DHE_PSK_WITH_RC4_128_SHA 暗号スイートを表します。</summary>
    </member>
    <member name="F:System.Net.Security.TlsCipherSuite.TLS_DHE_RSA_EXPORT_WITH_DES40_CBC_SHA">
      <summary vsli:raw="Represents the TLS_DHE_RSA_EXPORT_WITH_DES40_CBC_SHA cipher suite.">TLS_DHE_RSA_EXPORT_WITH_DES40_CBC_SHA 暗号スイートを表します。</summary>
    </member>
    <member name="F:System.Net.Security.TlsCipherSuite.TLS_DHE_RSA_WITH_3DES_EDE_CBC_SHA">
      <summary vsli:raw="Represents the TLS_DHE_RSA_WITH_3DES_EDE_CBC_SHA cipher suite.">TLS_DHE_RSA_WITH_3DES_EDE_CBC_SHA 暗号スイートを表します。</summary>
    </member>
    <member name="F:System.Net.Security.TlsCipherSuite.TLS_DHE_RSA_WITH_AES_128_CBC_SHA">
      <summary vsli:raw="Represents the TLS_DHE_RSA_WITH_AES_128_CBC_SHA cipher suite.">TLS_DHE_RSA_WITH_AES_128_CBC_SHA 暗号スイートを表します。</summary>
    </member>
    <member name="F:System.Net.Security.TlsCipherSuite.TLS_DHE_RSA_WITH_AES_128_CBC_SHA256">
      <summary vsli:raw="Represents the TLS_DHE_RSA_WITH_AES_128_CBC_SHA256 cipher suite.">TLS_DHE_RSA_WITH_AES_128_CBC_SHA256 暗号スイートを表します。</summary>
    </member>
    <member name="F:System.Net.Security.TlsCipherSuite.TLS_DHE_RSA_WITH_AES_128_CCM">
      <summary vsli:raw="Represents the TLS_DHE_RSA_WITH_AES_128_CCM cipher suite.">TLS_DHE_RSA_WITH_AES_128_CCM 暗号スイートを表します。</summary>
    </member>
    <member name="F:System.Net.Security.TlsCipherSuite.TLS_DHE_RSA_WITH_AES_128_CCM_8">
      <summary vsli:raw="Represents the TLS_DHE_RSA_WITH_AES_128_CCM_8 cipher suite.">TLS_DHE_RSA_WITH_AES_128_CCM_8 暗号スイートを表します。</summary>
    </member>
    <member name="F:System.Net.Security.TlsCipherSuite.TLS_DHE_RSA_WITH_AES_128_GCM_SHA256">
      <summary vsli:raw="Represents the TLS_DHE_RSA_WITH_AES_128_GCM_SHA256 cipher suite.">TLS_DHE_RSA_WITH_AES_128_GCM_SHA256 暗号スイートを表します。</summary>
    </member>
    <member name="F:System.Net.Security.TlsCipherSuite.TLS_DHE_RSA_WITH_AES_256_CBC_SHA">
      <summary vsli:raw="Represents the TLS_DHE_RSA_WITH_AES_256_CBC_SHA cipher suite.">TLS_DHE_RSA_WITH_AES_256_CBC_SHA 暗号スイートを表します。</summary>
    </member>
    <member name="F:System.Net.Security.TlsCipherSuite.TLS_DHE_RSA_WITH_AES_256_CBC_SHA256">
      <summary vsli:raw="Represents the TLS_DHE_RSA_WITH_AES_256_CBC_SHA256 cipher suite.">TLS_DHE_RSA_WITH_AES_256_CBC_SHA256 暗号スイートを表します。</summary>
    </member>
    <member name="F:System.Net.Security.TlsCipherSuite.TLS_DHE_RSA_WITH_AES_256_CCM">
      <summary vsli:raw="Represents the TLS_DHE_RSA_WITH_AES_256_CCM cipher suite.">TLS_DHE_RSA_WITH_AES_256_CCM 暗号スイートを表します。</summary>
    </member>
    <member name="F:System.Net.Security.TlsCipherSuite.TLS_DHE_RSA_WITH_AES_256_CCM_8">
      <summary vsli:raw="Represents the TLS_DHE_RSA_WITH_AES_256_CCM_8 cipher suite.">TLS_DHE_RSA_WITH_AES_256_CCM_8 暗号スイートを表します。</summary>
    </member>
    <member name="F:System.Net.Security.TlsCipherSuite.TLS_DHE_RSA_WITH_AES_256_GCM_SHA384">
      <summary vsli:raw="Represents the TLS_DHE_RSA_WITH_AES_256_GCM_SHA384 cipher suite.">TLS_DHE_RSA_WITH_AES_256_GCM_SHA384 暗号スイートを表します。</summary>
    </member>
    <member name="F:System.Net.Security.TlsCipherSuite.TLS_DHE_RSA_WITH_ARIA_128_CBC_SHA256">
      <summary vsli:raw="Represents the TLS_DHE_RSA_WITH_ARIA_128_CBC_SHA256 cipher suite.">TLS_DHE_RSA_WITH_ARIA_128_CBC_SHA256 暗号スイートを表します。</summary>
    </member>
    <member name="F:System.Net.Security.TlsCipherSuite.TLS_DHE_RSA_WITH_ARIA_128_GCM_SHA256">
      <summary vsli:raw="Represents the TLS_DHE_RSA_WITH_ARIA_128_GCM_SHA256 cipher suite.">TLS_DHE_RSA_WITH_ARIA_128_GCM_SHA256 暗号スイートを表します。</summary>
    </member>
    <member name="F:System.Net.Security.TlsCipherSuite.TLS_DHE_RSA_WITH_ARIA_256_CBC_SHA384">
      <summary vsli:raw="Represents the TLS_DHE_RSA_WITH_ARIA_256_CBC_SHA384 cipher suite.">TLS_DHE_RSA_WITH_ARIA_256_CBC_SHA384 暗号スイートを表します。</summary>
    </member>
    <member name="F:System.Net.Security.TlsCipherSuite.TLS_DHE_RSA_WITH_ARIA_256_GCM_SHA384">
      <summary vsli:raw="Represents the TLS_DHE_RSA_WITH_ARIA_256_GCM_SHA384 cipher suite.">TLS_DHE_RSA_WITH_ARIA_256_GCM_SHA384 暗号スイートを表します。</summary>
    </member>
    <member name="F:System.Net.Security.TlsCipherSuite.TLS_DHE_RSA_WITH_CAMELLIA_128_CBC_SHA">
      <summary vsli:raw="Represents the TLS_DHE_RSA_WITH_CAMELLIA_128_CBC_SHA cipher suite.">TLS_DHE_RSA_WITH_CAMELLIA_128_CBC_SHA 暗号スイートを表します。</summary>
    </member>
    <member name="F:System.Net.Security.TlsCipherSuite.TLS_DHE_RSA_WITH_CAMELLIA_128_CBC_SHA256">
      <summary vsli:raw="Represents the TLS_DHE_RSA_WITH_CAMELLIA_128_CBC_SHA256 cipher suite.">TLS_DHE_RSA_WITH_CAMELLIA_128_CBC_SHA256 暗号スイートを表します。</summary>
    </member>
    <member name="F:System.Net.Security.TlsCipherSuite.TLS_DHE_RSA_WITH_CAMELLIA_128_GCM_SHA256">
      <summary vsli:raw="Represents the TLS_DHE_RSA_WITH_CAMELLIA_128_GCM_SHA256 cipher suite.">TLS_DHE_RSA_WITH_CAMELLIA_128_GCM_SHA256 暗号スイートを表します。</summary>
    </member>
    <member name="F:System.Net.Security.TlsCipherSuite.TLS_DHE_RSA_WITH_CAMELLIA_256_CBC_SHA">
      <summary vsli:raw="Represents the TLS_DHE_RSA_WITH_CAMELLIA_256_CBC_SHA cipher suite.">TLS_DHE_RSA_WITH_CAMELLIA_256_CBC_SHA 暗号スイートを表します。</summary>
    </member>
    <member name="F:System.Net.Security.TlsCipherSuite.TLS_DHE_RSA_WITH_CAMELLIA_256_CBC_SHA256">
      <summary vsli:raw="Represents the TLS_DHE_RSA_WITH_CAMELLIA_256_CBC_SHA256 cipher suite.">TLS_DHE_RSA_WITH_CAMELLIA_256_CBC_SHA256 暗号スイートを表します。</summary>
    </member>
    <member name="F:System.Net.Security.TlsCipherSuite.TLS_DHE_RSA_WITH_CAMELLIA_256_GCM_SHA384">
      <summary vsli:raw="Represents the TLS_DHE_RSA_WITH_CAMELLIA_256_GCM_SHA384 cipher suite.">TLS_DHE_RSA_WITH_CAMELLIA_256_GCM_SHA384 暗号スイートを表します。</summary>
    </member>
    <member name="F:System.Net.Security.TlsCipherSuite.TLS_DHE_RSA_WITH_CHACHA20_POLY1305_SHA256">
      <summary vsli:raw="Represents the TLS_DHE_RSA_WITH_CHACHA20_POLY1305_SHA256 cipher suite.">TLS_DHE_RSA_WITH_CHACHA20_POLY1305_SHA256 暗号スイートを表します。</summary>
    </member>
    <member name="F:System.Net.Security.TlsCipherSuite.TLS_DHE_RSA_WITH_DES_CBC_SHA">
      <summary vsli:raw="Represents the TLS_DHE_RSA_WITH_DES_CBC_SHA cipher suite.">TLS_DHE_RSA_WITH_DES_CBC_SHA 暗号スイートを表します。</summary>
    </member>
    <member name="F:System.Net.Security.TlsCipherSuite.TLS_DHE_RSA_WITH_SEED_CBC_SHA">
      <summary vsli:raw="Represents the TLS_DHE_RSA_WITH_SEED_CBC_SHA cipher suite.">TLS_DHE_RSA_WITH_SEED_CBC_SHA 暗号スイートを表します。</summary>
    </member>
    <member name="F:System.Net.Security.TlsCipherSuite.TLS_ECCPWD_WITH_AES_128_CCM_SHA256">
      <summary vsli:raw="Represents the TLS_ECCPWD_WITH_AES_128_CCM_SHA256 cipher suite.">TLS_ECCPWD_WITH_AES_128_CCM_SHA256 暗号スイートを表します。</summary>
    </member>
    <member name="F:System.Net.Security.TlsCipherSuite.TLS_ECCPWD_WITH_AES_128_GCM_SHA256">
      <summary vsli:raw="Represents the TLS_ECCPWD_WITH_AES_128_GCM_SHA256 cipher suite.">TLS_ECCPWD_WITH_AES_128_GCM_SHA256 暗号スイートを表します。</summary>
    </member>
    <member name="F:System.Net.Security.TlsCipherSuite.TLS_ECCPWD_WITH_AES_256_CCM_SHA384">
      <summary vsli:raw="Represents the TLS_ECCPWD_WITH_AES_256_CCM_SHA384 cipher suite.">TLS_ECCPWD_WITH_AES_256_CCM_SHA384 暗号スイートを表します。</summary>
    </member>
    <member name="F:System.Net.Security.TlsCipherSuite.TLS_ECCPWD_WITH_AES_256_GCM_SHA384">
      <summary vsli:raw="Represents the TLS_ECCPWD_WITH_AES_256_GCM_SHA384 cipher suite.">TLS_ECCPWD_WITH_AES_256_GCM_SHA384 暗号スイートを表します。</summary>
    </member>
    <member name="F:System.Net.Security.TlsCipherSuite.TLS_ECDH_anon_WITH_3DES_EDE_CBC_SHA">
      <summary vsli:raw="Represents the TLS_ECDH_anon_WITH_3DES_EDE_CBC_SHA cipher suite.">TLS_ECDH_anon_WITH_3DES_EDE_CBC_SHA 暗号スイートを表します。</summary>
    </member>
    <member name="F:System.Net.Security.TlsCipherSuite.TLS_ECDH_anon_WITH_AES_128_CBC_SHA">
      <summary vsli:raw="Represents the TLS_ECDH_anon_WITH_AES_128_CBC_SHA cipher suite.">TLS_ECDH_anon_WITH_AES_128_CBC_SHA 暗号スイートを表します。</summary>
    </member>
    <member name="F:System.Net.Security.TlsCipherSuite.TLS_ECDH_anon_WITH_AES_256_CBC_SHA">
      <summary vsli:raw="Represents the TLS_ECDH_anon_WITH_AES_256_CBC_SHA cipher suite.">TLS_ECDH_anon_WITH_AES_256_CBC_SHA 暗号スイートを表します。</summary>
    </member>
    <member name="F:System.Net.Security.TlsCipherSuite.TLS_ECDH_anon_WITH_NULL_SHA">
      <summary vsli:raw="Represents the TLS_ECDH_anon_WITH_NULL_SHA cipher suite.">TLS_ECDH_anon_WITH_NULL_SHA 暗号スイートを表します。</summary>
    </member>
    <member name="F:System.Net.Security.TlsCipherSuite.TLS_ECDH_anon_WITH_RC4_128_SHA">
      <summary vsli:raw="Represents the TLS_ECDH_anon_WITH_RC4_128_SHA cipher suite.">TLS_ECDH_anon_WITH_RC4_128_SHA 暗号スイートを表します。</summary>
    </member>
    <member name="F:System.Net.Security.TlsCipherSuite.TLS_ECDH_ECDSA_WITH_3DES_EDE_CBC_SHA">
      <summary vsli:raw="Represents the TLS_ECDH_ECDSA_WITH_3DES_EDE_CBC_SHA cipher suite.">TLS_ECDH_ECDSA_WITH_3DES_EDE_CBC_SHA 暗号スイートを表します。</summary>
    </member>
    <member name="F:System.Net.Security.TlsCipherSuite.TLS_ECDH_ECDSA_WITH_AES_128_CBC_SHA">
      <summary vsli:raw="Represents the TLS_ECDH_ECDSA_WITH_AES_128_CBC_SHA cipher suite.">TLS_ECDH_ECDSA_WITH_AES_128_CBC_SHA 暗号スイートを表します。</summary>
    </member>
    <member name="F:System.Net.Security.TlsCipherSuite.TLS_ECDH_ECDSA_WITH_AES_128_CBC_SHA256">
      <summary vsli:raw="Represents the TLS_ECDH_ECDSA_WITH_AES_128_CBC_SHA256 cipher suite.">TLS_ECDH_ECDSA_WITH_AES_128_CBC_SHA256 暗号スイートを表します。</summary>
    </member>
    <member name="F:System.Net.Security.TlsCipherSuite.TLS_ECDH_ECDSA_WITH_AES_128_GCM_SHA256">
      <summary vsli:raw="Represents the TLS_ECDH_ECDSA_WITH_AES_128_GCM_SHA256 cipher suite.">TLS_ECDH_ECDSA_WITH_AES_128_GCM_SHA256 暗号スイートを表します。</summary>
    </member>
    <member name="F:System.Net.Security.TlsCipherSuite.TLS_ECDH_ECDSA_WITH_AES_256_CBC_SHA">
      <summary vsli:raw="Represents the TLS_ECDH_ECDSA_WITH_AES_256_CBC_SHA cipher suite.">TLS_ECDH_ECDSA_WITH_AES_256_CBC_SHA 暗号スイートを表します。</summary>
    </member>
    <member name="F:System.Net.Security.TlsCipherSuite.TLS_ECDH_ECDSA_WITH_AES_256_CBC_SHA384">
      <summary vsli:raw="Represents the TLS_ECDH_ECDSA_WITH_AES_256_CBC_SHA384 cipher suite.">TLS_ECDH_ECDSA_WITH_AES_256_CBC_SHA384 暗号スイートを表します。</summary>
    </member>
    <member name="F:System.Net.Security.TlsCipherSuite.TLS_ECDH_ECDSA_WITH_AES_256_GCM_SHA384">
      <summary vsli:raw="Represents the TLS_ECDH_ECDSA_WITH_AES_256_GCM_SHA384 cipher suite.">TLS_ECDH_ECDSA_WITH_AES_256_GCM_SHA384 暗号スイートを表します。</summary>
    </member>
    <member name="F:System.Net.Security.TlsCipherSuite.TLS_ECDH_ECDSA_WITH_ARIA_128_CBC_SHA256">
      <summary vsli:raw="Represents the TLS_ECDH_ECDSA_WITH_ARIA_128_CBC_SHA256 cipher suite.">TLS_ECDH_ECDSA_WITH_ARIA_128_CBC_SHA256 暗号スイートを表します。</summary>
    </member>
    <member name="F:System.Net.Security.TlsCipherSuite.TLS_ECDH_ECDSA_WITH_ARIA_128_GCM_SHA256">
      <summary vsli:raw="Represents the TLS_ECDH_ECDSA_WITH_ARIA_128_GCM_SHA256 cipher suite.">TLS_ECDH_ECDSA_WITH_ARIA_128_GCM_SHA256 暗号スイートを表します。</summary>
    </member>
    <member name="F:System.Net.Security.TlsCipherSuite.TLS_ECDH_ECDSA_WITH_ARIA_256_CBC_SHA384">
      <summary vsli:raw="Represents the TLS_ECDH_ECDSA_WITH_ARIA_256_CBC_SHA384 cipher suite.">TLS_ECDH_ECDSA_WITH_ARIA_256_CBC_SHA384 暗号スイートを表します。</summary>
    </member>
    <member name="F:System.Net.Security.TlsCipherSuite.TLS_ECDH_ECDSA_WITH_ARIA_256_GCM_SHA384">
      <summary vsli:raw="Represents the TLS_ECDH_ECDSA_WITH_ARIA_256_GCM_SHA384 cipher suite.">TLS_ECDH_ECDSA_WITH_ARIA_256_GCM_SHA384 暗号スイートを表します。</summary>
    </member>
    <member name="F:System.Net.Security.TlsCipherSuite.TLS_ECDH_ECDSA_WITH_CAMELLIA_128_CBC_SHA256">
      <summary vsli:raw="Represents the TLS_ECDH_ECDSA_WITH_CAMELLIA_128_CBC_SHA256 cipher suite.">TLS_ECDH_ECDSA_WITH_CAMELLIA_128_CBC_SHA256 暗号スイートを表します。</summary>
    </member>
    <member name="F:System.Net.Security.TlsCipherSuite.TLS_ECDH_ECDSA_WITH_CAMELLIA_128_GCM_SHA256">
      <summary vsli:raw="Represents the TLS_ECDH_ECDSA_WITH_CAMELLIA_128_GCM_SHA256 cipher suite.">TLS_ECDH_ECDSA_WITH_CAMELLIA_128_GCM_SHA256 暗号スイートを表します。</summary>
    </member>
    <member name="F:System.Net.Security.TlsCipherSuite.TLS_ECDH_ECDSA_WITH_CAMELLIA_256_CBC_SHA384">
      <summary vsli:raw="Represents the TLS_ECDH_ECDSA_WITH_CAMELLIA_256_CBC_SHA384 cipher suite.">TLS_ECDH_ECDSA_WITH_CAMELLIA_256_CBC_SHA384 暗号スイートを表します。</summary>
    </member>
    <member name="F:System.Net.Security.TlsCipherSuite.TLS_ECDH_ECDSA_WITH_CAMELLIA_256_GCM_SHA384">
      <summary vsli:raw="Represents the TLS_ECDH_ECDSA_WITH_CAMELLIA_256_GCM_SHA384 cipher suite.">TLS_ECDH_ECDSA_WITH_CAMELLIA_256_GCM_SHA384 暗号スイートを表します。</summary>
    </member>
    <member name="F:System.Net.Security.TlsCipherSuite.TLS_ECDH_ECDSA_WITH_NULL_SHA">
      <summary vsli:raw="Represents the TLS_ECDH_ECDSA_WITH_NULL_SHA cipher suite.">TLS_ECDH_ECDSA_WITH_NULL_SHA 暗号スイートを表します。</summary>
    </member>
    <member name="F:System.Net.Security.TlsCipherSuite.TLS_ECDH_ECDSA_WITH_RC4_128_SHA">
      <summary vsli:raw="Represents the TLS_ECDH_ECDSA_WITH_RC4_128_SHA cipher suite.">TLS_ECDH_ECDSA_WITH_RC4_128_SHA 暗号スイートを表します。</summary>
    </member>
    <member name="F:System.Net.Security.TlsCipherSuite.TLS_ECDH_RSA_WITH_3DES_EDE_CBC_SHA">
      <summary vsli:raw="Represents the TLS_ECDH_RSA_WITH_3DES_EDE_CBC_SHA cipher suite.">TLS_ECDH_RSA_WITH_3DES_EDE_CBC_SHA 暗号スイートを表します。</summary>
    </member>
    <member name="F:System.Net.Security.TlsCipherSuite.TLS_ECDH_RSA_WITH_AES_128_CBC_SHA">
      <summary vsli:raw="Represents the TLS_ECDH_RSA_WITH_AES_128_CBC_SHA cipher suite.">TLS_ECDH_RSA_WITH_AES_128_CBC_SHA 暗号スイートを表します。</summary>
    </member>
    <member name="F:System.Net.Security.TlsCipherSuite.TLS_ECDH_RSA_WITH_AES_128_CBC_SHA256">
      <summary vsli:raw="Represents the TLS_ECDH_RSA_WITH_AES_128_CBC_SHA256 cipher suite.">TLS_ECDH_RSA_WITH_AES_128_CBC_SHA256 暗号スイートを表します。</summary>
    </member>
    <member name="F:System.Net.Security.TlsCipherSuite.TLS_ECDH_RSA_WITH_AES_128_GCM_SHA256">
      <summary vsli:raw="Represents the TLS_ECDH_RSA_WITH_AES_128_GCM_SHA256 cipher suite.">TLS_ECDH_RSA_WITH_AES_128_GCM_SHA256 暗号スイートを表します。</summary>
    </member>
    <member name="F:System.Net.Security.TlsCipherSuite.TLS_ECDH_RSA_WITH_AES_256_CBC_SHA">
      <summary vsli:raw="Represents the TLS_ECDH_RSA_WITH_AES_256_CBC_SHA cipher suite.">TLS_ECDH_RSA_WITH_AES_256_CBC_SHA 暗号スイートを表します。</summary>
    </member>
    <member name="F:System.Net.Security.TlsCipherSuite.TLS_ECDH_RSA_WITH_AES_256_CBC_SHA384">
      <summary vsli:raw="Represents the TLS_ECDH_RSA_WITH_AES_256_CBC_SHA384 cipher suite.">TLS_ECDH_RSA_WITH_AES_256_CBC_SHA384 暗号スイートを表します。</summary>
    </member>
    <member name="F:System.Net.Security.TlsCipherSuite.TLS_ECDH_RSA_WITH_AES_256_GCM_SHA384">
      <summary vsli:raw="Represents the TLS_ECDH_RSA_WITH_AES_256_GCM_SHA384 cipher suite.">TLS_ECDH_RSA_WITH_AES_256_GCM_SHA384 暗号スイートを表します。</summary>
    </member>
    <member name="F:System.Net.Security.TlsCipherSuite.TLS_ECDH_RSA_WITH_ARIA_128_CBC_SHA256">
      <summary vsli:raw="Represents the TLS_ECDH_RSA_WITH_ARIA_128_CBC_SHA256 cipher suite.">TLS_ECDH_RSA_WITH_ARIA_128_CBC_SHA256 暗号スイートを表します。</summary>
    </member>
    <member name="F:System.Net.Security.TlsCipherSuite.TLS_ECDH_RSA_WITH_ARIA_128_GCM_SHA256">
      <summary vsli:raw="Represents the TLS_ECDH_RSA_WITH_ARIA_128_GCM_SHA256 cipher suite.">TLS_ECDH_RSA_WITH_ARIA_128_GCM_SHA256 暗号スイートを表します。</summary>
    </member>
    <member name="F:System.Net.Security.TlsCipherSuite.TLS_ECDH_RSA_WITH_ARIA_256_CBC_SHA384">
      <summary vsli:raw="Represents the TLS_ECDH_RSA_WITH_ARIA_256_CBC_SHA384 cipher suite.">TLS_ECDH_RSA_WITH_ARIA_256_CBC_SHA384 暗号スイートを表します。</summary>
    </member>
    <member name="F:System.Net.Security.TlsCipherSuite.TLS_ECDH_RSA_WITH_ARIA_256_GCM_SHA384">
      <summary vsli:raw="Represents the TLS_ECDH_RSA_WITH_ARIA_256_GCM_SHA384 cipher suite.">TLS_ECDH_RSA_WITH_ARIA_256_GCM_SHA384 暗号スイートを表します。</summary>
    </member>
    <member name="F:System.Net.Security.TlsCipherSuite.TLS_ECDH_RSA_WITH_CAMELLIA_128_CBC_SHA256">
      <summary vsli:raw="Represents the TLS_ECDH_RSA_WITH_CAMELLIA_128_CBC_SHA256 cipher suite.">TLS_ECDH_RSA_WITH_CAMELLIA_128_CBC_SHA256 暗号スイートを表します。</summary>
    </member>
    <member name="F:System.Net.Security.TlsCipherSuite.TLS_ECDH_RSA_WITH_CAMELLIA_128_GCM_SHA256">
      <summary vsli:raw="Represents the TLS_ECDH_RSA_WITH_CAMELLIA_128_GCM_SHA256 cipher suite.">TLS_ECDH_RSA_WITH_CAMELLIA_128_GCM_SHA256 暗号スイートを表します。</summary>
    </member>
    <member name="F:System.Net.Security.TlsCipherSuite.TLS_ECDH_RSA_WITH_CAMELLIA_256_CBC_SHA384">
      <summary vsli:raw="Represents the TLS_ECDH_RSA_WITH_CAMELLIA_256_CBC_SHA384 cipher suite.">TLS_ECDH_RSA_WITH_CAMELLIA_256_CBC_SHA384 暗号スイートを表します。</summary>
    </member>
    <member name="F:System.Net.Security.TlsCipherSuite.TLS_ECDH_RSA_WITH_CAMELLIA_256_GCM_SHA384">
      <summary vsli:raw="Represents the TLS_ECDH_RSA_WITH_CAMELLIA_256_GCM_SHA384 cipher suite.">TLS_ECDH_RSA_WITH_CAMELLIA_256_GCM_SHA384 暗号スイートを表します。</summary>
    </member>
    <member name="F:System.Net.Security.TlsCipherSuite.TLS_ECDH_RSA_WITH_NULL_SHA">
      <summary vsli:raw="Represents the TLS_ECDH_RSA_WITH_NULL_SHA cipher suite.">TLS_ECDH_RSA_WITH_NULL_SHA 暗号スイートを表します。</summary>
    </member>
    <member name="F:System.Net.Security.TlsCipherSuite.TLS_ECDH_RSA_WITH_RC4_128_SHA">
      <summary vsli:raw="Represents the TLS_ECDH_RSA_WITH_RC4_128_SHA cipher suite.">TLS_ECDH_RSA_WITH_RC4_128_SHA 暗号スイートを表します。</summary>
    </member>
    <member name="F:System.Net.Security.TlsCipherSuite.TLS_ECDHE_ECDSA_WITH_3DES_EDE_CBC_SHA">
      <summary vsli:raw="Represents the TLS_ECDHE_ECDSA_WITH_3DES_EDE_CBC_SHA cipher suite.">TLS_ECDHE_ECDSA_WITH_3DES_EDE_CBC_SHA 暗号スイートを表します。</summary>
    </member>
    <member name="F:System.Net.Security.TlsCipherSuite.TLS_ECDHE_ECDSA_WITH_AES_128_CBC_SHA">
      <summary vsli:raw="Represents the TLS_ECDHE_ECDSA_WITH_AES_128_CBC_SHA cipher suite.">TLS_ECDHE_ECDSA_WITH_AES_128_CBC_SHA 暗号スイートを表します。</summary>
    </member>
    <member name="F:System.Net.Security.TlsCipherSuite.TLS_ECDHE_ECDSA_WITH_AES_128_CBC_SHA256">
      <summary vsli:raw="Represents the TLS_ECDHE_ECDSA_WITH_AES_128_CBC_SHA256 cipher suite.">TLS_ECDHE_ECDSA_WITH_AES_128_CBC_SHA256 暗号スイートを表します。</summary>
    </member>
    <member name="F:System.Net.Security.TlsCipherSuite.TLS_ECDHE_ECDSA_WITH_AES_128_CCM">
      <summary vsli:raw="Represents the TLS_ECDHE_ECDSA_WITH_AES_128_CCM cipher suite.">TLS_ECDHE_ECDSA_WITH_AES_128_CCM 暗号スイートを表します。</summary>
    </member>
    <member name="F:System.Net.Security.TlsCipherSuite.TLS_ECDHE_ECDSA_WITH_AES_128_CCM_8">
      <summary vsli:raw="Represents the TLS_ECDHE_ECDSA_WITH_AES_128_CCM_8 cipher suite.">TLS_ECDHE_ECDSA_WITH_AES_128_CCM_8 暗号スイートを表します。</summary>
    </member>
    <member name="F:System.Net.Security.TlsCipherSuite.TLS_ECDHE_ECDSA_WITH_AES_128_GCM_SHA256">
      <summary vsli:raw="Represents the TLS_ECDHE_ECDSA_WITH_AES_128_GCM_SHA256 cipher suite.">TLS_ECDHE_ECDSA_WITH_AES_128_GCM_SHA256 暗号スイートを表します。</summary>
    </member>
    <member name="F:System.Net.Security.TlsCipherSuite.TLS_ECDHE_ECDSA_WITH_AES_256_CBC_SHA">
      <summary vsli:raw="Represents the TLS_ECDHE_ECDSA_WITH_AES_256_CBC_SHA cipher suite.">TLS_ECDHE_ECDSA_WITH_AES_256_CBC_SHA 暗号スイートを表します。</summary>
    </member>
    <member name="F:System.Net.Security.TlsCipherSuite.TLS_ECDHE_ECDSA_WITH_AES_256_CBC_SHA384">
      <summary vsli:raw="Represents the TLS_ECDHE_ECDSA_WITH_AES_256_CBC_SHA384 cipher suite.">TLS_ECDHE_ECDSA_WITH_AES_256_CBC_SHA384 暗号スイートを表します。</summary>
    </member>
    <member name="F:System.Net.Security.TlsCipherSuite.TLS_ECDHE_ECDSA_WITH_AES_256_CCM">
      <summary vsli:raw="Represents the TLS_ECDHE_ECDSA_WITH_AES_256_CCM cipher suite.">TLS_ECDHE_ECDSA_WITH_AES_256_CCM 暗号スイートを表します。</summary>
    </member>
    <member name="F:System.Net.Security.TlsCipherSuite.TLS_ECDHE_ECDSA_WITH_AES_256_CCM_8">
      <summary vsli:raw="Represents the TLS_ECDHE_ECDSA_WITH_AES_256_CCM_8 cipher suite.">TLS_ECDHE_ECDSA_WITH_AES_256_CCM_8 暗号スイートを表します。</summary>
    </member>
    <member name="F:System.Net.Security.TlsCipherSuite.TLS_ECDHE_ECDSA_WITH_AES_256_GCM_SHA384">
      <summary vsli:raw="Represents the TLS_ECDHE_ECDSA_WITH_AES_256_GCM_SHA384 cipher suite.">TLS_ECDHE_ECDSA_WITH_AES_256_GCM_SHA384 暗号スイートを表します。</summary>
    </member>
    <member name="F:System.Net.Security.TlsCipherSuite.TLS_ECDHE_ECDSA_WITH_ARIA_128_CBC_SHA256">
      <summary vsli:raw="Represents the TLS_ECDHE_ECDSA_WITH_ARIA_128_CBC_SHA256 cipher suite.">TLS_ECDHE_ECDSA_WITH_ARIA_128_CBC_SHA256 暗号スイートを表します。</summary>
    </member>
    <member name="F:System.Net.Security.TlsCipherSuite.TLS_ECDHE_ECDSA_WITH_ARIA_128_GCM_SHA256">
      <summary vsli:raw="Represents the TLS_ECDHE_ECDSA_WITH_ARIA_128_GCM_SHA256 cipher suite.">TLS_ECDHE_ECDSA_WITH_ARIA_128_GCM_SHA256 暗号スイートを表します。</summary>
    </member>
    <member name="F:System.Net.Security.TlsCipherSuite.TLS_ECDHE_ECDSA_WITH_ARIA_256_CBC_SHA384">
      <summary vsli:raw="Represents the TLS_ECDHE_ECDSA_WITH_ARIA_256_CBC_SHA384 cipher suite.">TLS_ECDHE_ECDSA_WITH_ARIA_256_CBC_SHA384 暗号スイートを表します。</summary>
    </member>
    <member name="F:System.Net.Security.TlsCipherSuite.TLS_ECDHE_ECDSA_WITH_ARIA_256_GCM_SHA384">
      <summary vsli:raw="Represents the TLS_ECDHE_ECDSA_WITH_ARIA_256_GCM_SHA384 cipher suite.">TLS_ECDHE_ECDSA_WITH_ARIA_256_GCM_SHA384 暗号スイートを表します。</summary>
    </member>
    <member name="F:System.Net.Security.TlsCipherSuite.TLS_ECDHE_ECDSA_WITH_CAMELLIA_128_CBC_SHA256">
      <summary vsli:raw="Represents the TLS_ECDHE_ECDSA_WITH_CAMELLIA_128_CBC_SHA256 cipher suite.">TLS_ECDHE_ECDSA_WITH_CAMELLIA_128_CBC_SHA256 暗号スイートを表します。</summary>
    </member>
    <member name="F:System.Net.Security.TlsCipherSuite.TLS_ECDHE_ECDSA_WITH_CAMELLIA_128_GCM_SHA256">
      <summary vsli:raw="Represents the TLS_ECDHE_ECDSA_WITH_CAMELLIA_128_GCM_SHA256 cipher suite.">TLS_ECDHE_ECDSA_WITH_CAMELLIA_128_GCM_SHA256 暗号スイートを表します。</summary>
    </member>
    <member name="F:System.Net.Security.TlsCipherSuite.TLS_ECDHE_ECDSA_WITH_CAMELLIA_256_CBC_SHA384">
      <summary vsli:raw="Represents the TLS_ECDHE_ECDSA_WITH_CAMELLIA_256_CBC_SHA384 cipher suite.">TLS_ECDHE_ECDSA_WITH_CAMELLIA_256_CBC_SHA384 暗号スイートを表します。</summary>
    </member>
    <member name="F:System.Net.Security.TlsCipherSuite.TLS_ECDHE_ECDSA_WITH_CAMELLIA_256_GCM_SHA384">
      <summary vsli:raw="Represents the TLS_ECDHE_ECDSA_WITH_CAMELLIA_256_GCM_SHA384 cipher suite.">TLS_ECDHE_ECDSA_WITH_CAMELLIA_256_GCM_SHA384 暗号スイートを表します。</summary>
    </member>
    <member name="F:System.Net.Security.TlsCipherSuite.TLS_ECDHE_ECDSA_WITH_CHACHA20_POLY1305_SHA256">
      <summary vsli:raw="Represents the TLS_ECDHE_ECDSA_WITH_CHACHA20_POLY1305_SHA256 cipher suite.">TLS_ECDHE_ECDSA_WITH_CHACHA20_POLY1305_SHA256 暗号スイートを表します。</summary>
    </member>
    <member name="F:System.Net.Security.TlsCipherSuite.TLS_ECDHE_ECDSA_WITH_NULL_SHA">
      <summary vsli:raw="Represents the TLS_ECDHE_ECDSA_WITH_NULL_SHA cipher suite.">TLS_ECDHE_ECDSA_WITH_NULL_SHA 暗号スイートを表します。</summary>
    </member>
    <member name="F:System.Net.Security.TlsCipherSuite.TLS_ECDHE_ECDSA_WITH_RC4_128_SHA">
      <summary vsli:raw="Represents the TLS_ECDHE_ECDSA_WITH_RC4_128_SHA cipher suite.">TLS_ECDHE_ECDSA_WITH_RC4_128_SHA 暗号スイートを表します。</summary>
    </member>
    <member name="F:System.Net.Security.TlsCipherSuite.TLS_ECDHE_PSK_WITH_3DES_EDE_CBC_SHA">
      <summary vsli:raw="Represents the TLS_ECDHE_PSK_WITH_3DES_EDE_CBC_SHA cipher suite.">TLS_ECDHE_PSK_WITH_3DES_EDE_CBC_SHA 暗号スイートを表します。</summary>
    </member>
    <member name="F:System.Net.Security.TlsCipherSuite.TLS_ECDHE_PSK_WITH_AES_128_CBC_SHA">
      <summary vsli:raw="Represents the TLS_ECDHE_PSK_WITH_AES_128_CBC_SHA cipher suite.">TLS_ECDHE_PSK_WITH_AES_128_CBC_SHA 暗号スイートを表します。</summary>
    </member>
    <member name="F:System.Net.Security.TlsCipherSuite.TLS_ECDHE_PSK_WITH_AES_128_CBC_SHA256">
      <summary vsli:raw="Represents the TLS_ECDHE_PSK_WITH_AES_128_CBC_SHA256 cipher suite.">TLS_ECDHE_PSK_WITH_AES_128_CBC_SHA256 暗号スイートを表します。</summary>
    </member>
    <member name="F:System.Net.Security.TlsCipherSuite.TLS_ECDHE_PSK_WITH_AES_128_CCM_8_SHA256">
      <summary vsli:raw="Represents the TLS_ECDHE_PSK_WITH_AES_128_CCM_8_SHA256 cipher suite.">TLS_ECDHE_PSK_WITH_AES_128_CCM_8_SHA256 暗号スイートを表します。</summary>
    </member>
    <member name="F:System.Net.Security.TlsCipherSuite.TLS_ECDHE_PSK_WITH_AES_128_CCM_SHA256">
      <summary vsli:raw="Represents the TLS_ECDHE_PSK_WITH_AES_128_CCM_SHA256 cipher suite.">TLS_ECDHE_PSK_WITH_AES_128_CCM_SHA256 暗号スイートを表します。</summary>
    </member>
    <member name="F:System.Net.Security.TlsCipherSuite.TLS_ECDHE_PSK_WITH_AES_128_GCM_SHA256">
      <summary vsli:raw="Represents the TLS_ECDHE_PSK_WITH_AES_128_GCM_SHA256 cipher suite.">TLS_ECDHE_PSK_WITH_AES_128_GCM_SHA256 暗号スイートを表します。</summary>
    </member>
    <member name="F:System.Net.Security.TlsCipherSuite.TLS_ECDHE_PSK_WITH_AES_256_CBC_SHA">
      <summary vsli:raw="Represents the TLS_ECDHE_PSK_WITH_AES_256_CBC_SHA cipher suite.">TLS_ECDHE_PSK_WITH_AES_256_CBC_SHA 暗号スイートを表します。</summary>
    </member>
    <member name="F:System.Net.Security.TlsCipherSuite.TLS_ECDHE_PSK_WITH_AES_256_CBC_SHA384">
      <summary vsli:raw="Represents the TLS_ECDHE_PSK_WITH_AES_256_CBC_SHA384 cipher suite.">TLS_ECDHE_PSK_WITH_AES_256_CBC_SHA384 暗号スイートを表します。</summary>
    </member>
    <member name="F:System.Net.Security.TlsCipherSuite.TLS_ECDHE_PSK_WITH_AES_256_GCM_SHA384">
      <summary vsli:raw="Represents the TLS_ECDHE_PSK_WITH_AES_256_GCM_SHA384 cipher suite.">TLS_ECDHE_PSK_WITH_AES_256_GCM_SHA384 暗号スイートを表します。</summary>
    </member>
    <member name="F:System.Net.Security.TlsCipherSuite.TLS_ECDHE_PSK_WITH_ARIA_128_CBC_SHA256">
      <summary vsli:raw="Represents the TLS_ECDHE_PSK_WITH_ARIA_128_CBC_SHA256 cipher suite.">TLS_ECDHE_PSK_WITH_ARIA_128_CBC_SHA256 暗号スイートを表します。</summary>
    </member>
    <member name="F:System.Net.Security.TlsCipherSuite.TLS_ECDHE_PSK_WITH_ARIA_256_CBC_SHA384">
      <summary vsli:raw="Represents the TLS_ECDHE_PSK_WITH_ARIA_256_CBC_SHA384 cipher suite.">TLS_ECDHE_PSK_WITH_ARIA_256_CBC_SHA384 暗号スイートを表します。</summary>
    </member>
    <member name="F:System.Net.Security.TlsCipherSuite.TLS_ECDHE_PSK_WITH_CAMELLIA_128_CBC_SHA256">
      <summary vsli:raw="Represents the TLS_ECDHE_PSK_WITH_CAMELLIA_128_CBC_SHA256 cipher suite.">TLS_ECDHE_PSK_WITH_CAMELLIA_128_CBC_SHA256 暗号スイートを表します。</summary>
    </member>
    <member name="F:System.Net.Security.TlsCipherSuite.TLS_ECDHE_PSK_WITH_CAMELLIA_256_CBC_SHA384">
      <summary vsli:raw="Represents the TLS_ECDHE_PSK_WITH_CAMELLIA_256_CBC_SHA384 cipher suite.">TLS_ECDHE_PSK_WITH_CAMELLIA_256_CBC_SHA384 暗号スイートを表します。</summary>
    </member>
    <member name="F:System.Net.Security.TlsCipherSuite.TLS_ECDHE_PSK_WITH_CHACHA20_POLY1305_SHA256">
      <summary vsli:raw="Represents the TLS_ECDHE_PSK_WITH_CHACHA20_POLY1305_SHA256 cipher suite.">TLS_ECDHE_PSK_WITH_CHACHA20_POLY1305_SHA256 暗号スイートを表します。</summary>
    </member>
    <member name="F:System.Net.Security.TlsCipherSuite.TLS_ECDHE_PSK_WITH_NULL_SHA">
      <summary vsli:raw="Represents the TLS_ECDHE_PSK_WITH_NULL_SHA cipher suite.">TLS_ECDHE_PSK_WITH_NULL_SHA 暗号スイートを表します。</summary>
    </member>
    <member name="F:System.Net.Security.TlsCipherSuite.TLS_ECDHE_PSK_WITH_NULL_SHA256">
      <summary vsli:raw="Represents the TLS_ECDHE_PSK_WITH_NULL_SHA256 cipher suite.">TLS_ECDHE_PSK_WITH_NULL_SHA256 暗号スイートを表します。</summary>
    </member>
    <member name="F:System.Net.Security.TlsCipherSuite.TLS_ECDHE_PSK_WITH_NULL_SHA384">
      <summary vsli:raw="Represents the TLS_ECDHE_PSK_WITH_NULL_SHA384 cipher suite.">TLS_ECDHE_PSK_WITH_NULL_SHA384 暗号スイートを表します。</summary>
    </member>
    <member name="F:System.Net.Security.TlsCipherSuite.TLS_ECDHE_PSK_WITH_RC4_128_SHA">
      <summary vsli:raw="Represents the TLS_ECDHE_PSK_WITH_RC4_128_SHA cipher suite.">TLS_ECDHE_PSK_WITH_RC4_128_SHA 暗号スイートを表します。</summary>
    </member>
    <member name="F:System.Net.Security.TlsCipherSuite.TLS_ECDHE_RSA_WITH_3DES_EDE_CBC_SHA">
      <summary vsli:raw="Represents the TLS_ECDHE_RSA_WITH_3DES_EDE_CBC_SHA cipher suite.">TLS_ECDHE_RSA_WITH_3DES_EDE_CBC_SHA 暗号スイートを表します。</summary>
    </member>
    <member name="F:System.Net.Security.TlsCipherSuite.TLS_ECDHE_RSA_WITH_AES_128_CBC_SHA">
      <summary vsli:raw="Represents the TLS_ECDHE_RSA_WITH_AES_128_CBC_SHA cipher suite.">TLS_ECDHE_RSA_WITH_AES_128_CBC_SHA 暗号スイートを表します。</summary>
    </member>
    <member name="F:System.Net.Security.TlsCipherSuite.TLS_ECDHE_RSA_WITH_AES_128_CBC_SHA256">
      <summary vsli:raw="Represents the TLS_ECDHE_RSA_WITH_AES_128_CBC_SHA256 cipher suite.">TLS_ECDHE_RSA_WITH_AES_128_CBC_SHA256 暗号スイートを表します。</summary>
    </member>
    <member name="F:System.Net.Security.TlsCipherSuite.TLS_ECDHE_RSA_WITH_AES_128_GCM_SHA256">
      <summary vsli:raw="Represents the TLS_ECDHE_RSA_WITH_AES_128_GCM_SHA256 cipher suite.">TLS_ECDHE_RSA_WITH_AES_128_GCM_SHA256 暗号スイートを表します。</summary>
    </member>
    <member name="F:System.Net.Security.TlsCipherSuite.TLS_ECDHE_RSA_WITH_AES_256_CBC_SHA">
      <summary vsli:raw="Represents the TLS_ECDHE_RSA_WITH_AES_256_CBC_SHA cipher suite.">TLS_ECDHE_RSA_WITH_AES_256_CBC_SHA 暗号スイートを表します。</summary>
    </member>
    <member name="F:System.Net.Security.TlsCipherSuite.TLS_ECDHE_RSA_WITH_AES_256_CBC_SHA384">
      <summary vsli:raw="Represents the TLS_ECDHE_RSA_WITH_AES_256_CBC_SHA384 cipher suite.">TLS_ECDHE_RSA_WITH_AES_256_CBC_SHA384 暗号スイートを表します。</summary>
    </member>
    <member name="F:System.Net.Security.TlsCipherSuite.TLS_ECDHE_RSA_WITH_AES_256_GCM_SHA384">
      <summary vsli:raw="Represents the TLS_ECDHE_RSA_WITH_AES_256_GCM_SHA384 cipher suite.">TLS_ECDHE_RSA_WITH_AES_256_GCM_SHA384 暗号スイートを表します。</summary>
    </member>
    <member name="F:System.Net.Security.TlsCipherSuite.TLS_ECDHE_RSA_WITH_ARIA_128_CBC_SHA256">
      <summary vsli:raw="Represents the TLS_ECDHE_RSA_WITH_ARIA_128_CBC_SHA256 cipher suite.">TLS_ECDHE_RSA_WITH_ARIA_128_CBC_SHA256 暗号スイートを表します。</summary>
    </member>
    <member name="F:System.Net.Security.TlsCipherSuite.TLS_ECDHE_RSA_WITH_ARIA_128_GCM_SHA256">
      <summary vsli:raw="Represents the TLS_ECDHE_RSA_WITH_ARIA_128_GCM_SHA256 cipher suite.">TLS_ECDHE_RSA_WITH_ARIA_128_GCM_SHA256 暗号スイートを表します。</summary>
    </member>
    <member name="F:System.Net.Security.TlsCipherSuite.TLS_ECDHE_RSA_WITH_ARIA_256_CBC_SHA384">
      <summary vsli:raw="Represents the TLS_ECDHE_RSA_WITH_ARIA_256_CBC_SHA384 cipher suite.">TLS_ECDHE_RSA_WITH_ARIA_256_CBC_SHA384 暗号スイートを表します。</summary>
    </member>
    <member name="F:System.Net.Security.TlsCipherSuite.TLS_ECDHE_RSA_WITH_ARIA_256_GCM_SHA384">
      <summary vsli:raw="Represents the TLS_ECDHE_RSA_WITH_ARIA_256_GCM_SHA384 cipher suite.">TLS_ECDHE_RSA_WITH_ARIA_256_GCM_SHA384 暗号スイートを表します。</summary>
    </member>
    <member name="F:System.Net.Security.TlsCipherSuite.TLS_ECDHE_RSA_WITH_CAMELLIA_128_CBC_SHA256">
      <summary vsli:raw="Represents the TLS_ECDHE_RSA_WITH_CAMELLIA_128_CBC_SHA256 cipher suite.">TLS_ECDHE_RSA_WITH_CAMELLIA_128_CBC_SHA256 暗号スイートを表します。</summary>
    </member>
    <member name="F:System.Net.Security.TlsCipherSuite.TLS_ECDHE_RSA_WITH_CAMELLIA_128_GCM_SHA256">
      <summary vsli:raw="Represents the TLS_ECDHE_RSA_WITH_CAMELLIA_128_GCM_SHA256 cipher suite.">TLS_ECDHE_RSA_WITH_CAMELLIA_128_GCM_SHA256 暗号スイートを表します。</summary>
    </member>
    <member name="F:System.Net.Security.TlsCipherSuite.TLS_ECDHE_RSA_WITH_CAMELLIA_256_CBC_SHA384">
      <summary vsli:raw="Represents the TLS_ECDHE_RSA_WITH_CAMELLIA_256_CBC_SHA384 cipher suite.">TLS_ECDHE_RSA_WITH_CAMELLIA_256_CBC_SHA384 暗号スイートを表します。</summary>
    </member>
    <member name="F:System.Net.Security.TlsCipherSuite.TLS_ECDHE_RSA_WITH_CAMELLIA_256_GCM_SHA384">
      <summary vsli:raw="Represents the TLS_ECDHE_RSA_WITH_CAMELLIA_256_GCM_SHA384 cipher suite.">TLS_ECDHE_RSA_WITH_CAMELLIA_256_GCM_SHA384 暗号スイートを表します。</summary>
    </member>
    <member name="F:System.Net.Security.TlsCipherSuite.TLS_ECDHE_RSA_WITH_CHACHA20_POLY1305_SHA256">
      <summary vsli:raw="Represents the TLS_ECDHE_RSA_WITH_CHACHA20_POLY1305_SHA256 cipher suite.">TLS_ECDHE_RSA_WITH_CHACHA20_POLY1305_SHA256 暗号スイートを表します。</summary>
    </member>
    <member name="F:System.Net.Security.TlsCipherSuite.TLS_ECDHE_RSA_WITH_NULL_SHA">
      <summary vsli:raw="Represents the TLS_ECDHE_RSA_WITH_NULL_SHA cipher suite.">TLS_ECDHE_RSA_WITH_NULL_SHA 暗号スイートを表します。</summary>
    </member>
    <member name="F:System.Net.Security.TlsCipherSuite.TLS_ECDHE_RSA_WITH_RC4_128_SHA">
      <summary vsli:raw="Represents the TLS_ECDHE_RSA_WITH_RC4_128_SHA cipher suite.">TLS_ECDHE_RSA_WITH_RC4_128_SHA 暗号スイートを表します。</summary>
    </member>
    <member name="F:System.Net.Security.TlsCipherSuite.TLS_KRB5_EXPORT_WITH_DES_CBC_40_MD5">
      <summary vsli:raw="Represents the TLS_KRB5_EXPORT_WITH_DES_CBC_40_MD5 cipher suite.">TLS_KRB5_EXPORT_WITH_DES_CBC_40_MD5 暗号スイートを表します。</summary>
    </member>
    <member name="F:System.Net.Security.TlsCipherSuite.TLS_KRB5_EXPORT_WITH_DES_CBC_40_SHA">
      <summary vsli:raw="Represents the TLS_KRB5_EXPORT_WITH_DES_CBC_40_SHA cipher suite.">TLS_KRB5_EXPORT_WITH_DES_CBC_40_SHA 暗号スイートを表します。</summary>
    </member>
    <member name="F:System.Net.Security.TlsCipherSuite.TLS_KRB5_EXPORT_WITH_RC2_CBC_40_MD5">
      <summary vsli:raw="Represents the TLS_KRB5_EXPORT_WITH_RC2_CBC_40_MD5 cipher suite.">TLS_KRB5_EXPORT_WITH_RC2_CBC_40_MD5 暗号スイートを表します。</summary>
    </member>
    <member name="F:System.Net.Security.TlsCipherSuite.TLS_KRB5_EXPORT_WITH_RC2_CBC_40_SHA">
      <summary vsli:raw="Represents the TLS_KRB5_EXPORT_WITH_RC2_CBC_40_SHA cipher suite.">TLS_KRB5_EXPORT_WITH_RC2_CBC_40_SHA 暗号スイートを表します。</summary>
    </member>
    <member name="F:System.Net.Security.TlsCipherSuite.TLS_KRB5_EXPORT_WITH_RC4_40_MD5">
      <summary vsli:raw="Represents the TLS_KRB5_EXPORT_WITH_RC4_40_MD5 cipher suite.">TLS_KRB5_EXPORT_WITH_RC4_40_MD5 暗号スイートを表します。</summary>
    </member>
    <member name="F:System.Net.Security.TlsCipherSuite.TLS_KRB5_EXPORT_WITH_RC4_40_SHA">
      <summary vsli:raw="Represents the TLS_KRB5_EXPORT_WITH_RC4_40_SHA cipher suite.">TLS_KRB5_EXPORT_WITH_RC4_40_SHA 暗号スイートを表します。</summary>
    </member>
    <member name="F:System.Net.Security.TlsCipherSuite.TLS_KRB5_WITH_3DES_EDE_CBC_MD5">
      <summary vsli:raw="Represents the TLS_KRB5_WITH_3DES_EDE_CBC_MD5 cipher suite.">TLS_KRB5_WITH_3DES_EDE_CBC_MD5 暗号スイートを表します。</summary>
    </member>
    <member name="F:System.Net.Security.TlsCipherSuite.TLS_KRB5_WITH_3DES_EDE_CBC_SHA">
      <summary vsli:raw="Represents the TLS_KRB5_WITH_3DES_EDE_CBC_SHA cipher suite.">TLS_KRB5_WITH_3DES_EDE_CBC_SHA 暗号スイートを表します。</summary>
    </member>
    <member name="F:System.Net.Security.TlsCipherSuite.TLS_KRB5_WITH_DES_CBC_MD5">
      <summary vsli:raw="Represents the TLS_KRB5_WITH_DES_CBC_MD5 cipher suite.">TLS_KRB5_WITH_DES_CBC_MD5 暗号スイートを表します。</summary>
    </member>
    <member name="F:System.Net.Security.TlsCipherSuite.TLS_KRB5_WITH_DES_CBC_SHA">
      <summary vsli:raw="Represents the TLS_KRB5_WITH_DES_CBC_SHA cipher suite.">TLS_KRB5_WITH_DES_CBC_SHA 暗号スイートを表します。</summary>
    </member>
    <member name="F:System.Net.Security.TlsCipherSuite.TLS_KRB5_WITH_IDEA_CBC_MD5">
      <summary vsli:raw="Represents the TLS_KRB5_WITH_IDEA_CBC_MD5 cipher suite.">TLS_KRB5_WITH_IDEA_CBC_MD5 暗号スイートを表します。</summary>
    </member>
    <member name="F:System.Net.Security.TlsCipherSuite.TLS_KRB5_WITH_IDEA_CBC_SHA">
      <summary vsli:raw="Represents the TLS_KRB5_WITH_IDEA_CBC_SHA cipher suite.">TLS_KRB5_WITH_IDEA_CBC_SHA 暗号スイートを表します。</summary>
    </member>
    <member name="F:System.Net.Security.TlsCipherSuite.TLS_KRB5_WITH_RC4_128_MD5">
      <summary vsli:raw="Represents the TLS_KRB5_WITH_RC4_128_MD5 cipher suite.">TLS_KRB5_WITH_RC4_128_MD5 暗号スイートを表します。</summary>
    </member>
    <member name="F:System.Net.Security.TlsCipherSuite.TLS_KRB5_WITH_RC4_128_SHA">
      <summary vsli:raw="Represents the TLS_KRB5_WITH_RC4_128_SHA cipher suite.">TLS_KRB5_WITH_RC4_128_SHA 暗号スイートを表します。</summary>
    </member>
    <member name="F:System.Net.Security.TlsCipherSuite.TLS_NULL_WITH_NULL_NULL">
      <summary vsli:raw="Represents the TLS_NULL_WITH_NULL_NULL cipher suite.">TLS_NULL_WITH_NULL_NULL 暗号スイートを表します。</summary>
    </member>
    <member name="F:System.Net.Security.TlsCipherSuite.TLS_PSK_DHE_WITH_AES_128_CCM_8">
      <summary vsli:raw="Represents the TLS_PSK_DHE_WITH_AES_128_CCM_8 cipher suite.">TLS_PSK_DHE_WITH_AES_128_CCM_8 暗号スイートを表します。</summary>
    </member>
    <member name="F:System.Net.Security.TlsCipherSuite.TLS_PSK_DHE_WITH_AES_256_CCM_8">
      <summary vsli:raw="Represents the TLS_PSK_DHE_WITH_AES_256_CCM_8 cipher suite.">TLS_PSK_DHE_WITH_AES_256_CCM_8 暗号スイートを表します。</summary>
    </member>
    <member name="F:System.Net.Security.TlsCipherSuite.TLS_PSK_WITH_3DES_EDE_CBC_SHA">
      <summary vsli:raw="Represents the TLS_PSK_WITH_3DES_EDE_CBC_SHA cipher suite.">TLS_PSK_WITH_3DES_EDE_CBC_SHA 暗号スイートを表します。</summary>
    </member>
    <member name="F:System.Net.Security.TlsCipherSuite.TLS_PSK_WITH_AES_128_CBC_SHA">
      <summary vsli:raw="Represents the TLS_PSK_WITH_AES_128_CBC_SHA cipher suite.">TLS_PSK_WITH_AES_128_CBC_SHA 暗号スイートを表します。</summary>
    </member>
    <member name="F:System.Net.Security.TlsCipherSuite.TLS_PSK_WITH_AES_128_CBC_SHA256">
      <summary vsli:raw="Represents the TLS_PSK_WITH_AES_128_CBC_SHA256 cipher suite.">TLS_PSK_WITH_AES_128_CBC_SHA256 暗号スイートを表します。</summary>
    </member>
    <member name="F:System.Net.Security.TlsCipherSuite.TLS_PSK_WITH_AES_128_CCM">
      <summary vsli:raw="Represents the TLS_PSK_WITH_AES_128_CCM cipher suite.">TLS_PSK_WITH_AES_128_CCM 暗号スイートを表します。</summary>
    </member>
    <member name="F:System.Net.Security.TlsCipherSuite.TLS_PSK_WITH_AES_128_CCM_8">
      <summary vsli:raw="Represents the TLS_PSK_WITH_AES_128_CCM_8 cipher suite.">TLS_PSK_WITH_AES_128_CCM_8 暗号スイートを表します。</summary>
    </member>
    <member name="F:System.Net.Security.TlsCipherSuite.TLS_PSK_WITH_AES_128_GCM_SHA256">
      <summary vsli:raw="Represents the TLS_PSK_WITH_AES_128_GCM_SHA256 cipher suite.">TLS_PSK_WITH_AES_128_GCM_SHA256 暗号スイートを表します。</summary>
    </member>
    <member name="F:System.Net.Security.TlsCipherSuite.TLS_PSK_WITH_AES_256_CBC_SHA">
      <summary vsli:raw="Represents the TLS_PSK_WITH_AES_256_CBC_SHA cipher suite.">TLS_PSK_WITH_AES_256_CBC_SHA 暗号スイートを表します。</summary>
    </member>
    <member name="F:System.Net.Security.TlsCipherSuite.TLS_PSK_WITH_AES_256_CBC_SHA384">
      <summary vsli:raw="Represents the TLS_PSK_WITH_AES_256_CBC_SHA384 cipher suite.">TLS_PSK_WITH_AES_256_CBC_SHA384 暗号スイートを表します。</summary>
    </member>
    <member name="F:System.Net.Security.TlsCipherSuite.TLS_PSK_WITH_AES_256_CCM">
      <summary vsli:raw="Represents the TLS_PSK_WITH_AES_256_CCM cipher suite.">TLS_PSK_WITH_AES_256_CCM 暗号スイートを表します。</summary>
    </member>
    <member name="F:System.Net.Security.TlsCipherSuite.TLS_PSK_WITH_AES_256_CCM_8">
      <summary vsli:raw="Represents the TLS_PSK_WITH_AES_256_CCM_8 cipher suite.">TLS_PSK_WITH_AES_256_CCM_8 暗号スイートを表します。</summary>
    </member>
    <member name="F:System.Net.Security.TlsCipherSuite.TLS_PSK_WITH_AES_256_GCM_SHA384">
      <summary vsli:raw="Represents the TLS_PSK_WITH_AES_256_GCM_SHA384 cipher suite.">TLS_PSK_WITH_AES_256_GCM_SHA384 暗号スイートを表します。</summary>
    </member>
    <member name="F:System.Net.Security.TlsCipherSuite.TLS_PSK_WITH_ARIA_128_CBC_SHA256">
      <summary vsli:raw="Represents the TLS_PSK_WITH_ARIA_128_CBC_SHA256 cipher suite.">TLS_PSK_WITH_ARIA_128_CBC_SHA256 暗号スイートを表します。</summary>
    </member>
    <member name="F:System.Net.Security.TlsCipherSuite.TLS_PSK_WITH_ARIA_128_GCM_SHA256">
      <summary vsli:raw="Represents the TLS_PSK_WITH_ARIA_128_GCM_SHA256 cipher suite.">TLS_PSK_WITH_ARIA_128_GCM_SHA256 暗号スイートを表します。</summary>
    </member>
    <member name="F:System.Net.Security.TlsCipherSuite.TLS_PSK_WITH_ARIA_256_CBC_SHA384">
      <summary vsli:raw="Represents the TLS_PSK_WITH_ARIA_256_CBC_SHA384 cipher suite.">TLS_PSK_WITH_ARIA_256_CBC_SHA384 暗号スイートを表します。</summary>
    </member>
    <member name="F:System.Net.Security.TlsCipherSuite.TLS_PSK_WITH_ARIA_256_GCM_SHA384">
      <summary vsli:raw="Represents the TLS_PSK_WITH_ARIA_256_GCM_SHA384 cipher suite.">TLS_PSK_WITH_ARIA_256_GCM_SHA384 暗号スイートを表します。</summary>
    </member>
    <member name="F:System.Net.Security.TlsCipherSuite.TLS_PSK_WITH_CAMELLIA_128_CBC_SHA256">
      <summary vsli:raw="Represents the TLS_PSK_WITH_CAMELLIA_128_CBC_SHA256 cipher suite.">TLS_PSK_WITH_CAMELLIA_128_CBC_SHA256 暗号スイートを表します。</summary>
    </member>
    <member name="F:System.Net.Security.TlsCipherSuite.TLS_PSK_WITH_CAMELLIA_128_GCM_SHA256">
      <summary vsli:raw="Represents the TLS_PSK_WITH_CAMELLIA_128_GCM_SHA256 cipher suite.">TLS_PSK_WITH_CAMELLIA_128_GCM_SHA256 暗号スイートを表します。</summary>
    </member>
    <member name="F:System.Net.Security.TlsCipherSuite.TLS_PSK_WITH_CAMELLIA_256_CBC_SHA384">
      <summary vsli:raw="Represents the TLS_PSK_WITH_CAMELLIA_256_CBC_SHA384 cipher suite.">TLS_PSK_WITH_CAMELLIA_256_CBC_SHA384 暗号スイートを表します。</summary>
    </member>
    <member name="F:System.Net.Security.TlsCipherSuite.TLS_PSK_WITH_CAMELLIA_256_GCM_SHA384">
      <summary vsli:raw="Represents the TLS_PSK_WITH_CAMELLIA_256_GCM_SHA384 cipher suite.">TLS_PSK_WITH_CAMELLIA_256_GCM_SHA384 暗号スイートを表します。</summary>
    </member>
    <member name="F:System.Net.Security.TlsCipherSuite.TLS_PSK_WITH_CHACHA20_POLY1305_SHA256">
      <summary vsli:raw="Represents the TLS_PSK_WITH_CHACHA20_POLY1305_SHA256 cipher suite.">TLS_PSK_WITH_CHACHA20_POLY1305_SHA256 暗号スイートを表します。</summary>
    </member>
    <member name="F:System.Net.Security.TlsCipherSuite.TLS_PSK_WITH_NULL_SHA">
      <summary vsli:raw="Represents the TLS_PSK_WITH_NULL_SHA cipher suite.">TLS_PSK_WITH_NULL_SHA 暗号スイートを表します。</summary>
    </member>
    <member name="F:System.Net.Security.TlsCipherSuite.TLS_PSK_WITH_NULL_SHA256">
      <summary vsli:raw="Represents the TLS_PSK_WITH_NULL_SHA256 cipher suite.">TLS_PSK_WITH_NULL_SHA256 暗号スイートを表します。</summary>
    </member>
    <member name="F:System.Net.Security.TlsCipherSuite.TLS_PSK_WITH_NULL_SHA384">
      <summary vsli:raw="Represents the TLS_PSK_WITH_NULL_SHA384 cipher suite.">TLS_PSK_WITH_NULL_SHA384 暗号スイートを表します。</summary>
    </member>
    <member name="F:System.Net.Security.TlsCipherSuite.TLS_PSK_WITH_RC4_128_SHA">
      <summary vsli:raw="Represents the TLS_PSK_WITH_RC4_128_SHA cipher suite.">TLS_PSK_WITH_RC4_128_SHA 暗号スイートを表します。</summary>
    </member>
    <member name="F:System.Net.Security.TlsCipherSuite.TLS_RSA_EXPORT_WITH_DES40_CBC_SHA">
      <summary vsli:raw="Represents the TLS_RSA_EXPORT_WITH_DES40_CBC_SHA cipher suite.">TLS_RSA_EXPORT_WITH_DES40_CBC_SHA 暗号スイートを表します。</summary>
    </member>
    <member name="F:System.Net.Security.TlsCipherSuite.TLS_RSA_EXPORT_WITH_RC2_CBC_40_MD5">
      <summary vsli:raw="Represents the TLS_RSA_EXPORT_WITH_RC2_CBC_40_MD5 cipher suite.">TLS_RSA_EXPORT_WITH_RC2_CBC_40_MD5 暗号スイートを表します。</summary>
    </member>
    <member name="F:System.Net.Security.TlsCipherSuite.TLS_RSA_EXPORT_WITH_RC4_40_MD5">
      <summary vsli:raw="Represents the TLS_RSA_EXPORT_WITH_RC4_40_MD5 cipher suite.">TLS_RSA_EXPORT_WITH_RC4_40_MD5 暗号スイートを表します。</summary>
    </member>
    <member name="F:System.Net.Security.TlsCipherSuite.TLS_RSA_PSK_WITH_3DES_EDE_CBC_SHA">
      <summary vsli:raw="Represents the TLS_RSA_PSK_WITH_3DES_EDE_CBC_SHA cipher suite.">TLS_RSA_PSK_WITH_3DES_EDE_CBC_SHA 暗号スイートを表します。</summary>
    </member>
    <member name="F:System.Net.Security.TlsCipherSuite.TLS_RSA_PSK_WITH_AES_128_CBC_SHA">
      <summary vsli:raw="Represents the TLS_RSA_PSK_WITH_AES_128_CBC_SHA cipher suite.">TLS_RSA_PSK_WITH_AES_128_CBC_SHA 暗号スイートを表します。</summary>
    </member>
    <member name="F:System.Net.Security.TlsCipherSuite.TLS_RSA_PSK_WITH_AES_128_CBC_SHA256">
      <summary vsli:raw="Represents the TLS_RSA_PSK_WITH_AES_128_CBC_SHA256 cipher suite.">TLS_RSA_PSK_WITH_AES_128_CBC_SHA256 暗号スイートを表します。</summary>
    </member>
    <member name="F:System.Net.Security.TlsCipherSuite.TLS_RSA_PSK_WITH_AES_128_GCM_SHA256">
      <summary vsli:raw="Represents the TLS_RSA_PSK_WITH_AES_128_GCM_SHA256 cipher suite.">TLS_RSA_PSK_WITH_AES_128_GCM_SHA256 暗号スイートを表します。</summary>
    </member>
    <member name="F:System.Net.Security.TlsCipherSuite.TLS_RSA_PSK_WITH_AES_256_CBC_SHA">
      <summary vsli:raw="Represents the TLS_RSA_PSK_WITH_AES_256_CBC_SHA cipher suite.">TLS_RSA_PSK_WITH_AES_256_CBC_SHA 暗号スイートを表します。</summary>
    </member>
    <member name="F:System.Net.Security.TlsCipherSuite.TLS_RSA_PSK_WITH_AES_256_CBC_SHA384">
      <summary vsli:raw="Represents the TLS_RSA_PSK_WITH_AES_256_CBC_SHA384 cipher suite.">TLS_RSA_PSK_WITH_AES_256_CBC_SHA384 暗号スイートを表します。</summary>
    </member>
    <member name="F:System.Net.Security.TlsCipherSuite.TLS_RSA_PSK_WITH_AES_256_GCM_SHA384">
      <summary vsli:raw="Represents the TLS_RSA_PSK_WITH_AES_256_GCM_SHA384 cipher suite.">TLS_RSA_PSK_WITH_AES_256_GCM_SHA384 暗号スイートを表します。</summary>
    </member>
    <member name="F:System.Net.Security.TlsCipherSuite.TLS_RSA_PSK_WITH_ARIA_128_CBC_SHA256">
      <summary vsli:raw="Represents the TLS_RSA_PSK_WITH_ARIA_128_CBC_SHA256 cipher suite.">TLS_RSA_PSK_WITH_ARIA_128_CBC_SHA256 暗号スイートを表します。</summary>
    </member>
    <member name="F:System.Net.Security.TlsCipherSuite.TLS_RSA_PSK_WITH_ARIA_128_GCM_SHA256">
      <summary vsli:raw="Represents the TLS_RSA_PSK_WITH_ARIA_128_GCM_SHA256 cipher suite.">TLS_RSA_PSK_WITH_ARIA_128_GCM_SHA256 暗号スイートを表します。</summary>
    </member>
    <member name="F:System.Net.Security.TlsCipherSuite.TLS_RSA_PSK_WITH_ARIA_256_CBC_SHA384">
      <summary vsli:raw="Represents the TLS_RSA_PSK_WITH_ARIA_256_CBC_SHA384 cipher suite.">TLS_RSA_PSK_WITH_ARIA_256_CBC_SHA384 暗号スイートを表します。</summary>
    </member>
    <member name="F:System.Net.Security.TlsCipherSuite.TLS_RSA_PSK_WITH_ARIA_256_GCM_SHA384">
      <summary vsli:raw="Represents the TLS_RSA_PSK_WITH_ARIA_256_GCM_SHA384 cipher suite.">TLS_RSA_PSK_WITH_ARIA_256_GCM_SHA384 暗号スイートを表します。</summary>
    </member>
    <member name="F:System.Net.Security.TlsCipherSuite.TLS_RSA_PSK_WITH_CAMELLIA_128_CBC_SHA256">
      <summary vsli:raw="Represents the TLS_RSA_PSK_WITH_CAMELLIA_128_CBC_SHA256 cipher suite.">TLS_RSA_PSK_WITH_CAMELLIA_128_CBC_SHA256 暗号スイートを表します。</summary>
    </member>
    <member name="F:System.Net.Security.TlsCipherSuite.TLS_RSA_PSK_WITH_CAMELLIA_128_GCM_SHA256">
      <summary vsli:raw="Represents the TLS_RSA_PSK_WITH_CAMELLIA_128_GCM_SHA256 cipher suite.">TLS_RSA_PSK_WITH_CAMELLIA_128_GCM_SHA256 暗号スイートを表します。</summary>
    </member>
    <member name="F:System.Net.Security.TlsCipherSuite.TLS_RSA_PSK_WITH_CAMELLIA_256_CBC_SHA384">
      <summary vsli:raw="Represents the TLS_RSA_PSK_WITH_CAMELLIA_256_CBC_SHA384 cipher suite.">TLS_RSA_PSK_WITH_CAMELLIA_256_CBC_SHA384 暗号スイートを表します。</summary>
    </member>
    <member name="F:System.Net.Security.TlsCipherSuite.TLS_RSA_PSK_WITH_CAMELLIA_256_GCM_SHA384">
      <summary vsli:raw="Represents the TLS_RSA_PSK_WITH_CAMELLIA_256_GCM_SHA384 cipher suite.">TLS_RSA_PSK_WITH_CAMELLIA_256_GCM_SHA384 暗号スイートを表します。</summary>
    </member>
    <member name="F:System.Net.Security.TlsCipherSuite.TLS_RSA_PSK_WITH_CHACHA20_POLY1305_SHA256">
      <summary vsli:raw="Represents the TLS_RSA_PSK_WITH_CHACHA20_POLY1305_SHA256 cipher suite.">TLS_RSA_PSK_WITH_CHACHA20_POLY1305_SHA256 暗号スイートを表します。</summary>
    </member>
    <member name="F:System.Net.Security.TlsCipherSuite.TLS_RSA_PSK_WITH_NULL_SHA">
      <summary vsli:raw="Represents the TLS_RSA_PSK_WITH_NULL_SHA cipher suite.">TLS_RSA_PSK_WITH_NULL_SHA 暗号スイートを表します。</summary>
    </member>
    <member name="F:System.Net.Security.TlsCipherSuite.TLS_RSA_PSK_WITH_NULL_SHA256">
      <summary vsli:raw="Represents the TLS_RSA_PSK_WITH_NULL_SHA256 cipher suite.">TLS_RSA_PSK_WITH_NULL_SHA256 暗号スイートを表します。</summary>
    </member>
    <member name="F:System.Net.Security.TlsCipherSuite.TLS_RSA_PSK_WITH_NULL_SHA384">
      <summary vsli:raw="Represents the TLS_RSA_PSK_WITH_NULL_SHA384 cipher suite.">TLS_RSA_PSK_WITH_NULL_SHA384 暗号スイートを表します。</summary>
    </member>
    <member name="F:System.Net.Security.TlsCipherSuite.TLS_RSA_PSK_WITH_RC4_128_SHA">
      <summary vsli:raw="Represents the TLS_RSA_PSK_WITH_RC4_128_SHA cipher suite.">TLS_RSA_PSK_WITH_RC4_128_SHA 暗号スイートを表します。</summary>
    </member>
    <member name="F:System.Net.Security.TlsCipherSuite.TLS_RSA_WITH_3DES_EDE_CBC_SHA">
      <summary vsli:raw="Represents the TLS_RSA_WITH_3DES_EDE_CBC_SHA cipher suite.">TLS_RSA_WITH_3DES_EDE_CBC_SHA 暗号スイートを表します。</summary>
    </member>
    <member name="F:System.Net.Security.TlsCipherSuite.TLS_RSA_WITH_AES_128_CBC_SHA">
      <summary vsli:raw="Represents the TLS_RSA_WITH_AES_128_CBC_SHA cipher suite.">TLS_RSA_WITH_AES_128_CBC_SHA 暗号スイートを表します。</summary>
    </member>
    <member name="F:System.Net.Security.TlsCipherSuite.TLS_RSA_WITH_AES_128_CBC_SHA256">
      <summary vsli:raw="Represents the TLS_RSA_WITH_AES_128_CBC_SHA256 cipher suite.">TLS_RSA_WITH_AES_128_CBC_SHA256 暗号スイートを表します。</summary>
    </member>
    <member name="F:System.Net.Security.TlsCipherSuite.TLS_RSA_WITH_AES_128_CCM">
      <summary vsli:raw="Represents the TLS_RSA_WITH_AES_128_CCM cipher suite.">TLS_RSA_WITH_AES_128_CCM 暗号スイートを表します。</summary>
    </member>
    <member name="F:System.Net.Security.TlsCipherSuite.TLS_RSA_WITH_AES_128_CCM_8">
      <summary vsli:raw="Represents the TLS_RSA_WITH_AES_128_CCM_8 cipher suite.">TLS_RSA_WITH_AES_128_CCM_8 暗号スイートを表します。</summary>
    </member>
    <member name="F:System.Net.Security.TlsCipherSuite.TLS_RSA_WITH_AES_128_GCM_SHA256">
      <summary vsli:raw="Represents the TLS_RSA_WITH_AES_128_GCM_SHA256 cipher suite.">TLS_RSA_WITH_AES_128_GCM_SHA256 暗号スイートを表します。</summary>
    </member>
    <member name="F:System.Net.Security.TlsCipherSuite.TLS_RSA_WITH_AES_256_CBC_SHA">
      <summary vsli:raw="Represents the TLS_RSA_WITH_AES_256_CBC_SHA cipher suite.">TLS_RSA_WITH_AES_256_CBC_SHA 暗号スイートを表します。</summary>
    </member>
    <member name="F:System.Net.Security.TlsCipherSuite.TLS_RSA_WITH_AES_256_CBC_SHA256">
      <summary vsli:raw="Represents the TLS_RSA_WITH_AES_256_CBC_SHA256 cipher suite.">TLS_RSA_WITH_AES_256_CBC_SHA256 暗号スイートを表します。</summary>
    </member>
    <member name="F:System.Net.Security.TlsCipherSuite.TLS_RSA_WITH_AES_256_CCM">
      <summary vsli:raw="Represents the TLS_RSA_WITH_AES_256_CCM cipher suite.">TLS_RSA_WITH_AES_256_CCM 暗号スイートを表します。</summary>
    </member>
    <member name="F:System.Net.Security.TlsCipherSuite.TLS_RSA_WITH_AES_256_CCM_8">
      <summary vsli:raw="Represents the TLS_RSA_WITH_AES_256_CCM_8 cipher suite.">TLS_RSA_WITH_AES_256_CCM_8 暗号スイートを表します。</summary>
    </member>
    <member name="F:System.Net.Security.TlsCipherSuite.TLS_RSA_WITH_AES_256_GCM_SHA384">
      <summary vsli:raw="Represents the TLS_RSA_WITH_AES_256_GCM_SHA384 cipher suite.">TLS_RSA_WITH_AES_256_GCM_SHA384 暗号スイートを表します。</summary>
    </member>
    <member name="F:System.Net.Security.TlsCipherSuite.TLS_RSA_WITH_ARIA_128_CBC_SHA256">
      <summary vsli:raw="Represents the TLS_RSA_WITH_ARIA_128_CBC_SHA256 cipher suite.">TLS_RSA_WITH_ARIA_128_CBC_SHA256 暗号スイートを表します。</summary>
    </member>
    <member name="F:System.Net.Security.TlsCipherSuite.TLS_RSA_WITH_ARIA_128_GCM_SHA256">
      <summary vsli:raw="Represents the TLS_RSA_WITH_ARIA_128_GCM_SHA256 cipher suite.">TLS_RSA_WITH_ARIA_128_GCM_SHA256 暗号スイートを表します。</summary>
    </member>
    <member name="F:System.Net.Security.TlsCipherSuite.TLS_RSA_WITH_ARIA_256_CBC_SHA384">
      <summary vsli:raw="Represents the TLS_RSA_WITH_ARIA_256_CBC_SHA384 cipher suite.">TLS_RSA_WITH_ARIA_256_CBC_SHA384 暗号スイートを表します。</summary>
    </member>
    <member name="F:System.Net.Security.TlsCipherSuite.TLS_RSA_WITH_ARIA_256_GCM_SHA384">
      <summary vsli:raw="Represents the TLS_RSA_WITH_ARIA_256_GCM_SHA384 cipher suite.">TLS_RSA_WITH_ARIA_256_GCM_SHA384 暗号スイートを表します。</summary>
    </member>
    <member name="F:System.Net.Security.TlsCipherSuite.TLS_RSA_WITH_CAMELLIA_128_CBC_SHA">
      <summary vsli:raw="Represents the TLS_RSA_WITH_CAMELLIA_128_CBC_SHA cipher suite.">TLS_RSA_WITH_CAMELLIA_128_CBC_SHA 暗号スイートを表します。</summary>
    </member>
    <member name="F:System.Net.Security.TlsCipherSuite.TLS_RSA_WITH_CAMELLIA_128_CBC_SHA256">
      <summary vsli:raw="Represents the TLS_RSA_WITH_CAMELLIA_128_CBC_SHA256 cipher suite.">TLS_RSA_WITH_CAMELLIA_128_CBC_SHA256 暗号スイートを表します。</summary>
    </member>
    <member name="F:System.Net.Security.TlsCipherSuite.TLS_RSA_WITH_CAMELLIA_128_GCM_SHA256">
      <summary vsli:raw="Represents the TLS_RSA_WITH_CAMELLIA_128_GCM_SHA256 cipher suite.">TLS_RSA_WITH_CAMELLIA_128_GCM_SHA256 暗号スイートを表します。</summary>
    </member>
    <member name="F:System.Net.Security.TlsCipherSuite.TLS_RSA_WITH_CAMELLIA_256_CBC_SHA">
      <summary vsli:raw="Represents the TLS_RSA_WITH_CAMELLIA_256_CBC_SHA cipher suite.">TLS_RSA_WITH_CAMELLIA_256_CBC_SHA 暗号スイートを表します。</summary>
    </member>
    <member name="F:System.Net.Security.TlsCipherSuite.TLS_RSA_WITH_CAMELLIA_256_CBC_SHA256">
      <summary vsli:raw="Represents the TLS_RSA_WITH_CAMELLIA_256_CBC_SHA256 cipher suite.">TLS_RSA_WITH_CAMELLIA_256_CBC_SHA256 暗号スイートを表します。</summary>
    </member>
    <member name="F:System.Net.Security.TlsCipherSuite.TLS_RSA_WITH_CAMELLIA_256_GCM_SHA384">
      <summary vsli:raw="Represents the TLS_RSA_WITH_CAMELLIA_256_GCM_SHA384 cipher suite.">TLS_RSA_WITH_CAMELLIA_256_GCM_SHA384 暗号スイートを表します。</summary>
    </member>
    <member name="F:System.Net.Security.TlsCipherSuite.TLS_RSA_WITH_DES_CBC_SHA">
      <summary vsli:raw="Represents the TLS_RSA_WITH_DES_CBC_SHA cipher suite.">TLS_RSA_WITH_DES_CBC_SHA 暗号スイートを表します。</summary>
    </member>
    <member name="F:System.Net.Security.TlsCipherSuite.TLS_RSA_WITH_IDEA_CBC_SHA">
      <summary vsli:raw="Represents the TLS_RSA_WITH_IDEA_CBC_SHA cipher suite.">TLS_RSA_WITH_IDEA_CBC_SHA 暗号スイートを表します。</summary>
    </member>
    <member name="F:System.Net.Security.TlsCipherSuite.TLS_RSA_WITH_NULL_MD5">
      <summary vsli:raw="Represents the TLS_RSA_WITH_NULL_MD5 cipher suite.">TLS_RSA_WITH_NULL_MD5 暗号スイートを表します。</summary>
    </member>
    <member name="F:System.Net.Security.TlsCipherSuite.TLS_RSA_WITH_NULL_SHA">
      <summary vsli:raw="Represents the TLS_RSA_WITH_NULL_SHA cipher suite.">TLS_RSA_WITH_NULL_SHA 暗号スイートを表します。</summary>
    </member>
    <member name="F:System.Net.Security.TlsCipherSuite.TLS_RSA_WITH_NULL_SHA256">
      <summary vsli:raw="Represents the TLS_RSA_WITH_NULL_SHA256 cipher suite.">TLS_RSA_WITH_NULL_SHA256 暗号スイートを表します。</summary>
    </member>
    <member name="F:System.Net.Security.TlsCipherSuite.TLS_RSA_WITH_RC4_128_MD5">
      <summary vsli:raw="Represents the TLS_RSA_WITH_RC4_128_MD5 cipher suite.">TLS_RSA_WITH_RC4_128_MD5 暗号スイートを表します。</summary>
    </member>
    <member name="F:System.Net.Security.TlsCipherSuite.TLS_RSA_WITH_RC4_128_SHA">
      <summary vsli:raw="Represents the TLS_RSA_WITH_RC4_128_SHA cipher suite.">TLS_RSA_WITH_RC4_128_SHA 暗号スイートを表します。</summary>
    </member>
    <member name="F:System.Net.Security.TlsCipherSuite.TLS_RSA_WITH_SEED_CBC_SHA">
      <summary vsli:raw="Represents the TLS_RSA_WITH_SEED_CBC_SHA cipher suite.">TLS_RSA_WITH_SEED_CBC_SHA 暗号スイートを表します。</summary>
    </member>
    <member name="F:System.Net.Security.TlsCipherSuite.TLS_SRP_SHA_DSS_WITH_3DES_EDE_CBC_SHA">
      <summary vsli:raw="Represents the TLS_SRP_SHA_DSS_WITH_3DES_EDE_CBC_SHA cipher suite.">TLS_SRP_SHA_DSS_WITH_3DES_EDE_CBC_SHA 暗号スイートを表します。</summary>
    </member>
    <member name="F:System.Net.Security.TlsCipherSuite.TLS_SRP_SHA_DSS_WITH_AES_128_CBC_SHA">
      <summary vsli:raw="Represents the TLS_SRP_SHA_DSS_WITH_AES_128_CBC_SHA cipher suite.">TLS_SRP_SHA_DSS_WITH_AES_128_CBC_SHA 暗号スイートを表します。</summary>
    </member>
    <member name="F:System.Net.Security.TlsCipherSuite.TLS_SRP_SHA_DSS_WITH_AES_256_CBC_SHA">
      <summary vsli:raw="Represents the TLS_SRP_SHA_DSS_WITH_AES_256_CBC_SHA cipher suite.">TLS_SRP_SHA_DSS_WITH_AES_256_CBC_SHA 暗号スイートを表します。</summary>
    </member>
    <member name="F:System.Net.Security.TlsCipherSuite.TLS_SRP_SHA_RSA_WITH_3DES_EDE_CBC_SHA">
      <summary vsli:raw="Represents the TLS_SRP_SHA_RSA_WITH_3DES_EDE_CBC_SHA cipher suite.">TLS_SRP_SHA_RSA_WITH_3DES_EDE_CBC_SHA 暗号スイートを表します。</summary>
    </member>
    <member name="F:System.Net.Security.TlsCipherSuite.TLS_SRP_SHA_RSA_WITH_AES_128_CBC_SHA">
      <summary vsli:raw="Represents the TLS_SRP_SHA_RSA_WITH_AES_128_CBC_SHA cipher suite.">TLS_SRP_SHA_RSA_WITH_AES_128_CBC_SHA 暗号スイートを表します。</summary>
    </member>
    <member name="F:System.Net.Security.TlsCipherSuite.TLS_SRP_SHA_RSA_WITH_AES_256_CBC_SHA">
      <summary vsli:raw="Represents the TLS_SRP_SHA_RSA_WITH_AES_256_CBC_SHA cipher suite.">TLS_SRP_SHA_RSA_WITH_AES_256_CBC_SHA 暗号スイートを表します。</summary>
    </member>
    <member name="F:System.Net.Security.TlsCipherSuite.TLS_SRP_SHA_WITH_3DES_EDE_CBC_SHA">
      <summary vsli:raw="Represents the TLS_SRP_SHA_WITH_3DES_EDE_CBC_SHA cipher suite.">TLS_SRP_SHA_WITH_3DES_EDE_CBC_SHA 暗号スイートを表します。</summary>
    </member>
    <member name="F:System.Net.Security.TlsCipherSuite.TLS_SRP_SHA_WITH_AES_128_CBC_SHA">
      <summary vsli:raw="Represents the TLS_SRP_SHA_WITH_AES_128_CBC_SHA cipher suite.">TLS_SRP_SHA_WITH_AES_128_CBC_SHA 暗号スイートを表します。</summary>
    </member>
    <member name="F:System.Net.Security.TlsCipherSuite.TLS_SRP_SHA_WITH_AES_256_CBC_SHA">
      <summary vsli:raw="Represents the TLS_SRP_SHA_WITH_AES_256_CBC_SHA cipher suite.">TLS_SRP_SHA_WITH_AES_256_CBC_SHA 暗号スイートを表します。</summary>
    </member>
    <member name="T:System.Security.Authentication.AuthenticationException">
      <summary vsli:raw="The exception that is thrown when authentication fails for an authentication stream.">認証ストリームの認証が失敗した場合にスローされる例外。</summary>
    </member>
    <member name="M:System.Security.Authentication.AuthenticationException.#ctor">
      <summary vsli:raw="Initializes a new instance of the &lt;see cref=&quot;T:System.Security.Authentication.AuthenticationException&quot; /&gt; class with no message.">メッセージを指定せずに、<see cref="T:System.Security.Authentication.AuthenticationException" /> クラスの新しいインスタンスを初期化します。</summary>
    </member>
    <member name="M:System.Security.Authentication.AuthenticationException.#ctor(System.Runtime.Serialization.SerializationInfo,System.Runtime.Serialization.StreamingContext)">
      <summary vsli:raw="Initializes a new instance of the &lt;see cref=&quot;T:System.Security.Authentication.AuthenticationException&quot; /&gt; class from the specified instances of the &lt;see cref=&quot;T:System.Runtime.Serialization.SerializationInfo&quot; /&gt; and &lt;see cref=&quot;T:System.Runtime.Serialization.StreamingContext&quot; /&gt; classes.">
        <see cref="T:System.Runtime.Serialization.SerializationInfo" /> クラスと <see cref="T:System.Runtime.Serialization.StreamingContext" /> クラスの指定したインスタンスから、<see cref="T:System.Security.Authentication.AuthenticationException" /> クラスの新しいインスタンスを初期化します。</summary>
      <param name="serializationInfo" vsli:raw="A &lt;see cref=&quot;T:System.Runtime.Serialization.SerializationInfo&quot; /&gt; instance that contains the information required to deserialize the new &lt;see cref=&quot;T:System.Security.Authentication.AuthenticationException&quot; /&gt; instance.">新しい <see cref="T:System.Runtime.Serialization.SerializationInfo" /> インスタンスを逆シリアル化するために必要な情報を格納する <see cref="T:System.Security.Authentication.AuthenticationException" /> インスタンス。</param>
      <param name="streamingContext" vsli:raw="A &lt;see cref=&quot;T:System.Runtime.Serialization.StreamingContext&quot; /&gt; instance.">
        <see cref="T:System.Runtime.Serialization.StreamingContext" /> のインスタンス。</param>
    </member>
    <member name="M:System.Security.Authentication.AuthenticationException.#ctor(System.String)">
      <summary vsli:raw="Initializes a new instance of the &lt;see cref=&quot;T:System.Security.Authentication.AuthenticationException&quot; /&gt; class with the specified message.">指定したメッセージを使用して、<see cref="T:System.Security.Authentication.AuthenticationException" /> クラスの新しいインスタンスを初期化します。</summary>
      <param name="message" vsli:raw="A &lt;see cref=&quot;T:System.String&quot; /&gt; that describes the authentication failure.">認証エラーを説明する <see cref="T:System.String" />。</param>
    </member>
    <member name="M:System.Security.Authentication.AuthenticationException.#ctor(System.String,System.Exception)">
      <summary vsli:raw="Initializes a new instance of the &lt;see cref=&quot;T:System.Security.Authentication.AuthenticationException&quot; /&gt; class with the specified message and inner exception.">指定したメッセージと内部例外を使用して、<see cref="T:System.Security.Authentication.AuthenticationException" /> クラスの新しいインスタンスを初期化します。</summary>
      <param name="message" vsli:raw="A &lt;see cref=&quot;T:System.String&quot; /&gt; that describes the authentication failure.">認証エラーを説明する <see cref="T:System.String" />。</param>
      <param name="innerException" vsli:raw="The &lt;see cref=&quot;T:System.Exception&quot; /&gt; that is the cause of the current exception.">現在の例外の原因である <see cref="T:System.Exception" />。</param>
    </member>
    <member name="T:System.Security.Authentication.ExtendedProtection.ExtendedProtectionPolicy">
      <summary vsli:raw="The &lt;see cref=&quot;T:System.Security.Authentication.ExtendedProtection.ExtendedProtectionPolicy&quot; /&gt; class represents the extended protection policy used by the server to validate incoming client connections.">
        <see cref="T:System.Security.Authentication.ExtendedProtection.ExtendedProtectionPolicy" /> クラスは、受信クライアント接続を検証するためにサーバーによって使用される拡張保護ポリシーを表します。</summary>
    </member>
    <member name="M:System.Security.Authentication.ExtendedProtection.ExtendedProtectionPolicy.#ctor(System.Runtime.Serialization.SerializationInfo,System.Runtime.Serialization.StreamingContext)">
      <summary vsli:raw="Initializes a new instance of the &lt;see cref=&quot;T:System.Security.Authentication.ExtendedProtection.ExtendedProtectionPolicy&quot; /&gt; class from a &lt;see cref=&quot;T:System.Runtime.Serialization.SerializationInfo&quot; /&gt; object that contains the required data to populate the &lt;see cref=&quot;T:System.Security.Authentication.ExtendedProtection.ExtendedProtectionPolicy&quot; /&gt;.">
        <see cref="T:System.Security.Authentication.ExtendedProtection.ExtendedProtectionPolicy" /> を設定するために必要なデータを格納している <see cref="T:System.Runtime.Serialization.SerializationInfo" /> オブジェクトから、<see cref="T:System.Security.Authentication.ExtendedProtection.ExtendedProtectionPolicy" /> クラスの新しいインスタンスを初期化します。</summary>
      <param name="info" vsli:raw="A &lt;see cref=&quot;T:System.Runtime.Serialization.SerializationInfo&quot; /&gt; instance that contains the information that is required to serialize the new &lt;see cref=&quot;T:System.Security.Authentication.ExtendedProtection.ExtendedProtectionPolicy&quot; /&gt; instance.">新しい <see cref="T:System.Security.Authentication.ExtendedProtection.ExtendedProtectionPolicy" /> インスタンスをシリアル化するために必要な情報を格納する <see cref="T:System.Runtime.Serialization.SerializationInfo" /> インスタンス。</param>
      <param name="context" vsli:raw="A &lt;see cref=&quot;T:System.Runtime.Serialization.StreamingContext&quot; /&gt; that contains the source of the serialized stream that is associated with the new &lt;see cref=&quot;T:System.Security.Authentication.ExtendedProtection.ExtendedProtectionPolicy&quot; /&gt; instance.">新しい <see cref="T:System.Security.Authentication.ExtendedProtection.ExtendedProtectionPolicy" /> インスタンスに関連付けられているシリアル化ストリームの転送元を格納している <see cref="T:System.Runtime.Serialization.StreamingContext" />。</param>
    </member>
    <member name="M:System.Security.Authentication.ExtendedProtection.ExtendedProtectionPolicy.#ctor(System.Security.Authentication.ExtendedProtection.PolicyEnforcement)">
      <summary vsli:raw="Initializes a new instance of the &lt;see cref=&quot;T:System.Security.Authentication.ExtendedProtection.ExtendedProtectionPolicy&quot; /&gt; class that specifies when the extended protection policy should be enforced.">拡張保護ポリシーを適用するタイミングを指定する <see cref="T:System.Security.Authentication.ExtendedProtection.ExtendedProtectionPolicy" /> クラスの新しいインスタンスを初期化します。</summary>
      <param name="policyEnforcement" vsli:raw="A &lt;see cref=&quot;T:System.Security.Authentication.ExtendedProtection.PolicyEnforcement&quot; /&gt; value that indicates when the extended protection policy should be enforced.">拡張保護ポリシーを適用するタイミングを示す <see cref="T:System.Security.Authentication.ExtendedProtection.PolicyEnforcement" /> 値。</param>
    </member>
    <member name="M:System.Security.Authentication.ExtendedProtection.ExtendedProtectionPolicy.#ctor(System.Security.Authentication.ExtendedProtection.PolicyEnforcement,System.Security.Authentication.ExtendedProtection.ChannelBinding)">
      <summary vsli:raw="Initializes a new instance of the &lt;see cref=&quot;T:System.Security.Authentication.ExtendedProtection.ExtendedProtectionPolicy&quot; /&gt; class that specifies when the extended protection policy should be enforced and the channel binding token (CBT) to be used.">拡張保護ポリシーを適用するタイミング、および使用するチャネル バインディング トークン (CBT: Channel Binding Token) を指定する <see cref="T:System.Security.Authentication.ExtendedProtection.ExtendedProtectionPolicy" /> クラスの新しいインスタンスを初期化します。</summary>
      <param name="policyEnforcement" vsli:raw="A &lt;see cref=&quot;T:System.Security.Authentication.ExtendedProtection.PolicyEnforcement&quot; /&gt; value that indicates when the extended protection policy should be enforced.">拡張保護ポリシーを適用するタイミングを示す <see cref="T:System.Security.Authentication.ExtendedProtection.PolicyEnforcement" /> 値。</param>
      <param name="customChannelBinding" vsli:raw="A &lt;see cref=&quot;T:System.Security.Authentication.ExtendedProtection.ChannelBinding&quot; /&gt; that contains a custom channel binding to use for validation.">検証に使用するカスタム チャネル バインディングを格納している <see cref="T:System.Security.Authentication.ExtendedProtection.ChannelBinding" />。</param>
      <exception cref="T:System.ArgumentException" vsli:raw="&lt;paramref name=&quot;policyEnforcement&quot; /&gt; is specified as &lt;see cref=&quot;F:System.Security.Authentication.ExtendedProtection.PolicyEnforcement.Never&quot; /&gt;.">
        <paramref name="policyEnforcement" /> は <see cref="F:System.Security.Authentication.ExtendedProtection.PolicyEnforcement.Never" /> として指定されます。</exception>
      <exception cref="T:System.ArgumentNullException" vsli:raw="&lt;paramref name=&quot;customChannelBinding&quot; /&gt; is &lt;see langword=&quot;null&quot; /&gt;.">
        <paramref name="customChannelBinding" /> が <see langword="null" />です。</exception>
    </member>
    <member name="M:System.Security.Authentication.ExtendedProtection.ExtendedProtectionPolicy.#ctor(System.Security.Authentication.ExtendedProtection.PolicyEnforcement,System.Security.Authentication.ExtendedProtection.ProtectionScenario,System.Collections.ICollection)">
      <summary vsli:raw="Initializes a new instance of the &lt;see cref=&quot;T:System.Security.Authentication.ExtendedProtection.ExtendedProtectionPolicy&quot; /&gt; class that specifies when the extended protection policy should be enforced, the kind of protection enforced by the policy, and a custom Service Provider Name (SPN) list that is used to match against a client's SPN.">拡張保護ポリシーを適用するタイミング、ポリシーによって適用される保護の種類、およびクライアントのサービス プロバイダー名 (SPN) との照合に使用されるカスタム SPN 一覧を指定する <see cref="T:System.Security.Authentication.ExtendedProtection.ExtendedProtectionPolicy" /> クラスの新しいインスタンスを初期化します。</summary>
      <param name="policyEnforcement" vsli:raw="A &lt;see cref=&quot;T:System.Security.Authentication.ExtendedProtection.PolicyEnforcement&quot; /&gt; value that indicates when the extended protection policy should be enforced.">拡張保護ポリシーを適用するタイミングを示す <see cref="T:System.Security.Authentication.ExtendedProtection.PolicyEnforcement" /> 値。</param>
      <param name="protectionScenario" vsli:raw="A &lt;see cref=&quot;T:System.Security.Authentication.ExtendedProtection.ProtectionScenario&quot; /&gt; value that indicates the kind of protection enforced by the policy.">ポリシーによって適用される保護の種類を示す <see cref="T:System.Security.Authentication.ExtendedProtection.ProtectionScenario" /> 値。</param>
      <param name="customServiceNames" vsli:raw="A &lt;see cref=&quot;T:System.Collections.ICollection&quot; /&gt; that contains the custom SPN list that is used to match against a client's SPN.">クライアントの SPN との照合に使用されるカスタム SPN 一覧を格納する <see cref="T:System.Collections.ICollection" /> 。</param>
      <exception cref="T:System.ArgumentException" vsli:raw="&lt;paramref name=&quot;policyEnforcement&quot; /&gt; is specified as &lt;see cref=&quot;F:System.Security.Authentication.ExtendedProtection.PolicyEnforcement.Never&quot; /&gt;.">
        <paramref name="policyEnforcement" /> は <see cref="F:System.Security.Authentication.ExtendedProtection.PolicyEnforcement.Never" /> として指定されます。</exception>
      <exception cref="T:System.ArgumentNullException" vsli:raw="&lt;paramref name=&quot;customServiceNames&quot; /&gt; is &lt;see langword=&quot;null&quot; /&gt; or an empty list.">
        <paramref name="customServiceNames" /> が <see langword="null" /> または空のリストです。</exception>
    </member>
    <member name="M:System.Security.Authentication.ExtendedProtection.ExtendedProtectionPolicy.#ctor(System.Security.Authentication.ExtendedProtection.PolicyEnforcement,System.Security.Authentication.ExtendedProtection.ProtectionScenario,System.Security.Authentication.ExtendedProtection.ServiceNameCollection)">
      <summary vsli:raw="Initializes a new instance of the &lt;see cref=&quot;T:System.Security.Authentication.ExtendedProtection.ExtendedProtectionPolicy&quot; /&gt; class that specifies when the extended protection policy should be enforced, the kind of protection enforced by the policy, and a custom Service Provider Name (SPN) list that is used to match against a client's SPN.">拡張保護ポリシーを適用するタイミング、ポリシーによって適用される保護の種類、およびクライアントのサービス プロバイダー名 (SPN) との照合に使用されるカスタム SPN 一覧を指定する <see cref="T:System.Security.Authentication.ExtendedProtection.ExtendedProtectionPolicy" /> クラスの新しいインスタンスを初期化します。</summary>
      <param name="policyEnforcement" vsli:raw="A &lt;see cref=&quot;T:System.Security.Authentication.ExtendedProtection.PolicyEnforcement&quot; /&gt; value that indicates when the extended protection policy should be enforced.">拡張保護ポリシーを適用するタイミングを示す <see cref="T:System.Security.Authentication.ExtendedProtection.PolicyEnforcement" /> 値。</param>
      <param name="protectionScenario" vsli:raw="A &lt;see cref=&quot;T:System.Security.Authentication.ExtendedProtection.ProtectionScenario&quot; /&gt; value that indicates the kind of protection enforced by the policy.">ポリシーによって適用される保護の種類を示す <see cref="T:System.Security.Authentication.ExtendedProtection.ProtectionScenario" /> 値。</param>
      <param name="customServiceNames" vsli:raw="A &lt;see cref=&quot;T:System.Security.Authentication.ExtendedProtection.ServiceNameCollection&quot; /&gt; that contains the custom SPN list that is used to match against a client's SPN.">クライアントの SPN との照合に使用されるカスタム SPN 一覧を格納する <see cref="T:System.Security.Authentication.ExtendedProtection.ServiceNameCollection" /> 。</param>
      <exception cref="T:System.ArgumentException" vsli:raw="&lt;paramref name=&quot;policyEnforcement&quot; /&gt; is specified as &lt;see cref=&quot;F:System.Security.Authentication.ExtendedProtection.PolicyEnforcement.Never&quot; /&gt;.">
        <paramref name="policyEnforcement" /> は <see cref="F:System.Security.Authentication.ExtendedProtection.PolicyEnforcement.Never" /> として指定されます。</exception>
      <exception cref="T:System.ArgumentNullException" vsli:raw="&lt;paramref name=&quot;customServiceNames&quot; /&gt; is &lt;see langword=&quot;null&quot; /&gt; or an empty list.">
        <paramref name="customServiceNames" /> が <see langword="null" /> または空のリストです。</exception>
    </member>
    <member name="M:System.Security.Authentication.ExtendedProtection.ExtendedProtectionPolicy.System#Runtime#Serialization#ISerializable#GetObjectData(System.Runtime.Serialization.SerializationInfo,System.Runtime.Serialization.StreamingContext)">
      <summary vsli:raw="Populates a &lt;see cref=&quot;T:System.Runtime.Serialization.SerializationInfo&quot; /&gt; object with the required data to serialize an &lt;see cref=&quot;T:System.Security.Authentication.ExtendedProtection.ExtendedProtectionPolicy&quot; /&gt; object.">
        <see cref="T:System.Runtime.Serialization.SerializationInfo" /> オブジェクトをシリアル化するために必要なデータで <see cref="T:System.Security.Authentication.ExtendedProtection.ExtendedProtectionPolicy" /> オブジェクトを設定します。</summary>
      <param name="info" vsli:raw="A &lt;see cref=&quot;T:System.Runtime.Serialization.SerializationInfo&quot; /&gt; object that holds the serialized data for an &lt;see cref=&quot;T:System.Security.Authentication.ExtendedProtection.ExtendedProtectionPolicy&quot; /&gt; object.">
        <see cref="T:System.Runtime.Serialization.SerializationInfo" /> オブジェクトのシリアル化されたデータを保持する <see cref="T:System.Security.Authentication.ExtendedProtection.ExtendedProtectionPolicy" /> オブジェクト。</param>
      <param name="context" vsli:raw="A &lt;see cref=&quot;T:System.Runtime.Serialization.StreamingContext&quot; /&gt; that contains the destination of the serialized stream that is associated with the new &lt;see cref=&quot;T:System.Security.Authentication.ExtendedProtection.ExtendedProtectionPolicy&quot; /&gt;.">新しい <see cref="T:System.Security.Authentication.ExtendedProtection.ExtendedProtectionPolicy" /> に関連付けられているシリアル化ストリームの転送先を格納している <see cref="T:System.Runtime.Serialization.StreamingContext" />。</param>
    </member>
    <member name="M:System.Security.Authentication.ExtendedProtection.ExtendedProtectionPolicy.ToString">
      <summary vsli:raw="Gets a string representation for the extended protection policy instance.">拡張保護ポリシー インスタンスの文字列形式を取得します。</summary>
      <returns vsli:raw="A &lt;see cref=&quot;T:System.String&quot; /&gt; instance that contains the representation of the &lt;see cref=&quot;T:System.Security.Authentication.ExtendedProtection.ExtendedProtectionPolicy&quot; /&gt; instance.">
        <see cref="T:System.String" /> インスタンスの表現を格納している <see cref="T:System.Security.Authentication.ExtendedProtection.ExtendedProtectionPolicy" /> インスタンス。</returns>
    </member>
    <member name="P:System.Security.Authentication.ExtendedProtection.ExtendedProtectionPolicy.CustomChannelBinding">
      <summary vsli:raw="Gets a custom channel binding token (CBT) to use for validation.">検証に使用するカスタム チャネル バインディング トークン (CBT) を取得します。</summary>
      <returns vsli:raw="A &lt;see cref=&quot;T:System.Security.Authentication.ExtendedProtection.ChannelBinding&quot; /&gt; that contains a custom channel binding to use for validation.">検証に使用するカスタム チャネル バインディングを格納している <see cref="T:System.Security.Authentication.ExtendedProtection.ChannelBinding" />。</returns>
    </member>
    <member name="P:System.Security.Authentication.ExtendedProtection.ExtendedProtectionPolicy.CustomServiceNames">
      <summary vsli:raw="Gets the custom Service Provider Name (SPN) list used to match against a client's SPN.">クライアントの サービス プロバイダー名 (SPN) との照合に使用されるカスタム SPN リストを取得します。</summary>
      <returns vsli:raw="A &lt;see cref=&quot;T:System.Security.Authentication.ExtendedProtection.ServiceNameCollection&quot; /&gt; that contains the custom SPN list that is used to match against a client's SPN.">クライアントの SPN との照合に使用されるカスタム SPN 一覧を格納する <see cref="T:System.Security.Authentication.ExtendedProtection.ServiceNameCollection" /> 。</returns>
    </member>
    <member name="P:System.Security.Authentication.ExtendedProtection.ExtendedProtectionPolicy.OSSupportsExtendedProtection">
      <summary vsli:raw="Indicates whether the operating system supports integrated windows authentication with extended protection.">オペレーティング システムが拡張保護を使用した統合 Windows 認証をサポートしているかどうかを示します。</summary>
      <returns vsli:raw="&lt;see langword=&quot;true&quot; /&gt; if the operating system supports integrated windows authentication with extended protection, otherwise &lt;see langword=&quot;false&quot; /&gt;.">オペレーティング システムが拡張保護を使用した統合 Windows 認証をサポートしている場合は <see langword="true" />。それ以外の場合は <see langword="false" />。</returns>
    </member>
    <member name="P:System.Security.Authentication.ExtendedProtection.ExtendedProtectionPolicy.PolicyEnforcement">
      <summary vsli:raw="Gets when the extended protection policy should be enforced.">拡張保護ポリシーを適用するタイミングを取得します。</summary>
      <returns vsli:raw="A &lt;see cref=&quot;T:System.Security.Authentication.ExtendedProtection.PolicyEnforcement&quot; /&gt; value that indicates when the extended protection policy should be enforced.">拡張保護ポリシーを適用するタイミングを示す <see cref="T:System.Security.Authentication.ExtendedProtection.PolicyEnforcement" /> 値。</returns>
    </member>
    <member name="P:System.Security.Authentication.ExtendedProtection.ExtendedProtectionPolicy.ProtectionScenario">
      <summary vsli:raw="Gets the kind of protection enforced by the extended protection policy.">拡張保護ポリシーによって適用される保護の種類を取得します。</summary>
      <returns vsli:raw="A &lt;see cref=&quot;T:System.Security.Authentication.ExtendedProtection.ProtectionScenario&quot; /&gt; value that indicates the kind of protection enforced by the policy.">ポリシーによって適用される保護の種類を示す <see cref="T:System.Security.Authentication.ExtendedProtection.ProtectionScenario" /> 値。</returns>
    </member>
    <member name="T:System.Security.Authentication.ExtendedProtection.PolicyEnforcement">
      <summary vsli:raw="The &lt;see cref=&quot;T:System.Security.Authentication.ExtendedProtection.PolicyEnforcement&quot; /&gt; enumeration specifies when the &lt;see cref=&quot;T:System.Security.Authentication.ExtendedProtection.ExtendedProtectionPolicy&quot; /&gt; should be enforced.">
        <see cref="T:System.Security.Authentication.ExtendedProtection.PolicyEnforcement" /> 列挙体は、<see cref="T:System.Security.Authentication.ExtendedProtection.ExtendedProtectionPolicy" /> を適用するタイミングを指定します。</summary>
    </member>
    <member name="F:System.Security.Authentication.ExtendedProtection.PolicyEnforcement.Always">
      <summary vsli:raw="The &lt;see cref=&quot;T:System.Security.Authentication.ExtendedProtection.ExtendedProtectionPolicy&quot; /&gt; is always enforced. Clients that don't support extended protection will fail to authenticate.">
        <see cref="T:System.Security.Authentication.ExtendedProtection.ExtendedProtectionPolicy" /> は常に適用されます。 拡張保護をサポートしていないクライアントは認証に失敗します。</summary>
    </member>
    <member name="F:System.Security.Authentication.ExtendedProtection.PolicyEnforcement.Never">
      <summary vsli:raw="The &lt;see cref=&quot;T:System.Security.Authentication.ExtendedProtection.ExtendedProtectionPolicy&quot; /&gt; is never enforced and extended protection is disabled.">
        <see cref="T:System.Security.Authentication.ExtendedProtection.ExtendedProtectionPolicy" /> が適用されることはなく、拡張保護は無効になります。</summary>
    </member>
    <member name="F:System.Security.Authentication.ExtendedProtection.PolicyEnforcement.WhenSupported">
      <summary vsli:raw="The &lt;see cref=&quot;T:System.Security.Authentication.ExtendedProtection.ExtendedProtectionPolicy&quot; /&gt; is enforced only if the client and server supports extended protection.">
        <see cref="T:System.Security.Authentication.ExtendedProtection.ExtendedProtectionPolicy" /> が適用されるのは、クライアントとサーバーが拡張保護をサポートしている場合のみです。</summary>
    </member>
    <member name="T:System.Security.Authentication.ExtendedProtection.ProtectionScenario">
      <summary vsli:raw="The &lt;see cref=&quot;T:System.Security.Authentication.ExtendedProtection.ProtectionScenario&quot; /&gt; enumeration specifies the protection scenario enforced by the policy.">
        <see cref="T:System.Security.Authentication.ExtendedProtection.ProtectionScenario" /> 列挙体は、ポリシーによって適用される保護シナリオを指定します。</summary>
    </member>
    <member name="F:System.Security.Authentication.ExtendedProtection.ProtectionScenario.TransportSelected">
      <summary vsli:raw="The transport will select between a secure and standard protection scenario depending on the type of channel used. For secure protection, integrated Windows authentication is wrapped in a secure channel and has an exactly matching channel binding token with no Service Provider Name (SPN) validation. For standard protection, integrated Windows authentication is optionally wrapped in a secure channel with an optional channel binding token and SPN validation is required. So if the request comes through a secure channel, the channel binding token (CBT) is checked, otherwise the SPN is checked.">トランスポートは、使用されるチャネルの種類に応じて、セキュリティで保護された保護シナリオか標準の保護シナリオのどちらかを選択します。 セキュリティで保護された保護の場合、統合 Windows 認証は、セキュリティで保護されたチャネルにラップされ、サービス プロバイダー名 (SPN: Service Provider Name) 検証が行われていない完全に一致するチャネル バインディング トークン (CBT: Channel Binding Token) を使用します。 標準の保護の場合、統合 Windows 認証は、必要に応じてオプションのチャネル バインディング トークンを使用してセキュリティで保護されたチャネルにラップされ、SPN 検証を必要とします。 したがって、セキュリティで保護されたチャネルを経由して要求が届く場合はチャネル バインディング トークンがチェックされます。それ以外の場合は SPN がチェックされます。</summary>
    </member>
    <member name="F:System.Security.Authentication.ExtendedProtection.ProtectionScenario.TrustedProxy">
      <summary vsli:raw="Integrated Windows authentication is wrapped in a secure channel terminated by a trusted proxy and has a channel binding token with SPN validation required. This requires the presence of a CBT, but the CBT is not checked while the SPN is checked.">統合 Windows 認証は、信頼できるプロキシで終了するセキュリティで保護されたチャネルにラップされ、SPN 検証が必要なチャネル バインディング トークンを使用します。 この場合、CBT が存在する必要がありますが、SPN のチェック中は CTB はチェックされません。</summary>
    </member>
    <member name="T:System.Security.Authentication.ExtendedProtection.ServiceNameCollection">
      <summary vsli:raw="The &lt;see cref=&quot;T:System.Security.Authentication.ExtendedProtection.ServiceNameCollection&quot; /&gt; class is a read-only collection of service principal names.">
        <see cref="T:System.Security.Authentication.ExtendedProtection.ServiceNameCollection" /> クラスはサービス プリンシパル名の読み取り専用コレクション。</summary>
    </member>
    <member name="M:System.Security.Authentication.ExtendedProtection.ServiceNameCollection.#ctor(System.Collections.ICollection)">
      <summary vsli:raw="Initializes a new read-only instance of the &lt;see cref=&quot;T:System.Security.Authentication.ExtendedProtection.ServiceNameCollection&quot; /&gt; class based on an existing &lt;see cref=&quot;T:System.Collections.ICollection&quot; /&gt;.">既存の <see cref="T:System.Collections.ICollection" /> に基づいて、<see cref="T:System.Security.Authentication.ExtendedProtection.ServiceNameCollection" /> クラスの新しい読み取り専用インスタンスを初期化します。</summary>
      <param name="items" vsli:raw="An instance of the &lt;see cref=&quot;T:System.Collections.ICollection&quot; /&gt; class that contains the specified values of service names to be used to initialize the class.">クラスの初期化に使用するサービス名の指定した値を含む <see cref="T:System.Collections.ICollection" /> クラスのインスタンス。</param>
      <exception cref="T:System.ArgumentNullException" vsli:raw="&lt;paramref name=&quot;item&quot; /&gt; is &lt;see langword=&quot;null&quot; /&gt;.">
        <paramref name="item" /> が <see langword="null" />です。</exception>
      <exception cref="T:System.ArgumentException" vsli:raw="&lt;paramref name=&quot;item&quot; /&gt; is empty.">
        <paramref name="item" /> が空です。</exception>
    </member>
    <member name="M:System.Security.Authentication.ExtendedProtection.ServiceNameCollection.Contains(System.String)">
      <summary vsli:raw="Returns a value indicating whether the specified string occurs within this &lt;see cref=&quot;T:System.Security.Authentication.ExtendedProtection.ServiceNameCollection&quot; /&gt; instance.">この <see cref="T:System.Security.Authentication.ExtendedProtection.ServiceNameCollection" /> インスタンス内に指定した文字列が存在するかどうかを示す値を返します。</summary>
      <param name="searchServiceName" vsli:raw="The string to seek.">シークする文字列。</param>
      <returns vsli:raw="Returns &lt;see cref=&quot;T:System.Boolean&quot; /&gt;.  &#xA;  &#xA; &lt;see langword=&quot;true&quot; /&gt; if the &lt;paramref name=&quot;searchServiceName&quot; /&gt; parameter occurs within this &lt;see cref=&quot;T:System.Security.Authentication.ExtendedProtection.ServiceNameCollection&quot; /&gt; instance; otherwise, &lt;see langword=&quot;false&quot; /&gt;.">
        <see cref="T:System.Boolean" /> を返します。  
  
 <paramref name="searchServiceName" /> パラメーターがこの <see cref="T:System.Security.Authentication.ExtendedProtection.ServiceNameCollection" /> インスタンス内に存在する場合は <see langword="true" />。それ以外の場合は <see langword="false" />。</returns>
    </member>
    <member name="M:System.Security.Authentication.ExtendedProtection.ServiceNameCollection.Merge(System.Collections.IEnumerable)">
      <summary vsli:raw="Merges the current &lt;see cref=&quot;T:System.Security.Authentication.ExtendedProtection.ServiceNameCollection&quot; /&gt; with the specified values to create a new &lt;see cref=&quot;T:System.Security.Authentication.ExtendedProtection.ServiceNameCollection&quot; /&gt; containing the union.">現在の <see cref="T:System.Security.Authentication.ExtendedProtection.ServiceNameCollection" /> を指定された値とマージして、結合領域を包む新しい <see cref="T:System.Security.Authentication.ExtendedProtection.ServiceNameCollection" /> を作成します。</summary>
      <param name="serviceNames" vsli:raw="An instance of the &lt;see cref=&quot;T:System.Collections.IEnumerable&quot; /&gt; class that contains the specified values of service names to be merged.">マージされるサービス名の指定された値を格納する <see cref="T:System.Collections.IEnumerable" /> クラスのインスタンス。</param>
      <exception cref="T:System.ArgumentNullException" vsli:raw="&lt;paramref name=&quot;serviceNames&quot; /&gt; is &lt;see langword=&quot;null&quot; /&gt;.">
        <paramref name="serviceNames" /> が <see langword="null" />です。</exception>
      <exception cref="T:System.ArgumentException" vsli:raw="&lt;paramref name=&quot;serviceNames&quot; /&gt; is empty.">
        <paramref name="serviceNames" /> が空です。</exception>
      <returns vsli:raw="A new &lt;see cref=&quot;T:System.Security.Authentication.ExtendedProtection.ServiceNameCollection&quot; /&gt; instance that contains the union of the existing &lt;see cref=&quot;T:System.Security.Authentication.ExtendedProtection.ServiceNameCollection&quot; /&gt; instance merged with the specified values.">指定した値とマージされた既存の <see cref="T:System.Security.Authentication.ExtendedProtection.ServiceNameCollection" /> インスタンスの和集合を含む新しい <see cref="T:System.Security.Authentication.ExtendedProtection.ServiceNameCollection" /> インスタンス。</returns>
    </member>
    <member name="M:System.Security.Authentication.ExtendedProtection.ServiceNameCollection.Merge(System.String)">
      <summary vsli:raw="Merges the current &lt;see cref=&quot;T:System.Security.Authentication.ExtendedProtection.ServiceNameCollection&quot; /&gt; with the specified values to create a new &lt;see cref=&quot;T:System.Security.Authentication.ExtendedProtection.ServiceNameCollection&quot; /&gt; containing the union.">現在の <see cref="T:System.Security.Authentication.ExtendedProtection.ServiceNameCollection" /> を指定された値とマージして、結合領域を包む新しい <see cref="T:System.Security.Authentication.ExtendedProtection.ServiceNameCollection" /> を作成します。</summary>
      <param name="serviceName" vsli:raw="A string that contains the specified values of service names to be used to initialize the class.">クラスの初期化に使用されるサービス名の指定された値を格納する文字列。</param>
      <exception cref="T:System.ArgumentNullException" vsli:raw="&lt;paramref name=&quot;serviceNames&quot; /&gt; is &lt;see langword=&quot;null&quot; /&gt;.">
        <paramref name="serviceNames" /> が <see langword="null" />です。</exception>
      <exception cref="T:System.ArgumentException" vsli:raw="&lt;paramref name=&quot;serviceNames&quot; /&gt; is empty.">
        <paramref name="serviceNames" /> が空です。</exception>
      <returns vsli:raw="A new &lt;see cref=&quot;T:System.Security.Authentication.ExtendedProtection.ServiceNameCollection&quot; /&gt; instance that contains the union of the existing &lt;see cref=&quot;T:System.Security.Authentication.ExtendedProtection.ServiceNameCollection&quot; /&gt; instance merged with the specified values.">指定した値とマージされた既存の <see cref="T:System.Security.Authentication.ExtendedProtection.ServiceNameCollection" /> インスタンスの和集合を含む新しい <see cref="T:System.Security.Authentication.ExtendedProtection.ServiceNameCollection" /> インスタンス。</returns>
    </member>
    <member name="T:System.Security.Authentication.InvalidCredentialException">
      <summary vsli:raw="The exception that is thrown when authentication fails for an authentication stream and cannot be retried.">認証ストリームの認証が失敗してこの認証を再試行できない場合にスローされる例外。</summary>
    </member>
    <member name="M:System.Security.Authentication.InvalidCredentialException.#ctor">
      <summary vsli:raw="Initializes a new instance of the &lt;see cref=&quot;T:System.Security.Authentication.InvalidCredentialException&quot; /&gt; class with no message.">メッセージを指定せずに、<see cref="T:System.Security.Authentication.InvalidCredentialException" /> クラスの新しいインスタンスを初期化します。</summary>
    </member>
    <member name="M:System.Security.Authentication.InvalidCredentialException.#ctor(System.Runtime.Serialization.SerializationInfo,System.Runtime.Serialization.StreamingContext)">
      <summary vsli:raw="Initializes a new instance of the &lt;see cref=&quot;T:System.Security.Authentication.InvalidCredentialException&quot; /&gt; class from the specified instances of the &lt;see cref=&quot;T:System.Runtime.Serialization.SerializationInfo&quot; /&gt; and &lt;see cref=&quot;T:System.Runtime.Serialization.StreamingContext&quot; /&gt; classes.">
        <see cref="T:System.Runtime.Serialization.SerializationInfo" /> クラスと <see cref="T:System.Runtime.Serialization.StreamingContext" /> クラスの指定したインスタンスから、<see cref="T:System.Security.Authentication.InvalidCredentialException" /> クラスの新しいインスタンスを初期化します。</summary>
      <param name="serializationInfo" vsli:raw="A &lt;see cref=&quot;T:System.Runtime.Serialization.SerializationInfo&quot; /&gt; instance that contains the information required to deserialize the new &lt;see cref=&quot;T:System.Security.Authentication.InvalidCredentialException&quot; /&gt; instance.">新しい <see cref="T:System.Runtime.Serialization.SerializationInfo" /> インスタンスを逆シリアル化するために必要な情報を格納する <see cref="T:System.Security.Authentication.InvalidCredentialException" /> インスタンス。</param>
      <param name="streamingContext" vsli:raw="A &lt;see cref=&quot;T:System.Runtime.Serialization.StreamingContext&quot; /&gt; instance.">
        <see cref="T:System.Runtime.Serialization.StreamingContext" /> のインスタンス。</param>
    </member>
    <member name="M:System.Security.Authentication.InvalidCredentialException.#ctor(System.String)">
      <summary vsli:raw="Initializes a new instance of the &lt;see cref=&quot;T:System.Security.Authentication.InvalidCredentialException&quot; /&gt; class with the specified message.">指定したメッセージを使用して、<see cref="T:System.Security.Authentication.InvalidCredentialException" /> クラスの新しいインスタンスを初期化します。</summary>
      <param name="message" vsli:raw="A &lt;see cref=&quot;T:System.String&quot; /&gt; that describes the authentication failure.">認証エラーを説明する <see cref="T:System.String" />。</param>
    </member>
    <member name="M:System.Security.Authentication.InvalidCredentialException.#ctor(System.String,System.Exception)">
      <summary vsli:raw="Initializes a new instance of the &lt;see cref=&quot;T:System.Security.Authentication.InvalidCredentialException&quot; /&gt; class with the specified message and inner exception.">指定したメッセージと内部例外を使用して、<see cref="T:System.Security.Authentication.InvalidCredentialException" /> クラスの新しいインスタンスを初期化します。</summary>
      <param name="message" vsli:raw="A &lt;see cref=&quot;T:System.String&quot; /&gt; that describes the authentication failure.">認証エラーを説明する <see cref="T:System.String" />。</param>
      <param name="innerException" vsli:raw="The &lt;see cref=&quot;T:System.Exception&quot; /&gt; that is the cause of the current exception.">現在の例外の原因である <see cref="T:System.Exception" />。</param>
    </member>
  </members>
</doc>