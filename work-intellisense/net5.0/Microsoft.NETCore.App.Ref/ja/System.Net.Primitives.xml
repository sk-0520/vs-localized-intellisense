<?xml version="1.0" encoding="utf-8"?>
<doc xmlns:vsli="https://github.com/sk-0520/vs-localized-intellisense/tree/master/schema/2024">
  <assembly>
    <name>System.Net.Primitives</name>
  </assembly>
  <members>
    <member name="T:System.Net.AuthenticationSchemes">
      <summary vsli:raw="Specifies protocols for authentication.">認証用のプロトコルを指定します。</summary>
    </member>
    <member name="F:System.Net.AuthenticationSchemes.Anonymous">
      <summary vsli:raw="Specifies anonymous authentication.">匿名認証を指定します。</summary>
    </member>
    <member name="F:System.Net.AuthenticationSchemes.Basic">
      <summary vsli:raw="Specifies basic authentication.">基本認証を指定します。</summary>
    </member>
    <member name="F:System.Net.AuthenticationSchemes.Digest">
      <summary vsli:raw="Specifies digest authentication.">ダイジェスト認証を指定します。</summary>
    </member>
    <member name="F:System.Net.AuthenticationSchemes.IntegratedWindowsAuthentication">
      <summary vsli:raw="Specifies Windows authentication.">Windows 認証を指定します。</summary>
    </member>
    <member name="F:System.Net.AuthenticationSchemes.Negotiate">
      <summary vsli:raw="Negotiates with the client to determine the authentication scheme. If both client and server support Kerberos, it is used; otherwise, NTLM is used.">クライアントとネゴシエートし、認証方式を決定します。 クライアントとサーバーの両方が Kerberos をサポートする場合は、この方式が使用されます。それ以外の場合は NTLM が使用されます。</summary>
    </member>
    <member name="F:System.Net.AuthenticationSchemes.None">
      <summary vsli:raw="No authentication is allowed. A client requesting an &lt;see cref=&quot;T:System.Net.HttpListener&quot; /&gt; object with this flag set will always receive a 403 Forbidden status. Use this flag when a resource should never be served to a client.">認証は使用できません。 このフラグが設定された <see cref="T:System.Net.HttpListener" /> オブジェクトを要求するクライアントは、常に "403 アクセス不可" のステータスを受け取ります。 リソースをクライアントに提供できない場合にこのフラグを使用します。</summary>
    </member>
    <member name="F:System.Net.AuthenticationSchemes.Ntlm">
      <summary vsli:raw="Specifies NTLM authentication.">NTLM 認証を指定します。</summary>
    </member>
    <member name="T:System.Net.Cache.RequestCacheLevel">
      <summary vsli:raw="Specifies caching behavior for resources obtained using &lt;see cref=&quot;T:System.Net.WebRequest&quot; /&gt; and its derived classes.">
        <see cref="T:System.Net.WebRequest" /> およびその派生クラスを使用して取得されるリソースのキャッシュ動作を指定します。</summary>
    </member>
    <member name="F:System.Net.Cache.RequestCacheLevel.BypassCache">
      <summary vsli:raw="Satisfies a request by using the server. No entries are taken from caches, added to caches, or removed from caches between the client and server. This is the default cache behavior specified in the machine configuration file that ships with the .NET Framework.">サーバーを使用して要求に応じます。 クライアントとサーバー間では、エントリはキャッシュから取得したり、キャッシュに追加、またはキャッシュから削除したりされません。 これは、.NET Framework と共に配布されるコンピューターの構成ファイルで指定されている既定のキャッシュ動作です。</summary>
    </member>
    <member name="F:System.Net.Cache.RequestCacheLevel.CacheIfAvailable">
      <summary vsli:raw="Satisfies a request for a resource from the cache, if the resource is available; otherwise, sends a request for a resource to the server. If the requested item is available in any cache between the client and the server, the request might be satisfied by the intermediate cache.">リソースが利用可能な場合は、キャッシュからリソースの要求に応じます。それ以外の場合は、リソースの要求をサーバーに送信します。 要求されたアイテムがクライアントとサーバー間のキャッシュにある場合は、その中間キャッシュから要求に応じることもあります。</summary>
    </member>
    <member name="F:System.Net.Cache.RequestCacheLevel.CacheOnly">
      <summary vsli:raw="Satisfies a request using the locally cached resource; does not send a request for an item that is not in the cache. When this cache policy level is specified, a &lt;see cref=&quot;T:System.Net.WebException&quot; /&gt; exception is thrown if the item is not in the client cache.">ローカルにキャッシュされたリソースを使用して要求に応じ、キャッシュにないアイテムの要求は送信しません。 このキャッシュ ポリシー レベルが指定されている場合、アイテムがクライアントのキャッシュになければ <see cref="T:System.Net.WebException" /> 例外がスローされます。</summary>
    </member>
    <member name="F:System.Net.Cache.RequestCacheLevel.Default">
      <summary vsli:raw="Satisfies a request for a resource either by using the cached copy of the resource or by sending a request for the resource to the server. The action taken is determined by the current cache policy and the age of the content in the cache. This is the cache level that should be used by most applications.">キャッシュされたリソースのコピーを使用するか、リソースの要求をサーバーに送信して、リソースの要求に応じます。 実行される動作は、現在のキャッシュ ポリシーとキャッシュ内のコンテンツの世代によって決まります。 これが、ほとんどのアプリケーションで使用されるキャッシュ レベルです。</summary>
    </member>
    <member name="F:System.Net.Cache.RequestCacheLevel.NoCacheNoStore">
      <summary vsli:raw="Never satisfies a request by using resources from the cache and does not cache resources. If the resource is present in the local cache, it is removed. This policy level indicates to intermediate caches that they should remove the resource. In the HTTP caching protocol, this is achieved using the &lt;see langword=&quot;no-cache&quot; /&gt; cache control directive.">キャッシュのリソースを使用して要求に応じることはなく、リソースをキャッシュしません。 リソースがローカル キャッシュに存在する場合は、削除されます。 このポリシー レベルは、中間キャッシュに、リソースをキャッシュから削除する必要があることを示します。 HTTP キャッシュ プロトコルの場合、これは <see langword="no-cache" /> キャッシュ制御ディレクティブを使用して実現されます。</summary>
    </member>
    <member name="F:System.Net.Cache.RequestCacheLevel.Reload">
      <summary vsli:raw="Satisfies a request by using the server. The response might be saved in the cache. In the HTTP caching protocol, this is achieved using the &lt;see langword=&quot;no-cache&quot; /&gt; cache control directive and the no-cache &lt;see langword=&quot;Pragma&quot; /&gt; header.">サーバーを使用して要求に応じます。 応答は、キャッシュに保存される可能性があります。 HTTP キャッシュ プロトコルの場合、これは <see langword="no-cache" /> キャッシュ制御ディレクティブおよび no-cache <see langword="Pragma" /> ヘッダーを使用して実現されます。</summary>
    </member>
    <member name="F:System.Net.Cache.RequestCacheLevel.Revalidate">
      <summary vsli:raw="Satisfies a request by using the cached copy of the resource if the timestamp is the same as the timestamp of the resource on the server; otherwise, the resource is downloaded from the server, presented to the caller, and stored in the cache.">タイムスタンプがサーバーのリソースのタイムスタンプと同じ場合は、キャッシュされたリソースのコピーを使用して要求に応じます。それ以外の場合は、リソースがサーバーからダウンロードされ、呼び出し元に提示され、キャッシュに格納されます。</summary>
    </member>
    <member name="T:System.Net.Cache.RequestCachePolicy">
      <summary vsli:raw="Defines an application's caching requirements for resources obtained by using &lt;see cref=&quot;T:System.Net.WebRequest&quot; /&gt; objects.">
        <see cref="T:System.Net.WebRequest" /> オブジェクトを使用して取得されるリソースに対するアプリケーションのキャッシュ要件を定義します。</summary>
    </member>
    <member name="M:System.Net.Cache.RequestCachePolicy.#ctor">
      <summary vsli:raw="Initializes a new instance of the &lt;see cref=&quot;T:System.Net.Cache.RequestCachePolicy&quot; /&gt; class.">
        <see cref="T:System.Net.Cache.RequestCachePolicy" /> クラスの新しいインスタンスを初期化します。</summary>
    </member>
    <member name="M:System.Net.Cache.RequestCachePolicy.#ctor(System.Net.Cache.RequestCacheLevel)">
      <summary vsli:raw="Initializes a new instance of the &lt;see cref=&quot;T:System.Net.Cache.RequestCachePolicy&quot; /&gt; class. using the specified cache policy.">
        <see cref="T:System.Net.Cache.RequestCachePolicy" /> クラスの新しいインスタンスを初期化します。 このとき、キャッシュ ポリシーを指定します。</summary>
      <param name="level" vsli:raw="A &lt;see cref=&quot;T:System.Net.Cache.RequestCacheLevel&quot; /&gt; that specifies the cache behavior for resources obtained using &lt;see cref=&quot;T:System.Net.WebRequest&quot; /&gt; objects.">
        <see cref="T:System.Net.Cache.RequestCacheLevel" /> オブジェクトを使用して取得されるリソースのキャッシュ動作を指定する <see cref="T:System.Net.WebRequest" />。</param>
      <exception cref="T:System.ArgumentOutOfRangeException" vsli:raw="level is not a valid &lt;see cref=&quot;T:System.Net.Cache.RequestCacheLevel&quot; /&gt;.value.">level が有効な <see cref="T:System.Net.Cache.RequestCacheLevel" /> 値ではありません。</exception>
    </member>
    <member name="M:System.Net.Cache.RequestCachePolicy.ToString">
      <summary vsli:raw="Returns a string representation of this instance.">このインスタンスの文字列形式を返します。</summary>
      <returns vsli:raw="A &lt;see cref=&quot;T:System.String&quot; /&gt; containing the &lt;see cref=&quot;P:System.Net.Cache.RequestCachePolicy.Level&quot; /&gt; for this instance.">このインスタンスの <see cref="T:System.String" /> を格納している <see cref="P:System.Net.Cache.RequestCachePolicy.Level" />。</returns>
    </member>
    <member name="P:System.Net.Cache.RequestCachePolicy.Level">
      <summary vsli:raw="Gets the &lt;see cref=&quot;T:System.Net.Cache.RequestCacheLevel&quot; /&gt; value specified when this instance was constructed.">このインスタンスが生成されたときに指定された <see cref="T:System.Net.Cache.RequestCacheLevel" /> 値を取得します。</summary>
      <returns vsli:raw="A &lt;see cref=&quot;T:System.Net.Cache.RequestCacheLevel&quot; /&gt; value that specifies the cache behavior for resources obtained using &lt;see cref=&quot;T:System.Net.WebRequest&quot; /&gt; objects.">
        <see cref="T:System.Net.Cache.RequestCacheLevel" /> オブジェクトを使用して取得されるリソースのキャッシュ動作を指定する <see cref="T:System.Net.WebRequest" /> 値。</returns>
    </member>
    <member name="T:System.Net.Cookie">
      <summary vsli:raw="Provides a set of properties and methods that are used to manage cookies. This class cannot be inherited.">クッキーを管理するために使用される一連のプロパティおよびメソッドを提供します。 このクラスは継承できません。</summary>
    </member>
    <member name="M:System.Net.Cookie.#ctor">
      <summary vsli:raw="Initializes a new instance of the &lt;see cref=&quot;T:System.Net.Cookie&quot; /&gt; class.">
        <see cref="T:System.Net.Cookie" /> クラスの新しいインスタンスを初期化します。</summary>
    </member>
    <member name="M:System.Net.Cookie.#ctor(System.String,System.String)">
      <summary vsli:raw="Initializes a new instance of the &lt;see cref=&quot;T:System.Net.Cookie&quot; /&gt; class with a specified &lt;see cref=&quot;P:System.Net.Cookie.Name&quot; /&gt; and &lt;see cref=&quot;P:System.Net.Cookie.Value&quot; /&gt;.">指定した <see cref="T:System.Net.Cookie" /> および <see cref="P:System.Net.Cookie.Name" /> を使用して、<see cref="P:System.Net.Cookie.Value" /> クラスの新しいインスタンスを初期化します。</summary>
      <param name="name" vsli:raw="The name of a &lt;see cref=&quot;T:System.Net.Cookie&quot; /&gt;. The following characters must not be used inside &lt;paramref name=&quot;name&quot; /&gt;: equal sign, semicolon, comma, newline (\n), return (\r), tab (\t), and space character. The dollar sign character (&quot;$&quot;) cannot be the first character.">
        <see cref="T:System.Net.Cookie" /> の名前。 等号 (=)、セミコロン (;)、コンマ (,)、改行 (\n)、リターン (\r)、タブ (\t)、および空白文字は、<paramref name="name" /> 内で使用しないでください。 ドル記号文字 ("$") を最初の文字にすることはできません。</param>
      <param name="value" vsli:raw="The value of a &lt;see cref=&quot;T:System.Net.Cookie&quot; /&gt;. The following characters must not be used inside &lt;paramref name=&quot;value&quot; /&gt;: semicolon, comma.">
        <see cref="T:System.Net.Cookie" /> の値。 セミコロン (;) とコンマ (,) は、<paramref name="value" /> 内で使用しないでください。</param>
      <exception cref="T:System.Net.CookieException" vsli:raw="The &lt;paramref name=&quot;name&quot; /&gt; parameter is &lt;see langword=&quot;null&quot; /&gt;.  &#xA;  &#xA; -or-  &#xA;  &#xA; The &lt;paramref name=&quot;name&quot; /&gt; parameter is of zero length.  &#xA;  &#xA; -or-  &#xA;  &#xA; The &lt;paramref name=&quot;name&quot; /&gt; parameter contains an invalid character.  &#xA;  &#xA; -or-  &#xA;  &#xA; The &lt;paramref name=&quot;value&quot; /&gt; parameter is &lt;see langword=&quot;null&quot; /&gt; .  &#xA;  &#xA; -or -  &#xA;  &#xA; The &lt;paramref name=&quot;value&quot; /&gt; parameter contains a string not enclosed in quotes that contains an invalid character.">
        <paramref name="name" /> パラメーターが <see langword="null" /> です。  
  
- または - 
<paramref name="name" /> パラメーターの長さが 0 です。  
  
- または - 
<paramref name="name" /> パラメーターに無効な文字が含まれています。  
  
- または - 
<paramref name="value" /> パラメーターが <see langword="null" /> です。  
  
または 
<paramref name="value" /> パラメーターには、無効な文字を含む、引用符で囲まれていない文字列が含まれています。</exception>
    </member>
    <member name="M:System.Net.Cookie.#ctor(System.String,System.String,System.String)">
      <summary vsli:raw="Initializes a new instance of the &lt;see cref=&quot;T:System.Net.Cookie&quot; /&gt; class with a specified &lt;see cref=&quot;P:System.Net.Cookie.Name&quot; /&gt;, &lt;see cref=&quot;P:System.Net.Cookie.Value&quot; /&gt;, and &lt;see cref=&quot;P:System.Net.Cookie.Path&quot; /&gt;.">指定した <see cref="T:System.Net.Cookie" />、<see cref="P:System.Net.Cookie.Name" />、および <see cref="P:System.Net.Cookie.Value" /> を使用して、<see cref="P:System.Net.Cookie.Path" /> クラスの新しいインスタンスを初期化します。</summary>
      <param name="name" vsli:raw="The name of a &lt;see cref=&quot;T:System.Net.Cookie&quot; /&gt;. The following characters must not be used inside &lt;paramref name=&quot;name&quot; /&gt;: equal sign, semicolon, comma, newline (\n), return (\r), tab (\t), and space character. The dollar sign character (&quot;$&quot;) cannot be the first character.">
        <see cref="T:System.Net.Cookie" /> の名前。 等号 (=)、セミコロン (;)、コンマ (,)、改行 (\n)、リターン (\r)、タブ (\t)、および空白文字は、<paramref name="name" /> 内で使用しないでください。 ドル記号文字 ("$") を最初の文字にすることはできません。</param>
      <param name="value" vsli:raw="The value of a &lt;see cref=&quot;T:System.Net.Cookie&quot; /&gt;. The following characters must not be used inside &lt;paramref name=&quot;value&quot; /&gt;: semicolon, comma.">
        <see cref="T:System.Net.Cookie" /> の値。 セミコロン (;) とコンマ (,) は、<paramref name="value" /> 内で使用しないでください。</param>
      <param name="path" vsli:raw="The subset of URIs on the origin server to which this &lt;see cref=&quot;T:System.Net.Cookie&quot; /&gt; applies. The default value is &quot;/&quot;.">この <see cref="T:System.Net.Cookie" /> が適用される送信元サーバーの URI のサブセット。 既定値は "/" です。</param>
      <exception cref="T:System.Net.CookieException" vsli:raw="The &lt;paramref name=&quot;name&quot; /&gt; parameter is &lt;see langword=&quot;null&quot; /&gt;.  &#xA;  &#xA; -or-  &#xA;  &#xA; The &lt;paramref name=&quot;name&quot; /&gt; parameter is of zero length.  &#xA;  &#xA; -or-  &#xA;  &#xA; The &lt;paramref name=&quot;name&quot; /&gt; parameter contains an invalid character.  &#xA;  &#xA; -or-  &#xA;  &#xA; The &lt;paramref name=&quot;value&quot; /&gt; parameter is &lt;see langword=&quot;null&quot; /&gt; .  &#xA;  &#xA; -or -  &#xA;  &#xA; The &lt;paramref name=&quot;value&quot; /&gt; parameter contains a string not enclosed in quotes that contains an invalid character.">
        <paramref name="name" /> パラメーターが <see langword="null" /> です。  
  
- または - 
<paramref name="name" /> パラメーターの長さが 0 です。  
  
- または - 
<paramref name="name" /> パラメーターに無効な文字が含まれています。  
  
- または - 
<paramref name="value" /> パラメーターが <see langword="null" /> です。  
  
または 
<paramref name="value" /> パラメーターには、無効な文字を含む、引用符で囲まれていない文字列が含まれています。</exception>
    </member>
    <member name="M:System.Net.Cookie.#ctor(System.String,System.String,System.String,System.String)">
      <summary vsli:raw="Initializes a new instance of the &lt;see cref=&quot;T:System.Net.Cookie&quot; /&gt; class with a specified &lt;see cref=&quot;P:System.Net.Cookie.Name&quot; /&gt;, &lt;see cref=&quot;P:System.Net.Cookie.Value&quot; /&gt;, &lt;see cref=&quot;P:System.Net.Cookie.Path&quot; /&gt;, and &lt;see cref=&quot;P:System.Net.Cookie.Domain&quot; /&gt;.">指定した <see cref="T:System.Net.Cookie" />、<see cref="P:System.Net.Cookie.Name" />、<see cref="P:System.Net.Cookie.Value" />、および <see cref="P:System.Net.Cookie.Path" /> を使用して、<see cref="P:System.Net.Cookie.Domain" /> クラスの新しいインスタンスを初期化します。</summary>
      <param name="name" vsli:raw="The name of a &lt;see cref=&quot;T:System.Net.Cookie&quot; /&gt;. The following characters must not be used inside &lt;paramref name=&quot;name&quot; /&gt;: equal sign, semicolon, comma, newline (\n), return (\r), tab (\t), and space character. The dollar sign character (&quot;$&quot;) cannot be the first character.">
        <see cref="T:System.Net.Cookie" /> の名前。 等号 (=)、セミコロン (;)、コンマ (,)、改行 (\n)、リターン (\r)、タブ (\t)、および空白文字は、<paramref name="name" /> 内で使用しないでください。 ドル記号文字 ("$") を最初の文字にすることはできません。</param>
      <param name="value" vsli:raw="The value of a &lt;see cref=&quot;T:System.Net.Cookie&quot; /&gt; object. The following characters must not be used inside &lt;paramref name=&quot;value&quot; /&gt;: semicolon, comma.">
        <see cref="T:System.Net.Cookie" /> オブジェクトの値。 セミコロン (;) とコンマ (,) は、<paramref name="value" /> 内で使用しないでください。</param>
      <param name="path" vsli:raw="The subset of URIs on the origin server to which this &lt;see cref=&quot;T:System.Net.Cookie&quot; /&gt; applies. The default value is &quot;/&quot;.">この <see cref="T:System.Net.Cookie" /> が適用される送信元サーバーの URI のサブセット。 既定値は "/" です。</param>
      <param name="domain" vsli:raw="The optional internet domain for which this &lt;see cref=&quot;T:System.Net.Cookie&quot; /&gt; is valid. The default value is the host this &lt;see cref=&quot;T:System.Net.Cookie&quot; /&gt; has been received from.">この <see cref="T:System.Net.Cookie" /> が有効なオプションのインターネット ドメイン。 既定値は、この <see cref="T:System.Net.Cookie" /> の送信元のホストです。</param>
      <exception cref="T:System.Net.CookieException" vsli:raw="The &lt;paramref name=&quot;name&quot; /&gt; parameter is &lt;see langword=&quot;null&quot; /&gt;.  &#xA;  &#xA; -or-  &#xA;  &#xA; The &lt;paramref name=&quot;name&quot; /&gt; parameter is of zero length.  &#xA;  &#xA; -or-  &#xA;  &#xA; The &lt;paramref name=&quot;name&quot; /&gt; parameter contains an invalid character.  &#xA;  &#xA; -or-  &#xA;  &#xA; The &lt;paramref name=&quot;value&quot; /&gt; parameter is &lt;see langword=&quot;null&quot; /&gt; .  &#xA;  &#xA; -or -  &#xA;  &#xA; The &lt;paramref name=&quot;value&quot; /&gt; parameter contains a string not enclosed in quotes that contains an invalid character.">
        <paramref name="name" /> パラメーターが <see langword="null" /> です。  
  
- または - 
<paramref name="name" /> パラメーターの長さが 0 です。  
  
- または - 
<paramref name="name" /> パラメーターに無効な文字が含まれています。  
  
- または - 
<paramref name="value" /> パラメーターが <see langword="null" /> です。  
  
または 
<paramref name="value" /> パラメーターには、無効な文字を含む、引用符で囲まれていない文字列が含まれています。</exception>
    </member>
    <member name="M:System.Net.Cookie.Equals(System.Object)">
      <summary vsli:raw="Overrides the &lt;see cref=&quot;M:System.Object.Equals(System.Object)&quot; /&gt; method.">
        <see cref="M:System.Object.Equals(System.Object)" /> メソッドをオーバーライドします。</summary>
      <param name="comparand" vsli:raw="A reference to a &lt;see cref=&quot;T:System.Net.Cookie&quot; /&gt;.">
        <see cref="T:System.Net.Cookie" /> への参照。</param>
      <returns vsli:raw="Returns &lt;see langword=&quot;true&quot; /&gt; if the &lt;see cref=&quot;T:System.Net.Cookie&quot; /&gt; is equal to &lt;paramref name=&quot;comparand&quot; /&gt;. Two &lt;see cref=&quot;T:System.Net.Cookie&quot; /&gt; instances are equal if their &lt;see cref=&quot;P:System.Net.Cookie.Name&quot; /&gt;, &lt;see cref=&quot;P:System.Net.Cookie.Value&quot; /&gt;, &lt;see cref=&quot;P:System.Net.Cookie.Path&quot; /&gt;, &lt;see cref=&quot;P:System.Net.Cookie.Domain&quot; /&gt;, and &lt;see cref=&quot;P:System.Net.Cookie.Version&quot; /&gt; properties are equal. &lt;see cref=&quot;P:System.Net.Cookie.Name&quot; /&gt; and &lt;see cref=&quot;P:System.Net.Cookie.Domain&quot; /&gt; string comparisons are case-insensitive.">
        <see cref="T:System.Net.Cookie" /> が <paramref name="comparand" /> に等しい場合は、<see langword="true" /> を返します。 2 つの <see cref="T:System.Net.Cookie" /> インスタンスは、<see cref="P:System.Net.Cookie.Name" />、<see cref="P:System.Net.Cookie.Value" />、<see cref="P:System.Net.Cookie.Path" />、<see cref="P:System.Net.Cookie.Domain" />、および <see cref="P:System.Net.Cookie.Version" /> の各プロパティが等しい場合に等しくなります。 <see cref="P:System.Net.Cookie.Name" /> の文字列比較と <see cref="P:System.Net.Cookie.Domain" /> の文字列比較は、大文字と小文字を区別しません。</returns>
    </member>
    <member name="M:System.Net.Cookie.GetHashCode">
      <summary vsli:raw="Overrides the &lt;see cref=&quot;M:System.Object.GetHashCode&quot; /&gt; method.">
        <see cref="M:System.Object.GetHashCode" /> メソッドをオーバーライドします。</summary>
      <returns vsli:raw="The 32-bit signed integer hash code for this instance.">このインスタンスの 32 ビット符号付き整数ハッシュ コード。</returns>
    </member>
    <member name="M:System.Net.Cookie.ToString">
      <summary vsli:raw="Overrides the &lt;see cref=&quot;M:System.Object.ToString&quot; /&gt; method.">
        <see cref="M:System.Object.ToString" /> メソッドをオーバーライドします。</summary>
      <returns vsli:raw="Returns a string representation of this &lt;see cref=&quot;T:System.Net.Cookie&quot; /&gt; object that is suitable for including in a HTTP Cookie: request header.">この <see cref="T:System.Net.Cookie" /> オブジェクトの、HTTP クッキー: 要求ヘッダーに含めることができる文字列形式を返します。</returns>
    </member>
    <member name="P:System.Net.Cookie.Comment">
      <summary vsli:raw="Gets or sets a comment that the server can add to a &lt;see cref=&quot;T:System.Net.Cookie&quot; /&gt;.">サーバーが <see cref="T:System.Net.Cookie" /> に追加できるコメントを取得または設定します。</summary>
      <returns vsli:raw="An optional comment to document intended usage for this &lt;see cref=&quot;T:System.Net.Cookie&quot; /&gt;.">この <see cref="T:System.Net.Cookie" /> で使用法をドキュメント化するオプションのコメント。</returns>
    </member>
    <member name="P:System.Net.Cookie.CommentUri">
      <summary vsli:raw="Gets or sets a URI comment that the server can provide with a &lt;see cref=&quot;T:System.Net.Cookie&quot; /&gt;.">サーバーが <see cref="T:System.Net.Cookie" /> で提供できる URI コメントを取得または設定します。</summary>
      <returns vsli:raw="An optional comment that represents the intended usage of the URI reference for this &lt;see cref=&quot;T:System.Net.Cookie&quot; /&gt;. The value must conform to URI format.">この <see cref="T:System.Net.Cookie" /> の URI 参照の想定している用途を表すオプションのコメント。 この値は、URI 書式に準拠している必要があります。</returns>
    </member>
    <member name="P:System.Net.Cookie.Discard">
      <summary vsli:raw="Gets or sets the discard flag set by the server.">サーバーが設定した破棄フラグを取得または設定します。</summary>
      <returns vsli:raw="&lt;see langword=&quot;true&quot; /&gt; if the client is to discard the &lt;see cref=&quot;T:System.Net.Cookie&quot; /&gt; at the end of the current session; otherwise, &lt;see langword=&quot;false&quot; /&gt;. The default is &lt;see langword=&quot;false&quot; /&gt;.">現在のセッションの最後にクライアントが <see cref="T:System.Net.Cookie" /> を破棄する場合は <see langword="true" />。それ以外の場合は <see langword="false" />。 既定値は、<see langword="false" /> です。</returns>
    </member>
    <member name="P:System.Net.Cookie.Domain">
      <summary vsli:raw="Gets or sets the URI for which the &lt;see cref=&quot;T:System.Net.Cookie&quot; /&gt; is valid.">
        <see cref="T:System.Net.Cookie" /> が有効な URI を取得または設定します。</summary>
      <returns vsli:raw="The URI for which the &lt;see cref=&quot;T:System.Net.Cookie&quot; /&gt; is valid.">
        <see cref="T:System.Net.Cookie" /> が有効な URI。</returns>
    </member>
    <member name="P:System.Net.Cookie.Expired">
      <summary vsli:raw="Gets or sets the current state of the &lt;see cref=&quot;T:System.Net.Cookie&quot; /&gt;.">
        <see cref="T:System.Net.Cookie" /> の現在の状態を取得または設定します。</summary>
      <returns vsli:raw="&lt;see langword=&quot;true&quot; /&gt; if the &lt;see cref=&quot;T:System.Net.Cookie&quot; /&gt; has expired; otherwise, &lt;see langword=&quot;false&quot; /&gt;. The default is &lt;see langword=&quot;false&quot; /&gt;.">
        <see cref="T:System.Net.Cookie" /> の有効期限が切れた場合は <see langword="true" />。それ以外の場合は <see langword="false" />。 既定値は、<see langword="false" /> です。</returns>
    </member>
    <member name="P:System.Net.Cookie.Expires">
      <summary vsli:raw="Gets or sets the expiration date and time for the &lt;see cref=&quot;T:System.Net.Cookie&quot; /&gt; as a &lt;see cref=&quot;T:System.DateTime&quot; /&gt;.">
        <see cref="T:System.Net.Cookie" /> の有効期限の日時を <see cref="T:System.DateTime" /> として取得または設定します。</summary>
      <returns vsli:raw="The expiration date and time for the &lt;see cref=&quot;T:System.Net.Cookie&quot; /&gt; as a &lt;see cref=&quot;T:System.DateTime&quot; /&gt; instance.">
        <see cref="T:System.Net.Cookie" /> インスタンスとしての <see cref="T:System.DateTime" /> の有効期限の日時。</returns>
    </member>
    <member name="P:System.Net.Cookie.HttpOnly">
      <summary vsli:raw="Determines whether a page script or other active content can access this cookie.">ページ スクリプトまたは他のアクティブ コンテンツがこのクッキーにアクセスできるかどうかを決定します。</summary>
      <returns vsli:raw="Boolean value that determines whether a page script or other active content can access this cookie.">ページ スクリプトまたは他のアクティブ コンテンツがこのクッキーにアクセスできるかどうかを決定するブール値。</returns>
    </member>
    <member name="P:System.Net.Cookie.Name">
      <summary vsli:raw="Gets or sets the name for the &lt;see cref=&quot;T:System.Net.Cookie&quot; /&gt;.">
        <see cref="T:System.Net.Cookie" /> の名前を取得します。値の設定も可能です。</summary>
      <exception cref="T:System.Net.CookieException" vsli:raw="The value specified for a set operation is &lt;see langword=&quot;null&quot; /&gt; or the empty string  &#xA;  &#xA;-or-&#xA;  &#xA; The value specified for a set operation contained an illegal character. The following characters must not be used inside the &lt;see cref=&quot;P:System.Net.Cookie.Name&quot; /&gt; property: equal sign, semicolon, comma, newline (\n), return (\r), tab (\t), and space character. The dollar sign character (&quot;$&quot;) cannot be the first character.">設定操作として指定した値が、<see langword="null" /> または空の文字列です。 
- または - 
設定操作として指定した値に無効な文字が含まれていました。 等号 (=)、セミコロン (;)、コンマ (,)、改行 (\n)、リターン (\r)、タブ (\t)、および空白文字は、<see cref="P:System.Net.Cookie.Name" /> プロパティ内で使用しないでください。 ドル記号文字 ("$") を最初の文字にすることはできません。</exception>
      <returns vsli:raw="The name for the &lt;see cref=&quot;T:System.Net.Cookie&quot; /&gt;.">
        <see cref="T:System.Net.Cookie" /> の名前。</returns>
    </member>
    <member name="P:System.Net.Cookie.Path">
      <summary vsli:raw="Gets or sets the URIs to which the &lt;see cref=&quot;T:System.Net.Cookie&quot; /&gt; applies.">
        <see cref="T:System.Net.Cookie" /> が適用される URI を取得または設定します。</summary>
      <returns vsli:raw="The URIs to which the &lt;see cref=&quot;T:System.Net.Cookie&quot; /&gt; applies.">
        <see cref="T:System.Net.Cookie" /> が適用される URI。</returns>
    </member>
    <member name="P:System.Net.Cookie.Port">
      <summary vsli:raw="Gets or sets a list of TCP ports that the &lt;see cref=&quot;T:System.Net.Cookie&quot; /&gt; applies to.">
        <see cref="T:System.Net.Cookie" /> が適用される TCP ポートのリストを取得または設定します。</summary>
      <exception cref="T:System.Net.CookieException" vsli:raw="The value specified for a set operation could not be parsed or is not enclosed in double quotes.">設定操作に指定した値が解析できなかったか、二重引用符で囲まれていません。</exception>
      <returns vsli:raw="The list of TCP ports that the &lt;see cref=&quot;T:System.Net.Cookie&quot; /&gt; applies to.">
        <see cref="T:System.Net.Cookie" /> が適用される TCP ポートのリスト。</returns>
    </member>
    <member name="P:System.Net.Cookie.Secure">
      <summary vsli:raw="Gets or sets the security level of a &lt;see cref=&quot;T:System.Net.Cookie&quot; /&gt;.">
        <see cref="T:System.Net.Cookie" /> のセキュリティ レベルを取得または設定します。</summary>
      <returns vsli:raw="&lt;see langword=&quot;true&quot; /&gt; if the client is only to return the cookie in subsequent requests if those requests use Secure Hypertext Transfer Protocol (HTTPS); otherwise, &lt;see langword=&quot;false&quot; /&gt;. The default is &lt;see langword=&quot;false&quot; /&gt;.">要求に HTTPS (Secure Hypertext Transfer Protocol) が使用されるときにだけクライアントが後続の要求でクッキーを返すようにする場合は <see langword="true" />。それ以外の場合は <see langword="false" />。 既定値は、<see langword="false" /> です。</returns>
    </member>
    <member name="P:System.Net.Cookie.TimeStamp">
      <summary vsli:raw="Gets the time when the cookie was issued as a &lt;see cref=&quot;T:System.DateTime&quot; /&gt;.">クッキーが <see cref="T:System.DateTime" /> として発行された時刻を取得します。</summary>
      <returns vsli:raw="The time when the cookie was issued as a &lt;see cref=&quot;T:System.DateTime&quot; /&gt;.">クッキーが <see cref="T:System.DateTime" /> として発行された時刻。</returns>
    </member>
    <member name="P:System.Net.Cookie.Value">
      <summary vsli:raw="Gets or sets the &lt;see cref=&quot;P:System.Net.Cookie.Value&quot; /&gt; for the &lt;see cref=&quot;T:System.Net.Cookie&quot; /&gt;.">
        <see cref="P:System.Net.Cookie.Value" /> の <see cref="T:System.Net.Cookie" /> を取得または設定します。</summary>
      <returns vsli:raw="The &lt;see cref=&quot;P:System.Net.Cookie.Value&quot; /&gt; for the &lt;see cref=&quot;T:System.Net.Cookie&quot; /&gt;.">
        <see cref="P:System.Net.Cookie.Value" /> の <see cref="T:System.Net.Cookie" />。</returns>
    </member>
    <member name="P:System.Net.Cookie.Version">
      <summary vsli:raw="Gets or sets the version of HTTP state maintenance to which the cookie conforms.">クッキーが準拠する HTTP 状態保守のバージョンを取得または設定します。</summary>
      <exception cref="T:System.ArgumentOutOfRangeException" vsli:raw="The value specified for a version is not allowed.">バージョンに指定した値は使用できません。</exception>
      <returns vsli:raw="The version of HTTP state maintenance to which the cookie conforms.">クッキーが準拠する HTTP 状態保守のバージョン。</returns>
    </member>
    <member name="T:System.Net.CookieCollection">
      <summary vsli:raw="Provides a collection container for instances of the &lt;see cref=&quot;T:System.Net.Cookie&quot; /&gt; class.">
        <see cref="T:System.Net.Cookie" /> クラスのインスタンスのコレクション コンテナーを提供します。</summary>
    </member>
    <member name="M:System.Net.CookieCollection.#ctor">
      <summary vsli:raw="Initializes a new instance of the &lt;see cref=&quot;T:System.Net.CookieCollection&quot; /&gt; class.">
        <see cref="T:System.Net.CookieCollection" /> クラスの新しいインスタンスを初期化します。</summary>
    </member>
    <member name="M:System.Net.CookieCollection.Add(System.Net.Cookie)">
      <summary vsli:raw="Adds a &lt;see cref=&quot;T:System.Net.Cookie&quot; /&gt; to a &lt;see cref=&quot;T:System.Net.CookieCollection&quot; /&gt;.">
        <see cref="T:System.Net.Cookie" /> を <see cref="T:System.Net.CookieCollection" /> に追加します。</summary>
      <param name="cookie" vsli:raw="The &lt;see cref=&quot;T:System.Net.Cookie&quot; /&gt; to be added to a &lt;see cref=&quot;T:System.Net.CookieCollection&quot; /&gt;.">
        <see cref="T:System.Net.Cookie" /> に追加される <see cref="T:System.Net.CookieCollection" />。</param>
      <exception cref="T:System.ArgumentNullException" vsli:raw="&lt;paramref name=&quot;cookie&quot; /&gt; is &lt;see langword=&quot;null&quot; /&gt;.">
        <paramref name="cookie" /> が <see langword="null" />です。</exception>
    </member>
    <member name="M:System.Net.CookieCollection.Add(System.Net.CookieCollection)">
      <summary vsli:raw="Adds the contents of a &lt;see cref=&quot;T:System.Net.CookieCollection&quot; /&gt; to the current instance.">現在のインスタンスに <see cref="T:System.Net.CookieCollection" /> の内容を追加します。</summary>
      <param name="cookies" vsli:raw="The &lt;see cref=&quot;T:System.Net.CookieCollection&quot; /&gt; to be added.">追加する <see cref="T:System.Net.CookieCollection" /> です。</param>
      <exception cref="T:System.ArgumentNullException" vsli:raw="&lt;paramref name=&quot;cookies&quot; /&gt; is &lt;see langword=&quot;null&quot; /&gt;.">
        <paramref name="cookies" /> が <see langword="null" />です。</exception>
    </member>
    <member name="M:System.Net.CookieCollection.Clear">
      <summary vsli:raw="Removes all elements from the &lt;see cref=&quot;T:System.Net.CookieCollection&quot; /&gt; object.">
        <see cref="T:System.Net.CookieCollection" /> オブジェクトからすべての要素を削除します。</summary>
    </member>
    <member name="M:System.Net.CookieCollection.Contains(System.Net.Cookie)">
      <summary vsli:raw="Determines whether the specified cookie is in the &lt;see cref=&quot;T:System.Net.CookieCollection&quot; /&gt;.">指定された Cookie が <see cref="T:System.Net.CookieCollection" /> 内にあるかどうかを判断します。</summary>
      <param name="cookie" vsli:raw="The cookie to locate in the &lt;see cref=&quot;T:System.Net.CookieCollection&quot; /&gt;.">
        <see cref="T:System.Net.CookieCollection" /> 内で検索する Cookie。</param>
      <returns vsli:raw="&lt;see langword=&quot;true&quot; /&gt; if the specified cookie is found in the &lt;see cref=&quot;T:System.Net.CookieCollection&quot; /&gt;; otherwise, &lt;see langword=&quot;false&quot; /&gt;.">指定された Cookie が <see cref="T:System.Net.CookieCollection" /> で見つかった場合は、<see langword="true" />。それ以外の場合は、<see langword="false" />。</returns>
    </member>
    <member name="M:System.Net.CookieCollection.CopyTo(System.Array,System.Int32)">
      <summary vsli:raw="Copies the elements of a &lt;see cref=&quot;T:System.Net.CookieCollection&quot; /&gt; to the specified array, starting at a particular index.">特定のインデックスを開始位置として、指定された配列に <see cref="T:System.Net.CookieCollection" /> の要素をコピーします。</summary>
      <param name="array" vsli:raw="The target array to which the &lt;see cref=&quot;T:System.Net.CookieCollection&quot; /&gt; will be copied.">
        <see cref="T:System.Net.CookieCollection" /> のコピー先のターゲット配列。</param>
      <param name="index" vsli:raw="The zero-based index in the target array where copying begins.">コピーの開始位置となる、ターゲット配列内の 0 から始まるインデックス。</param>
      <exception cref="T:System.ArgumentNullException" vsli:raw="&lt;paramref name=&quot;array&quot; /&gt; is &lt;see langword=&quot;null&quot; /&gt;.">
        <paramref name="array" /> が <see langword="null" />です。</exception>
      <exception cref="T:System.ArgumentOutOfRangeException" vsli:raw="&lt;paramref name=&quot;index&quot; /&gt; is less than zero.">
        <paramref name="index" /> が 0 未満です。</exception>
      <exception cref="T:System.ArgumentException" vsli:raw="&lt;paramref name=&quot;array&quot; /&gt; is multidimensional.  &#xA;  &#xA; -or-  &#xA;  &#xA; The number of elements in this &lt;see cref=&quot;T:System.Net.CookieCollection&quot; /&gt; is greater than the available space from &lt;paramref name=&quot;index&quot; /&gt; to the end of the destination &lt;paramref name=&quot;array&quot; /&gt;.">
        <paramref name="array" /> が多次元です。  
  
- または - 
この <see cref="T:System.Net.CookieCollection" /> の要素数が、<paramref name="index" /> から対象の <paramref name="array" /> の末尾までに格納できる数を超えています。</exception>
      <exception cref="T:System.InvalidCastException" vsli:raw="The elements in this &lt;see cref=&quot;T:System.Net.CookieCollection&quot; /&gt; cannot be cast automatically to the type of the destination &lt;paramref name=&quot;array&quot; /&gt;.">この <see cref="T:System.Net.CookieCollection" /> 内の要素を、対象の <paramref name="array" /> の型に自動的にキャストすることはできません。</exception>
    </member>
    <member name="M:System.Net.CookieCollection.CopyTo(System.Net.Cookie[],System.Int32)">
      <summary vsli:raw="Copies the elements of this &lt;see cref=&quot;T:System.Net.CookieCollection&quot; /&gt; to a &lt;see cref=&quot;T:System.Net.Cookie&quot; /&gt; array starting at the specified index of the target array.">コピー先の配列の指定したインデックスを開始位置として、<see cref="T:System.Net.CookieCollection" /> 配列に、この <see cref="T:System.Net.Cookie" /> の要素をコピーします。</summary>
      <param name="array" vsli:raw="The target &lt;see cref=&quot;T:System.Net.Cookie&quot; /&gt; array to which the &lt;see cref=&quot;T:System.Net.CookieCollection&quot; /&gt; will be copied.">
        <see cref="T:System.Net.Cookie" /> のコピー先の <see cref="T:System.Net.CookieCollection" /> 配列。</param>
      <param name="index" vsli:raw="The zero-based index in the target array where copying begins.">コピーの開始位置となる、ターゲット配列内の 0 から始まるインデックス。</param>
      <exception cref="T:System.ArgumentNullException" vsli:raw="&lt;paramref name=&quot;array&quot; /&gt; is &lt;see langword=&quot;null&quot; /&gt;.">
        <paramref name="array" /> が <see langword="null" />です。</exception>
      <exception cref="T:System.ArgumentOutOfRangeException" vsli:raw="&lt;paramref name=&quot;index&quot; /&gt; is less than zero.">
        <paramref name="index" /> が 0 未満です。</exception>
      <exception cref="T:System.ArgumentException" vsli:raw="&lt;paramref name=&quot;array&quot; /&gt; is multidimensional.  &#xA;  &#xA; -or-  &#xA;  &#xA; The number of elements in this &lt;see cref=&quot;T:System.Net.CookieCollection&quot; /&gt; is greater than the available space from &lt;paramref name=&quot;index&quot; /&gt; to the end of the destination &lt;paramref name=&quot;array&quot; /&gt;.">
        <paramref name="array" /> が多次元です。  
  
- または - 
この <see cref="T:System.Net.CookieCollection" /> の要素数が、<paramref name="index" /> から対象の <paramref name="array" /> の末尾までに格納できる数を超えています。</exception>
      <exception cref="T:System.InvalidCastException" vsli:raw="The elements in this &lt;see cref=&quot;T:System.Net.CookieCollection&quot; /&gt; cannot be cast automatically to the type of the destination &lt;paramref name=&quot;array&quot; /&gt;.">この <see cref="T:System.Net.CookieCollection" /> 内の要素を、対象の <paramref name="array" /> の型に自動的にキャストすることはできません。</exception>
    </member>
    <member name="M:System.Net.CookieCollection.GetEnumerator">
      <summary vsli:raw="Gets an enumerator that can iterate through a &lt;see cref=&quot;T:System.Net.CookieCollection&quot; /&gt;.">
        <see cref="T:System.Net.CookieCollection" /> を反復処理できる列挙子を取得します。</summary>
      <returns vsli:raw="An &lt;see cref=&quot;T:System.Collections.IEnumerator&quot; /&gt; for this collection.">このコレクションの <see cref="T:System.Collections.IEnumerator" />。</returns>
    </member>
    <member name="M:System.Net.CookieCollection.Remove(System.Net.Cookie)">
      <summary vsli:raw="Removes the specified cookie from the &lt;see cref=&quot;T:System.Net.CookieCollection&quot; /&gt;.">指定された Cookie を <see cref="T:System.Net.CookieCollection" /> から削除します。</summary>
      <param name="cookie" vsli:raw="The cookie to remove from the &lt;see cref=&quot;T:System.Net.CookieCollection&quot; /&gt;.">
        <see cref="T:System.Net.CookieCollection" /> から削除する Cookie。</param>
      <returns vsli:raw="&lt;see langword=&quot;true&quot; /&gt; if &lt;paramref name=&quot;cookie&quot; /&gt; was successfully removed from the &lt;see cref=&quot;T:System.Net.CookieCollection&quot; /&gt;; otherwise, &lt;see langword=&quot;false&quot; /&gt;. This method also returns &lt;see langword=&quot;false&quot; /&gt; if item is not found in the original collection.">
        <see langword="true" /> が <paramref name="cookie" /> から正常に削除された場合は <see cref="T:System.Net.CookieCollection" />。それ以外の場合は <see langword="false" />。 このメソッドは、項目が元のコレクションに見つからない場合にも <see langword="false" /> を返します。</returns>
    </member>
    <member name="M:System.Net.CookieCollection.System#Collections#Generic#IEnumerable{System#Net#Cookie}#GetEnumerator">
      <summary vsli:raw="Gets an enumerator that can iterate through the &lt;see cref=&quot;T:System.Net.CookieCollection&quot; /&gt;.">
        <see cref="T:System.Net.CookieCollection" /> を反復処理できる列挙子を取得します。</summary>
      <returns vsli:raw="An &lt;see cref=&quot;T:System.Collections.Generic.IEnumerator`1&quot; /&gt; for this collection.">このコレクションの <see cref="T:System.Collections.Generic.IEnumerator`1" />。</returns>
    </member>
    <member name="P:System.Net.CookieCollection.Count">
      <summary vsli:raw="Gets the number of cookies contained in a &lt;see cref=&quot;T:System.Net.CookieCollection&quot; /&gt;.">
        <see cref="T:System.Net.CookieCollection" /> に格納されているクッキーの数を取得します。</summary>
      <returns vsli:raw="The number of cookies contained in a &lt;see cref=&quot;T:System.Net.CookieCollection&quot; /&gt;.">
        <see cref="T:System.Net.CookieCollection" /> に格納されているクッキーの数。</returns>
    </member>
    <member name="P:System.Net.CookieCollection.IsReadOnly">
      <summary vsli:raw="Gets a value that indicates whether a &lt;see cref=&quot;T:System.Net.CookieCollection&quot; /&gt; is read-only.">
        <see cref="T:System.Net.CookieCollection" /> が読み取り専用かどうかを示す値を取得します。</summary>
      <returns vsli:raw="&lt;see langword=&quot;true&quot; /&gt; if this is a read-only &lt;see cref=&quot;T:System.Net.CookieCollection&quot; /&gt;; otherwise, &lt;see langword=&quot;false&quot; /&gt;. The default is &lt;see langword=&quot;true&quot; /&gt;.">読み取り専用 <see cref="T:System.Net.CookieCollection" /> の場合は <see langword="true" />。それ以外の場合は <see langword="false" />。 既定値は、<see langword="true" /> です。</returns>
    </member>
    <member name="P:System.Net.CookieCollection.IsSynchronized">
      <summary vsli:raw="Gets a value that indicates whether access to a &lt;see cref=&quot;T:System.Net.CookieCollection&quot; /&gt; is thread safe.">
        <see cref="T:System.Net.CookieCollection" /> へのアクセスがスレッド セーフかどうかを示す値を取得します。</summary>
      <returns vsli:raw="&lt;see langword=&quot;true&quot; /&gt; if access to the &lt;see cref=&quot;T:System.Net.CookieCollection&quot; /&gt; is thread safe; otherwise, &lt;see langword=&quot;false&quot; /&gt;. The default is &lt;see langword=&quot;false&quot; /&gt;.">
        <see cref="T:System.Net.CookieCollection" /> へのアクセスがスレッド セーフである場合は <see langword="true" />。それ以外の場合は <see langword="false" />。 既定値は、<see langword="false" /> です。</returns>
    </member>
    <member name="P:System.Net.CookieCollection.Item(System.Int32)">
      <summary vsli:raw="Gets the &lt;see cref=&quot;T:System.Net.Cookie&quot; /&gt; with a specific index from a &lt;see cref=&quot;T:System.Net.CookieCollection&quot; /&gt;.">
        <see cref="T:System.Net.Cookie" /> から特定のインデックスを持つ <see cref="T:System.Net.CookieCollection" /> を取得します。</summary>
      <param name="index" vsli:raw="The zero-based index of the &lt;see cref=&quot;T:System.Net.Cookie&quot; /&gt; to be found.">検索する <see cref="T:System.Net.Cookie" /> の 0 から始まるインデックス番号。</param>
      <exception cref="T:System.ArgumentOutOfRangeException" vsli:raw="&lt;paramref name=&quot;index&quot; /&gt; is less than 0 or &lt;paramref name=&quot;index&quot; /&gt; is greater than or equal to &lt;see cref=&quot;P:System.Net.CookieCollection.Count&quot; /&gt;.">
        <paramref name="index" /> が 0 未満か、<paramref name="index" /> が <see cref="P:System.Net.CookieCollection.Count" /> 以上です。</exception>
      <returns vsli:raw="A &lt;see cref=&quot;T:System.Net.Cookie&quot; /&gt; with a specific index from a &lt;see cref=&quot;T:System.Net.CookieCollection&quot; /&gt;.">
        <see cref="T:System.Net.Cookie" /> の特定のインデックスを持つ <see cref="T:System.Net.CookieCollection" />。</returns>
    </member>
    <member name="P:System.Net.CookieCollection.Item(System.String)">
      <summary vsli:raw="Gets the &lt;see cref=&quot;T:System.Net.Cookie&quot; /&gt; with a specific name from a &lt;see cref=&quot;T:System.Net.CookieCollection&quot; /&gt;.">
        <see cref="T:System.Net.Cookie" /> から特定の名前の <see cref="T:System.Net.CookieCollection" /> を取得します。</summary>
      <param name="name" vsli:raw="The name of the &lt;see cref=&quot;T:System.Net.Cookie&quot; /&gt; to be found.">検索される <see cref="T:System.Net.Cookie" /> の名前。</param>
      <exception cref="T:System.ArgumentNullException" vsli:raw="&lt;paramref name=&quot;name&quot; /&gt; is &lt;see langword=&quot;null&quot; /&gt;.">
        <paramref name="name" /> が <see langword="null" />です。</exception>
      <returns vsli:raw="The &lt;see cref=&quot;T:System.Net.Cookie&quot; /&gt; with a specific name from a &lt;see cref=&quot;T:System.Net.CookieCollection&quot; /&gt;.">
        <see cref="T:System.Net.Cookie" /> の特定の名前の <see cref="T:System.Net.CookieCollection" />。</returns>
    </member>
    <member name="P:System.Net.CookieCollection.SyncRoot">
      <summary vsli:raw="Gets an object to synchronize access to the &lt;see cref=&quot;T:System.Net.CookieCollection&quot; /&gt;.">
        <see cref="T:System.Net.CookieCollection" /> へのアクセスを同期するためのオブジェクトを取得します。</summary>
      <returns vsli:raw="An object to synchronize access to the &lt;see cref=&quot;T:System.Net.CookieCollection&quot; /&gt;.">
        <see cref="T:System.Net.CookieCollection" /> へのアクセスを同期するためのオブジェクト。</returns>
    </member>
    <member name="T:System.Net.CookieContainer">
      <summary vsli:raw="Provides a container for a collection of &lt;see cref=&quot;T:System.Net.CookieCollection&quot; /&gt; objects.">
        <see cref="T:System.Net.CookieCollection" /> オブジェクトのコレクション用のコンテナーを提供します。</summary>
    </member>
    <member name="F:System.Net.CookieContainer.DefaultCookieLengthLimit">
      <summary vsli:raw="Represents the default maximum size, in bytes, of the &lt;see cref=&quot;T:System.Net.Cookie&quot; /&gt; instances that the &lt;see cref=&quot;T:System.Net.CookieContainer&quot; /&gt; can hold. This field is constant.">
        <see cref="T:System.Net.Cookie" /> が保持できる <see cref="T:System.Net.CookieContainer" /> インスタンスの既定の最大サイズをバイト単位で表します。 このフィールドは定数です。</summary>
    </member>
    <member name="F:System.Net.CookieContainer.DefaultCookieLimit">
      <summary vsli:raw="Represents the default maximum number of &lt;see cref=&quot;T:System.Net.Cookie&quot; /&gt; instances that the &lt;see cref=&quot;T:System.Net.CookieContainer&quot; /&gt; can hold. This field is constant.">
        <see cref="T:System.Net.Cookie" /> が保持できる <see cref="T:System.Net.CookieContainer" /> インスタンスの既定の最大数を表します。 このフィールドは定数です。</summary>
    </member>
    <member name="F:System.Net.CookieContainer.DefaultPerDomainCookieLimit">
      <summary vsli:raw="Represents the default maximum number of &lt;see cref=&quot;T:System.Net.Cookie&quot; /&gt; instances that the &lt;see cref=&quot;T:System.Net.CookieContainer&quot; /&gt; can reference per domain. This field is constant.">
        <see cref="T:System.Net.Cookie" /> がドメインごとに参照できる <see cref="T:System.Net.CookieContainer" /> インスタンスの既定の最大数を表します。 このフィールドは定数です。</summary>
    </member>
    <member name="M:System.Net.CookieContainer.#ctor">
      <summary vsli:raw="Initializes a new instance of the &lt;see cref=&quot;T:System.Net.CookieContainer&quot; /&gt; class.">
        <see cref="T:System.Net.CookieContainer" /> クラスの新しいインスタンスを初期化します。</summary>
    </member>
    <member name="M:System.Net.CookieContainer.#ctor(System.Int32)">
      <summary vsli:raw="Initializes a new instance of the &lt;see cref=&quot;T:System.Net.CookieContainer&quot; /&gt; class with a specified value for the number of &lt;see cref=&quot;T:System.Net.Cookie&quot; /&gt; instances that the container can hold.">コンテナーが保持できる <see cref="T:System.Net.CookieContainer" /> インスタンスの数を指定して、<see cref="T:System.Net.Cookie" /> クラスの新しいインスタンスを初期化します。</summary>
      <param name="capacity" vsli:raw="The number of &lt;see cref=&quot;T:System.Net.Cookie&quot; /&gt; instances that the &lt;see cref=&quot;T:System.Net.CookieContainer&quot; /&gt; can hold.">
        <see cref="T:System.Net.Cookie" /> が保持できる <see cref="T:System.Net.CookieContainer" /> インスタンス数。</param>
      <exception cref="T:System.ArgumentException" vsli:raw="&lt;paramref name=&quot;capacity&quot; /&gt; is less than or equal to zero.">
        <paramref name="capacity" /> が 0 以下です。</exception>
    </member>
    <member name="M:System.Net.CookieContainer.#ctor(System.Int32,System.Int32,System.Int32)">
      <summary vsli:raw="Initializes a new instance of the &lt;see cref=&quot;T:System.Net.CookieContainer&quot; /&gt; class with specific properties.">
        <see cref="T:System.Net.CookieContainer" /> クラスの新しいインスタンスを特定のプロパティを使用して初期化します。</summary>
      <param name="capacity" vsli:raw="The number of &lt;see cref=&quot;T:System.Net.Cookie&quot; /&gt; instances that the &lt;see cref=&quot;T:System.Net.CookieContainer&quot; /&gt; can hold.">
        <see cref="T:System.Net.Cookie" /> が保持できる <see cref="T:System.Net.CookieContainer" /> インスタンス数。</param>
      <param name="perDomainCapacity" vsli:raw="The number of &lt;see cref=&quot;T:System.Net.Cookie&quot; /&gt; instances per domain.">ドメインごとの <see cref="T:System.Net.Cookie" /> インスタンス数。</param>
      <param name="maxCookieSize" vsli:raw="The maximum size in bytes for any single &lt;see cref=&quot;T:System.Net.Cookie&quot; /&gt; in a &lt;see cref=&quot;T:System.Net.CookieContainer&quot; /&gt;.">
        <see cref="T:System.Net.Cookie" /> 内のすべての単一の <see cref="T:System.Net.CookieContainer" /> の最大サイズ (バイト単位)。</param>
      <exception cref="T:System.ArgumentOutOfRangeException" vsli:raw="&lt;paramref name=&quot;perDomainCapacity&quot; /&gt; is not equal to &lt;see cref=&quot;F:System.Int32.MaxValue&quot;&gt;Int32.MaxValue&lt;/see&gt;.  &#xA;  &#xA; and  &#xA;  &#xA; &lt;paramref name=&quot;(perDomainCapacity&quot; /&gt; is less than or equal to zero or &lt;paramref name=&quot;perDomainCapacity&quot; /&gt; is greater than &lt;paramref name=&quot;capacity)&quot; /&gt;.">
        <paramref name="perDomainCapacity" /> と <see cref="F:System.Int32.MaxValue" /> が等しくありません。  
  
および 
 (<paramref name="(perDomainCapacity" /> が 0 以下か、<paramref name="perDomainCapacity" /> が <paramref name="capacity)" /> を超えています。)</exception>
      <exception cref="T:System.ArgumentException" vsli:raw="&lt;paramref name=&quot;maxCookieSize&quot; /&gt; is less than or equal to zero.">
        <paramref name="maxCookieSize" /> が 0 以下です。</exception>
    </member>
    <member name="M:System.Net.CookieContainer.Add(System.Net.Cookie)">
      <summary vsli:raw="Adds a &lt;see cref=&quot;T:System.Net.Cookie&quot; /&gt; to a &lt;see cref=&quot;T:System.Net.CookieContainer&quot; /&gt;. This method uses the domain from the &lt;see cref=&quot;T:System.Net.Cookie&quot; /&gt; to determine which domain collection to associate the &lt;see cref=&quot;T:System.Net.Cookie&quot; /&gt; with.">
        <see cref="T:System.Net.Cookie" /> を <see cref="T:System.Net.CookieContainer" /> に追加します。 このメソッドは、<see cref="T:System.Net.Cookie" /> のドメインを使用して、<see cref="T:System.Net.Cookie" /> に関連付けるドメイン コレクションを決定します。</summary>
      <param name="cookie" vsli:raw="The &lt;see cref=&quot;T:System.Net.Cookie&quot; /&gt; to be added to the &lt;see cref=&quot;T:System.Net.CookieContainer&quot; /&gt;.">
        <see cref="T:System.Net.Cookie" /> に追加される <see cref="T:System.Net.CookieContainer" />。</param>
      <exception cref="T:System.ArgumentNullException" vsli:raw="&lt;paramref name=&quot;cookie&quot; /&gt; is &lt;see langword=&quot;null&quot; /&gt;.">
        <paramref name="cookie" /> が <see langword="null" />です。</exception>
      <exception cref="T:System.ArgumentException" vsli:raw="The domain for &lt;paramref name=&quot;cookie&quot; /&gt; is &lt;see langword=&quot;null&quot; /&gt; or the empty string (&quot;&quot;).">
        <paramref name="cookie" /> のドメインが <see langword="null" /> または空の文字列 ("") です。</exception>
      <exception cref="T:System.Net.CookieException" vsli:raw="&lt;paramref name=&quot;cookie&quot; /&gt; is larger than &lt;paramref name=&quot;maxCookieSize&quot; /&gt;.  &#xA;  &#xA; -or-  &#xA;  &#xA; the domain for &lt;paramref name=&quot;cookie&quot; /&gt; is not a valid URI.">
        <paramref name="cookie" /> が <paramref name="maxCookieSize" /> を超えています。  
  
- または - 
<paramref name="cookie" /> のドメインが有効な URI ではありません。</exception>
    </member>
    <member name="M:System.Net.CookieContainer.Add(System.Net.CookieCollection)">
      <summary vsli:raw="Adds the contents of a &lt;see cref=&quot;T:System.Net.CookieCollection&quot; /&gt; to the &lt;see cref=&quot;T:System.Net.CookieContainer&quot; /&gt;.">
        <see cref="T:System.Net.CookieCollection" /> に <see cref="T:System.Net.CookieContainer" /> の内容を追加します。</summary>
      <param name="cookies" vsli:raw="The &lt;see cref=&quot;T:System.Net.CookieCollection&quot; /&gt; to be added to the &lt;see cref=&quot;T:System.Net.CookieContainer&quot; /&gt;.">
        <see cref="T:System.Net.CookieCollection" /> に追加される <see cref="T:System.Net.CookieContainer" />。</param>
      <exception cref="T:System.ArgumentNullException" vsli:raw="&lt;paramref name=&quot;cookies&quot; /&gt; is &lt;see langword=&quot;null&quot; /&gt;.">
        <paramref name="cookies" /> が <see langword="null" />です。</exception>
    </member>
    <member name="M:System.Net.CookieContainer.Add(System.Uri,System.Net.Cookie)">
      <summary vsli:raw="Adds a &lt;see cref=&quot;T:System.Net.Cookie&quot; /&gt; to the &lt;see cref=&quot;T:System.Net.CookieContainer&quot; /&gt; for a particular URI.">
        <see cref="T:System.Net.Cookie" /> を特定の URI の <see cref="T:System.Net.CookieContainer" /> に追加します。</summary>
      <param name="uri" vsli:raw="The URI of the &lt;see cref=&quot;T:System.Net.Cookie&quot; /&gt; to be added to the &lt;see cref=&quot;T:System.Net.CookieContainer&quot; /&gt;.">
        <see cref="T:System.Net.Cookie" /> に追加される <see cref="T:System.Net.CookieContainer" /> の URI。</param>
      <param name="cookie" vsli:raw="The &lt;see cref=&quot;T:System.Net.Cookie&quot; /&gt; to be added to the &lt;see cref=&quot;T:System.Net.CookieContainer&quot; /&gt;.">
        <see cref="T:System.Net.Cookie" /> に追加される <see cref="T:System.Net.CookieContainer" />。</param>
      <exception cref="T:System.ArgumentNullException" vsli:raw="&lt;paramref name=&quot;uri&quot; /&gt; is &lt;see langword=&quot;null&quot; /&gt; or &lt;paramref name=&quot;cookie&quot; /&gt; is &lt;see langword=&quot;null&quot; /&gt;.">
        <paramref name="uri" /> が <see langword="null" /> または <paramref name="cookie" /> が <see langword="null" /> です。</exception>
      <exception cref="T:System.Net.CookieException" vsli:raw="&lt;paramref name=&quot;cookie&quot; /&gt; is larger than &lt;paramref name=&quot;maxCookieSize&quot; /&gt;.  &#xA;  &#xA; -or-  &#xA;  &#xA; The domain for &lt;paramref name=&quot;cookie&quot; /&gt; is not a valid URI.">
        <paramref name="cookie" /> が <paramref name="maxCookieSize" /> を超えています。  
  
- または - 
<paramref name="cookie" /> のドメインが有効な URI ではありません。</exception>
    </member>
    <member name="M:System.Net.CookieContainer.Add(System.Uri,System.Net.CookieCollection)">
      <summary vsli:raw="Adds the contents of a &lt;see cref=&quot;T:System.Net.CookieCollection&quot; /&gt; to the &lt;see cref=&quot;T:System.Net.CookieContainer&quot; /&gt; for a particular URI.">
        <see cref="T:System.Net.CookieCollection" /> の内容を特定の URI の <see cref="T:System.Net.CookieContainer" /> に追加します。</summary>
      <param name="uri" vsli:raw="The URI of the &lt;see cref=&quot;T:System.Net.CookieCollection&quot; /&gt; to be added to the &lt;see cref=&quot;T:System.Net.CookieContainer&quot; /&gt;.">
        <see cref="T:System.Net.CookieCollection" /> に追加される <see cref="T:System.Net.CookieContainer" /> の URI。</param>
      <param name="cookies" vsli:raw="The &lt;see cref=&quot;T:System.Net.CookieCollection&quot; /&gt; to be added to the &lt;see cref=&quot;T:System.Net.CookieContainer&quot; /&gt;.">
        <see cref="T:System.Net.CookieCollection" /> に追加される <see cref="T:System.Net.CookieContainer" />。</param>
      <exception cref="T:System.ArgumentNullException" vsli:raw="&lt;paramref name=&quot;cookies&quot; /&gt; is &lt;see langword=&quot;null&quot; /&gt;.">
        <paramref name="cookies" /> が <see langword="null" />です。</exception>
      <exception cref="T:System.ArgumentException" vsli:raw="The domain for one of the cookies in &lt;paramref name=&quot;cookies&quot; /&gt; is &lt;see langword=&quot;null&quot; /&gt;.">
        <paramref name="cookies" /> 内のいずれかのクッキーのドメインが <see langword="null" /> です。</exception>
      <exception cref="T:System.Net.CookieException" vsli:raw="One of the cookies in &lt;paramref name=&quot;cookies&quot; /&gt; contains an invalid domain.">
        <paramref name="cookies" /> 内のいずれかのクッキーが、無効なドメインを含んでいます。</exception>
    </member>
    <member name="M:System.Net.CookieContainer.GetCookieHeader(System.Uri)">
      <summary vsli:raw="Gets the HTTP cookie header that contains the HTTP cookies that represent the &lt;see cref=&quot;T:System.Net.Cookie&quot; /&gt; instances that are associated with a specific URI.">特定の URI に関連付けられている <see cref="T:System.Net.Cookie" /> インスタンスを表す HTTP クッキーを格納する HTTP クッキー ヘッダーを取得します。</summary>
      <param name="uri" vsli:raw="The URI of the &lt;see cref=&quot;T:System.Net.Cookie&quot; /&gt; instances desired.">必要な <see cref="T:System.Net.Cookie" /> インスタンスの URI。</param>
      <exception cref="T:System.ArgumentNullException" vsli:raw="&lt;paramref name=&quot;uri&quot; /&gt; is &lt;see langword=&quot;null&quot; /&gt;.">
        <paramref name="uri" /> が <see langword="null" />です。</exception>
      <returns vsli:raw="An HTTP cookie header, with strings representing &lt;see cref=&quot;T:System.Net.Cookie&quot; /&gt; instances delimited by semicolons.">セミコロンで区切られた <see cref="T:System.Net.Cookie" /> インスタンスを表す文字列を含む HTTP クッキー ヘッダー。</returns>
    </member>
    <member name="M:System.Net.CookieContainer.GetCookies(System.Uri)">
      <summary vsli:raw="Gets a &lt;see cref=&quot;T:System.Net.CookieCollection&quot; /&gt; that contains the &lt;see cref=&quot;T:System.Net.Cookie&quot; /&gt; instances that are associated with a specific URI.">特定の URI に関連付けられている <see cref="T:System.Net.CookieCollection" /> インスタンスを格納する <see cref="T:System.Net.Cookie" /> を取得します。</summary>
      <param name="uri" vsli:raw="The URI of the &lt;see cref=&quot;T:System.Net.Cookie&quot; /&gt; instances desired.">必要な <see cref="T:System.Net.Cookie" /> インスタンスの URI。</param>
      <exception cref="T:System.ArgumentNullException" vsli:raw="&lt;paramref name=&quot;uri&quot; /&gt; is &lt;see langword=&quot;null&quot; /&gt;.">
        <paramref name="uri" /> が <see langword="null" />です。</exception>
      <returns vsli:raw="A &lt;see cref=&quot;T:System.Net.CookieCollection&quot; /&gt; that contains the &lt;see cref=&quot;T:System.Net.Cookie&quot; /&gt; instances that are associated with a specific URI.">特定の URI に関連付けられている <see cref="T:System.Net.CookieCollection" /> インスタンスを格納する <see cref="T:System.Net.Cookie" />。</returns>
    </member>
    <member name="M:System.Net.CookieContainer.SetCookies(System.Uri,System.String)">
      <summary vsli:raw="Adds &lt;see cref=&quot;T:System.Net.Cookie&quot; /&gt; instances for one or more cookies from an HTTP cookie header to the &lt;see cref=&quot;T:System.Net.CookieContainer&quot; /&gt; for a specific URI.">HTTP クッキー ヘッダーの 1 つ以上のクッキーの <see cref="T:System.Net.Cookie" /> インスタンスを特定の URI の <see cref="T:System.Net.CookieContainer" /> に追加します。</summary>
      <param name="uri" vsli:raw="The URI of the &lt;see cref=&quot;T:System.Net.CookieCollection&quot; /&gt;.">
        <see cref="T:System.Net.CookieCollection" /> の URI。</param>
      <param name="cookieHeader" vsli:raw="The contents of an HTTP set-cookie header as returned by a HTTP server, with &lt;see cref=&quot;T:System.Net.Cookie&quot; /&gt; instances delimited by commas.">コンマで区切られた <see cref="T:System.Net.Cookie" /> インスタンスを含む、HTTP サーバーで返された HTTP set-cookie ヘッダーの内容。</param>
      <exception cref="T:System.ArgumentNullException" vsli:raw="&lt;paramref name=&quot;uri&quot; /&gt; or &lt;paramref name=&quot;cookieHeader&quot; /&gt; is &lt;see langword=&quot;null&quot; /&gt;.">
        <paramref name="uri" /> または <paramref name="cookieHeader" /> が <see langword="null" /> です。</exception>
      <exception cref="T:System.Net.CookieException" vsli:raw="One of the cookies is invalid.  &#xA;  &#xA; -or-  &#xA;  &#xA; An error occurred while adding one of the cookies to the container.">いずれかのクッキーが無効です。  
  
 - または -  
  
 コンテナーにいずれかのクッキーを追加するときにエラーが発生しました。</exception>
    </member>
    <member name="P:System.Net.CookieContainer.Capacity">
      <summary vsli:raw="Gets or sets the number of &lt;see cref=&quot;T:System.Net.Cookie&quot; /&gt; instances that a &lt;see cref=&quot;T:System.Net.CookieContainer&quot; /&gt; can hold.">
        <see cref="T:System.Net.CookieContainer" /> で保持できる <see cref="T:System.Net.Cookie" /> インスタンス数を取得または設定します。</summary>
      <exception cref="T:System.ArgumentOutOfRangeException" vsli:raw="&lt;paramref name=&quot;Capacity&quot; /&gt; is less than or equal to zero or (value is less than &lt;see cref=&quot;P:System.Net.CookieContainer.PerDomainCapacity&quot; /&gt; and &lt;see cref=&quot;P:System.Net.CookieContainer.PerDomainCapacity&quot; /&gt; is not equal to &lt;see cref=&quot;F:System.Int32.MaxValue&quot;&gt;Int32.MaxValue&lt;/see&gt;).">
        <paramref name="Capacity" /> が 0 以下または値が <see cref="P:System.Net.CookieContainer.PerDomainCapacity" /> 未満で、<see cref="P:System.Net.CookieContainer.PerDomainCapacity" /> が <see cref="F:System.Int32.MaxValue" /> に等しくない場合です。</exception>
      <returns vsli:raw="The number of &lt;see cref=&quot;T:System.Net.Cookie&quot; /&gt; instances that a &lt;see cref=&quot;T:System.Net.CookieContainer&quot; /&gt; can hold. This is a hard limit and cannot be exceeded by adding a &lt;see cref=&quot;T:System.Net.Cookie&quot; /&gt;.">
        <see cref="T:System.Net.Cookie" /> が保持できる <see cref="T:System.Net.CookieContainer" /> インスタンス数。 これは、ハード リミットであり、<see cref="T:System.Net.Cookie" /> を追加して超過させることはできません。</returns>
    </member>
    <member name="P:System.Net.CookieContainer.Count">
      <summary vsli:raw="Gets the number of &lt;see cref=&quot;T:System.Net.Cookie&quot; /&gt; instances that a &lt;see cref=&quot;T:System.Net.CookieContainer&quot; /&gt; currently holds.">
        <see cref="T:System.Net.Cookie" /> が現在保持している <see cref="T:System.Net.CookieContainer" /> インスタンス数を取得します。</summary>
      <returns vsli:raw="The number of &lt;see cref=&quot;T:System.Net.Cookie&quot; /&gt; instances that a &lt;see cref=&quot;T:System.Net.CookieContainer&quot; /&gt; currently holds. This is the total of &lt;see cref=&quot;T:System.Net.Cookie&quot; /&gt; instances in all domains.">
        <see cref="T:System.Net.Cookie" /> が現在保持している<see cref="T:System.Net.CookieContainer" /> インスタンス数。 これは、すべてのドメイン内の <see cref="T:System.Net.Cookie" /> インスタンスの合計数を示します。</returns>
    </member>
    <member name="P:System.Net.CookieContainer.MaxCookieSize">
      <summary vsli:raw="Represents the maximum allowed length of a &lt;see cref=&quot;T:System.Net.Cookie&quot; /&gt;.">
        <see cref="T:System.Net.Cookie" /> の許容最大長を表します。</summary>
      <exception cref="T:System.ArgumentOutOfRangeException" vsli:raw="&lt;paramref name=&quot;MaxCookieSize&quot; /&gt; is less than or equal to zero.">
        <paramref name="MaxCookieSize" /> が 0 以下です。</exception>
      <returns vsli:raw="The maximum allowed length, in bytes, of a &lt;see cref=&quot;T:System.Net.Cookie&quot; /&gt;.">
        <see cref="T:System.Net.Cookie" /> の許容最大長 (バイト単位)。</returns>
    </member>
    <member name="P:System.Net.CookieContainer.PerDomainCapacity">
      <summary vsli:raw="Gets or sets the number of &lt;see cref=&quot;T:System.Net.Cookie&quot; /&gt; instances that a &lt;see cref=&quot;T:System.Net.CookieContainer&quot; /&gt; can hold per domain.">
        <see cref="T:System.Net.CookieContainer" /> でドメインごとに格納できる <see cref="T:System.Net.Cookie" /> インスタンスの数を取得または設定します。</summary>
      <exception cref="T:System.ArgumentOutOfRangeException" vsli:raw="&lt;paramref name=&quot;PerDomainCapacity&quot; /&gt; is less than or equal to zero.  &#xA;  &#xA; -or-  &#xA;  &#xA; &lt;paramref name=&quot;(PerDomainCapacity&quot; /&gt; is greater than the maximum allowable number of cookies instances, 300, and is not equal to &lt;see cref=&quot;F:System.Int32.MaxValue&quot;&gt;Int32.MaxValue&lt;/see&gt;).">
        <paramref name="PerDomainCapacity" /> が 0 以下です。  
  
- または - 
 (<paramref name="(PerDomainCapacity" /> が、最大許容クッキー インスタンス数の 300 を超えており、<see cref="F:System.Int32.MaxValue" /> に等しくありません。)</exception>
      <returns vsli:raw="The number of &lt;see cref=&quot;T:System.Net.Cookie&quot; /&gt; instances that are allowed per domain.">ドメインごとに許可されている <see cref="T:System.Net.Cookie" /> インスタンス数。</returns>
    </member>
    <member name="T:System.Net.CookieException">
      <summary vsli:raw="The exception that is thrown when an error is made adding a &lt;see cref=&quot;T:System.Net.Cookie&quot; /&gt; to a &lt;see cref=&quot;T:System.Net.CookieContainer&quot; /&gt;.">
        <see cref="T:System.Net.Cookie" /> の <see cref="T:System.Net.CookieContainer" /> への追加中にエラーが発生した場合にスローされる例外。</summary>
    </member>
    <member name="M:System.Net.CookieException.#ctor">
      <summary vsli:raw="Initializes a new instance of the &lt;see cref=&quot;T:System.Net.CookieException&quot; /&gt; class.">
        <see cref="T:System.Net.CookieException" /> クラスの新しいインスタンスを初期化します。</summary>
    </member>
    <member name="M:System.Net.CookieException.#ctor(System.Runtime.Serialization.SerializationInfo,System.Runtime.Serialization.StreamingContext)">
      <summary vsli:raw="Initializes a new instance of the &lt;see cref=&quot;T:System.Net.CookieException&quot; /&gt; class with specific values of &lt;paramref name=&quot;serializationInfo&quot; /&gt; and &lt;paramref name=&quot;streamingContext&quot; /&gt;.">
        <paramref name="serializationInfo" /> と <paramref name="streamingContext" /> の値を指定して、<see cref="T:System.Net.CookieException" /> クラスの新しいインスタンスを初期化します。</summary>
      <param name="serializationInfo" vsli:raw="The &lt;see cref=&quot;T:System.Runtime.Serialization.SerializationInfo&quot; /&gt; to be used.">使用する <see cref="T:System.Runtime.Serialization.SerializationInfo" />。</param>
      <param name="streamingContext" vsli:raw="The &lt;see cref=&quot;T:System.Runtime.Serialization.StreamingContext&quot; /&gt; to be used.">使用する <see cref="T:System.Runtime.Serialization.StreamingContext" />。</param>
    </member>
    <member name="M:System.Net.CookieException.GetObjectData(System.Runtime.Serialization.SerializationInfo,System.Runtime.Serialization.StreamingContext)">
      <summary vsli:raw="Populates a &lt;see cref=&quot;T:System.Runtime.Serialization.SerializationInfo&quot; /&gt; instance with the data needed to serialize the &lt;see cref=&quot;T:System.Net.CookieException&quot; /&gt;.">
        <see cref="T:System.Runtime.Serialization.SerializationInfo" /> インスタンスに、<see cref="T:System.Net.CookieException" /> をシリアル化するために必要なデータを設定します。</summary>
      <param name="serializationInfo" vsli:raw="The object that holds the serialized object data. The &lt;see cref=&quot;T:System.Runtime.Serialization.SerializationInfo&quot; /&gt; to populate with data.">シリアル化されたオブジェクト データを保持するオブジェクト。 データの読み込み先となる <see cref="T:System.Runtime.Serialization.SerializationInfo" />。</param>
      <param name="streamingContext" vsli:raw="The contextual information about the source or destination. A &lt;see cref=&quot;T:System.Runtime.Serialization.StreamingContext&quot; /&gt; that specifies the destination for this serialization.">転送元または転送先に関するコンテキスト情報。 このシリアル化の転送先を指定する <see cref="T:System.Runtime.Serialization.StreamingContext" />。</param>
    </member>
    <member name="M:System.Net.CookieException.System#Runtime#Serialization#ISerializable#GetObjectData(System.Runtime.Serialization.SerializationInfo,System.Runtime.Serialization.StreamingContext)">
      <summary vsli:raw="Populates a &lt;see cref=&quot;T:System.Runtime.Serialization.SerializationInfo&quot; /&gt; instance with the data needed to serialize the &lt;see cref=&quot;T:System.Net.CookieException&quot; /&gt;.">
        <see cref="T:System.Runtime.Serialization.SerializationInfo" /> インスタンスに、<see cref="T:System.Net.CookieException" /> をシリアル化するために必要なデータを設定します。</summary>
      <param name="serializationInfo" vsli:raw="The &lt;see cref=&quot;T:System.Runtime.Serialization.SerializationInfo&quot; /&gt; to be used.">使用する <see cref="T:System.Runtime.Serialization.SerializationInfo" />。</param>
      <param name="streamingContext" vsli:raw="The &lt;see cref=&quot;T:System.Runtime.Serialization.StreamingContext&quot; /&gt; to be used.">使用する <see cref="T:System.Runtime.Serialization.StreamingContext" />。</param>
    </member>
    <member name="T:System.Net.CredentialCache">
      <summary vsli:raw="Provides storage for multiple credentials.">複数の資格情報のストレージを提供します。</summary>
    </member>
    <member name="M:System.Net.CredentialCache.#ctor">
      <summary vsli:raw="Creates a new instance of the &lt;see cref=&quot;T:System.Net.CredentialCache&quot; /&gt; class.">
        <see cref="T:System.Net.CredentialCache" /> クラスの新しいインスタンスを作成します。</summary>
    </member>
    <member name="M:System.Net.CredentialCache.Add(System.String,System.Int32,System.String,System.Net.NetworkCredential)">
      <summary vsli:raw="Adds a &lt;see cref=&quot;T:System.Net.NetworkCredential&quot; /&gt; instance for use with SMTP to the credential cache and associates it with a host computer, port, and authentication protocol. Credentials added using this method are valid for SMTP only. This method does not work for HTTP or FTP requests.">SMTP で使用する <see cref="T:System.Net.NetworkCredential" /> インスタンスを資格情報キャッシュに追加し、ホスト コンピューター、ポート、および認証プロトコルに関連付けます。 このメソッドを使用して追加される資格情報は、SMTP でのみ有効です。 このメソッドは、HTTP 要求および FTP 要求では動作しません。</summary>
      <param name="host" vsli:raw="A &lt;see cref=&quot;T:System.String&quot; /&gt; that identifies the host computer.">ホスト コンピューターを示す <see cref="T:System.String" />。</param>
      <param name="port" vsli:raw="A &lt;see cref=&quot;T:System.Int32&quot; /&gt; that specifies the port to connect to on &lt;paramref name=&quot;host&quot; /&gt;.">
        <paramref name="host" /> 上の接続先のポートを指定する <see cref="T:System.Int32" />。</param>
      <param name="authenticationType" vsli:raw="A &lt;see cref=&quot;T:System.String&quot; /&gt; that identifies the authentication scheme used when connecting to &lt;paramref name=&quot;host&quot; /&gt; using &lt;paramref name=&quot;cred&quot; /&gt;.">
        <paramref name="host" /> を使用して <paramref name="cred" /> に接続する場合に使用する認証方式を指定する <see cref="T:System.String" />。</param>
      <param name="credential" vsli:raw="The &lt;see cref=&quot;T:System.Net.NetworkCredential&quot; /&gt; to add to the credential cache.">資格情報キャッシュに追加する <see cref="T:System.Net.NetworkCredential" />。</param>
      <exception cref="T:System.ArgumentNullException" vsli:raw="&lt;paramref name=&quot;host&quot; /&gt; is &lt;see langword=&quot;null&quot; /&gt;.  &#xA;  &#xA; -or-  &#xA;  &#xA; &lt;paramref name=&quot;authType&quot; /&gt; is &lt;see langword=&quot;null&quot; /&gt;.">
        <paramref name="host" /> が <see langword="null" />です。  
  
- または - 
 <paramref name="authType" /> が <see langword="null" />です。</exception>
      <exception cref="T:System.ArgumentException" vsli:raw="&lt;paramref name=&quot;authType&quot; /&gt; not an accepted value.">
        <paramref name="authType" /> が使用できる値ではありません。</exception>
      <exception cref="T:System.ArgumentOutOfRangeException" vsli:raw="&lt;paramref name=&quot;port&quot; /&gt; is less than zero.">
        <paramref name="port" /> が 0 未満です。</exception>
    </member>
    <member name="M:System.Net.CredentialCache.Add(System.Uri,System.String,System.Net.NetworkCredential)">
      <summary vsli:raw="Adds a &lt;see cref=&quot;T:System.Net.NetworkCredential&quot; /&gt; instance to the credential cache for use with protocols other than SMTP and associates it with a Uniform Resource Identifier (URI) prefix and authentication protocol.">
        <see cref="T:System.Net.NetworkCredential" /> インスタンスを SMTP 以外のプロトコルで使用する資格情報キャッシュに追加し、URI (Uniform Resource Identifier) プリフィックスおよび認証プロトコルに関連付けます。</summary>
      <param name="uriPrefix" vsli:raw="A &lt;see cref=&quot;T:System.Uri&quot; /&gt; that specifies the URI prefix of the resources that the credential grants access to.">資格情報によってアクセスが許可されるリソースの URI プリフィックスを指定する <see cref="T:System.Uri" />。</param>
      <param name="authType" vsli:raw="The authentication scheme used by the resource named in &lt;paramref name=&quot;uriPrefix&quot; /&gt;.">
        <paramref name="uriPrefix" /> で指定されたリソースが使用する認証方式。</param>
      <param name="cred" vsli:raw="The &lt;see cref=&quot;T:System.Net.NetworkCredential&quot; /&gt; to add to the credential cache.">資格情報キャッシュに追加する <see cref="T:System.Net.NetworkCredential" />。</param>
      <exception cref="T:System.ArgumentNullException" vsli:raw="&lt;paramref name=&quot;uriPrefix&quot; /&gt; is &lt;see langword=&quot;null&quot; /&gt;.  &#xA;  &#xA; -or-  &#xA;  &#xA; &lt;paramref name=&quot;authType&quot; /&gt; is &lt;see langword=&quot;null&quot; /&gt;.">
        <paramref name="uriPrefix" /> が <see langword="null" />です。  
  
- または - 
 <paramref name="authType" /> が <see langword="null" />です。</exception>
      <exception cref="T:System.ArgumentException" vsli:raw="The same credentials are added more than once.">同じ資格情報が 2 回以上追加されました。</exception>
    </member>
    <member name="M:System.Net.CredentialCache.GetCredential(System.String,System.Int32,System.String)">
      <summary vsli:raw="Returns the &lt;see cref=&quot;T:System.Net.NetworkCredential&quot; /&gt; instance associated with the specified host, port, and authentication protocol.">指定したホスト、ポート、および認証プロトコルに関連付けられている <see cref="T:System.Net.NetworkCredential" /> インスタンスを返します。</summary>
      <param name="host" vsli:raw="A &lt;see cref=&quot;T:System.String&quot; /&gt; that identifies the host computer.">ホスト コンピューターを示す <see cref="T:System.String" />。</param>
      <param name="port" vsli:raw="A &lt;see cref=&quot;T:System.Int32&quot; /&gt; that specifies the port to connect to on &lt;paramref name=&quot;host&quot; /&gt;.">
        <paramref name="host" /> 上の接続先のポートを指定する <see cref="T:System.Int32" />。</param>
      <param name="authenticationType" vsli:raw="A &lt;see cref=&quot;T:System.String&quot; /&gt; that identifies the authentication scheme used when connecting to &lt;paramref name=&quot;host&quot; /&gt;.">
        <paramref name="host" /> に接続する場合に使用する認証方式を指定する <see cref="T:System.String" />。</param>
      <exception cref="T:System.ArgumentNullException" vsli:raw="&lt;paramref name=&quot;host&quot; /&gt; is &lt;see langword=&quot;null&quot; /&gt;.  &#xA;  &#xA; -or-  &#xA;  &#xA; &lt;paramref name=&quot;authType&quot; /&gt; is &lt;see langword=&quot;null&quot; /&gt;.">
        <paramref name="host" /> が <see langword="null" />です。  
  
- または - 
 <paramref name="authType" /> が <see langword="null" />です。</exception>
      <exception cref="T:System.ArgumentException" vsli:raw="&lt;paramref name=&quot;authType&quot; /&gt; not an accepted value.  &#xA;  &#xA; -or-  &#xA;  &#xA; &lt;paramref name=&quot;host&quot; /&gt; is equal to the empty string (&quot;&quot;).">
        <paramref name="authType" /> が使用できる値ではありません。  
  
- または - 
 <paramref name="host" /> が空の文字列 ("") です。</exception>
      <exception cref="T:System.ArgumentOutOfRangeException" vsli:raw="&lt;paramref name=&quot;port&quot; /&gt; is less than zero.">
        <paramref name="port" /> が 0 未満です。</exception>
      <returns vsli:raw="A &lt;see cref=&quot;T:System.Net.NetworkCredential&quot; /&gt; or, if there is no matching credential in the cache, &lt;see langword=&quot;null&quot; /&gt;.">
        <see cref="T:System.Net.NetworkCredential" />。または、キャッシュに一致する資格情報がない場合は<see langword="null" />。</returns>
    </member>
    <member name="M:System.Net.CredentialCache.GetCredential(System.Uri,System.String)">
      <summary vsli:raw="Returns the &lt;see cref=&quot;T:System.Net.NetworkCredential&quot; /&gt; instance associated with the specified Uniform Resource Identifier (URI) and authentication type.">指定した URI (Uniform Resource Identifier) と認証の種類に関連付けられた <see cref="T:System.Net.NetworkCredential" /> インスタンスを返します。</summary>
      <param name="uriPrefix" vsli:raw="A &lt;see cref=&quot;T:System.Uri&quot; /&gt; that specifies the URI prefix of the resources that the credential grants access to.">資格情報によってアクセスが許可されるリソースの URI プリフィックスを指定する <see cref="T:System.Uri" />。</param>
      <param name="authType" vsli:raw="The authentication scheme used by the resource named in &lt;paramref name=&quot;uriPrefix&quot; /&gt;.">
        <paramref name="uriPrefix" /> で指定されたリソースが使用する認証方式。</param>
      <exception cref="T:System.ArgumentNullException" vsli:raw="&lt;paramref name=&quot;uriPrefix&quot; /&gt; or &lt;paramref name=&quot;authType&quot; /&gt; is &lt;see langword=&quot;null&quot; /&gt;.">
        <paramref name="uriPrefix" /> または <paramref name="authType" /> が <see langword="null" /> です。</exception>
      <returns vsli:raw="A &lt;see cref=&quot;T:System.Net.NetworkCredential&quot; /&gt; or, if there is no matching credential in the cache, &lt;see langword=&quot;null&quot; /&gt;.">
        <see cref="T:System.Net.NetworkCredential" />。または、キャッシュに一致する資格情報がない場合は<see langword="null" />。</returns>
    </member>
    <member name="M:System.Net.CredentialCache.GetEnumerator">
      <summary vsli:raw="Returns an enumerator that can iterate through the &lt;see cref=&quot;T:System.Net.CredentialCache&quot; /&gt; instance.">
        <see cref="T:System.Net.CredentialCache" /> インスタンスを反復処理できる列挙子を返します。</summary>
      <returns vsli:raw="An &lt;see cref=&quot;T:System.Collections.IEnumerator&quot; /&gt; for the &lt;see cref=&quot;T:System.Net.CredentialCache&quot; /&gt;.">
        <see cref="T:System.Collections.IEnumerator" /> の <see cref="T:System.Net.CredentialCache" />。</returns>
    </member>
    <member name="M:System.Net.CredentialCache.Remove(System.String,System.Int32,System.String)">
      <summary vsli:raw="Deletes a &lt;see cref=&quot;T:System.Net.NetworkCredential&quot; /&gt; instance from the cache if it is associated with the specified host, port, and authentication protocol.">
        <see cref="T:System.Net.NetworkCredential" /> インスタンスが指定したホスト、ポート、および認証プロトコルに関連付けられている場合に、このインスタンスをキャッシュから削除します。</summary>
      <param name="host" vsli:raw="A &lt;see cref=&quot;T:System.String&quot; /&gt; that identifies the host computer.">ホスト コンピューターを示す <see cref="T:System.String" />。</param>
      <param name="port" vsli:raw="A &lt;see cref=&quot;T:System.Int32&quot; /&gt; that specifies the port to connect to on &lt;paramref name=&quot;host&quot; /&gt;.">
        <paramref name="host" /> 上の接続先のポートを指定する <see cref="T:System.Int32" />。</param>
      <param name="authenticationType" vsli:raw="A &lt;see cref=&quot;T:System.String&quot; /&gt; that identifies the authentication scheme used when connecting to &lt;paramref name=&quot;host&quot; /&gt;.">
        <paramref name="host" /> に接続する場合に使用する認証方式を指定する <see cref="T:System.String" />。</param>
    </member>
    <member name="M:System.Net.CredentialCache.Remove(System.Uri,System.String)">
      <summary vsli:raw="Deletes a &lt;see cref=&quot;T:System.Net.NetworkCredential&quot; /&gt; instance from the cache if it is associated with the specified Uniform Resource Identifier (URI) prefix and authentication protocol.">
        <see cref="T:System.Net.NetworkCredential" /> インスタンスが指定した URI (Uniform Resource Identifier) プレフィックスと認証プロトコルに関連付けられている場合に、このインスタンスをキャッシュから削除します。</summary>
      <param name="uriPrefix" vsli:raw="A &lt;see cref=&quot;T:System.Uri&quot; /&gt; that specifies the URI prefix of the resources that the credential is used for.">資格情報が使用されるリソースの URI プリフィックスを指定する <see cref="T:System.Uri" />。</param>
      <param name="authType" vsli:raw="The authentication scheme used by the host named in &lt;paramref name=&quot;uriPrefix&quot; /&gt;.">
        <paramref name="uriPrefix" /> で指定されたホストが使用する認証方式。</param>
    </member>
    <member name="P:System.Net.CredentialCache.DefaultCredentials">
      <summary vsli:raw="Gets the system credentials of the application.">アプリケーションのシステム資格情報を取得します。</summary>
      <returns vsli:raw="An &lt;see cref=&quot;T:System.Net.ICredentials&quot; /&gt; that represents the system credentials of the application.">アプリケーションのシステム資格情報を表す <see cref="T:System.Net.ICredentials" />。</returns>
    </member>
    <member name="P:System.Net.CredentialCache.DefaultNetworkCredentials">
      <summary vsli:raw="Gets the network credentials of the current security context.">現在のセキュリティ コンテキストのネットワーク資格情報を取得します。</summary>
      <returns vsli:raw="An &lt;see cref=&quot;T:System.Net.NetworkCredential&quot; /&gt; that represents the network credentials of the current user or application.">現在のユーザーまたはアプリケーションのネットワーク資格情報を表す <see cref="T:System.Net.NetworkCredential" />。</returns>
    </member>
    <member name="T:System.Net.DecompressionMethods">
      <summary vsli:raw="Represents the file compression and decompression encoding format to be used to compress the data received in response to an &lt;see cref=&quot;T:System.Net.HttpWebRequest&quot; /&gt;.">
        <see cref="T:System.Net.HttpWebRequest" /> への応答として受信したデータを圧縮するために使用される、ファイルの圧縮と圧縮解除のエンコーディング形式を表します。</summary>
    </member>
    <member name="F:System.Net.DecompressionMethods.All">
      <summary vsli:raw="Use all compression-decompression algorithms.">あらゆる圧縮/圧縮解除アルゴリズムを使用します。</summary>
    </member>
    <member name="F:System.Net.DecompressionMethods.Brotli">
      <summary vsli:raw="Use the Brotli compression-decompression algorithm.">Brotli 圧縮/圧縮解除アルゴリズムを使用します。</summary>
    </member>
    <member name="F:System.Net.DecompressionMethods.Deflate">
      <summary vsli:raw="Use the deflate compression-decompression algorithm.">デフレート圧縮/圧縮解除アルゴリズムを使用します。</summary>
    </member>
    <member name="F:System.Net.DecompressionMethods.GZip">
      <summary vsli:raw="Use the gZip compression-decompression algorithm.">gZip 圧縮/圧縮解除アルゴリズムを使用します。</summary>
    </member>
    <member name="F:System.Net.DecompressionMethods.None">
      <summary vsli:raw="Do not use compression.">圧縮は使用しないでください。</summary>
    </member>
    <member name="T:System.Net.DnsEndPoint">
      <summary vsli:raw="Represents a network endpoint as a host name or a string representation of an IP address and a port number.">ネットワーク エンドポイントを、ホスト名として、または IP アドレスとポート番号の文字列表記として表します。</summary>
    </member>
    <member name="M:System.Net.DnsEndPoint.#ctor(System.String,System.Int32)">
      <summary vsli:raw="Initializes a new instance of the &lt;see cref=&quot;T:System.Net.DnsEndPoint&quot; /&gt; class with the host name or string representation of an IP address and a port number.">
        <see cref="T:System.Net.DnsEndPoint" /> クラスの新しいインスタンスを、ホスト名か IP アドレスおよびポート番号の文字列表現で初期化します。</summary>
      <param name="host" vsli:raw="The host name or a string representation of the IP address.">ホスト名、または IP アドレスの文字列表現。</param>
      <param name="port" vsli:raw="The port number associated with the address, or 0 to specify any available port. &lt;paramref name=&quot;port&quot; /&gt; is in host order.">アドレスに関連付けられているポート番号。または、使用できる任意のポートを指定する場合は 0。 <paramref name="port" /> は、ホスト順です。</param>
      <exception cref="T:System.ArgumentException" vsli:raw="The &lt;paramref name=&quot;host&quot; /&gt; parameter contains an empty string.">
        <paramref name="host" /> パラメーターに空の文字列が含まれています。</exception>
      <exception cref="T:System.ArgumentNullException" vsli:raw="The &lt;paramref name=&quot;host&quot; /&gt; parameter is a &lt;see langword=&quot;null&quot; /&gt;.">
        <paramref name="host" /> パラメーターは <see langword="null" /> です。</exception>
      <exception cref="T:System.ArgumentOutOfRangeException" vsli:raw="&lt;paramref name=&quot;port&quot; /&gt; is less than &lt;see cref=&quot;F:System.Net.IPEndPoint.MinPort&quot; /&gt;.  &#xA;  &#xA; -or-  &#xA;  &#xA; &lt;paramref name=&quot;port&quot; /&gt; is greater than &lt;see cref=&quot;F:System.Net.IPEndPoint.MaxPort&quot; /&gt;.">
        <paramref name="port" /> は <see cref="F:System.Net.IPEndPoint.MinPort" /> より小さい値です。  
  
- または - 
 <paramref name="port" /> が <see cref="F:System.Net.IPEndPoint.MaxPort" /> より大きくなっています。</exception>
    </member>
    <member name="M:System.Net.DnsEndPoint.#ctor(System.String,System.Int32,System.Net.Sockets.AddressFamily)">
      <summary vsli:raw="Initializes a new instance of the &lt;see cref=&quot;T:System.Net.DnsEndPoint&quot; /&gt; class with the host name or string representation of an IP address, a port number, and an address family.">
        <see cref="T:System.Net.DnsEndPoint" /> クラスの新しいインスタンスをホスト名で、または IP アドレス、ポート番号、およびアドレス ファミリの文字列表現で初期化します。</summary>
      <param name="host" vsli:raw="The host name or a string representation of the IP address.">ホスト名、または IP アドレスの文字列表現。</param>
      <param name="port" vsli:raw="The port number associated with the address, or 0 to specify any available port. &lt;paramref name=&quot;port&quot; /&gt; is in host order.">アドレスに関連付けられているポート番号。または、使用できる任意のポートを指定する場合は 0。 <paramref name="port" /> は、ホスト順です。</param>
      <param name="addressFamily" vsli:raw="One of the &lt;see cref=&quot;T:System.Net.Sockets.AddressFamily&quot; /&gt; values.">
        <see cref="T:System.Net.Sockets.AddressFamily" /> 値のいずれか 1 つ。</param>
      <exception cref="T:System.ArgumentException" vsli:raw="The &lt;paramref name=&quot;host&quot; /&gt; parameter contains an empty string.  &#xA;  &#xA; -or-  &#xA;  &#xA; &lt;paramref name=&quot;addressFamily&quot; /&gt; is &lt;see cref=&quot;F:System.Net.Sockets.AddressFamily.Unknown&quot; /&gt;.">
        <paramref name="host" /> パラメーターに空の文字列が含まれています。  
  
- または - 
 <paramref name="addressFamily" /> が <see cref="F:System.Net.Sockets.AddressFamily.Unknown" />です。</exception>
      <exception cref="T:System.ArgumentNullException" vsli:raw="The &lt;paramref name=&quot;host&quot; /&gt; parameter is a &lt;see langword=&quot;null&quot; /&gt;.">
        <paramref name="host" /> パラメーターは <see langword="null" /> です。</exception>
      <exception cref="T:System.ArgumentOutOfRangeException" vsli:raw="&lt;paramref name=&quot;port&quot; /&gt; is less than &lt;see cref=&quot;F:System.Net.IPEndPoint.MinPort&quot; /&gt;.  &#xA;  &#xA; -or-  &#xA;  &#xA; &lt;paramref name=&quot;port&quot; /&gt; is greater than &lt;see cref=&quot;F:System.Net.IPEndPoint.MaxPort&quot; /&gt;.">
        <paramref name="port" /> は <see cref="F:System.Net.IPEndPoint.MinPort" /> より小さい値です。  
  
- または - 
 <paramref name="port" /> が <see cref="F:System.Net.IPEndPoint.MaxPort" /> より大きくなっています。</exception>
    </member>
    <member name="M:System.Net.DnsEndPoint.Equals(System.Object)">
      <summary vsli:raw="Compares two &lt;see cref=&quot;T:System.Net.DnsEndPoint&quot; /&gt; objects.">2 つの <see cref="T:System.Net.DnsEndPoint" /> オブジェクトを比較します。</summary>
      <param name="comparand" vsli:raw="A &lt;see cref=&quot;T:System.Net.DnsEndPoint&quot; /&gt; instance to compare to the current instance.">現在のインスタンスと比較する <see cref="T:System.Net.DnsEndPoint" /> インスタンス。</param>
      <returns vsli:raw="&lt;see langword=&quot;true&quot; /&gt; if the two &lt;see cref=&quot;T:System.Net.DnsEndPoint&quot; /&gt; instances are equal; otherwise, &lt;see langword=&quot;false&quot; /&gt;.">2 つの <see cref="T:System.Net.DnsEndPoint" /> インスタンスが等しい場合は <see langword="true" />。それ以外の場合は <see langword="false" />。</returns>
    </member>
    <member name="M:System.Net.DnsEndPoint.GetHashCode">
      <summary vsli:raw="Returns a hash value for a &lt;see cref=&quot;T:System.Net.DnsEndPoint&quot; /&gt;.">
        <see cref="T:System.Net.DnsEndPoint" /> のハッシュ値を返します。</summary>
      <returns vsli:raw="An integer hash value for the &lt;see cref=&quot;T:System.Net.DnsEndPoint&quot; /&gt;.">
        <see cref="T:System.Net.DnsEndPoint" /> の整数ハッシュ値。</returns>
    </member>
    <member name="M:System.Net.DnsEndPoint.ToString">
      <summary vsli:raw="Returns the host name or string representation of the IP address and port number of the &lt;see cref=&quot;T:System.Net.DnsEndPoint&quot; /&gt;.">
        <see cref="T:System.Net.DnsEndPoint" /> のホスト名、または IP アドレスおよびポート番号の文字列表現を返します。</summary>
      <returns vsli:raw="A string containing the address family, host name or IP address string, and the port number of the specified &lt;see cref=&quot;T:System.Net.DnsEndPoint&quot; /&gt;.">指定した <see cref="T:System.Net.DnsEndPoint" /> のアドレス ファミリ、ホスト名、または IP アドレス文字列と、ポート番号を含む文字列。</returns>
    </member>
    <member name="P:System.Net.DnsEndPoint.AddressFamily">
      <summary vsli:raw="Gets the Internet Protocol (IP) address family.">インターネット プロトコル (IP: Internet Protocol) アドレス ファミリを取得します。</summary>
      <returns vsli:raw="One of the &lt;see cref=&quot;T:System.Net.Sockets.AddressFamily&quot; /&gt; values.">
        <see cref="T:System.Net.Sockets.AddressFamily" /> 値のいずれか 1 つ。</returns>
    </member>
    <member name="P:System.Net.DnsEndPoint.Host">
      <summary vsli:raw="Gets the host name or string representation of the Internet Protocol (IP) address of the host.">ホスト名、またはホストのインターネット プロトコル (IP) アドレスの文字列表現を取得します。</summary>
      <returns vsli:raw="A host name or string representation of an IP address.">ホスト名、または IP アドレスの文字列表現。</returns>
    </member>
    <member name="P:System.Net.DnsEndPoint.Port">
      <summary vsli:raw="Gets the port number of the &lt;see cref=&quot;T:System.Net.DnsEndPoint&quot; /&gt;.">
        <see cref="T:System.Net.DnsEndPoint" /> のポート番号を取得します。</summary>
      <returns vsli:raw="An integer value in the range 0 to 0xffff indicating the port number of the &lt;see cref=&quot;T:System.Net.DnsEndPoint&quot; /&gt;.">
        <see cref="T:System.Net.DnsEndPoint" /> のポート番号を示す 0 ～ 0xffff の範囲の整数値。</returns>
    </member>
    <member name="T:System.Net.EndPoint">
      <summary vsli:raw="Identifies a network address. This is an &lt;see langword=&quot;abstract&quot; /&gt; class.">ネットワーク アドレスを識別します。 これは <see langword="abstract" /> クラスです。</summary>
    </member>
    <member name="M:System.Net.EndPoint.#ctor">
      <summary vsli:raw="Initializes a new instance of the &lt;see cref=&quot;T:System.Net.EndPoint&quot; /&gt; class.">
        <see cref="T:System.Net.EndPoint" /> クラスの新しいインスタンスを初期化します。</summary>
    </member>
    <member name="M:System.Net.EndPoint.Create(System.Net.SocketAddress)">
      <summary vsli:raw="Creates an &lt;see cref=&quot;T:System.Net.EndPoint&quot; /&gt; instance from a &lt;see cref=&quot;T:System.Net.SocketAddress&quot; /&gt; instance.">
        <see cref="T:System.Net.EndPoint" /> インスタンスから <see cref="T:System.Net.SocketAddress" /> インスタンスを作成します。</summary>
      <param name="socketAddress" vsli:raw="The socket address that serves as the endpoint for a connection.">接続のエンド ポイントとして機能するソケット アドレス。</param>
      <exception cref="T:System.NotImplementedException" vsli:raw="Any attempt is made to access the method when the method is not overridden in a descendant class.">メソッドが派生クラスでオーバーライドされない場合は、そのメソッドへのアクセスが行われます。</exception>
      <returns vsli:raw="A new &lt;see cref=&quot;T:System.Net.EndPoint&quot; /&gt; instance that is initialized from the specified &lt;see cref=&quot;T:System.Net.SocketAddress&quot; /&gt; instance.">指定した <see cref="T:System.Net.EndPoint" /> インスタンスから初期化された新しい <see cref="T:System.Net.SocketAddress" /> インスタンス。</returns>
    </member>
    <member name="M:System.Net.EndPoint.Serialize">
      <summary vsli:raw="Serializes endpoint information into a &lt;see cref=&quot;T:System.Net.SocketAddress&quot; /&gt; instance.">
        <see cref="T:System.Net.SocketAddress" /> インスタンスに対してエンドポイント情報をシリアル化します。</summary>
      <exception cref="T:System.NotImplementedException" vsli:raw="Any attempt is made to access the method when the method is not overridden in a descendant class.">メソッドが派生クラスでオーバーライドされない場合は、そのメソッドへのアクセスが行われます。</exception>
      <returns vsli:raw="A &lt;see cref=&quot;T:System.Net.SocketAddress&quot; /&gt; instance that contains the endpoint information.">エンド ポイント情報を格納している <see cref="T:System.Net.SocketAddress" /> インスタンス。</returns>
    </member>
    <member name="P:System.Net.EndPoint.AddressFamily">
      <summary vsli:raw="Gets the address family to which the endpoint belongs.">エンドポイントが属するアドレス ファミリを取得します。</summary>
      <exception cref="T:System.NotImplementedException" vsli:raw="Any attempt is made to get or set the property when the property is not overridden in a descendant class.">プロパティが派生クラスでオーバーライドされない場合は、そのプロパティの取得または設定が行われます。</exception>
      <returns vsli:raw="One of the &lt;see cref=&quot;T:System.Net.Sockets.AddressFamily&quot; /&gt; values.">
        <see cref="T:System.Net.Sockets.AddressFamily" /> 値のいずれか 1 つ。</returns>
    </member>
    <member name="T:System.Net.HttpStatusCode">
      <summary vsli:raw="Contains the values of status codes defined for HTTP defined in RFC 2616 for HTTP 1.1.">HTTP 用に定義されたステータス コードの値。</summary>
    </member>
    <member name="F:System.Net.HttpStatusCode.Accepted">
      <summary vsli:raw="Equivalent to HTTP status 202. &lt;see cref=&quot;F:System.Net.HttpStatusCode.Accepted&quot; /&gt; indicates that the request has been accepted for further processing.">HTTP ステータス 202 と等価です。 <see cref="F:System.Net.HttpStatusCode.Accepted" /> は、要求が追加の処理のために受け入れられたことを示します。</summary>
    </member>
    <member name="F:System.Net.HttpStatusCode.AlreadyReported">
      <summary vsli:raw="Equivalent to HTTP status 208. &lt;see cref=&quot;F:System.Net.HttpStatusCode.AlreadyReported&quot; /&gt; indicates that the members of a WebDAV binding have already been enumerated in a preceding part of the multistatus response, and are not being included again.">HTTP ステータス 208 と等価です。 <see cref="F:System.Net.HttpStatusCode.AlreadyReported" /> は WebDAV バインドのメンバーがマルチステータス応答の前の部分で既に列挙されており、再度含まれていないことを示します。</summary>
    </member>
    <member name="F:System.Net.HttpStatusCode.Ambiguous">
      <summary vsli:raw="Equivalent to HTTP status 300. &lt;see cref=&quot;F:System.Net.HttpStatusCode.Ambiguous&quot; /&gt; indicates that the requested information has multiple representations. The default action is to treat this status as a redirect and follow the contents of the Location header associated with this response. &lt;c&gt;Ambiguous&lt;/c&gt; is a synonym for &lt;c&gt;MultipleChoices&lt;/c&gt;.">HTTP ステータス 300 と等価です。 <see cref="F:System.Net.HttpStatusCode.Ambiguous" /> は、要求された情報に複数の表現があることを示します。 既定のアクションは、このステータスをリダイレクトとして扱い、この応答に関連付けられている Location ヘッダーの内容に従うことです。 <c>Ambiguous</c> は <c>MultipleChoices</c> のシノニムです。</summary>
    </member>
    <member name="F:System.Net.HttpStatusCode.BadGateway">
      <summary vsli:raw="Equivalent to HTTP status 502. &lt;see cref=&quot;F:System.Net.HttpStatusCode.BadGateway&quot; /&gt; indicates that an intermediate proxy server received a bad response from another proxy or the origin server.">HTTP ステータス 502 と等価です。 <see cref="F:System.Net.HttpStatusCode.BadGateway" /> は、中間プロキシ サーバーが別のプロキシまたは配信元サーバーから無効な応答を受け取ったことを示します。</summary>
    </member>
    <member name="F:System.Net.HttpStatusCode.BadRequest">
      <summary vsli:raw="Equivalent to HTTP status 400. &lt;see cref=&quot;F:System.Net.HttpStatusCode.BadRequest&quot; /&gt; indicates that the request could not be understood by the server. &lt;see cref=&quot;F:System.Net.HttpStatusCode.BadRequest&quot; /&gt; is sent when no other error is applicable, or if the exact error is unknown or does not have its own error code.">HTTP ステータス 400 と等価です。 <see cref="F:System.Net.HttpStatusCode.BadRequest" /> は、サーバーが要求を理解できないことを示します。 <see cref="F:System.Net.HttpStatusCode.BadRequest" /> は、他のエラーが適用されない場合や、正確なエラーを確認できないか、独自のエラー コードがない場合に送信されます。</summary>
    </member>
    <member name="F:System.Net.HttpStatusCode.Conflict">
      <summary vsli:raw="Equivalent to HTTP status 409. &lt;see cref=&quot;F:System.Net.HttpStatusCode.Conflict&quot; /&gt; indicates that the request could not be carried out because of a conflict on the server.">HTTP ステータス 409 と等価です。 <see cref="F:System.Net.HttpStatusCode.Conflict" /> は、サーバー上の競合のために要求を実行できないことを示します。</summary>
    </member>
    <member name="F:System.Net.HttpStatusCode.Continue">
      <summary vsli:raw="Equivalent to HTTP status 100. &lt;see cref=&quot;F:System.Net.HttpStatusCode.Continue&quot; /&gt; indicates that the client can continue with its request.">HTTP ステータス 100 と等価です。 <see cref="F:System.Net.HttpStatusCode.Continue" /> は、クライアントが要求を継続できることを示します。</summary>
    </member>
    <member name="F:System.Net.HttpStatusCode.Created">
      <summary vsli:raw="Equivalent to HTTP status 201. &lt;see cref=&quot;F:System.Net.HttpStatusCode.Created&quot; /&gt; indicates that the request resulted in a new resource created before the response was sent.">HTTP ステータス 201 と等価です。 <see cref="F:System.Net.HttpStatusCode.Created" /> は、応答が送信される前に、要求によって新しいリソースが作成されたことを示します。</summary>
    </member>
    <member name="F:System.Net.HttpStatusCode.EarlyHints">
      <summary vsli:raw="Equivalent to HTTP status 103. &lt;see cref=&quot;F:System.Net.HttpStatusCode.EarlyHints&quot; /&gt; indicates to the client that the server is likely to send a final response with the header fields included in the informational response.">HTTP ステータス 103 と等価です。 <see cref="F:System.Net.HttpStatusCode.EarlyHints" /> は、サーバーが情報応答に含まれるヘッダー フィールドと共に最終的な応答を送信する可能性があることをクライアントに示します。</summary>
    </member>
    <member name="F:System.Net.HttpStatusCode.ExpectationFailed">
      <summary vsli:raw="Equivalent to HTTP status 417. &lt;see cref=&quot;F:System.Net.HttpStatusCode.ExpectationFailed&quot; /&gt; indicates that an expectation given in an Expect header could not be met by the server.">HTTP ステータス 417 と等価です。 <see cref="F:System.Net.HttpStatusCode.ExpectationFailed" /> は、サーバーが Expect ヘッダーで指定された要求を満たすことができないことを示します。</summary>
    </member>
    <member name="F:System.Net.HttpStatusCode.FailedDependency">
      <summary vsli:raw="Equivalent to HTTP status 424. &lt;see cref=&quot;F:System.Net.HttpStatusCode.FailedDependency&quot; /&gt; indicates that the method couldn't be performed on the resource because the requested action depended on another action and that action failed.">HTTP ステータス 424 と等価です。 <see cref="F:System.Net.HttpStatusCode.FailedDependency" /> は、要求されたアクションが別のアクションに依存していて、そのアクションが失敗したため、リソースに対してメソッドを実行できなかったことを示します。</summary>
    </member>
    <member name="F:System.Net.HttpStatusCode.Forbidden">
      <summary vsli:raw="Equivalent to HTTP status 403. &lt;see cref=&quot;F:System.Net.HttpStatusCode.Forbidden&quot; /&gt; indicates that the server refuses to fulfill the request.">HTTP ステータス 403 と等価です。 <see cref="F:System.Net.HttpStatusCode.Forbidden" /> は、サーバーが要求の実行を拒否していることを示します。</summary>
    </member>
    <member name="F:System.Net.HttpStatusCode.Found">
      <summary vsli:raw="Equivalent to HTTP status 302. &lt;see cref=&quot;F:System.Net.HttpStatusCode.Found&quot; /&gt; indicates that the requested information is located at the URI specified in the Location header. The default action when this status is received is to follow the Location header associated with the response. When the original request method was POST, the redirected request will use the GET method. &lt;c&gt;Found&lt;/c&gt; is a synonym for &lt;c&gt;Redirect&lt;/c&gt;.">HTTP ステータス 302 と等価です。 <see cref="F:System.Net.HttpStatusCode.Found" /> は、要求された情報が Location ヘッダーで指定される URI にあることを示します。 このステータスが受信されたときの既定のアクションは、この応答に関連付けられている Location ヘッダーに従うことです。 元の要求メソッドが POST だった場合、リダイレクトされた要求では GET メソッドが使用されます。 <c>Found</c> は <c>Redirect</c> のシノニムです。</summary>
    </member>
    <member name="F:System.Net.HttpStatusCode.GatewayTimeout">
      <summary vsli:raw="Equivalent to HTTP status 504. &lt;see cref=&quot;F:System.Net.HttpStatusCode.GatewayTimeout&quot; /&gt; indicates that an intermediate proxy server timed out while waiting for a response from another proxy or the origin server.">HTTP ステータス 504 と等価です。 <see cref="F:System.Net.HttpStatusCode.GatewayTimeout" /> は、中間プロキシ サーバーが別のプロキシまたは配信元サーバーからの応答を待機している間にタイムアウトしたことを示します。</summary>
    </member>
    <member name="F:System.Net.HttpStatusCode.Gone">
      <summary vsli:raw="Equivalent to HTTP status 410. &lt;see cref=&quot;F:System.Net.HttpStatusCode.Gone&quot; /&gt; indicates that the requested resource is no longer available.">HTTP ステータス 410 と等価です。 <see cref="F:System.Net.HttpStatusCode.Gone" /> は、要求されたリソースが利用できないことを示します。</summary>
    </member>
    <member name="F:System.Net.HttpStatusCode.HttpVersionNotSupported">
      <summary vsli:raw="Equivalent to HTTP status 505. &lt;see cref=&quot;F:System.Net.HttpStatusCode.HttpVersionNotSupported&quot; /&gt; indicates that the requested HTTP version is not supported by the server.">HTTP ステータス 505 と等価です。 <see cref="F:System.Net.HttpStatusCode.HttpVersionNotSupported" /> は、要求された HTTP バージョンがサーバーでサポートされていないことを示します。</summary>
    </member>
    <member name="F:System.Net.HttpStatusCode.IMUsed">
      <summary vsli:raw="Equivalent to HTTP status 226. &lt;see cref=&quot;F:System.Net.HttpStatusCode.IMUsed&quot; /&gt; indicates that the server has fulfilled a request for the resource, and the response is a representation of the result of one or more instance-manipulations applied to the current instance.">HTTP ステータス 226 と等価です。 <see cref="F:System.Net.HttpStatusCode.IMUsed" /> は、サーバーがリソースの要求を処理したことを示し、応答は、現在のインスタンスに適用された 1 つ以上のインスタンス操作の結果を表したものです。</summary>
    </member>
    <member name="F:System.Net.HttpStatusCode.InsufficientStorage">
      <summary vsli:raw="Equivalent to HTTP status 507. &lt;see cref=&quot;F:System.Net.HttpStatusCode.InsufficientStorage&quot; /&gt; indicates that the server is unable to store the representation needed to complete the request.">HTTP ステータス 507 と等価です。 <see cref="F:System.Net.HttpStatusCode.InsufficientStorage" /> は、要求を完了するために必要な表現をサーバーが格納できないことを示します。</summary>
    </member>
    <member name="F:System.Net.HttpStatusCode.InternalServerError">
      <summary vsli:raw="Equivalent to HTTP status 500. &lt;see cref=&quot;F:System.Net.HttpStatusCode.InternalServerError&quot; /&gt; indicates that a generic error has occurred on the server.">HTTP ステータス 500 と等価です。 <see cref="F:System.Net.HttpStatusCode.InternalServerError" /> は、サーバーで汎用エラーが発生したことを示します。</summary>
    </member>
    <member name="F:System.Net.HttpStatusCode.LengthRequired">
      <summary vsli:raw="Equivalent to HTTP status 411. &lt;see cref=&quot;F:System.Net.HttpStatusCode.LengthRequired&quot; /&gt; indicates that the required Content-length header is missing.">HTTP ステータス 411 と等価です。 <see cref="F:System.Net.HttpStatusCode.LengthRequired" /> は、必要な Content-length ヘッダーがないことを示します。</summary>
    </member>
    <member name="F:System.Net.HttpStatusCode.Locked">
      <summary vsli:raw="Equivalent to HTTP status 423. &lt;see cref=&quot;F:System.Net.HttpStatusCode.Locked&quot; /&gt; indicates that the source or destination resource is locked.">HTTP ステータス 423 と等価です。 <see cref="F:System.Net.HttpStatusCode.Locked" /> は、ソースまたはターゲットのリソースがロックされていることを示します。</summary>
    </member>
    <member name="F:System.Net.HttpStatusCode.LoopDetected">
      <summary vsli:raw="Equivalent to HTTP status 508. &lt;see cref=&quot;F:System.Net.HttpStatusCode.LoopDetected&quot; /&gt; indicates that the server terminated an operation because it encountered an infinite loop while processing a WebDAV request with &quot;Depth: infinity&quot;. This status code is meant for backward compatibility with clients not aware of the 208 status code &lt;see cref=&quot;F:System.Net.HttpStatusCode.AlreadyReported&quot; /&gt; appearing in multistatus response bodies.">HTTP ステータス 508 と等価です。 <see cref="F:System.Net.HttpStatusCode.LoopDetected" /> は "Depth: infinity" で WebDAV 要求を処理するときに無限ループが発生したため、サーバーが操作を終了したことを示します。 この状態コードは、マルチステータス応答本文に表示される 208 ステータス コード <see cref="F:System.Net.HttpStatusCode.AlreadyReported" /> を認識しないクライアントとの下位互換性のためにあります。</summary>
    </member>
    <member name="F:System.Net.HttpStatusCode.MethodNotAllowed">
      <summary vsli:raw="Equivalent to HTTP status 405. &lt;see cref=&quot;F:System.Net.HttpStatusCode.MethodNotAllowed&quot; /&gt; indicates that the request method (POST or GET) is not allowed on the requested resource.">HTTP ステータス 405 と等価です。 <see cref="F:System.Net.HttpStatusCode.MethodNotAllowed" /> は、要求メソッド (POST または GET) が要求リソースで許可されていないことを示します。</summary>
    </member>
    <member name="F:System.Net.HttpStatusCode.MisdirectedRequest">
      <summary vsli:raw="Equivalent to HTTP status 421. &lt;see cref=&quot;F:System.Net.HttpStatusCode.MisdirectedRequest&quot; /&gt; indicates that the request was directed at a server that is not able to produce a response.">HTTP ステータス 421 と等価です。 <see cref="F:System.Net.HttpStatusCode.MisdirectedRequest" /> は、応答を生成できないサーバーで要求が送られたことを示します。</summary>
    </member>
    <member name="F:System.Net.HttpStatusCode.Moved">
      <summary vsli:raw="Equivalent to HTTP status 301. &lt;see cref=&quot;F:System.Net.HttpStatusCode.Moved&quot; /&gt; indicates that the requested information has been moved to the URI specified in the Location header. The default action when this status is received is to follow the Location header associated with the response. When the original request method was POST, the redirected request will use the GET method. &lt;c&gt;Moved&lt;/c&gt; is a synonym for &lt;c&gt;MovedPermanently&lt;/c&gt;.">HTTP ステータス 301 と等価です。 <see cref="F:System.Net.HttpStatusCode.Moved" /> は、要求された情報が Location ヘッダーで指定される URI に移動したことを示します。 このステータスが受信されたときの既定のアクションは、この応答に関連付けられている Location ヘッダーに従うことです。 元の要求メソッドが POST だった場合、リダイレクトされた要求では GET メソッドが使用されます。 <c>Moved</c> は <c>MovedPermanently</c> のシノニムです。</summary>
    </member>
    <member name="F:System.Net.HttpStatusCode.MovedPermanently">
      <summary vsli:raw="Equivalent to HTTP status 301. &lt;see cref=&quot;F:System.Net.HttpStatusCode.MovedPermanently&quot; /&gt; indicates that the requested information has been moved to the URI specified in the Location header. The default action when this status is received is to follow the Location header associated with the response. &lt;c&gt;MovedPermanently&lt;/c&gt; is a synonym for &lt;c&gt;Moved&lt;/c&gt;.">HTTP ステータス 301 と等価です。 <see cref="F:System.Net.HttpStatusCode.MovedPermanently" /> は、要求された情報が Location ヘッダーで指定される URI に移動したことを示します。 このステータスが受信されたときの既定のアクションは、この応答に関連付けられている Location ヘッダーに従うことです。 <c>MovedPermanently</c> は <c>Moved</c> のシノニムです。</summary>
    </member>
    <member name="F:System.Net.HttpStatusCode.MultipleChoices">
      <summary vsli:raw="Equivalent to HTTP status 300. &lt;see cref=&quot;F:System.Net.HttpStatusCode.MultipleChoices&quot; /&gt; indicates that the requested information has multiple representations. The default action is to treat this status as a redirect and follow the contents of the Location header associated with this response. &lt;c&gt;MultipleChoices&lt;/c&gt; is a synonym for &lt;c&gt;Ambiguous&lt;/c&gt;.">HTTP ステータス 300 と等価です。 <see cref="F:System.Net.HttpStatusCode.MultipleChoices" /> は、要求された情報に複数の表現があることを示します。 既定のアクションは、このステータスをリダイレクトとして扱い、この応答に関連付けられている Location ヘッダーの内容に従うことです。 <c>MultipleChoices</c> は <c>Ambiguous</c> のシノニムです。</summary>
    </member>
    <member name="F:System.Net.HttpStatusCode.MultiStatus">
      <summary vsli:raw="Equivalent to HTTP status 207. &lt;see cref=&quot;F:System.Net.HttpStatusCode.MultiStatus&quot; /&gt; indicates multiple status codes for a single response during a Web Distributed Authoring and Versioning (WebDAV) operation. The response body contains XML that describes the status codes.">HTTP ステータス 207 と等価です。 <see cref="F:System.Net.HttpStatusCode.MultiStatus" /> は、Web 分散オーサリングとバージョン管理 (WebDAV) 操作中に、1 つの応答に対して複数のステータス コードが発生したことを示します。 応答本文には、ステータス コードを記述する XML が含まれています。</summary>
    </member>
    <member name="F:System.Net.HttpStatusCode.NetworkAuthenticationRequired">
      <summary vsli:raw="Equivalent to HTTP status 511. &lt;see cref=&quot;F:System.Net.HttpStatusCode.NetworkAuthenticationRequired&quot; /&gt; indicates that the client needs to authenticate to gain network access; it's intended for use by intercepting proxies used to control access to the network.">HTTP ステータス 511 と等価です。 <see cref="F:System.Net.HttpStatusCode.NetworkAuthenticationRequired" /> は、クライアントにネットワーク アクセスを取得するための認証が必要であることを示します。これは、ネットワークへのアクセスを制御するために使用される傍受プロキシで使用されることを意図しています。</summary>
    </member>
    <member name="F:System.Net.HttpStatusCode.NoContent">
      <summary vsli:raw="Equivalent to HTTP status 204. &lt;see cref=&quot;F:System.Net.HttpStatusCode.NoContent&quot; /&gt; indicates that the request has been successfully processed and that the response is intentionally blank.">HTTP ステータス 204 と等価です。 <see cref="F:System.Net.HttpStatusCode.NoContent" /> は、要求が正常に処理され、応答が意図的に空白になっていることを示します。</summary>
    </member>
    <member name="F:System.Net.HttpStatusCode.NonAuthoritativeInformation">
      <summary vsli:raw="Equivalent to HTTP status 203. &lt;see cref=&quot;F:System.Net.HttpStatusCode.NonAuthoritativeInformation&quot; /&gt; indicates that the returned meta information is from a cached copy instead of the origin server and therefore may be incorrect.">HTTP ステータス 203 と等価です。 <see cref="F:System.Net.HttpStatusCode.NonAuthoritativeInformation" /> は、返されたメタ情報が、配信元サーバーではなくキャッシュされたコピーから取得されたもので、正しくない可能性があることを示します。</summary>
    </member>
    <member name="F:System.Net.HttpStatusCode.NotAcceptable">
      <summary vsli:raw="Equivalent to HTTP status 406. &lt;see cref=&quot;F:System.Net.HttpStatusCode.NotAcceptable&quot; /&gt; indicates that the client has indicated with Accept headers that it will not accept any of the available representations of the resource.">HTTP ステータス 406 と等価です。 <see cref="F:System.Net.HttpStatusCode.NotAcceptable" /> は、クライアントが Accept ヘッダーでリソースの利用可能な任意の表現を受け入れないことを指定していることを示します。</summary>
    </member>
    <member name="F:System.Net.HttpStatusCode.NotExtended">
      <summary vsli:raw="Equivalent to HTTP status 510. &lt;see cref=&quot;F:System.Net.HttpStatusCode.NotExtended&quot; /&gt; indicates that further extensions to the request are required for the server to fulfill it.">HTTP ステータス 510 と等価です。 <see cref="F:System.Net.HttpStatusCode.NotExtended" /> は、サーバーが要求を満たすためには、さらなる拡張機能が必要であることを示します。</summary>
    </member>
    <member name="F:System.Net.HttpStatusCode.NotFound">
      <summary vsli:raw="Equivalent to HTTP status 404. &lt;see cref=&quot;F:System.Net.HttpStatusCode.NotFound&quot; /&gt; indicates that the requested resource does not exist on the server.">HTTP ステータス 404 と等価です。 <see cref="F:System.Net.HttpStatusCode.NotFound" /> は、要求されたリソースがサーバーに存在していないことを示します。</summary>
    </member>
    <member name="F:System.Net.HttpStatusCode.NotImplemented">
      <summary vsli:raw="Equivalent to HTTP status 501. &lt;see cref=&quot;F:System.Net.HttpStatusCode.NotImplemented&quot; /&gt; indicates that the server does not support the requested function.">HTTP ステータス 501 と等価です。 <see cref="F:System.Net.HttpStatusCode.NotImplemented" /> は、サーバーが要求された機能をサポートしていないことを示します。</summary>
    </member>
    <member name="F:System.Net.HttpStatusCode.NotModified">
      <summary vsli:raw="Equivalent to HTTP status 304. &lt;see cref=&quot;F:System.Net.HttpStatusCode.NotModified&quot; /&gt; indicates that the client's cached copy is up to date. The contents of the resource are not transferred.">HTTP ステータス 304 と等価です。 <see cref="F:System.Net.HttpStatusCode.NotModified" /> は、クライアントのキャッシュされたコピーが最新のものであることを示します。 リソースの内容は転送されません。</summary>
    </member>
    <member name="F:System.Net.HttpStatusCode.OK">
      <summary vsli:raw="Equivalent to HTTP status 200. &lt;see cref=&quot;F:System.Net.HttpStatusCode.OK&quot; /&gt; indicates that the request succeeded and that the requested information is in the response. This is the most common status code to receive.">HTTP ステータス 200 と等価です。 <see cref="F:System.Net.HttpStatusCode.OK" /> は、要求が成功し、要求された情報が応答で返されたことを示します。 これは受信される最も一般的なステータス コードです。</summary>
    </member>
    <member name="F:System.Net.HttpStatusCode.PartialContent">
      <summary vsli:raw="Equivalent to HTTP status 206. &lt;see cref=&quot;F:System.Net.HttpStatusCode.PartialContent&quot; /&gt; indicates that the response is a partial response as requested by a GET request that includes a byte range.">HTTP ステータス 206 と等価です。 <see cref="F:System.Net.HttpStatusCode.PartialContent" /> は、応答が GET 要求によって要求された応答の一部であることを示します。これにはバイト範囲が含まれます。</summary>
    </member>
    <member name="F:System.Net.HttpStatusCode.PaymentRequired">
      <summary vsli:raw="Equivalent to HTTP status 402. &lt;see cref=&quot;F:System.Net.HttpStatusCode.PaymentRequired&quot; /&gt; is reserved for future use.">HTTP ステータス 402 と等価です。 <see cref="F:System.Net.HttpStatusCode.PaymentRequired" /> は将来使用するために予約されています。</summary>
    </member>
    <member name="F:System.Net.HttpStatusCode.PermanentRedirect">
      <summary vsli:raw="Equivalent to HTTP status 308. &lt;see cref=&quot;F:System.Net.HttpStatusCode.PermanentRedirect&quot; /&gt; indicates that the request information is located at the URI specified in the Location header. The default action when this status is received is to follow the Location header associated with the response. When the original request method was POST, the redirected request will also use the POST method.">HTTP ステータス 308 と等価です。 <see cref="F:System.Net.HttpStatusCode.PermanentRedirect" /> は、要求された情報が Location ヘッダーで指定される URI にあることを示します。 このステータスが受信されたときの既定のアクションは、この応答に関連付けられている Location ヘッダーに従うことです。 元の要求メソッドが POST だった場合、リダイレクトされた要求でも POST メソッドが使用されます。</summary>
    </member>
    <member name="F:System.Net.HttpStatusCode.PreconditionFailed">
      <summary vsli:raw="Equivalent to HTTP status 412. &lt;see cref=&quot;F:System.Net.HttpStatusCode.PreconditionFailed&quot; /&gt; indicates that a condition set for this request failed, and the request cannot be carried out. Conditions are set with conditional request headers like If-Match, If-None-Match, or If-Unmodified-Since.">HTTP ステータス 412 と等価です。 <see cref="F:System.Net.HttpStatusCode.PreconditionFailed" /> は、この要求で設定された条件が満たされず、要求を実行できないことを示します。条件は、If-Match、If-None-Match、If-Unmodified-Since などの条件要求ヘッダーを使用して設定されます。</summary>
    </member>
    <member name="F:System.Net.HttpStatusCode.PreconditionRequired">
      <summary vsli:raw="Equivalent to HTTP status 428. &lt;see cref=&quot;F:System.Net.HttpStatusCode.PreconditionRequired&quot; /&gt; indicates that the server requires the request to be conditional.">HTTP ステータス 428 と等価です。 <see cref="F:System.Net.HttpStatusCode.PreconditionRequired" /> は、サーバーで条件付き要求が必要であることを示します。</summary>
    </member>
    <member name="F:System.Net.HttpStatusCode.Processing">
      <summary vsli:raw="Equivalent to HTTP status 102. &lt;see cref=&quot;F:System.Net.HttpStatusCode.Processing&quot; /&gt; indicates that the server has accepted the complete request but hasn't completed it yet.">HTTP ステータス 102 と等価です。 <see cref="F:System.Net.HttpStatusCode.Processing" /> は、サーバーが完全な要求を受け入れたが、まだそれを完了していないことを示します。</summary>
    </member>
    <member name="F:System.Net.HttpStatusCode.ProxyAuthenticationRequired">
      <summary vsli:raw="Equivalent to HTTP status 407. &lt;see cref=&quot;F:System.Net.HttpStatusCode.ProxyAuthenticationRequired&quot; /&gt; indicates that the requested proxy requires authentication. The Proxy-authenticate header contains the details of how to perform the authentication.">HTTP ステータス 407 と等価です。 <see cref="F:System.Net.HttpStatusCode.ProxyAuthenticationRequired" /> は、要求されたプロキシが認証を要求することを示します。 Proxy-authenticate ヘッダーには、認証の実行方法の詳細が含まれます。</summary>
    </member>
    <member name="F:System.Net.HttpStatusCode.Redirect">
      <summary vsli:raw="Equivalent to HTTP status 302. &lt;see cref=&quot;F:System.Net.HttpStatusCode.Redirect&quot; /&gt; indicates that the requested information is located at the URI specified in the Location header. The default action when this status is received is to follow the Location header associated with the response. When the original request method was POST, the redirected request will use the GET method. &lt;c&gt;Redirect&lt;/c&gt; is a synonym for &lt;c&gt;Found&lt;/c&gt;.">HTTP ステータス 302 と等価です。 <see cref="F:System.Net.HttpStatusCode.Redirect" /> は、要求された情報が Location ヘッダーで指定される URI にあることを示します。 このステータスが受信されたときの既定のアクションは、この応答に関連付けられている Location ヘッダーに従うことです。 元の要求メソッドが POST だった場合、リダイレクトされた要求では GET メソッドが使用されます。 <c>Redirect</c> は <c>Found</c> のシノニムです。</summary>
    </member>
    <member name="F:System.Net.HttpStatusCode.RedirectKeepVerb">
      <summary vsli:raw="Equivalent to HTTP status 307. &lt;see cref=&quot;F:System.Net.HttpStatusCode.RedirectKeepVerb&quot; /&gt; indicates that the request information is located at the URI specified in the Location header. The default action when this status is received is to follow the Location header associated with the response. When the original request method was POST, the redirected request will also use the POST method. &lt;c&gt;RedirectKeepVerb&lt;/c&gt; is a synonym for &lt;c&gt;TemporaryRedirect&lt;/c&gt;.">HTTP ステータス 307 と等価です。 <see cref="F:System.Net.HttpStatusCode.RedirectKeepVerb" /> は、要求された情報が Location ヘッダーで指定される URI にあることを示します。 このステータスが受信されたときの既定のアクションは、この応答に関連付けられている Location ヘッダーに従うことです。 元の要求メソッドが POST だった場合、リダイレクトされた要求でも POST メソッドが使用されます。 <c>RedirectKeepVerb</c> は <c>TemporaryRedirect</c> のシノニムです。</summary>
    </member>
    <member name="F:System.Net.HttpStatusCode.RedirectMethod">
      <summary vsli:raw="Equivalent to HTTP status 303. &lt;see cref=&quot;F:System.Net.HttpStatusCode.RedirectMethod&quot; /&gt; automatically redirects the client to the URI specified in the Location header as the result of a POST. The request to the resource specified by the Location header will be made with a GET. &lt;c&gt;RedirectMethod&lt;/c&gt; is a synonym for &lt;c&gt;SeeOther&lt;/c&gt;.">HTTP ステータス 303 と等価です。 <see cref="F:System.Net.HttpStatusCode.RedirectMethod" /> は、POST の結果として、Location ヘッダーで指定された URI にクライアントを自動的にリダイレクトします。 Location ヘッダーで指定されたリソースへの要求は、GET によって実行されます。 <c>RedirectMethod</c> は <c>SeeOther</c> のシノニムです。</summary>
    </member>
    <member name="F:System.Net.HttpStatusCode.RequestedRangeNotSatisfiable">
      <summary vsli:raw="Equivalent to HTTP status 416. &lt;see cref=&quot;F:System.Net.HttpStatusCode.RequestedRangeNotSatisfiable&quot; /&gt; indicates that the range of data requested from the resource cannot be returned, either because the beginning of the range is before the beginning of the resource, or the end of the range is after the end of the resource.">HTTP ステータス 416 と等価です。 <see cref="F:System.Net.HttpStatusCode.RequestedRangeNotSatisfiable" /> は、リソースから要求されたデータの範囲を返すことができないことを示します。その原因は、範囲の先頭がリソースの先頭より前であるか、範囲の末尾がリソースの末尾より後ろであるかのいずれかです。</summary>
    </member>
    <member name="F:System.Net.HttpStatusCode.RequestEntityTooLarge">
      <summary vsli:raw="Equivalent to HTTP status 413. &lt;see cref=&quot;F:System.Net.HttpStatusCode.RequestEntityTooLarge&quot; /&gt; indicates that the request is too large for the server to process.">HTTP ステータス 413 と等価です。 <see cref="F:System.Net.HttpStatusCode.RequestEntityTooLarge" /> は、要求が大きすぎて、サーバーで処理できないことを示します。</summary>
    </member>
    <member name="F:System.Net.HttpStatusCode.RequestHeaderFieldsTooLarge">
      <summary vsli:raw="Equivalent to HTTP status 431. &lt;see cref=&quot;F:System.Net.HttpStatusCode.RequestHeaderFieldsTooLarge&quot; /&gt; indicates that the server is unwilling to process the request because its header fields (either an individual header field or all the header fields collectively) are too large.">HTTP ステータス 431 と等価です。 <see cref="F:System.Net.HttpStatusCode.RequestHeaderFieldsTooLarge" /> は、ヘッダー フィールド (個々のヘッダー フィールドまたはすべてのヘッダー フィールドの集合) が大きすぎるため、サーバーが要求を処理しないことを示します。</summary>
    </member>
    <member name="F:System.Net.HttpStatusCode.RequestTimeout">
      <summary vsli:raw="Equivalent to HTTP status 408. &lt;see cref=&quot;F:System.Net.HttpStatusCode.RequestTimeout&quot; /&gt; indicates that the client did not send a request within the time the server was expecting the request.">HTTP ステータス 408 と等価です。 <see cref="F:System.Net.HttpStatusCode.RequestTimeout" /> は、サーバーが要求を予期している時間内にクライアントが要求を送信しなかったことを示します。</summary>
    </member>
    <member name="F:System.Net.HttpStatusCode.RequestUriTooLong">
      <summary vsli:raw="Equivalent to HTTP status 414. &lt;see cref=&quot;F:System.Net.HttpStatusCode.RequestUriTooLong&quot; /&gt; indicates that the URI is too long.">HTTP ステータス 414 と等価です。 <see cref="F:System.Net.HttpStatusCode.RequestUriTooLong" /> は、URI が長すぎることを示します。</summary>
    </member>
    <member name="F:System.Net.HttpStatusCode.ResetContent">
      <summary vsli:raw="Equivalent to HTTP status 205. &lt;see cref=&quot;F:System.Net.HttpStatusCode.ResetContent&quot; /&gt; indicates that the client should reset (not reload) the current resource.">HTTP ステータス 205 と等価です。 <see cref="F:System.Net.HttpStatusCode.ResetContent" /> は、クライアントが現在のリソースを再び読み込むのではなく、リセットする必要があることを示します。</summary>
    </member>
    <member name="F:System.Net.HttpStatusCode.SeeOther">
      <summary vsli:raw="Equivalent to HTTP status 303. &lt;see cref=&quot;F:System.Net.HttpStatusCode.SeeOther&quot; /&gt; automatically redirects the client to the URI specified in the Location header as the result of a POST. The request to the resource specified by the Location header will be made with a GET. &lt;c&gt;SeeOther&lt;/c&gt; is a synonym for &lt;c&gt;RedirectMethod&lt;/c&gt;.">HTTP ステータス 303 と等価です。 <see cref="F:System.Net.HttpStatusCode.SeeOther" /> は、POST の結果として、Location ヘッダーで指定された URI にクライアントを自動的にリダイレクトします。 Location ヘッダーで指定されたリソースへの要求は、GET によって実行されます。 <c>SeeOther</c> は <c>RedirectMethod</c> のシノニムです。</summary>
    </member>
    <member name="F:System.Net.HttpStatusCode.ServiceUnavailable">
      <summary vsli:raw="Equivalent to HTTP status 503. &lt;see cref=&quot;F:System.Net.HttpStatusCode.ServiceUnavailable&quot; /&gt; indicates that the server is temporarily unavailable, usually due to high load or maintenance.">HTTP ステータス 503 と等価です。 通常、<see cref="F:System.Net.HttpStatusCode.ServiceUnavailable" /> は、高い負荷または保守のため、サーバーを一時的に利用できないことを示します。</summary>
    </member>
    <member name="F:System.Net.HttpStatusCode.SwitchingProtocols">
      <summary vsli:raw="Equivalent to HTTP status 101. &lt;see cref=&quot;F:System.Net.HttpStatusCode.SwitchingProtocols&quot; /&gt; indicates that the protocol version or protocol is being changed.">HTTP ステータス 101 と等価です。 <see cref="F:System.Net.HttpStatusCode.SwitchingProtocols" /> は、プロトコル バージョンまたはプロトコルが変更されていることを示します。</summary>
    </member>
    <member name="F:System.Net.HttpStatusCode.TemporaryRedirect">
      <summary vsli:raw="Equivalent to HTTP status 307. &lt;see cref=&quot;F:System.Net.HttpStatusCode.TemporaryRedirect&quot; /&gt; indicates that the request information is located at the URI specified in the Location header. The default action when this status is received is to follow the Location header associated with the response. When the original request method was POST, the redirected request will also use the POST method. &lt;c&gt;TemporaryRedirect&lt;/c&gt; is a synonym for &lt;c&gt;RedirectKeepVerb&lt;/c&gt;.">HTTP ステータス 307 と等価です。 <see cref="F:System.Net.HttpStatusCode.TemporaryRedirect" /> は、要求された情報が Location ヘッダーで指定される URI にあることを示します。 このステータスが受信されたときの既定のアクションは、この応答に関連付けられている Location ヘッダーに従うことです。 元の要求メソッドが POST だった場合、リダイレクトされた要求でも POST メソッドが使用されます。 <c>TemporaryRedirect</c> は <c>RedirectKeepVerb</c> のシノニムです。</summary>
    </member>
    <member name="F:System.Net.HttpStatusCode.TooManyRequests">
      <summary vsli:raw="Equivalent to HTTP status 429. &lt;see cref=&quot;F:System.Net.HttpStatusCode.TooManyRequests&quot; /&gt; indicates that the user has sent too many requests in a given amount of time.">HTTP ステータス 429 と等価です。 <see cref="F:System.Net.HttpStatusCode.TooManyRequests" /> は、指定された時間内にユーザーが送信した要求の数が多すぎることを示します。</summary>
    </member>
    <member name="F:System.Net.HttpStatusCode.Unauthorized">
      <summary vsli:raw="Equivalent to HTTP status 401. &lt;see cref=&quot;F:System.Net.HttpStatusCode.Unauthorized&quot; /&gt; indicates that the requested resource requires authentication. The WWW-Authenticate header contains the details of how to perform the authentication.">HTTP ステータス 401 と等価です。 <see cref="F:System.Net.HttpStatusCode.Unauthorized" /> は、要求されたリソースが認証を要求することを示します。 WWW-Authenticate ヘッダーには、認証の実行方法の詳細が含まれます。</summary>
    </member>
    <member name="F:System.Net.HttpStatusCode.UnavailableForLegalReasons">
      <summary vsli:raw="Equivalent to HTTP status 451. &lt;see cref=&quot;F:System.Net.HttpStatusCode.UnavailableForLegalReasons&quot; /&gt; indicates that the server is denying access to the resource as a consequence of a legal demand.">HTTP ステータス 451 と等価です。 <see cref="F:System.Net.HttpStatusCode.UnavailableForLegalReasons" /> は、法的な要求の結果として、リソースへのアクセスをサーバーが拒否していることを示します。</summary>
    </member>
    <member name="F:System.Net.HttpStatusCode.UnprocessableEntity">
      <summary vsli:raw="Equivalent to HTTP status 422. &lt;see cref=&quot;F:System.Net.HttpStatusCode.UnprocessableEntity&quot; /&gt; indicates that the request was well-formed but was unable to be followed due to semantic errors.&#xA;        UnprocessableEntity is a synonym for UnprocessableContent.">HTTP ステータス 422 と等価です。 <see cref="F:System.Net.HttpStatusCode.UnprocessableEntity" /> は、要求が適切な形式であったが、セマンティック エラーが原因で失敗したことを示します。</summary>
    </member>
    <member name="F:System.Net.HttpStatusCode.UnsupportedMediaType">
      <summary vsli:raw="Equivalent to HTTP status 415. &lt;see cref=&quot;F:System.Net.HttpStatusCode.UnsupportedMediaType&quot; /&gt; indicates that the request is an unsupported type.">HTTP ステータス 415 と等価です。 <see cref="F:System.Net.HttpStatusCode.UnsupportedMediaType" /> は、その要求の種類がサポートされていないことを示します。</summary>
    </member>
    <member name="F:System.Net.HttpStatusCode.Unused">
      <summary vsli:raw="Equivalent to HTTP status 306. &lt;see cref=&quot;F:System.Net.HttpStatusCode.Unused&quot; /&gt; is a proposed extension to the HTTP/1.1 specification that is not fully specified.">HTTP ステータス 306 と等価です。 <see cref="F:System.Net.HttpStatusCode.Unused" /> は、作成中の HTTP/1.1 仕様の拡張案です。</summary>
    </member>
    <member name="F:System.Net.HttpStatusCode.UpgradeRequired">
      <summary vsli:raw="Equivalent to HTTP status 426. &lt;see cref=&quot;F:System.Net.HttpStatusCode.UpgradeRequired&quot; /&gt; indicates that the client should switch to a different protocol such as TLS/1.0.">HTTP ステータス 426 と等価です。 <see cref="F:System.Net.HttpStatusCode.UpgradeRequired" /> は、クライアントが TLS/1.0 など別のプロトコルに切り替える必要があることを示します。</summary>
    </member>
    <member name="F:System.Net.HttpStatusCode.UseProxy">
      <summary vsli:raw="Equivalent to HTTP status 305. &lt;see cref=&quot;F:System.Net.HttpStatusCode.UseProxy&quot; /&gt; indicates that the request should use the proxy server at the URI specified in the Location header.">HTTP ステータス 305 と等価です。 <see cref="F:System.Net.HttpStatusCode.UseProxy" /> は、要求が Location ヘッダーで指定される URI でプロキシ サーバーを使用する必要があることを示します。</summary>
    </member>
    <member name="F:System.Net.HttpStatusCode.VariantAlsoNegotiates">
      <summary vsli:raw="Equivalent to HTTP status 506. &lt;see cref=&quot;F:System.Net.HttpStatusCode.VariantAlsoNegotiates&quot; /&gt; indicates that the chosen variant resource is configured to engage in transparent content negotiation itself and, therefore, isn't a proper endpoint in the negotiation process.">HTTP ステータス 506 と等価です。 <see cref="F:System.Net.HttpStatusCode.VariantAlsoNegotiates" /> は、選択したバリアント リソースが透過的なコンテンツ ネゴシエーションに関与するように構成されているため、ネゴシエーション プロセスでは適切なエンドポイントではないことを示します。</summary>
    </member>
    <member name="T:System.Net.HttpVersion">
      <summary vsli:raw="Defines the HTTP version numbers that are supported by the &lt;see cref=&quot;T:System.Net.HttpWebRequest&quot; /&gt; and &lt;see cref=&quot;T:System.Net.HttpWebResponse&quot; /&gt; classes.">
        <see cref="T:System.Net.HttpWebRequest" /> クラスと <see cref="T:System.Net.HttpWebResponse" /> クラスでサポートされる HTTP バージョン番号を定義します。</summary>
    </member>
    <member name="F:System.Net.HttpVersion.Unknown">
      <summary vsli:raw="Defines a &lt;see cref=&quot;T:System.Version&quot; /&gt; instance for an unknown HTTP version.">不明な HTTP バージョンに対する <see cref="T:System.Version" /> インスタンスを定義します。</summary>
    </member>
    <member name="F:System.Net.HttpVersion.Version10">
      <summary vsli:raw="Defines a &lt;see cref=&quot;T:System.Version&quot; /&gt; instance for HTTP 1.0.">HTTP 1.0 用の <see cref="T:System.Version" /> インスタンスを定義します。</summary>
    </member>
    <member name="F:System.Net.HttpVersion.Version11">
      <summary vsli:raw="Defines a &lt;see cref=&quot;T:System.Version&quot; /&gt; instance for HTTP 1.1.">HTTP 1.1 用の <see cref="T:System.Version" /> インスタンスを定義します。</summary>
    </member>
    <member name="F:System.Net.HttpVersion.Version20">
      <summary vsli:raw="Defines a &lt;see cref=&quot;T:System.Version&quot; /&gt; instance for HTTP 2.0.">HTTP 2.0 に対する <see cref="T:System.Version" /> インスタンスを定義します。</summary>
    </member>
    <member name="T:System.Net.ICredentials">
      <summary vsli:raw="Provides the base authentication interface for retrieving credentials for Web client authentication.">Web クライアント認証の資格情報を取得するための基本認証インターフェイスを提供します。</summary>
    </member>
    <member name="M:System.Net.ICredentials.GetCredential(System.Uri,System.String)">
      <summary vsli:raw="Returns a &lt;see cref=&quot;T:System.Net.NetworkCredential&quot; /&gt; object that is associated with the specified URI, and authentication type.">指定された URI に関連付けられている <see cref="T:System.Net.NetworkCredential" /> オブジェクトと、認証の種類を返します。</summary>
      <param name="uri" vsli:raw="The &lt;see cref=&quot;T:System.Uri&quot; /&gt; that the client is providing authentication for.">クライアントが認証を提供している <see cref="T:System.Uri" />。</param>
      <param name="authType" vsli:raw="The type of authentication, as defined in the &lt;see cref=&quot;P:System.Net.IAuthenticationModule.AuthenticationType&quot; /&gt; property.">
        <see cref="P:System.Net.IAuthenticationModule.AuthenticationType" /> プロパティで定義される認証の種類。</param>
      <returns vsli:raw="The &lt;see cref=&quot;T:System.Net.NetworkCredential&quot; /&gt; that is associated with the specified URI and authentication type, or, if no credentials are available, &lt;see langword=&quot;null&quot; /&gt;.">指定された URI に関連付けられている <see cref="T:System.Net.NetworkCredential" /> と、認証の種類。使用できる認証がない場合には、<see langword="null" /> が返されます。</returns>
    </member>
    <member name="T:System.Net.ICredentialsByHost">
      <summary vsli:raw="Provides the interface for retrieving credentials for a host, port, and authentication type.">ホスト、ポート、および認証の型に関する資格情報を取得するためのインターフェイスを提供します。</summary>
    </member>
    <member name="M:System.Net.ICredentialsByHost.GetCredential(System.String,System.Int32,System.String)">
      <summary vsli:raw="Returns the credential for the specified host, port, and authentication protocol.">指定したホスト、ポート、認証プロトコル用の資格情報を返します。</summary>
      <param name="host" vsli:raw="The host computer that is authenticating the client.">クライアントを認証しているホスト コンピューター。</param>
      <param name="port" vsli:raw="The port on &lt;paramref name=&quot;host&quot; /&gt; that the client will communicate with.">クライアントが通信を行う <paramref name="host" /> 上のポート。</param>
      <param name="authenticationType" vsli:raw="The authentication protocol.">認証プロトコル。</param>
      <returns vsli:raw="A &lt;see cref=&quot;T:System.Net.NetworkCredential&quot; /&gt; for the specified host, port, and authentication protocol, or &lt;see langword=&quot;null&quot; /&gt; if there are no credentials available for the specified host, port, and authentication protocol.">指定したホスト、ポート、認証プロトコル用の <see cref="T:System.Net.NetworkCredential" />。指定したホスト、ポート、認証プロトコル用に使用できる資格情報がない場合は <see langword="null" />。</returns>
    </member>
    <member name="T:System.Net.IPAddress">
      <summary vsli:raw="Provides an Internet Protocol (IP) address.">インターネット プロトコル (IP) アドレスを提供します。</summary>
    </member>
    <member name="F:System.Net.IPAddress.Any">
      <summary vsli:raw="Provides an IP address that indicates that the server must listen for client activity on all network interfaces. This field is read-only.">IP アドレスを提供し、そのサーバーがすべてのネットワーク インターフェイスでクライアントによるネットワーク利用を待機する必要があることを示します。 このフィールドは読み取り専用です。</summary>
    </member>
    <member name="F:System.Net.IPAddress.Broadcast">
      <summary vsli:raw="Provides the IP broadcast address. This field is read-only.">IP ブロードキャスト アドレスを提供します。 このフィールドは読み取り専用です。</summary>
    </member>
    <member name="F:System.Net.IPAddress.IPv6Any">
      <summary vsli:raw="The &lt;see cref=&quot;M:System.Net.Sockets.Socket.Bind(System.Net.EndPoint)&quot; /&gt; method uses the &lt;see cref=&quot;F:System.Net.IPAddress.IPv6Any&quot; /&gt; field to indicate that a &lt;see cref=&quot;T:System.Net.Sockets.Socket&quot; /&gt; must listen for client activity on all network interfaces.">
        <see cref="M:System.Net.Sockets.Socket.Bind(System.Net.EndPoint)" /> メソッドは、<see cref="F:System.Net.IPAddress.IPv6Any" /> フィールドを使用して、<see cref="T:System.Net.Sockets.Socket" /> が、すべてのネットワーク インターフェイスでクライアントによるネットワーク利用を待機する必要があることを示します。</summary>
    </member>
    <member name="F:System.Net.IPAddress.IPv6Loopback">
      <summary vsli:raw="Provides the IP loopback address. This property is read-only.">IP ループバック アドレスを提供します。 このプロパティは読み取り専用です。</summary>
    </member>
    <member name="F:System.Net.IPAddress.IPv6None">
      <summary vsli:raw="Provides an IP address that indicates that no network interface should be used. This property is read-only.">IP アドレスを提供し、ネットワーク インターフェイスを使用しないことを示します。 このプロパティは読み取り専用です。</summary>
    </member>
    <member name="F:System.Net.IPAddress.Loopback">
      <summary vsli:raw="Provides the IP loopback address. This field is read-only.">IP ループバック アドレスを提供します。 このフィールドは読み取り専用です。</summary>
    </member>
    <member name="F:System.Net.IPAddress.None">
      <summary vsli:raw="Provides an IP address that indicates that no network interface should be used. This field is read-only.">IP アドレスを提供し、ネットワーク インターフェイスを使用しないことを示します。 このフィールドは読み取り専用です。</summary>
    </member>
    <member name="M:System.Net.IPAddress.#ctor(System.Byte[])">
      <summary vsli:raw="Initializes a new instance of the &lt;see cref=&quot;T:System.Net.IPAddress&quot; /&gt; class with the address specified as a &lt;see cref=&quot;T:System.Byte&quot; /&gt; array.">
        <see cref="T:System.Net.IPAddress" /> 配列として指定されたアドレスを使用して、<see cref="T:System.Byte" /> クラスの新しいインスタンスを初期化します。</summary>
      <param name="address" vsli:raw="The byte array value of the IP address.">IP アドレスのバイト配列値。</param>
      <exception cref="T:System.ArgumentNullException" vsli:raw="&lt;paramref name=&quot;address&quot; /&gt; is &lt;see langword=&quot;null&quot; /&gt;.">
        <paramref name="address" /> が <see langword="null" />です。</exception>
      <exception cref="T:System.ArgumentException" vsli:raw="&lt;paramref name=&quot;address&quot; /&gt; contains a bad IP address.">
        <paramref name="address" /> には、不適切な IP アドレスが含まれています。</exception>
    </member>
    <member name="M:System.Net.IPAddress.#ctor(System.Byte[],System.Int64)">
      <summary vsli:raw="Initializes a new instance of the &lt;see cref=&quot;T:System.Net.IPAddress&quot; /&gt; class with the address specified as a &lt;see cref=&quot;T:System.Byte&quot; /&gt; array and the specified scope identifier.">
        <see cref="T:System.Net.IPAddress" /> 配列として指定されたアドレスおよび指定したスコープ ID を使用して、<see cref="T:System.Byte" /> クラスの新しいインスタンスを初期化します。</summary>
      <param name="address" vsli:raw="The byte array value of the IP address.">IP アドレスのバイト配列値。</param>
      <param name="scopeid" vsli:raw="The long value of the scope identifier.">スコープ識別子の long 値。</param>
      <exception cref="T:System.ArgumentNullException" vsli:raw="&lt;paramref name=&quot;address&quot; /&gt; is &lt;see langword=&quot;null&quot; /&gt;.">
        <paramref name="address" /> が <see langword="null" />です。</exception>
      <exception cref="T:System.ArgumentException" vsli:raw="&lt;paramref name=&quot;address&quot; /&gt; contains a bad IP address.">
        <paramref name="address" /> には、不適切な IP アドレスが含まれています。</exception>
      <exception cref="T:System.ArgumentOutOfRangeException" vsli:raw="&lt;paramref name=&quot;scopeid&quot; /&gt; &amp;lt; 0 or&#xA;&#xA; &lt;paramref name=&quot;scopeid&quot; /&gt; &amp;gt; 0x00000000FFFFFFFF">
        <paramref name="scopeid" /> &lt; 0 または 
 <paramref name="scopeid" /> &gt; 0x00000000FFFFFFFF</exception>
    </member>
    <member name="M:System.Net.IPAddress.#ctor(System.Int64)">
      <summary vsli:raw="Initializes a new instance of the &lt;see cref=&quot;T:System.Net.IPAddress&quot; /&gt; class with the address specified as an &lt;see cref=&quot;T:System.Int64&quot; /&gt;.">
        <see cref="T:System.Net.IPAddress" /> として指定されたアドレスを使用して、<see cref="T:System.Int64" /> クラスの新しいインスタンスを初期化します。</summary>
      <param name="newAddress" vsli:raw="The long value of the IP address. For example, the value 0x2414188f in big-endian format would be the IP address &quot;143.24.20.36&quot;.">IP アドレスの long 値。 たとえば、ビッグ エンディアン形式の値 0x2414188f は、IP アドレス "143.24.20.36" になります。</param>
      <exception cref="T:System.ArgumentOutOfRangeException" vsli:raw="&lt;paramref name=&quot;newAddress&quot; /&gt; &amp;lt; 0 or&#xA;&#xA; &lt;paramref name=&quot;newAddress&quot; /&gt; &amp;gt; 0x00000000FFFFFFFF">
        <paramref name="newAddress" /> &lt; 0 または 
 <paramref name="newAddress" /> &gt; 0x00000000FFFFFFFF</exception>
    </member>
    <member name="M:System.Net.IPAddress.#ctor(System.ReadOnlySpan{System.Byte})">
      <summary vsli:raw="Initializes a new instance of the &lt;see cref=&quot;T:System.Net.IPAddress&quot; /&gt; class with the address specified as a byte span.">バイト スパンとして指定したアドレスを使用して、<see cref="T:System.Net.IPAddress" /> クラスの新しいインスタンスを初期化します。</summary>
      <param name="address" vsli:raw="The byte representation of the IP address, in network byte order, with the most significant byte first in index position 0.">最上位バイトが先頭のインデックス位置 0 になっているネットワーク バイト順での IP アドレスのバイト表現。</param>
      <exception cref="T:System.ArgumentException" vsli:raw="&lt;paramref name=&quot;address&quot; /&gt; contains a bad IP address.">
        <paramref name="address" /> には、不適切な IP アドレスが含まれています。</exception>
    </member>
    <member name="M:System.Net.IPAddress.#ctor(System.ReadOnlySpan{System.Byte},System.Int64)">
      <summary vsli:raw="Initializes a new instance of the &lt;see cref=&quot;T:System.Net.IPAddress&quot; /&gt; class with the address specified as a byte span and the specified scope identifier.">バイト スパンとして指定したアドレスおよび指定したスコープ ID を使用して、<see cref="T:System.Net.IPAddress" /> クラスの新しいインスタンスを初期化します。</summary>
      <param name="address" vsli:raw="The byte span value of the IP address.">IP アドレスのバイト スパン値。</param>
      <param name="scopeid" vsli:raw="The long value of the scope identifier.">スコープ識別子の long 値。</param>
      <exception cref="T:System.ArgumentException" vsli:raw="&lt;paramref name=&quot;address&quot; /&gt; contains a bad IP address.">
        <paramref name="address" /> には、不適切な IP アドレスが含まれています。</exception>
      <exception cref="T:System.ArgumentOutOfRangeException" vsli:raw="&lt;paramref name=&quot;scopeid&quot; /&gt; &amp;lt; 0&#xA;&#xA;-or-&#xA;&#xA;&lt;paramref name=&quot;scopeid&quot; /&gt; &amp;gt; 0x00000000FFFFFFFF">
        <paramref name="scopeid" /> &lt; 0

- または -

<paramref name="scopeid" /> &gt; 0x00000000FFFFFFFF</exception>
    </member>
    <member name="M:System.Net.IPAddress.Equals(System.Object)">
      <summary vsli:raw="Compares two IP addresses.">2 つの IP アドレスを比較します。</summary>
      <param name="comparand" vsli:raw="An &lt;see cref=&quot;T:System.Net.IPAddress&quot; /&gt; instance to compare to the current instance.">現在のインスタンスと比較する <see cref="T:System.Net.IPAddress" /> インスタンス。</param>
      <returns vsli:raw="&lt;see langword=&quot;true&quot; /&gt; if the two addresses are equal; otherwise, &lt;see langword=&quot;false&quot; /&gt;.">2 つのアドレスが等しい場合は <see langword="true" />。それ以外の場合は <see langword="false" />。</returns>
    </member>
    <member name="M:System.Net.IPAddress.GetAddressBytes">
      <summary vsli:raw="Provides a copy of the &lt;see cref=&quot;T:System.Net.IPAddress&quot; /&gt; as an array of bytes in network order.">
        <see cref="T:System.Net.IPAddress" /> のコピーをバイト配列として提供します。</summary>
      <returns vsli:raw="A &lt;see cref=&quot;T:System.Byte&quot; /&gt; array.">
        <see cref="T:System.Byte" /> 配列。</returns>
    </member>
    <member name="M:System.Net.IPAddress.GetHashCode">
      <summary vsli:raw="Returns a hash value for an IP address.">IP アドレスのハッシュ値を返します。</summary>
      <returns vsli:raw="An integer hash value.">整数ハッシュ値。</returns>
    </member>
    <member name="M:System.Net.IPAddress.HostToNetworkOrder(System.Int16)">
      <summary vsli:raw="Converts a short value from host byte order to network byte order.">short 値をホストのバイト順からネットワークのバイト順に変換します。</summary>
      <param name="host" vsli:raw="The number to convert, expressed in host byte order.">ホストのバイト順で表現される、変換する数値。</param>
      <returns vsli:raw="A short value, expressed in network byte order.">ネットワークのバイト順で表現される short 値。</returns>
    </member>
    <member name="M:System.Net.IPAddress.HostToNetworkOrder(System.Int32)">
      <summary vsli:raw="Converts an integer value from host byte order to network byte order.">整数値をホストのバイト順からネットワークのバイト順に変換します。</summary>
      <param name="host" vsli:raw="The number to convert, expressed in host byte order.">ホストのバイト順で表現される、変換する数値。</param>
      <returns vsli:raw="An integer value, expressed in network byte order.">ネットワークのバイト順で表現される整数値。</returns>
    </member>
    <member name="M:System.Net.IPAddress.HostToNetworkOrder(System.Int64)">
      <summary vsli:raw="Converts a long value from host byte order to network byte order.">long 値をホストのバイト順からネットワークのバイト順に変換します。</summary>
      <param name="host" vsli:raw="The number to convert, expressed in host byte order.">ホストのバイト順で表現される、変換する数値。</param>
      <returns vsli:raw="A long value, expressed in network byte order.">ネットワークのバイト順で表現される long 値。</returns>
    </member>
    <member name="M:System.Net.IPAddress.IsLoopback(System.Net.IPAddress)">
      <summary vsli:raw="Indicates whether the specified IP address is the loopback address.">指定した IP アドレスがループバック アドレスかどうかを示します。</summary>
      <param name="address" vsli:raw="An IP address.">IP アドレス。</param>
      <returns vsli:raw="&lt;see langword=&quot;true&quot; /&gt; if &lt;paramref name=&quot;address&quot; /&gt; is the loopback address; otherwise, &lt;see langword=&quot;false&quot; /&gt;.">
        <paramref name="address" /> がループバック アドレスの場合は <see langword="true" />。それ以外の場合は <see langword="false" />。</returns>
    </member>
    <member name="M:System.Net.IPAddress.MapToIPv4">
      <summary vsli:raw="Maps the &lt;see cref=&quot;T:System.Net.IPAddress&quot; /&gt; object to an IPv4 address.">
        <see cref="T:System.Net.IPAddress" /> オブジェクトを IPv4 アドレスにマップします。</summary>
      <returns vsli:raw="Returns &lt;see cref=&quot;T:System.Net.IPAddress&quot; /&gt;.&#xA;&#xA; An IPv4 address.">
        <see cref="T:System.Net.IPAddress" /> を返します。  
  
IPv4 アドレス。</returns>
    </member>
    <member name="M:System.Net.IPAddress.MapToIPv6">
      <summary vsli:raw="Maps the &lt;see cref=&quot;T:System.Net.IPAddress&quot; /&gt; object to an IPv6 address.">
        <see cref="T:System.Net.IPAddress" /> オブジェクトを IPv6 アドレスにマップします。</summary>
      <returns vsli:raw="Returns &lt;see cref=&quot;T:System.Net.IPAddress&quot; /&gt;.&#xA;&#xA; An IPv6 address.">
        <see cref="T:System.Net.IPAddress" /> を返します。  
  
IPv6 アドレス。</returns>
    </member>
    <member name="M:System.Net.IPAddress.NetworkToHostOrder(System.Int16)">
      <summary vsli:raw="Converts a short value from network byte order to host byte order.">short 値をネットワークのバイト順からホストのバイト順に変換します。</summary>
      <param name="network" vsli:raw="The number to convert, expressed in network byte order.">ネットワークのバイト順で表現される、変換する数値。</param>
      <returns vsli:raw="A short value, expressed in host byte order.">ホストのバイト順で表現される short 値。</returns>
    </member>
    <member name="M:System.Net.IPAddress.NetworkToHostOrder(System.Int32)">
      <summary vsli:raw="Converts an integer value from network byte order to host byte order.">整数値をネットワークのバイト順からホストのバイト順に変換します。</summary>
      <param name="network" vsli:raw="The number to convert, expressed in network byte order.">ネットワークのバイト順で表現される、変換する数値。</param>
      <returns vsli:raw="An integer value, expressed in host byte order.">ホストのバイト順で表現される整数値。</returns>
    </member>
    <member name="M:System.Net.IPAddress.NetworkToHostOrder(System.Int64)">
      <summary vsli:raw="Converts a long value from network byte order to host byte order.">long 値をネットワークのバイト順からホストのバイト順に変換します。</summary>
      <param name="network" vsli:raw="The number to convert, expressed in network byte order.">ネットワークのバイト順で表現される、変換する数値。</param>
      <returns vsli:raw="A long value, expressed in host byte order.">ホストのバイト順で表現される long 値。</returns>
    </member>
    <member name="M:System.Net.IPAddress.Parse(System.ReadOnlySpan{System.Char})">
      <summary vsli:raw="Converts an IP address represented as a character span to an &lt;see cref=&quot;T:System.Net.IPAddress&quot; /&gt; instance.">文字スパンとして表された IP アドレスを <see cref="T:System.Net.IPAddress" /> インスタンスに変換します。</summary>
      <param name="ipSpan" vsli:raw="A character span that contains an IP address in dotted-quad notation for IPv4 and in colon-hexadecimal notation for IPv6." />
      <exception cref="T:System.FormatException" vsli:raw="&lt;paramref name=&quot;ipString&quot; /&gt; is not a valid IP address.">
        <paramref name="ipString" /> が有効な IP アドレスではありません。</exception>
      <returns vsli:raw="The converted IP address.">変換後の IP アドレス。</returns>
    </member>
    <member name="M:System.Net.IPAddress.Parse(System.String)">
      <summary vsli:raw="Converts an IP address string to an &lt;see cref=&quot;T:System.Net.IPAddress&quot; /&gt; instance.">IP アドレス文字列を <see cref="T:System.Net.IPAddress" /> インスタンスに変換します。</summary>
      <param name="ipString" vsli:raw="A string that contains an IP address in dotted-quad notation for IPv4 and in colon-hexadecimal notation for IPv6.">ピリオド区切りの 10 進表記 (IPv4 の場合) またはコロン区切りの 16 進表記 (IPv6 の場合) で表された IP アドレスを格納している文字列。</param>
      <exception cref="T:System.ArgumentNullException" vsli:raw="&lt;paramref name=&quot;ipString&quot; /&gt; is &lt;see langword=&quot;null&quot; /&gt;.">
        <paramref name="ipString" /> が <see langword="null" />です。</exception>
      <exception cref="T:System.FormatException" vsli:raw="&lt;paramref name=&quot;ipString&quot; /&gt; is not a valid IP address.">
        <paramref name="ipString" /> が有効な IP アドレスではありません。</exception>
      <returns vsli:raw="An &lt;see cref=&quot;T:System.Net.IPAddress&quot; /&gt; instance.">
        <see cref="T:System.Net.IPAddress" /> インスタンス。</returns>
    </member>
    <member name="M:System.Net.IPAddress.ToString">
      <summary vsli:raw="Converts an Internet address to its standard notation.">インターネット アドレスを標準表記に変換します。</summary>
      <exception cref="T:System.Net.Sockets.SocketException" vsli:raw="The address family is &lt;see cref=&quot;F:System.Net.Sockets.AddressFamily.InterNetworkV6&quot; /&gt; and the address is bad.">アドレス ファミリが <see cref="F:System.Net.Sockets.AddressFamily.InterNetworkV6" /> であり、アドレスが正しくありません。</exception>
      <returns vsli:raw="A string that contains the IP address in either IPv4 dotted-quad or in IPv6 colon-hexadecimal notation.">ピリオド区切りの 10 進表記 (IPv4 の場合) またはコロン区切りの 16 進表記 (IPv6 の場合) の IP アドレスを格納している文字列。</returns>
    </member>
    <member name="M:System.Net.IPAddress.TryFormat(System.Span{System.Char},System.Int32@)">
      <summary vsli:raw="Tries to format the current IP address into the provided span.">指定したスパンへの現在の IP アドレスの書式設定を試みます。</summary>
      <param name="destination" vsli:raw="When this method returns, the IP address as a span of characters.">このメソッドから戻ったときは、文字のスパンとしての IP アドレス。</param>
      <param name="charsWritten" vsli:raw="When this method returns, the number of characters written into the span.">このメソッドが戻るときに、スパンに書き込まれる文字数。</param>
      <returns vsli:raw="&lt;see langword=&quot;true&quot; /&gt; if the formatting was successful; otherwise, &lt;see langword=&quot;false&quot; /&gt;.">書式設定が正常に実行された場合は <see langword="true" />。それ以外の場合は <see langword="false" />。</returns>
    </member>
    <member name="M:System.Net.IPAddress.TryParse(System.ReadOnlySpan{System.Char},System.Net.IPAddress@)">
      <summary vsli:raw="Tries to parse a span of characters into a value.">指定したバイト スパンが有効な IP アドレスを表しているかどうかを判定します。</summary>
      <param name="address" vsli:raw="When this method returns, the &lt;see cref=&quot;T:System.Net.IPAddress&quot; /&gt; version of the byte span.">このメソッドから戻ったときは、バイト スパンの <see cref="T:System.Net.IPAddress" /> バージョン。</param>
      <param name="ipSpan" vsli:raw="The byte span to parse." />
      <returns vsli:raw="&lt;see langword=&quot;true&quot; /&gt; if &lt;paramref name=&quot;ipSpan&quot; /&gt; was able to be parsed as an IP address; otherwise, &lt;see langword=&quot;false&quot; /&gt;.">
        <paramref name="ipString" /> を IP アドレスとして解析できた場合は <see langword="true" />。それ以外の場合は <see langword="false" />。</returns>
    </member>
    <member name="M:System.Net.IPAddress.TryParse(System.String,System.Net.IPAddress@)">
      <summary vsli:raw="Determines whether a string is a valid IP address.">文字列が有効な IP アドレスであるかどうかを判断します。</summary>
      <param name="ipString" vsli:raw="The string to parse.">検証対象の文字列。</param>
      <param name="address" vsli:raw="The &lt;see cref=&quot;T:System.Net.IPAddress&quot; /&gt; version of the string.">文字列の <see cref="T:System.Net.IPAddress" /> バージョン。</param>
      <exception cref="T:System.ArgumentNullException" vsli:raw="&lt;paramref name=&quot;ipString&quot; /&gt; is &lt;see langword=&quot;null&quot; /&gt;.">
        <paramref name="ipString" /> が null です。</exception>
      <returns vsli:raw="&lt;see langword=&quot;true&quot; /&gt; if &lt;paramref name=&quot;ipString&quot; /&gt; was able to be parsed as an IP address; otherwise, &lt;see langword=&quot;false&quot; /&gt;.">
        <paramref name="ipString" /> を IP アドレスとして解析できた場合は <see langword="true" />。それ以外の場合は <see langword="false" />。</returns>
    </member>
    <member name="M:System.Net.IPAddress.TryWriteBytes(System.Span{System.Byte},System.Int32@)">
      <summary vsli:raw="Tries to write the current IP address into a span of bytes in network order.">バイトのスパンへの現在の IP アドレスの書き込みを試みます。</summary>
      <param name="destination" vsli:raw="When this method returns, the IP address as a span of bytes.">このメソッドから戻ったときは、バイトのスパンとしての IP アドレス。</param>
      <param name="bytesWritten" vsli:raw="When this method returns, the number of bytes written into the span.">このメソッドから戻ったときは、スパンに書き込まれているバイト数。</param>
      <returns vsli:raw="&lt;see langword=&quot;true&quot; /&gt; if the IP address is successfully written to the given span; otherwise, &lt;see langword=&quot;false&quot; /&gt;.">指定したスパンに IP アドレスが正常に書き込まれた場合は <see langword="true" />。それ以外の場合は <see langword="false" />。</returns>
    </member>
    <member name="P:System.Net.IPAddress.Address">
      <summary vsli:raw="An Internet Protocol (IP) address.">インターネット プロトコル (IP) アドレス。</summary>
      <exception cref="T:System.Net.Sockets.SocketException" vsli:raw="The address family is &lt;see cref=&quot;F:System.Net.Sockets.AddressFamily.InterNetworkV6&quot; /&gt;.">アドレス ファミリが <see cref="F:System.Net.Sockets.AddressFamily.InterNetworkV6" /> です。</exception>
      <returns vsli:raw="The long value of the IP address.">IP アドレスの long 値。</returns>
    </member>
    <member name="P:System.Net.IPAddress.AddressFamily">
      <summary vsli:raw="Gets the address family of the IP address.">IP アドレスのアドレス ファミリを取得します。</summary>
      <returns vsli:raw="Returns &lt;see cref=&quot;F:System.Net.Sockets.AddressFamily.InterNetwork&quot; /&gt; for IPv4 or &lt;see cref=&quot;F:System.Net.Sockets.AddressFamily.InterNetworkV6&quot; /&gt; for IPv6.">IPv4 の場合は <see cref="F:System.Net.Sockets.AddressFamily.InterNetwork" />、IPv6 の場合は <see cref="F:System.Net.Sockets.AddressFamily.InterNetworkV6" /> を返します。</returns>
    </member>
    <member name="P:System.Net.IPAddress.IsIPv4MappedToIPv6">
      <summary vsli:raw="Gets whether the IP address is an IPv4-mapped IPv6 address.">IP アドレスが IPv4 でマップされた IPv6 アドレスであるかどうかを取得します。</summary>
      <returns vsli:raw="Returns &lt;see cref=&quot;T:System.Boolean&quot; /&gt;.&#xA;&#xA; &lt;see langword=&quot;true&quot; /&gt; if the IP address is an IPv4-mapped IPv6 address; otherwise, &lt;see langword=&quot;false&quot; /&gt;.">
        <see cref="T:System.Boolean" /> を返します。  
  
 IP アドレスが IPv4 でマップされた IPv6 アドレスである場合は <see langword="true" />。それ以外の場合は <see langword="false" />。</returns>
    </member>
    <member name="P:System.Net.IPAddress.IsIPv6LinkLocal">
      <summary vsli:raw="Gets whether the address is an IPv6 link local address.">アドレスが IPv6 リンクローカル アドレスであるかどうかを示す値を取得します。</summary>
      <returns vsli:raw="&lt;see langword=&quot;true&quot; /&gt; if the IP address is an IPv6 link local address; otherwise, &lt;see langword=&quot;false&quot; /&gt;.">IP アドレスが IPv6 リンクローカル アドレスである場合は <see langword="true" />。それ以外の場合は <see langword="false" />。</returns>
    </member>
    <member name="P:System.Net.IPAddress.IsIPv6Multicast">
      <summary vsli:raw="Gets whether the address is an IPv6 multicast global address.">アドレスが IPv6 マルチキャスト グローバル アドレスであるかどうかを示す値を取得します。</summary>
      <returns vsli:raw="&lt;see langword=&quot;true&quot; /&gt; if the IP address is an IPv6 multicast global address; otherwise, &lt;see langword=&quot;false&quot; /&gt;.">IP アドレスが IPv6 マルチキャスト グローバル アドレスである場合は <see langword="true" />。それ以外の場合は <see langword="false" />。</returns>
    </member>
    <member name="P:System.Net.IPAddress.IsIPv6SiteLocal">
      <summary vsli:raw="Gets whether the address is an IPv6 site local address.">アドレスが IPv6 サイトローカル アドレスであるかどうかを示す値を取得します。</summary>
      <returns vsli:raw="&lt;see langword=&quot;true&quot; /&gt; if the IP address is an IPv6 site local address; otherwise, &lt;see langword=&quot;false&quot; /&gt;.">IP アドレスが IPv6 サイトローカル アドレスである場合は <see langword="true" />。それ以外の場合は <see langword="false" />。</returns>
    </member>
    <member name="P:System.Net.IPAddress.IsIPv6Teredo">
      <summary vsli:raw="Gets whether the address is an IPv6 Teredo address.">アドレスが IPv6 Teredo アドレスであるかどうかを示す値を取得します。</summary>
      <returns vsli:raw="&lt;see langword=&quot;true&quot; /&gt; if the IP address is an IPv6 Teredo address; otherwise, &lt;see langword=&quot;false&quot; /&gt;.">IP アドレスが IPv6 Teredo アドレスである場合は <see langword="true" />。それ以外の場合は <see langword="false" />。</returns>
    </member>
    <member name="P:System.Net.IPAddress.ScopeId">
      <summary vsli:raw="Gets or sets the IPv6 address scope identifier.">IPv6 アドレスのスコープ識別子を取得または設定します。</summary>
      <exception cref="T:System.Net.Sockets.SocketException" vsli:raw="&lt;see langword=&quot;AddressFamily&quot; /&gt; = &lt;see langword=&quot;InterNetwork&quot; /&gt;.">
        <see langword="AddressFamily" /> = <see langword="InterNetwork" />.</exception>
      <exception cref="T:System.ArgumentOutOfRangeException" vsli:raw="&lt;paramref name=&quot;scopeId&quot; /&gt; &amp;lt; 0&#xA;&#xA;-or-&#xA;&#xA;&lt;paramref name=&quot;scopeId&quot; /&gt; &amp;gt; 0x00000000FFFFFFFF">
        <paramref name="scopeId" /> &lt; 0 
- または - 
<paramref name="scopeId" /> &gt; 0x00000000FFFFFFFF</exception>
      <returns vsli:raw="A long integer that specifies the scope of the address.">アドレスのスコープを指定する長整数。</returns>
    </member>
    <member name="T:System.Net.IPEndPoint">
      <summary vsli:raw="Represents a network endpoint as an IP address and a port number.">ネットワーク エンドポイントを、IP アドレスとポート番号として表します。</summary>
    </member>
    <member name="F:System.Net.IPEndPoint.MaxPort">
      <summary vsli:raw="Specifies the maximum value that can be assigned to the &lt;see cref=&quot;P:System.Net.IPEndPoint.Port&quot; /&gt; property. The MaxPort value is set to 0x0000FFFF. This field is read-only.">
        <see cref="P:System.Net.IPEndPoint.Port" /> プロパティに割り当てることができる最大値を指定します。 MaxPort 値は、0x0000FFFF に設定されます。 このフィールドは読み取り専用です。</summary>
    </member>
    <member name="F:System.Net.IPEndPoint.MinPort">
      <summary vsli:raw="Specifies the minimum value that can be assigned to the &lt;see cref=&quot;P:System.Net.IPEndPoint.Port&quot; /&gt; property. This field is read-only.">
        <see cref="P:System.Net.IPEndPoint.Port" /> プロパティに割り当てることができる最小値を指定します。 このフィールドは読み取り専用です。</summary>
    </member>
    <member name="M:System.Net.IPEndPoint.#ctor(System.Int64,System.Int32)">
      <summary vsli:raw="Initializes a new instance of the &lt;see cref=&quot;T:System.Net.IPEndPoint&quot; /&gt; class with the specified address and port number.">指定したアドレスとポート番号を使用して、<see cref="T:System.Net.IPEndPoint" /> クラスの新しいインスタンスを初期化します。</summary>
      <param name="address" vsli:raw="The IP address of the Internet host. For example, the value 0x2414188f in big-endian format would be the IP address &quot;143.24.20.36&quot;.">インターネット ホストの IP アドレス。 たとえば、ビッグ エンディアン形式の値 0x2414188f は、IP アドレス "143.24.20.36" になります。</param>
      <param name="port" vsli:raw="The port number associated with the &lt;paramref name=&quot;address&quot; /&gt;, or 0 to specify any available port. &lt;paramref name=&quot;port&quot; /&gt; is in host order.">
        <paramref name="address" /> に関連付けられているポート番号。または、使用できる任意のポートを指定する場合は 0。 <paramref name="port" /> は、ホスト順です。</param>
      <exception cref="T:System.ArgumentOutOfRangeException" vsli:raw="&lt;paramref name=&quot;port&quot; /&gt; is less than &lt;see cref=&quot;F:System.Net.IPEndPoint.MinPort&quot; /&gt;.  &#xA;  &#xA; -or-  &#xA;  &#xA; &lt;paramref name=&quot;port&quot; /&gt; is greater than &lt;see cref=&quot;F:System.Net.IPEndPoint.MaxPort&quot; /&gt;.  &#xA;  &#xA; -or-  &#xA;  &#xA; &lt;paramref name=&quot;address&quot; /&gt; is less than 0 or greater than 0x00000000FFFFFFFF.">
        <paramref name="port" /> は <see cref="F:System.Net.IPEndPoint.MinPort" /> より小さい値です。  
  
- または - 
 <paramref name="port" /> が <see cref="F:System.Net.IPEndPoint.MaxPort" /> より大きくなっています。  
  
- または - 
 <paramref name="address" /> が 0 未満か、0x00000000FFFFFFFF よりも大きい値です。</exception>
    </member>
    <member name="M:System.Net.IPEndPoint.#ctor(System.Net.IPAddress,System.Int32)">
      <summary vsli:raw="Initializes a new instance of the &lt;see cref=&quot;T:System.Net.IPEndPoint&quot; /&gt; class with the specified address and port number.">指定したアドレスとポート番号を使用して、<see cref="T:System.Net.IPEndPoint" /> クラスの新しいインスタンスを初期化します。</summary>
      <param name="address" vsli:raw="An &lt;see cref=&quot;T:System.Net.IPAddress&quot; /&gt;.">
        <see cref="T:System.Net.IPAddress" />。</param>
      <param name="port" vsli:raw="The port number associated with the &lt;paramref name=&quot;address&quot; /&gt;, or 0 to specify any available port. &lt;paramref name=&quot;port&quot; /&gt; is in host order.">
        <paramref name="address" /> に関連付けられているポート番号。または、使用できる任意のポートを指定する場合は 0。 <paramref name="port" /> は、ホスト順です。</param>
      <exception cref="T:System.ArgumentNullException" vsli:raw="&lt;paramref name=&quot;address&quot; /&gt; is &lt;see langword=&quot;null&quot; /&gt;.">
        <paramref name="address" /> が <see langword="null" />です。</exception>
      <exception cref="T:System.ArgumentOutOfRangeException" vsli:raw="&lt;paramref name=&quot;port&quot; /&gt; is less than &lt;see cref=&quot;F:System.Net.IPEndPoint.MinPort&quot; /&gt;.  &#xA;  &#xA; -or-  &#xA;  &#xA; &lt;paramref name=&quot;port&quot; /&gt; is greater than &lt;see cref=&quot;F:System.Net.IPEndPoint.MaxPort&quot; /&gt;.">
        <paramref name="port" /> は <see cref="F:System.Net.IPEndPoint.MinPort" /> より小さい値です。  
  
- または - 
 <paramref name="port" /> が <see cref="F:System.Net.IPEndPoint.MaxPort" /> より大きくなっています。  
  
- または - 
 <paramref name="address" /> が 0 未満か、0x00000000FFFFFFFF よりも大きい値です。</exception>
    </member>
    <member name="M:System.Net.IPEndPoint.Create(System.Net.SocketAddress)">
      <summary vsli:raw="Creates an endpoint from a socket address.">ソケット アドレスからエンドポイントを作成します。</summary>
      <param name="socketAddress" vsli:raw="The &lt;see cref=&quot;T:System.Net.SocketAddress&quot; /&gt; to use for the endpoint.">エンドポイントで使用する <see cref="T:System.Net.SocketAddress" />。</param>
      <exception cref="T:System.ArgumentException" vsli:raw="The AddressFamily of &lt;paramref name=&quot;socketAddress&quot; /&gt; is not equal to the AddressFamily of the current instance.  &#xA;  &#xA; -or-  &#xA;  &#xA; &lt;paramref name=&quot;socketAddress&quot; /&gt;.Size &amp;lt; 8.">
        <paramref name="socketAddress" /> の AddressFamily は、現在のインスタンスの AddressFamily と同じではありません。  
  
- または - 
 <paramref name="socketAddress" />.Size &lt; 8。</exception>
      <returns vsli:raw="An &lt;see cref=&quot;T:System.Net.EndPoint&quot; /&gt; instance using the specified socket address.">指定したソケット アドレスを使用する <see cref="T:System.Net.EndPoint" /> インスタンス。</returns>
    </member>
    <member name="M:System.Net.IPEndPoint.Equals(System.Object)">
      <summary vsli:raw="Determines whether the specified &lt;see cref=&quot;T:System.Object&quot; /&gt; is equal to the current &lt;see cref=&quot;T:System.Object&quot; /&gt;.">指定した <see cref="T:System.Object" /> が現在の <see cref="T:System.Object" /> と等しいかどうかを示します。</summary>
      <param name="comparand" vsli:raw="The &lt;see cref=&quot;T:System.Object&quot; /&gt; to compare with the current &lt;see cref=&quot;T:System.Object&quot; /&gt;.">現在の <see cref="T:System.Object" /> と比較する <see cref="T:System.Object" />。</param>
      <returns vsli:raw="&lt;see langword=&quot;true&quot; /&gt; if the specified &lt;see cref=&quot;T:System.Object&quot; /&gt; is equal to the current &lt;see cref=&quot;T:System.Object&quot; /&gt;; otherwise, &lt;see langword=&quot;false&quot; /&gt;.">指定した <see langword="true" /> が現在の <see cref="T:System.Object" /> と等しい場合は <see cref="T:System.Object" />。それ以外の場合は <see langword="false" />。</returns>
    </member>
    <member name="M:System.Net.IPEndPoint.GetHashCode">
      <summary vsli:raw="Returns a hash value for a &lt;see cref=&quot;T:System.Net.IPEndPoint&quot; /&gt; instance.">
        <see cref="T:System.Net.IPEndPoint" /> インスタンスのハッシュ値を返します。</summary>
      <returns vsli:raw="An integer hash value.">整数ハッシュ値。</returns>
    </member>
    <member name="M:System.Net.IPEndPoint.Parse(System.ReadOnlySpan{System.Char})">
      <summary vsli:raw="Converts an IP network endpoint (address and port) represented as a read-only span to an &lt;see cref=&quot;T:System.Net.IPEndPoint&quot; /&gt; instance.">読み取り専用スパンとして表される IP ネットワーク エンドポイント (アドレスとポート) を <see cref="T:System.Net.IPEndPoint" /> インスタンスに変換します。</summary>
      <param name="s" vsli:raw="A read-only span that contains an IP endpoint in dotted-quad notation or network byte order for IPv4 and in colon-hexadecimal notation for IPv6.">IPv4 の場合はドット区切りの 10 進表記またはネットワークのバイト順、IPv6 の場合はコロン区切りの 16 進表記の IP エンドポイントが格納されている読み取り専用スパン。</param>
      <exception cref="T:System.ArgumentNullException" vsli:raw="&lt;paramref name=&quot;s&quot; /&gt; is &lt;see langword=&quot;null&quot; /&gt;.">
        <paramref name="s" /> が <see langword="null" />です。</exception>
      <exception cref="T:System.FormatException" vsli:raw="&lt;paramref name=&quot;s&quot; /&gt; is not a valid IP endpoint.">
        <paramref name="s" /> が有効な IP エンドポイントではありません。</exception>
      <returns vsli:raw="The object representation of an IP network endpoint.">IP ネットワーク エンドポイントのオブジェクト表現。</returns>
    </member>
    <member name="M:System.Net.IPEndPoint.Parse(System.String)">
      <summary vsli:raw="Converts an IP network endpoint (address and port) represented as a string to an &lt;see cref=&quot;T:System.Net.IPEndPoint&quot; /&gt; instance.">文字列として表される IP ネットワーク エンドポイント (アドレスとポート) を <see cref="T:System.Net.IPEndPoint" /> インスタンスに変換します。</summary>
      <param name="s" vsli:raw="A string that contains an IP endpoint in dotted-quad notation or network byte order for IPv4 and in colon-hexadecimal notation for IPv6.">IPv4 の場合はドット区切りの 10 進表記またはネットワークのバイト順、IPv6 の場合はコロン区切りの 16 進表記の IP エンドポイントが格納されている文字列。</param>
      <exception cref="T:System.ArgumentNullException" vsli:raw="&lt;paramref name=&quot;s&quot; /&gt; is &lt;see langword=&quot;null&quot; /&gt;.">
        <paramref name="s" /> が <see langword="null" />です。</exception>
      <exception cref="T:System.FormatException" vsli:raw="&lt;paramref name=&quot;s&quot; /&gt; is not a valid IP endpoint.">
        <paramref name="s" /> が有効な IP エンドポイントではありません。</exception>
      <returns vsli:raw="The object representation of an IP network endpoint.">IP ネットワーク エンドポイントのオブジェクト表現。</returns>
    </member>
    <member name="M:System.Net.IPEndPoint.Serialize">
      <summary vsli:raw="Serializes endpoint information into a &lt;see cref=&quot;T:System.Net.SocketAddress&quot; /&gt; instance.">
        <see cref="T:System.Net.SocketAddress" /> インスタンスに対してエンドポイント情報をシリアル化します。</summary>
      <returns vsli:raw="A &lt;see cref=&quot;T:System.Net.SocketAddress&quot; /&gt; instance containing the socket address for the endpoint.">エンドポイントのソケット アドレスを格納する <see cref="T:System.Net.SocketAddress" /> インスタンス。</returns>
    </member>
    <member name="M:System.Net.IPEndPoint.ToString">
      <summary vsli:raw="Returns the IP address and port number of the specified endpoint.">指定したエンドポイントの IP アドレスとポート番号を返します。</summary>
      <returns vsli:raw="A string containing the IP address and the port number of the specified endpoint (for example, 192.168.1.2:80).">192.168.1.2:80 などの指定したエンドポイントの IP アドレスとポート番号を格納する文字列。</returns>
    </member>
    <member name="M:System.Net.IPEndPoint.TryParse(System.ReadOnlySpan{System.Char},System.Net.IPEndPoint@)">
      <summary vsli:raw="Tries to convert an IP network endpoint (address and port) represented as a read-only span to its &lt;see cref=&quot;T:System.Net.IPEndPoint&quot; /&gt; equivalent, and returns a value that indicates whether the conversion succeeded.">読み取り専用スパンとして表される IP ネットワーク エンドポイント (アドレスとポート) からその同等の <see cref="T:System.Net.IPEndPoint" /> への変換を試行し、変換に成功したかどうかを示す値を返します。</summary>
      <param name="s" vsli:raw="The IP endpoint to validate.">検証する IP エンドポイント。</param>
      <param name="result" vsli:raw="When this method returns, the &lt;see cref=&quot;T:System.Net.IPEndPoint&quot; /&gt; version of &lt;paramref name=&quot;s&quot; /&gt;.">このメソッドから制御が戻るときの、<paramref name="s" /> の <see cref="T:System.Net.IPEndPoint" /> バージョン。</param>
      <returns vsli:raw="&lt;see langword=&quot;true&quot; /&gt; if &lt;paramref name=&quot;s&quot; /&gt; can be parsed as an IP endpoint; otherwise, &lt;see langword=&quot;false&quot; /&gt;.">
        <paramref name="s" /> を IP エンドポイントとして解析できる場合は <see langword="true" />。それ以外の場合は <see langword="false" />。</returns>
    </member>
    <member name="M:System.Net.IPEndPoint.TryParse(System.String,System.Net.IPEndPoint@)">
      <summary vsli:raw="Tries to convert an IP network endpoint (address and port) represented as a string to its &lt;see cref=&quot;T:System.Net.IPEndPoint&quot; /&gt; equivalent, and returns a value that indicates whether the conversion succeeded.">文字列として表される IP ネットワーク エンドポイント (アドレスとポート) からその同等の <see cref="T:System.Net.IPEndPoint" /> への変換を試行し、変換に成功したかどうかを示す値を返します。</summary>
      <param name="s" vsli:raw="The IP endpoint to validate.">検証する IP エンドポイント。</param>
      <param name="result" vsli:raw="When this method returns, the &lt;see cref=&quot;T:System.Net.IPEndPoint&quot; /&gt; version of &lt;paramref name=&quot;s&quot; /&gt;.">このメソッドから制御が戻るときの、<paramref name="s" /> の <see cref="T:System.Net.IPEndPoint" /> バージョン。</param>
      <returns vsli:raw="&lt;see langword=&quot;true&quot; /&gt; if &lt;paramref name=&quot;s&quot; /&gt; can be parsed as an IP endpoint; otherwise, &lt;see langword=&quot;false&quot; /&gt;.">
        <paramref name="s" /> を IP エンドポイントとして解析できる場合は <see langword="true" />。それ以外の場合は <see langword="false" />。</returns>
    </member>
    <member name="P:System.Net.IPEndPoint.Address">
      <summary vsli:raw="Gets or sets the IP address of the endpoint.">エンドポイントの IP アドレスを取得または設定します。</summary>
      <returns vsli:raw="An &lt;see cref=&quot;T:System.Net.IPAddress&quot; /&gt; instance containing the IP address of the endpoint.">エンドポイントの IP アドレスを格納する <see cref="T:System.Net.IPAddress" /> インスタンス。</returns>
    </member>
    <member name="P:System.Net.IPEndPoint.AddressFamily">
      <summary vsli:raw="Gets the Internet Protocol (IP) address family.">インターネット プロトコル (IP: Internet Protocol) アドレス ファミリを取得します。</summary>
      <returns vsli:raw="Returns &lt;see cref=&quot;F:System.Net.Sockets.AddressFamily.InterNetwork&quot; /&gt;.">
        <see cref="F:System.Net.Sockets.AddressFamily.InterNetwork" /> を返します。</returns>
    </member>
    <member name="P:System.Net.IPEndPoint.Port">
      <summary vsli:raw="Gets or sets the port number of the endpoint.">エンドポイントのポート番号を取得または設定します。</summary>
      <exception cref="T:System.ArgumentOutOfRangeException" vsli:raw="The value that was specified for a set operation is less than &lt;see cref=&quot;F:System.Net.IPEndPoint.MinPort&quot; /&gt; or greater than &lt;see cref=&quot;F:System.Net.IPEndPoint.MaxPort&quot; /&gt;.">set 操作に指定された値が <see cref="F:System.Net.IPEndPoint.MinPort" /> より小さいか、<see cref="F:System.Net.IPEndPoint.MaxPort" /> を超えています。</exception>
      <returns vsli:raw="An integer value in the range &lt;see cref=&quot;F:System.Net.IPEndPoint.MinPort&quot; /&gt; to &lt;see cref=&quot;F:System.Net.IPEndPoint.MaxPort&quot; /&gt; indicating the port number of the endpoint.">エンドポイントのポート番号を示す <see cref="F:System.Net.IPEndPoint.MinPort" /> ～ <see cref="F:System.Net.IPEndPoint.MaxPort" /> の範囲の整数値。</returns>
    </member>
    <member name="T:System.Net.IWebProxy">
      <summary vsli:raw="Provides the base interface for implementation of proxy access for the &lt;see cref=&quot;T:System.Net.Http.HttpClient&quot; /&gt; class.">
        <see cref="T:System.Net.WebRequest" /> クラスのプロキシ アクセスの実装用に基本インターフェイスを提供します。</summary>
    </member>
    <member name="M:System.Net.IWebProxy.GetProxy(System.Uri)">
      <summary vsli:raw="Returns the URI of a proxy.">プロキシの URI を返します。</summary>
      <param name="destination" vsli:raw="A &lt;see cref=&quot;T:System.Uri&quot; /&gt; that specifies the requested Internet resource.">要求されたインターネット リソースを指定する <see cref="T:System.Uri" />。</param>
      <returns vsli:raw="A &lt;see cref=&quot;T:System.Uri&quot; /&gt; instance that contains the URI of the proxy used to contact &lt;paramref name=&quot;destination&quot; /&gt;; otherwise null or &lt;paramref name=&quot;destination&quot; /&gt; itself.">
        <paramref name="destination" /> と通信するために使用するプロキシの URI を格納している <see cref="T:System.Uri" /> インスタンス。</returns>
    </member>
    <member name="M:System.Net.IWebProxy.IsBypassed(System.Uri)">
      <summary vsli:raw="Indicates that the proxy should not be used for the specified host.">指定したホストでプロキシを使用しないことを示します。</summary>
      <param name="host" vsli:raw="The &lt;see cref=&quot;T:System.Uri&quot; /&gt; of the host to check for proxy use.">プロキシの使用を確認するホストの <see cref="T:System.Uri" />。</param>
      <returns vsli:raw="&lt;see langword=&quot;true&quot; /&gt; if the proxy server should not be used for &lt;paramref name=&quot;host&quot; /&gt;; otherwise, &lt;see langword=&quot;false&quot; /&gt;.">
        <paramref name="host" /> でプロキシ サーバーを使用しない場合は <see langword="true" />。それ以外の場合は <see langword="false" />。</returns>
    </member>
    <member name="P:System.Net.IWebProxy.Credentials">
      <summary vsli:raw="The credentials to submit to the proxy server for authentication.">認証用にプロキシ サーバーに送信する資格情報。</summary>
      <returns vsli:raw="An &lt;see cref=&quot;T:System.Net.ICredentials&quot; /&gt; instance that contains the credentials that are needed to authenticate a request to the proxy server.">プロキシ サーバーへの要求を認証するために必要な資格情報を格納している <see cref="T:System.Net.ICredentials" /> インスタンス。</returns>
    </member>
    <member name="T:System.Net.NetworkCredential">
      <summary vsli:raw="Provides credentials for password-based authentication schemes such as basic, digest, NTLM, and Kerberos authentication.">基本認証、ダイジェスト認証、NTLM 認証、および Kerberos 認証などのパスワード ベースの認証スキームの資格情報を提供します。</summary>
    </member>
    <member name="M:System.Net.NetworkCredential.#ctor">
      <summary vsli:raw="Initializes a new instance of the &lt;see cref=&quot;T:System.Net.NetworkCredential&quot; /&gt; class.">
        <see cref="T:System.Net.NetworkCredential" /> クラスの新しいインスタンスを初期化します。</summary>
    </member>
    <member name="M:System.Net.NetworkCredential.#ctor(System.String,System.Security.SecureString)">
      <summary vsli:raw="Initializes a new instance of the &lt;see cref=&quot;T:System.Net.NetworkCredential&quot; /&gt; class with the specified user name and password.">指定したユーザー名とパスワードを使用して、<see cref="T:System.Net.NetworkCredential" /> クラスの新しいインスタンスを初期化します。</summary>
      <param name="userName" vsli:raw="The user name associated with the credentials.">資格情報に関連付けられているユーザー名。</param>
      <param name="password" vsli:raw="The password for the user name associated with the credentials.">資格情報に関連付けられているユーザー名に対応するパスワード。</param>
      <exception cref="T:System.NotSupportedException" vsli:raw="The &lt;see cref=&quot;T:System.Security.SecureString&quot; /&gt; class is not supported on this platform.">
        <see cref="T:System.Security.SecureString" /> クラスは、このプラットフォームではサポートされていません。</exception>
    </member>
    <member name="M:System.Net.NetworkCredential.#ctor(System.String,System.Security.SecureString,System.String)">
      <summary vsli:raw="Initializes a new instance of the &lt;see cref=&quot;T:System.Net.NetworkCredential&quot; /&gt; class with the specified user name, password, and domain.">指定したユーザー名、パスワード、ドメインを使用して、<see cref="T:System.Net.NetworkCredential" /> クラスの新しいインスタンスを初期化します。</summary>
      <param name="userName" vsli:raw="The user name associated with the credentials.">資格情報に関連付けられているユーザー名。</param>
      <param name="password" vsli:raw="The password for the user name associated with the credentials.">資格情報に関連付けられているユーザー名に対応するパスワード。</param>
      <param name="domain" vsli:raw="The domain associated with these credentials.">これらの資格情報に関連付けられているドメイン。</param>
      <exception cref="T:System.NotSupportedException" vsli:raw="The &lt;see cref=&quot;T:System.Security.SecureString&quot; /&gt; class is not supported on this platform.">
        <see cref="T:System.Security.SecureString" /> クラスは、このプラットフォームではサポートされていません。</exception>
    </member>
    <member name="M:System.Net.NetworkCredential.#ctor(System.String,System.String)">
      <summary vsli:raw="Initializes a new instance of the &lt;see cref=&quot;T:System.Net.NetworkCredential&quot; /&gt; class with the specified user name and password.">指定したユーザー名とパスワードを使用して、<see cref="T:System.Net.NetworkCredential" /> クラスの新しいインスタンスを初期化します。</summary>
      <param name="userName" vsli:raw="The user name associated with the credentials.">資格情報に関連付けられているユーザー名。</param>
      <param name="password" vsli:raw="The password for the user name associated with the credentials.">資格情報に関連付けられているユーザー名に対応するパスワード。</param>
    </member>
    <member name="M:System.Net.NetworkCredential.#ctor(System.String,System.String,System.String)">
      <summary vsli:raw="Initializes a new instance of the &lt;see cref=&quot;T:System.Net.NetworkCredential&quot; /&gt; class with the specified user name, password, and domain.">指定したユーザー名、パスワード、ドメインを使用して、<see cref="T:System.Net.NetworkCredential" /> クラスの新しいインスタンスを初期化します。</summary>
      <param name="userName" vsli:raw="The user name associated with the credentials.">資格情報に関連付けられているユーザー名。</param>
      <param name="password" vsli:raw="The password for the user name associated with the credentials.">資格情報に関連付けられているユーザー名に対応するパスワード。</param>
      <param name="domain" vsli:raw="The domain associated with these credentials.">これらの資格情報に関連付けられているドメイン。</param>
    </member>
    <member name="M:System.Net.NetworkCredential.GetCredential(System.String,System.Int32,System.String)">
      <summary vsli:raw="Returns an instance of the &lt;see cref=&quot;T:System.Net.NetworkCredential&quot; /&gt; class for the specified host, port, and authentication type.">指定したホスト、ポート、および認証の種類用に <see cref="T:System.Net.NetworkCredential" /> クラスのインスタンスを返します。</summary>
      <param name="host" vsli:raw="The host computer that authenticates the client.">クライアントを認証するホスト コンピューター。</param>
      <param name="port" vsli:raw="The port on the &lt;paramref name=&quot;host&quot; /&gt; that the client communicates with.">クライアントが通信する <paramref name="host" /> 上のポート。</param>
      <param name="authenticationType" vsli:raw="The type of authentication requested, as defined in the &lt;see cref=&quot;P:System.Net.IAuthenticationModule.AuthenticationType&quot; /&gt; property.">
        <see cref="P:System.Net.IAuthenticationModule.AuthenticationType" /> プロパティの定義に従って要求された認証の種類。</param>
      <returns vsli:raw="A &lt;see cref=&quot;T:System.Net.NetworkCredential&quot; /&gt; for the specified host, port, and authentication protocol, or &lt;see langword=&quot;null&quot; /&gt; if there are no credentials available for the specified host, port, and authentication protocol.">指定したホスト、ポート、認証プロトコル用の <see cref="T:System.Net.NetworkCredential" />。指定したホスト、ポート、認証プロトコル用に使用できる資格情報がない場合は <see langword="null" />。</returns>
    </member>
    <member name="M:System.Net.NetworkCredential.GetCredential(System.Uri,System.String)">
      <summary vsli:raw="Returns an instance of the &lt;see cref=&quot;T:System.Net.NetworkCredential&quot; /&gt; class for the specified Uniform Resource Identifier (URI) and authentication type.">指定された URI (Uniform Resource Identifier) と認証の種類について、<see cref="T:System.Net.NetworkCredential" /> クラスのインスタンスを返します。</summary>
      <param name="uri" vsli:raw="The URI that the client provides authentication for.">クライアントが認証を提供する URI。</param>
      <param name="authenticationType" vsli:raw="" />
      <returns vsli:raw="A &lt;see cref=&quot;T:System.Net.NetworkCredential&quot; /&gt; object.">
        <see cref="T:System.Net.NetworkCredential" /> オブジェクト。</returns>
    </member>
    <member name="P:System.Net.NetworkCredential.Domain">
      <summary vsli:raw="Gets or sets the domain or computer name that verifies the credentials.">資格情報を検証するドメインまたはコンピューター名を取得または設定します。</summary>
      <returns vsli:raw="The name of the domain associated with the credentials.">資格情報に関連付けられているドメインの名前。</returns>
    </member>
    <member name="P:System.Net.NetworkCredential.Password">
      <summary vsli:raw="Gets or sets the password for the user name associated with the credentials.">資格情報に関連付けられているユーザー名に対応するパスワードを取得または設定します。</summary>
      <returns vsli:raw="The password associated with the credentials. If this &lt;see cref=&quot;T:System.Net.NetworkCredential&quot; /&gt; instance was initialized with the &lt;paramref name=&quot;password&quot; /&gt; parameter set to &lt;see langword=&quot;null&quot; /&gt;, then the &lt;see cref=&quot;P:System.Net.NetworkCredential.Password&quot; /&gt; property will return an empty string.">資格情報に関連付けられているパスワードです。 この <see cref="T:System.Net.NetworkCredential" /> インスタンスが、<see langword="null" /> に設定された <paramref name="password" /> パラメーターを使用して初期化された場合、<see cref="P:System.Net.NetworkCredential.Password" /> プロパティは空の文字列を返します。</returns>
    </member>
    <member name="P:System.Net.NetworkCredential.SecurePassword">
      <summary vsli:raw="Gets or sets the password as a &lt;see cref=&quot;T:System.Security.SecureString&quot; /&gt; instance.">パスワードを <see cref="T:System.Security.SecureString" /> インスタンスとして取得または設定します。</summary>
      <exception cref="T:System.NotSupportedException" vsli:raw="The &lt;see cref=&quot;T:System.Security.SecureString&quot; /&gt; class is not supported on this platform.">
        <see cref="T:System.Security.SecureString" /> クラスは、このプラットフォームではサポートされていません。</exception>
      <returns vsli:raw="The password for the user name associated with the credentials.">資格情報に関連付けられているユーザー名に対応するパスワード。</returns>
    </member>
    <member name="P:System.Net.NetworkCredential.UserName">
      <summary vsli:raw="Gets or sets the user name associated with the credentials.">資格情報に関連付けられているユーザー名を取得または設定します。</summary>
      <returns vsli:raw="The user name associated with the credentials.">資格情報に関連付けられているユーザー名。</returns>
    </member>
    <member name="T:System.Net.NetworkInformation.IPAddressCollection">
      <summary vsli:raw="Stores a set of &lt;see cref=&quot;T:System.Net.IPAddress&quot; /&gt; types.">
        <see cref="T:System.Net.IPAddress" /> 型のセットを格納します。</summary>
    </member>
    <member name="M:System.Net.NetworkInformation.IPAddressCollection.#ctor">
      <summary vsli:raw="Initializes a new instance of the &lt;see cref=&quot;T:System.Net.NetworkInformation.IPAddressCollection&quot; /&gt; class.">
        <see cref="T:System.Net.NetworkInformation.IPAddressCollection" /> クラスの新しいインスタンスを初期化します。</summary>
    </member>
    <member name="M:System.Net.NetworkInformation.IPAddressCollection.Add(System.Net.IPAddress)">
      <summary vsli:raw="Throws a &lt;see cref=&quot;T:System.NotSupportedException&quot; /&gt; because this operation is not supported for this collection.">この操作は、このコレクションではサポートされていないため、<see cref="T:System.NotSupportedException" /> がスローされます。</summary>
      <param name="address" vsli:raw="The object to be added to the collection.">コレクションに追加するオブジェクト。</param>
    </member>
    <member name="M:System.Net.NetworkInformation.IPAddressCollection.Clear">
      <summary vsli:raw="Throws a &lt;see cref=&quot;T:System.NotSupportedException&quot; /&gt; because this operation is not supported for this collection.">この操作は、このコレクションではサポートされていないため、<see cref="T:System.NotSupportedException" /> がスローされます。</summary>
    </member>
    <member name="M:System.Net.NetworkInformation.IPAddressCollection.Contains(System.Net.IPAddress)">
      <summary vsli:raw="Checks whether the collection contains the specified &lt;see cref=&quot;T:System.Net.IPAddress&quot; /&gt; object.">指定した <see cref="T:System.Net.IPAddress" /> オブジェクトがコレクションに格納されているかどうかを確認します。</summary>
      <param name="address" vsli:raw="The &lt;see cref=&quot;T:System.Net.IPAddress&quot; /&gt; object to be searched in the collection.">このコレクション内で検索される <see cref="T:System.Net.IPAddress" /> オブジェクト。</param>
      <returns vsli:raw="&lt;see langword=&quot;true&quot; /&gt; if the &lt;see cref=&quot;T:System.Net.IPAddress&quot; /&gt; object exists in the collection; otherwise, &lt;see langword=&quot;false&quot; /&gt;.">
        <see cref="T:System.Net.IPAddress" /> オブジェクトがコレクション内に存在する場合は <see langword="true" />。それ以外の場合は <see langword="false" />。</returns>
    </member>
    <member name="M:System.Net.NetworkInformation.IPAddressCollection.CopyTo(System.Net.IPAddress[],System.Int32)">
      <summary vsli:raw="Copies the elements in this collection to a one-dimensional array of type &lt;see cref=&quot;T:System.Net.IPAddress&quot; /&gt;.">このコレクション内の要素を <see cref="T:System.Net.IPAddress" /> 型の 1 次元配列にコピーします。</summary>
      <param name="array" vsli:raw="A one-dimensional array that receives a copy of the collection.">コレクションのコピーを受け取る 1 次元配列。</param>
      <param name="offset" vsli:raw="The zero-based index in &lt;paramref name=&quot;array&quot; /&gt; at which the copy begins.">コピーを開始する <paramref name="array" /> の、0 から始まるインデックス。</param>
      <exception cref="T:System.ArgumentNullException" vsli:raw="&lt;paramref name=&quot;array&quot; /&gt; is &lt;see langword=&quot;null&quot; /&gt;.">
        <paramref name="array" /> が <see langword="null" />です。</exception>
      <exception cref="T:System.ArgumentOutOfRangeException" vsli:raw="&lt;paramref name=&quot;offset&quot; /&gt; is less than zero.">
        <paramref name="offset" /> が 0 未満です。</exception>
      <exception cref="T:System.ArgumentException" vsli:raw="&lt;paramref name=&quot;array&quot; /&gt; is multidimensional.  &#xA;&#xA;-or-  &#xA;&#xA;The number of elements in this &lt;see cref=&quot;T:System.Net.NetworkInformation.IPAddressCollection&quot; /&gt; is greater than the available space from &lt;paramref name=&quot;offset&quot; /&gt; to the end of the destination &lt;paramref name=&quot;array&quot; /&gt;.">
        <paramref name="array" /> が多次元です。  

- または -

この <see cref="T:System.Net.NetworkInformation.IPAddressCollection" /> の要素数が、<paramref name="offset" /> から対象の <paramref name="array" /> の末尾までに格納できる数を超えています。</exception>
      <exception cref="T:System.InvalidCastException" vsli:raw="The elements in this &lt;see cref=&quot;T:System.Net.NetworkInformation.IPAddressCollection&quot; /&gt; cannot be cast automatically to the type of the destination &lt;paramref name=&quot;array&quot; /&gt;.">この <see cref="T:System.Net.NetworkInformation.IPAddressCollection" /> 内の要素を、対象の <paramref name="array" /> の型に自動的にキャストすることはできません。</exception>
    </member>
    <member name="M:System.Net.NetworkInformation.IPAddressCollection.GetEnumerator">
      <summary vsli:raw="Returns an object that can be used to iterate through this collection.">このコレクションを反復処理するために使用できるオブジェクトを返します。</summary>
      <returns vsli:raw="An object that implements the &lt;see cref=&quot;T:System.Collections.IEnumerator&quot; /&gt; interface and provides access to the &lt;see cref=&quot;T:System.Net.NetworkInformation.IPAddressCollection&quot; /&gt; types in this collection.">
        <see cref="T:System.Collections.IEnumerator" /> インターフェイスを実装し、このコレクション内の <see cref="T:System.Net.NetworkInformation.IPAddressCollection" /> 型へのアクセスを提供するオブジェクト。</returns>
    </member>
    <member name="M:System.Net.NetworkInformation.IPAddressCollection.Remove(System.Net.IPAddress)">
      <summary vsli:raw="Throws a &lt;see cref=&quot;T:System.NotSupportedException&quot; /&gt; because this operation is not supported for this collection.">この操作は、このコレクションではサポートされていないため、<see cref="T:System.NotSupportedException" /> がスローされます。</summary>
      <param name="address" vsli:raw="The object to be removed.">削除するオブジェクト。</param>
      <returns vsli:raw="Always throws a &lt;see cref=&quot;T:System.NotSupportedException&quot; /&gt;.">常に <see cref="T:System.NotSupportedException" /> をスローします。</returns>
    </member>
    <member name="M:System.Net.NetworkInformation.IPAddressCollection.System#Collections#IEnumerable#GetEnumerator">
      <summary vsli:raw="Returns an object that can be used to iterate through this collection.">このコレクションを反復処理するために使用できるオブジェクトを返します。</summary>
      <returns vsli:raw="An object that implements the &lt;see cref=&quot;T:System.Collections.IEnumerator&quot; /&gt; interface and provides access to the &lt;see cref=&quot;T:System.Net.NetworkInformation.IPAddressCollection&quot; /&gt; types in this collection.">
        <see cref="T:System.Collections.IEnumerator" /> インターフェイスを実装し、このコレクション内の <see cref="T:System.Net.NetworkInformation.IPAddressCollection" /> 型へのアクセスを提供するオブジェクト。</returns>
    </member>
    <member name="P:System.Net.NetworkInformation.IPAddressCollection.Count">
      <summary vsli:raw="Gets the number of &lt;see cref=&quot;T:System.Net.IPAddress&quot; /&gt; types in this collection.">このコレクション内の <see cref="T:System.Net.IPAddress" /> 型の数を取得します。</summary>
      <returns vsli:raw="An &lt;see cref=&quot;T:System.Int32&quot; /&gt; value that contains the number of &lt;see cref=&quot;T:System.Net.IPAddress&quot; /&gt; types in this collection.">このコレクション内の <see cref="T:System.Int32" /> 型の数を格納している <see cref="T:System.Net.IPAddress" /> 値。</returns>
    </member>
    <member name="P:System.Net.NetworkInformation.IPAddressCollection.IsReadOnly">
      <summary vsli:raw="Gets a value that indicates whether access to this collection is read-only.">このコレクションへのアクセスが読み取り専用かどうかを示す値を取得します。</summary>
      <returns vsli:raw="&lt;see langword=&quot;true&quot; /&gt; in all cases.">常に <see langword="true" />。</returns>
    </member>
    <member name="P:System.Net.NetworkInformation.IPAddressCollection.Item(System.Int32)">
      <summary vsli:raw="Gets the &lt;see cref=&quot;T:System.Net.IPAddress&quot; /&gt; at the specific index of the collection.">コレクションの特定のインデックス位置にある <see cref="T:System.Net.IPAddress" /> を取得します。</summary>
      <param name="index" vsli:raw="The index of interest.">関連するインデックス。</param>
      <returns vsli:raw="The &lt;see cref=&quot;T:System.Net.IPAddress&quot; /&gt; at the specific index in the collection.">コレクション内の特定のインデックス位置にある <see cref="T:System.Net.IPAddress" />。</returns>
    </member>
    <member name="T:System.Net.Security.AuthenticationLevel">
      <summary vsli:raw="Specifies client requirements for authentication and impersonation when using the &lt;see cref=&quot;T:System.Net.WebRequest&quot; /&gt; class and derived classes to request a resource.">
        <see cref="T:System.Net.WebRequest" /> クラスおよびその派生クラスを使用してリソースを要求する場合の、認証と偽装に関するクライアント要件を指定します。</summary>
    </member>
    <member name="F:System.Net.Security.AuthenticationLevel.MutualAuthRequested">
      <summary vsli:raw="The client and server should be authenticated. The request does not fail if the server is not authenticated. To determine whether mutual authentication occurred, check the value of the &lt;see cref=&quot;P:System.Net.WebResponse.IsMutuallyAuthenticated&quot; /&gt; property.">クライアントとサーバーを認証する必要があります。 サーバーが認証されていない場合でも、要求は失敗しません。 相互認証が行われたかどうかを判別するには、<see cref="P:System.Net.WebResponse.IsMutuallyAuthenticated" /> プロパティの値を確認します。</summary>
    </member>
    <member name="F:System.Net.Security.AuthenticationLevel.MutualAuthRequired">
      <summary vsli:raw="The client and server should be authenticated. If the server is not authenticated, your application will receive an &lt;see cref=&quot;T:System.IO.IOException&quot; /&gt; with a &lt;see cref=&quot;T:System.Net.ProtocolViolationException&quot; /&gt; inner exception that indicates that mutual authentication failed.">クライアントとサーバーを認証する必要があります。 サーバーが認証されていない場合、相互認証が失敗したことを示す <see cref="T:System.Net.ProtocolViolationException" /> 内部例外と共に、<see cref="T:System.IO.IOException" /> がアプリケーションで発生します。</summary>
    </member>
    <member name="F:System.Net.Security.AuthenticationLevel.None">
      <summary vsli:raw="No authentication is required for the client and server.">クライアントとサーバーの認証は必要ありません。</summary>
    </member>
    <member name="T:System.Net.Security.SslPolicyErrors">
      <summary vsli:raw="Enumerates Secure Socket Layer (SSL) policy errors.">Secure Socket Layer (SSL) ポリシーのエラーを列挙します。</summary>
    </member>
    <member name="F:System.Net.Security.SslPolicyErrors.None">
      <summary vsli:raw="No SSL policy errors.">SSL のポリシー エラーはありません。</summary>
    </member>
    <member name="F:System.Net.Security.SslPolicyErrors.RemoteCertificateChainErrors">
      <summary vsli:raw="&lt;see cref=&quot;P:System.Security.Cryptography.X509Certificates.X509Chain.ChainStatus&quot; /&gt; has returned a non empty array.">
        <see cref="P:System.Security.Cryptography.X509Certificates.X509Chain.ChainStatus" /> が、空でない配列を返しました。</summary>
    </member>
    <member name="F:System.Net.Security.SslPolicyErrors.RemoteCertificateNameMismatch">
      <summary vsli:raw="Certificate name mismatch.">証明書の名前が一致していません。</summary>
    </member>
    <member name="F:System.Net.Security.SslPolicyErrors.RemoteCertificateNotAvailable">
      <summary vsli:raw="Certificate not available.">証明書が利用できません。</summary>
    </member>
    <member name="T:System.Net.SocketAddress">
      <summary vsli:raw="Stores serialized information from &lt;see cref=&quot;T:System.Net.EndPoint&quot; /&gt; derived classes.">
        <see cref="T:System.Net.EndPoint" /> 派生クラスからシリアル化された情報を格納します。</summary>
    </member>
    <member name="M:System.Net.SocketAddress.#ctor(System.Net.Sockets.AddressFamily)">
      <summary vsli:raw="Creates a new instance of the &lt;see cref=&quot;T:System.Net.SocketAddress&quot; /&gt; class for the given address family.">指定したアドレス ファミリの <see cref="T:System.Net.SocketAddress" /> クラスの新しいインスタンスを作成します。</summary>
      <param name="family" vsli:raw="An &lt;see cref=&quot;T:System.Net.Sockets.AddressFamily&quot; /&gt; enumerated value.">
        <see cref="T:System.Net.Sockets.AddressFamily" /> 列挙値。</param>
    </member>
    <member name="M:System.Net.SocketAddress.#ctor(System.Net.Sockets.AddressFamily,System.Int32)">
      <summary vsli:raw="Creates a new instance of the &lt;see cref=&quot;T:System.Net.SocketAddress&quot; /&gt; class using the specified address family and buffer size.">指定したアドレス ファミリとバッファー サイズを使用して、<see cref="T:System.Net.SocketAddress" /> クラスの新しいインスタンスを作成します。</summary>
      <param name="family" vsli:raw="An &lt;see cref=&quot;T:System.Net.Sockets.AddressFamily&quot; /&gt; enumerated value.">
        <see cref="T:System.Net.Sockets.AddressFamily" /> 列挙値。</param>
      <param name="size" vsli:raw="The number of bytes to allocate for the underlying buffer.">基になるバッファーに割り当てるバイト数。</param>
      <exception cref="T:System.ArgumentOutOfRangeException" vsli:raw="&lt;paramref name=&quot;size&quot; /&gt; is less than 2. These 2 bytes are needed to store &lt;paramref name=&quot;family&quot; /&gt;.">
        <paramref name="size" /> が 2 未満です。 この 2 バイトは、<paramref name="family" /> を格納するために必要です。</exception>
    </member>
    <member name="M:System.Net.SocketAddress.Equals(System.Object)">
      <summary vsli:raw="Determines whether the specified &lt;see langword=&quot;Object&quot; /&gt; is equal to the current &lt;see langword=&quot;Object&quot; /&gt;.">指定した <see langword="Object" /> が現在の <see langword="Object" /> と等しいかどうかを示します。</summary>
      <param name="comparand" vsli:raw="The &lt;see cref=&quot;T:System.Object&quot; /&gt; to compare with the current &lt;see langword=&quot;Object&quot; /&gt;.">現在の <see cref="T:System.Object" /> と比較する <see langword="Object" />。</param>
      <returns vsli:raw="&lt;see langword=&quot;true&quot; /&gt; if the specified &lt;see langword=&quot;Object&quot; /&gt; is equal to the current &lt;see langword=&quot;Object&quot; /&gt;; otherwise, &lt;see langword=&quot;false&quot; /&gt;.">指定した <see langword="true" /> が現在の <see langword="Object" /> と等しい場合は <see langword="Object" />。それ以外の場合は <see langword="false" />。</returns>
    </member>
    <member name="M:System.Net.SocketAddress.GetHashCode">
      <summary vsli:raw="Serves as a hash function for a particular type, suitable for use in hashing algorithms and data structures like a hash table.">特定の型のハッシュ関数として機能します。ハッシュ アルゴリズムや、ハッシュ テーブルなどのデータ構造での使用に適しています。</summary>
      <returns vsli:raw="A hash code for the current &lt;see cref=&quot;T:System.Object&quot; /&gt;.">現在の <see cref="T:System.Object" /> のハッシュ コード。</returns>
    </member>
    <member name="M:System.Net.SocketAddress.ToString">
      <summary vsli:raw="Returns information about the socket address.">ソケット アドレスに関する情報を返します。</summary>
      <returns vsli:raw="A string that contains information about the &lt;see cref=&quot;T:System.Net.SocketAddress&quot; /&gt;.">
        <see cref="T:System.Net.SocketAddress" /> に関する情報を格納する文字列。</returns>
    </member>
    <member name="P:System.Net.SocketAddress.Family">
      <summary vsli:raw="Gets the &lt;see cref=&quot;T:System.Net.Sockets.AddressFamily&quot; /&gt; enumerated value of the current &lt;see cref=&quot;T:System.Net.SocketAddress&quot; /&gt;.">現在の <see cref="T:System.Net.Sockets.AddressFamily" /> の <see cref="T:System.Net.SocketAddress" /> 列挙値を取得します。</summary>
      <returns vsli:raw="One of the &lt;see cref=&quot;T:System.Net.Sockets.AddressFamily&quot; /&gt; enumerated values.">
        <see cref="T:System.Net.Sockets.AddressFamily" /> 列挙値の 1 つ。</returns>
    </member>
    <member name="P:System.Net.SocketAddress.Item(System.Int32)">
      <summary vsli:raw="Gets or sets the specified index element in the underlying buffer.">基になるバッファーの指定したインデックス要素を取得または設定します。</summary>
      <param name="offset" vsli:raw="The array index element of the desired information.">要求されている情報の配列インデックス要素。</param>
      <exception cref="T:System.IndexOutOfRangeException" vsli:raw="The specified index does not exist in the buffer.">指定したインデックスがバッファー内に存在しません。</exception>
      <returns vsli:raw="The value of the specified index element in the underlying buffer.">基になるバッファーの指定したインデックス要素の値。</returns>
    </member>
    <member name="P:System.Net.SocketAddress.Size">
      <summary vsli:raw="Gets the underlying buffer size of the &lt;see cref=&quot;T:System.Net.SocketAddress&quot; /&gt;.">
        <see cref="T:System.Net.SocketAddress" /> の基になるバッファー サイズを取得します。</summary>
      <returns vsli:raw="The underlying buffer size of the &lt;see cref=&quot;T:System.Net.SocketAddress&quot; /&gt;.">
        <see cref="T:System.Net.SocketAddress" /> の基になるバッファー サイズ。</returns>
    </member>
    <member name="T:System.Net.Sockets.AddressFamily">
      <summary vsli:raw="Specifies the addressing scheme that an instance of the &lt;see cref=&quot;T:System.Net.Sockets.Socket&quot; /&gt; class can use.">
        <see cref="T:System.Net.Sockets.Socket" /> クラスのインスタンスが使用できるアドレッシング スキームを指定します。</summary>
    </member>
    <member name="F:System.Net.Sockets.AddressFamily.AppleTalk">
      <summary vsli:raw="AppleTalk address.">AppleTalk アドレス。</summary>
    </member>
    <member name="F:System.Net.Sockets.AddressFamily.Atm">
      <summary vsli:raw="Native ATM services address.">ネイティブ ATM サービス アドレス。</summary>
    </member>
    <member name="F:System.Net.Sockets.AddressFamily.Banyan">
      <summary vsli:raw="Banyan address.">Banyan アドレス。</summary>
    </member>
    <member name="F:System.Net.Sockets.AddressFamily.Ccitt">
      <summary vsli:raw="Addresses for CCITT protocols, such as X.25.">X.25 などの CCITT プロトコルのアドレス。</summary>
    </member>
    <member name="F:System.Net.Sockets.AddressFamily.Chaos">
      <summary vsli:raw="Address for MIT CHAOS protocols.">MIT CHAOS プロトコルのアドレス。</summary>
    </member>
    <member name="F:System.Net.Sockets.AddressFamily.Cluster">
      <summary vsli:raw="Address for Microsoft cluster products.">Microsoft クラスター製品のアドレス。</summary>
    </member>
    <member name="F:System.Net.Sockets.AddressFamily.ControllerAreaNetwork">
      <summary vsli:raw="Controller Area Network address.">Controller Area Network のアドレス。</summary>
    </member>
    <member name="F:System.Net.Sockets.AddressFamily.DataKit">
      <summary vsli:raw="Address for Datakit protocols.">Datakit プロトコルのアドレス。</summary>
    </member>
    <member name="F:System.Net.Sockets.AddressFamily.DataLink">
      <summary vsli:raw="Direct data-link interface address.">ダイレクト データリンク インターフェイス アドレス。</summary>
    </member>
    <member name="F:System.Net.Sockets.AddressFamily.DecNet">
      <summary vsli:raw="DECnet address.">DECnet アドレス。</summary>
    </member>
    <member name="F:System.Net.Sockets.AddressFamily.Ecma">
      <summary vsli:raw="European Computer Manufacturers Association (ECMA) address.">ECMA (European Computer Manufacturers Association) アドレス。</summary>
    </member>
    <member name="F:System.Net.Sockets.AddressFamily.FireFox">
      <summary vsli:raw="FireFox address.">FireFox アドレス。</summary>
    </member>
    <member name="F:System.Net.Sockets.AddressFamily.HyperChannel">
      <summary vsli:raw="NSC Hyperchannel address.">NSC Hyperchannel アドレス。</summary>
    </member>
    <member name="F:System.Net.Sockets.AddressFamily.Ieee12844">
      <summary vsli:raw="IEEE 1284.4 workgroup address.">IEEE 1284.4 ワークグループ アドレス。</summary>
    </member>
    <member name="F:System.Net.Sockets.AddressFamily.ImpLink">
      <summary vsli:raw="ARPANET IMP address.">ARPANET IMP アドレス。</summary>
    </member>
    <member name="F:System.Net.Sockets.AddressFamily.InterNetwork">
      <summary vsli:raw="Address for IP version 4.">IP version 4 のアドレス。</summary>
    </member>
    <member name="F:System.Net.Sockets.AddressFamily.InterNetworkV6">
      <summary vsli:raw="Address for IP version 6.">IP version 6 のアドレス。</summary>
    </member>
    <member name="F:System.Net.Sockets.AddressFamily.Ipx">
      <summary vsli:raw="IPX or SPX address.">IPX アドレスまたは SPX アドレス。</summary>
    </member>
    <member name="F:System.Net.Sockets.AddressFamily.Irda">
      <summary vsli:raw="IrDA address.">IrDA アドレス。</summary>
    </member>
    <member name="F:System.Net.Sockets.AddressFamily.Iso">
      <summary vsli:raw="Address for ISO protocols.">ISO プロトコルのアドレス。</summary>
    </member>
    <member name="F:System.Net.Sockets.AddressFamily.Lat">
      <summary vsli:raw="LAT address.">LAT アドレス。</summary>
    </member>
    <member name="F:System.Net.Sockets.AddressFamily.Max">
      <summary vsli:raw="MAX address.">MAX アドレス。</summary>
    </member>
    <member name="F:System.Net.Sockets.AddressFamily.NetBios">
      <summary vsli:raw="NetBios address.">NetBios アドレス。</summary>
    </member>
    <member name="F:System.Net.Sockets.AddressFamily.NetworkDesigners">
      <summary vsli:raw="Address for Network Designers OSI gateway-enabled protocols.">Network Designers OSI ゲートウェイ対応プロトコルのアドレス。</summary>
    </member>
    <member name="F:System.Net.Sockets.AddressFamily.NS">
      <summary vsli:raw="Address for Xerox NS protocols.">Xerox NS プロトコルのアドレス。</summary>
    </member>
    <member name="F:System.Net.Sockets.AddressFamily.Osi">
      <summary vsli:raw="Address for OSI protocols.">OSI プロトコルのアドレス。</summary>
    </member>
    <member name="F:System.Net.Sockets.AddressFamily.Packet">
      <summary vsli:raw="Low-level Packet address.">低レベル パケットのアドレス。</summary>
    </member>
    <member name="F:System.Net.Sockets.AddressFamily.Pup">
      <summary vsli:raw="Address for PUP protocols.">PUP プロトコルのアドレス。</summary>
    </member>
    <member name="F:System.Net.Sockets.AddressFamily.Sna">
      <summary vsli:raw="IBM SNA address.">IBM SNA アドレス。</summary>
    </member>
    <member name="F:System.Net.Sockets.AddressFamily.Unix">
      <summary vsli:raw="Unix local to host address.">Unix local to host アドレス。</summary>
    </member>
    <member name="F:System.Net.Sockets.AddressFamily.Unknown">
      <summary vsli:raw="Unknown address family.">未確認のアドレス ファミリ。</summary>
    </member>
    <member name="F:System.Net.Sockets.AddressFamily.Unspecified">
      <summary vsli:raw="Unspecified address family.">指定のないアドレス ファミリ。</summary>
    </member>
    <member name="F:System.Net.Sockets.AddressFamily.VoiceView">
      <summary vsli:raw="VoiceView address.">VoiceView アドレス。</summary>
    </member>
    <member name="T:System.Net.Sockets.SocketError">
      <summary vsli:raw="Defines error codes for the &lt;see cref=&quot;T:System.Net.Sockets.Socket&quot; /&gt; class.">
        <see cref="T:System.Net.Sockets.Socket" /> クラスのエラー コードを定義します。</summary>
    </member>
    <member name="F:System.Net.Sockets.SocketError.AccessDenied">
      <summary vsli:raw="An attempt was made to access a &lt;see cref=&quot;T:System.Net.Sockets.Socket&quot; /&gt; in a way that is forbidden by its access permissions.">アクセス許可で禁止されている方法で <see cref="T:System.Net.Sockets.Socket" /> にアクセスしようとしました。</summary>
    </member>
    <member name="F:System.Net.Sockets.SocketError.AddressAlreadyInUse">
      <summary vsli:raw="Only one use of an address is normally permitted.">通常、アドレスは 1 つしか使用できません。</summary>
    </member>
    <member name="F:System.Net.Sockets.SocketError.AddressFamilyNotSupported">
      <summary vsli:raw="The address family specified is not supported. This error is returned if the IPv6 address family was specified and the IPv6 stack is not installed on the local machine. This error is returned if the IPv4 address family was specified and the IPv4 stack is not installed on the local machine.">指定したアドレス ファミリはサポートされていません。 このエラーは、IPv6 スタックがローカル コンピューターにインストールされていない状態で、IPv6 アドレス ファミリを指定した場合に返されます。 このエラーは、IPv4 スタックがローカル コンピューターにインストールされていない状態で、IPv4 アドレス ファミリを指定した場合に返されます。</summary>
    </member>
    <member name="F:System.Net.Sockets.SocketError.AddressNotAvailable">
      <summary vsli:raw="The selected IP address is not valid in this context.">選択された IP アドレスは、このコンテキストでは有効ではありません。</summary>
    </member>
    <member name="F:System.Net.Sockets.SocketError.AlreadyInProgress">
      <summary vsli:raw="The nonblocking &lt;see cref=&quot;T:System.Net.Sockets.Socket&quot; /&gt; already has an operation in progress.">非ブロッキング <see cref="T:System.Net.Sockets.Socket" /> で操作を実行中です。</summary>
    </member>
    <member name="F:System.Net.Sockets.SocketError.ConnectionAborted">
      <summary vsli:raw="The connection was aborted by .NET or the underlying socket provider.">.NET Framework または基になるソケット プロバイダーによって接続が中止されました。</summary>
    </member>
    <member name="F:System.Net.Sockets.SocketError.ConnectionRefused">
      <summary vsli:raw="The remote host is actively refusing a connection.">リモート ホストがアクティブに接続を拒否しています。</summary>
    </member>
    <member name="F:System.Net.Sockets.SocketError.ConnectionReset">
      <summary vsli:raw="The connection was reset by the remote peer.">リモート ピアによって接続がリセットされました。</summary>
    </member>
    <member name="F:System.Net.Sockets.SocketError.DestinationAddressRequired">
      <summary vsli:raw="A required address was omitted from an operation on a &lt;see cref=&quot;T:System.Net.Sockets.Socket&quot; /&gt;.">必要なアドレスが <see cref="T:System.Net.Sockets.Socket" /> の操作から省略されています。</summary>
    </member>
    <member name="F:System.Net.Sockets.SocketError.Disconnecting">
      <summary vsli:raw="A graceful shutdown is in progress.">正常なシャットダウンを実行中です。</summary>
    </member>
    <member name="F:System.Net.Sockets.SocketError.Fault">
      <summary vsli:raw="An invalid pointer address was detected by the underlying socket provider.">基になるソケット プロバイダーによって、無効なポインター アドレスが検出されました。</summary>
    </member>
    <member name="F:System.Net.Sockets.SocketError.HostDown">
      <summary vsli:raw="The operation failed because the remote host is down.">リモート ホストのダウンが原因で操作が失敗しました。</summary>
    </member>
    <member name="F:System.Net.Sockets.SocketError.HostNotFound">
      <summary vsli:raw="No such host is known. The name is not an official host name or alias.">そのようなホストは不明です。 名前が正式なホスト名またはエイリアスではありません。</summary>
    </member>
    <member name="F:System.Net.Sockets.SocketError.HostUnreachable">
      <summary vsli:raw="There is no network route to the specified host.">指定したホストへのネットワーク ルートがありません。</summary>
    </member>
    <member name="F:System.Net.Sockets.SocketError.InProgress">
      <summary vsli:raw="A blocking operation is in progress.">ブロッキング操作を実行中です。</summary>
    </member>
    <member name="F:System.Net.Sockets.SocketError.Interrupted">
      <summary vsli:raw="A blocking &lt;see cref=&quot;T:System.Net.Sockets.Socket&quot; /&gt; call was canceled.">ブロッキング <see cref="T:System.Net.Sockets.Socket" /> の呼び出しが取り消されました。</summary>
    </member>
    <member name="F:System.Net.Sockets.SocketError.InvalidArgument">
      <summary vsli:raw="An invalid argument was supplied to a &lt;see cref=&quot;T:System.Net.Sockets.Socket&quot; /&gt; member.">
        <see cref="T:System.Net.Sockets.Socket" /> メンバーに無効な引数が提供されました。</summary>
    </member>
    <member name="F:System.Net.Sockets.SocketError.IOPending">
      <summary vsli:raw="The application has initiated an overlapped operation that cannot be completed immediately.">アプリケーションが、すぐには完了できない重複操作を開始しました。</summary>
    </member>
    <member name="F:System.Net.Sockets.SocketError.IsConnected">
      <summary vsli:raw="The &lt;see cref=&quot;T:System.Net.Sockets.Socket&quot; /&gt; is already connected.">
        <see cref="T:System.Net.Sockets.Socket" /> は既に接続されています。</summary>
    </member>
    <member name="F:System.Net.Sockets.SocketError.MessageSize">
      <summary vsli:raw="The datagram is too long.">データグラムが長すぎます。</summary>
    </member>
    <member name="F:System.Net.Sockets.SocketError.NetworkDown">
      <summary vsli:raw="The network is not available.">ネットワークが使用できない。</summary>
    </member>
    <member name="F:System.Net.Sockets.SocketError.NetworkReset">
      <summary vsli:raw="The application tried to set &lt;see cref=&quot;F:System.Net.Sockets.SocketOptionName.KeepAlive&quot; /&gt; on a connection that has already timed out.">アプリケーションが、既にタイムアウトしている接続で <see cref="F:System.Net.Sockets.SocketOptionName.KeepAlive" /> を設定しようとしました。</summary>
    </member>
    <member name="F:System.Net.Sockets.SocketError.NetworkUnreachable">
      <summary vsli:raw="No route to the remote host exists.">リモート ホストへのルートが存在しません。</summary>
    </member>
    <member name="F:System.Net.Sockets.SocketError.NoBufferSpaceAvailable">
      <summary vsli:raw="No free buffer space is available for a &lt;see cref=&quot;T:System.Net.Sockets.Socket&quot; /&gt; operation.">
        <see cref="T:System.Net.Sockets.Socket" /> 操作用のバッファーの空き領域がありません。</summary>
    </member>
    <member name="F:System.Net.Sockets.SocketError.NoData">
      <summary vsli:raw="The requested name or IP address was not found on the name server.">要求された名前または IP アドレスが、ネーム サーバーで見つかりませんでした。</summary>
    </member>
    <member name="F:System.Net.Sockets.SocketError.NoRecovery">
      <summary vsli:raw="The error is unrecoverable or the requested database cannot be located.">エラーが回復できないか、または要求されたデータベースが見つかりません。</summary>
    </member>
    <member name="F:System.Net.Sockets.SocketError.NotConnected">
      <summary vsli:raw="The application tried to send or receive data, and the &lt;see cref=&quot;T:System.Net.Sockets.Socket&quot; /&gt; is not connected.">アプリケーションがデータを送信または受信しようとしましたが、<see cref="T:System.Net.Sockets.Socket" /> が接続されていません。</summary>
    </member>
    <member name="F:System.Net.Sockets.SocketError.NotInitialized">
      <summary vsli:raw="The underlying socket provider has not been initialized.">基になるソケット プロバイダーが初期化されていません。</summary>
    </member>
    <member name="F:System.Net.Sockets.SocketError.NotSocket">
      <summary vsli:raw="A &lt;see cref=&quot;T:System.Net.Sockets.Socket&quot; /&gt; operation was attempted on a non-socket.">ソケット以外で <see cref="T:System.Net.Sockets.Socket" /> 操作を実行しようとしました。</summary>
    </member>
    <member name="F:System.Net.Sockets.SocketError.OperationAborted">
      <summary vsli:raw="The overlapped operation was aborted due to the closure of the &lt;see cref=&quot;T:System.Net.Sockets.Socket&quot; /&gt;.">
        <see cref="T:System.Net.Sockets.Socket" /> が閉じられたため、重複操作が中止されました。</summary>
    </member>
    <member name="F:System.Net.Sockets.SocketError.OperationNotSupported">
      <summary vsli:raw="The address family is not supported by the protocol family.">アドレス ファミリがプロトコル ファミリによってサポートされていません。</summary>
    </member>
    <member name="F:System.Net.Sockets.SocketError.ProcessLimit">
      <summary vsli:raw="Too many processes are using the underlying socket provider.">基になるソケット プロバイダーを使用しているプロセスが多すぎます。</summary>
    </member>
    <member name="F:System.Net.Sockets.SocketError.ProtocolFamilyNotSupported">
      <summary vsli:raw="The protocol family is not implemented or has not been configured.">プロトコル ファミリが実装されていないか、または構成されていません。</summary>
    </member>
    <member name="F:System.Net.Sockets.SocketError.ProtocolNotSupported">
      <summary vsli:raw="The protocol is not implemented or has not been configured.">プロトコルが実装されていないか、または構成されていません。</summary>
    </member>
    <member name="F:System.Net.Sockets.SocketError.ProtocolOption">
      <summary vsli:raw="An unknown, invalid, or unsupported option or level was used with a &lt;see cref=&quot;T:System.Net.Sockets.Socket&quot; /&gt;.">
        <see cref="T:System.Net.Sockets.Socket" /> で使用されたオプションまたはレベルは、不明か、無効か、またはサポートされていません。</summary>
    </member>
    <member name="F:System.Net.Sockets.SocketError.ProtocolType">
      <summary vsli:raw="The protocol type is incorrect for this &lt;see cref=&quot;T:System.Net.Sockets.Socket&quot; /&gt;.">この <see cref="T:System.Net.Sockets.Socket" /> に対するプロトコル型が正しくありません。</summary>
    </member>
    <member name="F:System.Net.Sockets.SocketError.Shutdown">
      <summary vsli:raw="A request to send or receive data was disallowed because the &lt;see cref=&quot;T:System.Net.Sockets.Socket&quot; /&gt; has already been closed.">
        <see cref="T:System.Net.Sockets.Socket" /> が既に閉じられているため、データを送信または受信する要求が許可されませんでした。</summary>
    </member>
    <member name="F:System.Net.Sockets.SocketError.SocketError">
      <summary vsli:raw="An unspecified &lt;see cref=&quot;T:System.Net.Sockets.Socket&quot; /&gt; error has occurred.">特定されない <see cref="T:System.Net.Sockets.Socket" /> エラーが発生しました。</summary>
    </member>
    <member name="F:System.Net.Sockets.SocketError.SocketNotSupported">
      <summary vsli:raw="The support for the specified socket type does not exist in this address family.">このアドレス ファミリでは、指定したソケット タイプはサポートされていません。</summary>
    </member>
    <member name="F:System.Net.Sockets.SocketError.Success">
      <summary vsli:raw="The &lt;see cref=&quot;T:System.Net.Sockets.Socket&quot; /&gt; operation succeeded.">
        <see cref="T:System.Net.Sockets.Socket" /> 操作が正常に行われました。</summary>
    </member>
    <member name="F:System.Net.Sockets.SocketError.SystemNotReady">
      <summary vsli:raw="The network subsystem is unavailable.">ネットワーク サブシステムが使用できません。</summary>
    </member>
    <member name="F:System.Net.Sockets.SocketError.TimedOut">
      <summary vsli:raw="The connection attempt timed out, or the connected host has failed to respond.">接続の試行がタイムアウトしたか、または接続されているホストが応答に失敗しました。</summary>
    </member>
    <member name="F:System.Net.Sockets.SocketError.TooManyOpenSockets">
      <summary vsli:raw="There are too many open sockets in the underlying socket provider.">基になるソケット プロバイダーで開いているソケットが多すぎます。</summary>
    </member>
    <member name="F:System.Net.Sockets.SocketError.TryAgain">
      <summary vsli:raw="The name of the host could not be resolved. Try again later.">ホストの名前を解決できませんでした。 後でもう一度やり直してください。</summary>
    </member>
    <member name="F:System.Net.Sockets.SocketError.TypeNotFound">
      <summary vsli:raw="The specified class was not found.">指定したクラスが見つかりませんでした。</summary>
    </member>
    <member name="F:System.Net.Sockets.SocketError.VersionNotSupported">
      <summary vsli:raw="The version of the underlying socket provider is out of range.">基になるソケット プロバイダーのバージョンが範囲外です。</summary>
    </member>
    <member name="F:System.Net.Sockets.SocketError.WouldBlock">
      <summary vsli:raw="An operation on a nonblocking socket cannot be completed immediately.">非ブロッキング ソケットでの操作は、すぐに完了できません。</summary>
    </member>
    <member name="T:System.Net.Sockets.SocketException">
      <summary vsli:raw="The exception that is thrown when a socket error occurs.">ソケット エラーが発生したときにスローされる例外。</summary>
    </member>
    <member name="M:System.Net.Sockets.SocketException.#ctor">
      <summary vsli:raw="Initializes a new instance of the &lt;see cref=&quot;T:System.Net.Sockets.SocketException&quot; /&gt; class with the last operating system error code.">直前のオペレーティング システム エラー コードを指定して、<see cref="T:System.Net.Sockets.SocketException" /> クラスの新しいインスタンスを初期化します。</summary>
    </member>
    <member name="M:System.Net.Sockets.SocketException.#ctor(System.Int32)">
      <summary vsli:raw="Initializes a new instance of the &lt;see cref=&quot;T:System.Net.Sockets.SocketException&quot; /&gt; class with the specified error code.">エラー コードを指定して、<see cref="T:System.Net.Sockets.SocketException" /> クラスの新しいインスタンスを初期化します。</summary>
      <param name="errorCode" vsli:raw="The error code that indicates the error that occurred.">発生したエラーを示すエラー コード。</param>
    </member>
    <member name="M:System.Net.Sockets.SocketException.#ctor(System.Runtime.Serialization.SerializationInfo,System.Runtime.Serialization.StreamingContext)">
      <summary vsli:raw="Initializes a new instance of the &lt;see cref=&quot;T:System.Net.Sockets.SocketException&quot; /&gt; class from the specified instances of the &lt;see cref=&quot;T:System.Runtime.Serialization.SerializationInfo&quot; /&gt; and &lt;see cref=&quot;T:System.Runtime.Serialization.StreamingContext&quot; /&gt; classes.">
        <see cref="T:System.Runtime.Serialization.SerializationInfo" /> クラスと <see cref="T:System.Runtime.Serialization.StreamingContext" /> クラスの指定したインスタンスから、<see cref="T:System.Net.Sockets.SocketException" /> クラスの新しいインスタンスを初期化します。</summary>
      <param name="serializationInfo" vsli:raw="A &lt;see cref=&quot;T:System.Runtime.Serialization.SerializationInfo&quot; /&gt; instance that contains the information that is required to serialize the new &lt;see cref=&quot;T:System.Net.Sockets.SocketException&quot; /&gt; instance.">新しい <see cref="T:System.Net.Sockets.SocketException" /> インスタンスをシリアル化するために必要な情報を格納する <see cref="T:System.Runtime.Serialization.SerializationInfo" /> インスタンス。</param>
      <param name="streamingContext" vsli:raw="A &lt;see cref=&quot;T:System.Runtime.Serialization.StreamingContext&quot; /&gt; that contains the source of the serialized stream that is associated with the new &lt;see cref=&quot;T:System.Net.Sockets.SocketException&quot; /&gt; instance.">新しい <see cref="T:System.Net.Sockets.SocketException" /> インスタンスに関連付けられているシリアル化ストリームの転送元を格納している <see cref="T:System.Runtime.Serialization.StreamingContext" />。</param>
    </member>
    <member name="P:System.Net.Sockets.SocketException.ErrorCode">
      <summary vsli:raw="Gets the error code that is associated with this exception.">この例外に関連付けられているエラー コードを取得します。</summary>
      <returns vsli:raw="An integer error code that is associated with this exception.">この例外に関連付けられている整数エラー コード。</returns>
    </member>
    <member name="P:System.Net.Sockets.SocketException.Message">
      <summary vsli:raw="Gets the error message that is associated with this exception.">この例外に関連付けられているエラー メッセージを取得します。</summary>
      <returns vsli:raw="A string that contains the error message.">エラー メッセージを含む文字列。</returns>
    </member>
    <member name="P:System.Net.Sockets.SocketException.SocketErrorCode">
      <summary vsli:raw="Gets the error code that is associated with this exception.">この例外に関連付けられているエラー コードを取得します。</summary>
      <returns vsli:raw="An integer error code that is associated with this exception.">この例外に関連付けられている整数エラー コード。</returns>
    </member>
    <member name="T:System.Net.TransportContext">
      <summary vsli:raw="The &lt;see cref=&quot;T:System.Net.TransportContext&quot; /&gt; class provides additional context about the underlying transport layer.">
        <see cref="T:System.Net.TransportContext" /> クラスは、基になるトランスポート層に関する追加のコンテキストを提供します。</summary>
    </member>
    <member name="M:System.Net.TransportContext.#ctor">
      <summary vsli:raw="Creates a new instance of the &lt;see cref=&quot;T:System.Net.TransportContext&quot; /&gt; class.">
        <see cref="T:System.Net.TransportContext" /> クラスの新しいインスタンスを作成します。</summary>
    </member>
    <member name="M:System.Net.TransportContext.GetChannelBinding(System.Security.Authentication.ExtendedProtection.ChannelBindingKind)">
      <summary vsli:raw="Retrieves the requested channel binding.">要求されたチャネル バインディングを取得します。</summary>
      <param name="kind" vsli:raw="The type of channel binding to retrieve.">取得するチャネル バインディングの種類。</param>
      <exception cref="T:System.NotSupportedException" vsli:raw="&lt;paramref name=&quot;kind&quot; /&gt; is must be &lt;see cref=&quot;F:System.Security.Authentication.ExtendedProtection.ChannelBindingKind.Endpoint&quot; /&gt; for use with the &lt;see cref=&quot;T:System.Net.TransportContext&quot; /&gt; retrieved from the &lt;see cref=&quot;P:System.Net.HttpListenerRequest.TransportContext&quot; /&gt; property.">
        <paramref name="kind" /> は、<see cref="F:System.Security.Authentication.ExtendedProtection.ChannelBindingKind.Endpoint" /> プロパティから取得した <see cref="T:System.Net.TransportContext" /> と使用する場合は、<see cref="P:System.Net.HttpListenerRequest.TransportContext" /> である必要があります。</exception>
      <returns vsli:raw="The requested &lt;see cref=&quot;T:System.Security.Authentication.ExtendedProtection.ChannelBinding&quot; /&gt;, or &lt;see langword=&quot;null&quot; /&gt; if the channel binding is not supported by the current transport or by the operating system.">要求された <see cref="T:System.Security.Authentication.ExtendedProtection.ChannelBinding" />。または、チャネル バインディングが現在のトランスポートまたはオペレーティング システムによってサポートされていない場合は <see langword="null" />。</returns>
    </member>
    <member name="T:System.Security.Authentication.CipherAlgorithmType">
      <summary vsli:raw="Defines the possible cipher algorithms for the &lt;see cref=&quot;T:System.Net.Security.SslStream&quot; /&gt; class.">
        <see cref="T:System.Net.Security.SslStream" /> クラスに適用可能な暗号アルゴリズムを定義します。</summary>
    </member>
    <member name="F:System.Security.Authentication.CipherAlgorithmType.Aes">
      <summary vsli:raw="The Advanced Encryption Standard (AES) algorithm.">AES (Advanced Encryption Standard) アルゴリズム。</summary>
    </member>
    <member name="F:System.Security.Authentication.CipherAlgorithmType.Aes128">
      <summary vsli:raw="The Advanced Encryption Standard (AES) algorithm with a 128 bit key.">128 ビット キーを使用した AES (Advanced Encryption Standard) アルゴリズム。</summary>
    </member>
    <member name="F:System.Security.Authentication.CipherAlgorithmType.Aes192">
      <summary vsli:raw="The Advanced Encryption Standard (AES) algorithm with a 192 bit key.">192 ビット キーを使用した AES (Advanced Encryption Standard) アルゴリズム。</summary>
    </member>
    <member name="F:System.Security.Authentication.CipherAlgorithmType.Aes256">
      <summary vsli:raw="The Advanced Encryption Standard (AES) algorithm with a 256 bit key.">256 ビット キーを使用した AES (Advanced Encryption Standard) アルゴリズム。</summary>
    </member>
    <member name="F:System.Security.Authentication.CipherAlgorithmType.Des">
      <summary vsli:raw="The Data Encryption Standard (DES) algorithm.">DES (Data Encryption Standard) アルゴリズム。</summary>
    </member>
    <member name="F:System.Security.Authentication.CipherAlgorithmType.None">
      <summary vsli:raw="No encryption algorithm is used.">暗号化アルゴリズムは使用されません。</summary>
    </member>
    <member name="F:System.Security.Authentication.CipherAlgorithmType.Null">
      <summary vsli:raw="No encryption is used with a Null cipher algorithm.">暗号化は Null 暗号アルゴリズムで使用されません。</summary>
    </member>
    <member name="F:System.Security.Authentication.CipherAlgorithmType.Rc2">
      <summary vsli:raw="Rivest's Code 2 (RC2) algorithm.">RC2 (Rivest's Code 2) アルゴリズム。</summary>
    </member>
    <member name="F:System.Security.Authentication.CipherAlgorithmType.Rc4">
      <summary vsli:raw="Rivest's Code 4 (RC4) algorithm.">RC4 (Rivest's Code 4) アルゴリズム。</summary>
    </member>
    <member name="F:System.Security.Authentication.CipherAlgorithmType.TripleDes">
      <summary vsli:raw="The Triple Data Encryption Standard (3DES) algorithm.">3DES (Triple Data Encryption Standard) アルゴリズム。</summary>
    </member>
    <member name="T:System.Security.Authentication.ExchangeAlgorithmType">
      <summary vsli:raw="Specifies the algorithm used to create keys shared by the client and server.">クライアントとサーバーで共有されるキーを作成するために使用されるアルゴリズムを指定します。</summary>
    </member>
    <member name="F:System.Security.Authentication.ExchangeAlgorithmType.DiffieHellman">
      <summary vsli:raw="The Diffie Hellman ephemeral key exchange algorithm.">Diffie Hellman 短期キー交換アルゴリズム。</summary>
    </member>
    <member name="F:System.Security.Authentication.ExchangeAlgorithmType.None">
      <summary vsli:raw="No key exchange algorithm is used.">キー交換アルゴリズムは使用されません。</summary>
    </member>
    <member name="F:System.Security.Authentication.ExchangeAlgorithmType.RsaKeyX">
      <summary vsli:raw="The RSA public-key exchange algorithm.">RSA 公開キー交換アルゴリズム。</summary>
    </member>
    <member name="F:System.Security.Authentication.ExchangeAlgorithmType.RsaSign">
      <summary vsli:raw="The RSA public-key signature algorithm.">RSA 公開キー署名アルゴリズム。</summary>
    </member>
    <member name="T:System.Security.Authentication.ExtendedProtection.ChannelBinding">
      <summary vsli:raw="The &lt;see cref=&quot;T:System.Security.Authentication.ExtendedProtection.ChannelBinding&quot; /&gt; class encapsulates a pointer to the opaque data used to bind an authenticated transaction to a secure channel.">
        <see cref="T:System.Security.Authentication.ExtendedProtection.ChannelBinding" /> クラスは、セキュリティで保護されたチャネルに認証されたトランザクションをバインドするために使用される非透過データへのポインターをカプセル化します。</summary>
    </member>
    <member name="M:System.Security.Authentication.ExtendedProtection.ChannelBinding.#ctor">
      <summary vsli:raw="Initializes a new instance of the &lt;see cref=&quot;T:System.Security.Authentication.ExtendedProtection.ChannelBinding&quot; /&gt; class.">
        <see cref="T:System.Security.Authentication.ExtendedProtection.ChannelBinding" /> クラスの新しいインスタンスを初期化します。</summary>
    </member>
    <member name="M:System.Security.Authentication.ExtendedProtection.ChannelBinding.#ctor(System.Boolean)">
      <summary vsli:raw="Initializes a new instance of the &lt;see cref=&quot;T:System.Security.Authentication.ExtendedProtection.ChannelBinding&quot; /&gt; class.">
        <see cref="T:System.Security.Authentication.ExtendedProtection.ChannelBinding" /> クラスの新しいインスタンスを初期化します。</summary>
      <param name="ownsHandle" vsli:raw="A Boolean value that indicates if the application owns the safe handle to a native memory region containing the byte data that would be passed to native calls that provide extended protection for integrated windows authentication.">統合 Windows 認証に拡張保護を提供するネイティブ呼び出しに渡されるバイト データを格納しているネイティブ メモリ領域へのセーフ ハンドルをアプリケーションが所有するかどうかを示すブール値。</param>
    </member>
    <member name="P:System.Security.Authentication.ExtendedProtection.ChannelBinding.Size">
      <summary vsli:raw="The &lt;see cref=&quot;P:System.Security.Authentication.ExtendedProtection.ChannelBinding.Size&quot; /&gt; property gets the size, in bytes, of the channel binding token associated with the &lt;see cref=&quot;T:System.Security.Authentication.ExtendedProtection.ChannelBinding&quot; /&gt; instance.">
        <see cref="P:System.Security.Authentication.ExtendedProtection.ChannelBinding.Size" /> プロパティは、<see cref="T:System.Security.Authentication.ExtendedProtection.ChannelBinding" /> インスタンスに関連付けられているチャネル バインディング トークンのサイズをバイト単位で取得します。</summary>
      <returns vsli:raw="The size, in bytes, of the channel binding token in the &lt;see cref=&quot;T:System.Security.Authentication.ExtendedProtection.ChannelBinding&quot; /&gt; instance.">
        <see cref="T:System.Security.Authentication.ExtendedProtection.ChannelBinding" /> インスタンスのチャネル バインディング トークンのサイズ (バイト単位)。</returns>
    </member>
    <member name="T:System.Security.Authentication.ExtendedProtection.ChannelBindingKind">
      <summary vsli:raw="The &lt;see cref=&quot;T:System.Security.Authentication.ExtendedProtection.ChannelBindingKind&quot; /&gt; enumeration represents the kinds of channel bindings that can be queried from secure channels.">
        <see cref="T:System.Security.Authentication.ExtendedProtection.ChannelBindingKind" /> 列挙体は、セキュリティで保護されたチャネルから問い合わせができるチャネル バインディングの種類を表します。</summary>
    </member>
    <member name="F:System.Security.Authentication.ExtendedProtection.ChannelBindingKind.Endpoint">
      <summary vsli:raw="A channel binding unique to a given endpoint (a TLS server certificate, for example).">特定のエンドポイントに固有のチャネル バインディング (TLS サーバー証明書など)。</summary>
    </member>
    <member name="F:System.Security.Authentication.ExtendedProtection.ChannelBindingKind.Unique">
      <summary vsli:raw="A channel binding completely unique to a given channel (a TLS session key, for example).">特定のチャネルに完全に固有のチャネル バインディング (TLS セッション キーなど)。</summary>
    </member>
    <member name="F:System.Security.Authentication.ExtendedProtection.ChannelBindingKind.Unknown">
      <summary vsli:raw="An unknown channel binding type.">不明なチャネル バインディングの種類。</summary>
    </member>
    <member name="T:System.Security.Authentication.HashAlgorithmType">
      <summary vsli:raw="Specifies the algorithm used for generating message authentication codes (MACs).">メッセージ認証コード (MAC) を生成するために使用されるアルゴリズムを指定します。</summary>
    </member>
    <member name="F:System.Security.Authentication.HashAlgorithmType.Md5">
      <summary vsli:raw="&lt;para&gt;The Message Digest 5 (MD5) hashing algorithm.&lt;/para&gt;&lt;para&gt;Due to collision problems with MD5, Microsoft recommends SHA256.&lt;/para&gt;">メッセージ ダイジェスト 5 (MD5) ハッシュ アルゴリズム。</summary>
    </member>
    <member name="F:System.Security.Authentication.HashAlgorithmType.None">
      <summary vsli:raw="No hashing algorithm is used.">ハッシュ アルゴリズムは使用されません。</summary>
    </member>
    <member name="F:System.Security.Authentication.HashAlgorithmType.Sha1">
      <summary vsli:raw="&lt;para&gt;The Secure Hashing Algorithm (SHA1).&lt;/para&gt;&lt;para&gt;Due to collision problems with MD5, Microsoft recommends SHA256.&lt;/para&gt;">セキュア ハッシュ アルゴリズム (SHA-1)。</summary>
    </member>
    <member name="F:System.Security.Authentication.HashAlgorithmType.Sha256">
      <summary vsli:raw="The Secure Hashing Algorithm 2 (SHA-2), using a 256-bit digest.">256 ビット ダイジェストを使用するセキュア ハッシュ アルゴリズム 2 (SHA-2)。</summary>
    </member>
    <member name="F:System.Security.Authentication.HashAlgorithmType.Sha384">
      <summary vsli:raw="The Secure Hashing Algorithm 2 (SHA-2), using a 384-bit digest.">384 ビット ダイジェストを使用するセキュア ハッシュ アルゴリズム 2 (SHA-2)。</summary>
    </member>
    <member name="F:System.Security.Authentication.HashAlgorithmType.Sha512">
      <summary vsli:raw="The Secure Hashing Algorithm 2 (SHA-2), using a 512-bit digest.">512 ビット ダイジェストを使用するセキュア ハッシュ アルゴリズム 2 (SHA-2)。</summary>
    </member>
    <member name="T:System.Security.Authentication.SslProtocols">
      <summary vsli:raw="Defines the possible versions of &lt;see cref=&quot;T:System.Security.Authentication.SslProtocols&quot; /&gt;.">
        <see cref="T:System.Security.Authentication.SslProtocols" /> の想定されるバージョンを定義します。</summary>
    </member>
    <member name="F:System.Security.Authentication.SslProtocols.Default">
      <summary vsli:raw="Use None instead of Default. Default permits only the Secure Sockets Layer (SSL) 3.0 or Transport Layer Security (TLS) 1.0 protocols to be negotiated, and those options are now considered obsolete. Consequently, Default is not allowed in many organizations. Despite the name of this field, &lt;see cref=&quot;T:System.Net.Security.SslStream&quot; /&gt; does not use it as a default except under special circumstances.">Default ではなく None を使用します。 Default は、Secure Sockets Layer (SSL) 3.0 プロトコルまたはトランスポート層セキュリティ (TLS) 1.0 プロトコルのネゴシエートのみを許可していますが、これらのオプションは現在では使用されていません。 そのため、多くの組織では Default は許可されていません。 このようなフィールド名ですが、特殊な状況を除き、<see cref="T:System.Net.Security.SslStream" /> は既定として SSL を使用していません。</summary>
    </member>
    <member name="F:System.Security.Authentication.SslProtocols.None">
      <summary vsli:raw="Allows the operating system to choose the best protocol to use, and to block protocols that are not secure. Unless your app has a specific reason not to, you should use this field.">使用する最適なプロトコルを選択し、セキュリティで保護されていないプロトコルをブロックすることをオペレーティング システムに許可します。 アプリケーションに特別な理由がない限り、このフィールドを使用するようにしてください。</summary>
    </member>
    <member name="F:System.Security.Authentication.SslProtocols.Ssl2">
      <summary vsli:raw="Specifies the SSL 2.0 protocol. SSL 2.0 has been superseded by the TLS protocol and is provided for backward compatibility only.">SSL 2.0 プロトコルを指定します。 SSL 2.0 は TLS プロトコルに取って代わられました。これは、下位互換性の目的だけに用意されています。</summary>
    </member>
    <member name="F:System.Security.Authentication.SslProtocols.Ssl3">
      <summary vsli:raw="Specifies the SSL 3.0 protocol. SSL 3.0 has been superseded by the TLS protocol and is provided for backward compatibility only.">SSL 3.0 プロトコルを指定します。 SSL 3.0 は TLS プロトコルに取って代わられました。これは、下位互換性の目的だけに用意されています。</summary>
    </member>
    <member name="F:System.Security.Authentication.SslProtocols.Tls">
      <summary vsli:raw="Specifies the TLS 1.0 security protocol. TLS 1.0 is provided for backward compatibility only. The TLS protocol is defined in IETF RFC 2246. This member is obsolete starting in .NET 7.">TLS 1.0 セキュリティ プロトコルを指定します。  TLS 1.0 は、旧バージョンとの互換性のためだけに用意されています。 TLS プロトコルは、IETF RFC 2246 で定義されています。</summary>
    </member>
    <member name="F:System.Security.Authentication.SslProtocols.Tls11">
      <summary vsli:raw="Specifies the TLS 1.1 security protocol. The TLS protocol is defined in IETF RFC 4346. This member is obsolete starting in .NET 7.">TLS 1.1 セキュリティ プロトコルを指定します。 TLS プロトコルは、IETF RFC 4346 で定義されています。</summary>
    </member>
    <member name="F:System.Security.Authentication.SslProtocols.Tls12">
      <summary vsli:raw="Specifies the TLS 1.2 security protocol. The TLS protocol is defined in IETF RFC 5246.">TLS 1.2 セキュリティ プロトコルを指定します。 TLS プロトコルは、IETF RFC 5246 で定義されています。</summary>
    </member>
    <member name="F:System.Security.Authentication.SslProtocols.Tls13">
      <summary vsli:raw="Specifies the TLS 1.3 security protocol. The TLS protocol is defined in IETF RFC 8446.">TLS 1.3 セキュリティ プロトコルを指定します。 TLS プロトコルは、IETF RFC 8446 で定義されています。</summary>
    </member>
  </members>
</doc>