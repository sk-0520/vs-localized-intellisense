<?xml version="1.0" encoding="utf-8"?>
<doc>
  <assembly>
    <name>System.Runtime.Serialization.Xml</name>
  </assembly>
  <members>
    <member name="T:System.Runtime.Serialization.DataContractResolver">
      <summary>Fornece um mecanismo para mapear dinamicamente os tipos de e para representações de <see langword="xsi:type" /> durante a serialização e desserialização.</summary>
    </member>
    <member name="M:System.Runtime.Serialization.DataContractResolver.#ctor">
      <summary>Inicializa uma nova instância da classe <see cref="T:System.Runtime.Serialization.DataContractResolver" />.</summary>
    </member>
    <member name="M:System.Runtime.Serialization.DataContractResolver.ResolveName(System.String,System.String,System.Type,System.Runtime.Serialization.DataContractResolver)">
      <summary>Substituir este método para mapear o nome <see langword="xsi:type" /> mapeado e o namespace para um tipo de contrato de dados durante a desserialização.</summary>
      <param name="typeName">O nome <see langword="xsi:type" /> a ser mapeado.</param>
      <param name="typeNamespace">O namespace <see langword="xsi:type" /> a ser mapeado.</param>
      <param name="declaredType">O tipo declarado no contrato de dados.</param>
      <param name="knownTypeResolver">O resolvedor de tipo conhecido.</param>
      <returns>O tipo para o qual o namespace e nome <see langword="xsi:type" /> é mapeado.</returns>
    </member>
    <member name="M:System.Runtime.Serialization.DataContractResolver.TryResolveType(System.Type,System.Type,System.Runtime.Serialization.DataContractResolver,System.Xml.XmlDictionaryString@,System.Xml.XmlDictionaryString@)">
      <summary>Substitua este método para mapear um tipo de contrato de dados para um nome e namespace <see langword="xsi:type" /> durante a serialização.</summary>
      <param name="type">O tipo a ser mapeado.</param>
      <param name="declaredType">O tipo declarado no contrato de dados.</param>
      <param name="knownTypeResolver">O resolvedor de tipo conhecido.</param>
      <param name="typeName">O nome xsi:type.</param>
      <param name="typeNamespace">O namespace xsi:type.</param>
      <returns>
        <see langword="true" /> se o mapeamento tiver sido bem sucedido, caso contrário, <see langword="false" />.</returns>
    </member>
    <member name="T:System.Runtime.Serialization.DataContractSerializer">
      <summary>Serializa e desserializa uma instância de um tipo em um fluxo XML ou em um documento usando um contrato de dados fornecido. Essa classe não pode ser herdada.</summary>
    </member>
    <member name="M:System.Runtime.Serialization.DataContractSerializer.#ctor(System.Type)">
      <summary>Inicializa uma nova instância da classe <see cref="T:System.Runtime.Serialization.DataContractSerializer" /> para serializar ou desserializar um objeto do tipo especificado.</summary>
      <param name="type">O tipo das instâncias serializadas ou desserializadas.</param>
    </member>
    <member name="M:System.Runtime.Serialization.DataContractSerializer.#ctor(System.Type,System.Collections.Generic.IEnumerable{System.Type})">
      <summary>Inicializa uma nova instância da classe <see cref="T:System.Runtime.Serialization.DataContractSerializer" /> para serializar ou desserializar um objeto do tipo especifico e uma coleção de tipos conhecidos que podem existir no grafo do objeto.</summary>
      <param name="type">O tipo das instâncias serializadas ou desserializadas.</param>
      <param name="knownTypes">Um <see cref="T:System.Collections.Generic.IEnumerable`1" /> de <see cref="T:System.Type" /> que contém os tipos que podem estar presentes no grafo do objeto.</param>
    </member>
    <member name="M:System.Runtime.Serialization.DataContractSerializer.#ctor(System.Type,System.Runtime.Serialization.DataContractSerializerSettings)">
      <summary>Inicializa uma nova instância da classe <see cref="T:System.Runtime.Serialization.DataContractSerializer" /> para serializar ou desserializar um objeto do tipo e das configurações especificadas.</summary>
      <param name="type">O tipo da instância a ser serializada ou desserializada.</param>
      <param name="settings">As configurações do serializador.</param>
    </member>
    <member name="M:System.Runtime.Serialization.DataContractSerializer.#ctor(System.Type,System.String,System.String)">
      <summary>Inicializa uma nova instância da classe <see cref="T:System.Runtime.Serialization.DataContractSerializer" /> para serializar ou desserializar um objeto do tipo especificado usando o namespace e o elemento raiz XML fornecidos.</summary>
      <param name="type">O tipo das instâncias serializadas ou desserializadas.</param>
      <param name="rootName">O nome do elemento XML que inclui o conteúdo para serializar ou desserializar.</param>
      <param name="rootNamespace">O namespace do elemento XML que inclui o conteúdo a ser serializado ou desserializado.</param>
    </member>
    <member name="M:System.Runtime.Serialization.DataContractSerializer.#ctor(System.Type,System.String,System.String,System.Collections.Generic.IEnumerable{System.Type})">
      <summary>Inicializa uma nova instância da classe <see cref="T:System.Runtime.Serialization.DataContractSerializer" /> para serializar ou desserializar um objeto do tipo especificado. Esse método também especifica o elemento XML raiz e o namespace em dois parâmetros de cadeia de caracteres, bem como uma lista de tipos conhecidos que podem estar presentes no grafo do objeto.</summary>
      <param name="type">O tipo das instâncias serializadas ou desserializadas.</param>
      <param name="rootName">O nome do elemento raiz do conteúdo.</param>
      <param name="rootNamespace">O namespace do elemento raiz.</param>
      <param name="knownTypes">Um <see cref="T:System.Collections.Generic.IEnumerable`1" /> de <see cref="T:System.Type" /> que contém os tipos que podem estar presentes no grafo do objeto.</param>
    </member>
    <member name="M:System.Runtime.Serialization.DataContractSerializer.#ctor(System.Type,System.Xml.XmlDictionaryString,System.Xml.XmlDictionaryString)">
      <summary>Inicializa uma nova instância da classe <see cref="T:System.Runtime.Serialization.DataContractSerializer" /> para serializar ou desserializar um objeto do tipo especificado usando o namespace e o elemento raiz XML por meio de parâmetros do tipo <see cref="T:System.Xml.XmlDictionaryString" />.</summary>
      <param name="type">O tipo das instâncias serializadas ou desserializadas.</param>
      <param name="rootName">Um <see cref="T:System.Xml.XmlDictionaryString" /> que contém o nome do elemento raiz do conteúdo.</param>
      <param name="rootNamespace">Um <see cref="T:System.Xml.XmlDictionaryString" /> que contém o namespace do elemento raiz.</param>
    </member>
    <member name="M:System.Runtime.Serialization.DataContractSerializer.#ctor(System.Type,System.Xml.XmlDictionaryString,System.Xml.XmlDictionaryString,System.Collections.Generic.IEnumerable{System.Type})">
      <summary>Inicializa uma nova instância da classe <see cref="T:System.Runtime.Serialization.DataContractSerializer" /> para serializar ou desserializar um objeto do tipo especificado. Esse método também especifica o elemento XML raiz e o namespace em dois parâmetros <see cref="T:System.Xml.XmlDictionaryString" />, bem como uma lista de tipos conhecidos que podem estar presentes no grafo do objeto.</summary>
      <param name="type">O tipo das instâncias serializadas ou desserializadas.</param>
      <param name="rootName">Um <see cref="T:System.Xml.XmlDictionaryString" /> que contém o nome do elemento raiz do conteúdo.</param>
      <param name="rootNamespace">Um <see cref="T:System.Xml.XmlDictionaryString" /> que contém o namespace do elemento raiz.</param>
      <param name="knownTypes">Um <see cref="T:System.Collections.Generic.IEnumerable`1" /> de <see cref="T:System.Type" /> que contém os tipos conhecidos que podem estar presentes no grafo de objeto.</param>
    </member>
    <member name="M:System.Runtime.Serialization.DataContractSerializer.IsStartObject(System.Xml.XmlDictionaryReader)">
      <summary>Determina se o <see cref="T:System.Xml.XmlDictionaryReader" /> está posicionado em um objeto que pode ser desserializado.</summary>
      <param name="reader">Um <see cref="T:System.Xml.XmlDictionaryReader" /> usado para ler o fluxo XML.</param>
      <returns>
        <see langword="true" /> se o leitor estiver no elemento de início do fluxo a ser lido, caso contrário, <see langword="false" />.</returns>
    </member>
    <member name="M:System.Runtime.Serialization.DataContractSerializer.IsStartObject(System.Xml.XmlReader)">
      <summary>Determina se o <see cref="T:System.Xml.XmlReader" /> está posicionado em um objeto que pode ser desserializado.</summary>
      <param name="reader">O <see cref="T:System.Xml.XmlReader" /> usado para ler o fluxo XML.</param>
      <returns>
        <see langword="true" /> se o leitor estiver no elemento de início do fluxo a ser lido, caso contrário, <see langword="false" />.</returns>
    </member>
    <member name="M:System.Runtime.Serialization.DataContractSerializer.ReadObject(System.Xml.XmlDictionaryReader,System.Boolean)">
      <summary>Lê o fluxo XML com um <see cref="T:System.Xml.XmlDictionaryReader" /> e retorna o objeto desserializado e também especifica se uma verificação é feita para verificar o nome do objeto antes de ler seu valor.</summary>
      <param name="reader">O <see cref="T:System.Xml.XmlDictionaryReader" /> usado para ler o fluxo XML.</param>
      <param name="verifyObjectName">
        <see langword="true" /> para verificar se o nome do objeto corresponde ao valor de nome raiz fornecido no construtor, caso contrário, <see langword="false" />.</param>
      <exception cref="T:System.Runtime.Serialization.SerializationException">O parâmetro <paramref name="verifyObjectName" /> é definido como <see langword="true" /> e o nome do elemento e o namespace não correspondem aos valores definidos no construtor.</exception>
      <returns>O objeto desserializado.</returns>
    </member>
    <member name="M:System.Runtime.Serialization.DataContractSerializer.ReadObject(System.Xml.XmlDictionaryReader,System.Boolean,System.Runtime.Serialization.DataContractResolver)">
      <summary>Lê um documento ou fluxo de documentos XML e retorna o objeto desserializado.  O método inclui um parâmetro para especificar se o nome do objeto é verificado e validado e um resolvedor para mapear declarações <see langword="xsi:type" /> em runtime.</summary>
      <param name="reader">O leitor XML usado para ler o conteúdo.</param>
      <param name="verifyObjectName">
        <see langword="true" /> para verificar o nome do objeto, caso contrário, <see langword="false" />.</param>
      <param name="dataContractResolver">Uma implementação de <see cref="T:System.Runtime.Serialization.DataContractResolver" /> para mapear declarações <see langword="xsi:type" /> para tipos de contrato de dados.</param>
      <returns>O objeto desserializado.</returns>
    </member>
    <member name="M:System.Runtime.Serialization.DataContractSerializer.ReadObject(System.Xml.XmlReader)">
      <summary>Lê o fluxo XML com um <see cref="T:System.Xml.XmlReader" /> e retorna o objeto desserializado.</summary>
      <param name="reader">O <see cref="T:System.Xml.XmlReader" /> usado para ler o fluxo XML.</param>
      <returns>O objeto desserializado.</returns>
    </member>
    <member name="M:System.Runtime.Serialization.DataContractSerializer.ReadObject(System.Xml.XmlReader,System.Boolean)">
      <summary>Lê o fluxo XML com um <see cref="T:System.Xml.XmlReader" /> e retorna o objeto desserializado e também especifica se uma verificação é feita para verificar o nome do objeto antes de ler seu valor.</summary>
      <param name="reader">O <see cref="T:System.Xml.XmlReader" /> usado para ler o fluxo XML.</param>
      <param name="verifyObjectName">
        <see langword="true" /> para verificar se o nome do objeto corresponde ao valor de nome raiz fornecido no construtor, caso contrário, <see langword="false" />.</param>
      <exception cref="T:System.Runtime.Serialization.SerializationException">O parâmetro <paramref name="verifyObjectName" /> é definido como <see langword="true" /> e o nome do elemento e o namespace não correspondem aos valores definidos no construtor.</exception>
      <returns>O objeto desserializado.</returns>
    </member>
    <member name="M:System.Runtime.Serialization.DataContractSerializer.WriteEndObject(System.Xml.XmlDictionaryWriter)">
      <summary>Grava o elemento XML de fechamento usando um <see cref="T:System.Xml.XmlDictionaryWriter" />.</summary>
      <param name="writer">O <see cref="T:System.Xml.XmlDictionaryWriter" /> usado para gravar o fluxo.</param>
      <exception cref="T:System.Runtime.Serialization.InvalidDataContractException">O tipo sendo serializado não está em conformidade com as regras do contrato de dados. Por exemplo, o atributo <see cref="T:System.Runtime.Serialization.DataContractAttribute" /> não foi aplicado ao tipo.</exception>
      <exception cref="T:System.Runtime.Serialization.SerializationException">Há um problema com a instância que está sendo gravada.</exception>
    </member>
    <member name="M:System.Runtime.Serialization.DataContractSerializer.WriteEndObject(System.Xml.XmlWriter)">
      <summary>Grava o elemento XML de fechamento usando um <see cref="T:System.Xml.XmlWriter" />.</summary>
      <param name="writer">O <see cref="T:System.Xml.XmlWriter" /> usado para gravar o fluxo.</param>
      <exception cref="T:System.Runtime.Serialization.InvalidDataContractException">O tipo sendo serializado não está em conformidade com as regras do contrato de dados. Por exemplo, o atributo <see cref="T:System.Runtime.Serialization.DataContractAttribute" /> não foi aplicado ao tipo.</exception>
      <exception cref="T:System.Runtime.Serialization.SerializationException">Há um problema com a instância que está sendo gravada.</exception>
    </member>
    <member name="M:System.Runtime.Serialization.DataContractSerializer.WriteObject(System.Xml.XmlDictionaryWriter,System.Object,System.Runtime.Serialization.DataContractResolver)">
      <summary>Grava todos os dados de objeto (elemento XML inicial, conteúdo e elemento XML de fechamento) para um documento ou fluxo XML usando o XmlDictionaryWriter especificado. O método inclui um resolvedor para mapear declarações <see langword="xsi:type" /> em runtime.</summary>
      <param name="writer">Um XmlDictionaryWriter usado para gravar o conteúdo do documento ou fluxo XML.</param>
      <param name="graph">O objeto que contém o conteúdo a ser gravado.</param>
      <param name="dataContractResolver">Uma implementação de <see cref="T:System.Runtime.Serialization.DataContractResolver" /> usada para mapear declarações <see langword="xsi:type" /> para contrato de dados conhecidos.</param>
    </member>
    <member name="M:System.Runtime.Serialization.DataContractSerializer.WriteObject(System.Xml.XmlWriter,System.Object)">
      <summary>Grava todos os dados de objeto (elemento XML de abertura, conteúdo e elemento XML de fechamento) em um documento ou fluxo XML com um <see cref="T:System.Xml.XmlWriter" />.</summary>
      <param name="writer">Um <see cref="T:System.Xml.XmlWriter" /> usado para gravar o fluxo ou o documento XML.</param>
      <param name="graph">O objeto que contém os dados a serem gravados no fluxo.</param>
      <exception cref="T:System.Runtime.Serialization.InvalidDataContractException">O tipo sendo serializado não está em conformidade com as regras do contrato de dados. Por exemplo, o atributo <see cref="T:System.Runtime.Serialization.DataContractAttribute" /> não foi aplicado ao tipo.</exception>
      <exception cref="T:System.Runtime.Serialization.SerializationException">Há um problema com a instância que está sendo gravada.</exception>
    </member>
    <member name="M:System.Runtime.Serialization.DataContractSerializer.WriteObjectContent(System.Xml.XmlDictionaryWriter,System.Object)">
      <summary>Grava o conteúdo de XML usando um <see cref="T:System.Xml.XmlDictionaryWriter" />.</summary>
      <param name="writer">O <see cref="T:System.Xml.XmlDictionaryWriter" /> usado para gravar o fluxo.</param>
      <param name="graph">O objeto a ser gravado no fluxo.</param>
      <exception cref="T:System.Runtime.Serialization.InvalidDataContractException">O tipo sendo serializado não está em conformidade com as regras do contrato de dados. Por exemplo, o atributo <see cref="T:System.Runtime.Serialization.DataContractAttribute" /> não foi aplicado ao tipo.</exception>
      <exception cref="T:System.Runtime.Serialization.SerializationException">Há um problema com a instância que está sendo gravada.</exception>
    </member>
    <member name="M:System.Runtime.Serialization.DataContractSerializer.WriteObjectContent(System.Xml.XmlWriter,System.Object)">
      <summary>Grava o conteúdo de XML usando um <see cref="T:System.Xml.XmlWriter" />.</summary>
      <param name="writer">O <see cref="T:System.Xml.XmlWriter" /> usado para gravar o fluxo.</param>
      <param name="graph">O objeto a ser gravado no fluxo.</param>
      <exception cref="T:System.Runtime.Serialization.InvalidDataContractException">O tipo sendo serializado não está em conformidade com as regras do contrato de dados. Por exemplo, o atributo <see cref="T:System.Runtime.Serialization.DataContractAttribute" /> não foi aplicado ao tipo.</exception>
      <exception cref="T:System.Runtime.Serialization.SerializationException">Há um problema com a instância que está sendo gravada.</exception>
    </member>
    <member name="M:System.Runtime.Serialization.DataContractSerializer.WriteStartObject(System.Xml.XmlDictionaryWriter,System.Object)">
      <summary>Grava o elemento XML de abertura usando um <see cref="T:System.Xml.XmlDictionaryWriter" />.</summary>
      <param name="writer">O <see cref="T:System.Xml.XmlDictionaryWriter" /> usado para gravar o elemento inicial do XML.</param>
      <param name="graph">O objeto a ser gravado.</param>
    </member>
    <member name="M:System.Runtime.Serialization.DataContractSerializer.WriteStartObject(System.Xml.XmlWriter,System.Object)">
      <summary>Grava o elemento XML de abertura usando um <see cref="T:System.Xml.XmlWriter" />.</summary>
      <param name="writer">O <see cref="T:System.Xml.XmlWriter" /> usado para gravar o elemento inicial do XML.</param>
      <param name="graph">O objeto a ser gravado.</param>
    </member>
    <member name="P:System.Runtime.Serialization.DataContractSerializer.DataContractResolver">
      <summary>Obtém o componente usado para mapear dinamicamente declarações <see langword="xsi:type" /> de tipos de contrato conhecidos.</summary>
      <returns>Uma implementação da <see cref="T:System.Runtime.Serialization.DataContractResolver" /> classe.</returns>
    </member>
    <member name="P:System.Runtime.Serialization.DataContractSerializer.IgnoreExtensionDataObject">
      <summary>Obtém um valor que especifica se deve ignorar os dados fornecidos por uma extensão da classe quando a classe está sendo serializada ou desserializada.</summary>
      <returns>
        <see langword="true" /> para omitir os dados de extensão; caso contrário, <see langword="false" /> .</returns>
    </member>
    <member name="P:System.Runtime.Serialization.DataContractSerializer.KnownTypes">
      <summary>Obtém uma coleção de tipos que podem estar presentes no grafo de objeto serializado usando essa instância do <see cref="T:System.Runtime.Serialization.DataContractSerializer" />.</summary>
      <returns>Um <see cref="T:System.Collections.ObjectModel.ReadOnlyCollection`1" /> que contém os tipos esperados passados como tipos conhecidos para o construtor <see cref="T:System.Runtime.Serialization.DataContractSerializer" />.</returns>
    </member>
    <member name="P:System.Runtime.Serialization.DataContractSerializer.MaxItemsInObjectGraph">
      <summary>Obtém o número máximo de itens em um grafo de objeto a serem serializados ou desserializados.</summary>
      <exception cref="T:System.ArgumentOutOfRangeException">O número de itens excede o valor máximo.</exception>
      <returns>O número máximo de itens a serem serializados ou desserializados. O padrão é <see cref="F:System.Int32.MaxValue" />.</returns>
    </member>
    <member name="P:System.Runtime.Serialization.DataContractSerializer.PreserveObjectReferences">
      <summary>Obtém um valor que especifica se constructos XML não padrão devem ser usados para preservar os dados de referência de objeto.</summary>
      <returns>
        <see langword="true" /> para manter as referências; caso contrário, <see langword="false" />.</returns>
    </member>
    <member name="P:System.Runtime.Serialization.DataContractSerializer.SerializeReadOnlyTypes">
      <summary>Obtém um valor que especifica se tipos de somente leitura são serializados.</summary>
      <returns>
        <see langword="true" /> se tipos somente leitura forem serializados; <see langword="false" /> se todos os tipos forem serializados.</returns>
    </member>
    <member name="T:System.Runtime.Serialization.DataContractSerializerExtensions">
      <summary>Estende a classe <see cref="T:System.Runtime.Serialization.DataContractSerializer" /> fornecendo métodos para definir e obter um <see cref="T:System.Runtime.Serialization.ISerializationSurrogateProvider" />.</summary>
    </member>
    <member name="M:System.Runtime.Serialization.DataContractSerializerExtensions.GetSerializationSurrogateProvider(System.Runtime.Serialization.DataContractSerializer)">
      <summary>Retorna o provedor de serialização alternativo para esse serializador.</summary>
      <param name="serializer">O serializador que está sendo substituído.</param>
      <returns>O serializador alternativo.</returns>
    </member>
    <member name="M:System.Runtime.Serialization.DataContractSerializerExtensions.SetSerializationSurrogateProvider(System.Runtime.Serialization.DataContractSerializer,System.Runtime.Serialization.ISerializationSurrogateProvider)">
      <summary>Especifica um provedor de serialização alternativo para esse <see cref="T:System.Runtime.Serialization.DataContractSerializer" />.</summary>
      <param name="serializer">O serializador que está sendo substituído.</param>
      <param name="provider">O provedor de serialização alternativo.</param>
    </member>
    <member name="T:System.Runtime.Serialization.DataContractSerializerSettings">
      <summary>Especifica as configurações do serializador de contrato de dados.</summary>
    </member>
    <member name="M:System.Runtime.Serialization.DataContractSerializerSettings.#ctor">
      <summary>Inicializa uma nova instância da classe <see cref="T:System.Runtime.Serialization.DataContractSerializerSettings" />.</summary>
    </member>
    <member name="P:System.Runtime.Serialization.DataContractSerializerSettings.DataContractResolver">
      <summary>Obtém ou define o componente usado para mapear dinamicamente declarações xsi:type de tipos de contrato conhecidos.</summary>
      <returns>O componente usado para mapear dinamicamente declarações xsi: Type para tipos de contrato conhecidos.</returns>
    </member>
    <member name="P:System.Runtime.Serialization.DataContractSerializerSettings.IgnoreExtensionDataObject">
      <summary>Obtém ou define um valor que especifica se deve ignorar os dados fornecidos por uma extensão da classe quando a classe está sendo serializada ou desserializada.</summary>
      <returns>
        <see langword="true" /> para ignorar os dados fornecidos por uma extensão da classe quando a classe está sendo serializada ou desserializada; caso contrário, <see langword="false" /> .</returns>
    </member>
    <member name="P:System.Runtime.Serialization.DataContractSerializerSettings.KnownTypes">
      <summary>Obtém ou define uma coleção de tipos que podem estar presentes no grafo de objeto serializado usando essa instância de DataContractSerializerSettings.</summary>
      <returns>Uma coleção de tipos que podem estar presentes no grafo de objeto serializado usando essa instância do DataContractSerializerSettings.</returns>
    </member>
    <member name="P:System.Runtime.Serialization.DataContractSerializerSettings.MaxItemsInObjectGraph">
      <summary>Obtém ou define o número máximo de itens em um grafo de objeto a serem serializados ou desserializados.</summary>
      <returns>O número máximo de itens em um grafo de objeto para serializar ou desserializar.</returns>
    </member>
    <member name="P:System.Runtime.Serialization.DataContractSerializerSettings.PreserveObjectReferences">
      <summary>Obtém ou define um valor que especifica se constructos XML não padrão devem ser usados para preservar os dados de referência de objeto.</summary>
      <returns>
        <see langword="true" /> para usar constructos XML não padrão para preservar os dados de referência de objeto, caso contrário, <see langword="false" />.</returns>
    </member>
    <member name="P:System.Runtime.Serialization.DataContractSerializerSettings.RootName">
      <summary>Obtém ou define o nome raiz do objeto selecionado.</summary>
      <returns>O nome raiz do objeto selecionado.</returns>
    </member>
    <member name="P:System.Runtime.Serialization.DataContractSerializerSettings.RootNamespace">
      <summary>Obtém ou define o namespace raiz para o objeto especificado.</summary>
      <returns>O namespace raiz do objeto especificado.</returns>
    </member>
    <member name="P:System.Runtime.Serialization.DataContractSerializerSettings.SerializeReadOnlyTypes">
      <summary>Obtém ou define um valor que especifica se deve serializar os tipos somente leitura.</summary>
      <returns>
        <see langword="true" /> para serializar tipos somente leitura; caso contrário, <see langword="false" /> .</returns>
    </member>
    <member name="T:System.Runtime.Serialization.ExportOptions">
      <summary>Representa as opções que podem ser definidas para um <see cref="T:System.Runtime.Serialization.XsdDataContractExporter" />.</summary>
    </member>
    <member name="M:System.Runtime.Serialization.ExportOptions.#ctor">
      <summary>Inicializa uma nova instância da classe <see cref="T:System.Runtime.Serialization.ExportOptions" />.</summary>
    </member>
    <member name="P:System.Runtime.Serialization.ExportOptions.KnownTypes">
      <summary>Obtém a coleção de tipos que podem ser encontrados durante a serialização ou a desserialização.</summary>
      <returns>Uma <see langword="KnownTypes" /> coleção que contém tipos que podem ser encontrados durante a serialização ou desserialização. As representações de esquema XML são exportadas para todos os tipos especificados nesta coleção pelo <see cref="T:System.Runtime.Serialization.XsdDataContractExporter" /> .</returns>
    </member>
    <member name="T:System.Runtime.Serialization.ExtensionDataObject">
      <summary>Armazena dados de um contrato de dados com controle de versão que foi estendido adicionando novos membros.</summary>
    </member>
    <member name="T:System.Runtime.Serialization.IExtensibleDataObject">
      <summary>Fornece uma estrutura de dados para armazenar dados extra encontrados pelo <see cref="T:System.Runtime.Serialization.XmlObjectSerializer" /> durante a desserialização de um tipo marcado com o atributo <see cref="T:System.Runtime.Serialization.DataContractAttribute" />.</summary>
    </member>
    <member name="P:System.Runtime.Serialization.IExtensibleDataObject.ExtensionData">
      <summary>Obtém ou define a estrutura que contém dados extras.</summary>
      <returns>Um <see cref="T:System.Runtime.Serialization.ExtensionDataObject" /> que contém dados que não são reconhecidos como pertencentes ao contrato de dados.</returns>
    </member>
    <member name="T:System.Runtime.Serialization.XmlObjectSerializer">
      <summary>Fornece a classe base usada para serializar objetos como documentos ou fluxos XML. Esta classe é abstrata.</summary>
    </member>
    <member name="M:System.Runtime.Serialization.XmlObjectSerializer.#ctor">
      <summary>Inicializa uma nova instância da classe <see cref="T:System.Runtime.Serialization.XmlObjectSerializer" />.</summary>
    </member>
    <member name="M:System.Runtime.Serialization.XmlObjectSerializer.IsStartObject(System.Xml.XmlDictionaryReader)">
      <summary>Obtém um valor que especifica se o <see cref="T:System.Xml.XmlDictionaryReader" /> é posicionado sobre um elemento XML que pode ser lido.</summary>
      <param name="reader">Um <see cref="T:System.Xml.XmlDictionaryReader" /> usado para ler o fluxo ou o documento XML.</param>
      <returns>
        <see langword="true" /> se o leitor pode ler os dados; caso contrário, <see langword="false" />.</returns>
    </member>
    <member name="M:System.Runtime.Serialization.XmlObjectSerializer.IsStartObject(System.Xml.XmlReader)">
      <summary>Obtém um valor que especifica se o <see cref="T:System.Xml.XmlReader" /> é posicionado sobre um elemento XML que pode ser lido.</summary>
      <param name="reader">Um <see cref="T:System.Xml.XmlReader" /> usado para ler o fluxo ou o documento XML.</param>
      <returns>
        <see langword="true" /> se o leitor estiver posicionado sobre o elemento inicial; caso contrário, <see langword="false" />.</returns>
    </member>
    <member name="M:System.Runtime.Serialization.XmlObjectSerializer.ReadObject(System.IO.Stream)">
      <summary>Lê o fluxo XML ou o documento com um <see cref="T:System.IO.Stream" /> e retorna o objeto desserializado.</summary>
      <param name="stream">Um <see cref="T:System.IO.Stream" /> usado para ler o fluxo ou o documento XML.</param>
      <returns>O objeto desserializado.</returns>
    </member>
    <member name="M:System.Runtime.Serialization.XmlObjectSerializer.ReadObject(System.Xml.XmlDictionaryReader)">
      <summary>Lê o documento ou o fluxo XML com um <see cref="T:System.Xml.XmlDictionaryReader" /> e retorna o objeto desserializado.</summary>
      <param name="reader">Um <see cref="T:System.Xml.XmlDictionaryReader" /> usado para ler o documento XML.</param>
      <returns>O objeto desserializado.</returns>
    </member>
    <member name="M:System.Runtime.Serialization.XmlObjectSerializer.ReadObject(System.Xml.XmlDictionaryReader,System.Boolean)">
      <summary>Lê o fluxo ou o documento XML com um <see cref="T:System.Xml.XmlDictionaryReader" /> e retorna o objeto desserializado; ele também permite que você especifique se o serializador pode ler os dados antes de tentar lê-los.</summary>
      <param name="reader">Um <see cref="T:System.Xml.XmlDictionaryReader" /> usado para ler o documento XML.</param>
      <param name="verifyObjectName">
        <see langword="true" /> para verificar se o nome e o namespace do elemento XML delimitador correspondem ao nome e namespace raiz; caso contrário, <see langword="false" /> para ignorar a verificação.</param>
      <returns>O objeto desserializado.</returns>
    </member>
    <member name="M:System.Runtime.Serialization.XmlObjectSerializer.ReadObject(System.Xml.XmlReader)">
      <summary>Lê o documento ou o fluxo XML com um <see cref="T:System.Xml.XmlReader" /> e retorna o objeto desserializado.</summary>
      <param name="reader">Um <see cref="T:System.Xml.XmlReader" /> usado para ler o fluxo ou o documento XML.</param>
      <returns>O objeto desserializado.</returns>
    </member>
    <member name="M:System.Runtime.Serialization.XmlObjectSerializer.ReadObject(System.Xml.XmlReader,System.Boolean)">
      <summary>Lê o documento ou o fluxo XML com um <see cref="T:System.Xml.XmlReader" /> e retorna o objeto desserializado; ele também permite que você especifique se o serializador pode ler os dados antes de tentar lê-los.</summary>
      <param name="reader">Um <see cref="T:System.Xml.XmlReader" /> usado para ler o documento ou o fluxo XML.</param>
      <param name="verifyObjectName">
        <see langword="true" /> para verificar se o nome do elemento XML e o namespace delimitador correspondem ao nome e namespace raiz; <see langword="false" /> para ignorar a verificação.</param>
      <returns>O objeto desserializado.</returns>
    </member>
    <member name="M:System.Runtime.Serialization.XmlObjectSerializer.WriteEndObject(System.Xml.XmlDictionaryWriter)">
      <summary>Grava o final dos dados de objeto como um elemento XML de fechamento no documento ou fluxo XML com um <see cref="T:System.Xml.XmlDictionaryWriter" />.</summary>
      <param name="writer">Um <see cref="T:System.Xml.XmlDictionaryWriter" /> usado para gravar o documento ou fluxo XML.</param>
      <exception cref="T:System.Runtime.Serialization.InvalidDataContractException">O tipo que está sendo serializado não está em conformidade com as regras do contrato de dados. Por exemplo, o atributo <see cref="T:System.Runtime.Serialization.DataContractAttribute" /> não foi aplicado ao tipo.</exception>
      <exception cref="T:System.Runtime.Serialization.SerializationException">Há um problema com a instância que está sendo serializada.</exception>
      <exception cref="T:System.ServiceModel.QuotaExceededException">o número máximo de objetos a serem serializados foi excedido. Verifique a propriedade <see cref="P:System.Runtime.Serialization.DataContractSerializer.MaxItemsInObjectGraph" />.</exception>
    </member>
    <member name="M:System.Runtime.Serialization.XmlObjectSerializer.WriteEndObject(System.Xml.XmlWriter)">
      <summary>Grava o final dos dados de objeto como um elemento XML de fechamento no documento ou fluxo XML com um <see cref="T:System.Xml.XmlWriter" />.</summary>
      <param name="writer">Um <see cref="T:System.Xml.XmlWriter" /> usado para gravar o documento ou fluxo XML.</param>
      <exception cref="T:System.Runtime.Serialization.InvalidDataContractException">O tipo que está sendo serializado não está em conformidade com as regras do contrato de dados. Por exemplo, o atributo <see cref="T:System.Runtime.Serialization.DataContractAttribute" /> não foi aplicado ao tipo.</exception>
      <exception cref="T:System.Runtime.Serialization.SerializationException">Há um problema com a instância que está sendo serializada.</exception>
      <exception cref="T:System.ServiceModel.QuotaExceededException">o número máximo de objetos a serem serializados foi excedido. Verifique a propriedade <see cref="P:System.Runtime.Serialization.DataContractSerializer.MaxItemsInObjectGraph" />.</exception>
    </member>
    <member name="M:System.Runtime.Serialization.XmlObjectSerializer.WriteObject(System.IO.Stream,System.Object)">
      <summary>Grava o conteúdo completo (início, conteúdo e final) do objeto no documento XML ou fluxo com o <see cref="T:System.IO.Stream" /> especificado.</summary>
      <param name="stream">Um <see cref="T:System.IO.Stream" /> usado para gravar o documento ou fluxo XML.</param>
      <param name="graph">O objeto que contém os dados a serem gravados no fluxo.</param>
      <exception cref="T:System.Runtime.Serialization.InvalidDataContractException">O tipo que está sendo serializado não está em conformidade com as regras do contrato de dados. Por exemplo, o atributo <see cref="T:System.Runtime.Serialization.DataContractAttribute" /> não foi aplicado ao tipo.</exception>
      <exception cref="T:System.Runtime.Serialization.SerializationException">Há um problema com a instância que está sendo serializada.</exception>
      <exception cref="T:System.ServiceModel.QuotaExceededException">o número máximo de objetos a serem serializados foi excedido. Verifique a propriedade <see cref="P:System.Runtime.Serialization.DataContractSerializer.MaxItemsInObjectGraph" />.</exception>
    </member>
    <member name="M:System.Runtime.Serialization.XmlObjectSerializer.WriteObject(System.Xml.XmlDictionaryWriter,System.Object)">
      <summary>Grava o conteúdo completo (início, conteúdo e final) do objeto no documento XML ou fluxo com o <see cref="T:System.Xml.XmlDictionaryWriter" /> especificado.</summary>
      <param name="writer">Um <see cref="T:System.Xml.XmlDictionaryWriter" /> usado para gravar o conteúdo do documento ou fluxo XML.</param>
      <param name="graph">O objeto que contém o conteúdo a ser gravado.</param>
      <exception cref="T:System.Runtime.Serialization.InvalidDataContractException">O tipo que está sendo serializado não está em conformidade com as regras do contrato de dados. Por exemplo, o atributo <see cref="T:System.Runtime.Serialization.DataContractAttribute" /> não foi aplicado ao tipo.</exception>
      <exception cref="T:System.Runtime.Serialization.SerializationException">Há um problema com a instância que está sendo serializada.</exception>
      <exception cref="T:System.ServiceModel.QuotaExceededException">o número máximo de objetos a serem serializados foi excedido. Verifique a propriedade <see cref="P:System.Runtime.Serialization.DataContractSerializer.MaxItemsInObjectGraph" />.</exception>
    </member>
    <member name="M:System.Runtime.Serialization.XmlObjectSerializer.WriteObject(System.Xml.XmlWriter,System.Object)">
      <summary>Grava o conteúdo completo (início, conteúdo e final) do objeto no documento XML ou fluxo com o <see cref="T:System.Xml.XmlWriter" /> especificado.</summary>
      <param name="writer">Um <see cref="T:System.Xml.XmlWriter" /> usado para gravar o documento ou fluxo XML.</param>
      <param name="graph">O objeto que contém o conteúdo a ser gravado.</param>
      <exception cref="T:System.Runtime.Serialization.InvalidDataContractException">O tipo que está sendo serializado não está em conformidade com as regras do contrato de dados. Por exemplo, o atributo <see cref="T:System.Runtime.Serialization.DataContractAttribute" /> não foi aplicado ao tipo.</exception>
      <exception cref="T:System.Runtime.Serialization.SerializationException">Há um problema com a instância que está sendo serializada.</exception>
      <exception cref="T:System.ServiceModel.QuotaExceededException">o número máximo de objetos a serem serializados foi excedido. Verifique a propriedade <see cref="P:System.Runtime.Serialization.DataContractSerializer.MaxItemsInObjectGraph" />.</exception>
    </member>
    <member name="M:System.Runtime.Serialization.XmlObjectSerializer.WriteObjectContent(System.Xml.XmlDictionaryWriter,System.Object)">
      <summary>Grava apenas o conteúdo do objeto no documento ou fluxo XML usando o <see cref="T:System.Xml.XmlDictionaryWriter" /> especificado.</summary>
      <param name="writer">Um <see cref="T:System.Xml.XmlDictionaryWriter" /> usado para gravar o documento ou fluxo XML.</param>
      <param name="graph">O objeto que contém o conteúdo a ser gravado.</param>
      <exception cref="T:System.Runtime.Serialization.InvalidDataContractException">O tipo que está sendo serializado não está em conformidade com as regras do contrato de dados. Por exemplo, o atributo <see cref="T:System.Runtime.Serialization.DataContractAttribute" /> não foi aplicado ao tipo.</exception>
      <exception cref="T:System.Runtime.Serialization.SerializationException">Há um problema com a instância que está sendo serializada.</exception>
      <exception cref="T:System.ServiceModel.QuotaExceededException">o número máximo de objetos a serem serializados foi excedido. Verifique a propriedade <see cref="P:System.Runtime.Serialization.DataContractSerializer.MaxItemsInObjectGraph" />.</exception>
    </member>
    <member name="M:System.Runtime.Serialization.XmlObjectSerializer.WriteObjectContent(System.Xml.XmlWriter,System.Object)">
      <summary>Grava apenas o conteúdo do objeto no documento ou fluxo XML com o <see cref="T:System.Xml.XmlWriter" /> especificado.</summary>
      <param name="writer">Um <see cref="T:System.Xml.XmlWriter" /> usado para gravar o documento ou fluxo XML.</param>
      <param name="graph">O objeto que contém o conteúdo a ser gravado.</param>
      <exception cref="T:System.Runtime.Serialization.InvalidDataContractException">O tipo que está sendo serializado não está em conformidade com as regras do contrato de dados. Por exemplo, o atributo <see cref="T:System.Runtime.Serialization.DataContractAttribute" /> não foi aplicado ao tipo.</exception>
      <exception cref="T:System.Runtime.Serialization.SerializationException">Há um problema com a instância que está sendo serializada.</exception>
      <exception cref="T:System.ServiceModel.QuotaExceededException">o número máximo de objetos a serem serializados foi excedido. Verifique a propriedade <see cref="P:System.Runtime.Serialization.DataContractSerializer.MaxItemsInObjectGraph" />.</exception>
    </member>
    <member name="M:System.Runtime.Serialization.XmlObjectSerializer.WriteStartObject(System.Xml.XmlDictionaryWriter,System.Object)">
      <summary>Grava o início dos dados do objeto como um elemento XML de abertura usando o <see cref="T:System.Xml.XmlDictionaryWriter" /> especificado.</summary>
      <param name="writer">Um <see cref="T:System.Xml.XmlDictionaryWriter" /> usado para gravar o documento XML.</param>
      <param name="graph">O objeto a ser serializado.</param>
      <exception cref="T:System.Runtime.Serialization.InvalidDataContractException">O tipo que está sendo serializado não está em conformidade com as regras do contrato de dados. Por exemplo, o atributo <see cref="T:System.Runtime.Serialization.DataContractAttribute" /> não foi aplicado ao tipo.</exception>
      <exception cref="T:System.Runtime.Serialization.SerializationException">Há um problema com a instância que está sendo serializada.</exception>
      <exception cref="T:System.ServiceModel.QuotaExceededException">o número máximo de objetos a serem serializados foi excedido. Verifique a propriedade <see cref="P:System.Runtime.Serialization.DataContractSerializer.MaxItemsInObjectGraph" />.</exception>
    </member>
    <member name="M:System.Runtime.Serialization.XmlObjectSerializer.WriteStartObject(System.Xml.XmlWriter,System.Object)">
      <summary>Grava o início dos dados do objeto como um elemento XML de abertura usando o <see cref="T:System.Xml.XmlWriter" /> especificado.</summary>
      <param name="writer">Um <see cref="T:System.Xml.XmlWriter" /> usado para gravar o documento XML.</param>
      <param name="graph">O objeto a ser serializado.</param>
      <exception cref="T:System.Runtime.Serialization.InvalidDataContractException">O tipo que está sendo serializado não está em conformidade com as regras do contrato de dados. Por exemplo, o atributo <see cref="T:System.Runtime.Serialization.DataContractAttribute" /> não foi aplicado ao tipo.</exception>
      <exception cref="T:System.Runtime.Serialization.SerializationException">Há um problema com a instância que está sendo serializada.</exception>
      <exception cref="T:System.ServiceModel.QuotaExceededException">o número máximo de objetos a serem serializados foi excedido. Verifique a propriedade <see cref="P:System.Runtime.Serialization.DataContractSerializer.MaxItemsInObjectGraph" />.</exception>
    </member>
    <member name="T:System.Runtime.Serialization.XmlSerializableServices">
      <summary>Contém métodos para leitura e gravação de XML.</summary>
    </member>
    <member name="M:System.Runtime.Serialization.XmlSerializableServices.AddDefaultSchema(System.Xml.Schema.XmlSchemaSet,System.Xml.XmlQualifiedName)">
      <summary>Gera um tipo de esquema padrão considerando o nome do tipo especificado e o adiciona ao conjunto de esquema especificado.</summary>
      <param name="schemas">Um <see cref="T:System.Xml.Schema.XmlSchemaSet" /> ao qual o tipo do esquema gerado será adicionado.</param>
      <param name="typeQName">Um <see cref="T:System.Xml.XmlQualifiedName" /> que especifica o nome do tipo ao qual o esquema será atribuído.</param>
      <exception cref="T:System.ArgumentNullException">O argumento <paramref name="schemas" /> ou <paramref name="typeQName" /> é <see langword="null" />.</exception>
    </member>
    <member name="M:System.Runtime.Serialization.XmlSerializableServices.ReadNodes(System.Xml.XmlReader)">
      <summary>Lê um conjunto de nós XML do leitor especificado e retorna o resultado.</summary>
      <param name="xmlReader">Um <see cref="T:System.Xml.XmlReader" /> usado para leitura.</param>
      <exception cref="T:System.ArgumentNullException">O argumento <paramref name="xmlReader" /> é <see langword="null" />.</exception>
      <exception cref="T:System.Runtime.Serialization.SerializationException">Um nó <see langword="null" /> foi encontrado durante a leitura.</exception>
      <returns>Uma matriz do tipo <see cref="T:System.Xml.XmlNode" />.</returns>
    </member>
    <member name="M:System.Runtime.Serialization.XmlSerializableServices.WriteNodes(System.Xml.XmlWriter,System.Xml.XmlNode[])">
      <summary>Grava os nós fornecidos usando o gravador especificado.</summary>
      <param name="xmlWriter">Um <see cref="T:System.Xml.XmlWriter" /> usado para gravação.</param>
      <param name="nodes">Uma matriz do tipo <see cref="T:System.Xml.XmlNode" /> para gravação.</param>
      <exception cref="T:System.ArgumentNullException">O argumento <paramref name="xmlWriter" /> é <see langword="null" />.</exception>
    </member>
    <member name="T:System.Runtime.Serialization.XPathQueryGenerator">
      <summary>Quando recebe uma classe que representa um contrato de dados e metadados que representam um membro do contrato, produz uma consulta XPath para o membro.</summary>
    </member>
    <member name="M:System.Runtime.Serialization.XPathQueryGenerator.CreateFromDataContractSerializer(System.Type,System.Reflection.MemberInfo[],System.Text.StringBuilder,System.Xml.XmlNamespaceManager@)">
      <summary>Cria um XPath de um contrato de dados usando o tipo de dados de contrato, a matriz de elementos de metadados, o elemento de nível superior e os namespaces especificados.</summary>
      <param name="type">O tipo que representa um contrato de dados.</param>
      <param name="pathToMember">Os metadados gerados usando o método <see cref="Overload:System.Type.GetMember" /> da classe <see cref="T:System.Type" />, que aponta para o membro de dados específico usado para gerar a consulta.</param>
      <param name="rootElementXpath">O elemento de nível superior no xpath.</param>
      <param name="namespaces">Os namespaces de XML e seus prefixos encontrados no contrato de dados.</param>
      <returns>
        <see cref="T:System.String" />  
  
O XPath gerado com base nos dados de tipo e de membro.</returns>
    </member>
    <member name="M:System.Runtime.Serialization.XPathQueryGenerator.CreateFromDataContractSerializer(System.Type,System.Reflection.MemberInfo[],System.Xml.XmlNamespaceManager@)">
      <summary>Cria um XPath de um contrato de dados usando o tipo de contrato de dados, a matriz de elementos de metadados e os namespaces especificados.</summary>
      <param name="type">O tipo que representa um contrato de dados.</param>
      <param name="pathToMember">Os metadados gerados usando o método <see cref="Overload:System.Type.GetMember" /> da classe <see cref="T:System.Type" />, que aponta para o membro de dados específico usado para gerar a consulta.</param>
      <param name="namespaces">Os namespaces de XML e seus prefixos encontrados no contrato de dados.</param>
      <returns>
        <see cref="T:System.String" />  
  
O XPath gerado com base nos dados de tipo e de membro.</returns>
    </member>
    <member name="T:System.Runtime.Serialization.XsdDataContractExporter">
      <summary>Possibilita a transformação de um conjunto de tipos do .NET Framework que são usadas em contratos de dados em um arquivo de esquema XML (.xsd).</summary>
    </member>
    <member name="M:System.Runtime.Serialization.XsdDataContractExporter.#ctor">
      <summary>Inicializa uma nova instância da classe <see cref="T:System.Runtime.Serialization.XsdDataContractExporter" />.</summary>
    </member>
    <member name="M:System.Runtime.Serialization.XsdDataContractExporter.#ctor(System.Xml.Schema.XmlSchemaSet)">
      <summary>Inicializa uma nova instância da classe <see cref="T:System.Runtime.Serialization.XsdDataContractExporter" /> com o conjunto de esquemas especificado.</summary>
      <param name="schemas">Um <see cref="T:System.Xml.Schema.XmlSchemaSet" /> que contém os esquemas a serem exportados.</param>
    </member>
    <member name="M:System.Runtime.Serialization.XsdDataContractExporter.CanExport(System.Collections.Generic.ICollection{System.Reflection.Assembly})">
      <summary>Obtém um valor que indica se o conjunto de tipos CLR (Common Language Runtime) contidos em um conjunto de assemblies pode ser exportado.</summary>
      <param name="assemblies">Um <see cref="T:System.Collections.Generic.ICollection`1" /> de <see cref="T:System.Reflection.Assembly" /> que contém os assemblies com os tipos para exportação.</param>
      <returns>
        <see langword="true" /> se os tipos puderem ser exportados; caso contrário, <see langword="false" />.</returns>
    </member>
    <member name="M:System.Runtime.Serialization.XsdDataContractExporter.CanExport(System.Collections.Generic.ICollection{System.Type})">
      <summary>Obtém um valor que indica se o conjunto de tipos CLR (Common Language Runtime) contidos em um <see cref="T:System.Collections.Generic.ICollection`1" /> pode ser exportado.</summary>
      <param name="types">Um <see cref="T:System.Collections.Generic.ICollection`1" /> que contém os tipos especificados para exportação.</param>
      <returns>
        <see langword="true" /> se os tipos puderem ser exportados; caso contrário, <see langword="false" />.</returns>
    </member>
    <member name="M:System.Runtime.Serialization.XsdDataContractExporter.CanExport(System.Type)">
      <summary>Obtém um valor que indica se o tipo CLR (Common Language Runtime) especificado pode ser exportado.</summary>
      <param name="type">O <see cref="T:System.Type" /> a ser exportado.</param>
      <returns>
        <see langword="true" /> se o tipo puder ser exportado; caso contrário, <see langword="false" />.</returns>
    </member>
    <member name="M:System.Runtime.Serialization.XsdDataContractExporter.Export(System.Collections.Generic.ICollection{System.Reflection.Assembly})">
      <summary>Transforma os tipos contidos na coleção especificada de assemblies.</summary>
      <param name="assemblies">Um <see cref="T:System.Collections.Generic.ICollection`1" /> (de <see cref="T:System.Reflection.Assembly" />) que contém os tipos para exportação.</param>
      <exception cref="T:System.ArgumentNullException">O argumento <paramref name="assemblies" /> é <see langword="null" />.</exception>
      <exception cref="T:System.ArgumentException">Um <see cref="T:System.Reflection.Assembly" /> na coleção é <see langword="null" />.</exception>
    </member>
    <member name="M:System.Runtime.Serialization.XsdDataContractExporter.Export(System.Collections.Generic.ICollection{System.Type})">
      <summary>Transforma os tipos contidos no <see cref="T:System.Collections.Generic.ICollection`1" /> passado para este método.</summary>
      <param name="types">Um <see cref="T:System.Collections.Generic.ICollection`1" /> (de <see cref="T:System.Type" />) que contém os tipos para exportação.</param>
      <exception cref="T:System.ArgumentNullException">O argumento <paramref name="types" /> é <see langword="null" />.</exception>
      <exception cref="T:System.ArgumentException">Um tipo na coleção é <see langword="null" />.</exception>
    </member>
    <member name="M:System.Runtime.Serialization.XsdDataContractExporter.Export(System.Type)">
      <summary>Transforma o tipo .NET Framework especificado em um esquema XSD (linguagem de definição de esquema XML).</summary>
      <param name="type">O <see cref="T:System.Type" /> a ser transformado em um esquema XML.</param>
      <exception cref="T:System.ArgumentNullException">O argumento <paramref name="type" /> é <see langword="null" />.</exception>
    </member>
    <member name="M:System.Runtime.Serialization.XsdDataContractExporter.GetRootElementName(System.Type)">
      <summary>Retorna o nome e namespace de nível superior para o <see cref="T:System.Type" />.</summary>
      <param name="type">O <see cref="T:System.Type" /> a ser consultado.</param>
      <exception cref="T:System.ArgumentNullException">O argumento <paramref name="type" /> é <see langword="null" />.</exception>
      <returns>O <see cref="T:System.Xml.XmlQualifiedName" /> que representa o nome de nível superior e o namespace para este <see cref="T:System.Type" />, que é gravado no fluxo durante a gravação desse objeto.</returns>
    </member>
    <member name="M:System.Runtime.Serialization.XsdDataContractExporter.GetSchemaType(System.Type)">
      <summary>Retorna o tipo de esquema XML para o tipo especificado.</summary>
      <param name="type">O tipo para o qual retornar um esquema.</param>
      <exception cref="T:System.ArgumentNullException">O argumento <paramref name="type" /> é <see langword="null" />.</exception>
      <returns>Um <see cref="T:System.Xml.Schema.XmlSchemaType" /> que contém o esquema XML.</returns>
    </member>
    <member name="M:System.Runtime.Serialization.XsdDataContractExporter.GetSchemaTypeName(System.Type)">
      <summary>Retorna o nome e o namespace do contrato para o <see cref="T:System.Type" />.</summary>
      <param name="type">O <see cref="T:System.Type" /> que foi exportado.</param>
      <exception cref="T:System.ArgumentNullException">O argumento <paramref name="type" /> é <see langword="null" />.</exception>
      <returns>Um <see cref="T:System.Xml.XmlQualifiedName" /> que representa o nome do contrato do tipo e seu namespace.</returns>
    </member>
    <member name="P:System.Runtime.Serialization.XsdDataContractExporter.Options">
      <summary>Obtém ou define um <see cref="T:System.Runtime.Serialization.ExportOptions" /> que contém opções que podem ser definidas para a operação de exportação.</summary>
      <returns>Um <see cref="T:System.Runtime.Serialization.ExportOptions" /> que contém opções usadas para personalizar como os tipos são exportados para esquemas.</returns>
    </member>
    <member name="P:System.Runtime.Serialization.XsdDataContractExporter.Schemas">
      <summary>Obtém a coleção de esquemas XML exportados.</summary>
      <returns>Um <see cref="T:System.Xml.Schema.XmlSchemaSet" /> que contém os esquemas transformados do conjunto de Common Language Runtime (CLR) tipos depois de chamar o <see cref="Overload:System.Runtime.Serialization.XsdDataContractExporter.Export" /> método.</returns>
    </member>
    <member name="T:System.Xml.IFragmentCapableXmlDictionaryWriter">
      <summary>Contém propriedades e métodos que, quando implementados por um <see cref="T:System.Xml.XmlDictionaryWriter" />, permitem o processamento de fragmentos XML.</summary>
    </member>
    <member name="M:System.Xml.IFragmentCapableXmlDictionaryWriter.EndFragment">
      <summary>Termina o processamento de um fragmento XML.</summary>
    </member>
    <member name="M:System.Xml.IFragmentCapableXmlDictionaryWriter.StartFragment(System.IO.Stream,System.Boolean)">
      <summary>Inicia o processamento de um fragmento XML.</summary>
      <param name="stream">O fluxo para gravação.</param>
      <param name="generateSelfContainedTextFragment">Se <see langword="true" />, todos os namespaces declarados fora do fragmento são declarados novamente se usados dentro dele; se <see langword="false" />, os namespaces não são declarados novamente.</param>
    </member>
    <member name="M:System.Xml.IFragmentCapableXmlDictionaryWriter.WriteFragment(System.Byte[],System.Int32,System.Int32)">
      <summary>Grava um fragmento XML para o fluxo subjacente do gravador.</summary>
      <param name="buffer">O buffer para o qual gravar.</param>
      <param name="offset">A posição inicial da qual gravar no <paramref name="buffer" />.</param>
      <param name="count">O número de bytes a serem gravados no <paramref name="buffer" />.</param>
    </member>
    <member name="P:System.Xml.IFragmentCapableXmlDictionaryWriter.CanFragment">
      <summary>Obtém um valor que indica se este <see cref="T:System.Xml.XmlDictionaryWriter" /> pode processar fragmentos XML.</summary>
      <returns>
        <see langword="true" /> Se isso <see cref="T:System.Xml.XmlDictionaryWriter" /> puder processar fragmentos XML; caso contrário, <see langword="false" /> .</returns>
    </member>
    <member name="T:System.Xml.IStreamProvider">
      <summary>Representa uma interface que pode ser implementada pelas classes que fornecem fluxos.</summary>
    </member>
    <member name="M:System.Xml.IStreamProvider.GetStream">
      <summary>Obtém um fluxo.</summary>
      <returns>Um objeto <see cref="T:System.IO.Stream" />.</returns>
    </member>
    <member name="M:System.Xml.IStreamProvider.ReleaseStream(System.IO.Stream)">
      <summary>Libera um fluxo para a saída.</summary>
      <param name="stream">O fluxo que está sendo liberado.</param>
    </member>
    <member name="T:System.Xml.IXmlBinaryReaderInitializer">
      <summary>Fornece métodos para reinicializar um leitor binário para ler um documento novo.</summary>
    </member>
    <member name="M:System.Xml.IXmlBinaryReaderInitializer.SetInput(System.Byte[],System.Int32,System.Int32,System.Xml.IXmlDictionary,System.Xml.XmlDictionaryReaderQuotas,System.Xml.XmlBinaryReaderSession,System.Xml.OnXmlDictionaryReaderClose)">
      <summary>Reinicializa o leitor binário usando o buffer de entrada fornecido.</summary>
      <param name="buffer">O buffer do qual ler.</param>
      <param name="offset">Posição inicial da qual será feita a leitura no <paramref name="buffer" />.</param>
      <param name="count">Número de bytes que podem ser lidos de <paramref name="buffer" />.</param>
      <param name="dictionary">
        <see cref="T:System.Xml.XmlDictionary" /> a ser usado.</param>
      <param name="quotas">
        <see cref="T:System.Xml.XmlDictionaryReaderQuotas" /> a ser aplicado.</param>
      <param name="session">
        <see cref="T:System.Xml.XmlBinaryReaderSession" /> a ser usado.</param>
      <param name="onClose">O delegado a chamar quando o leitor estiver fechado.</param>
    </member>
    <member name="M:System.Xml.IXmlBinaryReaderInitializer.SetInput(System.IO.Stream,System.Xml.IXmlDictionary,System.Xml.XmlDictionaryReaderQuotas,System.Xml.XmlBinaryReaderSession,System.Xml.OnXmlDictionaryReaderClose)">
      <summary>Reinicializa o leitor binário usando o fluxo de entrada fornecido.</summary>
      <param name="stream">O fluxo do qual ler.</param>
      <param name="dictionary">
        <see cref="T:System.Xml.XmlDictionary" /> a ser usado.</param>
      <param name="quotas">
        <see cref="T:System.Xml.XmlDictionaryReaderQuotas" /> a ser aplicado.</param>
      <param name="session">
        <see cref="T:System.Xml.XmlBinaryReaderSession" /> a ser usado.</param>
      <param name="onClose">O delegado a chamar quando o leitor estiver fechado.</param>
    </member>
    <member name="T:System.Xml.IXmlBinaryWriterInitializer">
      <summary>Especifica os requisitos de implementação para gravadores binários XML que derivam desta interface.</summary>
    </member>
    <member name="M:System.Xml.IXmlBinaryWriterInitializer.SetOutput(System.IO.Stream,System.Xml.IXmlDictionary,System.Xml.XmlBinaryWriterSession,System.Boolean)">
      <summary>Especifica os requisitos de inicialização para os gravadores binário XML que implementam esse método.</summary>
      <param name="stream">O fluxo para gravação.</param>
      <param name="dictionary">O <see cref="T:System.Xml.XmlDictionary" /> a ser usado.</param>
      <param name="session">O <see cref="T:System.Xml.XmlBinaryWriterSession" /> a ser usado.</param>
      <param name="ownsStream">
        <see langword="true" /> para indicar que o fluxo é fechado pelo gravador quando concluído; caso contrário, <see langword="false" />.</param>
    </member>
    <member name="T:System.Xml.IXmlDictionary">
      <summary>Um <see langword="interface" /> que define o contrato que um dicionário XML deve implementar para ser usado por implementações <see cref="T:System.Xml.XmlDictionaryReader" /> e <see cref="T:System.Xml.XmlDictionaryWriter" />.</summary>
    </member>
    <member name="M:System.Xml.IXmlDictionary.TryLookup(System.Int32,System.Xml.XmlDictionaryString@)">
      <summary>Tenta pesquisar uma entrada no dicionário.</summary>
      <param name="key">Chave a ser procurada.</param>
      <param name="result">Se <paramref name="key" /> for definida, o <see cref="T:System.Xml.XmlDictionaryString" /> mapeado para a chave; caso contrário <see langword="null" />.</param>
      <returns>
        <see langword="true" /> se a chave estiver no dicionário; caso contrário, <see langword="false" />.</returns>
    </member>
    <member name="M:System.Xml.IXmlDictionary.TryLookup(System.String,System.Xml.XmlDictionaryString@)">
      <summary>Verifica o dicionário em busca de um valor de cadeia de caracteres especificado.</summary>
      <param name="value">Valor da cadeia de caracteres que está sendo verificada.</param>
      <param name="result">O <see cref="T:System.Xml.XmlDictionaryString" /> correspondente, se encontrado; caso contrário, <see langword="null" />.</param>
      <returns>
        <see langword="true" /> se o valor estiver no dicionário; caso contrário, <see langword="false" />.</returns>
    </member>
    <member name="M:System.Xml.IXmlDictionary.TryLookup(System.Xml.XmlDictionaryString,System.Xml.XmlDictionaryString@)">
      <summary>Verifica o dicionário para um <see cref="T:System.Xml.XmlDictionaryString" /> especificado.</summary>
      <param name="value">O <see cref="T:System.Xml.XmlDictionaryString" /> que está sendo verificado.</param>
      <param name="result">O <see cref="T:System.Xml.XmlDictionaryString" /> correspondente, se encontrado; caso contrário, <see langword="null" />.</param>
      <returns>
        <see langword="true" /> se <see cref="T:System.Xml.XmlDictionaryString" /> estiver no dicionário; caso contrário, <see langword="false" />.</returns>
    </member>
    <member name="T:System.Xml.IXmlTextReaderInitializer">
      <summary>Especifica os requisitos de implementação para leitores de texto XML que derivam desta interface.</summary>
    </member>
    <member name="M:System.Xml.IXmlTextReaderInitializer.SetInput(System.Byte[],System.Int32,System.Int32,System.Text.Encoding,System.Xml.XmlDictionaryReaderQuotas,System.Xml.OnXmlDictionaryReaderClose)">
      <summary>Especifica os requisitos de inicialização para os leitores de texto XML que leem um buffer.</summary>
      <param name="buffer">O buffer do qual ler.</param>
      <param name="offset">A posição inicial da qual será feita a leitura no <paramref name="buffer" />.</param>
      <param name="count">O número de bytes que podem ser lidos de <paramref name="buffer" />.</param>
      <param name="encoding">A codificação de caracteres do fluxo.</param>
      <param name="quotas">O <see cref="T:System.Xml.XmlDictionaryReaderQuotas" /> a ser aplicado.</param>
      <param name="onClose">O delegado a ser chamado quando o leitor está fechado.</param>
    </member>
    <member name="M:System.Xml.IXmlTextReaderInitializer.SetInput(System.IO.Stream,System.Text.Encoding,System.Xml.XmlDictionaryReaderQuotas,System.Xml.OnXmlDictionaryReaderClose)">
      <summary>Especifica os requisitos de inicialização para os leitores de texto XML que lê um fluxo.</summary>
      <param name="stream">O fluxo do qual ler.</param>
      <param name="encoding">A codificação de caracteres do fluxo.</param>
      <param name="quotas">O <see cref="T:System.Xml.XmlDictionaryReaderQuotas" /> a ser aplicado.</param>
      <param name="onClose">O delegado a ser chamado quando o leitor está fechado.</param>
    </member>
    <member name="T:System.Xml.IXmlTextWriterInitializer">
      <summary>Especifica os requisitos de implementação para gravadores de texto XML que derivam desta interface.</summary>
    </member>
    <member name="M:System.Xml.IXmlTextWriterInitializer.SetOutput(System.IO.Stream,System.Text.Encoding,System.Boolean)">
      <summary>Especifica os requisitos de inicialização para criadores de texto XML que implementam este método.</summary>
      <param name="stream">O fluxo para gravação.</param>
      <param name="encoding">A codificação de caracteres do fluxo.</param>
      <param name="ownsStream">
        <see langword="true" /> para indicar que o fluxo é fechado pelo gravador quando concluído; caso contrário, <see langword="false" />.</param>
    </member>
    <member name="T:System.Xml.OnXmlDictionaryReaderClose">
      <summary>
        <see langword="delegate" /> para um método de retorno de chamada ao fechar o leitor.</summary>
      <param name="reader">O <see cref="T:System.Xml.XmlDictionaryReader" /> que dispara o evento <c>OnClose</c>.</param>
    </member>
    <member name="T:System.Xml.UniqueId">
      <summary>Um identificador exclusivo otimizado para Guids.</summary>
    </member>
    <member name="M:System.Xml.UniqueId.#ctor">
      <summary>Cria uma nova instância dessa classe com um Guid novo e exclusivo.</summary>
    </member>
    <member name="M:System.Xml.UniqueId.#ctor(System.Byte[])">
      <summary>Cria uma nova instância dessa classe usando uma matriz de bytes que representa um <see cref="T:System.Guid" />.</summary>
      <param name="guid">Uma matriz de bytes que representa um <see cref="T:System.Guid" />.</param>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="guid" /> é <see langword="null" />.</exception>
      <exception cref="T:System.ArgumentException">
        <paramref name="guid" /> fornece menos que 16 bytes válidos.</exception>
    </member>
    <member name="M:System.Xml.UniqueId.#ctor(System.Byte[],System.Int32)">
      <summary>Cria uma nova instância dessa classe começando em um deslocamento dentro de uma matriz <see langword="byte" /> que representa um <see cref="T:System.Guid" />.</summary>
      <param name="guid">Um matriz <see langword="byte" /> que representa um <see cref="T:System.Guid" />.</param>
      <param name="offset">Posição de deslocamento dentro da matriz <see langword="byte" /> que representa um <see cref="T:System.Guid" />.</param>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="guid" /> é <see langword="null" />.</exception>
      <exception cref="T:System.ArgumentOutOfRangeException">
        <paramref name="offset" /> menor que zero ou maior que o tamanho da matriz.</exception>
      <exception cref="T:System.ArgumentException">
        <paramref name="guid" /> e <paramref name="offset" /> fornecem menos que 16 bytes válidos.</exception>
    </member>
    <member name="M:System.Xml.UniqueId.#ctor(System.Char[],System.Int32,System.Int32)">
      <summary>Cria uma nova instância dessa classe começando em um deslocamento dentro de uma <see langword="char" /> usando um número especificado de entradas.</summary>
      <param name="chars">Um matriz <see langword="char" /> que representa um <see cref="T:System.Guid" />.</param>
      <param name="offset">Posição de deslocamento dentro da matriz <see langword="char" /> que representa um <see cref="T:System.Guid" />.</param>
      <param name="count">Número de entradas de matriz a ser usado começando em <paramref name="offset" />.</param>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="chars" /> é <see langword="null" />.</exception>
      <exception cref="T:System.ArgumentOutOfRangeException">
        <paramref name="offset" /> menor que zero ou maior que o tamanho da matriz.

- ou -

<paramref name="count" /> menor que zero ou maior que o comprimento da matriz menos <paramref name="offset" />.</exception>
      <exception cref="T:System.FormatException">
        <paramref name="count" /> igual a zero.</exception>
    </member>
    <member name="M:System.Xml.UniqueId.#ctor(System.Guid)">
      <summary>Cria uma nova instância dessa classe usando um <see cref="T:System.Guid" />.</summary>
      <param name="guid">Um <see cref="T:System.Guid" />.</param>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="guid" /> é <see langword="null" />.</exception>
    </member>
    <member name="M:System.Xml.UniqueId.#ctor(System.String)">
      <summary>Cria uma nova instância dessa classe usando uma cadeia de caracteres.</summary>
      <param name="value">Uma cadeia de caracteres usada para gerar o <see cref="T:System.Xml.UniqueId" />.</param>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="value" /> é <see langword="null" />.</exception>
      <exception cref="T:System.FormatException">O tamanho de <paramref name="value" /> é zero.</exception>
    </member>
    <member name="M:System.Xml.UniqueId.Equals(System.Object)">
      <summary>Testa se um objeto é igual a esse <see cref="T:System.Xml.UniqueId" />.</summary>
      <param name="obj">O objeto a ser comparado.</param>
      <returns>
        <see langword="true" /> se o objeto for igual a esse <see cref="T:System.Xml.UniqueId" />; caso contrário, <see langword="false" />.</returns>
    </member>
    <member name="M:System.Xml.UniqueId.GetHashCode">
      <summary>Cria uma representação de código hash desse <see cref="T:System.Xml.UniqueId" />.</summary>
      <returns>Uma representação, em inteiro, do código hash desse <see cref="T:System.Xml.UniqueId" />.</returns>
    </member>
    <member name="M:System.Xml.UniqueId.op_Equality(System.Xml.UniqueId,System.Xml.UniqueId)">
      <summary>Substitui o operador de igualdade para testar a igualdade de dois <see cref="T:System.Xml.UniqueId" />s.</summary>
      <param name="id1">O primeiro <see cref="T:System.Xml.UniqueId" />.</param>
      <param name="id2">O segundo <see cref="T:System.Xml.UniqueId" />.</param>
      <returns>
        <see langword="true" /> se os dois <see cref="T:System.Xml.UniqueId" />s forem iguais ou forem <see langword="null" />; <see langword="false" /> se eles não forem iguais ou se somente um deles for <see langword="null" />.</returns>
    </member>
    <member name="M:System.Xml.UniqueId.op_Inequality(System.Xml.UniqueId,System.Xml.UniqueId)">
      <summary>Substitui o operador de igualdade para testar a desigualdade de dois <see cref="T:System.Xml.UniqueId" />s.</summary>
      <param name="id1">O primeiro <see cref="T:System.Xml.UniqueId" />.</param>
      <param name="id2">O segundo <see cref="T:System.Xml.UniqueId" />.</param>
      <returns>
        <see langword="true" /> se o operador de igualdade substituído retornar <see langword="false" />; caso contrário, <see langword="false" />.</returns>
    </member>
    <member name="M:System.Xml.UniqueId.ToCharArray(System.Char[],System.Int32)">
      <summary>Coloca o valor <see cref="T:System.Xml.UniqueId" /> em uma matriz <see langword="char" />.</summary>
      <param name="chars">A matriz <see langword="char" />.</param>
      <param name="offset">Posição na matriz <see langword="char" /> em que se começar a inserir o valor <see cref="T:System.Xml.UniqueId" />.</param>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="chars" /> é <see langword="null" />.</exception>
      <exception cref="T:System.ArgumentOutOfRangeException">
        <paramref name="offset" /> menor que zero ou maior que o tamanho da matriz.</exception>
      <exception cref="T:System.ArgumentException">
        <paramref name="guid" /> e <paramref name="offset" /> fornecem menos que 16 bytes válidos.</exception>
      <returns>Número de entradas na matriz <see langword="char" /> preenchidas pelo valor <see cref="T:System.Xml.UniqueId" />.</returns>
    </member>
    <member name="M:System.Xml.UniqueId.ToString">
      <summary>Exibe o valor <see cref="T:System.Xml.UniqueId" /> no formato de cadeia de caracteres.</summary>
      <returns>Uma representação de cadeia de caracteres do valor <see cref="T:System.Xml.UniqueId" />.</returns>
    </member>
    <member name="M:System.Xml.UniqueId.TryGetGuid(System.Byte[],System.Int32)">
      <summary>Tenta obter o valor de <see cref="T:System.Xml.UniqueId" /> como um <see cref="T:System.Guid" /> e armazená-lo na matriz de bytes determinada no deslocamento especificado.</summary>
      <param name="buffer">Matriz <see langword="byte" /> que conterá o <see cref="T:System.Guid" />.</param>
      <param name="offset">Posição na matriz <see langword="byte" /> em que se começar a inserir o valor <see cref="T:System.Guid" />.</param>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="buffer" /> é <see langword="null" />.</exception>
      <exception cref="T:System.ArgumentOutOfRangeException">
        <paramref name="offset" /> menor que zero ou maior que o tamanho da matriz.</exception>
      <exception cref="T:System.ArgumentException">
        <paramref name="buffer" /> e <paramref name="offset" /> fornecem menos que 16 bytes válidos.</exception>
      <returns>
        <see langword="true" /> se o valor armazenado nessa instância do <see cref="T:System.Xml.UniqueId" /> for um <see cref="T:System.Guid" />; caso contrário, <see langword="false" />.</returns>
    </member>
    <member name="M:System.Xml.UniqueId.TryGetGuid(System.Guid@)">
      <summary>Tenta obter o valor de <see cref="T:System.Xml.UniqueId" /> como um <see cref="T:System.Guid" />.</summary>
      <param name="guid">O <see cref="T:System.Guid" /> se bem-sucedido; caso contrário <see cref="F:System.Guid.Empty" />.</param>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="buffer" /> é <see langword="null" />.</exception>
      <exception cref="T:System.ArgumentException">
        <paramref name="buffer" /> e <paramref name="offset" /> fornecem menos que 16 bytes válidos.</exception>
      <returns>
        <see langword="true" /> se o UniqueId representar um <see cref="T:System.Guid" />; caso contrário, <see langword="false" />.</returns>
    </member>
    <member name="P:System.Xml.UniqueId.CharArrayLength">
      <summary>Obtém o comprimento da representação de cadeia de caracteres de <see cref="T:System.Xml.UniqueId" />.</summary>
      <returns>O comprimento da representação de cadeia de caracteres do <see cref="T:System.Xml.UniqueId" /> .</returns>
    </member>
    <member name="P:System.Xml.UniqueId.IsGuid">
      <summary>Indica se o <see cref="T:System.Xml.UniqueId" /> é um <see cref="T:System.Guid" />.</summary>
      <returns>
        <see langword="true" /> Se <see cref="T:System.Xml.UniqueId" /> for a <see cref="T:System.Guid" /> ; caso contrário, <see langword="false" /> .</returns>
    </member>
    <member name="T:System.Xml.XmlBinaryReaderSession">
      <summary>Permite que cadeias de caracteres otimizadas sejam gerenciadas de uma forma dinâmica.</summary>
    </member>
    <member name="M:System.Xml.XmlBinaryReaderSession.#ctor">
      <summary>Inicializa uma nova instância da classe <see cref="T:System.Xml.XmlBinaryReaderSession" />.</summary>
    </member>
    <member name="M:System.Xml.XmlBinaryReaderSession.Add(System.Int32,System.String)">
      <summary>Cria um <see cref="T:System.Xml.XmlDictionaryString" /> com base nos parâmetros de entrada e o adiciona a uma coleção interna.</summary>
      <param name="id">O valor da chave.</param>
      <param name="value">O valor.</param>
      <exception cref="T:System.ArgumentOutOfRangeException">
        <paramref name="id" /> é menor que zero.</exception>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="value" /> é <see langword="null" />.</exception>
      <exception cref="T:System.InvalidOperationException">Já existe uma entrada com a chave = <paramref name="id" />.</exception>
      <returns>O <see cref="T:System.Xml.XmlDictionaryString" /> recém-criado que é adicionado a uma coleção interna.</returns>
    </member>
    <member name="M:System.Xml.XmlBinaryReaderSession.Clear">
      <summary>Limpa a coleção interna de todo o conteúdo.</summary>
    </member>
    <member name="M:System.Xml.XmlBinaryReaderSession.TryLookup(System.Int32,System.Xml.XmlDictionaryString@)">
      <summary>Verifica se a coleção interna contém uma entrada correspondente a uma chave.</summary>
      <param name="key">A chave de pesquisa.</param>
      <param name="result">Quando este método retornar, ele conterá uma cadeia de caracteres se uma entrada for encontrada; caso contrário, <see langword="null" />. Este parâmetro é passado não inicializado.</param>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="key" /> é <see langword="null" />.</exception>
      <returns>
        <see langword="true" /> se uma entrada correspondente a <paramref name="key" /> foi encontrada; caso contrário, <see langword="false" />.</returns>
    </member>
    <member name="M:System.Xml.XmlBinaryReaderSession.TryLookup(System.String,System.Xml.XmlDictionaryString@)">
      <summary>Verifica se a coleção interna contém uma entrada correspondente a um valor.</summary>
      <param name="value">O valor a ser procurado.</param>
      <param name="result">Quando este método retornar, ele conterá uma cadeia de caracteres se uma entrada for encontrada; caso contrário, <see langword="null" />. Este parâmetro é passado não inicializado.</param>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="value" /> é <see langword="null" />.</exception>
      <returns>
        <see langword="true" /> se uma entrada correspondente a <paramref name="value" /> foi encontrada; caso contrário, <see langword="false" />.</returns>
    </member>
    <member name="M:System.Xml.XmlBinaryReaderSession.TryLookup(System.Xml.XmlDictionaryString,System.Xml.XmlDictionaryString@)">
      <summary>Verifica se a coleção interna contém uma entrada correspondente a um valor.</summary>
      <param name="value">O valor a ser procurado.</param>
      <param name="result">Quando este método retornar, ele conterá uma cadeia de caracteres se uma entrada for encontrada; caso contrário, <see langword="null" />. Este parâmetro é passado não inicializado.</param>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="value" /> é <see langword="null" />.</exception>
      <returns>
        <see langword="true" /> se uma entrada correspondente a <paramref name="value" /> foi encontrada; caso contrário, <see langword="false" />.</returns>
    </member>
    <member name="T:System.Xml.XmlBinaryWriterSession">
      <summary>Permite usar um dicionário dinâmico para compactar cadeias de caracteres comuns que aparecem em uma mensagem e manter o estado.</summary>
    </member>
    <member name="M:System.Xml.XmlBinaryWriterSession.#ctor">
      <summary>Cria uma instância dessa classe.</summary>
    </member>
    <member name="M:System.Xml.XmlBinaryWriterSession.Reset">
      <summary>Limpa as coleções internas.</summary>
    </member>
    <member name="M:System.Xml.XmlBinaryWriterSession.TryAdd(System.Xml.XmlDictionaryString,System.Int32@)">
      <summary>Tenta adicionar um <see cref="T:System.Xml.XmlDictionaryString" /> à coleção interna.</summary>
      <param name="value">O <see cref="T:System.Xml.XmlDictionaryString" /> a ser adicionado.</param>
      <param name="key">A chave do <see cref="T:System.Xml.XmlDictionaryString" /> que foi adicionado com êxito.</param>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="value" /> é <see langword="null" />.</exception>
      <exception cref="T:System.InvalidOperationException">Já existe uma entrada com a chave = <paramref name="key" />.</exception>
      <returns>
        <see langword="true" /> se foi possível adicionar a cadeia de caracteres; caso contrário, <see langword="false" />.</returns>
    </member>
    <member name="T:System.Xml.XmlDictionary">
      <summary>Implementa um dicionário usado para otimizar as implementações do leitor/gravador de XML do WCF (Windows Communication Foundation).</summary>
    </member>
    <member name="M:System.Xml.XmlDictionary.#ctor">
      <summary>Cria um <see cref="T:System.Xml.XmlDictionary" /> vazio.</summary>
    </member>
    <member name="M:System.Xml.XmlDictionary.#ctor(System.Int32)">
      <summary>Cria um <see cref="T:System.Xml.XmlDictionary" /> com uma capacidade inicial.</summary>
      <param name="capacity">O tamanho inicial do dicionário.</param>
    </member>
    <member name="M:System.Xml.XmlDictionary.Add(System.String)">
      <summary>Adiciona uma cadeia de caracteres ao <see cref="T:System.Xml.XmlDictionary" />.</summary>
      <param name="value">Cadeia de caracteres a ser adicionada ao dicionário.</param>
      <returns>O <see cref="T:System.Xml.XmlDictionaryString" /> que foi adicionado.</returns>
    </member>
    <member name="M:System.Xml.XmlDictionary.TryLookup(System.Int32,System.Xml.XmlDictionaryString@)">
      <summary>Tenta pesquisar uma entrada no dicionário.</summary>
      <param name="key">Chave a ser procurada.</param>
      <param name="result">Se <paramref name="key" /> for definida, o <see cref="T:System.Xml.XmlDictionaryString" /> mapeado para a chave; caso contrário <see langword="null" />.</param>
      <returns>
        <see langword="true" /> se a chave estiver no dicionário; caso contrário, <see langword="false" />.</returns>
    </member>
    <member name="M:System.Xml.XmlDictionary.TryLookup(System.String,System.Xml.XmlDictionaryString@)">
      <summary>Verifica o dicionário em busca de um valor de cadeia de caracteres especificado.</summary>
      <param name="value">Valor da cadeia de caracteres que está sendo verificada.</param>
      <param name="result">O <see cref="T:System.Xml.XmlDictionaryString" /> correspondente, se encontrado; caso contrário, <see langword="null" />.</param>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="value" /> é <see langword="null" />.</exception>
      <returns>
        <see langword="true" /> se o valor estiver no dicionário; caso contrário, <see langword="false" />.</returns>
    </member>
    <member name="M:System.Xml.XmlDictionary.TryLookup(System.Xml.XmlDictionaryString,System.Xml.XmlDictionaryString@)">
      <summary>Verifica o dicionário para um <see cref="T:System.Xml.XmlDictionaryString" /> especificado.</summary>
      <param name="value">O <see cref="T:System.Xml.XmlDictionaryString" /> que está sendo verificado.</param>
      <param name="result">O <see cref="T:System.Xml.XmlDictionaryString" /> correspondente, se encontrado; caso contrário, <see langword="null" />.</param>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="value" /> é <see langword="null" />.</exception>
      <returns>
        <see langword="true" /> se <see cref="T:System.Xml.XmlDictionaryString" /> estiver no dicionário; caso contrário, <see langword="false" />.</returns>
    </member>
    <member name="P:System.Xml.XmlDictionary.Empty">
      <summary>Obtém um <see langword="static" /> vazio <see cref="T:System.Xml.IXmlDictionary" />.</summary>
      <returns>Um <see langword="static" /> vazio <see cref="T:System.Xml.IXmlDictionary" /> .</returns>
    </member>
    <member name="T:System.Xml.XmlDictionaryReader">
      <summary>Uma classe <see langword="abstract" /> que o WCF (Windows Communication Foundation) deriva do <see cref="T:System.Xml.XmlReader" /> para realizar serialização e desserialização.</summary>
    </member>
    <member name="M:System.Xml.XmlDictionaryReader.#ctor">
      <summary>Cria uma instância dessa classe.  Invocado apenas por suas classes derivadas.</summary>
    </member>
    <member name="M:System.Xml.XmlDictionaryReader.CreateBinaryReader(System.Byte[],System.Int32,System.Int32,System.Xml.IXmlDictionary,System.Xml.XmlDictionaryReaderQuotas)">
      <summary>Cria uma instância de <see cref="T:System.Xml.XmlDictionaryReader" /> que possa ler o Formato XML Binário do .NET.</summary>
      <param name="buffer">O buffer do qual ler.</param>
      <param name="offset">A posição inicial da qual será feita a leitura no <paramref name="buffer" />.</param>
      <param name="count">O número de bytes que podem ser lidos de <paramref name="buffer" />.</param>
      <param name="dictionary">
        <see cref="T:System.Xml.XmlDictionary" /> a ser usado.</param>
      <param name="quotas">As cotas que se aplicam a essa operação.</param>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="buffer" /> é <see langword="null" />.

- ou -

<paramref name="offset" /> é menor que zero ou maior que o tamanho do buffer.</exception>
      <exception cref="T:System.ArgumentOutOfRangeException">
        <paramref name="count" /> é menor que zero ou maior que o tamanho do buffer menos o deslocamento.</exception>
      <returns>Uma instância de <see cref="T:System.Xml.XmlDictionaryReader" />.</returns>
    </member>
    <member name="M:System.Xml.XmlDictionaryReader.CreateBinaryReader(System.Byte[],System.Int32,System.Int32,System.Xml.IXmlDictionary,System.Xml.XmlDictionaryReaderQuotas,System.Xml.XmlBinaryReaderSession)">
      <summary>Cria uma instância de <see cref="T:System.Xml.XmlDictionaryReader" /> que possa ler o Formato XML Binário do .NET.</summary>
      <param name="buffer">O buffer do qual ler.</param>
      <param name="offset">A posição inicial da qual será feita a leitura no <paramref name="buffer" />.</param>
      <param name="count">O número de bytes que podem ser lidos de <paramref name="buffer" />.</param>
      <param name="dictionary">O <see cref="T:System.Xml.XmlDictionary" /> a ser usado.</param>
      <param name="quotas">O <see cref="T:System.Xml.XmlDictionaryReaderQuotas" /> a ser aplicado.</param>
      <param name="session">O <see cref="T:System.Xml.XmlBinaryReaderSession" /> a ser usado.</param>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="buffer" /> é <see langword="null" />.</exception>
      <exception cref="T:System.ArgumentOutOfRangeException">
        <paramref name="count" /> é menor que zero ou maior que o tamanho do buffer menos o deslocamento.

- ou -

<paramref name="offset" /> é menor que zero ou maior que o tamanho do buffer.</exception>
      <returns>Uma instância de <see cref="T:System.Xml.XmlDictionaryReader" />.</returns>
    </member>
    <member name="M:System.Xml.XmlDictionaryReader.CreateBinaryReader(System.Byte[],System.Int32,System.Int32,System.Xml.IXmlDictionary,System.Xml.XmlDictionaryReaderQuotas,System.Xml.XmlBinaryReaderSession,System.Xml.OnXmlDictionaryReaderClose)">
      <summary>Cria uma instância de <see cref="T:System.Xml.XmlDictionaryReader" /> que possa ler o Formato XML Binário do .NET.</summary>
      <param name="buffer">O buffer do qual ler.</param>
      <param name="offset">A posição inicial da qual será feita a leitura no <paramref name="buffer" />.</param>
      <param name="count">O número de bytes que podem ser lidos de <paramref name="buffer" />.</param>
      <param name="dictionary">O <see cref="T:System.Xml.XmlDictionary" /> a ser usado.</param>
      <param name="quotas">O <see cref="T:System.Xml.XmlDictionaryReaderQuotas" /> a ser aplicado.</param>
      <param name="session">O <see cref="T:System.Xml.XmlBinaryReaderSession" /> a ser usado.</param>
      <param name="onClose">O delegado a ser chamado quando o leitor está fechado.</param>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="buffer" /> é <see langword="null" />.</exception>
      <exception cref="T:System.ArgumentOutOfRangeException">
        <paramref name="count" /> é menor que zero ou maior que o tamanho do buffer menos o deslocamento.

- ou -

<paramref name="offset" /> é menor que zero ou maior que o tamanho do buffer.</exception>
      <returns>Uma instância de <see cref="T:System.Xml.XmlDictionaryReader" />.</returns>
    </member>
    <member name="M:System.Xml.XmlDictionaryReader.CreateBinaryReader(System.Byte[],System.Int32,System.Int32,System.Xml.XmlDictionaryReaderQuotas)">
      <summary>Cria uma instância de <see cref="T:System.Xml.XmlDictionaryReader" /> que possa ler o Formato XML Binário do .NET.</summary>
      <param name="buffer">O buffer do qual ler.</param>
      <param name="offset">A posição inicial da qual será feita a leitura no <paramref name="buffer" />.</param>
      <param name="count">O número de bytes que podem ser lidos de <paramref name="buffer" />.</param>
      <param name="quotas">As cotas que se aplicam a essa operação.</param>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="buffer" /> é <see langword="null" />.</exception>
      <exception cref="T:System.ArgumentOutOfRangeException">
        <paramref name="count" /> é menor que zero ou maior que o tamanho do buffer menos o deslocamento.

- ou -

<paramref name="offset" /> é menor que zero ou maior que o tamanho do buffer.</exception>
      <returns>Uma instância de <see cref="T:System.Xml.XmlDictionaryReader" />.</returns>
    </member>
    <member name="M:System.Xml.XmlDictionaryReader.CreateBinaryReader(System.Byte[],System.Xml.XmlDictionaryReaderQuotas)">
      <summary>Cria uma instância de <see cref="T:System.Xml.XmlDictionaryReader" /> que possa ler o Formato XML Binário do .NET.</summary>
      <param name="buffer">O buffer do qual ler.</param>
      <param name="quotas">As cotas que se aplicam a essa operação.</param>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="buffer" /> é <see langword="null" />.</exception>
      <returns>Uma instância de <see cref="T:System.Xml.XmlDictionaryReader" />.</returns>
    </member>
    <member name="M:System.Xml.XmlDictionaryReader.CreateBinaryReader(System.IO.Stream,System.Xml.IXmlDictionary,System.Xml.XmlDictionaryReaderQuotas)">
      <summary>Cria uma instância de <see cref="T:System.Xml.XmlDictionaryReader" /> que possa ler o Formato XML Binário do .NET.</summary>
      <param name="stream">O fluxo do qual ler.</param>
      <param name="dictionary">
        <see cref="T:System.Xml.XmlDictionary" /> a ser usado.</param>
      <param name="quotas">As cotas que se aplicam a essa operação.</param>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="stream" /> ou <paramref name="quotas" /> é <see langword="null" />.</exception>
      <returns>Uma instância de <see cref="T:System.Xml.XmlDictionaryReader" />.</returns>
    </member>
    <member name="M:System.Xml.XmlDictionaryReader.CreateBinaryReader(System.IO.Stream,System.Xml.IXmlDictionary,System.Xml.XmlDictionaryReaderQuotas,System.Xml.XmlBinaryReaderSession)">
      <summary>Cria uma instância de <see cref="T:System.Xml.XmlDictionaryReader" /> que possa ler o Formato XML Binário do .NET.</summary>
      <param name="stream">O fluxo do qual ler.</param>
      <param name="dictionary">
        <see cref="T:System.Xml.XmlDictionary" /> a ser usado.</param>
      <param name="quotas">As cotas que se aplicam a essa operação.</param>
      <param name="session">
        <see cref="T:System.Xml.XmlBinaryReaderSession" /> a ser usado.</param>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="stream" /> é <see langword="null" />.</exception>
      <returns>Uma instância de <see cref="T:System.Xml.XmlDictionaryReader" />.</returns>
    </member>
    <member name="M:System.Xml.XmlDictionaryReader.CreateBinaryReader(System.IO.Stream,System.Xml.IXmlDictionary,System.Xml.XmlDictionaryReaderQuotas,System.Xml.XmlBinaryReaderSession,System.Xml.OnXmlDictionaryReaderClose)">
      <summary>Cria uma instância de <see cref="T:System.Xml.XmlDictionaryReader" /> que possa ler o Formato XML Binário do .NET.</summary>
      <param name="stream">O fluxo do qual ler.</param>
      <param name="dictionary">
        <see cref="T:System.Xml.XmlDictionary" /> a ser usado.</param>
      <param name="quotas">
        <see cref="T:System.Xml.XmlDictionaryReaderQuotas" /> a ser aplicado.</param>
      <param name="session">
        <see cref="T:System.Xml.XmlBinaryReaderSession" /> a ser usado.</param>
      <param name="onClose">O delegado a ser chamado quando o leitor está fechado.</param>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="stream" /> é <see langword="null" />.</exception>
      <returns>Uma instância de <see cref="T:System.Xml.XmlDictionaryReader" />.</returns>
    </member>
    <member name="M:System.Xml.XmlDictionaryReader.CreateBinaryReader(System.IO.Stream,System.Xml.XmlDictionaryReaderQuotas)">
      <summary>Cria uma instância de <see cref="T:System.Xml.XmlDictionaryReader" /> que possa ler o Formato XML Binário do .NET.</summary>
      <param name="stream">O fluxo do qual ler.</param>
      <param name="quotas">As cotas que se aplicam a essa operação.</param>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="stream" /> é <see langword="null" />.</exception>
      <returns>Uma instância de <see cref="T:System.Xml.XmlDictionaryReader" />.</returns>
    </member>
    <member name="M:System.Xml.XmlDictionaryReader.CreateDictionaryReader(System.Xml.XmlReader)">
      <summary>Cria uma instância de <see cref="T:System.Xml.XmlDictionaryReader" /> com base em um <see cref="T:System.Xml.XmlReader" /> existente.</summary>
      <param name="reader">Uma instância de <see cref="T:System.Xml.XmlReader" />.</param>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="reader" /> é <see langword="null" />.</exception>
      <returns>Uma instância de <see cref="T:System.Xml.XmlDictionaryReader" />.</returns>
    </member>
    <member name="M:System.Xml.XmlDictionaryReader.CreateMtomReader(System.Byte[],System.Int32,System.Int32,System.Text.Encoding,System.Xml.XmlDictionaryReaderQuotas)">
      <summary>Cria uma instância de <see cref="T:System.Xml.XmlDictionaryReader" /> que lê o XML no formato MTOM.</summary>
      <param name="buffer">O buffer do qual ler.</param>
      <param name="offset">A posição inicial da qual será feita a leitura no <paramref name="buffer" />.</param>
      <param name="count">O número de bytes que podem ser lidos de <paramref name="buffer" />.</param>
      <param name="encoding">A possível codificação de caracteres da entrada.</param>
      <param name="quotas">As cotas a serem aplicadas a este leitor.</param>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="encoding" /> é <see langword="null" />.</exception>
      <returns>Uma instância de <see cref="T:System.Xml.XmlDictionaryReader" />.</returns>
    </member>
    <member name="M:System.Xml.XmlDictionaryReader.CreateMtomReader(System.Byte[],System.Int32,System.Int32,System.Text.Encoding[],System.String,System.Xml.XmlDictionaryReaderQuotas)">
      <summary>Cria uma instância de <see cref="T:System.Xml.XmlDictionaryReader" /> que lê o XML no formato MTOM.</summary>
      <param name="buffer">O buffer do qual ler.</param>
      <param name="offset">A posição inicial da qual será feita a leitura no <paramref name="buffer" />.</param>
      <param name="count">O número de bytes que podem ser lidos de <paramref name="buffer" />.</param>
      <param name="encodings">As possíveis codificações de caracteres da entrada.</param>
      <param name="contentType">O tipo MIME Content-Type da mensagem.</param>
      <param name="quotas">As cotas a serem aplicadas a este leitor.</param>
      <returns>Uma instância de <see cref="T:System.Xml.XmlDictionaryReader" />.</returns>
    </member>
    <member name="M:System.Xml.XmlDictionaryReader.CreateMtomReader(System.Byte[],System.Int32,System.Int32,System.Text.Encoding[],System.String,System.Xml.XmlDictionaryReaderQuotas,System.Int32,System.Xml.OnXmlDictionaryReaderClose)">
      <summary>Cria uma instância de <see cref="T:System.Xml.XmlDictionaryReader" /> que lê o XML no formato MTOM.</summary>
      <param name="buffer">O buffer do qual ler.</param>
      <param name="offset">A posição inicial da qual será feita a leitura no <paramref name="buffer" />.</param>
      <param name="count">O número de bytes que podem ser lidos de <paramref name="buffer" />.</param>
      <param name="encodings">As possíveis codificações de caracteres da entrada.</param>
      <param name="contentType">O tipo MIME Content-Type da mensagem.</param>
      <param name="quotas">O <see cref="T:System.Xml.XmlDictionaryReaderQuotas" /> a ser aplicado ao leitor.</param>
      <param name="maxBufferSize">O tamanho máximo permitido do buffer.</param>
      <param name="onClose">O delegado a ser chamado quando o leitor está fechado.</param>
      <returns>Uma instância de <see cref="T:System.Xml.XmlDictionaryReader" />.</returns>
    </member>
    <member name="M:System.Xml.XmlDictionaryReader.CreateMtomReader(System.Byte[],System.Int32,System.Int32,System.Text.Encoding[],System.Xml.XmlDictionaryReaderQuotas)">
      <summary>Cria uma instância de <see cref="T:System.Xml.XmlDictionaryReader" /> que lê o XML no formato MTOM.</summary>
      <param name="buffer">O buffer do qual ler.</param>
      <param name="offset">A posição inicial da qual será feita a leitura no <paramref name="buffer" />.</param>
      <param name="count">O número de bytes que podem ser lidos de <paramref name="buffer" />.</param>
      <param name="encodings">As possíveis codificações de caracteres da entrada.</param>
      <param name="quotas">As cotas a serem aplicadas a este leitor.</param>
      <returns>Uma instância de <see cref="T:System.Xml.XmlDictionaryReader" />.</returns>
    </member>
    <member name="M:System.Xml.XmlDictionaryReader.CreateMtomReader(System.IO.Stream,System.Text.Encoding,System.Xml.XmlDictionaryReaderQuotas)">
      <summary>Cria uma instância de <see cref="T:System.Xml.XmlDictionaryReader" /> que lê o XML no formato MTOM.</summary>
      <param name="stream">O fluxo do qual ler.</param>
      <param name="encoding">A possível codificação de caracteres do fluxo.</param>
      <param name="quotas">As cotas a serem aplicadas a este leitor.</param>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="encoding" /> é <see langword="null" />.</exception>
      <returns>Uma instância de <see cref="T:System.Xml.XmlDictionaryReader" />.</returns>
    </member>
    <member name="M:System.Xml.XmlDictionaryReader.CreateMtomReader(System.IO.Stream,System.Text.Encoding[],System.String,System.Xml.XmlDictionaryReaderQuotas)">
      <summary>Cria uma instância de <see cref="T:System.Xml.XmlDictionaryReader" /> que lê o XML no formato MTOM.</summary>
      <param name="stream">O fluxo do qual ler.</param>
      <param name="encodings">As possíveis codificações de caracteres do fluxo.</param>
      <param name="contentType">O tipo MIME Content-Type da mensagem.</param>
      <param name="quotas">As cotas a serem aplicadas a este leitor.</param>
      <returns>Uma instância de <see cref="T:System.Xml.XmlDictionaryReader" />.</returns>
    </member>
    <member name="M:System.Xml.XmlDictionaryReader.CreateMtomReader(System.IO.Stream,System.Text.Encoding[],System.String,System.Xml.XmlDictionaryReaderQuotas,System.Int32,System.Xml.OnXmlDictionaryReaderClose)">
      <summary>Cria uma instância de <see cref="T:System.Xml.XmlDictionaryReader" /> que lê o XML no formato MTOM.</summary>
      <param name="stream">O fluxo do qual ler.</param>
      <param name="encodings">As possíveis codificações de caracteres do fluxo.</param>
      <param name="contentType">O tipo MIME Content-Type da mensagem.</param>
      <param name="quotas">O tipo MIME da mensagem.</param>
      <param name="maxBufferSize">O <see cref="T:System.Xml.XmlDictionaryReaderQuotas" /> a ser aplicado ao leitor.</param>
      <param name="onClose">O delegado a ser chamado quando o leitor está fechado.</param>
      <returns>Uma instância de <see cref="T:System.Xml.XmlDictionaryReader" />.</returns>
    </member>
    <member name="M:System.Xml.XmlDictionaryReader.CreateMtomReader(System.IO.Stream,System.Text.Encoding[],System.Xml.XmlDictionaryReaderQuotas)">
      <summary>Cria uma instância de <see cref="T:System.Xml.XmlDictionaryReader" /> que lê o XML no formato MTOM.</summary>
      <param name="stream">O fluxo do qual ler.</param>
      <param name="encodings">As possíveis codificações de caracteres do fluxo.</param>
      <param name="quotas">As cotas a serem aplicadas a este leitor.</param>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="encoding" /> é <see langword="null" />.</exception>
      <returns>Uma instância de <see cref="T:System.Xml.XmlDictionaryReader" />.</returns>
    </member>
    <member name="M:System.Xml.XmlDictionaryReader.CreateTextReader(System.Byte[],System.Int32,System.Int32,System.Text.Encoding,System.Xml.XmlDictionaryReaderQuotas,System.Xml.OnXmlDictionaryReaderClose)">
      <summary>Cria uma instância de <see cref="T:System.Xml.XmlDictionaryReader" />.</summary>
      <param name="buffer">O buffer do qual ler.</param>
      <param name="offset">A posição inicial da qual será feita a leitura no <paramref name="buffer" />.</param>
      <param name="count">O número de bytes que podem ser lidos de <paramref name="buffer" />.</param>
      <param name="encoding">O objeto <see cref="T:System.Text.Encoding" /> que especifica as propriedades de codificação a serem aplicadas.</param>
      <param name="quotas">O <see cref="T:System.Xml.XmlDictionaryReaderQuotas" /> a ser aplicado.</param>
      <param name="onClose">O delegado a ser chamado quando o leitor está fechado.</param>
      <returns>Uma instância de <see cref="T:System.Xml.XmlDictionaryReader" />.</returns>
    </member>
    <member name="M:System.Xml.XmlDictionaryReader.CreateTextReader(System.Byte[],System.Int32,System.Int32,System.Xml.XmlDictionaryReaderQuotas)">
      <summary>Cria uma instância de <see cref="T:System.Xml.XmlDictionaryReader" />.</summary>
      <param name="buffer">O buffer do qual ler.</param>
      <param name="offset">A posição inicial da qual será feita a leitura no <paramref name="buffer" />.</param>
      <param name="count">O número de bytes que podem ser lidos de <paramref name="buffer" />.</param>
      <param name="quotas">As cotas aplicadas ao leitor.</param>
      <returns>Uma instância de <see cref="T:System.Xml.XmlDictionaryReader" />.</returns>
    </member>
    <member name="M:System.Xml.XmlDictionaryReader.CreateTextReader(System.Byte[],System.Xml.XmlDictionaryReaderQuotas)">
      <summary>Cria uma instância de <see cref="T:System.Xml.XmlDictionaryReader" />.</summary>
      <param name="buffer">O buffer do qual ler.</param>
      <param name="quotas">As cotas aplicadas ao leitor.</param>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="buffer" /> é <see langword="null" />.</exception>
      <returns>Uma instância de <see cref="T:System.Xml.XmlDictionaryReader" />.</returns>
    </member>
    <member name="M:System.Xml.XmlDictionaryReader.CreateTextReader(System.IO.Stream,System.Text.Encoding,System.Xml.XmlDictionaryReaderQuotas,System.Xml.OnXmlDictionaryReaderClose)">
      <summary>Cria uma instância de <see cref="T:System.Xml.XmlDictionaryReader" />.</summary>
      <param name="stream">O fluxo do qual ler.</param>
      <param name="encoding">O objeto <see cref="T:System.Text.Encoding" /> que especifica as propriedades de codificação a serem aplicadas.</param>
      <param name="quotas">O <see cref="T:System.Xml.XmlDictionaryReaderQuotas" /> a ser aplicado.</param>
      <param name="onClose">O delegado a ser chamado quando o leitor está fechado.</param>
      <returns>Uma instância de <see cref="T:System.Xml.XmlDictionaryReader" />.</returns>
    </member>
    <member name="M:System.Xml.XmlDictionaryReader.CreateTextReader(System.IO.Stream,System.Xml.XmlDictionaryReaderQuotas)">
      <summary>Cria uma instância de <see cref="T:System.Xml.XmlDictionaryReader" />.</summary>
      <param name="stream">O fluxo do qual ler.</param>
      <param name="quotas">As cotas aplicadas ao leitor.</param>
      <returns>Uma instância de <see cref="T:System.Xml.XmlDictionaryReader" />.</returns>
    </member>
    <member name="M:System.Xml.XmlDictionaryReader.EndCanonicalization">
      <summary>Este método ainda não foi implementado.</summary>
      <exception cref="T:System.NotSupportedException">Sempre.</exception>
    </member>
    <member name="M:System.Xml.XmlDictionaryReader.GetAttribute(System.Xml.XmlDictionaryString,System.Xml.XmlDictionaryString)">
      <summary>Quando substituído em uma classe derivada, obtém o valor de um atributo.</summary>
      <param name="localName">Um <see cref="T:System.Xml.XmlDictionaryString" /> que representa o nome local do atributo.</param>
      <param name="namespaceUri">Um <see cref="T:System.Xml.XmlDictionaryString" /> que representa o namespace do atributo.</param>
      <returns>O valor do atributo.</returns>
    </member>
    <member name="M:System.Xml.XmlDictionaryReader.GetNonAtomizedNames(System.String@,System.String@)">
      <summary>Obtém nomes não atomizado.</summary>
      <param name="localName">O nome local.</param>
      <param name="namespaceUri">O namespace para o <paramref name="localName" /> local.</param>
    </member>
    <member name="M:System.Xml.XmlDictionaryReader.IndexOfLocalName(System.String[],System.String)">
      <summary>Obtém o índice do nome local do nó atual dentro de uma matriz de nomes.</summary>
      <param name="localNames">A matriz de cadeia de caracteres de nomes locais a serem pesquisados.</param>
      <param name="namespaceUri">O namespace do nó atual.</param>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="localNames" /> ou um dos nomes na matriz é <see langword="null" />.

- ou -

<paramref name="namespaceUri" /> é <see langword="null" />.</exception>
      <returns>O índice do nome local do nó atual dentro de uma matriz de nomes.</returns>
    </member>
    <member name="M:System.Xml.XmlDictionaryReader.IndexOfLocalName(System.Xml.XmlDictionaryString[],System.Xml.XmlDictionaryString)">
      <summary>Obtém o índice do nome local do nó atual dentro de uma matriz de nomes.</summary>
      <param name="localNames">A matriz <see cref="T:System.Xml.XmlDictionaryString" /> de nomes locais a ser pesquisada.</param>
      <param name="namespaceUri">O namespace do nó atual.</param>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="localNames" /> ou um dos nomes na matriz é <see langword="null" />.

- ou -

<paramref name="namespaceUri" /> é <see langword="null" />.</exception>
      <returns>O índice do nome local do nó atual dentro de uma matriz de nomes.</returns>
    </member>
    <member name="M:System.Xml.XmlDictionaryReader.IsLocalName(System.String)">
      <summary>Verifica se o parâmetro <paramref name="localName" /> é o nome local do nó atual.</summary>
      <param name="localName">O nome local do nó atual.</param>
      <returns>
        <see langword="true" /> se <paramref name="localName" /> corresponder ao nome local do nó atual; caso contrário <see langword="false" />.</returns>
    </member>
    <member name="M:System.Xml.XmlDictionaryReader.IsLocalName(System.Xml.XmlDictionaryString)">
      <summary>Verifica se o parâmetro <paramref name="localName" /> é o nome local do nó atual.</summary>
      <param name="localName">Um <see cref="T:System.Xml.XmlDictionaryString" /> que representa o nome local do nó atual.</param>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="localName" /> é <see langword="null" />.</exception>
      <returns>
        <see langword="true" /> se <paramref name="localName" /> corresponder ao nome local do nó atual; caso contrário <see langword="false" />.</returns>
    </member>
    <member name="M:System.Xml.XmlDictionaryReader.IsNamespaceUri(System.String)">
      <summary>Verifica se o parâmetro <paramref name="namespaceUri" /> é o namespace do nó atual.</summary>
      <param name="namespaceUri">O namespace do nó atual.</param>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="namespaceUri" /> é <see langword="null" />.</exception>
      <returns>
        <see langword="true" /> se <paramref name="namespaceUri" /> corresponder ao namespace do nó atual; caso contrário, <see langword="false" />.</returns>
    </member>
    <member name="M:System.Xml.XmlDictionaryReader.IsNamespaceUri(System.Xml.XmlDictionaryString)">
      <summary>Verifica se o parâmetro <paramref name="namespaceUri" /> é o namespace do nó atual.</summary>
      <param name="namespaceUri">Namespace do nó atual.</param>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="namespaceUri" /> é <see langword="null" />.</exception>
      <returns>
        <see langword="true" /> se <paramref name="namespaceUri" /> corresponder ao namespace do nó atual; caso contrário, <see langword="false" />.</returns>
    </member>
    <member name="M:System.Xml.XmlDictionaryReader.IsStartArray(System.Type@)">
      <summary>Verifica se o leitor está posicionado no início de uma matriz. Essa classe retorna <see langword="false" />, mas as classes derivadas que tem o conceito de matrizes podem retornar <see langword="true" />.</summary>
      <param name="type">O tipo de nó, se for um nó válido; caso contrário, <see langword="null" />.</param>
      <returns>
        <see langword="true" /> se o leitor estiver posicionado no início de um nó da matriz; caso contrário, <see langword="false" />.</returns>
    </member>
    <member name="M:System.Xml.XmlDictionaryReader.IsStartElement(System.Xml.XmlDictionaryString,System.Xml.XmlDictionaryString)">
      <summary>Testa se a primeira marca é uma marca de início ou marca de elemento vazio, e se o nome local e o URI de namespace correspondem àqueles do nó atual.</summary>
      <param name="localName">Um <see cref="T:System.Xml.XmlDictionaryString" /> que representa o nome local do atributo.</param>
      <param name="namespaceUri">Um <see cref="T:System.Xml.XmlDictionaryString" /> que representa o namespace do atributo.</param>
      <returns>
        <see langword="true" /> se a primeira marca na matriz é uma marca de início ou marca de elemento vazio e corresponde a <paramref name="localName" /> e <paramref name="namespaceUri" />; caso contrário, <see langword="false" />.</returns>
    </member>
    <member name="M:System.Xml.XmlDictionaryReader.IsTextNode(System.Xml.XmlNodeType)">
      <summary>Testa se o nó atual é um nó de texto.</summary>
      <param name="nodeType">O tipo do nó que está sendo testado.</param>
      <returns>
        <see langword="true" /> se o tipo de nó for <see cref="F:System.Xml.XmlNodeType.Text" />, <see cref="F:System.Xml.XmlNodeType.Whitespace" />, <see cref="F:System.Xml.XmlNodeType.SignificantWhitespace" />, <see cref="F:System.Xml.XmlNodeType.CDATA" /> ou <see cref="F:System.Xml.XmlNodeType.Attribute" />; caso contrário <see langword="false" />.</returns>
    </member>
    <member name="M:System.Xml.XmlDictionaryReader.MoveToStartElement">
      <summary>Testa se o nó de conteúdo atual é um elemento inicial ou um elemento vazio.</summary>
    </member>
    <member name="M:System.Xml.XmlDictionaryReader.MoveToStartElement(System.String)">
      <summary>Testa se o nó de conteúdo atual é um elemento inicial ou um elemento vazio, e se a propriedade <see cref="P:System.Xml.XmlReader.Name" /> do elemento corresponde ao argumento fornecido.</summary>
      <param name="name">A propriedade <see cref="P:System.Xml.XmlReader.Name" /> do elemento.</param>
    </member>
    <member name="M:System.Xml.XmlDictionaryReader.MoveToStartElement(System.String,System.String)">
      <summary>Testa se o nó de conteúdo atual é um elemento inicial ou um elemento vazio, e se as propriedades <see cref="P:System.Xml.XmlReader.LocalName" /> e <see cref="P:System.Xml.XmlReader.NamespaceURI" /> do elemento correspondem ao argumento fornecido.</summary>
      <param name="localName">O nome local do elemento.</param>
      <param name="namespaceUri">O URI do namespace do elemento.</param>
    </member>
    <member name="M:System.Xml.XmlDictionaryReader.MoveToStartElement(System.Xml.XmlDictionaryString,System.Xml.XmlDictionaryString)">
      <summary>Testa se o nó de conteúdo atual é um elemento inicial ou um elemento vazio, e se as propriedades <see cref="P:System.Xml.XmlReader.LocalName" /> e <see cref="P:System.Xml.XmlReader.NamespaceURI" /> do elemento correspondem ao argumento fornecido.</summary>
      <param name="localName">O nome local do elemento.</param>
      <param name="namespaceUri">O URI do namespace do elemento.</param>
    </member>
    <member name="M:System.Xml.XmlDictionaryReader.ReadArray(System.String,System.String,System.Boolean[],System.Int32,System.Int32)">
      <summary>Lê ocorrências repetidas de nós <see cref="T:System.Boolean" /> em uma matriz tipada.</summary>
      <param name="localName">O nome local do elemento.</param>
      <param name="namespaceUri">O nome local do elemento.</param>
      <param name="array">A matriz na qual os nós são colocados.</param>
      <param name="offset">O índice inicial na matriz.</param>
      <param name="count">O número de nós a ser colocado na matriz.</param>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="array" /> é <see langword="null" />.</exception>
      <exception cref="T:System.ArgumentOutOfRangeException">
        <paramref name="offset" /> tem comprimento &lt; 0 ou &gt; <paramref name="array" />.

- ou -

<paramref name="count" /> é &lt; 0 ou &gt; <paramref name="array" /> de tamanho menos <paramref name="offset" />.</exception>
      <returns>O número de nós colocados na matriz.</returns>
    </member>
    <member name="M:System.Xml.XmlDictionaryReader.ReadArray(System.String,System.String,System.DateTime[],System.Int32,System.Int32)">
      <summary>Lê ocorrências repetidas de nós <see cref="T:System.DateTime" /> em uma matriz tipada.</summary>
      <param name="localName">O nome local do elemento.</param>
      <param name="namespaceUri">O URI do namespace do elemento.</param>
      <param name="array">A matriz na qual os nós são colocados.</param>
      <param name="offset">O índice inicial na matriz.</param>
      <param name="count">O número de nós a ser colocado na matriz.</param>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="array" /> é <see langword="null" />.</exception>
      <exception cref="T:System.ArgumentOutOfRangeException">
        <paramref name="offset" /> tem comprimento &lt; 0 ou &gt; <paramref name="array" />.

- ou -

<paramref name="count" /> é &lt; 0 ou &gt; <paramref name="array" /> de tamanho menos <paramref name="offset" />.</exception>
      <returns>O número de nós colocados na matriz.</returns>
    </member>
    <member name="M:System.Xml.XmlDictionaryReader.ReadArray(System.String,System.String,System.Decimal[],System.Int32,System.Int32)">
      <summary>Lê ocorrências repetidas de nós <see cref="T:System.Decimal" /> em uma matriz tipada.</summary>
      <param name="localName">O nome local do elemento.</param>
      <param name="namespaceUri">O URI do namespace do elemento.</param>
      <param name="array">A matriz na qual os nós são colocados.</param>
      <param name="offset">O índice inicial na matriz.</param>
      <param name="count">O número de nós a ser colocado na matriz.</param>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="array" /> é <see langword="null" />.</exception>
      <exception cref="T:System.ArgumentOutOfRangeException">
        <paramref name="offset" /> tem comprimento &lt; 0 ou &gt; <paramref name="array" />.

- ou -

<paramref name="count" /> é &lt; 0 ou &gt; <paramref name="array" /> de tamanho menos <paramref name="offset" />.</exception>
      <returns>O número de nós colocados na matriz.</returns>
    </member>
    <member name="M:System.Xml.XmlDictionaryReader.ReadArray(System.String,System.String,System.Double[],System.Int32,System.Int32)">
      <summary>Lê ocorrências repetidas de nós <see cref="T:System.Double" /> em uma matriz tipada.</summary>
      <param name="localName">O nome local do elemento.</param>
      <param name="namespaceUri">O URI do namespace do elemento.</param>
      <param name="array">A matriz na qual os nós são colocados.</param>
      <param name="offset">O índice inicial na matriz.</param>
      <param name="count">O número de nós a ser colocado na matriz.</param>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="array" /> é <see langword="null" />.</exception>
      <exception cref="T:System.ArgumentOutOfRangeException">
        <paramref name="offset" /> tem comprimento &lt; 0 ou &gt; <paramref name="array" />.

- ou -

<paramref name="count" /> é &lt; 0 ou &gt; <paramref name="array" /> de tamanho menos <paramref name="offset" />.</exception>
      <returns>O número de nós colocados na matriz.</returns>
    </member>
    <member name="M:System.Xml.XmlDictionaryReader.ReadArray(System.String,System.String,System.Guid[],System.Int32,System.Int32)">
      <summary>Lê ocorrências repetidas de nós <see cref="T:System.Guid" /> em uma matriz tipada.</summary>
      <param name="localName">O nome local do elemento.</param>
      <param name="namespaceUri">O URI do namespace do elemento.</param>
      <param name="array">A matriz na qual os nós são colocados.</param>
      <param name="offset">O índice inicial na matriz.</param>
      <param name="count">O número de nós a ser colocado na matriz.</param>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="array" /> é <see langword="null" />.</exception>
      <exception cref="T:System.ArgumentOutOfRangeException">
        <paramref name="offset" /> tem comprimento &lt; 0 ou &gt; <paramref name="array" />.

- ou -

<paramref name="count" /> é &lt; 0 ou &gt; <paramref name="array" /> de tamanho menos <paramref name="offset" />.</exception>
      <returns>O número de nós colocados na matriz.</returns>
    </member>
    <member name="M:System.Xml.XmlDictionaryReader.ReadArray(System.String,System.String,System.Int16[],System.Int32,System.Int32)">
      <summary>Lê ocorrências repetidas de inteiros <see langword="short" /> em uma matriz tipada.</summary>
      <param name="localName">O nome local do elemento.</param>
      <param name="namespaceUri">O URI do namespace do elemento.</param>
      <param name="array">A matriz na qual os inteiros são colocados.</param>
      <param name="offset">O índice inicial na matriz.</param>
      <param name="count">O número de inteiros a ser colocado na matriz.</param>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="array" /> é <see langword="null" />.</exception>
      <exception cref="T:System.ArgumentOutOfRangeException">
        <paramref name="offset" /> tem comprimento &lt; 0 ou &gt; <paramref name="array" />.

- ou -

<paramref name="count" /> é &lt; 0 ou &gt; <paramref name="array" /> de tamanho menos <paramref name="offset" />.</exception>
      <returns>O número de inteiros colocados na matriz.</returns>
    </member>
    <member name="M:System.Xml.XmlDictionaryReader.ReadArray(System.String,System.String,System.Int32[],System.Int32,System.Int32)">
      <summary>Lê ocorrências repetidas de inteiros em uma matriz tipada.</summary>
      <param name="localName">O nome local do elemento.</param>
      <param name="namespaceUri">O URI do namespace do elemento.</param>
      <param name="array">A matriz na qual os inteiros são colocados.</param>
      <param name="offset">O índice inicial na matriz.</param>
      <param name="count">O número de inteiros a ser colocado na matriz.</param>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="array" /> é <see langword="null" />.</exception>
      <exception cref="T:System.ArgumentOutOfRangeException">
        <paramref name="offset" /> tem comprimento &lt; 0 ou &gt; <paramref name="array" />.

- ou -

<paramref name="count" /> é &lt; 0 ou &gt; <paramref name="array" /> de tamanho menos <paramref name="offset" />.</exception>
      <returns>O número de inteiros colocados na matriz.</returns>
    </member>
    <member name="M:System.Xml.XmlDictionaryReader.ReadArray(System.String,System.String,System.Int64[],System.Int32,System.Int32)">
      <summary>Lê ocorrências repetidas de inteiros <see langword="long" /> em uma matriz tipada.</summary>
      <param name="localName">O nome local do elemento.</param>
      <param name="namespaceUri">O URI do namespace do elemento.</param>
      <param name="array">A matriz na qual os inteiros são colocados.</param>
      <param name="offset">O índice inicial na matriz.</param>
      <param name="count">O número de inteiros a ser colocado na matriz.</param>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="array" /> é <see langword="null" />.</exception>
      <exception cref="T:System.ArgumentOutOfRangeException">
        <paramref name="offset" /> tem comprimento &lt; 0 ou &gt; <paramref name="array" />.

- ou -

<paramref name="count" /> é &lt; 0 ou &gt; <paramref name="array" /> de tamanho menos <paramref name="offset" />.</exception>
      <returns>O número de inteiros colocados na matriz.</returns>
    </member>
    <member name="M:System.Xml.XmlDictionaryReader.ReadArray(System.String,System.String,System.Single[],System.Int32,System.Int32)">
      <summary>Lê ocorrências repetidas de números <see langword="float" /> em uma matriz tipada.</summary>
      <param name="localName">O nome local do elemento.</param>
      <param name="namespaceUri">O URI do namespace do elemento.</param>
      <param name="array">A matriz na qual os números de ponto flutuante são colocados.</param>
      <param name="offset">O índice inicial na matriz.</param>
      <param name="count">O número de números de ponto flutuante a serem colocados na matriz.</param>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="array" /> é <see langword="null" />.</exception>
      <exception cref="T:System.ArgumentOutOfRangeException">
        <paramref name="offset" /> tem comprimento &lt; 0 ou &gt; <paramref name="array" />.

- ou -

<paramref name="count" /> é &lt; 0 ou &gt; <paramref name="array" /> de tamanho menos <paramref name="offset" />.</exception>
      <returns>O número de números de ponto flutuante colocados na matriz.</returns>
    </member>
    <member name="M:System.Xml.XmlDictionaryReader.ReadArray(System.String,System.String,System.TimeSpan[],System.Int32,System.Int32)">
      <summary>Lê ocorrências repetidas de nós <see cref="T:System.TimeSpan" /> em uma matriz tipada.</summary>
      <param name="localName">O nome local do elemento.</param>
      <param name="namespaceUri">O URI do namespace do elemento.</param>
      <param name="array">A matriz na qual os nós são colocados.</param>
      <param name="offset">O índice inicial na matriz.</param>
      <param name="count">O número de nós a ser colocado na matriz.</param>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="array" /> é <see langword="null" />.</exception>
      <exception cref="T:System.ArgumentOutOfRangeException">
        <paramref name="offset" /> tem comprimento &lt; 0 ou &gt; <paramref name="array" />.

- ou -

<paramref name="count" /> é &lt; 0 ou &gt; <paramref name="array" /> de tamanho menos <paramref name="offset" />.</exception>
      <returns>O número de nós colocados na matriz.</returns>
    </member>
    <member name="M:System.Xml.XmlDictionaryReader.ReadArray(System.Xml.XmlDictionaryString,System.Xml.XmlDictionaryString,System.Boolean[],System.Int32,System.Int32)">
      <summary>Lê ocorrências repetidas de nós <see cref="T:System.Boolean" /> em uma matriz tipada.</summary>
      <param name="localName">O nome local do elemento.</param>
      <param name="namespaceUri">O URI do namespace do elemento.</param>
      <param name="array">A matriz na qual os nós são colocados.</param>
      <param name="offset">O índice inicial na matriz.</param>
      <param name="count">O número de nós a ser colocado na matriz.</param>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="array" /> é <see langword="null" />.</exception>
      <exception cref="T:System.ArgumentOutOfRangeException">
        <paramref name="offset" /> tem comprimento &lt; 0 ou &gt; <paramref name="array" />.

- ou -

<paramref name="count" /> é &lt; 0 ou &gt; <paramref name="array" /> de tamanho menos <paramref name="offset" />.</exception>
      <returns>O número de nós colocados na matriz.</returns>
    </member>
    <member name="M:System.Xml.XmlDictionaryReader.ReadArray(System.Xml.XmlDictionaryString,System.Xml.XmlDictionaryString,System.DateTime[],System.Int32,System.Int32)">
      <summary>Lê ocorrências repetidas de nós <see cref="T:System.DateTime" /> em uma matriz tipada.</summary>
      <param name="localName">O nome local do elemento.</param>
      <param name="namespaceUri">O URI do namespace do elemento.</param>
      <param name="array">A matriz na qual os nós são colocados.</param>
      <param name="offset">O índice inicial na matriz.</param>
      <param name="count">O número de nós a ser colocado na matriz.</param>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="array" /> é <see langword="null" />.</exception>
      <exception cref="T:System.ArgumentOutOfRangeException">
        <paramref name="offset" /> tem comprimento &lt; 0 ou &gt; <paramref name="array" />.

- ou -

<paramref name="count" /> é &lt; 0 ou &gt; <paramref name="array" /> de tamanho menos <paramref name="offset" />.</exception>
      <returns>O número de nós colocados na matriz.</returns>
    </member>
    <member name="M:System.Xml.XmlDictionaryReader.ReadArray(System.Xml.XmlDictionaryString,System.Xml.XmlDictionaryString,System.Decimal[],System.Int32,System.Int32)">
      <summary>Lê ocorrências repetidas de nós <see cref="T:System.Decimal" /> em uma matriz tipada.</summary>
      <param name="localName">O nome local do elemento.</param>
      <param name="namespaceUri">O URI do namespace do elemento.</param>
      <param name="array">A matriz na qual os nós são colocados.</param>
      <param name="offset">O índice inicial na matriz.</param>
      <param name="count">O número de nós a ser colocado na matriz.</param>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="array" /> é <see langword="null" />.</exception>
      <exception cref="T:System.ArgumentOutOfRangeException">
        <paramref name="offset" /> tem comprimento &lt; 0 ou &gt; <paramref name="array" />.

- ou -

<paramref name="count" /> é &lt; 0 ou &gt; <paramref name="array" /> de tamanho menos <paramref name="offset" />.</exception>
      <returns>O número de nós colocados na matriz.</returns>
    </member>
    <member name="M:System.Xml.XmlDictionaryReader.ReadArray(System.Xml.XmlDictionaryString,System.Xml.XmlDictionaryString,System.Double[],System.Int32,System.Int32)">
      <summary>Lê ocorrências repetidas do tipo de nós <see cref="T:System.Double" /> em uma matriz tipada.</summary>
      <param name="localName">O nome local do elemento.</param>
      <param name="namespaceUri">O URI do namespace do elemento.</param>
      <param name="array">A matriz na qual os nós são colocados.</param>
      <param name="offset">O índice inicial na matriz.</param>
      <param name="count">O número de nós a ser colocado na matriz.</param>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="array" /> é <see langword="null" />.</exception>
      <exception cref="T:System.ArgumentOutOfRangeException">
        <paramref name="offset" /> tem comprimento &lt; 0 ou &gt; <paramref name="array" />.

- ou -

<paramref name="count" /> é &lt; 0 ou &gt; <paramref name="array" /> de tamanho menos <paramref name="offset" />.</exception>
      <returns>O número de nós colocados na matriz.</returns>
    </member>
    <member name="M:System.Xml.XmlDictionaryReader.ReadArray(System.Xml.XmlDictionaryString,System.Xml.XmlDictionaryString,System.Guid[],System.Int32,System.Int32)">
      <summary>Lê ocorrências repetidas de nós <see cref="T:System.Guid" /> em uma matriz tipada.</summary>
      <param name="localName">O nome local do elemento.</param>
      <param name="namespaceUri">O URI do namespace do elemento.</param>
      <param name="array">A matriz na qual os nós são colocados.</param>
      <param name="offset">O índice inicial na matriz.</param>
      <param name="count">O número de nós a ser colocado na matriz.</param>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="array" /> é <see langword="null" />.</exception>
      <exception cref="T:System.ArgumentOutOfRangeException">
        <paramref name="offset" /> tem comprimento &lt; 0 ou &gt; <paramref name="array" />.

- ou -

<paramref name="count" /> é &lt; 0 ou &gt; <paramref name="array" /> de tamanho menos <paramref name="offset" />.</exception>
      <returns>O número de nós colocados na matriz.</returns>
    </member>
    <member name="M:System.Xml.XmlDictionaryReader.ReadArray(System.Xml.XmlDictionaryString,System.Xml.XmlDictionaryString,System.Int16[],System.Int32,System.Int32)">
      <summary>Lê ocorrências repetidas de inteiros <see langword="short" /> em uma matriz tipada.</summary>
      <param name="localName">O nome local do elemento.</param>
      <param name="namespaceUri">O URI do namespace do elemento.</param>
      <param name="array">A matriz na qual os inteiros são colocados.</param>
      <param name="offset">O índice inicial na matriz.</param>
      <param name="count">O número de inteiros a ser colocado na matriz.</param>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="array" /> é <see langword="null" />.</exception>
      <exception cref="T:System.ArgumentOutOfRangeException">
        <paramref name="offset" /> tem comprimento &lt; 0 ou &gt; <paramref name="array" />.

- ou -

<paramref name="count" /> é &lt; 0 ou &gt; <paramref name="array" /> de tamanho menos <paramref name="offset" />.</exception>
      <returns>O número de inteiros colocados na matriz.</returns>
    </member>
    <member name="M:System.Xml.XmlDictionaryReader.ReadArray(System.Xml.XmlDictionaryString,System.Xml.XmlDictionaryString,System.Int32[],System.Int32,System.Int32)">
      <summary>Lê ocorrências repetidas de inteiros em uma matriz tipada.</summary>
      <param name="localName">O nome local do elemento.</param>
      <param name="namespaceUri">O URI do namespace do elemento.</param>
      <param name="array">A matriz na qual os inteiros são colocados.</param>
      <param name="offset">O índice inicial na matriz.</param>
      <param name="count">O número de inteiros a ser colocado na matriz.</param>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="array" /> é <see langword="null" />.</exception>
      <exception cref="T:System.ArgumentOutOfRangeException">
        <paramref name="offset" /> tem comprimento &lt; 0 ou &gt; <paramref name="array" />.

- ou -

<paramref name="count" /> é &lt; 0 ou &gt; <paramref name="array" /> de tamanho menos <paramref name="offset" />.</exception>
      <returns>O número de inteiros colocados na matriz.</returns>
    </member>
    <member name="M:System.Xml.XmlDictionaryReader.ReadArray(System.Xml.XmlDictionaryString,System.Xml.XmlDictionaryString,System.Int64[],System.Int32,System.Int32)">
      <summary>Lê ocorrências repetidas de inteiros <see langword="long" /> em uma matriz tipada.</summary>
      <param name="localName">O nome local do elemento.</param>
      <param name="namespaceUri">O URI do namespace do elemento.</param>
      <param name="array">A matriz na qual os inteiros são colocados.</param>
      <param name="offset">O índice inicial na matriz.</param>
      <param name="count">O número de inteiros a ser colocado na matriz.</param>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="array" /> é <see langword="null" />.</exception>
      <exception cref="T:System.ArgumentOutOfRangeException">
        <paramref name="offset" /> tem comprimento &lt; 0 ou &gt; <paramref name="array" />.

- ou -

<paramref name="count" /> é &lt; 0 ou &gt; <paramref name="array" /> de tamanho menos <paramref name="offset" />.</exception>
      <returns>O número de inteiros colocados na matriz.</returns>
    </member>
    <member name="M:System.Xml.XmlDictionaryReader.ReadArray(System.Xml.XmlDictionaryString,System.Xml.XmlDictionaryString,System.Single[],System.Int32,System.Int32)">
      <summary>Lê ocorrências repetidas de números <see langword="float" /> em uma matriz tipada.</summary>
      <param name="localName">O nome local do elemento.</param>
      <param name="namespaceUri">O URI do namespace do elemento.</param>
      <param name="array">A matriz na qual os números de ponto flutuante são colocados.</param>
      <param name="offset">O índice inicial na matriz.</param>
      <param name="count">O número de números de ponto flutuante a serem colocados na matriz.</param>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="array" /> é <see langword="null" />.</exception>
      <exception cref="T:System.ArgumentOutOfRangeException">
        <paramref name="offset" /> tem comprimento &lt; 0 ou &gt; <paramref name="array" />.

- ou -

<paramref name="count" /> é &lt; 0 ou &gt; <paramref name="array" /> de tamanho menos <paramref name="offset" />.</exception>
      <returns>O número de números flutuantes colocados na matriz.</returns>
    </member>
    <member name="M:System.Xml.XmlDictionaryReader.ReadArray(System.Xml.XmlDictionaryString,System.Xml.XmlDictionaryString,System.TimeSpan[],System.Int32,System.Int32)">
      <summary>Lê ocorrências repetidas de nós <see cref="T:System.TimeSpan" /> em uma matriz tipada.</summary>
      <param name="localName">O nome local do elemento.</param>
      <param name="namespaceUri">O URI do namespace do elemento.</param>
      <param name="array">A matriz na qual os nós são colocados.</param>
      <param name="offset">O índice inicial na matriz.</param>
      <param name="count">O número de nós a ser colocado na matriz.</param>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="array" /> é <see langword="null" />.</exception>
      <exception cref="T:System.ArgumentOutOfRangeException">
        <paramref name="offset" /> tem comprimento &lt; 0 ou &gt; <paramref name="array" />.

- ou -

<paramref name="count" /> é &lt; 0 ou &gt; <paramref name="array" /> de tamanho menos <paramref name="offset" />.</exception>
      <returns>O número de nós colocados na matriz.</returns>
    </member>
    <member name="M:System.Xml.XmlDictionaryReader.ReadBooleanArray(System.String,System.String)">
      <summary>Lê ocorrências repetidas de nós <see cref="T:System.Boolean" /> em uma matriz tipada.</summary>
      <param name="localName">O nome local do elemento.</param>
      <param name="namespaceUri">O URI do namespace do elemento.</param>
      <returns>Uma matriz <see cref="T:System.Boolean" /> dos nós <see cref="T:System.Boolean" />.</returns>
    </member>
    <member name="M:System.Xml.XmlDictionaryReader.ReadBooleanArray(System.Xml.XmlDictionaryString,System.Xml.XmlDictionaryString)">
      <summary>Lê ocorrências repetidas de nós <see cref="T:System.Boolean" /> em uma matriz tipada.</summary>
      <param name="localName">O nome local do elemento.</param>
      <param name="namespaceUri">O URI do namespace do elemento.</param>
      <returns>Uma matriz <see cref="T:System.Boolean" /> dos nós <see cref="T:System.Boolean" />.</returns>
    </member>
    <member name="M:System.Xml.XmlDictionaryReader.ReadContentAs(System.Type,System.Xml.IXmlNamespaceResolver)">
      <summary>Converte o conteúdo de um nó em um tipo especificado.</summary>
      <param name="type">O <see cref="T:System.Type" /> do valor a ser retornado.</param>
      <param name="namespaceResolver">Um objeto <see cref="T:System.Xml.IXmlNamespaceResolver" /> que é usado para resolver todos os prefixos de namespace relacionados à conversão de tipo. Por exemplo, ele pode ser usado ao converter um objeto <see cref="T:System.Xml.XmlQualifiedName" /> em um <c>xs:string</c>. Esse valor pode ser uma referência nula.</param>
      <returns>O valor de atributo ou conteúdo de texto concatenado convertido para o tipo solicitado.</returns>
    </member>
    <member name="M:System.Xml.XmlDictionaryReader.ReadContentAsBase64">
      <summary>Lê o conteúdo e retorna os bytes binários decodificados de Base64.</summary>
      <exception cref="T:System.Xml.XmlException">O tamanho da matriz é maior que a cota de MaxArrayLength para este leitor.</exception>
      <returns>Uma matriz de bytes que contém os bytes binários de Base64 decodificados.</returns>
    </member>
    <member name="M:System.Xml.XmlDictionaryReader.ReadContentAsBinHex">
      <summary>Lê o conteúdo e retorna os bytes binários decodificados <see langword="BinHex" />.</summary>
      <exception cref="T:System.Xml.XmlException">O tamanho da matriz é maior que <see cref="F:System.Int32.MaxValue" />.</exception>
      <returns>Uma matriz de bytes que contém os bytes binários decodificados <see langword="BinHex" />.</returns>
    </member>
    <member name="M:System.Xml.XmlDictionaryReader.ReadContentAsBinHex(System.Int32)">
      <summary>Lê o conteúdo e retorna os bytes binários decodificados <see langword="BinHex" />.</summary>
      <param name="maxByteArrayContentLength">O tamanho máximo da matriz.</param>
      <exception cref="T:System.Xml.XmlException">O tamanho da matriz é maior que <paramref name="maxByteArrayContentLength" />.</exception>
      <returns>Uma matriz de bytes que contém os bytes binários decodificados <see langword="BinHex" />.</returns>
    </member>
    <member name="M:System.Xml.XmlDictionaryReader.ReadContentAsChars(System.Char[],System.Int32,System.Int32)">
      <summary>Lê o conteúdo em uma matriz <see langword="char" />.</summary>
      <param name="chars">A matriz na qual os caracteres são colocados.</param>
      <param name="offset">O índice inicial na matriz.</param>
      <param name="count">O número de caracteres a serem colocados na matriz.</param>
      <returns>Número de caracteres lidos.</returns>
    </member>
    <member name="M:System.Xml.XmlDictionaryReader.ReadContentAsDecimal">
      <summary>Converte o conteúdo de um nó em <see langword="decimal" />.</summary>
      <returns>A representação <see langword="decimal" /> do conteúdo do nó.</returns>
    </member>
    <member name="M:System.Xml.XmlDictionaryReader.ReadContentAsFloat">
      <summary>Converte o conteúdo de um nó em <see langword="float" />.</summary>
      <returns>A representação <see langword="float" /> do conteúdo do nó.</returns>
    </member>
    <member name="M:System.Xml.XmlDictionaryReader.ReadContentAsGuid">
      <summary>Converte o conteúdo de um nó em <see langword="guid" />.</summary>
      <returns>A representação <see langword="guid" /> do conteúdo do nó.</returns>
    </member>
    <member name="M:System.Xml.XmlDictionaryReader.ReadContentAsQualifiedName(System.String@,System.String@)">
      <summary>Converte o conteúdo de um nó em uma representação de nome qualificado.</summary>
      <param name="localName">A parte <see cref="P:System.Xml.XmlReader.LocalName" /> do nome qualificado (parâmetro <see langword="out" />).</param>
      <param name="namespaceUri">A parte <see cref="P:System.Xml.XmlReader.NamespaceURI" /> do nome qualificado (parâmetro <see langword="out" />).</param>
    </member>
    <member name="M:System.Xml.XmlDictionaryReader.ReadContentAsString">
      <summary>Converte o conteúdo de um nó em uma cadeia de caracteres.</summary>
      <returns>O conteúdo do nó em uma representação de cadeia de caracteres.</returns>
    </member>
    <member name="M:System.Xml.XmlDictionaryReader.ReadContentAsString(System.Int32)">
      <summary>Converte o conteúdo de um nó em uma cadeia de caracteres.</summary>
      <param name="maxStringContentLength">O tamanho máximo da cadeia de caracteres.</param>
      <returns>O conteúdo do nó na representação de cadeia de caracteres.</returns>
    </member>
    <member name="M:System.Xml.XmlDictionaryReader.ReadContentAsString(System.String[],System.Int32@)">
      <summary>Converte o conteúdo de um nó em uma cadeia de caracteres.</summary>
      <param name="strings">A matriz de cadeias de caracteres à qual o conteúdo deverá corresponder.</param>
      <param name="index">O índice da entrada em <paramref name="strings" /> que correspondem ao conteúdo.</param>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="strings" /> é <see langword="null" />.

- ou -

Uma entrada em <paramref name="strings" /> é <see langword="null" />.</exception>
      <returns>O conteúdo do nó em uma representação de cadeia de caracteres.</returns>
    </member>
    <member name="M:System.Xml.XmlDictionaryReader.ReadContentAsString(System.Xml.XmlDictionaryString[],System.Int32@)">
      <summary>Converte o conteúdo de um nó em uma cadeia de caracteres.</summary>
      <param name="strings">A matriz de objetos <see cref="T:System.Xml.XmlDictionaryString" /> à qual o conteúdo deverá corresponder.</param>
      <param name="index">O índice da entrada em <paramref name="strings" /> que correspondem ao conteúdo.</param>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="strings" /> é <see langword="null" />.

- ou -

Uma entrada em <paramref name="strings" /> é <see langword="null" />.</exception>
      <returns>O conteúdo do nó em uma representação de cadeia de caracteres.</returns>
    </member>
    <member name="M:System.Xml.XmlDictionaryReader.ReadContentAsTimeSpan">
      <summary>Converte o conteúdo de um nó em <see cref="T:System.TimeSpan" />.</summary>
      <returns>A representação <see cref="T:System.TimeSpan" /> do conteúdo do nó.</returns>
    </member>
    <member name="M:System.Xml.XmlDictionaryReader.ReadContentAsUniqueId">
      <summary>Converte o conteúdo de um nó em um identificador exclusivo.</summary>
      <returns>O conteúdo do nó representado como um identificador exclusivo.</returns>
    </member>
    <member name="M:System.Xml.XmlDictionaryReader.ReadDateTimeArray(System.String,System.String)">
      <summary>Converte o conteúdo de um nó a uma matriz <see cref="T:System.DateTime" />.</summary>
      <param name="localName">O nome local do elemento.</param>
      <param name="namespaceUri">O URI do namespace do elemento.</param>
      <returns>O conteúdo do nó representado como uma matriz <see cref="T:System.DateTime" />.</returns>
    </member>
    <member name="M:System.Xml.XmlDictionaryReader.ReadDateTimeArray(System.Xml.XmlDictionaryString,System.Xml.XmlDictionaryString)">
      <summary>Converte o conteúdo de um nó a uma matriz <see cref="T:System.DateTime" />.</summary>
      <param name="localName">O nome local do elemento.</param>
      <param name="namespaceUri">O URI do namespace do elemento.</param>
      <returns>O conteúdo do nó representado como uma matriz <see cref="T:System.DateTime" />.</returns>
    </member>
    <member name="M:System.Xml.XmlDictionaryReader.ReadDecimalArray(System.String,System.String)">
      <summary>Converte o conteúdo de um nó a uma matriz <see cref="T:System.Decimal" />.</summary>
      <param name="localName">O nome local do elemento.</param>
      <param name="namespaceUri">O URI do namespace do elemento.</param>
      <returns>O conteúdo do nó representado como uma matriz <see cref="T:System.Decimal" />.</returns>
    </member>
    <member name="M:System.Xml.XmlDictionaryReader.ReadDecimalArray(System.Xml.XmlDictionaryString,System.Xml.XmlDictionaryString)">
      <summary>Converte o conteúdo de um nó a uma matriz <see cref="T:System.Decimal" />.</summary>
      <param name="localName">O nome local do elemento.</param>
      <param name="namespaceUri">O URI do namespace do elemento.</param>
      <returns>O conteúdo do nó representado como uma matriz <see cref="T:System.Decimal" />.</returns>
    </member>
    <member name="M:System.Xml.XmlDictionaryReader.ReadDoubleArray(System.String,System.String)">
      <summary>Converte o conteúdo de um nó a uma matriz <see cref="T:System.Double" />.</summary>
      <param name="localName">O nome local do elemento.</param>
      <param name="namespaceUri">O URI do namespace do elemento.</param>
      <returns>O conteúdo do nó representado como uma matriz <see cref="T:System.Double" />.</returns>
    </member>
    <member name="M:System.Xml.XmlDictionaryReader.ReadDoubleArray(System.Xml.XmlDictionaryString,System.Xml.XmlDictionaryString)">
      <summary>Converte o conteúdo de um nó a uma matriz <see cref="T:System.Double" />.</summary>
      <param name="localName">O nome local do elemento.</param>
      <param name="namespaceUri">O URI do namespace do elemento.</param>
      <returns>O conteúdo do nó representado como uma matriz <see cref="T:System.Double" />.</returns>
    </member>
    <member name="M:System.Xml.XmlDictionaryReader.ReadElementContentAsBase64">
      <summary>Converte o conteúdo de um nó em uma matriz de bytes de Base64.</summary>
      <returns>O conteúdo do nó representado como uma matriz de bytes de Base64.</returns>
    </member>
    <member name="M:System.Xml.XmlDictionaryReader.ReadElementContentAsBinHex">
      <summary>Converte o conteúdo de um nó em uma matriz de <see langword="BinHex" /> bytes.</summary>
      <returns>O conteúdo do nó representado como uma matriz de <see langword="BinHex" /> bytes.</returns>
    </member>
    <member name="M:System.Xml.XmlDictionaryReader.ReadElementContentAsBoolean">
      <summary>Converte o conteúdo de um elemento em um <see cref="T:System.Boolean" />.</summary>
      <returns>O conteúdo do nó é representado como um <see cref="T:System.Boolean" />.</returns>
    </member>
    <member name="M:System.Xml.XmlDictionaryReader.ReadElementContentAsDateTime">
      <summary>Converte o conteúdo de um elemento em um <see cref="T:System.DateTime" />.</summary>
      <exception cref="T:System.ArgumentException">O elemento não está em um formato válido.</exception>
      <exception cref="T:System.FormatException">O elemento não está em um formato válido.</exception>
      <returns>O conteúdo do nó é representado como um <see cref="T:System.DateTime" />.</returns>
    </member>
    <member name="M:System.Xml.XmlDictionaryReader.ReadElementContentAsDecimal">
      <summary>Converte o conteúdo de um elemento em um <see cref="T:System.Decimal" />.</summary>
      <returns>O conteúdo do nó é representado como um <see cref="T:System.Decimal" />.</returns>
    </member>
    <member name="M:System.Xml.XmlDictionaryReader.ReadElementContentAsDouble">
      <summary>Converte o conteúdo de um elemento em um <see cref="T:System.Double" />.</summary>
      <returns>O conteúdo do nó é representado como um <see cref="T:System.Double" />.</returns>
    </member>
    <member name="M:System.Xml.XmlDictionaryReader.ReadElementContentAsFloat">
      <summary>Converte o conteúdo de um elemento em um número de ponto flutuante (<see cref="T:System.Single" />).</summary>
      <returns>O conteúdo do nó representado como um número de ponto flutuante (<see cref="T:System.Single" />).</returns>
    </member>
    <member name="M:System.Xml.XmlDictionaryReader.ReadElementContentAsGuid">
      <summary>Converte o conteúdo de um elemento em um <see cref="T:System.Guid" />.</summary>
      <exception cref="T:System.ArgumentException">O elemento não está em um formato válido.</exception>
      <exception cref="T:System.FormatException">O elemento não está em um formato válido.</exception>
      <returns>O conteúdo do nó é representado como um <see cref="T:System.Guid" />.</returns>
    </member>
    <member name="M:System.Xml.XmlDictionaryReader.ReadElementContentAsInt">
      <summary>Converte o conteúdo de um elemento em um inteiro (<see cref="T:System.Int32" />).</summary>
      <returns>O conteúdo do nó representado como um inteiro (<see cref="T:System.Int32" />).</returns>
    </member>
    <member name="M:System.Xml.XmlDictionaryReader.ReadElementContentAsLong">
      <summary>Converte o conteúdo de um elemento em um inteiro longo (<see cref="T:System.Int64" />).</summary>
      <returns>O conteúdo do nó representado como um inteiro longo (<see cref="T:System.Int64" />).</returns>
    </member>
    <member name="M:System.Xml.XmlDictionaryReader.ReadElementContentAsString">
      <summary>Converte o conteúdo de um elemento em um <see cref="T:System.String" />.</summary>
      <returns>O conteúdo do nó é representado como um <see cref="T:System.String" />.</returns>
    </member>
    <member name="M:System.Xml.XmlDictionaryReader.ReadElementContentAsTimeSpan">
      <summary>Converte o conteúdo de um elemento em um <see cref="T:System.TimeSpan" />.</summary>
      <returns>O conteúdo do nó é representado como um <see cref="T:System.TimeSpan" />.</returns>
    </member>
    <member name="M:System.Xml.XmlDictionaryReader.ReadElementContentAsUniqueId">
      <summary>Converte o conteúdo de um elemento em um identificador exclusivo.</summary>
      <exception cref="T:System.ArgumentException">O elemento não está em um formato válido.</exception>
      <exception cref="T:System.FormatException">O elemento não está em um formato válido.</exception>
      <returns>O conteúdo do nó representado como um identificador exclusivo.</returns>
    </member>
    <member name="M:System.Xml.XmlDictionaryReader.ReadFullStartElement">
      <summary>Verifica se o nó atual é um elemento e avança o leitor para o próximo nó.</summary>
      <exception cref="T:System.Xml.XmlException">
        <see cref="M:System.Xml.XmlDictionaryReader.IsStartElement(System.Xml.XmlDictionaryString,System.Xml.XmlDictionaryString)" /> retorna <see langword="false" />.</exception>
    </member>
    <member name="M:System.Xml.XmlDictionaryReader.ReadFullStartElement(System.String)">
      <summary>Verifica se o nó atual é um elemento com o <paramref name="name" /> determinado e avança o leitor para o próximo nó.</summary>
      <param name="name">O nome qualificado do elemento.</param>
      <exception cref="T:System.Xml.XmlException">
        <see cref="M:System.Xml.XmlDictionaryReader.IsStartElement(System.Xml.XmlDictionaryString,System.Xml.XmlDictionaryString)" /> retorna <see langword="false" />.</exception>
    </member>
    <member name="M:System.Xml.XmlDictionaryReader.ReadFullStartElement(System.String,System.String)">
      <summary>Verifica se o nó atual é um elemento com o <paramref name="localName" /> e <paramref name="namespaceUri" /> determinados e avança o leitor para o próximo nó.</summary>
      <param name="localName">O nome local do elemento.</param>
      <param name="namespaceUri">O URI do namespace do elemento.</param>
      <exception cref="T:System.Xml.XmlException">
        <see cref="M:System.Xml.XmlDictionaryReader.IsStartElement(System.Xml.XmlDictionaryString,System.Xml.XmlDictionaryString)" /> retorna <see langword="false" />.</exception>
    </member>
    <member name="M:System.Xml.XmlDictionaryReader.ReadFullStartElement(System.Xml.XmlDictionaryString,System.Xml.XmlDictionaryString)">
      <summary>Verifica se o nó atual é um elemento com o <paramref name="localName" /> e <paramref name="namespaceUri" /> determinados e avança o leitor para o próximo nó.</summary>
      <param name="localName">O nome local do elemento.</param>
      <param name="namespaceUri">O URI do namespace do elemento.</param>
      <exception cref="T:System.Xml.XmlException">
        <see cref="M:System.Xml.XmlDictionaryReader.IsStartElement(System.Xml.XmlDictionaryString,System.Xml.XmlDictionaryString)" /> retorna <see langword="false" />.</exception>
    </member>
    <member name="M:System.Xml.XmlDictionaryReader.ReadGuidArray(System.String,System.String)">
      <summary>Lê o conteúdo de uma série de nós com os <paramref name="localName" /> e <paramref name="namespaceUri" /> determinados em uma matriz de <see cref="T:System.Guid" />.</summary>
      <param name="localName">O nome local do elemento.</param>
      <param name="namespaceUri">O URI do namespace do elemento.</param>
      <returns>Uma matriz de <see cref="T:System.Guid" />.</returns>
    </member>
    <member name="M:System.Xml.XmlDictionaryReader.ReadGuidArray(System.Xml.XmlDictionaryString,System.Xml.XmlDictionaryString)">
      <summary>Lê o conteúdo de uma série de nós com os <paramref name="localName" /> e <paramref name="namespaceUri" /> determinados em uma matriz de <see cref="T:System.Guid" />.</summary>
      <param name="localName">O nome local do elemento.</param>
      <param name="namespaceUri">O URI do namespace do elemento.</param>
      <returns>Uma matriz de <see cref="T:System.Guid" />.</returns>
    </member>
    <member name="M:System.Xml.XmlDictionaryReader.ReadInt16Array(System.String,System.String)">
      <summary>Lê o conteúdo de uma série de nós com os <paramref name="localName" /> e <paramref name="namespaceUri" /> determinados em uma matriz de <see langword="short" /> inteiros (<see cref="T:System.Int16" />).</summary>
      <param name="localName">O nome local do elemento.</param>
      <param name="namespaceUri">O URI do namespace do elemento.</param>
      <returns>Uma matriz de <see langword="short" /> inteiros (<see cref="T:System.Int16" />).</returns>
    </member>
    <member name="M:System.Xml.XmlDictionaryReader.ReadInt16Array(System.Xml.XmlDictionaryString,System.Xml.XmlDictionaryString)">
      <summary>Lê o conteúdo de uma série de nós com os <paramref name="localName" /> e <paramref name="namespaceUri" /> determinados em uma matriz de <see langword="short" /> inteiros (<see cref="T:System.Int16" />).</summary>
      <param name="localName">O nome local do elemento.</param>
      <param name="namespaceUri">O URI do namespace do elemento.</param>
      <returns>Uma matriz de <see langword="short" /> inteiros (<see cref="T:System.Int16" />).</returns>
    </member>
    <member name="M:System.Xml.XmlDictionaryReader.ReadInt32Array(System.String,System.String)">
      <summary>Lê o conteúdo de uma série de nós com os <paramref name="localName" /> e <paramref name="namespaceUri" /> determinados em uma matriz de inteiros (<see cref="T:System.Int32" />).</summary>
      <param name="localName">O nome local do elemento.</param>
      <param name="namespaceUri">O URI do namespace do elemento.</param>
      <returns>Uma matriz de inteiros (<see cref="T:System.Int32" />).</returns>
    </member>
    <member name="M:System.Xml.XmlDictionaryReader.ReadInt32Array(System.Xml.XmlDictionaryString,System.Xml.XmlDictionaryString)">
      <summary>Lê o conteúdo de uma série de nós com os <paramref name="localName" /> e <paramref name="namespaceUri" /> determinados em uma matriz de inteiros (<see cref="T:System.Int32" />).</summary>
      <param name="localName">O nome local do elemento.</param>
      <param name="namespaceUri">O URI do namespace do elemento.</param>
      <returns>Uma matriz de inteiros (<see cref="T:System.Int32" />).</returns>
    </member>
    <member name="M:System.Xml.XmlDictionaryReader.ReadInt64Array(System.String,System.String)">
      <summary>Lê o conteúdo de uma série de nós com os <paramref name="localName" /> e <paramref name="namespaceUri" /> determinados em uma matriz de <see langword="long" /> inteiros (<see cref="T:System.Int64" />).</summary>
      <param name="localName">O nome local do elemento.</param>
      <param name="namespaceUri">O URI do namespace do elemento.</param>
      <returns>Uma matriz de <see langword="long" /> inteiros (<see cref="T:System.Int64" />).</returns>
    </member>
    <member name="M:System.Xml.XmlDictionaryReader.ReadInt64Array(System.Xml.XmlDictionaryString,System.Xml.XmlDictionaryString)">
      <summary>Lê o conteúdo de uma série de nós com os <paramref name="localName" /> e <paramref name="namespaceUri" /> determinados em uma matriz de <see langword="long" /> inteiros (<see cref="T:System.Int64" />).</summary>
      <param name="localName">O nome local do elemento.</param>
      <param name="namespaceUri">O URI do namespace do elemento.</param>
      <returns>Uma matriz de <see langword="long" /> inteiros (<see cref="T:System.Int64" />).</returns>
    </member>
    <member name="M:System.Xml.XmlDictionaryReader.ReadSingleArray(System.String,System.String)">
      <summary>Lê o conteúdo de uma série de nós com os <paramref name="localName" /> e <paramref name="namespaceUri" /> determinados em uma matriz de <see langword="float" /> números (<see cref="T:System.Single" />).</summary>
      <param name="localName">O nome local do elemento.</param>
      <param name="namespaceUri">O URI do namespace do elemento.</param>
      <returns>Uma matriz de <see langword="float" /> números (<see cref="T:System.Single" />).</returns>
    </member>
    <member name="M:System.Xml.XmlDictionaryReader.ReadSingleArray(System.Xml.XmlDictionaryString,System.Xml.XmlDictionaryString)">
      <summary>Lê o conteúdo de uma série de nós com os <paramref name="localName" /> e <paramref name="namespaceUri" /> determinados em uma matriz de <see langword="float" /> números (<see cref="T:System.Single" />).</summary>
      <param name="localName">O nome local do elemento.</param>
      <param name="namespaceUri">O URI do namespace do elemento.</param>
      <returns>Uma matriz de <see langword="float" /> números (<see cref="T:System.Single" />).</returns>
    </member>
    <member name="M:System.Xml.XmlDictionaryReader.ReadStartElement(System.Xml.XmlDictionaryString,System.Xml.XmlDictionaryString)">
      <summary>Verifica se o nó atual é um elemento com o <paramref name="localName" /> e <paramref name="namespaceUri" /> determinados e avança o leitor para o próximo nó.</summary>
      <param name="localName">O nome local do elemento.</param>
      <param name="namespaceUri">O URI do namespace do elemento.</param>
    </member>
    <member name="M:System.Xml.XmlDictionaryReader.ReadString">
      <summary>Lê o conteúdo do nó atual em uma cadeia de caracteres.</summary>
      <exception cref="T:System.InvalidOperationException">Não é possível ler o conteúdo do nó atual.</exception>
      <exception cref="T:System.Xml.XmlException">O tamanho máximo permitido da cadeia de caracteres foi excedido.</exception>
      <returns>Uma cadeia de caracteres que tem o conteúdo do nó atual.</returns>
    </member>
    <member name="M:System.Xml.XmlDictionaryReader.ReadString(System.Int32)">
      <summary>Lê o conteúdo do nó atual em uma cadeia de caracteres com tamanho máximo especificado.</summary>
      <param name="maxStringContentLength">Tamanho máximo permitido de cadeia de caracteres.</param>
      <exception cref="T:System.InvalidOperationException">Não é possível ler o conteúdo do nó atual.</exception>
      <exception cref="T:System.Xml.XmlException">O tamanho máximo permitido da cadeia de caracteres foi excedido.</exception>
      <returns>Uma cadeia de caracteres que tem o conteúdo do nó atual.</returns>
    </member>
    <member name="M:System.Xml.XmlDictionaryReader.ReadTimeSpanArray(System.String,System.String)">
      <summary>Lê o conteúdo de uma série de nós com os <paramref name="localName" /> e <paramref name="namespaceUri" /> determinados em uma matriz <see cref="T:System.TimeSpan" />.</summary>
      <param name="localName">O nome local do elemento.</param>
      <param name="namespaceUri">O URI do namespace do elemento.</param>
      <returns>Uma matriz <see cref="T:System.TimeSpan" />.</returns>
    </member>
    <member name="M:System.Xml.XmlDictionaryReader.ReadTimeSpanArray(System.Xml.XmlDictionaryString,System.Xml.XmlDictionaryString)">
      <summary>Lê o conteúdo de uma série de nós com os <paramref name="localName" /> e <paramref name="namespaceUri" /> determinados em uma matriz <see cref="T:System.TimeSpan" />.</summary>
      <param name="localName">O nome local do elemento.</param>
      <param name="namespaceUri">O URI do namespace do elemento.</param>
      <returns>Uma matriz <see cref="T:System.TimeSpan" />.</returns>
    </member>
    <member name="M:System.Xml.XmlDictionaryReader.ReadValueAsBase64(System.Byte[],System.Int32,System.Int32)">
      <summary>Não implementado.</summary>
      <param name="buffer">O buffer do qual ler.</param>
      <param name="offset">A posição inicial da qual será feita a leitura no <paramref name="buffer" />.</param>
      <param name="count">O número de bytes que podem ser lidos de <paramref name="buffer" />.</param>
      <exception cref="T:System.NotSupportedException">Sempre.</exception>
      <returns>Não implementado.</returns>
    </member>
    <member name="M:System.Xml.XmlDictionaryReader.StartCanonicalization(System.IO.Stream,System.Boolean,System.String[])">
      <summary>Este método ainda não foi implementado.</summary>
      <param name="stream">O fluxo a ser lido.</param>
      <param name="includeComments">Determina se os comentários são incluídos.</param>
      <param name="inclusivePrefixes">Os prefixos a serem incluídos.</param>
      <exception cref="T:System.NotSupportedException">Sempre.</exception>
    </member>
    <member name="M:System.Xml.XmlDictionaryReader.TryGetArrayLength(System.Int32@)">
      <summary>Não implementado nessa classe (sempre retorna <see langword="false" />). Pode ser substituído em classes derivadas.</summary>
      <param name="count">Retorna 0, a menos que seja substituído em uma classe derivada.</param>
      <returns>
        <see langword="false" />, a menos que substituído em uma classe derivada.</returns>
    </member>
    <member name="M:System.Xml.XmlDictionaryReader.TryGetBase64ContentLength(System.Int32@)">
      <summary>Não implementado nessa classe (sempre retorna <see langword="false" />). Pode ser substituído em classes derivadas.</summary>
      <param name="length">Retorna 0, a menos que seja substituído em uma classe derivada.</param>
      <returns>
        <see langword="false" />, a menos que substituído em uma classe derivada.</returns>
    </member>
    <member name="M:System.Xml.XmlDictionaryReader.TryGetLocalNameAsDictionaryString(System.Xml.XmlDictionaryString@)">
      <summary>Não implementado nessa classe (sempre retorna <see langword="false" />). Pode ser substituído em classes derivadas.</summary>
      <param name="localName">Retorna <see langword="null" />, a menos que seja substituído em uma classe derivada. .</param>
      <returns>
        <see langword="false" />, a menos que substituído em uma classe derivada.</returns>
    </member>
    <member name="M:System.Xml.XmlDictionaryReader.TryGetNamespaceUriAsDictionaryString(System.Xml.XmlDictionaryString@)">
      <summary>Não implementado nessa classe (sempre retorna <see langword="false" />). Pode ser substituído em classes derivadas.</summary>
      <param name="namespaceUri">Retorna <see langword="null" />, a menos que seja substituído em uma classe derivada.</param>
      <returns>
        <see langword="false" />, a menos que substituído em uma classe derivada.</returns>
    </member>
    <member name="M:System.Xml.XmlDictionaryReader.TryGetValueAsDictionaryString(System.Xml.XmlDictionaryString@)">
      <summary>Não implementado nessa classe (sempre retorna <see langword="false" />). Pode ser substituído em classes derivadas.</summary>
      <param name="value">Retorna <see langword="null" />, a menos que seja substituído em uma classe derivada.</param>
      <returns>
        <see langword="false" />, a menos que substituído em uma classe derivada.</returns>
    </member>
    <member name="P:System.Xml.XmlDictionaryReader.CanCanonicalize">
      <summary>Essa propriedade sempre retorna <see langword="false" />. Suas classes derivadas podem substituir para retornar <see langword="true" /> se elas dão suporte à canonização.</summary>
      <returns>Retorna <see langword="false" />.</returns>
    </member>
    <member name="P:System.Xml.XmlDictionaryReader.Quotas">
      <summary>Obtém os valores de cota que se aplicam à instância atual dessa classe.</summary>
      <returns>O <see cref="T:System.Xml.XmlDictionaryReaderQuotas" /> que se aplica à instância atual desta classe.</returns>
    </member>
    <member name="T:System.Xml.XmlDictionaryReaderQuotas">
      <summary>Contém valores de cota configuráveis para XmlDictionaryReaders.</summary>
    </member>
    <member name="M:System.Xml.XmlDictionaryReaderQuotas.#ctor">
      <summary>Cria uma nova instância dessa classe.</summary>
    </member>
    <member name="M:System.Xml.XmlDictionaryReaderQuotas.CopyTo(System.Xml.XmlDictionaryReaderQuotas)">
      <summary>Define as propriedades em uma instância de cotas transmitida, com base nos valores nesta instância.</summary>
      <param name="quotas">A instância <see cref="T:System.Xml.XmlDictionaryReaderQuotas" /> para qual os valores serão copiados.</param>
      <exception cref="T:System.InvalidOperationException">Tentando o valor <see langword="set" />, mas valores de cota são somente leitura para a instância transmitida.</exception>
      <exception cref="T:System.ArgumentNullException">O destino transmitido <paramref name="quotas" /> é <see langword="null" />.</exception>
    </member>
    <member name="P:System.Xml.XmlDictionaryReaderQuotas.Max">
      <summary>Obtém uma instância dessa classe com todas as propriedades definidas com valores máximos.</summary>
      <returns>Uma instância de <see cref="T:System.Xml.XmlDictionaryReaderQuotas" /> com as propriedades definidas como <see cref="F:System.Int32.MaxValue" />.</returns>
    </member>
    <member name="P:System.Xml.XmlDictionaryReaderQuotas.MaxArrayLength">
      <summary>Obtém ou define a extensão máxima permitida da matriz.</summary>
      <exception cref="T:System.InvalidOperationException">Tentando o valor <see langword="set" />, mas valores de cota são somente leitura para esta instância.</exception>
      <exception cref="T:System.ArgumentException">Tentando <see langword="set" /> o valor para menor que zero.</exception>
      <returns>A extensão máxima permitida da matriz. O padrão é 16384.</returns>
    </member>
    <member name="P:System.Xml.XmlDictionaryReaderQuotas.MaxBytesPerRead">
      <summary>Obtém ou define o máximo permitido de bytes retornados para cada leitura.</summary>
      <exception cref="T:System.InvalidOperationException">Tentando o valor <see langword="set" />, mas valores de cota são somente leitura para esta instância.</exception>
      <exception cref="T:System.ArgumentException">Tentando <see langword="set" /> o valor para menor que zero.</exception>
      <returns>O máximo de bytes permitidos retornados para cada leitura. O padrão é 4096.</returns>
    </member>
    <member name="P:System.Xml.XmlDictionaryReaderQuotas.MaxDepth">
      <summary>Obtém ou define a profundidade máxima do nó aninhado.</summary>
      <exception cref="T:System.InvalidOperationException">Tentando o valor <see langword="set" /> e os valores de cota são somente leitura para esta instância.</exception>
      <exception cref="T:System.ArgumentException">Tentando <see langword="set" /> o valor é menor que zero.</exception>
      <returns>A profundidade máxima do nó aninhado. O padrão é 32;</returns>
    </member>
    <member name="P:System.Xml.XmlDictionaryReaderQuotas.MaxNameTableCharCount">
      <summary>Obtém ou define o máximo de caracteres permitido em um nome de tabela.</summary>
      <exception cref="T:System.InvalidOperationException">Tentando o valor <see langword="set" />, mas valores de cota são somente leitura para esta instância.</exception>
      <exception cref="T:System.ArgumentException">Tentando <see langword="set" /> o valor para menor que zero.</exception>
      <returns>O máximo de caracteres permitidos no nome da tabela. O padrão é 16384.</returns>
    </member>
    <member name="P:System.Xml.XmlDictionaryReaderQuotas.MaxStringContentLength">
      <summary>Obtém ou define o tamanho máximo da cadeia de caracteres retornada pelo leitor.</summary>
      <exception cref="T:System.InvalidOperationException">Tentando o valor <see langword="set" />, mas valores de cota são somente leitura para esta instância.</exception>
      <exception cref="T:System.ArgumentException">Tentando <see langword="set" /> o valor para menor que zero.</exception>
      <returns>O tamanho máximo da cadeia de caracteres retornado pelo leitor. O padrão é 8192.</returns>
    </member>
    <member name="P:System.Xml.XmlDictionaryReaderQuotas.ModifiedQuotas">
      <summary>Obtém as cotas modificadas para o <see cref="T:System.Xml.XmlDictionaryReaderQuotas" />.</summary>
      <returns>As cotas modificadas para o <see cref="T:System.Xml.XmlDictionaryReaderQuotas" /> .</returns>
    </member>
    <member name="T:System.Xml.XmlDictionaryReaderQuotaTypes">
      <summary>Enumera os valores de cota configuráveis para XmlDictionaryReaders.</summary>
    </member>
    <member name="F:System.Xml.XmlDictionaryReaderQuotaTypes.MaxArrayLength">
      <summary>Especifica a tamanho máximo permitido da matriz.</summary>
    </member>
    <member name="F:System.Xml.XmlDictionaryReaderQuotaTypes.MaxBytesPerRead">
      <summary>Especifica o máximo permitido de bytes retornados para cada leitura.</summary>
    </member>
    <member name="F:System.Xml.XmlDictionaryReaderQuotaTypes.MaxDepth">
      <summary>Especifica a profundidade máxima do nó aninhado.</summary>
    </member>
    <member name="F:System.Xml.XmlDictionaryReaderQuotaTypes.MaxNameTableCharCount">
      <summary>Especifica o máximo de caracteres permitido em um nome de tabela.</summary>
    </member>
    <member name="F:System.Xml.XmlDictionaryReaderQuotaTypes.MaxStringContentLength">
      <summary>Especifica o tamanho máximo da cadeia de caracteres retornada pelo leitor.</summary>
    </member>
    <member name="T:System.Xml.XmlDictionaryString">
      <summary>Representa uma entrada armazenada em um <see cref="T:System.Xml.XmlDictionary" />.</summary>
    </member>
    <member name="M:System.Xml.XmlDictionaryString.#ctor(System.Xml.IXmlDictionary,System.String,System.Int32)">
      <summary>Cria uma instância dessa classe.</summary>
      <param name="dictionary">O <see cref="T:System.Xml.IXmlDictionary" /> que contém essa instância.</param>
      <param name="value">A cadeia de caracteres que é o valor da entrada do dicionário.</param>
      <param name="key">O inteiro que é a chave da entrada do dicionário.</param>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="dictionary" /> ou <paramref name="value" /> é <see langword="null" />.</exception>
      <exception cref="T:System.ArgumentOutOfRangeException">
        <paramref name="key" /> é menor que 0 ou maior que <see cref="F:System.Int32.MaxValue" /> / 4.</exception>
    </member>
    <member name="M:System.Xml.XmlDictionaryString.ToString">
      <summary>Exibe uma representação de texto do objeto.</summary>
      <returns>O valor de cadeia de caracteres para esta instância da classe.</returns>
    </member>
    <member name="P:System.Xml.XmlDictionaryString.Dictionary">
      <summary>Representa o <see cref="T:System.Xml.IXmlDictionary" /> transmitido ao construtor desta instância de <see cref="T:System.Xml.XmlDictionaryString" />.</summary>
      <returns>O <see cref="T:System.Xml.IXmlDictionary" /> para esta entrada de dicionário.</returns>
    </member>
    <member name="P:System.Xml.XmlDictionaryString.Empty">
      <summary>Obtém um <see cref="T:System.Xml.XmlDictionaryString" /> que representa a cadeia de caracteres vazia.</summary>
      <returns>Um <see cref="T:System.Xml.XmlDictionaryString" /> que representa a cadeia de caracteres vazia.</returns>
    </member>
    <member name="P:System.Xml.XmlDictionaryString.Key">
      <summary>Obtém a chave de inteiro para esta instância da classe.</summary>
      <returns>A chave de inteiro para esta instância da classe.</returns>
    </member>
    <member name="P:System.Xml.XmlDictionaryString.Value">
      <summary>Obtém o valor de cadeia de caracteres para esta instância da classe.</summary>
      <returns>O valor de cadeia de caracteres para esta instância da classe.</returns>
    </member>
    <member name="T:System.Xml.XmlDictionaryWriter">
      <summary>Representa uma classe abstrata que o WCF (Windows Communication Foundation) deriva de <see cref="T:System.Xml.XmlWriter" /> para realizar serialização e desserialização.</summary>
    </member>
    <member name="M:System.Xml.XmlDictionaryWriter.#ctor">
      <summary>Inicializa uma nova instância da classe <see cref="T:System.Xml.XmlDictionaryWriter" />.</summary>
    </member>
    <member name="M:System.Xml.XmlDictionaryWriter.CreateBinaryWriter(System.IO.Stream)">
      <summary>Cria uma instância do <see cref="T:System.Xml.XmlDictionaryWriter" /> que grava o formato XML binário do WCF.</summary>
      <param name="stream">O fluxo para gravação.</param>
      <returns>Uma instância de <see cref="T:System.Xml.XmlDictionaryWriter" />.</returns>
    </member>
    <member name="M:System.Xml.XmlDictionaryWriter.CreateBinaryWriter(System.IO.Stream,System.Xml.IXmlDictionary)">
      <summary>Cria uma instância do <see cref="T:System.Xml.XmlDictionaryWriter" /> que grava o formato XML binário do WCF.</summary>
      <param name="stream">O fluxo para gravação.</param>
      <param name="dictionary">O <see cref="T:System.Xml.XmlDictionary" /> a ser usado como o dicionário compartilhado.</param>
      <returns>Uma instância de <see cref="T:System.Xml.XmlDictionaryWriter" />.</returns>
    </member>
    <member name="M:System.Xml.XmlDictionaryWriter.CreateBinaryWriter(System.IO.Stream,System.Xml.IXmlDictionary,System.Xml.XmlBinaryWriterSession)">
      <summary>Cria uma instância do <see cref="T:System.Xml.XmlDictionaryWriter" /> que grava o formato XML binário do WCF.</summary>
      <param name="stream">O fluxo para gravação.</param>
      <param name="dictionary">O <see cref="T:System.Xml.XmlDictionary" /> a ser usado como o dicionário compartilhado.</param>
      <param name="session">O <see cref="T:System.Xml.XmlBinaryWriterSession" /> a ser usado.</param>
      <returns>Uma instância de <see cref="T:System.Xml.XmlDictionaryWriter" />.</returns>
    </member>
    <member name="M:System.Xml.XmlDictionaryWriter.CreateBinaryWriter(System.IO.Stream,System.Xml.IXmlDictionary,System.Xml.XmlBinaryWriterSession,System.Boolean)">
      <summary>Cria uma instância do <see cref="T:System.Xml.XmlDictionaryWriter" /> que grava o formato XML binário do WCF.</summary>
      <param name="stream">O fluxo do qual ler.</param>
      <param name="dictionary">O <see cref="T:System.Xml.XmlDictionary" /> a ser usado como o dicionário compartilhado.</param>
      <param name="session">O <see cref="T:System.Xml.XmlBinaryWriterSession" /> a ser usado.</param>
      <param name="ownsStream">
        <see langword="true" /> para indicar que o fluxo é fechado pelo gravador quando concluído; caso contrário, <see langword="false" />.</param>
      <returns>Uma instância de <see cref="T:System.Xml.XmlDictionaryWriter" />.</returns>
    </member>
    <member name="M:System.Xml.XmlDictionaryWriter.CreateDictionaryWriter(System.Xml.XmlWriter)">
      <summary>Cria uma instância de <see cref="T:System.Xml.XmlDictionaryWriter" /> com base em um <see cref="T:System.Xml.XmlWriter" /> existente.</summary>
      <param name="writer">Uma instância de <see cref="T:System.Xml.XmlWriter" />.</param>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="writer" /> é <see langword="null" />.</exception>
      <returns>Uma instância de <see cref="T:System.Xml.XmlDictionaryWriter" />.</returns>
    </member>
    <member name="M:System.Xml.XmlDictionaryWriter.CreateMtomWriter(System.IO.Stream,System.Text.Encoding,System.Int32,System.String)">
      <summary>Cria uma instância de <see cref="T:System.Xml.XmlDictionaryWriter" /> que grava XML no formato MTOM.</summary>
      <param name="stream">O fluxo para gravação.</param>
      <param name="encoding">A codificação de caracteres do fluxo.</param>
      <param name="maxSizeInBytes">O número máximo de bytes armazenados em buffer no gravador.</param>
      <param name="startInfo">Um atributo no cabeçalho SOAP ContentType.</param>
      <returns>Uma instância de <see cref="T:System.Xml.XmlDictionaryWriter" />.</returns>
    </member>
    <member name="M:System.Xml.XmlDictionaryWriter.CreateMtomWriter(System.IO.Stream,System.Text.Encoding,System.Int32,System.String,System.String,System.String,System.Boolean,System.Boolean)">
      <summary>Cria uma instância de <see cref="T:System.Xml.XmlDictionaryWriter" /> que grava XML no formato MTOM.</summary>
      <param name="stream">O fluxo para gravação.</param>
      <param name="encoding">A codificação de caracteres do fluxo.</param>
      <param name="maxSizeInBytes">O número máximo de bytes armazenados em buffer no gravador.</param>
      <param name="startInfo">O tipo de conteúdo da parte MIME que contém o Infoset.</param>
      <param name="boundary">O limite MIME na mensagem.</param>
      <param name="startUri">O URI da id de conteúdo da parte MIME que contém o Infoset.</param>
      <param name="writeMessageHeaders">
        <see langword="true" /> para gravar cabeçalhos de mensagem.</param>
      <param name="ownsStream">
        <see langword="true" /> para indicar que o fluxo é fechado pelo gravador quando concluído; caso contrário, <see langword="false" />.</param>
      <returns>Uma instância de <see cref="T:System.Xml.XmlDictionaryWriter" />.</returns>
    </member>
    <member name="M:System.Xml.XmlDictionaryWriter.CreateTextWriter(System.IO.Stream)">
      <summary>Cria uma instância do <see cref="T:System.Xml.XmlDictionaryWriter" /> que grava o XML do texto.</summary>
      <param name="stream">O fluxo para gravação.</param>
      <returns>Uma instância de <see cref="T:System.Xml.XmlDictionaryWriter" />.</returns>
    </member>
    <member name="M:System.Xml.XmlDictionaryWriter.CreateTextWriter(System.IO.Stream,System.Text.Encoding)">
      <summary>Cria uma instância do <see cref="T:System.Xml.XmlDictionaryWriter" /> que grava o XML do texto.</summary>
      <param name="stream">O fluxo para gravação.</param>
      <param name="encoding">A codificação de caracteres da saída.</param>
      <returns>Uma instância de <see cref="T:System.Xml.XmlDictionaryWriter" />.</returns>
    </member>
    <member name="M:System.Xml.XmlDictionaryWriter.CreateTextWriter(System.IO.Stream,System.Text.Encoding,System.Boolean)">
      <summary>Cria uma instância do <see cref="T:System.Xml.XmlDictionaryWriter" /> que grava o XML do texto.</summary>
      <param name="stream">O fluxo para gravação.</param>
      <param name="encoding">A codificação de caracteres do fluxo.</param>
      <param name="ownsStream">
        <see langword="true" /> para indicar que o fluxo é fechado pelo gravador quando concluído; caso contrário, <see langword="false" />.</param>
      <returns>Uma instância de <see cref="T:System.Xml.XmlDictionaryWriter" />.</returns>
    </member>
    <member name="M:System.Xml.XmlDictionaryWriter.EndCanonicalization">
      <summary>Quando implementado por uma classe derivada, ele interrompe a canonicalização iniciada pela chamada <see cref="M:System.Xml.XmlDictionaryWriter.StartCanonicalization(System.IO.Stream,System.Boolean,System.String[])" /> correspondente.</summary>
      <exception cref="T:System.NotSupportedException">O método ainda não foi implementado.</exception>
    </member>
    <member name="M:System.Xml.XmlDictionaryWriter.StartCanonicalization(System.IO.Stream,System.Boolean,System.String[])">
      <summary>Quando implementado por uma classe derivada, ele inicia a canonicalização.</summary>
      <param name="stream">O fluxo para gravação.</param>
      <param name="includeComments">
        <see langword="true" /> para incluir comentários; caso contrário, <see langword="false" />.</param>
      <param name="inclusivePrefixes">Os prefixos a serem incluídos.</param>
      <exception cref="T:System.NotSupportedException">O método ainda não foi implementado.</exception>
    </member>
    <member name="M:System.Xml.XmlDictionaryWriter.WriteArray(System.String,System.String,System.String,System.Boolean[],System.Int32,System.Int32)">
      <summary>Grava nós de uma matriz <see cref="T:System.Boolean" />.</summary>
      <param name="prefix">O prefixo de namespace.</param>
      <param name="localName">O nome local do elemento.</param>
      <param name="namespaceUri">O URI do namespace do elemento.</param>
      <param name="array">A matriz que contém os dados.</param>
      <param name="offset">O índice inicial na matriz.</param>
      <param name="count">O número de valores a serem gravados da matriz.</param>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="array" /> é <see langword="null" />.</exception>
      <exception cref="T:System.ArgumentOutOfRangeException">
        <paramref name="offset" /> tem comprimento &lt; 0 ou &gt; <paramref name="array" />.

- ou -

<paramref name="count" /> é &lt; 0 ou &gt; <paramref name="array" /> de tamanho menos <paramref name="offset" />.</exception>
    </member>
    <member name="M:System.Xml.XmlDictionaryWriter.WriteArray(System.String,System.String,System.String,System.DateTime[],System.Int32,System.Int32)">
      <summary>Grava nós de uma matriz <see cref="T:System.DateTime" />.</summary>
      <param name="prefix">O prefixo de namespace.</param>
      <param name="localName">O nome local do elemento.</param>
      <param name="namespaceUri">O URI do namespace do elemento.</param>
      <param name="array">A matriz que contém os nós.</param>
      <param name="offset">O índice inicial na matriz.</param>
      <param name="count">O número de nós a ser obtido da matriz.</param>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="array" /> é <see langword="null" />.</exception>
      <exception cref="T:System.ArgumentOutOfRangeException">
        <paramref name="offset" /> tem comprimento &lt; 0 ou &gt; <paramref name="array" />.

- ou -

<paramref name="count" /> é &lt; 0 ou &gt; <paramref name="array" /> de tamanho menos <paramref name="offset" />.</exception>
    </member>
    <member name="M:System.Xml.XmlDictionaryWriter.WriteArray(System.String,System.String,System.String,System.Decimal[],System.Int32,System.Int32)">
      <summary>Grava nós de uma matriz <see cref="T:System.Decimal" />.</summary>
      <param name="prefix">O prefixo de namespace.</param>
      <param name="localName">O nome local do elemento.</param>
      <param name="namespaceUri">O URI do namespace do elemento.</param>
      <param name="array">A matriz que contém os nós.</param>
      <param name="offset">O índice inicial na matriz.</param>
      <param name="count">O número de nós a ser obtido da matriz.</param>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="array" /> é <see langword="null" />.</exception>
      <exception cref="T:System.ArgumentOutOfRangeException">
        <paramref name="offset" /> tem comprimento &lt; 0 ou &gt; <paramref name="array" />.

- ou -

<paramref name="count" /> é &lt; 0 ou &gt; <paramref name="array" /> de tamanho menos <paramref name="offset" />.</exception>
    </member>
    <member name="M:System.Xml.XmlDictionaryWriter.WriteArray(System.String,System.String,System.String,System.Double[],System.Int32,System.Int32)">
      <summary>Grava nós de uma matriz <see cref="T:System.Double" />.</summary>
      <param name="prefix">O prefixo de namespace.</param>
      <param name="localName">O nome local do elemento.</param>
      <param name="namespaceUri">O URI do namespace do elemento.</param>
      <param name="array">A matriz que contém os nós.</param>
      <param name="offset">O índice inicial na matriz.</param>
      <param name="count">O número de nós a ser obtido da matriz.</param>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="array" /> é <see langword="null" />.</exception>
      <exception cref="T:System.ArgumentOutOfRangeException">
        <paramref name="offset" /> tem comprimento &lt; 0 ou &gt; <paramref name="array" />.

- ou -

<paramref name="count" /> é &lt; 0 ou &gt; <paramref name="array" /> de tamanho menos <paramref name="offset" />.</exception>
    </member>
    <member name="M:System.Xml.XmlDictionaryWriter.WriteArray(System.String,System.String,System.String,System.Guid[],System.Int32,System.Int32)">
      <summary>Grava nós de uma matriz <see cref="T:System.Guid" />.</summary>
      <param name="prefix">O prefixo de namespace.</param>
      <param name="localName">O nome local do elemento.</param>
      <param name="namespaceUri">O URI do namespace do elemento.</param>
      <param name="array">A matriz que contém os nós.</param>
      <param name="offset">O índice inicial na matriz.</param>
      <param name="count">O número de nós a ser obtido da matriz.</param>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="array" /> é <see langword="null" />.</exception>
      <exception cref="T:System.ArgumentOutOfRangeException">
        <paramref name="offset" /> tem comprimento &lt; 0 ou &gt; <paramref name="array" />.

- ou -

<paramref name="count" /> é &lt; 0 ou &gt; <paramref name="array" /> de tamanho menos <paramref name="offset" />.</exception>
    </member>
    <member name="M:System.Xml.XmlDictionaryWriter.WriteArray(System.String,System.String,System.String,System.Int16[],System.Int32,System.Int32)">
      <summary>Grava nós de uma matriz <see cref="T:System.Int16" />.</summary>
      <param name="prefix">O prefixo de namespace.</param>
      <param name="localName">O nome local do elemento.</param>
      <param name="namespaceUri">O URI do namespace do elemento.</param>
      <param name="array">A matriz que contém os nós.</param>
      <param name="offset">O índice inicial na matriz.</param>
      <param name="count">O número de nós a ser obtido da matriz.</param>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="array" /> é <see langword="null" />.</exception>
      <exception cref="T:System.ArgumentOutOfRangeException">
        <paramref name="offset" /> tem comprimento &lt; 0 ou &gt; <paramref name="array" />.

- ou -

<paramref name="count" /> é &lt; 0 ou &gt; <paramref name="array" /> de tamanho menos <paramref name="offset" />.</exception>
    </member>
    <member name="M:System.Xml.XmlDictionaryWriter.WriteArray(System.String,System.String,System.String,System.Int32[],System.Int32,System.Int32)">
      <summary>Grava nós de uma matriz <see cref="T:System.Int32" />.</summary>
      <param name="prefix">O prefixo de namespace.</param>
      <param name="localName">O nome local do elemento.</param>
      <param name="namespaceUri">O URI do namespace do elemento.</param>
      <param name="array">A matriz que contém os nós.</param>
      <param name="offset">O índice inicial na matriz.</param>
      <param name="count">O número de nós a ser obtido da matriz.</param>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="array" /> é <see langword="null" />.</exception>
      <exception cref="T:System.ArgumentOutOfRangeException">
        <paramref name="offset" /> tem comprimento &lt; 0 ou &gt; <paramref name="array" />.

- ou -

<paramref name="count" /> é &lt; 0 ou &gt; <paramref name="array" /> de tamanho menos <paramref name="offset" />.</exception>
    </member>
    <member name="M:System.Xml.XmlDictionaryWriter.WriteArray(System.String,System.String,System.String,System.Int64[],System.Int32,System.Int32)">
      <summary>Grava nós de uma matriz <see cref="T:System.Int64" />.</summary>
      <param name="prefix">O prefixo de namespace.</param>
      <param name="localName">O nome local do elemento.</param>
      <param name="namespaceUri">O URI do namespace do elemento.</param>
      <param name="array">A matriz que contém os nós.</param>
      <param name="offset">O índice inicial na matriz.</param>
      <param name="count">O número de nós a ser obtido da matriz.</param>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="array" /> é <see langword="null" />.</exception>
      <exception cref="T:System.ArgumentOutOfRangeException">
        <paramref name="offset" /> tem comprimento &lt; 0 ou &gt; <paramref name="array" />.

- ou -

<paramref name="count" /> é &lt; 0 ou &gt; <paramref name="array" /> de tamanho menos <paramref name="offset" />.</exception>
    </member>
    <member name="M:System.Xml.XmlDictionaryWriter.WriteArray(System.String,System.String,System.String,System.Single[],System.Int32,System.Int32)">
      <summary>Grava nós de uma matriz <see cref="T:System.Single" />.</summary>
      <param name="prefix">O prefixo de namespace.</param>
      <param name="localName">O nome local do elemento.</param>
      <param name="namespaceUri">O URI do namespace do elemento.</param>
      <param name="array">A matriz que contém os nós.</param>
      <param name="offset">O índice inicial na matriz.</param>
      <param name="count">O número de nós a ser obtido da matriz.</param>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="array" /> é <see langword="null" />.</exception>
      <exception cref="T:System.ArgumentOutOfRangeException">
        <paramref name="offset" /> tem comprimento &lt; 0 ou &gt; <paramref name="array" />.

- ou -

<paramref name="count" /> é &lt; 0 ou &gt; <paramref name="array" /> de tamanho menos <paramref name="offset" />.</exception>
    </member>
    <member name="M:System.Xml.XmlDictionaryWriter.WriteArray(System.String,System.String,System.String,System.TimeSpan[],System.Int32,System.Int32)">
      <summary>Grava nós de uma matriz <see cref="T:System.TimeSpan" />.</summary>
      <param name="prefix">O prefixo de namespace.</param>
      <param name="localName">O nome local do elemento.</param>
      <param name="namespaceUri">O URI do namespace do elemento.</param>
      <param name="array">A matriz que contém os nós.</param>
      <param name="offset">O índice inicial na matriz.</param>
      <param name="count">O número de nós a ser obtido da matriz.</param>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="array" /> é <see langword="null" />.</exception>
      <exception cref="T:System.ArgumentOutOfRangeException">
        <paramref name="offset" /> tem comprimento &lt; 0 ou &gt; <paramref name="array" />.

- ou -

<paramref name="count" /> é &lt; 0 ou &gt; <paramref name="array" /> de tamanho menos <paramref name="offset" />.</exception>
    </member>
    <member name="M:System.Xml.XmlDictionaryWriter.WriteArray(System.String,System.Xml.XmlDictionaryString,System.Xml.XmlDictionaryString,System.Boolean[],System.Int32,System.Int32)">
      <summary>Grava nós de uma matriz <see cref="T:System.Boolean" />.</summary>
      <param name="prefix">O prefixo de namespace.</param>
      <param name="localName">O nome local do elemento.</param>
      <param name="namespaceUri">O URI do namespace do elemento.</param>
      <param name="array">A matriz que contém os nós.</param>
      <param name="offset">O índice inicial na matriz.</param>
      <param name="count">O número de nós a ser obtido da matriz.</param>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="array" /> é <see langword="null" />.</exception>
      <exception cref="T:System.ArgumentOutOfRangeException">
        <paramref name="offset" /> tem comprimento &lt; 0 ou &gt; <paramref name="array" />.

- ou -

<paramref name="count" /> é &lt; 0 ou &gt; <paramref name="array" /> de tamanho menos <paramref name="offset" />.</exception>
    </member>
    <member name="M:System.Xml.XmlDictionaryWriter.WriteArray(System.String,System.Xml.XmlDictionaryString,System.Xml.XmlDictionaryString,System.DateTime[],System.Int32,System.Int32)">
      <summary>Grava nós de uma matriz <see cref="T:System.DateTime" />.</summary>
      <param name="prefix">O prefixo de namespace.</param>
      <param name="localName">O nome local do elemento.</param>
      <param name="namespaceUri">O URI do namespace do elemento.</param>
      <param name="array">A matriz que contém os nós.</param>
      <param name="offset">O índice inicial na matriz.</param>
      <param name="count">O número de nós a ser obtido da matriz.</param>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="array" /> é <see langword="null" />.</exception>
      <exception cref="T:System.ArgumentOutOfRangeException">
        <paramref name="offset" /> tem comprimento &lt; 0 ou &gt; <paramref name="array" />.

- ou -

<paramref name="count" /> é &lt; 0 ou &gt; <paramref name="array" /> de tamanho menos <paramref name="offset" />.</exception>
    </member>
    <member name="M:System.Xml.XmlDictionaryWriter.WriteArray(System.String,System.Xml.XmlDictionaryString,System.Xml.XmlDictionaryString,System.Decimal[],System.Int32,System.Int32)">
      <summary>Grava nós de uma matriz <see cref="T:System.Decimal" />.</summary>
      <param name="prefix">O prefixo de namespace.</param>
      <param name="localName">O nome local do elemento.</param>
      <param name="namespaceUri">O URI do namespace do elemento.</param>
      <param name="array">A matriz que contém os nós.</param>
      <param name="offset">O índice inicial na matriz.</param>
      <param name="count">O número de nós a ser obtido da matriz.</param>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="array" /> é <see langword="null" />.</exception>
      <exception cref="T:System.ArgumentOutOfRangeException">
        <paramref name="offset" /> tem comprimento &lt; 0 ou &gt; <paramref name="array" />.

- ou -

<paramref name="count" /> é &lt; 0 ou &gt; <paramref name="array" /> de tamanho menos <paramref name="offset" />.</exception>
    </member>
    <member name="M:System.Xml.XmlDictionaryWriter.WriteArray(System.String,System.Xml.XmlDictionaryString,System.Xml.XmlDictionaryString,System.Double[],System.Int32,System.Int32)">
      <summary>Grava nós de uma matriz <see cref="T:System.Double" />.</summary>
      <param name="prefix">O prefixo de namespace.</param>
      <param name="localName">O nome local do elemento.</param>
      <param name="namespaceUri">O URI do namespace do elemento.</param>
      <param name="array">A matriz que contém os nós.</param>
      <param name="offset">O índice inicial na matriz.</param>
      <param name="count">O número de nós a ser obtido da matriz.</param>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="array" /> é <see langword="null" />.</exception>
      <exception cref="T:System.ArgumentOutOfRangeException">
        <paramref name="offset" /> tem comprimento &lt; 0 ou &gt; <paramref name="array" />.

- ou -

<paramref name="count" /> é &lt; 0 ou &gt; <paramref name="array" /> de tamanho menos <paramref name="offset" />.</exception>
    </member>
    <member name="M:System.Xml.XmlDictionaryWriter.WriteArray(System.String,System.Xml.XmlDictionaryString,System.Xml.XmlDictionaryString,System.Guid[],System.Int32,System.Int32)">
      <summary>Grava nós de uma matriz <see cref="T:System.Guid" />.</summary>
      <param name="prefix">O prefixo de namespace.</param>
      <param name="localName">O nome local do elemento.</param>
      <param name="namespaceUri">O URI do namespace do elemento.</param>
      <param name="array">A matriz que contém os nós.</param>
      <param name="offset">O índice inicial na matriz.</param>
      <param name="count">O número de nós a ser obtido da matriz.</param>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="array" /> é <see langword="null" />.</exception>
      <exception cref="T:System.ArgumentOutOfRangeException">
        <paramref name="offset" /> tem comprimento &lt; 0 ou &gt; <paramref name="array" />.

- ou -

<paramref name="count" /> é &lt; 0 ou &gt; <paramref name="array" /> de tamanho menos <paramref name="offset" />.</exception>
    </member>
    <member name="M:System.Xml.XmlDictionaryWriter.WriteArray(System.String,System.Xml.XmlDictionaryString,System.Xml.XmlDictionaryString,System.Int16[],System.Int32,System.Int32)">
      <summary>Grava nós de uma matriz <see cref="T:System.Int16" />.</summary>
      <param name="prefix">O prefixo de namespace.</param>
      <param name="localName">O nome local do elemento.</param>
      <param name="namespaceUri">O URI do namespace do elemento.</param>
      <param name="array">A matriz que contém os nós.</param>
      <param name="offset">O índice inicial na matriz.</param>
      <param name="count">O número de nós a ser obtido da matriz.</param>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="array" /> é <see langword="null" />.</exception>
      <exception cref="T:System.ArgumentOutOfRangeException">
        <paramref name="offset" /> tem comprimento &lt; 0 ou &gt; <paramref name="array" />.

- ou -

<paramref name="count" /> é &lt; 0 ou &gt; <paramref name="array" /> de tamanho menos <paramref name="offset" />.</exception>
    </member>
    <member name="M:System.Xml.XmlDictionaryWriter.WriteArray(System.String,System.Xml.XmlDictionaryString,System.Xml.XmlDictionaryString,System.Int32[],System.Int32,System.Int32)">
      <summary>Grava nós de uma matriz <see cref="T:System.Int32" />.</summary>
      <param name="prefix">O prefixo de namespace.</param>
      <param name="localName">O nome local do elemento.</param>
      <param name="namespaceUri">O URI do namespace do elemento.</param>
      <param name="array">A matriz que contém os nós.</param>
      <param name="offset">O índice inicial na matriz.</param>
      <param name="count">O número de nós a ser obtido da matriz.</param>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="array" /> é <see langword="null" />.</exception>
      <exception cref="T:System.ArgumentOutOfRangeException">
        <paramref name="offset" /> tem comprimento &lt; 0 ou &gt; <paramref name="array" />.

- ou -

<paramref name="count" /> é &lt; 0 ou &gt; <paramref name="array" /> de tamanho menos <paramref name="offset" />.</exception>
    </member>
    <member name="M:System.Xml.XmlDictionaryWriter.WriteArray(System.String,System.Xml.XmlDictionaryString,System.Xml.XmlDictionaryString,System.Int64[],System.Int32,System.Int32)">
      <summary>Grava nós de uma matriz <see cref="T:System.Int64" />.</summary>
      <param name="prefix">O prefixo de namespace.</param>
      <param name="localName">O nome local do elemento.</param>
      <param name="namespaceUri">O URI do namespace do elemento.</param>
      <param name="array">A matriz que contém os nós.</param>
      <param name="offset">O índice inicial na matriz.</param>
      <param name="count">O número de nós a ser obtido da matriz.</param>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="array" /> é <see langword="null" />.</exception>
      <exception cref="T:System.ArgumentOutOfRangeException">
        <paramref name="offset" /> tem comprimento &lt; 0 ou &gt; <paramref name="array" />.

- ou -

<paramref name="count" /> é &lt; 0 ou &gt; <paramref name="array" /> de tamanho menos <paramref name="offset" />.</exception>
    </member>
    <member name="M:System.Xml.XmlDictionaryWriter.WriteArray(System.String,System.Xml.XmlDictionaryString,System.Xml.XmlDictionaryString,System.Single[],System.Int32,System.Int32)">
      <summary>Grava nós de uma matriz <see cref="T:System.Single" />.</summary>
      <param name="prefix">O prefixo de namespace.</param>
      <param name="localName">O nome local do elemento.</param>
      <param name="namespaceUri">O URI do namespace do elemento.</param>
      <param name="array">A matriz que contém os nós.</param>
      <param name="offset">O índice inicial na matriz.</param>
      <param name="count">O número de nós a ser obtido da matriz.</param>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="array" /> é <see langword="null" />.</exception>
      <exception cref="T:System.ArgumentOutOfRangeException">
        <paramref name="offset" /> tem comprimento &lt; 0 ou &gt; <paramref name="array" />.

- ou -

<paramref name="count" /> é &lt; 0 ou &gt; <paramref name="array" /> de tamanho menos <paramref name="offset" />.</exception>
    </member>
    <member name="M:System.Xml.XmlDictionaryWriter.WriteArray(System.String,System.Xml.XmlDictionaryString,System.Xml.XmlDictionaryString,System.TimeSpan[],System.Int32,System.Int32)">
      <summary>Grava nós de uma matriz <see cref="T:System.TimeSpan" />.</summary>
      <param name="prefix">O prefixo de namespace.</param>
      <param name="localName">O nome local do elemento.</param>
      <param name="namespaceUri">O URI do namespace do elemento.</param>
      <param name="array">A matriz que contém os nós.</param>
      <param name="offset">O índice inicial na matriz.</param>
      <param name="count">O número de nós a ser obtido da matriz.</param>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="array" /> é <see langword="null" />.</exception>
      <exception cref="T:System.ArgumentOutOfRangeException">
        <paramref name="offset" /> tem comprimento &lt; 0 ou &gt; <paramref name="array" />.

- ou -

<paramref name="count" /> é &lt; 0 ou &gt; <paramref name="array" /> de tamanho menos <paramref name="offset" />.</exception>
    </member>
    <member name="M:System.Xml.XmlDictionaryWriter.WriteAttributeString(System.String,System.Xml.XmlDictionaryString,System.Xml.XmlDictionaryString,System.String)">
      <summary>Grava um nome qualificado e valor do atributo.</summary>
      <param name="prefix">O prefixo do atributo.</param>
      <param name="localName">O nome local do atributo.</param>
      <param name="namespaceUri">O URI do namespace do atributo.</param>
      <param name="value">O atributo.</param>
    </member>
    <member name="M:System.Xml.XmlDictionaryWriter.WriteAttributeString(System.Xml.XmlDictionaryString,System.Xml.XmlDictionaryString,System.String)">
      <summary>Grava um nome qualificado e valor do atributo.</summary>
      <param name="localName">O nome local do atributo.</param>
      <param name="namespaceUri">O URI do namespace do atributo.</param>
      <param name="value">O atributo.</param>
    </member>
    <member name="M:System.Xml.XmlDictionaryWriter.WriteBase64Async(System.Byte[],System.Int32,System.Int32)">
      <summary>Codifica de forma assíncrona os bytes binários especificados como Base64 e grava o texto resultante.</summary>
      <param name="buffer">Matriz de bytes a ser codificada.</param>
      <param name="index">A posição no buffer que indica o início dos bytes a serem gravados.</param>
      <param name="count">O número de bytes a serem gravados.</param>
      <exception cref="T:System.InvalidOperationException">Um método <see cref="T:System.Xml.XmlDictionaryWriter" /> foi chamado antes do término de uma operação assíncrona anterior. Nesse caso, <see cref="T:System.InvalidOperationException" /> será gerado com a mensagem “Uma operação assíncrona já está em andamento”.

- ou -

Um método assíncrono <see cref="T:System.Xml.XmlDictionaryWriter" /> foi chamado sem definir o sinalizador <see cref="P:System.Xml.XmlWriterSettings.Async" /> como <see langword="true" />. Nesse caso, <see cref="T:System.InvalidOperationException" /> será gerado com a mensagem “Defina XmlWriterSettings.Async como verdadeiro se desejar usar Métodos Assíncronos”.</exception>
      <returns>Uma tarefa que representa a operação <see langword="WriteBase64" /> assíncrona.</returns>
    </member>
    <member name="M:System.Xml.XmlDictionaryWriter.WriteElementString(System.String,System.Xml.XmlDictionaryString,System.Xml.XmlDictionaryString,System.String)">
      <summary>Grava um elemento com um conteúdo de texto.</summary>
      <param name="prefix">O prefixo do elemento.</param>
      <param name="localName">O nome local do elemento.</param>
      <param name="namespaceUri">O URI do namespace do elemento.</param>
      <param name="value">O conteúdo do elemento.</param>
    </member>
    <member name="M:System.Xml.XmlDictionaryWriter.WriteElementString(System.Xml.XmlDictionaryString,System.Xml.XmlDictionaryString,System.String)">
      <summary>Grava um elemento com um conteúdo de texto.</summary>
      <param name="localName">O nome local do elemento.</param>
      <param name="namespaceUri">O URI do namespace do elemento.</param>
      <param name="value">O conteúdo do elemento.</param>
    </member>
    <member name="M:System.Xml.XmlDictionaryWriter.WriteNode(System.Xml.XmlDictionaryReader,System.Boolean)">
      <summary>Grava o nó XML atual de um <see cref="T:System.Xml.XmlDictionaryReader" />.</summary>
      <param name="reader">O <see cref="T:System.Xml.XmlDictionaryReader" />.</param>
      <param name="defattr">
        <see langword="true" /> para copiar os atributos padrão do <see langword="XmlReader" />; caso contrário, <see langword="false" />.</param>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="reader" /> é <see langword="null" />.</exception>
    </member>
    <member name="M:System.Xml.XmlDictionaryWriter.WriteNode(System.Xml.XmlReader,System.Boolean)">
      <summary>Grava o nó XML atual de um <see cref="T:System.Xml.XmlReader" />.</summary>
      <param name="reader">O <see cref="T:System.Xml.XmlReader" />.</param>
      <param name="defattr">
        <see langword="true" /> para copiar os atributos padrão do <see cref="T:System.Xml.XmlReader" />; caso contrário, <see langword="false" />.</param>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="reader" /> é <see langword="null" />.</exception>
    </member>
    <member name="M:System.Xml.XmlDictionaryWriter.WriteQualifiedName(System.Xml.XmlDictionaryString,System.Xml.XmlDictionaryString)">
      <summary>Grava o nome qualificado do namespace. Este método pesquisa o prefixo que está no escopo para o namespace fornecido.</summary>
      <param name="localName">O nome local do nome qualificado.</param>
      <param name="namespaceUri">O URI do namespace do nome qualificado.</param>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="localName" /> é <see langword="null" />.</exception>
    </member>
    <member name="M:System.Xml.XmlDictionaryWriter.WriteStartAttribute(System.String,System.Xml.XmlDictionaryString,System.Xml.XmlDictionaryString)">
      <summary>Grava o início de um atributo com o prefixo especificado, o nome local e o URI do namespace.</summary>
      <param name="prefix">O prefixo de namespace.</param>
      <param name="localName">O nome local do atributo.</param>
      <param name="namespaceUri">O URI do namespace do atributo.</param>
    </member>
    <member name="M:System.Xml.XmlDictionaryWriter.WriteStartAttribute(System.Xml.XmlDictionaryString,System.Xml.XmlDictionaryString)">
      <summary>Grava o início de um atributo com o nome local especificado e o URI do namespace.</summary>
      <param name="localName">O nome local do atributo.</param>
      <param name="namespaceUri">O URI do namespace do atributo.</param>
    </member>
    <member name="M:System.Xml.XmlDictionaryWriter.WriteStartElement(System.String,System.Xml.XmlDictionaryString,System.Xml.XmlDictionaryString)">
      <summary>Grava a marca de início especificada e a associa ao prefixo e ao namespace determinados.</summary>
      <param name="prefix">O prefixo do elemento.</param>
      <param name="localName">O nome local do elemento.</param>
      <param name="namespaceUri">O URI do namespace do elemento.</param>
      <exception cref="T:System.InvalidOperationException">O gravador está fechado.</exception>
    </member>
    <member name="M:System.Xml.XmlDictionaryWriter.WriteStartElement(System.Xml.XmlDictionaryString,System.Xml.XmlDictionaryString)">
      <summary>Grava a marca de início especificada e a associa ao namespace fornecido.</summary>
      <param name="localName">O nome local do elemento.</param>
      <param name="namespaceUri">O URI do namespace do elemento.</param>
      <exception cref="T:System.InvalidOperationException">O gravador está fechado.</exception>
    </member>
    <member name="M:System.Xml.XmlDictionaryWriter.WriteString(System.Xml.XmlDictionaryString)">
      <summary>Grava o conteúdo de texto especificado.</summary>
      <param name="value">O texto a gravação.</param>
    </member>
    <member name="M:System.Xml.XmlDictionaryWriter.WriteTextNode(System.Xml.XmlDictionaryReader,System.Boolean)">
      <summary>Grava o nó de texto no qual um <see cref="T:System.Xml.XmlDictionaryReader" /> está posicionado no momento.</summary>
      <param name="reader">O <see cref="T:System.Xml.XmlDictionaryReader" /> do qual obter o valor de texto.</param>
      <param name="isAttribute">
        <see langword="true" /> para indicar que o leitor está posicionado em um valor de atributo ou conteúdo de elemento; caso contrário, <see langword="false" />.</param>
    </member>
    <member name="M:System.Xml.XmlDictionaryWriter.WriteValue(System.Guid)">
      <summary>Grava um valor <see cref="T:System.Guid" />.</summary>
      <param name="value">O valor <see cref="T:System.Guid" /> a ser gravado.</param>
    </member>
    <member name="M:System.Xml.XmlDictionaryWriter.WriteValue(System.TimeSpan)">
      <summary>Grava um valor <see cref="T:System.TimeSpan" />.</summary>
      <param name="value">O valor <see cref="T:System.TimeSpan" /> a ser gravado.</param>
    </member>
    <member name="M:System.Xml.XmlDictionaryWriter.WriteValue(System.Xml.IStreamProvider)">
      <summary>Grava um valor de um <see cref="T:System.Xml.IStreamProvider" />.</summary>
      <param name="value">O valor <see cref="T:System.Xml.IStreamProvider" /> a ser gravado.</param>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="value" /> é <see langword="null" />.</exception>
      <exception cref="T:System.Xml.XmlException">
        <paramref name="value" /> retorna um objeto de fluxo <see langword="null" />.</exception>
      <exception cref="T:System.InvalidOperationException">Um método <see cref="T:System.Xml.XmlDictionaryWriter" /> foi chamado antes do término de uma operação assíncrona anterior. Nesse caso, <see cref="T:System.InvalidOperationException" /> será gerado com a mensagem “Uma operação assíncrona já está em andamento”.</exception>
    </member>
    <member name="M:System.Xml.XmlDictionaryWriter.WriteValue(System.Xml.UniqueId)">
      <summary>Grava um valor de Id exclusiva.</summary>
      <param name="value">O valor de Id exclusiva para gravação.</param>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="value" /> é <see langword="null" />.</exception>
    </member>
    <member name="M:System.Xml.XmlDictionaryWriter.WriteValue(System.Xml.XmlDictionaryString)">
      <summary>Grava um valor <see cref="T:System.Xml.XmlDictionaryString" />.</summary>
      <param name="value">O valor <see cref="T:System.Xml.XmlDictionaryString" />.</param>
    </member>
    <member name="M:System.Xml.XmlDictionaryWriter.WriteValueAsync(System.Xml.IStreamProvider)">
      <summary>Grava de maneira assíncrona um valor de um <see cref="T:System.Xml.IStreamProvider" />.</summary>
      <param name="value">O valor <see cref="T:System.Xml.IStreamProvider" /> a ser gravado.</param>
      <exception cref="T:System.InvalidOperationException">Um método <see cref="T:System.Xml.XmlDictionaryWriter" /> foi chamado antes do término de uma operação assíncrona anterior. Nesse caso, <see cref="T:System.InvalidOperationException" /> será gerado com a mensagem “Uma operação assíncrona já está em andamento”.

- ou -

Um método assíncrono <see cref="T:System.Xml.XmlDictionaryWriter" /> foi chamado sem definir o sinalizador <see cref="P:System.Xml.XmlWriterSettings.Async" /> como <see langword="true" />. Nesse caso, <see cref="T:System.InvalidOperationException" /> será gerado com a mensagem “Defina XmlWriterSettings.Async como verdadeiro se desejar usar Métodos Assíncronos”.</exception>
      <returns>Uma tarefa que representa a operação <see langword="WriteValue" /> assíncrona.</returns>
    </member>
    <member name="M:System.Xml.XmlDictionaryWriter.WriteXmlAttribute(System.String,System.String)">
      <summary>Grava um atributo XML padrão no nó atual.</summary>
      <param name="localName">O nome local do atributo.</param>
      <param name="value">O valor do atributo.</param>
    </member>
    <member name="M:System.Xml.XmlDictionaryWriter.WriteXmlAttribute(System.Xml.XmlDictionaryString,System.Xml.XmlDictionaryString)">
      <summary>Grava um atributo XML no nó atual.</summary>
      <param name="localName">O nome local do atributo.</param>
      <param name="value">O valor do atributo.</param>
    </member>
    <member name="M:System.Xml.XmlDictionaryWriter.WriteXmlnsAttribute(System.String,System.String)">
      <summary>Grava um atributo de declaração de namespace.</summary>
      <param name="prefix">O prefixo associado ao namespace fornecido.</param>
      <param name="namespaceUri">O namespace ao qual o prefixo está associado.</param>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="namespaceUri" /> é <see langword="null" />.</exception>
    </member>
    <member name="M:System.Xml.XmlDictionaryWriter.WriteXmlnsAttribute(System.String,System.Xml.XmlDictionaryString)">
      <summary>Grava um atributo de declaração de namespace.</summary>
      <param name="prefix">O prefixo associado ao namespace fornecido.</param>
      <param name="namespaceUri">O namespace ao qual o prefixo está associado.</param>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="namespaceUri" /> é <see langword="null" />.</exception>
    </member>
    <member name="P:System.Xml.XmlDictionaryWriter.CanCanonicalize">
      <summary>Essa propriedade sempre retorna <see langword="false" />. Suas classes derivadas podem substituir para retornar <see langword="true" /> se elas dão suporte à canonização.</summary>
      <returns>
        <see langword="false" /> em todos os casos.</returns>
    </member>
  </members>
</doc>