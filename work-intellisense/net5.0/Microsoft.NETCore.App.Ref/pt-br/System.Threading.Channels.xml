<?xml version="1.0" encoding="utf-8"?>
<doc xmlns:vsli="https://github.com/sk-0520/vs-localized-intellisense/tree/master/schema/2024">
  <assembly>
    <name>System.Threading.Channels</name>
  </assembly>
  <members>
    <member name="T:System.Threading.Channels.BoundedChannelFullMode">
      <summary vsli:raw="Specifies the behavior to use when writing to a bounded channel that is already full.">Especifica o comportamento a ser usado ao gravar em um canal limitado que já esteja cheio.</summary>
    </member>
    <member name="F:System.Threading.Channels.BoundedChannelFullMode.DropNewest">
      <summary vsli:raw="Removes and ignores the newest item in the channel in order to make room for the item being written.">Remove e ignora o item mais recente no canal para liberar espaço para o item que está sendo gravado.</summary>
    </member>
    <member name="F:System.Threading.Channels.BoundedChannelFullMode.DropOldest">
      <summary vsli:raw="Removes and ignores the oldest item in the channel in order to make room for the item being written.">Remove e ignora o item mais antigo no canal para liberar espaço para o item que está sendo gravado.</summary>
    </member>
    <member name="F:System.Threading.Channels.BoundedChannelFullMode.DropWrite">
      <summary vsli:raw="Drops the item being written.">Remove o item que está sendo gravado.</summary>
    </member>
    <member name="F:System.Threading.Channels.BoundedChannelFullMode.Wait">
      <summary vsli:raw="Waits for space to be available in order to complete the write operation.">Aguarda até que espaço esteja disponível para concluir a operação de gravação.</summary>
    </member>
    <member name="T:System.Threading.Channels.BoundedChannelOptions">
      <summary vsli:raw="Provides options that control the behavior of bounded &lt;see cref=&quot;T:System.Threading.Channels.Channel`1&quot; /&gt; instances.">Fornece opções que controlam o comportamento das instâncias <see cref="T:System.Threading.Channels.Channel`1" /> limitadas.</summary>
    </member>
    <member name="M:System.Threading.Channels.BoundedChannelOptions.#ctor(System.Int32)">
      <summary vsli:raw="Initializes the options.">Inicializa as opções.</summary>
      <param name="capacity" vsli:raw="The maximum number of items the bounded channel may store.">O número máximo de itens que o canal limitado pode armazenar.</param>
    </member>
    <member name="P:System.Threading.Channels.BoundedChannelOptions.Capacity">
      <summary vsli:raw="Gets or sets the maximum number of items the bounded channel may store.">Obtém ou define o número máximo de itens que o canal limitado pode armazenar.</summary>
    </member>
    <member name="P:System.Threading.Channels.BoundedChannelOptions.FullMode">
      <summary vsli:raw="Gets or sets the behavior incurred by write operations when the channel is full.">Obtém ou define o comportamento incorrido por operações de gravação quando o canal está cheio.</summary>
    </member>
    <member name="T:System.Threading.Channels.Channel">
      <summary vsli:raw="Provides static methods for creating channels.">Fornece métodos estáticos para criar canais.</summary>
    </member>
    <member name="M:System.Threading.Channels.Channel.CreateBounded``1(System.Int32)">
      <summary vsli:raw="Creates a channel with the specified maximum capacity.">Cria um canal com a capacidade máxima especificada.</summary>
      <param name="capacity" vsli:raw="The maximum number of items the channel may store.">O número máximo de itens que o canal pode armazenar.</param>
      <typeparam name="T" vsli:raw="Specifies the type of data in the channel.">Especifica o tipo de dados no canal.</typeparam>
      <returns vsli:raw="The created channel.">O canal criado.</returns>
    </member>
    <member name="M:System.Threading.Channels.Channel.CreateBounded``1(System.Threading.Channels.BoundedChannelOptions)">
      <summary vsli:raw="Creates a channel with the specified maximum capacity.">Cria um canal com a capacidade máxima especificada.</summary>
      <param name="options" vsli:raw="Options that guide the behavior of the channel.">Opções que orientam o comportamento do canal.</param>
      <typeparam name="T" vsli:raw="Specifies the type of data in the channel.">Especifica o tipo de dados no canal.</typeparam>
      <returns vsli:raw="The created channel.">O canal criado.</returns>
    </member>
    <member name="M:System.Threading.Channels.Channel.CreateUnbounded``1">
      <summary vsli:raw="Creates an unbounded channel usable by any number of readers and writers concurrently.">Cria um canal sem limites utilizável por qualquer número de leitores e gravadores simultaneamente.</summary>
      <typeparam name="T" vsli:raw="The type of data in the channel.">O tipo de dados no canal.</typeparam>
      <returns vsli:raw="The created channel.">O canal criado.</returns>
    </member>
    <member name="M:System.Threading.Channels.Channel.CreateUnbounded``1(System.Threading.Channels.UnboundedChannelOptions)">
      <summary vsli:raw="Creates an unbounded channel subject to the provided options.">Cria um canal sem limites sujeito às opções fornecidas.</summary>
      <param name="options" vsli:raw="Options that guide the behavior of the channel.">Opções que orientam o comportamento do canal.</param>
      <typeparam name="T" vsli:raw="Specifies the type of data in the channel.">Especifica o tipo de dados no canal.</typeparam>
      <returns vsli:raw="The created channel.">O canal criado.</returns>
    </member>
    <member name="T:System.Threading.Channels.Channel`1">
      <summary vsli:raw="Provides a base class for channels that support reading and writing elements of type &lt;typeparamref name=&quot;T&quot; /&gt;.">Fornece uma classe raiz para canais que dão suporte à leitura e gravação de elementos do tipo <typeparamref name="T" />.</summary>
      <typeparam name="T" vsli:raw="Specifies the type of data readable and writable in the channel.">Especifica o tipo de dados legíveis e graváveis no canal.</typeparam>
    </member>
    <member name="M:System.Threading.Channels.Channel`1.#ctor">
      <summary vsli:raw="Initializes an instance of the &lt;see cref=&quot;T:System.Threading.Channels.Channel`1&quot; /&gt; class.">Inicializa uma instância da classe <see cref="T:System.Threading.Channels.Channel`1" />.</summary>
    </member>
    <member name="T:System.Threading.Channels.Channel`2">
      <summary vsli:raw="Provides a base class for channels that support reading elements of type &lt;typeparamref name=&quot;TRead&quot; /&gt; and writing elements of type &lt;typeparamref name=&quot;TWrite&quot; /&gt;.">Fornece uma classe base para canais que dão suporte à leitura de elementos do tipo <typeparamref name="TRead" /> e a gravação de elementos do tipo <typeparamref name="TWrite" />.</summary>
      <typeparam name="TWrite" vsli:raw="Specifies the type of data that may be written to the channel.">Especifica o tipo de dados que podem ser gravados no canal.</typeparam>
      <typeparam name="TRead" vsli:raw="Specifies the type of data that may be read from the channel.">Especifica o tipo de dados que podem ser lidos do canal.</typeparam>
    </member>
    <member name="M:System.Threading.Channels.Channel`2.#ctor">
      <summary vsli:raw="Initializes an instance of the &lt;see cref=&quot;T:System.Threading.Channels.Channel`2&quot; /&gt; class.">Inicializa uma instância da classe <see cref="T:System.Threading.Channels.Channel`2" />.</summary>
    </member>
    <member name="M:System.Threading.Channels.Channel`2.op_Implicit(System.Threading.Channels.Channel{`0,`1})~System.Threading.Channels.ChannelReader{`1}">
      <summary vsli:raw="Implicit cast from a &lt;see cref=&quot;T:System.Threading.Channels.Channel`2&quot; /&gt; to its readable half.">Conversão implícita de um <see cref="T:System.Threading.Channels.Channel`2" /> em sua metade legível.</summary>
      <param name="channel" vsli:raw="The &lt;see cref=&quot;T:System.Threading.Channels.Channel`2&quot; /&gt; being cast.">O <see cref="T:System.Threading.Channels.Channel`2" /> que está sendo convertido.</param>
      <returns vsli:raw="The readable half.">A metade legível.</returns>
    </member>
    <member name="M:System.Threading.Channels.Channel`2.op_Implicit(System.Threading.Channels.Channel{`0,`1})~System.Threading.Channels.ChannelWriter{`0}">
      <summary vsli:raw="Implicit cast from a &lt;see cref=&quot;T:System.Threading.Channels.Channel`2&quot; /&gt; to its writable half.">Conversão implícita de um <see cref="T:System.Threading.Channels.Channel`2" /> em sua metade gravável.</summary>
      <param name="channel" vsli:raw="The &lt;see cref=&quot;T:System.Threading.Channels.Channel`2&quot; /&gt; being cast.">O <see cref="T:System.Threading.Channels.Channel`2" /> que está sendo convertido.</param>
      <returns vsli:raw="The writable half.">A metade gravável.</returns>
    </member>
    <member name="P:System.Threading.Channels.Channel`2.Reader">
      <summary vsli:raw="Gets the readable half of this channel.">Obtém a metade legível do canal.</summary>
    </member>
    <member name="P:System.Threading.Channels.Channel`2.Writer">
      <summary vsli:raw="Gets the writable half of this channel.">Obtém a metade gravável do canal.</summary>
    </member>
    <member name="T:System.Threading.Channels.ChannelClosedException">
      <summary vsli:raw="Exception thrown when a channel is used after it's been closed.">A exceção gerada quando um canal é usado após ser fechado.</summary>
    </member>
    <member name="M:System.Threading.Channels.ChannelClosedException.#ctor">
      <summary vsli:raw="Initializes a new instance of the &lt;see cref=&quot;T:System.Threading.Channels.ChannelClosedException&quot; /&gt; class.">Inicializa uma nova instância da classe <see cref="T:System.Threading.Channels.ChannelClosedException" />.</summary>
    </member>
    <member name="M:System.Threading.Channels.ChannelClosedException.#ctor(System.Exception)">
      <summary vsli:raw="Initializes a new instance of the &lt;see cref=&quot;T:System.Threading.Channels.ChannelClosedException&quot; /&gt; class.">Inicializa uma nova instância da classe <see cref="T:System.Threading.Channels.ChannelClosedException" />.</summary>
      <param name="innerException" vsli:raw="The exception that is the cause of this exception.">A exceção que é a causa desta exceção.</param>
    </member>
    <member name="M:System.Threading.Channels.ChannelClosedException.#ctor(System.Runtime.Serialization.SerializationInfo,System.Runtime.Serialization.StreamingContext)">
      <summary vsli:raw="Initializes a new instance of the &lt;see cref=&quot;T:System.Threading.Channels.ChannelClosedException&quot; /&gt; class with serialized data.">Inicializa uma nova instância da classe <see cref="T:System.Threading.Channels.ChannelClosedException" /> com dados serializados.</summary>
      <param name="info" vsli:raw="The object that holds the serialized object data.">O objeto que mantém os dados de objeto serializados.</param>
      <param name="context" vsli:raw="The contextual information about the source or destination.">As informações contextuais sobre a origem ou o destino.</param>
    </member>
    <member name="M:System.Threading.Channels.ChannelClosedException.#ctor(System.String)">
      <summary vsli:raw="Initializes a new instance of the &lt;see cref=&quot;T:System.Threading.Channels.ChannelClosedException&quot; /&gt; class.">Inicializa uma nova instância da classe <see cref="T:System.Threading.Channels.ChannelClosedException" />.</summary>
      <param name="message" vsli:raw="The message that describes the error.">A mensagem que descreve o erro.</param>
    </member>
    <member name="M:System.Threading.Channels.ChannelClosedException.#ctor(System.String,System.Exception)">
      <summary vsli:raw="Initializes a new instance of the &lt;see cref=&quot;T:System.Threading.Channels.ChannelClosedException&quot; /&gt; class.">Inicializa uma nova instância da classe <see cref="T:System.Threading.Channels.ChannelClosedException" />.</summary>
      <param name="message" vsli:raw="The message that describes the error.">A mensagem que descreve o erro.</param>
      <param name="innerException" vsli:raw="The exception that is the cause of this exception.">A exceção que é a causa desta exceção.</param>
    </member>
    <member name="T:System.Threading.Channels.ChannelOptions">
      <summary vsli:raw="Provides options that control the behavior of channel instances.">Fornece opções que controlam o comportamento das instâncias do canal.</summary>
    </member>
    <member name="M:System.Threading.Channels.ChannelOptions.#ctor">
      <summary vsli:raw="Initializes an instance of the &lt;see cref=&quot;T:System.Threading.Channels.ChannelOptions&quot; /&gt; class.">Inicializa uma instância da classe <see cref="T:System.Threading.Channels.ChannelOptions" />.</summary>
    </member>
    <member name="P:System.Threading.Channels.ChannelOptions.AllowSynchronousContinuations">
      <summary vsli:raw="&lt;see langword=&quot;true&quot; /&gt; if operations performed on a channel may synchronously invoke continuations subscribed to&#xA;            notifications of pending async operations; &lt;see langword=&quot;false&quot; /&gt; if all continuations should be invoked asynchronously.">
        <see langword="true" /> se as operações executadas em um canal puderem invocar, de forma síncrona, continuações assinadas para notificações de operações assíncronas pendentes. <see langword="false" /> se todas as continuações devem ser invocadas de forma assíncrona.</summary>
    </member>
    <member name="P:System.Threading.Channels.ChannelOptions.SingleReader">
      <summary vsli:raw="&lt;see langword=&quot;true&quot; /&gt; readers from the channel guarantee that there will only ever be at most one read operation at a time;&#xA;            &lt;see langword=&quot;false&quot; /&gt; if no such constraint is guaranteed.">
        <see langword="true" /> os leitores do canal garantem que sempre haverá no máximo uma operação de leitura por vez. <see langword="false" /> se tal restrição não for garantida.</summary>
    </member>
    <member name="P:System.Threading.Channels.ChannelOptions.SingleWriter">
      <summary vsli:raw="&lt;see langword=&quot;true&quot; /&gt; if writers to the channel guarantee that there will only ever be at most one write operation&#xA;            at a time; &lt;see langword=&quot;false&quot; /&gt; if no such constraint is guaranteed.">
        <see langword="true" /> os gravadores do canal garantem que sempre haverá no máximo uma operação de gravação por vez. <see langword="false" /> se tal restrição não for garantida.</summary>
    </member>
    <member name="T:System.Threading.Channels.ChannelReader`1">
      <summary vsli:raw="Provides a base class for reading from a channel.">Fornece uma classe base para leitura a partir de um canal.</summary>
      <typeparam name="T" vsli:raw="Specifies the type of data that may be read from the channel.">Especifica o tipo de dados que podem ser lidos do canal.</typeparam>
    </member>
    <member name="M:System.Threading.Channels.ChannelReader`1.#ctor">
      <summary vsli:raw="Initializes an instance of the &lt;see cref=&quot;T:System.Threading.Channels.ChannelReader`1&quot; /&gt; class.">Inicializa uma instância da classe <see cref="T:System.Threading.Channels.ChannelReader`1" />.</summary>
    </member>
    <member name="M:System.Threading.Channels.ChannelReader`1.ReadAllAsync(System.Threading.CancellationToken)">
      <summary vsli:raw="Creates an &lt;see cref=&quot;T:System.Collections.Generic.IAsyncEnumerable`1&quot; /&gt; that enables reading all of the data from the channel.">Cria um <see cref="T:System.Collections.Generic.IAsyncEnumerable`1" /> que habilita a leitura de todos os dados do canal.</summary>
      <param name="cancellationToken" vsli:raw="The cancellation token to use to cancel the enumeration. If data is immediately ready for reading, then that data may be yielded even after cancellation has been requested.">O token de cancelamento a ser usado para cancelar a enumeração.</param>
      <returns vsli:raw="The created async enumerable.">O enumerável assíncrono criado.</returns>
    </member>
    <member name="M:System.Threading.Channels.ChannelReader`1.ReadAsync(System.Threading.CancellationToken)">
      <summary vsli:raw="Asynchronously reads an item from the channel.">Lê assincronamente um item de um canal.</summary>
      <param name="cancellationToken" vsli:raw="A &lt;see cref=&quot;T:System.Threading.CancellationToken&quot; /&gt; used to cancel the read operation.">Um <see cref="T:System.Threading.CancellationToken" /> usado para cancelar a operação de leitura.</param>
      <returns vsli:raw="A &lt;see cref=&quot;T:System.Threading.Tasks.ValueTask`1&quot; /&gt; that represents the asynchronous read operation.">Um <see cref="T:System.Threading.Tasks.ValueTask`1" /> que representa a operação de leitura assíncrona.</returns>
    </member>
    <member name="M:System.Threading.Channels.ChannelReader`1.TryRead(`0@)">
      <summary vsli:raw="Attempts to read an item from the channel.">Tenta ler um item do canal.</summary>
      <param name="item" vsli:raw="The read item, or a default value if no item could be read.">O item de leitura, ou um valor padrão, se nenhum item puder ser lido.</param>
      <returns vsli:raw="&lt;see langword=&quot;true&quot; /&gt; if an item was read; otherwise, &lt;see langword=&quot;false&quot; /&gt;.">
        <see langword="true" /> se um item foi lido. Caso contrário, <see langword="false" />.</returns>
    </member>
    <member name="M:System.Threading.Channels.ChannelReader`1.WaitToReadAsync(System.Threading.CancellationToken)">
      <summary vsli:raw="Returns a &lt;see cref=&quot;T:System.Threading.Tasks.ValueTask`1&quot; /&gt; that will complete when data is available to read.">Retorna uma <see cref="T:System.Threading.Tasks.ValueTask`1" /> que será concluída quando os dados estiverem disponíveis para leitura.</summary>
      <param name="cancellationToken" vsli:raw="A &lt;see cref=&quot;T:System.Threading.CancellationToken&quot; /&gt; used to cancel the wait operation.">Um <see cref="T:System.Threading.CancellationToken" /> usado para cancelar a operação de espera.</param>
      <returns vsli:raw="&lt;para&gt;A &lt;see cref=&quot;T:System.Threading.Tasks.ValueTask`1&quot; /&gt; that will complete with a &lt;see langword=&quot;true&quot; /&gt; result when data is available to read&#xA;            or with a &lt;see langword=&quot;false&quot; /&gt; result when no further data will ever be available to be read due to the channel completing successfully.&lt;/para&gt;&lt;para&gt;If the channel completes with an exception, the task will also complete with an exception.&lt;/para&gt;">
        <para>Uma <see cref="T:System.Threading.Tasks.ValueTask`1" /> que será concluída com um resultado <see langword="true" /> quando os dados estiverem disponíveis para leitura ou com um resultado <see langword="false" /> quando nenhum outro dado estiver disponível para ser lido devido à conclusão bem-sucedida do canal.</para>
        <para>Se o canal for concluído com uma exceção, a tarefa também será concluída com uma exceção.</para>
      </returns>
    </member>
    <member name="P:System.Threading.Channels.ChannelReader`1.CanCount">
      <summary vsli:raw="Gets a value that indicates whether &lt;see cref=&quot;P:System.Threading.Channels.ChannelReader`1.Count&quot; /&gt; is available for use on this &lt;see cref=&quot;T:System.Threading.Channels.ChannelReader`1&quot; /&gt; instance.">Obtém um valor que indica se <see cref="P:System.Threading.Channels.ChannelReader`1.Count" /> está disponível para uso nessa instância <see cref="T:System.Threading.Channels.ChannelReader`1" />.</summary>
    </member>
    <member name="P:System.Threading.Channels.ChannelReader`1.Completion">
      <summary vsli:raw="Gets a &lt;see cref=&quot;T:System.Threading.Tasks.Task&quot; /&gt; that completes when no more data will ever&#xA;            be available to be read from this channel.">Obtém uma <see cref="T:System.Threading.Tasks.Task" /> que será concluída quando não houverem mais dados disponíveis para serem lidos neste canal.</summary>
    </member>
    <member name="P:System.Threading.Channels.ChannelReader`1.Count">
      <summary vsli:raw="Gets the current number of items available from this channel reader.">Obtém o número atual de itens disponíveis neste leitor de canal.</summary>
      <exception cref="T:System.NotSupportedException" vsli:raw="Counting is not supported on this instance.">Não há suporte para a contagem nesta instância.</exception>
    </member>
    <member name="T:System.Threading.Channels.ChannelWriter`1">
      <summary vsli:raw="Provides a base class for writing to a channel.">Fornece uma classe base para gravação em um canal.</summary>
      <typeparam name="T" vsli:raw="Specifies the type of data that may be written to the channel.">Especifica o tipo de dados que podem ser gravados no canal.</typeparam>
    </member>
    <member name="M:System.Threading.Channels.ChannelWriter`1.#ctor">
      <summary vsli:raw="Initializes an instance of the &lt;see cref=&quot;T:System.Threading.Channels.ChannelWriter`1&quot; /&gt; class.">Inicializa uma instância da classe <see cref="T:System.Threading.Channels.ChannelWriter`1" />.</summary>
    </member>
    <member name="M:System.Threading.Channels.ChannelWriter`1.Complete(System.Exception)">
      <summary vsli:raw="Mark the channel as being complete, meaning no more items will be written to it.">Marca o canal como concluído, ou seja, que nenhum outro item será gravado nele.</summary>
      <param name="error" vsli:raw="Optional Exception indicating a failure that's causing the channel to complete.">A Exceção opcional indicando uma falha que está fazendo com que o canal seja concluído.</param>
      <exception cref="T:System.InvalidOperationException" vsli:raw="The channel has already been marked as complete.">O canal já foi marcado como concluído.</exception>
    </member>
    <member name="M:System.Threading.Channels.ChannelWriter`1.TryComplete(System.Exception)">
      <summary vsli:raw="Attempts to mark the channel as being completed, meaning no more data will be written to it.">Tenta marcar o canal como concluído, ou seja, mais nenhum outro dado será gravado nele.</summary>
      <param name="error" vsli:raw="An &lt;see cref=&quot;T:System.Exception&quot; /&gt; indicating the failure causing no more data to be written, or null for success.">Uma <see cref="T:System.Exception" /> indicando a falha que faz com que mais nenhum dado seja gravado, ou nulo para sucesso.</param>
      <returns vsli:raw="&lt;see langword=&quot;true&quot; /&gt; if this operation successfully completes the channel; otherwise, &lt;see langword=&quot;false&quot; /&gt; if the channel could not be marked for completion,&#xA;            for example due to having already been marked as such, or due to not supporting completion.&#xA;          .">
        <see langword="true" /> se esta operação concluir o canal com sucesso. Caso contrário, <see langword="false" /> se o canal não puder ser marcado para conclusão, por exemplo, devido a já ter sido marcado como tal ou por não oferecer suporte à conclusão.
.</returns>
    </member>
    <member name="M:System.Threading.Channels.ChannelWriter`1.TryWrite(`0)">
      <summary vsli:raw="Attempts to write the specified item to the channel.">Tenta gravar o item especificado no canal.</summary>
      <param name="item" vsli:raw="The item to write.">O item a ser gravado.</param>
      <returns vsli:raw="&lt;see langword=&quot;true&quot; /&gt; if the item was written; otherwise, &lt;see langword=&quot;false&quot; /&gt;.">
        <see langword="true" /> se o item foi gravado. Caso contrário, <see langword="false" />.</returns>
    </member>
    <member name="M:System.Threading.Channels.ChannelWriter`1.WaitToWriteAsync(System.Threading.CancellationToken)">
      <summary vsli:raw="Returns a &lt;see cref=&quot;T:System.Threading.Tasks.ValueTask`1&quot; /&gt; that will complete when space is available to write an item.">Retorna uma <see cref="T:System.Threading.Tasks.ValueTask`1" /> que será concluída quando houver espaço disponível para gravar um item.</summary>
      <param name="cancellationToken" vsli:raw="A &lt;see cref=&quot;T:System.Threading.CancellationToken&quot; /&gt; used to cancel the wait operation.">Um <see cref="T:System.Threading.CancellationToken" /> usado para cancelar a operação de espera.</param>
      <returns vsli:raw="A &lt;see cref=&quot;T:System.Threading.Tasks.ValueTask`1&quot; /&gt; that will complete with a &lt;see langword=&quot;true&quot; /&gt; result when space is available to write an item&#xA;            or with a &lt;see langword=&quot;false&quot; /&gt; result when no further writing will be permitted.">Uma <see cref="T:System.Threading.Tasks.ValueTask`1" /> que será concluída com um resultado <see langword="true" /> quando os dados estiverem disponíveis para gravar um item ou com um resultado <see langword="false" /> quando nenhuma outra gravação for permitida.</returns>
    </member>
    <member name="M:System.Threading.Channels.ChannelWriter`1.WriteAsync(`0,System.Threading.CancellationToken)">
      <summary vsli:raw="Asynchronously writes an item to the channel.">Grava assincronamente um item para um canal.</summary>
      <param name="item" vsli:raw="The value to write to the channel.">O valor a ser gravado no canal.</param>
      <param name="cancellationToken" vsli:raw="A &lt;see cref=&quot;T:System.Threading.CancellationToken&quot; /&gt; used to cancel the write operation.">Um <see cref="T:System.Threading.CancellationToken" /> usado para cancelar a operação de gravação.</param>
      <returns vsli:raw="A &lt;see cref=&quot;T:System.Threading.Tasks.ValueTask&quot; /&gt; that represents the asynchronous write operation.">Uma <see cref="T:System.Threading.Tasks.ValueTask" /> que representa a operação de gravação assíncrona.</returns>
    </member>
    <member name="T:System.Threading.Channels.UnboundedChannelOptions">
      <summary vsli:raw="Provides options that control the behavior of unbounded &lt;see cref=&quot;T:System.Threading.Channels.Channel`1&quot; /&gt; instances.">Fornece opções que controlam o comportamento das instâncias <see cref="T:System.Threading.Channels.Channel`1" /> ilimitadas.</summary>
    </member>
    <member name="M:System.Threading.Channels.UnboundedChannelOptions.#ctor">
      <summary vsli:raw="Initializes a new instance of the &lt;see cref=&quot;T:System.Threading.Channels.UnboundedChannelOptions&quot; /&gt; class.">Inicializa uma nova instância da classe <see cref="T:System.Threading.Channels.UnboundedChannelOptions" />.</summary>
    </member>
  </members>
</doc>