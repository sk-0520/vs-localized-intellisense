<?xml version="1.0" encoding="utf-8"?>
<doc>
  <assembly>
    <name>System.ComponentModel.Annotations</name>
  </assembly>
  <members>
    <member name="T:System.ComponentModel.DataAnnotations.AssociatedMetadataTypeTypeDescriptionProvider">
      <summary>Estende as informações de metadados de uma classe adicionando informações de propriedade e atributos definidos em uma classe associada.</summary>
    </member>
    <member name="M:System.ComponentModel.DataAnnotations.AssociatedMetadataTypeTypeDescriptionProvider.#ctor(System.Type)">
      <summary>Inicializa uma nova instância da classe <see cref="T:System.ComponentModel.DataAnnotations.AssociatedMetadataTypeTypeDescriptionProvider" /> usando o tipo especificado.</summary>
      <param name="type">O tipo para o qual o provedor de metadados é criado.</param>
    </member>
    <member name="M:System.ComponentModel.DataAnnotations.AssociatedMetadataTypeTypeDescriptionProvider.#ctor(System.Type,System.Type)">
      <summary>Inicializa uma nova instância da classe <see cref="T:System.ComponentModel.DataAnnotations.AssociatedMetadataTypeTypeDescriptionProvider" /> usando o tipo de provedor de metadados especificado e o tipo associado.</summary>
      <param name="type">O tipo para o qual o provedor de metadados é criado.</param>
      <param name="associatedMetadataType">O tipo associado que contém os metadados.</param>
      <exception cref="T:System.ArgumentNullException">O valor de <paramref name="associatedMetadataType" /> é <see langword="null" />.</exception>
    </member>
    <member name="M:System.ComponentModel.DataAnnotations.AssociatedMetadataTypeTypeDescriptionProvider.GetTypeDescriptor(System.Type,System.Object)">
      <summary>Obtém um descritor de tipo para o tipo e o objeto especificados.</summary>
      <param name="objectType">O tipo de objeto para o qual recuperar o descritor de tipo.</param>
      <param name="instance">Uma instância do tipo.</param>
      <returns>O descritor que fornece metadados para o tipo.</returns>
    </member>
    <member name="T:System.ComponentModel.DataAnnotations.AssociationAttribute">
      <summary>Especifica que um membro de entidade representa uma relação de dados, como uma relação de chave estrangeira.</summary>
    </member>
    <member name="M:System.ComponentModel.DataAnnotations.AssociationAttribute.#ctor(System.String,System.String,System.String)">
      <summary>Inicializa uma nova instância da classe <see cref="T:System.ComponentModel.DataAnnotations.AssociationAttribute" />.</summary>
      <param name="name">O nome da associação.</param>
      <param name="thisKey">Uma lista separada por vírgulas dos nomes de propriedade dos valores de chave no lado <paramref name="thisKey" /> da associação.</param>
      <param name="otherKey">Uma lista separada por vírgulas dos nomes de propriedade dos valores de chave no lado <paramref name="otherKey" /> da associação.</param>
    </member>
    <member name="P:System.ComponentModel.DataAnnotations.AssociationAttribute.IsForeignKey">
      <summary>Obtém ou define um valor que indica se o membro da associação representa uma chave estrangeira.</summary>
      <returns>
        <see langword="true" /> se a associação representa uma chave estrangeira; caso contrário, <see langword="false" /> .</returns>
    </member>
    <member name="P:System.ComponentModel.DataAnnotations.AssociationAttribute.Name">
      <summary>Obtém nome da associação.</summary>
      <returns>O nome da associação.</returns>
    </member>
    <member name="P:System.ComponentModel.DataAnnotations.AssociationAttribute.OtherKey">
      <summary>Obtém os nomes de propriedade dos valores de chave no lado OtherKey da associação.</summary>
      <returns>Uma lista separada por vírgulas dos nomes de propriedade que representam os valores de chave no lado OtherKey da associação.</returns>
    </member>
    <member name="P:System.ComponentModel.DataAnnotations.AssociationAttribute.OtherKeyMembers">
      <summary>Obtém uma coleção de membros de chave individuais especificados na propriedade <see cref="P:System.ComponentModel.DataAnnotations.AssociationAttribute.OtherKey" />.</summary>
      <returns>Uma coleção de membros de chave individuais que são especificados na <see cref="P:System.ComponentModel.DataAnnotations.AssociationAttribute.OtherKey" /> propriedade.</returns>
    </member>
    <member name="P:System.ComponentModel.DataAnnotations.AssociationAttribute.ThisKey">
      <summary>Obtém os nomes de propriedade dos valores de chave no lado ThisKey da associação.</summary>
      <returns>Uma lista separada por vírgulas dos nomes de propriedade que representam os valores de chave no lado ThisKey da associação.</returns>
    </member>
    <member name="P:System.ComponentModel.DataAnnotations.AssociationAttribute.ThisKeyMembers">
      <summary>Obtém uma coleção de membros de chave individuais especificados na propriedade <see cref="P:System.ComponentModel.DataAnnotations.AssociationAttribute.ThisKey" />.</summary>
      <returns>Uma coleção de membros de chave individuais que são especificados na <see cref="P:System.ComponentModel.DataAnnotations.AssociationAttribute.ThisKey" /> propriedade.</returns>
    </member>
    <member name="T:System.ComponentModel.DataAnnotations.CompareAttribute">
      <summary>Fornece um atributo que compara duas propriedades.</summary>
    </member>
    <member name="M:System.ComponentModel.DataAnnotations.CompareAttribute.#ctor(System.String)">
      <summary>Inicializa uma nova instância da classe <see cref="T:System.ComponentModel.DataAnnotations.CompareAttribute" />.</summary>
      <param name="otherProperty">A propriedade a ser comparada com a propriedade atual.</param>
    </member>
    <member name="M:System.ComponentModel.DataAnnotations.CompareAttribute.FormatErrorMessage(System.String)">
      <summary>Aplica formatação a uma mensagem de erro com base no campo de dados em que ocorreu o erro.</summary>
      <param name="name">O nome do campo que causou a falha de validação.</param>
      <returns>A mensagem de erro formatada.</returns>
    </member>
    <member name="M:System.ComponentModel.DataAnnotations.CompareAttribute.IsValid(System.Object,System.ComponentModel.DataAnnotations.ValidationContext)">
      <summary>Determina se um objeto especificado é válido.</summary>
      <param name="value">O objeto a ser validado.</param>
      <param name="validationContext">Um objeto que contém informações sobre a solicitação de validação.</param>
      <returns>
        <see langword="true" /> se <paramref name="value" /> for válido; caso contrário, <see langword="false" />.</returns>
    </member>
    <member name="P:System.ComponentModel.DataAnnotations.CompareAttribute.OtherProperty">
      <summary>Obtém a propriedade a ser comparada com a propriedade atual.</summary>
      <returns>A outra propriedade.</returns>
    </member>
    <member name="P:System.ComponentModel.DataAnnotations.CompareAttribute.OtherPropertyDisplayName">
      <summary>Obtém o nome de exibição da outra propriedade.</summary>
      <returns>O nome de exibição da outra propriedade.</returns>
    </member>
    <member name="P:System.ComponentModel.DataAnnotations.CompareAttribute.RequiresValidationContext">
      <summary>Obtém ou define um valor que indica se o atributo requer contexto de validação.</summary>
      <returns>
        <see langword="true" /> se o atributo exigir um contexto de validação; caso contrário, <see langword="false" />.</returns>
    </member>
    <member name="T:System.ComponentModel.DataAnnotations.ConcurrencyCheckAttribute">
      <summary>Especifica que uma propriedade participa de verificações de simultaneidade otimista.</summary>
    </member>
    <member name="M:System.ComponentModel.DataAnnotations.ConcurrencyCheckAttribute.#ctor">
      <summary>Inicializa uma nova instância da classe <see cref="T:System.ComponentModel.DataAnnotations.ConcurrencyCheckAttribute" />.</summary>
    </member>
    <member name="T:System.ComponentModel.DataAnnotations.CreditCardAttribute">
      <summary>Especifica que o valor de um campo de dados é um número de cartão de crédito.</summary>
    </member>
    <member name="M:System.ComponentModel.DataAnnotations.CreditCardAttribute.#ctor">
      <summary>Inicializa uma nova instância da classe <see cref="T:System.ComponentModel.DataAnnotations.CreditCardAttribute" />.</summary>
    </member>
    <member name="M:System.ComponentModel.DataAnnotations.CreditCardAttribute.IsValid(System.Object)">
      <summary>Determina se o número de cartão de crédito especificado é válido.</summary>
      <param name="value">O valor a ser validado.</param>
      <returns>
        <see langword="true" /> se o número de cartão de crédito é válido; caso contrário, <see langword="false" />.</returns>
    </member>
    <member name="T:System.ComponentModel.DataAnnotations.CustomValidationAttribute">
      <summary>Especifica um método de validação personalizado que é usado para validar uma instância de classe ou propriedade.</summary>
    </member>
    <member name="M:System.ComponentModel.DataAnnotations.CustomValidationAttribute.#ctor(System.Type,System.String)">
      <summary>Inicializa uma nova instância da classe <see cref="T:System.ComponentModel.DataAnnotations.CustomValidationAttribute" />.</summary>
      <param name="validatorType">O tipo que contém o método que executa a validação personalizada.</param>
      <param name="method">O método que executa a validação personalizada.</param>
    </member>
    <member name="M:System.ComponentModel.DataAnnotations.CustomValidationAttribute.FormatErrorMessage(System.String)">
      <summary>Formata uma mensagem de erro de validação.</summary>
      <param name="name">O nome a ser incluído na mensagem formatada.</param>
      <exception cref="T:System.InvalidOperationException">O atributo atual está malformado.</exception>
      <returns>Uma instância da mensagem de erro formatada.</returns>
    </member>
    <member name="P:System.ComponentModel.DataAnnotations.CustomValidationAttribute.Method">
      <summary>Obtém o método de validação.</summary>
      <returns>O nome do método de validação.</returns>
    </member>
    <member name="P:System.ComponentModel.DataAnnotations.CustomValidationAttribute.ValidatorType">
      <summary>Obtém o tipo que executa a validação personalizada.</summary>
      <returns>O tipo que executa a validação personalizada.</returns>
    </member>
    <member name="T:System.ComponentModel.DataAnnotations.DataType">
      <summary>Representa uma enumeração dos tipos de dados associados com parâmetros e campos de dados.</summary>
    </member>
    <member name="F:System.ComponentModel.DataAnnotations.DataType.CreditCard">
      <summary>Representa um número de cartão de crédito.</summary>
    </member>
    <member name="F:System.ComponentModel.DataAnnotations.DataType.Currency">
      <summary>Representa um valor de moeda.</summary>
    </member>
    <member name="F:System.ComponentModel.DataAnnotations.DataType.Custom">
      <summary>Representa um tipo de dados personalizado.</summary>
    </member>
    <member name="F:System.ComponentModel.DataAnnotations.DataType.Date">
      <summary>Representa um valor de data.</summary>
    </member>
    <member name="F:System.ComponentModel.DataAnnotations.DataType.DateTime">
      <summary>Representa um momento no tempo, expresso como uma data e hora do dia.</summary>
    </member>
    <member name="F:System.ComponentModel.DataAnnotations.DataType.Duration">
      <summary>Representa um tempo contínuo durante o qual um objeto existe.</summary>
    </member>
    <member name="F:System.ComponentModel.DataAnnotations.DataType.EmailAddress">
      <summary>Representa um endereço de email.</summary>
    </member>
    <member name="F:System.ComponentModel.DataAnnotations.DataType.Html">
      <summary>Representa um arquivo HTML.</summary>
    </member>
    <member name="F:System.ComponentModel.DataAnnotations.DataType.ImageUrl">
      <summary>Representa uma URL para uma imagem.</summary>
    </member>
    <member name="F:System.ComponentModel.DataAnnotations.DataType.MultilineText">
      <summary>Representa texto de várias linhas.</summary>
    </member>
    <member name="F:System.ComponentModel.DataAnnotations.DataType.Password">
      <summary>Representa um valor de senha.</summary>
    </member>
    <member name="F:System.ComponentModel.DataAnnotations.DataType.PhoneNumber">
      <summary>Representa um valor de número de telefone.</summary>
    </member>
    <member name="F:System.ComponentModel.DataAnnotations.DataType.PostalCode">
      <summary>Representa um código postal.</summary>
    </member>
    <member name="F:System.ComponentModel.DataAnnotations.DataType.Text">
      <summary>Representa o texto que é exibido.</summary>
    </member>
    <member name="F:System.ComponentModel.DataAnnotations.DataType.Time">
      <summary>Representa um valor temporal.</summary>
    </member>
    <member name="F:System.ComponentModel.DataAnnotations.DataType.Upload">
      <summary>Representa o tipo de dados de upload de arquivo.</summary>
    </member>
    <member name="F:System.ComponentModel.DataAnnotations.DataType.Url">
      <summary>Representa um valor de URL.</summary>
    </member>
    <member name="T:System.ComponentModel.DataAnnotations.DataTypeAttribute">
      <summary>Especifica o nome de um tipo adicional a ser associado a um campo de dados.</summary>
    </member>
    <member name="M:System.ComponentModel.DataAnnotations.DataTypeAttribute.#ctor(System.ComponentModel.DataAnnotations.DataType)">
      <summary>Inicializa uma nova instância da classe <see cref="T:System.ComponentModel.DataAnnotations.DataTypeAttribute" /> usando o nome do tipo especificado.</summary>
      <param name="dataType">O nome do tipo a ser associado ao campo de dados.</param>
    </member>
    <member name="M:System.ComponentModel.DataAnnotations.DataTypeAttribute.#ctor(System.String)">
      <summary>Inicializa uma nova instância da classe <see cref="T:System.ComponentModel.DataAnnotations.DataTypeAttribute" /> usando o nome do modelo de campo especificado.</summary>
      <param name="customDataType">O nome do modelo de campo personalizado a ser associado ao campo de dados.</param>
      <exception cref="T:System.ArgumentException">
        <paramref name="customDataType" /> é <see langword="null" /> ou uma cadeia de caracteres vazia ("").</exception>
    </member>
    <member name="M:System.ComponentModel.DataAnnotations.DataTypeAttribute.GetDataTypeName">
      <summary>Retorna o nome do tipo associado ao campo de dados.</summary>
      <exception cref="T:System.InvalidOperationException">O atributo atual está malformado.</exception>
      <returns>O nome do tipo associado ao campo de dados.</returns>
    </member>
    <member name="M:System.ComponentModel.DataAnnotations.DataTypeAttribute.IsValid(System.Object)">
      <summary>Verifica se o valor do campo de dados é válido.</summary>
      <param name="value">O valor do campo de dados a ser validado.</param>
      <exception cref="T:System.InvalidOperationException">O atributo atual está malformado.</exception>
      <returns>
        <see langword="true" /> sempre.</returns>
    </member>
    <member name="P:System.ComponentModel.DataAnnotations.DataTypeAttribute.CustomDataType">
      <summary>Obtém o nome do modelo de campo personalizado que está associado com o campo de dados.</summary>
      <returns>O nome do modelo de campo personalizado que está associado com o campo de dados.</returns>
    </member>
    <member name="P:System.ComponentModel.DataAnnotations.DataTypeAttribute.DataType">
      <summary>Obtém o tipo associado ao campo de dados.</summary>
      <returns>Um dos valores de <see cref="T:System.ComponentModel.DataAnnotations.DataType" />.</returns>
    </member>
    <member name="P:System.ComponentModel.DataAnnotations.DataTypeAttribute.DisplayFormat">
      <summary>Obtém um formato de exibição do campo de dados.</summary>
      <returns>O formato de exibição do campo de dados.</returns>
    </member>
    <member name="T:System.ComponentModel.DataAnnotations.DisplayAttribute">
      <summary>Fornece um atributo de uso geral que permite especificar cadeias de caracteres localizáveis para tipos e membros de classes parciais de entidade.</summary>
    </member>
    <member name="M:System.ComponentModel.DataAnnotations.DisplayAttribute.#ctor">
      <summary>Inicializa uma nova instância da classe <see cref="T:System.ComponentModel.DataAnnotations.DisplayAttribute" />.</summary>
    </member>
    <member name="M:System.ComponentModel.DataAnnotations.DisplayAttribute.GetAutoGenerateField">
      <summary>Retorna o valor da propriedade <see cref="P:System.ComponentModel.DataAnnotations.DisplayAttribute.AutoGenerateField" />.</summary>
      <returns>O valor de <see cref="P:System.ComponentModel.DataAnnotations.DisplayAttribute.AutoGenerateField" /> se a propriedade tiver sido iniciada, caso contrário, <see langword="null" />.</returns>
    </member>
    <member name="M:System.ComponentModel.DataAnnotations.DisplayAttribute.GetAutoGenerateFilter">
      <summary>Retorna um valor que indica se a interface do usuário deve ser gerada automaticamente para exibir a filtragem para esse campo.</summary>
      <returns>O valor de <see cref="P:System.ComponentModel.DataAnnotations.DisplayAttribute.AutoGenerateFilter" /> se a propriedade tiver sido iniciada, caso contrário, <see langword="null" />.</returns>
    </member>
    <member name="M:System.ComponentModel.DataAnnotations.DisplayAttribute.GetDescription">
      <summary>Retorna o valor da propriedade <see cref="P:System.ComponentModel.DataAnnotations.DisplayAttribute.Description" />.</summary>
      <exception cref="T:System.InvalidOperationException">As propriedades <see cref="P:System.ComponentModel.DataAnnotations.DisplayAttribute.ResourceType" /> e <see cref="P:System.ComponentModel.DataAnnotations.DisplayAttribute.Description" /> são inicializadas, mas não foi possível encontrar uma propriedade estática pública com um nome que corresponda ao valor <see cref="P:System.ComponentModel.DataAnnotations.DisplayAttribute.Description" /> para a propriedade <see cref="P:System.ComponentModel.DataAnnotations.DisplayAttribute.ResourceType" />.</exception>
      <returns>O localizada descrição, se o <see cref="P:System.ComponentModel.DataAnnotations.DisplayAttribute.ResourceType" /> foi especificado e a propriedade <see cref="P:System.ComponentModel.DataAnnotations.DisplayAttribute.Description" /> representa uma chave de recurso; caso contrário, o valor não localizado da propriedade <see cref="P:System.ComponentModel.DataAnnotations.DisplayAttribute.Description" />.</returns>
    </member>
    <member name="M:System.ComponentModel.DataAnnotations.DisplayAttribute.GetGroupName">
      <summary>Retorna o valor da propriedade <see cref="P:System.ComponentModel.DataAnnotations.DisplayAttribute.GroupName" />.</summary>
      <exception cref="T:System.InvalidOperationException">A propriedade <see cref="P:System.ComponentModel.DataAnnotations.DisplayAttribute.ResourceType" /> e as propriedades <see cref="P:System.ComponentModel.DataAnnotations.DisplayAttribute.GroupName" /> foram definidas, mas uma propriedade estática pública com um nome que corresponde ao valor <see cref="P:System.ComponentModel.DataAnnotations.DisplayAttribute.GroupName" /> não pôde ser encontrada no <see cref="P:System.ComponentModel.DataAnnotations.DisplayAttribute.ResourceType" />.</exception>
      <returns>Um valor que será usado para agrupar campos na interface do usuário, se <see cref="P:System.ComponentModel.DataAnnotations.DisplayAttribute.GroupName" /> tiver sido inicializado, caso contrário, <see langword="null" />. Se a propriedade <see cref="P:System.ComponentModel.DataAnnotations.DisplayAttribute.ResourceType" /> tiver sido especificada e a propriedade <see cref="P:System.ComponentModel.DataAnnotations.DisplayAttribute.GroupName" /> representar uma chave de recurso, uma cadeia de caracteres localizada será retornada, caso contrário, uma cadeia de caracteres não localizada será retornada.</returns>
    </member>
    <member name="M:System.ComponentModel.DataAnnotations.DisplayAttribute.GetName">
      <summary>Retorna um valor usado para exibição de campo na interface do usuário.</summary>
      <exception cref="T:System.InvalidOperationException">As propriedades <see cref="P:System.ComponentModel.DataAnnotations.DisplayAttribute.ResourceType" /> e <see cref="P:System.ComponentModel.DataAnnotations.DisplayAttribute.Name" /> são inicializadas, mas não foi possível encontrar uma propriedade estática pública com um nome que corresponda ao valor <see cref="P:System.ComponentModel.DataAnnotations.DisplayAttribute.Name" /> para a propriedade <see cref="P:System.ComponentModel.DataAnnotations.DisplayAttribute.ResourceType" />.</exception>
      <returns>A cadeia de caracteres localizada da propriedade <see cref="P:System.ComponentModel.DataAnnotations.DisplayAttribute.Name" />, se a propriedade <see cref="P:System.ComponentModel.DataAnnotations.DisplayAttribute.ResourceType" /> tiver sido especificada e a propriedade <see cref="P:System.ComponentModel.DataAnnotations.DisplayAttribute.Name" /> representar uma chave de recurso. Caso contrário, o valor não localizado da propriedade <see cref="P:System.ComponentModel.DataAnnotations.DisplayAttribute.Name" />.</returns>
    </member>
    <member name="M:System.ComponentModel.DataAnnotations.DisplayAttribute.GetOrder">
      <summary>Retorna o valor da propriedade <see cref="P:System.ComponentModel.DataAnnotations.DisplayAttribute.Order" />.</summary>
      <returns>O valor da propriedade <see cref="P:System.ComponentModel.DataAnnotations.DisplayAttribute.Order" /> se ela tiver sido definida, caso contrário, <see langword="null" />.</returns>
    </member>
    <member name="M:System.ComponentModel.DataAnnotations.DisplayAttribute.GetPrompt">
      <summary>Retorna o valor da propriedade <see cref="P:System.ComponentModel.DataAnnotations.DisplayAttribute.Prompt" />.</summary>
      <exception cref="T:System.InvalidOperationException">A propriedade <see cref="P:System.ComponentModel.DataAnnotations.DisplayAttribute.ResourceType" /> e as propriedades <see cref="P:System.ComponentModel.DataAnnotations.DisplayAttribute.Prompt" /> foram definidas, mas uma propriedade estática pública com um nome que corresponde ao valor <see cref="P:System.ComponentModel.DataAnnotations.DisplayAttribute.Prompt" /> não pôde ser encontrada no <see cref="P:System.ComponentModel.DataAnnotations.DisplayAttribute.ResourceType" />.</exception>
      <returns>A cadeia de caracteres localizada da propriedade <see cref="P:System.ComponentModel.DataAnnotations.DisplayAttribute.Prompt" />, se a propriedade <see cref="P:System.ComponentModel.DataAnnotations.DisplayAttribute.ResourceType" /> tiver sido especificada e a propriedade <see cref="P:System.ComponentModel.DataAnnotations.DisplayAttribute.Prompt" /> representar uma chave de recurso. Caso contrário, o valor não localizado da propriedade <see cref="P:System.ComponentModel.DataAnnotations.DisplayAttribute.Prompt" />.</returns>
    </member>
    <member name="M:System.ComponentModel.DataAnnotations.DisplayAttribute.GetShortName">
      <summary>Retorna o valor da propriedade <see cref="P:System.ComponentModel.DataAnnotations.DisplayAttribute.ShortName" />.</summary>
      <exception cref="T:System.InvalidOperationException">A propriedade <see cref="P:System.ComponentModel.DataAnnotations.DisplayAttribute.ResourceType" /> e as propriedades <see cref="P:System.ComponentModel.DataAnnotations.DisplayAttribute.ShortName" /> foram definidas, mas uma propriedade estática pública com um nome que corresponde ao valor <see cref="P:System.ComponentModel.DataAnnotations.DisplayAttribute.ShortName" /> não pôde ser encontrada no <see cref="P:System.ComponentModel.DataAnnotations.DisplayAttribute.ResourceType" />.</exception>
      <returns>Obtém a cadeia de caracteres localizada da propriedade <see cref="P:System.ComponentModel.DataAnnotations.DisplayAttribute.ShortName" />, se a propriedade <see cref="P:System.ComponentModel.DataAnnotations.DisplayAttribute.ResourceType" /> tiver sido especificada e a propriedade <see cref="P:System.ComponentModel.DataAnnotations.DisplayAttribute.ShortName" /> representar uma chave de recurso. Caso contrário, o valor não localizado da propriedade de valor <see cref="P:System.ComponentModel.DataAnnotations.DisplayAttribute.ShortName" />.</returns>
    </member>
    <member name="P:System.ComponentModel.DataAnnotations.DisplayAttribute.AutoGenerateField">
      <summary>Obtém ou define um valor que indica se a interface do usuário deve ser gerada automaticamente para exibir esse campo.</summary>
      <exception cref="T:System.InvalidOperationException">Foi feita uma tentativa de obter o valor da propriedade antes de ela ser definida.</exception>
      <returns>
        <see langword="true" /> se a interface do usuário deve ser gerada automaticamente para exibir esse campo; caso contrário, <see langword="false" />.</returns>
    </member>
    <member name="P:System.ComponentModel.DataAnnotations.DisplayAttribute.AutoGenerateFilter">
      <summary>Obtém ou define um valor que indica se a interface do usuário de filtragem é exibida automaticamente para esse campo.</summary>
      <exception cref="T:System.InvalidOperationException">Foi feita uma tentativa de obter o valor da propriedade antes de ela ser definida.</exception>
      <returns>
        <see langword="true" /> se a interface do usuário deve ser gerada automaticamente para exibir a filtragem para esse campo; caso contrário, <see langword="false" />.</returns>
    </member>
    <member name="P:System.ComponentModel.DataAnnotations.DisplayAttribute.Description">
      <summary>Obtém ou define um valor usado para exibir uma descrição na interface do usuário.</summary>
      <returns>Um valor usado para exibir uma descrição na interface do usuário.</returns>
    </member>
    <member name="P:System.ComponentModel.DataAnnotations.DisplayAttribute.GroupName">
      <summary>Obtém ou define um valor usado para agrupar campos na interface do usuário.</summary>
      <returns>Um valor usado para agrupar campos na interface do usuário.</returns>
    </member>
    <member name="P:System.ComponentModel.DataAnnotations.DisplayAttribute.Name">
      <summary>Obtém ou define um valor usado para exibição na interface do usuário.</summary>
      <returns>Um valor usado para exibição na interface do usuário.</returns>
    </member>
    <member name="P:System.ComponentModel.DataAnnotations.DisplayAttribute.Order">
      <summary>Obtém ou define o peso da ordem da coluna.</summary>
      <exception cref="T:System.InvalidOperationException">O getter dessa propriedade foi invocado, mas seu valor não foi definido explicitamente usando o setter.</exception>
      <returns>O peso da ordem da coluna.</returns>
    </member>
    <member name="P:System.ComponentModel.DataAnnotations.DisplayAttribute.Prompt">
      <summary>Obtém ou define um valor que será usado para definir a marca-d'água para solicitações na interface do usuário.</summary>
      <returns>Um valor que será usado para exibir uma marca-d'água na interface do usuário.</returns>
    </member>
    <member name="P:System.ComponentModel.DataAnnotations.DisplayAttribute.ResourceType">
      <summary>Obtém ou define o tipo que contém os recursos para as propriedades <see cref="P:System.ComponentModel.DataAnnotations.DisplayAttribute.ShortName" />, <see cref="P:System.ComponentModel.DataAnnotations.DisplayAttribute.Name" />, <see cref="P:System.ComponentModel.DataAnnotations.DisplayAttribute.Prompt" /> e <see cref="P:System.ComponentModel.DataAnnotations.DisplayAttribute.Description" />.</summary>
      <returns>O tipo de recurso que contém as propriedades <see cref="P:System.ComponentModel.DataAnnotations.DisplayAttribute.ShortName" />, <see cref="P:System.ComponentModel.DataAnnotations.DisplayAttribute.Name" />, <see cref="P:System.ComponentModel.DataAnnotations.DisplayAttribute.Prompt" /> e <see cref="P:System.ComponentModel.DataAnnotations.DisplayAttribute.Description" />.</returns>
    </member>
    <member name="P:System.ComponentModel.DataAnnotations.DisplayAttribute.ShortName">
      <summary>Obtém ou define um valor que é usado para o rótulo de coluna de grade.</summary>
      <returns>Um valor que é para o rótulo de coluna de grade.</returns>
    </member>
    <member name="T:System.ComponentModel.DataAnnotations.DisplayColumnAttribute">
      <summary>Especifica a coluna que é exibida na tabela referida como uma coluna de chave estrangeira.</summary>
    </member>
    <member name="M:System.ComponentModel.DataAnnotations.DisplayColumnAttribute.#ctor(System.String)">
      <summary>Inicializa uma nova instância da classe <see cref="T:System.ComponentModel.DataAnnotations.DisplayColumnAttribute" />, usando a coluna especificada.</summary>
      <param name="displayColumn">O nome da coluna a ser usada como a coluna de exibição.</param>
    </member>
    <member name="M:System.ComponentModel.DataAnnotations.DisplayColumnAttribute.#ctor(System.String,System.String)">
      <summary>Inicializa uma nova instância da classe <see cref="T:System.ComponentModel.DataAnnotations.DisplayColumnAttribute" /> usando as colunas de classificação e de exibição especificadas.</summary>
      <param name="displayColumn">O nome da coluna a ser usada como a coluna de exibição.</param>
      <param name="sortColumn">O nome da coluna a ser usada para classificação.</param>
    </member>
    <member name="M:System.ComponentModel.DataAnnotations.DisplayColumnAttribute.#ctor(System.String,System.String,System.Boolean)">
      <summary>Inicializa uma nova instância da classe <see cref="T:System.ComponentModel.DataAnnotations.DisplayColumnAttribute" /> usando a coluna de exibição, a coluna de classificação e a ordem de classificação especificadas.</summary>
      <param name="displayColumn">O nome da coluna a ser usada como a coluna de exibição.</param>
      <param name="sortColumn">O nome da coluna a ser usada para classificação.</param>
      <param name="sortDescending">
        <see langword="true" /> para classificar em ordem decrescente, caso contrário, <see langword="false" />. O padrão é <see langword="false" />.</param>
    </member>
    <member name="P:System.ComponentModel.DataAnnotations.DisplayColumnAttribute.DisplayColumn">
      <summary>Obtém o nome da coluna a ser usado como o campo de exibição.</summary>
      <returns>O nome da coluna de exibição.</returns>
    </member>
    <member name="P:System.ComponentModel.DataAnnotations.DisplayColumnAttribute.SortColumn">
      <summary>Obtém o nome da coluna a ser usada para classificação.</summary>
      <returns>O nome da coluna de classificação.</returns>
    </member>
    <member name="P:System.ComponentModel.DataAnnotations.DisplayColumnAttribute.SortDescending">
      <summary>Obtém um valor que indica se deve classificar em ordem crescente ou decrescente.</summary>
      <returns>
        <see langword="true" /> se a coluna for classificada em ordem decrescente; caso contrário, <see langword="false" /> .</returns>
    </member>
    <member name="T:System.ComponentModel.DataAnnotations.DisplayFormatAttribute">
      <summary>Especifica como os campos de dados são exibidos e formatados por Dados Dinâmicos do ASP.NET.</summary>
    </member>
    <member name="M:System.ComponentModel.DataAnnotations.DisplayFormatAttribute.#ctor">
      <summary>Inicializa uma nova instância da classe <see cref="T:System.ComponentModel.DataAnnotations.DisplayFormatAttribute" />.</summary>
    </member>
    <member name="M:System.ComponentModel.DataAnnotations.DisplayFormatAttribute.GetNullDisplayText">
      <summary>Retorna a cadeia de caracteres de exibição da interface do usuário para <see cref="P:System.ComponentModel.DataAnnotations.DisplayFormatAttribute.NullDisplayText" />.</summary>
      <exception cref="T:System.InvalidOperationException">As propriedades <see cref="P:System.ComponentModel.DataAnnotations.DisplayFormatAttribute.NullDisplayTextResourceType" /> e <see cref="P:System.ComponentModel.DataAnnotations.DisplayFormatAttribute.NullDisplayText" /> estão definidas, mas uma propriedade estática pública com um nome que corresponde ao valor <see cref="P:System.ComponentModel.DataAnnotations.DisplayFormatAttribute.NullDisplayText" /> não pode ser encontrada no <see cref="P:System.ComponentModel.DataAnnotations.DisplayFormatAttribute.NullDisplayTextResourceType" />.</exception>
      <returns>
        <para>A cadeia de caracteres de exibição da interface do usuário.</para>
        <para>Se <see cref="P:System.ComponentModel.DataAnnotations.DisplayFormatAttribute.NullDisplayTextResourceType" /> não foi especificado, é retornado o valor de <see cref="P:System.ComponentModel.DataAnnotations.DisplayFormatAttribute.NullDisplayText" />.</para>
        <para>Se <see cref="P:System.ComponentModel.DataAnnotations.DisplayFormatAttribute.NullDisplayTextResourceType" /> foi especificado e <see cref="P:System.ComponentModel.DataAnnotations.DisplayFormatAttribute.NullDisplayText" /> representa uma chave de recurso dentro desse tipo de recurso, o valor localizado é retornado.</para>
        <para>Se <see cref="P:System.ComponentModel.DataAnnotations.DisplayFormatAttribute.NullDisplayText" /> e <see cref="P:System.ComponentModel.DataAnnotations.DisplayFormatAttribute.NullDisplayTextResourceType" /> não foram definidos, retorna <see langword="null" />.</para>
      </returns>
    </member>
    <member name="P:System.ComponentModel.DataAnnotations.DisplayFormatAttribute.ApplyFormatInEditMode">
      <summary>Obtém ou define um valor que indica se a cadeia de caracteres de formatação especificada pela propriedade <see cref="P:System.ComponentModel.DataAnnotations.DisplayFormatAttribute.DataFormatString" /> é aplicada ao valor do campo quando o campo de dados está no modo de edição.</summary>
      <returns>
        <see langword="true" /> se a cadeia de caracteres de formatação aplica-se ao valor no campo no modo de edição; caso contrário, <see langword="false" />. O padrão é <see langword="false" />.</returns>
    </member>
    <member name="P:System.ComponentModel.DataAnnotations.DisplayFormatAttribute.ConvertEmptyStringToNull">
      <summary>Obtém ou define um valor que indica se os valores de cadeia de caracteres vazia ("") são convertidos automaticamente em <see langword="null" /> quando o campo de dados é atualizado na fonte de dados.</summary>
      <returns>
        <see langword="true" /> se os valores de cadeia de caracteres vazia forem convertidos automaticamente para <see langword="null" />; caso contrário, <see langword="false" />. O padrão é <see langword="true" />.</returns>
    </member>
    <member name="P:System.ComponentModel.DataAnnotations.DisplayFormatAttribute.DataFormatString">
      <summary>Obtém ou define o formato de exibição do valor do campo.</summary>
      <returns>Uma cadeia de formatação que especifica o formato de exibição para o valor do campo de dados. O padrão é uma cadeia de caracteres vazia (""), o que indica que nenhuma formatação especial é aplicada ao valor do campo.</returns>
    </member>
    <member name="P:System.ComponentModel.DataAnnotations.DisplayFormatAttribute.HtmlEncode">
      <summary>Obtém ou define um valor que indica se o campo deve ser codificado em HTML.</summary>
      <returns>
        <see langword="true" /> se o campo deve ser codificado em HTML; caso contrário, <see langword="false" />.</returns>
    </member>
    <member name="P:System.ComponentModel.DataAnnotations.DisplayFormatAttribute.NullDisplayText">
      <summary>Obtém ou define o texto exibido em um campo quando o valor do campo é <see langword="null" />.</summary>
      <returns>O texto exibido para um campo quando o valor do campo é <see langword="null" />. O padrão é uma cadeia de caracteres vazia (""), que indica que essa propriedade não está definida.</returns>
    </member>
    <member name="P:System.ComponentModel.DataAnnotations.DisplayFormatAttribute.NullDisplayTextResourceType">
      <summary>Obtém ou define o <see cref="T:System.Type" /> que contém os recursos para <see cref="P:System.ComponentModel.DataAnnotations.DisplayFormatAttribute.NullDisplayText" />.
        
Usando o <see cref="P:System.ComponentModel.DataAnnotations.DisplayFormatAttribute.NullDisplayTextResourceType" /> junto com <see cref="P:System.ComponentModel.DataAnnotations.DisplayFormatAttribute.NullDisplayText" />, permite que o método <see cref="M:System.ComponentModel.DataAnnotations.DisplayFormatAttribute.GetNullDisplayText" /> retorne valores localizados.</summary>
    </member>
    <member name="T:System.ComponentModel.DataAnnotations.EditableAttribute">
      <summary>Indica se um campo de dados é editável.</summary>
    </member>
    <member name="M:System.ComponentModel.DataAnnotations.EditableAttribute.#ctor(System.Boolean)">
      <summary>Inicializa uma nova instância da classe <see cref="T:System.ComponentModel.DataAnnotations.EditableAttribute" />.</summary>
      <param name="allowEdit">
        <see langword="true" /> para especificar que o campo é editável, caso contrário, <see langword="false" />.</param>
    </member>
    <member name="P:System.ComponentModel.DataAnnotations.EditableAttribute.AllowEdit">
      <summary>Obtém um valor que indica se o campo é editável.</summary>
      <returns>
        <see langword="true" /> Se o campo for editável; caso contrário, <see langword="false" /> .</returns>
    </member>
    <member name="P:System.ComponentModel.DataAnnotations.EditableAttribute.AllowInitialValue">
      <summary>Obtém ou define um valor que indica se o valor inicial está habilitado.</summary>
      <returns>
        <see langword="true" /> se um valor inicial estiver habilitado; caso contrário, <see langword="false" /> .</returns>
    </member>
    <member name="T:System.ComponentModel.DataAnnotations.EmailAddressAttribute">
      <summary>Valida um endereço de email.</summary>
    </member>
    <member name="M:System.ComponentModel.DataAnnotations.EmailAddressAttribute.#ctor">
      <summary>Inicializa uma nova instância da classe <see cref="T:System.ComponentModel.DataAnnotations.EmailAddressAttribute" />.</summary>
    </member>
    <member name="M:System.ComponentModel.DataAnnotations.EmailAddressAttribute.IsValid(System.Object)">
      <summary>Determina se o valor especificado corresponde ao padrão de um endereço de email válido.</summary>
      <param name="value">O valor a ser validado.</param>
      <returns>
        <see langword="true" /> se o valor especificado for válido ou <see langword="null" />. Caso contrário, <see langword="false" />.</returns>
    </member>
    <member name="T:System.ComponentModel.DataAnnotations.EnumDataTypeAttribute">
      <summary>Habilita uma enumeração do .NET Framework a ser mapeada para uma coluna de dados.</summary>
    </member>
    <member name="M:System.ComponentModel.DataAnnotations.EnumDataTypeAttribute.#ctor(System.Type)">
      <summary>Inicializa uma nova instância da classe <see cref="T:System.ComponentModel.DataAnnotations.EnumDataTypeAttribute" />.</summary>
      <param name="enumType">O tipo da enumeração.</param>
    </member>
    <member name="M:System.ComponentModel.DataAnnotations.EnumDataTypeAttribute.IsValid(System.Object)">
      <summary>Verifica se o valor do campo de dados é válido.</summary>
      <param name="value">O valor do campo de dados a ser validado.</param>
      <returns>
        <see langword="true" /> se o valor de campo de dados for válido; caso contrário, <see langword="false" />.</returns>
    </member>
    <member name="P:System.ComponentModel.DataAnnotations.EnumDataTypeAttribute.EnumType">
      <summary>Obtém ou define o tipo de enumeração.</summary>
      <returns>O tipo da enumeração.</returns>
    </member>
    <member name="T:System.ComponentModel.DataAnnotations.FileExtensionsAttribute">
      <summary>Valida as extensões de nome de arquivo.</summary>
    </member>
    <member name="M:System.ComponentModel.DataAnnotations.FileExtensionsAttribute.#ctor">
      <summary>Inicializa uma nova instância da classe <see cref="T:System.ComponentModel.DataAnnotations.FileExtensionsAttribute" />.</summary>
    </member>
    <member name="M:System.ComponentModel.DataAnnotations.FileExtensionsAttribute.FormatErrorMessage(System.String)">
      <summary>Aplica formatação a uma mensagem de erro com base no campo de dados em que ocorreu o erro.</summary>
      <param name="name">O nome do campo que causou a falha de validação.</param>
      <returns>A mensagem de erro formatada.</returns>
    </member>
    <member name="M:System.ComponentModel.DataAnnotations.FileExtensionsAttribute.IsValid(System.Object)">
      <summary>Verifica se as extensões de nome de arquivo especificadas são válidas.</summary>
      <param name="value">Uma lista delimitada por vírgula de extensões de arquivo válidas.</param>
      <returns>
        <see langword="true" /> se a extensão de nome de arquivo for válida; caso contrário, <see langword="false" />.</returns>
    </member>
    <member name="P:System.ComponentModel.DataAnnotations.FileExtensionsAttribute.Extensions">
      <summary>Obtém ou define as extensões de nome de arquivo.</summary>
      <returns>As extensões de nome de arquivo ou as extensões de arquivo padrão (".png", ".jpg", ".jpeg" e ".gif") se a propriedade não for definida.</returns>
    </member>
    <member name="T:System.ComponentModel.DataAnnotations.FilterUIHintAttribute">
      <summary>Representa um atributo que é usado para especificar o comportamento de filtragem de uma coluna.</summary>
    </member>
    <member name="M:System.ComponentModel.DataAnnotations.FilterUIHintAttribute.#ctor(System.String)">
      <summary>Inicializa uma nova instância da classe <see cref="T:System.ComponentModel.DataAnnotations.FilterUIHintAttribute" /> usando a dica da interface do usuário do filtro.</summary>
      <param name="filterUIHint">O nome do controle a ser usado para filtragem.</param>
    </member>
    <member name="M:System.ComponentModel.DataAnnotations.FilterUIHintAttribute.#ctor(System.String,System.String)">
      <summary>Inicializa uma nova instância da classe <see cref="T:System.ComponentModel.DataAnnotations.FilterUIHintAttribute" /> usando a dica da interface do usuário do filtro e o nome da camada de apresentação.</summary>
      <param name="filterUIHint">O nome do controle a ser usado para filtragem.</param>
      <param name="presentationLayer">O nome da camada de apresentação que dá suporte a este controle.</param>
    </member>
    <member name="M:System.ComponentModel.DataAnnotations.FilterUIHintAttribute.#ctor(System.String,System.String,System.Object[])">
      <summary>Inicializa uma nova instância da classe <see cref="T:System.ComponentModel.DataAnnotations.FilterUIHintAttribute" /> usando a dica da interface do usuário do filtro, o nome da camada de apresentação e os parâmetros de controle.</summary>
      <param name="filterUIHint">O nome do controle a ser usado para filtragem.</param>
      <param name="presentationLayer">O nome da camada de apresentação que dá suporte a este controle.</param>
      <param name="controlParameters">A lista de parâmetros para o controle.</param>
    </member>
    <member name="M:System.ComponentModel.DataAnnotations.FilterUIHintAttribute.Equals(System.Object)">
      <summary>Retorna um valor que indica se essa instância do atributo é igual a um objeto especificado.</summary>
      <param name="obj">O objeto a ser comparado com essa instância de atributo.</param>
      <returns>
        <see langword="true" /> se o objeto passado for igual a esta instância de atributo, caso contrário, <see langword="false" />.</returns>
    </member>
    <member name="M:System.ComponentModel.DataAnnotations.FilterUIHintAttribute.GetHashCode">
      <summary>Retorna o código hash para esta instância do atributo.</summary>
      <returns>O código hash dessa instância de atributo.</returns>
    </member>
    <member name="P:System.ComponentModel.DataAnnotations.FilterUIHintAttribute.ControlParameters">
      <summary>Obtém os pares nome/valor que são usados como parâmetros no construtor do controle.</summary>
      <exception cref="T:System.InvalidOperationException">O atributo atual está malformado.</exception>
      <returns>Os pares de nome/valor que são usados como parâmetros no construtor do controle.</returns>
    </member>
    <member name="P:System.ComponentModel.DataAnnotations.FilterUIHintAttribute.FilterUIHint">
      <summary>Obtém o nome do controle a ser usado para filtragem.</summary>
      <returns>O nome do controle a ser usado para filtragem.</returns>
    </member>
    <member name="P:System.ComponentModel.DataAnnotations.FilterUIHintAttribute.PresentationLayer">
      <summary>Obtém o nome da camada de apresentação que dá suporte a este controle.</summary>
      <returns>O nome da camada de apresentação que dá suporte a este controle.</returns>
    </member>
    <member name="T:System.ComponentModel.DataAnnotations.IValidatableObject">
      <summary>Fornece uma maneira para que um objeto seja validado.</summary>
    </member>
    <member name="M:System.ComponentModel.DataAnnotations.IValidatableObject.Validate(System.ComponentModel.DataAnnotations.ValidationContext)">
      <summary>Determina se o objeto especificado é válido.</summary>
      <param name="validationContext">O contexto de validação.</param>
      <returns>Uma coleção que contém as informações de falha na validação.</returns>
    </member>
    <member name="T:System.ComponentModel.DataAnnotations.KeyAttribute">
      <summary>Indica que uma ou mais propriedades que identificam exclusivamente uma entidade.</summary>
    </member>
    <member name="M:System.ComponentModel.DataAnnotations.KeyAttribute.#ctor">
      <summary>Inicializa uma nova instância da classe <see cref="T:System.ComponentModel.DataAnnotations.KeyAttribute" />.</summary>
    </member>
    <member name="T:System.ComponentModel.DataAnnotations.MaxLengthAttribute">
      <summary>Especifica o comprimento máximo dos dados de cadeia de caracteres ou matriz permitido em uma propriedade.</summary>
    </member>
    <member name="M:System.ComponentModel.DataAnnotations.MaxLengthAttribute.#ctor">
      <summary>Inicializa uma nova instância da classe <see cref="T:System.ComponentModel.DataAnnotations.MaxLengthAttribute" />.</summary>
    </member>
    <member name="M:System.ComponentModel.DataAnnotations.MaxLengthAttribute.#ctor(System.Int32)">
      <summary>Inicializa uma nova instância da classe <see cref="T:System.ComponentModel.DataAnnotations.MaxLengthAttribute" />, com base no parâmetro <paramref name="length" />.</summary>
      <param name="length">O comprimento máximo permitido de dados de cadeia de caracteres ou matriz.</param>
    </member>
    <member name="M:System.ComponentModel.DataAnnotations.MaxLengthAttribute.FormatErrorMessage(System.String)">
      <summary>Aplica formatação a uma mensagem de erro especificada.</summary>
      <param name="name">O nome a ser incluído na cadeia de caracteres formatada.</param>
      <returns>Uma cadeia de caracteres localizada para descrever o comprimento máximo aceitável.</returns>
    </member>
    <member name="M:System.ComponentModel.DataAnnotations.MaxLengthAttribute.IsValid(System.Object)">
      <summary>Determina se um objeto especificado é válido.</summary>
      <param name="value">O objeto a ser validado.</param>
      <exception cref="T:System.InvalidOperationException">O comprimento é zero ou inferior a um negativo.</exception>
      <returns>
        <see langword="true" /> se o valor for nulo ou se o valor for menor ou igual ao comprimento máximo especificado; caso contrário, <see langword="false" />.</returns>
    </member>
    <member name="P:System.ComponentModel.DataAnnotations.MaxLengthAttribute.Length">
      <summary>Obtém o comprimento máximo permitido de dados de cadeia de caracteres ou matriz.</summary>
      <returns>O comprimento máximo permitido de dados de cadeia de caracteres ou matriz.</returns>
    </member>
    <member name="T:System.ComponentModel.DataAnnotations.MetadataTypeAttribute">
      <summary>Especifica a classe de metadados para associar a uma classe de modelo de dados.</summary>
    </member>
    <member name="M:System.ComponentModel.DataAnnotations.MetadataTypeAttribute.#ctor(System.Type)">
      <summary>Inicializa uma nova instância da classe <see cref="T:System.ComponentModel.DataAnnotations.MetadataTypeAttribute" />.</summary>
      <param name="metadataClassType">A classe de metadados a ser referenciada.</param>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="metadataClassType" /> é <see langword="null" />.</exception>
    </member>
    <member name="P:System.ComponentModel.DataAnnotations.MetadataTypeAttribute.MetadataClassType">
      <summary>Obtém a classe de metadados associada uma classe parcial de modelo de dados.</summary>
      <returns>O valor do tipo que representa a classe de metadados.</returns>
    </member>
    <member name="T:System.ComponentModel.DataAnnotations.MinLengthAttribute">
      <summary>Especifica o comprimento mínimo dos dados de cadeia de caracteres ou matriz permitido em uma propriedade.</summary>
    </member>
    <member name="M:System.ComponentModel.DataAnnotations.MinLengthAttribute.#ctor(System.Int32)">
      <summary>Inicializa uma nova instância da classe <see cref="T:System.ComponentModel.DataAnnotations.MinLengthAttribute" />.</summary>
      <param name="length">O comprimento dos dados de cadeia de caracteres ou matriz.</param>
    </member>
    <member name="M:System.ComponentModel.DataAnnotations.MinLengthAttribute.FormatErrorMessage(System.String)">
      <summary>Aplica formatação a uma mensagem de erro especificada.</summary>
      <param name="name">O nome a ser incluído na cadeia de caracteres formatada.</param>
      <returns>Uma cadeia de caracteres localizada para descrever o comprimento mínimo aceitável.</returns>
    </member>
    <member name="M:System.ComponentModel.DataAnnotations.MinLengthAttribute.IsValid(System.Object)">
      <summary>Determina se um objeto especificado é válido.</summary>
      <param name="value">O objeto a ser validado.</param>
      <exception cref="T:System.InvalidOperationException">O comprimento é menor que zero.</exception>
      <returns>
        <see langword="true" /> se o objeto especificado é válido; caso contrário, <see langword="false" />.</returns>
    </member>
    <member name="P:System.ComponentModel.DataAnnotations.MinLengthAttribute.Length">
      <summary>Obtém ou define o comprimento mínimo permitido de dados de cadeia de caracteres ou matriz.</summary>
      <returns>O comprimento mínimo permitido da matriz ou dos dados da cadeia de caracteres.</returns>
    </member>
    <member name="T:System.ComponentModel.DataAnnotations.PhoneAttribute">
      <summary>Especifica que o valor de um campo de dados é um número de telefone bem formado.</summary>
    </member>
    <member name="M:System.ComponentModel.DataAnnotations.PhoneAttribute.#ctor">
      <summary>Inicializa uma nova instância da classe <see cref="T:System.ComponentModel.DataAnnotations.PhoneAttribute" />.</summary>
    </member>
    <member name="M:System.ComponentModel.DataAnnotations.PhoneAttribute.IsValid(System.Object)">
      <summary>Determina se o número de telefone especificado está em um formato de número de telefone válido.</summary>
      <param name="value">O valor a ser validado.</param>
      <returns>
        <see langword="true" /> se o número de telefone é válido; caso contrário, <see langword="false" />.</returns>
    </member>
    <member name="T:System.ComponentModel.DataAnnotations.RangeAttribute">
      <summary>Especifica as restrições de intervalo numérico para o valor de um campo de dados.</summary>
    </member>
    <member name="M:System.ComponentModel.DataAnnotations.RangeAttribute.#ctor(System.Double,System.Double)">
      <summary>Inicializa uma nova instância da classe <see cref="T:System.ComponentModel.DataAnnotations.RangeAttribute" /> usando os valores mínimo e máximo especificados.</summary>
      <param name="minimum">Especifica o valor mínimo permitido para o valor do campo de dados.</param>
      <param name="maximum">Especifica o valor máximo permitido para o valor do campo de dados.</param>
    </member>
    <member name="M:System.ComponentModel.DataAnnotations.RangeAttribute.#ctor(System.Int32,System.Int32)">
      <summary>Inicializa uma nova instância da classe <see cref="T:System.ComponentModel.DataAnnotations.RangeAttribute" /> usando os valores mínimo e máximo especificados.</summary>
      <param name="minimum">Especifica o valor mínimo permitido para o valor do campo de dados.</param>
      <param name="maximum">Especifica o valor máximo permitido para o valor do campo de dados.</param>
    </member>
    <member name="M:System.ComponentModel.DataAnnotations.RangeAttribute.#ctor(System.Type,System.String,System.String)">
      <summary>Inicializa uma nova instância da classe <see cref="T:System.ComponentModel.DataAnnotations.RangeAttribute" /> usando os valores mínimo e máximo especificados e o tipo específico.</summary>
      <param name="type">Especifica o tipo do objeto a testar.</param>
      <param name="minimum">Especifica o valor mínimo permitido para o valor do campo de dados.</param>
      <param name="maximum">Especifica o valor máximo permitido para o valor do campo de dados.</param>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="type" /> é <see langword="null" />.</exception>
    </member>
    <member name="M:System.ComponentModel.DataAnnotations.RangeAttribute.FormatErrorMessage(System.String)">
      <summary>Formata a mensagem de erro é exibida quando há falha na validação de intervalo.</summary>
      <param name="name">O nome do campo que causou a falha de validação.</param>
      <exception cref="T:System.InvalidOperationException">O atributo atual está malformado.</exception>
      <returns>A mensagem de erro formatada.</returns>
    </member>
    <member name="M:System.ComponentModel.DataAnnotations.RangeAttribute.IsValid(System.Object)">
      <summary>Verifica se o valor do campo de dados está no intervalo especificado.</summary>
      <param name="value">O valor do campo de dados a ser validado.</param>
      <exception cref="T:System.ComponentModel.DataAnnotations.ValidationException">O valor do campo de dados estava fora do intervalo permitido.</exception>
      <exception cref="T:System.InvalidOperationException">O atributo atual está malformado.</exception>
      <returns>
        <see langword="true" /> se o valor especificado estiver no intervalo; caso contrário, <see langword="false" />.</returns>
    </member>
    <member name="P:System.ComponentModel.DataAnnotations.RangeAttribute.ConvertValueInInvariantCulture">
      <summary>Obtém ou define um valor que determina se as conversões do valor que está sendo validado para <see cref="P:System.ComponentModel.DataAnnotations.RangeAttribute.OperandType" /> conforme definido pelo parâmetro <c>type</c> do construtor <see cref="M:System.ComponentModel.DataAnnotations.RangeAttribute.#ctor(System.Type,System.String,System.String)" /> usam a cultura invariável ou a cultura atual.</summary>
      <returns>
        <see langword="true" /> para usar a cultura invariável para qualquer conversões; <see langword="false" /> para usar a cultura atual no momento da validação.</returns>
    </member>
    <member name="P:System.ComponentModel.DataAnnotations.RangeAttribute.Maximum">
      <summary>Obtém o valor mínimo permitido do campo.</summary>
      <returns>O valor máximo permitido para o campo de dados.</returns>
    </member>
    <member name="P:System.ComponentModel.DataAnnotations.RangeAttribute.Minimum">
      <summary>Obtém o valor mínimo do campo permitido.</summary>
      <returns>O valor mínimo permitido para o campo de dados.</returns>
    </member>
    <member name="P:System.ComponentModel.DataAnnotations.RangeAttribute.OperandType">
      <summary>Obtém o tipo do campo de dados cujo valor deve ser validado.</summary>
      <returns>O tipo do campo de dados cujo valor deve ser validado.</returns>
    </member>
    <member name="P:System.ComponentModel.DataAnnotations.RangeAttribute.ParseLimitsInInvariantCulture">
      <summary>Obtém ou define um valor que determina se os valores da cadeia de caracteres para <see cref="P:System.ComponentModel.DataAnnotations.RangeAttribute.Minimum" /> e <see cref="P:System.ComponentModel.DataAnnotations.RangeAttribute.Maximum" /> são analisados usando a cultura invariável, em vez da cultura atual.</summary>
    </member>
    <member name="T:System.ComponentModel.DataAnnotations.RegularExpressionAttribute">
      <summary>Especifica que o valor de um campo de dados no Dados Dinâmicos do ASP.NET deve corresponder à expressão regular especificada.</summary>
    </member>
    <member name="M:System.ComponentModel.DataAnnotations.RegularExpressionAttribute.#ctor(System.String)">
      <summary>Inicializa uma nova instância da classe <see cref="T:System.ComponentModel.DataAnnotations.RegularExpressionAttribute" />.</summary>
      <param name="pattern">A expressão regular que é usada para validar o valor do campo de dados.</param>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="pattern" /> é <see langword="null" />.</exception>
    </member>
    <member name="M:System.ComponentModel.DataAnnotations.RegularExpressionAttribute.FormatErrorMessage(System.String)">
      <summary>Formata a mensagem de erro para exibir se a expressão regular de validação falhar.</summary>
      <param name="name">O nome do campo que causou a falha de validação.</param>
      <exception cref="T:System.InvalidOperationException">O atributo atual está malformado.</exception>
      <exception cref="T:System.ArgumentException">O <see cref="P:System.ComponentModel.DataAnnotations.RegularExpressionAttribute.Pattern" /> não é uma expressão regular válida.</exception>
      <returns>A mensagem de erro formatada.</returns>
    </member>
    <member name="M:System.ComponentModel.DataAnnotations.RegularExpressionAttribute.IsValid(System.Object)">
      <summary>Verifica se o valor inserido pelo usuário corresponde ao padrão de expressão regular.</summary>
      <param name="value">O valor do campo de dados a ser validado.</param>
      <exception cref="T:System.ComponentModel.DataAnnotations.ValidationException">O valor do campo de dados não correspondeu ao padrão da expressão regular.</exception>
      <exception cref="T:System.InvalidOperationException">O atributo atual está malformado.</exception>
      <exception cref="T:System.ArgumentException">
        <see cref="P:System.ComponentModel.DataAnnotations.RegularExpressionAttribute.Pattern" /> não é uma expressão regular válida.</exception>
      <returns>
        <see langword="true" /> se a validação for bem-sucedida; caso contrário, <see langword="false" />.</returns>
    </member>
    <member name="P:System.ComponentModel.DataAnnotations.RegularExpressionAttribute.MatchTimeoutInMilliseconds">
      <summary>Obtém ou define a quantidade de tempo em milissegundos para executar uma única operação de correspondência antes que o tempo limite da operação seja atingido.</summary>
      <returns>A quantidade de tempo em milissegundos para executar uma única operação correspondente.</returns>
    </member>
    <member name="P:System.ComponentModel.DataAnnotations.RegularExpressionAttribute.Pattern">
      <summary>Obtém o padrão da expressão regular.</summary>
      <returns>O padrão a ser correspondido.</returns>
    </member>
    <member name="T:System.ComponentModel.DataAnnotations.RequiredAttribute">
      <summary>Especifica que o valor de um campo de dados é obrigatório.</summary>
    </member>
    <member name="M:System.ComponentModel.DataAnnotations.RequiredAttribute.#ctor">
      <summary>Inicializa uma nova instância da classe <see cref="T:System.ComponentModel.DataAnnotations.RequiredAttribute" />.</summary>
    </member>
    <member name="M:System.ComponentModel.DataAnnotations.RequiredAttribute.IsValid(System.Object)">
      <summary>Verifica se o valor do campo de dados necessário não está vazio.</summary>
      <param name="value">O valor do campo de dados a ser validado.</param>
      <exception cref="T:System.ComponentModel.DataAnnotations.ValidationException">O valor do campo de dados era <see langword="null" />.</exception>
      <returns>
        <see langword="true" /> se a validação for bem-sucedida; caso contrário, <see langword="false" />.</returns>
    </member>
    <member name="P:System.ComponentModel.DataAnnotations.RequiredAttribute.AllowEmptyStrings">
      <summary>Obtém ou define um valor que indica se uma cadeia de caracteres vazia é permitida.</summary>
      <returns>
        <see langword="true" /> se uma cadeia de caracteres vazia for permitida; caso contrário, <see langword="false" />. O valor padrão é <see langword="false" />.</returns>
    </member>
    <member name="T:System.ComponentModel.DataAnnotations.ScaffoldColumnAttribute">
      <summary>Especifica se uma coluna de dados ou classe usa scaffolding.</summary>
    </member>
    <member name="M:System.ComponentModel.DataAnnotations.ScaffoldColumnAttribute.#ctor(System.Boolean)">
      <summary>Inicializa uma nova instância de <see cref="T:System.ComponentModel.DataAnnotations.ScaffoldColumnAttribute" /> usando a propriedade <see cref="P:System.ComponentModel.DataAnnotations.ScaffoldColumnAttribute.Scaffold" />.</summary>
      <param name="scaffold">O valor que especifica se o scaffolding está habilitado.</param>
    </member>
    <member name="P:System.ComponentModel.DataAnnotations.ScaffoldColumnAttribute.Scaffold">
      <summary>Obtém ou define o valor que especifica se o scaffolding está habilitado.</summary>
      <returns>
        <see langword="true" /> se scaffolding estiver habilitado; caso contrário, <see langword="false" /> .</returns>
    </member>
    <member name="T:System.ComponentModel.DataAnnotations.Schema.ColumnAttribute">
      <summary>Representa a coluna de banco de dados para a qual uma propriedade é mapeada.</summary>
    </member>
    <member name="M:System.ComponentModel.DataAnnotations.Schema.ColumnAttribute.#ctor">
      <summary>Inicializa uma nova instância da classe <see cref="T:System.ComponentModel.DataAnnotations.Schema.ColumnAttribute" />.</summary>
    </member>
    <member name="M:System.ComponentModel.DataAnnotations.Schema.ColumnAttribute.#ctor(System.String)">
      <summary>Inicializa uma nova instância da classe <see cref="T:System.ComponentModel.DataAnnotations.Schema.ColumnAttribute" />.</summary>
      <param name="name">O nome da coluna para a qual a propriedade é mapeada.</param>
    </member>
    <member name="P:System.ComponentModel.DataAnnotations.Schema.ColumnAttribute.Name">
      <summary>O nome da coluna para a qual a propriedade é mapeada.</summary>
      <returns>O nome da coluna para a qual a propriedade é mapeada.</returns>
    </member>
    <member name="P:System.ComponentModel.DataAnnotations.Schema.ColumnAttribute.Order">
      <summary>Obtém ou define a ordem de base zero da coluna para a qual a propriedade é mapeada.</summary>
      <returns>A ordem da coluna.</returns>
    </member>
    <member name="P:System.ComponentModel.DataAnnotations.Schema.ColumnAttribute.TypeName">
      <summary>Obtém ou define o tipo de dados específico do provedor de banco de dados da coluna para qual a propriedade é mapeada.</summary>
      <returns>O tipo de dados específico do provedor de banco de dados da coluna para qual a propriedade é mapeada.</returns>
    </member>
    <member name="T:System.ComponentModel.DataAnnotations.Schema.ComplexTypeAttribute">
      <summary>Indica que a classe é um tipo complexo. Tipos complexos são propriedades não escalares de tipos de entidade que permitem que propriedades escalares sejam organizadas dentro das entidades. Tipos complexos têm chaves e não podem ser gerenciados pelo Entity Framework quando separados do objeto pai.</summary>
    </member>
    <member name="M:System.ComponentModel.DataAnnotations.Schema.ComplexTypeAttribute.#ctor">
      <summary>Inicializa uma nova instância da classe <see cref="T:System.ComponentModel.DataAnnotations.Schema.ComplexTypeAttribute" />.</summary>
    </member>
    <member name="T:System.ComponentModel.DataAnnotations.Schema.DatabaseGeneratedAttribute">
      <summary>Especifica como o banco de dados gera valores para uma propriedade.</summary>
    </member>
    <member name="M:System.ComponentModel.DataAnnotations.Schema.DatabaseGeneratedAttribute.#ctor(System.ComponentModel.DataAnnotations.Schema.DatabaseGeneratedOption)">
      <summary>Inicializa uma nova instância da classe <see cref="T:System.ComponentModel.DataAnnotations.Schema.DatabaseGeneratedAttribute" />.</summary>
      <param name="databaseGeneratedOption">A opção gerada no banco de dados.</param>
    </member>
    <member name="P:System.ComponentModel.DataAnnotations.Schema.DatabaseGeneratedAttribute.DatabaseGeneratedOption">
      <summary>Obtém ou define o padrão usado para gerar valores para a propriedade no banco de dados.</summary>
      <returns>A opção gerada no banco de dados.</returns>
    </member>
    <member name="T:System.ComponentModel.DataAnnotations.Schema.DatabaseGeneratedOption">
      <summary>Representa o padrão usado para gerar valores para uma propriedade no banco de dados.</summary>
    </member>
    <member name="F:System.ComponentModel.DataAnnotations.Schema.DatabaseGeneratedOption.Computed">
      <summary>O banco de dados gera um valor quando uma linha é inserida ou atualizada.</summary>
    </member>
    <member name="F:System.ComponentModel.DataAnnotations.Schema.DatabaseGeneratedOption.Identity">
      <summary>O banco de dados gera um valor quando uma linha é inserida.</summary>
    </member>
    <member name="F:System.ComponentModel.DataAnnotations.Schema.DatabaseGeneratedOption.None">
      <summary>O banco de dados não gera valores.</summary>
    </member>
    <member name="T:System.ComponentModel.DataAnnotations.Schema.ForeignKeyAttribute">
      <summary>Indica uma propriedade usada como uma chave estrangeira em uma relação.</summary>
    </member>
    <member name="M:System.ComponentModel.DataAnnotations.Schema.ForeignKeyAttribute.#ctor(System.String)">
      <summary>Inicializa uma nova instância da classe <see cref="T:System.ComponentModel.DataAnnotations.Schema.ForeignKeyAttribute" />.</summary>
      <param name="name">O nome da propriedade de navegação associada ou o nome de uma ou mais chaves estrangeiras associadas.</param>
    </member>
    <member name="P:System.ComponentModel.DataAnnotations.Schema.ForeignKeyAttribute.Name">
      <summary>Obtém o nome da propriedade de navegação associada ou das chaves estrangeiras associadas.</summary>
      <returns>O nome da propriedade de navegação associada ou das chaves estrangeiras associadas.</returns>
    </member>
    <member name="T:System.ComponentModel.DataAnnotations.Schema.InversePropertyAttribute">
      <summary>Especifica o inverso de uma propriedade de navegação que representa a outra extremidade da mesma relação.</summary>
    </member>
    <member name="M:System.ComponentModel.DataAnnotations.Schema.InversePropertyAttribute.#ctor(System.String)">
      <summary>Inicializa uma nova instância da classe <see cref="T:System.ComponentModel.DataAnnotations.Schema.InversePropertyAttribute" /> usando a propriedade especificada.</summary>
      <param name="property">A propriedade de navegação que representa a outra extremidade do mesmo relacionamento.</param>
    </member>
    <member name="P:System.ComponentModel.DataAnnotations.Schema.InversePropertyAttribute.Property">
      <summary>Obtém a propriedade de navegação que representa a outra extremidade do mesmo relacionamento.</summary>
      <returns>A propriedade do atributo.</returns>
    </member>
    <member name="T:System.ComponentModel.DataAnnotations.Schema.NotMappedAttribute">
      <summary>Indica que uma classe ou propriedade deve ser excluída do mapeamento de banco de dados.</summary>
    </member>
    <member name="M:System.ComponentModel.DataAnnotations.Schema.NotMappedAttribute.#ctor">
      <summary>Inicializa uma nova instância da classe <see cref="T:System.ComponentModel.DataAnnotations.Schema.NotMappedAttribute" />.</summary>
    </member>
    <member name="T:System.ComponentModel.DataAnnotations.Schema.TableAttribute">
      <summary>Especifica a tabela de banco de dados para o qual uma classe é mapeada.</summary>
    </member>
    <member name="M:System.ComponentModel.DataAnnotations.Schema.TableAttribute.#ctor(System.String)">
      <summary>Inicializa uma nova instância da classe <see cref="T:System.ComponentModel.DataAnnotations.Schema.TableAttribute" />, usando o nome especificado da tabela.</summary>
      <param name="name">O nome da tabela para qual a classe é mapeada.</param>
    </member>
    <member name="P:System.ComponentModel.DataAnnotations.Schema.TableAttribute.Name">
      <summary>Obtém o nome da tabela para qual a classe é mapeada.</summary>
      <returns>O nome da tabela para qual a classe é mapeada.</returns>
    </member>
    <member name="P:System.ComponentModel.DataAnnotations.Schema.TableAttribute.Schema">
      <summary>Obtém ou define o esquema da tabela para o qual a classe é mapeada.</summary>
      <returns>O esquema da tabela para a qual a classe é mapeada.</returns>
    </member>
    <member name="T:System.ComponentModel.DataAnnotations.StringLengthAttribute">
      <summary>Especifica o comprimento mínimo e máximo de caracteres permitidos em um campo de dados.</summary>
    </member>
    <member name="M:System.ComponentModel.DataAnnotations.StringLengthAttribute.#ctor(System.Int32)">
      <summary>Inicializa uma nova instância da classe <see cref="T:System.ComponentModel.DataAnnotations.StringLengthAttribute" /> usando um comprimento máximo especificado.</summary>
      <param name="maximumLength">O comprimento máximo de uma cadeia de caracteres.</param>
    </member>
    <member name="M:System.ComponentModel.DataAnnotations.StringLengthAttribute.FormatErrorMessage(System.String)">
      <summary>Aplica formatação a uma mensagem de erro especificada.</summary>
      <param name="name">O nome do campo que causou a falha de validação.</param>
      <exception cref="T:System.ArgumentOutOfRangeException">
        <paramref name="maximumLength" /> é negativo.  
  
- ou - 
 <paramref name="maximumLength" /> é menor que <paramref name="minimumLength" />.</exception>
      <exception cref="T:System.InvalidOperationException">O atributo atual está malformado.</exception>
      <returns>A mensagem de erro formatada.</returns>
    </member>
    <member name="M:System.ComponentModel.DataAnnotations.StringLengthAttribute.IsValid(System.Object)">
      <summary>Determina se um objeto especificado é válido.</summary>
      <param name="value">O objeto a ser validado.</param>
      <exception cref="T:System.ArgumentOutOfRangeException">
        <paramref name="maximumLength" /> é negativo.  
  
- ou - 
 <paramref name="maximumLength" /> é menor que <see cref="P:System.ComponentModel.DataAnnotations.StringLengthAttribute.MinimumLength" />.</exception>
      <exception cref="T:System.InvalidOperationException">O atributo atual está malformado.</exception>
      <returns>
        <see langword="true" /> se o objeto especificado é válido; caso contrário, <see langword="false" />.</returns>
    </member>
    <member name="P:System.ComponentModel.DataAnnotations.StringLengthAttribute.MaximumLength">
      <summary>Obtém ou define o tamanho máximo de uma cadeia de caracteres.</summary>
      <returns>O tamanho máximo de uma cadeia de caracteres.</returns>
    </member>
    <member name="P:System.ComponentModel.DataAnnotations.StringLengthAttribute.MinimumLength">
      <summary>Obtém ou define o tamanho mínimo de uma cadeia de caracteres.</summary>
      <returns>O tamanho mínimo de uma cadeia de caracteres.</returns>
    </member>
    <member name="T:System.ComponentModel.DataAnnotations.TimestampAttribute">
      <summary>Especifica o tipo de dados da coluna como uma versão de linha.</summary>
    </member>
    <member name="M:System.ComponentModel.DataAnnotations.TimestampAttribute.#ctor">
      <summary>Inicializa uma nova instância da classe <see cref="T:System.ComponentModel.DataAnnotations.TimestampAttribute" />.</summary>
    </member>
    <member name="T:System.ComponentModel.DataAnnotations.UIHintAttribute">
      <summary>Especifica o modelo ou controle de usuário usado pelos Dados dinâmicos para exibir um campo de dados.</summary>
    </member>
    <member name="M:System.ComponentModel.DataAnnotations.UIHintAttribute.#ctor(System.String)">
      <summary>Inicializa uma nova instância da classe <see cref="T:System.ComponentModel.DataAnnotations.UIHintAttribute" /> usando um controle de usuário especificado.</summary>
      <param name="uiHint">O controle de usuário a ser usado para exibir o campo de dados.</param>
    </member>
    <member name="M:System.ComponentModel.DataAnnotations.UIHintAttribute.#ctor(System.String,System.String)">
      <summary>Inicializa uma nova instância da classe <see cref="T:System.ComponentModel.DataAnnotations.UIHintAttribute" /> usando o controle de usuário especificado e a camada de apresentação especificada.</summary>
      <param name="uiHint">O controle de usuário (modelo de campo) a ser usado para exibir o campo de dados.</param>
      <param name="presentationLayer">A camada de apresentação que usa a classe. Pode ser definido como "HTML", "Silverlight", "WPF" ou "WinForms".</param>
    </member>
    <member name="M:System.ComponentModel.DataAnnotations.UIHintAttribute.#ctor(System.String,System.String,System.Object[])">
      <summary>Inicializa uma nova instância da classe <see cref="T:System.ComponentModel.DataAnnotations.UIHintAttribute" /> usando o controle de usuário, a camada de apresentação e os parâmetros de controle especificados.</summary>
      <param name="uiHint">O controle de usuário (modelo de campo) a ser usado para exibir o campo de dados.</param>
      <param name="presentationLayer">A camada de apresentação que usa a classe. Pode ser definido como "HTML", "Silverlight", "WPF" ou "WinForms".</param>
      <param name="controlParameters">O objeto a ser usado para recuperar valores de qualquer fonte de dados.</param>
      <exception cref="T:System.ArgumentException">
        <see cref="P:System.ComponentModel.DataAnnotations.UIHintAttribute.ControlParameters" /> é <see langword="null" /> ou é uma chave de restrição.  
  
- ou - 
O valor de <see cref="P:System.ComponentModel.DataAnnotations.UIHintAttribute.ControlParameters" /> não é uma cadeia de caracteres.</exception>
    </member>
    <member name="M:System.ComponentModel.DataAnnotations.UIHintAttribute.Equals(System.Object)">
      <summary>Obtém um valor que indica se essa instância é igual ao objeto especificado.</summary>
      <param name="obj">O objeto a ser comparado a esta instância ou uma referência <see langword="null" />.</param>
      <returns>
        <see langword="true" /> se o objeto especificado for igual a esta instância, caso contrário, <see langword="false" />.</returns>
    </member>
    <member name="M:System.ComponentModel.DataAnnotations.UIHintAttribute.GetHashCode">
      <summary>Obtém o código hash para a instância atual do atributo.</summary>
      <returns>O código hash da instância de atributo.</returns>
    </member>
    <member name="P:System.ComponentModel.DataAnnotations.UIHintAttribute.ControlParameters">
      <summary>Obtém ou define o objeto <see cref="T:System.Web.DynamicData.DynamicControlParameter" /> a ser usado para recuperar valores de qualquer fonte de dados.</summary>
      <exception cref="T:System.InvalidOperationException">O atributo atual está malformado.</exception>
      <returns>Uma coleção de pares de chave e valor.</returns>
    </member>
    <member name="P:System.ComponentModel.DataAnnotations.UIHintAttribute.PresentationLayer">
      <summary>Obtém ou define a camada de apresentação que usa a classe <see cref="T:System.ComponentModel.DataAnnotations.UIHintAttribute" />.</summary>
      <returns>A camada de apresentação usada por essa classe.</returns>
    </member>
    <member name="P:System.ComponentModel.DataAnnotations.UIHintAttribute.UIHint">
      <summary>Obtém ou define o nome do modelo de campo a ser usado para exibir o campo de dados.</summary>
      <returns>O nome do modelo de campo que exibe o campo de dados.</returns>
    </member>
    <member name="T:System.ComponentModel.DataAnnotations.UrlAttribute">
      <summary>Fornece validação da URL.</summary>
    </member>
    <member name="M:System.ComponentModel.DataAnnotations.UrlAttribute.#ctor">
      <summary>Inicializa uma nova instância da classe <see cref="T:System.ComponentModel.DataAnnotations.UrlAttribute" />.</summary>
    </member>
    <member name="M:System.ComponentModel.DataAnnotations.UrlAttribute.IsValid(System.Object)">
      <summary>Valida o formato da URL especificada.</summary>
      <param name="value">A URL a ser validada.</param>
      <returns>
        <see langword="true" /> se o formato da URL for válido ou <see langword="null" />; caso contrário, <see langword="false" />.</returns>
    </member>
    <member name="T:System.ComponentModel.DataAnnotations.ValidationAttribute">
      <summary>Serve como a classe base para todos os atributos de validação.</summary>
    </member>
    <member name="M:System.ComponentModel.DataAnnotations.ValidationAttribute.#ctor">
      <summary>Inicializa uma nova instância da classe <see cref="T:System.ComponentModel.DataAnnotations.ValidationAttribute" />.</summary>
    </member>
    <member name="M:System.ComponentModel.DataAnnotations.ValidationAttribute.#ctor(System.Func{System.String})">
      <summary>Inicializa uma nova instância da classe <see cref="T:System.ComponentModel.DataAnnotations.ValidationAttribute" /> usando a função que permite o acesso aos recursos de validação.</summary>
      <param name="errorMessageAccessor">A função que permite o acesso aos recursos de validação.</param>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="errorMessageAccessor" /> é <see langword="null" />.</exception>
    </member>
    <member name="M:System.ComponentModel.DataAnnotations.ValidationAttribute.#ctor(System.String)">
      <summary>Inicializa uma nova instância da classe <see cref="T:System.ComponentModel.DataAnnotations.ValidationAttribute" /> usando a mensagem de erro a ser associada a um controle de validação.</summary>
      <param name="errorMessage">A mensagem de erro a ser associada a um controle de validação.</param>
    </member>
    <member name="M:System.ComponentModel.DataAnnotations.ValidationAttribute.FormatErrorMessage(System.String)">
      <summary>Aplica formatação a uma mensagem de erro com base no campo de dados em que ocorreu o erro.</summary>
      <param name="name">O nome a ser incluído na mensagem formatada.</param>
      <exception cref="T:System.InvalidOperationException">O atributo atual está malformado.</exception>
      <returns>Uma instância da mensagem de erro formatada.</returns>
    </member>
    <member name="M:System.ComponentModel.DataAnnotations.ValidationAttribute.GetValidationResult(System.Object,System.ComponentModel.DataAnnotations.ValidationContext)">
      <summary>Verifica se o valor especificado é válido em relação ao atributo de validação atual.</summary>
      <param name="value">O valor a ser validado.</param>
      <param name="validationContext">As informações de contexto sobre a operação de validação.</param>
      <exception cref="T:System.InvalidOperationException">O atributo atual está malformado.</exception>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="validationContext" /> é <see langword="null" />.</exception>
      <exception cref="T:System.NotImplementedException">
        <see cref="M:System.ComponentModel.DataAnnotations.ValidationAttribute.IsValid(System.Object,System.ComponentModel.DataAnnotations.ValidationContext)" /> não foi implementado por uma classe derivada.</exception>
      <returns>Uma instância da classe <see cref="T:System.ComponentModel.DataAnnotations.ValidationResult" />.</returns>
    </member>
    <member name="M:System.ComponentModel.DataAnnotations.ValidationAttribute.IsValid(System.Object)">
      <summary>Determina se valor especificado do objeto é válido.</summary>
      <param name="value">O valor do objeto a ser validado.</param>
      <exception cref="T:System.InvalidOperationException">O atributo atual está malformado.</exception>
      <exception cref="T:System.NotImplementedException">Nenhuma sobrecarga de <see langword="IsValid" /> foi implementada por uma classe derivada.</exception>
      <returns>
        <see langword="true" /> se o valor especificado for válido; caso contrário, <see langword="false" />.</returns>
    </member>
    <member name="M:System.ComponentModel.DataAnnotations.ValidationAttribute.IsValid(System.Object,System.ComponentModel.DataAnnotations.ValidationContext)">
      <summary>Valida o valor especificado em relação ao atributo de validação atual.</summary>
      <param name="value">O valor a ser validado.</param>
      <param name="validationContext">As informações de contexto sobre a operação de validação.</param>
      <exception cref="T:System.InvalidOperationException">O atributo atual está malformado.</exception>
      <exception cref="T:System.NotImplementedException">
        <see cref="M:System.ComponentModel.DataAnnotations.ValidationAttribute.IsValid(System.Object,System.ComponentModel.DataAnnotations.ValidationContext)" /> não foi implementado por uma classe derivada.</exception>
      <returns>Uma instância da classe <see cref="T:System.ComponentModel.DataAnnotations.ValidationResult" />.</returns>
    </member>
    <member name="M:System.ComponentModel.DataAnnotations.ValidationAttribute.Validate(System.Object,System.ComponentModel.DataAnnotations.ValidationContext)">
      <summary>Valida o objeto especificado.</summary>
      <param name="value">O objeto a ser validado.</param>
      <param name="validationContext">O objeto <see cref="T:System.ComponentModel.DataAnnotations.ValidationContext" /> que descreve o contexto em que as verificações de validação são executadas. O parâmetro não pode ser <see langword="null" />.</param>
      <exception cref="T:System.ComponentModel.DataAnnotations.ValidationException">Falha na validação.</exception>
      <exception cref="T:System.InvalidOperationException">O atributo atual está malformado.</exception>
      <exception cref="T:System.NotImplementedException">
        <see cref="M:System.ComponentModel.DataAnnotations.ValidationAttribute.IsValid(System.Object,System.ComponentModel.DataAnnotations.ValidationContext)" /> não foi implementado por uma classe derivada.</exception>
    </member>
    <member name="M:System.ComponentModel.DataAnnotations.ValidationAttribute.Validate(System.Object,System.String)">
      <summary>Valida o objeto especificado.</summary>
      <param name="value">O valor do objeto a ser validado.</param>
      <param name="name">O nome a ser incluído na mensagem de erro.</param>
      <exception cref="T:System.ComponentModel.DataAnnotations.ValidationException">
        <paramref name="value" /> não é válido.</exception>
      <exception cref="T:System.InvalidOperationException">O atributo atual está malformado.</exception>
    </member>
    <member name="P:System.ComponentModel.DataAnnotations.ValidationAttribute.ErrorMessage">
      <summary>Obtém ou define uma mensagem de erro para associar a um controle de validação em caso de falha da validação.</summary>
      <returns>A mensagem de erro associada ao controle de validação.</returns>
    </member>
    <member name="P:System.ComponentModel.DataAnnotations.ValidationAttribute.ErrorMessageResourceName">
      <summary>Obtém ou define o nome do recurso de mensagem de erro a ser usado para pesquisar o valor da propriedade <see cref="P:System.ComponentModel.DataAnnotations.ValidationAttribute.ErrorMessageResourceType" /> se a validação falhar.</summary>
      <returns>O recurso de mensagem de erro associado ao controle de validação.</returns>
    </member>
    <member name="P:System.ComponentModel.DataAnnotations.ValidationAttribute.ErrorMessageResourceType">
      <summary>Obtém ou define o tipo de recurso a ser usado para a pesquisa de mensagens de erro se a validação falhar.</summary>
      <returns>O tipo de mensagem de erro associado a um controle de validação.</returns>
    </member>
    <member name="P:System.ComponentModel.DataAnnotations.ValidationAttribute.ErrorMessageString">
      <summary>Obtém a mensagem de erro de validação localizada.</summary>
      <returns>A mensagem de erro de validação localizada.</returns>
    </member>
    <member name="P:System.ComponentModel.DataAnnotations.ValidationAttribute.RequiresValidationContext">
      <summary>Obtém ou define um valor que indica se o atributo requer contexto de validação.</summary>
      <returns>
        <see langword="true" /> se o atributo exigir um contexto de validação; caso contrário, <see langword="false" />.</returns>
    </member>
    <member name="T:System.ComponentModel.DataAnnotations.ValidationContext">
      <summary>Descreve o contexto no qual é realizada uma verificação de validação.</summary>
    </member>
    <member name="M:System.ComponentModel.DataAnnotations.ValidationContext.#ctor(System.Object)">
      <summary>Inicializa uma nova instância da classe <see cref="T:System.ComponentModel.DataAnnotations.ValidationContext" /> usando a instância do objeto especificado.</summary>
      <param name="instance">A instância de objeto a ser validada. Não pode ser <see langword="null" />.</param>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="instance" /> é <see langword="null" />.</exception>
    </member>
    <member name="M:System.ComponentModel.DataAnnotations.ValidationContext.#ctor(System.Object,System.Collections.Generic.IDictionary{System.Object,System.Object})">
      <summary>Inicializa uma nova instância da classe <see cref="T:System.ComponentModel.DataAnnotations.ValidationContext" /> usando o objeto especificado e um recipiente de propriedades opcional.</summary>
      <param name="instance">A instância de objeto a ser validada.  Não pode ser <see langword="null" /></param>
      <param name="items">Um conjunto opcional de pares chave/valor a ser disponibilizado para os consumidores.</param>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="instance" /> é <see langword="null" />.</exception>
    </member>
    <member name="M:System.ComponentModel.DataAnnotations.ValidationContext.#ctor(System.Object,System.IServiceProvider,System.Collections.Generic.IDictionary{System.Object,System.Object})">
      <summary>Inicializa uma nova instância da classe <see cref="T:System.ComponentModel.DataAnnotations.ValidationContext" /> usando o provedor de serviços e o dicionário de consumidores do serviço.</summary>
      <param name="instance">O objeto a ser validado. Este parâmetro é necessário.</param>
      <param name="serviceProvider">O objeto que implementa a interface do <see cref="T:System.IServiceProvider" />. Esse parâmetro é opcional.</param>
      <param name="items">Um dicionário de pares chave/valor para tornar disponíveis para os consumidores de serviço. Esse parâmetro é opcional.</param>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="instance" /> é <see langword="null" />.</exception>
    </member>
    <member name="M:System.ComponentModel.DataAnnotations.ValidationContext.GetService(System.Type)">
      <summary>Retorna o serviço que fornece a validação personalizada.</summary>
      <param name="serviceType">O tipo do serviço a ser usado para validação.</param>
      <returns>Uma instância do serviço ou <see langword="null" />, se o serviço não estiver disponível.</returns>
    </member>
    <member name="M:System.ComponentModel.DataAnnotations.ValidationContext.InitializeServiceProvider(System.Func{System.Type,System.Object})">
      <summary>Inicializa o <see cref="T:System.ComponentModel.DataAnnotations.ValidationContext" /> usando um provedor de serviço que pode retornar instâncias de serviço por tipo quando <see cref="M:System.Web.Mvc.IDependencyResolver.GetService(System.Type)" /> é chamado.</summary>
      <param name="serviceProvider">O provedor de serviços.</param>
    </member>
    <member name="P:System.ComponentModel.DataAnnotations.ValidationContext.DisplayName">
      <summary>Obtém ou define o nome do membro a ser validado.</summary>
      <returns>O nome do membro a ser validado.</returns>
    </member>
    <member name="P:System.ComponentModel.DataAnnotations.ValidationContext.Items">
      <summary>Obtém o dicionário de pares chave/valor associado a esse contexto.</summary>
      <returns>O dicionário de pares chave/valor para esse contexto.</returns>
    </member>
    <member name="P:System.ComponentModel.DataAnnotations.ValidationContext.MemberName">
      <summary>Obtém ou define o nome do membro a ser validado.</summary>
      <returns>O nome do membro a ser validado.</returns>
    </member>
    <member name="P:System.ComponentModel.DataAnnotations.ValidationContext.ObjectInstance">
      <summary>Obtém o objeto a ser validado.</summary>
      <returns>O objeto a ser validado.</returns>
    </member>
    <member name="P:System.ComponentModel.DataAnnotations.ValidationContext.ObjectType">
      <summary>Obtém o tipo do objeto a ser validado.</summary>
      <returns>O tipo do objeto a ser validado.</returns>
    </member>
    <member name="T:System.ComponentModel.DataAnnotations.ValidationException">
      <summary>Representa a exceção que ocorre durante a validação de um campo de dados quando a classe <see cref="T:System.ComponentModel.DataAnnotations.ValidationAttribute" /> é usada.</summary>
    </member>
    <member name="M:System.ComponentModel.DataAnnotations.ValidationException.#ctor">
      <summary>Inicializa uma nova instância da classe <see cref="T:System.ComponentModel.DataAnnotations.ValidationException" /> usando uma mensagem de erro gerada pelo sistema.</summary>
    </member>
    <member name="M:System.ComponentModel.DataAnnotations.ValidationException.#ctor(System.ComponentModel.DataAnnotations.ValidationResult,System.ComponentModel.DataAnnotations.ValidationAttribute,System.Object)">
      <summary>Inicializa uma nova instância da classe <see cref="T:System.ComponentModel.DataAnnotations.ValidationException" /> usando um resultado de validação, um atributo de validação e o valor da exceção atual.</summary>
      <param name="validationResult">A lista de resultados de validação.</param>
      <param name="validatingAttribute">O atributo que causou a exceção atual.</param>
      <param name="value">O valor do objeto que fez com que o atributo disparasse o erro de validação.</param>
    </member>
    <member name="M:System.ComponentModel.DataAnnotations.ValidationException.#ctor(System.Runtime.Serialization.SerializationInfo,System.Runtime.Serialization.StreamingContext)">
      <summary>Inicializa uma nova instância da classe <see cref="T:System.ComponentModel.DataAnnotations.ValidationException" /> usando dados serializados.</summary>
      <param name="info">O objeto que contém os dados serializados.</param>
      <param name="context">As informações de contexto sobre a origem ou o destino do objeto serializado.</param>
    </member>
    <member name="M:System.ComponentModel.DataAnnotations.ValidationException.#ctor(System.String)">
      <summary>Inicializa uma nova instância da classe <see cref="T:System.ComponentModel.DataAnnotations.ValidationException" /> usando uma mensagem de erro especificada.</summary>
      <param name="message">Uma mensagem especificada que indica o erro.</param>
    </member>
    <member name="M:System.ComponentModel.DataAnnotations.ValidationException.#ctor(System.String,System.ComponentModel.DataAnnotations.ValidationAttribute,System.Object)">
      <summary>Inicializa uma nova instância da classe <see cref="T:System.ComponentModel.DataAnnotations.ValidationException" /> usando a mensagem de erro, o atributo de validação e o valor da exceção atual especificados.</summary>
      <param name="errorMessage">A mensagem que indica o erro.</param>
      <param name="validatingAttribute">O atributo que causou a exceção atual.</param>
      <param name="value">O valor do objeto que fez com que o atributo disparasse o erro de validação.</param>
    </member>
    <member name="M:System.ComponentModel.DataAnnotations.ValidationException.#ctor(System.String,System.Exception)">
      <summary>Inicializa uma nova instância da classe <see cref="T:System.ComponentModel.DataAnnotations.ValidationException" /> usando uma mensagem de erro e uma coleção de instâncias de exceção interna especificadas.</summary>
      <param name="message">A mensagem de erro.</param>
      <param name="innerException">A coleção de exceções de validação.</param>
    </member>
    <member name="P:System.ComponentModel.DataAnnotations.ValidationException.ValidationAttribute">
      <summary>Obtém a instância da classe <see cref="T:System.ComponentModel.DataAnnotations.ValidationAttribute" /> que disparou essa exceção.</summary>
      <returns>Uma instância do tipo de atributo de validação que disparou essa exceção.</returns>
    </member>
    <member name="P:System.ComponentModel.DataAnnotations.ValidationException.ValidationResult">
      <summary>Obtém a instância <see cref="P:System.ComponentModel.DataAnnotations.ValidationException.ValidationResult" /> que descreve o erro de validação.</summary>
      <returns>A <see cref="P:System.ComponentModel.DataAnnotations.ValidationException.ValidationResult" /> instância que descreve o erro de validação.</returns>
    </member>
    <member name="P:System.ComponentModel.DataAnnotations.ValidationException.Value">
      <summary>Obtém o valor do objeto que faz com que a classe <see cref="T:System.ComponentModel.DataAnnotations.ValidationAttribute" /> dispare essa exceção.</summary>
      <returns>O valor do objeto que fez com que a <see cref="T:System.ComponentModel.DataAnnotations.ValidationAttribute" /> classe disparasse o erro de validação.</returns>
    </member>
    <member name="T:System.ComponentModel.DataAnnotations.ValidationResult">
      <summary>Representa um contêiner para os resultados de uma solicitação de validação.</summary>
    </member>
    <member name="F:System.ComponentModel.DataAnnotations.ValidationResult.Success">
      <summary>Representa o sucesso da validação (<see langword="true" /> quando a validação é bem-sucedida, caso contrário, <see langword="false" />).</summary>
    </member>
    <member name="M:System.ComponentModel.DataAnnotations.ValidationResult.#ctor(System.ComponentModel.DataAnnotations.ValidationResult)">
      <summary>Inicializa uma nova instância da classe <see cref="T:System.ComponentModel.DataAnnotations.ValidationResult" /> usando um objeto <see cref="T:System.ComponentModel.DataAnnotations.ValidationResult" />.</summary>
      <param name="validationResult">O objeto de resultado de validação.</param>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="validationResult" /> é <see langword="null" />.</exception>
    </member>
    <member name="M:System.ComponentModel.DataAnnotations.ValidationResult.#ctor(System.String)">
      <summary>Inicializa uma nova instância da classe <see cref="T:System.ComponentModel.DataAnnotations.ValidationResult" /> usando uma mensagem de erro.</summary>
      <param name="errorMessage">A mensagem de erro.</param>
    </member>
    <member name="M:System.ComponentModel.DataAnnotations.ValidationResult.#ctor(System.String,System.Collections.Generic.IEnumerable{System.String})">
      <summary>Inicializa uma nova instância da classe <see cref="T:System.ComponentModel.DataAnnotations.ValidationResult" /> usando uma mensagem de erro e uma lista de membros que têm erros de validação.</summary>
      <param name="errorMessage">A mensagem de erro.</param>
      <param name="memberNames">A lista de nomes dos membros que têm erros de validação.</param>
    </member>
    <member name="M:System.ComponentModel.DataAnnotations.ValidationResult.ToString">
      <summary>Retorna uma representação de cadeia de caracteres do resultado de validação atual.</summary>
      <returns>O resultado de validação atual.</returns>
    </member>
    <member name="P:System.ComponentModel.DataAnnotations.ValidationResult.ErrorMessage">
      <summary>Obtém a mensagem de erro para a validação.</summary>
      <returns>A mensagem de erro para a validação.</returns>
    </member>
    <member name="P:System.ComponentModel.DataAnnotations.ValidationResult.MemberNames">
      <summary>Obtém a coleção de nomes de membro que indicam quais campos têm erros de validação.</summary>
      <returns>A coleção de nomes de membro que indicam quais campos têm erros de validação.</returns>
    </member>
    <member name="T:System.ComponentModel.DataAnnotations.Validator">
      <summary>Define uma classe auxiliar que pode ser usada para validar objetos, propriedades e métodos quando ela está incluída em seus atributos <see cref="T:System.ComponentModel.DataAnnotations.ValidationAttribute" /> associados.</summary>
    </member>
    <member name="M:System.ComponentModel.DataAnnotations.Validator.TryValidateObject(System.Object,System.ComponentModel.DataAnnotations.ValidationContext,System.Collections.Generic.ICollection{System.ComponentModel.DataAnnotations.ValidationResult})">
      <summary>Determina se o objeto especificado é válido usando o contexto de validação e a coleção de resultados de validação.</summary>
      <param name="instance">O objeto a ser validado.</param>
      <param name="validationContext">O contexto que descreve o objeto a ser validado.</param>
      <param name="validationResults">Uma coleção para armazenar cada validação com falha.</param>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="instance" /> é <see langword="null" />.</exception>
      <exception cref="T:System.ArgumentException">
        <paramref name="instance" /> não corresponde a <see cref="P:System.ComponentModel.DataAnnotations.ValidationContext.ObjectInstance" /> em <paramref name="validationContext" />.</exception>
      <returns>
        <see langword="true" /> se o objeto for validado; caso contrário, <see langword="false" />.</returns>
    </member>
    <member name="M:System.ComponentModel.DataAnnotations.Validator.TryValidateObject(System.Object,System.ComponentModel.DataAnnotations.ValidationContext,System.Collections.Generic.ICollection{System.ComponentModel.DataAnnotations.ValidationResult},System.Boolean)">
      <summary>Determina se o objeto especificado é válido usando o contexto de validação, a coleção de resultados de validação e um valor que especifica se é necessário validar todas as propriedades.</summary>
      <param name="instance">O objeto a ser validado.</param>
      <param name="validationContext">O contexto que descreve o objeto a ser validado.</param>
      <param name="validationResults">Uma coleção para armazenar cada validação com falha.</param>
      <param name="validateAllProperties">
        <see langword="true" /> para validar todas as propriedades, se <see langword="false" />, somente os atributos obrigatórios são validados.</param>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="instance" /> é <see langword="null" />.</exception>
      <exception cref="T:System.ArgumentException">
        <paramref name="instance" /> não corresponde a <see cref="P:System.ComponentModel.DataAnnotations.ValidationContext.ObjectInstance" /> em <paramref name="validationContext" />.</exception>
      <returns>
        <see langword="true" /> se o objeto for validado; caso contrário, <see langword="false" />.</returns>
    </member>
    <member name="M:System.ComponentModel.DataAnnotations.Validator.TryValidateProperty(System.Object,System.ComponentModel.DataAnnotations.ValidationContext,System.Collections.Generic.ICollection{System.ComponentModel.DataAnnotations.ValidationResult})">
      <summary>Valida a propriedade.</summary>
      <param name="value">O valor a ser validado.</param>
      <param name="validationContext">O contexto que descreve a propriedade a ser validada.</param>
      <param name="validationResults">Uma coleção para armazenar cada validação com falha.</param>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="value" /> não pode ser atribuído à propriedade.  
  
- ou - 
 <paramref name="value" /> é <see langword="null" />.</exception>
      <exception cref="T:System.ArgumentException">A propriedade <see cref="P:System.ComponentModel.DataAnnotations.ValidationContext.MemberName" /> do <paramref name="validationContext" /> não é uma propriedade válida.</exception>
      <returns>
        <see langword="true" /> se a propriedade for validada; caso contrário, <see langword="false" />.</returns>
    </member>
    <member name="M:System.ComponentModel.DataAnnotations.Validator.TryValidateValue(System.Object,System.ComponentModel.DataAnnotations.ValidationContext,System.Collections.Generic.ICollection{System.ComponentModel.DataAnnotations.ValidationResult},System.Collections.Generic.IEnumerable{System.ComponentModel.DataAnnotations.ValidationAttribute})">
      <summary>Retorna um valor que indica se o valor especificado é válido com os atributos especificados.</summary>
      <param name="value">O valor a ser validado.</param>
      <param name="validationContext">O contexto que descreve o objeto a ser validado.</param>
      <param name="validationResults">Uma coleção para conter validações com falha.</param>
      <param name="validationAttributes">Os atributos de validação.</param>
      <returns>
        <see langword="true" /> se o objeto for validado; caso contrário, <see langword="false" />.</returns>
    </member>
    <member name="M:System.ComponentModel.DataAnnotations.Validator.ValidateObject(System.Object,System.ComponentModel.DataAnnotations.ValidationContext)">
      <summary>Determina se o objeto especificado é válido usando o contexto de validação.</summary>
      <param name="instance">O objeto a ser validado.</param>
      <param name="validationContext">O contexto que descreve o objeto a ser validado.</param>
      <exception cref="T:System.ComponentModel.DataAnnotations.ValidationException">O objeto não é válido.</exception>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="instance" /> é <see langword="null" />.</exception>
      <exception cref="T:System.ArgumentException">
        <paramref name="instance" /> não corresponde a <see cref="P:System.ComponentModel.DataAnnotations.ValidationContext.ObjectInstance" /> em <paramref name="validationContext" />.</exception>
    </member>
    <member name="M:System.ComponentModel.DataAnnotations.Validator.ValidateObject(System.Object,System.ComponentModel.DataAnnotations.ValidationContext,System.Boolean)">
      <summary>Determina se o objeto especificado é válido usando o contexto de validação e um valor que especifica se é necessário validar todas as propriedades.</summary>
      <param name="instance">O objeto a ser validado.</param>
      <param name="validationContext">O contexto que descreve o objeto a ser validado.</param>
      <param name="validateAllProperties">
        <see langword="true" /> para validar todas as propriedades; caso contrário, <see langword="false" />.</param>
      <exception cref="T:System.ComponentModel.DataAnnotations.ValidationException">
        <paramref name="instance" /> não é válido.</exception>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="instance" /> é <see langword="null" />.</exception>
      <exception cref="T:System.ArgumentException">
        <paramref name="instance" /> não corresponde a <see cref="P:System.ComponentModel.DataAnnotations.ValidationContext.ObjectInstance" /> em <paramref name="validationContext" />.</exception>
    </member>
    <member name="M:System.ComponentModel.DataAnnotations.Validator.ValidateProperty(System.Object,System.ComponentModel.DataAnnotations.ValidationContext)">
      <summary>Valida a propriedade.</summary>
      <param name="value">O valor a ser validado.</param>
      <param name="validationContext">O contexto que descreve a propriedade a ser validada.</param>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="value" /> não pode ser atribuído à propriedade.</exception>
      <exception cref="T:System.ComponentModel.DataAnnotations.ValidationException">O parâmetro <paramref name="value" /> não é válido.</exception>
    </member>
    <member name="M:System.ComponentModel.DataAnnotations.Validator.ValidateValue(System.Object,System.ComponentModel.DataAnnotations.ValidationContext,System.Collections.Generic.IEnumerable{System.ComponentModel.DataAnnotations.ValidationAttribute})">
      <summary>Valida os atributos especificados.</summary>
      <param name="value">O valor a ser validado.</param>
      <param name="validationContext">O contexto que descreve o objeto a ser validado.</param>
      <param name="validationAttributes">Os atributos de validação.</param>
      <exception cref="T:System.ArgumentNullException">O parâmetro <paramref name="validationContext" /> é <see langword="null" />.</exception>
      <exception cref="T:System.ComponentModel.DataAnnotations.ValidationException">O parâmetro <paramref name="value" /> não é validado com o parâmetro <paramref name="validationAttributes" />.</exception>
    </member>
  </members>
</doc>