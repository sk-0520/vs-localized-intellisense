<?xml version="1.0" encoding="utf-8"?>
<doc xmlns:vsli="https://github.com/sk-0520/vs-localized-intellisense/tree/master/schema/2024">
  <assembly>
    <name>System.Xml.XDocument</name>
  </assembly>
  <members>
    <member name="T:System.Xml.Linq.Extensions">
      <summary vsli:raw="Contains the LINQ to XML extension methods.">Contient les méthodes d’extension LINQ to XML.</summary>
    </member>
    <member name="M:System.Xml.Linq.Extensions.Ancestors``1(System.Collections.Generic.IEnumerable{``0})">
      <summary vsli:raw="Returns a collection of elements that contains the ancestors of every node in the source collection.">Retourne une collection d'éléments qui contient les ancêtres de chaque nœud de la collection source.</summary>
      <param name="source" vsli:raw="An &lt;see cref=&quot;T:System.Collections.Generic.IEnumerable`1&quot; /&gt; of &lt;see cref=&quot;T:System.Xml.Linq.XNode&quot; /&gt; that contains the source collection.">
        <see cref="T:System.Collections.Generic.IEnumerable`1" /> de <see cref="T:System.Xml.Linq.XNode" /> qui contient la collection source.</param>
      <typeparam name="T" vsli:raw="The type of the objects in &lt;paramref name=&quot;source&quot; /&gt;, constrained to &lt;see cref=&quot;T:System.Xml.Linq.XNode&quot; /&gt;.">Type des objets de <paramref name="source" />, contraint par <see cref="T:System.Xml.Linq.XNode" />.</typeparam>
      <returns vsli:raw="An &lt;see cref=&quot;T:System.Collections.Generic.IEnumerable`1&quot; /&gt; of &lt;see cref=&quot;T:System.Xml.Linq.XElement&quot; /&gt; that contains the ancestors of every node in the source collection.">
        <see cref="T:System.Collections.Generic.IEnumerable`1" /> de <see cref="T:System.Xml.Linq.XElement" /> qui contient les ancêtres de chaque nœud de la collection source.</returns>
    </member>
    <member name="M:System.Xml.Linq.Extensions.Ancestors``1(System.Collections.Generic.IEnumerable{``0},System.Xml.Linq.XName)">
      <summary vsli:raw="Returns a filtered collection of elements that contains the ancestors of every node in the source collection. Only elements that have a matching &lt;see cref=&quot;T:System.Xml.Linq.XName&quot; /&gt; are included in the collection.">Retourne une collection d'éléments filtrée qui contient les ancêtres de chaque nœud de la collection source. Seuls les éléments avec un <see cref="T:System.Xml.Linq.XName" /> correspondant sont inclus dans la collection.</summary>
      <param name="source" vsli:raw="An &lt;see cref=&quot;T:System.Collections.Generic.IEnumerable`1&quot; /&gt; of &lt;see cref=&quot;T:System.Xml.Linq.XNode&quot; /&gt; that contains the source collection.">
        <see cref="T:System.Collections.Generic.IEnumerable`1" /> de <see cref="T:System.Xml.Linq.XNode" /> qui contient la collection source.</param>
      <param name="name" vsli:raw="The &lt;see cref=&quot;T:System.Xml.Linq.XName&quot; /&gt; to match.">
        <see cref="T:System.Xml.Linq.XName" /> à mettre en correspondance.</param>
      <typeparam name="T" vsli:raw="The type of the objects in &lt;paramref name=&quot;source&quot; /&gt;, constrained to &lt;see cref=&quot;T:System.Xml.Linq.XNode&quot; /&gt;.">Type des objets de <paramref name="source" />, contraint par <see cref="T:System.Xml.Linq.XNode" />.</typeparam>
      <returns vsli:raw="An &lt;see cref=&quot;T:System.Collections.Generic.IEnumerable`1&quot; /&gt; of &lt;see cref=&quot;T:System.Xml.Linq.XElement&quot; /&gt; that contains the ancestors of every node in the source collection. Only elements that have a matching &lt;see cref=&quot;T:System.Xml.Linq.XName&quot; /&gt; are included in the collection.">
        <see cref="T:System.Collections.Generic.IEnumerable`1" /> de <see cref="T:System.Xml.Linq.XElement" /> qui contient les ancêtres de chaque nœud de la collection source. Seuls les éléments avec un <see cref="T:System.Xml.Linq.XName" /> correspondant sont inclus dans la collection.</returns>
    </member>
    <member name="M:System.Xml.Linq.Extensions.AncestorsAndSelf(System.Collections.Generic.IEnumerable{System.Xml.Linq.XElement})">
      <summary vsli:raw="Returns a collection of elements that contains every element in the source collection, and the ancestors of every element in the source collection.">Retourne une collection d'éléments qui contient tous les éléments de la collection source et leurs ancêtres.</summary>
      <param name="source" vsli:raw="An &lt;see cref=&quot;T:System.Collections.Generic.IEnumerable`1&quot; /&gt; of &lt;see cref=&quot;T:System.Xml.Linq.XElement&quot; /&gt; that contains the source collection.">
        <see cref="T:System.Collections.Generic.IEnumerable`1" /> de <see cref="T:System.Xml.Linq.XElement" /> qui contient la collection source.</param>
      <returns vsli:raw="An &lt;see cref=&quot;T:System.Collections.Generic.IEnumerable`1&quot; /&gt; of &lt;see cref=&quot;T:System.Xml.Linq.XElement&quot; /&gt; that contains every element in the source collection, and the ancestors of every element in the source collection.">
        <see cref="T:System.Collections.Generic.IEnumerable`1" /> de <see cref="T:System.Xml.Linq.XElement" /> qui contient tous les éléments de la collection source et leurs ancêtres.</returns>
    </member>
    <member name="M:System.Xml.Linq.Extensions.AncestorsAndSelf(System.Collections.Generic.IEnumerable{System.Xml.Linq.XElement},System.Xml.Linq.XName)">
      <summary vsli:raw="Returns a filtered collection of elements that contains every element in the source collection, and the ancestors of every element in the source collection. Only elements that have a matching &lt;see cref=&quot;T:System.Xml.Linq.XName&quot; /&gt; are included in the collection.">Retourne une collection d'éléments filtrée qui contient tous les éléments de la collection source et leurs ancêtres. Seuls les éléments avec un <see cref="T:System.Xml.Linq.XName" /> correspondant sont inclus dans la collection.</summary>
      <param name="source" vsli:raw="An &lt;see cref=&quot;T:System.Collections.Generic.IEnumerable`1&quot; /&gt; of &lt;see cref=&quot;T:System.Xml.Linq.XElement&quot; /&gt; that contains the source collection.">
        <see cref="T:System.Collections.Generic.IEnumerable`1" /> de <see cref="T:System.Xml.Linq.XElement" /> qui contient la collection source.</param>
      <param name="name" vsli:raw="The &lt;see cref=&quot;T:System.Xml.Linq.XName&quot; /&gt; to match.">
        <see cref="T:System.Xml.Linq.XName" /> à mettre en correspondance.</param>
      <returns vsli:raw="An &lt;see cref=&quot;T:System.Collections.Generic.IEnumerable`1&quot; /&gt; of &lt;see cref=&quot;T:System.Xml.Linq.XElement&quot; /&gt; that contains every element in the source collection, and the ancestors of every element in the source collection. Only elements that have a matching &lt;see cref=&quot;T:System.Xml.Linq.XName&quot; /&gt; are included in the collection.">
        <see cref="T:System.Collections.Generic.IEnumerable`1" /> de <see cref="T:System.Xml.Linq.XElement" /> qui contient tous les éléments de la collection source et leurs ancêtres. Seuls les éléments avec un <see cref="T:System.Xml.Linq.XName" /> correspondant sont inclus dans la collection.</returns>
    </member>
    <member name="M:System.Xml.Linq.Extensions.Attributes(System.Collections.Generic.IEnumerable{System.Xml.Linq.XElement})">
      <summary vsli:raw="Returns a collection of the attributes of every element in the source collection.">Retourne une collection des attributs de chaque élément de la collection source.</summary>
      <param name="source" vsli:raw="An &lt;see cref=&quot;T:System.Collections.Generic.IEnumerable`1&quot; /&gt; of &lt;see cref=&quot;T:System.Xml.Linq.XElement&quot; /&gt; that contains the source collection.">
        <see cref="T:System.Collections.Generic.IEnumerable`1" /> de <see cref="T:System.Xml.Linq.XElement" /> qui contient la collection source.</param>
      <returns vsli:raw="An &lt;see cref=&quot;T:System.Collections.Generic.IEnumerable`1&quot; /&gt; of &lt;see cref=&quot;T:System.Xml.Linq.XAttribute&quot; /&gt; that contains the attributes of every element in the source collection.">
        <see cref="T:System.Collections.Generic.IEnumerable`1" /> de <see cref="T:System.Xml.Linq.XAttribute" /> qui contient les attributs de chaque élément de la collection source.</returns>
    </member>
    <member name="M:System.Xml.Linq.Extensions.Attributes(System.Collections.Generic.IEnumerable{System.Xml.Linq.XElement},System.Xml.Linq.XName)">
      <summary vsli:raw="Returns a filtered collection of the attributes of every element in the source collection. Only elements that have a matching &lt;see cref=&quot;T:System.Xml.Linq.XName&quot; /&gt; are included in the collection.">Retourne une collection filtrée des attributs de chaque élément de la collection source. Seuls les éléments avec un <see cref="T:System.Xml.Linq.XName" /> correspondant sont inclus dans la collection.</summary>
      <param name="source" vsli:raw="An &lt;see cref=&quot;T:System.Collections.Generic.IEnumerable`1&quot; /&gt; of &lt;see cref=&quot;T:System.Xml.Linq.XElement&quot; /&gt; that contains the source collection.">
        <see cref="T:System.Collections.Generic.IEnumerable`1" /> de <see cref="T:System.Xml.Linq.XElement" /> qui contient la collection source.</param>
      <param name="name" vsli:raw="The &lt;see cref=&quot;T:System.Xml.Linq.XName&quot; /&gt; to match.">
        <see cref="T:System.Xml.Linq.XName" /> à mettre en correspondance.</param>
      <returns vsli:raw="An &lt;see cref=&quot;T:System.Collections.Generic.IEnumerable`1&quot; /&gt; of &lt;see cref=&quot;T:System.Xml.Linq.XAttribute&quot; /&gt; that contains a filtered collection of the attributes of every element in the source collection. Only elements that have a matching &lt;see cref=&quot;T:System.Xml.Linq.XName&quot; /&gt; are included in the collection.">
        <see cref="T:System.Collections.Generic.IEnumerable`1" /> de <see cref="T:System.Xml.Linq.XAttribute" /> qui contient une collection filtrée des attributs de chaque élément de la collection source. Seuls les éléments avec un <see cref="T:System.Xml.Linq.XName" /> correspondant sont inclus dans la collection.</returns>
    </member>
    <member name="M:System.Xml.Linq.Extensions.DescendantNodes``1(System.Collections.Generic.IEnumerable{``0})">
      <summary vsli:raw="Returns a collection of the descendant nodes of every document and element in the source collection.">Retourne une collection des nœuds descendants de chaque document et élément de la collection source.</summary>
      <param name="source" vsli:raw="An &lt;see cref=&quot;T:System.Collections.Generic.IEnumerable`1&quot; /&gt; of &lt;see cref=&quot;T:System.Xml.Linq.XContainer&quot; /&gt; that contains the source collection.">
        <see cref="T:System.Collections.Generic.IEnumerable`1" /> de <see cref="T:System.Xml.Linq.XContainer" /> qui contient la collection source.</param>
      <typeparam name="T" vsli:raw="The type of the objects in &lt;paramref name=&quot;source&quot; /&gt;, constrained to &lt;see cref=&quot;T:System.Xml.Linq.XContainer&quot; /&gt;.">Type des objets de <paramref name="source" />, contraint par <see cref="T:System.Xml.Linq.XContainer" />.</typeparam>
      <returns vsli:raw="An &lt;see cref=&quot;T:System.Collections.Generic.IEnumerable`1&quot; /&gt; of &lt;see cref=&quot;T:System.Xml.Linq.XNode&quot; /&gt; of the descendant nodes of every document and element in the source collection.">
        <see cref="T:System.Collections.Generic.IEnumerable`1" /> de <see cref="T:System.Xml.Linq.XNode" /> des nœuds descendants de chaque document et élément de la collection source.</returns>
    </member>
    <member name="M:System.Xml.Linq.Extensions.DescendantNodesAndSelf(System.Collections.Generic.IEnumerable{System.Xml.Linq.XElement})">
      <summary vsli:raw="Returns a collection of nodes that contains every element in the source collection, and the descendant nodes of every element in the source collection.">Retourne une collection de nœuds qui contient tous les éléments de la collection source et leurs nœuds descendants.</summary>
      <param name="source" vsli:raw="An &lt;see cref=&quot;T:System.Collections.Generic.IEnumerable`1&quot; /&gt; of &lt;see cref=&quot;T:System.Xml.Linq.XElement&quot; /&gt; that contains the source collection.">
        <see cref="T:System.Collections.Generic.IEnumerable`1" /> de <see cref="T:System.Xml.Linq.XElement" /> qui contient la collection source.</param>
      <returns vsli:raw="An &lt;see cref=&quot;T:System.Collections.Generic.IEnumerable`1&quot; /&gt; of &lt;see cref=&quot;T:System.Xml.Linq.XNode&quot; /&gt; that contains every element in the source collection, and the descendant nodes of every element in the source collection.">
        <see cref="T:System.Collections.Generic.IEnumerable`1" /> de <see cref="T:System.Xml.Linq.XNode" /> qui contient tous les éléments de la collection source et leurs nœuds descendants.</returns>
    </member>
    <member name="M:System.Xml.Linq.Extensions.Descendants``1(System.Collections.Generic.IEnumerable{``0})">
      <summary vsli:raw="Returns a collection of elements that contains the descendant elements of every element and document in the source collection.">Retourne une collection d'éléments qui contient les éléments descendants de tous les éléments et tous les documents de la collection source.</summary>
      <param name="source" vsli:raw="An &lt;see cref=&quot;T:System.Collections.Generic.IEnumerable`1&quot; /&gt; of &lt;see cref=&quot;T:System.Xml.Linq.XContainer&quot; /&gt; that contains the source collection.">
        <see cref="T:System.Collections.Generic.IEnumerable`1" /> de <see cref="T:System.Xml.Linq.XContainer" /> qui contient la collection source.</param>
      <typeparam name="T" vsli:raw="The type of the objects in &lt;paramref name=&quot;source&quot; /&gt;, constrained to &lt;see cref=&quot;T:System.Xml.Linq.XContainer&quot; /&gt;.">Type des objets de <paramref name="source" />, contraint par <see cref="T:System.Xml.Linq.XContainer" />.</typeparam>
      <returns vsli:raw="An &lt;see cref=&quot;T:System.Collections.Generic.IEnumerable`1&quot; /&gt; of &lt;see cref=&quot;T:System.Xml.Linq.XElement&quot; /&gt; that contains the descendant elements of every element and document in the source collection.">
        <see cref="T:System.Collections.Generic.IEnumerable`1" /> de <see cref="T:System.Xml.Linq.XElement" /> qui contient les éléments descendants de tous les éléments et tous les documents de la collection source.</returns>
    </member>
    <member name="M:System.Xml.Linq.Extensions.Descendants``1(System.Collections.Generic.IEnumerable{``0},System.Xml.Linq.XName)">
      <summary vsli:raw="Returns a filtered collection of elements that contains the descendant elements of every element and document in the source collection. Only elements that have a matching &lt;see cref=&quot;T:System.Xml.Linq.XName&quot; /&gt; are included in the collection.">Retourne une collection d'éléments filtrée qui contient les éléments descendants de tous les éléments et tous les documents de la collection source. Seuls les éléments avec un <see cref="T:System.Xml.Linq.XName" /> correspondant sont inclus dans la collection.</summary>
      <param name="source" vsli:raw="An &lt;see cref=&quot;T:System.Collections.Generic.IEnumerable`1&quot; /&gt; of &lt;see cref=&quot;T:System.Xml.Linq.XContainer&quot; /&gt; that contains the source collection.">
        <see cref="T:System.Collections.Generic.IEnumerable`1" /> de <see cref="T:System.Xml.Linq.XContainer" /> qui contient la collection source.</param>
      <param name="name" vsli:raw="The &lt;see cref=&quot;T:System.Xml.Linq.XName&quot; /&gt; to match.">
        <see cref="T:System.Xml.Linq.XName" /> à mettre en correspondance.</param>
      <typeparam name="T" vsli:raw="The type of the objects in &lt;paramref name=&quot;source&quot; /&gt;, constrained to &lt;see cref=&quot;T:System.Xml.Linq.XContainer&quot; /&gt;.">Type des objets de <paramref name="source" />, contraint par <see cref="T:System.Xml.Linq.XContainer" />.</typeparam>
      <returns vsli:raw="An &lt;see cref=&quot;T:System.Collections.Generic.IEnumerable`1&quot; /&gt; of &lt;see cref=&quot;T:System.Xml.Linq.XElement&quot; /&gt; that contains the descendant elements of every element and document in the source collection. Only elements that have a matching &lt;see cref=&quot;T:System.Xml.Linq.XName&quot; /&gt; are included in the collection.">
        <see cref="T:System.Collections.Generic.IEnumerable`1" /> de <see cref="T:System.Xml.Linq.XElement" /> qui contient les éléments descendants de tous les éléments et tous les documents de la collection source. Seuls les éléments avec un <see cref="T:System.Xml.Linq.XName" /> correspondant sont inclus dans la collection.</returns>
    </member>
    <member name="M:System.Xml.Linq.Extensions.DescendantsAndSelf(System.Collections.Generic.IEnumerable{System.Xml.Linq.XElement})">
      <summary vsli:raw="Returns a collection of elements that contains every element in the source collection, and the descendent elements of every element in the source collection.">Retourne une collection d'éléments qui contient tous les éléments de la collection source et leurs éléments descendants.</summary>
      <param name="source" vsli:raw="An &lt;see cref=&quot;T:System.Collections.Generic.IEnumerable`1&quot; /&gt; of &lt;see cref=&quot;T:System.Xml.Linq.XElement&quot; /&gt; that contains the source collection.">
        <see cref="T:System.Collections.Generic.IEnumerable`1" /> de <see cref="T:System.Xml.Linq.XElement" /> qui contient la collection source.</param>
      <returns vsli:raw="An &lt;see cref=&quot;T:System.Collections.Generic.IEnumerable`1&quot; /&gt; of &lt;see cref=&quot;T:System.Xml.Linq.XElement&quot; /&gt; that contains every element in the source collection, and the descendent elements of every element in the source collection.">
        <see cref="T:System.Collections.Generic.IEnumerable`1" /> de <see cref="T:System.Xml.Linq.XElement" /> qui contient tous les éléments de la collection source et leurs éléments descendants.</returns>
    </member>
    <member name="M:System.Xml.Linq.Extensions.DescendantsAndSelf(System.Collections.Generic.IEnumerable{System.Xml.Linq.XElement},System.Xml.Linq.XName)">
      <summary vsli:raw="Returns a filtered collection of elements that contains every element in the source collection, and the descendents of every element in the source collection. Only elements that have a matching &lt;see cref=&quot;T:System.Xml.Linq.XName&quot; /&gt; are included in the collection.">Retourne une collection filtrée d'éléments qui contient tous les éléments de la collection source et leurs descendants. Seuls les éléments avec un <see cref="T:System.Xml.Linq.XName" /> correspondant sont inclus dans la collection.</summary>
      <param name="source" vsli:raw="An &lt;see cref=&quot;T:System.Collections.Generic.IEnumerable`1&quot; /&gt; of &lt;see cref=&quot;T:System.Xml.Linq.XElement&quot; /&gt; that contains the source collection.">
        <see cref="T:System.Collections.Generic.IEnumerable`1" /> de <see cref="T:System.Xml.Linq.XElement" /> qui contient la collection source.</param>
      <param name="name" vsli:raw="The &lt;see cref=&quot;T:System.Xml.Linq.XName&quot; /&gt; to match.">
        <see cref="T:System.Xml.Linq.XName" /> à mettre en correspondance.</param>
      <returns vsli:raw="An &lt;see cref=&quot;T:System.Collections.Generic.IEnumerable`1&quot; /&gt; of &lt;see cref=&quot;T:System.Xml.Linq.XElement&quot; /&gt; that contains every element in the source collection, and the descendents of every element in the source collection. Only elements that have a matching &lt;see cref=&quot;T:System.Xml.Linq.XName&quot; /&gt; are included in the collection.">
        <see cref="T:System.Collections.Generic.IEnumerable`1" /> de <see cref="T:System.Xml.Linq.XElement" /> qui contient tous les éléments de la collection source et leurs descendants. Seuls les éléments avec un <see cref="T:System.Xml.Linq.XName" /> correspondant sont inclus dans la collection.</returns>
    </member>
    <member name="M:System.Xml.Linq.Extensions.Elements``1(System.Collections.Generic.IEnumerable{``0})">
      <summary vsli:raw="Returns a collection of the child elements of every element and document in the source collection.">Retourne une collection des éléments enfants de chaque élément et document de la collection source.</summary>
      <param name="source" vsli:raw="An &lt;see cref=&quot;T:System.Collections.Generic.IEnumerable`1&quot; /&gt; of &lt;see cref=&quot;T:System.Xml.Linq.XElement&quot; /&gt; that contains the source collection.">
        <see cref="T:System.Collections.Generic.IEnumerable`1" /> de <see cref="T:System.Xml.Linq.XElement" /> qui contient la collection source.</param>
      <typeparam name="T" vsli:raw="The type of the objects in &lt;paramref name=&quot;source&quot; /&gt;, constrained to &lt;see cref=&quot;T:System.Xml.Linq.XContainer&quot; /&gt;.">Type des objets de <paramref name="source" />, contraint par <see cref="T:System.Xml.Linq.XContainer" />.</typeparam>
      <returns vsli:raw="An &lt;see cref=&quot;T:System.Collections.Generic.IEnumerable`1&quot; /&gt; of &lt;see cref=&quot;T:System.Xml.Linq.XElement&quot; /&gt; of the child elements of every element or document in the source collection.">
        <see cref="T:System.Collections.Generic.IEnumerable`1" /> de <see cref="T:System.Xml.Linq.XElement" /> des éléments enfants de chaque élément ou document de la collection source.</returns>
    </member>
    <member name="M:System.Xml.Linq.Extensions.Elements``1(System.Collections.Generic.IEnumerable{``0},System.Xml.Linq.XName)">
      <summary vsli:raw="Returns a filtered collection of the child elements of every element and document in the source collection. Only elements that have a matching &lt;see cref=&quot;T:System.Xml.Linq.XName&quot; /&gt; are included in the collection.">Retourne une collection filtrée des éléments enfants de chaque élément et document de la collection source. Seuls les éléments avec un <see cref="T:System.Xml.Linq.XName" /> correspondant sont inclus dans la collection.</summary>
      <param name="source" vsli:raw="An &lt;see cref=&quot;T:System.Collections.Generic.IEnumerable`1&quot; /&gt; of &lt;see cref=&quot;T:System.Xml.Linq.XElement&quot; /&gt; that contains the source collection.">
        <see cref="T:System.Collections.Generic.IEnumerable`1" /> de <see cref="T:System.Xml.Linq.XElement" /> qui contient la collection source.</param>
      <param name="name" vsli:raw="The &lt;see cref=&quot;T:System.Xml.Linq.XName&quot; /&gt; to match.">
        <see cref="T:System.Xml.Linq.XName" /> à mettre en correspondance.</param>
      <typeparam name="T" vsli:raw="The type of the objects in &lt;paramref name=&quot;source&quot; /&gt;, constrained to &lt;see cref=&quot;T:System.Xml.Linq.XContainer&quot; /&gt;.">Type des objets de <paramref name="source" />, contraint par <see cref="T:System.Xml.Linq.XContainer" />.</typeparam>
      <returns vsli:raw="An &lt;see cref=&quot;T:System.Collections.Generic.IEnumerable`1&quot; /&gt; of &lt;see cref=&quot;T:System.Xml.Linq.XElement&quot; /&gt; of the child elements of every element and document in the source collection. Only elements that have a matching &lt;see cref=&quot;T:System.Xml.Linq.XName&quot; /&gt; are included in the collection.">
        <see cref="T:System.Collections.Generic.IEnumerable`1" /> de <see cref="T:System.Xml.Linq.XElement" /> des éléments enfants de chaque élément et document de la collection source. Seuls les éléments avec un <see cref="T:System.Xml.Linq.XName" /> correspondant sont inclus dans la collection.</returns>
    </member>
    <member name="M:System.Xml.Linq.Extensions.InDocumentOrder``1(System.Collections.Generic.IEnumerable{``0})">
      <summary vsli:raw="Returns a collection of nodes that contains all nodes in the source collection, sorted in document order.">Retourne une collection de nœuds qui contient tous les nœuds de la collection source, triés selon l'ordre des documents.</summary>
      <param name="source" vsli:raw="An &lt;see cref=&quot;T:System.Collections.Generic.IEnumerable`1&quot; /&gt; of &lt;see cref=&quot;T:System.Xml.Linq.XNode&quot; /&gt; that contains the source collection.">
        <see cref="T:System.Collections.Generic.IEnumerable`1" /> de <see cref="T:System.Xml.Linq.XNode" /> qui contient la collection source.</param>
      <typeparam name="T" vsli:raw="The type of the objects in &lt;paramref name=&quot;source&quot; /&gt;, constrained to &lt;see cref=&quot;T:System.Xml.Linq.XNode&quot; /&gt;.">Type des objets de <paramref name="source" />, contraint par <see cref="T:System.Xml.Linq.XNode" />.</typeparam>
      <returns vsli:raw="An &lt;see cref=&quot;T:System.Collections.Generic.IEnumerable`1&quot; /&gt; of &lt;see cref=&quot;T:System.Xml.Linq.XNode&quot; /&gt; that contains all nodes in the source collection, sorted in document order.">
        <see cref="T:System.Collections.Generic.IEnumerable`1" /> de <see cref="T:System.Xml.Linq.XNode" /> qui contient tous les nœuds de la collection source, triés selon l'ordre des documents.</returns>
    </member>
    <member name="M:System.Xml.Linq.Extensions.Nodes``1(System.Collections.Generic.IEnumerable{``0})">
      <summary vsli:raw="Returns a collection of the child nodes of every document and element in the source collection.">Retourne une collection des nœuds enfants de chaque document et élément de la collection source.</summary>
      <param name="source" vsli:raw="An &lt;see cref=&quot;T:System.Collections.Generic.IEnumerable`1&quot; /&gt; of &lt;see cref=&quot;T:System.Xml.Linq.XNode&quot; /&gt; that contains the source collection.">
        <see cref="T:System.Collections.Generic.IEnumerable`1" /> de <see cref="T:System.Xml.Linq.XNode" /> qui contient la collection source.</param>
      <typeparam name="T" vsli:raw="The type of the objects in &lt;paramref name=&quot;source&quot; /&gt;, constrained to &lt;see cref=&quot;T:System.Xml.Linq.XContainer&quot; /&gt;.">Type des objets de <paramref name="source" />, contraint par <see cref="T:System.Xml.Linq.XContainer" />.</typeparam>
      <returns vsli:raw="An &lt;see cref=&quot;T:System.Collections.Generic.IEnumerable`1&quot; /&gt; of &lt;see cref=&quot;T:System.Xml.Linq.XNode&quot; /&gt; of the child nodes of every document and element in the source collection.">
        <see cref="T:System.Collections.Generic.IEnumerable`1" /> de <see cref="T:System.Xml.Linq.XNode" /> des nœuds enfants de chaque document et élément de la collection source.</returns>
    </member>
    <member name="M:System.Xml.Linq.Extensions.Remove(System.Collections.Generic.IEnumerable{System.Xml.Linq.XAttribute})">
      <summary vsli:raw="Removes every attribute in the source collection from its parent element.">Supprime chaque attribut de la collection source de son élément parent.</summary>
      <param name="source" vsli:raw="An &lt;see cref=&quot;T:System.Collections.Generic.IEnumerable`1&quot; /&gt; of &lt;see cref=&quot;T:System.Xml.Linq.XAttribute&quot; /&gt; that contains the source collection.">
        <see cref="T:System.Collections.Generic.IEnumerable`1" /> de <see cref="T:System.Xml.Linq.XAttribute" /> qui contient la collection source.</param>
    </member>
    <member name="M:System.Xml.Linq.Extensions.Remove``1(System.Collections.Generic.IEnumerable{``0})">
      <summary vsli:raw="Removes every node in the source collection from its parent node.">Supprime chaque nœud de la collection source de son nœud parent.</summary>
      <param name="source" vsli:raw="An &lt;see cref=&quot;T:System.Collections.Generic.IEnumerable`1&quot; /&gt; of &lt;see cref=&quot;T:System.Xml.Linq.XNode&quot; /&gt; that contains the source collection.">
        <see cref="T:System.Collections.Generic.IEnumerable`1" /> de <see cref="T:System.Xml.Linq.XNode" /> qui contient la collection source.</param>
      <typeparam name="T" vsli:raw="The type of the objects in &lt;paramref name=&quot;source&quot; /&gt;, constrained to &lt;see cref=&quot;T:System.Xml.Linq.XNode&quot; /&gt;.">Type des objets de <paramref name="source" />, contraint par <see cref="T:System.Xml.Linq.XNode" />.</typeparam>
    </member>
    <member name="T:System.Xml.Linq.LoadOptions">
      <summary vsli:raw="Specifies load options when parsing XML.">Spécifie les options de chargement à utiliser pendant l'analyse XML.</summary>
    </member>
    <member name="F:System.Xml.Linq.LoadOptions.None">
      <summary vsli:raw="Does not preserve insignificant white space or load base URI and line information.">Ne conserve pas les espaces blancs non significatifs ou ne charge pas l'URI de base et les informations de ligne.</summary>
    </member>
    <member name="F:System.Xml.Linq.LoadOptions.PreserveWhitespace">
      <summary vsli:raw="Preserves insignificant white space while parsing.">Conserve les espaces blancs non significatifs lors de l'analyse.</summary>
    </member>
    <member name="F:System.Xml.Linq.LoadOptions.SetBaseUri">
      <summary vsli:raw="Requests the base URI information from the &lt;see cref=&quot;T:System.Xml.XmlReader&quot; /&gt;, and makes it available via the &lt;see cref=&quot;P:System.Xml.Linq.XObject.BaseUri&quot; /&gt; property.">Demande les informations d'URI de base au <see cref="T:System.Xml.XmlReader" />, et les rend disponibles via la propriété <see cref="P:System.Xml.Linq.XObject.BaseUri" />.</summary>
    </member>
    <member name="F:System.Xml.Linq.LoadOptions.SetLineInfo">
      <summary vsli:raw="Requests the line information from the &lt;see cref=&quot;T:System.Xml.XmlReader&quot; /&gt; and makes it available via properties on &lt;see cref=&quot;T:System.Xml.Linq.XObject&quot; /&gt;.">Demande les informations de ligne au <see cref="T:System.Xml.XmlReader" />, et les rend disponibles via des propriétés sur <see cref="T:System.Xml.Linq.XObject" />.</summary>
    </member>
    <member name="T:System.Xml.Linq.ReaderOptions">
      <summary vsli:raw="Specifies whether to omit duplicate namespaces when loading an &lt;see cref=&quot;T:System.Xml.Linq.XDocument&quot; /&gt; with an &lt;see cref=&quot;T:System.Xml.XmlReader&quot; /&gt;.">Spécifie s'il faut omettre des espaces de noms en double lors du chargement d'un <see cref="T:System.Xml.Linq.XDocument" /> avec un <see cref="T:System.Xml.XmlReader" />.</summary>
    </member>
    <member name="F:System.Xml.Linq.ReaderOptions.None">
      <summary vsli:raw="No reader options specified.">Aucune option de lecteur n'est spécifiée.</summary>
    </member>
    <member name="F:System.Xml.Linq.ReaderOptions.OmitDuplicateNamespaces">
      <summary vsli:raw="Omit duplicate namespaces when loading the &lt;see cref=&quot;T:System.Xml.Linq.XDocument&quot; /&gt;.">Omettez des espaces de noms en double lors du chargement du <see cref="T:System.Xml.Linq.XDocument" />.</summary>
    </member>
    <member name="T:System.Xml.Linq.SaveOptions">
      <summary vsli:raw="Specifies serialization options.">Spécifie les options de sérialisation.</summary>
    </member>
    <member name="F:System.Xml.Linq.SaveOptions.DisableFormatting">
      <summary vsli:raw="Preserve all insignificant white space while serializing.">Conserver tout espace blanc non significatif lors de la sérialisation.</summary>
    </member>
    <member name="F:System.Xml.Linq.SaveOptions.None">
      <summary vsli:raw="Format (indent) the XML while serializing.">Mettre en forme (en retrait) le code XML lors de la sérialisation.</summary>
    </member>
    <member name="F:System.Xml.Linq.SaveOptions.OmitDuplicateNamespaces">
      <summary vsli:raw="Remove the duplicate namespace declarations while serializing.">Supprimez les déclarations d'espace de noms en double lors de la sérialisation.</summary>
    </member>
    <member name="T:System.Xml.Linq.XAttribute">
      <summary vsli:raw="Represents an XML attribute.">Représente un attribut XML.</summary>
    </member>
    <member name="M:System.Xml.Linq.XAttribute.#ctor(System.Xml.Linq.XAttribute)">
      <summary vsli:raw="Initializes a new instance of the &lt;see cref=&quot;T:System.Xml.Linq.XAttribute&quot; /&gt; class from another &lt;see cref=&quot;T:System.Xml.Linq.XAttribute&quot; /&gt; object.">Initialise une nouvelle instance de la classe <see cref="T:System.Xml.Linq.XAttribute" /> à partir d'un autre objet <see cref="T:System.Xml.Linq.XAttribute" />.</summary>
      <param name="other" vsli:raw="An &lt;see cref=&quot;T:System.Xml.Linq.XAttribute&quot; /&gt; object to copy from.">Objet <see cref="T:System.Xml.Linq.XAttribute" /> à partir duquel effectuer la copie.</param>
      <exception cref="T:System.ArgumentNullException" vsli:raw="The &lt;paramref name=&quot;other&quot; /&gt; parameter is &lt;see langword=&quot;null&quot; /&gt;.">Le paramètre <paramref name="other" /> a la valeur <see langword="null" />.</exception>
    </member>
    <member name="M:System.Xml.Linq.XAttribute.#ctor(System.Xml.Linq.XName,System.Object)">
      <summary vsli:raw="Initializes a new instance of the &lt;see cref=&quot;T:System.Xml.Linq.XAttribute&quot; /&gt; class from the specified name and value.">Initialise une nouvelle instance de la classe <see cref="T:System.Xml.Linq.XAttribute" /> à partir de la valeur et du nom spécifiés.</summary>
      <param name="name" vsli:raw="The &lt;see cref=&quot;T:System.Xml.Linq.XName&quot; /&gt; of the attribute.">
        <see cref="T:System.Xml.Linq.XName" /> de l'attribut.</param>
      <param name="value" vsli:raw="An &lt;see cref=&quot;T:System.Object&quot; /&gt; containing the value of the attribute.">
        <see cref="T:System.Object" /> contenant la valeur de l'attribut.</param>
      <exception cref="T:System.ArgumentNullException" vsli:raw="The &lt;paramref name=&quot;name&quot; /&gt; or &lt;paramref name=&quot;value&quot; /&gt; parameter is &lt;see langword=&quot;null&quot; /&gt;.">Le paramètre <paramref name="name" /> ou <paramref name="value" /> est <see langword="null" />.</exception>
    </member>
    <member name="M:System.Xml.Linq.XAttribute.op_Explicit(System.Xml.Linq.XAttribute)~System.Boolean">
      <summary vsli:raw="Cast the value of this &lt;see cref=&quot;T:System.Xml.Linq.XAttribute&quot; /&gt; to a &lt;see cref=&quot;T:System.Boolean&quot; /&gt;.">Castez la valeur de ce <see cref="T:System.Xml.Linq.XAttribute" /> en <see cref="T:System.Boolean" />.</summary>
      <param name="attribute" vsli:raw="The &lt;see cref=&quot;T:System.Xml.Linq.XAttribute&quot; /&gt; to cast to &lt;see cref=&quot;T:System.Boolean&quot; /&gt;.">
        <see cref="T:System.Xml.Linq.XAttribute" /> à caster en <see cref="T:System.Boolean" />.</param>
      <exception cref="T:System.FormatException" vsli:raw="The attribute does not contain a valid &lt;see cref=&quot;T:System.Boolean&quot; /&gt; value.">L'attribut ne contient pas de valeur <see cref="T:System.Boolean" /> valide.</exception>
      <exception cref="T:System.ArgumentNullException" vsli:raw="The &lt;paramref name=&quot;attribute&quot; /&gt; parameter is &lt;see langword=&quot;null&quot; /&gt;.">Le paramètre <paramref name="attribute" /> a la valeur <see langword="null" />.</exception>
      <returns vsli:raw="A &lt;see cref=&quot;T:System.Boolean&quot; /&gt; that contains the content of this &lt;see cref=&quot;T:System.Xml.Linq.XAttribute&quot; /&gt;.">
        <see cref="T:System.Boolean" /> qui contient le contenu de ce <see cref="T:System.Xml.Linq.XAttribute" />.</returns>
    </member>
    <member name="M:System.Xml.Linq.XAttribute.op_Explicit(System.Xml.Linq.XAttribute)~System.DateTime">
      <summary vsli:raw="Cast the value of this &lt;see cref=&quot;T:System.Xml.Linq.XAttribute&quot; /&gt; to a &lt;see cref=&quot;T:System.DateTime&quot; /&gt;.">Castez la valeur de ce <see cref="T:System.Xml.Linq.XAttribute" /> en <see cref="T:System.DateTime" />.</summary>
      <param name="attribute" vsli:raw="The &lt;see cref=&quot;T:System.Xml.Linq.XAttribute&quot; /&gt; to cast to &lt;see cref=&quot;T:System.DateTime&quot; /&gt;.">
        <see cref="T:System.Xml.Linq.XAttribute" /> à caster en <see cref="T:System.DateTime" />.</param>
      <exception cref="T:System.FormatException" vsli:raw="The attribute does not contain a valid &lt;see cref=&quot;T:System.DateTime&quot; /&gt; value.">L'attribut ne contient pas de valeur <see cref="T:System.DateTime" /> valide.</exception>
      <exception cref="T:System.ArgumentNullException" vsli:raw="The &lt;paramref name=&quot;attribute&quot; /&gt; parameter is &lt;see langword=&quot;null&quot; /&gt;.">Le paramètre <paramref name="attribute" /> a la valeur <see langword="null" />.</exception>
      <returns vsli:raw="A &lt;see cref=&quot;T:System.DateTime&quot; /&gt; that contains the content of this &lt;see cref=&quot;T:System.Xml.Linq.XAttribute&quot; /&gt;.">
        <see cref="T:System.DateTime" /> qui contient le contenu de ce <see cref="T:System.Xml.Linq.XAttribute" />.</returns>
    </member>
    <member name="M:System.Xml.Linq.XAttribute.op_Explicit(System.Xml.Linq.XAttribute)~System.DateTimeOffset">
      <summary vsli:raw="Cast the value of this &lt;see cref=&quot;T:System.Xml.Linq.XAttribute&quot; /&gt; to a &lt;see cref=&quot;T:System.DateTimeOffset&quot; /&gt;.">Castez la valeur de ce <see cref="T:System.Xml.Linq.XAttribute" /> en <see cref="T:System.DateTimeOffset" />.</summary>
      <param name="attribute" vsli:raw="The &lt;see cref=&quot;T:System.Xml.Linq.XAttribute&quot; /&gt; to cast to &lt;see cref=&quot;T:System.DateTimeOffset&quot; /&gt;.">
        <see cref="T:System.Xml.Linq.XAttribute" /> à caster en <see cref="T:System.DateTimeOffset" />.</param>
      <exception cref="T:System.FormatException" vsli:raw="The attribute does not contain a valid &lt;see cref=&quot;T:System.DateTimeOffset&quot; /&gt; value.">L'attribut ne contient pas de valeur <see cref="T:System.DateTimeOffset" /> valide.</exception>
      <exception cref="T:System.ArgumentNullException" vsli:raw="The &lt;paramref name=&quot;attribute&quot; /&gt; parameter is &lt;see langword=&quot;null&quot; /&gt;.">Le paramètre <paramref name="attribute" /> a la valeur <see langword="null" />.</exception>
      <returns vsli:raw="A &lt;see cref=&quot;T:System.DateTimeOffset&quot; /&gt; that contains the content of this &lt;see cref=&quot;T:System.Xml.Linq.XAttribute&quot; /&gt;.">
        <see cref="T:System.DateTimeOffset" /> qui contient le contenu de ce <see cref="T:System.Xml.Linq.XAttribute" />.</returns>
    </member>
    <member name="M:System.Xml.Linq.XAttribute.op_Explicit(System.Xml.Linq.XAttribute)~System.Decimal">
      <summary vsli:raw="Cast the value of this &lt;see cref=&quot;T:System.Xml.Linq.XAttribute&quot; /&gt; to a &lt;see cref=&quot;T:System.Decimal&quot; /&gt;.">Castez la valeur de ce <see cref="T:System.Xml.Linq.XAttribute" /> en <see cref="T:System.Decimal" />.</summary>
      <param name="attribute" vsli:raw="The &lt;see cref=&quot;T:System.Xml.Linq.XAttribute&quot; /&gt; to cast to &lt;see cref=&quot;T:System.Decimal&quot; /&gt;.">
        <see cref="T:System.Xml.Linq.XAttribute" /> à caster en <see cref="T:System.Decimal" />.</param>
      <exception cref="T:System.FormatException" vsli:raw="The attribute does not contain a valid &lt;see cref=&quot;T:System.Decimal&quot; /&gt; value.">L'attribut ne contient pas de valeur <see cref="T:System.Decimal" /> valide.</exception>
      <exception cref="T:System.ArgumentNullException" vsli:raw="The &lt;paramref name=&quot;attribute&quot; /&gt; parameter is &lt;see langword=&quot;null&quot; /&gt;.">Le paramètre <paramref name="attribute" /> a la valeur <see langword="null" />.</exception>
      <returns vsli:raw="A &lt;see cref=&quot;T:System.Decimal&quot; /&gt; that contains the content of this &lt;see cref=&quot;T:System.Xml.Linq.XAttribute&quot; /&gt;.">
        <see cref="T:System.Decimal" /> qui contient le contenu de ce <see cref="T:System.Xml.Linq.XAttribute" />.</returns>
    </member>
    <member name="M:System.Xml.Linq.XAttribute.op_Explicit(System.Xml.Linq.XAttribute)~System.Double">
      <summary vsli:raw="Cast the value of this &lt;see cref=&quot;T:System.Xml.Linq.XAttribute&quot; /&gt; to a &lt;see cref=&quot;T:System.Double&quot; /&gt;.">Castez la valeur de ce <see cref="T:System.Xml.Linq.XAttribute" /> en <see cref="T:System.Double" />.</summary>
      <param name="attribute" vsli:raw="The &lt;see cref=&quot;T:System.Xml.Linq.XAttribute&quot; /&gt; to cast to &lt;see cref=&quot;T:System.Double&quot; /&gt;.">
        <see cref="T:System.Xml.Linq.XAttribute" /> à caster en <see cref="T:System.Double" />.</param>
      <exception cref="T:System.FormatException" vsli:raw="The attribute does not contain a valid &lt;see cref=&quot;T:System.Double&quot; /&gt; value.">L'attribut ne contient pas de valeur <see cref="T:System.Double" /> valide.</exception>
      <exception cref="T:System.ArgumentNullException" vsli:raw="The &lt;paramref name=&quot;attribute&quot; /&gt; parameter is &lt;see langword=&quot;null&quot; /&gt;.">Le paramètre <paramref name="attribute" /> a la valeur <see langword="null" />.</exception>
      <returns vsli:raw="A &lt;see cref=&quot;T:System.Double&quot; /&gt; that contains the content of this &lt;see cref=&quot;T:System.Xml.Linq.XAttribute&quot; /&gt;.">
        <see cref="T:System.Double" /> qui contient le contenu de ce <see cref="T:System.Xml.Linq.XAttribute" />.</returns>
    </member>
    <member name="M:System.Xml.Linq.XAttribute.op_Explicit(System.Xml.Linq.XAttribute)~System.Guid">
      <summary vsli:raw="Cast the value of this &lt;see cref=&quot;T:System.Xml.Linq.XAttribute&quot; /&gt; to a &lt;see cref=&quot;T:System.Guid&quot; /&gt;.">Castez la valeur de ce <see cref="T:System.Xml.Linq.XAttribute" /> en <see cref="T:System.Guid" />.</summary>
      <param name="attribute" vsli:raw="The &lt;see cref=&quot;T:System.Xml.Linq.XAttribute&quot; /&gt; to cast to &lt;see cref=&quot;T:System.Guid&quot; /&gt;.">
        <see cref="T:System.Xml.Linq.XAttribute" /> à caster en <see cref="T:System.Guid" />.</param>
      <exception cref="T:System.FormatException" vsli:raw="The attribute does not contain a valid &lt;see cref=&quot;T:System.Guid&quot; /&gt; value.">L'attribut ne contient pas de valeur <see cref="T:System.Guid" /> valide.</exception>
      <exception cref="T:System.ArgumentNullException" vsli:raw="The &lt;paramref name=&quot;attribute&quot; /&gt; parameter is &lt;see langword=&quot;null&quot; /&gt;.">Le paramètre <paramref name="attribute" /> a la valeur <see langword="null" />.</exception>
      <returns vsli:raw="A &lt;see cref=&quot;T:System.Guid&quot; /&gt; that contains the content of this &lt;see cref=&quot;T:System.Xml.Linq.XAttribute&quot; /&gt;.">
        <see cref="T:System.Guid" /> qui contient le contenu de ce <see cref="T:System.Xml.Linq.XAttribute" />.</returns>
    </member>
    <member name="M:System.Xml.Linq.XAttribute.op_Explicit(System.Xml.Linq.XAttribute)~System.Int32">
      <summary vsli:raw="Cast the value of this &lt;see cref=&quot;T:System.Xml.Linq.XAttribute&quot; /&gt; to an &lt;see cref=&quot;T:System.Int32&quot; /&gt;.">Castez la valeur de ce <see cref="T:System.Xml.Linq.XAttribute" /> en <see cref="T:System.Int32" />.</summary>
      <param name="attribute" vsli:raw="The &lt;see cref=&quot;T:System.Xml.Linq.XAttribute&quot; /&gt; to cast to &lt;see cref=&quot;T:System.Int32&quot; /&gt;.">
        <see cref="T:System.Xml.Linq.XAttribute" /> à caster en <see cref="T:System.Int32" />.</param>
      <exception cref="T:System.FormatException" vsli:raw="The attribute does not contain a valid &lt;see cref=&quot;T:System.Int32&quot; /&gt; value.">L'attribut ne contient pas de valeur <see cref="T:System.Int32" /> valide.</exception>
      <exception cref="T:System.ArgumentNullException" vsli:raw="The &lt;paramref name=&quot;attribute&quot; /&gt; parameter is &lt;see langword=&quot;null&quot; /&gt;.">Le paramètre <paramref name="attribute" /> a la valeur <see langword="null" />.</exception>
      <returns vsli:raw="A &lt;see cref=&quot;T:System.Int32&quot; /&gt; that contains the content of this &lt;see cref=&quot;T:System.Xml.Linq.XAttribute&quot; /&gt;.">
        <see cref="T:System.Int32" /> qui contient le contenu de ce <see cref="T:System.Xml.Linq.XAttribute" />.</returns>
    </member>
    <member name="M:System.Xml.Linq.XAttribute.op_Explicit(System.Xml.Linq.XAttribute)~System.Int64">
      <summary vsli:raw="Cast the value of this &lt;see cref=&quot;T:System.Xml.Linq.XAttribute&quot; /&gt; to an &lt;see cref=&quot;T:System.Int64&quot; /&gt;.">Castez la valeur de ce <see cref="T:System.Xml.Linq.XAttribute" /> en <see cref="T:System.Int64" />.</summary>
      <param name="attribute" vsli:raw="The &lt;see cref=&quot;T:System.Xml.Linq.XAttribute&quot; /&gt; to cast to &lt;see cref=&quot;T:System.Int64&quot; /&gt;.">
        <see cref="T:System.Xml.Linq.XAttribute" /> à caster en <see cref="T:System.Int64" />.</param>
      <exception cref="T:System.FormatException" vsli:raw="The attribute does not contain a valid &lt;see cref=&quot;T:System.Int64&quot; /&gt; value.">L'attribut ne contient pas de valeur <see cref="T:System.Int64" /> valide.</exception>
      <exception cref="T:System.ArgumentNullException" vsli:raw="The &lt;paramref name=&quot;attribute&quot; /&gt; parameter is &lt;see langword=&quot;null&quot; /&gt;.">Le paramètre <paramref name="attribute" /> a la valeur <see langword="null" />.</exception>
      <returns vsli:raw="A &lt;see cref=&quot;T:System.Int64&quot; /&gt; that contains the content of this &lt;see cref=&quot;T:System.Xml.Linq.XAttribute&quot; /&gt;.">
        <see cref="T:System.Int64" /> qui contient le contenu de ce <see cref="T:System.Xml.Linq.XAttribute" />.</returns>
    </member>
    <member name="M:System.Xml.Linq.XAttribute.op_Explicit(System.Xml.Linq.XAttribute)~System.Nullable{System.Boolean}">
      <summary vsli:raw="Cast the value of this &lt;see cref=&quot;T:System.Xml.Linq.XAttribute&quot; /&gt; to a &lt;see cref=&quot;T:System.Nullable`1&quot; /&gt; of &lt;see cref=&quot;T:System.Boolean&quot; /&gt;.">Castez la valeur de ce <see cref="T:System.Xml.Linq.XAttribute" /> en <see cref="T:System.Nullable`1" /> de <see cref="T:System.Boolean" />.</summary>
      <param name="attribute" vsli:raw="The &lt;see cref=&quot;T:System.Xml.Linq.XAttribute&quot; /&gt; to cast to &lt;see cref=&quot;T:System.Nullable`1&quot; /&gt; of &lt;see cref=&quot;T:System.Boolean&quot; /&gt;.">
        <see cref="T:System.Xml.Linq.XAttribute" /> à caster en <see cref="T:System.Nullable`1" /> de <see cref="T:System.Boolean" />.</param>
      <exception cref="T:System.FormatException" vsli:raw="The attribute does not contain a valid &lt;see cref=&quot;T:System.Boolean&quot; /&gt; value.">L'attribut ne contient pas de valeur <see cref="T:System.Boolean" /> valide.</exception>
      <returns vsli:raw="A &lt;see cref=&quot;T:System.Nullable`1&quot; /&gt; of &lt;see cref=&quot;T:System.Boolean&quot; /&gt; that contains the content of this &lt;see cref=&quot;T:System.Xml.Linq.XAttribute&quot; /&gt;.">
        <see cref="T:System.Nullable`1" /> de <see cref="T:System.Boolean" /> qui contient le contenu de ce <see cref="T:System.Xml.Linq.XAttribute" />.</returns>
    </member>
    <member name="M:System.Xml.Linq.XAttribute.op_Explicit(System.Xml.Linq.XAttribute)~System.Nullable{System.DateTime}">
      <summary vsli:raw="Cast the value of this &lt;see cref=&quot;T:System.Xml.Linq.XAttribute&quot; /&gt; to a &lt;see cref=&quot;T:System.Nullable`1&quot; /&gt; of &lt;see cref=&quot;T:System.DateTime&quot; /&gt;.">Castez la valeur de ce <see cref="T:System.Xml.Linq.XAttribute" /> en <see cref="T:System.Nullable`1" /> de <see cref="T:System.DateTime" />.</summary>
      <param name="attribute" vsli:raw="The &lt;see cref=&quot;T:System.Xml.Linq.XAttribute&quot; /&gt; to cast to a &lt;see cref=&quot;T:System.Nullable`1&quot; /&gt; of &lt;see cref=&quot;T:System.DateTime&quot; /&gt;.">
        <see cref="T:System.Xml.Linq.XAttribute" /> à caster en <see cref="T:System.Nullable`1" /> de <see cref="T:System.DateTime" />.</param>
      <exception cref="T:System.FormatException" vsli:raw="The attribute does not contain a valid &lt;see cref=&quot;T:System.DateTime&quot; /&gt; value.">L'attribut ne contient pas de valeur <see cref="T:System.DateTime" /> valide.</exception>
      <returns vsli:raw="A &lt;see cref=&quot;T:System.Nullable`1&quot; /&gt; of &lt;see cref=&quot;T:System.DateTime&quot; /&gt; that contains the content of this &lt;see cref=&quot;T:System.Xml.Linq.XAttribute&quot; /&gt;.">
        <see cref="T:System.Nullable`1" /> de <see cref="T:System.DateTime" /> qui contient le contenu de ce <see cref="T:System.Xml.Linq.XAttribute" />.</returns>
    </member>
    <member name="M:System.Xml.Linq.XAttribute.op_Explicit(System.Xml.Linq.XAttribute)~System.Nullable{System.DateTimeOffset}">
      <summary vsli:raw="Cast the value of this &lt;see cref=&quot;T:System.Xml.Linq.XAttribute&quot; /&gt; to a &lt;see cref=&quot;T:System.Nullable`1&quot; /&gt; of &lt;see cref=&quot;T:System.DateTimeOffset&quot; /&gt;.">Castez la valeur de ce <see cref="T:System.Xml.Linq.XAttribute" /> en <see cref="T:System.Nullable`1" /> de <see cref="T:System.DateTimeOffset" />.</summary>
      <param name="attribute" vsli:raw="The &lt;see cref=&quot;T:System.Xml.Linq.XAttribute&quot; /&gt; to cast to a &lt;see cref=&quot;T:System.Nullable`1&quot; /&gt; of &lt;see cref=&quot;T:System.DateTimeOffset&quot; /&gt;.">
        <see cref="T:System.Xml.Linq.XAttribute" /> à caster en <see cref="T:System.Nullable`1" /> de <see cref="T:System.DateTimeOffset" />.</param>
      <exception cref="T:System.FormatException" vsli:raw="The attribute does not contain a valid &lt;see cref=&quot;T:System.DateTimeOffset&quot; /&gt; value.">L'attribut ne contient pas de valeur <see cref="T:System.DateTimeOffset" /> valide.</exception>
      <returns vsli:raw="A &lt;see cref=&quot;T:System.Nullable`1&quot; /&gt; of &lt;see cref=&quot;T:System.DateTimeOffset&quot; /&gt; that contains the content of this &lt;see cref=&quot;T:System.Xml.Linq.XAttribute&quot; /&gt;.">
        <see cref="T:System.Nullable`1" /> de <see cref="T:System.DateTimeOffset" /> qui contient le contenu de ce <see cref="T:System.Xml.Linq.XAttribute" />.</returns>
    </member>
    <member name="M:System.Xml.Linq.XAttribute.op_Explicit(System.Xml.Linq.XAttribute)~System.Nullable{System.Decimal}">
      <summary vsli:raw="Cast the value of this &lt;see cref=&quot;T:System.Xml.Linq.XAttribute&quot; /&gt; to a &lt;see cref=&quot;T:System.Nullable`1&quot; /&gt; of &lt;see cref=&quot;T:System.Decimal&quot; /&gt;.">Castez la valeur de ce <see cref="T:System.Xml.Linq.XAttribute" /> en <see cref="T:System.Nullable`1" /> de <see cref="T:System.Decimal" />.</summary>
      <param name="attribute" vsli:raw="The &lt;see cref=&quot;T:System.Xml.Linq.XAttribute&quot; /&gt; to cast to &lt;see cref=&quot;T:System.Nullable`1&quot; /&gt; of &lt;see cref=&quot;T:System.Decimal&quot; /&gt;.">
        <see cref="T:System.Xml.Linq.XAttribute" /> à caster en <see cref="T:System.Nullable`1" /> de <see cref="T:System.Decimal" />.</param>
      <exception cref="T:System.FormatException" vsli:raw="The attribute does not contain a valid &lt;see cref=&quot;T:System.Decimal&quot; /&gt; value.">L'attribut ne contient pas de valeur <see cref="T:System.Decimal" /> valide.</exception>
      <returns vsli:raw="A &lt;see cref=&quot;T:System.Nullable`1&quot; /&gt; of &lt;see cref=&quot;T:System.Decimal&quot; /&gt; that contains the content of this &lt;see cref=&quot;T:System.Xml.Linq.XAttribute&quot; /&gt;.">
        <see cref="T:System.Nullable`1" /> de <see cref="T:System.Decimal" /> qui contient le contenu de ce <see cref="T:System.Xml.Linq.XAttribute" />.</returns>
    </member>
    <member name="M:System.Xml.Linq.XAttribute.op_Explicit(System.Xml.Linq.XAttribute)~System.Nullable{System.Double}">
      <summary vsli:raw="Cast the value of this &lt;see cref=&quot;T:System.Xml.Linq.XAttribute&quot; /&gt; to a &lt;see cref=&quot;T:System.Nullable`1&quot; /&gt; of &lt;see cref=&quot;T:System.Double&quot; /&gt;.">Castez la valeur de ce <see cref="T:System.Xml.Linq.XAttribute" /> en <see cref="T:System.Nullable`1" /> de <see cref="T:System.Double" />.</summary>
      <param name="attribute" vsli:raw="The &lt;see cref=&quot;T:System.Xml.Linq.XAttribute&quot; /&gt; to cast to &lt;see cref=&quot;T:System.Nullable`1&quot; /&gt; of &lt;see cref=&quot;T:System.Double&quot; /&gt;.">
        <see cref="T:System.Xml.Linq.XAttribute" /> à caster en <see cref="T:System.Nullable`1" /> de <see cref="T:System.Double" />.</param>
      <exception cref="T:System.FormatException" vsli:raw="The attribute does not contain a valid &lt;see cref=&quot;T:System.Double&quot; /&gt; value.">L'attribut ne contient pas de valeur <see cref="T:System.Double" /> valide.</exception>
      <returns vsli:raw="A &lt;see cref=&quot;T:System.Nullable`1&quot; /&gt; of &lt;see cref=&quot;T:System.Double&quot; /&gt; that contains the content of this &lt;see cref=&quot;T:System.Xml.Linq.XAttribute&quot; /&gt;.">
        <see cref="T:System.Nullable`1" /> de <see cref="T:System.Double" /> qui contient le contenu de ce <see cref="T:System.Xml.Linq.XAttribute" />.</returns>
    </member>
    <member name="M:System.Xml.Linq.XAttribute.op_Explicit(System.Xml.Linq.XAttribute)~System.Nullable{System.Guid}">
      <summary vsli:raw="Cast the value of this &lt;see cref=&quot;T:System.Xml.Linq.XAttribute&quot; /&gt; to a &lt;see cref=&quot;T:System.Nullable`1&quot; /&gt; of &lt;see cref=&quot;T:System.Guid&quot; /&gt;.">Castez la valeur de ce <see cref="T:System.Xml.Linq.XAttribute" /> en <see cref="T:System.Nullable`1" /> de <see cref="T:System.Guid" />.</summary>
      <param name="attribute" vsli:raw="The &lt;see cref=&quot;T:System.Xml.Linq.XAttribute&quot; /&gt; to cast to a &lt;see cref=&quot;T:System.Nullable`1&quot; /&gt; of &lt;see cref=&quot;T:System.Guid&quot; /&gt;.">
        <see cref="T:System.Xml.Linq.XAttribute" /> à caster en <see cref="T:System.Nullable`1" /> de <see cref="T:System.Guid" />.</param>
      <exception cref="T:System.FormatException" vsli:raw="The attribute does not contain a valid &lt;see cref=&quot;T:System.Guid&quot; /&gt; value.">L'attribut ne contient pas de valeur <see cref="T:System.Guid" /> valide.</exception>
      <returns vsli:raw="A &lt;see cref=&quot;T:System.Nullable`1&quot; /&gt; of &lt;see cref=&quot;T:System.Guid&quot; /&gt; that contains the content of this &lt;see cref=&quot;T:System.Xml.Linq.XAttribute&quot; /&gt;.">
        <see cref="T:System.Nullable`1" /> de <see cref="T:System.Guid" /> qui contient le contenu de ce <see cref="T:System.Xml.Linq.XAttribute" />.</returns>
    </member>
    <member name="M:System.Xml.Linq.XAttribute.op_Explicit(System.Xml.Linq.XAttribute)~System.Nullable{System.Int32}">
      <summary vsli:raw="Cast the value of this &lt;see cref=&quot;T:System.Xml.Linq.XAttribute&quot; /&gt; to a &lt;see cref=&quot;T:System.Nullable`1&quot; /&gt; of &lt;see cref=&quot;T:System.Int32&quot; /&gt;.">Castez la valeur de ce <see cref="T:System.Xml.Linq.XAttribute" /> en <see cref="T:System.Nullable`1" /> de <see cref="T:System.Int32" />.</summary>
      <param name="attribute" vsli:raw="The &lt;see cref=&quot;T:System.Xml.Linq.XAttribute&quot; /&gt; to cast to a &lt;see cref=&quot;T:System.Nullable`1&quot; /&gt; of &lt;see cref=&quot;T:System.Int32&quot; /&gt;.">
        <see cref="T:System.Xml.Linq.XAttribute" /> à caster en <see cref="T:System.Nullable`1" /> de <see cref="T:System.Int32" />.</param>
      <returns vsli:raw="A &lt;see cref=&quot;T:System.Nullable`1&quot; /&gt; of &lt;see cref=&quot;T:System.Int32&quot; /&gt; that contains the content of this &lt;see cref=&quot;T:System.Xml.Linq.XAttribute&quot; /&gt;.">
        <see cref="T:System.Nullable`1" /> de <see cref="T:System.Int32" /> qui contient le contenu de ce <see cref="T:System.Xml.Linq.XAttribute" />.</returns>
    </member>
    <member name="M:System.Xml.Linq.XAttribute.op_Explicit(System.Xml.Linq.XAttribute)~System.Nullable{System.Int64}">
      <summary vsli:raw="Cast the value of this &lt;see cref=&quot;T:System.Xml.Linq.XAttribute&quot; /&gt; to a &lt;see cref=&quot;T:System.Nullable`1&quot; /&gt; of &lt;see cref=&quot;T:System.Int64&quot; /&gt;.">Castez la valeur de ce <see cref="T:System.Xml.Linq.XAttribute" /> en <see cref="T:System.Nullable`1" /> de <see cref="T:System.Int64" />.</summary>
      <param name="attribute" vsli:raw="The &lt;see cref=&quot;T:System.Xml.Linq.XAttribute&quot; /&gt; to cast to a &lt;see cref=&quot;T:System.Nullable`1&quot; /&gt; of &lt;see cref=&quot;T:System.Int64&quot; /&gt;.">
        <see cref="T:System.Xml.Linq.XAttribute" /> à caster en <see cref="T:System.Nullable`1" /> de <see cref="T:System.Int64" />.</param>
      <exception cref="T:System.FormatException" vsli:raw="The attribute does not contain a valid &lt;see cref=&quot;T:System.Int64&quot; /&gt; value.">L'attribut ne contient pas de valeur <see cref="T:System.Int64" /> valide.</exception>
      <returns vsli:raw="A &lt;see cref=&quot;T:System.Nullable`1&quot; /&gt; of &lt;see cref=&quot;T:System.Int64&quot; /&gt; that contains the content of this &lt;see cref=&quot;T:System.Xml.Linq.XAttribute&quot; /&gt;.">
        <see cref="T:System.Nullable`1" /> de <see cref="T:System.Int64" /> qui contient le contenu de ce <see cref="T:System.Xml.Linq.XAttribute" />.</returns>
    </member>
    <member name="M:System.Xml.Linq.XAttribute.op_Explicit(System.Xml.Linq.XAttribute)~System.Nullable{System.Single}">
      <summary vsli:raw="Cast the value of this &lt;see cref=&quot;T:System.Xml.Linq.XAttribute&quot; /&gt; to a &lt;see cref=&quot;T:System.Nullable`1&quot; /&gt; of &lt;see cref=&quot;T:System.Single&quot; /&gt;.">Castez la valeur de ce <see cref="T:System.Xml.Linq.XAttribute" /> en <see cref="T:System.Nullable`1" /> de <see cref="T:System.Single" />.</summary>
      <param name="attribute" vsli:raw="The &lt;see cref=&quot;T:System.Xml.Linq.XAttribute&quot; /&gt; to cast to &lt;see cref=&quot;T:System.Nullable`1&quot; /&gt; of &lt;see cref=&quot;T:System.Single&quot; /&gt;.">
        <see cref="T:System.Xml.Linq.XAttribute" /> à caster en <see cref="T:System.Nullable`1" /> de <see cref="T:System.Single" />.</param>
      <exception cref="T:System.FormatException" vsli:raw="The attribute does not contain a valid &lt;see cref=&quot;T:System.Single&quot; /&gt; value.">L'attribut ne contient pas de valeur <see cref="T:System.Single" /> valide.</exception>
      <returns vsli:raw="A &lt;see cref=&quot;T:System.Nullable`1&quot; /&gt; of &lt;see cref=&quot;T:System.Single&quot; /&gt; that contains the content of this &lt;see cref=&quot;T:System.Xml.Linq.XAttribute&quot; /&gt;.">
        <see cref="T:System.Nullable`1" /> de <see cref="T:System.Single" /> qui contient le contenu de ce <see cref="T:System.Xml.Linq.XAttribute" />.</returns>
    </member>
    <member name="M:System.Xml.Linq.XAttribute.op_Explicit(System.Xml.Linq.XAttribute)~System.Nullable{System.TimeSpan}">
      <summary vsli:raw="Cast the value of this &lt;see cref=&quot;T:System.Xml.Linq.XAttribute&quot; /&gt; to a &lt;see cref=&quot;T:System.Nullable`1&quot; /&gt; of &lt;see cref=&quot;T:System.TimeSpan&quot; /&gt;.">Castez la valeur de ce <see cref="T:System.Xml.Linq.XAttribute" /> en <see cref="T:System.Nullable`1" /> de <see cref="T:System.TimeSpan" />.</summary>
      <param name="attribute" vsli:raw="The &lt;see cref=&quot;T:System.Xml.Linq.XAttribute&quot; /&gt; to cast to a &lt;see cref=&quot;T:System.Nullable`1&quot; /&gt; of &lt;see cref=&quot;T:System.TimeSpan&quot; /&gt;.">
        <see cref="T:System.Xml.Linq.XAttribute" /> à caster en <see cref="T:System.Nullable`1" /> de <see cref="T:System.TimeSpan" />.</param>
      <exception cref="T:System.FormatException" vsli:raw="The attribute does not contain a valid &lt;see cref=&quot;T:System.TimeSpan&quot; /&gt; value.">L'attribut ne contient pas de valeur <see cref="T:System.TimeSpan" /> valide.</exception>
      <returns vsli:raw="A &lt;see cref=&quot;T:System.Nullable`1&quot; /&gt; of &lt;see cref=&quot;T:System.TimeSpan&quot; /&gt; that contains the content of this &lt;see cref=&quot;T:System.Xml.Linq.XAttribute&quot; /&gt;.">
        <see cref="T:System.Nullable`1" /> de <see cref="T:System.TimeSpan" /> qui contient le contenu de ce <see cref="T:System.Xml.Linq.XAttribute" />.</returns>
    </member>
    <member name="M:System.Xml.Linq.XAttribute.op_Explicit(System.Xml.Linq.XAttribute)~System.Nullable{System.UInt32}">
      <summary vsli:raw="Cast the value of this &lt;see cref=&quot;T:System.Xml.Linq.XAttribute&quot; /&gt; to a &lt;see cref=&quot;T:System.Nullable`1&quot; /&gt; of &lt;see cref=&quot;T:System.UInt32&quot; /&gt;.">Castez la valeur de ce <see cref="T:System.Xml.Linq.XAttribute" /> en <see cref="T:System.Nullable`1" /> de <see cref="T:System.UInt32" />.</summary>
      <param name="attribute" vsli:raw="The &lt;see cref=&quot;T:System.Xml.Linq.XAttribute&quot; /&gt; to cast to a &lt;see cref=&quot;T:System.Nullable`1&quot; /&gt; of &lt;see cref=&quot;T:System.UInt32&quot; /&gt;.">
        <see cref="T:System.Xml.Linq.XAttribute" /> à caster en <see cref="T:System.Nullable`1" /> de <see cref="T:System.UInt32" />.</param>
      <exception cref="T:System.FormatException" vsli:raw="The attribute does not contain a valid &lt;see cref=&quot;T:System.UInt32&quot; /&gt; value.">L'attribut ne contient pas de valeur <see cref="T:System.UInt32" /> valide.</exception>
      <returns vsli:raw="A &lt;see cref=&quot;T:System.Nullable`1&quot; /&gt; of &lt;see cref=&quot;T:System.UInt32&quot; /&gt; that contains the content of this &lt;see cref=&quot;T:System.Xml.Linq.XAttribute&quot; /&gt;.">
        <see cref="T:System.Nullable`1" /> de <see cref="T:System.UInt32" /> qui contient le contenu de ce <see cref="T:System.Xml.Linq.XAttribute" />.</returns>
    </member>
    <member name="M:System.Xml.Linq.XAttribute.op_Explicit(System.Xml.Linq.XAttribute)~System.Nullable{System.UInt64}">
      <summary vsli:raw="Cast the value of this &lt;see cref=&quot;T:System.Xml.Linq.XAttribute&quot; /&gt; to a &lt;see cref=&quot;T:System.Nullable`1&quot; /&gt; of &lt;see cref=&quot;T:System.UInt64&quot; /&gt;.">Castez la valeur de ce <see cref="T:System.Xml.Linq.XAttribute" /> en <see cref="T:System.Nullable`1" /> de <see cref="T:System.UInt64" />.</summary>
      <param name="attribute" vsli:raw="The &lt;see cref=&quot;T:System.Xml.Linq.XAttribute&quot; /&gt; to cast to a &lt;see cref=&quot;T:System.Nullable`1&quot; /&gt; of &lt;see cref=&quot;T:System.UInt64&quot; /&gt;.">
        <see cref="T:System.Xml.Linq.XAttribute" /> à caster en <see cref="T:System.Nullable`1" /> de <see cref="T:System.UInt64" />.</param>
      <exception cref="T:System.FormatException" vsli:raw="The attribute does not contain a valid &lt;see cref=&quot;T:System.UInt64&quot; /&gt; value.">L'attribut ne contient pas de valeur <see cref="T:System.UInt64" /> valide.</exception>
      <returns vsli:raw="A &lt;see cref=&quot;T:System.Nullable`1&quot; /&gt; of &lt;see cref=&quot;T:System.UInt64&quot; /&gt; that contains the content of this &lt;see cref=&quot;T:System.Xml.Linq.XAttribute&quot; /&gt;.">
        <see cref="T:System.Nullable`1" /> de <see cref="T:System.UInt64" /> qui contient le contenu de ce <see cref="T:System.Xml.Linq.XAttribute" />.</returns>
    </member>
    <member name="M:System.Xml.Linq.XAttribute.op_Explicit(System.Xml.Linq.XAttribute)~System.Single">
      <summary vsli:raw="Cast the value of this &lt;see cref=&quot;T:System.Xml.Linq.XAttribute&quot; /&gt; to a &lt;see cref=&quot;T:System.Single&quot; /&gt;.">Castez la valeur de ce <see cref="T:System.Xml.Linq.XAttribute" /> en <see cref="T:System.Single" />.</summary>
      <param name="attribute" vsli:raw="The &lt;see cref=&quot;T:System.Xml.Linq.XAttribute&quot; /&gt; to cast to &lt;see cref=&quot;T:System.Single&quot; /&gt;.">
        <see cref="T:System.Xml.Linq.XAttribute" /> à caster en <see cref="T:System.Single" />.</param>
      <exception cref="T:System.FormatException" vsli:raw="The attribute does not contain a valid &lt;see cref=&quot;T:System.Single&quot; /&gt; value.">L'attribut ne contient pas de valeur <see cref="T:System.Single" /> valide.</exception>
      <exception cref="T:System.ArgumentNullException" vsli:raw="The &lt;paramref name=&quot;attribute&quot; /&gt; parameter is &lt;see langword=&quot;null&quot; /&gt;.">Le paramètre <paramref name="attribute" /> a la valeur <see langword="null" />.</exception>
      <returns vsli:raw="A &lt;see cref=&quot;T:System.Single&quot; /&gt; that contains the content of this &lt;see cref=&quot;T:System.Xml.Linq.XAttribute&quot; /&gt;.">
        <see cref="T:System.Single" /> qui contient le contenu de ce <see cref="T:System.Xml.Linq.XAttribute" />.</returns>
    </member>
    <member name="M:System.Xml.Linq.XAttribute.op_Explicit(System.Xml.Linq.XAttribute)~System.String">
      <summary vsli:raw="Cast the value of this &lt;see cref=&quot;T:System.Xml.Linq.XAttribute&quot; /&gt; to a &lt;see cref=&quot;T:System.String&quot; /&gt;.">Castez la valeur de ce <see cref="T:System.Xml.Linq.XAttribute" /> en <see cref="T:System.String" />.</summary>
      <param name="attribute" vsli:raw="The &lt;see cref=&quot;T:System.Xml.Linq.XAttribute&quot; /&gt; to cast to &lt;see cref=&quot;T:System.String&quot; /&gt;.">
        <see cref="T:System.Xml.Linq.XAttribute" /> à caster en <see cref="T:System.String" />.</param>
      <returns vsli:raw="A &lt;see cref=&quot;T:System.String&quot; /&gt; that contains the content of this &lt;see cref=&quot;T:System.Xml.Linq.XAttribute&quot; /&gt;.">
        <see cref="T:System.String" /> qui contient le contenu de ce <see cref="T:System.Xml.Linq.XAttribute" />.</returns>
    </member>
    <member name="M:System.Xml.Linq.XAttribute.op_Explicit(System.Xml.Linq.XAttribute)~System.TimeSpan">
      <summary vsli:raw="Cast the value of this &lt;see cref=&quot;T:System.Xml.Linq.XAttribute&quot; /&gt; to a &lt;see cref=&quot;T:System.TimeSpan&quot; /&gt;.">Castez la valeur de ce <see cref="T:System.Xml.Linq.XAttribute" /> en <see cref="T:System.TimeSpan" />.</summary>
      <param name="attribute" vsli:raw="The &lt;see cref=&quot;T:System.Xml.Linq.XAttribute&quot; /&gt; to cast to &lt;see cref=&quot;T:System.TimeSpan&quot; /&gt;.">
        <see cref="T:System.Xml.Linq.XAttribute" /> à caster en <see cref="T:System.TimeSpan" />.</param>
      <exception cref="T:System.FormatException" vsli:raw="The attribute does not contain a valid &lt;see cref=&quot;T:System.TimeSpan&quot; /&gt; value.">L'attribut ne contient pas de valeur <see cref="T:System.TimeSpan" /> valide.</exception>
      <exception cref="T:System.ArgumentNullException" vsli:raw="The &lt;paramref name=&quot;attribute&quot; /&gt; parameter is &lt;see langword=&quot;null&quot; /&gt;.">Le paramètre <paramref name="attribute" /> a la valeur <see langword="null" />.</exception>
      <returns vsli:raw="A &lt;see cref=&quot;T:System.TimeSpan&quot; /&gt; that contains the content of this &lt;see cref=&quot;T:System.Xml.Linq.XAttribute&quot; /&gt;.">
        <see cref="T:System.TimeSpan" /> qui contient le contenu de ce <see cref="T:System.Xml.Linq.XAttribute" />.</returns>
    </member>
    <member name="M:System.Xml.Linq.XAttribute.op_Explicit(System.Xml.Linq.XAttribute)~System.UInt32">
      <summary vsli:raw="Cast the value of this &lt;see cref=&quot;T:System.Xml.Linq.XAttribute&quot; /&gt; to a &lt;see cref=&quot;T:System.UInt32&quot; /&gt;.">Castez la valeur de ce <see cref="T:System.Xml.Linq.XAttribute" /> en <see cref="T:System.UInt32" />.</summary>
      <param name="attribute" vsli:raw="The &lt;see cref=&quot;T:System.Xml.Linq.XAttribute&quot; /&gt; to cast to &lt;see cref=&quot;T:System.UInt32&quot; /&gt;.">
        <see cref="T:System.Xml.Linq.XAttribute" /> à caster en <see cref="T:System.UInt32" />.</param>
      <exception cref="T:System.FormatException" vsli:raw="The attribute does not contain a valid &lt;see cref=&quot;T:System.UInt32&quot; /&gt; value.">L'attribut ne contient pas de valeur <see cref="T:System.UInt32" /> valide.</exception>
      <exception cref="T:System.ArgumentNullException" vsli:raw="The &lt;paramref name=&quot;attribute&quot; /&gt; parameter is &lt;see langword=&quot;null&quot; /&gt;.">Le paramètre <paramref name="attribute" /> a la valeur <see langword="null" />.</exception>
      <returns vsli:raw="A &lt;see cref=&quot;T:System.UInt32&quot; /&gt; that contains the content of this &lt;see cref=&quot;T:System.Xml.Linq.XAttribute&quot; /&gt;.">
        <see cref="T:System.UInt32" /> qui contient le contenu de ce <see cref="T:System.Xml.Linq.XAttribute" />.</returns>
    </member>
    <member name="M:System.Xml.Linq.XAttribute.op_Explicit(System.Xml.Linq.XAttribute)~System.UInt64">
      <summary vsli:raw="Cast the value of this &lt;see cref=&quot;T:System.Xml.Linq.XAttribute&quot; /&gt; to a &lt;see cref=&quot;T:System.UInt64&quot; /&gt;.">Castez la valeur de ce <see cref="T:System.Xml.Linq.XAttribute" /> en <see cref="T:System.UInt64" />.</summary>
      <param name="attribute" vsli:raw="The &lt;see cref=&quot;T:System.Xml.Linq.XAttribute&quot; /&gt; to cast to &lt;see cref=&quot;T:System.UInt64&quot; /&gt;.">
        <see cref="T:System.Xml.Linq.XAttribute" /> à caster en <see cref="T:System.UInt64" />.</param>
      <exception cref="T:System.FormatException" vsli:raw="The attribute does not contain a valid &lt;see cref=&quot;T:System.UInt64&quot; /&gt; value.">L'attribut ne contient pas de valeur <see cref="T:System.UInt64" /> valide.</exception>
      <exception cref="T:System.ArgumentNullException" vsli:raw="The &lt;paramref name=&quot;attribute&quot; /&gt; parameter is &lt;see langword=&quot;null&quot; /&gt;.">Le paramètre <paramref name="attribute" /> a la valeur <see langword="null" />.</exception>
      <returns vsli:raw="A &lt;see cref=&quot;T:System.UInt64&quot; /&gt; that contains the content of this &lt;see cref=&quot;T:System.Xml.Linq.XAttribute&quot; /&gt;.">
        <see cref="T:System.UInt64" /> qui contient le contenu de ce <see cref="T:System.Xml.Linq.XAttribute" />.</returns>
    </member>
    <member name="M:System.Xml.Linq.XAttribute.Remove">
      <summary vsli:raw="Removes this attribute from its parent element.">Supprime cet attribut de son élément parent.</summary>
      <exception cref="T:System.InvalidOperationException" vsli:raw="The parent element is &lt;see langword=&quot;null&quot; /&gt;.">L’élément parent est <see langword="null" />.</exception>
    </member>
    <member name="M:System.Xml.Linq.XAttribute.SetValue(System.Object)">
      <summary vsli:raw="Sets the value of this attribute.">Définit la valeur de cet attribut.</summary>
      <param name="value" vsli:raw="The value to assign to this attribute.">Valeur à assigner à cet attribut.</param>
      <exception cref="T:System.ArgumentNullException" vsli:raw="The &lt;paramref name=&quot;value&quot; /&gt; parameter is &lt;see langword=&quot;null&quot; /&gt;.">Le paramètre <paramref name="value" /> a la valeur <see langword="null" />.</exception>
      <exception cref="T:System.ArgumentException" vsli:raw="The &lt;paramref name=&quot;value&quot; /&gt; is an &lt;see cref=&quot;T:System.Xml.Linq.XObject&quot; /&gt;.">La <paramref name="value" /> est un <see cref="T:System.Xml.Linq.XObject" />.</exception>
    </member>
    <member name="M:System.Xml.Linq.XAttribute.ToString">
      <summary vsli:raw="Converts the current &lt;see cref=&quot;T:System.Xml.Linq.XAttribute&quot; /&gt; object to a string representation.">Convertit l'objet <see cref="T:System.Xml.Linq.XAttribute" /> en cours en une représentation sous forme de chaîne.</summary>
      <returns vsli:raw="A &lt;see cref=&quot;T:System.String&quot; /&gt; containing the XML text representation of an attribute and its value.">
        <see cref="T:System.String" /> qui contient la représentation textuelle XML d'un attribut et sa valeur.</returns>
    </member>
    <member name="P:System.Xml.Linq.XAttribute.EmptySequence">
      <summary vsli:raw="Gets an empty collection of attributes.">Obtient une collection d'attributs vide.</summary>
      <returns vsli:raw="An &lt;see cref=&quot;T:System.Collections.Generic.IEnumerable`1&quot; /&gt; of &lt;see cref=&quot;T:System.Xml.Linq.XAttribute&quot; /&gt; containing an empty collection.">
        <see cref="T:System.Collections.Generic.IEnumerable`1" /> de <see cref="T:System.Xml.Linq.XAttribute" /> contenant une collection vide.</returns>
    </member>
    <member name="P:System.Xml.Linq.XAttribute.IsNamespaceDeclaration">
      <summary vsli:raw="Determines if this attribute is a namespace declaration.">Détermine si cet attribut est une déclaration d'espace de noms.</summary>
      <returns vsli:raw="&lt;see langword=&quot;true&quot; /&gt; if this attribute is a namespace declaration; otherwise &lt;see langword=&quot;false&quot; /&gt;.">
        <see langword="true" /> si cet attribut est une déclaration d'espace de noms ; sinon <see langword="false" />.</returns>
    </member>
    <member name="P:System.Xml.Linq.XAttribute.Name">
      <summary vsli:raw="Gets the expanded name of this attribute.">Obtient le nom développé de cet attribut.</summary>
      <returns vsli:raw="An &lt;see cref=&quot;T:System.Xml.Linq.XName&quot; /&gt; containing the name of this attribute.">
        <see cref="T:System.Xml.Linq.XName" /> contenant le nom de cet attribut.</returns>
    </member>
    <member name="P:System.Xml.Linq.XAttribute.NextAttribute">
      <summary vsli:raw="Gets the next attribute of the parent element.">Obtient l'attribut suivant de l'élément parent.</summary>
      <returns vsli:raw="An &lt;see cref=&quot;T:System.Xml.Linq.XAttribute&quot; /&gt; containing the next attribute of the parent element.">
        <see cref="T:System.Xml.Linq.XAttribute" /> contenant l'attribut suivant de l'élément parent.</returns>
    </member>
    <member name="P:System.Xml.Linq.XAttribute.NodeType">
      <summary vsli:raw="Gets the node type for this node.">Obtient le type de ce nœud.</summary>
      <returns vsli:raw="The node type. For &lt;see cref=&quot;T:System.Xml.Linq.XAttribute&quot; /&gt; objects, this value is &lt;see cref=&quot;F:System.Xml.XmlNodeType.Attribute&quot; /&gt;.">Type de nœud. Pour les objets <see cref="T:System.Xml.Linq.XAttribute" />, cette valeur est <see cref="F:System.Xml.XmlNodeType.Attribute" />.</returns>
    </member>
    <member name="P:System.Xml.Linq.XAttribute.PreviousAttribute">
      <summary vsli:raw="Gets the previous attribute of the parent element.">Obtient l'attribut précédent de l'élément parent.</summary>
      <returns vsli:raw="An &lt;see cref=&quot;T:System.Xml.Linq.XAttribute&quot; /&gt; containing the previous attribute of the parent element.">
        <see cref="T:System.Xml.Linq.XAttribute" /> contenant l'attribut précédent de l'élément parent.</returns>
    </member>
    <member name="P:System.Xml.Linq.XAttribute.Value">
      <summary vsli:raw="Gets or sets the value of this attribute.">Obtient ou définit la valeur de l'attribut.</summary>
      <exception cref="T:System.ArgumentNullException" vsli:raw="When setting, the &lt;paramref name=&quot;value&quot; /&gt; is &lt;see langword=&quot;null&quot; /&gt;.">Lors de la définition, <paramref name="value" /> a la valeur <see langword="null" />.</exception>
      <returns vsli:raw="A &lt;see cref=&quot;T:System.String&quot; /&gt; containing the value of this attribute.">
        <see cref="T:System.String" /> contenant la valeur de cet attribut.</returns>
    </member>
    <member name="T:System.Xml.Linq.XCData">
      <summary vsli:raw="Represents a text node that contains CDATA.">Représente un nœud de texte qui contient CDATA.</summary>
    </member>
    <member name="M:System.Xml.Linq.XCData.#ctor(System.String)">
      <summary vsli:raw="Initializes a new instance of the &lt;see cref=&quot;T:System.Xml.Linq.XCData&quot; /&gt; class.">Initialise une nouvelle instance de la classe <see cref="T:System.Xml.Linq.XCData" />.</summary>
      <param name="value" vsli:raw="A string that contains the value of the &lt;see cref=&quot;T:System.Xml.Linq.XCData&quot; /&gt; node.">Chaîne qui contient la valeur du nœud <see cref="T:System.Xml.Linq.XCData" />.</param>
    </member>
    <member name="M:System.Xml.Linq.XCData.#ctor(System.Xml.Linq.XCData)">
      <summary vsli:raw="Initializes a new instance of the &lt;see cref=&quot;T:System.Xml.Linq.XCData&quot; /&gt; class.">Initialise une nouvelle instance de la classe <see cref="T:System.Xml.Linq.XCData" />.</summary>
      <param name="other" vsli:raw="The &lt;see cref=&quot;T:System.Xml.Linq.XCData&quot; /&gt; node to copy from.">Nœud <see cref="T:System.Xml.Linq.XCData" /> à partir duquel effectuer la copie.</param>
    </member>
    <member name="M:System.Xml.Linq.XCData.WriteTo(System.Xml.XmlWriter)">
      <summary vsli:raw="Writes this CDATA object to an &lt;see cref=&quot;T:System.Xml.XmlWriter&quot; /&gt;.">Écrit cet objet CDATA vers un <see cref="T:System.Xml.XmlWriter" />.</summary>
      <param name="writer" vsli:raw="An &lt;see cref=&quot;T:System.Xml.XmlWriter&quot; /&gt; into which this method will write.">
        <see cref="T:System.Xml.XmlWriter" /> dans lequel cette méthode écrira.</param>
    </member>
    <member name="M:System.Xml.Linq.XCData.WriteToAsync(System.Xml.XmlWriter,System.Threading.CancellationToken)">
      <summary vsli:raw="Writes this &lt;see cref=&quot;T:System.Xml.Linq.XCData&quot; /&gt; to the given &lt;see cref=&quot;T:System.Xml.XmlWriter&quot; /&gt;.">Écrit ce <see cref="T:System.Xml.Linq.XCData" /> au <see cref="T:System.Xml.XmlWriter" /> donné.</summary>
      <param name="writer" vsli:raw="The writer to write this &lt;see cref=&quot;T:System.Xml.Linq.XCData&quot; /&gt; to.">Enregistreur sur lequel écrire ce <see cref="T:System.Xml.Linq.XCData" />.</param>
      <param name="cancellationToken" vsli:raw="A token that can be used to request cancellation of the asynchronous operation.">Jeton qui peut être utilisé pour demander l'annulation de l'opération asynchrone.</param>
      <returns vsli:raw="A task representing the asynchronous write operation.">Tâche représentant l’opération d’écriture asynchrone.</returns>
    </member>
    <member name="P:System.Xml.Linq.XCData.NodeType">
      <summary vsli:raw="Gets the node type for this node.">Obtient le type de ce nœud.</summary>
      <returns vsli:raw="The node type. For &lt;see cref=&quot;T:System.Xml.Linq.XCData&quot; /&gt; objects, this value is &lt;see cref=&quot;F:System.Xml.XmlNodeType.CDATA&quot; /&gt;.">Type de nœud. Pour les objets <see cref="T:System.Xml.Linq.XCData" />, cette valeur est <see cref="F:System.Xml.XmlNodeType.CDATA" />.</returns>
    </member>
    <member name="T:System.Xml.Linq.XComment">
      <summary vsli:raw="Represents an XML comment.">Représente un commentaire XML.</summary>
    </member>
    <member name="M:System.Xml.Linq.XComment.#ctor(System.String)">
      <summary vsli:raw="Initializes a new instance of the &lt;see cref=&quot;T:System.Xml.Linq.XComment&quot; /&gt; class with the specified string content.">Initialise une nouvelle instance de la classe <see cref="T:System.Xml.Linq.XComment" /> avec le contenu de chaîne spécifié.</summary>
      <param name="value" vsli:raw="A string that contains the contents of the new &lt;see cref=&quot;T:System.Xml.Linq.XComment&quot; /&gt; object.">Une chaîne qui contient le contenu du nouvel objet <see cref="T:System.Xml.Linq.XComment" />.</param>
      <exception cref="T:System.ArgumentNullException" vsli:raw="The &lt;paramref name=&quot;value&quot; /&gt; parameter is &lt;see langword=&quot;null&quot; /&gt;.">Le paramètre <paramref name="value" /> a la valeur <see langword="null" />.</exception>
    </member>
    <member name="M:System.Xml.Linq.XComment.#ctor(System.Xml.Linq.XComment)">
      <summary vsli:raw="Initializes a new instance of the &lt;see cref=&quot;T:System.Xml.Linq.XComment&quot; /&gt; class from an existing comment node.">Initialise une nouvelle instance de la classe <see cref="T:System.Xml.Linq.XComment" /> à partir d'un nœud de commentaire existant.</summary>
      <param name="other" vsli:raw="The &lt;see cref=&quot;T:System.Xml.Linq.XComment&quot; /&gt; node to copy from.">Nœud <see cref="T:System.Xml.Linq.XComment" /> à partir duquel effectuer la copie.</param>
      <exception cref="T:System.ArgumentNullException" vsli:raw="The &lt;paramref name=&quot;other&quot; /&gt; parameter is &lt;see langword=&quot;null&quot; /&gt;.">Le paramètre <paramref name="other" /> a la valeur <see langword="null" />.</exception>
    </member>
    <member name="M:System.Xml.Linq.XComment.WriteTo(System.Xml.XmlWriter)">
      <summary vsli:raw="Write this comment to an &lt;see cref=&quot;T:System.Xml.XmlWriter&quot; /&gt;.">Écrivez ce commentaire dans un <see cref="T:System.Xml.XmlWriter" />.</summary>
      <param name="writer" vsli:raw="An &lt;see cref=&quot;T:System.Xml.XmlWriter&quot; /&gt; into which this method will write.">
        <see cref="T:System.Xml.XmlWriter" /> dans lequel cette méthode écrira.</param>
    </member>
    <member name="M:System.Xml.Linq.XComment.WriteToAsync(System.Xml.XmlWriter,System.Threading.CancellationToken)">
      <summary vsli:raw="Writes this &lt;see cref=&quot;T:System.Xml.Linq.XComment&quot; /&gt; to the specified &lt;see cref=&quot;T:System.Xml.XmlWriter&quot; /&gt;.">Écrit ce <see cref="T:System.Xml.Linq.XComment" /> au <see cref="T:System.Xml.XmlWriter" /> spécifié.</summary>
      <param name="writer" vsli:raw="The writer to write this &lt;see cref=&quot;T:System.Xml.Linq.XComment&quot; /&gt; to.">Enregistreur sur lequel écrire ce <see cref="T:System.Xml.Linq.XComment" />.</param>
      <param name="cancellationToken" vsli:raw="A token that can be used to request cancellation of the asynchronous operation.">Jeton qui peut être utilisé pour demander l'annulation de l'opération asynchrone.</param>
      <returns vsli:raw="A task that represents the asynchronous write operation.">Tâche qui représente l’opération d’écriture asynchrone.</returns>
    </member>
    <member name="P:System.Xml.Linq.XComment.NodeType">
      <summary vsli:raw="Gets the node type for this node.">Obtient le type de ce nœud.</summary>
      <returns vsli:raw="The node type. For &lt;see cref=&quot;T:System.Xml.Linq.XComment&quot; /&gt; objects, this value is &lt;see cref=&quot;F:System.Xml.XmlNodeType.Comment&quot; /&gt;.">Type de nœud. Pour les objets <see cref="T:System.Xml.Linq.XComment" />, cette valeur est <see cref="F:System.Xml.XmlNodeType.Comment" />.</returns>
    </member>
    <member name="P:System.Xml.Linq.XComment.Value">
      <summary vsli:raw="Gets or sets the string value of this comment.">Obtient ou définit la valeur de chaîne de ce commentaire.</summary>
      <exception cref="T:System.ArgumentNullException" vsli:raw="The &lt;paramref name=&quot;value&quot; /&gt; is &lt;see langword=&quot;null&quot; /&gt;.">
        <paramref name="value" /> a la valeur <see langword="null" />.</exception>
      <returns vsli:raw="A &lt;see cref=&quot;T:System.String&quot; /&gt; that contains the string value of this comment.">
        <see cref="T:System.String" /> qui contient la valeur de chaîne de ce commentaire.</returns>
    </member>
    <member name="T:System.Xml.Linq.XContainer">
      <summary vsli:raw="Represents a node that can contain other nodes.">Représente un nœud qui peut contenir d'autres nœuds.</summary>
    </member>
    <member name="M:System.Xml.Linq.XContainer.Add(System.Object)">
      <summary vsli:raw="Adds the specified content as children of this &lt;see cref=&quot;T:System.Xml.Linq.XContainer&quot; /&gt;.">Ajoute le contenu spécifié en tant qu'enfants de ce <see cref="T:System.Xml.Linq.XContainer" />.</summary>
      <param name="content" vsli:raw="A content object containing simple content or a collection of content objects to be added.">Objet de contenu contenant du contenu simple ou collection d'objets de contenu à ajouter.</param>
    </member>
    <member name="M:System.Xml.Linq.XContainer.Add(System.Object[])">
      <summary vsli:raw="Adds the specified content as children of this &lt;see cref=&quot;T:System.Xml.Linq.XContainer&quot; /&gt;.">Ajoute le contenu spécifié en tant qu'enfants de ce <see cref="T:System.Xml.Linq.XContainer" />.</summary>
      <param name="content" vsli:raw="A parameter list of content objects.">Liste de paramètres d'objets de contenu.</param>
    </member>
    <member name="M:System.Xml.Linq.XContainer.AddFirst(System.Object)">
      <summary vsli:raw="Adds the specified content as the first children of this document or element.">Ajoute le contenu spécifié en tant que premiers enfants de ce document ou élément.</summary>
      <param name="content" vsli:raw="A content object containing simple content or a collection of content objects to be added.">Objet de contenu contenant du contenu simple ou collection d'objets de contenu à ajouter.</param>
    </member>
    <member name="M:System.Xml.Linq.XContainer.AddFirst(System.Object[])">
      <summary vsli:raw="Adds the specified content as the first children of this document or element.">Ajoute le contenu spécifié en tant que premiers enfants de ce document ou élément.</summary>
      <param name="content" vsli:raw="A parameter list of content objects.">Liste de paramètres d'objets de contenu.</param>
      <exception cref="T:System.InvalidOperationException" vsli:raw="The parent is &lt;see langword=&quot;null&quot; /&gt;.">Le parent est <see langword="null" />.</exception>
    </member>
    <member name="M:System.Xml.Linq.XContainer.CreateWriter">
      <summary vsli:raw="Creates an &lt;see cref=&quot;T:System.Xml.XmlWriter&quot; /&gt; that can be used to add nodes to the &lt;see cref=&quot;T:System.Xml.Linq.XContainer&quot; /&gt;.">Crée un <see cref="T:System.Xml.XmlWriter" /> qui peut être utilisé pour ajouter des nœuds au <see cref="T:System.Xml.Linq.XContainer" />.</summary>
      <returns vsli:raw="An &lt;see cref=&quot;T:System.Xml.XmlWriter&quot; /&gt; that is ready to have content written to it.">
        <see cref="T:System.Xml.XmlWriter" /> prêt à recevoir l'écriture de contenu.</returns>
    </member>
    <member name="M:System.Xml.Linq.XContainer.DescendantNodes">
      <summary vsli:raw="Returns a collection of the descendant nodes for this document or element, in document order.">Retourne une collection des nœuds descendants pour ce document ou cet élément, dans l'ordre des documents.</summary>
      <returns vsli:raw="An &lt;see cref=&quot;T:System.Collections.Generic.IEnumerable`1&quot; /&gt; of &lt;see cref=&quot;T:System.Xml.Linq.XNode&quot; /&gt; containing the descendant nodes of the &lt;see cref=&quot;T:System.Xml.Linq.XContainer&quot; /&gt;, in document order.">
        <see cref="T:System.Collections.Generic.IEnumerable`1" /> de <see cref="T:System.Xml.Linq.XNode" /> contenant les nœuds descendants du <see cref="T:System.Xml.Linq.XContainer" />, dans l'ordre des documents.</returns>
    </member>
    <member name="M:System.Xml.Linq.XContainer.Descendants">
      <summary vsli:raw="Returns a collection of the descendant elements for this document or element, in document order.">Retourne une collection des éléments descendants pour ce document ou cet élément, dans l'ordre des documents.</summary>
      <returns vsli:raw="An &lt;see cref=&quot;T:System.Collections.Generic.IEnumerable`1&quot; /&gt; of &lt;see cref=&quot;T:System.Xml.Linq.XElement&quot; /&gt; containing the descendant elements of the &lt;see cref=&quot;T:System.Xml.Linq.XContainer&quot; /&gt;.">
        <see cref="T:System.Collections.Generic.IEnumerable`1" /> de <see cref="T:System.Xml.Linq.XElement" /> contenant les éléments descendants du <see cref="T:System.Xml.Linq.XContainer" />.</returns>
    </member>
    <member name="M:System.Xml.Linq.XContainer.Descendants(System.Xml.Linq.XName)">
      <summary vsli:raw="Returns a filtered collection of the descendant elements for this document or element, in document order. Only elements that have a matching &lt;see cref=&quot;T:System.Xml.Linq.XName&quot; /&gt; are included in the collection.">Retourne une collection filtrée des éléments descendants pour ce document ou cet élément, dans l'ordre des documents. Seuls les éléments avec un <see cref="T:System.Xml.Linq.XName" /> correspondant sont inclus dans la collection.</summary>
      <param name="name" vsli:raw="The &lt;see cref=&quot;T:System.Xml.Linq.XName&quot; /&gt; to match.">
        <see cref="T:System.Xml.Linq.XName" /> à mettre en correspondance.</param>
      <returns vsli:raw="An &lt;see cref=&quot;T:System.Collections.Generic.IEnumerable`1&quot; /&gt; of &lt;see cref=&quot;T:System.Xml.Linq.XElement&quot; /&gt; containing the descendant elements of the &lt;see cref=&quot;T:System.Xml.Linq.XContainer&quot; /&gt; that match the specified &lt;see cref=&quot;T:System.Xml.Linq.XName&quot; /&gt;.">
        <see cref="T:System.Collections.Generic.IEnumerable`1" /> de <see cref="T:System.Xml.Linq.XElement" /> contenant les éléments descendants du <see cref="T:System.Xml.Linq.XContainer" /> qui correspond au <see cref="T:System.Xml.Linq.XName" /> spécifié.</returns>
    </member>
    <member name="M:System.Xml.Linq.XContainer.Element(System.Xml.Linq.XName)">
      <summary vsli:raw="Gets the first (in document order) child element with the specified &lt;see cref=&quot;T:System.Xml.Linq.XName&quot; /&gt;.">Obtient le premier (dans l'ordre des documents) élément enfant avec le <see cref="T:System.Xml.Linq.XName" /> spécifié.</summary>
      <param name="name" vsli:raw="The &lt;see cref=&quot;T:System.Xml.Linq.XName&quot; /&gt; to match.">
        <see cref="T:System.Xml.Linq.XName" /> à mettre en correspondance.</param>
      <returns vsli:raw="A &lt;see cref=&quot;T:System.Xml.Linq.XElement&quot; /&gt; that matches the specified &lt;see cref=&quot;T:System.Xml.Linq.XName&quot; /&gt;, or &lt;see langword=&quot;null&quot; /&gt;.">
        <see cref="T:System.Xml.Linq.XElement" /> qui correspond au <see cref="T:System.Xml.Linq.XName" /> spécifié ou <see langword="null" />.</returns>
    </member>
    <member name="M:System.Xml.Linq.XContainer.Elements">
      <summary vsli:raw="Returns a collection of the child elements of this element or document, in document order.">Retourne une collection des éléments enfants de cet élément ou de ce document, dans l'ordre des documents.</summary>
      <returns vsli:raw="An &lt;see cref=&quot;T:System.Collections.Generic.IEnumerable`1&quot; /&gt; of &lt;see cref=&quot;T:System.Xml.Linq.XElement&quot; /&gt; containing the child elements of this &lt;see cref=&quot;T:System.Xml.Linq.XContainer&quot; /&gt;, in document order.">
        <see cref="T:System.Collections.Generic.IEnumerable`1" /> de <see cref="T:System.Xml.Linq.XElement" /> contenant les éléments enfants de ce <see cref="T:System.Xml.Linq.XContainer" />, dans l'ordre des documents.</returns>
    </member>
    <member name="M:System.Xml.Linq.XContainer.Elements(System.Xml.Linq.XName)">
      <summary vsli:raw="Returns a filtered collection of the child elements of this element or document, in document order. Only elements that have a matching &lt;see cref=&quot;T:System.Xml.Linq.XName&quot; /&gt; are included in the collection.">Retourne une collection filtrée des éléments enfants de cet élément ou de ce document, dans l'ordre des documents. Seuls les éléments avec un <see cref="T:System.Xml.Linq.XName" /> correspondant sont inclus dans la collection.</summary>
      <param name="name" vsli:raw="The &lt;see cref=&quot;T:System.Xml.Linq.XName&quot; /&gt; to match.">
        <see cref="T:System.Xml.Linq.XName" /> à mettre en correspondance.</param>
      <returns vsli:raw="An &lt;see cref=&quot;T:System.Collections.Generic.IEnumerable`1&quot; /&gt; of &lt;see cref=&quot;T:System.Xml.Linq.XElement&quot; /&gt; containing the children of the &lt;see cref=&quot;T:System.Xml.Linq.XContainer&quot; /&gt; that have a matching &lt;see cref=&quot;T:System.Xml.Linq.XName&quot; /&gt;, in document order.">
        <see cref="T:System.Collections.Generic.IEnumerable`1" /> de <see cref="T:System.Xml.Linq.XElement" /> contenant les enfants du <see cref="T:System.Xml.Linq.XContainer" /> qui ont un <see cref="T:System.Xml.Linq.XName" /> correspondant, dans l'ordre des documents.</returns>
    </member>
    <member name="M:System.Xml.Linq.XContainer.Nodes">
      <summary vsli:raw="Returns a collection of the child nodes of this element or document, in document order.">Retourne une collection des nœuds enfants de cet élément ou de ce document, dans l'ordre des documents.</summary>
      <returns vsli:raw="An &lt;see cref=&quot;T:System.Collections.Generic.IEnumerable`1&quot; /&gt; of &lt;see cref=&quot;T:System.Xml.Linq.XNode&quot; /&gt; containing the contents of this &lt;see cref=&quot;T:System.Xml.Linq.XContainer&quot; /&gt;, in document order.">
        <see cref="T:System.Collections.Generic.IEnumerable`1" /> de <see cref="T:System.Xml.Linq.XNode" /> contenant le contenu de ce <see cref="T:System.Xml.Linq.XContainer" />, dans l'ordre des documents.</returns>
    </member>
    <member name="M:System.Xml.Linq.XContainer.RemoveNodes">
      <summary vsli:raw="Removes the child nodes from this document or element.">Supprime les nœuds enfants de ce document ou de cet élément.</summary>
    </member>
    <member name="M:System.Xml.Linq.XContainer.ReplaceNodes(System.Object)">
      <summary vsli:raw="Replaces the children nodes of this document or element with the specified content.">Remplace les nœuds enfants de ce document ou de cet élément par le contenu spécifié.</summary>
      <param name="content" vsli:raw="A content object containing simple content or a collection of content objects that replace the children nodes.">Objet de contenu contenant du contenu simple ou collection d'objets de contenu qui remplacent les nœuds enfants.</param>
    </member>
    <member name="M:System.Xml.Linq.XContainer.ReplaceNodes(System.Object[])">
      <summary vsli:raw="Replaces the children nodes of this document or element with the specified content.">Remplace les nœuds enfants de ce document ou de cet élément par le contenu spécifié.</summary>
      <param name="content" vsli:raw="A parameter list of content objects.">Liste de paramètres d'objets de contenu.</param>
    </member>
    <member name="P:System.Xml.Linq.XContainer.FirstNode">
      <summary vsli:raw="Gets the first child node of this node.">Obtient le premier nœud enfant de ce nœud.</summary>
      <returns vsli:raw="An &lt;see cref=&quot;T:System.Xml.Linq.XNode&quot; /&gt; containing the first child node of the &lt;see cref=&quot;T:System.Xml.Linq.XContainer&quot; /&gt;.">
        <see cref="T:System.Xml.Linq.XNode" /> qui contient le premier nœud enfant du <see cref="T:System.Xml.Linq.XContainer" />.</returns>
    </member>
    <member name="P:System.Xml.Linq.XContainer.LastNode">
      <summary vsli:raw="Gets the last child node of this node.">Obtient le dernier nœud enfant de ce nœud.</summary>
      <returns vsli:raw="An &lt;see cref=&quot;T:System.Xml.Linq.XNode&quot; /&gt; containing the last child node of the &lt;see cref=&quot;T:System.Xml.Linq.XContainer&quot; /&gt;.">
        <see cref="T:System.Xml.Linq.XNode" /> qui contient le dernier nœud enfant du <see cref="T:System.Xml.Linq.XContainer" />.</returns>
    </member>
    <member name="T:System.Xml.Linq.XDeclaration">
      <summary vsli:raw="Represents an XML declaration.">Représente une déclaration XML.</summary>
    </member>
    <member name="M:System.Xml.Linq.XDeclaration.#ctor(System.String,System.String,System.String)">
      <summary vsli:raw="Initializes a new instance of the &lt;see cref=&quot;T:System.Xml.Linq.XDeclaration&quot; /&gt; class with the specified version, encoding, and standalone status.">Initialise une nouvelle instance de la classe <see cref="T:System.Xml.Linq.XDeclaration" /> avec la version, l'encodage et l'état d'autonomie spécifiés.</summary>
      <param name="version" vsli:raw="The version of the XML, usually &quot;1.0&quot;.">Version du code XML, généralement « 1.0 ».</param>
      <param name="encoding" vsli:raw="The encoding for the XML document.">l'encodage du document XML ;</param>
      <param name="standalone" vsli:raw="A string containing &quot;yes&quot; or &quot;no&quot; that specifies whether the XML is standalone or requires external entities to be resolved.">Chaîne contenant « oui » ou « non » qui spécifie si le code XML est autonome ou s'il requiert la résolution d'entités externes.</param>
    </member>
    <member name="M:System.Xml.Linq.XDeclaration.#ctor(System.Xml.Linq.XDeclaration)">
      <summary vsli:raw="Initializes a new instance of the &lt;see cref=&quot;T:System.Xml.Linq.XDeclaration&quot; /&gt; class from another &lt;see cref=&quot;T:System.Xml.Linq.XDeclaration&quot; /&gt; object.">Initialise une nouvelle instance de la classe <see cref="T:System.Xml.Linq.XDeclaration" /> à partir d'un autre objet <see cref="T:System.Xml.Linq.XDeclaration" />.</summary>
      <param name="other" vsli:raw="The &lt;see cref=&quot;T:System.Xml.Linq.XDeclaration&quot; /&gt; used to initialize this &lt;see cref=&quot;T:System.Xml.Linq.XDeclaration&quot; /&gt; object.">
        <see cref="T:System.Xml.Linq.XDeclaration" /> utilisé pour initialiser cet objet <see cref="T:System.Xml.Linq.XDeclaration" />.</param>
    </member>
    <member name="M:System.Xml.Linq.XDeclaration.ToString">
      <summary vsli:raw="Provides the declaration as a formatted string.">Fournit la déclaration en tant que chaîne mise en forme.</summary>
      <returns vsli:raw="A &lt;see cref=&quot;T:System.String&quot; /&gt; that contains the formatted XML string.">
        <see cref="T:System.String" /> qui contient la chaîne XML mise en forme.</returns>
    </member>
    <member name="P:System.Xml.Linq.XDeclaration.Encoding">
      <summary vsli:raw="Gets or sets the encoding for this document.">Obtient ou définit l'encodage pour ce document.</summary>
      <returns vsli:raw="A &lt;see cref=&quot;T:System.String&quot; /&gt; containing the code page name for this document.">
        <see cref="T:System.String" /> qui contient le nom de page de codes pour ce document.</returns>
    </member>
    <member name="P:System.Xml.Linq.XDeclaration.Standalone">
      <summary vsli:raw="Gets or sets the standalone property for this document.">Obtient ou définit la propriété d'autonomie pour ce document.</summary>
      <returns vsli:raw="A &lt;see cref=&quot;T:System.String&quot; /&gt; containing the standalone property for this document.">
        <see cref="T:System.String" /> contenant la propriété d'autonomie pour ce document.</returns>
    </member>
    <member name="P:System.Xml.Linq.XDeclaration.Version">
      <summary vsli:raw="Gets or sets the version property for this document.">Obtient ou définit la propriété de version pour ce document.</summary>
      <returns vsli:raw="A &lt;see cref=&quot;T:System.String&quot; /&gt; containing the version property for this document.">
        <see cref="T:System.String" /> contenant la propriété de version pour ce document.</returns>
    </member>
    <member name="T:System.Xml.Linq.XDocument">
      <summary vsli:raw="Represents an XML document. For the components and usage of an &lt;see cref=&quot;T:System.Xml.Linq.XDocument&quot; /&gt; object, see XDocument Class Overview.">Représente un document XML. Pour les composants et l’utilisation d’un objet <see cref="T:System.Xml.Linq.XDocument" />, consultez Vue d’ensemble de la classe XDocument.</summary>
    </member>
    <member name="M:System.Xml.Linq.XDocument.#ctor">
      <summary vsli:raw="Initializes a new instance of the &lt;see cref=&quot;T:System.Xml.Linq.XDocument&quot; /&gt; class.">Initialise une nouvelle instance de la classe <see cref="T:System.Xml.Linq.XDocument" />.</summary>
    </member>
    <member name="M:System.Xml.Linq.XDocument.#ctor(System.Object[])">
      <summary vsli:raw="Initializes a new instance of the &lt;see cref=&quot;T:System.Xml.Linq.XDocument&quot; /&gt; class with the specified content.">Initialise une nouvelle instance de la classe <see cref="T:System.Xml.Linq.XDocument" /> avec le contenu spécifié.</summary>
      <param name="content" vsli:raw="A parameter list of content objects to add to this document.">Liste de paramètres d'objets de contenu à ajouter à ce document.</param>
    </member>
    <member name="M:System.Xml.Linq.XDocument.#ctor(System.Xml.Linq.XDeclaration,System.Object[])">
      <summary vsli:raw="Initializes a new instance of the &lt;see cref=&quot;T:System.Xml.Linq.XDocument&quot; /&gt; class with the specified &lt;see cref=&quot;T:System.Xml.Linq.XDeclaration&quot; /&gt; and content.">Initialise une nouvelle instance de la classe <see cref="T:System.Xml.Linq.XDocument" /> avec la <see cref="T:System.Xml.Linq.XDeclaration" /> et le contenu spécifiés.</summary>
      <param name="declaration" vsli:raw="An &lt;see cref=&quot;T:System.Xml.Linq.XDeclaration&quot; /&gt; for the document.">
        <see cref="T:System.Xml.Linq.XDeclaration" /> pour le document.</param>
      <param name="content" vsli:raw="The content of the document.">Contenu du document.</param>
    </member>
    <member name="M:System.Xml.Linq.XDocument.#ctor(System.Xml.Linq.XDocument)">
      <summary vsli:raw="Initializes a new instance of the &lt;see cref=&quot;T:System.Xml.Linq.XDocument&quot; /&gt; class from an existing &lt;see cref=&quot;T:System.Xml.Linq.XDocument&quot; /&gt; object.">Initialise une nouvelle instance de la classe <see cref="T:System.Xml.Linq.XDocument" /> à partir d'un objet <see cref="T:System.Xml.Linq.XDocument" /> existant.</summary>
      <param name="other" vsli:raw="The &lt;see cref=&quot;T:System.Xml.Linq.XDocument&quot; /&gt; object that will be copied.">Objet <see cref="T:System.Xml.Linq.XDocument" /> qui sera copié.</param>
    </member>
    <member name="M:System.Xml.Linq.XDocument.Load(System.IO.Stream)">
      <summary vsli:raw="Creates a new &lt;see cref=&quot;T:System.Xml.Linq.XDocument&quot; /&gt; instance by using the specified stream.">Crée une nouvelle instance de <see cref="T:System.Xml.Linq.XDocument" /> à l'aide du flux spécifié.</summary>
      <param name="stream" vsli:raw="The stream that contains the XML data.">Flux contenant les données XML.</param>
      <returns vsli:raw="An &lt;see cref=&quot;T:System.Xml.Linq.XDocument&quot; /&gt; object that reads the data that is contained in the stream.">Objet <see cref="T:System.Xml.Linq.XDocument" /> permettant de lire les données contenues dans le flux de données.</returns>
    </member>
    <member name="M:System.Xml.Linq.XDocument.Load(System.IO.Stream,System.Xml.Linq.LoadOptions)">
      <summary vsli:raw="Creates a new &lt;see cref=&quot;T:System.Xml.Linq.XDocument&quot; /&gt; instance by using the specified stream, optionally preserving white space, setting the base URI, and retaining line information.">Crée une instance <see cref="T:System.Xml.Linq.XDocument" /> à partir du flux spécifié, en conservant éventuellement l'espace blanc, en définissant l'URI de base, et en conservant les informations de ligne.</summary>
      <param name="stream" vsli:raw="The stream containing the XML data.">Flux contenant les données XML.</param>
      <param name="options" vsli:raw="A &lt;see cref=&quot;T:System.Xml.Linq.LoadOptions&quot; /&gt; that specifies whether to load base URI and line information.">
        <see cref="T:System.Xml.Linq.LoadOptions" /> qui spécifie s'il faut charger l'URI de base et les informations de ligne.</param>
      <returns vsli:raw="An &lt;see cref=&quot;T:System.Xml.Linq.XDocument&quot; /&gt; object that reads the data that is contained in the stream.">Objet <see cref="T:System.Xml.Linq.XDocument" /> permettant de lire les données contenues dans le flux de données.</returns>
    </member>
    <member name="M:System.Xml.Linq.XDocument.Load(System.IO.TextReader)">
      <summary vsli:raw="Creates a new &lt;see cref=&quot;T:System.Xml.Linq.XDocument&quot; /&gt; from a &lt;see cref=&quot;T:System.IO.TextReader&quot; /&gt;.">Crée <see cref="T:System.Xml.Linq.XDocument" /> à partir d'un <see cref="T:System.IO.TextReader" />.</summary>
      <param name="textReader" vsli:raw="A &lt;see cref=&quot;T:System.IO.TextReader&quot; /&gt; that contains the content for the &lt;see cref=&quot;T:System.Xml.Linq.XDocument&quot; /&gt;.">
        <see cref="T:System.IO.TextReader" /> qui contient le contenu pour le <see cref="T:System.Xml.Linq.XDocument" />.</param>
      <returns vsli:raw="An &lt;see cref=&quot;T:System.Xml.Linq.XDocument&quot; /&gt; that contains the contents of the specified &lt;see cref=&quot;T:System.IO.TextReader&quot; /&gt;.">
        <see cref="T:System.Xml.Linq.XDocument" /> qui contient le contenu du <see cref="T:System.IO.TextReader" /> spécifié.</returns>
    </member>
    <member name="M:System.Xml.Linq.XDocument.Load(System.IO.TextReader,System.Xml.Linq.LoadOptions)">
      <summary vsli:raw="Creates a new &lt;see cref=&quot;T:System.Xml.Linq.XDocument&quot; /&gt; from a &lt;see cref=&quot;T:System.IO.TextReader&quot; /&gt;, optionally preserving white space, setting the base URI, and retaining line information.">Crée un <see cref="T:System.Xml.Linq.XDocument" /> à partir d'un <see cref="T:System.IO.TextReader" />, en conservant éventuellement l'espace blanc, en définissant l'URI de base, et en conservant les informations de ligne.</summary>
      <param name="textReader" vsli:raw="A &lt;see cref=&quot;T:System.IO.TextReader&quot; /&gt; that contains the content for the &lt;see cref=&quot;T:System.Xml.Linq.XDocument&quot; /&gt;.">
        <see cref="T:System.IO.TextReader" /> qui contient le contenu pour le <see cref="T:System.Xml.Linq.XDocument" />.</param>
      <param name="options" vsli:raw="A &lt;see cref=&quot;T:System.Xml.Linq.LoadOptions&quot; /&gt; that specifies white space behavior, and whether to load base URI and line information.">
        <see cref="T:System.Xml.Linq.LoadOptions" /> qui spécifie le comportement pour les espaces blancs et détermine s'il faut charger l'URI de base et les informations de ligne.</param>
      <returns vsli:raw="An &lt;see cref=&quot;T:System.Xml.Linq.XDocument&quot; /&gt; that contains the XML that was read from the specified &lt;see cref=&quot;T:System.IO.TextReader&quot; /&gt;.">
        <see cref="T:System.Xml.Linq.XDocument" /> qui contient le code XML qui a été lu à partir du <see cref="T:System.IO.TextReader" />spécifié.</returns>
    </member>
    <member name="M:System.Xml.Linq.XDocument.Load(System.String)">
      <summary vsli:raw="Creates a new &lt;see cref=&quot;T:System.Xml.Linq.XDocument&quot; /&gt; from a file.">Crée un <see cref="T:System.Xml.Linq.XDocument" /> à partir d'un fichier.</summary>
      <param name="uri" vsli:raw="A URI string that references the file to load into a new &lt;see cref=&quot;T:System.Xml.Linq.XDocument&quot; /&gt;.">Chaîne d'URI qui référence le fichier à charger dans un nouveau <see cref="T:System.Xml.Linq.XDocument" />.</param>
      <returns vsli:raw="An &lt;see cref=&quot;T:System.Xml.Linq.XDocument&quot; /&gt; that contains the contents of the specified file.">
        <see cref="T:System.Xml.Linq.XDocument" /> qui contient le contenu du fichier spécifié.</returns>
    </member>
    <member name="M:System.Xml.Linq.XDocument.Load(System.String,System.Xml.Linq.LoadOptions)">
      <summary vsli:raw="Creates a new &lt;see cref=&quot;T:System.Xml.Linq.XDocument&quot; /&gt; from a file, optionally preserving white space, setting the base URI, and retaining line information.">Crée un <see cref="T:System.Xml.Linq.XDocument" /> à partir d'un fichier, en conservant éventuellement l'espace blanc, en définissant l'URI de base, et en conservant les informations de ligne.</summary>
      <param name="uri" vsli:raw="A URI string that references the file to load into a new &lt;see cref=&quot;T:System.Xml.Linq.XDocument&quot; /&gt;.">Chaîne d'URI qui référence le fichier à charger dans un nouveau <see cref="T:System.Xml.Linq.XDocument" />.</param>
      <param name="options" vsli:raw="A &lt;see cref=&quot;T:System.Xml.Linq.LoadOptions&quot; /&gt; that specifies white space behavior, and whether to load base URI and line information.">
        <see cref="T:System.Xml.Linq.LoadOptions" /> qui spécifie le comportement pour les espaces blancs et détermine s'il faut charger l'URI de base et les informations de ligne.</param>
      <returns vsli:raw="An &lt;see cref=&quot;T:System.Xml.Linq.XDocument&quot; /&gt; that contains the contents of the specified file.">
        <see cref="T:System.Xml.Linq.XDocument" /> qui contient le contenu du fichier spécifié.</returns>
    </member>
    <member name="M:System.Xml.Linq.XDocument.Load(System.Xml.XmlReader)">
      <summary vsli:raw="Creates a new &lt;see cref=&quot;T:System.Xml.Linq.XDocument&quot; /&gt; from an &lt;see cref=&quot;T:System.Xml.XmlReader&quot; /&gt;.">Crée un <see cref="T:System.Xml.Linq.XDocument" /> à partir d'un <see cref="T:System.Xml.XmlReader" />.</summary>
      <param name="reader" vsli:raw="A &lt;see cref=&quot;T:System.Xml.XmlReader&quot; /&gt; that contains the content for the &lt;see cref=&quot;T:System.Xml.Linq.XDocument&quot; /&gt;.">
        <see cref="T:System.Xml.XmlReader" /> qui contient le contenu pour le <see cref="T:System.Xml.Linq.XDocument" />.</param>
      <returns vsli:raw="An &lt;see cref=&quot;T:System.Xml.Linq.XDocument&quot; /&gt; that contains the contents of the specified &lt;see cref=&quot;T:System.Xml.XmlReader&quot; /&gt;.">
        <see cref="T:System.Xml.Linq.XDocument" /> qui contient le contenu du <see cref="T:System.Xml.XmlReader" /> spécifié.</returns>
    </member>
    <member name="M:System.Xml.Linq.XDocument.Load(System.Xml.XmlReader,System.Xml.Linq.LoadOptions)">
      <summary vsli:raw="Loads an &lt;see cref=&quot;T:System.Xml.Linq.XDocument&quot; /&gt; from an &lt;see cref=&quot;T:System.Xml.XmlReader&quot; /&gt;, optionally setting the base URI, and retaining line information.">Charge un <see cref="T:System.Xml.Linq.XDocument" /> à partir d'un <see cref="T:System.Xml.XmlReader" />, en définissant éventuellement l'URI de base, et en conservant les informations de ligne.</summary>
      <param name="reader" vsli:raw="A &lt;see cref=&quot;T:System.Xml.XmlReader&quot; /&gt; that will be read for the content of the &lt;see cref=&quot;T:System.Xml.Linq.XDocument&quot; /&gt;.">
        <see cref="T:System.Xml.XmlReader" /> qui sera lu pour le contenu du <see cref="T:System.Xml.Linq.XDocument" />.</param>
      <param name="options" vsli:raw="A &lt;see cref=&quot;T:System.Xml.Linq.LoadOptions&quot; /&gt; that specifies whether to load base URI and line information.">
        <see cref="T:System.Xml.Linq.LoadOptions" /> qui spécifie s'il faut charger l'URI de base et les informations de ligne.</param>
      <returns vsli:raw="An &lt;see cref=&quot;T:System.Xml.Linq.XDocument&quot; /&gt; that contains the XML that was read from the specified &lt;see cref=&quot;T:System.Xml.XmlReader&quot; /&gt;.">
        <see cref="T:System.Xml.Linq.XDocument" /> qui contient le code XML qui a été lu à partir du <see cref="T:System.Xml.XmlReader" />spécifié.</returns>
    </member>
    <member name="M:System.Xml.Linq.XDocument.LoadAsync(System.IO.Stream,System.Xml.Linq.LoadOptions,System.Threading.CancellationToken)">
      <summary vsli:raw="Asynchronously creates a new &lt;see cref=&quot;T:System.Xml.Linq.XDocument&quot; /&gt; and initializes its underlying XML tree from the specified stream, optionally preserving white space.">Crée de façon asynchrone un nouveau <see cref="T:System.Xml.Linq.XDocument" /> et initialise son arborescence XML sous-jacente à partir du flux spécifié, en conservant éventuellement l’espace blanc.</summary>
      <param name="stream" vsli:raw="A stream containing the raw XML to read into the newly created &lt;see cref=&quot;T:System.Xml.Linq.XDocument&quot; /&gt;.">Flux contenant le XML brut à lire dans le <see cref="T:System.Xml.Linq.XDocument" /> nouvellement créé.</param>
      <param name="options" vsli:raw="A set of load options.">Un ensemble d’options de chargement.</param>
      <param name="cancellationToken" vsli:raw="A cancellation token.">Jeton d'annulation.</param>
      <returns vsli:raw="A new XDocument containing the contents of the specified &lt;see cref=&quot;T:System.IO.Stream&quot; /&gt;.">Nouveau XDocument contenant le contenu du <see cref="T:System.IO.Stream" /> spécifié.</returns>
    </member>
    <member name="M:System.Xml.Linq.XDocument.LoadAsync(System.IO.TextReader,System.Xml.Linq.LoadOptions,System.Threading.CancellationToken)">
      <summary vsli:raw="Creates a new &lt;see cref=&quot;T:System.Xml.Linq.XDocument&quot; /&gt; and initializes its underlying XML tree using the specified &lt;see cref=&quot;T:System.IO.TextReader&quot; /&gt; parameter, optionally preserving white space.">Crée un nouveau <see cref="T:System.Xml.Linq.XDocument" /> et initialise son arborescence XML sous-jacente à l'aide du paramètre <see cref="T:System.IO.TextReader" /> spécifié, en conservant éventuellement l’espace blanc.</summary>
      <param name="textReader" vsli:raw="A reader that contains the raw XML to read into the newly created &lt;see cref=&quot;T:System.Xml.Linq.XDocument&quot; /&gt;.">Un lecteur qui contient le code XML brut à lire dans le <see cref="T:System.Xml.Linq.XDocument" /> nouvellement créé.</param>
      <param name="options" vsli:raw="A set of load options.">Un ensemble d’options de chargement.</param>
      <param name="cancellationToken" vsli:raw="A cancellation token.">Jeton d'annulation.</param>
      <returns vsli:raw="A new XDocument containing the contents of the specified &lt;see cref=&quot;T:System.IO.TextReader&quot; /&gt;.">Nouveau XDocument contenant le contenu du <see cref="T:System.IO.TextReader" /> spécifié.</returns>
    </member>
    <member name="M:System.Xml.Linq.XDocument.LoadAsync(System.Xml.XmlReader,System.Xml.Linq.LoadOptions,System.Threading.CancellationToken)">
      <summary vsli:raw="Creates a new &lt;see cref=&quot;T:System.Xml.Linq.XDocument&quot; /&gt; containing the contents of the specified &lt;see cref=&quot;T:System.Xml.XmlReader&quot; /&gt;.">Crée un nouveau <see cref="T:System.Xml.Linq.XDocument" /> contenant le contenu du <see cref="T:System.Xml.XmlReader" /> spécifié.</summary>
      <param name="reader" vsli:raw="A reader containing the XML to be read into the new &lt;see cref=&quot;T:System.Xml.Linq.XDocument&quot; /&gt;.">Lecteur contenant le XML à lire dans le nouveau <see cref="T:System.Xml.Linq.XDocument" />.</param>
      <param name="options" vsli:raw="A set of load options.">Un ensemble d’options de chargement.</param>
      <param name="cancellationToken" vsli:raw="A cancellation token.">Jeton d'annulation.</param>
      <returns vsli:raw="A new XDocument containing the contents of the specified &lt;see cref=&quot;T:System.Xml.XmlReader&quot; /&gt;.">Nouveau XDocument contenant le contenu du <see cref="T:System.Xml.XmlReader" /> spécifié.</returns>
    </member>
    <member name="M:System.Xml.Linq.XDocument.Parse(System.String)">
      <summary vsli:raw="Creates a new &lt;see cref=&quot;T:System.Xml.Linq.XDocument&quot; /&gt; from a string.">Crée un <see cref="T:System.Xml.Linq.XDocument" /> à partir d'une chaîne.</summary>
      <param name="text" vsli:raw="A string that contains XML.">Chaîne qui contient le code XML.</param>
      <returns vsli:raw="An &lt;see cref=&quot;T:System.Xml.Linq.XDocument&quot; /&gt; populated from the string that contains XML.">
        <see cref="T:System.Xml.Linq.XDocument" /> rempli à partir de la chaîne qui contient le code XML.</returns>
    </member>
    <member name="M:System.Xml.Linq.XDocument.Parse(System.String,System.Xml.Linq.LoadOptions)">
      <summary vsli:raw="Creates a new &lt;see cref=&quot;T:System.Xml.Linq.XDocument&quot; /&gt; from a string, optionally preserving white space, setting the base URI, and retaining line information.">Crée un <see cref="T:System.Xml.Linq.XDocument" /> à partir d'une chaîne, en conservant éventuellement l'espace blanc, en définissant l'URI de base, et en conservant les informations de ligne.</summary>
      <param name="text" vsli:raw="A string that contains XML.">Chaîne qui contient le code XML.</param>
      <param name="options" vsli:raw="A &lt;see cref=&quot;T:System.Xml.Linq.LoadOptions&quot; /&gt; that specifies white space behavior, and whether to load base URI and line information.">
        <see cref="T:System.Xml.Linq.LoadOptions" /> qui spécifie le comportement pour les espaces blancs et détermine s'il faut charger l'URI de base et les informations de ligne.</param>
      <returns vsli:raw="An &lt;see cref=&quot;T:System.Xml.Linq.XDocument&quot; /&gt; populated from the string that contains XML.">
        <see cref="T:System.Xml.Linq.XDocument" /> rempli à partir de la chaîne qui contient le code XML.</returns>
    </member>
    <member name="M:System.Xml.Linq.XDocument.Save(System.IO.Stream)">
      <summary vsli:raw="Outputs this &lt;see cref=&quot;T:System.Xml.Linq.XDocument&quot; /&gt; to the specified &lt;see cref=&quot;T:System.IO.Stream&quot; /&gt;.">Renvoie ce <see cref="T:System.Xml.Linq.XDocument" /> vers le <see cref="T:System.IO.Stream" /> spécifié.</summary>
      <param name="stream" vsli:raw="The stream to output this &lt;see cref=&quot;T:System.Xml.Linq.XDocument&quot; /&gt; to.">Flux vers lequel générer ce <see cref="T:System.Xml.Linq.XDocument" />.</param>
    </member>
    <member name="M:System.Xml.Linq.XDocument.Save(System.IO.Stream,System.Xml.Linq.SaveOptions)">
      <summary vsli:raw="Outputs this &lt;see cref=&quot;T:System.Xml.Linq.XDocument&quot; /&gt; to the specified &lt;see cref=&quot;T:System.IO.Stream&quot; /&gt;, optionally specifying formatting behavior.">Génère ce <see cref="T:System.Xml.Linq.XDocument" /> vers le <see cref="T:System.IO.Stream" /> spécifié, en précisant le cas échéant le comportement de mise en forme.</summary>
      <param name="stream" vsli:raw="The stream to output this &lt;see cref=&quot;T:System.Xml.Linq.XDocument&quot; /&gt; to.">Flux vers lequel générer ce <see cref="T:System.Xml.Linq.XDocument" />.</param>
      <param name="options" vsli:raw="A &lt;see cref=&quot;T:System.Xml.Linq.SaveOptions&quot; /&gt; that specifies formatting behavior.">
        <see cref="T:System.Xml.Linq.SaveOptions" /> qui spécifie le comportement de mise en forme.</param>
    </member>
    <member name="M:System.Xml.Linq.XDocument.Save(System.IO.TextWriter)">
      <summary vsli:raw="Serialize this &lt;see cref=&quot;T:System.Xml.Linq.XDocument&quot; /&gt; to a &lt;see cref=&quot;T:System.IO.TextWriter&quot; /&gt;.">Sérialise ce <see cref="T:System.Xml.Linq.XDocument" /> vers un <see cref="T:System.IO.TextWriter" />.</summary>
      <param name="textWriter" vsli:raw="A &lt;see cref=&quot;T:System.IO.TextWriter&quot; /&gt; that the &lt;see cref=&quot;T:System.Xml.Linq.XDocument&quot; /&gt; will be written to.">
        <see cref="T:System.IO.TextWriter" /> dans lequel le <see cref="T:System.Xml.Linq.XDocument" /> sera écrit.</param>
    </member>
    <member name="M:System.Xml.Linq.XDocument.Save(System.IO.TextWriter,System.Xml.Linq.SaveOptions)">
      <summary vsli:raw="Serialize this &lt;see cref=&quot;T:System.Xml.Linq.XDocument&quot; /&gt; to a &lt;see cref=&quot;T:System.IO.TextWriter&quot; /&gt;, optionally disabling formatting.">Sérialise ce <see cref="T:System.Xml.Linq.XDocument" /> vers un <see cref="T:System.IO.TextWriter" />, en désactivant éventuellement la mise en forme.</summary>
      <param name="textWriter" vsli:raw="The &lt;see cref=&quot;T:System.IO.TextWriter&quot; /&gt; to output the XML to.">
        <see cref="T:System.IO.TextWriter" /> vers lequel exporter le code XML.</param>
      <param name="options" vsli:raw="A &lt;see cref=&quot;T:System.Xml.Linq.SaveOptions&quot; /&gt; that specifies formatting behavior.">
        <see cref="T:System.Xml.Linq.SaveOptions" /> qui spécifie le comportement de mise en forme.</param>
    </member>
    <member name="M:System.Xml.Linq.XDocument.Save(System.String)">
      <summary vsli:raw="Serialize this &lt;see cref=&quot;T:System.Xml.Linq.XDocument&quot; /&gt; to a file, overwriting an existing file, if it exists.">Sérialise ce <see cref="T:System.Xml.Linq.XDocument" /> dans un fichier, en remplaçant un fichier existant, le cas échéant.</summary>
      <param name="fileName" vsli:raw="A string that contains the name of the file.">Chaîne qui contient le nom du fichier.</param>
    </member>
    <member name="M:System.Xml.Linq.XDocument.Save(System.String,System.Xml.Linq.SaveOptions)">
      <summary vsli:raw="Serialize this &lt;see cref=&quot;T:System.Xml.Linq.XDocument&quot; /&gt; to a file, optionally disabling formatting.">Sérialise ce <see cref="T:System.Xml.Linq.XDocument" /> vers un fichier, en désactivant éventuellement la mise en forme.</summary>
      <param name="fileName" vsli:raw="A string that contains the name of the file.">Chaîne qui contient le nom du fichier.</param>
      <param name="options" vsli:raw="A &lt;see cref=&quot;T:System.Xml.Linq.SaveOptions&quot; /&gt; that specifies formatting behavior.">
        <see cref="T:System.Xml.Linq.SaveOptions" /> qui spécifie le comportement de mise en forme.</param>
    </member>
    <member name="M:System.Xml.Linq.XDocument.Save(System.Xml.XmlWriter)">
      <summary vsli:raw="Serialize this &lt;see cref=&quot;T:System.Xml.Linq.XDocument&quot; /&gt; to an &lt;see cref=&quot;T:System.Xml.XmlWriter&quot; /&gt;.">Sérialise ce <see cref="T:System.Xml.Linq.XDocument" /> vers un <see cref="T:System.Xml.XmlWriter" />.</summary>
      <param name="writer" vsli:raw="A &lt;see cref=&quot;T:System.Xml.XmlWriter&quot; /&gt; that the &lt;see cref=&quot;T:System.Xml.Linq.XDocument&quot; /&gt; will be written to.">
        <see cref="T:System.Xml.XmlWriter" /> dans lequel le <see cref="T:System.Xml.Linq.XDocument" /> sera écrit.</param>
    </member>
    <member name="M:System.Xml.Linq.XDocument.SaveAsync(System.IO.Stream,System.Xml.Linq.SaveOptions,System.Threading.CancellationToken)">
      <summary vsli:raw="Output this &lt;see cref=&quot;T:System.Xml.Linq.XDocument&quot; /&gt; to a &lt;see cref=&quot;T:System.IO.Stream&quot; /&gt;.">Envoyer ce <see cref="T:System.Xml.Linq.XDocument" /> à un <see cref="T:System.IO.Stream" />.</summary>
      <param name="stream" vsli:raw="The stream to write the XML to.">Flux dans lequel écrire le XML.</param>
      <param name="options" vsli:raw="A set of load options.">Un ensemble d’options de chargement.</param>
      <param name="cancellationToken" vsli:raw="A cancellation token.">Jeton d'annulation.</param>
      <returns vsli:raw="A task representing the asynchronous save operation.">Une tâche représentant l’opération d’enregistrement asynchrone.</returns>
    </member>
    <member name="M:System.Xml.Linq.XDocument.SaveAsync(System.IO.TextWriter,System.Xml.Linq.SaveOptions,System.Threading.CancellationToken)">
      <summary vsli:raw="Writes this &lt;see cref=&quot;T:System.Xml.Linq.XDocument&quot; /&gt; to a &lt;see cref=&quot;T:System.IO.TextWriter&quot; /&gt;.">Écrit ce <see cref="T:System.Xml.Linq.XDocument" /> dans un <see cref="T:System.IO.TextWriter" />.</summary>
      <param name="textWriter" vsli:raw="The text writer to output the XML to.">Le TextWriter vers lequel le XML est exporté.</param>
      <param name="options" vsli:raw="A set of load options.">Un ensemble d’options de chargement.</param>
      <param name="cancellationToken" vsli:raw="A cancellation token.">Jeton d'annulation.</param>
      <returns vsli:raw="A task representing the asynchronous save operation.">Une tâche représentant l’opération d’enregistrement asynchrone.</returns>
    </member>
    <member name="M:System.Xml.Linq.XDocument.SaveAsync(System.Xml.XmlWriter,System.Threading.CancellationToken)">
      <summary vsli:raw="Writes this &lt;see cref=&quot;T:System.Xml.Linq.XDocument&quot; /&gt; to an &lt;see cref=&quot;T:System.Xml.XmlWriter&quot; /&gt;.">Écrit ce <see cref="T:System.Xml.Linq.XDocument" /> dans un <see cref="T:System.Xml.XmlWriter" />.</summary>
      <param name="writer" vsli:raw="The writer to output the XML to.">Enregistreur dans lequel le XML doit être exporté.</param>
      <param name="cancellationToken" vsli:raw="A cancellation token.">Jeton d'annulation.</param>
      <returns vsli:raw="A task representing the asynchronous save operation.">Une tâche représentant l’opération d’enregistrement asynchrone.</returns>
    </member>
    <member name="M:System.Xml.Linq.XDocument.WriteTo(System.Xml.XmlWriter)">
      <summary vsli:raw="Write this document to an &lt;see cref=&quot;T:System.Xml.XmlWriter&quot; /&gt;.">Écrivez ce document vers un <see cref="T:System.Xml.XmlWriter" />.</summary>
      <param name="writer" vsli:raw="An &lt;see cref=&quot;T:System.Xml.XmlWriter&quot; /&gt; into which this method will write.">
        <see cref="T:System.Xml.XmlWriter" /> dans lequel cette méthode écrira.</param>
    </member>
    <member name="M:System.Xml.Linq.XDocument.WriteToAsync(System.Xml.XmlWriter,System.Threading.CancellationToken)">
      <summary vsli:raw="Writes this XDocument's underlying XML tree to the specified &lt;see cref=&quot;T:System.Xml.XmlWriter&quot; /&gt;.">Écrit l’arborescence XML sous-jacente de ce XDocument dans le <see cref="T:System.Xml.XmlWriter" /> spécifié.</summary>
      <param name="writer" vsli:raw="The writer to output the content of this &lt;see cref=&quot;T:System.Xml.Linq.XDocument&quot; /&gt;.">Enregistreur pour exporter le contenu de ce <see cref="T:System.Xml.Linq.XDocument" />.</param>
      <param name="cancellationToken" vsli:raw="A cancellation token.">Jeton d'annulation.</param>
      <returns vsli:raw="A task representing the asynchronous write operation.">Tâche représentant l’opération d’écriture asynchrone.</returns>
    </member>
    <member name="P:System.Xml.Linq.XDocument.Declaration">
      <summary vsli:raw="Gets or sets the XML declaration for this document.">Obtient ou définit la déclaration XML pour ce document.</summary>
      <returns vsli:raw="An &lt;see cref=&quot;T:System.Xml.Linq.XDeclaration&quot; /&gt; that contains the XML declaration for this document.">
        <see cref="T:System.Xml.Linq.XDeclaration" /> qui contient la déclaration XML pour ce document.</returns>
    </member>
    <member name="P:System.Xml.Linq.XDocument.DocumentType">
      <summary vsli:raw="Gets the Document Type Definition (DTD) for this document.">Obtient la définition de type de document (DTD) pour ce document.</summary>
      <returns vsli:raw="A &lt;see cref=&quot;T:System.Xml.Linq.XDocumentType&quot; /&gt; that contains the DTD for this document.">
        <see cref="T:System.Xml.Linq.XDocumentType" /> qui contient la DTD pour ce document.</returns>
    </member>
    <member name="P:System.Xml.Linq.XDocument.NodeType">
      <summary vsli:raw="Gets the node type for this node.">Obtient le type de ce nœud.</summary>
      <returns vsli:raw="The node type. For &lt;see cref=&quot;T:System.Xml.Linq.XDocument&quot; /&gt; objects, this value is &lt;see cref=&quot;F:System.Xml.XmlNodeType.Document&quot; /&gt;.">Type de nœud. Pour les objets <see cref="T:System.Xml.Linq.XDocument" />, cette valeur est <see cref="F:System.Xml.XmlNodeType.Document" />.</returns>
    </member>
    <member name="P:System.Xml.Linq.XDocument.Root">
      <summary vsli:raw="Gets the root element of the XML Tree for this document.">Obtient l'élément racine de l'arborescence XML pour ce document.</summary>
      <returns vsli:raw="The root &lt;see cref=&quot;T:System.Xml.Linq.XElement&quot; /&gt; of the XML tree.">
        <see cref="T:System.Xml.Linq.XElement" /> racine de l'arborescence XML.</returns>
    </member>
    <member name="T:System.Xml.Linq.XDocumentType">
      <summary vsli:raw="Represents an XML Document Type Definition (DTD).">Représente une définition DTD (Document Type Definition) XML.</summary>
    </member>
    <member name="M:System.Xml.Linq.XDocumentType.#ctor(System.String,System.String,System.String,System.String)">
      <summary vsli:raw="Initializes an instance of the &lt;see cref=&quot;T:System.Xml.Linq.XDocumentType&quot; /&gt; class.">Initialise une instance de la classe <see cref="T:System.Xml.Linq.XDocumentType" />.</summary>
      <param name="name" vsli:raw="A &lt;see cref=&quot;T:System.String&quot; /&gt; that contains the qualified name of the DTD, which is the same as the qualified name of the root element of the XML document.">
        <see cref="T:System.String" /> qui contient le nom qualifié de la DTD, qui est le même que le nom qualifié de l'élément racine du document XML.</param>
      <param name="publicId" vsli:raw="A &lt;see cref=&quot;T:System.String&quot; /&gt; that contains the public identifier of an external public DTD.">
        <see cref="T:System.String" /> qui contient l'identificateur public d'une DTD publique externe.</param>
      <param name="systemId" vsli:raw="A &lt;see cref=&quot;T:System.String&quot; /&gt; that contains the system identifier of an external private DTD.">
        <see cref="T:System.String" /> qui contient l'identificateur système d'une DTD privée externe.</param>
      <param name="internalSubset" vsli:raw="A &lt;see cref=&quot;T:System.String&quot; /&gt; that contains the internal subset for an internal DTD.">
        <see cref="T:System.String" /> qui contient le sous-ensemble interne pour une DTD interne.</param>
    </member>
    <member name="M:System.Xml.Linq.XDocumentType.#ctor(System.Xml.Linq.XDocumentType)">
      <summary vsli:raw="Initializes an instance of the &lt;see cref=&quot;T:System.Xml.Linq.XDocumentType&quot; /&gt; class from another &lt;see cref=&quot;T:System.Xml.Linq.XDocumentType&quot; /&gt; object.">Initialise une instance de la classe <see cref="T:System.Xml.Linq.XDocumentType" /> à partir d'un autre objet <see cref="T:System.Xml.Linq.XDocumentType" />.</summary>
      <param name="other" vsli:raw="An &lt;see cref=&quot;T:System.Xml.Linq.XDocumentType&quot; /&gt; object to copy from.">Objet <see cref="T:System.Xml.Linq.XDocumentType" /> à partir duquel effectuer la copie.</param>
    </member>
    <member name="M:System.Xml.Linq.XDocumentType.WriteTo(System.Xml.XmlWriter)">
      <summary vsli:raw="Write this &lt;see cref=&quot;T:System.Xml.Linq.XDocumentType&quot; /&gt; to an &lt;see cref=&quot;T:System.Xml.XmlWriter&quot; /&gt;.">Écrivez ce <see cref="T:System.Xml.Linq.XDocumentType" /> vers un <see cref="T:System.Xml.XmlWriter" />.</summary>
      <param name="writer" vsli:raw="An &lt;see cref=&quot;T:System.Xml.XmlWriter&quot; /&gt; into which this method will write.">
        <see cref="T:System.Xml.XmlWriter" /> dans lequel cette méthode écrira.</param>
    </member>
    <member name="M:System.Xml.Linq.XDocumentType.WriteToAsync(System.Xml.XmlWriter,System.Threading.CancellationToken)">
      <summary vsli:raw="Writes this &lt;see cref=&quot;T:System.Xml.Linq.XDocumentType&quot; /&gt; to the specified &lt;see cref=&quot;T:System.Xml.XmlWriter&quot; /&gt;.">Écrit ce <see cref="T:System.Xml.Linq.XDocumentType" /> au <see cref="T:System.Xml.XmlWriter" /> spécifié.</summary>
      <param name="writer" vsli:raw="The writer to write this &lt;see cref=&quot;T:System.Xml.Linq.XDocumentType&quot; /&gt; to.">Enregistreur sur lequel écrire ce <see cref="T:System.Xml.Linq.XDocumentType" />.</param>
      <param name="cancellationToken" vsli:raw="A token that can be used to request cancellation of the asynchronous operation.">Jeton qui peut être utilisé pour demander l'annulation de l'opération asynchrone.</param>
      <returns vsli:raw="A task representing the asynchronous write operation.">Tâche représentant l’opération d’écriture asynchrone.</returns>
    </member>
    <member name="P:System.Xml.Linq.XDocumentType.InternalSubset">
      <summary vsli:raw="Gets or sets the internal subset for this Document Type Definition (DTD).">Obtient ou définit le sous-ensemble interne pour cette définition de type de document (DTD).</summary>
      <returns vsli:raw="A &lt;see cref=&quot;T:System.String&quot; /&gt; that contains the internal subset for this Document Type Definition (DTD).">
        <see cref="T:System.String" /> qui contient le sous-ensemble interne pour cette définition de type de document (DTD).</returns>
    </member>
    <member name="P:System.Xml.Linq.XDocumentType.Name">
      <summary vsli:raw="Gets or sets the name for this Document Type Definition (DTD).">Obtient ou définit le nom pour cette définition de type de document (DTD).</summary>
      <returns vsli:raw="A &lt;see cref=&quot;T:System.String&quot; /&gt; that contains the name for this Document Type Definition (DTD).">
        <see cref="T:System.String" /> qui contient le nom pour cette définition de type de document (DTD).</returns>
    </member>
    <member name="P:System.Xml.Linq.XDocumentType.NodeType">
      <summary vsli:raw="Gets the node type for this node.">Obtient le type de ce nœud.</summary>
      <returns vsli:raw="The node type. For &lt;see cref=&quot;T:System.Xml.Linq.XDocumentType&quot; /&gt; objects, this value is &lt;see cref=&quot;F:System.Xml.XmlNodeType.DocumentType&quot; /&gt;.">Type de nœud. Pour les objets <see cref="T:System.Xml.Linq.XDocumentType" />, cette valeur est <see cref="F:System.Xml.XmlNodeType.DocumentType" />.</returns>
    </member>
    <member name="P:System.Xml.Linq.XDocumentType.PublicId">
      <summary vsli:raw="Gets or sets the public identifier for this Document Type Definition (DTD).">Obtient ou définit l'identificateur public pour cette définition de type de document (DTD).</summary>
      <returns vsli:raw="A &lt;see cref=&quot;T:System.String&quot; /&gt; that contains the public identifier for this Document Type Definition (DTD).">
        <see cref="T:System.String" /> qui contient l'identificateur public pour cette définition de type de document (DTD).</returns>
    </member>
    <member name="P:System.Xml.Linq.XDocumentType.SystemId">
      <summary vsli:raw="Gets or sets the system identifier for this Document Type Definition (DTD).">Obtient ou définit l'identificateur système pour cette définition de type de document (DTD).</summary>
      <returns vsli:raw="A &lt;see cref=&quot;T:System.String&quot; /&gt; that contains the system identifier for this Document Type Definition (DTD).">
        <see cref="T:System.String" /> qui contient l'identificateur système pour cette définition de type de document (DTD).</returns>
    </member>
    <member name="T:System.Xml.Linq.XElement">
      <summary vsli:raw="Represents an XML element.  See XElement Class Overview and the Remarks section on this page for usage information and examples.">Représente un élément XML.  Pour des informations d’utilisation et des exemples, consultez Vue d’ensemble de la classe XElement et la section Notes de cette page.</summary>
    </member>
    <member name="M:System.Xml.Linq.XElement.#ctor(System.Xml.Linq.XElement)">
      <summary vsli:raw="Initializes a new instance of the &lt;see cref=&quot;T:System.Xml.Linq.XElement&quot; /&gt; class from another &lt;see cref=&quot;T:System.Xml.Linq.XElement&quot; /&gt; object.">Initialise une nouvelle instance de la classe <see cref="T:System.Xml.Linq.XElement" /> à partir d'un autre objet <see cref="T:System.Xml.Linq.XElement" />.</summary>
      <param name="other" vsli:raw="An &lt;see cref=&quot;T:System.Xml.Linq.XElement&quot; /&gt; object to copy from.">Objet <see cref="T:System.Xml.Linq.XElement" /> à partir duquel effectuer la copie.</param>
    </member>
    <member name="M:System.Xml.Linq.XElement.#ctor(System.Xml.Linq.XName)">
      <summary vsli:raw="Initializes a new instance of the &lt;see cref=&quot;T:System.Xml.Linq.XElement&quot; /&gt; class with the specified name.">Initialise une nouvelle instance de la classe <see cref="T:System.Xml.Linq.XElement" /> avec le nom spécifié.</summary>
      <param name="name" vsli:raw="An &lt;see cref=&quot;T:System.Xml.Linq.XName&quot; /&gt; that contains the name of the element.">
        <see cref="T:System.Xml.Linq.XName" /> qui contient le nom de l'élément.</param>
    </member>
    <member name="M:System.Xml.Linq.XElement.#ctor(System.Xml.Linq.XName,System.Object)">
      <summary vsli:raw="Initializes a new instance of the &lt;see cref=&quot;T:System.Xml.Linq.XElement&quot; /&gt; class with the specified name and content.">Initialise une nouvelle instance de la classe <see cref="T:System.Xml.Linq.XElement" /> avec le nom et le contenu spécifiés.</summary>
      <param name="name" vsli:raw="An &lt;see cref=&quot;T:System.Xml.Linq.XName&quot; /&gt; that contains the element name.">
        <see cref="T:System.Xml.Linq.XName" /> qui contient le nom de l'élément.</param>
      <param name="content" vsli:raw="The contents of the element.">Contenu de l'élément.</param>
    </member>
    <member name="M:System.Xml.Linq.XElement.#ctor(System.Xml.Linq.XName,System.Object[])">
      <summary vsli:raw="Initializes a new instance of the &lt;see cref=&quot;T:System.Xml.Linq.XElement&quot; /&gt; class with the specified name and content.">Initialise une nouvelle instance de la classe <see cref="T:System.Xml.Linq.XElement" /> avec le nom et le contenu spécifiés.</summary>
      <param name="name" vsli:raw="An &lt;see cref=&quot;T:System.Xml.Linq.XName&quot; /&gt; that contains the element name.">
        <see cref="T:System.Xml.Linq.XName" /> qui contient le nom de l'élément.</param>
      <param name="content" vsli:raw="The initial content of the element.">Contenu initial de l'élément.</param>
    </member>
    <member name="M:System.Xml.Linq.XElement.#ctor(System.Xml.Linq.XStreamingElement)">
      <summary vsli:raw="Initializes a new instance of the &lt;see cref=&quot;T:System.Xml.Linq.XElement&quot; /&gt; class from an &lt;see cref=&quot;T:System.Xml.Linq.XStreamingElement&quot; /&gt; object.">Initialise une nouvelle instance de la classe <see cref="T:System.Xml.Linq.XElement" /> à partir d'un objet <see cref="T:System.Xml.Linq.XStreamingElement" />.</summary>
      <param name="other" vsli:raw="An &lt;see cref=&quot;T:System.Xml.Linq.XStreamingElement&quot; /&gt; that contains unevaluated queries that will be iterated for the contents of this &lt;see cref=&quot;T:System.Xml.Linq.XElement&quot; /&gt;.">
        <see cref="T:System.Xml.Linq.XStreamingElement" /> qui contient des requêtes non évaluées qui seront itérées pour rechercher le contenu de ce <see cref="T:System.Xml.Linq.XElement" />.</param>
    </member>
    <member name="M:System.Xml.Linq.XElement.AncestorsAndSelf">
      <summary vsli:raw="Returns a collection of elements that contain this element, and the ancestors of this element.">Retourne une collection d'éléments contenant cet élément ainsi que ses ancêtres.</summary>
      <returns vsli:raw="An &lt;see cref=&quot;T:System.Collections.Generic.IEnumerable`1&quot; /&gt; of &lt;see cref=&quot;T:System.Xml.Linq.XElement&quot; /&gt; of elements that contain this element, and the ancestors of this element.">
        <see cref="T:System.Collections.Generic.IEnumerable`1" /> de <see cref="T:System.Xml.Linq.XElement" /> des éléments qui contiennent cet élément, ainsi que ses ancêtres.</returns>
    </member>
    <member name="M:System.Xml.Linq.XElement.AncestorsAndSelf(System.Xml.Linq.XName)">
      <summary vsli:raw="Returns a filtered collection of elements that contain this element, and the ancestors of this element. Only elements that have a matching &lt;see cref=&quot;T:System.Xml.Linq.XName&quot; /&gt; are included in the collection.">Retourne une collection filtrée d'éléments contenant cet élément ainsi que ses ancêtres. Seuls les éléments avec un <see cref="T:System.Xml.Linq.XName" /> correspondant sont inclus dans la collection.</summary>
      <param name="name" vsli:raw="The &lt;see cref=&quot;T:System.Xml.Linq.XName&quot; /&gt; to match.">
        <see cref="T:System.Xml.Linq.XName" /> à mettre en correspondance.</param>
      <returns vsli:raw="An &lt;see cref=&quot;T:System.Collections.Generic.IEnumerable`1&quot; /&gt; of &lt;see cref=&quot;T:System.Xml.Linq.XElement&quot; /&gt; that contain this element, and the ancestors of this element. Only elements that have a matching &lt;see cref=&quot;T:System.Xml.Linq.XName&quot; /&gt; are included in the collection.">
        <see cref="T:System.Collections.Generic.IEnumerable`1" /> de <see cref="T:System.Xml.Linq.XElement" /> qui contient cet élément, ainsi que ses ancêtres. Seuls les éléments avec un <see cref="T:System.Xml.Linq.XName" /> correspondant sont inclus dans la collection.</returns>
    </member>
    <member name="M:System.Xml.Linq.XElement.Attribute(System.Xml.Linq.XName)">
      <summary vsli:raw="Returns the &lt;see cref=&quot;T:System.Xml.Linq.XAttribute&quot; /&gt; of this &lt;see cref=&quot;T:System.Xml.Linq.XElement&quot; /&gt; that has the specified &lt;see cref=&quot;T:System.Xml.Linq.XName&quot; /&gt;.">Retourne le <see cref="T:System.Xml.Linq.XAttribute" /> de ce <see cref="T:System.Xml.Linq.XElement" /> qui a le <see cref="T:System.Xml.Linq.XName" /> spécifié.</summary>
      <param name="name" vsli:raw="The &lt;see cref=&quot;T:System.Xml.Linq.XName&quot; /&gt; of the &lt;see cref=&quot;T:System.Xml.Linq.XAttribute&quot; /&gt; to get.">
        <see cref="T:System.Xml.Linq.XName" /> du <see cref="T:System.Xml.Linq.XAttribute" /> à obtenir.</param>
      <returns vsli:raw="An &lt;see cref=&quot;T:System.Xml.Linq.XAttribute&quot; /&gt; that has the specified &lt;see cref=&quot;T:System.Xml.Linq.XName&quot; /&gt;; &lt;see langword=&quot;null&quot; /&gt; if there is no attribute with the specified name.">
        <see cref="T:System.Xml.Linq.XAttribute" /> qui a le <see cref="T:System.Xml.Linq.XName" /> spécifié ; <see langword="null" /> s'il n'existe aucun attribut avec le nom spécifié.</returns>
    </member>
    <member name="M:System.Xml.Linq.XElement.Attributes">
      <summary vsli:raw="Returns a collection of attributes of this element.">Retourne une collection d'attributs de cet élément.</summary>
      <returns vsli:raw="An &lt;see cref=&quot;T:System.Collections.Generic.IEnumerable`1&quot; /&gt; of &lt;see cref=&quot;T:System.Xml.Linq.XAttribute&quot; /&gt; of attributes of this element.">
        <see cref="T:System.Collections.Generic.IEnumerable`1" /> de <see cref="T:System.Xml.Linq.XAttribute" /> d'attributs de cet élément.</returns>
    </member>
    <member name="M:System.Xml.Linq.XElement.Attributes(System.Xml.Linq.XName)">
      <summary vsli:raw="Returns a filtered collection of attributes of this element. Only attributes that have a matching &lt;see cref=&quot;T:System.Xml.Linq.XName&quot; /&gt; are included in the collection.">Retourne une collection filtrée d’attributs de cet élément. Seuls les attributs auxquels correspond un <see cref="T:System.Xml.Linq.XName" /> sont inclus dans la collection.</summary>
      <param name="name" vsli:raw="The &lt;see cref=&quot;T:System.Xml.Linq.XName&quot; /&gt; to match.">
        <see cref="T:System.Xml.Linq.XName" /> à mettre en correspondance.</param>
      <returns vsli:raw="An &lt;see cref=&quot;T:System.Collections.Generic.IEnumerable`1&quot; /&gt; of &lt;see cref=&quot;T:System.Xml.Linq.XAttribute&quot; /&gt; that contains the attributes of this element. Only attributes that have a matching &lt;see cref=&quot;T:System.Xml.Linq.XName&quot; /&gt; are included in the collection.">
        <see cref="T:System.Collections.Generic.IEnumerable`1" /> de <see cref="T:System.Xml.Linq.XAttribute" /> qui contient les attributs de cet élément. Seuls les attributs auxquels correspond un <see cref="T:System.Xml.Linq.XName" /> sont inclus dans la collection.</returns>
    </member>
    <member name="M:System.Xml.Linq.XElement.DescendantNodesAndSelf">
      <summary vsli:raw="Returns a collection of nodes that contain this element, and all descendant nodes of this element, in document order.">Retourne une collection de nœuds contenant cet élément ainsi que tous ses nœuds descendants, dans l’ordre du document.</summary>
      <returns vsli:raw="An &lt;see cref=&quot;T:System.Collections.Generic.IEnumerable`1&quot; /&gt; of &lt;see cref=&quot;T:System.Xml.Linq.XNode&quot; /&gt; that contain this element, and all descendant nodes of this element, in document order.">
        <see cref="T:System.Collections.Generic.IEnumerable`1" /> de <see cref="T:System.Xml.Linq.XNode" /> qui contiennent cet élément, ainsi que tous ses nœuds descendants, dans l'ordre des documents.</returns>
    </member>
    <member name="M:System.Xml.Linq.XElement.DescendantsAndSelf">
      <summary vsli:raw="Returns a collection of elements that contain this element, and all descendant elements of this element, in document order.">Retourne une collection d’éléments contenant cet élément ainsi que tous ses éléments descendants, dans l’ordre du document.</summary>
      <returns vsli:raw="An &lt;see cref=&quot;T:System.Collections.Generic.IEnumerable`1&quot; /&gt; of &lt;see cref=&quot;T:System.Xml.Linq.XElement&quot; /&gt; of elements that contain this element, and all descendant elements of this element, in document order.">
        <see cref="T:System.Collections.Generic.IEnumerable`1" /> de <see cref="T:System.Xml.Linq.XElement" /> des éléments qui contiennent cet élément, ainsi que tous ses éléments descendants, dans l'ordre des documents.</returns>
    </member>
    <member name="M:System.Xml.Linq.XElement.DescendantsAndSelf(System.Xml.Linq.XName)">
      <summary vsli:raw="Returns a filtered collection of elements that contain this element, and all descendant elements of this element, in document order. Only elements that have a matching &lt;see cref=&quot;T:System.Xml.Linq.XName&quot; /&gt; are included in the collection.">Retourne une collection filtrée d’éléments contenant cet élément ainsi que tous ses éléments descendants, dans l’ordre du document. Seuls les éléments avec un <see cref="T:System.Xml.Linq.XName" /> correspondant sont inclus dans la collection.</summary>
      <param name="name" vsli:raw="The &lt;see cref=&quot;T:System.Xml.Linq.XName&quot; /&gt; to match.">
        <see cref="T:System.Xml.Linq.XName" /> à mettre en correspondance.</param>
      <returns vsli:raw="An &lt;see cref=&quot;T:System.Collections.Generic.IEnumerable`1&quot; /&gt; of &lt;see cref=&quot;T:System.Xml.Linq.XElement&quot; /&gt; that contain this element, and all descendant elements of this element, in document order. Only elements that have a matching &lt;see cref=&quot;T:System.Xml.Linq.XName&quot; /&gt; are included in the collection.">
        <see cref="T:System.Collections.Generic.IEnumerable`1" /> de <see cref="T:System.Xml.Linq.XElement" /> qui contiennent cet élément, ainsi que tous ses éléments descendants, dans l'ordre des documents. Seuls les éléments avec un <see cref="T:System.Xml.Linq.XName" /> correspondant sont inclus dans la collection.</returns>
    </member>
    <member name="M:System.Xml.Linq.XElement.GetDefaultNamespace">
      <summary vsli:raw="Gets the default &lt;see cref=&quot;T:System.Xml.Linq.XNamespace&quot; /&gt; of this &lt;see cref=&quot;T:System.Xml.Linq.XElement&quot; /&gt;.">Obtient le <see cref="T:System.Xml.Linq.XNamespace" /> par défaut de ce <see cref="T:System.Xml.Linq.XElement" />.</summary>
      <returns vsli:raw="An &lt;see cref=&quot;T:System.Xml.Linq.XNamespace&quot; /&gt; that contains the default namespace of this &lt;see cref=&quot;T:System.Xml.Linq.XElement&quot; /&gt;.">
        <see cref="T:System.Xml.Linq.XNamespace" /> qui contient l'espace de noms par défaut de ce <see cref="T:System.Xml.Linq.XElement" />.</returns>
    </member>
    <member name="M:System.Xml.Linq.XElement.GetNamespaceOfPrefix(System.String)">
      <summary vsli:raw="Gets the namespace associated with a particular prefix for this &lt;see cref=&quot;T:System.Xml.Linq.XElement&quot; /&gt;.">Obtient l'espace de noms associé à un préfixe particulier pour ce <see cref="T:System.Xml.Linq.XElement" />.</summary>
      <param name="prefix" vsli:raw="A string that contains the namespace prefix to look up.">Chaîne contenant le préfixe d'espace de noms à rechercher.</param>
      <returns vsli:raw="An &lt;see cref=&quot;T:System.Xml.Linq.XNamespace&quot; /&gt; for the namespace associated with the prefix for this &lt;see cref=&quot;T:System.Xml.Linq.XElement&quot; /&gt;.">
        <see cref="T:System.Xml.Linq.XNamespace" /> pour l'espace de noms associé au préfixe pour ce <see cref="T:System.Xml.Linq.XElement" />.</returns>
    </member>
    <member name="M:System.Xml.Linq.XElement.GetPrefixOfNamespace(System.Xml.Linq.XNamespace)">
      <summary vsli:raw="Gets the prefix associated with a namespace for this &lt;see cref=&quot;T:System.Xml.Linq.XElement&quot; /&gt;.">Obtient le préfixe associé à un espace de noms pour ce <see cref="T:System.Xml.Linq.XElement" />.</summary>
      <param name="ns" vsli:raw="An &lt;see cref=&quot;T:System.Xml.Linq.XNamespace&quot; /&gt; to look up.">
        <see cref="T:System.Xml.Linq.XNamespace" /> à rechercher.</param>
      <returns vsli:raw="A &lt;see cref=&quot;T:System.String&quot; /&gt; that contains the namespace prefix.">
        <see cref="T:System.String" /> qui contient le préfixe d'espace de noms.</returns>
    </member>
    <member name="M:System.Xml.Linq.XElement.Load(System.IO.Stream)">
      <summary vsli:raw="Creates a new &lt;see cref=&quot;T:System.Xml.Linq.XElement&quot; /&gt; instance by using the specified stream.">Crée une nouvelle instance de <see cref="T:System.Xml.Linq.XElement" /> à l'aide du flux spécifié.</summary>
      <param name="stream" vsli:raw="The stream that contains the XML data.">Flux contenant les données XML.</param>
      <returns vsli:raw="An &lt;see cref=&quot;T:System.Xml.Linq.XElement&quot; /&gt; object used to read the data that is contained in the stream.">Objet <see cref="T:System.Xml.Linq.XElement" /> permettant de lire les données contenues dans le flux de données.</returns>
    </member>
    <member name="M:System.Xml.Linq.XElement.Load(System.IO.Stream,System.Xml.Linq.LoadOptions)">
      <summary vsli:raw="Creates a new &lt;see cref=&quot;T:System.Xml.Linq.XElement&quot; /&gt; instance by using the specified stream, optionally preserving white space, setting the base URI, and retaining line information.">Crée une instance <see cref="T:System.Xml.Linq.XElement" /> à partir du flux spécifié, en conservant éventuellement l'espace blanc, en définissant l'URI de base, et en conservant les informations de ligne.</summary>
      <param name="stream" vsli:raw="The stream containing the XML data.">Flux contenant les données XML.</param>
      <param name="options" vsli:raw="A &lt;see cref=&quot;T:System.Xml.Linq.LoadOptions&quot; /&gt; object that specifies whether to load base URI and line information.">Objet <see cref="T:System.Xml.Linq.LoadOptions" /> qui spécifie s'il faut charger l'URI de base et les informations de ligne.</param>
      <returns vsli:raw="An &lt;see cref=&quot;T:System.Xml.Linq.XElement&quot; /&gt; object used to read the data that the stream contains.">Objet <see cref="T:System.Xml.Linq.XElement" /> permettant de lire les données contenues dans le flux de données.</returns>
    </member>
    <member name="M:System.Xml.Linq.XElement.Load(System.IO.TextReader)">
      <summary vsli:raw="Loads an &lt;see cref=&quot;T:System.Xml.Linq.XElement&quot; /&gt; from a &lt;see cref=&quot;T:System.IO.TextReader&quot; /&gt;.">Charge un <see cref="T:System.Xml.Linq.XElement" /> à partir d'un <see cref="T:System.IO.TextReader" />.</summary>
      <param name="textReader" vsli:raw="A &lt;see cref=&quot;T:System.IO.TextReader&quot; /&gt; that will be read for the &lt;see cref=&quot;T:System.Xml.Linq.XElement&quot; /&gt; content.">
        <see cref="T:System.IO.TextReader" /> qui sera lu pour le contenu <see cref="T:System.Xml.Linq.XElement" />.</param>
      <returns vsli:raw="An &lt;see cref=&quot;T:System.Xml.Linq.XElement&quot; /&gt; that contains the XML that was read from the specified &lt;see cref=&quot;T:System.IO.TextReader&quot; /&gt;.">
        <see cref="T:System.Xml.Linq.XElement" /> qui contient le code XML qui a été lu à partir du <see cref="T:System.IO.TextReader" />spécifié.</returns>
    </member>
    <member name="M:System.Xml.Linq.XElement.Load(System.IO.TextReader,System.Xml.Linq.LoadOptions)">
      <summary vsli:raw="Loads an &lt;see cref=&quot;T:System.Xml.Linq.XElement&quot; /&gt; from a &lt;see cref=&quot;T:System.IO.TextReader&quot; /&gt;, optionally preserving white space and retaining line information.">Charge un <see cref="T:System.Xml.Linq.XElement" /> à partir d'un <see cref="T:System.IO.TextReader" />, en conservant éventuellement l'espace blanc et les informations de ligne.</summary>
      <param name="textReader" vsli:raw="A &lt;see cref=&quot;T:System.IO.TextReader&quot; /&gt; that will be read for the &lt;see cref=&quot;T:System.Xml.Linq.XElement&quot; /&gt; content.">
        <see cref="T:System.IO.TextReader" /> qui sera lu pour le contenu <see cref="T:System.Xml.Linq.XElement" />.</param>
      <param name="options" vsli:raw="A &lt;see cref=&quot;T:System.Xml.Linq.LoadOptions&quot; /&gt; that specifies white space behavior, and whether to load base URI and line information.">
        <see cref="T:System.Xml.Linq.LoadOptions" /> qui spécifie le comportement pour les espaces blancs et détermine s'il faut charger l'URI de base et les informations de ligne.</param>
      <returns vsli:raw="An &lt;see cref=&quot;T:System.Xml.Linq.XElement&quot; /&gt; that contains the XML that was read from the specified &lt;see cref=&quot;T:System.IO.TextReader&quot; /&gt;.">
        <see cref="T:System.Xml.Linq.XElement" /> qui contient le code XML qui a été lu à partir du <see cref="T:System.IO.TextReader" />spécifié.</returns>
    </member>
    <member name="M:System.Xml.Linq.XElement.Load(System.String)">
      <summary vsli:raw="Loads an &lt;see cref=&quot;T:System.Xml.Linq.XElement&quot; /&gt; from a file.">Charge un <see cref="T:System.Xml.Linq.XElement" /> à partir d'un fichier.</summary>
      <param name="uri" vsli:raw="A URI string referencing the file to load into a new &lt;see cref=&quot;T:System.Xml.Linq.XElement&quot; /&gt;.">Chaîne d'URI faisant référence au fichier à charger dans un nouveau <see cref="T:System.Xml.Linq.XElement" />.</param>
      <returns vsli:raw="An &lt;see cref=&quot;T:System.Xml.Linq.XElement&quot; /&gt; that contains the contents of the specified file.">
        <see cref="T:System.Xml.Linq.XElement" /> qui contient le contenu du fichier spécifié.</returns>
    </member>
    <member name="M:System.Xml.Linq.XElement.Load(System.String,System.Xml.Linq.LoadOptions)">
      <summary vsli:raw="Loads an &lt;see cref=&quot;T:System.Xml.Linq.XElement&quot; /&gt; from a file, optionally preserving white space, setting the base URI, and retaining line information.">Charge un <see cref="T:System.Xml.Linq.XElement" /> à partir d'un fichier, en conservant éventuellement l'espace blanc, en définissant l'URI de base, et en conservant les informations de ligne.</summary>
      <param name="uri" vsli:raw="A URI string referencing the file to load into an &lt;see cref=&quot;T:System.Xml.Linq.XElement&quot; /&gt;.">Chaîne d'URI faisant référence au fichier à charger dans un <see cref="T:System.Xml.Linq.XElement" />.</param>
      <param name="options" vsli:raw="A &lt;see cref=&quot;T:System.Xml.Linq.LoadOptions&quot; /&gt; that specifies white space behavior, and whether to load base URI and line information.">
        <see cref="T:System.Xml.Linq.LoadOptions" /> qui spécifie le comportement pour les espaces blancs et détermine s'il faut charger l'URI de base et les informations de ligne.</param>
      <returns vsli:raw="An &lt;see cref=&quot;T:System.Xml.Linq.XElement&quot; /&gt; that contains the contents of the specified file.">
        <see cref="T:System.Xml.Linq.XElement" /> qui contient le contenu du fichier spécifié.</returns>
    </member>
    <member name="M:System.Xml.Linq.XElement.Load(System.Xml.XmlReader)">
      <summary vsli:raw="Loads an &lt;see cref=&quot;T:System.Xml.Linq.XElement&quot; /&gt; from an &lt;see cref=&quot;T:System.Xml.XmlReader&quot; /&gt;.">Charge un <see cref="T:System.Xml.Linq.XElement" /> à partir d'un <see cref="T:System.Xml.XmlReader" />.</summary>
      <param name="reader" vsli:raw="A &lt;see cref=&quot;T:System.Xml.XmlReader&quot; /&gt; that will be read for the content of the &lt;see cref=&quot;T:System.Xml.Linq.XElement&quot; /&gt;.">
        <see cref="T:System.Xml.XmlReader" /> qui sera lu pour le contenu du <see cref="T:System.Xml.Linq.XElement" />.</param>
      <returns vsli:raw="An &lt;see cref=&quot;T:System.Xml.Linq.XElement&quot; /&gt; that contains the XML that was read from the specified &lt;see cref=&quot;T:System.Xml.XmlReader&quot; /&gt;.">
        <see cref="T:System.Xml.Linq.XElement" /> qui contient le code XML qui a été lu à partir du <see cref="T:System.Xml.XmlReader" />spécifié.</returns>
    </member>
    <member name="M:System.Xml.Linq.XElement.Load(System.Xml.XmlReader,System.Xml.Linq.LoadOptions)">
      <summary vsli:raw="Loads an &lt;see cref=&quot;T:System.Xml.Linq.XElement&quot; /&gt; from an &lt;see cref=&quot;T:System.Xml.XmlReader&quot; /&gt;, optionally preserving white space, setting the base URI, and retaining line information.">Charge un <see cref="T:System.Xml.Linq.XElement" /> à partir d'un <see cref="T:System.Xml.XmlReader" />, en conservant éventuellement l'espace blanc, en définissant l'URI de base, et en conservant les informations de ligne.</summary>
      <param name="reader" vsli:raw="A &lt;see cref=&quot;T:System.Xml.XmlReader&quot; /&gt; that will be read for the content of the &lt;see cref=&quot;T:System.Xml.Linq.XElement&quot; /&gt;.">
        <see cref="T:System.Xml.XmlReader" /> qui sera lu pour le contenu du <see cref="T:System.Xml.Linq.XElement" />.</param>
      <param name="options" vsli:raw="A &lt;see cref=&quot;T:System.Xml.Linq.LoadOptions&quot; /&gt; that specifies white space behavior, and whether to load base URI and line information.">
        <see cref="T:System.Xml.Linq.LoadOptions" /> qui spécifie le comportement pour les espaces blancs et détermine s'il faut charger l'URI de base et les informations de ligne.</param>
      <returns vsli:raw="An &lt;see cref=&quot;T:System.Xml.Linq.XElement&quot; /&gt; that contains the XML that was read from the specified &lt;see cref=&quot;T:System.Xml.XmlReader&quot; /&gt;.">
        <see cref="T:System.Xml.Linq.XElement" /> qui contient le code XML qui a été lu à partir du <see cref="T:System.Xml.XmlReader" />spécifié.</returns>
    </member>
    <member name="M:System.Xml.Linq.XElement.LoadAsync(System.IO.Stream,System.Xml.Linq.LoadOptions,System.Threading.CancellationToken)">
      <summary vsli:raw="Asynchronously creates a new &lt;see cref=&quot;T:System.Xml.Linq.XElement&quot; /&gt; and initializes its underlying XML tree using the specified stream, optionally preserving white space.">Crée de façon asynchrone un nouveau <see cref="T:System.Xml.Linq.XElement" /> et initialise son arborescence XML sous-jacente à partir du flux spécifié, en conservant éventuellement l’espace blanc.</summary>
      <param name="stream" vsli:raw="The stream containing the raw XML to read.">Flux contenant le XML brut à lire.</param>
      <param name="options" vsli:raw="A bitwise combination of the enumeration values that specify the load options to parse the XML.">Combinaison de bits de valeurs d'énumération qui spécifient les options de chargement pour analyser le XML.</param>
      <param name="cancellationToken" vsli:raw="A token that can be used to request cancellation of the asynchronous operation.">Jeton qui peut être utilisé pour demander l'annulation de l'opération asynchrone.</param>
      <returns vsli:raw="A new &lt;see cref=&quot;T:System.Xml.Linq.XElement&quot; /&gt; containing the contents of the specified stream.">Nouveau <see cref="T:System.Xml.Linq.XElement" /> contenant le contenu du flux spécifié.</returns>
    </member>
    <member name="M:System.Xml.Linq.XElement.LoadAsync(System.IO.TextReader,System.Xml.Linq.LoadOptions,System.Threading.CancellationToken)">
      <summary vsli:raw="Asynchronously creates a new &lt;see cref=&quot;T:System.Xml.Linq.XElement&quot; /&gt; and initializes its underlying XML tree using the specified text reader, optionally preserving white space.">Crée de façon asynchrone un nouveau <see cref="T:System.Xml.Linq.XElement" /> et initialise son arborescence XML sous-jacente à partir du lecteur de texte spécifié, en conservant éventuellement l’espace blanc.</summary>
      <param name="textReader" vsli:raw="A reader containing the raw XML to read.">Lecteur contenant le XML brut à lire.</param>
      <param name="options" vsli:raw="A bitwise combination of the enumeration values that specify the load options to parse the XML.">Combinaison de bits de valeurs d'énumération qui spécifient les options de chargement pour analyser le XML.</param>
      <param name="cancellationToken" vsli:raw="A token that can be used to request cancellation of the asynchronous operation.">Jeton qui peut être utilisé pour demander l'annulation de l'opération asynchrone.</param>
      <returns vsli:raw="A new &lt;see cref=&quot;T:System.Xml.Linq.XElement&quot; /&gt; containing the contents of the specified reader.">Nouveau <see cref="T:System.Xml.Linq.XElement" /> contenant le contenu du lecteur spécifié.</returns>
    </member>
    <member name="M:System.Xml.Linq.XElement.LoadAsync(System.Xml.XmlReader,System.Xml.Linq.LoadOptions,System.Threading.CancellationToken)">
      <summary vsli:raw="Asynchronously creates a new &lt;see cref=&quot;T:System.Xml.Linq.XElement&quot; /&gt; and initializes its underlying XML tree using the specified XML reader, optionally preserving white space.">Crée de façon asynchrone un nouveau <see cref="T:System.Xml.Linq.XElement" /> et initialise son arborescence XML sous-jacente à partir du lecteur XML spécifié, en conservant éventuellement l’espace blanc.</summary>
      <param name="reader" vsli:raw="A reader containing the XML to be read.">Lecteur contenant le XML à lire.</param>
      <param name="options" vsli:raw="A bitwise combination of the enumeration values that specify the load options to parse the XML.">Combinaison de bits de valeurs d'énumération qui spécifient les options de chargement pour analyser le XML.</param>
      <param name="cancellationToken" vsli:raw="A token that can be used to request cancellation of the asynchronous operation.">Jeton qui peut être utilisé pour demander l'annulation de l'opération asynchrone.</param>
      <returns vsli:raw="A new &lt;see cref=&quot;T:System.Xml.Linq.XElement&quot; /&gt; containing the contents of the specified reader.">Nouveau <see cref="T:System.Xml.Linq.XElement" /> contenant le contenu du lecteur spécifié.</returns>
    </member>
    <member name="M:System.Xml.Linq.XElement.op_Explicit(System.Xml.Linq.XElement)~System.Boolean">
      <summary vsli:raw="Cast the value of this &lt;see cref=&quot;T:System.Xml.Linq.XElement&quot; /&gt; to a &lt;see cref=&quot;T:System.Boolean&quot; /&gt;.">Castez la valeur de ce <see cref="T:System.Xml.Linq.XElement" /> en <see cref="T:System.Boolean" />.</summary>
      <param name="element" vsli:raw="The &lt;see cref=&quot;T:System.Xml.Linq.XElement&quot; /&gt; to cast to &lt;see cref=&quot;T:System.Boolean&quot; /&gt;.">
        <see cref="T:System.Xml.Linq.XElement" /> à caster en <see cref="T:System.Boolean" />.</param>
      <exception cref="T:System.FormatException" vsli:raw="The element does not contain a valid &lt;see cref=&quot;T:System.Boolean&quot; /&gt; value.">L'élément ne contient pas de valeur <see cref="T:System.Boolean" /> valide.</exception>
      <exception cref="T:System.ArgumentNullException" vsli:raw="The &lt;paramref name=&quot;element&quot; /&gt; parameter is &lt;see langword=&quot;null&quot; /&gt;.">Le paramètre <paramref name="element" /> a la valeur <see langword="null" />.</exception>
      <returns vsli:raw="A &lt;see cref=&quot;T:System.Boolean&quot; /&gt; that contains the content of this &lt;see cref=&quot;T:System.Xml.Linq.XElement&quot; /&gt;.">
        <see cref="T:System.Boolean" /> qui contient le contenu de ce <see cref="T:System.Xml.Linq.XElement" />.</returns>
    </member>
    <member name="M:System.Xml.Linq.XElement.op_Explicit(System.Xml.Linq.XElement)~System.DateTime">
      <summary vsli:raw="Cast the value of this &lt;see cref=&quot;T:System.Xml.Linq.XElement&quot; /&gt; to a &lt;see cref=&quot;T:System.DateTime&quot; /&gt;.">Castez la valeur de ce <see cref="T:System.Xml.Linq.XElement" /> en <see cref="T:System.DateTime" />.</summary>
      <param name="element" vsli:raw="The &lt;see cref=&quot;T:System.Xml.Linq.XElement&quot; /&gt; to cast to &lt;see cref=&quot;T:System.DateTime&quot; /&gt;.">
        <see cref="T:System.Xml.Linq.XElement" /> à caster en <see cref="T:System.DateTime" />.</param>
      <exception cref="T:System.FormatException" vsli:raw="The element does not contain a valid &lt;see cref=&quot;T:System.DateTime&quot; /&gt; value.">L'élément ne contient pas de valeur <see cref="T:System.DateTime" /> valide.</exception>
      <exception cref="T:System.ArgumentNullException" vsli:raw="The &lt;paramref name=&quot;element&quot; /&gt; parameter is &lt;see langword=&quot;null&quot; /&gt;.">Le paramètre <paramref name="element" /> a la valeur <see langword="null" />.</exception>
      <returns vsli:raw="A &lt;see cref=&quot;T:System.DateTime&quot; /&gt; that contains the content of this &lt;see cref=&quot;T:System.Xml.Linq.XElement&quot; /&gt;.">
        <see cref="T:System.DateTime" /> qui contient le contenu de ce <see cref="T:System.Xml.Linq.XElement" />.</returns>
    </member>
    <member name="M:System.Xml.Linq.XElement.op_Explicit(System.Xml.Linq.XElement)~System.DateTimeOffset">
      <summary vsli:raw="Cast the value of this &lt;see cref=&quot;T:System.Xml.Linq.XAttribute&quot; /&gt; to a &lt;see cref=&quot;T:System.DateTimeOffset&quot; /&gt;.">Castez la valeur de ce <see cref="T:System.Xml.Linq.XAttribute" /> en <see cref="T:System.DateTimeOffset" />.</summary>
      <param name="element" vsli:raw="The &lt;see cref=&quot;T:System.Xml.Linq.XElement&quot; /&gt; to cast to &lt;see cref=&quot;T:System.DateTimeOffset&quot; /&gt;.">
        <see cref="T:System.Xml.Linq.XElement" /> à caster en <see cref="T:System.DateTimeOffset" />.</param>
      <exception cref="T:System.FormatException" vsli:raw="The element does not contain a valid &lt;see cref=&quot;T:System.DateTimeOffset&quot; /&gt; value.">L'élément ne contient pas de valeur <see cref="T:System.DateTimeOffset" /> valide.</exception>
      <exception cref="T:System.ArgumentNullException" vsli:raw="The &lt;paramref name=&quot;element&quot; /&gt; parameter is &lt;see langword=&quot;null&quot; /&gt;.">Le paramètre <paramref name="element" /> a la valeur <see langword="null" />.</exception>
      <returns vsli:raw="A &lt;see cref=&quot;T:System.DateTimeOffset&quot; /&gt; that contains the content of this &lt;see cref=&quot;T:System.Xml.Linq.XElement&quot; /&gt;.">
        <see cref="T:System.DateTimeOffset" /> qui contient le contenu de ce <see cref="T:System.Xml.Linq.XElement" />.</returns>
    </member>
    <member name="M:System.Xml.Linq.XElement.op_Explicit(System.Xml.Linq.XElement)~System.Decimal">
      <summary vsli:raw="Cast the value of this &lt;see cref=&quot;T:System.Xml.Linq.XElement&quot; /&gt; to a &lt;see cref=&quot;T:System.Decimal&quot; /&gt;.">Castez la valeur de ce <see cref="T:System.Xml.Linq.XElement" /> en <see cref="T:System.Decimal" />.</summary>
      <param name="element" vsli:raw="The &lt;see cref=&quot;T:System.Xml.Linq.XElement&quot; /&gt; to cast to &lt;see cref=&quot;T:System.Decimal&quot; /&gt;.">
        <see cref="T:System.Xml.Linq.XElement" /> à caster en <see cref="T:System.Decimal" />.</param>
      <exception cref="T:System.FormatException" vsli:raw="The element does not contain a valid &lt;see cref=&quot;T:System.Decimal&quot; /&gt; value.">L'élément ne contient pas de valeur <see cref="T:System.Decimal" /> valide.</exception>
      <exception cref="T:System.ArgumentNullException" vsli:raw="The &lt;paramref name=&quot;element&quot; /&gt; parameter is &lt;see langword=&quot;null&quot; /&gt;.">Le paramètre <paramref name="element" /> a la valeur <see langword="null" />.</exception>
      <returns vsli:raw="A &lt;see cref=&quot;T:System.Decimal&quot; /&gt; that contains the content of this &lt;see cref=&quot;T:System.Xml.Linq.XElement&quot; /&gt;.">
        <see cref="T:System.Decimal" /> qui contient le contenu de ce <see cref="T:System.Xml.Linq.XElement" />.</returns>
    </member>
    <member name="M:System.Xml.Linq.XElement.op_Explicit(System.Xml.Linq.XElement)~System.Double">
      <summary vsli:raw="Cast the value of this &lt;see cref=&quot;T:System.Xml.Linq.XElement&quot; /&gt; to a &lt;see cref=&quot;T:System.Double&quot; /&gt;.">Castez la valeur de ce <see cref="T:System.Xml.Linq.XElement" /> en <see cref="T:System.Double" />.</summary>
      <param name="element" vsli:raw="The &lt;see cref=&quot;T:System.Xml.Linq.XElement&quot; /&gt; to cast to &lt;see cref=&quot;T:System.Double&quot; /&gt;.">
        <see cref="T:System.Xml.Linq.XElement" /> à caster en <see cref="T:System.Double" />.</param>
      <exception cref="T:System.FormatException" vsli:raw="The element does not contain a valid &lt;see cref=&quot;T:System.Double&quot; /&gt; value.">L'élément ne contient pas de valeur <see cref="T:System.Double" /> valide.</exception>
      <exception cref="T:System.ArgumentNullException" vsli:raw="The &lt;paramref name=&quot;element&quot; /&gt; parameter is &lt;see langword=&quot;null&quot; /&gt;.">Le paramètre <paramref name="element" /> a la valeur <see langword="null" />.</exception>
      <returns vsli:raw="A &lt;see cref=&quot;T:System.Double&quot; /&gt; that contains the content of this &lt;see cref=&quot;T:System.Xml.Linq.XElement&quot; /&gt;.">
        <see cref="T:System.Double" /> qui contient le contenu de ce <see cref="T:System.Xml.Linq.XElement" />.</returns>
    </member>
    <member name="M:System.Xml.Linq.XElement.op_Explicit(System.Xml.Linq.XElement)~System.Guid">
      <summary vsli:raw="Cast the value of this &lt;see cref=&quot;T:System.Xml.Linq.XElement&quot; /&gt; to a &lt;see cref=&quot;T:System.Guid&quot; /&gt;.">Castez la valeur de ce <see cref="T:System.Xml.Linq.XElement" /> en <see cref="T:System.Guid" />.</summary>
      <param name="element" vsli:raw="The &lt;see cref=&quot;T:System.Xml.Linq.XElement&quot; /&gt; to cast to &lt;see cref=&quot;T:System.Guid&quot; /&gt;.">
        <see cref="T:System.Xml.Linq.XElement" /> à caster en <see cref="T:System.Guid" />.</param>
      <exception cref="T:System.FormatException" vsli:raw="The element does not contain a valid &lt;see cref=&quot;T:System.Guid&quot; /&gt; value.">L'élément ne contient pas de valeur <see cref="T:System.Guid" /> valide.</exception>
      <exception cref="T:System.ArgumentNullException" vsli:raw="The &lt;paramref name=&quot;element&quot; /&gt; parameter is &lt;see langword=&quot;null&quot; /&gt;.">Le paramètre <paramref name="element" /> a la valeur <see langword="null" />.</exception>
      <returns vsli:raw="A &lt;see cref=&quot;T:System.Guid&quot; /&gt; that contains the content of this &lt;see cref=&quot;T:System.Xml.Linq.XElement&quot; /&gt;.">
        <see cref="T:System.Guid" /> qui contient le contenu de ce <see cref="T:System.Xml.Linq.XElement" />.</returns>
    </member>
    <member name="M:System.Xml.Linq.XElement.op_Explicit(System.Xml.Linq.XElement)~System.Int32">
      <summary vsli:raw="Cast the value of this &lt;see cref=&quot;T:System.Xml.Linq.XElement&quot; /&gt; to an &lt;see cref=&quot;T:System.Int32&quot; /&gt;.">Castez la valeur de ce <see cref="T:System.Xml.Linq.XElement" /> en <see cref="T:System.Int32" />.</summary>
      <param name="element" vsli:raw="The &lt;see cref=&quot;T:System.Xml.Linq.XElement&quot; /&gt; to cast to &lt;see cref=&quot;T:System.Int32&quot; /&gt;.">
        <see cref="T:System.Xml.Linq.XElement" /> à caster en <see cref="T:System.Int32" />.</param>
      <exception cref="T:System.FormatException" vsli:raw="The element does not contain a valid &lt;see cref=&quot;T:System.Int32&quot; /&gt; value.">L'élément ne contient pas de valeur <see cref="T:System.Int32" /> valide.</exception>
      <exception cref="T:System.ArgumentNullException" vsli:raw="The &lt;paramref name=&quot;element&quot; /&gt; parameter is &lt;see langword=&quot;null&quot; /&gt;.">Le paramètre <paramref name="element" /> a la valeur <see langword="null" />.</exception>
      <returns vsli:raw="A &lt;see cref=&quot;T:System.Int32&quot; /&gt; that contains the content of this &lt;see cref=&quot;T:System.Xml.Linq.XElement&quot; /&gt;.">
        <see cref="T:System.Int32" /> qui contient le contenu de ce <see cref="T:System.Xml.Linq.XElement" />.</returns>
    </member>
    <member name="M:System.Xml.Linq.XElement.op_Explicit(System.Xml.Linq.XElement)~System.Int64">
      <summary vsli:raw="Cast the value of this &lt;see cref=&quot;T:System.Xml.Linq.XElement&quot; /&gt; to an &lt;see cref=&quot;T:System.Int64&quot; /&gt;.">Castez la valeur de ce <see cref="T:System.Xml.Linq.XElement" /> en <see cref="T:System.Int64" />.</summary>
      <param name="element" vsli:raw="The &lt;see cref=&quot;T:System.Xml.Linq.XElement&quot; /&gt; to cast to &lt;see cref=&quot;T:System.Int64&quot; /&gt;.">
        <see cref="T:System.Xml.Linq.XElement" /> à caster en <see cref="T:System.Int64" />.</param>
      <exception cref="T:System.FormatException" vsli:raw="The element does not contain a valid &lt;see cref=&quot;T:System.Int64&quot; /&gt; value.">L'élément ne contient pas de valeur <see cref="T:System.Int64" /> valide.</exception>
      <exception cref="T:System.ArgumentNullException" vsli:raw="The &lt;paramref name=&quot;element&quot; /&gt; parameter is &lt;see langword=&quot;null&quot; /&gt;.">Le paramètre <paramref name="element" /> a la valeur <see langword="null" />.</exception>
      <returns vsli:raw="A &lt;see cref=&quot;T:System.Int64&quot; /&gt; that contains the content of this &lt;see cref=&quot;T:System.Xml.Linq.XElement&quot; /&gt;.">
        <see cref="T:System.Int64" /> qui contient le contenu de ce <see cref="T:System.Xml.Linq.XElement" />.</returns>
    </member>
    <member name="M:System.Xml.Linq.XElement.op_Explicit(System.Xml.Linq.XElement)~System.Nullable{System.Boolean}">
      <summary vsli:raw="Cast the value of this &lt;see cref=&quot;T:System.Xml.Linq.XElement&quot; /&gt; to a &lt;see cref=&quot;T:System.Nullable`1&quot; /&gt; of &lt;see cref=&quot;T:System.Boolean&quot; /&gt;.">Castez la valeur de ce <see cref="T:System.Xml.Linq.XElement" /> en <see cref="T:System.Nullable`1" /> de <see cref="T:System.Boolean" />.</summary>
      <param name="element" vsli:raw="The &lt;see cref=&quot;T:System.Xml.Linq.XElement&quot; /&gt; to cast to &lt;see cref=&quot;T:System.Nullable`1&quot; /&gt; of &lt;see cref=&quot;T:System.Boolean&quot; /&gt;.">
        <see cref="T:System.Xml.Linq.XElement" /> à caster en <see cref="T:System.Nullable`1" /> de <see cref="T:System.Boolean" />.</param>
      <exception cref="T:System.FormatException" vsli:raw="The element is not &lt;see langword=&quot;null&quot; /&gt; and does not contain a valid &lt;see cref=&quot;T:System.Boolean&quot; /&gt; value.">L'élément n’est pas <see langword="null" /> et ne contient pas de valeur <see cref="T:System.Boolean" /> valide.</exception>
      <returns vsli:raw="A &lt;see cref=&quot;T:System.Nullable`1&quot; /&gt; of &lt;see cref=&quot;T:System.Boolean&quot; /&gt; that contains the content of this &lt;see cref=&quot;T:System.Xml.Linq.XElement&quot; /&gt;.">
        <see cref="T:System.Nullable`1" /> de <see cref="T:System.Boolean" /> qui contient le contenu de ce <see cref="T:System.Xml.Linq.XElement" />.</returns>
    </member>
    <member name="M:System.Xml.Linq.XElement.op_Explicit(System.Xml.Linq.XElement)~System.Nullable{System.DateTime}">
      <summary vsli:raw="Cast the value of this &lt;see cref=&quot;T:System.Xml.Linq.XElement&quot; /&gt; to a &lt;see cref=&quot;T:System.Nullable`1&quot; /&gt; of &lt;see cref=&quot;T:System.DateTime&quot; /&gt;.">Castez la valeur de ce <see cref="T:System.Xml.Linq.XElement" /> en <see cref="T:System.Nullable`1" /> de <see cref="T:System.DateTime" />.</summary>
      <param name="element" vsli:raw="The &lt;see cref=&quot;T:System.Xml.Linq.XElement&quot; /&gt; to cast to &lt;see cref=&quot;T:System.Nullable`1&quot; /&gt; of &lt;see cref=&quot;T:System.DateTime&quot; /&gt;.">
        <see cref="T:System.Xml.Linq.XElement" /> à caster en <see cref="T:System.Nullable`1" /> de <see cref="T:System.DateTime" />.</param>
      <exception cref="T:System.FormatException" vsli:raw="The element is not &lt;see langword=&quot;null&quot; /&gt; and does not contain a valid &lt;see cref=&quot;T:System.DateTime&quot; /&gt; value.">L'élément n’est pas <see langword="null" /> et ne contient pas de valeur <see cref="T:System.DateTime" /> valide.</exception>
      <returns vsli:raw="A &lt;see cref=&quot;T:System.Nullable`1&quot; /&gt; of &lt;see cref=&quot;T:System.DateTime&quot; /&gt; that contains the content of this &lt;see cref=&quot;T:System.Xml.Linq.XElement&quot; /&gt;.">
        <see cref="T:System.Nullable`1" /> de <see cref="T:System.DateTime" /> qui contient le contenu de ce <see cref="T:System.Xml.Linq.XElement" />.</returns>
    </member>
    <member name="M:System.Xml.Linq.XElement.op_Explicit(System.Xml.Linq.XElement)~System.Nullable{System.DateTimeOffset}">
      <summary vsli:raw="Cast the value of this &lt;see cref=&quot;T:System.Xml.Linq.XElement&quot; /&gt; to a &lt;see cref=&quot;T:System.Nullable`1&quot; /&gt; of &lt;see cref=&quot;T:System.DateTimeOffset&quot; /&gt;.">Castez la valeur de ce <see cref="T:System.Xml.Linq.XElement" /> en <see cref="T:System.Nullable`1" /> de <see cref="T:System.DateTimeOffset" />.</summary>
      <param name="element" vsli:raw="The &lt;see cref=&quot;T:System.Xml.Linq.XElement&quot; /&gt; to cast to an &lt;see cref=&quot;T:System.Nullable`1&quot; /&gt; of &lt;see cref=&quot;T:System.DateTimeOffset&quot; /&gt;.">
        <see cref="T:System.Xml.Linq.XElement" /> à caster en <see cref="T:System.Nullable`1" /> de <see cref="T:System.DateTimeOffset" />.</param>
      <exception cref="T:System.FormatException" vsli:raw="The element is not &lt;see langword=&quot;null&quot; /&gt; and does not contain a valid &lt;see cref=&quot;T:System.DateTimeOffset&quot; /&gt; value.">L'élément n’est pas <see langword="null" /> et ne contient pas de valeur <see cref="T:System.DateTimeOffset" /> valide.</exception>
      <returns vsli:raw="A &lt;see cref=&quot;T:System.Nullable`1&quot; /&gt; of &lt;see cref=&quot;T:System.DateTimeOffset&quot; /&gt; that contains the content of this &lt;see cref=&quot;T:System.Xml.Linq.XElement&quot; /&gt;.">
        <see cref="T:System.Nullable`1" /> de <see cref="T:System.DateTimeOffset" /> qui contient le contenu de ce <see cref="T:System.Xml.Linq.XElement" />.</returns>
    </member>
    <member name="M:System.Xml.Linq.XElement.op_Explicit(System.Xml.Linq.XElement)~System.Nullable{System.Decimal}">
      <summary vsli:raw="Cast the value of this &lt;see cref=&quot;T:System.Xml.Linq.XElement&quot; /&gt; to a &lt;see cref=&quot;T:System.Nullable`1&quot; /&gt; of &lt;see cref=&quot;T:System.Decimal&quot; /&gt;.">Castez la valeur de ce <see cref="T:System.Xml.Linq.XElement" /> en <see cref="T:System.Nullable`1" /> de <see cref="T:System.Decimal" />.</summary>
      <param name="element" vsli:raw="The &lt;see cref=&quot;T:System.Xml.Linq.XElement&quot; /&gt; to cast to &lt;see cref=&quot;T:System.Nullable`1&quot; /&gt; of &lt;see cref=&quot;T:System.Decimal&quot; /&gt;.">
        <see cref="T:System.Xml.Linq.XElement" /> à caster en <see cref="T:System.Nullable`1" /> de <see cref="T:System.Decimal" />.</param>
      <exception cref="T:System.FormatException" vsli:raw="The element is not &lt;see langword=&quot;null&quot; /&gt; and does not contain a valid &lt;see cref=&quot;T:System.Decimal&quot; /&gt; value.">L'élément n’est pas <see langword="null" /> et ne contient pas de valeur <see cref="T:System.Decimal" /> valide.</exception>
      <returns vsli:raw="A &lt;see cref=&quot;T:System.Nullable`1&quot; /&gt; of &lt;see cref=&quot;T:System.Decimal&quot; /&gt; that contains the content of this &lt;see cref=&quot;T:System.Xml.Linq.XElement&quot; /&gt;.">
        <see cref="T:System.Nullable`1" /> de <see cref="T:System.Decimal" /> qui contient le contenu de ce <see cref="T:System.Xml.Linq.XElement" />.</returns>
    </member>
    <member name="M:System.Xml.Linq.XElement.op_Explicit(System.Xml.Linq.XElement)~System.Nullable{System.Double}">
      <summary vsli:raw="Cast the value of this &lt;see cref=&quot;T:System.Xml.Linq.XElement&quot; /&gt; to a &lt;see cref=&quot;T:System.Nullable`1&quot; /&gt; of &lt;see cref=&quot;T:System.Double&quot; /&gt;.">Castez la valeur de ce <see cref="T:System.Xml.Linq.XElement" /> en <see cref="T:System.Nullable`1" /> de <see cref="T:System.Double" />.</summary>
      <param name="element" vsli:raw="The &lt;see cref=&quot;T:System.Xml.Linq.XElement&quot; /&gt; to cast to &lt;see cref=&quot;T:System.Nullable`1&quot; /&gt; of &lt;see cref=&quot;T:System.Double&quot; /&gt;.">
        <see cref="T:System.Xml.Linq.XElement" /> à caster en <see cref="T:System.Nullable`1" /> de <see cref="T:System.Double" />.</param>
      <exception cref="T:System.FormatException" vsli:raw="The element is not &lt;see langword=&quot;null&quot; /&gt; and does not contain a valid &lt;see cref=&quot;T:System.Double&quot; /&gt; value.">L'élément n’est pas <see langword="null" /> et ne contient pas de valeur <see cref="T:System.Double" /> valide.</exception>
      <returns vsli:raw="A &lt;see cref=&quot;T:System.Nullable`1&quot; /&gt; of &lt;see cref=&quot;T:System.Double&quot; /&gt; that contains the content of this &lt;see cref=&quot;T:System.Xml.Linq.XElement&quot; /&gt;.">
        <see cref="T:System.Nullable`1" /> de <see cref="T:System.Double" /> qui contient le contenu de ce <see cref="T:System.Xml.Linq.XElement" />.</returns>
    </member>
    <member name="M:System.Xml.Linq.XElement.op_Explicit(System.Xml.Linq.XElement)~System.Nullable{System.Guid}">
      <summary vsli:raw="Cast the value of this &lt;see cref=&quot;T:System.Xml.Linq.XElement&quot; /&gt; to a &lt;see cref=&quot;T:System.Nullable`1&quot; /&gt; of &lt;see cref=&quot;T:System.Guid&quot; /&gt;.">Castez la valeur de ce <see cref="T:System.Xml.Linq.XElement" /> en <see cref="T:System.Nullable`1" /> de <see cref="T:System.Guid" />.</summary>
      <param name="element" vsli:raw="The &lt;see cref=&quot;T:System.Xml.Linq.XElement&quot; /&gt; to cast to &lt;see cref=&quot;T:System.Nullable`1&quot; /&gt; of &lt;see cref=&quot;T:System.Guid&quot; /&gt;.">
        <see cref="T:System.Xml.Linq.XElement" /> à caster en <see cref="T:System.Nullable`1" /> de <see cref="T:System.Guid" />.</param>
      <exception cref="T:System.FormatException" vsli:raw="The element is not &lt;see langword=&quot;null&quot; /&gt; and does not contain a valid &lt;see cref=&quot;T:System.Guid&quot; /&gt; value.">L'élément n’est pas <see langword="null" /> et ne contient pas de valeur <see cref="T:System.Guid" /> valide.</exception>
      <returns vsli:raw="A &lt;see cref=&quot;T:System.Nullable`1&quot; /&gt; of &lt;see cref=&quot;T:System.Guid&quot; /&gt; that contains the content of this &lt;see cref=&quot;T:System.Xml.Linq.XElement&quot; /&gt;.">
        <see cref="T:System.Nullable`1" /> de <see cref="T:System.Guid" /> qui contient le contenu de ce <see cref="T:System.Xml.Linq.XElement" />.</returns>
    </member>
    <member name="M:System.Xml.Linq.XElement.op_Explicit(System.Xml.Linq.XElement)~System.Nullable{System.Int32}">
      <summary vsli:raw="Cast the value of this &lt;see cref=&quot;T:System.Xml.Linq.XElement&quot; /&gt; to a &lt;see cref=&quot;T:System.Nullable`1&quot; /&gt; of &lt;see cref=&quot;T:System.Int32&quot; /&gt;.">Castez la valeur de ce <see cref="T:System.Xml.Linq.XElement" /> en <see cref="T:System.Nullable`1" /> de <see cref="T:System.Int32" />.</summary>
      <param name="element" vsli:raw="The &lt;see cref=&quot;T:System.Xml.Linq.XElement&quot; /&gt; to cast to &lt;see cref=&quot;T:System.Nullable`1&quot; /&gt; of &lt;see cref=&quot;T:System.Int32&quot; /&gt;.">
        <see cref="T:System.Xml.Linq.XElement" /> à caster en <see cref="T:System.Nullable`1" /> de <see cref="T:System.Int32" />.</param>
      <exception cref="T:System.FormatException" vsli:raw="The element is not &lt;see langword=&quot;null&quot; /&gt; and does not contain a valid &lt;see cref=&quot;T:System.Int32&quot; /&gt; value.">L'élément n’est pas <see langword="null" /> et ne contient pas de valeur <see cref="T:System.Int32" /> valide.</exception>
      <returns vsli:raw="A &lt;see cref=&quot;T:System.Nullable`1&quot; /&gt; of &lt;see cref=&quot;T:System.Int32&quot; /&gt; that contains the content of this &lt;see cref=&quot;T:System.Xml.Linq.XElement&quot; /&gt;.">
        <see cref="T:System.Nullable`1" /> de <see cref="T:System.Int32" /> qui contient le contenu de ce <see cref="T:System.Xml.Linq.XElement" />.</returns>
    </member>
    <member name="M:System.Xml.Linq.XElement.op_Explicit(System.Xml.Linq.XElement)~System.Nullable{System.Int64}">
      <summary vsli:raw="Cast the value of this &lt;see cref=&quot;T:System.Xml.Linq.XElement&quot; /&gt; to a &lt;see cref=&quot;T:System.Nullable`1&quot; /&gt; of &lt;see cref=&quot;T:System.Int64&quot; /&gt;.">Castez la valeur de ce <see cref="T:System.Xml.Linq.XElement" /> en <see cref="T:System.Nullable`1" /> de <see cref="T:System.Int64" />.</summary>
      <param name="element" vsli:raw="The &lt;see cref=&quot;T:System.Xml.Linq.XElement&quot; /&gt; to cast to &lt;see cref=&quot;T:System.Nullable`1&quot; /&gt; of &lt;see cref=&quot;T:System.Int64&quot; /&gt;.">
        <see cref="T:System.Xml.Linq.XElement" /> à caster en <see cref="T:System.Nullable`1" /> de <see cref="T:System.Int64" />.</param>
      <exception cref="T:System.FormatException" vsli:raw="The element is not &lt;see langword=&quot;null&quot; /&gt; and does not contain a valid &lt;see cref=&quot;T:System.Int64&quot; /&gt; value.">L'élément n’est pas <see langword="null" /> et ne contient pas de valeur <see cref="T:System.Int64" /> valide.</exception>
      <returns vsli:raw="A &lt;see cref=&quot;T:System.Nullable`1&quot; /&gt; of &lt;see cref=&quot;T:System.Int64&quot; /&gt; that contains the content of this &lt;see cref=&quot;T:System.Xml.Linq.XElement&quot; /&gt;.">
        <see cref="T:System.Nullable`1" /> de <see cref="T:System.Int64" /> qui contient le contenu de ce <see cref="T:System.Xml.Linq.XElement" />.</returns>
    </member>
    <member name="M:System.Xml.Linq.XElement.op_Explicit(System.Xml.Linq.XElement)~System.Nullable{System.Single}">
      <summary vsli:raw="Cast the value of this &lt;see cref=&quot;T:System.Xml.Linq.XElement&quot; /&gt; to a &lt;see cref=&quot;T:System.Nullable`1&quot; /&gt; of &lt;see cref=&quot;T:System.Single&quot; /&gt;.">Castez la valeur de ce <see cref="T:System.Xml.Linq.XElement" /> en <see cref="T:System.Nullable`1" /> de <see cref="T:System.Single" />.</summary>
      <param name="element" vsli:raw="The &lt;see cref=&quot;T:System.Xml.Linq.XElement&quot; /&gt; to cast to &lt;see cref=&quot;T:System.Nullable`1&quot; /&gt; of &lt;see cref=&quot;T:System.Single&quot; /&gt;.">
        <see cref="T:System.Xml.Linq.XElement" /> à caster en <see cref="T:System.Nullable`1" /> de <see cref="T:System.Single" />.</param>
      <exception cref="T:System.FormatException" vsli:raw="The element is not &lt;see langword=&quot;null&quot; /&gt; and does not contain a valid &lt;see cref=&quot;T:System.Single&quot; /&gt; value.">L'élément n’est pas <see langword="null" /> et ne contient pas de valeur <see cref="T:System.Single" /> valide.</exception>
      <returns vsli:raw="A &lt;see cref=&quot;T:System.Nullable`1&quot; /&gt; of &lt;see cref=&quot;T:System.Single&quot; /&gt; that contains the content of this &lt;see cref=&quot;T:System.Xml.Linq.XElement&quot; /&gt;.">
        <see cref="T:System.Nullable`1" /> de <see cref="T:System.Single" /> qui contient le contenu de ce <see cref="T:System.Xml.Linq.XElement" />.</returns>
    </member>
    <member name="M:System.Xml.Linq.XElement.op_Explicit(System.Xml.Linq.XElement)~System.Nullable{System.TimeSpan}">
      <summary vsli:raw="Cast the value of this &lt;see cref=&quot;T:System.Xml.Linq.XElement&quot; /&gt; to a &lt;see cref=&quot;T:System.Nullable`1&quot; /&gt; of &lt;see cref=&quot;T:System.TimeSpan&quot; /&gt;.">Castez la valeur de ce <see cref="T:System.Xml.Linq.XElement" /> en <see cref="T:System.Nullable`1" /> de <see cref="T:System.TimeSpan" />.</summary>
      <param name="element" vsli:raw="The &lt;see cref=&quot;T:System.Xml.Linq.XElement&quot; /&gt; to cast to &lt;see cref=&quot;T:System.Nullable`1&quot; /&gt; of &lt;see cref=&quot;T:System.TimeSpan&quot; /&gt;.">
        <see cref="T:System.Xml.Linq.XElement" /> à caster en <see cref="T:System.Nullable`1" /> de <see cref="T:System.TimeSpan" />.</param>
      <exception cref="T:System.FormatException" vsli:raw="The element is not &lt;see langword=&quot;null&quot; /&gt; and does not contain a valid &lt;see cref=&quot;T:System.TimeSpan&quot; /&gt; value.">L'élément n’est pas <see langword="null" /> et ne contient pas de valeur <see cref="T:System.TimeSpan" /> valide.</exception>
      <returns vsli:raw="A &lt;see cref=&quot;T:System.Nullable`1&quot; /&gt; of &lt;see cref=&quot;T:System.TimeSpan&quot; /&gt; that contains the content of this &lt;see cref=&quot;T:System.Xml.Linq.XElement&quot; /&gt;.">
        <see cref="T:System.Nullable`1" /> de <see cref="T:System.TimeSpan" /> qui contient le contenu de ce <see cref="T:System.Xml.Linq.XElement" />.</returns>
    </member>
    <member name="M:System.Xml.Linq.XElement.op_Explicit(System.Xml.Linq.XElement)~System.Nullable{System.UInt32}">
      <summary vsli:raw="Cast the value of this &lt;see cref=&quot;T:System.Xml.Linq.XElement&quot; /&gt; to a &lt;see cref=&quot;T:System.Nullable`1&quot; /&gt; of &lt;see cref=&quot;T:System.UInt32&quot; /&gt;.">Castez la valeur de ce <see cref="T:System.Xml.Linq.XElement" /> en <see cref="T:System.Nullable`1" /> de <see cref="T:System.UInt32" />.</summary>
      <param name="element" vsli:raw="The &lt;see cref=&quot;T:System.Xml.Linq.XElement&quot; /&gt; to cast to &lt;see cref=&quot;T:System.Nullable`1&quot; /&gt; of &lt;see cref=&quot;T:System.UInt32&quot; /&gt;.">
        <see cref="T:System.Xml.Linq.XElement" /> à caster en <see cref="T:System.Nullable`1" /> de <see cref="T:System.UInt32" />.</param>
      <exception cref="T:System.FormatException" vsli:raw="The element is not &lt;see langword=&quot;null&quot; /&gt; and does not contain a valid &lt;see cref=&quot;T:System.UInt32&quot; /&gt; value.">L'élément n’est pas <see langword="null" /> et ne contient pas de valeur <see cref="T:System.UInt32" /> valide.</exception>
      <returns vsli:raw="A &lt;see cref=&quot;T:System.Nullable`1&quot; /&gt; of &lt;see cref=&quot;T:System.UInt32&quot; /&gt; that contains the content of this &lt;see cref=&quot;T:System.Xml.Linq.XElement&quot; /&gt;.">
        <see cref="T:System.Nullable`1" /> de <see cref="T:System.UInt32" /> qui contient le contenu de ce <see cref="T:System.Xml.Linq.XElement" />.</returns>
    </member>
    <member name="M:System.Xml.Linq.XElement.op_Explicit(System.Xml.Linq.XElement)~System.Nullable{System.UInt64}">
      <summary vsli:raw="Cast the value of this &lt;see cref=&quot;T:System.Xml.Linq.XElement&quot; /&gt; to a &lt;see cref=&quot;T:System.Nullable`1&quot; /&gt; of &lt;see cref=&quot;T:System.UInt64&quot; /&gt;.">Castez la valeur de ce <see cref="T:System.Xml.Linq.XElement" /> en <see cref="T:System.Nullable`1" /> de <see cref="T:System.UInt64" />.</summary>
      <param name="element" vsli:raw="The &lt;see cref=&quot;T:System.Xml.Linq.XElement&quot; /&gt; to cast to &lt;see cref=&quot;T:System.Nullable`1&quot; /&gt; of &lt;see cref=&quot;T:System.UInt64&quot; /&gt;.">
        <see cref="T:System.Xml.Linq.XElement" /> à caster en <see cref="T:System.Nullable`1" /> de <see cref="T:System.UInt64" />.</param>
      <exception cref="T:System.FormatException" vsli:raw="The element is not &lt;see langword=&quot;null&quot; /&gt; and does not contain a valid &lt;see cref=&quot;T:System.UInt64&quot; /&gt; value.">L'élément n’est pas <see langword="null" /> et ne contient pas de valeur <see cref="T:System.UInt64" /> valide.</exception>
      <returns vsli:raw="A &lt;see cref=&quot;T:System.Nullable`1&quot; /&gt; of &lt;see cref=&quot;T:System.UInt64&quot; /&gt; that contains the content of this &lt;see cref=&quot;T:System.Xml.Linq.XElement&quot; /&gt;.">
        <see cref="T:System.Nullable`1" /> de <see cref="T:System.UInt64" /> qui contient le contenu de ce <see cref="T:System.Xml.Linq.XElement" />.</returns>
    </member>
    <member name="M:System.Xml.Linq.XElement.op_Explicit(System.Xml.Linq.XElement)~System.Single">
      <summary vsli:raw="Cast the value of this &lt;see cref=&quot;T:System.Xml.Linq.XElement&quot; /&gt; to a &lt;see cref=&quot;T:System.Single&quot; /&gt;.">Castez la valeur de ce <see cref="T:System.Xml.Linq.XElement" /> en <see cref="T:System.Single" />.</summary>
      <param name="element" vsli:raw="The &lt;see cref=&quot;T:System.Xml.Linq.XElement&quot; /&gt; to cast to &lt;see cref=&quot;T:System.Single&quot; /&gt;.">
        <see cref="T:System.Xml.Linq.XElement" /> à caster en <see cref="T:System.Single" />.</param>
      <exception cref="T:System.FormatException" vsli:raw="The element does not contain a valid &lt;see cref=&quot;T:System.Single&quot; /&gt; value.">L'élément ne contient pas de valeur <see cref="T:System.Single" /> valide.</exception>
      <exception cref="T:System.ArgumentNullException" vsli:raw="The &lt;paramref name=&quot;element&quot; /&gt; parameter is &lt;see langword=&quot;null&quot; /&gt;.">Le paramètre <paramref name="element" /> a la valeur <see langword="null" />.</exception>
      <returns vsli:raw="A &lt;see cref=&quot;T:System.Single&quot; /&gt; that contains the content of this &lt;see cref=&quot;T:System.Xml.Linq.XElement&quot; /&gt;.">
        <see cref="T:System.Single" /> qui contient le contenu de ce <see cref="T:System.Xml.Linq.XElement" />.</returns>
    </member>
    <member name="M:System.Xml.Linq.XElement.op_Explicit(System.Xml.Linq.XElement)~System.String">
      <summary vsli:raw="Cast the value of this &lt;see cref=&quot;T:System.Xml.Linq.XElement&quot; /&gt; to a &lt;see cref=&quot;T:System.String&quot; /&gt;.">Castez la valeur de ce <see cref="T:System.Xml.Linq.XElement" /> en <see cref="T:System.String" />.</summary>
      <param name="element" vsli:raw="The &lt;see cref=&quot;T:System.Xml.Linq.XElement&quot; /&gt; to cast to &lt;see cref=&quot;T:System.String&quot; /&gt;.">
        <see cref="T:System.Xml.Linq.XElement" /> à caster en <see cref="T:System.String" />.</param>
      <returns vsli:raw="A &lt;see cref=&quot;T:System.String&quot; /&gt; that contains the content of this &lt;see cref=&quot;T:System.Xml.Linq.XElement&quot; /&gt;.">
        <see cref="T:System.String" /> qui contient le contenu de ce <see cref="T:System.Xml.Linq.XElement" />.</returns>
    </member>
    <member name="M:System.Xml.Linq.XElement.op_Explicit(System.Xml.Linq.XElement)~System.TimeSpan">
      <summary vsli:raw="Cast the value of this &lt;see cref=&quot;T:System.Xml.Linq.XElement&quot; /&gt; to a &lt;see cref=&quot;T:System.TimeSpan&quot; /&gt;.">Castez la valeur de ce <see cref="T:System.Xml.Linq.XElement" /> en <see cref="T:System.TimeSpan" />.</summary>
      <param name="element" vsli:raw="The &lt;see cref=&quot;T:System.Xml.Linq.XElement&quot; /&gt; to cast to &lt;see cref=&quot;T:System.TimeSpan&quot; /&gt;.">
        <see cref="T:System.Xml.Linq.XElement" /> à caster en <see cref="T:System.TimeSpan" />.</param>
      <exception cref="T:System.FormatException" vsli:raw="The element does not contain a valid &lt;see cref=&quot;T:System.TimeSpan&quot; /&gt; value.">L'élément ne contient pas de valeur <see cref="T:System.TimeSpan" /> valide.</exception>
      <exception cref="T:System.ArgumentNullException" vsli:raw="The &lt;paramref name=&quot;element&quot; /&gt; parameter is &lt;see langword=&quot;null&quot; /&gt;.">Le paramètre <paramref name="element" /> a la valeur <see langword="null" />.</exception>
      <returns vsli:raw="A &lt;see cref=&quot;T:System.TimeSpan&quot; /&gt; that contains the content of this &lt;see cref=&quot;T:System.Xml.Linq.XElement&quot; /&gt;.">
        <see cref="T:System.TimeSpan" /> qui contient le contenu de ce <see cref="T:System.Xml.Linq.XElement" />.</returns>
    </member>
    <member name="M:System.Xml.Linq.XElement.op_Explicit(System.Xml.Linq.XElement)~System.UInt32">
      <summary vsli:raw="Cast the value of this &lt;see cref=&quot;T:System.Xml.Linq.XElement&quot; /&gt; to a &lt;see cref=&quot;T:System.UInt32&quot; /&gt;.">Castez la valeur de ce <see cref="T:System.Xml.Linq.XElement" /> en <see cref="T:System.UInt32" />.</summary>
      <param name="element" vsli:raw="The &lt;see cref=&quot;T:System.Xml.Linq.XElement&quot; /&gt; to cast to &lt;see cref=&quot;T:System.UInt32&quot; /&gt;.">
        <see cref="T:System.Xml.Linq.XElement" /> à caster en <see cref="T:System.UInt32" />.</param>
      <exception cref="T:System.FormatException" vsli:raw="The element does not contain a valid &lt;see cref=&quot;T:System.UInt32&quot; /&gt; value.">L'élément ne contient pas de valeur <see cref="T:System.UInt32" /> valide.</exception>
      <exception cref="T:System.ArgumentNullException" vsli:raw="The &lt;paramref name=&quot;element&quot; /&gt; parameter is &lt;see langword=&quot;null&quot; /&gt;.">Le paramètre <paramref name="element" /> a la valeur <see langword="null" />.</exception>
      <returns vsli:raw="A &lt;see cref=&quot;T:System.UInt32&quot; /&gt; that contains the content of this &lt;see cref=&quot;T:System.Xml.Linq.XElement&quot; /&gt;.">
        <see cref="T:System.UInt32" /> qui contient le contenu de ce <see cref="T:System.Xml.Linq.XElement" />.</returns>
    </member>
    <member name="M:System.Xml.Linq.XElement.op_Explicit(System.Xml.Linq.XElement)~System.UInt64">
      <summary vsli:raw="Cast the value of this &lt;see cref=&quot;T:System.Xml.Linq.XElement&quot; /&gt; to a &lt;see cref=&quot;T:System.UInt64&quot; /&gt;.">Castez la valeur de ce <see cref="T:System.Xml.Linq.XElement" /> en <see cref="T:System.UInt64" />.</summary>
      <param name="element" vsli:raw="The &lt;see cref=&quot;T:System.Xml.Linq.XElement&quot; /&gt; to cast to &lt;see cref=&quot;T:System.UInt64&quot; /&gt;.">
        <see cref="T:System.Xml.Linq.XElement" /> à caster en <see cref="T:System.UInt64" />.</param>
      <exception cref="T:System.FormatException" vsli:raw="The element does not contain a valid &lt;see cref=&quot;T:System.UInt64&quot; /&gt; value.">L'élément ne contient pas de valeur <see cref="T:System.UInt64" /> valide.</exception>
      <exception cref="T:System.ArgumentNullException" vsli:raw="The &lt;paramref name=&quot;element&quot; /&gt; parameter is &lt;see langword=&quot;null&quot; /&gt;.">Le paramètre <paramref name="element" /> a la valeur <see langword="null" />.</exception>
      <returns vsli:raw="A &lt;see cref=&quot;T:System.UInt64&quot; /&gt; that contains the content of this &lt;see cref=&quot;T:System.Xml.Linq.XElement&quot; /&gt;.">
        <see cref="T:System.UInt64" /> qui contient le contenu de ce <see cref="T:System.Xml.Linq.XElement" />.</returns>
    </member>
    <member name="M:System.Xml.Linq.XElement.Parse(System.String)">
      <summary vsli:raw="Load an &lt;see cref=&quot;T:System.Xml.Linq.XElement&quot; /&gt; from a string that contains XML.">Chargez un <see cref="T:System.Xml.Linq.XElement" /> à partir d'une chaîne qui contient le code XML.</summary>
      <param name="text" vsli:raw="A &lt;see cref=&quot;T:System.String&quot; /&gt; that contains XML.">
        <see cref="T:System.String" /> qui contient le code XML.</param>
      <returns vsli:raw="An &lt;see cref=&quot;T:System.Xml.Linq.XElement&quot; /&gt; populated from the string that contains XML.">
        <see cref="T:System.Xml.Linq.XElement" /> rempli à partir de la chaîne qui contient le code XML.</returns>
    </member>
    <member name="M:System.Xml.Linq.XElement.Parse(System.String,System.Xml.Linq.LoadOptions)">
      <summary vsli:raw="Load an &lt;see cref=&quot;T:System.Xml.Linq.XElement&quot; /&gt; from a string that contains XML, optionally preserving white space and retaining line information.">Chargez un <see cref="T:System.Xml.Linq.XElement" /> à partir d'une chaîne qui contient du code XML, en conservant éventuellement les espaces blancs et les informations de ligne.</summary>
      <param name="text" vsli:raw="A &lt;see cref=&quot;T:System.String&quot; /&gt; that contains XML.">
        <see cref="T:System.String" /> qui contient le code XML.</param>
      <param name="options" vsli:raw="A &lt;see cref=&quot;T:System.Xml.Linq.LoadOptions&quot; /&gt; that specifies white space behavior, and whether to load base URI and line information.">
        <see cref="T:System.Xml.Linq.LoadOptions" /> qui spécifie le comportement pour les espaces blancs et détermine s'il faut charger l'URI de base et les informations de ligne.</param>
      <returns vsli:raw="An &lt;see cref=&quot;T:System.Xml.Linq.XElement&quot; /&gt; populated from the string that contains XML.">
        <see cref="T:System.Xml.Linq.XElement" /> rempli à partir de la chaîne qui contient le code XML.</returns>
    </member>
    <member name="M:System.Xml.Linq.XElement.RemoveAll">
      <summary vsli:raw="Removes nodes and attributes from this &lt;see cref=&quot;T:System.Xml.Linq.XElement&quot; /&gt;.">Supprime des nœuds et des attributs de ce <see cref="T:System.Xml.Linq.XElement" />.</summary>
    </member>
    <member name="M:System.Xml.Linq.XElement.RemoveAttributes">
      <summary vsli:raw="Removes the attributes of this &lt;see cref=&quot;T:System.Xml.Linq.XElement&quot; /&gt;.">Supprime les attributs de ce <see cref="T:System.Xml.Linq.XElement" />.</summary>
    </member>
    <member name="M:System.Xml.Linq.XElement.ReplaceAll(System.Object)">
      <summary vsli:raw="Replaces the child nodes and the attributes of this element with the specified content.">Remplace les nœuds enfants et les attributs de cet élément par le contenu spécifié.</summary>
      <param name="content" vsli:raw="The content that will replace the child nodes and attributes of this element.">Contenu qui remplacera les nœuds enfants et les attributs de cet élément.</param>
    </member>
    <member name="M:System.Xml.Linq.XElement.ReplaceAll(System.Object[])">
      <summary vsli:raw="Replaces the child nodes and the attributes of this element with the specified content.">Remplace les nœuds enfants et les attributs de cet élément par le contenu spécifié.</summary>
      <param name="content" vsli:raw="A parameter list of content objects.">Liste de paramètres d'objets de contenu.</param>
    </member>
    <member name="M:System.Xml.Linq.XElement.ReplaceAttributes(System.Object)">
      <summary vsli:raw="Replaces the attributes of this element with the specified content.">Remplace les attributs de cet élément par le contenu spécifié.</summary>
      <param name="content" vsli:raw="The content that will replace the attributes of this element.">Contenu qui remplacera les attributs de cet élément.</param>
    </member>
    <member name="M:System.Xml.Linq.XElement.ReplaceAttributes(System.Object[])">
      <summary vsli:raw="Replaces the attributes of this element with the specified content.">Remplace les attributs de cet élément par le contenu spécifié.</summary>
      <param name="content" vsli:raw="A parameter list of content objects.">Liste de paramètres d'objets de contenu.</param>
    </member>
    <member name="M:System.Xml.Linq.XElement.Save(System.IO.Stream)">
      <summary vsli:raw="Outputs this &lt;see cref=&quot;T:System.Xml.Linq.XElement&quot; /&gt; to the specified &lt;see cref=&quot;T:System.IO.Stream&quot; /&gt;.">Renvoie ce <see cref="T:System.Xml.Linq.XElement" /> vers le <see cref="T:System.IO.Stream" /> spécifié.</summary>
      <param name="stream" vsli:raw="The stream to output this &lt;see cref=&quot;T:System.Xml.Linq.XElement&quot; /&gt; to.">Flux vers lequel générer ce <see cref="T:System.Xml.Linq.XElement" />.</param>
    </member>
    <member name="M:System.Xml.Linq.XElement.Save(System.IO.Stream,System.Xml.Linq.SaveOptions)">
      <summary vsli:raw="Outputs this &lt;see cref=&quot;T:System.Xml.Linq.XElement&quot; /&gt; to the specified &lt;see cref=&quot;T:System.IO.Stream&quot; /&gt;, optionally specifying formatting behavior.">Génère ce <see cref="T:System.Xml.Linq.XElement" /> vers le <see cref="T:System.IO.Stream" /> spécifié, en précisant le cas échéant le comportement de mise en forme.</summary>
      <param name="stream" vsli:raw="The stream to output this &lt;see cref=&quot;T:System.Xml.Linq.XElement&quot; /&gt; to.">Flux vers lequel générer ce <see cref="T:System.Xml.Linq.XElement" />.</param>
      <param name="options" vsli:raw="A &lt;see cref=&quot;T:System.Xml.Linq.SaveOptions&quot; /&gt; object that specifies formatting behavior.">Objet <see cref="T:System.Xml.Linq.SaveOptions" /> qui spécifie le comportement de mise en forme.</param>
    </member>
    <member name="M:System.Xml.Linq.XElement.Save(System.IO.TextWriter)">
      <summary vsli:raw="Serialize this element to a &lt;see cref=&quot;T:System.IO.TextWriter&quot; /&gt;.">Sérialisez cet élément vers un <see cref="T:System.IO.TextWriter" />.</summary>
      <param name="textWriter" vsli:raw="A &lt;see cref=&quot;T:System.IO.TextWriter&quot; /&gt; that the &lt;see cref=&quot;T:System.Xml.Linq.XElement&quot; /&gt; will be written to.">
        <see cref="T:System.IO.TextWriter" /> dans lequel le <see cref="T:System.Xml.Linq.XElement" /> sera écrit.</param>
    </member>
    <member name="M:System.Xml.Linq.XElement.Save(System.IO.TextWriter,System.Xml.Linq.SaveOptions)">
      <summary vsli:raw="Serialize this element to a &lt;see cref=&quot;T:System.IO.TextWriter&quot; /&gt;, optionally disabling formatting.">Sérialisez cet élément vers un <see cref="T:System.IO.TextWriter" />, en désactivant éventuellement la mise en forme.</summary>
      <param name="textWriter" vsli:raw="The &lt;see cref=&quot;T:System.IO.TextWriter&quot; /&gt; to output the XML to.">
        <see cref="T:System.IO.TextWriter" /> vers lequel exporter le code XML.</param>
      <param name="options" vsli:raw="A &lt;see cref=&quot;T:System.Xml.Linq.SaveOptions&quot; /&gt; that specifies formatting behavior.">
        <see cref="T:System.Xml.Linq.SaveOptions" /> qui spécifie le comportement de mise en forme.</param>
    </member>
    <member name="M:System.Xml.Linq.XElement.Save(System.String)">
      <summary vsli:raw="Serialize this element to a file.">Sérialisez cet élément dans un fichier.</summary>
      <param name="fileName" vsli:raw="A &lt;see cref=&quot;T:System.String&quot; /&gt; that contains the name of the file.">
        <see cref="T:System.String" /> qui contient le nom du fichier.</param>
    </member>
    <member name="M:System.Xml.Linq.XElement.Save(System.String,System.Xml.Linq.SaveOptions)">
      <summary vsli:raw="Serialize this element to a file, optionally disabling formatting.">Sérialisez cet élément dans un fichier, en désactivant éventuellement la mise en forme.</summary>
      <param name="fileName" vsli:raw="A &lt;see cref=&quot;T:System.String&quot; /&gt; that contains the name of the file.">
        <see cref="T:System.String" /> qui contient le nom du fichier.</param>
      <param name="options" vsli:raw="A &lt;see cref=&quot;T:System.Xml.Linq.SaveOptions&quot; /&gt; that specifies formatting behavior.">
        <see cref="T:System.Xml.Linq.SaveOptions" /> qui spécifie le comportement de mise en forme.</param>
    </member>
    <member name="M:System.Xml.Linq.XElement.Save(System.Xml.XmlWriter)">
      <summary vsli:raw="Serialize this element to an &lt;see cref=&quot;T:System.Xml.XmlWriter&quot; /&gt;.">Sérialisez cet élément vers un <see cref="T:System.Xml.XmlWriter" />.</summary>
      <param name="writer" vsli:raw="A &lt;see cref=&quot;T:System.Xml.XmlWriter&quot; /&gt; that the &lt;see cref=&quot;T:System.Xml.Linq.XElement&quot; /&gt; will be written to.">
        <see cref="T:System.Xml.XmlWriter" /> dans lequel le <see cref="T:System.Xml.Linq.XElement" /> sera écrit.</param>
    </member>
    <member name="M:System.Xml.Linq.XElement.SaveAsync(System.IO.Stream,System.Xml.Linq.SaveOptions,System.Threading.CancellationToken)">
      <summary vsli:raw="Asynchronously outputs this &lt;see cref=&quot;T:System.Xml.Linq.XElement&quot; /&gt; to a &lt;see cref=&quot;T:System.IO.Stream&quot; /&gt;.">Exporte de façon asynchrone ce <see cref="T:System.Xml.Linq.XElement" /> vers un <see cref="T:System.IO.Stream" />.</summary>
      <param name="stream" vsli:raw="The stream to output the XML to.">Flux vers lequel générer ce XML.</param>
      <param name="options" vsli:raw="A bitwise combination of the enumeration values that specify the serialization options.">Combinaison de bits de valeurs d'énumération qui spécifient les options de sérialisation.</param>
      <param name="cancellationToken" vsli:raw="A token that can be used to request cancellation of the asynchronous operation.">Jeton qui peut être utilisé pour demander l'annulation de l'opération asynchrone.</param>
      <returns vsli:raw="A task representing the asynchronous save operation.">Une tâche représentant l’opération d’enregistrement asynchrone.</returns>
    </member>
    <member name="M:System.Xml.Linq.XElement.SaveAsync(System.IO.TextWriter,System.Xml.Linq.SaveOptions,System.Threading.CancellationToken)">
      <summary vsli:raw="Asynchronously outputs this &lt;see cref=&quot;T:System.Xml.Linq.XElement&quot; /&gt; to a &lt;see cref=&quot;T:System.IO.TextWriter&quot; /&gt;.">Exporte de façon asynchrone ce <see cref="T:System.Xml.Linq.XElement" /> vers un <see cref="T:System.IO.TextWriter" />.</summary>
      <param name="textWriter" vsli:raw="The writer to output the XML to.">Enregistreur dans lequel le XML doit être exporté.</param>
      <param name="options" vsli:raw="A bitwise combination of the enumeration values that specify the serialization options.">Combinaison de bits de valeurs d'énumération qui spécifient les options de sérialisation.</param>
      <param name="cancellationToken" vsli:raw="A token that can be used to request cancellation of the asynchronous operation.">Jeton qui peut être utilisé pour demander l'annulation de l'opération asynchrone.</param>
      <returns vsli:raw="A task representing the asynchronous save operation.">Une tâche représentant l’opération d’enregistrement asynchrone.</returns>
    </member>
    <member name="M:System.Xml.Linq.XElement.SaveAsync(System.Xml.XmlWriter,System.Threading.CancellationToken)">
      <summary vsli:raw="Asynchronously outputs this &lt;see cref=&quot;T:System.Xml.Linq.XElement&quot; /&gt; to an &lt;see cref=&quot;T:System.Xml.XmlWriter&quot; /&gt;.">Exporte de façon asynchrone ce <see cref="T:System.Xml.Linq.XElement" /> vers un <see cref="T:System.Xml.XmlWriter" />.</summary>
      <param name="writer" vsli:raw="The writer to output the XML to.">Enregistreur dans lequel le XML doit être exporté.</param>
      <param name="cancellationToken" vsli:raw="A token that can be used to request cancellation of the asynchronous operation.">Jeton qui peut être utilisé pour demander l'annulation de l'opération asynchrone.</param>
      <returns vsli:raw="A task representing the asynchronous save operation.">Une tâche représentant l’opération d’enregistrement asynchrone.</returns>
    </member>
    <member name="M:System.Xml.Linq.XElement.SetAttributeValue(System.Xml.Linq.XName,System.Object)">
      <summary vsli:raw="Sets the value of an attribute, adds an attribute, or removes an attribute.">Définit la valeur d'un attribut, ajoute un attribut ou supprime un attribut.</summary>
      <param name="name" vsli:raw="An &lt;see cref=&quot;T:System.Xml.Linq.XName&quot; /&gt; that contains the name of the attribute to change.">
        <see cref="T:System.Xml.Linq.XName" /> qui contient le nom de l'attribut à modifier.</param>
      <param name="value" vsli:raw="The value to assign to the attribute. The attribute is removed if the value is &lt;see langword=&quot;null&quot; /&gt;. Otherwise, the value is converted to its string representation and assigned to the &lt;see cref=&quot;P:System.Xml.Linq.XAttribute.Value&quot; /&gt; property of the attribute.">Valeur à assigner à l'attribut. L'attribut est supprimé si la valeur est <see langword="null" />. Sinon, la valeur est convertie en sa représentation sous forme de chaîne et assignée à la propriété <see cref="P:System.Xml.Linq.XAttribute.Value" /> de l'attribut.</param>
      <exception cref="T:System.ArgumentException" vsli:raw="The &lt;paramref name=&quot;value&quot; /&gt; is an instance of &lt;see cref=&quot;T:System.Xml.Linq.XObject&quot; /&gt;.">La <paramref name="value" /> est une instance de <see cref="T:System.Xml.Linq.XObject" />.</exception>
    </member>
    <member name="M:System.Xml.Linq.XElement.SetElementValue(System.Xml.Linq.XName,System.Object)">
      <summary vsli:raw="Sets the value of a child element, adds a child element, or removes a child element.">Définit la valeur d'un élément enfant, ajoute un élément enfant ou supprime un élément enfant.</summary>
      <param name="name" vsli:raw="An &lt;see cref=&quot;T:System.Xml.Linq.XName&quot; /&gt; that contains the name of the child element to change.">
        <see cref="T:System.Xml.Linq.XName" /> qui contient le nom de l'élément enfant à modifier.</param>
      <param name="value" vsli:raw="The value to assign to the child element. The child element is removed if the value is &lt;see langword=&quot;null&quot; /&gt;. Otherwise, the value is converted to its string representation and assigned to the &lt;see cref=&quot;P:System.Xml.Linq.XElement.Value&quot; /&gt; property of the child element.">Valeur à assigner à l'élément enfant. L'élément enfant est supprimé si la valeur est <see langword="null" />. Sinon, la valeur est convertie en sa représentation sous forme de chaîne et assignée à la propriété <see cref="P:System.Xml.Linq.XElement.Value" /> de l'élément enfant.</param>
      <exception cref="T:System.ArgumentException" vsli:raw="The &lt;paramref name=&quot;value&quot; /&gt; is an instance of &lt;see cref=&quot;T:System.Xml.Linq.XObject&quot; /&gt;.">La <paramref name="value" /> est une instance de <see cref="T:System.Xml.Linq.XObject" />.</exception>
    </member>
    <member name="M:System.Xml.Linq.XElement.SetValue(System.Object)">
      <summary vsli:raw="Sets the value of this element.">Définit la valeur de cet élément.</summary>
      <param name="value" vsli:raw="The value to assign to this element. The value is converted to its string representation and assigned to the &lt;see cref=&quot;P:System.Xml.Linq.XElement.Value&quot; /&gt; property.">Valeur à assigner à cet élément. La valeur est convertie en sa représentation sous forme de chaîne et assignée à la propriété <see cref="P:System.Xml.Linq.XElement.Value" />.</param>
      <exception cref="T:System.ArgumentNullException" vsli:raw="The &lt;paramref name=&quot;value&quot; /&gt; is &lt;see langword=&quot;null&quot; /&gt;.">
        <paramref name="value" /> a la valeur <see langword="null" />.</exception>
      <exception cref="T:System.ArgumentException" vsli:raw="The &lt;paramref name=&quot;value&quot; /&gt; is an &lt;see cref=&quot;T:System.Xml.Linq.XObject&quot; /&gt;.">La <paramref name="value" /> est un <see cref="T:System.Xml.Linq.XObject" />.</exception>
    </member>
    <member name="M:System.Xml.Linq.XElement.System#Xml#Serialization#IXmlSerializable#GetSchema">
      <summary vsli:raw="Gets an XML schema definition that describes the XML representation of this object.">Obtient une définition de schéma XML qui décrit la représentation XML de cet objet.</summary>
      <returns vsli:raw="An &lt;see cref=&quot;T:System.Xml.Schema.XmlSchema&quot; /&gt; that describes the XML representation of the object that is produced by the &lt;see cref=&quot;M:System.Xml.Serialization.IXmlSerializable.WriteXml(System.Xml.XmlWriter)&quot; /&gt; method and consumed by the &lt;see cref=&quot;M:System.Xml.Serialization.IXmlSerializable.ReadXml(System.Xml.XmlReader)&quot; /&gt; method.">
        <see cref="T:System.Xml.Schema.XmlSchema" /> qui décrit la représentation XML de l'objet qui est généré par la méthode <see cref="M:System.Xml.Serialization.IXmlSerializable.WriteXml(System.Xml.XmlWriter)" /> et consommé par la méthode <see cref="M:System.Xml.Serialization.IXmlSerializable.ReadXml(System.Xml.XmlReader)" />.</returns>
    </member>
    <member name="M:System.Xml.Linq.XElement.System#Xml#Serialization#IXmlSerializable#ReadXml(System.Xml.XmlReader)">
      <summary vsli:raw="Generates an object from its XML representation.">Génère un objet à partir de sa représentation XML.</summary>
      <param name="reader" vsli:raw="The &lt;see cref=&quot;T:System.Xml.XmlReader&quot; /&gt; from which the object is deserialized.">
        <see cref="T:System.Xml.XmlReader" /> à partir duquel l'objet est désérialisé.</param>
    </member>
    <member name="M:System.Xml.Linq.XElement.System#Xml#Serialization#IXmlSerializable#WriteXml(System.Xml.XmlWriter)">
      <summary vsli:raw="Converts an object into its XML representation.">Convertit un objet en sa représentation XML.</summary>
      <param name="writer" vsli:raw="The &lt;see cref=&quot;T:System.Xml.XmlWriter&quot; /&gt; to which this object is serialized.">
        <see cref="T:System.Xml.XmlWriter" /> vers lequel cet objet est sérialisé.</param>
    </member>
    <member name="M:System.Xml.Linq.XElement.WriteTo(System.Xml.XmlWriter)">
      <summary vsli:raw="Write this element to an &lt;see cref=&quot;T:System.Xml.XmlWriter&quot; /&gt;.">Écrivez cet élément vers un <see cref="T:System.Xml.XmlWriter" />.</summary>
      <param name="writer" vsli:raw="An &lt;see cref=&quot;T:System.Xml.XmlWriter&quot; /&gt; into which this method will write.">
        <see cref="T:System.Xml.XmlWriter" /> dans lequel cette méthode écrira.</param>
    </member>
    <member name="M:System.Xml.Linq.XElement.WriteToAsync(System.Xml.XmlWriter,System.Threading.CancellationToken)">
      <summary vsli:raw="Asynchronously writes this &lt;see cref=&quot;T:System.Xml.Linq.XElement&quot; /&gt; to the specified writer.">Écrit de façon asynchrone ce <see cref="T:System.Xml.Linq.XElement" /> sur l’enregistreur spécifié.</summary>
      <param name="writer" vsli:raw="The writer to write this &lt;see cref=&quot;T:System.Xml.Linq.XElement&quot; /&gt; to.">Enregistreur sur lequel écrire ce <see cref="T:System.Xml.Linq.XElement" />.</param>
      <param name="cancellationToken" vsli:raw="A token that can be used to request cancellation of the asynchronous operation.">Jeton qui peut être utilisé pour demander l'annulation de l'opération asynchrone.</param>
      <returns vsli:raw="A task representing the asynchronous write operation.">Tâche représentant l’opération d’écriture asynchrone.</returns>
    </member>
    <member name="P:System.Xml.Linq.XElement.EmptySequence">
      <summary vsli:raw="Gets an empty collection of elements.">Obtient une collection d’éléments vide.</summary>
      <returns vsli:raw="An &lt;see cref=&quot;T:System.Collections.Generic.IEnumerable`1&quot; /&gt; of &lt;see cref=&quot;T:System.Xml.Linq.XElement&quot; /&gt; that contains an empty collection.">
        <see cref="T:System.Collections.Generic.IEnumerable`1" /> de <see cref="T:System.Xml.Linq.XElement" /> qui contient une collection vide.</returns>
    </member>
    <member name="P:System.Xml.Linq.XElement.FirstAttribute">
      <summary vsli:raw="Gets the first attribute of this element.">Obtient le premier attribut de cet élément.</summary>
      <returns vsli:raw="An &lt;see cref=&quot;T:System.Xml.Linq.XAttribute&quot; /&gt; that contains the first attribute of this element.">
        <see cref="T:System.Xml.Linq.XAttribute" /> qui contient le premier attribut de cet élément.</returns>
    </member>
    <member name="P:System.Xml.Linq.XElement.HasAttributes">
      <summary vsli:raw="Gets a value indicating whether this element has at least one attribute.">Obtient une valeur indiquant si cet élément possède au moins un attribut.</summary>
      <returns vsli:raw="&lt;see langword=&quot;true&quot; /&gt; if this element has at least one attribute; otherwise &lt;see langword=&quot;false&quot; /&gt;.">
        <see langword="true" /> si cet élément possède au moins un attribut. Sinon <see langword="false" />.</returns>
    </member>
    <member name="P:System.Xml.Linq.XElement.HasElements">
      <summary vsli:raw="Gets a value indicating whether this element has at least one child element.">Obtient une valeur indiquant si cet élément possède au moins un élément enfant.</summary>
      <returns vsli:raw="&lt;see langword=&quot;true&quot; /&gt; if this element has at least one child element; otherwise &lt;see langword=&quot;false&quot; /&gt;.">
        <see langword="true" /> si cet élément a au moins un élément enfant ; sinon <see langword="false" />.</returns>
    </member>
    <member name="P:System.Xml.Linq.XElement.IsEmpty">
      <summary vsli:raw="Gets a value indicating whether this element contains no content.">Obtient une valeur indiquant si cet élément ne contient aucun contenu.</summary>
      <returns vsli:raw="&lt;see langword=&quot;true&quot; /&gt; if this element contains no content; otherwise &lt;see langword=&quot;false&quot; /&gt;.">
        <see langword="true" /> si cet élément ne contient aucun contenu ; sinon <see langword="false" />.</returns>
    </member>
    <member name="P:System.Xml.Linq.XElement.LastAttribute">
      <summary vsli:raw="Gets the last attribute of this element.">Obtient le dernier attribut de cet élément.</summary>
      <returns vsli:raw="An &lt;see cref=&quot;T:System.Xml.Linq.XAttribute&quot; /&gt; that contains the last attribute of this element.">
        <see cref="T:System.Xml.Linq.XAttribute" /> qui contient le dernier attribut de cet élément.</returns>
    </member>
    <member name="P:System.Xml.Linq.XElement.Name">
      <summary vsli:raw="Gets or sets the name of this element.">Obtient ou définit le nom de cet élément.</summary>
      <returns vsli:raw="An &lt;see cref=&quot;T:System.Xml.Linq.XName&quot; /&gt; that contains the name of this element.">
        <see cref="T:System.Xml.Linq.XName" /> qui contient le nom de cet élément.</returns>
    </member>
    <member name="P:System.Xml.Linq.XElement.NodeType">
      <summary vsli:raw="Gets the node type for this node.">Obtient le type de ce nœud.</summary>
      <returns vsli:raw="The node type. For &lt;see cref=&quot;T:System.Xml.Linq.XElement&quot; /&gt; objects, this value is &lt;see cref=&quot;F:System.Xml.XmlNodeType.Element&quot; /&gt;.">Type de nœud. Pour les objets <see cref="T:System.Xml.Linq.XElement" />, cette valeur est <see cref="F:System.Xml.XmlNodeType.Element" />.</returns>
    </member>
    <member name="P:System.Xml.Linq.XElement.Value">
      <summary vsli:raw="Gets or sets the concatenated text contents of this element.">Obtient ou définit le texte concaténé de cet élément.</summary>
      <returns vsli:raw="A &lt;see cref=&quot;T:System.String&quot; /&gt; that contains all of the text content of this element. If there are multiple text nodes, they will be concatenated.">
        <see cref="T:System.String" /> qui contient tout le contenu de texte de cet élément. S'il existe plusieurs nœuds de texte, ils seront concaténés.</returns>
    </member>
    <member name="T:System.Xml.Linq.XName">
      <summary vsli:raw="Represents a name of an XML element or attribute.">Représente un nom d'un élément ou attribut XML.</summary>
    </member>
    <member name="M:System.Xml.Linq.XName.Equals(System.Object)">
      <summary vsli:raw="Determines whether the specified &lt;see cref=&quot;T:System.Xml.Linq.XName&quot; /&gt; is equal to this &lt;see cref=&quot;T:System.Xml.Linq.XName&quot; /&gt;.">Détermine si le <see cref="T:System.Xml.Linq.XName" /> spécifié est égal à ce <see cref="T:System.Xml.Linq.XName" />.</summary>
      <param name="obj" vsli:raw="The &lt;see cref=&quot;T:System.Xml.Linq.XName&quot; /&gt; to compare to the current &lt;see cref=&quot;T:System.Xml.Linq.XName&quot; /&gt;.">
        <see cref="T:System.Xml.Linq.XName" /> à comparer à l'objet <see cref="T:System.Xml.Linq.XName" /> actuel.</param>
      <returns vsli:raw="&lt;see langword=&quot;true&quot; /&gt; if the specified &lt;see cref=&quot;T:System.Xml.Linq.XName&quot; /&gt; is equal to the current &lt;see cref=&quot;T:System.Xml.Linq.XName&quot; /&gt;; otherwise &lt;see langword=&quot;false&quot; /&gt;.">
        <see langword="true" /> si le <see cref="T:System.Xml.Linq.XName" /> spécifié est égal au <see cref="T:System.Xml.Linq.XName" /> actuel ; sinon, <see langword="false" />.</returns>
    </member>
    <member name="M:System.Xml.Linq.XName.Get(System.String)">
      <summary vsli:raw="Gets an &lt;see cref=&quot;T:System.Xml.Linq.XName&quot; /&gt; object from an expanded name.">Obtient un objet <see cref="T:System.Xml.Linq.XName" /> à partir d'un nom développé.</summary>
      <param name="expandedName" vsli:raw="A &lt;see cref=&quot;T:System.String&quot; /&gt; that contains an expanded XML name in the format &lt;c&gt;{namespace}localname&lt;/c&gt;.">
        <see cref="T:System.String" /> qui contient un nom XML développé au format <c>{namespace}localname</c>.</param>
      <returns vsli:raw="An &lt;see cref=&quot;T:System.Xml.Linq.XName&quot; /&gt; object constructed from the expanded name.">Objet <see cref="T:System.Xml.Linq.XName" /> construit à partir du nom développé.</returns>
    </member>
    <member name="M:System.Xml.Linq.XName.Get(System.String,System.String)">
      <summary vsli:raw="Gets an &lt;see cref=&quot;T:System.Xml.Linq.XName&quot; /&gt; object from a local name and a namespace.">Obtient un objet <see cref="T:System.Xml.Linq.XName" /> à partir d'un nom local et d'un espace de noms.</summary>
      <param name="localName" vsli:raw="A local (unqualified) name.">Nom local (non qualifié).</param>
      <param name="namespaceName" vsli:raw="An XML namespace.">Espace de noms XML.</param>
      <returns vsli:raw="An &lt;see cref=&quot;T:System.Xml.Linq.XName&quot; /&gt; object created from the specified local name and namespace.">Objet <see cref="T:System.Xml.Linq.XName" /> créé à partir du nom local et de l'espace de noms spécifiés.</returns>
    </member>
    <member name="M:System.Xml.Linq.XName.GetHashCode">
      <summary vsli:raw="Gets a hash code for this &lt;see cref=&quot;T:System.Xml.Linq.XName&quot; /&gt;.">Obtient un code de hachage pour ce <see cref="T:System.Xml.Linq.XName" />.</summary>
      <returns vsli:raw="An &lt;see cref=&quot;T:System.Int32&quot; /&gt; that contains the hash code for the &lt;see cref=&quot;T:System.Xml.Linq.XName&quot; /&gt;.">
        <see cref="T:System.Int32" /> qui contient le code de hachage pour le <see cref="T:System.Xml.Linq.XName" />.</returns>
    </member>
    <member name="M:System.Xml.Linq.XName.op_Equality(System.Xml.Linq.XName,System.Xml.Linq.XName)">
      <summary vsli:raw="Returns a value indicating whether two instances of &lt;see cref=&quot;T:System.Xml.Linq.XName&quot; /&gt; are equal.">Retourne une valeur indiquant si deux instances de <see cref="T:System.Xml.Linq.XName" /> sont égales.</summary>
      <param name="left" vsli:raw="The first &lt;see cref=&quot;T:System.Xml.Linq.XName&quot; /&gt; to compare.">Premier <see cref="T:System.Xml.Linq.XName" /> à comparer.</param>
      <param name="right" vsli:raw="The second &lt;see cref=&quot;T:System.Xml.Linq.XName&quot; /&gt; to compare.">Deuxième <see cref="T:System.Xml.Linq.XName" /> à comparer.</param>
      <returns vsli:raw="&lt;see langword=&quot;true&quot; /&gt; if &lt;paramref name=&quot;left&quot; /&gt; and &lt;paramref name=&quot;right&quot; /&gt; are equal; otherwise &lt;see langword=&quot;false&quot; /&gt;.">
        <see langword="true" /> si <paramref name="left" /> est égal à <paramref name="right" /> ; sinon <see langword="false" />.</returns>
    </member>
    <member name="M:System.Xml.Linq.XName.op_Implicit(System.String)~System.Xml.Linq.XName">
      <summary vsli:raw="Converts a string formatted as an expanded XML name (that is,&lt;c&gt;{namespace}localname&lt;/c&gt;) to an &lt;see cref=&quot;T:System.Xml.Linq.XName&quot; /&gt; object.">Convertit une chaîne mise en forme en tant que nom XML développé (c’est-à-dire, <c>{namespace}localname</c>) en objet <see cref="T:System.Xml.Linq.XName" />.</summary>
      <param name="expandedName" vsli:raw="A string that contains an expanded XML name in the format &lt;c&gt;{namespace}localname&lt;/c&gt;.">Chaîne qui contient un nom XML développé au format <c>{namespace}localname</c>.</param>
      <returns vsli:raw="An &lt;see cref=&quot;T:System.Xml.Linq.XName&quot; /&gt; object constructed from the expanded name.">Objet <see cref="T:System.Xml.Linq.XName" /> construit à partir du nom développé.</returns>
    </member>
    <member name="M:System.Xml.Linq.XName.op_Inequality(System.Xml.Linq.XName,System.Xml.Linq.XName)">
      <summary vsli:raw="Returns a value indicating whether two instances of &lt;see cref=&quot;T:System.Xml.Linq.XName&quot; /&gt; are not equal.">Retourne une valeur indiquant si deux instances de <see cref="T:System.Xml.Linq.XName" /> ne sont pas égales.</summary>
      <param name="left" vsli:raw="The first &lt;see cref=&quot;T:System.Xml.Linq.XName&quot; /&gt; to compare.">Premier <see cref="T:System.Xml.Linq.XName" /> à comparer.</param>
      <param name="right" vsli:raw="The second &lt;see cref=&quot;T:System.Xml.Linq.XName&quot; /&gt; to compare.">Deuxième <see cref="T:System.Xml.Linq.XName" /> à comparer.</param>
      <returns vsli:raw="&lt;see langword=&quot;true&quot; /&gt; if &lt;paramref name=&quot;left&quot; /&gt; and &lt;paramref name=&quot;right&quot; /&gt; are not equal; otherwise &lt;see langword=&quot;false&quot; /&gt;.">
        <see langword="true" /> si <paramref name="left" /> et <paramref name="right" /> ne sont pas égaux ; sinon <see langword="false" />.</returns>
    </member>
    <member name="M:System.Xml.Linq.XName.System#IEquatable{System#Xml#Linq#XName}#Equals(System.Xml.Linq.XName)">
      <summary vsli:raw="Indicates whether the current &lt;see cref=&quot;T:System.Xml.Linq.XName&quot; /&gt; is equal to the specified &lt;see cref=&quot;T:System.Xml.Linq.XName&quot; /&gt;.">Indique si le <see cref="T:System.Xml.Linq.XName" /> actif est égal au <see cref="T:System.Xml.Linq.XName" /> spécifié.</summary>
      <param name="other" vsli:raw="The &lt;see cref=&quot;T:System.Xml.Linq.XName&quot; /&gt; to compare with this &lt;see cref=&quot;T:System.Xml.Linq.XName&quot; /&gt;.">
        <see cref="T:System.Xml.Linq.XName" /> à comparer à ce <see cref="T:System.Xml.Linq.XName" />.</param>
      <returns vsli:raw="&lt;see langword=&quot;true&quot; /&gt; if this &lt;see cref=&quot;T:System.Xml.Linq.XName&quot; /&gt; is equal to the specified &lt;see cref=&quot;T:System.Xml.Linq.XName&quot; /&gt;, otherwise &lt;see langword=&quot;false&quot; /&gt;.">
        <see langword="true" /> si ce <see cref="T:System.Xml.Linq.XName" /> est égal au <see cref="T:System.Xml.Linq.XName" /> spécifié, sinon <see langword="false" />.</returns>
    </member>
    <member name="M:System.Xml.Linq.XName.System#Runtime#Serialization#ISerializable#GetObjectData(System.Runtime.Serialization.SerializationInfo,System.Runtime.Serialization.StreamingContext)">
      <summary vsli:raw="Populates a &lt;see cref=&quot;T:System.Runtime.Serialization.SerializationInfo&quot; /&gt; with the data required to serialize the target object.">Remplit un <see cref="T:System.Runtime.Serialization.SerializationInfo" /> avec les données nécessaires pour sérialiser l'objet cible.</summary>
      <param name="info" vsli:raw="The &lt;see cref=&quot;T:System.Runtime.Serialization.SerializationInfo&quot; /&gt; to populate with data.">
        <see cref="T:System.Runtime.Serialization.SerializationInfo" /> à remplir de données.</param>
      <param name="context" vsli:raw="The destination (see &lt;see cref=&quot;T:System.Runtime.Serialization.StreamingContext&quot; /&gt;) for this serialization.">Destination (consultez <see cref="T:System.Runtime.Serialization.StreamingContext" />) de cette sérialisation.</param>
    </member>
    <member name="M:System.Xml.Linq.XName.ToString">
      <summary vsli:raw="Returns the expanded XML name in the format &lt;c&gt;{namespace}localname&lt;/c&gt;.">Retourne le nom XML développé au format <c>{namespace}localname</c>.</summary>
      <returns vsli:raw="A &lt;see cref=&quot;T:System.String&quot; /&gt; that contains the expanded XML name in the format &lt;c&gt;{namespace}localname&lt;/c&gt;.">
        <see cref="T:System.String" /> qui contient le nom XML développé au format <c>{namespace}localname</c>.</returns>
    </member>
    <member name="P:System.Xml.Linq.XName.LocalName">
      <summary vsli:raw="Gets the local (unqualified) part of the name.">Obtient la partie locale (non qualifiée) du nom.</summary>
      <returns vsli:raw="A &lt;see cref=&quot;T:System.String&quot; /&gt; that contains the local (unqualified) part of the name.">
        <see cref="T:System.String" /> qui contient la partie locale (non qualifiée) du nom.</returns>
    </member>
    <member name="P:System.Xml.Linq.XName.Namespace">
      <summary vsli:raw="Gets the namespace part of the fully qualified name.">Obtient la partie de l'espace de noms du nom qualifié complet.</summary>
      <returns vsli:raw="An &lt;see cref=&quot;T:System.Xml.Linq.XNamespace&quot; /&gt; that contains the namespace part of the name.">
        <see cref="T:System.Xml.Linq.XNamespace" /> qui contient la partie de l'espace de noms du nom.</returns>
    </member>
    <member name="P:System.Xml.Linq.XName.NamespaceName">
      <summary vsli:raw="Returns the URI of the &lt;see cref=&quot;T:System.Xml.Linq.XNamespace&quot; /&gt; for this &lt;see cref=&quot;T:System.Xml.Linq.XName&quot; /&gt;.">Retourne l'URI du <see cref="T:System.Xml.Linq.XNamespace" /> pour ce <see cref="T:System.Xml.Linq.XName" />.</summary>
      <returns vsli:raw="The URI of the &lt;see cref=&quot;T:System.Xml.Linq.XNamespace&quot; /&gt; for this &lt;see cref=&quot;T:System.Xml.Linq.XName&quot; /&gt;.">URI du <see cref="T:System.Xml.Linq.XNamespace" /> pour ce <see cref="T:System.Xml.Linq.XName" />.</returns>
    </member>
    <member name="T:System.Xml.Linq.XNamespace">
      <summary vsli:raw="Represents an XML namespace. This class cannot be inherited.">Représente un espace de noms XML. Cette classe ne peut pas être héritée.</summary>
    </member>
    <member name="M:System.Xml.Linq.XNamespace.Equals(System.Object)">
      <summary vsli:raw="Determines whether the specified &lt;see cref=&quot;T:System.Xml.Linq.XNamespace&quot; /&gt; is equal to the current &lt;see cref=&quot;T:System.Xml.Linq.XNamespace&quot; /&gt;.">Détermine si l'objet <see cref="T:System.Xml.Linq.XNamespace" /> spécifié est égal à l'objet <see cref="T:System.Xml.Linq.XNamespace" /> actuel.</summary>
      <param name="obj" vsli:raw="The &lt;see cref=&quot;T:System.Xml.Linq.XNamespace&quot; /&gt; to compare to the current &lt;see cref=&quot;T:System.Xml.Linq.XNamespace&quot; /&gt;.">
        <see cref="T:System.Xml.Linq.XNamespace" /> à comparer à l'objet <see cref="T:System.Xml.Linq.XNamespace" /> actuel.</param>
      <returns vsli:raw="A &lt;see cref=&quot;T:System.Boolean&quot; /&gt; that indicates whether the specified &lt;see cref=&quot;T:System.Xml.Linq.XNamespace&quot; /&gt; is equal to the current &lt;see cref=&quot;T:System.Xml.Linq.XNamespace&quot; /&gt;.">
        <see cref="T:System.Boolean" /> qui indique si le <see cref="T:System.Xml.Linq.XNamespace" /> spécifié est égal au <see cref="T:System.Xml.Linq.XNamespace" /> actuel.</returns>
    </member>
    <member name="M:System.Xml.Linq.XNamespace.Get(System.String)">
      <summary vsli:raw="Gets an &lt;see cref=&quot;T:System.Xml.Linq.XNamespace&quot; /&gt; for the specified Uniform Resource Identifier (URI).">Obtient un <see cref="T:System.Xml.Linq.XNamespace" /> pour l'URI (Uniform Resource Identifier) spécifié.</summary>
      <param name="namespaceName" vsli:raw="A &lt;see cref=&quot;T:System.String&quot; /&gt; that contains a namespace URI.">
        <see cref="T:System.String" /> qui contient un URI d'espace de noms.</param>
      <returns vsli:raw="An &lt;see cref=&quot;T:System.Xml.Linq.XNamespace&quot; /&gt; created from the specified URI.">
        <see cref="T:System.Xml.Linq.XNamespace" /> créé à partir de l'URI spécifié.</returns>
    </member>
    <member name="M:System.Xml.Linq.XNamespace.GetHashCode">
      <summary vsli:raw="Gets a hash code for this &lt;see cref=&quot;T:System.Xml.Linq.XNamespace&quot; /&gt;.">Obtient un code de hachage pour ce <see cref="T:System.Xml.Linq.XNamespace" />.</summary>
      <returns vsli:raw="An &lt;see cref=&quot;T:System.Int32&quot; /&gt; that contains the hash code for the &lt;see cref=&quot;T:System.Xml.Linq.XNamespace&quot; /&gt;.">
        <see cref="T:System.Int32" /> qui contient le code de hachage pour le <see cref="T:System.Xml.Linq.XNamespace" />.</returns>
    </member>
    <member name="M:System.Xml.Linq.XNamespace.GetName(System.String)">
      <summary vsli:raw="Returns an &lt;see cref=&quot;T:System.Xml.Linq.XName&quot; /&gt; object created from this &lt;see cref=&quot;T:System.Xml.Linq.XNamespace&quot; /&gt; and the specified local name.">Retourne un objet <see cref="T:System.Xml.Linq.XName" /> créé à partir de ce <see cref="T:System.Xml.Linq.XNamespace" /> et du nom local spécifié.</summary>
      <param name="localName" vsli:raw="A &lt;see cref=&quot;T:System.String&quot; /&gt; that contains a local name.">
        <see cref="T:System.String" /> qui contient un nom local.</param>
      <returns vsli:raw="An &lt;see cref=&quot;T:System.Xml.Linq.XName&quot; /&gt; created from this &lt;see cref=&quot;T:System.Xml.Linq.XNamespace&quot; /&gt; and the specified local name.">
        <see cref="T:System.Xml.Linq.XName" /> créé à partir de ce <see cref="T:System.Xml.Linq.XNamespace" /> et du nom local spécifié.</returns>
    </member>
    <member name="M:System.Xml.Linq.XNamespace.op_Addition(System.Xml.Linq.XNamespace,System.String)">
      <summary vsli:raw="Combines an &lt;see cref=&quot;T:System.Xml.Linq.XNamespace&quot; /&gt; object with a local name to create an &lt;see cref=&quot;T:System.Xml.Linq.XName&quot; /&gt;.">Combine un objet <see cref="T:System.Xml.Linq.XNamespace" /> avec un nom local pour créer un <see cref="T:System.Xml.Linq.XName" />.</summary>
      <param name="ns" vsli:raw="An &lt;see cref=&quot;T:System.Xml.Linq.XNamespace&quot; /&gt; that contains the namespace.">
        <see cref="T:System.Xml.Linq.XNamespace" /> qui contient l'espace de noms.</param>
      <param name="localName" vsli:raw="A &lt;see cref=&quot;T:System.String&quot; /&gt; that contains the local name.">
        <see cref="T:System.String" /> qui contient le nom local.</param>
      <returns vsli:raw="The new &lt;see cref=&quot;T:System.Xml.Linq.XName&quot; /&gt; constructed from the namespace and local name.">Nouveau <see cref="T:System.Xml.Linq.XName" /> construit à partir de l'espace de noms et du nom local.</returns>
    </member>
    <member name="M:System.Xml.Linq.XNamespace.op_Equality(System.Xml.Linq.XNamespace,System.Xml.Linq.XNamespace)">
      <summary vsli:raw="Returns a value indicating whether two instances of &lt;see cref=&quot;T:System.Xml.Linq.XNamespace&quot; /&gt; are equal.">Retourne une valeur indiquant si deux instances de <see cref="T:System.Xml.Linq.XNamespace" /> sont égales.</summary>
      <param name="left" vsli:raw="The first &lt;see cref=&quot;T:System.Xml.Linq.XNamespace&quot; /&gt; to compare.">Premier <see cref="T:System.Xml.Linq.XNamespace" /> à comparer.</param>
      <param name="right" vsli:raw="The second &lt;see cref=&quot;T:System.Xml.Linq.XNamespace&quot; /&gt; to compare.">Deuxième <see cref="T:System.Xml.Linq.XNamespace" /> à comparer.</param>
      <returns vsli:raw="A &lt;see cref=&quot;T:System.Boolean&quot; /&gt; that indicates whether &lt;paramref name=&quot;left&quot; /&gt; and &lt;paramref name=&quot;right&quot; /&gt; are equal.">
        <see cref="T:System.Boolean" /> qui indique si <paramref name="left" /> et <paramref name="right" /> sont égaux.</returns>
    </member>
    <member name="M:System.Xml.Linq.XNamespace.op_Implicit(System.String)~System.Xml.Linq.XNamespace">
      <summary vsli:raw="Converts a string containing a Uniform Resource Identifier (URI) to an &lt;see cref=&quot;T:System.Xml.Linq.XNamespace&quot; /&gt;.">Convertit une chaîne contenant un URI (Uniform Resource Identifier) en <see cref="T:System.Xml.Linq.XNamespace" />.</summary>
      <param name="namespaceName" vsli:raw="A &lt;see cref=&quot;T:System.String&quot; /&gt; that contains the namespace URI.">
        <see cref="T:System.String" /> qui contient l'URI d'espace de noms.</param>
      <returns vsli:raw="An &lt;see cref=&quot;T:System.Xml.Linq.XNamespace&quot; /&gt; constructed from the URI string.">
        <see cref="T:System.Xml.Linq.XNamespace" /> construit à partir de la chaîne d'URI.</returns>
    </member>
    <member name="M:System.Xml.Linq.XNamespace.op_Inequality(System.Xml.Linq.XNamespace,System.Xml.Linq.XNamespace)">
      <summary vsli:raw="Returns a value indicating whether two instances of &lt;see cref=&quot;T:System.Xml.Linq.XNamespace&quot; /&gt; are not equal.">Retourne une valeur indiquant si deux instances de <see cref="T:System.Xml.Linq.XNamespace" /> ne sont pas égales.</summary>
      <param name="left" vsli:raw="The first &lt;see cref=&quot;T:System.Xml.Linq.XNamespace&quot; /&gt; to compare.">Premier <see cref="T:System.Xml.Linq.XNamespace" /> à comparer.</param>
      <param name="right" vsli:raw="The second &lt;see cref=&quot;T:System.Xml.Linq.XNamespace&quot; /&gt; to compare.">Deuxième <see cref="T:System.Xml.Linq.XNamespace" /> à comparer.</param>
      <returns vsli:raw="A &lt;see cref=&quot;T:System.Boolean&quot; /&gt; that indicates whether &lt;paramref name=&quot;left&quot; /&gt; and &lt;paramref name=&quot;right&quot; /&gt; are not equal.">
        <see cref="T:System.Boolean" /> qui indique si <paramref name="left" /> et <paramref name="right" /> sont différents.</returns>
    </member>
    <member name="M:System.Xml.Linq.XNamespace.ToString">
      <summary vsli:raw="Returns the URI of this &lt;see cref=&quot;T:System.Xml.Linq.XNamespace&quot; /&gt;.">Retourne l'URI de ce <see cref="T:System.Xml.Linq.XNamespace" />.</summary>
      <returns vsli:raw="The URI of this &lt;see cref=&quot;T:System.Xml.Linq.XNamespace&quot; /&gt;.">URI de ce <see cref="T:System.Xml.Linq.XNamespace" />.</returns>
    </member>
    <member name="P:System.Xml.Linq.XNamespace.NamespaceName">
      <summary vsli:raw="Gets the Uniform Resource Identifier (URI) of this namespace.">Obtient l'URI (Uniform Resource Identifier) de cet espace de noms.</summary>
      <returns vsli:raw="A &lt;see cref=&quot;T:System.String&quot; /&gt; that contains the URI of the namespace.">
        <see cref="T:System.String" /> qui contient l'URI de l'espace de noms.</returns>
    </member>
    <member name="P:System.Xml.Linq.XNamespace.None">
      <summary vsli:raw="Gets the &lt;see cref=&quot;T:System.Xml.Linq.XNamespace&quot; /&gt; object that corresponds to no namespace.">Obtient l'objet <see cref="T:System.Xml.Linq.XNamespace" /> qui ne correspond à aucun espace de noms.</summary>
      <returns vsli:raw="The &lt;see cref=&quot;T:System.Xml.Linq.XNamespace&quot; /&gt; that corresponds to no namespace.">
        <see cref="T:System.Xml.Linq.XNamespace" /> qui ne correspond à aucun espace de noms.</returns>
    </member>
    <member name="P:System.Xml.Linq.XNamespace.Xml">
      <summary vsli:raw="Gets the &lt;see cref=&quot;T:System.Xml.Linq.XNamespace&quot; /&gt; object that corresponds to the XML URI (&lt;c&gt;http://www.w3.org/XML/1998/namespace&lt;/c&gt;).">Obtient l’objet <see cref="T:System.Xml.Linq.XNamespace" /> qui correspond à l’URI XML (<c>http://www.w3.org/XML/1998/namespace</c>).</summary>
      <returns vsli:raw="The &lt;see cref=&quot;T:System.Xml.Linq.XNamespace&quot; /&gt; that corresponds to the XML URI (&lt;c&gt;http://www.w3.org/XML/1998/namespace&lt;/c&gt;).">
        <see cref="T:System.Xml.Linq.XNamespace" />Qui correspond à l’URI XML ( <c>http://www.w3.org/XML/1998/namespace</c> ).</returns>
    </member>
    <member name="P:System.Xml.Linq.XNamespace.Xmlns">
      <summary vsli:raw="Gets the &lt;see cref=&quot;T:System.Xml.Linq.XNamespace&quot; /&gt; object that corresponds to the xmlns URI (&lt;c&gt;http://www.w3.org/2000/xmlns/&lt;/c&gt;).">Obtient l’objet <see cref="T:System.Xml.Linq.XNamespace" /> qui correspond à l’URI xmlns (<c>http://www.w3.org/2000/xmlns/</c>).</summary>
      <returns vsli:raw="The &lt;see cref=&quot;T:System.Xml.Linq.XNamespace&quot; /&gt; that corresponds to the xmlns URI (&lt;c&gt;http://www.w3.org/2000/xmlns/&lt;/c&gt;).">
        <see cref="T:System.Xml.Linq.XNamespace" />Qui correspond à l’URI xmlns ( <c>http://www.w3.org/2000/xmlns/</c> ).</returns>
    </member>
    <member name="T:System.Xml.Linq.XNode">
      <summary vsli:raw="Represents the abstract concept of a node (element, comment, document type, processing instruction, or text node) in the XML tree.">Représente le concept abstrait d'un nœud (élément, commentaire, type de document, instruction de traitement ou nœud de texte) dans l'arborescence XML.</summary>
    </member>
    <member name="M:System.Xml.Linq.XNode.AddAfterSelf(System.Object)">
      <summary vsli:raw="Adds the specified content immediately after this node.">Ajoute le contenu spécifié immédiatement après ce nœud.</summary>
      <param name="content" vsli:raw="A content object that contains simple content or a collection of content objects to be added after this node.">Objet de contenu qui contient du contenu simple ou une collection d’objets de contenu à ajouter après ce nœud.</param>
      <exception cref="T:System.InvalidOperationException" vsli:raw="The parent is &lt;see langword=&quot;null&quot; /&gt;.">Le parent est <see langword="null" />.</exception>
    </member>
    <member name="M:System.Xml.Linq.XNode.AddAfterSelf(System.Object[])">
      <summary vsli:raw="Adds the specified content immediately after this node.">Ajoute le contenu spécifié immédiatement après ce nœud.</summary>
      <param name="content" vsli:raw="A parameter list of content objects.">Liste de paramètres d'objets de contenu.</param>
      <exception cref="T:System.InvalidOperationException" vsli:raw="The parent is &lt;see langword=&quot;null&quot; /&gt;.">Le parent est <see langword="null" />.</exception>
    </member>
    <member name="M:System.Xml.Linq.XNode.AddBeforeSelf(System.Object)">
      <summary vsli:raw="Adds the specified content immediately before this node.">Ajoute le contenu spécifié immédiatement avant ce nœud.</summary>
      <param name="content" vsli:raw="A content object that contains simple content or a collection of content objects to be added before this node.">Objet de contenu qui contient du contenu simple ou une collection d'objets de contenu à ajouter avant ce nœud.</param>
      <exception cref="T:System.InvalidOperationException" vsli:raw="The parent is &lt;see langword=&quot;null&quot; /&gt;.">Le parent est <see langword="null" />.</exception>
    </member>
    <member name="M:System.Xml.Linq.XNode.AddBeforeSelf(System.Object[])">
      <summary vsli:raw="Adds the specified content immediately before this node.">Ajoute le contenu spécifié immédiatement avant ce nœud.</summary>
      <param name="content" vsli:raw="A parameter list of content objects.">Liste de paramètres d'objets de contenu.</param>
      <exception cref="T:System.InvalidOperationException" vsli:raw="The parent is &lt;see langword=&quot;null&quot; /&gt;.">Le parent est <see langword="null" />.</exception>
    </member>
    <member name="M:System.Xml.Linq.XNode.Ancestors">
      <summary vsli:raw="Returns a collection of the ancestor elements of this node.">Retourne une collection des éléments ancêtres de ce nœud.</summary>
      <returns vsli:raw="An &lt;see cref=&quot;T:System.Collections.Generic.IEnumerable`1&quot; /&gt; of &lt;see cref=&quot;T:System.Xml.Linq.XElement&quot; /&gt; of the ancestor elements of this node.">
        <see cref="T:System.Collections.Generic.IEnumerable`1" /> de <see cref="T:System.Xml.Linq.XElement" /> des éléments ancêtres de ce nœud.</returns>
    </member>
    <member name="M:System.Xml.Linq.XNode.Ancestors(System.Xml.Linq.XName)">
      <summary vsli:raw="Returns a filtered collection of the ancestor elements of this node. Only elements that have a matching &lt;see cref=&quot;T:System.Xml.Linq.XName&quot; /&gt; are included in the collection.">Retourne une collection filtrée des éléments ancêtres de ce nœud. Seuls les éléments avec un <see cref="T:System.Xml.Linq.XName" /> correspondant sont inclus dans la collection.</summary>
      <param name="name" vsli:raw="The &lt;see cref=&quot;T:System.Xml.Linq.XName&quot; /&gt; to match.">
        <see cref="T:System.Xml.Linq.XName" /> à mettre en correspondance.</param>
      <returns vsli:raw="An &lt;see cref=&quot;T:System.Collections.Generic.IEnumerable`1&quot; /&gt; of &lt;see cref=&quot;T:System.Xml.Linq.XElement&quot; /&gt; of the ancestor elements of this node. Only elements that have a matching &lt;see cref=&quot;T:System.Xml.Linq.XName&quot; /&gt; are included in the collection.  &#xA;  &#xA; The nodes in the returned collection are in reverse document order.  &#xA;  &#xA; This method uses deferred execution.">
        <see cref="T:System.Collections.Generic.IEnumerable`1" /> de <see cref="T:System.Xml.Linq.XElement" /> des éléments ancêtres de ce nœud. Seuls les éléments avec un <see cref="T:System.Xml.Linq.XName" /> correspondant sont inclus dans la collection.  
  
Les nœuds de la collection retournée sont dans l’ordre inverse du document.  
  
Cette méthode utilise l'exécution différée.</returns>
    </member>
    <member name="M:System.Xml.Linq.XNode.CompareDocumentOrder(System.Xml.Linq.XNode,System.Xml.Linq.XNode)">
      <summary vsli:raw="Compares two nodes to determine their relative XML document order.">Compare deux nœuds pour déterminer leur ordre respectif dans le document XML.</summary>
      <param name="n1" vsli:raw="First &lt;see cref=&quot;T:System.Xml.Linq.XNode&quot; /&gt; to compare.">Premier <see cref="T:System.Xml.Linq.XNode" /> à comparer.</param>
      <param name="n2" vsli:raw="Second &lt;see cref=&quot;T:System.Xml.Linq.XNode&quot; /&gt; to compare.">Second <see cref="T:System.Xml.Linq.XNode" /> à comparer.</param>
      <exception cref="T:System.InvalidOperationException" vsli:raw="The two nodes do not share a common ancestor.">Les deux nœuds ne partagent pas d'ancêtre commun.</exception>
      <returns vsli:raw="An &lt;see langword=&quot;int&quot; /&gt; containing 0 if the nodes are equal; -1 if &lt;paramref name=&quot;n1&quot; /&gt; is before &lt;paramref name=&quot;n2&quot; /&gt;; 1 if &lt;paramref name=&quot;n1&quot; /&gt; is after &lt;paramref name=&quot;n2&quot; /&gt;.">
        <see langword="int" /> contenant 0 si les nœuds sont égaux ; -1 si <paramref name="n1" /> est avant <paramref name="n2" /> ; 1 si <paramref name="n1" /> est après <paramref name="n2" />.</returns>
    </member>
    <member name="M:System.Xml.Linq.XNode.CreateReader">
      <summary vsli:raw="Creates an &lt;see cref=&quot;T:System.Xml.XmlReader&quot; /&gt; for this node.">Crée un <see cref="T:System.Xml.XmlReader" /> pour ce nœud.</summary>
      <returns vsli:raw="An &lt;see cref=&quot;T:System.Xml.XmlReader&quot; /&gt; that can be used to read this node and its descendants.">
        <see cref="T:System.Xml.XmlReader" /> qui peut être utilisé pour lire ce nœud et ses descendants.</returns>
    </member>
    <member name="M:System.Xml.Linq.XNode.CreateReader(System.Xml.Linq.ReaderOptions)">
      <summary vsli:raw="Creates an &lt;see cref=&quot;T:System.Xml.XmlReader&quot; /&gt; with the options specified by the &lt;paramref name=&quot;readerOptions&quot; /&gt; parameter.">Crée un <see cref="T:System.Xml.XmlReader" /> avec les options spécifiées par le paramètre <paramref name="readerOptions" />.</summary>
      <param name="readerOptions" vsli:raw="A &lt;see cref=&quot;T:System.Xml.Linq.ReaderOptions&quot; /&gt; object that specifies whether to omit duplicate namespaces.">Objet <see cref="T:System.Xml.Linq.ReaderOptions" /> qui spécifie s'il faut omettre des espaces de noms en double.</param>
      <returns vsli:raw="An &lt;see cref=&quot;T:System.Xml.XmlReader&quot; /&gt; object.">Objet <see cref="T:System.Xml.XmlReader" />.</returns>
    </member>
    <member name="M:System.Xml.Linq.XNode.DeepEquals(System.Xml.Linq.XNode,System.Xml.Linq.XNode)">
      <summary vsli:raw="Compares the values of two nodes, including the values of all descendant nodes.">Compare les valeurs de deux nœuds, y compris les valeurs de tous les nœuds descendants.</summary>
      <param name="n1" vsli:raw="The first &lt;see cref=&quot;T:System.Xml.Linq.XNode&quot; /&gt; to compare.">Premier <see cref="T:System.Xml.Linq.XNode" /> à comparer.</param>
      <param name="n2" vsli:raw="The second &lt;see cref=&quot;T:System.Xml.Linq.XNode&quot; /&gt; to compare.">Deuxième <see cref="T:System.Xml.Linq.XNode" /> à comparer.</param>
      <returns vsli:raw="&lt;see langword=&quot;true&quot; /&gt; if the nodes are equal; otherwise &lt;see langword=&quot;false&quot; /&gt;.">
        <see langword="true" /> si les nœuds sont égaux ; sinon <see langword="false" />.</returns>
    </member>
    <member name="M:System.Xml.Linq.XNode.ElementsAfterSelf">
      <summary vsli:raw="Returns a collection of the sibling elements after this node, in document order.">Retourne une collection des éléments frères après ce nœud, dans l'ordre du document.</summary>
      <returns vsli:raw="An &lt;see cref=&quot;T:System.Collections.Generic.IEnumerable`1&quot; /&gt; of &lt;see cref=&quot;T:System.Xml.Linq.XElement&quot; /&gt; of the sibling elements after this node, in document order.">
        <see cref="T:System.Collections.Generic.IEnumerable`1" /> de <see cref="T:System.Xml.Linq.XElement" /> des éléments frères après ce nœud, dans l'ordre des documents.</returns>
    </member>
    <member name="M:System.Xml.Linq.XNode.ElementsAfterSelf(System.Xml.Linq.XName)">
      <summary vsli:raw="Returns a filtered collection of the sibling elements after this node, in document order. Only elements that have a matching &lt;see cref=&quot;T:System.Xml.Linq.XName&quot; /&gt; are included in the collection.">Retourne une collection filtrée des éléments frères après ce nœud, dans l’ordre du document. Seuls les éléments avec un <see cref="T:System.Xml.Linq.XName" /> correspondant sont inclus dans la collection.</summary>
      <param name="name" vsli:raw="The &lt;see cref=&quot;T:System.Xml.Linq.XName&quot; /&gt; to match.">
        <see cref="T:System.Xml.Linq.XName" /> à mettre en correspondance.</param>
      <returns vsli:raw="An &lt;see cref=&quot;T:System.Collections.Generic.IEnumerable`1&quot; /&gt; of &lt;see cref=&quot;T:System.Xml.Linq.XElement&quot; /&gt; of the sibling elements after this node, in document order. Only elements that have a matching &lt;see cref=&quot;T:System.Xml.Linq.XName&quot; /&gt; are included in the collection.">
        <see cref="T:System.Collections.Generic.IEnumerable`1" /> de <see cref="T:System.Xml.Linq.XElement" /> des éléments frères après ce nœud, dans l'ordre des documents. Seuls les éléments avec un <see cref="T:System.Xml.Linq.XName" /> correspondant sont inclus dans la collection.</returns>
    </member>
    <member name="M:System.Xml.Linq.XNode.ElementsBeforeSelf">
      <summary vsli:raw="Returns a collection of the sibling elements before this node, in document order.">Retourne une collection des éléments frères avant ce nœud, dans l’ordre du document.</summary>
      <returns vsli:raw="An &lt;see cref=&quot;T:System.Collections.Generic.IEnumerable`1&quot; /&gt; of &lt;see cref=&quot;T:System.Xml.Linq.XElement&quot; /&gt; of the sibling elements before this node, in document order.">
        <see cref="T:System.Collections.Generic.IEnumerable`1" /> de <see cref="T:System.Xml.Linq.XElement" /> des éléments frères avant ce nœud, dans l'ordre des documents.</returns>
    </member>
    <member name="M:System.Xml.Linq.XNode.ElementsBeforeSelf(System.Xml.Linq.XName)">
      <summary vsli:raw="Returns a filtered collection of the sibling elements before this node, in document order. Only elements that have a matching &lt;see cref=&quot;T:System.Xml.Linq.XName&quot; /&gt; are included in the collection.">Retourne une collection filtrée des éléments frères avant ce nœud, dans l’ordre du document. Seuls les éléments avec un <see cref="T:System.Xml.Linq.XName" /> correspondant sont inclus dans la collection.</summary>
      <param name="name" vsli:raw="The &lt;see cref=&quot;T:System.Xml.Linq.XName&quot; /&gt; to match.">
        <see cref="T:System.Xml.Linq.XName" /> à mettre en correspondance.</param>
      <returns vsli:raw="An &lt;see cref=&quot;T:System.Collections.Generic.IEnumerable`1&quot; /&gt; of &lt;see cref=&quot;T:System.Xml.Linq.XElement&quot; /&gt; of the sibling elements before this node, in document order. Only elements that have a matching &lt;see cref=&quot;T:System.Xml.Linq.XName&quot; /&gt; are included in the collection.">
        <see cref="T:System.Collections.Generic.IEnumerable`1" /> de <see cref="T:System.Xml.Linq.XElement" /> des éléments frères avant ce nœud, dans l'ordre des documents. Seuls les éléments avec un <see cref="T:System.Xml.Linq.XName" /> correspondant sont inclus dans la collection.</returns>
    </member>
    <member name="M:System.Xml.Linq.XNode.IsAfter(System.Xml.Linq.XNode)">
      <summary vsli:raw="Determines if the current node appears after a specified node in terms of document order.">Détermine si le nœud actuel apparaît après un nœud spécifié dans l'ordre du document.</summary>
      <param name="node" vsli:raw="The &lt;see cref=&quot;T:System.Xml.Linq.XNode&quot; /&gt; to compare for document order.">
        <see cref="T:System.Xml.Linq.XNode" /> à comparer par rapport à l'ordre des documents.</param>
      <returns vsli:raw="&lt;see langword=&quot;true&quot; /&gt; if this node appears after the specified node; otherwise &lt;see langword=&quot;false&quot; /&gt;.">
        <see langword="true" /> si ce nœud apparaît après le nœud spécifié ; sinon <see langword="false" />.</returns>
    </member>
    <member name="M:System.Xml.Linq.XNode.IsBefore(System.Xml.Linq.XNode)">
      <summary vsli:raw="Determines if the current node appears before a specified node in terms of document order.">Détermine si le nœud actuel apparaît avant un nœud spécifié dans l'ordre du document.</summary>
      <param name="node" vsli:raw="The &lt;see cref=&quot;T:System.Xml.Linq.XNode&quot; /&gt; to compare for document order.">
        <see cref="T:System.Xml.Linq.XNode" /> à comparer par rapport à l'ordre des documents.</param>
      <returns vsli:raw="&lt;see langword=&quot;true&quot; /&gt; if this node appears before the specified node; otherwise &lt;see langword=&quot;false&quot; /&gt;.">
        <see langword="true" /> si ce nœud apparaît avant le nœud spécifié ; sinon <see langword="false" />.</returns>
    </member>
    <member name="M:System.Xml.Linq.XNode.NodesAfterSelf">
      <summary vsli:raw="Returns a collection of the sibling nodes after this node, in document order.">Retourne une collection des nœuds frères après ce nœud, dans l’ordre du document.</summary>
      <returns vsli:raw="An &lt;see cref=&quot;T:System.Collections.Generic.IEnumerable`1&quot; /&gt; of &lt;see cref=&quot;T:System.Xml.Linq.XNode&quot; /&gt; of the sibling nodes after this node, in document order.">
        <see cref="T:System.Collections.Generic.IEnumerable`1" /> de <see cref="T:System.Xml.Linq.XNode" /> des nœuds frères après ce nœud, dans l'ordre des documents.</returns>
    </member>
    <member name="M:System.Xml.Linq.XNode.NodesBeforeSelf">
      <summary vsli:raw="Returns a collection of the sibling nodes before this node, in document order.">Retourne une collection des nœuds frères avant ce nœud, dans l’ordre du document.</summary>
      <returns vsli:raw="An &lt;see cref=&quot;T:System.Collections.Generic.IEnumerable`1&quot; /&gt; of &lt;see cref=&quot;T:System.Xml.Linq.XNode&quot; /&gt; of the sibling nodes before this node, in document order.">
        <see cref="T:System.Collections.Generic.IEnumerable`1" /> de <see cref="T:System.Xml.Linq.XNode" /> des nœuds frères avant ce nœud, dans l'ordre des documents.</returns>
    </member>
    <member name="M:System.Xml.Linq.XNode.ReadFrom(System.Xml.XmlReader)">
      <summary vsli:raw="Creates an &lt;see cref=&quot;T:System.Xml.Linq.XNode&quot; /&gt; from an &lt;see cref=&quot;T:System.Xml.XmlReader&quot; /&gt;.">Crée un <see cref="T:System.Xml.Linq.XNode" /> à partir d'un <see cref="T:System.Xml.XmlReader" />.</summary>
      <param name="reader" vsli:raw="An &lt;see cref=&quot;T:System.Xml.XmlReader&quot; /&gt; positioned at the node to read into this &lt;see cref=&quot;T:System.Xml.Linq.XNode&quot; /&gt;.">
        <see cref="T:System.Xml.XmlReader" /> positionné au niveau du nœud pour lire dans ce <see cref="T:System.Xml.Linq.XNode" />.</param>
      <exception cref="T:System.InvalidOperationException" vsli:raw="The &lt;see cref=&quot;T:System.Xml.XmlReader&quot; /&gt; is not positioned on a recognized node type.">Le <see cref="T:System.Xml.XmlReader" /> n'est pas positionné sur un type de nœud reconnu.</exception>
      <exception cref="T:System.Xml.XmlException" vsli:raw="The underlying &lt;see cref=&quot;T:System.Xml.XmlReader&quot; /&gt; throws an exception.">Le <see cref="T:System.Xml.XmlReader" /> sous-jacent lève une exception.</exception>
      <returns vsli:raw="An &lt;see cref=&quot;T:System.Xml.Linq.XNode&quot; /&gt; that contains the node and its descendant nodes that were read from the reader. The runtime type of the node is determined by the node type (&lt;see cref=&quot;P:System.Xml.Linq.XObject.NodeType&quot; /&gt;) of the first node encountered in the reader.">
        <see cref="T:System.Xml.Linq.XNode" /> qui contient le nœud et ses nœuds descendants qui ont été lus par le lecteur. Le type au moment de l'exécution du nœud est déterminé par le type de nœud (<see cref="P:System.Xml.Linq.XObject.NodeType" />) du premier nœud rencontré dans le lecteur.</returns>
    </member>
    <member name="M:System.Xml.Linq.XNode.ReadFromAsync(System.Xml.XmlReader,System.Threading.CancellationToken)">
      <summary vsli:raw="Creates an &lt;see cref=&quot;T:System.Xml.Linq.XNode&quot; /&gt; from an &lt;see cref=&quot;T:System.Xml.XmlReader&quot; /&gt;. The runtime type of the node is determined by the &lt;see cref=&quot;P:System.Xml.Linq.XObject.NodeType&quot; /&gt; of the first node encountered in the reader.">Crée un <see cref="T:System.Xml.Linq.XNode" /> à partir d'un <see cref="T:System.Xml.XmlReader" />. Le type de runtime du nœud est déterminé par le <see cref="P:System.Xml.Linq.XObject.NodeType" /> du premier nœud rencontré dans le lecteur.</summary>
      <param name="reader" vsli:raw="A reader positioned at the node to read into this &lt;see cref=&quot;T:System.Xml.Linq.XNode&quot; /&gt;.">Lecteur positionné au niveau du nœud à lire dans ce <see cref="T:System.Xml.Linq.XNode" />.</param>
      <param name="cancellationToken" vsli:raw="A token that can be used to request cancellation of the asynchronous operation.">Jeton qui peut être utilisé pour demander l'annulation de l'opération asynchrone.</param>
      <exception cref="T:System.InvalidOperationException" vsli:raw="The &lt;see cref=&quot;T:System.Xml.XmlReader&quot; /&gt; is not positioned on a recognized node type.">Le <see cref="T:System.Xml.XmlReader" /> n'est pas positionné sur un type de nœud reconnu.</exception>
      <returns vsli:raw="An XNode that contains the nodes read from the reader.">XNode qui contient les nœuds lus à partir du lecteur.</returns>
    </member>
    <member name="M:System.Xml.Linq.XNode.Remove">
      <summary vsli:raw="Removes this node from its parent.">Supprime ce nœud de son parent.</summary>
      <exception cref="T:System.InvalidOperationException" vsli:raw="The parent is &lt;see langword=&quot;null&quot; /&gt;.">Le parent est <see langword="null" />.</exception>
    </member>
    <member name="M:System.Xml.Linq.XNode.ReplaceWith(System.Object)">
      <summary vsli:raw="Replaces this node with the specified content.">Remplace ce nœud par le contenu spécifié.</summary>
      <param name="content" vsli:raw="Content that replaces this node.">Contenu qui remplace ce nœud.</param>
    </member>
    <member name="M:System.Xml.Linq.XNode.ReplaceWith(System.Object[])">
      <summary vsli:raw="Replaces this node with the specified content.">Remplace ce nœud par le contenu spécifié.</summary>
      <param name="content" vsli:raw="A parameter list of the new content.">Liste de paramètres du nouveau contenu.</param>
    </member>
    <member name="M:System.Xml.Linq.XNode.ToString">
      <summary vsli:raw="Returns the indented XML for this node.">Retourne le code XML mis en retrait pour ce nœud.</summary>
      <returns vsli:raw="A &lt;see cref=&quot;T:System.String&quot; /&gt; containing the indented XML.">
        <see cref="T:System.String" /> contenant le code XML mis en retrait.</returns>
    </member>
    <member name="M:System.Xml.Linq.XNode.ToString(System.Xml.Linq.SaveOptions)">
      <summary vsli:raw="Returns the XML for this node, optionally disabling formatting.">Retourne le code XML pour ce nœud, en désactivant éventuellement la mise en forme.</summary>
      <param name="options" vsli:raw="A &lt;see cref=&quot;T:System.Xml.Linq.SaveOptions&quot; /&gt; that specifies formatting behavior.">
        <see cref="T:System.Xml.Linq.SaveOptions" /> qui spécifie le comportement de mise en forme.</param>
      <returns vsli:raw="A &lt;see cref=&quot;T:System.String&quot; /&gt; containing the XML.">
        <see cref="T:System.String" /> contenant le code XML.</returns>
    </member>
    <member name="M:System.Xml.Linq.XNode.WriteTo(System.Xml.XmlWriter)">
      <summary vsli:raw="Writes this node to an &lt;see cref=&quot;T:System.Xml.XmlWriter&quot; /&gt;.">Écrit ce nœud vers un <see cref="T:System.Xml.XmlWriter" />.</summary>
      <param name="writer" vsli:raw="An &lt;see cref=&quot;T:System.Xml.XmlWriter&quot; /&gt; into which this method will write.">
        <see cref="T:System.Xml.XmlWriter" /> dans lequel cette méthode écrira.</param>
    </member>
    <member name="M:System.Xml.Linq.XNode.WriteToAsync(System.Xml.XmlWriter,System.Threading.CancellationToken)">
      <summary vsli:raw="Writes the current node to an &lt;see cref=&quot;T:System.Xml.XmlWriter&quot; /&gt;.">Écrit le nœud actuel dans un <see cref="T:System.Xml.XmlWriter" />.</summary>
      <param name="writer" vsli:raw="The writer to write the current node into.">Enregistreur dans lequel écrire le nœud actuel.</param>
      <param name="cancellationToken" vsli:raw="A token that can be used to request cancellation of the asynchronous operation.">Jeton qui peut être utilisé pour demander l'annulation de l'opération asynchrone.</param>
      <returns vsli:raw="A task representing the asynchronous write operation.">Tâche représentant l’opération d’écriture asynchrone.</returns>
    </member>
    <member name="P:System.Xml.Linq.XNode.DocumentOrderComparer">
      <summary vsli:raw="Gets a comparer that can compare the relative position of two nodes.">Obtient un comparateur qui peut comparer la position relative de deux nœuds.</summary>
      <returns vsli:raw="An &lt;see cref=&quot;T:System.Xml.Linq.XNodeDocumentOrderComparer&quot; /&gt; that can compare the relative position of two nodes.">
        <see cref="T:System.Xml.Linq.XNodeDocumentOrderComparer" /> qui peut comparer la position relative de deux nœuds.</returns>
    </member>
    <member name="P:System.Xml.Linq.XNode.EqualityComparer">
      <summary vsli:raw="Gets a comparer that can compare two nodes for value equality.">Obtient un comparateur qui peut comparer deux nœuds pour vérifier l'égalité de leur valeur.</summary>
      <returns vsli:raw="A &lt;see cref=&quot;T:System.Xml.Linq.XNodeEqualityComparer&quot; /&gt; that can compare two nodes for value equality.">
        <see cref="T:System.Xml.Linq.XNodeEqualityComparer" /> qui peut comparer deux nœuds pour vérifier l'égalité de leur valeur.</returns>
    </member>
    <member name="P:System.Xml.Linq.XNode.NextNode">
      <summary vsli:raw="Gets the next sibling node of this node.">Obtient le nœud frère suivant de ce nœud.</summary>
      <returns vsli:raw="The &lt;see cref=&quot;T:System.Xml.Linq.XNode&quot; /&gt; that contains the next sibling node.">
        <see cref="T:System.Xml.Linq.XNode" /> qui contient le nœud frère suivant.</returns>
    </member>
    <member name="P:System.Xml.Linq.XNode.PreviousNode">
      <summary vsli:raw="Gets the previous sibling node of this node.">Obtient le nœud frère précédent de ce nœud.</summary>
      <returns vsli:raw="The &lt;see cref=&quot;T:System.Xml.Linq.XNode&quot; /&gt; that contains the previous sibling node.">
        <see cref="T:System.Xml.Linq.XNode" /> qui contient le nœud frère précédent.</returns>
    </member>
    <member name="T:System.Xml.Linq.XNodeDocumentOrderComparer">
      <summary vsli:raw="Contains functionality to compare nodes for their document order. This class cannot be inherited.">Contient une fonctionnalité permettant de comparer des nœuds pour ce qui est de leur ordre dans le document. Cette classe ne peut pas être héritée.</summary>
    </member>
    <member name="M:System.Xml.Linq.XNodeDocumentOrderComparer.#ctor">
      <summary vsli:raw="Initializes a new instance of the &lt;see cref=&quot;T:System.Xml.Linq.XNodeDocumentOrderComparer&quot; /&gt; class.">Initialise une nouvelle instance de la classe <see cref="T:System.Xml.Linq.XNodeDocumentOrderComparer" />.</summary>
    </member>
    <member name="M:System.Xml.Linq.XNodeDocumentOrderComparer.Compare(System.Xml.Linq.XNode,System.Xml.Linq.XNode)">
      <summary vsli:raw="Compares two nodes to determine their relative document order.">Compare deux nœuds pour déterminer l'ordre des documents de chacun.</summary>
      <param name="x" vsli:raw="The first &lt;see cref=&quot;T:System.Xml.Linq.XNode&quot; /&gt; to compare.">Premier <see cref="T:System.Xml.Linq.XNode" /> à comparer.</param>
      <param name="y" vsli:raw="The second &lt;see cref=&quot;T:System.Xml.Linq.XNode&quot; /&gt; to compare.">Deuxième <see cref="T:System.Xml.Linq.XNode" /> à comparer.</param>
      <exception cref="T:System.InvalidOperationException" vsli:raw="The two nodes do not share a common ancestor.">Les deux nœuds ne partagent pas d'ancêtre commun.</exception>
      <returns vsli:raw="An &lt;see cref=&quot;T:System.Int32&quot; /&gt; that contains 0 if the nodes are equal; -1 if &lt;paramref name=&quot;x&quot; /&gt; is before &lt;paramref name=&quot;y&quot; /&gt;; 1 if &lt;paramref name=&quot;x&quot; /&gt; is after &lt;paramref name=&quot;y&quot; /&gt;.">
        <see cref="T:System.Int32" /> qui contient 0 si les nœuds sont égaux ; -1 si <paramref name="x" /> est avant <paramref name="y" /> ; 1 si <paramref name="x" /> est après <paramref name="y" />.</returns>
    </member>
    <member name="M:System.Xml.Linq.XNodeDocumentOrderComparer.System#Collections#IComparer#Compare(System.Object,System.Object)">
      <summary vsli:raw="Compares two nodes to determine their relative document order.">Compare deux nœuds pour déterminer l'ordre des documents de chacun.</summary>
      <param name="x" vsli:raw="The first &lt;see cref=&quot;T:System.Xml.Linq.XNode&quot; /&gt; to compare.">Premier <see cref="T:System.Xml.Linq.XNode" /> à comparer.</param>
      <param name="y" vsli:raw="The second &lt;see cref=&quot;T:System.Xml.Linq.XNode&quot; /&gt; to compare.">Deuxième <see cref="T:System.Xml.Linq.XNode" /> à comparer.</param>
      <exception cref="T:System.InvalidOperationException" vsli:raw="The two nodes do not share a common ancestor.">Les deux nœuds ne partagent pas d'ancêtre commun.</exception>
      <exception cref="T:System.ArgumentException" vsli:raw="The two nodes are not derived from &lt;see cref=&quot;T:System.Xml.Linq.XNode&quot; /&gt;.">Les deux nœuds ne sont pas dérivés de <see cref="T:System.Xml.Linq.XNode" />.</exception>
      <returns vsli:raw="An &lt;see cref=&quot;T:System.Int32&quot; /&gt; that contains 0 if the nodes are equal; -1 if &lt;paramref name=&quot;x&quot; /&gt; is before &lt;paramref name=&quot;y&quot; /&gt;; 1 if &lt;paramref name=&quot;x&quot; /&gt; is after &lt;paramref name=&quot;y&quot; /&gt;.">
        <see cref="T:System.Int32" /> qui contient 0 si les nœuds sont égaux ; -1 si <paramref name="x" /> est avant <paramref name="y" /> ; 1 si <paramref name="x" /> est après <paramref name="y" />.</returns>
    </member>
    <member name="T:System.Xml.Linq.XNodeEqualityComparer">
      <summary vsli:raw="Compares nodes to determine whether they are equal. This class cannot be inherited.">Compare des nœuds pour déterminer s'ils sont égaux. Cette classe ne peut pas être héritée.</summary>
    </member>
    <member name="M:System.Xml.Linq.XNodeEqualityComparer.#ctor">
      <summary vsli:raw="Initializes a new instance of the &lt;see cref=&quot;T:System.Xml.Linq.XNodeEqualityComparer&quot; /&gt; class.">Initialise une nouvelle instance de la classe <see cref="T:System.Xml.Linq.XNodeEqualityComparer" />.</summary>
    </member>
    <member name="M:System.Xml.Linq.XNodeEqualityComparer.Equals(System.Xml.Linq.XNode,System.Xml.Linq.XNode)">
      <summary vsli:raw="Compares the values of two nodes.">Compare les valeurs de deux nœuds.</summary>
      <param name="x" vsli:raw="The first &lt;see cref=&quot;T:System.Xml.Linq.XNode&quot; /&gt; to compare.">Premier <see cref="T:System.Xml.Linq.XNode" /> à comparer.</param>
      <param name="y" vsli:raw="The second &lt;see cref=&quot;T:System.Xml.Linq.XNode&quot; /&gt; to compare.">Deuxième <see cref="T:System.Xml.Linq.XNode" /> à comparer.</param>
      <returns vsli:raw="A &lt;see cref=&quot;T:System.Boolean&quot; /&gt; indicating if the nodes are equal.">
        <see cref="T:System.Boolean" /> indiquant si les nœuds sont égaux.</returns>
    </member>
    <member name="M:System.Xml.Linq.XNodeEqualityComparer.GetHashCode(System.Xml.Linq.XNode)">
      <summary vsli:raw="Returns a hash code based on an &lt;see cref=&quot;T:System.Xml.Linq.XNode&quot; /&gt;.">Retourne un code de hachage reposant sur un <see cref="T:System.Xml.Linq.XNode" />.</summary>
      <param name="obj" vsli:raw="The &lt;see cref=&quot;T:System.Xml.Linq.XNode&quot; /&gt; to hash.">
        <see cref="T:System.Xml.Linq.XNode" /> à hacher.</param>
      <returns vsli:raw="A &lt;see cref=&quot;T:System.Int32&quot; /&gt; that contains a value-based hash code for the node.">
        <see cref="T:System.Int32" /> qui contient un code de hachage reposant sur une valeur pour le nœud.</returns>
    </member>
    <member name="M:System.Xml.Linq.XNodeEqualityComparer.System#Collections#IEqualityComparer#Equals(System.Object,System.Object)">
      <summary vsli:raw="Compares the values of two nodes.">Compare les valeurs de deux nœuds.</summary>
      <param name="x" vsli:raw="The first &lt;see cref=&quot;T:System.Xml.Linq.XNode&quot; /&gt; to compare.">Premier <see cref="T:System.Xml.Linq.XNode" /> à comparer.</param>
      <param name="y" vsli:raw="The second &lt;see cref=&quot;T:System.Xml.Linq.XNode&quot; /&gt; to compare.">Deuxième <see cref="T:System.Xml.Linq.XNode" /> à comparer.</param>
      <returns vsli:raw="&lt;see langword=&quot;true&quot; /&gt; if the nodes are equal; otherwise &lt;see langword=&quot;false&quot; /&gt;.">
        <see langword="true" /> si les nœuds sont égaux ; sinon <see langword="false" />.</returns>
    </member>
    <member name="M:System.Xml.Linq.XNodeEqualityComparer.System#Collections#IEqualityComparer#GetHashCode(System.Object)">
      <summary vsli:raw="Returns a hash code based on the value of a node.">Retourne un code de hachage basé sur la valeur d'un nœud.</summary>
      <param name="obj" vsli:raw="The node to hash.">Nœud à hacher.</param>
      <returns vsli:raw="A &lt;see cref=&quot;T:System.Int32&quot; /&gt; that contains a value-based hash code for the node.">
        <see cref="T:System.Int32" /> qui contient un code de hachage reposant sur une valeur pour le nœud.</returns>
    </member>
    <member name="T:System.Xml.Linq.XObject">
      <summary vsli:raw="Represents a node or an attribute in an XML tree.">Représente un nœud ou un attribut dans une arborescence XML.</summary>
    </member>
    <member name="E:System.Xml.Linq.XObject.Changed">
      <summary vsli:raw="Raised when this &lt;see cref=&quot;T:System.Xml.Linq.XObject&quot; /&gt; or any of its descendants have changed.">Déclenché lorsque ce <see cref="T:System.Xml.Linq.XObject" /> ou l'un de ses descendants change.</summary>
    </member>
    <member name="E:System.Xml.Linq.XObject.Changing">
      <summary vsli:raw="Raised when this &lt;see cref=&quot;T:System.Xml.Linq.XObject&quot; /&gt; or any of its descendants are about to change.">Déclenché lorsque ce <see cref="T:System.Xml.Linq.XObject" /> ou l'un de ses descendants est sur le point de changer.</summary>
    </member>
    <member name="M:System.Xml.Linq.XObject.AddAnnotation(System.Object)">
      <summary vsli:raw="Adds an object to the annotation list of this &lt;see cref=&quot;T:System.Xml.Linq.XObject&quot; /&gt;.">Ajoute un objet à la liste d'annotations de ce <see cref="T:System.Xml.Linq.XObject" />.</summary>
      <param name="annotation" vsli:raw="An object that contains the annotation to add.">Un objet qui contient l’annotation à ajouter.</param>
    </member>
    <member name="M:System.Xml.Linq.XObject.Annotation(System.Type)">
      <summary vsli:raw="Gets the first annotation object of the specified type from this &lt;see cref=&quot;T:System.Xml.Linq.XObject&quot; /&gt;.">Obtient le premier objet d'annotation du type spécifié à partir de ce <see cref="T:System.Xml.Linq.XObject" />.</summary>
      <param name="type" vsli:raw="The type of the annotation to retrieve.">Type de l'annotation à récupérer.</param>
      <returns vsli:raw="The &lt;see cref=&quot;T:System.Object&quot; /&gt; that contains the first annotation object that matches the specified type, or &lt;see langword=&quot;null&quot; /&gt; if no annotation is of the specified type.">
        <see cref="T:System.Object" /> qui contient le premier objet d'annotation qui correspond au type spécifié ou <see langword="null" /> si aucune annotation n'est du type spécifié.</returns>
    </member>
    <member name="M:System.Xml.Linq.XObject.Annotation``1">
      <summary vsli:raw="Gets the first annotation object of the specified type from this &lt;see cref=&quot;T:System.Xml.Linq.XObject&quot; /&gt;.">Obtient le premier objet d'annotation du type spécifié à partir de ce <see cref="T:System.Xml.Linq.XObject" />.</summary>
      <typeparam name="T" vsli:raw="The type of the annotation to retrieve.">Type de l'annotation à récupérer.</typeparam>
      <returns vsli:raw="The first annotation object that matches the specified type, or &lt;see langword=&quot;null&quot; /&gt; if no annotation is of the specified type.">Le premier objet d'annotation qui correspond au type spécifié ou <see langword="null" /> si aucune annotation n'est du type spécifié.</returns>
    </member>
    <member name="M:System.Xml.Linq.XObject.Annotations(System.Type)">
      <summary vsli:raw="Gets a collection of annotations of the specified type for this &lt;see cref=&quot;T:System.Xml.Linq.XObject&quot; /&gt;.">Obtient une collection d'annotations du type spécifié pour ce <see cref="T:System.Xml.Linq.XObject" />.</summary>
      <param name="type" vsli:raw="The type of the annotations to retrieve.">Type des annotations à récupérer.</param>
      <returns vsli:raw="An &lt;see cref=&quot;T:System.Collections.Generic.IEnumerable`1&quot; /&gt; of &lt;see cref=&quot;T:System.Object&quot; /&gt; that contains the annotations that match the specified type for this &lt;see cref=&quot;T:System.Xml.Linq.XObject&quot; /&gt;.">
        <see cref="T:System.Collections.Generic.IEnumerable`1" /> de <see cref="T:System.Object" /> qui contient les annotations qui correspondent au type spécifié pour ce <see cref="T:System.Xml.Linq.XObject" />.</returns>
    </member>
    <member name="M:System.Xml.Linq.XObject.Annotations``1">
      <summary vsli:raw="Gets a collection of annotations of the specified type for this &lt;see cref=&quot;T:System.Xml.Linq.XObject&quot; /&gt;.">Obtient une collection d'annotations du type spécifié pour ce <see cref="T:System.Xml.Linq.XObject" />.</summary>
      <typeparam name="T" vsli:raw="The type of the annotations to retrieve.">Type des annotations à récupérer.</typeparam>
      <returns vsli:raw="An &lt;see cref=&quot;T:System.Collections.Generic.IEnumerable`1&quot; /&gt; that contains the annotations for this &lt;see cref=&quot;T:System.Xml.Linq.XObject&quot; /&gt;.">
        <see cref="T:System.Collections.Generic.IEnumerable`1" /> qui contient les annotations pour ce <see cref="T:System.Xml.Linq.XObject" />.</returns>
    </member>
    <member name="M:System.Xml.Linq.XObject.RemoveAnnotations(System.Type)">
      <summary vsli:raw="Removes the annotations of the specified type from this &lt;see cref=&quot;T:System.Xml.Linq.XObject&quot; /&gt;.">Supprime les annotations du type spécifié de ce <see cref="T:System.Xml.Linq.XObject" />.</summary>
      <param name="type" vsli:raw="The type of annotations to remove.">Type des annotations à supprimer.</param>
    </member>
    <member name="M:System.Xml.Linq.XObject.RemoveAnnotations``1">
      <summary vsli:raw="Removes the annotations of the specified type from this &lt;see cref=&quot;T:System.Xml.Linq.XObject&quot; /&gt;.">Supprime les annotations du type spécifié de ce <see cref="T:System.Xml.Linq.XObject" />.</summary>
      <typeparam name="T" vsli:raw="The type of annotations to remove.">Type des annotations à supprimer.</typeparam>
    </member>
    <member name="M:System.Xml.Linq.XObject.System#Xml#IXmlLineInfo#HasLineInfo">
      <summary vsli:raw="Gets a value indicating whether or not this &lt;see cref=&quot;T:System.Xml.Linq.XObject&quot; /&gt; has line information.">Obtient une valeur indiquant si ce <see cref="T:System.Xml.Linq.XObject" /> a des informations de ligne.</summary>
      <returns vsli:raw="&lt;see langword=&quot;true&quot; /&gt; if the &lt;see cref=&quot;T:System.Xml.Linq.XObject&quot; /&gt; has line information; otherwise, &lt;see langword=&quot;false&quot; /&gt;.">
        <see langword="true" /> si le <see cref="T:System.Xml.Linq.XObject" /> a des informations de ligne, sinon <see langword="false" />.</returns>
    </member>
    <member name="P:System.Xml.Linq.XObject.BaseUri">
      <summary vsli:raw="Gets the base URI for this &lt;see cref=&quot;T:System.Xml.Linq.XObject&quot; /&gt;.">Obtient l'URI de base pour ce <see cref="T:System.Xml.Linq.XObject" />.</summary>
      <returns vsli:raw="A &lt;see cref=&quot;T:System.String&quot; /&gt; that contains the base URI for this &lt;see cref=&quot;T:System.Xml.Linq.XObject&quot; /&gt;.">
        <see cref="T:System.String" /> qui contient l'URI de base pour ce <see cref="T:System.Xml.Linq.XObject" />.</returns>
    </member>
    <member name="P:System.Xml.Linq.XObject.Document">
      <summary vsli:raw="Gets the &lt;see cref=&quot;T:System.Xml.Linq.XDocument&quot; /&gt; for this &lt;see cref=&quot;T:System.Xml.Linq.XObject&quot; /&gt;.">Obtient le <see cref="T:System.Xml.Linq.XDocument" /> pour ce <see cref="T:System.Xml.Linq.XObject" />.</summary>
      <returns vsli:raw="The &lt;see cref=&quot;T:System.Xml.Linq.XDocument&quot; /&gt; for this &lt;see cref=&quot;T:System.Xml.Linq.XObject&quot; /&gt;.">
        <see cref="T:System.Xml.Linq.XDocument" /> de ce <see cref="T:System.Xml.Linq.XObject" />.</returns>
    </member>
    <member name="P:System.Xml.Linq.XObject.NodeType">
      <summary vsli:raw="Gets the node type for this &lt;see cref=&quot;T:System.Xml.Linq.XObject&quot; /&gt;.">Obtient le type de nœud pour <see cref="T:System.Xml.Linq.XObject" />.</summary>
      <returns vsli:raw="The node type for this &lt;see cref=&quot;T:System.Xml.Linq.XObject&quot; /&gt;.">Type de nœud pour <see cref="T:System.Xml.Linq.XObject" />.</returns>
    </member>
    <member name="P:System.Xml.Linq.XObject.Parent">
      <summary vsli:raw="Gets the parent &lt;see cref=&quot;T:System.Xml.Linq.XElement&quot; /&gt; of this &lt;see cref=&quot;T:System.Xml.Linq.XObject&quot; /&gt;.">Obtient le <see cref="T:System.Xml.Linq.XElement" /> parent de ce <see cref="T:System.Xml.Linq.XObject" />.</summary>
      <returns vsli:raw="The parent &lt;see cref=&quot;T:System.Xml.Linq.XElement&quot; /&gt; of this &lt;see cref=&quot;T:System.Xml.Linq.XObject&quot; /&gt;.">
        <see cref="T:System.Xml.Linq.XElement" /> parent de ce <see cref="T:System.Xml.Linq.XObject" />.</returns>
    </member>
    <member name="P:System.Xml.Linq.XObject.System#Xml#IXmlLineInfo#LineNumber">
      <summary vsli:raw="Gets the line number that the underlying &lt;see cref=&quot;T:System.Xml.XmlReader&quot; /&gt; reported for this &lt;see cref=&quot;T:System.Xml.Linq.XObject&quot; /&gt;.">Obtient le numéro de ligne que le <see cref="T:System.Xml.XmlReader" /> sous-jacent a rapporté pour ce <see cref="T:System.Xml.Linq.XObject" />.</summary>
      <returns vsli:raw="An &lt;see cref=&quot;T:System.Int32&quot; /&gt; that contains the line number reported by the &lt;see cref=&quot;T:System.Xml.XmlReader&quot; /&gt; for this &lt;see cref=&quot;T:System.Xml.Linq.XObject&quot; /&gt;.">
        <see cref="T:System.Int32" /> qui contient le numéro de ligne rapporté par le <see cref="T:System.Xml.XmlReader" /> pour ce <see cref="T:System.Xml.Linq.XObject" />.</returns>
    </member>
    <member name="P:System.Xml.Linq.XObject.System#Xml#IXmlLineInfo#LinePosition">
      <summary vsli:raw="Gets the line position that the underlying &lt;see cref=&quot;T:System.Xml.XmlReader&quot; /&gt; reported for this &lt;see cref=&quot;T:System.Xml.Linq.XObject&quot; /&gt;.">Obtient la position de ligne que le <see cref="T:System.Xml.XmlReader" /> sous-jacent a rapportée pour ce <see cref="T:System.Xml.Linq.XObject" />.</summary>
      <returns vsli:raw="An &lt;see cref=&quot;T:System.Int32&quot; /&gt; that contains the line position reported by the &lt;see cref=&quot;T:System.Xml.XmlReader&quot; /&gt; for this &lt;see cref=&quot;T:System.Xml.Linq.XObject&quot; /&gt;.">
        <see cref="T:System.Int32" /> qui contient la position de ligne rapportée par le <see cref="T:System.Xml.XmlReader" /> pour ce <see cref="T:System.Xml.Linq.XObject" />.</returns>
    </member>
    <member name="T:System.Xml.Linq.XObjectChange">
      <summary vsli:raw="Specifies the event type when an event is raised for an &lt;see cref=&quot;T:System.Xml.Linq.XObject&quot; /&gt;.">Spécifie le type d'événement lorsqu'un événement est déclenché pour un objet <see cref="T:System.Xml.Linq.XObject" />.</summary>
    </member>
    <member name="F:System.Xml.Linq.XObjectChange.Add">
      <summary vsli:raw="An &lt;see cref=&quot;T:System.Xml.Linq.XObject&quot; /&gt; has been or will be added to an &lt;see cref=&quot;T:System.Xml.Linq.XContainer&quot; /&gt;.">Un <see cref="T:System.Xml.Linq.XObject" /> a été ou va être ajouté à un <see cref="T:System.Xml.Linq.XContainer" />.</summary>
    </member>
    <member name="F:System.Xml.Linq.XObjectChange.Name">
      <summary vsli:raw="An &lt;see cref=&quot;T:System.Xml.Linq.XObject&quot; /&gt; has been or will be renamed.">Un <see cref="T:System.Xml.Linq.XObject" /> a été ou va être renommé.</summary>
    </member>
    <member name="F:System.Xml.Linq.XObjectChange.Remove">
      <summary vsli:raw="An &lt;see cref=&quot;T:System.Xml.Linq.XObject&quot; /&gt; has been or will be removed from an &lt;see cref=&quot;T:System.Xml.Linq.XContainer&quot; /&gt;.">Un <see cref="T:System.Xml.Linq.XObject" /> a été ou va être supprimé d'un <see cref="T:System.Xml.Linq.XContainer" />.</summary>
    </member>
    <member name="F:System.Xml.Linq.XObjectChange.Value">
      <summary vsli:raw="The value of an &lt;see cref=&quot;T:System.Xml.Linq.XObject&quot; /&gt; has been or will be changed. In addition, a change in the serialization of an empty element (either from an empty tag to start/end tag pair or vice versa) raises this event.">La valeur d'un <see cref="T:System.Xml.Linq.XObject" /> a été ou va être modifiée. De plus, une modification de la sérialisation d'un élément vide (d'une balise vide vers une paire de balises démarrer/arrêter ou inversement) déclenche cet événement.</summary>
    </member>
    <member name="T:System.Xml.Linq.XObjectChangeEventArgs">
      <summary vsli:raw="Provides data for the &lt;see cref=&quot;E:System.Xml.Linq.XObject.Changing&quot; /&gt; and &lt;see cref=&quot;E:System.Xml.Linq.XObject.Changed&quot; /&gt; events.">Fournit des données pour les événements <see cref="E:System.Xml.Linq.XObject.Changing" /> et <see cref="E:System.Xml.Linq.XObject.Changed" />.</summary>
    </member>
    <member name="F:System.Xml.Linq.XObjectChangeEventArgs.Add">
      <summary vsli:raw="Event argument for an &lt;see cref=&quot;F:System.Xml.Linq.XObjectChange.Add&quot; /&gt; change event.">Argument d'événement pour un événement de modification <see cref="F:System.Xml.Linq.XObjectChange.Add" />.</summary>
    </member>
    <member name="F:System.Xml.Linq.XObjectChangeEventArgs.Name">
      <summary vsli:raw="Event argument for a &lt;see cref=&quot;F:System.Xml.Linq.XObjectChange.Name&quot; /&gt; change event.">Argument d'événement pour un événement de modification <see cref="F:System.Xml.Linq.XObjectChange.Name" />.</summary>
    </member>
    <member name="F:System.Xml.Linq.XObjectChangeEventArgs.Remove">
      <summary vsli:raw="Event argument for a &lt;see cref=&quot;F:System.Xml.Linq.XObjectChange.Remove&quot; /&gt; change event.">Argument d'événement pour un événement de modification <see cref="F:System.Xml.Linq.XObjectChange.Remove" />.</summary>
    </member>
    <member name="F:System.Xml.Linq.XObjectChangeEventArgs.Value">
      <summary vsli:raw="Event argument for a &lt;see cref=&quot;F:System.Xml.Linq.XObjectChange.Value&quot; /&gt; change event.">Argument d'événement pour un événement de modification <see cref="F:System.Xml.Linq.XObjectChange.Value" />.</summary>
    </member>
    <member name="M:System.Xml.Linq.XObjectChangeEventArgs.#ctor(System.Xml.Linq.XObjectChange)">
      <summary vsli:raw="Initializes a new instance of the &lt;see cref=&quot;T:System.Xml.Linq.XObjectChangeEventArgs&quot; /&gt; class.">Initialise une nouvelle instance de la classe <see cref="T:System.Xml.Linq.XObjectChangeEventArgs" />.</summary>
      <param name="objectChange" vsli:raw="An &lt;see cref=&quot;T:System.Xml.Linq.XObjectChange&quot; /&gt; that contains the event arguments for LINQ to XML events.">
        <see cref="T:System.Xml.Linq.XObjectChange" /> qui contient les arguments d'événement pour les événements LINQ to XML.</param>
    </member>
    <member name="P:System.Xml.Linq.XObjectChangeEventArgs.ObjectChange">
      <summary vsli:raw="Gets the type of change.">Obtient le type de modification.</summary>
      <returns vsli:raw="An &lt;see cref=&quot;T:System.Xml.Linq.XObjectChange&quot; /&gt; that contains the type of change.">
        <see cref="T:System.Xml.Linq.XObjectChange" /> qui contient le type de modification.</returns>
    </member>
    <member name="T:System.Xml.Linq.XProcessingInstruction">
      <summary vsli:raw="Represents an XML processing instruction.">Représente une instruction de traitement XML.</summary>
    </member>
    <member name="M:System.Xml.Linq.XProcessingInstruction.#ctor(System.String,System.String)">
      <summary vsli:raw="Initializes a new instance of the &lt;see cref=&quot;T:System.Xml.Linq.XProcessingInstruction&quot; /&gt; class.">Initialise une nouvelle instance de la classe <see cref="T:System.Xml.Linq.XProcessingInstruction" />.</summary>
      <param name="target" vsli:raw="A &lt;see cref=&quot;T:System.String&quot; /&gt; containing the target application for this &lt;see cref=&quot;T:System.Xml.Linq.XProcessingInstruction&quot; /&gt;.">
        <see cref="T:System.String" /> contenant l'application cible pour ce <see cref="T:System.Xml.Linq.XProcessingInstruction" />.</param>
      <param name="data" vsli:raw="The string data for this &lt;see cref=&quot;T:System.Xml.Linq.XProcessingInstruction&quot; /&gt;.">Données de type chaîne pour cette <see cref="T:System.Xml.Linq.XProcessingInstruction" />.</param>
      <exception cref="T:System.ArgumentNullException" vsli:raw="The &lt;paramref name=&quot;target&quot; /&gt; or &lt;paramref name=&quot;data&quot; /&gt; parameter is &lt;see langword=&quot;null&quot; /&gt;.">Le paramètre <paramref name="target" /> ou <paramref name="data" /> est <see langword="null" />.</exception>
      <exception cref="T:System.ArgumentException" vsli:raw="The &lt;paramref name=&quot;target&quot; /&gt; does not follow the constraints of an XML name.">La <paramref name="target" /> ne suit pas les contraintes d'un nom XML.</exception>
    </member>
    <member name="M:System.Xml.Linq.XProcessingInstruction.#ctor(System.Xml.Linq.XProcessingInstruction)">
      <summary vsli:raw="Initializes a new instance of the &lt;see cref=&quot;T:System.Xml.Linq.XProcessingInstruction&quot; /&gt; class.">Initialise une nouvelle instance de la classe <see cref="T:System.Xml.Linq.XProcessingInstruction" />.</summary>
      <param name="other" vsli:raw="The &lt;see cref=&quot;T:System.Xml.Linq.XProcessingInstruction&quot; /&gt; node to copy from.">Nœud <see cref="T:System.Xml.Linq.XProcessingInstruction" /> à partir duquel effectuer la copie.</param>
    </member>
    <member name="M:System.Xml.Linq.XProcessingInstruction.WriteTo(System.Xml.XmlWriter)">
      <summary vsli:raw="Writes this processing instruction to an &lt;see cref=&quot;T:System.Xml.XmlWriter&quot; /&gt;.">Écrit cette instruction de traitement vers un <see cref="T:System.Xml.XmlWriter" />.</summary>
      <param name="writer" vsli:raw="The &lt;see cref=&quot;T:System.Xml.XmlWriter&quot; /&gt; to write this processing instruction to.">Le <see cref="T:System.Xml.XmlWriter" /> vers lequel écrire cette instruction de traitement.</param>
    </member>
    <member name="M:System.Xml.Linq.XProcessingInstruction.WriteToAsync(System.Xml.XmlWriter,System.Threading.CancellationToken)">
      <summary vsli:raw="Writes this &lt;see cref=&quot;T:System.Xml.Linq.XProcessingInstruction&quot; /&gt; to the specified &lt;see cref=&quot;T:System.Xml.XmlWriter&quot; /&gt;.">Écrit ce <see cref="T:System.Xml.Linq.XProcessingInstruction" /> au <see cref="T:System.Xml.XmlWriter" /> spécifié.</summary>
      <param name="writer" vsli:raw="The writer to write this &lt;see cref=&quot;T:System.Xml.Linq.XProcessingInstruction&quot; /&gt; to.">Enregistreur sur lequel écrire ce <see cref="T:System.Xml.Linq.XProcessingInstruction" />.</param>
      <param name="cancellationToken" vsli:raw="A token that can be used to request cancellation of the asynchronous operation.">Jeton qui peut être utilisé pour demander l'annulation de l'opération asynchrone.</param>
      <returns vsli:raw="A task representing the asynchronous write operation.">Tâche représentant l’opération d’écriture asynchrone.</returns>
    </member>
    <member name="P:System.Xml.Linq.XProcessingInstruction.Data">
      <summary vsli:raw="Gets or sets the string value of this processing instruction.">Obtient ou définit la valeur de chaîne de cette instruction de traitement.</summary>
      <exception cref="T:System.ArgumentNullException" vsli:raw="The string &lt;paramref name=&quot;value&quot; /&gt; is &lt;see langword=&quot;null&quot; /&gt;.">La <paramref name="value" /> de chaîne est <see langword="null" />.</exception>
      <returns vsli:raw="A &lt;see cref=&quot;T:System.String&quot; /&gt; that contains the string value of this processing instruction.">
        <see cref="T:System.String" /> qui contient la valeur de chaîne de cette instruction de traitement.</returns>
    </member>
    <member name="P:System.Xml.Linq.XProcessingInstruction.NodeType">
      <summary vsli:raw="Gets the node type for this node.">Obtient le type de ce nœud.</summary>
      <returns vsli:raw="The node type. For &lt;see cref=&quot;T:System.Xml.Linq.XProcessingInstruction&quot; /&gt; objects, this value is &lt;see cref=&quot;F:System.Xml.XmlNodeType.ProcessingInstruction&quot; /&gt;.">Type de nœud. Pour les objets <see cref="T:System.Xml.Linq.XProcessingInstruction" />, cette valeur est <see cref="F:System.Xml.XmlNodeType.ProcessingInstruction" />.</returns>
    </member>
    <member name="P:System.Xml.Linq.XProcessingInstruction.Target">
      <summary vsli:raw="Gets or sets a string containing the target application for this processing instruction.">Obtient ou définit une chaîne contenant l'application cible pour cette instruction de traitement.</summary>
      <exception cref="T:System.ArgumentNullException" vsli:raw="The string &lt;paramref name=&quot;value&quot; /&gt; is &lt;see langword=&quot;null&quot; /&gt;.">La <paramref name="value" /> de chaîne est <see langword="null" />.</exception>
      <exception cref="T:System.ArgumentException" vsli:raw="The &lt;paramref name=&quot;target&quot; /&gt; does not follow the constraints of an XML name.">La <paramref name="target" /> ne suit pas les contraintes d'un nom XML.</exception>
      <returns vsli:raw="A &lt;see cref=&quot;T:System.String&quot; /&gt; containing the target application for this processing instruction.">
        <see cref="T:System.String" /> contenant l'application cible pour cette instruction de traitement.</returns>
    </member>
    <member name="T:System.Xml.Linq.XStreamingElement">
      <summary vsli:raw="Represents elements in an XML tree that supports deferred streaming output.">Représente les éléments d'une arborescence XML qui prend en charge la sortie de diffusion en continu différée.</summary>
    </member>
    <member name="M:System.Xml.Linq.XStreamingElement.#ctor(System.Xml.Linq.XName)">
      <summary vsli:raw="Initializes a new instance of the &lt;see cref=&quot;T:System.Xml.Linq.XElement&quot; /&gt; class from the specified &lt;see cref=&quot;T:System.Xml.Linq.XName&quot; /&gt;.">Initialise une nouvelle instance de la classe <see cref="T:System.Xml.Linq.XElement" /> à partir du <see cref="T:System.Xml.Linq.XName" /> spécifié.</summary>
      <param name="name" vsli:raw="An &lt;see cref=&quot;T:System.Xml.Linq.XName&quot; /&gt; that contains the name of the element.">
        <see cref="T:System.Xml.Linq.XName" /> qui contient le nom de l'élément.</param>
    </member>
    <member name="M:System.Xml.Linq.XStreamingElement.#ctor(System.Xml.Linq.XName,System.Object)">
      <summary vsli:raw="Initializes a new instance of the &lt;see cref=&quot;T:System.Xml.Linq.XStreamingElement&quot; /&gt; class with the specified name and content.">Initialise une nouvelle instance de la classe <see cref="T:System.Xml.Linq.XStreamingElement" /> avec le nom et le contenu spécifiés.</summary>
      <param name="name" vsli:raw="An &lt;see cref=&quot;T:System.Xml.Linq.XName&quot; /&gt; that contains the element name.">
        <see cref="T:System.Xml.Linq.XName" /> qui contient le nom de l'élément.</param>
      <param name="content" vsli:raw="The contents of the element.">Contenu de l'élément.</param>
    </member>
    <member name="M:System.Xml.Linq.XStreamingElement.#ctor(System.Xml.Linq.XName,System.Object[])">
      <summary vsli:raw="Initializes a new instance of the &lt;see cref=&quot;T:System.Xml.Linq.XStreamingElement&quot; /&gt; class with the specified name and content.">Initialise une nouvelle instance de la classe <see cref="T:System.Xml.Linq.XStreamingElement" /> avec le nom et le contenu spécifiés.</summary>
      <param name="name" vsli:raw="An &lt;see cref=&quot;T:System.Xml.Linq.XName&quot; /&gt; that contains the element name.">
        <see cref="T:System.Xml.Linq.XName" /> qui contient le nom de l'élément.</param>
      <param name="content" vsli:raw="The contents of the element.">Contenu de l'élément.</param>
    </member>
    <member name="M:System.Xml.Linq.XStreamingElement.Add(System.Object)">
      <summary vsli:raw="Adds the specified content as children to this &lt;see cref=&quot;T:System.Xml.Linq.XStreamingElement&quot; /&gt;.">Ajoute le contenu spécifié en tant qu'enfants à ce <see cref="T:System.Xml.Linq.XStreamingElement" />.</summary>
      <param name="content" vsli:raw="Content to be added to the streaming element.">Contenu à ajouter à l'élément de diffusion en continu.</param>
    </member>
    <member name="M:System.Xml.Linq.XStreamingElement.Add(System.Object[])">
      <summary vsli:raw="Adds the specified content as children to this &lt;see cref=&quot;T:System.Xml.Linq.XStreamingElement&quot; /&gt;.">Ajoute le contenu spécifié en tant qu'enfants à ce <see cref="T:System.Xml.Linq.XStreamingElement" />.</summary>
      <param name="content" vsli:raw="Content to be added to the streaming element.">Contenu à ajouter à l'élément de diffusion en continu.</param>
    </member>
    <member name="M:System.Xml.Linq.XStreamingElement.Save(System.IO.Stream)">
      <summary vsli:raw="Outputs this &lt;see cref=&quot;T:System.Xml.Linq.XStreamingElement&quot; /&gt; to the specified &lt;see cref=&quot;T:System.IO.Stream&quot; /&gt;.">Renvoie ce <see cref="T:System.Xml.Linq.XStreamingElement" /> vers le <see cref="T:System.IO.Stream" /> spécifié.</summary>
      <param name="stream" vsli:raw="The stream to output this &lt;see cref=&quot;T:System.Xml.Linq.XDocument&quot; /&gt; to.">Flux vers lequel générer ce <see cref="T:System.Xml.Linq.XDocument" />.</param>
    </member>
    <member name="M:System.Xml.Linq.XStreamingElement.Save(System.IO.Stream,System.Xml.Linq.SaveOptions)">
      <summary vsli:raw="Outputs this &lt;see cref=&quot;T:System.Xml.Linq.XStreamingElement&quot; /&gt; to the specified &lt;see cref=&quot;T:System.IO.Stream&quot; /&gt;, optionally specifying formatting behavior.">Génère ce <see cref="T:System.Xml.Linq.XStreamingElement" /> vers le <see cref="T:System.IO.Stream" /> spécifié, en précisant le cas échéant le comportement de mise en forme.</summary>
      <param name="stream" vsli:raw="The stream to output this &lt;see cref=&quot;T:System.Xml.Linq.XDocument&quot; /&gt; to.">Flux vers lequel générer ce <see cref="T:System.Xml.Linq.XDocument" />.</param>
      <param name="options" vsli:raw="A &lt;see cref=&quot;T:System.Xml.Linq.SaveOptions&quot; /&gt; object that specifies formatting behavior.">Objet <see cref="T:System.Xml.Linq.SaveOptions" /> qui spécifie le comportement de mise en forme.</param>
    </member>
    <member name="M:System.Xml.Linq.XStreamingElement.Save(System.IO.TextWriter)">
      <summary vsli:raw="Serialize this streaming element to a &lt;see cref=&quot;T:System.IO.TextWriter&quot; /&gt;.">Sérialiser cet élément de diffusion en continu vers un <see cref="T:System.IO.TextWriter" />.</summary>
      <param name="textWriter" vsli:raw="A &lt;see cref=&quot;T:System.IO.TextWriter&quot; /&gt; that the &lt;see cref=&quot;T:System.Xml.Linq.XStreamingElement&quot; /&gt; will be written to.">
        <see cref="T:System.IO.TextWriter" /> dans lequel le <see cref="T:System.Xml.Linq.XStreamingElement" /> sera écrit.</param>
    </member>
    <member name="M:System.Xml.Linq.XStreamingElement.Save(System.IO.TextWriter,System.Xml.Linq.SaveOptions)">
      <summary vsli:raw="Serialize this streaming element to a &lt;see cref=&quot;T:System.IO.TextWriter&quot; /&gt;, optionally disabling formatting.">Sérialiser cet élément de diffusion en continu vers un <see cref="T:System.IO.TextWriter" />, en désactivant éventuellement la mise en forme.</summary>
      <param name="textWriter" vsli:raw="The &lt;see cref=&quot;T:System.IO.TextWriter&quot; /&gt; to output the XML to.">
        <see cref="T:System.IO.TextWriter" /> vers lequel exporter le code XML.</param>
      <param name="options" vsli:raw="A &lt;see cref=&quot;T:System.Xml.Linq.SaveOptions&quot; /&gt; that specifies formatting behavior.">
        <see cref="T:System.Xml.Linq.SaveOptions" /> qui spécifie le comportement de mise en forme.</param>
    </member>
    <member name="M:System.Xml.Linq.XStreamingElement.Save(System.String)">
      <summary vsli:raw="Serialize this streaming element to a file.">Sérialiser cet élément de diffusion en continu vers un fichier.</summary>
      <param name="fileName" vsli:raw="A &lt;see cref=&quot;T:System.String&quot; /&gt; that contains the name of the file.">
        <see cref="T:System.String" /> qui contient le nom du fichier.</param>
    </member>
    <member name="M:System.Xml.Linq.XStreamingElement.Save(System.String,System.Xml.Linq.SaveOptions)">
      <summary vsli:raw="Serialize this streaming element to a file, optionally disabling formatting.">Sérialiser cet élément de diffusion en continu vers un fichier, en désactivant éventuellement la mise en forme.</summary>
      <param name="fileName" vsli:raw="A &lt;see cref=&quot;T:System.String&quot; /&gt; that contains the name of the file.">
        <see cref="T:System.String" /> qui contient le nom du fichier.</param>
      <param name="options" vsli:raw="A &lt;see cref=&quot;T:System.Xml.Linq.SaveOptions&quot; /&gt; object that specifies formatting behavior.">Objet <see cref="T:System.Xml.Linq.SaveOptions" /> qui spécifie le comportement de mise en forme.</param>
    </member>
    <member name="M:System.Xml.Linq.XStreamingElement.Save(System.Xml.XmlWriter)">
      <summary vsli:raw="Serialize this streaming element to an &lt;see cref=&quot;T:System.Xml.XmlWriter&quot; /&gt;.">Sérialiser cet élément de diffusion en continu vers un <see cref="T:System.Xml.XmlWriter" />.</summary>
      <param name="writer" vsli:raw="A &lt;see cref=&quot;T:System.Xml.XmlWriter&quot; /&gt; that the &lt;see cref=&quot;T:System.Xml.Linq.XElement&quot; /&gt; will be written to.">
        <see cref="T:System.Xml.XmlWriter" /> dans lequel le <see cref="T:System.Xml.Linq.XElement" /> sera écrit.</param>
    </member>
    <member name="M:System.Xml.Linq.XStreamingElement.ToString">
      <summary vsli:raw="Returns the formatted (indented) XML for this streaming element.">Retourne le code XML mis en forme (en retrait) pour cet élément de diffusion en continu.</summary>
      <returns vsli:raw="A &lt;see cref=&quot;T:System.String&quot; /&gt; containing the indented XML.">
        <see cref="T:System.String" /> contenant le code XML mis en retrait.</returns>
    </member>
    <member name="M:System.Xml.Linq.XStreamingElement.ToString(System.Xml.Linq.SaveOptions)">
      <summary vsli:raw="Returns the XML for this streaming element, optionally disabling formatting.">Retourne le code XML pour cet élément de diffusion en continu, en désactivant éventuellement la mise en forme.</summary>
      <param name="options" vsli:raw="A &lt;see cref=&quot;T:System.Xml.Linq.SaveOptions&quot; /&gt; that specifies formatting behavior.">
        <see cref="T:System.Xml.Linq.SaveOptions" /> qui spécifie le comportement de mise en forme.</param>
      <returns vsli:raw="A &lt;see cref=&quot;T:System.String&quot; /&gt; containing the XML.">
        <see cref="T:System.String" /> contenant le code XML.</returns>
    </member>
    <member name="M:System.Xml.Linq.XStreamingElement.WriteTo(System.Xml.XmlWriter)">
      <summary vsli:raw="Writes this streaming element to an &lt;see cref=&quot;T:System.Xml.XmlWriter&quot; /&gt;.">Écrit cet élément de diffusion en continu vers un <see cref="T:System.Xml.XmlWriter" />.</summary>
      <param name="writer" vsli:raw="An &lt;see cref=&quot;T:System.Xml.XmlWriter&quot; /&gt; into which this method will write.">
        <see cref="T:System.Xml.XmlWriter" /> dans lequel cette méthode écrira.</param>
    </member>
    <member name="P:System.Xml.Linq.XStreamingElement.Name">
      <summary vsli:raw="Gets or sets the name of this streaming element.">Obtient ou définit le nom de cet élément de diffusion en continu.</summary>
      <returns vsli:raw="An &lt;see cref=&quot;T:System.Xml.Linq.XName&quot; /&gt; that contains the name of this streaming element.">
        <see cref="T:System.Xml.Linq.XName" /> qui contient le nom de cet élément de diffusion en continu.</returns>
    </member>
    <member name="T:System.Xml.Linq.XText">
      <summary vsli:raw="Represents a text node.">Représente un nœud de texte.</summary>
    </member>
    <member name="M:System.Xml.Linq.XText.#ctor(System.String)">
      <summary vsli:raw="Initializes a new instance of the &lt;see cref=&quot;T:System.Xml.Linq.XText&quot; /&gt; class.">Initialise une nouvelle instance de la classe <see cref="T:System.Xml.Linq.XText" />.</summary>
      <param name="value" vsli:raw="The &lt;see cref=&quot;T:System.String&quot; /&gt; that contains the value of the &lt;see cref=&quot;T:System.Xml.Linq.XText&quot; /&gt; node.">
        <see cref="T:System.String" /> qui contient la valeur du nœud <see cref="T:System.Xml.Linq.XText" />.</param>
    </member>
    <member name="M:System.Xml.Linq.XText.#ctor(System.Xml.Linq.XText)">
      <summary vsli:raw="Initializes a new instance of the &lt;see cref=&quot;T:System.Xml.Linq.XText&quot; /&gt; class from another &lt;see cref=&quot;T:System.Xml.Linq.XText&quot; /&gt; object.">Initialise une nouvelle instance de la classe <see cref="T:System.Xml.Linq.XText" /> à partir d'un autre objet <see cref="T:System.Xml.Linq.XText" />.</summary>
      <param name="other" vsli:raw="The &lt;see cref=&quot;T:System.Xml.Linq.XText&quot; /&gt; node to copy from.">Nœud <see cref="T:System.Xml.Linq.XText" /> à partir duquel effectuer la copie.</param>
    </member>
    <member name="M:System.Xml.Linq.XText.WriteTo(System.Xml.XmlWriter)">
      <summary vsli:raw="Writes this node to an &lt;see cref=&quot;T:System.Xml.XmlWriter&quot; /&gt;.">Écrit ce nœud vers un <see cref="T:System.Xml.XmlWriter" />.</summary>
      <param name="writer" vsli:raw="An &lt;see cref=&quot;T:System.Xml.XmlWriter&quot; /&gt; into which this method will write.">
        <see cref="T:System.Xml.XmlWriter" /> dans lequel cette méthode écrira.</param>
    </member>
    <member name="M:System.Xml.Linq.XText.WriteToAsync(System.Xml.XmlWriter,System.Threading.CancellationToken)">
      <summary vsli:raw="Asynchronously writes this &lt;see cref=&quot;T:System.Xml.Linq.XText&quot; /&gt; to the specified &lt;see cref=&quot;T:System.Xml.XmlWriter&quot; /&gt;.">Écrit de façon asynchrone ce <see cref="T:System.Xml.Linq.XText" /> sur le <see cref="T:System.Xml.XmlWriter" /> spécifié.</summary>
      <param name="writer" vsli:raw="The writer to write this &lt;see cref=&quot;T:System.Xml.Linq.XText&quot; /&gt; to.">Enregistreur sur lequel écrire ce <see cref="T:System.Xml.Linq.XText" />.</param>
      <param name="cancellationToken" vsli:raw="A token that can be used to request cancellation of the asynchronous operation.">Jeton qui peut être utilisé pour demander l'annulation de l'opération asynchrone.</param>
      <returns vsli:raw="A task representing the asynchronous write operation.">Tâche représentant l’opération d’écriture asynchrone.</returns>
    </member>
    <member name="P:System.Xml.Linq.XText.NodeType">
      <summary vsli:raw="Gets the node type for this node.">Obtient le type de ce nœud.</summary>
      <returns vsli:raw="The node type. For &lt;see cref=&quot;T:System.Xml.Linq.XText&quot; /&gt; objects, this value is &lt;see cref=&quot;F:System.Xml.XmlNodeType.Text&quot; /&gt;.">Type de nœud. Pour les objets <see cref="T:System.Xml.Linq.XText" />, cette valeur est <see cref="F:System.Xml.XmlNodeType.Text" />.</returns>
    </member>
    <member name="P:System.Xml.Linq.XText.Value">
      <summary vsli:raw="Gets or sets the value of this node.">Obtient ou définit la valeur de ce nœud.</summary>
      <returns vsli:raw="A &lt;see cref=&quot;T:System.String&quot; /&gt; that contains the value of this node.">
        <see cref="T:System.String" /> qui contient la valeur de ce nœud.</returns>
    </member>
    <member name="T:System.Xml.Schema.Extensions">
      <summary vsli:raw="This class contains the LINQ to XML extension methods for XSD validation.">Cette classe contient les méthodes d’extension LINQ to XML pour la validation XSD.</summary>
    </member>
    <member name="M:System.Xml.Schema.Extensions.GetSchemaInfo(System.Xml.Linq.XAttribute)">
      <summary vsli:raw="Gets the post-schema-validation infoset (PSVI) of a validated attribute.">Obtient le jeu d'informations postérieures à la validation du schéma (jeu PSVI) d'un attribut validé.</summary>
      <param name="source" vsli:raw="An &lt;see cref=&quot;T:System.Xml.Linq.XAttribute&quot; /&gt; that has been previously validated.">
        <see cref="T:System.Xml.Linq.XAttribute" /> validé précédemment.</param>
      <returns vsli:raw="A &lt;see cref=&quot;T:System.Xml.Schema.IXmlSchemaInfo&quot; /&gt; that contains the post-schema-validation infoset for an &lt;see cref=&quot;T:System.Xml.Linq.XAttribute&quot; /&gt;.">
        <see cref="T:System.Xml.Schema.IXmlSchemaInfo" /> qui contient le jeu d'informations postérieures à la validation du schéma pour un <see cref="T:System.Xml.Linq.XAttribute" />.</returns>
    </member>
    <member name="M:System.Xml.Schema.Extensions.GetSchemaInfo(System.Xml.Linq.XElement)">
      <summary vsli:raw="Gets the post-schema-validation infoset (PSVI) of a validated element.">Obtient le jeu d'informations postérieures à la validation du schéma (jeu PSVI) d'un élément validé.</summary>
      <param name="source" vsli:raw="An &lt;see cref=&quot;T:System.Xml.Linq.XElement&quot; /&gt; that has been previously validated.">
        <see cref="T:System.Xml.Linq.XElement" /> validé précédemment.</param>
      <returns vsli:raw="A &lt;see cref=&quot;T:System.Xml.Schema.IXmlSchemaInfo&quot; /&gt; that contains the post-schema-validation infoset (PSVI) for an &lt;see cref=&quot;T:System.Xml.Linq.XElement&quot; /&gt;.">
        <see cref="T:System.Xml.Schema.IXmlSchemaInfo" /> qui contient le jeu d'informations postérieures à la validation du schéma (jeu PSVI) pour un <see cref="T:System.Xml.Linq.XElement" />.</returns>
    </member>
    <member name="M:System.Xml.Schema.Extensions.Validate(System.Xml.Linq.XAttribute,System.Xml.Schema.XmlSchemaObject,System.Xml.Schema.XmlSchemaSet,System.Xml.Schema.ValidationEventHandler)">
      <summary vsli:raw="This method validates that an &lt;see cref=&quot;T:System.Xml.Linq.XAttribute&quot; /&gt; conforms to a specified &lt;see cref=&quot;T:System.Xml.Schema.XmlSchemaObject&quot; /&gt; and an &lt;see cref=&quot;T:System.Xml.Schema.XmlSchemaSet&quot; /&gt;.">Cette méthode valide le fait qu'un <see cref="T:System.Xml.Linq.XAttribute" /> est conforme à un <see cref="T:System.Xml.Schema.XmlSchemaObject" /> spécifié et un <see cref="T:System.Xml.Schema.XmlSchemaSet" />.</summary>
      <param name="source" vsli:raw="The &lt;see cref=&quot;T:System.Xml.Linq.XAttribute&quot; /&gt; to validate.">
        <see cref="T:System.Xml.Linq.XAttribute" /> à valider.</param>
      <param name="partialValidationType" vsli:raw="An &lt;see cref=&quot;T:System.Xml.Schema.XmlSchemaObject&quot; /&gt; that specifies the sub-tree to validate.">
        <see cref="T:System.Xml.Schema.XmlSchemaObject" /> qui spécifie la sous-arborescence à valider.</param>
      <param name="schemas" vsli:raw="An &lt;see cref=&quot;T:System.Xml.Schema.XmlSchemaSet&quot; /&gt; to validate against.">
        <see cref="T:System.Xml.Schema.XmlSchemaSet" /> par rapport auquel effectuer la validation.</param>
      <param name="validationEventHandler" vsli:raw="A &lt;see cref=&quot;T:System.Xml.Schema.ValidationEventHandler&quot; /&gt; for an event that occurs when the reader encounters validation errors. If &lt;see langword=&quot;null&quot; /&gt;, throws an exception upon validation errors.">
        <see cref="T:System.Xml.Schema.ValidationEventHandler" /> pour un événement qui se produit lorsque le lecteur rencontre des erreurs de validation. Si la valeur est <see langword="null" />, une exception est levée en cas d'erreurs de validation.</param>
      <exception cref="T:System.Xml.Schema.XmlSchemaValidationException" vsli:raw="Thrown for XML Schema Definition Language (XSD) validation errors.">Exception levée pour des erreurs de validation de langage XSD (XML Schema Definition).</exception>
    </member>
    <member name="M:System.Xml.Schema.Extensions.Validate(System.Xml.Linq.XAttribute,System.Xml.Schema.XmlSchemaObject,System.Xml.Schema.XmlSchemaSet,System.Xml.Schema.ValidationEventHandler,System.Boolean)">
      <summary vsli:raw="Validates that an &lt;see cref=&quot;T:System.Xml.Linq.XAttribute&quot; /&gt; conforms to a specified &lt;see cref=&quot;T:System.Xml.Schema.XmlSchemaObject&quot; /&gt; and an &lt;see cref=&quot;T:System.Xml.Schema.XmlSchemaSet&quot; /&gt;, optionally populating the XML tree with the post-schema-validation infoset (PSVI).">Valide le fait qu'un <see cref="T:System.Xml.Linq.XAttribute" /> est conforme à un <see cref="T:System.Xml.Schema.XmlSchemaObject" /> spécifié et un <see cref="T:System.Xml.Schema.XmlSchemaSet" />, en remplissant en option l'arborescence XML à l'aide du jeu d'informations postérieures à la validation du schéma (jeu PSVI).</summary>
      <param name="source" vsli:raw="The &lt;see cref=&quot;T:System.Xml.Linq.XAttribute&quot; /&gt; to validate.">
        <see cref="T:System.Xml.Linq.XAttribute" /> à valider.</param>
      <param name="partialValidationType" vsli:raw="An &lt;see cref=&quot;T:System.Xml.Schema.XmlSchemaObject&quot; /&gt; that specifies the sub-tree to validate.">
        <see cref="T:System.Xml.Schema.XmlSchemaObject" /> qui spécifie la sous-arborescence à valider.</param>
      <param name="schemas" vsli:raw="An &lt;see cref=&quot;T:System.Xml.Schema.XmlSchemaSet&quot; /&gt; to validate against.">
        <see cref="T:System.Xml.Schema.XmlSchemaSet" /> par rapport auquel effectuer la validation.</param>
      <param name="validationEventHandler" vsli:raw="A &lt;see cref=&quot;T:System.Xml.Schema.ValidationEventHandler&quot; /&gt; for an event that occurs when the reader encounters validation errors. If &lt;see langword=&quot;null&quot; /&gt;, throws an exception upon validation errors.">
        <see cref="T:System.Xml.Schema.ValidationEventHandler" /> pour un événement qui se produit lorsque le lecteur rencontre des erreurs de validation. Si la valeur est <see langword="null" />, une exception est levée en cas d'erreurs de validation.</param>
      <param name="addSchemaInfo" vsli:raw="A &lt;see cref=&quot;T:System.Boolean&quot; /&gt; indicating whether to populate the post-schema-validation infoset (PSVI).">
        <see cref="T:System.Boolean" /> qui indique s'il convient de remplir le jeu d'informations postérieures à la validation du schéma (jeu PSVI).</param>
      <exception cref="T:System.Xml.Schema.XmlSchemaValidationException" vsli:raw="Thrown for XML Schema Definition Language (XSD) validation errors.">Exception levée pour des erreurs de validation de langage XSD (XML Schema Definition).</exception>
    </member>
    <member name="M:System.Xml.Schema.Extensions.Validate(System.Xml.Linq.XDocument,System.Xml.Schema.XmlSchemaSet,System.Xml.Schema.ValidationEventHandler)">
      <summary vsli:raw="This method validates that an &lt;see cref=&quot;T:System.Xml.Linq.XDocument&quot; /&gt; conforms to an XSD in an &lt;see cref=&quot;T:System.Xml.Schema.XmlSchemaSet&quot; /&gt;.">Cette méthode valide le fait qu'un <see cref="T:System.Xml.Linq.XDocument" /> est conforme à un XSD dans un <see cref="T:System.Xml.Schema.XmlSchemaSet" />.</summary>
      <param name="source" vsli:raw="The &lt;see cref=&quot;T:System.Xml.Linq.XDocument&quot; /&gt; to validate.">
        <see cref="T:System.Xml.Linq.XDocument" /> à valider.</param>
      <param name="schemas" vsli:raw="An &lt;see cref=&quot;T:System.Xml.Schema.XmlSchemaSet&quot; /&gt; to validate against.">
        <see cref="T:System.Xml.Schema.XmlSchemaSet" /> par rapport auquel effectuer la validation.</param>
      <param name="validationEventHandler" vsli:raw="A &lt;see cref=&quot;T:System.Xml.Schema.ValidationEventHandler&quot; /&gt; for an event that occurs when the reader encounters validation errors. If &lt;see langword=&quot;null&quot; /&gt;, throws an exception upon validation errors.">
        <see cref="T:System.Xml.Schema.ValidationEventHandler" /> pour un événement qui se produit lorsque le lecteur rencontre des erreurs de validation. Si la valeur est <see langword="null" />, une exception est levée en cas d'erreurs de validation.</param>
      <exception cref="T:System.Xml.Schema.XmlSchemaValidationException" vsli:raw="Thrown for XML Schema Definition Language (XSD) validation errors.">Exception levée pour des erreurs de validation de langage XSD (XML Schema Definition).</exception>
    </member>
    <member name="M:System.Xml.Schema.Extensions.Validate(System.Xml.Linq.XDocument,System.Xml.Schema.XmlSchemaSet,System.Xml.Schema.ValidationEventHandler,System.Boolean)">
      <summary vsli:raw="Validates that an &lt;see cref=&quot;T:System.Xml.Linq.XDocument&quot; /&gt; conforms to an XSD in an &lt;see cref=&quot;T:System.Xml.Schema.XmlSchemaSet&quot; /&gt;, optionally populating the XML tree with the post-schema-validation infoset (PSVI).">Valide le fait qu'un <see cref="T:System.Xml.Linq.XDocument" /> est conforme à un XSD dans un <see cref="T:System.Xml.Schema.XmlSchemaSet" />, en remplissant en option l'arborescence XML à l'aide du jeu d'informations postérieures à la validation du schéma (jeu PSVI).</summary>
      <param name="source" vsli:raw="The &lt;see cref=&quot;T:System.Xml.Linq.XDocument&quot; /&gt; to validate.">
        <see cref="T:System.Xml.Linq.XDocument" /> à valider.</param>
      <param name="schemas" vsli:raw="An &lt;see cref=&quot;T:System.Xml.Schema.XmlSchemaSet&quot; /&gt; to validate against.">
        <see cref="T:System.Xml.Schema.XmlSchemaSet" /> par rapport auquel effectuer la validation.</param>
      <param name="validationEventHandler" vsli:raw="A &lt;see cref=&quot;T:System.Xml.Schema.ValidationEventHandler&quot; /&gt; for an event that occurs when the reader encounters validation errors. If &lt;see langword=&quot;null&quot; /&gt;, throws an exception upon validation errors.">
        <see cref="T:System.Xml.Schema.ValidationEventHandler" /> pour un événement qui se produit lorsque le lecteur rencontre des erreurs de validation. Si la valeur est <see langword="null" />, une exception est levée en cas d'erreurs de validation.</param>
      <param name="addSchemaInfo" vsli:raw="A &lt;see cref=&quot;T:System.Boolean&quot; /&gt; indicating whether to populate the post-schema-validation infoset (PSVI).">
        <see cref="T:System.Boolean" /> qui indique s'il convient de remplir le jeu d'informations postérieures à la validation du schéma (jeu PSVI).</param>
      <exception cref="T:System.Xml.Schema.XmlSchemaValidationException" vsli:raw="Thrown for XML Schema Definition Language (XSD) validation errors.">Exception levée pour des erreurs de validation de langage XSD (XML Schema Definition).</exception>
    </member>
    <member name="M:System.Xml.Schema.Extensions.Validate(System.Xml.Linq.XElement,System.Xml.Schema.XmlSchemaObject,System.Xml.Schema.XmlSchemaSet,System.Xml.Schema.ValidationEventHandler)">
      <summary vsli:raw="This method validates that an &lt;see cref=&quot;T:System.Xml.Linq.XElement&quot; /&gt; sub-tree conforms to a specified &lt;see cref=&quot;T:System.Xml.Schema.XmlSchemaObject&quot; /&gt; and an &lt;see cref=&quot;T:System.Xml.Schema.XmlSchemaSet&quot; /&gt;.">Cette méthode valide le fait qu'une sous-arborescence <see cref="T:System.Xml.Linq.XElement" /> est conforme à un <see cref="T:System.Xml.Schema.XmlSchemaObject" /> spécifié et un <see cref="T:System.Xml.Schema.XmlSchemaSet" />.</summary>
      <param name="source" vsli:raw="The &lt;see cref=&quot;T:System.Xml.Linq.XElement&quot; /&gt; to validate.">
        <see cref="T:System.Xml.Linq.XElement" /> à valider.</param>
      <param name="partialValidationType" vsli:raw="An &lt;see cref=&quot;T:System.Xml.Schema.XmlSchemaObject&quot; /&gt; that specifies the sub-tree to validate.">
        <see cref="T:System.Xml.Schema.XmlSchemaObject" /> qui spécifie la sous-arborescence à valider.</param>
      <param name="schemas" vsli:raw="An &lt;see cref=&quot;T:System.Xml.Schema.XmlSchemaSet&quot; /&gt; to validate against.">
        <see cref="T:System.Xml.Schema.XmlSchemaSet" /> par rapport auquel effectuer la validation.</param>
      <param name="validationEventHandler" vsli:raw="A &lt;see cref=&quot;T:System.Xml.Schema.ValidationEventHandler&quot; /&gt; for an event that occurs when the reader encounters validation errors. If &lt;see langword=&quot;null&quot; /&gt;, throws an exception upon validation errors.">
        <see cref="T:System.Xml.Schema.ValidationEventHandler" /> pour un événement qui se produit lorsque le lecteur rencontre des erreurs de validation. Si la valeur est <see langword="null" />, une exception est levée en cas d'erreurs de validation.</param>
      <exception cref="T:System.Xml.Schema.XmlSchemaValidationException" vsli:raw="Thrown for XML Schema Definition Language (XSD) validation errors.">Exception levée pour des erreurs de validation de langage XSD (XML Schema Definition).</exception>
    </member>
    <member name="M:System.Xml.Schema.Extensions.Validate(System.Xml.Linq.XElement,System.Xml.Schema.XmlSchemaObject,System.Xml.Schema.XmlSchemaSet,System.Xml.Schema.ValidationEventHandler,System.Boolean)">
      <summary vsli:raw="Validates that an &lt;see cref=&quot;T:System.Xml.Linq.XElement&quot; /&gt; sub-tree conforms to a specified &lt;see cref=&quot;T:System.Xml.Schema.XmlSchemaObject&quot; /&gt; and an &lt;see cref=&quot;T:System.Xml.Schema.XmlSchemaSet&quot; /&gt;, optionally populating the XML tree with the post-schema-validation infoset (PSVI).">Valide le fait qu'une sous-arborescence <see cref="T:System.Xml.Linq.XElement" /> est conforme à un <see cref="T:System.Xml.Schema.XmlSchemaObject" /> spécifié et un <see cref="T:System.Xml.Schema.XmlSchemaSet" />, en remplissant en option l'arborescence XML à l'aide du jeu d'informations postérieures à la validation du schéma (jeu PSVI).</summary>
      <param name="source" vsli:raw="The &lt;see cref=&quot;T:System.Xml.Linq.XElement&quot; /&gt; to validate.">
        <see cref="T:System.Xml.Linq.XElement" /> à valider.</param>
      <param name="partialValidationType" vsli:raw="An &lt;see cref=&quot;T:System.Xml.Schema.XmlSchemaObject&quot; /&gt; that specifies the sub-tree to validate.">
        <see cref="T:System.Xml.Schema.XmlSchemaObject" /> qui spécifie la sous-arborescence à valider.</param>
      <param name="schemas" vsli:raw="An &lt;see cref=&quot;T:System.Xml.Schema.XmlSchemaSet&quot; /&gt; to validate against.">
        <see cref="T:System.Xml.Schema.XmlSchemaSet" /> par rapport auquel effectuer la validation.</param>
      <param name="validationEventHandler" vsli:raw="A &lt;see cref=&quot;T:System.Xml.Schema.ValidationEventHandler&quot; /&gt; for an event that occurs when the reader encounters validation errors. If &lt;see langword=&quot;null&quot; /&gt;, throws an exception upon validation errors.">
        <see cref="T:System.Xml.Schema.ValidationEventHandler" /> pour un événement qui se produit lorsque le lecteur rencontre des erreurs de validation. Si la valeur est <see langword="null" />, une exception est levée en cas d'erreurs de validation.</param>
      <param name="addSchemaInfo" vsli:raw="A &lt;see cref=&quot;T:System.Boolean&quot; /&gt; indicating whether to populate the post-schema-validation infoset (PSVI).">
        <see cref="T:System.Boolean" /> qui indique s'il convient de remplir le jeu d'informations postérieures à la validation du schéma (jeu PSVI).</param>
      <exception cref="T:System.Xml.Schema.XmlSchemaValidationException" vsli:raw="Thrown for XML Schema Definition Language (XSD) validation errors.">Exception levée pour des erreurs de validation de langage XSD (XML Schema Definition).</exception>
    </member>
  </members>
</doc>