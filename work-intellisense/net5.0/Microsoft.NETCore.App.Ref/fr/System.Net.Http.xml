<?xml version="1.0" encoding="utf-8"?>
<doc xmlns:vsli="https://github.com/sk-0520/vs-localized-intellisense/tree/master/schema/2024">
  <assembly>
    <name>System.Net.Http</name>
  </assembly>
  <members>
    <member name="T:System.Net.Http.ByteArrayContent">
      <summary vsli:raw="Provides HTTP content based on a byte array.">Fournit du contenu HTTP basé sur un tableau d'octets.</summary>
    </member>
    <member name="M:System.Net.Http.ByteArrayContent.#ctor(System.Byte[])">
      <summary vsli:raw="Initializes a new instance of the &lt;see cref=&quot;T:System.Net.Http.ByteArrayContent&quot; /&gt; class.">Initialise une nouvelle instance de la classe <see cref="T:System.Net.Http.ByteArrayContent" />.</summary>
      <param name="content" vsli:raw="The content used to initialize the &lt;see cref=&quot;T:System.Net.Http.ByteArrayContent&quot; /&gt;.">Contenu utilisé pour initialiser <see cref="T:System.Net.Http.ByteArrayContent" />.</param>
      <exception cref="T:System.ArgumentNullException" vsli:raw="The &lt;paramref name=&quot;content&quot; /&gt; parameter is &lt;see langword=&quot;null&quot; /&gt;.">Le paramètre <paramref name="content" /> a la valeur <see langword="null" />.</exception>
    </member>
    <member name="M:System.Net.Http.ByteArrayContent.#ctor(System.Byte[],System.Int32,System.Int32)">
      <summary vsli:raw="Initializes a new instance of the &lt;see cref=&quot;T:System.Net.Http.ByteArrayContent&quot; /&gt; class.">Initialise une nouvelle instance de la classe <see cref="T:System.Net.Http.ByteArrayContent" />.</summary>
      <param name="content" vsli:raw="The content used to initialize the &lt;see cref=&quot;T:System.Net.Http.ByteArrayContent&quot; /&gt;.">Contenu utilisé pour initialiser <see cref="T:System.Net.Http.ByteArrayContent" />.</param>
      <param name="offset" vsli:raw="The offset, in bytes, in the &lt;paramref name=&quot;content&quot; /&gt; parameter used to initialize the &lt;see cref=&quot;T:System.Net.Http.ByteArrayContent&quot; /&gt;.">Décalage, en octets, dans le paramètre <paramref name="content" /> utilisé pour initialiser <see cref="T:System.Net.Http.ByteArrayContent" />.</param>
      <param name="count" vsli:raw="The number of bytes in the &lt;paramref name=&quot;content&quot; /&gt; starting from the &lt;paramref name=&quot;offset&quot; /&gt; parameter used to initialize the &lt;see cref=&quot;T:System.Net.Http.ByteArrayContent&quot; /&gt;.">Nombre d'octets dans le <paramref name="content" /> en commençant par le paramètre <paramref name="offset" /> utilisé pour initialiser <see cref="T:System.Net.Http.ByteArrayContent" />.</param>
      <exception cref="T:System.ArgumentNullException" vsli:raw="The &lt;paramref name=&quot;content&quot; /&gt; parameter is &lt;see langword=&quot;null&quot; /&gt;.">Le paramètre <paramref name="content" /> a la valeur <see langword="null" />.</exception>
      <exception cref="T:System.ArgumentOutOfRangeException" vsli:raw="The &lt;paramref name=&quot;offset&quot; /&gt; parameter is less than zero.  &#xA;  &#xA; -or-  &#xA;  &#xA; The &lt;paramref name=&quot;offset&quot; /&gt; parameter is greater than the length of content specified by the &lt;paramref name=&quot;content&quot; /&gt; parameter.  &#xA;  &#xA; -or-  &#xA;  &#xA; The &lt;paramref name=&quot;count&quot; /&gt; parameter is less than zero.  &#xA;  &#xA; -or-  &#xA;  &#xA; The &lt;paramref name=&quot;count&quot; /&gt; parameter is greater than the length of content specified by the &lt;paramref name=&quot;content&quot; /&gt; parameter - minus the &lt;paramref name=&quot;offset&quot; /&gt; parameter.">Le paramètre <paramref name="offset" /> est inférieur à zéro.  
  
- ou - 
Le paramètre <paramref name="offset" /> est supérieur à la longueur du contenu spécifié par le paramètre <paramref name="content" />.  
  
- ou - 
Le paramètre <paramref name="count" /> est inférieur à zéro.  
  
- ou - 
Le paramètre <paramref name="count" /> est supérieur à la longueur du contenu spécifié par le paramètre <paramref name="content" /> moins le paramètre <paramref name="offset" />.</exception>
    </member>
    <member name="M:System.Net.Http.ByteArrayContent.CreateContentReadStream(System.Threading.CancellationToken)">
      <summary vsli:raw="Creates an HTTP content stream for reading. It uses the memory from the &lt;see cref=&quot;T:System.Net.Http.ByteArrayContent&quot; /&gt; as a backing store.">Crée un flux de contenu HTTP pour lecture. Utilise la mémoire de <see cref="T:System.Net.Http.ByteArrayContent" /> en tant que magasin de stockage.</summary>
      <param name="cancellationToken" vsli:raw="The cancellation token to cancel the operation.">Jeton d’annulation pour annuler l’opération.</param>
      <returns vsli:raw="The HTTP content stream.">Flux de contenu HTTP.</returns>
    </member>
    <member name="M:System.Net.Http.ByteArrayContent.CreateContentReadStreamAsync">
      <summary vsli:raw="Creates an HTTP content stream as an asynchronous operation for reading whose backing store is memory from the &lt;see cref=&quot;T:System.Net.Http.ByteArrayContent&quot; /&gt;.">Crée un flux de contenu HTTP au cours d’une opération asynchrone en lecture dont le magasin de stockage est la mémoire provenant du <see cref="T:System.Net.Http.ByteArrayContent" />.</summary>
      <returns vsli:raw="The task object representing the asynchronous operation.">Objet de tâche représentant l'opération asynchrone.</returns>
    </member>
    <member name="M:System.Net.Http.ByteArrayContent.SerializeToStream(System.IO.Stream,System.Net.TransportContext,System.Threading.CancellationToken)">
      <summary vsli:raw="Serializes and writes the byte array provided in the constructor to an HTTP content stream.">Sérialise et écrit le tableau d’octets fourni dans le constructeur sur un flux de contenu HTTP.</summary>
      <param name="stream" vsli:raw="The target stream.">Le flux de données cible.</param>
      <param name="context" vsli:raw="Optional information about the transport, like the channel binding token. This parameter can be &lt;see langword=&quot;null&quot; /&gt;.">Informations facultatives relatives au transport, comme le jeton de liaison de canal. Ce paramètre peut être <see langword="null" />.</param>
      <param name="cancellationToken" vsli:raw="The cancellation token to cancel the operation.">Jeton d’annulation pour annuler l’opération.</param>
    </member>
    <member name="M:System.Net.Http.ByteArrayContent.SerializeToStreamAsync(System.IO.Stream,System.Net.TransportContext)">
      <summary vsli:raw="Serialize and write the byte array provided in the constructor to an HTTP content stream as an asynchronous operation.">Sérialise et écrit le tableau d’octets fourni dans le constructeur sur un flux de contenu HTTP au cours d’une opération asynchrone.</summary>
      <param name="stream" vsli:raw="The target stream.">Le flux de données cible.</param>
      <param name="context" vsli:raw="Information about the transport, like channel binding token. This parameter may be &lt;see langword=&quot;null&quot; /&gt;.">Informations relatives au transport, comme un jeton de liaison de canal. Ce paramètre peut avoir la valeur <see langword="null" />.</param>
      <returns vsli:raw="The task object representing the asynchronous operation.">Objet de tâche représentant l'opération asynchrone.</returns>
    </member>
    <member name="M:System.Net.Http.ByteArrayContent.SerializeToStreamAsync(System.IO.Stream,System.Net.TransportContext,System.Threading.CancellationToken)">
      <summary vsli:raw="Serialize and write the byte array provided in the constructor to an HTTP content stream as an asynchronous operation.">Sérialise et écrit le tableau d’octets fourni dans le constructeur sur un flux de contenu HTTP au cours d’une opération asynchrone.</summary>
      <param name="stream" vsli:raw="The target stream.">Le flux de données cible.</param>
      <param name="context" vsli:raw="Information about the transport, like channel binding token. This parameter may be &lt;see langword=&quot;null&quot; /&gt;.">Informations relatives au transport, comme un jeton de liaison de canal. Ce paramètre peut avoir la valeur <see langword="null" />.</param>
      <param name="cancellationToken" vsli:raw="The cancellation token to cancel the operation.">Jeton d’annulation pour annuler l’opération.</param>
      <returns vsli:raw="The task object representing the asynchronous operation.">Objet de tâche représentant l'opération asynchrone.</returns>
    </member>
    <member name="M:System.Net.Http.ByteArrayContent.TryComputeLength(System.Int64@)">
      <summary vsli:raw="Determines whether a byte array has a valid length in bytes.">Détermine si un tableau d’octets a une longueur valide en octets.</summary>
      <param name="length" vsli:raw="The length in bytes of the byte array.">La longueur en octets du tableau d’octets.</param>
      <returns vsli:raw="&lt;see langword=&quot;true&quot; /&gt; if &lt;paramref name=&quot;length&quot; /&gt; is a valid length; otherwise, &lt;see langword=&quot;false&quot; /&gt;.">
        <see langword="true" /> si <paramref name="length" /> est une longueur valide ; sinon, <see langword="false" />.</returns>
    </member>
    <member name="T:System.Net.Http.ClientCertificateOption">
      <summary vsli:raw="Specifies how client certificates are provided.">Spécifie la façon dont les certificats clients sont fournis.</summary>
    </member>
    <member name="F:System.Net.Http.ClientCertificateOption.Automatic">
      <summary vsli:raw="The &lt;see cref=&quot;T:System.Net.Http.HttpClientHandler&quot; /&gt; will attempt to provide  all available client certificates  automatically.">
        <see cref="T:System.Net.Http.HttpClientHandler" /> tentera de fournir automatiquement tous les certificats clients disponibles.</summary>
    </member>
    <member name="F:System.Net.Http.ClientCertificateOption.Manual">
      <summary vsli:raw="The application manually provides the client certificates to the &lt;see cref=&quot;T:System.Net.Http.WebRequestHandler&quot; /&gt;. This value is the default.">L'application fournit manuellement les certificats clients au <see cref="T:System.Net.Http.WebRequestHandler" />. Cette valeur est celle par défaut.</summary>
    </member>
    <member name="T:System.Net.Http.DelegatingHandler">
      <summary vsli:raw="A type for HTTP handlers that delegate the processing of HTTP response messages to another handler, called the inner handler.">Type pour les gestionnaires HTTP qui délèguent le traitement des messages de réponse HTTP à un autre gestionnaire, appelé le gestionnaire interne.</summary>
    </member>
    <member name="M:System.Net.Http.DelegatingHandler.#ctor">
      <summary vsli:raw="Creates a new instance of the &lt;see cref=&quot;T:System.Net.Http.DelegatingHandler&quot; /&gt; class.">Crée une instance de la classe <see cref="T:System.Net.Http.DelegatingHandler" />.</summary>
    </member>
    <member name="M:System.Net.Http.DelegatingHandler.#ctor(System.Net.Http.HttpMessageHandler)">
      <summary vsli:raw="Creates a new instance of the &lt;see cref=&quot;T:System.Net.Http.DelegatingHandler&quot; /&gt; class with a specific inner handler.">Crée une instance de la classe <see cref="T:System.Net.Http.DelegatingHandler" /> avec un gestionnaire interne spécifique.</summary>
      <param name="innerHandler" vsli:raw="The inner handler which is responsible for processing the HTTP response messages.">Gestionnaire interne chargé de traiter les messages de réponse HTTP.</param>
    </member>
    <member name="M:System.Net.Http.DelegatingHandler.Dispose(System.Boolean)">
      <summary vsli:raw="Releases the unmanaged resources used by the &lt;see cref=&quot;T:System.Net.Http.DelegatingHandler&quot; /&gt;, and optionally disposes of the managed resources.">Libère les ressources non managées utilisées par <see cref="T:System.Net.Http.DelegatingHandler" /> et supprime éventuellement les ressources managées.</summary>
      <param name="disposing" vsli:raw="&lt;see langword=&quot;true&quot; /&gt; to release both managed and unmanaged resources; &lt;see langword=&quot;false&quot; /&gt; to releases only unmanaged resources.">
        <see langword="true" /> pour libérer les ressources managées et non managées ; <see langword="false" /> pour libérer uniquement les ressources non managées.</param>
    </member>
    <member name="M:System.Net.Http.DelegatingHandler.Send(System.Net.Http.HttpRequestMessage,System.Threading.CancellationToken)">
      <summary vsli:raw="Sends an HTTP request to the inner handler to send to the server.">Envoie une requête HTTP au gestionnaire interne à envoyer au serveur.</summary>
      <param name="request" vsli:raw="The HTTP request message to send to the server.">Le message de la requête HTTP à envoyer au serveur.</param>
      <param name="cancellationToken" vsli:raw="A cancellation token to cancel operation.">Jeton d’annulation pour annuler une opération.</param>
      <returns vsli:raw="An HTTP response message.">Un message de réponse HTTP.</returns>
    </member>
    <member name="M:System.Net.Http.DelegatingHandler.SendAsync(System.Net.Http.HttpRequestMessage,System.Threading.CancellationToken)">
      <summary vsli:raw="Sends an HTTP request to the inner handler to send to the server as an asynchronous operation.">Envoie une requête HTTP au gestionnaire interne à envoyer au serveur au cours d’une opération asynchrone.</summary>
      <param name="request" vsli:raw="The HTTP request message to send to the server.">Le message de la requête HTTP à envoyer au serveur.</param>
      <param name="cancellationToken" vsli:raw="A cancellation token to cancel operation.">Jeton d’annulation pour annuler une opération.</param>
      <exception cref="T:System.ArgumentNullException" vsli:raw="The &lt;paramref name=&quot;request&quot; /&gt; was &lt;see langword=&quot;null&quot; /&gt;.">
        <paramref name="request" /> avait la valeur <see langword="null" />.</exception>
      <returns vsli:raw="The task object representing the asynchronous operation.">Objet de tâche représentant l'opération asynchrone.</returns>
    </member>
    <member name="P:System.Net.Http.DelegatingHandler.InnerHandler">
      <summary vsli:raw="Gets or sets the inner handler which processes the HTTP response messages.">Obtient ou définit le gestionnaire interne qui traite les messages de réponse HTTP.</summary>
      <returns vsli:raw="The inner handler for HTTP response messages.">Gestionnaire interne pour les messages de réponse HTTP.</returns>
    </member>
    <member name="T:System.Net.Http.FormUrlEncodedContent">
      <summary vsli:raw="A container for name/value tuples encoded using application/x-www-form-urlencoded MIME type.">Conteneur pour les tuples nom/valeur encodés en utilisant le type MIME application/x-www-form-urlencoded.</summary>
    </member>
    <member name="M:System.Net.Http.FormUrlEncodedContent.#ctor(System.Collections.Generic.IEnumerable{System.Collections.Generic.KeyValuePair{System.String,System.String}})">
      <summary vsli:raw="Initializes a new instance of the &lt;see cref=&quot;T:System.Net.Http.FormUrlEncodedContent&quot; /&gt; class with a specific collection of name/value pairs.">Initialise une nouvelle instance de la classe <see cref="T:System.Net.Http.FormUrlEncodedContent" /> avec une collection de paires nom/valeur spécifique.</summary>
      <param name="nameValueCollection" vsli:raw="A collection of name/value pairs.">Collection de paires nom/valeur.</param>
    </member>
    <member name="M:System.Net.Http.FormUrlEncodedContent.SerializeToStreamAsync(System.IO.Stream,System.Net.TransportContext,System.Threading.CancellationToken)">
      <summary vsli:raw="Serialize and write all name/value tuples provided in the constructor to an HTTP content stream as an asynchronous operation.">Sérialise et écrit tous les tuples de nom/de valeur fournis dans le constructeur sur un flux de contenu HTTP au cours d’une opération asynchrone.</summary>
      <param name="stream" vsli:raw="The target stream.">Le flux de données cible.</param>
      <param name="context" vsli:raw="Information about the transport, like channel binding token. This parameter may be &lt;see langword=&quot;null&quot; /&gt;.">Informations relatives au transport, comme un jeton de liaison de canal. Ce paramètre peut avoir la valeur <see langword="null" />.</param>
      <param name="cancellationToken" vsli:raw="The cancellation token to cancel the operation.">Jeton d’annulation pour annuler l’opération.</param>
      <returns vsli:raw="The task object representing the asynchronous operation.">Objet de tâche représentant l'opération asynchrone.</returns>
    </member>
    <member name="T:System.Net.Http.HeaderEncodingSelector`1">
      <summary vsli:raw="Represents a method that specifies the encoding to use when interpreting header values.">Représente une méthode qui spécifie l’encodage à utiliser lors de l’interprétation des valeurs d’en-tête.</summary>
      <param name="headerName" vsli:raw="The name of the header to specify for the encoding.">Nom de l’en-tête à spécifier pour l’encodage.</param>
      <param name="context" vsli:raw="The type we are encoding/decoding the headers for.">Type pour lequel les en-têtes sont encodés/décodés.</param>
      <typeparam name="TContext" vsli:raw="The type of the headers that are being encoded/decoded." />
      <returns vsli:raw="The encoding to use, or &lt;see langword=&quot;null&quot; /&gt; to use the default behavior.">Encodage à utiliser, ou <see langword="null" /> pour utiliser le comportement par défaut.</returns>
    </member>
    <member name="T:System.Net.Http.Headers.AuthenticationHeaderValue">
      <summary vsli:raw="Represents authentication information in Authorization, ProxyAuthorization, WWW-Authenticate, and Proxy-Authenticate header values.">Représente les informations d’authentification dans les valeurs d’en-tête Authorization, ProxyAuthorization, WWW-Authenticate et Proxy-Authenticate.</summary>
    </member>
    <member name="M:System.Net.Http.Headers.AuthenticationHeaderValue.#ctor(System.String)">
      <summary vsli:raw="Initializes a new instance of the &lt;see cref=&quot;T:System.Net.Http.Headers.AuthenticationHeaderValue&quot; /&gt; class.">Initialise une nouvelle instance de la classe <see cref="T:System.Net.Http.Headers.AuthenticationHeaderValue" />.</summary>
      <param name="scheme" vsli:raw="The scheme to use for authorization.">Schéma à utiliser pour l’autorisation.</param>
    </member>
    <member name="M:System.Net.Http.Headers.AuthenticationHeaderValue.#ctor(System.String,System.String)">
      <summary vsli:raw="Initializes a new instance of the &lt;see cref=&quot;T:System.Net.Http.Headers.AuthenticationHeaderValue&quot; /&gt; class.">Initialise une nouvelle instance de la classe <see cref="T:System.Net.Http.Headers.AuthenticationHeaderValue" />.</summary>
      <param name="scheme" vsli:raw="The scheme to use for authorization.">Schéma à utiliser pour l’autorisation.</param>
      <param name="parameter" vsli:raw="The credentials containing the authentication information of the user agent for the resource being requested.">Informations d’identification contenant les informations d’authentification de l’agent utilisateur pour la ressource demandée.</param>
    </member>
    <member name="M:System.Net.Http.Headers.AuthenticationHeaderValue.Equals(System.Object)">
      <summary vsli:raw="Determines whether the specified &lt;see cref=&quot;T:System.Object&quot; /&gt; is equal to the current &lt;see cref=&quot;T:System.Net.Http.Headers.AuthenticationHeaderValue&quot; /&gt; object.">Détermine si l'objet <see cref="T:System.Object" /> spécifié est égal à l'objet <see cref="T:System.Net.Http.Headers.AuthenticationHeaderValue" /> actuel.</summary>
      <param name="obj" vsli:raw="The object to compare with the current object.">Objet à comparer à l'objet actuel.</param>
      <returns vsli:raw="&lt;see langword=&quot;true&quot; /&gt; if the specified &lt;see cref=&quot;T:System.Object&quot; /&gt; is equal to the current object; otherwise, &lt;see langword=&quot;false&quot; /&gt;.">
        <see langword="true" /> si le <see cref="T:System.Object" /> spécifié est égal à l’objet actuel ; sinon, <see langword="false" />.</returns>
    </member>
    <member name="M:System.Net.Http.Headers.AuthenticationHeaderValue.GetHashCode">
      <summary vsli:raw="Serves as a hash function for an  &lt;see cref=&quot;T:System.Net.Http.Headers.AuthenticationHeaderValue&quot; /&gt; object.">Sert de fonction de hachage pour un objet <see cref="T:System.Net.Http.Headers.AuthenticationHeaderValue" />.</summary>
      <returns vsli:raw="A hash code for the current object.">Code de hachage pour l'objet actuel.</returns>
    </member>
    <member name="M:System.Net.Http.Headers.AuthenticationHeaderValue.Parse(System.String)">
      <summary vsli:raw="Converts a string to an &lt;see cref=&quot;T:System.Net.Http.Headers.AuthenticationHeaderValue&quot; /&gt; instance.">Convertit une chaîne en instance <see cref="T:System.Net.Http.Headers.AuthenticationHeaderValue" />.</summary>
      <param name="input" vsli:raw="A string that represents authentication header value information.">Chaîne qui représente les informations de valeur d’en-tête d'authentification.</param>
      <exception cref="T:System.ArgumentNullException" vsli:raw="&lt;paramref name=&quot;input&quot; /&gt; is a &lt;see langword=&quot;null&quot; /&gt; reference.">
        <paramref name="input" /> est une référence <see langword="null" />.</exception>
      <exception cref="T:System.FormatException" vsli:raw="&lt;paramref name=&quot;input&quot; /&gt; is not valid authentication header value information.">
        <paramref name="input" /> n’est pas une information de valeur d’en-tête d'authentification valide.</exception>
      <returns vsli:raw="An &lt;see cref=&quot;T:System.Net.Http.Headers.AuthenticationHeaderValue&quot; /&gt; instance.">Instance de <see cref="T:System.Net.Http.Headers.AuthenticationHeaderValue" />.</returns>
    </member>
    <member name="M:System.Net.Http.Headers.AuthenticationHeaderValue.System#ICloneable#Clone">
      <summary vsli:raw="Creates a new object that is a copy of the current &lt;see cref=&quot;T:System.Net.Http.Headers.AuthenticationHeaderValue&quot; /&gt; instance.">Crée un objet qui est une copie de l'instance <see cref="T:System.Net.Http.Headers.AuthenticationHeaderValue" /> actuelle.</summary>
      <returns vsli:raw="A copy of the current instance.">Copie de l'instance actuelle.</returns>
    </member>
    <member name="M:System.Net.Http.Headers.AuthenticationHeaderValue.ToString">
      <summary vsli:raw="Returns a string that represents the current &lt;see cref=&quot;T:System.Net.Http.Headers.AuthenticationHeaderValue&quot; /&gt; object.">Retourne une chaîne qui représente l'objet <see cref="T:System.Net.Http.Headers.AuthenticationHeaderValue" /> actuel.</summary>
      <returns vsli:raw="A string that represents the current object.">Chaîne qui représente l'objet actuel.</returns>
    </member>
    <member name="M:System.Net.Http.Headers.AuthenticationHeaderValue.TryParse(System.String,System.Net.Http.Headers.AuthenticationHeaderValue@)">
      <summary vsli:raw="Determines whether a string is valid &lt;see cref=&quot;T:System.Net.Http.Headers.AuthenticationHeaderValue&quot; /&gt; information.">Détermine si une chaîne est une information <see cref="T:System.Net.Http.Headers.AuthenticationHeaderValue" /> valide.</summary>
      <param name="input" vsli:raw="The string to validate.">Chaîne à valider.</param>
      <param name="parsedValue" vsli:raw="The &lt;see cref=&quot;T:System.Net.Http.Headers.AuthenticationHeaderValue&quot; /&gt; version of the string.">La version <see cref="T:System.Net.Http.Headers.AuthenticationHeaderValue" /> de la chaîne.</param>
      <returns vsli:raw="&lt;see langword=&quot;true&quot; /&gt; if &lt;paramref name=&quot;input&quot; /&gt; is valid &lt;see cref=&quot;T:System.Net.Http.Headers.AuthenticationHeaderValue&quot; /&gt; information; otherwise, &lt;see langword=&quot;false&quot; /&gt;.">
        <see langword="true" /> si <paramref name="input" /> est une information <see cref="T:System.Net.Http.Headers.AuthenticationHeaderValue" /> valide ; sinon, <see langword="false" />.</returns>
    </member>
    <member name="P:System.Net.Http.Headers.AuthenticationHeaderValue.Parameter">
      <summary vsli:raw="Gets the credentials containing the authentication information of the user agent for the resource being requested.">Obtient les informations d’identification contenant les informations d’authentification de l’agent utilisateur pour la ressource demandée.</summary>
      <returns vsli:raw="The credentials containing the authentication information.">Les informations d’identification contenant les informations d’authentification.</returns>
    </member>
    <member name="P:System.Net.Http.Headers.AuthenticationHeaderValue.Scheme">
      <summary vsli:raw="Gets the scheme to use for authorization.">Obtient le schéma à utiliser pour l’autorisation.</summary>
      <returns vsli:raw="The scheme to use for authorization.">Schéma à utiliser pour l’autorisation.</returns>
    </member>
    <member name="T:System.Net.Http.Headers.CacheControlHeaderValue">
      <summary vsli:raw="Represents the value of the Cache-Control header.">Représente la valeur de l'en-tête Cache-Control.</summary>
    </member>
    <member name="M:System.Net.Http.Headers.CacheControlHeaderValue.#ctor">
      <summary vsli:raw="Initializes a new instance of the &lt;see cref=&quot;T:System.Net.Http.Headers.CacheControlHeaderValue&quot; /&gt; class.">Initialise une nouvelle instance de la classe <see cref="T:System.Net.Http.Headers.CacheControlHeaderValue" />.</summary>
    </member>
    <member name="M:System.Net.Http.Headers.CacheControlHeaderValue.Equals(System.Object)">
      <summary vsli:raw="Determines whether the specified &lt;see cref=&quot;T:System.Object&quot; /&gt; is equal to the current &lt;see cref=&quot;T:System.Net.Http.Headers.CacheControlHeaderValue&quot; /&gt; object.">Détermine si l'objet <see cref="T:System.Object" /> spécifié est égal à l'objet <see cref="T:System.Net.Http.Headers.CacheControlHeaderValue" /> actuel.</summary>
      <param name="obj" vsli:raw="The object to compare with the current object.">Objet à comparer à l'objet actuel.</param>
      <returns vsli:raw="&lt;see langword=&quot;true&quot; /&gt; if the specified &lt;see cref=&quot;T:System.Object&quot; /&gt; is equal to the current object; otherwise, &lt;see langword=&quot;false&quot; /&gt;.">
        <see langword="true" /> si le <see cref="T:System.Object" /> spécifié est égal à l’objet actuel ; sinon, <see langword="false" />.</returns>
    </member>
    <member name="M:System.Net.Http.Headers.CacheControlHeaderValue.GetHashCode">
      <summary vsli:raw="Serves as a hash function for a  &lt;see cref=&quot;T:System.Net.Http.Headers.CacheControlHeaderValue&quot; /&gt; object.">Sert de fonction de hachage pour un objet <see cref="T:System.Net.Http.Headers.CacheControlHeaderValue" />.</summary>
      <returns vsli:raw="A hash code for the current object.">Code de hachage pour l'objet actuel.</returns>
    </member>
    <member name="M:System.Net.Http.Headers.CacheControlHeaderValue.Parse(System.String)">
      <summary vsli:raw="Converts a string to an &lt;see cref=&quot;T:System.Net.Http.Headers.CacheControlHeaderValue&quot; /&gt; instance.">Convertit une chaîne en instance <see cref="T:System.Net.Http.Headers.CacheControlHeaderValue" />.</summary>
      <param name="input" vsli:raw="A string that represents cache-control header value information.">Une chaîne qui représente des informations de valeur d’en-tête de contrôle de cache.</param>
      <exception cref="T:System.ArgumentNullException" vsli:raw="&lt;paramref name=&quot;input&quot; /&gt; is a &lt;see langword=&quot;null&quot; /&gt; reference.">
        <paramref name="input" /> est une référence <see langword="null" />.</exception>
      <exception cref="T:System.FormatException" vsli:raw="&lt;paramref name=&quot;input&quot; /&gt; is not valid cache-control header value information.">
        <paramref name="input" /> n’est pas une information de valeur d’en-tête de contrôle de cache valide.</exception>
      <returns vsli:raw="A &lt;see cref=&quot;T:System.Net.Http.Headers.CacheControlHeaderValue&quot; /&gt; instance.">Instance de <see cref="T:System.Net.Http.Headers.CacheControlHeaderValue" />.</returns>
    </member>
    <member name="M:System.Net.Http.Headers.CacheControlHeaderValue.System#ICloneable#Clone">
      <summary vsli:raw="Creates a new object that is a copy of the current &lt;see cref=&quot;T:System.Net.Http.Headers.CacheControlHeaderValue&quot; /&gt; instance.">Crée un objet qui est une copie de l'instance <see cref="T:System.Net.Http.Headers.CacheControlHeaderValue" /> actuelle.</summary>
      <returns vsli:raw="A copy of the current instance.">Copie de l'instance actuelle.</returns>
    </member>
    <member name="M:System.Net.Http.Headers.CacheControlHeaderValue.ToString">
      <summary vsli:raw="Returns a string that represents the current &lt;see cref=&quot;T:System.Net.Http.Headers.CacheControlHeaderValue&quot; /&gt; object.">Retourne une chaîne qui représente l'objet <see cref="T:System.Net.Http.Headers.CacheControlHeaderValue" /> actuel.</summary>
      <returns vsli:raw="A string that represents the current object.">Chaîne qui représente l'objet actuel.</returns>
    </member>
    <member name="M:System.Net.Http.Headers.CacheControlHeaderValue.TryParse(System.String,System.Net.Http.Headers.CacheControlHeaderValue@)">
      <summary vsli:raw="Determines whether a string is valid &lt;see cref=&quot;T:System.Net.Http.Headers.CacheControlHeaderValue&quot; /&gt; information.">Détermine si une chaîne est une information <see cref="T:System.Net.Http.Headers.CacheControlHeaderValue" /> valide.</summary>
      <param name="input" vsli:raw="The string to validate.">Chaîne à valider.</param>
      <param name="parsedValue" vsli:raw="The &lt;see cref=&quot;T:System.Net.Http.Headers.CacheControlHeaderValue&quot; /&gt; version of the string.">La version <see cref="T:System.Net.Http.Headers.CacheControlHeaderValue" /> de la chaîne.</param>
      <returns vsli:raw="&lt;see langword=&quot;true&quot; /&gt; if &lt;paramref name=&quot;input&quot; /&gt; is valid &lt;see cref=&quot;T:System.Net.Http.Headers.CacheControlHeaderValue&quot; /&gt; information; otherwise, &lt;see langword=&quot;false&quot; /&gt;.">
        <see langword="true" /> si <paramref name="input" /> est une information <see cref="T:System.Net.Http.Headers.CacheControlHeaderValue" /> valide ; sinon, <see langword="false" />.</returns>
    </member>
    <member name="P:System.Net.Http.Headers.CacheControlHeaderValue.Extensions">
      <summary vsli:raw="Cache-extension tokens, each with an optional assigned value.">Jetons d’extension de cache, chacun avec une valeur affectée facultative.</summary>
      <returns vsli:raw="A collection of cache-extension tokens each with an optional assigned value.">Collection de jetons d’extension de cache, chacun avec une valeur affectée facultative.</returns>
    </member>
    <member name="P:System.Net.Http.Headers.CacheControlHeaderValue.MaxAge">
      <summary vsli:raw="The maximum age, specified in seconds, that the HTTP client is willing to accept a response.">La date maximale, spécifiée en secondes, à laquelle le client HTTP est prêt à accepter une réponse.</summary>
      <returns vsli:raw="The time in seconds.">La durée en secondes.</returns>
    </member>
    <member name="P:System.Net.Http.Headers.CacheControlHeaderValue.MaxStale">
      <summary vsli:raw="Whether an HTTP client is willing to accept a response that has exceeded its expiration time.">Si un client HTTP est prêt à accepter une réponse qui a dépassé son délai d’expiration.</summary>
      <returns vsli:raw="&lt;see langword=&quot;true&quot; /&gt; if the HTTP client is willing to accept a response that has exceed the expiration time; otherwise, &lt;see langword=&quot;false&quot; /&gt;.">
        <see langword="true" /> si un client HTTP est prêt à accepter une réponse qui a dépassé le délai d’expiration, sinon <see langword="false" />.</returns>
    </member>
    <member name="P:System.Net.Http.Headers.CacheControlHeaderValue.MaxStaleLimit">
      <summary vsli:raw="The maximum time, in seconds, an HTTP client is willing to accept a response that has exceeded its expiration time.">La durée maximale, en secondes, durant laquelle un client HTTP est prêt à accepter une réponse qui a dépassé son délai d’expiration.</summary>
      <returns vsli:raw="The time in seconds.">La durée en secondes.</returns>
    </member>
    <member name="P:System.Net.Http.Headers.CacheControlHeaderValue.MinFresh">
      <summary vsli:raw="The freshness lifetime, in seconds, that an HTTP client is willing to accept a response.">Le délai, en secondes, pendant lequel un client HTTP est prêt à accepter une réponse.</summary>
      <returns vsli:raw="The time in seconds.">La durée en secondes.</returns>
    </member>
    <member name="P:System.Net.Http.Headers.CacheControlHeaderValue.MustRevalidate">
      <summary vsli:raw="Whether the origin server require revalidation of a cache entry on any subsequent use when the cache entry becomes stale.">Si le serveur d’origine nécessite ou non la revalidation d’une entrée de cache lors de toute utilisation subséquente lorsque l’entrée de cache devient obsolète.</summary>
      <returns vsli:raw="&lt;see langword=&quot;true&quot; /&gt; if the origin server requires revalidation of a cache entry on any subsequent use when the entry becomes stale; otherwise, &lt;see langword=&quot;false&quot; /&gt;.">
        <see langword="true" /> si le serveur d’origine nécessite ou non la revalidation d’une entrée de cache lors de toute utilisation subséquente lorsque l’entrée devient obsolète ; sinon, <see langword="false" />.</returns>
    </member>
    <member name="P:System.Net.Http.Headers.CacheControlHeaderValue.NoCache">
      <summary vsli:raw="Whether an HTTP client is willing to accept a cached response.">Si un client HTTP est prêt à accepter une réponse mise en cache.</summary>
      <returns vsli:raw="&lt;see langword=&quot;true&quot; /&gt; if the HTTP client is not willing to accept a cached response; otherwise, &lt;see langword=&quot;false&quot; /&gt;.">
        <see langword="true" /> Si le client HTTP n’est pas disposé à accepter une réponse mise en cache ; Sinon, <see langword="false" /> .</returns>
    </member>
    <member name="P:System.Net.Http.Headers.CacheControlHeaderValue.NoCacheHeaders">
      <summary vsli:raw="A collection of fieldnames in the &quot;no-cache&quot; directive in a cache-control header field on an HTTP response.">Collection de noms de champs dans la directive « no-cache » d’un champ d’en-tête cache-control sur une réponse HTTP.</summary>
      <returns vsli:raw="A collection of fieldnames.">Collection de noms de champs.</returns>
    </member>
    <member name="P:System.Net.Http.Headers.CacheControlHeaderValue.NoStore">
      <summary vsli:raw="Whether a cache must not store any part of either the HTTP request message or any response.">Si un cache ne doit pas stocker une partie du message de requête HTTP ou de toutes les réponses.</summary>
      <returns vsli:raw="&lt;see langword=&quot;true&quot; /&gt; if a cache must not store any part of either the HTTP request message or any response; otherwise, &lt;see langword=&quot;false&quot; /&gt;.">
        <see langword="true" /> Si un cache ne doit pas stocker une partie du message de requête HTTP ou d’une réponse ; Sinon, <see langword="false" /> .</returns>
    </member>
    <member name="P:System.Net.Http.Headers.CacheControlHeaderValue.NoTransform">
      <summary vsli:raw="Whether a cache or proxy must not change any aspect of the entity-body.">Qu’il s’agisse d’un proxy ou d’un cache, il ne doit changer aucun aspect du corps de l’entité.</summary>
      <returns vsli:raw="&lt;see langword=&quot;true&quot; /&gt; if a cache or proxy must not change any aspect of the entity-body; otherwise, &lt;see langword=&quot;false&quot; /&gt;.">
        <see langword="true" /> si un proxy ou un cache ne doivent changer aucun aspect du corps de l’entité ; sinon, <see langword="false" />.</returns>
    </member>
    <member name="P:System.Net.Http.Headers.CacheControlHeaderValue.OnlyIfCached">
      <summary vsli:raw="Whether a cache should either respond using a cached entry that is consistent with the other constraints of the HTTP request, or respond with a 504 (Gateway Timeout) status.">Indique si un cache doit répondre à l’aide d’une entrée mise en cache et cohérente avec les autres contraintes de la requête HTTP ou répondre avec l’état 504 (expiration de la passerelle).</summary>
      <returns vsli:raw="&lt;see langword=&quot;true&quot; /&gt; if a cache should either respond using a cached entry that is consistent with the other constraints of the HTTP request, or respond with a 504 (Gateway Timeout) status; otherwise, &lt;see langword=&quot;false&quot; /&gt;.">
        <see langword="true" /> si un cache doit répondre à l’aide d’une entrée mise en cache et cohérente avec les autres contraintes de la requête HTTP ou répondre avec l’état 504 (expiration de la passerelle) ; sinon, <see langword="false" />.</returns>
    </member>
    <member name="P:System.Net.Http.Headers.CacheControlHeaderValue.Private">
      <summary vsli:raw="Whether all or part of the HTTP response message is intended for a single user and must not be cached by a shared cache.">Si tout ou partie du message de réponse HTTP est destiné(e) à un utilisateur unique et ne doit pas être mis(e) en cache par un cache partagé.</summary>
      <returns vsli:raw="&lt;see langword=&quot;true&quot; /&gt; if the HTTP response message is intended for a single user and must not be cached by a shared cache; otherwise, &lt;see langword=&quot;false&quot; /&gt;.">
        <see langword="true" /> si le message de réponse HTTP est destiné à un utilisateur unique et ne doit pas être mis en cache par un cache partagé ; sinon, <see langword="false" />.</returns>
    </member>
    <member name="P:System.Net.Http.Headers.CacheControlHeaderValue.PrivateHeaders">
      <summary vsli:raw="A collection fieldnames in the &quot;private&quot; directive in a cache-control header field on an HTTP response.">Une collection de noms de champs dans la directive « private » d’un champ d’en-tête cache-control sur une réponse HTTP.</summary>
      <returns vsli:raw="A collection of fieldnames.">Collection de noms de champs.</returns>
    </member>
    <member name="P:System.Net.Http.Headers.CacheControlHeaderValue.ProxyRevalidate">
      <summary vsli:raw="Whether the origin server require revalidation of a cache entry on any subsequent use when the cache entry becomes stale for shared user agent caches.">Si le serveur d’origine nécessite ou non la revalidation d’une entrée de cache lors de toute utilisation subséquente lorsque l’entrée de cache devient obsolète pour les caches d’agent utilisateur partagés.</summary>
      <returns vsli:raw="&lt;see langword=&quot;true&quot; /&gt; if the origin server requires revalidation of a cache entry on any subsequent use when the entry becomes stale for shared user agent caches; otherwise, &lt;see langword=&quot;false&quot; /&gt;.">
        <see langword="true" /> si le serveur d’origine nécessite la revalidation d’une entrée de cache lors de toute utilisation subséquente lorsque l’entrée devient obsolète pour les caches d’agent utilisateur partagés, sinon <see langword="false" />.</returns>
    </member>
    <member name="P:System.Net.Http.Headers.CacheControlHeaderValue.Public">
      <summary vsli:raw="Whether an HTTP response may be cached by any cache, even if it would normally be non-cacheable or cacheable only within a non- shared cache.">Si une réponse HTTP peut être mise en cache par n’importe quel cache, même si elle serait normalement non mise en cache ou mise en cache uniquement dans un cache non partagé.</summary>
      <returns vsli:raw="&lt;see langword=&quot;true&quot; /&gt; if the HTTP response may be cached by any cache, even if it would normally be non-cacheable or cacheable only within a non- shared cache; otherwise, &lt;see langword=&quot;false&quot; /&gt;.">
        <see langword="true" /> si la réponse HTTP peut être mise en cache par n’importe quel cache, même si elle serait normalement non mise en cache ou mise en cache uniquement dans un cache non partagé ; sinon, <see langword="false" />.</returns>
    </member>
    <member name="P:System.Net.Http.Headers.CacheControlHeaderValue.SharedMaxAge">
      <summary vsli:raw="The shared maximum age, specified in seconds, in an HTTP response that overrides the &quot;max-age&quot; directive in a cache-control header or an Expires header for a shared cache.">L’âge maximal partagé, exprimé en secondes, dans une réponse HTTP qui remplace la directive “max-age” dans un en-tête Cache-Control ou un en-tête Expires pour un cache partagé.</summary>
      <returns vsli:raw="The time in seconds.">La durée en secondes.</returns>
    </member>
    <member name="T:System.Net.Http.Headers.ContentDispositionHeaderValue">
      <summary vsli:raw="Represents the value of the Content-Disposition header.">Représente la valeur de l'en-tête Content-Disposition.</summary>
    </member>
    <member name="M:System.Net.Http.Headers.ContentDispositionHeaderValue.#ctor(System.Net.Http.Headers.ContentDispositionHeaderValue)">
      <summary vsli:raw="Initializes a new instance of the &lt;see cref=&quot;T:System.Net.Http.Headers.ContentDispositionHeaderValue&quot; /&gt; class.">Initialise une nouvelle instance de la classe <see cref="T:System.Net.Http.Headers.ContentDispositionHeaderValue" />.</summary>
      <param name="source" vsli:raw="A &lt;see cref=&quot;T:System.Net.Http.Headers.ContentDispositionHeaderValue&quot; /&gt;.">
        <see cref="T:System.Net.Http.Headers.ContentDispositionHeaderValue" />
      </param>
    </member>
    <member name="M:System.Net.Http.Headers.ContentDispositionHeaderValue.#ctor(System.String)">
      <summary vsli:raw="Initializes a new instance of the &lt;see cref=&quot;T:System.Net.Http.Headers.ContentDispositionHeaderValue&quot; /&gt; class.">Initialise une nouvelle instance de la classe <see cref="T:System.Net.Http.Headers.ContentDispositionHeaderValue" />.</summary>
      <param name="dispositionType" vsli:raw="A string that contains a &lt;see cref=&quot;T:System.Net.Http.Headers.ContentDispositionHeaderValue&quot; /&gt;.">Chaîne qui contient un <see cref="T:System.Net.Http.Headers.ContentDispositionHeaderValue" />.</param>
    </member>
    <member name="M:System.Net.Http.Headers.ContentDispositionHeaderValue.Equals(System.Object)">
      <summary vsli:raw="Determines whether the specified &lt;see cref=&quot;T:System.Object&quot; /&gt; is equal to the current &lt;see cref=&quot;T:System.Net.Http.Headers.ContentDispositionHeaderValue&quot; /&gt; object.">Détermine si l'objet <see cref="T:System.Object" /> spécifié est égal à l'objet <see cref="T:System.Net.Http.Headers.ContentDispositionHeaderValue" /> actuel.</summary>
      <param name="obj" vsli:raw="The object to compare with the current object.">Objet à comparer à l'objet actuel.</param>
      <returns vsli:raw="&lt;see langword=&quot;true&quot; /&gt; if the specified &lt;see cref=&quot;T:System.Object&quot; /&gt; is equal to the current object; otherwise, &lt;see langword=&quot;false&quot; /&gt;.">
        <see langword="true" /> si le <see cref="T:System.Object" /> spécifié est égal à l’objet actuel ; sinon, <see langword="false" />.</returns>
    </member>
    <member name="M:System.Net.Http.Headers.ContentDispositionHeaderValue.GetHashCode">
      <summary vsli:raw="Serves as a hash function for an  &lt;see cref=&quot;T:System.Net.Http.Headers.ContentDispositionHeaderValue&quot; /&gt; object.">Sert de fonction de hachage pour un objet <see cref="T:System.Net.Http.Headers.ContentDispositionHeaderValue" />.</summary>
      <returns vsli:raw="A hash code for the current object.">Code de hachage pour l'objet actuel.</returns>
    </member>
    <member name="M:System.Net.Http.Headers.ContentDispositionHeaderValue.Parse(System.String)">
      <summary vsli:raw="Converts a string to an &lt;see cref=&quot;T:System.Net.Http.Headers.ContentDispositionHeaderValue&quot; /&gt; instance.">Convertit une chaîne en instance <see cref="T:System.Net.Http.Headers.ContentDispositionHeaderValue" />.</summary>
      <param name="input" vsli:raw="A string that represents content disposition header value information.">Chaîne qui représente des informations de valeur d’en-tête de disposition de contenu.</param>
      <exception cref="T:System.ArgumentNullException" vsli:raw="&lt;paramref name=&quot;input&quot; /&gt; is a &lt;see langword=&quot;null&quot; /&gt; reference.">
        <paramref name="input" /> est une référence <see langword="null" />.</exception>
      <exception cref="T:System.FormatException" vsli:raw="&lt;paramref name=&quot;input&quot; /&gt; is not valid content disposition header value information.">
        <paramref name="input" /> n’est pas une information de valeur d’en-tête de disposition de contenu valide.</exception>
      <returns vsli:raw="An &lt;see cref=&quot;T:System.Net.Http.Headers.ContentDispositionHeaderValue&quot; /&gt; instance.">Instance de <see cref="T:System.Net.Http.Headers.ContentDispositionHeaderValue" />.</returns>
    </member>
    <member name="M:System.Net.Http.Headers.ContentDispositionHeaderValue.System#ICloneable#Clone">
      <summary vsli:raw="Creates a new object that is a copy of the current &lt;see cref=&quot;T:System.Net.Http.Headers.ContentDispositionHeaderValue&quot; /&gt; instance.">Crée un objet qui est une copie de l'instance <see cref="T:System.Net.Http.Headers.ContentDispositionHeaderValue" /> actuelle.</summary>
      <returns vsli:raw="A copy of the current instance.">Copie de l'instance actuelle.</returns>
    </member>
    <member name="M:System.Net.Http.Headers.ContentDispositionHeaderValue.ToString">
      <summary vsli:raw="Returns a string that represents the current &lt;see cref=&quot;T:System.Net.Http.Headers.ContentDispositionHeaderValue&quot; /&gt; object.">Retourne une chaîne qui représente l'objet <see cref="T:System.Net.Http.Headers.ContentDispositionHeaderValue" /> actuel.</summary>
      <returns vsli:raw="A string that represents the current object.">Chaîne qui représente l'objet actuel.</returns>
    </member>
    <member name="M:System.Net.Http.Headers.ContentDispositionHeaderValue.TryParse(System.String,System.Net.Http.Headers.ContentDispositionHeaderValue@)">
      <summary vsli:raw="Determines whether a string is valid &lt;see cref=&quot;T:System.Net.Http.Headers.ContentDispositionHeaderValue&quot; /&gt; information.">Détermine si une chaîne est une information <see cref="T:System.Net.Http.Headers.ContentDispositionHeaderValue" /> valide.</summary>
      <param name="input" vsli:raw="The string to validate.">Chaîne à valider.</param>
      <param name="parsedValue" vsli:raw="The &lt;see cref=&quot;T:System.Net.Http.Headers.ContentDispositionHeaderValue&quot; /&gt; version of the string.">La version <see cref="T:System.Net.Http.Headers.ContentDispositionHeaderValue" /> de la chaîne.</param>
      <returns vsli:raw="&lt;see langword=&quot;true&quot; /&gt; if &lt;paramref name=&quot;input&quot; /&gt; is valid &lt;see cref=&quot;T:System.Net.Http.Headers.ContentDispositionHeaderValue&quot; /&gt; information; otherwise, &lt;see langword=&quot;false&quot; /&gt;.">
        <see langword="true" /> si <paramref name="input" /> est une information <see cref="T:System.Net.Http.Headers.ContentDispositionHeaderValue" /> valide ; sinon, <see langword="false" />.</returns>
    </member>
    <member name="P:System.Net.Http.Headers.ContentDispositionHeaderValue.CreationDate">
      <summary vsli:raw="The date at which   the file was created.">Date à laquelle le fichier a été créé.</summary>
      <returns vsli:raw="The file creation date.">Date de création du fichier.</returns>
    </member>
    <member name="P:System.Net.Http.Headers.ContentDispositionHeaderValue.DispositionType">
      <summary vsli:raw="The disposition type for a content body part.">Type de disposition d’une partie du corps du contenu.</summary>
      <returns vsli:raw="The disposition type.">Type de disposition.</returns>
    </member>
    <member name="P:System.Net.Http.Headers.ContentDispositionHeaderValue.FileName">
      <summary vsli:raw="A suggestion for how to construct a filename for   storing the message payload to be used if the entity is   detached and stored in a separate file.">Une suggestion de construction de nom de fichier pour le stockage de la charge utile de messages à utiliser si l’entité est détachée et stockée dans un fichier distinct.</summary>
      <returns vsli:raw="A suggested filename.">Nom de fichier suggéré.</returns>
    </member>
    <member name="P:System.Net.Http.Headers.ContentDispositionHeaderValue.FileNameStar">
      <summary vsli:raw="A suggestion for how to construct filenames for   storing message payloads to be used if the entities are    detached and stored in a separate files.">Une suggestion de construction de noms de fichiers pour le stockage des charges utiles de messages à utiliser si les entités sont détachées et stockées dans des fichiers distincts.</summary>
      <returns vsli:raw="A suggested filename of the form filename*.">Nom de fichier proposé sous la forme nom_de_fichier*.</returns>
    </member>
    <member name="P:System.Net.Http.Headers.ContentDispositionHeaderValue.ModificationDate">
      <summary vsli:raw="The date at   which the file was last modified.">Dernière date de modification du fichier.</summary>
      <returns vsli:raw="The file modification date.">La date de modification du fichier.</returns>
    </member>
    <member name="P:System.Net.Http.Headers.ContentDispositionHeaderValue.Name">
      <summary vsli:raw="The name for a content body part.">Le nom d’une partie du corps d’un contenu.</summary>
      <returns vsli:raw="The name for the content body part.">Le nom d’une partie du corps du contenu.</returns>
    </member>
    <member name="P:System.Net.Http.Headers.ContentDispositionHeaderValue.Parameters">
      <summary vsli:raw="A set of parameters included the Content-Disposition header.">Un ensemble de paramètres incluant l’en-tête Content-Disposition.</summary>
      <returns vsli:raw="A collection of parameters.">Collection de paramètres.</returns>
    </member>
    <member name="P:System.Net.Http.Headers.ContentDispositionHeaderValue.ReadDate">
      <summary vsli:raw="The date the file was last read.">La date de dernière lecture du fichier.</summary>
      <returns vsli:raw="The last read date.">Date de la dernière lecture.</returns>
    </member>
    <member name="P:System.Net.Http.Headers.ContentDispositionHeaderValue.Size">
      <summary vsli:raw="The approximate size, in bytes, of the file.">La taille approximative, en octets, du fichier.</summary>
      <returns vsli:raw="The approximate size, in bytes.">La taille approximative, en octets.</returns>
    </member>
    <member name="T:System.Net.Http.Headers.ContentRangeHeaderValue">
      <summary vsli:raw="Represents the value of the Content-Range header.">Représente la valeur de l'en-tête Content-Range.</summary>
    </member>
    <member name="M:System.Net.Http.Headers.ContentRangeHeaderValue.#ctor(System.Int64)">
      <summary vsli:raw="Initializes a new instance of the &lt;see cref=&quot;T:System.Net.Http.Headers.ContentRangeHeaderValue&quot; /&gt; class.">Initialise une nouvelle instance de la classe <see cref="T:System.Net.Http.Headers.ContentRangeHeaderValue" />.</summary>
      <param name="length" vsli:raw="The starting or ending point of the range, in bytes.">Point de départ ou de fin de la plage, en octets.</param>
    </member>
    <member name="M:System.Net.Http.Headers.ContentRangeHeaderValue.#ctor(System.Int64,System.Int64)">
      <summary vsli:raw="Initializes a new instance of the &lt;see cref=&quot;T:System.Net.Http.Headers.ContentRangeHeaderValue&quot; /&gt; class.">Initialise une nouvelle instance de la classe <see cref="T:System.Net.Http.Headers.ContentRangeHeaderValue" />.</summary>
      <param name="from" vsli:raw="The position, in bytes, at which to start sending data.">Position, en octets, à laquelle démarrer l'envoi de données.</param>
      <param name="to" vsli:raw="The position, in bytes, at which to stop sending data.">Position, en octets, à laquelle arrêter l'envoi de données.</param>
    </member>
    <member name="M:System.Net.Http.Headers.ContentRangeHeaderValue.#ctor(System.Int64,System.Int64,System.Int64)">
      <summary vsli:raw="Initializes a new instance of the &lt;see cref=&quot;T:System.Net.Http.Headers.ContentRangeHeaderValue&quot; /&gt; class.">Initialise une nouvelle instance de la classe <see cref="T:System.Net.Http.Headers.ContentRangeHeaderValue" />.</summary>
      <param name="from" vsli:raw="The position, in bytes, at which to start sending data.">Position, en octets, à laquelle démarrer l'envoi de données.</param>
      <param name="to" vsli:raw="The position, in bytes, at which to stop sending data.">Position, en octets, à laquelle arrêter l'envoi de données.</param>
      <param name="length" vsli:raw="The starting or ending point of the range, in bytes.">Point de départ ou de fin de la plage, en octets.</param>
    </member>
    <member name="M:System.Net.Http.Headers.ContentRangeHeaderValue.Equals(System.Object)">
      <summary vsli:raw="Determines whether the specified Object is equal to the current &lt;see cref=&quot;T:System.Net.Http.Headers.ContentRangeHeaderValue&quot; /&gt; object.">Détermine si l'objet spécifié est identique à l'objet <see cref="T:System.Net.Http.Headers.ContentRangeHeaderValue" /> actuel.</summary>
      <param name="obj" vsli:raw="The object to compare with the current object.">Objet à comparer à l'objet actuel.</param>
      <returns vsli:raw="&lt;see langword=&quot;true&quot; /&gt; if the specified &lt;see cref=&quot;T:System.Object&quot; /&gt; is equal to the current object; otherwise, &lt;see langword=&quot;false&quot; /&gt;.">
        <see langword="true" /> si le <see cref="T:System.Object" /> spécifié est égal à l’objet actuel ; sinon, <see langword="false" />.</returns>
    </member>
    <member name="M:System.Net.Http.Headers.ContentRangeHeaderValue.GetHashCode">
      <summary vsli:raw="Serves as a hash function for an &lt;see cref=&quot;T:System.Net.Http.Headers.ContentRangeHeaderValue&quot; /&gt; object.">Sert de fonction de hachage pour un objet <see cref="T:System.Net.Http.Headers.ContentRangeHeaderValue" />.</summary>
      <returns vsli:raw="A hash code for the current object.">Code de hachage pour l'objet actuel.</returns>
    </member>
    <member name="M:System.Net.Http.Headers.ContentRangeHeaderValue.Parse(System.String)">
      <summary vsli:raw="Converts a string to an &lt;see cref=&quot;T:System.Net.Http.Headers.ContentRangeHeaderValue&quot; /&gt; instance.">Convertit une chaîne en instance <see cref="T:System.Net.Http.Headers.ContentRangeHeaderValue" />.</summary>
      <param name="input" vsli:raw="A string that represents content range header value information.">Une chaîne qui représente des informations de valeur d’en-tête de plage de contenu.</param>
      <exception cref="T:System.ArgumentNullException" vsli:raw="&lt;paramref name=&quot;input&quot; /&gt; is a &lt;see langword=&quot;null&quot; /&gt; reference.">
        <paramref name="input" /> est une référence <see langword="null" />.</exception>
      <exception cref="T:System.FormatException" vsli:raw="&lt;paramref name=&quot;input&quot; /&gt; is not valid content range header value information.">
        <paramref name="input" /> n’est pas une information de valeur d’en-tête de plage de contenu valide.</exception>
      <returns vsli:raw="An &lt;see cref=&quot;T:System.Net.Http.Headers.ContentRangeHeaderValue&quot; /&gt; instance.">Instance de <see cref="T:System.Net.Http.Headers.ContentRangeHeaderValue" />.</returns>
    </member>
    <member name="M:System.Net.Http.Headers.ContentRangeHeaderValue.System#ICloneable#Clone">
      <summary vsli:raw="Creates a new object that is a copy of the current &lt;see cref=&quot;T:System.Net.Http.Headers.ContentRangeHeaderValue&quot; /&gt; instance.">Crée un objet qui est une copie de l'instance <see cref="T:System.Net.Http.Headers.ContentRangeHeaderValue" /> actuelle.</summary>
      <returns vsli:raw="A copy of the current instance.">Copie de l'instance actuelle.</returns>
    </member>
    <member name="M:System.Net.Http.Headers.ContentRangeHeaderValue.ToString">
      <summary vsli:raw="Returns a string that represents the current &lt;see cref=&quot;T:System.Net.Http.Headers.ContentRangeHeaderValue&quot; /&gt; object.">Retourne une chaîne qui représente l'objet <see cref="T:System.Net.Http.Headers.ContentRangeHeaderValue" /> actuel.</summary>
      <returns vsli:raw="A string that represents the current object.">Chaîne qui représente l'objet actuel.</returns>
    </member>
    <member name="M:System.Net.Http.Headers.ContentRangeHeaderValue.TryParse(System.String,System.Net.Http.Headers.ContentRangeHeaderValue@)">
      <summary vsli:raw="Determines whether a string is valid &lt;see cref=&quot;T:System.Net.Http.Headers.ContentRangeHeaderValue&quot; /&gt; information.">Détermine si une chaîne est une information <see cref="T:System.Net.Http.Headers.ContentRangeHeaderValue" /> valide.</summary>
      <param name="input" vsli:raw="The string to validate.">Chaîne à valider.</param>
      <param name="parsedValue" vsli:raw="The &lt;see cref=&quot;T:System.Net.Http.Headers.ContentRangeHeaderValue&quot; /&gt; version of the string.">La version <see cref="T:System.Net.Http.Headers.ContentRangeHeaderValue" /> de la chaîne.</param>
      <returns vsli:raw="&lt;see langword=&quot;true&quot; /&gt; if &lt;paramref name=&quot;input&quot; /&gt; is valid &lt;see cref=&quot;T:System.Net.Http.Headers.ContentRangeHeaderValue&quot; /&gt; information; otherwise, &lt;see langword=&quot;false&quot; /&gt;.">
        <see langword="true" /> si <paramref name="input" /> est une information <see cref="T:System.Net.Http.Headers.ContentRangeHeaderValue" /> valide ; sinon, <see langword="false" />.</returns>
    </member>
    <member name="P:System.Net.Http.Headers.ContentRangeHeaderValue.From">
      <summary vsli:raw="Gets the position at which to start sending data.">Obtient la position à laquelle démarrer l'envoi de données.</summary>
      <returns vsli:raw="The position, in bytes, at which to start sending data.">Position, en octets, à laquelle démarrer l'envoi de données.</returns>
    </member>
    <member name="P:System.Net.Http.Headers.ContentRangeHeaderValue.HasLength">
      <summary vsli:raw="Gets whether the Content-Range header has a length specified.">Détermine si l’en-tête Content-Range a une longueur spécifiée.</summary>
      <returns vsli:raw="&lt;see langword=&quot;true&quot; /&gt; if the Content-Range has a length specified; otherwise, &lt;see langword=&quot;false&quot; /&gt;.">
        <see langword="true" /> si la valeur Content-Range a une longueur spécifiée ; sinon <see langword="false" />.</returns>
    </member>
    <member name="P:System.Net.Http.Headers.ContentRangeHeaderValue.HasRange">
      <summary vsli:raw="Gets whether the Content-Range has a range specified.">Détermine si la valeur Content-Range a une plage spécifiée.</summary>
      <returns vsli:raw="&lt;see langword=&quot;true&quot; /&gt; if the Content-Range has a range specified; otherwise, &lt;see langword=&quot;false&quot; /&gt;.">
        <see langword="true" /> si la valeur Content-Range a une plage spécifiée ; sinon <see langword="false" />.</returns>
    </member>
    <member name="P:System.Net.Http.Headers.ContentRangeHeaderValue.Length">
      <summary vsli:raw="Gets the length of the full entity-body.">Obtient la longueur du corps de l’entité complète.</summary>
      <returns vsli:raw="The length of the full entity-body.">La longueur du corps de l’entité complète.</returns>
    </member>
    <member name="P:System.Net.Http.Headers.ContentRangeHeaderValue.To">
      <summary vsli:raw="Gets the position at which to stop sending data.">Obtient la position à laquelle arrêter l’envoi de données.</summary>
      <returns vsli:raw="The position at which to stop sending data.">Position à laquelle arrêter l'envoi de données.</returns>
    </member>
    <member name="P:System.Net.Http.Headers.ContentRangeHeaderValue.Unit">
      <summary vsli:raw="The range units used.">Les unités de plage utilisées.</summary>
      <returns vsli:raw="A &lt;see cref=&quot;T:System.String&quot; /&gt; that contains range units.">
        <see cref="T:System.String" /> qui contient des unités de plage.</returns>
    </member>
    <member name="T:System.Net.Http.Headers.EntityTagHeaderValue">
      <summary vsli:raw="Represents an entity-tag header value.">Représente une valeur d'en-tête de balise d'entité.</summary>
    </member>
    <member name="M:System.Net.Http.Headers.EntityTagHeaderValue.#ctor(System.String)">
      <summary vsli:raw="Initializes a new instance of the &lt;see cref=&quot;T:System.Net.Http.Headers.EntityTagHeaderValue&quot; /&gt; class.">Initialise une nouvelle instance de la classe <see cref="T:System.Net.Http.Headers.EntityTagHeaderValue" />.</summary>
      <param name="tag" vsli:raw="A string that contains an &lt;see cref=&quot;T:System.Net.Http.Headers.EntityTagHeaderValue&quot; /&gt;.">Chaîne qui contient un <see cref="T:System.Net.Http.Headers.EntityTagHeaderValue" />.</param>
    </member>
    <member name="M:System.Net.Http.Headers.EntityTagHeaderValue.#ctor(System.String,System.Boolean)">
      <summary vsli:raw="Initializes a new instance of the &lt;see cref=&quot;T:System.Net.Http.Headers.EntityTagHeaderValue&quot; /&gt; class.">Initialise une nouvelle instance de la classe <see cref="T:System.Net.Http.Headers.EntityTagHeaderValue" />.</summary>
      <param name="tag" vsli:raw="A string that contains an  &lt;see cref=&quot;T:System.Net.Http.Headers.EntityTagHeaderValue&quot; /&gt;.">Chaîne qui contient un <see cref="T:System.Net.Http.Headers.EntityTagHeaderValue" />.</param>
      <param name="isWeak" vsli:raw="A value that indicates if this entity-tag header is a weak validator. If the entity-tag header is weak validator, then &lt;paramref name=&quot;isWeak&quot; /&gt; should be set to &lt;see langword=&quot;true&quot; /&gt;. If the entity-tag header is a strong validator, then &lt;paramref name=&quot;isWeak&quot; /&gt; should be set to &lt;see langword=&quot;false&quot; /&gt;.">Valeur qui indique si cet en-tête de balise d'entité est un validateur faible. Si l'en-tête de la balise d'entité est un validateur faible, <paramref name="isWeak" /> doit avoir la valeur <see langword="true" />. Si l'en-tête de la balise d'entité est un validateur fort, <paramref name="isWeak" /> doit avoir la valeur <see langword="false" />.</param>
    </member>
    <member name="M:System.Net.Http.Headers.EntityTagHeaderValue.Equals(System.Object)">
      <summary vsli:raw="Determines whether the specified &lt;see cref=&quot;T:System.Object&quot; /&gt; is equal to the current &lt;see cref=&quot;T:System.Net.Http.Headers.EntityTagHeaderValue&quot; /&gt; object.">Détermine si l'objet <see cref="T:System.Object" /> spécifié est égal à l'objet <see cref="T:System.Net.Http.Headers.EntityTagHeaderValue" /> actuel.</summary>
      <param name="obj" vsli:raw="The object to compare with the current object.">Objet à comparer à l'objet actuel.</param>
      <returns vsli:raw="&lt;see langword=&quot;true&quot; /&gt; if the specified &lt;see cref=&quot;T:System.Object&quot; /&gt; is equal to the current object; otherwise, &lt;see langword=&quot;false&quot; /&gt;.">
        <see langword="true" /> si le <see cref="T:System.Object" /> spécifié est égal à l’objet actuel ; sinon, <see langword="false" />.</returns>
    </member>
    <member name="M:System.Net.Http.Headers.EntityTagHeaderValue.GetHashCode">
      <summary vsli:raw="Serves as a hash function for an &lt;see cref=&quot;T:System.Net.Http.Headers.EntityTagHeaderValue&quot; /&gt; object.">Sert de fonction de hachage pour un objet <see cref="T:System.Net.Http.Headers.EntityTagHeaderValue" />.</summary>
      <returns vsli:raw="A hash code for the current object.">Code de hachage pour l'objet actuel.</returns>
    </member>
    <member name="M:System.Net.Http.Headers.EntityTagHeaderValue.Parse(System.String)">
      <summary vsli:raw="Converts a string to an &lt;see cref=&quot;T:System.Net.Http.Headers.EntityTagHeaderValue&quot; /&gt; instance.">Convertit une chaîne en instance <see cref="T:System.Net.Http.Headers.EntityTagHeaderValue" />.</summary>
      <param name="input" vsli:raw="A string that represents entity tag header value information.">Chaîne qui représente les informations de valeur d’en-tête de l’étiquette d’entité.</param>
      <exception cref="T:System.ArgumentNullException" vsli:raw="&lt;paramref name=&quot;input&quot; /&gt; is a &lt;see langword=&quot;null&quot; /&gt; reference.">
        <paramref name="input" /> est une référence <see langword="null" />.</exception>
      <exception cref="T:System.FormatException" vsli:raw="&lt;paramref name=&quot;input&quot; /&gt; is not valid entity tag header value information.">
        <paramref name="input" /> n’est pas une information de valeur d’en-tête d’étiquette d’entité valide.</exception>
      <returns vsli:raw="An &lt;see cref=&quot;T:System.Net.Http.Headers.EntityTagHeaderValue&quot; /&gt; instance.">Instance de <see cref="T:System.Net.Http.Headers.EntityTagHeaderValue" />.</returns>
    </member>
    <member name="M:System.Net.Http.Headers.EntityTagHeaderValue.System#ICloneable#Clone">
      <summary vsli:raw="Creates a new object that is a copy of the current &lt;see cref=&quot;T:System.Net.Http.Headers.EntityTagHeaderValue&quot; /&gt; instance.">Crée un objet qui est une copie de l'instance <see cref="T:System.Net.Http.Headers.EntityTagHeaderValue" /> actuelle.</summary>
      <returns vsli:raw="A copy of the current instance.">Copie de l'instance actuelle.</returns>
    </member>
    <member name="M:System.Net.Http.Headers.EntityTagHeaderValue.ToString">
      <summary vsli:raw="Returns a string that represents the current &lt;see cref=&quot;T:System.Net.Http.Headers.EntityTagHeaderValue&quot; /&gt; object.">Retourne une chaîne qui représente l'objet <see cref="T:System.Net.Http.Headers.EntityTagHeaderValue" /> actuel.</summary>
      <returns vsli:raw="A string that represents the current object.">Chaîne qui représente l'objet actuel.</returns>
    </member>
    <member name="M:System.Net.Http.Headers.EntityTagHeaderValue.TryParse(System.String,System.Net.Http.Headers.EntityTagHeaderValue@)">
      <summary vsli:raw="Determines whether a string is valid &lt;see cref=&quot;T:System.Net.Http.Headers.EntityTagHeaderValue&quot; /&gt; information.">Détermine si une chaîne est une information <see cref="T:System.Net.Http.Headers.EntityTagHeaderValue" /> valide.</summary>
      <param name="input" vsli:raw="The string to validate.">Chaîne à valider.</param>
      <param name="parsedValue" vsli:raw="The &lt;see cref=&quot;T:System.Net.Http.Headers.EntityTagHeaderValue&quot; /&gt; version of the string.">La version <see cref="T:System.Net.Http.Headers.EntityTagHeaderValue" /> de la chaîne.</param>
      <returns vsli:raw="&lt;see langword=&quot;true&quot; /&gt; if &lt;paramref name=&quot;input&quot; /&gt; is valid &lt;see cref=&quot;T:System.Net.Http.Headers.EntityTagHeaderValue&quot; /&gt; information; otherwise, &lt;see langword=&quot;false&quot; /&gt;.">
        <see langword="true" /> si <paramref name="input" /> est une information <see cref="T:System.Net.Http.Headers.EntityTagHeaderValue" /> valide ; sinon, <see langword="false" />.</returns>
    </member>
    <member name="P:System.Net.Http.Headers.EntityTagHeaderValue.Any">
      <summary vsli:raw="Gets the entity-tag header value.">Obtient la valeur d'en-tête de la balise d'entité.</summary>
      <returns vsli:raw="Returns &lt;see cref=&quot;T:System.Net.Http.Headers.EntityTagHeaderValue&quot; /&gt;.">Retourne <see cref="T:System.Net.Http.Headers.EntityTagHeaderValue" />.</returns>
    </member>
    <member name="P:System.Net.Http.Headers.EntityTagHeaderValue.IsWeak">
      <summary vsli:raw="Gets whether the entity-tag is prefaced by a weakness indicator.">Détermine si la balise d’entité est précédée d’un indicateur de faiblesse.</summary>
      <returns vsli:raw="&lt;see langword=&quot;true&quot; /&gt; if the entity-tag is prefaced by a weakness indicator; otherwise, &lt;see langword=&quot;false&quot; /&gt;.">
        <see langword="true" /> si la balise d’entité est précédée d’un indicateur de faiblesse ; sinon, <see langword="false" />.</returns>
    </member>
    <member name="P:System.Net.Http.Headers.EntityTagHeaderValue.Tag">
      <summary vsli:raw="Gets the opaque quoted string.">Récupère la chaîne opaque entre guillemets.</summary>
      <returns vsli:raw="An opaque quoted string.">Chaîne opaque entre guillemets.</returns>
    </member>
    <member name="T:System.Net.Http.Headers.HttpContentHeaders">
      <summary vsli:raw="Represents the collection of Content Headers as defined in RFC 2616.">Représente la collection d’en-têtes de contenu, tel que défini dans le document RFC 2616.</summary>
    </member>
    <member name="P:System.Net.Http.Headers.HttpContentHeaders.Allow">
      <summary vsli:raw="Gets the value of the &lt;see langword=&quot;Allow&quot; /&gt; content header on an HTTP response.">Récupère la valeur de l’en-tête de contenu <see langword="Allow" /> sur une réponse HTTP.</summary>
      <returns vsli:raw="The value of the &lt;see langword=&quot;Allow&quot; /&gt; header on an HTTP response.">La valeur de l’en-tête <see langword="Allow" /> sur une réponse HTTP.</returns>
    </member>
    <member name="P:System.Net.Http.Headers.HttpContentHeaders.ContentDisposition">
      <summary vsli:raw="Gets the value of the &lt;see langword=&quot;Content-Disposition&quot; /&gt; content header on an HTTP response.">Récupère la valeur de l’en-tête de contenu <see langword="Content-Disposition" /> sur une réponse HTTP.</summary>
      <returns vsli:raw="The value of the &lt;see langword=&quot;Content-Disposition&quot; /&gt; content header on an HTTP response.">Valeur de l’en-tête de contenu <see langword="Content-Disposition" /> sur une réponse HTTP.</returns>
    </member>
    <member name="P:System.Net.Http.Headers.HttpContentHeaders.ContentEncoding">
      <summary vsli:raw="Gets the value of the &lt;see langword=&quot;Content-Encoding&quot; /&gt; content header on an HTTP response.">Récupère la valeur de l’en-tête de contenu <see langword="Content-Encoding" /> sur une réponse HTTP.</summary>
      <returns vsli:raw="The value of the &lt;see langword=&quot;Content-Encoding&quot; /&gt; content header on an HTTP response.">Valeur de l’en-tête de contenu <see langword="Content-Encoding" /> sur une réponse HTTP.</returns>
    </member>
    <member name="P:System.Net.Http.Headers.HttpContentHeaders.ContentLanguage">
      <summary vsli:raw="Gets the value of the &lt;see langword=&quot;Content-Language&quot; /&gt; content header on an HTTP response.">Récupère la valeur de l’en-tête de contenu <see langword="Content-Language" /> sur une réponse HTTP.</summary>
      <returns vsli:raw="The value of the &lt;see langword=&quot;Content-Language&quot; /&gt; content header on an HTTP response.">Valeur de l’en-tête de contenu <see langword="Content-Language" /> sur une réponse HTTP.</returns>
    </member>
    <member name="P:System.Net.Http.Headers.HttpContentHeaders.ContentLength">
      <summary vsli:raw="Gets or sets the value of the &lt;see langword=&quot;Content-Length&quot; /&gt; content header on an HTTP response.">Obtient ou définit la valeur de l’en-tête de contenu <see langword="Content-Length" /> sur une réponse HTTP.</summary>
      <returns vsli:raw="The value of the &lt;see langword=&quot;Content-Length&quot; /&gt; content header on an HTTP response.">Valeur de l’en-tête de contenu <see langword="Content-Length" /> sur une réponse HTTP.</returns>
    </member>
    <member name="P:System.Net.Http.Headers.HttpContentHeaders.ContentLocation">
      <summary vsli:raw="Gets or sets the value of the &lt;see langword=&quot;Content-Location&quot; /&gt; content header on an HTTP response.">Obtient ou définit la valeur de l’en-tête de contenu <see langword="Content-Location" /> sur une réponse HTTP.</summary>
      <returns vsli:raw="The value of the &lt;see langword=&quot;Content-Location&quot; /&gt; content header on an HTTP response.">Valeur de l’en-tête de contenu <see langword="Content-Location" /> sur une réponse HTTP.</returns>
    </member>
    <member name="P:System.Net.Http.Headers.HttpContentHeaders.ContentMD5">
      <summary vsli:raw="Gets or sets the value of the &lt;see langword=&quot;Content-MD5&quot; /&gt; content header on an HTTP response.">Obtient ou définit la valeur de l’en-tête de contenu <see langword="Content-MD5" /> sur une réponse HTTP.</summary>
      <returns vsli:raw="The value of the &lt;see langword=&quot;Content-MD5&quot; /&gt; content header on an HTTP response.">Valeur de l’en-tête de contenu <see langword="Content-MD5" /> sur une réponse HTTP.</returns>
    </member>
    <member name="P:System.Net.Http.Headers.HttpContentHeaders.ContentRange">
      <summary vsli:raw="Gets or sets the value of the &lt;see langword=&quot;Content-Range&quot; /&gt; content header on an HTTP response.">Obtient ou définit la valeur de l’en-tête de contenu <see langword="Content-Range" /> sur une réponse HTTP.</summary>
      <returns vsli:raw="The value of the &lt;see langword=&quot;Content-Range&quot; /&gt; content header on an HTTP response.">Valeur de l’en-tête de contenu <see langword="Content-Range" /> sur une réponse HTTP.</returns>
    </member>
    <member name="P:System.Net.Http.Headers.HttpContentHeaders.ContentType">
      <summary vsli:raw="Gets or sets the value of the &lt;see langword=&quot;Content-Type&quot; /&gt; content header on an HTTP response.">Obtient ou définit la valeur de l’en-tête de contenu <see langword="Content-Type" /> sur une réponse HTTP.</summary>
      <returns vsli:raw="The value of the &lt;see langword=&quot;Content-Type&quot; /&gt; content header on an HTTP response.">Valeur de l’en-tête de contenu <see langword="Content-Type" /> sur une réponse HTTP.</returns>
    </member>
    <member name="P:System.Net.Http.Headers.HttpContentHeaders.Expires">
      <summary vsli:raw="Gets or sets the value of the &lt;see langword=&quot;Expires&quot; /&gt; content header on an HTTP response.">Obtient ou définit la valeur de l’en-tête de contenu <see langword="Expires" /> sur une réponse HTTP.</summary>
      <returns vsli:raw="The value of the &lt;see langword=&quot;Expires&quot; /&gt; content header on an HTTP response.">Valeur de l’en-tête de contenu <see langword="Expires" /> sur une réponse HTTP.</returns>
    </member>
    <member name="P:System.Net.Http.Headers.HttpContentHeaders.LastModified">
      <summary vsli:raw="Gets or sets the value of the &lt;see langword=&quot;Last-Modified&quot; /&gt; content header on an HTTP response.">Obtient ou définit la valeur de l’en-tête de contenu <see langword="Last-Modified" /> sur une réponse HTTP.</summary>
      <returns vsli:raw="The value of the &lt;see langword=&quot;Last-Modified&quot; /&gt; content header on an HTTP response.">Valeur de l’en-tête de contenu <see langword="Last-Modified" /> sur une réponse HTTP.</returns>
    </member>
    <member name="T:System.Net.Http.Headers.HttpHeaders">
      <summary vsli:raw="A collection of headers and their values as defined in RFC 2616.">Collection d’en-têtes et leurs valeurs, tel que défini dans le document RFC 2616.</summary>
    </member>
    <member name="M:System.Net.Http.Headers.HttpHeaders.#ctor">
      <summary vsli:raw="Initializes a new instance of the &lt;see cref=&quot;T:System.Net.Http.Headers.HttpHeaders&quot; /&gt; class.">Initialise une nouvelle instance de la classe <see cref="T:System.Net.Http.Headers.HttpHeaders" />.</summary>
    </member>
    <member name="M:System.Net.Http.Headers.HttpHeaders.Add(System.String,System.Collections.Generic.IEnumerable{System.String})">
      <summary vsli:raw="Adds the specified header and its values into the &lt;see cref=&quot;T:System.Net.Http.Headers.HttpHeaders&quot; /&gt; collection.">Ajoute l'en-tête spécifié et ses valeurs dans la collection de <see cref="T:System.Net.Http.Headers.HttpHeaders" />.</summary>
      <param name="name" vsli:raw="The header to add to the collection.">En-tête à ajouter à la collection.</param>
      <param name="values" vsli:raw="A list of header values to add to the collection.">Liste des valeurs d'en-tête à ajouter à la collection.</param>
      <exception cref="T:System.ArgumentException" vsli:raw="The name cannot be null or empty.">Le nom ne peut pas être null ou vide.</exception>
      <exception cref="T:System.ArgumentNullException" vsli:raw="The values cannot be null or empty.">Les valeurs ne peuvent pas être null ou vides.</exception>
      <exception cref="T:System.InvalidOperationException" vsli:raw="Misused header name. Make sure request headers are used with HttpRequestMessage, response headers with HttpResponseMessage, and content headers with HttpContent objects.">Nom de l’en-tête mal utilisé. Assurez-vous que les en-têtes de requête sont utilisés avec HttpRequestMessage, les en-têtes de réponse avec HttpResponseMessage et les en-têtes de contenu avec les objets HttpContent.</exception>
      <exception cref="T:System.FormatException" vsli:raw="The header name format is invalid.&#xA;&#xA;-or-&#xA;&#xA;New line characters in header values must be followed by a white-space character.">Le format du nom d’en-tête n’est pas valide.

- ou -

Les caractères de nouvelle ligne dans les valeurs d’en-tête doivent être suivis d’un espace.</exception>
    </member>
    <member name="M:System.Net.Http.Headers.HttpHeaders.Add(System.String,System.String)">
      <summary vsli:raw="Adds the specified header and its value into the &lt;see cref=&quot;T:System.Net.Http.Headers.HttpHeaders&quot; /&gt; collection.">Ajoute l'en-tête spécifié et sa valeur dans la collection de <see cref="T:System.Net.Http.Headers.HttpHeaders" />.</summary>
      <param name="name" vsli:raw="The header to add to the collection.">En-tête à ajouter à la collection.</param>
      <param name="value" vsli:raw="The content of the header.">Contenu de l'en-tête.</param>
      <exception cref="T:System.ArgumentException" vsli:raw="The name cannot be null or empty.">Le nom ne peut pas être null ou vide.</exception>
      <exception cref="T:System.InvalidOperationException" vsli:raw="Misused header name. Make sure request headers are used with HttpRequestMessage, response headers with HttpResponseMessage, and content headers with HttpContent objects.">Nom de l’en-tête mal utilisé. Assurez-vous que les en-têtes de requête sont utilisés avec HttpRequestMessage, les en-têtes de réponse avec HttpResponseMessage et les en-têtes de contenu avec les objets HttpContent.</exception>
      <exception cref="T:System.FormatException" vsli:raw="The header name format is invalid.&#xA;&#xA;-or-&#xA;&#xA;New line characters in header values must be followed by a white-space character.">Le format du nom d’en-tête n’est pas valide.

- ou -

Les caractères de nouvelle ligne dans les valeurs d’en-tête doivent être suivis d’un espace.</exception>
    </member>
    <member name="M:System.Net.Http.Headers.HttpHeaders.Clear">
      <summary vsli:raw="Removes all headers from the &lt;see cref=&quot;T:System.Net.Http.Headers.HttpHeaders&quot; /&gt; collection.">Supprime tous les en-têtes de la collection <see cref="T:System.Net.Http.Headers.HttpHeaders" />.</summary>
    </member>
    <member name="M:System.Net.Http.Headers.HttpHeaders.Contains(System.String)">
      <summary vsli:raw="Returns if  a specific header exists in the &lt;see cref=&quot;T:System.Net.Http.Headers.HttpHeaders&quot; /&gt; collection.">Retourne une valeur si un en-tête spécifique existe dans la collection <see cref="T:System.Net.Http.Headers.HttpHeaders" />.</summary>
      <param name="name" vsli:raw="The specific header.">L’en-tête spécifique.</param>
      <returns vsli:raw="&lt;see langword=&quot;true&quot; /&gt; if the specified header exists in the collection; otherwise &lt;see langword=&quot;false&quot; /&gt;.">
        <see langword="true" /> si le style de table spécifié existe dans la collection ; sinon, <see langword="false" />.</returns>
    </member>
    <member name="M:System.Net.Http.Headers.HttpHeaders.GetEnumerator">
      <summary vsli:raw="Returns an enumerator that can iterate through the &lt;see cref=&quot;T:System.Net.Http.Headers.HttpHeaders&quot; /&gt; instance.">Retourne un énumérateur qui peut itérer au sein de l'instance <see cref="T:System.Net.Http.Headers.HttpHeaders" />.</summary>
      <returns vsli:raw="An enumerator for the &lt;see cref=&quot;T:System.Net.Http.Headers.HttpHeaders&quot; /&gt;.">Énumérateur pour <see cref="T:System.Net.Http.Headers.HttpHeaders" />.</returns>
    </member>
    <member name="M:System.Net.Http.Headers.HttpHeaders.GetValues(System.String)">
      <summary vsli:raw="Returns all header values for a specified header stored in the &lt;see cref=&quot;T:System.Net.Http.Headers.HttpHeaders&quot; /&gt; collection.">Retourne toutes les valeurs d’en-tête pour un en-tête spécifique stocké dans la collection <see cref="T:System.Net.Http.Headers.HttpHeaders" />.</summary>
      <param name="name" vsli:raw="The specified header to return values for.">L’en-tête spécifié pour lequel retourner les valeurs.</param>
      <exception cref="T:System.InvalidOperationException" vsli:raw="The header cannot be found.">L’en-tête est introuvable.</exception>
      <returns vsli:raw="An array of header strings.">Tableau de chaînes d'en-tête.</returns>
    </member>
    <member name="M:System.Net.Http.Headers.HttpHeaders.Remove(System.String)">
      <summary vsli:raw="Removes the specified header from the &lt;see cref=&quot;T:System.Net.Http.Headers.HttpHeaders&quot; /&gt; collection.">Supprime l'en-tête spécifié de la collection <see cref="T:System.Net.Http.Headers.HttpHeaders" />.</summary>
      <param name="name" vsli:raw="The name of the header to remove from the collection.">Nom de l’en-tête à supprimer de la collection.</param>
      <returns vsli:raw="&lt;see langword=&quot;true&quot; /&gt; if &lt;paramref name=&quot;name&quot; /&gt; is successfully removed; otherwise, &lt;see langword=&quot;false&quot; /&gt;.  This method also returns &lt;see langword=&quot;false&quot; /&gt; if &lt;paramref name=&quot;item&quot; /&gt; was not found in the &lt;see cref=&quot;T:System.Net.Http.Headers.HttpHeaders&quot; /&gt; collection or if &lt;paramref name=&quot;item&quot; /&gt; is &lt;see langword=&quot;null&quot; /&gt;.">Retourne <see cref="T:System.Boolean" />.</returns>
    </member>
    <member name="M:System.Net.Http.Headers.HttpHeaders.System#Collections#IEnumerable#GetEnumerator">
      <summary vsli:raw="Gets an enumerator that can iterate through a &lt;see cref=&quot;T:System.Net.Http.Headers.HttpHeaders&quot; /&gt;.">Obtient un énumérateur capable d’itérer au sein d’un <see cref="T:System.Net.Http.Headers.HttpHeaders" />.</summary>
      <returns vsli:raw="An instance of an implementation of an &lt;see cref=&quot;T:System.Collections.IEnumerator&quot; /&gt; that can iterate through a &lt;see cref=&quot;T:System.Net.Http.Headers.HttpHeaders&quot; /&gt;.">Une instance d’une implémentation d’un <see cref="T:System.Collections.IEnumerator" /> qui peut itérer au sein d’un <see cref="T:System.Net.Http.Headers.HttpHeaders" />.</returns>
    </member>
    <member name="M:System.Net.Http.Headers.HttpHeaders.ToString">
      <summary vsli:raw="Returns a string that represents the current &lt;see cref=&quot;T:System.Net.Http.Headers.HttpHeaders&quot; /&gt; object.">Retourne une chaîne qui représente l'objet <see cref="T:System.Net.Http.Headers.HttpHeaders" /> actuel.</summary>
      <returns vsli:raw="A string that represents the current object.">Chaîne qui représente l'objet actuel.</returns>
    </member>
    <member name="M:System.Net.Http.Headers.HttpHeaders.TryAddWithoutValidation(System.String,System.Collections.Generic.IEnumerable{System.String})">
      <summary vsli:raw="Returns a value that indicates whether the specified header and its values were added to the &lt;see cref=&quot;T:System.Net.Http.Headers.HttpHeaders&quot; /&gt; collection without validating the provided information.">Retourne une valeur qui indique si l’en-tête spécifié et ses valeurs ont été ajoutés à la collection <see cref="T:System.Net.Http.Headers.HttpHeaders" /> sans valider les informations fournies.</summary>
      <param name="name" vsli:raw="The header to add to the collection.">En-tête à ajouter à la collection.</param>
      <param name="values" vsli:raw="The values of the header.">Les valeurs de l'en-tête.</param>
      <returns vsli:raw="&lt;see langword=&quot;true&quot; /&gt; if the specified header &lt;paramref name=&quot;name&quot; /&gt; and &lt;paramref name=&quot;values&quot; /&gt; could be added to the collection; otherwise &lt;see langword=&quot;false&quot; /&gt;.">
        <see langword="true" /> si <paramref name="name" /> et <paramref name="values" /> de l’en-tête spécifié ont pu être ajoutés à la collection, sinon <see langword="false" />.</returns>
    </member>
    <member name="M:System.Net.Http.Headers.HttpHeaders.TryAddWithoutValidation(System.String,System.String)">
      <summary vsli:raw="Returns a value that indicates whether the specified header and its value were added to the &lt;see cref=&quot;T:System.Net.Http.Headers.HttpHeaders&quot; /&gt; collection without validating the provided information.">Retourne une valeur qui indique si l’en-tête spécifié et sa valeur ont été ajoutés à la collection <see cref="T:System.Net.Http.Headers.HttpHeaders" /> sans valider les informations fournies.</summary>
      <param name="name" vsli:raw="The header to add to the collection.">En-tête à ajouter à la collection.</param>
      <param name="value" vsli:raw="The content of the header.">Contenu de l'en-tête.</param>
      <returns vsli:raw="&lt;see langword=&quot;true&quot; /&gt; if the specified header &lt;paramref name=&quot;name&quot; /&gt; and &lt;paramref name=&quot;value&quot; /&gt; could be added to the collection; otherwise &lt;see langword=&quot;false&quot; /&gt;.">
        <see langword="true" /> si <paramref name="name" /> et <paramref name="value" /> de l’en-tête spécifié ont pu être ajoutés à la collection, sinon <see langword="false" />.</returns>
    </member>
    <member name="M:System.Net.Http.Headers.HttpHeaders.TryGetValues(System.String,System.Collections.Generic.IEnumerable{System.String}@)">
      <summary vsli:raw="Return if a specified header and specified values are stored in the &lt;see cref=&quot;T:System.Net.Http.Headers.HttpHeaders&quot; /&gt; collection.">Retourne si un en-tête et des valeurs spécifiées sont stockés dans la collection <see cref="T:System.Net.Http.Headers.HttpHeaders" />.</summary>
      <param name="name" vsli:raw="The specified header.">L’en-tête spécifié.</param>
      <param name="values" vsli:raw="The specified header values.">Les valeurs d’en-tête spécifiées.</param>
      <returns vsli:raw="&lt;see langword=&quot;true&quot; /&gt; if the specified header &lt;paramref name=&quot;name&quot; /&gt; and &lt;see langword=&quot;values&quot; /&gt; are stored in the collection; otherwise &lt;see langword=&quot;false&quot; /&gt;.">
        <see langword="true" /> est l'en-tête spécifié et <paramref name="name" /> et <see langword="values" /> sont stockés dans la collection ; sinon <see langword="false" />.</returns>
    </member>
    <member name="T:System.Net.Http.Headers.HttpHeaderValueCollection`1">
      <summary vsli:raw="Represents a collection of header values.">Représente une collection de valeurs d'en-tête.</summary>
      <typeparam name="T" vsli:raw="The header collection type.">Type de collection d'en-têtes.</typeparam>
    </member>
    <member name="M:System.Net.Http.Headers.HttpHeaderValueCollection`1.Add(`0)">
      <summary vsli:raw="Adds an entry to the &lt;see cref=&quot;T:System.Net.Http.Headers.HttpHeaderValueCollection`1&quot; /&gt;.">Ajoute une entrée à <see cref="T:System.Net.Http.Headers.HttpHeaderValueCollection`1" />.</summary>
      <param name="item" vsli:raw="The item to add to the header collection.">Élément à ajouter à la collection d'en-têtes.</param>
    </member>
    <member name="M:System.Net.Http.Headers.HttpHeaderValueCollection`1.Clear">
      <summary vsli:raw="Removes all entries from the &lt;see cref=&quot;T:System.Net.Http.Headers.HttpHeaderValueCollection`1&quot; /&gt;.">Supprime toutes les entrées de <see cref="T:System.Net.Http.Headers.HttpHeaderValueCollection`1" />.</summary>
    </member>
    <member name="M:System.Net.Http.Headers.HttpHeaderValueCollection`1.Contains(`0)">
      <summary vsli:raw="Determines if the &lt;see cref=&quot;T:System.Net.Http.Headers.HttpHeaderValueCollection`1&quot; /&gt; contains an item.">Détermine si <see cref="T:System.Net.Http.Headers.HttpHeaderValueCollection`1" /> contient un élément.</summary>
      <param name="item" vsli:raw="The item to find to the header collection.">L’élément à rechercher dans la collection d’en-têtes.</param>
      <returns vsli:raw="&lt;see langword=&quot;true&quot; /&gt; if the entry is contained in the &lt;see cref=&quot;T:System.Net.Http.Headers.HttpHeaderValueCollection`1&quot; /&gt; instance; otherwise, &lt;see langword=&quot;false&quot; /&gt;.">
        <see langword="true" /> si l’entrée se trouve dans l’instance <see cref="T:System.Net.Http.Headers.HttpHeaderValueCollection`1" /> ; sinon, <see langword="false" />.</returns>
    </member>
    <member name="M:System.Net.Http.Headers.HttpHeaderValueCollection`1.CopyTo(`0[],System.Int32)">
      <summary vsli:raw="Copies the entire &lt;see cref=&quot;T:System.Net.Http.Headers.HttpHeaderValueCollection`1&quot; /&gt; to a compatible one-dimensional &lt;see cref=&quot;T:System.Array&quot; /&gt;, starting at the specified index of the target array.">Copie l'ensemble de l'objet <see cref="T:System.Net.Http.Headers.HttpHeaderValueCollection`1" /> vers un objet <see cref="T:System.Array" /> unidimensionnel compatible, en commençant à l'index spécifié du tableau cible.</summary>
      <param name="array" vsli:raw="The one-dimensional &lt;see cref=&quot;T:System.Array&quot; /&gt; that is the destination of the elements copied from &lt;see cref=&quot;T:System.Net.Http.Headers.HttpHeaderValueCollection`1&quot; /&gt;. The &lt;see cref=&quot;T:System.Array&quot; /&gt; must have zero-based indexing.">
        <see cref="T:System.Array" /> unidimensionnel qui constitue la destination des éléments copiés à partir de <see cref="T:System.Net.Http.Headers.HttpHeaderValueCollection`1" />. <see cref="T:System.Array" /> doit avoir une indexation de base zéro.</param>
      <param name="arrayIndex" vsli:raw="The zero-based index in &lt;paramref name=&quot;array&quot; /&gt; at which copying begins.">Index de base zéro dans l'<paramref name="array" /> à partir duquel la copie commence.</param>
    </member>
    <member name="M:System.Net.Http.Headers.HttpHeaderValueCollection`1.GetEnumerator">
      <summary vsli:raw="Returns an enumerator that iterates through the &lt;see cref=&quot;T:System.Net.Http.Headers.HttpHeaderValueCollection`1&quot; /&gt;.">Retourne un énumérateur qui itère au sein de <see cref="T:System.Net.Http.Headers.HttpHeaderValueCollection`1" />.</summary>
      <returns vsli:raw="An enumerator for the &lt;see cref=&quot;T:System.Net.Http.Headers.HttpHeaderValueCollection`1&quot; /&gt; instance.">Énumérateur pour l'instance <see cref="T:System.Net.Http.Headers.HttpHeaderValueCollection`1" />.</returns>
    </member>
    <member name="M:System.Net.Http.Headers.HttpHeaderValueCollection`1.ParseAdd(System.String)">
      <summary vsli:raw="Parses and adds an entry to the &lt;see cref=&quot;T:System.Net.Http.Headers.HttpHeaderValueCollection`1&quot; /&gt;.">Analyse et ajoute une entrée à <see cref="T:System.Net.Http.Headers.HttpHeaderValueCollection`1" />.</summary>
      <param name="input" vsli:raw="The entry to add.">Entrée à ajouter.</param>
    </member>
    <member name="M:System.Net.Http.Headers.HttpHeaderValueCollection`1.Remove(`0)">
      <summary vsli:raw="Removes the specified item from the &lt;see cref=&quot;T:System.Net.Http.Headers.HttpHeaderValueCollection`1&quot; /&gt;.">Supprime l’élément spécifié de <see cref="T:System.Net.Http.Headers.HttpHeaderValueCollection`1" />.</summary>
      <param name="item" vsli:raw="The item to remove.">Élément à supprimer.</param>
      <returns vsli:raw="&lt;see langword=&quot;true&quot; /&gt; if the &lt;paramref name=&quot;item&quot; /&gt; was removed from the &lt;see cref=&quot;T:System.Net.Http.Headers.HttpHeaderValueCollection`1&quot; /&gt; instance; otherwise, &lt;see langword=&quot;false&quot; /&gt;.">
        <see langword="true" /> si le <paramref name="item" /> a été supprimé de l’instance  <see cref="T:System.Net.Http.Headers.HttpHeaderValueCollection`1" /> ; sinon, <see langword="false" /></returns>
    </member>
    <member name="M:System.Net.Http.Headers.HttpHeaderValueCollection`1.System#Collections#IEnumerable#GetEnumerator">
      <summary vsli:raw="Returns an enumerator that iterates through the &lt;see cref=&quot;T:System.Net.Http.Headers.HttpHeaderValueCollection`1&quot; /&gt;.">Retourne un énumérateur qui itère au sein de <see cref="T:System.Net.Http.Headers.HttpHeaderValueCollection`1" />.</summary>
      <returns vsli:raw="An enumerator for the &lt;see cref=&quot;T:System.Net.Http.Headers.HttpHeaderValueCollection`1&quot; /&gt; instance.">Énumérateur pour l'instance <see cref="T:System.Net.Http.Headers.HttpHeaderValueCollection`1" />.</returns>
    </member>
    <member name="M:System.Net.Http.Headers.HttpHeaderValueCollection`1.ToString">
      <summary vsli:raw="Returns a string that represents the current &lt;see cref=&quot;T:System.Net.Http.Headers.HttpHeaderValueCollection`1&quot; /&gt; object. object.">Retourne une chaîne qui représente l'objet <see cref="T:System.Net.Http.Headers.HttpHeaderValueCollection`1" /> actuel. .</summary>
      <returns vsli:raw="A string that represents the current object.">Chaîne qui représente l'objet actuel.</returns>
    </member>
    <member name="M:System.Net.Http.Headers.HttpHeaderValueCollection`1.TryParseAdd(System.String)">
      <summary vsli:raw="Determines whether the input could be parsed and added to the &lt;see cref=&quot;T:System.Net.Http.Headers.HttpHeaderValueCollection`1&quot; /&gt;.">Détermine si l’entrée peut être analysée et ajoutée à <see cref="T:System.Net.Http.Headers.HttpHeaderValueCollection`1" />.</summary>
      <param name="input" vsli:raw="The entry to validate.">L’entrée à valider.</param>
      <returns vsli:raw="&lt;see langword=&quot;true&quot; /&gt; if the &lt;paramref name=&quot;input&quot; /&gt; could be parsed and added to the &lt;see cref=&quot;T:System.Net.Http.Headers.HttpHeaderValueCollection`1&quot; /&gt; instance; otherwise, &lt;see langword=&quot;false&quot; /&gt;.">
        <see langword="true" /> si <paramref name="input" /> peut être analysée et ajoutée à l'instance <see cref="T:System.Net.Http.Headers.HttpHeaderValueCollection`1" /> ; sinon, <see langword="false" /></returns>
    </member>
    <member name="P:System.Net.Http.Headers.HttpHeaderValueCollection`1.Count">
      <summary vsli:raw="Gets the number of headers in the &lt;see cref=&quot;T:System.Net.Http.Headers.HttpHeaderValueCollection`1&quot; /&gt;.">Obtient le nombre d'en-têtes de la collection <see cref="T:System.Net.Http.Headers.HttpHeaderValueCollection`1" />.</summary>
      <returns vsli:raw="The number of headers in a collection.">Nombre d’en-têtes dans une collection</returns>
    </member>
    <member name="P:System.Net.Http.Headers.HttpHeaderValueCollection`1.IsReadOnly">
      <summary vsli:raw="Gets a value indicating whether the &lt;see cref=&quot;T:System.Net.Http.Headers.HttpHeaderValueCollection`1&quot; /&gt; instance is read-only.">Obtient une valeur indiquant si l’instance <see cref="T:System.Net.Http.Headers.HttpHeaderValueCollection`1" /> est en lecture seule.</summary>
      <returns vsli:raw="&lt;see langword=&quot;true&quot; /&gt; if the &lt;see cref=&quot;T:System.Net.Http.Headers.HttpHeaderValueCollection`1&quot; /&gt; instance is read-only; otherwise, &lt;see langword=&quot;false&quot; /&gt;.">
        <see langword="true" /> si l'instance du <see cref="T:System.Net.Http.Headers.HttpHeaderValueCollection`1" /> est en lecture seule ; sinon, <see langword="false" />.</returns>
    </member>
    <member name="T:System.Net.Http.Headers.HttpRequestHeaders">
      <summary vsli:raw="Represents the collection of Request Headers as defined in RFC 2616.">Représente la collection d’en-têtes de requête, tel que défini dans le document RFC 2616.</summary>
    </member>
    <member name="P:System.Net.Http.Headers.HttpRequestHeaders.Accept">
      <summary vsli:raw="Gets the value of the &lt;see langword=&quot;Accept&quot; /&gt; header for an HTTP request.">Récupère la valeur de l’en-tête <see langword="Accept" /> d’une requête HTTP.</summary>
      <returns vsli:raw="The value of the &lt;see langword=&quot;Accept&quot; /&gt; header for an HTTP request.">La valeur de l’en-tête <see langword="Accept" /> d’une requête HTTP.</returns>
    </member>
    <member name="P:System.Net.Http.Headers.HttpRequestHeaders.AcceptCharset">
      <summary vsli:raw="Gets the value of the &lt;see langword=&quot;Accept-Charset&quot; /&gt; header for an HTTP request.">Récupère la valeur de l’en-tête <see langword="Accept-Charset" /> d’une requête HTTP.</summary>
      <returns vsli:raw="The value of the &lt;see langword=&quot;Accept-Charset&quot; /&gt; header for an HTTP request.">La valeur de l’en-tête <see langword="Accept-Charset" /> d’une requête HTTP.</returns>
    </member>
    <member name="P:System.Net.Http.Headers.HttpRequestHeaders.AcceptEncoding">
      <summary vsli:raw="Gets the value of the &lt;see langword=&quot;Accept-Encoding&quot; /&gt; header for an HTTP request.">Récupère la valeur de l’en-tête <see langword="Accept-Encoding" /> d’une requête HTTP.</summary>
      <returns vsli:raw="The value of the &lt;see langword=&quot;Accept-Encoding&quot; /&gt; header for an HTTP request.">La valeur de l’en-tête <see langword="Accept-Encoding" /> d’une requête HTTP.</returns>
    </member>
    <member name="P:System.Net.Http.Headers.HttpRequestHeaders.AcceptLanguage">
      <summary vsli:raw="Gets the value of the &lt;see langword=&quot;Accept-Language&quot; /&gt; header for an HTTP request.">Récupère la valeur de l’en-tête <see langword="Accept-Language" /> d’une requête HTTP.</summary>
      <returns vsli:raw="The value of the &lt;see langword=&quot;Accept-Language&quot; /&gt; header for an HTTP request.">La valeur de l’en-tête <see langword="Accept-Language" /> d’une requête HTTP.</returns>
    </member>
    <member name="P:System.Net.Http.Headers.HttpRequestHeaders.Authorization">
      <summary vsli:raw="Gets or sets the value of the &lt;see langword=&quot;Authorization&quot; /&gt; header for an HTTP request.">Récupère ou définit la valeur de l’en-tête <see langword="Authorization" /> d’une requête HTTP.</summary>
      <returns vsli:raw="The value of the &lt;see langword=&quot;Authorization&quot; /&gt; header for an HTTP request.">La valeur de l’en-tête <see langword="Authorization" /> d’une requête HTTP.</returns>
    </member>
    <member name="P:System.Net.Http.Headers.HttpRequestHeaders.CacheControl">
      <summary vsli:raw="Gets or sets the value of the &lt;see langword=&quot;Cache-Control&quot; /&gt; header for an HTTP request.">Récupère ou définit la valeur de l’en-tête <see langword="Cache-Control" /> d’une requête HTTP.</summary>
      <returns vsli:raw="The value of the &lt;see langword=&quot;Cache-Control&quot; /&gt; header for an HTTP request.">La valeur de l’en-tête <see langword="Cache-Control" /> d’une requête HTTP.</returns>
    </member>
    <member name="P:System.Net.Http.Headers.HttpRequestHeaders.Connection">
      <summary vsli:raw="Gets the value of the &lt;see langword=&quot;Connection&quot; /&gt; header for an HTTP request.">Récupère la valeur de l’en-tête <see langword="Connection" /> d’une requête HTTP.</summary>
      <returns vsli:raw="The value of the &lt;see langword=&quot;Connection&quot; /&gt; header for an HTTP request.">La valeur de l’en-tête <see langword="Connection" /> d’une requête HTTP.</returns>
    </member>
    <member name="P:System.Net.Http.Headers.HttpRequestHeaders.ConnectionClose">
      <summary vsli:raw="Gets or sets a value that indicates if the &lt;see langword=&quot;Connection&quot; /&gt; header for an HTTP request contains Close.">Obtient ou définit une valeur qui indique si l’en-tête <see langword="Connection" /> pour une requête HTTP contient la valeur « Close ».</summary>
      <returns vsli:raw="&lt;see langword=&quot;true&quot; /&gt; if the &lt;see langword=&quot;Connection&quot; /&gt; header contains Close, otherwise &lt;see langword=&quot;false&quot; /&gt;.">
        <see langword="true" /> si l’en-tête <see langword="Connection" /> contient la valeur « Close », sinon <see langword="false" />.</returns>
    </member>
    <member name="P:System.Net.Http.Headers.HttpRequestHeaders.Date">
      <summary vsli:raw="Gets or sets the value of the &lt;see langword=&quot;Date&quot; /&gt; header for an HTTP request.">Récupère ou définit la valeur de l’en-tête <see langword="Date" /> d’une requête HTTP.</summary>
      <returns vsli:raw="The value of the &lt;see langword=&quot;Date&quot; /&gt; header for an HTTP request.">La valeur de l’en-tête <see langword="Date" /> d’une requête HTTP.</returns>
    </member>
    <member name="P:System.Net.Http.Headers.HttpRequestHeaders.Expect">
      <summary vsli:raw="Gets the value of the &lt;see langword=&quot;Expect&quot; /&gt; header for an HTTP request.">Récupère la valeur de l’en-tête <see langword="Expect" /> d’une requête HTTP.</summary>
      <returns vsli:raw="The value of the &lt;see langword=&quot;Expect&quot; /&gt; header for an HTTP request.">La valeur de l’en-tête <see langword="Expect" /> d’une requête HTTP.</returns>
    </member>
    <member name="P:System.Net.Http.Headers.HttpRequestHeaders.ExpectContinue">
      <summary vsli:raw="Gets or sets a value that indicates if the &lt;see langword=&quot;Expect&quot; /&gt; header for an HTTP request contains Continue.">Récupère ou définit une valeur qui indique si l’en-tête <see langword="Expect" /> d’une demande HTTP contient la valeur Continue.</summary>
      <returns vsli:raw="&lt;see langword=&quot;true&quot; /&gt; if the &lt;see langword=&quot;Expect&quot; /&gt; header contains Continue, otherwise &lt;see langword=&quot;false&quot; /&gt;.">
        <see langword="true" /> si l’en-tête <see langword="Expect" /> contient la valeur Continue ; sinon, <see langword="false" />.</returns>
    </member>
    <member name="P:System.Net.Http.Headers.HttpRequestHeaders.From">
      <summary vsli:raw="Gets or sets the value of the &lt;see langword=&quot;From&quot; /&gt; header for an HTTP request.">Récupère ou définit la valeur de l’en-tête <see langword="From" /> d’une requête HTTP.</summary>
      <returns vsli:raw="The value of the &lt;see langword=&quot;From&quot; /&gt; header for an HTTP request.">La valeur de l’en-tête <see langword="From" /> d’une requête HTTP.</returns>
    </member>
    <member name="P:System.Net.Http.Headers.HttpRequestHeaders.Host">
      <summary vsli:raw="Gets or sets the value of the &lt;see langword=&quot;Host&quot; /&gt; header for an HTTP request.">Récupère ou définit la valeur de l’en-tête <see langword="Host" /> d’une requête HTTP.</summary>
      <returns vsli:raw="The value of the &lt;see langword=&quot;Host&quot; /&gt; header for an HTTP request.">La valeur de l’en-tête <see langword="Host" /> d’une requête HTTP.</returns>
    </member>
    <member name="P:System.Net.Http.Headers.HttpRequestHeaders.IfMatch">
      <summary vsli:raw="Gets the value of the &lt;see langword=&quot;If-Match&quot; /&gt; header for an HTTP request.">Récupère la valeur de l’en-tête <see langword="If-Match" /> d’une requête HTTP.</summary>
      <returns vsli:raw="Returns &lt;see cref=&quot;T:System.Net.Http.Headers.HttpHeaderValueCollection`1&quot; /&gt;.  &#xA;  &#xA; The value of the &lt;see langword=&quot;If-Match&quot; /&gt; header for an HTTP request.">Retourne <see cref="T:System.Net.Http.Headers.HttpHeaderValueCollection`1" />.  
  
La valeur de l’en-tête <see langword="If-Match" /> d’une requête HTTP.</returns>
    </member>
    <member name="P:System.Net.Http.Headers.HttpRequestHeaders.IfModifiedSince">
      <summary vsli:raw="Gets or sets the value of the &lt;see langword=&quot;If-Modified-Since&quot; /&gt; header for an HTTP request.">Récupère ou définit la valeur de l’en-tête <see langword="If-Modified-Since" /> d’une requête HTTP.</summary>
      <returns vsli:raw="The value of the &lt;see langword=&quot;If-Modified-Since&quot; /&gt; header for an HTTP request.">La valeur de l’en-tête <see langword="If-Modified-Since" /> d’une requête HTTP.</returns>
    </member>
    <member name="P:System.Net.Http.Headers.HttpRequestHeaders.IfNoneMatch">
      <summary vsli:raw="Gets the value of the &lt;see langword=&quot;If-None-Match&quot; /&gt; header for an HTTP request.">Récupère la valeur de l’en-tête <see langword="If-None-Match" /> d’une requête HTTP.</summary>
      <returns vsli:raw="Gets the value of the &lt;see langword=&quot;If-None-Match&quot; /&gt; header for an HTTP request.">Récupère la valeur de l’en-tête <see langword="If-None-Match" /> d’une requête HTTP.</returns>
    </member>
    <member name="P:System.Net.Http.Headers.HttpRequestHeaders.IfRange">
      <summary vsli:raw="Gets or sets the value of the &lt;see langword=&quot;If-Range&quot; /&gt; header for an HTTP request.">Récupère ou définit la valeur de l’en-tête <see langword="If-Range" /> d’une requête HTTP.</summary>
      <returns vsli:raw="The value of the &lt;see langword=&quot;If-Range&quot; /&gt; header for an HTTP request.">La valeur de l’en-tête <see langword="If-Range" /> d’une requête HTTP.</returns>
    </member>
    <member name="P:System.Net.Http.Headers.HttpRequestHeaders.IfUnmodifiedSince">
      <summary vsli:raw="Gets or sets the value of the &lt;see langword=&quot;If-Unmodified-Since&quot; /&gt; header for an HTTP request.">Récupère ou définit la valeur de l’en-tête <see langword="If-Unmodified-Since" /> d’une requête HTTP.</summary>
      <returns vsli:raw="The value of the &lt;see langword=&quot;If-Unmodified-Since&quot; /&gt; header for an HTTP request.">La valeur de l’en-tête <see langword="If-Unmodified-Since" /> d’une requête HTTP.</returns>
    </member>
    <member name="P:System.Net.Http.Headers.HttpRequestHeaders.MaxForwards">
      <summary vsli:raw="Gets or sets the value of the &lt;see langword=&quot;Max-Forwards&quot; /&gt; header for an HTTP request.">Récupère ou définit la valeur de l’en-tête <see langword="Max-Forwards" /> d’une requête HTTP.</summary>
      <returns vsli:raw="The value of the &lt;see langword=&quot;Max-Forwards&quot; /&gt; header for an HTTP request.">La valeur de l’en-tête <see langword="Max-Forwards" /> d’une requête HTTP.</returns>
    </member>
    <member name="P:System.Net.Http.Headers.HttpRequestHeaders.Pragma">
      <summary vsli:raw="Gets the value of the &lt;see langword=&quot;Pragma&quot; /&gt; header for an HTTP request.">Récupère la valeur de l’en-tête <see langword="Pragma" /> d’une requête HTTP.</summary>
      <returns vsli:raw="The value of the &lt;see langword=&quot;Pragma&quot; /&gt; header for an HTTP request.">La valeur de l’en-tête <see langword="Pragma" /> d’une requête HTTP.</returns>
    </member>
    <member name="P:System.Net.Http.Headers.HttpRequestHeaders.ProxyAuthorization">
      <summary vsli:raw="Gets or sets the value of the &lt;see langword=&quot;Proxy-Authorization&quot; /&gt; header for an HTTP request.">Récupère ou définit la valeur de l’en-tête <see langword="Proxy-Authorization" /> d’une requête HTTP.</summary>
      <returns vsli:raw="The value of the &lt;see langword=&quot;Proxy-Authorization&quot; /&gt; header for an HTTP request.">La valeur de l’en-tête <see langword="Proxy-Authorization" /> d’une requête HTTP.</returns>
    </member>
    <member name="P:System.Net.Http.Headers.HttpRequestHeaders.Range">
      <summary vsli:raw="Gets or sets the value of the &lt;see langword=&quot;Range&quot; /&gt; header for an HTTP request.">Récupère ou définit la valeur de l’en-tête <see langword="Range" /> d’une requête HTTP.</summary>
      <returns vsli:raw="The value of the &lt;see langword=&quot;Range&quot; /&gt; header for an HTTP request.">La valeur de l’en-tête <see langword="Range" /> d’une requête HTTP.</returns>
    </member>
    <member name="P:System.Net.Http.Headers.HttpRequestHeaders.Referrer">
      <summary vsli:raw="Gets or sets the value of the &lt;see langword=&quot;Referer&quot; /&gt; header for an HTTP request.">Récupère ou définit la valeur de l’en-tête <see langword="Referer" /> d’une requête HTTP.</summary>
      <returns vsli:raw="The value of the &lt;see langword=&quot;Referer&quot; /&gt; header for an HTTP request.">La valeur de l’en-tête <see langword="Referer" /> d’une requête HTTP.</returns>
    </member>
    <member name="P:System.Net.Http.Headers.HttpRequestHeaders.TE">
      <summary vsli:raw="Gets the value of the &lt;see langword=&quot;TE&quot; /&gt; header for an HTTP request.">Récupère la valeur de l’en-tête <see langword="TE" /> d’une requête HTTP.</summary>
      <returns vsli:raw="The value of the &lt;see langword=&quot;TE&quot; /&gt; header for an HTTP request.">La valeur de l’en-tête <see langword="TE" /> d’une requête HTTP.</returns>
    </member>
    <member name="P:System.Net.Http.Headers.HttpRequestHeaders.Trailer">
      <summary vsli:raw="Gets the value of the &lt;see langword=&quot;Trailer&quot; /&gt; header for an HTTP request.">Récupère la valeur de l’en-tête <see langword="Trailer" /> d’une requête HTTP.</summary>
      <returns vsli:raw="The value of the &lt;see langword=&quot;Trailer&quot; /&gt; header for an HTTP request.">La valeur de l’en-tête <see langword="Trailer" /> d’une requête HTTP.</returns>
    </member>
    <member name="P:System.Net.Http.Headers.HttpRequestHeaders.TransferEncoding">
      <summary vsli:raw="Gets the value of the &lt;see langword=&quot;Transfer-Encoding&quot; /&gt; header for an HTTP request.">Récupère la valeur de l’en-tête <see langword="Transfer-Encoding" /> d’une requête HTTP.</summary>
      <returns vsli:raw="The value of the &lt;see langword=&quot;Transfer-Encoding&quot; /&gt; header for an HTTP request.">La valeur de l’en-tête <see langword="Transfer-Encoding" /> d’une requête HTTP.</returns>
    </member>
    <member name="P:System.Net.Http.Headers.HttpRequestHeaders.TransferEncodingChunked">
      <summary vsli:raw="Gets or sets a value that indicates if the &lt;see langword=&quot;Transfer-Encoding&quot; /&gt; header for an HTTP request contains chunked.">Obtient ou définit une valeur qui indique si l’en-tête <see langword="Transfer-Encoding" /> pour une requête HTTP contient la valeur « Chunked ».</summary>
      <returns vsli:raw="&lt;see langword=&quot;true&quot; /&gt; if the &lt;see langword=&quot;Transfer-Encoding&quot; /&gt; header contains chunked, otherwise &lt;see langword=&quot;false&quot; /&gt;.">
        <see langword="true" /> si l’en-tête <see langword="Transfer-Encoding" /> contient des segments, sinon <see langword="false" />.</returns>
    </member>
    <member name="P:System.Net.Http.Headers.HttpRequestHeaders.Upgrade">
      <summary vsli:raw="Gets the value of the &lt;see langword=&quot;Upgrade&quot; /&gt; header for an HTTP request.">Récupère la valeur de l’en-tête <see langword="Upgrade" /> d’une requête HTTP.</summary>
      <returns vsli:raw="The value of the &lt;see langword=&quot;Upgrade&quot; /&gt; header for an HTTP request.">La valeur de l’en-tête <see langword="Upgrade" /> d’une requête HTTP.</returns>
    </member>
    <member name="P:System.Net.Http.Headers.HttpRequestHeaders.UserAgent">
      <summary vsli:raw="Gets the value of the &lt;see langword=&quot;User-Agent&quot; /&gt; header for an HTTP request.">Récupère la valeur de l’en-tête <see langword="User-Agent" /> d’une requête HTTP.</summary>
      <returns vsli:raw="The value of the &lt;see langword=&quot;User-Agent&quot; /&gt; header for an HTTP request.">La valeur de l’en-tête <see langword="User-Agent" /> d’une requête HTTP.</returns>
    </member>
    <member name="P:System.Net.Http.Headers.HttpRequestHeaders.Via">
      <summary vsli:raw="Gets the value of the &lt;see langword=&quot;Via&quot; /&gt; header for an HTTP request.">Récupère la valeur de l’en-tête <see langword="Via" /> d’une requête HTTP.</summary>
      <returns vsli:raw="The value of the &lt;see langword=&quot;Via&quot; /&gt; header for an HTTP request.">La valeur de l’en-tête <see langword="Via" /> d’une requête HTTP.</returns>
    </member>
    <member name="P:System.Net.Http.Headers.HttpRequestHeaders.Warning">
      <summary vsli:raw="Gets the value of the &lt;see langword=&quot;Warning&quot; /&gt; header for an HTTP request.">Récupère la valeur de l’en-tête <see langword="Warning" /> d’une requête HTTP.</summary>
      <returns vsli:raw="The value of the &lt;see langword=&quot;Warning&quot; /&gt; header for an HTTP request.">La valeur de l’en-tête <see langword="Warning" /> d’une requête HTTP.</returns>
    </member>
    <member name="T:System.Net.Http.Headers.HttpResponseHeaders">
      <summary vsli:raw="Represents the collection of Response Headers as defined in RFC 2616.">Représente la collection d’en-têtes de réponse, tel que défini dans le document RFC 2616.</summary>
    </member>
    <member name="P:System.Net.Http.Headers.HttpResponseHeaders.AcceptRanges">
      <summary vsli:raw="Gets the value of the &lt;see langword=&quot;Accept-Ranges&quot; /&gt; header for an HTTP response.">Obtient la valeur de l’en-tête <see langword="Accept-Ranges" /> pour une réponse HTTP.</summary>
      <returns vsli:raw="The value of the &lt;see langword=&quot;Accept-Ranges&quot; /&gt; header for an HTTP response.">Valeur de l’en-tête <see langword="Accept-Ranges" /> pour une réponse HTTP.</returns>
    </member>
    <member name="P:System.Net.Http.Headers.HttpResponseHeaders.Age">
      <summary vsli:raw="Gets or sets the value of the &lt;see langword=&quot;Age&quot; /&gt; header for an HTTP response.">Obtient ou définit la valeur de l’en-tête <see langword="Age" /> d’une réponse HTTP.</summary>
      <returns vsli:raw="The value of the &lt;see langword=&quot;Age&quot; /&gt; header for an HTTP response.">Valeur de l’en-tête <see langword="Age" /> pour une réponse HTTP.</returns>
    </member>
    <member name="P:System.Net.Http.Headers.HttpResponseHeaders.CacheControl">
      <summary vsli:raw="Gets or sets the value of the &lt;see langword=&quot;Cache-Control&quot; /&gt; header for an HTTP response.">Obtient ou définit la valeur de l’en-tête <see langword="Cache-Control" /> d’une réponse HTTP.</summary>
      <returns vsli:raw="The value of the &lt;see langword=&quot;Cache-Control&quot; /&gt; header for an HTTP response.">Valeur de l’en-tête <see langword="Cache-Control" /> pour une réponse HTTP.</returns>
    </member>
    <member name="P:System.Net.Http.Headers.HttpResponseHeaders.Connection">
      <summary vsli:raw="Gets the value of the &lt;see langword=&quot;Connection&quot; /&gt; header for an HTTP response.">Obtient la valeur de l’en-tête <see langword="Connection" /> pour une réponse HTTP.</summary>
      <returns vsli:raw="The value of the &lt;see langword=&quot;Connection&quot; /&gt; header for an HTTP response.">Valeur de l’en-tête <see langword="Connection" /> pour une réponse HTTP.</returns>
    </member>
    <member name="P:System.Net.Http.Headers.HttpResponseHeaders.ConnectionClose">
      <summary vsli:raw="Gets or sets a value that indicates if the &lt;see langword=&quot;Connection&quot; /&gt; header for an HTTP response contains Close.">Obtient ou définit une valeur qui indique si l’en-tête <see langword="Connection" /> pour une réponse HTTP contient la valeur « Close ».</summary>
      <returns vsli:raw="&lt;see langword=&quot;true&quot; /&gt; if the &lt;see langword=&quot;Connection&quot; /&gt; header contains Close, otherwise &lt;see langword=&quot;false&quot; /&gt;.">
        <see langword="true" /> si l’en-tête <see langword="Connection" /> contient la valeur « Close », sinon <see langword="false" />.</returns>
    </member>
    <member name="P:System.Net.Http.Headers.HttpResponseHeaders.Date">
      <summary vsli:raw="Gets or sets the value of the &lt;see langword=&quot;Date&quot; /&gt; header for an HTTP response.">Obtient ou définit la valeur de l’en-tête <see langword="Date" /> d’une réponse HTTP.</summary>
      <returns vsli:raw="The value of the &lt;see langword=&quot;Date&quot; /&gt; header for an HTTP response.">Valeur de l’en-tête <see langword="Date" /> pour une réponse HTTP.</returns>
    </member>
    <member name="P:System.Net.Http.Headers.HttpResponseHeaders.ETag">
      <summary vsli:raw="Gets or sets the value of the &lt;see langword=&quot;ETag&quot; /&gt; header for an HTTP response.">Obtient ou définit la valeur de l’en-tête <see langword="ETag" /> d’une réponse HTTP.</summary>
      <returns vsli:raw="The value of the &lt;see langword=&quot;ETag&quot; /&gt; header for an HTTP response.">Valeur de l’en-tête <see langword="ETag" /> pour une réponse HTTP.</returns>
    </member>
    <member name="P:System.Net.Http.Headers.HttpResponseHeaders.Location">
      <summary vsli:raw="Gets or sets the value of the &lt;see langword=&quot;Location&quot; /&gt; header for an HTTP response.">Obtient ou définit la valeur de l’en-tête <see langword="Location" /> d’une réponse HTTP.</summary>
      <returns vsli:raw="The value of the &lt;see langword=&quot;Location&quot; /&gt; header for an HTTP response.">Valeur de l’en-tête <see langword="Location" /> pour une réponse HTTP.</returns>
    </member>
    <member name="P:System.Net.Http.Headers.HttpResponseHeaders.Pragma">
      <summary vsli:raw="Gets the value of the &lt;see langword=&quot;Pragma&quot; /&gt; header for an HTTP response.">Obtient la valeur de l’en-tête <see langword="Pragma" /> pour une réponse HTTP.</summary>
      <returns vsli:raw="Returns &lt;see cref=&quot;T:System.Net.Http.Headers.HttpHeaderValueCollection`1&quot; /&gt;.  &#xA;  &#xA; The value of the &lt;see langword=&quot;Pragma&quot; /&gt; header for an HTTP response.">Retourne <see cref="T:System.Net.Http.Headers.HttpHeaderValueCollection`1" />.  
  
Valeur de l’en-tête <see langword="Pragma" /> pour une réponse HTTP.</returns>
    </member>
    <member name="P:System.Net.Http.Headers.HttpResponseHeaders.ProxyAuthenticate">
      <summary vsli:raw="Gets the value of the &lt;see langword=&quot;Proxy-Authenticate&quot; /&gt; header for an HTTP response.">Obtient la valeur de l’en-tête <see langword="Proxy-Authenticate" /> pour une réponse HTTP.</summary>
      <returns vsli:raw="The value of the &lt;see langword=&quot;Proxy-Authenticate&quot; /&gt; header for an HTTP response.">Valeur de l’en-tête <see langword="Proxy-Authenticate" /> pour une réponse HTTP.</returns>
    </member>
    <member name="P:System.Net.Http.Headers.HttpResponseHeaders.RetryAfter">
      <summary vsli:raw="Gets or sets the value of the &lt;see langword=&quot;Retry-After&quot; /&gt; header for an HTTP response.">Obtient ou définit la valeur de l’en-tête <see langword="Retry-After" /> d’une réponse HTTP.</summary>
      <returns vsli:raw="The value of the &lt;see langword=&quot;Retry-After&quot; /&gt; header for an HTTP response.">Valeur de l’en-tête <see langword="Retry-After" /> pour une réponse HTTP.</returns>
    </member>
    <member name="P:System.Net.Http.Headers.HttpResponseHeaders.Server">
      <summary vsli:raw="Gets the value of the &lt;see langword=&quot;Server&quot; /&gt; header for an HTTP response.">Obtient la valeur de l’en-tête <see langword="Server" /> pour une réponse HTTP.</summary>
      <returns vsli:raw="The value of the &lt;see langword=&quot;Server&quot; /&gt; header for an HTTP response.">Valeur de l’en-tête <see langword="Server" /> pour une réponse HTTP.</returns>
    </member>
    <member name="P:System.Net.Http.Headers.HttpResponseHeaders.Trailer">
      <summary vsli:raw="Gets the value of the &lt;see langword=&quot;Trailer&quot; /&gt; header for an HTTP response.">Obtient la valeur de l’en-tête <see langword="Trailer" /> pour une réponse HTTP.</summary>
      <returns vsli:raw="The value of the &lt;see langword=&quot;Trailer&quot; /&gt; header for an HTTP response.">Valeur de l’en-tête <see langword="Trailer" /> pour une réponse HTTP.</returns>
    </member>
    <member name="P:System.Net.Http.Headers.HttpResponseHeaders.TransferEncoding">
      <summary vsli:raw="Gets the value of the &lt;see langword=&quot;Transfer-Encoding&quot; /&gt; header for an HTTP response.">Obtient la valeur de l’en-tête <see langword="Transfer-Encoding" /> pour une réponse HTTP.</summary>
      <returns vsli:raw="The value of the &lt;see langword=&quot;Transfer-Encoding&quot; /&gt; header for an HTTP response.">Valeur de l’en-tête <see langword="Transfer-Encoding" /> pour une réponse HTTP.</returns>
    </member>
    <member name="P:System.Net.Http.Headers.HttpResponseHeaders.TransferEncodingChunked">
      <summary vsli:raw="Gets or sets a value that indicates if the &lt;see langword=&quot;Transfer-Encoding&quot; /&gt; header for an HTTP response contains chunked.">Obtient ou définit une valeur qui indique si l’en-tête <see langword="Transfer-Encoding" /> pour une réponse HTTP contient des segments.</summary>
      <returns vsli:raw="&lt;see langword=&quot;true&quot; /&gt; if the &lt;see langword=&quot;Transfer-Encoding&quot; /&gt; header contains chunked, otherwise &lt;see langword=&quot;false&quot; /&gt;.">
        <see langword="true" /> si l’en-tête <see langword="Transfer-Encoding" /> contient des segments, sinon <see langword="false" />.</returns>
    </member>
    <member name="P:System.Net.Http.Headers.HttpResponseHeaders.Upgrade">
      <summary vsli:raw="Gets the value of the &lt;see langword=&quot;Upgrade&quot; /&gt; header for an HTTP response.">Obtient la valeur de l’en-tête <see langword="Upgrade" /> pour une réponse HTTP.</summary>
      <returns vsli:raw="The value of the &lt;see langword=&quot;Upgrade&quot; /&gt; header for an HTTP response.">Valeur de l’en-tête <see langword="Upgrade" /> pour une réponse HTTP.</returns>
    </member>
    <member name="P:System.Net.Http.Headers.HttpResponseHeaders.Vary">
      <summary vsli:raw="Gets the value of the &lt;see langword=&quot;Vary&quot; /&gt; header for an HTTP response.">Obtient la valeur de l’en-tête <see langword="Vary" /> pour une réponse HTTP.</summary>
      <returns vsli:raw="The value of the &lt;see langword=&quot;Vary&quot; /&gt; header for an HTTP response.">Valeur de l’en-tête <see langword="Vary" /> pour une réponse HTTP.</returns>
    </member>
    <member name="P:System.Net.Http.Headers.HttpResponseHeaders.Via">
      <summary vsli:raw="Gets the value of the &lt;see langword=&quot;Via&quot; /&gt; header for an HTTP response.">Obtient la valeur de l’en-tête <see langword="Via" /> pour une réponse HTTP.</summary>
      <returns vsli:raw="The value of the &lt;see langword=&quot;Via&quot; /&gt; header for an HTTP response.">Valeur de l’en-tête <see langword="Via" /> pour une réponse HTTP.</returns>
    </member>
    <member name="P:System.Net.Http.Headers.HttpResponseHeaders.Warning">
      <summary vsli:raw="Gets the value of the &lt;see langword=&quot;Warning&quot; /&gt; header for an HTTP response.">Obtient la valeur de l’en-tête <see langword="Warning" /> pour une réponse HTTP.</summary>
      <returns vsli:raw="The value of the &lt;see langword=&quot;Warning&quot; /&gt; header for an HTTP response.">Valeur de l’en-tête <see langword="Warning" /> pour une réponse HTTP.</returns>
    </member>
    <member name="P:System.Net.Http.Headers.HttpResponseHeaders.WwwAuthenticate">
      <summary vsli:raw="Gets the value of the &lt;see langword=&quot;WWW-Authenticate&quot; /&gt; header for an HTTP response.">Obtient la valeur de l’en-tête <see langword="WWW-Authenticate" /> pour une réponse HTTP.</summary>
      <returns vsli:raw="The value of the &lt;see langword=&quot;WWW-Authenticate&quot; /&gt; header for an HTTP response.">Valeur de l’en-tête <see langword="WWW-Authenticate" /> pour une réponse HTTP.</returns>
    </member>
    <member name="T:System.Net.Http.Headers.MediaTypeHeaderValue">
      <summary vsli:raw="Represents a media type used in a Content-Type header as defined in the RFC 2616.">Représente un type de média utilisé dans un en-tête Content-Type défini dans la norme RFC 2616.</summary>
    </member>
    <member name="M:System.Net.Http.Headers.MediaTypeHeaderValue.#ctor(System.Net.Http.Headers.MediaTypeHeaderValue)">
      <summary vsli:raw="Initializes a new instance of the &lt;see cref=&quot;T:System.Net.Http.Headers.MediaTypeHeaderValue&quot; /&gt; class.">Initialise une nouvelle instance de la classe <see cref="T:System.Net.Http.Headers.MediaTypeHeaderValue" />.</summary>
      <param name="source" vsli:raw="A &lt;see cref=&quot;T:System.Net.Http.Headers.MediaTypeHeaderValue&quot; /&gt; object used to initialize the new instance.">Objet <see cref="T:System.Net.Http.Headers.MediaTypeHeaderValue" /> utilisé pour initialiser la nouvelle instance.</param>
    </member>
    <member name="M:System.Net.Http.Headers.MediaTypeHeaderValue.#ctor(System.String)">
      <summary vsli:raw="Initializes a new instance of the &lt;see cref=&quot;T:System.Net.Http.Headers.MediaTypeHeaderValue&quot; /&gt; class.">Initialise une nouvelle instance de la classe <see cref="T:System.Net.Http.Headers.MediaTypeHeaderValue" />.</summary>
      <param name="mediaType" vsli:raw="The source represented as a string to initialize the new instance.">Source représentée sous forme de chaîne pour initialiser la nouvelle instance.</param>
    </member>
    <member name="M:System.Net.Http.Headers.MediaTypeHeaderValue.Equals(System.Object)">
      <summary vsli:raw="Determines whether the specified &lt;see cref=&quot;T:System.Object&quot; /&gt; is equal to the current &lt;see cref=&quot;T:System.Net.Http.Headers.MediaTypeHeaderValue&quot; /&gt; object.">Détermine si l'objet <see cref="T:System.Object" /> spécifié est égal à l'objet <see cref="T:System.Net.Http.Headers.MediaTypeHeaderValue" /> actuel.</summary>
      <param name="obj" vsli:raw="The object to compare with the current object.">Objet à comparer à l'objet actuel.</param>
      <returns vsli:raw="&lt;see langword=&quot;true&quot; /&gt; if the specified &lt;see cref=&quot;T:System.Object&quot; /&gt; is equal to the current object; otherwise, &lt;see langword=&quot;false&quot; /&gt;.">
        <see langword="true" /> si le <see cref="T:System.Object" /> spécifié est égal à l’objet actuel ; sinon, <see langword="false" />.</returns>
    </member>
    <member name="M:System.Net.Http.Headers.MediaTypeHeaderValue.GetHashCode">
      <summary vsli:raw="Serves as a hash function for an &lt;see cref=&quot;T:System.Net.Http.Headers.MediaTypeHeaderValue&quot; /&gt; object.">Sert de fonction de hachage pour un objet <see cref="T:System.Net.Http.Headers.MediaTypeHeaderValue" />.</summary>
      <returns vsli:raw="A hash code for the current object.">Code de hachage pour l'objet actuel.</returns>
    </member>
    <member name="M:System.Net.Http.Headers.MediaTypeHeaderValue.Parse(System.String)">
      <summary vsli:raw="Converts a string to an &lt;see cref=&quot;T:System.Net.Http.Headers.MediaTypeHeaderValue&quot; /&gt; instance.">Convertit une chaîne en instance <see cref="T:System.Net.Http.Headers.MediaTypeHeaderValue" />.</summary>
      <param name="input" vsli:raw="A string that represents media type header value information.">Chaîne qui représente les informations de valeur d’en-tête de type de média.</param>
      <exception cref="T:System.ArgumentNullException" vsli:raw="&lt;paramref name=&quot;input&quot; /&gt; is a &lt;see langword=&quot;null&quot; /&gt; reference.">
        <paramref name="input" /> est une référence <see langword="null" />.</exception>
      <exception cref="T:System.FormatException" vsli:raw="&lt;paramref name=&quot;input&quot; /&gt; is not valid media type header value information.">
        <paramref name="input" /> n’est pas valide via les informations de valeur d’en-tête de type de média.</exception>
      <returns vsli:raw="A &lt;see cref=&quot;T:System.Net.Http.Headers.MediaTypeHeaderValue&quot; /&gt; instance.">Instance de <see cref="T:System.Net.Http.Headers.MediaTypeHeaderValue" />.</returns>
    </member>
    <member name="M:System.Net.Http.Headers.MediaTypeHeaderValue.System#ICloneable#Clone">
      <summary vsli:raw="Creates a new object that is a copy of the current &lt;see cref=&quot;T:System.Net.Http.Headers.MediaTypeHeaderValue&quot; /&gt; instance.">Crée un objet qui est une copie de l'instance <see cref="T:System.Net.Http.Headers.MediaTypeHeaderValue" /> actuelle.</summary>
      <returns vsli:raw="A copy of the current instance.">Copie de l'instance actuelle.</returns>
    </member>
    <member name="M:System.Net.Http.Headers.MediaTypeHeaderValue.ToString">
      <summary vsli:raw="Returns a string that represents the current &lt;see cref=&quot;T:System.Net.Http.Headers.MediaTypeHeaderValue&quot; /&gt; object.">Retourne une chaîne qui représente l'objet <see cref="T:System.Net.Http.Headers.MediaTypeHeaderValue" /> actuel.</summary>
      <returns vsli:raw="A string that represents the current object.">Chaîne qui représente l'objet actuel.</returns>
    </member>
    <member name="M:System.Net.Http.Headers.MediaTypeHeaderValue.TryParse(System.String,System.Net.Http.Headers.MediaTypeHeaderValue@)">
      <summary vsli:raw="Determines whether a string is valid &lt;see cref=&quot;T:System.Net.Http.Headers.MediaTypeHeaderValue&quot; /&gt; information.">Détermine si une chaîne est une information <see cref="T:System.Net.Http.Headers.MediaTypeHeaderValue" /> valide.</summary>
      <param name="input" vsli:raw="The string to validate.">Chaîne à valider.</param>
      <param name="parsedValue" vsli:raw="The &lt;see cref=&quot;T:System.Net.Http.Headers.MediaTypeHeaderValue&quot; /&gt; version of the string.">La version <see cref="T:System.Net.Http.Headers.MediaTypeHeaderValue" /> de la chaîne.</param>
      <returns vsli:raw="&lt;see langword=&quot;true&quot; /&gt; if &lt;paramref name=&quot;input&quot; /&gt; is valid &lt;see cref=&quot;T:System.Net.Http.Headers.MediaTypeHeaderValue&quot; /&gt; information; otherwise, &lt;see langword=&quot;false&quot; /&gt;.">
        <see langword="true" /> si <paramref name="input" /> est une information <see cref="T:System.Net.Http.Headers.MediaTypeHeaderValue" /> valide ; sinon, <see langword="false" />.</returns>
    </member>
    <member name="P:System.Net.Http.Headers.MediaTypeHeaderValue.CharSet">
      <summary vsli:raw="Gets or sets the character set.">Obtient ou définit le jeu de caractères.</summary>
      <returns vsli:raw="The character set.">Jeu de caractères.</returns>
    </member>
    <member name="P:System.Net.Http.Headers.MediaTypeHeaderValue.MediaType">
      <summary vsli:raw="Gets or sets the media-type header value.">Obtient ou définit la valeur d’en-tête media-type.</summary>
      <returns vsli:raw="The media-type header value.">La valeur d’en-tête media-type.</returns>
    </member>
    <member name="P:System.Net.Http.Headers.MediaTypeHeaderValue.Parameters">
      <summary vsli:raw="Gets or sets the media-type header value parameters.">Obtient ou définit les paramètres de valeur d’en-tête media-type.</summary>
      <returns vsli:raw="The media-type header value parameters.">Les paramètres de valeur d’en-tête media-type.</returns>
    </member>
    <member name="T:System.Net.Http.Headers.MediaTypeWithQualityHeaderValue">
      <summary vsli:raw="Represents a media type with an additional quality factor used in a Content-Type header.">Représente un type de média avec une considération de qualité supplémentaire, utilisé dans un en-tête Content-Type.</summary>
    </member>
    <member name="M:System.Net.Http.Headers.MediaTypeWithQualityHeaderValue.#ctor(System.String)">
      <summary vsli:raw="Initializes a new instance of the &lt;see cref=&quot;T:System.Net.Http.Headers.MediaTypeWithQualityHeaderValue&quot; /&gt; class.">Initialise une nouvelle instance de la classe <see cref="T:System.Net.Http.Headers.MediaTypeWithQualityHeaderValue" />.</summary>
      <param name="mediaType" vsli:raw="A &lt;see cref=&quot;T:System.Net.Http.Headers.MediaTypeWithQualityHeaderValue&quot; /&gt; represented as string to initialize the new instance.">
        <see cref="T:System.Net.Http.Headers.MediaTypeWithQualityHeaderValue" /> représenté sous forme de chaîne pour initialiser la nouvelle instance.</param>
    </member>
    <member name="M:System.Net.Http.Headers.MediaTypeWithQualityHeaderValue.#ctor(System.String,System.Double)">
      <summary vsli:raw="Initializes a new instance of the &lt;see cref=&quot;T:System.Net.Http.Headers.MediaTypeWithQualityHeaderValue&quot; /&gt; class.">Initialise une nouvelle instance de la classe <see cref="T:System.Net.Http.Headers.MediaTypeWithQualityHeaderValue" />.</summary>
      <param name="mediaType" vsli:raw="A &lt;see cref=&quot;T:System.Net.Http.Headers.MediaTypeWithQualityHeaderValue&quot; /&gt; represented as string to initialize the new instance.">
        <see cref="T:System.Net.Http.Headers.MediaTypeWithQualityHeaderValue" /> représenté sous forme de chaîne pour initialiser la nouvelle instance.</param>
      <param name="quality" vsli:raw="The quality associated with this header value.">Qualité associée à cette valeur d'en-tête.</param>
    </member>
    <member name="M:System.Net.Http.Headers.MediaTypeWithQualityHeaderValue.Parse(System.String)">
      <summary vsli:raw="Converts a string to an &lt;see cref=&quot;T:System.Net.Http.Headers.MediaTypeWithQualityHeaderValue&quot; /&gt; instance.">Convertit une chaîne en instance <see cref="T:System.Net.Http.Headers.MediaTypeWithQualityHeaderValue" />.</summary>
      <param name="input" vsli:raw="A string that represents media type with quality header value information.">Chaîne qui représente le type de média avec les informations de valeur d’en-tête de qualité.</param>
      <exception cref="T:System.ArgumentNullException" vsli:raw="&lt;paramref name=&quot;input&quot; /&gt; is a &lt;see langword=&quot;null&quot; /&gt; reference.">
        <paramref name="input" /> est une référence <see langword="null" />.</exception>
      <exception cref="T:System.FormatException" vsli:raw="&lt;paramref name=&quot;input&quot; /&gt; is not valid media type with quality header value information.">
        <paramref name="input" /> n’est pas un type de média valide avec des informations de valeur d’en-tête de qualité.</exception>
      <returns vsli:raw="A &lt;see cref=&quot;T:System.Net.Http.Headers.MediaTypeWithQualityHeaderValue&quot; /&gt; instance.">Instance de <see cref="T:System.Net.Http.Headers.MediaTypeWithQualityHeaderValue" />.</returns>
    </member>
    <member name="M:System.Net.Http.Headers.MediaTypeWithQualityHeaderValue.System#ICloneable#Clone">
      <summary vsli:raw="Creates a new object that is a copy of the current &lt;see cref=&quot;T:System.Net.Http.Headers.MediaTypeWithQualityHeaderValue&quot; /&gt; instance.">Crée un objet qui est une copie de l'instance <see cref="T:System.Net.Http.Headers.MediaTypeWithQualityHeaderValue" /> actuelle.</summary>
      <returns vsli:raw="A copy of the current instance.">Copie de l'instance actuelle.</returns>
    </member>
    <member name="M:System.Net.Http.Headers.MediaTypeWithQualityHeaderValue.TryParse(System.String,System.Net.Http.Headers.MediaTypeWithQualityHeaderValue@)">
      <summary vsli:raw="Determines whether a string is valid &lt;see cref=&quot;T:System.Net.Http.Headers.MediaTypeWithQualityHeaderValue&quot; /&gt; information.">Détermine si une chaîne est une information <see cref="T:System.Net.Http.Headers.MediaTypeWithQualityHeaderValue" /> valide.</summary>
      <param name="input" vsli:raw="The string to validate.">Chaîne à valider.</param>
      <param name="parsedValue" vsli:raw="The &lt;see cref=&quot;T:System.Net.Http.Headers.MediaTypeWithQualityHeaderValue&quot; /&gt; version of the string.">La version <see cref="T:System.Net.Http.Headers.MediaTypeWithQualityHeaderValue" /> de la chaîne.</param>
      <returns vsli:raw="&lt;see langword=&quot;true&quot; /&gt; if &lt;paramref name=&quot;input&quot; /&gt; is valid &lt;see cref=&quot;T:System.Net.Http.Headers.MediaTypeWithQualityHeaderValue&quot; /&gt; information; otherwise, &lt;see langword=&quot;false&quot; /&gt;.">
        <see langword="true" /> si <paramref name="input" /> est une information <see cref="T:System.Net.Http.Headers.MediaTypeWithQualityHeaderValue" /> valide ; sinon, <see langword="false" />.</returns>
    </member>
    <member name="P:System.Net.Http.Headers.MediaTypeWithQualityHeaderValue.Quality">
      <summary vsli:raw="Gets or sets the quality value for the &lt;see cref=&quot;T:System.Net.Http.Headers.MediaTypeWithQualityHeaderValue&quot; /&gt;.">Obtient ou définit la valeur de la qualité pour <see cref="T:System.Net.Http.Headers.MediaTypeWithQualityHeaderValue" />.</summary>
      <returns vsli:raw="The quality value for the &lt;see cref=&quot;T:System.Net.Http.Headers.MediaTypeWithQualityHeaderValue&quot; /&gt; object.">Valeur de qualité pour l’objet <see cref="T:System.Net.Http.Headers.MediaTypeWithQualityHeaderValue" />.</returns>
    </member>
    <member name="T:System.Net.Http.Headers.NameValueHeaderValue">
      <summary vsli:raw="Represents a name/value pair used in various headers as defined in RFC 2616.">Représente une paire nom/valeur utilisée dans différents en-têtes comme défini dans la norme RFC 2616.</summary>
    </member>
    <member name="M:System.Net.Http.Headers.NameValueHeaderValue.#ctor(System.Net.Http.Headers.NameValueHeaderValue)">
      <summary vsli:raw="Initializes a new instance of the &lt;see cref=&quot;T:System.Net.Http.Headers.NameValueHeaderValue&quot; /&gt; class.">Initialise une nouvelle instance de la classe <see cref="T:System.Net.Http.Headers.NameValueHeaderValue" />.</summary>
      <param name="source" vsli:raw="A &lt;see cref=&quot;T:System.Net.Http.Headers.NameValueHeaderValue&quot; /&gt; object used to initialize the new instance.">Objet <see cref="T:System.Net.Http.Headers.NameValueHeaderValue" /> utilisé pour initialiser la nouvelle instance.</param>
    </member>
    <member name="M:System.Net.Http.Headers.NameValueHeaderValue.#ctor(System.String)">
      <summary vsli:raw="Initializes a new instance of the &lt;see cref=&quot;T:System.Net.Http.Headers.NameValueHeaderValue&quot; /&gt; class.">Initialise une nouvelle instance de la classe <see cref="T:System.Net.Http.Headers.NameValueHeaderValue" />.</summary>
      <param name="name" vsli:raw="The header name.">Nom de l'en-tête.</param>
    </member>
    <member name="M:System.Net.Http.Headers.NameValueHeaderValue.#ctor(System.String,System.String)">
      <summary vsli:raw="Initializes a new instance of the &lt;see cref=&quot;T:System.Net.Http.Headers.NameValueHeaderValue&quot; /&gt; class.">Initialise une nouvelle instance de la classe <see cref="T:System.Net.Http.Headers.NameValueHeaderValue" />.</summary>
      <param name="name" vsli:raw="The header name.">Nom de l'en-tête.</param>
      <param name="value" vsli:raw="The header value.">La valeur d’en-tête.</param>
    </member>
    <member name="M:System.Net.Http.Headers.NameValueHeaderValue.Equals(System.Object)">
      <summary vsli:raw="Determines whether the specified &lt;see cref=&quot;T:System.Object&quot; /&gt; is equal to the current &lt;see cref=&quot;T:System.Net.Http.Headers.NameValueHeaderValue&quot; /&gt; object.">Détermine si l'objet <see cref="T:System.Object" /> spécifié est égal à l'objet <see cref="T:System.Net.Http.Headers.NameValueHeaderValue" /> actuel.</summary>
      <param name="obj" vsli:raw="The object to compare with the current object.">Objet à comparer à l'objet actuel.</param>
      <returns vsli:raw="&lt;see langword=&quot;true&quot; /&gt; if the specified &lt;see cref=&quot;T:System.Object&quot; /&gt; is equal to the current object; otherwise, &lt;see langword=&quot;false&quot; /&gt;.">
        <see langword="true" /> si le <see cref="T:System.Object" /> spécifié est égal à l’objet actuel ; sinon, <see langword="false" />.</returns>
    </member>
    <member name="M:System.Net.Http.Headers.NameValueHeaderValue.GetHashCode">
      <summary vsli:raw="Serves as a hash function for an &lt;see cref=&quot;T:System.Net.Http.Headers.NameValueHeaderValue&quot; /&gt; object.">Sert de fonction de hachage pour un objet <see cref="T:System.Net.Http.Headers.NameValueHeaderValue" />.</summary>
      <returns vsli:raw="A hash code for the current object.">Code de hachage pour l'objet actuel.</returns>
    </member>
    <member name="M:System.Net.Http.Headers.NameValueHeaderValue.Parse(System.String)">
      <summary vsli:raw="Converts a string to an &lt;see cref=&quot;T:System.Net.Http.Headers.NameValueHeaderValue&quot; /&gt; instance.">Convertit une chaîne en instance <see cref="T:System.Net.Http.Headers.NameValueHeaderValue" />.</summary>
      <param name="input" vsli:raw="A string that represents name value header value information.">Chaîne qui représente les informations de valeur de nom de l’en-tête.</param>
      <exception cref="T:System.ArgumentNullException" vsli:raw="&lt;paramref name=&quot;input&quot; /&gt; is a &lt;see langword=&quot;null&quot; /&gt; reference.">
        <paramref name="input" /> est une référence <see langword="null" />.</exception>
      <exception cref="T:System.FormatException" vsli:raw="&lt;paramref name=&quot;input&quot; /&gt; is not valid name value header value information.">
        <paramref name="input" /> n’est pas une information de valeur de nom d’en-tête valide.</exception>
      <returns vsli:raw="A &lt;see cref=&quot;T:System.Net.Http.Headers.NameValueHeaderValue&quot; /&gt; instance.">Instance de <see cref="T:System.Net.Http.Headers.NameValueHeaderValue" />.</returns>
    </member>
    <member name="M:System.Net.Http.Headers.NameValueHeaderValue.System#ICloneable#Clone">
      <summary vsli:raw="Creates a new object that is a copy of the current &lt;see cref=&quot;T:System.Net.Http.Headers.NameValueHeaderValue&quot; /&gt; instance.">Crée un objet qui est une copie de l'instance <see cref="T:System.Net.Http.Headers.NameValueHeaderValue" /> actuelle.</summary>
      <returns vsli:raw="A copy of the current instance.">Copie de l'instance actuelle.</returns>
    </member>
    <member name="M:System.Net.Http.Headers.NameValueHeaderValue.ToString">
      <summary vsli:raw="Returns a string that represents the current &lt;see cref=&quot;T:System.Net.Http.Headers.NameValueHeaderValue&quot; /&gt; object.">Retourne une chaîne qui représente l'objet <see cref="T:System.Net.Http.Headers.NameValueHeaderValue" /> actuel.</summary>
      <returns vsli:raw="A string that represents the current object.">Chaîne qui représente l'objet actuel.</returns>
    </member>
    <member name="M:System.Net.Http.Headers.NameValueHeaderValue.TryParse(System.String,System.Net.Http.Headers.NameValueHeaderValue@)">
      <summary vsli:raw="Determines whether a string is valid &lt;see cref=&quot;T:System.Net.Http.Headers.NameValueHeaderValue&quot; /&gt; information.">Détermine si une chaîne est une information <see cref="T:System.Net.Http.Headers.NameValueHeaderValue" /> valide.</summary>
      <param name="input" vsli:raw="The string to validate.">Chaîne à valider.</param>
      <param name="parsedValue" vsli:raw="The &lt;see cref=&quot;T:System.Net.Http.Headers.NameValueHeaderValue&quot; /&gt; version of the string.">La version <see cref="T:System.Net.Http.Headers.NameValueHeaderValue" /> de la chaîne.</param>
      <returns vsli:raw="&lt;see langword=&quot;true&quot; /&gt; if &lt;paramref name=&quot;input&quot; /&gt; is valid &lt;see cref=&quot;T:System.Net.Http.Headers.NameValueHeaderValue&quot; /&gt; information; otherwise, &lt;see langword=&quot;false&quot; /&gt;.">
        <see langword="true" /> si <paramref name="input" /> est une information <see cref="T:System.Net.Http.Headers.NameValueHeaderValue" /> valide ; sinon, <see langword="false" />.</returns>
    </member>
    <member name="P:System.Net.Http.Headers.NameValueHeaderValue.Name">
      <summary vsli:raw="Gets the header name.">Obtient le nom d’en-tête.</summary>
      <returns vsli:raw="The header name.">Nom de l'en-tête.</returns>
    </member>
    <member name="P:System.Net.Http.Headers.NameValueHeaderValue.Value">
      <summary vsli:raw="Gets the header value.">Obtient la valeur d’en-tête.</summary>
      <returns vsli:raw="The header value.">La valeur d’en-tête.</returns>
    </member>
    <member name="T:System.Net.Http.Headers.NameValueWithParametersHeaderValue">
      <summary vsli:raw="Represents a name/value pair with parameters used in various headers as defined in RFC 2616.">Représente une paire nom/valeur avec des paramètres utilisés dans différents en-têtes comme défini dans la norme RFC 2616.</summary>
    </member>
    <member name="M:System.Net.Http.Headers.NameValueWithParametersHeaderValue.#ctor(System.Net.Http.Headers.NameValueWithParametersHeaderValue)">
      <summary vsli:raw="Initializes a new instance of the &lt;see cref=&quot;T:System.Net.Http.Headers.NameValueWithParametersHeaderValue&quot; /&gt; class.">Initialise une nouvelle instance de la classe <see cref="T:System.Net.Http.Headers.NameValueWithParametersHeaderValue" />.</summary>
      <param name="source" vsli:raw="A &lt;see cref=&quot;T:System.Net.Http.Headers.NameValueWithParametersHeaderValue&quot; /&gt; object used to initialize the new instance.">Objet <see cref="T:System.Net.Http.Headers.NameValueWithParametersHeaderValue" /> utilisé pour initialiser la nouvelle instance.</param>
    </member>
    <member name="M:System.Net.Http.Headers.NameValueWithParametersHeaderValue.#ctor(System.String)">
      <summary vsli:raw="Initializes a new instance of the &lt;see cref=&quot;T:System.Net.Http.Headers.NameValueWithParametersHeaderValue&quot; /&gt; class.">Initialise une nouvelle instance de la classe <see cref="T:System.Net.Http.Headers.NameValueWithParametersHeaderValue" />.</summary>
      <param name="name" vsli:raw="The header name.">Nom de l'en-tête.</param>
    </member>
    <member name="M:System.Net.Http.Headers.NameValueWithParametersHeaderValue.#ctor(System.String,System.String)">
      <summary vsli:raw="Initializes a new instance of the &lt;see cref=&quot;T:System.Net.Http.Headers.NameValueWithParametersHeaderValue&quot; /&gt; class.">Initialise une nouvelle instance de la classe <see cref="T:System.Net.Http.Headers.NameValueWithParametersHeaderValue" />.</summary>
      <param name="name" vsli:raw="The header name.">Nom de l'en-tête.</param>
      <param name="value" vsli:raw="The header value.">La valeur d’en-tête.</param>
    </member>
    <member name="M:System.Net.Http.Headers.NameValueWithParametersHeaderValue.Equals(System.Object)">
      <summary vsli:raw="Determines whether the specified &lt;see cref=&quot;T:System.Object&quot; /&gt; is equal to the current &lt;see cref=&quot;T:System.Net.Http.Headers.NameValueWithParametersHeaderValue&quot; /&gt; object.">Détermine si l'objet <see cref="T:System.Object" /> spécifié est égal à l'objet <see cref="T:System.Net.Http.Headers.NameValueWithParametersHeaderValue" /> actuel.</summary>
      <param name="obj" vsli:raw="The object to compare with the current object.">Objet à comparer à l'objet actuel.</param>
      <returns vsli:raw="&lt;see langword=&quot;true&quot; /&gt; if the specified &lt;see cref=&quot;T:System.Object&quot; /&gt; is equal to the current object; otherwise, &lt;see langword=&quot;false&quot; /&gt;.">
        <see langword="true" /> si le <see cref="T:System.Object" /> spécifié est égal à l’objet actuel ; sinon, <see langword="false" />.</returns>
    </member>
    <member name="M:System.Net.Http.Headers.NameValueWithParametersHeaderValue.GetHashCode">
      <summary vsli:raw="Serves as a hash function for an &lt;see cref=&quot;T:System.Net.Http.Headers.NameValueWithParametersHeaderValue&quot; /&gt; object.">Sert de fonction de hachage pour un objet <see cref="T:System.Net.Http.Headers.NameValueWithParametersHeaderValue" />.</summary>
      <returns vsli:raw="A hash code for the current object.">Code de hachage pour l'objet actuel.</returns>
    </member>
    <member name="M:System.Net.Http.Headers.NameValueWithParametersHeaderValue.Parse(System.String)">
      <summary vsli:raw="Converts a string to an &lt;see cref=&quot;T:System.Net.Http.Headers.NameValueWithParametersHeaderValue&quot; /&gt; instance.">Convertit une chaîne en instance <see cref="T:System.Net.Http.Headers.NameValueWithParametersHeaderValue" />.</summary>
      <param name="input" vsli:raw="A string that represents name value with parameter header value information.">Chaîne représentant une valeur de nom valide avec des informations de valeur d’en-tête de paramètre.</param>
      <exception cref="T:System.ArgumentNullException" vsli:raw="&lt;paramref name=&quot;input&quot; /&gt; is a &lt;see langword=&quot;null&quot; /&gt; reference.">
        <paramref name="input" /> est une référence <see langword="null" />.</exception>
      <exception cref="T:System.FormatException" vsli:raw="&lt;paramref name=&quot;input&quot; /&gt; is not valid name value with parameter header value information.">
        <paramref name="input" /> n’est pas une valeur de nom valide avec des informations de valeur d’en-tête de paramètre.</exception>
      <returns vsli:raw="A &lt;see cref=&quot;T:System.Net.Http.Headers.NameValueWithParametersHeaderValue&quot; /&gt; instance.">Instance de <see cref="T:System.Net.Http.Headers.NameValueWithParametersHeaderValue" />.</returns>
    </member>
    <member name="M:System.Net.Http.Headers.NameValueWithParametersHeaderValue.System#ICloneable#Clone">
      <summary vsli:raw="Creates a new object that is a copy of the current &lt;see cref=&quot;T:System.Net.Http.Headers.NameValueWithParametersHeaderValue&quot; /&gt; instance.">Crée un objet qui est une copie de l'instance <see cref="T:System.Net.Http.Headers.NameValueWithParametersHeaderValue" /> actuelle.</summary>
      <returns vsli:raw="A copy of the current instance.">Copie de l'instance actuelle.</returns>
    </member>
    <member name="M:System.Net.Http.Headers.NameValueWithParametersHeaderValue.ToString">
      <summary vsli:raw="Returns a string that represents the current &lt;see cref=&quot;T:System.Net.Http.Headers.NameValueWithParametersHeaderValue&quot; /&gt; object.">Retourne une chaîne qui représente l'objet <see cref="T:System.Net.Http.Headers.NameValueWithParametersHeaderValue" /> actuel.</summary>
      <returns vsli:raw="A string that represents the current object.">Chaîne qui représente l'objet actuel.</returns>
    </member>
    <member name="M:System.Net.Http.Headers.NameValueWithParametersHeaderValue.TryParse(System.String,System.Net.Http.Headers.NameValueWithParametersHeaderValue@)">
      <summary vsli:raw="Determines whether a string is valid &lt;see cref=&quot;T:System.Net.Http.Headers.NameValueWithParametersHeaderValue&quot; /&gt; information.">Détermine si une chaîne est une information <see cref="T:System.Net.Http.Headers.NameValueWithParametersHeaderValue" /> valide.</summary>
      <param name="input" vsli:raw="The string to validate.">Chaîne à valider.</param>
      <param name="parsedValue" vsli:raw="The &lt;see cref=&quot;T:System.Net.Http.Headers.NameValueWithParametersHeaderValue&quot; /&gt; version of the string.">La version <see cref="T:System.Net.Http.Headers.NameValueWithParametersHeaderValue" /> de la chaîne.</param>
      <returns vsli:raw="&lt;see langword=&quot;true&quot; /&gt; if &lt;paramref name=&quot;input&quot; /&gt; is valid &lt;see cref=&quot;T:System.Net.Http.Headers.NameValueWithParametersHeaderValue&quot; /&gt; information; otherwise, &lt;see langword=&quot;false&quot; /&gt;.">
        <see langword="true" /> si <paramref name="input" /> est une information <see cref="T:System.Net.Http.Headers.NameValueWithParametersHeaderValue" /> valide ; sinon, <see langword="false" />.</returns>
    </member>
    <member name="P:System.Net.Http.Headers.NameValueWithParametersHeaderValue.Parameters">
      <summary vsli:raw="Gets the parameters from the &lt;see cref=&quot;T:System.Net.Http.Headers.NameValueWithParametersHeaderValue&quot; /&gt; object.">Récupère les paramètres de l’objet <see cref="T:System.Net.Http.Headers.NameValueWithParametersHeaderValue" />.</summary>
      <returns vsli:raw="A collection containing the parameters.">Collection contenant les paramètres.</returns>
    </member>
    <member name="T:System.Net.Http.Headers.ProductHeaderValue">
      <summary vsli:raw="Represents a product token value in a User-Agent header.">Représente une valeur de jeton de produit dans un en-tête d'agent utilisateur.</summary>
    </member>
    <member name="M:System.Net.Http.Headers.ProductHeaderValue.#ctor(System.String)">
      <summary vsli:raw="Initializes a new instance of the &lt;see cref=&quot;T:System.Net.Http.Headers.ProductHeaderValue&quot; /&gt; class.">Initialise une nouvelle instance de la classe <see cref="T:System.Net.Http.Headers.ProductHeaderValue" />.</summary>
      <param name="name" vsli:raw="The product name.">Nom du produit.</param>
    </member>
    <member name="M:System.Net.Http.Headers.ProductHeaderValue.#ctor(System.String,System.String)">
      <summary vsli:raw="Initializes a new instance of the &lt;see cref=&quot;T:System.Net.Http.Headers.ProductHeaderValue&quot; /&gt; class.">Initialise une nouvelle instance de la classe <see cref="T:System.Net.Http.Headers.ProductHeaderValue" />.</summary>
      <param name="name" vsli:raw="The product name value.">Valeur du nom de produit.</param>
      <param name="version" vsli:raw="The product version value.">Valeur de la version du produit.</param>
    </member>
    <member name="M:System.Net.Http.Headers.ProductHeaderValue.Equals(System.Object)">
      <summary vsli:raw="Determines whether the specified &lt;see cref=&quot;T:System.Object&quot; /&gt; is equal to the current &lt;see cref=&quot;T:System.Net.Http.Headers.ProductHeaderValue&quot; /&gt; object.">Détermine si l'objet <see cref="T:System.Object" /> spécifié est égal à l'objet <see cref="T:System.Net.Http.Headers.ProductHeaderValue" /> actuel.</summary>
      <param name="obj" vsli:raw="The object to compare with the current object.">Objet à comparer à l'objet actuel.</param>
      <returns vsli:raw="&lt;see langword=&quot;true&quot; /&gt; if the specified &lt;see cref=&quot;T:System.Object&quot; /&gt; is equal to the current object; otherwise, &lt;see langword=&quot;false&quot; /&gt;.">
        <see langword="true" /> si le <see cref="T:System.Object" /> spécifié est égal à l’objet actuel ; sinon, <see langword="false" />.</returns>
    </member>
    <member name="M:System.Net.Http.Headers.ProductHeaderValue.GetHashCode">
      <summary vsli:raw="Serves as a hash function for an &lt;see cref=&quot;T:System.Net.Http.Headers.ProductHeaderValue&quot; /&gt; object.">Sert de fonction de hachage pour un objet <see cref="T:System.Net.Http.Headers.ProductHeaderValue" />.</summary>
      <returns vsli:raw="A hash code for the current object.">Code de hachage pour l'objet actuel.</returns>
    </member>
    <member name="M:System.Net.Http.Headers.ProductHeaderValue.Parse(System.String)">
      <summary vsli:raw="Converts a string to an &lt;see cref=&quot;T:System.Net.Http.Headers.ProductHeaderValue&quot; /&gt; instance.">Convertit une chaîne en instance <see cref="T:System.Net.Http.Headers.ProductHeaderValue" />.</summary>
      <param name="input" vsli:raw="A string that represents product header value information.">Chaîne qui représente les informations de valeur d’en-tête de produit.</param>
      <returns vsli:raw="A &lt;see cref=&quot;T:System.Net.Http.Headers.ProductHeaderValue&quot; /&gt; instance.">Instance de <see cref="T:System.Net.Http.Headers.ProductHeaderValue" />.</returns>
    </member>
    <member name="M:System.Net.Http.Headers.ProductHeaderValue.System#ICloneable#Clone">
      <summary vsli:raw="Creates a new object that is a copy of the current &lt;see cref=&quot;T:System.Net.Http.Headers.ProductHeaderValue&quot; /&gt; instance.">Crée un objet qui est une copie de l'instance <see cref="T:System.Net.Http.Headers.ProductHeaderValue" /> actuelle.</summary>
      <returns vsli:raw="A copy of the current instance.">Copie de l'instance actuelle.</returns>
    </member>
    <member name="M:System.Net.Http.Headers.ProductHeaderValue.ToString">
      <summary vsli:raw="Returns a string that represents the current &lt;see cref=&quot;T:System.Net.Http.Headers.ProductHeaderValue&quot; /&gt; object.">Retourne une chaîne qui représente l'objet <see cref="T:System.Net.Http.Headers.ProductHeaderValue" /> actuel.</summary>
      <returns vsli:raw="A string that represents the current object.">Chaîne qui représente l'objet actuel.</returns>
    </member>
    <member name="M:System.Net.Http.Headers.ProductHeaderValue.TryParse(System.String,System.Net.Http.Headers.ProductHeaderValue@)">
      <summary vsli:raw="Determines whether a string is valid &lt;see cref=&quot;T:System.Net.Http.Headers.ProductHeaderValue&quot; /&gt; information.">Détermine si une chaîne est une information <see cref="T:System.Net.Http.Headers.ProductHeaderValue" /> valide.</summary>
      <param name="input" vsli:raw="The string to validate.">Chaîne à valider.</param>
      <param name="parsedValue" vsli:raw="The &lt;see cref=&quot;T:System.Net.Http.Headers.ProductHeaderValue&quot; /&gt; version of the string.">La version <see cref="T:System.Net.Http.Headers.ProductHeaderValue" /> de la chaîne.</param>
      <returns vsli:raw="&lt;see langword=&quot;true&quot; /&gt; if &lt;paramref name=&quot;input&quot; /&gt; is valid &lt;see cref=&quot;T:System.Net.Http.Headers.ProductHeaderValue&quot; /&gt; information; otherwise, &lt;see langword=&quot;false&quot; /&gt;.">
        <see langword="true" /> si <paramref name="input" /> est une information <see cref="T:System.Net.Http.Headers.ProductHeaderValue" /> valide ; sinon, <see langword="false" />.</returns>
    </member>
    <member name="P:System.Net.Http.Headers.ProductHeaderValue.Name">
      <summary vsli:raw="Gets the name of the product token.">Obtient le nom du jeton du produit.</summary>
      <returns vsli:raw="The name of the product token.">Nom du jeton du produit.</returns>
    </member>
    <member name="P:System.Net.Http.Headers.ProductHeaderValue.Version">
      <summary vsli:raw="Gets the version of the product token.">Obtient la version du jeton du produit.</summary>
      <returns vsli:raw="The version of the product token.">La version du jeton du produit.</returns>
    </member>
    <member name="T:System.Net.Http.Headers.ProductInfoHeaderValue">
      <summary vsli:raw="Represents a value which can either be a product or a comment in a User-Agent header.">Représente une valeur qui peut être un produit ou un commentaire dans un en-tête User-Agent.</summary>
    </member>
    <member name="M:System.Net.Http.Headers.ProductInfoHeaderValue.#ctor(System.Net.Http.Headers.ProductHeaderValue)">
      <summary vsli:raw="Initializes a new instance of the &lt;see cref=&quot;T:System.Net.Http.Headers.ProductInfoHeaderValue&quot; /&gt; class.">Initialise une nouvelle instance de la classe <see cref="T:System.Net.Http.Headers.ProductInfoHeaderValue" />.</summary>
      <param name="product" vsli:raw="A &lt;see cref=&quot;T:System.Net.Http.Headers.ProductHeaderValue&quot; /&gt; object used to initialize the new instance.">Objet <see cref="T:System.Net.Http.Headers.ProductHeaderValue" /> utilisé pour initialiser la nouvelle instance.</param>
    </member>
    <member name="M:System.Net.Http.Headers.ProductInfoHeaderValue.#ctor(System.String)">
      <summary vsli:raw="Initializes a new instance of the &lt;see cref=&quot;T:System.Net.Http.Headers.ProductInfoHeaderValue&quot; /&gt; class.">Initialise une nouvelle instance de la classe <see cref="T:System.Net.Http.Headers.ProductInfoHeaderValue" />.</summary>
      <param name="comment" vsli:raw="A comment value.">Valeur de commentaire.</param>
    </member>
    <member name="M:System.Net.Http.Headers.ProductInfoHeaderValue.#ctor(System.String,System.String)">
      <summary vsli:raw="Initializes a new instance of the &lt;see cref=&quot;T:System.Net.Http.Headers.ProductInfoHeaderValue&quot; /&gt; class.">Initialise une nouvelle instance de la classe <see cref="T:System.Net.Http.Headers.ProductInfoHeaderValue" />.</summary>
      <param name="productName" vsli:raw="The product name value.">Valeur du nom de produit.</param>
      <param name="productVersion" vsli:raw="The product version value.">Valeur de la version du produit.</param>
    </member>
    <member name="M:System.Net.Http.Headers.ProductInfoHeaderValue.Equals(System.Object)">
      <summary vsli:raw="Determines whether the specified &lt;see cref=&quot;T:System.Object&quot; /&gt; is equal to the current &lt;see cref=&quot;T:System.Net.Http.Headers.ProductInfoHeaderValue&quot; /&gt; object.">Détermine si l'objet <see cref="T:System.Object" /> spécifié est égal à l'objet <see cref="T:System.Net.Http.Headers.ProductInfoHeaderValue" /> actuel.</summary>
      <param name="obj" vsli:raw="The object to compare with the current object.">Objet à comparer à l'objet actuel.</param>
      <returns vsli:raw="&lt;see langword=&quot;true&quot; /&gt; if the specified &lt;see cref=&quot;T:System.Object&quot; /&gt; is equal to the current object; otherwise, &lt;see langword=&quot;false&quot; /&gt;.">
        <see langword="true" /> si le <see cref="T:System.Object" /> spécifié est égal à l’objet actuel ; sinon, <see langword="false" />.</returns>
    </member>
    <member name="M:System.Net.Http.Headers.ProductInfoHeaderValue.GetHashCode">
      <summary vsli:raw="Serves as a hash function for an &lt;see cref=&quot;T:System.Net.Http.Headers.ProductInfoHeaderValue&quot; /&gt; object.">Sert de fonction de hachage pour un objet <see cref="T:System.Net.Http.Headers.ProductInfoHeaderValue" />.</summary>
      <returns vsli:raw="A hash code for the current object.">Code de hachage pour l'objet actuel.</returns>
    </member>
    <member name="M:System.Net.Http.Headers.ProductInfoHeaderValue.Parse(System.String)">
      <summary vsli:raw="Converts a string to an &lt;see cref=&quot;T:System.Net.Http.Headers.ProductInfoHeaderValue&quot; /&gt; instance.">Convertit une chaîne en instance <see cref="T:System.Net.Http.Headers.ProductInfoHeaderValue" />.</summary>
      <param name="input" vsli:raw="A string that represents product info header value information.">Chaîne qui représente les informations de valeur d’en-tête d’informations produit.</param>
      <exception cref="T:System.ArgumentNullException" vsli:raw="&lt;paramref name=&quot;input&quot; /&gt; is a &lt;see langword=&quot;null&quot; /&gt; reference.">
        <paramref name="input" /> est une référence <see langword="null" />.</exception>
      <exception cref="T:System.FormatException" vsli:raw="&lt;paramref name=&quot;input&quot; /&gt; is not valid product info header value information.">
        <paramref name="input" /> n’est pas valide une information de valeur d’en-tête d’informations produit valide.</exception>
      <returns vsli:raw="A &lt;see cref=&quot;T:System.Net.Http.Headers.ProductInfoHeaderValue&quot; /&gt; instance.">Instance de <see cref="T:System.Net.Http.Headers.ProductInfoHeaderValue" />.</returns>
    </member>
    <member name="M:System.Net.Http.Headers.ProductInfoHeaderValue.System#ICloneable#Clone">
      <summary vsli:raw="Creates a new object that is a copy of the current &lt;see cref=&quot;T:System.Net.Http.Headers.ProductInfoHeaderValue&quot; /&gt; instance.">Crée un objet qui est une copie de l'instance <see cref="T:System.Net.Http.Headers.ProductInfoHeaderValue" /> actuelle.</summary>
      <returns vsli:raw="A copy of the current instance.">Copie de l'instance actuelle.</returns>
    </member>
    <member name="M:System.Net.Http.Headers.ProductInfoHeaderValue.ToString">
      <summary vsli:raw="Returns a string that represents the current &lt;see cref=&quot;T:System.Net.Http.Headers.ProductInfoHeaderValue&quot; /&gt; object.">Retourne une chaîne qui représente l'objet <see cref="T:System.Net.Http.Headers.ProductInfoHeaderValue" /> actuel.</summary>
      <returns vsli:raw="A string that represents the current object.">Chaîne qui représente l'objet actuel.</returns>
    </member>
    <member name="M:System.Net.Http.Headers.ProductInfoHeaderValue.TryParse(System.String,System.Net.Http.Headers.ProductInfoHeaderValue@)">
      <summary vsli:raw="Determines whether a string is valid &lt;see cref=&quot;T:System.Net.Http.Headers.ProductInfoHeaderValue&quot; /&gt; information.">Détermine si une chaîne est une information <see cref="T:System.Net.Http.Headers.ProductInfoHeaderValue" /> valide.</summary>
      <param name="input" vsli:raw="The string to validate.">Chaîne à valider.</param>
      <param name="parsedValue" vsli:raw="The &lt;see cref=&quot;T:System.Net.Http.Headers.ProductInfoHeaderValue&quot; /&gt; version of the string.">La version <see cref="T:System.Net.Http.Headers.ProductInfoHeaderValue" /> de la chaîne.</param>
      <returns vsli:raw="&lt;see langword=&quot;true&quot; /&gt; if &lt;paramref name=&quot;input&quot; /&gt; is valid &lt;see cref=&quot;T:System.Net.Http.Headers.ProductInfoHeaderValue&quot; /&gt; information; otherwise, &lt;see langword=&quot;false&quot; /&gt;.">
        <see langword="true" /> si <paramref name="input" /> est une information <see cref="T:System.Net.Http.Headers.ProductInfoHeaderValue" /> valide ; sinon, <see langword="false" />.</returns>
    </member>
    <member name="P:System.Net.Http.Headers.ProductInfoHeaderValue.Comment">
      <summary vsli:raw="Gets the comment from the &lt;see cref=&quot;T:System.Net.Http.Headers.ProductInfoHeaderValue&quot; /&gt; object.">Obtient le commentaire à partir de l’objet <see cref="T:System.Net.Http.Headers.ProductInfoHeaderValue" />.</summary>
      <returns vsli:raw="The comment value this &lt;see cref=&quot;T:System.Net.Http.Headers.ProductInfoHeaderValue&quot; /&gt;.">La valeur du commentaire est <see cref="T:System.Net.Http.Headers.ProductInfoHeaderValue" />.</returns>
    </member>
    <member name="P:System.Net.Http.Headers.ProductInfoHeaderValue.Product">
      <summary vsli:raw="Gets the product from the &lt;see cref=&quot;T:System.Net.Http.Headers.ProductInfoHeaderValue&quot; /&gt; object.">Obtient le produit à partir de l’objet <see cref="T:System.Net.Http.Headers.ProductInfoHeaderValue" />.</summary>
      <returns vsli:raw="The product value from this &lt;see cref=&quot;T:System.Net.Http.Headers.ProductInfoHeaderValue&quot; /&gt;.">La valeur de produit à partir de cet objet <see cref="T:System.Net.Http.Headers.ProductInfoHeaderValue" />.</returns>
    </member>
    <member name="T:System.Net.Http.Headers.RangeConditionHeaderValue">
      <summary vsli:raw="Represents an If-Range header value which can either be a date/time or an entity-tag value.">Représente une valeur d'en-tête If-Range qui peut être une date, une heure ou une valeur de balise d'entité.</summary>
    </member>
    <member name="M:System.Net.Http.Headers.RangeConditionHeaderValue.#ctor(System.DateTimeOffset)">
      <summary vsli:raw="Initializes a new instance of the &lt;see cref=&quot;T:System.Net.Http.Headers.RangeConditionHeaderValue&quot; /&gt; class.">Initialise une nouvelle instance de la classe <see cref="T:System.Net.Http.Headers.RangeConditionHeaderValue" />.</summary>
      <param name="date" vsli:raw="A date value used to initialize the new instance.">Valeur de date utilisée pour initialiser la nouvelle instance.</param>
    </member>
    <member name="M:System.Net.Http.Headers.RangeConditionHeaderValue.#ctor(System.Net.Http.Headers.EntityTagHeaderValue)">
      <summary vsli:raw="Initializes a new instance of the &lt;see cref=&quot;T:System.Net.Http.Headers.RangeConditionHeaderValue&quot; /&gt; class.">Initialise une nouvelle instance de la classe <see cref="T:System.Net.Http.Headers.RangeConditionHeaderValue" />.</summary>
      <param name="entityTag" vsli:raw="An &lt;see cref=&quot;T:System.Net.Http.Headers.EntityTagHeaderValue&quot; /&gt; object used to initialize the new instance.">Objet <see cref="T:System.Net.Http.Headers.EntityTagHeaderValue" /> utilisé pour initialiser la nouvelle instance.</param>
    </member>
    <member name="M:System.Net.Http.Headers.RangeConditionHeaderValue.#ctor(System.String)">
      <summary vsli:raw="Initializes a new instance of the &lt;see cref=&quot;T:System.Net.Http.Headers.RangeConditionHeaderValue&quot; /&gt; class.">Initialise une nouvelle instance de la classe <see cref="T:System.Net.Http.Headers.RangeConditionHeaderValue" />.</summary>
      <param name="entityTag" vsli:raw="An entity tag represented as a string used to initialize the new instance.">Balise d'entité représentée sous forme de chaîne utilisée pour initialiser la nouvelle instance.</param>
    </member>
    <member name="M:System.Net.Http.Headers.RangeConditionHeaderValue.Equals(System.Object)">
      <summary vsli:raw="Determines whether the specified &lt;see cref=&quot;T:System.Object&quot; /&gt; is equal to the current &lt;see cref=&quot;T:System.Net.Http.Headers.RangeConditionHeaderValue&quot; /&gt; object.">Détermine si l'objet <see cref="T:System.Object" /> spécifié est égal à l'objet <see cref="T:System.Net.Http.Headers.RangeConditionHeaderValue" /> actuel.</summary>
      <param name="obj" vsli:raw="The object to compare with the current object.">Objet à comparer à l'objet actuel.</param>
      <returns vsli:raw="&lt;see langword=&quot;true&quot; /&gt; if the specified &lt;see cref=&quot;T:System.Object&quot; /&gt; is equal to the current object; otherwise, &lt;see langword=&quot;false&quot; /&gt;.">
        <see langword="true" /> si le <see cref="T:System.Object" /> spécifié est égal à l’objet actuel ; sinon, <see langword="false" />.</returns>
    </member>
    <member name="M:System.Net.Http.Headers.RangeConditionHeaderValue.GetHashCode">
      <summary vsli:raw="Serves as a hash function for an &lt;see cref=&quot;T:System.Net.Http.Headers.RangeConditionHeaderValue&quot; /&gt; object.">Sert de fonction de hachage pour un objet <see cref="T:System.Net.Http.Headers.RangeConditionHeaderValue" />.</summary>
      <returns vsli:raw="A hash code for the current object.">Code de hachage pour l'objet actuel.</returns>
    </member>
    <member name="M:System.Net.Http.Headers.RangeConditionHeaderValue.Parse(System.String)">
      <summary vsli:raw="Converts a string to an &lt;see cref=&quot;T:System.Net.Http.Headers.RangeConditionHeaderValue&quot; /&gt; instance.">Convertit une chaîne en instance <see cref="T:System.Net.Http.Headers.RangeConditionHeaderValue" />.</summary>
      <param name="input" vsli:raw="A string that represents range condition header value information.">Chaîne qui représente les informations de valeur d’en-tête de condition de plage.</param>
      <exception cref="T:System.ArgumentNullException" vsli:raw="&lt;paramref name=&quot;input&quot; /&gt; is a &lt;see langword=&quot;null&quot; /&gt; reference.">
        <paramref name="input" /> est une référence <see langword="null" />.</exception>
      <exception cref="T:System.FormatException" vsli:raw="&lt;paramref name=&quot;input&quot; /&gt; is not valid range Condition header value information.">
        <paramref name="input" /> n’est pas une information de valeur d’en-tête de condition de plage valide.</exception>
      <returns vsli:raw="A &lt;see cref=&quot;T:System.Net.Http.Headers.RangeConditionHeaderValue&quot; /&gt; instance.">Instance de <see cref="T:System.Net.Http.Headers.RangeConditionHeaderValue" />.</returns>
    </member>
    <member name="M:System.Net.Http.Headers.RangeConditionHeaderValue.System#ICloneable#Clone">
      <summary vsli:raw="Creates a new object that is a copy of the current &lt;see cref=&quot;T:System.Net.Http.Headers.RangeConditionHeaderValue&quot; /&gt; instance.">Crée un objet qui est une copie de l'instance <see cref="T:System.Net.Http.Headers.RangeConditionHeaderValue" /> actuelle.</summary>
      <returns vsli:raw="A copy of the current instance.">Copie de l'instance actuelle.</returns>
    </member>
    <member name="M:System.Net.Http.Headers.RangeConditionHeaderValue.ToString">
      <summary vsli:raw="Returns a string that represents the current &lt;see cref=&quot;T:System.Net.Http.Headers.RangeConditionHeaderValue&quot; /&gt; object.">Retourne une chaîne qui représente l'objet <see cref="T:System.Net.Http.Headers.RangeConditionHeaderValue" /> actuel.</summary>
      <returns vsli:raw="A string that represents the current object.">Chaîne qui représente l'objet actuel.</returns>
    </member>
    <member name="M:System.Net.Http.Headers.RangeConditionHeaderValue.TryParse(System.String,System.Net.Http.Headers.RangeConditionHeaderValue@)">
      <summary vsli:raw="Determines whether a string is valid &lt;see cref=&quot;T:System.Net.Http.Headers.RangeConditionHeaderValue&quot; /&gt; information.">Détermine si une chaîne est une information <see cref="T:System.Net.Http.Headers.RangeConditionHeaderValue" /> valide.</summary>
      <param name="input" vsli:raw="The string to validate.">Chaîne à valider.</param>
      <param name="parsedValue" vsli:raw="The &lt;see cref=&quot;T:System.Net.Http.Headers.RangeConditionHeaderValue&quot; /&gt; version of the string.">La version <see cref="T:System.Net.Http.Headers.RangeConditionHeaderValue" /> de la chaîne.</param>
      <returns vsli:raw="&lt;see langword=&quot;true&quot; /&gt; if &lt;paramref name=&quot;input&quot; /&gt; is valid &lt;see cref=&quot;T:System.Net.Http.Headers.RangeConditionHeaderValue&quot; /&gt; information; otherwise, &lt;see langword=&quot;false&quot; /&gt;.">
        <see langword="true" /> si <paramref name="input" /> est une information <see cref="T:System.Net.Http.Headers.RangeConditionHeaderValue" /> valide ; sinon, <see langword="false" />.</returns>
    </member>
    <member name="P:System.Net.Http.Headers.RangeConditionHeaderValue.Date">
      <summary vsli:raw="Gets the date from the &lt;see cref=&quot;T:System.Net.Http.Headers.RangeConditionHeaderValue&quot; /&gt; object.">Obtient la date à partir de l’objet <see cref="T:System.Net.Http.Headers.RangeConditionHeaderValue" />.</summary>
      <returns vsli:raw="The date from the &lt;see cref=&quot;T:System.Net.Http.Headers.RangeConditionHeaderValue&quot; /&gt; object.">La date à partir de l’objet <see cref="T:System.Net.Http.Headers.RangeConditionHeaderValue" />.</returns>
    </member>
    <member name="P:System.Net.Http.Headers.RangeConditionHeaderValue.EntityTag">
      <summary vsli:raw="Gets the entity tag from the &lt;see cref=&quot;T:System.Net.Http.Headers.RangeConditionHeaderValue&quot; /&gt; object.">Obtient la balise d’entité pour l’objet <see cref="T:System.Net.Http.Headers.RangeConditionHeaderValue" />.</summary>
      <returns vsli:raw="The entity tag from the &lt;see cref=&quot;T:System.Net.Http.Headers.RangeConditionHeaderValue&quot; /&gt; object.">La balise d’entité pour l’objet <see cref="T:System.Net.Http.Headers.RangeConditionHeaderValue" />.</returns>
    </member>
    <member name="T:System.Net.Http.Headers.RangeHeaderValue">
      <summary vsli:raw="Represents a Range header value.">Représente une valeur d'en-tête de plage.</summary>
    </member>
    <member name="M:System.Net.Http.Headers.RangeHeaderValue.#ctor">
      <summary vsli:raw="Initializes a new instance of the &lt;see cref=&quot;T:System.Net.Http.Headers.RangeHeaderValue&quot; /&gt; class.">Initialise une nouvelle instance de la classe <see cref="T:System.Net.Http.Headers.RangeHeaderValue" />.</summary>
    </member>
    <member name="M:System.Net.Http.Headers.RangeHeaderValue.#ctor(System.Nullable{System.Int64},System.Nullable{System.Int64})">
      <summary vsli:raw="Initializes a new instance of the &lt;see cref=&quot;T:System.Net.Http.Headers.RangeHeaderValue&quot; /&gt; class with a byte range.">Initialise une nouvelle instance de la classe <see cref="T:System.Net.Http.Headers.RangeHeaderValue" /> avec une plage d'octets.</summary>
      <param name="from" vsli:raw="The position at which to start sending data.">Position à laquelle démarrer l'envoi de données.</param>
      <param name="to" vsli:raw="The position at which to stop sending data.">Position à laquelle arrêter l'envoi de données.</param>
      <exception cref="T:System.ArgumentOutOfRangeException" vsli:raw="&lt;paramref name=&quot;from&quot; /&gt; is greater than &lt;paramref name=&quot;to&quot; /&gt;  &#xA;  &#xA; -or-  &#xA;  &#xA; &lt;paramref name=&quot;from&quot; /&gt; or &lt;paramref name=&quot;to&quot; /&gt; is less than 0.">
        <paramref name="from" /> est supérieur à <paramref name="to" />  
  
- ou - 
 <paramref name="from" /> ou <paramref name="to" /> est inférieur à 0.</exception>
    </member>
    <member name="M:System.Net.Http.Headers.RangeHeaderValue.Equals(System.Object)">
      <summary vsli:raw="Determines whether the specified &lt;see cref=&quot;T:System.Object&quot; /&gt; is equal to the current &lt;see cref=&quot;T:System.Net.Http.Headers.RangeHeaderValue&quot; /&gt; object.">Détermine si l'objet <see cref="T:System.Object" /> spécifié est égal à l'objet <see cref="T:System.Net.Http.Headers.RangeHeaderValue" /> actuel.</summary>
      <param name="obj" vsli:raw="The object to compare with the current object.">Objet à comparer à l'objet actuel.</param>
      <returns vsli:raw="&lt;see langword=&quot;true&quot; /&gt; if the specified &lt;see cref=&quot;T:System.Object&quot; /&gt; is equal to the current object; otherwise, &lt;see langword=&quot;false&quot; /&gt;.">
        <see langword="true" /> si le <see cref="T:System.Object" /> spécifié est égal à l’objet actuel ; sinon, <see langword="false" />.</returns>
    </member>
    <member name="M:System.Net.Http.Headers.RangeHeaderValue.GetHashCode">
      <summary vsli:raw="Serves as a hash function for an &lt;see cref=&quot;T:System.Net.Http.Headers.RangeHeaderValue&quot; /&gt; object.">Sert de fonction de hachage pour un objet <see cref="T:System.Net.Http.Headers.RangeHeaderValue" />.</summary>
      <returns vsli:raw="A hash code for the current object.">Code de hachage pour l'objet actuel.</returns>
    </member>
    <member name="M:System.Net.Http.Headers.RangeHeaderValue.Parse(System.String)">
      <summary vsli:raw="Converts a string to an &lt;see cref=&quot;T:System.Net.Http.Headers.RangeHeaderValue&quot; /&gt; instance.">Convertit une chaîne en instance <see cref="T:System.Net.Http.Headers.RangeHeaderValue" />.</summary>
      <param name="input" vsli:raw="A string that represents range header value information.">Chaîne qui représente les informations de valeur d’en-tête de plage.</param>
      <exception cref="T:System.ArgumentNullException" vsli:raw="&lt;paramref name=&quot;input&quot; /&gt; is a &lt;see langword=&quot;null&quot; /&gt; reference.">
        <paramref name="input" /> est une référence <see langword="null" />.</exception>
      <exception cref="T:System.FormatException" vsli:raw="&lt;paramref name=&quot;input&quot; /&gt; is not valid range header value information.">
        <paramref name="input" /> n’est pas une information de valeur d’en-tête de plage valide.</exception>
      <returns vsli:raw="A &lt;see cref=&quot;T:System.Net.Http.Headers.RangeHeaderValue&quot; /&gt; instance.">Instance de <see cref="T:System.Net.Http.Headers.RangeHeaderValue" />.</returns>
    </member>
    <member name="M:System.Net.Http.Headers.RangeHeaderValue.System#ICloneable#Clone">
      <summary vsli:raw="Creates a new object that is a copy of the current &lt;see cref=&quot;T:System.Net.Http.Headers.RangeHeaderValue&quot; /&gt; instance.">Crée un objet qui est une copie de l'instance <see cref="T:System.Net.Http.Headers.RangeHeaderValue" /> actuelle.</summary>
      <returns vsli:raw="A copy of the current instance.">Copie de l'instance actuelle.</returns>
    </member>
    <member name="M:System.Net.Http.Headers.RangeHeaderValue.ToString">
      <summary vsli:raw="Returns a string that represents the current &lt;see cref=&quot;T:System.Net.Http.Headers.RangeHeaderValue&quot; /&gt; object.">Retourne une chaîne qui représente l'objet <see cref="T:System.Net.Http.Headers.RangeHeaderValue" /> actuel.</summary>
      <returns vsli:raw="A string that represents the current object.">Chaîne qui représente l'objet actuel.</returns>
    </member>
    <member name="M:System.Net.Http.Headers.RangeHeaderValue.TryParse(System.String,System.Net.Http.Headers.RangeHeaderValue@)">
      <summary vsli:raw="Determines whether a string is valid &lt;see cref=&quot;T:System.Net.Http.Headers.RangeHeaderValue&quot; /&gt; information.">Détermine si une chaîne est une information <see cref="T:System.Net.Http.Headers.RangeHeaderValue" /> valide.</summary>
      <param name="input" vsli:raw="he string to validate.">Chaîne à valider.</param>
      <param name="parsedValue" vsli:raw="The &lt;see cref=&quot;T:System.Net.Http.Headers.RangeHeaderValue&quot; /&gt; version of the string.">La version <see cref="T:System.Net.Http.Headers.RangeHeaderValue" /> de la chaîne.</param>
      <returns vsli:raw="&lt;see langword=&quot;true&quot; /&gt; if &lt;paramref name=&quot;input&quot; /&gt; is valid &lt;see cref=&quot;T:System.Net.Http.Headers.AuthenticationHeaderValue&quot; /&gt; information; otherwise, &lt;see langword=&quot;false&quot; /&gt;.">
        <see langword="true" /> si <paramref name="input" /> est une information <see cref="T:System.Net.Http.Headers.AuthenticationHeaderValue" /> valide ; sinon, <see langword="false" />.</returns>
    </member>
    <member name="P:System.Net.Http.Headers.RangeHeaderValue.Ranges">
      <summary vsli:raw="Gets the ranges specified from the &lt;see cref=&quot;T:System.Net.Http.Headers.RangeHeaderValue&quot; /&gt; object.">Récupère les plages spécifiées dans l’objet <see cref="T:System.Net.Http.Headers.RangeHeaderValue" />.</summary>
      <returns vsli:raw="The ranges from the &lt;see cref=&quot;T:System.Net.Http.Headers.RangeHeaderValue&quot; /&gt; object.">Les plages de l’objet <see cref="T:System.Net.Http.Headers.RangeHeaderValue" />.</returns>
    </member>
    <member name="P:System.Net.Http.Headers.RangeHeaderValue.Unit">
      <summary vsli:raw="Gets the unit from the &lt;see cref=&quot;T:System.Net.Http.Headers.RangeHeaderValue&quot; /&gt; object.">Obtient l’unité à partir de l’objet <see cref="T:System.Net.Http.Headers.RangeHeaderValue" />.</summary>
      <returns vsli:raw="The unit from the &lt;see cref=&quot;T:System.Net.Http.Headers.RangeHeaderValue&quot; /&gt; object.">Unité à partir de l’objet <see cref="T:System.Net.Http.Headers.RangeHeaderValue" />.</returns>
    </member>
    <member name="T:System.Net.Http.Headers.RangeItemHeaderValue">
      <summary vsli:raw="Represents a byte range in a Range header value.">Représente une valeur d'en-tête de plage.</summary>
    </member>
    <member name="M:System.Net.Http.Headers.RangeItemHeaderValue.#ctor(System.Nullable{System.Int64},System.Nullable{System.Int64})">
      <summary vsli:raw="Initializes a new instance of the &lt;see cref=&quot;T:System.Net.Http.Headers.RangeItemHeaderValue&quot; /&gt; class.">Initialise une nouvelle instance de la classe <see cref="T:System.Net.Http.Headers.RangeItemHeaderValue" />.</summary>
      <param name="from" vsli:raw="The position at which to start sending data.">Position à laquelle démarrer l'envoi de données.</param>
      <param name="to" vsli:raw="The position at which to stop sending data.">Position à laquelle arrêter l'envoi de données.</param>
      <exception cref="T:System.ArgumentOutOfRangeException" vsli:raw="&lt;paramref name=&quot;from&quot; /&gt; is greater than &lt;paramref name=&quot;to&quot; /&gt;  &#xA;  &#xA; -or-  &#xA;  &#xA; &lt;paramref name=&quot;from&quot; /&gt; or &lt;paramref name=&quot;to&quot; /&gt; is less than 0.">
        <paramref name="from" /> est supérieur à <paramref name="to" />  
  
- ou - 
 <paramref name="from" /> ou <paramref name="to" /> est inférieur à 0.</exception>
    </member>
    <member name="M:System.Net.Http.Headers.RangeItemHeaderValue.Equals(System.Object)">
      <summary vsli:raw="Determines whether the specified &lt;see cref=&quot;T:System.Object&quot; /&gt; is equal to the current &lt;see cref=&quot;T:System.Net.Http.Headers.RangeItemHeaderValue&quot; /&gt; object.">Détermine si l'objet <see cref="T:System.Object" /> spécifié est égal à l'objet <see cref="T:System.Net.Http.Headers.RangeItemHeaderValue" /> actuel.</summary>
      <param name="obj" vsli:raw="The object to compare with the current object.">Objet à comparer à l'objet actuel.</param>
      <returns vsli:raw="&lt;see langword=&quot;true&quot; /&gt; if the specified &lt;see cref=&quot;T:System.Object&quot; /&gt; is equal to the current object; otherwise, &lt;see langword=&quot;false&quot; /&gt;.">
        <see langword="true" /> si le <see cref="T:System.Object" /> spécifié est égal à l’objet actuel ; sinon, <see langword="false" />.</returns>
    </member>
    <member name="M:System.Net.Http.Headers.RangeItemHeaderValue.GetHashCode">
      <summary vsli:raw="Serves as a hash function for an &lt;see cref=&quot;T:System.Net.Http.Headers.RangeItemHeaderValue&quot; /&gt; object.">Sert de fonction de hachage pour un objet <see cref="T:System.Net.Http.Headers.RangeItemHeaderValue" />.</summary>
      <returns vsli:raw="A hash code for the current object.">Code de hachage pour l'objet actuel.</returns>
    </member>
    <member name="M:System.Net.Http.Headers.RangeItemHeaderValue.System#ICloneable#Clone">
      <summary vsli:raw="Creates a new object that is a copy of the current &lt;see cref=&quot;T:System.Net.Http.Headers.RangeItemHeaderValue&quot; /&gt; instance.">Crée un objet qui est une copie de l'instance <see cref="T:System.Net.Http.Headers.RangeItemHeaderValue" /> actuelle.</summary>
      <returns vsli:raw="A copy of the current instance.">Copie de l'instance actuelle.</returns>
    </member>
    <member name="M:System.Net.Http.Headers.RangeItemHeaderValue.ToString">
      <summary vsli:raw="Returns a string that represents the current &lt;see cref=&quot;T:System.Net.Http.Headers.RangeItemHeaderValue&quot; /&gt; object.">Retourne une chaîne qui représente l'objet <see cref="T:System.Net.Http.Headers.RangeItemHeaderValue" /> actuel.</summary>
      <returns vsli:raw="A string that represents the current object.">Chaîne qui représente l'objet actuel.</returns>
    </member>
    <member name="P:System.Net.Http.Headers.RangeItemHeaderValue.From">
      <summary vsli:raw="Gets the position at which to start sending data.">Obtient la position à laquelle démarrer l'envoi de données.</summary>
      <returns vsli:raw="The position at which to start sending data.">Position à laquelle démarrer l'envoi de données.</returns>
    </member>
    <member name="P:System.Net.Http.Headers.RangeItemHeaderValue.To">
      <summary vsli:raw="Gets the position at which to stop sending data.">Obtient la position à laquelle arrêter l’envoi de données.</summary>
      <returns vsli:raw="The position at which to stop sending data.">Position à laquelle arrêter l'envoi de données.</returns>
    </member>
    <member name="T:System.Net.Http.Headers.RetryConditionHeaderValue">
      <summary vsli:raw="Represents a Retry-After header value which can either be a date/time or a timespan value.">Représente une valeur d'en-tête Retry-After qui peut être une date, une heure ou une valeur TimeSpan.</summary>
    </member>
    <member name="M:System.Net.Http.Headers.RetryConditionHeaderValue.#ctor(System.DateTimeOffset)">
      <summary vsli:raw="Initializes a new instance of the &lt;see cref=&quot;T:System.Net.Http.Headers.RetryConditionHeaderValue&quot; /&gt; class.">Initialise une nouvelle instance de la classe <see cref="T:System.Net.Http.Headers.RetryConditionHeaderValue" />.</summary>
      <param name="date" vsli:raw="The date and time offset used to initialize the new instance.">Offset de la date et de l'heure utilisé pour initialiser la nouvelle instance.</param>
    </member>
    <member name="M:System.Net.Http.Headers.RetryConditionHeaderValue.#ctor(System.TimeSpan)">
      <summary vsli:raw="Initializes a new instance of the &lt;see cref=&quot;T:System.Net.Http.Headers.RetryConditionHeaderValue&quot; /&gt; class.">Initialise une nouvelle instance de la classe <see cref="T:System.Net.Http.Headers.RetryConditionHeaderValue" />.</summary>
      <param name="delta" vsli:raw="The delta, in seconds, used to initialize the new instance.">Différentiel, en secondes, utilisé pour initialiser la nouvelle instance.</param>
    </member>
    <member name="M:System.Net.Http.Headers.RetryConditionHeaderValue.Equals(System.Object)">
      <summary vsli:raw="Determines whether the specified &lt;see cref=&quot;T:System.Object&quot; /&gt; is equal to the current &lt;see cref=&quot;T:System.Net.Http.Headers.RetryConditionHeaderValue&quot; /&gt; object.">Détermine si l'objet <see cref="T:System.Object" /> spécifié est égal à l'objet <see cref="T:System.Net.Http.Headers.RetryConditionHeaderValue" /> actuel.</summary>
      <param name="obj" vsli:raw="The object to compare with the current object.">Objet à comparer à l'objet actuel.</param>
      <returns vsli:raw="&lt;see langword=&quot;true&quot; /&gt; if the specified &lt;see cref=&quot;T:System.Object&quot; /&gt; is equal to the current object; otherwise, &lt;see langword=&quot;false&quot; /&gt;.">
        <see langword="true" /> si le <see cref="T:System.Object" /> spécifié est égal à l’objet actuel ; sinon, <see langword="false" />.</returns>
    </member>
    <member name="M:System.Net.Http.Headers.RetryConditionHeaderValue.GetHashCode">
      <summary vsli:raw="Serves as a hash function for an &lt;see cref=&quot;T:System.Net.Http.Headers.RetryConditionHeaderValue&quot; /&gt; object.">Sert de fonction de hachage pour un objet <see cref="T:System.Net.Http.Headers.RetryConditionHeaderValue" />.</summary>
      <returns vsli:raw="A hash code for the current object.">Code de hachage pour l'objet actuel.</returns>
    </member>
    <member name="M:System.Net.Http.Headers.RetryConditionHeaderValue.Parse(System.String)">
      <summary vsli:raw="Converts a string to an &lt;see cref=&quot;T:System.Net.Http.Headers.RetryConditionHeaderValue&quot; /&gt; instance.">Convertit une chaîne en instance <see cref="T:System.Net.Http.Headers.RetryConditionHeaderValue" />.</summary>
      <param name="input" vsli:raw="A string that represents retry condition header value information.">Chaîne qui représente les informations de valeur d’en-tête de condition de nouvelle tentative.</param>
      <exception cref="T:System.ArgumentNullException" vsli:raw="&lt;paramref name=&quot;input&quot; /&gt; is a &lt;see langword=&quot;null&quot; /&gt; reference.">
        <paramref name="input" /> est une référence <see langword="null" />.</exception>
      <exception cref="T:System.FormatException" vsli:raw="&lt;paramref name=&quot;input&quot; /&gt; is not valid retry condition header value information.">
        <paramref name="input" /> n’est pas une information de valeur d’en-tête de condition de nouvelle tentative valide.</exception>
      <returns vsli:raw="A &lt;see cref=&quot;T:System.Net.Http.Headers.RetryConditionHeaderValue&quot; /&gt; instance.">Instance de <see cref="T:System.Net.Http.Headers.RetryConditionHeaderValue" />.</returns>
    </member>
    <member name="M:System.Net.Http.Headers.RetryConditionHeaderValue.System#ICloneable#Clone">
      <summary vsli:raw="Creates a new object that is a copy of the current &lt;see cref=&quot;T:System.Net.Http.Headers.RetryConditionHeaderValue&quot; /&gt; instance.">Crée un objet qui est une copie de l'instance <see cref="T:System.Net.Http.Headers.RetryConditionHeaderValue" /> actuelle.</summary>
      <returns vsli:raw="A copy of the current instance.">Copie de l'instance actuelle.</returns>
    </member>
    <member name="M:System.Net.Http.Headers.RetryConditionHeaderValue.ToString">
      <summary vsli:raw="Returns a string that represents the current &lt;see cref=&quot;T:System.Net.Http.Headers.RetryConditionHeaderValue&quot; /&gt; object.">Retourne une chaîne qui représente l'objet <see cref="T:System.Net.Http.Headers.RetryConditionHeaderValue" /> actuel.</summary>
      <returns vsli:raw="A string that represents the current object.">Chaîne qui représente l'objet actuel.</returns>
    </member>
    <member name="M:System.Net.Http.Headers.RetryConditionHeaderValue.TryParse(System.String,System.Net.Http.Headers.RetryConditionHeaderValue@)">
      <summary vsli:raw="Determines whether a string is valid &lt;see cref=&quot;T:System.Net.Http.Headers.RetryConditionHeaderValue&quot; /&gt; information.">Détermine si une chaîne est une information <see cref="T:System.Net.Http.Headers.RetryConditionHeaderValue" /> valide.</summary>
      <param name="input" vsli:raw="The string to validate.">Chaîne à valider.</param>
      <param name="parsedValue" vsli:raw="The &lt;see cref=&quot;T:System.Net.Http.Headers.RetryConditionHeaderValue&quot; /&gt; version of the string.">La version <see cref="T:System.Net.Http.Headers.RetryConditionHeaderValue" /> de la chaîne.</param>
      <returns vsli:raw="&lt;see langword=&quot;true&quot; /&gt; if &lt;paramref name=&quot;input&quot; /&gt; is valid &lt;see cref=&quot;T:System.Net.Http.Headers.RetryConditionHeaderValue&quot; /&gt; information; otherwise, &lt;see langword=&quot;false&quot; /&gt;.">
        <see langword="true" /> si <paramref name="input" /> est une information <see cref="T:System.Net.Http.Headers.RetryConditionHeaderValue" /> valide ; sinon, <see langword="false" />.</returns>
    </member>
    <member name="P:System.Net.Http.Headers.RetryConditionHeaderValue.Date">
      <summary vsli:raw="Gets the date and time offset from the &lt;see cref=&quot;T:System.Net.Http.Headers.RetryConditionHeaderValue&quot; /&gt; object.">Obtient le décalage de date et d’heure à partir de l’objet <see cref="T:System.Net.Http.Headers.RetryConditionHeaderValue" />.</summary>
      <returns vsli:raw="The date and time offset from the &lt;see cref=&quot;T:System.Net.Http.Headers.RetryConditionHeaderValue&quot; /&gt; object.">Décalage de date et d’heure à partir de l’objet <see cref="T:System.Net.Http.Headers.RetryConditionHeaderValue" />.</returns>
    </member>
    <member name="P:System.Net.Http.Headers.RetryConditionHeaderValue.Delta">
      <summary vsli:raw="Gets the delta in seconds from the &lt;see cref=&quot;T:System.Net.Http.Headers.RetryConditionHeaderValue&quot; /&gt; object.">Obtient le delta en secondes à partir de l’objet <see cref="T:System.Net.Http.Headers.RetryConditionHeaderValue" />.</summary>
      <returns vsli:raw="The delta in seconds from the &lt;see cref=&quot;T:System.Net.Http.Headers.RetryConditionHeaderValue&quot; /&gt; object.">Delta en secondes à partir de l’objet <see cref="T:System.Net.Http.Headers.RetryConditionHeaderValue" />.</returns>
    </member>
    <member name="T:System.Net.Http.Headers.StringWithQualityHeaderValue">
      <summary vsli:raw="Represents a string header value with an optional quality.">Représente une valeur d'en-tête de chaîne avec une qualité facultative.</summary>
    </member>
    <member name="M:System.Net.Http.Headers.StringWithQualityHeaderValue.#ctor(System.String)">
      <summary vsli:raw="Initializes a new instance of the &lt;see cref=&quot;T:System.Net.Http.Headers.StringWithQualityHeaderValue&quot; /&gt; class.">Initialise une nouvelle instance de la classe <see cref="T:System.Net.Http.Headers.StringWithQualityHeaderValue" />.</summary>
      <param name="value" vsli:raw="The string used to initialize the new instance.">Chaîne utilisée pour initialiser la nouvelle instance.</param>
    </member>
    <member name="M:System.Net.Http.Headers.StringWithQualityHeaderValue.#ctor(System.String,System.Double)">
      <summary vsli:raw="Initializes a new instance of the &lt;see cref=&quot;T:System.Net.Http.Headers.StringWithQualityHeaderValue&quot; /&gt; class.">Initialise une nouvelle instance de la classe <see cref="T:System.Net.Http.Headers.StringWithQualityHeaderValue" />.</summary>
      <param name="value" vsli:raw="A string used to initialize the new instance.">Chaîne utilisée pour initialiser la nouvelle instance.</param>
      <param name="quality" vsli:raw="A quality factor used to initialize the new instance.">Considération de qualité utilisée pour initialiser la nouvelle instance.</param>
    </member>
    <member name="M:System.Net.Http.Headers.StringWithQualityHeaderValue.Equals(System.Object)">
      <summary vsli:raw="Determines whether the specified Object is equal to the current &lt;see cref=&quot;T:System.Net.Http.Headers.StringWithQualityHeaderValue&quot; /&gt; object.">Détermine si l'objet spécifié est identique à l'objet <see cref="T:System.Net.Http.Headers.StringWithQualityHeaderValue" /> actuel.</summary>
      <param name="obj" vsli:raw="The object to compare with the current object.">Objet à comparer à l'objet actuel.</param>
      <returns vsli:raw="&lt;see langword=&quot;true&quot; /&gt; if the specified &lt;see cref=&quot;T:System.Object&quot; /&gt; is equal to the current object; otherwise, &lt;see langword=&quot;false&quot; /&gt;.">
        <see langword="true" /> si le <see cref="T:System.Object" /> spécifié est égal à l’objet actuel ; sinon, <see langword="false" />.</returns>
    </member>
    <member name="M:System.Net.Http.Headers.StringWithQualityHeaderValue.GetHashCode">
      <summary vsli:raw="Serves as a hash function for an &lt;see cref=&quot;T:System.Net.Http.Headers.StringWithQualityHeaderValue&quot; /&gt; object.">Sert de fonction de hachage pour un objet <see cref="T:System.Net.Http.Headers.StringWithQualityHeaderValue" />.</summary>
      <returns vsli:raw="A hash code for the current object.">Code de hachage pour l'objet actuel.</returns>
    </member>
    <member name="M:System.Net.Http.Headers.StringWithQualityHeaderValue.Parse(System.String)">
      <summary vsli:raw="Converts a string to an &lt;see cref=&quot;T:System.Net.Http.Headers.StringWithQualityHeaderValue&quot; /&gt; instance.">Convertit une chaîne en instance <see cref="T:System.Net.Http.Headers.StringWithQualityHeaderValue" />.</summary>
      <param name="input" vsli:raw="A string that represents quality header value information.">Chaîne qui représente les informations de valeur d’en-tête de qualité.</param>
      <exception cref="T:System.ArgumentNullException" vsli:raw="&lt;paramref name=&quot;input&quot; /&gt; is a &lt;see langword=&quot;null&quot; /&gt; reference.">
        <paramref name="input" /> est une référence <see langword="null" />.</exception>
      <exception cref="T:System.FormatException" vsli:raw="&lt;paramref name=&quot;input&quot; /&gt; is not valid string with quality header value information.">
        <paramref name="input" /> n’est pas une chaîne valide avec des informations de valeur d’en-tête de qualité.</exception>
      <returns vsli:raw="A &lt;see cref=&quot;T:System.Net.Http.Headers.StringWithQualityHeaderValue&quot; /&gt; instance.">Instance de <see cref="T:System.Net.Http.Headers.StringWithQualityHeaderValue" />.</returns>
    </member>
    <member name="M:System.Net.Http.Headers.StringWithQualityHeaderValue.System#ICloneable#Clone">
      <summary vsli:raw="Creates a new object that is a copy of the current &lt;see cref=&quot;T:System.Net.Http.Headers.StringWithQualityHeaderValue&quot; /&gt; instance.">Crée un objet qui est une copie de l'instance <see cref="T:System.Net.Http.Headers.StringWithQualityHeaderValue" /> actuelle.</summary>
      <returns vsli:raw="A copy of the current instance.">Copie de l'instance actuelle.</returns>
    </member>
    <member name="M:System.Net.Http.Headers.StringWithQualityHeaderValue.ToString">
      <summary vsli:raw="Returns a string that represents the current &lt;see cref=&quot;T:System.Net.Http.Headers.StringWithQualityHeaderValue&quot; /&gt; object.">Retourne une chaîne qui représente l'objet <see cref="T:System.Net.Http.Headers.StringWithQualityHeaderValue" /> actuel.</summary>
      <returns vsli:raw="A string that represents the current object.">Chaîne qui représente l'objet actuel.</returns>
    </member>
    <member name="M:System.Net.Http.Headers.StringWithQualityHeaderValue.TryParse(System.String,System.Net.Http.Headers.StringWithQualityHeaderValue@)">
      <summary vsli:raw="Determines whether a string is valid &lt;see cref=&quot;T:System.Net.Http.Headers.StringWithQualityHeaderValue&quot; /&gt; information.">Détermine si une chaîne est une information <see cref="T:System.Net.Http.Headers.StringWithQualityHeaderValue" /> valide.</summary>
      <param name="input" vsli:raw="The string to validate.">Chaîne à valider.</param>
      <param name="parsedValue" vsli:raw="The &lt;see cref=&quot;T:System.Net.Http.Headers.StringWithQualityHeaderValue&quot; /&gt; version of the string.">La version <see cref="T:System.Net.Http.Headers.StringWithQualityHeaderValue" /> de la chaîne.</param>
      <returns vsli:raw="&lt;see langword=&quot;true&quot; /&gt; if &lt;paramref name=&quot;input&quot; /&gt; is valid &lt;see cref=&quot;T:System.Net.Http.Headers.StringWithQualityHeaderValue&quot; /&gt; information; otherwise, &lt;see langword=&quot;false&quot; /&gt;.">
        <see langword="true" /> si <paramref name="input" /> est une information <see cref="T:System.Net.Http.Headers.StringWithQualityHeaderValue" /> valide ; sinon, <see langword="false" />.</returns>
    </member>
    <member name="P:System.Net.Http.Headers.StringWithQualityHeaderValue.Quality">
      <summary vsli:raw="Gets the quality factor from the &lt;see cref=&quot;T:System.Net.Http.Headers.StringWithQualityHeaderValue&quot; /&gt; object.">Récupère le facteur de qualité dans l’objet <see cref="T:System.Net.Http.Headers.StringWithQualityHeaderValue" />.</summary>
      <returns vsli:raw="The quality factor from the &lt;see cref=&quot;T:System.Net.Http.Headers.StringWithQualityHeaderValue&quot; /&gt; object.">Le facteur de qualité de l’objet <see cref="T:System.Net.Http.Headers.StringWithQualityHeaderValue" />.</returns>
    </member>
    <member name="P:System.Net.Http.Headers.StringWithQualityHeaderValue.Value">
      <summary vsli:raw="Gets the string value from the &lt;see cref=&quot;T:System.Net.Http.Headers.StringWithQualityHeaderValue&quot; /&gt; object.">Obtient la valeur de chaîne à partir de l’objet <see cref="T:System.Net.Http.Headers.StringWithQualityHeaderValue" />.</summary>
      <returns vsli:raw="The string value from the &lt;see cref=&quot;T:System.Net.Http.Headers.StringWithQualityHeaderValue&quot; /&gt; object.">Valeur de chaîne à partir de l’objet <see cref="T:System.Net.Http.Headers.StringWithQualityHeaderValue" />.</returns>
    </member>
    <member name="T:System.Net.Http.Headers.TransferCodingHeaderValue">
      <summary vsli:raw="Represents an accept-encoding header value.">Représente une valeur d'en-tête Accept-Encoding.</summary>
    </member>
    <member name="M:System.Net.Http.Headers.TransferCodingHeaderValue.#ctor(System.Net.Http.Headers.TransferCodingHeaderValue)">
      <summary vsli:raw="Initializes a new instance of the &lt;see cref=&quot;T:System.Net.Http.Headers.TransferCodingHeaderValue&quot; /&gt; class.">Initialise une nouvelle instance de la classe <see cref="T:System.Net.Http.Headers.TransferCodingHeaderValue" />.</summary>
      <param name="source" vsli:raw="A &lt;see cref=&quot;T:System.Net.Http.Headers.TransferCodingHeaderValue&quot; /&gt; object used to initialize the new instance.">Objet <see cref="T:System.Net.Http.Headers.TransferCodingHeaderValue" /> utilisé pour initialiser la nouvelle instance.</param>
    </member>
    <member name="M:System.Net.Http.Headers.TransferCodingHeaderValue.#ctor(System.String)">
      <summary vsli:raw="Initializes a new instance of the &lt;see cref=&quot;T:System.Net.Http.Headers.TransferCodingHeaderValue&quot; /&gt; class.">Initialise une nouvelle instance de la classe <see cref="T:System.Net.Http.Headers.TransferCodingHeaderValue" />.</summary>
      <param name="value" vsli:raw="A string used to initialize the new instance.">Chaîne utilisée pour initialiser la nouvelle instance.</param>
    </member>
    <member name="M:System.Net.Http.Headers.TransferCodingHeaderValue.Equals(System.Object)">
      <summary vsli:raw="Determines whether the specified Object is equal to the current &lt;see cref=&quot;T:System.Net.Http.Headers.TransferCodingHeaderValue&quot; /&gt; object.">Détermine si l'objet spécifié est identique à l'objet <see cref="T:System.Net.Http.Headers.TransferCodingHeaderValue" /> actuel.</summary>
      <param name="obj" vsli:raw="The object to compare with the current object.">Objet à comparer à l'objet actuel.</param>
      <returns vsli:raw="&lt;see langword=&quot;true&quot; /&gt; if the specified &lt;see cref=&quot;T:System.Object&quot; /&gt; is equal to the current object; otherwise, &lt;see langword=&quot;false&quot; /&gt;.">
        <see langword="true" /> si le <see cref="T:System.Object" /> spécifié est égal à l’objet actuel ; sinon, <see langword="false" />.</returns>
    </member>
    <member name="M:System.Net.Http.Headers.TransferCodingHeaderValue.GetHashCode">
      <summary vsli:raw="Serves as a hash function for an &lt;see cref=&quot;T:System.Net.Http.Headers.TransferCodingHeaderValue&quot; /&gt; object.">Sert de fonction de hachage pour un objet <see cref="T:System.Net.Http.Headers.TransferCodingHeaderValue" />.</summary>
      <returns vsli:raw="A hash code for the current object.">Code de hachage pour l'objet actuel.</returns>
    </member>
    <member name="M:System.Net.Http.Headers.TransferCodingHeaderValue.Parse(System.String)">
      <summary vsli:raw="Converts a string to an &lt;see cref=&quot;T:System.Net.Http.Headers.TransferCodingHeaderValue&quot; /&gt; instance.">Convertit une chaîne en instance <see cref="T:System.Net.Http.Headers.TransferCodingHeaderValue" />.</summary>
      <param name="input" vsli:raw="A string that represents transfer-coding header value information.">Chaîne qui représente les informations de valeur d’en-tête de codage de transfert.</param>
      <exception cref="T:System.ArgumentNullException" vsli:raw="&lt;paramref name=&quot;input&quot; /&gt; is a &lt;see langword=&quot;null&quot; /&gt; reference.">
        <paramref name="input" /> est une référence <see langword="null" />.</exception>
      <exception cref="T:System.FormatException" vsli:raw="&lt;paramref name=&quot;input&quot; /&gt; is not valid transfer-coding header value information.">
        <paramref name="input" /> n’est pas une information valide de valeur d’en-tête de codage de transfert.</exception>
      <returns vsli:raw="A &lt;see cref=&quot;T:System.Net.Http.Headers.TransferCodingHeaderValue&quot; /&gt; instance.">Instance de <see cref="T:System.Net.Http.Headers.TransferCodingHeaderValue" />.</returns>
    </member>
    <member name="M:System.Net.Http.Headers.TransferCodingHeaderValue.System#ICloneable#Clone">
      <summary vsli:raw="Creates a new object that is a copy of the current &lt;see cref=&quot;T:System.Net.Http.Headers.TransferCodingHeaderValue&quot; /&gt; instance.">Crée un objet qui est une copie de l'instance <see cref="T:System.Net.Http.Headers.TransferCodingHeaderValue" /> actuelle.</summary>
      <returns vsli:raw="A copy of the current instance.">Copie de l'instance actuelle.</returns>
    </member>
    <member name="M:System.Net.Http.Headers.TransferCodingHeaderValue.ToString">
      <summary vsli:raw="Returns a string that represents the current &lt;see cref=&quot;T:System.Net.Http.Headers.TransferCodingHeaderValue&quot; /&gt; object.">Retourne une chaîne qui représente l'objet <see cref="T:System.Net.Http.Headers.TransferCodingHeaderValue" /> actuel.</summary>
      <returns vsli:raw="A string that represents the current object.">Chaîne qui représente l'objet actuel.</returns>
    </member>
    <member name="M:System.Net.Http.Headers.TransferCodingHeaderValue.TryParse(System.String,System.Net.Http.Headers.TransferCodingHeaderValue@)">
      <summary vsli:raw="Determines whether a string is valid &lt;see cref=&quot;T:System.Net.Http.Headers.TransferCodingHeaderValue&quot; /&gt; information.">Détermine si une chaîne est une information <see cref="T:System.Net.Http.Headers.TransferCodingHeaderValue" /> valide.</summary>
      <param name="input" vsli:raw="The string to validate.">Chaîne à valider.</param>
      <param name="parsedValue" vsli:raw="The &lt;see cref=&quot;T:System.Net.Http.Headers.TransferCodingHeaderValue&quot; /&gt; version of the string.">La version <see cref="T:System.Net.Http.Headers.TransferCodingHeaderValue" /> de la chaîne.</param>
      <returns vsli:raw="&lt;see langword=&quot;true&quot; /&gt; if &lt;paramref name=&quot;input&quot; /&gt; is valid &lt;see cref=&quot;T:System.Net.Http.Headers.TransferCodingHeaderValue&quot; /&gt; information; otherwise, &lt;see langword=&quot;false&quot; /&gt;.">
        <see langword="true" /> si <paramref name="input" /> est une information <see cref="T:System.Net.Http.Headers.TransferCodingHeaderValue" /> valide ; sinon, <see langword="false" />.</returns>
    </member>
    <member name="P:System.Net.Http.Headers.TransferCodingHeaderValue.Parameters">
      <summary vsli:raw="Gets the transfer-coding parameters.">Obtient les paramètres de codage de transfert.</summary>
      <returns vsli:raw="The transfer-coding parameters.">Paramètres de codage de transfert.</returns>
    </member>
    <member name="P:System.Net.Http.Headers.TransferCodingHeaderValue.Value">
      <summary vsli:raw="Gets the transfer-coding value.">Obtient la valeur de codage de transfert.</summary>
      <returns vsli:raw="The transfer-coding value.">La valeur de codage de transfert.</returns>
    </member>
    <member name="T:System.Net.Http.Headers.TransferCodingWithQualityHeaderValue">
      <summary vsli:raw="Represents an Accept-Encoding header value with optional quality factor.">Représente une valeur d'en-tête Accept-Encoding avec une considération de qualité facultative.</summary>
    </member>
    <member name="M:System.Net.Http.Headers.TransferCodingWithQualityHeaderValue.#ctor(System.String)">
      <summary vsli:raw="Initializes a new instance of the &lt;see cref=&quot;T:System.Net.Http.Headers.TransferCodingWithQualityHeaderValue&quot; /&gt; class.">Initialise une nouvelle instance de la classe <see cref="T:System.Net.Http.Headers.TransferCodingWithQualityHeaderValue" />.</summary>
      <param name="value" vsli:raw="A string used to initialize the new instance.">Chaîne utilisée pour initialiser la nouvelle instance.</param>
    </member>
    <member name="M:System.Net.Http.Headers.TransferCodingWithQualityHeaderValue.#ctor(System.String,System.Double)">
      <summary vsli:raw="Initializes a new instance of the &lt;see cref=&quot;T:System.Net.Http.Headers.TransferCodingWithQualityHeaderValue&quot; /&gt; class.">Initialise une nouvelle instance de la classe <see cref="T:System.Net.Http.Headers.TransferCodingWithQualityHeaderValue" />.</summary>
      <param name="value" vsli:raw="A string used to initialize the new instance.">Chaîne utilisée pour initialiser la nouvelle instance.</param>
      <param name="quality" vsli:raw="A value for the quality factor.">Valeur pour la considération de qualité.</param>
    </member>
    <member name="M:System.Net.Http.Headers.TransferCodingWithQualityHeaderValue.Parse(System.String)">
      <summary vsli:raw="Converts a string to an &lt;see cref=&quot;T:System.Net.Http.Headers.TransferCodingWithQualityHeaderValue&quot; /&gt; instance.">Convertit une chaîne en instance <see cref="T:System.Net.Http.Headers.TransferCodingWithQualityHeaderValue" />.</summary>
      <param name="input" vsli:raw="A string that represents transfer-coding value information.">Chaîne qui représente les informations de valeur de codage de transfert.</param>
      <exception cref="T:System.ArgumentNullException" vsli:raw="&lt;paramref name=&quot;input&quot; /&gt; is a &lt;see langword=&quot;null&quot; /&gt; reference.">
        <paramref name="input" /> est une référence <see langword="null" />.</exception>
      <exception cref="T:System.FormatException" vsli:raw="&lt;paramref name=&quot;input&quot; /&gt; is not valid transfer-coding with quality header value information.">
        <paramref name="input" /> n’est pas un codage de transfert valide avec des informations de valeur d’en-tête de qualité.</exception>
      <returns vsli:raw="A &lt;see cref=&quot;T:System.Net.Http.Headers.TransferCodingWithQualityHeaderValue&quot; /&gt; instance.">Instance de <see cref="T:System.Net.Http.Headers.TransferCodingWithQualityHeaderValue" />.</returns>
    </member>
    <member name="M:System.Net.Http.Headers.TransferCodingWithQualityHeaderValue.System#ICloneable#Clone">
      <summary vsli:raw="Creates a new object that is a copy of the current &lt;see cref=&quot;T:System.Net.Http.Headers.TransferCodingWithQualityHeaderValue&quot; /&gt; instance.">Crée un objet qui est une copie de l'instance <see cref="T:System.Net.Http.Headers.TransferCodingWithQualityHeaderValue" /> actuelle.</summary>
      <returns vsli:raw="A copy of the current instance.">Copie de l'instance actuelle.</returns>
    </member>
    <member name="M:System.Net.Http.Headers.TransferCodingWithQualityHeaderValue.TryParse(System.String,System.Net.Http.Headers.TransferCodingWithQualityHeaderValue@)">
      <summary vsli:raw="Determines whether a string is valid &lt;see cref=&quot;T:System.Net.Http.Headers.TransferCodingWithQualityHeaderValue&quot; /&gt; information.">Détermine si une chaîne est une information <see cref="T:System.Net.Http.Headers.TransferCodingWithQualityHeaderValue" /> valide.</summary>
      <param name="input" vsli:raw="The string to validate.">Chaîne à valider.</param>
      <param name="parsedValue" vsli:raw="The &lt;see cref=&quot;T:System.Net.Http.Headers.TransferCodingWithQualityHeaderValue&quot; /&gt; version of the string.">La version <see cref="T:System.Net.Http.Headers.TransferCodingWithQualityHeaderValue" /> de la chaîne.</param>
      <returns vsli:raw="&lt;see langword=&quot;true&quot; /&gt; if &lt;paramref name=&quot;input&quot; /&gt; is valid &lt;see cref=&quot;T:System.Net.Http.Headers.TransferCodingWithQualityHeaderValue&quot; /&gt; information; otherwise, &lt;see langword=&quot;false&quot; /&gt;.">
        <see langword="true" /> si <paramref name="input" /> est une information <see cref="T:System.Net.Http.Headers.TransferCodingWithQualityHeaderValue" /> valide ; sinon, <see langword="false" />.</returns>
    </member>
    <member name="P:System.Net.Http.Headers.TransferCodingWithQualityHeaderValue.Quality">
      <summary vsli:raw="Gets the quality factor from the &lt;see cref=&quot;T:System.Net.Http.Headers.TransferCodingWithQualityHeaderValue&quot; /&gt;.">Récupère le facteur de qualité dans la <see cref="T:System.Net.Http.Headers.TransferCodingWithQualityHeaderValue" />.</summary>
      <returns vsli:raw="The quality factor from the &lt;see cref=&quot;T:System.Net.Http.Headers.TransferCodingWithQualityHeaderValue&quot; /&gt;.">Le facteur de qualité de la <see cref="T:System.Net.Http.Headers.TransferCodingWithQualityHeaderValue" />.</returns>
    </member>
    <member name="T:System.Net.Http.Headers.ViaHeaderValue">
      <summary vsli:raw="Represents the value of a Via header.">Représente la valeur d'un en-tête Via.</summary>
    </member>
    <member name="M:System.Net.Http.Headers.ViaHeaderValue.#ctor(System.String,System.String)">
      <summary vsli:raw="Initializes a new instance of the &lt;see cref=&quot;T:System.Net.Http.Headers.ViaHeaderValue&quot; /&gt; class.">Initialise une nouvelle instance de la classe <see cref="T:System.Net.Http.Headers.ViaHeaderValue" />.</summary>
      <param name="protocolVersion" vsli:raw="The protocol version of the received protocol.">Version de protocole du protocole reçu.</param>
      <param name="receivedBy" vsli:raw="The host and port that the request or response was received by.">L’hôte et le port de réception de la requête ou de la réponse.</param>
    </member>
    <member name="M:System.Net.Http.Headers.ViaHeaderValue.#ctor(System.String,System.String,System.String)">
      <summary vsli:raw="Initializes a new instance of the &lt;see cref=&quot;T:System.Net.Http.Headers.ViaHeaderValue&quot; /&gt; class.">Initialise une nouvelle instance de la classe <see cref="T:System.Net.Http.Headers.ViaHeaderValue" />.</summary>
      <param name="protocolVersion" vsli:raw="The protocol version of the received protocol.">Version de protocole du protocole reçu.</param>
      <param name="receivedBy" vsli:raw="The host and port that the request or response was received by.">L’hôte et le port de réception de la requête ou de la réponse.</param>
      <param name="protocolName" vsli:raw="The protocol name of the received protocol.">Nom de protocole du protocole reçu.</param>
    </member>
    <member name="M:System.Net.Http.Headers.ViaHeaderValue.#ctor(System.String,System.String,System.String,System.String)">
      <summary vsli:raw="Initializes a new instance of the &lt;see cref=&quot;T:System.Net.Http.Headers.ViaHeaderValue&quot; /&gt; class.">Initialise une nouvelle instance de la classe <see cref="T:System.Net.Http.Headers.ViaHeaderValue" />.</summary>
      <param name="protocolVersion" vsli:raw="The protocol version of the received protocol.">Version de protocole du protocole reçu.</param>
      <param name="receivedBy" vsli:raw="The host and port that the request or response was received by.">L’hôte et le port de réception de la requête ou de la réponse.</param>
      <param name="protocolName" vsli:raw="The protocol name of the received protocol.">Nom de protocole du protocole reçu.</param>
      <param name="comment" vsli:raw="The comment field used to identify the software of the recipient proxy or gateway.">Champ de commentaire permettent d’identifier le logiciel de la passerelle ou du proxy destinataire.</param>
    </member>
    <member name="M:System.Net.Http.Headers.ViaHeaderValue.Equals(System.Object)">
      <summary vsli:raw="Determines whether the specified &lt;see cref=&quot;T:System.Object&quot; /&gt; is equal to the current &lt;see cref=&quot;T:System.Net.Http.Headers.ViaHeaderValue&quot; /&gt; object.">Détermine si l'objet <see cref="T:System.Object" /> spécifié est égal à l'objet <see cref="T:System.Net.Http.Headers.ViaHeaderValue" /> actuel.</summary>
      <param name="obj" vsli:raw="The object to compare with the current object.">Objet à comparer à l'objet actuel.</param>
      <returns vsli:raw="&lt;see langword=&quot;true&quot; /&gt; if the specified &lt;see cref=&quot;T:System.Object&quot; /&gt; is equal to the current object; otherwise, &lt;see langword=&quot;false&quot; /&gt;.">
        <see langword="true" /> si le <see cref="T:System.Object" /> spécifié est égal à l’objet actuel ; sinon, <see langword="false" />.</returns>
    </member>
    <member name="M:System.Net.Http.Headers.ViaHeaderValue.GetHashCode">
      <summary vsli:raw="Serves as a hash function for an &lt;see cref=&quot;T:System.Net.Http.Headers.ViaHeaderValue&quot; /&gt; object.">Sert de fonction de hachage pour un objet <see cref="T:System.Net.Http.Headers.ViaHeaderValue" />.</summary>
      <returns vsli:raw="A hash code for the current object.">Code de hachage pour l'objet actuel.</returns>
    </member>
    <member name="M:System.Net.Http.Headers.ViaHeaderValue.Parse(System.String)">
      <summary vsli:raw="Converts a string to an &lt;see cref=&quot;T:System.Net.Http.Headers.ViaHeaderValue&quot; /&gt; instance.">Convertit une chaîne en instance <see cref="T:System.Net.Http.Headers.ViaHeaderValue" />.</summary>
      <param name="input" vsli:raw="A string that represents via header value information.">Chaîne qui représente les informations de valeur d’en-tête.</param>
      <exception cref="T:System.ArgumentNullException" vsli:raw="&lt;paramref name=&quot;input&quot; /&gt; is a &lt;see langword=&quot;null&quot; /&gt; reference.">
        <paramref name="input" /> est une référence <see langword="null" />.</exception>
      <exception cref="T:System.FormatException" vsli:raw="&lt;paramref name=&quot;input&quot; /&gt; is not valid via header value information.">
        <paramref name="input" /> n’est pas valide via les informations de valeur d’en-tête.</exception>
      <returns vsli:raw="A &lt;see cref=&quot;T:System.Net.Http.Headers.ViaHeaderValue&quot; /&gt; instance.">Instance de <see cref="T:System.Net.Http.Headers.ViaHeaderValue" />.</returns>
    </member>
    <member name="M:System.Net.Http.Headers.ViaHeaderValue.System#ICloneable#Clone">
      <summary vsli:raw="Creates a new object that is a copy of the current &lt;see cref=&quot;T:System.Net.Http.Headers.ViaHeaderValue&quot; /&gt; instance.">Crée un objet qui est une copie de l'instance <see cref="T:System.Net.Http.Headers.ViaHeaderValue" /> actuelle.</summary>
      <returns vsli:raw="A copy of the current instance.">Copie de l'instance actuelle.</returns>
    </member>
    <member name="M:System.Net.Http.Headers.ViaHeaderValue.ToString">
      <summary vsli:raw="Returns a string that represents the current &lt;see cref=&quot;T:System.Net.Http.Headers.ViaHeaderValue&quot; /&gt; object.">Retourne une chaîne qui représente l'objet <see cref="T:System.Net.Http.Headers.ViaHeaderValue" /> actuel.</summary>
      <returns vsli:raw="A string that represents the current object.">Chaîne qui représente l'objet actuel.</returns>
    </member>
    <member name="M:System.Net.Http.Headers.ViaHeaderValue.TryParse(System.String,System.Net.Http.Headers.ViaHeaderValue@)">
      <summary vsli:raw="Determines whether a string is valid &lt;see cref=&quot;T:System.Net.Http.Headers.ViaHeaderValue&quot; /&gt; information.">Détermine si une chaîne est une information <see cref="T:System.Net.Http.Headers.ViaHeaderValue" /> valide.</summary>
      <param name="input" vsli:raw="The string to validate.">Chaîne à valider.</param>
      <param name="parsedValue" vsli:raw="The &lt;see cref=&quot;T:System.Net.Http.Headers.ViaHeaderValue&quot; /&gt; version of the string.">La version <see cref="T:System.Net.Http.Headers.ViaHeaderValue" /> de la chaîne.</param>
      <returns vsli:raw="&lt;see langword=&quot;true&quot; /&gt; if &lt;paramref name=&quot;input&quot; /&gt; is valid &lt;see cref=&quot;T:System.Net.Http.Headers.ViaHeaderValue&quot; /&gt; information; otherwise, &lt;see langword=&quot;false&quot; /&gt;.">
        <see langword="true" /> si <paramref name="input" /> est une information <see cref="T:System.Net.Http.Headers.ViaHeaderValue" /> valide ; sinon, <see langword="false" />.</returns>
    </member>
    <member name="P:System.Net.Http.Headers.ViaHeaderValue.Comment">
      <summary vsli:raw="Gets the comment field used to identify the software of the recipient proxy or gateway.">Obtient le champ de commentaire permettent d’identifier le logiciel de la passerelle ou du proxy destinataire.</summary>
      <returns vsli:raw="The comment field used to identify the software of the recipient proxy or gateway.">Champ de commentaire permettent d’identifier le logiciel de la passerelle ou du proxy destinataire.</returns>
    </member>
    <member name="P:System.Net.Http.Headers.ViaHeaderValue.ProtocolName">
      <summary vsli:raw="Gets the protocol name of the received protocol.">Obtient le nom du protocole reçu.</summary>
      <returns vsli:raw="The protocol name.">Nom du protocole.</returns>
    </member>
    <member name="P:System.Net.Http.Headers.ViaHeaderValue.ProtocolVersion">
      <summary vsli:raw="Gets the protocol version of the received protocol.">Obtient la version du protocole reçu.</summary>
      <returns vsli:raw="The protocol version.">Version du protocole.</returns>
    </member>
    <member name="P:System.Net.Http.Headers.ViaHeaderValue.ReceivedBy">
      <summary vsli:raw="Gets the host and port that the request or response was received by.">Obtient l’hôte et le port de réception de la requête ou de la réponse.</summary>
      <returns vsli:raw="The host and port that the request or response was received by.">L’hôte et le port de réception de la requête ou de la réponse.</returns>
    </member>
    <member name="T:System.Net.Http.Headers.WarningHeaderValue">
      <summary vsli:raw="Represents a warning value used by the Warning header.">Représente une valeur d'avertissement utilisée par l'en-tête Warning.</summary>
    </member>
    <member name="M:System.Net.Http.Headers.WarningHeaderValue.#ctor(System.Int32,System.String,System.String)">
      <summary vsli:raw="Initializes a new instance of the &lt;see cref=&quot;T:System.Net.Http.Headers.WarningHeaderValue&quot; /&gt; class.">Initialise une nouvelle instance de la classe <see cref="T:System.Net.Http.Headers.WarningHeaderValue" />.</summary>
      <param name="code" vsli:raw="The specific warning code.">Code d’avertissement spécifique.</param>
      <param name="agent" vsli:raw="The host that attached the warning.">L’hôte qui a joint l’avertissement.</param>
      <param name="text" vsli:raw="A quoted-string containing the warning text.">Chaîne entre guillemets contenant le texte d’avertissement.</param>
    </member>
    <member name="M:System.Net.Http.Headers.WarningHeaderValue.#ctor(System.Int32,System.String,System.String,System.DateTimeOffset)">
      <summary vsli:raw="Initializes a new instance of the &lt;see cref=&quot;T:System.Net.Http.Headers.WarningHeaderValue&quot; /&gt; class.">Initialise une nouvelle instance de la classe <see cref="T:System.Net.Http.Headers.WarningHeaderValue" />.</summary>
      <param name="code" vsli:raw="The specific warning code.">Code d’avertissement spécifique.</param>
      <param name="agent" vsli:raw="The host that attached the warning.">L’hôte qui a joint l’avertissement.</param>
      <param name="text" vsli:raw="A quoted-string containing the warning text.">Chaîne entre guillemets contenant le texte d’avertissement.</param>
      <param name="date" vsli:raw="The date/time stamp of the warning.">Horodatage date/heure de l’avertissement.</param>
    </member>
    <member name="M:System.Net.Http.Headers.WarningHeaderValue.Equals(System.Object)">
      <summary vsli:raw="Determines whether the specified &lt;see cref=&quot;T:System.Object&quot; /&gt; is equal to the current &lt;see cref=&quot;T:System.Net.Http.Headers.WarningHeaderValue&quot; /&gt; object.">Détermine si l'objet <see cref="T:System.Object" /> spécifié est égal à l'objet <see cref="T:System.Net.Http.Headers.WarningHeaderValue" /> actuel.</summary>
      <param name="obj" vsli:raw="The object to compare with the current object.">Objet à comparer à l'objet actuel.</param>
      <returns vsli:raw="&lt;see langword=&quot;true&quot; /&gt; if the specified &lt;see cref=&quot;T:System.Object&quot; /&gt; is equal to the current object; otherwise, &lt;see langword=&quot;false&quot; /&gt;.">
        <see langword="true" /> si le <see cref="T:System.Object" /> spécifié est égal à l’objet actuel ; sinon, <see langword="false" />.</returns>
    </member>
    <member name="M:System.Net.Http.Headers.WarningHeaderValue.GetHashCode">
      <summary vsli:raw="Serves as a hash function for an &lt;see cref=&quot;T:System.Net.Http.Headers.WarningHeaderValue&quot; /&gt; object.">Sert de fonction de hachage pour un objet <see cref="T:System.Net.Http.Headers.WarningHeaderValue" />.</summary>
      <returns vsli:raw="A hash code for the current object.">Code de hachage pour l'objet actuel.</returns>
    </member>
    <member name="M:System.Net.Http.Headers.WarningHeaderValue.Parse(System.String)">
      <summary vsli:raw="Converts a string to an &lt;see cref=&quot;T:System.Net.Http.Headers.WarningHeaderValue&quot; /&gt; instance.">Convertit une chaîne en instance <see cref="T:System.Net.Http.Headers.WarningHeaderValue" />.</summary>
      <param name="input" vsli:raw="A string that represents authentication header value information.">Chaîne qui représente les informations de valeur d’en-tête d'authentification.</param>
      <exception cref="T:System.ArgumentNullException" vsli:raw="&lt;paramref name=&quot;input&quot; /&gt; is a &lt;see langword=&quot;null&quot; /&gt; reference.">
        <paramref name="input" /> est une référence <see langword="null" />.</exception>
      <exception cref="T:System.FormatException" vsli:raw="&lt;paramref name=&quot;input&quot; /&gt; is not valid authentication header value information.">
        <paramref name="input" /> n’est pas une information de valeur d’en-tête d'authentification valide.</exception>
      <returns vsli:raw="Returns a &lt;see cref=&quot;T:System.Net.Http.Headers.WarningHeaderValue&quot; /&gt; instance.">Retourne une instance <see cref="T:System.Net.Http.Headers.WarningHeaderValue" />.</returns>
    </member>
    <member name="M:System.Net.Http.Headers.WarningHeaderValue.System#ICloneable#Clone">
      <summary vsli:raw="Creates a new object that is a copy of the current &lt;see cref=&quot;T:System.Net.Http.Headers.WarningHeaderValue&quot; /&gt; instance.">Crée un objet qui est une copie de l'instance <see cref="T:System.Net.Http.Headers.WarningHeaderValue" /> actuelle.</summary>
      <returns vsli:raw="Returns a copy of the current instance.">Renvoie une copie de l'instance active.</returns>
    </member>
    <member name="M:System.Net.Http.Headers.WarningHeaderValue.ToString">
      <summary vsli:raw="Returns a string that represents the current &lt;see cref=&quot;T:System.Net.Http.Headers.WarningHeaderValue&quot; /&gt; object.">Retourne une chaîne qui représente l'objet <see cref="T:System.Net.Http.Headers.WarningHeaderValue" /> actuel.</summary>
      <returns vsli:raw="A string that represents the current object.">Chaîne qui représente l'objet actuel.</returns>
    </member>
    <member name="M:System.Net.Http.Headers.WarningHeaderValue.TryParse(System.String,System.Net.Http.Headers.WarningHeaderValue@)">
      <summary vsli:raw="Determines whether a string is valid &lt;see cref=&quot;T:System.Net.Http.Headers.WarningHeaderValue&quot; /&gt; information.">Détermine si une chaîne est une information <see cref="T:System.Net.Http.Headers.WarningHeaderValue" /> valide.</summary>
      <param name="input" vsli:raw="The string to validate.">Chaîne à valider.</param>
      <param name="parsedValue" vsli:raw="The &lt;see cref=&quot;T:System.Net.Http.Headers.WarningHeaderValue&quot; /&gt; version of the string.">La version <see cref="T:System.Net.Http.Headers.WarningHeaderValue" /> de la chaîne.</param>
      <returns vsli:raw="&lt;see langword=&quot;true&quot; /&gt; if &lt;paramref name=&quot;input&quot; /&gt; is valid &lt;see cref=&quot;T:System.Net.Http.Headers.WarningHeaderValue&quot; /&gt; information; otherwise, &lt;see langword=&quot;false&quot; /&gt;.">
        <see langword="true" /> si <paramref name="input" /> est une information <see cref="T:System.Net.Http.Headers.WarningHeaderValue" /> valide ; sinon, <see langword="false" />.</returns>
    </member>
    <member name="P:System.Net.Http.Headers.WarningHeaderValue.Agent">
      <summary vsli:raw="Gets the host that attached the warning.">Récupère l’hôte qui a joint l’avertissement.</summary>
      <returns vsli:raw="The host that attached the warning.">L’hôte qui a joint l’avertissement.</returns>
    </member>
    <member name="P:System.Net.Http.Headers.WarningHeaderValue.Code">
      <summary vsli:raw="Gets the specific warning code.">Obtient le code d’avertissement spécifique.</summary>
      <returns vsli:raw="The specific warning code.">Code d’avertissement spécifique.</returns>
    </member>
    <member name="P:System.Net.Http.Headers.WarningHeaderValue.Date">
      <summary vsli:raw="Gets the date/time stamp of the warning.">Obtient l’horodatage date/heure de l’avertissement.</summary>
      <returns vsli:raw="The date/time stamp of the warning.">Horodatage date/heure de l’avertissement.</returns>
    </member>
    <member name="P:System.Net.Http.Headers.WarningHeaderValue.Text">
      <summary vsli:raw="Gets a quoted-string containing the warning text.">Obtient une chaîne entre guillemets contenant le texte d’avertissement.</summary>
      <returns vsli:raw="A quoted-string containing the warning text.">Chaîne entre guillemets contenant le texte d’avertissement.</returns>
    </member>
    <member name="T:System.Net.Http.HttpClient">
      <summary vsli:raw="Provides a class for sending HTTP requests and receiving HTTP responses from a resource identified by a URI.">Fournit une classe de base pour envoyer des requêtes HTTP et recevoir des réponses HTTP d'une ressource identifiée par un URI.</summary>
    </member>
    <member name="M:System.Net.Http.HttpClient.#ctor">
      <summary vsli:raw="Initializes a new instance of the &lt;see cref=&quot;T:System.Net.Http.HttpClient&quot; /&gt; class using a &lt;see cref=&quot;T:System.Net.Http.HttpClientHandler&quot; /&gt; that is disposed when this instance is disposed.">Initialise une nouvelle instance de la classe <see cref="T:System.Net.Http.HttpClient" /> avec un <see cref="T:System.Net.Http.HttpClientHandler" /> qui est supprimé lorsque cette instance est supprimée.</summary>
    </member>
    <member name="M:System.Net.Http.HttpClient.#ctor(System.Net.Http.HttpMessageHandler)">
      <summary vsli:raw="Initializes a new instance of the &lt;see cref=&quot;T:System.Net.Http.HttpClient&quot; /&gt; class with the specified handler. The handler is disposed when this instance is disposed.">Initialise une nouvelle instance de la classe <see cref="T:System.Net.Http.HttpClient" /> avec le gestionnaire spécifié. Le gestionnaire est supprimé lorsque cette instance est supprimée.</summary>
      <param name="handler" vsli:raw="The HTTP handler stack to use for sending requests.">Pile du gestionnaire HTTP à utiliser pour envoyer des demandes.</param>
      <exception cref="T:System.ArgumentNullException" vsli:raw="The &lt;paramref name=&quot;handler&quot; /&gt; is &lt;see langword=&quot;null&quot; /&gt;.">
        <paramref name="handler" /> a la valeur <see langword="null" />.</exception>
    </member>
    <member name="M:System.Net.Http.HttpClient.#ctor(System.Net.Http.HttpMessageHandler,System.Boolean)">
      <summary vsli:raw="Initializes a new instance of the &lt;see cref=&quot;T:System.Net.Http.HttpClient&quot; /&gt; class with the provided handler, and specifies whether that handler should be disposed when this instance is disposed.">Initialise une nouvelle instance de la classe <see cref="T:System.Net.Http.HttpClient" /> avec le gestionnaire fourni et spécifie si ce gestionnaire doit être supprimé quand cette instance est supprimée.</summary>
      <param name="handler" vsli:raw="The &lt;see cref=&quot;T:System.Net.Http.HttpMessageHandler&quot; /&gt; responsible for processing the HTTP response messages.">
        <see cref="T:System.Net.Http.HttpMessageHandler" /> chargé de traiter les messages de réponse HTTP.</param>
      <param name="disposeHandler" vsli:raw="&lt;see langword=&quot;true&quot; /&gt; if the inner handler should be disposed of by HttpClient.Dispose; &lt;see langword=&quot;false&quot; /&gt; if you intend to reuse the inner handler.">
        <see langword="true" /> si le gestionnaire interne doit être supprimé à l’aide de HttpClient.Dispose ; <see langword="false" /> si vous prévoyez de réutiliser le gestionnaire interne.</param>
      <exception cref="T:System.ArgumentNullException" vsli:raw="The &lt;paramref name=&quot;handler&quot; /&gt; is &lt;see langword=&quot;null&quot; /&gt;.">
        <paramref name="handler" /> a la valeur <see langword="null" />.</exception>
    </member>
    <member name="M:System.Net.Http.HttpClient.CancelPendingRequests">
      <summary vsli:raw="Cancel all pending requests on this instance.">Annulez toutes les demandes en attente sur cette instance.</summary>
    </member>
    <member name="M:System.Net.Http.HttpClient.DeleteAsync(System.String)">
      <summary vsli:raw="Send a DELETE request to the specified Uri as an asynchronous operation.">Envoie une demande DELETE à l'URI spécifié sous forme d'opération asynchrone.</summary>
      <param name="requestUri" vsli:raw="The Uri the request is sent to.">URI auquel la requête est envoyée.</param>
      <exception cref="T:System.InvalidOperationException" vsli:raw="The request message was already sent by the &lt;see cref=&quot;T:System.Net.Http.HttpClient&quot; /&gt; instance.&#xA;&#xA;-or-&#xA;&#xA;The &lt;paramref name=&quot;requestUri&quot; /&gt; is not an absolute URI.&#xA;&#xA;-or-&#xA;&#xA;&lt;see cref=&quot;P:System.Net.Http.HttpClient.BaseAddress&quot; /&gt; is not set.">Le message de requête déjà été envoyé par l’instance <see cref="T:System.Net.Http.HttpClient" />.

- ou -

<paramref name="requestUri" /> n’est pas un URI absolu.

- ou -

<see cref="P:System.Net.Http.HttpClient.BaseAddress" /> n'est pas définie.</exception>
      <exception cref="T:System.Net.Http.HttpRequestException" vsli:raw="The request failed due to an underlying issue such as network connectivity, DNS failure, server certificate validation or timeout.">La demande a échoué en raison d’un problème sous-jacent, comme la connectivité réseau, une défaillance du DNS, la validation du certificat du serveur ou le délai d’attente.</exception>
      <exception cref="T:System.Threading.Tasks.TaskCanceledException" vsli:raw=".NET Core and .NET 5 and later only: The request failed due to timeout.">.NET Core et .NET 5.0 et ultérieur uniquement : La requête a échoué en raison de l’expiration du délai.</exception>
      <returns vsli:raw="The task object representing the asynchronous operation.">Objet de tâche représentant l'opération asynchrone.</returns>
    </member>
    <member name="M:System.Net.Http.HttpClient.DeleteAsync(System.String,System.Threading.CancellationToken)">
      <summary vsli:raw="Send a DELETE request to the specified Uri with a cancellation token as an asynchronous operation.">Envoie une requête DELETE à l'URI spécifié avec un jeton d'annulation sous forme d'opération asynchrone.</summary>
      <param name="requestUri" vsli:raw="The Uri the request is sent to.">URI auquel la requête est envoyée.</param>
      <param name="cancellationToken" vsli:raw="A cancellation token that can be used by other objects or threads to receive notice of cancellation.">Jeton d'annulation qui peut être utilisé par d'autres objets ou threads pour être informés de l'annulation.</param>
      <exception cref="T:System.InvalidOperationException" vsli:raw="The request message was already sent by the &lt;see cref=&quot;T:System.Net.Http.HttpClient&quot; /&gt; instance.&#xA;&#xA;-or-&#xA;&#xA;The &lt;paramref name=&quot;requestUri&quot; /&gt; is not an absolute URI.&#xA;&#xA;-or-&#xA;&#xA;&lt;see cref=&quot;P:System.Net.Http.HttpClient.BaseAddress&quot; /&gt; is not set.">Le message de requête déjà été envoyé par l’instance <see cref="T:System.Net.Http.HttpClient" />.

- ou -

<paramref name="requestUri" /> n’est pas un URI absolu.

- ou -

<see cref="P:System.Net.Http.HttpClient.BaseAddress" /> n'est pas définie.</exception>
      <exception cref="T:System.Net.Http.HttpRequestException" vsli:raw="The request failed due to an underlying issue such as network connectivity, DNS failure, server certificate validation or timeout.">La demande a échoué en raison d’un problème sous-jacent, comme la connectivité réseau, une défaillance du DNS, la validation du certificat du serveur ou le délai d’attente.</exception>
      <exception cref="T:System.Threading.Tasks.TaskCanceledException" vsli:raw=".NET Core and .NET 5 and later only: The request failed due to timeout.">.NET Core et .NET 5.0 et ultérieur uniquement : La requête a échoué en raison de l’expiration du délai.</exception>
      <returns vsli:raw="The task object representing the asynchronous operation.">Objet de tâche représentant l'opération asynchrone.</returns>
    </member>
    <member name="M:System.Net.Http.HttpClient.DeleteAsync(System.Uri)">
      <summary vsli:raw="Send a DELETE request to the specified Uri as an asynchronous operation.">Envoie une demande DELETE à l'URI spécifié sous forme d'opération asynchrone.</summary>
      <param name="requestUri" vsli:raw="The Uri the request is sent to.">URI auquel la requête est envoyée.</param>
      <exception cref="T:System.InvalidOperationException" vsli:raw="The request message was already sent by the &lt;see cref=&quot;T:System.Net.Http.HttpClient&quot; /&gt; instance.&#xA;&#xA;-or-&#xA;&#xA;The &lt;paramref name=&quot;requestUri&quot; /&gt; is not an absolute URI.&#xA;&#xA;-or-&#xA;&#xA;&lt;see cref=&quot;P:System.Net.Http.HttpClient.BaseAddress&quot; /&gt; is not set.">Le message de requête déjà été envoyé par l’instance <see cref="T:System.Net.Http.HttpClient" />.

- ou -

<paramref name="requestUri" /> n’est pas un URI absolu.

- ou -

<see cref="P:System.Net.Http.HttpClient.BaseAddress" /> n'est pas définie.</exception>
      <exception cref="T:System.Net.Http.HttpRequestException" vsli:raw="The request failed due to an underlying issue such as network connectivity, DNS failure, server certificate validation or timeout.">La demande a échoué en raison d’un problème sous-jacent, comme la connectivité réseau, une défaillance du DNS, la validation du certificat du serveur ou le délai d’attente.</exception>
      <exception cref="T:System.Threading.Tasks.TaskCanceledException" vsli:raw=".NET Core and .NET 5 and later only: The request failed due to timeout.">.NET Core et .NET 5.0 et ultérieur uniquement : La requête a échoué en raison de l’expiration du délai.</exception>
      <returns vsli:raw="The task object representing the asynchronous operation.">Objet de tâche représentant l'opération asynchrone.</returns>
    </member>
    <member name="M:System.Net.Http.HttpClient.DeleteAsync(System.Uri,System.Threading.CancellationToken)">
      <summary vsli:raw="Send a DELETE request to the specified Uri with a cancellation token as an asynchronous operation.">Envoie une requête DELETE à l'URI spécifié avec un jeton d'annulation sous forme d'opération asynchrone.</summary>
      <param name="requestUri" vsli:raw="The Uri the request is sent to.">URI auquel la requête est envoyée.</param>
      <param name="cancellationToken" vsli:raw="A cancellation token that can be used by other objects or threads to receive notice of cancellation.">Jeton d'annulation qui peut être utilisé par d'autres objets ou threads pour être informés de l'annulation.</param>
      <exception cref="T:System.InvalidOperationException" vsli:raw="The request message was already sent by the &lt;see cref=&quot;T:System.Net.Http.HttpClient&quot; /&gt; instance.&#xA;&#xA;-or-&#xA;&#xA;The &lt;paramref name=&quot;requestUri&quot; /&gt; is not an absolute URI.&#xA;&#xA;-or-&#xA;&#xA;&lt;see cref=&quot;P:System.Net.Http.HttpClient.BaseAddress&quot; /&gt; is not set.">Le message de requête déjà été envoyé par l’instance <see cref="T:System.Net.Http.HttpClient" />.

- ou -

<paramref name="requestUri" /> n’est pas un URI absolu.

- ou -

<see cref="P:System.Net.Http.HttpClient.BaseAddress" /> n'est pas définie.</exception>
      <exception cref="T:System.Net.Http.HttpRequestException" vsli:raw="The request failed due to an underlying issue such as network connectivity, DNS failure, server certificate validation or timeout.">La demande a échoué en raison d’un problème sous-jacent, comme la connectivité réseau, une défaillance du DNS, la validation du certificat du serveur ou le délai d’attente.</exception>
      <exception cref="T:System.Threading.Tasks.TaskCanceledException" vsli:raw=".NET Core and .NET 5 and later only: The request failed due to timeout.">.NET Core et .NET 5.0 et ultérieur uniquement : La requête a échoué en raison de l’expiration du délai.</exception>
      <returns vsli:raw="The task object representing the asynchronous operation.">Objet de tâche représentant l'opération asynchrone.</returns>
    </member>
    <member name="M:System.Net.Http.HttpClient.Dispose(System.Boolean)">
      <summary vsli:raw="Releases the unmanaged resources used by the &lt;see cref=&quot;T:System.Net.Http.HttpClient&quot; /&gt; and optionally disposes of the managed resources.">Libère les ressources non managées utilisées par le <see cref="T:System.Net.Http.HttpClient" /> et supprime éventuellement les ressources managées.</summary>
      <param name="disposing" vsli:raw="&lt;see langword=&quot;true&quot; /&gt; to release both managed and unmanaged resources; &lt;see langword=&quot;false&quot; /&gt; to releases only unmanaged resources.">
        <see langword="true" /> pour libérer les ressources managées et non managées ; <see langword="false" /> pour libérer uniquement les ressources non managées.</param>
    </member>
    <member name="M:System.Net.Http.HttpClient.GetAsync(System.String)">
      <summary vsli:raw="Send a GET request to the specified Uri as an asynchronous operation.">Envoie une requête GET vers l'URI spécifié sous forme d'opération asynchrone.</summary>
      <param name="requestUri" vsli:raw="The Uri the request is sent to.">URI auquel la requête est envoyée.</param>
      <exception cref="T:System.InvalidOperationException" vsli:raw="The &lt;paramref name=&quot;requestUri&quot; /&gt; must be an absolute URI or &lt;see cref=&quot;P:System.Net.Http.HttpClient.BaseAddress&quot; /&gt; must be set.">
        <paramref name="requestUri" /> doit être un URI absolu ou <see cref="P:System.Net.Http.HttpClient.BaseAddress" /> doit être défini.</exception>
      <exception cref="T:System.Net.Http.HttpRequestException" vsli:raw="The request failed due to an underlying issue such as network connectivity, DNS failure, server certificate validation or timeout.">La demande a échoué en raison d’un problème sous-jacent, comme la connectivité réseau, une défaillance du DNS, la validation du certificat du serveur ou le délai d’attente.</exception>
      <exception cref="T:System.Threading.Tasks.TaskCanceledException" vsli:raw=".NET Core and .NET 5 and later only: The request failed due to timeout.">.NET Core et .NET 5.0 et ultérieur uniquement : La requête a échoué en raison de l’expiration du délai.</exception>
      <returns vsli:raw="The task object representing the asynchronous operation.">Objet de tâche représentant l'opération asynchrone.</returns>
    </member>
    <member name="M:System.Net.Http.HttpClient.GetAsync(System.String,System.Net.Http.HttpCompletionOption)">
      <summary vsli:raw="Send a GET request to the specified Uri with an HTTP completion option as an asynchronous operation.">Envoie une requête GET à l'URI spécifié avec une option d'achèvement HTTP sous forme d'opération asynchrone.</summary>
      <param name="requestUri" vsli:raw="The Uri the request is sent to.">URI auquel la requête est envoyée.</param>
      <param name="completionOption" vsli:raw="An HTTP completion option value that indicates when the operation should be considered completed.">Valeur d'option d'achèvement HTTP qui indique quand l'opération doit être considérée comme terminée.</param>
      <exception cref="T:System.InvalidOperationException" vsli:raw="The &lt;paramref name=&quot;requestUri&quot; /&gt; must be an absolute URI or &lt;see cref=&quot;P:System.Net.Http.HttpClient.BaseAddress&quot; /&gt; must be set.">
        <paramref name="requestUri" /> doit être un URI absolu ou <see cref="P:System.Net.Http.HttpClient.BaseAddress" /> doit être défini.</exception>
      <exception cref="T:System.Net.Http.HttpRequestException" vsli:raw="The request failed due to an underlying issue such as network connectivity, DNS failure, server certificate validation or timeout.">La demande a échoué en raison d’un problème sous-jacent, comme la connectivité réseau, une défaillance du DNS, la validation du certificat du serveur ou le délai d’attente.</exception>
      <exception cref="T:System.Threading.Tasks.TaskCanceledException" vsli:raw=".NET Core and .NET 5 and later only: The request failed due to timeout.">.NET Core et .NET 5.0 et ultérieur uniquement : La requête a échoué en raison de l’expiration du délai.</exception>
      <returns vsli:raw="The task object representing the asynchronous operation.">Objet de tâche représentant l'opération asynchrone.</returns>
    </member>
    <member name="M:System.Net.Http.HttpClient.GetAsync(System.String,System.Net.Http.HttpCompletionOption,System.Threading.CancellationToken)">
      <summary vsli:raw="Send a GET request to the specified Uri with an HTTP completion option and a cancellation token as an asynchronous operation.">Envoie une requête GET à l'URI spécifié avec une option d'achèvement HTTP et un jeton d'annulation sous forme d'opération asynchrone.</summary>
      <param name="requestUri" vsli:raw="The Uri the request is sent to.">URI auquel la requête est envoyée.</param>
      <param name="completionOption" vsli:raw="An HTTP  completion option value that indicates when the operation should be considered completed.">Valeur d'option d'achèvement HTTP qui indique quand l'opération doit être considérée comme terminée.</param>
      <param name="cancellationToken" vsli:raw="A cancellation token that can be used by other objects or threads to receive notice of cancellation.">Jeton d'annulation qui peut être utilisé par d'autres objets ou threads pour être informés de l'annulation.</param>
      <exception cref="T:System.InvalidOperationException" vsli:raw="The &lt;paramref name=&quot;requestUri&quot; /&gt; must be an absolute URI or &lt;see cref=&quot;P:System.Net.Http.HttpClient.BaseAddress&quot; /&gt; must be set.">
        <paramref name="requestUri" /> doit être un URI absolu ou <see cref="P:System.Net.Http.HttpClient.BaseAddress" /> doit être défini.</exception>
      <exception cref="T:System.Net.Http.HttpRequestException" vsli:raw="The request failed due to an underlying issue such as network connectivity, DNS failure, server certificate validation or timeout.">La demande a échoué en raison d’un problème sous-jacent, comme la connectivité réseau, une défaillance du DNS, la validation du certificat du serveur ou le délai d’attente.</exception>
      <exception cref="T:System.Threading.Tasks.TaskCanceledException" vsli:raw=".NET Core and .NET 5 and later only: The request failed due to timeout.">.NET Core et .NET 5.0 et ultérieur uniquement : La requête a échoué en raison de l’expiration du délai.</exception>
      <returns vsli:raw="The task object representing the asynchronous operation.">Objet de tâche représentant l'opération asynchrone.</returns>
    </member>
    <member name="M:System.Net.Http.HttpClient.GetAsync(System.String,System.Threading.CancellationToken)">
      <summary vsli:raw="Send a GET request to the specified Uri with a cancellation token as an asynchronous operation.">Envoie une requête GET à l'URI spécifié avec un jeton d'annulation sous forme d'opération asynchrone.</summary>
      <param name="requestUri" vsli:raw="The Uri the request is sent to.">URI auquel la requête est envoyée.</param>
      <param name="cancellationToken" vsli:raw="A cancellation token that can be used by other objects or threads to receive notice of cancellation.">Jeton d'annulation qui peut être utilisé par d'autres objets ou threads pour être informés de l'annulation.</param>
      <exception cref="T:System.InvalidOperationException" vsli:raw="The &lt;paramref name=&quot;requestUri&quot; /&gt; must be an absolute URI or &lt;see cref=&quot;P:System.Net.Http.HttpClient.BaseAddress&quot; /&gt; must be set.">
        <paramref name="requestUri" /> doit être un URI absolu ou <see cref="P:System.Net.Http.HttpClient.BaseAddress" /> doit être défini.</exception>
      <exception cref="T:System.Net.Http.HttpRequestException" vsli:raw="The request failed due to an underlying issue such as network connectivity, DNS failure, server certificate validation or timeout.">La demande a échoué en raison d’un problème sous-jacent, comme la connectivité réseau, une défaillance du DNS, la validation du certificat du serveur ou le délai d’attente.</exception>
      <exception cref="T:System.Threading.Tasks.TaskCanceledException" vsli:raw=".NET Core and .NET 5 and later only: The request failed due to timeout.">.NET Core et .NET 5.0 et ultérieur uniquement : La requête a échoué en raison de l’expiration du délai.</exception>
      <returns vsli:raw="The task object representing the asynchronous operation.">Objet de tâche représentant l'opération asynchrone.</returns>
    </member>
    <member name="M:System.Net.Http.HttpClient.GetAsync(System.Uri)">
      <summary vsli:raw="Send a GET request to the specified Uri as an asynchronous operation.">Envoie une requête GET vers l'URI spécifié sous forme d'opération asynchrone.</summary>
      <param name="requestUri" vsli:raw="The Uri the request is sent to.">URI auquel la requête est envoyée.</param>
      <exception cref="T:System.InvalidOperationException" vsli:raw="The &lt;paramref name=&quot;requestUri&quot; /&gt; must be an absolute URI or &lt;see cref=&quot;P:System.Net.Http.HttpClient.BaseAddress&quot; /&gt; must be set.">
        <paramref name="requestUri" /> doit être un URI absolu ou <see cref="P:System.Net.Http.HttpClient.BaseAddress" /> doit être défini.</exception>
      <exception cref="T:System.Net.Http.HttpRequestException" vsli:raw="The request failed due to an underlying issue such as network connectivity, DNS failure, server certificate validation or timeout.">La demande a échoué en raison d’un problème sous-jacent, comme la connectivité réseau, une défaillance du DNS, la validation du certificat du serveur ou le délai d’attente.</exception>
      <exception cref="T:System.Threading.Tasks.TaskCanceledException" vsli:raw=".NET Core and .NET 5 and later only: The request failed due to timeout.">.NET Core et .NET 5.0 et ultérieur uniquement : La requête a échoué en raison de l’expiration du délai.</exception>
      <returns vsli:raw="The task object representing the asynchronous operation.">Objet de tâche représentant l'opération asynchrone.</returns>
    </member>
    <member name="M:System.Net.Http.HttpClient.GetAsync(System.Uri,System.Net.Http.HttpCompletionOption)">
      <summary vsli:raw="Send a GET request to the specified Uri with an HTTP completion option as an asynchronous operation.">Envoie une requête GET à l'URI spécifié avec une option d'achèvement HTTP sous forme d'opération asynchrone.</summary>
      <param name="requestUri" vsli:raw="The Uri the request is sent to.">URI auquel la requête est envoyée.</param>
      <param name="completionOption" vsli:raw="An HTTP completion option value that indicates when the operation should be considered completed.">Valeur d'option d'achèvement HTTP qui indique quand l'opération doit être considérée comme terminée.</param>
      <exception cref="T:System.InvalidOperationException" vsli:raw="The &lt;paramref name=&quot;requestUri&quot; /&gt; must be an absolute URI or &lt;see cref=&quot;P:System.Net.Http.HttpClient.BaseAddress&quot; /&gt; must be set.">
        <paramref name="requestUri" /> doit être un URI absolu ou <see cref="P:System.Net.Http.HttpClient.BaseAddress" /> doit être défini.</exception>
      <exception cref="T:System.Net.Http.HttpRequestException" vsli:raw="The request failed due to an underlying issue such as network connectivity, DNS failure, server certificate validation or timeout.">La demande a échoué en raison d’un problème sous-jacent, comme la connectivité réseau, une défaillance du DNS, la validation du certificat du serveur ou le délai d’attente.</exception>
      <exception cref="T:System.Threading.Tasks.TaskCanceledException" vsli:raw=".NET Core and .NET 5 and later only: The request failed due to timeout.">.NET Core et .NET 5.0 et ultérieur uniquement : La requête a échoué en raison de l’expiration du délai.</exception>
      <returns vsli:raw="The task object representing the asynchronous operation.">Objet de tâche représentant l'opération asynchrone.</returns>
    </member>
    <member name="M:System.Net.Http.HttpClient.GetAsync(System.Uri,System.Net.Http.HttpCompletionOption,System.Threading.CancellationToken)">
      <summary vsli:raw="Send a GET request to the specified Uri with an HTTP completion option and a cancellation token as an asynchronous operation.">Envoie une requête GET à l'URI spécifié avec une option d'achèvement HTTP et un jeton d'annulation sous forme d'opération asynchrone.</summary>
      <param name="requestUri" vsli:raw="The Uri the request is sent to.">URI auquel la requête est envoyée.</param>
      <param name="completionOption" vsli:raw="An HTTP  completion option value that indicates when the operation should be considered completed.">Valeur d'option d'achèvement HTTP qui indique quand l'opération doit être considérée comme terminée.</param>
      <param name="cancellationToken" vsli:raw="A cancellation token that can be used by other objects or threads to receive notice of cancellation.">Jeton d'annulation qui peut être utilisé par d'autres objets ou threads pour être informés de l'annulation.</param>
      <exception cref="T:System.InvalidOperationException" vsli:raw="The &lt;paramref name=&quot;requestUri&quot; /&gt; must be an absolute URI or &lt;see cref=&quot;P:System.Net.Http.HttpClient.BaseAddress&quot; /&gt; must be set.">
        <paramref name="requestUri" /> doit être un URI absolu ou <see cref="P:System.Net.Http.HttpClient.BaseAddress" /> doit être défini.</exception>
      <exception cref="T:System.Net.Http.HttpRequestException" vsli:raw="The request failed due to an underlying issue such as network connectivity, DNS failure, server certificate validation or timeout.">La demande a échoué en raison d’un problème sous-jacent, comme la connectivité réseau, une défaillance du DNS, la validation du certificat du serveur ou le délai d’attente.</exception>
      <exception cref="T:System.Threading.Tasks.TaskCanceledException" vsli:raw=".NET Core and .NET 5 and later only: The request failed due to timeout.">.NET Core et .NET 5.0 et ultérieur uniquement : La requête a échoué en raison de l’expiration du délai.</exception>
      <returns vsli:raw="The task object representing the asynchronous operation.">Objet de tâche représentant l'opération asynchrone.</returns>
    </member>
    <member name="M:System.Net.Http.HttpClient.GetAsync(System.Uri,System.Threading.CancellationToken)">
      <summary vsli:raw="Send a GET request to the specified Uri with a cancellation token as an asynchronous operation.">Envoie une requête GET à l'URI spécifié avec un jeton d'annulation sous forme d'opération asynchrone.</summary>
      <param name="requestUri" vsli:raw="The Uri the request is sent to.">URI auquel la requête est envoyée.</param>
      <param name="cancellationToken" vsli:raw="A cancellation token that can be used by other objects or threads to receive notice of cancellation.">Jeton d'annulation qui peut être utilisé par d'autres objets ou threads pour être informés de l'annulation.</param>
      <exception cref="T:System.InvalidOperationException" vsli:raw="The &lt;paramref name=&quot;requestUri&quot; /&gt; must be an absolute URI or &lt;see cref=&quot;P:System.Net.Http.HttpClient.BaseAddress&quot; /&gt; must be set.">
        <paramref name="requestUri" /> doit être un URI absolu ou <see cref="P:System.Net.Http.HttpClient.BaseAddress" /> doit être défini.</exception>
      <exception cref="T:System.Net.Http.HttpRequestException" vsli:raw="The request failed due to an underlying issue such as network connectivity, DNS failure, server certificate validation or timeout.">La demande a échoué en raison d’un problème sous-jacent, comme la connectivité réseau, une défaillance du DNS, la validation du certificat du serveur ou le délai d’attente.</exception>
      <exception cref="T:System.Threading.Tasks.TaskCanceledException" vsli:raw=".NET Core and .NET 5 and later only: The request failed due to timeout.">.NET Core et .NET 5.0 et ultérieur uniquement : La requête a échoué en raison de l’expiration du délai.</exception>
      <returns vsli:raw="The task object representing the asynchronous operation.">Objet de tâche représentant l'opération asynchrone.</returns>
    </member>
    <member name="M:System.Net.Http.HttpClient.GetByteArrayAsync(System.String)">
      <summary vsli:raw="Sends a GET request to the specified Uri and return the response body as a byte array in an asynchronous operation.">Envoie une requête GET à l’URI spécifié et retourne le corps de la réponse sous forme de tableau d’octets dans une opération asynchrone.</summary>
      <param name="requestUri" vsli:raw="The Uri the request is sent to.">URI auquel la requête est envoyée.</param>
      <exception cref="T:System.InvalidOperationException" vsli:raw="The &lt;paramref name=&quot;requestUri&quot; /&gt; must be an absolute URI or &lt;see cref=&quot;P:System.Net.Http.HttpClient.BaseAddress&quot; /&gt; must be set.">
        <paramref name="requestUri" /> doit être un URI absolu ou <see cref="P:System.Net.Http.HttpClient.BaseAddress" /> doit être défini.</exception>
      <exception cref="T:System.Net.Http.HttpRequestException" vsli:raw="The request failed due to an underlying issue such as network connectivity, DNS failure, server certificate validation or timeout.">La demande a échoué en raison d’un problème sous-jacent, comme la connectivité réseau, une défaillance du DNS, la validation du certificat du serveur ou le délai d’attente.</exception>
      <exception cref="T:System.Threading.Tasks.TaskCanceledException" vsli:raw=".NET Core and .NET 5 and later only: The request failed due to timeout.">.NET Core et .NET 5.0 et ultérieur uniquement : La requête a échoué en raison de l’expiration du délai.</exception>
      <returns vsli:raw="The task object representing the asynchronous operation.">Objet de tâche représentant l'opération asynchrone.</returns>
    </member>
    <member name="M:System.Net.Http.HttpClient.GetByteArrayAsync(System.String,System.Threading.CancellationToken)">
      <summary vsli:raw="Sends a GET request to the specified Uri and return the response body as a byte array in an asynchronous operation.">Envoie une requête GET à l’URI spécifié et retourne le corps de la réponse sous forme de tableau d’octets dans une opération asynchrone.</summary>
      <param name="requestUri" vsli:raw="The Uri the request is sent to.">URI auquel la requête est envoyée.</param>
      <param name="cancellationToken" vsli:raw="The cancellation token to cancel the operation.">Jeton d’annulation pour annuler l’opération.</param>
      <exception cref="T:System.Net.Http.HttpRequestException" vsli:raw="The request failed due to an underlying issue such as network connectivity, DNS failure, server certificate validation (or timeout for .NET Framework only).">La requête a échoué en raison d’un problème sous-jacent, comme la connectivité réseau, une défaillance du DNS, la validation du certificat de serveur (ou l’expiration du délai pour .NET Framework uniquement).</exception>
      <exception cref="T:System.Threading.Tasks.TaskCanceledException" vsli:raw=".NET Core and .NET 5 and later only: The request failed due to timeout.">.NET Core et .NET 5.0 et ultérieur uniquement : La requête a échoué en raison de l’expiration du délai.</exception>
      <returns vsli:raw="The task object representing the asynchronous operation.">Objet de tâche représentant l'opération asynchrone.</returns>
    </member>
    <member name="M:System.Net.Http.HttpClient.GetByteArrayAsync(System.Uri)">
      <summary vsli:raw="Send a GET request to the specified Uri and return the response body as a byte array in an asynchronous operation.">Envoie une requête GET à l'URI spécifié et retourne le corps de la réponse sous forme de tableau d'octets dans une opération asynchrone.</summary>
      <param name="requestUri" vsli:raw="The Uri the request is sent to.">URI auquel la requête est envoyée.</param>
      <exception cref="T:System.InvalidOperationException" vsli:raw="The &lt;paramref name=&quot;requestUri&quot; /&gt; must be an absolute URI or &lt;see cref=&quot;P:System.Net.Http.HttpClient.BaseAddress&quot; /&gt; must be set.">
        <paramref name="requestUri" /> doit être un URI absolu ou <see cref="P:System.Net.Http.HttpClient.BaseAddress" /> doit être défini.</exception>
      <exception cref="T:System.Net.Http.HttpRequestException" vsli:raw="The request failed due to an underlying issue such as network connectivity, DNS failure, server certificate validation (or timeout for .NET Framework only).">La requête a échoué en raison d’un problème sous-jacent, comme la connectivité réseau, une défaillance du DNS, la validation du certificat de serveur (ou l’expiration du délai pour .NET Framework uniquement).</exception>
      <exception cref="T:System.Threading.Tasks.TaskCanceledException" vsli:raw=".NET Core and .NET 5 and later only: The request failed due to timeout.">.NET Core et .NET 5.0 et ultérieur uniquement : La requête a échoué en raison de l’expiration du délai.</exception>
      <returns vsli:raw="The task object representing the asynchronous operation.">Objet de tâche représentant l'opération asynchrone.</returns>
    </member>
    <member name="M:System.Net.Http.HttpClient.GetByteArrayAsync(System.Uri,System.Threading.CancellationToken)">
      <summary vsli:raw="Send a GET request to the specified Uri and return the response body as a byte array in an asynchronous operation.">Envoie une requête GET à l'URI spécifié et retourne le corps de la réponse sous forme de tableau d'octets dans une opération asynchrone.</summary>
      <param name="requestUri" vsli:raw="The Uri the request is sent to.">URI auquel la requête est envoyée.</param>
      <param name="cancellationToken" vsli:raw="The cancellation token to cancel the operation.">Jeton d’annulation pour annuler l’opération.</param>
      <exception cref="T:System.Net.Http.HttpRequestException" vsli:raw="The request failed due to an underlying issue such as network connectivity, DNS failure, server certificate validation (or timeout for .NET Framework only).">La requête a échoué en raison d’un problème sous-jacent, comme la connectivité réseau, une défaillance du DNS, la validation du certificat de serveur (ou l’expiration du délai pour .NET Framework uniquement).</exception>
      <exception cref="T:System.Threading.Tasks.TaskCanceledException" vsli:raw=".NET Core and .NET 5 and later only: The request failed due to timeout.">.NET Core et .NET 5.0 et ultérieur uniquement : La requête a échoué en raison de l’expiration du délai.</exception>
      <returns vsli:raw="The task object representing the asynchronous operation.">Objet de tâche représentant l'opération asynchrone.</returns>
    </member>
    <member name="M:System.Net.Http.HttpClient.GetStreamAsync(System.String)">
      <summary vsli:raw="Send a GET request to the specified Uri and return the response body as a stream in an asynchronous operation.">Envoie une requête GET à l'URI spécifié et retourne le corps de la réponse sous forme de flux dans une opération asynchrone.</summary>
      <param name="requestUri" vsli:raw="The Uri the request is sent to.">URI auquel la requête est envoyée.</param>
      <exception cref="T:System.InvalidOperationException" vsli:raw="The &lt;paramref name=&quot;requestUri&quot; /&gt; must be an absolute URI or &lt;see cref=&quot;P:System.Net.Http.HttpClient.BaseAddress&quot; /&gt; must be set.">
        <paramref name="requestUri" /> doit être un URI absolu ou <see cref="P:System.Net.Http.HttpClient.BaseAddress" /> doit être défini.</exception>
      <exception cref="T:System.Net.Http.HttpRequestException" vsli:raw="The request failed due to an underlying issue such as network connectivity, DNS failure, server certificate validation (or timeout for .NET Framework only).">La requête a échoué en raison d’un problème sous-jacent, comme la connectivité réseau, une défaillance du DNS, la validation du certificat de serveur (ou l’expiration du délai pour .NET Framework uniquement).</exception>
      <exception cref="T:System.Threading.Tasks.TaskCanceledException" vsli:raw=".NET Core and .NET 5 and later only: The request failed due to timeout.">.NET Core et .NET 5.0 et ultérieur uniquement : La requête a échoué en raison de l’expiration du délai.</exception>
      <returns vsli:raw="The task object representing the asynchronous operation.">Objet de tâche représentant l'opération asynchrone.</returns>
    </member>
    <member name="M:System.Net.Http.HttpClient.GetStreamAsync(System.String,System.Threading.CancellationToken)">
      <summary vsli:raw="Send a GET request to the specified Uri and return the response body as a stream in an asynchronous operation.">Envoie une requête GET à l'URI spécifié et retourne le corps de la réponse sous forme de flux dans une opération asynchrone.</summary>
      <param name="requestUri" vsli:raw="The Uri the request is sent to.">URI auquel la requête est envoyée.</param>
      <param name="cancellationToken" vsli:raw="The cancellation token to cancel the operation.">Jeton d’annulation pour annuler l’opération.</param>
      <returns vsli:raw="The task object representing the asynchronous operation.">Objet de tâche représentant l'opération asynchrone.</returns>
    </member>
    <member name="M:System.Net.Http.HttpClient.GetStreamAsync(System.Uri)">
      <summary vsli:raw="Send a GET request to the specified Uri and return the response body as a stream in an asynchronous operation.">Envoie une requête GET à l'URI spécifié et retourne le corps de la réponse sous forme de flux dans une opération asynchrone.</summary>
      <param name="requestUri" vsli:raw="The Uri the request is sent to.">URI auquel la requête est envoyée.</param>
      <exception cref="T:System.InvalidOperationException" vsli:raw="The &lt;paramref name=&quot;requestUri&quot; /&gt; must be an absolute URI or &lt;see cref=&quot;P:System.Net.Http.HttpClient.BaseAddress&quot; /&gt; must be set.">
        <paramref name="requestUri" /> doit être un URI absolu ou <see cref="P:System.Net.Http.HttpClient.BaseAddress" /> doit être défini.</exception>
      <exception cref="T:System.Net.Http.HttpRequestException" vsli:raw="The request failed due to an underlying issue such as network connectivity, DNS failure, server certificate validation (or timeout for .NET Framework only).">La requête a échoué en raison d’un problème sous-jacent, comme la connectivité réseau, une défaillance du DNS, la validation du certificat de serveur (ou l’expiration du délai pour .NET Framework uniquement).</exception>
      <exception cref="T:System.Threading.Tasks.TaskCanceledException" vsli:raw=".NET Core and .NET 5 and later only: The request failed due to timeout.">.NET Core et .NET 5.0 et ultérieur uniquement : La requête a échoué en raison de l’expiration du délai.</exception>
      <returns vsli:raw="The task object representing the asynchronous operation.">Objet de tâche représentant l'opération asynchrone.</returns>
    </member>
    <member name="M:System.Net.Http.HttpClient.GetStreamAsync(System.Uri,System.Threading.CancellationToken)">
      <summary vsli:raw="Send a GET request to the specified Uri and return the response body as a stream in an asynchronous operation.">Envoie une requête GET à l'URI spécifié et retourne le corps de la réponse sous forme de flux dans une opération asynchrone.</summary>
      <param name="requestUri" vsli:raw="The Uri the request is sent to.">URI auquel la requête est envoyée.</param>
      <param name="cancellationToken" vsli:raw="The cancellation token to cancel the operation.">Jeton d’annulation pour annuler l’opération.</param>
      <exception cref="T:System.ArgumentNullException" vsli:raw="The &lt;paramref name=&quot;requestUri&quot; /&gt; is &lt;see langword=&quot;null&quot; /&gt;.">
        <paramref name="requestUri" /> a la valeur <see langword="null" />.</exception>
      <exception cref="T:System.Net.Http.HttpRequestException" vsli:raw="The request failed due to an underlying issue such as network connectivity, DNS failure, server certificate validation (or timeout for .NET Framework only).">La requête a échoué en raison d’un problème sous-jacent, comme la connectivité réseau, une défaillance du DNS, la validation du certificat de serveur (ou l’expiration du délai pour .NET Framework uniquement).</exception>
      <exception cref="T:System.Threading.Tasks.TaskCanceledException" vsli:raw=".NET Core and .NET 5 and later only: The request failed due to timeout.">.NET Core et .NET 5.0 et ultérieur uniquement : La requête a échoué en raison de l’expiration du délai.</exception>
      <returns vsli:raw="The task object representing the asynchronous operation.">Objet de tâche représentant l'opération asynchrone.</returns>
    </member>
    <member name="M:System.Net.Http.HttpClient.GetStringAsync(System.String)">
      <summary vsli:raw="Send a GET request to the specified Uri and return the response body as a string in an asynchronous operation.">Envoie une requête GET à l'URI spécifié et retourne le corps de la réponse sous forme de chaîne dans une opération asynchrone.</summary>
      <param name="requestUri" vsli:raw="The Uri the request is sent to.">URI auquel la requête est envoyée.</param>
      <exception cref="T:System.InvalidOperationException" vsli:raw="The &lt;paramref name=&quot;requestUri&quot; /&gt; must be an absolute URI or &lt;see cref=&quot;P:System.Net.Http.HttpClient.BaseAddress&quot; /&gt; must be set.">
        <paramref name="requestUri" /> doit être un URI absolu ou <see cref="P:System.Net.Http.HttpClient.BaseAddress" /> doit être défini.</exception>
      <exception cref="T:System.Net.Http.HttpRequestException" vsli:raw="The request failed due to an underlying issue such as network connectivity, DNS failure, server certificate validation (or timeout for .NET Framework only).">La requête a échoué en raison d’un problème sous-jacent, comme la connectivité réseau, une défaillance du DNS, la validation du certificat de serveur (ou l’expiration du délai pour .NET Framework uniquement).</exception>
      <exception cref="T:System.Threading.Tasks.TaskCanceledException" vsli:raw=".NET Core and .NET 5 and later only: The request failed due to timeout.">.NET Core et .NET 5.0 et ultérieur uniquement : La requête a échoué en raison de l’expiration du délai.</exception>
      <returns vsli:raw="The task object representing the asynchronous operation.">Objet de tâche représentant l'opération asynchrone.</returns>
    </member>
    <member name="M:System.Net.Http.HttpClient.GetStringAsync(System.String,System.Threading.CancellationToken)">
      <summary vsli:raw="Send a GET request to the specified Uri and return the response body as a string in an asynchronous operation.">Envoie une requête GET à l'URI spécifié et retourne le corps de la réponse sous forme de chaîne dans une opération asynchrone.</summary>
      <param name="requestUri" vsli:raw="The Uri the request is sent to.">URI auquel la requête est envoyée.</param>
      <param name="cancellationToken" vsli:raw="The cancellation token to cancel the operation.">Jeton d’annulation pour annuler l’opération.</param>
      <exception cref="T:System.ArgumentNullException" vsli:raw="The &lt;paramref name=&quot;requestUri&quot; /&gt; is &lt;see langword=&quot;null&quot; /&gt;.">
        <paramref name="requestUri" /> a la valeur <see langword="null" />.</exception>
      <exception cref="T:System.Net.Http.HttpRequestException" vsli:raw="The request failed due to an underlying issue such as network connectivity, DNS failure, server certificate validation (or timeout for .NET Framework only).">La requête a échoué en raison d’un problème sous-jacent, comme la connectivité réseau, une défaillance du DNS, la validation du certificat de serveur (ou l’expiration du délai pour .NET Framework uniquement).</exception>
      <exception cref="T:System.Threading.Tasks.TaskCanceledException" vsli:raw=".NET Core and .NET 5 and later only: The request failed due to timeout.">.NET Core et .NET 5.0 et ultérieur uniquement : La requête a échoué en raison de l’expiration du délai.</exception>
      <returns vsli:raw="The task object representing the asynchronous operation.">Objet de tâche représentant l'opération asynchrone.</returns>
    </member>
    <member name="M:System.Net.Http.HttpClient.GetStringAsync(System.Uri)">
      <summary vsli:raw="Send a GET request to the specified Uri and return the response body as a string in an asynchronous operation.">Envoie une requête GET à l'URI spécifié et retourne le corps de la réponse sous forme de chaîne dans une opération asynchrone.</summary>
      <param name="requestUri" vsli:raw="The Uri the request is sent to.">URI auquel la requête est envoyée.</param>
      <exception cref="T:System.InvalidOperationException" vsli:raw="The &lt;paramref name=&quot;requestUri&quot; /&gt; must be an absolute URI or &lt;see cref=&quot;P:System.Net.Http.HttpClient.BaseAddress&quot; /&gt; must be set.">
        <paramref name="requestUri" /> doit être un URI absolu ou <see cref="P:System.Net.Http.HttpClient.BaseAddress" /> doit être défini.</exception>
      <exception cref="T:System.Net.Http.HttpRequestException" vsli:raw="The request failed due to an underlying issue such as network connectivity, DNS failure, server certificate validation (or timeout for .NET Framework only).">La requête a échoué en raison d’un problème sous-jacent, comme la connectivité réseau, une défaillance du DNS, la validation du certificat de serveur (ou l’expiration du délai pour .NET Framework uniquement).</exception>
      <exception cref="T:System.Threading.Tasks.TaskCanceledException" vsli:raw=".NET Core and .NET 5 and later only: The request failed due to timeout.">.NET Core et .NET 5.0 et ultérieur uniquement : La requête a échoué en raison de l’expiration du délai.</exception>
      <returns vsli:raw="The task object representing the asynchronous operation.">Objet de tâche représentant l'opération asynchrone.</returns>
    </member>
    <member name="M:System.Net.Http.HttpClient.GetStringAsync(System.Uri,System.Threading.CancellationToken)">
      <summary vsli:raw="Send a GET request to the specified Uri and return the response body as a string in an asynchronous operation.">Envoie une requête GET à l'URI spécifié et retourne le corps de la réponse sous forme de chaîne dans une opération asynchrone.</summary>
      <param name="requestUri" vsli:raw="The Uri the request is sent to.">URI auquel la requête est envoyée.</param>
      <param name="cancellationToken" vsli:raw="The cancellation token to cancel the operation.">Jeton d’annulation pour annuler l’opération.</param>
      <exception cref="T:System.ArgumentNullException" vsli:raw="The &lt;paramref name=&quot;requestUri&quot; /&gt; is &lt;see langword=&quot;null&quot; /&gt;.">
        <paramref name="requestUri" /> a la valeur <see langword="null" />.</exception>
      <exception cref="T:System.Net.Http.HttpRequestException" vsli:raw="The request failed due to an underlying issue such as network connectivity, DNS failure, server certificate validation (or timeout for .NET Framework only).">La requête a échoué en raison d’un problème sous-jacent, comme la connectivité réseau, une défaillance du DNS, la validation du certificat de serveur (ou l’expiration du délai pour .NET Framework uniquement).</exception>
      <exception cref="T:System.Threading.Tasks.TaskCanceledException" vsli:raw=".NET Core and .NET 5 and later only: The request failed due to timeout.">.NET Core et .NET 5.0 et ultérieur uniquement : La requête a échoué en raison de l’expiration du délai.</exception>
      <returns vsli:raw="The task object representing the asynchronous operation.">Objet de tâche représentant l'opération asynchrone.</returns>
    </member>
    <member name="M:System.Net.Http.HttpClient.PatchAsync(System.String,System.Net.Http.HttpContent)">
      <summary vsli:raw="Sends a PATCH request to a Uri designated as a string as an asynchronous operation.">Envoie une requête PATCH à un URI désigné comme chaîne en tant qu’opération asynchrone.</summary>
      <param name="requestUri" vsli:raw="The Uri the request is sent to.">URI auquel la requête est envoyée.</param>
      <param name="content" vsli:raw="The HTTP request content sent to the server.">Contenu de requête HTTP envoyé au serveur.</param>
      <returns vsli:raw="The task object representing the asynchronous operation.">Objet de tâche représentant l'opération asynchrone.</returns>
    </member>
    <member name="M:System.Net.Http.HttpClient.PatchAsync(System.String,System.Net.Http.HttpContent,System.Threading.CancellationToken)">
      <summary vsli:raw="Sends a PATCH request with a cancellation token to a Uri represented as a string as an asynchronous operation.">Envoie une requête PATCH avec un jeton d’annulation à un URI représenté comme chaîne dans une opération asynchrone.</summary>
      <param name="requestUri" vsli:raw="The Uri the request is sent to.">URI auquel la requête est envoyée.</param>
      <param name="content" vsli:raw="The HTTP request content sent to the server.">Contenu de requête HTTP envoyé au serveur.</param>
      <param name="cancellationToken" vsli:raw="A cancellation token that can be used by other objects or threads to receive notice of cancellation.">Jeton d'annulation qui peut être utilisé par d'autres objets ou threads pour être informés de l'annulation.</param>
      <returns vsli:raw="The task object representing the asynchronous operation.">Objet de tâche représentant l'opération asynchrone.</returns>
    </member>
    <member name="M:System.Net.Http.HttpClient.PatchAsync(System.Uri,System.Net.Http.HttpContent)">
      <summary vsli:raw="Sends a PATCH request as an asynchronous operation.">Envoie une requête PATCH en tant qu’opération asynchrone.</summary>
      <param name="requestUri" vsli:raw="The Uri the request is sent to.">URI auquel la requête est envoyée.</param>
      <param name="content" vsli:raw="The HTTP request content sent to the server.">Contenu de requête HTTP envoyé au serveur.</param>
      <returns vsli:raw="The task object representing the asynchronous operation.">Objet de tâche représentant l'opération asynchrone.</returns>
    </member>
    <member name="M:System.Net.Http.HttpClient.PatchAsync(System.Uri,System.Net.Http.HttpContent,System.Threading.CancellationToken)">
      <summary vsli:raw="Sends a PATCH request with a cancellation token as an asynchronous operation.">Envoie une requête PATCH avec un jeton d'annulation sous forme d'opération asynchrone.</summary>
      <param name="requestUri" vsli:raw="The Uri the request is sent to.">URI auquel la requête est envoyée.</param>
      <param name="content" vsli:raw="The HTTP request content sent to the server.">Contenu de requête HTTP envoyé au serveur.</param>
      <param name="cancellationToken" vsli:raw="A cancellation token that can be used by other objects or threads to receive notice of cancellation.">Jeton d'annulation qui peut être utilisé par d'autres objets ou threads pour être informés de l'annulation.</param>
      <returns vsli:raw="The task object representing the asynchronous operation.">Objet de tâche représentant l'opération asynchrone.</returns>
    </member>
    <member name="M:System.Net.Http.HttpClient.PostAsync(System.String,System.Net.Http.HttpContent)">
      <summary vsli:raw="Send a POST request to the specified Uri as an asynchronous operation.">Envoie une requête POST vers l'URI spécifié sous forme d'opération asynchrone.</summary>
      <param name="requestUri" vsli:raw="The Uri the request is sent to.">URI auquel la requête est envoyée.</param>
      <param name="content" vsli:raw="The HTTP request content sent to the server.">Contenu de requête HTTP envoyé au serveur.</param>
      <exception cref="T:System.InvalidOperationException" vsli:raw="The &lt;paramref name=&quot;requestUri&quot; /&gt; must be an absolute URI or &lt;see cref=&quot;P:System.Net.Http.HttpClient.BaseAddress&quot; /&gt; must be set.">
        <paramref name="requestUri" /> doit être un URI absolu ou <see cref="P:System.Net.Http.HttpClient.BaseAddress" /> doit être défini.</exception>
      <exception cref="T:System.Net.Http.HttpRequestException" vsli:raw="The request failed due to an underlying issue such as network connectivity, DNS failure, server certificate validation or timeout.">La demande a échoué en raison d’un problème sous-jacent, comme la connectivité réseau, une défaillance du DNS, la validation du certificat du serveur ou le délai d’attente.</exception>
      <exception cref="T:System.Threading.Tasks.TaskCanceledException" vsli:raw=".NET Core and .NET 5 and later only: The request failed due to timeout.">.NET Core et .NET 5.0 et ultérieur uniquement : La requête a échoué en raison de l’expiration du délai.</exception>
      <returns vsli:raw="The task object representing the asynchronous operation.">Objet de tâche représentant l'opération asynchrone.</returns>
    </member>
    <member name="M:System.Net.Http.HttpClient.PostAsync(System.String,System.Net.Http.HttpContent,System.Threading.CancellationToken)">
      <summary vsli:raw="Send a POST request with a cancellation token as an asynchronous operation.">Envoie une requête POST avec un jeton d'annulation sous forme d'opération asynchrone.</summary>
      <param name="requestUri" vsli:raw="The Uri the request is sent to.">URI auquel la requête est envoyée.</param>
      <param name="content" vsli:raw="The HTTP request content sent to the server.">Contenu de requête HTTP envoyé au serveur.</param>
      <param name="cancellationToken" vsli:raw="A cancellation token that can be used by other objects or threads to receive notice of cancellation.">Jeton d'annulation qui peut être utilisé par d'autres objets ou threads pour être informés de l'annulation.</param>
      <exception cref="T:System.InvalidOperationException" vsli:raw="The &lt;paramref name=&quot;requestUri&quot; /&gt; must be an absolute URI or &lt;see cref=&quot;P:System.Net.Http.HttpClient.BaseAddress&quot; /&gt; must be set.">
        <paramref name="requestUri" /> doit être un URI absolu ou <see cref="P:System.Net.Http.HttpClient.BaseAddress" /> doit être défini.</exception>
      <exception cref="T:System.Net.Http.HttpRequestException" vsli:raw="The request failed due to an underlying issue such as network connectivity, DNS failure, server certificate validation or timeout.">La demande a échoué en raison d’un problème sous-jacent, comme la connectivité réseau, une défaillance du DNS, la validation du certificat du serveur ou le délai d’attente.</exception>
      <exception cref="T:System.Threading.Tasks.TaskCanceledException" vsli:raw=".NET Core and .NET 5 and later only: The request failed due to timeout.">.NET Core et .NET 5.0 et ultérieur uniquement : La requête a échoué en raison de l’expiration du délai.</exception>
      <returns vsli:raw="The task object representing the asynchronous operation.">Objet de tâche représentant l'opération asynchrone.</returns>
    </member>
    <member name="M:System.Net.Http.HttpClient.PostAsync(System.Uri,System.Net.Http.HttpContent)">
      <summary vsli:raw="Send a POST request to the specified Uri as an asynchronous operation.">Envoie une requête POST vers l'URI spécifié sous forme d'opération asynchrone.</summary>
      <param name="requestUri" vsli:raw="The Uri the request is sent to.">URI auquel la requête est envoyée.</param>
      <param name="content" vsli:raw="The HTTP request content sent to the server.">Contenu de requête HTTP envoyé au serveur.</param>
      <exception cref="T:System.InvalidOperationException" vsli:raw="The &lt;paramref name=&quot;requestUri&quot; /&gt; must be an absolute URI or &lt;see cref=&quot;P:System.Net.Http.HttpClient.BaseAddress&quot; /&gt; must be set.">
        <paramref name="requestUri" /> doit être un URI absolu ou <see cref="P:System.Net.Http.HttpClient.BaseAddress" /> doit être défini.</exception>
      <exception cref="T:System.Net.Http.HttpRequestException" vsli:raw="The request failed due to an underlying issue such as network connectivity, DNS failure, server certificate validation or timeout.">La demande a échoué en raison d’un problème sous-jacent, comme la connectivité réseau, une défaillance du DNS, la validation du certificat du serveur ou le délai d’attente.</exception>
      <exception cref="T:System.Threading.Tasks.TaskCanceledException" vsli:raw=".NET Core and .NET 5 and later only: The request failed due to timeout.">.NET Core et .NET 5.0 et ultérieur uniquement : La requête a échoué en raison de l’expiration du délai.</exception>
      <returns vsli:raw="The task object representing the asynchronous operation.">Objet de tâche représentant l'opération asynchrone.</returns>
    </member>
    <member name="M:System.Net.Http.HttpClient.PostAsync(System.Uri,System.Net.Http.HttpContent,System.Threading.CancellationToken)">
      <summary vsli:raw="Send a POST request with a cancellation token as an asynchronous operation.">Envoie une requête POST avec un jeton d'annulation sous forme d'opération asynchrone.</summary>
      <param name="requestUri" vsli:raw="The Uri the request is sent to.">URI auquel la requête est envoyée.</param>
      <param name="content" vsli:raw="The HTTP request content sent to the server.">Contenu de requête HTTP envoyé au serveur.</param>
      <param name="cancellationToken" vsli:raw="A cancellation token that can be used by other objects or threads to receive notice of cancellation.">Jeton d'annulation qui peut être utilisé par d'autres objets ou threads pour être informés de l'annulation.</param>
      <exception cref="T:System.InvalidOperationException" vsli:raw="The &lt;paramref name=&quot;requestUri&quot; /&gt; must be an absolute URI or &lt;see cref=&quot;P:System.Net.Http.HttpClient.BaseAddress&quot; /&gt; must be set.">
        <paramref name="requestUri" /> doit être un URI absolu ou <see cref="P:System.Net.Http.HttpClient.BaseAddress" /> doit être défini.</exception>
      <exception cref="T:System.Net.Http.HttpRequestException" vsli:raw="The request failed due to an underlying issue such as network connectivity, DNS failure, server certificate validation or timeout.">La demande a échoué en raison d’un problème sous-jacent, comme la connectivité réseau, une défaillance du DNS, la validation du certificat du serveur ou le délai d’attente.</exception>
      <exception cref="T:System.Threading.Tasks.TaskCanceledException" vsli:raw=".NET Core and .NET 5 and later only: The request failed due to timeout.">.NET Core et .NET 5.0 et ultérieur uniquement : La requête a échoué en raison de l’expiration du délai.</exception>
      <returns vsli:raw="The task object representing the asynchronous operation.">Objet de tâche représentant l'opération asynchrone.</returns>
    </member>
    <member name="M:System.Net.Http.HttpClient.PutAsync(System.String,System.Net.Http.HttpContent)">
      <summary vsli:raw="Send a PUT request to the specified Uri as an asynchronous operation.">Envoie une requête PUT vers l'URI spécifié sous forme d'opération asynchrone.</summary>
      <param name="requestUri" vsli:raw="The Uri the request is sent to.">URI auquel la requête est envoyée.</param>
      <param name="content" vsli:raw="The HTTP request content sent to the server.">Contenu de requête HTTP envoyé au serveur.</param>
      <exception cref="T:System.InvalidOperationException" vsli:raw="The &lt;paramref name=&quot;requestUri&quot; /&gt; must be an absolute URI or &lt;see cref=&quot;P:System.Net.Http.HttpClient.BaseAddress&quot; /&gt; must be set.">
        <paramref name="requestUri" /> doit être un URI absolu ou <see cref="P:System.Net.Http.HttpClient.BaseAddress" /> doit être défini.</exception>
      <exception cref="T:System.Net.Http.HttpRequestException" vsli:raw="The request failed due to an underlying issue such as network connectivity, DNS failure, server certificate validation or timeout.">La demande a échoué en raison d’un problème sous-jacent, comme la connectivité réseau, une défaillance du DNS, la validation du certificat du serveur ou le délai d’attente.</exception>
      <exception cref="T:System.Threading.Tasks.TaskCanceledException" vsli:raw=".NET Core and .NET 5 and later only: The request failed due to timeout.">.NET Core et .NET 5.0 et ultérieur uniquement : La requête a échoué en raison de l’expiration du délai.</exception>
      <returns vsli:raw="The task object representing the asynchronous operation.">Objet de tâche représentant l'opération asynchrone.</returns>
    </member>
    <member name="M:System.Net.Http.HttpClient.PutAsync(System.String,System.Net.Http.HttpContent,System.Threading.CancellationToken)">
      <summary vsli:raw="Send a PUT request with a cancellation token as an asynchronous operation.">Envoyez une requête PUT avec un jeton d'annulation sous forme d'opération asynchrone.</summary>
      <param name="requestUri" vsli:raw="The Uri the request is sent to.">URI auquel la requête est envoyée.</param>
      <param name="content" vsli:raw="The HTTP request content sent to the server.">Contenu de requête HTTP envoyé au serveur.</param>
      <param name="cancellationToken" vsli:raw="A cancellation token that can be used by other objects or threads to receive notice of cancellation.">Jeton d'annulation qui peut être utilisé par d'autres objets ou threads pour être informés de l'annulation.</param>
      <exception cref="T:System.InvalidOperationException" vsli:raw="The &lt;paramref name=&quot;requestUri&quot; /&gt; must be an absolute URI or &lt;see cref=&quot;P:System.Net.Http.HttpClient.BaseAddress&quot; /&gt; must be set.">
        <paramref name="requestUri" /> doit être un URI absolu ou <see cref="P:System.Net.Http.HttpClient.BaseAddress" /> doit être défini.</exception>
      <exception cref="T:System.Net.Http.HttpRequestException" vsli:raw="The request failed due to an underlying issue such as network connectivity, DNS failure, server certificate validation or timeout.">La demande a échoué en raison d’un problème sous-jacent, comme la connectivité réseau, une défaillance du DNS, la validation du certificat du serveur ou le délai d’attente.</exception>
      <exception cref="T:System.Threading.Tasks.TaskCanceledException" vsli:raw=".NET Core and .NET 5 and later only: The request failed due to timeout.">.NET Core et .NET 5.0 et ultérieur uniquement : La requête a échoué en raison de l’expiration du délai.</exception>
      <returns vsli:raw="The task object representing the asynchronous operation.">Objet de tâche représentant l'opération asynchrone.</returns>
    </member>
    <member name="M:System.Net.Http.HttpClient.PutAsync(System.Uri,System.Net.Http.HttpContent)">
      <summary vsli:raw="Send a PUT request to the specified Uri as an asynchronous operation.">Envoie une requête PUT vers l'URI spécifié sous forme d'opération asynchrone.</summary>
      <param name="requestUri" vsli:raw="The Uri the request is sent to.">URI auquel la requête est envoyée.</param>
      <param name="content" vsli:raw="The HTTP request content sent to the server.">Contenu de requête HTTP envoyé au serveur.</param>
      <exception cref="T:System.InvalidOperationException" vsli:raw="The &lt;paramref name=&quot;requestUri&quot; /&gt; must be an absolute URI or &lt;see cref=&quot;P:System.Net.Http.HttpClient.BaseAddress&quot; /&gt; must be set.">
        <paramref name="requestUri" /> doit être un URI absolu ou <see cref="P:System.Net.Http.HttpClient.BaseAddress" /> doit être défini.</exception>
      <exception cref="T:System.Net.Http.HttpRequestException" vsli:raw="The request failed due to an underlying issue such as network connectivity, DNS failure, server certificate validation or timeout.">La demande a échoué en raison d’un problème sous-jacent, comme la connectivité réseau, une défaillance du DNS, la validation du certificat du serveur ou le délai d’attente.</exception>
      <exception cref="T:System.Threading.Tasks.TaskCanceledException" vsli:raw=".NET Core and .NET 5 and later only: The request failed due to timeout.">.NET Core et .NET 5.0 et ultérieur uniquement : La requête a échoué en raison de l’expiration du délai.</exception>
      <returns vsli:raw="The task object representing the asynchronous operation.">Objet de tâche représentant l'opération asynchrone.</returns>
    </member>
    <member name="M:System.Net.Http.HttpClient.PutAsync(System.Uri,System.Net.Http.HttpContent,System.Threading.CancellationToken)">
      <summary vsli:raw="Send a PUT request with a cancellation token as an asynchronous operation.">Envoyez une requête PUT avec un jeton d'annulation sous forme d'opération asynchrone.</summary>
      <param name="requestUri" vsli:raw="The Uri the request is sent to.">URI auquel la requête est envoyée.</param>
      <param name="content" vsli:raw="The HTTP request content sent to the server.">Contenu de requête HTTP envoyé au serveur.</param>
      <param name="cancellationToken" vsli:raw="A cancellation token that can be used by other objects or threads to receive notice of cancellation.">Jeton d'annulation qui peut être utilisé par d'autres objets ou threads pour être informés de l'annulation.</param>
      <exception cref="T:System.InvalidOperationException" vsli:raw="The &lt;paramref name=&quot;requestUri&quot; /&gt; must be an absolute URI or &lt;see cref=&quot;P:System.Net.Http.HttpClient.BaseAddress&quot; /&gt; must be set.">
        <paramref name="requestUri" /> doit être un URI absolu ou <see cref="P:System.Net.Http.HttpClient.BaseAddress" /> doit être défini.</exception>
      <exception cref="T:System.Net.Http.HttpRequestException" vsli:raw="The request failed due to an underlying issue such as network connectivity, DNS failure, server certificate validation or timeout.">La demande a échoué en raison d’un problème sous-jacent, comme la connectivité réseau, une défaillance du DNS, la validation du certificat du serveur ou le délai d’attente.</exception>
      <exception cref="T:System.Threading.Tasks.TaskCanceledException" vsli:raw=".NET Core and .NET 5 and later only: The request failed due to timeout.">.NET Core et .NET 5.0 et ultérieur uniquement : La requête a échoué en raison de l’expiration du délai.</exception>
      <returns vsli:raw="The task object representing the asynchronous operation.">Objet de tâche représentant l'opération asynchrone.</returns>
    </member>
    <member name="M:System.Net.Http.HttpClient.Send(System.Net.Http.HttpRequestMessage)">
      <summary vsli:raw="Sends an HTTP request with the specified request.">Envoie une requête HTTP avec la requête spécifiée.</summary>
      <param name="request" vsli:raw="The HTTP request message to send.">Message de la requête HTTP à envoyer.</param>
      <exception cref="T:System.ArgumentNullException" vsli:raw="The &lt;paramref name=&quot;request&quot; /&gt; is &lt;see langword=&quot;null&quot; /&gt;.">
        <paramref name="request" /> a la valeur <see langword="null" />.</exception>
      <exception cref="T:System.NotSupportedException" vsli:raw="The HTTP version is 2.0 or higher or the version policy is set to &lt;see cref=&quot;F:System.Net.Http.HttpVersionPolicy.RequestVersionOrHigher&quot; /&gt;.&#xA;&#xA; -or-&#xA;&#xA;The custom class derived from &lt;see cref=&quot;T:System.Net.Http.HttpContent&quot; /&gt; does not override the &lt;see cref=&quot;M:System.Net.Http.HttpContent.SerializeToStream(System.IO.Stream,System.Net.TransportContext,System.Threading.CancellationToken)&quot; /&gt; method.&#xA;&#xA; -or-&#xA;&#xA;The custom &lt;see cref=&quot;T:System.Net.Http.HttpMessageHandler&quot; /&gt; does not override the &lt;see cref=&quot;M:System.Net.Http.HttpMessageHandler.Send(System.Net.Http.HttpRequestMessage,System.Threading.CancellationToken)&quot; /&gt; method.">La version HTTP est 2.0 ou supérieure, ou la stratégie de version est définie sur <see cref="F:System.Net.Http.HttpVersionPolicy.RequestVersionOrHigher" />.

- ou -

La classe personnalisée dérivée de <see cref="T:System.Net.Http.HttpContent" /> ne remplace pas la méthode <see cref="M:System.Net.Http.HttpContent.SerializeToStream(System.IO.Stream,System.Net.TransportContext,System.Threading.CancellationToken)" />.

- ou -

L’élément <see cref="T:System.Net.Http.HttpMessageHandler" /> personnalisé ne remplace pas la méthode <see cref="M:System.Net.Http.HttpMessageHandler.Send(System.Net.Http.HttpRequestMessage,System.Threading.CancellationToken)" />.</exception>
      <exception cref="T:System.InvalidOperationException" vsli:raw="The request message was already sent by the &lt;see cref=&quot;T:System.Net.Http.HttpClient&quot; /&gt; instance.">Le message de requête déjà été envoyé par l’instance <see cref="T:System.Net.Http.HttpClient" />.</exception>
      <exception cref="T:System.Net.Http.HttpRequestException" vsli:raw="The request failed due to an underlying issue such as network connectivity, DNS failure, or server certificate validation.">La demande a échoué en raison d’un problème sous-jacent, comme la connectivité réseau, une défaillance du DNS ou la validation du certificat du serveur.</exception>
      <exception cref="T:System.Threading.Tasks.TaskCanceledException" vsli:raw="If the &lt;see cref=&quot;T:System.Threading.Tasks.TaskCanceledException&quot; /&gt; exception nests the &lt;see cref=&quot;T:System.TimeoutException&quot; /&gt;:&#xA; The request failed due to timeout.">Si l’exception <see cref="T:System.Threading.Tasks.TaskCanceledException" /> imbrique <see cref="T:System.TimeoutException" /> : Échec de la requête en raison de l’expiration du délai.</exception>
      <returns vsli:raw="An HTTP response message.">Un message de réponse HTTP.</returns>
    </member>
    <member name="M:System.Net.Http.HttpClient.Send(System.Net.Http.HttpRequestMessage,System.Net.Http.HttpCompletionOption)">
      <summary vsli:raw="Sends an HTTP request.">Envoie une requête HTTP.</summary>
      <param name="request" vsli:raw="The HTTP request message to send.">Message de la requête HTTP à envoyer.</param>
      <param name="completionOption" vsli:raw="One of the enumeration values that specifies when the operation should complete (as soon as a response is available or after reading the response content).">Une des valeurs d’énumération indiquant le moment où l'opération doit s'exécuter (dès qu'une réponse est disponible ou après avoir pris connaissance du contenu de réponse).</param>
      <exception cref="T:System.ArgumentNullException" vsli:raw="The &lt;paramref name=&quot;request&quot; /&gt; is &lt;see langword=&quot;null&quot; /&gt;.">
        <paramref name="request" /> a la valeur <see langword="null" />.</exception>
      <exception cref="T:System.NotSupportedException" vsli:raw="The HTTP version is 2.0 or higher or the version policy is set to &lt;see cref=&quot;F:System.Net.Http.HttpVersionPolicy.RequestVersionOrHigher&quot; /&gt;.&#xA;&#xA; -or-&#xA;&#xA; The custom class derived from &lt;see cref=&quot;T:System.Net.Http.HttpContent&quot; /&gt; does not override the &lt;see cref=&quot;M:System.Net.Http.HttpContent.SerializeToStream(System.IO.Stream,System.Net.TransportContext,System.Threading.CancellationToken)&quot; /&gt; method.&#xA;&#xA; -or-&#xA;&#xA;The custom &lt;see cref=&quot;T:System.Net.Http.HttpMessageHandler&quot; /&gt; does not override the &lt;see cref=&quot;M:System.Net.Http.HttpMessageHandler.Send(System.Net.Http.HttpRequestMessage,System.Threading.CancellationToken)&quot; /&gt; method.">La version HTTP est 2.0 ou supérieure, ou la stratégie de version est définie sur <see cref="F:System.Net.Http.HttpVersionPolicy.RequestVersionOrHigher" />.

- ou -

La classe personnalisée dérivée de <see cref="T:System.Net.Http.HttpContent" /> ne remplace pas la méthode <see cref="M:System.Net.Http.HttpContent.SerializeToStream(System.IO.Stream,System.Net.TransportContext,System.Threading.CancellationToken)" />.

- ou -

L’élément <see cref="T:System.Net.Http.HttpMessageHandler" /> personnalisé ne remplace pas la méthode <see cref="M:System.Net.Http.HttpMessageHandler.Send(System.Net.Http.HttpRequestMessage,System.Threading.CancellationToken)" />.</exception>
      <exception cref="T:System.InvalidOperationException" vsli:raw="The request message was already sent by the &lt;see cref=&quot;T:System.Net.Http.HttpClient&quot; /&gt; instance.">Le message de requête déjà été envoyé par l’instance <see cref="T:System.Net.Http.HttpClient" />.</exception>
      <exception cref="T:System.Net.Http.HttpRequestException" vsli:raw="The request failed due to an underlying issue such as network connectivity, DNS failure, or server certificate validation.">La demande a échoué en raison d’un problème sous-jacent, comme la connectivité réseau, une défaillance du DNS ou la validation du certificat du serveur.</exception>
      <exception cref="T:System.Threading.Tasks.TaskCanceledException" vsli:raw="If the &lt;see cref=&quot;T:System.Threading.Tasks.TaskCanceledException&quot; /&gt; exception nests the &lt;see cref=&quot;T:System.TimeoutException&quot; /&gt;:&#xA; The request failed due to timeout.">Si l’exception <see cref="T:System.Threading.Tasks.TaskCanceledException" /> imbrique <see cref="T:System.TimeoutException" /> : Échec de la requête en raison de l’expiration du délai.</exception>
      <returns vsli:raw="The HTTP response message.">Message de réponse HTTP.</returns>
    </member>
    <member name="M:System.Net.Http.HttpClient.Send(System.Net.Http.HttpRequestMessage,System.Net.Http.HttpCompletionOption,System.Threading.CancellationToken)">
      <summary vsli:raw="Sends an HTTP request with the specified request, completion option and cancellation token.">Envoie une requête HTTP avec la requête, l’option d’achèvement et le jeton d’annulation spécifiés.</summary>
      <param name="request" vsli:raw="The HTTP request message to send.">Message de la requête HTTP à envoyer.</param>
      <param name="completionOption" vsli:raw="One of the enumeration values that specifies when the operation should complete (as soon as a response is available or after reading the response content).">Une des valeurs d’énumération indiquant le moment où l'opération doit s'exécuter (dès qu'une réponse est disponible ou après avoir pris connaissance du contenu de réponse).</param>
      <param name="cancellationToken" vsli:raw="The token to cancel the operation.">Jeton pour annuler l'opération.</param>
      <exception cref="T:System.ArgumentNullException" vsli:raw="The &lt;paramref name=&quot;request&quot; /&gt; is &lt;see langword=&quot;null&quot; /&gt;.">
        <paramref name="request" /> a la valeur <see langword="null" />.</exception>
      <exception cref="T:System.NotSupportedException" vsli:raw="The HTTP version is 2.0 or higher or the version policy is set to &lt;see cref=&quot;F:System.Net.Http.HttpVersionPolicy.RequestVersionOrHigher&quot; /&gt;.&#xA;&#xA; -or-&#xA;&#xA; The custom class derived from &lt;see cref=&quot;T:System.Net.Http.HttpContent&quot; /&gt; does not override the &lt;see cref=&quot;M:System.Net.Http.HttpContent.SerializeToStream(System.IO.Stream,System.Net.TransportContext,System.Threading.CancellationToken)&quot; /&gt; method.&#xA;&#xA; -or-&#xA;&#xA;The custom &lt;see cref=&quot;T:System.Net.Http.HttpMessageHandler&quot; /&gt; does not override the &lt;see cref=&quot;M:System.Net.Http.HttpMessageHandler.Send(System.Net.Http.HttpRequestMessage,System.Threading.CancellationToken)&quot; /&gt; method.">La version HTTP est 2.0 ou supérieure, ou la stratégie de version est définie sur <see cref="F:System.Net.Http.HttpVersionPolicy.RequestVersionOrHigher" />.

- ou -

La classe personnalisée dérivée de <see cref="T:System.Net.Http.HttpContent" /> ne remplace pas la méthode <see cref="M:System.Net.Http.HttpContent.SerializeToStream(System.IO.Stream,System.Net.TransportContext,System.Threading.CancellationToken)" />.

- ou -

L’élément <see cref="T:System.Net.Http.HttpMessageHandler" /> personnalisé ne remplace pas la méthode <see cref="M:System.Net.Http.HttpMessageHandler.Send(System.Net.Http.HttpRequestMessage,System.Threading.CancellationToken)" />.</exception>
      <exception cref="T:System.InvalidOperationException" vsli:raw="The request message was already sent by the &lt;see cref=&quot;T:System.Net.Http.HttpClient&quot; /&gt; instance.">Le message de requête déjà été envoyé par l’instance <see cref="T:System.Net.Http.HttpClient" />.</exception>
      <exception cref="T:System.Net.Http.HttpRequestException" vsli:raw="The request failed due to an underlying issue such as network connectivity, DNS failure, or server certificate validation.">La demande a échoué en raison d’un problème sous-jacent, comme la connectivité réseau, une défaillance du DNS ou la validation du certificat du serveur.</exception>
      <exception cref="T:System.Threading.Tasks.TaskCanceledException" vsli:raw="The request was canceled.&#xA;&#xA; -or-&#xA;&#xA; If the &lt;see cref=&quot;T:System.Threading.Tasks.TaskCanceledException&quot; /&gt; exception nests the &lt;see cref=&quot;T:System.TimeoutException&quot; /&gt;:&#xA; The request failed due to timeout.">La demande a été annulée.

- ou -

Si l’exception <see cref="T:System.Threading.Tasks.TaskCanceledException" /> imbrique <see cref="T:System.TimeoutException" /> : Échec de la requête en raison de l’expiration du délai.</exception>
      <returns vsli:raw="The HTTP response message.">Message de réponse HTTP.</returns>
    </member>
    <member name="M:System.Net.Http.HttpClient.Send(System.Net.Http.HttpRequestMessage,System.Threading.CancellationToken)">
      <summary vsli:raw="Sends an HTTP request with the specified request and cancellation token.">Envoie une requête HTTP avec la requête et le jeton d’annulation spécifiés.</summary>
      <param name="request" vsli:raw="The HTTP request message to send.">Message de la requête HTTP à envoyer.</param>
      <param name="cancellationToken" vsli:raw="The token to cancel the operation.">Jeton pour annuler l'opération.</param>
      <exception cref="T:System.ArgumentNullException" vsli:raw="The &lt;paramref name=&quot;request&quot; /&gt; is &lt;see langword=&quot;null&quot; /&gt;.">
        <paramref name="request" /> a la valeur <see langword="null" />.</exception>
      <exception cref="T:System.NotSupportedException" vsli:raw="The HTTP version is 2.0 or higher or the version policy is set to &lt;see cref=&quot;F:System.Net.Http.HttpVersionPolicy.RequestVersionOrHigher&quot; /&gt;.&#xA;&#xA; -or-&#xA;&#xA; The custom class derived from &lt;see cref=&quot;T:System.Net.Http.HttpContent&quot; /&gt; does not override the &lt;see cref=&quot;M:System.Net.Http.HttpContent.SerializeToStream(System.IO.Stream,System.Net.TransportContext,System.Threading.CancellationToken)&quot; /&gt; method.&#xA;&#xA; -or-&#xA;&#xA;The custom &lt;see cref=&quot;T:System.Net.Http.HttpMessageHandler&quot; /&gt; does not override the &lt;see cref=&quot;M:System.Net.Http.HttpMessageHandler.Send(System.Net.Http.HttpRequestMessage,System.Threading.CancellationToken)&quot; /&gt; method.">La version HTTP est 2.0 ou supérieure, ou la stratégie de version est définie sur <see cref="F:System.Net.Http.HttpVersionPolicy.RequestVersionOrHigher" />.

- ou -

La classe personnalisée dérivée de <see cref="T:System.Net.Http.HttpContent" /> ne remplace pas la méthode <see cref="M:System.Net.Http.HttpContent.SerializeToStream(System.IO.Stream,System.Net.TransportContext,System.Threading.CancellationToken)" />.

- ou -

L’élément <see cref="T:System.Net.Http.HttpMessageHandler" /> personnalisé ne remplace pas la méthode <see cref="M:System.Net.Http.HttpMessageHandler.Send(System.Net.Http.HttpRequestMessage,System.Threading.CancellationToken)" />.</exception>
      <exception cref="T:System.InvalidOperationException" vsli:raw="The request message was already sent by the &lt;see cref=&quot;T:System.Net.Http.HttpClient&quot; /&gt; instance.">Le message de requête déjà été envoyé par l’instance <see cref="T:System.Net.Http.HttpClient" />.</exception>
      <exception cref="T:System.Net.Http.HttpRequestException" vsli:raw="The request failed due to an underlying issue such as network connectivity, DNS failure, or server certificate validation.">La demande a échoué en raison d’un problème sous-jacent, comme la connectivité réseau, une défaillance du DNS ou la validation du certificat du serveur.</exception>
      <exception cref="T:System.Threading.Tasks.TaskCanceledException" vsli:raw="The request was canceled.&#xA;&#xA; -or-&#xA;&#xA; If the &lt;see cref=&quot;T:System.Threading.Tasks.TaskCanceledException&quot; /&gt; exception nests the &lt;see cref=&quot;T:System.TimeoutException&quot; /&gt;:&#xA; The request failed due to timeout.">La demande a été annulée.

- ou -

Si l’exception <see cref="T:System.Threading.Tasks.TaskCanceledException" /> imbrique <see cref="T:System.TimeoutException" /> : Échec de la requête en raison de l’expiration du délai.</exception>
      <returns vsli:raw="The HTTP response message.">Message de réponse HTTP.</returns>
    </member>
    <member name="M:System.Net.Http.HttpClient.SendAsync(System.Net.Http.HttpRequestMessage)">
      <summary vsli:raw="Send an HTTP request as an asynchronous operation.">Envoie une requête HTTP en tant qu'opération asynchrone.</summary>
      <param name="request" vsli:raw="The HTTP request message to send.">Message de la requête HTTP à envoyer.</param>
      <exception cref="T:System.ArgumentNullException" vsli:raw="The &lt;paramref name=&quot;request&quot; /&gt; is &lt;see langword=&quot;null&quot; /&gt;.">
        <paramref name="request" /> a la valeur <see langword="null" />.</exception>
      <exception cref="T:System.InvalidOperationException" vsli:raw="The request message was already sent by the &lt;see cref=&quot;T:System.Net.Http.HttpClient&quot; /&gt; instance.">Le message de requête déjà été envoyé par l’instance <see cref="T:System.Net.Http.HttpClient" />.</exception>
      <exception cref="T:System.Net.Http.HttpRequestException" vsli:raw="The request failed due to an underlying issue such as network connectivity, DNS failure, server certificate validation or timeout.">La demande a échoué en raison d’un problème sous-jacent, comme la connectivité réseau, une défaillance du DNS, la validation du certificat du serveur ou le délai d’attente.</exception>
      <exception cref="T:System.Threading.Tasks.TaskCanceledException" vsli:raw=".NET Core and .NET 5 and later only: The request failed due to timeout.">.NET Core et .NET 5.0 et ultérieur uniquement : La requête a échoué en raison de l’expiration du délai.</exception>
      <returns vsli:raw="The task object representing the asynchronous operation.">Objet de tâche représentant l'opération asynchrone.</returns>
    </member>
    <member name="M:System.Net.Http.HttpClient.SendAsync(System.Net.Http.HttpRequestMessage,System.Net.Http.HttpCompletionOption)">
      <summary vsli:raw="Send an HTTP request as an asynchronous operation.">Envoie une requête HTTP en tant qu'opération asynchrone.</summary>
      <param name="request" vsli:raw="The HTTP request message to send.">Message de la requête HTTP à envoyer.</param>
      <param name="completionOption" vsli:raw="When the operation should complete (as soon as a response is available or after reading the whole response content).">Moment auquel l'opération doit s'exécuter (dès qu'une réponse est disponible ou après avoir pris connaissance du contenu de réponse entier).</param>
      <exception cref="T:System.ArgumentNullException" vsli:raw="The &lt;paramref name=&quot;request&quot; /&gt; is &lt;see langword=&quot;null&quot; /&gt;.">
        <paramref name="request" /> a la valeur <see langword="null" />.</exception>
      <exception cref="T:System.InvalidOperationException" vsli:raw="The request message was already sent by the &lt;see cref=&quot;T:System.Net.Http.HttpClient&quot; /&gt; instance.">Le message de requête déjà été envoyé par l’instance <see cref="T:System.Net.Http.HttpClient" />.</exception>
      <exception cref="T:System.Net.Http.HttpRequestException" vsli:raw="The request failed due to an underlying issue such as network connectivity, DNS failure, server certificate validation or timeout.">La demande a échoué en raison d’un problème sous-jacent, comme la connectivité réseau, une défaillance du DNS, la validation du certificat du serveur ou le délai d’attente.</exception>
      <exception cref="T:System.Threading.Tasks.TaskCanceledException" vsli:raw=".NET Core and .NET 5 and later only: The request failed due to timeout.">.NET Core et .NET 5.0 et ultérieur uniquement : La requête a échoué en raison de l’expiration du délai.</exception>
      <returns vsli:raw="The task object representing the asynchronous operation.">Objet de tâche représentant l'opération asynchrone.</returns>
    </member>
    <member name="M:System.Net.Http.HttpClient.SendAsync(System.Net.Http.HttpRequestMessage,System.Net.Http.HttpCompletionOption,System.Threading.CancellationToken)">
      <summary vsli:raw="Send an HTTP request as an asynchronous operation.">Envoie une requête HTTP en tant qu'opération asynchrone.</summary>
      <param name="request" vsli:raw="The HTTP request message to send.">Message de la requête HTTP à envoyer.</param>
      <param name="completionOption" vsli:raw="When the operation should complete (as soon as a response is available or after reading the whole response content).">Moment auquel l'opération doit s'exécuter (dès qu'une réponse est disponible ou après avoir pris connaissance du contenu de réponse entier).</param>
      <param name="cancellationToken" vsli:raw="The cancellation token to cancel operation.">Jeton d'annulation pour annuler une opération.</param>
      <exception cref="T:System.ArgumentNullException" vsli:raw="The &lt;paramref name=&quot;request&quot; /&gt; is &lt;see langword=&quot;null&quot; /&gt;.">
        <paramref name="request" /> a la valeur <see langword="null" />.</exception>
      <exception cref="T:System.InvalidOperationException" vsli:raw="The request message was already sent by the &lt;see cref=&quot;T:System.Net.Http.HttpClient&quot; /&gt; instance.">Le message de requête déjà été envoyé par l’instance <see cref="T:System.Net.Http.HttpClient" />.</exception>
      <exception cref="T:System.Net.Http.HttpRequestException" vsli:raw="The request failed due to an underlying issue such as network connectivity, DNS failure, server certificate validation or timeout.">La demande a échoué en raison d’un problème sous-jacent, comme la connectivité réseau, une défaillance du DNS, la validation du certificat du serveur ou le délai d’attente.</exception>
      <exception cref="T:System.Threading.Tasks.TaskCanceledException" vsli:raw=".NET Core and .NET 5 and later only: The request failed due to timeout.">.NET Core et .NET 5.0 et ultérieur uniquement : La requête a échoué en raison de l’expiration du délai.</exception>
      <returns vsli:raw="The task object representing the asynchronous operation.">Objet de tâche représentant l'opération asynchrone.</returns>
    </member>
    <member name="M:System.Net.Http.HttpClient.SendAsync(System.Net.Http.HttpRequestMessage,System.Threading.CancellationToken)">
      <summary vsli:raw="Send an HTTP request as an asynchronous operation.">Envoie une requête HTTP en tant qu'opération asynchrone.</summary>
      <param name="request" vsli:raw="The HTTP request message to send.">Message de la requête HTTP à envoyer.</param>
      <param name="cancellationToken" vsli:raw="The cancellation token to cancel operation.">Jeton d'annulation pour annuler une opération.</param>
      <exception cref="T:System.ArgumentNullException" vsli:raw="The &lt;paramref name=&quot;request&quot; /&gt; is &lt;see langword=&quot;null&quot; /&gt;.">
        <paramref name="request" /> a la valeur <see langword="null" />.</exception>
      <exception cref="T:System.InvalidOperationException" vsli:raw="The request message was already sent by the &lt;see cref=&quot;T:System.Net.Http.HttpClient&quot; /&gt; instance.">Le message de requête déjà été envoyé par l’instance <see cref="T:System.Net.Http.HttpClient" />.</exception>
      <exception cref="T:System.Net.Http.HttpRequestException" vsli:raw="The request failed due to an underlying issue such as network connectivity, DNS failure, server certificate validation or timeout.">La demande a échoué en raison d’un problème sous-jacent, comme la connectivité réseau, une défaillance du DNS, la validation du certificat du serveur ou le délai d’attente.</exception>
      <exception cref="T:System.Threading.Tasks.TaskCanceledException" vsli:raw=".NET Core and .NET 5 and later only: The request failed due to timeout.">.NET Core et .NET 5.0 et ultérieur uniquement : La requête a échoué en raison de l’expiration du délai.</exception>
      <returns vsli:raw="The task object representing the asynchronous operation.">Objet de tâche représentant l'opération asynchrone.</returns>
    </member>
    <member name="P:System.Net.Http.HttpClient.BaseAddress">
      <summary vsli:raw="Gets or sets the base address of Uniform Resource Identifier (URI) of the Internet resource used when sending requests.">Obtient ou définit l'adresse de base de l'URI de la ressource Internet utilisée pour envoyer des demandes.</summary>
      <returns vsli:raw="The base address of Uniform Resource Identifier (URI) of the Internet resource used when sending requests.">Adresse de base de l'URI de la ressource Internet utilisée pour l'envoi des demandes.</returns>
    </member>
    <member name="P:System.Net.Http.HttpClient.DefaultProxy">
      <summary vsli:raw="Gets or sets the global HTTP proxy.">Obtient ou définit le proxy HTTP global.</summary>
      <exception cref="T:System.ArgumentNullException" vsli:raw="The value passed cannot be &lt;see langword=&quot;null&quot; /&gt;.">La valeur passée ne peut pas être <see langword="null" />.</exception>
      <returns vsli:raw="A proxy used by every HTTP request.">Proxy utilisé par chaque appel qui instancie un <see cref="T:System.Net.HttpWebRequest" /> .</returns>
    </member>
    <member name="P:System.Net.Http.HttpClient.DefaultRequestHeaders">
      <summary vsli:raw="Gets the headers which should be sent with each request.">Obtient les en-têtes qui doivent être envoyés avec chaque demande.</summary>
      <returns vsli:raw="The headers which should be sent with each request.">En-têtes qui doivent être envoyés avec chaque demande.</returns>
    </member>
    <member name="P:System.Net.Http.HttpClient.DefaultRequestVersion">
      <summary vsli:raw="Gets or sets the default HTTP version used on subsequent requests made by this &lt;see cref=&quot;T:System.Net.Http.HttpClient&quot; /&gt; instance.">Obtient ou définit la version de HTTP par défaut utilisée pour les requêtes suivantes effectuées par cette instance de <see cref="T:System.Net.Http.HttpClient" />.</summary>
      <exception cref="T:System.ArgumentNullException" vsli:raw="In a set operation, &lt;see langword=&quot;DefaultRequestVersion&quot; /&gt; is &lt;see langword=&quot;null&quot; /&gt;.">Dans une opération ensembliste, <see langword="DefaultRequestVersion" /> est <see langword="null" />.</exception>
      <exception cref="T:System.InvalidOperationException" vsli:raw="The &lt;see cref=&quot;T:System.Net.Http.HttpClient&quot; /&gt; instance has already started one or more requests.">L’instance de <see cref="T:System.Net.Http.HttpClient" /> a déjà démarré une ou plusieurs requêtes.</exception>
      <exception cref="T:System.ObjectDisposedException" vsli:raw="The &lt;see cref=&quot;T:System.Net.Http.HttpClient&quot; /&gt; instance has already been disposed.">L’instance de <see cref="T:System.Net.Http.HttpClient" /> a déjà été supprimée.</exception>
      <returns vsli:raw="The default version to use for any requests made with this &lt;see cref=&quot;T:System.Net.Http.HttpClient&quot; /&gt; instance.">Version par défaut à utiliser pour toutes les demandes effectuées avec cette <see cref="T:System.Net.Http.HttpClient" /> instance.</returns>
    </member>
    <member name="P:System.Net.Http.HttpClient.DefaultVersionPolicy">
      <summary vsli:raw="Gets or sets the default version policy for implicitly created requests in convenience methods, for example, &lt;see cref=&quot;M:System.Net.Http.HttpClient.GetAsync(System.String)&quot; /&gt; and &lt;see cref=&quot;M:System.Net.Http.HttpClient.PostAsync(System.String,System.Net.Http.HttpContent)&quot; /&gt;.">Obtient ou définit la stratégie de version par défaut pour les requêtes créées implicitement dans les méthodes pratiques, par exemple <see cref="M:System.Net.Http.HttpClient.GetAsync(System.String)" /> et <see cref="M:System.Net.Http.HttpClient.PostAsync(System.String,System.Net.Http.HttpContent)" />.</summary>
      <returns vsli:raw="The HttpVersionPolicy used when the HTTP connection is established.">HttpVersionPolicy utilisé lorsque la connexion HTTP est établie.</returns>
    </member>
    <member name="P:System.Net.Http.HttpClient.MaxResponseContentBufferSize">
      <summary vsli:raw="Gets or sets the maximum number of bytes to buffer when reading the response content.">Obtient ou définit le nombre maximal d'octets à mettre en mémoire tampon lors de la lecture du contenu de réponse.</summary>
      <exception cref="T:System.ArgumentOutOfRangeException" vsli:raw="The size specified is less than or equal to zero.">La taille spécifiée est inférieure ou égale à zéro.</exception>
      <exception cref="T:System.InvalidOperationException" vsli:raw="An operation has already been started on the current instance.">Une opération a déjà été lancée dans l’instance actuelle.</exception>
      <exception cref="T:System.ObjectDisposedException" vsli:raw="The current instance has been disposed.">L’instance actuelle a été supprimée.</exception>
      <returns vsli:raw="The maximum number of bytes to buffer when reading the response content. The default value for this property is 2 gigabytes.">Nombre maximal d'octets à mettre en mémoire tampon lors de la lecture du contenu de réponse. La valeur par défaut de cette propriété est 2 gigaoctets.</returns>
    </member>
    <member name="P:System.Net.Http.HttpClient.Timeout">
      <summary vsli:raw="Gets or sets the timespan to wait before the request times out.">Obtient ou définit la période d'attente jusqu'à l'expiration de la demande.</summary>
      <exception cref="T:System.ArgumentOutOfRangeException" vsli:raw="The timeout specified is less than or equal to zero and is not &lt;see cref=&quot;F:System.Threading.Timeout.InfiniteTimeSpan&quot; /&gt;.">Le délai d’attente spécifié est inférieur ou égal à zéro et n’est pas <see cref="F:System.Threading.Timeout.InfiniteTimeSpan" />.</exception>
      <exception cref="T:System.InvalidOperationException" vsli:raw="An operation has already been started on the current instance.">Une opération a déjà été lancée dans l’instance actuelle.</exception>
      <exception cref="T:System.ObjectDisposedException" vsli:raw="The current instance has been disposed.">L’instance actuelle a été supprimée.</exception>
      <returns vsli:raw="The timespan to wait before the request times out.">Période d'attente jusqu'à l'expiration de la demande.</returns>
    </member>
    <member name="T:System.Net.Http.HttpClientHandler">
      <summary vsli:raw="The default message handler used by &lt;see cref=&quot;T:System.Net.Http.HttpClient&quot; /&gt; in .NET Framework and .NET Core 2.0 and earlier.">Gestionnaire de messages par défaut utilisé par <see cref="T:System.Net.Http.HttpClient" /> dans le .NET Framework et .NET Core 2.0 et antérieur.</summary>
    </member>
    <member name="M:System.Net.Http.HttpClientHandler.#ctor">
      <summary vsli:raw="Creates an instance of a &lt;see cref=&quot;T:System.Net.Http.HttpClientHandler&quot; /&gt; class.">Crée une instance d’une classe <see cref="T:System.Net.Http.HttpClientHandler" />.</summary>
    </member>
    <member name="M:System.Net.Http.HttpClientHandler.Dispose(System.Boolean)">
      <summary vsli:raw="Releases the unmanaged resources used by the &lt;see cref=&quot;T:System.Net.Http.HttpClientHandler&quot; /&gt; and optionally disposes of the managed resources.">Libère les ressources non managées utilisées par le <see cref="T:System.Net.Http.HttpClientHandler" /> et supprime éventuellement les ressources managées.</summary>
      <param name="disposing" vsli:raw="&lt;see langword=&quot;true&quot; /&gt; to release both managed and unmanaged resources; &lt;see langword=&quot;false&quot; /&gt; to releases only unmanaged resources.">
        <see langword="true" /> pour libérer les ressources managées et non managées ; <see langword="false" /> pour libérer uniquement les ressources non managées.</param>
    </member>
    <member name="M:System.Net.Http.HttpClientHandler.Send(System.Net.Http.HttpRequestMessage,System.Threading.CancellationToken)">
      <summary vsli:raw="Creates an instance of  &lt;see cref=&quot;T:System.Net.Http.HttpResponseMessage&quot; /&gt; based on the information provided in the &lt;see cref=&quot;T:System.Net.Http.HttpRequestMessage&quot; /&gt;.">Crée une instance de <see cref="T:System.Net.Http.HttpResponseMessage" /> selon les informations fournies dans le <see cref="T:System.Net.Http.HttpRequestMessage" />.</summary>
      <param name="request" vsli:raw="The HTTP request message.">Méthode de requête HTTP.</param>
      <param name="cancellationToken" vsli:raw="A cancellation token to cancel the operation.">Jeton d’annulation pour annuler l’opération.</param>
      <exception cref="T:System.ArgumentNullException" vsli:raw="The &lt;paramref name=&quot;request&quot; /&gt; was &lt;see langword=&quot;null&quot; /&gt;.">
        <paramref name="request" /> avait la valeur <see langword="null" />.</exception>
      <exception cref="T:System.NotSupportedException" vsli:raw="For HTTP/2 and higher or when requesting version upgrade is enabled by &lt;see cref=&quot;F:System.Net.Http.HttpVersionPolicy.RequestVersionOrHigher&quot; /&gt;.&#xA;&#xA; -or-&#xA;&#xA; If using custom class derived from &lt;see cref=&quot;T:System.Net.Http.HttpContent&quot; /&gt; not overriding &lt;see cref=&quot;M:System.Net.Http.HttpContent.SerializeToStream(System.IO.Stream,System.Net.TransportContext,System.Threading.CancellationToken)&quot; /&gt; method.&#xA;&#xA; -or-&#xA;&#xA; If using custom &lt;see cref=&quot;T:System.Net.Http.HttpMessageHandler&quot; /&gt; not overriding &lt;see cref=&quot;M:System.Net.Http.HttpMessageHandler.Send(System.Net.Http.HttpRequestMessage,System.Threading.CancellationToken)&quot; /&gt; method.">Pour HTTP/2 et versions ultérieures, ou lorsque la demande de mise à niveau de version est activée par <see cref="F:System.Net.Http.HttpVersionPolicy.RequestVersionOrHigher" />.

- ou -

Si vous utilisez une classe personnalisée dérivée de <see cref="T:System.Net.Http.HttpContent" /> qui ne remplace pas la méthode <see cref="M:System.Net.Http.HttpContent.SerializeToStream(System.IO.Stream,System.Net.TransportContext,System.Threading.CancellationToken)" />.

- ou -

Si vous utilisez des éléments <see cref="T:System.Net.Http.HttpMessageHandler" /> personnalisés qui ne remplacent pas la méthode <see cref="M:System.Net.Http.HttpMessageHandler.Send(System.Net.Http.HttpRequestMessage,System.Threading.CancellationToken)" />.</exception>
      <exception cref="T:System.Threading.Tasks.TaskCanceledException" vsli:raw="The request was canceled.&#xA;&#xA; -or-&#xA;&#xA; If the &lt;see cref=&quot;T:System.Threading.Tasks.TaskCanceledException&quot; /&gt; exception nests the &lt;see cref=&quot;T:System.TimeoutException&quot; /&gt;:&#xA; The request failed due to timeout.">La demande a été annulée.

- ou -

Si l’exception <see cref="T:System.Threading.Tasks.TaskCanceledException" /> imbrique <see cref="T:System.TimeoutException" /> : Échec de la requête en raison de l’expiration du délai.</exception>
      <returns vsli:raw="The HTTP response message.">Message de réponse HTTP.</returns>
    </member>
    <member name="M:System.Net.Http.HttpClientHandler.SendAsync(System.Net.Http.HttpRequestMessage,System.Threading.CancellationToken)">
      <summary vsli:raw="Creates an instance of  &lt;see cref=&quot;T:System.Net.Http.HttpResponseMessage&quot; /&gt; based on the information provided in the &lt;see cref=&quot;T:System.Net.Http.HttpRequestMessage&quot; /&gt; as an operation that will not block.">Crée une instance de <see cref="T:System.Net.Http.HttpResponseMessage" /> selon les informations fournies dans le <see cref="T:System.Net.Http.HttpRequestMessage" /> en tant qu’opération qui ne se bloque pas.</summary>
      <param name="request" vsli:raw="The HTTP request message.">Méthode de requête HTTP.</param>
      <param name="cancellationToken" vsli:raw="A cancellation token to cancel the operation.">Jeton d’annulation pour annuler l’opération.</param>
      <exception cref="T:System.ArgumentNullException" vsli:raw="The &lt;paramref name=&quot;request&quot; /&gt; was &lt;see langword=&quot;null&quot; /&gt;.">
        <paramref name="request" /> avait la valeur <see langword="null" />.</exception>
      <returns vsli:raw="The task object representing the asynchronous operation.">Objet de tâche représentant l'opération asynchrone.</returns>
    </member>
    <member name="P:System.Net.Http.HttpClientHandler.AllowAutoRedirect">
      <summary vsli:raw="Gets or sets a value that indicates whether the handler should follow redirection responses.">Obtient ou définit une valeur qui indique si le gestionnaire doit suivre les réponses de redirection.</summary>
      <returns vsli:raw="&lt;see langword=&quot;true&quot; /&gt; if the handler should follow redirection responses; otherwise &lt;see langword=&quot;false&quot; /&gt;. The default value is &lt;see langword=&quot;true&quot; /&gt;.">
        <see langword="true" /> Si le gestionnaire doit suivre les réponses de redirection ; Sinon, <see langword="false" /> . La valeur par défaut est <see langword="true" />.</returns>
    </member>
    <member name="P:System.Net.Http.HttpClientHandler.AutomaticDecompression">
      <summary vsli:raw="Gets or sets the type of decompression method used by the handler for automatic decompression of the HTTP content response.">Obtient ou définit le type de méthode de décompression utilisé par le gestionnaire pour la décompression automatique de la réponse du contenu HTTP.</summary>
      <returns vsli:raw="The automatic decompression method used by the handler.">Méthode de décompression automatique utilisée par le gestionnaire.</returns>
    </member>
    <member name="P:System.Net.Http.HttpClientHandler.CheckCertificateRevocationList">
      <summary vsli:raw="Gets or sets a value that indicates whether the certificate is checked against the certificate authority revocation list.">Obtient ou définit une valeur qui indique si le certificat est vérifié par rapport à la liste de révocation de l’autorité de certification.</summary>
      <exception cref="T:System.PlatformNotSupportedException" vsli:raw=".NET Framework 4.7.1 only: This property is not implemented.">.NET Framework 4.7.1 uniquement : cette propriété n’est pas implémentée.</exception>
      <returns vsli:raw="&lt;see langword=&quot;true&quot; /&gt; if the certificate revocation list is checked; otherwise, &lt;see langword=&quot;false&quot; /&gt;.">
        <see langword="true" /> si la liste de révocation de certificats est vérifiée ; sinon, <see langword="false" />.</returns>
    </member>
    <member name="P:System.Net.Http.HttpClientHandler.ClientCertificateOptions">
      <summary vsli:raw="Gets or sets a value that indicates if the certificate is automatically picked from the certificate store or if the caller is allowed to pass in a specific client certificate.">Obtient ou définit une valeur qui indique si le certificat est automatiquement prélevé dans le magasin de certificats ou si l’appelant est autorisé à transmettre un certificat client spécifique.</summary>
      <returns vsli:raw="The collection of security certificates associated with this handler.">Collection de certificats de sécurité associée à ce gestionnaire.</returns>
    </member>
    <member name="P:System.Net.Http.HttpClientHandler.ClientCertificates">
      <summary vsli:raw="Gets the collection of security certificates that are associated with requests to the server.">Obtient la collection de certificats de sécurité qui sont des requêtes associées au serveur.</summary>
      <returns vsli:raw="The X509CertificateCollection that is presented to the server when performing certificate based client authentication.">X509CertificateCollection présenté au serveur lors de l’exécution de l’authentification du client basée sur un certificat.</returns>
    </member>
    <member name="P:System.Net.Http.HttpClientHandler.CookieContainer">
      <summary vsli:raw="Gets or sets the cookie container used to store server cookies by the handler.">Obtient ou définit le conteneur du cookie utilisé pour stocker des cookies de serveur par le gestionnaire.</summary>
      <returns vsli:raw="The cookie container used to store server cookies by the handler.">Conteneur du cookie utilisé pour stocker des cookies de serveur par le gestionnaire.</returns>
    </member>
    <member name="P:System.Net.Http.HttpClientHandler.Credentials">
      <summary vsli:raw="Gets or sets authentication information used by this handler.">Obtient ou définit les informations d’authentification utilisées par ce gestionnaire.</summary>
      <returns vsli:raw="The authentication credentials associated with the handler. The default is &lt;see langword=&quot;null&quot; /&gt;.">Informations d’identification d’authentification associées au gestionnaire. La valeur par défaut est <see langword="null" />.</returns>
    </member>
    <member name="P:System.Net.Http.HttpClientHandler.DangerousAcceptAnyServerCertificateValidator">
      <summary vsli:raw="Gets a cached delegate that always returns &lt;see langword=&quot;true&quot; /&gt;.">Obtient un délégué mis en cache qui retourne toujours <see langword="true" />.</summary>
      <returns vsli:raw="A cached delegate that always returns &lt;see langword=&quot;true&quot; /&gt;.">Délégué mis en cache qui retourne toujours <see langword="true" />.</returns>
    </member>
    <member name="P:System.Net.Http.HttpClientHandler.DefaultProxyCredentials">
      <summary vsli:raw="When the default (system) proxy is being used, gets or sets the credentials to submit to the default proxy server for authentication. The default proxy is used only when &lt;see cref=&quot;P:System.Net.Http.HttpClientHandler.UseProxy&quot; /&gt; is set to &lt;see langword=&quot;true&quot; /&gt; and &lt;see cref=&quot;P:System.Net.Http.HttpClientHandler.Proxy&quot; /&gt; is set to &lt;see langword=&quot;null&quot; /&gt;.">Quand le proxy par défaut (système) est utilisé, obtient ou définit les informations d’identification à envoyer au serveur proxy par défaut pour l’authentification. Le proxy par défaut est utilisé uniquement quand <see cref="P:System.Net.Http.HttpClientHandler.UseProxy" /> a la valeur <see langword="true" /> et <see cref="P:System.Net.Http.HttpClientHandler.Proxy" /> a la valeur <see langword="null" />.</summary>
      <returns vsli:raw="The credentials needed to authenticate a request to the default proxy server.">Informations d’identification nécessaires pour authentifier une demande au serveur proxy par défaut.</returns>
    </member>
    <member name="P:System.Net.Http.HttpClientHandler.MaxAutomaticRedirections">
      <summary vsli:raw="Gets or sets the maximum number of redirects that the handler follows.">Récupère ou définit le nombre maximal de redirections suivies par le gestionnaire.</summary>
      <returns vsli:raw="The maximum number of redirection responses that the handler follows. The default value is 50.">Le nombre maximal de réponses de redirection suivies par le gestionnaire. La valeur par défaut est 50.</returns>
    </member>
    <member name="P:System.Net.Http.HttpClientHandler.MaxConnectionsPerServer">
      <summary vsli:raw="Gets or sets the maximum number of concurrent connections (per server endpoint) allowed when making requests using an &lt;see cref=&quot;T:System.Net.Http.HttpClient&quot; /&gt; object. Note that the limit is per server endpoint, so for example a value of 256 would permit 256 concurrent connections to http://www.adatum.com/ and another 256 to http://www.adventure-works.com/.">Obtient ou définit le nombre maximal de connexions simultanées (par point de terminaison de serveur) autorisé lors de l’établissement de demandes à l’aide d’un objet <see cref="T:System.Net.Http.HttpClient" />. Notez que la limite est établie par point de terminaison de serveur : par exemple, une valeur de 256 permettrait 256 connexions simultanées à http://www.adatum.com/ et 256 autres à http://www.adventure-works.com/.</summary>
      <returns vsli:raw="The maximum number of concurrent connections (per server endpoint) allowed by an &lt;see cref=&quot;T:System.Net.Http.HttpClient&quot; /&gt; object.">Nombre maximal de connexions simultanées (par point de terminaison de serveur) autorisées par un <see cref="T:System.Net.Http.HttpClient" /> objet.</returns>
    </member>
    <member name="P:System.Net.Http.HttpClientHandler.MaxRequestContentBufferSize">
      <summary vsli:raw="Gets or sets the maximum request content buffer size used by the handler.">Obtient ou définit la taille de mémoire tampon du contenu de requête maximale utilisée par le gestionnaire.</summary>
      <returns vsli:raw="The maximum request content buffer size in bytes. The default value is 2 gigabytes.">Taille de mémoire tampon du contenu de requête maximale en octets. La valeur par défaut est 2 Go.</returns>
    </member>
    <member name="P:System.Net.Http.HttpClientHandler.MaxResponseHeadersLength">
      <summary vsli:raw="Gets or sets the maximum length, in kilobytes (1024 bytes), of the response headers. For example, if the value is 64, then 65536 bytes are allowed for the maximum response headers' length.">Obtient ou définit la longueur maximale en kilo-octets (1024 octets) des en-têtes de réponse. Par exemple, si la valeur est 64, 65 536 octets sont autorisés pour la longueur maximale des en-têtes de réponse.</summary>
      <returns vsli:raw="The maximum length, in kilobytes (1024 bytes), of the response headers.">Longueur maximale, en kilo-octets (1024 octets), des en-têtes de réponse.</returns>
    </member>
    <member name="P:System.Net.Http.HttpClientHandler.PreAuthenticate">
      <summary vsli:raw="Gets or sets a value that indicates whether the handler sends an Authorization header with the request.">Obtient ou définit une valeur indiquant si le gestionnaire envoie un en-tête d’autorisation avec la requête.</summary>
      <returns vsli:raw="&lt;see langword=&quot;true&quot; /&gt; for the handler to send an HTTP Authorization header with requests after authentication has taken place; otherwise, &lt;see langword=&quot;false&quot; /&gt;. The default is &lt;see langword=&quot;false&quot; /&gt;.">
        <see langword="true" /> pour que le gestionnaire envoie un en-tête d’autorisation HTTP avec les requêtes une fois l’authentification effectuée ; sinon, <see langword="false" />. La valeur par défaut est <see langword="false" />.</returns>
    </member>
    <member name="P:System.Net.Http.HttpClientHandler.Properties">
      <summary vsli:raw="Gets a writable dictionary (that is, a map) of custom properties for the &lt;see cref=&quot;T:System.Net.Http.HttpClient&quot; /&gt; requests. The dictionary is initialized empty; you can insert and query key-value pairs for your custom handlers and special processing.">Obtient un dictionnaire accessible en écriture (autrement dit, un mappage) des propriétés personnalisées pour les demandes <see cref="T:System.Net.Http.HttpClient" />. Le dictionnaire est initialisé vide ; vous pouvez insérer et interroger des paires clé-valeur pour vos gestionnaires personnalisés et un traitement spécial.</summary>
      <returns vsli:raw="a writable dictionary of custom properties.">Dictionnaire accessible en écriture des propriétés personnalisées.</returns>
    </member>
    <member name="P:System.Net.Http.HttpClientHandler.Proxy">
      <summary vsli:raw="Gets or sets proxy information used by the handler.">Obtient ou définit les informations du proxy utilisées par le gestionnaire.</summary>
      <returns vsli:raw="The proxy information used by the handler. The default value is &lt;see langword=&quot;null&quot; /&gt;.">Informations du proxy utilisées par le gestionnaire. La valeur par défaut est <see langword="null" />.</returns>
    </member>
    <member name="P:System.Net.Http.HttpClientHandler.ServerCertificateCustomValidationCallback">
      <summary vsli:raw="Gets or sets a callback method to validate the server certificate.">Obtient ou définit une méthode de rappel pour valider le certificat de serveur.</summary>
      <returns vsli:raw="A callback method to validate the server certificate.">Méthode de rappel pour valider le certificat de serveur.</returns>
    </member>
    <member name="P:System.Net.Http.HttpClientHandler.SslProtocols">
      <summary vsli:raw="Gets or sets the TLS/SSL protocol used by the &lt;see cref=&quot;T:System.Net.Http.HttpClient&quot; /&gt; objects managed by the HttpClientHandler object.">Obtient ou définit le protocole TLS/SSL utilisé par les objets <see cref="T:System.Net.Http.HttpClient" /> gérés par l’objet HttpClientHandler.</summary>
      <exception cref="T:System.PlatformNotSupportedException" vsli:raw=".NET Framework 4.7.1 only: This property is not implemented.">.NET Framework 4.7.1 uniquement : cette propriété n’est pas implémentée.</exception>
      <returns vsli:raw="One of the values defined in the &lt;see cref=&quot;T:System.Security.Authentication.SslProtocols&quot; /&gt; enumeration.">Une des valeurs définies dans l'énumération <see cref="T:System.Security.Authentication.SslProtocols" />.</returns>
    </member>
    <member name="P:System.Net.Http.HttpClientHandler.SupportsAutomaticDecompression">
      <summary vsli:raw="Gets a value that indicates whether the handler supports automatic response content decompression.">Obtient une valeur qui indique si le gestionnaire prend en charge la décompression automatique du contenu de la réponse.</summary>
      <returns vsli:raw="&lt;see langword=&quot;true&quot; /&gt; if the if the handler supports automatic response content decompression; otherwise &lt;see langword=&quot;false&quot; /&gt;. The default value is &lt;see langword=&quot;true&quot; /&gt;.">
        <see langword="true" /> si le gestionnaire prend en charge la décompression automatique du contenu de la réponse ; sinon, <see langword="false" />. La valeur par défaut est <see langword="true" />.</returns>
    </member>
    <member name="P:System.Net.Http.HttpClientHandler.SupportsProxy">
      <summary vsli:raw="Gets a value that indicates whether the handler supports proxy settings.">Obtient une valeur qui indique si le gestionnaire prend en charge les paramètres du proxy.</summary>
      <returns vsli:raw="&lt;see langword=&quot;true&quot; /&gt; if the if the handler supports proxy settings; otherwise &lt;see langword=&quot;false&quot; /&gt;. The default value is &lt;see langword=&quot;true&quot; /&gt;.">
        <see langword="true" /> si le gestionnaire prend en charge les paramètres du proxy ; sinon, <see langword="false" />. La valeur par défaut est <see langword="true" />.</returns>
    </member>
    <member name="P:System.Net.Http.HttpClientHandler.SupportsRedirectConfiguration">
      <summary vsli:raw="Gets a value that indicates whether the handler supports configuration settings for the &lt;see cref=&quot;P:System.Net.Http.HttpClientHandler.AllowAutoRedirect&quot; /&gt; and &lt;see cref=&quot;P:System.Net.Http.HttpClientHandler.MaxAutomaticRedirections&quot; /&gt; properties.">Obtient une valeur qui indique si le gestionnaire prend en charge les paramètres de configuration des propriétés <see cref="P:System.Net.Http.HttpClientHandler.AllowAutoRedirect" /> et <see cref="P:System.Net.Http.HttpClientHandler.MaxAutomaticRedirections" />.</summary>
      <returns vsli:raw="&lt;see langword=&quot;true&quot; /&gt; if the if the handler supports configuration settings for the &lt;see cref=&quot;P:System.Net.Http.HttpClientHandler.AllowAutoRedirect&quot; /&gt; and &lt;see cref=&quot;P:System.Net.Http.HttpClientHandler.MaxAutomaticRedirections&quot; /&gt; properties; otherwise &lt;see langword=&quot;false&quot; /&gt;. The default value is &lt;see langword=&quot;true&quot; /&gt;.">
        <see langword="true" /> si le gestionnaire prend en charge les paramètres de configuration des propriétés <see cref="P:System.Net.Http.HttpClientHandler.AllowAutoRedirect" /> et <see cref="P:System.Net.Http.HttpClientHandler.MaxAutomaticRedirections" /> ; sinon, <see langword="false" />. La valeur par défaut est <see langword="true" />.</returns>
    </member>
    <member name="P:System.Net.Http.HttpClientHandler.UseCookies">
      <summary vsli:raw="Gets or sets a value that indicates whether the handler uses the  &lt;see cref=&quot;P:System.Net.Http.HttpClientHandler.CookieContainer&quot; /&gt; property  to store server cookies and uses these cookies when sending requests.">Obtient ou définit une valeur qui indique si le gestionnaire utilise la propriété <see cref="P:System.Net.Http.HttpClientHandler.CookieContainer" /> pour stocker des cookies de serveur, et utilise ces cookies lors de l’envoi des requêtes.</summary>
      <returns vsli:raw="&lt;see langword=&quot;true&quot; /&gt; if the if the handler supports uses the  &lt;see cref=&quot;P:System.Net.Http.HttpClientHandler.CookieContainer&quot; /&gt; property  to store server cookies and uses these cookies when sending requests; otherwise &lt;see langword=&quot;false&quot; /&gt;. The default value is &lt;see langword=&quot;true&quot; /&gt;.">
        <see langword="true" /> si le gestionnaire utilise la propriété <see cref="P:System.Net.Http.HttpClientHandler.CookieContainer" /> pour stocker des cookies de serveur et utilise ces cookies lors de l’envoi de requêtes ; sinon <see langword="false" />. La valeur par défaut est <see langword="true" />.</returns>
    </member>
    <member name="P:System.Net.Http.HttpClientHandler.UseDefaultCredentials">
      <summary vsli:raw="Gets or sets a value that controls whether default credentials are sent with requests by the handler.">Obtient ou définit une valeur qui contrôle si les informations d’identification par défaut sont envoyées avec les requêtes par le gestionnaire.</summary>
      <returns vsli:raw="&lt;see langword=&quot;true&quot; /&gt; if the default credentials are used; otherwise &lt;see langword=&quot;false&quot; /&gt;. The default value is &lt;see langword=&quot;false&quot; /&gt;.">
        <see langword="true" /> si les informations d'identification par défaut sont utilisées ; sinon, <see langword="false" />. La valeur par défaut est <see langword="false" />.</returns>
    </member>
    <member name="P:System.Net.Http.HttpClientHandler.UseProxy">
      <summary vsli:raw="Gets or sets a value that indicates whether the handler uses a proxy for requests.">Obtient ou définit une valeur qui indique si le gestionnaire utilise un proxy pour les requêtes.</summary>
      <returns vsli:raw="&lt;see langword=&quot;true&quot; /&gt; if the handler should use a proxy for requests; otherwise &lt;see langword=&quot;false&quot; /&gt;. The default value is &lt;see langword=&quot;true&quot; /&gt;.">
        <see langword="true" /> si le gestionnaire doit utiliser un proxy pour les requêtes ; sinon, <see langword="false" />. La valeur par défaut est <see langword="true" />.</returns>
    </member>
    <member name="T:System.Net.Http.HttpCompletionOption">
      <summary vsli:raw="Indicates if &lt;see cref=&quot;T:System.Net.Http.HttpClient&quot; /&gt; operations should be considered completed either as soon as a response is available, or after reading the entire response message including the content.">Indique si les opérations <see cref="T:System.Net.Http.HttpClient" /> doivent être considérées comme étant terminées dès qu'une réponse est disponible, ou après avoir pris connaissance de l'intégralité du message de réponse intégrant le contenu.</summary>
    </member>
    <member name="F:System.Net.Http.HttpCompletionOption.ResponseContentRead">
      <summary vsli:raw="The operation should complete after reading the entire response including the content.">L'opération doit se terminer après la lecture de l'intégralité de la réponse intégrant le contenu.</summary>
    </member>
    <member name="F:System.Net.Http.HttpCompletionOption.ResponseHeadersRead">
      <summary vsli:raw="The operation should complete as soon as a response is available and headers are read. The content is not read yet.">L'opération doit se terminer dès qu'une réponse est disponible et que les en-têtes sont lus. Le contenu n'est pas encore lu.</summary>
    </member>
    <member name="T:System.Net.Http.HttpContent">
      <summary vsli:raw="A base class representing an HTTP entity body and content headers.">Classe de base représentant un corps d'entité HTTP et des en-têtes de contenu.</summary>
    </member>
    <member name="M:System.Net.Http.HttpContent.#ctor">
      <summary vsli:raw="Initializes a new instance of the &lt;see cref=&quot;T:System.Net.Http.HttpContent&quot; /&gt; class.">Initialise une nouvelle instance de la classe <see cref="T:System.Net.Http.HttpContent" />.</summary>
    </member>
    <member name="M:System.Net.Http.HttpContent.CopyTo(System.IO.Stream,System.Net.TransportContext,System.Threading.CancellationToken)">
      <summary vsli:raw="Serializes the HTTP content into a stream of bytes and copies it to &lt;paramref name=&quot;stream&quot; /&gt;.">Sérialise le contenu HTTP dans un flux d’octets et le copie dans <paramref name="stream" />.</summary>
      <param name="stream" vsli:raw="The target stream.">Le flux de données cible.</param>
      <param name="context" vsli:raw="Information about the transport (for example, the channel binding token). This parameter may be &lt;see langword=&quot;null&quot; /&gt;.">Informations relatives au transport (par exemple, jeton de liaison de canal). Ce paramètre peut avoir la valeur <see langword="null" />.</param>
      <param name="cancellationToken" vsli:raw="The cancellation token to cancel the operation.">Jeton d’annulation pour annuler l’opération.</param>
      <exception cref="T:System.ArgumentNullException" vsli:raw="The &lt;paramref name=&quot;stream&quot; /&gt; was &lt;see langword=&quot;null&quot; /&gt;.">
        <paramref name="stream" /> avait la valeur <see langword="null" />.</exception>
    </member>
    <member name="M:System.Net.Http.HttpContent.CopyToAsync(System.IO.Stream)">
      <summary vsli:raw="Serialize the HTTP content into a stream of bytes and copies it to the stream object provided as the &lt;paramref name=&quot;stream&quot; /&gt; parameter.">Sérialise le contenu HTTP en un flux d’octets et le copie sur l’objet de flux fourni en tant que paramètre <paramref name="stream" />.</summary>
      <param name="stream" vsli:raw="The target stream.">Le flux de données cible.</param>
      <returns vsli:raw="The task object representing the asynchronous operation.">Objet de tâche représentant l'opération asynchrone.</returns>
    </member>
    <member name="M:System.Net.Http.HttpContent.CopyToAsync(System.IO.Stream,System.Net.TransportContext)">
      <summary vsli:raw="Serialize the HTTP content into a stream of bytes and copies it to the stream object provided as the &lt;paramref name=&quot;stream&quot; /&gt; parameter.">Sérialise le contenu HTTP en un flux d’octets et le copie sur l’objet de flux fourni en tant que paramètre <paramref name="stream" />.</summary>
      <param name="stream" vsli:raw="The target stream.">Le flux de données cible.</param>
      <param name="context" vsli:raw="Information about the transport (channel binding token, for example). This parameter may be &lt;see langword=&quot;null&quot; /&gt;.">Informations relatives au transport (jeton de liaison de canal, par exemple). Ce paramètre peut avoir la valeur <see langword="null" />.</param>
      <returns vsli:raw="The task object representing the asynchronous operation.">Objet de tâche représentant l'opération asynchrone.</returns>
    </member>
    <member name="M:System.Net.Http.HttpContent.CopyToAsync(System.IO.Stream,System.Net.TransportContext,System.Threading.CancellationToken)">
      <summary vsli:raw="Serialize the HTTP content into a stream of bytes and copies it to the stream object provided as the &lt;paramref name=&quot;stream&quot; /&gt; parameter.">Sérialise le contenu HTTP en un flux d’octets et le copie sur l’objet de flux fourni en tant que paramètre <paramref name="stream" />.</summary>
      <param name="stream" vsli:raw="The target stream.">Le flux de données cible.</param>
      <param name="context" vsli:raw="Information about the transport (channel binding token, for example). This parameter may be &lt;see langword=&quot;null&quot; /&gt;.">Informations relatives au transport (jeton de liaison de canal, par exemple). Ce paramètre peut avoir la valeur <see langword="null" />.</param>
      <param name="cancellationToken" vsli:raw="The cancellation token to cancel the operation.">Jeton d’annulation pour annuler l’opération.</param>
      <returns vsli:raw="The task object representing the asynchronous operation.">Objet de tâche représentant l'opération asynchrone.</returns>
    </member>
    <member name="M:System.Net.Http.HttpContent.CopyToAsync(System.IO.Stream,System.Threading.CancellationToken)">
      <summary vsli:raw="Serialize the HTTP content into a stream of bytes and copies it to the stream object provided as the &lt;paramref name=&quot;stream&quot; /&gt; parameter.">Sérialise le contenu HTTP en un flux d’octets et le copie sur l’objet de flux fourni en tant que paramètre <paramref name="stream" />.</summary>
      <param name="stream" vsli:raw="The target stream.">Le flux de données cible.</param>
      <param name="cancellationToken" vsli:raw="The cancellation token to cancel the operation.">Jeton d’annulation pour annuler l’opération.</param>
      <returns vsli:raw="The task object representing the asynchronous operation.">Objet de tâche représentant l'opération asynchrone.</returns>
    </member>
    <member name="M:System.Net.Http.HttpContent.CreateContentReadStream(System.Threading.CancellationToken)">
      <param name="cancellationToken" vsli:raw="The cancellation token to cancel the operation." />
    </member>
    <member name="M:System.Net.Http.HttpContent.CreateContentReadStreamAsync">
      <summary vsli:raw="Serialize the HTTP content to a memory stream as an asynchronous operation.">Sérialise le contenu HTTP dans un flux de mémoire en tant qu’opération asynchrone.</summary>
      <returns vsli:raw="The task object representing the asynchronous operation.">Objet de tâche représentant l'opération asynchrone.</returns>
    </member>
    <member name="M:System.Net.Http.HttpContent.CreateContentReadStreamAsync(System.Threading.CancellationToken)">
      <summary vsli:raw="Serializes the HTTP content to a memory stream as an asynchronous operation.">Sérialise le contenu HTTP dans un flux de mémoire en tant qu’opération asynchrone.</summary>
      <param name="cancellationToken" vsli:raw="The cancellation token to cancel the operation.">Jeton d’annulation pour annuler l’opération.</param>
      <returns vsli:raw="The task object representing the asynchronous operation.">Objet de tâche représentant l'opération asynchrone.</returns>
    </member>
    <member name="M:System.Net.Http.HttpContent.Dispose">
      <summary vsli:raw="Releases the unmanaged resources and disposes of the managed resources used by the &lt;see cref=&quot;T:System.Net.Http.HttpContent&quot; /&gt;.">Libère les ressources non managées et supprime les ressources managées utilisées par le <see cref="T:System.Net.Http.HttpContent" />.</summary>
    </member>
    <member name="M:System.Net.Http.HttpContent.Dispose(System.Boolean)">
      <summary vsli:raw="Releases the unmanaged resources used by the &lt;see cref=&quot;T:System.Net.Http.HttpContent&quot; /&gt; and optionally disposes of the managed resources.">Libère les ressources non managées utilisées par le <see cref="T:System.Net.Http.HttpContent" /> et supprime éventuellement les ressources managées.</summary>
      <param name="disposing" vsli:raw="&lt;see langword=&quot;true&quot; /&gt; to release both managed and unmanaged resources; &lt;see langword=&quot;false&quot; /&gt; to releases only unmanaged resources.">
        <see langword="true" /> pour libérer les ressources managées et non managées ; <see langword="false" /> pour libérer uniquement les ressources non managées.</param>
    </member>
    <member name="M:System.Net.Http.HttpContent.LoadIntoBufferAsync">
      <summary vsli:raw="Serialize the HTTP content to a memory buffer as an asynchronous operation.">Sérialise le contenu HTTP dans une mémoire tampon en tant qu’opération asynchrone.</summary>
      <returns vsli:raw="The task object representing the asynchronous operation.">Objet de tâche représentant l'opération asynchrone.</returns>
    </member>
    <member name="M:System.Net.Http.HttpContent.LoadIntoBufferAsync(System.Int64)">
      <summary vsli:raw="Serialize the HTTP content to a memory buffer as an asynchronous operation.">Sérialise le contenu HTTP dans une mémoire tampon en tant qu’opération asynchrone.</summary>
      <param name="maxBufferSize" vsli:raw="The maximum size, in bytes, of the buffer to use.">Taille maximale, en octets, de la mémoire tampon à utiliser.</param>
      <returns vsli:raw="The task object representing the asynchronous operation.">Objet de tâche représentant l'opération asynchrone.</returns>
    </member>
    <member name="M:System.Net.Http.HttpContent.ReadAsByteArrayAsync">
      <summary vsli:raw="Serialize the HTTP content to a byte array as an asynchronous operation.">Sérialise le contenu HTTP dans un tableau d’octets en tant qu’opération asynchrone.</summary>
      <returns vsli:raw="The task object representing the asynchronous operation.">Objet de tâche représentant l'opération asynchrone.</returns>
    </member>
    <member name="M:System.Net.Http.HttpContent.ReadAsByteArrayAsync(System.Threading.CancellationToken)">
      <summary vsli:raw="Serialize the HTTP content to a byte array as an asynchronous operation.">Sérialise le contenu HTTP dans un tableau d’octets en tant qu’opération asynchrone.</summary>
      <param name="cancellationToken" vsli:raw="The cancellation token to cancel the operation.">Jeton d’annulation pour annuler l’opération.</param>
      <returns vsli:raw="The task object representing the asynchronous operation.">Objet de tâche représentant l'opération asynchrone.</returns>
    </member>
    <member name="M:System.Net.Http.HttpContent.ReadAsStream">
      <summary vsli:raw="Serializes the HTTP content and returns a stream that represents the content.">Sérialise le contenu HTTP et renvoie un flux qui représente le contenu.</summary>
      <returns vsli:raw="The stream that represents the HTTP content.">Flux de données qui représente le contenu HTTP.</returns>
    </member>
    <member name="M:System.Net.Http.HttpContent.ReadAsStream(System.Threading.CancellationToken)">
      <summary vsli:raw="Serializes the HTTP content and returns a stream that represents the content.">Sérialise le contenu HTTP et renvoie un flux qui représente le contenu.</summary>
      <param name="cancellationToken" vsli:raw="The cancellation token to cancel the operation.">Jeton d’annulation pour annuler l’opération.</param>
      <returns vsli:raw="The stream that represents the HTTP content.">Flux de données qui représente le contenu HTTP.</returns>
    </member>
    <member name="M:System.Net.Http.HttpContent.ReadAsStreamAsync">
      <summary vsli:raw="Serialize the HTTP content and return a stream that represents the content as an asynchronous operation.">Sérialiser le contenu HTTP et renvoyer un flux qui représente le contenu au cours d’une opération asynchrone.</summary>
      <returns vsli:raw="The task object representing the asynchronous operation.">Objet de tâche représentant l'opération asynchrone.</returns>
    </member>
    <member name="M:System.Net.Http.HttpContent.ReadAsStreamAsync(System.Threading.CancellationToken)">
      <summary vsli:raw="Serialize the HTTP content and return a stream that represents the content as an asynchronous operation.">Sérialiser le contenu HTTP et renvoyer un flux qui représente le contenu au cours d’une opération asynchrone.</summary>
      <param name="cancellationToken" vsli:raw="The cancellation token to cancel the operation.">Jeton d’annulation pour annuler l’opération.</param>
      <returns vsli:raw="The task object representing the asynchronous operation.">Objet de tâche représentant l'opération asynchrone.</returns>
    </member>
    <member name="M:System.Net.Http.HttpContent.ReadAsStringAsync">
      <summary vsli:raw="Serialize the HTTP content to a string as an asynchronous operation.">Sérialise le contenu HTTP dans une chaîne en tant qu’opération asynchrone.</summary>
      <returns vsli:raw="The task object representing the asynchronous operation.">Objet de tâche représentant l'opération asynchrone.</returns>
    </member>
    <member name="M:System.Net.Http.HttpContent.ReadAsStringAsync(System.Threading.CancellationToken)">
      <summary vsli:raw="Serialize the HTTP content to a string as an asynchronous operation.">Sérialise le contenu HTTP dans une chaîne en tant qu’opération asynchrone.</summary>
      <param name="cancellationToken" vsli:raw="The cancellation token to cancel the operation.">Jeton d’annulation pour annuler l’opération.</param>
      <returns vsli:raw="The task object representing the asynchronous operation.">Objet de tâche représentant l'opération asynchrone.</returns>
    </member>
    <member name="M:System.Net.Http.HttpContent.SerializeToStream(System.IO.Stream,System.Net.TransportContext,System.Threading.CancellationToken)">
      <summary vsli:raw="When overridden in a derived class, serializes the HTTP content to a stream. Otherwise, throws a &lt;see cref=&quot;T:System.NotSupportedException&quot; /&gt;.">En cas de remplacement dans une classe dérivée, sérialise le contenu HTTP dans un flux de données. Sinon, lève un <see cref="T:System.NotSupportedException" />.</summary>
      <param name="stream" vsli:raw="The target stream.">Le flux de données cible.</param>
      <param name="context" vsli:raw="Information about the transport (for example, the channel binding token). This parameter may be &lt;see langword=&quot;null&quot; /&gt;.">Informations relatives au transport (par exemple, jeton de liaison de canal). Ce paramètre peut avoir la valeur <see langword="null" />.</param>
      <param name="cancellationToken" vsli:raw="The cancellation token to cancel the operation.">Jeton d’annulation pour annuler l’opération.</param>
      <exception cref="T:System.NotSupportedException" vsli:raw="The method is not overridden in the derived class.">La méthode n'est pas substituée dans la classe dérivée.</exception>
    </member>
    <member name="M:System.Net.Http.HttpContent.SerializeToStreamAsync(System.IO.Stream,System.Net.TransportContext)">
      <summary vsli:raw="Serialize the HTTP content to a stream as an asynchronous operation.">Sérialise le contenu HTTP dans un flux en tant qu’opération asynchrone.</summary>
      <param name="stream" vsli:raw="The target stream.">Le flux de données cible.</param>
      <param name="context" vsli:raw="Information about the transport (channel binding token, for example). This parameter may be &lt;see langword=&quot;null&quot; /&gt;.">Informations relatives au transport (jeton de liaison de canal, par exemple). Ce paramètre peut avoir la valeur <see langword="null" />.</param>
      <returns vsli:raw="The task object representing the asynchronous operation.">Objet de tâche représentant l'opération asynchrone.</returns>
    </member>
    <member name="M:System.Net.Http.HttpContent.SerializeToStreamAsync(System.IO.Stream,System.Net.TransportContext,System.Threading.CancellationToken)">
      <summary vsli:raw="Serialize the HTTP content to a stream as an asynchronous operation.">Sérialise le contenu HTTP dans un flux en tant qu’opération asynchrone.</summary>
      <param name="stream" vsli:raw="The target stream.">Le flux de données cible.</param>
      <param name="context" vsli:raw="Information about the transport (channel binding token, for example). This parameter may be &lt;see langword=&quot;null&quot; /&gt;.">Informations relatives au transport (jeton de liaison de canal, par exemple). Ce paramètre peut avoir la valeur <see langword="null" />.</param>
      <param name="cancellationToken" vsli:raw="The cancellation token to cancel the operation.">Jeton d’annulation pour annuler l’opération.</param>
      <returns vsli:raw="The task object representing the asynchronous operation.">Objet de tâche représentant l'opération asynchrone.</returns>
    </member>
    <member name="M:System.Net.Http.HttpContent.TryComputeLength(System.Int64@)">
      <summary vsli:raw="Determines whether the HTTP content has a valid length in bytes.">Détermine si le contenu HTTP a une longueur valide en octets.</summary>
      <param name="length" vsli:raw="The length in bytes of the HTTP content.">La longueur en octets du contenu HTTP.</param>
      <returns vsli:raw="&lt;see langword=&quot;true&quot; /&gt; if &lt;paramref name=&quot;length&quot; /&gt; is a valid length; otherwise, &lt;see langword=&quot;false&quot; /&gt;.">
        <see langword="true" /> si <paramref name="length" /> est une longueur valide ; sinon, <see langword="false" />.</returns>
    </member>
    <member name="P:System.Net.Http.HttpContent.Headers">
      <summary vsli:raw="Gets the HTTP content headers as defined in RFC 2616.">Obtient les en-têtes de contenu HTTP tels que définis dans RFC 2616.</summary>
      <returns vsli:raw="The content headers as defined in RFC 2616.">En-têtes de contenu tels que définis dans RFC 2616.</returns>
    </member>
    <member name="T:System.Net.Http.HttpKeepAlivePingPolicy">
      <summary vsli:raw="Specifies when the HTTP/2 ping frame is sent on an idle connection.">Spécifie le moment où la trame Ping HTTP/2 est envoyée sur une connexion inactive.</summary>
    </member>
    <member name="F:System.Net.Http.HttpKeepAlivePingPolicy.Always">
      <summary vsli:raw="Sends a keep alive ping for the whole lifetime of the connection.">Envoie un Ping persistant pour toute la durée de vie de la connexion.</summary>
    </member>
    <member name="F:System.Net.Http.HttpKeepAlivePingPolicy.WithActiveRequests">
      <summary vsli:raw="Sends a keep alive ping only when there are active streams on the connection.">Envoie un Ping persistant uniquement lorsqu’il existe des flux actifs sur la connexion.</summary>
    </member>
    <member name="T:System.Net.Http.HttpMessageHandler">
      <summary vsli:raw="A base type for HTTP message handlers.">Type de base pour les gestionnaires de messages HTTP.</summary>
    </member>
    <member name="M:System.Net.Http.HttpMessageHandler.#ctor">
      <summary vsli:raw="Initializes a new instance of the &lt;see cref=&quot;T:System.Net.Http.HttpMessageHandler&quot; /&gt; class.">Initialise une nouvelle instance de la classe <see cref="T:System.Net.Http.HttpMessageHandler" />.</summary>
    </member>
    <member name="M:System.Net.Http.HttpMessageHandler.Dispose">
      <summary vsli:raw="Releases the unmanaged resources and disposes of the managed resources used by the &lt;see cref=&quot;T:System.Net.Http.HttpMessageHandler&quot; /&gt;.">Libère les ressources non managées et supprime les ressources managées utilisées par le <see cref="T:System.Net.Http.HttpMessageHandler" />.</summary>
    </member>
    <member name="M:System.Net.Http.HttpMessageHandler.Dispose(System.Boolean)">
      <summary vsli:raw="Releases the unmanaged resources used by the &lt;see cref=&quot;T:System.Net.Http.HttpMessageHandler&quot; /&gt; and optionally disposes of the managed resources.">Libère les ressources non managées utilisées par le <see cref="T:System.Net.Http.HttpMessageHandler" /> et supprime éventuellement les ressources managées.</summary>
      <param name="disposing" vsli:raw="&lt;see langword=&quot;true&quot; /&gt; to release both managed and unmanaged resources; &lt;see langword=&quot;false&quot; /&gt; to releases only unmanaged resources.">
        <see langword="true" /> pour libérer les ressources managées et non managées ; <see langword="false" /> pour libérer uniquement les ressources non managées.</param>
    </member>
    <member name="M:System.Net.Http.HttpMessageHandler.Send(System.Net.Http.HttpRequestMessage,System.Threading.CancellationToken)">
      <summary vsli:raw="When overridden in a derived class, sends an HTTP request with the specified request and cancellation token. Otherwise, throws a &lt;see cref=&quot;T:System.NotSupportedException&quot; /&gt;.">En cas de substitution dans une classe dérivée, envoie une requête HTTP avec la requête et le jeton d’annulation spécifiés. Sinon, lève un <see cref="T:System.NotSupportedException" />.</summary>
      <param name="request" vsli:raw="The HTTP request message to send.">Message de la requête HTTP à envoyer.</param>
      <param name="cancellationToken" vsli:raw="The cancellation token to cancel operation.">Jeton d'annulation pour annuler une opération.</param>
      <exception cref="T:System.NotSupportedException" vsli:raw="The method is not overridden in the derived class.">La méthode n'est pas substituée dans la classe dérivée.</exception>
      <returns vsli:raw="The HTTP response message.">Message de réponse HTTP.</returns>
    </member>
    <member name="M:System.Net.Http.HttpMessageHandler.SendAsync(System.Net.Http.HttpRequestMessage,System.Threading.CancellationToken)">
      <summary vsli:raw="Send an HTTP request as an asynchronous operation.">Envoie une requête HTTP en tant qu'opération asynchrone.</summary>
      <param name="request" vsli:raw="The HTTP request message to send.">Message de la requête HTTP à envoyer.</param>
      <param name="cancellationToken" vsli:raw="The cancellation token to cancel operation.">Jeton d'annulation pour annuler une opération.</param>
      <exception cref="T:System.ArgumentNullException" vsli:raw="The &lt;paramref name=&quot;request&quot; /&gt; was &lt;see langword=&quot;null&quot; /&gt;.">
        <paramref name="request" /> avait la valeur <see langword="null" />.</exception>
      <returns vsli:raw="The task object representing the asynchronous operation.">Objet de tâche représentant l'opération asynchrone.</returns>
    </member>
    <member name="T:System.Net.Http.HttpMessageInvoker">
      <summary vsli:raw="A specialty class that allows applications to call the &lt;see cref=&quot;M:System.Net.Http.HttpMessageInvoker.SendAsync(System.Net.Http.HttpRequestMessage,System.Threading.CancellationToken)&quot; /&gt; method on an HTTP handler chain.">Classe spécialisée qui permet aux applications d’appeler la méthode <see cref="M:System.Net.Http.HttpMessageInvoker.SendAsync(System.Net.Http.HttpRequestMessage,System.Threading.CancellationToken)" /> sur une chaîne de gestionnaire HTTP.</summary>
    </member>
    <member name="M:System.Net.Http.HttpMessageInvoker.#ctor(System.Net.Http.HttpMessageHandler)">
      <summary vsli:raw="Initializes an instance of a &lt;see cref=&quot;T:System.Net.Http.HttpMessageInvoker&quot; /&gt; class with a specific &lt;see cref=&quot;T:System.Net.Http.HttpMessageHandler&quot; /&gt;.">Initialise une nouvelle instance d'une classe <see cref="T:System.Net.Http.HttpMessageInvoker" /> avec un <see cref="T:System.Net.Http.HttpMessageHandler" /> spécifique.</summary>
      <param name="handler" vsli:raw="The &lt;see cref=&quot;T:System.Net.Http.HttpMessageHandler&quot; /&gt; responsible for processing the HTTP response messages.">
        <see cref="T:System.Net.Http.HttpMessageHandler" /> chargé de traiter les messages de réponse HTTP.</param>
    </member>
    <member name="M:System.Net.Http.HttpMessageInvoker.#ctor(System.Net.Http.HttpMessageHandler,System.Boolean)">
      <summary vsli:raw="Initializes an instance of a &lt;see cref=&quot;T:System.Net.Http.HttpMessageInvoker&quot; /&gt; class with a specific &lt;see cref=&quot;T:System.Net.Http.HttpMessageHandler&quot; /&gt;.">Initialise une nouvelle instance d'une classe <see cref="T:System.Net.Http.HttpMessageInvoker" /> avec un <see cref="T:System.Net.Http.HttpMessageHandler" /> spécifique.</summary>
      <param name="handler" vsli:raw="The &lt;see cref=&quot;T:System.Net.Http.HttpMessageHandler&quot; /&gt; responsible for processing the HTTP response messages.">
        <see cref="T:System.Net.Http.HttpMessageHandler" /> chargé de traiter les messages de réponse HTTP.</param>
      <param name="disposeHandler" vsli:raw="&lt;see langword=&quot;true&quot; /&gt; if the inner handler should be disposed of by Dispose(), &lt;see langword=&quot;false&quot; /&gt; if you intend to reuse the inner handler.">
        <see langword="true" /> si le gestionnaire interne doit être supprimé à l'aide de Dispose(),<see langword="false" /> si vous prévoyez de réutiliser le gestionnaire interne.</param>
    </member>
    <member name="M:System.Net.Http.HttpMessageInvoker.Dispose">
      <summary vsli:raw="Releases the unmanaged resources and disposes of the managed resources used by the &lt;see cref=&quot;T:System.Net.Http.HttpMessageInvoker&quot; /&gt;.">Libère les ressources non managées et supprime les ressources managées utilisées par le <see cref="T:System.Net.Http.HttpMessageInvoker" />.</summary>
    </member>
    <member name="M:System.Net.Http.HttpMessageInvoker.Dispose(System.Boolean)">
      <summary vsli:raw="Releases the unmanaged resources used by the &lt;see cref=&quot;T:System.Net.Http.HttpMessageInvoker&quot; /&gt; and optionally disposes of the managed resources.">Libère les ressources non managées utilisées par le <see cref="T:System.Net.Http.HttpMessageInvoker" /> et supprime éventuellement les ressources managées.</summary>
      <param name="disposing" vsli:raw="&lt;see langword=&quot;true&quot; /&gt; to release both managed and unmanaged resources; &lt;see langword=&quot;false&quot; /&gt; to releases only unmanaged resources.">
        <see langword="true" /> pour libérer les ressources managées et non managées ; <see langword="false" /> pour libérer uniquement les ressources non managées.</param>
    </member>
    <member name="M:System.Net.Http.HttpMessageInvoker.Send(System.Net.Http.HttpRequestMessage,System.Threading.CancellationToken)">
      <summary vsli:raw="Sends an HTTP request with the specified request and cancellation token.">Envoie une requête HTTP avec la requête et le jeton d’annulation spécifiés.</summary>
      <param name="request" vsli:raw="The HTTP request message to send.">Message de la requête HTTP à envoyer.</param>
      <param name="cancellationToken" vsli:raw="The cancellation token to cancel operation.">Jeton d'annulation pour annuler une opération.</param>
      <exception cref="T:System.ArgumentNullException" vsli:raw="The &lt;paramref name=&quot;request&quot; /&gt; was &lt;see langword=&quot;null&quot; /&gt;.">
        <paramref name="request" /> avait la valeur <see langword="null" />.</exception>
      <exception cref="T:System.NotSupportedException" vsli:raw="For HTTP/2 and higher or when requesting version upgrade is enabled by &lt;see cref=&quot;F:System.Net.Http.HttpVersionPolicy.RequestVersionOrHigher&quot; /&gt;.&#xA;&#xA; -or-&#xA;&#xA; If using custom class derived from &lt;see cref=&quot;T:System.Net.Http.HttpContent&quot; /&gt; not overriding &lt;see cref=&quot;M:System.Net.Http.HttpContent.SerializeToStream(System.IO.Stream,System.Net.TransportContext,System.Threading.CancellationToken)&quot; /&gt; method.&#xA;&#xA; -or-&#xA;&#xA; If using custom &lt;see cref=&quot;T:System.Net.Http.HttpMessageHandler&quot; /&gt; not overriding &lt;see cref=&quot;M:System.Net.Http.HttpMessageHandler.Send(System.Net.Http.HttpRequestMessage,System.Threading.CancellationToken)&quot; /&gt; method.">Pour HTTP/2 et versions ultérieures, ou lorsque la demande de mise à niveau de version est activée par <see cref="F:System.Net.Http.HttpVersionPolicy.RequestVersionOrHigher" />.

- ou -

Si vous utilisez une classe personnalisée dérivée de <see cref="T:System.Net.Http.HttpContent" /> qui ne remplace pas la méthode <see cref="M:System.Net.Http.HttpContent.SerializeToStream(System.IO.Stream,System.Net.TransportContext,System.Threading.CancellationToken)" />.

- ou -

Si vous utilisez des éléments <see cref="T:System.Net.Http.HttpMessageHandler" /> personnalisés qui ne remplacent pas la méthode <see cref="M:System.Net.Http.HttpMessageHandler.Send(System.Net.Http.HttpRequestMessage,System.Threading.CancellationToken)" />.</exception>
      <returns vsli:raw="The HTTP response message.">Message de réponse HTTP.</returns>
    </member>
    <member name="M:System.Net.Http.HttpMessageInvoker.SendAsync(System.Net.Http.HttpRequestMessage,System.Threading.CancellationToken)">
      <summary vsli:raw="Send an HTTP request as an asynchronous operation.">Envoie une requête HTTP en tant qu'opération asynchrone.</summary>
      <param name="request" vsli:raw="The HTTP request message to send.">Message de la requête HTTP à envoyer.</param>
      <param name="cancellationToken" vsli:raw="The cancellation token to cancel operation.">Jeton d'annulation pour annuler une opération.</param>
      <exception cref="T:System.ArgumentNullException" vsli:raw="The &lt;paramref name=&quot;request&quot; /&gt; was &lt;see langword=&quot;null&quot; /&gt;.">
        <paramref name="request" /> avait la valeur <see langword="null" />.</exception>
      <returns vsli:raw="The task object representing the asynchronous operation.">Objet de tâche représentant l'opération asynchrone.</returns>
    </member>
    <member name="T:System.Net.Http.HttpMethod">
      <summary vsli:raw="A helper class for retrieving and comparing standard HTTP methods and for creating new HTTP methods.">Classe d'assistance pour récupérer et comparer les méthodes HTTP standard et pour créer de nouvelles méthodes HTTP.</summary>
    </member>
    <member name="M:System.Net.Http.HttpMethod.#ctor(System.String)">
      <summary vsli:raw="Initializes a new instance of the &lt;see cref=&quot;T:System.Net.Http.HttpMethod&quot; /&gt; class with a specific HTTP method.">Initialise une nouvelle instance de la classe <see cref="T:System.Net.Http.HttpMethod" /> avec une méthode HTTP spécifique.</summary>
      <param name="method" vsli:raw="The HTTP method.">Méthode HTTP.</param>
    </member>
    <member name="M:System.Net.Http.HttpMethod.Equals(System.Net.Http.HttpMethod)">
      <summary vsli:raw="Determines whether the specified &lt;see cref=&quot;T:System.Net.Http.HttpMethod&quot; /&gt; is equal to the current &lt;see cref=&quot;T:System.Object&quot; /&gt;.">Détermine si l'objet <see cref="T:System.Net.Http.HttpMethod" /> spécifié est égal à l'objet <see cref="T:System.Object" /> actuel.</summary>
      <param name="other" vsli:raw="The HTTP method to compare with the current object.">Méthode HTTP à comparer à l'objet actuel.</param>
      <returns vsli:raw="&lt;see langword=&quot;true&quot; /&gt; if the specified object is equal to the current object; otherwise, &lt;see langword=&quot;false&quot; /&gt;.">
        <see langword="true" /> si l’objet spécifié est égal à l’objet actuel ; sinon, <see langword="false" />.</returns>
    </member>
    <member name="M:System.Net.Http.HttpMethod.Equals(System.Object)">
      <summary vsli:raw="Determines whether the specified &lt;see cref=&quot;T:System.Object&quot; /&gt; is equal to the current &lt;see cref=&quot;T:System.Object&quot; /&gt;.">Détermine si l'objet <see cref="T:System.Object" /> spécifié est égal à l'objet <see cref="T:System.Object" /> actuel.</summary>
      <param name="obj" vsli:raw="The object to compare with the current object.">Objet à comparer à l'objet actuel.</param>
      <returns vsli:raw="&lt;see langword=&quot;true&quot; /&gt; if the specified object is equal to the current object; otherwise, &lt;see langword=&quot;false&quot; /&gt;.">
        <see langword="true" /> si l’objet spécifié est égal à l’objet actuel ; sinon, <see langword="false" />.</returns>
    </member>
    <member name="M:System.Net.Http.HttpMethod.GetHashCode">
      <summary vsli:raw="Serves as a hash function for this type.">Sert de fonction de hachage pour ce type.</summary>
      <returns vsli:raw="A hash code for the current &lt;see cref=&quot;T:System.Object&quot; /&gt;.">Code de hachage du <see cref="T:System.Object" /> actuel.</returns>
    </member>
    <member name="M:System.Net.Http.HttpMethod.op_Equality(System.Net.Http.HttpMethod,System.Net.Http.HttpMethod)">
      <summary vsli:raw="The equality operator for comparing two &lt;see cref=&quot;T:System.Net.Http.HttpMethod&quot; /&gt; objects.">Opérateur d’égalité pour la comparaison de deux objets <see cref="T:System.Net.Http.HttpMethod" />.</summary>
      <param name="left" vsli:raw="The left &lt;see cref=&quot;T:System.Net.Http.HttpMethod&quot; /&gt; to an equality operator.">La valeur <see cref="T:System.Net.Http.HttpMethod" /> à gauche d’un opérateur d’égalité.</param>
      <param name="right" vsli:raw="The right  &lt;see cref=&quot;T:System.Net.Http.HttpMethod&quot; /&gt; to an equality operator.">La valeur <see cref="T:System.Net.Http.HttpMethod" /> à droite d’un opérateur d’égalité.</param>
      <returns vsli:raw="&lt;see langword=&quot;true&quot; /&gt; if the specified &lt;paramref name=&quot;left&quot; /&gt; and &lt;paramref name=&quot;right&quot; /&gt; parameters are equal; otherwise, &lt;see langword=&quot;false&quot; /&gt;.">
        <see langword="true" /> si les paramètres <paramref name="left" /> et <paramref name="right" /> spécifiés sont égaux ; sinon, <see langword="false" />.</returns>
    </member>
    <member name="M:System.Net.Http.HttpMethod.op_Inequality(System.Net.Http.HttpMethod,System.Net.Http.HttpMethod)">
      <summary vsli:raw="The inequality operator for comparing two &lt;see cref=&quot;T:System.Net.Http.HttpMethod&quot; /&gt; objects.">L’opérateur d’inégalité pour la comparaison de deux objets <see cref="T:System.Net.Http.HttpMethod" />.</summary>
      <param name="left" vsli:raw="The left &lt;see cref=&quot;T:System.Net.Http.HttpMethod&quot; /&gt; to an inequality operator.">La valeur <see cref="T:System.Net.Http.HttpMethod" /> à gauche d'un opérateur d’inégalité.</param>
      <param name="right" vsli:raw="The right  &lt;see cref=&quot;T:System.Net.Http.HttpMethod&quot; /&gt; to an inequality operator.">La valeur <see cref="T:System.Net.Http.HttpMethod" /> à droite d'un opérateur d’inégalité.</param>
      <returns vsli:raw="&lt;see langword=&quot;true&quot; /&gt; if the specified &lt;paramref name=&quot;left&quot; /&gt; and &lt;paramref name=&quot;right&quot; /&gt; parameters are inequal; otherwise, &lt;see langword=&quot;false&quot; /&gt;.">
        <see langword="true" /> si les paramètres <paramref name="left" /> et <paramref name="right" /> spécifiés sont inégaux ; sinon, <see langword="false" />.</returns>
    </member>
    <member name="M:System.Net.Http.HttpMethod.ToString">
      <summary vsli:raw="Returns a string that represents the current object.">Retourne une chaîne qui représente l'objet actuel.</summary>
      <returns vsli:raw="A string representing the current object.">Chaîne représentant l’objet actif.</returns>
    </member>
    <member name="P:System.Net.Http.HttpMethod.Delete">
      <summary vsli:raw="Represents an HTTP DELETE protocol method.">Représente une méthode de protocole HTTP DELETE.</summary>
      <returns vsli:raw="The HTTP DELETE method.">Retourne <see cref="T:System.Net.Http.HttpMethod" />.</returns>
    </member>
    <member name="P:System.Net.Http.HttpMethod.Get">
      <summary vsli:raw="Represents an HTTP GET protocol method.">Représente une méthode de protocole HTTP GET.</summary>
      <returns vsli:raw="The HTTP GET method.">Retourne <see cref="T:System.Net.Http.HttpMethod" />.</returns>
    </member>
    <member name="P:System.Net.Http.HttpMethod.Head">
      <summary vsli:raw="Represents an HTTP HEAD protocol method. The HEAD method is identical to GET except that the server only returns message-headers in the response, without a message-body.">Représente une méthode de protocole HTTP HEAD. La méthode HEAD est identique à GET, mais le serveur retourne uniquement des en-têtes de message dans la réponse, sans corps du message.</summary>
      <returns vsli:raw="The HTTP HEAD method.">Retourne <see cref="T:System.Net.Http.HttpMethod" />.</returns>
    </member>
    <member name="P:System.Net.Http.HttpMethod.Method">
      <summary vsli:raw="An HTTP method.">Méthode &amp;HTTP.</summary>
      <returns vsli:raw="An HTTP method represented as a &lt;see cref=&quot;T:System.String&quot; /&gt;.">Méthode HTTP représentée comme <see cref="T:System.String" />.</returns>
    </member>
    <member name="P:System.Net.Http.HttpMethod.Options">
      <summary vsli:raw="Represents an HTTP OPTIONS protocol method.">Représente une méthode de protocole HTTP OPTIONS.</summary>
      <returns vsli:raw="The HTTP OPTIONS method.">Retourne <see cref="T:System.Net.Http.HttpMethod" />.</returns>
    </member>
    <member name="P:System.Net.Http.HttpMethod.Patch">
      <summary vsli:raw="Gets the HTTP PATCH protocol method.">Obtient la méthode de protocole HTTP PATCH.</summary>
      <returns vsli:raw="The HTTP PATCH protocol method.">Méthode de protocole HTTP PATCH.</returns>
    </member>
    <member name="P:System.Net.Http.HttpMethod.Post">
      <summary vsli:raw="Represents an HTTP POST protocol method that is used to post a new entity as an addition to a URI.">Représente une méthode de protocole HTTP POST utilisée pour publier une nouvelle entité en plus d'un URI.</summary>
      <returns vsli:raw="The HTTP POST method.">Retourne <see cref="T:System.Net.Http.HttpMethod" />.</returns>
    </member>
    <member name="P:System.Net.Http.HttpMethod.Put">
      <summary vsli:raw="Represents an HTTP PUT protocol method that is used to replace an entity identified by a URI.">Représente une méthode de protocole HTTP PUT utilisée pour remplacer une entité identifiée par un URI.</summary>
      <returns vsli:raw="The HTTP PUT method.">Retourne <see cref="T:System.Net.Http.HttpMethod" />.</returns>
    </member>
    <member name="P:System.Net.Http.HttpMethod.Trace">
      <summary vsli:raw="Represents an HTTP TRACE protocol method.">Représente une méthode de protocole HTTP TRACE.</summary>
      <returns vsli:raw="The HTTP TRACE method.">Retourne <see cref="T:System.Net.Http.HttpMethod" />.</returns>
    </member>
    <member name="T:System.Net.Http.HttpRequestException">
      <summary vsli:raw="A base class for exceptions thrown by the &lt;see cref=&quot;T:System.Net.Http.HttpClient&quot; /&gt; and &lt;see cref=&quot;T:System.Net.Http.HttpMessageHandler&quot; /&gt; classes.">Classe de base pour les exceptions levées par les classes <see cref="T:System.Net.Http.HttpClient" /> et <see cref="T:System.Net.Http.HttpMessageHandler" /> .</summary>
    </member>
    <member name="M:System.Net.Http.HttpRequestException.#ctor">
      <summary vsli:raw="Initializes a new instance of the &lt;see cref=&quot;T:System.Net.Http.HttpRequestException&quot; /&gt; class.">Initialise une nouvelle instance de la classe <see cref="T:System.Net.Http.HttpRequestException" />.</summary>
    </member>
    <member name="M:System.Net.Http.HttpRequestException.#ctor(System.String)">
      <summary vsli:raw="Initializes a new instance of the &lt;see cref=&quot;T:System.Net.Http.HttpRequestException&quot; /&gt; class with a specific message that describes the current exception.">Initialise une nouvelle instance de la classe <see cref="T:System.Net.Http.HttpRequestException" /> avec un message spécifique qui décrit l'exception actuelle.</summary>
      <param name="message" vsli:raw="A message that describes the current exception.">Message qui décrit l'exception en cours.</param>
    </member>
    <member name="M:System.Net.Http.HttpRequestException.#ctor(System.String,System.Exception)">
      <summary vsli:raw="Initializes a new instance of the &lt;see cref=&quot;T:System.Net.Http.HttpRequestException&quot; /&gt; class with a specific message that describes the current exception and an inner exception.">Initialise une nouvelle instance de la classe <see cref="T:System.Net.Http.HttpRequestException" /> avec un message spécifique décrivant l'exception actuelle et une exception interne.</summary>
      <param name="message" vsli:raw="A message that describes the current exception.">Message qui décrit l'exception en cours.</param>
      <param name="inner" vsli:raw="The inner exception.">Exception interne.</param>
    </member>
    <member name="M:System.Net.Http.HttpRequestException.#ctor(System.String,System.Exception,System.Nullable{System.Net.HttpStatusCode})">
      <summary vsli:raw="Initializes a new instance of the &lt;see cref=&quot;T:System.Net.Http.HttpRequestException&quot; /&gt; class with a specific message that describes the current exception, an inner exception, and an HTTP status code.">Initialise une nouvelle instance de la <see cref="T:System.Net.Http.HttpRequestException" /> classe avec un message spécifique qui décrit l’exception actuelle, une exception interne et un code d’État http.</summary>
      <param name="message" vsli:raw="A message that describes the current exception.">Message qui décrit l'exception en cours.</param>
      <param name="inner" vsli:raw="The inner exception.">Exception interne.</param>
      <param name="statusCode" vsli:raw="The HTTP status code.">Code d’état HTTP.</param>
    </member>
    <member name="P:System.Net.Http.HttpRequestException.StatusCode">
      <summary vsli:raw="Gets the HTTP status code to be returned with the exception.">Obtient le code d’état HTTP à retourner avec l’exception.</summary>
      <returns vsli:raw="An HTTP status code if the exception represents a non-successful result, otherwise &lt;c&gt;null&lt;/c&gt;.">Code d’état HTTP si l’exception représente un résultat non réussi, sinon <c>null</c>.</returns>
    </member>
    <member name="T:System.Net.Http.HttpRequestMessage">
      <summary vsli:raw="Represents a HTTP request message.">Représente un message de requête HTTP.</summary>
    </member>
    <member name="M:System.Net.Http.HttpRequestMessage.#ctor">
      <summary vsli:raw="Initializes a new instance of the &lt;see cref=&quot;T:System.Net.Http.HttpRequestMessage&quot; /&gt; class.">Initialise une nouvelle instance de la classe <see cref="T:System.Net.Http.HttpRequestMessage" />.</summary>
    </member>
    <member name="M:System.Net.Http.HttpRequestMessage.#ctor(System.Net.Http.HttpMethod,System.String)">
      <summary vsli:raw="Initializes a new instance of the &lt;see cref=&quot;T:System.Net.Http.HttpRequestMessage&quot; /&gt; class with an HTTP method and a request &lt;see cref=&quot;T:System.Uri&quot; /&gt;.">Initialise une nouvelle instance de la classe <see cref="T:System.Net.Http.HttpRequestMessage" /> avec une méthode HTTP et une requête <see cref="T:System.Uri" />.</summary>
      <param name="method" vsli:raw="The HTTP method.">Méthode HTTP.</param>
      <param name="requestUri" vsli:raw="A string that represents the request  &lt;see cref=&quot;T:System.Uri&quot; /&gt;.">Chaîne qui représente la requête <see cref="T:System.Uri" />.</param>
    </member>
    <member name="M:System.Net.Http.HttpRequestMessage.#ctor(System.Net.Http.HttpMethod,System.Uri)">
      <summary vsli:raw="Initializes a new instance of the &lt;see cref=&quot;T:System.Net.Http.HttpRequestMessage&quot; /&gt; class with an HTTP method and a request &lt;see cref=&quot;T:System.Uri&quot; /&gt;.">Initialise une nouvelle instance de la classe <see cref="T:System.Net.Http.HttpRequestMessage" /> avec une méthode HTTP et une requête <see cref="T:System.Uri" />.</summary>
      <param name="method" vsli:raw="The HTTP method.">Méthode HTTP.</param>
      <param name="requestUri" vsli:raw="The &lt;see cref=&quot;T:System.Uri&quot; /&gt; to request.">
        <see cref="T:System.Uri" /> à demander.</param>
    </member>
    <member name="M:System.Net.Http.HttpRequestMessage.Dispose">
      <summary vsli:raw="Releases the unmanaged resources and disposes of the managed resources used by the &lt;see cref=&quot;T:System.Net.Http.HttpRequestMessage&quot; /&gt;.">Libère les ressources non managées et supprime les ressources managées utilisées par le <see cref="T:System.Net.Http.HttpRequestMessage" />.</summary>
    </member>
    <member name="M:System.Net.Http.HttpRequestMessage.Dispose(System.Boolean)">
      <summary vsli:raw="Releases the unmanaged resources used by the &lt;see cref=&quot;T:System.Net.Http.HttpRequestMessage&quot; /&gt; and optionally disposes of the managed resources.">Libère les ressources non managées utilisées par le <see cref="T:System.Net.Http.HttpRequestMessage" /> et supprime éventuellement les ressources managées.</summary>
      <param name="disposing" vsli:raw="&lt;see langword=&quot;true&quot; /&gt; to release both managed and unmanaged resources; &lt;see langword=&quot;false&quot; /&gt; to releases only unmanaged resources.">
        <see langword="true" /> pour libérer les ressources managées et non managées ; <see langword="false" /> pour libérer uniquement les ressources non managées.</param>
    </member>
    <member name="M:System.Net.Http.HttpRequestMessage.ToString">
      <summary vsli:raw="Returns a string that represents the current object.">Retourne une chaîne qui représente l'objet actuel.</summary>
      <returns vsli:raw="A string representation of the current object.">Représentation sous forme de chaîne de l’objet actuel.</returns>
    </member>
    <member name="P:System.Net.Http.HttpRequestMessage.Content">
      <summary vsli:raw="Gets or sets the contents of the HTTP message.">Récupère ou définit le contenu du message HTTP.</summary>
      <returns vsli:raw="The content of a message.">Le contenu d’un message</returns>
    </member>
    <member name="P:System.Net.Http.HttpRequestMessage.Headers">
      <summary vsli:raw="Gets the collection of HTTP request headers.">Récupère la collection d’en-têtes de requêtes HTTP.</summary>
      <returns vsli:raw="The collection of HTTP request headers.">La collection d’en-têtes de requêtes HTTP.</returns>
    </member>
    <member name="P:System.Net.Http.HttpRequestMessage.Method">
      <summary vsli:raw="Gets or sets the HTTP method used by the HTTP request message.">Récupère ou définit la méthode HTTP utilisée par le message de requête HTTP.</summary>
      <returns vsli:raw="The HTTP method used by the request message. The default is the GET method.">La méthode HTTP utilisée par le message de requête. La méthode par défaut est la méthode GET.</returns>
    </member>
    <member name="P:System.Net.Http.HttpRequestMessage.Options" />
    <member name="P:System.Net.Http.HttpRequestMessage.Properties">
      <summary vsli:raw="Gets a set of properties for the HTTP request.">Obtient un ensemble de propriétés pour la requête HTTP.</summary>
      <returns vsli:raw="Returns &lt;see cref=&quot;T:System.Collections.Generic.IDictionary`2&quot; /&gt;.">Retourne <see cref="T:System.Collections.Generic.IDictionary`2" />.</returns>
    </member>
    <member name="P:System.Net.Http.HttpRequestMessage.RequestUri">
      <summary vsli:raw="Gets or sets the &lt;see cref=&quot;T:System.Uri&quot; /&gt; used for the HTTP request.">Obtient ou définit <see cref="T:System.Uri" /> utilisé pour la requête HTTP.</summary>
      <returns vsli:raw="The &lt;see cref=&quot;T:System.Uri&quot; /&gt; used for the HTTP request.">
        <see cref="T:System.Uri" /> utilisé pour la requête HTTP.</returns>
    </member>
    <member name="P:System.Net.Http.HttpRequestMessage.Version">
      <summary vsli:raw="Gets or sets the HTTP message version.">Obtient ou définit la version du message HTTP.</summary>
      <returns vsli:raw="The HTTP message version. The default value is &lt;c&gt;1.1&lt;/c&gt;, unless you're targeting .NET Core 2.1 or 2.2. In that case, the default value is &lt;c&gt;2.0&lt;/c&gt;.">Version du message HTTP. La valeur par défaut est <c>1,1</c>, sauf si vous ciblez .net Core 2,1 ou 2,2. Dans ce cas, la valeur par défaut est <c>2,0</c>.</returns>
    </member>
    <member name="P:System.Net.Http.HttpRequestMessage.VersionPolicy">
      <summary vsli:raw="Gets or sets the policy that determines how &lt;see cref=&quot;System.Net.Http.HttpRequestMessage.Version&quot; /&gt; is interpreted and how the final HTTP version is negotiated with the server.">Obtient ou définit la stratégie qui détermine comment l’élément <see cref="System.Net.Http.HttpRequestMessage.Version" /> est interprété et comment la version HTTP finale est négociée avec le serveur.</summary>
      <returns vsli:raw="The HttpVersionPolicy used when the HTTP connection is established.">HttpVersionPolicy utilisé lorsque la connexion HTTP est établie.</returns>
    </member>
    <member name="T:System.Net.Http.HttpRequestOptions" />
    <member name="M:System.Net.Http.HttpRequestOptions.#ctor" />
    <member name="M:System.Net.Http.HttpRequestOptions.Set``1(System.Net.Http.HttpRequestOptionsKey{``0},``0)">
      <param name="key" vsli:raw="The strongly typed key for the HTTP request option." />
      <param name="value" vsli:raw="The value of the HTTP request option." />
      <typeparam name="TValue" vsli:raw="The type of the HTTP value as defined by &lt;paramref name=&quot;key&quot; /&gt;." />
    </member>
    <member name="M:System.Net.Http.HttpRequestOptions.System#Collections#Generic#ICollection{System#Collections#Generic#KeyValuePair{System#String@System#Object}}#Add(System.Collections.Generic.KeyValuePair{System.String,System.Object})">
      <summary vsli:raw="Adds an item to the &lt;see cref=&quot;T:System.Collections.Generic.ICollection`1&quot; /&gt;.">Ajoute un élément à <see cref="T:System.Collections.Generic.ICollection`1" />.</summary>
      <param name="item" vsli:raw="The object to add to the &lt;see cref=&quot;T:System.Collections.Generic.ICollection`1&quot; /&gt;.">Objet à ajouter à <see cref="T:System.Collections.Generic.ICollection`1" />.</param>
    </member>
    <member name="M:System.Net.Http.HttpRequestOptions.System#Collections#Generic#ICollection{System#Collections#Generic#KeyValuePair{System#String@System#Object}}#Clear">
      <summary vsli:raw="Removes all items from the &lt;see cref=&quot;T:System.Collections.Generic.ICollection`1&quot; /&gt;.">Supprime tous les éléments de <see cref="T:System.Collections.Generic.ICollection`1" />.</summary>
    </member>
    <member name="M:System.Net.Http.HttpRequestOptions.System#Collections#Generic#ICollection{System#Collections#Generic#KeyValuePair{System#String@System#Object}}#Contains(System.Collections.Generic.KeyValuePair{System.String,System.Object})">
      <summary vsli:raw="Determines whether the &lt;see cref=&quot;T:System.Collections.Generic.ICollection`1&quot; /&gt; contains a specific value.">Détermine si <see cref="T:System.Collections.Generic.ICollection`1" /> contient une valeur spécifique.</summary>
      <param name="item" vsli:raw="The object to locate in the &lt;see cref=&quot;T:System.Collections.Generic.ICollection`1&quot; /&gt;.">Objet à rechercher dans <see cref="T:System.Collections.Generic.ICollection`1" />.</param>
      <returns vsli:raw="&lt;see langword=&quot;true&quot; /&gt; if &lt;paramref name=&quot;item&quot; /&gt; is found in the &lt;see cref=&quot;T:System.Collections.Generic.ICollection`1&quot; /&gt;; otherwise, &lt;see langword=&quot;false&quot; /&gt;.">
        <see langword="true" /> si <paramref name="item" /> existe dans <see cref="T:System.Collections.Generic.ICollection`1" /> ; sinon, <see langword="false" />.</returns>
    </member>
    <member name="M:System.Net.Http.HttpRequestOptions.System#Collections#Generic#ICollection{System#Collections#Generic#KeyValuePair{System#String@System#Object}}#CopyTo(System.Collections.Generic.KeyValuePair{System.String,System.Object}[],System.Int32)">
      <summary vsli:raw="Copies the elements of the &lt;see cref=&quot;T:System.Collections.Generic.ICollection`1&quot; /&gt; to an &lt;see cref=&quot;T:System.Array&quot; /&gt;, starting at a particular &lt;see cref=&quot;T:System.Array&quot; /&gt; index.">Copie les éléments de <see cref="T:System.Collections.Generic.ICollection`1" /> dans <see cref="T:System.Array" />, à partir d'un index particulier de <see cref="T:System.Array" />.</summary>
      <param name="array" vsli:raw="The one-dimensional &lt;see cref=&quot;T:System.Array&quot; /&gt; that is the destination of the elements copied from &lt;see cref=&quot;T:System.Collections.Generic.ICollection`1&quot; /&gt;. The &lt;see cref=&quot;T:System.Array&quot; /&gt; must have zero-based indexing.">
        <see cref="T:System.Array" /> unidimensionnel qui constitue la destination des éléments copiés à partir de <see cref="T:System.Collections.Generic.ICollection`1" />. <see cref="T:System.Array" /> doit avoir une indexation de base zéro.</param>
      <param name="arrayIndex" vsli:raw="The zero-based index in &lt;paramref name=&quot;array&quot; /&gt; at which copying begins.">Index de base zéro dans l'<paramref name="array" /> à partir duquel la copie commence.</param>
    </member>
    <member name="M:System.Net.Http.HttpRequestOptions.System#Collections#Generic#ICollection{System#Collections#Generic#KeyValuePair{System#String@System#Object}}#Remove(System.Collections.Generic.KeyValuePair{System.String,System.Object})">
      <summary vsli:raw="Removes the first occurrence of a specific object from the &lt;see cref=&quot;T:System.Collections.Generic.ICollection`1&quot; /&gt;.">Supprime la première occurrence d’un objet spécifique de <see cref="T:System.Collections.Generic.ICollection`1" />.</summary>
      <param name="item" vsli:raw="The object to remove from the &lt;see cref=&quot;T:System.Collections.Generic.ICollection`1&quot; /&gt;.">Objet à supprimer de <see cref="T:System.Collections.Generic.ICollection`1" />.</param>
      <returns vsli:raw="&lt;see langword=&quot;true&quot; /&gt; if &lt;paramref name=&quot;item&quot; /&gt; was successfully removed from the &lt;see cref=&quot;T:System.Collections.Generic.ICollection`1&quot; /&gt;; otherwise, &lt;see langword=&quot;false&quot; /&gt;. This method also returns &lt;see langword=&quot;false&quot; /&gt; if &lt;paramref name=&quot;item&quot; /&gt; is not found in the original &lt;see cref=&quot;T:System.Collections.Generic.ICollection`1&quot; /&gt;.">
        <see langword="true" /> si <paramref name="item" /> a été correctement supprimé de <see cref="T:System.Collections.Generic.ICollection`1" /> ; sinon <see langword="false" />. Cette méthode retourne également <see langword="false" /> si <paramref name="item" /> est introuvable dans le <see cref="T:System.Collections.Generic.ICollection`1" /> d'origine.</returns>
    </member>
    <member name="M:System.Net.Http.HttpRequestOptions.System#Collections#Generic#IDictionary{System#String@System#Object}#Add(System.String,System.Object)">
      <summary vsli:raw="Adds an element with the provided key and value to the &lt;see cref=&quot;T:System.Collections.Generic.IDictionary`2&quot; /&gt;.">Ajoute un élément avec la clé et la valeur fournies à <see cref="T:System.Collections.Generic.IDictionary`2" />.</summary>
      <param name="key" vsli:raw="The object to use as the key of the element to add.">Objet à utiliser comme clé de l'élément à ajouter.</param>
      <param name="value" vsli:raw="The object to use as the value of the element to add.">Objet à utiliser comme valeur de l'élément à ajouter.</param>
    </member>
    <member name="M:System.Net.Http.HttpRequestOptions.System#Collections#Generic#IDictionary{System#String@System#Object}#ContainsKey(System.String)">
      <summary vsli:raw="Determines whether the &lt;see cref=&quot;T:System.Collections.Generic.IDictionary`2&quot; /&gt; contains an element with the specified key.">Détermine si <see cref="T:System.Collections.Generic.IDictionary`2" /> contient un élément avec la clé spécifiée.</summary>
      <param name="key" vsli:raw="The key to locate in the &lt;see cref=&quot;T:System.Collections.Generic.IDictionary`2&quot; /&gt;.">Clé à rechercher dans <see cref="T:System.Collections.Generic.IDictionary`2" />.</param>
      <returns vsli:raw="&lt;see langword=&quot;true&quot; /&gt; if the &lt;see cref=&quot;T:System.Collections.Generic.IDictionary`2&quot; /&gt; contains an element with the key; otherwise, &lt;see langword=&quot;false&quot; /&gt;.">
        <see langword="true" /> si <see cref="T:System.Collections.Generic.IDictionary`2" /> contient un élément avec la clé ; sinon, <see langword="false" />.</returns>
    </member>
    <member name="M:System.Net.Http.HttpRequestOptions.System#Collections#Generic#IDictionary{System#String@System#Object}#Remove(System.String)">
      <summary vsli:raw="Removes the element with the specified key from the &lt;see cref=&quot;T:System.Collections.Generic.IDictionary`2&quot; /&gt;.">Supprime l'élément avec la clé spécifiée d'<see cref="T:System.Collections.Generic.IDictionary`2" />.</summary>
      <param name="key" vsli:raw="The key of the element to remove.">Clé de l'élément à supprimer.</param>
      <returns vsli:raw="&lt;see langword=&quot;true&quot; /&gt; if the element is successfully removed; otherwise, &lt;see langword=&quot;false&quot; /&gt;. This method also returns &lt;see langword=&quot;false&quot; /&gt; if &lt;paramref name=&quot;key&quot; /&gt; was not found in the original &lt;see cref=&quot;T:System.Collections.Generic.IDictionary`2&quot; /&gt;.">
        <see langword="true" /> si la suppression de l'élément réussit ; sinon, <see langword="false" />. Cette méthode retourne également <see langword="false" /> si <paramref name="key" /> est introuvable dans le <see cref="T:System.Collections.Generic.IDictionary`2" /> d'origine.</returns>
    </member>
    <member name="M:System.Net.Http.HttpRequestOptions.System#Collections#Generic#IDictionary{System#String@System#Object}#TryGetValue(System.String,System.Object@)">
      <param name="key" vsli:raw="The key of the value to get." />
      <param name="value" vsli:raw="When this method returns, contains the value associated with the specified key, if the key is found; otherwise, the default value for the type of the &lt;paramref name=&quot;value&quot; /&gt; parameter. This parameter is passed uninitialized." />
    </member>
    <member name="M:System.Net.Http.HttpRequestOptions.System#Collections#Generic#IEnumerable{System#Collections#Generic#KeyValuePair{System#String@System#Object}}#GetEnumerator">
      <summary vsli:raw="Returns an enumerator that iterates through the collection.">Retourne un énumérateur qui itère au sein de la collection.</summary>
      <returns vsli:raw="An enumerator that can be used to iterate through the collection.">Énumérateur permettant d'effectuer une itération au sein de la collection.</returns>
    </member>
    <member name="M:System.Net.Http.HttpRequestOptions.System#Collections#IEnumerable#GetEnumerator">
      <summary vsli:raw="Returns an enumerator that iterates through a collection.">Retourne un énumérateur qui itère au sein d’une collection.</summary>
      <returns vsli:raw="An &lt;see cref=&quot;T:System.Collections.IEnumerator&quot; /&gt; object that can be used to iterate through the collection.">Objet <see cref="T:System.Collections.IEnumerator" /> pouvant être utilisé pour itérer au sein de la collection.</returns>
    </member>
    <member name="M:System.Net.Http.HttpRequestOptions.TryGetValue``1(System.Net.Http.HttpRequestOptionsKey{``0},``0@)">
      <param name="key" vsli:raw="The strongly typed key to get the value of an HTTP request option." />
      <param name="value" vsli:raw="When this method returns, contains the value of the specified HTTP request option." />
      <typeparam name="TValue" vsli:raw="The type of the HTTP value as defined by &lt;paramref name=&quot;key&quot; /&gt;." />
    </member>
    <member name="P:System.Net.Http.HttpRequestOptions.System#Collections#Generic#ICollection{System#Collections#Generic#KeyValuePair{System#String@System#Object}}#Count">
      <summary vsli:raw="Gets the number of elements contained in the &lt;see cref=&quot;T:System.Collections.Generic.ICollection`1&quot; /&gt;.">Obtient le nombre d’éléments contenus dans le <see cref="T:System.Collections.Generic.ICollection`1" />.</summary>
      <returns vsli:raw="The number of elements contained in the &lt;see cref=&quot;T:System.Collections.Generic.ICollection`1&quot; /&gt;.">Nombre d'éléments contenus dans <see cref="T:System.Collections.Generic.ICollection`1" />.</returns>
    </member>
    <member name="P:System.Net.Http.HttpRequestOptions.System#Collections#Generic#ICollection{System#Collections#Generic#KeyValuePair{System#String@System#Object}}#IsReadOnly">
      <summary vsli:raw="Gets a value indicating whether the &lt;see cref=&quot;T:System.Collections.Generic.ICollection`1&quot; /&gt; is read-only.">Obtient une valeur indiquant si <see cref="T:System.Collections.Generic.ICollection`1" /> est en lecture seule.</summary>
      <returns vsli:raw="&lt;see langword=&quot;true&quot; /&gt; if the &lt;see cref=&quot;T:System.Collections.Generic.ICollection`1&quot; /&gt; is read-only; otherwise, &lt;see langword=&quot;false&quot; /&gt;.">
        <see langword="true" /> si <see cref="T:System.Collections.Generic.ICollection`1" /> est en lecture seule ; sinon, <see langword="false" />.</returns>
    </member>
    <member name="P:System.Net.Http.HttpRequestOptions.System#Collections#Generic#IDictionary{System#String@System#Object}#Item(System.String)">
      <summary vsli:raw="Gets or sets the element with the specified key.">Obtient ou définit l'élément à l'aide de la clé spécifiée.</summary>
      <param name="key" vsli:raw="The key of the element to get or set.">Clé de l'élément à obtenir ou définir.</param>
      <returns vsli:raw="The element with the specified key.">Élément correspondant à la clé spécifiée.</returns>
    </member>
    <member name="P:System.Net.Http.HttpRequestOptions.System#Collections#Generic#IDictionary{System#String@System#Object}#Keys">
      <summary vsli:raw="Gets an &lt;see cref=&quot;T:System.Collections.Generic.ICollection`1&quot; /&gt; containing the keys of the &lt;see cref=&quot;T:System.Collections.Generic.IDictionary`2&quot; /&gt;.">Obtient un <see cref="T:System.Collections.Generic.ICollection`1" /> contenant les clés de <see cref="T:System.Collections.Generic.IDictionary`2" />.</summary>
      <returns vsli:raw="An &lt;see cref=&quot;T:System.Collections.Generic.ICollection`1&quot; /&gt; containing the keys of the object that implements &lt;see cref=&quot;T:System.Collections.Generic.IDictionary`2&quot; /&gt;.">
        <see cref="T:System.Collections.Generic.ICollection`1" /> contenant les clés de l'objet qui implémente <see cref="T:System.Collections.Generic.IDictionary`2" />.</returns>
    </member>
    <member name="P:System.Net.Http.HttpRequestOptions.System#Collections#Generic#IDictionary{System#String@System#Object}#Values">
      <summary vsli:raw="Gets an &lt;see cref=&quot;T:System.Collections.Generic.ICollection`1&quot; /&gt; containing the values in the &lt;see cref=&quot;T:System.Collections.Generic.IDictionary`2&quot; /&gt;.">Obtient <see cref="T:System.Collections.Generic.ICollection`1" /> contenant les valeurs de <see cref="T:System.Collections.Generic.IDictionary`2" />.</summary>
      <returns vsli:raw="An &lt;see cref=&quot;T:System.Collections.Generic.ICollection`1&quot; /&gt; containing the values in the object that implements &lt;see cref=&quot;T:System.Collections.Generic.IDictionary`2&quot; /&gt;.">
        <see cref="T:System.Collections.Generic.ICollection`1" /> contenant les valeurs de l'objet qui implémente <see cref="T:System.Collections.Generic.IDictionary`2" />.</returns>
    </member>
    <member name="T:System.Net.Http.HttpRequestOptionsKey`1">
      <typeparam name="TValue" vsli:raw="The type of the value of the option." />
    </member>
    <member name="M:System.Net.Http.HttpRequestOptionsKey`1.#ctor(System.String)">
      <param name="key" vsli:raw="Name of the HTTP request option." />
    </member>
    <member name="P:System.Net.Http.HttpRequestOptionsKey`1.Key" />
    <member name="T:System.Net.Http.HttpResponseMessage">
      <summary vsli:raw="Represents a HTTP response message including the status code and data.">Représente un message de réponse HTTP avec le code et les données d'état.</summary>
    </member>
    <member name="M:System.Net.Http.HttpResponseMessage.#ctor">
      <summary vsli:raw="Initializes a new instance of the &lt;see cref=&quot;T:System.Net.Http.HttpResponseMessage&quot; /&gt; class.">Initialise une nouvelle instance de la classe <see cref="T:System.Net.Http.HttpResponseMessage" />.</summary>
    </member>
    <member name="M:System.Net.Http.HttpResponseMessage.#ctor(System.Net.HttpStatusCode)">
      <summary vsli:raw="Initializes a new instance of the &lt;see cref=&quot;T:System.Net.Http.HttpResponseMessage&quot; /&gt; class with a specific &lt;see cref=&quot;P:System.Net.Http.HttpResponseMessage.StatusCode&quot; /&gt;.">Initialise une nouvelle instance de la classe <see cref="T:System.Net.Http.HttpResponseMessage" /> avec un <see cref="P:System.Net.Http.HttpResponseMessage.StatusCode" /> spécifique.</summary>
      <param name="statusCode" vsli:raw="The status code of the HTTP response.">Code d’état de la réponse HTTP.</param>
    </member>
    <member name="M:System.Net.Http.HttpResponseMessage.Dispose">
      <summary vsli:raw="Releases the unmanaged resources and disposes of unmanaged resources used by the &lt;see cref=&quot;T:System.Net.Http.HttpResponseMessage&quot; /&gt;.">Libère les ressources non managées et supprime les ressources non managées utilisées par le <see cref="T:System.Net.Http.HttpResponseMessage" />.</summary>
    </member>
    <member name="M:System.Net.Http.HttpResponseMessage.Dispose(System.Boolean)">
      <summary vsli:raw="Releases the unmanaged resources used by the &lt;see cref=&quot;T:System.Net.Http.HttpResponseMessage&quot; /&gt; and optionally disposes of the managed resources.">Libère les ressources non managées utilisées par le <see cref="T:System.Net.Http.HttpResponseMessage" /> et supprime éventuellement les ressources managées.</summary>
      <param name="disposing" vsli:raw="&lt;see langword=&quot;true&quot; /&gt; to release both managed and unmanaged resources; &lt;see langword=&quot;false&quot; /&gt; to releases only unmanaged resources.">
        <see langword="true" /> pour libérer les ressources managées et non managées ; <see langword="false" /> pour libérer uniquement les ressources non managées.</param>
    </member>
    <member name="M:System.Net.Http.HttpResponseMessage.EnsureSuccessStatusCode">
      <summary vsli:raw="Throws an exception if the &lt;see cref=&quot;P:System.Net.Http.HttpResponseMessage.IsSuccessStatusCode&quot; /&gt; property for the HTTP response is &lt;see langword=&quot;false&quot; /&gt;.">Lève une exception si la propriété <see cref="P:System.Net.Http.HttpResponseMessage.IsSuccessStatusCode" /> pour la réponse HTTP est <see langword="false" />.</summary>
      <exception cref="T:System.Net.Http.HttpRequestException" vsli:raw="The HTTP response is unsuccessful.">La réponse HTTP est en échec.</exception>
      <returns vsli:raw="The HTTP response message if the call is successful.">Message de réponse HTTP si l’appel a réussi.</returns>
    </member>
    <member name="M:System.Net.Http.HttpResponseMessage.ToString">
      <summary vsli:raw="Returns a string that represents the current object.">Retourne une chaîne qui représente l'objet actuel.</summary>
      <returns vsli:raw="A string representation of the current object.">Représentation de chaîne de l'objet actuel.</returns>
    </member>
    <member name="P:System.Net.Http.HttpResponseMessage.Content">
      <summary vsli:raw="Gets or sets the content of a HTTP response message.">Récupère ou définit le contenu d’un message de réponse HTTP.</summary>
      <returns vsli:raw="The content of the HTTP response message.">Le contenu du message de réponse HTTP.</returns>
    </member>
    <member name="P:System.Net.Http.HttpResponseMessage.Headers">
      <summary vsli:raw="Gets the collection of HTTP response headers.">Obtient la collection d’en-têtes de réponse HTTP.</summary>
      <returns vsli:raw="The collection of HTTP response headers.">Collection d’en-têtes de réponse HTTP.</returns>
    </member>
    <member name="P:System.Net.Http.HttpResponseMessage.IsSuccessStatusCode">
      <summary vsli:raw="Gets a value that indicates if the HTTP response was successful.">Obtient une valeur qui indique si la réponse HTTP a réussi.</summary>
      <returns vsli:raw="&lt;see langword=&quot;true&quot; /&gt; if &lt;see cref=&quot;P:System.Net.Http.HttpResponseMessage.StatusCode&quot; /&gt; was in the range 200-299; otherwise, &lt;see langword=&quot;false&quot; /&gt;.">
        <see langword="true" /> Si <see cref="P:System.Net.Http.HttpResponseMessage.StatusCode" /> a été dans la plage 200-299 ; sinon, <see langword="false" /> .</returns>
    </member>
    <member name="P:System.Net.Http.HttpResponseMessage.ReasonPhrase">
      <summary vsli:raw="Gets or sets the reason phrase which typically is sent by servers together with the status code.">Récupère ou définit l’expression du motif qui est généralement envoyée par les serveurs avec le code d’état.</summary>
      <returns vsli:raw="The reason phrase sent by the server.">L’expression du motif envoyée par le serveur.</returns>
    </member>
    <member name="P:System.Net.Http.HttpResponseMessage.RequestMessage">
      <summary vsli:raw="Gets or sets the request message which led to this response message.">Récupère ou définit le message de requête qui a conduit à ce message de réponse.</summary>
      <returns vsli:raw="The request message which led to this response message.">Le message de requête qui a conduit à ce message de réponse.</returns>
    </member>
    <member name="P:System.Net.Http.HttpResponseMessage.StatusCode">
      <summary vsli:raw="Gets or sets the status code of the HTTP response.">Obtient ou définit le code d’état de la réponse HTTP.</summary>
      <returns vsli:raw="The status code of the HTTP response.">Code d’état de la réponse HTTP.</returns>
    </member>
    <member name="P:System.Net.Http.HttpResponseMessage.TrailingHeaders">
      <summary vsli:raw="Gets the collection of trailing headers included in an HTTP response.">Obtient la collection d’en-têtes de fin inclus dans une réponse HTTP.</summary>
      <exception cref="T:System.Net.Http.HttpRequestException" vsli:raw="PROTOCOL_ERROR: The HTTP/2 response contains pseudo-headers in the Trailing Headers Frame.">PROTOCOL_ERROR : la réponse HTTP/2 contient des Pseudo-en-têtes dans le frame des en-têtes de fin.</exception>
      <returns vsli:raw="The collection of trailing headers in the HTTP response.">Collection d’en-têtes de fin dans la réponse HTTP.</returns>
    </member>
    <member name="P:System.Net.Http.HttpResponseMessage.Version">
      <summary vsli:raw="Gets or sets the HTTP message version.">Obtient ou définit la version du message HTTP.</summary>
      <returns vsli:raw="The HTTP message version. The default is 1.1.">Version du message HTTP. La valeur par défaut est 1.1.</returns>
    </member>
    <member name="T:System.Net.Http.HttpVersionPolicy">
      <summary vsli:raw="Specifies behaviors for selecting and negotiating the HTTP version for a request.">Spécifie les comportements de sélection et de négociation de la version HTTP d’une demande.</summary>
    </member>
    <member name="F:System.Net.Http.HttpVersionPolicy.RequestVersionExact">
      <summary vsli:raw="&lt;para&gt;Only use the requested version.&lt;/para&gt;&lt;para&gt;This option allows for use of a prenegotiated clear text connection for the requested version.&lt;/para&gt;">Utilisez uniquement la version demandée.</summary>
    </member>
    <member name="F:System.Net.Http.HttpVersionPolicy.RequestVersionOrHigher">
      <summary vsli:raw="&lt;para&gt;Use the highest available version, downgrading only to the requested version but not below.&lt;/para&gt;&lt;para&gt;If the server supports a higher version than the requested version (either negotiated via ALPN (H2) or advertised via Alt-Svc (H3)) and a secure connection is requested, the result is the highest available version. Otherwise, the version downgrades to &lt;see cref=&quot;System.Net.Http.HttpRequestMessage.Version&quot; /&gt;. This option allows use of a prenegotiated clear text connection for the requested version but not for a higher version.&lt;/para&gt;">Utilisez la dernière version disponible, en descendant uniquement jusqu’à la version demandée, mais pas au-dessous.</summary>
    </member>
    <member name="F:System.Net.Http.HttpVersionPolicy.RequestVersionOrLower">
      <summary vsli:raw="&lt;para&gt;Use the requested version or downgrade to a lower one. This is the default behavior.&lt;/para&gt;&lt;para&gt;If the server supports the requested version, either negotiated via ALPN (H2) or advertised via Alt-Svc (H3), and a secure connection is being requested, the result is the &lt;see cref=&quot;System.Net.Http.HttpRequestMessage.Version&quot; /&gt;. Otherwise, the version downgrades to HTTP/1.1. This option does not allow use of a prenegotiated clear text connection, for example, H2C.&lt;/para&gt;">Utilisez la version demandée ou passez à une version antérieure. Il s'agit du comportement par défaut.</summary>
    </member>
    <member name="T:System.Net.Http.MessageProcessingHandler">
      <summary vsli:raw="A base type for handlers which only do some small processing of request and/or response messages.">Type de base pour les gestionnaires qui n'exécutent qu'une petite partie du traitement des messages de requête et/ou de réponse.</summary>
    </member>
    <member name="M:System.Net.Http.MessageProcessingHandler.#ctor">
      <summary vsli:raw="Creates an instance of a &lt;see cref=&quot;T:System.Net.Http.MessageProcessingHandler&quot; /&gt; class.">Crée une instance d’une classe <see cref="T:System.Net.Http.MessageProcessingHandler" />.</summary>
    </member>
    <member name="M:System.Net.Http.MessageProcessingHandler.#ctor(System.Net.Http.HttpMessageHandler)">
      <summary vsli:raw="Creates an instance of a &lt;see cref=&quot;T:System.Net.Http.MessageProcessingHandler&quot; /&gt; class with a specific inner handler.">Crée une instance d'une classe <see cref="T:System.Net.Http.MessageProcessingHandler" /> avec un gestionnaire interne spécifique.</summary>
      <param name="innerHandler" vsli:raw="The inner handler which is responsible for processing the HTTP response messages.">Gestionnaire interne chargé de traiter les messages de réponse HTTP.</param>
    </member>
    <member name="M:System.Net.Http.MessageProcessingHandler.ProcessRequest(System.Net.Http.HttpRequestMessage,System.Threading.CancellationToken)">
      <summary vsli:raw="Performs processing on each request sent to the server.">Exécute le traitement de chaque requête envoyée au serveur.</summary>
      <param name="request" vsli:raw="The HTTP request message to process.">Le message de la requête HTTP à traiter.</param>
      <param name="cancellationToken" vsli:raw="A cancellation token that can be used by other objects or threads to receive notice of cancellation.">Jeton d'annulation qui peut être utilisé par d'autres objets ou threads pour être informés de l'annulation.</param>
      <returns vsli:raw="The HTTP request message that was processed.">Le message de requête HTTP qui a été traité.</returns>
    </member>
    <member name="M:System.Net.Http.MessageProcessingHandler.ProcessResponse(System.Net.Http.HttpResponseMessage,System.Threading.CancellationToken)">
      <summary vsli:raw="Perform processing on each response from the server.">Effectuer le traitement sur chaque réponse du serveur.</summary>
      <param name="response" vsli:raw="The HTTP response message to process.">Le message de réponse HTTP à traiter.</param>
      <param name="cancellationToken" vsli:raw="A cancellation token that can be used by other objects or threads to receive notice of cancellation.">Jeton d'annulation qui peut être utilisé par d'autres objets ou threads pour être informés de l'annulation.</param>
      <returns vsli:raw="The HTTP response message that was processed.">Le message de réponse HTTP qui a été traité.</returns>
    </member>
    <member name="M:System.Net.Http.MessageProcessingHandler.Send(System.Net.Http.HttpRequestMessage,System.Threading.CancellationToken)">
      <summary vsli:raw="Sends an HTTP request to the inner handler to send to the server.">Envoie une requête HTTP au gestionnaire interne à envoyer au serveur.</summary>
      <param name="request" vsli:raw="The HTTP request message to send to the server.">Le message de la requête HTTP à envoyer au serveur.</param>
      <param name="cancellationToken" vsli:raw="A cancellation token that can be used by other objects or threads to receive notice of cancellation.">Jeton d'annulation qui peut être utilisé par d'autres objets ou threads pour être informés de l'annulation.</param>
      <returns vsli:raw="The HTTP response message.">Message de réponse HTTP.</returns>
    </member>
    <member name="M:System.Net.Http.MessageProcessingHandler.SendAsync(System.Net.Http.HttpRequestMessage,System.Threading.CancellationToken)">
      <summary vsli:raw="Sends an HTTP request to the inner handler to send to the server as an asynchronous operation.">Envoie une requête HTTP au gestionnaire interne à envoyer au serveur au cours d’une opération asynchrone.</summary>
      <param name="request" vsli:raw="The HTTP request message to send to the server.">Le message de la requête HTTP à envoyer au serveur.</param>
      <param name="cancellationToken" vsli:raw="A cancellation token that can be used by other objects or threads to receive notice of cancellation.">Jeton d'annulation qui peut être utilisé par d'autres objets ou threads pour être informés de l'annulation.</param>
      <exception cref="T:System.ArgumentNullException" vsli:raw="The &lt;paramref name=&quot;request&quot; /&gt; was &lt;see langword=&quot;null&quot; /&gt;.">
        <paramref name="request" /> avait la valeur <see langword="null" />.</exception>
      <returns vsli:raw="The task object representing the asynchronous operation.">Objet de tâche représentant l'opération asynchrone.</returns>
    </member>
    <member name="T:System.Net.Http.MultipartContent">
      <summary vsli:raw="Provides a collection of &lt;see cref=&quot;T:System.Net.Http.HttpContent&quot; /&gt; objects that get serialized using the multipart/* content type specification.">Fournit une collection d'objets <see cref="T:System.Net.Http.HttpContent" /> qui sont sérialisés à l'aide de la spécification de type de contenu multipart/*.</summary>
    </member>
    <member name="M:System.Net.Http.MultipartContent.#ctor">
      <summary vsli:raw="Creates a new instance of the &lt;see cref=&quot;T:System.Net.Http.MultipartContent&quot; /&gt; class.">Crée une instance de la classe <see cref="T:System.Net.Http.MultipartContent" />.</summary>
    </member>
    <member name="M:System.Net.Http.MultipartContent.#ctor(System.String)">
      <summary vsli:raw="Creates a new instance of the &lt;see cref=&quot;T:System.Net.Http.MultipartContent&quot; /&gt; class.">Crée une instance de la classe <see cref="T:System.Net.Http.MultipartContent" />.</summary>
      <param name="subtype" vsli:raw="The subtype of the multipart content.">Sous-type du contenu Multipart.</param>
      <exception cref="T:System.ArgumentException" vsli:raw="The &lt;paramref name=&quot;subtype&quot; /&gt; was &lt;see langword=&quot;null&quot; /&gt; or contains only white space characters.">
        <paramref name="subtype" /> est <see langword="null" /> ou contient uniquement des espaces blancs.</exception>
    </member>
    <member name="M:System.Net.Http.MultipartContent.#ctor(System.String,System.String)">
      <summary vsli:raw="Creates a new instance of the &lt;see cref=&quot;T:System.Net.Http.MultipartContent&quot; /&gt; class.">Crée une instance de la classe <see cref="T:System.Net.Http.MultipartContent" />.</summary>
      <param name="subtype" vsli:raw="The subtype of the multipart content.">Sous-type du contenu en plusieurs parties.</param>
      <param name="boundary" vsli:raw="The boundary string for the multipart content.">Chaîne limite pour le contenu Multipart.</param>
      <exception cref="T:System.ArgumentException" vsli:raw="The &lt;paramref name=&quot;subtype&quot; /&gt; was &lt;see langword=&quot;null&quot; /&gt; or an empty string.  &#xA;  &#xA; The &lt;paramref name=&quot;boundary&quot; /&gt; was &lt;see langword=&quot;null&quot; /&gt; or contains only white space characters.  &#xA;  &#xA; -or-  &#xA;  &#xA; The &lt;paramref name=&quot;boundary&quot; /&gt; ends with a space character.">Le <paramref name="subtype" /> était <see langword="null" /> ou était une chaîne vide.  
  
<paramref name="boundary" /> est <see langword="null" /> ou contient uniquement des espaces blancs.  
  
- ou - 
<paramref name="boundary" /> se termine par un espace.</exception>
      <exception cref="T:System.ArgumentOutOfRangeException" vsli:raw="The length of the &lt;paramref name=&quot;boundary&quot; /&gt; was greater than 70.">La longueur de <paramref name="boundary" /> était supérieure à 70.</exception>
    </member>
    <member name="M:System.Net.Http.MultipartContent.Add(System.Net.Http.HttpContent)">
      <summary vsli:raw="Add multipart HTTP content to a collection of &lt;see cref=&quot;T:System.Net.Http.HttpContent&quot; /&gt; objects that get serialized using the multipart/* content type specification.">Ajoute le contenu multipart HTTP à une collection d'objets de <see cref="T:System.Net.Http.HttpContent" /> qui sont sérialisés à l'aide de la spécification de type de contenu multipart/*</summary>
      <param name="content" vsli:raw="The HTTP content to add to the collection.">Contenu HTTP à ajouter à la collection.</param>
      <exception cref="T:System.ArgumentNullException" vsli:raw="The &lt;paramref name=&quot;content&quot; /&gt; was &lt;see langword=&quot;null&quot; /&gt;.">
        <paramref name="content" /> avait la valeur <see langword="null" />.</exception>
    </member>
    <member name="M:System.Net.Http.MultipartContent.CreateContentReadStream(System.Threading.CancellationToken)">
      <summary vsli:raw="Serializes the HTTP content to a stream using the multipart/* encoding.">Sérialise le contenu HTTP dans un flux en utilisant l’encodage multipart/*.</summary>
      <param name="cancellationToken" vsli:raw="The cancellation token to cancel the operation.">Jeton d’annulation pour annuler l’opération.</param>
      <returns vsli:raw="The HTTP content stream that represents the multipart/* encoded HTTP content.">Flux de contenu HTTP qui représente le contenu HTTP en plusieurs parties/* codé.</returns>
    </member>
    <member name="M:System.Net.Http.MultipartContent.CreateContentReadStreamAsync">
      <summary vsli:raw="Serializes the HTTP content to a stream using the multipart/* encoding as an asynchronous operation.">Sérialise le contenu HTTP dans un flux en utilisant l’encodage multipart/* en tant qu’opération asynchrone.</summary>
      <returns vsli:raw="The task object representing the asynchronous operation.">Objet de tâche représentant l'opération asynchrone.</returns>
    </member>
    <member name="M:System.Net.Http.MultipartContent.CreateContentReadStreamAsync(System.Threading.CancellationToken)">
      <summary vsli:raw="Serializes the HTTP content to a stream using the multipart/* encoding as an asynchronous operation.">Sérialise le contenu HTTP dans un flux en utilisant l’encodage multipart/* en tant qu’opération asynchrone.</summary>
      <param name="cancellationToken" vsli:raw="The cancellation token to cancel the operation.">Jeton d’annulation pour annuler l’opération.</param>
      <returns vsli:raw="The task object representing the asynchronous operation.">Objet de tâche représentant l'opération asynchrone.</returns>
    </member>
    <member name="M:System.Net.Http.MultipartContent.Dispose(System.Boolean)">
      <summary vsli:raw="Releases the unmanaged resources used by the &lt;see cref=&quot;T:System.Net.Http.MultipartContent&quot; /&gt; and optionally disposes of the managed resources.">Libère les ressources non managées utilisées par le <see cref="T:System.Net.Http.MultipartContent" /> et supprime éventuellement les ressources managées.</summary>
      <param name="disposing" vsli:raw="&lt;see langword=&quot;true&quot; /&gt; to release both managed and unmanaged resources; &lt;see langword=&quot;false&quot; /&gt; to releases only unmanaged resources.">
        <see langword="true" /> pour libérer les ressources managées et non managées ; <see langword="false" /> pour libérer uniquement les ressources non managées.</param>
    </member>
    <member name="M:System.Net.Http.MultipartContent.GetEnumerator">
      <summary vsli:raw="Returns an enumerator that iterates through the collection of &lt;see cref=&quot;T:System.Net.Http.HttpContent&quot; /&gt; objects that get serialized using the multipart/* content type specification.">Retourne un énumérateur qui itère dans la collection d’objets <see cref="T:System.Net.Http.HttpContent" /> qui sont sérialisés à l’aide de la spécification du type de contenu multipart/*.</summary>
      <returns vsli:raw="An object that can be used to iterate through the collection.">Objet pouvant être utilisé pour itérer au sein de la collection.</returns>
    </member>
    <member name="M:System.Net.Http.MultipartContent.SerializeToStream(System.IO.Stream,System.Net.TransportContext,System.Threading.CancellationToken)">
      <summary vsli:raw="Serializes the multipart HTTP content to a stream.">Sérialise le contenu HTTP en plusieurs parties dans un flux.</summary>
      <param name="stream" vsli:raw="The target stream.">Le flux de données cible.</param>
      <param name="context" vsli:raw="Information about the transport (for example, the channel binding token). This parameter may be &lt;see langword=&quot;null&quot; /&gt;.">Informations relatives au transport (par exemple, jeton de liaison de canal). Ce paramètre peut avoir la valeur <see langword="null" />.</param>
      <param name="cancellationToken" vsli:raw="The cancellation token to cancel the operation.">Jeton d’annulation pour annuler l’opération.</param>
    </member>
    <member name="M:System.Net.Http.MultipartContent.SerializeToStreamAsync(System.IO.Stream,System.Net.TransportContext)">
      <summary vsli:raw="Serialize the multipart HTTP content to a stream as an asynchronous operation.">Sérialise le contenu HTTP en plusieurs parties dans un flux en tant qu’opération asynchrone.</summary>
      <param name="stream" vsli:raw="The target stream.">Le flux de données cible.</param>
      <param name="context" vsli:raw="Information about the transport (channel binding token, for example). This parameter may be &lt;see langword=&quot;null&quot; /&gt;.">Informations relatives au transport (jeton de liaison de canal, par exemple). Ce paramètre peut avoir la valeur <see langword="null" />.</param>
      <returns vsli:raw="The task object representing the asynchronous operation.">Objet de tâche représentant l'opération asynchrone.</returns>
    </member>
    <member name="M:System.Net.Http.MultipartContent.SerializeToStreamAsync(System.IO.Stream,System.Net.TransportContext,System.Threading.CancellationToken)">
      <summary vsli:raw="Serialize the multipart HTTP content to a stream as an asynchronous operation.">Sérialise le contenu HTTP en plusieurs parties dans un flux en tant qu’opération asynchrone.</summary>
      <param name="stream" vsli:raw="The target stream.">Le flux de données cible.</param>
      <param name="context" vsli:raw="Information about the transport (channel binding token, for example). This parameter may be &lt;see langword=&quot;null&quot; /&gt;.">Informations relatives au transport (jeton de liaison de canal, par exemple). Ce paramètre peut avoir la valeur <see langword="null" />.</param>
      <param name="cancellationToken" vsli:raw="The cancellation token to cancel the operation.">Jeton d’annulation pour annuler l’opération.</param>
      <returns vsli:raw="The task object representing the asynchronous operation.">Objet de tâche représentant l'opération asynchrone.</returns>
    </member>
    <member name="M:System.Net.Http.MultipartContent.System#Collections#IEnumerable#GetEnumerator">
      <summary vsli:raw="The explicit implementation of the &lt;see cref=&quot;M:System.Net.Http.MultipartContent.GetEnumerator&quot; /&gt; method.">L’implémentation explicite de la méthode <see cref="M:System.Net.Http.MultipartContent.GetEnumerator" />.</summary>
      <returns vsli:raw="An object that can be used to iterate through the collection.">Objet pouvant être utilisé pour itérer au sein de la collection.</returns>
    </member>
    <member name="M:System.Net.Http.MultipartContent.TryComputeLength(System.Int64@)">
      <summary vsli:raw="Determines whether the HTTP multipart content has a valid length in bytes.">Détermine si le contenu HTTP en plusieurs parties a une longueur valide en octets.</summary>
      <param name="length" vsli:raw="The length in bytes of the HTTP content.">La longueur en octets du contenu HTTP.</param>
      <returns vsli:raw="&lt;see langword=&quot;true&quot; /&gt; if &lt;paramref name=&quot;length&quot; /&gt; is a valid length; otherwise, &lt;see langword=&quot;false&quot; /&gt;.">
        <see langword="true" /> si <paramref name="length" /> est une longueur valide ; sinon, <see langword="false" />.</returns>
    </member>
    <member name="P:System.Net.Http.MultipartContent.HeaderEncodingSelector">
      <summary vsli:raw="Gets or sets a callback that decode response header values.">Obtient ou définit un rappel qui décode les valeurs des en-têtes de réponse.</summary>
      <returns vsli:raw="The header encoding selector callback to decode the value for the specified response header name, or &lt;see langword=&quot;null&quot; /&gt; to indicate the default behavior.">Rappel du sélecteur d’encodage d’en-tête permettant de décoder la valeur du nom d’en-tête de réponse spécifié ou <see langword="null" /> d’indiquer le comportement par défaut.</returns>
    </member>
    <member name="T:System.Net.Http.MultipartFormDataContent">
      <summary vsli:raw="Provides a container for content encoded using multipart/form-data MIME type.">Fournit un conteneur pour le contenu codé à l'aide du type MIME multipart/form-data.</summary>
    </member>
    <member name="M:System.Net.Http.MultipartFormDataContent.#ctor">
      <summary vsli:raw="Creates a new instance of the &lt;see cref=&quot;T:System.Net.Http.MultipartFormDataContent&quot; /&gt; class.">Crée une instance de la classe <see cref="T:System.Net.Http.MultipartFormDataContent" />.</summary>
    </member>
    <member name="M:System.Net.Http.MultipartFormDataContent.#ctor(System.String)">
      <summary vsli:raw="Creates a new instance of the &lt;see cref=&quot;T:System.Net.Http.MultipartFormDataContent&quot; /&gt; class.">Crée une instance de la classe <see cref="T:System.Net.Http.MultipartFormDataContent" />.</summary>
      <param name="boundary" vsli:raw="The boundary string for the multipart form data content.">Chaîne limite pour le contenu multipart/form-data.</param>
      <exception cref="T:System.ArgumentException" vsli:raw="The &lt;paramref name=&quot;boundary&quot; /&gt; was &lt;see langword=&quot;null&quot; /&gt; or contains only white space characters.  &#xA;  &#xA; -or-  &#xA;  &#xA; The &lt;paramref name=&quot;boundary&quot; /&gt; ends with a space character.">La <paramref name="boundary" /> a la valeur <see langword="null" /> ou ne contient que des espaces blancs.  
  
- ou - 
<paramref name="boundary" /> se termine par un espace.</exception>
      <exception cref="T:System.ArgumentOutOfRangeException" vsli:raw="The length of the &lt;paramref name=&quot;boundary&quot; /&gt; was greater than 70.">La longueur de la <paramref name="boundary" /> est supérieure à 70.</exception>
    </member>
    <member name="M:System.Net.Http.MultipartFormDataContent.Add(System.Net.Http.HttpContent)">
      <summary vsli:raw="Add HTTP content to a collection of &lt;see cref=&quot;T:System.Net.Http.HttpContent&quot; /&gt; objects that get serialized to multipart/form-data MIME type.">Ajoute le contenu HTTP à une collection d'objets <see cref="T:System.Net.Http.HttpContent" /> qui sont sérialisés au type MIME multipart/form-data.</summary>
      <param name="content" vsli:raw="The HTTP content to add to the collection.">Contenu HTTP à ajouter à la collection.</param>
      <exception cref="T:System.ArgumentNullException" vsli:raw="The &lt;paramref name=&quot;content&quot; /&gt; was &lt;see langword=&quot;null&quot; /&gt;.">
        <paramref name="content" /> avait la valeur <see langword="null" />.</exception>
    </member>
    <member name="M:System.Net.Http.MultipartFormDataContent.Add(System.Net.Http.HttpContent,System.String)">
      <summary vsli:raw="Add HTTP content to a collection of &lt;see cref=&quot;T:System.Net.Http.HttpContent&quot; /&gt; objects that get serialized to multipart/form-data MIME type.">Ajoute le contenu HTTP à une collection d'objets <see cref="T:System.Net.Http.HttpContent" /> qui sont sérialisés au type MIME multipart/form-data.</summary>
      <param name="content" vsli:raw="The HTTP content to add to the collection.">Contenu HTTP à ajouter à la collection.</param>
      <param name="name" vsli:raw="The name for the HTTP content to add.">Nom du contenu HTTP à ajouter.</param>
      <exception cref="T:System.ArgumentException" vsli:raw="The &lt;paramref name=&quot;name&quot; /&gt; was &lt;see langword=&quot;null&quot; /&gt; or contains only white space characters.">La <paramref name="name" /> a la valeur <see langword="null" /> ou ne contient que des espaces blancs.</exception>
      <exception cref="T:System.ArgumentNullException" vsli:raw="The &lt;paramref name=&quot;content&quot; /&gt; was &lt;see langword=&quot;null&quot; /&gt;.">
        <paramref name="content" /> avait la valeur <see langword="null" />.</exception>
    </member>
    <member name="M:System.Net.Http.MultipartFormDataContent.Add(System.Net.Http.HttpContent,System.String,System.String)">
      <summary vsli:raw="Add HTTP content to a collection of &lt;see cref=&quot;T:System.Net.Http.HttpContent&quot; /&gt; objects that get serialized to multipart/form-data MIME type.">Ajoute le contenu HTTP à une collection d'objets <see cref="T:System.Net.Http.HttpContent" /> qui sont sérialisés au type MIME multipart/form-data.</summary>
      <param name="content" vsli:raw="The HTTP content to add to the collection.">Contenu HTTP à ajouter à la collection.</param>
      <param name="name" vsli:raw="The name for the HTTP content to add.">Nom du contenu HTTP à ajouter.</param>
      <param name="fileName" vsli:raw="The file name for the HTTP content to add to the collection.">Nom de fichier du contenu HTTP à ajouter à la collection.</param>
      <exception cref="T:System.ArgumentException" vsli:raw="The &lt;paramref name=&quot;name&quot; /&gt; was &lt;see langword=&quot;null&quot; /&gt; or contains only white space characters.  &#xA;  &#xA; -or-  &#xA;  &#xA; The &lt;paramref name=&quot;fileName&quot; /&gt; was &lt;see langword=&quot;null&quot; /&gt; or contains only white space characters.">La <paramref name="name" /> a la valeur <see langword="null" /> ou ne contient que des espaces blancs.  
  
- ou - 
La <paramref name="fileName" /> a la valeur <see langword="null" /> ou ne contient que des espaces blancs.</exception>
      <exception cref="T:System.ArgumentNullException" vsli:raw="The &lt;paramref name=&quot;content&quot; /&gt; was &lt;see langword=&quot;null&quot; /&gt;.">
        <paramref name="content" /> avait la valeur <see langword="null" />.</exception>
    </member>
    <member name="M:System.Net.Http.MultipartFormDataContent.SerializeToStreamAsync(System.IO.Stream,System.Net.TransportContext,System.Threading.CancellationToken)">
      <summary vsli:raw="Serialize and write the content provided in the constructor to an HTTP content stream as an asynchronous operation.">Sérialise et écrit le contenu fourni dans le constructeur sur un flux de contenu HTTP au cours d’une opération asynchrone.</summary>
      <param name="stream" vsli:raw="The target stream.">Le flux de données cible.</param>
      <param name="context" vsli:raw="Information about the transport, like channel binding token. This parameter may be &lt;see langword=&quot;null&quot; /&gt;.">Informations relatives au transport, comme un jeton de liaison de canal. Ce paramètre peut avoir la valeur <see langword="null" />.</param>
      <param name="cancellationToken" vsli:raw="The cancellation token to cancel the operation.">Jeton d’annulation pour annuler l’opération.</param>
      <returns vsli:raw="The task object representing the asynchronous operation.">Objet de tâche représentant l'opération asynchrone.</returns>
    </member>
    <member name="T:System.Net.Http.ReadOnlyMemoryContent">
      <summary vsli:raw="Provides HTTP content based on a &lt;see cref=&quot;T:System.ReadOnlyMemory`1&quot; /&gt;.">Fournit du contenu HTTP basé sur un <see cref="T:System.ReadOnlyMemory`1" />.</summary>
    </member>
    <member name="M:System.Net.Http.ReadOnlyMemoryContent.#ctor(System.ReadOnlyMemory{System.Byte})">
      <summary vsli:raw="Initializes a new instance of the &lt;see cref=&quot;T:System.Net.Http.ReadOnlyMemoryContent&quot; /&gt; class.">Initialise une nouvelle instance de la classe <see cref="T:System.Net.Http.ReadOnlyMemoryContent" />.</summary>
      <param name="content" vsli:raw="The content used to initialize the &lt;see cref=&quot;T:System.Net.Http.ReadOnlyMemoryContent&quot; /&gt;.">Contenu utilisé pour initialiser <see cref="T:System.Net.Http.ReadOnlyMemoryContent" />.</param>
    </member>
    <member name="T:System.Net.Http.SocketsHttpConnectionContext">
      <summary vsli:raw="Represents the context passed to the &lt;see cref=&quot;P:System.Net.Http.SocketsHttpHandler.ConnectCallback&quot; /&gt; for a &lt;see cref=&quot;T:System.Net.Http.SocketsHttpHandler&quot; /&gt; instance. .">Représente le contexte passé à <see cref="P:System.Net.Http.SocketsHttpHandler.ConnectCallback" /> pour une instance <see cref="T:System.Net.Http.SocketsHttpHandler" />. .</summary>
    </member>
    <member name="P:System.Net.Http.SocketsHttpConnectionContext.DnsEndPoint">
      <summary vsli:raw="Gets the DNS endpoint to be used by the &lt;see cref=&quot;P:System.Net.Http.SocketsHttpHandler.ConnectCallback&quot; /&gt; to establish the connection.">Récupère le point de terminaison DNS qui sera utilisé par <see cref="P:System.Net.Http.SocketsHttpHandler.ConnectCallback" /> pour établir la connexion.</summary>
    </member>
    <member name="P:System.Net.Http.SocketsHttpConnectionContext.InitialRequestMessage">
      <summary vsli:raw="Gets the initial HttpRequestMessage that is causing the connection to be created.">Obtient le message de requête HTTP initial qui entraîne la création de la connexion.</summary>
      <returns vsli:raw="The request message that's causing the connection to be created.">Message de demande à l’origine de la création de la connexion.</returns>
    </member>
    <member name="T:System.Net.Http.SocketsHttpHandler">
      <summary vsli:raw="Provides the default message handler used by &lt;see cref=&quot;T:System.Net.Http.HttpClient&quot; /&gt; in .NET Core 2.1 and later.">Fournit le Gestionnaire de messages par défaut utilisé par <see cref="T:System.Net.Http.HttpClient" /> dans .NET Core 2.1 et ultérieur.</summary>
    </member>
    <member name="M:System.Net.Http.SocketsHttpHandler.#ctor">
      <summary vsli:raw="Creates an instance of a &lt;see cref=&quot;T:System.Net.Http.SocketsHttpHandler&quot; /&gt; class.">Crée une instance d’une classe <see cref="T:System.Net.Http.SocketsHttpHandler" />.</summary>
    </member>
    <member name="P:System.Net.Http.SocketsHttpHandler.AllowAutoRedirect">
      <summary vsli:raw="Gets or sets a value that indicates whether the handler should follow redirection responses.">Obtient ou définit une valeur qui indique si le gestionnaire doit suivre les réponses de redirection.</summary>
      <returns vsli:raw="&lt;see langword=&quot;true&quot; /&gt; if the handler should follow redirection responses; otherwise &lt;see langword=&quot;false&quot; /&gt;. The default value is &lt;see langword=&quot;true&quot; /&gt;.">
        <see langword="true" /> Si le gestionnaire doit suivre les réponses de redirection ; Sinon, <see langword="false" /> . La valeur par défaut est <see langword="true" />.</returns>
    </member>
    <member name="P:System.Net.Http.SocketsHttpHandler.AutomaticDecompression">
      <summary vsli:raw="Gets or sets the type of decompression method used by the handler for automatic decompression of the HTTP content response.">Obtient ou définit le type de méthode de décompression utilisé par le gestionnaire pour la décompression automatique de la réponse du contenu HTTP.</summary>
      <returns vsli:raw="The type of decompression method used by the handler for automatic decompression of the HTTP content response.">Type de méthode de décompression utilisé par le gestionnaire pour la décompression automatique de la réponse de contenu HTTP.</returns>
    </member>
    <member name="P:System.Net.Http.SocketsHttpHandler.ConnectCallback">
      <summary vsli:raw="Gets or sets a custom callback used to open new connections.">Obtient ou définit un rappel personnalisé utilisé pour ouvrir de nouvelles connexions.</summary>
      <returns vsli:raw="A callback method to create a stream.">Méthode de rappel permettant de créer un flux.</returns>
    </member>
    <member name="P:System.Net.Http.SocketsHttpHandler.ConnectTimeout">
      <summary vsli:raw="Gets or sets the timespan to wait before the connection establishing times out.">Obtient ou définit la période d'attente jusqu'à l'expiration de l’établissement de la connexion.</summary>
      <returns vsli:raw="The timespan to wait before the connection establishing times out. The default value is &lt;see cref=&quot;F:System.Threading.Timeout.InfiniteTimeSpan&quot; /&gt;.">Intervalle de temps à attendre avant la fin de l’établissement de la connexion. La valeur par défaut est <see cref="F:System.Threading.Timeout.InfiniteTimeSpan" /> .</returns>
    </member>
    <member name="P:System.Net.Http.SocketsHttpHandler.CookieContainer">
      <summary vsli:raw="Gets or sets the managed cookie container object.">Obtient ou définit l’objet conteneur de cookie managé.</summary>
      <returns vsli:raw="The managed cookie container object.">Objet conteneur de cookies managés.</returns>
    </member>
    <member name="P:System.Net.Http.SocketsHttpHandler.Credentials">
      <summary vsli:raw="Gets or sets authentication information used by this handler.">Obtient ou définit les informations d’authentification utilisées par ce gestionnaire.</summary>
      <returns vsli:raw="The authentication credentials associated with the handler. The default value is &lt;see langword=&quot;null&quot; /&gt;.">Informations d’identification d’authentification associées au gestionnaire. La valeur par défaut est <see langword="null" />.</returns>
    </member>
    <member name="P:System.Net.Http.SocketsHttpHandler.DefaultProxyCredentials">
      <summary vsli:raw="When the default (system) proxy is used, gets or sets the credentials used to submit to the default proxy server for authentication.">Quand le proxy par défaut (système) est utilisé, obtient ou définit les informations d’identification utilisées pour envoyer au serveur proxy par défaut pour l’authentification.</summary>
      <returns vsli:raw="The credentials used to authenticate the user to an authenticating proxy.">Informations d’identification utilisées pour authentifier l’utilisateur auprès d’un proxy d’authentification.</returns>
    </member>
    <member name="P:System.Net.Http.SocketsHttpHandler.EnableMultipleHttp2Connections">
      <summary vsli:raw="Gets or sets a value that indicates whether additional HTTP/2 connections can be established to the same server when the maximum number of concurrent streams is reached on all existing connections.">Obtient ou définit une valeur qui indique si des connexions HTTP/2 supplémentaires peuvent être établies sur le même serveur lorsque le nombre maximal de flux simultanés est atteint sur toutes les connexions existantes.</summary>
      <returns vsli:raw="&lt;see langword=&quot;true&quot; /&gt; if additional HTTP/2 connections are allowed to be created; otherwise, &lt;see langword=&quot;false&quot; /&gt;.">
        <see langword="true" /> Si des connexions HTTP/2 supplémentaires sont autorisées à être créées ; Sinon, <see langword="false" /> .</returns>
    </member>
    <member name="P:System.Net.Http.SocketsHttpHandler.Expect100ContinueTimeout">
      <summary vsli:raw="Gets or sets the time-out value for server HTTP 100 Continue response.">Obtient ou définit la valeur du délai d'expiration pour la réponse Continuer HTTP 100 du serveur.</summary>
      <returns vsli:raw="The timespan to wait for the HTTP 100 Continue. The default value is 1 second.">Intervalle de temps d’attente pour le HTTP 100 continue. La valeur par défaut est de 1 seconde.</returns>
    </member>
    <member name="P:System.Net.Http.SocketsHttpHandler.IsSupported">
      <summary vsli:raw="Gets a value that indicates whether the handler is supported on the current platform.">Obtient une valeur qui indique si le gestionnaire spécifié est pris en charge sur la plateforme actuelle.</summary>
      <returns vsli:raw="&lt;see langword=&quot;true&quot; /&gt; if the handler is supported; otherwise, &lt;see langword=&quot;false&quot; /&gt;.">
        <see langword="true" /> Si le gestionnaire est pris en charge ; Sinon, <see langword="false" /> .</returns>
    </member>
    <member name="P:System.Net.Http.SocketsHttpHandler.KeepAlivePingDelay">
      <summary vsli:raw="Gets or sets the keep alive ping delay.">Obtient ou définit le délai des requêtes ping de maintien de l’activité.</summary>
      <returns vsli:raw="The keep alive ping delay. Defaults to &lt;see cref=&quot;F:System.Threading.Timeout.InfiniteTimeSpan&quot; /&gt;.">Délai d’attente de la commande Keep Alive. La valeur par défaut est <see cref="F:System.Threading.Timeout.InfiniteTimeSpan" />.</returns>
    </member>
    <member name="P:System.Net.Http.SocketsHttpHandler.KeepAlivePingPolicy">
      <summary vsli:raw="Gets or sets the keep alive ping behaviour.">Obtient ou définit le comportement des requêtes ping de maintien de l’activité.</summary>
      <returns vsli:raw="The keep alive ping behaviour.">Comportement du ping Keep Alive.</returns>
    </member>
    <member name="P:System.Net.Http.SocketsHttpHandler.KeepAlivePingTimeout">
      <summary vsli:raw="Gets or sets the keep alive ping timeout.">Obtient ou définit le délai d’expiration des requêtes ping de maintien de l’activité.</summary>
      <returns vsli:raw="The keep alive ping timeout. Defaults to 20 seconds.">Délai d’attente de la commande Keep Alive. La valeur par défaut est 20 secondes.</returns>
    </member>
    <member name="P:System.Net.Http.SocketsHttpHandler.MaxAutomaticRedirections">
      <summary vsli:raw="Gets or sets the maximum number of allowed HTTP redirects.">Obtient ou définit le nombre maximal de redirections HTTP autorisées.</summary>
      <returns vsli:raw="The maximum number of allowed HTTP redirects.">Nombre maximal de redirections HTTP autorisées.</returns>
    </member>
    <member name="P:System.Net.Http.SocketsHttpHandler.MaxConnectionsPerServer">
      <summary vsli:raw="Gets or sets the maximum number of simultaneous TCP connections allowed to a single server.">Obtient ou définit le nombre maximal de connexions TCP simultanées autorisées à un seul serveur.</summary>
      <returns vsli:raw="The maximum number of simultaneous TCP connections allowed to a single server.">Le nombre maximal de connexions TCP simultanées autorisées à un seul serveur.</returns>
    </member>
    <member name="P:System.Net.Http.SocketsHttpHandler.MaxResponseDrainSize">
      <summary vsli:raw="Gets or sets the maximum amount of data that can be drained from responses in bytes.">Obtient ou définit la quantité maximale de données qui peuvent être purgées à partir des réponses en octets.</summary>
      <returns vsli:raw="The maximum amount of data that can be drained from responses in bytes.">Quantité maximale de données qui peuvent être vidées des réponses en octets.</returns>
    </member>
    <member name="P:System.Net.Http.SocketsHttpHandler.MaxResponseHeadersLength">
      <summary vsli:raw="Gets or sets the maximum length, in kilobytes (1024 bytes), of the response headers.">Obtient ou définit la longueur maximale en kilo-octets (1024 octets) des en-têtes de réponse.</summary>
      <returns vsli:raw="The maximum size of the header portion from the server response, in kilobytes.">Taille maximale de la partie d’en-tête de la réponse du serveur, en kilo-octets.</returns>
    </member>
    <member name="P:System.Net.Http.SocketsHttpHandler.PlaintextStreamFilter">
      <summary vsli:raw="Gets or sets a custom callback that provides access to the plaintext HTTP protocol stream.">Récupère ou définit un rappel personnalisé qui donne accès au flux du protocole HTTP en clair.</summary>
      <returns vsli:raw="A callback that provides access to the plaintext HTTP protocol stream.">Rappel qui fournit l’accès au flux de protocole HTTP en texte clair.</returns>
    </member>
    <member name="P:System.Net.Http.SocketsHttpHandler.PooledConnectionIdleTimeout">
      <summary vsli:raw="Gets or sets how long a connection can be idle in the pool to be considered reusable.">Obtient ou définit la durée pendant laquelle une connexion peut être inactive dans le pool pour être considérée réutilisable.</summary>
      <exception cref="T:System.ArgumentOutOfRangeException" vsli:raw="The value specified is less than &lt;see cref=&quot;F:System.TimeSpan.Zero&quot; /&gt; (except &lt;see cref=&quot;F:System.Threading.Timeout.InfiniteTimeSpan&quot; /&gt;).">La valeur spécifiée est inférieure à <see cref="F:System.TimeSpan.Zero" /> ou est égale à <see cref="F:System.Threading.Timeout.InfiniteTimeSpan" />.</exception>
      <returns vsli:raw="The maximum idle time for a connection in the pool. The default value for this property is 1 minute in .NET 6 and later versions; the default value is 2 minutes in .NET Core and .NET 5">Durée d’inactivité maximale pour une connexion dans le pool. La valeur par défaut de cette propriété est 2 minutes.</returns>
    </member>
    <member name="P:System.Net.Http.SocketsHttpHandler.PooledConnectionLifetime">
      <summary vsli:raw="Gets or sets how long a connection can be in the pool to be considered reusable.">Obtient ou définit la durée pendant laquelle une connexion peut être dans le pool pour être considérée comme réutilisable.</summary>
      <exception cref="T:System.ArgumentOutOfRangeException" vsli:raw="The value specified is less than &lt;see cref=&quot;F:System.TimeSpan.Zero&quot; /&gt; or is equal to &lt;see cref=&quot;F:System.Threading.Timeout.InfiniteTimeSpan&quot; /&gt;.">La valeur spécifiée est inférieure à <see cref="F:System.TimeSpan.Zero" /> ou est égale à <see cref="F:System.Threading.Timeout.InfiniteTimeSpan" />.</exception>
      <returns vsli:raw="The maximum time for a connection to be in the pool. The default value for this property is &lt;see cref=&quot;F:System.Threading.Timeout.InfiniteTimeSpan&quot; /&gt;.">Durée maximale d’une connexion dans le pool. La valeur par défaut de cette propriété est <see cref="F:System.Threading.Timeout.InfiniteTimeSpan" />.</returns>
    </member>
    <member name="P:System.Net.Http.SocketsHttpHandler.PreAuthenticate">
      <summary vsli:raw="Gets or sets a value that indicates whether the handler sends an Authorization header with the request.">Obtient ou définit une valeur indiquant si le gestionnaire envoie un en-tête d’autorisation avec la requête.</summary>
      <returns vsli:raw="&lt;see langword=&quot;true&quot; /&gt; if the handler sends an Authorization header with the request; otherwise, &lt;see langword=&quot;false&quot; /&gt;.">
        <see langword="true" /> Si le gestionnaire envoie un en-tête d’autorisation avec la demande ; Sinon, <see langword="false" /> .</returns>
    </member>
    <member name="P:System.Net.Http.SocketsHttpHandler.Properties" />
    <member name="P:System.Net.Http.SocketsHttpHandler.Proxy">
      <summary vsli:raw="Gets or sets the custom proxy when the &lt;see cref=&quot;P:System.Net.Http.SocketsHttpHandler.UseProxy&quot; /&gt; property is &lt;see langword=&quot;true&quot; /&gt;.">Récupère ou définit le proxy personnalisé quand la propriété <see cref="P:System.Net.Http.SocketsHttpHandler.UseProxy" /> a la valeur <see langword="true" />.</summary>
      <returns vsli:raw="The custom proxy.">Proxy personnalisé.</returns>
    </member>
    <member name="P:System.Net.Http.SocketsHttpHandler.RequestHeaderEncodingSelector">
      <summary vsli:raw="Gets or sets a callback that selects the &lt;see cref=&quot;System.Text.Encoding&quot; /&gt; to encode request header values.">Obtient ou définit un rappel qui décode les valeurs des en-têtes de demande.</summary>
      <returns vsli:raw="The header encoding selector callback that selects the &lt;see cref=&quot;System.Text.Encoding&quot; /&gt; to encode the value for the specified request header name, or &lt;see langword=&quot;null&quot; /&gt; to indicate the default behavior.">Rappel du sélecteur d’encodage d’en-tête permettant de décoder la valeur du nom d’en-tête de réponse spécifié ou <see langword="null" /> d’indiquer le comportement par défaut.</returns>
    </member>
    <member name="P:System.Net.Http.SocketsHttpHandler.ResponseDrainTimeout">
      <summary vsli:raw="Gets or sets the timespan to wait for data to be drained from responses.">Obtient ou définit le laps de temps d’attente avant que des données ne soient drainées des réponses.</summary>
      <returns vsli:raw="The timespan to wait for data to be drained from responses.">Intervalle de temps à attendre pour que les données soient vidées des réponses.</returns>
    </member>
    <member name="P:System.Net.Http.SocketsHttpHandler.ResponseHeaderEncodingSelector">
      <summary vsli:raw="Gets or sets a callback that selects the &lt;see cref=&quot;System.Text.Encoding&quot; /&gt; to decode response header values.">Obtient ou définit un rappel qui décode les valeurs des en-têtes de réponse.</summary>
      <returns vsli:raw="The header encoding selector callback that selects the &lt;see cref=&quot;System.Text.Encoding&quot; /&gt; to decode the value for the specified response header name, or &lt;see langword=&quot;null&quot; /&gt; to indicate the default behavior.">Rappel du sélecteur d’encodage d’en-tête permettant de décoder la valeur du nom d’en-tête de réponse spécifié ou <see langword="null" /> d’indiquer le comportement par défaut.</returns>
    </member>
    <member name="P:System.Net.Http.SocketsHttpHandler.SslOptions">
      <summary vsli:raw="Gets or sets the set of options used for client TLS authentication.">Obtient ou définit le jeu d’options utilisé pour l’authentification TLS du client.</summary>
      <returns vsli:raw="The set of options used for client TLS authentication.">Ensemble d’options utilisé pour l’authentification TLS du client.</returns>
    </member>
    <member name="P:System.Net.Http.SocketsHttpHandler.UseCookies">
      <summary vsli:raw="Gets or sets a value that indicates whether the handler should use cookies.">Obtient ou définit une valeur qui indique si le gestionnaire doit utiliser des cookies.</summary>
      <returns vsli:raw="A value that indicates whether the handler should use cookies.">Valeur qui indique si le gestionnaire doit utiliser des cookies.</returns>
    </member>
    <member name="P:System.Net.Http.SocketsHttpHandler.UseProxy">
      <summary vsli:raw="Gets or sets a value that indicates whether the handler should use a proxy.">Obtient ou définit une valeur qui indique si le gestionnaire doit utiliser un proxy.</summary>
      <returns vsli:raw="A value that indicates whether the handler should use a proxy.">Valeur qui indique si le gestionnaire doit utiliser un proxy.</returns>
    </member>
    <member name="T:System.Net.Http.SocketsHttpPlaintextStreamFilterContext">
      <summary vsli:raw="Represents the context passed to the PlaintextStreamFilter for a SocketsHttpHandler instance.">Représente le contexte passé à PlaintextStreamFilter pour une instance SocketsHttpHandler.</summary>
    </member>
    <member name="P:System.Net.Http.SocketsHttpPlaintextStreamFilterContext.InitialRequestMessage">
      <summary vsli:raw="Gets the initial HttpRequestMessage that is causing the stream to be used.">Obtient le message de requête HTTP initial qui entraîne l’utilisation du flux.</summary>
      <returns vsli:raw="The HTTP request message that is causing the stream to be used.">Le message de requête HTTP qui est à l’origine de l’utilisation du flux.</returns>
    </member>
    <member name="P:System.Net.Http.SocketsHttpPlaintextStreamFilterContext.NegotiatedHttpVersion">
      <summary vsli:raw="Gets the version of HTTP in use for this stream.">Obtient la version de HTTP utilisée pour ce flux.</summary>
      <returns vsli:raw="The version of HTTP in use for this stream.">Version de HTTP en cours d’utilisation pour ce flux.</returns>
    </member>
    <member name="P:System.Net.Http.SocketsHttpPlaintextStreamFilterContext.PlaintextStream">
      <summary vsli:raw="Gets the plaintext Stream that will be used for HTTP protocol requests and responses.">Obtient le flux de texte brut qui sera utilisé pour les requêtes et les réponses de protocole HTTP.</summary>
      <returns vsli:raw="The plaintext stream that will be used for HTTP protocol requests and responses.">Flux de texte en clair qui sera utilisé pour les requêtes et les réponses de protocole HTTP.</returns>
    </member>
    <member name="T:System.Net.Http.StreamContent">
      <summary vsli:raw="Provides HTTP content based on a stream.">Fournit du contenu HTTP basé sur un flux.</summary>
    </member>
    <member name="M:System.Net.Http.StreamContent.#ctor(System.IO.Stream)">
      <summary vsli:raw="Creates a new instance of the &lt;see cref=&quot;T:System.Net.Http.StreamContent&quot; /&gt; class.">Crée une instance de la classe <see cref="T:System.Net.Http.StreamContent" />.</summary>
      <param name="content" vsli:raw="The content used to initialize the &lt;see cref=&quot;T:System.Net.Http.StreamContent&quot; /&gt;.">Contenu utilisé pour initialiser <see cref="T:System.Net.Http.StreamContent" />.</param>
    </member>
    <member name="M:System.Net.Http.StreamContent.#ctor(System.IO.Stream,System.Int32)">
      <summary vsli:raw="Creates a new instance of the &lt;see cref=&quot;T:System.Net.Http.StreamContent&quot; /&gt; class.">Crée une instance de la classe <see cref="T:System.Net.Http.StreamContent" />.</summary>
      <param name="content" vsli:raw="The content used to initialize the &lt;see cref=&quot;T:System.Net.Http.StreamContent&quot; /&gt;.">Contenu utilisé pour initialiser <see cref="T:System.Net.Http.StreamContent" />.</param>
      <param name="bufferSize" vsli:raw="The size, in bytes, of the buffer for the &lt;see cref=&quot;T:System.Net.Http.StreamContent&quot; /&gt;.">Taille, en octets, de la mémoire tampon disponible pour <see cref="T:System.Net.Http.StreamContent" />.</param>
      <exception cref="T:System.ArgumentNullException" vsli:raw="The &lt;paramref name=&quot;content&quot; /&gt; was &lt;see langword=&quot;null&quot; /&gt;.">
        <paramref name="content" /> avait la valeur <see langword="null" />.</exception>
      <exception cref="T:System.ArgumentOutOfRangeException" vsli:raw="The &lt;paramref name=&quot;bufferSize&quot; /&gt; was less than or equal to zero.">
        <paramref name="bufferSize" /> était inférieur ou égal à zéro.</exception>
    </member>
    <member name="M:System.Net.Http.StreamContent.CreateContentReadStream(System.Threading.CancellationToken)">
      <summary vsli:raw="Returns the HTTP stream as a read-only stream.">Retourne le flux HTTP sous forme de flux en lecture seule.</summary>
      <param name="cancellationToken" vsli:raw="The cancellation token to cancel the operation.">Jeton d’annulation pour annuler l’opération.</param>
      <returns vsli:raw="The HTTP content stream.">Flux de contenu HTTP.</returns>
    </member>
    <member name="M:System.Net.Http.StreamContent.CreateContentReadStreamAsync">
      <summary vsli:raw="Returns the HTTP stream as a read-only stream as an asynchronous operation.">Retourne le flux HTTP dans un flux en lecture seule en tant qu’opération asynchrone.</summary>
      <returns vsli:raw="The task object representing the asynchronous operation.">Objet de tâche représentant l'opération asynchrone.</returns>
    </member>
    <member name="M:System.Net.Http.StreamContent.Dispose(System.Boolean)">
      <summary vsli:raw="Releases the unmanaged resources used by the &lt;see cref=&quot;T:System.Net.Http.StreamContent&quot; /&gt; and optionally disposes of the managed resources.">Libère les ressources non managées utilisées par le <see cref="T:System.Net.Http.StreamContent" /> et supprime éventuellement les ressources managées.</summary>
      <param name="disposing" vsli:raw="&lt;see langword=&quot;true&quot; /&gt; to release both managed and unmanaged resources; &lt;see langword=&quot;false&quot; /&gt; to releases only unmanaged resources.">
        <see langword="true" /> pour libérer les ressources managées et non managées ; <see langword="false" /> pour libérer uniquement les ressources non managées.</param>
    </member>
    <member name="M:System.Net.Http.StreamContent.SerializeToStream(System.IO.Stream,System.Net.TransportContext,System.Threading.CancellationToken)">
      <summary vsli:raw="Serializes the multipart HTTP content to a stream.">Sérialise le contenu HTTP en plusieurs parties dans un flux.</summary>
      <param name="stream" vsli:raw="The target stream.">Le flux de données cible.</param>
      <param name="context" vsli:raw="Information about the transport (for example, the channel binding token). This parameter may be &lt;see langword=&quot;null&quot; /&gt;.">Informations relatives au transport (par exemple, jeton de liaison de canal). Ce paramètre peut avoir la valeur <see langword="null" />.</param>
      <param name="cancellationToken" vsli:raw="The cancellation token to cancel the operation.">Jeton d’annulation pour annuler l’opération.</param>
    </member>
    <member name="M:System.Net.Http.StreamContent.SerializeToStreamAsync(System.IO.Stream,System.Net.TransportContext)">
      <summary vsli:raw="Serialize the HTTP content to a stream as an asynchronous operation.">Sérialise le contenu HTTP dans un flux en tant qu’opération asynchrone.</summary>
      <param name="stream" vsli:raw="The target stream.">Le flux de données cible.</param>
      <param name="context" vsli:raw="Information about the transport (channel binding token, for example). This parameter may be &lt;see langword=&quot;null&quot; /&gt;.">Informations relatives au transport (jeton de liaison de canal, par exemple). Ce paramètre peut avoir la valeur <see langword="null" />.</param>
      <returns vsli:raw="The task object representing the asynchronous operation.">Objet de tâche représentant l'opération asynchrone.</returns>
    </member>
    <member name="M:System.Net.Http.StreamContent.SerializeToStreamAsync(System.IO.Stream,System.Net.TransportContext,System.Threading.CancellationToken)">
      <summary vsli:raw="Serialize the HTTP content to a stream as an asynchronous operation.">Sérialise le contenu HTTP dans un flux en tant qu’opération asynchrone.</summary>
      <param name="stream" vsli:raw="The target stream.">Le flux de données cible.</param>
      <param name="context" vsli:raw="Information about the transport (channel binding token, for example). This parameter may be &lt;see langword=&quot;null&quot; /&gt;.">Informations relatives au transport (jeton de liaison de canal, par exemple). Ce paramètre peut avoir la valeur <see langword="null" />.</param>
      <param name="cancellationToken" vsli:raw="The cancellation token to cancel the operation.">Jeton d’annulation pour annuler l’opération.</param>
      <returns vsli:raw="The task object representing the asynchronous operation.">Objet de tâche représentant l'opération asynchrone.</returns>
    </member>
    <member name="M:System.Net.Http.StreamContent.TryComputeLength(System.Int64@)">
      <summary vsli:raw="Determines whether the stream content has a valid length in bytes.">Détermine si le contenu de flux a une longueur valide en octets.</summary>
      <param name="length" vsli:raw="The length in bytes of the stream content.">La longueur du flux de contenu en octets.</param>
      <returns vsli:raw="&lt;see langword=&quot;true&quot; /&gt; if &lt;paramref name=&quot;length&quot; /&gt; is a valid length; otherwise, &lt;see langword=&quot;false&quot; /&gt;.">
        <see langword="true" /> si <paramref name="length" /> est une longueur valide ; sinon, <see langword="false" />.</returns>
    </member>
    <member name="T:System.Net.Http.StringContent">
      <summary vsli:raw="Provides HTTP content based on a string.">Fournit du contenu HTTP basé sur une chaîne.</summary>
    </member>
    <member name="M:System.Net.Http.StringContent.#ctor(System.String)">
      <summary vsli:raw="Creates a new instance of the &lt;see cref=&quot;T:System.Net.Http.StringContent&quot; /&gt; class.">Crée une instance de la classe <see cref="T:System.Net.Http.StringContent" />.</summary>
      <param name="content" vsli:raw="The content used to initialize the &lt;see cref=&quot;T:System.Net.Http.StringContent&quot; /&gt;.">Contenu utilisé pour initialiser <see cref="T:System.Net.Http.StringContent" />.</param>
    </member>
    <member name="M:System.Net.Http.StringContent.#ctor(System.String,System.Text.Encoding)">
      <summary vsli:raw="Creates a new instance of the &lt;see cref=&quot;T:System.Net.Http.StringContent&quot; /&gt; class.">Crée une instance de la classe <see cref="T:System.Net.Http.StringContent" />.</summary>
      <param name="content" vsli:raw="The content used to initialize the &lt;see cref=&quot;T:System.Net.Http.StringContent&quot; /&gt;.">Contenu utilisé pour initialiser <see cref="T:System.Net.Http.StringContent" />.</param>
      <param name="encoding" vsli:raw="The encoding to use for the content.">Encodage à utiliser pour le contenu.</param>
    </member>
    <member name="M:System.Net.Http.StringContent.#ctor(System.String,System.Text.Encoding,System.String)">
      <summary vsli:raw="Creates a new instance of the &lt;see cref=&quot;T:System.Net.Http.StringContent&quot; /&gt; class.">Crée une instance de la classe <see cref="T:System.Net.Http.StringContent" />.</summary>
      <param name="content" vsli:raw="The content used to initialize the &lt;see cref=&quot;T:System.Net.Http.StringContent&quot; /&gt;.">Contenu utilisé pour initialiser <see cref="T:System.Net.Http.StringContent" />.</param>
      <param name="encoding" vsli:raw="The encoding to use for the content.">Encodage à utiliser pour le contenu.</param>
      <param name="mediaType" vsli:raw="The media type to use for the content.">Type de média à utiliser pour le contenu.</param>
    </member>
    <member name="M:System.Net.Http.StringContent.SerializeToStreamAsync(System.IO.Stream,System.Net.TransportContext,System.Threading.CancellationToken)">
      <summary vsli:raw="Serialize and write the string provided in the constructor to an HTTP content stream as an asynchronous operation.">Sérialise et écrit la chaîne fournie dans le constructeur sur un flux de contenu HTTP au cours d’une opération asynchrone.</summary>
      <param name="stream" vsli:raw="The target stream.">Le flux de données cible.</param>
      <param name="context" vsli:raw="Information about the transport, like channel binding token. This parameter may be &lt;see langword=&quot;null&quot; /&gt;.">Informations relatives au transport, comme un jeton de liaison de canal. Ce paramètre peut avoir la valeur <see langword="null" />.</param>
      <param name="cancellationToken" vsli:raw="The cancellation token to cancel the operation.">Jeton d’annulation pour annuler l’opération.</param>
      <returns vsli:raw="The task object representing the asynchronous operation.">Objet de tâche représentant l'opération asynchrone.</returns>
    </member>
  </members>
</doc>