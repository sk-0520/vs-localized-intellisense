<?xml version="1.0" encoding="utf-8"?>
<doc>
  <assembly>
    <name>System.Runtime.Loader</name>
  </assembly>
  <members>
    <member name="T:System.Reflection.Metadata.AssemblyExtensions" />
    <member name="M:System.Reflection.Metadata.AssemblyExtensions.TryGetRawMetadata(System.Reflection.Assembly,System.Byte*@,System.Int32@)">
      <param name="assembly" />
      <param name="blob" />
      <param name="length" />
    </member>
    <member name="T:System.Runtime.Loader.AssemblyDependencyResolver">
      <summary>Permet à un programme de résoudre les assemblys et les bibliothèques natives en chemins en fonction des dépendances d’un assembly donné.</summary>
    </member>
    <member name="M:System.Runtime.Loader.AssemblyDependencyResolver.#ctor(System.String)">
      <summary>Initialise une nouvelle instance de la classe <see cref="T:System.Runtime.Loader.AssemblyDependencyResolver" /> avec le chemin de l’assembly d’un composant.</summary>
      <param name="componentAssemblyPath">Chemin du point d’entrée managé du composant ou du plug-in.</param>
    </member>
    <member name="M:System.Runtime.Loader.AssemblyDependencyResolver.ResolveAssemblyToPath(System.Reflection.AssemblyName)">
      <summary>Résout un chemin d’assembly avec le nom d’assembly donné en fonction des dépendances du composant.</summary>
      <param name="assemblyName">Nom d’assembly à résoudre.</param>
      <returns>Chemin d’un assembly dont le nom est tiré du fichier deps.json du composant, ou <see langword="null" /> si l’assembly n’existe pas dans le fichier deps.json ou ne se trouve pas sur le disque à l’emplacement spécifié par le fichier deps.json.</returns>
    </member>
    <member name="M:System.Runtime.Loader.AssemblyDependencyResolver.ResolveUnmanagedDllToPath(System.String)">
      <summary>Résout un chemin de bibliothèque native dont le nom donné est fonction des dépendances du composant.</summary>
      <param name="unmanagedDllName">Nom de la bibliothèque native à résoudre.</param>
      <returns>Chemin d’une bibliothèque native dont le nom est tiré du fichier deps.json et de l’identificateur de runtime actif du composant, ou <see langword="null" /> si l’assembly n’existe pas dans le fichier deps.json ou ne se trouve pas sur le disque à l’emplacement spécifié par le fichier deps.json.</returns>
    </member>
    <member name="T:System.Runtime.Loader.AssemblyLoadContext">
      <summary>Représente le concept du runtime d’une étendue pour le chargement d’assembly.</summary>
    </member>
    <member name="E:System.Runtime.Loader.AssemblyLoadContext.Resolving">
      <summary>Se produit quand la résolution d’un assembly échoue lors d’une tentative de chargement dans ce contexte de chargement d’assembly.</summary>
    </member>
    <member name="E:System.Runtime.Loader.AssemblyLoadContext.ResolvingUnmanagedDll">
      <summary>Se produit quand la résolution d’une bibliothèque native échoue.</summary>
    </member>
    <member name="E:System.Runtime.Loader.AssemblyLoadContext.Unloading">
      <summary>Se produit quand le <see cref="T:System.Runtime.Loader.AssemblyLoadContext" /> est déchargé.</summary>
    </member>
    <member name="M:System.Runtime.Loader.AssemblyLoadContext.#ctor">
      <summary>Initialise une nouvelle instance de la classe <see cref="T:System.Runtime.Loader.AssemblyLoadContext" />.</summary>
    </member>
    <member name="M:System.Runtime.Loader.AssemblyLoadContext.#ctor(System.Boolean)">
      <summary>Initialise une nouvelle instance de la classe <see cref="T:System.Runtime.Loader.AssemblyLoadContext" /> avec une valeur qui indique si le déchargement est activé.</summary>
      <param name="isCollectible">
        <see langword="true" /> pour activer <see cref="M:System.Runtime.Loader.AssemblyLoadContext.Unload" /> ; sinon, <see langword="false" />. La valeur par défaut est <see langword="false" />, car les performances sont impactées par l’activation du déchargement.</param>
    </member>
    <member name="M:System.Runtime.Loader.AssemblyLoadContext.#ctor(System.String,System.Boolean)">
      <summary>Initialise une nouvelle instance de la classe <see cref="T:System.Runtime.Loader.AssemblyLoadContext" /> avec un nom et une valeur qui indique si le déchargement est activé.</summary>
      <param name="name">Valeur de <see cref="P:System.Runtime.Loader.AssemblyLoadContext.Name" /> dans la nouvelle instance. Sa valeur peut être <see langword="null" />.</param>
      <param name="isCollectible">
        <see langword="true" /> pour activer <see cref="M:System.Runtime.Loader.AssemblyLoadContext.Unload" /> ; sinon, <see langword="false" />. La valeur par défaut est <see langword="false" />, car les performances sont impactées par l’activation du déchargement.</param>
    </member>
    <member name="M:System.Runtime.Loader.AssemblyLoadContext.EnterContextualReflection">
      <summary>Définit <see cref="P:System.Runtime.Loader.AssemblyLoadContext.CurrentContextualReflectionContext" /> à <see langword="this" /><see cref="T:System.Runtime.Loader.AssemblyLoadContext" />.</summary>
      <returns>Objet pour restaurer la valeur précédente de <see cref="P:System.Runtime.Loader.AssemblyLoadContext.CurrentContextualReflectionContext" />. Il est destiné à être utilisé comme un <see cref="T:System.IDisposable" /> dans un bloc <see langword="using" />.</returns>
    </member>
    <member name="M:System.Runtime.Loader.AssemblyLoadContext.EnterContextualReflection(System.Reflection.Assembly)">
      <summary>Définit <see cref="P:System.Runtime.Loader.AssemblyLoadContext.CurrentContextualReflectionContext" /> sur le <see cref="T:System.Runtime.Loader.AssemblyLoadContext" /> qui a chargé l’assembly.</summary>
      <param name="activating">Assembly utilisé pour déterminer l’instance <see cref="T:System.Runtime.Loader.AssemblyLoadContext" /> demandée.</param>
      <returns>Objet pour restaurer la valeur précédente de <see cref="P:System.Runtime.Loader.AssemblyLoadContext.CurrentContextualReflectionContext" />. Il est destiné à être utilisé comme un <see cref="T:System.IDisposable" /> dans un bloc <see langword="using" />.</returns>
    </member>
    <member name="M:System.Runtime.Loader.AssemblyLoadContext.Finalize">
      <summary>Autorise l’objet à tenter de libérer des ressources et d’exécuter d’autres opérations de nettoyage avant qu’il ne soit récupéré par l’opération de garbage collection.</summary>
    </member>
    <member name="M:System.Runtime.Loader.AssemblyLoadContext.GetAssemblyName(System.String)">
      <summary>Obtient un <see cref="T:System.Reflection.AssemblyName" /> pour un chemin de l’assembly.</summary>
      <param name="assemblyPath">Chemin d'accès de l'assembly.</param>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="assemblyPath" /> a la valeur <see langword="null" />.</exception>
      <exception cref="T:System.IO.FileNotFoundException">L’assembly est introuvable.</exception>
      <exception cref="T:System.BadImageFormatException">L’assembly n’est pas un assembly valide.</exception>
      <returns>Objet qui contient le nom d’assembly entièrement analysé pour l’assembly sur <paramref name="assemblyPath" />.</returns>
    </member>
    <member name="M:System.Runtime.Loader.AssemblyLoadContext.GetLoadContext(System.Reflection.Assembly)">
      <summary>Obtient le <see cref="T:System.Runtime.Loader.AssemblyLoadContext" /> contenant le <see cref="T:System.Reflection.Assembly" /> spécifié.</summary>
      <param name="assembly">Assembly.</param>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="assembly" /> a la valeur <see langword="null" />.</exception>
      <returns>Contexte de chargement d’assembly contenant <paramref name="assembly" />. Si <paramref name="assembly" /> n’est pas fourni par le runtime, cette méthode retourne null.</returns>
    </member>
    <member name="M:System.Runtime.Loader.AssemblyLoadContext.Load(System.Reflection.AssemblyName)">
      <summary>En cas de substitution dans une classe dérivée, permet de résoudre et de charger un assembly en fonction de son <see cref="T:System.Reflection.AssemblyName" />.</summary>
      <param name="assemblyName">Objet qui décrit l'assembly à charger.</param>
      <returns>Assembly chargé ou <see langword="null" />.</returns>
    </member>
    <member name="M:System.Runtime.Loader.AssemblyLoadContext.LoadFromAssemblyName(System.Reflection.AssemblyName)">
      <summary>Résout et charge un assembly en fonction de son <see cref="T:System.Reflection.AssemblyName" />.</summary>
      <param name="assemblyName">Objet qui décrit l’assembly à charger.</param>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="assemblyName" /> a la valeur <see langword="null" />.</exception>
      <exception cref="T:System.IO.FileNotFoundException">
        <paramref name="assemblyName" /> est introuvable.</exception>
      <exception cref="T:System.BadImageFormatException">
        <paramref name="assemblyName" /> n’est pas un assembly valide.</exception>
      <exception cref="T:System.IO.FileLoadException">Un assembly ou un module a été chargé qui ne correspondait pas à <paramref name="assemblyName" />.</exception>
      <returns>Assembly chargé ou levers.</returns>
    </member>
    <member name="M:System.Runtime.Loader.AssemblyLoadContext.LoadFromAssemblyPath(System.String)">
      <summary>Charge le contenu d’un fichier d’assembly sur le chemin d’accès spécifié.</summary>
      <param name="assemblyPath">Chemin d'accès complet du fichier à charger.</param>
      <exception cref="T:System.ArgumentException">L’argument <paramref name="assemblyPath" /> n’est pas un chemin absolu.</exception>
      <exception cref="T:System.ArgumentNullException">Le paramètre <paramref name="assemblyPath" /> a la valeur <see langword="null" />.</exception>
      <exception cref="T:System.IO.FileLoadException">Impossible de charger l’un des fichiers trouvés.</exception>
      <exception cref="T:System.IO.FileNotFoundException">Le paramètre <paramref name="assemblyPath" /> est une chaîne vide ("") ou n’existe pas.</exception>
      <exception cref="T:System.BadImageFormatException">
        <paramref name="assemblyPath" /> n’est pas un assembly valide.</exception>
      <returns>Assembly chargé.</returns>
    </member>
    <member name="M:System.Runtime.Loader.AssemblyLoadContext.LoadFromNativeImagePath(System.String,System.String)">
      <summary>Charge le contenu de l’image native d’un fichier d’assembly managé sur le chemin spécifié.</summary>
      <param name="nativeImagePath">Chemin d'accès complet du fichier à charger.</param>
      <param name="assemblyPath">Chemin qualifié complet de la version IL du fichier à charger, ou <see langword="null" />.</param>
      <exception cref="T:System.ArgumentException">L’argument <paramref name="nativeImagePath" /> n’est pas un chemin absolu.</exception>
      <exception cref="T:System.ArgumentException">L’argument <paramref name="assemblyPath" /> n’est pas un chemin absolu.</exception>
      <exception cref="T:System.ArgumentNullException">Le paramètre <paramref name="nativeImagePath" /> a la valeur <see langword="null" />.</exception>
      <exception cref="T:System.IO.FileLoadException">Impossible de charger l’un des fichiers trouvés.</exception>
      <exception cref="T:System.IO.FileNotFoundException">Le paramètre <paramref name="nativeImagePath" /> est une chaîne vide ("") ou n’existe pas.</exception>
      <exception cref="T:System.BadImageFormatException">
        <paramref name="assemblyPath" /> n’est pas un assembly valide.</exception>
      <returns>Assembly chargé.</returns>
    </member>
    <member name="M:System.Runtime.Loader.AssemblyLoadContext.LoadFromStream(System.IO.Stream)">
      <summary>Charge l’assembly avec une image au format COFF (Common Object File Format) contenant un assembly managé.</summary>
      <param name="assembly">Tableau d’octets qui est une image au format COFF contenant un assembly managé.</param>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="assembly" /> a la valeur <see langword="null" />.</exception>
      <exception cref="T:System.BadImageFormatException">
        <paramref name="assembly" /> n’est pas un assembly valide.</exception>
      <returns>Assembly chargé.</returns>
    </member>
    <member name="M:System.Runtime.Loader.AssemblyLoadContext.LoadFromStream(System.IO.Stream,System.IO.Stream)">
      <summary>Charge l’assembly avec une image COFF (Common Object File Format) contenant un assembly managé qui inclut éventuellement des symboles de l’assembly.</summary>
      <param name="assembly">Tableau d’octets qui est une image au format COFF contenant un assembly managé.</param>
      <param name="assemblySymbols">Tableau d'octets qui contient les octets bruts représentant les symboles de l'assembly.</param>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="assembly" /> a la valeur <see langword="null" />.</exception>
      <exception cref="T:System.BadImageFormatException">
        <paramref name="assembly" /> n’est pas un assembly valide.</exception>
      <returns>Assembly chargé.</returns>
    </member>
    <member name="M:System.Runtime.Loader.AssemblyLoadContext.LoadUnmanagedDll(System.String)">
      <summary>Permet à une classe dérivée de charger une bibliothèque non managée par nom.</summary>
      <param name="unmanagedDllName">Nom de la bibliothèque non managée. Il s’agit généralement du nom de fichier sans son chemin ou ses extensions.</param>
      <returns>Handle vers la bibliothèque chargée, ou <see cref="F:System.IntPtr.Zero" />.</returns>
    </member>
    <member name="M:System.Runtime.Loader.AssemblyLoadContext.LoadUnmanagedDllFromPath(System.String)">
      <summary>Charge une bibliothèque non managée à partir du chemin spécifié.</summary>
      <param name="unmanagedDllPath">Chemin de la bibliothèque non managée.</param>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="unmanagedDllPath" /> a la valeur <see langword="null" />.</exception>
      <exception cref="T:System.ArgumentException">L’argument <paramref name="unmanagedDllPath" /> est vide ou n’est pas un chemin absolu.</exception>
      <exception cref="T:System.DllNotFoundException">La bibliothèque est introuvable.</exception>
      <exception cref="T:System.BadImageFormatException">La bibliothèque n’est pas valide.</exception>
      <returns>Descripteur de système d’exploitation de la bibliothèque native chargée.</returns>
    </member>
    <member name="M:System.Runtime.Loader.AssemblyLoadContext.SetProfileOptimizationRoot(System.String)">
      <summary>Définit le chemin racine où sont stockés les profils d’optimisation pour ce contexte de chargement.</summary>
      <param name="directoryPath">Chemin complet du répertoire où sont stockés les profils d’optimisation.</param>
    </member>
    <member name="M:System.Runtime.Loader.AssemblyLoadContext.StartProfileOptimization(System.String)">
      <summary>Démarre l’optimisation du profil spécifié.</summary>
      <param name="profile">Nom du profil d’optimisation.</param>
    </member>
    <member name="M:System.Runtime.Loader.AssemblyLoadContext.ToString">
      <summary>Retourne la représentation sous forme de chaîne de ce contexte de chargement.</summary>
      <returns>Représentation sous forme de chaîne de ce contexte de chargement.</returns>
    </member>
    <member name="M:System.Runtime.Loader.AssemblyLoadContext.Unload">
      <summary>Initie une opération de déchargement de ce <see cref="T:System.Runtime.Loader.AssemblyLoadContext" />.</summary>
      <exception cref="T:System.InvalidOperationException">Le déchargement n'est pas autorisé.</exception>
    </member>
    <member name="P:System.Runtime.Loader.AssemblyLoadContext.All">
      <summary>Retourne une collection de toutes les instances de <see cref="T:System.Runtime.Loader.AssemblyLoadContext" />.</summary>
      <returns>Collection de toutes les <see cref="T:System.Runtime.Loader.AssemblyLoadContext" /> instances.</returns>
    </member>
    <member name="P:System.Runtime.Loader.AssemblyLoadContext.Assemblies">
      <summary>Retourne une collection des instances de <see cref="T:System.Reflection.Assembly" /> chargées dans le <see cref="T:System.Runtime.Loader.AssemblyLoadContext" />.</summary>
      <returns>Collection des <see cref="T:System.Reflection.Assembly" /> instances chargées dans <see cref="T:System.Runtime.Loader.AssemblyLoadContext" /> .</returns>
    </member>
    <member name="P:System.Runtime.Loader.AssemblyLoadContext.CurrentContextualReflectionContext">
      <summary>Obtient le <see cref="T:System.Runtime.Loader.AssemblyLoadContext" /> défini par le dernier appel à <see cref="M:System.Runtime.Loader.AssemblyLoadContext.EnterContextualReflection" />.</summary>
      <returns>
        <see cref="T:System.Runtime.Loader.AssemblyLoadContext" />Défini par l’appel le plus récent à <see cref="M:System.Runtime.Loader.AssemblyLoadContext.EnterContextualReflection" /> . Cette valeur peut être <see langword="null" />. La valeur est stockée dans un <see cref="T:System.Threading.AsyncLocal`1" /> , donc la valeur est unique par contexte asynchrone.</returns>
    </member>
    <member name="P:System.Runtime.Loader.AssemblyLoadContext.Default">
      <summary>Obtient l'objet <see cref="T:System.Runtime.Loader.AssemblyLoadContext" /> par défaut. Le contexte par défaut contient l’assembly principal de l’application et ses dépendances statiques.</summary>
      <returns>Contexte de chargement d'assembly par défaut.</returns>
    </member>
    <member name="P:System.Runtime.Loader.AssemblyLoadContext.IsCollectible">
      <summary>Obtient une valeur indiquant si ce <see cref="T:System.Runtime.Loader.AssemblyLoadContext" /> peut être collecté.</summary>
      <returns>
        <see langword="true" /> s’il <see cref="T:System.Runtime.Loader.AssemblyLoadContext" /> s’agit d’un objets pouvant être collectés ; sinon, <see langword="false" /> . Si aucune valeur n’est spécifiée dans le constructeur, la valeur est <see langword="false" /> .</returns>
    </member>
    <member name="P:System.Runtime.Loader.AssemblyLoadContext.Name">
      <summary>Obtient le nom du <see cref="T:System.Runtime.Loader.AssemblyLoadContext" />.</summary>
      <returns>Nom de l'objet <see cref="T:System.Runtime.Loader.AssemblyLoadContext" />. Sa valeur peut être <see langword="null" />.</returns>
    </member>
    <member name="T:System.Runtime.Loader.AssemblyLoadContext.ContextualReflectionScope">
      <summary>Fournit un type de retour utilisé exclusivement pour <see cref="M:System.Runtime.Loader.AssemblyLoadContext.EnterContextualReflection" />. Il est destiné à être utilisé comme un <see cref="T:System.IDisposable" /> dans un bloc <see langword="using" />.</summary>
    </member>
    <member name="M:System.Runtime.Loader.AssemblyLoadContext.ContextualReflectionScope.Dispose">
      <summary>Définit <see cref="P:System.Runtime.Loader.AssemblyLoadContext.CurrentContextualReflectionContext" /> à la valeur avant l’appel à <see cref="M:System.Runtime.Loader.AssemblyLoadContext.EnterContextualReflection" /> qui a retourné cette instance.</summary>
    </member>
  </members>
</doc>