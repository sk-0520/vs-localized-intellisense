<?xml version="1.0" encoding="utf-8"?>
<doc xmlns:vsli="https://github.com/sk-0520/vs-localized-intellisense/tree/master/schema/2024">
  <assembly>
    <name>System.Diagnostics.TraceSource</name>
  </assembly>
  <members>
    <member name="T:System.Diagnostics.BooleanSwitch">
      <summary vsli:raw="Provides a simple on/off switch that controls debugging and tracing output.">Fournit un simple commutateur marche/arrêt qui contrôle le débogage et la sortie de suivi.</summary>
    </member>
    <member name="M:System.Diagnostics.BooleanSwitch.#ctor(System.String,System.String)">
      <summary vsli:raw="Initializes a new instance of the &lt;see cref=&quot;T:System.Diagnostics.BooleanSwitch&quot; /&gt; class with the specified display name and description.">Initialise une nouvelle instance de la classe <see cref="T:System.Diagnostics.BooleanSwitch" /> avec le nom d’affichage et la description spécifiés.</summary>
      <param name="displayName" vsli:raw="The name to display on a user interface.">Nom à afficher dans l’interface utilisateur.</param>
      <param name="description" vsli:raw="The description of the switch.">Description du commutateur.</param>
    </member>
    <member name="M:System.Diagnostics.BooleanSwitch.#ctor(System.String,System.String,System.String)">
      <summary vsli:raw="Initializes a new instance of the &lt;see cref=&quot;T:System.Diagnostics.BooleanSwitch&quot; /&gt; class with the specified display name, description, and default switch value.">Initialise une nouvelle instance de la classe <see cref="T:System.Diagnostics.BooleanSwitch" /> avec le nom complet, la description et la valeur de commutateur par défaut spécifiés.</summary>
      <param name="displayName" vsli:raw="The name to display on the user interface.">Nom à afficher sur l’interface utilisateur.</param>
      <param name="description" vsli:raw="The description of the switch.">Description du commutateur.</param>
      <param name="defaultSwitchValue" vsli:raw="The default value of the switch.">Valeur par défaut du commutateur.</param>
    </member>
    <member name="M:System.Diagnostics.BooleanSwitch.OnValueChanged">
      <summary vsli:raw="Determines whether the new value of the &lt;see cref=&quot;P:System.Diagnostics.Switch.Value&quot; /&gt; property can be parsed as a Boolean value.">Détermine si la nouvelle valeur de la propriété <see cref="P:System.Diagnostics.Switch.Value" /> peut être analysée en tant que valeur booléenne.</summary>
    </member>
    <member name="P:System.Diagnostics.BooleanSwitch.Enabled">
      <summary vsli:raw="Gets or sets a value indicating whether the switch is enabled or disabled.">Obtient ou définit une valeur qui indique si le commutateur est activé ou désactivé.</summary>
      <exception cref="T:System.Security.SecurityException" vsli:raw="The caller does not have the correct permission.">L’appelant n’a pas l’autorisation requise.</exception>
      <returns vsli:raw="&lt;see langword=&quot;true&quot; /&gt; if the switch is enabled; otherwise, &lt;see langword=&quot;false&quot; /&gt;. The default is &lt;see langword=&quot;false&quot; /&gt;.">
        <see langword="true" /> si le commutateur est activé ; sinon, <see langword="false" />. La valeur par défaut est <see langword="false" />.</returns>
    </member>
    <member name="T:System.Diagnostics.CorrelationManager">
      <summary vsli:raw="Correlates traces that are part of a logical transaction.">Met en correspondance des traces qui font partie d'une transaction logique.</summary>
    </member>
    <member name="M:System.Diagnostics.CorrelationManager.StartLogicalOperation">
      <summary vsli:raw="Starts a logical operation on a thread.">Démarre une opération logique sur un thread.</summary>
    </member>
    <member name="M:System.Diagnostics.CorrelationManager.StartLogicalOperation(System.Object)">
      <summary vsli:raw="Starts a logical operation with the specified identity on a thread.">Démarre une opération logique avec l'identité spécifiée sur un thread.</summary>
      <param name="operationId" vsli:raw="An object identifying the operation.">Objet qui identifie l'opération.</param>
      <exception cref="T:System.ArgumentNullException" vsli:raw="The &lt;paramref name=&quot;operationId&quot; /&gt; parameter is &lt;see langword=&quot;null&quot; /&gt;.">Le paramètre <paramref name="operationId" /> a la valeur <see langword="null" />.</exception>
    </member>
    <member name="M:System.Diagnostics.CorrelationManager.StopLogicalOperation">
      <summary vsli:raw="Stops the current logical operation.">Arrête l'opération logique actuelle.</summary>
      <exception cref="T:System.InvalidOperationException" vsli:raw="The &lt;see cref=&quot;P:System.Diagnostics.CorrelationManager.LogicalOperationStack&quot; /&gt; property is an empty stack.">La propriété <see cref="P:System.Diagnostics.CorrelationManager.LogicalOperationStack" /> est une pile vide.</exception>
    </member>
    <member name="P:System.Diagnostics.CorrelationManager.ActivityId">
      <summary vsli:raw="Gets or sets the identity for a global activity.">Obtient ou définit l'identité pour une activité globale.</summary>
      <returns vsli:raw="A &lt;see cref=&quot;T:System.Guid&quot; /&gt; structure that identifies the global activity.">Structure <see cref="T:System.Guid" /> qui identifie l'activité globale.</returns>
    </member>
    <member name="P:System.Diagnostics.CorrelationManager.LogicalOperationStack">
      <summary vsli:raw="Gets the logical operation stack from the call context.">Obtient la pile d'opération logique du contexte d'appel.</summary>
      <returns vsli:raw="A &lt;see cref=&quot;T:System.Collections.Stack&quot; /&gt; object that represents the logical operation stack for the call context.">Objet <see cref="T:System.Collections.Stack" /> qui représente la pile d'opération logique pour le contexte d'appel.</returns>
    </member>
    <member name="T:System.Diagnostics.DefaultTraceListener">
      <summary vsli:raw="Provides the default output methods and behavior for tracing.">Fournit les méthodes de sortie par défaut et le comportement de suivi.</summary>
    </member>
    <member name="M:System.Diagnostics.DefaultTraceListener.#ctor">
      <summary vsli:raw="Initializes a new instance of the &lt;see cref=&quot;T:System.Diagnostics.DefaultTraceListener&quot; /&gt; class with &quot;Default&quot; as its &lt;see cref=&quot;P:System.Diagnostics.TraceListener.Name&quot; /&gt; property value.">Initialise une nouvelle instance de la classe <see cref="T:System.Diagnostics.DefaultTraceListener" /> en assignant "Default" comme valeur de la propriété <see cref="P:System.Diagnostics.TraceListener.Name" />.</summary>
    </member>
    <member name="M:System.Diagnostics.DefaultTraceListener.Fail(System.String)">
      <summary vsli:raw="Emits or displays a message and a stack trace for an assertion that always fails.">Émet ou affiche un message et une trace de la pile pour une assertion qui échoue toujours.</summary>
      <param name="message" vsli:raw="The message to emit or display.">Message à envoyer ou afficher.</param>
    </member>
    <member name="M:System.Diagnostics.DefaultTraceListener.Fail(System.String,System.String)">
      <summary vsli:raw="Emits or displays detailed messages and a stack trace for an assertion that always fails.">Émet ou affiche des messages détaillés et une trace de la pile pour une assertion qui échoue toujours.</summary>
      <param name="message" vsli:raw="The message to emit or display.">Message à envoyer ou afficher.</param>
      <param name="detailMessage" vsli:raw="The detailed message to emit or display.">Message détaillé à envoyer ou afficher.</param>
    </member>
    <member name="M:System.Diagnostics.DefaultTraceListener.Write(System.String)">
      <summary vsli:raw="Writes the output to the &lt;see langword=&quot;OutputDebugString&quot; /&gt; function and to the &lt;see cref=&quot;M:System.Diagnostics.Debugger.Log(System.Int32,System.String,System.String)&quot; /&gt; method.">Écrit la sortie vers la fonction <see langword="OutputDebugString" /> et la méthode <see cref="M:System.Diagnostics.Debugger.Log(System.Int32,System.String,System.String)" />.</summary>
      <param name="message" vsli:raw="The message to write to &lt;see langword=&quot;OutputDebugString&quot; /&gt; and &lt;see cref=&quot;M:System.Diagnostics.Debugger.Log(System.Int32,System.String,System.String)&quot; /&gt;.">Message à écrire vers <see langword="OutputDebugString" /> et <see cref="M:System.Diagnostics.Debugger.Log(System.Int32,System.String,System.String)" />.</param>
    </member>
    <member name="M:System.Diagnostics.DefaultTraceListener.WriteLine(System.String)">
      <summary vsli:raw="Writes the output to the &lt;see langword=&quot;OutputDebugString&quot; /&gt; function and to the &lt;see cref=&quot;M:System.Diagnostics.Debugger.Log(System.Int32,System.String,System.String)&quot; /&gt; method, followed by a carriage return and line feed (\r\n).">Écrit la sortie vers la fonction <see langword="OutputDebugString" /> et la méthode <see cref="M:System.Diagnostics.Debugger.Log(System.Int32,System.String,System.String)" /> suivie d'un retour chariot et d'un changement de ligne (\r\n).</summary>
      <param name="message" vsli:raw="The message to write to &lt;see langword=&quot;OutputDebugString&quot; /&gt; and &lt;see cref=&quot;M:System.Diagnostics.Debugger.Log(System.Int32,System.String,System.String)&quot; /&gt;.">Message à écrire vers <see langword="OutputDebugString" /> et <see cref="M:System.Diagnostics.Debugger.Log(System.Int32,System.String,System.String)" />.</param>
    </member>
    <member name="P:System.Diagnostics.DefaultTraceListener.AssertUiEnabled">
      <summary vsli:raw="Gets or sets a value indicating whether the application is running in user-interface mode.">Obtient ou définit une valeur indiquant si l'application est exécutée en mode interface utilisateur.</summary>
      <returns vsli:raw="&lt;see langword=&quot;true&quot; /&gt; if user-interface mode is enabled; otherwise, &lt;see langword=&quot;false&quot; /&gt;.">
        <see langword="true" /> si le mode interface utilisateur est activé ; sinon <see langword="false" />.</returns>
    </member>
    <member name="P:System.Diagnostics.DefaultTraceListener.LogFileName">
      <summary vsli:raw="Gets or sets the name of a log file to write trace or debug messages to.">Obtient ou définit le nom d'un fichier journal dans lequel les messages de traçage ou de débogage doivent être écrits.</summary>
      <returns vsli:raw="The name of a log file to write trace or debug messages to.">Nom d'un fichier journal dans lequel les messages de traçage ou de débogage doivent être écrits.</returns>
    </member>
    <member name="T:System.Diagnostics.EventTypeFilter">
      <summary vsli:raw="Indicates whether a listener should trace based on the event type.">Indique si un écouteur doit tracer en fonction du type d'événement.</summary>
    </member>
    <member name="M:System.Diagnostics.EventTypeFilter.#ctor(System.Diagnostics.SourceLevels)">
      <summary vsli:raw="Initializes a new instance of the &lt;see cref=&quot;T:System.Diagnostics.EventTypeFilter&quot; /&gt; class.">Initialise une nouvelle instance de la classe <see cref="T:System.Diagnostics.EventTypeFilter" />.</summary>
      <param name="level" vsli:raw="A bitwise combination of the &lt;see cref=&quot;T:System.Diagnostics.SourceLevels&quot; /&gt; values that specifies the event type of the messages to trace.">Une combinaison d'opérations de bits des valeurs <see cref="T:System.Diagnostics.SourceLevels" /> qui spécifie le type d'événement des messages à tracer.</param>
    </member>
    <member name="M:System.Diagnostics.EventTypeFilter.ShouldTrace(System.Diagnostics.TraceEventCache,System.String,System.Diagnostics.TraceEventType,System.Int32,System.String,System.Object[],System.Object,System.Object[])">
      <summary vsli:raw="Determines whether the trace listener should trace the event.">Détermine si l'écouteur de la trace doit tracer l'événement.</summary>
      <param name="cache" vsli:raw="A &lt;see cref=&quot;T:System.Diagnostics.TraceEventCache&quot; /&gt; that represents the information cache for the trace event.">
        <see cref="T:System.Diagnostics.TraceEventCache" /> qui représente le cache des informations pour l'événement de trace.</param>
      <param name="source" vsli:raw="The name of the source.">Nom de la source.</param>
      <param name="eventType" vsli:raw="One of the &lt;see cref=&quot;T:System.Diagnostics.TraceEventType&quot; /&gt; values.">Une des valeurs de l'objet <see cref="T:System.Diagnostics.TraceEventType" />.</param>
      <param name="id" vsli:raw="A trace identifier number.">Numéro d'identification de trace.</param>
      <param name="formatOrMessage" vsli:raw="The format to use for writing an array of arguments, or a message to write.">Format à utiliser pour écrire un tableau d'arguments, ou un message à écrire.</param>
      <param name="args" vsli:raw="An array of argument objects.">Tableau d'objets d'argument.</param>
      <param name="data1" vsli:raw="A trace data object.">Objet des données de trace.</param>
      <param name="data" vsli:raw="An array of trace data objects.">Tableau des objets de données de trace.</param>
      <returns vsli:raw="&lt;see langword=&quot;true&quot; /&gt; if the trace should be produced; otherwise, &lt;see langword=&quot;false&quot; /&gt;.">
        <see langword="true" /> si la trace doit être produite ; sinon, <see langword="false" />.</returns>
    </member>
    <member name="P:System.Diagnostics.EventTypeFilter.EventType">
      <summary vsli:raw="Gets or sets the event type of the messages to trace.">Obtient ou définit le type d'événement des messages à tracer.</summary>
      <returns vsli:raw="A bitwise combination of the &lt;see cref=&quot;T:System.Diagnostics.SourceLevels&quot; /&gt; values.">Combinaison d'opérations de bits des valeurs <see cref="T:System.Diagnostics.SourceLevels" />.</returns>
    </member>
    <member name="T:System.Diagnostics.SourceFilter">
      <summary vsli:raw="Indicates whether a listener should trace a message based on the source of a trace.">Indique si un écouteur doit tracer un message en fonction de la source d'un traçage.</summary>
    </member>
    <member name="M:System.Diagnostics.SourceFilter.#ctor(System.String)">
      <summary vsli:raw="Initializes a new instance of the &lt;see cref=&quot;T:System.Diagnostics.SourceFilter&quot; /&gt; class, specifying the name of the trace source.">Initialise une nouvelle instance de la classe <see cref="T:System.Diagnostics.SourceFilter" /> et spécifie le nom de la source de trace.</summary>
      <param name="source" vsli:raw="The name of the trace source.">Nom de la source de trace.</param>
    </member>
    <member name="M:System.Diagnostics.SourceFilter.ShouldTrace(System.Diagnostics.TraceEventCache,System.String,System.Diagnostics.TraceEventType,System.Int32,System.String,System.Object[],System.Object,System.Object[])">
      <summary vsli:raw="Determines whether the trace listener should trace the event.">Détermine si l'écouteur de la trace doit tracer l'événement.</summary>
      <param name="cache" vsli:raw="An object that represents the information cache for the trace event.">Object qui représente le cache des informations pour l'événement de trace.</param>
      <param name="source" vsli:raw="The name of the source.">Nom de la source.</param>
      <param name="eventType" vsli:raw="One of the enumeration values that identifies the event type.">L'une des valeurs d'énumération qui identifie le type d'événement.</param>
      <param name="id" vsli:raw="A trace identifier number.">Numéro d'identification de trace.</param>
      <param name="formatOrMessage" vsli:raw="The format to use for writing an array of arguments or a message to write.">Format à utiliser pour écrire un tableau d'arguments ou un message à écrire.</param>
      <param name="args" vsli:raw="An array of argument objects.">Tableau d'objets d'argument.</param>
      <param name="data1" vsli:raw="A trace data object.">Objet des données de trace.</param>
      <param name="data" vsli:raw="An array of trace data objects.">Tableau des objets de données de trace.</param>
      <exception cref="T:System.ArgumentNullException" vsli:raw="&lt;paramref name=&quot;source&quot; /&gt; is &lt;see langword=&quot;null&quot; /&gt;.">
        <paramref name="source" /> a la valeur <see langword="null" />.</exception>
      <returns vsli:raw="&lt;see langword=&quot;true&quot; /&gt; if the trace should be produced; otherwise, &lt;see langword=&quot;false&quot; /&gt;.">
        <see langword="true" /> si la trace doit être produite ; sinon, <see langword="false" />.</returns>
    </member>
    <member name="P:System.Diagnostics.SourceFilter.Source">
      <summary vsli:raw="Gets or sets the name of the trace source.">Obtient ou définit le nom de la source de trace.</summary>
      <exception cref="T:System.ArgumentNullException" vsli:raw="The value is &lt;see langword=&quot;null&quot; /&gt;.">La valeur est <see langword="null" />.</exception>
      <returns vsli:raw="The name of the trace source.">Nom de la source de trace.</returns>
    </member>
    <member name="T:System.Diagnostics.SourceLevels">
      <summary vsli:raw="Specifies the levels of trace messages filtered by the source switch and event type filter.">Spécifie les niveaux des messages de trace filtrés par le commutateur source et le filtre de type d'événement.</summary>
    </member>
    <member name="F:System.Diagnostics.SourceLevels.ActivityTracing">
      <summary vsli:raw="Allows the &lt;see cref=&quot;F:System.Diagnostics.TraceEventType.Stop&quot; /&gt;, &lt;see cref=&quot;F:System.Diagnostics.TraceEventType.Start&quot; /&gt;, &lt;see cref=&quot;F:System.Diagnostics.TraceEventType.Suspend&quot; /&gt;, &lt;see cref=&quot;F:System.Diagnostics.TraceEventType.Transfer&quot; /&gt;, and &lt;see cref=&quot;F:System.Diagnostics.TraceEventType.Resume&quot; /&gt; events through.">Autorise les événements <see cref="F:System.Diagnostics.TraceEventType.Stop" />, <see cref="F:System.Diagnostics.TraceEventType.Start" />, <see cref="F:System.Diagnostics.TraceEventType.Suspend" />, <see cref="F:System.Diagnostics.TraceEventType.Transfer" /> et <see cref="F:System.Diagnostics.TraceEventType.Resume" />.</summary>
    </member>
    <member name="F:System.Diagnostics.SourceLevels.All">
      <summary vsli:raw="Allows all events through.">Autorise tous les événements.</summary>
    </member>
    <member name="F:System.Diagnostics.SourceLevels.Critical">
      <summary vsli:raw="Allows only &lt;see cref=&quot;F:System.Diagnostics.TraceEventType.Critical&quot; /&gt; events through.">Autorise uniquement les événements <see cref="F:System.Diagnostics.TraceEventType.Critical" />.</summary>
    </member>
    <member name="F:System.Diagnostics.SourceLevels.Error">
      <summary vsli:raw="Allows &lt;see cref=&quot;F:System.Diagnostics.TraceEventType.Critical&quot; /&gt; and &lt;see cref=&quot;F:System.Diagnostics.TraceEventType.Error&quot; /&gt; events through.">Autorise les événements <see cref="F:System.Diagnostics.TraceEventType.Critical" /> et <see cref="F:System.Diagnostics.TraceEventType.Error" />.</summary>
    </member>
    <member name="F:System.Diagnostics.SourceLevels.Information">
      <summary vsli:raw="Allows &lt;see cref=&quot;F:System.Diagnostics.TraceEventType.Critical&quot; /&gt;, &lt;see cref=&quot;F:System.Diagnostics.TraceEventType.Error&quot; /&gt;, &lt;see cref=&quot;F:System.Diagnostics.TraceEventType.Warning&quot; /&gt;, and &lt;see cref=&quot;F:System.Diagnostics.TraceEventType.Information&quot; /&gt; events through.">Autorise les événements <see cref="F:System.Diagnostics.TraceEventType.Critical" />, <see cref="F:System.Diagnostics.TraceEventType.Error" />, <see cref="F:System.Diagnostics.TraceEventType.Warning" />, et <see cref="F:System.Diagnostics.TraceEventType.Information" />.</summary>
    </member>
    <member name="F:System.Diagnostics.SourceLevels.Off">
      <summary vsli:raw="Does not allow any events through.">N'autorise pas d'événements.</summary>
    </member>
    <member name="F:System.Diagnostics.SourceLevels.Verbose">
      <summary vsli:raw="Allows &lt;see cref=&quot;F:System.Diagnostics.TraceEventType.Critical&quot; /&gt;, &lt;see cref=&quot;F:System.Diagnostics.TraceEventType.Error&quot; /&gt;, &lt;see cref=&quot;F:System.Diagnostics.TraceEventType.Warning&quot; /&gt;, &lt;see cref=&quot;F:System.Diagnostics.TraceEventType.Information&quot; /&gt;, and &lt;see cref=&quot;F:System.Diagnostics.TraceEventType.Verbose&quot; /&gt; events through.">Autorise les événements <see cref="F:System.Diagnostics.TraceEventType.Critical" />, <see cref="F:System.Diagnostics.TraceEventType.Error" />, <see cref="F:System.Diagnostics.TraceEventType.Warning" />, <see cref="F:System.Diagnostics.TraceEventType.Information" />, et <see cref="F:System.Diagnostics.TraceEventType.Verbose" />.</summary>
    </member>
    <member name="F:System.Diagnostics.SourceLevels.Warning">
      <summary vsli:raw="Allows &lt;see cref=&quot;F:System.Diagnostics.TraceEventType.Critical&quot; /&gt;, &lt;see cref=&quot;F:System.Diagnostics.TraceEventType.Error&quot; /&gt;, and &lt;see cref=&quot;F:System.Diagnostics.TraceEventType.Warning&quot; /&gt; events through.">Autorise les événements <see cref="F:System.Diagnostics.TraceEventType.Critical" />, <see cref="F:System.Diagnostics.TraceEventType.Error" />, et <see cref="F:System.Diagnostics.TraceEventType.Warning" />.</summary>
    </member>
    <member name="T:System.Diagnostics.SourceSwitch">
      <summary vsli:raw="Provides a multilevel switch to control tracing and debug output without recompiling your code.">Fournit un commutateur à plusieurs niveaux pour contrôler la sortie de traçage et de débogage sans recompiler votre code.</summary>
    </member>
    <member name="M:System.Diagnostics.SourceSwitch.#ctor(System.String)">
      <summary vsli:raw="Initializes a new instance of the &lt;see cref=&quot;T:System.Diagnostics.SourceSwitch&quot; /&gt; class, specifying the name of the source.">Initialise une nouvelle instance de la classe <see cref="T:System.Diagnostics.SourceSwitch" /> et spécifie le nom de la source.</summary>
      <param name="name" vsli:raw="The name of the source.">Nom de la source.</param>
    </member>
    <member name="M:System.Diagnostics.SourceSwitch.#ctor(System.String,System.String)">
      <summary vsli:raw="Initializes a new instance of the &lt;see cref=&quot;T:System.Diagnostics.SourceSwitch&quot; /&gt; class, specifying the display name and the default value for the source switch.">Initialise une nouvelle instance de la classe <see cref="T:System.Diagnostics.SourceSwitch" /> et spécifie le nom complet et la valeur par défaut pour le commutateur source.</summary>
      <param name="displayName" vsli:raw="The name of the source switch.">Nom du commutateur source.</param>
      <param name="defaultSwitchValue" vsli:raw="The default value for the switch.">Valeur par défaut du commutateur.</param>
    </member>
    <member name="M:System.Diagnostics.SourceSwitch.OnValueChanged">
      <summary vsli:raw="Invoked when the value of the &lt;see cref=&quot;P:System.Diagnostics.Switch.Value&quot; /&gt; property changes.">Appelé lorsque la valeur de la propriété <see cref="P:System.Diagnostics.Switch.Value" /> change.</summary>
      <exception cref="T:System.ArgumentException" vsli:raw="The new value of &lt;see cref=&quot;P:System.Diagnostics.Switch.Value&quot; /&gt; is not one of the &lt;see cref=&quot;T:System.Diagnostics.SourceLevels&quot; /&gt; values.">La nouvelle valeur de <see cref="P:System.Diagnostics.Switch.Value" /> ne fait pas partie des valeurs <see cref="T:System.Diagnostics.SourceLevels" />.</exception>
    </member>
    <member name="M:System.Diagnostics.SourceSwitch.ShouldTrace(System.Diagnostics.TraceEventType)">
      <summary vsli:raw="Determines if trace listeners should be called, based on the trace event type.">Détermine si les écouteurs de la trace doivent être appelés en fonction du type d'événement de trace.</summary>
      <param name="eventType" vsli:raw="One of the &lt;see cref=&quot;T:System.Diagnostics.TraceEventType&quot; /&gt; values.">Une des valeurs de l'objet <see cref="T:System.Diagnostics.TraceEventType" />.</param>
      <returns vsli:raw="&lt;see langword=&quot;true&quot; /&gt; if the trace listeners should be called; otherwise, &lt;see langword=&quot;false&quot; /&gt;.">
        <see langword="true" /> si les écouteurs de la trace doivent être appelés ; sinon, <see langword="false" />.</returns>
    </member>
    <member name="P:System.Diagnostics.SourceSwitch.Level">
      <summary vsli:raw="Gets or sets the level of the switch.">Obtient ou définit le niveau du commutateur.</summary>
      <returns vsli:raw="One of the &lt;see cref=&quot;T:System.Diagnostics.SourceLevels&quot; /&gt; values that represents the event level of the switch.">Une des valeurs <see cref="T:System.Diagnostics.SourceLevels" /> qui représente le niveau d'événement du commutateur.</returns>
    </member>
    <member name="T:System.Diagnostics.Switch">
      <summary vsli:raw="Provides an abstract base class to create new debugging and tracing switches.">Fournit une classe de base abstraite pour créer des commutateurs de débogage et de traçage.</summary>
    </member>
    <member name="M:System.Diagnostics.Switch.#ctor(System.String,System.String)">
      <summary vsli:raw="Initializes a new instance of the &lt;see cref=&quot;T:System.Diagnostics.Switch&quot; /&gt; class.">Initialise une nouvelle instance de la classe <see cref="T:System.Diagnostics.Switch" />.</summary>
      <param name="displayName" vsli:raw="The name of the switch.">Nom du commutateur.</param>
      <param name="description" vsli:raw="The description for the switch.">Description pour le commutateur.</param>
    </member>
    <member name="M:System.Diagnostics.Switch.#ctor(System.String,System.String,System.String)">
      <summary vsli:raw="Initializes a new instance of the &lt;see cref=&quot;T:System.Diagnostics.Switch&quot; /&gt; class, specifying the display name, description, and default value for the switch.">Initialise une nouvelle instance de la classe <see cref="T:System.Diagnostics.Switch" /> et spécifie le nom complet, la description et la valeur par défaut pour le commutateur.</summary>
      <param name="displayName" vsli:raw="The name of the switch.">Nom du commutateur.</param>
      <param name="description" vsli:raw="The description of the switch.">Description du commutateur.</param>
      <param name="defaultSwitchValue" vsli:raw="The default value for the switch.">Valeur par défaut du commutateur.</param>
    </member>
    <member name="M:System.Diagnostics.Switch.GetSupportedAttributes">
      <summary vsli:raw="Gets the custom attributes supported by the switch.">Obtient les attributs personnalisés pris en charge par le commutateur.</summary>
      <returns vsli:raw="A string array that contains the names of the custom attributes supported by the switch, or &lt;see langword=&quot;null&quot; /&gt; if there no custom attributes are supported.">Tableau de chaînes qui contient les noms des attributs personnalisés pris en charge par le commutateur, ou <see langword="null" /> en l'absence de prise en charge d'un attribut personnalisé.</returns>
    </member>
    <member name="M:System.Diagnostics.Switch.OnSwitchSettingChanged">
      <summary vsli:raw="Invoked when the &lt;see cref=&quot;P:System.Diagnostics.Switch.SwitchSetting&quot; /&gt; property is changed.">Appelé lorsque la propriété <see cref="P:System.Diagnostics.Switch.SwitchSetting" /> a été modifiée.</summary>
    </member>
    <member name="M:System.Diagnostics.Switch.OnValueChanged">
      <summary vsli:raw="Invoked when the &lt;see cref=&quot;P:System.Diagnostics.Switch.Value&quot; /&gt; property is changed.">Appelé lorsque la propriété <see cref="P:System.Diagnostics.Switch.Value" /> a été modifiée.</summary>
    </member>
    <member name="P:System.Diagnostics.Switch.Attributes">
      <summary vsli:raw="Gets the custom switch attributes defined in the application configuration file.">Obtient les attributs de commutateur personnalisés définis dans le fichier de configuration de l'application.</summary>
      <returns vsli:raw="A &lt;see cref=&quot;T:System.Collections.Specialized.StringDictionary&quot; /&gt; containing the case-insensitive custom attributes for the trace switch.">
        <see cref="T:System.Collections.Specialized.StringDictionary" /> qui contient les attributs personnalisés non sensibles à la casse pour le commutateur de trace.</returns>
    </member>
    <member name="P:System.Diagnostics.Switch.Description">
      <summary vsli:raw="Gets a description of the switch.">Obtient une description du commutateur.</summary>
      <returns vsli:raw="The description of the switch. The default value is an empty string (&quot;&quot;).">Description du commutateur. La valeur par défaut est une chaîne vide ("").</returns>
    </member>
    <member name="P:System.Diagnostics.Switch.DisplayName">
      <summary vsli:raw="Gets a name used to identify the switch.">Obtient un nom utilisé pour identifier le commutateur.</summary>
      <returns vsli:raw="The name used to identify the switch. The default value is an empty string (&quot;&quot;).">Nom utilisé pour identifier le commutateur. La valeur par défaut est une chaîne vide ("").</returns>
    </member>
    <member name="P:System.Diagnostics.Switch.SwitchSetting">
      <summary vsli:raw="Gets or sets the current setting for this switch.">Obtient ou définit le paramètre en cours pour ce commutateur.</summary>
      <returns vsli:raw="The current setting for this switch. The default is zero.">Paramètre en cours pour ce commutateur. La valeur par défaut est zéro.</returns>
    </member>
    <member name="P:System.Diagnostics.Switch.Value">
      <summary vsli:raw="Gets or sets the value of the switch.">Obtient ou définit la valeur du commutateur.</summary>
      <exception cref="T:System.Configuration.ConfigurationErrorsException" vsli:raw="The value is &lt;see langword=&quot;null&quot; /&gt;.  &#xA;  &#xA; -or-  &#xA;  &#xA; The value does not consist solely of an optional negative sign followed by a sequence of digits ranging from 0 to 9.  &#xA;  &#xA; -or-  &#xA;  &#xA; The value represents a number less than &lt;see cref=&quot;F:System.Int32.MinValue&quot;&gt;Int32.MinValue&lt;/see&gt; or greater than &lt;see cref=&quot;F:System.Int32.MaxValue&quot;&gt;Int32.MaxValue&lt;/see&gt;.">La valeur est <see langword="null" />.  
  
- ou - 
Valeur qui ne consiste pas uniquement d'un signe négatif facultatif suivi d'une séquence de chiffres comprise entre 0 et 9.  
  
- ou - 
La valeur représente un nombre inférieur à <see cref="F:System.Int32.MinValue" /> ou supérieur à <see cref="F:System.Int32.MaxValue" />.</exception>
      <returns vsli:raw="A string representing the value of the switch.">Chaîne qui représente la valeur du commutateur.</returns>
    </member>
    <member name="T:System.Diagnostics.SwitchAttribute">
      <summary vsli:raw="Identifies a switch used in an assembly, class, or member.">Identifie un commutateur utilisé dans un assembly, une classe ou un membre.</summary>
    </member>
    <member name="M:System.Diagnostics.SwitchAttribute.#ctor(System.String,System.Type)">
      <summary vsli:raw="Initializes a new instance of the &lt;see cref=&quot;T:System.Diagnostics.SwitchAttribute&quot; /&gt; class, specifying the name and the type of the switch.">Initialise une nouvelle instance de la classe <see cref="T:System.Diagnostics.SwitchAttribute" /> et spécifie le nom et le type du commutateur.</summary>
      <param name="switchName" vsli:raw="The display name of the switch.">Nom complet du commutateur.</param>
      <param name="switchType" vsli:raw="The type of the switch.">Type du commutateur.</param>
    </member>
    <member name="M:System.Diagnostics.SwitchAttribute.GetAll(System.Reflection.Assembly)">
      <summary vsli:raw="Returns all switch attributes for the specified assembly.">Retourne tous les attributs de commutateur pour l'assembly spécifié.</summary>
      <param name="assembly" vsli:raw="The assembly to check for switch attributes.">L'assembly dont vous recherchez les attributs de commutateur.</param>
      <exception cref="T:System.ArgumentNullException" vsli:raw="&lt;paramref name=&quot;assembly&quot; /&gt; is &lt;see langword=&quot;null&quot; /&gt;.">
        <paramref name="assembly" /> a la valeur <see langword="null" />.</exception>
      <returns vsli:raw="An array that contains all the switch attributes for the assembly.">Tableau qui contient tous les attributs de commutateur pour l'assembly.</returns>
    </member>
    <member name="P:System.Diagnostics.SwitchAttribute.SwitchDescription">
      <summary vsli:raw="Gets or sets the description of the switch.">Obtient ou définit la description du commutateur.</summary>
      <returns vsli:raw="The description of the switch.">Description du commutateur.</returns>
    </member>
    <member name="P:System.Diagnostics.SwitchAttribute.SwitchName">
      <summary vsli:raw="Gets or sets the display name of the switch.">Obtient ou définit le nom complet du commutateur.</summary>
      <exception cref="T:System.ArgumentNullException" vsli:raw="&lt;see cref=&quot;P:System.Diagnostics.SwitchAttribute.SwitchName&quot; /&gt; is set to &lt;see langword=&quot;null&quot; /&gt;.">
        <see cref="P:System.Diagnostics.SwitchAttribute.SwitchName" /> a la valeur <see langword="null" />.</exception>
      <exception cref="T:System.ArgumentException" vsli:raw="&lt;see cref=&quot;P:System.Diagnostics.SwitchAttribute.SwitchName&quot; /&gt; is set to an empty string.">
        <see cref="P:System.Diagnostics.SwitchAttribute.SwitchName" /> a la valeur d'une chaîne vide.</exception>
      <returns vsli:raw="The display name of the switch.">Nom complet du commutateur.</returns>
    </member>
    <member name="P:System.Diagnostics.SwitchAttribute.SwitchType">
      <summary vsli:raw="Gets or sets the type of the switch.">Obtient ou définit le type du commutateur.</summary>
      <exception cref="T:System.ArgumentNullException" vsli:raw="&lt;see cref=&quot;P:System.Diagnostics.SwitchAttribute.SwitchType&quot; /&gt; is set to &lt;see langword=&quot;null&quot; /&gt;.">
        <see cref="P:System.Diagnostics.SwitchAttribute.SwitchType" /> a la valeur <see langword="null" />.</exception>
      <returns vsli:raw="The type of the switch.">Type du commutateur.</returns>
    </member>
    <member name="T:System.Diagnostics.SwitchLevelAttribute">
      <summary vsli:raw="Identifies the level type for a switch.">Identifie le type de niveau pour un commutateur.</summary>
    </member>
    <member name="M:System.Diagnostics.SwitchLevelAttribute.#ctor(System.Type)">
      <summary vsli:raw="Initializes a new instance of the &lt;see cref=&quot;T:System.Diagnostics.SwitchLevelAttribute&quot; /&gt; class, specifying the type that determines whether a trace should be written.">Initialise une nouvelle instance de la classe <see cref="T:System.Diagnostics.SwitchLevelAttribute" /> et spécifie le type qui détermine si une trace doit être écrite.</summary>
      <param name="switchLevelType" vsli:raw="The &lt;see cref=&quot;T:System.Type&quot; /&gt; that determines whether a trace should be written.">
        <see cref="T:System.Type" /> qui détermine si une trace doit être écrite.</param>
    </member>
    <member name="P:System.Diagnostics.SwitchLevelAttribute.SwitchLevelType">
      <summary vsli:raw="Gets or sets the type that determines whether a trace should be written.">Obtient ou définit le type qui détermine si une trace doit être écrite.</summary>
      <exception cref="T:System.ArgumentNullException" vsli:raw="The set operation failed because the value is &lt;see langword=&quot;null&quot; /&gt;.">L'opération de définition a échoué car la valeur est <see langword="null" />.</exception>
      <returns vsli:raw="The &lt;see cref=&quot;T:System.Type&quot; /&gt; that determines whether a trace should be written.">
        <see cref="T:System.Type" /> qui détermine si une trace doit être écrite.</returns>
    </member>
    <member name="T:System.Diagnostics.Trace">
      <summary vsli:raw="Provides a set of methods and properties that help you trace the execution of your code. This class cannot be inherited.">Fournit un ensemble de méthodes et de propriétés qui vous permettent de tracer l'exécution de votre code. Cette classe ne peut pas être héritée.</summary>
    </member>
    <member name="M:System.Diagnostics.Trace.Assert(System.Boolean)">
      <summary vsli:raw="Checks for a condition; if the condition is &lt;see langword=&quot;false&quot; /&gt;, displays a message box that shows the call stack.">Vérifie une condition ; si la condition est <see langword="false" />, affiche une boîte de message qui montre la pile des appels.</summary>
      <param name="condition" vsli:raw="The conditional expression to evaluate. If the condition is &lt;see langword=&quot;true&quot; /&gt;, a failure message is not sent and the message box is not displayed.">Expression conditionnelle à évaluer. Si la condition est <see langword="true" />, aucun message d’échec n’est envoyé et la boîte de message ne s’affiche pas.</param>
    </member>
    <member name="M:System.Diagnostics.Trace.Assert(System.Boolean,System.String)">
      <summary vsli:raw="Checks for a condition; if the condition is &lt;see langword=&quot;false&quot; /&gt;, outputs a specified message and displays a message box that shows the call stack.">Vérifie une condition ; si la condition a la valeur <see langword="false" />, affiche un message spécifié et une boîte de message qui montre la pile des appels.</summary>
      <param name="condition" vsli:raw="The conditional expression to evaluate. If the condition is &lt;see langword=&quot;true&quot; /&gt;, the specified message is not sent and the message box is not displayed.">Expression conditionnelle à évaluer. Si la condition a la valeur <see langword="true" />, le message spécifié n’est pas envoyé et la boîte de message ne s’affiche pas.</param>
      <param name="message" vsli:raw="The message to send to the &lt;see cref=&quot;P:System.Diagnostics.Trace.Listeners&quot; /&gt; collection.">Message à envoyer à la collection <see cref="P:System.Diagnostics.Trace.Listeners" />.</param>
    </member>
    <member name="M:System.Diagnostics.Trace.Assert(System.Boolean,System.String,System.String)">
      <summary vsli:raw="Checks for a condition; if the condition is &lt;see langword=&quot;false&quot; /&gt;, outputs two specified messages and displays a message box that shows the call stack.">Vérifie une condition ; si la condition est <see langword="false" />, affiche deux messages spécifiés et une boîte de message qui montre la pile des appels.</summary>
      <param name="condition" vsli:raw="The conditional expression to evaluate. If the condition is &lt;see langword=&quot;true&quot; /&gt;, the specified messages are not sent and the message box is not displayed.">Expression conditionnelle à évaluer. Si la condition est <see langword="true" />, les messages spécifiés ne sont pas envoyés et la boîte de message ne s’affiche pas.</param>
      <param name="message" vsli:raw="The message to send to the &lt;see cref=&quot;P:System.Diagnostics.Trace.Listeners&quot; /&gt; collection.">Message à envoyer à la collection <see cref="P:System.Diagnostics.Trace.Listeners" />.</param>
      <param name="detailMessage" vsli:raw="The detailed message to send to the &lt;see cref=&quot;P:System.Diagnostics.Trace.Listeners&quot; /&gt; collection.">Message détaillé à envoyer à la collection <see cref="P:System.Diagnostics.Trace.Listeners" />.</param>
    </member>
    <member name="M:System.Diagnostics.Trace.Close">
      <summary vsli:raw="Flushes the output buffer, and then closes the &lt;see cref=&quot;P:System.Diagnostics.Trace.Listeners&quot; /&gt;.">Vide la mémoire tampon de sortie, puis ferme <see cref="P:System.Diagnostics.Trace.Listeners" />.</summary>
    </member>
    <member name="M:System.Diagnostics.Trace.Fail(System.String)">
      <summary vsli:raw="Emits the specified error message.">Émet le message d’erreur spécifié.</summary>
      <param name="message" vsli:raw="A message to emit.">Message à émettre.</param>
    </member>
    <member name="M:System.Diagnostics.Trace.Fail(System.String,System.String)">
      <summary vsli:raw="Emits an error message, and a detailed error message.">Émet un message d’erreur et un message d’erreur détaillé.</summary>
      <param name="message" vsli:raw="A message to emit.">Message à émettre.</param>
      <param name="detailMessage" vsli:raw="A detailed message to emit.">Message détaillé à émettre.</param>
    </member>
    <member name="M:System.Diagnostics.Trace.Flush">
      <summary vsli:raw="Flushes the output buffer, and causes buffered data to be written to the &lt;see cref=&quot;P:System.Diagnostics.Trace.Listeners&quot; /&gt;.">Vide la mémoire tampon de sortie et entraîne l’écriture des données mises en mémoire dans <see cref="P:System.Diagnostics.Trace.Listeners" />.</summary>
    </member>
    <member name="M:System.Diagnostics.Trace.Indent">
      <summary vsli:raw="Increases the current &lt;see cref=&quot;P:System.Diagnostics.Trace.IndentLevel&quot; /&gt; by one.">Augmente le <see cref="P:System.Diagnostics.Trace.IndentLevel" /> actuel d’une unité.</summary>
    </member>
    <member name="M:System.Diagnostics.Trace.Refresh">
      <summary vsli:raw="Refreshes the trace configuration data.">Actualise les données de configuration de suivi.</summary>
    </member>
    <member name="M:System.Diagnostics.Trace.TraceError(System.String)">
      <summary vsli:raw="Writes an error message to the trace listeners in the &lt;see cref=&quot;P:System.Diagnostics.Trace.Listeners&quot; /&gt; collection using the specified message.">Écrit un message d’erreur dans les écouteurs de suivi de la collection <see cref="P:System.Diagnostics.Trace.Listeners" /> à l’aide du message spécifié.</summary>
      <param name="message" vsli:raw="The informative message to write.">Message d'information à écrire.</param>
    </member>
    <member name="M:System.Diagnostics.Trace.TraceError(System.String,System.Object[])">
      <summary vsli:raw="Writes an error message to the trace listeners in the &lt;see cref=&quot;P:System.Diagnostics.Trace.Listeners&quot; /&gt; collection using the specified array of objects and formatting information.">Écrit un message d’erreur dans les écouteurs de suivi de la collection <see cref="P:System.Diagnostics.Trace.Listeners" /> à l’aide du tableau d’objets et des informations de mise en forme spécifiés.</summary>
      <param name="format" vsli:raw="A format string that contains zero or more format items, which correspond to objects in the &lt;paramref name=&quot;args&quot; /&gt; array.">Chaîne de format qui contient zéro élément de format ou plus, lesquels correspondent aux objets dans le tableau <paramref name="args" />.</param>
      <param name="args" vsli:raw="An &lt;see langword=&quot;object&quot; /&gt; array containing zero or more objects to format.">
        <see langword="object" /> Tableau qui contient zéro ou plusieurs objets à mettre en forme.</param>
    </member>
    <member name="M:System.Diagnostics.Trace.TraceInformation(System.String)">
      <summary vsli:raw="Writes an informational message to the trace listeners in the &lt;see cref=&quot;P:System.Diagnostics.Trace.Listeners&quot; /&gt; collection using the specified message.">Écrit un message d’information dans les écouteurs de la trace de la collection <see cref="P:System.Diagnostics.Trace.Listeners" /> à l’aide du message spécifié.</summary>
      <param name="message" vsli:raw="The informative message to write.">Message d'information à écrire.</param>
    </member>
    <member name="M:System.Diagnostics.Trace.TraceInformation(System.String,System.Object[])">
      <summary vsli:raw="Writes an informational message to the trace listeners in the &lt;see cref=&quot;P:System.Diagnostics.Trace.Listeners&quot; /&gt; collection using the specified array of objects and formatting information.">Écrit un message d’information dans les écouteurs de suivi de la collection <see cref="P:System.Diagnostics.Trace.Listeners" /> à l’aide du tableau d’objets et des informations de mise en forme spécifiés.</summary>
      <param name="format" vsli:raw="A format string that contains zero or more format items, which correspond to objects in the &lt;paramref name=&quot;args&quot; /&gt; array.">Chaîne de format qui contient zéro élément de format ou plus, lesquels correspondent aux objets dans le tableau <paramref name="args" />.</param>
      <param name="args" vsli:raw="An &lt;see langword=&quot;object&quot; /&gt; array containing zero or more objects to format.">
        <see langword="object" /> Tableau qui contient zéro ou plusieurs objets à mettre en forme.</param>
    </member>
    <member name="M:System.Diagnostics.Trace.TraceWarning(System.String)">
      <summary vsli:raw="Writes a warning message to the trace listeners in the &lt;see cref=&quot;P:System.Diagnostics.Trace.Listeners&quot; /&gt; collection using the specified message.">Écrit un message d’avertissement dans les écouteurs de la trace de la collection <see cref="P:System.Diagnostics.Trace.Listeners" /> à l’aide du message spécifié.</summary>
      <param name="message" vsli:raw="The informative message to write.">Message d'information à écrire.</param>
    </member>
    <member name="M:System.Diagnostics.Trace.TraceWarning(System.String,System.Object[])">
      <summary vsli:raw="Writes a warning message to the trace listeners in the &lt;see cref=&quot;P:System.Diagnostics.Trace.Listeners&quot; /&gt; collection using the specified array of objects and formatting information.">Écrit un message d’avertissement dans les écouteurs de suivi de la collection <see cref="P:System.Diagnostics.Trace.Listeners" /> à l’aide du tableau d’objets et des informations de mise en forme spécifiés.</summary>
      <param name="format" vsli:raw="A format string that contains zero or more format items, which correspond to objects in the &lt;paramref name=&quot;args&quot; /&gt; array.">Chaîne de format qui contient zéro élément de format ou plus, lesquels correspondent aux objets dans le tableau <paramref name="args" />.</param>
      <param name="args" vsli:raw="An &lt;see langword=&quot;object&quot; /&gt; array containing zero or more objects to format.">
        <see langword="object" /> Tableau qui contient zéro ou plusieurs objets à mettre en forme.</param>
    </member>
    <member name="M:System.Diagnostics.Trace.Unindent">
      <summary vsli:raw="Decreases the current &lt;see cref=&quot;P:System.Diagnostics.Trace.IndentLevel&quot; /&gt; by one.">Réduit la propriété <see cref="P:System.Diagnostics.Trace.IndentLevel" /> actuelle d’une unité.</summary>
    </member>
    <member name="M:System.Diagnostics.Trace.Write(System.Object)">
      <summary vsli:raw="Writes the value of the object's &lt;see cref=&quot;M:System.Object.ToString&quot; /&gt; method to the trace listeners in the &lt;see cref=&quot;P:System.Diagnostics.Trace.Listeners&quot; /&gt; collection.">Écrit la valeur de la méthode <see cref="M:System.Object.ToString" /> de l’objet dans les écouteurs de suivi de la collection <see cref="P:System.Diagnostics.Trace.Listeners" />.</summary>
      <param name="value" vsli:raw="An &lt;see cref=&quot;T:System.Object&quot; /&gt; whose name is sent to the &lt;see cref=&quot;P:System.Diagnostics.Trace.Listeners&quot; /&gt;.">
        <see cref="T:System.Object" /> dont le nom est envoyé à <see cref="P:System.Diagnostics.Trace.Listeners" />.</param>
    </member>
    <member name="M:System.Diagnostics.Trace.Write(System.Object,System.String)">
      <summary vsli:raw="Writes a category name and the value of the object's &lt;see cref=&quot;M:System.Object.ToString&quot; /&gt; method to the trace listeners in the &lt;see cref=&quot;P:System.Diagnostics.Trace.Listeners&quot; /&gt; collection.">Écrit le nom de la catégorie et la valeur de la méthode <see cref="M:System.Object.ToString" /> de l’objet dans les écouteurs de suivi de la collection <see cref="P:System.Diagnostics.Trace.Listeners" />.</summary>
      <param name="value" vsli:raw="An &lt;see cref=&quot;T:System.Object&quot; /&gt; name is sent to the &lt;see cref=&quot;P:System.Diagnostics.Trace.Listeners&quot; /&gt;.">Un nom <see cref="T:System.Object" /> est envoyé à <see cref="P:System.Diagnostics.Trace.Listeners" />.</param>
      <param name="category" vsli:raw="A category name used to organize the output.">Nom de catégorie utilisé pour organiser la sortie.</param>
    </member>
    <member name="M:System.Diagnostics.Trace.Write(System.String)">
      <summary vsli:raw="Writes a message to the trace listeners in the &lt;see cref=&quot;P:System.Diagnostics.Trace.Listeners&quot; /&gt; collection.">Écrit un message dans les écouteurs de suivi de la collection <see cref="P:System.Diagnostics.Trace.Listeners" />.</summary>
      <param name="message" vsli:raw="A message to write.">Message à écrire.</param>
    </member>
    <member name="M:System.Diagnostics.Trace.Write(System.String,System.String)">
      <summary vsli:raw="Writes a category name and a message to the trace listeners in the &lt;see cref=&quot;P:System.Diagnostics.Trace.Listeners&quot; /&gt; collection.">Écrit un nom de catégorie et un message dans les écouteurs Trace de la collection <see cref="P:System.Diagnostics.Trace.Listeners" />.</summary>
      <param name="message" vsli:raw="A message to write.">Message à écrire.</param>
      <param name="category" vsli:raw="A category name used to organize the output.">Nom de catégorie utilisé pour organiser la sortie.</param>
    </member>
    <member name="M:System.Diagnostics.Trace.WriteIf(System.Boolean,System.Object)">
      <summary vsli:raw="Writes the value of the object's &lt;see cref=&quot;M:System.Object.ToString&quot; /&gt; method to the trace listeners in the &lt;see cref=&quot;P:System.Diagnostics.Trace.Listeners&quot; /&gt; collection if a condition is &lt;see langword=&quot;true&quot; /&gt;.">Écrit la valeur de la méthode <see cref="M:System.Object.ToString" /> de l’objet dans les écouteurs de la trace de la collection <see cref="P:System.Diagnostics.Trace.Listeners" /> si une condition est <see langword="true" />.</summary>
      <param name="condition" vsli:raw="&lt;see langword=&quot;true&quot; /&gt; to cause a message to be written; otherwise, &lt;see langword=&quot;false&quot; /&gt;.">
        <see langword="true" /> pour provoquer l’écriture d’un message ; sinon, <see langword="false" />.</param>
      <param name="value" vsli:raw="An &lt;see cref=&quot;T:System.Object&quot; /&gt; whose name is sent to the &lt;see cref=&quot;P:System.Diagnostics.Trace.Listeners&quot; /&gt;.">
        <see cref="T:System.Object" /> dont le nom est envoyé à <see cref="P:System.Diagnostics.Trace.Listeners" />.</param>
    </member>
    <member name="M:System.Diagnostics.Trace.WriteIf(System.Boolean,System.Object,System.String)">
      <summary vsli:raw="Writes a category name and the value of the object's &lt;see cref=&quot;M:System.Object.ToString&quot; /&gt; method to the trace listeners in the &lt;see cref=&quot;P:System.Diagnostics.Trace.Listeners&quot; /&gt; collection if a condition is &lt;see langword=&quot;true&quot; /&gt;.">Écrit un nom de catégorie et la valeur de la méthode <see cref="M:System.Object.ToString" /> de l’objet dans les écouteurs de suivi de la collection <see cref="P:System.Diagnostics.Trace.Listeners" />, si une condition a la valeur <see langword="true" />.</summary>
      <param name="condition" vsli:raw="&lt;see langword=&quot;true&quot; /&gt; to cause a message to be written; otherwise, &lt;see langword=&quot;false&quot; /&gt;.">
        <see langword="true" /> pour provoquer l’écriture d’un message ; sinon, <see langword="false" />.</param>
      <param name="value" vsli:raw="An &lt;see cref=&quot;T:System.Object&quot; /&gt; whose name is sent to the &lt;see cref=&quot;P:System.Diagnostics.Trace.Listeners&quot; /&gt;.">
        <see cref="T:System.Object" /> dont le nom est envoyé à <see cref="P:System.Diagnostics.Trace.Listeners" />.</param>
      <param name="category" vsli:raw="A category name used to organize the output.">Nom de catégorie utilisé pour organiser la sortie.</param>
    </member>
    <member name="M:System.Diagnostics.Trace.WriteIf(System.Boolean,System.String)">
      <summary vsli:raw="Writes a message to the trace listeners in the &lt;see cref=&quot;P:System.Diagnostics.Trace.Listeners&quot; /&gt; collection if a condition is &lt;see langword=&quot;true&quot; /&gt;.">Écrit un message dans les écouteurs de suivi de la collection <see cref="P:System.Diagnostics.Trace.Listeners" /> si une condition est <see langword="true" />.</summary>
      <param name="condition" vsli:raw="&lt;see langword=&quot;true&quot; /&gt; to cause a message to be written; otherwise, &lt;see langword=&quot;false&quot; /&gt;.">
        <see langword="true" /> pour provoquer l’écriture d’un message ; sinon, <see langword="false" />.</param>
      <param name="message" vsli:raw="A message to write.">Message à écrire.</param>
    </member>
    <member name="M:System.Diagnostics.Trace.WriteIf(System.Boolean,System.String,System.String)">
      <summary vsli:raw="Writes a category name and message to the trace listeners in the &lt;see cref=&quot;P:System.Diagnostics.Trace.Listeners&quot; /&gt; collection if a condition is &lt;see langword=&quot;true&quot; /&gt;.">Écrit un nom de catégorie et un message dans les écouteurs de la trace de la collection <see cref="P:System.Diagnostics.Trace.Listeners" /> si une condition est <see langword="true" />.</summary>
      <param name="condition" vsli:raw="&lt;see langword=&quot;true&quot; /&gt; to cause a message to be written; otherwise, &lt;see langword=&quot;false&quot; /&gt;.">
        <see langword="true" /> pour provoquer l’écriture d’un message ; sinon, <see langword="false" />.</param>
      <param name="message" vsli:raw="A message to write.">Message à écrire.</param>
      <param name="category" vsli:raw="A category name used to organize the output.">Nom de catégorie utilisé pour organiser la sortie.</param>
    </member>
    <member name="M:System.Diagnostics.Trace.WriteLine(System.Object)">
      <summary vsli:raw="Writes the value of the object's &lt;see cref=&quot;M:System.Object.ToString&quot; /&gt; method to the trace listeners in the &lt;see cref=&quot;P:System.Diagnostics.Trace.Listeners&quot; /&gt; collection.">Écrit la valeur de la méthode <see cref="M:System.Object.ToString" /> de l’objet dans les écouteurs de suivi de la collection <see cref="P:System.Diagnostics.Trace.Listeners" />.</summary>
      <param name="value" vsli:raw="An &lt;see cref=&quot;T:System.Object&quot; /&gt; whose name is sent to the &lt;see cref=&quot;P:System.Diagnostics.Trace.Listeners&quot; /&gt;.">
        <see cref="T:System.Object" /> dont le nom est envoyé à <see cref="P:System.Diagnostics.Trace.Listeners" />.</param>
    </member>
    <member name="M:System.Diagnostics.Trace.WriteLine(System.Object,System.String)">
      <summary vsli:raw="Writes a category name and the value of the object's &lt;see cref=&quot;M:System.Object.ToString&quot; /&gt; method to the trace listeners in the &lt;see cref=&quot;P:System.Diagnostics.Trace.Listeners&quot; /&gt; collection.">Écrit le nom de la catégorie et la valeur de la méthode <see cref="M:System.Object.ToString" /> de l’objet dans les écouteurs de suivi de la collection <see cref="P:System.Diagnostics.Trace.Listeners" />.</summary>
      <param name="value" vsli:raw="An &lt;see cref=&quot;T:System.Object&quot; /&gt; whose name is sent to the &lt;see cref=&quot;P:System.Diagnostics.Trace.Listeners&quot; /&gt;.">
        <see cref="T:System.Object" /> dont le nom est envoyé à <see cref="P:System.Diagnostics.Trace.Listeners" />.</param>
      <param name="category" vsli:raw="A category name used to organize the output.">Nom de catégorie utilisé pour organiser la sortie.</param>
    </member>
    <member name="M:System.Diagnostics.Trace.WriteLine(System.String)">
      <summary vsli:raw="Writes a message to the trace listeners in the &lt;see cref=&quot;P:System.Diagnostics.Trace.Listeners&quot; /&gt; collection.">Écrit un message dans les écouteurs de suivi de la collection <see cref="P:System.Diagnostics.Trace.Listeners" />.</summary>
      <param name="message" vsli:raw="A message to write.">Message à écrire.</param>
    </member>
    <member name="M:System.Diagnostics.Trace.WriteLine(System.String,System.String)">
      <summary vsli:raw="Writes a category name and message to the trace listeners in the &lt;see cref=&quot;P:System.Diagnostics.Trace.Listeners&quot; /&gt; collection.">Écrit un nom de catégorie et un message dans les écouteurs de suivi de la collection <see cref="P:System.Diagnostics.Trace.Listeners" />.</summary>
      <param name="message" vsli:raw="A message to write.">Message à écrire.</param>
      <param name="category" vsli:raw="A category name used to organize the output.">Nom de catégorie utilisé pour organiser la sortie.</param>
    </member>
    <member name="M:System.Diagnostics.Trace.WriteLineIf(System.Boolean,System.Object)">
      <summary vsli:raw="Writes the value of the object's &lt;see cref=&quot;M:System.Object.ToString&quot; /&gt; method to the trace listeners in the &lt;see cref=&quot;P:System.Diagnostics.Trace.Listeners&quot; /&gt; collection if a condition is &lt;see langword=&quot;true&quot; /&gt;.">Écrit la valeur de la méthode <see cref="M:System.Object.ToString" /> de l’objet dans les écouteurs de la trace de la collection <see cref="P:System.Diagnostics.Trace.Listeners" /> si une condition est <see langword="true" />.</summary>
      <param name="condition" vsli:raw="&lt;see langword=&quot;true&quot; /&gt; to cause a message to be written; otherwise, &lt;see langword=&quot;false&quot; /&gt;.">
        <see langword="true" /> pour provoquer l’écriture d’un message ; sinon, <see langword="false" />.</param>
      <param name="value" vsli:raw="An &lt;see cref=&quot;T:System.Object&quot; /&gt; whose name is sent to the &lt;see cref=&quot;P:System.Diagnostics.Trace.Listeners&quot; /&gt;.">
        <see cref="T:System.Object" /> dont le nom est envoyé à <see cref="P:System.Diagnostics.Trace.Listeners" />.</param>
    </member>
    <member name="M:System.Diagnostics.Trace.WriteLineIf(System.Boolean,System.Object,System.String)">
      <summary vsli:raw="Writes a category name and the value of the object's &lt;see cref=&quot;M:System.Object.ToString&quot; /&gt; method to the trace listeners in the &lt;see cref=&quot;P:System.Diagnostics.Trace.Listeners&quot; /&gt; collection if a condition is &lt;see langword=&quot;true&quot; /&gt;.">Écrit un nom de catégorie et la valeur de la méthode <see cref="M:System.Object.ToString" /> de l’objet dans les écouteurs de suivi de la collection <see cref="P:System.Diagnostics.Trace.Listeners" />, si une condition a la valeur <see langword="true" />.</summary>
      <param name="condition" vsli:raw="&lt;see langword=&quot;true&quot; /&gt; to cause a message to be written; otherwise, &lt;see langword=&quot;false&quot; /&gt;.">
        <see langword="true" /> pour provoquer l’écriture d’un message ; sinon, <see langword="false" />.</param>
      <param name="value" vsli:raw="An &lt;see cref=&quot;T:System.Object&quot; /&gt; whose name is sent to the &lt;see cref=&quot;P:System.Diagnostics.Trace.Listeners&quot; /&gt;.">
        <see cref="T:System.Object" /> dont le nom est envoyé à <see cref="P:System.Diagnostics.Trace.Listeners" />.</param>
      <param name="category" vsli:raw="A category name used to organize the output.">Nom de catégorie utilisé pour organiser la sortie.</param>
    </member>
    <member name="M:System.Diagnostics.Trace.WriteLineIf(System.Boolean,System.String)">
      <summary vsli:raw="Writes a message to the trace listeners in the &lt;see cref=&quot;P:System.Diagnostics.Trace.Listeners&quot; /&gt; collection if a condition is &lt;see langword=&quot;true&quot; /&gt;.">Écrit un message dans les écouteurs de suivi de la collection <see cref="P:System.Diagnostics.Trace.Listeners" /> si une condition est <see langword="true" />.</summary>
      <param name="condition" vsli:raw="&lt;see langword=&quot;true&quot; /&gt; to cause a message to be written; otherwise, &lt;see langword=&quot;false&quot; /&gt;.">
        <see langword="true" /> pour provoquer l’écriture d’un message ; sinon, <see langword="false" />.</param>
      <param name="message" vsli:raw="A message to write.">Message à écrire.</param>
    </member>
    <member name="M:System.Diagnostics.Trace.WriteLineIf(System.Boolean,System.String,System.String)">
      <summary vsli:raw="Writes a category name and message to the trace listeners in the &lt;see cref=&quot;P:System.Diagnostics.Trace.Listeners&quot; /&gt; collection if a condition is &lt;see langword=&quot;true&quot; /&gt;.">Écrit un nom de catégorie et un message dans les écouteurs de la trace de la collection <see cref="P:System.Diagnostics.Trace.Listeners" /> si une condition est <see langword="true" />.</summary>
      <param name="condition" vsli:raw="&lt;see langword=&quot;true&quot; /&gt; to cause a message to be written; otherwise, &lt;see langword=&quot;false&quot; /&gt;.">
        <see langword="true" /> pour provoquer l’écriture d’un message ; sinon, <see langword="false" />.</param>
      <param name="message" vsli:raw="A message to write.">Message à écrire.</param>
      <param name="category" vsli:raw="A category name used to organize the output.">Nom de catégorie utilisé pour organiser la sortie.</param>
    </member>
    <member name="P:System.Diagnostics.Trace.AutoFlush">
      <summary vsli:raw="Gets or sets whether &lt;see cref=&quot;M:System.Diagnostics.Trace.Flush&quot; /&gt; should be called on the &lt;see cref=&quot;P:System.Diagnostics.Trace.Listeners&quot; /&gt; after every write.">Obtient ou définit une valeur indiquant si <see cref="M:System.Diagnostics.Trace.Flush" /> doit être appelé sur <see cref="P:System.Diagnostics.Trace.Listeners" /> après chaque écriture.</summary>
      <returns vsli:raw="&lt;see langword=&quot;true&quot; /&gt; if &lt;see cref=&quot;M:System.Diagnostics.Trace.Flush&quot; /&gt; is called on the &lt;see cref=&quot;P:System.Diagnostics.Trace.Listeners&quot; /&gt; after every write; otherwise, &lt;see langword=&quot;false&quot; /&gt;.">
        <see langword="true" /> si <see cref="M:System.Diagnostics.Trace.Flush" /> est appelé sur <see cref="P:System.Diagnostics.Trace.Listeners" /> après chaque écriture ; sinon, <see langword="false" />.</returns>
    </member>
    <member name="P:System.Diagnostics.Trace.CorrelationManager">
      <summary vsli:raw="Gets the correlation manager for the thread for this trace.">Obtient le gestionnaire de corrélation pour le thread de ce suivi.</summary>
      <returns vsli:raw="The &lt;see cref=&quot;T:System.Diagnostics.CorrelationManager&quot; /&gt; object associated with the thread for this trace.">Objet <see cref="T:System.Diagnostics.CorrelationManager" /> associé au thread de ce suivi.</returns>
    </member>
    <member name="P:System.Diagnostics.Trace.IndentLevel">
      <summary vsli:raw="Gets or sets the indent level.">Obtient ou définit le niveau de retrait.</summary>
      <returns vsli:raw="The indent level. The default is zero.">Niveau de retrait. La valeur par défaut est zéro.</returns>
    </member>
    <member name="P:System.Diagnostics.Trace.IndentSize">
      <summary vsli:raw="Gets or sets the number of spaces in an indent.">Obtient ou définit le nombre d'espaces dans un retrait.</summary>
      <returns vsli:raw="The number of spaces in an indent. The default is four.">Nombre d'espaces dans un retrait. La valeur par défaut est quatre.</returns>
    </member>
    <member name="P:System.Diagnostics.Trace.Listeners">
      <summary vsli:raw="Gets the collection of listeners that is monitoring the trace output.">Obtient la collection d’écouteurs qui surveillent la sortie de suivi.</summary>
      <returns vsli:raw="A &lt;see cref=&quot;T:System.Diagnostics.TraceListenerCollection&quot; /&gt; that represents a collection of type &lt;see cref=&quot;T:System.Diagnostics.TraceListener&quot; /&gt; monitoring the trace output.">
        <see cref="T:System.Diagnostics.TraceListenerCollection" /> qui représente une collection de types <see cref="T:System.Diagnostics.TraceListener" /> qui surveillent la sortie de suivi.</returns>
    </member>
    <member name="P:System.Diagnostics.Trace.UseGlobalLock">
      <summary vsli:raw="Gets or sets a value indicating whether the global lock should be used.">Obtient ou définit une valeur indiquant si le verrouillage global doit être utilisé.</summary>
      <returns vsli:raw="&lt;see langword=&quot;true&quot; /&gt; if the global lock is to be used; otherwise, &lt;see langword=&quot;false&quot; /&gt;. The default is &lt;see langword=&quot;true&quot; /&gt;.">
        <see langword="true" /> si le verrouillage global est utilisé ; sinon, <see langword="false" />. La valeur par défaut est <see langword="true" />.</returns>
    </member>
    <member name="T:System.Diagnostics.TraceEventCache">
      <summary vsli:raw="Provides trace event data specific to a thread and a process.">Fournit les données d'événement de trace spécifiques à un thread et un processus.</summary>
    </member>
    <member name="M:System.Diagnostics.TraceEventCache.#ctor">
      <summary vsli:raw="Initializes a new instance of the &lt;see cref=&quot;T:System.Diagnostics.TraceEventCache&quot; /&gt; class.">Initialise une nouvelle instance de la classe <see cref="T:System.Diagnostics.TraceEventCache" />.</summary>
    </member>
    <member name="P:System.Diagnostics.TraceEventCache.Callstack">
      <summary vsli:raw="Gets the call stack for the current thread.">Obtient la pile des appels du thread en cours.</summary>
      <returns vsli:raw="A string containing stack trace information. This value can be an empty string (&quot;&quot;).">Chaîne contenant les informations de trace de la pile. Cette valeur peut être une chaîne vide ("").</returns>
    </member>
    <member name="P:System.Diagnostics.TraceEventCache.DateTime">
      <summary vsli:raw="Gets the date and time at which the event trace occurred.">Obtient la date et l'heure auxquelles s'est produit le suivi de l'événement.</summary>
      <returns vsli:raw="A &lt;see cref=&quot;T:System.DateTime&quot; /&gt; structure whose value is a date and time expressed in Coordinated Universal Time (UTC).">Structure <see cref="T:System.DateTime" /> dont la valeur correspond à une date et une heure exprimées en temps universel (UTC).</returns>
    </member>
    <member name="P:System.Diagnostics.TraceEventCache.LogicalOperationStack">
      <summary vsli:raw="Gets the correlation data, contained in a stack.">Obtient les données de corrélation contenues dans une pile.</summary>
      <returns vsli:raw="A &lt;see cref=&quot;T:System.Collections.Stack&quot; /&gt; containing correlation data.">
        <see cref="T:System.Collections.Stack" /> qui contient les données de corrélation.</returns>
    </member>
    <member name="P:System.Diagnostics.TraceEventCache.ProcessId">
      <summary vsli:raw="Gets the unique identifier of the current process.">Obtient l'identificateur unique du processus en cours.</summary>
      <returns vsli:raw="The system-generated unique identifier of the current process.">Identificateur unique généré par système du processus actuel.</returns>
    </member>
    <member name="P:System.Diagnostics.TraceEventCache.ThreadId">
      <summary vsli:raw="Gets a unique identifier for the current managed thread.">Obtient un identificateur unique pour le thread managé actuel.</summary>
      <returns vsli:raw="A string that represents a unique integer identifier for this managed thread.">Chaîne qui représente un identificateur entier unique pour ce thread managé.</returns>
    </member>
    <member name="P:System.Diagnostics.TraceEventCache.Timestamp">
      <summary vsli:raw="Gets the current number of ticks in the timer mechanism.">Obtient le nombre actuel de graduations dans le mécanisme de minuterie.</summary>
      <returns vsli:raw="The tick counter value of the underlying timer mechanism.">Valeur du compteur du mécanisme de minuterie (Timer) sous-jacent.</returns>
    </member>
    <member name="T:System.Diagnostics.TraceEventType">
      <summary vsli:raw="Identifies the type of event that has caused the trace.">Identifie le type d'événement qui a provoqué la trace.</summary>
    </member>
    <member name="F:System.Diagnostics.TraceEventType.Critical">
      <summary vsli:raw="Fatal error or application crash.">Erreur irrécupérable ou panne d'application.</summary>
    </member>
    <member name="F:System.Diagnostics.TraceEventType.Error">
      <summary vsli:raw="Recoverable error.">Erreur récupérable.</summary>
    </member>
    <member name="F:System.Diagnostics.TraceEventType.Information">
      <summary vsli:raw="Informational message.">Message d’information.</summary>
    </member>
    <member name="F:System.Diagnostics.TraceEventType.Resume">
      <summary vsli:raw="Resumption of a logical operation.">Reprise d'une opération logique.</summary>
    </member>
    <member name="F:System.Diagnostics.TraceEventType.Start">
      <summary vsli:raw="Starting of a logical operation.">Démarrage d'une opération logique.</summary>
    </member>
    <member name="F:System.Diagnostics.TraceEventType.Stop">
      <summary vsli:raw="Stopping of a logical operation.">Arrêt d'une opération logique.</summary>
    </member>
    <member name="F:System.Diagnostics.TraceEventType.Suspend">
      <summary vsli:raw="Suspension of a logical operation.">Interruption d'une opération logique.</summary>
    </member>
    <member name="F:System.Diagnostics.TraceEventType.Transfer">
      <summary vsli:raw="Changing of correlation identity.">Changement d'identité de corrélation.</summary>
    </member>
    <member name="F:System.Diagnostics.TraceEventType.Verbose">
      <summary vsli:raw="Debugging trace.">Suivi de débogage.</summary>
    </member>
    <member name="F:System.Diagnostics.TraceEventType.Warning">
      <summary vsli:raw="Noncritical problem.">Problème non critique.</summary>
    </member>
    <member name="T:System.Diagnostics.TraceFilter">
      <summary vsli:raw="Provides the base class for trace filter implementations.">Fournit la classe de base pour les implémentations du filtre de la trace.</summary>
    </member>
    <member name="M:System.Diagnostics.TraceFilter.#ctor">
      <summary vsli:raw="Initializes a new instance of the &lt;see cref=&quot;T:System.Diagnostics.TraceFilter&quot; /&gt; class.">Initialise une nouvelle instance de la classe <see cref="T:System.Diagnostics.TraceFilter" />.</summary>
    </member>
    <member name="M:System.Diagnostics.TraceFilter.ShouldTrace(System.Diagnostics.TraceEventCache,System.String,System.Diagnostics.TraceEventType,System.Int32,System.String,System.Object[],System.Object,System.Object[])">
      <summary vsli:raw="When overridden in a derived class, determines whether the trace listener should trace the event.">En cas de substitution dans une classe dérivée, détermine si l'écouteur doit tracer l'événement.</summary>
      <param name="cache" vsli:raw="The &lt;see cref=&quot;T:System.Diagnostics.TraceEventCache&quot; /&gt; that contains information for the trace event.">
        <see cref="T:System.Diagnostics.TraceEventCache" /> qui contient des informations pour l'événement de trace.</param>
      <param name="source" vsli:raw="The name of the source.">Nom de la source.</param>
      <param name="eventType" vsli:raw="One of the &lt;see cref=&quot;T:System.Diagnostics.TraceEventType&quot; /&gt; values specifying the type of event that has caused the trace.">Une des valeurs de <see cref="T:System.Diagnostics.TraceEventType" /> spécifiant le type d'événement qui a déclenché la trace.</param>
      <param name="id" vsli:raw="A trace identifier number.">Numéro d'identification de trace.</param>
      <param name="formatOrMessage" vsli:raw="Either the format to use for writing an array of arguments specified by the &lt;paramref name=&quot;args&quot; /&gt; parameter, or a message to write.">Format à utiliser pour écrire un tableau d'arguments spécifié par le paramètre <paramref name="args" />, ou un message à écrire.</param>
      <param name="args" vsli:raw="An array of argument objects.">Tableau d'objets d'argument.</param>
      <param name="data1" vsli:raw="A trace data object.">Objet des données de trace.</param>
      <param name="data" vsli:raw="An array of trace data objects.">Tableau des objets de données de trace.</param>
      <returns vsli:raw="&lt;see langword=&quot;true&quot; /&gt; to trace the specified event; otherwise, &lt;see langword=&quot;false&quot; /&gt;.">
        <see langword="true" /> pour tracer l'événement spécifié ; sinon, <see langword="false" />.</returns>
    </member>
    <member name="T:System.Diagnostics.TraceLevel">
      <summary vsli:raw="Specifies what messages to output for the &lt;see cref=&quot;T:System.Diagnostics.Debug&quot; /&gt;, &lt;see cref=&quot;T:System.Diagnostics.Trace&quot; /&gt; and &lt;see cref=&quot;T:System.Diagnostics.TraceSwitch&quot; /&gt; classes.">Spécifie les messages à envoyer en sortie pour les classes <see cref="T:System.Diagnostics.Debug" />, <see cref="T:System.Diagnostics.Trace" /> et <see cref="T:System.Diagnostics.TraceSwitch" />.</summary>
    </member>
    <member name="F:System.Diagnostics.TraceLevel.Error">
      <summary vsli:raw="Output error-handling messages.">Envoie en sortie des messages de gestion des erreurs.</summary>
    </member>
    <member name="F:System.Diagnostics.TraceLevel.Info">
      <summary vsli:raw="Output informational messages, warnings, and error-handling messages.">Envoie des messages d'information, des avertissements ou des messages de gestion des erreurs.</summary>
    </member>
    <member name="F:System.Diagnostics.TraceLevel.Off">
      <summary vsli:raw="Output no tracing and debugging messages.">N'envoie en sortie aucun message de traçage ou de débogage.</summary>
    </member>
    <member name="F:System.Diagnostics.TraceLevel.Verbose">
      <summary vsli:raw="Output all debugging and tracing messages.">Envoie en sortie tous les messages de traçage et de débogage.</summary>
    </member>
    <member name="F:System.Diagnostics.TraceLevel.Warning">
      <summary vsli:raw="Output warnings and error-handling messages.">Envoie en sortie les messages d'avertissement et de gestion d'erreurs.</summary>
    </member>
    <member name="T:System.Diagnostics.TraceListener">
      <summary vsli:raw="Provides the &lt;see langword=&quot;abstract&quot; /&gt; base class for the listeners who monitor trace and debug output.">Fournit la classe de base <see langword="abstract" /> pour les écouteurs qui surveillent la sortie de trace et de débogage.</summary>
    </member>
    <member name="M:System.Diagnostics.TraceListener.#ctor">
      <summary vsli:raw="Initializes a new instance of the &lt;see cref=&quot;T:System.Diagnostics.TraceListener&quot; /&gt; class.">Initialise une nouvelle instance de la classe <see cref="T:System.Diagnostics.TraceListener" />.</summary>
    </member>
    <member name="M:System.Diagnostics.TraceListener.#ctor(System.String)">
      <summary vsli:raw="Initializes a new instance of the &lt;see cref=&quot;T:System.Diagnostics.TraceListener&quot; /&gt; class using the specified name as the listener.">Initialise une nouvelle instance de la classe <see cref="T:System.Diagnostics.TraceListener" /> avec le nom spécifié pour l'écouteur.</summary>
      <param name="name" vsli:raw="The name of the &lt;see cref=&quot;T:System.Diagnostics.TraceListener&quot; /&gt;.">Nom de l'objet <see cref="T:System.Diagnostics.TraceListener" />.</param>
    </member>
    <member name="M:System.Diagnostics.TraceListener.Close">
      <summary vsli:raw="When overridden in a derived class, closes the output stream so it no longer receives tracing or debugging output.">En cas de substitution dans une classe dérivée, ferme le flux de sortie pour qu'il ne reçoive plus la sortie de trace ou de débogage.</summary>
    </member>
    <member name="M:System.Diagnostics.TraceListener.Dispose">
      <summary vsli:raw="Releases all resources used by the &lt;see cref=&quot;T:System.Diagnostics.TraceListener&quot; /&gt;.">Libère toutes les ressources utilisées par <see cref="T:System.Diagnostics.TraceListener" />.</summary>
    </member>
    <member name="M:System.Diagnostics.TraceListener.Dispose(System.Boolean)">
      <summary vsli:raw="Releases the unmanaged resources used by the &lt;see cref=&quot;T:System.Diagnostics.TraceListener&quot; /&gt; and optionally releases the managed resources.">Libère les ressources non managées utilisées par <see cref="T:System.Diagnostics.TraceListener" /> et libère éventuellement les ressources managées.</summary>
      <param name="disposing" vsli:raw="&lt;see langword=&quot;true&quot; /&gt; to release both managed and unmanaged resources; &lt;see langword=&quot;false&quot; /&gt; to release only unmanaged resources.">
        <see langword="true" /> pour libérer les ressources managées et non managées ; <see langword="false" /> pour libérer uniquement les ressources non managées.</param>
    </member>
    <member name="M:System.Diagnostics.TraceListener.Fail(System.String)">
      <summary vsli:raw="Emits an error message to the listener you create when you implement the &lt;see cref=&quot;T:System.Diagnostics.TraceListener&quot; /&gt; class.">Émet un message d'erreur à l'écouteur que vous créez lors de l'implémentation de la classe <see cref="T:System.Diagnostics.TraceListener" />.</summary>
      <param name="message" vsli:raw="A message to emit.">Message à émettre.</param>
    </member>
    <member name="M:System.Diagnostics.TraceListener.Fail(System.String,System.String)">
      <summary vsli:raw="Emits an error message and a detailed error message to the listener you create when you implement the &lt;see cref=&quot;T:System.Diagnostics.TraceListener&quot; /&gt; class.">Émet un message d'erreur, ainsi qu'un message d'erreur détaillé, à l'écouteur que vous créez lors de l'implémentation de la classe <see cref="T:System.Diagnostics.TraceListener" />.</summary>
      <param name="message" vsli:raw="A message to emit.">Message à émettre.</param>
      <param name="detailMessage" vsli:raw="A detailed message to emit.">Message détaillé à émettre.</param>
    </member>
    <member name="M:System.Diagnostics.TraceListener.Flush">
      <summary vsli:raw="When overridden in a derived class, flushes the output buffer.">En cas de substitution dans une classe dérivée, vide la mémoire tampon de sortie.</summary>
    </member>
    <member name="M:System.Diagnostics.TraceListener.GetSupportedAttributes">
      <summary vsli:raw="Gets the custom attributes supported by the trace listener.">Obtient les attributs personnalisés pris en charge par l'écouteur de trace.</summary>
      <returns vsli:raw="A string array naming the custom attributes supported by the trace listener, or &lt;see langword=&quot;null&quot; /&gt; if there are no custom attributes.">Tableau de chaînes qui nomme les attributs personnalisés pris en charge par l'écouteur de trace, ou <see langword="null" /> s'il n'y a pas d'attributs personnalisés.</returns>
    </member>
    <member name="M:System.Diagnostics.TraceListener.TraceData(System.Diagnostics.TraceEventCache,System.String,System.Diagnostics.TraceEventType,System.Int32,System.Object)">
      <summary vsli:raw="Writes trace information, a data object and event information to the listener specific output.">Écrit les informations sur la trace, un objet de données et les informations sur les événements dans la sortie spécifique de l'écouteur.</summary>
      <param name="eventCache" vsli:raw="A &lt;see cref=&quot;T:System.Diagnostics.TraceEventCache&quot; /&gt; object that contains the current process ID, thread ID, and stack trace information.">Objet <see cref="T:System.Diagnostics.TraceEventCache" /> qui contient les informations actuelles sur l'ID de processus, l'ID de thread et la trace de la pile.</param>
      <param name="source" vsli:raw="A name used to identify the output, typically the name of the application that generated the trace event.">Nom utilisé pour identifier la sortie, généralement le nom de l'application qui a généré l'événement de trace.</param>
      <param name="eventType" vsli:raw="One of the &lt;see cref=&quot;T:System.Diagnostics.TraceEventType&quot; /&gt; values specifying the type of event that has caused the trace.">Une des valeurs de <see cref="T:System.Diagnostics.TraceEventType" /> spécifiant le type d'événement qui a déclenché la trace.</param>
      <param name="id" vsli:raw="A numeric identifier for the event.">Identificateur numérique pour l'événement.</param>
      <param name="data" vsli:raw="The trace data to emit.">Données de trace à émettre.</param>
    </member>
    <member name="M:System.Diagnostics.TraceListener.TraceData(System.Diagnostics.TraceEventCache,System.String,System.Diagnostics.TraceEventType,System.Int32,System.Object[])">
      <summary vsli:raw="Writes trace information, an array of data objects and event information to the listener specific output.">Écrit les informations sur la trace, un tableau d'objets de données et les informations sur les événements dans la sortie spécifique de l'écouteur.</summary>
      <param name="eventCache" vsli:raw="A &lt;see cref=&quot;T:System.Diagnostics.TraceEventCache&quot; /&gt; object that contains the current process ID, thread ID, and stack trace information.">Objet <see cref="T:System.Diagnostics.TraceEventCache" /> qui contient les informations actuelles sur l'ID de processus, l'ID de thread et la trace de la pile.</param>
      <param name="source" vsli:raw="A name used to identify the output, typically the name of the application that generated the trace event.">Nom utilisé pour identifier la sortie, généralement le nom de l'application qui a généré l'événement de trace.</param>
      <param name="eventType" vsli:raw="One of the &lt;see cref=&quot;T:System.Diagnostics.TraceEventType&quot; /&gt; values specifying the type of event that has caused the trace.">Une des valeurs de <see cref="T:System.Diagnostics.TraceEventType" /> spécifiant le type d'événement qui a déclenché la trace.</param>
      <param name="id" vsli:raw="A numeric identifier for the event.">Identificateur numérique pour l'événement.</param>
      <param name="data" vsli:raw="An array of objects to emit as data.">Tableau d'objets à émettre comme données.</param>
    </member>
    <member name="M:System.Diagnostics.TraceListener.TraceEvent(System.Diagnostics.TraceEventCache,System.String,System.Diagnostics.TraceEventType,System.Int32)">
      <summary vsli:raw="Writes trace and event information to the listener specific output.">Écrit les informations sur la trace et les événements dans la sortie spécifique de l'écouteur.</summary>
      <param name="eventCache" vsli:raw="A &lt;see cref=&quot;T:System.Diagnostics.TraceEventCache&quot; /&gt; object that contains the current process ID, thread ID, and stack trace information.">Objet <see cref="T:System.Diagnostics.TraceEventCache" /> qui contient les informations actuelles sur l'ID de processus, l'ID de thread et la trace de la pile.</param>
      <param name="source" vsli:raw="A name used to identify the output, typically the name of the application that generated the trace event.">Nom utilisé pour identifier la sortie, généralement le nom de l'application qui a généré l'événement de trace.</param>
      <param name="eventType" vsli:raw="One of the &lt;see cref=&quot;T:System.Diagnostics.TraceEventType&quot; /&gt; values specifying the type of event that has caused the trace.">Une des valeurs de <see cref="T:System.Diagnostics.TraceEventType" /> spécifiant le type d'événement qui a déclenché la trace.</param>
      <param name="id" vsli:raw="A numeric identifier for the event.">Identificateur numérique pour l'événement.</param>
    </member>
    <member name="M:System.Diagnostics.TraceListener.TraceEvent(System.Diagnostics.TraceEventCache,System.String,System.Diagnostics.TraceEventType,System.Int32,System.String)">
      <summary vsli:raw="Writes trace information, a message, and event information to the listener specific output.">Écrit les informations sur la trace, un message et les informations sur les événements dans la sortie spécifique de l'écouteur.</summary>
      <param name="eventCache" vsli:raw="A &lt;see cref=&quot;T:System.Diagnostics.TraceEventCache&quot; /&gt; object that contains the current process ID, thread ID, and stack trace information.">Objet <see cref="T:System.Diagnostics.TraceEventCache" /> qui contient les informations actuelles sur l'ID de processus, l'ID de thread et la trace de la pile.</param>
      <param name="source" vsli:raw="A name used to identify the output, typically the name of the application that generated the trace event.">Nom utilisé pour identifier la sortie, généralement le nom de l'application qui a généré l'événement de trace.</param>
      <param name="eventType" vsli:raw="One of the &lt;see cref=&quot;T:System.Diagnostics.TraceEventType&quot; /&gt; values specifying the type of event that has caused the trace.">Une des valeurs de <see cref="T:System.Diagnostics.TraceEventType" /> spécifiant le type d'événement qui a déclenché la trace.</param>
      <param name="id" vsli:raw="A numeric identifier for the event.">Identificateur numérique pour l'événement.</param>
      <param name="message" vsli:raw="A message to write.">Message à écrire.</param>
    </member>
    <member name="M:System.Diagnostics.TraceListener.TraceEvent(System.Diagnostics.TraceEventCache,System.String,System.Diagnostics.TraceEventType,System.Int32,System.String,System.Object[])">
      <summary vsli:raw="Writes trace information, a formatted array of objects and event information to the listener specific output.">Écrit les informations sur la trace, un tableau d'objets mis en forme et les informations sur les événements dans la sortie spécifique de l'écouteur.</summary>
      <param name="eventCache" vsli:raw="A &lt;see cref=&quot;T:System.Diagnostics.TraceEventCache&quot; /&gt; object that contains the current process ID, thread ID, and stack trace information.">Objet <see cref="T:System.Diagnostics.TraceEventCache" /> qui contient les informations actuelles sur l'ID de processus, l'ID de thread et la trace de la pile.</param>
      <param name="source" vsli:raw="A name used to identify the output, typically the name of the application that generated the trace event.">Nom utilisé pour identifier la sortie, généralement le nom de l'application qui a généré l'événement de trace.</param>
      <param name="eventType" vsli:raw="One of the &lt;see cref=&quot;T:System.Diagnostics.TraceEventType&quot; /&gt; values specifying the type of event that has caused the trace.">Une des valeurs de <see cref="T:System.Diagnostics.TraceEventType" /> spécifiant le type d'événement qui a déclenché la trace.</param>
      <param name="id" vsli:raw="A numeric identifier for the event.">Identificateur numérique pour l'événement.</param>
      <param name="format" vsli:raw="A format string that contains zero or more format items, which correspond to objects in the &lt;paramref name=&quot;args&quot; /&gt; array.">Chaîne de format qui contient zéro élément de format ou plus, lesquels correspondent aux objets dans le tableau <paramref name="args" />.</param>
      <param name="args" vsli:raw="An &lt;see langword=&quot;object&quot; /&gt; array containing zero or more objects to format.">
        <see langword="object" /> Tableau qui contient zéro ou plusieurs objets à mettre en forme.</param>
    </member>
    <member name="M:System.Diagnostics.TraceListener.TraceTransfer(System.Diagnostics.TraceEventCache,System.String,System.Int32,System.String,System.Guid)">
      <summary vsli:raw="Writes trace information, a message, a related activity identity and event information to the listener specific output.">Écrit les informations sur la trace, un message, une identité d'activité connexe et les informations sur les événements dans la sortie spécifique de l'écouteur.</summary>
      <param name="eventCache" vsli:raw="A &lt;see cref=&quot;T:System.Diagnostics.TraceEventCache&quot; /&gt; object that contains the current process ID, thread ID, and stack trace information.">Objet <see cref="T:System.Diagnostics.TraceEventCache" /> qui contient les informations actuelles sur l'ID de processus, l'ID de thread et la trace de la pile.</param>
      <param name="source" vsli:raw="A name used to identify the output, typically the name of the application that generated the trace event.">Nom utilisé pour identifier la sortie, généralement le nom de l'application qui a généré l'événement de trace.</param>
      <param name="id" vsli:raw="A numeric identifier for the event.">Identificateur numérique pour l'événement.</param>
      <param name="message" vsli:raw="A message to write.">Message à écrire.</param>
      <param name="relatedActivityId" vsli:raw="A &lt;see cref=&quot;T:System.Guid&quot; /&gt; object identifying a related activity.">Objet <see cref="T:System.Guid" /> identifiant une activité connexe.</param>
    </member>
    <member name="M:System.Diagnostics.TraceListener.Write(System.Object)">
      <summary vsli:raw="Writes the value of the object's &lt;see cref=&quot;M:System.Object.ToString&quot; /&gt; method to the listener you create when you implement the &lt;see cref=&quot;T:System.Diagnostics.TraceListener&quot; /&gt; class.">Écrit la valeur de la méthode <see cref="M:System.Object.ToString" /> de l'objet dans l'écouteur que vous créez lors de l'implémentation de la classe <see cref="T:System.Diagnostics.TraceListener" />.</summary>
      <param name="o" vsli:raw="An &lt;see cref=&quot;T:System.Object&quot; /&gt; whose fully qualified class name you want to write.">
        <see cref="T:System.Object" /> dont vous voulez écrire le nom de classe complet.</param>
    </member>
    <member name="M:System.Diagnostics.TraceListener.Write(System.Object,System.String)">
      <summary vsli:raw="Writes a category name and the value of the object's &lt;see cref=&quot;M:System.Object.ToString&quot; /&gt; method to the listener you create when you implement the &lt;see cref=&quot;T:System.Diagnostics.TraceListener&quot; /&gt; class.">Écrit un nom de catégorie ou la valeur de la méthode <see cref="M:System.Object.ToString" /> de l'objet dans l'écouteur que vous créez lors de l'implémentation de la classe <see cref="T:System.Diagnostics.TraceListener" />.</summary>
      <param name="o" vsli:raw="An &lt;see cref=&quot;T:System.Object&quot; /&gt; whose fully qualified class name you want to write.">
        <see cref="T:System.Object" /> dont vous voulez écrire le nom de classe complet.</param>
      <param name="category" vsli:raw="A category name used to organize the output.">Nom de catégorie utilisé pour organiser la sortie.</param>
    </member>
    <member name="M:System.Diagnostics.TraceListener.Write(System.String)">
      <summary vsli:raw="When overridden in a derived class, writes the specified message to the listener you create in the derived class.">En cas de substitution dans une classe dérivée, écrit le message spécifié dans l'écouteur que vous créez dans la classe dérivée.</summary>
      <param name="message" vsli:raw="A message to write.">Message à écrire.</param>
    </member>
    <member name="M:System.Diagnostics.TraceListener.Write(System.String,System.String)">
      <summary vsli:raw="Writes a category name and a message to the listener you create when you implement the &lt;see cref=&quot;T:System.Diagnostics.TraceListener&quot; /&gt; class.">Écrit un nom de catégorie et un message dans l'écouteur que vous créez lors de l'implémentation de la classe <see cref="T:System.Diagnostics.TraceListener" />.</summary>
      <param name="message" vsli:raw="A message to write.">Message à écrire.</param>
      <param name="category" vsli:raw="A category name used to organize the output.">Nom de catégorie utilisé pour organiser la sortie.</param>
    </member>
    <member name="M:System.Diagnostics.TraceListener.WriteIndent">
      <summary vsli:raw="Writes the indent to the listener you create when you implement this class, and resets the &lt;see cref=&quot;P:System.Diagnostics.TraceListener.NeedIndent&quot; /&gt; property to &lt;see langword=&quot;false&quot; /&gt;.">Écrit la mise en retrait dans l'écouteur que vous créez lors de l'implémentation de cette classe et rétablit la valeur <see langword="false" /> à la propriété <see cref="P:System.Diagnostics.TraceListener.NeedIndent" />.</summary>
    </member>
    <member name="M:System.Diagnostics.TraceListener.WriteLine(System.Object)">
      <summary vsli:raw="Writes the value of the object's &lt;see cref=&quot;M:System.Object.ToString&quot; /&gt; method to the listener you create when you implement the &lt;see cref=&quot;T:System.Diagnostics.TraceListener&quot; /&gt; class, followed by a line terminator.">Écrit la valeur de la méthode <see cref="M:System.Object.ToString" /> de l'objet dans l'écouteur que vous créez lors de l'implémentation de la classe <see cref="T:System.Diagnostics.TraceListener" />, suivie d'une marque de fin de ligne.</summary>
      <param name="o" vsli:raw="An &lt;see cref=&quot;T:System.Object&quot; /&gt; whose fully qualified class name you want to write.">
        <see cref="T:System.Object" /> dont vous voulez écrire le nom de classe complet.</param>
    </member>
    <member name="M:System.Diagnostics.TraceListener.WriteLine(System.Object,System.String)">
      <summary vsli:raw="Writes a category name and the value of the object's &lt;see cref=&quot;M:System.Object.ToString&quot; /&gt; method to the listener you create when you implement the &lt;see cref=&quot;T:System.Diagnostics.TraceListener&quot; /&gt; class, followed by a line terminator.">Écrit un nom de catégorie ou la valeur de la méthode <see cref="M:System.Object.ToString" /> de l'objet dans l'écouteur que vous créez lors de l'implémentation de la classe <see cref="T:System.Diagnostics.TraceListener" />, suivis d'une marque de fin de ligne.</summary>
      <param name="o" vsli:raw="An &lt;see cref=&quot;T:System.Object&quot; /&gt; whose fully qualified class name you want to write.">
        <see cref="T:System.Object" /> dont vous voulez écrire le nom de classe complet.</param>
      <param name="category" vsli:raw="A category name used to organize the output.">Nom de catégorie utilisé pour organiser la sortie.</param>
    </member>
    <member name="M:System.Diagnostics.TraceListener.WriteLine(System.String)">
      <summary vsli:raw="When overridden in a derived class, writes a message to the listener you create in the derived class, followed by a line terminator.">En cas de substitution dans une classe dérivée, écrit un message dans l'écouteur que vous créez dans la classe dérivée, suivi d'une marque de fin de ligne.</summary>
      <param name="message" vsli:raw="A message to write.">Message à écrire.</param>
    </member>
    <member name="M:System.Diagnostics.TraceListener.WriteLine(System.String,System.String)">
      <summary vsli:raw="Writes a category name and a message to the listener you create when you implement the &lt;see cref=&quot;T:System.Diagnostics.TraceListener&quot; /&gt; class, followed by a line terminator.">Écrit un nom de catégorie ou un message dans l'écouteur que vous créez lors de l'implémentation de la classe <see cref="T:System.Diagnostics.TraceListener" />, suivis d'une marque de fin de ligne.</summary>
      <param name="message" vsli:raw="A message to write.">Message à écrire.</param>
      <param name="category" vsli:raw="A category name used to organize the output.">Nom de catégorie utilisé pour organiser la sortie.</param>
    </member>
    <member name="P:System.Diagnostics.TraceListener.Attributes">
      <summary vsli:raw="Gets the custom trace listener attributes defined in the application configuration file.">Obtient les attributs d'écouteur de trace personnalisés définis dans le fichier de configuration de l'application.</summary>
      <returns vsli:raw="A &lt;see cref=&quot;T:System.Collections.Specialized.StringDictionary&quot; /&gt; containing the custom attributes for the trace listener.">
        <see cref="T:System.Collections.Specialized.StringDictionary" /> qui contient les attributs personnalisés pour l'écouteur de trace.</returns>
    </member>
    <member name="P:System.Diagnostics.TraceListener.Filter">
      <summary vsli:raw="Gets or sets the trace filter for the trace listener.">Obtient ou définit le filtre de trace pour l’écouteur de la trace.</summary>
      <returns vsli:raw="An object derived from the &lt;see cref=&quot;T:System.Diagnostics.TraceFilter&quot; /&gt; base class.">Objet dérivé de la classe de base <see cref="T:System.Diagnostics.TraceFilter" />.</returns>
    </member>
    <member name="P:System.Diagnostics.TraceListener.IndentLevel">
      <summary vsli:raw="Gets or sets the indent level.">Obtient ou définit le niveau de retrait.</summary>
      <returns vsli:raw="The indent level. The default is zero.">Niveau de retrait. La valeur par défaut est zéro.</returns>
    </member>
    <member name="P:System.Diagnostics.TraceListener.IndentSize">
      <summary vsli:raw="Gets or sets the number of spaces in an indent.">Obtient ou définit le nombre d'espaces dans un retrait.</summary>
      <exception cref="T:System.ArgumentOutOfRangeException" vsli:raw="Set operation failed because the value is less than zero.">L'opération ensembliste a échoué car la valeur est inférieure à zéro.</exception>
      <returns vsli:raw="The number of spaces in an indent. The default is four spaces.">Nombre d'espaces dans un retrait. La valeur par défaut est quatre espaces.</returns>
    </member>
    <member name="P:System.Diagnostics.TraceListener.IsThreadSafe">
      <summary vsli:raw="Gets a value indicating whether the trace listener is thread safe.">Obtient une valeur qui indique si l'écouteur de trace est thread-safe.</summary>
      <returns vsli:raw="&lt;see langword=&quot;true&quot; /&gt; if the trace listener is thread safe; otherwise, &lt;see langword=&quot;false&quot; /&gt;. The default is &lt;see langword=&quot;false&quot; /&gt;.">
        <see langword="true" /> si l'écouteur de trace est thread-safe ; sinon, <see langword="false" />. La valeur par défaut est <see langword="false" />.</returns>
    </member>
    <member name="P:System.Diagnostics.TraceListener.Name">
      <summary vsli:raw="Gets or sets a name for this &lt;see cref=&quot;T:System.Diagnostics.TraceListener&quot; /&gt;.">Obtient ou définit un nom pour ce <see cref="T:System.Diagnostics.TraceListener" />.</summary>
      <returns vsli:raw="A name for this &lt;see cref=&quot;T:System.Diagnostics.TraceListener&quot; /&gt;. The default is an empty string (&quot;&quot;).">Nom pour ce <see cref="T:System.Diagnostics.TraceListener" />. La valeur par défaut est une chaîne vide ("").</returns>
    </member>
    <member name="P:System.Diagnostics.TraceListener.NeedIndent">
      <summary vsli:raw="Gets or sets a value indicating whether to indent the output.">Obtient ou définit une valeur indiquant si la sortie doit être mise en retrait.</summary>
      <returns vsli:raw="&lt;see langword=&quot;true&quot; /&gt; if the output should be indented; otherwise, &lt;see langword=&quot;false&quot; /&gt;.">
        <see langword="true" /> si la sortie doit être mise en retrait ; sinon, <see langword="false" />.</returns>
    </member>
    <member name="P:System.Diagnostics.TraceListener.TraceOutputOptions">
      <summary vsli:raw="Gets or sets the trace output options.">Obtient ou définit les options de sortie de trace.</summary>
      <exception cref="T:System.ArgumentOutOfRangeException" vsli:raw="Set operation failed because the value is invalid.">L'opération ensembliste a échoué car la valeur n'est pas valide.</exception>
      <returns vsli:raw="A bitwise combination of the enumeration values. The default is &lt;see cref=&quot;F:System.Diagnostics.TraceOptions.None&quot; /&gt;.">Combinaison d'opérations de bits des valeurs d'énumération. La valeur par défaut est <see cref="F:System.Diagnostics.TraceOptions.None" />.</returns>
    </member>
    <member name="T:System.Diagnostics.TraceListenerCollection">
      <summary vsli:raw="Provides a thread-safe list of &lt;see cref=&quot;T:System.Diagnostics.TraceListener&quot; /&gt; objects.">Fournit une liste thread-safe d’objets <see cref="T:System.Diagnostics.TraceListener" />.</summary>
    </member>
    <member name="M:System.Diagnostics.TraceListenerCollection.Add(System.Diagnostics.TraceListener)">
      <summary vsli:raw="Adds a &lt;see cref=&quot;T:System.Diagnostics.TraceListener&quot; /&gt; to the list.">Ajoute <see cref="T:System.Diagnostics.TraceListener" /> à la liste.</summary>
      <param name="listener" vsli:raw="A &lt;see cref=&quot;T:System.Diagnostics.TraceListener&quot; /&gt; to add to the list.">
        <see cref="T:System.Diagnostics.TraceListener" /> à ajouter à la liste.</param>
      <returns vsli:raw="The position at which the new listener was inserted.">Position au niveau de laquelle le nouvel écouteur a été inséré.</returns>
    </member>
    <member name="M:System.Diagnostics.TraceListenerCollection.AddRange(System.Diagnostics.TraceListener[])">
      <summary vsli:raw="Adds an array of &lt;see cref=&quot;T:System.Diagnostics.TraceListener&quot; /&gt; objects to the list.">Ajoute un tableau d'objets <see cref="T:System.Diagnostics.TraceListener" /> à la liste.</summary>
      <param name="value" vsli:raw="An array of &lt;see cref=&quot;T:System.Diagnostics.TraceListener&quot; /&gt; objects to add to the list.">Tableau d'objets <see cref="T:System.Diagnostics.TraceListener" /> à ajouter à la liste.</param>
      <exception cref="T:System.ArgumentNullException" vsli:raw="&lt;paramref name=&quot;value&quot; /&gt; is &lt;see langword=&quot;null&quot; /&gt;.">
        <paramref name="value" /> a la valeur <see langword="null" />.</exception>
    </member>
    <member name="M:System.Diagnostics.TraceListenerCollection.AddRange(System.Diagnostics.TraceListenerCollection)">
      <summary vsli:raw="Adds the contents of another &lt;see cref=&quot;T:System.Diagnostics.TraceListenerCollection&quot; /&gt; to the list.">Ajoute le contenu d'un autre <see cref="T:System.Diagnostics.TraceListenerCollection" /> à la liste.</summary>
      <param name="value" vsli:raw="Another &lt;see cref=&quot;T:System.Diagnostics.TraceListenerCollection&quot; /&gt; whose contents are added to the list.">Autre <see cref="T:System.Diagnostics.TraceListenerCollection" /> dont le contenu est ajouté à la liste.</param>
      <exception cref="T:System.ArgumentNullException" vsli:raw="&lt;paramref name=&quot;value&quot; /&gt; is &lt;see langword=&quot;null&quot; /&gt;.">
        <paramref name="value" /> a la valeur <see langword="null" />.</exception>
    </member>
    <member name="M:System.Diagnostics.TraceListenerCollection.Clear">
      <summary vsli:raw="Clears all the listeners from the list.">Efface tous les écouteurs de la liste.</summary>
    </member>
    <member name="M:System.Diagnostics.TraceListenerCollection.Contains(System.Diagnostics.TraceListener)">
      <summary vsli:raw="Checks whether the list contains the specified listener.">Vérifie si la liste contient l'écouteur spécifié.</summary>
      <param name="listener" vsli:raw="A &lt;see cref=&quot;T:System.Diagnostics.TraceListener&quot; /&gt; to find in the list.">
        <see cref="T:System.Diagnostics.TraceListener" /> à trouver dans la liste.</param>
      <returns vsli:raw="&lt;see langword=&quot;true&quot; /&gt; if the listener is in the list; otherwise, &lt;see langword=&quot;false&quot; /&gt;.">
        <see langword="true" /> si l'écouteur est dans la liste ; sinon, <see langword="false" />.</returns>
    </member>
    <member name="M:System.Diagnostics.TraceListenerCollection.CopyTo(System.Diagnostics.TraceListener[],System.Int32)">
      <summary vsli:raw="Copies a section of the current &lt;see cref=&quot;T:System.Diagnostics.TraceListenerCollection&quot; /&gt; list to the specified array at the specified index.">Copie une section de la liste <see cref="T:System.Diagnostics.TraceListenerCollection" /> en cours vers le tableau spécifié, à l'index spécifié.</summary>
      <param name="listeners" vsli:raw="An array of type &lt;see cref=&quot;T:System.Array&quot; /&gt; to copy the elements into.">Tableau de type <see cref="T:System.Array" /> dans lequel les éléments doivent être copiés.</param>
      <param name="index" vsli:raw="The starting index number in the current list to copy from.">Numéro d'index de début dans la liste en cours à partir duquel la copie doit être effectuée.</param>
    </member>
    <member name="M:System.Diagnostics.TraceListenerCollection.GetEnumerator">
      <summary vsli:raw="Gets an enumerator for this list.">Obtient un énumérateur pour cette liste.</summary>
      <returns vsli:raw="An enumerator of type &lt;see cref=&quot;T:System.Collections.IEnumerator&quot; /&gt;.">Énumérateur de type <see cref="T:System.Collections.IEnumerator" />.</returns>
    </member>
    <member name="M:System.Diagnostics.TraceListenerCollection.IndexOf(System.Diagnostics.TraceListener)">
      <summary vsli:raw="Gets the index of the specified listener.">Obtient l'index de l'écouteur spécifié.</summary>
      <param name="listener" vsli:raw="A &lt;see cref=&quot;T:System.Diagnostics.TraceListener&quot; /&gt; to find in the list.">
        <see cref="T:System.Diagnostics.TraceListener" /> à trouver dans la liste.</param>
      <returns vsli:raw="The index of the listener, if it can be found in the list; otherwise, -1.">Index de l'écouteur, s'il se trouve dans la liste ; sinon, -1.</returns>
    </member>
    <member name="M:System.Diagnostics.TraceListenerCollection.Insert(System.Int32,System.Diagnostics.TraceListener)">
      <summary vsli:raw="Inserts the listener at the specified index.">Insère l'écouteur au niveau de l'index spécifié.</summary>
      <param name="index" vsli:raw="The position in the list to insert the new &lt;see cref=&quot;T:System.Diagnostics.TraceListener&quot; /&gt;.">Position dans la liste où le nouveau <see cref="T:System.Diagnostics.TraceListener" /> doit être inséré.</param>
      <param name="listener" vsli:raw="A &lt;see cref=&quot;T:System.Diagnostics.TraceListener&quot; /&gt; to insert in the list.">
        <see cref="T:System.Diagnostics.TraceListener" /> à insérer dans la liste.</param>
      <exception cref="T:System.ArgumentOutOfRangeException" vsli:raw="The &lt;paramref name=&quot;index&quot; /&gt; is not a valid index in the list.">
        <paramref name="index" /> n'est pas un index valide dans la liste.</exception>
      <exception cref="T:System.ArgumentException" vsli:raw="&lt;paramref name=&quot;listener&quot; /&gt; is &lt;see langword=&quot;null&quot; /&gt;.">
        <paramref name="listener" /> a la valeur <see langword="null" />.</exception>
    </member>
    <member name="M:System.Diagnostics.TraceListenerCollection.Remove(System.Diagnostics.TraceListener)">
      <summary vsli:raw="Removes from the collection the specified &lt;see cref=&quot;T:System.Diagnostics.TraceListener&quot; /&gt;.">Supprime le <see cref="T:System.Diagnostics.TraceListener" /> spécifié de la collection.</summary>
      <param name="listener" vsli:raw="A &lt;see cref=&quot;T:System.Diagnostics.TraceListener&quot; /&gt; to remove from the list.">
        <see cref="T:System.Diagnostics.TraceListener" /> à supprimer de la liste.</param>
    </member>
    <member name="M:System.Diagnostics.TraceListenerCollection.Remove(System.String)">
      <summary vsli:raw="Removes from the collection the first &lt;see cref=&quot;T:System.Diagnostics.TraceListener&quot; /&gt; with the specified name.">Supprime de la collection le premier <see cref="T:System.Diagnostics.TraceListener" /> avec le nom spécifié.</summary>
      <param name="name" vsli:raw="The name of the &lt;see cref=&quot;T:System.Diagnostics.TraceListener&quot; /&gt; to remove from the list.">Nom du <see cref="T:System.Diagnostics.TraceListener" /> à supprimer de la liste.</param>
    </member>
    <member name="M:System.Diagnostics.TraceListenerCollection.RemoveAt(System.Int32)">
      <summary vsli:raw="Removes from the collection the &lt;see cref=&quot;T:System.Diagnostics.TraceListener&quot; /&gt; at the specified index.">Supprime de la collection le <see cref="T:System.Diagnostics.TraceListener" /> au niveau de l'index spécifié.</summary>
      <param name="index" vsli:raw="The zero-based index of the &lt;see cref=&quot;T:System.Diagnostics.TraceListener&quot; /&gt; to remove from the list.">Index de base zéro du <see cref="T:System.Diagnostics.TraceListener" /> à supprimer de la liste.</param>
      <exception cref="T:System.ArgumentOutOfRangeException" vsli:raw="The &lt;paramref name=&quot;index&quot; /&gt; is not a valid index in the list.">
        <paramref name="index" /> n'est pas un index valide dans la liste.</exception>
    </member>
    <member name="M:System.Diagnostics.TraceListenerCollection.System#Collections#ICollection#CopyTo(System.Array,System.Int32)">
      <summary vsli:raw="Copies a section of the current &lt;see cref=&quot;T:System.Diagnostics.TraceListenerCollection&quot; /&gt; to the specified array of &lt;see cref=&quot;T:System.Diagnostics.TraceListener&quot; /&gt; objects.">Copie une section du <see cref="T:System.Diagnostics.TraceListenerCollection" /> actuel dans le tableau spécifié des objets <see cref="T:System.Diagnostics.TraceListener" />.</summary>
      <param name="array" vsli:raw="The one-dimensional array of &lt;see cref=&quot;T:System.Diagnostics.TraceListener&quot; /&gt; objects that is the destination of the elements copied from the &lt;see cref=&quot;T:System.Diagnostics.TraceListenerCollection&quot; /&gt;. The array must have zero-based indexing.">Le tableau unidimensionnel des objets <see cref="T:System.Diagnostics.TraceListener" /> qui constitue la destination des éléments copiés à partir de <see cref="T:System.Diagnostics.TraceListenerCollection" />. Ce tableau doit avoir une indexation de base zéro.</param>
      <param name="index" vsli:raw="The zero-based index in &lt;paramref name=&quot;array&quot; /&gt; at which copying begins.">Index de base zéro dans l'<paramref name="array" /> à partir duquel la copie commence.</param>
    </member>
    <member name="M:System.Diagnostics.TraceListenerCollection.System#Collections#IList#Add(System.Object)">
      <summary vsli:raw="Adds a trace listener to the &lt;see cref=&quot;T:System.Diagnostics.TraceListenerCollection&quot; /&gt;.">Ajoute un écouteur de la trace à <see cref="T:System.Diagnostics.TraceListenerCollection" />.</summary>
      <param name="value" vsli:raw="The object to add to the &lt;see cref=&quot;T:System.Diagnostics.TraceListenerCollection&quot; /&gt;.">Objet à ajouter à <see cref="T:System.Diagnostics.TraceListenerCollection" />.</param>
      <exception cref="T:System.ArgumentException" vsli:raw="&lt;paramref name=&quot;value&quot; /&gt; is &lt;see langword=&quot;null&quot; /&gt;.  &#xA;  &#xA; -or-  &#xA;  &#xA; &lt;paramref name=&quot;value&quot; /&gt; is not a &lt;see cref=&quot;T:System.Diagnostics.TraceListener&quot; /&gt;.">
        <paramref name="value" /> a la valeur <see langword="null" />.  
  
- ou - 
 <paramref name="value" /> n’est pas un <see cref="T:System.Diagnostics.TraceListener" />.</exception>
      <returns vsli:raw="The position into which the new trace listener was inserted.">Position dans laquelle le nouvel écouteur de la trace est inséré.</returns>
    </member>
    <member name="M:System.Diagnostics.TraceListenerCollection.System#Collections#IList#Contains(System.Object)">
      <summary vsli:raw="Determines whether the &lt;see cref=&quot;T:System.Diagnostics.TraceListenerCollection&quot; /&gt; contains a specific object.">Détermine si <see cref="T:System.Diagnostics.TraceListenerCollection" /> contient un objet spécifique.</summary>
      <param name="value" vsli:raw="The object to locate in the &lt;see cref=&quot;T:System.Diagnostics.TraceListenerCollection&quot; /&gt;.">Objet à rechercher dans <see cref="T:System.Diagnostics.TraceListenerCollection" />.</param>
      <returns vsli:raw="&lt;see langword=&quot;true&quot; /&gt; if the &lt;see cref=&quot;T:System.Object&quot; /&gt; is found in the &lt;see cref=&quot;T:System.Diagnostics.TraceListenerCollection&quot; /&gt;; otherwise, &lt;see langword=&quot;false&quot; /&gt;.">
        <see langword="true" /> si le <see cref="T:System.Object" /> se trouve dans le <see cref="T:System.Diagnostics.TraceListenerCollection" /> ; sinon, <see langword="false" />.</returns>
    </member>
    <member name="M:System.Diagnostics.TraceListenerCollection.System#Collections#IList#IndexOf(System.Object)">
      <summary vsli:raw="Determines the index of a specific object in the &lt;see cref=&quot;T:System.Diagnostics.TraceListenerCollection&quot; /&gt;.">Détermine l'index d'un objet spécifique dans <see cref="T:System.Diagnostics.TraceListenerCollection" />.</summary>
      <param name="value" vsli:raw="The object to locate in the &lt;see cref=&quot;T:System.Diagnostics.TraceListenerCollection&quot; /&gt;.">Objet à rechercher dans <see cref="T:System.Diagnostics.TraceListenerCollection" />.</param>
      <returns vsli:raw="The index of &lt;paramref name=&quot;value&quot; /&gt; if found in the &lt;see cref=&quot;T:System.Diagnostics.TraceListenerCollection&quot; /&gt;; otherwise, -1.">Index de <paramref name="value" /> dans <see cref="T:System.Diagnostics.TraceListenerCollection" />, s'il existe ; sinon, -1.</returns>
    </member>
    <member name="M:System.Diagnostics.TraceListenerCollection.System#Collections#IList#Insert(System.Int32,System.Object)">
      <summary vsli:raw="Inserts a &lt;see cref=&quot;T:System.Diagnostics.TraceListener&quot; /&gt; object at the specified position in the &lt;see cref=&quot;T:System.Diagnostics.TraceListenerCollection&quot; /&gt;.">Insère un objet <see cref="T:System.Diagnostics.TraceListener" /> à la position spécifiée dans <see cref="T:System.Diagnostics.TraceListenerCollection" />.</summary>
      <param name="index" vsli:raw="The zero-based index at which &lt;paramref name=&quot;value&quot; /&gt; should be inserted.">Index de base zéro au niveau duquel <paramref name="value" /> doit être inséré.</param>
      <param name="value" vsli:raw="The &lt;see cref=&quot;T:System.Diagnostics.TraceListener&quot; /&gt; object to insert into the &lt;see cref=&quot;T:System.Diagnostics.TraceListenerCollection&quot; /&gt;.">Objet <see cref="T:System.Diagnostics.TraceListener" /> à insérer dans <see cref="T:System.Diagnostics.TraceListenerCollection" />.</param>
      <exception cref="T:System.ArgumentException" vsli:raw="&lt;paramref name=&quot;value&quot; /&gt; is not a &lt;see cref=&quot;T:System.Diagnostics.TraceListener&quot; /&gt; object.">
        <paramref name="value" /> n’est pas un objet <see cref="T:System.Diagnostics.TraceListener" />.</exception>
    </member>
    <member name="M:System.Diagnostics.TraceListenerCollection.System#Collections#IList#Remove(System.Object)">
      <summary vsli:raw="Removes an object from the &lt;see cref=&quot;T:System.Diagnostics.TraceListenerCollection&quot; /&gt;.">Supprime un objet de <see cref="T:System.Diagnostics.TraceListenerCollection" />.</summary>
      <param name="value" vsli:raw="The object to remove from the &lt;see cref=&quot;T:System.Diagnostics.TraceListenerCollection&quot; /&gt;.">Objet à supprimer de <see cref="T:System.Diagnostics.TraceListenerCollection" />.</param>
    </member>
    <member name="P:System.Diagnostics.TraceListenerCollection.Count">
      <summary vsli:raw="Gets the number of listeners in the list.">Obtient le nombre d'écouteurs dans la liste.</summary>
      <returns vsli:raw="The number of listeners in the list.">Nombre d'écouteurs dans la liste.</returns>
    </member>
    <member name="P:System.Diagnostics.TraceListenerCollection.Item(System.Int32)">
      <summary vsli:raw="Gets or sets the &lt;see cref=&quot;T:System.Diagnostics.TraceListener&quot; /&gt; at the specified index.">Obtient ou définit le <see cref="T:System.Diagnostics.TraceListener" /> à l'index spécifié.</summary>
      <param name="i" vsli:raw="The zero-based index of the &lt;see cref=&quot;T:System.Diagnostics.TraceListener&quot; /&gt; to get from the list.">Index de base zéro du <see cref="T:System.Diagnostics.TraceListener" /> à obtenir de la liste.</param>
      <exception cref="T:System.ArgumentNullException" vsli:raw="The value is &lt;see langword=&quot;null&quot; /&gt;.">La valeur est <see langword="null" />.</exception>
      <returns vsli:raw="A &lt;see cref=&quot;T:System.Diagnostics.TraceListener&quot; /&gt; with the specified index.">
        <see cref="T:System.Diagnostics.TraceListener" /> avec l'index spécifié.</returns>
    </member>
    <member name="P:System.Diagnostics.TraceListenerCollection.Item(System.String)">
      <summary vsli:raw="Gets the first &lt;see cref=&quot;T:System.Diagnostics.TraceListener&quot; /&gt; in the list with the specified name.">Obtient le premier <see cref="T:System.Diagnostics.TraceListener" /> portant le nom spécifié dans la liste.</summary>
      <param name="name" vsli:raw="The name of the &lt;see cref=&quot;T:System.Diagnostics.TraceListener&quot; /&gt; to get from the list.">Nom du <see cref="T:System.Diagnostics.TraceListener" /> à obtenir de la liste.</param>
      <returns vsli:raw="The first &lt;see cref=&quot;T:System.Diagnostics.TraceListener&quot; /&gt; in the list with the given &lt;see cref=&quot;P:System.Diagnostics.TraceListener.Name&quot; /&gt;. This item returns &lt;see langword=&quot;null&quot; /&gt; if no &lt;see cref=&quot;T:System.Diagnostics.TraceListener&quot; /&gt; with the given name can be found.">Premier <see cref="T:System.Diagnostics.TraceListener" /> dans la liste avec le <see cref="P:System.Diagnostics.TraceListener.Name" /> spécifié. Cet élément retourne <see langword="null" /> si <see cref="T:System.Diagnostics.TraceListener" /> avec le nom donné est introuvable.</returns>
    </member>
    <member name="P:System.Diagnostics.TraceListenerCollection.System#Collections#ICollection#IsSynchronized">
      <summary vsli:raw="Gets a value indicating whether access to the &lt;see cref=&quot;T:System.Diagnostics.TraceListenerCollection&quot; /&gt; is synchronized (thread safe).">Obtient une valeur indiquant si l’accès à <see cref="T:System.Diagnostics.TraceListenerCollection" /> est synchronisé (thread-safe).</summary>
      <returns vsli:raw="Always &lt;see langword=&quot;true&quot; /&gt;.">Toujours <see langword="true" />.</returns>
    </member>
    <member name="P:System.Diagnostics.TraceListenerCollection.System#Collections#ICollection#SyncRoot">
      <summary vsli:raw="Gets an object that can be used to synchronize access to the &lt;see cref=&quot;T:System.Diagnostics.TraceListenerCollection&quot; /&gt;.">Obtient un objet qui peut être utilisé pour synchroniser l’accès à <see cref="T:System.Diagnostics.TraceListenerCollection" />.</summary>
      <returns vsli:raw="The current &lt;see cref=&quot;T:System.Diagnostics.TraceListenerCollection&quot; /&gt; object.">Objet <see cref="T:System.Diagnostics.TraceListenerCollection" /> actuel.</returns>
    </member>
    <member name="P:System.Diagnostics.TraceListenerCollection.System#Collections#IList#IsFixedSize">
      <summary vsli:raw="Gets a value indicating whether the &lt;see cref=&quot;T:System.Diagnostics.TraceListenerCollection&quot; /&gt; has a fixed size.">Obtient une valeur indiquant si <see cref="T:System.Diagnostics.TraceListenerCollection" /> est de taille fixe.</summary>
      <returns vsli:raw="Always &lt;see langword=&quot;false&quot; /&gt;.">Toujours <see langword="false" />.</returns>
    </member>
    <member name="P:System.Diagnostics.TraceListenerCollection.System#Collections#IList#IsReadOnly">
      <summary vsli:raw="Gets a value indicating whether the &lt;see cref=&quot;T:System.Diagnostics.TraceListenerCollection&quot; /&gt; is read-only.">Obtient une valeur indiquant si <see cref="T:System.Diagnostics.TraceListenerCollection" /> est en lecture seule.</summary>
      <returns vsli:raw="Always &lt;see langword=&quot;false&quot; /&gt;.">Toujours <see langword="false" />.</returns>
    </member>
    <member name="P:System.Diagnostics.TraceListenerCollection.System#Collections#IList#Item(System.Int32)">
      <summary vsli:raw="Gets or sets the &lt;see cref=&quot;T:System.Diagnostics.TraceListener&quot; /&gt; at the specified index in the &lt;see cref=&quot;T:System.Diagnostics.TraceListenerCollection&quot; /&gt;.">Obtient ou définit <see cref="T:System.Diagnostics.TraceListener" /> à l'index spécifié dans <see cref="T:System.Diagnostics.TraceListenerCollection" />.</summary>
      <param name="index" vsli:raw="The zero-based index of the &lt;paramref name=&quot;value&quot; /&gt; to get.">Index de base zéro du <paramref name="value" /> à obtenir.</param>
      <returns vsli:raw="The &lt;see cref=&quot;T:System.Diagnostics.TraceListener&quot; /&gt; at the specified index.">
        <see cref="T:System.Diagnostics.TraceListener" /> au niveau de l'index spécifié.</returns>
    </member>
    <member name="T:System.Diagnostics.TraceOptions">
      <summary vsli:raw="Specifies trace data options to be written to the trace output.">Spécifie des options de données de trace à écrire dans la sortie de trace.</summary>
    </member>
    <member name="F:System.Diagnostics.TraceOptions.Callstack">
      <summary vsli:raw="Write the call stack, which is represented by the return value of the &lt;see cref=&quot;P:System.Environment.StackTrace&quot; /&gt; property.">Écrivez la pile des appels qui est représentée par la valeur de retour de la propriété <see cref="P:System.Environment.StackTrace" />.</summary>
    </member>
    <member name="F:System.Diagnostics.TraceOptions.DateTime">
      <summary vsli:raw="Write the date and time.">Écrivez la date et l'heure locales.</summary>
    </member>
    <member name="F:System.Diagnostics.TraceOptions.LogicalOperationStack">
      <summary vsli:raw="Write the logical operation stack, which is represented by the return value of the &lt;see cref=&quot;P:System.Diagnostics.CorrelationManager.LogicalOperationStack&quot; /&gt; property.">Écrivez la pile des opérations logiques qui est représentée par la valeur de retour de la propriété <see cref="P:System.Diagnostics.CorrelationManager.LogicalOperationStack" />.</summary>
    </member>
    <member name="F:System.Diagnostics.TraceOptions.None">
      <summary vsli:raw="Do not write any elements.">N'écrivez pas d'éléments.</summary>
    </member>
    <member name="F:System.Diagnostics.TraceOptions.ProcessId">
      <summary vsli:raw="Write the process identity, which is represented by the return value of the &lt;see cref=&quot;P:System.Diagnostics.Process.Id&quot; /&gt; property.">Écrivez l'identité du processus qui est représentée par la valeur de retour de la propriété <see cref="P:System.Diagnostics.Process.Id" />.</summary>
    </member>
    <member name="F:System.Diagnostics.TraceOptions.ThreadId">
      <summary vsli:raw="Write the thread identity, which is represented by the return value of the &lt;see cref=&quot;P:System.Threading.Thread.ManagedThreadId&quot; /&gt; property for the current thread.">Écrivez l'identité de thread qui est représentée par la valeur de retour de la propriété <see cref="P:System.Threading.Thread.ManagedThreadId" /> pour le thread actuel.</summary>
    </member>
    <member name="F:System.Diagnostics.TraceOptions.Timestamp">
      <summary vsli:raw="Write the timestamp, which is represented by the return value of the &lt;see cref=&quot;M:System.Diagnostics.Stopwatch.GetTimestamp&quot; /&gt; method.">Écrivez l'horodatage qui est représenté par la valeur de retour de la méthode <see cref="M:System.Diagnostics.Stopwatch.GetTimestamp" />.</summary>
    </member>
    <member name="T:System.Diagnostics.TraceSource">
      <summary vsli:raw="Provides a set of methods and properties that enable applications to trace the execution of code and associate trace messages with their source.">Fournit un jeu de méthodes et de propriétés qui permet aux applications d'effectuer le suivi de l'exécution du code et des messages de trace associés à leur source.</summary>
    </member>
    <member name="M:System.Diagnostics.TraceSource.#ctor(System.String)">
      <summary vsli:raw="Initializes a new instance of the &lt;see cref=&quot;T:System.Diagnostics.TraceSource&quot; /&gt; class, using the specified name for the source.">Initialise une nouvelle instance de la classe <see cref="T:System.Diagnostics.TraceSource" /> à l'aide du nom spécifié pour la source.</summary>
      <param name="name" vsli:raw="The name of the source (typically, the name of the application).">Nom de la source (en général, le nom de l'application).</param>
      <exception cref="T:System.ArgumentNullException" vsli:raw="&lt;paramref name=&quot;name&quot; /&gt; is &lt;see langword=&quot;null&quot; /&gt;.">
        <paramref name="name" /> a la valeur <see langword="null" />.</exception>
      <exception cref="T:System.ArgumentException" vsli:raw="&lt;paramref name=&quot;name&quot; /&gt; is an empty string (&quot;&quot;).">Le <paramref name="name" /> est une chaîne vide ("").</exception>
    </member>
    <member name="M:System.Diagnostics.TraceSource.#ctor(System.String,System.Diagnostics.SourceLevels)">
      <summary vsli:raw="Initializes a new instance of the &lt;see cref=&quot;T:System.Diagnostics.TraceSource&quot; /&gt; class, using the specified name for the source and the default source level at which tracing is to occur.">Initialise une nouvelle instance de la classe <see cref="T:System.Diagnostics.TraceSource" /> à l'aide du nom spécifié pour la source et du niveau de la source par défaut où le traçage doit se produire.</summary>
      <param name="name" vsli:raw="The name of the source, typically the name of the application.">Nom de la source, en général le nom de l'application.</param>
      <param name="defaultLevel" vsli:raw="A bitwise combination of the enumeration values that specifies the default source level at which to trace.">Une combinaison d'opérations de bits des valeurs d'énumération qui spécifient le niveau de la source par défaut où tracer.</param>
      <exception cref="T:System.ArgumentNullException" vsli:raw="&lt;paramref name=&quot;name&quot; /&gt; is &lt;see langword=&quot;null&quot; /&gt;.">
        <paramref name="name" /> a la valeur <see langword="null" />.</exception>
      <exception cref="T:System.ArgumentException" vsli:raw="&lt;paramref name=&quot;name&quot; /&gt; is an empty string (&quot;&quot;).">Le <paramref name="name" /> est une chaîne vide ("").</exception>
    </member>
    <member name="M:System.Diagnostics.TraceSource.Close">
      <summary vsli:raw="Closes all the trace listeners in the trace listener collection.">Ferme tous les écouteurs de la trace dans la collection d’écouteurs de la trace.</summary>
    </member>
    <member name="M:System.Diagnostics.TraceSource.Flush">
      <summary vsli:raw="Flushes all the trace listeners in the trace listener collection.">Vide tous les écouteurs de la trace dans la collection d’écouteurs de la trace.</summary>
      <exception cref="T:System.ObjectDisposedException" vsli:raw="An attempt was made to trace an event during finalization.">Une tentative de tracer un événement lors de la finalisation a été effectuée.</exception>
    </member>
    <member name="M:System.Diagnostics.TraceSource.GetSupportedAttributes">
      <summary vsli:raw="Gets the custom attributes supported by the trace source.">Obtient les attributs personnalisés pris en charge par la source de la trace.</summary>
      <returns vsli:raw="A string array naming the custom attributes supported by the trace source, or &lt;see langword=&quot;null&quot; /&gt; if there are no custom attributes.">Tableau de chaînes qui nomme les attributs personnalisés pris en charge par la source de la trace, ou <see langword="null" /> s'il n'y a pas d'attributs personnalisés.</returns>
    </member>
    <member name="M:System.Diagnostics.TraceSource.TraceData(System.Diagnostics.TraceEventType,System.Int32,System.Object)">
      <summary vsli:raw="Writes trace data to the trace listeners in the &lt;see cref=&quot;P:System.Diagnostics.TraceSource.Listeners&quot; /&gt; collection using the specified event type, event identifier, and trace data.">Écrit les données de trace dans les écouteurs de la trace de la collection <see cref="P:System.Diagnostics.TraceSource.Listeners" /> à l'aide du type d'événement spécifié, de l'identificateur d'événement et des données de trace.</summary>
      <param name="eventType" vsli:raw="One of the enumeration values that specifies the event type of the trace data.">Une des valeurs d'énumération qui spécifie le type de l'événement des données de trace.</param>
      <param name="id" vsli:raw="A numeric identifier for the event.">Identificateur numérique pour l'événement.</param>
      <param name="data" vsli:raw="The trace data.">Données de trace.</param>
      <exception cref="T:System.ObjectDisposedException" vsli:raw="An attempt was made to trace an event during finalization.">Une tentative de tracer un événement lors de la finalisation a été effectuée.</exception>
    </member>
    <member name="M:System.Diagnostics.TraceSource.TraceData(System.Diagnostics.TraceEventType,System.Int32,System.Object[])">
      <summary vsli:raw="Writes trace data to the trace listeners in the &lt;see cref=&quot;P:System.Diagnostics.TraceSource.Listeners&quot; /&gt; collection using the specified event type, event identifier, and trace data array.">Écrit les données de trace dans les écouteurs de la trace de la collection <see cref="P:System.Diagnostics.TraceSource.Listeners" /> à l’aide du type d’événement spécifié, de l’identificateur d’événement et des données de trace.</summary>
      <param name="eventType" vsli:raw="One of the enumeration values that specifies the event type of the trace data.">Une des valeurs d'énumération qui spécifie le type de l'événement des données de trace.</param>
      <param name="id" vsli:raw="A numeric identifier for the event.">Identificateur numérique pour l'événement.</param>
      <param name="data" vsli:raw="An object array containing the trace data.">Tableau d'objets qui contient les données de trace.</param>
      <exception cref="T:System.ObjectDisposedException" vsli:raw="An attempt was made to trace an event during finalization.">Une tentative de tracer un événement lors de la finalisation a été effectuée.</exception>
    </member>
    <member name="M:System.Diagnostics.TraceSource.TraceEvent(System.Diagnostics.TraceEventType,System.Int32)">
      <summary vsli:raw="Writes a trace event message to the trace listeners in the &lt;see cref=&quot;P:System.Diagnostics.TraceSource.Listeners&quot; /&gt; collection using the specified event type and event identifier.">Écrit un message d’événement de trace dans les écouteurs de la trace de la collection <see cref="P:System.Diagnostics.TraceSource.Listeners" /> à l’aide du type d’événement spécifié et de l’identificateur d’événement.</summary>
      <param name="eventType" vsli:raw="One of the enumeration values that specifies the event type of the trace data.">Une des valeurs d'énumération qui spécifie le type de l'événement des données de trace.</param>
      <param name="id" vsli:raw="A numeric identifier for the event.">Identificateur numérique pour l'événement.</param>
      <exception cref="T:System.ObjectDisposedException" vsli:raw="An attempt was made to trace an event during finalization.">Une tentative de tracer un événement lors de la finalisation a été effectuée.</exception>
    </member>
    <member name="M:System.Diagnostics.TraceSource.TraceEvent(System.Diagnostics.TraceEventType,System.Int32,System.String)">
      <summary vsli:raw="Writes a trace event message to the trace listeners in the &lt;see cref=&quot;P:System.Diagnostics.TraceSource.Listeners&quot; /&gt; collection using the specified event type, event identifier, and message.">Écrit un message d’événement de trace dans les écouteurs de la trace de la collection <see cref="P:System.Diagnostics.TraceSource.Listeners" /> à l’aide du type d’événement spécifié, de l’identificateur d’événement et du message.</summary>
      <param name="eventType" vsli:raw="One of the enumeration values that specifies the event type of the trace data.">Une des valeurs d'énumération qui spécifie le type de l'événement des données de trace.</param>
      <param name="id" vsli:raw="A numeric identifier for the event.">Identificateur numérique pour l'événement.</param>
      <param name="message" vsli:raw="The trace message to write.">Message de trace à écrire.</param>
      <exception cref="T:System.ObjectDisposedException" vsli:raw="An attempt was made to trace an event during finalization.">Une tentative de tracer un événement lors de la finalisation a été effectuée.</exception>
    </member>
    <member name="M:System.Diagnostics.TraceSource.TraceEvent(System.Diagnostics.TraceEventType,System.Int32,System.String,System.Object[])">
      <summary vsli:raw="Writes a trace event to the trace listeners in the &lt;see cref=&quot;P:System.Diagnostics.TraceSource.Listeners&quot; /&gt; collection using the specified event type, event identifier, and argument array and format.">Écrit un événement de trace dans les écouteurs de la trace de la collection <see cref="P:System.Diagnostics.TraceSource.Listeners" /> à l’aide du type d’événement spécifié, de l’identificateur d’événement, du tableau des arguments et du format.</summary>
      <param name="eventType" vsli:raw="One of the enumeration values that specifies the event type of the trace data.">Une des valeurs d'énumération qui spécifie le type de l'événement des données de trace.</param>
      <param name="id" vsli:raw="A numeric identifier for the event.">Identificateur numérique pour l'événement.</param>
      <param name="format" vsli:raw="A composite format string that contains text intermixed with zero or more format items, which correspond to objects in the &lt;paramref name=&quot;args&quot; /&gt; array.">Chaîne de format composite qui contient du texte avec aucun ou plusieurs éléments de mise en forme qui correspondent à des objets du tableau <paramref name="args" />.</param>
      <param name="args" vsli:raw="An &lt;see langword=&quot;object&quot; /&gt; array containing zero or more objects to format.">
        <see langword="object" /> Tableau qui contient zéro ou plusieurs objets à mettre en forme.</param>
      <exception cref="T:System.ArgumentNullException" vsli:raw="&lt;paramref name=&quot;format&quot; /&gt; is &lt;see langword=&quot;null&quot; /&gt;.">
        <paramref name="format" /> a la valeur <see langword="null" />.</exception>
      <exception cref="T:System.FormatException" vsli:raw="&lt;paramref name=&quot;format&quot; /&gt; is invalid.  &#xA;  &#xA; -or-  &#xA;  &#xA; The number that indicates an argument to format is less than zero, or greater than or equal to the number of specified objects to format.">
        <paramref name="format" /> n'est pas valide.  
  
- ou - 
Le nombre qui indique un argument à mettre en forme est inférieur à zéro ou supérieur ou égal au nombre d'objets spécifiés à mettre en forme.</exception>
      <exception cref="T:System.ObjectDisposedException" vsli:raw="An attempt was made to trace an event during finalization.">Une tentative de tracer un événement lors de la finalisation a été effectuée.</exception>
    </member>
    <member name="M:System.Diagnostics.TraceSource.TraceInformation(System.String)">
      <summary vsli:raw="Writes an informational message to the trace listeners in the &lt;see cref=&quot;P:System.Diagnostics.TraceSource.Listeners&quot; /&gt; collection using the specified message.">Écrit un message d’information dans les écouteurs de la trace de la collection <see cref="P:System.Diagnostics.TraceSource.Listeners" /> à l’aide du message spécifié.</summary>
      <param name="message" vsli:raw="The informative message to write.">Message d'information à écrire.</param>
      <exception cref="T:System.ObjectDisposedException" vsli:raw="An attempt was made to trace an event during finalization.">Une tentative de tracer un événement lors de la finalisation a été effectuée.</exception>
    </member>
    <member name="M:System.Diagnostics.TraceSource.TraceInformation(System.String,System.Object[])">
      <summary vsli:raw="Writes an informational message to the trace listeners in the &lt;see cref=&quot;P:System.Diagnostics.TraceSource.Listeners&quot; /&gt; collection using the specified object array and formatting information.">Écrit un message d'information dans les écouteurs de la trace de la collection <see cref="P:System.Diagnostics.TraceSource.Listeners" /> à l'aide du tableau spécifié d'objets et des informations de mise en forme.</summary>
      <param name="format" vsli:raw="A composite format string that contains text intermixed with zero or more format items, which correspond to objects in the &lt;paramref name=&quot;args&quot; /&gt; array.">Chaîne de format composite qui contient du texte avec aucun ou plusieurs éléments de mise en forme qui correspondent à des objets du tableau <paramref name="args" />.</param>
      <param name="args" vsli:raw="An array containing zero or more objects to format.">Tableau qui contient zéro ou plusieurs objets à mettre en forme.</param>
      <exception cref="T:System.ArgumentNullException" vsli:raw="&lt;paramref name=&quot;format&quot; /&gt; is &lt;see langword=&quot;null&quot; /&gt;.">
        <paramref name="format" /> a la valeur <see langword="null" />.</exception>
      <exception cref="T:System.FormatException" vsli:raw="&lt;paramref name=&quot;format&quot; /&gt; is invalid.  &#xA;  &#xA; -or-  &#xA;  &#xA; The number that indicates an argument to format is less than zero, or greater than or equal to the number of specified objects to format.">
        <paramref name="format" /> n'est pas valide.  
  
- ou - 
Le nombre qui indique un argument à mettre en forme est inférieur à zéro ou supérieur ou égal au nombre d'objets spécifiés à mettre en forme.</exception>
      <exception cref="T:System.ObjectDisposedException" vsli:raw="An attempt was made to trace an event during finalization.">Une tentative de tracer un événement lors de la finalisation a été effectuée.</exception>
    </member>
    <member name="M:System.Diagnostics.TraceSource.TraceTransfer(System.Int32,System.String,System.Guid)">
      <summary vsli:raw="Writes a trace transfer message to the trace listeners in the &lt;see cref=&quot;P:System.Diagnostics.TraceSource.Listeners&quot; /&gt; collection using the specified numeric identifier, message, and related activity identifier.">Écrit un message de transfert de la trace dans les écouteurs de traçage de la collection <see cref="P:System.Diagnostics.TraceSource.Listeners" /> à l'aide de l'identificateur numérique spécifié, du message et de l'identificateur d'activité connexe.</summary>
      <param name="id" vsli:raw="A numeric identifier for the event.">Identificateur numérique pour l'événement.</param>
      <param name="message" vsli:raw="The trace message to write.">Message de trace à écrire.</param>
      <param name="relatedActivityId" vsli:raw="A structure that identifies the related activity.">Structure qui identifie l'activité connexe.</param>
    </member>
    <member name="P:System.Diagnostics.TraceSource.Attributes">
      <summary vsli:raw="Gets the custom switch attributes defined in the application configuration file.">Obtient les attributs de commutateur personnalisés définis dans le fichier de configuration de l'application.</summary>
      <returns vsli:raw="A &lt;see cref=&quot;T:System.Collections.Specialized.StringDictionary&quot; /&gt; containing the custom attributes for the trace switch.">
        <see cref="T:System.Collections.Specialized.StringDictionary" /> qui contient les attributs personnalisés pour le commutateur de la trace.</returns>
    </member>
    <member name="P:System.Diagnostics.TraceSource.Listeners">
      <summary vsli:raw="Gets the collection of trace listeners for the trace source.">Obtient la collection des écouteurs de la trace pour la source de trace.</summary>
      <returns vsli:raw="A &lt;see cref=&quot;T:System.Diagnostics.TraceListenerCollection&quot; /&gt; that contains the active trace listeners associated with the source.">
        <see cref="T:System.Diagnostics.TraceListenerCollection" /> qui contient les écouteurs de la trace actifs associés à la source.</returns>
    </member>
    <member name="P:System.Diagnostics.TraceSource.Name">
      <summary vsli:raw="Gets the name of the trace source.">Obtient le nom de la source de trace.</summary>
      <returns vsli:raw="The name of the trace source.">Nom de la source de trace.</returns>
    </member>
    <member name="P:System.Diagnostics.TraceSource.Switch">
      <summary vsli:raw="Gets or sets the source switch value.">Obtient ou définit la valeur du commutateur source.</summary>
      <exception cref="T:System.ArgumentNullException" vsli:raw="&lt;see cref=&quot;P:System.Diagnostics.TraceSource.Switch&quot; /&gt; is set to &lt;see langword=&quot;null&quot; /&gt;.">
        <see cref="P:System.Diagnostics.TraceSource.Switch" /> a la valeur <see langword="null" />.</exception>
      <returns vsli:raw="A &lt;see cref=&quot;T:System.Diagnostics.SourceSwitch&quot; /&gt; object representing the source switch value.">Objet <see cref="T:System.Diagnostics.SourceSwitch" /> qui représente la valeur du commutateur source.</returns>
    </member>
    <member name="T:System.Diagnostics.TraceSwitch">
      <summary vsli:raw="Provides a multilevel switch to control tracing and debug output without recompiling your code.">Fournit un commutateur à plusieurs niveaux pour contrôler la sortie de traçage et de débogage sans recompiler votre code.</summary>
    </member>
    <member name="M:System.Diagnostics.TraceSwitch.#ctor(System.String,System.String)">
      <summary vsli:raw="Initializes a new instance of the &lt;see cref=&quot;T:System.Diagnostics.TraceSwitch&quot; /&gt; class, using the specified display name and description.">Initialise une nouvelle instance de la classe <see cref="T:System.Diagnostics.TraceSwitch" /> à l'aide du nom complet et de la description spécifiés.</summary>
      <param name="displayName" vsli:raw="The name to display on a user interface.">Nom à afficher dans l’interface utilisateur.</param>
      <param name="description" vsli:raw="The description of the switch.">Description du commutateur.</param>
    </member>
    <member name="M:System.Diagnostics.TraceSwitch.#ctor(System.String,System.String,System.String)">
      <summary vsli:raw="Initializes a new instance of the &lt;see cref=&quot;T:System.Diagnostics.TraceSwitch&quot; /&gt; class, using the specified display name, description, and default value for the switch.">Initialise une nouvelle instance de la classe <see cref="T:System.Diagnostics.TraceSwitch" />, à l'aide du nom complet, de la description et de la valeur par défaut spécifiés pour le commutateur.</summary>
      <param name="displayName" vsli:raw="The name to display on a user interface.">Nom à afficher dans l’interface utilisateur.</param>
      <param name="description" vsli:raw="The description of the switch.">Description du commutateur.</param>
      <param name="defaultSwitchValue" vsli:raw="The default value of the switch.">Valeur par défaut du commutateur.</param>
    </member>
    <member name="M:System.Diagnostics.TraceSwitch.OnSwitchSettingChanged">
      <summary vsli:raw="Updates and corrects the level for this switch.">Met à jour et corrige le niveau de ce commutateur.</summary>
    </member>
    <member name="M:System.Diagnostics.TraceSwitch.OnValueChanged">
      <summary vsli:raw="Sets the &lt;see cref=&quot;P:System.Diagnostics.Switch.SwitchSetting&quot; /&gt; property to the integer equivalent of the &lt;see cref=&quot;P:System.Diagnostics.Switch.Value&quot; /&gt; property.">Affecte l'entier équivalent de la propriété <see cref="P:System.Diagnostics.Switch.SwitchSetting" /> à la propriété <see cref="P:System.Diagnostics.Switch.Value" />.</summary>
    </member>
    <member name="P:System.Diagnostics.TraceSwitch.Level">
      <summary vsli:raw="Gets or sets the trace level that determines the messages the switch allows.">Obtient ou définit le niveau de trace qui détermine les messages que le commutateur autorise.</summary>
      <exception cref="T:System.ArgumentException" vsli:raw="&lt;see cref=&quot;P:System.Diagnostics.TraceSwitch.Level&quot; /&gt; is set to a value that is not one of the &lt;see cref=&quot;T:System.Diagnostics.TraceLevel&quot; /&gt; values.">Une valeur ne faisant pas partie des valeurs <see cref="P:System.Diagnostics.TraceSwitch.Level" /> est affectée à <see cref="T:System.Diagnostics.TraceLevel" />.</exception>
      <returns vsli:raw="One of the &lt;see cref=&quot;T:System.Diagnostics.TraceLevel&quot; /&gt; values that specifies the level of messages that are allowed by the switch.">L’une des <see cref="T:System.Diagnostics.TraceLevel" /> valeurs qui spécifie le niveau des messages autorisés par le commutateur.</returns>
    </member>
    <member name="P:System.Diagnostics.TraceSwitch.TraceError">
      <summary vsli:raw="Gets a value indicating whether the switch allows error-handling messages.">Obtient une valeur qui indique si le commutateur autorise des messages de gestion des erreurs.</summary>
      <returns vsli:raw="&lt;see langword=&quot;true&quot; /&gt; if the &lt;see cref=&quot;P:System.Diagnostics.TraceSwitch.Level&quot; /&gt; property is set to &lt;see cref=&quot;F:System.Diagnostics.TraceLevel.Error&quot; /&gt;, &lt;see cref=&quot;F:System.Diagnostics.TraceLevel.Warning&quot; /&gt;, &lt;see cref=&quot;F:System.Diagnostics.TraceLevel.Info&quot; /&gt;, or &lt;see cref=&quot;F:System.Diagnostics.TraceLevel.Verbose&quot; /&gt;; otherwise, &lt;see langword=&quot;false&quot; /&gt;.">
        <see langword="true" /> si la propriété <see cref="P:System.Diagnostics.TraceSwitch.Level" /> a la valeur <see cref="F:System.Diagnostics.TraceLevel.Error" />, <see cref="F:System.Diagnostics.TraceLevel.Warning" />, <see cref="F:System.Diagnostics.TraceLevel.Info" /> ou <see cref="F:System.Diagnostics.TraceLevel.Verbose" /> ; sinon, <see langword="false" />.</returns>
    </member>
    <member name="P:System.Diagnostics.TraceSwitch.TraceInfo">
      <summary vsli:raw="Gets a value indicating whether the switch allows informational messages.">Obtient une valeur qui indique si le commutateur autorise des messages d'information.</summary>
      <returns vsli:raw="&lt;see langword=&quot;true&quot; /&gt; if the &lt;see cref=&quot;P:System.Diagnostics.TraceSwitch.Level&quot; /&gt; property is set to &lt;see cref=&quot;F:System.Diagnostics.TraceLevel.Info&quot; /&gt; or &lt;see cref=&quot;F:System.Diagnostics.TraceLevel.Verbose&quot; /&gt;; otherwise, &lt;see langword=&quot;false&quot; /&gt;.">
        <see langword="true" /> si la propriété <see cref="P:System.Diagnostics.TraceSwitch.Level" /> a la valeur <see cref="F:System.Diagnostics.TraceLevel.Info" /> ou <see cref="F:System.Diagnostics.TraceLevel.Verbose" /> ; sinon, <see langword="false" />.</returns>
    </member>
    <member name="P:System.Diagnostics.TraceSwitch.TraceVerbose">
      <summary vsli:raw="Gets a value indicating whether the switch allows all messages.">Obtient une valeur qui indique si le commutateur autorise tous les messages.</summary>
      <returns vsli:raw="&lt;see langword=&quot;true&quot; /&gt; if the &lt;see cref=&quot;P:System.Diagnostics.TraceSwitch.Level&quot; /&gt; property is set to &lt;see cref=&quot;F:System.Diagnostics.TraceLevel.Verbose&quot; /&gt;; otherwise, &lt;see langword=&quot;false&quot; /&gt;.">
        <see langword="true" /> si la propriété <see cref="P:System.Diagnostics.TraceSwitch.Level" /> a la valeur <see cref="F:System.Diagnostics.TraceLevel.Verbose" /> ; sinon, <see langword="false" />.</returns>
    </member>
    <member name="P:System.Diagnostics.TraceSwitch.TraceWarning">
      <summary vsli:raw="Gets a value indicating whether the switch allows warning messages.">Obtient une valeur qui indique si le commutateur autorise les messages d'avertissement.</summary>
      <returns vsli:raw="&lt;see langword=&quot;true&quot; /&gt; if the &lt;see cref=&quot;P:System.Diagnostics.TraceSwitch.Level&quot; /&gt; property is set to &lt;see cref=&quot;F:System.Diagnostics.TraceLevel.Warning&quot; /&gt;, &lt;see cref=&quot;F:System.Diagnostics.TraceLevel.Info&quot; /&gt;, or &lt;see cref=&quot;F:System.Diagnostics.TraceLevel.Verbose&quot; /&gt;; otherwise, &lt;see langword=&quot;false&quot; /&gt;.">
        <see langword="true" /> si la propriété <see cref="P:System.Diagnostics.TraceSwitch.Level" /> a la valeur <see cref="F:System.Diagnostics.TraceLevel.Warning" />, <see cref="F:System.Diagnostics.TraceLevel.Info" /> ou <see cref="F:System.Diagnostics.TraceLevel.Verbose" /> ; sinon, <see langword="false" />.</returns>
    </member>
  </members>
</doc>