<?xml version="1.0" encoding="utf-8"?>
<doc>
  <assembly>
    <name>System.Diagnostics.DiagnosticSource</name>
  </assembly>
  <members>
    <member name="T:System.Diagnostics.Activity">
      <summary>Représente une opération avec le contexte à utiliser pour la journalisation.</summary>
    </member>
    <member name="M:System.Diagnostics.Activity.#ctor(System.String)">
      <summary>Initialise une nouvelle instance de la classe <see cref="T:System.Diagnostics.Activity" />.</summary>
      <param name="operationName">Nom de l'opération.</param>
    </member>
    <member name="M:System.Diagnostics.Activity.AddBaggage(System.String,System.String)">
      <summary>Met à jour le <see cref="T:System.Diagnostics.Activity" /> pour avoir un nouvel élément bagage avec la clé et la valeur spécifiées.</summary>
      <param name="key">Clé du bagage.</param>
      <param name="value">Valeur du bagage.</param>
      <returns>
        <see langword="this" /> pour un chaînage pratique.</returns>
    </member>
    <member name="M:System.Diagnostics.Activity.AddEvent(System.Diagnostics.ActivityEvent)">
      <summary>Ajoute l’événement d’activité spécifié à la liste des événements.</summary>
      <param name="e">Événement d’activité à ajouter.</param>
      <returns>
        <see langword="this" /> pour un chaînage pratique.</returns>
    </member>
    <member name="M:System.Diagnostics.Activity.AddTag(System.String,System.Object)">
      <summary>Met à jour l’activité pour avoir une balise avec une <paramref name="key" /> et une <paramref name="value" />supplémentaires.</summary>
      <param name="key">Nom de la clé de balise.</param>
      <param name="value">Valeur de balise mappée à la clé d’entrée.</param>
      <returns>
        <see langword="this" /> pour un chaînage pratique.</returns>
    </member>
    <member name="M:System.Diagnostics.Activity.AddTag(System.String,System.String)">
      <summary>Met à jour <see cref="T:System.Diagnostics.Activity" /> pour avoir une nouvelle balise avec les valeurs <paramref name="key" /> et <paramref name="value" /> fournies.</summary>
      <param name="key">Clé de la balise.</param>
      <param name="value">Valeur de la balise.</param>
      <returns>
        <see langword="this" /> pour un chaînage pratique.</returns>
    </member>
    <member name="M:System.Diagnostics.Activity.Dispose">
      <summary>Arrête l’activité si elle a déjà démarré et avertit tous les écouteurs d’événements. Dans le cas contraire, rien ne se produira.</summary>
    </member>
    <member name="M:System.Diagnostics.Activity.Dispose(System.Boolean)">
      <summary>Si elle est remplacée par un type dérivé, cette méthode libère toutes les ressources allouées.</summary>
      <param name="disposing">
        <see langword="false" /> si la méthode est appelée à partir du finaliseur ; <see langword="true" /> si elle est appelée à partir du code utilisateur.</param>
    </member>
    <member name="M:System.Diagnostics.Activity.GetBaggageItem(System.String)">
      <summary>Retourne la valeur d’une paire clé-valeur ajoutée à l’activité avec <see cref="M:System.Diagnostics.Activity.AddBaggage(System.String,System.String)" />.</summary>
      <param name="key">Clé du bagage.</param>
      <returns>Valeur de la paire clé-valeur si elle existe ; sinon, <see langword="null" />.</returns>
    </member>
    <member name="M:System.Diagnostics.Activity.GetCustomProperty(System.String)">
      <summary>Retourne l’objet mappé au nom de propriété spécifié.</summary>
      <param name="propertyName">Nom associé à l’objet.</param>
      <returns>Objet mappé au nom de la propriété, le cas échéant ; dans le cas contraire, <see langword="null" />.</returns>
    </member>
    <member name="M:System.Diagnostics.Activity.SetCustomProperty(System.String,System.Object)">
      <summary>Attache tout objet personnalisé à cette activité. Si le <paramref name="propertyName" /> spécifié a été précédemment associé à un autre objet, la propriété sera mise à jour pour être associée au nouveau <paramref name="propertyValue" /> à la place. Il est recommandé d’utiliser un nom de propriété unique pour éviter les conflits avec quiconque utilisant la même valeur.</summary>
      <param name="propertyName">Nom avec lequel associer la valeur.</param>
      <param name="propertyValue">Objet à attacher et à mapper au nom de la propriété.</param>
    </member>
    <member name="M:System.Diagnostics.Activity.SetEndTime(System.DateTime)">
      <summary>Met à jour le <see cref="T:System.Diagnostics.Activity" /> pour définir son <see cref="P:System.Diagnostics.Activity.Duration" /> comme la différence entre <see cref="P:System.Diagnostics.Activity.StartTimeUtc" /> et l’heure d’arrêt spécifiée.</summary>
      <param name="endTimeUtc">Heure UTC de l’arrêt.</param>
      <returns>
        <see langword="this" /> pour un chaînage pratique.</returns>
    </member>
    <member name="M:System.Diagnostics.Activity.SetIdFormat(System.Diagnostics.ActivityIdFormat)">
      <summary>Définit le format d’ID sur ce <see cref="T:System.Diagnostics.Activity" /> avant qu’il ne soit démarré.</summary>
      <param name="format">Une des valeurs d'énumération qui spécifie le format de la propriété <see cref="P:System.Diagnostics.Activity.Id" />.</param>
      <returns>
        <see langword="this" /> pour un chaînage pratique.</returns>
    </member>
    <member name="M:System.Diagnostics.Activity.SetParentId(System.Diagnostics.ActivityTraceId,System.Diagnostics.ActivitySpanId,System.Diagnostics.ActivityTraceFlags)">
      <summary>Définit l’ID parent à l’aide de la convention W3C d’un TraceId et d’un SpanId.</summary>
      <param name="traceId">TraceId de l’activité parente.</param>
      <param name="spanId">SpanId de l’activité parente.</param>
      <param name="activityTraceFlags">Une des valeurs d’énumération qui spécifie des indicateurs définis par le standard W3C qui sont associés à une activité.</param>
      <returns>
        <see langword="this" /> pour un chaînage pratique.</returns>
    </member>
    <member name="M:System.Diagnostics.Activity.SetParentId(System.String)">
      <summary>Met à jour ce <see cref="T:System.Diagnostics.Activity" /> pour indiquer que le <see cref="T:System.Diagnostics.Activity" /> avec un ID <paramref name="parentId" /> a provoqué ce <see cref="T:System.Diagnostics.Activity" />.</summary>
      <param name="parentId">ID de l’opération parente.</param>
      <returns>
        <see langword="this" /> pour un chaînage pratique.</returns>
    </member>
    <member name="M:System.Diagnostics.Activity.SetStartTime(System.DateTime)">
      <summary>Définit l’heure de début de ce <see cref="T:System.Diagnostics.Activity" />.</summary>
      <param name="startTimeUtc">Heure UTC du début de <see cref="T:System.Diagnostics.Activity" />.</param>
      <returns>
        <see langword="this" /> pour un chaînage pratique.</returns>
    </member>
    <member name="M:System.Diagnostics.Activity.SetTag(System.String,System.Object)">
      <summary>Ajoute ou met à jour la balise d’activité avec la clé et la valeur d’entrée.</summary>
      <param name="key">Nom de la clé de balise.</param>
      <param name="value">Valeur de balise mappée à la clé d’entrée.</param>
      <returns>
        <see langword="this" /> pour un chaînage pratique.</returns>
    </member>
    <member name="M:System.Diagnostics.Activity.Start">
      <summary>Démarre l’activité.</summary>
      <returns>
        <see langword="this" /> pour un chaînage pratique.</returns>
    </member>
    <member name="M:System.Diagnostics.Activity.Stop">
      <summary>Arrête l’activité.</summary>
    </member>
    <member name="P:System.Diagnostics.Activity.ActivityTraceFlags">
      <summary>Obtient les indicateurs (définis par la spécification d’ID de W3C) associés à l’activité.</summary>
      <returns>indicateurs associés à l’activité.</returns>
    </member>
    <member name="P:System.Diagnostics.Activity.Baggage">
      <summary>Obtient une collection de paires clé-valeur qui représentent les informations passées aux enfants de ce <see cref="T:System.Diagnostics.Activity" />.</summary>
      <returns>Énumération de paires clé-valeur de chaîne de chaîne.</returns>
    </member>
    <member name="P:System.Diagnostics.Activity.Context">
      <summary>Obtient le contexte de l’activité. Le contexte devient valide uniquement si l’activité a été démarrée.</summary>
      <returns>Contexte de l’activité, si l’activité a été démarrée ; Sinon, retourne le contexte par défaut.</returns>
    </member>
    <member name="P:System.Diagnostics.Activity.Current">
      <summary>Obtient ou définit l’opération en cours (<see cref="T:System.Diagnostics.Activity" />) pour le thread actuel.  Cela s’effectue par le biais d’appels asynchrones.</summary>
      <returns>Opération actuelle pour le thread actuel.</returns>
    </member>
    <member name="P:System.Diagnostics.Activity.DefaultIdFormat">
      <summary>Obtient ou définit le format d’ID par défaut pour la <see cref="T:System.Diagnostics.Activity" />.</summary>
    </member>
    <member name="P:System.Diagnostics.Activity.DisplayName">
      <summary>Obtient ou définit le nom d’affichage de l’activité.</summary>
      <returns>Chaîne qui représente le nom complet de l’activité.</returns>
    </member>
    <member name="P:System.Diagnostics.Activity.Duration">
      <summary>Obtient la durée de l’opération.</summary>
      <returns>Le delta entre <see cref="P:System.Diagnostics.Activity.StartTimeUtc" /> et l’heure de fin si la <see cref="T:System.Diagnostics.Activity" /> est terminée ( <see cref="M:System.Diagnostics.Activity.Stop" /> ou <see cref="M:System.Diagnostics.Activity.SetEndTime(System.DateTime)" /> a été appelée), ou si n' <see cref="F:System.TimeSpan.Zero" /><see cref="T:System.Diagnostics.Activity" /> a pas terminé et <see cref="M:System.Diagnostics.Activity.SetEndTime(System.DateTime)" /> n’a pas été appelé.</returns>
    </member>
    <member name="P:System.Diagnostics.Activity.Events">
      <summary>Obtient la liste de tous les événements d’activité attachés à cette activité.</summary>
      <returns>Énumération des événements d’activité attachés à cette activité. Si l’activité n’a pas d’événements, retourne une énumération vide.</returns>
    </member>
    <member name="P:System.Diagnostics.Activity.ForceDefaultIdFormat">
      <summary>Obtient ou définit une valeur qui détermine si le <see cref="P:System.Diagnostics.Activity.DefaultIdFormat" /> est toujours utilisé pour définir le format d’ID par défaut.</summary>
      <returns>
        <see langword="true" /> pour toujours utiliser le <see cref="P:System.Diagnostics.Activity.DefaultIdFormat" /> ; sinon, <see langword="false" /> .</returns>
    </member>
    <member name="P:System.Diagnostics.Activity.Id">
      <summary>Obtient un identificateur qui est propre à chaque requête.</summary>
      <returns>ID de l'activité.</returns>
    </member>
    <member name="P:System.Diagnostics.Activity.IdFormat">
      <summary>Obtient le format pour la <see cref="P:System.Diagnostics.Activity.Id" />.</summary>
      <returns>Format du <see cref="P:System.Diagnostics.Activity.Id" /> .</returns>
    </member>
    <member name="P:System.Diagnostics.Activity.IsAllDataRequested">
      <summary>Indique si cette activité doit être remplie avec toutes les informations de propagation, ainsi que toutes les autres propriétés telles que les liens, les balises et les événements.</summary>
      <returns>
        <see langword="true" /> Si l’activité doit être remplie ; <see langword="false" /> sinon,.</returns>
    </member>
    <member name="P:System.Diagnostics.Activity.Kind">
      <summary>Obtient la relation entre l’activité, ses parents et ses enfants dans une trace.</summary>
      <returns>L’une des valeurs d’énumération qui indiquent la relation entre l’activité, ses parents et ses enfants dans une trace.</returns>
    </member>
    <member name="P:System.Diagnostics.Activity.Links">
      <summary>Obtient la liste de tous les liens d’activité attachés à cette activité.</summary>
      <returns>Énumération des liens d’activité attachés à cette activité. Si l’activité n’a pas de lien, retourne une énumération vide.</returns>
    </member>
    <member name="P:System.Diagnostics.Activity.OperationName">
      <summary>Obtient le nom de l’opération.</summary>
      <returns>Nom de l'opération.</returns>
    </member>
    <member name="P:System.Diagnostics.Activity.Parent">
      <summary>Obtient le parent de <see cref="T:System.Diagnostics.Activity" /> qui a créé cette activité.</summary>
      <returns>Parent de ce <see cref="T:System.Diagnostics.Activity" /> , s’il s’agit du même processus, ou <see langword="null" /> si cette instance n’a pas de parent (il s’agit d’une activité racine) ou si le parent est en dehors du processus.</returns>
    </member>
    <member name="P:System.Diagnostics.Activity.ParentId">
      <summary>Obtient l’ID du parent de cette activité.</summary>
      <returns>ID parent, s’il en existe un, ou <see langword="null" /> si ce n’est pas le cas.</returns>
    </member>
    <member name="P:System.Diagnostics.Activity.ParentSpanId">
      <summary>Obtient le <see cref="P:System.Diagnostics.Activity.SpanId" /> du parent.</summary>
      <returns>Du parent <see cref="P:System.Diagnostics.Activity.SpanId" /> .</returns>
    </member>
    <member name="P:System.Diagnostics.Activity.Recorded">
      <summary>Obtient une valeur qui indique si l’indicateur W3CIdFlags.Recorded est défini.</summary>
      <returns>
        <see langword="true" /> Si l’indicateur W3CIdFlags. enregistred est défini ; Sinon, <see langword="false" /> .</returns>
    </member>
    <member name="P:System.Diagnostics.Activity.RootId">
      <summary>Obtient l’ID racine de ce <see cref="T:System.Diagnostics.Activity" />.</summary>
      <returns>ID racine, ou <see langword="null" /> si l’instance actuelle a une valeur <see cref="P:System.Diagnostics.Activity.ParentId" /> ou <see cref="P:System.Diagnostics.Activity.Id" /> .</returns>
    </member>
    <member name="P:System.Diagnostics.Activity.Source">
      <summary>Obtient la source d'activité associée à cette activité.</summary>
    </member>
    <member name="P:System.Diagnostics.Activity.SpanId">
      <summary>Obtient la partie SPAN du <see cref="P:System.Diagnostics.Activity.Id" />.</summary>
      <returns>ID de la partie d’étendue de <see cref="P:System.Diagnostics.Activity.Id" /> , si le <see cref="T:System.Diagnostics.Activity" /> a le format W3C ; sinon, zéro <see langword="SpanId" /> .</returns>
    </member>
    <member name="P:System.Diagnostics.Activity.StartTimeUtc">
      <summary>Obtient l’heure à laquelle l’opération a démarré.</summary>
      <returns>Heure UTC à laquelle l’opération a démarré.</returns>
    </member>
    <member name="P:System.Diagnostics.Activity.TagObjects">
      <summary>Retourne la liste des balises représentant des informations à consigner avec l’activité. Ces informations ne sont pas transmises aux enfants de cette activité.</summary>
      <returns>Énumération de paires clé-valeur de balises et d’objets.</returns>
    </member>
    <member name="P:System.Diagnostics.Activity.Tags">
      <summary>Obtient une collection de paires clé-valeur qui représentent les informations à enregistrer avec le <see cref="T:System.Diagnostics.Activity" /> dans le système de journalisation.</summary>
      <returns>Énumération de paires clé-valeur de chaîne de chaîne.</returns>
    </member>
    <member name="P:System.Diagnostics.Activity.TraceId">
      <summary>Obtient la partie TraceId du <see cref="P:System.Diagnostics.Activity.Id" />.</summary>
      <returns>ID de la partie TraceId du <see cref="P:System.Diagnostics.Activity.Id" /> , si l’ID a le format W3C ; sinon, zéro TraceID.</returns>
    </member>
    <member name="P:System.Diagnostics.Activity.TraceStateString">
      <summary>Obtient l’en-tête <see langword="tracestate" /> W3C.</summary>
      <returns>
        <see langword="tracestate" />En-tête du W3C.</returns>
    </member>
    <member name="T:System.Diagnostics.ActivityContext">
      <summary>Représentation conforme à la spécification W3C TraceContext. Elle contient deux identificateurs : TraceId et SpanId, ainsi qu’un ensemble de valeurs TraceFlags communes et de valeurs TraceState spécifiques au système.</summary>
    </member>
    <member name="M:System.Diagnostics.ActivityContext.#ctor(System.Diagnostics.ActivityTraceId,System.Diagnostics.ActivitySpanId,System.Diagnostics.ActivityTraceFlags,System.String,System.Boolean)">
      <summary>Construit une nouvelle instance de contexte d’activité à l’aide des arguments spécifiés.</summary>
      <param name="traceId">Identificateur de trace.</param>
      <param name="spanId">Identificateur d'étendue.</param>
      <param name="traceFlags">Contiennent des détails sur la trace.</param>
      <param name="traceState">Transmet des données de configuration spécifiques au système.</param>
      <param name="isRemote">Indique si le contexte est propagé à partir d’un parent distant.</param>
    </member>
    <member name="M:System.Diagnostics.ActivityContext.Equals(System.Diagnostics.ActivityContext)">
      <summary>Indique si l'objet actuel est égal à un autre objet du même type.</summary>
      <param name="value">Objet à comparer à cette instance.</param>
      <returns>
        <see langword="true" /> si l'objet actuel est égal au paramètre <paramref name="other" /> ; sinon, <see langword="false" />.</returns>
    </member>
    <member name="M:System.Diagnostics.ActivityContext.Equals(System.Object)">
      <summary>Détermine si cette instance et un objet <see langword="ActivityContext" /> spécifié ont la même valeur.</summary>
      <param name="obj">Objet à comparer à cette instance.</param>
      <returns>
        <see langword="true" /> si l'objet actuel est égal au paramètre <paramref name="obj" /> ; sinon, <see langword="false" />.</returns>
    </member>
    <member name="M:System.Diagnostics.ActivityContext.GetHashCode">
      <summary>Fournit une fonction de hachage pour l'élément <see langword="ActivityContext" /> actuel, qui convient aux algorithmes de hachage et aux structures de données comme les tables de hachage.</summary>
      <returns>Code de hachage du <see langword="ActivityContext" /> actuel.</returns>
    </member>
    <member name="M:System.Diagnostics.ActivityContext.op_Equality(System.Diagnostics.ActivityContext,System.Diagnostics.ActivityContext)">
      <summary>Détermine si deux valeurs <see langword="ActivityContext" /> spécifiées sont égales.</summary>
      <param name="left">Première valeur à comparer.</param>
      <param name="right">Deuxième valeur à comparer.</param>
      <returns>
        <see langword="true" /> si <paramref name="left" /> et <paramref name="right" /> sont égales ; sinon, <see langword="false" />.</returns>
    </member>
    <member name="M:System.Diagnostics.ActivityContext.op_Inequality(System.Diagnostics.ActivityContext,System.Diagnostics.ActivityContext)">
      <summary>Détermine si deux valeurs <see langword="ActivityContext" /> spécifiées ne sont pas égales.</summary>
      <param name="left">Première valeur à comparer.</param>
      <param name="right">Deuxième valeur à comparer.</param>
      <returns>
        <see langword="true" /> si <paramref name="left" /> et <paramref name="right" /> ne sont pas égales ; sinon, <see langword="false" />.</returns>
    </member>
    <member name="M:System.Diagnostics.ActivityContext.Parse(System.String,System.String)">
      <summary>Analyse les en-têtes de contexte de trace W3C d’un objet <see cref="T:System.Diagnostics.ActivityContext" />.</summary>
      <param name="traceParent">En-tête du parent de la trace W3C.</param>
      <param name="traceState">État de la trace.</param>
      <exception cref="T:System.ArgumentException">Le parent de la trace n’est pas valide.</exception>
      <returns>Objet <see cref="T:System.Diagnostics.ActivityContext" /> créé à partir de l’opération d’analyse.</returns>
    </member>
    <member name="M:System.Diagnostics.ActivityContext.TryParse(System.String,System.String,System.Diagnostics.ActivityContext@)">
      <summary>Tente d’analyser les en-têtes de contexte de trace W3C d’un objet <see cref="T:System.Diagnostics.ActivityContext" />.</summary>
      <param name="traceParent">En-tête du parent de la trace W3C.</param>
      <param name="traceState">État de la trace W3C.</param>
      <param name="context">Quand cette méthode retourne <see langword="true" />, objet <see cref="T:System.Diagnostics.ActivityContext" /> créé à partir de l’opération d’analyse.</param>
      <returns>
        <see langword="true" /> si l’analyse a réussi ; sinon, <see langword="false" />.</returns>
    </member>
    <member name="P:System.Diagnostics.ActivityContext.IsRemote">
      <summary>Indique si le contexte d’activité a été propagé à partir d’un parent distant.</summary>
      <returns>
        <see langword="true" /> Si elle a été propagée à partir d’un parent distant ; <see langword="false" /> sinon,.</returns>
    </member>
    <member name="P:System.Diagnostics.ActivityContext.SpanId">
      <summary>ID de la requête connu de l’appelant.</summary>
      <returns>ID d’étendue dans le contexte.</returns>
    </member>
    <member name="P:System.Diagnostics.ActivityContext.TraceFlags">
      <summary>Indicateurs définis par la norme W3C avec l’ID de l’activité.</summary>
      <returns>Indicateurs de suivi de contexte.</returns>
    </member>
    <member name="P:System.Diagnostics.ActivityContext.TraceId">
      <summary>Identificateur de la trace.</summary>
      <returns>Identificateur de suivi dans le contexte.</returns>
    </member>
    <member name="P:System.Diagnostics.ActivityContext.TraceState">
      <summary>Contient l’en-tête « tracestate » de W3C.</summary>
      <returns>Chaîne représentant l’en-tête « tracestate » du W3C.</returns>
    </member>
    <member name="T:System.Diagnostics.ActivityCreationOptions`1">
      <summary>Encapsule toutes les informations envoyées à l’écouteur d’activité, pour prendre des décisions concernant la création de l’instance d’activité ainsi que sur son état.

Les paramètres de type générique possibles sont <see cref="T:System.Diagnostics.ActivityContext" /> ou <see cref="T:System.String" />.</summary>
      <typeparam name="T">Type de la <see langword="Parent" /> propriété. Doit être <see cref="T:System.String" /> ou <see langword="ActivityContext" />.</typeparam>
    </member>
    <member name="P:System.Diagnostics.ActivityCreationOptions`1.Kind">
      <summary>Obtient le type d’activité avec lequel l’activité sera créée.</summary>
      <returns>L’une des valeurs d’énumération qui représentent un genre d’activité.</returns>
    </member>
    <member name="P:System.Diagnostics.ActivityCreationOptions`1.Links">
      <summary>Obtient l’énumération des liens d’activité avec lesquels l’activité sera créée.</summary>
      <returns>Énumération des liens d’activité.</returns>
    </member>
    <member name="P:System.Diagnostics.ActivityCreationOptions`1.Name">
      <summary>Obtient le nom à utiliser comme OperationName de l’activité qui sera créée.</summary>
      <returns>Chaîne représentant le nom de l’activité.</returns>
    </member>
    <member name="P:System.Diagnostics.ActivityCreationOptions`1.Parent">
      <summary>Obtient le contexte parent ou l’ID parent avec lequel l’activité sera créée.</summary>
      <returns>Parent de l’activité, représenté en tant que <see cref="T:System.String" /> ou en tant que <see cref="T:System.Diagnostics.ActivityContext" /> .</returns>
    </member>
    <member name="P:System.Diagnostics.ActivityCreationOptions`1.SamplingTags">
      <summary>Obtient la collection utilisée pour ajouter des étiquettes supplémentaires durant le processus d’échantillonnage. Les étiquettes ajoutées sont également ajoutées à l’activité créée s’il est décidé qu’elle doit être créée par les rappels de <see cref="T:System.Diagnostics.ActivityListener" />.</summary>
      <returns>Collection d’étiquettes d’activité.</returns>
    </member>
    <member name="P:System.Diagnostics.ActivityCreationOptions`1.Source">
      <summary>Obtient la source d’activité qui crée l’activité.</summary>
      <returns>Objet source de l’activité.</returns>
    </member>
    <member name="P:System.Diagnostics.ActivityCreationOptions`1.Tags">
      <summary>Obtient les balises avec lesquelles l’activité sera créée.</summary>
      <returns>Énumération de paires clé-valeur de balises associées à l’activité.</returns>
    </member>
    <member name="P:System.Diagnostics.ActivityCreationOptions`1.TraceId">
      <summary>Obtient l’ID de trace à utiliser dans l’objet d’activité s’il est décidé qu’il doit être créé par les rappels de <see cref="T:System.Diagnostics.ActivityListener" />.</summary>
      <returns>ID de la trace.</returns>
    </member>
    <member name="T:System.Diagnostics.ActivityEvent">
      <summary>Représente un événement contenant un nom et un horodateur, ainsi qu’une liste facultative de balises.</summary>
    </member>
    <member name="M:System.Diagnostics.ActivityEvent.#ctor(System.String)">
      <summary>Initialise une nouvelle instance d’événement d’activité à l’aide du nom spécifié et de l’heure actuelle comme horodateur de l’événement.</summary>
      <param name="name">Nom de l'événement.</param>
    </member>
    <member name="M:System.Diagnostics.ActivityEvent.#ctor(System.String,System.DateTimeOffset,System.Diagnostics.ActivityTagsCollection)">
      <summary>Initialise une nouvelle instance d’événement d’activité à l’aide du nom, de l’horodatage et des balises spécifiés.</summary>
      <param name="name">Nom de l'événement.</param>
      <param name="timestamp">L’horadateur del’événement. L’horodateur doit être utilisé uniquement pour les événements qui se sont produits dans le passé, et non au moment de cet appel.</param>
      <param name="tags">Balises d'événement.</param>
    </member>
    <member name="P:System.Diagnostics.ActivityEvent.Name">
      <summary>Obtient le nom de l’événement d’activité.</summary>
      <returns>Chaîne représentant le nom de l’événement d’activité.</returns>
    </member>
    <member name="P:System.Diagnostics.ActivityEvent.Tags">
      <summary>Obtient la collection de balises associée à l’événement.</summary>
      <returns>Énumération de paires clé-valeur contenant les balises associées à l’événement.</returns>
    </member>
    <member name="P:System.Diagnostics.ActivityEvent.Timestamp">
      <summary>Obtient l’horodateur de l’événement d’activité.</summary>
      <returns>Décalage DateTime représentant l’horodateur de l’événement d’activité.</returns>
    </member>
    <member name="T:System.Diagnostics.ActivityIdFormat">
      <summary>Spécifie le format de la propriété <see cref="P:System.Diagnostics.Activity.Id" />.</summary>
    </member>
    <member name="F:System.Diagnostics.ActivityIdFormat.Hierarchical">
      <summary>Format hiérarchique.</summary>
    </member>
    <member name="F:System.Diagnostics.ActivityIdFormat.Unknown">
      <summary>Format inconnu.</summary>
    </member>
    <member name="F:System.Diagnostics.ActivityIdFormat.W3C">
      <summary>Format W3C.</summary>
    </member>
    <member name="T:System.Diagnostics.ActivityKind">
      <summary>Décrit la relation entre l’activité, ses parents et ses enfants dans une trace.</summary>
    </member>
    <member name="F:System.Diagnostics.ActivityKind.Client">
      <summary>Requête sortante au composant externe.</summary>
    </member>
    <member name="F:System.Diagnostics.ActivityKind.Consumer">
      <summary>Sortie reçue d’un composant externe.</summary>
    </member>
    <member name="F:System.Diagnostics.ActivityKind.Internal">
      <summary>Opération interne au sein d’une application, par opposition aux opérations effectuées avec des parents ou des enfants distants. Valeur par défaut.</summary>
    </member>
    <member name="F:System.Diagnostics.ActivityKind.Producer">
      <summary>Sortie fournie à des composants externes.</summary>
    </member>
    <member name="F:System.Diagnostics.ActivityKind.Server">
      <summary>Requêtes entrantes à partir d’un composant externe.</summary>
    </member>
    <member name="T:System.Diagnostics.ActivityLink">
      <summary>Les activités peuvent être liées à zéro ou plusieurs instances de contexte d’activité ayant un lien de causalité.

Les liens d’activité peuvent pointer vers des contextes d’activité à l’intérieur d’une seule trace ou sur des traces différentes.

Les liens d’activité peuvent être utilisés pour représenter des opérations par lots où une activité a été initiée par plusieurs activités de lancement, chacune représentant un seul élément entrant en cours de traitement dans le lot.</summary>
    </member>
    <member name="M:System.Diagnostics.ActivityLink.#ctor(System.Diagnostics.ActivityContext,System.Diagnostics.ActivityTagsCollection)">
      <summary>Construit un nouveau lien d’activité qui peut être lié à une activité.</summary>
      <param name="context">Contexte d’activité de la trace.</param>
      <param name="tags">Liste de paires clé-valeur de balises associées au contexte d’activité.</param>
    </member>
    <member name="M:System.Diagnostics.ActivityLink.Equals(System.Diagnostics.ActivityLink)">
      <summary>Indique si le lien d’activité en cours est égal à un autre lien d’activité.</summary>
      <param name="value">Lien d’activité à comparer.</param>
      <returns>
        <see langword="true" /> si le lien de l’activité en cours est égal à <paramref name="other" /> ; dans le cas contraire, <see langword="false" />.</returns>
    </member>
    <member name="M:System.Diagnostics.ActivityLink.Equals(System.Object)">
      <summary>Indique si le lien d’activité en cours est égal à un autre objet.</summary>
      <param name="obj">Objet à comparer.</param>
      <returns>
        <see langword="true" /> si le lien de l’activité en cours est égal à <paramref name="obj" /> ; dans le cas contraire, <see langword="false" />.</returns>
    </member>
    <member name="M:System.Diagnostics.ActivityLink.GetHashCode">
      <summary>Fournit une fonction de hachage pour l'élément <see langword="ActivityLink" /> actuel, qui convient aux algorithmes de hachage et aux structures de données comme les tables de hachage.</summary>
      <returns>Code de hachage du <see langword="ActivityLink" /> actuel.</returns>
    </member>
    <member name="M:System.Diagnostics.ActivityLink.op_Equality(System.Diagnostics.ActivityLink,System.Diagnostics.ActivityLink)">
      <summary>Détermine si deux valeurs <see langword="ActivityLink" /> spécifiées sont égales.</summary>
      <param name="left">Première valeur à comparer.</param>
      <param name="right">Deuxième valeur à comparer.</param>
      <returns>
        <see langword="true" /> si <paramref name="left" /> et <paramref name="right" /> sont égales ; sinon, <see langword="false" />.</returns>
    </member>
    <member name="M:System.Diagnostics.ActivityLink.op_Inequality(System.Diagnostics.ActivityLink,System.Diagnostics.ActivityLink)">
      <summary>Détermine si deux valeurs <see langword="ActivityLink" /> spécifiées ne sont pas égales.</summary>
      <param name="left">Première valeur à comparer.</param>
      <param name="right">Deuxième valeur à comparer.</param>
      <returns>
        <see langword="true" /> si <paramref name="left" /> et <paramref name="right" /> ne sont pas égales ; sinon, <see langword="false" />.</returns>
    </member>
    <member name="P:System.Diagnostics.ActivityLink.Context">
      <summary>Récupère le contexte d’activité à l’intérieur de ce lien d’activité.</summary>
    </member>
    <member name="P:System.Diagnostics.ActivityLink.Tags">
      <summary>Récupère l’énumération de paires clé-valeur des balises attachées au contexte d’activité.</summary>
      <returns>Énumération de balises attachées au contexte d’activité.</returns>
    </member>
    <member name="T:System.Diagnostics.ActivityListener">
      <summary>Permet d’écouter les événements d’activité de démarrage et d’arrêt et offre l’opportunité de décider de créer une activité pour les scénarios d’échantillonnage.</summary>
    </member>
    <member name="M:System.Diagnostics.ActivityListener.#ctor">
      <summary>Construisez un nouvel objet d’écouteur d’activité pour commencer à écouter les événements d’activité.</summary>
    </member>
    <member name="M:System.Diagnostics.ActivityListener.Dispose">
      <summary>Annule l’enregistrement de cet objet de l’écouteur d’activité de l’écoute des événements d’activité.</summary>
    </member>
    <member name="P:System.Diagnostics.ActivityListener.ActivityStarted">
      <summary>Obtient ou définit le rappel utilisé pour écouter l’événement de début d’activité.</summary>
      <returns>Instance de rappel d’activité utilisée pour écouter l’événement de début d’activité.</returns>
    </member>
    <member name="P:System.Diagnostics.ActivityListener.ActivityStopped">
      <summary>Obtient ou définit le rappel utilisé pour écouter l’événement d’arrêt d’activité.</summary>
      <returns>Instance de rappel de l’activité utilisée pour écouter l’événement d’arrêt de l’activité.</returns>
    </member>
    <member name="P:System.Diagnostics.ActivityListener.Sample">
      <summary>Obtient ou définit le rappel utilisé pour déterminer si la création d’objets <see cref="T:System.Diagnostics.Activity" /> avec un état de données spécifique est autorisée.</summary>
      <returns>Exemple d’instance d’activité.</returns>
    </member>
    <member name="P:System.Diagnostics.ActivityListener.SampleUsingParentId">
      <summary>Obtient ou définit le rappel utilisé pour déterminer si la création d’objets <see cref="T:System.Diagnostics.Activity" /> avec un état de données spécifique est autorisée.</summary>
      <returns>Exemple d’instance d’activité.</returns>
    </member>
    <member name="P:System.Diagnostics.ActivityListener.ShouldListenTo">
      <summary>Obtient ou définit le rappel qui permet de décider si les événements d’objet d’activité créés à l’aide de l’objet source de l’activité doivent être écoutés ou non.</summary>
      <returns>
        <see langword="true" /> pour écouter des événements ; <see langword="false" /> sinon,.</returns>
    </member>
    <member name="T:System.Diagnostics.ActivitySamplingResult">
      <summary>Valeurs d’énumération utilisées par <see cref="T:System.Diagnostics.ActivityListener" /> pour indiquer la quantité de données à collecter pour le <see cref="T:System.Diagnostics.Activity" /> associé. Le fait de demander plus de données accroît la surcharge, ce qui réduit les performances.</summary>
    </member>
    <member name="F:System.Diagnostics.ActivitySamplingResult.AllData">
      <summary>L’objet d’activité doit être rempli avec toutes les informations de propagation ainsi que toutes les autres propriétés telles que les liens, les balises et les événements. Si vous utilisez cette valeur, <see cref="P:System.Diagnostics.Activity.IsAllDataRequested" /> retourne <see langword="true" />.</summary>
    </member>
    <member name="F:System.Diagnostics.ActivitySamplingResult.AllDataAndRecorded">
      <summary>L’objet d’activité doit être rempli de la même façon que le cas <see cref="F:System.Diagnostics.ActivitySamplingResult.AllData" />. Par ailleurs, Activity.Recorded a la valeur <see langword="true" />. Pour les activités utilisant les identifiants de trace W3C, définit un bit d’indicateur dans l’ID qui est propagé en aval pour demander que la trace soit enregistrée partout.</summary>
    </member>
    <member name="F:System.Diagnostics.ActivitySamplingResult.None">
      <summary>L’objet d’activité n’a pas besoin d’être créé.</summary>
    </member>
    <member name="F:System.Diagnostics.ActivitySamplingResult.PropagationData">
      <summary>L’objet d’activité doit être créé. Il a les propriétés Name, Source, Id et Baggage. Les autres propriétés sont inutiles, et sont ignorées par cet écouteur.</summary>
    </member>
    <member name="T:System.Diagnostics.ActivitySource">
      <summary>Fournit des API permettant de créer et de démarrer des objets <see cref="T:System.Diagnostics.Activity" /> et d’inscrire des objets <see cref="T:System.Diagnostics.ActivityListener" /> pour écouter les événements <see cref="T:System.Diagnostics.Activity" /> .</summary>
    </member>
    <member name="M:System.Diagnostics.ActivitySource.#ctor(System.String,System.String)">
      <summary>Construit un objet source d’activité avec le <paramref name="name" /> spécifié.</summary>
      <param name="name">Nom de l'objet de l’activité source.</param>
      <param name="version">Version du composant publiant les informations de suivi.</param>
    </member>
    <member name="M:System.Diagnostics.ActivitySource.AddActivityListener(System.Diagnostics.ActivityListener)">
      <summary>Ajoute un écouteur aux événements de démarrage et d’arrêt de l’activité.</summary>
      <param name="listener">Objet d’écouteur d’activité à utiliser pour écouter les événements d’activité.</param>
    </member>
    <member name="M:System.Diagnostics.ActivitySource.Dispose">
      <summary>Supprime l’objet source d’activité, supprime l’instance actuelle de la liste globale et vide la liste des écouteurs.</summary>
    </member>
    <member name="M:System.Diagnostics.ActivitySource.HasListeners">
      <summary>Vérifie s’il existe des écouteurs pour cette source d’activité.</summary>
      <returns>
        <see langword="true" /> s’il existe un écouteur inscrit pour cette source d’activité ; <see langword="false" /> sinon.</returns>
    </member>
    <member name="M:System.Diagnostics.ActivitySource.StartActivity(System.String,System.Diagnostics.ActivityKind)">
      <summary>Crée une activité s’il existe des écouteurs actifs, en utilisant le nom et le type d’activité spécifiés.</summary>
      <param name="name">Nom d’opération de l’activité</param>
      <param name="kind">Type d’activité.</param>
      <returns>Objet d’activité créé, s’il avait des écouteurs actifs, ou <see langword="null" /> s’il n’a pas d’écouteurs d’événements.</returns>
    </member>
    <member name="M:System.Diagnostics.ActivitySource.StartActivity(System.String,System.Diagnostics.ActivityKind,System.Diagnostics.ActivityContext,System.Collections.Generic.IEnumerable{System.Collections.Generic.KeyValuePair{System.String,System.Object}},System.Collections.Generic.IEnumerable{System.Diagnostics.ActivityLink},System.DateTimeOffset)">
      <summary>Crée une activité s’il y a des écouteurs actifs pour celle-ci, en utilisant le nom, le type d’activité, le contexte d’activité parent, les balises, le lien d’activité facultatif et l’heure de début facultatif spécifiés.</summary>
      <param name="name">Nom d’opération de l’activité</param>
      <param name="kind">Type d’activité.</param>
      <param name="parentContext">Objet <see cref="T:System.Diagnostics.ActivityContext" /> parent avec lequel initialiser l’objet d’activité créé.</param>
      <param name="tags">Balises facultatives avec lesquelles initialiser l’objet d’activité créé.</param>
      <param name="links">Liste facultative <see cref="T:System.Diagnostics.ActivityLink" /> avec laquelle initialiser l’objet d’activité créé.</param>
      <param name="startTime">Horodatage de début facultatif à définir sur l’objet d’activité créé.</param>
      <returns>Objet d’activité créé, s’il avait des écouteurs actifs, ou <see langword="null" /> s’il n’a pas d’écouteurs d’événements.</returns>
    </member>
    <member name="M:System.Diagnostics.ActivitySource.StartActivity(System.String,System.Diagnostics.ActivityKind,System.String,System.Collections.Generic.IEnumerable{System.Collections.Generic.KeyValuePair{System.String,System.Object}},System.Collections.Generic.IEnumerable{System.Diagnostics.ActivityLink},System.DateTimeOffset)">
      <summary>Crée une activité s’il y a des écouteurs actifs pour celle-ci, en utilisant le nom, le type d’activité, l’ID parent, les balises, les liens d’activité facultatifs et l’heure de début facultatif spécifiés.</summary>
      <param name="name">Nom d’opération de l’activité</param>
      <param name="kind">Type d’activité.</param>
      <param name="parentId">ID parent avec lequel initialiser l’objet d’activité créé.</param>
      <param name="tags">Balises facultatives avec lesquelles initialiser l’objet d’activité créé.</param>
      <param name="links">Liste facultative <see cref="T:System.Diagnostics.ActivityLink" /> avec laquelle initialiser l’objet d’activité créé.</param>
      <param name="startTime">Horodatage de début facultatif à définir sur l’objet d’activité créé.</param>
      <returns>Objet d’activité créé, s’il avait des écouteurs actifs, ou <see langword="null" /> s’il n’a pas d’écouteurs d’événements.</returns>
    </member>
    <member name="P:System.Diagnostics.ActivitySource.Name">
      <summary>Retourne le nom source de l'activité.</summary>
      <returns>Chaîne qui représente le nom de la source d’activité.</returns>
    </member>
    <member name="P:System.Diagnostics.ActivitySource.Version">
      <summary>Retourne la version source de l'activité.</summary>
      <returns>Chaîne qui représente la version de la source d’activité.</returns>
    </member>
    <member name="T:System.Diagnostics.ActivitySpanId">
      <summary>Représente un <see cref="P:System.Diagnostics.Activity.SpanId" /> mis en forme selon une norme W3C.</summary>
    </member>
    <member name="M:System.Diagnostics.ActivitySpanId.CopyTo(System.Span{System.Byte})">
      <summary>Copie les 8 octets du <see cref="T:System.Diagnostics.ActivitySpanId" /> actuel vers une plage spécifiée.</summary>
      <param name="destination">Plage dans laquelle les 8 octets du SpanID doivent être copiés.</param>
    </member>
    <member name="M:System.Diagnostics.ActivitySpanId.CreateFromBytes(System.ReadOnlySpan{System.Byte})">
      <summary>Crée une valeur <see cref="T:System.Diagnostics.ActivitySpanId" /> à partir d’une plage en lecture seule de 8 octets.</summary>
      <param name="idData">Plage en lecture seule de 8 octets.</param>
      <exception cref="T:System.ArgumentOutOfRangeException">
        <paramref name="idData" /> ne contient pas huit octets.</exception>
      <returns>Nouvel ID de plage.</returns>
    </member>
    <member name="M:System.Diagnostics.ActivitySpanId.CreateFromString(System.ReadOnlySpan{System.Char})">
      <summary>Crée une valeur <see cref="T:System.Diagnostics.ActivitySpanId" /> à partir d’une plage en lecture seule de 16 caractères hexadécimaux.</summary>
      <param name="idData">Plage qui contient 16 caractères hexadécimaux.</param>
      <exception cref="T:System.ArgumentOutOfRangeException">
        <paramref name="idData" /> ne contient pas 16 caractères hexadécimaux.

- ou - 
Les caractères dans <paramref name="idData" /> ne sont pas tous des caractères hexadécimaux minuscules ou tous des zéros.</exception>
      <returns>Nouvel ID de plage.</returns>
    </member>
    <member name="M:System.Diagnostics.ActivitySpanId.CreateFromUtf8String(System.ReadOnlySpan{System.Byte})">
      <summary>Crée une valeur <see cref="T:System.Diagnostics.ActivitySpanId" /> à partir d’une plage en lecture seule d’octets encodés en UTF-8.</summary>
      <param name="idData">Plage en lecture seule d’octets encodés en UTF-8.</param>
      <returns>Nouvel ID de plage.</returns>
    </member>
    <member name="M:System.Diagnostics.ActivitySpanId.CreateRandom">
      <summary>Crée un <see cref="T:System.Diagnostics.ActivitySpanId" /> basé sur un nombre aléatoire (qui est très probablement unique).</summary>
      <returns>Nouvel ID de plage.</returns>
    </member>
    <member name="M:System.Diagnostics.ActivitySpanId.Equals(System.Diagnostics.ActivitySpanId)">
      <summary>Détermine si cette instance et l’instance <see cref="T:System.Diagnostics.ActivitySpanId" /> spécifiée ont la même valeur.</summary>
      <param name="spanId">Instance à comparer.</param>
      <returns>
        <see langword="true" /> si <paramref name="spanId" /> a la même valeur hexadécimale que l’instance actuelle ; sinon, <see langword="false" />.</returns>
    </member>
    <member name="M:System.Diagnostics.ActivitySpanId.Equals(System.Object)">
      <summary>l’instance et un objet spécifié, qui doit aussi être une instance <see cref="T:System.Diagnostics.ActivitySpanId" />, ont la même valeur.</summary>
      <param name="obj">Objet à comparer.</param>
      <returns>
        <see langword="true" /> si <paramref name="obj" /> est une instance de <see cref="T:System.Diagnostics.ActivitySpanId" /> et a la même valeur hexadécimale que l’instance actuelle ; sinon, <see langword="false" />.</returns>
    </member>
    <member name="M:System.Diagnostics.ActivitySpanId.GetHashCode">
      <summary>Retourne le code de hachage du SpanId.</summary>
      <returns>Code de hachage du SpanId.</returns>
    </member>
    <member name="M:System.Diagnostics.ActivitySpanId.op_Equality(System.Diagnostics.ActivitySpanId,System.Diagnostics.ActivitySpanId)">
      <summary>Détermine si deux instances <see cref="T:System.Diagnostics.ActivitySpanId" /> spécifiées ont la même valeur.</summary>
      <param name="spanId1">Première instance à comparer.</param>
      <param name="spandId2">Deuxième instance à comparer.</param>
      <returns>
        <see langword="true" /> si le SpanId de <paramref name="spanId1" /> est le même que le SpanId de <paramref name="spandId2" /> ; sinon <see langword="false" />.</returns>
    </member>
    <member name="M:System.Diagnostics.ActivitySpanId.op_Inequality(System.Diagnostics.ActivitySpanId,System.Diagnostics.ActivitySpanId)">
      <summary>Détermine si deux instances <see cref="T:System.Diagnostics.ActivitySpanId" /> spécifiées ont des valeurs inégales.</summary>
      <param name="spanId1">Première instance à comparer.</param>
      <param name="spandId2">Deuxième instance à comparer.</param>
      <returns>
        <see langword="true" /> si le SpanId de <paramref name="spanId1" /> est différent du SpanId de <paramref name="spandId2" /> ; sinon <see langword="false" />.</returns>
    </member>
    <member name="M:System.Diagnostics.ActivitySpanId.ToHexString">
      <summary>Retourne une chaîne de 16 caractères hexadécimaux qui représente cet ID de plage.</summary>
      <returns>Représentation sous forme de chaîne de 16 caractères hexadécimaux de cet ID de plage.</returns>
    </member>
    <member name="M:System.Diagnostics.ActivitySpanId.ToString">
      <summary>Retourne une chaîne de 16 caractères hexadécimaux qui représente cet ID de plage.</summary>
      <returns>Représentation sous forme de chaîne de 16 caractères hexadécimaux de cet ID de plage.</returns>
    </member>
    <member name="T:System.Diagnostics.ActivityTagsCollection">
      <summary>ActivityTagsCollection est une classe de collection utilisée pour stocker des balises de suivi.

Cette collection est utilisée avec des classes comme <see cref="T:System.Diagnostics.ActivityEvent" /> et <see cref="T:System.Diagnostics.ActivityLink" />.

Cette collection se comporte comme suit : - Les éléments de la collection sont triés en fonction de la façon dont ils sont ajoutés.
- N’autorisez pas la duplication des éléments avec la même clé.
- Lors de l’utilisation de l’indexeur pour stocker un élément dans la collection : - Si l’élément a une clé qui existait précédemment dans la collection et que la valeur est <see langword="null" />, l’élément de la collection correspondant à la clé est supprimé de la collection.
- Si l’élément a une clé qui existait précédemment dans la collection et que la valeur n’est pas <see langword="null" />, la nouvelle valeur d’élément remplace l’ancienne valeur stockée dans la collection.
- Dans le cas contraire, l’élément est ajouté à la collection.
- La méthode Ajouter ajoute un nouvel élément à la collection si un élément n’existe pas déjà avec la même clé. Dans le cas contraire, une exception est levée.</summary>
    </member>
    <member name="M:System.Diagnostics.ActivityTagsCollection.#ctor">
      <summary>Crée une instance de la collection.</summary>
    </member>
    <member name="M:System.Diagnostics.ActivityTagsCollection.#ctor(System.Collections.Generic.IEnumerable{System.Collections.Generic.KeyValuePair{System.String,System.Object}})">
      <summary>Créer une instance de la collection et stocker les éléments de liste d’entrée dans la collection.</summary>
      <param name="list">Liste initiale à stocker dans la collection.</param>
    </member>
    <member name="M:System.Diagnostics.ActivityTagsCollection.Add(System.Collections.Generic.KeyValuePair{System.String,System.Object})">
      <summary>Ajoute un élément à la collection</summary>
      <param name="item">Paire clé/valeur de la balise à ajouter à la collection.</param>
      <exception cref="T:System.InvalidOperationException">
        <paramref name="item" /> existe déjà dans la liste.</exception>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="item" /> a la valeur <see langword="null" />.</exception>
    </member>
    <member name="M:System.Diagnostics.ActivityTagsCollection.Add(System.String,System.Object)">
      <summary>Ajoute une balise avec la clé et la valeur fournies à la collection. Cette collection n’autorise pas l’ajout de deux balises avec la même clé.</summary>
      <param name="key">Clé de la balise.</param>
      <param name="value">Valeur de la balise.</param>
    </member>
    <member name="M:System.Diagnostics.ActivityTagsCollection.Clear">
      <summary>Supprime tous les éléments de la collection.</summary>
    </member>
    <member name="M:System.Diagnostics.ActivityTagsCollection.Contains(System.Collections.Generic.KeyValuePair{System.String,System.Object})">
      <summary>Détermine si <see cref="T:System.Collections.Generic.ICollection`1" /> contient une valeur spécifique.</summary>
      <param name="item">Objet à rechercher dans <see cref="T:System.Collections.Generic.ICollection`1" />.</param>
      <returns>
        <see langword="true" /> si <paramref name="item" /> existe dans <see cref="T:System.Collections.Generic.ICollection`1" /> ; sinon, <see langword="false" />.</returns>
    </member>
    <member name="M:System.Diagnostics.ActivityTagsCollection.ContainsKey(System.String)">
      <summary>Détermine si la collection contient un élément avec la clé spécifiée.</summary>
      <param name="key">Clé à rechercher dans <see cref="T:System.Collections.Generic.IDictionary`2" />.</param>
      <returns>
        <see langword="true" /> si la collection contient une balise avec cette clé. Sinon, <see langword="false" />.</returns>
    </member>
    <member name="M:System.Diagnostics.ActivityTagsCollection.CopyTo(System.Collections.Generic.KeyValuePair{System.String,System.Object}[],System.Int32)">
      <summary>Copie les éléments de la collection dans un tableau, en commençant au niveau d’un index de tableau particulier.</summary>
      <param name="array">Tableau qui constitue la destination des éléments copiés à partir de la collection.</param>
      <param name="arrayIndex">Index de base zéro dans un tableau au niveau duquel commencer la copie.</param>
    </member>
    <member name="M:System.Diagnostics.ActivityTagsCollection.GetEnumerator">
      <summary>Retourne un énumérateur qui itère au sein de la collection.</summary>
      <returns>Énumérateur pour <see langword="ActivityTagsCollection" />.</returns>
    </member>
    <member name="M:System.Diagnostics.ActivityTagsCollection.Remove(System.Collections.Generic.KeyValuePair{System.String,System.Object})">
      <summary>Supprime la première occurrence d'un élément spécifique dans la collection.</summary>
      <param name="item">Paire de clés de balises à supprimer.</param>
      <returns>
        <see langword="true" /> si l'élément a été supprimé avec succès de la collection ; sinon, <see langword="false" />. Cette méthode retourne également <see langword="false" /> si item est introuvable dans la collection d’origine.</returns>
    </member>
    <member name="M:System.Diagnostics.ActivityTagsCollection.Remove(System.String)">
      <summary>Supprime la balise avec la clé spécifiée de la collection.</summary>
      <param name="key">Clé de la balise.</param>
      <returns>
        <see langword="true" /> si l’élément existait et a été supprimé. Sinon, <see langword="false" />.</returns>
    </member>
    <member name="M:System.Diagnostics.ActivityTagsCollection.System#Collections#Generic#IEnumerable{System#Collections#Generic#KeyValuePair{System#String@System#Object}}#GetEnumerator">
      <summary>Retourne un énumérateur qui itère au sein de la collection.</summary>
      <returns>Énumérateur permettant d'effectuer une itération au sein de la collection.</returns>
    </member>
    <member name="M:System.Diagnostics.ActivityTagsCollection.System#Collections#IEnumerable#GetEnumerator">
      <summary>Retourne un énumérateur qui itère au sein de la collection.</summary>
      <returns>Objet <see cref="T:System.Collections.IEnumerator" /> pouvant être utilisé pour itérer au sein de la collection.</returns>
    </member>
    <member name="M:System.Diagnostics.ActivityTagsCollection.TryGetValue(System.String,System.Object@)">
      <summary>Obtient la valeur associée à la clé spécifiée.</summary>
      <param name="key">Clé de la balise.</param>
      <param name="value">Valeur de la balise.</param>
      <returns>Quand cette méthode retourne une valeur, valeur associée à la clé spécifiée, si la clé est trouvée ; sinon, valeur par défaut du type du paramètre de valeur. Ce paramètre est passé sans être initialisé.</returns>
    </member>
    <member name="P:System.Diagnostics.ActivityTagsCollection.Count">
      <summary>Obtient le nombre d’éléments contenus dans la collection.</summary>
    </member>
    <member name="P:System.Diagnostics.ActivityTagsCollection.IsReadOnly">
      <summary>Obtient une valeur indiquant si la collection est en lecture seule. Retourne toujours <see langword="false" />.</summary>
      <returns>Retourne toujours <see langword="false" />.</returns>
    </member>
    <member name="P:System.Diagnostics.ActivityTagsCollection.Item(System.String)">
      <summary>Récupère ou définit un élément de collection spécifié.
        
Lors de la définition de la valeur de cette propriété d’indexeur, le comportement suivant est observé : – Si la clé existait précédemment dans la collection et que la valeur est <see langword="null" />, l’élément de collection correspondant à la clé est supprimé de la collection.
- Si la clé existait précédemment dans la collection et que la valeur n’est pas <see langword="null" />, la valeur remplace l’ancienne valeur stockée dans la collection.
- Dans le cas contraire, un nouvel élément est ajouté à la collection.</summary>
      <param name="key">Clé de la valeur à obtenir ou à définir.</param>
      <returns>Objet mappé à la clé.</returns>
    </member>
    <member name="P:System.Diagnostics.ActivityTagsCollection.Keys">
      <summary>Obtient la liste des clés de toutes les balises stockées.</summary>
    </member>
    <member name="P:System.Diagnostics.ActivityTagsCollection.Values">
      <summary>Obtient la liste des valeurs de toutes les balises stockées.</summary>
    </member>
    <member name="T:System.Diagnostics.ActivityTagsCollection.Enumerator">
      <summary>Énumère les éléments d'un <see langword="ActivityTagsCollection" />.</summary>
    </member>
    <member name="M:System.Diagnostics.ActivityTagsCollection.Enumerator.Dispose">
      <summary>Exécute les tâches définies par l'application associées à la libération ou à la redéfinition des ressources non managées.</summary>
    </member>
    <member name="M:System.Diagnostics.ActivityTagsCollection.Enumerator.MoveNext">
      <summary>Avance l’énumérateur à l’élément suivant de la collection.</summary>
      <returns>
        <see langword="true" /> si l'énumérateur a pu avancer jusqu'à l'élément suivant ; <see langword="false" /> si l'énumérateur a dépassé la fin de la collection.</returns>
    </member>
    <member name="M:System.Diagnostics.ActivityTagsCollection.Enumerator.System#Collections#IEnumerator#Reset">
      <summary>Rétablit l'énumérateur à sa position initiale, qui précède le premier élément de la collection.</summary>
    </member>
    <member name="P:System.Diagnostics.ActivityTagsCollection.Enumerator.Current">
      <summary>Obtient l’élément de la collection situé à la position actuelle de l’énumérateur.</summary>
      <returns>Élément dans la collection à la position actuelle de l'énumérateur.</returns>
    </member>
    <member name="P:System.Diagnostics.ActivityTagsCollection.Enumerator.System#Collections#IEnumerator#Current">
      <summary>Obtient l’élément de la collection situé à la position actuelle de l’énumérateur.</summary>
      <returns>Élément dans la collection à la position actuelle de l'énumérateur.</returns>
    </member>
    <member name="T:System.Diagnostics.ActivityTraceFlags">
      <summary>Spécifie des indicateurs définis par le standard W3C qui sont associés à une activité.</summary>
    </member>
    <member name="F:System.Diagnostics.ActivityTraceFlags.None">
      <summary>L’activité n’a pas été marquée.</summary>
    </member>
    <member name="F:System.Diagnostics.ActivityTraceFlags.Recorded">
      <summary>L’activité (ou plus probablement ses parents) a été marquée comme utile pour l’enregistrement.</summary>
    </member>
    <member name="T:System.Diagnostics.ActivityTraceId">
      <summary>Représente un <see cref="P:System.Diagnostics.Activity.TraceId" /> dont le format est basé sur un standard W3C.</summary>
    </member>
    <member name="M:System.Diagnostics.ActivityTraceId.CopyTo(System.Span{System.Byte})">
      <summary>Copie les 16 octets du <see cref="T:System.Diagnostics.ActivityTraceId" /> actuel dans une plage spécifiée.</summary>
      <param name="destination">La plage dans laquelle les 16 octets de l’ID de trace doivent être copiés.</param>
    </member>
    <member name="M:System.Diagnostics.ActivityTraceId.CreateFromBytes(System.ReadOnlySpan{System.Byte})">
      <summary>Crée une valeur <see cref="T:System.Diagnostics.ActivityTraceId" /> à partir d’une plage en lecture seule de 16 octets.</summary>
      <param name="idData">Plage en lecture seule de 16 octets.</param>
      <exception cref="T:System.ArgumentOutOfRangeException">
        <paramref name="idData" /> ne contient pas huit octets.</exception>
      <returns>Nouvel ID de trace.</returns>
    </member>
    <member name="M:System.Diagnostics.ActivityTraceId.CreateFromString(System.ReadOnlySpan{System.Char})">
      <summary>Crée une valeur <see cref="T:System.Diagnostics.ActivityTraceId" /> à partir d’une plage en lecture seule de 32 caractères hexadécimaux.</summary>
      <param name="idData">Plage qui contient 32 caractères hexadécimaux.</param>
      <exception cref="T:System.ArgumentOutOfRangeException">
        <paramref name="idData" /> ne contient pas 16 caractères hexadécimaux.

- ou -

Les caractères dans <paramref name="idData" /> ne sont pas tous des caractères hexadécimaux minuscules ou tous des zéros.</exception>
      <returns>Nouvel ID de trace.</returns>
    </member>
    <member name="M:System.Diagnostics.ActivityTraceId.CreateFromUtf8String(System.ReadOnlySpan{System.Byte})">
      <summary>Crée une valeur <see cref="T:System.Diagnostics.ActivityTraceId" /> à partir d’une plage en lecture seule d’octets encodés en UTF-8.</summary>
      <param name="idData">Plage en lecture seule d’octets encodés en UTF-8.</param>
      <returns>Nouvel ID de trace.</returns>
    </member>
    <member name="M:System.Diagnostics.ActivityTraceId.CreateRandom">
      <summary>Crée un <see cref="T:System.Diagnostics.ActivitySpanId" /> basé sur un nombre aléatoire (qui est très probablement unique).</summary>
      <returns>Nouvel ID de plage.</returns>
    </member>
    <member name="M:System.Diagnostics.ActivityTraceId.Equals(System.Diagnostics.ActivityTraceId)">
      <summary>Détermine si l’instance actuelle et un <see cref="T:System.Diagnostics.ActivityTraceId" /> spécifié sont égaux.</summary>
      <param name="traceId">Instance à comparer.</param>
      <returns>
        <see langword="true" /> si <paramref name="traceId" /> a la même valeur hexadécimale que l’instance actuelle ; sinon, <see langword="false" />.</returns>
    </member>
    <member name="M:System.Diagnostics.ActivityTraceId.Equals(System.Object)">
      <summary>Détermine si cette instance et un objet spécifié, qui doit aussi être une instance <see cref="T:System.Diagnostics.ActivityTraceId" />, ont la même valeur.</summary>
      <param name="obj">Objet à comparer.</param>
      <returns>
        <see langword="true" /> si <paramref name="obj" /> est une instance de <see cref="T:System.Diagnostics.ActivityTraceId" /> et a la même valeur hexadécimale que l’instance actuelle ; sinon, <see langword="false" />.</returns>
    </member>
    <member name="M:System.Diagnostics.ActivityTraceId.GetHashCode">
      <summary>Retourne le code de hachage du TraceId.</summary>
      <returns>Code de hachage du TraceId.</returns>
    </member>
    <member name="M:System.Diagnostics.ActivityTraceId.op_Equality(System.Diagnostics.ActivityTraceId,System.Diagnostics.ActivityTraceId)">
      <summary>Détermine si deux instances <see cref="T:System.Diagnostics.ActivityTraceId" /> spécifiées ont la même valeur.</summary>
      <param name="traceId1">Première instance à comparer.</param>
      <param name="traceId2">Deuxième instance à comparer.</param>
      <returns>
        <see langword="true" /> si le TraceId de <paramref name="traceId1" /> est le même que le TraceId de <paramref name="traceId2" /> ; sinon, <see langword="false" />.</returns>
    </member>
    <member name="M:System.Diagnostics.ActivityTraceId.op_Inequality(System.Diagnostics.ActivityTraceId,System.Diagnostics.ActivityTraceId)">
      <summary>Détermine si deux instances <see cref="T:System.Diagnostics.ActivityTraceId" /> spécifiées ont la même valeur.</summary>
      <param name="traceId1">Première instance à comparer.</param>
      <param name="traceId2">Deuxième instance à comparer.</param>
      <returns>
        <see langword="true" /> si le TraceId de <paramref name="traceId1" /> est différent du TraceId de <paramref name="traceId2" /> ; sinon, <see langword="false" />.</returns>
    </member>
    <member name="M:System.Diagnostics.ActivityTraceId.ToHexString">
      <summary>Retourne une chaîne de 16 caractères hexadécimaux qui représente cet ID de plage.</summary>
      <returns>Représentation sous forme de chaîne de 32 caractères hexadécimaux de cet ID de trace.</returns>
    </member>
    <member name="M:System.Diagnostics.ActivityTraceId.ToString">
      <summary>Retourne une chaîne de 32 caractères hexadécimaux qui représente cet ID de trace.</summary>
      <returns>Représentation sous forme de chaîne de 32 caractères hexadécimaux de cet ID de trace.</returns>
    </member>
    <member name="T:System.Diagnostics.DiagnosticListener">
      <summary>Fournit une implémentation de la classe <see cref="T:System.Diagnostics.DiagnosticSource" /> abstraite qui représente un emplacement nommé auquel une source envoie ses informations (événements).</summary>
    </member>
    <member name="M:System.Diagnostics.DiagnosticListener.#ctor(System.String)">
      <summary>Crée un <see cref="T:System.Diagnostics.DiagnosticListener" />.</summary>
      <param name="name">Nom de cet objet <see cref="T:System.Diagnostics.DiagnosticListener" />.</param>
    </member>
    <member name="M:System.Diagnostics.DiagnosticListener.Dispose">
      <summary>Supprime les NotificationListeners.</summary>
    </member>
    <member name="M:System.Diagnostics.DiagnosticListener.IsEnabled">
      <summary>Détermine s’il y a des abonnés inscrits.</summary>
      <returns>
        <see langword="true" /> s’il y en a, <see langword="false" /> dans le cas contraire.</returns>
    </member>
    <member name="M:System.Diagnostics.DiagnosticListener.IsEnabled(System.String)">
      <summary>Vérifie si le <see cref="T:System.Diagnostics.DiagnosticListener" /> est activé.</summary>
      <param name="name">Nom de l’événement à vérifier.</param>
      <returns>
        <see langword="true" /> si les notifications sont activées ; sinon, <see langword="false" />.</returns>
    </member>
    <member name="M:System.Diagnostics.DiagnosticListener.IsEnabled(System.String,System.Object,System.Object)">
      <summary>Vérifie si un abonné aux événements de diagnostic est intéressé de recevoir des événements avec ce nom. Les abonnés indiquent leur intérêt avec un délégué fourni dans <see cref="Overload:System.Diagnostics.DiagnosticListener.Subscribe" />.</summary>
      <param name="name">Nom de l’événement à vérifier.</param>
      <param name="arg1">Objet qui représente un contexte.</param>
      <param name="arg2">Objet qui représente un contexte.</param>
      <returns>
        <see langword="true" /> s’il est activé ; sinon, <see langword="false" />.</returns>
    </member>
    <member name="M:System.Diagnostics.DiagnosticListener.OnActivityExport(System.Diagnostics.Activity,System.Object)">
      <summary>Appelle la méthode OnActivityExport de tous les abonnés.</summary>
      <param name="activity">Activité affectée par un événement externe.</param>
      <param name="payload">Objet qui représente la requête sortante.</param>
    </member>
    <member name="M:System.Diagnostics.DiagnosticListener.OnActivityImport(System.Diagnostics.Activity,System.Object)">
      <summary>Appelle la méthode OnActivityImport de tous les abonnés.</summary>
      <param name="activity">Activité affectée par un événement externe.</param>
      <param name="payload">Objet qui représente la requête entrante.</param>
    </member>
    <member name="M:System.Diagnostics.DiagnosticListener.Subscribe(System.IObserver{System.Collections.Generic.KeyValuePair{System.String,System.Object}})">
      <summary>Ajoute un abonné.</summary>
      <param name="observer">Abonné.</param>
      <returns>Référence à une interface qui permet à l’écouteur d’arrêter de recevoir des notifications avant que la <see cref="T:System.Diagnostics.DiagnosticSource" /> ait fini de les envoyer.</returns>
    </member>
    <member name="M:System.Diagnostics.DiagnosticListener.Subscribe(System.IObserver{System.Collections.Generic.KeyValuePair{System.String,System.Object}},System.Func{System.String,System.Object,System.Object,System.Boolean})">
      <summary>Ajoute un abonné et filtre éventuellement les événements en fonction de leur nom et de jusqu’à deux objets de contexte.</summary>
      <param name="observer">Abonné.</param>
      <param name="isEnabled">Délégué qui filtre les événements en fonction de leur nom et de jusqu’à deux objets de contexte (pouvant être <see langword="null" />), ou <see langword="null" /> si un filtre d’événements n’est pas souhaitable.</param>
      <returns>Référence à une interface qui permet à l’écouteur d’arrêter de recevoir des notifications avant que la <see cref="T:System.Diagnostics.DiagnosticSource" /> ait fini de les envoyer.</returns>
    </member>
    <member name="M:System.Diagnostics.DiagnosticListener.Subscribe(System.IObserver{System.Collections.Generic.KeyValuePair{System.String,System.Object}},System.Func{System.String,System.Object,System.Object,System.Boolean},System.Action{System.Diagnostics.Activity,System.Object},System.Action{System.Diagnostics.Activity,System.Object})">
      <summary>Ajoute un abonné, filtre éventuellement les événements en fonction de leur nom et de jusqu’à deux objets de contexte, et spécifie les méthodes à appeler quand les fournisseurs importent ou exportent des activités depuis en dehors du processus.</summary>
      <param name="observer">Abonné.</param>
      <param name="isEnabled">Délégué qui filtre les événements en fonction de leur nom et de jusqu’à deux objets de contexte (pouvant être <see langword="null" />), ou <see langword="null" /> si un filtre d’événements n’est pas souhaitable.</param>
      <param name="onActivityImport">Délégué d’action qui reçoit l’activité affectée par un événement externe et un objet qui représente la requête entrante.</param>
      <param name="onActivityExport">Délégué d’action qui reçoit l’activité affectée par un événement externe et un objet qui représente la requête sortante.</param>
      <returns>Référence à une interface qui permet à l’écouteur d’arrêter de recevoir des notifications avant que la <see cref="T:System.Diagnostics.DiagnosticSource" /> ait fini de les envoyer.</returns>
    </member>
    <member name="M:System.Diagnostics.DiagnosticListener.Subscribe(System.IObserver{System.Collections.Generic.KeyValuePair{System.String,System.Object}},System.Predicate{System.String})">
      <summary>Ajoute un abonné et filtre éventuellement les événements en fonction de leur nom.</summary>
      <param name="observer">Abonné.</param>
      <param name="isEnabled">Délégué qui filtre les événements en fonction de leur nom (<see cref="T:System.String" />). Le délégué doit retourner <see langword="true" /> si l’événement est activé.</param>
      <returns>Référence à une interface qui permet à l’écouteur d’arrêter de recevoir des notifications avant que la <see cref="T:System.Diagnostics.DiagnosticSource" /> ait fini de les envoyer.</returns>
    </member>
    <member name="M:System.Diagnostics.DiagnosticListener.ToString">
      <summary>Retourne une chaîne avec le nom de ce DiagnosticListener.</summary>
      <returns>Nom de ce DiagnosticListener.</returns>
    </member>
    <member name="M:System.Diagnostics.DiagnosticListener.Write(System.String,System.Object)">
      <summary>Journalise une notification.</summary>
      <param name="name">Nom de l’événement à journaliser.</param>
      <param name="value">Objet qui représente la charge utile pour l’événement.</param>
    </member>
    <member name="P:System.Diagnostics.DiagnosticListener.AllListeners">
      <summary>Obtient la collection d’écouteurs de ce <see cref="T:System.Diagnostics.DiagnosticListener" />.</summary>
    </member>
    <member name="P:System.Diagnostics.DiagnosticListener.Name">
      <summary>Obtient le nom de cet objet <see cref="T:System.Diagnostics.DiagnosticListener" />.</summary>
      <returns>Nom de l'objet <see cref="T:System.Diagnostics.DiagnosticListener" />.</returns>
    </member>
    <member name="T:System.Diagnostics.DiagnosticSource">
      <summary>Classe abstraite qui permet d’instrumenter le code pour la journalisation en production des charges enrichies à consommer dans le processus qui a été instrumenté.</summary>
    </member>
    <member name="M:System.Diagnostics.DiagnosticSource.#ctor">
      <summary>Initialise une instance de la classe <see cref="T:System.Diagnostics.DiagnosticSource" />.</summary>
    </member>
    <member name="M:System.Diagnostics.DiagnosticSource.IsEnabled(System.String)">
      <summary>Vérifie si l’événement de notification est activé.</summary>
      <param name="name">Nom de l’événement écrit.</param>
      <returns>
        <see langword="true" /> si l’événement de notification est activé ; sinon, <see langword="false" />.</returns>
    </member>
    <member name="M:System.Diagnostics.DiagnosticSource.IsEnabled(System.String,System.Object,System.Object)">
      <summary>Vérifie si l’événement de notification est activé.</summary>
      <param name="name">Nom de l’événement écrit.</param>
      <param name="arg1">Objet représentant le contexte supplémentaire pour IsEnabled. Les consommateurs doivent s’attendre à recevoir une valeur <see langword="null" />, qui peut indiquer que le producteur a appelé un IsEnabled(string) pur afin de vérifier si le consommateur souhaite obtenir des notifications des événements de ce type. En fonction de cela, le producteur peut rappeler IsEnabled (string, object, object) avec un contexte non <see langword="null" />.</param>
      <param name="arg2">Optionnel. Objet représentant le contexte supplémentaire pour IsEnabled. <see langword="null" /> par défaut. Les consommateurs doivent s’attendre à recevoir une valeur <see langword="null" />, qui peut indiquer que le producteur a appelé un IsEnabled(string) pur ou que le producteur a passé tout le contexte nécessaire dans <paramref name="arg1" />.</param>
      <returns>
        <see langword="true" /> si l’événement de notification est activé ; sinon, <see langword="false" />.</returns>
    </member>
    <member name="M:System.Diagnostics.DiagnosticSource.OnActivityExport(System.Diagnostics.Activity,System.Object)">
      <summary>Transfère l’état d’une activité à un événement ou une opération, comme une requête HTTP sortante, qui se produit en dehors du processus.</summary>
      <param name="activity">Activité affectée par un événement externe.</param>
      <param name="payload">Objet qui représente la requête sortante.</param>
    </member>
    <member name="M:System.Diagnostics.DiagnosticSource.OnActivityImport(System.Diagnostics.Activity,System.Object)">
      <summary>Transfère l’état à une activité depuis un événement ou une opération, comme une requête HTTP entrante, qui s’est produite en dehors du processus.</summary>
      <param name="activity">Activité affectée par un événement externe.</param>
      <param name="payload">Charge utile qui représente la requête entrante.</param>
    </member>
    <member name="M:System.Diagnostics.DiagnosticSource.StartActivity(System.Diagnostics.Activity,System.Object)">
      <summary>Démarre un <see cref="T:System.Diagnostics.Activity" /> et écrit un événement de démarrage.</summary>
      <param name="activity">Le <see cref="T:System.Diagnostics.Activity" /> à démarrer.</param>
      <param name="args">Objet qui représente la valeur passée comme charge utile pour l’événement.</param>
      <returns>Activité démarrée pour un chaînage pratique.</returns>
    </member>
    <member name="M:System.Diagnostics.DiagnosticSource.StopActivity(System.Diagnostics.Activity,System.Object)">
      <summary>Arrête l’activité <see cref="T:System.Diagnostics.Activity" />, continue l’activité <see cref="P:System.Diagnostics.Activity.Current" /> globale et notifie les consommateurs que l’activité <see cref="T:System.Diagnostics.Activity" /> a été arrêtée.</summary>
      <param name="activity">Activité à arrêter.</param>
      <param name="args">Objet qui représente la valeur passée comme charge utile pour l’événement.</param>
    </member>
    <member name="M:System.Diagnostics.DiagnosticSource.Write(System.String,System.Object)">
      <summary>Fournit un moyen générique pour journaliser les charges utiles complexes.</summary>
      <param name="name">Nom de l’événement écrit.</param>
      <param name="value">Objet qui représente la valeur passée comme charge utile pour l’événement. C’est souvent un type anonyme qui contient plusieurs sous-valeurs.</param>
    </member>
    <member name="T:System.Diagnostics.SampleActivity`1">
      <summary>Délégué qui définit la signature des rappels de <see cref="T:System.Diagnostics.ActivityListener" /> utilisés dans le processus d’échantillonnage.</summary>
      <param name="options">Options de création d’activité utilisées par les rappels de <see cref="T:System.Diagnostics.ActivityListener" /> pour décider de créer ou non l’objet d’activité.</param>
      <typeparam name="T">Type du parent demandé avec lequel créer l’objet d’activité. Il doit s’agir d’une chaîne ou d’une <see cref="T:System.Diagnostics.ActivityContext" /> instance.</typeparam>
      <returns>Objet contenant les résultats de l’échantillonnage qui indiquent la quantité de données à collecter pour le <see cref="T:System.Diagnostics.Activity" /> associé.</returns>
    </member>
  </members>
</doc>