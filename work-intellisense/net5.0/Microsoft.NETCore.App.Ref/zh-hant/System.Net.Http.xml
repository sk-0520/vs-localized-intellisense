<?xml version="1.0" encoding="utf-8"?>
<doc xmlns:vsli="https://github.com/sk-0520/vs-localized-intellisense/tree/master/schema/2024">
  <assembly>
    <name>System.Net.Http</name>
  </assembly>
  <members>
    <member name="T:System.Net.Http.ByteArrayContent">
      <summary vsli:raw="Provides HTTP content based on a byte array.">提供以位元組陣列為基礎的 HTTP 內容。</summary>
    </member>
    <member name="M:System.Net.Http.ByteArrayContent.#ctor(System.Byte[])">
      <summary vsli:raw="Initializes a new instance of the &lt;see cref=&quot;T:System.Net.Http.ByteArrayContent&quot; /&gt; class.">初始化 <see cref="T:System.Net.Http.ByteArrayContent" /> 類別的新執行個體。</summary>
      <param name="content" vsli:raw="The content used to initialize the &lt;see cref=&quot;T:System.Net.Http.ByteArrayContent&quot; /&gt;.">用來初始化 <see cref="T:System.Net.Http.ByteArrayContent" /> 的內容。</param>
      <exception cref="T:System.ArgumentNullException" vsli:raw="The &lt;paramref name=&quot;content&quot; /&gt; parameter is &lt;see langword=&quot;null&quot; /&gt;.">
        <paramref name="content" /> 參數為 <see langword="null" />。</exception>
    </member>
    <member name="M:System.Net.Http.ByteArrayContent.#ctor(System.Byte[],System.Int32,System.Int32)">
      <summary vsli:raw="Initializes a new instance of the &lt;see cref=&quot;T:System.Net.Http.ByteArrayContent&quot; /&gt; class.">初始化 <see cref="T:System.Net.Http.ByteArrayContent" /> 類別的新執行個體。</summary>
      <param name="content" vsli:raw="The content used to initialize the &lt;see cref=&quot;T:System.Net.Http.ByteArrayContent&quot; /&gt;.">用來初始化 <see cref="T:System.Net.Http.ByteArrayContent" /> 的內容。</param>
      <param name="offset" vsli:raw="The offset, in bytes, in the &lt;paramref name=&quot;content&quot; /&gt; parameter used to initialize the &lt;see cref=&quot;T:System.Net.Http.ByteArrayContent&quot; /&gt;.">
        <paramref name="content" /> 參數中用來初始化 <see cref="T:System.Net.Http.ByteArrayContent" /> 的位移 (以位元組為單位)。</param>
      <param name="count" vsli:raw="The number of bytes in the &lt;paramref name=&quot;content&quot; /&gt; starting from the &lt;paramref name=&quot;offset&quot; /&gt; parameter used to initialize the &lt;see cref=&quot;T:System.Net.Http.ByteArrayContent&quot; /&gt;.">
        <paramref name="content" />中的位元組數目（從用來初始化<see cref="T:System.Net.Http.ByteArrayContent" /> 的<paramref name="offset" />參數開始）。</param>
      <exception cref="T:System.ArgumentNullException" vsli:raw="The &lt;paramref name=&quot;content&quot; /&gt; parameter is &lt;see langword=&quot;null&quot; /&gt;.">
        <paramref name="content" /> 參數為 <see langword="null" />。</exception>
      <exception cref="T:System.ArgumentOutOfRangeException" vsli:raw="The &lt;paramref name=&quot;offset&quot; /&gt; parameter is less than zero.  &#xA;  &#xA; -or-  &#xA;  &#xA; The &lt;paramref name=&quot;offset&quot; /&gt; parameter is greater than the length of content specified by the &lt;paramref name=&quot;content&quot; /&gt; parameter.  &#xA;  &#xA; -or-  &#xA;  &#xA; The &lt;paramref name=&quot;count&quot; /&gt; parameter is less than zero.  &#xA;  &#xA; -or-  &#xA;  &#xA; The &lt;paramref name=&quot;count&quot; /&gt; parameter is greater than the length of content specified by the &lt;paramref name=&quot;content&quot; /&gt; parameter - minus the &lt;paramref name=&quot;offset&quot; /&gt; parameter.">
        <paramref name="offset" /> 參數小於零。  
  
-或- 
<paramref name="offset" /> 參數大於 <paramref name="content" /> 參數指定的內容長度。  
  
-或- 
<paramref name="count" /> 參數小於零。  
  
-或- 
<paramref name="count" /> 參數大於 <paramref name="content" /> 參數指定的內容長度，減去 <paramref name="offset" /> 參數。</exception>
    </member>
    <member name="M:System.Net.Http.ByteArrayContent.CreateContentReadStream(System.Threading.CancellationToken)">
      <summary vsli:raw="Creates an HTTP content stream for reading. It uses the memory from the &lt;see cref=&quot;T:System.Net.Http.ByteArrayContent&quot; /&gt; as a backing store.">建立用於讀取的 HTTP 內容資料流。 該資料流會使用 <see cref="T:System.Net.Http.ByteArrayContent" /> 的記憶體做為備份存放區。</summary>
      <param name="cancellationToken" vsli:raw="The cancellation token to cancel the operation.">用於取消作業的取消權杖。</param>
      <returns vsli:raw="The HTTP content stream.">HTTP 內容資料流。</returns>
    </member>
    <member name="M:System.Net.Http.ByteArrayContent.CreateContentReadStreamAsync">
      <summary vsli:raw="Creates an HTTP content stream as an asynchronous operation for reading whose backing store is memory from the &lt;see cref=&quot;T:System.Net.Http.ByteArrayContent&quot; /&gt;.">以非同步作業方式建立用於讀取的 HTTP 內容資料流，而其備份存放區是 <see cref="T:System.Net.Http.ByteArrayContent" /> 中的記憶體。</summary>
      <returns vsli:raw="The task object representing the asynchronous operation.">工作物件，表示非同步作業。</returns>
    </member>
    <member name="M:System.Net.Http.ByteArrayContent.SerializeToStream(System.IO.Stream,System.Net.TransportContext,System.Threading.CancellationToken)">
      <summary vsli:raw="Serializes and writes the byte array provided in the constructor to an HTTP content stream.">將建構函式中提供的位元組陣列序列化並寫入 HTTP 內容資料流。</summary>
      <param name="stream" vsli:raw="The target stream.">目標資料流。</param>
      <param name="context" vsli:raw="Optional information about the transport, like the channel binding token. This parameter can be &lt;see langword=&quot;null&quot; /&gt;.">傳輸的選擇性資訊 (例如通道繫結權杖)。 這個參數可以是 <see langword="null" />。</param>
      <param name="cancellationToken" vsli:raw="The cancellation token to cancel the operation.">用於取消作業的取消權杖。</param>
    </member>
    <member name="M:System.Net.Http.ByteArrayContent.SerializeToStreamAsync(System.IO.Stream,System.Net.TransportContext)">
      <summary vsli:raw="Serialize and write the byte array provided in the constructor to an HTTP content stream as an asynchronous operation.">以非同步作業方式序列化並寫入建構函式中提供的位元組陣列至 HTTP 內容資料流。</summary>
      <param name="stream" vsli:raw="The target stream.">目標資料流。</param>
      <param name="context" vsli:raw="Information about the transport, like channel binding token. This parameter may be &lt;see langword=&quot;null&quot; /&gt;.">傳輸的相關資訊 (例如通道繫結權杖)。 此參數可以是 <see langword="null" />。</param>
      <returns vsli:raw="The task object representing the asynchronous operation.">工作物件，表示非同步作業。</returns>
    </member>
    <member name="M:System.Net.Http.ByteArrayContent.SerializeToStreamAsync(System.IO.Stream,System.Net.TransportContext,System.Threading.CancellationToken)">
      <summary vsli:raw="Serialize and write the byte array provided in the constructor to an HTTP content stream as an asynchronous operation.">以非同步作業方式序列化並寫入建構函式中提供的位元組陣列至 HTTP 內容資料流。</summary>
      <param name="stream" vsli:raw="The target stream.">目標資料流。</param>
      <param name="context" vsli:raw="Information about the transport, like channel binding token. This parameter may be &lt;see langword=&quot;null&quot; /&gt;.">傳輸的相關資訊 (例如通道繫結權杖)。 此參數可以是 <see langword="null" />。</param>
      <param name="cancellationToken" vsli:raw="The cancellation token to cancel the operation.">用於取消作業的取消權杖。</param>
      <returns vsli:raw="The task object representing the asynchronous operation.">工作物件，表示非同步作業。</returns>
    </member>
    <member name="M:System.Net.Http.ByteArrayContent.TryComputeLength(System.Int64@)">
      <summary vsli:raw="Determines whether a byte array has a valid length in bytes.">判斷位元組陣列是否有有效的位元組長度。</summary>
      <param name="length" vsli:raw="The length in bytes of the byte array.">位元組陣列的位元組長度。</param>
      <returns vsli:raw="&lt;see langword=&quot;true&quot; /&gt; if &lt;paramref name=&quot;length&quot; /&gt; is a valid length; otherwise, &lt;see langword=&quot;false&quot; /&gt;.">若 <paramref name="length" /> 為有效的長度則為 <see langword="true" />；否則為 <see langword="false" />。</returns>
    </member>
    <member name="T:System.Net.Http.ClientCertificateOption">
      <summary vsli:raw="Specifies how client certificates are provided.">指定如何提供用戶端憑證。</summary>
    </member>
    <member name="F:System.Net.Http.ClientCertificateOption.Automatic">
      <summary vsli:raw="The &lt;see cref=&quot;T:System.Net.Http.HttpClientHandler&quot; /&gt; will attempt to provide  all available client certificates  automatically.">
        <see cref="T:System.Net.Http.HttpClientHandler" /> 會嘗試自動提供所有可用的用戶端憑證。</summary>
    </member>
    <member name="F:System.Net.Http.ClientCertificateOption.Manual">
      <summary vsli:raw="The application manually provides the client certificates to the &lt;see cref=&quot;T:System.Net.Http.WebRequestHandler&quot; /&gt;. This value is the default.">應用程式會以手動方式提供用戶端憑證給 <see cref="T:System.Net.Http.WebRequestHandler" />。 這個值為預設值。</summary>
    </member>
    <member name="T:System.Net.Http.DelegatingHandler">
      <summary vsli:raw="A type for HTTP handlers that delegate the processing of HTTP response messages to another handler, called the inner handler.">HTTP 處理常式的類型，這些處理常式會將 HTTP 回應訊息的處理委派給另一個處理常式，也稱為內部處理常式。</summary>
    </member>
    <member name="M:System.Net.Http.DelegatingHandler.#ctor">
      <summary vsli:raw="Creates a new instance of the &lt;see cref=&quot;T:System.Net.Http.DelegatingHandler&quot; /&gt; class.">建立 <see cref="T:System.Net.Http.DelegatingHandler" /> 類別的新執行個體。</summary>
    </member>
    <member name="M:System.Net.Http.DelegatingHandler.#ctor(System.Net.Http.HttpMessageHandler)">
      <summary vsli:raw="Creates a new instance of the &lt;see cref=&quot;T:System.Net.Http.DelegatingHandler&quot; /&gt; class with a specific inner handler.">使用特定的內部處理常式，建立 <see cref="T:System.Net.Http.DelegatingHandler" /> 類別的新執行個體。</summary>
      <param name="innerHandler" vsli:raw="The inner handler which is responsible for processing the HTTP response messages.">負責處理 HTTP 回應訊息的內部處理常式。</param>
    </member>
    <member name="M:System.Net.Http.DelegatingHandler.Dispose(System.Boolean)">
      <summary vsli:raw="Releases the unmanaged resources used by the &lt;see cref=&quot;T:System.Net.Http.DelegatingHandler&quot; /&gt;, and optionally disposes of the managed resources.">釋放 <see cref="T:System.Net.Http.DelegatingHandler" /> 所使用的 Unmanaged 資源，並選擇性處置 Managed 資源。</summary>
      <param name="disposing" vsli:raw="&lt;see langword=&quot;true&quot; /&gt; to release both managed and unmanaged resources; &lt;see langword=&quot;false&quot; /&gt; to releases only unmanaged resources.">
        <see langword="true" /> 表示會同時釋放 Managed 和 Unmanaged 資源；<see langword="false" /> 則表示只釋放 Unmanaged 資源。</param>
    </member>
    <member name="M:System.Net.Http.DelegatingHandler.Send(System.Net.Http.HttpRequestMessage,System.Threading.CancellationToken)">
      <summary vsli:raw="Sends an HTTP request to the inner handler to send to the server.">將 HTTP 要求傳送到內部處理常式以傳送到伺服器。</summary>
      <param name="request" vsli:raw="The HTTP request message to send to the server.">要傳送至伺服器的 HTTP 要求訊息。</param>
      <param name="cancellationToken" vsli:raw="A cancellation token to cancel operation.">用於取消作業的取消語彙基元。</param>
      <returns vsli:raw="An HTTP response message.">HTTP 回應訊息。</returns>
    </member>
    <member name="M:System.Net.Http.DelegatingHandler.SendAsync(System.Net.Http.HttpRequestMessage,System.Threading.CancellationToken)">
      <summary vsli:raw="Sends an HTTP request to the inner handler to send to the server as an asynchronous operation.">以非同步作業方式將 HTTP 要求傳送到內部處理常式，以傳送到伺服器。</summary>
      <param name="request" vsli:raw="The HTTP request message to send to the server.">要傳送至伺服器的 HTTP 要求訊息。</param>
      <param name="cancellationToken" vsli:raw="A cancellation token to cancel operation.">用於取消作業的取消語彙基元。</param>
      <exception cref="T:System.ArgumentNullException" vsli:raw="The &lt;paramref name=&quot;request&quot; /&gt; was &lt;see langword=&quot;null&quot; /&gt;.">
        <paramref name="request" /> 以前是 <see langword="null" />。</exception>
      <returns vsli:raw="The task object representing the asynchronous operation.">工作物件，表示非同步作業。</returns>
    </member>
    <member name="P:System.Net.Http.DelegatingHandler.InnerHandler">
      <summary vsli:raw="Gets or sets the inner handler which processes the HTTP response messages.">取得或設定處理 HTTP 回應訊息的內部處理常式。</summary>
      <returns vsli:raw="The inner handler for HTTP response messages.">HTTP 回應訊息的內部處理常式。</returns>
    </member>
    <member name="T:System.Net.Http.FormUrlEncodedContent">
      <summary vsli:raw="A container for name/value tuples encoded using application/x-www-form-urlencoded MIME type.">使用 application/x-www-form-urlencoded MIME 類型編碼之名稱/值 Tuple 的容器。</summary>
    </member>
    <member name="M:System.Net.Http.FormUrlEncodedContent.#ctor(System.Collections.Generic.IEnumerable{System.Collections.Generic.KeyValuePair{System.String,System.String}})">
      <summary vsli:raw="Initializes a new instance of the &lt;see cref=&quot;T:System.Net.Http.FormUrlEncodedContent&quot; /&gt; class with a specific collection of name/value pairs.">使用特定名稱/值組集合，初始化 <see cref="T:System.Net.Http.FormUrlEncodedContent" /> 類別的新執行個體。</summary>
      <param name="nameValueCollection" vsli:raw="A collection of name/value pairs.">名稱/值組的集合。</param>
    </member>
    <member name="M:System.Net.Http.FormUrlEncodedContent.SerializeToStreamAsync(System.IO.Stream,System.Net.TransportContext,System.Threading.CancellationToken)">
      <summary vsli:raw="Serialize and write all name/value tuples provided in the constructor to an HTTP content stream as an asynchronous operation.">以非同步作業方式，將建構函式中提供的所有名稱/值 Tuple 序列化並寫入 HTTP 內容資料流。</summary>
      <param name="stream" vsli:raw="The target stream.">目標資料流。</param>
      <param name="context" vsli:raw="Information about the transport, like channel binding token. This parameter may be &lt;see langword=&quot;null&quot; /&gt;.">傳輸的相關資訊 (例如通道繫結權杖)。 此參數可以是 <see langword="null" />。</param>
      <param name="cancellationToken" vsli:raw="The cancellation token to cancel the operation.">用於取消作業的取消權杖。</param>
      <returns vsli:raw="The task object representing the asynchronous operation.">工作物件，表示非同步作業。</returns>
    </member>
    <member name="T:System.Net.Http.HeaderEncodingSelector`1">
      <summary vsli:raw="Represents a method that specifies the encoding to use when interpreting header values.">代表會指定使用哪一種編碼來解譯標題值的方法。</summary>
      <param name="headerName" vsli:raw="The name of the header to specify for the encoding.">要針對編碼指定的標題名稱。</param>
      <param name="context" vsli:raw="The type we are encoding/decoding the headers for.">我們正在編碼/解碼的標題類型。</param>
      <typeparam name="TContext" vsli:raw="The type of the headers that are being encoded/decoded." />
      <returns vsli:raw="The encoding to use, or &lt;see langword=&quot;null&quot; /&gt; to use the default behavior.">要使用的編碼方式，或用 <see langword="null" /> 來使用預設行為。</returns>
    </member>
    <member name="T:System.Net.Http.Headers.AuthenticationHeaderValue">
      <summary vsli:raw="Represents authentication information in Authorization, ProxyAuthorization, WWW-Authenticate, and Proxy-Authenticate header values.">表示 Authorization、ProxyAuthorization、WWW-Authenticate 和 Proxy 驗證標頭值中的驗證資訊。</summary>
    </member>
    <member name="M:System.Net.Http.Headers.AuthenticationHeaderValue.#ctor(System.String)">
      <summary vsli:raw="Initializes a new instance of the &lt;see cref=&quot;T:System.Net.Http.Headers.AuthenticationHeaderValue&quot; /&gt; class.">初始化 <see cref="T:System.Net.Http.Headers.AuthenticationHeaderValue" /> 類別的新執行個體。</summary>
      <param name="scheme" vsli:raw="The scheme to use for authorization.">用於授權的配置。</param>
    </member>
    <member name="M:System.Net.Http.Headers.AuthenticationHeaderValue.#ctor(System.String,System.String)">
      <summary vsli:raw="Initializes a new instance of the &lt;see cref=&quot;T:System.Net.Http.Headers.AuthenticationHeaderValue&quot; /&gt; class.">初始化 <see cref="T:System.Net.Http.Headers.AuthenticationHeaderValue" /> 類別的新執行個體。</summary>
      <param name="scheme" vsli:raw="The scheme to use for authorization.">用於授權的配置。</param>
      <param name="parameter" vsli:raw="The credentials containing the authentication information of the user agent for the resource being requested.">認證，包含所要求資源的使用者代理程式驗證資訊。</param>
    </member>
    <member name="M:System.Net.Http.Headers.AuthenticationHeaderValue.Equals(System.Object)">
      <summary vsli:raw="Determines whether the specified &lt;see cref=&quot;T:System.Object&quot; /&gt; is equal to the current &lt;see cref=&quot;T:System.Net.Http.Headers.AuthenticationHeaderValue&quot; /&gt; object.">判斷指定的 <see cref="T:System.Object" /> 是否等於目前的 <see cref="T:System.Net.Http.Headers.AuthenticationHeaderValue" /> 物件。</summary>
      <param name="obj" vsli:raw="The object to compare with the current object.">要與目前物件比較的物件。</param>
      <returns vsli:raw="&lt;see langword=&quot;true&quot; /&gt; if the specified &lt;see cref=&quot;T:System.Object&quot; /&gt; is equal to the current object; otherwise, &lt;see langword=&quot;false&quot; /&gt;.">如果指定的 <see cref="T:System.Object" /> 和目前的物件相等，則為 <see langword="true" />；否則為 <see langword="false" />。</returns>
    </member>
    <member name="M:System.Net.Http.Headers.AuthenticationHeaderValue.GetHashCode">
      <summary vsli:raw="Serves as a hash function for an  &lt;see cref=&quot;T:System.Net.Http.Headers.AuthenticationHeaderValue&quot; /&gt; object.">做為 <see cref="T:System.Net.Http.Headers.AuthenticationHeaderValue" /> 物件的雜湊函式。</summary>
      <returns vsli:raw="A hash code for the current object.">目前物件的雜湊碼。</returns>
    </member>
    <member name="M:System.Net.Http.Headers.AuthenticationHeaderValue.Parse(System.String)">
      <summary vsli:raw="Converts a string to an &lt;see cref=&quot;T:System.Net.Http.Headers.AuthenticationHeaderValue&quot; /&gt; instance.">將字串轉換為 <see cref="T:System.Net.Http.Headers.AuthenticationHeaderValue" /> 執行個體。</summary>
      <param name="input" vsli:raw="A string that represents authentication header value information.">表示驗證標頭值資訊的字串。</param>
      <exception cref="T:System.ArgumentNullException" vsli:raw="&lt;paramref name=&quot;input&quot; /&gt; is a &lt;see langword=&quot;null&quot; /&gt; reference.">
        <paramref name="input" /> 是 <see langword="null" /> 參考。</exception>
      <exception cref="T:System.FormatException" vsli:raw="&lt;paramref name=&quot;input&quot; /&gt; is not valid authentication header value information.">
        <paramref name="input" /> 不是有效的驗證標頭值資訊。</exception>
      <returns vsli:raw="An &lt;see cref=&quot;T:System.Net.Http.Headers.AuthenticationHeaderValue&quot; /&gt; instance.">
        <see cref="T:System.Net.Http.Headers.AuthenticationHeaderValue" /> 執行個體。</returns>
    </member>
    <member name="M:System.Net.Http.Headers.AuthenticationHeaderValue.System#ICloneable#Clone">
      <summary vsli:raw="Creates a new object that is a copy of the current &lt;see cref=&quot;T:System.Net.Http.Headers.AuthenticationHeaderValue&quot; /&gt; instance.">建立新物件，為目前 <see cref="T:System.Net.Http.Headers.AuthenticationHeaderValue" /> 執行個體的複本。</summary>
      <returns vsli:raw="A copy of the current instance.">目前執行個體的複本。</returns>
    </member>
    <member name="M:System.Net.Http.Headers.AuthenticationHeaderValue.ToString">
      <summary vsli:raw="Returns a string that represents the current &lt;see cref=&quot;T:System.Net.Http.Headers.AuthenticationHeaderValue&quot; /&gt; object.">傳回表示目前 <see cref="T:System.Net.Http.Headers.AuthenticationHeaderValue" /> 物件的字串。</summary>
      <returns vsli:raw="A string that represents the current object.">表示目前物件的字串。</returns>
    </member>
    <member name="M:System.Net.Http.Headers.AuthenticationHeaderValue.TryParse(System.String,System.Net.Http.Headers.AuthenticationHeaderValue@)">
      <summary vsli:raw="Determines whether a string is valid &lt;see cref=&quot;T:System.Net.Http.Headers.AuthenticationHeaderValue&quot; /&gt; information.">判斷字串是否為有效的 <see cref="T:System.Net.Http.Headers.AuthenticationHeaderValue" /> 資訊。</summary>
      <param name="input" vsli:raw="The string to validate.">要驗證的字串。</param>
      <param name="parsedValue" vsli:raw="The &lt;see cref=&quot;T:System.Net.Http.Headers.AuthenticationHeaderValue&quot; /&gt; version of the string.">字串的 <see cref="T:System.Net.Http.Headers.AuthenticationHeaderValue" /> 版本。</param>
      <returns vsli:raw="&lt;see langword=&quot;true&quot; /&gt; if &lt;paramref name=&quot;input&quot; /&gt; is valid &lt;see cref=&quot;T:System.Net.Http.Headers.AuthenticationHeaderValue&quot; /&gt; information; otherwise, &lt;see langword=&quot;false&quot; /&gt;.">如果 <paramref name="input" /> 是有效的 <see cref="T:System.Net.Http.Headers.AuthenticationHeaderValue" /> 資訊，則為 <see langword="true" />；否則為 <see langword="false" />。</returns>
    </member>
    <member name="P:System.Net.Http.Headers.AuthenticationHeaderValue.Parameter">
      <summary vsli:raw="Gets the credentials containing the authentication information of the user agent for the resource being requested.">取得包含所要求資源的使用者代理程式之驗證資訊的認證。</summary>
      <returns vsli:raw="The credentials containing the authentication information.">包含驗證資訊的認證。</returns>
    </member>
    <member name="P:System.Net.Http.Headers.AuthenticationHeaderValue.Scheme">
      <summary vsli:raw="Gets the scheme to use for authorization.">取得用於授權的配置。</summary>
      <returns vsli:raw="The scheme to use for authorization.">用於授權的配置。</returns>
    </member>
    <member name="T:System.Net.Http.Headers.CacheControlHeaderValue">
      <summary vsli:raw="Represents the value of the Cache-Control header.">代表 Cache-Control 標頭的值。</summary>
    </member>
    <member name="M:System.Net.Http.Headers.CacheControlHeaderValue.#ctor">
      <summary vsli:raw="Initializes a new instance of the &lt;see cref=&quot;T:System.Net.Http.Headers.CacheControlHeaderValue&quot; /&gt; class.">初始化 <see cref="T:System.Net.Http.Headers.CacheControlHeaderValue" /> 類別的新執行個體。</summary>
    </member>
    <member name="M:System.Net.Http.Headers.CacheControlHeaderValue.Equals(System.Object)">
      <summary vsli:raw="Determines whether the specified &lt;see cref=&quot;T:System.Object&quot; /&gt; is equal to the current &lt;see cref=&quot;T:System.Net.Http.Headers.CacheControlHeaderValue&quot; /&gt; object.">判斷指定的 <see cref="T:System.Object" /> 是否等於目前的 <see cref="T:System.Net.Http.Headers.CacheControlHeaderValue" /> 物件。</summary>
      <param name="obj" vsli:raw="The object to compare with the current object.">要與目前物件比較的物件。</param>
      <returns vsli:raw="&lt;see langword=&quot;true&quot; /&gt; if the specified &lt;see cref=&quot;T:System.Object&quot; /&gt; is equal to the current object; otherwise, &lt;see langword=&quot;false&quot; /&gt;.">如果指定的 <see cref="T:System.Object" /> 和目前的物件相等，則為 <see langword="true" />；否則為 <see langword="false" />。</returns>
    </member>
    <member name="M:System.Net.Http.Headers.CacheControlHeaderValue.GetHashCode">
      <summary vsli:raw="Serves as a hash function for a  &lt;see cref=&quot;T:System.Net.Http.Headers.CacheControlHeaderValue&quot; /&gt; object.">做為 <see cref="T:System.Net.Http.Headers.CacheControlHeaderValue" /> 物件的雜湊函式。</summary>
      <returns vsli:raw="A hash code for the current object.">目前物件的雜湊碼。</returns>
    </member>
    <member name="M:System.Net.Http.Headers.CacheControlHeaderValue.Parse(System.String)">
      <summary vsli:raw="Converts a string to an &lt;see cref=&quot;T:System.Net.Http.Headers.CacheControlHeaderValue&quot; /&gt; instance.">將字串轉換為 <see cref="T:System.Net.Http.Headers.CacheControlHeaderValue" /> 執行個體。</summary>
      <param name="input" vsli:raw="A string that represents cache-control header value information.">代表快取控制標頭值資訊的字串。</param>
      <exception cref="T:System.ArgumentNullException" vsli:raw="&lt;paramref name=&quot;input&quot; /&gt; is a &lt;see langword=&quot;null&quot; /&gt; reference.">
        <paramref name="input" /> 是 <see langword="null" /> 參考。</exception>
      <exception cref="T:System.FormatException" vsli:raw="&lt;paramref name=&quot;input&quot; /&gt; is not valid cache-control header value information.">
        <paramref name="input" /> 不是有效的快取控制標頭值資訊。</exception>
      <returns vsli:raw="A &lt;see cref=&quot;T:System.Net.Http.Headers.CacheControlHeaderValue&quot; /&gt; instance.">
        <see cref="T:System.Net.Http.Headers.CacheControlHeaderValue" /> 執行個體。</returns>
    </member>
    <member name="M:System.Net.Http.Headers.CacheControlHeaderValue.System#ICloneable#Clone">
      <summary vsli:raw="Creates a new object that is a copy of the current &lt;see cref=&quot;T:System.Net.Http.Headers.CacheControlHeaderValue&quot; /&gt; instance.">建立新物件，為目前 <see cref="T:System.Net.Http.Headers.CacheControlHeaderValue" /> 執行個體的複本。</summary>
      <returns vsli:raw="A copy of the current instance.">目前執行個體的複本。</returns>
    </member>
    <member name="M:System.Net.Http.Headers.CacheControlHeaderValue.ToString">
      <summary vsli:raw="Returns a string that represents the current &lt;see cref=&quot;T:System.Net.Http.Headers.CacheControlHeaderValue&quot; /&gt; object.">傳回表示目前 <see cref="T:System.Net.Http.Headers.CacheControlHeaderValue" /> 物件的字串。</summary>
      <returns vsli:raw="A string that represents the current object.">表示目前物件的字串。</returns>
    </member>
    <member name="M:System.Net.Http.Headers.CacheControlHeaderValue.TryParse(System.String,System.Net.Http.Headers.CacheControlHeaderValue@)">
      <summary vsli:raw="Determines whether a string is valid &lt;see cref=&quot;T:System.Net.Http.Headers.CacheControlHeaderValue&quot; /&gt; information.">判斷字串是否為有效的 <see cref="T:System.Net.Http.Headers.CacheControlHeaderValue" /> 資訊。</summary>
      <param name="input" vsli:raw="The string to validate.">要驗證的字串。</param>
      <param name="parsedValue" vsli:raw="The &lt;see cref=&quot;T:System.Net.Http.Headers.CacheControlHeaderValue&quot; /&gt; version of the string.">字串的 <see cref="T:System.Net.Http.Headers.CacheControlHeaderValue" /> 版本。</param>
      <returns vsli:raw="&lt;see langword=&quot;true&quot; /&gt; if &lt;paramref name=&quot;input&quot; /&gt; is valid &lt;see cref=&quot;T:System.Net.Http.Headers.CacheControlHeaderValue&quot; /&gt; information; otherwise, &lt;see langword=&quot;false&quot; /&gt;.">如果 <paramref name="input" /> 是有效的 <see cref="T:System.Net.Http.Headers.CacheControlHeaderValue" /> 資訊，則為 <see langword="true" />；否則為 <see langword="false" />。</returns>
    </member>
    <member name="P:System.Net.Http.Headers.CacheControlHeaderValue.Extensions">
      <summary vsli:raw="Cache-extension tokens, each with an optional assigned value.">快取擴充語彙基元，每個都具有一個選擇性的指派值。</summary>
      <returns vsli:raw="A collection of cache-extension tokens each with an optional assigned value.">快取擴充語彙基元的集合，每個都具有一個選擇性的指派值。</returns>
    </member>
    <member name="P:System.Net.Http.Headers.CacheControlHeaderValue.MaxAge">
      <summary vsli:raw="The maximum age, specified in seconds, that the HTTP client is willing to accept a response.">HTTP 用戶端願意接受回應的最長期限 (以秒為單位) 。</summary>
      <returns vsli:raw="The time in seconds.">時間 (秒)。</returns>
    </member>
    <member name="P:System.Net.Http.Headers.CacheControlHeaderValue.MaxStale">
      <summary vsli:raw="Whether an HTTP client is willing to accept a response that has exceeded its expiration time.">HTTP 用戶端是否願意接受已超過其到期時間的回應。</summary>
      <returns vsli:raw="&lt;see langword=&quot;true&quot; /&gt; if the HTTP client is willing to accept a response that has exceed the expiration time; otherwise, &lt;see langword=&quot;false&quot; /&gt;.">如果 HTTP 用戶端願意接受已超過其到期時間的回應，則為 <see langword="true" />，否則為 <see langword="false" />。</returns>
    </member>
    <member name="P:System.Net.Http.Headers.CacheControlHeaderValue.MaxStaleLimit">
      <summary vsli:raw="The maximum time, in seconds, an HTTP client is willing to accept a response that has exceeded its expiration time.">最大時間 (秒)，HTTP 用戶端願意接受超過其到期時間的回應。</summary>
      <returns vsli:raw="The time in seconds.">時間 (秒)。</returns>
    </member>
    <member name="P:System.Net.Http.Headers.CacheControlHeaderValue.MinFresh">
      <summary vsli:raw="The freshness lifetime, in seconds, that an HTTP client is willing to accept a response.">HTTP 用戶端願意接受回應的有效存留期 (以秒為單位)。</summary>
      <returns vsli:raw="The time in seconds.">時間 (秒)。</returns>
    </member>
    <member name="P:System.Net.Http.Headers.CacheControlHeaderValue.MustRevalidate">
      <summary vsli:raw="Whether the origin server require revalidation of a cache entry on any subsequent use when the cache entry becomes stale.">當快取項目過時時，原始伺服器是否需要在任何後續使用中重新驗證快取項目。</summary>
      <returns vsli:raw="&lt;see langword=&quot;true&quot; /&gt; if the origin server requires revalidation of a cache entry on any subsequent use when the entry becomes stale; otherwise, &lt;see langword=&quot;false&quot; /&gt;.">當項目過時時，如果原始伺服器需要在任何後續使用中重新驗證快取項目則為 <see langword="true" />；否則為 <see langword="false" />。</returns>
    </member>
    <member name="P:System.Net.Http.Headers.CacheControlHeaderValue.NoCache">
      <summary vsli:raw="Whether an HTTP client is willing to accept a cached response.">HTTP 用戶端是否願意接受快取回應。</summary>
      <returns vsli:raw="&lt;see langword=&quot;true&quot; /&gt; if the HTTP client is not willing to accept a cached response; otherwise, &lt;see langword=&quot;false&quot; /&gt;.">
        <see langword="true" /> 如果 HTTP 用戶端不願意接受快取回應，否則為 <see langword="false" /> 。</returns>
    </member>
    <member name="P:System.Net.Http.Headers.CacheControlHeaderValue.NoCacheHeaders">
      <summary vsli:raw="A collection of fieldnames in the &quot;no-cache&quot; directive in a cache-control header field on an HTTP response.">HTTP 回應上的 cache-control 標頭欄位中，"no-cache" 指示詞內的欄位名稱集合。</summary>
      <returns vsli:raw="A collection of fieldnames.">欄位名稱的集合。</returns>
    </member>
    <member name="P:System.Net.Http.Headers.CacheControlHeaderValue.NoStore">
      <summary vsli:raw="Whether a cache must not store any part of either the HTTP request message or any response.">快取是否不得儲存 HTTP 要求訊息或任何回應的任一部分。</summary>
      <returns vsli:raw="&lt;see langword=&quot;true&quot; /&gt; if a cache must not store any part of either the HTTP request message or any response; otherwise, &lt;see langword=&quot;false&quot; /&gt;.">
        <see langword="true" /> 如果快取不得儲存 HTTP 要求訊息或任何回應的任何部分，否則為 <see langword="false" /> 。</returns>
    </member>
    <member name="P:System.Net.Http.Headers.CacheControlHeaderValue.NoTransform">
      <summary vsli:raw="Whether a cache or proxy must not change any aspect of the entity-body.">快取或 Proxy 是否不得變更實體主體的任一部分。</summary>
      <returns vsli:raw="&lt;see langword=&quot;true&quot; /&gt; if a cache or proxy must not change any aspect of the entity-body; otherwise, &lt;see langword=&quot;false&quot; /&gt;.">如果快取或 Proxy 不得變更實體主體的任一部分則為 <see langword="true" />；否則為 <see langword="false" />。</returns>
    </member>
    <member name="P:System.Net.Http.Headers.CacheControlHeaderValue.OnlyIfCached">
      <summary vsli:raw="Whether a cache should either respond using a cached entry that is consistent with the other constraints of the HTTP request, or respond with a 504 (Gateway Timeout) status.">快取是否應該使用與 HTTP 要求的其他限制式一致的快取項目來回應，或者使用 504 (閘道逾時) 狀態回應。</summary>
      <returns vsli:raw="&lt;see langword=&quot;true&quot; /&gt; if a cache should either respond using a cached entry that is consistent with the other constraints of the HTTP request, or respond with a 504 (Gateway Timeout) status; otherwise, &lt;see langword=&quot;false&quot; /&gt;.">如果快取應該使用與 HTTP 要求的其他限制式一致的快取項目來回應，或者使用 504 (閘道逾時) 狀態回應，則為 <see langword="true" />，否則為 <see langword="false" />。</returns>
    </member>
    <member name="P:System.Net.Http.Headers.CacheControlHeaderValue.Private">
      <summary vsli:raw="Whether all or part of the HTTP response message is intended for a single user and must not be cached by a shared cache.">是否所有或部分 HTTP 回應訊息是針對單一使用者，因此共用快取不得快取。</summary>
      <returns vsli:raw="&lt;see langword=&quot;true&quot; /&gt; if the HTTP response message is intended for a single user and must not be cached by a shared cache; otherwise, &lt;see langword=&quot;false&quot; /&gt;.">如果 HTTP 回應訊息是針對單一使用者，因此共用快取不得快取，則為 <see langword="true" />；否則為 <see langword="false" />。</returns>
    </member>
    <member name="P:System.Net.Http.Headers.CacheControlHeaderValue.PrivateHeaders">
      <summary vsli:raw="A collection fieldnames in the &quot;private&quot; directive in a cache-control header field on an HTTP response.">HTTP 回應上的 cache-control 標頭欄位中，"private" 指示詞內的集合欄位名稱。</summary>
      <returns vsli:raw="A collection of fieldnames.">欄位名稱的集合。</returns>
    </member>
    <member name="P:System.Net.Http.Headers.CacheControlHeaderValue.ProxyRevalidate">
      <summary vsli:raw="Whether the origin server require revalidation of a cache entry on any subsequent use when the cache entry becomes stale for shared user agent caches.">當快取項目對於共用使用者代理程式快取變成過時時，原始伺服器是否需要在任何後續使用中重新驗證快取項目。</summary>
      <returns vsli:raw="&lt;see langword=&quot;true&quot; /&gt; if the origin server requires revalidation of a cache entry on any subsequent use when the entry becomes stale for shared user agent caches; otherwise, &lt;see langword=&quot;false&quot; /&gt;.">
        <see langword="true" /> 表示當快取對於共用使用者代理程式快取變成過時時，原始伺服器需要在任何後續使用中重新驗證快取項目；否則為 <see langword="false" />。</returns>
    </member>
    <member name="P:System.Net.Http.Headers.CacheControlHeaderValue.Public">
      <summary vsli:raw="Whether an HTTP response may be cached by any cache, even if it would normally be non-cacheable or cacheable only within a non- shared cache.">HTTP 回應是否可由任何快取進行快取，即使它通常不可快取，或只能在非共用快取內進行快取。</summary>
      <returns vsli:raw="&lt;see langword=&quot;true&quot; /&gt; if the HTTP response may be cached by any cache, even if it would normally be non-cacheable or cacheable only within a non- shared cache; otherwise, &lt;see langword=&quot;false&quot; /&gt;.">如果 HTTP 可由任何快取進行快取，則為 <see langword="true" /> (即使通常為不可快取，或僅在非共用快取內可快取)；否則為 <see langword="false" />。</returns>
    </member>
    <member name="P:System.Net.Http.Headers.CacheControlHeaderValue.SharedMaxAge">
      <summary vsli:raw="The shared maximum age, specified in seconds, in an HTTP response that overrides the &quot;max-age&quot; directive in a cache-control header or an Expires header for a shared cache.">HTTP 回應中的共用最長使用期限 (以秒為單位)，可覆寫 cache-control 標頭中或者共用快取之 Expires 標頭中的 "max-age" 指示詞。</summary>
      <returns vsli:raw="The time in seconds.">時間 (秒)。</returns>
    </member>
    <member name="T:System.Net.Http.Headers.ContentDispositionHeaderValue">
      <summary vsli:raw="Represents the value of the Content-Disposition header.">代表 Content-Disposition 標頭的值。</summary>
    </member>
    <member name="M:System.Net.Http.Headers.ContentDispositionHeaderValue.#ctor(System.Net.Http.Headers.ContentDispositionHeaderValue)">
      <summary vsli:raw="Initializes a new instance of the &lt;see cref=&quot;T:System.Net.Http.Headers.ContentDispositionHeaderValue&quot; /&gt; class.">初始化 <see cref="T:System.Net.Http.Headers.ContentDispositionHeaderValue" /> 類別的新執行個體。</summary>
      <param name="source" vsli:raw="A &lt;see cref=&quot;T:System.Net.Http.Headers.ContentDispositionHeaderValue&quot; /&gt;.">
        <see cref="T:System.Net.Http.Headers.ContentDispositionHeaderValue" />。</param>
    </member>
    <member name="M:System.Net.Http.Headers.ContentDispositionHeaderValue.#ctor(System.String)">
      <summary vsli:raw="Initializes a new instance of the &lt;see cref=&quot;T:System.Net.Http.Headers.ContentDispositionHeaderValue&quot; /&gt; class.">初始化 <see cref="T:System.Net.Http.Headers.ContentDispositionHeaderValue" /> 類別的新執行個體。</summary>
      <param name="dispositionType" vsli:raw="A string that contains a &lt;see cref=&quot;T:System.Net.Http.Headers.ContentDispositionHeaderValue&quot; /&gt;.">包含 <see cref="T:System.Net.Http.Headers.ContentDispositionHeaderValue" /> 的字串。</param>
    </member>
    <member name="M:System.Net.Http.Headers.ContentDispositionHeaderValue.Equals(System.Object)">
      <summary vsli:raw="Determines whether the specified &lt;see cref=&quot;T:System.Object&quot; /&gt; is equal to the current &lt;see cref=&quot;T:System.Net.Http.Headers.ContentDispositionHeaderValue&quot; /&gt; object.">判斷指定的 <see cref="T:System.Object" /> 是否等於目前的 <see cref="T:System.Net.Http.Headers.ContentDispositionHeaderValue" /> 物件。</summary>
      <param name="obj" vsli:raw="The object to compare with the current object.">要與目前物件比較的物件。</param>
      <returns vsli:raw="&lt;see langword=&quot;true&quot; /&gt; if the specified &lt;see cref=&quot;T:System.Object&quot; /&gt; is equal to the current object; otherwise, &lt;see langword=&quot;false&quot; /&gt;.">如果指定的 <see cref="T:System.Object" /> 和目前的物件相等，則為 <see langword="true" />；否則為 <see langword="false" />。</returns>
    </member>
    <member name="M:System.Net.Http.Headers.ContentDispositionHeaderValue.GetHashCode">
      <summary vsli:raw="Serves as a hash function for an  &lt;see cref=&quot;T:System.Net.Http.Headers.ContentDispositionHeaderValue&quot; /&gt; object.">做為 <see cref="T:System.Net.Http.Headers.ContentDispositionHeaderValue" /> 物件的雜湊函式。</summary>
      <returns vsli:raw="A hash code for the current object.">目前物件的雜湊碼。</returns>
    </member>
    <member name="M:System.Net.Http.Headers.ContentDispositionHeaderValue.Parse(System.String)">
      <summary vsli:raw="Converts a string to an &lt;see cref=&quot;T:System.Net.Http.Headers.ContentDispositionHeaderValue&quot; /&gt; instance.">將字串轉換為 <see cref="T:System.Net.Http.Headers.ContentDispositionHeaderValue" /> 執行個體。</summary>
      <param name="input" vsli:raw="A string that represents content disposition header value information.">字串，代表內容配置標頭值資訊。</param>
      <exception cref="T:System.ArgumentNullException" vsli:raw="&lt;paramref name=&quot;input&quot; /&gt; is a &lt;see langword=&quot;null&quot; /&gt; reference.">
        <paramref name="input" /> 是 <see langword="null" /> 參考。</exception>
      <exception cref="T:System.FormatException" vsli:raw="&lt;paramref name=&quot;input&quot; /&gt; is not valid content disposition header value information.">
        <paramref name="input" /> 不是有效的內容配置標頭值資訊。</exception>
      <returns vsli:raw="An &lt;see cref=&quot;T:System.Net.Http.Headers.ContentDispositionHeaderValue&quot; /&gt; instance.">
        <see cref="T:System.Net.Http.Headers.ContentDispositionHeaderValue" /> 執行個體。</returns>
    </member>
    <member name="M:System.Net.Http.Headers.ContentDispositionHeaderValue.System#ICloneable#Clone">
      <summary vsli:raw="Creates a new object that is a copy of the current &lt;see cref=&quot;T:System.Net.Http.Headers.ContentDispositionHeaderValue&quot; /&gt; instance.">建立新物件，為目前 <see cref="T:System.Net.Http.Headers.ContentDispositionHeaderValue" /> 執行個體的複本。</summary>
      <returns vsli:raw="A copy of the current instance.">目前執行個體的複本。</returns>
    </member>
    <member name="M:System.Net.Http.Headers.ContentDispositionHeaderValue.ToString">
      <summary vsli:raw="Returns a string that represents the current &lt;see cref=&quot;T:System.Net.Http.Headers.ContentDispositionHeaderValue&quot; /&gt; object.">傳回表示目前 <see cref="T:System.Net.Http.Headers.ContentDispositionHeaderValue" /> 物件的字串。</summary>
      <returns vsli:raw="A string that represents the current object.">表示目前物件的字串。</returns>
    </member>
    <member name="M:System.Net.Http.Headers.ContentDispositionHeaderValue.TryParse(System.String,System.Net.Http.Headers.ContentDispositionHeaderValue@)">
      <summary vsli:raw="Determines whether a string is valid &lt;see cref=&quot;T:System.Net.Http.Headers.ContentDispositionHeaderValue&quot; /&gt; information.">判斷字串是否為有效的 <see cref="T:System.Net.Http.Headers.ContentDispositionHeaderValue" /> 資訊。</summary>
      <param name="input" vsli:raw="The string to validate.">要驗證的字串。</param>
      <param name="parsedValue" vsli:raw="The &lt;see cref=&quot;T:System.Net.Http.Headers.ContentDispositionHeaderValue&quot; /&gt; version of the string.">字串的 <see cref="T:System.Net.Http.Headers.ContentDispositionHeaderValue" /> 版本。</param>
      <returns vsli:raw="&lt;see langword=&quot;true&quot; /&gt; if &lt;paramref name=&quot;input&quot; /&gt; is valid &lt;see cref=&quot;T:System.Net.Http.Headers.ContentDispositionHeaderValue&quot; /&gt; information; otherwise, &lt;see langword=&quot;false&quot; /&gt;.">如果 <paramref name="input" /> 是有效的 <see cref="T:System.Net.Http.Headers.ContentDispositionHeaderValue" /> 資訊，則為 <see langword="true" />；否則為 <see langword="false" />。</returns>
    </member>
    <member name="P:System.Net.Http.Headers.ContentDispositionHeaderValue.CreationDate">
      <summary vsli:raw="The date at which   the file was created.">檔案建立的日期。</summary>
      <returns vsli:raw="The file creation date.">檔案建立日期。</returns>
    </member>
    <member name="P:System.Net.Http.Headers.ContentDispositionHeaderValue.DispositionType">
      <summary vsli:raw="The disposition type for a content body part.">內容主體部分的配置類型。</summary>
      <returns vsli:raw="The disposition type.">配置類型。</returns>
    </member>
    <member name="P:System.Net.Http.Headers.ContentDispositionHeaderValue.FileName">
      <summary vsli:raw="A suggestion for how to construct a filename for   storing the message payload to be used if the entity is   detached and stored in a separate file.">建議建構檔案名稱的方式，以在實體卸離並儲存在不同的檔案中時用來儲存訊息承載。</summary>
      <returns vsli:raw="A suggested filename.">建議的檔案名稱。</returns>
    </member>
    <member name="P:System.Net.Http.Headers.ContentDispositionHeaderValue.FileNameStar">
      <summary vsli:raw="A suggestion for how to construct filenames for   storing message payloads to be used if the entities are    detached and stored in a separate files.">一項關於如何建構檔案名稱的建議，以在實體卸離並儲存在不同的檔案中時用來儲存訊息內容。</summary>
      <returns vsli:raw="A suggested filename of the form filename*.">格式為 filename* 的建議檔案名稱。</returns>
    </member>
    <member name="P:System.Net.Http.Headers.ContentDispositionHeaderValue.ModificationDate">
      <summary vsli:raw="The date at   which the file was last modified.">檔案最近修改的日期。</summary>
      <returns vsli:raw="The file modification date.">檔案修改日期。</returns>
    </member>
    <member name="P:System.Net.Http.Headers.ContentDispositionHeaderValue.Name">
      <summary vsli:raw="The name for a content body part.">內容主體部分的名稱。</summary>
      <returns vsli:raw="The name for the content body part.">內容主體部分的名稱。</returns>
    </member>
    <member name="P:System.Net.Http.Headers.ContentDispositionHeaderValue.Parameters">
      <summary vsli:raw="A set of parameters included the Content-Disposition header.">包含內容配置標頭的一組參數。</summary>
      <returns vsli:raw="A collection of parameters.">參數的集合。</returns>
    </member>
    <member name="P:System.Net.Http.Headers.ContentDispositionHeaderValue.ReadDate">
      <summary vsli:raw="The date the file was last read.">檔案上次讀取日期。</summary>
      <returns vsli:raw="The last read date.">上次讀取日期。</returns>
    </member>
    <member name="P:System.Net.Http.Headers.ContentDispositionHeaderValue.Size">
      <summary vsli:raw="The approximate size, in bytes, of the file.">檔案的估計大小 (以位元組為單位)。</summary>
      <returns vsli:raw="The approximate size, in bytes.">估計大小 (以位元組為單位)。</returns>
    </member>
    <member name="T:System.Net.Http.Headers.ContentRangeHeaderValue">
      <summary vsli:raw="Represents the value of the Content-Range header.">代表 Content-Range 標頭的值。</summary>
    </member>
    <member name="M:System.Net.Http.Headers.ContentRangeHeaderValue.#ctor(System.Int64)">
      <summary vsli:raw="Initializes a new instance of the &lt;see cref=&quot;T:System.Net.Http.Headers.ContentRangeHeaderValue&quot; /&gt; class.">初始化 <see cref="T:System.Net.Http.Headers.ContentRangeHeaderValue" /> 類別的新執行個體。</summary>
      <param name="length" vsli:raw="The starting or ending point of the range, in bytes.">範圍的起始和結束點 (以位元組表示)。</param>
    </member>
    <member name="M:System.Net.Http.Headers.ContentRangeHeaderValue.#ctor(System.Int64,System.Int64)">
      <summary vsli:raw="Initializes a new instance of the &lt;see cref=&quot;T:System.Net.Http.Headers.ContentRangeHeaderValue&quot; /&gt; class.">初始化 <see cref="T:System.Net.Http.Headers.ContentRangeHeaderValue" /> 類別的新執行個體。</summary>
      <param name="from" vsli:raw="The position, in bytes, at which to start sending data.">要開始傳送資料的位置 (位元組)。</param>
      <param name="to" vsli:raw="The position, in bytes, at which to stop sending data.">要停止傳送資料的位置 (以位元組表示)。</param>
    </member>
    <member name="M:System.Net.Http.Headers.ContentRangeHeaderValue.#ctor(System.Int64,System.Int64,System.Int64)">
      <summary vsli:raw="Initializes a new instance of the &lt;see cref=&quot;T:System.Net.Http.Headers.ContentRangeHeaderValue&quot; /&gt; class.">初始化 <see cref="T:System.Net.Http.Headers.ContentRangeHeaderValue" /> 類別的新執行個體。</summary>
      <param name="from" vsli:raw="The position, in bytes, at which to start sending data.">要開始傳送資料的位置 (位元組)。</param>
      <param name="to" vsli:raw="The position, in bytes, at which to stop sending data.">要停止傳送資料的位置 (以位元組表示)。</param>
      <param name="length" vsli:raw="The starting or ending point of the range, in bytes.">範圍的起始和結束點 (以位元組表示)。</param>
    </member>
    <member name="M:System.Net.Http.Headers.ContentRangeHeaderValue.Equals(System.Object)">
      <summary vsli:raw="Determines whether the specified Object is equal to the current &lt;see cref=&quot;T:System.Net.Http.Headers.ContentRangeHeaderValue&quot; /&gt; object.">判斷指定的物件是否等於目前的 <see cref="T:System.Net.Http.Headers.ContentRangeHeaderValue" /> 物件。</summary>
      <param name="obj" vsli:raw="The object to compare with the current object.">要與目前物件比較的物件。</param>
      <returns vsli:raw="&lt;see langword=&quot;true&quot; /&gt; if the specified &lt;see cref=&quot;T:System.Object&quot; /&gt; is equal to the current object; otherwise, &lt;see langword=&quot;false&quot; /&gt;.">如果指定的 <see cref="T:System.Object" /> 和目前的物件相等，則為 <see langword="true" />；否則為 <see langword="false" />。</returns>
    </member>
    <member name="M:System.Net.Http.Headers.ContentRangeHeaderValue.GetHashCode">
      <summary vsli:raw="Serves as a hash function for an &lt;see cref=&quot;T:System.Net.Http.Headers.ContentRangeHeaderValue&quot; /&gt; object.">做為 <see cref="T:System.Net.Http.Headers.ContentRangeHeaderValue" /> 物件的雜湊函式。</summary>
      <returns vsli:raw="A hash code for the current object.">目前物件的雜湊碼。</returns>
    </member>
    <member name="M:System.Net.Http.Headers.ContentRangeHeaderValue.Parse(System.String)">
      <summary vsli:raw="Converts a string to an &lt;see cref=&quot;T:System.Net.Http.Headers.ContentRangeHeaderValue&quot; /&gt; instance.">將字串轉換為 <see cref="T:System.Net.Http.Headers.ContentRangeHeaderValue" /> 執行個體。</summary>
      <param name="input" vsli:raw="A string that represents content range header value information.">代表內容範圍標頭值資訊的字串。</param>
      <exception cref="T:System.ArgumentNullException" vsli:raw="&lt;paramref name=&quot;input&quot; /&gt; is a &lt;see langword=&quot;null&quot; /&gt; reference.">
        <paramref name="input" /> 是 <see langword="null" /> 參考。</exception>
      <exception cref="T:System.FormatException" vsli:raw="&lt;paramref name=&quot;input&quot; /&gt; is not valid content range header value information.">
        <paramref name="input" /> 不是有效的內容範圍標頭值資訊。</exception>
      <returns vsli:raw="An &lt;see cref=&quot;T:System.Net.Http.Headers.ContentRangeHeaderValue&quot; /&gt; instance.">
        <see cref="T:System.Net.Http.Headers.ContentRangeHeaderValue" /> 執行個體。</returns>
    </member>
    <member name="M:System.Net.Http.Headers.ContentRangeHeaderValue.System#ICloneable#Clone">
      <summary vsli:raw="Creates a new object that is a copy of the current &lt;see cref=&quot;T:System.Net.Http.Headers.ContentRangeHeaderValue&quot; /&gt; instance.">建立新物件，為目前 <see cref="T:System.Net.Http.Headers.ContentRangeHeaderValue" /> 執行個體的複本。</summary>
      <returns vsli:raw="A copy of the current instance.">目前執行個體的複本。</returns>
    </member>
    <member name="M:System.Net.Http.Headers.ContentRangeHeaderValue.ToString">
      <summary vsli:raw="Returns a string that represents the current &lt;see cref=&quot;T:System.Net.Http.Headers.ContentRangeHeaderValue&quot; /&gt; object.">傳回表示目前 <see cref="T:System.Net.Http.Headers.ContentRangeHeaderValue" /> 物件的字串。</summary>
      <returns vsli:raw="A string that represents the current object.">表示目前物件的字串。</returns>
    </member>
    <member name="M:System.Net.Http.Headers.ContentRangeHeaderValue.TryParse(System.String,System.Net.Http.Headers.ContentRangeHeaderValue@)">
      <summary vsli:raw="Determines whether a string is valid &lt;see cref=&quot;T:System.Net.Http.Headers.ContentRangeHeaderValue&quot; /&gt; information.">判斷字串是否為有效的 <see cref="T:System.Net.Http.Headers.ContentRangeHeaderValue" /> 資訊。</summary>
      <param name="input" vsli:raw="The string to validate.">要驗證的字串。</param>
      <param name="parsedValue" vsli:raw="The &lt;see cref=&quot;T:System.Net.Http.Headers.ContentRangeHeaderValue&quot; /&gt; version of the string.">字串的 <see cref="T:System.Net.Http.Headers.ContentRangeHeaderValue" /> 版本。</param>
      <returns vsli:raw="&lt;see langword=&quot;true&quot; /&gt; if &lt;paramref name=&quot;input&quot; /&gt; is valid &lt;see cref=&quot;T:System.Net.Http.Headers.ContentRangeHeaderValue&quot; /&gt; information; otherwise, &lt;see langword=&quot;false&quot; /&gt;.">如果 <paramref name="input" /> 是有效的 <see cref="T:System.Net.Http.Headers.ContentRangeHeaderValue" /> 資訊，則為 <see langword="true" />；否則為 <see langword="false" />。</returns>
    </member>
    <member name="P:System.Net.Http.Headers.ContentRangeHeaderValue.From">
      <summary vsli:raw="Gets the position at which to start sending data.">取得要開始傳送資料的位置。</summary>
      <returns vsli:raw="The position, in bytes, at which to start sending data.">要開始傳送資料的位置 (位元組)。</returns>
    </member>
    <member name="P:System.Net.Http.Headers.ContentRangeHeaderValue.HasLength">
      <summary vsli:raw="Gets whether the Content-Range header has a length specified.">取得 Content-Range 標頭是否已指定長度。</summary>
      <returns vsli:raw="&lt;see langword=&quot;true&quot; /&gt; if the Content-Range has a length specified; otherwise, &lt;see langword=&quot;false&quot; /&gt;.">如果 Content-Range 已指定長度，則為 <see langword="true" />；否則為 <see langword="false" />。</returns>
    </member>
    <member name="P:System.Net.Http.Headers.ContentRangeHeaderValue.HasRange">
      <summary vsli:raw="Gets whether the Content-Range has a range specified.">取得 Content-Range 是否已指定範圍。</summary>
      <returns vsli:raw="&lt;see langword=&quot;true&quot; /&gt; if the Content-Range has a range specified; otherwise, &lt;see langword=&quot;false&quot; /&gt;.">如果 Content-Range 已指定範圍，則為 <see langword="true" />；否則為 <see langword="false" />。</returns>
    </member>
    <member name="P:System.Net.Http.Headers.ContentRangeHeaderValue.Length">
      <summary vsli:raw="Gets the length of the full entity-body.">取得完整實體內容的長度。</summary>
      <returns vsli:raw="The length of the full entity-body.">完整實體內容的長度。</returns>
    </member>
    <member name="P:System.Net.Http.Headers.ContentRangeHeaderValue.To">
      <summary vsli:raw="Gets the position at which to stop sending data.">取得要停止傳送資料的位置。</summary>
      <returns vsli:raw="The position at which to stop sending data.">要停止傳送資料的位置。</returns>
    </member>
    <member name="P:System.Net.Http.Headers.ContentRangeHeaderValue.Unit">
      <summary vsli:raw="The range units used.">使用的範圍單位。</summary>
      <returns vsli:raw="A &lt;see cref=&quot;T:System.String&quot; /&gt; that contains range units.">包含範圍單位的 <see cref="T:System.String" />。</returns>
    </member>
    <member name="T:System.Net.Http.Headers.EntityTagHeaderValue">
      <summary vsli:raw="Represents an entity-tag header value.">代表 entity-tag 標頭值。</summary>
    </member>
    <member name="M:System.Net.Http.Headers.EntityTagHeaderValue.#ctor(System.String)">
      <summary vsli:raw="Initializes a new instance of the &lt;see cref=&quot;T:System.Net.Http.Headers.EntityTagHeaderValue&quot; /&gt; class.">初始化 <see cref="T:System.Net.Http.Headers.EntityTagHeaderValue" /> 類別的新執行個體。</summary>
      <param name="tag" vsli:raw="A string that contains an &lt;see cref=&quot;T:System.Net.Http.Headers.EntityTagHeaderValue&quot; /&gt;.">包含 <see cref="T:System.Net.Http.Headers.EntityTagHeaderValue" /> 的字串。</param>
    </member>
    <member name="M:System.Net.Http.Headers.EntityTagHeaderValue.#ctor(System.String,System.Boolean)">
      <summary vsli:raw="Initializes a new instance of the &lt;see cref=&quot;T:System.Net.Http.Headers.EntityTagHeaderValue&quot; /&gt; class.">初始化 <see cref="T:System.Net.Http.Headers.EntityTagHeaderValue" /> 類別的新執行個體。</summary>
      <param name="tag" vsli:raw="A string that contains an  &lt;see cref=&quot;T:System.Net.Http.Headers.EntityTagHeaderValue&quot; /&gt;.">包含 <see cref="T:System.Net.Http.Headers.EntityTagHeaderValue" /> 的字串。</param>
      <param name="isWeak" vsli:raw="A value that indicates if this entity-tag header is a weak validator. If the entity-tag header is weak validator, then &lt;paramref name=&quot;isWeak&quot; /&gt; should be set to &lt;see langword=&quot;true&quot; /&gt;. If the entity-tag header is a strong validator, then &lt;paramref name=&quot;isWeak&quot; /&gt; should be set to &lt;see langword=&quot;false&quot; /&gt;.">表示這個實體標記標頭是否為弱式驗證程式的值。 如果實體標記標頭是弱式驗證程式，則應該將 <paramref name="isWeak" /> 設定為 <see langword="true" />。 如果實體標記標頭是強式驗證程式，則應該將 <paramref name="isWeak" /> 設定為 <see langword="false" />。</param>
    </member>
    <member name="M:System.Net.Http.Headers.EntityTagHeaderValue.Equals(System.Object)">
      <summary vsli:raw="Determines whether the specified &lt;see cref=&quot;T:System.Object&quot; /&gt; is equal to the current &lt;see cref=&quot;T:System.Net.Http.Headers.EntityTagHeaderValue&quot; /&gt; object.">判斷指定的 <see cref="T:System.Object" /> 是否等於目前的 <see cref="T:System.Net.Http.Headers.EntityTagHeaderValue" /> 物件。</summary>
      <param name="obj" vsli:raw="The object to compare with the current object.">要與目前物件比較的物件。</param>
      <returns vsli:raw="&lt;see langword=&quot;true&quot; /&gt; if the specified &lt;see cref=&quot;T:System.Object&quot; /&gt; is equal to the current object; otherwise, &lt;see langword=&quot;false&quot; /&gt;.">如果指定的 <see cref="T:System.Object" /> 和目前的物件相等，則為 <see langword="true" />；否則為 <see langword="false" />。</returns>
    </member>
    <member name="M:System.Net.Http.Headers.EntityTagHeaderValue.GetHashCode">
      <summary vsli:raw="Serves as a hash function for an &lt;see cref=&quot;T:System.Net.Http.Headers.EntityTagHeaderValue&quot; /&gt; object.">做為 <see cref="T:System.Net.Http.Headers.EntityTagHeaderValue" /> 物件的雜湊函式。</summary>
      <returns vsli:raw="A hash code for the current object.">目前物件的雜湊碼。</returns>
    </member>
    <member name="M:System.Net.Http.Headers.EntityTagHeaderValue.Parse(System.String)">
      <summary vsli:raw="Converts a string to an &lt;see cref=&quot;T:System.Net.Http.Headers.EntityTagHeaderValue&quot; /&gt; instance.">將字串轉換為 <see cref="T:System.Net.Http.Headers.EntityTagHeaderValue" /> 執行個體。</summary>
      <param name="input" vsli:raw="A string that represents entity tag header value information.">代表實體標記標頭值資訊的字串。</param>
      <exception cref="T:System.ArgumentNullException" vsli:raw="&lt;paramref name=&quot;input&quot; /&gt; is a &lt;see langword=&quot;null&quot; /&gt; reference.">
        <paramref name="input" /> 是 <see langword="null" /> 參考。</exception>
      <exception cref="T:System.FormatException" vsli:raw="&lt;paramref name=&quot;input&quot; /&gt; is not valid entity tag header value information.">
        <paramref name="input" /> 不是有效的實體標記標頭值資訊。</exception>
      <returns vsli:raw="An &lt;see cref=&quot;T:System.Net.Http.Headers.EntityTagHeaderValue&quot; /&gt; instance.">
        <see cref="T:System.Net.Http.Headers.EntityTagHeaderValue" /> 執行個體。</returns>
    </member>
    <member name="M:System.Net.Http.Headers.EntityTagHeaderValue.System#ICloneable#Clone">
      <summary vsli:raw="Creates a new object that is a copy of the current &lt;see cref=&quot;T:System.Net.Http.Headers.EntityTagHeaderValue&quot; /&gt; instance.">建立新物件，為目前 <see cref="T:System.Net.Http.Headers.EntityTagHeaderValue" /> 執行個體的複本。</summary>
      <returns vsli:raw="A copy of the current instance.">目前執行個體的複本。</returns>
    </member>
    <member name="M:System.Net.Http.Headers.EntityTagHeaderValue.ToString">
      <summary vsli:raw="Returns a string that represents the current &lt;see cref=&quot;T:System.Net.Http.Headers.EntityTagHeaderValue&quot; /&gt; object.">傳回表示目前 <see cref="T:System.Net.Http.Headers.EntityTagHeaderValue" /> 物件的字串。</summary>
      <returns vsli:raw="A string that represents the current object.">表示目前物件的字串。</returns>
    </member>
    <member name="M:System.Net.Http.Headers.EntityTagHeaderValue.TryParse(System.String,System.Net.Http.Headers.EntityTagHeaderValue@)">
      <summary vsli:raw="Determines whether a string is valid &lt;see cref=&quot;T:System.Net.Http.Headers.EntityTagHeaderValue&quot; /&gt; information.">判斷字串是否為有效的 <see cref="T:System.Net.Http.Headers.EntityTagHeaderValue" /> 資訊。</summary>
      <param name="input" vsli:raw="The string to validate.">要驗證的字串。</param>
      <param name="parsedValue" vsli:raw="The &lt;see cref=&quot;T:System.Net.Http.Headers.EntityTagHeaderValue&quot; /&gt; version of the string.">字串的 <see cref="T:System.Net.Http.Headers.EntityTagHeaderValue" /> 版本。</param>
      <returns vsli:raw="&lt;see langword=&quot;true&quot; /&gt; if &lt;paramref name=&quot;input&quot; /&gt; is valid &lt;see cref=&quot;T:System.Net.Http.Headers.EntityTagHeaderValue&quot; /&gt; information; otherwise, &lt;see langword=&quot;false&quot; /&gt;.">如果 <paramref name="input" /> 是有效的 <see cref="T:System.Net.Http.Headers.EntityTagHeaderValue" /> 資訊，則為 <see langword="true" />；否則為 <see langword="false" />。</returns>
    </member>
    <member name="P:System.Net.Http.Headers.EntityTagHeaderValue.Any">
      <summary vsli:raw="Gets the entity-tag header value.">取得實體標記標頭值。</summary>
      <returns vsli:raw="Returns &lt;see cref=&quot;T:System.Net.Http.Headers.EntityTagHeaderValue&quot; /&gt;.">傳回 <see cref="T:System.Net.Http.Headers.EntityTagHeaderValue" />。</returns>
    </member>
    <member name="P:System.Net.Http.Headers.EntityTagHeaderValue.IsWeak">
      <summary vsli:raw="Gets whether the entity-tag is prefaced by a weakness indicator.">取得實體標記前面是否加上弱式指標。</summary>
      <returns vsli:raw="&lt;see langword=&quot;true&quot; /&gt; if the entity-tag is prefaced by a weakness indicator; otherwise, &lt;see langword=&quot;false&quot; /&gt;.">如果實體標記前面加上弱式指標則為 <see langword="true" />；否則為 <see langword="false" />。</returns>
    </member>
    <member name="P:System.Net.Http.Headers.EntityTagHeaderValue.Tag">
      <summary vsli:raw="Gets the opaque quoted string.">取得模糊的加引號字串。</summary>
      <returns vsli:raw="An opaque quoted string.">模糊的加引號字串。</returns>
    </member>
    <member name="T:System.Net.Http.Headers.HttpContentHeaders">
      <summary vsli:raw="Represents the collection of Content Headers as defined in RFC 2616.">代表內容標頭的集合，如 RFC 2616 中所定義。</summary>
    </member>
    <member name="P:System.Net.Http.Headers.HttpContentHeaders.Allow">
      <summary vsli:raw="Gets the value of the &lt;see langword=&quot;Allow&quot; /&gt; content header on an HTTP response.">取得 HTTP 回應的 <see langword="Allow" /> 內容標頭值。</summary>
      <returns vsli:raw="The value of the &lt;see langword=&quot;Allow&quot; /&gt; header on an HTTP response.">HTTP 回應上 <see langword="Allow" /> 標頭的值。</returns>
    </member>
    <member name="P:System.Net.Http.Headers.HttpContentHeaders.ContentDisposition">
      <summary vsli:raw="Gets the value of the &lt;see langword=&quot;Content-Disposition&quot; /&gt; content header on an HTTP response.">取得 HTTP 回應的 <see langword="Content-Disposition" /> 內容標頭值。</summary>
      <returns vsli:raw="The value of the &lt;see langword=&quot;Content-Disposition&quot; /&gt; content header on an HTTP response.">HTTP 回應的 <see langword="Content-Disposition" /> 內容標頭值。</returns>
    </member>
    <member name="P:System.Net.Http.Headers.HttpContentHeaders.ContentEncoding">
      <summary vsli:raw="Gets the value of the &lt;see langword=&quot;Content-Encoding&quot; /&gt; content header on an HTTP response.">取得 HTTP 回應的 <see langword="Content-Encoding" /> 內容標頭值。</summary>
      <returns vsli:raw="The value of the &lt;see langword=&quot;Content-Encoding&quot; /&gt; content header on an HTTP response.">HTTP 回應的 <see langword="Content-Encoding" /> 內容標頭值。</returns>
    </member>
    <member name="P:System.Net.Http.Headers.HttpContentHeaders.ContentLanguage">
      <summary vsli:raw="Gets the value of the &lt;see langword=&quot;Content-Language&quot; /&gt; content header on an HTTP response.">取得 HTTP 回應的 <see langword="Content-Language" /> 內容標頭值。</summary>
      <returns vsli:raw="The value of the &lt;see langword=&quot;Content-Language&quot; /&gt; content header on an HTTP response.">HTTP 回應的 <see langword="Content-Language" /> 內容標頭值。</returns>
    </member>
    <member name="P:System.Net.Http.Headers.HttpContentHeaders.ContentLength">
      <summary vsli:raw="Gets or sets the value of the &lt;see langword=&quot;Content-Length&quot; /&gt; content header on an HTTP response.">取得或設定 HTTP 回應的 <see langword="Content-Length" /> 內容標頭值。</summary>
      <returns vsli:raw="The value of the &lt;see langword=&quot;Content-Length&quot; /&gt; content header on an HTTP response.">HTTP 回應的 <see langword="Content-Length" /> 內容標頭值。</returns>
    </member>
    <member name="P:System.Net.Http.Headers.HttpContentHeaders.ContentLocation">
      <summary vsli:raw="Gets or sets the value of the &lt;see langword=&quot;Content-Location&quot; /&gt; content header on an HTTP response.">取得或設定 HTTP 回應的 <see langword="Content-Location" /> 內容標頭值。</summary>
      <returns vsli:raw="The value of the &lt;see langword=&quot;Content-Location&quot; /&gt; content header on an HTTP response.">HTTP 回應的 <see langword="Content-Location" /> 內容標頭值。</returns>
    </member>
    <member name="P:System.Net.Http.Headers.HttpContentHeaders.ContentMD5">
      <summary vsli:raw="Gets or sets the value of the &lt;see langword=&quot;Content-MD5&quot; /&gt; content header on an HTTP response.">取得或設定 HTTP 回應的 <see langword="Content-MD5" /> 內容標頭值。</summary>
      <returns vsli:raw="The value of the &lt;see langword=&quot;Content-MD5&quot; /&gt; content header on an HTTP response.">HTTP 回應的 <see langword="Content-MD5" /> 內容標頭值。</returns>
    </member>
    <member name="P:System.Net.Http.Headers.HttpContentHeaders.ContentRange">
      <summary vsli:raw="Gets or sets the value of the &lt;see langword=&quot;Content-Range&quot; /&gt; content header on an HTTP response.">取得或設定 HTTP 回應的 <see langword="Content-Range" /> 內容標頭值。</summary>
      <returns vsli:raw="The value of the &lt;see langword=&quot;Content-Range&quot; /&gt; content header on an HTTP response.">HTTP 回應的 <see langword="Content-Range" /> 內容標頭值。</returns>
    </member>
    <member name="P:System.Net.Http.Headers.HttpContentHeaders.ContentType">
      <summary vsli:raw="Gets or sets the value of the &lt;see langword=&quot;Content-Type&quot; /&gt; content header on an HTTP response.">取得或設定 HTTP 回應的 <see langword="Content-Type" /> 內容標頭值。</summary>
      <returns vsli:raw="The value of the &lt;see langword=&quot;Content-Type&quot; /&gt; content header on an HTTP response.">HTTP 回應的 <see langword="Content-Type" /> 內容標頭值。</returns>
    </member>
    <member name="P:System.Net.Http.Headers.HttpContentHeaders.Expires">
      <summary vsli:raw="Gets or sets the value of the &lt;see langword=&quot;Expires&quot; /&gt; content header on an HTTP response.">取得或設定 HTTP 回應的 <see langword="Expires" /> 內容標頭值。</summary>
      <returns vsli:raw="The value of the &lt;see langword=&quot;Expires&quot; /&gt; content header on an HTTP response.">HTTP 回應的 <see langword="Expires" /> 內容標頭值。</returns>
    </member>
    <member name="P:System.Net.Http.Headers.HttpContentHeaders.LastModified">
      <summary vsli:raw="Gets or sets the value of the &lt;see langword=&quot;Last-Modified&quot; /&gt; content header on an HTTP response.">取得或設定 HTTP 回應的 <see langword="Last-Modified" /> 內容標頭值。</summary>
      <returns vsli:raw="The value of the &lt;see langword=&quot;Last-Modified&quot; /&gt; content header on an HTTP response.">HTTP 回應的 <see langword="Last-Modified" /> 內容標頭值。</returns>
    </member>
    <member name="T:System.Net.Http.Headers.HttpHeaders">
      <summary vsli:raw="A collection of headers and their values as defined in RFC 2616.">標頭及其值的集合，如 RFC 2616 中所定義。</summary>
    </member>
    <member name="M:System.Net.Http.Headers.HttpHeaders.#ctor">
      <summary vsli:raw="Initializes a new instance of the &lt;see cref=&quot;T:System.Net.Http.Headers.HttpHeaders&quot; /&gt; class.">初始化 <see cref="T:System.Net.Http.Headers.HttpHeaders" /> 類別的新執行個體。</summary>
    </member>
    <member name="M:System.Net.Http.Headers.HttpHeaders.Add(System.String,System.Collections.Generic.IEnumerable{System.String})">
      <summary vsli:raw="Adds the specified header and its values into the &lt;see cref=&quot;T:System.Net.Http.Headers.HttpHeaders&quot; /&gt; collection.">將指定的標頭及其值加入至 <see cref="T:System.Net.Http.Headers.HttpHeaders" /> 集合中。</summary>
      <param name="name" vsli:raw="The header to add to the collection.">要加入至集合的標頭。</param>
      <param name="values" vsli:raw="A list of header values to add to the collection.">要加入至集合的標頭值清單。</param>
      <exception cref="T:System.ArgumentException" vsli:raw="The name cannot be null or empty.">名稱不可為 Null 或空白。</exception>
      <exception cref="T:System.ArgumentNullException" vsli:raw="The values cannot be null or empty.">值不可為 Null 或空白。</exception>
      <exception cref="T:System.InvalidOperationException" vsli:raw="Misused header name. Make sure request headers are used with HttpRequestMessage, response headers with HttpResponseMessage, and content headers with HttpContent objects.">標頭名稱使用錯誤。 請確認要求標頭搭配 HttpRequestMessage 物件使用；回應標頭搭配 HttpResponseMessage 物件使用；而內容標頭則搭配 HttpContent 物件使用。</exception>
      <exception cref="T:System.FormatException" vsli:raw="The header name format is invalid.&#xA;&#xA;-or-&#xA;&#xA;New line characters in header values must be followed by a white-space character.">標頭名稱格式無效。

-或-

標頭值中的新行字元後面必須接著空白字元。</exception>
    </member>
    <member name="M:System.Net.Http.Headers.HttpHeaders.Add(System.String,System.String)">
      <summary vsli:raw="Adds the specified header and its value into the &lt;see cref=&quot;T:System.Net.Http.Headers.HttpHeaders&quot; /&gt; collection.">將指定的標頭及其值加入至 <see cref="T:System.Net.Http.Headers.HttpHeaders" /> 集合中。</summary>
      <param name="name" vsli:raw="The header to add to the collection.">要加入至集合的標頭。</param>
      <param name="value" vsli:raw="The content of the header.">標頭的內容。</param>
      <exception cref="T:System.ArgumentException" vsli:raw="The name cannot be null or empty.">名稱不可為 Null 或空白。</exception>
      <exception cref="T:System.InvalidOperationException" vsli:raw="Misused header name. Make sure request headers are used with HttpRequestMessage, response headers with HttpResponseMessage, and content headers with HttpContent objects.">標頭名稱使用錯誤。 請確認要求標頭搭配 HttpRequestMessage 物件使用；回應標頭搭配 HttpResponseMessage 物件使用；而內容標頭則搭配 HttpContent 物件使用。</exception>
      <exception cref="T:System.FormatException" vsli:raw="The header name format is invalid.&#xA;&#xA;-or-&#xA;&#xA;New line characters in header values must be followed by a white-space character.">標頭名稱格式無效。

-或-

標頭值中的新行字元後面必須接著空白字元。</exception>
    </member>
    <member name="M:System.Net.Http.Headers.HttpHeaders.Clear">
      <summary vsli:raw="Removes all headers from the &lt;see cref=&quot;T:System.Net.Http.Headers.HttpHeaders&quot; /&gt; collection.">移除 <see cref="T:System.Net.Http.Headers.HttpHeaders" /> 集合中的所有標頭。</summary>
    </member>
    <member name="M:System.Net.Http.Headers.HttpHeaders.Contains(System.String)">
      <summary vsli:raw="Returns if  a specific header exists in the &lt;see cref=&quot;T:System.Net.Http.Headers.HttpHeaders&quot; /&gt; collection.">傳回在 <see cref="T:System.Net.Http.Headers.HttpHeaders" /> 集合中是否有特定的標頭。</summary>
      <param name="name" vsli:raw="The specific header.">特定的標頭。</param>
      <returns vsli:raw="&lt;see langword=&quot;true&quot; /&gt; if the specified header exists in the collection; otherwise &lt;see langword=&quot;false&quot; /&gt;.">
        <see langword="true" /> 表示在集合中存在指定的標頭；否則為 <see langword="false" />。</returns>
    </member>
    <member name="M:System.Net.Http.Headers.HttpHeaders.GetEnumerator">
      <summary vsli:raw="Returns an enumerator that can iterate through the &lt;see cref=&quot;T:System.Net.Http.Headers.HttpHeaders&quot; /&gt; instance.">傳回可以逐一查看 <see cref="T:System.Net.Http.Headers.HttpHeaders" /> 執行個體的列舉值。</summary>
      <returns vsli:raw="An enumerator for the &lt;see cref=&quot;T:System.Net.Http.Headers.HttpHeaders&quot; /&gt;.">
        <see cref="T:System.Net.Http.Headers.HttpHeaders" /> 的列舉程式。</returns>
    </member>
    <member name="M:System.Net.Http.Headers.HttpHeaders.GetValues(System.String)">
      <summary vsli:raw="Returns all header values for a specified header stored in the &lt;see cref=&quot;T:System.Net.Http.Headers.HttpHeaders&quot; /&gt; collection.">傳回 <see cref="T:System.Net.Http.Headers.HttpHeaders" /> 集合中儲存之指定標頭的所有標頭值。</summary>
      <param name="name" vsli:raw="The specified header to return values for.">要傳回值的指定標頭。</param>
      <exception cref="T:System.InvalidOperationException" vsli:raw="The header cannot be found.">找不到標頭。</exception>
      <returns vsli:raw="An array of header strings.">標頭字串的陣列。</returns>
    </member>
    <member name="M:System.Net.Http.Headers.HttpHeaders.Remove(System.String)">
      <summary vsli:raw="Removes the specified header from the &lt;see cref=&quot;T:System.Net.Http.Headers.HttpHeaders&quot; /&gt; collection.">從 <see cref="T:System.Net.Http.Headers.HttpHeaders" /> 集合中移除指定的標頭。</summary>
      <param name="name" vsli:raw="The name of the header to remove from the collection.">要從集合中移除的標頭名稱。</param>
      <returns vsli:raw="&lt;see langword=&quot;true&quot; /&gt; if &lt;paramref name=&quot;name&quot; /&gt; is successfully removed; otherwise, &lt;see langword=&quot;false&quot; /&gt;.  This method also returns &lt;see langword=&quot;false&quot; /&gt; if &lt;paramref name=&quot;item&quot; /&gt; was not found in the &lt;see cref=&quot;T:System.Net.Http.Headers.HttpHeaders&quot; /&gt; collection or if &lt;paramref name=&quot;item&quot; /&gt; is &lt;see langword=&quot;null&quot; /&gt;.">傳回 <see cref="T:System.Boolean" />。</returns>
    </member>
    <member name="M:System.Net.Http.Headers.HttpHeaders.System#Collections#IEnumerable#GetEnumerator">
      <summary vsli:raw="Gets an enumerator that can iterate through a &lt;see cref=&quot;T:System.Net.Http.Headers.HttpHeaders&quot; /&gt;.">取得可以逐一查看 <see cref="T:System.Net.Http.Headers.HttpHeaders" /> 的列舉程式。</summary>
      <returns vsli:raw="An instance of an implementation of an &lt;see cref=&quot;T:System.Collections.IEnumerator&quot; /&gt; that can iterate through a &lt;see cref=&quot;T:System.Net.Http.Headers.HttpHeaders&quot; /&gt;.">
        <see cref="T:System.Collections.IEnumerator" /> 實作的執行個體，可逐一查看 <see cref="T:System.Net.Http.Headers.HttpHeaders" />。</returns>
    </member>
    <member name="M:System.Net.Http.Headers.HttpHeaders.ToString">
      <summary vsli:raw="Returns a string that represents the current &lt;see cref=&quot;T:System.Net.Http.Headers.HttpHeaders&quot; /&gt; object.">傳回表示目前 <see cref="T:System.Net.Http.Headers.HttpHeaders" /> 物件的字串。</summary>
      <returns vsli:raw="A string that represents the current object.">表示目前物件的字串。</returns>
    </member>
    <member name="M:System.Net.Http.Headers.HttpHeaders.TryAddWithoutValidation(System.String,System.Collections.Generic.IEnumerable{System.String})">
      <summary vsli:raw="Returns a value that indicates whether the specified header and its values were added to the &lt;see cref=&quot;T:System.Net.Http.Headers.HttpHeaders&quot; /&gt; collection without validating the provided information.">傳回的值指示指定的標頭及其值是否未驗證提供的資訊便加入 <see cref="T:System.Net.Http.Headers.HttpHeaders" /> 集合。</summary>
      <param name="name" vsli:raw="The header to add to the collection.">要加入至集合的標頭。</param>
      <param name="values" vsli:raw="The values of the header.">標頭的值。</param>
      <returns vsli:raw="&lt;see langword=&quot;true&quot; /&gt; if the specified header &lt;paramref name=&quot;name&quot; /&gt; and &lt;paramref name=&quot;values&quot; /&gt; could be added to the collection; otherwise &lt;see langword=&quot;false&quot; /&gt;.">如果指定的標頭 <paramref name="name" /> 和 <paramref name="values" /> 可以加入集合則為 <see langword="true" />，否則為 <see langword="false" />。</returns>
    </member>
    <member name="M:System.Net.Http.Headers.HttpHeaders.TryAddWithoutValidation(System.String,System.String)">
      <summary vsli:raw="Returns a value that indicates whether the specified header and its value were added to the &lt;see cref=&quot;T:System.Net.Http.Headers.HttpHeaders&quot; /&gt; collection without validating the provided information.">傳回的值指示指定的標頭及其值是否未驗證提供的資訊便加入 <see cref="T:System.Net.Http.Headers.HttpHeaders" /> 集合。</summary>
      <param name="name" vsli:raw="The header to add to the collection.">要加入至集合的標頭。</param>
      <param name="value" vsli:raw="The content of the header.">標頭的內容。</param>
      <returns vsli:raw="&lt;see langword=&quot;true&quot; /&gt; if the specified header &lt;paramref name=&quot;name&quot; /&gt; and &lt;paramref name=&quot;value&quot; /&gt; could be added to the collection; otherwise &lt;see langword=&quot;false&quot; /&gt;.">如果指定的標頭 <paramref name="name" /> 和 <paramref name="value" /> 可以加入集合則為 <see langword="true" />，否則為 <see langword="false" />。</returns>
    </member>
    <member name="M:System.Net.Http.Headers.HttpHeaders.TryGetValues(System.String,System.Collections.Generic.IEnumerable{System.String}@)">
      <summary vsli:raw="Return if a specified header and specified values are stored in the &lt;see cref=&quot;T:System.Net.Http.Headers.HttpHeaders&quot; /&gt; collection.">如果指定的標頭和指定值儲存於 <see cref="T:System.Net.Http.Headers.HttpHeaders" /> 集合中，則會傳回。</summary>
      <param name="name" vsli:raw="The specified header.">指定的標頭。</param>
      <param name="values" vsli:raw="The specified header values.">指定的標頭值。</param>
      <returns vsli:raw="&lt;see langword=&quot;true&quot; /&gt; if the specified header &lt;paramref name=&quot;name&quot; /&gt; and &lt;see langword=&quot;values&quot; /&gt; are stored in the collection; otherwise &lt;see langword=&quot;false&quot; /&gt;.">
        <see langword="true" /> 為指定的標頭 <paramref name="name" /> 且 <see langword="values" /> 儲存於集合中；否則為 <see langword="false" />。</returns>
    </member>
    <member name="T:System.Net.Http.Headers.HttpHeaderValueCollection`1">
      <summary vsli:raw="Represents a collection of header values.">代表標頭值的集合。</summary>
      <typeparam name="T" vsli:raw="The header collection type.">標頭集合類型。</typeparam>
    </member>
    <member name="M:System.Net.Http.Headers.HttpHeaderValueCollection`1.Add(`0)">
      <summary vsli:raw="Adds an entry to the &lt;see cref=&quot;T:System.Net.Http.Headers.HttpHeaderValueCollection`1&quot; /&gt;.">將項目加入至 <see cref="T:System.Net.Http.Headers.HttpHeaderValueCollection`1" />。</summary>
      <param name="item" vsli:raw="The item to add to the header collection.">要加入至標頭集合中的項目。</param>
    </member>
    <member name="M:System.Net.Http.Headers.HttpHeaderValueCollection`1.Clear">
      <summary vsli:raw="Removes all entries from the &lt;see cref=&quot;T:System.Net.Http.Headers.HttpHeaderValueCollection`1&quot; /&gt;.">移除 <see cref="T:System.Net.Http.Headers.HttpHeaderValueCollection`1" /> 的所有項目。</summary>
    </member>
    <member name="M:System.Net.Http.Headers.HttpHeaderValueCollection`1.Contains(`0)">
      <summary vsli:raw="Determines if the &lt;see cref=&quot;T:System.Net.Http.Headers.HttpHeaderValueCollection`1&quot; /&gt; contains an item.">判斷 <see cref="T:System.Net.Http.Headers.HttpHeaderValueCollection`1" /> 是否包含項目。</summary>
      <param name="item" vsli:raw="The item to find to the header collection.">尋找標頭集合的項目。</param>
      <returns vsli:raw="&lt;see langword=&quot;true&quot; /&gt; if the entry is contained in the &lt;see cref=&quot;T:System.Net.Http.Headers.HttpHeaderValueCollection`1&quot; /&gt; instance; otherwise, &lt;see langword=&quot;false&quot; /&gt;.">如果項目包含在 <see cref="T:System.Net.Http.Headers.HttpHeaderValueCollection`1" /> 執行個體中，則為 <see langword="true" />；否則為 <see langword="false" />。</returns>
    </member>
    <member name="M:System.Net.Http.Headers.HttpHeaderValueCollection`1.CopyTo(`0[],System.Int32)">
      <summary vsli:raw="Copies the entire &lt;see cref=&quot;T:System.Net.Http.Headers.HttpHeaderValueCollection`1&quot; /&gt; to a compatible one-dimensional &lt;see cref=&quot;T:System.Array&quot; /&gt;, starting at the specified index of the target array.">從目標陣列的指定索引開始，將整個 <see cref="T:System.Net.Http.Headers.HttpHeaderValueCollection`1" /> 複製到相容的一維 <see cref="T:System.Array" />。</summary>
      <param name="array" vsli:raw="The one-dimensional &lt;see cref=&quot;T:System.Array&quot; /&gt; that is the destination of the elements copied from &lt;see cref=&quot;T:System.Net.Http.Headers.HttpHeaderValueCollection`1&quot; /&gt;. The &lt;see cref=&quot;T:System.Array&quot; /&gt; must have zero-based indexing.">一維 <see cref="T:System.Array" />，是從 <see cref="T:System.Net.Http.Headers.HttpHeaderValueCollection`1" /> 複製過來之項目的目的端。 <see cref="T:System.Array" /> 必須有以零為起始的索引。</param>
      <param name="arrayIndex" vsli:raw="The zero-based index in &lt;paramref name=&quot;array&quot; /&gt; at which copying begins.">
        <paramref name="array" /> 中以零起始的索引，即開始複製的位置。</param>
    </member>
    <member name="M:System.Net.Http.Headers.HttpHeaderValueCollection`1.GetEnumerator">
      <summary vsli:raw="Returns an enumerator that iterates through the &lt;see cref=&quot;T:System.Net.Http.Headers.HttpHeaderValueCollection`1&quot; /&gt;.">傳回在 <see cref="T:System.Net.Http.Headers.HttpHeaderValueCollection`1" /> 中逐一查看的列舉值。</summary>
      <returns vsli:raw="An enumerator for the &lt;see cref=&quot;T:System.Net.Http.Headers.HttpHeaderValueCollection`1&quot; /&gt; instance.">
        <see cref="T:System.Net.Http.Headers.HttpHeaderValueCollection`1" /> 執行個體的列舉值。</returns>
    </member>
    <member name="M:System.Net.Http.Headers.HttpHeaderValueCollection`1.ParseAdd(System.String)">
      <summary vsli:raw="Parses and adds an entry to the &lt;see cref=&quot;T:System.Net.Http.Headers.HttpHeaderValueCollection`1&quot; /&gt;.">剖析項目並將其加入至 <see cref="T:System.Net.Http.Headers.HttpHeaderValueCollection`1" />。</summary>
      <param name="input" vsli:raw="The entry to add.">要加入的項目。</param>
    </member>
    <member name="M:System.Net.Http.Headers.HttpHeaderValueCollection`1.Remove(`0)">
      <summary vsli:raw="Removes the specified item from the &lt;see cref=&quot;T:System.Net.Http.Headers.HttpHeaderValueCollection`1&quot; /&gt;.">從 <see cref="T:System.Net.Http.Headers.HttpHeaderValueCollection`1" /> 移除指定的項目。</summary>
      <param name="item" vsli:raw="The item to remove.">要移除的項目。</param>
      <returns vsli:raw="&lt;see langword=&quot;true&quot; /&gt; if the &lt;paramref name=&quot;item&quot; /&gt; was removed from the &lt;see cref=&quot;T:System.Net.Http.Headers.HttpHeaderValueCollection`1&quot; /&gt; instance; otherwise, &lt;see langword=&quot;false&quot; /&gt;.">如果 <paramref name="item" /> 已從 <see cref="T:System.Net.Http.Headers.HttpHeaderValueCollection`1" /> 執行個體移除則為 <see langword="true" />；否則為 <see langword="false" /></returns>
    </member>
    <member name="M:System.Net.Http.Headers.HttpHeaderValueCollection`1.System#Collections#IEnumerable#GetEnumerator">
      <summary vsli:raw="Returns an enumerator that iterates through the &lt;see cref=&quot;T:System.Net.Http.Headers.HttpHeaderValueCollection`1&quot; /&gt;.">傳回在 <see cref="T:System.Net.Http.Headers.HttpHeaderValueCollection`1" /> 中逐一查看的列舉值。</summary>
      <returns vsli:raw="An enumerator for the &lt;see cref=&quot;T:System.Net.Http.Headers.HttpHeaderValueCollection`1&quot; /&gt; instance.">
        <see cref="T:System.Net.Http.Headers.HttpHeaderValueCollection`1" /> 執行個體的列舉值。</returns>
    </member>
    <member name="M:System.Net.Http.Headers.HttpHeaderValueCollection`1.ToString">
      <summary vsli:raw="Returns a string that represents the current &lt;see cref=&quot;T:System.Net.Http.Headers.HttpHeaderValueCollection`1&quot; /&gt; object. object.">傳回表示目前 <see cref="T:System.Net.Http.Headers.HttpHeaderValueCollection`1" /> 物件的字串。 物件。</summary>
      <returns vsli:raw="A string that represents the current object.">表示目前物件的字串。</returns>
    </member>
    <member name="M:System.Net.Http.Headers.HttpHeaderValueCollection`1.TryParseAdd(System.String)">
      <summary vsli:raw="Determines whether the input could be parsed and added to the &lt;see cref=&quot;T:System.Net.Http.Headers.HttpHeaderValueCollection`1&quot; /&gt;.">判斷是否可以剖析輸入並加入到 <see cref="T:System.Net.Http.Headers.HttpHeaderValueCollection`1" />。</summary>
      <param name="input" vsli:raw="The entry to validate.">要驗證的項目。</param>
      <returns vsli:raw="&lt;see langword=&quot;true&quot; /&gt; if the &lt;paramref name=&quot;input&quot; /&gt; could be parsed and added to the &lt;see cref=&quot;T:System.Net.Http.Headers.HttpHeaderValueCollection`1&quot; /&gt; instance; otherwise, &lt;see langword=&quot;false&quot; /&gt;.">如果 <paramref name="input" /> 可以剖析並加入到 <see cref="T:System.Net.Http.Headers.HttpHeaderValueCollection`1" /> 執行個體，則為 <see langword="true" />；否則為 <see langword="false" /></returns>
    </member>
    <member name="P:System.Net.Http.Headers.HttpHeaderValueCollection`1.Count">
      <summary vsli:raw="Gets the number of headers in the &lt;see cref=&quot;T:System.Net.Http.Headers.HttpHeaderValueCollection`1&quot; /&gt;.">取得 <see cref="T:System.Net.Http.Headers.HttpHeaderValueCollection`1" /> 中的標頭數目。</summary>
      <returns vsli:raw="The number of headers in a collection.">集合中的標頭數目</returns>
    </member>
    <member name="P:System.Net.Http.Headers.HttpHeaderValueCollection`1.IsReadOnly">
      <summary vsli:raw="Gets a value indicating whether the &lt;see cref=&quot;T:System.Net.Http.Headers.HttpHeaderValueCollection`1&quot; /&gt; instance is read-only.">取得值，這個值指出 <see cref="T:System.Net.Http.Headers.HttpHeaderValueCollection`1" />執行個體是否為唯讀。</summary>
      <returns vsli:raw="&lt;see langword=&quot;true&quot; /&gt; if the &lt;see cref=&quot;T:System.Net.Http.Headers.HttpHeaderValueCollection`1&quot; /&gt; instance is read-only; otherwise, &lt;see langword=&quot;false&quot; /&gt;.">如果 <see cref="T:System.Net.Http.Headers.HttpHeaderValueCollection`1" /> 執行個體是唯讀，則為 <see langword="true" />，否則為 <see langword="false" />。</returns>
    </member>
    <member name="T:System.Net.Http.Headers.HttpRequestHeaders">
      <summary vsli:raw="Represents the collection of Request Headers as defined in RFC 2616.">代表要求標頭的集合，如 RFC 2616 中所定義。</summary>
    </member>
    <member name="P:System.Net.Http.Headers.HttpRequestHeaders.Accept">
      <summary vsli:raw="Gets the value of the &lt;see langword=&quot;Accept&quot; /&gt; header for an HTTP request.">取得 HTTP 要求的 <see langword="Accept" /> 標頭值。</summary>
      <returns vsli:raw="The value of the &lt;see langword=&quot;Accept&quot; /&gt; header for an HTTP request.">HTTP 要求的 <see langword="Accept" /> 標頭值。</returns>
    </member>
    <member name="P:System.Net.Http.Headers.HttpRequestHeaders.AcceptCharset">
      <summary vsli:raw="Gets the value of the &lt;see langword=&quot;Accept-Charset&quot; /&gt; header for an HTTP request.">取得 HTTP 要求的 <see langword="Accept-Charset" /> 標頭值。</summary>
      <returns vsli:raw="The value of the &lt;see langword=&quot;Accept-Charset&quot; /&gt; header for an HTTP request.">HTTP 要求的 <see langword="Accept-Charset" /> 標頭值。</returns>
    </member>
    <member name="P:System.Net.Http.Headers.HttpRequestHeaders.AcceptEncoding">
      <summary vsli:raw="Gets the value of the &lt;see langword=&quot;Accept-Encoding&quot; /&gt; header for an HTTP request.">取得 HTTP 要求的 <see langword="Accept-Encoding" /> 標頭值。</summary>
      <returns vsli:raw="The value of the &lt;see langword=&quot;Accept-Encoding&quot; /&gt; header for an HTTP request.">HTTP 要求的 <see langword="Accept-Encoding" /> 標頭值。</returns>
    </member>
    <member name="P:System.Net.Http.Headers.HttpRequestHeaders.AcceptLanguage">
      <summary vsli:raw="Gets the value of the &lt;see langword=&quot;Accept-Language&quot; /&gt; header for an HTTP request.">取得 HTTP 要求的 <see langword="Accept-Language" /> 標頭值。</summary>
      <returns vsli:raw="The value of the &lt;see langword=&quot;Accept-Language&quot; /&gt; header for an HTTP request.">HTTP 要求的 <see langword="Accept-Language" /> 標頭值。</returns>
    </member>
    <member name="P:System.Net.Http.Headers.HttpRequestHeaders.Authorization">
      <summary vsli:raw="Gets or sets the value of the &lt;see langword=&quot;Authorization&quot; /&gt; header for an HTTP request.">取得或設定 HTTP 要求的 <see langword="Authorization" /> 標頭值。</summary>
      <returns vsli:raw="The value of the &lt;see langword=&quot;Authorization&quot; /&gt; header for an HTTP request.">HTTP 要求的 <see langword="Authorization" /> 標頭值。</returns>
    </member>
    <member name="P:System.Net.Http.Headers.HttpRequestHeaders.CacheControl">
      <summary vsli:raw="Gets or sets the value of the &lt;see langword=&quot;Cache-Control&quot; /&gt; header for an HTTP request.">取得或設定 HTTP 要求的 <see langword="Cache-Control" /> 標頭值。</summary>
      <returns vsli:raw="The value of the &lt;see langword=&quot;Cache-Control&quot; /&gt; header for an HTTP request.">HTTP 要求的 <see langword="Cache-Control" /> 標頭值。</returns>
    </member>
    <member name="P:System.Net.Http.Headers.HttpRequestHeaders.Connection">
      <summary vsli:raw="Gets the value of the &lt;see langword=&quot;Connection&quot; /&gt; header for an HTTP request.">取得 HTTP 要求的 <see langword="Connection" /> 標頭值。</summary>
      <returns vsli:raw="The value of the &lt;see langword=&quot;Connection&quot; /&gt; header for an HTTP request.">HTTP 要求的 <see langword="Connection" /> 標頭值。</returns>
    </member>
    <member name="P:System.Net.Http.Headers.HttpRequestHeaders.ConnectionClose">
      <summary vsli:raw="Gets or sets a value that indicates if the &lt;see langword=&quot;Connection&quot; /&gt; header for an HTTP request contains Close.">取得或設定一個值，以指示 HTTP 要求的 <see langword="Connection" /> 標頭是否包含 Close。</summary>
      <returns vsli:raw="&lt;see langword=&quot;true&quot; /&gt; if the &lt;see langword=&quot;Connection&quot; /&gt; header contains Close, otherwise &lt;see langword=&quot;false&quot; /&gt;.">如果 <see langword="Connection" /> 標頭包含 Close 則為 <see langword="true" />，否則為 <see langword="false" />。</returns>
    </member>
    <member name="P:System.Net.Http.Headers.HttpRequestHeaders.Date">
      <summary vsli:raw="Gets or sets the value of the &lt;see langword=&quot;Date&quot; /&gt; header for an HTTP request.">取得或設定 HTTP 要求的 <see langword="Date" /> 標頭值。</summary>
      <returns vsli:raw="The value of the &lt;see langword=&quot;Date&quot; /&gt; header for an HTTP request.">HTTP 要求的 <see langword="Date" /> 標頭值。</returns>
    </member>
    <member name="P:System.Net.Http.Headers.HttpRequestHeaders.Expect">
      <summary vsli:raw="Gets the value of the &lt;see langword=&quot;Expect&quot; /&gt; header for an HTTP request.">取得 HTTP 要求的 <see langword="Expect" /> 標頭值。</summary>
      <returns vsli:raw="The value of the &lt;see langword=&quot;Expect&quot; /&gt; header for an HTTP request.">HTTP 要求的 <see langword="Expect" /> 標頭值。</returns>
    </member>
    <member name="P:System.Net.Http.Headers.HttpRequestHeaders.ExpectContinue">
      <summary vsli:raw="Gets or sets a value that indicates if the &lt;see langword=&quot;Expect&quot; /&gt; header for an HTTP request contains Continue.">取得或設定值，指示 HTTP 要求的 <see langword="Expect" /> 標頭是否包含 Continue。</summary>
      <returns vsli:raw="&lt;see langword=&quot;true&quot; /&gt; if the &lt;see langword=&quot;Expect&quot; /&gt; header contains Continue, otherwise &lt;see langword=&quot;false&quot; /&gt;.">如果 <see langword="Expect" /> 標頭包含 Continue，則為 <see langword="true" />，否則為 <see langword="false" />。</returns>
    </member>
    <member name="P:System.Net.Http.Headers.HttpRequestHeaders.From">
      <summary vsli:raw="Gets or sets the value of the &lt;see langword=&quot;From&quot; /&gt; header for an HTTP request.">取得或設定 HTTP 要求的 <see langword="From" /> 標頭值。</summary>
      <returns vsli:raw="The value of the &lt;see langword=&quot;From&quot; /&gt; header for an HTTP request.">HTTP 要求的 <see langword="From" /> 標頭值。</returns>
    </member>
    <member name="P:System.Net.Http.Headers.HttpRequestHeaders.Host">
      <summary vsli:raw="Gets or sets the value of the &lt;see langword=&quot;Host&quot; /&gt; header for an HTTP request.">取得或設定 HTTP 要求的 <see langword="Host" /> 標頭值。</summary>
      <returns vsli:raw="The value of the &lt;see langword=&quot;Host&quot; /&gt; header for an HTTP request.">HTTP 要求的 <see langword="Host" /> 標頭值。</returns>
    </member>
    <member name="P:System.Net.Http.Headers.HttpRequestHeaders.IfMatch">
      <summary vsli:raw="Gets the value of the &lt;see langword=&quot;If-Match&quot; /&gt; header for an HTTP request.">取得 HTTP 要求的 <see langword="If-Match" /> 標頭值。</summary>
      <returns vsli:raw="Returns &lt;see cref=&quot;T:System.Net.Http.Headers.HttpHeaderValueCollection`1&quot; /&gt;.  &#xA;  &#xA; The value of the &lt;see langword=&quot;If-Match&quot; /&gt; header for an HTTP request.">傳回 <see cref="T:System.Net.Http.Headers.HttpHeaderValueCollection`1" />。  
  
HTTP 要求的 <see langword="If-Match" /> 標頭值。</returns>
    </member>
    <member name="P:System.Net.Http.Headers.HttpRequestHeaders.IfModifiedSince">
      <summary vsli:raw="Gets or sets the value of the &lt;see langword=&quot;If-Modified-Since&quot; /&gt; header for an HTTP request.">取得或設定 HTTP 要求的 <see langword="If-Modified-Since" /> 標頭值。</summary>
      <returns vsli:raw="The value of the &lt;see langword=&quot;If-Modified-Since&quot; /&gt; header for an HTTP request.">HTTP 要求的 <see langword="If-Modified-Since" /> 標頭值。</returns>
    </member>
    <member name="P:System.Net.Http.Headers.HttpRequestHeaders.IfNoneMatch">
      <summary vsli:raw="Gets the value of the &lt;see langword=&quot;If-None-Match&quot; /&gt; header for an HTTP request.">取得 HTTP 要求的 <see langword="If-None-Match" /> 標頭值。</summary>
      <returns vsli:raw="Gets the value of the &lt;see langword=&quot;If-None-Match&quot; /&gt; header for an HTTP request.">取得 HTTP 要求的 <see langword="If-None-Match" /> 標頭值。</returns>
    </member>
    <member name="P:System.Net.Http.Headers.HttpRequestHeaders.IfRange">
      <summary vsli:raw="Gets or sets the value of the &lt;see langword=&quot;If-Range&quot; /&gt; header for an HTTP request.">取得或設定 HTTP 要求的 <see langword="If-Range" /> 標頭值。</summary>
      <returns vsli:raw="The value of the &lt;see langword=&quot;If-Range&quot; /&gt; header for an HTTP request.">HTTP 要求的 <see langword="If-Range" /> 標頭值。</returns>
    </member>
    <member name="P:System.Net.Http.Headers.HttpRequestHeaders.IfUnmodifiedSince">
      <summary vsli:raw="Gets or sets the value of the &lt;see langword=&quot;If-Unmodified-Since&quot; /&gt; header for an HTTP request.">取得或設定 HTTP 要求的 <see langword="If-Unmodified-Since" /> 標頭值。</summary>
      <returns vsli:raw="The value of the &lt;see langword=&quot;If-Unmodified-Since&quot; /&gt; header for an HTTP request.">HTTP 要求的 <see langword="If-Unmodified-Since" /> 標頭值。</returns>
    </member>
    <member name="P:System.Net.Http.Headers.HttpRequestHeaders.MaxForwards">
      <summary vsli:raw="Gets or sets the value of the &lt;see langword=&quot;Max-Forwards&quot; /&gt; header for an HTTP request.">取得或設定 HTTP 要求的 <see langword="Max-Forwards" /> 標頭值。</summary>
      <returns vsli:raw="The value of the &lt;see langword=&quot;Max-Forwards&quot; /&gt; header for an HTTP request.">HTTP 要求的 <see langword="Max-Forwards" /> 標頭值。</returns>
    </member>
    <member name="P:System.Net.Http.Headers.HttpRequestHeaders.Pragma">
      <summary vsli:raw="Gets the value of the &lt;see langword=&quot;Pragma&quot; /&gt; header for an HTTP request.">取得 HTTP 要求的 <see langword="Pragma" /> 標頭值。</summary>
      <returns vsli:raw="The value of the &lt;see langword=&quot;Pragma&quot; /&gt; header for an HTTP request.">HTTP 要求的 <see langword="Pragma" /> 標頭值。</returns>
    </member>
    <member name="P:System.Net.Http.Headers.HttpRequestHeaders.ProxyAuthorization">
      <summary vsli:raw="Gets or sets the value of the &lt;see langword=&quot;Proxy-Authorization&quot; /&gt; header for an HTTP request.">取得或設定 HTTP 要求的 <see langword="Proxy-Authorization" /> 標頭值。</summary>
      <returns vsli:raw="The value of the &lt;see langword=&quot;Proxy-Authorization&quot; /&gt; header for an HTTP request.">HTTP 要求的 <see langword="Proxy-Authorization" /> 標頭值。</returns>
    </member>
    <member name="P:System.Net.Http.Headers.HttpRequestHeaders.Range">
      <summary vsli:raw="Gets or sets the value of the &lt;see langword=&quot;Range&quot; /&gt; header for an HTTP request.">取得或設定 HTTP 要求的 <see langword="Range" /> 標頭值。</summary>
      <returns vsli:raw="The value of the &lt;see langword=&quot;Range&quot; /&gt; header for an HTTP request.">HTTP 要求的 <see langword="Range" /> 標頭值。</returns>
    </member>
    <member name="P:System.Net.Http.Headers.HttpRequestHeaders.Referrer">
      <summary vsli:raw="Gets or sets the value of the &lt;see langword=&quot;Referer&quot; /&gt; header for an HTTP request.">取得或設定 HTTP 要求的 <see langword="Referer" /> 標頭值。</summary>
      <returns vsli:raw="The value of the &lt;see langword=&quot;Referer&quot; /&gt; header for an HTTP request.">HTTP 要求的 <see langword="Referer" /> 標頭值。</returns>
    </member>
    <member name="P:System.Net.Http.Headers.HttpRequestHeaders.TE">
      <summary vsli:raw="Gets the value of the &lt;see langword=&quot;TE&quot; /&gt; header for an HTTP request.">取得 HTTP 要求的 <see langword="TE" /> 標頭值。</summary>
      <returns vsli:raw="The value of the &lt;see langword=&quot;TE&quot; /&gt; header for an HTTP request.">HTTP 要求的 <see langword="TE" /> 標頭值。</returns>
    </member>
    <member name="P:System.Net.Http.Headers.HttpRequestHeaders.Trailer">
      <summary vsli:raw="Gets the value of the &lt;see langword=&quot;Trailer&quot; /&gt; header for an HTTP request.">取得 HTTP 要求的 <see langword="Trailer" /> 標頭值。</summary>
      <returns vsli:raw="The value of the &lt;see langword=&quot;Trailer&quot; /&gt; header for an HTTP request.">HTTP 要求的 <see langword="Trailer" /> 標頭值。</returns>
    </member>
    <member name="P:System.Net.Http.Headers.HttpRequestHeaders.TransferEncoding">
      <summary vsli:raw="Gets the value of the &lt;see langword=&quot;Transfer-Encoding&quot; /&gt; header for an HTTP request.">取得 HTTP 要求的 <see langword="Transfer-Encoding" /> 標頭值。</summary>
      <returns vsli:raw="The value of the &lt;see langword=&quot;Transfer-Encoding&quot; /&gt; header for an HTTP request.">HTTP 要求的 <see langword="Transfer-Encoding" /> 標頭值。</returns>
    </member>
    <member name="P:System.Net.Http.Headers.HttpRequestHeaders.TransferEncodingChunked">
      <summary vsli:raw="Gets or sets a value that indicates if the &lt;see langword=&quot;Transfer-Encoding&quot; /&gt; header for an HTTP request contains chunked.">取得或設定一個值，以指示 HTTP 要求的 <see langword="Transfer-Encoding" /> 標頭是否包含區塊。</summary>
      <returns vsli:raw="&lt;see langword=&quot;true&quot; /&gt; if the &lt;see langword=&quot;Transfer-Encoding&quot; /&gt; header contains chunked, otherwise &lt;see langword=&quot;false&quot; /&gt;.">如果 <see langword="Transfer-Encoding" /> 標頭包含區塊則為 <see langword="true" />，否則為 <see langword="false" />。</returns>
    </member>
    <member name="P:System.Net.Http.Headers.HttpRequestHeaders.Upgrade">
      <summary vsli:raw="Gets the value of the &lt;see langword=&quot;Upgrade&quot; /&gt; header for an HTTP request.">取得 HTTP 要求的 <see langword="Upgrade" /> 標頭值。</summary>
      <returns vsli:raw="The value of the &lt;see langword=&quot;Upgrade&quot; /&gt; header for an HTTP request.">HTTP 要求的 <see langword="Upgrade" /> 標頭值。</returns>
    </member>
    <member name="P:System.Net.Http.Headers.HttpRequestHeaders.UserAgent">
      <summary vsli:raw="Gets the value of the &lt;see langword=&quot;User-Agent&quot; /&gt; header for an HTTP request.">取得 HTTP 要求的 <see langword="User-Agent" /> 標頭值。</summary>
      <returns vsli:raw="The value of the &lt;see langword=&quot;User-Agent&quot; /&gt; header for an HTTP request.">HTTP 要求的 <see langword="User-Agent" /> 標頭值。</returns>
    </member>
    <member name="P:System.Net.Http.Headers.HttpRequestHeaders.Via">
      <summary vsli:raw="Gets the value of the &lt;see langword=&quot;Via&quot; /&gt; header for an HTTP request.">取得 HTTP 要求的 <see langword="Via" /> 標頭值。</summary>
      <returns vsli:raw="The value of the &lt;see langword=&quot;Via&quot; /&gt; header for an HTTP request.">HTTP 要求的 <see langword="Via" /> 標頭值。</returns>
    </member>
    <member name="P:System.Net.Http.Headers.HttpRequestHeaders.Warning">
      <summary vsli:raw="Gets the value of the &lt;see langword=&quot;Warning&quot; /&gt; header for an HTTP request.">取得 HTTP 要求的 <see langword="Warning" /> 標頭值。</summary>
      <returns vsli:raw="The value of the &lt;see langword=&quot;Warning&quot; /&gt; header for an HTTP request.">HTTP 要求的 <see langword="Warning" /> 標頭值。</returns>
    </member>
    <member name="T:System.Net.Http.Headers.HttpResponseHeaders">
      <summary vsli:raw="Represents the collection of Response Headers as defined in RFC 2616.">代表回應標頭的集合，如 RFC 2616 中所定義。</summary>
    </member>
    <member name="P:System.Net.Http.Headers.HttpResponseHeaders.AcceptRanges">
      <summary vsli:raw="Gets the value of the &lt;see langword=&quot;Accept-Ranges&quot; /&gt; header for an HTTP response.">取得 HTTP 回應的 <see langword="Accept-Ranges" /> 標頭值。</summary>
      <returns vsli:raw="The value of the &lt;see langword=&quot;Accept-Ranges&quot; /&gt; header for an HTTP response.">HTTP 回應的 <see langword="Accept-Ranges" /> 標頭值。</returns>
    </member>
    <member name="P:System.Net.Http.Headers.HttpResponseHeaders.Age">
      <summary vsli:raw="Gets or sets the value of the &lt;see langword=&quot;Age&quot; /&gt; header for an HTTP response.">取得或設定 HTTP 回應的 <see langword="Age" /> 標頭值。</summary>
      <returns vsli:raw="The value of the &lt;see langword=&quot;Age&quot; /&gt; header for an HTTP response.">HTTP 回應的 <see langword="Age" /> 標頭值。</returns>
    </member>
    <member name="P:System.Net.Http.Headers.HttpResponseHeaders.CacheControl">
      <summary vsli:raw="Gets or sets the value of the &lt;see langword=&quot;Cache-Control&quot; /&gt; header for an HTTP response.">取得或設定 HTTP 回應的 <see langword="Cache-Control" /> 標頭值。</summary>
      <returns vsli:raw="The value of the &lt;see langword=&quot;Cache-Control&quot; /&gt; header for an HTTP response.">HTTP 回應的 <see langword="Cache-Control" /> 標頭值。</returns>
    </member>
    <member name="P:System.Net.Http.Headers.HttpResponseHeaders.Connection">
      <summary vsli:raw="Gets the value of the &lt;see langword=&quot;Connection&quot; /&gt; header for an HTTP response.">取得 HTTP 回應的 <see langword="Connection" /> 標頭值。</summary>
      <returns vsli:raw="The value of the &lt;see langword=&quot;Connection&quot; /&gt; header for an HTTP response.">HTTP 回應的 <see langword="Connection" /> 標頭值。</returns>
    </member>
    <member name="P:System.Net.Http.Headers.HttpResponseHeaders.ConnectionClose">
      <summary vsli:raw="Gets or sets a value that indicates if the &lt;see langword=&quot;Connection&quot; /&gt; header for an HTTP response contains Close.">取得或設定一個值，以指示 HTTP 回應的 <see langword="Connection" /> 標頭是否包含 Close。</summary>
      <returns vsli:raw="&lt;see langword=&quot;true&quot; /&gt; if the &lt;see langword=&quot;Connection&quot; /&gt; header contains Close, otherwise &lt;see langword=&quot;false&quot; /&gt;.">如果 <see langword="Connection" /> 標頭包含 Close 則為 <see langword="true" />，否則為 <see langword="false" />。</returns>
    </member>
    <member name="P:System.Net.Http.Headers.HttpResponseHeaders.Date">
      <summary vsli:raw="Gets or sets the value of the &lt;see langword=&quot;Date&quot; /&gt; header for an HTTP response.">取得或設定 HTTP 回應的 <see langword="Date" /> 標頭值。</summary>
      <returns vsli:raw="The value of the &lt;see langword=&quot;Date&quot; /&gt; header for an HTTP response.">HTTP 回應的 <see langword="Date" /> 標頭值。</returns>
    </member>
    <member name="P:System.Net.Http.Headers.HttpResponseHeaders.ETag">
      <summary vsli:raw="Gets or sets the value of the &lt;see langword=&quot;ETag&quot; /&gt; header for an HTTP response.">取得或設定 HTTP 回應的 <see langword="ETag" /> 標頭值。</summary>
      <returns vsli:raw="The value of the &lt;see langword=&quot;ETag&quot; /&gt; header for an HTTP response.">HTTP 回應的 <see langword="ETag" /> 標頭值。</returns>
    </member>
    <member name="P:System.Net.Http.Headers.HttpResponseHeaders.Location">
      <summary vsli:raw="Gets or sets the value of the &lt;see langword=&quot;Location&quot; /&gt; header for an HTTP response.">取得或設定 HTTP 回應的 <see langword="Location" /> 標頭值。</summary>
      <returns vsli:raw="The value of the &lt;see langword=&quot;Location&quot; /&gt; header for an HTTP response.">HTTP 回應的 <see langword="Location" /> 標頭值。</returns>
    </member>
    <member name="P:System.Net.Http.Headers.HttpResponseHeaders.Pragma">
      <summary vsli:raw="Gets the value of the &lt;see langword=&quot;Pragma&quot; /&gt; header for an HTTP response.">取得 HTTP 回應的 <see langword="Pragma" /> 標頭值。</summary>
      <returns vsli:raw="Returns &lt;see cref=&quot;T:System.Net.Http.Headers.HttpHeaderValueCollection`1&quot; /&gt;.  &#xA;  &#xA; The value of the &lt;see langword=&quot;Pragma&quot; /&gt; header for an HTTP response.">傳回 <see cref="T:System.Net.Http.Headers.HttpHeaderValueCollection`1" />。  
  
HTTP 回應的 <see langword="Pragma" /> 標頭值。</returns>
    </member>
    <member name="P:System.Net.Http.Headers.HttpResponseHeaders.ProxyAuthenticate">
      <summary vsli:raw="Gets the value of the &lt;see langword=&quot;Proxy-Authenticate&quot; /&gt; header for an HTTP response.">取得 HTTP 回應的 <see langword="Proxy-Authenticate" /> 標頭值。</summary>
      <returns vsli:raw="The value of the &lt;see langword=&quot;Proxy-Authenticate&quot; /&gt; header for an HTTP response.">HTTP 回應的 <see langword="Proxy-Authenticate" /> 標頭值。</returns>
    </member>
    <member name="P:System.Net.Http.Headers.HttpResponseHeaders.RetryAfter">
      <summary vsli:raw="Gets or sets the value of the &lt;see langword=&quot;Retry-After&quot; /&gt; header for an HTTP response.">取得或設定 HTTP 回應的 <see langword="Retry-After" /> 標頭值。</summary>
      <returns vsli:raw="The value of the &lt;see langword=&quot;Retry-After&quot; /&gt; header for an HTTP response.">HTTP 回應的 <see langword="Retry-After" /> 標頭值。</returns>
    </member>
    <member name="P:System.Net.Http.Headers.HttpResponseHeaders.Server">
      <summary vsli:raw="Gets the value of the &lt;see langword=&quot;Server&quot; /&gt; header for an HTTP response.">取得 HTTP 回應的 <see langword="Server" /> 標頭值。</summary>
      <returns vsli:raw="The value of the &lt;see langword=&quot;Server&quot; /&gt; header for an HTTP response.">HTTP 回應的 <see langword="Server" /> 標頭值。</returns>
    </member>
    <member name="P:System.Net.Http.Headers.HttpResponseHeaders.Trailer">
      <summary vsli:raw="Gets the value of the &lt;see langword=&quot;Trailer&quot; /&gt; header for an HTTP response.">取得 HTTP 回應的 <see langword="Trailer" /> 標頭值。</summary>
      <returns vsli:raw="The value of the &lt;see langword=&quot;Trailer&quot; /&gt; header for an HTTP response.">HTTP 回應的 <see langword="Trailer" /> 標頭值。</returns>
    </member>
    <member name="P:System.Net.Http.Headers.HttpResponseHeaders.TransferEncoding">
      <summary vsli:raw="Gets the value of the &lt;see langword=&quot;Transfer-Encoding&quot; /&gt; header for an HTTP response.">取得 HTTP 回應的 <see langword="Transfer-Encoding" /> 標頭值。</summary>
      <returns vsli:raw="The value of the &lt;see langword=&quot;Transfer-Encoding&quot; /&gt; header for an HTTP response.">HTTP 回應的 <see langword="Transfer-Encoding" /> 標頭值。</returns>
    </member>
    <member name="P:System.Net.Http.Headers.HttpResponseHeaders.TransferEncodingChunked">
      <summary vsli:raw="Gets or sets a value that indicates if the &lt;see langword=&quot;Transfer-Encoding&quot; /&gt; header for an HTTP response contains chunked.">取得或設定一個值，以指示 HTTP 回應的 <see langword="Transfer-Encoding" /> 標頭是否包含區塊。</summary>
      <returns vsli:raw="&lt;see langword=&quot;true&quot; /&gt; if the &lt;see langword=&quot;Transfer-Encoding&quot; /&gt; header contains chunked, otherwise &lt;see langword=&quot;false&quot; /&gt;.">如果 <see langword="Transfer-Encoding" /> 標頭包含區塊則為 <see langword="true" />，否則為 <see langword="false" />。</returns>
    </member>
    <member name="P:System.Net.Http.Headers.HttpResponseHeaders.Upgrade">
      <summary vsli:raw="Gets the value of the &lt;see langword=&quot;Upgrade&quot; /&gt; header for an HTTP response.">取得 HTTP 回應的 <see langword="Upgrade" /> 標頭值。</summary>
      <returns vsli:raw="The value of the &lt;see langword=&quot;Upgrade&quot; /&gt; header for an HTTP response.">HTTP 回應的 <see langword="Upgrade" /> 標頭值。</returns>
    </member>
    <member name="P:System.Net.Http.Headers.HttpResponseHeaders.Vary">
      <summary vsli:raw="Gets the value of the &lt;see langword=&quot;Vary&quot; /&gt; header for an HTTP response.">取得 HTTP 回應的 <see langword="Vary" /> 標頭值。</summary>
      <returns vsli:raw="The value of the &lt;see langword=&quot;Vary&quot; /&gt; header for an HTTP response.">HTTP 回應的 <see langword="Vary" /> 標頭值。</returns>
    </member>
    <member name="P:System.Net.Http.Headers.HttpResponseHeaders.Via">
      <summary vsli:raw="Gets the value of the &lt;see langword=&quot;Via&quot; /&gt; header for an HTTP response.">取得 HTTP 回應的 <see langword="Via" /> 標頭值。</summary>
      <returns vsli:raw="The value of the &lt;see langword=&quot;Via&quot; /&gt; header for an HTTP response.">HTTP 回應的 <see langword="Via" /> 標頭值。</returns>
    </member>
    <member name="P:System.Net.Http.Headers.HttpResponseHeaders.Warning">
      <summary vsli:raw="Gets the value of the &lt;see langword=&quot;Warning&quot; /&gt; header for an HTTP response.">取得 HTTP 回應的 <see langword="Warning" /> 標頭值。</summary>
      <returns vsli:raw="The value of the &lt;see langword=&quot;Warning&quot; /&gt; header for an HTTP response.">HTTP 回應的 <see langword="Warning" /> 標頭值。</returns>
    </member>
    <member name="P:System.Net.Http.Headers.HttpResponseHeaders.WwwAuthenticate">
      <summary vsli:raw="Gets the value of the &lt;see langword=&quot;WWW-Authenticate&quot; /&gt; header for an HTTP response.">取得 HTTP 回應的 <see langword="WWW-Authenticate" /> 標頭值。</summary>
      <returns vsli:raw="The value of the &lt;see langword=&quot;WWW-Authenticate&quot; /&gt; header for an HTTP response.">HTTP 回應的 <see langword="WWW-Authenticate" /> 標頭值。</returns>
    </member>
    <member name="T:System.Net.Http.Headers.MediaTypeHeaderValue">
      <summary vsli:raw="Represents a media type used in a Content-Type header as defined in the RFC 2616.">表示用於依 RFC 2616 所定義之內容類型標頭的媒體類型。</summary>
    </member>
    <member name="M:System.Net.Http.Headers.MediaTypeHeaderValue.#ctor(System.Net.Http.Headers.MediaTypeHeaderValue)">
      <summary vsli:raw="Initializes a new instance of the &lt;see cref=&quot;T:System.Net.Http.Headers.MediaTypeHeaderValue&quot; /&gt; class.">初始化 <see cref="T:System.Net.Http.Headers.MediaTypeHeaderValue" /> 類別的新執行個體。</summary>
      <param name="source" vsli:raw="A &lt;see cref=&quot;T:System.Net.Http.Headers.MediaTypeHeaderValue&quot; /&gt; object used to initialize the new instance.">用來初始化新執行個體的 <see cref="T:System.Net.Http.Headers.MediaTypeHeaderValue" /> 物件。</param>
    </member>
    <member name="M:System.Net.Http.Headers.MediaTypeHeaderValue.#ctor(System.String)">
      <summary vsli:raw="Initializes a new instance of the &lt;see cref=&quot;T:System.Net.Http.Headers.MediaTypeHeaderValue&quot; /&gt; class.">初始化 <see cref="T:System.Net.Http.Headers.MediaTypeHeaderValue" /> 類別的新執行個體。</summary>
      <param name="mediaType" vsli:raw="The source represented as a string to initialize the new instance.">表示為字串以初始化新執行個體的來源。</param>
    </member>
    <member name="M:System.Net.Http.Headers.MediaTypeHeaderValue.Equals(System.Object)">
      <summary vsli:raw="Determines whether the specified &lt;see cref=&quot;T:System.Object&quot; /&gt; is equal to the current &lt;see cref=&quot;T:System.Net.Http.Headers.MediaTypeHeaderValue&quot; /&gt; object.">判斷指定的 <see cref="T:System.Object" /> 是否等於目前的 <see cref="T:System.Net.Http.Headers.MediaTypeHeaderValue" /> 物件。</summary>
      <param name="obj" vsli:raw="The object to compare with the current object.">要與目前物件比較的物件。</param>
      <returns vsli:raw="&lt;see langword=&quot;true&quot; /&gt; if the specified &lt;see cref=&quot;T:System.Object&quot; /&gt; is equal to the current object; otherwise, &lt;see langword=&quot;false&quot; /&gt;.">如果指定的 <see cref="T:System.Object" /> 和目前的物件相等，則為 <see langword="true" />；否則為 <see langword="false" />。</returns>
    </member>
    <member name="M:System.Net.Http.Headers.MediaTypeHeaderValue.GetHashCode">
      <summary vsli:raw="Serves as a hash function for an &lt;see cref=&quot;T:System.Net.Http.Headers.MediaTypeHeaderValue&quot; /&gt; object.">做為 <see cref="T:System.Net.Http.Headers.MediaTypeHeaderValue" /> 物件的雜湊函式。</summary>
      <returns vsli:raw="A hash code for the current object.">目前物件的雜湊碼。</returns>
    </member>
    <member name="M:System.Net.Http.Headers.MediaTypeHeaderValue.Parse(System.String)">
      <summary vsli:raw="Converts a string to an &lt;see cref=&quot;T:System.Net.Http.Headers.MediaTypeHeaderValue&quot; /&gt; instance.">將字串轉換為 <see cref="T:System.Net.Http.Headers.MediaTypeHeaderValue" /> 執行個體。</summary>
      <param name="input" vsli:raw="A string that represents media type header value information.">代表媒體類型標頭值資訊的字串。</param>
      <exception cref="T:System.ArgumentNullException" vsli:raw="&lt;paramref name=&quot;input&quot; /&gt; is a &lt;see langword=&quot;null&quot; /&gt; reference.">
        <paramref name="input" /> 是 <see langword="null" /> 參考。</exception>
      <exception cref="T:System.FormatException" vsli:raw="&lt;paramref name=&quot;input&quot; /&gt; is not valid media type header value information.">
        <paramref name="input" /> 不是有效的媒體類型標頭值資訊。</exception>
      <returns vsli:raw="A &lt;see cref=&quot;T:System.Net.Http.Headers.MediaTypeHeaderValue&quot; /&gt; instance.">
        <see cref="T:System.Net.Http.Headers.MediaTypeHeaderValue" /> 執行個體。</returns>
    </member>
    <member name="M:System.Net.Http.Headers.MediaTypeHeaderValue.System#ICloneable#Clone">
      <summary vsli:raw="Creates a new object that is a copy of the current &lt;see cref=&quot;T:System.Net.Http.Headers.MediaTypeHeaderValue&quot; /&gt; instance.">建立新物件，為目前 <see cref="T:System.Net.Http.Headers.MediaTypeHeaderValue" /> 執行個體的複本。</summary>
      <returns vsli:raw="A copy of the current instance.">目前執行個體的複本。</returns>
    </member>
    <member name="M:System.Net.Http.Headers.MediaTypeHeaderValue.ToString">
      <summary vsli:raw="Returns a string that represents the current &lt;see cref=&quot;T:System.Net.Http.Headers.MediaTypeHeaderValue&quot; /&gt; object.">傳回表示目前 <see cref="T:System.Net.Http.Headers.MediaTypeHeaderValue" /> 物件的字串。</summary>
      <returns vsli:raw="A string that represents the current object.">表示目前物件的字串。</returns>
    </member>
    <member name="M:System.Net.Http.Headers.MediaTypeHeaderValue.TryParse(System.String,System.Net.Http.Headers.MediaTypeHeaderValue@)">
      <summary vsli:raw="Determines whether a string is valid &lt;see cref=&quot;T:System.Net.Http.Headers.MediaTypeHeaderValue&quot; /&gt; information.">判斷字串是否為有效的 <see cref="T:System.Net.Http.Headers.MediaTypeHeaderValue" /> 資訊。</summary>
      <param name="input" vsli:raw="The string to validate.">要驗證的字串。</param>
      <param name="parsedValue" vsli:raw="The &lt;see cref=&quot;T:System.Net.Http.Headers.MediaTypeHeaderValue&quot; /&gt; version of the string.">字串的 <see cref="T:System.Net.Http.Headers.MediaTypeHeaderValue" /> 版本。</param>
      <returns vsli:raw="&lt;see langword=&quot;true&quot; /&gt; if &lt;paramref name=&quot;input&quot; /&gt; is valid &lt;see cref=&quot;T:System.Net.Http.Headers.MediaTypeHeaderValue&quot; /&gt; information; otherwise, &lt;see langword=&quot;false&quot; /&gt;.">如果 <paramref name="input" /> 是有效的 <see cref="T:System.Net.Http.Headers.MediaTypeHeaderValue" /> 資訊，則為 <see langword="true" />；否則為 <see langword="false" />。</returns>
    </member>
    <member name="P:System.Net.Http.Headers.MediaTypeHeaderValue.CharSet">
      <summary vsli:raw="Gets or sets the character set.">取得或設定字元集。</summary>
      <returns vsli:raw="The character set.">字元集。</returns>
    </member>
    <member name="P:System.Net.Http.Headers.MediaTypeHeaderValue.MediaType">
      <summary vsli:raw="Gets or sets the media-type header value.">取得或設定媒體類型標頭值。</summary>
      <returns vsli:raw="The media-type header value.">媒體類型標頭值。</returns>
    </member>
    <member name="P:System.Net.Http.Headers.MediaTypeHeaderValue.Parameters">
      <summary vsli:raw="Gets or sets the media-type header value parameters.">取得或設定媒體類型標頭值參數。</summary>
      <returns vsli:raw="The media-type header value parameters.">媒體類型標頭值參數。</returns>
    </member>
    <member name="T:System.Net.Http.Headers.MediaTypeWithQualityHeaderValue">
      <summary vsli:raw="Represents a media type with an additional quality factor used in a Content-Type header.">表示具有用於內容類型標頭之其他品質係數的媒體類型。</summary>
    </member>
    <member name="M:System.Net.Http.Headers.MediaTypeWithQualityHeaderValue.#ctor(System.String)">
      <summary vsli:raw="Initializes a new instance of the &lt;see cref=&quot;T:System.Net.Http.Headers.MediaTypeWithQualityHeaderValue&quot; /&gt; class.">初始化 <see cref="T:System.Net.Http.Headers.MediaTypeWithQualityHeaderValue" /> 類別的新執行個體。</summary>
      <param name="mediaType" vsli:raw="A &lt;see cref=&quot;T:System.Net.Http.Headers.MediaTypeWithQualityHeaderValue&quot; /&gt; represented as string to initialize the new instance.">
        <see cref="T:System.Net.Http.Headers.MediaTypeWithQualityHeaderValue" />，表示為字串以初始化新執行個體。</param>
    </member>
    <member name="M:System.Net.Http.Headers.MediaTypeWithQualityHeaderValue.#ctor(System.String,System.Double)">
      <summary vsli:raw="Initializes a new instance of the &lt;see cref=&quot;T:System.Net.Http.Headers.MediaTypeWithQualityHeaderValue&quot; /&gt; class.">初始化 <see cref="T:System.Net.Http.Headers.MediaTypeWithQualityHeaderValue" /> 類別的新執行個體。</summary>
      <param name="mediaType" vsli:raw="A &lt;see cref=&quot;T:System.Net.Http.Headers.MediaTypeWithQualityHeaderValue&quot; /&gt; represented as string to initialize the new instance.">
        <see cref="T:System.Net.Http.Headers.MediaTypeWithQualityHeaderValue" />，表示為字串以初始化新執行個體。</param>
      <param name="quality" vsli:raw="The quality associated with this header value.">與這個標頭值相關聯的品質。</param>
    </member>
    <member name="M:System.Net.Http.Headers.MediaTypeWithQualityHeaderValue.Parse(System.String)">
      <summary vsli:raw="Converts a string to an &lt;see cref=&quot;T:System.Net.Http.Headers.MediaTypeWithQualityHeaderValue&quot; /&gt; instance.">將字串轉換為 <see cref="T:System.Net.Http.Headers.MediaTypeWithQualityHeaderValue" /> 執行個體。</summary>
      <param name="input" vsli:raw="A string that represents media type with quality header value information.">代表包含 quality 標頭值資訊之媒體類型的字串。</param>
      <exception cref="T:System.ArgumentNullException" vsli:raw="&lt;paramref name=&quot;input&quot; /&gt; is a &lt;see langword=&quot;null&quot; /&gt; reference.">
        <paramref name="input" /> 是 <see langword="null" /> 參考。</exception>
      <exception cref="T:System.FormatException" vsli:raw="&lt;paramref name=&quot;input&quot; /&gt; is not valid media type with quality header value information.">
        <paramref name="input" />不是包含 quality 標頭值資訊的有效媒體類型。</exception>
      <returns vsli:raw="A &lt;see cref=&quot;T:System.Net.Http.Headers.MediaTypeWithQualityHeaderValue&quot; /&gt; instance.">
        <see cref="T:System.Net.Http.Headers.MediaTypeWithQualityHeaderValue" /> 執行個體。</returns>
    </member>
    <member name="M:System.Net.Http.Headers.MediaTypeWithQualityHeaderValue.System#ICloneable#Clone">
      <summary vsli:raw="Creates a new object that is a copy of the current &lt;see cref=&quot;T:System.Net.Http.Headers.MediaTypeWithQualityHeaderValue&quot; /&gt; instance.">建立新物件，為目前 <see cref="T:System.Net.Http.Headers.MediaTypeWithQualityHeaderValue" /> 執行個體的複本。</summary>
      <returns vsli:raw="A copy of the current instance.">目前執行個體的複本。</returns>
    </member>
    <member name="M:System.Net.Http.Headers.MediaTypeWithQualityHeaderValue.TryParse(System.String,System.Net.Http.Headers.MediaTypeWithQualityHeaderValue@)">
      <summary vsli:raw="Determines whether a string is valid &lt;see cref=&quot;T:System.Net.Http.Headers.MediaTypeWithQualityHeaderValue&quot; /&gt; information.">判斷字串是否為有效的 <see cref="T:System.Net.Http.Headers.MediaTypeWithQualityHeaderValue" /> 資訊。</summary>
      <param name="input" vsli:raw="The string to validate.">要驗證的字串。</param>
      <param name="parsedValue" vsli:raw="The &lt;see cref=&quot;T:System.Net.Http.Headers.MediaTypeWithQualityHeaderValue&quot; /&gt; version of the string.">字串的 <see cref="T:System.Net.Http.Headers.MediaTypeWithQualityHeaderValue" /> 版本。</param>
      <returns vsli:raw="&lt;see langword=&quot;true&quot; /&gt; if &lt;paramref name=&quot;input&quot; /&gt; is valid &lt;see cref=&quot;T:System.Net.Http.Headers.MediaTypeWithQualityHeaderValue&quot; /&gt; information; otherwise, &lt;see langword=&quot;false&quot; /&gt;.">如果 <paramref name="input" /> 是有效的 <see cref="T:System.Net.Http.Headers.MediaTypeWithQualityHeaderValue" /> 資訊，則為 <see langword="true" />；否則為 <see langword="false" />。</returns>
    </member>
    <member name="P:System.Net.Http.Headers.MediaTypeWithQualityHeaderValue.Quality">
      <summary vsli:raw="Gets or sets the quality value for the &lt;see cref=&quot;T:System.Net.Http.Headers.MediaTypeWithQualityHeaderValue&quot; /&gt;.">取得或設定 <see cref="T:System.Net.Http.Headers.MediaTypeWithQualityHeaderValue" />的品質值。</summary>
      <returns vsli:raw="The quality value for the &lt;see cref=&quot;T:System.Net.Http.Headers.MediaTypeWithQualityHeaderValue&quot; /&gt; object.">
        <see cref="T:System.Net.Http.Headers.MediaTypeWithQualityHeaderValue" /> 物件的品質值。</returns>
    </member>
    <member name="T:System.Net.Http.Headers.NameValueHeaderValue">
      <summary vsli:raw="Represents a name/value pair used in various headers as defined in RFC 2616.">表示用於各種依 RFC 2616 所定義之標頭的名稱/值組。</summary>
    </member>
    <member name="M:System.Net.Http.Headers.NameValueHeaderValue.#ctor(System.Net.Http.Headers.NameValueHeaderValue)">
      <summary vsli:raw="Initializes a new instance of the &lt;see cref=&quot;T:System.Net.Http.Headers.NameValueHeaderValue&quot; /&gt; class.">初始化 <see cref="T:System.Net.Http.Headers.NameValueHeaderValue" /> 類別的新執行個體。</summary>
      <param name="source" vsli:raw="A &lt;see cref=&quot;T:System.Net.Http.Headers.NameValueHeaderValue&quot; /&gt; object used to initialize the new instance.">用來初始化新執行個體的 <see cref="T:System.Net.Http.Headers.NameValueHeaderValue" /> 物件。</param>
    </member>
    <member name="M:System.Net.Http.Headers.NameValueHeaderValue.#ctor(System.String)">
      <summary vsli:raw="Initializes a new instance of the &lt;see cref=&quot;T:System.Net.Http.Headers.NameValueHeaderValue&quot; /&gt; class.">初始化 <see cref="T:System.Net.Http.Headers.NameValueHeaderValue" /> 類別的新執行個體。</summary>
      <param name="name" vsli:raw="The header name.">標頭名稱。</param>
    </member>
    <member name="M:System.Net.Http.Headers.NameValueHeaderValue.#ctor(System.String,System.String)">
      <summary vsli:raw="Initializes a new instance of the &lt;see cref=&quot;T:System.Net.Http.Headers.NameValueHeaderValue&quot; /&gt; class.">初始化 <see cref="T:System.Net.Http.Headers.NameValueHeaderValue" /> 類別的新執行個體。</summary>
      <param name="name" vsli:raw="The header name.">標頭名稱。</param>
      <param name="value" vsli:raw="The header value.">標頭值。</param>
    </member>
    <member name="M:System.Net.Http.Headers.NameValueHeaderValue.Equals(System.Object)">
      <summary vsli:raw="Determines whether the specified &lt;see cref=&quot;T:System.Object&quot; /&gt; is equal to the current &lt;see cref=&quot;T:System.Net.Http.Headers.NameValueHeaderValue&quot; /&gt; object.">判斷指定的 <see cref="T:System.Object" /> 是否等於目前的 <see cref="T:System.Net.Http.Headers.NameValueHeaderValue" /> 物件。</summary>
      <param name="obj" vsli:raw="The object to compare with the current object.">要與目前物件比較的物件。</param>
      <returns vsli:raw="&lt;see langword=&quot;true&quot; /&gt; if the specified &lt;see cref=&quot;T:System.Object&quot; /&gt; is equal to the current object; otherwise, &lt;see langword=&quot;false&quot; /&gt;.">如果指定的 <see cref="T:System.Object" /> 和目前的物件相等，則為 <see langword="true" />；否則為 <see langword="false" />。</returns>
    </member>
    <member name="M:System.Net.Http.Headers.NameValueHeaderValue.GetHashCode">
      <summary vsli:raw="Serves as a hash function for an &lt;see cref=&quot;T:System.Net.Http.Headers.NameValueHeaderValue&quot; /&gt; object.">做為 <see cref="T:System.Net.Http.Headers.NameValueHeaderValue" /> 物件的雜湊函式。</summary>
      <returns vsli:raw="A hash code for the current object.">目前物件的雜湊碼。</returns>
    </member>
    <member name="M:System.Net.Http.Headers.NameValueHeaderValue.Parse(System.String)">
      <summary vsli:raw="Converts a string to an &lt;see cref=&quot;T:System.Net.Http.Headers.NameValueHeaderValue&quot; /&gt; instance.">將字串轉換為 <see cref="T:System.Net.Http.Headers.NameValueHeaderValue" /> 執行個體。</summary>
      <param name="input" vsli:raw="A string that represents name value header value information.">代表名稱值標頭值資訊的字串。</param>
      <exception cref="T:System.ArgumentNullException" vsli:raw="&lt;paramref name=&quot;input&quot; /&gt; is a &lt;see langword=&quot;null&quot; /&gt; reference.">
        <paramref name="input" /> 是 <see langword="null" /> 參考。</exception>
      <exception cref="T:System.FormatException" vsli:raw="&lt;paramref name=&quot;input&quot; /&gt; is not valid name value header value information.">
        <paramref name="input" /> 不是有效的名稱值標頭值資訊。</exception>
      <returns vsli:raw="A &lt;see cref=&quot;T:System.Net.Http.Headers.NameValueHeaderValue&quot; /&gt; instance.">
        <see cref="T:System.Net.Http.Headers.NameValueHeaderValue" /> 執行個體。</returns>
    </member>
    <member name="M:System.Net.Http.Headers.NameValueHeaderValue.System#ICloneable#Clone">
      <summary vsli:raw="Creates a new object that is a copy of the current &lt;see cref=&quot;T:System.Net.Http.Headers.NameValueHeaderValue&quot; /&gt; instance.">建立新物件，為目前 <see cref="T:System.Net.Http.Headers.NameValueHeaderValue" /> 執行個體的複本。</summary>
      <returns vsli:raw="A copy of the current instance.">目前執行個體的複本。</returns>
    </member>
    <member name="M:System.Net.Http.Headers.NameValueHeaderValue.ToString">
      <summary vsli:raw="Returns a string that represents the current &lt;see cref=&quot;T:System.Net.Http.Headers.NameValueHeaderValue&quot; /&gt; object.">傳回表示目前 <see cref="T:System.Net.Http.Headers.NameValueHeaderValue" /> 物件的字串。</summary>
      <returns vsli:raw="A string that represents the current object.">表示目前物件的字串。</returns>
    </member>
    <member name="M:System.Net.Http.Headers.NameValueHeaderValue.TryParse(System.String,System.Net.Http.Headers.NameValueHeaderValue@)">
      <summary vsli:raw="Determines whether a string is valid &lt;see cref=&quot;T:System.Net.Http.Headers.NameValueHeaderValue&quot; /&gt; information.">判斷字串是否為有效的 <see cref="T:System.Net.Http.Headers.NameValueHeaderValue" /> 資訊。</summary>
      <param name="input" vsli:raw="The string to validate.">要驗證的字串。</param>
      <param name="parsedValue" vsli:raw="The &lt;see cref=&quot;T:System.Net.Http.Headers.NameValueHeaderValue&quot; /&gt; version of the string.">字串的 <see cref="T:System.Net.Http.Headers.NameValueHeaderValue" /> 版本。</param>
      <returns vsli:raw="&lt;see langword=&quot;true&quot; /&gt; if &lt;paramref name=&quot;input&quot; /&gt; is valid &lt;see cref=&quot;T:System.Net.Http.Headers.NameValueHeaderValue&quot; /&gt; information; otherwise, &lt;see langword=&quot;false&quot; /&gt;.">如果 <paramref name="input" /> 是有效的 <see cref="T:System.Net.Http.Headers.NameValueHeaderValue" /> 資訊，則為 <see langword="true" />；否則為 <see langword="false" />。</returns>
    </member>
    <member name="P:System.Net.Http.Headers.NameValueHeaderValue.Name">
      <summary vsli:raw="Gets the header name.">取得標頭名稱。</summary>
      <returns vsli:raw="The header name.">標頭名稱。</returns>
    </member>
    <member name="P:System.Net.Http.Headers.NameValueHeaderValue.Value">
      <summary vsli:raw="Gets the header value.">取得標頭值。</summary>
      <returns vsli:raw="The header value.">標頭值。</returns>
    </member>
    <member name="T:System.Net.Http.Headers.NameValueWithParametersHeaderValue">
      <summary vsli:raw="Represents a name/value pair with parameters used in various headers as defined in RFC 2616.">表示搭配參數用於各種依 RFC 2616 所定義之標頭的名稱/值組。</summary>
    </member>
    <member name="M:System.Net.Http.Headers.NameValueWithParametersHeaderValue.#ctor(System.Net.Http.Headers.NameValueWithParametersHeaderValue)">
      <summary vsli:raw="Initializes a new instance of the &lt;see cref=&quot;T:System.Net.Http.Headers.NameValueWithParametersHeaderValue&quot; /&gt; class.">初始化 <see cref="T:System.Net.Http.Headers.NameValueWithParametersHeaderValue" /> 類別的新執行個體。</summary>
      <param name="source" vsli:raw="A &lt;see cref=&quot;T:System.Net.Http.Headers.NameValueWithParametersHeaderValue&quot; /&gt; object used to initialize the new instance.">用來初始化新執行個體的 <see cref="T:System.Net.Http.Headers.NameValueWithParametersHeaderValue" /> 物件。</param>
    </member>
    <member name="M:System.Net.Http.Headers.NameValueWithParametersHeaderValue.#ctor(System.String)">
      <summary vsli:raw="Initializes a new instance of the &lt;see cref=&quot;T:System.Net.Http.Headers.NameValueWithParametersHeaderValue&quot; /&gt; class.">初始化 <see cref="T:System.Net.Http.Headers.NameValueWithParametersHeaderValue" /> 類別的新執行個體。</summary>
      <param name="name" vsli:raw="The header name.">標頭名稱。</param>
    </member>
    <member name="M:System.Net.Http.Headers.NameValueWithParametersHeaderValue.#ctor(System.String,System.String)">
      <summary vsli:raw="Initializes a new instance of the &lt;see cref=&quot;T:System.Net.Http.Headers.NameValueWithParametersHeaderValue&quot; /&gt; class.">初始化 <see cref="T:System.Net.Http.Headers.NameValueWithParametersHeaderValue" /> 類別的新執行個體。</summary>
      <param name="name" vsli:raw="The header name.">標頭名稱。</param>
      <param name="value" vsli:raw="The header value.">標頭值。</param>
    </member>
    <member name="M:System.Net.Http.Headers.NameValueWithParametersHeaderValue.Equals(System.Object)">
      <summary vsli:raw="Determines whether the specified &lt;see cref=&quot;T:System.Object&quot; /&gt; is equal to the current &lt;see cref=&quot;T:System.Net.Http.Headers.NameValueWithParametersHeaderValue&quot; /&gt; object.">判斷指定的 <see cref="T:System.Object" /> 是否等於目前的 <see cref="T:System.Net.Http.Headers.NameValueWithParametersHeaderValue" /> 物件。</summary>
      <param name="obj" vsli:raw="The object to compare with the current object.">要與目前物件比較的物件。</param>
      <returns vsli:raw="&lt;see langword=&quot;true&quot; /&gt; if the specified &lt;see cref=&quot;T:System.Object&quot; /&gt; is equal to the current object; otherwise, &lt;see langword=&quot;false&quot; /&gt;.">如果指定的 <see cref="T:System.Object" /> 和目前的物件相等，則為 <see langword="true" />；否則為 <see langword="false" />。</returns>
    </member>
    <member name="M:System.Net.Http.Headers.NameValueWithParametersHeaderValue.GetHashCode">
      <summary vsli:raw="Serves as a hash function for an &lt;see cref=&quot;T:System.Net.Http.Headers.NameValueWithParametersHeaderValue&quot; /&gt; object.">做為 <see cref="T:System.Net.Http.Headers.NameValueWithParametersHeaderValue" /> 物件的雜湊函式。</summary>
      <returns vsli:raw="A hash code for the current object.">目前物件的雜湊碼。</returns>
    </member>
    <member name="M:System.Net.Http.Headers.NameValueWithParametersHeaderValue.Parse(System.String)">
      <summary vsli:raw="Converts a string to an &lt;see cref=&quot;T:System.Net.Http.Headers.NameValueWithParametersHeaderValue&quot; /&gt; instance.">將字串轉換為 <see cref="T:System.Net.Http.Headers.NameValueWithParametersHeaderValue" /> 執行個體。</summary>
      <param name="input" vsli:raw="A string that represents name value with parameter header value information.">代表包含參數標頭值資訊之名稱值的字串。</param>
      <exception cref="T:System.ArgumentNullException" vsli:raw="&lt;paramref name=&quot;input&quot; /&gt; is a &lt;see langword=&quot;null&quot; /&gt; reference.">
        <paramref name="input" /> 是 <see langword="null" /> 參考。</exception>
      <exception cref="T:System.FormatException" vsli:raw="&lt;paramref name=&quot;input&quot; /&gt; is not valid name value with parameter header value information.">
        <paramref name="input" /> 不是包含參數標頭值資訊的有效名稱值。</exception>
      <returns vsli:raw="A &lt;see cref=&quot;T:System.Net.Http.Headers.NameValueWithParametersHeaderValue&quot; /&gt; instance.">
        <see cref="T:System.Net.Http.Headers.NameValueWithParametersHeaderValue" /> 執行個體。</returns>
    </member>
    <member name="M:System.Net.Http.Headers.NameValueWithParametersHeaderValue.System#ICloneable#Clone">
      <summary vsli:raw="Creates a new object that is a copy of the current &lt;see cref=&quot;T:System.Net.Http.Headers.NameValueWithParametersHeaderValue&quot; /&gt; instance.">建立新物件，為目前 <see cref="T:System.Net.Http.Headers.NameValueWithParametersHeaderValue" /> 執行個體的複本。</summary>
      <returns vsli:raw="A copy of the current instance.">目前執行個體的複本。</returns>
    </member>
    <member name="M:System.Net.Http.Headers.NameValueWithParametersHeaderValue.ToString">
      <summary vsli:raw="Returns a string that represents the current &lt;see cref=&quot;T:System.Net.Http.Headers.NameValueWithParametersHeaderValue&quot; /&gt; object.">傳回表示目前 <see cref="T:System.Net.Http.Headers.NameValueWithParametersHeaderValue" /> 物件的字串。</summary>
      <returns vsli:raw="A string that represents the current object.">表示目前物件的字串。</returns>
    </member>
    <member name="M:System.Net.Http.Headers.NameValueWithParametersHeaderValue.TryParse(System.String,System.Net.Http.Headers.NameValueWithParametersHeaderValue@)">
      <summary vsli:raw="Determines whether a string is valid &lt;see cref=&quot;T:System.Net.Http.Headers.NameValueWithParametersHeaderValue&quot; /&gt; information.">判斷字串是否為有效的 <see cref="T:System.Net.Http.Headers.NameValueWithParametersHeaderValue" /> 資訊。</summary>
      <param name="input" vsli:raw="The string to validate.">要驗證的字串。</param>
      <param name="parsedValue" vsli:raw="The &lt;see cref=&quot;T:System.Net.Http.Headers.NameValueWithParametersHeaderValue&quot; /&gt; version of the string.">字串的 <see cref="T:System.Net.Http.Headers.NameValueWithParametersHeaderValue" /> 版本。</param>
      <returns vsli:raw="&lt;see langword=&quot;true&quot; /&gt; if &lt;paramref name=&quot;input&quot; /&gt; is valid &lt;see cref=&quot;T:System.Net.Http.Headers.NameValueWithParametersHeaderValue&quot; /&gt; information; otherwise, &lt;see langword=&quot;false&quot; /&gt;.">如果 <paramref name="input" /> 是有效的 <see cref="T:System.Net.Http.Headers.NameValueWithParametersHeaderValue" /> 資訊，則為 <see langword="true" />；否則為 <see langword="false" />。</returns>
    </member>
    <member name="P:System.Net.Http.Headers.NameValueWithParametersHeaderValue.Parameters">
      <summary vsli:raw="Gets the parameters from the &lt;see cref=&quot;T:System.Net.Http.Headers.NameValueWithParametersHeaderValue&quot; /&gt; object.">從 <see cref="T:System.Net.Http.Headers.NameValueWithParametersHeaderValue" /> 物件取得參數。</summary>
      <returns vsli:raw="A collection containing the parameters.">包含下列參數的集合。</returns>
    </member>
    <member name="T:System.Net.Http.Headers.ProductHeaderValue">
      <summary vsli:raw="Represents a product token value in a User-Agent header.">表示使用者代理程式標頭中的產品語彙基元值。</summary>
    </member>
    <member name="M:System.Net.Http.Headers.ProductHeaderValue.#ctor(System.String)">
      <summary vsli:raw="Initializes a new instance of the &lt;see cref=&quot;T:System.Net.Http.Headers.ProductHeaderValue&quot; /&gt; class.">初始化 <see cref="T:System.Net.Http.Headers.ProductHeaderValue" /> 類別的新執行個體。</summary>
      <param name="name" vsli:raw="The product name.">產品名稱。</param>
    </member>
    <member name="M:System.Net.Http.Headers.ProductHeaderValue.#ctor(System.String,System.String)">
      <summary vsli:raw="Initializes a new instance of the &lt;see cref=&quot;T:System.Net.Http.Headers.ProductHeaderValue&quot; /&gt; class.">初始化 <see cref="T:System.Net.Http.Headers.ProductHeaderValue" /> 類別的新執行個體。</summary>
      <param name="name" vsli:raw="The product name value.">產品名稱值。</param>
      <param name="version" vsli:raw="The product version value.">產品版本值。</param>
    </member>
    <member name="M:System.Net.Http.Headers.ProductHeaderValue.Equals(System.Object)">
      <summary vsli:raw="Determines whether the specified &lt;see cref=&quot;T:System.Object&quot; /&gt; is equal to the current &lt;see cref=&quot;T:System.Net.Http.Headers.ProductHeaderValue&quot; /&gt; object.">判斷指定的 <see cref="T:System.Object" /> 是否等於目前的 <see cref="T:System.Net.Http.Headers.ProductHeaderValue" /> 物件。</summary>
      <param name="obj" vsli:raw="The object to compare with the current object.">要與目前物件比較的物件。</param>
      <returns vsli:raw="&lt;see langword=&quot;true&quot; /&gt; if the specified &lt;see cref=&quot;T:System.Object&quot; /&gt; is equal to the current object; otherwise, &lt;see langword=&quot;false&quot; /&gt;.">如果指定的 <see cref="T:System.Object" /> 和目前的物件相等，則為 <see langword="true" />；否則為 <see langword="false" />。</returns>
    </member>
    <member name="M:System.Net.Http.Headers.ProductHeaderValue.GetHashCode">
      <summary vsli:raw="Serves as a hash function for an &lt;see cref=&quot;T:System.Net.Http.Headers.ProductHeaderValue&quot; /&gt; object.">做為 <see cref="T:System.Net.Http.Headers.ProductHeaderValue" /> 物件的雜湊函式。</summary>
      <returns vsli:raw="A hash code for the current object.">目前物件的雜湊碼。</returns>
    </member>
    <member name="M:System.Net.Http.Headers.ProductHeaderValue.Parse(System.String)">
      <summary vsli:raw="Converts a string to an &lt;see cref=&quot;T:System.Net.Http.Headers.ProductHeaderValue&quot; /&gt; instance.">將字串轉換為 <see cref="T:System.Net.Http.Headers.ProductHeaderValue" /> 執行個體。</summary>
      <param name="input" vsli:raw="A string that represents product header value information.">字串，代表產品標頭值資訊。</param>
      <returns vsli:raw="A &lt;see cref=&quot;T:System.Net.Http.Headers.ProductHeaderValue&quot; /&gt; instance.">
        <see cref="T:System.Net.Http.Headers.ProductHeaderValue" /> 執行個體。</returns>
    </member>
    <member name="M:System.Net.Http.Headers.ProductHeaderValue.System#ICloneable#Clone">
      <summary vsli:raw="Creates a new object that is a copy of the current &lt;see cref=&quot;T:System.Net.Http.Headers.ProductHeaderValue&quot; /&gt; instance.">建立新物件，為目前 <see cref="T:System.Net.Http.Headers.ProductHeaderValue" /> 執行個體的複本。</summary>
      <returns vsli:raw="A copy of the current instance.">目前執行個體的複本。</returns>
    </member>
    <member name="M:System.Net.Http.Headers.ProductHeaderValue.ToString">
      <summary vsli:raw="Returns a string that represents the current &lt;see cref=&quot;T:System.Net.Http.Headers.ProductHeaderValue&quot; /&gt; object.">傳回表示目前 <see cref="T:System.Net.Http.Headers.ProductHeaderValue" /> 物件的字串。</summary>
      <returns vsli:raw="A string that represents the current object.">表示目前物件的字串。</returns>
    </member>
    <member name="M:System.Net.Http.Headers.ProductHeaderValue.TryParse(System.String,System.Net.Http.Headers.ProductHeaderValue@)">
      <summary vsli:raw="Determines whether a string is valid &lt;see cref=&quot;T:System.Net.Http.Headers.ProductHeaderValue&quot; /&gt; information.">判斷字串是否為有效的 <see cref="T:System.Net.Http.Headers.ProductHeaderValue" /> 資訊。</summary>
      <param name="input" vsli:raw="The string to validate.">要驗證的字串。</param>
      <param name="parsedValue" vsli:raw="The &lt;see cref=&quot;T:System.Net.Http.Headers.ProductHeaderValue&quot; /&gt; version of the string.">字串的 <see cref="T:System.Net.Http.Headers.ProductHeaderValue" /> 版本。</param>
      <returns vsli:raw="&lt;see langword=&quot;true&quot; /&gt; if &lt;paramref name=&quot;input&quot; /&gt; is valid &lt;see cref=&quot;T:System.Net.Http.Headers.ProductHeaderValue&quot; /&gt; information; otherwise, &lt;see langword=&quot;false&quot; /&gt;.">如果 <paramref name="input" /> 是有效的 <see cref="T:System.Net.Http.Headers.ProductHeaderValue" /> 資訊，則為 <see langword="true" />；否則為 <see langword="false" />。</returns>
    </member>
    <member name="P:System.Net.Http.Headers.ProductHeaderValue.Name">
      <summary vsli:raw="Gets the name of the product token.">取得產品語彙基元的名稱。</summary>
      <returns vsli:raw="The name of the product token.">產品語彙基元的名稱。</returns>
    </member>
    <member name="P:System.Net.Http.Headers.ProductHeaderValue.Version">
      <summary vsli:raw="Gets the version of the product token.">取得產品語彙基元的版本。</summary>
      <returns vsli:raw="The version of the product token.">產品語彙基元的版本。</returns>
    </member>
    <member name="T:System.Net.Http.Headers.ProductInfoHeaderValue">
      <summary vsli:raw="Represents a value which can either be a product or a comment in a User-Agent header.">代表一個值，它可以是 User-Agent 標頭中的一項產品或註解。</summary>
    </member>
    <member name="M:System.Net.Http.Headers.ProductInfoHeaderValue.#ctor(System.Net.Http.Headers.ProductHeaderValue)">
      <summary vsli:raw="Initializes a new instance of the &lt;see cref=&quot;T:System.Net.Http.Headers.ProductInfoHeaderValue&quot; /&gt; class.">初始化 <see cref="T:System.Net.Http.Headers.ProductInfoHeaderValue" /> 類別的新執行個體。</summary>
      <param name="product" vsli:raw="A &lt;see cref=&quot;T:System.Net.Http.Headers.ProductHeaderValue&quot; /&gt; object used to initialize the new instance.">用來初始化新執行個體的 <see cref="T:System.Net.Http.Headers.ProductHeaderValue" /> 物件。</param>
    </member>
    <member name="M:System.Net.Http.Headers.ProductInfoHeaderValue.#ctor(System.String)">
      <summary vsli:raw="Initializes a new instance of the &lt;see cref=&quot;T:System.Net.Http.Headers.ProductInfoHeaderValue&quot; /&gt; class.">初始化 <see cref="T:System.Net.Http.Headers.ProductInfoHeaderValue" /> 類別的新執行個體。</summary>
      <param name="comment" vsli:raw="A comment value.">註解值。</param>
    </member>
    <member name="M:System.Net.Http.Headers.ProductInfoHeaderValue.#ctor(System.String,System.String)">
      <summary vsli:raw="Initializes a new instance of the &lt;see cref=&quot;T:System.Net.Http.Headers.ProductInfoHeaderValue&quot; /&gt; class.">初始化 <see cref="T:System.Net.Http.Headers.ProductInfoHeaderValue" /> 類別的新執行個體。</summary>
      <param name="productName" vsli:raw="The product name value.">產品名稱值。</param>
      <param name="productVersion" vsli:raw="The product version value.">產品版本值。</param>
    </member>
    <member name="M:System.Net.Http.Headers.ProductInfoHeaderValue.Equals(System.Object)">
      <summary vsli:raw="Determines whether the specified &lt;see cref=&quot;T:System.Object&quot; /&gt; is equal to the current &lt;see cref=&quot;T:System.Net.Http.Headers.ProductInfoHeaderValue&quot; /&gt; object.">判斷指定的 <see cref="T:System.Object" /> 是否等於目前的 <see cref="T:System.Net.Http.Headers.ProductInfoHeaderValue" /> 物件。</summary>
      <param name="obj" vsli:raw="The object to compare with the current object.">要與目前物件比較的物件。</param>
      <returns vsli:raw="&lt;see langword=&quot;true&quot; /&gt; if the specified &lt;see cref=&quot;T:System.Object&quot; /&gt; is equal to the current object; otherwise, &lt;see langword=&quot;false&quot; /&gt;.">如果指定的 <see cref="T:System.Object" /> 和目前的物件相等，則為 <see langword="true" />；否則為 <see langword="false" />。</returns>
    </member>
    <member name="M:System.Net.Http.Headers.ProductInfoHeaderValue.GetHashCode">
      <summary vsli:raw="Serves as a hash function for an &lt;see cref=&quot;T:System.Net.Http.Headers.ProductInfoHeaderValue&quot; /&gt; object.">做為 <see cref="T:System.Net.Http.Headers.ProductInfoHeaderValue" /> 物件的雜湊函式。</summary>
      <returns vsli:raw="A hash code for the current object.">目前物件的雜湊碼。</returns>
    </member>
    <member name="M:System.Net.Http.Headers.ProductInfoHeaderValue.Parse(System.String)">
      <summary vsli:raw="Converts a string to an &lt;see cref=&quot;T:System.Net.Http.Headers.ProductInfoHeaderValue&quot; /&gt; instance.">將字串轉換為 <see cref="T:System.Net.Http.Headers.ProductInfoHeaderValue" /> 執行個體。</summary>
      <param name="input" vsli:raw="A string that represents product info header value information.">字串，代表產品資訊標頭值資訊。</param>
      <exception cref="T:System.ArgumentNullException" vsli:raw="&lt;paramref name=&quot;input&quot; /&gt; is a &lt;see langword=&quot;null&quot; /&gt; reference.">
        <paramref name="input" /> 是 <see langword="null" /> 參考。</exception>
      <exception cref="T:System.FormatException" vsli:raw="&lt;paramref name=&quot;input&quot; /&gt; is not valid product info header value information.">
        <paramref name="input" /> 不是有效的產品資訊標頭值資訊。</exception>
      <returns vsli:raw="A &lt;see cref=&quot;T:System.Net.Http.Headers.ProductInfoHeaderValue&quot; /&gt; instance.">
        <see cref="T:System.Net.Http.Headers.ProductInfoHeaderValue" /> 執行個體。</returns>
    </member>
    <member name="M:System.Net.Http.Headers.ProductInfoHeaderValue.System#ICloneable#Clone">
      <summary vsli:raw="Creates a new object that is a copy of the current &lt;see cref=&quot;T:System.Net.Http.Headers.ProductInfoHeaderValue&quot; /&gt; instance.">建立新物件，為目前 <see cref="T:System.Net.Http.Headers.ProductInfoHeaderValue" /> 執行個體的複本。</summary>
      <returns vsli:raw="A copy of the current instance.">目前執行個體的複本。</returns>
    </member>
    <member name="M:System.Net.Http.Headers.ProductInfoHeaderValue.ToString">
      <summary vsli:raw="Returns a string that represents the current &lt;see cref=&quot;T:System.Net.Http.Headers.ProductInfoHeaderValue&quot; /&gt; object.">傳回表示目前 <see cref="T:System.Net.Http.Headers.ProductInfoHeaderValue" /> 物件的字串。</summary>
      <returns vsli:raw="A string that represents the current object.">表示目前物件的字串。</returns>
    </member>
    <member name="M:System.Net.Http.Headers.ProductInfoHeaderValue.TryParse(System.String,System.Net.Http.Headers.ProductInfoHeaderValue@)">
      <summary vsli:raw="Determines whether a string is valid &lt;see cref=&quot;T:System.Net.Http.Headers.ProductInfoHeaderValue&quot; /&gt; information.">判斷字串是否為有效的 <see cref="T:System.Net.Http.Headers.ProductInfoHeaderValue" /> 資訊。</summary>
      <param name="input" vsli:raw="The string to validate.">要驗證的字串。</param>
      <param name="parsedValue" vsli:raw="The &lt;see cref=&quot;T:System.Net.Http.Headers.ProductInfoHeaderValue&quot; /&gt; version of the string.">字串的 <see cref="T:System.Net.Http.Headers.ProductInfoHeaderValue" /> 版本。</param>
      <returns vsli:raw="&lt;see langword=&quot;true&quot; /&gt; if &lt;paramref name=&quot;input&quot; /&gt; is valid &lt;see cref=&quot;T:System.Net.Http.Headers.ProductInfoHeaderValue&quot; /&gt; information; otherwise, &lt;see langword=&quot;false&quot; /&gt;.">如果 <paramref name="input" /> 是有效的 <see cref="T:System.Net.Http.Headers.ProductInfoHeaderValue" /> 資訊，則為 <see langword="true" />；否則為 <see langword="false" />。</returns>
    </member>
    <member name="P:System.Net.Http.Headers.ProductInfoHeaderValue.Comment">
      <summary vsli:raw="Gets the comment from the &lt;see cref=&quot;T:System.Net.Http.Headers.ProductInfoHeaderValue&quot; /&gt; object.">從 <see cref="T:System.Net.Http.Headers.ProductInfoHeaderValue" /> 物件取得註解。</summary>
      <returns vsli:raw="The comment value this &lt;see cref=&quot;T:System.Net.Http.Headers.ProductInfoHeaderValue&quot; /&gt;.">此 <see cref="T:System.Net.Http.Headers.ProductInfoHeaderValue" /> 的註解值。</returns>
    </member>
    <member name="P:System.Net.Http.Headers.ProductInfoHeaderValue.Product">
      <summary vsli:raw="Gets the product from the &lt;see cref=&quot;T:System.Net.Http.Headers.ProductInfoHeaderValue&quot; /&gt; object.">從 <see cref="T:System.Net.Http.Headers.ProductInfoHeaderValue" /> 物件取得產品。</summary>
      <returns vsli:raw="The product value from this &lt;see cref=&quot;T:System.Net.Http.Headers.ProductInfoHeaderValue&quot; /&gt;.">來自這個 <see cref="T:System.Net.Http.Headers.ProductInfoHeaderValue" /> 的產品值。</returns>
    </member>
    <member name="T:System.Net.Http.Headers.RangeConditionHeaderValue">
      <summary vsli:raw="Represents an If-Range header value which can either be a date/time or an entity-tag value.">表示 If-Range 標頭值，它可以是日期/時間或是實體標記值。</summary>
    </member>
    <member name="M:System.Net.Http.Headers.RangeConditionHeaderValue.#ctor(System.DateTimeOffset)">
      <summary vsli:raw="Initializes a new instance of the &lt;see cref=&quot;T:System.Net.Http.Headers.RangeConditionHeaderValue&quot; /&gt; class.">初始化 <see cref="T:System.Net.Http.Headers.RangeConditionHeaderValue" /> 類別的新執行個體。</summary>
      <param name="date" vsli:raw="A date value used to initialize the new instance.">用來初始化新執行個體的日期值。</param>
    </member>
    <member name="M:System.Net.Http.Headers.RangeConditionHeaderValue.#ctor(System.Net.Http.Headers.EntityTagHeaderValue)">
      <summary vsli:raw="Initializes a new instance of the &lt;see cref=&quot;T:System.Net.Http.Headers.RangeConditionHeaderValue&quot; /&gt; class.">初始化 <see cref="T:System.Net.Http.Headers.RangeConditionHeaderValue" /> 類別的新執行個體。</summary>
      <param name="entityTag" vsli:raw="An &lt;see cref=&quot;T:System.Net.Http.Headers.EntityTagHeaderValue&quot; /&gt; object used to initialize the new instance.">用來初始化新執行個體的 <see cref="T:System.Net.Http.Headers.EntityTagHeaderValue" /> 物件。</param>
    </member>
    <member name="M:System.Net.Http.Headers.RangeConditionHeaderValue.#ctor(System.String)">
      <summary vsli:raw="Initializes a new instance of the &lt;see cref=&quot;T:System.Net.Http.Headers.RangeConditionHeaderValue&quot; /&gt; class.">初始化 <see cref="T:System.Net.Http.Headers.RangeConditionHeaderValue" /> 類別的新執行個體。</summary>
      <param name="entityTag" vsli:raw="An entity tag represented as a string used to initialize the new instance.">實體標記，表示為用來初始化新執行個體的字串。</param>
    </member>
    <member name="M:System.Net.Http.Headers.RangeConditionHeaderValue.Equals(System.Object)">
      <summary vsli:raw="Determines whether the specified &lt;see cref=&quot;T:System.Object&quot; /&gt; is equal to the current &lt;see cref=&quot;T:System.Net.Http.Headers.RangeConditionHeaderValue&quot; /&gt; object.">判斷指定的 <see cref="T:System.Object" /> 是否等於目前的 <see cref="T:System.Net.Http.Headers.RangeConditionHeaderValue" /> 物件。</summary>
      <param name="obj" vsli:raw="The object to compare with the current object.">要與目前物件比較的物件。</param>
      <returns vsli:raw="&lt;see langword=&quot;true&quot; /&gt; if the specified &lt;see cref=&quot;T:System.Object&quot; /&gt; is equal to the current object; otherwise, &lt;see langword=&quot;false&quot; /&gt;.">如果指定的 <see cref="T:System.Object" /> 和目前的物件相等，則為 <see langword="true" />；否則為 <see langword="false" />。</returns>
    </member>
    <member name="M:System.Net.Http.Headers.RangeConditionHeaderValue.GetHashCode">
      <summary vsli:raw="Serves as a hash function for an &lt;see cref=&quot;T:System.Net.Http.Headers.RangeConditionHeaderValue&quot; /&gt; object.">做為 <see cref="T:System.Net.Http.Headers.RangeConditionHeaderValue" /> 物件的雜湊函式。</summary>
      <returns vsli:raw="A hash code for the current object.">目前物件的雜湊碼。</returns>
    </member>
    <member name="M:System.Net.Http.Headers.RangeConditionHeaderValue.Parse(System.String)">
      <summary vsli:raw="Converts a string to an &lt;see cref=&quot;T:System.Net.Http.Headers.RangeConditionHeaderValue&quot; /&gt; instance.">將字串轉換為 <see cref="T:System.Net.Http.Headers.RangeConditionHeaderValue" /> 執行個體。</summary>
      <param name="input" vsli:raw="A string that represents range condition header value information.">字串，代表範圍條件標頭值資訊。</param>
      <exception cref="T:System.ArgumentNullException" vsli:raw="&lt;paramref name=&quot;input&quot; /&gt; is a &lt;see langword=&quot;null&quot; /&gt; reference.">
        <paramref name="input" /> 是 <see langword="null" /> 參考。</exception>
      <exception cref="T:System.FormatException" vsli:raw="&lt;paramref name=&quot;input&quot; /&gt; is not valid range Condition header value information.">
        <paramref name="input" /> 不是有效的範圍條件標頭值資訊。</exception>
      <returns vsli:raw="A &lt;see cref=&quot;T:System.Net.Http.Headers.RangeConditionHeaderValue&quot; /&gt; instance.">
        <see cref="T:System.Net.Http.Headers.RangeConditionHeaderValue" /> 執行個體。</returns>
    </member>
    <member name="M:System.Net.Http.Headers.RangeConditionHeaderValue.System#ICloneable#Clone">
      <summary vsli:raw="Creates a new object that is a copy of the current &lt;see cref=&quot;T:System.Net.Http.Headers.RangeConditionHeaderValue&quot; /&gt; instance.">建立新物件，為目前 <see cref="T:System.Net.Http.Headers.RangeConditionHeaderValue" /> 執行個體的複本。</summary>
      <returns vsli:raw="A copy of the current instance.">目前執行個體的複本。</returns>
    </member>
    <member name="M:System.Net.Http.Headers.RangeConditionHeaderValue.ToString">
      <summary vsli:raw="Returns a string that represents the current &lt;see cref=&quot;T:System.Net.Http.Headers.RangeConditionHeaderValue&quot; /&gt; object.">傳回表示目前 <see cref="T:System.Net.Http.Headers.RangeConditionHeaderValue" /> 物件的字串。</summary>
      <returns vsli:raw="A string that represents the current object.">表示目前物件的字串。</returns>
    </member>
    <member name="M:System.Net.Http.Headers.RangeConditionHeaderValue.TryParse(System.String,System.Net.Http.Headers.RangeConditionHeaderValue@)">
      <summary vsli:raw="Determines whether a string is valid &lt;see cref=&quot;T:System.Net.Http.Headers.RangeConditionHeaderValue&quot; /&gt; information.">判斷字串是否為有效的 <see cref="T:System.Net.Http.Headers.RangeConditionHeaderValue" /> 資訊。</summary>
      <param name="input" vsli:raw="The string to validate.">要驗證的字串。</param>
      <param name="parsedValue" vsli:raw="The &lt;see cref=&quot;T:System.Net.Http.Headers.RangeConditionHeaderValue&quot; /&gt; version of the string.">字串的 <see cref="T:System.Net.Http.Headers.RangeConditionHeaderValue" /> 版本。</param>
      <returns vsli:raw="&lt;see langword=&quot;true&quot; /&gt; if &lt;paramref name=&quot;input&quot; /&gt; is valid &lt;see cref=&quot;T:System.Net.Http.Headers.RangeConditionHeaderValue&quot; /&gt; information; otherwise, &lt;see langword=&quot;false&quot; /&gt;.">如果 <paramref name="input" /> 是有效的 <see cref="T:System.Net.Http.Headers.RangeConditionHeaderValue" /> 資訊，則為 <see langword="true" />；否則為 <see langword="false" />。</returns>
    </member>
    <member name="P:System.Net.Http.Headers.RangeConditionHeaderValue.Date">
      <summary vsli:raw="Gets the date from the &lt;see cref=&quot;T:System.Net.Http.Headers.RangeConditionHeaderValue&quot; /&gt; object.">從 <see cref="T:System.Net.Http.Headers.RangeConditionHeaderValue" /> 物件取得日期。</summary>
      <returns vsli:raw="The date from the &lt;see cref=&quot;T:System.Net.Http.Headers.RangeConditionHeaderValue&quot; /&gt; object.">來自 <see cref="T:System.Net.Http.Headers.RangeConditionHeaderValue" /> 物件的日期。</returns>
    </member>
    <member name="P:System.Net.Http.Headers.RangeConditionHeaderValue.EntityTag">
      <summary vsli:raw="Gets the entity tag from the &lt;see cref=&quot;T:System.Net.Http.Headers.RangeConditionHeaderValue&quot; /&gt; object.">取得 <see cref="T:System.Net.Http.Headers.RangeConditionHeaderValue" /> 物件的實體標記。</summary>
      <returns vsli:raw="The entity tag from the &lt;see cref=&quot;T:System.Net.Http.Headers.RangeConditionHeaderValue&quot; /&gt; object.">
        <see cref="T:System.Net.Http.Headers.RangeConditionHeaderValue" /> 物件的實體標記。</returns>
    </member>
    <member name="T:System.Net.Http.Headers.RangeHeaderValue">
      <summary vsli:raw="Represents a Range header value.">表示 Range 標頭值。</summary>
    </member>
    <member name="M:System.Net.Http.Headers.RangeHeaderValue.#ctor">
      <summary vsli:raw="Initializes a new instance of the &lt;see cref=&quot;T:System.Net.Http.Headers.RangeHeaderValue&quot; /&gt; class.">初始化 <see cref="T:System.Net.Http.Headers.RangeHeaderValue" /> 類別的新執行個體。</summary>
    </member>
    <member name="M:System.Net.Http.Headers.RangeHeaderValue.#ctor(System.Nullable{System.Int64},System.Nullable{System.Int64})">
      <summary vsli:raw="Initializes a new instance of the &lt;see cref=&quot;T:System.Net.Http.Headers.RangeHeaderValue&quot; /&gt; class with a byte range.">使用位元組範圍初始化 <see cref="T:System.Net.Http.Headers.RangeHeaderValue" /> 類別的新執行個體。</summary>
      <param name="from" vsli:raw="The position at which to start sending data.">要開始傳送資料的位置。</param>
      <param name="to" vsli:raw="The position at which to stop sending data.">要停止傳送資料的位置。</param>
      <exception cref="T:System.ArgumentOutOfRangeException" vsli:raw="&lt;paramref name=&quot;from&quot; /&gt; is greater than &lt;paramref name=&quot;to&quot; /&gt;  &#xA;  &#xA; -or-  &#xA;  &#xA; &lt;paramref name=&quot;from&quot; /&gt; or &lt;paramref name=&quot;to&quot; /&gt; is less than 0.">
        <paramref name="from" /> 大於 <paramref name="to" />  
  
-或- 
 <paramref name="from" /> 或 <paramref name="to" /> 小於 0。</exception>
    </member>
    <member name="M:System.Net.Http.Headers.RangeHeaderValue.Equals(System.Object)">
      <summary vsli:raw="Determines whether the specified &lt;see cref=&quot;T:System.Object&quot; /&gt; is equal to the current &lt;see cref=&quot;T:System.Net.Http.Headers.RangeHeaderValue&quot; /&gt; object.">判斷指定的 <see cref="T:System.Object" /> 是否等於目前的 <see cref="T:System.Net.Http.Headers.RangeHeaderValue" /> 物件。</summary>
      <param name="obj" vsli:raw="The object to compare with the current object.">要與目前物件比較的物件。</param>
      <returns vsli:raw="&lt;see langword=&quot;true&quot; /&gt; if the specified &lt;see cref=&quot;T:System.Object&quot; /&gt; is equal to the current object; otherwise, &lt;see langword=&quot;false&quot; /&gt;.">如果指定的 <see cref="T:System.Object" /> 和目前的物件相等，則為 <see langword="true" />；否則為 <see langword="false" />。</returns>
    </member>
    <member name="M:System.Net.Http.Headers.RangeHeaderValue.GetHashCode">
      <summary vsli:raw="Serves as a hash function for an &lt;see cref=&quot;T:System.Net.Http.Headers.RangeHeaderValue&quot; /&gt; object.">做為 <see cref="T:System.Net.Http.Headers.RangeHeaderValue" /> 物件的雜湊函式。</summary>
      <returns vsli:raw="A hash code for the current object.">目前物件的雜湊碼。</returns>
    </member>
    <member name="M:System.Net.Http.Headers.RangeHeaderValue.Parse(System.String)">
      <summary vsli:raw="Converts a string to an &lt;see cref=&quot;T:System.Net.Http.Headers.RangeHeaderValue&quot; /&gt; instance.">將字串轉換為 <see cref="T:System.Net.Http.Headers.RangeHeaderValue" /> 執行個體。</summary>
      <param name="input" vsli:raw="A string that represents range header value information.">代表 range 標頭值資訊的字串。</param>
      <exception cref="T:System.ArgumentNullException" vsli:raw="&lt;paramref name=&quot;input&quot; /&gt; is a &lt;see langword=&quot;null&quot; /&gt; reference.">
        <paramref name="input" /> 是 <see langword="null" /> 參考。</exception>
      <exception cref="T:System.FormatException" vsli:raw="&lt;paramref name=&quot;input&quot; /&gt; is not valid range header value information.">
        <paramref name="input" /> 不是有效的 range 標頭值資訊。</exception>
      <returns vsli:raw="A &lt;see cref=&quot;T:System.Net.Http.Headers.RangeHeaderValue&quot; /&gt; instance.">
        <see cref="T:System.Net.Http.Headers.RangeHeaderValue" /> 執行個體。</returns>
    </member>
    <member name="M:System.Net.Http.Headers.RangeHeaderValue.System#ICloneable#Clone">
      <summary vsli:raw="Creates a new object that is a copy of the current &lt;see cref=&quot;T:System.Net.Http.Headers.RangeHeaderValue&quot; /&gt; instance.">建立新物件，為目前 <see cref="T:System.Net.Http.Headers.RangeHeaderValue" /> 執行個體的複本。</summary>
      <returns vsli:raw="A copy of the current instance.">目前執行個體的複本。</returns>
    </member>
    <member name="M:System.Net.Http.Headers.RangeHeaderValue.ToString">
      <summary vsli:raw="Returns a string that represents the current &lt;see cref=&quot;T:System.Net.Http.Headers.RangeHeaderValue&quot; /&gt; object.">傳回表示目前 <see cref="T:System.Net.Http.Headers.RangeHeaderValue" /> 物件的字串。</summary>
      <returns vsli:raw="A string that represents the current object.">表示目前物件的字串。</returns>
    </member>
    <member name="M:System.Net.Http.Headers.RangeHeaderValue.TryParse(System.String,System.Net.Http.Headers.RangeHeaderValue@)">
      <summary vsli:raw="Determines whether a string is valid &lt;see cref=&quot;T:System.Net.Http.Headers.RangeHeaderValue&quot; /&gt; information.">判斷字串是否為有效的 <see cref="T:System.Net.Http.Headers.RangeHeaderValue" /> 資訊。</summary>
      <param name="input" vsli:raw="he string to validate.">要驗證的字串。</param>
      <param name="parsedValue" vsli:raw="The &lt;see cref=&quot;T:System.Net.Http.Headers.RangeHeaderValue&quot; /&gt; version of the string.">字串的 <see cref="T:System.Net.Http.Headers.RangeHeaderValue" /> 版本。</param>
      <returns vsli:raw="&lt;see langword=&quot;true&quot; /&gt; if &lt;paramref name=&quot;input&quot; /&gt; is valid &lt;see cref=&quot;T:System.Net.Http.Headers.AuthenticationHeaderValue&quot; /&gt; information; otherwise, &lt;see langword=&quot;false&quot; /&gt;.">如果 <paramref name="input" /> 是有效的 <see cref="T:System.Net.Http.Headers.AuthenticationHeaderValue" /> 資訊，則為 <see langword="true" />；否則為 <see langword="false" />。</returns>
    </member>
    <member name="P:System.Net.Http.Headers.RangeHeaderValue.Ranges">
      <summary vsli:raw="Gets the ranges specified from the &lt;see cref=&quot;T:System.Net.Http.Headers.RangeHeaderValue&quot; /&gt; object.">從 <see cref="T:System.Net.Http.Headers.RangeHeaderValue" /> 物件取得指定的範圍。</summary>
      <returns vsli:raw="The ranges from the &lt;see cref=&quot;T:System.Net.Http.Headers.RangeHeaderValue&quot; /&gt; object.">
        <see cref="T:System.Net.Http.Headers.RangeHeaderValue" /> 物件中的範圍。</returns>
    </member>
    <member name="P:System.Net.Http.Headers.RangeHeaderValue.Unit">
      <summary vsli:raw="Gets the unit from the &lt;see cref=&quot;T:System.Net.Http.Headers.RangeHeaderValue&quot; /&gt; object.">從 <see cref="T:System.Net.Http.Headers.RangeHeaderValue" /> 物件取得單元。</summary>
      <returns vsli:raw="The unit from the &lt;see cref=&quot;T:System.Net.Http.Headers.RangeHeaderValue&quot; /&gt; object.">
        <see cref="T:System.Net.Http.Headers.RangeHeaderValue" /> 物件的單元。</returns>
    </member>
    <member name="T:System.Net.Http.Headers.RangeItemHeaderValue">
      <summary vsli:raw="Represents a byte range in a Range header value.">表示 Range 標頭值中的位元組範圍。</summary>
    </member>
    <member name="M:System.Net.Http.Headers.RangeItemHeaderValue.#ctor(System.Nullable{System.Int64},System.Nullable{System.Int64})">
      <summary vsli:raw="Initializes a new instance of the &lt;see cref=&quot;T:System.Net.Http.Headers.RangeItemHeaderValue&quot; /&gt; class.">初始化 <see cref="T:System.Net.Http.Headers.RangeItemHeaderValue" /> 類別的新執行個體。</summary>
      <param name="from" vsli:raw="The position at which to start sending data.">要開始傳送資料的位置。</param>
      <param name="to" vsli:raw="The position at which to stop sending data.">要停止傳送資料的位置。</param>
      <exception cref="T:System.ArgumentOutOfRangeException" vsli:raw="&lt;paramref name=&quot;from&quot; /&gt; is greater than &lt;paramref name=&quot;to&quot; /&gt;  &#xA;  &#xA; -or-  &#xA;  &#xA; &lt;paramref name=&quot;from&quot; /&gt; or &lt;paramref name=&quot;to&quot; /&gt; is less than 0.">
        <paramref name="from" /> 大於 <paramref name="to" />  
  
-或- 
 <paramref name="from" /> 或 <paramref name="to" /> 小於 0。</exception>
    </member>
    <member name="M:System.Net.Http.Headers.RangeItemHeaderValue.Equals(System.Object)">
      <summary vsli:raw="Determines whether the specified &lt;see cref=&quot;T:System.Object&quot; /&gt; is equal to the current &lt;see cref=&quot;T:System.Net.Http.Headers.RangeItemHeaderValue&quot; /&gt; object.">判斷指定的 <see cref="T:System.Object" /> 是否等於目前的 <see cref="T:System.Net.Http.Headers.RangeItemHeaderValue" /> 物件。</summary>
      <param name="obj" vsli:raw="The object to compare with the current object.">要與目前物件比較的物件。</param>
      <returns vsli:raw="&lt;see langword=&quot;true&quot; /&gt; if the specified &lt;see cref=&quot;T:System.Object&quot; /&gt; is equal to the current object; otherwise, &lt;see langword=&quot;false&quot; /&gt;.">如果指定的 <see cref="T:System.Object" /> 和目前的物件相等，則為 <see langword="true" />；否則為 <see langword="false" />。</returns>
    </member>
    <member name="M:System.Net.Http.Headers.RangeItemHeaderValue.GetHashCode">
      <summary vsli:raw="Serves as a hash function for an &lt;see cref=&quot;T:System.Net.Http.Headers.RangeItemHeaderValue&quot; /&gt; object.">做為 <see cref="T:System.Net.Http.Headers.RangeItemHeaderValue" /> 物件的雜湊函式。</summary>
      <returns vsli:raw="A hash code for the current object.">目前物件的雜湊碼。</returns>
    </member>
    <member name="M:System.Net.Http.Headers.RangeItemHeaderValue.System#ICloneable#Clone">
      <summary vsli:raw="Creates a new object that is a copy of the current &lt;see cref=&quot;T:System.Net.Http.Headers.RangeItemHeaderValue&quot; /&gt; instance.">建立新物件，為目前 <see cref="T:System.Net.Http.Headers.RangeItemHeaderValue" /> 執行個體的複本。</summary>
      <returns vsli:raw="A copy of the current instance.">目前執行個體的複本。</returns>
    </member>
    <member name="M:System.Net.Http.Headers.RangeItemHeaderValue.ToString">
      <summary vsli:raw="Returns a string that represents the current &lt;see cref=&quot;T:System.Net.Http.Headers.RangeItemHeaderValue&quot; /&gt; object.">傳回表示目前 <see cref="T:System.Net.Http.Headers.RangeItemHeaderValue" /> 物件的字串。</summary>
      <returns vsli:raw="A string that represents the current object.">表示目前物件的字串。</returns>
    </member>
    <member name="P:System.Net.Http.Headers.RangeItemHeaderValue.From">
      <summary vsli:raw="Gets the position at which to start sending data.">取得要開始傳送資料的位置。</summary>
      <returns vsli:raw="The position at which to start sending data.">要開始傳送資料的位置。</returns>
    </member>
    <member name="P:System.Net.Http.Headers.RangeItemHeaderValue.To">
      <summary vsli:raw="Gets the position at which to stop sending data.">取得要停止傳送資料的位置。</summary>
      <returns vsli:raw="The position at which to stop sending data.">要停止傳送資料的位置。</returns>
    </member>
    <member name="T:System.Net.Http.Headers.RetryConditionHeaderValue">
      <summary vsli:raw="Represents a Retry-After header value which can either be a date/time or a timespan value.">表示 Retry-After 標頭值，它可以是日期/時間或是 timespan 值。</summary>
    </member>
    <member name="M:System.Net.Http.Headers.RetryConditionHeaderValue.#ctor(System.DateTimeOffset)">
      <summary vsli:raw="Initializes a new instance of the &lt;see cref=&quot;T:System.Net.Http.Headers.RetryConditionHeaderValue&quot; /&gt; class.">初始化 <see cref="T:System.Net.Http.Headers.RetryConditionHeaderValue" /> 類別的新執行個體。</summary>
      <param name="date" vsli:raw="The date and time offset used to initialize the new instance.">用來初始化新執行個體的日期及時間位移。</param>
    </member>
    <member name="M:System.Net.Http.Headers.RetryConditionHeaderValue.#ctor(System.TimeSpan)">
      <summary vsli:raw="Initializes a new instance of the &lt;see cref=&quot;T:System.Net.Http.Headers.RetryConditionHeaderValue&quot; /&gt; class.">初始化 <see cref="T:System.Net.Http.Headers.RetryConditionHeaderValue" /> 類別的新執行個體。</summary>
      <param name="delta" vsli:raw="The delta, in seconds, used to initialize the new instance.">用來初始化新執行個體的差異，以秒為單位。</param>
    </member>
    <member name="M:System.Net.Http.Headers.RetryConditionHeaderValue.Equals(System.Object)">
      <summary vsli:raw="Determines whether the specified &lt;see cref=&quot;T:System.Object&quot; /&gt; is equal to the current &lt;see cref=&quot;T:System.Net.Http.Headers.RetryConditionHeaderValue&quot; /&gt; object.">判斷指定的 <see cref="T:System.Object" /> 是否等於目前的 <see cref="T:System.Net.Http.Headers.RetryConditionHeaderValue" /> 物件。</summary>
      <param name="obj" vsli:raw="The object to compare with the current object.">要與目前物件比較的物件。</param>
      <returns vsli:raw="&lt;see langword=&quot;true&quot; /&gt; if the specified &lt;see cref=&quot;T:System.Object&quot; /&gt; is equal to the current object; otherwise, &lt;see langword=&quot;false&quot; /&gt;.">如果指定的 <see cref="T:System.Object" /> 和目前的物件相等，則為 <see langword="true" />；否則為 <see langword="false" />。</returns>
    </member>
    <member name="M:System.Net.Http.Headers.RetryConditionHeaderValue.GetHashCode">
      <summary vsli:raw="Serves as a hash function for an &lt;see cref=&quot;T:System.Net.Http.Headers.RetryConditionHeaderValue&quot; /&gt; object.">做為 <see cref="T:System.Net.Http.Headers.RetryConditionHeaderValue" /> 物件的雜湊函式。</summary>
      <returns vsli:raw="A hash code for the current object.">目前物件的雜湊碼。</returns>
    </member>
    <member name="M:System.Net.Http.Headers.RetryConditionHeaderValue.Parse(System.String)">
      <summary vsli:raw="Converts a string to an &lt;see cref=&quot;T:System.Net.Http.Headers.RetryConditionHeaderValue&quot; /&gt; instance.">將字串轉換為 <see cref="T:System.Net.Http.Headers.RetryConditionHeaderValue" /> 執行個體。</summary>
      <param name="input" vsli:raw="A string that represents retry condition header value information.">字串，代表重試狀態標頭值資訊。</param>
      <exception cref="T:System.ArgumentNullException" vsli:raw="&lt;paramref name=&quot;input&quot; /&gt; is a &lt;see langword=&quot;null&quot; /&gt; reference.">
        <paramref name="input" /> 是 <see langword="null" /> 參考。</exception>
      <exception cref="T:System.FormatException" vsli:raw="&lt;paramref name=&quot;input&quot; /&gt; is not valid retry condition header value information.">
        <paramref name="input" /> 不是有效的重試狀態標頭值資訊。</exception>
      <returns vsli:raw="A &lt;see cref=&quot;T:System.Net.Http.Headers.RetryConditionHeaderValue&quot; /&gt; instance.">
        <see cref="T:System.Net.Http.Headers.RetryConditionHeaderValue" /> 執行個體。</returns>
    </member>
    <member name="M:System.Net.Http.Headers.RetryConditionHeaderValue.System#ICloneable#Clone">
      <summary vsli:raw="Creates a new object that is a copy of the current &lt;see cref=&quot;T:System.Net.Http.Headers.RetryConditionHeaderValue&quot; /&gt; instance.">建立新物件，為目前 <see cref="T:System.Net.Http.Headers.RetryConditionHeaderValue" /> 執行個體的複本。</summary>
      <returns vsli:raw="A copy of the current instance.">目前執行個體的複本。</returns>
    </member>
    <member name="M:System.Net.Http.Headers.RetryConditionHeaderValue.ToString">
      <summary vsli:raw="Returns a string that represents the current &lt;see cref=&quot;T:System.Net.Http.Headers.RetryConditionHeaderValue&quot; /&gt; object.">傳回表示目前 <see cref="T:System.Net.Http.Headers.RetryConditionHeaderValue" /> 物件的字串。</summary>
      <returns vsli:raw="A string that represents the current object.">表示目前物件的字串。</returns>
    </member>
    <member name="M:System.Net.Http.Headers.RetryConditionHeaderValue.TryParse(System.String,System.Net.Http.Headers.RetryConditionHeaderValue@)">
      <summary vsli:raw="Determines whether a string is valid &lt;see cref=&quot;T:System.Net.Http.Headers.RetryConditionHeaderValue&quot; /&gt; information.">判斷字串是否為有效的 <see cref="T:System.Net.Http.Headers.RetryConditionHeaderValue" /> 資訊。</summary>
      <param name="input" vsli:raw="The string to validate.">要驗證的字串。</param>
      <param name="parsedValue" vsli:raw="The &lt;see cref=&quot;T:System.Net.Http.Headers.RetryConditionHeaderValue&quot; /&gt; version of the string.">字串的 <see cref="T:System.Net.Http.Headers.RetryConditionHeaderValue" /> 版本。</param>
      <returns vsli:raw="&lt;see langword=&quot;true&quot; /&gt; if &lt;paramref name=&quot;input&quot; /&gt; is valid &lt;see cref=&quot;T:System.Net.Http.Headers.RetryConditionHeaderValue&quot; /&gt; information; otherwise, &lt;see langword=&quot;false&quot; /&gt;.">如果 <paramref name="input" /> 是有效的 <see cref="T:System.Net.Http.Headers.RetryConditionHeaderValue" /> 資訊，則為 <see langword="true" />；否則為 <see langword="false" />。</returns>
    </member>
    <member name="P:System.Net.Http.Headers.RetryConditionHeaderValue.Date">
      <summary vsli:raw="Gets the date and time offset from the &lt;see cref=&quot;T:System.Net.Http.Headers.RetryConditionHeaderValue&quot; /&gt; object.">取得 <see cref="T:System.Net.Http.Headers.RetryConditionHeaderValue" /> 物件的日期和時間位移。</summary>
      <returns vsli:raw="The date and time offset from the &lt;see cref=&quot;T:System.Net.Http.Headers.RetryConditionHeaderValue&quot; /&gt; object.">
        <see cref="T:System.Net.Http.Headers.RetryConditionHeaderValue" /> 物件的日期和時間位移。</returns>
    </member>
    <member name="P:System.Net.Http.Headers.RetryConditionHeaderValue.Delta">
      <summary vsli:raw="Gets the delta in seconds from the &lt;see cref=&quot;T:System.Net.Http.Headers.RetryConditionHeaderValue&quot; /&gt; object.">取得來自 <see cref="T:System.Net.Http.Headers.RetryConditionHeaderValue" /> 物件的差異 (以秒為單位)。</summary>
      <returns vsli:raw="The delta in seconds from the &lt;see cref=&quot;T:System.Net.Http.Headers.RetryConditionHeaderValue&quot; /&gt; object.">來自 <see cref="T:System.Net.Http.Headers.RetryConditionHeaderValue" /> 物件的差異 (以秒為單位)。</returns>
    </member>
    <member name="T:System.Net.Http.Headers.StringWithQualityHeaderValue">
      <summary vsli:raw="Represents a string header value with an optional quality.">代表具有選擇性品質的字串標頭值。</summary>
    </member>
    <member name="M:System.Net.Http.Headers.StringWithQualityHeaderValue.#ctor(System.String)">
      <summary vsli:raw="Initializes a new instance of the &lt;see cref=&quot;T:System.Net.Http.Headers.StringWithQualityHeaderValue&quot; /&gt; class.">初始化 <see cref="T:System.Net.Http.Headers.StringWithQualityHeaderValue" /> 類別的新執行個體。</summary>
      <param name="value" vsli:raw="The string used to initialize the new instance.">用來初始化新執行個體的字串。</param>
    </member>
    <member name="M:System.Net.Http.Headers.StringWithQualityHeaderValue.#ctor(System.String,System.Double)">
      <summary vsli:raw="Initializes a new instance of the &lt;see cref=&quot;T:System.Net.Http.Headers.StringWithQualityHeaderValue&quot; /&gt; class.">初始化 <see cref="T:System.Net.Http.Headers.StringWithQualityHeaderValue" /> 類別的新執行個體。</summary>
      <param name="value" vsli:raw="A string used to initialize the new instance.">用來初始化新執行個體的字串。</param>
      <param name="quality" vsli:raw="A quality factor used to initialize the new instance.">用來初始化新執行個體的品質因素。</param>
    </member>
    <member name="M:System.Net.Http.Headers.StringWithQualityHeaderValue.Equals(System.Object)">
      <summary vsli:raw="Determines whether the specified Object is equal to the current &lt;see cref=&quot;T:System.Net.Http.Headers.StringWithQualityHeaderValue&quot; /&gt; object.">判斷指定的物件是否等於目前的 <see cref="T:System.Net.Http.Headers.StringWithQualityHeaderValue" /> 物件。</summary>
      <param name="obj" vsli:raw="The object to compare with the current object.">要與目前物件比較的物件。</param>
      <returns vsli:raw="&lt;see langword=&quot;true&quot; /&gt; if the specified &lt;see cref=&quot;T:System.Object&quot; /&gt; is equal to the current object; otherwise, &lt;see langword=&quot;false&quot; /&gt;.">如果指定的 <see cref="T:System.Object" /> 和目前的物件相等，則為 <see langword="true" />；否則為 <see langword="false" />。</returns>
    </member>
    <member name="M:System.Net.Http.Headers.StringWithQualityHeaderValue.GetHashCode">
      <summary vsli:raw="Serves as a hash function for an &lt;see cref=&quot;T:System.Net.Http.Headers.StringWithQualityHeaderValue&quot; /&gt; object.">做為 <see cref="T:System.Net.Http.Headers.StringWithQualityHeaderValue" /> 物件的雜湊函式。</summary>
      <returns vsli:raw="A hash code for the current object.">目前物件的雜湊碼。</returns>
    </member>
    <member name="M:System.Net.Http.Headers.StringWithQualityHeaderValue.Parse(System.String)">
      <summary vsli:raw="Converts a string to an &lt;see cref=&quot;T:System.Net.Http.Headers.StringWithQualityHeaderValue&quot; /&gt; instance.">將字串轉換為 <see cref="T:System.Net.Http.Headers.StringWithQualityHeaderValue" /> 執行個體。</summary>
      <param name="input" vsli:raw="A string that represents quality header value information.">代表 quality 標頭值資訊的字串。</param>
      <exception cref="T:System.ArgumentNullException" vsli:raw="&lt;paramref name=&quot;input&quot; /&gt; is a &lt;see langword=&quot;null&quot; /&gt; reference.">
        <paramref name="input" /> 是 <see langword="null" /> 參考。</exception>
      <exception cref="T:System.FormatException" vsli:raw="&lt;paramref name=&quot;input&quot; /&gt; is not valid string with quality header value information.">
        <paramref name="input" /> 不是含有 quality 標頭值資訊的有效字串。</exception>
      <returns vsli:raw="A &lt;see cref=&quot;T:System.Net.Http.Headers.StringWithQualityHeaderValue&quot; /&gt; instance.">
        <see cref="T:System.Net.Http.Headers.StringWithQualityHeaderValue" /> 執行個體。</returns>
    </member>
    <member name="M:System.Net.Http.Headers.StringWithQualityHeaderValue.System#ICloneable#Clone">
      <summary vsli:raw="Creates a new object that is a copy of the current &lt;see cref=&quot;T:System.Net.Http.Headers.StringWithQualityHeaderValue&quot; /&gt; instance.">建立新物件，為目前 <see cref="T:System.Net.Http.Headers.StringWithQualityHeaderValue" /> 執行個體的複本。</summary>
      <returns vsli:raw="A copy of the current instance.">目前執行個體的複本。</returns>
    </member>
    <member name="M:System.Net.Http.Headers.StringWithQualityHeaderValue.ToString">
      <summary vsli:raw="Returns a string that represents the current &lt;see cref=&quot;T:System.Net.Http.Headers.StringWithQualityHeaderValue&quot; /&gt; object.">傳回表示目前 <see cref="T:System.Net.Http.Headers.StringWithQualityHeaderValue" /> 物件的字串。</summary>
      <returns vsli:raw="A string that represents the current object.">表示目前物件的字串。</returns>
    </member>
    <member name="M:System.Net.Http.Headers.StringWithQualityHeaderValue.TryParse(System.String,System.Net.Http.Headers.StringWithQualityHeaderValue@)">
      <summary vsli:raw="Determines whether a string is valid &lt;see cref=&quot;T:System.Net.Http.Headers.StringWithQualityHeaderValue&quot; /&gt; information.">判斷字串是否為有效的 <see cref="T:System.Net.Http.Headers.StringWithQualityHeaderValue" /> 資訊。</summary>
      <param name="input" vsli:raw="The string to validate.">要驗證的字串。</param>
      <param name="parsedValue" vsli:raw="The &lt;see cref=&quot;T:System.Net.Http.Headers.StringWithQualityHeaderValue&quot; /&gt; version of the string.">字串的 <see cref="T:System.Net.Http.Headers.StringWithQualityHeaderValue" /> 版本。</param>
      <returns vsli:raw="&lt;see langword=&quot;true&quot; /&gt; if &lt;paramref name=&quot;input&quot; /&gt; is valid &lt;see cref=&quot;T:System.Net.Http.Headers.StringWithQualityHeaderValue&quot; /&gt; information; otherwise, &lt;see langword=&quot;false&quot; /&gt;.">如果 <paramref name="input" /> 是有效的 <see cref="T:System.Net.Http.Headers.StringWithQualityHeaderValue" /> 資訊，則為 <see langword="true" />；否則為 <see langword="false" />。</returns>
    </member>
    <member name="P:System.Net.Http.Headers.StringWithQualityHeaderValue.Quality">
      <summary vsli:raw="Gets the quality factor from the &lt;see cref=&quot;T:System.Net.Http.Headers.StringWithQualityHeaderValue&quot; /&gt; object.">從 <see cref="T:System.Net.Http.Headers.StringWithQualityHeaderValue" /> 物件取得品質係數。</summary>
      <returns vsli:raw="The quality factor from the &lt;see cref=&quot;T:System.Net.Http.Headers.StringWithQualityHeaderValue&quot; /&gt; object.">
        <see cref="T:System.Net.Http.Headers.StringWithQualityHeaderValue" /> 物件中的品質係數。</returns>
    </member>
    <member name="P:System.Net.Http.Headers.StringWithQualityHeaderValue.Value">
      <summary vsli:raw="Gets the string value from the &lt;see cref=&quot;T:System.Net.Http.Headers.StringWithQualityHeaderValue&quot; /&gt; object.">從 <see cref="T:System.Net.Http.Headers.StringWithQualityHeaderValue" /> 物件取得字串值。</summary>
      <returns vsli:raw="The string value from the &lt;see cref=&quot;T:System.Net.Http.Headers.StringWithQualityHeaderValue&quot; /&gt; object.">
        <see cref="T:System.Net.Http.Headers.StringWithQualityHeaderValue" /> 物件中的字串值。</returns>
    </member>
    <member name="T:System.Net.Http.Headers.TransferCodingHeaderValue">
      <summary vsli:raw="Represents an accept-encoding header value.">表示 accept-encoding 標頭值。</summary>
    </member>
    <member name="M:System.Net.Http.Headers.TransferCodingHeaderValue.#ctor(System.Net.Http.Headers.TransferCodingHeaderValue)">
      <summary vsli:raw="Initializes a new instance of the &lt;see cref=&quot;T:System.Net.Http.Headers.TransferCodingHeaderValue&quot; /&gt; class.">初始化 <see cref="T:System.Net.Http.Headers.TransferCodingHeaderValue" /> 類別的新執行個體。</summary>
      <param name="source" vsli:raw="A &lt;see cref=&quot;T:System.Net.Http.Headers.TransferCodingHeaderValue&quot; /&gt; object used to initialize the new instance.">用來初始化新執行個體的 <see cref="T:System.Net.Http.Headers.TransferCodingHeaderValue" /> 物件。</param>
    </member>
    <member name="M:System.Net.Http.Headers.TransferCodingHeaderValue.#ctor(System.String)">
      <summary vsli:raw="Initializes a new instance of the &lt;see cref=&quot;T:System.Net.Http.Headers.TransferCodingHeaderValue&quot; /&gt; class.">初始化 <see cref="T:System.Net.Http.Headers.TransferCodingHeaderValue" /> 類別的新執行個體。</summary>
      <param name="value" vsli:raw="A string used to initialize the new instance.">用來初始化新執行個體的字串。</param>
    </member>
    <member name="M:System.Net.Http.Headers.TransferCodingHeaderValue.Equals(System.Object)">
      <summary vsli:raw="Determines whether the specified Object is equal to the current &lt;see cref=&quot;T:System.Net.Http.Headers.TransferCodingHeaderValue&quot; /&gt; object.">判斷指定的物件是否等於目前的 <see cref="T:System.Net.Http.Headers.TransferCodingHeaderValue" /> 物件。</summary>
      <param name="obj" vsli:raw="The object to compare with the current object.">要與目前物件比較的物件。</param>
      <returns vsli:raw="&lt;see langword=&quot;true&quot; /&gt; if the specified &lt;see cref=&quot;T:System.Object&quot; /&gt; is equal to the current object; otherwise, &lt;see langword=&quot;false&quot; /&gt;.">如果指定的 <see cref="T:System.Object" /> 和目前的物件相等，則為 <see langword="true" />；否則為 <see langword="false" />。</returns>
    </member>
    <member name="M:System.Net.Http.Headers.TransferCodingHeaderValue.GetHashCode">
      <summary vsli:raw="Serves as a hash function for an &lt;see cref=&quot;T:System.Net.Http.Headers.TransferCodingHeaderValue&quot; /&gt; object.">做為 <see cref="T:System.Net.Http.Headers.TransferCodingHeaderValue" /> 物件的雜湊函式。</summary>
      <returns vsli:raw="A hash code for the current object.">目前物件的雜湊碼。</returns>
    </member>
    <member name="M:System.Net.Http.Headers.TransferCodingHeaderValue.Parse(System.String)">
      <summary vsli:raw="Converts a string to an &lt;see cref=&quot;T:System.Net.Http.Headers.TransferCodingHeaderValue&quot; /&gt; instance.">將字串轉換為 <see cref="T:System.Net.Http.Headers.TransferCodingHeaderValue" /> 執行個體。</summary>
      <param name="input" vsli:raw="A string that represents transfer-coding header value information.">代表 transfer-coding 標頭值資訊的字串。</param>
      <exception cref="T:System.ArgumentNullException" vsli:raw="&lt;paramref name=&quot;input&quot; /&gt; is a &lt;see langword=&quot;null&quot; /&gt; reference.">
        <paramref name="input" /> 是 <see langword="null" /> 參考。</exception>
      <exception cref="T:System.FormatException" vsli:raw="&lt;paramref name=&quot;input&quot; /&gt; is not valid transfer-coding header value information.">
        <paramref name="input" />不是有效的 transfer-coding 標頭值資訊。</exception>
      <returns vsli:raw="A &lt;see cref=&quot;T:System.Net.Http.Headers.TransferCodingHeaderValue&quot; /&gt; instance.">
        <see cref="T:System.Net.Http.Headers.TransferCodingHeaderValue" /> 執行個體。</returns>
    </member>
    <member name="M:System.Net.Http.Headers.TransferCodingHeaderValue.System#ICloneable#Clone">
      <summary vsli:raw="Creates a new object that is a copy of the current &lt;see cref=&quot;T:System.Net.Http.Headers.TransferCodingHeaderValue&quot; /&gt; instance.">建立新物件，為目前 <see cref="T:System.Net.Http.Headers.TransferCodingHeaderValue" /> 執行個體的複本。</summary>
      <returns vsli:raw="A copy of the current instance.">目前執行個體的複本。</returns>
    </member>
    <member name="M:System.Net.Http.Headers.TransferCodingHeaderValue.ToString">
      <summary vsli:raw="Returns a string that represents the current &lt;see cref=&quot;T:System.Net.Http.Headers.TransferCodingHeaderValue&quot; /&gt; object.">傳回表示目前 <see cref="T:System.Net.Http.Headers.TransferCodingHeaderValue" /> 物件的字串。</summary>
      <returns vsli:raw="A string that represents the current object.">表示目前物件的字串。</returns>
    </member>
    <member name="M:System.Net.Http.Headers.TransferCodingHeaderValue.TryParse(System.String,System.Net.Http.Headers.TransferCodingHeaderValue@)">
      <summary vsli:raw="Determines whether a string is valid &lt;see cref=&quot;T:System.Net.Http.Headers.TransferCodingHeaderValue&quot; /&gt; information.">判斷字串是否為有效的 <see cref="T:System.Net.Http.Headers.TransferCodingHeaderValue" /> 資訊。</summary>
      <param name="input" vsli:raw="The string to validate.">要驗證的字串。</param>
      <param name="parsedValue" vsli:raw="The &lt;see cref=&quot;T:System.Net.Http.Headers.TransferCodingHeaderValue&quot; /&gt; version of the string.">字串的 <see cref="T:System.Net.Http.Headers.TransferCodingHeaderValue" /> 版本。</param>
      <returns vsli:raw="&lt;see langword=&quot;true&quot; /&gt; if &lt;paramref name=&quot;input&quot; /&gt; is valid &lt;see cref=&quot;T:System.Net.Http.Headers.TransferCodingHeaderValue&quot; /&gt; information; otherwise, &lt;see langword=&quot;false&quot; /&gt;.">如果 <paramref name="input" /> 是有效的 <see cref="T:System.Net.Http.Headers.TransferCodingHeaderValue" /> 資訊，則為 <see langword="true" />；否則為 <see langword="false" />。</returns>
    </member>
    <member name="P:System.Net.Http.Headers.TransferCodingHeaderValue.Parameters">
      <summary vsli:raw="Gets the transfer-coding parameters.">取得 transfer-coding 參數。</summary>
      <returns vsli:raw="The transfer-coding parameters.">transfer-coding 參數。</returns>
    </member>
    <member name="P:System.Net.Http.Headers.TransferCodingHeaderValue.Value">
      <summary vsli:raw="Gets the transfer-coding value.">取得傳輸編碼的值。</summary>
      <returns vsli:raw="The transfer-coding value.">傳輸編碼的值。</returns>
    </member>
    <member name="T:System.Net.Http.Headers.TransferCodingWithQualityHeaderValue">
      <summary vsli:raw="Represents an Accept-Encoding header value with optional quality factor.">表示含選擇性品質係數的 Accept-Encoding 標頭值。</summary>
    </member>
    <member name="M:System.Net.Http.Headers.TransferCodingWithQualityHeaderValue.#ctor(System.String)">
      <summary vsli:raw="Initializes a new instance of the &lt;see cref=&quot;T:System.Net.Http.Headers.TransferCodingWithQualityHeaderValue&quot; /&gt; class.">初始化 <see cref="T:System.Net.Http.Headers.TransferCodingWithQualityHeaderValue" /> 類別的新執行個體。</summary>
      <param name="value" vsli:raw="A string used to initialize the new instance.">用來初始化新執行個體的字串。</param>
    </member>
    <member name="M:System.Net.Http.Headers.TransferCodingWithQualityHeaderValue.#ctor(System.String,System.Double)">
      <summary vsli:raw="Initializes a new instance of the &lt;see cref=&quot;T:System.Net.Http.Headers.TransferCodingWithQualityHeaderValue&quot; /&gt; class.">初始化 <see cref="T:System.Net.Http.Headers.TransferCodingWithQualityHeaderValue" /> 類別的新執行個體。</summary>
      <param name="value" vsli:raw="A string used to initialize the new instance.">用來初始化新執行個體的字串。</param>
      <param name="quality" vsli:raw="A value for the quality factor.">品質係數的值。</param>
    </member>
    <member name="M:System.Net.Http.Headers.TransferCodingWithQualityHeaderValue.Parse(System.String)">
      <summary vsli:raw="Converts a string to an &lt;see cref=&quot;T:System.Net.Http.Headers.TransferCodingWithQualityHeaderValue&quot; /&gt; instance.">將字串轉換為 <see cref="T:System.Net.Http.Headers.TransferCodingWithQualityHeaderValue" /> 執行個體。</summary>
      <param name="input" vsli:raw="A string that represents transfer-coding value information.">代表傳輸編碼值資訊的字串。</param>
      <exception cref="T:System.ArgumentNullException" vsli:raw="&lt;paramref name=&quot;input&quot; /&gt; is a &lt;see langword=&quot;null&quot; /&gt; reference.">
        <paramref name="input" /> 是 <see langword="null" /> 參考。</exception>
      <exception cref="T:System.FormatException" vsli:raw="&lt;paramref name=&quot;input&quot; /&gt; is not valid transfer-coding with quality header value information.">
        <paramref name="input" /> 不是包含品質標頭值資訊的有效傳輸編碼。</exception>
      <returns vsli:raw="A &lt;see cref=&quot;T:System.Net.Http.Headers.TransferCodingWithQualityHeaderValue&quot; /&gt; instance.">
        <see cref="T:System.Net.Http.Headers.TransferCodingWithQualityHeaderValue" /> 執行個體。</returns>
    </member>
    <member name="M:System.Net.Http.Headers.TransferCodingWithQualityHeaderValue.System#ICloneable#Clone">
      <summary vsli:raw="Creates a new object that is a copy of the current &lt;see cref=&quot;T:System.Net.Http.Headers.TransferCodingWithQualityHeaderValue&quot; /&gt; instance.">建立新物件，為目前 <see cref="T:System.Net.Http.Headers.TransferCodingWithQualityHeaderValue" /> 執行個體的複本。</summary>
      <returns vsli:raw="A copy of the current instance.">目前執行個體的複本。</returns>
    </member>
    <member name="M:System.Net.Http.Headers.TransferCodingWithQualityHeaderValue.TryParse(System.String,System.Net.Http.Headers.TransferCodingWithQualityHeaderValue@)">
      <summary vsli:raw="Determines whether a string is valid &lt;see cref=&quot;T:System.Net.Http.Headers.TransferCodingWithQualityHeaderValue&quot; /&gt; information.">判斷字串是否為有效的 <see cref="T:System.Net.Http.Headers.TransferCodingWithQualityHeaderValue" /> 資訊。</summary>
      <param name="input" vsli:raw="The string to validate.">要驗證的字串。</param>
      <param name="parsedValue" vsli:raw="The &lt;see cref=&quot;T:System.Net.Http.Headers.TransferCodingWithQualityHeaderValue&quot; /&gt; version of the string.">字串的 <see cref="T:System.Net.Http.Headers.TransferCodingWithQualityHeaderValue" /> 版本。</param>
      <returns vsli:raw="&lt;see langword=&quot;true&quot; /&gt; if &lt;paramref name=&quot;input&quot; /&gt; is valid &lt;see cref=&quot;T:System.Net.Http.Headers.TransferCodingWithQualityHeaderValue&quot; /&gt; information; otherwise, &lt;see langword=&quot;false&quot; /&gt;.">如果 <paramref name="input" /> 是有效的 <see cref="T:System.Net.Http.Headers.TransferCodingWithQualityHeaderValue" /> 資訊，則為 <see langword="true" />；否則為 <see langword="false" />。</returns>
    </member>
    <member name="P:System.Net.Http.Headers.TransferCodingWithQualityHeaderValue.Quality">
      <summary vsli:raw="Gets the quality factor from the &lt;see cref=&quot;T:System.Net.Http.Headers.TransferCodingWithQualityHeaderValue&quot; /&gt;.">從 <see cref="T:System.Net.Http.Headers.TransferCodingWithQualityHeaderValue" /> 取得品質係數。</summary>
      <returns vsli:raw="The quality factor from the &lt;see cref=&quot;T:System.Net.Http.Headers.TransferCodingWithQualityHeaderValue&quot; /&gt;.">
        <see cref="T:System.Net.Http.Headers.TransferCodingWithQualityHeaderValue" /> 中的品質係數。</returns>
    </member>
    <member name="T:System.Net.Http.Headers.ViaHeaderValue">
      <summary vsli:raw="Represents the value of a Via header.">代表 Via 標頭的值。</summary>
    </member>
    <member name="M:System.Net.Http.Headers.ViaHeaderValue.#ctor(System.String,System.String)">
      <summary vsli:raw="Initializes a new instance of the &lt;see cref=&quot;T:System.Net.Http.Headers.ViaHeaderValue&quot; /&gt; class.">初始化 <see cref="T:System.Net.Http.Headers.ViaHeaderValue" /> 類別的新執行個體。</summary>
      <param name="protocolVersion" vsli:raw="The protocol version of the received protocol.">接收的通訊協定的通訊協定版本。</param>
      <param name="receivedBy" vsli:raw="The host and port that the request or response was received by.">接收要求或回應的主機和連接埠。</param>
    </member>
    <member name="M:System.Net.Http.Headers.ViaHeaderValue.#ctor(System.String,System.String,System.String)">
      <summary vsli:raw="Initializes a new instance of the &lt;see cref=&quot;T:System.Net.Http.Headers.ViaHeaderValue&quot; /&gt; class.">初始化 <see cref="T:System.Net.Http.Headers.ViaHeaderValue" /> 類別的新執行個體。</summary>
      <param name="protocolVersion" vsli:raw="The protocol version of the received protocol.">接收的通訊協定的通訊協定版本。</param>
      <param name="receivedBy" vsli:raw="The host and port that the request or response was received by.">接收要求或回應的主機和連接埠。</param>
      <param name="protocolName" vsli:raw="The protocol name of the received protocol.">接收的通訊協定的通訊協定名稱。</param>
    </member>
    <member name="M:System.Net.Http.Headers.ViaHeaderValue.#ctor(System.String,System.String,System.String,System.String)">
      <summary vsli:raw="Initializes a new instance of the &lt;see cref=&quot;T:System.Net.Http.Headers.ViaHeaderValue&quot; /&gt; class.">初始化 <see cref="T:System.Net.Http.Headers.ViaHeaderValue" /> 類別的新執行個體。</summary>
      <param name="protocolVersion" vsli:raw="The protocol version of the received protocol.">接收的通訊協定的通訊協定版本。</param>
      <param name="receivedBy" vsli:raw="The host and port that the request or response was received by.">接收要求或回應的主機和連接埠。</param>
      <param name="protocolName" vsli:raw="The protocol name of the received protocol.">接收的通訊協定的通訊協定名稱。</param>
      <param name="comment" vsli:raw="The comment field used to identify the software of the recipient proxy or gateway.">用來識別收件者 Proxy 或閘道之軟體的註解欄位。</param>
    </member>
    <member name="M:System.Net.Http.Headers.ViaHeaderValue.Equals(System.Object)">
      <summary vsli:raw="Determines whether the specified &lt;see cref=&quot;T:System.Object&quot; /&gt; is equal to the current &lt;see cref=&quot;T:System.Net.Http.Headers.ViaHeaderValue&quot; /&gt; object.">判斷指定的 <see cref="T:System.Object" /> 是否等於目前的 <see cref="T:System.Net.Http.Headers.ViaHeaderValue" /> 物件。</summary>
      <param name="obj" vsli:raw="The object to compare with the current object.">要與目前物件比較的物件。</param>
      <returns vsli:raw="&lt;see langword=&quot;true&quot; /&gt; if the specified &lt;see cref=&quot;T:System.Object&quot; /&gt; is equal to the current object; otherwise, &lt;see langword=&quot;false&quot; /&gt;.">如果指定的 <see cref="T:System.Object" /> 和目前的物件相等，則為 <see langword="true" />；否則為 <see langword="false" />。</returns>
    </member>
    <member name="M:System.Net.Http.Headers.ViaHeaderValue.GetHashCode">
      <summary vsli:raw="Serves as a hash function for an &lt;see cref=&quot;T:System.Net.Http.Headers.ViaHeaderValue&quot; /&gt; object.">做為 <see cref="T:System.Net.Http.Headers.ViaHeaderValue" /> 物件的雜湊函式。</summary>
      <returns vsli:raw="A hash code for the current object.">目前物件的雜湊碼。</returns>
    </member>
    <member name="M:System.Net.Http.Headers.ViaHeaderValue.Parse(System.String)">
      <summary vsli:raw="Converts a string to an &lt;see cref=&quot;T:System.Net.Http.Headers.ViaHeaderValue&quot; /&gt; instance.">將字串轉換為 <see cref="T:System.Net.Http.Headers.ViaHeaderValue" /> 執行個體。</summary>
      <param name="input" vsli:raw="A string that represents via header value information.">代表 via 標頭值資訊的字串。</param>
      <exception cref="T:System.ArgumentNullException" vsli:raw="&lt;paramref name=&quot;input&quot; /&gt; is a &lt;see langword=&quot;null&quot; /&gt; reference.">
        <paramref name="input" /> 是 <see langword="null" /> 參考。</exception>
      <exception cref="T:System.FormatException" vsli:raw="&lt;paramref name=&quot;input&quot; /&gt; is not valid via header value information.">
        <paramref name="input" /> 不是有效的 via 標頭值資訊。</exception>
      <returns vsli:raw="A &lt;see cref=&quot;T:System.Net.Http.Headers.ViaHeaderValue&quot; /&gt; instance.">
        <see cref="T:System.Net.Http.Headers.ViaHeaderValue" /> 執行個體。</returns>
    </member>
    <member name="M:System.Net.Http.Headers.ViaHeaderValue.System#ICloneable#Clone">
      <summary vsli:raw="Creates a new object that is a copy of the current &lt;see cref=&quot;T:System.Net.Http.Headers.ViaHeaderValue&quot; /&gt; instance.">建立新物件，為目前 <see cref="T:System.Net.Http.Headers.ViaHeaderValue" /> 執行個體的複本。</summary>
      <returns vsli:raw="A copy of the current instance.">目前執行個體的複本。</returns>
    </member>
    <member name="M:System.Net.Http.Headers.ViaHeaderValue.ToString">
      <summary vsli:raw="Returns a string that represents the current &lt;see cref=&quot;T:System.Net.Http.Headers.ViaHeaderValue&quot; /&gt; object.">傳回表示目前 <see cref="T:System.Net.Http.Headers.ViaHeaderValue" /> 物件的字串。</summary>
      <returns vsli:raw="A string that represents the current object.">表示目前物件的字串。</returns>
    </member>
    <member name="M:System.Net.Http.Headers.ViaHeaderValue.TryParse(System.String,System.Net.Http.Headers.ViaHeaderValue@)">
      <summary vsli:raw="Determines whether a string is valid &lt;see cref=&quot;T:System.Net.Http.Headers.ViaHeaderValue&quot; /&gt; information.">判斷字串是否為有效的 <see cref="T:System.Net.Http.Headers.ViaHeaderValue" /> 資訊。</summary>
      <param name="input" vsli:raw="The string to validate.">要驗證的字串。</param>
      <param name="parsedValue" vsli:raw="The &lt;see cref=&quot;T:System.Net.Http.Headers.ViaHeaderValue&quot; /&gt; version of the string.">字串的 <see cref="T:System.Net.Http.Headers.ViaHeaderValue" /> 版本。</param>
      <returns vsli:raw="&lt;see langword=&quot;true&quot; /&gt; if &lt;paramref name=&quot;input&quot; /&gt; is valid &lt;see cref=&quot;T:System.Net.Http.Headers.ViaHeaderValue&quot; /&gt; information; otherwise, &lt;see langword=&quot;false&quot; /&gt;.">如果 <paramref name="input" /> 是有效的 <see cref="T:System.Net.Http.Headers.ViaHeaderValue" /> 資訊，則為 <see langword="true" />；否則為 <see langword="false" />。</returns>
    </member>
    <member name="P:System.Net.Http.Headers.ViaHeaderValue.Comment">
      <summary vsli:raw="Gets the comment field used to identify the software of the recipient proxy or gateway.">取得用來識別收件者 Proxy 或閘道之軟體的註解欄位。</summary>
      <returns vsli:raw="The comment field used to identify the software of the recipient proxy or gateway.">用來識別收件者 Proxy 或閘道之軟體的註解欄位。</returns>
    </member>
    <member name="P:System.Net.Http.Headers.ViaHeaderValue.ProtocolName">
      <summary vsli:raw="Gets the protocol name of the received protocol.">取得已接收的通訊協定的通訊協定名稱。</summary>
      <returns vsli:raw="The protocol name.">通訊協定名稱。</returns>
    </member>
    <member name="P:System.Net.Http.Headers.ViaHeaderValue.ProtocolVersion">
      <summary vsli:raw="Gets the protocol version of the received protocol.">取得已接收之通訊協定的通訊協定版本。</summary>
      <returns vsli:raw="The protocol version.">通訊協定版本。</returns>
    </member>
    <member name="P:System.Net.Http.Headers.ViaHeaderValue.ReceivedBy">
      <summary vsli:raw="Gets the host and port that the request or response was received by.">取得接收要求或回應的主機和連接埠。</summary>
      <returns vsli:raw="The host and port that the request or response was received by.">接收要求或回應的主機和連接埠。</returns>
    </member>
    <member name="T:System.Net.Http.Headers.WarningHeaderValue">
      <summary vsli:raw="Represents a warning value used by the Warning header.">代表 Warning 標頭所使用的警告值。</summary>
    </member>
    <member name="M:System.Net.Http.Headers.WarningHeaderValue.#ctor(System.Int32,System.String,System.String)">
      <summary vsli:raw="Initializes a new instance of the &lt;see cref=&quot;T:System.Net.Http.Headers.WarningHeaderValue&quot; /&gt; class.">初始化 <see cref="T:System.Net.Http.Headers.WarningHeaderValue" /> 類別的新執行個體。</summary>
      <param name="code" vsli:raw="The specific warning code.">特定的警告碼。</param>
      <param name="agent" vsli:raw="The host that attached the warning.">附加警告的主機。</param>
      <param name="text" vsli:raw="A quoted-string containing the warning text.">加上引號的字串，其中包含警告文字。</param>
    </member>
    <member name="M:System.Net.Http.Headers.WarningHeaderValue.#ctor(System.Int32,System.String,System.String,System.DateTimeOffset)">
      <summary vsli:raw="Initializes a new instance of the &lt;see cref=&quot;T:System.Net.Http.Headers.WarningHeaderValue&quot; /&gt; class.">初始化 <see cref="T:System.Net.Http.Headers.WarningHeaderValue" /> 類別的新執行個體。</summary>
      <param name="code" vsli:raw="The specific warning code.">特定的警告碼。</param>
      <param name="agent" vsli:raw="The host that attached the warning.">附加警告的主機。</param>
      <param name="text" vsli:raw="A quoted-string containing the warning text.">加上引號的字串，其中包含警告文字。</param>
      <param name="date" vsli:raw="The date/time stamp of the warning.">警告的日期/時間戳記。</param>
    </member>
    <member name="M:System.Net.Http.Headers.WarningHeaderValue.Equals(System.Object)">
      <summary vsli:raw="Determines whether the specified &lt;see cref=&quot;T:System.Object&quot; /&gt; is equal to the current &lt;see cref=&quot;T:System.Net.Http.Headers.WarningHeaderValue&quot; /&gt; object.">判斷指定的 <see cref="T:System.Object" /> 是否等於目前的 <see cref="T:System.Net.Http.Headers.WarningHeaderValue" /> 物件。</summary>
      <param name="obj" vsli:raw="The object to compare with the current object.">要與目前物件比較的物件。</param>
      <returns vsli:raw="&lt;see langword=&quot;true&quot; /&gt; if the specified &lt;see cref=&quot;T:System.Object&quot; /&gt; is equal to the current object; otherwise, &lt;see langword=&quot;false&quot; /&gt;.">如果指定的 <see cref="T:System.Object" /> 和目前的物件相等，則為 <see langword="true" />；否則為 <see langword="false" />。</returns>
    </member>
    <member name="M:System.Net.Http.Headers.WarningHeaderValue.GetHashCode">
      <summary vsli:raw="Serves as a hash function for an &lt;see cref=&quot;T:System.Net.Http.Headers.WarningHeaderValue&quot; /&gt; object.">做為 <see cref="T:System.Net.Http.Headers.WarningHeaderValue" /> 物件的雜湊函式。</summary>
      <returns vsli:raw="A hash code for the current object.">目前物件的雜湊碼。</returns>
    </member>
    <member name="M:System.Net.Http.Headers.WarningHeaderValue.Parse(System.String)">
      <summary vsli:raw="Converts a string to an &lt;see cref=&quot;T:System.Net.Http.Headers.WarningHeaderValue&quot; /&gt; instance.">將字串轉換為 <see cref="T:System.Net.Http.Headers.WarningHeaderValue" /> 執行個體。</summary>
      <param name="input" vsli:raw="A string that represents authentication header value information.">表示驗證標頭值資訊的字串。</param>
      <exception cref="T:System.ArgumentNullException" vsli:raw="&lt;paramref name=&quot;input&quot; /&gt; is a &lt;see langword=&quot;null&quot; /&gt; reference.">
        <paramref name="input" /> 是 <see langword="null" /> 參考。</exception>
      <exception cref="T:System.FormatException" vsli:raw="&lt;paramref name=&quot;input&quot; /&gt; is not valid authentication header value information.">
        <paramref name="input" /> 不是有效的驗證標頭值資訊。</exception>
      <returns vsli:raw="Returns a &lt;see cref=&quot;T:System.Net.Http.Headers.WarningHeaderValue&quot; /&gt; instance.">傳回 <see cref="T:System.Net.Http.Headers.WarningHeaderValue" /> 執行個體。</returns>
    </member>
    <member name="M:System.Net.Http.Headers.WarningHeaderValue.System#ICloneable#Clone">
      <summary vsli:raw="Creates a new object that is a copy of the current &lt;see cref=&quot;T:System.Net.Http.Headers.WarningHeaderValue&quot; /&gt; instance.">建立新物件，為目前 <see cref="T:System.Net.Http.Headers.WarningHeaderValue" /> 執行個體的複本。</summary>
      <returns vsli:raw="Returns a copy of the current instance.">傳回目前執行個體的複本。</returns>
    </member>
    <member name="M:System.Net.Http.Headers.WarningHeaderValue.ToString">
      <summary vsli:raw="Returns a string that represents the current &lt;see cref=&quot;T:System.Net.Http.Headers.WarningHeaderValue&quot; /&gt; object.">傳回表示目前 <see cref="T:System.Net.Http.Headers.WarningHeaderValue" /> 物件的字串。</summary>
      <returns vsli:raw="A string that represents the current object.">表示目前物件的字串。</returns>
    </member>
    <member name="M:System.Net.Http.Headers.WarningHeaderValue.TryParse(System.String,System.Net.Http.Headers.WarningHeaderValue@)">
      <summary vsli:raw="Determines whether a string is valid &lt;see cref=&quot;T:System.Net.Http.Headers.WarningHeaderValue&quot; /&gt; information.">判斷字串是否為有效的 <see cref="T:System.Net.Http.Headers.WarningHeaderValue" /> 資訊。</summary>
      <param name="input" vsli:raw="The string to validate.">要驗證的字串。</param>
      <param name="parsedValue" vsli:raw="The &lt;see cref=&quot;T:System.Net.Http.Headers.WarningHeaderValue&quot; /&gt; version of the string.">字串的 <see cref="T:System.Net.Http.Headers.WarningHeaderValue" /> 版本。</param>
      <returns vsli:raw="&lt;see langword=&quot;true&quot; /&gt; if &lt;paramref name=&quot;input&quot; /&gt; is valid &lt;see cref=&quot;T:System.Net.Http.Headers.WarningHeaderValue&quot; /&gt; information; otherwise, &lt;see langword=&quot;false&quot; /&gt;.">如果 <paramref name="input" /> 是有效的 <see cref="T:System.Net.Http.Headers.WarningHeaderValue" /> 資訊，則為 <see langword="true" />；否則為 <see langword="false" />。</returns>
    </member>
    <member name="P:System.Net.Http.Headers.WarningHeaderValue.Agent">
      <summary vsli:raw="Gets the host that attached the warning.">取得附加警告的主機。</summary>
      <returns vsli:raw="The host that attached the warning.">附加警告的主機。</returns>
    </member>
    <member name="P:System.Net.Http.Headers.WarningHeaderValue.Code">
      <summary vsli:raw="Gets the specific warning code.">取得特定的警告碼。</summary>
      <returns vsli:raw="The specific warning code.">特定的警告碼。</returns>
    </member>
    <member name="P:System.Net.Http.Headers.WarningHeaderValue.Date">
      <summary vsli:raw="Gets the date/time stamp of the warning.">取得警告的日期/時間戳記。</summary>
      <returns vsli:raw="The date/time stamp of the warning.">警告的日期/時間戳記。</returns>
    </member>
    <member name="P:System.Net.Http.Headers.WarningHeaderValue.Text">
      <summary vsli:raw="Gets a quoted-string containing the warning text.">取得加上引號的字串，其中包含警告文字。</summary>
      <returns vsli:raw="A quoted-string containing the warning text.">加上引號的字串，其中包含警告文字。</returns>
    </member>
    <member name="T:System.Net.Http.HttpClient">
      <summary vsli:raw="Provides a class for sending HTTP requests and receiving HTTP responses from a resource identified by a URI.">提供基底類別，用來傳送 HTTP 要求，以及從 URI 所識別的資源接收 HTTP 回應。</summary>
    </member>
    <member name="M:System.Net.Http.HttpClient.#ctor">
      <summary vsli:raw="Initializes a new instance of the &lt;see cref=&quot;T:System.Net.Http.HttpClient&quot; /&gt; class using a &lt;see cref=&quot;T:System.Net.Http.HttpClientHandler&quot; /&gt; that is disposed when this instance is disposed.">使用當處置此執行個體時會處置的 <see cref="T:System.Net.Http.HttpClientHandler" /> 來初始化 <see cref="T:System.Net.Http.HttpClient" /> 類別的新執行個體。</summary>
    </member>
    <member name="M:System.Net.Http.HttpClient.#ctor(System.Net.Http.HttpMessageHandler)">
      <summary vsli:raw="Initializes a new instance of the &lt;see cref=&quot;T:System.Net.Http.HttpClient&quot; /&gt; class with the specified handler. The handler is disposed when this instance is disposed.">使用指定的處理常式初始化 <see cref="T:System.Net.Http.HttpClient" /> 類別的新執行個體。 當處置此執行個體時會處置該處理常式。</summary>
      <param name="handler" vsli:raw="The HTTP handler stack to use for sending requests.">要用來傳送要求的 HTTP 處理常式堆疊。</param>
      <exception cref="T:System.ArgumentNullException" vsli:raw="The &lt;paramref name=&quot;handler&quot; /&gt; is &lt;see langword=&quot;null&quot; /&gt;.">
        <paramref name="handler" /> 為 <see langword="null" />。</exception>
    </member>
    <member name="M:System.Net.Http.HttpClient.#ctor(System.Net.Http.HttpMessageHandler,System.Boolean)">
      <summary vsli:raw="Initializes a new instance of the &lt;see cref=&quot;T:System.Net.Http.HttpClient&quot; /&gt; class with the provided handler, and specifies whether that handler should be disposed when this instance is disposed.">使用提供的處理常式初始化 <see cref="T:System.Net.Http.HttpClient" /> 類別的新執行個體，並指定當處置此執行個體時是否應該處置該處理常式。</summary>
      <param name="handler" vsli:raw="The &lt;see cref=&quot;T:System.Net.Http.HttpMessageHandler&quot; /&gt; responsible for processing the HTTP response messages.">負責處理 HTTP 回應訊息的 <see cref="T:System.Net.Http.HttpMessageHandler" />。</param>
      <param name="disposeHandler" vsli:raw="&lt;see langword=&quot;true&quot; /&gt; if the inner handler should be disposed of by HttpClient.Dispose; &lt;see langword=&quot;false&quot; /&gt; if you intend to reuse the inner handler.">如果內部處理常式應由 HttpClient.Dispose 處置，則為 <see langword="true" />，如果您想要重複使用內部處理常式，則為 <see langword="false" />。</param>
      <exception cref="T:System.ArgumentNullException" vsli:raw="The &lt;paramref name=&quot;handler&quot; /&gt; is &lt;see langword=&quot;null&quot; /&gt;.">
        <paramref name="handler" /> 為 <see langword="null" />。</exception>
    </member>
    <member name="M:System.Net.Http.HttpClient.CancelPendingRequests">
      <summary vsli:raw="Cancel all pending requests on this instance.">取消這個執行個體上的所有暫止要求。</summary>
    </member>
    <member name="M:System.Net.Http.HttpClient.DeleteAsync(System.String)">
      <summary vsli:raw="Send a DELETE request to the specified Uri as an asynchronous operation.">以非同步作業的方式，將 DELETE 要求傳送至指定的 URI。</summary>
      <param name="requestUri" vsli:raw="The Uri the request is sent to.">傳送要求的目標 URI。</param>
      <exception cref="T:System.InvalidOperationException" vsli:raw="The request message was already sent by the &lt;see cref=&quot;T:System.Net.Http.HttpClient&quot; /&gt; instance.&#xA;&#xA;-or-&#xA;&#xA;The &lt;paramref name=&quot;requestUri&quot; /&gt; is not an absolute URI.&#xA;&#xA;-or-&#xA;&#xA;&lt;see cref=&quot;P:System.Net.Http.HttpClient.BaseAddress&quot; /&gt; is not set.">要求訊息已經透過 <see cref="T:System.Net.Http.HttpClient" /> 執行個體傳送。

-或-

<paramref name="requestUri" /> 不是絕對 URI。

-或-

<see cref="P:System.Net.Http.HttpClient.BaseAddress" /> 未設定。</exception>
      <exception cref="T:System.Net.Http.HttpRequestException" vsli:raw="The request failed due to an underlying issue such as network connectivity, DNS failure, server certificate validation or timeout.">要求已因基本問題 (例如網路連線、DNS 失敗、伺服器憑證驗證或逾時) 而失敗。</exception>
      <exception cref="T:System.Threading.Tasks.TaskCanceledException" vsli:raw=".NET Core and .NET 5 and later only: The request failed due to timeout.">僅限 .NET Core 與 .NET 5.0 和更新版本：要求因逾時而失敗。</exception>
      <returns vsli:raw="The task object representing the asynchronous operation.">工作物件，表示非同步作業。</returns>
    </member>
    <member name="M:System.Net.Http.HttpClient.DeleteAsync(System.String,System.Threading.CancellationToken)">
      <summary vsli:raw="Send a DELETE request to the specified Uri with a cancellation token as an asynchronous operation.">以非同步作業的方式，傳送 DELETE 要求和取消權杖至指定的 Uri。</summary>
      <param name="requestUri" vsli:raw="The Uri the request is sent to.">傳送要求的目標 URI。</param>
      <param name="cancellationToken" vsli:raw="A cancellation token that can be used by other objects or threads to receive notice of cancellation.">取消語彙基元，可由其他物件或執行緒用來接收取消通知。</param>
      <exception cref="T:System.InvalidOperationException" vsli:raw="The request message was already sent by the &lt;see cref=&quot;T:System.Net.Http.HttpClient&quot; /&gt; instance.&#xA;&#xA;-or-&#xA;&#xA;The &lt;paramref name=&quot;requestUri&quot; /&gt; is not an absolute URI.&#xA;&#xA;-or-&#xA;&#xA;&lt;see cref=&quot;P:System.Net.Http.HttpClient.BaseAddress&quot; /&gt; is not set.">要求訊息已經透過 <see cref="T:System.Net.Http.HttpClient" /> 執行個體傳送。

-或-

<paramref name="requestUri" /> 不是絕對 URI。

-或-

<see cref="P:System.Net.Http.HttpClient.BaseAddress" /> 未設定。</exception>
      <exception cref="T:System.Net.Http.HttpRequestException" vsli:raw="The request failed due to an underlying issue such as network connectivity, DNS failure, server certificate validation or timeout.">要求已因基本問題 (例如網路連線、DNS 失敗、伺服器憑證驗證或逾時) 而失敗。</exception>
      <exception cref="T:System.Threading.Tasks.TaskCanceledException" vsli:raw=".NET Core and .NET 5 and later only: The request failed due to timeout.">僅限 .NET Core 與 .NET 5.0 和更新版本：要求因逾時而失敗。</exception>
      <returns vsli:raw="The task object representing the asynchronous operation.">工作物件，表示非同步作業。</returns>
    </member>
    <member name="M:System.Net.Http.HttpClient.DeleteAsync(System.Uri)">
      <summary vsli:raw="Send a DELETE request to the specified Uri as an asynchronous operation.">以非同步作業的方式，將 DELETE 要求傳送至指定的 URI。</summary>
      <param name="requestUri" vsli:raw="The Uri the request is sent to.">傳送要求的目標 URI。</param>
      <exception cref="T:System.InvalidOperationException" vsli:raw="The request message was already sent by the &lt;see cref=&quot;T:System.Net.Http.HttpClient&quot; /&gt; instance.&#xA;&#xA;-or-&#xA;&#xA;The &lt;paramref name=&quot;requestUri&quot; /&gt; is not an absolute URI.&#xA;&#xA;-or-&#xA;&#xA;&lt;see cref=&quot;P:System.Net.Http.HttpClient.BaseAddress&quot; /&gt; is not set.">要求訊息已經透過 <see cref="T:System.Net.Http.HttpClient" /> 執行個體傳送。

-或-

<paramref name="requestUri" /> 不是絕對 URI。

-或-

<see cref="P:System.Net.Http.HttpClient.BaseAddress" /> 未設定。</exception>
      <exception cref="T:System.Net.Http.HttpRequestException" vsli:raw="The request failed due to an underlying issue such as network connectivity, DNS failure, server certificate validation or timeout.">要求已因基本問題 (例如網路連線、DNS 失敗、伺服器憑證驗證或逾時) 而失敗。</exception>
      <exception cref="T:System.Threading.Tasks.TaskCanceledException" vsli:raw=".NET Core and .NET 5 and later only: The request failed due to timeout.">僅限 .NET Core 與 .NET 5.0 和更新版本：要求因逾時而失敗。</exception>
      <returns vsli:raw="The task object representing the asynchronous operation.">工作物件，表示非同步作業。</returns>
    </member>
    <member name="M:System.Net.Http.HttpClient.DeleteAsync(System.Uri,System.Threading.CancellationToken)">
      <summary vsli:raw="Send a DELETE request to the specified Uri with a cancellation token as an asynchronous operation.">以非同步作業的方式，傳送 DELETE 要求和取消權杖至指定的 Uri。</summary>
      <param name="requestUri" vsli:raw="The Uri the request is sent to.">傳送要求的目標 URI。</param>
      <param name="cancellationToken" vsli:raw="A cancellation token that can be used by other objects or threads to receive notice of cancellation.">取消語彙基元，可由其他物件或執行緒用來接收取消通知。</param>
      <exception cref="T:System.InvalidOperationException" vsli:raw="The request message was already sent by the &lt;see cref=&quot;T:System.Net.Http.HttpClient&quot; /&gt; instance.&#xA;&#xA;-or-&#xA;&#xA;The &lt;paramref name=&quot;requestUri&quot; /&gt; is not an absolute URI.&#xA;&#xA;-or-&#xA;&#xA;&lt;see cref=&quot;P:System.Net.Http.HttpClient.BaseAddress&quot; /&gt; is not set.">要求訊息已經透過 <see cref="T:System.Net.Http.HttpClient" /> 執行個體傳送。

-或-

<paramref name="requestUri" /> 不是絕對 URI。

-或-

<see cref="P:System.Net.Http.HttpClient.BaseAddress" /> 未設定。</exception>
      <exception cref="T:System.Net.Http.HttpRequestException" vsli:raw="The request failed due to an underlying issue such as network connectivity, DNS failure, server certificate validation or timeout.">要求已因基本問題 (例如網路連線、DNS 失敗、伺服器憑證驗證或逾時) 而失敗。</exception>
      <exception cref="T:System.Threading.Tasks.TaskCanceledException" vsli:raw=".NET Core and .NET 5 and later only: The request failed due to timeout.">僅限 .NET Core 與 .NET 5.0 和更新版本：要求因逾時而失敗。</exception>
      <returns vsli:raw="The task object representing the asynchronous operation.">工作物件，表示非同步作業。</returns>
    </member>
    <member name="M:System.Net.Http.HttpClient.Dispose(System.Boolean)">
      <summary vsli:raw="Releases the unmanaged resources used by the &lt;see cref=&quot;T:System.Net.Http.HttpClient&quot; /&gt; and optionally disposes of the managed resources.">釋放 <see cref="T:System.Net.Http.HttpClient" /> 所使用的 Unmanaged 資源，並選擇性處置 Managed 資源。</summary>
      <param name="disposing" vsli:raw="&lt;see langword=&quot;true&quot; /&gt; to release both managed and unmanaged resources; &lt;see langword=&quot;false&quot; /&gt; to releases only unmanaged resources.">
        <see langword="true" /> 表示會同時釋放 Managed 和 Unmanaged 資源；<see langword="false" /> 則表示只釋放 Unmanaged 資源。</param>
    </member>
    <member name="M:System.Net.Http.HttpClient.GetAsync(System.String)">
      <summary vsli:raw="Send a GET request to the specified Uri as an asynchronous operation.">以非同步作業的方式，將 GET 要求傳送至指定的 URI。</summary>
      <param name="requestUri" vsli:raw="The Uri the request is sent to.">傳送要求的目標 URI。</param>
      <exception cref="T:System.InvalidOperationException" vsli:raw="The &lt;paramref name=&quot;requestUri&quot; /&gt; must be an absolute URI or &lt;see cref=&quot;P:System.Net.Http.HttpClient.BaseAddress&quot; /&gt; must be set.">
        <paramref name="requestUri" /> 必須是絕對 URI，否則必須設定 <see cref="P:System.Net.Http.HttpClient.BaseAddress" />。</exception>
      <exception cref="T:System.Net.Http.HttpRequestException" vsli:raw="The request failed due to an underlying issue such as network connectivity, DNS failure, server certificate validation or timeout.">要求已因基本問題 (例如網路連線、DNS 失敗、伺服器憑證驗證或逾時) 而失敗。</exception>
      <exception cref="T:System.Threading.Tasks.TaskCanceledException" vsli:raw=".NET Core and .NET 5 and later only: The request failed due to timeout.">僅限 .NET Core 與 .NET 5.0 和更新版本：要求因逾時而失敗。</exception>
      <returns vsli:raw="The task object representing the asynchronous operation.">工作物件，表示非同步作業。</returns>
    </member>
    <member name="M:System.Net.Http.HttpClient.GetAsync(System.String,System.Net.Http.HttpCompletionOption)">
      <summary vsli:raw="Send a GET request to the specified Uri with an HTTP completion option as an asynchronous operation.">以非同步作業的方式，傳送 GET 要求和 HTTP 完成選項至指定的 Uri。</summary>
      <param name="requestUri" vsli:raw="The Uri the request is sent to.">傳送要求的目標 URI。</param>
      <param name="completionOption" vsli:raw="An HTTP completion option value that indicates when the operation should be considered completed.">HTTP 完成選項值，表示作業應該被視為已完成。</param>
      <exception cref="T:System.InvalidOperationException" vsli:raw="The &lt;paramref name=&quot;requestUri&quot; /&gt; must be an absolute URI or &lt;see cref=&quot;P:System.Net.Http.HttpClient.BaseAddress&quot; /&gt; must be set.">
        <paramref name="requestUri" /> 必須是絕對 URI，否則必須設定 <see cref="P:System.Net.Http.HttpClient.BaseAddress" />。</exception>
      <exception cref="T:System.Net.Http.HttpRequestException" vsli:raw="The request failed due to an underlying issue such as network connectivity, DNS failure, server certificate validation or timeout.">要求已因基本問題 (例如網路連線、DNS 失敗、伺服器憑證驗證或逾時) 而失敗。</exception>
      <exception cref="T:System.Threading.Tasks.TaskCanceledException" vsli:raw=".NET Core and .NET 5 and later only: The request failed due to timeout.">僅限 .NET Core 與 .NET 5.0 和更新版本：要求因逾時而失敗。</exception>
      <returns vsli:raw="The task object representing the asynchronous operation.">工作物件，表示非同步作業。</returns>
    </member>
    <member name="M:System.Net.Http.HttpClient.GetAsync(System.String,System.Net.Http.HttpCompletionOption,System.Threading.CancellationToken)">
      <summary vsli:raw="Send a GET request to the specified Uri with an HTTP completion option and a cancellation token as an asynchronous operation.">以非同步作業的方式，傳送 GET 要求和 HTTP 完成選項以及取消語彙基元至指定的 Uri。</summary>
      <param name="requestUri" vsli:raw="The Uri the request is sent to.">傳送要求的目標 URI。</param>
      <param name="completionOption" vsli:raw="An HTTP  completion option value that indicates when the operation should be considered completed.">HTTP 完成選項值，表示作業應該被視為已完成。</param>
      <param name="cancellationToken" vsli:raw="A cancellation token that can be used by other objects or threads to receive notice of cancellation.">取消語彙基元，可由其他物件或執行緒用來接收取消通知。</param>
      <exception cref="T:System.InvalidOperationException" vsli:raw="The &lt;paramref name=&quot;requestUri&quot; /&gt; must be an absolute URI or &lt;see cref=&quot;P:System.Net.Http.HttpClient.BaseAddress&quot; /&gt; must be set.">
        <paramref name="requestUri" /> 必須是絕對 URI，否則必須設定 <see cref="P:System.Net.Http.HttpClient.BaseAddress" />。</exception>
      <exception cref="T:System.Net.Http.HttpRequestException" vsli:raw="The request failed due to an underlying issue such as network connectivity, DNS failure, server certificate validation or timeout.">要求已因基本問題 (例如網路連線、DNS 失敗、伺服器憑證驗證或逾時) 而失敗。</exception>
      <exception cref="T:System.Threading.Tasks.TaskCanceledException" vsli:raw=".NET Core and .NET 5 and later only: The request failed due to timeout.">僅限 .NET Core 與 .NET 5.0 和更新版本：要求因逾時而失敗。</exception>
      <returns vsli:raw="The task object representing the asynchronous operation.">工作物件，表示非同步作業。</returns>
    </member>
    <member name="M:System.Net.Http.HttpClient.GetAsync(System.String,System.Threading.CancellationToken)">
      <summary vsli:raw="Send a GET request to the specified Uri with a cancellation token as an asynchronous operation.">以非同步作業的方式，傳送 GET 要求和取消權杖至指定的 Uri。</summary>
      <param name="requestUri" vsli:raw="The Uri the request is sent to.">傳送要求的目標 URI。</param>
      <param name="cancellationToken" vsli:raw="A cancellation token that can be used by other objects or threads to receive notice of cancellation.">取消語彙基元，可由其他物件或執行緒用來接收取消通知。</param>
      <exception cref="T:System.InvalidOperationException" vsli:raw="The &lt;paramref name=&quot;requestUri&quot; /&gt; must be an absolute URI or &lt;see cref=&quot;P:System.Net.Http.HttpClient.BaseAddress&quot; /&gt; must be set.">
        <paramref name="requestUri" /> 必須是絕對 URI，否則必須設定 <see cref="P:System.Net.Http.HttpClient.BaseAddress" />。</exception>
      <exception cref="T:System.Net.Http.HttpRequestException" vsli:raw="The request failed due to an underlying issue such as network connectivity, DNS failure, server certificate validation or timeout.">要求已因基本問題 (例如網路連線、DNS 失敗、伺服器憑證驗證或逾時) 而失敗。</exception>
      <exception cref="T:System.Threading.Tasks.TaskCanceledException" vsli:raw=".NET Core and .NET 5 and later only: The request failed due to timeout.">僅限 .NET Core 與 .NET 5.0 和更新版本：要求因逾時而失敗。</exception>
      <returns vsli:raw="The task object representing the asynchronous operation.">工作物件，表示非同步作業。</returns>
    </member>
    <member name="M:System.Net.Http.HttpClient.GetAsync(System.Uri)">
      <summary vsli:raw="Send a GET request to the specified Uri as an asynchronous operation.">以非同步作業的方式，將 GET 要求傳送至指定的 URI。</summary>
      <param name="requestUri" vsli:raw="The Uri the request is sent to.">傳送要求的目標 URI。</param>
      <exception cref="T:System.InvalidOperationException" vsli:raw="The &lt;paramref name=&quot;requestUri&quot; /&gt; must be an absolute URI or &lt;see cref=&quot;P:System.Net.Http.HttpClient.BaseAddress&quot; /&gt; must be set.">
        <paramref name="requestUri" /> 必須是絕對 URI，否則必須設定 <see cref="P:System.Net.Http.HttpClient.BaseAddress" />。</exception>
      <exception cref="T:System.Net.Http.HttpRequestException" vsli:raw="The request failed due to an underlying issue such as network connectivity, DNS failure, server certificate validation or timeout.">要求已因基本問題 (例如網路連線、DNS 失敗、伺服器憑證驗證或逾時) 而失敗。</exception>
      <exception cref="T:System.Threading.Tasks.TaskCanceledException" vsli:raw=".NET Core and .NET 5 and later only: The request failed due to timeout.">僅限 .NET Core 與 .NET 5.0 和更新版本：要求因逾時而失敗。</exception>
      <returns vsli:raw="The task object representing the asynchronous operation.">工作物件，表示非同步作業。</returns>
    </member>
    <member name="M:System.Net.Http.HttpClient.GetAsync(System.Uri,System.Net.Http.HttpCompletionOption)">
      <summary vsli:raw="Send a GET request to the specified Uri with an HTTP completion option as an asynchronous operation.">以非同步作業的方式，傳送 GET 要求和 HTTP 完成選項至指定的 Uri。</summary>
      <param name="requestUri" vsli:raw="The Uri the request is sent to.">傳送要求的目標 URI。</param>
      <param name="completionOption" vsli:raw="An HTTP completion option value that indicates when the operation should be considered completed.">HTTP 完成選項值，表示作業應該被視為已完成。</param>
      <exception cref="T:System.InvalidOperationException" vsli:raw="The &lt;paramref name=&quot;requestUri&quot; /&gt; must be an absolute URI or &lt;see cref=&quot;P:System.Net.Http.HttpClient.BaseAddress&quot; /&gt; must be set.">
        <paramref name="requestUri" /> 必須是絕對 URI，否則必須設定 <see cref="P:System.Net.Http.HttpClient.BaseAddress" />。</exception>
      <exception cref="T:System.Net.Http.HttpRequestException" vsli:raw="The request failed due to an underlying issue such as network connectivity, DNS failure, server certificate validation or timeout.">要求已因基本問題 (例如網路連線、DNS 失敗、伺服器憑證驗證或逾時) 而失敗。</exception>
      <exception cref="T:System.Threading.Tasks.TaskCanceledException" vsli:raw=".NET Core and .NET 5 and later only: The request failed due to timeout.">僅限 .NET Core 與 .NET 5.0 和更新版本：要求因逾時而失敗。</exception>
      <returns vsli:raw="The task object representing the asynchronous operation.">工作物件，表示非同步作業。</returns>
    </member>
    <member name="M:System.Net.Http.HttpClient.GetAsync(System.Uri,System.Net.Http.HttpCompletionOption,System.Threading.CancellationToken)">
      <summary vsli:raw="Send a GET request to the specified Uri with an HTTP completion option and a cancellation token as an asynchronous operation.">以非同步作業的方式，傳送 GET 要求和 HTTP 完成選項以及取消語彙基元至指定的 Uri。</summary>
      <param name="requestUri" vsli:raw="The Uri the request is sent to.">傳送要求的目標 URI。</param>
      <param name="completionOption" vsli:raw="An HTTP  completion option value that indicates when the operation should be considered completed.">HTTP 完成選項值，表示作業應該被視為已完成。</param>
      <param name="cancellationToken" vsli:raw="A cancellation token that can be used by other objects or threads to receive notice of cancellation.">取消語彙基元，可由其他物件或執行緒用來接收取消通知。</param>
      <exception cref="T:System.InvalidOperationException" vsli:raw="The &lt;paramref name=&quot;requestUri&quot; /&gt; must be an absolute URI or &lt;see cref=&quot;P:System.Net.Http.HttpClient.BaseAddress&quot; /&gt; must be set.">
        <paramref name="requestUri" /> 必須是絕對 URI，否則必須設定 <see cref="P:System.Net.Http.HttpClient.BaseAddress" />。</exception>
      <exception cref="T:System.Net.Http.HttpRequestException" vsli:raw="The request failed due to an underlying issue such as network connectivity, DNS failure, server certificate validation or timeout.">要求已因基本問題 (例如網路連線、DNS 失敗、伺服器憑證驗證或逾時) 而失敗。</exception>
      <exception cref="T:System.Threading.Tasks.TaskCanceledException" vsli:raw=".NET Core and .NET 5 and later only: The request failed due to timeout.">僅限 .NET Core 與 .NET 5.0 和更新版本：要求因逾時而失敗。</exception>
      <returns vsli:raw="The task object representing the asynchronous operation.">工作物件，表示非同步作業。</returns>
    </member>
    <member name="M:System.Net.Http.HttpClient.GetAsync(System.Uri,System.Threading.CancellationToken)">
      <summary vsli:raw="Send a GET request to the specified Uri with a cancellation token as an asynchronous operation.">以非同步作業的方式，傳送 GET 要求和取消權杖至指定的 Uri。</summary>
      <param name="requestUri" vsli:raw="The Uri the request is sent to.">傳送要求的目標 URI。</param>
      <param name="cancellationToken" vsli:raw="A cancellation token that can be used by other objects or threads to receive notice of cancellation.">取消語彙基元，可由其他物件或執行緒用來接收取消通知。</param>
      <exception cref="T:System.InvalidOperationException" vsli:raw="The &lt;paramref name=&quot;requestUri&quot; /&gt; must be an absolute URI or &lt;see cref=&quot;P:System.Net.Http.HttpClient.BaseAddress&quot; /&gt; must be set.">
        <paramref name="requestUri" /> 必須是絕對 URI，否則必須設定 <see cref="P:System.Net.Http.HttpClient.BaseAddress" />。</exception>
      <exception cref="T:System.Net.Http.HttpRequestException" vsli:raw="The request failed due to an underlying issue such as network connectivity, DNS failure, server certificate validation or timeout.">要求已因基本問題 (例如網路連線、DNS 失敗、伺服器憑證驗證或逾時) 而失敗。</exception>
      <exception cref="T:System.Threading.Tasks.TaskCanceledException" vsli:raw=".NET Core and .NET 5 and later only: The request failed due to timeout.">僅限 .NET Core 與 .NET 5.0 和更新版本：要求因逾時而失敗。</exception>
      <returns vsli:raw="The task object representing the asynchronous operation.">工作物件，表示非同步作業。</returns>
    </member>
    <member name="M:System.Net.Http.HttpClient.GetByteArrayAsync(System.String)">
      <summary vsli:raw="Sends a GET request to the specified Uri and return the response body as a byte array in an asynchronous operation.">將 GET 要求傳送至指定的 URI，並透過非同步作業，以位元組陣列形式傳回回應主體。</summary>
      <param name="requestUri" vsli:raw="The Uri the request is sent to.">傳送要求的目標 URI。</param>
      <exception cref="T:System.InvalidOperationException" vsli:raw="The &lt;paramref name=&quot;requestUri&quot; /&gt; must be an absolute URI or &lt;see cref=&quot;P:System.Net.Http.HttpClient.BaseAddress&quot; /&gt; must be set.">
        <paramref name="requestUri" /> 必須是絕對 URI，否則必須設定 <see cref="P:System.Net.Http.HttpClient.BaseAddress" />。</exception>
      <exception cref="T:System.Net.Http.HttpRequestException" vsli:raw="The request failed due to an underlying issue such as network connectivity, DNS failure, server certificate validation or timeout.">要求已因基本問題 (例如網路連線、DNS 失敗、伺服器憑證驗證或逾時) 而失敗。</exception>
      <exception cref="T:System.Threading.Tasks.TaskCanceledException" vsli:raw=".NET Core and .NET 5 and later only: The request failed due to timeout.">僅限 .NET Core 與 .NET 5.0 和更新版本：要求因逾時而失敗。</exception>
      <returns vsli:raw="The task object representing the asynchronous operation.">工作物件，表示非同步作業。</returns>
    </member>
    <member name="M:System.Net.Http.HttpClient.GetByteArrayAsync(System.String,System.Threading.CancellationToken)">
      <summary vsli:raw="Sends a GET request to the specified Uri and return the response body as a byte array in an asynchronous operation.">將 GET 要求傳送至指定的 URI，並透過非同步作業，以位元組陣列形式傳回回應主體。</summary>
      <param name="requestUri" vsli:raw="The Uri the request is sent to.">傳送要求的目標 URI。</param>
      <param name="cancellationToken" vsli:raw="The cancellation token to cancel the operation.">用於取消作業的取消權杖。</param>
      <exception cref="T:System.Net.Http.HttpRequestException" vsli:raw="The request failed due to an underlying issue such as network connectivity, DNS failure, server certificate validation (or timeout for .NET Framework only).">要求因為根本問題而失敗，例如網路連線、DNS 失敗、伺服器憑證驗證或逾時 (僅限 .NET Framework)。</exception>
      <exception cref="T:System.Threading.Tasks.TaskCanceledException" vsli:raw=".NET Core and .NET 5 and later only: The request failed due to timeout.">僅限 .NET Core 與 .NET 5.0 和更新版本：要求因逾時而失敗。</exception>
      <returns vsli:raw="The task object representing the asynchronous operation.">工作物件，表示非同步作業。</returns>
    </member>
    <member name="M:System.Net.Http.HttpClient.GetByteArrayAsync(System.Uri)">
      <summary vsli:raw="Send a GET request to the specified Uri and return the response body as a byte array in an asynchronous operation.">將 GET 要求傳送至指定的 URI，並透過非同步作業，以位元組陣列形式傳回回應內容。</summary>
      <param name="requestUri" vsli:raw="The Uri the request is sent to.">傳送要求的目標 URI。</param>
      <exception cref="T:System.InvalidOperationException" vsli:raw="The &lt;paramref name=&quot;requestUri&quot; /&gt; must be an absolute URI or &lt;see cref=&quot;P:System.Net.Http.HttpClient.BaseAddress&quot; /&gt; must be set.">
        <paramref name="requestUri" /> 必須是絕對 URI，否則必須設定 <see cref="P:System.Net.Http.HttpClient.BaseAddress" />。</exception>
      <exception cref="T:System.Net.Http.HttpRequestException" vsli:raw="The request failed due to an underlying issue such as network connectivity, DNS failure, server certificate validation (or timeout for .NET Framework only).">要求因為根本問題而失敗，例如網路連線、DNS 失敗、伺服器憑證驗證或逾時 (僅限 .NET Framework)。</exception>
      <exception cref="T:System.Threading.Tasks.TaskCanceledException" vsli:raw=".NET Core and .NET 5 and later only: The request failed due to timeout.">僅限 .NET Core 與 .NET 5.0 和更新版本：要求因逾時而失敗。</exception>
      <returns vsli:raw="The task object representing the asynchronous operation.">工作物件，表示非同步作業。</returns>
    </member>
    <member name="M:System.Net.Http.HttpClient.GetByteArrayAsync(System.Uri,System.Threading.CancellationToken)">
      <summary vsli:raw="Send a GET request to the specified Uri and return the response body as a byte array in an asynchronous operation.">將 GET 要求傳送至指定的 URI，並透過非同步作業，以位元組陣列形式傳回回應內容。</summary>
      <param name="requestUri" vsli:raw="The Uri the request is sent to.">傳送要求的目標 URI。</param>
      <param name="cancellationToken" vsli:raw="The cancellation token to cancel the operation.">用於取消作業的取消權杖。</param>
      <exception cref="T:System.Net.Http.HttpRequestException" vsli:raw="The request failed due to an underlying issue such as network connectivity, DNS failure, server certificate validation (or timeout for .NET Framework only).">要求因為根本問題而失敗，例如網路連線、DNS 失敗、伺服器憑證驗證或逾時 (僅限 .NET Framework)。</exception>
      <exception cref="T:System.Threading.Tasks.TaskCanceledException" vsli:raw=".NET Core and .NET 5 and later only: The request failed due to timeout.">僅限 .NET Core 與 .NET 5.0 和更新版本：要求因逾時而失敗。</exception>
      <returns vsli:raw="The task object representing the asynchronous operation.">工作物件，表示非同步作業。</returns>
    </member>
    <member name="M:System.Net.Http.HttpClient.GetStreamAsync(System.String)">
      <summary vsli:raw="Send a GET request to the specified Uri and return the response body as a stream in an asynchronous operation.">將 GET 要求傳送至指定的 URI，並透過非同步作業，以資料流形式傳回回應內容。</summary>
      <param name="requestUri" vsli:raw="The Uri the request is sent to.">傳送要求的目標 URI。</param>
      <exception cref="T:System.InvalidOperationException" vsli:raw="The &lt;paramref name=&quot;requestUri&quot; /&gt; must be an absolute URI or &lt;see cref=&quot;P:System.Net.Http.HttpClient.BaseAddress&quot; /&gt; must be set.">
        <paramref name="requestUri" /> 必須是絕對 URI，否則必須設定 <see cref="P:System.Net.Http.HttpClient.BaseAddress" />。</exception>
      <exception cref="T:System.Net.Http.HttpRequestException" vsli:raw="The request failed due to an underlying issue such as network connectivity, DNS failure, server certificate validation (or timeout for .NET Framework only).">要求因為根本問題而失敗，例如網路連線、DNS 失敗、伺服器憑證驗證或逾時 (僅限 .NET Framework)。</exception>
      <exception cref="T:System.Threading.Tasks.TaskCanceledException" vsli:raw=".NET Core and .NET 5 and later only: The request failed due to timeout.">僅限 .NET Core 與 .NET 5.0 和更新版本：要求因逾時而失敗。</exception>
      <returns vsli:raw="The task object representing the asynchronous operation.">工作物件，表示非同步作業。</returns>
    </member>
    <member name="M:System.Net.Http.HttpClient.GetStreamAsync(System.String,System.Threading.CancellationToken)">
      <summary vsli:raw="Send a GET request to the specified Uri and return the response body as a stream in an asynchronous operation.">將 GET 要求傳送至指定的 URI，並透過非同步作業，以資料流形式傳回回應內容。</summary>
      <param name="requestUri" vsli:raw="The Uri the request is sent to.">傳送要求的目標 URI。</param>
      <param name="cancellationToken" vsli:raw="The cancellation token to cancel the operation.">用於取消作業的取消權杖。</param>
      <returns vsli:raw="The task object representing the asynchronous operation.">工作物件，表示非同步作業。</returns>
    </member>
    <member name="M:System.Net.Http.HttpClient.GetStreamAsync(System.Uri)">
      <summary vsli:raw="Send a GET request to the specified Uri and return the response body as a stream in an asynchronous operation.">將 GET 要求傳送至指定的 URI，並透過非同步作業，以資料流形式傳回回應內容。</summary>
      <param name="requestUri" vsli:raw="The Uri the request is sent to.">傳送要求的目標 URI。</param>
      <exception cref="T:System.InvalidOperationException" vsli:raw="The &lt;paramref name=&quot;requestUri&quot; /&gt; must be an absolute URI or &lt;see cref=&quot;P:System.Net.Http.HttpClient.BaseAddress&quot; /&gt; must be set.">
        <paramref name="requestUri" /> 必須是絕對 URI，否則必須設定 <see cref="P:System.Net.Http.HttpClient.BaseAddress" />。</exception>
      <exception cref="T:System.Net.Http.HttpRequestException" vsli:raw="The request failed due to an underlying issue such as network connectivity, DNS failure, server certificate validation (or timeout for .NET Framework only).">要求因為根本問題而失敗，例如網路連線、DNS 失敗、伺服器憑證驗證或逾時 (僅限 .NET Framework)。</exception>
      <exception cref="T:System.Threading.Tasks.TaskCanceledException" vsli:raw=".NET Core and .NET 5 and later only: The request failed due to timeout.">僅限 .NET Core 與 .NET 5.0 和更新版本：要求因逾時而失敗。</exception>
      <returns vsli:raw="The task object representing the asynchronous operation.">工作物件，表示非同步作業。</returns>
    </member>
    <member name="M:System.Net.Http.HttpClient.GetStreamAsync(System.Uri,System.Threading.CancellationToken)">
      <summary vsli:raw="Send a GET request to the specified Uri and return the response body as a stream in an asynchronous operation.">將 GET 要求傳送至指定的 URI，並透過非同步作業，以資料流形式傳回回應內容。</summary>
      <param name="requestUri" vsli:raw="The Uri the request is sent to.">傳送要求的目標 URI。</param>
      <param name="cancellationToken" vsli:raw="The cancellation token to cancel the operation.">用於取消作業的取消權杖。</param>
      <exception cref="T:System.ArgumentNullException" vsli:raw="The &lt;paramref name=&quot;requestUri&quot; /&gt; is &lt;see langword=&quot;null&quot; /&gt;.">
        <paramref name="requestUri" /> 為 <see langword="null" />。</exception>
      <exception cref="T:System.Net.Http.HttpRequestException" vsli:raw="The request failed due to an underlying issue such as network connectivity, DNS failure, server certificate validation (or timeout for .NET Framework only).">要求因為根本問題而失敗，例如網路連線、DNS 失敗、伺服器憑證驗證或逾時 (僅限 .NET Framework)。</exception>
      <exception cref="T:System.Threading.Tasks.TaskCanceledException" vsli:raw=".NET Core and .NET 5 and later only: The request failed due to timeout.">僅限 .NET Core 與 .NET 5.0 和更新版本：要求因逾時而失敗。</exception>
      <returns vsli:raw="The task object representing the asynchronous operation.">工作物件，表示非同步作業。</returns>
    </member>
    <member name="M:System.Net.Http.HttpClient.GetStringAsync(System.String)">
      <summary vsli:raw="Send a GET request to the specified Uri and return the response body as a string in an asynchronous operation.">將 GET 要求傳送至指定的 URI，並透過非同步作業，以字串形式傳回回應內容。</summary>
      <param name="requestUri" vsli:raw="The Uri the request is sent to.">傳送要求的目標 URI。</param>
      <exception cref="T:System.InvalidOperationException" vsli:raw="The &lt;paramref name=&quot;requestUri&quot; /&gt; must be an absolute URI or &lt;see cref=&quot;P:System.Net.Http.HttpClient.BaseAddress&quot; /&gt; must be set.">
        <paramref name="requestUri" /> 必須是絕對 URI，否則必須設定 <see cref="P:System.Net.Http.HttpClient.BaseAddress" />。</exception>
      <exception cref="T:System.Net.Http.HttpRequestException" vsli:raw="The request failed due to an underlying issue such as network connectivity, DNS failure, server certificate validation (or timeout for .NET Framework only).">要求因為根本問題而失敗，例如網路連線、DNS 失敗、伺服器憑證驗證或逾時 (僅限 .NET Framework)。</exception>
      <exception cref="T:System.Threading.Tasks.TaskCanceledException" vsli:raw=".NET Core and .NET 5 and later only: The request failed due to timeout.">僅限 .NET Core 與 .NET 5.0 和更新版本：要求因逾時而失敗。</exception>
      <returns vsli:raw="The task object representing the asynchronous operation.">工作物件，表示非同步作業。</returns>
    </member>
    <member name="M:System.Net.Http.HttpClient.GetStringAsync(System.String,System.Threading.CancellationToken)">
      <summary vsli:raw="Send a GET request to the specified Uri and return the response body as a string in an asynchronous operation.">將 GET 要求傳送至指定的 URI，並透過非同步作業，以字串形式傳回回應內容。</summary>
      <param name="requestUri" vsli:raw="The Uri the request is sent to.">傳送要求的目標 URI。</param>
      <param name="cancellationToken" vsli:raw="The cancellation token to cancel the operation.">用於取消作業的取消權杖。</param>
      <exception cref="T:System.ArgumentNullException" vsli:raw="The &lt;paramref name=&quot;requestUri&quot; /&gt; is &lt;see langword=&quot;null&quot; /&gt;.">
        <paramref name="requestUri" /> 為 <see langword="null" />。</exception>
      <exception cref="T:System.Net.Http.HttpRequestException" vsli:raw="The request failed due to an underlying issue such as network connectivity, DNS failure, server certificate validation (or timeout for .NET Framework only).">要求因為根本問題而失敗，例如網路連線、DNS 失敗、伺服器憑證驗證或逾時 (僅限 .NET Framework)。</exception>
      <exception cref="T:System.Threading.Tasks.TaskCanceledException" vsli:raw=".NET Core and .NET 5 and later only: The request failed due to timeout.">僅限 .NET Core 與 .NET 5.0 和更新版本：要求因逾時而失敗。</exception>
      <returns vsli:raw="The task object representing the asynchronous operation.">工作物件，表示非同步作業。</returns>
    </member>
    <member name="M:System.Net.Http.HttpClient.GetStringAsync(System.Uri)">
      <summary vsli:raw="Send a GET request to the specified Uri and return the response body as a string in an asynchronous operation.">將 GET 要求傳送至指定的 URI，並透過非同步作業，以字串形式傳回回應內容。</summary>
      <param name="requestUri" vsli:raw="The Uri the request is sent to.">傳送要求的目標 URI。</param>
      <exception cref="T:System.InvalidOperationException" vsli:raw="The &lt;paramref name=&quot;requestUri&quot; /&gt; must be an absolute URI or &lt;see cref=&quot;P:System.Net.Http.HttpClient.BaseAddress&quot; /&gt; must be set.">
        <paramref name="requestUri" /> 必須是絕對 URI，否則必須設定 <see cref="P:System.Net.Http.HttpClient.BaseAddress" />。</exception>
      <exception cref="T:System.Net.Http.HttpRequestException" vsli:raw="The request failed due to an underlying issue such as network connectivity, DNS failure, server certificate validation (or timeout for .NET Framework only).">要求因為根本問題而失敗，例如網路連線、DNS 失敗、伺服器憑證驗證或逾時 (僅限 .NET Framework)。</exception>
      <exception cref="T:System.Threading.Tasks.TaskCanceledException" vsli:raw=".NET Core and .NET 5 and later only: The request failed due to timeout.">僅限 .NET Core 與 .NET 5.0 和更新版本：要求因逾時而失敗。</exception>
      <returns vsli:raw="The task object representing the asynchronous operation.">工作物件，表示非同步作業。</returns>
    </member>
    <member name="M:System.Net.Http.HttpClient.GetStringAsync(System.Uri,System.Threading.CancellationToken)">
      <summary vsli:raw="Send a GET request to the specified Uri and return the response body as a string in an asynchronous operation.">將 GET 要求傳送至指定的 URI，並透過非同步作業，以字串形式傳回回應內容。</summary>
      <param name="requestUri" vsli:raw="The Uri the request is sent to.">傳送要求的目標 URI。</param>
      <param name="cancellationToken" vsli:raw="The cancellation token to cancel the operation.">用於取消作業的取消權杖。</param>
      <exception cref="T:System.ArgumentNullException" vsli:raw="The &lt;paramref name=&quot;requestUri&quot; /&gt; is &lt;see langword=&quot;null&quot; /&gt;.">
        <paramref name="requestUri" /> 為 <see langword="null" />。</exception>
      <exception cref="T:System.Net.Http.HttpRequestException" vsli:raw="The request failed due to an underlying issue such as network connectivity, DNS failure, server certificate validation (or timeout for .NET Framework only).">要求因為根本問題而失敗，例如網路連線、DNS 失敗、伺服器憑證驗證或逾時 (僅限 .NET Framework)。</exception>
      <exception cref="T:System.Threading.Tasks.TaskCanceledException" vsli:raw=".NET Core and .NET 5 and later only: The request failed due to timeout.">僅限 .NET Core 與 .NET 5.0 和更新版本：要求因逾時而失敗。</exception>
      <returns vsli:raw="The task object representing the asynchronous operation.">工作物件，表示非同步作業。</returns>
    </member>
    <member name="M:System.Net.Http.HttpClient.PatchAsync(System.String,System.Net.Http.HttpContent)">
      <summary vsli:raw="Sends a PATCH request to a Uri designated as a string as an asynchronous operation.">以非同步作業的方式，將 PATCH 要求傳送至指定為字串的 URI。</summary>
      <param name="requestUri" vsli:raw="The Uri the request is sent to.">傳送要求的目標 URI。</param>
      <param name="content" vsli:raw="The HTTP request content sent to the server.">傳送至伺服器的 HTTP 要求內容。</param>
      <returns vsli:raw="The task object representing the asynchronous operation.">工作物件，表示非同步作業。</returns>
    </member>
    <member name="M:System.Net.Http.HttpClient.PatchAsync(System.String,System.Net.Http.HttpContent,System.Threading.CancellationToken)">
      <summary vsli:raw="Sends a PATCH request with a cancellation token to a Uri represented as a string as an asynchronous operation.">以非同步作業的方式，將 PATCH 要求和取消權杖傳送至以字串表示的 URI。</summary>
      <param name="requestUri" vsli:raw="The Uri the request is sent to.">傳送要求的目標 URI。</param>
      <param name="content" vsli:raw="The HTTP request content sent to the server.">傳送至伺服器的 HTTP 要求內容。</param>
      <param name="cancellationToken" vsli:raw="A cancellation token that can be used by other objects or threads to receive notice of cancellation.">取消語彙基元，可由其他物件或執行緒用來接收取消通知。</param>
      <returns vsli:raw="The task object representing the asynchronous operation.">工作物件，表示非同步作業。</returns>
    </member>
    <member name="M:System.Net.Http.HttpClient.PatchAsync(System.Uri,System.Net.Http.HttpContent)">
      <summary vsli:raw="Sends a PATCH request as an asynchronous operation.">以非同步作業的方式傳送 PATCH 要求。</summary>
      <param name="requestUri" vsli:raw="The Uri the request is sent to.">傳送要求的目標 URI。</param>
      <param name="content" vsli:raw="The HTTP request content sent to the server.">傳送至伺服器的 HTTP 要求內容。</param>
      <returns vsli:raw="The task object representing the asynchronous operation.">工作物件，表示非同步作業。</returns>
    </member>
    <member name="M:System.Net.Http.HttpClient.PatchAsync(System.Uri,System.Net.Http.HttpContent,System.Threading.CancellationToken)">
      <summary vsli:raw="Sends a PATCH request with a cancellation token as an asynchronous operation.">以非同步作業的方式，傳送 PATCH 要求和取消語彙基元。</summary>
      <param name="requestUri" vsli:raw="The Uri the request is sent to.">傳送要求的目標 URI。</param>
      <param name="content" vsli:raw="The HTTP request content sent to the server.">傳送至伺服器的 HTTP 要求內容。</param>
      <param name="cancellationToken" vsli:raw="A cancellation token that can be used by other objects or threads to receive notice of cancellation.">取消語彙基元，可由其他物件或執行緒用來接收取消通知。</param>
      <returns vsli:raw="The task object representing the asynchronous operation.">工作物件，表示非同步作業。</returns>
    </member>
    <member name="M:System.Net.Http.HttpClient.PostAsync(System.String,System.Net.Http.HttpContent)">
      <summary vsli:raw="Send a POST request to the specified Uri as an asynchronous operation.">以非同步作業的方式，將 POST 要求傳送至指定的 URI。</summary>
      <param name="requestUri" vsli:raw="The Uri the request is sent to.">傳送要求的目標 URI。</param>
      <param name="content" vsli:raw="The HTTP request content sent to the server.">傳送至伺服器的 HTTP 要求內容。</param>
      <exception cref="T:System.InvalidOperationException" vsli:raw="The &lt;paramref name=&quot;requestUri&quot; /&gt; must be an absolute URI or &lt;see cref=&quot;P:System.Net.Http.HttpClient.BaseAddress&quot; /&gt; must be set.">
        <paramref name="requestUri" /> 必須是絕對 URI，否則必須設定 <see cref="P:System.Net.Http.HttpClient.BaseAddress" />。</exception>
      <exception cref="T:System.Net.Http.HttpRequestException" vsli:raw="The request failed due to an underlying issue such as network connectivity, DNS failure, server certificate validation or timeout.">要求已因基本問題 (例如網路連線、DNS 失敗、伺服器憑證驗證或逾時) 而失敗。</exception>
      <exception cref="T:System.Threading.Tasks.TaskCanceledException" vsli:raw=".NET Core and .NET 5 and later only: The request failed due to timeout.">僅限 .NET Core 與 .NET 5.0 和更新版本：要求因逾時而失敗。</exception>
      <returns vsli:raw="The task object representing the asynchronous operation.">工作物件，表示非同步作業。</returns>
    </member>
    <member name="M:System.Net.Http.HttpClient.PostAsync(System.String,System.Net.Http.HttpContent,System.Threading.CancellationToken)">
      <summary vsli:raw="Send a POST request with a cancellation token as an asynchronous operation.">以非同步作業的方式，傳送 POST 要求和取消語彙基元。</summary>
      <param name="requestUri" vsli:raw="The Uri the request is sent to.">傳送要求的目標 URI。</param>
      <param name="content" vsli:raw="The HTTP request content sent to the server.">傳送至伺服器的 HTTP 要求內容。</param>
      <param name="cancellationToken" vsli:raw="A cancellation token that can be used by other objects or threads to receive notice of cancellation.">取消語彙基元，可由其他物件或執行緒用來接收取消通知。</param>
      <exception cref="T:System.InvalidOperationException" vsli:raw="The &lt;paramref name=&quot;requestUri&quot; /&gt; must be an absolute URI or &lt;see cref=&quot;P:System.Net.Http.HttpClient.BaseAddress&quot; /&gt; must be set.">
        <paramref name="requestUri" /> 必須是絕對 URI，否則必須設定 <see cref="P:System.Net.Http.HttpClient.BaseAddress" />。</exception>
      <exception cref="T:System.Net.Http.HttpRequestException" vsli:raw="The request failed due to an underlying issue such as network connectivity, DNS failure, server certificate validation or timeout.">要求已因基本問題 (例如網路連線、DNS 失敗、伺服器憑證驗證或逾時) 而失敗。</exception>
      <exception cref="T:System.Threading.Tasks.TaskCanceledException" vsli:raw=".NET Core and .NET 5 and later only: The request failed due to timeout.">僅限 .NET Core 與 .NET 5.0 和更新版本：要求因逾時而失敗。</exception>
      <returns vsli:raw="The task object representing the asynchronous operation.">工作物件，表示非同步作業。</returns>
    </member>
    <member name="M:System.Net.Http.HttpClient.PostAsync(System.Uri,System.Net.Http.HttpContent)">
      <summary vsli:raw="Send a POST request to the specified Uri as an asynchronous operation.">以非同步作業的方式，將 POST 要求傳送至指定的 URI。</summary>
      <param name="requestUri" vsli:raw="The Uri the request is sent to.">傳送要求的目標 URI。</param>
      <param name="content" vsli:raw="The HTTP request content sent to the server.">傳送至伺服器的 HTTP 要求內容。</param>
      <exception cref="T:System.InvalidOperationException" vsli:raw="The &lt;paramref name=&quot;requestUri&quot; /&gt; must be an absolute URI or &lt;see cref=&quot;P:System.Net.Http.HttpClient.BaseAddress&quot; /&gt; must be set.">
        <paramref name="requestUri" /> 必須是絕對 URI，否則必須設定 <see cref="P:System.Net.Http.HttpClient.BaseAddress" />。</exception>
      <exception cref="T:System.Net.Http.HttpRequestException" vsli:raw="The request failed due to an underlying issue such as network connectivity, DNS failure, server certificate validation or timeout.">要求已因基本問題 (例如網路連線、DNS 失敗、伺服器憑證驗證或逾時) 而失敗。</exception>
      <exception cref="T:System.Threading.Tasks.TaskCanceledException" vsli:raw=".NET Core and .NET 5 and later only: The request failed due to timeout.">僅限 .NET Core 與 .NET 5.0 和更新版本：要求因逾時而失敗。</exception>
      <returns vsli:raw="The task object representing the asynchronous operation.">工作物件，表示非同步作業。</returns>
    </member>
    <member name="M:System.Net.Http.HttpClient.PostAsync(System.Uri,System.Net.Http.HttpContent,System.Threading.CancellationToken)">
      <summary vsli:raw="Send a POST request with a cancellation token as an asynchronous operation.">以非同步作業的方式，傳送 POST 要求和取消語彙基元。</summary>
      <param name="requestUri" vsli:raw="The Uri the request is sent to.">傳送要求的目標 URI。</param>
      <param name="content" vsli:raw="The HTTP request content sent to the server.">傳送至伺服器的 HTTP 要求內容。</param>
      <param name="cancellationToken" vsli:raw="A cancellation token that can be used by other objects or threads to receive notice of cancellation.">取消語彙基元，可由其他物件或執行緒用來接收取消通知。</param>
      <exception cref="T:System.InvalidOperationException" vsli:raw="The &lt;paramref name=&quot;requestUri&quot; /&gt; must be an absolute URI or &lt;see cref=&quot;P:System.Net.Http.HttpClient.BaseAddress&quot; /&gt; must be set.">
        <paramref name="requestUri" /> 必須是絕對 URI，否則必須設定 <see cref="P:System.Net.Http.HttpClient.BaseAddress" />。</exception>
      <exception cref="T:System.Net.Http.HttpRequestException" vsli:raw="The request failed due to an underlying issue such as network connectivity, DNS failure, server certificate validation or timeout.">要求已因基本問題 (例如網路連線、DNS 失敗、伺服器憑證驗證或逾時) 而失敗。</exception>
      <exception cref="T:System.Threading.Tasks.TaskCanceledException" vsli:raw=".NET Core and .NET 5 and later only: The request failed due to timeout.">僅限 .NET Core 與 .NET 5.0 和更新版本：要求因逾時而失敗。</exception>
      <returns vsli:raw="The task object representing the asynchronous operation.">工作物件，表示非同步作業。</returns>
    </member>
    <member name="M:System.Net.Http.HttpClient.PutAsync(System.String,System.Net.Http.HttpContent)">
      <summary vsli:raw="Send a PUT request to the specified Uri as an asynchronous operation.">以非同步作業的方式，將 PUT 要求傳送至指定的 URI。</summary>
      <param name="requestUri" vsli:raw="The Uri the request is sent to.">傳送要求的目標 URI。</param>
      <param name="content" vsli:raw="The HTTP request content sent to the server.">傳送至伺服器的 HTTP 要求內容。</param>
      <exception cref="T:System.InvalidOperationException" vsli:raw="The &lt;paramref name=&quot;requestUri&quot; /&gt; must be an absolute URI or &lt;see cref=&quot;P:System.Net.Http.HttpClient.BaseAddress&quot; /&gt; must be set.">
        <paramref name="requestUri" /> 必須是絕對 URI，否則必須設定 <see cref="P:System.Net.Http.HttpClient.BaseAddress" />。</exception>
      <exception cref="T:System.Net.Http.HttpRequestException" vsli:raw="The request failed due to an underlying issue such as network connectivity, DNS failure, server certificate validation or timeout.">要求已因基本問題 (例如網路連線、DNS 失敗、伺服器憑證驗證或逾時) 而失敗。</exception>
      <exception cref="T:System.Threading.Tasks.TaskCanceledException" vsli:raw=".NET Core and .NET 5 and later only: The request failed due to timeout.">僅限 .NET Core 與 .NET 5.0 和更新版本：要求因逾時而失敗。</exception>
      <returns vsli:raw="The task object representing the asynchronous operation.">工作物件，表示非同步作業。</returns>
    </member>
    <member name="M:System.Net.Http.HttpClient.PutAsync(System.String,System.Net.Http.HttpContent,System.Threading.CancellationToken)">
      <summary vsli:raw="Send a PUT request with a cancellation token as an asynchronous operation.">以非同步作業的方式，傳送 PUT 要求和取消語彙基元。</summary>
      <param name="requestUri" vsli:raw="The Uri the request is sent to.">傳送要求的目標 URI。</param>
      <param name="content" vsli:raw="The HTTP request content sent to the server.">傳送至伺服器的 HTTP 要求內容。</param>
      <param name="cancellationToken" vsli:raw="A cancellation token that can be used by other objects or threads to receive notice of cancellation.">取消語彙基元，可由其他物件或執行緒用來接收取消通知。</param>
      <exception cref="T:System.InvalidOperationException" vsli:raw="The &lt;paramref name=&quot;requestUri&quot; /&gt; must be an absolute URI or &lt;see cref=&quot;P:System.Net.Http.HttpClient.BaseAddress&quot; /&gt; must be set.">
        <paramref name="requestUri" /> 必須是絕對 URI，否則必須設定 <see cref="P:System.Net.Http.HttpClient.BaseAddress" />。</exception>
      <exception cref="T:System.Net.Http.HttpRequestException" vsli:raw="The request failed due to an underlying issue such as network connectivity, DNS failure, server certificate validation or timeout.">要求已因基本問題 (例如網路連線、DNS 失敗、伺服器憑證驗證或逾時) 而失敗。</exception>
      <exception cref="T:System.Threading.Tasks.TaskCanceledException" vsli:raw=".NET Core and .NET 5 and later only: The request failed due to timeout.">僅限 .NET Core 與 .NET 5.0 和更新版本：要求因逾時而失敗。</exception>
      <returns vsli:raw="The task object representing the asynchronous operation.">工作物件，表示非同步作業。</returns>
    </member>
    <member name="M:System.Net.Http.HttpClient.PutAsync(System.Uri,System.Net.Http.HttpContent)">
      <summary vsli:raw="Send a PUT request to the specified Uri as an asynchronous operation.">以非同步作業的方式，將 PUT 要求傳送至指定的 URI。</summary>
      <param name="requestUri" vsli:raw="The Uri the request is sent to.">傳送要求的目標 URI。</param>
      <param name="content" vsli:raw="The HTTP request content sent to the server.">傳送至伺服器的 HTTP 要求內容。</param>
      <exception cref="T:System.InvalidOperationException" vsli:raw="The &lt;paramref name=&quot;requestUri&quot; /&gt; must be an absolute URI or &lt;see cref=&quot;P:System.Net.Http.HttpClient.BaseAddress&quot; /&gt; must be set.">
        <paramref name="requestUri" /> 必須是絕對 URI，否則必須設定 <see cref="P:System.Net.Http.HttpClient.BaseAddress" />。</exception>
      <exception cref="T:System.Net.Http.HttpRequestException" vsli:raw="The request failed due to an underlying issue such as network connectivity, DNS failure, server certificate validation or timeout.">要求已因基本問題 (例如網路連線、DNS 失敗、伺服器憑證驗證或逾時) 而失敗。</exception>
      <exception cref="T:System.Threading.Tasks.TaskCanceledException" vsli:raw=".NET Core and .NET 5 and later only: The request failed due to timeout.">僅限 .NET Core 與 .NET 5.0 和更新版本：要求因逾時而失敗。</exception>
      <returns vsli:raw="The task object representing the asynchronous operation.">工作物件，表示非同步作業。</returns>
    </member>
    <member name="M:System.Net.Http.HttpClient.PutAsync(System.Uri,System.Net.Http.HttpContent,System.Threading.CancellationToken)">
      <summary vsli:raw="Send a PUT request with a cancellation token as an asynchronous operation.">以非同步作業的方式，傳送 PUT 要求和取消語彙基元。</summary>
      <param name="requestUri" vsli:raw="The Uri the request is sent to.">傳送要求的目標 URI。</param>
      <param name="content" vsli:raw="The HTTP request content sent to the server.">傳送至伺服器的 HTTP 要求內容。</param>
      <param name="cancellationToken" vsli:raw="A cancellation token that can be used by other objects or threads to receive notice of cancellation.">取消語彙基元，可由其他物件或執行緒用來接收取消通知。</param>
      <exception cref="T:System.InvalidOperationException" vsli:raw="The &lt;paramref name=&quot;requestUri&quot; /&gt; must be an absolute URI or &lt;see cref=&quot;P:System.Net.Http.HttpClient.BaseAddress&quot; /&gt; must be set.">
        <paramref name="requestUri" /> 必須是絕對 URI，否則必須設定 <see cref="P:System.Net.Http.HttpClient.BaseAddress" />。</exception>
      <exception cref="T:System.Net.Http.HttpRequestException" vsli:raw="The request failed due to an underlying issue such as network connectivity, DNS failure, server certificate validation or timeout.">要求已因基本問題 (例如網路連線、DNS 失敗、伺服器憑證驗證或逾時) 而失敗。</exception>
      <exception cref="T:System.Threading.Tasks.TaskCanceledException" vsli:raw=".NET Core and .NET 5 and later only: The request failed due to timeout.">僅限 .NET Core 與 .NET 5.0 和更新版本：要求因逾時而失敗。</exception>
      <returns vsli:raw="The task object representing the asynchronous operation.">工作物件，表示非同步作業。</returns>
    </member>
    <member name="M:System.Net.Http.HttpClient.Send(System.Net.Http.HttpRequestMessage)">
      <summary vsli:raw="Sends an HTTP request with the specified request.">使用指定的要求傳送 HTTP 要求。</summary>
      <param name="request" vsli:raw="The HTTP request message to send.">要傳送的 HTTP 要求訊息。</param>
      <exception cref="T:System.ArgumentNullException" vsli:raw="The &lt;paramref name=&quot;request&quot; /&gt; is &lt;see langword=&quot;null&quot; /&gt;.">
        <paramref name="request" /> 為 <see langword="null" />。</exception>
      <exception cref="T:System.NotSupportedException" vsli:raw="The HTTP version is 2.0 or higher or the version policy is set to &lt;see cref=&quot;F:System.Net.Http.HttpVersionPolicy.RequestVersionOrHigher&quot; /&gt;.&#xA;&#xA; -or-&#xA;&#xA;The custom class derived from &lt;see cref=&quot;T:System.Net.Http.HttpContent&quot; /&gt; does not override the &lt;see cref=&quot;M:System.Net.Http.HttpContent.SerializeToStream(System.IO.Stream,System.Net.TransportContext,System.Threading.CancellationToken)&quot; /&gt; method.&#xA;&#xA; -or-&#xA;&#xA;The custom &lt;see cref=&quot;T:System.Net.Http.HttpMessageHandler&quot; /&gt; does not override the &lt;see cref=&quot;M:System.Net.Http.HttpMessageHandler.Send(System.Net.Http.HttpRequestMessage,System.Threading.CancellationToken)&quot; /&gt; method.">HTTP 版本為2.0 或更高版本，或者版本原則設定為 <see cref="F:System.Net.Http.HttpVersionPolicy.RequestVersionOrHigher" />。

-或-

衍生自 <see cref="T:System.Net.Http.HttpContent" /> 的自訂類別不會覆寫 <see cref="M:System.Net.Http.HttpContent.SerializeToStream(System.IO.Stream,System.Net.TransportContext,System.Threading.CancellationToken)" /> 方法。

-或-

自訂的 <see cref="T:System.Net.Http.HttpMessageHandler" /> 不會覆寫 <see cref="M:System.Net.Http.HttpMessageHandler.Send(System.Net.Http.HttpRequestMessage,System.Threading.CancellationToken)" /> 方法。</exception>
      <exception cref="T:System.InvalidOperationException" vsli:raw="The request message was already sent by the &lt;see cref=&quot;T:System.Net.Http.HttpClient&quot; /&gt; instance.">要求訊息已經透過 <see cref="T:System.Net.Http.HttpClient" /> 執行個體傳送。</exception>
      <exception cref="T:System.Net.Http.HttpRequestException" vsli:raw="The request failed due to an underlying issue such as network connectivity, DNS failure, or server certificate validation.">要求因為基本問題 (例如網路連線、DNS 失敗、伺服器憑證驗證) 而失敗。</exception>
      <exception cref="T:System.Threading.Tasks.TaskCanceledException" vsli:raw="If the &lt;see cref=&quot;T:System.Threading.Tasks.TaskCanceledException&quot; /&gt; exception nests the &lt;see cref=&quot;T:System.TimeoutException&quot; /&gt;:&#xA; The request failed due to timeout.">如果 <see cref="T:System.Threading.Tasks.TaskCanceledException" /> 例外狀況內嵌 <see cref="T:System.TimeoutException" />：要求因逾時而失敗。</exception>
      <returns vsli:raw="An HTTP response message.">HTTP 回應訊息。</returns>
    </member>
    <member name="M:System.Net.Http.HttpClient.Send(System.Net.Http.HttpRequestMessage,System.Net.Http.HttpCompletionOption)">
      <summary vsli:raw="Sends an HTTP request.">傳送 HTTP 要求。</summary>
      <param name="request" vsli:raw="The HTTP request message to send.">要傳送的 HTTP 要求訊息。</param>
      <param name="completionOption" vsli:raw="One of the enumeration values that specifies when the operation should complete (as soon as a response is available or after reading the response content).">指定作業應該完成的時間 (可取得回應時或讀取整個回應內容之後) 的其中一個列舉值。</param>
      <exception cref="T:System.ArgumentNullException" vsli:raw="The &lt;paramref name=&quot;request&quot; /&gt; is &lt;see langword=&quot;null&quot; /&gt;.">
        <paramref name="request" /> 為 <see langword="null" />。</exception>
      <exception cref="T:System.NotSupportedException" vsli:raw="The HTTP version is 2.0 or higher or the version policy is set to &lt;see cref=&quot;F:System.Net.Http.HttpVersionPolicy.RequestVersionOrHigher&quot; /&gt;.&#xA;&#xA; -or-&#xA;&#xA; The custom class derived from &lt;see cref=&quot;T:System.Net.Http.HttpContent&quot; /&gt; does not override the &lt;see cref=&quot;M:System.Net.Http.HttpContent.SerializeToStream(System.IO.Stream,System.Net.TransportContext,System.Threading.CancellationToken)&quot; /&gt; method.&#xA;&#xA; -or-&#xA;&#xA;The custom &lt;see cref=&quot;T:System.Net.Http.HttpMessageHandler&quot; /&gt; does not override the &lt;see cref=&quot;M:System.Net.Http.HttpMessageHandler.Send(System.Net.Http.HttpRequestMessage,System.Threading.CancellationToken)&quot; /&gt; method.">HTTP 版本為2.0 或更高版本，或者版本原則設定為 <see cref="F:System.Net.Http.HttpVersionPolicy.RequestVersionOrHigher" />。

-或-

衍生自 <see cref="T:System.Net.Http.HttpContent" /> 的自訂類別不會覆寫 <see cref="M:System.Net.Http.HttpContent.SerializeToStream(System.IO.Stream,System.Net.TransportContext,System.Threading.CancellationToken)" /> 方法。

-或-

自訂的 <see cref="T:System.Net.Http.HttpMessageHandler" /> 不會覆寫 <see cref="M:System.Net.Http.HttpMessageHandler.Send(System.Net.Http.HttpRequestMessage,System.Threading.CancellationToken)" /> 方法。</exception>
      <exception cref="T:System.InvalidOperationException" vsli:raw="The request message was already sent by the &lt;see cref=&quot;T:System.Net.Http.HttpClient&quot; /&gt; instance.">要求訊息已經透過 <see cref="T:System.Net.Http.HttpClient" /> 執行個體傳送。</exception>
      <exception cref="T:System.Net.Http.HttpRequestException" vsli:raw="The request failed due to an underlying issue such as network connectivity, DNS failure, or server certificate validation.">要求因為基本問題 (例如網路連線、DNS 失敗、伺服器憑證驗證) 而失敗。</exception>
      <exception cref="T:System.Threading.Tasks.TaskCanceledException" vsli:raw="If the &lt;see cref=&quot;T:System.Threading.Tasks.TaskCanceledException&quot; /&gt; exception nests the &lt;see cref=&quot;T:System.TimeoutException&quot; /&gt;:&#xA; The request failed due to timeout.">如果 <see cref="T:System.Threading.Tasks.TaskCanceledException" /> 例外狀況內嵌 <see cref="T:System.TimeoutException" />：要求因逾時而失敗。</exception>
      <returns vsli:raw="The HTTP response message.">HTTP 回應訊息。</returns>
    </member>
    <member name="M:System.Net.Http.HttpClient.Send(System.Net.Http.HttpRequestMessage,System.Net.Http.HttpCompletionOption,System.Threading.CancellationToken)">
      <summary vsli:raw="Sends an HTTP request with the specified request, completion option and cancellation token.">使用指定的要求和取消權杖來傳送 HTTP 要求。</summary>
      <param name="request" vsli:raw="The HTTP request message to send.">要傳送的 HTTP 要求訊息。</param>
      <param name="completionOption" vsli:raw="One of the enumeration values that specifies when the operation should complete (as soon as a response is available or after reading the response content).">指定作業應該完成的時間 (可取得回應時或讀取整個回應內容之後) 的其中一個列舉值。</param>
      <param name="cancellationToken" vsli:raw="The token to cancel the operation.">用於取消作業的權杖。</param>
      <exception cref="T:System.ArgumentNullException" vsli:raw="The &lt;paramref name=&quot;request&quot; /&gt; is &lt;see langword=&quot;null&quot; /&gt;.">
        <paramref name="request" /> 為 <see langword="null" />。</exception>
      <exception cref="T:System.NotSupportedException" vsli:raw="The HTTP version is 2.0 or higher or the version policy is set to &lt;see cref=&quot;F:System.Net.Http.HttpVersionPolicy.RequestVersionOrHigher&quot; /&gt;.&#xA;&#xA; -or-&#xA;&#xA; The custom class derived from &lt;see cref=&quot;T:System.Net.Http.HttpContent&quot; /&gt; does not override the &lt;see cref=&quot;M:System.Net.Http.HttpContent.SerializeToStream(System.IO.Stream,System.Net.TransportContext,System.Threading.CancellationToken)&quot; /&gt; method.&#xA;&#xA; -or-&#xA;&#xA;The custom &lt;see cref=&quot;T:System.Net.Http.HttpMessageHandler&quot; /&gt; does not override the &lt;see cref=&quot;M:System.Net.Http.HttpMessageHandler.Send(System.Net.Http.HttpRequestMessage,System.Threading.CancellationToken)&quot; /&gt; method.">HTTP 版本為2.0 或更高版本，或者版本原則設定為 <see cref="F:System.Net.Http.HttpVersionPolicy.RequestVersionOrHigher" />。

-或-

衍生自 <see cref="T:System.Net.Http.HttpContent" /> 的自訂類別不會覆寫 <see cref="M:System.Net.Http.HttpContent.SerializeToStream(System.IO.Stream,System.Net.TransportContext,System.Threading.CancellationToken)" /> 方法。

-或-

自訂的 <see cref="T:System.Net.Http.HttpMessageHandler" /> 不會覆寫 <see cref="M:System.Net.Http.HttpMessageHandler.Send(System.Net.Http.HttpRequestMessage,System.Threading.CancellationToken)" /> 方法。</exception>
      <exception cref="T:System.InvalidOperationException" vsli:raw="The request message was already sent by the &lt;see cref=&quot;T:System.Net.Http.HttpClient&quot; /&gt; instance.">要求訊息已經透過 <see cref="T:System.Net.Http.HttpClient" /> 執行個體傳送。</exception>
      <exception cref="T:System.Net.Http.HttpRequestException" vsli:raw="The request failed due to an underlying issue such as network connectivity, DNS failure, or server certificate validation.">要求因為基本問題 (例如網路連線、DNS 失敗、伺服器憑證驗證) 而失敗。</exception>
      <exception cref="T:System.Threading.Tasks.TaskCanceledException" vsli:raw="The request was canceled.&#xA;&#xA; -or-&#xA;&#xA; If the &lt;see cref=&quot;T:System.Threading.Tasks.TaskCanceledException&quot; /&gt; exception nests the &lt;see cref=&quot;T:System.TimeoutException&quot; /&gt;:&#xA; The request failed due to timeout.">已取消要求。

-或-

如果 <see cref="T:System.Threading.Tasks.TaskCanceledException" /> 例外狀況內嵌 <see cref="T:System.TimeoutException" />：要求因逾時而失敗。</exception>
      <returns vsli:raw="The HTTP response message.">HTTP 回應訊息。</returns>
    </member>
    <member name="M:System.Net.Http.HttpClient.Send(System.Net.Http.HttpRequestMessage,System.Threading.CancellationToken)">
      <summary vsli:raw="Sends an HTTP request with the specified request and cancellation token.">使用指定的要求和取消權杖來傳送 HTTP 要求。</summary>
      <param name="request" vsli:raw="The HTTP request message to send.">要傳送的 HTTP 要求訊息。</param>
      <param name="cancellationToken" vsli:raw="The token to cancel the operation.">用於取消作業的權杖。</param>
      <exception cref="T:System.ArgumentNullException" vsli:raw="The &lt;paramref name=&quot;request&quot; /&gt; is &lt;see langword=&quot;null&quot; /&gt;.">
        <paramref name="request" /> 為 <see langword="null" />。</exception>
      <exception cref="T:System.NotSupportedException" vsli:raw="The HTTP version is 2.0 or higher or the version policy is set to &lt;see cref=&quot;F:System.Net.Http.HttpVersionPolicy.RequestVersionOrHigher&quot; /&gt;.&#xA;&#xA; -or-&#xA;&#xA; The custom class derived from &lt;see cref=&quot;T:System.Net.Http.HttpContent&quot; /&gt; does not override the &lt;see cref=&quot;M:System.Net.Http.HttpContent.SerializeToStream(System.IO.Stream,System.Net.TransportContext,System.Threading.CancellationToken)&quot; /&gt; method.&#xA;&#xA; -or-&#xA;&#xA;The custom &lt;see cref=&quot;T:System.Net.Http.HttpMessageHandler&quot; /&gt; does not override the &lt;see cref=&quot;M:System.Net.Http.HttpMessageHandler.Send(System.Net.Http.HttpRequestMessage,System.Threading.CancellationToken)&quot; /&gt; method.">HTTP 版本為2.0 或更高版本，或者版本原則設定為 <see cref="F:System.Net.Http.HttpVersionPolicy.RequestVersionOrHigher" />。

-或-

衍生自 <see cref="T:System.Net.Http.HttpContent" /> 的自訂類別不會覆寫 <see cref="M:System.Net.Http.HttpContent.SerializeToStream(System.IO.Stream,System.Net.TransportContext,System.Threading.CancellationToken)" /> 方法。

-或-

自訂的 <see cref="T:System.Net.Http.HttpMessageHandler" /> 不會覆寫 <see cref="M:System.Net.Http.HttpMessageHandler.Send(System.Net.Http.HttpRequestMessage,System.Threading.CancellationToken)" /> 方法。</exception>
      <exception cref="T:System.InvalidOperationException" vsli:raw="The request message was already sent by the &lt;see cref=&quot;T:System.Net.Http.HttpClient&quot; /&gt; instance.">要求訊息已經透過 <see cref="T:System.Net.Http.HttpClient" /> 執行個體傳送。</exception>
      <exception cref="T:System.Net.Http.HttpRequestException" vsli:raw="The request failed due to an underlying issue such as network connectivity, DNS failure, or server certificate validation.">要求因為基本問題 (例如網路連線、DNS 失敗、伺服器憑證驗證) 而失敗。</exception>
      <exception cref="T:System.Threading.Tasks.TaskCanceledException" vsli:raw="The request was canceled.&#xA;&#xA; -or-&#xA;&#xA; If the &lt;see cref=&quot;T:System.Threading.Tasks.TaskCanceledException&quot; /&gt; exception nests the &lt;see cref=&quot;T:System.TimeoutException&quot; /&gt;:&#xA; The request failed due to timeout.">已取消要求。

-或-

如果 <see cref="T:System.Threading.Tasks.TaskCanceledException" /> 例外狀況內嵌 <see cref="T:System.TimeoutException" />：要求因逾時而失敗。</exception>
      <returns vsli:raw="The HTTP response message.">HTTP 回應訊息。</returns>
    </member>
    <member name="M:System.Net.Http.HttpClient.SendAsync(System.Net.Http.HttpRequestMessage)">
      <summary vsli:raw="Send an HTTP request as an asynchronous operation.">以非同步作業的方式，傳送 HTTP 要求。</summary>
      <param name="request" vsli:raw="The HTTP request message to send.">要傳送的 HTTP 要求訊息。</param>
      <exception cref="T:System.ArgumentNullException" vsli:raw="The &lt;paramref name=&quot;request&quot; /&gt; is &lt;see langword=&quot;null&quot; /&gt;.">
        <paramref name="request" /> 為 <see langword="null" />。</exception>
      <exception cref="T:System.InvalidOperationException" vsli:raw="The request message was already sent by the &lt;see cref=&quot;T:System.Net.Http.HttpClient&quot; /&gt; instance.">要求訊息已經透過 <see cref="T:System.Net.Http.HttpClient" /> 執行個體傳送。</exception>
      <exception cref="T:System.Net.Http.HttpRequestException" vsli:raw="The request failed due to an underlying issue such as network connectivity, DNS failure, server certificate validation or timeout.">要求已因基本問題 (例如網路連線、DNS 失敗、伺服器憑證驗證或逾時) 而失敗。</exception>
      <exception cref="T:System.Threading.Tasks.TaskCanceledException" vsli:raw=".NET Core and .NET 5 and later only: The request failed due to timeout.">僅限 .NET Core 與 .NET 5.0 和更新版本：要求因逾時而失敗。</exception>
      <returns vsli:raw="The task object representing the asynchronous operation.">工作物件，表示非同步作業。</returns>
    </member>
    <member name="M:System.Net.Http.HttpClient.SendAsync(System.Net.Http.HttpRequestMessage,System.Net.Http.HttpCompletionOption)">
      <summary vsli:raw="Send an HTTP request as an asynchronous operation.">以非同步作業的方式，傳送 HTTP 要求。</summary>
      <param name="request" vsli:raw="The HTTP request message to send.">要傳送的 HTTP 要求訊息。</param>
      <param name="completionOption" vsli:raw="When the operation should complete (as soon as a response is available or after reading the whole response content).">當作業應該完成時 (可取得回應時或讀取整個回應內容之後)。</param>
      <exception cref="T:System.ArgumentNullException" vsli:raw="The &lt;paramref name=&quot;request&quot; /&gt; is &lt;see langword=&quot;null&quot; /&gt;.">
        <paramref name="request" /> 為 <see langword="null" />。</exception>
      <exception cref="T:System.InvalidOperationException" vsli:raw="The request message was already sent by the &lt;see cref=&quot;T:System.Net.Http.HttpClient&quot; /&gt; instance.">要求訊息已經透過 <see cref="T:System.Net.Http.HttpClient" /> 執行個體傳送。</exception>
      <exception cref="T:System.Net.Http.HttpRequestException" vsli:raw="The request failed due to an underlying issue such as network connectivity, DNS failure, server certificate validation or timeout.">要求已因基本問題 (例如網路連線、DNS 失敗、伺服器憑證驗證或逾時) 而失敗。</exception>
      <exception cref="T:System.Threading.Tasks.TaskCanceledException" vsli:raw=".NET Core and .NET 5 and later only: The request failed due to timeout.">僅限 .NET Core 與 .NET 5.0 和更新版本：要求因逾時而失敗。</exception>
      <returns vsli:raw="The task object representing the asynchronous operation.">工作物件，表示非同步作業。</returns>
    </member>
    <member name="M:System.Net.Http.HttpClient.SendAsync(System.Net.Http.HttpRequestMessage,System.Net.Http.HttpCompletionOption,System.Threading.CancellationToken)">
      <summary vsli:raw="Send an HTTP request as an asynchronous operation.">以非同步作業的方式，傳送 HTTP 要求。</summary>
      <param name="request" vsli:raw="The HTTP request message to send.">要傳送的 HTTP 要求訊息。</param>
      <param name="completionOption" vsli:raw="When the operation should complete (as soon as a response is available or after reading the whole response content).">當作業應該完成時 (可取得回應時或讀取整個回應內容之後)。</param>
      <param name="cancellationToken" vsli:raw="The cancellation token to cancel operation.">用於取消作業的取消語彙基元。</param>
      <exception cref="T:System.ArgumentNullException" vsli:raw="The &lt;paramref name=&quot;request&quot; /&gt; is &lt;see langword=&quot;null&quot; /&gt;.">
        <paramref name="request" /> 為 <see langword="null" />。</exception>
      <exception cref="T:System.InvalidOperationException" vsli:raw="The request message was already sent by the &lt;see cref=&quot;T:System.Net.Http.HttpClient&quot; /&gt; instance.">要求訊息已經透過 <see cref="T:System.Net.Http.HttpClient" /> 執行個體傳送。</exception>
      <exception cref="T:System.Net.Http.HttpRequestException" vsli:raw="The request failed due to an underlying issue such as network connectivity, DNS failure, server certificate validation or timeout.">要求已因基本問題 (例如網路連線、DNS 失敗、伺服器憑證驗證或逾時) 而失敗。</exception>
      <exception cref="T:System.Threading.Tasks.TaskCanceledException" vsli:raw=".NET Core and .NET 5 and later only: The request failed due to timeout.">僅限 .NET Core 與 .NET 5.0 和更新版本：要求因逾時而失敗。</exception>
      <returns vsli:raw="The task object representing the asynchronous operation.">工作物件，表示非同步作業。</returns>
    </member>
    <member name="M:System.Net.Http.HttpClient.SendAsync(System.Net.Http.HttpRequestMessage,System.Threading.CancellationToken)">
      <summary vsli:raw="Send an HTTP request as an asynchronous operation.">以非同步作業的方式，傳送 HTTP 要求。</summary>
      <param name="request" vsli:raw="The HTTP request message to send.">要傳送的 HTTP 要求訊息。</param>
      <param name="cancellationToken" vsli:raw="The cancellation token to cancel operation.">用於取消作業的取消語彙基元。</param>
      <exception cref="T:System.ArgumentNullException" vsli:raw="The &lt;paramref name=&quot;request&quot; /&gt; is &lt;see langword=&quot;null&quot; /&gt;.">
        <paramref name="request" /> 為 <see langword="null" />。</exception>
      <exception cref="T:System.InvalidOperationException" vsli:raw="The request message was already sent by the &lt;see cref=&quot;T:System.Net.Http.HttpClient&quot; /&gt; instance.">要求訊息已經透過 <see cref="T:System.Net.Http.HttpClient" /> 執行個體傳送。</exception>
      <exception cref="T:System.Net.Http.HttpRequestException" vsli:raw="The request failed due to an underlying issue such as network connectivity, DNS failure, server certificate validation or timeout.">要求已因基本問題 (例如網路連線、DNS 失敗、伺服器憑證驗證或逾時) 而失敗。</exception>
      <exception cref="T:System.Threading.Tasks.TaskCanceledException" vsli:raw=".NET Core and .NET 5 and later only: The request failed due to timeout.">僅限 .NET Core 與 .NET 5.0 和更新版本：要求因逾時而失敗。</exception>
      <returns vsli:raw="The task object representing the asynchronous operation.">工作物件，表示非同步作業。</returns>
    </member>
    <member name="P:System.Net.Http.HttpClient.BaseAddress">
      <summary vsli:raw="Gets or sets the base address of Uniform Resource Identifier (URI) of the Internet resource used when sending requests.">取得或設定傳送要求時所使用之網際網路資源的統一資源識別元 (URI) 基底位址。</summary>
      <returns vsli:raw="The base address of Uniform Resource Identifier (URI) of the Internet resource used when sending requests.">傳送要求時所使用之網際網路資源的統一資源識別元 (URI) 基底位址。</returns>
    </member>
    <member name="P:System.Net.Http.HttpClient.DefaultProxy">
      <summary vsli:raw="Gets or sets the global HTTP proxy.">取得或設定全域 HTTP Proxy。</summary>
      <exception cref="T:System.ArgumentNullException" vsli:raw="The value passed cannot be &lt;see langword=&quot;null&quot; /&gt;.">傳遞的值不能是 <see langword="null" />。</exception>
      <returns vsli:raw="A proxy used by every HTTP request.">每個具現化之呼叫所使用的 proxy <see cref="T:System.Net.HttpWebRequest" /> 。</returns>
    </member>
    <member name="P:System.Net.Http.HttpClient.DefaultRequestHeaders">
      <summary vsli:raw="Gets the headers which should be sent with each request.">取得應該在每個要求中傳送的標頭。</summary>
      <returns vsli:raw="The headers which should be sent with each request.">應該藉由每個要求傳送的標頭。</returns>
    </member>
    <member name="P:System.Net.Http.HttpClient.DefaultRequestVersion">
      <summary vsli:raw="Gets or sets the default HTTP version used on subsequent requests made by this &lt;see cref=&quot;T:System.Net.Http.HttpClient&quot; /&gt; instance.">取得或設定用於這個 <see cref="T:System.Net.Http.HttpClient" /> 執行個體所提出後續要求的預設 HTTP 版本。</summary>
      <exception cref="T:System.ArgumentNullException" vsli:raw="In a set operation, &lt;see langword=&quot;DefaultRequestVersion&quot; /&gt; is &lt;see langword=&quot;null&quot; /&gt;.">在設定作業中，<see langword="DefaultRequestVersion" /> 是 <see langword="null" />。</exception>
      <exception cref="T:System.InvalidOperationException" vsli:raw="The &lt;see cref=&quot;T:System.Net.Http.HttpClient&quot; /&gt; instance has already started one or more requests.">
        <see cref="T:System.Net.Http.HttpClient" /> 執行個體已啟動一或多個要求。</exception>
      <exception cref="T:System.ObjectDisposedException" vsli:raw="The &lt;see cref=&quot;T:System.Net.Http.HttpClient&quot; /&gt; instance has already been disposed.">
        <see cref="T:System.Net.Http.HttpClient" /> 執行個體已經過處置。</exception>
      <returns vsli:raw="The default version to use for any requests made with this &lt;see cref=&quot;T:System.Net.Http.HttpClient&quot; /&gt; instance.">此實例所提出的任何要求所要使用的預設版本 <see cref="T:System.Net.Http.HttpClient" /> 。</returns>
    </member>
    <member name="P:System.Net.Http.HttpClient.DefaultVersionPolicy">
      <summary vsli:raw="Gets or sets the default version policy for implicitly created requests in convenience methods, for example, &lt;see cref=&quot;M:System.Net.Http.HttpClient.GetAsync(System.String)&quot; /&gt; and &lt;see cref=&quot;M:System.Net.Http.HttpClient.PostAsync(System.String,System.Net.Http.HttpContent)&quot; /&gt;.">取得或設定透過便利方法以隱含方式所建立要求的預設版本原則，例如 <see cref="M:System.Net.Http.HttpClient.GetAsync(System.String)" /> 和 <see cref="M:System.Net.Http.HttpClient.PostAsync(System.String,System.Net.Http.HttpContent)" />。</summary>
      <returns vsli:raw="The HttpVersionPolicy used when the HTTP connection is established.">建立 HTTP 連接時所使用的 HttpVersionPolicy。</returns>
    </member>
    <member name="P:System.Net.Http.HttpClient.MaxResponseContentBufferSize">
      <summary vsli:raw="Gets or sets the maximum number of bytes to buffer when reading the response content.">取得或設定讀取回應內容時要緩衝處理的位元組數目上限。</summary>
      <exception cref="T:System.ArgumentOutOfRangeException" vsli:raw="The size specified is less than or equal to zero.">指定的大小小於或等於零。</exception>
      <exception cref="T:System.InvalidOperationException" vsli:raw="An operation has already been started on the current instance.">作業已經在目前的執行個體上啟動。</exception>
      <exception cref="T:System.ObjectDisposedException" vsli:raw="The current instance has been disposed.">目前的執行個體已經過處置。</exception>
      <returns vsli:raw="The maximum number of bytes to buffer when reading the response content. The default value for this property is 2 gigabytes.">讀取回應內容時要緩衝處理的位元組數目上限。 此屬性的預設值是 2 GB。</returns>
    </member>
    <member name="P:System.Net.Http.HttpClient.Timeout">
      <summary vsli:raw="Gets or sets the timespan to wait before the request times out.">取得或設定要求逾時前等候的時間長度。</summary>
      <exception cref="T:System.ArgumentOutOfRangeException" vsli:raw="The timeout specified is less than or equal to zero and is not &lt;see cref=&quot;F:System.Threading.Timeout.InfiniteTimeSpan&quot; /&gt;.">指定的逾時值小於或等於零，而且不是 <see cref="F:System.Threading.Timeout.InfiniteTimeSpan" />。</exception>
      <exception cref="T:System.InvalidOperationException" vsli:raw="An operation has already been started on the current instance.">作業已經在目前的執行個體上啟動。</exception>
      <exception cref="T:System.ObjectDisposedException" vsli:raw="The current instance has been disposed.">目前的執行個體已經過處置。</exception>
      <returns vsli:raw="The timespan to wait before the request times out.">要求逾時前等候的時間長度。</returns>
    </member>
    <member name="T:System.Net.Http.HttpClientHandler">
      <summary vsli:raw="The default message handler used by &lt;see cref=&quot;T:System.Net.Http.HttpClient&quot; /&gt; in .NET Framework and .NET Core 2.0 and earlier.">.NET Framework 和 .NET Core 2.0 及更舊版本中 <see cref="T:System.Net.Http.HttpClient" /> 使用的預設訊息處理常式。</summary>
    </member>
    <member name="M:System.Net.Http.HttpClientHandler.#ctor">
      <summary vsli:raw="Creates an instance of a &lt;see cref=&quot;T:System.Net.Http.HttpClientHandler&quot; /&gt; class.">建立 <see cref="T:System.Net.Http.HttpClientHandler" /> 類別的執行個體。</summary>
    </member>
    <member name="M:System.Net.Http.HttpClientHandler.Dispose(System.Boolean)">
      <summary vsli:raw="Releases the unmanaged resources used by the &lt;see cref=&quot;T:System.Net.Http.HttpClientHandler&quot; /&gt; and optionally disposes of the managed resources.">釋放 <see cref="T:System.Net.Http.HttpClientHandler" /> 所使用的 Unmanaged 資源，並選擇性處置 Managed 資源。</summary>
      <param name="disposing" vsli:raw="&lt;see langword=&quot;true&quot; /&gt; to release both managed and unmanaged resources; &lt;see langword=&quot;false&quot; /&gt; to releases only unmanaged resources.">
        <see langword="true" /> 表示會同時釋放 Managed 和 Unmanaged 資源；<see langword="false" /> 則表示只釋放 Unmanaged 資源。</param>
    </member>
    <member name="M:System.Net.Http.HttpClientHandler.Send(System.Net.Http.HttpRequestMessage,System.Threading.CancellationToken)">
      <summary vsli:raw="Creates an instance of  &lt;see cref=&quot;T:System.Net.Http.HttpResponseMessage&quot; /&gt; based on the information provided in the &lt;see cref=&quot;T:System.Net.Http.HttpRequestMessage&quot; /&gt;.">根據 <see cref="T:System.Net.Http.HttpRequestMessage" /> 提供的資訊建立 <see cref="T:System.Net.Http.HttpResponseMessage" /> 的執行個體。</summary>
      <param name="request" vsli:raw="The HTTP request message.">HTTP 要求訊息。</param>
      <param name="cancellationToken" vsli:raw="A cancellation token to cancel the operation.">取消作業的取消語彙基元。</param>
      <exception cref="T:System.ArgumentNullException" vsli:raw="The &lt;paramref name=&quot;request&quot; /&gt; was &lt;see langword=&quot;null&quot; /&gt;.">
        <paramref name="request" /> 以前是 <see langword="null" />。</exception>
      <exception cref="T:System.NotSupportedException" vsli:raw="For HTTP/2 and higher or when requesting version upgrade is enabled by &lt;see cref=&quot;F:System.Net.Http.HttpVersionPolicy.RequestVersionOrHigher&quot; /&gt;.&#xA;&#xA; -or-&#xA;&#xA; If using custom class derived from &lt;see cref=&quot;T:System.Net.Http.HttpContent&quot; /&gt; not overriding &lt;see cref=&quot;M:System.Net.Http.HttpContent.SerializeToStream(System.IO.Stream,System.Net.TransportContext,System.Threading.CancellationToken)&quot; /&gt; method.&#xA;&#xA; -or-&#xA;&#xA; If using custom &lt;see cref=&quot;T:System.Net.Http.HttpMessageHandler&quot; /&gt; not overriding &lt;see cref=&quot;M:System.Net.Http.HttpMessageHandler.Send(System.Net.Http.HttpRequestMessage,System.Threading.CancellationToken)&quot; /&gt; method.">適用於 HTTP/2 或更高版本，或是 <see cref="F:System.Net.Http.HttpVersionPolicy.RequestVersionOrHigher" /> 啟用要求版本升級時。

-或-

如果使用衍生自 <see cref="T:System.Net.Http.HttpContent" /> 的自訂類別不會覆寫 <see cref="M:System.Net.Http.HttpContent.SerializeToStream(System.IO.Stream,System.Net.TransportContext,System.Threading.CancellationToken)" /> 方法。

-或-

如果使用衍生自 <see cref="T:System.Net.Http.HttpMessageHandler" /> 的自訂類別不會覆寫 <see cref="M:System.Net.Http.HttpMessageHandler.Send(System.Net.Http.HttpRequestMessage,System.Threading.CancellationToken)" /> 方法。</exception>
      <exception cref="T:System.Threading.Tasks.TaskCanceledException" vsli:raw="The request was canceled.&#xA;&#xA; -or-&#xA;&#xA; If the &lt;see cref=&quot;T:System.Threading.Tasks.TaskCanceledException&quot; /&gt; exception nests the &lt;see cref=&quot;T:System.TimeoutException&quot; /&gt;:&#xA; The request failed due to timeout.">已取消要求。

-或-

如果 <see cref="T:System.Threading.Tasks.TaskCanceledException" /> 例外狀況內嵌 <see cref="T:System.TimeoutException" />：要求因逾時而失敗。</exception>
      <returns vsli:raw="The HTTP response message.">HTTP 回應訊息。</returns>
    </member>
    <member name="M:System.Net.Http.HttpClientHandler.SendAsync(System.Net.Http.HttpRequestMessage,System.Threading.CancellationToken)">
      <summary vsli:raw="Creates an instance of  &lt;see cref=&quot;T:System.Net.Http.HttpResponseMessage&quot; /&gt; based on the information provided in the &lt;see cref=&quot;T:System.Net.Http.HttpRequestMessage&quot; /&gt; as an operation that will not block.">根據 <see cref="T:System.Net.Http.HttpRequestMessage" /> 提供的資訊建立 <see cref="T:System.Net.Http.HttpResponseMessage" /> 的執行個體，做為不封鎖作業。</summary>
      <param name="request" vsli:raw="The HTTP request message.">HTTP 要求訊息。</param>
      <param name="cancellationToken" vsli:raw="A cancellation token to cancel the operation.">取消作業的取消語彙基元。</param>
      <exception cref="T:System.ArgumentNullException" vsli:raw="The &lt;paramref name=&quot;request&quot; /&gt; was &lt;see langword=&quot;null&quot; /&gt;.">
        <paramref name="request" /> 以前是 <see langword="null" />。</exception>
      <returns vsli:raw="The task object representing the asynchronous operation.">工作物件，表示非同步作業。</returns>
    </member>
    <member name="P:System.Net.Http.HttpClientHandler.AllowAutoRedirect">
      <summary vsli:raw="Gets or sets a value that indicates whether the handler should follow redirection responses.">取得或設定值，這個值指出此處理常式是否應該接在重新導向回應之後。</summary>
      <returns vsli:raw="&lt;see langword=&quot;true&quot; /&gt; if the handler should follow redirection responses; otherwise &lt;see langword=&quot;false&quot; /&gt;. The default value is &lt;see langword=&quot;true&quot; /&gt;.">
        <see langword="true" /> 如果處理常式應遵循重新導向回應，否則為 <see langword="false" /> 。 預設值是 <see langword="true" />。</returns>
    </member>
    <member name="P:System.Net.Http.HttpClientHandler.AutomaticDecompression">
      <summary vsli:raw="Gets or sets the type of decompression method used by the handler for automatic decompression of the HTTP content response.">取得或設定解壓縮方法的類型，此為 HTTP 內容回應的自動解壓縮處理常式所使用。</summary>
      <returns vsli:raw="The automatic decompression method used by the handler.">處理常式所使用的自動解壓縮方法。</returns>
    </member>
    <member name="P:System.Net.Http.HttpClientHandler.CheckCertificateRevocationList">
      <summary vsli:raw="Gets or sets a value that indicates whether the certificate is checked against the certificate authority revocation list.">取得或設定值，指出是否根據憑證授權撤銷清單來檢查憑證。</summary>
      <exception cref="T:System.PlatformNotSupportedException" vsli:raw=".NET Framework 4.7.1 only: This property is not implemented.">僅限 .NET Framework 4.7.1：尚未實作此屬性。</exception>
      <returns vsli:raw="&lt;see langword=&quot;true&quot; /&gt; if the certificate revocation list is checked; otherwise, &lt;see langword=&quot;false&quot; /&gt;.">如果檢查憑證撤銷清單，則為 <see langword="true" />；否則為 <see langword="false" />。</returns>
    </member>
    <member name="P:System.Net.Http.HttpClientHandler.ClientCertificateOptions">
      <summary vsli:raw="Gets or sets a value that indicates if the certificate is automatically picked from the certificate store or if the caller is allowed to pass in a specific client certificate.">取得或設定值，表示憑證是否會從憑證存放區自動選取，或呼叫端是否允許傳入特定用戶端憑證。</summary>
      <returns vsli:raw="The collection of security certificates associated with this handler.">與此處理常式相關聯的安全性憑證集合。</returns>
    </member>
    <member name="P:System.Net.Http.HttpClientHandler.ClientCertificates">
      <summary vsli:raw="Gets the collection of security certificates that are associated with requests to the server.">取得為伺服器相關聯要求的安全憑證集合。</summary>
      <returns vsli:raw="The X509CertificateCollection that is presented to the server when performing certificate based client authentication.">執行以憑證為基礎的用戶端驗證時，呈現給伺服器的 X509CertificateCollection。</returns>
    </member>
    <member name="P:System.Net.Http.HttpClientHandler.CookieContainer">
      <summary vsli:raw="Gets or sets the cookie container used to store server cookies by the handler.">取得或設定處理常式用來儲存伺服器 cookie 的 cookie 容器。</summary>
      <returns vsli:raw="The cookie container used to store server cookies by the handler.">處理常式用來儲存伺服器 cookie 的 cookie 容器。</returns>
    </member>
    <member name="P:System.Net.Http.HttpClientHandler.Credentials">
      <summary vsli:raw="Gets or sets authentication information used by this handler.">取得或設定這個處理常式所用的驗證資訊。</summary>
      <returns vsli:raw="The authentication credentials associated with the handler. The default is &lt;see langword=&quot;null&quot; /&gt;.">與處理常式相關聯的驗證認證。 預設為 <see langword="null" />。</returns>
    </member>
    <member name="P:System.Net.Http.HttpClientHandler.DangerousAcceptAnyServerCertificateValidator">
      <summary vsli:raw="Gets a cached delegate that always returns &lt;see langword=&quot;true&quot; /&gt;.">取得一律傳回 <see langword="true" /> 的快取委派。</summary>
      <returns vsli:raw="A cached delegate that always returns &lt;see langword=&quot;true&quot; /&gt;.">一律傳回 <see langword="true" /> 的快取委派。</returns>
    </member>
    <member name="P:System.Net.Http.HttpClientHandler.DefaultProxyCredentials">
      <summary vsli:raw="When the default (system) proxy is being used, gets or sets the credentials to submit to the default proxy server for authentication. The default proxy is used only when &lt;see cref=&quot;P:System.Net.Http.HttpClientHandler.UseProxy&quot; /&gt; is set to &lt;see langword=&quot;true&quot; /&gt; and &lt;see cref=&quot;P:System.Net.Http.HttpClientHandler.Proxy&quot; /&gt; is set to &lt;see langword=&quot;null&quot; /&gt;.">使用預設 (系統) Proxy 時，取得或設定要提交至預設 Proxy 伺服器進行驗證的認證。 只有當 <see cref="P:System.Net.Http.HttpClientHandler.UseProxy" /> 設定為 <see langword="true" /> 且 <see cref="P:System.Net.Http.HttpClientHandler.Proxy" /> 設定為 <see langword="null" /> 時，才使用預設 Proxy。</summary>
      <returns vsli:raw="The credentials needed to authenticate a request to the default proxy server.">驗證預設 proxy 伺服器要求所需的認證。</returns>
    </member>
    <member name="P:System.Net.Http.HttpClientHandler.MaxAutomaticRedirections">
      <summary vsli:raw="Gets or sets the maximum number of redirects that the handler follows.">取得或設定處理常式追蹤的最大重新導向數目。</summary>
      <returns vsli:raw="The maximum number of redirection responses that the handler follows. The default value is 50.">處理常式追蹤的最大重新導向回應數目。 預設值為 50。</returns>
    </member>
    <member name="P:System.Net.Http.HttpClientHandler.MaxConnectionsPerServer">
      <summary vsli:raw="Gets or sets the maximum number of concurrent connections (per server endpoint) allowed when making requests using an &lt;see cref=&quot;T:System.Net.Http.HttpClient&quot; /&gt; object. Note that the limit is per server endpoint, so for example a value of 256 would permit 256 concurrent connections to http://www.adatum.com/ and another 256 to http://www.adventure-works.com/.">取得或設定使用 <see cref="T:System.Net.Http.HttpClient" /> 物件提出要求時，所允許的同時連線 數目上限 (每個伺服器端點)。 請注意，此限制是按照每個伺服器端點計算，例如值 256 允許 http://www.adatum.com/ 使用 256 個同時連線，而 http://www.adventure-works.com/ 另有 256 個同時連線。</summary>
      <returns vsli:raw="The maximum number of concurrent connections (per server endpoint) allowed by an &lt;see cref=&quot;T:System.Net.Http.HttpClient&quot; /&gt; object.">物件所允許的每個伺服器端點)  (並行連接數目上限 <see cref="T:System.Net.Http.HttpClient" /> 。</returns>
    </member>
    <member name="P:System.Net.Http.HttpClientHandler.MaxRequestContentBufferSize">
      <summary vsli:raw="Gets or sets the maximum request content buffer size used by the handler.">取得或設定此處理常式所使用最大要求內容的緩衝區大小。</summary>
      <returns vsli:raw="The maximum request content buffer size in bytes. The default value is 2 gigabytes.">最大要求內容緩衝區大小 (以位元組為單位)。 預設值為 2 GB。</returns>
    </member>
    <member name="P:System.Net.Http.HttpClientHandler.MaxResponseHeadersLength">
      <summary vsli:raw="Gets or sets the maximum length, in kilobytes (1024 bytes), of the response headers. For example, if the value is 64, then 65536 bytes are allowed for the maximum response headers' length.">取得或設定回應標頭的最大長度，以 KB (1024 位元組) 為單位。 比方說，如果值為 64，則最大回應標頭長度允許有 65536 個位元組。</summary>
      <returns vsli:raw="The maximum length, in kilobytes (1024 bytes), of the response headers.">回應標頭的最大長度，以 kb 為單位 (1024 位元組) ）。</returns>
    </member>
    <member name="P:System.Net.Http.HttpClientHandler.PreAuthenticate">
      <summary vsli:raw="Gets or sets a value that indicates whether the handler sends an Authorization header with the request.">取得或設定值，這個值指出處理常式是否隨著要求傳送授權標頭。</summary>
      <returns vsli:raw="&lt;see langword=&quot;true&quot; /&gt; for the handler to send an HTTP Authorization header with requests after authentication has taken place; otherwise, &lt;see langword=&quot;false&quot; /&gt;. The default is &lt;see langword=&quot;false&quot; /&gt;.">
        <see langword="true" /> 表示處理常式在進行驗證後隨同要求傳送 HTTP 授權標頭，否則為 <see langword="false" />。 預設為 <see langword="false" />。</returns>
    </member>
    <member name="P:System.Net.Http.HttpClientHandler.Properties">
      <summary vsli:raw="Gets a writable dictionary (that is, a map) of custom properties for the &lt;see cref=&quot;T:System.Net.Http.HttpClient&quot; /&gt; requests. The dictionary is initialized empty; you can insert and query key-value pairs for your custom handlers and special processing.">取得 <see cref="T:System.Net.Http.HttpClient" /> 要求之自訂屬性的可寫入字典 (也就是對應)。 字典會初始化為空字典。您可以插入及查詢自訂處理常式和特殊處理的索引鍵/值組。</summary>
      <returns vsli:raw="a writable dictionary of custom properties.">自訂屬性的可寫入字典。</returns>
    </member>
    <member name="P:System.Net.Http.HttpClientHandler.Proxy">
      <summary vsli:raw="Gets or sets proxy information used by the handler.">取得或設定處理常式所使用的 Proxy 資訊。</summary>
      <returns vsli:raw="The proxy information used by the handler. The default value is &lt;see langword=&quot;null&quot; /&gt;.">處理常式所使用的 Proxy 資訊。 預設值是 <see langword="null" />。</returns>
    </member>
    <member name="P:System.Net.Http.HttpClientHandler.ServerCertificateCustomValidationCallback">
      <summary vsli:raw="Gets or sets a callback method to validate the server certificate.">取得或設定驗證伺服器憑證的回呼方法。</summary>
      <returns vsli:raw="A callback method to validate the server certificate.">驗證伺服器憑證的回呼方法。</returns>
    </member>
    <member name="P:System.Net.Http.HttpClientHandler.SslProtocols">
      <summary vsli:raw="Gets or sets the TLS/SSL protocol used by the &lt;see cref=&quot;T:System.Net.Http.HttpClient&quot; /&gt; objects managed by the HttpClientHandler object.">取得或設定 TLS/SSL 通訊協定，其是由 HttpClientHandler 物件管理之 <see cref="T:System.Net.Http.HttpClient" /> 物件所使用。</summary>
      <exception cref="T:System.PlatformNotSupportedException" vsli:raw=".NET Framework 4.7.1 only: This property is not implemented.">僅限 .NET Framework 4.7.1：尚未實作此屬性。</exception>
      <returns vsli:raw="One of the values defined in the &lt;see cref=&quot;T:System.Security.Authentication.SslProtocols&quot; /&gt; enumeration.">
        <see cref="T:System.Security.Authentication.SslProtocols" /> 列舉型別中定義的一個值。</returns>
    </member>
    <member name="P:System.Net.Http.HttpClientHandler.SupportsAutomaticDecompression">
      <summary vsli:raw="Gets a value that indicates whether the handler supports automatic response content decompression.">取得值，表示處理常式是否支援自動回應內容解壓縮。</summary>
      <returns vsli:raw="&lt;see langword=&quot;true&quot; /&gt; if the if the handler supports automatic response content decompression; otherwise &lt;see langword=&quot;false&quot; /&gt;. The default value is &lt;see langword=&quot;true&quot; /&gt;.">如果此處理常式支援自動回應內容解壓縮，則為 <see langword="true" />；否則為 <see langword="false" />。 預設值是 <see langword="true" />。</returns>
    </member>
    <member name="P:System.Net.Http.HttpClientHandler.SupportsProxy">
      <summary vsli:raw="Gets a value that indicates whether the handler supports proxy settings.">取得值，這個值指出處理常式是否支援 Proxy 設定。</summary>
      <returns vsli:raw="&lt;see langword=&quot;true&quot; /&gt; if the if the handler supports proxy settings; otherwise &lt;see langword=&quot;false&quot; /&gt;. The default value is &lt;see langword=&quot;true&quot; /&gt;.">如果處理常式支援 Proxy 設定，則為 <see langword="true" />，否則為 <see langword="false" />。 預設值是 <see langword="true" />。</returns>
    </member>
    <member name="P:System.Net.Http.HttpClientHandler.SupportsRedirectConfiguration">
      <summary vsli:raw="Gets a value that indicates whether the handler supports configuration settings for the &lt;see cref=&quot;P:System.Net.Http.HttpClientHandler.AllowAutoRedirect&quot; /&gt; and &lt;see cref=&quot;P:System.Net.Http.HttpClientHandler.MaxAutomaticRedirections&quot; /&gt; properties.">取得值，這個值指出處理常式是否支援 <see cref="P:System.Net.Http.HttpClientHandler.AllowAutoRedirect" /> 和 <see cref="P:System.Net.Http.HttpClientHandler.MaxAutomaticRedirections" /> 屬性的組態設定。</summary>
      <returns vsli:raw="&lt;see langword=&quot;true&quot; /&gt; if the if the handler supports configuration settings for the &lt;see cref=&quot;P:System.Net.Http.HttpClientHandler.AllowAutoRedirect&quot; /&gt; and &lt;see cref=&quot;P:System.Net.Http.HttpClientHandler.MaxAutomaticRedirections&quot; /&gt; properties; otherwise &lt;see langword=&quot;false&quot; /&gt;. The default value is &lt;see langword=&quot;true&quot; /&gt;.">如果處理常式支援 <see cref="P:System.Net.Http.HttpClientHandler.AllowAutoRedirect" /> 和 <see cref="P:System.Net.Http.HttpClientHandler.MaxAutomaticRedirections" /> 屬性的組態設定，則為 <see langword="true" />，否則為 <see langword="false" />。 預設值是 <see langword="true" />。</returns>
    </member>
    <member name="P:System.Net.Http.HttpClientHandler.UseCookies">
      <summary vsli:raw="Gets or sets a value that indicates whether the handler uses the  &lt;see cref=&quot;P:System.Net.Http.HttpClientHandler.CookieContainer&quot; /&gt; property  to store server cookies and uses these cookies when sending requests.">取得或設定值，表示處理常式是否使用 <see cref="P:System.Net.Http.HttpClientHandler.CookieContainer" /> 屬性來儲存伺服器 Cookie 並在傳送要求時使用這些 Cookie。</summary>
      <returns vsli:raw="&lt;see langword=&quot;true&quot; /&gt; if the if the handler supports uses the  &lt;see cref=&quot;P:System.Net.Http.HttpClientHandler.CookieContainer&quot; /&gt; property  to store server cookies and uses these cookies when sending requests; otherwise &lt;see langword=&quot;false&quot; /&gt;. The default value is &lt;see langword=&quot;true&quot; /&gt;.">如果處理常式支援使用 <see langword="true" /> 屬性來儲存伺服器 Cookie 並在傳送要求時使用這些 Cookie，則為 <see cref="P:System.Net.Http.HttpClientHandler.CookieContainer" />；否則為 <see langword="false" />。 預設值是 <see langword="true" />。</returns>
    </member>
    <member name="P:System.Net.Http.HttpClientHandler.UseDefaultCredentials">
      <summary vsli:raw="Gets or sets a value that controls whether default credentials are sent with requests by the handler.">取得或設定值，控制是否隨著處理常式的要求傳送預設認證。</summary>
      <returns vsli:raw="&lt;see langword=&quot;true&quot; /&gt; if the default credentials are used; otherwise &lt;see langword=&quot;false&quot; /&gt;. The default value is &lt;see langword=&quot;false&quot; /&gt;.">如果使用預設認證，則為 <see langword="true" />，否則為 <see langword="false" />。 預設值是 <see langword="false" />。</returns>
    </member>
    <member name="P:System.Net.Http.HttpClientHandler.UseProxy">
      <summary vsli:raw="Gets or sets a value that indicates whether the handler uses a proxy for requests.">取得或設定值，指出處理常式是否針對要求使用 Proxy。</summary>
      <returns vsli:raw="&lt;see langword=&quot;true&quot; /&gt; if the handler should use a proxy for requests; otherwise &lt;see langword=&quot;false&quot; /&gt;. The default value is &lt;see langword=&quot;true&quot; /&gt;.">如果處理常式應該針對要求使用 Proxy，則為 <see langword="true" />，否則為 <see langword="false" />。 預設值是 <see langword="true" />。</returns>
    </member>
    <member name="T:System.Net.Http.HttpCompletionOption">
      <summary vsli:raw="Indicates if &lt;see cref=&quot;T:System.Net.Http.HttpClient&quot; /&gt; operations should be considered completed either as soon as a response is available, or after reading the entire response message including the content.">表示 <see cref="T:System.Net.Http.HttpClient" /> 作業應該在取得回應之後立即視為已完成，或在讀取整個回應訊息 (包括內容) 之後視為已完成。</summary>
    </member>
    <member name="F:System.Net.Http.HttpCompletionOption.ResponseContentRead">
      <summary vsli:raw="The operation should complete after reading the entire response including the content.">在讀取包括內容的完整回應之後，操作應該完成。</summary>
    </member>
    <member name="F:System.Net.Http.HttpCompletionOption.ResponseHeadersRead">
      <summary vsli:raw="The operation should complete as soon as a response is available and headers are read. The content is not read yet.">一旦回應可使用而標頭也已讀取後，就應完成作業。 尚未讀取內容。</summary>
    </member>
    <member name="T:System.Net.Http.HttpContent">
      <summary vsli:raw="A base class representing an HTTP entity body and content headers.">代表 HTTP 實體內容和內容標頭的基底類別。</summary>
    </member>
    <member name="M:System.Net.Http.HttpContent.#ctor">
      <summary vsli:raw="Initializes a new instance of the &lt;see cref=&quot;T:System.Net.Http.HttpContent&quot; /&gt; class.">初始化 <see cref="T:System.Net.Http.HttpContent" /> 類別的新執行個體。</summary>
    </member>
    <member name="M:System.Net.Http.HttpContent.CopyTo(System.IO.Stream,System.Net.TransportContext,System.Threading.CancellationToken)">
      <summary vsli:raw="Serializes the HTTP content into a stream of bytes and copies it to &lt;paramref name=&quot;stream&quot; /&gt;.">將 HTTP 內容序列化成位元組資料流，然後複製到 <paramref name="stream" />。</summary>
      <param name="stream" vsli:raw="The target stream.">目標資料流。</param>
      <param name="context" vsli:raw="Information about the transport (for example, the channel binding token). This parameter may be &lt;see langword=&quot;null&quot; /&gt;.">與傳輸有關的資訊 (例如通道繫結權杖)。 此參數可以是 <see langword="null" />。</param>
      <param name="cancellationToken" vsli:raw="The cancellation token to cancel the operation.">用於取消作業的取消權杖。</param>
      <exception cref="T:System.ArgumentNullException" vsli:raw="The &lt;paramref name=&quot;stream&quot; /&gt; was &lt;see langword=&quot;null&quot; /&gt;.">
        <paramref name="stream" /> 以前是 <see langword="null" />。</exception>
    </member>
    <member name="M:System.Net.Http.HttpContent.CopyToAsync(System.IO.Stream)">
      <summary vsli:raw="Serialize the HTTP content into a stream of bytes and copies it to the stream object provided as the &lt;paramref name=&quot;stream&quot; /&gt; parameter.">將 HTTP 內容序列化成位元組資料流，然後複製到 <paramref name="stream" /> 參數所提供的資料流物件。</summary>
      <param name="stream" vsli:raw="The target stream.">目標資料流。</param>
      <returns vsli:raw="The task object representing the asynchronous operation.">工作物件，表示非同步作業。</returns>
    </member>
    <member name="M:System.Net.Http.HttpContent.CopyToAsync(System.IO.Stream,System.Net.TransportContext)">
      <summary vsli:raw="Serialize the HTTP content into a stream of bytes and copies it to the stream object provided as the &lt;paramref name=&quot;stream&quot; /&gt; parameter.">將 HTTP 內容序列化成位元組資料流，然後複製到 <paramref name="stream" /> 參數所提供的資料流物件。</summary>
      <param name="stream" vsli:raw="The target stream.">目標資料流。</param>
      <param name="context" vsli:raw="Information about the transport (channel binding token, for example). This parameter may be &lt;see langword=&quot;null&quot; /&gt;.">傳輸的相關資訊 (例如通道繫結權杖)。 此參數可以是 <see langword="null" />。</param>
      <returns vsli:raw="The task object representing the asynchronous operation.">工作物件，表示非同步作業。</returns>
    </member>
    <member name="M:System.Net.Http.HttpContent.CopyToAsync(System.IO.Stream,System.Net.TransportContext,System.Threading.CancellationToken)">
      <summary vsli:raw="Serialize the HTTP content into a stream of bytes and copies it to the stream object provided as the &lt;paramref name=&quot;stream&quot; /&gt; parameter.">將 HTTP 內容序列化成位元組資料流，然後複製到 <paramref name="stream" /> 參數所提供的資料流物件。</summary>
      <param name="stream" vsli:raw="The target stream.">目標資料流。</param>
      <param name="context" vsli:raw="Information about the transport (channel binding token, for example). This parameter may be &lt;see langword=&quot;null&quot; /&gt;.">傳輸的相關資訊 (例如通道繫結權杖)。 此參數可以是 <see langword="null" />。</param>
      <param name="cancellationToken" vsli:raw="The cancellation token to cancel the operation.">用於取消作業的取消權杖。</param>
      <returns vsli:raw="The task object representing the asynchronous operation.">工作物件，表示非同步作業。</returns>
    </member>
    <member name="M:System.Net.Http.HttpContent.CopyToAsync(System.IO.Stream,System.Threading.CancellationToken)">
      <summary vsli:raw="Serialize the HTTP content into a stream of bytes and copies it to the stream object provided as the &lt;paramref name=&quot;stream&quot; /&gt; parameter.">將 HTTP 內容序列化成位元組資料流，然後複製到 <paramref name="stream" /> 參數所提供的資料流物件。</summary>
      <param name="stream" vsli:raw="The target stream.">目標資料流。</param>
      <param name="cancellationToken" vsli:raw="The cancellation token to cancel the operation.">用於取消作業的取消權杖。</param>
      <returns vsli:raw="The task object representing the asynchronous operation.">工作物件，表示非同步作業。</returns>
    </member>
    <member name="M:System.Net.Http.HttpContent.CreateContentReadStream(System.Threading.CancellationToken)">
      <param name="cancellationToken" vsli:raw="The cancellation token to cancel the operation." />
    </member>
    <member name="M:System.Net.Http.HttpContent.CreateContentReadStreamAsync">
      <summary vsli:raw="Serialize the HTTP content to a memory stream as an asynchronous operation.">以非同步作業方式將 HTTP 內容序列化為記憶體資料流。</summary>
      <returns vsli:raw="The task object representing the asynchronous operation.">工作物件，表示非同步作業。</returns>
    </member>
    <member name="M:System.Net.Http.HttpContent.CreateContentReadStreamAsync(System.Threading.CancellationToken)">
      <summary vsli:raw="Serializes the HTTP content to a memory stream as an asynchronous operation.">以非同步作業方式將 HTTP 內容序列化為記憶體資料流。</summary>
      <param name="cancellationToken" vsli:raw="The cancellation token to cancel the operation.">用於取消作業的取消權杖。</param>
      <returns vsli:raw="The task object representing the asynchronous operation.">工作物件，表示非同步作業。</returns>
    </member>
    <member name="M:System.Net.Http.HttpContent.Dispose">
      <summary vsli:raw="Releases the unmanaged resources and disposes of the managed resources used by the &lt;see cref=&quot;T:System.Net.Http.HttpContent&quot; /&gt;.">釋放 Unmanaged 資源，並處置 <see cref="T:System.Net.Http.HttpContent" /> 所使用的 Managed 資源。</summary>
    </member>
    <member name="M:System.Net.Http.HttpContent.Dispose(System.Boolean)">
      <summary vsli:raw="Releases the unmanaged resources used by the &lt;see cref=&quot;T:System.Net.Http.HttpContent&quot; /&gt; and optionally disposes of the managed resources.">釋放 <see cref="T:System.Net.Http.HttpContent" /> 所使用的 Unmanaged 資源，並選擇性處置 Managed 資源。</summary>
      <param name="disposing" vsli:raw="&lt;see langword=&quot;true&quot; /&gt; to release both managed and unmanaged resources; &lt;see langword=&quot;false&quot; /&gt; to releases only unmanaged resources.">
        <see langword="true" /> 表示會同時釋放 Managed 和 Unmanaged 資源；<see langword="false" /> 則表示只釋放 Unmanaged 資源。</param>
    </member>
    <member name="M:System.Net.Http.HttpContent.LoadIntoBufferAsync">
      <summary vsli:raw="Serialize the HTTP content to a memory buffer as an asynchronous operation.">以非同步作業方式將 HTTP 內容序列化至記憶體緩衝區。</summary>
      <returns vsli:raw="The task object representing the asynchronous operation.">工作物件，表示非同步作業。</returns>
    </member>
    <member name="M:System.Net.Http.HttpContent.LoadIntoBufferAsync(System.Int64)">
      <summary vsli:raw="Serialize the HTTP content to a memory buffer as an asynchronous operation.">以非同步作業方式將 HTTP 內容序列化至記憶體緩衝區。</summary>
      <param name="maxBufferSize" vsli:raw="The maximum size, in bytes, of the buffer to use.">要使用之緩衝區的大小上限，以位元組為單位。</param>
      <returns vsli:raw="The task object representing the asynchronous operation.">工作物件，表示非同步作業。</returns>
    </member>
    <member name="M:System.Net.Http.HttpContent.ReadAsByteArrayAsync">
      <summary vsli:raw="Serialize the HTTP content to a byte array as an asynchronous operation.">以非同步作業方式將位元組陣列的 HTTP 內容序列化。</summary>
      <returns vsli:raw="The task object representing the asynchronous operation.">工作物件，表示非同步作業。</returns>
    </member>
    <member name="M:System.Net.Http.HttpContent.ReadAsByteArrayAsync(System.Threading.CancellationToken)">
      <summary vsli:raw="Serialize the HTTP content to a byte array as an asynchronous operation.">以非同步作業方式將位元組陣列的 HTTP 內容序列化。</summary>
      <param name="cancellationToken" vsli:raw="The cancellation token to cancel the operation.">用於取消作業的取消權杖。</param>
      <returns vsli:raw="The task object representing the asynchronous operation.">工作物件，表示非同步作業。</returns>
    </member>
    <member name="M:System.Net.Http.HttpContent.ReadAsStream">
      <summary vsli:raw="Serializes the HTTP content and returns a stream that represents the content.">將 HTTP 內容序列化，並傳回代表內容的資料流。</summary>
      <returns vsli:raw="The stream that represents the HTTP content.">代表 HTTP 內容的資料流。</returns>
    </member>
    <member name="M:System.Net.Http.HttpContent.ReadAsStream(System.Threading.CancellationToken)">
      <summary vsli:raw="Serializes the HTTP content and returns a stream that represents the content.">將 HTTP 內容序列化，並傳回代表內容的資料流。</summary>
      <param name="cancellationToken" vsli:raw="The cancellation token to cancel the operation.">用於取消作業的取消權杖。</param>
      <returns vsli:raw="The stream that represents the HTTP content.">代表 HTTP 內容的資料流。</returns>
    </member>
    <member name="M:System.Net.Http.HttpContent.ReadAsStreamAsync">
      <summary vsli:raw="Serialize the HTTP content and return a stream that represents the content as an asynchronous operation.">以非同步作業方式將 HTTP 內容序列化，並傳回代表內容的資料流。</summary>
      <returns vsli:raw="The task object representing the asynchronous operation.">工作物件，表示非同步作業。</returns>
    </member>
    <member name="M:System.Net.Http.HttpContent.ReadAsStreamAsync(System.Threading.CancellationToken)">
      <summary vsli:raw="Serialize the HTTP content and return a stream that represents the content as an asynchronous operation.">以非同步作業方式將 HTTP 內容序列化，並傳回代表內容的資料流。</summary>
      <param name="cancellationToken" vsli:raw="The cancellation token to cancel the operation.">用於取消作業的取消權杖。</param>
      <returns vsli:raw="The task object representing the asynchronous operation.">工作物件，表示非同步作業。</returns>
    </member>
    <member name="M:System.Net.Http.HttpContent.ReadAsStringAsync">
      <summary vsli:raw="Serialize the HTTP content to a string as an asynchronous operation.">以非同步作業方式將 HTTP 內容序列化為字串。</summary>
      <returns vsli:raw="The task object representing the asynchronous operation.">工作物件，表示非同步作業。</returns>
    </member>
    <member name="M:System.Net.Http.HttpContent.ReadAsStringAsync(System.Threading.CancellationToken)">
      <summary vsli:raw="Serialize the HTTP content to a string as an asynchronous operation.">以非同步作業方式將 HTTP 內容序列化為字串。</summary>
      <param name="cancellationToken" vsli:raw="The cancellation token to cancel the operation.">用於取消作業的取消權杖。</param>
      <returns vsli:raw="The task object representing the asynchronous operation.">工作物件，表示非同步作業。</returns>
    </member>
    <member name="M:System.Net.Http.HttpContent.SerializeToStream(System.IO.Stream,System.Net.TransportContext,System.Threading.CancellationToken)">
      <summary vsli:raw="When overridden in a derived class, serializes the HTTP content to a stream. Otherwise, throws a &lt;see cref=&quot;T:System.NotSupportedException&quot; /&gt;.">在衍生類別中覆寫時，將 HTTP 內容序列化為資料流。 否則，擲回 <see cref="T:System.NotSupportedException" />。</summary>
      <param name="stream" vsli:raw="The target stream.">目標資料流。</param>
      <param name="context" vsli:raw="Information about the transport (for example, the channel binding token). This parameter may be &lt;see langword=&quot;null&quot; /&gt;.">與傳輸有關的資訊 (例如通道繫結權杖)。 此參數可以是 <see langword="null" />。</param>
      <param name="cancellationToken" vsli:raw="The cancellation token to cancel the operation.">用於取消作業的取消權杖。</param>
      <exception cref="T:System.NotSupportedException" vsli:raw="The method is not overridden in the derived class.">在衍生類別中不會覆寫方法。</exception>
    </member>
    <member name="M:System.Net.Http.HttpContent.SerializeToStreamAsync(System.IO.Stream,System.Net.TransportContext)">
      <summary vsli:raw="Serialize the HTTP content to a stream as an asynchronous operation.">以非同步作業方式將 HTTP 內容序列化為資料流。</summary>
      <param name="stream" vsli:raw="The target stream.">目標資料流。</param>
      <param name="context" vsli:raw="Information about the transport (channel binding token, for example). This parameter may be &lt;see langword=&quot;null&quot; /&gt;.">傳輸的相關資訊 (例如通道繫結權杖)。 此參數可以是 <see langword="null" />。</param>
      <returns vsli:raw="The task object representing the asynchronous operation.">工作物件，表示非同步作業。</returns>
    </member>
    <member name="M:System.Net.Http.HttpContent.SerializeToStreamAsync(System.IO.Stream,System.Net.TransportContext,System.Threading.CancellationToken)">
      <summary vsli:raw="Serialize the HTTP content to a stream as an asynchronous operation.">以非同步作業方式將 HTTP 內容序列化為資料流。</summary>
      <param name="stream" vsli:raw="The target stream.">目標資料流。</param>
      <param name="context" vsli:raw="Information about the transport (channel binding token, for example). This parameter may be &lt;see langword=&quot;null&quot; /&gt;.">傳輸的相關資訊 (例如通道繫結權杖)。 此參數可以是 <see langword="null" />。</param>
      <param name="cancellationToken" vsli:raw="The cancellation token to cancel the operation.">用於取消作業的取消權杖。</param>
      <returns vsli:raw="The task object representing the asynchronous operation.">工作物件，表示非同步作業。</returns>
    </member>
    <member name="M:System.Net.Http.HttpContent.TryComputeLength(System.Int64@)">
      <summary vsli:raw="Determines whether the HTTP content has a valid length in bytes.">判斷 HTTP 內容是否有有效的位元組長度。</summary>
      <param name="length" vsli:raw="The length in bytes of the HTTP content.">HTTP 內容的位元組長度。</param>
      <returns vsli:raw="&lt;see langword=&quot;true&quot; /&gt; if &lt;paramref name=&quot;length&quot; /&gt; is a valid length; otherwise, &lt;see langword=&quot;false&quot; /&gt;.">若 <paramref name="length" /> 為有效的長度則為 <see langword="true" />；否則為 <see langword="false" />。</returns>
    </member>
    <member name="P:System.Net.Http.HttpContent.Headers">
      <summary vsli:raw="Gets the HTTP content headers as defined in RFC 2616.">取得 HTTP 內容標頭，如 RFC 2616 中所定義。</summary>
      <returns vsli:raw="The content headers as defined in RFC 2616.">內容標頭，如 RFC 2616 中所定義。</returns>
    </member>
    <member name="T:System.Net.Http.HttpKeepAlivePingPolicy">
      <summary vsli:raw="Specifies when the HTTP/2 ping frame is sent on an idle connection.">指定透過閒置的連線傳送 HTTP/2 ping 框架的時機。</summary>
    </member>
    <member name="F:System.Net.Http.HttpKeepAlivePingPolicy.Always">
      <summary vsli:raw="Sends a keep alive ping for the whole lifetime of the connection.">針對連線的整個存留期傳送保持連線 ping。</summary>
    </member>
    <member name="F:System.Net.Http.HttpKeepAlivePingPolicy.WithActiveRequests">
      <summary vsli:raw="Sends a keep alive ping only when there are active streams on the connection.">只在連線上有作用中的資料流時才傳送保持連線的 ping。</summary>
    </member>
    <member name="T:System.Net.Http.HttpMessageHandler">
      <summary vsli:raw="A base type for HTTP message handlers.">HTTP 訊息處理常式的基底類型。</summary>
    </member>
    <member name="M:System.Net.Http.HttpMessageHandler.#ctor">
      <summary vsli:raw="Initializes a new instance of the &lt;see cref=&quot;T:System.Net.Http.HttpMessageHandler&quot; /&gt; class.">初始化 <see cref="T:System.Net.Http.HttpMessageHandler" /> 類別的新執行個體。</summary>
    </member>
    <member name="M:System.Net.Http.HttpMessageHandler.Dispose">
      <summary vsli:raw="Releases the unmanaged resources and disposes of the managed resources used by the &lt;see cref=&quot;T:System.Net.Http.HttpMessageHandler&quot; /&gt;.">釋放 Unmanaged 資源，並處置 <see cref="T:System.Net.Http.HttpMessageHandler" /> 所使用的 Managed 資源。</summary>
    </member>
    <member name="M:System.Net.Http.HttpMessageHandler.Dispose(System.Boolean)">
      <summary vsli:raw="Releases the unmanaged resources used by the &lt;see cref=&quot;T:System.Net.Http.HttpMessageHandler&quot; /&gt; and optionally disposes of the managed resources.">釋放 <see cref="T:System.Net.Http.HttpMessageHandler" /> 所使用的 Unmanaged 資源，並選擇性處置 Managed 資源。</summary>
      <param name="disposing" vsli:raw="&lt;see langword=&quot;true&quot; /&gt; to release both managed and unmanaged resources; &lt;see langword=&quot;false&quot; /&gt; to releases only unmanaged resources.">
        <see langword="true" /> 表示會同時釋放 Managed 和 Unmanaged 資源；<see langword="false" /> 則表示只釋放 Unmanaged 資源。</param>
    </member>
    <member name="M:System.Net.Http.HttpMessageHandler.Send(System.Net.Http.HttpRequestMessage,System.Threading.CancellationToken)">
      <summary vsli:raw="When overridden in a derived class, sends an HTTP request with the specified request and cancellation token. Otherwise, throws a &lt;see cref=&quot;T:System.NotSupportedException&quot; /&gt;.">在衍生類別中遭到覆寫時，使用指定的要求和取消語彙基元來傳送 HTTP 要求。 否則，擲回 <see cref="T:System.NotSupportedException" />。</summary>
      <param name="request" vsli:raw="The HTTP request message to send.">要傳送的 HTTP 要求訊息。</param>
      <param name="cancellationToken" vsli:raw="The cancellation token to cancel operation.">用於取消作業的取消語彙基元。</param>
      <exception cref="T:System.NotSupportedException" vsli:raw="The method is not overridden in the derived class.">在衍生類別中不會覆寫方法。</exception>
      <returns vsli:raw="The HTTP response message.">HTTP 回應訊息。</returns>
    </member>
    <member name="M:System.Net.Http.HttpMessageHandler.SendAsync(System.Net.Http.HttpRequestMessage,System.Threading.CancellationToken)">
      <summary vsli:raw="Send an HTTP request as an asynchronous operation.">以非同步作業的方式，傳送 HTTP 要求。</summary>
      <param name="request" vsli:raw="The HTTP request message to send.">要傳送的 HTTP 要求訊息。</param>
      <param name="cancellationToken" vsli:raw="The cancellation token to cancel operation.">用於取消作業的取消語彙基元。</param>
      <exception cref="T:System.ArgumentNullException" vsli:raw="The &lt;paramref name=&quot;request&quot; /&gt; was &lt;see langword=&quot;null&quot; /&gt;.">
        <paramref name="request" /> 以前是 <see langword="null" />。</exception>
      <returns vsli:raw="The task object representing the asynchronous operation.">工作物件，表示非同步作業。</returns>
    </member>
    <member name="T:System.Net.Http.HttpMessageInvoker">
      <summary vsli:raw="A specialty class that allows applications to call the &lt;see cref=&quot;M:System.Net.Http.HttpMessageInvoker.SendAsync(System.Net.Http.HttpRequestMessage,System.Threading.CancellationToken)&quot; /&gt; method on an HTTP handler chain.">特定類別，允許應用程式呼叫 HTTP 處理常式鏈結的 <see cref="M:System.Net.Http.HttpMessageInvoker.SendAsync(System.Net.Http.HttpRequestMessage,System.Threading.CancellationToken)" /> 方法。</summary>
    </member>
    <member name="M:System.Net.Http.HttpMessageInvoker.#ctor(System.Net.Http.HttpMessageHandler)">
      <summary vsli:raw="Initializes an instance of a &lt;see cref=&quot;T:System.Net.Http.HttpMessageInvoker&quot; /&gt; class with a specific &lt;see cref=&quot;T:System.Net.Http.HttpMessageHandler&quot; /&gt;.">使用特定 <see cref="T:System.Net.Http.HttpMessageInvoker" />，初始化 <see cref="T:System.Net.Http.HttpMessageHandler" /> 類別的執行個體。</summary>
      <param name="handler" vsli:raw="The &lt;see cref=&quot;T:System.Net.Http.HttpMessageHandler&quot; /&gt; responsible for processing the HTTP response messages.">負責處理 HTTP 回應訊息的 <see cref="T:System.Net.Http.HttpMessageHandler" />。</param>
    </member>
    <member name="M:System.Net.Http.HttpMessageInvoker.#ctor(System.Net.Http.HttpMessageHandler,System.Boolean)">
      <summary vsli:raw="Initializes an instance of a &lt;see cref=&quot;T:System.Net.Http.HttpMessageInvoker&quot; /&gt; class with a specific &lt;see cref=&quot;T:System.Net.Http.HttpMessageHandler&quot; /&gt;.">使用特定 <see cref="T:System.Net.Http.HttpMessageInvoker" />，初始化 <see cref="T:System.Net.Http.HttpMessageHandler" /> 類別的執行個體。</summary>
      <param name="handler" vsli:raw="The &lt;see cref=&quot;T:System.Net.Http.HttpMessageHandler&quot; /&gt; responsible for processing the HTTP response messages.">負責處理 HTTP 回應訊息的 <see cref="T:System.Net.Http.HttpMessageHandler" />。</param>
      <param name="disposeHandler" vsli:raw="&lt;see langword=&quot;true&quot; /&gt; if the inner handler should be disposed of by Dispose(), &lt;see langword=&quot;false&quot; /&gt; if you intend to reuse the inner handler.">如果內部處理常式應由 Dispose() 處置則為 <see langword="true" />，如果您想要重複使用內部處理常式則為 <see langword="false" />。</param>
    </member>
    <member name="M:System.Net.Http.HttpMessageInvoker.Dispose">
      <summary vsli:raw="Releases the unmanaged resources and disposes of the managed resources used by the &lt;see cref=&quot;T:System.Net.Http.HttpMessageInvoker&quot; /&gt;.">釋放 Unmanaged 資源，並處置 <see cref="T:System.Net.Http.HttpMessageInvoker" /> 所使用的 Managed 資源。</summary>
    </member>
    <member name="M:System.Net.Http.HttpMessageInvoker.Dispose(System.Boolean)">
      <summary vsli:raw="Releases the unmanaged resources used by the &lt;see cref=&quot;T:System.Net.Http.HttpMessageInvoker&quot; /&gt; and optionally disposes of the managed resources.">釋放 <see cref="T:System.Net.Http.HttpMessageInvoker" /> 所使用的 Unmanaged 資源，並選擇性處置 Managed 資源。</summary>
      <param name="disposing" vsli:raw="&lt;see langword=&quot;true&quot; /&gt; to release both managed and unmanaged resources; &lt;see langword=&quot;false&quot; /&gt; to releases only unmanaged resources.">
        <see langword="true" /> 表示會同時釋放 Managed 和 Unmanaged 資源；<see langword="false" /> 則表示只釋放 Unmanaged 資源。</param>
    </member>
    <member name="M:System.Net.Http.HttpMessageInvoker.Send(System.Net.Http.HttpRequestMessage,System.Threading.CancellationToken)">
      <summary vsli:raw="Sends an HTTP request with the specified request and cancellation token.">使用指定的要求和取消語彙基元來傳送 HTTP 要求。</summary>
      <param name="request" vsli:raw="The HTTP request message to send.">要傳送的 HTTP 要求訊息。</param>
      <param name="cancellationToken" vsli:raw="The cancellation token to cancel operation.">用於取消作業的取消語彙基元。</param>
      <exception cref="T:System.ArgumentNullException" vsli:raw="The &lt;paramref name=&quot;request&quot; /&gt; was &lt;see langword=&quot;null&quot; /&gt;.">
        <paramref name="request" /> 以前是 <see langword="null" />。</exception>
      <exception cref="T:System.NotSupportedException" vsli:raw="For HTTP/2 and higher or when requesting version upgrade is enabled by &lt;see cref=&quot;F:System.Net.Http.HttpVersionPolicy.RequestVersionOrHigher&quot; /&gt;.&#xA;&#xA; -or-&#xA;&#xA; If using custom class derived from &lt;see cref=&quot;T:System.Net.Http.HttpContent&quot; /&gt; not overriding &lt;see cref=&quot;M:System.Net.Http.HttpContent.SerializeToStream(System.IO.Stream,System.Net.TransportContext,System.Threading.CancellationToken)&quot; /&gt; method.&#xA;&#xA; -or-&#xA;&#xA; If using custom &lt;see cref=&quot;T:System.Net.Http.HttpMessageHandler&quot; /&gt; not overriding &lt;see cref=&quot;M:System.Net.Http.HttpMessageHandler.Send(System.Net.Http.HttpRequestMessage,System.Threading.CancellationToken)&quot; /&gt; method.">適用於 HTTP/2 或更高版本，或是 <see cref="F:System.Net.Http.HttpVersionPolicy.RequestVersionOrHigher" /> 啟用要求版本升級時。

-或-

如果使用衍生自 <see cref="T:System.Net.Http.HttpContent" /> 的自訂類別不會覆寫 <see cref="M:System.Net.Http.HttpContent.SerializeToStream(System.IO.Stream,System.Net.TransportContext,System.Threading.CancellationToken)" /> 方法。

-或-

如果使用衍生自 <see cref="T:System.Net.Http.HttpMessageHandler" /> 的自訂類別不會覆寫 <see cref="M:System.Net.Http.HttpMessageHandler.Send(System.Net.Http.HttpRequestMessage,System.Threading.CancellationToken)" /> 方法。</exception>
      <returns vsli:raw="The HTTP response message.">HTTP 回應訊息。</returns>
    </member>
    <member name="M:System.Net.Http.HttpMessageInvoker.SendAsync(System.Net.Http.HttpRequestMessage,System.Threading.CancellationToken)">
      <summary vsli:raw="Send an HTTP request as an asynchronous operation.">以非同步作業的方式，傳送 HTTP 要求。</summary>
      <param name="request" vsli:raw="The HTTP request message to send.">要傳送的 HTTP 要求訊息。</param>
      <param name="cancellationToken" vsli:raw="The cancellation token to cancel operation.">用於取消作業的取消語彙基元。</param>
      <exception cref="T:System.ArgumentNullException" vsli:raw="The &lt;paramref name=&quot;request&quot; /&gt; was &lt;see langword=&quot;null&quot; /&gt;.">
        <paramref name="request" /> 以前是 <see langword="null" />。</exception>
      <returns vsli:raw="The task object representing the asynchronous operation.">工作物件，表示非同步作業。</returns>
    </member>
    <member name="T:System.Net.Http.HttpMethod">
      <summary vsli:raw="A helper class for retrieving and comparing standard HTTP methods and for creating new HTTP methods.">協助程式類別，用於擷取和比較標準 HTTP 方法，以及建立新的 HTTP 方法。</summary>
    </member>
    <member name="M:System.Net.Http.HttpMethod.#ctor(System.String)">
      <summary vsli:raw="Initializes a new instance of the &lt;see cref=&quot;T:System.Net.Http.HttpMethod&quot; /&gt; class with a specific HTTP method.">使用特定 HTTP 方法，初始化 <see cref="T:System.Net.Http.HttpMethod" /> 類別的新執行個體。</summary>
      <param name="method" vsli:raw="The HTTP method.">HTTP 方法。</param>
    </member>
    <member name="M:System.Net.Http.HttpMethod.Equals(System.Net.Http.HttpMethod)">
      <summary vsli:raw="Determines whether the specified &lt;see cref=&quot;T:System.Net.Http.HttpMethod&quot; /&gt; is equal to the current &lt;see cref=&quot;T:System.Object&quot; /&gt;.">判斷指定的 <see cref="T:System.Net.Http.HttpMethod" /> 是否等於目前的 <see cref="T:System.Object" />。</summary>
      <param name="other" vsli:raw="The HTTP method to compare with the current object.">要與目前物件比較的 HTTP 方法。</param>
      <returns vsli:raw="&lt;see langword=&quot;true&quot; /&gt; if the specified object is equal to the current object; otherwise, &lt;see langword=&quot;false&quot; /&gt;.">如果指定的物件等於目前的物件，則為 <see langword="true" />；否則為 <see langword="false" />。</returns>
    </member>
    <member name="M:System.Net.Http.HttpMethod.Equals(System.Object)">
      <summary vsli:raw="Determines whether the specified &lt;see cref=&quot;T:System.Object&quot; /&gt; is equal to the current &lt;see cref=&quot;T:System.Object&quot; /&gt;.">判斷指定的 <see cref="T:System.Object" /> 是否等於目前的 <see cref="T:System.Object" />。</summary>
      <param name="obj" vsli:raw="The object to compare with the current object.">要與目前物件比較的物件。</param>
      <returns vsli:raw="&lt;see langword=&quot;true&quot; /&gt; if the specified object is equal to the current object; otherwise, &lt;see langword=&quot;false&quot; /&gt;.">如果指定的物件等於目前的物件，則為 <see langword="true" />；否則為 <see langword="false" />。</returns>
    </member>
    <member name="M:System.Net.Http.HttpMethod.GetHashCode">
      <summary vsli:raw="Serves as a hash function for this type.">作為此類型的雜湊函式。</summary>
      <returns vsli:raw="A hash code for the current &lt;see cref=&quot;T:System.Object&quot; /&gt;.">目前 <see cref="T:System.Object" /> 的雜湊碼。</returns>
    </member>
    <member name="M:System.Net.Http.HttpMethod.op_Equality(System.Net.Http.HttpMethod,System.Net.Http.HttpMethod)">
      <summary vsli:raw="The equality operator for comparing two &lt;see cref=&quot;T:System.Net.Http.HttpMethod&quot; /&gt; objects.">用來比較兩個 <see cref="T:System.Net.Http.HttpMethod" /> 物件的等號比較運算子。</summary>
      <param name="left" vsli:raw="The left &lt;see cref=&quot;T:System.Net.Http.HttpMethod&quot; /&gt; to an equality operator.">等號比較運算子左邊的 <see cref="T:System.Net.Http.HttpMethod" />。</param>
      <param name="right" vsli:raw="The right  &lt;see cref=&quot;T:System.Net.Http.HttpMethod&quot; /&gt; to an equality operator.">等號比較運算子右邊的 <see cref="T:System.Net.Http.HttpMethod" />。</param>
      <returns vsli:raw="&lt;see langword=&quot;true&quot; /&gt; if the specified &lt;paramref name=&quot;left&quot; /&gt; and &lt;paramref name=&quot;right&quot; /&gt; parameters are equal; otherwise, &lt;see langword=&quot;false&quot; /&gt;.">如果指定的 <paramref name="left" /> 和 <paramref name="right" /> 參數相等，則為 <see langword="true" />，否則為 <see langword="false" />。</returns>
    </member>
    <member name="M:System.Net.Http.HttpMethod.op_Inequality(System.Net.Http.HttpMethod,System.Net.Http.HttpMethod)">
      <summary vsli:raw="The inequality operator for comparing two &lt;see cref=&quot;T:System.Net.Http.HttpMethod&quot; /&gt; objects.">用來比較兩個 <see cref="T:System.Net.Http.HttpMethod" /> 物件的不等比較運算子。</summary>
      <param name="left" vsli:raw="The left &lt;see cref=&quot;T:System.Net.Http.HttpMethod&quot; /&gt; to an inequality operator.">不等比較運算子左邊的 <see cref="T:System.Net.Http.HttpMethod" />。</param>
      <param name="right" vsli:raw="The right  &lt;see cref=&quot;T:System.Net.Http.HttpMethod&quot; /&gt; to an inequality operator.">不等比較運算子右邊的 <see cref="T:System.Net.Http.HttpMethod" />。</param>
      <returns vsli:raw="&lt;see langword=&quot;true&quot; /&gt; if the specified &lt;paramref name=&quot;left&quot; /&gt; and &lt;paramref name=&quot;right&quot; /&gt; parameters are inequal; otherwise, &lt;see langword=&quot;false&quot; /&gt;.">如果指定的 <paramref name="left" /> 和 <paramref name="right" /> 參數不相等，則為 <see langword="true" />，否則為 <see langword="false" />。</returns>
    </member>
    <member name="M:System.Net.Http.HttpMethod.ToString">
      <summary vsli:raw="Returns a string that represents the current object.">傳回代表目前物件的字串。</summary>
      <returns vsli:raw="A string representing the current object.">表示目前物件的字串。</returns>
    </member>
    <member name="P:System.Net.Http.HttpMethod.Delete">
      <summary vsli:raw="Represents an HTTP DELETE protocol method.">表示 HTTP DELETE 通訊協定方法。</summary>
      <returns vsli:raw="The HTTP DELETE method.">傳回 <see cref="T:System.Net.Http.HttpMethod" />。</returns>
    </member>
    <member name="P:System.Net.Http.HttpMethod.Get">
      <summary vsli:raw="Represents an HTTP GET protocol method.">表示 HTTP GET 通訊協定方法。</summary>
      <returns vsli:raw="The HTTP GET method.">傳回 <see cref="T:System.Net.Http.HttpMethod" />。</returns>
    </member>
    <member name="P:System.Net.Http.HttpMethod.Head">
      <summary vsli:raw="Represents an HTTP HEAD protocol method. The HEAD method is identical to GET except that the server only returns message-headers in the response, without a message-body.">表示 HTTP HEAD 通訊協定方法。 HEAD 方法與 GET 相同，除了伺服器只在回應中傳回訊息標頭，不含訊息主體。</summary>
      <returns vsli:raw="The HTTP HEAD method.">傳回 <see cref="T:System.Net.Http.HttpMethod" />。</returns>
    </member>
    <member name="P:System.Net.Http.HttpMethod.Method">
      <summary vsli:raw="An HTTP method.">HTTP 方法。</summary>
      <returns vsli:raw="An HTTP method represented as a &lt;see cref=&quot;T:System.String&quot; /&gt;.">HTTP 方法，表示為 <see cref="T:System.String" />。</returns>
    </member>
    <member name="P:System.Net.Http.HttpMethod.Options">
      <summary vsli:raw="Represents an HTTP OPTIONS protocol method.">表示 HTTP OPTIONS 通訊協定方法。</summary>
      <returns vsli:raw="The HTTP OPTIONS method.">傳回 <see cref="T:System.Net.Http.HttpMethod" />。</returns>
    </member>
    <member name="P:System.Net.Http.HttpMethod.Patch">
      <summary vsli:raw="Gets the HTTP PATCH protocol method.">取得 HTTP 修補程式通訊協定方法。</summary>
      <returns vsli:raw="The HTTP PATCH protocol method.">HTTP 修補程式通訊協定方法。</returns>
    </member>
    <member name="P:System.Net.Http.HttpMethod.Post">
      <summary vsli:raw="Represents an HTTP POST protocol method that is used to post a new entity as an addition to a URI.">表示 HTTP POST 通訊協定方法，用來公佈新實體至 URI 做為新增項目。</summary>
      <returns vsli:raw="The HTTP POST method.">傳回 <see cref="T:System.Net.Http.HttpMethod" />。</returns>
    </member>
    <member name="P:System.Net.Http.HttpMethod.Put">
      <summary vsli:raw="Represents an HTTP PUT protocol method that is used to replace an entity identified by a URI.">表示 HTTP PUT 通訊協定方法，用來取代 URI 所識別的實體。</summary>
      <returns vsli:raw="The HTTP PUT method.">傳回 <see cref="T:System.Net.Http.HttpMethod" />。</returns>
    </member>
    <member name="P:System.Net.Http.HttpMethod.Trace">
      <summary vsli:raw="Represents an HTTP TRACE protocol method.">表示 HTTP TRACE 通訊協定方法。</summary>
      <returns vsli:raw="The HTTP TRACE method.">傳回 <see cref="T:System.Net.Http.HttpMethod" />。</returns>
    </member>
    <member name="T:System.Net.Http.HttpRequestException">
      <summary vsli:raw="A base class for exceptions thrown by the &lt;see cref=&quot;T:System.Net.Http.HttpClient&quot; /&gt; and &lt;see cref=&quot;T:System.Net.Http.HttpMessageHandler&quot; /&gt; classes.">
        <see cref="T:System.Net.Http.HttpClient" /> 及 <see cref="T:System.Net.Http.HttpMessageHandler" /> 類別所擲回之例外狀況的基底類別。</summary>
    </member>
    <member name="M:System.Net.Http.HttpRequestException.#ctor">
      <summary vsli:raw="Initializes a new instance of the &lt;see cref=&quot;T:System.Net.Http.HttpRequestException&quot; /&gt; class.">初始化 <see cref="T:System.Net.Http.HttpRequestException" /> 類別的新執行個體。</summary>
    </member>
    <member name="M:System.Net.Http.HttpRequestException.#ctor(System.String)">
      <summary vsli:raw="Initializes a new instance of the &lt;see cref=&quot;T:System.Net.Http.HttpRequestException&quot; /&gt; class with a specific message that describes the current exception.">使用描述目前例外狀況的特定訊息，初始化 <see cref="T:System.Net.Http.HttpRequestException" /> 類別的新執行個體。</summary>
      <param name="message" vsli:raw="A message that describes the current exception.">描述目前例外狀況的訊息。</param>
    </member>
    <member name="M:System.Net.Http.HttpRequestException.#ctor(System.String,System.Exception)">
      <summary vsli:raw="Initializes a new instance of the &lt;see cref=&quot;T:System.Net.Http.HttpRequestException&quot; /&gt; class with a specific message that describes the current exception and an inner exception.">使用描述目前例外狀況和內部例外狀況的特定訊息，初始化 <see cref="T:System.Net.Http.HttpRequestException" /> 類別的新執行個體。</summary>
      <param name="message" vsli:raw="A message that describes the current exception.">描述目前例外狀況的訊息。</param>
      <param name="inner" vsli:raw="The inner exception.">內部例外狀況。</param>
    </member>
    <member name="M:System.Net.Http.HttpRequestException.#ctor(System.String,System.Exception,System.Nullable{System.Net.HttpStatusCode})">
      <summary vsli:raw="Initializes a new instance of the &lt;see cref=&quot;T:System.Net.Http.HttpRequestException&quot; /&gt; class with a specific message that describes the current exception, an inner exception, and an HTTP status code.">
        <see cref="T:System.Net.Http.HttpRequestException" />使用描述目前例外狀況的特定訊息、內部例外狀況和 HTTP 狀態碼，初始化類別的新實例。</summary>
      <param name="message" vsli:raw="A message that describes the current exception.">描述目前例外狀況的訊息。</param>
      <param name="inner" vsli:raw="The inner exception.">內部例外狀況。</param>
      <param name="statusCode" vsli:raw="The HTTP status code.">HTTP 狀態碼。</param>
    </member>
    <member name="P:System.Net.Http.HttpRequestException.StatusCode">
      <summary vsli:raw="Gets the HTTP status code to be returned with the exception.">取得要隨著例外狀況傳回的 HTTP 狀態碼。</summary>
      <returns vsli:raw="An HTTP status code if the exception represents a non-successful result, otherwise &lt;c&gt;null&lt;/c&gt;.">如果例外狀況表示不成功的結果，則為 HTTP 狀態碼，否則 <c>為 null</c>。</returns>
    </member>
    <member name="T:System.Net.Http.HttpRequestMessage">
      <summary vsli:raw="Represents a HTTP request message.">代表 HTTP 要求訊息。</summary>
    </member>
    <member name="M:System.Net.Http.HttpRequestMessage.#ctor">
      <summary vsli:raw="Initializes a new instance of the &lt;see cref=&quot;T:System.Net.Http.HttpRequestMessage&quot; /&gt; class.">初始化 <see cref="T:System.Net.Http.HttpRequestMessage" /> 類別的新執行個體。</summary>
    </member>
    <member name="M:System.Net.Http.HttpRequestMessage.#ctor(System.Net.Http.HttpMethod,System.String)">
      <summary vsli:raw="Initializes a new instance of the &lt;see cref=&quot;T:System.Net.Http.HttpRequestMessage&quot; /&gt; class with an HTTP method and a request &lt;see cref=&quot;T:System.Uri&quot; /&gt;.">使用 HTTP 方法和要求 <see cref="T:System.Net.Http.HttpRequestMessage" />，初始化 <see cref="T:System.Uri" /> 類別的新執行個體。</summary>
      <param name="method" vsli:raw="The HTTP method.">HTTP 方法。</param>
      <param name="requestUri" vsli:raw="A string that represents the request  &lt;see cref=&quot;T:System.Uri&quot; /&gt;.">字串，表示要求 <see cref="T:System.Uri" />。</param>
    </member>
    <member name="M:System.Net.Http.HttpRequestMessage.#ctor(System.Net.Http.HttpMethod,System.Uri)">
      <summary vsli:raw="Initializes a new instance of the &lt;see cref=&quot;T:System.Net.Http.HttpRequestMessage&quot; /&gt; class with an HTTP method and a request &lt;see cref=&quot;T:System.Uri&quot; /&gt;.">使用 HTTP 方法和要求 <see cref="T:System.Net.Http.HttpRequestMessage" />，初始化 <see cref="T:System.Uri" /> 類別的新執行個體。</summary>
      <param name="method" vsli:raw="The HTTP method.">HTTP 方法。</param>
      <param name="requestUri" vsli:raw="The &lt;see cref=&quot;T:System.Uri&quot; /&gt; to request.">要求的 <see cref="T:System.Uri" />。</param>
    </member>
    <member name="M:System.Net.Http.HttpRequestMessage.Dispose">
      <summary vsli:raw="Releases the unmanaged resources and disposes of the managed resources used by the &lt;see cref=&quot;T:System.Net.Http.HttpRequestMessage&quot; /&gt;.">釋放 Unmanaged 資源，並處置 <see cref="T:System.Net.Http.HttpRequestMessage" /> 所使用的 Managed 資源。</summary>
    </member>
    <member name="M:System.Net.Http.HttpRequestMessage.Dispose(System.Boolean)">
      <summary vsli:raw="Releases the unmanaged resources used by the &lt;see cref=&quot;T:System.Net.Http.HttpRequestMessage&quot; /&gt; and optionally disposes of the managed resources.">釋放 <see cref="T:System.Net.Http.HttpRequestMessage" /> 所使用的 Unmanaged 資源，並選擇性處置 Managed 資源。</summary>
      <param name="disposing" vsli:raw="&lt;see langword=&quot;true&quot; /&gt; to release both managed and unmanaged resources; &lt;see langword=&quot;false&quot; /&gt; to releases only unmanaged resources.">
        <see langword="true" /> 表示會同時釋放 Managed 和 Unmanaged 資源；<see langword="false" /> 則表示只釋放 Unmanaged 資源。</param>
    </member>
    <member name="M:System.Net.Http.HttpRequestMessage.ToString">
      <summary vsli:raw="Returns a string that represents the current object.">傳回代表目前物件的字串。</summary>
      <returns vsli:raw="A string representation of the current object.">目前物件的字串表示。</returns>
    </member>
    <member name="P:System.Net.Http.HttpRequestMessage.Content">
      <summary vsli:raw="Gets or sets the contents of the HTTP message.">取得或設定 HTTP 訊息內容。</summary>
      <returns vsli:raw="The content of a message.">訊息內容</returns>
    </member>
    <member name="P:System.Net.Http.HttpRequestMessage.Headers">
      <summary vsli:raw="Gets the collection of HTTP request headers.">取得 HTTP 要求標頭的集合。</summary>
      <returns vsli:raw="The collection of HTTP request headers.">HTTP 要求標頭的集合。</returns>
    </member>
    <member name="P:System.Net.Http.HttpRequestMessage.Method">
      <summary vsli:raw="Gets or sets the HTTP method used by the HTTP request message.">取得或設定 HTTP 要求訊息使用的 HTTP 方法。</summary>
      <returns vsli:raw="The HTTP method used by the request message. The default is the GET method.">要求訊息使用的 HTTP 方法。 預設值為 GET 方法。</returns>
    </member>
    <member name="P:System.Net.Http.HttpRequestMessage.Options" />
    <member name="P:System.Net.Http.HttpRequestMessage.Properties">
      <summary vsli:raw="Gets a set of properties for the HTTP request.">取得 HTTP 要求的屬性集。</summary>
      <returns vsli:raw="Returns &lt;see cref=&quot;T:System.Collections.Generic.IDictionary`2&quot; /&gt;.">傳回 <see cref="T:System.Collections.Generic.IDictionary`2" />。</returns>
    </member>
    <member name="P:System.Net.Http.HttpRequestMessage.RequestUri">
      <summary vsli:raw="Gets or sets the &lt;see cref=&quot;T:System.Uri&quot; /&gt; used for the HTTP request.">取得或設定使用於 HTTP 要求的 <see cref="T:System.Uri" />。</summary>
      <returns vsli:raw="The &lt;see cref=&quot;T:System.Uri&quot; /&gt; used for the HTTP request.">使用於 HTTP 要求的 <see cref="T:System.Uri" />。</returns>
    </member>
    <member name="P:System.Net.Http.HttpRequestMessage.Version">
      <summary vsli:raw="Gets or sets the HTTP message version.">取得或設定 HTTP 訊息版本。</summary>
      <returns vsli:raw="The HTTP message version. The default value is &lt;c&gt;1.1&lt;/c&gt;, unless you're targeting .NET Core 2.1 or 2.2. In that case, the default value is &lt;c&gt;2.0&lt;/c&gt;.">HTTP 訊息版本。 除非您的目標是 .NET Core 2.1 或2.2，否則預設值為 <c>1.1</c>。 在此情況下，預設值為 <c>2.0</c>。</returns>
    </member>
    <member name="P:System.Net.Http.HttpRequestMessage.VersionPolicy">
      <summary vsli:raw="Gets or sets the policy that determines how &lt;see cref=&quot;System.Net.Http.HttpRequestMessage.Version&quot; /&gt; is interpreted and how the final HTTP version is negotiated with the server.">取得或設定原則，決定如何解譯 <see cref="System.Net.Http.HttpRequestMessage.Version" />，以及如何與伺服器交涉最終的 HTTP 版本。</summary>
      <returns vsli:raw="The HttpVersionPolicy used when the HTTP connection is established.">建立 HTTP 連接時所使用的 HttpVersionPolicy。</returns>
    </member>
    <member name="T:System.Net.Http.HttpRequestOptions" />
    <member name="M:System.Net.Http.HttpRequestOptions.#ctor" />
    <member name="M:System.Net.Http.HttpRequestOptions.Set``1(System.Net.Http.HttpRequestOptionsKey{``0},``0)">
      <param name="key" vsli:raw="The strongly typed key for the HTTP request option." />
      <param name="value" vsli:raw="The value of the HTTP request option." />
      <typeparam name="TValue" vsli:raw="The type of the HTTP value as defined by &lt;paramref name=&quot;key&quot; /&gt;." />
    </member>
    <member name="M:System.Net.Http.HttpRequestOptions.System#Collections#Generic#ICollection{System#Collections#Generic#KeyValuePair{System#String@System#Object}}#Add(System.Collections.Generic.KeyValuePair{System.String,System.Object})">
      <summary vsli:raw="Adds an item to the &lt;see cref=&quot;T:System.Collections.Generic.ICollection`1&quot; /&gt;.">將項目加入至 <see cref="T:System.Collections.Generic.ICollection`1" />。</summary>
      <param name="item" vsli:raw="The object to add to the &lt;see cref=&quot;T:System.Collections.Generic.ICollection`1&quot; /&gt;.">要加入至 <see cref="T:System.Collections.Generic.ICollection`1" /> 的物件。</param>
    </member>
    <member name="M:System.Net.Http.HttpRequestOptions.System#Collections#Generic#ICollection{System#Collections#Generic#KeyValuePair{System#String@System#Object}}#Clear">
      <summary vsli:raw="Removes all items from the &lt;see cref=&quot;T:System.Collections.Generic.ICollection`1&quot; /&gt;.">從 <see cref="T:System.Collections.Generic.ICollection`1" /> 中移除所有項目。</summary>
    </member>
    <member name="M:System.Net.Http.HttpRequestOptions.System#Collections#Generic#ICollection{System#Collections#Generic#KeyValuePair{System#String@System#Object}}#Contains(System.Collections.Generic.KeyValuePair{System.String,System.Object})">
      <summary vsli:raw="Determines whether the &lt;see cref=&quot;T:System.Collections.Generic.ICollection`1&quot; /&gt; contains a specific value.">判斷 <see cref="T:System.Collections.Generic.ICollection`1" /> 是否包含特定值。</summary>
      <param name="item" vsli:raw="The object to locate in the &lt;see cref=&quot;T:System.Collections.Generic.ICollection`1&quot; /&gt;.">要在 <see cref="T:System.Collections.Generic.ICollection`1" /> 中尋找的物件。</param>
      <returns vsli:raw="&lt;see langword=&quot;true&quot; /&gt; if &lt;paramref name=&quot;item&quot; /&gt; is found in the &lt;see cref=&quot;T:System.Collections.Generic.ICollection`1&quot; /&gt;; otherwise, &lt;see langword=&quot;false&quot; /&gt;.">如果在 <see langword="true" /> 中找到 <paramref name="item" />，則為 <see cref="T:System.Collections.Generic.ICollection`1" />，否則為 <see langword="false" />。</returns>
    </member>
    <member name="M:System.Net.Http.HttpRequestOptions.System#Collections#Generic#ICollection{System#Collections#Generic#KeyValuePair{System#String@System#Object}}#CopyTo(System.Collections.Generic.KeyValuePair{System.String,System.Object}[],System.Int32)">
      <summary vsli:raw="Copies the elements of the &lt;see cref=&quot;T:System.Collections.Generic.ICollection`1&quot; /&gt; to an &lt;see cref=&quot;T:System.Array&quot; /&gt;, starting at a particular &lt;see cref=&quot;T:System.Array&quot; /&gt; index.">從特定的 <see cref="T:System.Collections.Generic.ICollection`1" /> 索引開始，將 <see cref="T:System.Array" /> 的項目複製到 <see cref="T:System.Array" />。</summary>
      <param name="array" vsli:raw="The one-dimensional &lt;see cref=&quot;T:System.Array&quot; /&gt; that is the destination of the elements copied from &lt;see cref=&quot;T:System.Collections.Generic.ICollection`1&quot; /&gt;. The &lt;see cref=&quot;T:System.Array&quot; /&gt; must have zero-based indexing.">一維 <see cref="T:System.Array" />，是從 <see cref="T:System.Collections.Generic.ICollection`1" /> 複製過來之項目的目的端。 <see cref="T:System.Array" /> 必須有以零為起始的索引。</param>
      <param name="arrayIndex" vsli:raw="The zero-based index in &lt;paramref name=&quot;array&quot; /&gt; at which copying begins.">
        <paramref name="array" /> 中以零起始的索引，即開始複製的位置。</param>
    </member>
    <member name="M:System.Net.Http.HttpRequestOptions.System#Collections#Generic#ICollection{System#Collections#Generic#KeyValuePair{System#String@System#Object}}#Remove(System.Collections.Generic.KeyValuePair{System.String,System.Object})">
      <summary vsli:raw="Removes the first occurrence of a specific object from the &lt;see cref=&quot;T:System.Collections.Generic.ICollection`1&quot; /&gt;.">從 <see cref="T:System.Collections.Generic.ICollection`1" /> 移除特定物件之第一個符合的元素。</summary>
      <param name="item" vsli:raw="The object to remove from the &lt;see cref=&quot;T:System.Collections.Generic.ICollection`1&quot; /&gt;.">要從 <see cref="T:System.Collections.Generic.ICollection`1" /> 移除的物件。</param>
      <returns vsli:raw="&lt;see langword=&quot;true&quot; /&gt; if &lt;paramref name=&quot;item&quot; /&gt; was successfully removed from the &lt;see cref=&quot;T:System.Collections.Generic.ICollection`1&quot; /&gt;; otherwise, &lt;see langword=&quot;false&quot; /&gt;. This method also returns &lt;see langword=&quot;false&quot; /&gt; if &lt;paramref name=&quot;item&quot; /&gt; is not found in the original &lt;see cref=&quot;T:System.Collections.Generic.ICollection`1&quot; /&gt;.">如果 <see langword="true" /> 已成功從 <paramref name="item" /> 中移除，則為 <see cref="T:System.Collections.Generic.ICollection`1" />，否則為 <see langword="false" />。 如果在原本的 <see langword="false" /> 中找不到 <paramref name="item" />，則這個方法也會傳回 <see cref="T:System.Collections.Generic.ICollection`1" />。</returns>
    </member>
    <member name="M:System.Net.Http.HttpRequestOptions.System#Collections#Generic#IDictionary{System#String@System#Object}#Add(System.String,System.Object)">
      <summary vsli:raw="Adds an element with the provided key and value to the &lt;see cref=&quot;T:System.Collections.Generic.IDictionary`2&quot; /&gt;.">將隨附有索引鍵和值的項目加入至 <see cref="T:System.Collections.Generic.IDictionary`2" />。</summary>
      <param name="key" vsli:raw="The object to use as the key of the element to add.">做為要加入項目之索引鍵的物件。</param>
      <param name="value" vsli:raw="The object to use as the value of the element to add.">做為要加入項目之值的物件。</param>
    </member>
    <member name="M:System.Net.Http.HttpRequestOptions.System#Collections#Generic#IDictionary{System#String@System#Object}#ContainsKey(System.String)">
      <summary vsli:raw="Determines whether the &lt;see cref=&quot;T:System.Collections.Generic.IDictionary`2&quot; /&gt; contains an element with the specified key.">判斷 <see cref="T:System.Collections.Generic.IDictionary`2" /> 是否包含具有指定之索引鍵的項目。</summary>
      <param name="key" vsli:raw="The key to locate in the &lt;see cref=&quot;T:System.Collections.Generic.IDictionary`2&quot; /&gt;.">要在 <see cref="T:System.Collections.Generic.IDictionary`2" /> 中尋找的索引鍵。</param>
      <returns vsli:raw="&lt;see langword=&quot;true&quot; /&gt; if the &lt;see cref=&quot;T:System.Collections.Generic.IDictionary`2&quot; /&gt; contains an element with the key; otherwise, &lt;see langword=&quot;false&quot; /&gt;.">如果 <see langword="true" /> 包含具有該索引鍵的項目，則為 <see cref="T:System.Collections.Generic.IDictionary`2" />，否則為 <see langword="false" />。</returns>
    </member>
    <member name="M:System.Net.Http.HttpRequestOptions.System#Collections#Generic#IDictionary{System#String@System#Object}#Remove(System.String)">
      <summary vsli:raw="Removes the element with the specified key from the &lt;see cref=&quot;T:System.Collections.Generic.IDictionary`2&quot; /&gt;.">從 <see cref="T:System.Collections.Generic.IDictionary`2" /> 中移除具有指定之索引鍵的項目。</summary>
      <param name="key" vsli:raw="The key of the element to remove.">要移除的項目索引鍵。</param>
      <returns vsli:raw="&lt;see langword=&quot;true&quot; /&gt; if the element is successfully removed; otherwise, &lt;see langword=&quot;false&quot; /&gt;. This method also returns &lt;see langword=&quot;false&quot; /&gt; if &lt;paramref name=&quot;key&quot; /&gt; was not found in the original &lt;see cref=&quot;T:System.Collections.Generic.IDictionary`2&quot; /&gt;.">如果成功移除項目，則為 <see langword="true" />，否則為 <see langword="false" />。 如果在原始的 <see langword="false" /> 中找不到 <paramref name="key" />，則這個方法也會傳回 <see cref="T:System.Collections.Generic.IDictionary`2" />。</returns>
    </member>
    <member name="M:System.Net.Http.HttpRequestOptions.System#Collections#Generic#IDictionary{System#String@System#Object}#TryGetValue(System.String,System.Object@)">
      <param name="key" vsli:raw="The key of the value to get." />
      <param name="value" vsli:raw="When this method returns, contains the value associated with the specified key, if the key is found; otherwise, the default value for the type of the &lt;paramref name=&quot;value&quot; /&gt; parameter. This parameter is passed uninitialized." />
    </member>
    <member name="M:System.Net.Http.HttpRequestOptions.System#Collections#Generic#IEnumerable{System#Collections#Generic#KeyValuePair{System#String@System#Object}}#GetEnumerator">
      <summary vsli:raw="Returns an enumerator that iterates through the collection.">傳回逐一查看集合的列舉值。</summary>
      <returns vsli:raw="An enumerator that can be used to iterate through the collection.">可用來逐一查看集合的列舉值。</returns>
    </member>
    <member name="M:System.Net.Http.HttpRequestOptions.System#Collections#IEnumerable#GetEnumerator">
      <summary vsli:raw="Returns an enumerator that iterates through a collection.">傳回逐一查看集合的列舉值。</summary>
      <returns vsli:raw="An &lt;see cref=&quot;T:System.Collections.IEnumerator&quot; /&gt; object that can be used to iterate through the collection.">
        <see cref="T:System.Collections.IEnumerator" /> 物件，可用於逐一查看集合。</returns>
    </member>
    <member name="M:System.Net.Http.HttpRequestOptions.TryGetValue``1(System.Net.Http.HttpRequestOptionsKey{``0},``0@)">
      <param name="key" vsli:raw="The strongly typed key to get the value of an HTTP request option." />
      <param name="value" vsli:raw="When this method returns, contains the value of the specified HTTP request option." />
      <typeparam name="TValue" vsli:raw="The type of the HTTP value as defined by &lt;paramref name=&quot;key&quot; /&gt;." />
    </member>
    <member name="P:System.Net.Http.HttpRequestOptions.System#Collections#Generic#ICollection{System#Collections#Generic#KeyValuePair{System#String@System#Object}}#Count">
      <summary vsli:raw="Gets the number of elements contained in the &lt;see cref=&quot;T:System.Collections.Generic.ICollection`1&quot; /&gt;.">取得 <see cref="T:System.Collections.Generic.ICollection`1" /> 中所包含的項目數。</summary>
      <returns vsli:raw="The number of elements contained in the &lt;see cref=&quot;T:System.Collections.Generic.ICollection`1&quot; /&gt;.">
        <see cref="T:System.Collections.Generic.ICollection`1" /> 中所包含的項目數。</returns>
    </member>
    <member name="P:System.Net.Http.HttpRequestOptions.System#Collections#Generic#ICollection{System#Collections#Generic#KeyValuePair{System#String@System#Object}}#IsReadOnly">
      <summary vsli:raw="Gets a value indicating whether the &lt;see cref=&quot;T:System.Collections.Generic.ICollection`1&quot; /&gt; is read-only.">取得值，指出 <see cref="T:System.Collections.Generic.ICollection`1" /> 是否唯讀。</summary>
      <returns vsli:raw="&lt;see langword=&quot;true&quot; /&gt; if the &lt;see cref=&quot;T:System.Collections.Generic.ICollection`1&quot; /&gt; is read-only; otherwise, &lt;see langword=&quot;false&quot; /&gt;.">如果 <see langword="true" /> 是唯讀，則為 <see cref="T:System.Collections.Generic.ICollection`1" />，否則為 <see langword="false" />。</returns>
    </member>
    <member name="P:System.Net.Http.HttpRequestOptions.System#Collections#Generic#IDictionary{System#String@System#Object}#Item(System.String)">
      <summary vsli:raw="Gets or sets the element with the specified key.">取得或設定具有指定索引鍵的項目。</summary>
      <param name="key" vsli:raw="The key of the element to get or set.">要取得或設定之項目的索引鍵。</param>
      <returns vsli:raw="The element with the specified key.">具有指定索引鍵的項目。</returns>
    </member>
    <member name="P:System.Net.Http.HttpRequestOptions.System#Collections#Generic#IDictionary{System#String@System#Object}#Keys">
      <summary vsli:raw="Gets an &lt;see cref=&quot;T:System.Collections.Generic.ICollection`1&quot; /&gt; containing the keys of the &lt;see cref=&quot;T:System.Collections.Generic.IDictionary`2&quot; /&gt;.">取得 <see cref="T:System.Collections.Generic.ICollection`1" />，包含 <see cref="T:System.Collections.Generic.IDictionary`2" /> 的索引鍵。</summary>
      <returns vsli:raw="An &lt;see cref=&quot;T:System.Collections.Generic.ICollection`1&quot; /&gt; containing the keys of the object that implements &lt;see cref=&quot;T:System.Collections.Generic.IDictionary`2&quot; /&gt;.">
        <see cref="T:System.Collections.Generic.ICollection`1" />，包含實作 <see cref="T:System.Collections.Generic.IDictionary`2" /> 之物件的索引鍵。</returns>
    </member>
    <member name="P:System.Net.Http.HttpRequestOptions.System#Collections#Generic#IDictionary{System#String@System#Object}#Values">
      <summary vsli:raw="Gets an &lt;see cref=&quot;T:System.Collections.Generic.ICollection`1&quot; /&gt; containing the values in the &lt;see cref=&quot;T:System.Collections.Generic.IDictionary`2&quot; /&gt;.">取得 <see cref="T:System.Collections.Generic.ICollection`1" />，包含 <see cref="T:System.Collections.Generic.IDictionary`2" /> 中的值。</summary>
      <returns vsli:raw="An &lt;see cref=&quot;T:System.Collections.Generic.ICollection`1&quot; /&gt; containing the values in the object that implements &lt;see cref=&quot;T:System.Collections.Generic.IDictionary`2&quot; /&gt;.">
        <see cref="T:System.Collections.Generic.ICollection`1" />，包含實作 <see cref="T:System.Collections.Generic.IDictionary`2" /> 之物件中的值。</returns>
    </member>
    <member name="T:System.Net.Http.HttpRequestOptionsKey`1">
      <typeparam name="TValue" vsli:raw="The type of the value of the option." />
    </member>
    <member name="M:System.Net.Http.HttpRequestOptionsKey`1.#ctor(System.String)">
      <param name="key" vsli:raw="Name of the HTTP request option." />
    </member>
    <member name="P:System.Net.Http.HttpRequestOptionsKey`1.Key" />
    <member name="T:System.Net.Http.HttpResponseMessage">
      <summary vsli:raw="Represents a HTTP response message including the status code and data.">表示包含狀態碼及資料的 HTTP 回應訊息。</summary>
    </member>
    <member name="M:System.Net.Http.HttpResponseMessage.#ctor">
      <summary vsli:raw="Initializes a new instance of the &lt;see cref=&quot;T:System.Net.Http.HttpResponseMessage&quot; /&gt; class.">初始化 <see cref="T:System.Net.Http.HttpResponseMessage" /> 類別的新執行個體。</summary>
    </member>
    <member name="M:System.Net.Http.HttpResponseMessage.#ctor(System.Net.HttpStatusCode)">
      <summary vsli:raw="Initializes a new instance of the &lt;see cref=&quot;T:System.Net.Http.HttpResponseMessage&quot; /&gt; class with a specific &lt;see cref=&quot;P:System.Net.Http.HttpResponseMessage.StatusCode&quot; /&gt;.">使用特定 <see cref="T:System.Net.Http.HttpResponseMessage" />，初始化 <see cref="P:System.Net.Http.HttpResponseMessage.StatusCode" /> 類別的新執行個體。</summary>
      <param name="statusCode" vsli:raw="The status code of the HTTP response.">HTTP 回應的狀態碼。</param>
    </member>
    <member name="M:System.Net.Http.HttpResponseMessage.Dispose">
      <summary vsli:raw="Releases the unmanaged resources and disposes of unmanaged resources used by the &lt;see cref=&quot;T:System.Net.Http.HttpResponseMessage&quot; /&gt;.">釋放 Unmanaged 資源，並處置 <see cref="T:System.Net.Http.HttpResponseMessage" /> 所使用的 Unmanaged 資源。</summary>
    </member>
    <member name="M:System.Net.Http.HttpResponseMessage.Dispose(System.Boolean)">
      <summary vsli:raw="Releases the unmanaged resources used by the &lt;see cref=&quot;T:System.Net.Http.HttpResponseMessage&quot; /&gt; and optionally disposes of the managed resources.">釋放 <see cref="T:System.Net.Http.HttpResponseMessage" /> 所使用的 Unmanaged 資源，並選擇性處置 Managed 資源。</summary>
      <param name="disposing" vsli:raw="&lt;see langword=&quot;true&quot; /&gt; to release both managed and unmanaged resources; &lt;see langword=&quot;false&quot; /&gt; to releases only unmanaged resources.">
        <see langword="true" /> 表示會同時釋放 Managed 和 Unmanaged 資源；<see langword="false" /> 則表示只釋放 Unmanaged 資源。</param>
    </member>
    <member name="M:System.Net.Http.HttpResponseMessage.EnsureSuccessStatusCode">
      <summary vsli:raw="Throws an exception if the &lt;see cref=&quot;P:System.Net.Http.HttpResponseMessage.IsSuccessStatusCode&quot; /&gt; property for the HTTP response is &lt;see langword=&quot;false&quot; /&gt;.">如果 HTTP 回應的 <see cref="P:System.Net.Http.HttpResponseMessage.IsSuccessStatusCode" /> 屬性是 <see langword="false" />，即會擲回例外狀況。</summary>
      <exception cref="T:System.Net.Http.HttpRequestException" vsli:raw="The HTTP response is unsuccessful.">HTTP 回應失敗。</exception>
      <returns vsli:raw="The HTTP response message if the call is successful.">表示呼叫成功的 HTTP 回應訊息。</returns>
    </member>
    <member name="M:System.Net.Http.HttpResponseMessage.ToString">
      <summary vsli:raw="Returns a string that represents the current object.">傳回代表目前物件的字串。</summary>
      <returns vsli:raw="A string representation of the current object.">目前物件的字串表示。</returns>
    </member>
    <member name="P:System.Net.Http.HttpResponseMessage.Content">
      <summary vsli:raw="Gets or sets the content of a HTTP response message.">取得或設定 HTTP 回應訊息的內容。</summary>
      <returns vsli:raw="The content of the HTTP response message.">HTTP 回應訊息的內容。</returns>
    </member>
    <member name="P:System.Net.Http.HttpResponseMessage.Headers">
      <summary vsli:raw="Gets the collection of HTTP response headers.">取得 HTTP 回應標頭的集合。</summary>
      <returns vsli:raw="The collection of HTTP response headers.">HTTP 回應標頭的集合。</returns>
    </member>
    <member name="P:System.Net.Http.HttpResponseMessage.IsSuccessStatusCode">
      <summary vsli:raw="Gets a value that indicates if the HTTP response was successful.">取得指示 HTTP 回應是否成功的值。</summary>
      <returns vsli:raw="&lt;see langword=&quot;true&quot; /&gt; if &lt;see cref=&quot;P:System.Net.Http.HttpResponseMessage.StatusCode&quot; /&gt; was in the range 200-299; otherwise, &lt;see langword=&quot;false&quot; /&gt;.">
        <see langword="true" /> 如果 <see cref="P:System.Net.Http.HttpResponseMessage.StatusCode" /> 是在範圍200-299 中，則為，否則為 <see langword="false" /> 。</returns>
    </member>
    <member name="P:System.Net.Http.HttpResponseMessage.ReasonPhrase">
      <summary vsli:raw="Gets or sets the reason phrase which typically is sent by servers together with the status code.">取得或設定通常由伺服器連同狀態碼傳送的原因片語。</summary>
      <returns vsli:raw="The reason phrase sent by the server.">伺服器所傳送的原因片語。</returns>
    </member>
    <member name="P:System.Net.Http.HttpResponseMessage.RequestMessage">
      <summary vsli:raw="Gets or sets the request message which led to this response message.">取得或設定導致此回應訊息的要求訊息。</summary>
      <returns vsli:raw="The request message which led to this response message.">導致此回應訊息的要求訊息。</returns>
    </member>
    <member name="P:System.Net.Http.HttpResponseMessage.StatusCode">
      <summary vsli:raw="Gets or sets the status code of the HTTP response.">取得或設定 HTTP 回應的狀態碼。</summary>
      <returns vsli:raw="The status code of the HTTP response.">HTTP 回應的狀態碼。</returns>
    </member>
    <member name="P:System.Net.Http.HttpResponseMessage.TrailingHeaders">
      <summary vsli:raw="Gets the collection of trailing headers included in an HTTP response.">取得包含在 HTTP 回應中的尾端標頭集合。</summary>
      <exception cref="T:System.Net.Http.HttpRequestException" vsli:raw="PROTOCOL_ERROR: The HTTP/2 response contains pseudo-headers in the Trailing Headers Frame.">PROTOCOL_ERROR： HTTP/2 回應在尾端標頭框架中包含虛擬標頭。</exception>
      <returns vsli:raw="The collection of trailing headers in the HTTP response.">HTTP 回應中尾端標頭的集合。</returns>
    </member>
    <member name="P:System.Net.Http.HttpResponseMessage.Version">
      <summary vsli:raw="Gets or sets the HTTP message version.">取得或設定 HTTP 訊息版本。</summary>
      <returns vsli:raw="The HTTP message version. The default is 1.1.">HTTP 訊息版本。 預設為 1.1。</returns>
    </member>
    <member name="T:System.Net.Http.HttpVersionPolicy">
      <summary vsli:raw="Specifies behaviors for selecting and negotiating the HTTP version for a request.">針對選取及協調要求的 HTTP 版本指定行為。</summary>
    </member>
    <member name="F:System.Net.Http.HttpVersionPolicy.RequestVersionExact">
      <summary vsli:raw="&lt;para&gt;Only use the requested version.&lt;/para&gt;&lt;para&gt;This option allows for use of a prenegotiated clear text connection for the requested version.&lt;/para&gt;">只使用要求的版本。</summary>
    </member>
    <member name="F:System.Net.Http.HttpVersionPolicy.RequestVersionOrHigher">
      <summary vsli:raw="&lt;para&gt;Use the highest available version, downgrading only to the requested version but not below.&lt;/para&gt;&lt;para&gt;If the server supports a higher version than the requested version (either negotiated via ALPN (H2) or advertised via Alt-Svc (H3)) and a secure connection is requested, the result is the highest available version. Otherwise, the version downgrades to &lt;see cref=&quot;System.Net.Http.HttpRequestMessage.Version&quot; /&gt;. This option allows use of a prenegotiated clear text connection for the requested version but not for a higher version.&lt;/para&gt;">請使用最高的可用版本，只降級至要求的版本而不要低於該版本。</summary>
    </member>
    <member name="F:System.Net.Http.HttpVersionPolicy.RequestVersionOrLower">
      <summary vsli:raw="&lt;para&gt;Use the requested version or downgrade to a lower one. This is the default behavior.&lt;/para&gt;&lt;para&gt;If the server supports the requested version, either negotiated via ALPN (H2) or advertised via Alt-Svc (H3), and a secure connection is being requested, the result is the &lt;see cref=&quot;System.Net.Http.HttpRequestMessage.Version&quot; /&gt;. Otherwise, the version downgrades to HTTP/1.1. This option does not allow use of a prenegotiated clear text connection, for example, H2C.&lt;/para&gt;">使用要求的版本或降級至較低的版本。 這是預設行為。</summary>
    </member>
    <member name="T:System.Net.Http.MessageProcessingHandler">
      <summary vsli:raw="A base type for handlers which only do some small processing of request and/or response messages.">處理常式的基底類型，這些處理常式僅對要求和 (或) 回應訊息執行一些小型處理。</summary>
    </member>
    <member name="M:System.Net.Http.MessageProcessingHandler.#ctor">
      <summary vsli:raw="Creates an instance of a &lt;see cref=&quot;T:System.Net.Http.MessageProcessingHandler&quot; /&gt; class.">建立 <see cref="T:System.Net.Http.MessageProcessingHandler" /> 類別的執行個體。</summary>
    </member>
    <member name="M:System.Net.Http.MessageProcessingHandler.#ctor(System.Net.Http.HttpMessageHandler)">
      <summary vsli:raw="Creates an instance of a &lt;see cref=&quot;T:System.Net.Http.MessageProcessingHandler&quot; /&gt; class with a specific inner handler.">使用特定的內部處理常式，建立 <see cref="T:System.Net.Http.MessageProcessingHandler" /> 類別的執行個體。</summary>
      <param name="innerHandler" vsli:raw="The inner handler which is responsible for processing the HTTP response messages.">負責處理 HTTP 回應訊息的內部處理常式。</param>
    </member>
    <member name="M:System.Net.Http.MessageProcessingHandler.ProcessRequest(System.Net.Http.HttpRequestMessage,System.Threading.CancellationToken)">
      <summary vsli:raw="Performs processing on each request sent to the server.">針對傳送到伺服器的每個要求執行處理。</summary>
      <param name="request" vsli:raw="The HTTP request message to process.">要處理的 HTTP 要求訊息。</param>
      <param name="cancellationToken" vsli:raw="A cancellation token that can be used by other objects or threads to receive notice of cancellation.">取消語彙基元，可由其他物件或執行緒用來接收取消通知。</param>
      <returns vsli:raw="The HTTP request message that was processed.">已處理的 HTTP 要求訊息。</returns>
    </member>
    <member name="M:System.Net.Http.MessageProcessingHandler.ProcessResponse(System.Net.Http.HttpResponseMessage,System.Threading.CancellationToken)">
      <summary vsli:raw="Perform processing on each response from the server.">針對來自伺服器的每個回應進行處理。</summary>
      <param name="response" vsli:raw="The HTTP response message to process.">要處理的 HTTP 回應訊息。</param>
      <param name="cancellationToken" vsli:raw="A cancellation token that can be used by other objects or threads to receive notice of cancellation.">取消語彙基元，可由其他物件或執行緒用來接收取消通知。</param>
      <returns vsli:raw="The HTTP response message that was processed.">已處理的 HTTP 回應訊息。</returns>
    </member>
    <member name="M:System.Net.Http.MessageProcessingHandler.Send(System.Net.Http.HttpRequestMessage,System.Threading.CancellationToken)">
      <summary vsli:raw="Sends an HTTP request to the inner handler to send to the server.">將 HTTP 要求傳送到內部處理常式以傳送到伺服器。</summary>
      <param name="request" vsli:raw="The HTTP request message to send to the server.">要傳送至伺服器的 HTTP 要求訊息。</param>
      <param name="cancellationToken" vsli:raw="A cancellation token that can be used by other objects or threads to receive notice of cancellation.">取消語彙基元，可由其他物件或執行緒用來接收取消通知。</param>
      <returns vsli:raw="The HTTP response message.">HTTP 回應訊息。</returns>
    </member>
    <member name="M:System.Net.Http.MessageProcessingHandler.SendAsync(System.Net.Http.HttpRequestMessage,System.Threading.CancellationToken)">
      <summary vsli:raw="Sends an HTTP request to the inner handler to send to the server as an asynchronous operation.">以非同步作業方式將 HTTP 要求傳送到內部處理常式，以傳送到伺服器。</summary>
      <param name="request" vsli:raw="The HTTP request message to send to the server.">要傳送至伺服器的 HTTP 要求訊息。</param>
      <param name="cancellationToken" vsli:raw="A cancellation token that can be used by other objects or threads to receive notice of cancellation.">取消語彙基元，可由其他物件或執行緒用來接收取消通知。</param>
      <exception cref="T:System.ArgumentNullException" vsli:raw="The &lt;paramref name=&quot;request&quot; /&gt; was &lt;see langword=&quot;null&quot; /&gt;.">
        <paramref name="request" /> 以前是 <see langword="null" />。</exception>
      <returns vsli:raw="The task object representing the asynchronous operation.">工作物件，表示非同步作業。</returns>
    </member>
    <member name="T:System.Net.Http.MultipartContent">
      <summary vsli:raw="Provides a collection of &lt;see cref=&quot;T:System.Net.Http.HttpContent&quot; /&gt; objects that get serialized using the multipart/* content type specification.">提供使用 multipart/* 內容類型規格進行序列化之 <see cref="T:System.Net.Http.HttpContent" /> 物件的集合。</summary>
    </member>
    <member name="M:System.Net.Http.MultipartContent.#ctor">
      <summary vsli:raw="Creates a new instance of the &lt;see cref=&quot;T:System.Net.Http.MultipartContent&quot; /&gt; class.">建立 <see cref="T:System.Net.Http.MultipartContent" /> 類別的新執行個體。</summary>
    </member>
    <member name="M:System.Net.Http.MultipartContent.#ctor(System.String)">
      <summary vsli:raw="Creates a new instance of the &lt;see cref=&quot;T:System.Net.Http.MultipartContent&quot; /&gt; class.">建立 <see cref="T:System.Net.Http.MultipartContent" /> 類別的新執行個體。</summary>
      <param name="subtype" vsli:raw="The subtype of the multipart content.">多部分內容的子型別。</param>
      <exception cref="T:System.ArgumentException" vsli:raw="The &lt;paramref name=&quot;subtype&quot; /&gt; was &lt;see langword=&quot;null&quot; /&gt; or contains only white space characters.">
        <paramref name="subtype" /> 曾為 <see langword="null" />，或只包含空白字元。</exception>
    </member>
    <member name="M:System.Net.Http.MultipartContent.#ctor(System.String,System.String)">
      <summary vsli:raw="Creates a new instance of the &lt;see cref=&quot;T:System.Net.Http.MultipartContent&quot; /&gt; class.">建立 <see cref="T:System.Net.Http.MultipartContent" /> 類別的新執行個體。</summary>
      <param name="subtype" vsli:raw="The subtype of the multipart content.">多部分內容的子類型。</param>
      <param name="boundary" vsli:raw="The boundary string for the multipart content.">多重內容的界限字串。</param>
      <exception cref="T:System.ArgumentException" vsli:raw="The &lt;paramref name=&quot;subtype&quot; /&gt; was &lt;see langword=&quot;null&quot; /&gt; or an empty string.  &#xA;  &#xA; The &lt;paramref name=&quot;boundary&quot; /&gt; was &lt;see langword=&quot;null&quot; /&gt; or contains only white space characters.  &#xA;  &#xA; -or-  &#xA;  &#xA; The &lt;paramref name=&quot;boundary&quot; /&gt; ends with a space character.">
        <paramref name="subtype" /> 為 <see langword="null" />，或是空字串。  
  
<paramref name="boundary" /> 曾為 <see langword="null" />，或只包含空白字元。  
  
-或- 
<paramref name="boundary" /> 以空白字元結束。</exception>
      <exception cref="T:System.ArgumentOutOfRangeException" vsli:raw="The length of the &lt;paramref name=&quot;boundary&quot; /&gt; was greater than 70.">
        <paramref name="boundary" /> 的長度曾大於 70。</exception>
    </member>
    <member name="M:System.Net.Http.MultipartContent.Add(System.Net.Http.HttpContent)">
      <summary vsli:raw="Add multipart HTTP content to a collection of &lt;see cref=&quot;T:System.Net.Http.HttpContent&quot; /&gt; objects that get serialized using the multipart/* content type specification.">將多重部分 HTTP 內容加入至使用 multipart/* 內容類型規格進行序列化之 <see cref="T:System.Net.Http.HttpContent" /> 物件的集合。</summary>
      <param name="content" vsli:raw="The HTTP content to add to the collection.">要新增至集合中的 HTTP 內容。</param>
      <exception cref="T:System.ArgumentNullException" vsli:raw="The &lt;paramref name=&quot;content&quot; /&gt; was &lt;see langword=&quot;null&quot; /&gt;.">
        <paramref name="content" /> 以前是 <see langword="null" />。</exception>
    </member>
    <member name="M:System.Net.Http.MultipartContent.CreateContentReadStream(System.Threading.CancellationToken)">
      <summary vsli:raw="Serializes the HTTP content to a stream using the multipart/* encoding.">使用 multipart/* 編碼將 HTTP 內容序列化為資料流。</summary>
      <param name="cancellationToken" vsli:raw="The cancellation token to cancel the operation.">用於取消作業的取消權杖。</param>
      <returns vsli:raw="The HTTP content stream that represents the multipart/* encoded HTTP content.">HTTP 內容資料流表示經 multipart/* 編碼的 HTTP 內容。</returns>
    </member>
    <member name="M:System.Net.Http.MultipartContent.CreateContentReadStreamAsync">
      <summary vsli:raw="Serializes the HTTP content to a stream using the multipart/* encoding as an asynchronous operation.">以非同步作業使用 multipart/* 編碼將 HTTP 內容序列化為資料流。</summary>
      <returns vsli:raw="The task object representing the asynchronous operation.">工作物件，表示非同步作業。</returns>
    </member>
    <member name="M:System.Net.Http.MultipartContent.CreateContentReadStreamAsync(System.Threading.CancellationToken)">
      <summary vsli:raw="Serializes the HTTP content to a stream using the multipart/* encoding as an asynchronous operation.">以非同步作業使用 multipart/* 編碼將 HTTP 內容序列化為資料流。</summary>
      <param name="cancellationToken" vsli:raw="The cancellation token to cancel the operation.">用於取消作業的取消權杖。</param>
      <returns vsli:raw="The task object representing the asynchronous operation.">工作物件，表示非同步作業。</returns>
    </member>
    <member name="M:System.Net.Http.MultipartContent.Dispose(System.Boolean)">
      <summary vsli:raw="Releases the unmanaged resources used by the &lt;see cref=&quot;T:System.Net.Http.MultipartContent&quot; /&gt; and optionally disposes of the managed resources.">釋放 <see cref="T:System.Net.Http.MultipartContent" /> 所使用的 Unmanaged 資源，並選擇性處置 Managed 資源。</summary>
      <param name="disposing" vsli:raw="&lt;see langword=&quot;true&quot; /&gt; to release both managed and unmanaged resources; &lt;see langword=&quot;false&quot; /&gt; to releases only unmanaged resources.">
        <see langword="true" /> 表示會同時釋放 Managed 和 Unmanaged 資源；<see langword="false" /> 則表示只釋放 Unmanaged 資源。</param>
    </member>
    <member name="M:System.Net.Http.MultipartContent.GetEnumerator">
      <summary vsli:raw="Returns an enumerator that iterates through the collection of &lt;see cref=&quot;T:System.Net.Http.HttpContent&quot; /&gt; objects that get serialized using the multipart/* content type specification.">傳回列舉程式，逐一查看使用 multipart/* 內容類型規格進行序列化的 <see cref="T:System.Net.Http.HttpContent" /> 物件集合。</summary>
      <returns vsli:raw="An object that can be used to iterate through the collection.">可用於逐一查看集合的物件。</returns>
    </member>
    <member name="M:System.Net.Http.MultipartContent.SerializeToStream(System.IO.Stream,System.Net.TransportContext,System.Threading.CancellationToken)">
      <summary vsli:raw="Serializes the multipart HTTP content to a stream.">將多部分 HTTP 內容序列化為資料流。</summary>
      <param name="stream" vsli:raw="The target stream.">目標資料流。</param>
      <param name="context" vsli:raw="Information about the transport (for example, the channel binding token). This parameter may be &lt;see langword=&quot;null&quot; /&gt;.">與傳輸有關的資訊 (例如通道繫結權杖)。 此參數可以是 <see langword="null" />。</param>
      <param name="cancellationToken" vsli:raw="The cancellation token to cancel the operation.">用於取消作業的取消權杖。</param>
    </member>
    <member name="M:System.Net.Http.MultipartContent.SerializeToStreamAsync(System.IO.Stream,System.Net.TransportContext)">
      <summary vsli:raw="Serialize the multipart HTTP content to a stream as an asynchronous operation.">以非同步作業方式將多部分 HTTP 內容序列化為資料流。</summary>
      <param name="stream" vsli:raw="The target stream.">目標資料流。</param>
      <param name="context" vsli:raw="Information about the transport (channel binding token, for example). This parameter may be &lt;see langword=&quot;null&quot; /&gt;.">傳輸的相關資訊 (例如通道繫結權杖)。 此參數可以是 <see langword="null" />。</param>
      <returns vsli:raw="The task object representing the asynchronous operation.">工作物件，表示非同步作業。</returns>
    </member>
    <member name="M:System.Net.Http.MultipartContent.SerializeToStreamAsync(System.IO.Stream,System.Net.TransportContext,System.Threading.CancellationToken)">
      <summary vsli:raw="Serialize the multipart HTTP content to a stream as an asynchronous operation.">以非同步作業方式將多部分 HTTP 內容序列化為資料流。</summary>
      <param name="stream" vsli:raw="The target stream.">目標資料流。</param>
      <param name="context" vsli:raw="Information about the transport (channel binding token, for example). This parameter may be &lt;see langword=&quot;null&quot; /&gt;.">傳輸的相關資訊 (例如通道繫結權杖)。 此參數可以是 <see langword="null" />。</param>
      <param name="cancellationToken" vsli:raw="The cancellation token to cancel the operation.">用於取消作業的取消權杖。</param>
      <returns vsli:raw="The task object representing the asynchronous operation.">工作物件，表示非同步作業。</returns>
    </member>
    <member name="M:System.Net.Http.MultipartContent.System#Collections#IEnumerable#GetEnumerator">
      <summary vsli:raw="The explicit implementation of the &lt;see cref=&quot;M:System.Net.Http.MultipartContent.GetEnumerator&quot; /&gt; method.">
        <see cref="M:System.Net.Http.MultipartContent.GetEnumerator" /> 方法的明確實作。</summary>
      <returns vsli:raw="An object that can be used to iterate through the collection.">可用於逐一查看集合的物件。</returns>
    </member>
    <member name="M:System.Net.Http.MultipartContent.TryComputeLength(System.Int64@)">
      <summary vsli:raw="Determines whether the HTTP multipart content has a valid length in bytes.">判斷 HTTP 多部分內容是否具備有效的位元組長度。</summary>
      <param name="length" vsli:raw="The length in bytes of the HTTP content.">HTTP 內容的位元組長度。</param>
      <returns vsli:raw="&lt;see langword=&quot;true&quot; /&gt; if &lt;paramref name=&quot;length&quot; /&gt; is a valid length; otherwise, &lt;see langword=&quot;false&quot; /&gt;.">若 <paramref name="length" /> 為有效的長度則為 <see langword="true" />；否則為 <see langword="false" />。</returns>
    </member>
    <member name="P:System.Net.Http.MultipartContent.HeaderEncodingSelector">
      <summary vsli:raw="Gets or sets a callback that decode response header values.">取得或設定解碼回應標頭值的回呼。</summary>
      <returns vsli:raw="The header encoding selector callback to decode the value for the specified response header name, or &lt;see langword=&quot;null&quot; /&gt; to indicate the default behavior.">標頭編碼選取器回呼，用來解碼指定之回應標頭名稱的值，或 <see langword="null" /> 表示預設行為。</returns>
    </member>
    <member name="T:System.Net.Http.MultipartFormDataContent">
      <summary vsli:raw="Provides a container for content encoded using multipart/form-data MIME type.">提供使用 multipart/form-data MIME 類型編碼內容的容器。</summary>
    </member>
    <member name="M:System.Net.Http.MultipartFormDataContent.#ctor">
      <summary vsli:raw="Creates a new instance of the &lt;see cref=&quot;T:System.Net.Http.MultipartFormDataContent&quot; /&gt; class.">建立 <see cref="T:System.Net.Http.MultipartFormDataContent" /> 類別的新執行個體。</summary>
    </member>
    <member name="M:System.Net.Http.MultipartFormDataContent.#ctor(System.String)">
      <summary vsli:raw="Creates a new instance of the &lt;see cref=&quot;T:System.Net.Http.MultipartFormDataContent&quot; /&gt; class.">建立 <see cref="T:System.Net.Http.MultipartFormDataContent" /> 類別的新執行個體。</summary>
      <param name="boundary" vsli:raw="The boundary string for the multipart form data content.">多重表單資料內容的界限字串。</param>
      <exception cref="T:System.ArgumentException" vsli:raw="The &lt;paramref name=&quot;boundary&quot; /&gt; was &lt;see langword=&quot;null&quot; /&gt; or contains only white space characters.  &#xA;  &#xA; -or-  &#xA;  &#xA; The &lt;paramref name=&quot;boundary&quot; /&gt; ends with a space character.">
        <paramref name="boundary" /> 為 <see langword="null" /> 或僅包含空白字元。  
  
-或- 
<paramref name="boundary" /> 以空白字元結束。</exception>
      <exception cref="T:System.ArgumentOutOfRangeException" vsli:raw="The length of the &lt;paramref name=&quot;boundary&quot; /&gt; was greater than 70.">
        <paramref name="boundary" /> 的長度大於 70。</exception>
    </member>
    <member name="M:System.Net.Http.MultipartFormDataContent.Add(System.Net.Http.HttpContent)">
      <summary vsli:raw="Add HTTP content to a collection of &lt;see cref=&quot;T:System.Net.Http.HttpContent&quot; /&gt; objects that get serialized to multipart/form-data MIME type.">將 HTTP 內容加入至 <see cref="T:System.Net.Http.HttpContent" /> 物件的集合，會序列化為 multipart/form-data MIME 類型。</summary>
      <param name="content" vsli:raw="The HTTP content to add to the collection.">要新增至集合中的 HTTP 內容。</param>
      <exception cref="T:System.ArgumentNullException" vsli:raw="The &lt;paramref name=&quot;content&quot; /&gt; was &lt;see langword=&quot;null&quot; /&gt;.">
        <paramref name="content" /> 以前是 <see langword="null" />。</exception>
    </member>
    <member name="M:System.Net.Http.MultipartFormDataContent.Add(System.Net.Http.HttpContent,System.String)">
      <summary vsli:raw="Add HTTP content to a collection of &lt;see cref=&quot;T:System.Net.Http.HttpContent&quot; /&gt; objects that get serialized to multipart/form-data MIME type.">將 HTTP 內容加入至 <see cref="T:System.Net.Http.HttpContent" /> 物件的集合，會序列化為 multipart/form-data MIME 類型。</summary>
      <param name="content" vsli:raw="The HTTP content to add to the collection.">要新增至集合中的 HTTP 內容。</param>
      <param name="name" vsli:raw="The name for the HTTP content to add.">要為 HTTP 內容加入的名稱。</param>
      <exception cref="T:System.ArgumentException" vsli:raw="The &lt;paramref name=&quot;name&quot; /&gt; was &lt;see langword=&quot;null&quot; /&gt; or contains only white space characters.">
        <paramref name="name" /> 為 <see langword="null" /> 或僅包含空白字元。</exception>
      <exception cref="T:System.ArgumentNullException" vsli:raw="The &lt;paramref name=&quot;content&quot; /&gt; was &lt;see langword=&quot;null&quot; /&gt;.">
        <paramref name="content" /> 以前是 <see langword="null" />。</exception>
    </member>
    <member name="M:System.Net.Http.MultipartFormDataContent.Add(System.Net.Http.HttpContent,System.String,System.String)">
      <summary vsli:raw="Add HTTP content to a collection of &lt;see cref=&quot;T:System.Net.Http.HttpContent&quot; /&gt; objects that get serialized to multipart/form-data MIME type.">將 HTTP 內容加入至 <see cref="T:System.Net.Http.HttpContent" /> 物件的集合，會序列化為 multipart/form-data MIME 類型。</summary>
      <param name="content" vsli:raw="The HTTP content to add to the collection.">要新增至集合中的 HTTP 內容。</param>
      <param name="name" vsli:raw="The name for the HTTP content to add.">要為 HTTP 內容加入的名稱。</param>
      <param name="fileName" vsli:raw="The file name for the HTTP content to add to the collection.">要加入至集合中的 HTTP 內容的檔案名稱。</param>
      <exception cref="T:System.ArgumentException" vsli:raw="The &lt;paramref name=&quot;name&quot; /&gt; was &lt;see langword=&quot;null&quot; /&gt; or contains only white space characters.  &#xA;  &#xA; -or-  &#xA;  &#xA; The &lt;paramref name=&quot;fileName&quot; /&gt; was &lt;see langword=&quot;null&quot; /&gt; or contains only white space characters.">
        <paramref name="name" /> 為 <see langword="null" /> 或僅包含空白字元。  
  
-或- 
<paramref name="fileName" /> 為 <see langword="null" /> 或僅包含空白字元。</exception>
      <exception cref="T:System.ArgumentNullException" vsli:raw="The &lt;paramref name=&quot;content&quot; /&gt; was &lt;see langword=&quot;null&quot; /&gt;.">
        <paramref name="content" /> 以前是 <see langword="null" />。</exception>
    </member>
    <member name="M:System.Net.Http.MultipartFormDataContent.SerializeToStreamAsync(System.IO.Stream,System.Net.TransportContext,System.Threading.CancellationToken)">
      <summary vsli:raw="Serialize and write the content provided in the constructor to an HTTP content stream as an asynchronous operation.">以非同步作業方式，將建構函式中提供的內容序列化並寫入 HTTP 內容資料流。</summary>
      <param name="stream" vsli:raw="The target stream.">目標資料流。</param>
      <param name="context" vsli:raw="Information about the transport, like channel binding token. This parameter may be &lt;see langword=&quot;null&quot; /&gt;.">傳輸的相關資訊 (例如通道繫結權杖)。 此參數可以是 <see langword="null" />。</param>
      <param name="cancellationToken" vsli:raw="The cancellation token to cancel the operation.">用於取消作業的取消權杖。</param>
      <returns vsli:raw="The task object representing the asynchronous operation.">工作物件，表示非同步作業。</returns>
    </member>
    <member name="T:System.Net.Http.ReadOnlyMemoryContent">
      <summary vsli:raw="Provides HTTP content based on a &lt;see cref=&quot;T:System.ReadOnlyMemory`1&quot; /&gt;.">以 <see cref="T:System.ReadOnlyMemory`1" /> 為基礎提供 HTTP 內容。</summary>
    </member>
    <member name="M:System.Net.Http.ReadOnlyMemoryContent.#ctor(System.ReadOnlyMemory{System.Byte})">
      <summary vsli:raw="Initializes a new instance of the &lt;see cref=&quot;T:System.Net.Http.ReadOnlyMemoryContent&quot; /&gt; class.">初始化 <see cref="T:System.Net.Http.ReadOnlyMemoryContent" /> 類別的新執行個體。</summary>
      <param name="content" vsli:raw="The content used to initialize the &lt;see cref=&quot;T:System.Net.Http.ReadOnlyMemoryContent&quot; /&gt;.">用來初始化 <see cref="T:System.Net.Http.ReadOnlyMemoryContent" /> 的內容。</param>
    </member>
    <member name="T:System.Net.Http.SocketsHttpConnectionContext">
      <summary vsli:raw="Represents the context passed to the &lt;see cref=&quot;P:System.Net.Http.SocketsHttpHandler.ConnectCallback&quot; /&gt; for a &lt;see cref=&quot;T:System.Net.Http.SocketsHttpHandler&quot; /&gt; instance. .">代表傳遞給 <see cref="T:System.Net.Http.SocketsHttpHandler" /> 執行個體之 <see cref="P:System.Net.Http.SocketsHttpHandler.ConnectCallback" /> 的內容。 。</summary>
    </member>
    <member name="P:System.Net.Http.SocketsHttpConnectionContext.DnsEndPoint">
      <summary vsli:raw="Gets the DNS endpoint to be used by the &lt;see cref=&quot;P:System.Net.Http.SocketsHttpHandler.ConnectCallback&quot; /&gt; to establish the connection.">取得將由 <see cref="P:System.Net.Http.SocketsHttpHandler.ConnectCallback" /> 用來建立連線的 DNS 端點。</summary>
    </member>
    <member name="P:System.Net.Http.SocketsHttpConnectionContext.InitialRequestMessage">
      <summary vsli:raw="Gets the initial HttpRequestMessage that is causing the connection to be created.">取得導致建立連線的初始 HTTP 要求訊息。</summary>
      <returns vsli:raw="The request message that's causing the connection to be created.">導致建立連接的要求訊息。</returns>
    </member>
    <member name="T:System.Net.Http.SocketsHttpHandler">
      <summary vsli:raw="Provides the default message handler used by &lt;see cref=&quot;T:System.Net.Http.HttpClient&quot; /&gt; in .NET Core 2.1 and later.">提供 .NET Core 2.1 及更新版本中 <see cref="T:System.Net.Http.HttpClient" /> 使用的預設訊息處理常式。</summary>
    </member>
    <member name="M:System.Net.Http.SocketsHttpHandler.#ctor">
      <summary vsli:raw="Creates an instance of a &lt;see cref=&quot;T:System.Net.Http.SocketsHttpHandler&quot; /&gt; class.">建立 <see cref="T:System.Net.Http.SocketsHttpHandler" /> 類別的執行個體。</summary>
    </member>
    <member name="P:System.Net.Http.SocketsHttpHandler.AllowAutoRedirect">
      <summary vsli:raw="Gets or sets a value that indicates whether the handler should follow redirection responses.">取得或設定值，這個值指出此處理常式是否應該接在重新導向回應之後。</summary>
      <returns vsli:raw="&lt;see langword=&quot;true&quot; /&gt; if the handler should follow redirection responses; otherwise &lt;see langword=&quot;false&quot; /&gt;. The default value is &lt;see langword=&quot;true&quot; /&gt;.">
        <see langword="true" /> 如果處理常式應遵循重新導向回應，否則為 <see langword="false" /> 。 預設值是 <see langword="true" />。</returns>
    </member>
    <member name="P:System.Net.Http.SocketsHttpHandler.AutomaticDecompression">
      <summary vsli:raw="Gets or sets the type of decompression method used by the handler for automatic decompression of the HTTP content response.">取得或設定解壓縮方法的類型，此為 HTTP 內容回應的自動解壓縮處理常式所使用。</summary>
      <returns vsli:raw="The type of decompression method used by the handler for automatic decompression of the HTTP content response.">自動解壓縮 HTTP 內容回應的處理常式所使用的解壓縮方法類型。</returns>
    </member>
    <member name="P:System.Net.Http.SocketsHttpHandler.ConnectCallback">
      <summary vsli:raw="Gets or sets a custom callback used to open new connections.">取得或設定用來開啟新連線的自訂回呼。</summary>
      <returns vsli:raw="A callback method to create a stream.">用來建立資料流程的回呼方法。</returns>
    </member>
    <member name="P:System.Net.Http.SocketsHttpHandler.ConnectTimeout">
      <summary vsli:raw="Gets or sets the timespan to wait before the connection establishing times out.">取得或設定連線建立逾時前等候的時間長度。</summary>
      <returns vsli:raw="The timespan to wait before the connection establishing times out. The default value is &lt;see cref=&quot;F:System.Threading.Timeout.InfiniteTimeSpan&quot; /&gt;.">連接建立時間之前要等候的 timespan。預設值為 <see cref="F:System.Threading.Timeout.InfiniteTimeSpan" /> 。</returns>
    </member>
    <member name="P:System.Net.Http.SocketsHttpHandler.CookieContainer">
      <summary vsli:raw="Gets or sets the managed cookie container object.">取得或設定受管理的 Cookie 容器物件。</summary>
      <returns vsli:raw="The managed cookie container object.">受控 cookie 容器物件。</returns>
    </member>
    <member name="P:System.Net.Http.SocketsHttpHandler.Credentials">
      <summary vsli:raw="Gets or sets authentication information used by this handler.">取得或設定這個處理常式所用的驗證資訊。</summary>
      <returns vsli:raw="The authentication credentials associated with the handler. The default value is &lt;see langword=&quot;null&quot; /&gt;.">與處理常式相關聯的驗證認證。 預設值是 <see langword="null" />。</returns>
    </member>
    <member name="P:System.Net.Http.SocketsHttpHandler.DefaultProxyCredentials">
      <summary vsli:raw="When the default (system) proxy is used, gets or sets the credentials used to submit to the default proxy server for authentication.">在使用預設 (系統) Proxy 時，取得或設定用來提交到預設 Proxy 伺服器進行驗證的認證。</summary>
      <returns vsli:raw="The credentials used to authenticate the user to an authenticating proxy.">用來向驗證 proxy 驗證使用者的認證。</returns>
    </member>
    <member name="P:System.Net.Http.SocketsHttpHandler.EnableMultipleHttp2Connections">
      <summary vsli:raw="Gets or sets a value that indicates whether additional HTTP/2 connections can be established to the same server when the maximum number of concurrent streams is reached on all existing connections.">取得或設定值，這個值表示當所有現有連線上的並行資料流程都已達到最大數目時，是否可建立連至同一部伺服器的其他 HTTP/2 連線。</summary>
      <returns vsli:raw="&lt;see langword=&quot;true&quot; /&gt; if additional HTTP/2 connections are allowed to be created; otherwise, &lt;see langword=&quot;false&quot; /&gt;.">
        <see langword="true" /> 如果允許建立額外的 HTTP/2 連接;否則為 <see langword="false" /> 。</returns>
    </member>
    <member name="P:System.Net.Http.SocketsHttpHandler.Expect100ContinueTimeout">
      <summary vsli:raw="Gets or sets the time-out value for server HTTP 100 Continue response.">取得或設定伺服器 HTTP 100 Continue 回應的逾時值。</summary>
      <returns vsli:raw="The timespan to wait for the HTTP 100 Continue. The default value is 1 second.">等候 HTTP 100 繼續的 timespan。 預設值為 1 秒。</returns>
    </member>
    <member name="P:System.Net.Http.SocketsHttpHandler.IsSupported">
      <summary vsli:raw="Gets a value that indicates whether the handler is supported on the current platform.">取得值，這個值表示目前平台是否支援處理常式。</summary>
      <returns vsli:raw="&lt;see langword=&quot;true&quot; /&gt; if the handler is supported; otherwise, &lt;see langword=&quot;false&quot; /&gt;.">
        <see langword="true" /> 如果支援處理常式，則為，否則為 <see langword="false" /> 。</returns>
    </member>
    <member name="P:System.Net.Http.SocketsHttpHandler.KeepAlivePingDelay">
      <summary vsli:raw="Gets or sets the keep alive ping delay.">取得或設定 keep alive ping 延遲。</summary>
      <returns vsli:raw="The keep alive ping delay. Defaults to &lt;see cref=&quot;F:System.Threading.Timeout.InfiniteTimeSpan&quot; /&gt;.">保持運作的偵測延遲。 預設值為 <see cref="F:System.Threading.Timeout.InfiniteTimeSpan" />。</returns>
    </member>
    <member name="P:System.Net.Http.SocketsHttpHandler.KeepAlivePingPolicy">
      <summary vsli:raw="Gets or sets the keep alive ping behaviour.">取得或設定 keep alive ping 行為。</summary>
      <returns vsli:raw="The keep alive ping behaviour.">Keep-alive 偵測行為。</returns>
    </member>
    <member name="P:System.Net.Http.SocketsHttpHandler.KeepAlivePingTimeout">
      <summary vsli:raw="Gets or sets the keep alive ping timeout.">取得或設定 keep alive ping 逾時。</summary>
      <returns vsli:raw="The keep alive ping timeout. Defaults to 20 seconds.">Keep-alive ping timeout。 預設為20秒。</returns>
    </member>
    <member name="P:System.Net.Http.SocketsHttpHandler.MaxAutomaticRedirections">
      <summary vsli:raw="Gets or sets the maximum number of allowed HTTP redirects.">取得或設定允許的 HTTP 重新導向的數目上限。</summary>
      <returns vsli:raw="The maximum number of allowed HTTP redirects.">允許的 HTTP 重新導向數目上限。</returns>
    </member>
    <member name="P:System.Net.Http.SocketsHttpHandler.MaxConnectionsPerServer">
      <summary vsli:raw="Gets or sets the maximum number of simultaneous TCP connections allowed to a single server.">取得或設定單一伺服器允許的同時 TCP 連線數目上限。</summary>
      <returns vsli:raw="The maximum number of simultaneous TCP connections allowed to a single server.">允許單一伺服器的同時 TCP 連線數上限。</returns>
    </member>
    <member name="P:System.Net.Http.SocketsHttpHandler.MaxResponseDrainSize">
      <summary vsli:raw="Gets or sets the maximum amount of data that can be drained from responses in bytes.">取得或設定可從回應中清空的資料的數量上限 (以位元組為單位)。</summary>
      <returns vsli:raw="The maximum amount of data that can be drained from responses in bytes.">可從回應中清空的最大資料量（以位元組為單位）。</returns>
    </member>
    <member name="P:System.Net.Http.SocketsHttpHandler.MaxResponseHeadersLength">
      <summary vsli:raw="Gets or sets the maximum length, in kilobytes (1024 bytes), of the response headers.">取得或設定回應標頭的最大長度，以 KB (1024 位元組) 為單位。</summary>
      <returns vsli:raw="The maximum size of the header portion from the server response, in kilobytes.">伺服器回應中標頭部分的大小上限（以 kb 為單位）。</returns>
    </member>
    <member name="P:System.Net.Http.SocketsHttpHandler.PlaintextStreamFilter">
      <summary vsli:raw="Gets or sets a custom callback that provides access to the plaintext HTTP protocol stream.">取得或設定能提供純文字 HTTP 通訊協定資料流存取的自訂回呼。</summary>
      <returns vsli:raw="A callback that provides access to the plaintext HTTP protocol stream.">提供純文字 HTTP 通訊協定資料流程存取權的回呼。</returns>
    </member>
    <member name="P:System.Net.Http.SocketsHttpHandler.PooledConnectionIdleTimeout">
      <summary vsli:raw="Gets or sets how long a connection can be idle in the pool to be considered reusable.">取得或設定集區中的連線須閒置多久時間，才會視為可重複使用。</summary>
      <exception cref="T:System.ArgumentOutOfRangeException" vsli:raw="The value specified is less than &lt;see cref=&quot;F:System.TimeSpan.Zero&quot; /&gt; (except &lt;see cref=&quot;F:System.Threading.Timeout.InfiniteTimeSpan&quot; /&gt;).">指定的值小於 <see cref="F:System.TimeSpan.Zero" /> 或等於 <see cref="F:System.Threading.Timeout.InfiniteTimeSpan" />。</exception>
      <returns vsli:raw="The maximum idle time for a connection in the pool. The default value for this property is 1 minute in .NET 6 and later versions; the default value is 2 minutes in .NET Core and .NET 5">集區中的連接最大閒置時間。 這個屬性的預設值是2分鐘。</returns>
    </member>
    <member name="P:System.Net.Http.SocketsHttpHandler.PooledConnectionLifetime">
      <summary vsli:raw="Gets or sets how long a connection can be in the pool to be considered reusable.">取得或設定連線可以在集區中視為可重複使用的時間長度。</summary>
      <exception cref="T:System.ArgumentOutOfRangeException" vsli:raw="The value specified is less than &lt;see cref=&quot;F:System.TimeSpan.Zero&quot; /&gt; or is equal to &lt;see cref=&quot;F:System.Threading.Timeout.InfiniteTimeSpan&quot; /&gt;.">指定的值小於 <see cref="F:System.TimeSpan.Zero" /> 或等於 <see cref="F:System.Threading.Timeout.InfiniteTimeSpan" />。</exception>
      <returns vsli:raw="The maximum time for a connection to be in the pool. The default value for this property is &lt;see cref=&quot;F:System.Threading.Timeout.InfiniteTimeSpan&quot; /&gt;.">連接在集區中的最長時間。 這個屬性的預設值為 <see cref="F:System.Threading.Timeout.InfiniteTimeSpan" />。</returns>
    </member>
    <member name="P:System.Net.Http.SocketsHttpHandler.PreAuthenticate">
      <summary vsli:raw="Gets or sets a value that indicates whether the handler sends an Authorization header with the request.">取得或設定值，這個值指出處理常式是否隨著要求傳送授權標頭。</summary>
      <returns vsli:raw="&lt;see langword=&quot;true&quot; /&gt; if the handler sends an Authorization header with the request; otherwise, &lt;see langword=&quot;false&quot; /&gt;.">
        <see langword="true" /> 如果處理常式傳送具有要求的授權標頭，否則為 <see langword="false" /> 。</returns>
    </member>
    <member name="P:System.Net.Http.SocketsHttpHandler.Properties" />
    <member name="P:System.Net.Http.SocketsHttpHandler.Proxy">
      <summary vsli:raw="Gets or sets the custom proxy when the &lt;see cref=&quot;P:System.Net.Http.SocketsHttpHandler.UseProxy&quot; /&gt; property is &lt;see langword=&quot;true&quot; /&gt;.">在 <see cref="P:System.Net.Http.SocketsHttpHandler.UseProxy" /> 屬性為 <see langword="true" /> 時，取得或設定自訂 Proxy。</summary>
      <returns vsli:raw="The custom proxy.">自訂 proxy。</returns>
    </member>
    <member name="P:System.Net.Http.SocketsHttpHandler.RequestHeaderEncodingSelector">
      <summary vsli:raw="Gets or sets a callback that selects the &lt;see cref=&quot;System.Text.Encoding&quot; /&gt; to encode request header values.">取得或設定解碼要求標頭值的回呼。</summary>
      <returns vsli:raw="The header encoding selector callback that selects the &lt;see cref=&quot;System.Text.Encoding&quot; /&gt; to encode the value for the specified request header name, or &lt;see langword=&quot;null&quot; /&gt; to indicate the default behavior.">標頭編碼選取器回呼，用來解碼指定之回應標頭名稱的值，或 <see langword="null" /> 表示預設行為。</returns>
    </member>
    <member name="P:System.Net.Http.SocketsHttpHandler.ResponseDrainTimeout">
      <summary vsli:raw="Gets or sets the timespan to wait for data to be drained from responses.">取得或設定要等候資料從回應中清空的時間長度。</summary>
      <returns vsli:raw="The timespan to wait for data to be drained from responses.">等候資料從回應中清空的 timespan。</returns>
    </member>
    <member name="P:System.Net.Http.SocketsHttpHandler.ResponseHeaderEncodingSelector">
      <summary vsli:raw="Gets or sets a callback that selects the &lt;see cref=&quot;System.Text.Encoding&quot; /&gt; to decode response header values.">取得或設定解碼回應標頭值的回呼。</summary>
      <returns vsli:raw="The header encoding selector callback that selects the &lt;see cref=&quot;System.Text.Encoding&quot; /&gt; to decode the value for the specified response header name, or &lt;see langword=&quot;null&quot; /&gt; to indicate the default behavior.">標頭編碼選取器回呼，用來解碼指定之回應標頭名稱的值，或 <see langword="null" /> 表示預設行為。</returns>
    </member>
    <member name="P:System.Net.Http.SocketsHttpHandler.SslOptions">
      <summary vsli:raw="Gets or sets the set of options used for client TLS authentication.">取得或設定一組用於用戶端 TLS 驗證的選項。</summary>
      <returns vsli:raw="The set of options used for client TLS authentication.">用於用戶端 TLS 驗證的選項組。</returns>
    </member>
    <member name="P:System.Net.Http.SocketsHttpHandler.UseCookies">
      <summary vsli:raw="Gets or sets a value that indicates whether the handler should use cookies.">取得或設定值，指出此處理常式是否應該使用 Cookie。</summary>
      <returns vsli:raw="A value that indicates whether the handler should use cookies.">值，這個值會指出處理常式是否應該使用 cookie。</returns>
    </member>
    <member name="P:System.Net.Http.SocketsHttpHandler.UseProxy">
      <summary vsli:raw="Gets or sets a value that indicates whether the handler should use a proxy.">取得或設定值，指出處理常式是否應該使用 Proxy。</summary>
      <returns vsli:raw="A value that indicates whether the handler should use a proxy.">值，這個值會指出處理常式是否應該使用 proxy。</returns>
    </member>
    <member name="T:System.Net.Http.SocketsHttpPlaintextStreamFilterContext">
      <summary vsli:raw="Represents the context passed to the PlaintextStreamFilter for a SocketsHttpHandler instance.">代表傳遞給 SocketsHttpHandler 執行個體之 PlaintextStreamFilter 的內容。</summary>
    </member>
    <member name="P:System.Net.Http.SocketsHttpPlaintextStreamFilterContext.InitialRequestMessage">
      <summary vsli:raw="Gets the initial HttpRequestMessage that is causing the stream to be used.">取得導致使用資料流的初始 HTTP 要求訊息。</summary>
      <returns vsli:raw="The HTTP request message that is causing the stream to be used.">導致使用資料流程的 HTTP 要求訊息。</returns>
    </member>
    <member name="P:System.Net.Http.SocketsHttpPlaintextStreamFilterContext.NegotiatedHttpVersion">
      <summary vsli:raw="Gets the version of HTTP in use for this stream.">取得針對此資料流使用的 HTTP 版本。</summary>
      <returns vsli:raw="The version of HTTP in use for this stream.">此資料流程所使用的 HTTP 版本。</returns>
    </member>
    <member name="P:System.Net.Http.SocketsHttpPlaintextStreamFilterContext.PlaintextStream">
      <summary vsli:raw="Gets the plaintext Stream that will be used for HTTP protocol requests and responses.">取得將用於 HTTP 通訊協定要求和回應的純文字資料流。</summary>
      <returns vsli:raw="The plaintext stream that will be used for HTTP protocol requests and responses.">將用於 HTTP 通訊協定要求和回應的純文字資料流程。</returns>
    </member>
    <member name="T:System.Net.Http.StreamContent">
      <summary vsli:raw="Provides HTTP content based on a stream.">根據資料流提供 HTTP 內容。</summary>
    </member>
    <member name="M:System.Net.Http.StreamContent.#ctor(System.IO.Stream)">
      <summary vsli:raw="Creates a new instance of the &lt;see cref=&quot;T:System.Net.Http.StreamContent&quot; /&gt; class.">建立 <see cref="T:System.Net.Http.StreamContent" /> 類別的新執行個體。</summary>
      <param name="content" vsli:raw="The content used to initialize the &lt;see cref=&quot;T:System.Net.Http.StreamContent&quot; /&gt;.">用來初始化 <see cref="T:System.Net.Http.StreamContent" />的內容。</param>
    </member>
    <member name="M:System.Net.Http.StreamContent.#ctor(System.IO.Stream,System.Int32)">
      <summary vsli:raw="Creates a new instance of the &lt;see cref=&quot;T:System.Net.Http.StreamContent&quot; /&gt; class.">建立 <see cref="T:System.Net.Http.StreamContent" /> 類別的新執行個體。</summary>
      <param name="content" vsli:raw="The content used to initialize the &lt;see cref=&quot;T:System.Net.Http.StreamContent&quot; /&gt;.">用來初始化 <see cref="T:System.Net.Http.StreamContent" /> 的內容。</param>
      <param name="bufferSize" vsli:raw="The size, in bytes, of the buffer for the &lt;see cref=&quot;T:System.Net.Http.StreamContent&quot; /&gt;.">
        <see cref="T:System.Net.Http.StreamContent" /> 的緩衝區大小，以位元組為單位。</param>
      <exception cref="T:System.ArgumentNullException" vsli:raw="The &lt;paramref name=&quot;content&quot; /&gt; was &lt;see langword=&quot;null&quot; /&gt;.">
        <paramref name="content" /> 以前是 <see langword="null" />。</exception>
      <exception cref="T:System.ArgumentOutOfRangeException" vsli:raw="The &lt;paramref name=&quot;bufferSize&quot; /&gt; was less than or equal to zero.">
        <paramref name="bufferSize" /> 小於或等於零。</exception>
    </member>
    <member name="M:System.Net.Http.StreamContent.CreateContentReadStream(System.Threading.CancellationToken)">
      <summary vsli:raw="Returns the HTTP stream as a read-only stream.">以唯讀資料流的形式傳回 HTTP 資料流。</summary>
      <param name="cancellationToken" vsli:raw="The cancellation token to cancel the operation.">用於取消作業的取消權杖。</param>
      <returns vsli:raw="The HTTP content stream.">HTTP 內容資料流。</returns>
    </member>
    <member name="M:System.Net.Http.StreamContent.CreateContentReadStreamAsync">
      <summary vsli:raw="Returns the HTTP stream as a read-only stream as an asynchronous operation.">以非同步作業方式傳回唯讀資料流形式的 HTTP 資料流。</summary>
      <returns vsli:raw="The task object representing the asynchronous operation.">工作物件，表示非同步作業。</returns>
    </member>
    <member name="M:System.Net.Http.StreamContent.Dispose(System.Boolean)">
      <summary vsli:raw="Releases the unmanaged resources used by the &lt;see cref=&quot;T:System.Net.Http.StreamContent&quot; /&gt; and optionally disposes of the managed resources.">釋放 <see cref="T:System.Net.Http.StreamContent" /> 所使用的 Unmanaged 資源，並選擇性處置 Managed 資源。</summary>
      <param name="disposing" vsli:raw="&lt;see langword=&quot;true&quot; /&gt; to release both managed and unmanaged resources; &lt;see langword=&quot;false&quot; /&gt; to releases only unmanaged resources.">
        <see langword="true" /> 表示會同時釋放 Managed 和 Unmanaged 資源；<see langword="false" /> 則表示只釋放 Unmanaged 資源。</param>
    </member>
    <member name="M:System.Net.Http.StreamContent.SerializeToStream(System.IO.Stream,System.Net.TransportContext,System.Threading.CancellationToken)">
      <summary vsli:raw="Serializes the multipart HTTP content to a stream.">將多部分 HTTP 內容序列化為資料流。</summary>
      <param name="stream" vsli:raw="The target stream.">目標資料流。</param>
      <param name="context" vsli:raw="Information about the transport (for example, the channel binding token). This parameter may be &lt;see langword=&quot;null&quot; /&gt;.">傳輸相關資訊 (例如通道繫結權杖)。 此參數可以是 <see langword="null" />。</param>
      <param name="cancellationToken" vsli:raw="The cancellation token to cancel the operation.">用於取消作業的取消權杖。</param>
    </member>
    <member name="M:System.Net.Http.StreamContent.SerializeToStreamAsync(System.IO.Stream,System.Net.TransportContext)">
      <summary vsli:raw="Serialize the HTTP content to a stream as an asynchronous operation.">以非同步作業方式將 HTTP 內容序列化為資料流。</summary>
      <param name="stream" vsli:raw="The target stream.">目標資料流。</param>
      <param name="context" vsli:raw="Information about the transport (channel binding token, for example). This parameter may be &lt;see langword=&quot;null&quot; /&gt;.">傳輸的相關資訊 (例如通道繫結權杖)。 此參數可以是 <see langword="null" />。</param>
      <returns vsli:raw="The task object representing the asynchronous operation.">工作物件，表示非同步作業。</returns>
    </member>
    <member name="M:System.Net.Http.StreamContent.SerializeToStreamAsync(System.IO.Stream,System.Net.TransportContext,System.Threading.CancellationToken)">
      <summary vsli:raw="Serialize the HTTP content to a stream as an asynchronous operation.">以非同步作業方式將 HTTP 內容序列化為資料流。</summary>
      <param name="stream" vsli:raw="The target stream.">目標資料流。</param>
      <param name="context" vsli:raw="Information about the transport (channel binding token, for example). This parameter may be &lt;see langword=&quot;null&quot; /&gt;.">傳輸的相關資訊 (例如通道繫結權杖)。 此參數可以是 <see langword="null" />。</param>
      <param name="cancellationToken" vsli:raw="The cancellation token to cancel the operation.">用於取消作業的取消權杖。</param>
      <returns vsli:raw="The task object representing the asynchronous operation.">工作物件，表示非同步作業。</returns>
    </member>
    <member name="M:System.Net.Http.StreamContent.TryComputeLength(System.Int64@)">
      <summary vsli:raw="Determines whether the stream content has a valid length in bytes.">判斷資料流內容是否有有效的位元組長度。</summary>
      <param name="length" vsli:raw="The length in bytes of the stream content.">資料流內容的位元組長度。</param>
      <returns vsli:raw="&lt;see langword=&quot;true&quot; /&gt; if &lt;paramref name=&quot;length&quot; /&gt; is a valid length; otherwise, &lt;see langword=&quot;false&quot; /&gt;.">若 <paramref name="length" /> 為有效的長度則為 <see langword="true" />；否則為 <see langword="false" />。</returns>
    </member>
    <member name="T:System.Net.Http.StringContent">
      <summary vsli:raw="Provides HTTP content based on a string.">根據字串提供 HTTP 內容。</summary>
    </member>
    <member name="M:System.Net.Http.StringContent.#ctor(System.String)">
      <summary vsli:raw="Creates a new instance of the &lt;see cref=&quot;T:System.Net.Http.StringContent&quot; /&gt; class.">建立 <see cref="T:System.Net.Http.StringContent" /> 類別的新執行個體。</summary>
      <param name="content" vsli:raw="The content used to initialize the &lt;see cref=&quot;T:System.Net.Http.StringContent&quot; /&gt;.">用來初始化 <see cref="T:System.Net.Http.StringContent" />的內容。</param>
    </member>
    <member name="M:System.Net.Http.StringContent.#ctor(System.String,System.Text.Encoding)">
      <summary vsli:raw="Creates a new instance of the &lt;see cref=&quot;T:System.Net.Http.StringContent&quot; /&gt; class.">建立 <see cref="T:System.Net.Http.StringContent" /> 類別的新執行個體。</summary>
      <param name="content" vsli:raw="The content used to initialize the &lt;see cref=&quot;T:System.Net.Http.StringContent&quot; /&gt;.">用來初始化 <see cref="T:System.Net.Http.StringContent" />的內容。</param>
      <param name="encoding" vsli:raw="The encoding to use for the content.">要用於內容的編碼方式。</param>
    </member>
    <member name="M:System.Net.Http.StringContent.#ctor(System.String,System.Text.Encoding,System.String)">
      <summary vsli:raw="Creates a new instance of the &lt;see cref=&quot;T:System.Net.Http.StringContent&quot; /&gt; class.">建立 <see cref="T:System.Net.Http.StringContent" /> 類別的新執行個體。</summary>
      <param name="content" vsli:raw="The content used to initialize the &lt;see cref=&quot;T:System.Net.Http.StringContent&quot; /&gt;.">用來初始化 <see cref="T:System.Net.Http.StringContent" />的內容。</param>
      <param name="encoding" vsli:raw="The encoding to use for the content.">要用於內容的編碼方式。</param>
      <param name="mediaType" vsli:raw="The media type to use for the content.">要用於內容的媒體類型。</param>
    </member>
    <member name="M:System.Net.Http.StringContent.SerializeToStreamAsync(System.IO.Stream,System.Net.TransportContext,System.Threading.CancellationToken)">
      <summary vsli:raw="Serialize and write the string provided in the constructor to an HTTP content stream as an asynchronous operation.">以非同步作業方式，將建構函式中提供的字串序列化並寫入 HTTP 內容資料流。</summary>
      <param name="stream" vsli:raw="The target stream.">目標資料流。</param>
      <param name="context" vsli:raw="Information about the transport, like channel binding token. This parameter may be &lt;see langword=&quot;null&quot; /&gt;.">傳輸的相關資訊 (例如通道繫結權杖)。 此參數可以是 <see langword="null" />。</param>
      <param name="cancellationToken" vsli:raw="The cancellation token to cancel the operation.">用於取消作業的取消權杖。</param>
      <returns vsli:raw="The task object representing the asynchronous operation.">工作物件，表示非同步作業。</returns>
    </member>
  </members>
</doc>