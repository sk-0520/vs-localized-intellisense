<?xml version="1.0" encoding="utf-8"?>
<doc xmlns:vsli="https://github.com/sk-0520/vs-localized-intellisense/tree/master/schema/2024">
  <assembly>
    <name>System.IO.Packaging</name>
  </assembly>
  <members>
    <member name="T:System.IO.FileFormatException">
      <summary vsli:raw="The exception that is thrown when an input file or a data stream that is supposed to conform to a certain file format specification is malformed.">应该符合一定文件格式规范的输入文件或数据流的格式不正确时引发的异常。</summary>
    </member>
    <member name="M:System.IO.FileFormatException.#ctor">
      <summary vsli:raw="Creates a new instance of the &lt;see cref=&quot;T:System.IO.FileFormatException&quot; /&gt; class.">创建 <see cref="T:System.IO.FileFormatException" /> 类的新实例。</summary>
    </member>
    <member name="M:System.IO.FileFormatException.#ctor(System.Runtime.Serialization.SerializationInfo,System.Runtime.Serialization.StreamingContext)">
      <summary vsli:raw="Creates a new instance of the &lt;see cref=&quot;T:System.IO.FileFormatException&quot; /&gt; class and initializes it with serialized data. This constructor is called during deserialization to reconstitute the exception object transmitted over a stream.">使用序列化数据创建 <see cref="T:System.IO.FileFormatException" /> 类的一个新实例，并对其进行初始化。 在反序列化期间调用此构造函数以重新构造在流上传输的异常对象。</summary>
      <param name="info" vsli:raw="The object that holds the serialized object data.">承载序列化对象数据的对象。</param>
      <param name="context" vsli:raw="The contextual information about the source or destination.">关于来源和目标的上下文信息</param>
    </member>
    <member name="M:System.IO.FileFormatException.#ctor(System.String)">
      <summary vsli:raw="Creates a new instance of the &lt;see cref=&quot;T:System.IO.FileFormatException&quot; /&gt; class with a specified error message.">使用指定的错误消息创建 <see cref="T:System.IO.FileFormatException" /> 类的新实例。</summary>
      <param name="message" vsli:raw="A &lt;see cref=&quot;T:System.String&quot; /&gt; value that represents the error message.">一个表示错误消息的<see cref="T:System.String" />值。</param>
    </member>
    <member name="M:System.IO.FileFormatException.#ctor(System.String,System.Exception)">
      <summary vsli:raw="Creates a new instance of the &lt;see cref=&quot;T:System.IO.FileFormatException&quot; /&gt; class with a specified error message and exception type.">使用指定的错误消息和异常类型创建 <see cref="T:System.IO.FileFormatException" /> 类的一个新实例。</summary>
      <param name="message" vsli:raw="A &lt;see cref=&quot;T:System.String&quot; /&gt; value that represents the error message.">一个表示错误消息的<see cref="T:System.String" />值。</param>
      <param name="innerException" vsli:raw="The value of the &lt;see cref=&quot;P:System.Exception.InnerException&quot; /&gt; property, which represents the cause of the current exception.">
        <see cref="P:System.Exception.InnerException" /> 属性的值，表示当前异常的原因。</param>
    </member>
    <member name="M:System.IO.FileFormatException.#ctor(System.Uri)">
      <summary vsli:raw="Creates a new instance of the &lt;see cref=&quot;T:System.IO.FileFormatException&quot; /&gt; class with a source URI value.">使用源 URI 值创建 <see cref="T:System.IO.FileFormatException" /> 类的一个新实例。</summary>
      <param name="sourceUri" vsli:raw="The &lt;see cref=&quot;T:System.Uri&quot; /&gt; value of the file that caused this error.">导致此错误的文件的 <see cref="T:System.Uri" /> 值。</param>
    </member>
    <member name="M:System.IO.FileFormatException.#ctor(System.Uri,System.Exception)">
      <summary vsli:raw="Creates a new instance of the &lt;see cref=&quot;T:System.IO.FileFormatException&quot; /&gt; class with a source URI value and an exception type.">使用源 URI 值和异常类型创建 <see cref="T:System.IO.FileFormatException" /> 类的一个新实例。</summary>
      <param name="sourceUri" vsli:raw="The &lt;see cref=&quot;T:System.Uri&quot; /&gt; value of the file that caused this error.">导致此错误的文件的 <see cref="T:System.Uri" /> 值。</param>
      <param name="innerException" vsli:raw="The value of the &lt;see cref=&quot;P:System.Exception.InnerException&quot; /&gt; property, which represents the cause of the current exception.">
        <see cref="P:System.Exception.InnerException" /> 属性的值，表示当前异常的原因。</param>
    </member>
    <member name="M:System.IO.FileFormatException.#ctor(System.Uri,System.String)">
      <summary vsli:raw="Creates a new instance of the &lt;see cref=&quot;T:System.IO.FileFormatException&quot; /&gt; class with a source URI value and a specified error message.">使用源 URI 值和指定的错误消息创建 <see cref="T:System.IO.FileFormatException" /> 类的一个新实例。</summary>
      <param name="sourceUri" vsli:raw="The &lt;see cref=&quot;T:System.Uri&quot; /&gt; value of the file that caused this error.">导致此错误的文件的 <see cref="T:System.Uri" /> 值。</param>
      <param name="message" vsli:raw="A &lt;see cref=&quot;T:System.String&quot; /&gt; value that represents the error message.">一个表示错误消息的<see cref="T:System.String" />值。</param>
    </member>
    <member name="M:System.IO.FileFormatException.#ctor(System.Uri,System.String,System.Exception)">
      <summary vsli:raw="Creates a new instance of the &lt;see cref=&quot;T:System.IO.FileFormatException&quot; /&gt; class with a source URI value, a specified error message, and an exception type.">使用源 URI 值、指定的错误消息和异常类型创建 <see cref="T:System.IO.FileFormatException" /> 类的一个新实例。</summary>
      <param name="sourceUri" vsli:raw="The &lt;see cref=&quot;T:System.Uri&quot; /&gt; value of the file that caused this error.">导致此错误的文件的 <see cref="T:System.Uri" /> 值。</param>
      <param name="message" vsli:raw="A &lt;see cref=&quot;T:System.String&quot; /&gt; value that represents the error message.">一个表示错误消息的<see cref="T:System.String" />值。</param>
      <param name="innerException" vsli:raw="The value of the &lt;see cref=&quot;P:System.Exception.InnerException&quot; /&gt; property, which represents the cause of the current exception.">
        <see cref="P:System.Exception.InnerException" /> 属性的值，表示当前异常的原因。</param>
    </member>
    <member name="M:System.IO.FileFormatException.GetObjectData(System.Runtime.Serialization.SerializationInfo,System.Runtime.Serialization.StreamingContext)">
      <summary vsli:raw="Sets the &lt;see cref=&quot;T:System.Runtime.Serialization.SerializationInfo&quot; /&gt; object with the file name and additional exception information.">设置带有文件名和附加异常信息的 <see cref="T:System.Runtime.Serialization.SerializationInfo" /> 对象。</summary>
      <param name="info" vsli:raw="The object that holds the serialized object data.">承载序列化对象数据的对象。</param>
      <param name="context" vsli:raw="The contextual information about the source or destination.">关于来源和目标的上下文信息</param>
    </member>
    <member name="P:System.IO.FileFormatException.SourceUri">
      <summary vsli:raw="Gets the name of a file that caused the &lt;see cref=&quot;T:System.IO.FileFormatException&quot; /&gt;.">获取导致 <see cref="T:System.IO.FileFormatException" /> 的文件的名称。</summary>
      <returns vsli:raw="A &lt;see cref=&quot;T:System.Uri&quot; /&gt; that represents the name the file that caused the exception.">一个 <see cref="T:System.Uri" />，表示导致此异常的文件的名称。</returns>
    </member>
    <member name="T:System.IO.Packaging.CompressionOption">
      <summary vsli:raw="Specifies the compression level for content that is stored in a &lt;see cref=&quot;T:System.IO.Packaging.PackagePart&quot; /&gt;.">为 <see cref="T:System.IO.Packaging.PackagePart" /> 中存储的内容指定压缩级别。</summary>
    </member>
    <member name="F:System.IO.Packaging.CompressionOption.Fast">
      <summary vsli:raw="Compression is optimized for performance.">已针对性能优化了压缩。</summary>
    </member>
    <member name="F:System.IO.Packaging.CompressionOption.Maximum">
      <summary vsli:raw="Compression is optimized for size.">已针对大小优化了压缩。</summary>
    </member>
    <member name="F:System.IO.Packaging.CompressionOption.Normal">
      <summary vsli:raw="Compression is optimized for a balance between size and performance.">优化压缩以在大小和性能之间保持平衡。</summary>
    </member>
    <member name="F:System.IO.Packaging.CompressionOption.NotCompressed">
      <summary vsli:raw="Compression is turned off.">已关闭压缩。</summary>
    </member>
    <member name="F:System.IO.Packaging.CompressionOption.SuperFast">
      <summary vsli:raw="Compression is optimized for high performance.">优化压缩以获得高性能。</summary>
    </member>
    <member name="T:System.IO.Packaging.EncryptionOption">
      <summary vsli:raw="Specifies the encryption option for parts in a &lt;see cref=&quot;T:System.IO.Packaging.Package&quot; /&gt;.">为 <see cref="T:System.IO.Packaging.Package" /> 中的部分指定加密选项。</summary>
    </member>
    <member name="F:System.IO.Packaging.EncryptionOption.None">
      <summary vsli:raw="No encryption.">无加密。</summary>
    </member>
    <member name="F:System.IO.Packaging.EncryptionOption.RightsManagement">
      <summary vsli:raw="Encryption supported through rights management.">通过权限管理支持的加密。</summary>
    </member>
    <member name="T:System.IO.Packaging.Package">
      <summary vsli:raw="Represents a container that can store multiple data objects.">表示一个可以存储多个数据对象的容器。</summary>
    </member>
    <member name="M:System.IO.Packaging.Package.#ctor(System.IO.FileAccess)">
      <summary vsli:raw="Initializes a new instance of the &lt;see cref=&quot;T:System.IO.Packaging.Package&quot; /&gt; class that uses a given &lt;see cref=&quot;T:System.IO.FileAccess&quot; /&gt;.">初始化使用给定的 <see cref="T:System.IO.Packaging.Package" /> 的 <see cref="T:System.IO.FileAccess" /> 类的新实例。</summary>
      <param name="openFileAccess" vsli:raw="The file IO permissions for the package.">包的文件 IO 权限。</param>
      <exception cref="T:System.ArgumentOutOfRangeException" vsli:raw="The value for &lt;paramref name=&quot;openFileAccess&quot; /&gt; is not valid.">
        <paramref name="openFileAccess" /> 的值无效。</exception>
    </member>
    <member name="M:System.IO.Packaging.Package.Close">
      <summary vsli:raw="Saves and closes the package plus all underlying part streams.">保存并关闭包和所有基础部件流。</summary>
    </member>
    <member name="M:System.IO.Packaging.Package.CreatePart(System.Uri,System.String)">
      <summary vsli:raw="Creates a new uncompressed part with a given URI and content type.">使用给定的 URI 和内容类型创建新的未压缩部件。</summary>
      <param name="partUri" vsli:raw="The uniform resource identifier (URI) of the new part.">新部件的统一资源标识符 (URI)。</param>
      <param name="contentType" vsli:raw="The content type of the data stream.">数据流的内容类型。</param>
      <exception cref="T:System.ArgumentNullException" vsli:raw="&lt;paramref name=&quot;partUri&quot; /&gt; or &lt;paramref name=&quot;contentType&quot; /&gt; is &lt;see langword=&quot;null&quot; /&gt;.">
        <paramref name="partUri" /> 或 <paramref name="contentType" /> 为 <see langword="null" />。</exception>
      <exception cref="T:System.ArgumentException" vsli:raw="&lt;paramref name=&quot;partUri&quot; /&gt; is not a valid &lt;see cref=&quot;T:System.IO.Packaging.PackagePart&quot; /&gt; URI.">
        <paramref name="partUri" /> 不是有效的 <see cref="T:System.IO.Packaging.PackagePart" /> URI。</exception>
      <exception cref="T:System.InvalidOperationException" vsli:raw="A part with the specified &lt;paramref name=&quot;partUri&quot; /&gt; is already present in the package.">包中已存在具有指定的 <paramref name="partUri" /> 的部件。</exception>
      <exception cref="T:System.ObjectDisposedException" vsli:raw="The package is not open (&lt;see cref=&quot;M:System.IO.Packaging.Package.Dispose(System.Boolean)&quot; /&gt; or &lt;see cref=&quot;M:System.IO.Packaging.Package.Close&quot; /&gt; has been called).">包未打开（已调用了 <see cref="M:System.IO.Packaging.Package.Dispose(System.Boolean)" /> 或 <see cref="M:System.IO.Packaging.Package.Close" />）。</exception>
      <exception cref="T:System.IO.IOException" vsli:raw="The package is read-only (a new part cannot be added).">包为只读的（无法添加新部件）。</exception>
      <returns vsli:raw="The new created part.">新创建的部件。</returns>
    </member>
    <member name="M:System.IO.Packaging.Package.CreatePart(System.Uri,System.String,System.IO.Packaging.CompressionOption)">
      <summary vsli:raw="Creates a new part with a given URI, content type, and compression option.">使用给定的 URI、内容类型和压缩选项创建新部件。</summary>
      <param name="partUri" vsli:raw="The URI of the new part.">新部件的 URI。</param>
      <param name="contentType" vsli:raw="The content type of the data stream.">数据流的内容类型。</param>
      <param name="compressionOption" vsli:raw="The compression option for the data stream, &lt;see cref=&quot;F:System.IO.Packaging.CompressionOption.NotCompressed&quot; /&gt; or &lt;see cref=&quot;F:System.IO.Packaging.CompressionOption.Normal&quot; /&gt; compression.">数据流的压缩选项、<see cref="F:System.IO.Packaging.CompressionOption.NotCompressed" /> 或 <see cref="F:System.IO.Packaging.CompressionOption.Normal" /> 压缩。</param>
      <exception cref="T:System.ArgumentNullException" vsli:raw="&lt;paramref name=&quot;partUri&quot; /&gt; or &lt;paramref name=&quot;contentType&quot; /&gt; is &lt;see langword=&quot;null&quot; /&gt;.">
        <paramref name="partUri" /> 或 <paramref name="contentType" /> 为 <see langword="null" />。</exception>
      <exception cref="T:System.ArgumentException" vsli:raw="&lt;paramref name=&quot;partUri&quot; /&gt; is not a valid &lt;see cref=&quot;T:System.IO.Packaging.PackagePart&quot; /&gt; uniform resource identifier (URI).">
        <paramref name="partUri" /> 不是有效的 <see cref="T:System.IO.Packaging.PackagePart" /> 统一资源标识符 (URI)。</exception>
      <exception cref="T:System.InvalidOperationException" vsli:raw="A part with the specified &lt;paramref name=&quot;partUri&quot; /&gt; is already present in the package.">包中已存在具有指定的 <paramref name="partUri" /> 的部件。</exception>
      <exception cref="T:System.ArgumentOutOfRangeException" vsli:raw="The &lt;paramref name=&quot;compressionOption&quot; /&gt; value is not valid.">
        <paramref name="compressionOption" /> 值无效。</exception>
      <exception cref="T:System.ObjectDisposedException" vsli:raw="The package is not open (&lt;see cref=&quot;M:System.IO.Packaging.Package.Dispose(System.Boolean)&quot; /&gt; or &lt;see cref=&quot;M:System.IO.Packaging.Package.Close&quot; /&gt; has been called).">包未打开（已调用了 <see cref="M:System.IO.Packaging.Package.Dispose(System.Boolean)" /> 或 <see cref="M:System.IO.Packaging.Package.Close" />）。</exception>
      <exception cref="T:System.IO.IOException" vsli:raw="The package is read-only (a new part cannot be added).">包为只读的（无法添加新部件）。</exception>
      <returns vsli:raw="The new created part.">新创建的部件。</returns>
    </member>
    <member name="M:System.IO.Packaging.Package.CreatePartCore(System.Uri,System.String,System.IO.Packaging.CompressionOption)">
      <summary vsli:raw="When overridden in a derived class, creates a new part in the package.">在派生类中重写时，会在包中创建一个新部件。</summary>
      <param name="partUri" vsli:raw="The uniform resource identifier (URI) for the part being created.">正在创建的部件的统一资源标识符 (URI)。</param>
      <param name="contentType" vsli:raw="The content type of the data stream.">数据流的内容类型。</param>
      <param name="compressionOption" vsli:raw="The compression option for the data stream.">数据流的压缩选项。</param>
      <returns vsli:raw="The created part.">创建的部件。</returns>
    </member>
    <member name="M:System.IO.Packaging.Package.CreateRelationship(System.Uri,System.IO.Packaging.TargetMode,System.String)">
      <summary vsli:raw="Creates a package-level relationship to a part with a given URI, target mode, and relationship type.">使用给定的 URI、目标模式和关系类型创建与部件的包级别关系。</summary>
      <param name="targetUri" vsli:raw="The uniform resource identifier (URI) of the target part.">目标部件的统一资源标识符 (URI)。</param>
      <param name="targetMode" vsli:raw="Indicates if the target part is &lt;see cref=&quot;F:System.IO.Packaging.TargetMode.Internal&quot; /&gt; or &lt;see cref=&quot;F:System.IO.Packaging.TargetMode.External&quot; /&gt; to the package.">指示目标部件对包来说是 <see cref="F:System.IO.Packaging.TargetMode.Internal" /> 还是 <see cref="F:System.IO.Packaging.TargetMode.External" />。</param>
      <param name="relationshipType" vsli:raw="A URI that uniquely defines the role of the relationship.">唯一定义关系的角色的 URI。</param>
      <exception cref="T:System.ArgumentNullException" vsli:raw="&lt;paramref name=&quot;targetUri&quot; /&gt; or &lt;paramref name=&quot;relationshipType&quot; /&gt; is &lt;see langword=&quot;null&quot; /&gt;.">
        <paramref name="targetUri" /> 或 <paramref name="relationshipType" /> 为 <see langword="null" />。</exception>
      <exception cref="T:System.ArgumentException" vsli:raw="The &lt;paramref name=&quot;targetUri&quot; /&gt; part is a &lt;see cref=&quot;T:System.IO.Packaging.PackageRelationship&quot; /&gt;, or &lt;paramref name=&quot;targetMode&quot; /&gt; is &lt;see cref=&quot;F:System.IO.Packaging.TargetMode.Internal&quot; /&gt; and &lt;paramref name=&quot;targetUri&quot; /&gt; is an absolute URI.">
        <paramref name="targetUri" /> 部件为 <see cref="T:System.IO.Packaging.PackageRelationship" />，或 <paramref name="targetMode" /> 为 <see cref="F:System.IO.Packaging.TargetMode.Internal" />，而 <paramref name="targetUri" /> 为绝对 URI。</exception>
      <exception cref="T:System.ArgumentOutOfRangeException" vsli:raw="The value for &lt;paramref name=&quot;targetMode&quot; /&gt; is not valid.">
        <paramref name="targetMode" /> 的值无效。</exception>
      <exception cref="T:System.ObjectDisposedException" vsli:raw="The package is not open (&lt;see cref=&quot;M:System.IO.Packaging.Package.Dispose(System.Boolean)&quot; /&gt; or &lt;see cref=&quot;M:System.IO.Packaging.Package.Close&quot; /&gt; has been called).">包未打开（已调用了 <see cref="M:System.IO.Packaging.Package.Dispose(System.Boolean)" /> 或 <see cref="M:System.IO.Packaging.Package.Close" />）。</exception>
      <exception cref="T:System.IO.IOException" vsli:raw="The package is read-only.">包为只读。</exception>
      <returns vsli:raw="The package-level relationship to the specified part.">与指定部件的包级别关系。</returns>
    </member>
    <member name="M:System.IO.Packaging.Package.CreateRelationship(System.Uri,System.IO.Packaging.TargetMode,System.String,System.String)">
      <summary vsli:raw="Creates a package-level relationship to a part with a given URI, target mode, relationship type, and identifier (ID).">使用给定的 URI、目标模式、关系类型和 标识符 (ID) 创建与部件的包级别关系。</summary>
      <param name="targetUri" vsli:raw="The uniform resource identifier (URI) of the target part.">目标部件的统一资源标识符 (URI)。</param>
      <param name="targetMode" vsli:raw="Indicates if the target part is &lt;see cref=&quot;F:System.IO.Packaging.TargetMode.Internal&quot; /&gt; or &lt;see cref=&quot;F:System.IO.Packaging.TargetMode.External&quot; /&gt; to the package.">指示目标部件对包来说是 <see cref="F:System.IO.Packaging.TargetMode.Internal" /> 还是 <see cref="F:System.IO.Packaging.TargetMode.External" />。</param>
      <param name="relationshipType" vsli:raw="A URI that uniquely defines the role of the relationship.">唯一定义关系的角色的 URI。</param>
      <param name="id" vsli:raw="A unique XML identifier.">唯一 XML 标识符。</param>
      <exception cref="T:System.ArgumentNullException" vsli:raw="&lt;paramref name=&quot;targetUri&quot; /&gt; or &lt;paramref name=&quot;relationshipType&quot; /&gt; is &lt;see langword=&quot;null&quot; /&gt;.">
        <paramref name="targetUri" /> 或 <paramref name="relationshipType" /> 为 <see langword="null" />。</exception>
      <exception cref="T:System.ArgumentException" vsli:raw="The &lt;paramref name=&quot;targetUri&quot; /&gt; part is a &lt;see cref=&quot;T:System.IO.Packaging.PackageRelationship&quot; /&gt;, or &lt;paramref name=&quot;targetMode&quot; /&gt; is &lt;see cref=&quot;F:System.IO.Packaging.TargetMode.Internal&quot; /&gt; and &lt;paramref name=&quot;targetUri&quot; /&gt; is an absolute URI.">
        <paramref name="targetUri" /> 部件为 <see cref="T:System.IO.Packaging.PackageRelationship" />，或 <paramref name="targetMode" /> 为 <see cref="F:System.IO.Packaging.TargetMode.Internal" />，而 <paramref name="targetUri" /> 为绝对 URI。</exception>
      <exception cref="T:System.ArgumentOutOfRangeException" vsli:raw="The value for &lt;paramref name=&quot;targetMode&quot; /&gt; is not valid.">
        <paramref name="targetMode" /> 的值无效。</exception>
      <exception cref="T:System.ObjectDisposedException" vsli:raw="The package is not open (&lt;see cref=&quot;M:System.IO.Packaging.Package.Dispose(System.Boolean)&quot; /&gt; or &lt;see cref=&quot;M:System.IO.Packaging.Package.Close&quot; /&gt; has been called).">包未打开（已调用了 <see cref="M:System.IO.Packaging.Package.Dispose(System.Boolean)" /> 或 <see cref="M:System.IO.Packaging.Package.Close" />）。</exception>
      <exception cref="T:System.IO.IOException" vsli:raw="The package is read-only.">包为只读。</exception>
      <exception cref="T:System.Xml.XmlException" vsli:raw="&lt;paramref name=&quot;id&quot; /&gt; is not a valid XML identifier; or a part with the specified &lt;paramref name=&quot;id&quot; /&gt; already occurs in the package.">
        <paramref name="id" /> 不是有效的 XML 标识符；或者包中已存在具有指定的 <paramref name="id" /> 的部件。</exception>
      <returns vsli:raw="The package-level relationship to the specified part.">与指定部件的包级别关系。</returns>
    </member>
    <member name="M:System.IO.Packaging.Package.DeletePart(System.Uri)">
      <summary vsli:raw="Deletes a part with a given URI from the package.">使用包中给定的 URI 删除部件。</summary>
      <param name="partUri" vsli:raw="The URI of the part to delete.">要删除的部件的 URI。</param>
      <exception cref="T:System.ArgumentNullException" vsli:raw="&lt;paramref name=&quot;partUri&quot; /&gt; is &lt;see langword=&quot;null&quot; /&gt;.">
        <paramref name="partUri" /> 为 <see langword="null" />。</exception>
      <exception cref="T:System.ArgumentException" vsli:raw="&lt;paramref name=&quot;partUri&quot; /&gt; is not a valid &lt;see cref=&quot;T:System.IO.Packaging.PackagePart&quot; /&gt; URI.">
        <paramref name="partUri" /> 不是有效的 <see cref="T:System.IO.Packaging.PackagePart" /> URI。</exception>
      <exception cref="T:System.ObjectDisposedException" vsli:raw="The package is not open (&lt;see cref=&quot;M:System.IO.Packaging.Package.Dispose(System.Boolean)&quot; /&gt; or &lt;see cref=&quot;M:System.IO.Packaging.Package.Close&quot; /&gt; has been called).">包未打开（已调用了 <see cref="M:System.IO.Packaging.Package.Dispose(System.Boolean)" /> 或 <see cref="M:System.IO.Packaging.Package.Close" />）。</exception>
      <exception cref="T:System.IO.IOException" vsli:raw="The package is read-only.">包为只读。</exception>
    </member>
    <member name="M:System.IO.Packaging.Package.DeletePartCore(System.Uri)">
      <summary vsli:raw="When overridden in a derived class, deletes a part with a given URI.">在派生类中重写时，会使用给定的 URI 删除部件。</summary>
      <param name="partUri" vsli:raw="The &lt;see cref=&quot;P:System.IO.Packaging.PackagePart.Uri&quot; /&gt; of the &lt;see cref=&quot;T:System.IO.Packaging.PackagePart&quot; /&gt; to delete.">要删除的 <see cref="P:System.IO.Packaging.PackagePart.Uri" /> 的 <see cref="T:System.IO.Packaging.PackagePart" />。</param>
    </member>
    <member name="M:System.IO.Packaging.Package.DeleteRelationship(System.String)">
      <summary vsli:raw="Deletes a package-level relationship.">删除包级别关系。</summary>
      <param name="id" vsli:raw="The &lt;see cref=&quot;P:System.IO.Packaging.PackageRelationship.Id&quot; /&gt; of the &lt;see cref=&quot;T:System.IO.Packaging.PackageRelationship&quot; /&gt; to delete.">要删除的 <see cref="P:System.IO.Packaging.PackageRelationship.Id" /> 的 <see cref="T:System.IO.Packaging.PackageRelationship" />。</param>
      <exception cref="T:System.ArgumentNullException" vsli:raw="&lt;paramref name=&quot;id&quot; /&gt; is &lt;see langword=&quot;null&quot; /&gt;.">
        <paramref name="id" /> 为 <see langword="null" />。</exception>
      <exception cref="T:System.ObjectDisposedException" vsli:raw="The package is not open (&lt;see cref=&quot;M:System.IO.Packaging.Package.Dispose(System.Boolean)&quot; /&gt; or &lt;see cref=&quot;M:System.IO.Packaging.Package.Close&quot; /&gt; has been called).">包未打开（已调用了 <see cref="M:System.IO.Packaging.Package.Dispose(System.Boolean)" /> 或 <see cref="M:System.IO.Packaging.Package.Close" />）。</exception>
      <exception cref="T:System.IO.IOException" vsli:raw="The package is read-only.">包为只读。</exception>
      <exception cref="T:System.Xml.XmlException" vsli:raw="&lt;paramref name=&quot;id&quot; /&gt; is not a valid XML identifier.">
        <paramref name="id" /> 不是有效的 XML 标识符。</exception>
    </member>
    <member name="M:System.IO.Packaging.Package.Dispose(System.Boolean)">
      <summary vsli:raw="Flushes and saves the content of all parts and relationships, closes the package, and releases all resources.">刷新并保存所有部件和关系的内容，关闭包，并释放所有资源。</summary>
      <param name="disposing" vsli:raw="&lt;see langword=&quot;true&quot; /&gt; to release both managed and unmanaged resources; &lt;see langword=&quot;false&quot; /&gt; to release only unmanaged resources.">若要释放托管资源和非托管资源，则为 <see langword="true" />；若仅释放非托管资源，则为 <see langword="false" />。</param>
    </member>
    <member name="M:System.IO.Packaging.Package.Flush">
      <summary vsli:raw="Saves the contents of all parts and relationships that are contained in the package.">保存包中包含的所有部件和关系的内容。</summary>
      <exception cref="T:System.ObjectDisposedException" vsli:raw="The package is not open (&lt;see cref=&quot;M:System.IO.Packaging.Package.Dispose(System.Boolean)&quot; /&gt; or &lt;see cref=&quot;M:System.IO.Packaging.Package.Close&quot; /&gt; has been called).">包未打开（已调用了 <see cref="M:System.IO.Packaging.Package.Dispose(System.Boolean)" /> 或 <see cref="M:System.IO.Packaging.Package.Close" />）。</exception>
      <exception cref="T:System.IO.IOException" vsli:raw="The package is read-only and cannot be modified.">包为只读的，无法进行修改。</exception>
    </member>
    <member name="M:System.IO.Packaging.Package.FlushCore">
      <summary vsli:raw="When overridden in a derived class, saves the content of all parts and relationships to the derived class store.">在派生类中重写时，会将所有部件和关系的内容保存到派生类存储区中。</summary>
    </member>
    <member name="M:System.IO.Packaging.Package.GetPart(System.Uri)">
      <summary vsli:raw="Returns the part with a given URI.">返回具有给定 URI 的部件。</summary>
      <param name="partUri" vsli:raw="The uniform resource identifier (URI) of the part to return.">要返回的部件的统一资源标识符 (URI)。</param>
      <exception cref="T:System.ArgumentNullException" vsli:raw="&lt;paramref name=&quot;partUri&quot; /&gt; is &lt;see langword=&quot;null&quot; /&gt;.">
        <paramref name="partUri" /> 为 <see langword="null" />。</exception>
      <exception cref="T:System.ArgumentException" vsli:raw="&lt;paramref name=&quot;partUri&quot; /&gt; is not a valid &lt;see cref=&quot;T:System.IO.Packaging.PackagePart&quot; /&gt; uniform resource identifier (URI).">
        <paramref name="partUri" /> 不是有效的 <see cref="T:System.IO.Packaging.PackagePart" /> 统一资源标识符 (URI)。</exception>
      <exception cref="T:System.InvalidOperationException" vsli:raw="A part with the specified &lt;paramref name=&quot;partUri&quot; /&gt; is not in the package.">包中不存在具有指定 <paramref name="partUri" /> 的部件。</exception>
      <exception cref="T:System.ObjectDisposedException" vsli:raw="The package is not open (&lt;see cref=&quot;M:System.IO.Packaging.Package.Dispose(System.Boolean)&quot; /&gt; or &lt;see cref=&quot;M:System.IO.Packaging.Package.Close&quot; /&gt; has been called).">包未打开（已调用了 <see cref="M:System.IO.Packaging.Package.Dispose(System.Boolean)" /> 或 <see cref="M:System.IO.Packaging.Package.Close" />）。</exception>
      <exception cref="T:System.IO.IOException" vsli:raw="The package is write-only.">包是只写的。</exception>
      <returns vsli:raw="The part with the specified &lt;paramref name=&quot;partUri&quot; /&gt;.">具有指定 <paramref name="partUri" /> 的部件。</returns>
    </member>
    <member name="M:System.IO.Packaging.Package.GetPartCore(System.Uri)">
      <summary vsli:raw="When overridden in a derived class, returns the part addressed by a given URI.">在派生类中重写时，会返回由给定 URI 寻址的部件。</summary>
      <param name="partUri" vsli:raw="The uniform resource identifier (URI) of the part to retrieve.">要检索的部件的统一资源标识符 (URI)。</param>
      <returns vsli:raw="The requested part; or &lt;see langword=&quot;null&quot; /&gt;, if a part with the specified &lt;paramref name=&quot;partUri&quot; /&gt; is not in the package.">请求的部件；或者，如果包中不存在具有指定 <paramref name="partUri" /> 的部件，则为 <see langword="null" />。</returns>
    </member>
    <member name="M:System.IO.Packaging.Package.GetParts">
      <summary vsli:raw="Returns a collection of all the parts in the package.">返回包中所有部件的集合。</summary>
      <exception cref="T:System.ObjectDisposedException" vsli:raw="The package is not open (&lt;see cref=&quot;M:System.IO.Packaging.Package.Dispose(System.Boolean)&quot; /&gt; or &lt;see cref=&quot;M:System.IO.Packaging.Package.Close&quot; /&gt; has been called).">包未打开（已调用了 <see cref="M:System.IO.Packaging.Package.Dispose(System.Boolean)" /> 或 <see cref="M:System.IO.Packaging.Package.Close" />）。</exception>
      <exception cref="T:System.IO.IOException" vsli:raw="The package is write-only.">包是只写的。</exception>
      <returns vsli:raw="A collection of all the &lt;see cref=&quot;T:System.IO.Packaging.PackagePart&quot; /&gt; elements that are contained in the package.">包中包含的所有 <see cref="T:System.IO.Packaging.PackagePart" /> 元素的集合。</returns>
    </member>
    <member name="M:System.IO.Packaging.Package.GetPartsCore">
      <summary vsli:raw="When overridden in a derived class, returns an array of all the parts in the package.">在派生类中重写时，会返回包中所有部件的数组。</summary>
      <returns vsli:raw="An array of all the parts that are contained in the package.">包中包含的所有部件的数组。</returns>
    </member>
    <member name="M:System.IO.Packaging.Package.GetRelationship(System.String)">
      <summary vsli:raw="Returns the package-level relationship with a given identifier.">返回具有给定标识符的包级别关系。</summary>
      <param name="id" vsli:raw="The &lt;see cref=&quot;P:System.IO.Packaging.PackageRelationship.Id&quot; /&gt; of the relationship to return.">要返回的关系的 <see cref="P:System.IO.Packaging.PackageRelationship.Id" />。</param>
      <exception cref="T:System.ArgumentNullException" vsli:raw="&lt;paramref name=&quot;id&quot; /&gt; is &lt;see langword=&quot;null&quot; /&gt;.">
        <paramref name="id" /> 为 <see langword="null" />。</exception>
      <exception cref="T:System.Xml.XmlException" vsli:raw="&lt;paramref name=&quot;id&quot; /&gt; is not a valid XML identifier.">
        <paramref name="id" /> 不是有效的 XML 标识符。</exception>
      <exception cref="T:System.InvalidOperationException" vsli:raw="A relationship with the specified &lt;paramref name=&quot;id&quot; /&gt; is not in the package.">包中不存在具有指定 <paramref name="id" /> 的关系。</exception>
      <exception cref="T:System.ObjectDisposedException" vsli:raw="The package is not open (&lt;see cref=&quot;M:System.IO.Packaging.Package.Dispose(System.Boolean)&quot; /&gt; or &lt;see cref=&quot;M:System.IO.Packaging.Package.Close&quot; /&gt; has been called).">包未打开（已调用了 <see cref="M:System.IO.Packaging.Package.Dispose(System.Boolean)" /> 或 <see cref="M:System.IO.Packaging.Package.Close" />）。</exception>
      <exception cref="T:System.IO.IOException" vsli:raw="The package is write-only.">包是只写的。</exception>
      <returns vsli:raw="The package-level relationship with the specified &lt;paramref name=&quot;id&quot; /&gt;.">具有指定 <paramref name="id" /> 的包级别关系。</returns>
    </member>
    <member name="M:System.IO.Packaging.Package.GetRelationships">
      <summary vsli:raw="Returns a collection of all the package-level relationships.">返回所有包级别关系的集合。</summary>
      <exception cref="T:System.ObjectDisposedException" vsli:raw="The package is not open (&lt;see cref=&quot;M:System.IO.Packaging.Package.Dispose(System.Boolean)&quot; /&gt; or &lt;see cref=&quot;M:System.IO.Packaging.Package.Close&quot; /&gt; has been called).">包未打开（已调用了 <see cref="M:System.IO.Packaging.Package.Dispose(System.Boolean)" /> 或 <see cref="M:System.IO.Packaging.Package.Close" />）。</exception>
      <exception cref="T:System.IO.IOException" vsli:raw="The package is write-only.">包是只写的。</exception>
      <returns vsli:raw="A collection of all the package-level relationships that are contained in the package.">包中包含的所有包级别关系的集合。</returns>
    </member>
    <member name="M:System.IO.Packaging.Package.GetRelationshipsByType(System.String)">
      <summary vsli:raw="Returns a collection of all the package-level relationships that match a given &lt;see cref=&quot;P:System.IO.Packaging.PackageRelationship.RelationshipType&quot; /&gt;.">返回与给定的 <see cref="P:System.IO.Packaging.PackageRelationship.RelationshipType" /> 匹配的所有包级别关系的集合。</summary>
      <param name="relationshipType" vsli:raw="The &lt;see cref=&quot;P:System.IO.Packaging.PackageRelationship.RelationshipType&quot; /&gt; to match and return in the collection.">在集合中匹配和返回的 <see cref="P:System.IO.Packaging.PackageRelationship.RelationshipType" />。</param>
      <exception cref="T:System.ArgumentNullException" vsli:raw="&lt;paramref name=&quot;relationshipType&quot; /&gt; is &lt;see langword=&quot;null&quot; /&gt;.">
        <paramref name="relationshipType" /> 为 <see langword="null" />。</exception>
      <exception cref="T:System.ArgumentException" vsli:raw="&lt;paramref name=&quot;relationshipType&quot; /&gt; is an empty string.">
        <paramref name="relationshipType" /> 是一个空字符串。</exception>
      <exception cref="T:System.ObjectDisposedException" vsli:raw="The package is not open (&lt;see cref=&quot;M:System.IO.Packaging.Package.Dispose(System.Boolean)&quot; /&gt; or &lt;see cref=&quot;M:System.IO.Packaging.Package.Close&quot; /&gt; has been called).">包未打开（已调用了 <see cref="M:System.IO.Packaging.Package.Dispose(System.Boolean)" /> 或 <see cref="M:System.IO.Packaging.Package.Close" />）。</exception>
      <exception cref="T:System.IO.IOException" vsli:raw="The package is write-only.">包是只写的。</exception>
      <returns vsli:raw="A collection of package-level relationships that match the specified &lt;paramref name=&quot;relationshipType&quot; /&gt;.">与指定的 <paramref name="relationshipType" /> 匹配的包级别关系的集合。</returns>
    </member>
    <member name="M:System.IO.Packaging.Package.Open(System.IO.Stream)">
      <summary vsli:raw="Opens a package on a given IO stream.">在给定的 IO 流上打开包。</summary>
      <param name="stream" vsli:raw="The IO stream on which to open the package.">在其上打开包的 IO 流。</param>
      <exception cref="T:System.ArgumentNullException" vsli:raw="&lt;paramref name=&quot;stream&quot; /&gt; is &lt;see langword=&quot;null&quot; /&gt;.">
        <paramref name="stream" /> 为 <see langword="null" />。</exception>
      <exception cref="T:System.IO.IOException" vsli:raw="The package to open requires read or read/write permission and the specified &lt;paramref name=&quot;stream&quot; /&gt; is write-only; or, the package to open requires write or read/write permission and the specified &lt;paramref name=&quot;stream&quot; /&gt; is read-only.">要打开的包需要读权限或读/写权限，且指定的 <paramref name="stream" /> 是只写的；或者，要打开的包需要写权限或读/写权限，且指定的 <paramref name="stream" /> 是只写的。</exception>
      <returns vsli:raw="The opened package.">打开的包。</returns>
    </member>
    <member name="M:System.IO.Packaging.Package.Open(System.IO.Stream,System.IO.FileMode)">
      <summary vsli:raw="Opens a package with a given IO stream and file mode.">使用给定的 IO 流和文件模式打开包。</summary>
      <param name="stream" vsli:raw="The IO stream on which to open the package.">在其上打开包的 IO 流。</param>
      <param name="packageMode" vsli:raw="The file mode in which to open the package.">用于打开包的文件模式。</param>
      <exception cref="T:System.ArgumentNullException" vsli:raw="&lt;paramref name=&quot;stream&quot; /&gt; is &lt;see langword=&quot;null&quot; /&gt;.">
        <paramref name="stream" /> 为 <see langword="null" />。</exception>
      <exception cref="T:System.ArgumentOutOfRangeException" vsli:raw="&lt;paramref name=&quot;packageMode&quot; /&gt; value is not valid.">
        <paramref name="packageMode" /> 值无效。</exception>
      <exception cref="T:System.IO.IOException" vsli:raw="The package to open requires read or read/write permission and the specified &lt;paramref name=&quot;stream&quot; /&gt; is write-only; or, the package to open requires write or read/write permission and the specified &lt;paramref name=&quot;stream&quot; /&gt; is read-only.">要打开的包需要读权限或读/写权限，且指定的 <paramref name="stream" /> 是只写的；或者，要打开的包需要写权限或读/写权限，且指定的 <paramref name="stream" /> 是只写的。</exception>
      <returns vsli:raw="The opened package.">打开的包。</returns>
    </member>
    <member name="M:System.IO.Packaging.Package.Open(System.IO.Stream,System.IO.FileMode,System.IO.FileAccess)">
      <summary vsli:raw="Opens a package with a given IO stream, file mode, and file access setting.">使用给定的 IO 流、文件模式和文件访问设置打开包。</summary>
      <param name="stream" vsli:raw="The IO stream on which to open the package.">在其上打开包的 IO 流。</param>
      <param name="packageMode" vsli:raw="The file mode in which to open the package.">用于打开包的文件模式。</param>
      <param name="packageAccess" vsli:raw="The file access in which to open the package.">用于打开包的文件访问。</param>
      <exception cref="T:System.ArgumentNullException" vsli:raw="&lt;paramref name=&quot;stream&quot; /&gt; is &lt;see langword=&quot;null&quot; /&gt;.">
        <paramref name="stream" /> 为 <see langword="null" />。</exception>
      <exception cref="T:System.ArgumentOutOfRangeException" vsli:raw="The value for &lt;paramref name=&quot;packageMode&quot; /&gt; or &lt;paramref name=&quot;packageAccess&quot; /&gt; is not valid.">
        <paramref name="packageMode" /> 或 <paramref name="packageAccess" /> 的值无效。</exception>
      <exception cref="T:System.IO.IOException" vsli:raw="The package to open requires read or read/write permission and the specified &lt;paramref name=&quot;stream&quot; /&gt; is write-only; or the package to open requires write or read/write permission and the specified &lt;paramref name=&quot;stream&quot; /&gt; is read-only.">要打开的包需要读权限或读/写权限，且指定的 <paramref name="stream" /> 是只写的；或者，要打开的包需要写权限或读/写权限，且指定的 <paramref name="stream" /> 是只写的。</exception>
      <returns vsli:raw="The opened package.">打开的包。</returns>
    </member>
    <member name="M:System.IO.Packaging.Package.Open(System.String)">
      <summary vsli:raw="Opens a package at a given path and file name.">打开位于给定路径和文件名的包。</summary>
      <param name="path" vsli:raw="The path and file name of the package.">包的路径和文件名。</param>
      <exception cref="T:System.ArgumentNullException" vsli:raw="&lt;paramref name=&quot;path&quot; /&gt; is &lt;see langword=&quot;null&quot; /&gt;.">
        <paramref name="path" /> 为 <see langword="null" />。</exception>
      <returns vsli:raw="The opened package.">打开的包。</returns>
    </member>
    <member name="M:System.IO.Packaging.Package.Open(System.String,System.IO.FileMode)">
      <summary vsli:raw="Opens a package at a given path using a given file mode.">使用给定的文件模式打开位于给定路径的包。</summary>
      <param name="path" vsli:raw="The path and file name of the package.">包的路径和文件名。</param>
      <param name="packageMode" vsli:raw="The file mode in which to open the package.">用于打开包的文件模式。</param>
      <exception cref="T:System.ArgumentNullException" vsli:raw="&lt;paramref name=&quot;path&quot; /&gt; is &lt;see langword=&quot;null&quot; /&gt;.">
        <paramref name="path" /> 为 <see langword="null" />。</exception>
      <exception cref="T:System.ArgumentOutOfRangeException" vsli:raw="Value for &lt;paramref name=&quot;packageMode&quot; /&gt; is not valid.">
        <paramref name="packageMode" /> 的值无效。</exception>
      <returns vsli:raw="The opened package.">打开的包。</returns>
    </member>
    <member name="M:System.IO.Packaging.Package.Open(System.String,System.IO.FileMode,System.IO.FileAccess)">
      <summary vsli:raw="Opens a package at a given path using a given file mode and file access setting.">使用给定的文件模式和文件访问设置打开位于给定路径的包。</summary>
      <param name="path" vsli:raw="The path and file name of the package.">包的路径和文件名。</param>
      <param name="packageMode" vsli:raw="The file mode in which to open the package.">用于打开包的文件模式。</param>
      <param name="packageAccess" vsli:raw="The file access in which to open the package.">用于打开包的文件访问。</param>
      <exception cref="T:System.ArgumentNullException" vsli:raw="&lt;paramref name=&quot;path&quot; /&gt; is &lt;see langword=&quot;null&quot; /&gt;.">
        <paramref name="path" /> 为 <see langword="null" />。</exception>
      <exception cref="T:System.ArgumentOutOfRangeException" vsli:raw="Value for &lt;paramref name=&quot;packageMode&quot; /&gt; or &lt;paramref name=&quot;packageAccess&quot; /&gt; is not valid.">
        <paramref name="packageMode" /> 或 <paramref name="packageAccess" /> 的值无效。</exception>
      <returns vsli:raw="The opened package.">打开的包。</returns>
    </member>
    <member name="M:System.IO.Packaging.Package.Open(System.String,System.IO.FileMode,System.IO.FileAccess,System.IO.FileShare)">
      <summary vsli:raw="Opens a package at a given path using a given file mode, file access, and file share setting.">使用给定的文件模式、文件访问和文件共享设置打开位于给定路径的包。</summary>
      <param name="path" vsli:raw="The path and file name of the package.">包的路径和文件名。</param>
      <param name="packageMode" vsli:raw="The file mode in which to open the package.">用于打开包的文件模式。</param>
      <param name="packageAccess" vsli:raw="The file access in which to open the package.">用于打开包的文件访问。</param>
      <param name="packageShare" vsli:raw="The file sharing mode in which to open the package.">用于打开包的文件共享模式。</param>
      <exception cref="T:System.ArgumentNullException" vsli:raw="&lt;paramref name=&quot;path&quot; /&gt; is &lt;see langword=&quot;null&quot; /&gt;.">
        <paramref name="path" /> 为 <see langword="null" />。</exception>
      <exception cref="T:System.ArgumentOutOfRangeException" vsli:raw="The value for &lt;paramref name=&quot;packageMode&quot; /&gt;, &lt;paramref name=&quot;packageAccess&quot; /&gt;, or &lt;paramref name=&quot;packageShare&quot; /&gt; is not valid.">
        <paramref name="packageMode" />、<paramref name="packageAccess" /> 或 <paramref name="packageShare" /> 的值无效。</exception>
      <returns vsli:raw="The opened package.">打开的包。</returns>
    </member>
    <member name="M:System.IO.Packaging.Package.PartExists(System.Uri)">
      <summary vsli:raw="Indicates whether a part with a given URI is in the package.">指示具有给定 URI 的部件是否在包中。</summary>
      <param name="partUri" vsli:raw="The &lt;see cref=&quot;T:System.Uri&quot; /&gt; of the part to check for.">要检查的部件的 <see cref="T:System.Uri" />。</param>
      <exception cref="T:System.ArgumentNullException" vsli:raw="&lt;paramref name=&quot;partUri&quot; /&gt; is &lt;see langword=&quot;null&quot; /&gt;.">
        <paramref name="partUri" /> 为 <see langword="null" />。</exception>
      <exception cref="T:System.ArgumentException" vsli:raw="&lt;paramref name=&quot;partUri&quot; /&gt; is not a valid &lt;see cref=&quot;T:System.IO.Packaging.PackagePart&quot; /&gt; uniform resource identifier (URI).">
        <paramref name="partUri" /> 不是有效的 <see cref="T:System.IO.Packaging.PackagePart" /> 统一资源标识符 (URI)。</exception>
      <exception cref="T:System.ObjectDisposedException" vsli:raw="The package is not open (&lt;see cref=&quot;M:System.IO.Packaging.Package.Dispose(System.Boolean)&quot; /&gt; or &lt;see cref=&quot;M:System.IO.Packaging.Package.Close&quot; /&gt; has been called).">包未打开（已调用了 <see cref="M:System.IO.Packaging.Package.Dispose(System.Boolean)" /> 或 <see cref="M:System.IO.Packaging.Package.Close" />）。</exception>
      <exception cref="T:System.IO.IOException" vsli:raw="The package is write-only (information cannot be read).">包是只写的（无法读取信息）。</exception>
      <returns vsli:raw="&lt;see langword=&quot;true&quot; /&gt; if a part with the specified &lt;paramref name=&quot;partUri&quot; /&gt; is in the package; otherwise, &lt;see langword=&quot;false&quot; /&gt;.">如果具有指定的 <paramref name="partUri" /> 的部件在包中，则为 <see langword="true" />；否则为 <see langword="false" />。</returns>
    </member>
    <member name="M:System.IO.Packaging.Package.RelationshipExists(System.String)">
      <summary vsli:raw="Indicates whether a package-level relationship with a given ID is contained in the package.">指示具有给定 ID 的包级别关系是否包含在包中。</summary>
      <param name="id" vsli:raw="The &lt;see cref=&quot;P:System.IO.Packaging.PackageRelationship.Id&quot; /&gt; of the relationship to check for.">要检查的关系的 <see cref="P:System.IO.Packaging.PackageRelationship.Id" />。</param>
      <exception cref="T:System.ArgumentNullException" vsli:raw="&lt;paramref name=&quot;id&quot; /&gt; is &lt;see langword=&quot;null&quot; /&gt;.">
        <paramref name="id" /> 为 <see langword="null" />。</exception>
      <exception cref="T:System.Xml.XmlException" vsli:raw="&lt;paramref name=&quot;id&quot; /&gt; is not a valid XML identifier.">
        <paramref name="id" /> 不是有效的 XML 标识符。</exception>
      <exception cref="T:System.ObjectDisposedException" vsli:raw="The package is not open (&lt;see cref=&quot;M:System.IO.Packaging.Package.Dispose(System.Boolean)&quot; /&gt; or &lt;see cref=&quot;M:System.IO.Packaging.Package.Close&quot; /&gt; has been called).">包未打开（已调用了 <see cref="M:System.IO.Packaging.Package.Dispose(System.Boolean)" /> 或 <see cref="M:System.IO.Packaging.Package.Close" />）。</exception>
      <exception cref="T:System.IO.IOException" vsli:raw="The package is write-only.">包是只写的。</exception>
      <returns vsli:raw="&lt;see langword=&quot;true&quot; /&gt; if a package-level relationship with the specified &lt;paramref name=&quot;id&quot; /&gt; is in the package; otherwise, &lt;see langword=&quot;false&quot; /&gt;.">如果具有指定的 <paramref name="id" /> 的包级别关系在包中，则为 <see langword="true" />；否则为 <see langword="false" />。</returns>
    </member>
    <member name="M:System.IO.Packaging.Package.System#IDisposable#Dispose">
      <summary vsli:raw="This member supports the Windows Presentation Foundation (WPF) infrastructure and is not intended for application use.  Use the type-safe &lt;see cref=&quot;M:System.IO.Packaging.Package.Dispose(System.Boolean)&quot; /&gt; method instead.">此成员支持 Windows Presentation Foundation (WPF) 基础结构，不是为应用程序使用而设计的。  改用类型安全的 <see cref="M:System.IO.Packaging.Package.Dispose(System.Boolean)" /> 方法。</summary>
    </member>
    <member name="P:System.IO.Packaging.Package.FileOpenAccess">
      <summary vsli:raw="Gets the file access setting for the package.">获取包的文件访问设置。</summary>
      <exception cref="T:System.ObjectDisposedException" vsli:raw="The package is not open (&lt;see cref=&quot;M:System.IO.Packaging.Package.Dispose(System.Boolean)&quot; /&gt; or &lt;see cref=&quot;M:System.IO.Packaging.Package.Close&quot; /&gt; has been called).">包未打开（已调用了 <see cref="M:System.IO.Packaging.Package.Dispose(System.Boolean)" /> 或 <see cref="M:System.IO.Packaging.Package.Close" />）。</exception>
      <returns vsli:raw="One of the &lt;see cref=&quot;T:System.IO.FileAccess&quot; /&gt; values: &lt;see cref=&quot;F:System.IO.FileAccess.Read&quot; /&gt;, &lt;see cref=&quot;F:System.IO.FileAccess.Write&quot; /&gt;, or &lt;see cref=&quot;F:System.IO.FileAccess.ReadWrite&quot; /&gt;.">
        <see cref="T:System.IO.FileAccess" /> 值之一：<see cref="F:System.IO.FileAccess.Read" />、<see cref="F:System.IO.FileAccess.Write" /> 或 <see cref="F:System.IO.FileAccess.ReadWrite" />。</returns>
    </member>
    <member name="P:System.IO.Packaging.Package.PackageProperties">
      <summary vsli:raw="Gets the core properties of the package.">获取包的核心属性。</summary>
      <exception cref="T:System.ObjectDisposedException" vsli:raw="The package is not open (&lt;see cref=&quot;M:System.IO.Packaging.Package.Dispose(System.Boolean)&quot; /&gt; or &lt;see cref=&quot;M:System.IO.Packaging.Package.Close&quot; /&gt; has been called).">包未打开（已调用了 <see cref="M:System.IO.Packaging.Package.Dispose(System.Boolean)" /> 或 <see cref="M:System.IO.Packaging.Package.Close" />）。</exception>
      <returns vsli:raw="The core properties of the package.">包的核心属性。</returns>
    </member>
    <member name="T:System.IO.Packaging.PackagePart">
      <summary vsli:raw="Provides a base class for parts stored in a &lt;see cref=&quot;T:System.IO.Packaging.Package&quot; /&gt;.  This class is abstract.">为存储在 <see cref="T:System.IO.Packaging.Package" /> 中的部分提供基类。  此类为抽象类。</summary>
    </member>
    <member name="M:System.IO.Packaging.PackagePart.#ctor(System.IO.Packaging.Package,System.Uri)">
      <summary vsli:raw="Initializes a new instance of the &lt;see cref=&quot;T:System.IO.Packaging.PackagePart&quot; /&gt; class with a specified parent &lt;see cref=&quot;P:System.IO.Packaging.PackagePart.Package&quot; /&gt; and part URI.">使用指定的父 <see cref="T:System.IO.Packaging.PackagePart" /> 和部件 URI 初始化 <see cref="P:System.IO.Packaging.PackagePart.Package" /> 类的新实例。</summary>
      <param name="package" vsli:raw="The parent &lt;see cref=&quot;T:System.IO.Packaging.Package&quot; /&gt; of the part.">此部分的父 <see cref="T:System.IO.Packaging.Package" />。</param>
      <param name="partUri" vsli:raw="The URI of the part, relative to the parent &lt;see cref=&quot;T:System.IO.Packaging.Package&quot; /&gt; root.">部件的 URI，它相对于父 <see cref="T:System.IO.Packaging.Package" /> 根。</param>
      <exception cref="T:System.ArgumentNullException" vsli:raw="&lt;paramref name=&quot;package&quot; /&gt; or &lt;paramref name=&quot;partUri&quot; /&gt; is &lt;see langword=&quot;null&quot; /&gt;.">
        <paramref name="package" /> 或 <paramref name="partUri" /> 为 <see langword="null" />。</exception>
    </member>
    <member name="M:System.IO.Packaging.PackagePart.#ctor(System.IO.Packaging.Package,System.Uri,System.String)">
      <summary vsli:raw="Initializes a new instance of the &lt;see cref=&quot;T:System.IO.Packaging.PackagePart&quot; /&gt; class with a specified parent &lt;see cref=&quot;P:System.IO.Packaging.PackagePart.Package&quot; /&gt;, part URI, and MIME content type.">使用指定的父 <see cref="P:System.IO.Packaging.PackagePart.Package" />、部件 URI 和 MIME 内容类型初始化 <see cref="T:System.IO.Packaging.PackagePart" /> 类的新实例。</summary>
      <param name="package" vsli:raw="The parent &lt;see cref=&quot;T:System.IO.Packaging.Package&quot; /&gt; of the part.">此部分的父 <see cref="T:System.IO.Packaging.Package" />。</param>
      <param name="partUri" vsli:raw="The URI of the part, relative to the parent &lt;see cref=&quot;T:System.IO.Packaging.Package&quot; /&gt; root.">部件的 URI，它相对于父 <see cref="T:System.IO.Packaging.Package" /> 根。</param>
      <param name="contentType" vsli:raw="The MIME content type of the part data stream.">部分数据流的 MIME 内容类型。</param>
      <exception cref="T:System.ArgumentNullException" vsli:raw="&lt;paramref name=&quot;package&quot; /&gt; or &lt;paramref name=&quot;partUri&quot; /&gt; is &lt;see langword=&quot;null&quot; /&gt;.">
        <paramref name="package" /> 或 <paramref name="partUri" /> 为 <see langword="null" />。</exception>
      <exception cref="T:System.ArgumentException" vsli:raw="&lt;paramref name=&quot;partUri&quot; /&gt; is not a valid &lt;see cref=&quot;T:System.IO.Packaging.PackagePart&quot; /&gt; URI.">
        <paramref name="partUri" /> 不是有效的 <see cref="T:System.IO.Packaging.PackagePart" /> URI。</exception>
    </member>
    <member name="M:System.IO.Packaging.PackagePart.#ctor(System.IO.Packaging.Package,System.Uri,System.String,System.IO.Packaging.CompressionOption)">
      <summary vsli:raw="Initializes a new instance of the &lt;see cref=&quot;T:System.IO.Packaging.PackagePart&quot; /&gt; class with a specified parent &lt;see cref=&quot;P:System.IO.Packaging.PackagePart.Package&quot; /&gt;, part URI, MIME content type, and &lt;see cref=&quot;T:System.IO.Packaging.CompressionOption&quot; /&gt;.">使用指定的父 <see cref="P:System.IO.Packaging.PackagePart.Package" />、部件 URI、MIME 内容类型和 <see cref="T:System.IO.Packaging.CompressionOption" /> 初始化 <see cref="T:System.IO.Packaging.PackagePart" /> 类的新实例。</summary>
      <param name="package" vsli:raw="The parent &lt;see cref=&quot;T:System.IO.Packaging.Package&quot; /&gt; of the part.">此部分的父 <see cref="T:System.IO.Packaging.Package" />。</param>
      <param name="partUri" vsli:raw="The URI of the part, relative to the parent &lt;see cref=&quot;T:System.IO.Packaging.Package&quot; /&gt; root.">部件的 URI，它相对于父 <see cref="T:System.IO.Packaging.Package" /> 根。</param>
      <param name="contentType" vsli:raw="The MIME content type of the part's data stream.">部分的数据流的 MIME 内容类型。</param>
      <param name="compressionOption" vsli:raw="The compression option of the part data stream.">部分数据流的压缩选项。</param>
      <exception cref="T:System.ArgumentNullException" vsli:raw="&lt;paramref name=&quot;package&quot; /&gt; or &lt;paramref name=&quot;partUri&quot; /&gt; is &lt;see langword=&quot;null&quot; /&gt;.">
        <paramref name="package" /> 或 <paramref name="partUri" /> 为 <see langword="null" />。</exception>
      <exception cref="T:System.ArgumentException" vsli:raw="&lt;paramref name=&quot;partUri&quot; /&gt; is not a valid &lt;see cref=&quot;T:System.IO.Packaging.PackagePart&quot; /&gt; URI.">
        <paramref name="partUri" /> 不是有效的 <see cref="T:System.IO.Packaging.PackagePart" /> URI。</exception>
      <exception cref="T:System.ArgumentOutOfRangeException" vsli:raw="The &lt;paramref name=&quot;compressionOption&quot; /&gt; value is not valid.">
        <paramref name="compressionOption" /> 值无效。</exception>
    </member>
    <member name="M:System.IO.Packaging.PackagePart.CreateRelationship(System.Uri,System.IO.Packaging.TargetMode,System.String)">
      <summary vsli:raw="Creates a part-level relationship between this &lt;see cref=&quot;T:System.IO.Packaging.PackagePart&quot; /&gt; to a specified target &lt;see cref=&quot;T:System.IO.Packaging.PackagePart&quot; /&gt; or external resource.">创建此 <see cref="T:System.IO.Packaging.PackagePart" /> 与指定目标 <see cref="T:System.IO.Packaging.PackagePart" /> 或外部资源之间的部分级关系。</summary>
      <param name="targetUri" vsli:raw="The URI of the target part.">目标部件的 URI。</param>
      <param name="targetMode" vsli:raw="One of the enumeration values. For example, &lt;see cref=&quot;F:System.IO.Packaging.TargetMode.Internal&quot; /&gt; if the target part is inside the &lt;see cref=&quot;T:System.IO.Packaging.Package&quot; /&gt;; or &lt;see cref=&quot;F:System.IO.Packaging.TargetMode.External&quot; /&gt; if the target is a resource outside the &lt;see cref=&quot;T:System.IO.Packaging.Package&quot; /&gt;.">枚举值之一。 例如，如果目标部分在 <see cref="F:System.IO.Packaging.TargetMode.Internal" /> 的内部，则为 <see cref="T:System.IO.Packaging.Package" />；如果目标是 <see cref="F:System.IO.Packaging.TargetMode.External" /> 外部的资源，则为 <see cref="T:System.IO.Packaging.Package" />。</param>
      <param name="relationshipType" vsli:raw="The role of the relationship.">关系的角色。</param>
      <exception cref="T:System.InvalidOperationException" vsli:raw="The part has been deleted.  &#xA;  &#xA; -or-  &#xA;  &#xA; The &lt;see cref=&quot;P:System.IO.Packaging.PackagePart.Package&quot; /&gt; is not open (&lt;see cref=&quot;M:System.IO.Packaging.Package.Dispose(System.Boolean)&quot; /&gt; or &lt;see cref=&quot;M:System.IO.Packaging.Package.Close&quot; /&gt; has been called).">已删除此部分。  
  
- 或 - 
<see cref="P:System.IO.Packaging.PackagePart.Package" /> 没有打开（调用了 <see cref="M:System.IO.Packaging.Package.Dispose(System.Boolean)" /> 或 <see cref="M:System.IO.Packaging.Package.Close" />）。</exception>
      <exception cref="T:System.ArgumentNullException" vsli:raw="&lt;paramref name=&quot;targetUri&quot; /&gt; or &lt;paramref name=&quot;relationshipType&quot; /&gt; is &lt;see langword=&quot;null&quot; /&gt;.">
        <paramref name="targetUri" /> 或 <paramref name="relationshipType" /> 为 <see langword="null" />。</exception>
      <exception cref="T:System.ArgumentOutOfRangeException" vsli:raw="The &lt;paramref name=&quot;targetMode&quot; /&gt; parameter is not a valid &lt;see cref=&quot;T:System.IO.Packaging.TargetMode&quot; /&gt; enumeration value.">
        <paramref name="targetMode" /> 参数不是有效的 <see cref="T:System.IO.Packaging.TargetMode" /> 枚举值。</exception>
      <exception cref="T:System.ArgumentException" vsli:raw="The part identified by the &lt;paramref name=&quot;targetUri&quot; /&gt; is a relationship (the target of a relationship cannot be another relationship).  &#xA;  &#xA; -or-  &#xA;  &#xA; &lt;paramref name=&quot;targetMode&quot; /&gt; is specified as &lt;see cref=&quot;F:System.IO.Packaging.TargetMode.Internal&quot; /&gt; but &lt;paramref name=&quot;targetUri&quot; /&gt; is an absolute external URI.">由 <paramref name="targetUri" /> 标识的部分是关系（关系的目标不能是另一个关系）。  
  
- 或 - 
 将 <paramref name="targetMode" /> 指定为 <see cref="F:System.IO.Packaging.TargetMode.Internal" />，但 <paramref name="targetUri" /> 是一个绝对外部 URI。</exception>
      <exception cref="T:System.IO.IOException" vsli:raw="The package is read-only (a new relationship cannot be added).">包是只读的（无法添加新关系）。</exception>
      <returns vsli:raw="The part-level relationship between this &lt;see cref=&quot;T:System.IO.Packaging.PackagePart&quot; /&gt; to the target &lt;see cref=&quot;T:System.IO.Packaging.PackagePart&quot; /&gt; or external resource.">此 <see cref="T:System.IO.Packaging.PackagePart" /> 与目标 <see cref="T:System.IO.Packaging.PackagePart" /> 或外部资源之间的部分级关系。</returns>
    </member>
    <member name="M:System.IO.Packaging.PackagePart.CreateRelationship(System.Uri,System.IO.Packaging.TargetMode,System.String,System.String)">
      <summary vsli:raw="Creates a part-level relationship between this &lt;see cref=&quot;T:System.IO.Packaging.PackagePart&quot; /&gt; to a specified target &lt;see cref=&quot;T:System.IO.Packaging.PackagePart&quot; /&gt; or external resource.">创建此 <see cref="T:System.IO.Packaging.PackagePart" /> 与指定目标 <see cref="T:System.IO.Packaging.PackagePart" /> 或外部资源之间的部分级关系。</summary>
      <param name="targetUri" vsli:raw="The URI of the target part.">目标部件的 URI。</param>
      <param name="targetMode" vsli:raw="One of the enumeration values. For example, &lt;see cref=&quot;F:System.IO.Packaging.TargetMode.Internal&quot; /&gt; if the target part is inside the &lt;see cref=&quot;T:System.IO.Packaging.Package&quot; /&gt;; or &lt;see cref=&quot;F:System.IO.Packaging.TargetMode.External&quot; /&gt; if the target is a resource outside the &lt;see cref=&quot;T:System.IO.Packaging.Package&quot; /&gt;.">枚举值之一。 例如，如果目标部分在 <see cref="F:System.IO.Packaging.TargetMode.Internal" /> 的内部，则为 <see cref="T:System.IO.Packaging.Package" />；如果目标是 <see cref="F:System.IO.Packaging.TargetMode.External" /> 外部的资源，则为 <see cref="T:System.IO.Packaging.Package" />。</param>
      <param name="relationshipType" vsli:raw="The role of the relationship.">关系的角色。</param>
      <param name="id" vsli:raw="A unique ID for the relationship.">关系的唯一 ID。</param>
      <exception cref="T:System.InvalidOperationException" vsli:raw="The part has been deleted.  &#xA;  &#xA; -or-  &#xA;  &#xA; The &lt;see cref=&quot;P:System.IO.Packaging.PackagePart.Package&quot; /&gt; is not open (&lt;see cref=&quot;M:System.IO.Packaging.Package.Dispose(System.Boolean)&quot; /&gt; or &lt;see cref=&quot;M:System.IO.Packaging.Package.Close&quot; /&gt; has been called).">已删除此部分。  
  
- 或 - 
<see cref="P:System.IO.Packaging.PackagePart.Package" /> 没有打开（调用了 <see cref="M:System.IO.Packaging.Package.Dispose(System.Boolean)" /> 或 <see cref="M:System.IO.Packaging.Package.Close" />）。</exception>
      <exception cref="T:System.ArgumentNullException" vsli:raw="&lt;paramref name=&quot;targetUri&quot; /&gt; or &lt;paramref name=&quot;relationshipType&quot; /&gt; is &lt;see langword=&quot;null&quot; /&gt;.">
        <paramref name="targetUri" /> 或 <paramref name="relationshipType" /> 为 <see langword="null" />。</exception>
      <exception cref="T:System.ArgumentOutOfRangeException" vsli:raw="The &lt;paramref name=&quot;targetMode&quot; /&gt; parameter is not a valid &lt;see cref=&quot;T:System.IO.Packaging.TargetMode&quot; /&gt; enumeration value.">
        <paramref name="targetMode" /> 参数不是有效的 <see cref="T:System.IO.Packaging.TargetMode" /> 枚举值。</exception>
      <exception cref="T:System.ArgumentException" vsli:raw="The part identified by the &lt;paramref name=&quot;targetUri&quot; /&gt; is a relationship (the target of a relationship cannot be another relationship).  &#xA;  &#xA; -or-  &#xA;  &#xA; &lt;paramref name=&quot;targetMode&quot; /&gt; is specified as &lt;see cref=&quot;F:System.IO.Packaging.TargetMode.Internal&quot; /&gt; but &lt;paramref name=&quot;targetUri&quot; /&gt; is an absolute external URI.">由 <paramref name="targetUri" /> 标识的部分是关系（关系的目标不能是另一个关系）。  
  
- 或 - 
 将 <paramref name="targetMode" /> 指定为 <see cref="F:System.IO.Packaging.TargetMode.Internal" />，但 <paramref name="targetUri" /> 是一个绝对外部 URI。</exception>
      <exception cref="T:System.IO.IOException" vsli:raw="The package is read-only (a new relationship cannot be added).">包是只读的（无法添加新关系）。</exception>
      <exception cref="T:System.Xml.XmlException" vsli:raw="&lt;paramref name=&quot;id&quot; /&gt; is not a valid XML identifier.  &#xA;  &#xA; -or-  &#xA;  &#xA; A part with the specified &lt;paramref name=&quot;id&quot; /&gt; already exists.">
        <paramref name="id" /> 不是有效的 XML 标识符。  
  
- 或 - 
已存在具有指定 <paramref name="id" /> 的部分。</exception>
      <returns vsli:raw="The part-level relationship between this &lt;see cref=&quot;T:System.IO.Packaging.PackagePart&quot; /&gt; to the target &lt;see cref=&quot;T:System.IO.Packaging.PackagePart&quot; /&gt; or external resource.">此 <see cref="T:System.IO.Packaging.PackagePart" /> 与目标 <see cref="T:System.IO.Packaging.PackagePart" /> 或外部资源之间的部分级关系。</returns>
    </member>
    <member name="M:System.IO.Packaging.PackagePart.DeleteRelationship(System.String)">
      <summary vsli:raw="Deletes a specified part-level &lt;see cref=&quot;T:System.IO.Packaging.PackageRelationship&quot; /&gt;.">删除指定的部分级 <see cref="T:System.IO.Packaging.PackageRelationship" />。</summary>
      <param name="id" vsli:raw="The &lt;see cref=&quot;P:System.IO.Packaging.PackageRelationship.Id&quot; /&gt; of the relationship to delete.">要删除的关系的 <see cref="P:System.IO.Packaging.PackageRelationship.Id" />。</param>
      <exception cref="T:System.InvalidOperationException" vsli:raw="The part has been deleted.  &#xA;  &#xA; -or-  &#xA;  &#xA; The &lt;see cref=&quot;P:System.IO.Packaging.PackagePart.Package&quot; /&gt; is not open (&lt;see cref=&quot;M:System.IO.Packaging.Package.Dispose(System.Boolean)&quot; /&gt; or &lt;see cref=&quot;M:System.IO.Packaging.Package.Close&quot; /&gt; has been called).">已删除此部分。  
  
- 或 - 
<see cref="P:System.IO.Packaging.PackagePart.Package" /> 没有打开（调用了 <see cref="M:System.IO.Packaging.Package.Dispose(System.Boolean)" /> 或 <see cref="M:System.IO.Packaging.Package.Close" />）。</exception>
      <exception cref="T:System.ArgumentNullException" vsli:raw="&lt;paramref name=&quot;id&quot; /&gt; is &lt;see langword=&quot;null&quot; /&gt;.">
        <paramref name="id" /> 为 <see langword="null" />。</exception>
      <exception cref="T:System.IO.IOException" vsli:raw="The package is read-only (relationships cannot be deleted).">包是只读的（无法删除关系）。</exception>
      <exception cref="T:System.Xml.XmlException" vsli:raw="&lt;paramref name=&quot;id&quot; /&gt; is not a valid XML identifier.">
        <paramref name="id" /> 不是有效的 XML 标识符。</exception>
    </member>
    <member name="M:System.IO.Packaging.PackagePart.GetContentTypeCore">
      <summary vsli:raw="When overridden in a derived class, returns the MIME type of the part content.">当在派生类中重写时，返回部分内容的 MIME 类型。</summary>
      <exception cref="T:System.NotSupportedException" vsli:raw="The derived class does not provide an override implementation required for the &lt;see cref=&quot;M:System.IO.Packaging.PackagePart.GetContentTypeCore&quot; /&gt; method.">派生类不为 <see cref="M:System.IO.Packaging.PackagePart.GetContentTypeCore" /> 方法提供所需的重写实现。</exception>
      <returns vsli:raw="The MIME type of the part content.">部分内容的 MIME 类型。</returns>
    </member>
    <member name="M:System.IO.Packaging.PackagePart.GetRelationship(System.String)">
      <summary vsli:raw="Returns the relationship that has a specified &lt;see cref=&quot;P:System.IO.Packaging.PackageRelationship.Id&quot; /&gt;.">返回具有指定 <see cref="P:System.IO.Packaging.PackageRelationship.Id" /> 的关系。</summary>
      <param name="id" vsli:raw="The &lt;see cref=&quot;P:System.IO.Packaging.PackageRelationship.Id&quot; /&gt; of the relationship to return.">要返回的关系的 <see cref="P:System.IO.Packaging.PackageRelationship.Id" />。</param>
      <exception cref="T:System.ArgumentNullException" vsli:raw="&lt;paramref name=&quot;id&quot; /&gt; is &lt;see langword=&quot;null&quot; /&gt;.">
        <paramref name="id" /> 为 <see langword="null" />。</exception>
      <exception cref="T:System.Xml.XmlException" vsli:raw="&lt;paramref name=&quot;id&quot; /&gt; is not a valid XML identifier.">
        <paramref name="id" /> 不是有效的 XML 标识符。</exception>
      <exception cref="T:System.ArgumentException" vsli:raw="&lt;paramref name=&quot;relationshipType&quot; /&gt; is an empty string.">
        <paramref name="relationshipType" /> 是一个空字符串。</exception>
      <exception cref="T:System.InvalidOperationException" vsli:raw="The part has been deleted.  &#xA;  &#xA; -or-  &#xA;  &#xA; The &lt;see cref=&quot;P:System.IO.Packaging.PackagePart.Package&quot; /&gt; is not open (&lt;see cref=&quot;M:System.IO.Packaging.Package.Dispose(System.Boolean)&quot; /&gt; or &lt;see cref=&quot;M:System.IO.Packaging.Package.Close&quot; /&gt; has been called).  &#xA;  &#xA; -or-  &#xA;  &#xA; A relationship with the specified &lt;paramref name=&quot;id&quot; /&gt; does not exist in the package.">已删除此部分。  
  
- 或 - 
<see cref="P:System.IO.Packaging.PackagePart.Package" /> 没有打开（调用了 <see cref="M:System.IO.Packaging.Package.Dispose(System.Boolean)" /> 或 <see cref="M:System.IO.Packaging.Package.Close" />）。  
  
- 或 - 
包中不存在具有指定 <paramref name="id" /> 的关系。</exception>
      <exception cref="T:System.IO.IOException" vsli:raw="The package is write-only (relationship information cannot be read).">包是只写的（无法读取关系信息）。</exception>
      <returns vsli:raw="The relationship that matches the specified &lt;paramref name=&quot;id&quot; /&gt;.">与指定 <paramref name="id" /> 相匹配的关系。</returns>
    </member>
    <member name="M:System.IO.Packaging.PackagePart.GetRelationships">
      <summary vsli:raw="Returns a collection of all the relationships that are owned by this part.">返回此部分拥有的所有关系的集合。</summary>
      <exception cref="T:System.InvalidOperationException" vsli:raw="The part has been deleted.  &#xA;  &#xA; -or-  &#xA;  &#xA; The &lt;see cref=&quot;P:System.IO.Packaging.PackagePart.Package&quot; /&gt; is not open (&lt;see cref=&quot;M:System.IO.Packaging.Package.Dispose(System.Boolean)&quot; /&gt; or &lt;see cref=&quot;M:System.IO.Packaging.Package.Close&quot; /&gt; has been called).">已删除此部分。  
  
- 或 - 
<see cref="P:System.IO.Packaging.PackagePart.Package" /> 没有打开（调用了 <see cref="M:System.IO.Packaging.Package.Dispose(System.Boolean)" /> 或 <see cref="M:System.IO.Packaging.Package.Close" />）。</exception>
      <exception cref="T:System.IO.IOException" vsli:raw="The package is write-only (relationship information cannot be read).">包是只写的（无法读取关系信息）。</exception>
      <returns vsli:raw="A collection of all the relationships that are owned by the part.">此部分拥有的所有关系的集合。</returns>
    </member>
    <member name="M:System.IO.Packaging.PackagePart.GetRelationshipsByType(System.String)">
      <summary vsli:raw="Returns a collection of the relationships that match a specified &lt;see cref=&quot;P:System.IO.Packaging.PackageRelationship.RelationshipType&quot; /&gt;.">返回与指定 <see cref="P:System.IO.Packaging.PackageRelationship.RelationshipType" /> 相匹配的关系的集合。</summary>
      <param name="relationshipType" vsli:raw="The &lt;see cref=&quot;P:System.IO.Packaging.PackageRelationship.RelationshipType&quot; /&gt; of the relationships to locate and return in the collection.">要在集合中查找并返回的关系的 <see cref="P:System.IO.Packaging.PackageRelationship.RelationshipType" />。</param>
      <exception cref="T:System.ArgumentNullException" vsli:raw="&lt;paramref name=&quot;relationshipType&quot; /&gt; is &lt;see langword=&quot;null&quot; /&gt;.">
        <paramref name="relationshipType" /> 为 <see langword="null" />。</exception>
      <exception cref="T:System.ArgumentException" vsli:raw="&lt;paramref name=&quot;relationshipType&quot; /&gt; is an empty string.">
        <paramref name="relationshipType" /> 是一个空字符串。</exception>
      <exception cref="T:System.InvalidOperationException" vsli:raw="The part has been deleted.  &#xA;  &#xA; -or-  &#xA;  &#xA; The &lt;see cref=&quot;P:System.IO.Packaging.PackagePart.Package&quot; /&gt; is not open (&lt;see cref=&quot;M:System.IO.Packaging.Package.Dispose(System.Boolean)&quot; /&gt; or &lt;see cref=&quot;M:System.IO.Packaging.Package.Close&quot; /&gt; has been called).">已删除此部分。  
  
- 或 - 
<see cref="P:System.IO.Packaging.PackagePart.Package" /> 没有打开（调用了 <see cref="M:System.IO.Packaging.Package.Dispose(System.Boolean)" /> 或 <see cref="M:System.IO.Packaging.Package.Close" />）。</exception>
      <exception cref="T:System.IO.IOException" vsli:raw="The package is write-only (relationship information cannot be read).">包是只写的（无法读取关系信息）。</exception>
      <returns vsli:raw="A collection of the relationships that match the specified &lt;paramref name=&quot;relationshipType&quot; /&gt;.">与指定 <paramref name="relationshipType" /> 相匹配的关系的集合。</returns>
    </member>
    <member name="M:System.IO.Packaging.PackagePart.GetStream">
      <summary vsli:raw="Returns the part content data stream.">返回部分内容数据流。</summary>
      <exception cref="T:System.InvalidOperationException" vsli:raw="The part has been deleted.  &#xA;  &#xA; -or-  &#xA;  &#xA; The &lt;see cref=&quot;P:System.IO.Packaging.PackagePart.Package&quot; /&gt; is not open (&lt;see cref=&quot;M:System.IO.Packaging.Package.Dispose(System.Boolean)&quot; /&gt; or &lt;see cref=&quot;M:System.IO.Packaging.Package.Close&quot; /&gt; has been called).">已删除此部分。  
  
- 或 - 
<see cref="P:System.IO.Packaging.PackagePart.Package" /> 没有打开（调用了 <see cref="M:System.IO.Packaging.Package.Dispose(System.Boolean)" /> 或 <see cref="M:System.IO.Packaging.Package.Close" />）。</exception>
      <exception cref="T:System.IO.IOException" vsli:raw="The stream object returned by the &lt;see cref=&quot;M:System.IO.Packaging.PackagePart.GetStreamCore(System.IO.FileMode,System.IO.FileAccess)&quot; /&gt; method of the derived subclass is &lt;see langword=&quot;null&quot; /&gt;.">派生子类的 <see cref="M:System.IO.Packaging.PackagePart.GetStreamCore(System.IO.FileMode,System.IO.FileAccess)" /> 方法返回的流对象是 <see langword="null" />。</exception>
      <returns vsli:raw="The content data stream for the part.">此部分的内容数据流。</returns>
    </member>
    <member name="M:System.IO.Packaging.PackagePart.GetStream(System.IO.FileMode)">
      <summary vsli:raw="Returns the content stream opened in a specified I/O &lt;see cref=&quot;T:System.IO.FileMode&quot; /&gt;.">返回在指定 I/O <see cref="T:System.IO.FileMode" /> 中打开的内容流。</summary>
      <param name="mode" vsli:raw="The I/O mode in which to open the content stream.">打开内容流时采用的 I/O 模式。</param>
      <exception cref="T:System.InvalidOperationException" vsli:raw="The part has been deleted.  &#xA;  &#xA; -or-  &#xA;  &#xA; The &lt;see cref=&quot;P:System.IO.Packaging.PackagePart.Package&quot; /&gt; is not open (&lt;see cref=&quot;M:System.IO.Packaging.Package.Dispose(System.Boolean)&quot; /&gt; or &lt;see cref=&quot;M:System.IO.Packaging.Package.Close&quot; /&gt; has been called).">已删除此部分。  
  
- 或 - 
<see cref="P:System.IO.Packaging.PackagePart.Package" /> 没有打开（调用了 <see cref="M:System.IO.Packaging.Package.Dispose(System.Boolean)" /> 或 <see cref="M:System.IO.Packaging.Package.Close" />）。</exception>
      <exception cref="T:System.ArgumentOutOfRangeException" vsli:raw="The &lt;paramref name=&quot;mode&quot; /&gt; parameter is not a valid &lt;see cref=&quot;T:System.IO.FileMode&quot; /&gt; enumeration value.">
        <paramref name="mode" /> 参数不是有效的 <see cref="T:System.IO.FileMode" /> 枚举值。</exception>
      <exception cref="T:System.IO.IOException" vsli:raw="The &lt;paramref name=&quot;mode&quot; /&gt; parameter is not compatible with the package and part stream.  &#xA;  &#xA; -or-  &#xA;  &#xA; The stream object returned by the &lt;see cref=&quot;M:System.IO.Packaging.PackagePart.GetStreamCore(System.IO.FileMode,System.IO.FileAccess)&quot; /&gt; method of the derived subclass is &lt;see langword=&quot;null&quot; /&gt;.">
        <paramref name="mode" /> 参数与包和部分流不兼容。  
  
- 或 - 
派生子类的 <see cref="M:System.IO.Packaging.PackagePart.GetStreamCore(System.IO.FileMode,System.IO.FileAccess)" /> 方法返回的流对象是 <see langword="null" />。</exception>
      <returns vsli:raw="The content stream of the part.">此部分的内容流。</returns>
    </member>
    <member name="M:System.IO.Packaging.PackagePart.GetStream(System.IO.FileMode,System.IO.FileAccess)">
      <summary vsli:raw="Returns the part content stream opened with a specified &lt;see cref=&quot;T:System.IO.FileMode&quot; /&gt; and &lt;see cref=&quot;T:System.IO.FileAccess&quot; /&gt;.">返回使用指定 <see cref="T:System.IO.FileMode" /> 和 <see cref="T:System.IO.FileAccess" /> 打开的部分内容流。</summary>
      <param name="mode" vsli:raw="The I/O mode in which to open the content stream.">打开内容流时采用的 I/O 模式。</param>
      <param name="access" vsli:raw="The access permissions to use in opening the content stream.">打开内容流时使用的访问权限。</param>
      <exception cref="T:System.InvalidOperationException" vsli:raw="The part has been deleted.  &#xA;  &#xA; -or-  &#xA;  &#xA; The &lt;see cref=&quot;P:System.IO.Packaging.PackagePart.Package&quot; /&gt; is not open (&lt;see cref=&quot;M:System.IO.Packaging.Package.Dispose(System.Boolean)&quot; /&gt; or &lt;see cref=&quot;M:System.IO.Packaging.Package.Close&quot; /&gt; has been called).">已删除此部分。  
  
- 或 - 
<see cref="P:System.IO.Packaging.PackagePart.Package" /> 没有打开（调用了 <see cref="M:System.IO.Packaging.Package.Dispose(System.Boolean)" /> 或 <see cref="M:System.IO.Packaging.Package.Close" />）。</exception>
      <exception cref="T:System.ArgumentOutOfRangeException" vsli:raw="The &lt;paramref name=&quot;mode&quot; /&gt; parameter is not a valid &lt;see cref=&quot;T:System.IO.FileMode&quot; /&gt; enumeration value.  &#xA;  &#xA; -or-  &#xA;  &#xA; The &lt;paramref name=&quot;access&quot; /&gt; parameter is not a valid &lt;see cref=&quot;T:System.IO.FileAccess&quot; /&gt; enumeration value.">
        <paramref name="mode" /> 参数不是有效的 <see cref="T:System.IO.FileMode" /> 枚举值。  
  
- 或 - 
<paramref name="access" /> 参数不是有效的 <see cref="T:System.IO.FileAccess" /> 枚举值。</exception>
      <exception cref="T:System.IO.IOException" vsli:raw="&lt;paramref name=&quot;mode&quot; /&gt; or &lt;paramref name=&quot;access&quot; /&gt; is not compatible with the package and part stream.  &#xA;  &#xA; -or-  &#xA;  &#xA; The &lt;paramref name=&quot;access&quot; /&gt; parameter is specified as &lt;see cref=&quot;F:System.IO.FileAccess.Read&quot; /&gt; but the &lt;paramref name=&quot;mode&quot; /&gt; parameter requires write access.  (&lt;see cref=&quot;T:System.IO.FileMode&quot; /&gt; values of &lt;see cref=&quot;F:System.IO.FileMode.Create&quot; /&gt;, &lt;see cref=&quot;F:System.IO.FileMode.CreateNew&quot; /&gt;, &lt;see cref=&quot;F:System.IO.FileMode.Truncate&quot; /&gt;, and &lt;see cref=&quot;F:System.IO.FileMode.Append&quot; /&gt; require &lt;see cref=&quot;F:System.IO.FileAccess.Write&quot; /&gt; or &lt;see cref=&quot;F:System.IO.FileAccess.ReadWrite&quot; /&gt; access.)  &#xA;  &#xA; -or-  &#xA;  &#xA; The stream object returned by the &lt;see cref=&quot;M:System.IO.Packaging.PackagePart.GetStreamCore(System.IO.FileMode,System.IO.FileAccess)&quot; /&gt; method of the derived subclass is &lt;see langword=&quot;null&quot; /&gt;.">
        <paramref name="mode" /> 或 <paramref name="access" /> 与包和部分流不兼容。  
  
- 或 - 
<paramref name="access" /> 参数指定为 <see cref="F:System.IO.FileAccess.Read" />，但 <paramref name="mode" /> 参数需要写访问权。  （<see cref="T:System.IO.FileMode" />、<see cref="F:System.IO.FileMode.Create" />、<see cref="F:System.IO.FileMode.CreateNew" /> 和 <see cref="F:System.IO.FileMode.Truncate" /> 的 <see cref="F:System.IO.FileMode.Append" /> 值需要 <see cref="F:System.IO.FileAccess.Write" /> 或 <see cref="F:System.IO.FileAccess.ReadWrite" /> 访问权限。） 
- 或 - 
派生子类的 <see cref="M:System.IO.Packaging.PackagePart.GetStreamCore(System.IO.FileMode,System.IO.FileAccess)" /> 方法返回的流对象是 <see langword="null" />。</exception>
      <returns vsli:raw="The content stream for the part.">此部分的内容流。</returns>
    </member>
    <member name="M:System.IO.Packaging.PackagePart.GetStreamCore(System.IO.FileMode,System.IO.FileAccess)">
      <summary vsli:raw="When overridden in a derived class, returns the part content stream opened with a specified &lt;see cref=&quot;T:System.IO.FileMode&quot; /&gt; and &lt;see cref=&quot;T:System.IO.FileAccess&quot; /&gt;.">当在派生类中重写时，返回使用指定的 <see cref="T:System.IO.FileMode" /> 和 <see cref="T:System.IO.FileAccess" /> 打开的部分内容流。</summary>
      <param name="mode" vsli:raw="The I/O mode in which to open the content stream.">打开内容流时采用的 I/O 模式。</param>
      <param name="access" vsli:raw="The access permissions to use in opening the content stream.">打开内容流时使用的访问权限。</param>
      <returns vsli:raw="The content data stream of the part.">此部分的内容数据流。</returns>
    </member>
    <member name="M:System.IO.Packaging.PackagePart.RelationshipExists(System.String)">
      <summary vsli:raw="Returns a value that indicates whether this part owns a relationship with a specified &lt;see cref=&quot;P:System.IO.Packaging.PackageRelationship.Id&quot; /&gt;.">返回一个值，指示此部分是否拥有具有指定 <see cref="P:System.IO.Packaging.PackageRelationship.Id" /> 的关系。</summary>
      <param name="id" vsli:raw="The &lt;see cref=&quot;P:System.IO.Packaging.PackageRelationship.Id&quot; /&gt; of the relationship to check for.">要检查的关系的 <see cref="P:System.IO.Packaging.PackageRelationship.Id" />。</param>
      <exception cref="T:System.ArgumentNullException" vsli:raw="&lt;paramref name=&quot;id&quot; /&gt; is &lt;see langword=&quot;null&quot; /&gt;.">
        <paramref name="id" /> 为 <see langword="null" />。</exception>
      <exception cref="T:System.Xml.XmlException" vsli:raw="&lt;paramref name=&quot;id&quot; /&gt; is not a valid XML identifier.">
        <paramref name="id" /> 不是有效的 XML 标识符。</exception>
      <exception cref="T:System.InvalidOperationException" vsli:raw="The part has been deleted.  &#xA;  &#xA; -or-  &#xA;  &#xA; The &lt;see cref=&quot;P:System.IO.Packaging.PackagePart.Package&quot; /&gt; is not open (&lt;see cref=&quot;M:System.IO.Packaging.Package.Dispose(System.Boolean)&quot; /&gt; or &lt;see cref=&quot;M:System.IO.Packaging.Package.Close&quot; /&gt; has been called).">已删除此部分。  
  
- 或 - 
<see cref="P:System.IO.Packaging.PackagePart.Package" /> 没有打开（调用了 <see cref="M:System.IO.Packaging.Package.Dispose(System.Boolean)" /> 或 <see cref="M:System.IO.Packaging.Package.Close" />）。</exception>
      <exception cref="T:System.IO.IOException" vsli:raw="The package is write-only (relationship information cannot be read).">包是只写的（无法读取关系信息）。</exception>
      <returns vsli:raw="&lt;see langword=&quot;true&quot; /&gt; if this part owns a relationship with the specified &lt;paramref name=&quot;id&quot; /&gt;; otherwise, &lt;see langword=&quot;false&quot; /&gt;.">如果此部分拥有具有指定 <paramref name="id" /> 的关系，则为 <see langword="true" />；否则为 <see langword="false" />。</returns>
    </member>
    <member name="P:System.IO.Packaging.PackagePart.CompressionOption">
      <summary vsli:raw="Gets the compression option of the part content stream.">获取部分内容流的压缩选项。</summary>
      <exception cref="T:System.InvalidOperationException" vsli:raw="The part has been deleted.  &#xA;  &#xA; -or-  &#xA;  &#xA; The &lt;see cref=&quot;P:System.IO.Packaging.PackagePart.Package&quot; /&gt; is not open (&lt;see cref=&quot;M:System.IO.Packaging.Package.Dispose(System.Boolean)&quot; /&gt; or &lt;see cref=&quot;M:System.IO.Packaging.Package.Close&quot; /&gt; has been called).">已删除此部分。  
  
- 或 - 
<see cref="P:System.IO.Packaging.PackagePart.Package" /> 没有打开（调用了 <see cref="M:System.IO.Packaging.Package.Dispose(System.Boolean)" /> 或 <see cref="M:System.IO.Packaging.Package.Close" />）。</exception>
      <returns vsli:raw="The compression option of the part content stream.">部分内容流的压缩选项。</returns>
    </member>
    <member name="P:System.IO.Packaging.PackagePart.ContentType">
      <summary vsli:raw="Gets the MIME type of the content stream.">获取内容流的 MIME 类型。</summary>
      <exception cref="T:System.InvalidOperationException" vsli:raw="The part has been deleted.  &#xA;  &#xA; -or-  &#xA;  &#xA; The &lt;see cref=&quot;P:System.IO.Packaging.PackagePart.Package&quot; /&gt; is not open (&lt;see cref=&quot;M:System.IO.Packaging.Package.Dispose(System.Boolean)&quot; /&gt; or &lt;see cref=&quot;M:System.IO.Packaging.Package.Close&quot; /&gt; has been called).  &#xA;  &#xA; -or-  &#xA;  &#xA; The string returned by the derived class &lt;see cref=&quot;M:System.IO.Packaging.PackagePart.GetContentTypeCore&quot; /&gt; method is empty.">已删除此部分。  
  
- 或 - 
<see cref="P:System.IO.Packaging.PackagePart.Package" /> 没有打开（调用了 <see cref="M:System.IO.Packaging.Package.Dispose(System.Boolean)" /> 或 <see cref="M:System.IO.Packaging.Package.Close" />）。  
  
- 或 - 
派生类 <see cref="M:System.IO.Packaging.PackagePart.GetContentTypeCore" /> 方法返回的字符串为空。</exception>
      <returns vsli:raw="The MIME type of the content data stream for the part.">部分的内容数据流的 MIME 类型。</returns>
    </member>
    <member name="P:System.IO.Packaging.PackagePart.Package">
      <summary vsli:raw="Gets the parent &lt;see cref=&quot;T:System.IO.Packaging.Package&quot; /&gt; of the part.">获取此部分的父 <see cref="T:System.IO.Packaging.Package" />。</summary>
      <exception cref="T:System.InvalidOperationException" vsli:raw="The part has been deleted.  &#xA;  &#xA; -or-  &#xA;  &#xA; The &lt;see cref=&quot;P:System.IO.Packaging.PackagePart.Package&quot; /&gt; is not open (&lt;see cref=&quot;M:System.IO.Packaging.Package.Dispose(System.Boolean)&quot; /&gt; or &lt;see cref=&quot;M:System.IO.Packaging.Package.Close&quot; /&gt; has been called).">已删除此部分。  
  
- 或 - 
<see cref="P:System.IO.Packaging.PackagePart.Package" /> 没有打开（调用了 <see cref="M:System.IO.Packaging.Package.Dispose(System.Boolean)" /> 或 <see cref="M:System.IO.Packaging.Package.Close" />）。</exception>
      <returns vsli:raw="The parent package of the part.">此部分的父包。</returns>
    </member>
    <member name="P:System.IO.Packaging.PackagePart.Uri">
      <summary vsli:raw="Gets the URI of the part.">获取部件的 URI。</summary>
      <exception cref="T:System.InvalidOperationException" vsli:raw="The part has been deleted.  &#xA;  &#xA; -or-  &#xA;  &#xA; The &lt;see cref=&quot;P:System.IO.Packaging.PackagePart.Package&quot; /&gt; is not open (&lt;see cref=&quot;M:System.IO.Packaging.Package.Dispose(System.Boolean)&quot; /&gt; or &lt;see cref=&quot;M:System.IO.Packaging.Package.Close&quot; /&gt; has been called).">已删除此部分。  
  
- 或 - 
<see cref="P:System.IO.Packaging.PackagePart.Package" /> 没有打开（调用了 <see cref="M:System.IO.Packaging.Package.Dispose(System.Boolean)" /> 或 <see cref="M:System.IO.Packaging.Package.Close" />）。</exception>
      <returns vsli:raw="The URI of the part relative to the package root.">相对于包根的部件的 URI。</returns>
    </member>
    <member name="T:System.IO.Packaging.PackagePartCollection">
      <summary vsli:raw="Represents a collection of &lt;see cref=&quot;T:System.IO.Packaging.PackagePart&quot; /&gt; objects.">表示 <see cref="T:System.IO.Packaging.PackagePart" /> 对象集合。</summary>
    </member>
    <member name="M:System.IO.Packaging.PackagePartCollection.GetEnumerator">
      <summary vsli:raw="Returns an enumerator for iterating through the parts in the collection.">返回用于循环访问集合中的部件一个枚举器。</summary>
      <returns vsli:raw="An enumerator for iterating through the &lt;see cref=&quot;T:System.IO.Packaging.PackagePart&quot; /&gt; elements in the collection.">用于循环访问集合中的 <see cref="T:System.IO.Packaging.PackagePart" /> 元素的枚举器。</returns>
    </member>
    <member name="M:System.IO.Packaging.PackagePartCollection.System#Collections#Generic#IEnumerable{System#IO#Packaging#PackagePart}#GetEnumerator">
      <summary vsli:raw="Returns an enumerator that iterates through the collection.">返回一个循环访问集合的枚举器。</summary>
      <returns vsli:raw="An &lt;see cref=&quot;T:System.Collections.Generic.IEnumerator`1&quot; /&gt; object that can be used to iterate through the collection.">一个可用于循环访问集合的 <see cref="T:System.Collections.Generic.IEnumerator`1" /> 对象。</returns>
    </member>
    <member name="M:System.IO.Packaging.PackagePartCollection.System#Collections#IEnumerable#GetEnumerator">
      <summary vsli:raw="For a description of this member, see &lt;see cref=&quot;M:System.Collections.IEnumerable.GetEnumerator&quot; /&gt;.">有关此成员的说明，请参见 <see cref="M:System.Collections.IEnumerable.GetEnumerator" />。</summary>
      <returns vsli:raw="An &lt;see cref=&quot;T:System.Collections.IEnumerator&quot; /&gt; object that can be used to iterate through the collection.">一个可用于循环访问集合的 <see cref="T:System.Collections.IEnumerator" /> 对象。</returns>
    </member>
    <member name="T:System.IO.Packaging.PackageProperties">
      <summary vsli:raw="Represents the core properties of a &lt;see cref=&quot;T:System.IO.Packaging.Package&quot; /&gt;.">表示 <see cref="T:System.IO.Packaging.Package" /> 的核心属性。</summary>
    </member>
    <member name="M:System.IO.Packaging.PackageProperties.#ctor">
      <summary vsli:raw="Initializes a new instance of the &lt;see cref=&quot;T:System.IO.Packaging.PackageProperties&quot; /&gt; class.">初始化 <see cref="T:System.IO.Packaging.PackageProperties" /> 类的新实例。</summary>
    </member>
    <member name="M:System.IO.Packaging.PackageProperties.Dispose">
      <summary vsli:raw="Releases all resources used by the &lt;see cref=&quot;T:System.IO.Packaging.PackageProperties&quot; /&gt; instance.">释放 <see cref="T:System.IO.Packaging.PackageProperties" /> 实例使用的所有资源。</summary>
    </member>
    <member name="M:System.IO.Packaging.PackageProperties.Dispose(System.Boolean)">
      <summary vsli:raw="Releases the unmanaged resources used by the &lt;see cref=&quot;T:System.IO.Packaging.PackageProperties&quot; /&gt; instance and optionally releases the managed resources.">释放由 <see cref="T:System.IO.Packaging.PackageProperties" /> 实例使用的非托管资源，并选择释放托管资源。</summary>
      <param name="disposing" vsli:raw="&lt;see langword=&quot;true&quot; /&gt; to release both managed and unmanaged resources; &lt;see langword=&quot;false&quot; /&gt; to release only unmanaged resources.">若要释放托管资源和非托管资源，则为 <see langword="true" />；若仅释放非托管资源，则为 <see langword="false" />。</param>
    </member>
    <member name="P:System.IO.Packaging.PackageProperties.Category">
      <summary vsli:raw="When overridden in a derived class, gets or sets the category of the &lt;see cref=&quot;T:System.IO.Packaging.Package&quot; /&gt;.">当在派生类中重写时，获取或设置 <see cref="T:System.IO.Packaging.Package" /> 的类别。</summary>
      <returns vsli:raw="The category of the content that is contained in the &lt;see cref=&quot;T:System.IO.Packaging.Package&quot; /&gt;.">包含在 <see cref="T:System.IO.Packaging.Package" /> 中的内容的类别。</returns>
    </member>
    <member name="P:System.IO.Packaging.PackageProperties.ContentStatus">
      <summary vsli:raw="When overridden in a derived class, gets or sets a value that represents the status of the &lt;see cref=&quot;T:System.IO.Packaging.Package&quot; /&gt;.">在派生类中重写时，获取或设置一个值，该值表示 <see cref="T:System.IO.Packaging.Package" /> 的状态。</summary>
      <returns vsli:raw="The status of the &lt;see cref=&quot;T:System.IO.Packaging.Package&quot; /&gt; content.">
        <see cref="T:System.IO.Packaging.Package" /> 内容的状态。</returns>
    </member>
    <member name="P:System.IO.Packaging.PackageProperties.ContentType">
      <summary vsli:raw="When overridden in a derived class, gets or sets a value that represents the type of content that is contained in the &lt;see cref=&quot;T:System.IO.Packaging.Package&quot; /&gt;.">在派生类中重写时，获取或设置一个值，该值表示包含在 <see cref="T:System.IO.Packaging.Package" /> 中的内容的类型。</summary>
      <returns vsli:raw="The type of content that is contained in the &lt;see cref=&quot;T:System.IO.Packaging.Package&quot; /&gt;.">包含在 <see cref="T:System.IO.Packaging.Package" /> 中的内容的类型。</returns>
    </member>
    <member name="P:System.IO.Packaging.PackageProperties.Created">
      <summary vsli:raw="When overridden in a derived class, gets or sets the date and time the &lt;see cref=&quot;T:System.IO.Packaging.Package&quot; /&gt; was created.">在派生类中重写时，获取或设置 <see cref="T:System.IO.Packaging.Package" /> 的创建日期和时间。</summary>
      <returns vsli:raw="The date and time the &lt;see cref=&quot;T:System.IO.Packaging.Package&quot; /&gt; was initially created.">最初创建 <see cref="T:System.IO.Packaging.Package" /> 的日期和时间。</returns>
    </member>
    <member name="P:System.IO.Packaging.PackageProperties.Creator">
      <summary vsli:raw="When overridden in a derived class, gets or sets a value that identifies the individual or entity that created the &lt;see cref=&quot;T:System.IO.Packaging.Package&quot; /&gt; and its content.">在派生类中重写时，获取或设置一个值，该值标识创建了 <see cref="T:System.IO.Packaging.Package" /> 及其内容的个体或实体。</summary>
      <returns vsli:raw="The individual or entity that created the &lt;see cref=&quot;T:System.IO.Packaging.Package&quot; /&gt; and its content.">创建了 <see cref="T:System.IO.Packaging.Package" /> 及其内容的个体或实体。</returns>
    </member>
    <member name="P:System.IO.Packaging.PackageProperties.Description">
      <summary vsli:raw="When overridden in a derived class, gets or sets a description of the content contained in the &lt;see cref=&quot;T:System.IO.Packaging.Package&quot; /&gt;.">在派生类中重写时，获取或设置包含在 <see cref="T:System.IO.Packaging.Package" /> 中的内容的说明。</summary>
      <returns vsli:raw="A description of the content contained in the &lt;see cref=&quot;T:System.IO.Packaging.Package&quot; /&gt;.">包含在 <see cref="T:System.IO.Packaging.Package" /> 中的内容的说明。</returns>
    </member>
    <member name="P:System.IO.Packaging.PackageProperties.Identifier">
      <summary vsli:raw="When overridden in a derived class, gets or sets a value that unambiguously identifies the &lt;see cref=&quot;T:System.IO.Packaging.Package&quot; /&gt; and its content.">在派生类中重写时，获取或设置一个值，该值明确标识 <see cref="T:System.IO.Packaging.Package" /> 及其内容。</summary>
      <returns vsli:raw="A value that unambiguously identifies the &lt;see cref=&quot;T:System.IO.Packaging.Package&quot; /&gt; and its content.">明确标识 <see cref="T:System.IO.Packaging.Package" /> 及其内容的值。</returns>
    </member>
    <member name="P:System.IO.Packaging.PackageProperties.Keywords">
      <summary vsli:raw="When overridden in a derived class, gets or sets a value that define a delimited set of keywords to support searching and indexing the &lt;see cref=&quot;T:System.IO.Packaging.Package&quot; /&gt; and its content.">在派生类中重写时，获取或设置一个值，该值定义界定的关键字集来支持搜索和索引 <see cref="T:System.IO.Packaging.Package" /> 及其内容。</summary>
      <returns vsli:raw="A delimited set of keywords to support searching and indexing the &lt;see cref=&quot;T:System.IO.Packaging.Package&quot; /&gt; and content.">支持搜索和索引 <see cref="T:System.IO.Packaging.Package" /> 及其内容的界定关键字集。</returns>
    </member>
    <member name="P:System.IO.Packaging.PackageProperties.Language">
      <summary vsli:raw="When overridden in a derived class, gets or sets a value that identifies the language of the &lt;see cref=&quot;T:System.IO.Packaging.Package&quot; /&gt; content.">在派生类中重写时，获取或设置一个值，该值标识 <see cref="T:System.IO.Packaging.Package" /> 内容的语言。</summary>
      <returns vsli:raw="A value that identifies the &lt;see cref=&quot;T:System.IO.Packaging.Package&quot; /&gt; content language.">标识 <see cref="T:System.IO.Packaging.Package" /> 内容语言的值。</returns>
    </member>
    <member name="P:System.IO.Packaging.PackageProperties.LastModifiedBy">
      <summary vsli:raw="When overridden in a derived class, gets or sets a value that identifies the user who last modified the &lt;see cref=&quot;T:System.IO.Packaging.Package&quot; /&gt; content.">在派生类中重写时，获取或设置一个值，该值标识上次修改 <see cref="T:System.IO.Packaging.Package" /> 内容的用户。</summary>
      <returns vsli:raw="The user who last modified the &lt;see cref=&quot;T:System.IO.Packaging.Package&quot; /&gt; content.">上次修改 <see cref="T:System.IO.Packaging.Package" /> 内容的用户。</returns>
    </member>
    <member name="P:System.IO.Packaging.PackageProperties.LastPrinted">
      <summary vsli:raw="When overridden in a derived class, gets or sets the date and time the &lt;see cref=&quot;T:System.IO.Packaging.Package&quot; /&gt; content was last printed.">在派生类中重写时，获取或设置上次打印 <see cref="T:System.IO.Packaging.Package" /> 内容的日期和时间。</summary>
      <returns vsli:raw="The date and time the &lt;see cref=&quot;T:System.IO.Packaging.Package&quot; /&gt; content was last printed.">上次打印 <see cref="T:System.IO.Packaging.Package" /> 内容的日期和时间。</returns>
    </member>
    <member name="P:System.IO.Packaging.PackageProperties.Modified">
      <summary vsli:raw="When overridden in a derived class, gets or sets the date and time the &lt;see cref=&quot;T:System.IO.Packaging.Package&quot; /&gt; was last changed.">在派生类中重写时，获取或设置上次更改 <see cref="T:System.IO.Packaging.Package" /> 的日期和时间。</summary>
      <returns vsli:raw="The date and time the &lt;see cref=&quot;T:System.IO.Packaging.Package&quot; /&gt; was last changed.">上次更改 <see cref="T:System.IO.Packaging.Package" /> 的日期和时间。</returns>
    </member>
    <member name="P:System.IO.Packaging.PackageProperties.Revision">
      <summary vsli:raw="When overridden in a derived class, gets or sets the revision number of the &lt;see cref=&quot;T:System.IO.Packaging.Package&quot; /&gt;.">在派生类中重写时，获取或设置 <see cref="T:System.IO.Packaging.Package" /> 的修订号。</summary>
      <returns vsli:raw="The revision number of the &lt;see cref=&quot;T:System.IO.Packaging.Package&quot; /&gt;.">
        <see cref="T:System.IO.Packaging.Package" /> 的修订号。</returns>
    </member>
    <member name="P:System.IO.Packaging.PackageProperties.Subject">
      <summary vsli:raw="When overridden in a derived class, gets or sets the topic of the &lt;see cref=&quot;T:System.IO.Packaging.Package&quot; /&gt; content.">当在派生类中重写时，获取或设置 <see cref="T:System.IO.Packaging.Package" /> 内容的主题。</summary>
      <returns vsli:raw="The topic of the &lt;see cref=&quot;T:System.IO.Packaging.Package&quot; /&gt; content.">
        <see cref="T:System.IO.Packaging.Package" /> 内容的主题。</returns>
    </member>
    <member name="P:System.IO.Packaging.PackageProperties.Title">
      <summary vsli:raw="When overridden in a derived class, gets or sets the name given to the &lt;see cref=&quot;T:System.IO.Packaging.Package&quot; /&gt; and its content.">在派生类中重写时，获取或设置为 <see cref="T:System.IO.Packaging.Package" /> 及其内容指定的名称。</summary>
      <returns vsli:raw="The name given to the &lt;see cref=&quot;T:System.IO.Packaging.Package&quot; /&gt; and its content.">为 <see cref="T:System.IO.Packaging.Package" /> 及其内容指定的名称。</returns>
    </member>
    <member name="P:System.IO.Packaging.PackageProperties.Version">
      <summary vsli:raw="When overridden in a derived class, gets or sets the version number of the &lt;see cref=&quot;T:System.IO.Packaging.Package&quot; /&gt;.">在派生类中重写时，获取或设置 <see cref="T:System.IO.Packaging.Package" /> 的版本号。</summary>
      <returns vsli:raw="The version number of the &lt;see cref=&quot;T:System.IO.Packaging.Package&quot; /&gt;.">
        <see cref="T:System.IO.Packaging.Package" /> 的版本号。</returns>
    </member>
    <member name="T:System.IO.Packaging.PackageRelationship">
      <summary vsli:raw="Represents an association between a source &lt;see cref=&quot;T:System.IO.Packaging.Package&quot; /&gt; or &lt;see cref=&quot;T:System.IO.Packaging.PackagePart&quot; /&gt;, and a target object which can be a &lt;see cref=&quot;T:System.IO.Packaging.PackagePart&quot; /&gt; or external resource.">表示源 <see cref="T:System.IO.Packaging.Package" /> 或 <see cref="T:System.IO.Packaging.PackagePart" /> 与可以为 <see cref="T:System.IO.Packaging.PackagePart" /> 或外部资源的目标对象之间的关联。</summary>
    </member>
    <member name="P:System.IO.Packaging.PackageRelationship.Id">
      <summary vsli:raw="Gets a string that identifies the relationship.">获取标识关系的字符串。</summary>
      <returns vsli:raw="A string that identifies the relationship.">标识关系的字符串。</returns>
    </member>
    <member name="P:System.IO.Packaging.PackageRelationship.Package">
      <summary vsli:raw="Gets the &lt;see cref=&quot;T:System.IO.Packaging.Package&quot; /&gt; that contains this relationship.">获取包含此关系的 <see cref="T:System.IO.Packaging.Package" />。</summary>
      <returns vsli:raw="The package that contains this relationship.">包含此关系的包。</returns>
    </member>
    <member name="P:System.IO.Packaging.PackageRelationship.RelationshipType">
      <summary vsli:raw="Gets the qualified type name of the relationship.">获取关系的限定类型名称。</summary>
      <returns vsli:raw="The qualified type name of the relationship.">关系的限定类型名称。</returns>
    </member>
    <member name="P:System.IO.Packaging.PackageRelationship.SourceUri">
      <summary vsli:raw="Gets the URI of the package or part that owns the relationship.">获取拥有关系的包或部分的 URI。</summary>
      <returns vsli:raw="The URI of the &lt;see cref=&quot;T:System.IO.Packaging.Package&quot; /&gt; or &lt;see cref=&quot;T:System.IO.Packaging.PackagePart&quot; /&gt; that owns the relationship.">
        <see cref="T:System.IO.Packaging.Package" />拥有关系的或的 URI <see cref="T:System.IO.Packaging.PackagePart" /> 。</returns>
    </member>
    <member name="P:System.IO.Packaging.PackageRelationship.TargetMode">
      <summary vsli:raw="Gets a value that indicates whether the target of the relationship is &lt;see cref=&quot;F:System.IO.Packaging.TargetMode.Internal&quot; /&gt; or &lt;see cref=&quot;F:System.IO.Packaging.TargetMode.External&quot; /&gt; to the &lt;see cref=&quot;T:System.IO.Packaging.Package&quot; /&gt;.">获取一个值，该值指示关系的目标是 <see cref="F:System.IO.Packaging.TargetMode.Internal" /> 或 <see cref="F:System.IO.Packaging.TargetMode.External" /> 指向 <see cref="T:System.IO.Packaging.Package" />。</summary>
      <returns vsli:raw="An enumeration value that indicates whether &lt;see cref=&quot;P:System.IO.Packaging.PackageRelationship.TargetUri&quot; /&gt; references a resource &lt;see cref=&quot;F:System.IO.Packaging.TargetMode.Internal&quot; /&gt; or &lt;see cref=&quot;F:System.IO.Packaging.TargetMode.External&quot; /&gt; to the &lt;see cref=&quot;T:System.IO.Packaging.Package&quot; /&gt;.">一个枚举值，它指示 <see cref="P:System.IO.Packaging.PackageRelationship.TargetUri" /> 是否引用指向 <see cref="T:System.IO.Packaging.Package" /> 的 <see cref="F:System.IO.Packaging.TargetMode.Internal" /> 或 <see cref="F:System.IO.Packaging.TargetMode.External" />。</returns>
    </member>
    <member name="P:System.IO.Packaging.PackageRelationship.TargetUri">
      <summary vsli:raw="Gets the URI of the target resource of the relationship.">获取关系的目标资源的 URI。</summary>
      <returns vsli:raw="The URI of the target resource.">目标资源的 URI。</returns>
    </member>
    <member name="T:System.IO.Packaging.PackageRelationshipCollection">
      <summary vsli:raw="Represents a collection of &lt;see cref=&quot;T:System.IO.Packaging.PackageRelationship&quot; /&gt; elements that are owned by a given &lt;see cref=&quot;T:System.IO.Packaging.PackagePart&quot; /&gt; or the &lt;see cref=&quot;T:System.IO.Packaging.Package&quot; /&gt;.">表示为给定的 <see cref="T:System.IO.Packaging.PackageRelationship" /> 或 <see cref="T:System.IO.Packaging.PackagePart" /> 所拥有的 <see cref="T:System.IO.Packaging.Package" /> 元素的集合。</summary>
    </member>
    <member name="M:System.IO.Packaging.PackageRelationshipCollection.GetEnumerator">
      <summary vsli:raw="Returns an enumerator for iterating through the relationships in the collection.">返回一个用于循环访问集合中的关系的枚举器。</summary>
      <returns vsli:raw="An enumerator for iterating through the &lt;see cref=&quot;T:System.IO.Packaging.PackageRelationship&quot; /&gt; elements in the collection.">用于循环访问集合中的 <see cref="T:System.IO.Packaging.PackageRelationship" /> 元素的枚举器。</returns>
    </member>
    <member name="M:System.IO.Packaging.PackageRelationshipCollection.System#Collections#IEnumerable#GetEnumerator">
      <summary vsli:raw="This type or member supports the Windows Presentation Foundation infrastructure and is not intended to be used directly from your code.">此类型或成员支持 Windows Presentation Foundation 基础结构，且不应在代码中直接使用。</summary>
      <returns vsli:raw="Do not use - use &lt;see cref=&quot;M:System.IO.Packaging.PackageRelationshipCollection.GetEnumerator&quot; /&gt;.">请勿使用 - 使用 <see cref="M:System.IO.Packaging.PackageRelationshipCollection.GetEnumerator" />。</returns>
    </member>
    <member name="T:System.IO.Packaging.PackageRelationshipSelector">
      <summary vsli:raw="Defines &lt;see cref=&quot;T:System.IO.Packaging.PackageRelationship&quot; /&gt; criteria to select part-level or package-level relationships.">定义 <see cref="T:System.IO.Packaging.PackageRelationship" /> 条件来选择部分级或包级关系。</summary>
    </member>
    <member name="M:System.IO.Packaging.PackageRelationshipSelector.#ctor(System.Uri,System.IO.Packaging.PackageRelationshipSelectorType,System.String)">
      <summary vsli:raw="Initializes a new instance of the &lt;see cref=&quot;T:System.IO.Packaging.PackageRelationshipSelector&quot; /&gt; class.">初始化 <see cref="T:System.IO.Packaging.PackageRelationshipSelector" /> 类的新实例。</summary>
      <param name="sourceUri" vsli:raw="The uniform resource identifier (URI) of the &lt;see cref=&quot;T:System.IO.Packaging.PackagePart&quot; /&gt; or the &lt;see cref=&quot;T:System.IO.Packaging.Package&quot; /&gt; (&lt;c&gt;SourceUri&lt;/c&gt;=&quot;/&quot;) that owns the relationship.">拥有关系的 <see cref="T:System.IO.Packaging.PackagePart" /> 或 <see cref="T:System.IO.Packaging.Package" /> (<c>SourceUri</c>="/") 的统一资源标识符 (URI)。</param>
      <param name="selectorType" vsli:raw="The type of the &lt;paramref name=&quot;selectionCriteria&quot; /&gt;, either by relationship &lt;see cref=&quot;F:System.IO.Packaging.PackageRelationshipSelectorType.Id&quot; /&gt; or relationship &lt;see cref=&quot;F:System.IO.Packaging.PackageRelationshipSelectorType.Type&quot; /&gt;.">
        <paramref name="selectionCriteria" /> 的类型，要么按关系 <see cref="F:System.IO.Packaging.PackageRelationshipSelectorType.Id" />，要么按关系 <see cref="F:System.IO.Packaging.PackageRelationshipSelectorType.Type" />。</param>
      <param name="selectionCriteria" vsli:raw="The qualification string that is used to select the relationships based on the &lt;paramref name=&quot;selectorType&quot; /&gt;.">用来基于 <paramref name="selectorType" /> 选择关系的限定字符串。</param>
      <exception cref="T:System.ArgumentNullException" vsli:raw="&lt;paramref name=&quot;sourceUri&quot; /&gt; or &lt;paramref name=&quot;selectionCriteria&quot; /&gt; is &lt;see langword=&quot;null&quot; /&gt;.">
        <paramref name="sourceUri" /> 或 <paramref name="selectionCriteria" /> 为 <see langword="null" />。</exception>
      <exception cref="T:System.ArgumentOutOfRangeException" vsli:raw="The &lt;paramref name=&quot;selectorType&quot; /&gt; parameter is not valid.">
        <paramref name="selectorType" /> 参数无效。</exception>
      <exception cref="T:System.Xml.XmlException" vsli:raw="The &lt;paramref name=&quot;selectorType&quot; /&gt; parameter is &lt;see cref=&quot;F:System.IO.Packaging.PackageRelationshipSelectorType.Id&quot; /&gt; but &lt;paramref name=&quot;selectionCriteria&quot; /&gt; is not a valid XML Schema Definition (XSD) identifier (ID).">
        <paramref name="selectorType" />参数为， <see cref="F:System.IO.Packaging.PackageRelationshipSelectorType.Id" /> 但 <paramref name="selectionCriteria" /> 不是有效的 XML 架构定义 (XSD) 标识符 (ID) 。</exception>
      <exception cref="T:System.ArgumentException" vsli:raw="The &lt;paramref name=&quot;selectionCriteria&quot; /&gt; is not valid for the specified &lt;paramref name=&quot;selectorType&quot; /&gt;.&#xA;&#xA;-or-&#xA;&#xA;The &lt;paramref name=&quot;sourceUri&quot; /&gt; is not the &lt;see cref=&quot;T:System.IO.Packaging.Package&quot; /&gt; root (&quot;/&quot;) and is also not a valid &lt;see cref=&quot;T:System.IO.Packaging.PackagePart&quot; /&gt; URI.">
        <paramref name="selectionCriteria" /> 对于指定的 <paramref name="selectorType" /> 无效。

- 或 -

<paramref name="sourceUri" /> 不是 <see cref="T:System.IO.Packaging.Package" /> 根（“/”），也不是有效的 <see cref="T:System.IO.Packaging.PackagePart" /> URI。</exception>
    </member>
    <member name="M:System.IO.Packaging.PackageRelationshipSelector.Select(System.IO.Packaging.Package)">
      <summary vsli:raw="Returns a list of &lt;see cref=&quot;T:System.IO.Packaging.PackageRelationship&quot; /&gt; objects that match the defined &lt;see cref=&quot;P:System.IO.Packaging.PackageRelationshipSelector.SourceUri&quot; /&gt;, &lt;see cref=&quot;P:System.IO.Packaging.PackageRelationshipSelector.SelectorType&quot; /&gt;, and &lt;see cref=&quot;P:System.IO.Packaging.PackageRelationshipSelector.SelectionCriteria&quot; /&gt;.">返回与定义的 <see cref="T:System.IO.Packaging.PackageRelationship" />、<see cref="P:System.IO.Packaging.PackageRelationshipSelector.SourceUri" /> 和 <see cref="P:System.IO.Packaging.PackageRelationshipSelector.SelectorType" /> 相匹配的 <see cref="P:System.IO.Packaging.PackageRelationshipSelector.SelectionCriteria" /> 对象的列表。</summary>
      <param name="package" vsli:raw="The package from which to select the relationships based on the selection criteria.">要基于选择条件从中选择关系的包。</param>
      <exception cref="T:System.ArgumentNullException" vsli:raw="&lt;paramref name=&quot;package&quot; /&gt; is &lt;see langword=&quot;null&quot; /&gt;.">
        <paramref name="package" /> 为 <see langword="null" />。</exception>
      <returns vsli:raw="A list of relationships that match the selection parameters specified to the &lt;see cref=&quot;M:System.IO.Packaging.PackageRelationshipSelector.#ctor(System.Uri,System.IO.Packaging.PackageRelationshipSelectorType,System.String)&quot; /&gt; constructor.">与指定给 <see cref="M:System.IO.Packaging.PackageRelationshipSelector.#ctor(System.Uri,System.IO.Packaging.PackageRelationshipSelectorType,System.String)" /> 构造函数的选择参数相匹配的关系的列表。</returns>
    </member>
    <member name="P:System.IO.Packaging.PackageRelationshipSelector.SelectionCriteria">
      <summary vsli:raw="Gets the selection criteria specified to the &lt;see cref=&quot;M:System.IO.Packaging.PackageRelationshipSelector.#ctor(System.Uri,System.IO.Packaging.PackageRelationshipSelectorType,System.String)&quot; /&gt; constructor.">获取指定给 <see cref="M:System.IO.Packaging.PackageRelationshipSelector.#ctor(System.Uri,System.IO.Packaging.PackageRelationshipSelectorType,System.String)" /> 构造函数的选择条件。</summary>
      <returns vsli:raw="The selection criteria based on the &lt;see cref=&quot;P:System.IO.Packaging.PackageRelationshipSelector.SelectorType&quot; /&gt; of &lt;see cref=&quot;F:System.IO.Packaging.PackageRelationshipSelectorType.Id&quot; /&gt; or &lt;see cref=&quot;F:System.IO.Packaging.PackageRelationshipSelectorType.Type&quot; /&gt; specified to the &lt;see cref=&quot;M:System.IO.Packaging.PackageRelationshipSelector.#ctor(System.Uri,System.IO.Packaging.PackageRelationshipSelectorType,System.String)&quot; /&gt; constructor.">基于指定给 <see cref="P:System.IO.Packaging.PackageRelationshipSelector.SelectorType" /> 构造函数的 <see cref="F:System.IO.Packaging.PackageRelationshipSelectorType.Id" /> 或 <see cref="F:System.IO.Packaging.PackageRelationshipSelectorType.Type" /> 的 <see cref="M:System.IO.Packaging.PackageRelationshipSelector.#ctor(System.Uri,System.IO.Packaging.PackageRelationshipSelectorType,System.String)" /> 的选择条件。</returns>
    </member>
    <member name="P:System.IO.Packaging.PackageRelationshipSelector.SelectorType">
      <summary vsli:raw="Gets the &lt;see cref=&quot;T:System.IO.Packaging.PackageRelationshipSelectorType&quot; /&gt; specified to the &lt;see cref=&quot;M:System.IO.Packaging.PackageRelationshipSelector.#ctor(System.Uri,System.IO.Packaging.PackageRelationshipSelectorType,System.String)&quot; /&gt; constructor.">获取为 <see cref="T:System.IO.Packaging.PackageRelationshipSelectorType" /> 构造函数指定的 <see cref="M:System.IO.Packaging.PackageRelationshipSelector.#ctor(System.Uri,System.IO.Packaging.PackageRelationshipSelectorType,System.String)" />。</summary>
      <returns vsli:raw="The selector type of &lt;see cref=&quot;F:System.IO.Packaging.PackageRelationshipSelectorType.Id&quot; /&gt; or &lt;see cref=&quot;F:System.IO.Packaging.PackageRelationshipSelectorType.Type&quot; /&gt; specified to the &lt;see cref=&quot;M:System.IO.Packaging.PackageRelationshipSelector.#ctor(System.Uri,System.IO.Packaging.PackageRelationshipSelectorType,System.String)&quot; /&gt; constructor.">指定给 <see cref="F:System.IO.Packaging.PackageRelationshipSelectorType.Id" /> 构造函数的 <see cref="F:System.IO.Packaging.PackageRelationshipSelectorType.Type" /> 或 <see cref="M:System.IO.Packaging.PackageRelationshipSelector.#ctor(System.Uri,System.IO.Packaging.PackageRelationshipSelectorType,System.String)" /> 的选择器类型。</returns>
    </member>
    <member name="P:System.IO.Packaging.PackageRelationshipSelector.SourceUri">
      <summary vsli:raw="Gets the root package URI (&quot;/&quot;) or part &lt;see cref=&quot;P:System.IO.Packaging.PackagePart.Uri&quot; /&gt; specified to the &lt;see cref=&quot;M:System.IO.Packaging.PackageRelationshipSelector.#ctor(System.Uri,System.IO.Packaging.PackageRelationshipSelectorType,System.String)&quot; /&gt; constructor as the owner of the relationship.">获取指定给 <see cref="P:System.IO.Packaging.PackagePart.Uri" /> 构造函数、作为关系所有者的根包 URI ("/") 或部分 <see cref="M:System.IO.Packaging.PackageRelationshipSelector.#ctor(System.Uri,System.IO.Packaging.PackageRelationshipSelectorType,System.String)" />。</summary>
      <returns vsli:raw="The root package URI (&quot;/&quot;) or part &lt;see cref=&quot;P:System.IO.Packaging.PackagePart.Uri&quot; /&gt; specified to the &lt;see cref=&quot;M:System.IO.Packaging.PackageRelationshipSelector.#ctor(System.Uri,System.IO.Packaging.PackageRelationshipSelectorType,System.String)&quot; /&gt; constructor as the owner of the relationship.">指定给 <see cref="P:System.IO.Packaging.PackagePart.Uri" /> 构造函数、作为关系所有者的根包 URI ("/") 或部分 <see cref="M:System.IO.Packaging.PackageRelationshipSelector.#ctor(System.Uri,System.IO.Packaging.PackageRelationshipSelectorType,System.String)" />。</returns>
    </member>
    <member name="T:System.IO.Packaging.PackageRelationshipSelectorType">
      <summary vsli:raw="Specifies the type of selection criteria that is used to match and return &lt;see cref=&quot;T:System.IO.Packaging.PackageRelationship&quot; /&gt; selections through a &lt;see cref=&quot;T:System.IO.Packaging.PackageRelationshipSelector&quot; /&gt;.">指定用于通过 <see cref="T:System.IO.Packaging.PackageRelationship" /> 匹配并返回 <see cref="T:System.IO.Packaging.PackageRelationshipSelector" /> 选择的选择条件的类型。</summary>
    </member>
    <member name="F:System.IO.Packaging.PackageRelationshipSelectorType.Id">
      <summary vsli:raw="&lt;see cref=&quot;T:System.IO.Packaging.PackageRelationship&quot; /&gt; selections are by &lt;see cref=&quot;P:System.IO.Packaging.PackageRelationship.Id&quot; /&gt;.">按 <see cref="T:System.IO.Packaging.PackageRelationship" /> 进行 <see cref="P:System.IO.Packaging.PackageRelationship.Id" /> 选择。</summary>
    </member>
    <member name="F:System.IO.Packaging.PackageRelationshipSelectorType.Type">
      <summary vsli:raw="&lt;see cref=&quot;T:System.IO.Packaging.PackageRelationship&quot; /&gt; selections are by &lt;see cref=&quot;P:System.IO.Packaging.PackageRelationship.RelationshipType&quot; /&gt;.">按 <see cref="T:System.IO.Packaging.PackageRelationship" /> 进行 <see cref="P:System.IO.Packaging.PackageRelationship.RelationshipType" /> 选择。</summary>
    </member>
    <member name="T:System.IO.Packaging.PackUriHelper">
      <summary vsli:raw="Provides utility methods to compose and parse pack URI objects.">提供实用工具方法来撰写和分析 pack URI 对象。</summary>
    </member>
    <member name="F:System.IO.Packaging.PackUriHelper.UriSchemePack">
      <summary vsli:raw="Defines the pack URI scheme name &quot;pack&quot;.">定义 pack URI 方案名称“pack”。</summary>
    </member>
    <member name="M:System.IO.Packaging.PackUriHelper.ComparePackUri(System.Uri,System.Uri)">
      <summary vsli:raw="Returns a value that indicates whether two pack URIs are equivalent.">返回一个值，该值指示两个包 URI 是否等效。</summary>
      <param name="firstPackUri" vsli:raw="The first pack URI.">第一个包 URI。</param>
      <param name="secondPackUri" vsli:raw="The second pack URI.">第二个包 URI。</param>
      <exception cref="T:System.ArgumentException" vsli:raw="Either &lt;paramref name=&quot;firstPackUri&quot; /&gt; or &lt;paramref name=&quot;secondPackUri&quot; /&gt; is not an absolute URI.  &#xA;  &#xA; -or-  &#xA;  &#xA; Either &lt;paramref name=&quot;firstPackUri&quot; /&gt; or &lt;paramref name=&quot;secondPackUri&quot; /&gt; do not begin with a &quot;pack://&quot; scheme.">
        <paramref name="firstPackUri" /> 或 <paramref name="secondPackUri" /> 不是绝对 URI。

- 或 -

<paramref name="firstPackUri" /> 或 <paramref name="secondPackUri" /> 不以“pack://”方案开头。</exception>
      <returns vsli:raw="A signed integer indicating the relationship between &lt;paramref name=&quot;firstPackUri&quot; /&gt; and &lt;paramref name=&quot;secondPackUri&quot; /&gt;.  &#xA;  &#xA; &lt;list type=&quot;table&quot;&gt;&lt;listheader&gt;&lt;term&gt; Value&lt;/term&gt;&lt;description&gt; Meaning&lt;/description&gt;&lt;/listheader&gt;&lt;item&gt;&lt;term&gt; Less than 0&lt;/term&gt;&lt;description&gt;&lt;paramref name=&quot;firstPackUri&quot; /&gt; is less than &lt;paramref name=&quot;secondPackUri&quot; /&gt;.&lt;/description&gt;&lt;/item&gt;&lt;item&gt;&lt;term&gt; 0&lt;/term&gt;&lt;description&gt;&lt;paramref name=&quot;firstPackUri&quot; /&gt; is equivalent to &lt;paramref name=&quot;secondPackUri&quot; /&gt;.&lt;/description&gt;&lt;/item&gt;&lt;item&gt;&lt;term&gt; Greater than 0&lt;/term&gt;&lt;description&gt;&lt;paramref name=&quot;firstPackUri&quot; /&gt; is greater than &lt;paramref name=&quot;secondPackUri&quot; /&gt;.&lt;/description&gt;&lt;/item&gt;&lt;/list&gt;">一个带符号整数，指示 <paramref name="firstPackUri" /> 和 <paramref name="secondPackUri" /> 之间的关系。

 <list type="table"><listheader><term> 值</term><description> 含义</description></listheader><item><term> 小于 0</term><description><paramref name="firstPackUri" /> 小于 <paramref name="secondPackUri" />。</description></item><item><term> 0</term><description><paramref name="firstPackUri" /> 等效于 <paramref name="secondPackUri" />。</description></item><item><term> 大于 0</term><description><paramref name="firstPackUri" /> 大于 <paramref name="secondPackUri" />。</description></item></list></returns>
    </member>
    <member name="M:System.IO.Packaging.PackUriHelper.ComparePartUri(System.Uri,System.Uri)">
      <summary vsli:raw="Returns a value that indicates whether two package part URIs are equivalent.">返回一个值，该值指示两个包部件 URI 是否相等。</summary>
      <param name="firstPartUri" vsli:raw="The URI of the first &lt;see cref=&quot;T:System.IO.Packaging.PackagePart&quot; /&gt;.">第一个 <see cref="T:System.IO.Packaging.PackagePart" /> 的 URI。</param>
      <param name="secondPartUri" vsli:raw="The URI of the second &lt;see cref=&quot;T:System.IO.Packaging.PackagePart&quot; /&gt;.">第二个 <see cref="T:System.IO.Packaging.PackagePart" /> 的 URI。</param>
      <exception cref="T:System.ArgumentException" vsli:raw="&lt;paramref name=&quot;firstPartUri&quot; /&gt; or &lt;paramref name=&quot;secondPartUri&quot; /&gt; is not a valid part URI syntax.">
        <paramref name="firstPartUri" /> 或 <paramref name="secondPartUri" /> 不是有效的部件 URI 语法。</exception>
      <returns vsli:raw="A value that indicates the relationship between &lt;paramref name=&quot;firstPartUri&quot; /&gt; and &lt;paramref name=&quot;secondPartUri&quot; /&gt;.  &#xA;  &#xA; &lt;list type=&quot;table&quot;&gt;&lt;listheader&gt;&lt;term&gt; Value&lt;/term&gt;&lt;description&gt; Meaning&lt;/description&gt;&lt;/listheader&gt;&lt;item&gt;&lt;term&gt; Less than 0&lt;/term&gt;&lt;description&gt;&lt;paramref name=&quot;firstPartUri&quot; /&gt; is less than &lt;paramref name=&quot;secondPartUri&quot; /&gt;.&lt;/description&gt;&lt;/item&gt;&lt;item&gt;&lt;term&gt; 0&lt;/term&gt;&lt;description&gt;&lt;paramref name=&quot;firstPartUri&quot; /&gt; is equivalent to &lt;paramref name=&quot;secondPartUri&quot; /&gt;.&lt;/description&gt;&lt;/item&gt;&lt;item&gt;&lt;term&gt; Greater than 0&lt;/term&gt;&lt;description&gt;&lt;paramref name=&quot;firstPartUri&quot; /&gt; is greater than &lt;paramref name=&quot;secondPartUri&quot; /&gt;.&lt;/description&gt;&lt;/item&gt;&lt;/list&gt;">一个值，指示 <paramref name="firstPartUri" /> 和 <paramref name="secondPartUri" /> 之间的关系。

 <list type="table"><listheader><term> 值</term><description> 含义</description></listheader><item><term> 小于 0</term><description><paramref name="firstPartUri" /> 小于 <paramref name="secondPartUri" />。</description></item><item><term> 0</term><description><paramref name="firstPartUri" /> 等效于 <paramref name="secondPartUri" />。</description></item><item><term> 大于 0</term><description><paramref name="firstPartUri" /> 大于 <paramref name="secondPartUri" />。</description></item></list></returns>
    </member>
    <member name="M:System.IO.Packaging.PackUriHelper.Create(System.Uri)">
      <summary vsli:raw="Creates a new pack URI that points to a package.">创建一个指向包的新包 URI。</summary>
      <param name="packageUri" vsli:raw="The URI of the referenced &lt;see cref=&quot;T:System.IO.Packaging.Package&quot; /&gt;.">引用的 <see cref="T:System.IO.Packaging.Package" /> 的 URI。</param>
      <exception cref="T:System.ArgumentNullException" vsli:raw="&lt;paramref name=&quot;packageUri&quot; /&gt; is &lt;see langword=&quot;null&quot; /&gt;.">
        <paramref name="packageUri" /> 为 <see langword="null" />。</exception>
      <exception cref="T:System.ArgumentException" vsli:raw="&lt;paramref name=&quot;packageUri&quot; /&gt; is not an absolute URI.">
        <paramref name="packageUri" /> 不是绝对 URI。</exception>
      <returns vsli:raw="The pack URI for the &lt;see cref=&quot;T:System.IO.Packaging.Package&quot; /&gt; referenced by the given &lt;paramref name=&quot;packageUri&quot; /&gt;.">由给定的 <paramref name="packageUri" /> 引用的 <see cref="T:System.IO.Packaging.Package" /> 的包 URI。</returns>
    </member>
    <member name="M:System.IO.Packaging.PackUriHelper.Create(System.Uri,System.Uri)">
      <summary vsli:raw="Creates a pack URI given a &lt;see cref=&quot;T:System.IO.Packaging.Package&quot; /&gt; URI and the URI of a part in the package.">在给定 <see cref="T:System.IO.Packaging.Package" /> URI 和包中部件的 URI 的情况下创建包 URI。</summary>
      <param name="packageUri" vsli:raw="The URI of the &lt;see cref=&quot;T:System.IO.Packaging.Package&quot; /&gt;.">
        <see cref="T:System.IO.Packaging.Package" /> 的 URI。</param>
      <param name="partUri" vsli:raw="The URI of the &lt;see cref=&quot;T:System.IO.Packaging.PackagePart&quot; /&gt; in the package.">包中 <see cref="T:System.IO.Packaging.PackagePart" /> 的 URI。</param>
      <exception cref="T:System.ArgumentNullException" vsli:raw="&lt;paramref name=&quot;packageUri&quot; /&gt; is &lt;see langword=&quot;null&quot; /&gt;.">
        <paramref name="packageUri" /> 为 <see langword="null" />。</exception>
      <exception cref="T:System.ArgumentException" vsli:raw="&lt;paramref name=&quot;packageUri&quot; /&gt; is not an absolute URI.  &#xA;  &#xA; -or-  &#xA;  &#xA; &lt;paramref name=&quot;partUri&quot; /&gt; is not a valid part URI syntax.">
        <paramref name="packageUri" /> 不是绝对 URI。

- 或 -

 <paramref name="partUri" /> 不是有效的部件 URI 语法。</exception>
      <returns vsli:raw="The pack URI of the given &lt;see cref=&quot;T:System.IO.Packaging.PackagePart&quot; /&gt;.">给定 <see cref="T:System.IO.Packaging.PackagePart" /> 的包 URI。</returns>
    </member>
    <member name="M:System.IO.Packaging.PackUriHelper.Create(System.Uri,System.Uri,System.String)">
      <summary vsli:raw="Creates a pack URI given a &lt;see cref=&quot;T:System.IO.Packaging.Package&quot; /&gt; URI, the URI of a part in the package, and a &quot;#&quot; fragment to append.">在给定 <see cref="T:System.IO.Packaging.Package" /> URI、包中部件的 URI 以及要追加的“#”片段的情况下创建包 URI。</summary>
      <param name="packageUri" vsli:raw="The URI of the &lt;see cref=&quot;T:System.IO.Packaging.Package&quot; /&gt;.">
        <see cref="T:System.IO.Packaging.Package" /> 的 URI。</param>
      <param name="partUri" vsli:raw="The URI of the &lt;see cref=&quot;T:System.IO.Packaging.PackagePart&quot; /&gt; in the package.">包中 <see cref="T:System.IO.Packaging.PackagePart" /> 的 URI。</param>
      <param name="fragment" vsli:raw="A &quot;#&quot; reference identifying an element within the package part.">标识包部件中的元素的“#”引用。</param>
      <exception cref="T:System.ArgumentNullException" vsli:raw="&lt;paramref name=&quot;packageUri&quot; /&gt; is &lt;see langword=&quot;null&quot; /&gt;.">
        <paramref name="packageUri" /> 为 <see langword="null" />。</exception>
      <exception cref="T:System.ArgumentException" vsli:raw="&lt;paramref name=&quot;packageUri&quot; /&gt; is not an absolute URI.  &#xA;  &#xA; -or-  &#xA;  &#xA; &lt;paramref name=&quot;partUri&quot; /&gt; is not a valid part URI syntax.  &#xA;  &#xA; -or-  &#xA;  &#xA; &lt;paramref name=&quot;fragment&quot; /&gt; is empty or does begin with &quot;#&quot;.">
        <paramref name="packageUri" /> 不是绝对 URI。

- 或 -

 <paramref name="partUri" /> 不是有效的部件 URI 语法。

- 或 -

 <paramref name="fragment" /> 为空或不以“#”开头。</exception>
      <returns vsli:raw="The pack URI that identifies the specified package, package part, and fragment.">标识指定包、包部件和片段的包 URI。</returns>
    </member>
    <member name="M:System.IO.Packaging.PackUriHelper.CreatePartUri(System.Uri)">
      <summary vsli:raw="Creates a formatted &lt;see cref=&quot;T:System.IO.Packaging.PackagePart&quot; /&gt; URI.">创建格式化的 <see cref="T:System.IO.Packaging.PackagePart" /> URI。</summary>
      <param name="partUri" vsli:raw="The URI of the &lt;see cref=&quot;T:System.IO.Packaging.PackagePart&quot; /&gt; within the package.">包中 <see cref="T:System.IO.Packaging.PackagePart" /> 的 URI。</param>
      <exception cref="T:System.ArgumentNullException" vsli:raw="&lt;paramref name=&quot;partUri&quot; /&gt; is &lt;see langword=&quot;null&quot; /&gt;.">
        <paramref name="partUri" /> 为 <see langword="null" />。</exception>
      <exception cref="T:System.ArgumentException" vsli:raw="&lt;paramref name=&quot;partUri&quot; /&gt; is not an absolute &lt;see cref=&quot;T:System.Uri&quot; /&gt;.">
        <paramref name="partUri" /> 不是绝对 <see cref="T:System.Uri" />。</exception>
      <returns vsli:raw="A formatted &lt;see cref=&quot;T:System.IO.Packaging.PackagePart&quot; /&gt; URI.">格式化的 <see cref="T:System.IO.Packaging.PackagePart" /> URI。</returns>
    </member>
    <member name="M:System.IO.Packaging.PackUriHelper.GetNormalizedPartUri(System.Uri)">
      <summary vsli:raw="Returns the normalized form of a specified &lt;see cref=&quot;T:System.IO.Packaging.PackagePart&quot; /&gt; URI.">返回指定 <see cref="T:System.IO.Packaging.PackagePart" /> URI 的规范化形式。</summary>
      <param name="partUri" vsli:raw="The &lt;see cref=&quot;T:System.IO.Packaging.PackagePart&quot; /&gt; URI to normalize.">要规范化的 <see cref="T:System.IO.Packaging.PackagePart" /> URI。</param>
      <exception cref="T:System.ArgumentNullException" vsli:raw="&lt;paramref name=&quot;partUri&quot; /&gt; is &lt;see langword=&quot;null&quot; /&gt;.">
        <paramref name="partUri" /> 为 <see langword="null" />。</exception>
      <exception cref="T:System.ArgumentException" vsli:raw="&lt;paramref name=&quot;partUri&quot; /&gt; does not have a valid &lt;see cref=&quot;T:System.Uri&quot; /&gt; syntax.">
        <paramref name="partUri" /> 没有有效的 <see cref="T:System.Uri" /> 语法。</exception>
      <returns vsli:raw="The normalized form of the given &lt;paramref name=&quot;partUri&quot; /&gt;.">给定 <paramref name="partUri" /> 的规范化形式。</returns>
    </member>
    <member name="M:System.IO.Packaging.PackUriHelper.GetPackageUri(System.Uri)">
      <summary vsli:raw="Returns the inner URI that points to the entire package of a specified pack URI.">返回指向所指定包 URI 的整个程序包的内部 URI。</summary>
      <param name="packUri" vsli:raw="The pack URI from which to return the URI of the &lt;see cref=&quot;T:System.IO.Packaging.Package&quot; /&gt;.">从中返回 <see cref="T:System.IO.Packaging.Package" /> URI 的包 URI。</param>
      <exception cref="T:System.ArgumentNullException" vsli:raw="&lt;paramref name=&quot;packUri&quot; /&gt; is &lt;see langword=&quot;null&quot; /&gt;.">
        <paramref name="packUri" /> 为 <see langword="null" />。</exception>
      <exception cref="T:System.ArgumentException" vsli:raw="&lt;paramref name=&quot;packUri&quot; /&gt; is not an absolute &lt;see cref=&quot;T:System.Uri&quot; /&gt;.">
        <paramref name="packUri" /> 不是绝对 <see cref="T:System.Uri" />。</exception>
      <returns vsli:raw="The URI of the &lt;see cref=&quot;T:System.IO.Packaging.Package&quot; /&gt; from the specified &lt;paramref name=&quot;packUri&quot; /&gt;.">来自指定 <paramref name="packUri" /> 的 <see cref="T:System.IO.Packaging.Package" /> 的 URI。</returns>
    </member>
    <member name="M:System.IO.Packaging.PackUriHelper.GetPartUri(System.Uri)">
      <summary vsli:raw="Returns the URI of a &lt;see cref=&quot;T:System.IO.Packaging.PackagePart&quot; /&gt; within a specified pack URI.">返回指定包 URI 内的 <see cref="T:System.IO.Packaging.PackagePart" /> 的 URI。</summary>
      <param name="packUri" vsli:raw="The pack URI from which to return the &lt;see cref=&quot;T:System.IO.Packaging.PackagePart&quot; /&gt; URI.">从中返回 <see cref="T:System.IO.Packaging.PackagePart" /> URI 的包 URI。</param>
      <exception cref="T:System.ArgumentNullException" vsli:raw="If the &lt;paramref name=&quot;packUri&quot; /&gt; is &lt;see langword=&quot;null&quot; /&gt;.">如果 <paramref name="packUri" /> 为 <see langword="null" />。</exception>
      <exception cref="T:System.ArgumentException" vsli:raw="If the &lt;paramref name=&quot;packUri&quot; /&gt; is not an absolute &lt;see cref=&quot;T:System.Uri&quot; /&gt;.&#xA;&#xA;-or-&#xA;&#xA;&lt;paramref name=&quot;packUri&quot; /&gt; does not have the &quot;pack://&quot; scheme.&#xA;          &#xA;-or-&#xA;          &#xA;The partUri extracted from &lt;paramref name=&quot;packUri&quot; /&gt; does not conform to the valid partUri syntax.">如果 <paramref name="packUri" /> 不是绝对 <see cref="T:System.Uri" />。

- 或 -

<paramref name="packUri" /> 不具有“pack://”方案。

- 或 -

从 <paramref name="packUri" /> 中提取的 partUri 不符合有效 partUri 语法。</exception>
      <returns vsli:raw="The URI of the &lt;see cref=&quot;T:System.IO.Packaging.PackagePart&quot; /&gt; in the given &lt;paramref name=&quot;packUri&quot; /&gt;, or &lt;see langword=&quot;null&quot; /&gt; if &lt;paramref name=&quot;packUri&quot; /&gt; points to a package instead of a &lt;see cref=&quot;T:System.IO.Packaging.PackagePart&quot; /&gt;.">给定 <paramref name="packUri" /> 中 <see cref="T:System.IO.Packaging.PackagePart" /> 的 URI，如果 <paramref name="packUri" /> 指向包而不是 <see cref="T:System.IO.Packaging.PackagePart" />，则为 <see langword="null" />。</returns>
    </member>
    <member name="M:System.IO.Packaging.PackUriHelper.GetRelationshipPartUri(System.Uri)">
      <summary vsli:raw="Returns the URI of the relationship part associated with a specified &lt;see cref=&quot;T:System.IO.Packaging.PackagePart&quot; /&gt;.">返回与指定的 <see cref="T:System.IO.Packaging.PackagePart" /> 关联的关系部件的 URI。</summary>
      <param name="partUri" vsli:raw="The &lt;see cref=&quot;P:System.IO.Packaging.PackagePart.Uri&quot; /&gt; of the &lt;see cref=&quot;T:System.IO.Packaging.PackagePart&quot; /&gt; to return the URI for the associated &lt;see cref=&quot;T:System.IO.Packaging.PackageRelationship&quot; /&gt;.">要返回关联 <see cref="P:System.IO.Packaging.PackagePart.Uri" /> 的 URI 的 <see cref="T:System.IO.Packaging.PackagePart" /> 的 <see cref="T:System.IO.Packaging.PackageRelationship" />。</param>
      <exception cref="T:System.ArgumentNullException" vsli:raw="&lt;paramref name=&quot;partUri&quot; /&gt; is &lt;see langword=&quot;null&quot; /&gt;.">
        <paramref name="partUri" /> 为 <see langword="null" />。</exception>
      <exception cref="T:System.ArgumentException" vsli:raw="&lt;paramref name=&quot;partUri&quot; /&gt; syntax is not valid for a package part URI.  &#xA;  &#xA; -or-  &#xA;  &#xA; &lt;paramref name=&quot;partUri&quot; /&gt; is an absolute URI.  &#xA;  &#xA; -or-  &#xA;  &#xA; &lt;paramref name=&quot;partUri&quot; /&gt; references a relationship part.">
        <paramref name="partUri" /> 语法对于包部件 URI 无效。

- 或 -

 <paramref name="partUri" /> 为绝对 URI。

- 或 -

 <paramref name="partUri" /> 引用关系部件。</exception>
      <returns vsli:raw="The URI of the &lt;see cref=&quot;T:System.IO.Packaging.PackageRelationship&quot; /&gt; part associated with the &lt;see cref=&quot;T:System.IO.Packaging.PackagePart&quot; /&gt; identified by &lt;paramref name=&quot;partUri&quot; /&gt;.">与由 <paramref name="partUri" /> 标识的 <see cref="T:System.IO.Packaging.PackageRelationship" /> 关联的 <see cref="T:System.IO.Packaging.PackagePart" /> 部件的 URI。</returns>
    </member>
    <member name="M:System.IO.Packaging.PackUriHelper.GetRelativeUri(System.Uri,System.Uri)">
      <summary vsli:raw="Returns the relative URI between two specified &lt;see cref=&quot;T:System.IO.Packaging.PackagePart&quot; /&gt; URIs.">返回两个指定的 <see cref="T:System.IO.Packaging.PackagePart" /> URI 之间的相对 URI。</summary>
      <param name="sourcePartUri" vsli:raw="The URI of the source part.">源部件的 URI。</param>
      <param name="targetPartUri" vsli:raw="The URI of the target part.">目标部件的 URI。</param>
      <exception cref="T:System.ArgumentNullException" vsli:raw="&lt;paramref name=&quot;sourcePartUri&quot; /&gt; or &lt;paramref name=&quot;targetPartUri&quot; /&gt; is &lt;see langword=&quot;null&quot; /&gt;.">
        <paramref name="sourcePartUri" /> 或 <paramref name="targetPartUri" /> 为 <see langword="null" />。</exception>
      <exception cref="T:System.ArgumentException" vsli:raw="Either the &lt;paramref name=&quot;sourcePartUri&quot; /&gt; or &lt;paramref name=&quot;targetPartUri&quot; /&gt; does not have a valid &lt;see cref=&quot;T:System.Uri&quot; /&gt; syntax.">
        <paramref name="sourcePartUri" /> 或 <paramref name="targetPartUri" /> 没有有效的 <see cref="T:System.Uri" /> 语法。</exception>
      <returns vsli:raw="The relative URI from &lt;paramref name=&quot;sourcePartUri&quot; /&gt; to &lt;paramref name=&quot;targetPartUri&quot; /&gt;.">从 <paramref name="sourcePartUri" /> 到 <paramref name="targetPartUri" /> 的相对 URI。</returns>
    </member>
    <member name="M:System.IO.Packaging.PackUriHelper.GetSourcePartUriFromRelationshipPartUri(System.Uri)">
      <summary vsli:raw="Returns the &lt;see cref=&quot;P:System.IO.Packaging.PackageRelationship.SourceUri&quot; /&gt; from the &lt;see cref=&quot;T:System.IO.Packaging.PackageRelationship&quot; /&gt; with a specified URI.">使用指定的 URI 从 <see cref="P:System.IO.Packaging.PackageRelationship.SourceUri" /> 中返回 <see cref="T:System.IO.Packaging.PackageRelationship" />。</summary>
      <param name="relationshipPartUri" vsli:raw="The URI of the relationship part to return the &lt;see cref=&quot;P:System.IO.Packaging.PackageRelationship.SourceUri&quot; /&gt; from.">要从中返回 <see cref="P:System.IO.Packaging.PackageRelationship.SourceUri" /> 的关系部件的 URI。</param>
      <exception cref="T:System.ArgumentNullException" vsli:raw="&lt;paramref name=&quot;relationshipPartUri&quot; /&gt; is &lt;see langword=&quot;null&quot; /&gt;.">
        <paramref name="relationshipPartUri" /> 为 <see langword="null" />。</exception>
      <exception cref="T:System.ArgumentException" vsli:raw="&lt;paramref name=&quot;relationshipPartUri&quot; /&gt; is an absolute URI.  &#xA;  &#xA; -or-  &#xA;  &#xA; &lt;paramref name=&quot;relationshipPartUri&quot; /&gt; syntax is not valid for a &lt;see cref=&quot;T:System.IO.Packaging.PackagePart&quot; /&gt;.  &#xA;  &#xA; -or-  &#xA;  &#xA; &lt;paramref name=&quot;relationshipPartUri&quot; /&gt; does not reference a relationship part.  &#xA;  &#xA; -or-  &#xA;  &#xA; The &lt;see cref=&quot;P:System.IO.Packaging.PackageRelationship.SourceUri&quot; /&gt; of the relationship part references another relationship part (not valid).">
        <paramref name="relationshipPartUri" /> 为绝对 URI。

- 或 -

 <paramref name="relationshipPartUri" /> 语法对于 <see cref="T:System.IO.Packaging.PackagePart" /> 无效。

- 或 -

 <paramref name="relationshipPartUri" /> 不引用关系部件。

- 或 -

关系部件的 <see cref="P:System.IO.Packaging.PackageRelationship.SourceUri" /> 会引用其他关系部件（无效）。</exception>
      <returns vsli:raw="The &lt;see cref=&quot;P:System.IO.Packaging.PackageRelationship.SourceUri&quot; /&gt; of the &lt;see cref=&quot;T:System.IO.Packaging.PackagePart&quot; /&gt; from the relationship with the specified &lt;paramref name=&quot;relationshipPartUri&quot; /&gt;.">来自于具有指定 <paramref name="relationshipPartUri" /> 的关系的 <see cref="P:System.IO.Packaging.PackageRelationship.SourceUri" /> 的 <see cref="T:System.IO.Packaging.PackagePart" />。</returns>
    </member>
    <member name="M:System.IO.Packaging.PackUriHelper.IsRelationshipPartUri(System.Uri)">
      <summary vsli:raw="Returns a value that indicates whether a specified URI is the URI of a &lt;see cref=&quot;T:System.IO.Packaging.PackageRelationship&quot; /&gt; part.">返回一个值，它指示指定的 URI 是否为 <see cref="T:System.IO.Packaging.PackageRelationship" /> 部件的 URI。</summary>
      <param name="partUri" vsli:raw="The URI to check for a &lt;see cref=&quot;T:System.IO.Packaging.PackageRelationship&quot; /&gt; part.">用于检查 <see cref="T:System.IO.Packaging.PackageRelationship" /> 部件的 URI。</param>
      <exception cref="T:System.ArgumentNullException" vsli:raw="&lt;paramref name=&quot;partUri&quot; /&gt; is &lt;see langword=&quot;null&quot; /&gt;.">
        <paramref name="partUri" /> 为 <see langword="null" />。</exception>
      <exception cref="T:System.ArgumentException" vsli:raw="&lt;paramref name=&quot;partUri&quot; /&gt; is an absolute URI.  &#xA;  &#xA; -or-  &#xA;  &#xA; &lt;paramref name=&quot;partUri&quot; /&gt; is an invalid &lt;see cref=&quot;T:System.IO.Packaging.PackagePart&quot; /&gt; syntax.">
        <paramref name="partUri" /> 为绝对 URI。

- 或 -

 <paramref name="partUri" /> 是无效的 <see cref="T:System.IO.Packaging.PackagePart" /> 语法。</exception>
      <returns vsli:raw="&lt;see langword=&quot;true&quot; /&gt; if &lt;paramref name=&quot;partUri&quot; /&gt; identifies a &lt;see cref=&quot;T:System.IO.Packaging.PackageRelationship&quot; /&gt; part; otherwise, &lt;see langword=&quot;false&quot; /&gt;.">如果 <paramref name="partUri" /> 标识 <see cref="T:System.IO.Packaging.PackageRelationship" /> 部件，则为 <see langword="true" />；否则为 <see langword="false" />。</returns>
    </member>
    <member name="M:System.IO.Packaging.PackUriHelper.ResolvePartUri(System.Uri,System.Uri)">
      <summary vsli:raw="Returns a part URI given a source part URI and a URI with a relative path to a target part.">返回部件 URI，给定源部件 URI 和带有指向目标部件的相对路径的 URI。</summary>
      <param name="sourcePartUri" vsli:raw="The URI of the source part, or &quot;/&quot; to designate the &lt;see cref=&quot;T:System.IO.Packaging.Package&quot; /&gt; root.">源部件的 URI，或指定 <see cref="T:System.IO.Packaging.Package" /> 根的“/”。</param>
      <param name="targetUri" vsli:raw="The relative URI to the target part.">到目标部件的相对 URI。</param>
      <exception cref="T:System.ArgumentNullException" vsli:raw="&lt;paramref name=&quot;sourcePartUri&quot; /&gt; or &lt;paramref name=&quot;targetUri&quot; /&gt; is &lt;see langword=&quot;null&quot; /&gt;.">
        <paramref name="sourcePartUri" /> 或 <paramref name="targetUri" /> 为 <see langword="null" />。</exception>
      <exception cref="T:System.ArgumentException" vsli:raw="&lt;paramref name=&quot;sourcePartUri&quot; /&gt; is not a valid part URI.  &#xA;  &#xA; -or-  &#xA;  &#xA; &lt;paramref name=&quot;targetUri&quot; /&gt; is not a valid relative URI.">
        <paramref name="sourcePartUri" /> 不是有效的部件 URI。

- 或 -

 <paramref name="targetUri" /> 不是有效的相对 URI。</exception>
      <returns vsli:raw="The URI of the target part resolved between the specified &lt;paramref name=&quot;SourcePartUri&quot; /&gt; and the &lt;paramref name=&quot;targetUri&quot; /&gt; parameters.">指定 <paramref name="SourcePartUri" /> 和 <paramref name="targetUri" /> 参数之间解析的目标部件的 URI。</returns>
    </member>
    <member name="T:System.IO.Packaging.TargetMode">
      <summary vsli:raw="Specifies whether the target of a &lt;see cref=&quot;T:System.IO.Packaging.PackageRelationship&quot; /&gt; is inside or outside the &lt;see cref=&quot;T:System.IO.Packaging.Package&quot; /&gt;.">指定 <see cref="T:System.IO.Packaging.PackageRelationship" /> 的目标是在 <see cref="T:System.IO.Packaging.Package" /> 的内部还是外部。</summary>
    </member>
    <member name="F:System.IO.Packaging.TargetMode.External">
      <summary vsli:raw="The relationship references a resource that is external to the package.">关系引用包外部的资源。</summary>
    </member>
    <member name="F:System.IO.Packaging.TargetMode.Internal">
      <summary vsli:raw="The relationship references a part that is inside the package.">关系引用包内部的部分。</summary>
    </member>
    <member name="T:System.IO.Packaging.ZipPackage">
      <summary vsli:raw="Implements a derived subclass of the abstract &lt;see cref=&quot;T:System.IO.Packaging.Package&quot; /&gt; base class - the &lt;see cref=&quot;T:System.IO.Packaging.ZipPackage&quot; /&gt; class uses a ZIP archive as the container store. This class cannot be inherited.">实现抽象 <see cref="T:System.IO.Packaging.Package" /> 基类的派生子类 - <see cref="T:System.IO.Packaging.ZipPackage" /> 类将 ZIP 存档用作容器存储。 此类不能被继承。</summary>
    </member>
    <member name="T:System.IO.Packaging.ZipPackagePart">
      <summary vsli:raw="Represents a part that is stored in a &lt;see cref=&quot;T:System.IO.Packaging.ZipPackage&quot; /&gt;.">表示存储在 <see cref="T:System.IO.Packaging.ZipPackage" /> 中的部分。</summary>
    </member>
  </members>
</doc>