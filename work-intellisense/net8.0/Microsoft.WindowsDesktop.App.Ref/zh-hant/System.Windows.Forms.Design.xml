<?xml version="1.0" encoding="utf-8"?>
<doc xmlns:vsli="https://github.com/sk-0520/vs-localized-intellisense/tree/master/schema/2024">
  <assembly>
    <name>System.Windows.Forms.Design</name>
  </assembly>
  <members>
    <member name="T:System.ComponentModel.Design.ActiveDesignSurfaceChangedEventArgs">
      <summary vsli:raw="Provides data for the &lt;see cref=&quot;E:System.ComponentModel.Design.DesignSurfaceManager.ActiveDesignSurfaceChanged&quot; /&gt; event.">提供 <see cref="E:System.ComponentModel.Design.DesignSurfaceManager.ActiveDesignSurfaceChanged" /> 事件的資料。</summary>
    </member>
    <member name="M:System.ComponentModel.Design.ActiveDesignSurfaceChangedEventArgs.#ctor(System.ComponentModel.Design.DesignSurface,System.ComponentModel.Design.DesignSurface)">
      <summary vsli:raw="Initializes a new instance of the &lt;see cref=&quot;T:System.ComponentModel.Design.ActiveDesignSurfaceChangedEventArgs&quot; /&gt; class.">初始化 <see cref="T:System.ComponentModel.Design.ActiveDesignSurfaceChangedEventArgs" /> 類別的新執行個體。</summary>
      <param name="oldSurface" vsli:raw="The design surface that is losing activation.">正失去啟動過程的設計介面。</param>
      <param name="newSurface" vsli:raw="The design surface that is gaining activation.">正獲得啟動過程的設計介面。</param>
    </member>
    <member name="P:System.ComponentModel.Design.ActiveDesignSurfaceChangedEventArgs.NewSurface">
      <summary vsli:raw="Gets the design surface that is gaining activation.">取得正獲得啟動過程的設計介面。</summary>
      <returns vsli:raw="A &lt;see cref=&quot;T:System.ComponentModel.Design.DesignSurface&quot; /&gt; that is gaining activation.">獲得啟動過程的 <see cref="T:System.ComponentModel.Design.DesignSurface" />。</returns>
    </member>
    <member name="P:System.ComponentModel.Design.ActiveDesignSurfaceChangedEventArgs.OldSurface">
      <summary vsli:raw="Gets the design surface that is losing activation.">取得正失去啟動過程的設計介面。</summary>
      <returns vsli:raw="A &lt;see cref=&quot;T:System.ComponentModel.Design.DesignSurface&quot; /&gt; that is losing activation.">失去啟動過程的 <see cref="T:System.ComponentModel.Design.DesignSurface" />。</returns>
    </member>
    <member name="T:System.ComponentModel.Design.ActiveDesignSurfaceChangedEventHandler">
      <summary vsli:raw="Represents the method that will handle the &lt;see cref=&quot;E:System.ComponentModel.Design.DesignSurfaceManager.ActiveDesignSurfaceChanged&quot; /&gt; event of a &lt;see cref=&quot;T:System.ComponentModel.Design.DesignSurfaceManager&quot; /&gt;. This class cannot be inherited.">代表將處理 <see cref="E:System.ComponentModel.Design.DesignSurfaceManager.ActiveDesignSurfaceChanged" /> 之 <see cref="T:System.ComponentModel.Design.DesignSurfaceManager" /> 事件的方法。 此類別無法獲得繼承。</summary>
      <param name="sender" vsli:raw="The source of the event, the &lt;see cref=&quot;T:System.ComponentModel.Design.DesignSurfaceManager&quot; /&gt;.">事件的來源：<see cref="T:System.ComponentModel.Design.DesignSurfaceManager" />。</param>
      <param name="e" vsli:raw="An &lt;see cref=&quot;T:System.ComponentModel.Design.ActiveDesignSurfaceChangedEventArgs&quot; /&gt; that contains the event data.">包含事件資料的 <see cref="T:System.ComponentModel.Design.ActiveDesignSurfaceChangedEventArgs" />。</param>
    </member>
    <member name="T:System.ComponentModel.Design.ArrayEditor">
      <summary vsli:raw="Provides a user interface for editing arrays at design time.">提供設計階段編輯陣列的使用者介面。</summary>
    </member>
    <member name="M:System.ComponentModel.Design.ArrayEditor.#ctor(System.Type)">
      <summary vsli:raw="Initializes a new instance of &lt;see cref=&quot;T:System.ComponentModel.Design.ArrayEditor&quot; /&gt; using the specified data type for the array.">使用指定的陣列資料型別，初始化 <see cref="T:System.ComponentModel.Design.ArrayEditor" /> 的新執行個體。</summary>
      <param name="type" vsli:raw="The data type of the items in the array.">陣列中項目的資料型別。</param>
    </member>
    <member name="M:System.ComponentModel.Design.ArrayEditor.CreateCollectionItemType">
      <summary vsli:raw="Gets the data type that this collection is designed to contain.">取得這個集合要用於包含的資料型別。</summary>
      <returns vsli:raw="A &lt;see cref=&quot;T:System.Type&quot; /&gt; that indicates the data type that the collection is designed to contain.">
        <see cref="T:System.Type" />，表示集合要用於包含的資料型別。</returns>
    </member>
    <member name="M:System.ComponentModel.Design.ArrayEditor.GetItems(System.Object)">
      <summary vsli:raw="Gets the items in the array.">取得陣列中的項目。</summary>
      <param name="editValue" vsli:raw="The array from which to retrieve the items.">要擷取項目的來源陣列。</param>
      <returns vsli:raw="An array consisting of the items within the specified array. If the object specified in the &lt;paramref name=&quot;editValue&quot; /&gt; parameter is not an array, a new empty object is returned.">陣列，由指定陣列中的項目所組成。 如果 <paramref name="editValue" /> 參數中所指定的物件不是陣列，則會傳回新的空物件。</returns>
    </member>
    <member name="M:System.ComponentModel.Design.ArrayEditor.SetItems(System.Object,System.Object[])">
      <summary vsli:raw="Sets the items in the array.">設定陣列中的項目。</summary>
      <param name="editValue" vsli:raw="The array to set the items to.">要設定項目的目標陣列。</param>
      <param name="value" vsli:raw="The array of objects to set as the items of the array.">要設定為陣列項目的物件陣列。</param>
      <returns vsli:raw="An instance of the new array. If the object specified by the &lt;paramref name=&quot;editValue&quot; /&gt; parameter is not an array, the object specified by the &lt;paramref name=&quot;editValue&quot; /&gt; parameter is returned.">新陣列的執行個體。 如果 <paramref name="editValue" /> 參數所指定的物件不是陣列，則會傳回 <paramref name="editValue" /> 參數所指定的物件。</returns>
    </member>
    <member name="T:System.ComponentModel.Design.BinaryEditor">
      <summary vsli:raw="Provides a user interface for editing binary data.">提供使用者介面以編輯二進位資料。</summary>
    </member>
    <member name="M:System.ComponentModel.Design.BinaryEditor.#ctor">
      <summary vsli:raw="Initializes a new instance of the &lt;see cref=&quot;T:System.ComponentModel.Design.BinaryEditor&quot; /&gt; class.">初始化 <see cref="T:System.ComponentModel.Design.BinaryEditor" /> 類別的新執行個體。</summary>
    </member>
    <member name="M:System.ComponentModel.Design.BinaryEditor.EditValue(System.ComponentModel.ITypeDescriptorContext,System.IServiceProvider,System.Object)">
      <summary vsli:raw="Edits the value of the specified object using the specified service provider and context.">使用指定服務提供者和內容，編輯指定物件的值。</summary>
      <param name="context" vsli:raw="An &lt;see cref=&quot;T:System.ComponentModel.ITypeDescriptorContext&quot; /&gt; that can be used to gain additional context information.">
        <see cref="T:System.ComponentModel.ITypeDescriptorContext" />，可用來取得額外的內容資訊。</param>
      <param name="provider" vsli:raw="A service provider object through which editing services may be obtained.">服務提供者物件，可透過它編輯所取得的服務。</param>
      <param name="value" vsli:raw="The object to edit the value of.">要編輯其值的物件。</param>
      <returns vsli:raw="The new value of the object. If the value of the object hasn't changed, this should return the same object it was passed.">物件的新值。 如果物件的值未經變更，這應該會傳回與它之前所傳遞者相同的物件。</returns>
    </member>
    <member name="M:System.ComponentModel.Design.BinaryEditor.GetEditStyle(System.ComponentModel.ITypeDescriptorContext)">
      <summary vsli:raw="Gets the editor style used by the &lt;xref data-throw-if-not-resolved=&quot;true&quot; uid=&quot;System.ComponentModel.Design.BinaryEditor.EditValue(System.ComponentModel.ITypeDescriptorContext,System.IServiceProvider,System.Object)&quot;&gt;&lt;/xref&gt; method.">取得 <see cref="M:System.ComponentModel.Design.BinaryEditor.EditValue(System.ComponentModel.ITypeDescriptorContext,System.IServiceProvider,System.Object)" /> 方法所使用的編輯器樣式。</summary>
      <param name="context" vsli:raw="An &lt;xref data-throw-if-not-resolved=&quot;true&quot; uid=&quot;System.ComponentModel.ITypeDescriptorContext&quot;&gt;&lt;/xref&gt; that can be used to gain additional context information.">
        <see cref="T:System.ComponentModel.ITypeDescriptorContext" />，可用來取得額外的內容資訊。</param>
      <returns vsli:raw="An &lt;code data-dev-comment-type=&quot;langword&quot;&gt;enum&lt;/code&gt; value indicating the provided editing style.">
        <see langword="enum" /> 值，表示所提供的編輯樣式。</returns>
    </member>
    <member name="T:System.ComponentModel.Design.ByteViewer">
      <summary vsli:raw="Displays byte arrays in hexadecimal, ANSI, and Unicode formats.">以十六進位、ANSI 和 Unicode 格式顯示位元組陣列。</summary>
    </member>
    <member name="M:System.ComponentModel.Design.ByteViewer.#ctor">
      <summary vsli:raw="Initializes a new instance of the &lt;see cref=&quot;T:System.ComponentModel.Design.ByteViewer&quot; /&gt; class.">初始化 <see cref="T:System.ComponentModel.Design.ByteViewer" /> 類別的新執行個體。</summary>
    </member>
    <member name="M:System.ComponentModel.Design.ByteViewer.GetBytes">
      <summary vsli:raw="Gets the bytes in the buffer.">取得緩衝區中的位元組。</summary>
      <returns vsli:raw="The unsigned byte array reference.">不帶正負號的位元組陣列參考。</returns>
    </member>
    <member name="M:System.ComponentModel.Design.ByteViewer.GetDisplayMode">
      <summary vsli:raw="Gets the display mode for the control.">取得控制項的顯示模式。</summary>
      <returns vsli:raw="The display mode that this control uses. The returned value is defined in &lt;see cref=&quot;T:System.ComponentModel.Design.DisplayMode&quot; /&gt;.">這個控制項所使用的顯示模式。 傳回值定義於 <see cref="T:System.ComponentModel.Design.DisplayMode" /> 中。</returns>
    </member>
    <member name="M:System.ComponentModel.Design.ByteViewer.OnKeyDown(System.Windows.Forms.KeyEventArgs)">
      <summary vsli:raw="Raises the &lt;see cref=&quot;E:System.Windows.Forms.Control.KeyDown&quot; /&gt; event.">引發 <see cref="E:System.Windows.Forms.Control.KeyDown" /> 事件。</summary>
      <param name="e" vsli:raw="A &lt;see cref=&quot;T:System.Windows.Forms.KeyEventArgs&quot; /&gt; that contains the event data.">
        <see cref="T:System.Windows.Forms.KeyEventArgs" />，其中包含事件資料。</param>
    </member>
    <member name="M:System.ComponentModel.Design.ByteViewer.OnLayout(System.Windows.Forms.LayoutEventArgs)">
      <summary vsli:raw="Raises the &lt;see cref=&quot;E:System.Windows.Forms.Control.Layout&quot; /&gt; event.">引發 <see cref="E:System.Windows.Forms.Control.Layout" /> 事件。</summary>
      <param name="e" vsli:raw="A &lt;see cref=&quot;T:System.Windows.Forms.LayoutEventArgs&quot; /&gt; that contains the event data.">
        <see cref="T:System.Windows.Forms.LayoutEventArgs" />，其中包含事件資料。</param>
    </member>
    <member name="M:System.ComponentModel.Design.ByteViewer.OnPaint(System.Windows.Forms.PaintEventArgs)">
      <summary vsli:raw="Raises the &lt;see cref=&quot;E:System.Windows.Forms.Control.Paint&quot; /&gt; event.">引發 <see cref="E:System.Windows.Forms.Control.Paint" /> 事件。</summary>
      <param name="e" vsli:raw="A &lt;see cref=&quot;T:System.Windows.Forms.PaintEventArgs&quot; /&gt; that contains the event data.">
        <see cref="T:System.Windows.Forms.PaintEventArgs" />，其中包含事件資料。</param>
    </member>
    <member name="M:System.ComponentModel.Design.ByteViewer.SaveToFile(System.String)">
      <summary vsli:raw="Writes the raw data from the data buffer to a file.">將未經處理資料 (Raw Data) 從資料緩衝區寫入檔案。</summary>
      <param name="path" vsli:raw="The file path to save to.">要儲存至的檔案路徑。</param>
      <exception cref="T:System.ArgumentNullException" vsli:raw="&lt;paramref name=&quot;path&quot; /&gt; is &lt;see langword=&quot;null&quot; /&gt;.">
        <paramref name="path" /> 為 <see langword="null" />。</exception>
      <exception cref="T:System.ArgumentException" vsli:raw="&lt;paramref name=&quot;path&quot; /&gt; is an empty string (&quot;&quot;), contains only white space, or contains one or more invalid characters.">
        <paramref name="path" /> 為空字串 ("")，只包含空格或包含一或多個無效字元。</exception>
      <exception cref="T:System.IO.DirectoryNotFoundException" vsli:raw="The specified path is invalid, such as being on an unmapped drive.">指定的路徑無效，例如位於未對應的磁碟機上。</exception>
      <exception cref="T:System.IO.IOException" vsli:raw="The file write failed.">檔案寫入失敗。</exception>
      <exception cref="T:System.IO.PathTooLongException" vsli:raw="The specified path, file name, or both exceed the system-defined maximum length.">指定的路徑、檔案名稱，或兩者都超出系統定義的長度上限。</exception>
      <exception cref="T:System.UnauthorizedAccessException" vsli:raw="The access requested is not permitted by the operating system for the specified &lt;paramref name=&quot;path&quot; /&gt;, such as when access is &lt;see langword=&quot;Write&quot; /&gt; or &lt;see langword=&quot;ReadWrite&quot; /&gt; and the file or directory is set for read-only access.">指定之 <paramref name="path" /> 的作業系統不允許所要求的存取，例如，當存取為 <see langword="Write" /> 或 <see langword="ReadWrite" />，且檔案或目錄設定為唯讀存取時。</exception>
    </member>
    <member name="M:System.ComponentModel.Design.ByteViewer.ScrollChanged(System.Object,System.EventArgs)">
      <summary vsli:raw="Handles the &lt;see cref=&quot;E:System.Windows.Forms.ScrollBar.ValueChanged&quot; /&gt; event on the &lt;see cref=&quot;T:System.ComponentModel.Design.ByteViewer&quot; /&gt; control's &lt;see cref=&quot;T:System.Windows.Forms.ScrollBar&quot; /&gt;.">處理 <see cref="E:System.Windows.Forms.ScrollBar.ValueChanged" /> 控制項的 <see cref="T:System.ComponentModel.Design.ByteViewer" /> 上的 <see cref="T:System.Windows.Forms.ScrollBar" /> 事件。</summary>
      <param name="source" vsli:raw="The source of the event.">事件的來源。</param>
      <param name="e" vsli:raw="A &lt;see cref=&quot;T:System.EventArgs&quot; /&gt; that contains the event data.">
        <see cref="T:System.EventArgs" />，其中包含事件資料。</param>
    </member>
    <member name="M:System.ComponentModel.Design.ByteViewer.SetBytes(System.Byte[])">
      <summary vsli:raw="Sets the byte array to display in the viewer.">設定檢視器中要顯示的位元組陣列。</summary>
      <param name="bytes" vsli:raw="The byte array to display.">要顯示的位元組陣列。</param>
      <exception cref="T:System.ArgumentNullException" vsli:raw="The specified byte array is &lt;see langword=&quot;null&quot; /&gt;.">所指定的位元組陣列為 <see langword="null" />。</exception>
    </member>
    <member name="M:System.ComponentModel.Design.ByteViewer.SetDisplayMode(System.ComponentModel.Design.DisplayMode)">
      <summary vsli:raw="Sets the current display mode.">設定目前的顯示模式。</summary>
      <param name="mode" vsli:raw="The display mode to set.">要設定的顯示模式。</param>
      <exception cref="T:System.ComponentModel.InvalidEnumArgumentException" vsli:raw="The specified display mode is not from the &lt;see cref=&quot;T:System.ComponentModel.Design.DisplayMode&quot; /&gt; enumeration.">指定的顯示模式不是來自 <see cref="T:System.ComponentModel.Design.DisplayMode" /> 列舉型別。</exception>
    </member>
    <member name="M:System.ComponentModel.Design.ByteViewer.SetFile(System.String)">
      <summary vsli:raw="Sets the file to display in the viewer.">設定在檢視器中要顯示的檔案。</summary>
      <param name="path" vsli:raw="The file path to load from.">要載入的來源檔案路徑。</param>
      <exception cref="T:System.ArgumentNullException" vsli:raw="&lt;paramref name=&quot;path&quot; /&gt; is &lt;see langword=&quot;null&quot; /&gt;.">
        <paramref name="path" /> 為 <see langword="null" />。</exception>
      <exception cref="T:System.ArgumentException" vsli:raw="&lt;paramref name=&quot;path&quot; /&gt; is an empty string (&quot;&quot;), contains only white space, or contains one or more invalid characters.">
        <paramref name="path" /> 為空字串 ("")，只包含空格或包含一或多個無效字元。</exception>
      <exception cref="T:System.IO.DirectoryNotFoundException" vsli:raw="The specified path is invalid, such as being on an unmapped drive.">指定的路徑無效，例如位於未對應的磁碟機上。</exception>
      <exception cref="T:System.IO.IOException" vsli:raw="The file load failed.">檔案載入失敗。</exception>
      <exception cref="T:System.IO.PathTooLongException" vsli:raw="The specified path, file name, or both exceed the system-defined maximum length.">指定的路徑、檔案名稱，或兩者都超出系統定義的長度上限。</exception>
      <exception cref="T:System.UnauthorizedAccessException" vsli:raw="The access requested is not permitted by the operating system for the specified &lt;paramref name=&quot;path&quot; /&gt;, such as when access is &lt;see langword=&quot;Write&quot; /&gt; or &lt;see langword=&quot;ReadWrite&quot; /&gt; and the file or directory is set for read-only access.">指定之 <paramref name="path" /> 的作業系統不允許所要求的存取，例如，當存取為 <see langword="Write" /> 或 <see langword="ReadWrite" />，且檔案或目錄設定為唯讀存取時。</exception>
    </member>
    <member name="M:System.ComponentModel.Design.ByteViewer.SetStartLine(System.Int32)">
      <summary vsli:raw="Sets the current line for the &lt;see cref=&quot;F:System.ComponentModel.Design.DisplayMode.Hexdump&quot; /&gt; view.">設定 <see cref="F:System.ComponentModel.Design.DisplayMode.Hexdump" /> 檢視的目前行。</summary>
      <param name="line" vsli:raw="The current line to display from.">要顯示的來源目前行。</param>
    </member>
    <member name="T:System.ComponentModel.Design.CollectionEditor">
      <summary vsli:raw="Provides a user interface that can edit most types of collections at design time.">提供可在設計階段編輯大部分集合型別的使用者介面。</summary>
    </member>
    <member name="M:System.ComponentModel.Design.CollectionEditor.#ctor(System.Type)">
      <summary vsli:raw="Initializes a new instance of the &lt;see cref=&quot;T:System.ComponentModel.Design.CollectionEditor&quot; /&gt; class using the specified collection type.">使用指定的集合型別，初始化 <see cref="T:System.ComponentModel.Design.CollectionEditor" /> 類別的新執行個體。</summary>
      <param name="type" vsli:raw="The type of the collection for this editor to edit.">這個編輯器要編輯的集合型別。</param>
    </member>
    <member name="M:System.ComponentModel.Design.CollectionEditor.CancelChanges">
      <summary vsli:raw="Cancels changes to the collection.">取消對集合所做的變更。</summary>
    </member>
    <member name="M:System.ComponentModel.Design.CollectionEditor.CanRemoveInstance(System.Object)">
      <summary vsli:raw="Indicates whether original members of the collection can be removed.">指示集合的原始成員是否可移除。</summary>
      <param name="value" vsli:raw="The value to remove.">要移除的值。</param>
      <returns vsli:raw="&lt;see langword=&quot;true&quot; /&gt; if it is permissible to remove this value from the collection; otherwise, &lt;see langword=&quot;false&quot; /&gt;. The default implementation always returns &lt;see langword=&quot;true&quot; /&gt;.">如果容許從集合中移除這個值，則為 <see langword="true" />，否則為 <see langword="false" />。 預設的實作 (Implementation) 一定會傳回 <see langword="true" />。</returns>
    </member>
    <member name="M:System.ComponentModel.Design.CollectionEditor.CanSelectMultipleInstances">
      <summary vsli:raw="Indicates whether multiple collection items can be selected at once.">指示是否可以一次選取多個集合項目。</summary>
      <returns vsli:raw="&lt;see langword=&quot;true&quot; /&gt; if it multiple collection members can be selected at the same time; otherwise, &lt;see langword=&quot;false&quot; /&gt;. By default, this returns &lt;see langword=&quot;true&quot; /&gt;.">如果可以同時選取多個集合成員，則為 <see langword="true" />，否則為 <see langword="false" />。 根據預設值，這會傳回 <see langword="true" />。</returns>
    </member>
    <member name="M:System.ComponentModel.Design.CollectionEditor.CreateCollectionForm">
      <summary vsli:raw="Creates a new form to display and edit the current collection.">建立要顯示和編輯目前集合的新表單。</summary>
      <returns vsli:raw="A &lt;see cref=&quot;T:System.ComponentModel.Design.CollectionEditor.CollectionForm&quot; /&gt; to provide as the user interface for editing the collection.">
        <see cref="T:System.ComponentModel.Design.CollectionEditor.CollectionForm" />，做為用於編輯集合的使用者介面提供。</returns>
    </member>
    <member name="M:System.ComponentModel.Design.CollectionEditor.CreateCollectionItemType">
      <summary vsli:raw="Gets the data type that this collection contains.">取得這個集合所包含的資料型別。</summary>
      <returns vsli:raw="The data type of the items in the collection, or an &lt;see cref=&quot;T:System.Object&quot; /&gt; if no &lt;see langword=&quot;Item&quot; /&gt; property can be located on the collection.">集合中項目的資料型別，或 <see cref="T:System.Object" /> (如果集合上沒有 <see langword="Item" /> 屬性)。</returns>
    </member>
    <member name="M:System.ComponentModel.Design.CollectionEditor.CreateInstance(System.Type)">
      <summary vsli:raw="Creates a new instance of the specified collection item type.">建立指定集合項目型別的新執行個體。</summary>
      <param name="itemType" vsli:raw="The type of item to create.">要建立之項目的型別。</param>
      <returns vsli:raw="A new instance of the specified object.">指定物件的新執行個體。</returns>
    </member>
    <member name="M:System.ComponentModel.Design.CollectionEditor.CreateNewItemTypes">
      <summary vsli:raw="Gets the data types that this collection editor can contain.">取得這個集合編輯器可包含的資料型別。</summary>
      <returns vsli:raw="An array of data types that this collection can contain.">這個集合可包含的資料型別陣列。</returns>
    </member>
    <member name="M:System.ComponentModel.Design.CollectionEditor.DestroyInstance(System.Object)">
      <summary vsli:raw="Destroys the specified instance of the object.">終結物件的指定執行個體。</summary>
      <param name="instance" vsli:raw="The object to destroy.">要終結的物件。</param>
    </member>
    <member name="M:System.ComponentModel.Design.CollectionEditor.EditValue(System.ComponentModel.ITypeDescriptorContext,System.IServiceProvider,System.Object)">
      <summary vsli:raw="Edits the value of the specified object using the specified service provider and context.">使用指定服務提供者和內容，編輯指定物件的值。</summary>
      <param name="context" vsli:raw="An &lt;see cref=&quot;T:System.ComponentModel.ITypeDescriptorContext&quot; /&gt; that can be used to gain additional context information.">
        <see cref="T:System.ComponentModel.ITypeDescriptorContext" />，可用來取得額外的內容資訊。</param>
      <param name="provider" vsli:raw="A service provider object through which editing services can be obtained.">服務提供者物件，可透過它取得編輯服務。</param>
      <param name="value" vsli:raw="The object to edit the value of.">要編輯其值的物件。</param>
      <exception cref="T:System.ComponentModel.Design.CheckoutException" vsli:raw="An attempt to check out a file that is checked into a source code management program did not succeed.">要將已經簽入原始程式碼管理程式的某個檔案簽出時失敗。</exception>
      <returns vsli:raw="The new value of the object. If the value of the object has not changed, this should return the same object it was passed.">物件的新值。 如果物件的值未經變更，這應該會傳回與已傳遞相同的物件。</returns>
    </member>
    <member name="M:System.ComponentModel.Design.CollectionEditor.GetDisplayText(System.Object)">
      <summary vsli:raw="Retrieves the display text for the given list item.">取出指定清單項目的顯示文字。</summary>
      <param name="value" vsli:raw="The list item for which to retrieve display text.">要取出其顯示文字的清單項目。</param>
      <returns vsli:raw="The display text for &lt;paramref name=&quot;value&quot; /&gt;.">
        <paramref name="value" /> 的顯示文字。</returns>
    </member>
    <member name="M:System.ComponentModel.Design.CollectionEditor.GetEditStyle(System.ComponentModel.ITypeDescriptorContext)">
      <summary vsli:raw="Gets the edit style used by the &lt;xref data-throw-if-not-resolved=&quot;true&quot; uid=&quot;System.ComponentModel.Design.CollectionEditor.EditValue(System.ComponentModel.ITypeDescriptorContext,System.IServiceProvider,System.Object)&quot;&gt;&lt;/xref&gt; method.">取得 <see cref="M:System.ComponentModel.Design.CollectionEditor.EditValue(System.ComponentModel.ITypeDescriptorContext,System.IServiceProvider,System.Object)" /> 方法所使用的編輯樣式。</summary>
      <param name="context" vsli:raw="An &lt;xref data-throw-if-not-resolved=&quot;true&quot; uid=&quot;System.ComponentModel.ITypeDescriptorContext&quot;&gt;&lt;/xref&gt; that can be used to gain additional context information.">
        <see cref="T:System.ComponentModel.ITypeDescriptorContext" />，可用來取得額外的內容資訊。</param>
      <returns vsli:raw="A &lt;xref data-throw-if-not-resolved=&quot;true&quot; uid=&quot;System.Drawing.Design.UITypeEditorEditStyle&quot;&gt;&lt;/xref&gt; enumeration value indicating the provided editing style. If the method is not supported in the specified context, this method will return the &lt;xref data-throw-if-not-resolved=&quot;true&quot; uid=&quot;System.Drawing.Design.UITypeEditorEditStyle.None&quot;&gt;&lt;/xref&gt; identifier.">
        <see cref="T:System.Drawing.Design.UITypeEditorEditStyle" /> 列舉型別 (Enumeration) 值，表示提供的編輯樣式。 如果指定內容中不支援方法，則這個方法會傳回 <see cref="F:System.Drawing.Design.UITypeEditorEditStyle.None" /> 識別項。</returns>
    </member>
    <member name="M:System.ComponentModel.Design.CollectionEditor.GetItems(System.Object)">
      <summary vsli:raw="Gets an array of objects containing the specified collection.">取得包含指定集合的物件陣列。</summary>
      <param name="editValue" vsli:raw="The collection to edit.">要編輯的集合。</param>
      <returns vsli:raw="An array containing the collection objects, or an empty object array if the specified collection does not inherit from &lt;see cref=&quot;T:System.Collections.ICollection&quot; /&gt;.">包含集合物件的陣列，或空的物件陣列 (如果指定集合不繼承自 <see cref="T:System.Collections.ICollection" />)。</returns>
    </member>
    <member name="M:System.ComponentModel.Design.CollectionEditor.GetObjectsFromInstance(System.Object)">
      <summary vsli:raw="Returns a list containing the given object.">傳回含有指定物件的清單。</summary>
      <param name="instance" vsli:raw="An &lt;see cref=&quot;T:System.Collections.ArrayList&quot; /&gt; returned as an object.">當做物件傳回的 <see cref="T:System.Collections.ArrayList" />。</param>
      <returns vsli:raw="An &lt;see cref=&quot;T:System.Collections.ArrayList&quot; /&gt; which contains the individual objects to be created.">含有要建立之個別物件的 <see cref="T:System.Collections.ArrayList" />。</returns>
    </member>
    <member name="M:System.ComponentModel.Design.CollectionEditor.GetService(System.Type)">
      <summary vsli:raw="Gets the requested service, if it is available.">如果有可用的服務，則取得所要求的服務。</summary>
      <param name="serviceType" vsli:raw="The type of service to retrieve.">要擷取的服務類型。</param>
      <returns vsli:raw="An instance of the service, or &lt;see langword=&quot;null&quot; /&gt; if the service cannot be found.">服務的執行個體，或 <see langword="null" /> (如果找不到服務)。</returns>
    </member>
    <member name="M:System.ComponentModel.Design.CollectionEditor.SetItems(System.Object,System.Object[])">
      <summary vsli:raw="Sets the specified array as the items of the collection.">設定指定的陣列為集合的項目。</summary>
      <param name="editValue" vsli:raw="The collection to edit.">要編輯的集合。</param>
      <param name="value" vsli:raw="An array of objects to set as the collection items.">要設定為集合項目的物件陣列。</param>
      <returns vsli:raw="The newly created collection object or, otherwise, the collection indicated by the &lt;paramref name=&quot;editValue&quot; /&gt; parameter.">新建立的集合物件，或者如果沒有的話，則為 <paramref name="editValue" /> 參數所指示的集合。</returns>
    </member>
    <member name="M:System.ComponentModel.Design.CollectionEditor.ShowHelp">
      <summary vsli:raw="Displays the default Help topic for the collection editor.">顯示集合編輯器的預設說明主題。</summary>
    </member>
    <member name="P:System.ComponentModel.Design.CollectionEditor.CollectionItemType">
      <summary vsli:raw="Gets the data type of each item in the collection.">取得集合中每個項目的資料型別。</summary>
      <returns vsli:raw="The data type of the collection items.">集合項目的資料型別。</returns>
    </member>
    <member name="P:System.ComponentModel.Design.CollectionEditor.CollectionType">
      <summary vsli:raw="Gets the data type of the collection object.">取得集合物件 (Collection Object) 的資料型別。</summary>
      <returns vsli:raw="The data type of the collection object.">集合物件的資料型別。</returns>
    </member>
    <member name="P:System.ComponentModel.Design.CollectionEditor.Context">
      <summary vsli:raw="Gets a type descriptor that indicates the current context.">取得指示目前內容的型別描述項。</summary>
      <returns vsli:raw="An &lt;see cref=&quot;T:System.ComponentModel.ITypeDescriptorContext&quot; /&gt; that indicates the context currently in use, or &lt;see langword=&quot;null&quot; /&gt; if no context is available.">
        <see cref="T:System.ComponentModel.ITypeDescriptorContext" />，表示目前使用中的內容，或 <see langword="null" /> (如果沒有可用的內容)。</returns>
    </member>
    <member name="P:System.ComponentModel.Design.CollectionEditor.HelpTopic">
      <summary vsli:raw="Gets the Help keyword to display the Help topic or topic list for when the editor's dialog box Help button or the F1 key is pressed.">當按下編輯器的對話方塊 [說明] 按鈕或 F1 鍵時，取得 Help 關鍵字以顯示說明主題或主題清單。</summary>
      <returns vsli:raw="The Help keyword to display the Help topic or topic list for when Help is requested from the editor.">從編輯器要求說明時，所要顯示之說明主題或主題清單的 Help 關鍵字。</returns>
    </member>
    <member name="P:System.ComponentModel.Design.CollectionEditor.NewItemTypes">
      <summary vsli:raw="Gets the available types of items that can be created for this collection.">取得可為這個集合建立的項目之可用型別。</summary>
      <returns vsli:raw="The types of items that can be created.">可建立的項目型別。</returns>
    </member>
    <member name="T:System.ComponentModel.Design.CollectionEditor.CollectionForm">
      <summary vsli:raw="Provides a modal dialog box for editing the contents of a collection using a &lt;see cref=&quot;T:System.Drawing.Design.UITypeEditor&quot; /&gt;.">使用 <see cref="T:System.Drawing.Design.UITypeEditor" />，提供編輯集合內容之用的強制回應對話方塊 (Modal Dialog Box)。</summary>
    </member>
    <member name="M:System.ComponentModel.Design.CollectionEditor.CollectionForm.#ctor(System.ComponentModel.Design.CollectionEditor)">
      <summary vsli:raw="Initializes a new instance of the &lt;see cref=&quot;T:System.ComponentModel.Design.CollectionEditor.CollectionForm&quot; /&gt; class.">初始化 <see cref="T:System.ComponentModel.Design.CollectionEditor.CollectionForm" /> 類別的新執行個體。</summary>
      <param name="editor" vsli:raw="The &lt;see cref=&quot;T:System.ComponentModel.Design.CollectionEditor&quot; /&gt; to use for editing the collection.">要用來編輯集合的 <see cref="T:System.ComponentModel.Design.CollectionEditor" />。</param>
    </member>
    <member name="M:System.ComponentModel.Design.CollectionEditor.CollectionForm.CanRemoveInstance(System.Object)">
      <summary vsli:raw="Indicates whether you can remove the original members of the collection.">指示是否可移除集合的原始成員。</summary>
      <param name="value" vsli:raw="The value to remove.">要移除的值。</param>
      <returns vsli:raw="&lt;see langword=&quot;true&quot; /&gt; if it is permissible to remove this value from the collection; otherwise, &lt;see langword=&quot;false&quot; /&gt;. By default, this method returns the value from &lt;see cref=&quot;M:System.ComponentModel.Design.CollectionEditor.CanRemoveInstance(System.Object)&quot; /&gt; of the &lt;see cref=&quot;T:System.ComponentModel.Design.CollectionEditor&quot; /&gt; for this form.">如果容許從集合中移除這個值，則為 <see langword="true" />，否則為 <see langword="false" />。 根據預設值，這個方法會從這個表單 <see cref="M:System.ComponentModel.Design.CollectionEditor.CanRemoveInstance(System.Object)" /> 的 <see cref="T:System.ComponentModel.Design.CollectionEditor" /> 傳回值。</returns>
    </member>
    <member name="M:System.ComponentModel.Design.CollectionEditor.CollectionForm.CanSelectMultipleInstances">
      <summary vsli:raw="Indicates whether multiple collection items can be selected at once.">指示是否可以一次選取多個集合項目。</summary>
      <returns vsli:raw="&lt;see langword=&quot;true&quot; /&gt; if it multiple collection members can be selected at the same time; otherwise, &lt;see langword=&quot;false&quot; /&gt;. By default, this method returns the value from &lt;see cref=&quot;M:System.ComponentModel.Design.CollectionEditor.CanSelectMultipleInstances&quot; /&gt; of the &lt;see cref=&quot;T:System.ComponentModel.Design.CollectionEditor&quot; /&gt; for this form.">如果可以同時選取多個集合成員，則為 <see langword="true" />，否則為 <see langword="false" />。 根據預設值，這個方法會從這個表單 <see cref="M:System.ComponentModel.Design.CollectionEditor.CanSelectMultipleInstances" /> 的 <see cref="T:System.ComponentModel.Design.CollectionEditor" /> 傳回值。</returns>
    </member>
    <member name="M:System.ComponentModel.Design.CollectionEditor.CollectionForm.CreateInstance(System.Type)">
      <summary vsli:raw="Creates a new instance of the specified collection item type.">建立指定集合項目型別的新執行個體。</summary>
      <param name="itemType" vsli:raw="The type of item to create.">要建立之項目的型別。</param>
      <returns vsli:raw="A new instance of the specified object, or &lt;see langword=&quot;null&quot; /&gt; if the user chose to cancel the creation of this instance.">指定物件的新執行個體，或 <see langword="null" /> (如果使用者選擇取消這個執行個體的建立)。</returns>
    </member>
    <member name="M:System.ComponentModel.Design.CollectionEditor.CollectionForm.DestroyInstance(System.Object)">
      <summary vsli:raw="Destroys the specified instance of the object.">終結物件的指定執行個體。</summary>
      <param name="instance" vsli:raw="The object to destroy.">要終結的物件。</param>
    </member>
    <member name="M:System.ComponentModel.Design.CollectionEditor.CollectionForm.DisplayError(System.Exception)">
      <summary vsli:raw="Displays the specified exception to the user.">將指定的例外狀況顯示給使用者。</summary>
      <param name="e" vsli:raw="The exception to display.">要顯示的例外狀況。</param>
    </member>
    <member name="M:System.ComponentModel.Design.CollectionEditor.CollectionForm.GetService(System.Type)">
      <summary vsli:raw="Gets the requested service, if it is available.">如果有可用的服務，則取得所要求的服務。</summary>
      <param name="serviceType" vsli:raw="The type of service to retrieve.">要擷取的服務類型。</param>
      <returns vsli:raw="An instance of the service, or &lt;see langword=&quot;null&quot; /&gt; if the service cannot be found.">服務的執行個體，或 <see langword="null" /> (如果找不到服務)。</returns>
    </member>
    <member name="M:System.ComponentModel.Design.CollectionEditor.CollectionForm.OnEditValueChanged">
      <summary vsli:raw="Provides an opportunity to perform processing when a collection value has changed.">當集合值已變更時，提供執行處理的機會。</summary>
    </member>
    <member name="M:System.ComponentModel.Design.CollectionEditor.CollectionForm.ShowEditorDialog(System.Windows.Forms.Design.IWindowsFormsEditorService)">
      <summary vsli:raw="Shows the dialog box for the collection editor using the specified &lt;see cref=&quot;T:System.Windows.Forms.Design.IWindowsFormsEditorService&quot; /&gt; object.">使用指定的 <see cref="T:System.Windows.Forms.Design.IWindowsFormsEditorService" /> 物件，顯示集合編輯器的對話方塊。</summary>
      <param name="edSvc" vsli:raw="An &lt;see cref=&quot;T:System.Windows.Forms.Design.IWindowsFormsEditorService&quot; /&gt; that can be used to show the dialog box.">
        <see cref="T:System.Windows.Forms.Design.IWindowsFormsEditorService" />，可以用來顯示對話方塊。</param>
      <returns vsli:raw="A &lt;see cref=&quot;T:System.Windows.Forms.DialogResult&quot; /&gt; that indicates the result code returned from the dialog box.">
        <see cref="T:System.Windows.Forms.DialogResult" />，表示從對話方塊傳回的結果程式碼。</returns>
    </member>
    <member name="P:System.ComponentModel.Design.CollectionEditor.CollectionForm.CollectionItemType">
      <summary vsli:raw="Gets the data type of each item in the collection.">取得集合中每個項目的資料型別。</summary>
      <returns vsli:raw="The data type of the collection items.">集合項目的資料型別。</returns>
    </member>
    <member name="P:System.ComponentModel.Design.CollectionEditor.CollectionForm.CollectionType">
      <summary vsli:raw="Gets the data type of the collection object.">取得集合物件 (Collection Object) 的資料型別。</summary>
      <returns vsli:raw="The data type of the collection object.">集合物件的資料型別。</returns>
    </member>
    <member name="P:System.ComponentModel.Design.CollectionEditor.CollectionForm.Context">
      <summary vsli:raw="Gets a type descriptor that indicates the current context.">取得指示目前內容的型別描述項。</summary>
      <returns vsli:raw="An &lt;see cref=&quot;T:System.ComponentModel.ITypeDescriptorContext&quot; /&gt; that indicates the context currently in use, or &lt;see langword=&quot;null&quot; /&gt; if no context is available.">
        <see cref="T:System.ComponentModel.ITypeDescriptorContext" />，表示目前使用中的內容，或 <see langword="null" /> (如果沒有可用的內容)。</returns>
    </member>
    <member name="P:System.ComponentModel.Design.CollectionEditor.CollectionForm.EditValue">
      <summary vsli:raw="Gets or sets the collection object to edit.">取得或設定要編輯的集合物件。</summary>
      <returns vsli:raw="The collection object to edit.">要編輯的集合物件。</returns>
    </member>
    <member name="P:System.ComponentModel.Design.CollectionEditor.CollectionForm.Items">
      <summary vsli:raw="Gets or sets the array of items for this form to display.">取得或設定這個表單要顯示的項目陣列。</summary>
      <returns vsli:raw="An array of objects for the form to display.">表單要顯示的物件陣列。</returns>
    </member>
    <member name="P:System.ComponentModel.Design.CollectionEditor.CollectionForm.NewItemTypes">
      <summary vsli:raw="Gets the available item types that can be created for this collection.">取得可以為這個集合建立的可用項目型別。</summary>
      <returns vsli:raw="The types of items that can be created.">可建立的項目型別。</returns>
    </member>
    <member name="T:System.ComponentModel.Design.ComponentDesigner">
      <summary vsli:raw="Extends the design mode behavior of a component.">擴充元件的設計模式行為。</summary>
    </member>
    <member name="M:System.ComponentModel.Design.ComponentDesigner.#ctor">
      <summary vsli:raw="Initializes a new instance of the &lt;see cref=&quot;T:System.ComponentModel.Design.ComponentDesigner&quot; /&gt; class.">初始化 <see cref="T:System.ComponentModel.Design.ComponentDesigner" /> 類別的新執行個體。</summary>
    </member>
    <member name="M:System.ComponentModel.Design.ComponentDesigner.Dispose">
      <summary vsli:raw="Releases all resources used by the &lt;see cref=&quot;T:System.ComponentModel.Design.ComponentDesigner&quot; /&gt;.">釋放 <see cref="T:System.ComponentModel.Design.ComponentDesigner" /> 所使用的所有資源。</summary>
    </member>
    <member name="M:System.ComponentModel.Design.ComponentDesigner.Dispose(System.Boolean)">
      <summary vsli:raw="Releases the unmanaged resources used by the &lt;see cref=&quot;T:System.ComponentModel.Design.ComponentDesigner&quot; /&gt; and optionally releases the managed resources.">釋放 <see cref="T:System.ComponentModel.Design.ComponentDesigner" /> 所使用的 Unmanaged 資源，並選擇性地釋放 Managed 資源。</summary>
      <param name="disposing" vsli:raw="&lt;see langword=&quot;true&quot; /&gt; to release both managed and unmanaged resources; &lt;see langword=&quot;false&quot; /&gt; to release only unmanaged resources.">
        <see langword="true" /> 表示釋放 Managed 和 Unmanaged 資源，<see langword="false" /> 則表示只釋放 Unmanaged 資源。</param>
    </member>
    <member name="M:System.ComponentModel.Design.ComponentDesigner.DoDefaultAction">
      <summary vsli:raw="Creates a method signature in the source code file for the default event on the component and navigates the user's cursor to that location.">在元件上預設事件的原始程式碼檔案中建立方法簽章，並將使用者的游標巡覽至該位置。</summary>
      <exception cref="T:System.ComponentModel.Design.CheckoutException" vsli:raw="An attempt to check out a file that is checked into a source code management program failed.">要將已經簽入原始程式碼管理程式的某個檔案簽出時失敗。</exception>
    </member>
    <member name="M:System.ComponentModel.Design.ComponentDesigner.GetService(System.Type)">
      <summary vsli:raw="Attempts to retrieve the specified type of service from the design mode site of the designer's component.">嘗試從設計工具元件的設計模式站台擷取指定的服務類型。</summary>
      <param name="serviceType" vsli:raw="The type of service to request.">要求的服務型別。</param>
      <returns vsli:raw="An object implementing the requested service, or &lt;see langword=&quot;null&quot; /&gt; if the service cannot be resolved.">實作要求服務的物件，或 <see langword="null" /> (如果無法解析服務)。</returns>
    </member>
    <member name="M:System.ComponentModel.Design.ComponentDesigner.Initialize(System.ComponentModel.IComponent)">
      <summary vsli:raw="Prepares the designer to view, edit, and design the specified component.">準備設計工具，以檢視、編輯和設計所指定的元件。</summary>
      <param name="component" vsli:raw="The component for this designer.">這個設計工具的元件。</param>
    </member>
    <member name="M:System.ComponentModel.Design.ComponentDesigner.InitializeExistingComponent(System.Collections.IDictionary)">
      <summary vsli:raw="Reinitializes an existing component.">重新初始化現有的元件。</summary>
      <param name="defaultValues" vsli:raw="A name/value dictionary of default values to apply to properties. May be &lt;see langword=&quot;null&quot; /&gt; if no default values are specified.">要套用至屬性之預設值的名稱/值字典。 如果未指定任何預設值，則可能為 <see langword="null" />。</param>
    </member>
    <member name="M:System.ComponentModel.Design.ComponentDesigner.InitializeNewComponent(System.Collections.IDictionary)">
      <summary vsli:raw="Initializes a newly created component.">初始化新建立的元件。</summary>
      <param name="defaultValues" vsli:raw="A name/value dictionary of default values to apply to properties. May be &lt;see langword=&quot;null&quot; /&gt; if no default values are specified.">要套用至屬性之預設值的名稱/值字典。 如果未指定任何預設值，則可能為 <see langword="null" />。</param>
    </member>
    <member name="M:System.ComponentModel.Design.ComponentDesigner.InitializeNonDefault">
      <summary vsli:raw="Initializes the settings for an imported component that is already initialized to settings other than the defaults.">初始化已初始化為預設值以外設定的匯入元件設定。</summary>
    </member>
    <member name="M:System.ComponentModel.Design.ComponentDesigner.InvokeGetInheritanceAttribute(System.ComponentModel.Design.ComponentDesigner)">
      <summary vsli:raw="Gets the &lt;see cref=&quot;T:System.ComponentModel.InheritanceAttribute&quot; /&gt; of the specified &lt;see cref=&quot;T:System.ComponentModel.Design.ComponentDesigner&quot; /&gt;.">取得指定 <see cref="T:System.ComponentModel.InheritanceAttribute" /> 的 <see cref="T:System.ComponentModel.Design.ComponentDesigner" />。</summary>
      <param name="toInvoke" vsli:raw="The &lt;see cref=&quot;T:System.ComponentModel.Design.ComponentDesigner&quot; /&gt; whose inheritance attribute to retrieve.">
        <see cref="T:System.ComponentModel.Design.ComponentDesigner" />，要擷取其繼承屬性。</param>
      <returns vsli:raw="The &lt;see cref=&quot;T:System.ComponentModel.InheritanceAttribute&quot; /&gt; of the specified designer.">指定設計工具的 <see cref="T:System.ComponentModel.InheritanceAttribute" />。</returns>
    </member>
    <member name="M:System.ComponentModel.Design.ComponentDesigner.OnSetComponentDefaults">
      <summary vsli:raw="Sets the default properties for the component.">設定元件的預設屬性。</summary>
    </member>
    <member name="M:System.ComponentModel.Design.ComponentDesigner.PostFilterAttributes(System.Collections.IDictionary)">
      <summary vsli:raw="Allows a designer to change or remove items from the set of attributes that it exposes through a &lt;see cref=&quot;T:System.ComponentModel.TypeDescriptor&quot; /&gt;.">允許設計工具變更或移除它經由 <see cref="T:System.ComponentModel.TypeDescriptor" /> 公開的屬性集中的項目。</summary>
      <param name="attributes" vsli:raw="The attributes for the class of the component.">元件類別的屬性。</param>
    </member>
    <member name="M:System.ComponentModel.Design.ComponentDesigner.PostFilterEvents(System.Collections.IDictionary)">
      <summary vsli:raw="Allows a designer to change or remove items from the set of events that it exposes through a &lt;see cref=&quot;T:System.ComponentModel.TypeDescriptor&quot; /&gt;.">允許設計工具變更或移除它經由 <see cref="T:System.ComponentModel.TypeDescriptor" /> 公開的事件集中的項目。</summary>
      <param name="events" vsli:raw="The events for the class of the component.">元件類別的事件。</param>
    </member>
    <member name="M:System.ComponentModel.Design.ComponentDesigner.PostFilterProperties(System.Collections.IDictionary)">
      <summary vsli:raw="Allows a designer to change or remove items from the set of properties that it exposes through a &lt;see cref=&quot;T:System.ComponentModel.TypeDescriptor&quot; /&gt;.">允許設計工具變更或移除它經由 <see cref="T:System.ComponentModel.TypeDescriptor" /> 公開的屬性集中的項目。</summary>
      <param name="properties" vsli:raw="The properties for the class of the component.">元件類別的屬性。</param>
    </member>
    <member name="M:System.ComponentModel.Design.ComponentDesigner.PreFilterAttributes(System.Collections.IDictionary)">
      <summary vsli:raw="Allows a designer to add to the set of attributes that it exposes through a &lt;see cref=&quot;T:System.ComponentModel.TypeDescriptor&quot; /&gt;.">允許設計工具加入至它經由 <see cref="T:System.ComponentModel.TypeDescriptor" /> 公開的屬性集。</summary>
      <param name="attributes" vsli:raw="The attributes for the class of the component.">元件類別的屬性。</param>
    </member>
    <member name="M:System.ComponentModel.Design.ComponentDesigner.PreFilterEvents(System.Collections.IDictionary)">
      <summary vsli:raw="Allows a designer to add to the set of events that it exposes through a &lt;see cref=&quot;T:System.ComponentModel.TypeDescriptor&quot; /&gt;.">允許設計工具加入至它經由 <see cref="T:System.ComponentModel.TypeDescriptor" /> 公開的事件集。</summary>
      <param name="events" vsli:raw="The events for the class of the component.">元件類別的事件。</param>
    </member>
    <member name="M:System.ComponentModel.Design.ComponentDesigner.PreFilterProperties(System.Collections.IDictionary)">
      <summary vsli:raw="Allows a designer to add to the set of properties that it exposes through a &lt;see cref=&quot;T:System.ComponentModel.TypeDescriptor&quot; /&gt;.">允許設計工具加入至它經由 <see cref="T:System.ComponentModel.TypeDescriptor" /> 公開的屬性集。</summary>
      <param name="properties" vsli:raw="The properties for the class of the component.">元件類別的屬性。</param>
    </member>
    <member name="M:System.ComponentModel.Design.ComponentDesigner.RaiseComponentChanged(System.ComponentModel.MemberDescriptor,System.Object,System.Object)">
      <summary vsli:raw="Notifies the &lt;see cref=&quot;T:System.ComponentModel.Design.IComponentChangeService&quot; /&gt; that this component has been changed.">告知 <see cref="T:System.ComponentModel.Design.IComponentChangeService" /> 這個元件已經變更。</summary>
      <param name="member" vsli:raw="A &lt;see cref=&quot;T:System.ComponentModel.MemberDescriptor&quot; /&gt; that indicates the member that has been changed.">
        <see cref="T:System.ComponentModel.MemberDescriptor" />，表示已變更的成員。</param>
      <param name="oldValue" vsli:raw="The old value of the member.">成員的舊值。</param>
      <param name="newValue" vsli:raw="The new value of the member.">成員的新值。</param>
    </member>
    <member name="M:System.ComponentModel.Design.ComponentDesigner.RaiseComponentChanging(System.ComponentModel.MemberDescriptor)">
      <summary vsli:raw="Notifies the &lt;see cref=&quot;T:System.ComponentModel.Design.IComponentChangeService&quot; /&gt; that this component is about to be changed.">告知 <see cref="T:System.ComponentModel.Design.IComponentChangeService" /> 這個元件正要變更。</summary>
      <param name="member" vsli:raw="A &lt;see cref=&quot;T:System.ComponentModel.MemberDescriptor&quot; /&gt; that indicates the member that is about to be changed.">
        <see cref="T:System.ComponentModel.MemberDescriptor" />，表示成員正要變更。</param>
    </member>
    <member name="M:System.ComponentModel.Design.ComponentDesigner.System#ComponentModel#Design#IDesignerFilter#PostFilterAttributes(System.Collections.IDictionary)">
      <summary vsli:raw="For a description of this member, see the &lt;see cref=&quot;M:System.ComponentModel.Design.IDesignerFilter.PostFilterAttributes(System.Collections.IDictionary)&quot; /&gt; method.">如需這個成員的描述，請參閱 <see cref="M:System.ComponentModel.Design.IDesignerFilter.PostFilterAttributes(System.Collections.IDictionary)" /> 方法。</summary>
      <param name="attributes" vsli:raw="The &lt;see cref=&quot;T:System.Attribute&quot; /&gt; objects for the class of the component. The keys in the dictionary of attributes are the &lt;see cref=&quot;P:System.Attribute.TypeId&quot; /&gt; values of the attributes.">元件類別的 <see cref="T:System.Attribute" /> 物件。 屬性字典中索引鍵為屬性的 <see cref="P:System.Attribute.TypeId" /> 值。</param>
    </member>
    <member name="M:System.ComponentModel.Design.ComponentDesigner.System#ComponentModel#Design#IDesignerFilter#PostFilterEvents(System.Collections.IDictionary)">
      <summary vsli:raw="For a description of this member, see the &lt;see cref=&quot;M:System.ComponentModel.Design.IDesignerFilter.PostFilterEvents(System.Collections.IDictionary)&quot; /&gt; method.">如需這個成員的描述，請參閱 <see cref="M:System.ComponentModel.Design.IDesignerFilter.PostFilterEvents(System.Collections.IDictionary)" /> 方法。</summary>
      <param name="events" vsli:raw="The &lt;see cref=&quot;T:System.ComponentModel.EventDescriptor&quot; /&gt; objects that represent the events of the class of the component. The keys in the dictionary of events are event names.">
        <see cref="T:System.ComponentModel.EventDescriptor" /> 物件，表示元件類別的事件。 事件字典中的索引鍵是事件名稱。</param>
    </member>
    <member name="M:System.ComponentModel.Design.ComponentDesigner.System#ComponentModel#Design#IDesignerFilter#PostFilterProperties(System.Collections.IDictionary)">
      <summary vsli:raw="For a description of this member, see the &lt;see cref=&quot;M:System.ComponentModel.Design.IDesignerFilter.PostFilterProperties(System.Collections.IDictionary)&quot; /&gt; method.">如需這個成員的描述，請參閱 <see cref="M:System.ComponentModel.Design.IDesignerFilter.PostFilterProperties(System.Collections.IDictionary)" /> 方法。</summary>
      <param name="properties" vsli:raw="The &lt;see cref=&quot;T:System.ComponentModel.PropertyDescriptor&quot; /&gt; objects that represent the properties of the class of the component. The keys in the dictionary of properties are property names.">
        <see cref="T:System.ComponentModel.PropertyDescriptor" /> 物件，表示元件類別的屬性。 屬性字典中的索引鍵是屬性名稱。</param>
    </member>
    <member name="M:System.ComponentModel.Design.ComponentDesigner.System#ComponentModel#Design#IDesignerFilter#PreFilterAttributes(System.Collections.IDictionary)">
      <summary vsli:raw="For a description of this member, see the &lt;see cref=&quot;M:System.ComponentModel.Design.IDesignerFilter.PreFilterAttributes(System.Collections.IDictionary)&quot; /&gt; method.">如需這個成員的描述，請參閱 <see cref="M:System.ComponentModel.Design.IDesignerFilter.PreFilterAttributes(System.Collections.IDictionary)" /> 方法。</summary>
      <param name="attributes" vsli:raw="The &lt;see cref=&quot;T:System.Attribute&quot; /&gt; objects for the class of the component. The keys in the dictionary of attributes are the &lt;see cref=&quot;P:System.Attribute.TypeId&quot; /&gt; values of the attributes.">元件類別的 <see cref="T:System.Attribute" /> 物件。 屬性字典中索引鍵為屬性的 <see cref="P:System.Attribute.TypeId" /> 值。</param>
    </member>
    <member name="M:System.ComponentModel.Design.ComponentDesigner.System#ComponentModel#Design#IDesignerFilter#PreFilterEvents(System.Collections.IDictionary)">
      <summary vsli:raw="For a description of this member, see the &lt;see cref=&quot;M:System.ComponentModel.Design.IDesignerFilter.PreFilterEvents(System.Collections.IDictionary)&quot; /&gt; method.">如需這個成員的描述，請參閱 <see cref="M:System.ComponentModel.Design.IDesignerFilter.PreFilterEvents(System.Collections.IDictionary)" /> 方法。</summary>
      <param name="events" vsli:raw="The &lt;see cref=&quot;T:System.ComponentModel.EventDescriptor&quot; /&gt; objects that represent the events of the class of the component. The keys in the dictionary of events are event names.">
        <see cref="T:System.ComponentModel.EventDescriptor" /> 物件，表示元件類別的事件。 事件字典中的索引鍵是事件名稱。</param>
    </member>
    <member name="M:System.ComponentModel.Design.ComponentDesigner.System#ComponentModel#Design#IDesignerFilter#PreFilterProperties(System.Collections.IDictionary)">
      <summary vsli:raw="For a description of this member, see the &lt;see cref=&quot;M:System.ComponentModel.Design.IDesignerFilter.PreFilterProperties(System.Collections.IDictionary)&quot; /&gt; method.">如需這個成員的描述，請參閱 <see cref="M:System.ComponentModel.Design.IDesignerFilter.PreFilterProperties(System.Collections.IDictionary)" /> 方法。</summary>
      <param name="properties" vsli:raw="The &lt;see cref=&quot;T:System.ComponentModel.PropertyDescriptor&quot; /&gt; objects that represent the properties of the class of the component. The keys in the dictionary of properties are property names.">
        <see cref="T:System.ComponentModel.PropertyDescriptor" /> 物件，表示元件類別的屬性。 屬性字典中的索引鍵是屬性名稱。</param>
    </member>
    <member name="P:System.ComponentModel.Design.ComponentDesigner.ActionLists">
      <summary vsli:raw="Gets the design-time action lists supported by the component associated with the designer.">取得與設計工具相關之元件所支援的設計階段動作清單。</summary>
      <returns vsli:raw="The design-time action lists supported by the component associated with the designer.">與設計工具相關之元件所支援的設計階段動作清單。</returns>
    </member>
    <member name="P:System.ComponentModel.Design.ComponentDesigner.AssociatedComponents">
      <summary vsli:raw="Gets the collection of components associated with the component managed by the designer.">取得元件集合，該集合與設計工具管理的元件相關聯。</summary>
      <returns vsli:raw="The components that are associated with the component managed by the designer.">元件，與設計工具管理的元件相關聯。</returns>
    </member>
    <member name="P:System.ComponentModel.Design.ComponentDesigner.Component">
      <summary vsli:raw="Gets the component this designer is designing.">取得這個設計工具正在設計的元件。</summary>
      <returns vsli:raw="The component managed by the designer.">設計工具所管理的元件。</returns>
    </member>
    <member name="P:System.ComponentModel.Design.ComponentDesigner.InheritanceAttribute">
      <summary vsli:raw="Gets an attribute that indicates the type of inheritance of the associated component.">取得屬性 (Attribute)，表示相關元件的繼承 (Inheritance) 型別。</summary>
      <returns vsli:raw="The &lt;see cref=&quot;T:System.ComponentModel.InheritanceAttribute&quot; /&gt; for the associated component.">相關元件的 <see cref="T:System.ComponentModel.InheritanceAttribute" />。</returns>
    </member>
    <member name="P:System.ComponentModel.Design.ComponentDesigner.Inherited">
      <summary vsli:raw="Gets a value indicating whether this component is inherited.">取得值，表示是否要繼承這個元件。</summary>
      <returns vsli:raw="&lt;see langword=&quot;true&quot; /&gt; if the component is inherited; otherwise, &lt;see langword=&quot;false&quot; /&gt;.">如果繼承元件，則為 <see langword="true" />，否則為 <see langword="false" />。</returns>
    </member>
    <member name="P:System.ComponentModel.Design.ComponentDesigner.ParentComponent">
      <summary vsli:raw="Gets the parent component for this designer.">取得這個設計工具的父元件。</summary>
      <returns vsli:raw="The parent component for this designer, or &lt;see langword=&quot;null&quot; /&gt; if this designer is the root component.">此設計工具的父元件；若此設計工具是根元件，則為 <see langword="null" />。</returns>
    </member>
    <member name="P:System.ComponentModel.Design.ComponentDesigner.ShadowProperties">
      <summary vsli:raw="Gets a collection of property values that override user settings.">取得覆寫使用者設定的屬性值集合。</summary>
      <returns vsli:raw="A &lt;see cref=&quot;T:System.ComponentModel.Design.ComponentDesigner.ShadowPropertyCollection&quot; /&gt; that indicates the shadow properties of the design document.">
        <see cref="T:System.ComponentModel.Design.ComponentDesigner.ShadowPropertyCollection" />，表示設計文件的遮蔽屬性。</returns>
    </member>
    <member name="P:System.ComponentModel.Design.ComponentDesigner.System#ComponentModel#Design#ITreeDesigner#Children">
      <summary vsli:raw="For a description of this member, see the &lt;see cref=&quot;P:System.ComponentModel.Design.ITreeDesigner.Children&quot; /&gt; property.">如需這個成員的描述，請參閱 <see cref="P:System.ComponentModel.Design.ITreeDesigner.Children" /> 屬性。</summary>
      <returns vsli:raw="An &lt;see cref=&quot;T:System.Collections.ICollection&quot; /&gt; that contains the collection of &lt;see cref=&quot;T:System.ComponentModel.Design.IDesigner&quot; /&gt; designers contained in the current parent designer.">
        <see cref="T:System.Collections.ICollection" />，其中包含目前的父設計工具所包含的 <see cref="T:System.ComponentModel.Design.IDesigner" /> 設計工具集合。</returns>
    </member>
    <member name="P:System.ComponentModel.Design.ComponentDesigner.System#ComponentModel#Design#ITreeDesigner#Parent">
      <summary vsli:raw="For a description of this member, see the &lt;see cref=&quot;P:System.ComponentModel.Design.ITreeDesigner.Parent&quot; /&gt; property.">如需這個成員的描述，請參閱 <see cref="P:System.ComponentModel.Design.ITreeDesigner.Parent" /> 屬性。</summary>
      <returns vsli:raw="An &lt;see cref=&quot;T:System.ComponentModel.Design.IDesigner&quot; /&gt; representing the parent designer, or &lt;see langword=&quot;null&quot; /&gt; if there is no parent.">代表父設計工具的 <see cref="T:System.ComponentModel.Design.IDesigner" />，如果沒有父代，則為 <see langword="null" />。</returns>
    </member>
    <member name="P:System.ComponentModel.Design.ComponentDesigner.Verbs">
      <summary vsli:raw="Gets the design-time verbs supported by the component that is associated with the designer.">取得與設計工具相關元件所支援的設計階段動詞命令 (Verb)。</summary>
      <returns vsli:raw="A &lt;see cref=&quot;T:System.ComponentModel.Design.DesignerVerbCollection&quot; /&gt; of &lt;see cref=&quot;T:System.ComponentModel.Design.DesignerVerb&quot; /&gt; objects, or &lt;see langword=&quot;null&quot; /&gt; if no designer verbs are available. This default implementation always returns &lt;see langword=&quot;null&quot; /&gt;.">
        <see cref="T:System.ComponentModel.Design.DesignerVerbCollection" /> 物件的 <see cref="T:System.ComponentModel.Design.DesignerVerb" />，或 <see langword="null" /> (如果沒有可用的設計工具動詞命令)。 這個預設的實作 (Implementation) 永遠傳回 <see langword="null" />。</returns>
    </member>
    <member name="T:System.ComponentModel.Design.ComponentDesigner.ShadowPropertyCollection">
      <summary vsli:raw="Represents a collection of shadow properties that should override inherited default or assigned values for specific properties. This class cannot be inherited.">表示應該覆寫指定屬性的繼承預設值或指派值的遮蔽屬性集合。 此類別無法獲得繼承。</summary>
    </member>
    <member name="M:System.ComponentModel.Design.ComponentDesigner.ShadowPropertyCollection.Contains(System.String)">
      <summary vsli:raw="Indicates whether a property matching the specified name exists in the collection.">指示與指定名稱相符的屬性是否存在於集合中。</summary>
      <param name="propertyName" vsli:raw="The name of the property to check for in the collection.">要在集合中檢查的屬性名稱。</param>
      <returns vsli:raw="&lt;see langword=&quot;true&quot; /&gt; if the property exists in the collection; otherwise, &lt;see langword=&quot;false&quot; /&gt;.">如果屬性存在於集合中，則為 <see langword="true" />，否則為 <see langword="false" />。</returns>
    </member>
    <member name="P:System.ComponentModel.Design.ComponentDesigner.ShadowPropertyCollection.Item(System.String)">
      <summary vsli:raw="Gets or sets the object at the specified index.">取得或設定在指定索引處的物件。</summary>
      <param name="propertyName" vsli:raw="The name of the property to access in the collection.">要在集合中存取的屬性名稱。</param>
      <returns vsli:raw="The value of the specified property, if it exists in the collection. Otherwise, the value is retrieved from the current value of the nonshadowed property.">如果指定屬性的值存在集合中，則為指定屬性的值。 否則，會從非遮蔽屬性的目前值中擷取值。</returns>
    </member>
    <member name="T:System.ComponentModel.Design.DateTimeEditor">
      <summary vsli:raw="This date time editor is a &lt;see cref=&quot;T:System.Drawing.Design.UITypeEditor&quot; /&gt; suitable for visually editing &lt;see cref=&quot;T:System.DateTime&quot; /&gt; objects.">這個日期時間編輯器是一個 <see cref="T:System.Drawing.Design.UITypeEditor" />，適合用來視覺化編輯 <see cref="T:System.DateTime" /> 物件。</summary>
    </member>
    <member name="M:System.ComponentModel.Design.DateTimeEditor.#ctor">
      <summary vsli:raw="Initializes a new instance of the &lt;see cref=&quot;T:System.ComponentModel.Design.DateTimeEditor&quot; /&gt; class.">初始化 <see cref="T:System.ComponentModel.Design.DateTimeEditor" /> 類別的新執行個體。</summary>
    </member>
    <member name="M:System.ComponentModel.Design.DateTimeEditor.EditValue(System.ComponentModel.ITypeDescriptorContext,System.IServiceProvider,System.Object)">
      <summary vsli:raw="Edits the specified object value using the editor style provided by GetEditorStyle. A service provider is provided so that any required editing services can be obtained.">使用 GetEditorStyle 提供的編輯器樣式編輯指定的物件值。 會提供服務提供者，以取得任何所需的編輯服務。</summary>
      <param name="context" vsli:raw="A type descriptor context that can be used to provide additional context information.">型別描述項內容，可以用來提供其他的內容資訊。</param>
      <param name="provider" vsli:raw="A service provider object through which editing services may be obtained.">服務提供者物件，可透過它編輯所取得的服務。</param>
      <param name="value" vsli:raw="An instance of the value being edited.">已編輯值的執行個體。</param>
      <returns vsli:raw="The new value of the object. If the value of the object hasn't changed, this should return the same object it was passed.">物件的新值。 如果物件的值未經變更，這應該會傳回與它之前所傳遞者相同的物件。</returns>
    </member>
    <member name="M:System.ComponentModel.Design.DateTimeEditor.GetEditStyle(System.ComponentModel.ITypeDescriptorContext)">
      <summary vsli:raw="Retrieves the editing style of the &lt;xref data-throw-if-not-resolved=&quot;true&quot; uid=&quot;System.ComponentModel.Design.DateTimeEditor.EditValue*&quot;&gt;&lt;/xref&gt; method. If the method is not supported, this will return None.">擷取 <see cref="Overload:System.ComponentModel.Design.DateTimeEditor.EditValue" /> 方法的編輯樣式。 如果不支援該方法，則會傳回 None。</summary>
      <param name="context" vsli:raw="A type descriptor context that can be used to provide additional context information.">型別描述項內容，可以用來提供其他的內容資訊。</param>
      <returns vsli:raw="An &lt;code data-dev-comment-type=&quot;langword&quot;&gt;enum&lt;/code&gt; value indicating the provided editing style.">
        <see langword="enum" /> 值，表示所提供的編輯樣式。</returns>
    </member>
    <member name="T:System.ComponentModel.Design.DesignerActionHeaderItem">
      <summary vsli:raw="Represents a static header item on a smart tag panel. This class cannot be inherited.">表示智慧標籤面板上的靜態標題項目。 此類別無法獲得繼承。</summary>
    </member>
    <member name="M:System.ComponentModel.Design.DesignerActionHeaderItem.#ctor(System.String)">
      <summary vsli:raw="Initializes a new instance of the &lt;see cref=&quot;T:System.ComponentModel.Design.DesignerActionHeaderItem&quot; /&gt; class using the provided name string.">使用提供的名稱字串，初始化 <see cref="T:System.ComponentModel.Design.DesignerActionHeaderItem" /> 類別的新執行個體。</summary>
      <param name="displayName" vsli:raw="The text to be displayed in the header.">要在標題中顯示的文字。</param>
    </member>
    <member name="M:System.ComponentModel.Design.DesignerActionHeaderItem.#ctor(System.String,System.String)">
      <summary vsli:raw="Initializes a new instance of the &lt;see cref=&quot;T:System.ComponentModel.Design.DesignerActionHeaderItem&quot; /&gt; class using the provided name and category strings.">使用提供的名稱和分類字串，初始化 <see cref="T:System.ComponentModel.Design.DesignerActionHeaderItem" /> 類別的新執行個體。</summary>
      <param name="displayName" vsli:raw="The text to be displayed in the header.">要在標題中顯示的文字。</param>
      <param name="category" vsli:raw="The case-sensitive &lt;see cref=&quot;T:System.String&quot; /&gt; that defines the groupings of panel entries.">區分大小寫的 <see cref="T:System.String" />，定義面板項目的群組。</param>
    </member>
    <member name="T:System.ComponentModel.Design.DesignerActionItem">
      <summary vsli:raw="Provides the base class for types that represent a panel item on a smart tag panel.">為在智慧標籤面板上表示面板項目的型別提供基底類別。</summary>
    </member>
    <member name="M:System.ComponentModel.Design.DesignerActionItem.#ctor(System.String,System.String,System.String)">
      <summary vsli:raw="Initializes a new instance of the &lt;see cref=&quot;T:System.ComponentModel.Design.DesignerActionItem&quot; /&gt; class.">初始化 <see cref="T:System.ComponentModel.Design.DesignerActionItem" /> 類別的新執行個體。</summary>
      <param name="displayName" vsli:raw="The panel text for this item.">這個項目的面板文字。</param>
      <param name="category" vsli:raw="The case-sensitive &lt;see cref=&quot;T:System.String&quot; /&gt; that defines the groupings of panel entries.">區分大小寫的 <see cref="T:System.String" />，定義面板項目的群組。</param>
      <param name="description" vsli:raw="Supplemental text for this item, potentially used in ToolTips or the status bar.">這個項目的補充文字，可能會用於工具提示或狀態列。</param>
    </member>
    <member name="P:System.ComponentModel.Design.DesignerActionItem.AllowAssociate">
      <summary vsli:raw="Gets or sets a value indicating whether to allow this item to be placed into a group of items that have the same &lt;see cref=&quot;P:System.ComponentModel.Design.DesignerActionItem.Category&quot; /&gt; property value.">取得或設定值，指出是否允許這個項目置於具有相同 <see cref="P:System.ComponentModel.Design.DesignerActionItem.Category" /> 屬性值的項目群組中。</summary>
      <returns vsli:raw="&lt;see langword=&quot;true&quot; /&gt; if the item can be grouped; otherwise, &lt;see langword=&quot;false&quot; /&gt;. The default is &lt;see langword=&quot;false&quot; /&gt;.">如果可以將項目群組，則為 <see langword="true" />，否則為 <see langword="false" />。 預設為 <see langword="false" />。</returns>
    </member>
    <member name="P:System.ComponentModel.Design.DesignerActionItem.Category">
      <summary vsli:raw="Gets the group name for an item.">取得項目的群組名稱。</summary>
      <returns vsli:raw="A string that represents the group that the item is a member of.">表示項目所屬群組的字串。</returns>
    </member>
    <member name="P:System.ComponentModel.Design.DesignerActionItem.Description">
      <summary vsli:raw="Gets the supplemental text for the item.">取得項目的補充文字。</summary>
      <returns vsli:raw="A &lt;see cref=&quot;T:System.String&quot; /&gt; that contains the descriptive text for the item.">
        <see cref="T:System.String" />，包含項目的描述文字。</returns>
    </member>
    <member name="P:System.ComponentModel.Design.DesignerActionItem.DisplayName">
      <summary vsli:raw="Gets the text for this item.">取得這個項目的文字。</summary>
      <returns vsli:raw="A &lt;see cref=&quot;T:System.String&quot; /&gt; that contains the display text for the item.">
        <see cref="T:System.String" />，包含項目的顯示文字。</returns>
    </member>
    <member name="P:System.ComponentModel.Design.DesignerActionItem.Properties">
      <summary vsli:raw="Gets a reference to a collection that can be used to store programmer-defined key/value pairs.">取得集合的參考，可用於儲存程式設計人員定義的索引鍵/值組。</summary>
      <returns vsli:raw="A collection that implements &lt;see cref=&quot;T:System.Collections.IDictionary&quot; /&gt;.">實作 <see cref="T:System.Collections.IDictionary" /> 的集合。</returns>
    </member>
    <member name="P:System.ComponentModel.Design.DesignerActionItem.ShowInSourceView">
      <summary vsli:raw="Gets or sets a value that indicates whether this item appears in source code view.">取得或設定值，這個值表示此項目是否出現在原始程式碼檢視中。</summary>
      <returns vsli:raw="&lt;see langword=&quot;true&quot; /&gt; if this item appears in source code view; otherwise, &lt;see langword=&quot;false&quot; /&gt;. The default is &lt;see langword=&quot;true&quot; /&gt;.">如果這個項目出現在原始程式碼檢視中，則為 <see langword="true" />，否則為 <see langword="false" />。 預設為 <see langword="true" />。</returns>
    </member>
    <member name="T:System.ComponentModel.Design.DesignerActionItemCollection">
      <summary vsli:raw="Represents a collection of &lt;see cref=&quot;T:System.ComponentModel.Design.DesignerActionItem&quot; /&gt; objects.">表示 <see cref="T:System.ComponentModel.Design.DesignerActionItem" /> 物件的集合。</summary>
    </member>
    <member name="M:System.ComponentModel.Design.DesignerActionItemCollection.#ctor">
      <summary vsli:raw="Initializes a new instance of the &lt;see cref=&quot;T:System.ComponentModel.Design.DesignerActionItemCollection&quot; /&gt; class.">初始化 <see cref="T:System.ComponentModel.Design.DesignerActionItemCollection" /> 類別的新執行個體。</summary>
    </member>
    <member name="M:System.ComponentModel.Design.DesignerActionItemCollection.Add(System.ComponentModel.Design.DesignerActionItem)">
      <summary vsli:raw="Adds the supplied &lt;see cref=&quot;T:System.ComponentModel.Design.DesignerActionItem&quot; /&gt; to the current collection.">將提供的 <see cref="T:System.ComponentModel.Design.DesignerActionItem" /> 加入目前的集合。</summary>
      <param name="value" vsli:raw="The &lt;see cref=&quot;T:System.ComponentModel.Design.DesignerActionItem&quot; /&gt; to add.">要加入的 <see cref="T:System.ComponentModel.Design.DesignerActionItem" />。</param>
      <returns vsli:raw="The &lt;see cref=&quot;T:System.ComponentModel.Design.DesignerActionItemCollection&quot; /&gt; index at which the value has been added.">在該處加入值的 <see cref="T:System.ComponentModel.Design.DesignerActionItemCollection" /> 索引。</returns>
    </member>
    <member name="M:System.ComponentModel.Design.DesignerActionItemCollection.Contains(System.ComponentModel.Design.DesignerActionItem)">
      <summary vsli:raw="Determines whether the &lt;see cref=&quot;T:System.ComponentModel.Design.DesignerActionItemCollection&quot; /&gt; contains a specific element.">判斷 <see cref="T:System.ComponentModel.Design.DesignerActionItemCollection" /> 是否包含特定項目。</summary>
      <param name="value" vsli:raw="The &lt;see cref=&quot;T:System.ComponentModel.Design.DesignerActionItem&quot; /&gt; to locate in the &lt;see cref=&quot;T:System.ComponentModel.Design.DesignerActionItemCollection&quot; /&gt;.">要在 <see cref="T:System.ComponentModel.Design.DesignerActionItemCollection" /> 中尋找的 <see cref="T:System.ComponentModel.Design.DesignerActionItem" />。</param>
      <returns vsli:raw="&lt;see langword=&quot;true&quot; /&gt; if the &lt;see cref=&quot;T:System.ComponentModel.Design.DesignerActionItemCollection&quot; /&gt; contains the specified value; otherwise, &lt;see langword=&quot;false&quot; /&gt;.">如果 <see cref="T:System.ComponentModel.Design.DesignerActionItemCollection" /> 包含指定的值，則為 <see langword="true" />；否則為 <see langword="false" />。</returns>
    </member>
    <member name="M:System.ComponentModel.Design.DesignerActionItemCollection.CopyTo(System.ComponentModel.Design.DesignerActionItem[],System.Int32)">
      <summary vsli:raw="Copies the elements of the current collection into the supplied array, starting at the specified array index.">從指定的陣列索引開始，複製目前集合的元素至提供的陣列。</summary>
      <param name="array" vsli:raw="The one-dimensional &lt;see cref=&quot;T:System.ComponentModel.Design.DesignerActionItem&quot; /&gt; array that is the destination of the elements copied from the current collection. The array must have zero-based indexing.">一維 <see cref="T:System.ComponentModel.Design.DesignerActionItem" /> 陣列，是從目前集合複製的元素之目的端。 陣列必須有以零為起始的索引。</param>
      <param name="index" vsli:raw="The zero-based index in &lt;paramref name=&quot;array&quot; /&gt; at which copying begins.">
        <paramref name="array" /> 中以零起始的索引，即開始複製的位置。</param>
    </member>
    <member name="M:System.ComponentModel.Design.DesignerActionItemCollection.IndexOf(System.ComponentModel.Design.DesignerActionItem)">
      <summary vsli:raw="Determines the index of a specific item in the collection.">決定集合中指定項目的索引。</summary>
      <param name="value" vsli:raw="The &lt;see cref=&quot;T:System.ComponentModel.Design.DesignerActionItem&quot; /&gt; to locate in the collection.">要在集合中尋找的 <see cref="T:System.ComponentModel.Design.DesignerActionItem" />。</param>
      <returns vsli:raw="The zero-based index of the first occurrence of &lt;paramref name=&quot;value&quot; /&gt; within the entire &lt;see cref=&quot;T:System.ComponentModel.Design.DesignerActionItemCollection&quot; /&gt;, if found; otherwise, -1.">整個 <paramref name="value" /> 中第一個出現 <see cref="T:System.ComponentModel.Design.DesignerActionItemCollection" /> 之以零為起始的索引 (如有找到)，否則為 -1。</returns>
    </member>
    <member name="M:System.ComponentModel.Design.DesignerActionItemCollection.Insert(System.Int32,System.ComponentModel.Design.DesignerActionItem)">
      <summary vsli:raw="Inserts an element into the &lt;see cref=&quot;T:System.ComponentModel.Design.DesignerActionItemCollection&quot; /&gt; at the specified index.">將項目插入至 <see cref="T:System.ComponentModel.Design.DesignerActionItemCollection" /> 中指定的索引位置。</summary>
      <param name="index" vsli:raw="The zero-based index at which &lt;paramref name=&quot;value&quot; /&gt; should be inserted.">應在 <paramref name="value" /> 插入以零為起始的索引。</param>
      <param name="value" vsli:raw="The &lt;see cref=&quot;T:System.ComponentModel.Design.DesignerActionItem&quot; /&gt; to insert.">要插入的 <see cref="T:System.ComponentModel.Design.DesignerActionItem" />。</param>
    </member>
    <member name="M:System.ComponentModel.Design.DesignerActionItemCollection.Remove(System.ComponentModel.Design.DesignerActionItem)">
      <summary vsli:raw="Removes the first occurrence of a specific object from the &lt;see cref=&quot;T:System.ComponentModel.Design.DesignerActionItemCollection&quot; /&gt;.">從 <see cref="T:System.ComponentModel.Design.DesignerActionItemCollection" /> 移除特定物件之第一個符合的元素。</summary>
      <param name="value" vsli:raw="The &lt;see cref=&quot;T:System.ComponentModel.Design.DesignerActionItem&quot; /&gt; to remove from the &lt;see cref=&quot;T:System.ComponentModel.Design.DesignerActionItemCollection&quot; /&gt;.">要從 <see cref="T:System.ComponentModel.Design.DesignerActionItem" /> 移除的 <see cref="T:System.ComponentModel.Design.DesignerActionItemCollection" />。</param>
    </member>
    <member name="P:System.ComponentModel.Design.DesignerActionItemCollection.Item(System.Int32)">
      <summary vsli:raw="Gets or sets the element at the specified index.">在指定的索引位置上取得或設定項目。</summary>
      <param name="index" vsli:raw="The zero-based index of the element.">元素以零起始的索引。</param>
      <returns vsli:raw="The &lt;see cref=&quot;T:System.ComponentModel.Design.DesignerActionItem&quot; /&gt; at the specified index.">指定之索引處的 <see cref="T:System.ComponentModel.Design.DesignerActionItem" />。</returns>
    </member>
    <member name="T:System.ComponentModel.Design.DesignerActionList">
      <summary vsli:raw="Provides the base class for types that define a list of items used to create a smart tag panel.">提供型別的基底類別，該型別定義用於建立智慧標籤面板的項目清單。</summary>
    </member>
    <member name="M:System.ComponentModel.Design.DesignerActionList.#ctor(System.ComponentModel.IComponent)">
      <summary vsli:raw="Initializes a new instance of the &lt;see cref=&quot;T:System.ComponentModel.Design.DesignerActionList&quot; /&gt; class.">初始化 <see cref="T:System.ComponentModel.Design.DesignerActionList" /> 類別的新執行個體。</summary>
      <param name="component" vsli:raw="A component related to the &lt;see cref=&quot;T:System.ComponentModel.Design.DesignerActionList&quot; /&gt;.">與 <see cref="T:System.ComponentModel.Design.DesignerActionList" /> 相關的元件。</param>
    </member>
    <member name="M:System.ComponentModel.Design.DesignerActionList.GetService(System.Type)">
      <summary vsli:raw="Returns an object that represents a service provided by the component associated with the &lt;see cref=&quot;T:System.ComponentModel.Design.DesignerActionList&quot; /&gt;.">傳回物件，表示與 <see cref="T:System.ComponentModel.Design.DesignerActionList" /> 相關聯之元件提供的服務。</summary>
      <param name="serviceType" vsli:raw="A service provided by the &lt;see cref=&quot;T:System.ComponentModel.Component&quot; /&gt;.">
        <see cref="T:System.ComponentModel.Component" /> 所提供的服務。</param>
      <returns vsli:raw="An &lt;see cref=&quot;T:System.Object&quot; /&gt; that represents a service provided by the &lt;see cref=&quot;T:System.ComponentModel.Component&quot; /&gt;. This value is &lt;see langword=&quot;null&quot; /&gt; if the &lt;see cref=&quot;T:System.ComponentModel.Component&quot; /&gt; does not provide the specified service.">
        <see cref="T:System.Object" />，表示 <see cref="T:System.ComponentModel.Component" /> 所提供的服務。 如果 <see cref="T:System.ComponentModel.Component" /> 不提供指定的服務，這個值為 <see langword="null" />。</returns>
    </member>
    <member name="M:System.ComponentModel.Design.DesignerActionList.GetSortedActionItems">
      <summary vsli:raw="Returns the collection of &lt;see cref=&quot;T:System.ComponentModel.Design.DesignerActionItem&quot; /&gt; objects contained in the list.">傳回包含於清單中的 <see cref="T:System.ComponentModel.Design.DesignerActionItem" /> 物件集合。</summary>
      <returns vsli:raw="A &lt;see cref=&quot;T:System.ComponentModel.Design.DesignerActionItem&quot; /&gt; array that contains the items in this list.">
        <see cref="T:System.ComponentModel.Design.DesignerActionItem" /> 陣列，包含這個清單中的項目。</returns>
    </member>
    <member name="P:System.ComponentModel.Design.DesignerActionList.AutoShow">
      <summary vsli:raw="Gets or sets a value indicating whether the smart tag panel should automatically be displayed when it is created.">取得或設定值，指出智慧標籤面板是否應當在建立時自動顯示。</summary>
      <returns vsli:raw="&lt;see langword=&quot;true&quot; /&gt; if the panel should be shown when the owning component is created; otherwise, &lt;see langword=&quot;false&quot; /&gt;. The default is &lt;see langword=&quot;false&quot; /&gt;.">如果在建立主控元件時應當顯示該面板，則為 <see langword="true" />，否則為 <see langword="false" />。 預設為 <see langword="false" />。</returns>
    </member>
    <member name="P:System.ComponentModel.Design.DesignerActionList.Component">
      <summary vsli:raw="Gets the component related to &lt;see cref=&quot;T:System.ComponentModel.Design.DesignerActionList&quot; /&gt;.">取得與 <see cref="T:System.ComponentModel.Design.DesignerActionList" /> 相關的元件。</summary>
      <returns vsli:raw="A component related to &lt;see cref=&quot;T:System.ComponentModel.Design.DesignerActionList&quot; /&gt;.">與 <see cref="T:System.ComponentModel.Design.DesignerActionList" /> 相關的元件。</returns>
    </member>
    <member name="T:System.ComponentModel.Design.DesignerActionListCollection">
      <summary vsli:raw="Represents a collection of &lt;see cref=&quot;T:System.ComponentModel.Design.DesignerActionList&quot; /&gt; objects.">表示 <see cref="T:System.ComponentModel.Design.DesignerActionList" /> 物件的集合。</summary>
    </member>
    <member name="M:System.ComponentModel.Design.DesignerActionListCollection.#ctor">
      <summary vsli:raw="Initializes a new instance of the &lt;see cref=&quot;T:System.ComponentModel.Design.DesignerActionListCollection&quot; /&gt; class with default settings.">初始化具有預設設定之 <see cref="T:System.ComponentModel.Design.DesignerActionListCollection" /> 類別的新執行個體。</summary>
    </member>
    <member name="M:System.ComponentModel.Design.DesignerActionListCollection.#ctor(System.ComponentModel.Design.DesignerActionList[])">
      <summary vsli:raw="Initializes a new instance of the &lt;see cref=&quot;T:System.ComponentModel.Design.DesignerActionListCollection&quot; /&gt; class with the specified panel items.">使用指定的面板項目，初始化 <see cref="T:System.ComponentModel.Design.DesignerActionListCollection" /> 類別的新執行個體。</summary>
      <param name="value" vsli:raw="The array of &lt;see cref=&quot;T:System.ComponentModel.Design.DesignerActionList&quot; /&gt; objects to populate the collection.">要填入集合的 <see cref="T:System.ComponentModel.Design.DesignerActionList" /> 物件陣列。</param>
      <exception cref="T:System.ArgumentNullException" vsli:raw="&lt;paramref name=&quot;value&quot; /&gt; is &lt;see langword=&quot;null&quot; /&gt;.">
        <paramref name="value" /> 為 <see langword="null" />。</exception>
    </member>
    <member name="M:System.ComponentModel.Design.DesignerActionListCollection.Add(System.ComponentModel.Design.DesignerActionList)">
      <summary vsli:raw="Adds the supplied &lt;see cref=&quot;T:System.ComponentModel.Design.DesignerActionList&quot; /&gt; to the current collection.">將提供的 <see cref="T:System.ComponentModel.Design.DesignerActionList" /> 加入目前的集合。</summary>
      <param name="value" vsli:raw="The &lt;see cref=&quot;T:System.ComponentModel.Design.DesignerActionList&quot; /&gt; to add.">要加入的 <see cref="T:System.ComponentModel.Design.DesignerActionList" />。</param>
      <returns vsli:raw="The position into which the new element is inserted into the collection's internal list.">新元素插入至集合內部清單的位置。</returns>
    </member>
    <member name="M:System.ComponentModel.Design.DesignerActionListCollection.AddRange(System.ComponentModel.Design.DesignerActionList[])">
      <summary vsli:raw="Adds the elements of the supplied &lt;see cref=&quot;T:System.ComponentModel.Design.DesignerActionList&quot; /&gt; array to the end of the current collection.">將提供的 <see cref="T:System.ComponentModel.Design.DesignerActionList" /> 陣列元素加入至目前集合的結尾處。</summary>
      <param name="value" vsli:raw="The array of &lt;see cref=&quot;T:System.ComponentModel.Design.DesignerActionList&quot; /&gt; objects to add.">要新增的 <see cref="T:System.ComponentModel.Design.DesignerActionList" /> 物件陣列。</param>
      <exception cref="T:System.ArgumentNullException" vsli:raw="&lt;paramref name=&quot;value&quot; /&gt; is &lt;see langword=&quot;null&quot; /&gt;.">
        <paramref name="value" /> 為 <see langword="null" />。</exception>
    </member>
    <member name="M:System.ComponentModel.Design.DesignerActionListCollection.AddRange(System.ComponentModel.Design.DesignerActionListCollection)">
      <summary vsli:raw="Adds the elements of the supplied &lt;see cref=&quot;T:System.ComponentModel.Design.DesignerActionListCollection&quot; /&gt; to the end of the current collection.">將提供的 <see cref="T:System.ComponentModel.Design.DesignerActionListCollection" /> 元素加入至目前集合的結尾處。</summary>
      <param name="value" vsli:raw="The &lt;see cref=&quot;T:System.ComponentModel.Design.DesignerActionListCollection&quot; /&gt; to add.">要加入的 <see cref="T:System.ComponentModel.Design.DesignerActionListCollection" />。</param>
      <exception cref="T:System.ArgumentNullException" vsli:raw="&lt;paramref name=&quot;value&quot; /&gt; is &lt;see langword=&quot;null&quot; /&gt;.">
        <paramref name="value" /> 為 <see langword="null" />。</exception>
    </member>
    <member name="M:System.ComponentModel.Design.DesignerActionListCollection.Contains(System.ComponentModel.Design.DesignerActionList)">
      <summary vsli:raw="Indicates whether the collection contains a specific value.">指出集合是否包含特定的值。</summary>
      <param name="value" vsli:raw="The &lt;see cref=&quot;T:System.ComponentModel.Design.DesignerActionList&quot; /&gt; to search for.">要搜尋的 <see cref="T:System.ComponentModel.Design.DesignerActionList" />。</param>
      <returns vsli:raw="&lt;see langword=&quot;true&quot; /&gt; if the collection contains the specified value; otherwise, &lt;see langword=&quot;false&quot; /&gt;.">如果集合包含指定的值，則為 <see langword="true" />，否則為 <see langword="false" />。</returns>
    </member>
    <member name="M:System.ComponentModel.Design.DesignerActionListCollection.CopyTo(System.ComponentModel.Design.DesignerActionList[],System.Int32)">
      <summary vsli:raw="Copies the elements of the current collection into the supplied array, starting at the specified array index.">從指定的陣列索引開始，複製目前集合的元素至提供的陣列。</summary>
      <param name="array" vsli:raw="The one-dimensional array of type &lt;see cref=&quot;T:System.ComponentModel.Design.DesignerActionList&quot; /&gt; that is the destination of the elements copied from the current collection. The array must have zero-based indexing.">
        <see cref="T:System.ComponentModel.Design.DesignerActionList" /> 型別的一維陣列，該陣列是從目前集合複製的元素目的端。 陣列必須有以零為起始的索引。</param>
      <param name="index" vsli:raw="The zero-based index in &lt;paramref name=&quot;array&quot; /&gt; at which copying begins.">
        <paramref name="array" /> 中以零起始的索引，即開始複製的位置。</param>
      <exception cref="T:System.ArgumentNullException" vsli:raw="&lt;paramref name=&quot;array&quot; /&gt; is &lt;see langword=&quot;null&quot; /&gt;.">
        <paramref name="array" /> 為 <see langword="null" />。</exception>
      <exception cref="T:System.ArgumentOutOfRangeException" vsli:raw="&lt;paramref name=&quot;index&quot; /&gt; is less than 0.">
        <paramref name="index" /> 小於 0。</exception>
      <exception cref="T:System.ArgumentException" vsli:raw="&lt;paramref name=&quot;array&quot; /&gt; is multidimensional.  &#xA;  &#xA; -or-  &#xA;  &#xA; The number of elements in the current collection is greater than the available space from &lt;paramref name=&quot;index&quot; /&gt; to the end of the destination array.">
        <paramref name="array" /> 是多維的。  
  
-或- 
目前集合中的元素數目大於從 <paramref name="index" /> 到目的陣列結尾的可用空間。</exception>
      <exception cref="T:System.InvalidCastException" vsli:raw="A problem occurred casting the elements of the current collection to the type of the destination array, perhaps as the result of a failed downcast.">將目前集合的元素轉型為目的陣列的型別時發生問題，可能由失敗的向下轉型所致。</exception>
    </member>
    <member name="M:System.ComponentModel.Design.DesignerActionListCollection.IndexOf(System.ComponentModel.Design.DesignerActionList)">
      <summary vsli:raw="Determines the index of a specific item in the collection.">決定集合中指定項目的索引。</summary>
      <param name="value" vsli:raw="The &lt;see cref=&quot;T:System.ComponentModel.Design.DesignerActionList&quot; /&gt; to locate in the collection.">要在集合中尋找的 <see cref="T:System.ComponentModel.Design.DesignerActionList" />。</param>
      <returns vsli:raw="The index of &lt;paramref name=&quot;value&quot; /&gt; if found in the internal list; otherwise, -1.">如果在內部清單中找到，則為 <paramref name="value" /> 的索引，否則為 -1。</returns>
    </member>
    <member name="M:System.ComponentModel.Design.DesignerActionListCollection.Insert(System.Int32,System.ComponentModel.Design.DesignerActionList)">
      <summary vsli:raw="Inserts the supplied &lt;see cref=&quot;T:System.ComponentModel.Design.DesignerActionList&quot; /&gt; into the collection at the specified position.">將提供的 <see cref="T:System.ComponentModel.Design.DesignerActionList" /> 插入集合中的指定位置。</summary>
      <param name="index" vsli:raw="The zero-based index at which &lt;paramref name=&quot;value&quot; /&gt; should be inserted.">應在 <paramref name="value" /> 插入以零為起始的索引。</param>
      <param name="value" vsli:raw="The &lt;see cref=&quot;T:System.ComponentModel.Design.DesignerActionList&quot; /&gt; to insert into the collection.">要插入至集合的 <see cref="T:System.ComponentModel.Design.DesignerActionList" />。</param>
      <exception cref="T:System.ArgumentOutOfRangeException" vsli:raw="&lt;paramref name=&quot;index&quot; /&gt; is less than 0 or greater than the count of elements in the current collection.">
        <paramref name="index" /> 小於零，或大於目前集合中的元素計數。</exception>
    </member>
    <member name="M:System.ComponentModel.Design.DesignerActionListCollection.OnValidate(System.Object)">
      <summary vsli:raw="Performs additional custom processes when validating a value.">當驗證數值時，執行額外的自訂處理序。</summary>
      <param name="value" vsli:raw="The object to validate.">要驗證的物件。</param>
    </member>
    <member name="M:System.ComponentModel.Design.DesignerActionListCollection.Remove(System.ComponentModel.Design.DesignerActionList)">
      <summary vsli:raw="Removes the first occurrence of a specific &lt;see cref=&quot;T:System.ComponentModel.Design.DesignerActionList&quot; /&gt; from the collection.">從集合移除特定 <see cref="T:System.ComponentModel.Design.DesignerActionList" /> 的第一個元素。</summary>
      <param name="value" vsli:raw="The &lt;see cref=&quot;T:System.ComponentModel.Design.DesignerActionList&quot; /&gt; to remove from the current collection.">要從目前集合中移除的 <see cref="T:System.ComponentModel.Design.DesignerActionList" />。</param>
    </member>
    <member name="P:System.ComponentModel.Design.DesignerActionListCollection.Item(System.Int32)">
      <summary vsli:raw="Gets or sets the element at the specified index.">在指定的索引位置上取得或設定項目。</summary>
      <param name="index" vsli:raw="The zero-based index of the element.">元素以零起始的索引。</param>
      <returns vsli:raw="The &lt;see cref=&quot;T:System.ComponentModel.Design.DesignerActionList&quot; /&gt; at the specified index.">指定之索引處的 <see cref="T:System.ComponentModel.Design.DesignerActionList" />。</returns>
    </member>
    <member name="T:System.ComponentModel.Design.DesignerActionListsChangedEventArgs">
      <summary vsli:raw="Provides data for the &lt;see cref=&quot;E:System.ComponentModel.Design.DesignerActionService.DesignerActionListsChanged&quot; /&gt; event.">提供 <see cref="E:System.ComponentModel.Design.DesignerActionService.DesignerActionListsChanged" /> 事件的資料。</summary>
    </member>
    <member name="M:System.ComponentModel.Design.DesignerActionListsChangedEventArgs.#ctor(System.Object,System.ComponentModel.Design.DesignerActionListsChangedType,System.ComponentModel.Design.DesignerActionListCollection)">
      <summary vsli:raw="Initializes a new instance of the &lt;see cref=&quot;T:System.ComponentModel.Design.DesignerActionListsChangedEventArgs&quot; /&gt; class.">初始化 <see cref="T:System.ComponentModel.Design.DesignerActionListsChangedEventArgs" /> 類別的新執行個體。</summary>
      <param name="relatedObject" vsli:raw="The object that is associated with the collection.">與集合相關聯的物件。</param>
      <param name="changeType" vsli:raw="A value that specifies whether a &lt;see cref=&quot;T:System.ComponentModel.Design.DesignerActionList&quot; /&gt; has been added or removed from the collection.">值，指定是否已加入 <see cref="T:System.ComponentModel.Design.DesignerActionList" /> 或已將其從集合中移除。</param>
      <param name="actionLists" vsli:raw="The collection of list elements after the action has been applied.">套用動作後的清單項目集合。</param>
    </member>
    <member name="P:System.ComponentModel.Design.DesignerActionListsChangedEventArgs.ActionLists">
      <summary vsli:raw="Gets the collection of &lt;see cref=&quot;T:System.ComponentModel.Design.DesignerActionList&quot; /&gt; objects associated with this event.">取得與這個事件相關聯的 <see cref="T:System.ComponentModel.Design.DesignerActionList" /> 物件集合。</summary>
      <returns vsli:raw="A &lt;see cref=&quot;T:System.ComponentModel.Design.DesignerActionListCollection&quot; /&gt; that represents the current state of the collection.">
        <see cref="T:System.ComponentModel.Design.DesignerActionListCollection" />，表示集合的目前狀態。</returns>
    </member>
    <member name="P:System.ComponentModel.Design.DesignerActionListsChangedEventArgs.ChangeType">
      <summary vsli:raw="Gets a flag indicating whether an element has been added or removed from the collection of &lt;see cref=&quot;T:System.ComponentModel.Design.DesignerActionList&quot; /&gt; objects.">取得旗標，指出是否已加入或從 <see cref="T:System.ComponentModel.Design.DesignerActionList" /> 物件的集合中移除項目。</summary>
      <returns vsli:raw="A &lt;see cref=&quot;T:System.ComponentModel.Design.DesignerActionListsChangedType&quot; /&gt; that indicates the type of change.">
        <see cref="T:System.ComponentModel.Design.DesignerActionListsChangedType" />，表示變更的類型。</returns>
    </member>
    <member name="P:System.ComponentModel.Design.DesignerActionListsChangedEventArgs.RelatedObject">
      <summary vsli:raw="Gets the object that is associated with the collection of &lt;see cref=&quot;T:System.ComponentModel.Design.DesignerActionList&quot; /&gt; objects.">取得與 <see cref="T:System.ComponentModel.Design.DesignerActionList" /> 物件集合相關聯的物件。</summary>
      <returns vsli:raw="The &lt;see cref=&quot;T:System.Object&quot; /&gt; associated with the managed &lt;see cref=&quot;T:System.ComponentModel.Design.DesignerActionListCollection&quot; /&gt;.">與 Managed <see cref="T:System.Object" /> 相關聯的 <see cref="T:System.ComponentModel.Design.DesignerActionListCollection" />。</returns>
    </member>
    <member name="T:System.ComponentModel.Design.DesignerActionListsChangedEventHandler">
      <summary vsli:raw="Represents the method that will handle the &lt;see cref=&quot;E:System.ComponentModel.Design.DesignerActionService.DesignerActionListsChanged&quot; /&gt; event of a &lt;see cref=&quot;T:System.ComponentModel.Design.DesignerActionService&quot; /&gt;. This class cannot be inherited.">代表將處理 <see cref="E:System.ComponentModel.Design.DesignerActionService.DesignerActionListsChanged" /> 之 <see cref="T:System.ComponentModel.Design.DesignerActionService" /> 事件的方法。 此類別無法獲得繼承。</summary>
      <param name="sender" vsli:raw="The source of the event.">事件的來源。</param>
      <param name="e" vsli:raw="A &lt;see cref=&quot;T:System.ComponentModel.Design.DesignerActionListsChangedEventArgs&quot; /&gt; that contains the event data.">
        <see cref="T:System.ComponentModel.Design.DesignerActionListsChangedEventArgs" />，其中包含事件資料。</param>
    </member>
    <member name="T:System.ComponentModel.Design.DesignerActionListsChangedType">
      <summary vsli:raw="Specifies the type of change occurring in a collection of &lt;see cref=&quot;T:System.ComponentModel.Design.DesignerActionList&quot; /&gt; objects.">指定 <see cref="T:System.ComponentModel.Design.DesignerActionList" /> 物件的集合中發生的變更類型。</summary>
    </member>
    <member name="F:System.ComponentModel.Design.DesignerActionListsChangedType.ActionListsAdded">
      <summary vsli:raw="One or more &lt;see cref=&quot;T:System.ComponentModel.Design.DesignerActionList&quot; /&gt; objects have been added to the collection.">一或多個 <see cref="T:System.ComponentModel.Design.DesignerActionList" /> 物件已加入集合。</summary>
    </member>
    <member name="F:System.ComponentModel.Design.DesignerActionListsChangedType.ActionListsRemoved">
      <summary vsli:raw="One or more &lt;see cref=&quot;T:System.ComponentModel.Design.DesignerActionList&quot; /&gt; objects have been removed from the collection.">一或多個 <see cref="T:System.ComponentModel.Design.DesignerActionList" /> 物件已從集合中移除。</summary>
    </member>
    <member name="T:System.ComponentModel.Design.DesignerActionMethodItem">
      <summary vsli:raw="Represents a smart tag panel item that is associated with a method in a class derived from &lt;see cref=&quot;T:System.ComponentModel.Design.DesignerActionList&quot; /&gt;.">表示智慧標籤面板項目，該項目與衍生自 <see cref="T:System.ComponentModel.Design.DesignerActionList" /> 之類別中的方法相關聯。</summary>
    </member>
    <member name="M:System.ComponentModel.Design.DesignerActionMethodItem.#ctor(System.ComponentModel.Design.DesignerActionList,System.String,System.String)">
      <summary vsli:raw="Initializes a new instance of the &lt;see cref=&quot;T:System.ComponentModel.Design.DesignerActionMethodItem&quot; /&gt; class, with the specified method and display names.">使用指定的方法和顯示名稱，初始化 <see cref="T:System.ComponentModel.Design.DesignerActionMethodItem" /> 類別的新執行個體。</summary>
      <param name="actionList" vsli:raw="The &lt;see cref=&quot;T:System.ComponentModel.Design.DesignerActionList&quot; /&gt; that contains the method this item is associated with.">包含與其此項目關聯方法的 <see cref="T:System.ComponentModel.Design.DesignerActionList" />。</param>
      <param name="memberName" vsli:raw="The case-sensitive name of the method in the class derived from &lt;see cref=&quot;T:System.ComponentModel.Design.DesignerActionList&quot; /&gt; to invoke through the panel item.">在類別 (衍生自 <see cref="T:System.ComponentModel.Design.DesignerActionList" />) 中方法的區分大小寫名稱，可透過面板項目叫用。</param>
      <param name="displayName" vsli:raw="The panel text for this item.">這個項目的面板文字。</param>
    </member>
    <member name="M:System.ComponentModel.Design.DesignerActionMethodItem.#ctor(System.ComponentModel.Design.DesignerActionList,System.String,System.String,System.Boolean)">
      <summary vsli:raw="Initializes a new instance of the &lt;see cref=&quot;T:System.ComponentModel.Design.DesignerActionMethodItem&quot; /&gt; class, with the specified method and display names, and a flag that indicates whether the item should appear in other user interface contexts.">使用指定的方法和顯示名稱，以及旗標 (指出項目是否應出現在其他使用者介面內容中)，初始化 <see cref="T:System.ComponentModel.Design.DesignerActionMethodItem" /> 類別的新執行個體。</summary>
      <param name="actionList" vsli:raw="The &lt;see cref=&quot;T:System.ComponentModel.Design.DesignerActionList&quot; /&gt; that contains the method this item is associated with.">包含與其此項目關聯方法的 <see cref="T:System.ComponentModel.Design.DesignerActionList" />。</param>
      <param name="memberName" vsli:raw="The case-sensitive name of the method in the class derived from &lt;see cref=&quot;T:System.ComponentModel.Design.DesignerActionList&quot; /&gt; to invoke through the panel item.">在類別 (衍生自 <see cref="T:System.ComponentModel.Design.DesignerActionList" />) 中方法的區分大小寫名稱，可透過面板項目叫用。</param>
      <param name="displayName" vsli:raw="The panel text for this item.">這個項目的面板文字。</param>
      <param name="includeAsDesignerVerb" vsli:raw="A flag that specifies whether to also treat the associated method as a designer verb.">旗標，指定是否也將相關聯方法視為設計工具動詞命令。</param>
    </member>
    <member name="M:System.ComponentModel.Design.DesignerActionMethodItem.#ctor(System.ComponentModel.Design.DesignerActionList,System.String,System.String,System.String)">
      <summary vsli:raw="Initializes a new instance of the &lt;see cref=&quot;T:System.ComponentModel.Design.DesignerActionMethodItem&quot; /&gt; class, with the specified method, display, and category names.">使用指定的方法、顯示和分類名稱，初始化 <see cref="T:System.ComponentModel.Design.DesignerActionMethodItem" /> 類別的新執行個體。</summary>
      <param name="actionList" vsli:raw="The &lt;see cref=&quot;T:System.ComponentModel.Design.DesignerActionList&quot; /&gt; that contains the method this item is associated with.">包含與其此項目關聯方法的 <see cref="T:System.ComponentModel.Design.DesignerActionList" />。</param>
      <param name="memberName" vsli:raw="The case-sensitive name of the method in the class derived from &lt;see cref=&quot;T:System.ComponentModel.Design.DesignerActionList&quot; /&gt; to invoke through the panel item.">在類別 (衍生自 <see cref="T:System.ComponentModel.Design.DesignerActionList" />) 中方法的區分大小寫名稱，可透過面板項目叫用。</param>
      <param name="displayName" vsli:raw="The panel text for this item.">這個項目的面板文字。</param>
      <param name="category" vsli:raw="The case-sensitive &lt;see cref=&quot;T:System.String&quot; /&gt; used to group similar items on the panel.">區分大小寫的 <see cref="T:System.String" /> 是用於群組面板上類似的項目。</param>
    </member>
    <member name="M:System.ComponentModel.Design.DesignerActionMethodItem.#ctor(System.ComponentModel.Design.DesignerActionList,System.String,System.String,System.String,System.Boolean)">
      <summary vsli:raw="Initializes a new instance of the &lt;see cref=&quot;T:System.ComponentModel.Design.DesignerActionMethodItem&quot; /&gt; class, with the specified method, display, and category names, and a flag that indicates whether the item should appear in other user interface contexts.">使用指定的方法、顯示和分類名稱，以及旗標 (指出項目是否應出現在其他使用者介面內容中)，初始化 <see cref="T:System.ComponentModel.Design.DesignerActionMethodItem" /> 類別的新執行個體。</summary>
      <param name="actionList" vsli:raw="The &lt;see cref=&quot;T:System.ComponentModel.Design.DesignerActionList&quot; /&gt; that contains the method this item is associated with.">包含與其此項目關聯方法的 <see cref="T:System.ComponentModel.Design.DesignerActionList" />。</param>
      <param name="memberName" vsli:raw="The case-sensitive name of the method in the class derived from &lt;see cref=&quot;T:System.ComponentModel.Design.DesignerActionList&quot; /&gt; to invoke through the panel item.">在類別 (衍生自 <see cref="T:System.ComponentModel.Design.DesignerActionList" />) 中方法的區分大小寫名稱，可透過面板項目叫用。</param>
      <param name="displayName" vsli:raw="The panel text for this item.">這個項目的面板文字。</param>
      <param name="category" vsli:raw="The case-sensitive &lt;see cref=&quot;T:System.String&quot; /&gt; used to group similar items on the panel.">區分大小寫的 <see cref="T:System.String" /> 是用於群組面板上類似的項目。</param>
      <param name="includeAsDesignerVerb" vsli:raw="A flag that specifies whether to also treat the associated method as a designer verb for the associated component.">旗標，指定是否也將相關聯方法視為相關聯元件之設計工具動詞命令。</param>
    </member>
    <member name="M:System.ComponentModel.Design.DesignerActionMethodItem.#ctor(System.ComponentModel.Design.DesignerActionList,System.String,System.String,System.String,System.String)">
      <summary vsli:raw="Initializes a new instance of the &lt;see cref=&quot;T:System.ComponentModel.Design.DesignerActionMethodItem&quot; /&gt; class, with the specified method and category names, and display and description text.">使用指定的方法和分類名稱，以及顯示和說明文字，初始化 <see cref="T:System.ComponentModel.Design.DesignerActionMethodItem" /> 類別的新執行個體。</summary>
      <param name="actionList" vsli:raw="The &lt;see cref=&quot;T:System.ComponentModel.Design.DesignerActionList&quot; /&gt; that contains the method this item is associated with.">包含與其此項目關聯方法的 <see cref="T:System.ComponentModel.Design.DesignerActionList" />。</param>
      <param name="memberName" vsli:raw="The case-sensitive name of the method in the class derived from &lt;see cref=&quot;T:System.ComponentModel.Design.DesignerActionList&quot; /&gt; to invoke through the panel item.">在類別 (衍生自 <see cref="T:System.ComponentModel.Design.DesignerActionList" />) 中方法的區分大小寫名稱，可透過面板項目叫用。</param>
      <param name="displayName" vsli:raw="The panel text for this item.">這個項目的面板文字。</param>
      <param name="category" vsli:raw="The case-sensitive &lt;see cref=&quot;T:System.String&quot; /&gt; used to group similar items on the panel.">區分大小寫的 <see cref="T:System.String" /> 是用於群組面板上類似的項目。</param>
      <param name="description" vsli:raw="Supplemental text for this item, used in ToolTips or the status bar.">這個項目的補充文字，用於工具提示或狀態列。</param>
    </member>
    <member name="M:System.ComponentModel.Design.DesignerActionMethodItem.#ctor(System.ComponentModel.Design.DesignerActionList,System.String,System.String,System.String,System.String,System.Boolean)">
      <summary vsli:raw="Initializes a new instance of the &lt;see cref=&quot;T:System.ComponentModel.Design.DesignerActionMethodItem&quot; /&gt; class, with the specified method and category names, display and description text, and a flag that indicates whether the item should appear in other user interface contexts.">使用指定的方法和分類名稱、顯示和說明文字，以及旗標 (指出項目是否應出現在其他使用者介面內容中)，初始化 <see cref="T:System.ComponentModel.Design.DesignerActionMethodItem" /> 類別的新執行個體。</summary>
      <param name="actionList" vsli:raw="The &lt;see cref=&quot;T:System.ComponentModel.Design.DesignerActionList&quot; /&gt; that contains the method this item is associated with.">包含與其此項目關聯方法的 <see cref="T:System.ComponentModel.Design.DesignerActionList" />。</param>
      <param name="memberName" vsli:raw="The case-sensitive name of the method in the class derived from &lt;see cref=&quot;T:System.ComponentModel.Design.DesignerActionList&quot; /&gt; to invoke through the panel item.">在類別 (衍生自 <see cref="T:System.ComponentModel.Design.DesignerActionList" />) 中方法的區分大小寫名稱，可透過面板項目叫用。</param>
      <param name="displayName" vsli:raw="The panel text for this item.">這個項目的面板文字。</param>
      <param name="category" vsli:raw="The case-sensitive &lt;see cref=&quot;T:System.String&quot; /&gt; used to group similar items on the panel.">區分大小寫的 <see cref="T:System.String" /> 是用於群組面板上類似的項目。</param>
      <param name="description" vsli:raw="Supplemental text for this item, used in ToolTips or the status bar.">這個項目的補充文字，用於工具提示或狀態列。</param>
      <param name="includeAsDesignerVerb" vsli:raw="A flag that specifies whether to also treat the associated method as a designer verb for the associated component.">旗標，指定是否也將相關聯方法視為相關聯元件之設計工具動詞命令。</param>
    </member>
    <member name="M:System.ComponentModel.Design.DesignerActionMethodItem.Invoke">
      <summary vsli:raw="Programmatically executes the method associated with the &lt;see cref=&quot;T:System.ComponentModel.Design.DesignerActionMethodItem&quot; /&gt;.">以程式設計的方式執行與 <see cref="T:System.ComponentModel.Design.DesignerActionMethodItem" /> 相關聯的方法。</summary>
      <exception cref="T:System.InvalidOperationException" vsli:raw="The method, named in &lt;see cref=&quot;P:System.ComponentModel.Design.DesignerActionMethodItem.MemberName&quot; /&gt; cannot be found.">找不到 <see cref="P:System.ComponentModel.Design.DesignerActionMethodItem.MemberName" /> 中命名的方法。</exception>
    </member>
    <member name="P:System.ComponentModel.Design.DesignerActionMethodItem.IncludeAsDesignerVerb">
      <summary vsli:raw="Gets a value that indicates the &lt;see cref=&quot;T:System.ComponentModel.Design.DesignerActionMethodItem&quot; /&gt; should appear in other user interface contexts.">取得值，指出 <see cref="T:System.ComponentModel.Design.DesignerActionMethodItem" /> 應出現在其他使用者介面內容中。</summary>
      <returns vsli:raw="&lt;see langword=&quot;true&quot; /&gt; if the item is to be used in shortcut menus; otherwise, &lt;see langword=&quot;false&quot; /&gt;. The default is &lt;see langword=&quot;false&quot; /&gt;.">如果項目是要用於捷徑功能表中，則為 <see langword="true" />，否則為 <see langword="false" />。 預設為 <see langword="false" />。</returns>
    </member>
    <member name="P:System.ComponentModel.Design.DesignerActionMethodItem.MemberName">
      <summary vsli:raw="Gets the name of the method that this &lt;see cref=&quot;T:System.ComponentModel.Design.DesignerActionMethodItem&quot; /&gt; is associated with.">取得與這個 <see cref="T:System.ComponentModel.Design.DesignerActionMethodItem" /> 相關聯之方法的名稱。</summary>
      <returns vsli:raw="A &lt;see cref=&quot;T:System.String&quot; /&gt; that contains the name of the associated method.">
        <see cref="T:System.String" />，包含相關聯方法的名稱。</returns>
    </member>
    <member name="P:System.ComponentModel.Design.DesignerActionMethodItem.RelatedComponent">
      <summary vsli:raw="Gets or sets a component that contributes its &lt;see cref=&quot;T:System.ComponentModel.Design.DesignerActionMethodItem&quot; /&gt; objects to the current panel.">取得或設定元件，該元件將其 <see cref="T:System.ComponentModel.Design.DesignerActionMethodItem" /> 物件提供給目前的面板。</summary>
      <returns vsli:raw="The contributing component, which should have an associated designer that supplies items.">提供項目的元件，該元件應當具有提供項目的相關聯設計工具。</returns>
    </member>
    <member name="T:System.ComponentModel.Design.DesignerActionPropertyItem">
      <summary vsli:raw="Represents a panel item that is associated with a property in a class derived from &lt;see cref=&quot;T:System.ComponentModel.Design.DesignerActionList&quot; /&gt;. This class cannot be inherited.">代表與從 <see cref="T:System.ComponentModel.Design.DesignerActionList" /> 衍生之類別中屬性相關聯的面板項目。 此類別無法獲得繼承。</summary>
    </member>
    <member name="M:System.ComponentModel.Design.DesignerActionPropertyItem.#ctor(System.String,System.String)">
      <summary vsli:raw="Initializes a new instance of the &lt;see cref=&quot;T:System.ComponentModel.Design.DesignerActionPropertyItem&quot; /&gt; class, with the specified property and display names.">使用指定的屬性和顯示名稱，初始化 <see cref="T:System.ComponentModel.Design.DesignerActionPropertyItem" /> 類別的新執行個體。</summary>
      <param name="memberName" vsli:raw="The case-sensitive name of the property associated with this panel item.">與這個面板項目相關聯之屬性的名稱 (區分大小寫)。</param>
      <param name="displayName" vsli:raw="The panel text for this item.">這個項目的面板文字。</param>
    </member>
    <member name="M:System.ComponentModel.Design.DesignerActionPropertyItem.#ctor(System.String,System.String,System.String)">
      <summary vsli:raw="Initializes a new instance of the &lt;see cref=&quot;T:System.ComponentModel.Design.DesignerActionPropertyItem&quot; /&gt; class, with the specified property and category names, and display text.">使用指定的屬性和分類名稱，以及顯示文字，初始化 <see cref="T:System.ComponentModel.Design.DesignerActionPropertyItem" /> 類別的新執行個體。</summary>
      <param name="memberName" vsli:raw="The case-sensitive name of the property associated with this panel item.">與這個面板項目相關聯之屬性的名稱 (區分大小寫)。</param>
      <param name="displayName" vsli:raw="The panel text for this item.">這個項目的面板文字。</param>
      <param name="category" vsli:raw="The case-sensitive &lt;see cref=&quot;T:System.String&quot; /&gt; used to group similar items on the panel.">區分大小寫的 <see cref="T:System.String" /> 是用於群組面板上類似的項目。</param>
    </member>
    <member name="M:System.ComponentModel.Design.DesignerActionPropertyItem.#ctor(System.String,System.String,System.String,System.String)">
      <summary vsli:raw="Initializes a new instance of the &lt;see cref=&quot;T:System.ComponentModel.Design.DesignerActionPropertyItem&quot; /&gt; class, with the specified property and category names, and display and description text.">使用指定的屬性和分類名稱，以及顯示和說明文字，初始化 <see cref="T:System.ComponentModel.Design.DesignerActionPropertyItem" /> 類別的新執行個體。</summary>
      <param name="memberName" vsli:raw="The case-sensitive name of the property associated with this panel item.">與這個面板項目相關聯之屬性的名稱 (區分大小寫)。</param>
      <param name="displayName" vsli:raw="The panel text for this item.">這個項目的面板文字。</param>
      <param name="category" vsli:raw="The case-sensitive &lt;see cref=&quot;T:System.String&quot; /&gt; used to group similar items on the panel.">區分大小寫的 <see cref="T:System.String" /> 是用於群組面板上類似的項目。</param>
      <param name="description" vsli:raw="Supplemental text for this item, used in ToolTips or the status bar.">這個項目的補充文字，用於工具提示或狀態列。</param>
    </member>
    <member name="P:System.ComponentModel.Design.DesignerActionPropertyItem.MemberName">
      <summary vsli:raw="Gets the name of the property that this item is associated with.">取得與這個項目相關聯之屬性的名稱。</summary>
      <returns vsli:raw="A &lt;see cref=&quot;T:System.String&quot; /&gt; that contains the name of the associated property.">
        <see cref="T:System.String" />，包含相關聯屬性的名稱。</returns>
    </member>
    <member name="P:System.ComponentModel.Design.DesignerActionPropertyItem.RelatedComponent">
      <summary vsli:raw="Gets or sets a component that contributes its items to the current panel.">取得或設定元件，該元件將其項目提供給目前的面板。</summary>
      <returns vsli:raw="The contributing component, which should have an associated designer that supplies &lt;see cref=&quot;T:System.ComponentModel.Design.DesignerActionItem&quot; /&gt; objects.">提供項目的元件，該元件應當具有提供 <see cref="T:System.ComponentModel.Design.DesignerActionItem" /> 物件的相關聯設計工具。</returns>
    </member>
    <member name="T:System.ComponentModel.Design.DesignerActionService">
      <summary vsli:raw="Establishes a design-time service that manages the collection of &lt;see cref=&quot;T:System.ComponentModel.Design.DesignerActionItem&quot; /&gt; objects for components.">建立管理元件之 <see cref="T:System.ComponentModel.Design.DesignerActionItem" /> 物件集合的設計階段服務。</summary>
    </member>
    <member name="E:System.ComponentModel.Design.DesignerActionService.DesignerActionListsChanged">
      <summary vsli:raw="Occurs when a &lt;see cref=&quot;T:System.ComponentModel.Design.DesignerActionList&quot; /&gt; is removed or added for any component.">發生於移除或加入任何元件的 <see cref="T:System.ComponentModel.Design.DesignerActionList" /> 時。</summary>
    </member>
    <member name="M:System.ComponentModel.Design.DesignerActionService.#ctor(System.IServiceProvider)">
      <summary vsli:raw="Initializes a new instance of the &lt;see cref=&quot;T:System.ComponentModel.Design.DesignerActionService&quot; /&gt; class.">初始化 <see cref="T:System.ComponentModel.Design.DesignerActionService" /> 類別的新執行個體。</summary>
      <param name="serviceProvider" vsli:raw="The service provider for the current design-time environment.">目前設計階段環境的服務提供者。</param>
    </member>
    <member name="M:System.ComponentModel.Design.DesignerActionService.Add(System.ComponentModel.IComponent,System.ComponentModel.Design.DesignerActionList)">
      <summary vsli:raw="Adds a &lt;see cref=&quot;T:System.ComponentModel.Design.DesignerActionList&quot; /&gt; to the current collection of managed smart tags.">將 <see cref="T:System.ComponentModel.Design.DesignerActionList" /> 加入受管理智慧標籤的目前集合。</summary>
      <param name="comp" vsli:raw="The &lt;see cref=&quot;T:System.ComponentModel.IComponent&quot; /&gt; to associate the smart tags with.">智慧標籤要與其關聯的 <see cref="T:System.ComponentModel.IComponent" />。</param>
      <param name="actionList" vsli:raw="The &lt;see cref=&quot;T:System.ComponentModel.Design.DesignerActionList&quot; /&gt; that contains the new smart tag items to be added.">包含要加入之新智慧標籤項目的 <see cref="T:System.ComponentModel.Design.DesignerActionList" />。</param>
      <exception cref="T:System.ArgumentNullException" vsli:raw="One or both of the parameters are &lt;see langword=&quot;null&quot; /&gt;.">其中一或二個參數都為 <see langword="null" />。</exception>
    </member>
    <member name="M:System.ComponentModel.Design.DesignerActionService.Add(System.ComponentModel.IComponent,System.ComponentModel.Design.DesignerActionListCollection)">
      <summary vsli:raw="Adds a &lt;see cref=&quot;T:System.ComponentModel.Design.DesignerActionListCollection&quot; /&gt; to the current collection of managed smart tags.">將 <see cref="T:System.ComponentModel.Design.DesignerActionListCollection" /> 加入受管理智慧標籤的目前集合。</summary>
      <param name="comp" vsli:raw="The &lt;see cref=&quot;T:System.ComponentModel.IComponent&quot; /&gt; to associate the smart tags with.">智慧標籤要與其關聯的 <see cref="T:System.ComponentModel.IComponent" />。</param>
      <param name="designerActionListCollection" vsli:raw="The &lt;see cref=&quot;T:System.ComponentModel.Design.DesignerActionListCollection&quot; /&gt; that contains the new smart tag items to be added.">包含要加入之新智慧標籤項目的 <see cref="T:System.ComponentModel.Design.DesignerActionListCollection" />。</param>
      <exception cref="T:System.ArgumentNullException" vsli:raw="One or both of the parameters are &lt;see langword=&quot;null&quot; /&gt;.">其中一或二個參數都為 <see langword="null" />。</exception>
    </member>
    <member name="M:System.ComponentModel.Design.DesignerActionService.Clear">
      <summary vsli:raw="Releases all components from management and clears all push-model smart tag lists.">釋放管理的所有元件並清除所有推入模型智慧標籤清單。</summary>
    </member>
    <member name="M:System.ComponentModel.Design.DesignerActionService.Contains(System.ComponentModel.IComponent)">
      <summary vsli:raw="Determines whether the current smart tag service manages the action lists for the specified component.">決定目前智慧標籤服務是否為指定元件管理動作清單。</summary>
      <param name="comp" vsli:raw="The &lt;see cref=&quot;T:System.ComponentModel.IComponent&quot; /&gt; to search for.">要搜尋的 <see cref="T:System.ComponentModel.IComponent" />。</param>
      <exception cref="T:System.ArgumentNullException" vsli:raw="&lt;paramref name=&quot;comp&quot; /&gt; is &lt;see langword=&quot;null&quot; /&gt;.">
        <paramref name="comp" /> 為 <see langword="null" />。</exception>
      <returns vsli:raw="&lt;see langword=&quot;true&quot; /&gt; if the component is managed by the current service; otherwise, &lt;see langword=&quot;false&quot; /&gt;.">如果元件由目前服務管理，則為 <see langword="true" />，否則為 <see langword="false" />。</returns>
    </member>
    <member name="M:System.ComponentModel.Design.DesignerActionService.Dispose">
      <summary vsli:raw="Releases all resources used by the &lt;see cref=&quot;T:System.ComponentModel.Design.DesignerActionService&quot; /&gt; class.">釋放 <see cref="T:System.ComponentModel.Design.DesignerActionService" /> 類別所使用的所有資源。</summary>
    </member>
    <member name="M:System.ComponentModel.Design.DesignerActionService.Dispose(System.Boolean)">
      <summary vsli:raw="Releases the unmanaged resources used by the &lt;see cref=&quot;T:System.ComponentModel.Design.DesignerActionService&quot; /&gt; and optionally releases the managed resources.">釋放 <see cref="T:System.ComponentModel.Design.DesignerActionService" /> 所使用的 Unmanaged 資源，並選擇性地釋放 Managed 資源。</summary>
      <param name="disposing" vsli:raw="&lt;see langword=&quot;true&quot; /&gt; to release both managed and unmanaged resources; &lt;see langword=&quot;false&quot; /&gt; to release only unmanaged resources.">
        <see langword="true" /> 表示釋放 Managed 和 Unmanaged 資源，<see langword="false" /> 則表示只釋放 Unmanaged 資源。</param>
    </member>
    <member name="M:System.ComponentModel.Design.DesignerActionService.GetComponentActions(System.ComponentModel.IComponent)">
      <summary vsli:raw="Returns the collection of smart tag item lists associated with a component.">傳回與元件相關聯的智慧標籤項目清單集合。</summary>
      <param name="component" vsli:raw="The component that the smart tags are associated with.">智慧標籤所關聯的元件。</param>
      <exception cref="T:System.ArgumentNullException" vsli:raw="&lt;paramref name=&quot;comp&quot; /&gt; is &lt;see langword=&quot;null&quot; /&gt;.">
        <paramref name="comp" /> 為 <see langword="null" />。</exception>
      <returns vsli:raw="The collection of smart tags for the specified component.">指定之元件的智慧標籤集合。</returns>
    </member>
    <member name="M:System.ComponentModel.Design.DesignerActionService.GetComponentActions(System.ComponentModel.IComponent,System.Windows.Forms.Design.ComponentActionsType)">
      <summary vsli:raw="Returns the collection of designer action item lists of the specified type associated with a component.">傳回與元件相關聯之指定類型的設計工具動作專案清單集合。</summary>
      <param name="component" vsli:raw="The component that the DesignerActions are associated with.">與 DesignerActions 相關聯的元件。</param>
      <param name="type" vsli:raw="The &lt;see cref=&quot;T:System.ComponentModel.Design.ComponentActionsType&quot; /&gt; to filter the associated designer actions with.">， <see cref="T:System.ComponentModel.Design.ComponentActionsType" /> 用來篩選相關聯的設計工具動作。</param>
      <exception cref="T:System.ArgumentNullException" vsli:raw="&lt;paramref name=&quot;component&quot; /&gt; is &lt;see langword=&quot;null&quot; /&gt;.">
        <paramref name="component" /> 為 <see langword="null" />。</exception>
      <returns vsli:raw="The collection of designer actions of the specified type for the specified component.">指定之元件之指定類型的設計工具動作集合。</returns>
    </member>
    <member name="M:System.ComponentModel.Design.DesignerActionService.GetComponentDesignerActions(System.ComponentModel.IComponent,System.ComponentModel.Design.DesignerActionListCollection)">
      <summary vsli:raw="Retrieves the pull-model smart tags associated with a component.">擷取與元件相關聯的提取模型智慧標籤。</summary>
      <param name="component" vsli:raw="The component that the smart tags are associated with.">智慧標籤所關聯的元件。</param>
      <param name="actionLists" vsli:raw="The collection to add the associated smart tags to.">要加入相關聯智慧標籤的集合。</param>
      <exception cref="T:System.ArgumentNullException" vsli:raw="One or both of the parameters are &lt;see langword=&quot;null&quot; /&gt;.">其中一或二個參數都為 <see langword="null" />。</exception>
    </member>
    <member name="M:System.ComponentModel.Design.DesignerActionService.GetComponentServiceActions(System.ComponentModel.IComponent,System.ComponentModel.Design.DesignerActionListCollection)">
      <summary vsli:raw="Retrieves the push-model smart tags associated with a component.">擷取與元件相關聯的推入模型智慧標籤。</summary>
      <param name="component" vsli:raw="The component that the smart tags are associated with.">智慧標籤所關聯的元件。</param>
      <param name="actionLists" vsli:raw="The collection to add the associated smart tags to.">要加入相關聯智慧標籤的集合。</param>
      <exception cref="T:System.ArgumentNullException" vsli:raw="One or both of the parameters are &lt;see langword=&quot;null&quot; /&gt;.">其中一或二個參數都為 <see langword="null" />。</exception>
    </member>
    <member name="M:System.ComponentModel.Design.DesignerActionService.Remove(System.ComponentModel.Design.DesignerActionList)">
      <summary vsli:raw="Removes the specified smart tag list from all components managed by the current service.">移除目前服務管理之所有元件的指定智慧標籤清單。</summary>
      <param name="actionList" vsli:raw="The list of smart tags to be removed.">要移除的智慧標籤清單。</param>
      <exception cref="T:System.ArgumentNullException" vsli:raw="&lt;paramref name=&quot;actionList&quot; /&gt; is &lt;see langword=&quot;null&quot; /&gt;.">
        <paramref name="actionList" /> 為 <see langword="null" />。</exception>
    </member>
    <member name="M:System.ComponentModel.Design.DesignerActionService.Remove(System.ComponentModel.IComponent)">
      <summary vsli:raw="Removes all the smart tag lists associated with the specified component.">移除與指定元件相關聯的所有智慧標籤清單。</summary>
      <param name="comp" vsli:raw="The component to disassociate the smart tags from.">要從其解除智慧標籤關聯的元件。</param>
      <exception cref="T:System.ArgumentNullException" vsli:raw="&lt;paramref name=&quot;comp&quot; /&gt; is &lt;see langword=&quot;null&quot; /&gt;.">
        <paramref name="comp" /> 為 <see langword="null" />。</exception>
    </member>
    <member name="M:System.ComponentModel.Design.DesignerActionService.Remove(System.ComponentModel.IComponent,System.ComponentModel.Design.DesignerActionList)">
      <summary vsli:raw="Removes the specified smart tag list from the specified component.">從指定的元件移除指定的智慧標籤清單。</summary>
      <param name="comp" vsli:raw="The component to disassociate the smart tags from.">要從其解除智慧標籤關聯的元件。</param>
      <param name="actionList" vsli:raw="The smart tag list to remove.">要移除的智慧標籤清單。</param>
      <exception cref="T:System.ArgumentNullException" vsli:raw="One or both of the parameters are &lt;see langword=&quot;null&quot; /&gt;.">其中一或二個參數都為 <see langword="null" />。</exception>
    </member>
    <member name="T:System.ComponentModel.Design.DesignerActionTextItem">
      <summary vsli:raw="Represents a static text item on a smart tag panel.">表示智慧標籤面板上的靜態文字項目。</summary>
    </member>
    <member name="M:System.ComponentModel.Design.DesignerActionTextItem.#ctor(System.String,System.String)">
      <summary vsli:raw="Initializes a new instance of the &lt;see cref=&quot;T:System.ComponentModel.Design.DesignerActionTextItem&quot; /&gt; class.">初始化 <see cref="T:System.ComponentModel.Design.DesignerActionTextItem" /> 類別的新執行個體。</summary>
      <param name="displayName" vsli:raw="The panel text for this item.">這個項目的面板文字。</param>
      <param name="category" vsli:raw="The category used to group similar items on the panel.">分類用於群組面板上類似的項目。</param>
    </member>
    <member name="T:System.ComponentModel.Design.DesignerActionUIService">
      <summary vsli:raw="Manages the user interface (UI) for a smart tag panel. This class cannot be inherited.">管理智慧標籤面板的使用者介面 (UI)。 此類別無法獲得繼承。</summary>
    </member>
    <member name="E:System.ComponentModel.Design.DesignerActionUIService.DesignerActionUIStateChange">
      <summary vsli:raw="Occurs when a request is made to show or hide a smart tag panel.">發生於要求顯示或隱藏智慧標籤面板時。</summary>
    </member>
    <member name="M:System.ComponentModel.Design.DesignerActionUIService.Dispose">
      <summary vsli:raw="Releases all resources used by the &lt;see cref=&quot;T:System.ComponentModel.Design.DesignerActionUIService&quot; /&gt; class.">釋放 <see cref="T:System.ComponentModel.Design.DesignerActionUIService" /> 類別所使用的所有資源。</summary>
    </member>
    <member name="M:System.ComponentModel.Design.DesignerActionUIService.HideUI(System.ComponentModel.IComponent)">
      <summary vsli:raw="Hides the smart tag panel for a component.">隱藏元件的智慧標籤面板。</summary>
      <param name="component" vsli:raw="The component whose smart tag panel should be hidden.">應隱藏其智慧標籤面板的元件。</param>
    </member>
    <member name="M:System.ComponentModel.Design.DesignerActionUIService.Refresh(System.ComponentModel.IComponent)">
      <summary vsli:raw="Updates the smart tag panel.">更新智慧標籤面板。</summary>
      <param name="component" vsli:raw="The &lt;see cref=&quot;T:System.ComponentModel.IComponent&quot; /&gt; to refresh.">要重新整理的 <see cref="T:System.ComponentModel.IComponent" />。</param>
    </member>
    <member name="M:System.ComponentModel.Design.DesignerActionUIService.ShouldAutoShow(System.ComponentModel.IComponent)">
      <summary vsli:raw="Indicates whether to automatically show the smart tag panel.">指出是否自動顯示智慧標籤面板。</summary>
      <param name="component" vsli:raw="The &lt;see cref=&quot;T:System.ComponentModel.IComponent&quot; /&gt; to automatically show.">要自動顯示的 <see cref="T:System.ComponentModel.IComponent" />。</param>
      <returns vsli:raw="&lt;see langword=&quot;true&quot; /&gt; to automatically show the smart tag panel; otherwise, &lt;see langword=&quot;false&quot; /&gt;.">
        <see langword="true" /> 表示自動顯示智慧標籤面板，否則為 <see langword="false" />。</returns>
    </member>
    <member name="M:System.ComponentModel.Design.DesignerActionUIService.ShowUI(System.ComponentModel.IComponent)">
      <summary vsli:raw="Displays the smart tag panel for a component.">顯示元件的智慧標籤面板。</summary>
      <param name="component" vsli:raw="The component whose smart tag panel should be displayed.">應顯示其智慧標籤面板的元件。</param>
    </member>
    <member name="T:System.ComponentModel.Design.DesignerActionUIStateChangeEventArgs">
      <summary vsli:raw="Provides data for the &lt;see cref=&quot;E:System.ComponentModel.Design.DesignerActionUIService.DesignerActionUIStateChange&quot; /&gt; event.">提供 <see cref="E:System.ComponentModel.Design.DesignerActionUIService.DesignerActionUIStateChange" /> 事件的資料。</summary>
    </member>
    <member name="M:System.ComponentModel.Design.DesignerActionUIStateChangeEventArgs.#ctor(System.Object,System.ComponentModel.Design.DesignerActionUIStateChangeType)">
      <summary vsli:raw="Initializes a new instance of the &lt;see cref=&quot;T:System.ComponentModel.Design.DesignerActionUIStateChangeEventArgs&quot; /&gt; class.">初始化 <see cref="T:System.ComponentModel.Design.DesignerActionUIStateChangeEventArgs" /> 類別的新執行個體。</summary>
      <param name="relatedObject" vsli:raw="The object that is associated with the panel.">與面板相關聯的物件。</param>
      <param name="changeType" vsli:raw="A value that specifies whether the panel is being displayed or hidden.">值，指定面板是否為顯示或隱藏狀態。</param>
    </member>
    <member name="P:System.ComponentModel.Design.DesignerActionUIStateChangeEventArgs.ChangeType">
      <summary vsli:raw="Gets a flag indicating whether the smart tag panel is being displayed or hidden.">取得旗標，指出智慧標籤面板是否為顯示或隱藏狀態。</summary>
      <returns vsli:raw="A &lt;see cref=&quot;T:System.ComponentModel.Design.DesignerActionUIStateChangeType&quot; /&gt; that indicates the state of the panel.">
        <see cref="T:System.ComponentModel.Design.DesignerActionUIStateChangeType" />，指出面板的狀態。</returns>
    </member>
    <member name="P:System.ComponentModel.Design.DesignerActionUIStateChangeEventArgs.RelatedObject">
      <summary vsli:raw="Gets the object that is associated with the smart tag panel.">取得與智慧標籤面板相關聯的物件。</summary>
      <returns vsli:raw="The &lt;see cref=&quot;T:System.Object&quot; /&gt; associated with the smart tag panel.">與智慧標籤面板相關聯的 <see cref="T:System.Object" />。</returns>
    </member>
    <member name="T:System.ComponentModel.Design.DesignerActionUIStateChangeEventHandler">
      <summary vsli:raw="Represents the method that will handle the &lt;see cref=&quot;E:System.ComponentModel.Design.DesignerActionUIService.DesignerActionUIStateChange&quot; /&gt; event of a &lt;see cref=&quot;T:System.ComponentModel.Design.DesignerActionUIService&quot; /&gt;.">代表將處理 <see cref="E:System.ComponentModel.Design.DesignerActionUIService.DesignerActionUIStateChange" /> 之 <see cref="T:System.ComponentModel.Design.DesignerActionUIService" /> 事件的方法。</summary>
      <param name="sender" vsli:raw="The &lt;see cref=&quot;T:System.Object&quot; /&gt; that raised the event.">引發事件的 <see cref="T:System.Object" />。</param>
      <param name="e" vsli:raw="The event-specific information.">事件特定資訊。</param>
    </member>
    <member name="T:System.ComponentModel.Design.DesignerActionUIStateChangeType">
      <summary vsli:raw="Specifies the display state of a smart tag panel.">指定智慧標籤面板的顯示狀態。</summary>
    </member>
    <member name="F:System.ComponentModel.Design.DesignerActionUIStateChangeType.Hide">
      <summary vsli:raw="The smart tag panel is being hidden.">智慧標籤面板已隱藏。</summary>
    </member>
    <member name="F:System.ComponentModel.Design.DesignerActionUIStateChangeType.Refresh">
      <summary vsli:raw="The smart tag panel is being refreshed.">智慧標籤面板已重新整理。</summary>
    </member>
    <member name="F:System.ComponentModel.Design.DesignerActionUIStateChangeType.Show">
      <summary vsli:raw="The smart tag panel is being displayed.">智慧標籤面板已顯示。</summary>
    </member>
    <member name="T:System.ComponentModel.Design.DesignerCommandSet">
      <summary vsli:raw="Represents a base class for design-time tools, not derived from &lt;see cref=&quot;T:System.ComponentModel.Design.ComponentDesigner&quot; /&gt;, that provide smart tag or designer verb capabilities.">表示設計階段工具 (提供智慧標籤或設計工具動詞命令功能) 的基底類別，不是衍生自 <see cref="T:System.ComponentModel.Design.ComponentDesigner" />。</summary>
    </member>
    <member name="M:System.ComponentModel.Design.DesignerCommandSet.#ctor">
      <summary vsli:raw="Initializes an instance of the &lt;see cref=&quot;T:System.ComponentModel.Design.DesignerCommandSet&quot; /&gt; class.">初始化 <see cref="T:System.ComponentModel.Design.DesignerCommandSet" /> 類別的執行個體。</summary>
    </member>
    <member name="M:System.ComponentModel.Design.DesignerCommandSet.GetCommands(System.String)">
      <summary vsli:raw="Returns a collection of command objects.">傳回命令物件的集合。</summary>
      <param name="name" vsli:raw="The type of collection to return, indicating either a &lt;see cref=&quot;T:System.ComponentModel.Design.DesignerActionListCollection&quot; /&gt; or a &lt;see cref=&quot;T:System.ComponentModel.Design.DesignerVerbCollection&quot; /&gt;.">要傳回的集合型別，表示 <see cref="T:System.ComponentModel.Design.DesignerActionListCollection" /> 或 <see cref="T:System.ComponentModel.Design.DesignerVerbCollection" />。</param>
      <returns vsli:raw="A collection that contains the specified type - either &lt;see cref=&quot;T:System.ComponentModel.Design.DesignerActionList&quot; /&gt; or &lt;see cref=&quot;T:System.ComponentModel.Design.DesignerVerb&quot; /&gt; - of command objects. The base implementation always returns &lt;see langword=&quot;null&quot; /&gt;.">集合，包含命令物件的指定類型：<see cref="T:System.ComponentModel.Design.DesignerActionList" /> 或 <see cref="T:System.ComponentModel.Design.DesignerVerb" />。 這個基底實作一定會傳回 <see langword="null" />。</returns>
    </member>
    <member name="P:System.ComponentModel.Design.DesignerCommandSet.ActionLists">
      <summary vsli:raw="Gets the collection of all the smart tags associated with the designed component.">取得與所設計元件相關聯之所有智慧標籤的集合。</summary>
      <returns vsli:raw="A &lt;see cref=&quot;T:System.ComponentModel.Design.DesignerActionListCollection&quot; /&gt; that contains the smart tags for the associated designed component.">
        <see cref="T:System.ComponentModel.Design.DesignerActionListCollection" />，包含相關聯之設計元件的智慧標籤。</returns>
    </member>
    <member name="P:System.ComponentModel.Design.DesignerCommandSet.Verbs">
      <summary vsli:raw="Gets the collection of all the designer verbs associated with the designed component.">取得與所設計元件相關聯之所有設計工具動詞命令的集合。</summary>
      <returns vsli:raw="A &lt;see cref=&quot;T:System.ComponentModel.Design.DesignerVerbCollection&quot; /&gt; that contains the designer verbs for the associated designed component.">
        <see cref="T:System.ComponentModel.Design.DesignerVerbCollection" />，包含相關聯之設計元件的設計工具動詞命令。</returns>
    </member>
    <member name="T:System.ComponentModel.Design.DesignSurface">
      <summary vsli:raw="Presents a user interface for designing components.">呈現可供設計元件的使用者介面。</summary>
    </member>
    <member name="E:System.ComponentModel.Design.DesignSurface.Disposed">
      <summary vsli:raw="Occurs when the design surface is disposed.">發生於處置設計介面時。</summary>
    </member>
    <member name="E:System.ComponentModel.Design.DesignSurface.Flushed">
      <summary vsli:raw="Occurs when a call is made to the &lt;see cref=&quot;M:System.ComponentModel.Design.DesignSurface.Flush&quot; /&gt; method of &lt;see cref=&quot;T:System.ComponentModel.Design.DesignSurface&quot; /&gt;.">發生於呼叫 <see cref="M:System.ComponentModel.Design.DesignSurface.Flush" /> 的 <see cref="T:System.ComponentModel.Design.DesignSurface" /> 方法時。</summary>
    </member>
    <member name="E:System.ComponentModel.Design.DesignSurface.Loaded">
      <summary vsli:raw="Occurs when the designer load has completed.">發生於完成設計工具載入時。</summary>
    </member>
    <member name="E:System.ComponentModel.Design.DesignSurface.Loading">
      <summary vsli:raw="Occurs when the designer is about to be loaded.">發生於即將載入設計工具時。</summary>
    </member>
    <member name="E:System.ComponentModel.Design.DesignSurface.Unloaded">
      <summary vsli:raw="Occurs when a designer has finished unloading.">發生於設計工具完成卸載時。</summary>
    </member>
    <member name="E:System.ComponentModel.Design.DesignSurface.Unloading">
      <summary vsli:raw="Occurs when a designer is about to unload.">發生於即將卸載設計工具時。</summary>
    </member>
    <member name="E:System.ComponentModel.Design.DesignSurface.ViewActivated">
      <summary vsli:raw="Occurs when the &lt;see cref=&quot;M:System.ComponentModel.Design.IDesignerHost.Activate&quot; /&gt; method has been called on &lt;see cref=&quot;T:System.ComponentModel.Design.IDesignerHost&quot; /&gt;.">發生於已在 <see cref="M:System.ComponentModel.Design.IDesignerHost.Activate" /> 上呼叫 <see cref="T:System.ComponentModel.Design.IDesignerHost" /> 方法時。</summary>
    </member>
    <member name="M:System.ComponentModel.Design.DesignSurface.#ctor">
      <summary vsli:raw="Initializes a new instance of the &lt;see cref=&quot;T:System.ComponentModel.Design.DesignSurface&quot; /&gt; class.">初始化 <see cref="T:System.ComponentModel.Design.DesignSurface" /> 類別的新執行個體。</summary>
      <exception cref="T:System.ObjectDisposedException" vsli:raw="The &lt;see cref=&quot;T:System.ComponentModel.Design.IDesignerHost&quot; /&gt; attached to the &lt;see cref=&quot;T:System.ComponentModel.Design.DesignSurface&quot; /&gt; has been disposed.">附加至 <see cref="T:System.ComponentModel.Design.DesignSurface" /> 的 <see cref="T:System.ComponentModel.Design.IDesignerHost" /> 已經過處置。</exception>
    </member>
    <member name="M:System.ComponentModel.Design.DesignSurface.#ctor(System.IServiceProvider)">
      <summary vsli:raw="Initializes a new instance of the &lt;see cref=&quot;T:System.ComponentModel.Design.DesignSurface&quot; /&gt; class.">初始化 <see cref="T:System.ComponentModel.Design.DesignSurface" /> 類別的新執行個體。</summary>
      <param name="parentProvider" vsli:raw="The parent service provider, or &lt;see langword=&quot;null&quot; /&gt; if there is no parent used to resolve services.">父服務提供者，如果未使用父代解析服務，則為 <see langword="null" />。</param>
      <exception cref="T:System.ObjectDisposedException" vsli:raw="The &lt;see cref=&quot;T:System.ComponentModel.Design.IDesignerHost&quot; /&gt; attached to the &lt;see cref=&quot;T:System.ComponentModel.Design.DesignSurface&quot; /&gt; has been disposed.">附加至 <see cref="T:System.ComponentModel.Design.DesignSurface" /> 的 <see cref="T:System.ComponentModel.Design.IDesignerHost" /> 已經過處置。</exception>
    </member>
    <member name="M:System.ComponentModel.Design.DesignSurface.#ctor(System.IServiceProvider,System.Type)">
      <summary vsli:raw="Initializes a new instance of the &lt;see cref=&quot;T:System.ComponentModel.Design.DesignSurface&quot; /&gt; class.">初始化 <see cref="T:System.ComponentModel.Design.DesignSurface" /> 類別的新執行個體。</summary>
      <param name="parentProvider" vsli:raw="The parent service provider, or &lt;see langword=&quot;null&quot; /&gt; if there is no parent used to resolve services.">父服務提供者，如果未使用父代解析服務，則為 <see langword="null" />。</param>
      <param name="rootComponentType" vsli:raw="The type of root component to create.">要建立的根元件型別。</param>
      <exception cref="T:System.ArgumentNullException" vsli:raw="&lt;paramref name=&quot;rootComponent&quot; /&gt; is &lt;see langword=&quot;null&quot; /&gt;.">
        <paramref name="rootComponent" /> 為 <see langword="null" />。</exception>
      <exception cref="T:System.ObjectDisposedException" vsli:raw="The &lt;see cref=&quot;T:System.ComponentModel.Design.IDesignerHost&quot; /&gt; attached to the &lt;see cref=&quot;T:System.ComponentModel.Design.DesignSurface&quot; /&gt; has been disposed.">附加至 <see cref="T:System.ComponentModel.Design.DesignSurface" /> 的 <see cref="T:System.ComponentModel.Design.IDesignerHost" /> 已經過處置。</exception>
    </member>
    <member name="M:System.ComponentModel.Design.DesignSurface.#ctor(System.Type)">
      <summary vsli:raw="Initializes a new instance of the &lt;see cref=&quot;T:System.ComponentModel.Design.DesignSurface&quot; /&gt; class.">初始化 <see cref="T:System.ComponentModel.Design.DesignSurface" /> 類別的新執行個體。</summary>
      <param name="rootComponentType" vsli:raw="The type of root component to create.">要建立的根元件型別。</param>
      <exception cref="T:System.ArgumentNullException" vsli:raw="&lt;paramref name=&quot;rootComponent&quot; /&gt; is &lt;see langword=&quot;null&quot; /&gt;.">
        <paramref name="rootComponent" /> 為 <see langword="null" />。</exception>
      <exception cref="T:System.ObjectDisposedException" vsli:raw="The &lt;see cref=&quot;T:System.ComponentModel.Design.IDesignerHost&quot; /&gt; attached to the &lt;see cref=&quot;T:System.ComponentModel.Design.DesignSurface&quot; /&gt; has been disposed.">附加至 <see cref="T:System.ComponentModel.Design.DesignSurface" /> 的 <see cref="T:System.ComponentModel.Design.IDesignerHost" /> 已經過處置。</exception>
    </member>
    <member name="M:System.ComponentModel.Design.DesignSurface.BeginLoad(System.ComponentModel.Design.Serialization.DesignerLoader)">
      <summary vsli:raw="Begins the loading process with the given designer loader.">使用指定的設計工具載入器開始載入處理序。</summary>
      <param name="loader" vsli:raw="The designer loader to use for loading the designer.">用於載入設計工具的設計工具載入器。</param>
      <exception cref="T:System.ArgumentNullException" vsli:raw="&lt;paramref name=&quot;loader&quot; /&gt; is &lt;see langword=&quot;null&quot; /&gt;.">
        <paramref name="loader" /> 為 <see langword="null" />。</exception>
      <exception cref="T:System.ObjectDisposedException" vsli:raw="The &lt;see cref=&quot;T:System.ComponentModel.Design.IDesignerHost&quot; /&gt; attached to the &lt;see cref=&quot;T:System.ComponentModel.Design.DesignSurface&quot; /&gt; has been disposed.">附加至 <see cref="T:System.ComponentModel.Design.DesignSurface" /> 的 <see cref="T:System.ComponentModel.Design.IDesignerHost" /> 已經過處置。</exception>
    </member>
    <member name="M:System.ComponentModel.Design.DesignSurface.BeginLoad(System.Type)">
      <summary vsli:raw="Begins the loading process.">開始載入處理序。</summary>
      <param name="rootComponentType" vsli:raw="The type of component to create in design mode.">要在設計模式中建立的元件型別。</param>
      <exception cref="T:System.ArgumentNullException" vsli:raw="&lt;paramref name=&quot;rootComponentType&quot; /&gt; is &lt;see langword=&quot;null&quot; /&gt;.">
        <paramref name="rootComponentType" /> 為 <see langword="null" />。</exception>
      <exception cref="T:System.ObjectDisposedException" vsli:raw="The &lt;see cref=&quot;T:System.ComponentModel.Design.IDesignerHost&quot; /&gt; attached to the &lt;see cref=&quot;T:System.ComponentModel.Design.DesignSurface&quot; /&gt; has been disposed.">附加至 <see cref="T:System.ComponentModel.Design.DesignSurface" /> 的 <see cref="T:System.ComponentModel.Design.IDesignerHost" /> 已經過處置。</exception>
    </member>
    <member name="M:System.ComponentModel.Design.DesignSurface.CreateComponent(System.Type)">
      <summary vsli:raw="Creates an instance of a component.">建立元件的執行個體。</summary>
      <param name="componentType" vsli:raw="The type of component to create.">要建立的元件型別。</param>
      <exception cref="T:System.ArgumentNullException" vsli:raw="&lt;paramref name=&quot;componentType&quot; /&gt; is &lt;see langword=&quot;null&quot; /&gt;.">
        <paramref name="componentType" /> 為 <see langword="null" />。</exception>
      <exception cref="T:System.ObjectDisposedException" vsli:raw="The &lt;see cref=&quot;T:System.ComponentModel.Design.IDesignerHost&quot; /&gt; attached to the &lt;see cref=&quot;T:System.ComponentModel.Design.DesignSurface&quot; /&gt; has been disposed.">附加至 <see cref="T:System.ComponentModel.Design.DesignSurface" /> 的 <see cref="T:System.ComponentModel.Design.IDesignerHost" /> 已經過處置。</exception>
      <returns vsli:raw="The newly created component.">新建立的元件。</returns>
    </member>
    <member name="M:System.ComponentModel.Design.DesignSurface.CreateDesigner(System.ComponentModel.IComponent,System.Boolean)">
      <summary vsli:raw="Creates a designer when a component is added to the container.">在將元件加入容器時建立設計工具。</summary>
      <param name="component" vsli:raw="The component for which the designer should be created.">應當為其建立設計工具的元件。</param>
      <param name="rootDesigner" vsli:raw="&lt;see langword=&quot;true&quot; /&gt; to create a root designer; &lt;see langword=&quot;false&quot; /&gt; to create a normal designer.">
        <see langword="true" /> 表示建立根設計工具，<see langword="false" /> 表示建立一般設計工具。</param>
      <exception cref="T:System.ArgumentNullException" vsli:raw="&lt;paramref name=&quot;component&quot; /&gt; is &lt;see langword=&quot;null&quot; /&gt;.">
        <paramref name="component" /> 為 <see langword="null" />。</exception>
      <exception cref="T:System.ObjectDisposedException" vsli:raw="The &lt;see cref=&quot;T:System.ComponentModel.Design.IDesignerHost&quot; /&gt; attached to the &lt;see cref=&quot;T:System.ComponentModel.Design.DesignSurface&quot; /&gt; has been disposed.">附加至 <see cref="T:System.ComponentModel.Design.DesignSurface" /> 的 <see cref="T:System.ComponentModel.Design.IDesignerHost" /> 已經過處置。</exception>
      <returns vsli:raw="An instance of the requested designer, or &lt;see langword=&quot;null&quot; /&gt; if no matching designer could be found.">要求之設計工具的執行個體，如果找不到相符的設計工具，則為 <see langword="null" />。</returns>
    </member>
    <member name="M:System.ComponentModel.Design.DesignSurface.CreateInstance(System.Type)">
      <summary vsli:raw="Creates an instance of the given type.">建立指定型別的執行個體。</summary>
      <param name="type" vsli:raw="The type to create.">要建立的類型。</param>
      <exception cref="T:System.ArgumentNullException" vsli:raw="&lt;paramref name=&quot;type&quot; /&gt; is &lt;see langword=&quot;null&quot; /&gt;.">
        <paramref name="type" /> 為 <see langword="null" />。</exception>
      <exception cref="T:System.ObjectDisposedException" vsli:raw="The &lt;see cref=&quot;T:System.ComponentModel.Design.IDesignerHost&quot; /&gt; attached to the &lt;see cref=&quot;T:System.ComponentModel.Design.DesignSurface&quot; /&gt; has been disposed.">附加至 <see cref="T:System.ComponentModel.Design.DesignSurface" /> 的 <see cref="T:System.ComponentModel.Design.IDesignerHost" /> 已經過處置。</exception>
      <returns vsli:raw="The newly created object.">新建立的物件。</returns>
    </member>
    <member name="M:System.ComponentModel.Design.DesignSurface.CreateNestedContainer(System.ComponentModel.IComponent)">
      <summary vsli:raw="Creates a container suitable for nesting controls or components.">建立適合的容器，以巢狀控制項或元件。</summary>
      <param name="owningComponent" vsli:raw="The component that manages the nested container.">能夠管理巢狀容器的元件。</param>
      <exception cref="T:System.ArgumentNullException" vsli:raw="&lt;paramref name=&quot;owningComponent&quot; /&gt; is &lt;see langword=&quot;null&quot; /&gt;.">
        <paramref name="owningComponent" /> 為 <see langword="null" />。</exception>
      <exception cref="T:System.ObjectDisposedException" vsli:raw="The &lt;see cref=&quot;T:System.ComponentModel.Design.IDesignerHost&quot; /&gt; attached to the &lt;see cref=&quot;T:System.ComponentModel.Design.DesignSurface&quot; /&gt; has been disposed.">附加至 <see cref="T:System.ComponentModel.Design.DesignSurface" /> 的 <see cref="T:System.ComponentModel.Design.IDesignerHost" /> 已經過處置。</exception>
      <returns vsli:raw="The nested container.">巢狀容器。</returns>
    </member>
    <member name="M:System.ComponentModel.Design.DesignSurface.CreateNestedContainer(System.ComponentModel.IComponent,System.String)">
      <summary vsli:raw="Creates a container suitable for nesting controls or components.">建立適合的容器，以巢狀控制項或元件。</summary>
      <param name="owningComponent" vsli:raw="The component that manages the nested container.">能夠管理巢狀容器的元件。</param>
      <param name="containerName" vsli:raw="An additional name for the nested container.">巢狀容器的其他名稱。</param>
      <exception cref="T:System.ArgumentNullException" vsli:raw="&lt;paramref name=&quot;owningComponent&quot; /&gt; is &lt;see langword=&quot;null&quot; /&gt;.">
        <paramref name="owningComponent" /> 為 <see langword="null" />。</exception>
      <exception cref="T:System.ObjectDisposedException" vsli:raw="The &lt;see cref=&quot;T:System.ComponentModel.Design.IDesignerHost&quot; /&gt; attached to the &lt;see cref=&quot;T:System.ComponentModel.Design.DesignSurface&quot; /&gt; has been disposed.">附加至 <see cref="T:System.ComponentModel.Design.DesignSurface" /> 的 <see cref="T:System.ComponentModel.Design.IDesignerHost" /> 已經過處置。</exception>
      <returns vsli:raw="The nested container.">巢狀容器。</returns>
    </member>
    <member name="M:System.ComponentModel.Design.DesignSurface.Dispose">
      <summary vsli:raw="Releases the resources used by the &lt;see cref=&quot;T:System.ComponentModel.Design.DesignSurface&quot; /&gt;.">釋放 <see cref="T:System.ComponentModel.Design.DesignSurface" /> 使用的資源。</summary>
    </member>
    <member name="M:System.ComponentModel.Design.DesignSurface.Dispose(System.Boolean)">
      <summary vsli:raw="Releases the resources used by the &lt;see cref=&quot;T:System.ComponentModel.Design.DesignSurface&quot; /&gt;.">釋放 <see cref="T:System.ComponentModel.Design.DesignSurface" /> 使用的資源。</summary>
      <param name="disposing" vsli:raw="&lt;see langword=&quot;true&quot; /&gt; to release both managed and unmanaged resources; &lt;see langword=&quot;false&quot; /&gt; to release only unmanaged resources.">
        <see langword="true" /> 表示釋放 Managed 和 Unmanaged 資源，<see langword="false" /> 則表示只釋放 Unmanaged 資源。</param>
    </member>
    <member name="M:System.ComponentModel.Design.DesignSurface.Flush">
      <summary vsli:raw="Serializes changes to the design surface.">序列化對設計介面的變更。</summary>
    </member>
    <member name="M:System.ComponentModel.Design.DesignSurface.GetService(System.Type)">
      <summary vsli:raw="Gets a service from the service container.">取得服務容器中的服務。</summary>
      <param name="serviceType" vsli:raw="The type of service to retrieve.">要擷取的服務類型。</param>
      <returns vsli:raw="An object that implements, or is a derived class of, &lt;paramref name=&quot;serviceType&quot; /&gt;, or &lt;see langword=&quot;null&quot; /&gt; if the service does not exist in the service container.">實作 <paramref name="serviceType" /> 或是其衍生類別的物件，如果服務不存在於服務容器中，則為 <see langword="null" />。</returns>
    </member>
    <member name="M:System.ComponentModel.Design.DesignSurface.OnLoaded(System.ComponentModel.Design.LoadedEventArgs)">
      <summary vsli:raw="Raises the &lt;see cref=&quot;E:System.ComponentModel.Design.DesignSurface.Loaded&quot; /&gt; event.">引發 <see cref="E:System.ComponentModel.Design.DesignSurface.Loaded" /> 事件。</summary>
      <param name="e" vsli:raw="A &lt;see cref=&quot;T:System.ComponentModel.Design.LoadedEventArgs&quot; /&gt; that contains the event data.">
        <see cref="T:System.ComponentModel.Design.LoadedEventArgs" />，其中包含事件資料。</param>
    </member>
    <member name="M:System.ComponentModel.Design.DesignSurface.OnLoading(System.EventArgs)">
      <summary vsli:raw="Raises the &lt;see cref=&quot;E:System.ComponentModel.Design.DesignSurface.Loading&quot; /&gt; event.">引發 <see cref="E:System.ComponentModel.Design.DesignSurface.Loading" /> 事件。</summary>
      <param name="e" vsli:raw="An &lt;see cref=&quot;T:System.EventArgs&quot; /&gt; that contains the event data.">包含事件資料的 <see cref="T:System.EventArgs" />。</param>
    </member>
    <member name="M:System.ComponentModel.Design.DesignSurface.OnUnloaded(System.EventArgs)">
      <summary vsli:raw="Raises the &lt;see cref=&quot;E:System.ComponentModel.Design.DesignSurface.Unloaded&quot; /&gt; event.">引發 <see cref="E:System.ComponentModel.Design.DesignSurface.Unloaded" /> 事件。</summary>
      <param name="e" vsli:raw="An &lt;see cref=&quot;T:System.EventArgs&quot; /&gt; that contains the event data.">包含事件資料的 <see cref="T:System.EventArgs" />。</param>
    </member>
    <member name="M:System.ComponentModel.Design.DesignSurface.OnUnloading(System.EventArgs)">
      <summary vsli:raw="Raises the &lt;see cref=&quot;E:System.ComponentModel.Design.DesignSurface.Unloading&quot; /&gt; event.">引發 <see cref="E:System.ComponentModel.Design.DesignSurface.Unloading" /> 事件。</summary>
      <param name="e" vsli:raw="An &lt;see cref=&quot;T:System.EventArgs&quot; /&gt; that contains the event data.">包含事件資料的 <see cref="T:System.EventArgs" />。</param>
    </member>
    <member name="M:System.ComponentModel.Design.DesignSurface.OnViewActivate(System.EventArgs)">
      <summary vsli:raw="Raises the &lt;see cref=&quot;E:System.ComponentModel.Design.DesignSurface.ViewActivated&quot; /&gt; event.">引發 <see cref="E:System.ComponentModel.Design.DesignSurface.ViewActivated" /> 事件。</summary>
      <param name="e" vsli:raw="An &lt;see cref=&quot;T:System.EventArgs&quot; /&gt; that contains the event data.">包含事件資料的 <see cref="T:System.EventArgs" />。</param>
    </member>
    <member name="P:System.ComponentModel.Design.DesignSurface.ComponentContainer">
      <summary vsli:raw="Gets the &lt;see cref=&quot;T:System.ComponentModel.IContainer&quot; /&gt; implementation within the design surface.">取得設計介面內的 <see cref="T:System.ComponentModel.IContainer" /> 實作。</summary>
      <exception cref="T:System.ObjectDisposedException" vsli:raw="The &lt;see cref=&quot;T:System.ComponentModel.Design.IDesignerHost&quot; /&gt; attached to the &lt;see cref=&quot;T:System.ComponentModel.Design.DesignSurface&quot; /&gt; has been disposed.">附加至 <see cref="T:System.ComponentModel.Design.DesignSurface" /> 的 <see cref="T:System.ComponentModel.Design.IDesignerHost" /> 已經過處置。</exception>
      <returns vsli:raw="The &lt;see cref=&quot;T:System.ComponentModel.IContainer&quot; /&gt; implementation within the design surface.">設計介面內的 <see cref="T:System.ComponentModel.IContainer" /> 實作。</returns>
    </member>
    <member name="P:System.ComponentModel.Design.DesignSurface.DtelLoading">
      <summary vsli:raw="Gets a value indicating whether the Design-time Error List is loading.">取得值，指出是否正在載入 [設計階段錯誤清單]****。</summary>
      <returns vsli:raw="&lt;see langword=&quot;true&quot; /&gt; if the Design-time Error List is loading; otherwise, &lt;see langword=&quot;false&quot; /&gt;.">
        <see langword="true" /> 如果載入 設計階段錯誤清單 ，則為，否則為 <see langword="false" /> 。</returns>
    </member>
    <member name="P:System.ComponentModel.Design.DesignSurface.IsLoaded">
      <summary vsli:raw="Gets a value indicating whether the design surface is currently loaded.">取得值，指出目前是否已載入設計介面。</summary>
      <returns vsli:raw="&lt;see langword=&quot;true&quot; /&gt; if the design surface is currently loaded; otherwise, &lt;see langword=&quot;false&quot; /&gt;.">如果目前已載入設計介面則為 <see langword="true" />，否則為 <see langword="false" />。</returns>
    </member>
    <member name="P:System.ComponentModel.Design.DesignSurface.LoadErrors">
      <summary vsli:raw="Returns a collection of loading errors or a void collection.">傳回載入錯誤的集合或 Void 集合。</summary>
      <returns vsli:raw="A &lt;see cref=&quot;T:System.Collections.ICollection&quot; /&gt; of loading errors.">載入錯誤的 <see cref="T:System.Collections.ICollection" />。</returns>
    </member>
    <member name="P:System.ComponentModel.Design.DesignSurface.ServiceContainer">
      <summary vsli:raw="Gets the service container.">取得服務容器。</summary>
      <exception cref="T:System.ObjectDisposedException" vsli:raw="The &lt;see cref=&quot;T:System.ComponentModel.Design.IDesignerHost&quot; /&gt; attached to the &lt;see cref=&quot;T:System.ComponentModel.Design.DesignSurface&quot; /&gt; has been disposed.">附加至 <see cref="T:System.ComponentModel.Design.DesignSurface" /> 的 <see cref="T:System.ComponentModel.Design.IDesignerHost" /> 已經過處置。</exception>
      <returns vsli:raw="The service container that provides all services to designers contained within the design surface.">服務容器，該容器為設計介面中包含的設計工具提供所有服務。</returns>
    </member>
    <member name="P:System.ComponentModel.Design.DesignSurface.View">
      <summary vsli:raw="Gets the view for the root designer.">取得根設計工具的檢視。</summary>
      <exception cref="T:System.InvalidOperationException" vsli:raw="The design surface is not loading, the designer loader has not yet created a root designer, or the design surface finished the load, but failed. More information may available in the &lt;see cref=&quot;P:System.Exception.InnerException&quot; /&gt;.">設計介面未在載入，設計工具載入器尚未建立根設計工具，或設計介面已完成載入但已失敗。 <see cref="P:System.Exception.InnerException" /> 中有更詳細的資訊。</exception>
      <exception cref="T:System.NotSupportedException" vsli:raw="The designer loaded, but it does not offer a view compatible with this design surface.">設計工具已載入，但是它並未提供與這個設計介面相容的檢視。</exception>
      <exception cref="T:System.ObjectDisposedException" vsli:raw="The &lt;see cref=&quot;T:System.ComponentModel.Design.IDesignerHost&quot; /&gt; attached to the &lt;see cref=&quot;T:System.ComponentModel.Design.DesignSurface&quot; /&gt; has been disposed.">附加至 <see cref="T:System.ComponentModel.Design.DesignSurface" /> 的 <see cref="T:System.ComponentModel.Design.IDesignerHost" /> 已經過處置。</exception>
      <returns vsli:raw="The view for the root designer.">根設計工具的檢視。</returns>
    </member>
    <member name="T:System.ComponentModel.Design.DesignSurfaceCollection">
      <summary vsli:raw="Contains a collection of design surfaces. This class cannot be inherited.">包含設計介面的集合。 此類別無法獲得繼承。</summary>
    </member>
    <member name="M:System.ComponentModel.Design.DesignSurfaceCollection.CopyTo(System.ComponentModel.Design.DesignSurface[],System.Int32)">
      <summary vsli:raw="Copies the collection members to the specified &lt;see cref=&quot;T:System.ComponentModel.Design.DesignSurface&quot; /&gt; array beginning at the specified destination index.">複製集合成員至指定的 <see cref="T:System.ComponentModel.Design.DesignSurface" /> 陣列，起始於指定的目的索引。</summary>
      <param name="array" vsli:raw="The array to copy collection members to.">集合成員所要複製的目的陣列。</param>
      <param name="index" vsli:raw="The destination index to begin copying to.">要開始複製到的目的索引。</param>
    </member>
    <member name="M:System.ComponentModel.Design.DesignSurfaceCollection.GetEnumerator">
      <summary vsli:raw="Returns an enumerator that can iterate through the &lt;see cref=&quot;T:System.ComponentModel.Design.DesignSurfaceCollection&quot; /&gt; instance.">傳回可以逐一查看 <see cref="T:System.ComponentModel.Design.DesignSurfaceCollection" /> 執行個體的列舉值。</summary>
      <returns vsli:raw="An &lt;see cref=&quot;T:System.Collections.IEnumerator&quot; /&gt; for the &lt;see cref=&quot;T:System.ComponentModel.Design.DesignSurfaceCollection&quot; /&gt; instance.">
        <see cref="T:System.Collections.IEnumerator" /> 執行個體的 <see cref="T:System.ComponentModel.Design.DesignSurfaceCollection" />。</returns>
    </member>
    <member name="M:System.ComponentModel.Design.DesignSurfaceCollection.System#Collections#ICollection#CopyTo(System.Array,System.Int32)">
      <summary vsli:raw="For a description of this member, see the &lt;see cref=&quot;M:System.Collections.ICollection.CopyTo(System.Array,System.Int32)&quot; /&gt; method.">如需這個成員的描述，請參閱 <see cref="M:System.Collections.ICollection.CopyTo(System.Array,System.Int32)" /> 方法。</summary>
      <param name="array" vsli:raw="The one-dimensional &lt;see cref=&quot;T:System.Array&quot; /&gt; that is the destination of the values copied from &lt;see cref=&quot;T:System.ComponentModel.Design.DesignSurfaceCollection&quot; /&gt;.">複製自 <see cref="T:System.ComponentModel.Design.DesignSurfaceCollection" /> 之值的目的地一維 <see cref="T:System.Array" />。</param>
      <param name="index" vsli:raw="The index in &lt;paramref name=&quot;array&quot; /&gt; where copying begins.">
        <paramref name="array" /> 中開始複製處的索引。</param>
    </member>
    <member name="M:System.ComponentModel.Design.DesignSurfaceCollection.System#Collections#IEnumerable#GetEnumerator">
      <summary vsli:raw="For a description of this member, see the &lt;see cref=&quot;M:System.Collections.IEnumerable.GetEnumerator&quot; /&gt; method.">如需這個成員的描述，請參閱 <see cref="M:System.Collections.IEnumerable.GetEnumerator" /> 方法。</summary>
      <returns vsli:raw="An &lt;see cref=&quot;T:System.Collections.IEnumerator&quot; /&gt; for the &lt;see cref=&quot;T:System.ComponentModel.Design.DesignSurfaceCollection&quot; /&gt; instance.">
        <see cref="T:System.Collections.IEnumerator" /> 執行個體的 <see cref="T:System.ComponentModel.Design.DesignSurfaceCollection" />。</returns>
    </member>
    <member name="P:System.ComponentModel.Design.DesignSurfaceCollection.Count">
      <summary vsli:raw="Gets the total number of design surfaces in the &lt;see cref=&quot;T:System.ComponentModel.Design.DesignSurfaceCollection&quot; /&gt;.">取得 <see cref="T:System.ComponentModel.Design.DesignSurfaceCollection" /> 中設計介面的總數。</summary>
      <returns vsli:raw="The total number of elements in the &lt;see cref=&quot;T:System.ComponentModel.Design.DesignSurfaceCollection&quot; /&gt;.">
        <see cref="T:System.ComponentModel.Design.DesignSurfaceCollection" /> 中的項目總數。</returns>
    </member>
    <member name="P:System.ComponentModel.Design.DesignSurfaceCollection.Item(System.Int32)">
      <summary vsli:raw="Gets the design surface at the specified index.">取得在指定索引處的設計介面。</summary>
      <param name="index" vsli:raw="The index of the design surface to return.">要傳回之設計介面的索引。</param>
      <exception cref="T:System.NotSupportedException" vsli:raw="The design surface specified by &lt;paramref name=&quot;index&quot; /&gt; is not supported.">不支援 <paramref name="index" /> 指定的設計介面。</exception>
      <returns vsli:raw="The design surface at the specified index.">在指定索引處的設計介面。</returns>
    </member>
    <member name="P:System.ComponentModel.Design.DesignSurfaceCollection.System#Collections#ICollection#Count">
      <summary vsli:raw="For a description of this member, see the &lt;see cref=&quot;P:System.Collections.ICollection.Count&quot; /&gt; property.">如需這個成員的描述，請參閱 <see cref="P:System.Collections.ICollection.Count" /> 屬性。</summary>
      <returns vsli:raw="The number of elements contained in the &lt;see cref=&quot;T:System.ComponentModel.Design.DesignSurfaceCollection&quot; /&gt;.">
        <see cref="T:System.ComponentModel.Design.DesignSurfaceCollection" /> 中所包含的項目數。</returns>
    </member>
    <member name="P:System.ComponentModel.Design.DesignSurfaceCollection.System#Collections#ICollection#IsSynchronized">
      <summary vsli:raw="For a description of this member, see the &lt;see cref=&quot;P:System.Collections.ICollection.IsSynchronized&quot; /&gt; property.">如需這個成員的描述，請參閱 <see cref="P:System.Collections.ICollection.IsSynchronized" /> 屬性。</summary>
      <returns vsli:raw="&lt;see langword=&quot;true&quot; /&gt; if access to the &lt;see cref=&quot;T:System.ComponentModel.Design.DesignSurfaceCollection&quot; /&gt; is synchronized (thread safe); otherwise, &lt;see langword=&quot;false&quot; /&gt;.">如果 <see langword="true" /> 的存取為同步 (安全執行緒)，則為 <see cref="T:System.ComponentModel.Design.DesignSurfaceCollection" />，否則為 <see langword="false" />。</returns>
    </member>
    <member name="P:System.ComponentModel.Design.DesignSurfaceCollection.System#Collections#ICollection#SyncRoot">
      <summary vsli:raw="For a description of this member, see the &lt;see cref=&quot;P:System.Collections.ICollection.SyncRoot&quot; /&gt; property.">如需這個成員的描述，請參閱 <see cref="P:System.Collections.ICollection.SyncRoot" /> 屬性。</summary>
      <returns vsli:raw="An object that can be used to synchronize access to the &lt;see cref=&quot;T:System.ComponentModel.Design.DesignSurfaceCollection&quot; /&gt;.">可用來同步存取 <see cref="T:System.ComponentModel.Design.DesignSurfaceCollection" /> 的物件。</returns>
    </member>
    <member name="T:System.ComponentModel.Design.DesignSurfaceEventArgs">
      <summary vsli:raw="Provides data for the &lt;see cref=&quot;E:System.ComponentModel.Design.DesignSurfaceManager.DesignSurfaceCreated&quot; /&gt; event.">提供 <see cref="E:System.ComponentModel.Design.DesignSurfaceManager.DesignSurfaceCreated" /> 事件的資料。</summary>
    </member>
    <member name="M:System.ComponentModel.Design.DesignSurfaceEventArgs.#ctor(System.ComponentModel.Design.DesignSurface)">
      <summary vsli:raw="Initializes a new instance of the &lt;see cref=&quot;T:System.ComponentModel.Design.DesignSurfaceEventArgs&quot; /&gt; class.">初始化 <see cref="T:System.ComponentModel.Design.DesignSurfaceEventArgs" /> 類別的新執行個體。</summary>
      <param name="surface" vsli:raw="The design surface that is being created.">正在建立的設計介面。</param>
      <exception cref="T:System.ArgumentNullException" vsli:raw="&lt;paramref name=&quot;surface&quot; /&gt; is &lt;see langword=&quot;null&quot; /&gt;.">
        <paramref name="surface" /> 為 <see langword="null" />。</exception>
    </member>
    <member name="P:System.ComponentModel.Design.DesignSurfaceEventArgs.Surface">
      <summary vsli:raw="Gets the design surface that is being created.">取得正在建立的設計介面。</summary>
      <returns vsli:raw="A &lt;see cref=&quot;T:System.ComponentModel.Design.DesignSurface&quot; /&gt; that is being created.">正在建立的 <see cref="T:System.ComponentModel.Design.DesignSurface" />。</returns>
    </member>
    <member name="T:System.ComponentModel.Design.DesignSurfaceEventHandler">
      <summary vsli:raw="Represents the method that will handle the &lt;see cref=&quot;E:System.ComponentModel.Design.DesignSurfaceManager.DesignSurfaceCreated&quot; /&gt; event of a &lt;see cref=&quot;T:System.ComponentModel.Design.DesignSurfaceManager&quot; /&gt; class. This class cannot be inherited.">表示處理 <see cref="E:System.ComponentModel.Design.DesignSurfaceManager.DesignSurfaceCreated" /> 類別的 <see cref="T:System.ComponentModel.Design.DesignSurfaceManager" /> 事件的方法。 此類別無法獲得繼承。</summary>
      <param name="sender" vsli:raw="The source of the event.">事件的來源。</param>
      <param name="e" vsli:raw="A &lt;see cref=&quot;T:System.ComponentModel.Design.DesignSurfaceEventArgs&quot; /&gt; that contains the event data.">
        <see cref="T:System.ComponentModel.Design.DesignSurfaceEventArgs" />，其中包含事件資料。</param>
    </member>
    <member name="T:System.ComponentModel.Design.DesignSurfaceManager">
      <summary vsli:raw="Manages a collection of &lt;see cref=&quot;T:System.ComponentModel.Design.DesignSurface&quot; /&gt; objects.">管理 <see cref="T:System.ComponentModel.Design.DesignSurface" /> 物件的集合。</summary>
    </member>
    <member name="E:System.ComponentModel.Design.DesignSurfaceManager.ActiveDesignSurfaceChanged">
      <summary vsli:raw="Occurs when the currently active designer changes.">發生於目前使用中的設計工具變更時。</summary>
    </member>
    <member name="E:System.ComponentModel.Design.DesignSurfaceManager.DesignSurfaceCreated">
      <summary vsli:raw="Occurs when a designer is created.">發生於設計工具建立時。</summary>
    </member>
    <member name="E:System.ComponentModel.Design.DesignSurfaceManager.DesignSurfaceDisposed">
      <summary vsli:raw="Occurs when a designer is disposed.">發生於處置設計工具時。</summary>
    </member>
    <member name="E:System.ComponentModel.Design.DesignSurfaceManager.SelectionChanged">
      <summary vsli:raw="Occurs when the global selection changes.">發生於全域選取變更時。</summary>
    </member>
    <member name="M:System.ComponentModel.Design.DesignSurfaceManager.#ctor">
      <summary vsli:raw="Initializes a new instance of the &lt;see cref=&quot;T:System.ComponentModel.Design.DesignSurfaceManager&quot; /&gt; class.">初始化 <see cref="T:System.ComponentModel.Design.DesignSurfaceManager" /> 類別的新執行個體。</summary>
    </member>
    <member name="M:System.ComponentModel.Design.DesignSurfaceManager.#ctor(System.IServiceProvider)">
      <summary vsli:raw="Initializes a new instance of the &lt;see cref=&quot;T:System.ComponentModel.Design.DesignSurfaceManager&quot; /&gt; class.">初始化 <see cref="T:System.ComponentModel.Design.DesignSurfaceManager" /> 類別的新執行個體。</summary>
      <param name="parentProvider" vsli:raw="A parent service provider. Service requests are forwarded to this provider if they cannot be resolved by the design surface manager.">父服務提供者。 如果設計介面管理員無法解析服務要求，則會將要求轉送至這個提供者。</param>
    </member>
    <member name="M:System.ComponentModel.Design.DesignSurfaceManager.CreateDesignSurface">
      <summary vsli:raw="Creates an instance of a design surface.">建立設計介面的執行個體。</summary>
      <returns vsli:raw="A new design surface instance.">新的設計介面執行個體。</returns>
    </member>
    <member name="M:System.ComponentModel.Design.DesignSurfaceManager.CreateDesignSurface(System.IServiceProvider)">
      <summary vsli:raw="Creates an instance of a design surface.">建立設計介面的執行個體。</summary>
      <param name="parentProvider" vsli:raw="A parent service provider. A new merged service provider will be created that will first ask this provider for a service, and then delegate any failures to the design surface manager object. This merged provider will be passed into the &lt;see cref=&quot;M:System.ComponentModel.Design.DesignSurfaceManager.CreateDesignSurfaceCore(System.IServiceProvider)&quot; /&gt; method.">父服務提供者。 將會建立新的合併服務提供者，它會首先尋求這個提供者的服務，然後將任何失敗委派給設計介面管理員物件。 這個合併提供者會傳入至 <see cref="M:System.ComponentModel.Design.DesignSurfaceManager.CreateDesignSurfaceCore(System.IServiceProvider)" /> 方法。</param>
      <exception cref="T:System.ArgumentNullException" vsli:raw="&lt;paramref name=&quot;parentProvider&quot; /&gt; is &lt;see langword=&quot;null&quot; /&gt;.">
        <paramref name="parentProvider" /> 為 <see langword="null" />。</exception>
      <returns vsli:raw="A new design surface instance.">新的設計介面執行個體。</returns>
    </member>
    <member name="M:System.ComponentModel.Design.DesignSurfaceManager.CreateDesignSurfaceCore(System.IServiceProvider)">
      <summary vsli:raw="Implementation that creates the design surface.">建立設計介面的實作。</summary>
      <param name="parentProvider" vsli:raw="A service provider to pass to the design surface. This is either an instance of &lt;see cref=&quot;T:System.ComponentModel.Design.DesignSurfaceManager&quot; /&gt; or an object that implements &lt;see cref=&quot;T:System.IServiceProvider&quot; /&gt;, and represents a merge between the service provider of the &lt;see cref=&quot;T:System.ComponentModel.Design.DesignSurfaceManager&quot; /&gt; class and an externally passed provider.">傳遞給設計介面的服務提供者。 這是 <see cref="T:System.ComponentModel.Design.DesignSurfaceManager" /> 的執行個體或物件，該物件實作 <see cref="T:System.IServiceProvider" />，或表示 <see cref="T:System.ComponentModel.Design.DesignSurfaceManager" /> 類別的服務提供者和外部傳遞的提供者之間的合併。</param>
      <returns vsli:raw="A new design surface instance.">新的設計介面執行個體。</returns>
    </member>
    <member name="M:System.ComponentModel.Design.DesignSurfaceManager.Dispose">
      <summary vsli:raw="Releases the resources used by the &lt;see cref=&quot;T:System.ComponentModel.Design.DesignSurfaceManager&quot; /&gt;.">釋放 <see cref="T:System.ComponentModel.Design.DesignSurfaceManager" /> 使用的資源。</summary>
    </member>
    <member name="M:System.ComponentModel.Design.DesignSurfaceManager.Dispose(System.Boolean)">
      <summary vsli:raw="Releases the unmanaged resources used by the &lt;see cref=&quot;T:System.ComponentModel.Design.DesignSurfaceManager&quot; /&gt; and optionally releases the managed resources.">釋放 <see cref="T:System.ComponentModel.Design.DesignSurfaceManager" /> 所使用的 Unmanaged 資源，並選擇性地釋放 Managed 資源。</summary>
      <param name="disposing" vsli:raw="&lt;see langword=&quot;true&quot; /&gt; to release both managed and unmanaged resources; &lt;see langword=&quot;false&quot; /&gt; to release only unmanaged resources.">
        <see langword="true" /> 表示釋放 Managed 和 Unmanaged 資源，<see langword="false" /> 則表示只釋放 Unmanaged 資源。</param>
    </member>
    <member name="M:System.ComponentModel.Design.DesignSurfaceManager.GetService(System.Type)">
      <summary vsli:raw="Gets a service in the design surface manager's service container.">取得設計介面管理員服務容器中的服務。</summary>
      <param name="serviceType" vsli:raw="The service type to retrieve.">要擷取的服務型別。</param>
      <returns vsli:raw="An object that implements, or is a derived class of, the given service type; otherwise, &lt;see langword=&quot;null&quot; /&gt; if the service does not exist in the service container.">實作指定服務型別的物件，或指定服務型別之衍生類別的物件。否則，如果服務容器中不存在該服務，則為 <see langword="null" />。</returns>
    </member>
    <member name="P:System.ComponentModel.Design.DesignSurfaceManager.ActiveDesignSurface">
      <summary vsli:raw="Gets or sets the active designer.">取得或設定使用中的設計工具。</summary>
      <returns vsli:raw="The active designer.">使用中的設計工具。</returns>
    </member>
    <member name="P:System.ComponentModel.Design.DesignSurfaceManager.DesignSurfaces">
      <summary vsli:raw="Gets a collection of design surfaces.">取得設計介面的集合。</summary>
      <returns vsli:raw="A collection of design surfaces that are currently hosted by the design surface manager.">目前由設計介面管理員裝載的設計介面集合。</returns>
    </member>
    <member name="P:System.ComponentModel.Design.DesignSurfaceManager.ServiceContainer">
      <summary vsli:raw="Gets the design surface manager's &lt;see cref=&quot;P:System.ComponentModel.Design.DesignSurfaceManager.ServiceContainer&quot; /&gt;.">取得設計介面管理員的 <see cref="P:System.ComponentModel.Design.DesignSurfaceManager.ServiceContainer" />。</summary>
      <returns vsli:raw="The design surface manager's &lt;see cref=&quot;P:System.ComponentModel.Design.DesignSurfaceManager.ServiceContainer&quot; /&gt;.">設計介面管理員的 <see cref="P:System.ComponentModel.Design.DesignSurfaceManager.ServiceContainer" />。</returns>
    </member>
    <member name="T:System.ComponentModel.Design.DisplayMode">
      <summary vsli:raw="Defines identifiers that indicate the display modes used by &lt;see cref=&quot;T:System.ComponentModel.Design.ByteViewer&quot; /&gt;.">定義識別項，這個識別項會指示 <see cref="T:System.ComponentModel.Design.ByteViewer" /> 所使用的顯示模式。</summary>
    </member>
    <member name="F:System.ComponentModel.Design.DisplayMode.Ansi">
      <summary vsli:raw="An ANSI format display.">ANSI 格式顯示。</summary>
    </member>
    <member name="F:System.ComponentModel.Design.DisplayMode.Auto">
      <summary vsli:raw="A display mode that automatically selects a display mode. In this mode, the bytes are examined to determine if they are hexadecimal or printable. If the bytes are in hexadecimal format, the &lt;see cref=&quot;F:System.ComponentModel.Design.DisplayMode.Hexdump&quot; /&gt; mode is selected. If the characters match a printable character set, a test is run to automatically select either the &lt;see cref=&quot;F:System.ComponentModel.Design.DisplayMode.Ansi&quot; /&gt; or &lt;see cref=&quot;F:System.ComponentModel.Design.DisplayMode.Unicode&quot; /&gt; display mode.">自動選取顯示模式的顯示模式。 在這個模式下，會檢查位元組，以判斷位元組是否為十六進位或可列印的。 如果位元組是十六進位格式，則會選取 <see cref="F:System.ComponentModel.Design.DisplayMode.Hexdump" /> 模式。 如果字元符合可列印的字元集 (Character Set)，則會執行測試，自動選取 <see cref="F:System.ComponentModel.Design.DisplayMode.Ansi" /> 或 <see cref="F:System.ComponentModel.Design.DisplayMode.Unicode" /> 顯示模式。</summary>
    </member>
    <member name="F:System.ComponentModel.Design.DisplayMode.Hexdump">
      <summary vsli:raw="A hexadecimal format display.">十六進位格式顯示。</summary>
    </member>
    <member name="F:System.ComponentModel.Design.DisplayMode.Unicode">
      <summary vsli:raw="A Unicode format display.">Unicode 格式顯示。</summary>
    </member>
    <member name="T:System.ComponentModel.Design.EventBindingService">
      <summary vsli:raw="A default implementation of the &lt;see cref=&quot;T:System.ComponentModel.Design.IEventBindingService&quot; /&gt; interface.">
        <see cref="T:System.ComponentModel.Design.IEventBindingService" /> 介面的預設實作。</summary>
    </member>
    <member name="M:System.ComponentModel.Design.EventBindingService.#ctor(System.IServiceProvider)">
      <summary vsli:raw="Initializes a new instance of the &lt;see cref=&quot;T:System.ComponentModel.Design.EventBindingService&quot; /&gt; class.">初始化 <see cref="T:System.ComponentModel.Design.EventBindingService" /> 類別的新執行個體。</summary>
      <param name="provider" vsli:raw="The service provider from which &lt;see cref=&quot;T:System.ComponentModel.Design.EventBindingService&quot; /&gt; will query for services.">服務提供者，<see cref="T:System.ComponentModel.Design.EventBindingService" /> 會透過它查詢服務。</param>
      <exception cref="T:System.ArgumentNullException" vsli:raw="&lt;paramref name=&quot;provider&quot; /&gt; is &lt;see langword=&quot;null&quot; /&gt;.">
        <paramref name="provider" /> 為 <see langword="null" />。</exception>
    </member>
    <member name="M:System.ComponentModel.Design.EventBindingService.CreateUniqueMethodName(System.ComponentModel.IComponent,System.ComponentModel.EventDescriptor)">
      <summary vsli:raw="Creates a unique method name.">建立唯一的方法名稱。</summary>
      <param name="component" vsli:raw="The component for which the method name will be created.">將為其建立方法名稱的元件。</param>
      <param name="e" vsli:raw="The event to create a name for.">要為其建立名稱的事件。</param>
      <exception cref="T:System.ArgumentNullException" vsli:raw="&lt;paramref name=&quot;component&quot; /&gt; or &lt;paramref name=&quot;e&quot; /&gt; is &lt;see langword=&quot;null&quot; /&gt;.">
        <paramref name="component" /> 或 <paramref name="e" /> 為 <see langword="null" />。</exception>
      <returns vsli:raw="The unique method name.">唯一的方法名稱。</returns>
    </member>
    <member name="M:System.ComponentModel.Design.EventBindingService.FreeMethod(System.ComponentModel.IComponent,System.ComponentModel.EventDescriptor,System.String)">
      <summary vsli:raw="Provides a notification that a particular method is no longer being used by an event handler.">提供通知，告知特定的方法不再由事件處理常式使用。</summary>
      <param name="component" vsli:raw="The component to which the method is bound.">方法繫結至的元件。</param>
      <param name="e" vsli:raw="The &lt;see cref=&quot;T:System.ComponentModel.EventDescriptor&quot; /&gt; for the event handler.">事件處理常式的 <see cref="T:System.ComponentModel.EventDescriptor" />。</param>
      <param name="methodName" vsli:raw="The name of the method to be freed.">要釋放的方法名稱。</param>
    </member>
    <member name="M:System.ComponentModel.Design.EventBindingService.GetCompatibleMethods(System.ComponentModel.EventDescriptor)">
      <summary vsli:raw="Returns a collection of names of compatible methods.">傳回相容方法的名稱集合。</summary>
      <param name="e" vsli:raw="The &lt;see cref=&quot;T:System.ComponentModel.EventDescriptor&quot; /&gt; containing the compatible delegate.">
        <see cref="T:System.ComponentModel.EventDescriptor" />，包含相容的委派。</param>
      <exception cref="T:System.ArgumentNullException" vsli:raw="&lt;paramref name=&quot;e&quot; /&gt; is &lt;see langword=&quot;null&quot; /&gt;.">
        <paramref name="e" /> 為 <see langword="null" />。</exception>
      <returns vsli:raw="A collection of strings that are names of compatible methods.">相容方法之名稱的字串集合。</returns>
    </member>
    <member name="M:System.ComponentModel.Design.EventBindingService.GetService(System.Type)">
      <summary vsli:raw="Gets the requested service from the service provider.">從服務提供者取得要求的服務。</summary>
      <param name="serviceType" vsli:raw="The type of service to retrieve.">要擷取的服務類型。</param>
      <returns vsli:raw="A reference to the service specified by &lt;paramref name=&quot;serviceType&quot; /&gt;, or &lt;see langword=&quot;null&quot; /&gt; if the requested service is not available.">
        <paramref name="serviceType" /> 指定的服務參考，如果要求的服務不可用，則為 <see langword="null" />。</returns>
    </member>
    <member name="M:System.ComponentModel.Design.EventBindingService.ShowCode">
      <summary vsli:raw="Displays user code.">顯示使用者程式碼。</summary>
      <returns vsli:raw="&lt;see langword=&quot;true&quot; /&gt; if it is possible to display the code; otherwise, &lt;see langword=&quot;false&quot; /&gt;.">如果可以顯示程式碼，則為 <see langword="true" />，否則為 <see langword="false" />。</returns>
    </member>
    <member name="M:System.ComponentModel.Design.EventBindingService.ShowCode(System.ComponentModel.IComponent,System.ComponentModel.EventDescriptor,System.String)">
      <summary vsli:raw="Displays the user code for the specified method.">顯示指定方法的使用者程式碼。</summary>
      <param name="component" vsli:raw="The component to which the method is bound.">方法繫結至的元件。</param>
      <param name="e" vsli:raw="The &lt;see cref=&quot;T:System.ComponentModel.EventDescriptor&quot; /&gt; for the event handler.">事件處理常式的 <see cref="T:System.ComponentModel.EventDescriptor" />。</param>
      <param name="methodName" vsli:raw="The name of the method for which to display code.">要顯示程式碼的方法名稱。</param>
      <returns vsli:raw="&lt;see langword=&quot;true&quot; /&gt; if it is possible to display the code; otherwise, &lt;see langword=&quot;false&quot; /&gt;.">如果可以顯示程式碼，則為 <see langword="true" />，否則為 <see langword="false" />。</returns>
    </member>
    <member name="M:System.ComponentModel.Design.EventBindingService.ShowCode(System.Int32)">
      <summary vsli:raw="Displays the user code at the given line number.">顯示指定行號處的使用者程式碼。</summary>
      <param name="lineNumber" vsli:raw="The line number to show.">要顯示的行號。</param>
      <returns vsli:raw="&lt;see langword=&quot;true&quot; /&gt; if it is possible to display the code; otherwise, &lt;see langword=&quot;false&quot; /&gt;.">如果可以顯示程式碼，則為 <see langword="true" />，否則為 <see langword="false" />。</returns>
    </member>
    <member name="M:System.ComponentModel.Design.EventBindingService.System#ComponentModel#Design#IEventBindingService#CreateUniqueMethodName(System.ComponentModel.IComponent,System.ComponentModel.EventDescriptor)">
      <summary vsli:raw="Creates a unique name for an event-handler method for the specified component and event.">建立指定元件和事件之事件處理常式方法的唯一名稱。</summary>
      <param name="component" vsli:raw="The component instance the event is connected to.">事件所連接的元件執行個體。</param>
      <param name="e" vsli:raw="The event to create a name for.">要為其建立名稱的事件。</param>
      <exception cref="T:System.ArgumentNullException" vsli:raw="&lt;paramref name=&quot;component&quot; /&gt; or &lt;paramref name=&quot;e&quot; /&gt; is &lt;see langword=&quot;null&quot; /&gt;.">
        <paramref name="component" /> 或 <paramref name="e" /> 為 <see langword="null" />。</exception>
      <returns vsli:raw="The recommended name for the event-handler method for this event.">這個事件的事件處理常式方法的建議名稱。</returns>
    </member>
    <member name="M:System.ComponentModel.Design.EventBindingService.System#ComponentModel#Design#IEventBindingService#GetCompatibleMethods(System.ComponentModel.EventDescriptor)">
      <summary vsli:raw="Gets a collection of event-handler methods that have a method signature compatible with the specified event.">取得具有與指定事件相容之方法簽章的事件處理常式方法的集合。</summary>
      <param name="e" vsli:raw="The event to get the compatible event-handler methods for.">要為其取得相容事件處理常式方法的事件。</param>
      <exception cref="T:System.ArgumentNullException" vsli:raw="&lt;paramref name=&quot;e&quot; /&gt; is &lt;see langword=&quot;null&quot; /&gt;.">
        <paramref name="e" /> 為 <see langword="null" />。</exception>
      <returns vsli:raw="A collection of strings that are names of compatible methods.">相容方法之名稱的字串集合。</returns>
    </member>
    <member name="M:System.ComponentModel.Design.EventBindingService.System#ComponentModel#Design#IEventBindingService#GetEvent(System.ComponentModel.PropertyDescriptor)">
      <summary vsli:raw="Gets an &lt;see cref=&quot;T:System.ComponentModel.EventDescriptor&quot; /&gt; for the event that the specified property descriptor represents, if it represents an event.">取得指定屬性描述項表示之事件的 <see cref="T:System.ComponentModel.EventDescriptor" /> (如果指定屬性描述項表示事件)。</summary>
      <param name="property" vsli:raw="The property that represents an event.">表示事件的屬性。</param>
      <returns vsli:raw="An &lt;see cref=&quot;T:System.ComponentModel.EventDescriptor&quot; /&gt; for the event that the property represents, or &lt;see langword=&quot;null&quot; /&gt; if the property does not represent an event.">屬性所表示事件的 <see cref="T:System.ComponentModel.EventDescriptor" />，或 <see langword="null" /> (如果屬性不表示事件)。</returns>
    </member>
    <member name="M:System.ComponentModel.Design.EventBindingService.System#ComponentModel#Design#IEventBindingService#GetEventProperties(System.ComponentModel.EventDescriptorCollection)">
      <summary vsli:raw="Converts a set of event descriptors to a set of property descriptors.">將事件描述項集合轉換為屬性描述項集合。</summary>
      <param name="events" vsli:raw="The events to convert to properties.">要轉換為屬性的事件。</param>
      <exception cref="T:System.ArgumentNullException" vsli:raw="&lt;paramref name=&quot;events&quot; /&gt; is &lt;see langword=&quot;null&quot; /&gt;.">
        <paramref name="events" /> 為 <see langword="null" />。</exception>
      <returns vsli:raw="An array of &lt;see cref=&quot;T:System.ComponentModel.PropertyDescriptor&quot; /&gt; objects that describe the event set.">
        <see cref="T:System.ComponentModel.PropertyDescriptor" /> 物件陣列，描述事件集。</returns>
    </member>
    <member name="M:System.ComponentModel.Design.EventBindingService.System#ComponentModel#Design#IEventBindingService#GetEventProperty(System.ComponentModel.EventDescriptor)">
      <summary vsli:raw="Converts a single event descriptor to a property descriptor.">將單一事件描述項轉換為屬性描述項。</summary>
      <param name="e" vsli:raw="The event to convert.">要轉換的事件。</param>
      <exception cref="T:System.ArgumentNullException" vsli:raw="&lt;paramref name=&quot;e&quot; /&gt; is &lt;see langword=&quot;null&quot; /&gt;.">
        <paramref name="e" /> 為 <see langword="null" />。</exception>
      <returns vsli:raw="A &lt;see cref=&quot;T:System.ComponentModel.PropertyDescriptor&quot; /&gt; that describes the event.">
        <see cref="T:System.ComponentModel.PropertyDescriptor" />，描述事件。</returns>
    </member>
    <member name="M:System.ComponentModel.Design.EventBindingService.System#ComponentModel#Design#IEventBindingService#ShowCode">
      <summary vsli:raw="Displays the user code for the designer.">顯示設計工具的使用者程式碼。</summary>
      <returns vsli:raw="&lt;see langword=&quot;true&quot; /&gt; if the code is displayed; otherwise, &lt;see langword=&quot;false&quot; /&gt;.">如果程式碼已顯示，則為 <see langword="true" />，否則為 <see langword="false" />。</returns>
    </member>
    <member name="M:System.ComponentModel.Design.EventBindingService.System#ComponentModel#Design#IEventBindingService#ShowCode(System.ComponentModel.IComponent,System.ComponentModel.EventDescriptor)">
      <summary vsli:raw="Displays the user code for the specified event.">顯示指定事件的使用者程式碼。</summary>
      <param name="component" vsli:raw="The component that the event is connected to.">事件所連接的元件。</param>
      <param name="e" vsli:raw="The event to display.">要顯示的事件。</param>
      <exception cref="T:System.ArgumentNullException" vsli:raw="&lt;paramref name=&quot;events&quot; /&gt; is &lt;see langword=&quot;null&quot; /&gt;.">
        <paramref name="events" /> 為 <see langword="null" />。</exception>
      <returns vsli:raw="&lt;see langword=&quot;true&quot; /&gt; if the code is displayed; otherwise, &lt;see langword=&quot;false&quot; /&gt;.">如果程式碼已顯示，則為 <see langword="true" />，否則為 <see langword="false" />。</returns>
    </member>
    <member name="M:System.ComponentModel.Design.EventBindingService.System#ComponentModel#Design#IEventBindingService#ShowCode(System.Int32)">
      <summary vsli:raw="Displays the user code for the designer at the specified line.">在指定行中顯示設計工具的使用者程式碼。</summary>
      <param name="lineNumber" vsli:raw="The line number to place the caret on.">要放置插入號 (Caret) 的行數。</param>
      <returns vsli:raw="&lt;see langword=&quot;true&quot; /&gt; if the code is displayed; otherwise, &lt;see langword=&quot;false&quot; /&gt;.">如果程式碼已顯示，則為 <see langword="true" />，否則為 <see langword="false" />。</returns>
    </member>
    <member name="M:System.ComponentModel.Design.EventBindingService.UseMethod(System.ComponentModel.IComponent,System.ComponentModel.EventDescriptor,System.String)">
      <summary vsli:raw="Provides a notification that a particular method is being used by an event handler.">提供通知，告知特定的方法正由事件處理常式使用。</summary>
      <param name="component" vsli:raw="The component to which the method is bound.">方法繫結至的元件。</param>
      <param name="e" vsli:raw="The &lt;see cref=&quot;T:System.ComponentModel.EventDescriptor&quot; /&gt; for the event handler.">事件處理常式的 <see cref="T:System.ComponentModel.EventDescriptor" />。</param>
      <param name="methodName" vsli:raw="The name of the method.">方法的名稱。</param>
    </member>
    <member name="M:System.ComponentModel.Design.EventBindingService.ValidateMethodName(System.String)">
      <summary vsli:raw="Validates that the provided method name is valid for the language or script being used.">驗證提供的方法名稱是否對正在使用的語言或指令碼有效。</summary>
      <param name="methodName" vsli:raw="The method name to validate.">要驗證的方法名稱。</param>
    </member>
    <member name="T:System.ComponentModel.Design.ExceptionCollection">
      <summary vsli:raw="Represents the collection of exceptions.">表示例外狀況的集合。</summary>
    </member>
    <member name="M:System.ComponentModel.Design.ExceptionCollection.#ctor(System.Collections.ArrayList)">
      <summary vsli:raw="Initializes a new instance of the &lt;see cref=&quot;T:System.ComponentModel.Design.ExceptionCollection&quot; /&gt; class.">初始化 <see cref="T:System.ComponentModel.Design.ExceptionCollection" /> 類別的新執行個體。</summary>
      <param name="exceptions" vsli:raw="An array of type &lt;see cref=&quot;T:System.Exception&quot; /&gt;, containing the objects to populate the collection.">
        <see cref="T:System.Exception" /> 型別的陣列，包含要填入集合的物件。</param>
    </member>
    <member name="M:System.ComponentModel.Design.ExceptionCollection.GetObjectData(System.Runtime.Serialization.SerializationInfo,System.Runtime.Serialization.StreamingContext)">
      <summary vsli:raw="Populates a &lt;see cref=&quot;T:System.Runtime.Serialization.SerializationInfo&quot; /&gt; with the data needed to serialize the &lt;see cref=&quot;T:System.ComponentModel.Design.ExceptionCollection&quot; /&gt;.">將序列化 <see cref="T:System.Runtime.Serialization.SerializationInfo" /> 所需的資料填入 <see cref="T:System.ComponentModel.Design.ExceptionCollection" />。</summary>
      <param name="info" vsli:raw="The &lt;see cref=&quot;T:System.Runtime.Serialization.SerializationInfo&quot; /&gt; to populate with data.">要以資料填入的 <see cref="T:System.Runtime.Serialization.SerializationInfo" />。</param>
      <param name="context" vsli:raw="The destination (see &lt;see cref=&quot;T:System.Runtime.Serialization.StreamingContext&quot; /&gt;) for this serialization.">這個序列化的目的端 (請參閱 <see cref="T:System.Runtime.Serialization.StreamingContext" />)。</param>
      <exception cref="T:System.ArgumentNullException" vsli:raw="&lt;paramref name=&quot;info&quot; /&gt; is &lt;see langword=&quot;null&quot; /&gt;.">
        <paramref name="info" /> 為 <see langword="null" />。</exception>
    </member>
    <member name="P:System.ComponentModel.Design.ExceptionCollection.Exceptions">
      <summary vsli:raw="Gets the array of &lt;see cref=&quot;T:System.Exception&quot; /&gt; objects that represent the collection of exceptions.">取得 <see cref="T:System.Exception" /> 物件的陣列，表示例外狀況的集合。</summary>
      <returns vsli:raw="An &lt;see cref=&quot;T:System.Exception&quot; /&gt; array that represent the collection of exceptions.">
        <see cref="T:System.Exception" /> 陣列，表示例外狀況的集合。</returns>
    </member>
    <member name="T:System.ComponentModel.Design.IMultitargetHelperService">
      <summary vsli:raw="Defines multi-target type name resolution services in a design-time environment.">定義設計階段環境中的多目標型別名稱解析服務。</summary>
    </member>
    <member name="M:System.ComponentModel.Design.IMultitargetHelperService.GetAssemblyQualifiedName(System.Type)">
      <summary vsli:raw="Resolves a type for the target framework to an assembly-qualified name.">將目標 Framework 的型別解析為組件限定名稱。</summary>
      <param name="type" vsli:raw="The type to resolve.">要解析的型別。</param>
      <returns vsli:raw="The &lt;see cref=&quot;P:System.Type.AssemblyQualifiedName&quot; /&gt; for &lt;paramref name=&quot;type&quot; /&gt; in the target framework.">目標 Framework 中 <paramref name="type" /> 的 <see cref="P:System.Type.AssemblyQualifiedName" />。</returns>
    </member>
    <member name="T:System.ComponentModel.Design.InheritanceService">
      <summary vsli:raw="Provides a set of methods for identifying inherited components.">提供一組方法，識別繼承的元件。</summary>
    </member>
    <member name="M:System.ComponentModel.Design.InheritanceService.#ctor">
      <summary vsli:raw="Initializes a new instance of the &lt;see cref=&quot;T:System.ComponentModel.Design.InheritanceService&quot; /&gt; class.">初始化 <see cref="T:System.ComponentModel.Design.InheritanceService" /> 類別的新執行個體。</summary>
    </member>
    <member name="M:System.ComponentModel.Design.InheritanceService.AddInheritedComponents(System.ComponentModel.IComponent,System.ComponentModel.IContainer)">
      <summary vsli:raw="Adds the components inherited by the specified component to the &lt;see cref=&quot;T:System.ComponentModel.Design.InheritanceService&quot; /&gt;.">會將指定元件所繼承的元件加入 <see cref="T:System.ComponentModel.Design.InheritanceService" />。</summary>
      <param name="component" vsli:raw="The component to search for inherited components to add to the specified container.">元件，用來搜尋要加入至指定容器的繼承元件。</param>
      <param name="container" vsli:raw="The container to add the inherited components to.">要加入繼承元件的容器。</param>
    </member>
    <member name="M:System.ComponentModel.Design.InheritanceService.AddInheritedComponents(System.Type,System.ComponentModel.IComponent,System.ComponentModel.IContainer)">
      <summary vsli:raw="Adds the components of the specified type that are inherited by the specified component to the &lt;see cref=&quot;T:System.ComponentModel.Design.InheritanceService&quot; /&gt;.">將由指定元件繼承的指定型別之元件加入 <see cref="T:System.ComponentModel.Design.InheritanceService" />。</summary>
      <param name="type" vsli:raw="The base type to search for.">要搜尋的基底型別。</param>
      <param name="component" vsli:raw="The component to search for inherited components to add to the specified container.">元件，用來搜尋要加入至指定容器的繼承元件。</param>
      <param name="container" vsli:raw="The container to add the inherited components to.">要加入繼承元件的容器。</param>
    </member>
    <member name="M:System.ComponentModel.Design.InheritanceService.Dispose">
      <summary vsli:raw="Releases all resources used by the &lt;see cref=&quot;T:System.ComponentModel.Design.InheritanceService&quot; /&gt;.">釋放 <see cref="T:System.ComponentModel.Design.InheritanceService" /> 所使用的所有資源。</summary>
    </member>
    <member name="M:System.ComponentModel.Design.InheritanceService.Dispose(System.Boolean)">
      <summary vsli:raw="Releases the unmanaged resources used by the &lt;see cref=&quot;T:System.ComponentModel.Design.InheritanceService&quot; /&gt; and optionally releases the managed resources.">釋放 <see cref="T:System.ComponentModel.Design.InheritanceService" /> 所使用的 Unmanaged 資源，並選擇性地釋放 Managed 資源。</summary>
      <param name="disposing" vsli:raw="&lt;see langword=&quot;true&quot; /&gt; to release both managed and unmanaged resources; &lt;see langword=&quot;false&quot; /&gt; to release only unmanaged resources.">
        <see langword="true" /> 表示釋放 Managed 和 Unmanaged 資源，<see langword="false" /> 則表示只釋放 Unmanaged 資源。</param>
    </member>
    <member name="M:System.ComponentModel.Design.InheritanceService.GetInheritanceAttribute(System.ComponentModel.IComponent)">
      <summary vsli:raw="Gets the inheritance attribute of the specified component.">取得指定元件的繼承屬性。</summary>
      <param name="component" vsli:raw="The component to retrieve the inheritance attribute for.">要擷取繼承屬性的元件。</param>
      <returns vsli:raw="An &lt;see cref=&quot;T:System.ComponentModel.InheritanceAttribute&quot; /&gt; that describes the level of inheritance that this component comes from.">
        <see cref="T:System.ComponentModel.InheritanceAttribute" />，描述此元件源自於哪一個繼承層級。</returns>
    </member>
    <member name="M:System.ComponentModel.Design.InheritanceService.IgnoreInheritedMember(System.Reflection.MemberInfo,System.ComponentModel.IComponent)">
      <summary vsli:raw="Indicates whether to ignore the specified member.">指示是否要略過指定的成員。</summary>
      <param name="member" vsli:raw="The member to check. This member is either a &lt;see cref=&quot;T:System.Reflection.FieldInfo&quot; /&gt; or a &lt;see cref=&quot;T:System.Reflection.MethodInfo&quot; /&gt;.">要檢查的成員。 此成員為 <see cref="T:System.Reflection.FieldInfo" /> 或 <see cref="T:System.Reflection.MethodInfo" /> 兩者的其中一個。</param>
      <param name="component" vsli:raw="The component instance this member is bound to.">此成員所繫結的元件執行個體。</param>
      <returns vsli:raw="&lt;see langword=&quot;true&quot; /&gt; if the specified member should be included in the set of inherited components; otherwise, &lt;see langword=&quot;false&quot; /&gt;.">如果指定的成員應該包含在一組繼承的元件中，則為 <see langword="true" />，否則為 <see langword="false" />。</returns>
    </member>
    <member name="T:System.ComponentModel.Design.LoadedEventArgs">
      <summary vsli:raw="Provides data for the &lt;see cref=&quot;E:System.ComponentModel.Design.DesignSurface.Loaded&quot; /&gt; event. This class cannot be inherited.">提供 <see cref="E:System.ComponentModel.Design.DesignSurface.Loaded" /> 事件的資料。 此類別無法獲得繼承。</summary>
    </member>
    <member name="M:System.ComponentModel.Design.LoadedEventArgs.#ctor(System.Boolean,System.Collections.ICollection)">
      <summary vsli:raw="Initializes a new instance of the &lt;see cref=&quot;T:System.ComponentModel.Design.LoadedEventArgs&quot; /&gt; class.">初始化 <see cref="T:System.ComponentModel.Design.LoadedEventArgs" /> 類別的新執行個體。</summary>
      <param name="succeeded" vsli:raw="&lt;see langword=&quot;true&quot; /&gt; to indicate that the designer load was successful; otherwise, &lt;see langword=&quot;false&quot; /&gt;.">
        <see langword="true" /> 表示設計工具載入順利完成，否則為 <see langword="false" />。</param>
      <param name="errors" vsli:raw="A collection of errors that occurred while the designer was loading.">載入設計工具時發生的錯誤集合。</param>
    </member>
    <member name="P:System.ComponentModel.Design.LoadedEventArgs.Errors">
      <summary vsli:raw="Gets a collection of errors that occurred while the designer was loading.">取得在載入設計工具時發生的錯誤集合。</summary>
      <returns vsli:raw="A collection of errors that occurred while the designer was loading.">載入設計工具時發生的錯誤集合。</returns>
    </member>
    <member name="P:System.ComponentModel.Design.LoadedEventArgs.HasSucceeded">
      <summary vsli:raw="Gets a value that indicates whether the designer load was successful.">取得值，指出設計工具載入是否順利完成。</summary>
      <returns vsli:raw="&lt;see langword=&quot;true&quot; /&gt; if the designer load was successful; otherwise, &lt;see langword=&quot;false&quot; /&gt;.">如果設計工具載入順利完成，則為 <see langword="true" />，否則為 <see langword="false" />。</returns>
    </member>
    <member name="T:System.ComponentModel.Design.LoadedEventHandler">
      <summary vsli:raw="Represents the method that will handle the &lt;see cref=&quot;E:System.ComponentModel.Design.DesignSurface.Loaded&quot; /&gt; event of the &lt;see cref=&quot;T:System.ComponentModel.Design.DesignSurface&quot; /&gt; class. This class cannot be inherited.">代表將處理 <see cref="T:System.ComponentModel.Design.DesignSurface" /> 類別的 <see cref="E:System.ComponentModel.Design.DesignSurface.Loaded" /> 事件之方法。 此類別無法獲得繼承。</summary>
      <param name="sender" vsli:raw="The source of the event.">事件的來源。</param>
      <param name="e" vsli:raw="A &lt;see cref=&quot;T:System.ComponentModel.Design.LoadedEventArgs&quot; /&gt; that contains the event data.">
        <see cref="T:System.ComponentModel.Design.LoadedEventArgs" />，其中包含事件資料。</param>
    </member>
    <member name="T:System.ComponentModel.Design.MenuCommandsChangedEventArgs">
      <summary vsli:raw="Provides data for the &lt;see cref=&quot;E:System.ComponentModel.Design.MenuCommandService.MenuCommandsChanged&quot; /&gt; event.">提供 <see cref="E:System.ComponentModel.Design.MenuCommandService.MenuCommandsChanged" /> 事件的資料。</summary>
    </member>
    <member name="M:System.ComponentModel.Design.MenuCommandsChangedEventArgs.#ctor(System.ComponentModel.Design.MenuCommandsChangedType,System.ComponentModel.Design.MenuCommand)">
      <summary vsli:raw="Initializes a new instance of the &lt;see cref=&quot;T:System.ComponentModel.Design.MenuCommandsChangedEventArgs&quot; /&gt; class.">初始化 <see cref="T:System.ComponentModel.Design.MenuCommandsChangedEventArgs" /> 類別的新執行個體。</summary>
      <param name="changeType" vsli:raw="The type of change.">變更的類型。</param>
      <param name="command" vsli:raw="The menu command.">功能表命令。</param>
    </member>
    <member name="P:System.ComponentModel.Design.MenuCommandsChangedEventArgs.ChangeType">
      <summary vsli:raw="Gets the type of change that caused &lt;see cref=&quot;E:System.ComponentModel.Design.MenuCommandService.MenuCommandsChanged&quot; /&gt; to be raised.">取得導致引發 <see cref="E:System.ComponentModel.Design.MenuCommandService.MenuCommandsChanged" /> 的變更類型。</summary>
      <returns vsli:raw="A &lt;see cref=&quot;T:System.ComponentModel.Design.MenuCommandsChangedType&quot; /&gt; that caused &lt;see cref=&quot;E:System.ComponentModel.Design.MenuCommandService.MenuCommandsChanged&quot; /&gt; to be raised.">
        <see cref="T:System.ComponentModel.Design.MenuCommandsChangedType" />，導致引發 <see cref="E:System.ComponentModel.Design.MenuCommandService.MenuCommandsChanged" />。</returns>
    </member>
    <member name="P:System.ComponentModel.Design.MenuCommandsChangedEventArgs.Command">
      <summary vsli:raw="Gets the command that was added, removed, or changed.">取得加入、移除或變更的命令。</summary>
      <returns vsli:raw="A &lt;see cref=&quot;T:System.ComponentModel.Design.MenuCommand&quot; /&gt; that was added, removed, or changed.">已加入、移除或變更 <see cref="T:System.ComponentModel.Design.MenuCommand" />。</returns>
    </member>
    <member name="T:System.ComponentModel.Design.MenuCommandsChangedEventHandler">
      <summary vsli:raw="Represents the method that will handle the &lt;see cref=&quot;E:System.ComponentModel.Design.MenuCommandService.MenuCommandsChanged&quot; /&gt; event of a &lt;see cref=&quot;T:System.ComponentModel.Design.MenuCommandService&quot; /&gt;. This class cannot be inherited.">代表將處理 <see cref="E:System.ComponentModel.Design.MenuCommandService.MenuCommandsChanged" /> 之 <see cref="T:System.ComponentModel.Design.MenuCommandService" /> 事件的方法。 此類別無法獲得繼承。</summary>
      <param name="sender" vsli:raw="The source of the event.">事件的來源。</param>
      <param name="e" vsli:raw="A &lt;see cref=&quot;T:System.ComponentModel.Design.MenuCommandsChangedEventArgs&quot; /&gt; that contains the event data.">
        <see cref="T:System.ComponentModel.Design.MenuCommandsChangedEventArgs" />，其中包含事件資料。</param>
    </member>
    <member name="T:System.ComponentModel.Design.MenuCommandsChangedType">
      <summary vsli:raw="Specifies the type of action that occurred to the related object's &lt;see cref=&quot;T:System.Windows.Forms.Design.MenuCommands&quot; /&gt; collection.">指定相關物件之 <see cref="T:System.Windows.Forms.Design.MenuCommands" /> 集合發生的動作類型。</summary>
    </member>
    <member name="F:System.ComponentModel.Design.MenuCommandsChangedType.CommandAdded">
      <summary vsli:raw="Specifies that one or more command objects were added.">指定已加入一或多個命令物件。</summary>
    </member>
    <member name="F:System.ComponentModel.Design.MenuCommandsChangedType.CommandChanged">
      <summary vsli:raw="Specifies that one or more commands have changed their status.">指定一或多個命令已變更其狀態。</summary>
    </member>
    <member name="F:System.ComponentModel.Design.MenuCommandsChangedType.CommandRemoved">
      <summary vsli:raw="Specifies that one or more commands were removed.">指定已移除一或多個命令。</summary>
    </member>
    <member name="T:System.ComponentModel.Design.MenuCommandService">
      <summary vsli:raw="Implements the &lt;see cref=&quot;T:System.ComponentModel.Design.IMenuCommandService&quot; /&gt; interface.">實作 <see cref="T:System.ComponentModel.Design.IMenuCommandService" /> 介面。</summary>
    </member>
    <member name="E:System.ComponentModel.Design.MenuCommandService.MenuCommandsChanged">
      <summary vsli:raw="Occurs when the status of a menu command has changed.">發生於功能表命令狀態變更時。</summary>
    </member>
    <member name="M:System.ComponentModel.Design.MenuCommandService.#ctor(System.IServiceProvider)">
      <summary vsli:raw="Initializes a new instance of the &lt;see cref=&quot;T:System.ComponentModel.Design.MenuCommandService&quot; /&gt; class.">初始化 <see cref="T:System.ComponentModel.Design.MenuCommandService" /> 類別的新執行個體。</summary>
      <param name="serviceProvider" vsli:raw="The service provider that this service uses to obtain other services.">這個服務用於取得其他服務的服務提供者。</param>
    </member>
    <member name="M:System.ComponentModel.Design.MenuCommandService.AddCommand(System.ComponentModel.Design.MenuCommand)">
      <summary vsli:raw="Adds a command handler to the menu command service.">將命令處理常式加入至功能表命令服務。</summary>
      <param name="command" vsli:raw="The &lt;see cref=&quot;T:System.ComponentModel.Design.MenuCommand&quot; /&gt; to add.">要加入的 <see cref="T:System.ComponentModel.Design.MenuCommand" />。</param>
      <exception cref="T:System.ArgumentNullException" vsli:raw="&lt;paramref name=&quot;command&quot; /&gt; is &lt;see langword=&quot;null&quot; /&gt;.">
        <paramref name="command" /> 為 <see langword="null" />。</exception>
      <exception cref="T:System.ArgumentException" vsli:raw="A command handler &lt;paramref name=&quot;command&quot; /&gt; already exists.">命令處理常式 <paramref name="command" /> 已經存在。</exception>
    </member>
    <member name="M:System.ComponentModel.Design.MenuCommandService.AddVerb(System.ComponentModel.Design.DesignerVerb)">
      <summary vsli:raw="Adds a verb to the verb table of the &lt;see cref=&quot;T:System.ComponentModel.Design.MenuCommandService&quot; /&gt;.">將動詞命令加入至 <see cref="T:System.ComponentModel.Design.MenuCommandService" /> 的 verb 表格。</summary>
      <param name="verb" vsli:raw="The &lt;see cref=&quot;T:System.ComponentModel.Design.DesignerVerb&quot; /&gt; to add.">要加入的 <see cref="T:System.ComponentModel.Design.DesignerVerb" />。</param>
      <exception cref="T:System.ArgumentNullException" vsli:raw="&lt;paramref name=&quot;verb&quot; /&gt; is &lt;see langword=&quot;null&quot; /&gt;.">
        <paramref name="verb" /> 為 <see langword="null" />。</exception>
    </member>
    <member name="M:System.ComponentModel.Design.MenuCommandService.Dispose">
      <summary vsli:raw="Releases all resources used by the &lt;see cref=&quot;T:System.ComponentModel.Design.MenuCommandService&quot; /&gt;.">釋放 <see cref="T:System.ComponentModel.Design.MenuCommandService" /> 所使用的所有資源。</summary>
    </member>
    <member name="M:System.ComponentModel.Design.MenuCommandService.Dispose(System.Boolean)">
      <summary vsli:raw="Releases all resources used by the &lt;see cref=&quot;T:System.ComponentModel.Design.MenuCommandService&quot; /&gt;.">釋放 <see cref="T:System.ComponentModel.Design.MenuCommandService" /> 所使用的所有資源。</summary>
      <param name="disposing" vsli:raw="&lt;see langword=&quot;true&quot; /&gt; to release both managed and unmanaged resources; &lt;see langword=&quot;false&quot; /&gt; to release only unmanaged resources.">
        <see langword="true" /> 表示釋放 Managed 和 Unmanaged 資源，<see langword="false" /> 則表示只釋放 Unmanaged 資源。</param>
    </member>
    <member name="M:System.ComponentModel.Design.MenuCommandService.EnsureVerbs">
      <summary vsli:raw="Ensures that the verb list has been created.">確定已建立動詞命令清單。</summary>
    </member>
    <member name="M:System.ComponentModel.Design.MenuCommandService.FindCommand(System.ComponentModel.Design.CommandID)">
      <summary vsli:raw="Searches for the &lt;see cref=&quot;T:System.ComponentModel.Design.MenuCommand&quot; /&gt; associated with the given command ID.">搜尋與指定命令 ID 相關聯的 <see cref="T:System.ComponentModel.Design.MenuCommand" />。</summary>
      <param name="commandID" vsli:raw="The &lt;see cref=&quot;T:System.ComponentModel.Design.CommandID&quot; /&gt; to find.">要尋找的 <see cref="T:System.ComponentModel.Design.CommandID" />。</param>
      <returns vsli:raw="The &lt;see cref=&quot;T:System.ComponentModel.Design.MenuCommand&quot; /&gt; associated with the given command; otherwise, &lt;see langword=&quot;null&quot; /&gt; if the command is not found.">與指定命令相關聯的 <see cref="T:System.ComponentModel.Design.MenuCommand" />，如果找不到該命令，則為 <see langword="null" />。</returns>
    </member>
    <member name="M:System.ComponentModel.Design.MenuCommandService.FindCommand(System.Guid,System.Int32)">
      <summary vsli:raw="Searches for the &lt;see cref=&quot;T:System.ComponentModel.Design.MenuCommand&quot; /&gt; associated with the given command.">搜索與指定命令相關聯的 <see cref="T:System.ComponentModel.Design.MenuCommand" />。</summary>
      <param name="guid" vsli:raw="The GUID of the command.">命令的 GUID。</param>
      <param name="id" vsli:raw="The ID of the command.">命令的識別碼。</param>
      <returns vsli:raw="The &lt;see cref=&quot;T:System.ComponentModel.Design.MenuCommand&quot; /&gt; associated with the given command; otherwise, &lt;see langword=&quot;null&quot; /&gt; if the command is not found.">與指定命令相關聯的 <see cref="T:System.ComponentModel.Design.MenuCommand" />，如果找不到該命令，則為 <see langword="null" />。</returns>
    </member>
    <member name="M:System.ComponentModel.Design.MenuCommandService.GetCommandList(System.Guid)">
      <summary vsli:raw="Gets the command list for a given GUID.">取得指定 GUID 的命令清單。</summary>
      <param name="guid" vsli:raw="The GUID of the command list.">命令清單的 GUID。</param>
      <returns vsli:raw="An &lt;see cref=&quot;T:System.Collections.ICollection&quot; /&gt; of commands.">命令的 <see cref="T:System.Collections.ICollection" />。</returns>
    </member>
    <member name="M:System.ComponentModel.Design.MenuCommandService.GetService(System.Type)">
      <summary vsli:raw="Gets a reference to the requested service.">取得所要求服務的參考。</summary>
      <param name="serviceType" vsli:raw="The &lt;see cref=&quot;T:System.Type&quot; /&gt; of the service to retrieve.">要擷取之服務的 <see cref="T:System.Type" />。</param>
      <exception cref="T:System.ArgumentNullException" vsli:raw="&lt;paramref name=&quot;serviceType&quot; /&gt; is &lt;see langword=&quot;null&quot; /&gt;.">
        <paramref name="serviceType" /> 為 <see langword="null" />。</exception>
      <returns vsli:raw="A reference to &lt;paramref name=&quot;serviceType&quot; /&gt;; otherwise, &lt;see langword=&quot;null&quot; /&gt; if the service is not found.">
        <paramref name="serviceType" /> 的參考，如果找不到服務，則為 <see langword="null" />。</returns>
    </member>
    <member name="M:System.ComponentModel.Design.MenuCommandService.GlobalInvoke(System.ComponentModel.Design.CommandID)">
      <summary vsli:raw="Invokes the given command on the local form or in the global environment.">在本機表單上，或在全域環境中，叫用指定的命令。</summary>
      <param name="commandID" vsli:raw="The command to invoke.">要叫用的命令。</param>
      <returns vsli:raw="&lt;see langword=&quot;true&quot; /&gt;, if the command was found; otherwise, &lt;see langword=&quot;false&quot; /&gt;.">如果找到命令，則為 <see langword="true" />，否則為 <see langword="false" />。</returns>
    </member>
    <member name="M:System.ComponentModel.Design.MenuCommandService.GlobalInvoke(System.ComponentModel.Design.CommandID,System.Object)">
      <summary vsli:raw="Invokes the given command with the given parameter on the local form or in the global environment.">在本機表單上，或在全域環境中，叫用具有指定參數的指定命令。</summary>
      <param name="commandId" vsli:raw="The command to invoke.">要叫用的命令。</param>
      <param name="arg" vsli:raw="A parameter for the invocation.">引動過程的參數。</param>
      <returns vsli:raw="&lt;see langword=&quot;true&quot; /&gt;, if the command was found; otherwise, &lt;see langword=&quot;false&quot; /&gt;.">如果找到命令，則為 <see langword="true" />，否則為 <see langword="false" />。</returns>
    </member>
    <member name="M:System.ComponentModel.Design.MenuCommandService.OnCommandsChanged(System.ComponentModel.Design.MenuCommandsChangedEventArgs)">
      <summary vsli:raw="Raises the &lt;see cref=&quot;E:System.ComponentModel.Design.MenuCommandService.MenuCommandsChanged&quot; /&gt; event.">引發 <see cref="E:System.ComponentModel.Design.MenuCommandService.MenuCommandsChanged" /> 事件。</summary>
      <param name="e" vsli:raw="A &lt;see cref=&quot;T:System.ComponentModel.Design.MenuCommandsChangedEventArgs&quot; /&gt; that contains the event data.">
        <see cref="T:System.ComponentModel.Design.MenuCommandsChangedEventArgs" />，其中包含事件資料。</param>
    </member>
    <member name="M:System.ComponentModel.Design.MenuCommandService.RemoveCommand(System.ComponentModel.Design.MenuCommand)">
      <summary vsli:raw="Removes the given menu command from the document.">從文件中移除指定的功能表命令。</summary>
      <param name="command" vsli:raw="The command to remove.">要移除的命令。</param>
      <exception cref="T:System.ArgumentNullException" vsli:raw="&lt;paramref name=&quot;command&quot; /&gt; is &lt;see langword=&quot;null&quot; /&gt;.">
        <paramref name="command" /> 為 <see langword="null" />。</exception>
    </member>
    <member name="M:System.ComponentModel.Design.MenuCommandService.RemoveVerb(System.ComponentModel.Design.DesignerVerb)">
      <summary vsli:raw="Removes the given verb from the document.">從文件中移除指定的動詞命令。</summary>
      <param name="verb" vsli:raw="The verb to remove.">要移除的動詞命令。</param>
      <exception cref="T:System.ArgumentNullException" vsli:raw="&lt;paramref name=&quot;verb&quot; /&gt; is &lt;see langword=&quot;null&quot; /&gt;.">
        <paramref name="verb" /> 為 <see langword="null" />。</exception>
    </member>
    <member name="M:System.ComponentModel.Design.MenuCommandService.ShowContextMenu(System.ComponentModel.Design.CommandID,System.Int32,System.Int32)">
      <summary vsli:raw="Shows the shortcut menu with the given command ID at the given location.">在指定位置顯示具有指定命令 ID 的捷徑功能表。</summary>
      <param name="menuID" vsli:raw="The shortcut menu to display.">要顯示的捷徑功能表。</param>
      <param name="x" vsli:raw="The x-coordinate of the shortcut menu's location.">捷徑功能表位置的 X 軸。</param>
      <param name="y" vsli:raw="The y-coordinate of the shortcut menu's location.">捷徑功能表位置的 Y 軸。</param>
    </member>
    <member name="P:System.ComponentModel.Design.MenuCommandService.Verbs">
      <summary vsli:raw="Gets a collection of the designer verbs that are currently available.">取得目前可用的設計工具動詞命令集合。</summary>
      <returns vsli:raw="A &lt;see cref=&quot;T:System.ComponentModel.Design.DesignerVerbCollection&quot; /&gt; of the designer verbs that are currently available.">目前可用之設計工具動詞命令的 <see cref="T:System.ComponentModel.Design.DesignerVerbCollection" />。</returns>
    </member>
    <member name="T:System.ComponentModel.Design.MultilineStringEditor">
      <summary vsli:raw="Displays a dialog for editing multi-line strings in design mode.">顯示對話方塊，可在設計模式中編輯多行字串。</summary>
    </member>
    <member name="M:System.ComponentModel.Design.MultilineStringEditor.#ctor">
      <summary vsli:raw="Initializes a new instance of the &lt;see cref=&quot;T:System.ComponentModel.Design.MultilineStringEditor&quot; /&gt; class.">初始化 <see cref="T:System.ComponentModel.Design.MultilineStringEditor" /> 類別的新執行個體。</summary>
    </member>
    <member name="M:System.ComponentModel.Design.MultilineStringEditor.EditValue(System.ComponentModel.ITypeDescriptorContext,System.IServiceProvider,System.Object)">
      <summary vsli:raw="Edits the specified object value using the edit style provided by &lt;xref data-throw-if-not-resolved=&quot;true&quot; uid=&quot;System.Drawing.Design.ImageEditor.GetEditStyle(System.ComponentModel.ITypeDescriptorContext)&quot;&gt;&lt;/xref&gt;.">使用 <see cref="M:System.Drawing.Design.ImageEditor.GetEditStyle(System.ComponentModel.ITypeDescriptorContext)" /> 所提供的編輯樣式來編輯指定的物件值。</summary>
      <param name="context" vsli:raw="An &lt;xref data-throw-if-not-resolved=&quot;true&quot; uid=&quot;System.ComponentModel.ITypeDescriptorContext&quot;&gt;&lt;/xref&gt; that can be used to gain additional context information.">
        <see cref="T:System.ComponentModel.ITypeDescriptorContext" />，可用來取得額外的內容資訊。</param>
      <param name="provider" vsli:raw="A service provider object through which editing services can be obtained.">服務提供者物件，可透過它取得編輯服務。</param>
      <param name="value" vsli:raw="An instance of the value being edited.">已編輯值的執行個體。</param>
      <returns vsli:raw="The new value of the object. If the value of the object has not changed, this method should return the same object passed to it.">物件的新值。 如果物件的值未經變更，這個方法會傳回跟傳遞給它相同的物件。</returns>
    </member>
    <member name="M:System.ComponentModel.Design.MultilineStringEditor.GetEditStyle(System.ComponentModel.ITypeDescriptorContext)">
      <summary vsli:raw="Gets the editing style of the &lt;see cref=&quot;M:System.Drawing.Design.ImageEditor.EditValue(System.ComponentModel.ITypeDescriptorContext,System.IServiceProvider,System.Object)&quot; /&gt; method.">取得 <see cref="M:System.Drawing.Design.ImageEditor.EditValue(System.ComponentModel.ITypeDescriptorContext,System.IServiceProvider,System.Object)" /> 方法的編輯樣式。</summary>
      <param name="context" vsli:raw="An &lt;see cref=&quot;T:System.ComponentModel.ITypeDescriptorContext&quot; /&gt; that can be used to gain additional context information.">
        <see cref="T:System.ComponentModel.ITypeDescriptorContext" />，可用來取得額外的內容資訊。</param>
      <returns vsli:raw="A &lt;see cref=&quot;T:System.Drawing.Design.UITypeEditorEditStyle&quot; /&gt; enumeration value indicating the supported editing style.">
        <see cref="T:System.Drawing.Design.UITypeEditorEditStyle" /> 列舉型別 (Enumeration) 值，表示支援的編輯樣式。</returns>
    </member>
    <member name="M:System.ComponentModel.Design.MultilineStringEditor.GetPaintValueSupported(System.ComponentModel.ITypeDescriptorContext)">
      <summary vsli:raw="Gets a value indicating whether this editor supports painting a representation of an object's value.">取得值，指出這個編輯器是否支援繪製物件值的表示。</summary>
      <param name="context" vsli:raw="An &lt;see cref=&quot;T:System.ComponentModel.ITypeDescriptorContext&quot; /&gt; that can be used to gain additional context information.">
        <see cref="T:System.ComponentModel.ITypeDescriptorContext" />，可用來取得額外的內容資訊。</param>
      <returns vsli:raw="&lt;see langword=&quot;false&quot; /&gt;, indicating that this &lt;see cref=&quot;T:System.Drawing.Design.UITypeEditor&quot; /&gt; does not display a visual representation in the Properties Window.">
        <see langword="false" />，表示這個 <see cref="T:System.Drawing.Design.UITypeEditor" /> 在 [屬性] 視窗中不會有任何視覺化顯示效果。</returns>
    </member>
    <member name="T:System.ComponentModel.Design.ObjectSelectorEditor">
      <summary vsli:raw="Implements the basic functionality that can be used to design value editors. These editors can, in turn, provide a user interface for representing and editing the values of objects of the supported data types.">實作可用於設計值編輯器的基本功能。 而這些編輯器可以提供使用者介面，表示並編輯受支援資料型別之物件的值。</summary>
    </member>
    <member name="F:System.ComponentModel.Design.ObjectSelectorEditor.currValue">
      <summary vsli:raw="Represents the current value of &lt;see cref=&quot;T:System.ComponentModel.Design.ObjectSelectorEditor&quot; /&gt;.">表示 <see cref="T:System.ComponentModel.Design.ObjectSelectorEditor" /> 的目前值。</summary>
    </member>
    <member name="F:System.ComponentModel.Design.ObjectSelectorEditor.prevValue">
      <summary vsli:raw="Represents the previous value of &lt;see cref=&quot;T:System.ComponentModel.Design.ObjectSelectorEditor&quot; /&gt;.">表示 <see cref="T:System.ComponentModel.Design.ObjectSelectorEditor" /> 的先前值。</summary>
    </member>
    <member name="F:System.ComponentModel.Design.ObjectSelectorEditor.SubObjectSelector">
      <summary vsli:raw="Controls whether or not the nodes within the hierarchical collection of labeled items are accessible.">控制是否可存取標記項目階層式集合中的節點。</summary>
    </member>
    <member name="M:System.ComponentModel.Design.ObjectSelectorEditor.#ctor">
      <summary vsli:raw="Initializes a new instance of the &lt;see cref=&quot;T:System.ComponentModel.Design.ObjectSelectorEditor&quot; /&gt; class.">初始化 <see cref="T:System.ComponentModel.Design.ObjectSelectorEditor" /> 類別的新執行個體。</summary>
    </member>
    <member name="M:System.ComponentModel.Design.ObjectSelectorEditor.#ctor(System.Boolean)">
      <summary vsli:raw="Initializes a new instance of the &lt;see cref=&quot;T:System.ComponentModel.Design.ObjectSelectorEditor&quot; /&gt; class.">初始化 <see cref="T:System.ComponentModel.Design.ObjectSelectorEditor" /> 類別的新執行個體。</summary>
      <param name="subObjectSelector" vsli:raw="The specified sub-object selector value.">指定的子物件選取器值。</param>
    </member>
    <member name="M:System.ComponentModel.Design.ObjectSelectorEditor.ApplyTreeViewThemeStyles(System.Windows.Forms.TreeView)">
      <summary vsli:raw="Modify a Windows Forms &lt;see cref=&quot;T:System.Windows.Forms.TreeView&quot; /&gt; control to use the new Explorer style theme.">修改 Windows Forms <see cref="T:System.Windows.Forms.TreeView" /> 控制項，以使用  新的 Explorer 樣式主題。</summary>
      <param name="treeView" vsli:raw="The tree view control to modify.">要修改的樹狀檢視控制項。</param>
    </member>
    <member name="M:System.ComponentModel.Design.ObjectSelectorEditor.EditValue(System.ComponentModel.ITypeDescriptorContext,System.IServiceProvider,System.Object)">
      <summary vsli:raw="Edits the value of the specified object using the editor style indicated by &lt;xref data-throw-if-not-resolved=&quot;true&quot; uid=&quot;System.ComponentModel.Design.ObjectSelectorEditor.GetEditStyle*&quot;&gt;&lt;/xref&gt;.">使用由 <see cref="Overload:System.ComponentModel.Design.ObjectSelectorEditor.GetEditStyle" /> 所指示的編輯器樣式，來編輯指定物件的值。</summary>
      <param name="context" vsli:raw="An &lt;xref data-throw-if-not-resolved=&quot;true&quot; uid=&quot;System.ComponentModel.ITypeDescriptorContext&quot;&gt;&lt;/xref&gt; that can be used to gain additional context information.">
        <see cref="T:System.ComponentModel.ITypeDescriptorContext" />，可用來取得額外的內容資訊。</param>
      <param name="provider" vsli:raw="An &lt;xref data-throw-if-not-resolved=&quot;true&quot; uid=&quot;System.IServiceProvider&quot;&gt;&lt;/xref&gt; that this editor can use to obtain services.">
        <see cref="T:System.IServiceProvider" />，這個編輯器可用來取得服務。</param>
      <param name="value" vsli:raw="The object to edit.">要編輯的物件。</param>
      <returns vsli:raw="The new value of the object. If the value of the object has not changed, the method should return the same object it was passed.">物件的新值。 如果物件的值尚未變更，這個方法所回傳的物件，與物件當初被傳遞時的相同。</returns>
    </member>
    <member name="M:System.ComponentModel.Design.ObjectSelectorEditor.EqualsToValue(System.Object)">
      <summary vsli:raw="Determines whether the specified &lt;see cref=&quot;T:System.Object&quot; /&gt; is equal to the current &lt;see cref=&quot;T:System.Object&quot; /&gt;.">判斷指定的 <see cref="T:System.Object" /> 是否等於目前的 <see cref="T:System.Object" />。</summary>
      <param name="value" vsli:raw="The &lt;see cref=&quot;T:System.Object&quot; /&gt; to compare with the current &lt;see cref=&quot;T:System.Object&quot; /&gt;.">與目前的 <see cref="T:System.Object" /> 相比較的 <see cref="T:System.Object" />。</param>
      <returns vsli:raw="&lt;see langword=&quot;true&quot; /&gt; if the specified &lt;see cref=&quot;T:System.Object&quot; /&gt; is equal to the current &lt;see cref=&quot;T:System.Object&quot; /&gt;; otherwise, &lt;see langword=&quot;false&quot; /&gt;.">如果指定的 <see cref="T:System.Object" /> 和目前的 <see cref="T:System.Object" /> 相等，則為 <see langword="true" />；否則為 <see langword="false" />。</returns>
    </member>
    <member name="M:System.ComponentModel.Design.ObjectSelectorEditor.FillTreeWithData(System.ComponentModel.Design.ObjectSelectorEditor.Selector,System.ComponentModel.ITypeDescriptorContext,System.IServiceProvider)">
      <summary vsli:raw="Fills a hierarchical collection of labeled items, with each item represented by a &lt;see cref=&quot;T:System.Windows.Forms.TreeNode&quot; /&gt;.">填入標記項目的階層式集合，每個項目皆由 <see cref="T:System.Windows.Forms.TreeNode" /> 表示。</summary>
      <param name="selector" vsli:raw="A hierarchical collection of labeled items.">標記項目的階層式集合。</param>
      <param name="context" vsli:raw="The context information for a component.">元件的內容資訊。</param>
      <param name="provider" vsli:raw="The &lt;see cref=&quot;M:System.IServiceProvider.GetService(System.Type)&quot; /&gt; method of this interface that obtains the object that provides the service.">這個介面的 <see cref="M:System.IServiceProvider.GetService(System.Type)" /> 方法，會取得提供服務的物件。</param>
    </member>
    <member name="M:System.ComponentModel.Design.ObjectSelectorEditor.GetEditStyle(System.ComponentModel.ITypeDescriptorContext)">
      <summary vsli:raw="Gets the editor style used by the &lt;see cref=&quot;Overload:System.ComponentModel.Design.ObjectSelectorEditor.EditValue&quot; /&gt; method.">取得 <see cref="Overload:System.ComponentModel.Design.ObjectSelectorEditor.EditValue" /> 方法所使用的編輯器樣式。</summary>
      <param name="context" vsli:raw="An &lt;see cref=&quot;T:System.ComponentModel.ITypeDescriptorContext&quot; /&gt; that can be used to gain additional context information.">
        <see cref="T:System.ComponentModel.ITypeDescriptorContext" />，可用來取得額外的內容資訊。</param>
      <returns vsli:raw="A &lt;see cref=&quot;T:System.Drawing.Design.UITypeEditorEditStyle&quot; /&gt; value that indicates the style of editor used by &lt;see cref=&quot;Overload:System.ComponentModel.Design.ObjectSelectorEditor.EditValue&quot; /&gt;.">
        <see cref="T:System.Drawing.Design.UITypeEditorEditStyle" /> 值，表示 <see cref="Overload:System.ComponentModel.Design.ObjectSelectorEditor.EditValue" /> 所使用的編輯器樣式。</returns>
    </member>
    <member name="M:System.ComponentModel.Design.ObjectSelectorEditor.SetValue(System.Object)">
      <summary vsli:raw="Sets the current &lt;xref data-throw-if-not-resolved=&quot;true&quot; uid=&quot;System.ComponentModel.Design.ObjectSelectorEditor&quot;&gt;&lt;/xref&gt; to the specified value.">將目前 <see cref="T:System.ComponentModel.Design.ObjectSelectorEditor" /> 設定為指定值。</summary>
      <param name="value" vsli:raw="The specified value.">指定值。</param>
    </member>
    <member name="T:System.ComponentModel.Design.ObjectSelectorEditor.Selector">
      <summary vsli:raw="Displays a hierarchical collection of labeled items, each represented by a &lt;see cref=&quot;T:System.Windows.Forms.TreeNode&quot; /&gt;.">顯示標籤項目階層式集合，所有項目皆由 <see cref="T:System.Windows.Forms.TreeNode" /> 表示。</summary>
    </member>
    <member name="F:System.ComponentModel.Design.ObjectSelectorEditor.Selector.clickSeen">
      <summary vsli:raw="This field is for internal use only.">此欄位僅供內部使用。</summary>
    </member>
    <member name="M:System.ComponentModel.Design.ObjectSelectorEditor.Selector.#ctor(System.ComponentModel.Design.ObjectSelectorEditor)">
      <summary vsli:raw="Initializes a new instance of the &lt;see cref=&quot;T:System.ComponentModel.Design.ObjectSelectorEditor.Selector&quot; /&gt; class.">初始化 <see cref="T:System.ComponentModel.Design.ObjectSelectorEditor.Selector" /> 類別的新執行個體。</summary>
      <param name="editor" vsli:raw="The &lt;see cref=&quot;T:System.ComponentModel.Design.ObjectSelectorEditor&quot; /&gt;.">
        <see cref="T:System.ComponentModel.Design.ObjectSelectorEditor" />。</param>
    </member>
    <member name="M:System.ComponentModel.Design.ObjectSelectorEditor.Selector.AddNode(System.String,System.Object,System.ComponentModel.Design.ObjectSelectorEditor.SelectorNode)">
      <summary vsli:raw="Adds a new tree node to the collection.">將新的樹狀節點加入集合中。</summary>
      <param name="label" vsli:raw="The label for the node.">節點的標籤。</param>
      <param name="value" vsli:raw="The &lt;see cref=&quot;T:System.Object&quot; /&gt; that represents the value for the node.">
        <see cref="T:System.Object" />，表示節點的值。</param>
      <param name="parent" vsli:raw="The parent of the node.">節點的父代。</param>
      <returns vsli:raw="A &lt;see cref=&quot;T:System.ComponentModel.Design.ObjectSelectorEditor.SelectorNode&quot; /&gt; added to the collection.">加入集合的 <see cref="T:System.ComponentModel.Design.ObjectSelectorEditor.SelectorNode" />。</returns>
    </member>
    <member name="M:System.ComponentModel.Design.ObjectSelectorEditor.Selector.Clear">
      <summary vsli:raw="Removes all tree nodes from the collection.">從集合中移除所有樹狀節點。</summary>
    </member>
    <member name="M:System.ComponentModel.Design.ObjectSelectorEditor.Selector.OnAfterSelect(System.Object,System.Windows.Forms.TreeViewEventArgs)">
      <summary vsli:raw="Occurs after the tree node is selected.">發生於選取樹狀節點之後。</summary>
      <param name="sender" vsli:raw="The source of an event.">事件的來源。</param>
      <param name="e" vsli:raw="A &lt;see cref=&quot;T:System.Windows.Forms.TreeViewEventArgs&quot; /&gt; that contains the event data.">
        <see cref="T:System.Windows.Forms.TreeViewEventArgs" />，其中包含事件資料。</param>
    </member>
    <member name="M:System.ComponentModel.Design.ObjectSelectorEditor.Selector.OnKeyDown(System.Windows.Forms.KeyEventArgs)">
      <summary vsli:raw="Occurs when a key is pressed while the control has focus.">發生於按下按鍵且焦點在控制項時。</summary>
      <param name="e" vsli:raw="Provides data for the &lt;see cref=&quot;E:System.Windows.Forms.Control.KeyDown&quot; /&gt; event.">提供 <see cref="E:System.Windows.Forms.Control.KeyDown" /> 事件的資料。</param>
    </member>
    <member name="M:System.ComponentModel.Design.ObjectSelectorEditor.Selector.OnKeyPress(System.Windows.Forms.KeyPressEventArgs)">
      <summary vsli:raw="Occurs when a key is pressed while the control has focus.">發生於按下按鍵且焦點在控制項時。</summary>
      <param name="e" vsli:raw="Provides data for the &lt;see cref=&quot;E:System.Windows.Forms.Control.KeyPress&quot; /&gt; event.">提供 <see cref="E:System.Windows.Forms.Control.KeyPress" /> 事件的資料。</param>
    </member>
    <member name="M:System.ComponentModel.Design.ObjectSelectorEditor.Selector.OnNodeMouseClick(System.Windows.Forms.TreeNodeMouseClickEventArgs)">
      <summary vsli:raw="Occurs when the mouse pointer is over the control and a mouse button is clicked.">發生於滑鼠指標位於控制項上，並按下滑鼠按鍵時。</summary>
      <param name="e" vsli:raw="Provides data for the &lt;see cref=&quot;E:System.Windows.Forms.Control.MouseUp&quot; /&gt;, &lt;see cref=&quot;E:System.Windows.Forms.Control.MouseDown&quot; /&gt;, and &lt;see cref=&quot;E:System.Windows.Forms.Control.MouseMove&quot; /&gt; events.">提供 <see cref="E:System.Windows.Forms.Control.MouseUp" />、<see cref="E:System.Windows.Forms.Control.MouseDown" /> 和 <see cref="E:System.Windows.Forms.Control.MouseMove" /> 事件的資料。</param>
    </member>
    <member name="M:System.ComponentModel.Design.ObjectSelectorEditor.Selector.SetSelection(System.Object,System.Windows.Forms.TreeNodeCollection)">
      <summary vsli:raw="Sets the collection nodes to a specific value.">將集合節點設為特定值。</summary>
      <param name="value" vsli:raw="The value to be set.">要設定的值。</param>
      <param name="nodes" vsli:raw="The nodes collection.">節點集合。</param>
      <returns vsli:raw="&lt;see langword=&quot;true&quot; /&gt; if the collection nodes were set; otherwise, &lt;see langword=&quot;false&quot; /&gt;.">如果已設定集合節點，則為 <see langword="true" />，否則為 <see langword="false" />。</returns>
    </member>
    <member name="M:System.ComponentModel.Design.ObjectSelectorEditor.Selector.Start(System.Windows.Forms.Design.IWindowsFormsEditorService,System.Object)">
      <summary vsli:raw="Initializes the editor service.">初始化編輯器服務。</summary>
      <param name="edSvc" vsli:raw="The editor service.">編輯器服務。</param>
      <param name="value" vsli:raw="The value to be set.">要設定的值。</param>
    </member>
    <member name="M:System.ComponentModel.Design.ObjectSelectorEditor.Selector.Stop">
      <summary vsli:raw="Removes the editor service.">移除編輯器服務。</summary>
    </member>
    <member name="M:System.ComponentModel.Design.ObjectSelectorEditor.Selector.WndProc(System.Windows.Forms.Message@)">
      <summary vsli:raw="Processes Windows messages.">處理 Windows 訊息。</summary>
      <param name="m" vsli:raw="The Windows &lt;see cref=&quot;T:System.Windows.Forms.Message&quot; /&gt; to process.">要處理的 Windows <see cref="T:System.Windows.Forms.Message" />。</param>
    </member>
    <member name="T:System.ComponentModel.Design.ObjectSelectorEditor.SelectorNode">
      <summary vsli:raw="Represents a node of a &lt;see cref=&quot;T:System.Windows.Forms.TreeView&quot; /&gt;.">表示 <see cref="T:System.Windows.Forms.TreeView" /> 的節點。</summary>
    </member>
    <member name="F:System.ComponentModel.Design.ObjectSelectorEditor.SelectorNode.value">
      <summary vsli:raw="Represents the value for the node.">表示節點的值。</summary>
    </member>
    <member name="M:System.ComponentModel.Design.ObjectSelectorEditor.SelectorNode.#ctor(System.String,System.Object)">
      <summary vsli:raw="Initializes a new instance of the &lt;see cref=&quot;T:System.ComponentModel.Design.ObjectSelectorEditor.SelectorNode&quot; /&gt; class.">初始化 <see cref="T:System.ComponentModel.Design.ObjectSelectorEditor.SelectorNode" /> 類別的新執行個體。</summary>
      <param name="label" vsli:raw="The label for the node.">節點的標籤。</param>
      <param name="value" vsli:raw="The &lt;see cref=&quot;T:System.Object&quot; /&gt; that represents the value for the node.">
        <see cref="T:System.Object" />，表示節點的值。</param>
    </member>
    <member name="T:System.ComponentModel.Design.ProjectTargetFrameworkAttribute">
      <summary vsli:raw="Specifies the target framework for a project.">指定專案的目標架構。</summary>
    </member>
    <member name="M:System.ComponentModel.Design.ProjectTargetFrameworkAttribute.#ctor(System.String)">
      <summary vsli:raw="Initializes a new instance of the &lt;see cref=&quot;T:System.ComponentModel.Design.ProjectTargetFrameworkAttribute&quot; /&gt; class.">初始化 <see cref="T:System.ComponentModel.Design.ProjectTargetFrameworkAttribute" /> 類別的新執行個體。</summary>
      <param name="targetFrameworkMoniker" vsli:raw="The target framework for the project.">專案的目標架構。</param>
    </member>
    <member name="P:System.ComponentModel.Design.ProjectTargetFrameworkAttribute.TargetFrameworkMoniker">
      <summary vsli:raw="Gets the target framework for the project.">取得專案的目標架構。</summary>
      <returns vsli:raw="The target framework for the project.">專案的目標架構。</returns>
    </member>
    <member name="T:System.ComponentModel.Design.Serialization.BasicDesignerLoader">
      <summary vsli:raw="Provides an implementation of the &lt;see cref=&quot;T:System.ComponentModel.Design.Serialization.IDesignerLoaderService&quot; /&gt; interface.">提供 <see cref="T:System.ComponentModel.Design.Serialization.IDesignerLoaderService" /> 介面的實作。</summary>
    </member>
    <member name="M:System.ComponentModel.Design.Serialization.BasicDesignerLoader.#ctor">
      <summary vsli:raw="Initializes a new instance of the &lt;see cref=&quot;T:System.ComponentModel.Design.Serialization.BasicDesignerLoader&quot; /&gt; class.">初始化 <see cref="T:System.ComponentModel.Design.Serialization.BasicDesignerLoader" /> 類別的新執行個體。</summary>
    </member>
    <member name="M:System.ComponentModel.Design.Serialization.BasicDesignerLoader.BeginLoad(System.ComponentModel.Design.Serialization.IDesignerLoaderHost)">
      <summary vsli:raw="Starts the loading process.">啟動載入處理序。</summary>
      <param name="host" vsli:raw="The designer loader host to load.">要載入的設計工具載入器主應用程式。</param>
      <exception cref="T:System.ArgumentNullException" vsli:raw="&lt;paramref name=&quot;host&quot; /&gt; is &lt;see langword=&quot;null&quot; /&gt;.">
        <paramref name="host" /> 為 <see langword="null" />。</exception>
      <exception cref="T:System.InvalidOperationException" vsli:raw="The designer is already loaded, or &lt;see cref=&quot;M:System.ComponentModel.Design.Serialization.BasicDesignerLoader.BeginLoad(System.ComponentModel.Design.Serialization.IDesignerLoaderHost)&quot; /&gt; has been called with a different designer loader host.">設計工具已載入，或已使用其他設計工具載入器主應用程式呼叫 <see cref="M:System.ComponentModel.Design.Serialization.BasicDesignerLoader.BeginLoad(System.ComponentModel.Design.Serialization.IDesignerLoaderHost)" />。</exception>
      <exception cref="T:System.ObjectDisposedException" vsli:raw="&lt;paramref name=&quot;host&quot; /&gt; has been disposed.">已處置 <paramref name="host" />。</exception>
    </member>
    <member name="M:System.ComponentModel.Design.Serialization.BasicDesignerLoader.Dispose">
      <summary vsli:raw="Releases the resources used by the &lt;see cref=&quot;T:System.ComponentModel.Design.Serialization.BasicDesignerLoader&quot; /&gt;.">釋放 <see cref="T:System.ComponentModel.Design.Serialization.BasicDesignerLoader" /> 使用的資源。</summary>
    </member>
    <member name="M:System.ComponentModel.Design.Serialization.BasicDesignerLoader.EnableComponentNotification(System.Boolean)">
      <summary vsli:raw="Enables or disables component notification with the &lt;see cref=&quot;T:System.ComponentModel.Design.Serialization.DesignerLoader&quot; /&gt;.">使用 <see cref="T:System.ComponentModel.Design.Serialization.DesignerLoader" /> 啟用或停用元件告知。</summary>
      <param name="enable" vsli:raw="&lt;see langword=&quot;true&quot; /&gt; to enable component notification by the &lt;see cref=&quot;T:System.ComponentModel.Design.Serialization.DesignerLoader&quot; /&gt;; &lt;see langword=&quot;false&quot; /&gt; to disable component notification by the &lt;see cref=&quot;T:System.ComponentModel.Design.Serialization.DesignerLoader&quot; /&gt;.">
        <see langword="true" /> 表示透過 <see cref="T:System.ComponentModel.Design.Serialization.DesignerLoader" /> 啟用元件告知，<see langword="false" /> 表示透過 <see cref="T:System.ComponentModel.Design.Serialization.DesignerLoader" /> 停用元件告知。</param>
      <returns vsli:raw="&lt;see langword=&quot;true&quot; /&gt; if the component notification was enabled prior to this call; otherwise, &lt;see langword=&quot;false&quot; /&gt;.">如果在這個呼叫之前啟用元件告知，則為 <see langword="true" />，否則為 <see langword="false" />。</returns>
    </member>
    <member name="M:System.ComponentModel.Design.Serialization.BasicDesignerLoader.Flush">
      <summary vsli:raw="Flushes pending changes to the designer loader.">清除對設計工具載入器的暫止變更。</summary>
    </member>
    <member name="M:System.ComponentModel.Design.Serialization.BasicDesignerLoader.GetService(System.Type)">
      <summary vsli:raw="Gets the requested service.">取得所要求的服務。</summary>
      <param name="serviceType" vsli:raw="The &lt;see cref=&quot;T:System.Type&quot; /&gt; of the service.">服務的 <see cref="T:System.Type" />。</param>
      <returns vsli:raw="The requested service, or &lt;see langword=&quot;null&quot; /&gt; if the requested service cannot be found.">要求的服務，如果找不到要求的服務則為 <see langword="null" />。</returns>
    </member>
    <member name="M:System.ComponentModel.Design.Serialization.BasicDesignerLoader.Initialize">
      <summary vsli:raw="Initializes services.">初始化服務。</summary>
      <exception cref="T:System.InvalidOperationException" vsli:raw="The &lt;see cref=&quot;T:System.ComponentModel.Design.Serialization.IDesignerLoaderHost&quot; /&gt; has not been initialized.">
        <see cref="T:System.ComponentModel.Design.Serialization.IDesignerLoaderHost" /> 尚未初始化。</exception>
      <exception cref="T:System.ObjectDisposedException" vsli:raw="The &lt;see cref=&quot;T:System.ComponentModel.Design.Serialization.IDesignerLoaderHost&quot; /&gt; has been disposed.">
        <see cref="T:System.ComponentModel.Design.Serialization.IDesignerLoaderHost" /> 已經處置。</exception>
    </member>
    <member name="M:System.ComponentModel.Design.Serialization.BasicDesignerLoader.IsReloadNeeded">
      <summary vsli:raw="Indicates whether the designer should be reloaded.">指出是否應重新載入設計工具。</summary>
      <returns vsli:raw="&lt;see langword=&quot;true&quot; /&gt; if the designer should be reloaded; otherwise, &lt;see langword=&quot;false&quot; /&gt;. The default implementation always returns &lt;see langword=&quot;true&quot; /&gt;.">如果應重新載入設計工具則為 <see langword="true" />，否則為 <see langword="false" />。 預設的實作 (Implementation) 一定會傳回 <see langword="true" />。</returns>
    </member>
    <member name="M:System.ComponentModel.Design.Serialization.BasicDesignerLoader.OnBeginLoad">
      <summary vsli:raw="Notifies the designer loader that loading is about to begin.">告知設計工具載入器載入即將開始。</summary>
    </member>
    <member name="M:System.ComponentModel.Design.Serialization.BasicDesignerLoader.OnBeginUnload">
      <summary vsli:raw="Notifies the designer loader that unloading is about to begin.">告知設計工具載入器卸載即將開始。</summary>
    </member>
    <member name="M:System.ComponentModel.Design.Serialization.BasicDesignerLoader.OnEndLoad(System.Boolean,System.Collections.ICollection)">
      <summary vsli:raw="Notifies the designer loader that loading is complete.">告知設計工具載入器已完成載入。</summary>
      <param name="successful" vsli:raw="&lt;see langword=&quot;true&quot; /&gt; if the load completed successfully; otherwise, &lt;see langword=&quot;false&quot; /&gt;.">如果載入順利完成則為 <see langword="true" />，否則為 <see langword="false" />。</param>
      <param name="errors" vsli:raw="An &lt;see cref=&quot;T:System.Collections.ICollection&quot; /&gt; containing objects (usually exceptions) that were reported as errors.">
        <see cref="T:System.Collections.ICollection" />，包含錯誤物件 (通常為例外狀況)。</param>
      <exception cref="T:System.InvalidOperationException" vsli:raw="The &lt;see cref=&quot;T:System.ComponentModel.Design.Serialization.IDesignerLoaderHost&quot; /&gt; has not been initialized.">
        <see cref="T:System.ComponentModel.Design.Serialization.IDesignerLoaderHost" /> 尚未初始化。</exception>
      <exception cref="T:System.ObjectDisposedException" vsli:raw="The &lt;see cref=&quot;T:System.ComponentModel.Design.Serialization.IDesignerLoaderHost&quot; /&gt; has been disposed.">
        <see cref="T:System.ComponentModel.Design.Serialization.IDesignerLoaderHost" /> 已經處置。</exception>
    </member>
    <member name="M:System.ComponentModel.Design.Serialization.BasicDesignerLoader.OnModifying">
      <summary vsli:raw="Notifies the designer loader that the state of the document is about to be modified.">告知設計工具載入器即將修改文件的狀態。</summary>
    </member>
    <member name="M:System.ComponentModel.Design.Serialization.BasicDesignerLoader.PerformFlush(System.ComponentModel.Design.Serialization.IDesignerSerializationManager)">
      <summary vsli:raw="Flushes all changes to the designer.">清除對設計工具的所有變更。</summary>
      <param name="serializationManager" vsli:raw="An &lt;see cref=&quot;T:System.ComponentModel.Design.Serialization.IDesignerSerializationManager&quot; /&gt; to use for persisting the state of loaded designers.">用於保持已載入之設計工具狀態的 <see cref="T:System.ComponentModel.Design.Serialization.IDesignerSerializationManager" />。</param>
    </member>
    <member name="M:System.ComponentModel.Design.Serialization.BasicDesignerLoader.PerformLoad(System.ComponentModel.Design.Serialization.IDesignerSerializationManager)">
      <summary vsli:raw="Loads a designer from persistence.">載入持續性的設計工具。</summary>
      <param name="serializationManager" vsli:raw="An &lt;see cref=&quot;T:System.ComponentModel.Design.Serialization.IDesignerSerializationManager&quot; /&gt; to use for loading state for the designers.">
        <see cref="T:System.ComponentModel.Design.Serialization.IDesignerSerializationManager" />，用於載入設計工具狀態。</param>
    </member>
    <member name="M:System.ComponentModel.Design.Serialization.BasicDesignerLoader.Reload(System.ComponentModel.Design.Serialization.BasicDesignerLoader.ReloadOptions)">
      <summary vsli:raw="Queues a reload of the designer.">將設計工具的重新載入加入佇列。</summary>
      <param name="flags" vsli:raw="A bitwise combination of the &lt;see cref=&quot;T:System.ComponentModel.Design.Serialization.BasicDesignerLoader.ReloadOptions&quot; /&gt; values.">
        <see cref="T:System.ComponentModel.Design.Serialization.BasicDesignerLoader.ReloadOptions" /> 值的位元組合。</param>
    </member>
    <member name="M:System.ComponentModel.Design.Serialization.BasicDesignerLoader.ReportFlushErrors(System.Collections.ICollection)">
      <summary vsli:raw="Reports errors that occurred while flushing changes.">報告清除變更時發生的錯誤。</summary>
      <param name="errors" vsli:raw="An &lt;see cref=&quot;T:System.Collections.ICollection&quot; /&gt; containing error objects, usually exceptions.">
        <see cref="T:System.Collections.ICollection" />，包含錯誤物件 (通常為例外狀況)。</param>
      <exception cref="T:System.InvalidOperationException" vsli:raw="One or more errors occurred while flushing changes.">清除變更時發生一個或多個錯誤。</exception>
    </member>
    <member name="M:System.ComponentModel.Design.Serialization.BasicDesignerLoader.SetBaseComponentClassName(System.String)">
      <summary vsli:raw="Sets the full class name of the base component.">設定基底元件的完整類別名稱。</summary>
      <param name="name" vsli:raw="A string representing the full name of the component to be designed.">字串，表示要設計之元件的完整名稱。</param>
      <exception cref="T:System.ArgumentNullException" vsli:raw="&lt;paramref name=&quot;name&quot; /&gt; is &lt;see langword=&quot;null&quot; /&gt;.">
        <paramref name="name" /> 為 <see langword="null" />。</exception>
    </member>
    <member name="M:System.ComponentModel.Design.Serialization.BasicDesignerLoader.System#ComponentModel#Design#Serialization#IDesignerLoaderService#AddLoadDependency">
      <summary vsli:raw="Registers an external component as part of the load process managed by &lt;see cref=&quot;T:System.ComponentModel.Design.Serialization.IDesignerLoaderService&quot; /&gt;.">將外部元件註冊為由 <see cref="T:System.ComponentModel.Design.Serialization.IDesignerLoaderService" /> 管理之載入處理序的一部分。</summary>
      <exception cref="T:System.InvalidOperationException" vsli:raw="The &lt;see cref=&quot;T:System.ComponentModel.Design.Serialization.IDesignerLoaderHost&quot; /&gt; has not been initialized.">
        <see cref="T:System.ComponentModel.Design.Serialization.IDesignerLoaderHost" /> 尚未初始化。</exception>
    </member>
    <member name="M:System.ComponentModel.Design.Serialization.BasicDesignerLoader.System#ComponentModel#Design#Serialization#IDesignerLoaderService#DependentLoadComplete(System.Boolean,System.Collections.ICollection)">
      <summary vsli:raw="Signals that a dependent load has finished.">表示相依載入已完成。</summary>
      <param name="successful" vsli:raw="&lt;see langword=&quot;true&quot; /&gt; to load successfully; otherwise, &lt;see langword=&quot;false&quot; /&gt;.">
        <see langword="true" /> 表示載入順利完成，否則為 <see langword="false" />。</param>
      <param name="errorCollection" vsli:raw="An &lt;see cref=&quot;T:System.Collections.ICollection&quot; /&gt; containing errors that occurred during the load.">
        <see cref="T:System.Collections.ICollection" />，包含載入期間發生的錯誤。</param>
      <exception cref="T:System.InvalidOperationException" vsli:raw="No load dependencies have been added by &lt;see cref=&quot;M:System.ComponentModel.Design.Serialization.BasicDesignerLoader.System#ComponentModel#Design#Serialization#IDesignerLoaderService#AddLoadDependency&quot; /&gt;, or the &lt;see cref=&quot;T:System.ComponentModel.Design.Serialization.IDesignerLoaderHost&quot; /&gt; has not been initialized.">
        <see cref="M:System.ComponentModel.Design.Serialization.BasicDesignerLoader.System#ComponentModel#Design#Serialization#IDesignerLoaderService#AddLoadDependency" /> 未加入任何載入相依性，或 <see cref="T:System.ComponentModel.Design.Serialization.IDesignerLoaderHost" /> 尚未初始化。</exception>
      <exception cref="T:System.ObjectDisposedException" vsli:raw="The &lt;see cref=&quot;T:System.ComponentModel.Design.Serialization.IDesignerLoaderHost&quot; /&gt; has been disposed.">
        <see cref="T:System.ComponentModel.Design.Serialization.IDesignerLoaderHost" /> 已經處置。</exception>
    </member>
    <member name="M:System.ComponentModel.Design.Serialization.BasicDesignerLoader.System#ComponentModel#Design#Serialization#IDesignerLoaderService#Reload">
      <summary vsli:raw="Reloads the design document.">重新載入設計文件。</summary>
      <returns vsli:raw="&lt;see langword=&quot;true&quot; /&gt; if the reload request is accepted; &lt;see langword=&quot;false&quot; /&gt; if the loader does not allow the reload.">如果接受重新載入要求則為 <see langword="true" />，如果載入器不允許重新載入則為 <see langword="false" />。</returns>
    </member>
    <member name="P:System.ComponentModel.Design.Serialization.BasicDesignerLoader.LoaderHost">
      <summary vsli:raw="Gets the loader host.">取得載入器主應用程式。</summary>
      <exception cref="T:System.InvalidOperationException" vsli:raw="The &lt;see cref=&quot;T:System.ComponentModel.Design.Serialization.IDesignerLoaderHost&quot; /&gt; has not been initialized.">
        <see cref="T:System.ComponentModel.Design.Serialization.IDesignerLoaderHost" /> 尚未初始化。</exception>
      <exception cref="T:System.ObjectDisposedException" vsli:raw="The &lt;see cref=&quot;T:System.ComponentModel.Design.Serialization.IDesignerLoaderHost&quot; /&gt; has been disposed.">
        <see cref="T:System.ComponentModel.Design.Serialization.IDesignerLoaderHost" /> 已經處置。</exception>
      <returns vsli:raw="The &lt;see cref=&quot;T:System.ComponentModel.Design.Serialization.IDesignerLoaderHost&quot; /&gt; that was passed to the &lt;see cref=&quot;M:System.ComponentModel.Design.Serialization.BasicDesignerLoader.BeginLoad(System.ComponentModel.Design.Serialization.IDesignerLoaderHost)&quot; /&gt; method.">已傳遞至 <see cref="T:System.ComponentModel.Design.Serialization.IDesignerLoaderHost" /> 方法的 <see cref="M:System.ComponentModel.Design.Serialization.BasicDesignerLoader.BeginLoad(System.ComponentModel.Design.Serialization.IDesignerLoaderHost)" />。</returns>
    </member>
    <member name="P:System.ComponentModel.Design.Serialization.BasicDesignerLoader.Loading">
      <summary vsli:raw="Gets a value indicating whether the designer loader is loading the design surface.">取得值，指出設計工具載入器是否正在載入設計介面。</summary>
      <returns vsli:raw="&lt;see langword=&quot;true&quot; /&gt; if the designer loader is currently loading the design surface; otherwise, &lt;see langword=&quot;false&quot; /&gt;.">如果設計工具載入器目前正在載入設計介面則為 <see langword="true" />，否則為 <see langword="false" />。</returns>
    </member>
    <member name="P:System.ComponentModel.Design.Serialization.BasicDesignerLoader.Modified">
      <summary vsli:raw="Gets or sets a value indicating whether the designer has been modified.">取得或設定值，指出是否已修改設計工具。</summary>
      <returns vsli:raw="&lt;see langword=&quot;true&quot; /&gt; if the designer has been modified; otherwise, &lt;see langword=&quot;false&quot; /&gt;.">如果已修改設計工具則為 <see langword="true" />，否則為 <see langword="false" />。</returns>
    </member>
    <member name="P:System.ComponentModel.Design.Serialization.BasicDesignerLoader.PropertyProvider">
      <summary vsli:raw="Gets or sets the property provider for the serialization manager being used by the loader.">取得或設定載入器正在使用之序列化管理員的屬性提供者。</summary>
      <exception cref="T:System.InvalidOperationException" vsli:raw="The &lt;see cref=&quot;T:System.ComponentModel.Design.Serialization.IDesignerLoaderHost&quot; /&gt; has not been initialized.">
        <see cref="T:System.ComponentModel.Design.Serialization.IDesignerLoaderHost" /> 尚未初始化。</exception>
      <returns vsli:raw="An object whose properties are to be provided to the serialization manager.">其屬性要提供給序列化管理員的物件。</returns>
    </member>
    <member name="P:System.ComponentModel.Design.Serialization.BasicDesignerLoader.ReloadPending">
      <summary vsli:raw="Gets a value indicating whether a reload has been queued.">取得值，指出是否已將重新載入加入佇列。</summary>
      <returns vsli:raw="&lt;see langword=&quot;true&quot; /&gt;, if a call to &lt;see cref=&quot;M:System.ComponentModel.Design.Serialization.BasicDesignerLoader.Reload(System.ComponentModel.Design.Serialization.BasicDesignerLoader.ReloadOptions)&quot; /&gt; has queued a reload request; otherwise, &lt;see langword=&quot;false&quot; /&gt;.">如果對 <see cref="M:System.ComponentModel.Design.Serialization.BasicDesignerLoader.Reload(System.ComponentModel.Design.Serialization.BasicDesignerLoader.ReloadOptions)" /> 的呼叫已將重新載入要求加入佇列，則為 <see langword="true" />，否則為 <see langword="false" />。</returns>
    </member>
    <member name="T:System.ComponentModel.Design.Serialization.BasicDesignerLoader.ReloadOptions">
      <summary vsli:raw="Defines the behavior of the &lt;see cref=&quot;M:System.ComponentModel.Design.Serialization.BasicDesignerLoader.Reload(System.ComponentModel.Design.Serialization.BasicDesignerLoader.ReloadOptions)&quot; /&gt; method. These flags can be combined using the bitwise &lt;see langword=&quot;OR&quot; /&gt; operator.">定義 <see cref="M:System.ComponentModel.Design.Serialization.BasicDesignerLoader.Reload(System.ComponentModel.Design.Serialization.BasicDesignerLoader.ReloadOptions)" /> 方法的行為。 這些旗標可以使用位元 <see langword="OR" /> 運算子加以組合。</summary>
    </member>
    <member name="F:System.ComponentModel.Design.Serialization.BasicDesignerLoader.ReloadOptions.Default">
      <summary vsli:raw="The designer loader flushes changes before reloading, but it does not force a reload, and it also does not set the &lt;see cref=&quot;P:System.ComponentModel.Design.Serialization.BasicDesignerLoader.Modified&quot; /&gt; property to &lt;see langword=&quot;true&quot; /&gt; if load errors occur.">設計工具載入器會在重新載入之前清除變更，但它不會強制重新載入，如果發生載入錯誤，它也不會將 <see cref="P:System.ComponentModel.Design.Serialization.BasicDesignerLoader.Modified" /> 屬性設為 <see langword="true" />。</summary>
    </member>
    <member name="F:System.ComponentModel.Design.Serialization.BasicDesignerLoader.ReloadOptions.Force">
      <summary vsli:raw="The designer loader forces the reload to occur. Normally, a reload occurs only if the &lt;see cref=&quot;M:System.ComponentModel.Design.Serialization.BasicDesignerLoader.IsReloadNeeded&quot; /&gt; method returns &lt;see langword=&quot;true&quot; /&gt;. This flag bypasses calling this method and always performs the reload.">設計工具載入器強制發生重新載入。 通常，只在 <see cref="M:System.ComponentModel.Design.Serialization.BasicDesignerLoader.IsReloadNeeded" /> 方法傳回 <see langword="true" /> 時，才會發生重新載入。 這個旗標會略過對此方法的呼叫，並永遠執行重新載入。</summary>
    </member>
    <member name="F:System.ComponentModel.Design.Serialization.BasicDesignerLoader.ReloadOptions.ModifyOnError">
      <summary vsli:raw="The designer loader will set the &lt;see cref=&quot;P:System.ComponentModel.Design.Serialization.BasicDesignerLoader.Modified&quot; /&gt; property to &lt;see langword=&quot;true&quot; /&gt; if load errors occur. This flag is useful if you want a flush of the loader to overwrite persistent state that had errors.">如果發生載入錯誤，設計工具載入器會將 <see cref="P:System.ComponentModel.Design.Serialization.BasicDesignerLoader.Modified" /> 屬性設為 <see langword="true" />。 如果您要清除載入器，以覆寫發生錯誤的持續狀態，這個旗標便很有用。</summary>
    </member>
    <member name="F:System.ComponentModel.Design.Serialization.BasicDesignerLoader.ReloadOptions.NoFlush">
      <summary vsli:raw="The designer loader abandons any changes before reloading.">設計工具載入器會在重新載入之前放棄任何變更。</summary>
    </member>
    <member name="T:System.ComponentModel.Design.Serialization.CodeDomComponentSerializationService">
      <summary vsli:raw="Serializes a set of components into a serialization store.">序列化元件集合至序列化存放區。</summary>
    </member>
    <member name="M:System.ComponentModel.Design.Serialization.CodeDomComponentSerializationService.#ctor">
      <summary vsli:raw="Initializes a new instance of the &lt;see cref=&quot;T:System.ComponentModel.Design.Serialization.CodeDomComponentSerializationService&quot; /&gt; class.">初始化 <see cref="T:System.ComponentModel.Design.Serialization.CodeDomComponentSerializationService" /> 類別的新執行個體。</summary>
    </member>
    <member name="M:System.ComponentModel.Design.Serialization.CodeDomComponentSerializationService.#ctor(System.IServiceProvider)">
      <summary vsli:raw="Initializes a new instance of the &lt;see cref=&quot;T:System.ComponentModel.Design.Serialization.CodeDomComponentSerializationService&quot; /&gt; class using the given service provider to resolve services.">使用指定的服務提供者，初始化 <see cref="T:System.ComponentModel.Design.Serialization.CodeDomComponentSerializationService" /> 類別的新執行個體，以解析服務。</summary>
      <param name="provider" vsli:raw="An &lt;see cref=&quot;T:System.IServiceProvider&quot; /&gt; to use for resolving services.">用於解析服務的 <see cref="T:System.IServiceProvider" />。</param>
    </member>
    <member name="M:System.ComponentModel.Design.Serialization.CodeDomComponentSerializationService.CreateStore">
      <summary vsli:raw="Creates a new &lt;see cref=&quot;T:System.ComponentModel.Design.Serialization.SerializationStore&quot; /&gt;.">建立新的 <see cref="T:System.ComponentModel.Design.Serialization.SerializationStore" />。</summary>
      <returns vsli:raw="A new serialization store.">新的序列化存放區。</returns>
    </member>
    <member name="M:System.ComponentModel.Design.Serialization.CodeDomComponentSerializationService.Deserialize(System.ComponentModel.Design.Serialization.SerializationStore)">
      <summary vsli:raw="Deserializes the given store to produce a collection of objects.">還原序列化指定的存放區，以產生物件集合。</summary>
      <param name="store" vsli:raw="The &lt;see cref=&quot;T:System.ComponentModel.Design.Serialization.SerializationStore&quot; /&gt; from which objects will be deserialized.">要還原序列化其物件的 <see cref="T:System.ComponentModel.Design.Serialization.SerializationStore" />。</param>
      <exception cref="T:System.ArgumentNullException" vsli:raw="&lt;paramref name=&quot;store&quot; /&gt; is &lt;see langword=&quot;null&quot; /&gt;.">
        <paramref name="store" /> 為 <see langword="null" />。</exception>
      <exception cref="T:System.InvalidOperationException" vsli:raw="&lt;paramref name=&quot;store&quot; /&gt; is not a supported type of serialization store. Use a store returned by &lt;see cref=&quot;M:System.ComponentModel.Design.Serialization.CodeDomComponentSerializationService.CreateStore&quot; /&gt;.">
        <paramref name="store" /> 不是支援的序列化存放區類型。 使用由 <see cref="M:System.ComponentModel.Design.Serialization.CodeDomComponentSerializationService.CreateStore" /> 傳回的存放區。</exception>
      <returns vsli:raw="A collection of deserialized components.">已還原序列化的元件集合。</returns>
    </member>
    <member name="M:System.ComponentModel.Design.Serialization.CodeDomComponentSerializationService.Deserialize(System.ComponentModel.Design.Serialization.SerializationStore,System.ComponentModel.IContainer)">
      <summary vsli:raw="Deserializes the given store and populates the given &lt;see cref=&quot;T:System.ComponentModel.IContainer&quot; /&gt; with deserialized &lt;see cref=&quot;T:System.ComponentModel.IComponent&quot; /&gt; objects.">還原序列化指定的存放區，並使用已還原序列化的 <see cref="T:System.ComponentModel.IContainer" /> 物件填入指定的 <see cref="T:System.ComponentModel.IComponent" />。</summary>
      <param name="store" vsli:raw="The &lt;see cref=&quot;T:System.ComponentModel.Design.Serialization.SerializationStore&quot; /&gt; from which objects will be deserialized.">要還原序列化其物件的 <see cref="T:System.ComponentModel.Design.Serialization.SerializationStore" />。</param>
      <param name="container" vsli:raw="A container to which &lt;see cref=&quot;T:System.ComponentModel.IComponent&quot; /&gt; objects will be added.">要加入 <see cref="T:System.ComponentModel.IComponent" /> 物件的容器。</param>
      <exception cref="T:System.ArgumentNullException" vsli:raw="&lt;paramref name=&quot;store&quot; /&gt; or &lt;paramref name=&quot;container&quot; /&gt; is &lt;see langword=&quot;null&quot; /&gt;.">
        <paramref name="store" /> 或 <paramref name="container" /> 為 <see langword="null" />。</exception>
      <exception cref="T:System.InvalidOperationException" vsli:raw="&lt;paramref name=&quot;store&quot; /&gt; is not a supported type of serialization store. Use a store returned by &lt;see cref=&quot;M:System.ComponentModel.Design.Serialization.CodeDomComponentSerializationService.CreateStore&quot; /&gt;.">
        <paramref name="store" /> 不是支援的序列化存放區類型。 使用由 <see cref="M:System.ComponentModel.Design.Serialization.CodeDomComponentSerializationService.CreateStore" /> 傳回的存放區。</exception>
      <returns vsli:raw="A collection of deserialized components.">已還原序列化的元件集合。</returns>
    </member>
    <member name="M:System.ComponentModel.Design.Serialization.CodeDomComponentSerializationService.DeserializeTo(System.ComponentModel.Design.Serialization.SerializationStore,System.ComponentModel.IContainer,System.Boolean,System.Boolean)">
      <summary vsli:raw="Deserializes the given &lt;see cref=&quot;T:System.ComponentModel.Design.Serialization.SerializationStore&quot; /&gt; to the given container, optionally applying default property values.">還原序列化指定的 <see cref="T:System.ComponentModel.Design.Serialization.SerializationStore" /> 至指定的容器，可以選擇性地套用預設屬性值。</summary>
      <param name="store" vsli:raw="The &lt;see cref=&quot;T:System.ComponentModel.Design.Serialization.SerializationStore&quot; /&gt; from which the objects will be deserialized.">要還原序列化其物件的 <see cref="T:System.ComponentModel.Design.Serialization.SerializationStore" />。</param>
      <param name="container" vsli:raw="A container of objects to which data will be applied.">要對其套用資料的物件容器。</param>
      <param name="validateRecycledTypes" vsli:raw="&lt;see langword=&quot;true&quot; /&gt; to validate the recycled type; otherwise, &lt;see langword=&quot;false&quot; /&gt;.">
        <see langword="true" /> 表示驗證回收型別，否則為 <see langword="false" />。</param>
      <param name="applyDefaults" vsli:raw="&lt;see langword=&quot;true&quot; /&gt; to apply default property values; otherwise, &lt;see langword=&quot;false&quot; /&gt;.">
        <see langword="true" /> 表示套用預設屬性值，否則為 <see langword="false" />。</param>
      <exception cref="T:System.ArgumentNullException" vsli:raw="&lt;paramref name=&quot;store&quot; /&gt; or &lt;paramref name=&quot;container&quot; /&gt; is &lt;see langword=&quot;null&quot; /&gt;.">
        <paramref name="store" /> 或 <paramref name="container" /> 為 <see langword="null" />。</exception>
      <exception cref="T:System.InvalidOperationException" vsli:raw="&lt;paramref name=&quot;store&quot; /&gt; is not a supported type of serialization store. Use a store returned by &lt;see cref=&quot;M:System.ComponentModel.Design.Serialization.CodeDomComponentSerializationService.CreateStore&quot; /&gt;.">
        <paramref name="store" /> 不是支援的序列化存放區類型。 使用由 <see cref="M:System.ComponentModel.Design.Serialization.CodeDomComponentSerializationService.CreateStore" /> 傳回的存放區。</exception>
    </member>
    <member name="M:System.ComponentModel.Design.Serialization.CodeDomComponentSerializationService.LoadStore(System.IO.Stream)">
      <summary vsli:raw="Loads a &lt;see cref=&quot;T:System.ComponentModel.Design.Serialization.SerializationStore&quot; /&gt; from the given stream.">從指定的資料流載入 <see cref="T:System.ComponentModel.Design.Serialization.SerializationStore" />。</summary>
      <param name="stream" vsli:raw="The stream from which to load the &lt;see cref=&quot;T:System.ComponentModel.Design.Serialization.SerializationStore&quot; /&gt;.">要載入其 <see cref="T:System.ComponentModel.Design.Serialization.SerializationStore" /> 的資料流。</param>
      <exception cref="T:System.ArgumentNullException" vsli:raw="&lt;paramref name=&quot;stream&quot; /&gt; is &lt;see langword=&quot;null&quot; /&gt;.">
        <paramref name="stream" /> 為 <see langword="null" />。</exception>
      <exception cref="T:System.Runtime.Serialization.SerializationException" vsli:raw="&lt;paramref name=&quot;stream&quot; /&gt; supports seeking, but its length is 0.">
        <paramref name="stream" /> 支援搜尋，但其長度為 0。</exception>
      <returns vsli:raw="The loaded &lt;see cref=&quot;T:System.ComponentModel.Design.Serialization.SerializationStore&quot; /&gt;.">載入的 <see cref="T:System.ComponentModel.Design.Serialization.SerializationStore" />。</returns>
    </member>
    <member name="M:System.ComponentModel.Design.Serialization.CodeDomComponentSerializationService.Serialize(System.ComponentModel.Design.Serialization.SerializationStore,System.Object)">
      <summary vsli:raw="Serializes the given object to the given &lt;see cref=&quot;T:System.ComponentModel.Design.Serialization.SerializationStore&quot; /&gt;.">序列化指定的物件至指定的 <see cref="T:System.ComponentModel.Design.Serialization.SerializationStore" />。</summary>
      <param name="store" vsli:raw="The &lt;see cref=&quot;T:System.ComponentModel.Design.Serialization.SerializationStore&quot; /&gt; to which &lt;paramref name=&quot;value&quot; /&gt; will be serialized.">
        <see cref="T:System.ComponentModel.Design.Serialization.SerializationStore" />，<paramref name="value" /> 將序列化至其中。</param>
      <param name="value" vsli:raw="The object to serialize.">要序列化的物件。</param>
      <exception cref="T:System.ArgumentNullException" vsli:raw="&lt;paramref name=&quot;store&quot; /&gt; or &lt;paramref name=&quot;value&quot; /&gt; is &lt;see langword=&quot;null&quot; /&gt;.">
        <paramref name="store" /> 或 <paramref name="value" /> 為 <see langword="null" />。</exception>
      <exception cref="T:System.InvalidOperationException" vsli:raw="&lt;paramref name=&quot;store&quot; /&gt; is closed, or &lt;paramref name=&quot;store&quot; /&gt; is not a supported type of serialization store. Use a store returned by &lt;see cref=&quot;M:System.ComponentModel.Design.Serialization.CodeDomComponentSerializationService.CreateStore&quot; /&gt;.">
        <paramref name="store" /> 已關閉，或 <paramref name="store" /> 不是支援的序列化存放區類型。 使用由 <see cref="M:System.ComponentModel.Design.Serialization.CodeDomComponentSerializationService.CreateStore" /> 傳回的存放區。</exception>
    </member>
    <member name="M:System.ComponentModel.Design.Serialization.CodeDomComponentSerializationService.SerializeAbsolute(System.ComponentModel.Design.Serialization.SerializationStore,System.Object)">
      <summary vsli:raw="Serializes the given object, accounting for default property values.">序列化指定的物件，因而能夠產生預設屬性值。</summary>
      <param name="store" vsli:raw="The &lt;see cref=&quot;T:System.ComponentModel.Design.Serialization.SerializationStore&quot; /&gt; to which &lt;paramref name=&quot;value&quot; /&gt; will be serialized.">
        <see cref="T:System.ComponentModel.Design.Serialization.SerializationStore" />，<paramref name="value" /> 將序列化至其中。</param>
      <param name="value" vsli:raw="The object to serialize.">要序列化的物件。</param>
      <exception cref="T:System.ArgumentNullException" vsli:raw="&lt;paramref name=&quot;store&quot; /&gt; or &lt;paramref name=&quot;value&quot; /&gt; is &lt;see langword=&quot;null&quot; /&gt;.">
        <paramref name="store" /> 或 <paramref name="value" /> 為 <see langword="null" />。</exception>
      <exception cref="T:System.InvalidOperationException" vsli:raw="&lt;paramref name=&quot;store&quot; /&gt; is closed, or &lt;paramref name=&quot;store&quot; /&gt; is not a supported type of serialization store. Use a store returned by &lt;see cref=&quot;M:System.ComponentModel.Design.Serialization.CodeDomComponentSerializationService.CreateStore&quot; /&gt;.">
        <paramref name="store" /> 已關閉，或 <paramref name="store" /> 不是支援的序列化存放區類型。 使用由 <see cref="M:System.ComponentModel.Design.Serialization.CodeDomComponentSerializationService.CreateStore" /> 傳回的存放區。</exception>
    </member>
    <member name="M:System.ComponentModel.Design.Serialization.CodeDomComponentSerializationService.SerializeMember(System.ComponentModel.Design.Serialization.SerializationStore,System.Object,System.ComponentModel.MemberDescriptor)">
      <summary vsli:raw="Serializes the given member on the given object.">在指定的物件上將指定的成員序列化。</summary>
      <param name="store" vsli:raw="The &lt;see cref=&quot;T:System.ComponentModel.Design.Serialization.SerializationStore&quot; /&gt; to which &lt;paramref name=&quot;member&quot; /&gt; will be serialized.">
        <see cref="T:System.ComponentModel.Design.Serialization.SerializationStore" />，<paramref name="member" /> 將序列化至其中。</param>
      <param name="owningObject" vsli:raw="The object that owns the &lt;paramref name=&quot;member&quot; /&gt;.">物件，其擁有 <paramref name="member" />。</param>
      <param name="member" vsli:raw="The given member.">指定的成員。</param>
      <exception cref="T:System.ArgumentNullException" vsli:raw="&lt;paramref name=&quot;store&quot; /&gt;, &lt;paramref name=&quot;owningObject&quot; /&gt;, or &lt;paramref name=&quot;member&quot; /&gt; is &lt;see langword=&quot;null&quot; /&gt;.">
        <paramref name="store" />、<paramref name="owningObject" /> 或 <paramref name="member" /> 為 <see langword="null" />。</exception>
      <exception cref="T:System.InvalidOperationException" vsli:raw="&lt;paramref name=&quot;store&quot; /&gt; is closed, or &lt;paramref name=&quot;store&quot; /&gt; is not a supported type of serialization store. Use a store returned by &lt;see cref=&quot;M:System.ComponentModel.Design.Serialization.CodeDomComponentSerializationService.CreateStore&quot; /&gt;.">
        <paramref name="store" /> 已關閉，或 <paramref name="store" /> 不是支援的序列化存放區類型。 使用由 <see cref="M:System.ComponentModel.Design.Serialization.CodeDomComponentSerializationService.CreateStore" /> 傳回的存放區。</exception>
    </member>
    <member name="M:System.ComponentModel.Design.Serialization.CodeDomComponentSerializationService.SerializeMemberAbsolute(System.ComponentModel.Design.Serialization.SerializationStore,System.Object,System.ComponentModel.MemberDescriptor)">
      <summary vsli:raw="Serializes the given member on the given object, but also serializes the member if it contains the default property value.">將指定物件上的指定成員序列化，但若其包含預設屬性值，就也會將該成員序列化。</summary>
      <param name="store" vsli:raw="The &lt;see cref=&quot;T:System.ComponentModel.Design.Serialization.SerializationStore&quot; /&gt; to which &lt;paramref name=&quot;member&quot; /&gt; will be serialized.">
        <see cref="T:System.ComponentModel.Design.Serialization.SerializationStore" />，<paramref name="member" /> 將序列化至其中。</param>
      <param name="owningObject" vsli:raw="The object that owns the &lt;paramref name=&quot;member&quot; /&gt;.">物件，其擁有 <paramref name="member" />。</param>
      <param name="member" vsli:raw="The given member.">指定的成員。</param>
      <exception cref="T:System.ArgumentNullException" vsli:raw="&lt;paramref name=&quot;store&quot; /&gt;, &lt;paramref name=&quot;owningObject&quot; /&gt;, or &lt;paramref name=&quot;member&quot; /&gt; is &lt;see langword=&quot;null&quot; /&gt;.">
        <paramref name="store" />、<paramref name="owningObject" /> 或 <paramref name="member" /> 為 <see langword="null" />。</exception>
      <exception cref="T:System.InvalidOperationException" vsli:raw="&lt;paramref name=&quot;store&quot; /&gt; is closed, or &lt;paramref name=&quot;store&quot; /&gt; is not a supported type of serialization store. Use a store returned by &lt;see cref=&quot;M:System.ComponentModel.Design.Serialization.CodeDomComponentSerializationService.CreateStore&quot; /&gt;.">
        <paramref name="store" /> 已關閉，或 <paramref name="store" /> 不是支援的序列化存放區類型。 使用由 <see cref="M:System.ComponentModel.Design.Serialization.CodeDomComponentSerializationService.CreateStore" /> 傳回的存放區。</exception>
    </member>
    <member name="T:System.ComponentModel.Design.Serialization.CodeDomDesignerLoader">
      <summary vsli:raw="Provides the base class for implementing a CodeDOM-based designer loader.">提供基底類別，以實作 CodeDOM 設計工具載入器。</summary>
    </member>
    <member name="M:System.ComponentModel.Design.Serialization.CodeDomDesignerLoader.#ctor">
      <summary vsli:raw="Initializes a new instance of the &lt;see cref=&quot;T:System.ComponentModel.Design.Serialization.CodeDomDesignerLoader&quot; /&gt; class.">初始化 <see cref="T:System.ComponentModel.Design.Serialization.CodeDomDesignerLoader" /> 類別的新執行個體。</summary>
    </member>
    <member name="M:System.ComponentModel.Design.Serialization.CodeDomDesignerLoader.Dispose">
      <summary vsli:raw="Releases the resources used by the &lt;see cref=&quot;T:System.ComponentModel.Design.Serialization.CodeDomDesignerLoader&quot; /&gt; class.">釋放 <see cref="T:System.ComponentModel.Design.Serialization.CodeDomDesignerLoader" /> 類別所使用的資源。</summary>
    </member>
    <member name="M:System.ComponentModel.Design.Serialization.CodeDomDesignerLoader.Initialize">
      <summary vsli:raw="Initializes services.">初始化服務。</summary>
      <exception cref="T:System.InvalidOperationException" vsli:raw="The &lt;see cref=&quot;T:System.ComponentModel.Design.Serialization.IDesignerLoaderHost&quot; /&gt; has not been initialized, or the designer loader did not supply a type resolution service, which is required for CodeDom serialization.">尚未初始化 <see cref="T:System.ComponentModel.Design.Serialization.IDesignerLoaderHost" />，或設計工具載入器未提供 CodeDom 序列化所需要的型別解析服務。</exception>
    </member>
    <member name="M:System.ComponentModel.Design.Serialization.CodeDomDesignerLoader.IsReloadNeeded">
      <summary vsli:raw="Returns a value indicating whether a reload is required.">傳回值，指出重新載入是否必要。</summary>
      <exception cref="T:System.NotSupportedException" vsli:raw="The language did not provide a code parser for this file; this file type may not support a designer.">語言不提供這個檔案的程式碼剖析器。這個檔案類型可能不支援設計工具。</exception>
      <exception cref="T:System.InvalidOperationException" vsli:raw="The class can be designed, but it is not the first class in the file, or the designer could not be shown for this file because none of the classes within it can be designed.">可以設計該類別，但它不是檔案中的第一個類別，或由於無法設計其中任何類別，而無法顯示這個檔案的設計工具。</exception>
      <returns vsli:raw="&lt;see langword=&quot;true&quot; /&gt; if the &lt;see cref=&quot;P:System.ComponentModel.Design.Serialization.CodeDomDesignerLoader.CodeDomProvider&quot; /&gt; decides a reload is required; otherwise, &lt;see langword=&quot;false&quot; /&gt;.">如果 <see cref="P:System.ComponentModel.Design.Serialization.CodeDomDesignerLoader.CodeDomProvider" /> 決定有必要重新載入，則為 <see langword="true" />，否則為 <see langword="false" />。</returns>
    </member>
    <member name="M:System.ComponentModel.Design.Serialization.CodeDomDesignerLoader.OnBeginLoad">
      <summary vsli:raw="Notifies the designer loader that loading is about to begin.">告知設計工具載入器載入即將開始。</summary>
    </member>
    <member name="M:System.ComponentModel.Design.Serialization.CodeDomDesignerLoader.OnBeginUnload">
      <summary vsli:raw="Notifies the designer loader that unloading is about to begin.">告知設計工具載入器卸載即將開始。</summary>
    </member>
    <member name="M:System.ComponentModel.Design.Serialization.CodeDomDesignerLoader.OnComponentRename(System.Object,System.String,System.String)">
      <summary vsli:raw="Raises the &lt;see cref=&quot;E:System.ComponentModel.Design.IComponentChangeService.ComponentRename&quot; /&gt; event.">引發 <see cref="E:System.ComponentModel.Design.IComponentChangeService.ComponentRename" /> 事件。</summary>
      <param name="component" vsli:raw="The component to rename.">要重新命名的元件。</param>
      <param name="oldName" vsli:raw="The original name of the component.">元件的原始名稱。</param>
      <param name="newName" vsli:raw="The new name of the component.">元件的新名稱。</param>
    </member>
    <member name="M:System.ComponentModel.Design.Serialization.CodeDomDesignerLoader.OnEndLoad(System.Boolean,System.Collections.ICollection)">
      <summary vsli:raw="Notifies the designer loader that loading is complete.">告知設計工具載入器已完成載入。</summary>
      <param name="successful" vsli:raw="&lt;see langword=&quot;true&quot; /&gt; to indicate that the load completed successfully; otherwise, &lt;see langword=&quot;false&quot; /&gt;.">
        <see langword="true" /> 表示載入已順利完成，否則為 <see langword="false" />。</param>
      <param name="errors" vsli:raw="An &lt;see cref=&quot;T:System.Collections.ICollection&quot; /&gt; of objects (usually exceptions) that were reported as errors.">物件 (通常為例外狀況) 的 <see cref="T:System.Collections.ICollection" />，已報告為錯誤。</param>
    </member>
    <member name="M:System.ComponentModel.Design.Serialization.CodeDomDesignerLoader.Parse">
      <summary vsli:raw="Parses the text or other persistent storage and returns a &lt;see cref=&quot;T:System.CodeDom.CodeCompileUnit&quot; /&gt;.">剖析文字或其他持續性儲存體，並傳回 <see cref="T:System.CodeDom.CodeCompileUnit" />。</summary>
      <returns vsli:raw="A &lt;see cref=&quot;T:System.CodeDom.CodeCompileUnit&quot; /&gt; resulting from a parse operation.">剖析作業導致的 <see cref="T:System.CodeDom.CodeCompileUnit" />。</returns>
    </member>
    <member name="M:System.ComponentModel.Design.Serialization.CodeDomDesignerLoader.PerformFlush(System.ComponentModel.Design.Serialization.IDesignerSerializationManager)">
      <summary vsli:raw="Requests serialization of the root component of the designer.">要求序列化設計工具的根元件。</summary>
      <param name="manager" vsli:raw="The &lt;see cref=&quot;T:System.ComponentModel.Design.Serialization.IDesignerSerializationManager&quot; /&gt; from which to request the serializer.">從其要求序列化程式的 <see cref="T:System.ComponentModel.Design.Serialization.IDesignerSerializationManager" />。</param>
      <exception cref="T:System.NotSupportedException" vsli:raw="The language did not provide a code parser for this file; this file type may not support a designer.">語言不提供這個檔案的程式碼剖析器。這個檔案類型可能不支援設計工具。</exception>
      <exception cref="T:System.InvalidOperationException" vsli:raw="The class can be designed, but it is not the first class in the file, or the designer could not be shown for this file because none of the classes within it can be designed.">可以設計該類別，但它不是檔案中的第一個類別，或由於無法設計其中任何類別，而無法顯示這個檔案的設計工具。</exception>
    </member>
    <member name="M:System.ComponentModel.Design.Serialization.CodeDomDesignerLoader.PerformLoad(System.ComponentModel.Design.Serialization.IDesignerSerializationManager)">
      <summary vsli:raw="Parses code from a CodeDOM provider.">剖析 CodeDOM 提供者的程式碼。</summary>
      <param name="manager" vsli:raw="The &lt;see cref=&quot;T:System.ComponentModel.Design.Serialization.IDesignerSerializationManager&quot; /&gt; from which to request the serializer.">從其要求序列化程式的 <see cref="T:System.ComponentModel.Design.Serialization.IDesignerSerializationManager" />。</param>
      <exception cref="T:System.NotSupportedException" vsli:raw="The language did not provide a code parser for this file; this file type may not support a designer.">語言不提供這個檔案的程式碼剖析器。這個檔案類型可能不支援設計工具。</exception>
      <exception cref="T:System.InvalidOperationException" vsli:raw="The class can be designed, but it is not the first class in the file, or the designer could not be shown for this file because none of the classes within it can be designed.">可以設計該類別，但它不是檔案中的第一個類別，或由於無法設計其中任何類別，而無法顯示這個檔案的設計工具。</exception>
    </member>
    <member name="M:System.ComponentModel.Design.Serialization.CodeDomDesignerLoader.System#ComponentModel#Design#Serialization#IDesignerSerializationService#Deserialize(System.Object)">
      <summary vsli:raw="Deserializes the specified serialization data object and returns a collection of objects represented by that data.">將指定的序列化資料物件還原序列化，並傳回由資料所表示的物件集合。</summary>
      <param name="serializationData" vsli:raw="An object consisting of serialized data.">物件，由序列化資料所組成。</param>
      <exception cref="T:System.ArgumentException" vsli:raw="&lt;paramref name=&quot;serializationData&quot; /&gt; is not a &lt;see cref=&quot;T:System.ComponentModel.Design.Serialization.SerializationStore&quot; /&gt;.">
        <paramref name="serializationData" /> 不是 <see cref="T:System.ComponentModel.Design.Serialization.SerializationStore" />。</exception>
      <returns vsli:raw="A collection of objects represented by &lt;paramref name=&quot;serializationData&quot; /&gt;.">
        <paramref name="serializationData" /> 表示的物件集合。</returns>
    </member>
    <member name="M:System.ComponentModel.Design.Serialization.CodeDomDesignerLoader.System#ComponentModel#Design#Serialization#IDesignerSerializationService#Serialize(System.Collections.ICollection)">
      <summary vsli:raw="Serializes the specified collection of objects and stores them in a serialization data object.">將指定的物件集合序列化，並將它們儲存在序列化資料物件中。</summary>
      <param name="objects" vsli:raw="A collection of objects to serialize.">要序列化的物件集合。</param>
      <exception cref="T:System.InvalidOperationException" vsli:raw="The &lt;see cref=&quot;T:System.ComponentModel.Design.Serialization.ComponentSerializationService&quot; /&gt; was not found.">找不到 <see cref="T:System.ComponentModel.Design.Serialization.ComponentSerializationService" />。</exception>
      <returns vsli:raw="An object that contains the serialized state of the specified collection of objects.">物件，包含指定物件集合的序列化狀態。</returns>
    </member>
    <member name="M:System.ComponentModel.Design.Serialization.CodeDomDesignerLoader.System#ComponentModel#Design#Serialization#INameCreationService#CreateName(System.ComponentModel.IContainer,System.Type)">
      <summary vsli:raw="Creates a new name that is unique to all components in the specified container.">建立在指定容器中所有元件的唯一新名稱。</summary>
      <param name="container" vsli:raw="The container where the new object is added.">加入新物件的所在容器。</param>
      <param name="dataType" vsli:raw="The data type of the object that receives the name.">接收名稱的物件資料型別。</param>
      <exception cref="T:System.ArgumentNullException" vsli:raw="&lt;paramref name=&quot;dataType&quot; /&gt; is &lt;see langword=&quot;null&quot; /&gt;.">
        <paramref name="dataType" /> 為 <see langword="null" />。</exception>
      <returns vsli:raw="A unique name for the data type.">資料型別的唯一名稱。</returns>
    </member>
    <member name="M:System.ComponentModel.Design.Serialization.CodeDomDesignerLoader.System#ComponentModel#Design#Serialization#INameCreationService#IsValidName(System.String)">
      <summary vsli:raw="Gets a value indicating whether the specified name is valid.">取得值，指出指定名稱是否有效。</summary>
      <param name="name" vsli:raw="The name to validate.">要驗證的名稱。</param>
      <exception cref="T:System.ArgumentNullException" vsli:raw="&lt;paramref name=&quot;name&quot; /&gt; is &lt;see langword=&quot;null&quot; /&gt;.">
        <paramref name="name" /> 為 <see langword="null" />。</exception>
      <returns vsli:raw="&lt;see langword=&quot;true&quot; /&gt; if the name is valid; otherwise, &lt;see langword=&quot;false&quot; /&gt;.">如果名稱有效，即為 <see langword="true" />；否則為 <see langword="false" />。</returns>
    </member>
    <member name="M:System.ComponentModel.Design.Serialization.CodeDomDesignerLoader.System#ComponentModel#Design#Serialization#INameCreationService#ValidateName(System.String)">
      <summary vsli:raw="Gets a value indicating whether the specified name is valid.">取得值，指出指定名稱是否有效。</summary>
      <param name="name" vsli:raw="The name to validate.">要驗證的名稱。</param>
      <exception cref="T:System.ArgumentNullException" vsli:raw="&lt;paramref name=&quot;name&quot; /&gt; is &lt;see langword=&quot;null&quot; /&gt;.">
        <paramref name="name" /> 為 <see langword="null" />。</exception>
      <exception cref="T:System.ArgumentException" vsli:raw="&lt;paramref name=&quot;name&quot; /&gt; is not a valid identifier, or there is already a component with the same name.">
        <paramref name="name" /> 不是有效的識別項，或已存同名元件。</exception>
    </member>
    <member name="M:System.ComponentModel.Design.Serialization.CodeDomDesignerLoader.Write(System.CodeDom.CodeCompileUnit)">
      <summary vsli:raw="Writes compile-unit changes to persistent storage.">將編譯單位變更寫入持續性儲存體。</summary>
      <param name="unit" vsli:raw="The &lt;see cref=&quot;T:System.CodeDom.CodeCompileUnit&quot; /&gt; to be persisted.">要保存的 <see cref="T:System.CodeDom.CodeCompileUnit" />。</param>
    </member>
    <member name="P:System.ComponentModel.Design.Serialization.CodeDomDesignerLoader.CodeDomProvider">
      <summary vsli:raw="Gets the &lt;see cref=&quot;P:System.ComponentModel.Design.Serialization.CodeDomDesignerLoader.CodeDomProvider&quot; /&gt; this designer loader will use.">取得這個設計工具載入器將使用的 <see cref="P:System.ComponentModel.Design.Serialization.CodeDomDesignerLoader.CodeDomProvider" />。</summary>
      <returns vsli:raw="The &lt;see cref=&quot;P:System.ComponentModel.Design.Serialization.CodeDomDesignerLoader.CodeDomProvider&quot; /&gt; this designer loader will use.">這個設計工具載入器將使用的 <see cref="P:System.ComponentModel.Design.Serialization.CodeDomDesignerLoader.CodeDomProvider" />。</returns>
    </member>
    <member name="P:System.ComponentModel.Design.Serialization.CodeDomDesignerLoader.TypeResolutionService">
      <summary vsli:raw="Gets the type resolution service to be used with this designer loader.">取得要與這個設計工具載入器搭配使用的型別解析服務。</summary>
      <returns vsli:raw="An &lt;see cref=&quot;T:System.ComponentModel.Design.ITypeResolutionService&quot; /&gt; that the CodeDOM serializers will use when resolving types.">
        <see cref="T:System.ComponentModel.Design.ITypeResolutionService" />，CodeDOM 序列化程式將在解析型別時使用它。</returns>
    </member>
    <member name="T:System.ComponentModel.Design.Serialization.CodeDomLocalizationModel">
      <summary vsli:raw="Determines the localization model to be used by the CodeDom resource adapter.">判斷要由 CodeDom 資源配置器所使用的當地語系化模型。</summary>
    </member>
    <member name="F:System.ComponentModel.Design.Serialization.CodeDomLocalizationModel.None">
      <summary vsli:raw="The localization provider should ignore localized properties. It will still write out resources for objects that do not support code generation and are serializable.">當地語系化提供者應該要略過當地語系化的屬性。 此提供者仍然會針對不支援程式碼產生的可序列化物件寫出其資源。</summary>
    </member>
    <member name="F:System.ComponentModel.Design.Serialization.CodeDomLocalizationModel.PropertyAssignment">
      <summary vsli:raw="The localization provider will write out localized properties by assigning a resource to each property. This model is fast when the number of properties is small, but it scales poorly as the number of properties containing default values grows.">當地語系化提供者會為每一個屬性指派資源，以寫出當地語系化的屬性。 此模型在屬性數目很小時會很快速，但是當包含預設值的屬性數目成長時，其擴充性會變得很差。</summary>
    </member>
    <member name="F:System.ComponentModel.Design.Serialization.CodeDomLocalizationModel.PropertyReflection">
      <summary vsli:raw="The localization provider will write localized property values into a resource file and use the &lt;see cref=&quot;T:System.ComponentModel.ComponentResourceManager&quot; /&gt; class to reflect on properties by name to fill them at runtime. This uses reflection at runtime so it can be slow, but it scales better for large numbers of properties with default values.">當地語系化提供者會將當地語系化的屬性值寫入資源檔，並使用 <see cref="T:System.ComponentModel.ComponentResourceManager" /> 類別，以根據名稱來反映屬性，在執行階段填寫這些屬性值。 這會在執行階段使用反映，所以可能會很慢，但是對於有預設值的大量屬性具有較佳的擴充性。</summary>
    </member>
    <member name="T:System.ComponentModel.Design.Serialization.CodeDomLocalizationProvider">
      <summary vsli:raw="Provides CodeDOM resource serialization services. This class cannot be inherited.">提供 CodeDOM 資源序列化服務。 此類別無法獲得繼承。</summary>
    </member>
    <member name="M:System.ComponentModel.Design.Serialization.CodeDomLocalizationProvider.#ctor(System.IServiceProvider,System.ComponentModel.Design.Serialization.CodeDomLocalizationModel)">
      <summary vsli:raw="Initializes a new instance of the &lt;see cref=&quot;T:System.ComponentModel.Design.Serialization.CodeDomLocalizationProvider&quot; /&gt; class.">初始化 <see cref="T:System.ComponentModel.Design.Serialization.CodeDomLocalizationProvider" /> 類別的新執行個體。</summary>
      <param name="provider" vsli:raw="An &lt;see cref=&quot;T:System.IServiceProvider&quot; /&gt; used by the localization provider to add its extender properties.">當地語系化提供者用於加入其擴充項屬性的 <see cref="T:System.IServiceProvider" />。</param>
      <param name="model" vsli:raw="A &lt;see cref=&quot;T:System.ComponentModel.Design.Serialization.CodeDomLocalizationModel&quot; /&gt; value indicating the localization model to be used by the CodeDOM resource adapter.">
        <see cref="T:System.ComponentModel.Design.Serialization.CodeDomLocalizationModel" /> 值，表示由 CodeDom 資源配置器所使用的當地語系化模型。</param>
    </member>
    <member name="M:System.ComponentModel.Design.Serialization.CodeDomLocalizationProvider.#ctor(System.IServiceProvider,System.ComponentModel.Design.Serialization.CodeDomLocalizationModel,System.Globalization.CultureInfo[])">
      <summary vsli:raw="Initializes a new instance of the &lt;see cref=&quot;T:System.ComponentModel.Design.Serialization.CodeDomLocalizationProvider&quot; /&gt; class.">初始化 <see cref="T:System.ComponentModel.Design.Serialization.CodeDomLocalizationProvider" /> 類別的新執行個體。</summary>
      <param name="provider" vsli:raw="An &lt;see cref=&quot;T:System.IServiceProvider&quot; /&gt; used by the localization provider to add its extender properties.">當地語系化提供者用於加入其擴充項屬性的 <see cref="T:System.IServiceProvider" />。</param>
      <param name="model" vsli:raw="A &lt;see cref=&quot;T:System.ComponentModel.Design.Serialization.CodeDomLocalizationModel&quot; /&gt; value indicating the localization model to be used by the CodeDOM resource adapter.">
        <see cref="T:System.ComponentModel.Design.Serialization.CodeDomLocalizationModel" /> 值，表示由 CodeDom 資源配置器所使用的當地語系化模型。</param>
      <param name="supportedCultures" vsli:raw="An array of cultures that this resource adapter should support.">這個資源配置器支援的文化特性陣列。</param>
    </member>
    <member name="M:System.ComponentModel.Design.Serialization.CodeDomLocalizationProvider.Dispose">
      <summary vsli:raw="Releases all resources used by the &lt;see cref=&quot;T:System.ComponentModel.Design.Serialization.CodeDomLocalizationProvider&quot; /&gt;.">釋放 <see cref="T:System.ComponentModel.Design.Serialization.CodeDomLocalizationProvider" /> 所使用的所有資源。</summary>
    </member>
    <member name="M:System.ComponentModel.Design.Serialization.CodeDomLocalizationProvider.System#ComponentModel#Design#Serialization#IDesignerSerializationProvider#GetSerializer(System.ComponentModel.Design.Serialization.IDesignerSerializationManager,System.Object,System.Type,System.Type)">
      <summary vsli:raw="For a description of this member, see &lt;see cref=&quot;M:System.ComponentModel.Design.Serialization.IDesignerSerializationProvider.GetSerializer(System.ComponentModel.Design.Serialization.IDesignerSerializationManager,System.Object,System.Type,System.Type)&quot; /&gt;.">如需這個成員的說明，請參閱 <see cref="M:System.ComponentModel.Design.Serialization.IDesignerSerializationProvider.GetSerializer(System.ComponentModel.Design.Serialization.IDesignerSerializationManager,System.Object,System.Type,System.Type)" />。</summary>
      <param name="manager" vsli:raw="The serialization manager requesting the serializer.">要求序列化工具的序列化管理員。</param>
      <param name="currentSerializer" vsli:raw="An instance of the current serializer of the specified type. This can be &lt;see langword=&quot;null&quot; /&gt; if no serializer of the specified type exists.">指定之型別的目前序列化工具執行個體。 如果指定型別的序列化工具不存在，則這可能是 <see langword="null" />。</param>
      <param name="objectType" vsli:raw="The data type of the object to serialize.">要序列化的物件資料型別。</param>
      <param name="serializerType" vsli:raw="The data type of the serializer to create.">要建立的序列化工具資料型別。</param>
      <returns vsli:raw="An instance of a serializer of the type requested, or &lt;see langword=&quot;null&quot; /&gt; if the request cannot be satisfied.">要求型別的序列化工具執行個體，或 <see langword="null" /> (如果無法滿足要求)。</returns>
    </member>
    <member name="T:System.ComponentModel.Design.Serialization.CodeDomSerializer">
      <summary vsli:raw="Serializes an object graph to a series of CodeDOM statements. This class provides an abstract base class for a serializer.">序列化物件 Graph 為一系列的 CodeDOM 陳述式 (Statement)。 這個類別為序列化工具提供抽象基底類別。</summary>
    </member>
    <member name="M:System.ComponentModel.Design.Serialization.CodeDomSerializer.#ctor">
      <summary vsli:raw="Initializes a new instance of the &lt;see cref=&quot;T:System.ComponentModel.Design.Serialization.CodeDomSerializer&quot; /&gt; class.">初始化 <see cref="T:System.ComponentModel.Design.Serialization.CodeDomSerializer" /> 類別的新執行個體。</summary>
    </member>
    <member name="M:System.ComponentModel.Design.Serialization.CodeDomSerializer.Deserialize(System.ComponentModel.Design.Serialization.IDesignerSerializationManager,System.Object)">
      <summary vsli:raw="Deserializes the specified serialized CodeDOM object into an object.">將指定序列化的 CodeDOM 物件還原序列化為物件。</summary>
      <param name="manager" vsli:raw="A serialization manager interface that is used during the deserialization process.">在還原序列化過程中所使用的序列化管理員介面。</param>
      <param name="codeObject" vsli:raw="A serialized CodeDOM object to deserialize.">要還原序列化的序列化 CodeDOM 物件。</param>
      <exception cref="T:System.ArgumentNullException" vsli:raw="&lt;paramref name=&quot;manager&quot; /&gt; or &lt;paramref name=&quot;codeObject&quot; /&gt; is &lt;see langword=&quot;null&quot; /&gt;.">
        <paramref name="manager" /> 或 <paramref name="codeObject" /> 為 <see langword="null" />。</exception>
      <exception cref="T:System.ArgumentException" vsli:raw="&lt;paramref name=&quot;codeObject&quot; /&gt; is an unsupported code element.">
        <paramref name="codeObject" /> 是不支援的程式碼項目。</exception>
      <returns vsli:raw="The deserialized CodeDOM object.">還原序列化的 CodeDOM 物件。</returns>
    </member>
    <member name="M:System.ComponentModel.Design.Serialization.CodeDomSerializer.DeserializeStatementToInstance(System.ComponentModel.Design.Serialization.IDesignerSerializationManager,System.CodeDom.CodeStatement)">
      <summary vsli:raw="Deserializes a single statement.">還原序列化陳述式。</summary>
      <param name="manager" vsli:raw="The serialization manager to use for serialization.">用於序列化的序列化管理員。</param>
      <param name="statement" vsli:raw="The statement to deserialize.">要還原序列化的陳述式。</param>
      <returns vsli:raw="An object instance resulting from deserializing &lt;paramref name=&quot;statement&quot; /&gt;.">將 <paramref name="statement" /> 還原序列化之後所得到的物件執行個體。</returns>
    </member>
    <member name="M:System.ComponentModel.Design.Serialization.CodeDomSerializer.GetTargetComponentName(System.CodeDom.CodeStatement,System.CodeDom.CodeExpression,System.Type)">
      <summary vsli:raw="Determines which statement group the given statement should belong to.">決定指定的陳述式應隸屬於哪一個陳述式群組。</summary>
      <param name="statement" vsli:raw="The &lt;see cref=&quot;T:System.CodeDom.CodeStatement&quot; /&gt; for which to determine the group.">要決定其所屬群組的 <see cref="T:System.CodeDom.CodeStatement" />。</param>
      <param name="expression" vsli:raw="A &lt;see cref=&quot;T:System.CodeDom.CodeExpression&quot; /&gt; that &lt;paramref name=&quot;statement&quot; /&gt; has been reduced to.">
        <paramref name="statement" /> 精簡之後所得的 <see cref="T:System.CodeDom.CodeExpression" />。</param>
      <param name="targetType" vsli:raw="The &lt;see cref=&quot;T:System.Type&quot; /&gt; of &lt;paramref name=&quot;statement&quot; /&gt;.">
        <see cref="T:System.Type" /> 的 <paramref name="statement" />。</param>
      <returns vsli:raw="The name of the component with which &lt;paramref name=&quot;statement&quot; /&gt; should be grouped.">
        <paramref name="statement" /> 應與之組成群組的元件的名稱。</returns>
    </member>
    <member name="M:System.ComponentModel.Design.Serialization.CodeDomSerializer.Serialize(System.ComponentModel.Design.Serialization.IDesignerSerializationManager,System.Object)">
      <summary vsli:raw="Serializes the specified object into a CodeDOM object.">將指定的物件序列化為 CodeDOM 物件。</summary>
      <param name="manager" vsli:raw="The serialization manager to use during serialization.">要在序列化期間使用的序列化管理員。</param>
      <param name="value" vsli:raw="The object to serialize.">要序列化的物件。</param>
      <exception cref="T:System.ArgumentNullException" vsli:raw="&lt;paramref name=&quot;manager&quot; /&gt; or &lt;paramref name=&quot;value&quot; /&gt; is &lt;see langword=&quot;null&quot; /&gt;.">
        <paramref name="manager" /> 或 <paramref name="value" /> 為 <see langword="null" />。</exception>
      <returns vsli:raw="A CodeDOM object representing the object that has been serialized.">CodeDOM 物件，表示已序列化的物件。</returns>
    </member>
    <member name="M:System.ComponentModel.Design.Serialization.CodeDomSerializer.SerializeAbsolute(System.ComponentModel.Design.Serialization.IDesignerSerializationManager,System.Object)">
      <summary vsli:raw="Serializes the given object, accounting for default values.">用預設值將指定的物件序列化。</summary>
      <param name="manager" vsli:raw="The serialization manager to use for serialization.">用於序列化的序列化管理員。</param>
      <param name="value" vsli:raw="The object to serialize.">要序列化的物件。</param>
      <exception cref="T:System.ArgumentNullException" vsli:raw="&lt;paramref name=&quot;manager&quot; /&gt; or &lt;paramref name=&quot;value&quot; /&gt; is &lt;see langword=&quot;null&quot; /&gt;.">
        <paramref name="manager" /> 或 <paramref name="value" /> 為 <see langword="null" />。</exception>
      <returns vsli:raw="A CodeDom object representing &lt;paramref name=&quot;value&quot; /&gt;.">CodeDom 物件，代表 <paramref name="value" />。</returns>
    </member>
    <member name="M:System.ComponentModel.Design.Serialization.CodeDomSerializer.SerializeMember(System.ComponentModel.Design.Serialization.IDesignerSerializationManager,System.Object,System.ComponentModel.MemberDescriptor)">
      <summary vsli:raw="Serializes the given member on the given object.">在指定的物件上將指定的成員序列化。</summary>
      <param name="manager" vsli:raw="The serialization manager to use for serialization.">用於序列化的序列化管理員。</param>
      <param name="owningObject" vsli:raw="The object to which is &lt;paramref name=&quot;member&quot; /&gt; attached.">物件，<paramref name="member" /> 附加於此。</param>
      <param name="member" vsli:raw="The member to serialize.">要序列化的成員。</param>
      <exception cref="T:System.ArgumentNullException" vsli:raw="&lt;paramref name=&quot;manager&quot; /&gt;, &lt;paramref name=&quot;owningObject&quot; /&gt;, or &lt;paramref name=&quot;member&quot; /&gt; is &lt;see langword=&quot;null&quot; /&gt;.">
        <paramref name="manager" />、<paramref name="owningObject" /> 或 <paramref name="member" /> 為 <see langword="null" />。</exception>
      <exception cref="T:System.NotSupportedException" vsli:raw="&lt;paramref name=&quot;member&quot; /&gt; is not a serializable type.">
        <paramref name="member" /> 不是可序列化的類型。</exception>
      <returns vsli:raw="A &lt;see cref=&quot;T:System.CodeDom.CodeStatementCollection&quot; /&gt; representing the serialized state of &lt;paramref name=&quot;member&quot; /&gt;.">表示 <paramref name="member" /> 序列化狀態的 <see cref="T:System.CodeDom.CodeStatementCollection" />。</returns>
    </member>
    <member name="M:System.ComponentModel.Design.Serialization.CodeDomSerializer.SerializeMemberAbsolute(System.ComponentModel.Design.Serialization.IDesignerSerializationManager,System.Object,System.ComponentModel.MemberDescriptor)">
      <summary vsli:raw="Serializes the given member, accounting for default values.">將指定的成員序列化，說明預設值。</summary>
      <param name="manager" vsli:raw="The serialization manager to use for serialization.">用於序列化的序列化管理員。</param>
      <param name="owningObject" vsli:raw="The object to which is &lt;paramref name=&quot;member&quot; /&gt; attached.">物件，<paramref name="member" /> 附加於此。</param>
      <param name="member" vsli:raw="The member to serialize.">要序列化的成員。</param>
      <exception cref="T:System.ArgumentNullException" vsli:raw="&lt;paramref name=&quot;manager&quot; /&gt;, &lt;paramref name=&quot;owningObject&quot; /&gt;, or &lt;paramref name=&quot;member&quot; /&gt; is &lt;see langword=&quot;null&quot; /&gt;.">
        <paramref name="manager" />、<paramref name="owningObject" /> 或 <paramref name="member" /> 為 <see langword="null" />。</exception>
      <exception cref="T:System.NotSupportedException" vsli:raw="&lt;paramref name=&quot;member&quot; /&gt; is not a serializable type.">
        <paramref name="member" /> 不是可序列化的類型。</exception>
      <returns vsli:raw="A CodeDom object representing &lt;paramref name=&quot;member&quot; /&gt;.">CodeDom 物件，代表 <paramref name="member" />。</returns>
    </member>
    <member name="M:System.ComponentModel.Design.Serialization.CodeDomSerializer.SerializeToReferenceExpression(System.ComponentModel.Design.Serialization.IDesignerSerializationManager,System.Object)">
      <summary vsli:raw="Serializes the specified value to a CodeDOM expression.">序列化指定值為 CodeDOM 運算式。</summary>
      <param name="manager" vsli:raw="The serialization manager to use during serialization.">要在序列化期間使用的序列化管理員。</param>
      <param name="value" vsli:raw="The object to serialize.">要序列化的物件。</param>
      <returns vsli:raw="The serialized value. This returns &lt;see langword=&quot;null&quot; /&gt; if no reference expression can be obtained for the specified value, or the value cannot be serialized.">序列化的值。 如果無法為指定值取得參考運算式，或者值無法序列化，這會傳回 <see langword="null" />。</returns>
    </member>
    <member name="T:System.ComponentModel.Design.Serialization.CodeDomSerializerBase">
      <summary vsli:raw="Provides a base class for &lt;see cref=&quot;T:System.ComponentModel.Design.Serialization.CodeDomSerializer&quot; /&gt; classes.">提供 <see cref="T:System.ComponentModel.Design.Serialization.CodeDomSerializer" /> 類別的基底類別。</summary>
    </member>
    <member name="M:System.ComponentModel.Design.Serialization.CodeDomSerializerBase.DeserializeExpression(System.ComponentModel.Design.Serialization.IDesignerSerializationManager,System.String,System.CodeDom.CodeExpression)">
      <summary vsli:raw="Deserializes the given expression into an in-memory object.">將指定的運算式還原序列化為記憶體中物件。</summary>
      <param name="manager" vsli:raw="The &lt;see cref=&quot;T:System.ComponentModel.Design.Serialization.IDesignerSerializationManager&quot; /&gt; to use for serialization.">供序列化使用的 <see cref="T:System.ComponentModel.Design.Serialization.IDesignerSerializationManager" />。</param>
      <param name="name" vsli:raw="The name of the object that results from the expression. Can be &lt;see langword=&quot;null&quot; /&gt; if there is no need to name the object.">運算式產生的物件名稱。 如果不需要命名該物件，則可為 <see langword="null" />。</param>
      <param name="expression" vsli:raw="The &lt;see cref=&quot;T:System.CodeDom.CodeExpression&quot; /&gt; to interpret.">要解譯的 <see cref="T:System.CodeDom.CodeExpression" />。</param>
      <returns vsli:raw="An object resulting from interpretation of &lt;paramref name=&quot;expression&quot; /&gt;.">
        <paramref name="expression" /> 之解譯所產生的物件。</returns>
    </member>
    <member name="M:System.ComponentModel.Design.Serialization.CodeDomSerializerBase.DeserializeInstance(System.ComponentModel.Design.Serialization.IDesignerSerializationManager,System.Type,System.Object[],System.String,System.Boolean)">
      <summary vsli:raw="Returns an instance of the given type.">傳回指定型別的執行個體。</summary>
      <param name="manager" vsli:raw="The &lt;see cref=&quot;T:System.ComponentModel.Design.Serialization.IDesignerSerializationManager&quot; /&gt; to use for serialization.">供序列化使用的 <see cref="T:System.ComponentModel.Design.Serialization.IDesignerSerializationManager" />。</param>
      <param name="type" vsli:raw="The &lt;see cref=&quot;T:System.Type&quot; /&gt; of the instance to return.">要傳回之執行個體的 <see cref="T:System.Type" />。</param>
      <param name="parameters" vsli:raw="The parameters to pass to the constructor for &lt;paramref name=&quot;type&quot; /&gt;.">要傳遞至 <paramref name="type" /> 之建構函式的參數。</param>
      <param name="name" vsli:raw="The name of the deserialized object.">已還原序列化物件的名稱。</param>
      <param name="addToContainer" vsli:raw="&lt;see langword=&quot;true&quot; /&gt; to add this object to the design container; otherwise, &lt;see langword=&quot;false&quot; /&gt;. The object must implement &lt;see cref=&quot;T:System.ComponentModel.IComponent&quot; /&gt; for this to have any effect.">
        <see langword="true" /> 表示將這個物件加入設計容器，否則為 <see langword="false" />。 物件必須實作 <see cref="T:System.ComponentModel.IComponent" />，才能發生效用。</param>
      <exception cref="T:System.ArgumentNullException" vsli:raw="&lt;paramref name=&quot;manager&quot; /&gt; or &lt;paramref name=&quot;type&quot; /&gt; is &lt;see langword=&quot;null&quot; /&gt;.">
        <paramref name="manager" /> 或 <paramref name="type" /> 為 <see langword="null" />。</exception>
      <returns vsli:raw="An instance of &lt;paramref name=&quot;type&quot; /&gt;.">
        <paramref name="type" /> 的執行個體。</returns>
    </member>
    <member name="M:System.ComponentModel.Design.Serialization.CodeDomSerializerBase.DeserializePropertiesFromResources(System.ComponentModel.Design.Serialization.IDesignerSerializationManager,System.Object,System.Attribute[])">
      <summary vsli:raw="Deserializes properties on the given object from the invariant culture's resource bundle.">從不因文化特性而異的資源配套還原序列化指定物件上的屬性。</summary>
      <param name="manager" vsli:raw="The &lt;see cref=&quot;T:System.ComponentModel.Design.Serialization.IDesignerSerializationManager&quot; /&gt; to use for serialization.">供序列化使用的 <see cref="T:System.ComponentModel.Design.Serialization.IDesignerSerializationManager" />。</param>
      <param name="value" vsli:raw="The object from which the properties are to be deserialized.">要還原序列化其屬性的物件。</param>
      <param name="filter" vsli:raw="An &lt;see cref=&quot;T:System.Attribute&quot; /&gt; array that filters which properties will be deserialized.">篩選要還原序列化之屬性的 <see cref="T:System.Attribute" /> 陣列。</param>
    </member>
    <member name="M:System.ComponentModel.Design.Serialization.CodeDomSerializerBase.DeserializeStatement(System.ComponentModel.Design.Serialization.IDesignerSerializationManager,System.CodeDom.CodeStatement)">
      <summary vsli:raw="Deserializes a statement by interpreting and executing a CodeDOM statement.">藉由解譯並執行 CodeDOM 陳述式還原序列化陳述式。</summary>
      <param name="manager" vsli:raw="The &lt;see cref=&quot;T:System.ComponentModel.Design.Serialization.IDesignerSerializationManager&quot; /&gt; to use for serialization.">供序列化使用的 <see cref="T:System.ComponentModel.Design.Serialization.IDesignerSerializationManager" />。</param>
      <param name="statement" vsli:raw="The &lt;see cref=&quot;T:System.CodeDom.CodeStatement&quot; /&gt; to deserialize.">要還原序列化的 <see cref="T:System.CodeDom.CodeStatement" />。</param>
    </member>
    <member name="M:System.ComponentModel.Design.Serialization.CodeDomSerializerBase.GetAttributesFromTypeHelper(System.ComponentModel.Design.Serialization.IDesignerSerializationManager,System.Type)">
      <summary vsli:raw="Gets a collection of attributes as defined in the project's target version of .NET.">取得屬性 (Attribute) 集合，即專案之 .NET Framework 目標版本中所定義的屬性。</summary>
      <param name="manager" vsli:raw="The serialization manager.">序列化管理員。</param>
      <param name="type" vsli:raw="The target type.">目標型別。</param>
      <returns vsli:raw="A collection of attributes as defined in the project's target version of .NET.">屬性 (Attribute) 集合，即專案之 .NET Framework 目標版本中所定義的屬性。</returns>
    </member>
    <member name="M:System.ComponentModel.Design.Serialization.CodeDomSerializerBase.GetAttributesHelper(System.ComponentModel.Design.Serialization.IDesignerSerializationManager,System.Object)">
      <summary vsli:raw="Gets a collection of attributes as defined in the project's target version of .NET.">取得屬性 (Attribute) 集合，即專案之 .NET Framework 目標版本中所定義的屬性。</summary>
      <param name="manager" vsli:raw="The serialization manager.">序列化管理員。</param>
      <param name="instance" vsli:raw="An object of the target type.">目標型別的物件。</param>
      <returns vsli:raw="A collection of attributes as defined in the project's target version of .NET.">屬性 (Attribute) 集合，即專案之 .NET Framework 目標版本中所定義的屬性。</returns>
    </member>
    <member name="M:System.ComponentModel.Design.Serialization.CodeDomSerializerBase.GetEventsHelper(System.ComponentModel.Design.Serialization.IDesignerSerializationManager,System.Object,System.Attribute[])">
      <summary vsli:raw="Gets a collection of events as defined in the project's target version of .NET.">取得如專案的 .NET Framework 目標版本中定義之事件的集合。</summary>
      <param name="manager" vsli:raw="The serialization manager.">序列化管理員。</param>
      <param name="instance" vsli:raw="An object of the target type.">目標型別的物件。</param>
      <param name="attributes" vsli:raw="An array of attributes to pass to the target version of .NET.">屬性 (Attribute) 陣列，要傳遞至 .NET Framework 目標版本的屬性。</param>
      <returns vsli:raw="A collection of events as defined in the project's target version of .NET.">事件集合，即專案之 .NET Framework 目標版本中所定義的事件。</returns>
    </member>
    <member name="M:System.ComponentModel.Design.Serialization.CodeDomSerializerBase.GetExpression(System.ComponentModel.Design.Serialization.IDesignerSerializationManager,System.Object)">
      <summary vsli:raw="Returns an expression for the given object.">傳回指定物件的運算式。</summary>
      <param name="manager" vsli:raw="The &lt;see cref=&quot;T:System.ComponentModel.Design.Serialization.IDesignerSerializationManager&quot; /&gt; to use for serialization.">供序列化使用的 <see cref="T:System.ComponentModel.Design.Serialization.IDesignerSerializationManager" />。</param>
      <param name="value" vsli:raw="The object for which to get an expression.">要為其取得運算式的物件。</param>
      <exception cref="T:System.ArgumentNullException" vsli:raw="&lt;paramref name=&quot;manager&quot; /&gt; is &lt;see langword=&quot;null&quot; /&gt;.">
        <paramref name="manager" /> 為 <see langword="null" />。</exception>
      <returns vsli:raw="A &lt;see cref=&quot;T:System.CodeDom.CodeExpression&quot; /&gt; representing &lt;paramref name=&quot;value&quot; /&gt;, or &lt;see langword=&quot;null&quot; /&gt; if there is no existing expression for &lt;paramref name=&quot;value&quot; /&gt;.">
        <see cref="T:System.CodeDom.CodeExpression" /> 表示 <paramref name="value" />，或表示 <see langword="null" /> (如果沒有 <paramref name="value" /> 的現有運算式)。</returns>
    </member>
    <member name="M:System.ComponentModel.Design.Serialization.CodeDomSerializerBase.GetPropertiesHelper(System.ComponentModel.Design.Serialization.IDesignerSerializationManager,System.Object,System.Attribute[])">
      <summary vsli:raw="Gets a collection of properties as defined in the project's target version of .NET.">取得如專案的 .NET Framework 目標版本中定義之屬性的集合。</summary>
      <param name="manager" vsli:raw="The serialization manager.">序列化管理員。</param>
      <param name="instance" vsli:raw="An object of the target type.">目標型別的物件。</param>
      <param name="attributes" vsli:raw="An array of attributes to pass to the target version of .NET.">屬性 (Attribute) 陣列，要傳遞至 .NET Framework 目標版本的屬性。</param>
      <returns vsli:raw="A collection of properties as defined in the project's target version of .NET.">屬性 (Property) 集合，即專案之 .NET Framework 目標版本中所定義的屬性。</returns>
    </member>
    <member name="M:System.ComponentModel.Design.Serialization.CodeDomSerializerBase.GetReflectionTypeFromTypeHelper(System.ComponentModel.Design.Serialization.IDesignerSerializationManager,System.Type)">
      <summary vsli:raw="Gets a reflection type generated from type metadata.">取得從型別中繼資料所產生的反映型別。</summary>
      <param name="manager" vsli:raw="The serialization manager.">序列化管理員。</param>
      <param name="type" vsli:raw="The type to use metadata from.">要從中使用中繼資料的型別。</param>
      <returns vsli:raw="A reflection type generated from the metadata of &lt;paramref name=&quot;type&quot; /&gt;.">反映型別，從 <paramref name="type" /> 的中繼資料所產生。</returns>
    </member>
    <member name="M:System.ComponentModel.Design.Serialization.CodeDomSerializerBase.GetReflectionTypeHelper(System.ComponentModel.Design.Serialization.IDesignerSerializationManager,System.Object)">
      <summary vsli:raw="Gets a reflection type generated from object metadata.">取得從物件中繼資料所產生的反映型別。</summary>
      <param name="manager" vsli:raw="The serialization manager.">序列化管理員。</param>
      <param name="instance" vsli:raw="The object to use metadata from.">要從中使用中繼資料的物件。</param>
      <returns vsli:raw="A reflection type generated from the metadata of &lt;paramref name=&quot;object&quot; /&gt;.">反映型別，從 <paramref name="object" /> 的中繼資料所產生。</returns>
    </member>
    <member name="M:System.ComponentModel.Design.Serialization.CodeDomSerializerBase.GetSerializer(System.ComponentModel.Design.Serialization.IDesignerSerializationManager,System.Object)">
      <summary vsli:raw="Locates a serializer for the given object value.">尋找指定物件值的序列化程式。</summary>
      <param name="manager" vsli:raw="The &lt;see cref=&quot;T:System.ComponentModel.Design.Serialization.IDesignerSerializationManager&quot; /&gt; to use for serialization.">供序列化使用的 <see cref="T:System.ComponentModel.Design.Serialization.IDesignerSerializationManager" />。</param>
      <param name="value" vsli:raw="The object specifying the serializer to retrieve.">指定要擷取之序列化程式的物件。</param>
      <exception cref="T:System.ArgumentNullException" vsli:raw="&lt;paramref name=&quot;manager&quot; /&gt; or &lt;paramref name=&quot;value&quot; /&gt; is &lt;see langword=&quot;null&quot; /&gt;.">
        <paramref name="manager" /> 或 <paramref name="value" /> 為 <see langword="null" />。</exception>
      <returns vsli:raw="A &lt;see cref=&quot;T:System.ComponentModel.Design.Serialization.CodeDomSerializer&quot; /&gt; that is appropriate for &lt;paramref name=&quot;value&quot; /&gt;.">適合於 <paramref name="value" /> 的 <see cref="T:System.ComponentModel.Design.Serialization.CodeDomSerializer" />。</returns>
    </member>
    <member name="M:System.ComponentModel.Design.Serialization.CodeDomSerializerBase.GetSerializer(System.ComponentModel.Design.Serialization.IDesignerSerializationManager,System.Type)">
      <summary vsli:raw="Locates a serializer for the given type.">尋找指定型別的序列化程式。</summary>
      <param name="manager" vsli:raw="The &lt;see cref=&quot;T:System.ComponentModel.Design.Serialization.IDesignerSerializationManager&quot; /&gt; to use for serialization.">供序列化使用的 <see cref="T:System.ComponentModel.Design.Serialization.IDesignerSerializationManager" />。</param>
      <param name="valueType" vsli:raw="The &lt;see cref=&quot;T:System.Type&quot; /&gt; specifying the serializer to retrieve.">指定要擷取之序列化程式的 <see cref="T:System.Type" />。</param>
      <exception cref="T:System.ArgumentNullException" vsli:raw="&lt;paramref name=&quot;manager&quot; /&gt; or &lt;paramref name=&quot;valueType&quot; /&gt; is &lt;see langword=&quot;null&quot; /&gt;.">
        <paramref name="manager" /> 或 <paramref name="valueType" /> 為 <see langword="null" />。</exception>
      <returns vsli:raw="A &lt;see cref=&quot;T:System.ComponentModel.Design.Serialization.CodeDomSerializer&quot; /&gt; that is appropriate for &lt;paramref name=&quot;valueType&quot; /&gt;.">適合於 <paramref name="valueType" /> 的 <see cref="T:System.ComponentModel.Design.Serialization.CodeDomSerializer" />。</returns>
    </member>
    <member name="M:System.ComponentModel.Design.Serialization.CodeDomSerializerBase.GetTargetFrameworkProvider(System.IServiceProvider,System.Object)">
      <summary vsli:raw="Gets a &lt;see cref=&quot;T:System.ComponentModel.TypeDescriptionProvider&quot; /&gt; that is aware of the target version of .NET, for use in type filtering.">取得 <see cref="T:System.ComponentModel.TypeDescriptionProvider" />，此提供者會感知用於型別篩選的 .NET Framework 目標版本。</summary>
      <param name="provider" vsli:raw="The type description provider service.">型別描述提供者服務。</param>
      <param name="instance" vsli:raw="An object from which the type description provider service can be derived, if &lt;paramref name=&quot;provider&quot; /&gt; is &lt;see langword=&quot;null&quot; /&gt;.">如果 <paramref name="provider" /> 為 <see langword="null" />，則為可從中衍生型別描述提供者服務的物件。</param>
      <returns vsli:raw="A .NET-aware type description provider.">.NET Framework 感知的型別描述提供者。</returns>
    </member>
    <member name="M:System.ComponentModel.Design.Serialization.CodeDomSerializerBase.GetUniqueName(System.ComponentModel.Design.Serialization.IDesignerSerializationManager,System.Object)">
      <summary vsli:raw="Returns a unique name for the given object.">傳回指定物件的唯一名稱。</summary>
      <param name="manager" vsli:raw="The &lt;see cref=&quot;T:System.ComponentModel.Design.Serialization.IDesignerSerializationManager&quot; /&gt; to use for serialization.">供序列化使用的 <see cref="T:System.ComponentModel.Design.Serialization.IDesignerSerializationManager" />。</param>
      <param name="value" vsli:raw="The object for which the name will be retrieved.">要為其擷取名稱的物件。</param>
      <exception cref="T:System.ArgumentNullException" vsli:raw="&lt;paramref name=&quot;manager&quot; /&gt; or &lt;paramref name=&quot;value&quot; /&gt; is &lt;see langword=&quot;null&quot; /&gt;.">
        <paramref name="manager" /> 或 <paramref name="value" /> 為 <see langword="null" />。</exception>
      <returns vsli:raw="A unique name for &lt;paramref name=&quot;value&quot; /&gt;.">
        <paramref name="value" /> 的唯一名稱。</returns>
    </member>
    <member name="M:System.ComponentModel.Design.Serialization.CodeDomSerializerBase.IsSerialized(System.ComponentModel.Design.Serialization.IDesignerSerializationManager,System.Object)">
      <summary vsli:raw="Returns a value indicating whether the given object has been serialized.">傳回值，指出指定的物件是否已經序列化。</summary>
      <param name="manager" vsli:raw="The &lt;see cref=&quot;T:System.ComponentModel.Design.Serialization.IDesignerSerializationManager&quot; /&gt; to use for serialization.">供序列化使用的 <see cref="T:System.ComponentModel.Design.Serialization.IDesignerSerializationManager" />。</param>
      <param name="value" vsli:raw="The object to test for previous serialization.">要測試先前序列化的物件。</param>
      <exception cref="T:System.ArgumentNullException" vsli:raw="&lt;paramref name=&quot;manager&quot; /&gt; or &lt;paramref name=&quot;value&quot; /&gt; is &lt;see langword=&quot;null&quot; /&gt;.">
        <paramref name="manager" /> 或 <paramref name="value" /> 為 <see langword="null" />。</exception>
      <returns vsli:raw="&lt;see langword=&quot;true&quot; /&gt; if &lt;paramref name=&quot;value&quot; /&gt; has been serialized; otherwise, &lt;see langword=&quot;false&quot; /&gt;.">如果已序列化 <paramref name="value" /> 則為 <see langword="true" />，否則為 <see langword="false" />。</returns>
    </member>
    <member name="M:System.ComponentModel.Design.Serialization.CodeDomSerializerBase.IsSerialized(System.ComponentModel.Design.Serialization.IDesignerSerializationManager,System.Object,System.Boolean)">
      <summary vsli:raw="Returns a value indicating whether the given object has been serialized, optionally considering preset expressions.">傳回值，指出指定的物件是否已經序列化 (選擇性地考量預設運算式)。</summary>
      <param name="manager" vsli:raw="The &lt;see cref=&quot;T:System.ComponentModel.Design.Serialization.IDesignerSerializationManager&quot; /&gt; to use for serialization.">供序列化使用的 <see cref="T:System.ComponentModel.Design.Serialization.IDesignerSerializationManager" />。</param>
      <param name="value" vsli:raw="The object to test for previous serialization.">要測試先前序列化的物件。</param>
      <param name="honorPreset" vsli:raw="&lt;see langword=&quot;true&quot; /&gt; to include preset expressions; otherwise, &lt;see langword=&quot;false&quot; /&gt;.">
        <see langword="true" /> 表示包含預設運算式，否則為 <see langword="false" />。</param>
      <exception cref="T:System.ArgumentNullException" vsli:raw="&lt;paramref name=&quot;manager&quot; /&gt; or &lt;paramref name=&quot;value&quot; /&gt; is &lt;see langword=&quot;null&quot; /&gt;.">
        <paramref name="manager" /> 或 <paramref name="value" /> 為 <see langword="null" />。</exception>
      <returns vsli:raw="&lt;see langword=&quot;true&quot; /&gt; if &lt;paramref name=&quot;value&quot; /&gt; has been serialized; otherwise, &lt;see langword=&quot;false&quot; /&gt;.">如果已序列化 <paramref name="value" /> 則為 <see langword="true" />，否則為 <see langword="false" />。</returns>
    </member>
    <member name="M:System.ComponentModel.Design.Serialization.CodeDomSerializerBase.SerializeCreationExpression(System.ComponentModel.Design.Serialization.IDesignerSerializationManager,System.Object,System.Boolean@)">
      <summary vsli:raw="Returns an expression representing the creation of the given object.">傳回運算式，表示指定物件的建立。</summary>
      <param name="manager" vsli:raw="The &lt;see cref=&quot;T:System.ComponentModel.Design.Serialization.IDesignerSerializationManager&quot; /&gt; to use for serialization.">供序列化使用的 <see cref="T:System.ComponentModel.Design.Serialization.IDesignerSerializationManager" />。</param>
      <param name="value" vsli:raw="The object to serialize.">要序列化的物件。</param>
      <param name="isComplete" vsli:raw="&lt;see langword=&quot;true&quot; /&gt; if &lt;paramref name=&quot;value&quot; /&gt; was fully serialized; otherwise, &lt;see langword=&quot;false&quot; /&gt;.">如果已完全序列化 <paramref name="value" /> 則為 <see langword="true" />，否則為 <see langword="false" />。</param>
      <exception cref="T:System.ArgumentNullException" vsli:raw="&lt;paramref name=&quot;manager&quot; /&gt; or &lt;paramref name=&quot;value&quot; /&gt; is &lt;see langword=&quot;null&quot; /&gt;.">
        <paramref name="manager" /> 或 <paramref name="value" /> 為 <see langword="null" />。</exception>
      <returns vsli:raw="An expression representing the creation of &lt;paramref name=&quot;value&quot; /&gt;.">表示 <paramref name="value" /> 建立的運算式。</returns>
    </member>
    <member name="M:System.ComponentModel.Design.Serialization.CodeDomSerializerBase.SerializeEvent(System.ComponentModel.Design.Serialization.IDesignerSerializationManager,System.CodeDom.CodeStatementCollection,System.Object,System.ComponentModel.EventDescriptor)">
      <summary vsli:raw="Serializes the given event into the given statement collection.">將指定的事件序列化至指定的陳述式集合中。</summary>
      <param name="manager" vsli:raw="The &lt;see cref=&quot;T:System.ComponentModel.Design.Serialization.IDesignerSerializationManager&quot; /&gt; to use for serialization.">供序列化使用的 <see cref="T:System.ComponentModel.Design.Serialization.IDesignerSerializationManager" />。</param>
      <param name="statements" vsli:raw="The &lt;see cref=&quot;T:System.CodeDom.CodeStatementCollection&quot; /&gt; into which the event will be serialized.">將於其中進行序列化的 <see cref="T:System.CodeDom.CodeStatementCollection" />。</param>
      <param name="value" vsli:raw="The object to which &lt;paramref name=&quot;descriptor&quot; /&gt; is bound.">物件，<paramref name="descriptor" /> 繫結於此。</param>
      <param name="descriptor" vsli:raw="An &lt;see cref=&quot;T:System.ComponentModel.EventDescriptor&quot; /&gt; specifying the event to serialize.">
        <see cref="T:System.ComponentModel.EventDescriptor" />，指定要序列化的事件。</param>
      <exception cref="T:System.ArgumentNullException" vsli:raw="&lt;paramref name=&quot;manager&quot; /&gt;, &lt;paramref name=&quot;value&quot; /&gt;, &lt;paramref name=&quot;statements&quot; /&gt;, or &lt;paramref name=&quot;descriptor&quot; /&gt; is &lt;see langword=&quot;null&quot; /&gt;.">
        <paramref name="manager" />、<paramref name="value" />、<paramref name="statements" /> 或 <paramref name="descriptor" /> 為 <see langword="null" />。</exception>
      <exception cref="T:System.ComponentModel.Design.Serialization.CodeDomSerializerException" vsli:raw="&lt;see cref=&quot;T:System.ComponentModel.Design.IEventBindingService&quot; /&gt; is not available.">
        <see cref="T:System.ComponentModel.Design.IEventBindingService" /> 無法使用。</exception>
    </member>
    <member name="M:System.ComponentModel.Design.Serialization.CodeDomSerializerBase.SerializeEvents(System.ComponentModel.Design.Serialization.IDesignerSerializationManager,System.CodeDom.CodeStatementCollection,System.Object,System.Attribute[])">
      <summary vsli:raw="Serializes the specified events into the given statement collection.">將指定的事件序列化至指定的陳述式集合中。</summary>
      <param name="manager" vsli:raw="The &lt;see cref=&quot;T:System.ComponentModel.Design.Serialization.IDesignerSerializationManager&quot; /&gt; to use for serialization.">供序列化使用的 <see cref="T:System.ComponentModel.Design.Serialization.IDesignerSerializationManager" />。</param>
      <param name="statements" vsli:raw="The &lt;see cref=&quot;T:System.CodeDom.CodeStatementCollection&quot; /&gt; into which the event will be serialized.">將於其中進行序列化的 <see cref="T:System.CodeDom.CodeStatementCollection" />。</param>
      <param name="value" vsli:raw="The object on which events will be serialized.">將序列化其上事件的物件。</param>
      <param name="filter" vsli:raw="An &lt;see cref=&quot;T:System.Attribute&quot; /&gt; array that filters which events will be serialized.">
        <see cref="T:System.Attribute" /> 陣列，可篩選要進行序列化的事件。</param>
      <exception cref="T:System.ArgumentNullException" vsli:raw="&lt;paramref name=&quot;manager&quot; /&gt;, &lt;paramref name=&quot;value&quot; /&gt;, or &lt;paramref name=&quot;statements&quot; /&gt; is &lt;see langword=&quot;null&quot; /&gt;.">
        <paramref name="manager" />、<paramref name="value" /> 或 <paramref name="statements" /> 為 <see langword="null" />。</exception>
    </member>
    <member name="M:System.ComponentModel.Design.Serialization.CodeDomSerializerBase.SerializeProperties(System.ComponentModel.Design.Serialization.IDesignerSerializationManager,System.CodeDom.CodeStatementCollection,System.Object,System.Attribute[])">
      <summary vsli:raw="Serializes the properties on the given object into the given statement collection.">將指定物件上的屬性，序列化至指定的陳述式集合。</summary>
      <param name="manager" vsli:raw="The &lt;see cref=&quot;T:System.ComponentModel.Design.Serialization.IDesignerSerializationManager&quot; /&gt; to use for serialization.">供序列化使用的 <see cref="T:System.ComponentModel.Design.Serialization.IDesignerSerializationManager" />。</param>
      <param name="statements" vsli:raw="The &lt;see cref=&quot;T:System.CodeDom.CodeStatementCollection&quot; /&gt; into which the properties will be serialized.">屬性將序列化為的 <see cref="T:System.CodeDom.CodeStatementCollection" />。</param>
      <param name="value" vsli:raw="The object on which the properties will be serialized.">屬性將在其上序列化的物件。</param>
      <param name="filter" vsli:raw="An &lt;see cref=&quot;T:System.Attribute&quot; /&gt; array that filters which properties will be serialized.">
        <see cref="T:System.Attribute" /> 陣列，可篩選要進行序列化的屬性。</param>
      <exception cref="T:System.ArgumentNullException" vsli:raw="&lt;paramref name=&quot;manager&quot; /&gt;, &lt;paramref name=&quot;value&quot; /&gt;, or &lt;paramref name=&quot;statements&quot; /&gt; is &lt;see langword=&quot;null&quot; /&gt;.">
        <paramref name="manager" />、<paramref name="value" /> 或 <paramref name="statements" /> 為 <see langword="null" />。</exception>
    </member>
    <member name="M:System.ComponentModel.Design.Serialization.CodeDomSerializerBase.SerializePropertiesToResources(System.ComponentModel.Design.Serialization.IDesignerSerializationManager,System.CodeDom.CodeStatementCollection,System.Object,System.Attribute[])">
      <summary vsli:raw="Serializes the properties on the given object into the invariant culture's resource bundle.">將指定物件上的屬性序列化為不因文化特性而異的資源配套。</summary>
      <param name="manager" vsli:raw="The &lt;see cref=&quot;T:System.ComponentModel.Design.Serialization.IDesignerSerializationManager&quot; /&gt; to use for serialization.">供序列化使用的 <see cref="T:System.ComponentModel.Design.Serialization.IDesignerSerializationManager" />。</param>
      <param name="statements" vsli:raw="Not used.">未使用。</param>
      <param name="value" vsli:raw="The object whose properties will be serialized.">要將其屬性序列化的物件。</param>
      <param name="filter" vsli:raw="An &lt;see cref=&quot;T:System.Attribute&quot; /&gt; array that filters which properties will be serialized.">
        <see cref="T:System.Attribute" /> 陣列，可篩選要進行序列化的屬性。</param>
      <exception cref="T:System.ArgumentNullException" vsli:raw="&lt;paramref name=&quot;manager&quot; /&gt;, &lt;paramref name=&quot;value&quot; /&gt;, or &lt;paramref name=&quot;statements&quot; /&gt; is &lt;see langword=&quot;null&quot; /&gt;.">
        <paramref name="manager" />、<paramref name="value" /> 或 <paramref name="statements" /> 為 <see langword="null" />。</exception>
    </member>
    <member name="M:System.ComponentModel.Design.Serialization.CodeDomSerializerBase.SerializeProperty(System.ComponentModel.Design.Serialization.IDesignerSerializationManager,System.CodeDom.CodeStatementCollection,System.Object,System.ComponentModel.PropertyDescriptor)">
      <summary vsli:raw="Serializes a property on the given object.">將指定物件上的屬性序列化。</summary>
      <param name="manager" vsli:raw="The &lt;see cref=&quot;T:System.ComponentModel.Design.Serialization.IDesignerSerializationManager&quot; /&gt; to use for serialization.">供序列化使用的 <see cref="T:System.ComponentModel.Design.Serialization.IDesignerSerializationManager" />。</param>
      <param name="statements" vsli:raw="The &lt;see cref=&quot;T:System.CodeDom.CodeStatementCollection&quot; /&gt; into which the property will be serialized.">屬性將序列化為的 <see cref="T:System.CodeDom.CodeStatementCollection" />。</param>
      <param name="value" vsli:raw="The object on which the property will be serialized.">屬性將在其上序列化的物件。</param>
      <param name="propertyToSerialize" vsli:raw="The property to serialize.">要序列化的屬性。</param>
      <exception cref="T:System.ArgumentNullException" vsli:raw="&lt;paramref name=&quot;manager&quot; /&gt;, &lt;paramref name=&quot;value&quot; /&gt;, &lt;paramref name=&quot;statements&quot; /&gt;, or &lt;paramref name=&quot;propertyToSerialize&quot; /&gt; is &lt;see langword=&quot;null&quot; /&gt;.">
        <paramref name="manager" />、<paramref name="value" />、<paramref name="statements" /> 或 <paramref name="propertyToSerialize" /> 為 <see langword="null" />。</exception>
    </member>
    <member name="M:System.ComponentModel.Design.Serialization.CodeDomSerializerBase.SerializeResource(System.ComponentModel.Design.Serialization.IDesignerSerializationManager,System.String,System.Object)">
      <summary vsli:raw="Serializes the given object into a resource bundle using the given resource name.">將指定的物件序列化為使用指定資源名稱的資源配套。</summary>
      <param name="manager" vsli:raw="The &lt;see cref=&quot;T:System.ComponentModel.Design.Serialization.IDesignerSerializationManager&quot; /&gt; to use for serialization.">供序列化使用的 <see cref="T:System.ComponentModel.Design.Serialization.IDesignerSerializationManager" />。</param>
      <param name="resourceName" vsli:raw="The name of the resource bundle into which &lt;paramref name=&quot;value&quot; /&gt; will be serialized.">要將 <paramref name="value" /> 序列化為的資源配套名稱。</param>
      <param name="value" vsli:raw="The object to serialize.">要序列化的物件。</param>
    </member>
    <member name="M:System.ComponentModel.Design.Serialization.CodeDomSerializerBase.SerializeResourceInvariant(System.ComponentModel.Design.Serialization.IDesignerSerializationManager,System.String,System.Object)">
      <summary vsli:raw="Serializes the given object into a resource bundle using the given resource name.">將指定的物件序列化為使用指定資源名稱的資源配套。</summary>
      <param name="manager" vsli:raw="The &lt;see cref=&quot;T:System.ComponentModel.Design.Serialization.IDesignerSerializationManager&quot; /&gt; to use for serialization.">供序列化使用的 <see cref="T:System.ComponentModel.Design.Serialization.IDesignerSerializationManager" />。</param>
      <param name="resourceName" vsli:raw="The name of the resource bundle into which &lt;paramref name=&quot;value&quot; /&gt; will be serialized.">要將 <paramref name="value" /> 序列化為的資源配套名稱。</param>
      <param name="value" vsli:raw="The object to serialize.">要序列化的物件。</param>
    </member>
    <member name="M:System.ComponentModel.Design.Serialization.CodeDomSerializerBase.SerializeToExpression(System.ComponentModel.Design.Serialization.IDesignerSerializationManager,System.Object)">
      <summary vsli:raw="Serializes the given object into an expression.">將指定的物件序列化為運算式。</summary>
      <param name="manager" vsli:raw="The &lt;see cref=&quot;T:System.ComponentModel.Design.Serialization.IDesignerSerializationManager&quot; /&gt; to use for serialization.">供序列化使用的 <see cref="T:System.ComponentModel.Design.Serialization.IDesignerSerializationManager" />。</param>
      <param name="value" vsli:raw="The object to serialize. Can be &lt;see langword=&quot;null&quot; /&gt;.">要序列化的物件。 可以是 <see langword="null" />。</param>
      <exception cref="T:System.ArgumentNullException" vsli:raw="&lt;paramref name=&quot;manager&quot; /&gt; is &lt;see langword=&quot;null&quot; /&gt;.">
        <paramref name="manager" /> 為 <see langword="null" />。</exception>
      <returns vsli:raw="A &lt;see cref=&quot;T:System.CodeDom.CodeExpression&quot; /&gt; object if &lt;paramref name=&quot;value&quot; /&gt; can be serialized; otherwise, &lt;see langword=&quot;null&quot; /&gt;.">如果可以序列化 <paramref name="value" /> 則為 <see cref="T:System.CodeDom.CodeExpression" /> 物件，否則為 <see langword="null" />。</returns>
    </member>
    <member name="M:System.ComponentModel.Design.Serialization.CodeDomSerializerBase.SerializeToResourceExpression(System.ComponentModel.Design.Serialization.IDesignerSerializationManager,System.Object)">
      <summary vsli:raw="Serializes the given object into an expression.">將指定的物件序列化為運算式。</summary>
      <param name="manager" vsli:raw="The &lt;see cref=&quot;T:System.ComponentModel.Design.Serialization.IDesignerSerializationManager&quot; /&gt; to use for serialization.">供序列化使用的 <see cref="T:System.ComponentModel.Design.Serialization.IDesignerSerializationManager" />。</param>
      <param name="value" vsli:raw="The object to serialize.">要序列化的物件。</param>
      <exception cref="T:System.ArgumentNullException" vsli:raw="&lt;paramref name=&quot;manager&quot; /&gt; is &lt;see langword=&quot;null&quot; /&gt;.">
        <paramref name="manager" /> 為 <see langword="null" />。</exception>
      <returns vsli:raw="A &lt;see cref=&quot;T:System.CodeDom.CodeExpression&quot; /&gt; containing &lt;paramref name=&quot;value&quot; /&gt; as a serialized expression.">
        <see cref="T:System.CodeDom.CodeExpression" />，含有做為已序列化運算式的 <paramref name="value" />。</returns>
    </member>
    <member name="M:System.ComponentModel.Design.Serialization.CodeDomSerializerBase.SerializeToResourceExpression(System.ComponentModel.Design.Serialization.IDesignerSerializationManager,System.Object,System.Boolean)">
      <summary vsli:raw="Serializes the given object into an expression appropriate for the invariant culture.">將指定的物件序列化為適於不因文化特性而異的運算式。</summary>
      <param name="manager" vsli:raw="The &lt;see cref=&quot;T:System.ComponentModel.Design.Serialization.IDesignerSerializationManager&quot; /&gt; to use for serialization.">供序列化使用的 <see cref="T:System.ComponentModel.Design.Serialization.IDesignerSerializationManager" />。</param>
      <param name="value" vsli:raw="The object to serialize.">要序列化的物件。</param>
      <param name="ensureInvariant" vsli:raw="&lt;see langword=&quot;true&quot; /&gt; to serialize into the invariant culture; otherwise, &lt;see langword=&quot;false&quot; /&gt;.">
        <see langword="true" /> 表示序列化為不因文化特性而異，否則為 <see langword="false" />。</param>
      <exception cref="T:System.ArgumentNullException" vsli:raw="&lt;paramref name=&quot;manager&quot; /&gt; is &lt;see langword=&quot;null&quot; /&gt;.">
        <paramref name="manager" /> 為 <see langword="null" />。</exception>
      <returns vsli:raw="A &lt;see cref=&quot;T:System.CodeDom.CodeExpression&quot; /&gt; containing &lt;paramref name=&quot;value&quot; /&gt; as a serialized expression.">
        <see cref="T:System.CodeDom.CodeExpression" />，含有做為已序列化運算式的 <paramref name="value" />。</returns>
    </member>
    <member name="M:System.ComponentModel.Design.Serialization.CodeDomSerializerBase.SetExpression(System.ComponentModel.Design.Serialization.IDesignerSerializationManager,System.Object,System.CodeDom.CodeExpression)">
      <summary vsli:raw="Associates an object with an expression.">建立物件與運算式的關聯。</summary>
      <param name="manager" vsli:raw="The &lt;see cref=&quot;T:System.ComponentModel.Design.Serialization.IDesignerSerializationManager&quot; /&gt; to use for serialization.">供序列化使用的 <see cref="T:System.ComponentModel.Design.Serialization.IDesignerSerializationManager" />。</param>
      <param name="value" vsli:raw="The object to serialize.">要序列化的物件。</param>
      <param name="expression" vsli:raw="The &lt;see cref=&quot;T:System.CodeDom.CodeExpression&quot; /&gt; with which to associate &lt;paramref name=&quot;value&quot; /&gt;.">要與 <paramref name="value" /> 相關聯的 <see cref="T:System.CodeDom.CodeExpression" />。</param>
      <exception cref="T:System.ArgumentNullException" vsli:raw="&lt;paramref name=&quot;manager&quot; /&gt;, &lt;paramref name=&quot;value&quot; /&gt;, or &lt;paramref name=&quot;expression&quot; /&gt; is &lt;see langword=&quot;null&quot; /&gt;.">
        <paramref name="manager" />、<paramref name="value" /> 或 <paramref name="expression" /> 為 <see langword="null" />。</exception>
    </member>
    <member name="M:System.ComponentModel.Design.Serialization.CodeDomSerializerBase.SetExpression(System.ComponentModel.Design.Serialization.IDesignerSerializationManager,System.Object,System.CodeDom.CodeExpression,System.Boolean)">
      <summary vsli:raw="Associates an object with an expression, optionally specifying a preset expression.">使物件與運算式產生關聯，也可以指定一個預設的運算式。</summary>
      <param name="manager" vsli:raw="The &lt;see cref=&quot;T:System.ComponentModel.Design.Serialization.IDesignerSerializationManager&quot; /&gt; to use for serialization.">供序列化使用的 <see cref="T:System.ComponentModel.Design.Serialization.IDesignerSerializationManager" />。</param>
      <param name="value" vsli:raw="The object to serialize.">要序列化的物件。</param>
      <param name="expression" vsli:raw="The &lt;see cref=&quot;T:System.CodeDom.CodeExpression&quot; /&gt; with which to associate &lt;paramref name=&quot;value&quot; /&gt;.">要與 <paramref name="value" /> 相關聯的 <see cref="T:System.CodeDom.CodeExpression" />。</param>
      <param name="isPreset" vsli:raw="&lt;see langword=&quot;true&quot; /&gt; to specify a preset expression; otherwise, &lt;see langword=&quot;false&quot; /&gt;.">
        <see langword="true" /> 表示指定預設運算式，否則為 <see langword="false" />。</param>
    </member>
    <member name="T:System.ComponentModel.Design.Serialization.CodeDomSerializerException">
      <summary vsli:raw="The exception that is thrown when line number information is available for a serialization error.">序列化錯誤可取得行號資訊時所擲回的例外狀況。</summary>
    </member>
    <member name="M:System.ComponentModel.Design.Serialization.CodeDomSerializerException.#ctor(System.Exception,System.CodeDom.CodeLinePragma)">
      <summary vsli:raw="Initializes a new instance of the &lt;see cref=&quot;T:System.ComponentModel.Design.Serialization.CodeDomSerializerException&quot; /&gt; class using the specified exception and line information.">使用指定的例外狀況和行資訊，初始化 <see cref="T:System.ComponentModel.Design.Serialization.CodeDomSerializerException" /> 類別的新執行個體。</summary>
      <param name="ex" vsli:raw="The exception to throw.">要擲回的例外狀況。</param>
      <param name="linePragma" vsli:raw="A &lt;see cref=&quot;T:System.CodeDom.CodeLinePragma&quot; /&gt; that indicates where the exception occurred.">
        <see cref="T:System.CodeDom.CodeLinePragma" />，表示例外狀況發生在何處。</param>
    </member>
    <member name="M:System.ComponentModel.Design.Serialization.CodeDomSerializerException.#ctor(System.Exception,System.ComponentModel.Design.Serialization.IDesignerSerializationManager)">
      <summary vsli:raw="Initializes a new instance of the &lt;see cref=&quot;T:System.ComponentModel.Design.Serialization.CodeDomSerializerException&quot; /&gt; class.">初始化 <see cref="T:System.ComponentModel.Design.Serialization.CodeDomSerializerException" /> 類別的新執行個體。</summary>
      <param name="ex" vsli:raw="The exception to throw.">要擲回的例外狀況。</param>
      <param name="manager" vsli:raw="The &lt;see cref=&quot;T:System.ComponentModel.Design.Serialization.IDesignerSerializationManager&quot; /&gt; object from which to extract the context.">要從中取出內容的 <see cref="T:System.ComponentModel.Design.Serialization.IDesignerSerializationManager" /> 物件。</param>
      <exception cref="T:System.ArgumentNullException" vsli:raw="&lt;paramref name=&quot;Manager&quot; /&gt; is &lt;see langword=&quot;null&quot; /&gt;.">
        <paramref name="Manager" /> 為 <see langword="null" />。</exception>
    </member>
    <member name="M:System.ComponentModel.Design.Serialization.CodeDomSerializerException.#ctor(System.String,System.CodeDom.CodeLinePragma)">
      <summary vsli:raw="Initializes a new instance of the &lt;see cref=&quot;T:System.ComponentModel.Design.Serialization.CodeDomSerializerException&quot; /&gt; class using the specified message and line information.">使用指定的訊息和行資訊，初始化 <see cref="T:System.ComponentModel.Design.Serialization.CodeDomSerializerException" /> 類別的新執行個體。</summary>
      <param name="message" vsli:raw="A message describing the exception.">描述例外狀況的訊息。</param>
      <param name="linePragma" vsli:raw="A &lt;see cref=&quot;T:System.CodeDom.CodeLinePragma&quot; /&gt; that indicates where the exception occurred.">
        <see cref="T:System.CodeDom.CodeLinePragma" />，表示例外狀況發生在何處。</param>
    </member>
    <member name="M:System.ComponentModel.Design.Serialization.CodeDomSerializerException.#ctor(System.String,System.ComponentModel.Design.Serialization.IDesignerSerializationManager)">
      <summary vsli:raw="Initializes a new instance of the &lt;see cref=&quot;T:System.ComponentModel.Design.Serialization.CodeDomSerializerException&quot; /&gt; class.">初始化 <see cref="T:System.ComponentModel.Design.Serialization.CodeDomSerializerException" /> 類別的新執行個體。</summary>
      <param name="message" vsli:raw="A message describing the exception.">描述例外狀況的訊息。</param>
      <param name="manager" vsli:raw="The &lt;see cref=&quot;T:System.ComponentModel.Design.Serialization.IDesignerSerializationManager&quot; /&gt; object from which to extract the context.">要從中取出內容的 <see cref="T:System.ComponentModel.Design.Serialization.IDesignerSerializationManager" /> 物件。</param>
      <exception cref="T:System.ArgumentNullException" vsli:raw="&lt;paramref name=&quot;Manager&quot; /&gt; is &lt;see langword=&quot;null&quot; /&gt;.">
        <paramref name="Manager" /> 為 <see langword="null" />。</exception>
    </member>
    <member name="M:System.ComponentModel.Design.Serialization.CodeDomSerializerException.GetObjectData(System.Runtime.Serialization.SerializationInfo,System.Runtime.Serialization.StreamingContext)">
      <summary vsli:raw="Sets the &lt;see cref=&quot;T:System.Runtime.Serialization.SerializationInfo&quot; /&gt; object with the parameter name and additional exception information.">設定具有參數名稱和額外例外狀況資訊的 <see cref="T:System.Runtime.Serialization.SerializationInfo" /> 物件。</summary>
      <param name="info" vsli:raw="Stores the data that was being used to serialize or deserialize the object that the &lt;see cref=&quot;T:System.ComponentModel.Design.Serialization.CodeDomSerializer&quot; /&gt; was serializing or deserializing.">儲存曾經用於序列化或還原序列化物件的資料，此物件正由 <see cref="T:System.ComponentModel.Design.Serialization.CodeDomSerializer" /> 序列化或還原序列化。</param>
      <param name="context" vsli:raw="Describes the source and destination of the stream that generated the exception, as well as a means for serialization to retain that context and an additional caller-defined context.">描述已產生例外狀況 (Exception) 之資料流的來源和目的端，和讓序列化保留該內容和額外的呼叫端定義內容的方式。</param>
      <exception cref="T:System.ArgumentNullException" vsli:raw="The &lt;paramref name=&quot;info&quot; /&gt; parameter is &lt;see langword=&quot;null&quot; /&gt;.">
        <paramref name="info" /> 參數為 <see langword="null" />。</exception>
    </member>
    <member name="P:System.ComponentModel.Design.Serialization.CodeDomSerializerException.LinePragma">
      <summary vsli:raw="Gets or sets the line information for the error associated with this exception.">取得或設定與這個例外狀況相關錯誤的行資訊。</summary>
      <returns vsli:raw="A &lt;see cref=&quot;T:System.CodeDom.CodeLinePragma&quot; /&gt; that indicates the line information for the error.">
        <see cref="T:System.CodeDom.CodeLinePragma" />，表示錯誤的行資訊。</returns>
    </member>
    <member name="T:System.ComponentModel.Design.Serialization.CollectionCodeDomSerializer">
      <summary vsli:raw="Serializes collections.">序列化集合。</summary>
    </member>
    <member name="M:System.ComponentModel.Design.Serialization.CollectionCodeDomSerializer.#ctor">
      <summary vsli:raw="Initializes a new instance of the &lt;see cref=&quot;T:System.ComponentModel.Design.Serialization.CollectionCodeDomSerializer&quot; /&gt; class.">初始化 <see cref="T:System.ComponentModel.Design.Serialization.CollectionCodeDomSerializer" /> 類別的新執行個體。</summary>
    </member>
    <member name="M:System.ComponentModel.Design.Serialization.CollectionCodeDomSerializer.MethodSupportsSerialization(System.Reflection.MethodInfo)">
      <summary vsli:raw="Verifies serialization support by the &lt;paramref name=&quot;method&quot; /&gt;.">驗證 <paramref name="method" /> 支援的序列化。</summary>
      <param name="method" vsli:raw="The &lt;see cref=&quot;T:System.Reflection.MethodInfo&quot; /&gt; to check for serialization attributes.">用於檢查序列化屬性的 <see cref="T:System.Reflection.MethodInfo" />。</param>
      <exception cref="T:System.ArgumentNullException" vsli:raw="&lt;paramref name=&quot;method&quot; /&gt; is &lt;see langword=&quot;null&quot; /&gt;.">
        <paramref name="method" /> 為 <see langword="null" />。</exception>
      <returns vsli:raw="&lt;see langword=&quot;true&quot; /&gt; if the &lt;paramref name=&quot;method&quot; /&gt; supports serialization; otherwise, &lt;see langword=&quot;false&quot; /&gt;.">如果 <paramref name="method" /> 支援序列化，則為 <see langword="true" />，否則為 <see langword="false" />。</returns>
    </member>
    <member name="M:System.ComponentModel.Design.Serialization.CollectionCodeDomSerializer.Serialize(System.ComponentModel.Design.Serialization.IDesignerSerializationManager,System.Object)">
      <summary vsli:raw="Serializes the given collection into a CodeDOM object.">將指定集合序列化為 CodeDOM 物件。</summary>
      <param name="manager" vsli:raw="The &lt;see cref=&quot;T:System.ComponentModel.Design.Serialization.IDesignerSerializationManager&quot; /&gt; to use during serialization.">供序列化期間使用的 <see cref="T:System.ComponentModel.Design.Serialization.IDesignerSerializationManager" />。</param>
      <param name="value" vsli:raw="The object to serialize.">要序列化的物件。</param>
      <exception cref="T:System.ArgumentNullException" vsli:raw="&lt;paramref name=&quot;manager&quot; /&gt; or &lt;paramref name=&quot;value&quot; /&gt; is &lt;see langword=&quot;null&quot; /&gt;.">
        <paramref name="manager" /> 或 <paramref name="value" /> 為 <see langword="null" />。</exception>
      <returns vsli:raw="A CodeDOM object representing &lt;paramref name=&quot;value&quot; /&gt;.">表示 <paramref name="value" /> 的 CodeDom 物件。</returns>
    </member>
    <member name="M:System.ComponentModel.Design.Serialization.CollectionCodeDomSerializer.SerializeCollection(System.ComponentModel.Design.Serialization.IDesignerSerializationManager,System.CodeDom.CodeExpression,System.Type,System.Collections.ICollection,System.Collections.ICollection)">
      <summary vsli:raw="Serializes the given collection.">將指定的集合序列化。</summary>
      <param name="manager" vsli:raw="The &lt;see cref=&quot;T:System.ComponentModel.Design.Serialization.IDesignerSerializationManager&quot; /&gt; to use during serialization.">供序列化期間使用的 <see cref="T:System.ComponentModel.Design.Serialization.IDesignerSerializationManager" />。</param>
      <param name="targetExpression" vsli:raw="The &lt;see cref=&quot;T:System.CodeDom.CodeExpression&quot; /&gt; that refers to the collection.">
        <see cref="T:System.CodeDom.CodeExpression" />，其參考集合</param>
      <param name="targetType" vsli:raw="The &lt;see cref=&quot;T:System.Type&quot; /&gt; of the collection.">集合的 <see cref="T:System.Type" />。</param>
      <param name="originalCollection" vsli:raw="The collection to serialize.">要序列化的集合。</param>
      <param name="valuesToSerialize" vsli:raw="The values to serialize.">要序列化的值。</param>
      <exception cref="T:System.ArgumentNullException" vsli:raw="&lt;paramref name=&quot;manager&quot; /&gt;, &lt;paramref name=&quot;targetType&quot; /&gt;, &lt;paramref name=&quot;originalCollection&quot; /&gt;, or &lt;paramref name=&quot;valuesToSerialize&quot; /&gt; is &lt;see langword=&quot;null&quot; /&gt;.">
        <paramref name="manager" />、<paramref name="targetType" />、<paramref name="originalCollection" /> 或 <paramref name="valuesToSerialize" /> 為 <see langword="null" />。</exception>
      <returns vsli:raw="Serialized collection if the serialization process succeeded; otherwise, &lt;see langword=&quot;null&quot; /&gt;.">如果序列化程序成功，則將集合序列化；否則為 <see langword="null" />。</returns>
    </member>
    <member name="T:System.ComponentModel.Design.Serialization.DesignerSerializationManager">
      <summary vsli:raw="Provides an implementation of the &lt;see cref=&quot;T:System.ComponentModel.Design.Serialization.IDesignerSerializationManager&quot; /&gt; interface.">提供 <see cref="T:System.ComponentModel.Design.Serialization.IDesignerSerializationManager" /> 介面的實作。</summary>
    </member>
    <member name="E:System.ComponentModel.Design.Serialization.DesignerSerializationManager.SessionCreated">
      <summary vsli:raw="Occurs when a session is created.">發生於工作階段建立時。</summary>
    </member>
    <member name="E:System.ComponentModel.Design.Serialization.DesignerSerializationManager.SessionDisposed">
      <summary vsli:raw="Occurs when a session is disposed.">發生於處置工作階段時。</summary>
    </member>
    <member name="E:System.ComponentModel.Design.Serialization.DesignerSerializationManager.System#ComponentModel#Design#Serialization#IDesignerSerializationManager#ResolveName">
      <summary vsli:raw="Occurs when &lt;see cref=&quot;M:System.ComponentModel.Design.Serialization.DesignerSerializationManager.System#ComponentModel#Design#Serialization#IDesignerSerializationManager#GetName(System.Object)&quot; /&gt; cannot locate the specified name in the serialization manager's name table.">於 <see cref="M:System.ComponentModel.Design.Serialization.DesignerSerializationManager.System#ComponentModel#Design#Serialization#IDesignerSerializationManager#GetName(System.Object)" /> 無法在序列化管理員的名稱表格中找到指定的名稱時發生。</summary>
      <exception cref="T:System.InvalidOperationException" vsli:raw="The serialization manager does not have an active serialization session.">序列化管理員沒有使用中的序列化工作階段。</exception>
    </member>
    <member name="E:System.ComponentModel.Design.Serialization.DesignerSerializationManager.System#ComponentModel#Design#Serialization#IDesignerSerializationManager#SerializationComplete">
      <summary vsli:raw="Occurs when serialization is complete.">於序列化完成時發生。</summary>
      <exception cref="T:System.InvalidOperationException" vsli:raw="The serialization manager does not have an active serialization session.">序列化管理員沒有使用中的序列化工作階段。</exception>
    </member>
    <member name="M:System.ComponentModel.Design.Serialization.DesignerSerializationManager.#ctor">
      <summary vsli:raw="Initializes a new instance of the &lt;see cref=&quot;T:System.ComponentModel.Design.Serialization.DesignerSerializationManager&quot; /&gt; class.">初始化 <see cref="T:System.ComponentModel.Design.Serialization.DesignerSerializationManager" /> 類別的新執行個體。</summary>
    </member>
    <member name="M:System.ComponentModel.Design.Serialization.DesignerSerializationManager.#ctor(System.IServiceProvider)">
      <summary vsli:raw="Initializes a new instance of the &lt;see cref=&quot;T:System.ComponentModel.Design.Serialization.DesignerSerializationManager&quot; /&gt; class with the given service provider.">使用指定的服務提供者，初始化 <see cref="T:System.ComponentModel.Design.Serialization.DesignerSerializationManager" /> 類別的新執行個體。</summary>
      <param name="provider" vsli:raw="An &lt;see cref=&quot;T:System.IServiceProvider&quot; /&gt;.">
        <see cref="T:System.IServiceProvider" />。</param>
      <exception cref="T:System.ArgumentNullException" vsli:raw="&lt;paramref name=&quot;provider&quot; /&gt; is &lt;see langword=&quot;null&quot; /&gt;.">
        <paramref name="provider" /> 為 <see langword="null" />。</exception>
    </member>
    <member name="M:System.ComponentModel.Design.Serialization.DesignerSerializationManager.CreateInstance(System.Type,System.Collections.ICollection,System.String,System.Boolean)">
      <summary vsli:raw="Creates an instance of a type.">建立型別的執行個體。</summary>
      <param name="type" vsli:raw="The type to create an instance of.">要建立其執行個體的型別。</param>
      <param name="arguments" vsli:raw="The parameters of the type's constructor. This can be &lt;see langword=&quot;null&quot; /&gt; or an empty collection to invoke the parameterless constructor.">類型建構函式的參數。 可以是 <see langword="null" />，或是一個空集合以叫用無參數建構函式。</param>
      <param name="name" vsli:raw="A name to give the object. If &lt;see langword=&quot;null&quot; /&gt;, the object will not be given a name, unless the object is added to a container and the container gives the object a name.">提供給物件的名稱。 如果為 <see langword="null" />，則不會為物件提供名稱，除非已將物件加入容器且容器提供了物件名稱。</param>
      <param name="addToContainer" vsli:raw="&lt;see langword=&quot;true&quot; /&gt; to add the object to the container if the object implements &lt;see cref=&quot;T:System.ComponentModel.IComponent&quot; /&gt;; otherwise, &lt;see langword=&quot;false&quot; /&gt;.">
        <see langword="true" /> 表示物件實作 <see cref="T:System.ComponentModel.IComponent" /> 時將物件加入容器，否則為 <see langword="false" />。</param>
      <exception cref="T:System.Runtime.Serialization.SerializationException" vsli:raw="&lt;paramref name=&quot;type&quot; /&gt; does not have a constructor that takes parameters contained in &lt;paramref name=&quot;arguments&quot; /&gt;.">
        <paramref name="type" /> 沒有使用 <paramref name="arguments" /> 中所包含之參數的建構函式。</exception>
      <returns vsli:raw="A new instance of the type specified by &lt;paramref name=&quot;type&quot; /&gt;.">
        <paramref name="type" /> 指定之型別的新執行個體。</returns>
    </member>
    <member name="M:System.ComponentModel.Design.Serialization.DesignerSerializationManager.CreateSession">
      <summary vsli:raw="Creates a new serialization session.">建立新的序列化工作階段。</summary>
      <exception cref="T:System.InvalidOperationException" vsli:raw="The serialization manager is already within a session. This version of &lt;see cref=&quot;T:System.ComponentModel.Design.Serialization.DesignerSerializationManager&quot; /&gt; does not support simultaneous sessions.">序列化管理員已處於工作階段中。 這個版本的 <see cref="T:System.ComponentModel.Design.Serialization.DesignerSerializationManager" /> 不支援同時執行的工作階段。</exception>
      <returns vsli:raw="An &lt;see cref=&quot;T:System.IDisposable&quot; /&gt; that represents a new serialization session.">表示新序列化工作階段的 <see cref="T:System.IDisposable" />。</returns>
    </member>
    <member name="M:System.ComponentModel.Design.Serialization.DesignerSerializationManager.GetRuntimeType(System.String)">
      <summary vsli:raw="Gets the type corresponding to the specified type name.">取得對應到指定型別名稱的型別。</summary>
      <param name="typeName" vsli:raw="The name of the type to get.">要取得之類型的名稱。</param>
      <returns vsli:raw="The specified type.">指定的型別。</returns>
    </member>
    <member name="M:System.ComponentModel.Design.Serialization.DesignerSerializationManager.GetSerializer(System.Type,System.Type)">
      <summary vsli:raw="Gets the serializer for the given object type.">取得指定物件型別的序列化程式。</summary>
      <param name="objectType" vsli:raw="The type of object for which to retrieve the serializer.">為其擷取序列化程式的物件型別。</param>
      <param name="serializerType" vsli:raw="The type of serializer to retrieve.">要擷取的序列化程式型別。</param>
      <exception cref="T:System.ArgumentNullException" vsli:raw="&lt;paramref name=&quot;objectType&quot; /&gt; or &lt;paramref name=&quot;serializerType&quot; /&gt; is &lt;see langword=&quot;null&quot; /&gt;.">
        <paramref name="objectType" /> 或 <paramref name="serializerType" /> 為 <see langword="null" />。</exception>
      <returns vsli:raw="The serializer for &lt;paramref name=&quot;objectType&quot; /&gt;, or &lt;see langword=&quot;null&quot; /&gt;, if not found.">
        <paramref name="objectType" /> 的序列化程式，如果找不到則為 <see langword="null" />。</returns>
    </member>
    <member name="M:System.ComponentModel.Design.Serialization.DesignerSerializationManager.GetService(System.Type)">
      <summary vsli:raw="Gets the requested service.">取得所要求的服務。</summary>
      <param name="serviceType" vsli:raw="The type of service to retrieve.">要擷取的服務類型。</param>
      <returns vsli:raw="The requested service, or &lt;see langword=&quot;null&quot; /&gt; if the service cannot be resolved.">要求的服務，如果無法解析服務則為 <see langword="null" />。</returns>
    </member>
    <member name="M:System.ComponentModel.Design.Serialization.DesignerSerializationManager.GetType(System.String)">
      <summary vsli:raw="Gets the requested type.">取得要求的型別。</summary>
      <param name="typeName" vsli:raw="The name of the type to retrieve.">要擷取的型別名稱。</param>
      <returns vsli:raw="The requested type, or &lt;see langword=&quot;null&quot; /&gt; if the type cannot be resolved.">要求的型別，如果無法解析型別則為 <see langword="null" />。</returns>
    </member>
    <member name="M:System.ComponentModel.Design.Serialization.DesignerSerializationManager.OnResolveName(System.ComponentModel.Design.Serialization.ResolveNameEventArgs)">
      <summary vsli:raw="Raises the &lt;see cref=&quot;E:System.ComponentModel.Design.Serialization.IDesignerSerializationManager.ResolveName&quot; /&gt; event.">引發 <see cref="E:System.ComponentModel.Design.Serialization.IDesignerSerializationManager.ResolveName" /> 事件。</summary>
      <param name="e" vsli:raw="A &lt;see cref=&quot;T:System.ComponentModel.Design.Serialization.ResolveNameEventArgs&quot; /&gt; that contains the event data.">
        <see cref="T:System.ComponentModel.Design.Serialization.ResolveNameEventArgs" />，其中包含事件資料。</param>
    </member>
    <member name="M:System.ComponentModel.Design.Serialization.DesignerSerializationManager.OnSessionCreated(System.EventArgs)">
      <summary vsli:raw="Raises the &lt;see cref=&quot;E:System.ComponentModel.Design.Serialization.DesignerSerializationManager.SessionCreated&quot; /&gt; event.">引發 <see cref="E:System.ComponentModel.Design.Serialization.DesignerSerializationManager.SessionCreated" /> 事件。</summary>
      <param name="e" vsli:raw="An &lt;see cref=&quot;T:System.EventArgs&quot; /&gt; that contains the event data.">包含事件資料的 <see cref="T:System.EventArgs" />。</param>
    </member>
    <member name="M:System.ComponentModel.Design.Serialization.DesignerSerializationManager.OnSessionDisposed(System.EventArgs)">
      <summary vsli:raw="Raises the &lt;see cref=&quot;E:System.ComponentModel.Design.Serialization.DesignerSerializationManager.SessionDisposed&quot; /&gt; event.">引發 <see cref="E:System.ComponentModel.Design.Serialization.DesignerSerializationManager.SessionDisposed" /> 事件。</summary>
      <param name="e" vsli:raw="An &lt;see cref=&quot;T:System.EventArgs&quot; /&gt; that contains the event data.">包含事件資料的 <see cref="T:System.EventArgs" />。</param>
    </member>
    <member name="M:System.ComponentModel.Design.Serialization.DesignerSerializationManager.System#ComponentModel#Design#Serialization#IDesignerSerializationManager#AddSerializationProvider(System.ComponentModel.Design.Serialization.IDesignerSerializationProvider)">
      <summary vsli:raw="Adds a custom serialization provider to the serialization manager.">將自訂序列化提供者加入序列化管理員。</summary>
      <param name="provider" vsli:raw="The serialization provider to add.">要加入的序列化提供者。</param>
    </member>
    <member name="M:System.ComponentModel.Design.Serialization.DesignerSerializationManager.System#ComponentModel#Design#Serialization#IDesignerSerializationManager#CreateInstance(System.Type,System.Collections.ICollection,System.String,System.Boolean)">
      <summary vsli:raw="Implements the &lt;see cref=&quot;M:System.ComponentModel.Design.Serialization.IDesignerSerializationManager.CreateInstance(System.Type,System.Collections.ICollection,System.String,System.Boolean)&quot; /&gt; method.">實作 <see cref="M:System.ComponentModel.Design.Serialization.IDesignerSerializationManager.CreateInstance(System.Type,System.Collections.ICollection,System.String,System.Boolean)" /> 方法。</summary>
      <param name="type" vsli:raw="The data type to create.">要建立的資料型別。</param>
      <param name="arguments" vsli:raw="The arguments to pass to the constructor for this type.">要傳送給這個型別的建構函式的引數。</param>
      <param name="name" vsli:raw="The name of the object. This name can be used to access the object later through &lt;see cref=&quot;M:System.ComponentModel.Design.Serialization.IDesignerSerializationManager.GetInstance(System.String)&quot; /&gt;. If &lt;see langword=&quot;null&quot; /&gt; is passed, the object is still created but cannot be accessed by name.">物件的名稱。 之後便可經由 <see cref="M:System.ComponentModel.Design.Serialization.IDesignerSerializationManager.GetInstance(System.String)" />，用這個名稱存取物件。 如果傳遞的是 <see langword="null" />，物件還是可以建立，但是無法以名稱存取。</param>
      <param name="addToContainer" vsli:raw="&lt;see langword=&quot;true&quot; /&gt; to add this object to the design container. The object must implement &lt;see cref=&quot;T:System.ComponentModel.IComponent&quot; /&gt; for this to have any effect.">
        <see langword="true" /> 表示將這個物件加入設計容器。 物件必須實作 <see cref="T:System.ComponentModel.IComponent" />，才能發生效用。</param>
      <returns vsli:raw="The newly created object instance.">新建立的物件執行個體。</returns>
    </member>
    <member name="M:System.ComponentModel.Design.Serialization.DesignerSerializationManager.System#ComponentModel#Design#Serialization#IDesignerSerializationManager#GetInstance(System.String)">
      <summary vsli:raw="Retrieves an instance of a created object of the specified name.">擷取已建立物件具有指定名稱的執行個體。</summary>
      <param name="name" vsli:raw="The name of the object to retrieve.">所要擷取的物件名稱。</param>
      <exception cref="T:System.ArgumentNullException" vsli:raw="&lt;paramref name=&quot;name&quot; /&gt; is &lt;see langword=&quot;null&quot; /&gt;.">
        <paramref name="name" /> 為 <see langword="null" />。</exception>
      <exception cref="T:System.InvalidOperationException" vsli:raw="This property was accessed outside of a serialization session.">這個屬性從序列化工作階段外存取。</exception>
      <returns vsli:raw="An instance of the object with the given name, or &lt;see langword=&quot;null&quot; /&gt; if no object by that name can be found.">有指定名稱的物件的執行個體，或 <see langword="null" /> (如果找不到有該名稱的物件)。</returns>
    </member>
    <member name="M:System.ComponentModel.Design.Serialization.DesignerSerializationManager.System#ComponentModel#Design#Serialization#IDesignerSerializationManager#GetName(System.Object)">
      <summary vsli:raw="Retrieves a name for the specified object.">擷取指定物件的名稱。</summary>
      <param name="value" vsli:raw="The object for which to retrieve the name.">要為其擷取名稱的物件。</param>
      <exception cref="T:System.ArgumentNullException" vsli:raw="&lt;paramref name=&quot;value&quot; /&gt; is &lt;see langword=&quot;null&quot; /&gt;.">
        <paramref name="value" /> 為 <see langword="null" />。</exception>
      <exception cref="T:System.InvalidOperationException" vsli:raw="This property was accessed outside of a serialization session.">這個屬性從序列化工作階段外存取。</exception>
      <returns vsli:raw="The name of the object, or &lt;see langword=&quot;null&quot; /&gt; if the object is unnamed.">物件的名稱，或 <see langword="null" /> (如果物件未命名)。</returns>
    </member>
    <member name="M:System.ComponentModel.Design.Serialization.DesignerSerializationManager.System#ComponentModel#Design#Serialization#IDesignerSerializationManager#GetSerializer(System.Type,System.Type)">
      <summary vsli:raw="Gets a serializer of the requested type for the specified object type.">為指定的物件型別取得要求的型別的序列化工具。</summary>
      <param name="objectType" vsli:raw="The type of the object to get the serializer for.">要為其取得序列化工具的物件型別。</param>
      <param name="serializerType" vsli:raw="The type of the serializer to retrieve.">要擷取的序列化工具型別。</param>
      <returns vsli:raw="An instance of the requested serializer, or &lt;see langword=&quot;null&quot; /&gt; if no appropriate serializer can be located.">要求的序列化工具的執行個體，或 <see langword="null" /> (如果找不到適當的序列化工具)。</returns>
    </member>
    <member name="M:System.ComponentModel.Design.Serialization.DesignerSerializationManager.System#ComponentModel#Design#Serialization#IDesignerSerializationManager#GetType(System.String)">
      <summary vsli:raw="Gets a type of the specified name.">取得指定名稱的型別。</summary>
      <param name="typeName" vsli:raw="The fully qualified name of the type to load.">要載入型別的完整名稱。</param>
      <exception cref="T:System.InvalidOperationException" vsli:raw="This property was accessed outside of a serialization session.">這個屬性從序列化工作階段外存取。</exception>
      <returns vsli:raw="An instance of the type, or &lt;see langword=&quot;null&quot; /&gt; if the type cannot be loaded.">型別的執行個體，或 <see langword="null" /> (如果無法載入型別)。</returns>
    </member>
    <member name="M:System.ComponentModel.Design.Serialization.DesignerSerializationManager.System#ComponentModel#Design#Serialization#IDesignerSerializationManager#RemoveSerializationProvider(System.ComponentModel.Design.Serialization.IDesignerSerializationProvider)">
      <summary vsli:raw="Removes a previously added serialization provider.">移除之前加入的序列化提供者。</summary>
      <param name="provider" vsli:raw="The &lt;see cref=&quot;T:System.ComponentModel.Design.Serialization.IDesignerSerializationProvider&quot; /&gt; to remove.">要移除的 <see cref="T:System.ComponentModel.Design.Serialization.IDesignerSerializationProvider" />。</param>
    </member>
    <member name="M:System.ComponentModel.Design.Serialization.DesignerSerializationManager.System#ComponentModel#Design#Serialization#IDesignerSerializationManager#ReportError(System.Object)">
      <summary vsli:raw="Used to report a recoverable error in serialization.">用於報告序列化中的可修復錯誤。</summary>
      <param name="errorInformation" vsli:raw="An object containing the error information, usually of type &lt;see cref=&quot;T:System.String&quot; /&gt; or &lt;see cref=&quot;T:System.Exception&quot; /&gt;.">包含錯誤資訊的物件，通常為 <see cref="T:System.String" /> 或 <see cref="T:System.Exception" /> 型別。</param>
      <exception cref="T:System.InvalidOperationException" vsli:raw="This property was accessed outside of a serialization session.">這個屬性從序列化工作階段外存取。</exception>
    </member>
    <member name="M:System.ComponentModel.Design.Serialization.DesignerSerializationManager.System#ComponentModel#Design#Serialization#IDesignerSerializationManager#SetName(System.Object,System.String)">
      <summary vsli:raw="Sets the name for the specified object.">設定指定物件的名稱。</summary>
      <param name="instance" vsli:raw="The object to set the name.">要設定名稱的物件。</param>
      <param name="name" vsli:raw="A &lt;see cref=&quot;T:System.String&quot; /&gt; used as the name of the object.">用做物件名稱的 <see cref="T:System.String" />。</param>
      <exception cref="T:System.ArgumentNullException" vsli:raw="One or both of the parameters are &lt;see langword=&quot;null&quot; /&gt;.">其中一或二個參數都為 <see langword="null" />。</exception>
      <exception cref="T:System.ArgumentException" vsli:raw="The object specified by instance already has a name, or &lt;paramref name=&quot;name&quot; /&gt; is already used by another named object.">執行個體指定的物件已具有名稱，或 <paramref name="name" /> 已由其他具名物件使用。</exception>
      <exception cref="T:System.InvalidOperationException" vsli:raw="This property was accessed outside of a serialization session.">這個屬性從序列化工作階段外存取。</exception>
    </member>
    <member name="M:System.ComponentModel.Design.Serialization.DesignerSerializationManager.System#IServiceProvider#GetService(System.Type)">
      <summary vsli:raw="For a description of this member, see the &lt;see cref=&quot;M:System.IServiceProvider.GetService(System.Type)&quot; /&gt; method.">如需這個成員的描述，請參閱 <see cref="M:System.IServiceProvider.GetService(System.Type)" /> 方法。</summary>
      <param name="serviceType" vsli:raw="An object that specifies the type of service object to get.">物件，指定要取得的服務物件類型。</param>
      <returns vsli:raw="A service object of type &lt;paramref name=&quot;serviceType&quot; /&gt;.  &#xA;  &#xA; -or-  &#xA;  &#xA; &lt;see langword=&quot;null&quot; /&gt; if there is no service object of type &lt;paramref name=&quot;serviceType&quot; /&gt;.">型別 <paramref name="serviceType" /> 的服務物件。  
  
-或- 
 如果沒有 <paramref name="serviceType" /> 類型的服務物件，則為 <see langword="null" />。</returns>
    </member>
    <member name="P:System.ComponentModel.Design.Serialization.DesignerSerializationManager.Container">
      <summary vsli:raw="Gets or sets to the container for this serialization manager.">取得或設定這個序列化管理員的容器。</summary>
      <exception cref="T:System.InvalidOperationException" vsli:raw="The serialization manager has an active serialization session.">序列化管理員具有使用中的序列化工作階段。</exception>
      <returns vsli:raw="The &lt;see cref=&quot;T:System.ComponentModel.IContainer&quot; /&gt; to which the serialization manager will add components.">序列化管理員要加入元件的 <see cref="T:System.ComponentModel.IContainer" />。</returns>
    </member>
    <member name="P:System.ComponentModel.Design.Serialization.DesignerSerializationManager.Errors">
      <summary vsli:raw="Gets the list of errors that occurred during serialization or deserialization.">取得序列化或還原序列化期間發生的錯誤清單。</summary>
      <exception cref="T:System.InvalidOperationException" vsli:raw="This property was accessed outside of a serialization session.">這個屬性從序列化工作階段外存取。</exception>
      <returns vsli:raw="The list of errors that occurred during serialization or deserialization.">序列化或還原序列化期間發生的錯誤清單。</returns>
    </member>
    <member name="P:System.ComponentModel.Design.Serialization.DesignerSerializationManager.PreserveNames">
      <summary vsli:raw="Gets or sets a value indicating whether the &lt;see cref=&quot;M:System.ComponentModel.Design.Serialization.DesignerSerializationManager.CreateInstance(System.Type,System.Collections.ICollection,System.String,System.Boolean)&quot; /&gt; method should check for the presence of the given name in the container.">取得或設定值，指出是否 <see cref="M:System.ComponentModel.Design.Serialization.DesignerSerializationManager.CreateInstance(System.Type,System.Collections.ICollection,System.String,System.Boolean)" /> 方法應當檢查容器中指定名稱存在與否。</summary>
      <exception cref="T:System.InvalidOperationException" vsli:raw="This property was changed from within a serialization session.">這個屬性從序列化工作階段內變更。</exception>
      <returns vsli:raw="&lt;see langword=&quot;true&quot; /&gt; if &lt;see cref=&quot;M:System.ComponentModel.Design.Serialization.DesignerSerializationManager.CreateInstance(System.Type,System.Collections.ICollection,System.String,System.Boolean)&quot; /&gt; will pass the given component name; &lt;see langword=&quot;false&quot; /&gt; if &lt;see cref=&quot;M:System.ComponentModel.Design.Serialization.DesignerSerializationManager.CreateInstance(System.Type,System.Collections.ICollection,System.String,System.Boolean)&quot; /&gt; will check for the presence of the given name in the container. The default is &lt;see langword=&quot;true&quot; /&gt;.">如果 <see cref="M:System.ComponentModel.Design.Serialization.DesignerSerializationManager.CreateInstance(System.Type,System.Collections.ICollection,System.String,System.Boolean)" /> 傳遞指定的元件名稱，則為 <see langword="true" />，如果 <see cref="M:System.ComponentModel.Design.Serialization.DesignerSerializationManager.CreateInstance(System.Type,System.Collections.ICollection,System.String,System.Boolean)" /> 檢查容器中是否存在指定名稱，則為 <see langword="false" />。 預設為 <see langword="true" />。</returns>
    </member>
    <member name="P:System.ComponentModel.Design.Serialization.DesignerSerializationManager.PropertyProvider">
      <summary vsli:raw="Gets the object that should be used to provide properties to the serialization manager's &lt;see cref=&quot;P:System.ComponentModel.Design.Serialization.IDesignerSerializationManager.Properties&quot; /&gt; property.">取得物件，該物件應當用於為序列化管理員的 <see cref="P:System.ComponentModel.Design.Serialization.IDesignerSerializationManager.Properties" /> 屬性提供屬性。</summary>
      <returns vsli:raw="The object that should be used to provide properties to the serialization manager's &lt;see cref=&quot;P:System.ComponentModel.Design.Serialization.IDesignerSerializationManager.Properties&quot; /&gt; property.">應當用於為序列化管理員的 <see cref="P:System.ComponentModel.Design.Serialization.IDesignerSerializationManager.Properties" /> 屬性提供屬性的物件。</returns>
    </member>
    <member name="P:System.ComponentModel.Design.Serialization.DesignerSerializationManager.RecycleInstances">
      <summary vsli:raw="Gets or sets a value that indicates whether &lt;see cref=&quot;M:System.ComponentModel.Design.Serialization.DesignerSerializationManager.CreateInstance(System.Type,System.Collections.ICollection,System.String,System.Boolean)&quot; /&gt; will always create a new instance of a type.">取得或設定值，這個值表示 <see cref="M:System.ComponentModel.Design.Serialization.DesignerSerializationManager.CreateInstance(System.Type,System.Collections.ICollection,System.String,System.Boolean)" /> 是否一律會建立類型的新執行個體。</summary>
      <exception cref="T:System.InvalidOperationException" vsli:raw="The serialization manager has an active serialization session.">序列化管理員具有使用中的序列化工作階段。</exception>
      <returns vsli:raw="&lt;see langword=&quot;true&quot; /&gt; if &lt;see cref=&quot;M:System.ComponentModel.Design.Serialization.DesignerSerializationManager.CreateInstance(System.Type,System.Collections.ICollection,System.String,System.Boolean)&quot; /&gt; will return the existing instance; &lt;see langword=&quot;false&quot; /&gt; if &lt;see cref=&quot;M:System.ComponentModel.Design.Serialization.DesignerSerializationManager.CreateInstance(System.Type,System.Collections.ICollection,System.String,System.Boolean)&quot; /&gt; will create a new instance of a type. The default is &lt;see langword=&quot;false&quot; /&gt;.">如果 <see cref="M:System.ComponentModel.Design.Serialization.DesignerSerializationManager.CreateInstance(System.Type,System.Collections.ICollection,System.String,System.Boolean)" /> 傳回現有執行個體則為 <see langword="true" />，如果 <see cref="M:System.ComponentModel.Design.Serialization.DesignerSerializationManager.CreateInstance(System.Type,System.Collections.ICollection,System.String,System.Boolean)" /> 建立型別的新執行個體則為 <see langword="false" />。 預設為 <see langword="false" />。</returns>
    </member>
    <member name="P:System.ComponentModel.Design.Serialization.DesignerSerializationManager.System#ComponentModel#Design#Serialization#IDesignerSerializationManager#Context">
      <summary vsli:raw="Gets the context stack for this serialization session.">取得這個序列化工作階段的內容堆疊。</summary>
      <exception cref="T:System.InvalidOperationException" vsli:raw="This property was accessed outside of a serialization session.">這個屬性從序列化工作階段外存取。</exception>
      <returns vsli:raw="A &lt;see cref=&quot;T:System.ComponentModel.Design.Serialization.ContextStack&quot; /&gt; that stores data.">
        <see cref="T:System.ComponentModel.Design.Serialization.ContextStack" />，儲存資料。</returns>
    </member>
    <member name="P:System.ComponentModel.Design.Serialization.DesignerSerializationManager.System#ComponentModel#Design#Serialization#IDesignerSerializationManager#Properties">
      <summary vsli:raw="Implements the &lt;see cref=&quot;P:System.ComponentModel.Design.Serialization.IDesignerSerializationManager.Properties&quot; /&gt; property.">實作 <see cref="P:System.ComponentModel.Design.Serialization.IDesignerSerializationManager.Properties" /> 屬性。</summary>
      <returns vsli:raw="A &lt;see cref=&quot;T:System.ComponentModel.PropertyDescriptorCollection&quot; /&gt; containing the properties to be serialized.">
        <see cref="T:System.ComponentModel.PropertyDescriptorCollection" />，含有要被序列化的屬性。</returns>
    </member>
    <member name="P:System.ComponentModel.Design.Serialization.DesignerSerializationManager.ValidateRecycledTypes">
      <summary vsli:raw="Gets or sets a value that indicates whether the &lt;see cref=&quot;M:System.ComponentModel.Design.Serialization.DesignerSerializationManager.CreateInstance(System.Type,System.Collections.ICollection,System.String,System.Boolean)&quot; /&gt; method will verify that matching names refer to the same type.">取得或設定值，這個值表示 <see cref="M:System.ComponentModel.Design.Serialization.DesignerSerializationManager.CreateInstance(System.Type,System.Collections.ICollection,System.String,System.Boolean)" /> 方法是否會驗證相符名稱參考同一類型。</summary>
      <exception cref="T:System.InvalidOperationException" vsli:raw="The serialization manager has an active serialization session.">序列化管理員具有使用中的序列化工作階段。</exception>
      <returns vsli:raw="&lt;see langword=&quot;true&quot; /&gt; if &lt;see cref=&quot;M:System.ComponentModel.Design.Serialization.DesignerSerializationManager.CreateInstance(System.Type,System.Collections.ICollection,System.String,System.Boolean)&quot; /&gt; verifies types; otherwise, &lt;see langword=&quot;false&quot; /&gt; if it does not. The default is &lt;see langword=&quot;true&quot; /&gt;.">如果 <see cref="M:System.ComponentModel.Design.Serialization.DesignerSerializationManager.CreateInstance(System.Type,System.Collections.ICollection,System.String,System.Boolean)" /> 驗證型別則為 <see langword="true" />，否則為 <see langword="false" />。 預設為 <see langword="true" />。</returns>
    </member>
    <member name="T:System.ComponentModel.Design.Serialization.ExpressionContext">
      <summary vsli:raw="Provides a means of passing context state among serializers. This class cannot be inherited.">提供在序列化程式之間傳遞內容狀態的方法。 此類別無法獲得繼承。</summary>
    </member>
    <member name="M:System.ComponentModel.Design.Serialization.ExpressionContext.#ctor(System.CodeDom.CodeExpression,System.Type,System.Object)">
      <summary vsli:raw="Initializes a new instance of the &lt;see cref=&quot;T:System.ComponentModel.Design.Serialization.ExpressionContext&quot; /&gt; class with the given expression and owner.">使用指定的運算式與擁有者，將新的 <see cref="T:System.ComponentModel.Design.Serialization.ExpressionContext" /> 執行個體初始化。</summary>
      <param name="expression" vsli:raw="The given code expression.">指定的程式碼運算式。</param>
      <param name="expressionType" vsli:raw="The given code expression type.">指定的程式碼運算式類型。</param>
      <param name="owner" vsli:raw="The given code expression owner.">指定的程式碼運算式擁有者。</param>
      <exception cref="T:System.ArgumentNullException" vsli:raw="&lt;paramref name=&quot;expression&quot; /&gt;, &lt;paramref name=&quot;expressionType&quot; /&gt;, or &lt;paramref name=&quot;owner&quot; /&gt; is &lt;see langword=&quot;null&quot; /&gt;.">
        <paramref name="expression" />、<paramref name="expressionType" /> 或 <paramref name="owner" /> 為 <see langword="null" />。</exception>
    </member>
    <member name="M:System.ComponentModel.Design.Serialization.ExpressionContext.#ctor(System.CodeDom.CodeExpression,System.Type,System.Object,System.Object)">
      <summary vsli:raw="Initializes a new instance of the &lt;see cref=&quot;T:System.ComponentModel.Design.Serialization.ExpressionContext&quot; /&gt; class with a current value.">使用現有值，將 <see cref="T:System.ComponentModel.Design.Serialization.ExpressionContext" /> 類別的新執行個體初始化。</summary>
      <param name="expression" vsli:raw="The given code expression.">指定的程式碼運算式。</param>
      <param name="expressionType" vsli:raw="The given code expression type.">指定的程式碼運算式類型。</param>
      <param name="owner" vsli:raw="The given code expression owner.">指定的程式碼運算式擁有者。</param>
      <param name="presetValue" vsli:raw="The given code expression preset value.">指定的程式碼運算式預設值。</param>
      <exception cref="T:System.ArgumentNullException" vsli:raw="&lt;paramref name=&quot;expression&quot; /&gt;, &lt;paramref name=&quot;expressionType&quot; /&gt;, or &lt;paramref name=&quot;owner&quot; /&gt; is &lt;see langword=&quot;null&quot; /&gt;.">
        <paramref name="expression" />、<paramref name="expressionType" /> 或 <paramref name="owner" /> 為 <see langword="null" />。</exception>
    </member>
    <member name="P:System.ComponentModel.Design.Serialization.ExpressionContext.Expression">
      <summary vsli:raw="Gets the expression this context represents.">取得這個內容表示的運算式。</summary>
      <returns vsli:raw="The expression this context represents.">這個內容表示的運算式。</returns>
    </member>
    <member name="P:System.ComponentModel.Design.Serialization.ExpressionContext.ExpressionType">
      <summary vsli:raw="Gets the &lt;see cref=&quot;T:System.Type&quot; /&gt; of the expression.">取得運算式的 <see cref="T:System.Type" />。</summary>
      <returns vsli:raw="The &lt;see cref=&quot;T:System.Type&quot; /&gt; of the expression.">運算式的 <see cref="T:System.Type" />。</returns>
    </member>
    <member name="P:System.ComponentModel.Design.Serialization.ExpressionContext.Owner">
      <summary vsli:raw="Gets the object owning this expression.">取得擁有這個運算式的物件。</summary>
      <returns vsli:raw="The object owning this expression.">擁有這個運算式的物件。</returns>
    </member>
    <member name="P:System.ComponentModel.Design.Serialization.ExpressionContext.PresetValue">
      <summary vsli:raw="Gets the preset value of an expression.">取得運算式的預設值。</summary>
      <returns vsli:raw="The preset value of this expression, or &lt;see langword=&quot;null&quot; /&gt; if not assigned.">這個運算式的預設值，或 <see langword="null" /> (如果未指派)。</returns>
    </member>
    <member name="T:System.ComponentModel.Design.Serialization.ICodeDomDesignerReload">
      <summary vsli:raw="Provides an interface that can be used to optimize the reloading of a designer.">提供可用來最佳化設計工具重新載入的介面。</summary>
    </member>
    <member name="M:System.ComponentModel.Design.Serialization.ICodeDomDesignerReload.ShouldReloadDesigner(System.CodeDom.CodeCompileUnit)">
      <summary vsli:raw="Indicates whether the designer should reload in order to import the specified compile unit correctly.">指示設計工具是否應該載入，以便正確匯入指定編譯單位。</summary>
      <param name="newTree" vsli:raw="A &lt;see cref=&quot;T:System.CodeDom.CodeCompileUnit&quot; /&gt; containing the designer document code.">
        <see cref="T:System.CodeDom.CodeCompileUnit" />，含有設計工具文件程式碼。</param>
      <returns vsli:raw="&lt;see langword=&quot;true&quot; /&gt; if the designer should reload; otherwise, &lt;see langword=&quot;false&quot; /&gt;.">如果設計工具應重新載入，則為 <see langword="true" />，否則為 <see langword="false" />。</returns>
    </member>
    <member name="T:System.ComponentModel.Design.Serialization.MemberCodeDomSerializer">
      <summary vsli:raw="Provides the base class for serializing a reflection primitive within the object graph.">提供基底類別，以序列化物件 Graph 內的基本反映。</summary>
    </member>
    <member name="M:System.ComponentModel.Design.Serialization.MemberCodeDomSerializer.#ctor">
      <summary vsli:raw="Initializes a new instance of the &lt;see cref=&quot;T:System.ComponentModel.Design.Serialization.MemberCodeDomSerializer&quot; /&gt; class.">初始化 <see cref="T:System.ComponentModel.Design.Serialization.MemberCodeDomSerializer" /> 類別的新執行個體。</summary>
    </member>
    <member name="M:System.ComponentModel.Design.Serialization.MemberCodeDomSerializer.Serialize(System.ComponentModel.Design.Serialization.IDesignerSerializationManager,System.Object,System.ComponentModel.MemberDescriptor,System.CodeDom.CodeStatementCollection)">
      <summary vsli:raw="Serializes the given member descriptor on the given value to a statement collection.">將指定值上的指定成員描述項序列化為陳述式集合。</summary>
      <param name="manager" vsli:raw="The serialization manager to use for serialization.">用於序列化的序列化管理員。</param>
      <param name="value" vsli:raw="The object to which the member is bound.">成員繫結至的物件。</param>
      <param name="descriptor" vsli:raw="The descriptor of the member to serialize.">要序列化的成員描述項。</param>
      <param name="statements" vsli:raw="The &lt;see cref=&quot;T:System.CodeDom.CodeStatementCollection&quot; /&gt; into which &lt;paramref name=&quot;descriptor&quot; /&gt; is serialized.">
        <paramref name="descriptor" /> 要序列化為的 <see cref="T:System.CodeDom.CodeStatementCollection" />。</param>
    </member>
    <member name="M:System.ComponentModel.Design.Serialization.MemberCodeDomSerializer.ShouldSerialize(System.ComponentModel.Design.Serialization.IDesignerSerializationManager,System.Object,System.ComponentModel.MemberDescriptor)">
      <summary vsli:raw="Determines if the given member should be serialized.">判斷是否序列化指定的成員。</summary>
      <param name="manager" vsli:raw="The serialization manager to use for serialization.">用於序列化的序列化管理員。</param>
      <param name="value" vsli:raw="The object to which the member is bound.">成員繫結至的物件。</param>
      <param name="descriptor" vsli:raw="The descriptor of the member to serialize.">要序列化的成員描述項。</param>
      <returns vsli:raw="&lt;see langword=&quot;true&quot; /&gt;, if the member described by &lt;paramref name=&quot;descriptor&quot; /&gt; should be serialized; otherwise, &lt;see langword=&quot;false&quot; /&gt;.">如果應序列化由 <paramref name="descriptor" /> 描述的成員，則為 <see langword="true" />，否則為 <see langword="false" />。</returns>
    </member>
    <member name="T:System.ComponentModel.Design.Serialization.ObjectStatementCollection">
      <summary vsli:raw="Holds a table of statements that is offered by the &lt;see cref=&quot;T:System.ComponentModel.Design.Serialization.StatementContext&quot; /&gt;. This class cannot be inherited.">保留 <see cref="T:System.ComponentModel.Design.Serialization.StatementContext" /> 所提供的陳述式表格。 此類別無法獲得繼承。</summary>
    </member>
    <member name="M:System.ComponentModel.Design.Serialization.ObjectStatementCollection.ContainsKey(System.Object)">
      <summary vsli:raw="Determines whether the table contains the given statement owner.">決定表格是否包含指定的陳述式擁有者。</summary>
      <param name="statementOwner" vsli:raw="The owner of the statement collection.">陳述式集合的擁有者。</param>
      <exception cref="T:System.ArgumentNullException" vsli:raw="&lt;paramref name=&quot;statementOwner&quot; /&gt; is &lt;see langword=&quot;null&quot; /&gt;.">
        <paramref name="statementOwner" /> 為 <see langword="null" />。</exception>
      <returns vsli:raw="&lt;see langword=&quot;true&quot; /&gt; if &lt;paramref name=&quot;statementOwner&quot; /&gt; is in the table; otherwise, &lt;see langword=&quot;false&quot; /&gt;.">如果 <paramref name="statementOwner" /> 在表格中，則為 <see langword="true" />，否則為 <see langword="false" />。</returns>
    </member>
    <member name="M:System.ComponentModel.Design.Serialization.ObjectStatementCollection.GetEnumerator">
      <summary vsli:raw="Returns an &lt;see cref=&quot;T:System.Collections.IEnumerator&quot; /&gt; for the &lt;see cref=&quot;T:System.ComponentModel.Design.Serialization.ObjectStatementCollection&quot; /&gt;.">傳回 <see cref="T:System.Collections.IEnumerator" /> 的 <see cref="T:System.ComponentModel.Design.Serialization.ObjectStatementCollection" />。</summary>
      <returns vsli:raw="An &lt;see cref=&quot;T:System.Collections.IEnumerator&quot; /&gt; for the &lt;see cref=&quot;T:System.ComponentModel.Design.Serialization.ObjectStatementCollection&quot; /&gt;.">
        <see cref="T:System.Collections.IEnumerator" /> 的 <see cref="T:System.ComponentModel.Design.Serialization.ObjectStatementCollection" />。</returns>
    </member>
    <member name="M:System.ComponentModel.Design.Serialization.ObjectStatementCollection.Populate(System.Collections.ICollection)">
      <summary vsli:raw="Populates the statement table with a collection of statement owners.">使用陳述式擁有者的集合填入陳述式表格。</summary>
      <param name="statementOwners" vsli:raw="A collection of statement owners to add to the table.">要加入表格的陳述式擁有者集合。</param>
      <exception cref="T:System.ArgumentNullException" vsli:raw="&lt;paramref name=&quot;statementOwner&quot; /&gt; is &lt;see langword=&quot;null&quot; /&gt;.">
        <paramref name="statementOwner" /> 為 <see langword="null" />。</exception>
    </member>
    <member name="M:System.ComponentModel.Design.Serialization.ObjectStatementCollection.Populate(System.Object)">
      <summary vsli:raw="Populates the statement table with a statement owner.">使用陳述式擁有者填入陳述式表格。</summary>
      <param name="owner" vsli:raw="The statement owner to add to the table.">要加入表格的陳述式擁有者。</param>
      <exception cref="T:System.ArgumentNullException" vsli:raw="&lt;paramref name=&quot;owner&quot; /&gt; is &lt;see langword=&quot;null&quot; /&gt;.">
        <paramref name="owner" /> 為 <see langword="null" />。</exception>
    </member>
    <member name="M:System.ComponentModel.Design.Serialization.ObjectStatementCollection.System#Collections#IEnumerable#GetEnumerator">
      <summary vsli:raw="For a description of this member, see the &lt;see cref=&quot;M:System.Collections.IEnumerable.GetEnumerator&quot; /&gt; method.">如需這個成員的描述，請參閱 <see cref="M:System.Collections.IEnumerable.GetEnumerator" /> 方法。</summary>
      <returns vsli:raw="An &lt;see cref=&quot;T:System.Collections.IEnumerator&quot; /&gt; that can be used to iterate through the collection.">
        <see cref="T:System.Collections.IEnumerator" />，可用於逐一查看集合。</returns>
    </member>
    <member name="P:System.ComponentModel.Design.Serialization.ObjectStatementCollection.Item(System.Object)">
      <summary vsli:raw="Gets the statement collection for the given owner.">為指定的擁有者取得陳述式集合。</summary>
      <param name="statementOwner" vsli:raw="The owner of the statement collection.">陳述式集合的擁有者。</param>
      <exception cref="T:System.ArgumentNullException" vsli:raw="&lt;paramref name=&quot;statementOwner&quot; /&gt; is &lt;see langword=&quot;null&quot; /&gt;.">
        <paramref name="statementOwner" /> 為 <see langword="null" />。</exception>
      <returns vsli:raw="The statement collection for &lt;paramref name=&quot;statementOwner&quot; /&gt;, or &lt;see langword=&quot;null&quot; /&gt; if &lt;paramref name=&quot;statementOwner&quot; /&gt; is not in the table.">
        <paramref name="statementOwner" /> 的陳述式集合，如果 <paramref name="statementOwner" /> 不在表格中，則為 <see langword="null" />。</returns>
    </member>
    <member name="T:System.ComponentModel.Design.Serialization.RootContext">
      <summary vsli:raw="A &lt;see cref=&quot;T:System.ComponentModel.Design.Serialization.CodeDomSerializer&quot; /&gt; adds a root context to provide a definition of the root object. This class cannot be inherited.">
        <see cref="T:System.ComponentModel.Design.Serialization.CodeDomSerializer" /> 加入根內容，以提供根物件的定義。 此類別無法獲得繼承。</summary>
    </member>
    <member name="M:System.ComponentModel.Design.Serialization.RootContext.#ctor(System.CodeDom.CodeExpression,System.Object)">
      <summary vsli:raw="Initializes a new instance of the &lt;see cref=&quot;T:System.ComponentModel.Design.Serialization.RootContext&quot; /&gt; class.">初始化 <see cref="T:System.ComponentModel.Design.Serialization.RootContext" /> 類別的新執行個體。</summary>
      <param name="expression" vsli:raw="The expression representing the root object in the object graph.">表示物件 Graph 中根物件的運算式。</param>
      <param name="value" vsli:raw="The root object of the object graph.">物件 Graph 的根物件。</param>
      <exception cref="T:System.ArgumentNullException" vsli:raw="&lt;paramref name=&quot;expression&quot; /&gt; or &lt;paramref name=&quot;value&quot; /&gt; is &lt;see langword=&quot;null&quot; /&gt;.">
        <paramref name="expression" /> 或 <paramref name="value" /> 為 <see langword="null" />。</exception>
    </member>
    <member name="P:System.ComponentModel.Design.Serialization.RootContext.Expression">
      <summary vsli:raw="Gets the expression representing the root object in the object graph.">取得運算式，表示物件 Graph 中的根物件。</summary>
      <returns vsli:raw="A &lt;see cref=&quot;T:System.CodeDom.CodeExpression&quot; /&gt; representing the root object in the object graph.">表示物件 Graph 中根物件的 <see cref="T:System.CodeDom.CodeExpression" />。</returns>
    </member>
    <member name="P:System.ComponentModel.Design.Serialization.RootContext.Value">
      <summary vsli:raw="Gets the root object of the object graph.">取得物件 Graph 的根物件。</summary>
      <returns vsli:raw="The root object of the object graph.">物件 Graph 的根物件。</returns>
    </member>
    <member name="T:System.ComponentModel.Design.Serialization.SerializeAbsoluteContext">
      <summary vsli:raw="Specifies that serializers should handle default values. This class cannot be inherited.">指定序列化程式應處理預設值。 此類別無法獲得繼承。</summary>
    </member>
    <member name="M:System.ComponentModel.Design.Serialization.SerializeAbsoluteContext.#ctor">
      <summary vsli:raw="Initializes a new instance of the &lt;see cref=&quot;T:System.ComponentModel.Design.Serialization.SerializeAbsoluteContext&quot; /&gt; class.">初始化 <see cref="T:System.ComponentModel.Design.Serialization.SerializeAbsoluteContext" /> 類別的新執行個體。</summary>
    </member>
    <member name="M:System.ComponentModel.Design.Serialization.SerializeAbsoluteContext.#ctor(System.ComponentModel.MemberDescriptor)">
      <summary vsli:raw="Initializes a new instance of the &lt;see cref=&quot;T:System.ComponentModel.Design.Serialization.SerializeAbsoluteContext&quot; /&gt; class with the option of binding to a specific member.">使用繫結至特定成員的選項，初始化 <see cref="T:System.ComponentModel.Design.Serialization.SerializeAbsoluteContext" /> 類別的新執行個體。</summary>
      <param name="member" vsli:raw="The member to which this context is bound. Can be &lt;see langword=&quot;null&quot; /&gt;.">這個內容繫結至的成員。 可以是 <see langword="null" />。</param>
    </member>
    <member name="M:System.ComponentModel.Design.Serialization.SerializeAbsoluteContext.ShouldSerialize(System.ComponentModel.MemberDescriptor)">
      <summary vsli:raw="Gets a value indicating whether the given member should be serialized in this context.">取得值，指出是否在這個內容中序列化指定的成員。</summary>
      <param name="member" vsli:raw="The member to be examined for serialization.">要檢查以進行序列化的成員。</param>
      <returns vsli:raw="&lt;see langword=&quot;true&quot; /&gt; if the given member should be serialized in this context; otherwise, &lt;see langword=&quot;false&quot; /&gt;.">如果應在這個內容中序列化指定的成員，則為 <see langword="true" />，否則為 <see langword="false" />。</returns>
    </member>
    <member name="P:System.ComponentModel.Design.Serialization.SerializeAbsoluteContext.Member">
      <summary vsli:raw="Gets the member to which this context is bound.">取得這個內容繫結至的成員。</summary>
      <returns vsli:raw="The member to which this context is bound, or &lt;see langword=&quot;null&quot; /&gt; if the context is bound to all members of an object.">這個內容繫結至的成員，或 <see langword="null" /> (如果內容繫結至物件的所有成員)。</returns>
    </member>
    <member name="T:System.ComponentModel.Design.Serialization.StatementContext">
      <summary vsli:raw="Provides a location into which statements can be serialized. This class cannot be inherited.">提供可將陳述式序列化至的位置。 此類別無法獲得繼承。</summary>
    </member>
    <member name="M:System.ComponentModel.Design.Serialization.StatementContext.#ctor">
      <summary vsli:raw="Initializes a new instance of the &lt;see cref=&quot;T:System.ComponentModel.Design.Serialization.StatementContext&quot; /&gt; class.">初始化 <see cref="T:System.ComponentModel.Design.Serialization.StatementContext" /> 類別的新執行個體。</summary>
    </member>
    <member name="P:System.ComponentModel.Design.Serialization.StatementContext.StatementCollection">
      <summary vsli:raw="Gets a collection of statements offered by the statement context.">取得由陳述式內容所提供的陳述式集合。</summary>
      <returns vsli:raw="An &lt;see cref=&quot;T:System.ComponentModel.Design.Serialization.ObjectStatementCollection&quot; /&gt; containing statements offered by the statement context.">
        <see cref="T:System.ComponentModel.Design.Serialization.ObjectStatementCollection" />，包含由陳述式內容提供的陳述式。</returns>
    </member>
    <member name="T:System.ComponentModel.Design.Serialization.TypeCodeDomSerializer">
      <summary vsli:raw="Serializes an object to a new type.">將物件序列化為新的型別。</summary>
    </member>
    <member name="M:System.ComponentModel.Design.Serialization.TypeCodeDomSerializer.#ctor">
      <summary vsli:raw="Initializes a new instance of the &lt;see cref=&quot;T:System.ComponentModel.Design.Serialization.TypeCodeDomSerializer&quot; /&gt; class.">初始化 <see cref="T:System.ComponentModel.Design.Serialization.TypeCodeDomSerializer" /> 類別的新執行個體。</summary>
    </member>
    <member name="M:System.ComponentModel.Design.Serialization.TypeCodeDomSerializer.Deserialize(System.ComponentModel.Design.Serialization.IDesignerSerializationManager,System.CodeDom.CodeTypeDeclaration)">
      <summary vsli:raw="Deserializes the given type declaration.">還原序列化指定的型別宣告 (Type Declaration)。</summary>
      <param name="manager" vsli:raw="The serialization manager to use for serialization.">用於序列化的序列化管理員。</param>
      <param name="declaration" vsli:raw="Type declaration to use for serialization.">要用於序列化的型別宣告。</param>
      <exception cref="T:System.ArgumentNullException" vsli:raw="&lt;paramref name=&quot;manager&quot; /&gt; or &lt;paramref name=&quot;typeDecl&quot; /&gt; is &lt;see langword=&quot;null&quot; /&gt;.">
        <paramref name="manager" /> 或 <paramref name="typeDecl" /> 為 <see langword="null" />。</exception>
      <returns vsli:raw="The root object.">根物件。</returns>
    </member>
    <member name="M:System.ComponentModel.Design.Serialization.TypeCodeDomSerializer.GetInitializeMethod(System.ComponentModel.Design.Serialization.IDesignerSerializationManager,System.CodeDom.CodeTypeDeclaration,System.Object)">
      <summary vsli:raw="Returns the method where statements used to serialize a member are stored.">傳回一個方法，而在該方法中會儲存用於序列化成員的陳述式。</summary>
      <param name="manager" vsli:raw="The serialization manager to use for serialization.">用於序列化的序列化管理員。</param>
      <param name="declaration" vsli:raw="The type declaration to use for serialization.">用於序列化的類型宣告。</param>
      <param name="value" vsli:raw="The value to use for serialization.">供序列化使用的值。</param>
      <exception cref="T:System.ArgumentNullException" vsli:raw="&lt;paramref name=&quot;manager&quot; /&gt;, &lt;paramref name=&quot;typeDecl&quot; /&gt;, or &lt;paramref name=&quot;value&quot; /&gt; is &lt;see langword=&quot;null&quot; /&gt;.">
        <paramref name="manager" />、<paramref name="typeDecl" /> 或 <paramref name="value" /> 為 <see langword="null" />。</exception>
      <returns vsli:raw="The method used to emit all of the initialization code for the given member.">用於為指定成員發出所有初始化程式碼的方法。</returns>
    </member>
    <member name="M:System.ComponentModel.Design.Serialization.TypeCodeDomSerializer.GetInitializeMethods(System.ComponentModel.Design.Serialization.IDesignerSerializationManager,System.CodeDom.CodeTypeDeclaration)">
      <summary vsli:raw="Returns an array of methods to be interpreted during deserialization.">傳回要在還原序列化期間解譯的方法陣列。</summary>
      <param name="manager" vsli:raw="The serialization manager to use for serialization.">用於序列化的序列化管理員。</param>
      <param name="declaration" vsli:raw="The type declaration to use for serialization.">用於序列化的類型宣告。</param>
      <exception cref="T:System.ArgumentNullException" vsli:raw="&lt;paramref name=&quot;manager&quot; /&gt; or &lt;paramref name=&quot;typeDecl&quot; /&gt; is &lt;see langword=&quot;null&quot; /&gt;.">
        <paramref name="manager" /> 或 <paramref name="typeDecl" /> 為 <see langword="null" />。</exception>
      <returns vsli:raw="A &lt;see cref=&quot;T:System.CodeDom.CodeMemberMethod&quot; /&gt; array of methods to be interpreted during deserialization.">方法的 <see cref="T:System.CodeDom.CodeMemberMethod" /> 陣列，要在還原序列化期間解譯。</returns>
    </member>
    <member name="M:System.ComponentModel.Design.Serialization.TypeCodeDomSerializer.Serialize(System.ComponentModel.Design.Serialization.IDesignerSerializationManager,System.Object,System.Collections.ICollection)">
      <summary vsli:raw="Serializes the object root by creating a new type declaration that defines root.">藉由建立定義根 (Root) 的新型別宣告序列化物件根。</summary>
      <param name="manager" vsli:raw="The serialization manager to use for serialization.">用於序列化的序列化管理員。</param>
      <param name="root" vsli:raw="The object to serialize.">要序列化的物件。</param>
      <param name="members" vsli:raw="Optional collection of members. Can be &lt;see langword=&quot;null&quot; /&gt; or empty.">成員的選擇性集合。 可以為 <see langword="null" /> 或空白。</param>
      <exception cref="T:System.ArgumentNullException" vsli:raw="&lt;paramref name=&quot;manager&quot; /&gt; or &lt;paramref name=&quot;root&quot; /&gt; is &lt;see langword=&quot;null&quot; /&gt;.">
        <paramref name="manager" /> 或 <paramref name="root" /> 為 <see langword="null" />。</exception>
      <returns vsli:raw="A &lt;see cref=&quot;T:System.CodeDom.CodeTypeDeclaration&quot; /&gt; that defines the root object.">
        <see cref="T:System.CodeDom.CodeTypeDeclaration" />，定義根物件。</returns>
    </member>
    <member name="T:System.ComponentModel.Design.UndoEngine">
      <summary vsli:raw="Specifies generic undo/redo functionality at design time.">指定設計階段的一般復原/取消復原功能。</summary>
    </member>
    <member name="E:System.ComponentModel.Design.UndoEngine.Undoing">
      <summary vsli:raw="Occurs immediately before an undo action is performed.">緊接在執行復原動作之前發生。</summary>
    </member>
    <member name="E:System.ComponentModel.Design.UndoEngine.Undone">
      <summary vsli:raw="Occurs immediately after an undo action is performed.">緊接在執行復原動作之後發生。</summary>
    </member>
    <member name="M:System.ComponentModel.Design.UndoEngine.#ctor(System.IServiceProvider)">
      <summary vsli:raw="Initializes a new instance of the &lt;see cref=&quot;T:System.ComponentModel.Design.UndoEngine&quot; /&gt; class.">初始化 <see cref="T:System.ComponentModel.Design.UndoEngine" /> 類別的新執行個體。</summary>
      <param name="provider" vsli:raw="A parenting service provider.">父服務提供者。</param>
      <exception cref="T:System.ArgumentNullException" vsli:raw="&lt;paramref name=&quot;provider&quot; /&gt; is &lt;see langword=&quot;null&quot; /&gt;.">
        <paramref name="provider" /> 為 <see langword="null" />。</exception>
      <exception cref="T:System.NotSupportedException" vsli:raw="A required service cannot be found. See &lt;see cref=&quot;T:System.ComponentModel.Design.UndoEngine&quot; /&gt; for required services. If you have removed this service, ensure that you provide a replacement.">找不到必要的服務。 請參閱 <see cref="T:System.ComponentModel.Design.UndoEngine" />，以取得必要的服務。 如果您已移除這項服務，請務必提供取代服務。</exception>
    </member>
    <member name="M:System.ComponentModel.Design.UndoEngine.AddUndoUnit(System.ComponentModel.Design.UndoEngine.UndoUnit)">
      <summary vsli:raw="Adds an &lt;see cref=&quot;T:System.ComponentModel.Design.UndoEngine.UndoUnit&quot; /&gt; to the undo stack.">將 <see cref="T:System.ComponentModel.Design.UndoEngine.UndoUnit" /> 加入至復原堆疊。</summary>
      <param name="unit" vsli:raw="The undo unit to add.">要加入的復原單位</param>
    </member>
    <member name="M:System.ComponentModel.Design.UndoEngine.CreateUndoUnit(System.String,System.Boolean)">
      <summary vsli:raw="Creates a new &lt;see cref=&quot;T:System.ComponentModel.Design.UndoEngine.UndoUnit&quot; /&gt;.">建立新的 <see cref="T:System.ComponentModel.Design.UndoEngine.UndoUnit" />。</summary>
      <param name="name" vsli:raw="The name of the unit to create.">要建立的單位名稱。</param>
      <param name="primary" vsli:raw="&lt;see langword=&quot;true&quot; /&gt; to create the first of a series of nested units; &lt;see langword=&quot;false&quot; /&gt; to create subsequent nested units.">
        <see langword="true" /> 表示建立一系列巢狀單位的第一個，<see langword="false" /> 表示建立後續的巢狀單位。</param>
      <returns vsli:raw="A new &lt;see cref=&quot;T:System.ComponentModel.Design.UndoEngine.UndoUnit&quot; /&gt; with a specified name.">具有指定名稱的新 <see cref="T:System.ComponentModel.Design.UndoEngine.UndoUnit" />。</returns>
    </member>
    <member name="M:System.ComponentModel.Design.UndoEngine.DiscardUndoUnit(System.ComponentModel.Design.UndoEngine.UndoUnit)">
      <summary vsli:raw="Discards an &lt;see cref=&quot;T:System.ComponentModel.Design.UndoEngine.UndoUnit&quot; /&gt;.">捨棄 <see cref="T:System.ComponentModel.Design.UndoEngine.UndoUnit" />。</summary>
      <param name="unit" vsli:raw="The unit to discard.">要捨棄的單位。</param>
    </member>
    <member name="M:System.ComponentModel.Design.UndoEngine.Dispose">
      <summary vsli:raw="Releases all resources used by the &lt;see cref=&quot;T:System.ComponentModel.Design.UndoEngine&quot; /&gt;.">釋放 <see cref="T:System.ComponentModel.Design.UndoEngine" /> 所使用的所有資源。</summary>
    </member>
    <member name="M:System.ComponentModel.Design.UndoEngine.Dispose(System.Boolean)">
      <summary vsli:raw="Releases the unmanaged resources used by the &lt;see cref=&quot;T:System.ComponentModel.Design.UndoEngine&quot; /&gt; and optionally releases the managed resources.">釋放 <see cref="T:System.ComponentModel.Design.UndoEngine" /> 所使用的 Unmanaged 資源，並選擇性地釋放 Managed 資源。</summary>
      <param name="disposing" vsli:raw="&lt;see langword=&quot;true&quot; /&gt; to release both managed and unmanaged resources; &lt;see langword=&quot;false&quot; /&gt; to release only unmanaged resources.">
        <see langword="true" /> 表示釋放 Managed 和 Unmanaged 資源，<see langword="false" /> 則表示只釋放 Unmanaged 資源。</param>
    </member>
    <member name="M:System.ComponentModel.Design.UndoEngine.GetRequiredService(System.Type)">
      <summary vsli:raw="Gets the requested service.">取得所要求的服務。</summary>
      <param name="serviceType" vsli:raw="The type of service to retrieve.">要擷取的服務類型。</param>
      <exception cref="T:System.ArgumentNullException" vsli:raw="&lt;paramref name=&quot;serviceType&quot; /&gt; is &lt;see langword=&quot;null&quot; /&gt;.">
        <paramref name="serviceType" /> 為 <see langword="null" />。</exception>
      <exception cref="T:System.NotSupportedException" vsli:raw="&lt;paramref name=&quot;serviceType&quot; /&gt; is required but cannot be found. If you have removed this service, ensure that you provide a replacement.">需要 <paramref name="serviceType" />，但找不到。 如果您已移除這項服務，請務必提供取代服務。</exception>
      <returns vsli:raw="The requested service, if found.">要求的服務 (如果找到)。</returns>
    </member>
    <member name="M:System.ComponentModel.Design.UndoEngine.GetService(System.Type)">
      <summary vsli:raw="Gets the requested service.">取得所要求的服務。</summary>
      <param name="serviceType" vsli:raw="The type of service to retrieve.">要擷取的服務類型。</param>
      <exception cref="T:System.ArgumentNullException" vsli:raw="&lt;paramref name=&quot;serviceType&quot; /&gt; is &lt;see langword=&quot;null&quot; /&gt;.">
        <paramref name="serviceType" /> 為 <see langword="null" />。</exception>
      <returns vsli:raw="The requested service, or &lt;see langword=&quot;null&quot; /&gt; if the requested service is not found.">要求的服務，或 <see langword="null" /> (如果找不到要求的服務)。</returns>
    </member>
    <member name="M:System.ComponentModel.Design.UndoEngine.OnUndoing(System.EventArgs)">
      <summary vsli:raw="Raises the &lt;see cref=&quot;E:System.ComponentModel.Design.UndoEngine.Undoing&quot; /&gt; event.">引發 <see cref="E:System.ComponentModel.Design.UndoEngine.Undoing" /> 事件。</summary>
      <param name="e" vsli:raw="An &lt;see cref=&quot;T:System.EventArgs&quot; /&gt; that contains the event data.">包含事件資料的 <see cref="T:System.EventArgs" />。</param>
    </member>
    <member name="M:System.ComponentModel.Design.UndoEngine.OnUndone(System.EventArgs)">
      <summary vsli:raw="Raises the &lt;see cref=&quot;E:System.ComponentModel.Design.UndoEngine.Undone&quot; /&gt; event.">引發 <see cref="E:System.ComponentModel.Design.UndoEngine.Undone" /> 事件。</summary>
      <param name="e" vsli:raw="An &lt;see cref=&quot;T:System.EventArgs&quot; /&gt; that contains the event data.">包含事件資料的 <see cref="T:System.EventArgs" />。</param>
    </member>
    <member name="P:System.ComponentModel.Design.UndoEngine.Enabled">
      <summary vsli:raw="Enables or disables the &lt;see cref=&quot;T:System.ComponentModel.Design.UndoEngine&quot; /&gt;.">啟用或停用 <see cref="T:System.ComponentModel.Design.UndoEngine" />。</summary>
      <returns vsli:raw="&lt;see langword=&quot;true&quot; /&gt; if the &lt;see cref=&quot;T:System.ComponentModel.Design.UndoEngine&quot; /&gt; is enabled; otherwise, &lt;see langword=&quot;false&quot; /&gt;.">如果啟用 <see cref="T:System.ComponentModel.Design.UndoEngine" /> 則為 <see langword="true" />，否則為 <see langword="false" />。</returns>
    </member>
    <member name="P:System.ComponentModel.Design.UndoEngine.UndoInProgress">
      <summary vsli:raw="Indicates if an undo action is in progress.">指出復原動作是否在進行中。</summary>
      <returns vsli:raw="&lt;see langword=&quot;true&quot; /&gt; if an undo action is in progress; otherwise, &lt;see langword=&quot;false&quot; /&gt;.">如果復原動作在進行中則為 <see langword="true" />，否則為 <see langword="false" />。</returns>
    </member>
    <member name="T:System.ComponentModel.Design.UndoEngine.UndoUnit">
      <summary vsli:raw="Encapsulates a unit of work that a user can undo.">封裝使用者可以復原的工作單元。</summary>
    </member>
    <member name="M:System.ComponentModel.Design.UndoEngine.UndoUnit.#ctor(System.ComponentModel.Design.UndoEngine,System.String)">
      <summary vsli:raw="Initializes a new instance of the &lt;see cref=&quot;T:System.ComponentModel.Design.UndoEngine.UndoUnit&quot; /&gt; class.">初始化 <see cref="T:System.ComponentModel.Design.UndoEngine.UndoUnit" /> 類別的新執行個體。</summary>
      <param name="engine" vsli:raw="The undo engine that owns this undo unit.">擁有這個復原單位的復原引擎。</param>
      <param name="name" vsli:raw="The name for this undo unit.">這個復原單位的名稱。</param>
      <exception cref="T:System.ArgumentNullException" vsli:raw="&lt;paramref name=&quot;engine&quot; /&gt; is &lt;see langword=&quot;null&quot; /&gt;.">
        <paramref name="engine" /> 為 <see langword="null" />。</exception>
    </member>
    <member name="M:System.ComponentModel.Design.UndoEngine.UndoUnit.Close">
      <summary vsli:raw="Receives a call from the undo engine to close this unit.">收到來自復原引擎的呼叫，關閉這個單位。</summary>
    </member>
    <member name="M:System.ComponentModel.Design.UndoEngine.UndoUnit.ComponentAdded(System.ComponentModel.Design.ComponentEventArgs)">
      <summary vsli:raw="Receives a call from the &lt;see cref=&quot;T:System.ComponentModel.Design.UndoEngine&quot; /&gt; in response to a &lt;see cref=&quot;E:System.ComponentModel.Design.IComponentChangeService.ComponentAdded&quot; /&gt; event.">收到來自 <see cref="T:System.ComponentModel.Design.UndoEngine" /> 的呼叫，以回應 <see cref="E:System.ComponentModel.Design.IComponentChangeService.ComponentAdded" /> 事件。</summary>
      <param name="e" vsli:raw="A &lt;see cref=&quot;T:System.ComponentModel.Design.ComponentEventArgs&quot; /&gt; that contains the event data.">
        <see cref="T:System.ComponentModel.Design.ComponentEventArgs" />，其中包含事件資料。</param>
    </member>
    <member name="M:System.ComponentModel.Design.UndoEngine.UndoUnit.ComponentAdding(System.ComponentModel.Design.ComponentEventArgs)">
      <summary vsli:raw="Receives a call from the &lt;see cref=&quot;T:System.ComponentModel.Design.UndoEngine&quot; /&gt; in response to a &lt;see cref=&quot;E:System.ComponentModel.Design.IComponentChangeService.ComponentAdding&quot; /&gt; event.">收到來自 <see cref="T:System.ComponentModel.Design.UndoEngine" /> 的呼叫，以回應 <see cref="E:System.ComponentModel.Design.IComponentChangeService.ComponentAdding" /> 事件。</summary>
      <param name="e" vsli:raw="A &lt;see cref=&quot;T:System.ComponentModel.Design.ComponentEventArgs&quot; /&gt; that contains the event data.">
        <see cref="T:System.ComponentModel.Design.ComponentEventArgs" />，其中包含事件資料。</param>
    </member>
    <member name="M:System.ComponentModel.Design.UndoEngine.UndoUnit.ComponentChanged(System.ComponentModel.Design.ComponentChangedEventArgs)">
      <summary vsli:raw="Receives a call from the &lt;see cref=&quot;T:System.ComponentModel.Design.UndoEngine&quot; /&gt; in response to a &lt;see cref=&quot;E:System.ComponentModel.Design.IComponentChangeService.ComponentChanged&quot; /&gt; event.">收到來自 <see cref="T:System.ComponentModel.Design.UndoEngine" /> 的呼叫，以回應 <see cref="E:System.ComponentModel.Design.IComponentChangeService.ComponentChanged" /> 事件。</summary>
      <param name="e" vsli:raw="A &lt;see cref=&quot;T:System.ComponentModel.Design.ComponentChangedEventArgs&quot; /&gt; that contains the event data.">
        <see cref="T:System.ComponentModel.Design.ComponentChangedEventArgs" />，其中包含事件資料。</param>
    </member>
    <member name="M:System.ComponentModel.Design.UndoEngine.UndoUnit.ComponentChanging(System.ComponentModel.Design.ComponentChangingEventArgs)">
      <summary vsli:raw="Receives a call from the &lt;see cref=&quot;T:System.ComponentModel.Design.UndoEngine&quot; /&gt; in response to a &lt;see cref=&quot;E:System.ComponentModel.Design.IComponentChangeService.ComponentChanging&quot; /&gt; event.">收到來自 <see cref="T:System.ComponentModel.Design.UndoEngine" /> 的呼叫，以回應 <see cref="E:System.ComponentModel.Design.IComponentChangeService.ComponentChanging" /> 事件。</summary>
      <param name="e" vsli:raw="A &lt;see cref=&quot;T:System.ComponentModel.Design.ComponentChangedEventArgs&quot; /&gt; that contains the event data.">
        <see cref="T:System.ComponentModel.Design.ComponentChangedEventArgs" />，其中包含事件資料。</param>
    </member>
    <member name="M:System.ComponentModel.Design.UndoEngine.UndoUnit.ComponentRemoved(System.ComponentModel.Design.ComponentEventArgs)">
      <summary vsli:raw="Receives a call from the &lt;see cref=&quot;T:System.ComponentModel.Design.UndoEngine&quot; /&gt; in response to a &lt;see cref=&quot;E:System.ComponentModel.Design.IComponentChangeService.ComponentRemoved&quot; /&gt; event.">收到來自 <see cref="T:System.ComponentModel.Design.UndoEngine" /> 的呼叫，以回應 <see cref="E:System.ComponentModel.Design.IComponentChangeService.ComponentRemoved" /> 事件。</summary>
      <param name="e" vsli:raw="A &lt;see cref=&quot;T:System.ComponentModel.Design.ComponentEventArgs&quot; /&gt; that contains the event data.">
        <see cref="T:System.ComponentModel.Design.ComponentEventArgs" />，其中包含事件資料。</param>
    </member>
    <member name="M:System.ComponentModel.Design.UndoEngine.UndoUnit.ComponentRemoving(System.ComponentModel.Design.ComponentEventArgs)">
      <summary vsli:raw="Receives a call from the &lt;see cref=&quot;T:System.ComponentModel.Design.UndoEngine&quot; /&gt; in response to a &lt;see cref=&quot;E:System.ComponentModel.Design.IComponentChangeService.ComponentRemoving&quot; /&gt; event.">收到來自 <see cref="T:System.ComponentModel.Design.UndoEngine" /> 的呼叫，以回應 <see cref="E:System.ComponentModel.Design.IComponentChangeService.ComponentRemoving" /> 事件。</summary>
      <param name="e" vsli:raw="A &lt;see cref=&quot;T:System.ComponentModel.Design.ComponentEventArgs&quot; /&gt; that contains the event data.">
        <see cref="T:System.ComponentModel.Design.ComponentEventArgs" />，其中包含事件資料。</param>
    </member>
    <member name="M:System.ComponentModel.Design.UndoEngine.UndoUnit.ComponentRename(System.ComponentModel.Design.ComponentRenameEventArgs)">
      <summary vsli:raw="Receives a call from the &lt;see cref=&quot;T:System.ComponentModel.Design.UndoEngine&quot; /&gt; in response to a &lt;see cref=&quot;E:System.ComponentModel.Design.IComponentChangeService.ComponentRename&quot; /&gt; event.">收到來自 <see cref="T:System.ComponentModel.Design.UndoEngine" /> 的呼叫，以回應 <see cref="E:System.ComponentModel.Design.IComponentChangeService.ComponentRename" /> 事件。</summary>
      <param name="e" vsli:raw="A &lt;see cref=&quot;T:System.ComponentModel.Design.ComponentRenameEventArgs&quot; /&gt; that contains the event data.">
        <see cref="T:System.ComponentModel.Design.ComponentRenameEventArgs" />，其中包含事件資料。</param>
    </member>
    <member name="M:System.ComponentModel.Design.UndoEngine.UndoUnit.GetService(System.Type)">
      <summary vsli:raw="Gets an instance of the requested service.">取得要求服務的執行個體。</summary>
      <param name="serviceType" vsli:raw="The type of service to retrieve.">要擷取的服務類型。</param>
      <returns vsli:raw="An instance of the given service, or &lt;see langword=&quot;null&quot; /&gt; if the service cannot be resolved.">指定服務的執行個體，或 <see langword="null" /> (如果無法解析服務)。</returns>
    </member>
    <member name="M:System.ComponentModel.Design.UndoEngine.UndoUnit.ToString">
      <summary vsli:raw="Returns a &lt;see cref=&quot;T:System.String&quot; /&gt; that represents the current name of the unit.">傳回 <see cref="T:System.String" />，表示單位的目前名稱。</summary>
      <returns vsli:raw="A &lt;see cref=&quot;T:System.String&quot; /&gt; that represents the current name of the unit.">
        <see cref="T:System.String" />，表示單位的目前名稱。</returns>
    </member>
    <member name="M:System.ComponentModel.Design.UndoEngine.UndoUnit.Undo">
      <summary vsli:raw="Performs an undo or redo action.">執行復原或取消復原動作。</summary>
    </member>
    <member name="M:System.ComponentModel.Design.UndoEngine.UndoUnit.UndoCore">
      <summary vsli:raw="Called by &lt;see cref=&quot;M:System.ComponentModel.Design.UndoEngine.UndoUnit.Undo&quot; /&gt; to perform an undo action.">由 <see cref="M:System.ComponentModel.Design.UndoEngine.UndoUnit.Undo" /> 呼叫，以執行復原動作。</summary>
    </member>
    <member name="P:System.ComponentModel.Design.UndoEngine.UndoUnit.IsEmpty">
      <summary vsli:raw="Gets a value indicating whether the &lt;see cref=&quot;T:System.ComponentModel.Design.UndoEngine.UndoUnit&quot; /&gt; contains no events.">取得值，指出 <see cref="T:System.ComponentModel.Design.UndoEngine.UndoUnit" /> 是否不包含事件。</summary>
      <returns vsli:raw="&lt;see langword=&quot;true&quot; /&gt; if the &lt;see cref=&quot;T:System.ComponentModel.Design.UndoEngine.UndoUnit&quot; /&gt; contains no events; otherwise, &lt;see langword=&quot;false&quot; /&gt;.">如果 <see cref="T:System.ComponentModel.Design.UndoEngine.UndoUnit" /> 不包含事件，則為 <see langword="true" />，否則為 <see langword="false" />。</returns>
    </member>
    <member name="P:System.ComponentModel.Design.UndoEngine.UndoUnit.Name">
      <summary vsli:raw="Gets the name of the &lt;see cref=&quot;T:System.ComponentModel.Design.UndoEngine.UndoUnit&quot; /&gt;.">取得 <see cref="T:System.ComponentModel.Design.UndoEngine.UndoUnit" /> 的名稱。</summary>
      <returns vsli:raw="The name of the &lt;see cref=&quot;T:System.ComponentModel.Design.UndoEngine.UndoUnit&quot; /&gt;.">
        <see cref="T:System.ComponentModel.Design.UndoEngine.UndoUnit" /> 的名稱。</returns>
    </member>
    <member name="P:System.ComponentModel.Design.UndoEngine.UndoUnit.UndoEngine">
      <summary vsli:raw="Gets the parent &lt;see cref=&quot;P:System.ComponentModel.Design.UndoEngine.UndoUnit.UndoEngine&quot; /&gt;.">取得父 <see cref="P:System.ComponentModel.Design.UndoEngine.UndoUnit.UndoEngine" />。</summary>
      <returns vsli:raw="The &lt;see cref=&quot;P:System.ComponentModel.Design.UndoEngine.UndoUnit.UndoEngine&quot; /&gt; to which this &lt;see cref=&quot;T:System.ComponentModel.Design.UndoEngine.UndoUnit&quot; /&gt; is attached.">
        <see cref="P:System.ComponentModel.Design.UndoEngine.UndoUnit.UndoEngine" /> 所附加的 <see cref="T:System.ComponentModel.Design.UndoEngine.UndoUnit" />。</returns>
    </member>
    <member name="T:System.Drawing.Design.BitmapEditor">
      <summary vsli:raw="Provides a user interface for selecting bitmap files in a property browser.">提供在屬性瀏覽器中選取點陣圖檔的使用者介面。</summary>
    </member>
    <member name="F:System.Drawing.Design.BitmapEditor.BitmapExtensions">
      <summary vsli:raw="Provides the list of default file extensions used to filter the file list.">提供用來篩選檔案清單的預設副檔名清單。</summary>
    </member>
    <member name="M:System.Drawing.Design.BitmapEditor.#ctor">
      <summary vsli:raw="Initializes a new instance of the &lt;see cref=&quot;T:System.Drawing.Design.BitmapEditor&quot; /&gt; class.">初始化 <see cref="T:System.Drawing.Design.BitmapEditor" /> 類別的新執行個體。</summary>
    </member>
    <member name="M:System.Drawing.Design.BitmapEditor.GetExtensions">
      <summary vsli:raw="Gets the extensions for the file list filter that the bitmap editor will initially use to filter the file list.">取得點陣圖編輯器初始用來篩選檔案清單之檔案清單篩選條件的副檔名。</summary>
      <returns vsli:raw="The default set of file extensions used to filter the file list.">用來篩選檔案清單的預設副檔名集。</returns>
    </member>
    <member name="M:System.Drawing.Design.BitmapEditor.GetFileDialogDescription">
      <summary vsli:raw="Gets the description for the default file list filter provided by this editor.">取得這個編輯器提供的預設檔案清單篩選條件的描述。</summary>
      <returns vsli:raw="The description for the default type of files to filter the file list for.">預設檔案類型的描述，用來篩選檔案清單。</returns>
    </member>
    <member name="M:System.Drawing.Design.BitmapEditor.LoadFromStream(System.IO.Stream)">
      <summary vsli:raw="Loads an image from the specified stream.">從指定的資料流載入影像。</summary>
      <param name="stream" vsli:raw="The stream from which to load the image.">要載入影像的資料流。</param>
      <returns vsli:raw="The &lt;see cref=&quot;T:System.Drawing.Image&quot; /&gt; loaded from the stream.">從資料流載入的 <see cref="T:System.Drawing.Image" />。</returns>
    </member>
    <member name="T:System.Drawing.Design.ColorEditor">
      <summary vsli:raw="Provides a &lt;see cref=&quot;T:System.Drawing.Design.UITypeEditor&quot; /&gt; for visually picking a color.">提供以視覺化方式選取色彩的 <see cref="T:System.Drawing.Design.UITypeEditor" />。</summary>
    </member>
    <member name="M:System.Drawing.Design.ColorEditor.#ctor">
      <summary vsli:raw="Initializes a new instance of the &lt;see cref=&quot;T:System.Drawing.Design.ColorEditor&quot; /&gt; class.">初始化 <see cref="T:System.Drawing.Design.ColorEditor" /> 類別的新執行個體。</summary>
    </member>
    <member name="M:System.Drawing.Design.ColorEditor.EditValue(System.ComponentModel.ITypeDescriptorContext,System.IServiceProvider,System.Object)">
      <summary vsli:raw="Edits the given object value using the editor style provided by the &lt;see cref=&quot;M:System.Drawing.Design.ColorEditor.GetEditStyle(System.ComponentModel.ITypeDescriptorContext)&quot; /&gt; method.">使用 <see cref="M:System.Drawing.Design.ColorEditor.GetEditStyle(System.ComponentModel.ITypeDescriptorContext)" /> 方法所提供的編輯器樣式來編輯指定的物件值。</summary>
      <param name="context" vsli:raw="An &lt;see cref=&quot;T:System.ComponentModel.ITypeDescriptorContext&quot; /&gt; that can be used to gain additional context information.">
        <see cref="T:System.ComponentModel.ITypeDescriptorContext" />，可用來取得額外的內容資訊。</param>
      <param name="provider" vsli:raw="An &lt;see cref=&quot;T:System.IServiceProvider&quot; /&gt; through which editing services may be obtained.">
        <see cref="T:System.IServiceProvider" />，可以透過它取得編輯服務。</param>
      <param name="value" vsli:raw="An instance of the value being edited.">已編輯值的執行個體。</param>
      <returns vsli:raw="The new value of the object. If the value of the object has not changed, this should return the same object it was passed.">物件的新值。 如果物件的值未經變更，這應該會傳回與已傳遞相同的物件。</returns>
    </member>
    <member name="M:System.Drawing.Design.ColorEditor.GetEditStyle(System.ComponentModel.ITypeDescriptorContext)">
      <summary vsli:raw="Gets the editing style of the Edit method. If the method is not supported, this will return &lt;xref data-throw-if-not-resolved=&quot;true&quot; uid=&quot;System.Drawing.Design.UITypeEditorEditStyle.None&quot;&gt;&lt;/xref&gt;.">取得 Edit 方法的編輯樣式。 如果不支援該方法，則會傳回 <see cref="F:System.Drawing.Design.UITypeEditorEditStyle.None" />。</summary>
      <param name="context" vsli:raw="An &lt;xref data-throw-if-not-resolved=&quot;true&quot; uid=&quot;System.ComponentModel.ITypeDescriptorContext&quot;&gt;&lt;/xref&gt; that can be used to gain additional context information.">
        <see cref="T:System.ComponentModel.ITypeDescriptorContext" />，可用來取得額外的內容資訊。</param>
      <returns vsli:raw="An enum value indicating the provided editing style.">列舉值，表示所提供的編輯樣式。</returns>
    </member>
    <member name="M:System.Drawing.Design.ColorEditor.GetPaintValueSupported(System.ComponentModel.ITypeDescriptorContext)">
      <summary vsli:raw="Gets a value indicating if this editor supports the painting of a representation of an object's value.">取得值，表示這個編輯器是否支援繪製物件值的表示。</summary>
      <param name="context" vsli:raw="An &lt;xref data-throw-if-not-resolved=&quot;true&quot; uid=&quot;System.ComponentModel.ITypeDescriptorContext&quot;&gt;&lt;/xref&gt; that can be used to gain additional context information.">
        <see cref="T:System.ComponentModel.ITypeDescriptorContext" />，可用來取得額外的內容資訊。</param>
      <returns vsli:raw="&lt;code data-dev-comment-type=&quot;langword&quot;&gt;true&lt;/code&gt; if &lt;xref data-throw-if-not-resolved=&quot;true&quot; uid=&quot;System.Drawing.Design.ColorEditor.PaintValue*&quot;&gt;&lt;/xref&gt; is implemented; otherwise, &lt;code data-dev-comment-type=&quot;langword&quot;&gt;false&lt;/code&gt;.">如果實作 <see cref="Overload:System.Drawing.Design.ColorEditor.PaintValue" /> 則為 <see langword="true" />，否則為 <see langword="false" />。</returns>
    </member>
    <member name="M:System.Drawing.Design.ColorEditor.PaintValue(System.Drawing.Design.PaintValueEventArgs)">
      <summary vsli:raw="Paints a representative value of the given object to the provided canvas.">將指定物件的表示值繪製到提供的畫布上。</summary>
      <param name="e" vsli:raw="What to paint and where to paint it.">要繪製什麼以及在哪裡繪製。</param>
    </member>
    <member name="T:System.Drawing.Design.ContentAlignmentEditor">
      <summary vsli:raw="Provides a &lt;see cref=&quot;T:System.Drawing.Design.UITypeEditor&quot; /&gt; for visually editing content alignment.">提供以視覺化方式編輯內容對齊方式的 <see cref="T:System.Drawing.Design.UITypeEditor" />。</summary>
    </member>
    <member name="M:System.Drawing.Design.ContentAlignmentEditor.#ctor">
      <summary vsli:raw="Initializes a new instance of the &lt;see cref=&quot;T:System.Drawing.Design.ContentAlignmentEditor&quot; /&gt; class.">初始化 <see cref="T:System.Drawing.Design.ContentAlignmentEditor" /> 類別的新執行個體。</summary>
    </member>
    <member name="M:System.Drawing.Design.ContentAlignmentEditor.EditValue(System.ComponentModel.ITypeDescriptorContext,System.IServiceProvider,System.Object)">
      <summary vsli:raw="Edits the given object value using the editor style provided by the &lt;see cref=&quot;Overload:System.Drawing.Design.ContentAlignmentEditor.GetEditStyle&quot; /&gt; method.">使用 <see cref="Overload:System.Drawing.Design.ContentAlignmentEditor.GetEditStyle" /> 方法所提供的編輯器樣式來編輯指定的物件值。</summary>
      <param name="context" vsli:raw="An &lt;see cref=&quot;T:System.ComponentModel.ITypeDescriptorContext&quot; /&gt; that can be used to gain additional context information.">
        <see cref="T:System.ComponentModel.ITypeDescriptorContext" />，可用來取得額外的內容資訊。</param>
      <param name="provider" vsli:raw="An &lt;see cref=&quot;T:System.IServiceProvider&quot; /&gt; through which editing services may be obtained.">
        <see cref="T:System.IServiceProvider" />，可以透過它取得編輯服務。</param>
      <param name="value" vsli:raw="An instance of the value being edited.">已編輯值的執行個體。</param>
      <returns vsli:raw="The new value of the object. If the value of the object has not changed, this should return the same object it was passed.">物件的新值。 如果物件的值未經變更，這應該會傳回與已傳遞相同的物件。</returns>
    </member>
    <member name="M:System.Drawing.Design.ContentAlignmentEditor.GetEditStyle(System.ComponentModel.ITypeDescriptorContext)">
      <summary vsli:raw="Gets the editing style of the &lt;xref data-throw-if-not-resolved=&quot;true&quot; uid=&quot;System.Drawing.Design.ContentAlignmentEditor.EditValue*&quot;&gt;&lt;/xref&gt; method.">取得 <see cref="Overload:System.Drawing.Design.ContentAlignmentEditor.EditValue" /> 方法的編輯樣式。</summary>
      <param name="context" vsli:raw="An &lt;xref data-throw-if-not-resolved=&quot;true&quot; uid=&quot;System.ComponentModel.ITypeDescriptorContext&quot;&gt;&lt;/xref&gt; that can be used to gain additional context information.">
        <see cref="T:System.ComponentModel.ITypeDescriptorContext" />，可用來取得額外的內容資訊。</param>
      <returns vsli:raw="A &lt;xref data-throw-if-not-resolved=&quot;true&quot; uid=&quot;System.Drawing.Design.UITypeEditorEditStyle&quot;&gt;&lt;/xref&gt; value indicating the provided editing style. If the method to retrieve the edit style is not supported, this will return &lt;xref data-throw-if-not-resolved=&quot;true&quot; uid=&quot;System.Drawing.Design.UITypeEditorEditStyle.None&quot;&gt;&lt;/xref&gt;.">
        <see cref="T:System.Drawing.Design.UITypeEditorEditStyle" /> 值，表示所提供的編輯樣式。 如果不支援用來擷取編輯樣式的方法，這將傳回 <see cref="F:System.Drawing.Design.UITypeEditorEditStyle.None" />。</returns>
    </member>
    <member name="T:System.Drawing.Design.CursorEditor">
      <summary vsli:raw="Provides a &lt;see cref=&quot;T:System.Drawing.Design.UITypeEditor&quot; /&gt; that can perform default file searching for cursor (.cur) files.">提供可以對游標 (.cur) 檔執行預設檔案搜尋的 <see cref="T:System.Drawing.Design.UITypeEditor" />。</summary>
    </member>
    <member name="M:System.Drawing.Design.CursorEditor.#ctor">
      <summary vsli:raw="Initializes a new instance of the &lt;see cref=&quot;T:System.Drawing.Design.CursorEditor&quot; /&gt; class.">初始化 <see cref="T:System.Drawing.Design.CursorEditor" /> 類別的新執行個體。</summary>
    </member>
    <member name="M:System.Drawing.Design.CursorEditor.EditValue(System.ComponentModel.ITypeDescriptorContext,System.IServiceProvider,System.Object)">
      <summary vsli:raw="Edits the given object value using the editor style provided by the &lt;see cref=&quot;Overload:System.Drawing.Design.CursorEditor.GetEditStyle&quot; /&gt; method.">使用 <see cref="Overload:System.Drawing.Design.CursorEditor.GetEditStyle" /> 方法所提供的編輯器樣式來編輯指定的物件值。</summary>
      <param name="context" vsli:raw="A type descriptor context that can be used to provide additional context information.">型別描述項內容，可以用來提供其他的內容資訊。</param>
      <param name="provider" vsli:raw="A service provider object through which editing services may be obtained.">服務提供者物件，可透過它編輯所取得的服務。</param>
      <param name="value" vsli:raw="An instance of the value being edited.">已編輯值的執行個體。</param>
      <returns vsli:raw="The new value of the object. If the value of the object has not changed, this should return the same object it was passed.">物件的新值。 如果物件的值未經變更，這應該會傳回與已傳遞相同的物件。</returns>
    </member>
    <member name="M:System.Drawing.Design.CursorEditor.GetEditStyle(System.ComponentModel.ITypeDescriptorContext)">
      <summary vsli:raw="Retrieves the editing style of the &lt;xref data-throw-if-not-resolved=&quot;true&quot; uid=&quot;System.Drawing.Design.CursorEditor.EditValue*&quot;&gt;&lt;/xref&gt; method.">擷取 <see cref="Overload:System.Drawing.Design.CursorEditor.EditValue" /> 方法的編輯樣式。</summary>
      <param name="context" vsli:raw="A type descriptor context that can be used to provide additional context information.">型別描述項內容，可以用來提供其他的內容資訊。</param>
      <returns vsli:raw="An enum value indicating the provided editing style. If the method is not supported, this will return &lt;xref data-throw-if-not-resolved=&quot;true&quot; uid=&quot;System.Drawing.Design.UITypeEditorEditStyle.None&quot;&gt;&lt;/xref&gt;.">列舉值，表示所提供的編輯樣式。 如果不支援該方法，則會傳回 <see cref="F:System.Drawing.Design.UITypeEditorEditStyle.None" />。</returns>
    </member>
    <member name="P:System.Drawing.Design.CursorEditor.IsDropDownResizable">
      <summary vsli:raw="Gets a value indicating whether drop-down editors should be resizable by the user.">取得值，表示使用者是否能夠調整下拉式編輯器的大小。</summary>
      <returns vsli:raw="&lt;see langword=&quot;true&quot; /&gt; if drop-down editors are resizable; otherwise, &lt;see langword=&quot;false&quot; /&gt;.">如果可以調整下拉式編輯器的大小，則為 <see langword="true" />，否則為 <see langword="false" />。</returns>
    </member>
    <member name="T:System.Drawing.Design.FontEditor">
      <summary vsli:raw="Provides a user interface to select and configure a &lt;see cref=&quot;T:System.Drawing.Font&quot; /&gt; object.">提供使用者介面以選取和設定 <see cref="T:System.Drawing.Font" /> 物件。</summary>
    </member>
    <member name="M:System.Drawing.Design.FontEditor.#ctor">
      <summary vsli:raw="Initializes a new instance of the &lt;see cref=&quot;T:System.Drawing.Design.FontEditor&quot; /&gt; class.">初始化 <see cref="T:System.Drawing.Design.FontEditor" /> 類別的新執行個體。</summary>
    </member>
    <member name="M:System.Drawing.Design.FontEditor.EditValue(System.ComponentModel.ITypeDescriptorContext,System.IServiceProvider,System.Object)">
      <summary vsli:raw="Edits the value of the specified object using the editor style indicated by &lt;see cref=&quot;M:System.Drawing.Design.FontEditor.GetEditStyle(System.ComponentModel.ITypeDescriptorContext)&quot; /&gt;.">使用由 <see cref="M:System.Drawing.Design.FontEditor.GetEditStyle(System.ComponentModel.ITypeDescriptorContext)" /> 所指示的編輯器樣式，來編輯指定物件的值。</summary>
      <param name="context" vsli:raw="An &lt;see cref=&quot;T:System.ComponentModel.ITypeDescriptorContext&quot; /&gt; that can be used to gain additional context information.">
        <see cref="T:System.ComponentModel.ITypeDescriptorContext" />，可用來取得額外的內容資訊。</param>
      <param name="provider" vsli:raw="An &lt;see cref=&quot;T:System.IServiceProvider&quot; /&gt; that this editor can use to obtain services.">
        <see cref="T:System.IServiceProvider" />，這個編輯器可用來取得服務。</param>
      <param name="value" vsli:raw="The object to edit.">要編輯的物件。</param>
      <returns vsli:raw="The new value of the object. If the value of the object has not changed, this should return the same object that was passed to it.">物件的新值。 如果物件的值沒有變更，這會傳回跟傳遞給它相同的物件。</returns>
    </member>
    <member name="M:System.Drawing.Design.FontEditor.GetEditStyle(System.ComponentModel.ITypeDescriptorContext)">
      <summary vsli:raw="Gets the editor style used by the &lt;xref data-throw-if-not-resolved=&quot;true&quot; uid=&quot;System.Drawing.Design.FontEditor.EditValue(System.ComponentModel.ITypeDescriptorContext,System.IServiceProvider,System.Object)&quot;&gt;&lt;/xref&gt; method.">取得 <see cref="M:System.Drawing.Design.FontEditor.EditValue(System.ComponentModel.ITypeDescriptorContext,System.IServiceProvider,System.Object)" /> 方法所使用的編輯器樣式。</summary>
      <param name="context" vsli:raw="An &lt;xref data-throw-if-not-resolved=&quot;true&quot; uid=&quot;System.ComponentModel.ITypeDescriptorContext&quot;&gt;&lt;/xref&gt; that can be used to gain additional context information.">
        <see cref="T:System.ComponentModel.ITypeDescriptorContext" />，可用來取得額外的內容資訊。</param>
      <returns vsli:raw="A &lt;xref data-throw-if-not-resolved=&quot;true&quot; uid=&quot;System.Drawing.Design.UITypeEditorEditStyle&quot;&gt;&lt;/xref&gt; value that indicates the style of editor used by &lt;xref data-throw-if-not-resolved=&quot;true&quot; uid=&quot;System.Drawing.Design.FontEditor.EditValue(System.ComponentModel.ITypeDescriptorContext,System.IServiceProvider,System.Object)&quot;&gt;&lt;/xref&gt;.">
        <see cref="T:System.Drawing.Design.UITypeEditorEditStyle" /> 值，表示 <see cref="M:System.Drawing.Design.FontEditor.EditValue(System.ComponentModel.ITypeDescriptorContext,System.IServiceProvider,System.Object)" /> 所使用的編輯器樣式。</returns>
    </member>
    <member name="T:System.Drawing.Design.FontNameEditor">
      <summary vsli:raw="Provides a &lt;see cref=&quot;T:System.Drawing.Design.UITypeEditor&quot; /&gt; that paints a glyph for the font name.">提供為字型名稱繪製圖像 (Glyph) 的 <see cref="T:System.Drawing.Design.UITypeEditor" />。</summary>
    </member>
    <member name="M:System.Drawing.Design.FontNameEditor.#ctor">
      <summary vsli:raw="Initializes a new instance of the &lt;see cref=&quot;T:System.Drawing.Design.FontNameEditor&quot; /&gt; class.">初始化 <see cref="T:System.Drawing.Design.FontNameEditor" /> 類別的新執行個體。</summary>
    </member>
    <member name="M:System.Drawing.Design.FontNameEditor.GetPaintValueSupported(System.ComponentModel.ITypeDescriptorContext)">
      <summary vsli:raw="Determines if this editor supports the painting of a representation of an object's value.">判斷這個編輯器是否支援繪製物件值的表示。</summary>
      <param name="context" vsli:raw="A type descriptor context that can be used to provide additional context information.">型別描述項內容，可以用來提供其他的內容資訊。</param>
      <returns vsli:raw="&lt;code data-dev-comment-type=&quot;langword&quot;&gt;true&lt;/code&gt; if &lt;xref data-throw-if-not-resolved=&quot;true&quot; uid=&quot;System.Drawing.Design.FontNameEditor.PaintValue*&quot;&gt;&lt;/xref&gt; is implemented; otherwise, &lt;code data-dev-comment-type=&quot;langword&quot;&gt;false&lt;/code&gt;.">如果實作 <see cref="Overload:System.Drawing.Design.FontNameEditor.PaintValue" /> 則為 <see langword="true" />，否則為 <see langword="false" />。</returns>
    </member>
    <member name="M:System.Drawing.Design.FontNameEditor.PaintValue(System.Drawing.Design.PaintValueEventArgs)">
      <summary vsli:raw="Paints a representative value of the given object to the provided canvas. Painting should be done within the boundaries of the provided rectangle.">將指定物件的表示值繪製到提供的畫布上。 繪製作業應該會在提供的矩形界限內進行。</summary>
      <param name="e" vsli:raw="What to paint and where to paint it.">要繪製什麼以及在哪裡繪製。</param>
    </member>
    <member name="T:System.Drawing.Design.IconEditor">
      <summary vsli:raw="Provides a &lt;see cref=&quot;T:System.Drawing.Design.UITypeEditor&quot; /&gt; for visually choosing an icon.">提供以視覺化方式選取圖示的 <see cref="T:System.Drawing.Design.UITypeEditor" />。</summary>
    </member>
    <member name="M:System.Drawing.Design.IconEditor.#ctor">
      <summary vsli:raw="Initializes a new instance of the &lt;see cref=&quot;T:System.Drawing.Design.IconEditor&quot; /&gt; class.">初始化 <see cref="T:System.Drawing.Design.IconEditor" /> 類別的新執行個體。</summary>
    </member>
    <member name="M:System.Drawing.Design.IconEditor.CreateExtensionsString(System.String[],System.String)">
      <summary vsli:raw="Creates a string representing the valid file extensions for icons.">建立字串，表示圖示的有效副檔名。</summary>
      <param name="extensions" vsli:raw="An array of strings holding valid file extensions.">保留有效副檔名的字串陣列。</param>
      <param name="sep" vsli:raw="A string that specifies the separator character.">指定分隔字元的字串。</param>
      <returns vsli:raw="A string containing the icon file extensions, or &lt;see langword=&quot;null&quot; /&gt; if &lt;paramref name=&quot;extensions&quot; /&gt; is &lt;see langword=&quot;null&quot; /&gt; or empty.">包含圖示副檔名的字串；如果 <paramref name="extensions" /> 是 <see langword="null" /> 或空白，則為 <see langword="null" />。</returns>
    </member>
    <member name="M:System.Drawing.Design.IconEditor.CreateFilterEntry(System.Drawing.Design.IconEditor)">
      <summary vsli:raw="Creates a filter string for the file dialog box.">建立檔案對話方塊的篩選條件字串。</summary>
      <param name="editor" vsli:raw="The &lt;see cref=&quot;T:System.Drawing.Design.IconEditor&quot; /&gt; for which the filter string will be created.">將建立篩選條件字串的 <see cref="T:System.Drawing.Design.IconEditor" />。</param>
      <returns vsli:raw="The filter string, created from the string returned by &lt;see cref=&quot;M:System.Drawing.Design.IconEditor.CreateExtensionsString(System.String[],System.String)&quot; /&gt;.">從 <see cref="M:System.Drawing.Design.IconEditor.CreateExtensionsString(System.String[],System.String)" /> 傳回之字串建立的篩選條件字串。</returns>
    </member>
    <member name="M:System.Drawing.Design.IconEditor.EditValue(System.ComponentModel.ITypeDescriptorContext,System.IServiceProvider,System.Object)">
      <summary vsli:raw="Edits the given object value using the editor style provided by the &lt;see cref=&quot;M:System.Drawing.Design.IconEditor.GetEditStyle(System.ComponentModel.ITypeDescriptorContext)&quot; /&gt; method.">使用 <see cref="M:System.Drawing.Design.IconEditor.GetEditStyle(System.ComponentModel.ITypeDescriptorContext)" /> 方法所提供的編輯器樣式來編輯指定的物件值。</summary>
      <param name="context" vsli:raw="A type descriptor context that can be used to provide additional context information.">型別描述項內容，可以用來提供其他的內容資訊。</param>
      <param name="provider" vsli:raw="A service provider object through which editing services may be obtained.">服務提供者物件，可透過它編輯所取得的服務。</param>
      <param name="value" vsli:raw="An instance of the value being edited.">已編輯值的執行個體。</param>
      <returns vsli:raw="The new value of the object. If the value of the object has not changed, this should return the same object it was passed.">物件的新值。 如果物件的值未經變更，這應該會傳回與已傳遞相同的物件。</returns>
    </member>
    <member name="M:System.Drawing.Design.IconEditor.GetEditStyle(System.ComponentModel.ITypeDescriptorContext)">
      <summary vsli:raw="Retrieves the editing style of the &lt;see cref=&quot;Overload:System.Drawing.Design.IconEditor.EditValue&quot; /&gt; method.">擷取 <see cref="Overload:System.Drawing.Design.IconEditor.EditValue" /> 方法的編輯樣式。</summary>
      <param name="context" vsli:raw="A type descriptor context that can be used to provide additional context information.">型別描述項內容，可以用來提供其他的內容資訊。</param>
      <returns vsli:raw="One of the &lt;see cref=&quot;T:System.Drawing.Design.UITypeEditorEditStyle&quot; /&gt; values indicating the provided editing style.">其中一個 <see cref="T:System.Drawing.Design.UITypeEditorEditStyle" /> 值，表示所提供的樣式。</returns>
    </member>
    <member name="M:System.Drawing.Design.IconEditor.GetExtensions">
      <summary vsli:raw="Retrieves an array of valid file extensions for icons.">擷取圖示的有效副檔名陣列。</summary>
      <returns vsli:raw="An array of valid file extensions for icons.">圖示的有效副檔名陣列。</returns>
    </member>
    <member name="M:System.Drawing.Design.IconEditor.GetFileDialogDescription">
      <summary vsli:raw="Gets the description for the default file list filter provided by this editor.">取得這個編輯器提供的預設檔案清單篩選條件的描述。</summary>
      <returns vsli:raw="The description for the default type of files to filter the file list for.">預設檔案類型的描述，用來篩選檔案清單。</returns>
    </member>
    <member name="M:System.Drawing.Design.IconEditor.GetPaintValueSupported(System.ComponentModel.ITypeDescriptorContext)">
      <summary vsli:raw="Determines if this editor supports the painting of a representation of an object's value.">判斷這個編輯器是否支援繪製物件值的表示。</summary>
      <param name="context" vsli:raw="A type descriptor context that can be used to provide additional context information.">型別描述項內容，可以用來提供其他的內容資訊。</param>
      <returns vsli:raw="&lt;code data-dev-comment-type=&quot;langword&quot;&gt;true&lt;/code&gt; if &lt;xref data-throw-if-not-resolved=&quot;true&quot; uid=&quot;System.Drawing.Design.UITypeEditor.PaintValue*&quot;&gt;&lt;/xref&gt; is implemented; otherwise, &lt;code data-dev-comment-type=&quot;langword&quot;&gt;false&lt;/code&gt;.">如果實作 <see cref="Overload:System.Drawing.Design.UITypeEditor.PaintValue" /> 則為 <see langword="true" />，否則為 <see langword="false" />。</returns>
    </member>
    <member name="M:System.Drawing.Design.IconEditor.LoadFromStream(System.IO.Stream)">
      <summary vsli:raw="Creates a new &lt;see cref=&quot;T:System.Drawing.Icon&quot; /&gt; from the given stream.">從指定的資料流建立新的 <see cref="T:System.Drawing.Icon" />。</summary>
      <param name="stream" vsli:raw="The source stream from which the icon will be created.">將從中建立圖示的來源資料流。</param>
      <returns vsli:raw="The newly created &lt;see cref=&quot;T:System.Drawing.Icon&quot; /&gt;.">新建立的 <see cref="T:System.Drawing.Icon" />。</returns>
    </member>
    <member name="M:System.Drawing.Design.IconEditor.PaintValue(System.Drawing.Design.PaintValueEventArgs)">
      <summary vsli:raw="Paints a representative value of the given object to the provided canvas.">將指定物件的表示值繪製到提供的畫布上。</summary>
      <param name="e" vsli:raw="What to paint and where to paint it.">要繪製什麼以及在哪裡繪製。</param>
    </member>
    <member name="T:System.Drawing.Design.ImageEditor">
      <summary vsli:raw="Provides a user interface for selecting an image for a property in a property grid.">提供可以在屬性方格中選取屬性影像的使用者介面。</summary>
    </member>
    <member name="M:System.Drawing.Design.ImageEditor.#ctor">
      <summary vsli:raw="Initializes a new instance of the &lt;see cref=&quot;T:System.Drawing.Design.ImageEditor&quot; /&gt; class.">初始化 <see cref="T:System.Drawing.Design.ImageEditor" /> 類別的新執行個體。</summary>
    </member>
    <member name="M:System.Drawing.Design.ImageEditor.CreateExtensionsString(System.String[],System.String)">
      <summary vsli:raw="Creates a string of file name extensions using the specified array of file extensions and the specified separator.">使用指定的副檔名陣列和指定的分隔符號來建立副檔名的字串。</summary>
      <param name="extensions" vsli:raw="The extensions to filter for.">要篩選的副檔名。</param>
      <param name="sep" vsli:raw="The separator to use.">要使用的分隔符號。</param>
      <returns vsli:raw="A string containing the specified file name extensions, each separated by the specified separator.">字串，含有指定的副檔名，每個副檔名以指定的分隔符號區隔。</returns>
    </member>
    <member name="M:System.Drawing.Design.ImageEditor.CreateFilterEntry(System.Drawing.Design.ImageEditor)">
      <summary vsli:raw="Creates a filter entry for a file dialog box's file list.">為檔案對話方塊的檔案清單建立篩選項目。</summary>
      <param name="e" vsli:raw="An &lt;see cref=&quot;T:System.Drawing.Design.ImageEditor&quot; /&gt; to get the filter entry from.">
        <see cref="T:System.Drawing.Design.ImageEditor" />，可以從其中取得篩選條件項目。</param>
      <returns vsli:raw="The new filter entry string.">新的篩選項目字串。</returns>
    </member>
    <member name="M:System.Drawing.Design.ImageEditor.EditValue(System.ComponentModel.ITypeDescriptorContext,System.IServiceProvider,System.Object)">
      <summary vsli:raw="Edits the specified object value using the edit style provided by the &lt;see cref=&quot;M:System.Drawing.Design.ImageEditor.GetEditStyle(System.ComponentModel.ITypeDescriptorContext)&quot; /&gt; method.">使用 <see cref="M:System.Drawing.Design.ImageEditor.GetEditStyle(System.ComponentModel.ITypeDescriptorContext)" /> 方法所提供的編輯樣式來編輯指定的物件值。</summary>
      <param name="context" vsli:raw="An &lt;see cref=&quot;T:System.ComponentModel.ITypeDescriptorContext&quot; /&gt; that can be used to gain additional context information.">
        <see cref="T:System.ComponentModel.ITypeDescriptorContext" />，可用來取得額外的內容資訊。</param>
      <param name="provider" vsli:raw="An &lt;see cref=&quot;T:System.IServiceProvider&quot; /&gt; through which editing services can be obtained.">
        <see cref="T:System.IServiceProvider" />，可以透過它取得編輯服務。</param>
      <param name="value" vsli:raw="An &lt;see cref=&quot;T:System.Object&quot; /&gt; being edited.">正在編輯的 <see cref="T:System.Object" />。</param>
      <returns vsli:raw="An &lt;see cref=&quot;T:System.Object&quot; /&gt; representing the new value. If the value of the object has not changed, &lt;see cref=&quot;M:System.Drawing.Design.ImageEditor.EditValue(System.ComponentModel.ITypeDescriptorContext,System.IServiceProvider,System.Object)&quot; /&gt; returns the object that was passed to it.">
        <see cref="T:System.Object" />，表示新的值。 如果物件的值沒有變更，則 <see cref="M:System.Drawing.Design.ImageEditor.EditValue(System.ComponentModel.ITypeDescriptorContext,System.IServiceProvider,System.Object)" /> 會傳回已傳給它的物件。</returns>
    </member>
    <member name="M:System.Drawing.Design.ImageEditor.GetEditStyle(System.ComponentModel.ITypeDescriptorContext)">
      <summary vsli:raw="Gets the editing style of the &lt;xref data-throw-if-not-resolved=&quot;true&quot; uid=&quot;System.Drawing.Design.ImageEditor.EditValue(System.ComponentModel.ITypeDescriptorContext,System.IServiceProvider,System.Object)&quot;&gt;&lt;/xref&gt; method.">取得 <see cref="M:System.Drawing.Design.ImageEditor.EditValue(System.ComponentModel.ITypeDescriptorContext,System.IServiceProvider,System.Object)" /> 方法的編輯樣式。</summary>
      <param name="context" vsli:raw="An &lt;xref data-throw-if-not-resolved=&quot;true&quot; uid=&quot;System.ComponentModel.ITypeDescriptorContext&quot;&gt;&lt;/xref&gt; that can be used to gain additional context information.">
        <see cref="T:System.ComponentModel.ITypeDescriptorContext" />，可用來取得額外的內容資訊。</param>
      <returns vsli:raw="One of the &lt;xref data-throw-if-not-resolved=&quot;true&quot; uid=&quot;System.Drawing.Design.UITypeEditorEditStyle&quot;&gt;&lt;/xref&gt; values indicating the supported editing style.">其中一個 <see cref="T:System.Drawing.Design.UITypeEditorEditStyle" /> 值，表示支援的編輯樣式。</returns>
    </member>
    <member name="M:System.Drawing.Design.ImageEditor.GetExtensions">
      <summary vsli:raw="Gets the extensions for the file-list filter that this editor initially uses to filter the file list.">取得檔案清單篩選條件的副檔名，其為此編輯器一開始篩選檔案清單所使用。</summary>
      <returns vsli:raw="A set of file extensions used to filter the file list.">用來篩選檔案清單的檔案副檔名集合。</returns>
    </member>
    <member name="M:System.Drawing.Design.ImageEditor.GetFileDialogDescription">
      <summary vsli:raw="Gets the description for the default file-list filter provided by this editor.">取得這個編輯器所提供的預設檔案清單篩選條件的描述。</summary>
      <returns vsli:raw="The description for the default file-list filter.">預設檔案清單篩選條件的描述。</returns>
    </member>
    <member name="M:System.Drawing.Design.ImageEditor.GetImageExtenders">
      <summary vsli:raw="Gets an array of supported image types.">取得支援的影像類型陣列。</summary>
      <returns vsli:raw="An array of &lt;see cref=&quot;T:System.Type&quot; /&gt; representing supported image types.">
        <see cref="T:System.Type" /> 的陣列，表示支援的影像類型。</returns>
    </member>
    <member name="M:System.Drawing.Design.ImageEditor.GetPaintValueSupported(System.ComponentModel.ITypeDescriptorContext)">
      <summary vsli:raw="Gets a value indicating whether this editor supports painting a representation of an object's value.">取得值，指出這個編輯器是否支援繪製物件值的表示。</summary>
      <param name="context" vsli:raw="An &lt;xref data-throw-if-not-resolved=&quot;true&quot; uid=&quot;System.ComponentModel.ITypeDescriptorContext&quot;&gt;&lt;/xref&gt; that can be used to gain additional context information.">
        <see cref="T:System.ComponentModel.ITypeDescriptorContext" />，可用來取得額外的內容資訊。</param>
      <returns vsli:raw="&lt;code data-dev-comment-type=&quot;langword&quot;&gt;true&lt;/code&gt; if &lt;xref data-throw-if-not-resolved=&quot;true&quot; uid=&quot;System.Drawing.Design.ImageEditor.PaintValue(System.Drawing.Design.PaintValueEventArgs)&quot;&gt;&lt;/xref&gt; is implemented; otherwise, &lt;code data-dev-comment-type=&quot;langword&quot;&gt;false&lt;/code&gt;.">如果實作 <see cref="M:System.Drawing.Design.ImageEditor.PaintValue(System.Drawing.Design.PaintValueEventArgs)" /> 則為 <see langword="true" />，否則為 <see langword="false" />。</returns>
    </member>
    <member name="M:System.Drawing.Design.ImageEditor.LoadFromStream(System.IO.Stream)">
      <summary vsli:raw="Loads an image from the specified stream.">從指定的資料流載入影像。</summary>
      <param name="stream" vsli:raw="A &lt;see cref=&quot;T:System.IO.Stream&quot; /&gt; that contains the image to load.">包含要載入影像的 <see cref="T:System.IO.Stream" />。</param>
      <returns vsli:raw="The &lt;see cref=&quot;T:System.Drawing.Image&quot; /&gt; that has been loaded.">已載入的 <see cref="T:System.Drawing.Image" />。</returns>
    </member>
    <member name="M:System.Drawing.Design.ImageEditor.PaintValue(System.Drawing.Design.PaintValueEventArgs)">
      <summary vsli:raw="Paints a value indicated by the specified &lt;xref data-throw-if-not-resolved=&quot;true&quot; uid=&quot;System.Drawing.Design.PaintValueEventArgs&quot;&gt;&lt;/xref&gt;.">繪製由指定的 <see cref="T:System.Drawing.Design.PaintValueEventArgs" /> 所指示的值。</summary>
      <param name="e" vsli:raw="A &lt;xref data-throw-if-not-resolved=&quot;true&quot; uid=&quot;System.Drawing.Design.PaintValueEventArgs&quot;&gt;&lt;/xref&gt; indicating what to paint and where to paint it.">
        <see cref="T:System.Drawing.Design.PaintValueEventArgs" />，表示要繪製什麼與繪製位置。</param>
    </member>
    <member name="T:System.Drawing.Design.IToolboxItemProvider">
      <summary vsli:raw="Exposes a collection of toolbox items.">公開工具箱項目的集合。</summary>
    </member>
    <member name="P:System.Drawing.Design.IToolboxItemProvider.Items">
      <summary vsli:raw="Gets a collection of &lt;see cref=&quot;T:System.Drawing.Design.ToolboxItem&quot; /&gt; objects.">取得 <see cref="T:System.Drawing.Design.ToolboxItem" /> 物件的集合。</summary>
      <returns vsli:raw="A collection of &lt;see cref=&quot;T:System.Drawing.Design.ToolboxItem&quot; /&gt; objects.">
        <see cref="T:System.Drawing.Design.ToolboxItem" /> 物件的集合。</returns>
    </member>
    <member name="T:System.Drawing.Design.IToolboxService">
      <summary vsli:raw="Provides methods and properties to manage and query the toolbox in the development environment.">提供方法和屬性來管理並查詢開發環境中的工具箱。</summary>
    </member>
    <member name="M:System.Drawing.Design.IToolboxService.AddCreator(System.Drawing.Design.ToolboxItemCreatorCallback,System.String)">
      <summary vsli:raw="Adds a new toolbox item creator for a specified data format.">加入指定資料格式的新工具箱項目建立者。</summary>
      <param name="creator" vsli:raw="A &lt;see cref=&quot;T:System.Drawing.Design.ToolboxItemCreatorCallback&quot; /&gt; that can create a component when the toolbox item is invoked.">
        <see cref="T:System.Drawing.Design.ToolboxItemCreatorCallback" />，可以在叫用工具箱項目時建立元件。</param>
      <param name="format" vsli:raw="The data format that the creator handles.">建立者所處理的資料格式。</param>
    </member>
    <member name="M:System.Drawing.Design.IToolboxService.AddCreator(System.Drawing.Design.ToolboxItemCreatorCallback,System.String,System.ComponentModel.Design.IDesignerHost)">
      <summary vsli:raw="Adds a new toolbox item creator for a specified data format and designer host.">會將指定資料格式和設計工具主應用程式的新工具箱項目建立者加入。</summary>
      <param name="creator" vsli:raw="A &lt;see cref=&quot;T:System.Drawing.Design.ToolboxItemCreatorCallback&quot; /&gt; that can create a component when the toolbox item is invoked.">
        <see cref="T:System.Drawing.Design.ToolboxItemCreatorCallback" />，可以在叫用工具箱項目時建立元件。</param>
      <param name="format" vsli:raw="The data format that the creator handles.">建立者所處理的資料格式。</param>
      <param name="host" vsli:raw="The &lt;see cref=&quot;T:System.ComponentModel.Design.IDesignerHost&quot; /&gt; that represents the designer host to associate with the creator.">
        <see cref="T:System.ComponentModel.Design.IDesignerHost" />，表示與建立者相關聯的設計工具主應用程式。</param>
    </member>
    <member name="M:System.Drawing.Design.IToolboxService.AddLinkedToolboxItem(System.Drawing.Design.ToolboxItem,System.ComponentModel.Design.IDesignerHost)">
      <summary vsli:raw="Adds the specified project-linked toolbox item to the toolbox.">將指定的專案連結工具箱項目加入至工具箱。</summary>
      <param name="toolboxItem" vsli:raw="The linked &lt;see cref=&quot;T:System.Drawing.Design.ToolboxItem&quot; /&gt; to add to the toolbox.">要加入至工具箱的連結 <see cref="T:System.Drawing.Design.ToolboxItem" />。</param>
      <param name="host" vsli:raw="The &lt;see cref=&quot;T:System.ComponentModel.Design.IDesignerHost&quot; /&gt; for the current design document.">目前設計文件的 <see cref="T:System.ComponentModel.Design.IDesignerHost" />。</param>
    </member>
    <member name="M:System.Drawing.Design.IToolboxService.AddLinkedToolboxItem(System.Drawing.Design.ToolboxItem,System.String,System.ComponentModel.Design.IDesignerHost)">
      <summary vsli:raw="Adds the specified project-linked toolbox item to the toolbox in the specified category.">將指定的專案連結工具箱項目加入至指定分類中的工具箱。</summary>
      <param name="toolboxItem" vsli:raw="The linked &lt;see cref=&quot;T:System.Drawing.Design.ToolboxItem&quot; /&gt; to add to the toolbox.">要加入至工具箱的連結 <see cref="T:System.Drawing.Design.ToolboxItem" />。</param>
      <param name="category" vsli:raw="The toolbox item category to add the toolbox item to.">要加入工具箱項目的工具箱項目分類。</param>
      <param name="host" vsli:raw="The &lt;see cref=&quot;T:System.ComponentModel.Design.IDesignerHost&quot; /&gt; for the current design document.">目前設計文件的 <see cref="T:System.ComponentModel.Design.IDesignerHost" />。</param>
    </member>
    <member name="M:System.Drawing.Design.IToolboxService.AddToolboxItem(System.Drawing.Design.ToolboxItem)">
      <summary vsli:raw="Adds the specified toolbox item to the toolbox.">將指定的工具箱項目加入至工具箱。</summary>
      <param name="toolboxItem" vsli:raw="The &lt;see cref=&quot;T:System.Drawing.Design.ToolboxItem&quot; /&gt; to add to the toolbox.">要加入至工具箱的 <see cref="T:System.Drawing.Design.ToolboxItem" />。</param>
    </member>
    <member name="M:System.Drawing.Design.IToolboxService.AddToolboxItem(System.Drawing.Design.ToolboxItem,System.String)">
      <summary vsli:raw="Adds the specified toolbox item to the toolbox in the specified category.">將指定的工具箱項目加入至指定分類中的工具箱。</summary>
      <param name="toolboxItem" vsli:raw="The &lt;see cref=&quot;T:System.Drawing.Design.ToolboxItem&quot; /&gt; to add to the toolbox.">要加入至工具箱的 <see cref="T:System.Drawing.Design.ToolboxItem" />。</param>
      <param name="category" vsli:raw="The toolbox item category to add the &lt;see cref=&quot;T:System.Drawing.Design.ToolboxItem&quot; /&gt; to.">要加入 <see cref="T:System.Drawing.Design.ToolboxItem" /> 的工具箱項目分類。</param>
    </member>
    <member name="M:System.Drawing.Design.IToolboxService.DeserializeToolboxItem(System.Object)">
      <summary vsli:raw="Gets a toolbox item from the specified object that represents a toolbox item in serialized form.">從使用已序列化形式表示工具箱項目的指定物件取得工具箱項目。</summary>
      <param name="serializedObject" vsli:raw="The object that contains the &lt;see cref=&quot;T:System.Drawing.Design.ToolboxItem&quot; /&gt; to retrieve.">物件，包含要擷取的 <see cref="T:System.Drawing.Design.ToolboxItem" />。</param>
      <returns vsli:raw="The &lt;see cref=&quot;T:System.Drawing.Design.ToolboxItem&quot; /&gt; created from the serialized object.">從已序列化物件建立的 <see cref="T:System.Drawing.Design.ToolboxItem" />。</returns>
    </member>
    <member name="M:System.Drawing.Design.IToolboxService.DeserializeToolboxItem(System.Object,System.ComponentModel.Design.IDesignerHost)">
      <summary vsli:raw="Gets a toolbox item from the specified object that represents a toolbox item in serialized form, using the specified designer host.">使用指定的設計工具主應用程式，從使用已序列化形式表示工具箱項目的指定物件取得工具箱項目。</summary>
      <param name="serializedObject" vsli:raw="The object that contains the &lt;see cref=&quot;T:System.Drawing.Design.ToolboxItem&quot; /&gt; to retrieve.">物件，包含要擷取的 <see cref="T:System.Drawing.Design.ToolboxItem" />。</param>
      <param name="host" vsli:raw="The &lt;see cref=&quot;T:System.ComponentModel.Design.IDesignerHost&quot; /&gt; to associate with this &lt;see cref=&quot;T:System.Drawing.Design.ToolboxItem&quot; /&gt;.">與這個 <see cref="T:System.ComponentModel.Design.IDesignerHost" /> 相關聯的 <see cref="T:System.Drawing.Design.ToolboxItem" />。</param>
      <returns vsli:raw="The &lt;see cref=&quot;T:System.Drawing.Design.ToolboxItem&quot; /&gt; created from deserialization.">從還原序列化 (Deserialization) 建立的 <see cref="T:System.Drawing.Design.ToolboxItem" />。</returns>
    </member>
    <member name="M:System.Drawing.Design.IToolboxService.GetSelectedToolboxItem">
      <summary vsli:raw="Gets the currently selected toolbox item.">取得目前選取的工具箱項目。</summary>
      <returns vsli:raw="The &lt;see cref=&quot;T:System.Drawing.Design.ToolboxItem&quot; /&gt; that is currently selected, or &lt;see langword=&quot;null&quot; /&gt; if no toolbox item has been selected.">目前選取的 <see cref="T:System.Drawing.Design.ToolboxItem" />，如果還沒有工具箱項目被選取，則為 <see langword="null" />。</returns>
    </member>
    <member name="M:System.Drawing.Design.IToolboxService.GetSelectedToolboxItem(System.ComponentModel.Design.IDesignerHost)">
      <summary vsli:raw="Gets the currently selected toolbox item if it is available to all designers, or if it supports the specified designer.">取得目前選取的工具箱項目 (如果它對所有設計工具是可用的，或它支援指定的設計工具)。</summary>
      <param name="host" vsli:raw="The &lt;see cref=&quot;T:System.ComponentModel.Design.IDesignerHost&quot; /&gt; that the selected tool must be associated with for it to be returned.">
        <see cref="T:System.ComponentModel.Design.IDesignerHost" />，選取的工具必須與之關聯才能被傳回。</param>
      <returns vsli:raw="The &lt;see cref=&quot;T:System.Drawing.Design.ToolboxItem&quot; /&gt; that is currently selected, or &lt;see langword=&quot;null&quot; /&gt; if no toolbox item is currently selected.">目前選取的 <see cref="T:System.Drawing.Design.ToolboxItem" />，如果目前沒有選取工具箱項目，則為 <see langword="null" />。</returns>
    </member>
    <member name="M:System.Drawing.Design.IToolboxService.GetToolboxItems">
      <summary vsli:raw="Gets the entire collection of toolbox items from the toolbox.">從工具箱取得工具箱項目的完整集合。</summary>
      <returns vsli:raw="A &lt;see cref=&quot;T:System.Drawing.Design.ToolboxItemCollection&quot; /&gt; that contains the current toolbox items.">
        <see cref="T:System.Drawing.Design.ToolboxItemCollection" />，包含目前的工具箱項目。</returns>
    </member>
    <member name="M:System.Drawing.Design.IToolboxService.GetToolboxItems(System.ComponentModel.Design.IDesignerHost)">
      <summary vsli:raw="Gets the collection of toolbox items that are associated with the specified designer host from the toolbox.">從工具箱取得與指定的設計工具主應用程式相關聯的工具箱項目集合。</summary>
      <param name="host" vsli:raw="The &lt;see cref=&quot;T:System.ComponentModel.Design.IDesignerHost&quot; /&gt; that is associated with the toolbox items to retrieve.">
        <see cref="T:System.ComponentModel.Design.IDesignerHost" />，與要擷取的工具箱項目相關聯。</param>
      <returns vsli:raw="A &lt;see cref=&quot;T:System.Drawing.Design.ToolboxItemCollection&quot; /&gt; that contains the current toolbox items that are associated with the specified designer host.">
        <see cref="T:System.Drawing.Design.ToolboxItemCollection" />，包含與指定的設計工具主應用程式相關聯的目前工具箱項目。</returns>
    </member>
    <member name="M:System.Drawing.Design.IToolboxService.GetToolboxItems(System.String)">
      <summary vsli:raw="Gets a collection of toolbox items from the toolbox that match the specified category.">從符合指定分類的工具箱取得工具箱項目的集合。</summary>
      <param name="category" vsli:raw="The toolbox item category to retrieve all the toolbox items from.">用來擷取所有工具箱項目的工具箱項目分類。</param>
      <returns vsli:raw="A &lt;see cref=&quot;T:System.Drawing.Design.ToolboxItemCollection&quot; /&gt; that contains the current toolbox items that are associated with the specified category.">
        <see cref="T:System.Drawing.Design.ToolboxItemCollection" />，包含與指定分類相關聯的目前工具箱項目。</returns>
    </member>
    <member name="M:System.Drawing.Design.IToolboxService.GetToolboxItems(System.String,System.ComponentModel.Design.IDesignerHost)">
      <summary vsli:raw="Gets the collection of toolbox items that are associated with the specified designer host and category from the toolbox.">從工具箱取得與指定的設計工具主應用程式和分類相關聯的工具箱項目集合。</summary>
      <param name="category" vsli:raw="The toolbox item category to retrieve the toolbox items from.">用來擷取工具箱項目的工具箱項目分類。</param>
      <param name="host" vsli:raw="The &lt;see cref=&quot;T:System.ComponentModel.Design.IDesignerHost&quot; /&gt; that is associated with the toolbox items to retrieve.">
        <see cref="T:System.ComponentModel.Design.IDesignerHost" />，與要擷取的工具箱項目相關聯。</param>
      <returns vsli:raw="A &lt;see cref=&quot;T:System.Drawing.Design.ToolboxItemCollection&quot; /&gt; that contains the current toolbox items that are associated with the specified category and designer host.">
        <see cref="T:System.Drawing.Design.ToolboxItemCollection" />，包含與指定分類和設計工具主應用程式相關聯的目前工具箱項目。</returns>
    </member>
    <member name="M:System.Drawing.Design.IToolboxService.IsSupported(System.Object,System.Collections.ICollection)">
      <summary vsli:raw="Gets a value indicating whether the specified object which represents a serialized toolbox item matches the specified attributes.">取得值，指出表示已序列化工具箱項目的指定物件是否符合指定的屬性 (Attribute)。</summary>
      <param name="serializedObject" vsli:raw="The object that contains the &lt;see cref=&quot;T:System.Drawing.Design.ToolboxItem&quot; /&gt; to retrieve.">物件，包含要擷取的 <see cref="T:System.Drawing.Design.ToolboxItem" />。</param>
      <param name="filterAttributes" vsli:raw="An &lt;see cref=&quot;T:System.Collections.ICollection&quot; /&gt; that contains the attributes to test the serialized object for.">
        <see cref="T:System.Collections.ICollection" />，包含要測試已序列化物件的屬性。</param>
      <returns vsli:raw="&lt;see langword=&quot;true&quot; /&gt; if the object matches the specified attributes; otherwise, &lt;see langword=&quot;false&quot; /&gt;.">如果物件符合指定的屬性，則為 <see langword="true" />，否則為 <see langword="false" />。</returns>
    </member>
    <member name="M:System.Drawing.Design.IToolboxService.IsSupported(System.Object,System.ComponentModel.Design.IDesignerHost)">
      <summary vsli:raw="Gets a value indicating whether the specified object which represents a serialized toolbox item can be used by the specified designer host.">取得值，指出表示已序列化工具箱項目的指定物件是否可由指定的設計工具主應用程式使用。</summary>
      <param name="serializedObject" vsli:raw="The object that contains the &lt;see cref=&quot;T:System.Drawing.Design.ToolboxItem&quot; /&gt; to retrieve.">物件，包含要擷取的 <see cref="T:System.Drawing.Design.ToolboxItem" />。</param>
      <param name="host" vsli:raw="The &lt;see cref=&quot;T:System.ComponentModel.Design.IDesignerHost&quot; /&gt; to test for support for the &lt;see cref=&quot;T:System.Drawing.Design.ToolboxItem&quot; /&gt;.">要測試是否支援 <see cref="T:System.ComponentModel.Design.IDesignerHost" /> 的 <see cref="T:System.Drawing.Design.ToolboxItem" />。</param>
      <returns vsli:raw="&lt;see langword=&quot;true&quot; /&gt; if the specified object is compatible with the specified designer host; otherwise, &lt;see langword=&quot;false&quot; /&gt;.">如果指定的物件與指定的設計工具主應用程式相容，則為 <see langword="true" />，否則為 <see langword="false" />。</returns>
    </member>
    <member name="M:System.Drawing.Design.IToolboxService.IsToolboxItem(System.Object)">
      <summary vsli:raw="Gets a value indicating whether the specified object is a serialized toolbox item.">取得值，指出指定的物件是否為已序列化的工具箱項目。</summary>
      <param name="serializedObject" vsli:raw="The object to inspect.">要檢查的物件。</param>
      <returns vsli:raw="&lt;see langword=&quot;true&quot; /&gt; if the object contains a toolbox item object; otherwise, &lt;see langword=&quot;false&quot; /&gt;.">如果物件包含工具箱項目物件，則為 <see langword="true" />，否則為 <see langword="false" />。</returns>
    </member>
    <member name="M:System.Drawing.Design.IToolboxService.IsToolboxItem(System.Object,System.ComponentModel.Design.IDesignerHost)">
      <summary vsli:raw="Gets a value indicating whether the specified object is a serialized toolbox item, using the specified designer host.">使用指定的設計工具主應用程式取得值，指出指定的物件是否為已序列化的工具箱項目。</summary>
      <param name="serializedObject" vsli:raw="The object to inspect.">要檢查的物件。</param>
      <param name="host" vsli:raw="The &lt;see cref=&quot;T:System.ComponentModel.Design.IDesignerHost&quot; /&gt; that is making this request.">正在產生這個要求的 <see cref="T:System.ComponentModel.Design.IDesignerHost" />。</param>
      <returns vsli:raw="&lt;see langword=&quot;true&quot; /&gt; if the object contains a toolbox item object; otherwise, &lt;see langword=&quot;false&quot; /&gt;.">如果物件包含工具箱項目物件，則為 <see langword="true" />，否則為 <see langword="false" />。</returns>
    </member>
    <member name="M:System.Drawing.Design.IToolboxService.Refresh">
      <summary vsli:raw="Refreshes the state of the toolbox items.">重新整理工具箱項目的狀態。</summary>
    </member>
    <member name="M:System.Drawing.Design.IToolboxService.RemoveCreator(System.String)">
      <summary vsli:raw="Removes a previously added toolbox item creator of the specified data format.">移除先前加入的指定資料格式的工具箱項目建立者。</summary>
      <param name="format" vsli:raw="The data format of the creator to remove.">要移除的建立者資料格式。</param>
    </member>
    <member name="M:System.Drawing.Design.IToolboxService.RemoveCreator(System.String,System.ComponentModel.Design.IDesignerHost)">
      <summary vsli:raw="Removes a previously added toolbox creator that is associated with the specified data format and the specified designer host.">移除與指定資料格式和指定設計工具主應用程式相關聯的先前加入的工具箱建立者。</summary>
      <param name="format" vsli:raw="The data format of the creator to remove.">要移除的建立者資料格式。</param>
      <param name="host" vsli:raw="The &lt;see cref=&quot;T:System.ComponentModel.Design.IDesignerHost&quot; /&gt; that is associated with the creator to remove.">
        <see cref="T:System.ComponentModel.Design.IDesignerHost" />，與要移除的建立者相關聯。</param>
    </member>
    <member name="M:System.Drawing.Design.IToolboxService.RemoveToolboxItem(System.Drawing.Design.ToolboxItem)">
      <summary vsli:raw="Removes the specified toolbox item from the toolbox.">從工具箱移除指定的工具箱項目。</summary>
      <param name="toolboxItem" vsli:raw="The &lt;see cref=&quot;T:System.Drawing.Design.ToolboxItem&quot; /&gt; to remove from the toolbox.">要從工具箱移除的 <see cref="T:System.Drawing.Design.ToolboxItem" />。</param>
    </member>
    <member name="M:System.Drawing.Design.IToolboxService.RemoveToolboxItem(System.Drawing.Design.ToolboxItem,System.String)">
      <summary vsli:raw="Removes the specified toolbox item from the toolbox.">從工具箱移除指定的工具箱項目。</summary>
      <param name="toolboxItem" vsli:raw="The &lt;see cref=&quot;T:System.Drawing.Design.ToolboxItem&quot; /&gt; to remove from the toolbox.">要從工具箱移除的 <see cref="T:System.Drawing.Design.ToolboxItem" />。</param>
      <param name="category" vsli:raw="The toolbox item category to remove the &lt;see cref=&quot;T:System.Drawing.Design.ToolboxItem&quot; /&gt; from.">用來移除 <see cref="T:System.Drawing.Design.ToolboxItem" /> 的工具箱項目分類。</param>
    </member>
    <member name="M:System.Drawing.Design.IToolboxService.SelectedToolboxItemUsed">
      <summary vsli:raw="Notifies the toolbox service that the selected tool has been used.">通知工具箱服務已經使用選取的工具。</summary>
    </member>
    <member name="M:System.Drawing.Design.IToolboxService.SerializeToolboxItem(System.Drawing.Design.ToolboxItem)">
      <summary vsli:raw="Gets a serializable object that represents the specified toolbox item.">取得表示指定工具箱項目的可序列化物件。</summary>
      <param name="toolboxItem" vsli:raw="The &lt;see cref=&quot;T:System.Drawing.Design.ToolboxItem&quot; /&gt; to serialize.">要序列化的 <see cref="T:System.Drawing.Design.ToolboxItem" />。</param>
      <returns vsli:raw="An object that represents the specified &lt;see cref=&quot;T:System.Drawing.Design.ToolboxItem&quot; /&gt;.">表示指定的 <see cref="T:System.Drawing.Design.ToolboxItem" /> 的物件。</returns>
    </member>
    <member name="M:System.Drawing.Design.IToolboxService.SetCursor">
      <summary vsli:raw="Sets the current application's cursor to a cursor that represents the currently selected tool.">設定目前應用程式的游標為表示目前選取工具的游標。</summary>
      <returns vsli:raw="&lt;see langword=&quot;true&quot; /&gt; if the cursor is set by the currently selected tool, &lt;see langword=&quot;false&quot; /&gt; if there is no tool selected and the cursor is set to the standard windows cursor.">如果目前選取工具設定了游標，則為 <see langword="true" />，如果沒有選取工具且游標設定為標準視窗游標，則為 <see langword="false" />。</returns>
    </member>
    <member name="M:System.Drawing.Design.IToolboxService.SetSelectedToolboxItem(System.Drawing.Design.ToolboxItem)">
      <summary vsli:raw="Selects the specified toolbox item.">選取指定的工具列項目。</summary>
      <param name="toolboxItem" vsli:raw="The &lt;see cref=&quot;T:System.Drawing.Design.ToolboxItem&quot; /&gt; to select.">要選取的 <see cref="T:System.Drawing.Design.ToolboxItem" />。</param>
    </member>
    <member name="P:System.Drawing.Design.IToolboxService.CategoryNames">
      <summary vsli:raw="Gets the names of all the tool categories currently on the toolbox.">取得目前在工具箱上所有工具分類的名稱。</summary>
      <returns vsli:raw="A &lt;see cref=&quot;T:System.Drawing.Design.CategoryNameCollection&quot; /&gt; containing the tool categories.">包含工具分類的 <see cref="T:System.Drawing.Design.CategoryNameCollection" />。</returns>
    </member>
    <member name="P:System.Drawing.Design.IToolboxService.SelectedCategory">
      <summary vsli:raw="Gets or sets the name of the currently selected tool category from the toolbox.">從工具箱取得或設定目前選取的工具分類名稱。</summary>
      <returns vsli:raw="The name of the currently selected category.">目前選取之分類的名稱。</returns>
    </member>
    <member name="T:System.Drawing.Design.IToolboxUser">
      <summary vsli:raw="Defines an interface for setting the currently selected toolbox item and indicating whether a designer supports a particular toolbox item.">定義介面，用來設定目前選取的工具箱項目並指示設計工具是否支援特定的工具箱項目。</summary>
    </member>
    <member name="M:System.Drawing.Design.IToolboxUser.GetToolSupported(System.Drawing.Design.ToolboxItem)">
      <summary vsli:raw="Gets a value indicating whether the specified tool is supported by the current designer.">取得值，表示目前的設計工具是否支援指定的工具。</summary>
      <param name="tool" vsli:raw="The &lt;see cref=&quot;T:System.Drawing.Design.ToolboxItem&quot; /&gt; to be tested for toolbox support.">要測試工具箱支援的 <see cref="T:System.Drawing.Design.ToolboxItem" />。</param>
      <returns vsli:raw="&lt;see langword=&quot;true&quot; /&gt; if the tool is supported by the toolbox and can be enabled; &lt;see langword=&quot;false&quot; /&gt; if the document designer does not know how to use the tool.">如果工具箱支援工具並且可以啟用，則為 <see langword="true" />；如果文件設計工具不知道使用工具的方式，則為 <see langword="false" />。</returns>
    </member>
    <member name="M:System.Drawing.Design.IToolboxUser.ToolPicked(System.Drawing.Design.ToolboxItem)">
      <summary vsli:raw="Selects the specified tool.">選取指定的工具。</summary>
      <param name="tool" vsli:raw="The &lt;see cref=&quot;T:System.Drawing.Design.ToolboxItem&quot; /&gt; to select.">要選取的 <see cref="T:System.Drawing.Design.ToolboxItem" />。</param>
    </member>
    <member name="T:System.Drawing.Design.MetafileEditor">
      <summary vsli:raw="Provides a &lt;see cref=&quot;T:System.Drawing.Design.UITypeEditor&quot; /&gt; that can perform default file searching for metafile (.emf) files.">提供 <see cref="T:System.Drawing.Design.UITypeEditor" />，它可以執行中繼檔 (.emf) 的預設檔案搜尋。</summary>
    </member>
    <member name="M:System.Drawing.Design.MetafileEditor.#ctor">
      <summary vsli:raw="Initializes a new instance of the &lt;see cref=&quot;T:System.Drawing.Design.MetafileEditor&quot; /&gt; class.">初始化 <see cref="T:System.Drawing.Design.MetafileEditor" /> 類別的新執行個體。</summary>
    </member>
    <member name="M:System.Drawing.Design.MetafileEditor.GetExtensions">
      <summary vsli:raw="Gets the extensions for the file-list filter that this editor initially uses to filter the file list.">取得檔案清單篩選條件的副檔名，其為此編輯器一開始篩選檔案清單所使用。</summary>
      <returns vsli:raw="A set of file extensions used to filter the file list.">用來篩選檔案清單的檔案副檔名集合。</returns>
    </member>
    <member name="M:System.Drawing.Design.MetafileEditor.GetFileDialogDescription">
      <summary vsli:raw="Gets the description for the default file-list filter provided by this editor.">取得這個編輯器所提供的預設檔案清單篩選條件的描述。</summary>
      <returns vsli:raw="The description for the default file-list filter.">預設檔案清單篩選條件的描述。</returns>
    </member>
    <member name="M:System.Drawing.Design.MetafileEditor.LoadFromStream(System.IO.Stream)">
      <summary vsli:raw="Loads an image from the specified stream.">從指定的資料流載入影像。</summary>
      <param name="stream" vsli:raw="A &lt;see cref=&quot;T:System.IO.Stream&quot; /&gt; that contains the image to load.">包含要載入影像的 <see cref="T:System.IO.Stream" />。</param>
      <returns vsli:raw="The &lt;see cref=&quot;T:System.Drawing.Image&quot; /&gt; that has been loaded.">已載入的 <see cref="T:System.Drawing.Image" />。</returns>
    </member>
    <member name="T:System.Drawing.Design.ToolboxComponentsCreatedEventArgs">
      <summary vsli:raw="Provides data for the &lt;see cref=&quot;E:System.Drawing.Design.ToolboxItem.ComponentsCreated&quot; /&gt; event that occurs when components are added to the toolbox.">提供元件加入工具箱時發生的 <see cref="E:System.Drawing.Design.ToolboxItem.ComponentsCreated" /> 事件的資料。</summary>
    </member>
    <member name="M:System.Drawing.Design.ToolboxComponentsCreatedEventArgs.#ctor(System.ComponentModel.IComponent[])">
      <summary vsli:raw="Initializes a new instance of the &lt;see cref=&quot;T:System.Drawing.Design.ToolboxComponentsCreatedEventArgs&quot; /&gt; class.">初始化 <see cref="T:System.Drawing.Design.ToolboxComponentsCreatedEventArgs" /> 類別的新執行個體。</summary>
      <param name="components" vsli:raw="The components to include in the toolbox.">要包含在工具箱的元件。</param>
    </member>
    <member name="P:System.Drawing.Design.ToolboxComponentsCreatedEventArgs.Components">
      <summary vsli:raw="Gets or sets an array containing the components to add to the toolbox.">取得或設定包含要加入工具箱的元件的陣列。</summary>
      <returns vsli:raw="An array of type &lt;see cref=&quot;T:System.ComponentModel.IComponent&quot; /&gt; indicating the components to add to the toolbox.">
        <see cref="T:System.ComponentModel.IComponent" /> 型別的陣列，表示要加入工具箱的元件。</returns>
    </member>
    <member name="T:System.Drawing.Design.ToolboxComponentsCreatedEventHandler">
      <summary vsli:raw="Represents the method that handles the &lt;see cref=&quot;E:System.Drawing.Design.ToolboxItem.ComponentsCreated&quot; /&gt; event.">代表處理 <see cref="E:System.Drawing.Design.ToolboxItem.ComponentsCreated" /> 事件的方法。</summary>
      <param name="sender" vsli:raw="The source of the event.">事件的來源。</param>
      <param name="e" vsli:raw="A &lt;see cref=&quot;T:System.Drawing.Design.ToolboxComponentsCreatedEventArgs&quot; /&gt; that provides data for the event.">提供事件資料的 <see cref="T:System.Drawing.Design.ToolboxComponentsCreatedEventArgs" />。</param>
    </member>
    <member name="T:System.Drawing.Design.ToolboxComponentsCreatingEventArgs">
      <summary vsli:raw="Provides data for the &lt;see cref=&quot;E:System.Drawing.Design.ToolboxItem.ComponentsCreating&quot; /&gt; event that occurs when components are added to the toolbox.">提供元件加入工具箱時發生的 <see cref="E:System.Drawing.Design.ToolboxItem.ComponentsCreating" /> 事件的資料。</summary>
    </member>
    <member name="M:System.Drawing.Design.ToolboxComponentsCreatingEventArgs.#ctor(System.ComponentModel.Design.IDesignerHost)">
      <summary vsli:raw="Initializes a new instance of the &lt;see cref=&quot;T:System.Drawing.Design.ToolboxComponentsCreatingEventArgs&quot; /&gt; class.">初始化 <see cref="T:System.Drawing.Design.ToolboxComponentsCreatingEventArgs" /> 類別的新執行個體。</summary>
      <param name="host" vsli:raw="The designer host that is making the request.">提出要求的設計工具主應用程式 (Designer Host)。</param>
    </member>
    <member name="P:System.Drawing.Design.ToolboxComponentsCreatingEventArgs.DesignerHost">
      <summary vsli:raw="Gets or sets an instance of the &lt;see cref=&quot;T:System.ComponentModel.Design.IDesignerHost&quot; /&gt; that made the request to create toolbox components.">取得或設定要求建立工具箱元件的 <see cref="T:System.ComponentModel.Design.IDesignerHost" /> 的執行個體。</summary>
      <returns vsli:raw="The &lt;see cref=&quot;T:System.ComponentModel.Design.IDesignerHost&quot; /&gt; that made the request to create toolbox components, or &lt;see langword=&quot;null&quot; /&gt; if no designer host was provided to the toolbox item.">要求建立工具箱元件的 <see cref="T:System.ComponentModel.Design.IDesignerHost" />；如果未提供設計工具主應用程式給工具箱項目，則為 <see langword="null" />。</returns>
    </member>
    <member name="T:System.Drawing.Design.ToolboxComponentsCreatingEventHandler">
      <summary vsli:raw="Represents the method that handles the &lt;see cref=&quot;E:System.Drawing.Design.ToolboxItem.ComponentsCreating&quot; /&gt; event.">代表處理 <see cref="E:System.Drawing.Design.ToolboxItem.ComponentsCreating" /> 事件的方法。</summary>
      <param name="sender" vsli:raw="The source of the event.">事件的來源。</param>
      <param name="e" vsli:raw="A &lt;see cref=&quot;T:System.Drawing.Design.ToolboxComponentsCreatingEventArgs&quot; /&gt; that provides data for the event.">提供事件資料的 <see cref="T:System.Drawing.Design.ToolboxComponentsCreatingEventArgs" />。</param>
    </member>
    <member name="T:System.Drawing.Design.ToolboxItem">
      <summary vsli:raw="Provides a base implementation of a toolbox item.">提供工具箱項目的基底實作。</summary>
    </member>
    <member name="E:System.Drawing.Design.ToolboxItem.ComponentsCreated">
      <summary vsli:raw="Occurs immediately after components are created.">立即發生於建立元件之後。</summary>
    </member>
    <member name="E:System.Drawing.Design.ToolboxItem.ComponentsCreating">
      <summary vsli:raw="Occurs when components are about to be created.">發生於即將建立元件時。</summary>
    </member>
    <member name="M:System.Drawing.Design.ToolboxItem.#ctor">
      <summary vsli:raw="Initializes a new instance of the &lt;see cref=&quot;T:System.Drawing.Design.ToolboxItem&quot; /&gt; class.">初始化 <see cref="T:System.Drawing.Design.ToolboxItem" /> 類別的新執行個體。</summary>
    </member>
    <member name="M:System.Drawing.Design.ToolboxItem.#ctor(System.Type)">
      <summary vsli:raw="Initializes a new instance of the &lt;see cref=&quot;T:System.Drawing.Design.ToolboxItem&quot; /&gt; class that creates the specified type of component.">初始化 <see cref="T:System.Drawing.Design.ToolboxItem" /> 類別的新執行個體，以建立元件的指定型別。</summary>
      <param name="toolType" vsli:raw="The type of &lt;see cref=&quot;T:System.ComponentModel.IComponent&quot; /&gt; that the toolbox item creates.">工具箱項目建立的 <see cref="T:System.ComponentModel.IComponent" /> 型別。</param>
      <exception cref="T:System.InvalidOperationException" vsli:raw="The &lt;see cref=&quot;T:System.Drawing.Design.ToolboxItem&quot; /&gt; was locked.">
        <see cref="T:System.Drawing.Design.ToolboxItem" /> 是鎖定的。</exception>
    </member>
    <member name="M:System.Drawing.Design.ToolboxItem.CheckUnlocked">
      <summary vsli:raw="Throws an exception if the toolbox item is currently locked.">如果工具箱項目目前是鎖定的，則會擲回例外狀況。</summary>
      <exception cref="T:System.InvalidOperationException" vsli:raw="The &lt;see cref=&quot;T:System.Drawing.Design.ToolboxItem&quot; /&gt; is locked.">
        <see cref="T:System.Drawing.Design.ToolboxItem" /> 已鎖定。</exception>
    </member>
    <member name="M:System.Drawing.Design.ToolboxItem.CreateComponents">
      <summary vsli:raw="Creates the components that the toolbox item is configured to create.">建立工具箱項目受到設定要建立的元件。</summary>
      <returns vsli:raw="An array of created &lt;see cref=&quot;T:System.ComponentModel.IComponent&quot; /&gt; objects.">建立的 <see cref="T:System.ComponentModel.IComponent" /> 物件的陣列。</returns>
    </member>
    <member name="M:System.Drawing.Design.ToolboxItem.CreateComponents(System.ComponentModel.Design.IDesignerHost)">
      <summary vsli:raw="Creates the components that the toolbox item is configured to create, using the specified designer host.">使用指定的設計工具主應用程式 (Designer Host)，建立工具箱項目受到設定要建立的元件。</summary>
      <param name="host" vsli:raw="The &lt;see cref=&quot;T:System.ComponentModel.Design.IDesignerHost&quot; /&gt; to use when creating the components.">建立元件時要使用的 <see cref="T:System.ComponentModel.Design.IDesignerHost" />。</param>
      <returns vsli:raw="An array of created &lt;see cref=&quot;T:System.ComponentModel.IComponent&quot; /&gt; objects.">建立的 <see cref="T:System.ComponentModel.IComponent" /> 物件的陣列。</returns>
    </member>
    <member name="M:System.Drawing.Design.ToolboxItem.CreateComponents(System.ComponentModel.Design.IDesignerHost,System.Collections.IDictionary)">
      <summary vsli:raw="Creates the components that the toolbox item is configured to create, using the specified designer host and default values.">使用指定的設計工具主應用程式 (Designer Host) 和預設值，建立工具箱項目設定為要建立的元件。</summary>
      <param name="host" vsli:raw="The &lt;see cref=&quot;T:System.ComponentModel.Design.IDesignerHost&quot; /&gt; to use when creating the components.">建立元件時要使用的 <see cref="T:System.ComponentModel.Design.IDesignerHost" />。</param>
      <param name="defaultValues" vsli:raw="A dictionary of property name/value pairs of default values with which to initialize the component.">預設值的屬性名稱/值組字典，用於初始化元件。</param>
      <returns vsli:raw="An array of created &lt;see cref=&quot;T:System.ComponentModel.IComponent&quot; /&gt; objects.">建立的 <see cref="T:System.ComponentModel.IComponent" /> 物件的陣列。</returns>
    </member>
    <member name="M:System.Drawing.Design.ToolboxItem.CreateComponentsCore(System.ComponentModel.Design.IDesignerHost)">
      <summary vsli:raw="Creates a component or an array of components when the toolbox item is invoked.">建立元件或叫用工具箱項目時要使用之元件的陣列。</summary>
      <param name="host" vsli:raw="The &lt;see cref=&quot;T:System.ComponentModel.Design.IDesignerHost&quot; /&gt; to host the toolbox item.">用來裝載工具箱項目的 <see cref="T:System.ComponentModel.Design.IDesignerHost" />。</param>
      <returns vsli:raw="An array of created &lt;see cref=&quot;T:System.ComponentModel.IComponent&quot; /&gt; objects.">建立的 <see cref="T:System.ComponentModel.IComponent" /> 物件的陣列。</returns>
    </member>
    <member name="M:System.Drawing.Design.ToolboxItem.CreateComponentsCore(System.ComponentModel.Design.IDesignerHost,System.Collections.IDictionary)">
      <summary vsli:raw="Creates an array of components when the toolbox item is invoked.">在叫用工具箱項目時建立元件陣列。</summary>
      <param name="host" vsli:raw="The designer host to use when creating components.">建立元件時要使用的設計工具主應用程式。</param>
      <param name="defaultValues" vsli:raw="A dictionary of property name/value pairs of default values with which to initialize the component.">預設值的屬性名稱/值組字典，用於初始化元件。</param>
      <returns vsli:raw="An array of created &lt;see cref=&quot;T:System.ComponentModel.IComponent&quot; /&gt; objects.">建立的 <see cref="T:System.ComponentModel.IComponent" /> 物件的陣列。</returns>
    </member>
    <member name="M:System.Drawing.Design.ToolboxItem.Deserialize(System.Runtime.Serialization.SerializationInfo,System.Runtime.Serialization.StreamingContext)">
      <summary vsli:raw="Loads the state of the toolbox item from the specified serialization information object.">從指定的序列化資訊物件載入工具箱項目的狀態。</summary>
      <param name="info" vsli:raw="The &lt;see cref=&quot;T:System.Runtime.Serialization.SerializationInfo&quot; /&gt; to load from.">做為載入來源的 <see cref="T:System.Runtime.Serialization.SerializationInfo" />。</param>
      <param name="context" vsli:raw="A &lt;see cref=&quot;T:System.Runtime.Serialization.StreamingContext&quot; /&gt; that indicates the stream characteristics.">
        <see cref="T:System.Runtime.Serialization.StreamingContext" />，表示資料流的特性。</param>
    </member>
    <member name="M:System.Drawing.Design.ToolboxItem.Equals(System.Object)">
      <summary vsli:raw="Determines whether two &lt;see cref=&quot;T:System.Drawing.Design.ToolboxItem&quot; /&gt; instances are equal.">判斷兩個 <see cref="T:System.Drawing.Design.ToolboxItem" /> 執行個體是否相等。</summary>
      <param name="obj" vsli:raw="The &lt;see cref=&quot;T:System.Drawing.Design.ToolboxItem&quot; /&gt; to compare with the current &lt;see cref=&quot;T:System.Drawing.Design.ToolboxItem&quot; /&gt;.">與目前的 <see cref="T:System.Drawing.Design.ToolboxItem" /> 相比較的 <see cref="T:System.Drawing.Design.ToolboxItem" />。</param>
      <returns vsli:raw="&lt;see langword=&quot;true&quot; /&gt; if the specified &lt;see cref=&quot;T:System.Drawing.Design.ToolboxItem&quot; /&gt; is equal to the current &lt;see cref=&quot;T:System.Drawing.Design.ToolboxItem&quot; /&gt;; otherwise, &lt;see langword=&quot;false&quot; /&gt;.">如果指定的 <see cref="T:System.Drawing.Design.ToolboxItem" /> 和目前的 <see cref="T:System.Drawing.Design.ToolboxItem" /> 相等，則為 <see langword="true" />；否則為 <see langword="false" />。</returns>
    </member>
    <member name="M:System.Drawing.Design.ToolboxItem.FilterPropertyValue(System.String,System.Object)">
      <summary vsli:raw="Filters a property value before returning it.">在傳回前篩選屬性值。</summary>
      <param name="propertyName" vsli:raw="The name of the property to filter.">要篩選的屬性名稱。</param>
      <param name="value" vsli:raw="The value against which to filter the property.">篩選屬性時要根據的值。</param>
      <returns vsli:raw="A filtered property value.">篩選的屬性值。</returns>
    </member>
    <member name="M:System.Drawing.Design.ToolboxItem.GetHashCode">
      <summary vsli:raw="Returns the hash code for this instance.">傳回這個執行個體的雜湊碼。</summary>
      <returns vsli:raw="A hash code for the current &lt;see cref=&quot;T:System.Drawing.Design.ToolboxItem&quot; /&gt;.">目前 <see cref="T:System.Drawing.Design.ToolboxItem" /> 的雜湊碼。</returns>
    </member>
    <member name="M:System.Drawing.Design.ToolboxItem.GetType(System.ComponentModel.Design.IDesignerHost)">
      <summary vsli:raw="Enables access to the type associated with the toolbox item.">啟用對與工具箱項目關聯之類型的存取。</summary>
      <param name="host" vsli:raw="The designer host to query for &lt;see cref=&quot;T:System.ComponentModel.Design.ITypeResolutionService&quot; /&gt;.">要查詢 <see cref="T:System.ComponentModel.Design.ITypeResolutionService" /> 的設計工具主應用程式。</param>
      <returns vsli:raw="The type associated with the toolbox item.">與工具箱項目關聯的類型。</returns>
    </member>
    <member name="M:System.Drawing.Design.ToolboxItem.GetType(System.ComponentModel.Design.IDesignerHost,System.Reflection.AssemblyName,System.String,System.Boolean)">
      <summary vsli:raw="Creates an instance of the specified type, optionally using a specified designer host and assembly name.">建立指定類型的執行個體，並選擇性使用指定的設計工具主應用程式和組件名稱。</summary>
      <param name="host" vsli:raw="The &lt;see cref=&quot;T:System.ComponentModel.Design.IDesignerHost&quot; /&gt; for the current document. This can be &lt;see langword=&quot;null&quot; /&gt;.">目前文件的 <see cref="T:System.ComponentModel.Design.IDesignerHost" />。 這可以是 <see langword="null" />。</param>
      <param name="assemblyName" vsli:raw="An &lt;see cref=&quot;T:System.Reflection.AssemblyName&quot; /&gt; that indicates the assembly that contains the type to load. This can be &lt;see langword=&quot;null&quot; /&gt;.">
        <see cref="T:System.Reflection.AssemblyName" />，指出包含要載入型別的組件。 這可以是 <see langword="null" />。</param>
      <param name="typeName" vsli:raw="The name of the type to create an instance of.">要建立執行個體的型別名稱。</param>
      <param name="reference" vsli:raw="A value indicating whether or not to add a reference to the assembly that contains the specified type to the designer host's set of references.">指示是否將參考加入組件的值，該組件包含設計工具主應用程式的參考集的指定類型。</param>
      <exception cref="T:System.ArgumentNullException" vsli:raw="&lt;paramref name=&quot;typeName&quot; /&gt; is not specified.">
        <paramref name="typeName" /> 未指定。</exception>
      <returns vsli:raw="An instance of the specified type, if it can be located.">如果可以找到，則為指定類型的執行個體。</returns>
    </member>
    <member name="M:System.Drawing.Design.ToolboxItem.Initialize(System.Type)">
      <summary vsli:raw="Initializes the current toolbox item with the specified type to create.">使用要建立的指定類型來初始化目前工具箱項目。</summary>
      <param name="type" vsli:raw="The &lt;see cref=&quot;T:System.Type&quot; /&gt; that the toolbox item creates.">工具箱項目建立的 <see cref="T:System.Type" />。</param>
      <exception cref="T:System.InvalidOperationException" vsli:raw="The &lt;see cref=&quot;T:System.Drawing.Design.ToolboxItem&quot; /&gt; was locked.">
        <see cref="T:System.Drawing.Design.ToolboxItem" /> 是鎖定的。</exception>
    </member>
    <member name="M:System.Drawing.Design.ToolboxItem.Lock">
      <summary vsli:raw="Locks the toolbox item and prevents changes to its properties.">鎖定工具箱項目並防止變更其屬性。</summary>
    </member>
    <member name="M:System.Drawing.Design.ToolboxItem.OnComponentsCreated(System.Drawing.Design.ToolboxComponentsCreatedEventArgs)">
      <summary vsli:raw="Raises the &lt;see cref=&quot;E:System.Drawing.Design.ToolboxItem.ComponentsCreated&quot; /&gt; event.">引發 <see cref="E:System.Drawing.Design.ToolboxItem.ComponentsCreated" /> 事件。</summary>
      <param name="args" vsli:raw="A &lt;see cref=&quot;T:System.Drawing.Design.ToolboxComponentsCreatedEventArgs&quot; /&gt; that provides data for the event.">提供事件資料的 <see cref="T:System.Drawing.Design.ToolboxComponentsCreatedEventArgs" />。</param>
    </member>
    <member name="M:System.Drawing.Design.ToolboxItem.OnComponentsCreating(System.Drawing.Design.ToolboxComponentsCreatingEventArgs)">
      <summary vsli:raw="Raises the &lt;see cref=&quot;E:System.Drawing.Design.ToolboxItem.ComponentsCreating&quot; /&gt; event.">引發 <see cref="E:System.Drawing.Design.ToolboxItem.ComponentsCreating" /> 事件。</summary>
      <param name="args" vsli:raw="A &lt;see cref=&quot;T:System.Drawing.Design.ToolboxComponentsCreatingEventArgs&quot; /&gt; that provides data for the event.">提供事件資料的 <see cref="T:System.Drawing.Design.ToolboxComponentsCreatingEventArgs" />。</param>
    </member>
    <member name="M:System.Drawing.Design.ToolboxItem.Serialize(System.Runtime.Serialization.SerializationInfo,System.Runtime.Serialization.StreamingContext)">
      <summary vsli:raw="Saves the state of the toolbox item to the specified serialization information object.">將工具箱項目的狀態儲存到指定的序列化資訊物件。</summary>
      <param name="info" vsli:raw="The &lt;see cref=&quot;T:System.Runtime.Serialization.SerializationInfo&quot; /&gt; to save to.">要儲存的目標 <see cref="T:System.Runtime.Serialization.SerializationInfo" />。</param>
      <param name="context" vsli:raw="A &lt;see cref=&quot;T:System.Runtime.Serialization.StreamingContext&quot; /&gt; that indicates the stream characteristics.">
        <see cref="T:System.Runtime.Serialization.StreamingContext" />，表示資料流的特性。</param>
    </member>
    <member name="M:System.Drawing.Design.ToolboxItem.System#Runtime#Serialization#ISerializable#GetObjectData(System.Runtime.Serialization.SerializationInfo,System.Runtime.Serialization.StreamingContext)">
      <summary vsli:raw="For a description of this member, see the &lt;see cref=&quot;M:System.Runtime.Serialization.ISerializable.GetObjectData(System.Runtime.Serialization.SerializationInfo,System.Runtime.Serialization.StreamingContext)&quot; /&gt; method.">如需這個成員的描述，請參閱 <see cref="M:System.Runtime.Serialization.ISerializable.GetObjectData(System.Runtime.Serialization.SerializationInfo,System.Runtime.Serialization.StreamingContext)" /> 方法。</summary>
      <param name="info" vsli:raw="The &lt;see cref=&quot;T:System.Runtime.Serialization.SerializationInfo&quot; /&gt; to populate with data.">要以資料填入的 <see cref="T:System.Runtime.Serialization.SerializationInfo" />。</param>
      <param name="context" vsli:raw="The destination (see &lt;see cref=&quot;T:System.Runtime.Serialization.StreamingContext&quot; /&gt;) for this serialization.">這個序列化的目的端 (請參閱 <see cref="T:System.Runtime.Serialization.StreamingContext" />)。</param>
    </member>
    <member name="M:System.Drawing.Design.ToolboxItem.ToString">
      <summary vsli:raw="Returns a &lt;see cref=&quot;T:System.String&quot; /&gt; that represents the current &lt;see cref=&quot;T:System.Drawing.Design.ToolboxItem&quot; /&gt;.">傳回代表目前 <see cref="T:System.Drawing.Design.ToolboxItem" /> 的 <see cref="T:System.String" />。</summary>
      <returns vsli:raw="A &lt;see cref=&quot;T:System.String&quot; /&gt; that represents the current &lt;see cref=&quot;T:System.Drawing.Design.ToolboxItem&quot; /&gt;.">
        <see cref="T:System.String" />，代表示目前的 <see cref="T:System.Drawing.Design.ToolboxItem" />。</returns>
    </member>
    <member name="M:System.Drawing.Design.ToolboxItem.ValidatePropertyType(System.String,System.Object,System.Type,System.Boolean)">
      <summary vsli:raw="Validates that an object is of a given type.">驗證物件是否為指定類型。</summary>
      <param name="propertyName" vsli:raw="The name of the property to validate.">要驗證的屬性名稱。</param>
      <param name="value" vsli:raw="Optional value against which to validate.">驗證時要根據的選擇性值。</param>
      <param name="expectedType" vsli:raw="The expected type of the property.">屬性的預期類型。</param>
      <param name="allowNull" vsli:raw="&lt;see langword=&quot;true&quot; /&gt; to allow &lt;see langword=&quot;null&quot; /&gt;; otherwise, &lt;see langword=&quot;false&quot; /&gt;.">若要允許 <see langword="true" /> 則為 <see langword="null" />，否則為 <see langword="false" />。</param>
      <exception cref="T:System.ArgumentNullException" vsli:raw="&lt;paramref name=&quot;value&quot; /&gt; is &lt;see langword=&quot;null&quot; /&gt;, and &lt;paramref name=&quot;allowNull&quot; /&gt; is &lt;see langword=&quot;false&quot; /&gt;.">
        <paramref name="value" /> 為 <see langword="null" />，而 <paramref name="allowNull" /> 為 <see langword="false" />。</exception>
      <exception cref="T:System.ArgumentException" vsli:raw="&lt;paramref name=&quot;value&quot; /&gt; is not the type specified by &lt;paramref name=&quot;expectedType&quot; /&gt;.">
        <paramref name="value" /> 不是 <paramref name="expectedType" /> 所指定的型別。</exception>
    </member>
    <member name="M:System.Drawing.Design.ToolboxItem.ValidatePropertyValue(System.String,System.Object)">
      <summary vsli:raw="Validates a property before it is assigned to the property dictionary.">將屬性指派給屬性字典前驗證屬性。</summary>
      <param name="propertyName" vsli:raw="The name of the property to validate.">要驗證的屬性名稱。</param>
      <param name="value" vsli:raw="The value against which to validate.">驗證時要根據的值。</param>
      <exception cref="T:System.ArgumentNullException" vsli:raw="&lt;paramref name=&quot;value&quot; /&gt; is &lt;see langword=&quot;null&quot; /&gt;, and &lt;paramref name=&quot;propertyName&quot; /&gt; is &quot;IsTransient&quot;.">
        <paramref name="value" /> 為 <see langword="null" />，而 <paramref name="propertyName" /> 為 "IsTransient"。</exception>
      <returns vsli:raw="The value used to perform validation.">用於執行驗證的值。</returns>
    </member>
    <member name="P:System.Drawing.Design.ToolboxItem.AssemblyName">
      <summary vsli:raw="Gets or sets the name of the assembly that contains the type or types that the toolbox item creates.">取得或設定組件的名稱，該組件包含類型或工具箱項目所建立的類型。</summary>
      <returns vsli:raw="An &lt;see cref=&quot;T:System.Reflection.AssemblyName&quot; /&gt; that indicates the assembly containing the type or types to create.">
        <see cref="T:System.Reflection.AssemblyName" />，表示包含型別或型別所要建立的組件。</returns>
    </member>
    <member name="P:System.Drawing.Design.ToolboxItem.Bitmap">
      <summary vsli:raw="Gets or sets a bitmap to represent the toolbox item in the toolbox.">取得或設定點陣圖，表示工具箱中的工具箱項目。</summary>
      <returns vsli:raw="A &lt;see cref=&quot;T:System.Drawing.Bitmap&quot; /&gt; that represents the toolbox item in the toolbox.">
        <see cref="T:System.Drawing.Bitmap" /> 表示工具箱中的工具箱項目。</returns>
    </member>
    <member name="P:System.Drawing.Design.ToolboxItem.Company">
      <summary vsli:raw="Gets or sets the company name for this &lt;see cref=&quot;T:System.Drawing.Design.ToolboxItem&quot; /&gt;.">取得或設定這個 <see cref="T:System.Drawing.Design.ToolboxItem" /> 的公司名稱。</summary>
      <returns vsli:raw="A &lt;see cref=&quot;T:System.String&quot; /&gt; that specifies the company for this &lt;see cref=&quot;T:System.Drawing.Design.ToolboxItem&quot; /&gt;.">
        <see cref="T:System.String" />，指定這個 <see cref="T:System.Drawing.Design.ToolboxItem" /> 的公司。</returns>
    </member>
    <member name="P:System.Drawing.Design.ToolboxItem.ComponentType">
      <summary vsli:raw="Gets the component type for this &lt;see cref=&quot;T:System.Drawing.Design.ToolboxItem&quot; /&gt;.">取得這個 <see cref="T:System.Drawing.Design.ToolboxItem" /> 的元件型別。</summary>
      <returns vsli:raw="A &lt;see cref=&quot;T:System.String&quot; /&gt; that specifies the component type for this &lt;see cref=&quot;T:System.Drawing.Design.ToolboxItem&quot; /&gt;.">
        <see cref="T:System.String" />，指定這個 <see cref="T:System.Drawing.Design.ToolboxItem" /> 的元件型別。</returns>
    </member>
    <member name="P:System.Drawing.Design.ToolboxItem.DependentAssemblies">
      <summary vsli:raw="Gets or sets the &lt;see cref=&quot;T:System.Reflection.AssemblyName&quot; /&gt; for the toolbox item.">取得或設定工具箱項目的 <see cref="T:System.Reflection.AssemblyName" />。</summary>
      <returns vsli:raw="An array of &lt;see cref=&quot;T:System.Reflection.AssemblyName&quot; /&gt; objects.">
        <see cref="T:System.Reflection.AssemblyName" /> 物件的陣列。</returns>
    </member>
    <member name="P:System.Drawing.Design.ToolboxItem.Description">
      <summary vsli:raw="Gets or sets the description for this &lt;see cref=&quot;T:System.Drawing.Design.ToolboxItem&quot; /&gt;.">取得或設定這個 <see cref="T:System.Drawing.Design.ToolboxItem" /> 的描述。</summary>
      <returns vsli:raw="A &lt;see cref=&quot;T:System.String&quot; /&gt; that specifies the description for this &lt;see cref=&quot;T:System.Drawing.Design.ToolboxItem&quot; /&gt;.">
        <see cref="T:System.String" />，指定這個 <see cref="T:System.Drawing.Design.ToolboxItem" /> 的描述。</returns>
    </member>
    <member name="P:System.Drawing.Design.ToolboxItem.DisplayName">
      <summary vsli:raw="Gets or sets the display name for the toolbox item.">取得或設定工具箱項目的顯示名稱。</summary>
      <returns vsli:raw="The display name for the toolbox item.">工具箱項目的顯示名稱。</returns>
    </member>
    <member name="P:System.Drawing.Design.ToolboxItem.Filter">
      <summary vsli:raw="Gets or sets the filter that determines whether the toolbox item can be used on a destination component.">取得或設定篩選條件，判斷工具箱項目是否可以在目的元件上使用。</summary>
      <returns vsli:raw="An &lt;see cref=&quot;T:System.Collections.ICollection&quot; /&gt; of &lt;see cref=&quot;T:System.ComponentModel.ToolboxItemFilterAttribute&quot; /&gt; objects.">
        <see cref="T:System.Collections.ICollection" /> 物件的 <see cref="T:System.ComponentModel.ToolboxItemFilterAttribute" />。</returns>
    </member>
    <member name="P:System.Drawing.Design.ToolboxItem.IsTransient">
      <summary vsli:raw="Gets a value indicating whether the toolbox item is transient.">取得值，指出工具箱項目是否為暫時性 (Transient)。</summary>
      <returns vsli:raw="&lt;see langword=&quot;true&quot; /&gt;, if this toolbox item should not be stored in any toolbox database when an application that is providing a toolbox closes; otherwise, &lt;see langword=&quot;false&quot; /&gt;.">當提供工具箱的應用程式關閉時，如果這個工具箱項目不應儲存在任何工具箱資料庫中，則為 <see langword="true" />，否則為 <see langword="false" />。</returns>
    </member>
    <member name="P:System.Drawing.Design.ToolboxItem.Locked">
      <summary vsli:raw="Gets a value indicating whether the &lt;see cref=&quot;T:System.Drawing.Design.ToolboxItem&quot; /&gt; is currently locked.">取得值，指出 <see cref="T:System.Drawing.Design.ToolboxItem" /> 目前是否已鎖定。</summary>
      <returns vsli:raw="&lt;see langword=&quot;true&quot; /&gt; if the toolbox item is locked; otherwise, &lt;see langword=&quot;false&quot; /&gt;.">如果工具箱項目被鎖定，則為 <see langword="true" />，否則為 <see langword="false" />。</returns>
    </member>
    <member name="P:System.Drawing.Design.ToolboxItem.OriginalBitmap">
      <summary vsli:raw="Gets or sets the original bitmap that will be used in the toolbox for this item.">取得或設定此項目工具箱中將使用的原始點陣圖。</summary>
      <returns vsli:raw="A &lt;see cref=&quot;T:System.Drawing.Bitmap&quot; /&gt; that represents the toolbox item in the toolbox.">
        <see cref="T:System.Drawing.Bitmap" /> 表示工具箱中的工具箱項目。</returns>
    </member>
    <member name="P:System.Drawing.Design.ToolboxItem.Properties">
      <summary vsli:raw="Gets a dictionary of properties.">取得屬性的字典。</summary>
      <returns vsli:raw="A dictionary of name/value pairs (the names are property names and the values are property values).">名稱/值組的字典 (名稱為屬性名稱，值為屬性值)。</returns>
    </member>
    <member name="P:System.Drawing.Design.ToolboxItem.TypeName">
      <summary vsli:raw="Gets or sets the fully qualified name of the type of &lt;see cref=&quot;T:System.ComponentModel.IComponent&quot; /&gt; that the toolbox item creates when invoked.">取得或設定叫用工具箱項目時所建立的 <see cref="T:System.ComponentModel.IComponent" /> 的型別完整名稱。</summary>
      <returns vsli:raw="The fully qualified type name of the type of component that this toolbox item creates.">元件類型的完整類型名稱，該元件是由這個工具箱項目建立的。</returns>
    </member>
    <member name="P:System.Drawing.Design.ToolboxItem.Version">
      <summary vsli:raw="Gets the version for this &lt;see cref=&quot;T:System.Drawing.Design.ToolboxItem&quot; /&gt;.">取得這個 <see cref="T:System.Drawing.Design.ToolboxItem" /> 的版本。</summary>
      <returns vsli:raw="A &lt;see cref=&quot;T:System.String&quot; /&gt; that specifies the version for this &lt;see cref=&quot;T:System.Drawing.Design.ToolboxItem&quot; /&gt;.">
        <see cref="T:System.String" />，指定這個 <see cref="T:System.Drawing.Design.ToolboxItem" /> 的版本。</returns>
    </member>
    <member name="T:System.Drawing.Design.ToolboxItemCollection">
      <summary vsli:raw="Represents a collection of toolbox items.">表示工具箱項目的集合。</summary>
    </member>
    <member name="M:System.Drawing.Design.ToolboxItemCollection.#ctor(System.Drawing.Design.ToolboxItem[])">
      <summary vsli:raw="Initializes a new instance of the &lt;see cref=&quot;T:System.Drawing.Design.ToolboxItemCollection&quot; /&gt; class using the specified array of toolbox items.">使用工具箱項目的指定陣列，初始化 <see cref="T:System.Drawing.Design.ToolboxItemCollection" /> 類別的新執行個體。</summary>
      <param name="value" vsli:raw="An array of type &lt;see cref=&quot;T:System.Drawing.Design.ToolboxItem&quot; /&gt; containing the toolbox items to fill the collection with.">型別 <see cref="T:System.Drawing.Design.ToolboxItem" /> 的陣列，含有要填入集合所用的工具箱項目。</param>
    </member>
    <member name="M:System.Drawing.Design.ToolboxItemCollection.#ctor(System.Drawing.Design.ToolboxItemCollection)">
      <summary vsli:raw="Initializes a new instance of the &lt;see cref=&quot;T:System.Drawing.Design.ToolboxItemCollection&quot; /&gt; class using the specified collection.">使用指定的集合，初始化 <see cref="T:System.Drawing.Design.ToolboxItemCollection" /> 類別的新執行個體。</summary>
      <param name="value" vsli:raw="A &lt;see cref=&quot;T:System.Drawing.Design.ToolboxItemCollection&quot; /&gt; to fill the new collection with.">要填入新集合所用的 <see cref="T:System.Drawing.Design.ToolboxItemCollection" />。</param>
    </member>
    <member name="M:System.Drawing.Design.ToolboxItemCollection.Contains(System.Drawing.Design.ToolboxItem)">
      <summary vsli:raw="Indicates whether the collection contains the specified &lt;see cref=&quot;T:System.Drawing.Design.ToolboxItem&quot; /&gt;.">指出集合是否包含指定的 <see cref="T:System.Drawing.Design.ToolboxItem" />。</summary>
      <param name="value" vsli:raw="A &lt;see cref=&quot;T:System.Drawing.Design.ToolboxItem&quot; /&gt; to search the collection for.">搜尋集合所要找的 <see cref="T:System.Drawing.Design.ToolboxItem" />。</param>
      <returns vsli:raw="&lt;see langword=&quot;true&quot; /&gt; if the collection contains the specified object; otherwise, &lt;see langword=&quot;false&quot; /&gt;.">如果集合包含指定的物件，則為 <see langword="true" />，否則為 <see langword="false" />。</returns>
    </member>
    <member name="M:System.Drawing.Design.ToolboxItemCollection.CopyTo(System.Drawing.Design.ToolboxItem[],System.Int32)">
      <summary vsli:raw="Copies the collection to the specified array beginning with the specified destination index.">將集合複製到以指定目的索引開頭的指定陣列。</summary>
      <param name="array" vsli:raw="The array to copy to.">要複製到其中的陣列。</param>
      <param name="index" vsli:raw="The index to begin copying to.">要開始進行複製的目的索引。</param>
    </member>
    <member name="M:System.Drawing.Design.ToolboxItemCollection.IndexOf(System.Drawing.Design.ToolboxItem)">
      <summary vsli:raw="Gets the index of the specified &lt;see cref=&quot;T:System.Drawing.Design.ToolboxItem&quot; /&gt;, if it exists in the collection.">取得指定 <see cref="T:System.Drawing.Design.ToolboxItem" /> 的索引 (如果存在於集合中)。</summary>
      <param name="value" vsli:raw="A &lt;see cref=&quot;T:System.Drawing.Design.ToolboxItem&quot; /&gt; to get the index of in the collection.">要在集合中取得所屬索引的 <see cref="T:System.Drawing.Design.ToolboxItem" />。</param>
      <returns vsli:raw="The index of the specified &lt;see cref=&quot;T:System.Drawing.Design.ToolboxItem&quot; /&gt;.">指定之 <see cref="T:System.Drawing.Design.ToolboxItem" /> 的索引。</returns>
    </member>
    <member name="P:System.Drawing.Design.ToolboxItemCollection.Item(System.Int32)">
      <summary vsli:raw="Gets the &lt;see cref=&quot;T:System.Drawing.Design.ToolboxItem&quot; /&gt; at the specified index.">取得指定索引處的 <see cref="T:System.Drawing.Design.ToolboxItem" />。</summary>
      <param name="index" vsli:raw="The index of the object to get or set.">要取得或設定的物件索引。</param>
      <returns vsli:raw="A &lt;see cref=&quot;T:System.Drawing.Design.ToolboxItem&quot; /&gt; at each valid index in the collection.">集合中每個有效索引處的 <see cref="T:System.Drawing.Design.ToolboxItem" />。</returns>
    </member>
    <member name="T:System.Drawing.Design.ToolboxItemCreatorCallback">
      <summary vsli:raw="Provides a callback mechanism that can create a &lt;see cref=&quot;T:System.Drawing.Design.ToolboxItem&quot; /&gt;.">提供可以建立 <see cref="T:System.Drawing.Design.ToolboxItem" /> 的回呼 (Callback) 機制。</summary>
      <param name="serializedObject" vsli:raw="The object which contains the data to create a &lt;see cref=&quot;T:System.Drawing.Design.ToolboxItem&quot; /&gt; for.">物件，包含要為之建立 <see cref="T:System.Drawing.Design.ToolboxItem" /> 的資料。</param>
      <param name="format" vsli:raw="The name of the clipboard data format to create a &lt;see cref=&quot;T:System.Drawing.Design.ToolboxItem&quot; /&gt; for.">要為之建立 <see cref="T:System.Drawing.Design.ToolboxItem" /> 的剪貼簿資料格式的名稱。</param>
      <returns vsli:raw="The deserialized &lt;see cref=&quot;T:System.Drawing.Design.ToolboxItem&quot; /&gt; object specified by &lt;paramref name=&quot;serializedObject&quot; /&gt;.">
        <paramref name="serializedObject" /> 所指定之還原序列化的 <see cref="T:System.Drawing.Design.ToolboxItem" /> 物件。</returns>
    </member>
    <member name="T:System.Runtime.InteropServices.UCOMITypeLib">
      <summary vsli:raw="Use &lt;see cref=&quot;T:System.Runtime.InteropServices.ComTypes.ITypeLib&quot; /&gt; instead.">請改用 <see cref="T:System.Runtime.InteropServices.ComTypes.ITypeLib" />。</summary>
    </member>
    <member name="M:System.Runtime.InteropServices.UCOMITypeLib.GetDocumentation(System.Int32,System.String@,System.String@,System.Int32@,System.String@)">
      <summary vsli:raw="Retrieves the library's documentation string, the complete Help file name and path, and the context identifier for the library Help topic in the Help file.">擷取程式庫的文件字串、完整的說明檔名稱和路徑，以及說明檔中程式庫說明主題的主題代碼。</summary>
      <param name="index" vsli:raw="Index of the type description whose documentation is to be returned.">要傳回其文件之型別描述的索引。</param>
      <param name="strName" vsli:raw="Returns a string that contains the name of the specified item.">傳回字串，其包含所指定項目的名稱。</param>
      <param name="strDocString" vsli:raw="Returns a string that contains the documentation string for the specified item.">傳回字串，其包含所指定項目的文件字串。</param>
      <param name="dwHelpContext" vsli:raw="Returns the Help context identifier associated with the specified item.">傳回與所指定項目關聯的說明主題代碼。</param>
      <param name="strHelpFile" vsli:raw="Returns a string that contains the fully qualified name of the Help file.">傳回字串，其包含說明檔的完整名稱。</param>
    </member>
    <member name="M:System.Runtime.InteropServices.UCOMITypeLib.GetLibAttr(System.IntPtr@)">
      <summary vsli:raw="Retrieves the structure that contains the library's attributes.">擷取包含程式庫之屬性 (Attribute) 的結構。</summary>
      <param name="ppTLibAttr" vsli:raw="On successful return, a structure that contains the library's attributes.">在成功傳回時，為包含程式庫之屬性的結構。</param>
    </member>
    <member name="M:System.Runtime.InteropServices.UCOMITypeLib.GetTypeInfoCount">
      <summary vsli:raw="Returns the number of type descriptions in the type library.">傳回型別程式庫中型別描述的數目。</summary>
      <returns vsli:raw="The number of type descriptions in the type library.">型別程式庫中型別描述的數目。</returns>
    </member>
    <member name="M:System.Runtime.InteropServices.UCOMITypeLib.GetTypeInfoType(System.Int32,System.Runtime.InteropServices.ComTypes.TYPEKIND@)">
      <summary vsli:raw="Retrieves the type of a type description.">擷取型別描述的型別。</summary>
      <param name="index" vsli:raw="The index of the type description within the type library.">型別程式庫中型別描述的索引</param>
      <param name="pTKind" vsli:raw="A reference to the &lt;see langword=&quot;TYPEKIND&quot; /&gt; enumeration for the type description.">型別描述的 <see langword="TYPEKIND" /> 列舉型別參考。</param>
    </member>
    <member name="M:System.Runtime.InteropServices.UCOMITypeLib.IsName(System.String,System.Int32)">
      <summary vsli:raw="Indicates whether a passed-in string contains the name of a type or member described in the library.">指示傳入字串是否含有程式庫中所描述型別或成員的名稱。</summary>
      <param name="szNameBuf" vsli:raw="The string to test.">要測試的字串。</param>
      <param name="lHashVal" vsli:raw="The hash value of &lt;paramref name=&quot;szNameBuf&quot; /&gt;.">
        <paramref name="szNameBuf" /> 的雜湊值。</param>
      <returns vsli:raw="&lt;see langword=&quot;true&quot; /&gt; if &lt;paramref name=&quot;szNameBuf&quot; /&gt; was found in the type library; otherwise &lt;see langword=&quot;false&quot; /&gt;.">如果在型別程式庫中找到 <paramref name="szNameBuf" />，則為 <see langword="true" />，否則為 <see langword="false" />。</returns>
    </member>
    <member name="M:System.Runtime.InteropServices.UCOMITypeLib.ReleaseTLibAttr(System.IntPtr)">
      <summary vsli:raw="Releases the &lt;see cref=&quot;T:System.Runtime.InteropServices.TYPELIBATTR&quot; /&gt; originally obtained from &lt;see cref=&quot;M:System.Runtime.InteropServices.UCOMITypeLib.GetLibAttr(System.IntPtr@)&quot; /&gt;.">釋放原來從 <see cref="T:System.Runtime.InteropServices.TYPELIBATTR" /> 取得的 <see cref="M:System.Runtime.InteropServices.UCOMITypeLib.GetLibAttr(System.IntPtr@)" />。</summary>
      <param name="pTLibAttr" vsli:raw="The &lt;see langword=&quot;TLIBATTR&quot; /&gt; to release.">要釋放的 <see langword="TLIBATTR" />。</param>
    </member>
    <member name="T:System.Windows.Forms.Design.AnchorEditor">
      <summary vsli:raw="Provides a user interface for configuring an &lt;see cref=&quot;P:System.Windows.Forms.Control.Anchor&quot; /&gt; property.">提供設定 <see cref="P:System.Windows.Forms.Control.Anchor" /> 屬性的使用者介面。</summary>
    </member>
    <member name="M:System.Windows.Forms.Design.AnchorEditor.#ctor">
      <summary vsli:raw="Initializes a new instance of the &lt;see cref=&quot;T:System.Windows.Forms.Design.AnchorEditor&quot; /&gt; class.">初始化 <see cref="T:System.Windows.Forms.Design.AnchorEditor" /> 類別的新執行個體。</summary>
    </member>
    <member name="M:System.Windows.Forms.Design.AnchorEditor.EditValue(System.ComponentModel.ITypeDescriptorContext,System.IServiceProvider,System.Object)">
      <summary vsli:raw="Edits the value of the specified object using the specified service provider and context.">使用指定服務提供者和內容，編輯指定物件的值。</summary>
      <param name="context" vsli:raw="An &lt;see cref=&quot;T:System.ComponentModel.ITypeDescriptorContext&quot; /&gt; that can be used to gain additional context information.">
        <see cref="T:System.ComponentModel.ITypeDescriptorContext" />，可用來取得額外的內容資訊。</param>
      <param name="provider" vsli:raw="An &lt;see cref=&quot;T:System.IServiceProvider&quot; /&gt; through which editing services may be obtained.">
        <see cref="T:System.IServiceProvider" />，可以透過它取得編輯服務。</param>
      <param name="value" vsli:raw="An instance of the value being edited.">已編輯值的執行個體。</param>
      <returns vsli:raw="The new value of the object. If the value of the object hasn't changed, this should return the same object it was passed.">物件的新值。 如果物件的值未經變更，這應該會傳回與它之前所傳遞者相同的物件。</returns>
    </member>
    <member name="M:System.Windows.Forms.Design.AnchorEditor.GetEditStyle(System.ComponentModel.ITypeDescriptorContext)">
      <summary vsli:raw="Gets the editor style used by the &lt;xref data-throw-if-not-resolved=&quot;true&quot; uid=&quot;System.Windows.Forms.Design.AnchorEditor.EditValue(System.ComponentModel.ITypeDescriptorContext,System.IServiceProvider,System.Object)&quot;&gt;&lt;/xref&gt; method.">取得 <see cref="M:System.Windows.Forms.Design.AnchorEditor.EditValue(System.ComponentModel.ITypeDescriptorContext,System.IServiceProvider,System.Object)" /> 方法所使用的編輯器樣式。</summary>
      <param name="context" vsli:raw="An &lt;xref data-throw-if-not-resolved=&quot;true&quot; uid=&quot;System.ComponentModel.ITypeDescriptorContext&quot;&gt;&lt;/xref&gt; that can be used to gain additional context information.">
        <see cref="T:System.ComponentModel.ITypeDescriptorContext" />，可用來取得額外的內容資訊。</param>
      <returns vsli:raw="One of the &lt;xref data-throw-if-not-resolved=&quot;true&quot; uid=&quot;System.Drawing.Design.UITypeEditorEditStyle&quot;&gt;&lt;/xref&gt; values indicating the provided editing style. If the method is not supported, this method will return &lt;xref data-throw-if-not-resolved=&quot;true&quot; uid=&quot;System.Drawing.Design.UITypeEditorEditStyle.None&quot;&gt;&lt;/xref&gt;.">其中一個 <see cref="T:System.Drawing.Design.UITypeEditorEditStyle" /> 值，表示所提供的樣式。 如果該方法不受支援，這個方法會傳回 <see cref="F:System.Drawing.Design.UITypeEditorEditStyle.None" />。</returns>
    </member>
    <member name="T:System.Windows.Forms.Design.AxImporter">
      <summary vsli:raw="Imports ActiveX controls and generates a wrapper that can be accessed by a designer.">匯入 ActiveX 控制項，並且產生可供設計工具存取的包裝函式。</summary>
    </member>
    <member name="M:System.Windows.Forms.Design.AxImporter.#ctor(System.Windows.Forms.Design.AxImporter.Options)">
      <summary vsli:raw="Initializes a new instance of the &lt;see cref=&quot;T:System.Windows.Forms.Design.AxImporter&quot; /&gt; class.">初始化 <see cref="T:System.Windows.Forms.Design.AxImporter" /> 類別的新執行個體。</summary>
      <param name="options" vsli:raw="An &lt;see cref=&quot;T:System.Windows.Forms.Design.AxImporter.Options&quot; /&gt; that indicates the options for the ActiveX control importer to use.">
        <see cref="T:System.Windows.Forms.Design.AxImporter.Options" />，表示要讓 ActiveX 控制項匯入工具使用的選項。</param>
    </member>
    <member name="T:System.Windows.Forms.Design.AxImporter.IReferenceResolver">
      <summary vsli:raw="Provides methods to resolve references to ActiveX libraries, COM type libraries or assemblies, or managed assemblies.">提供方法，解析對 ActiveX 程式庫、COM 型別程式庫或組件，或者 Managed 組件的參考。</summary>
    </member>
    <member name="M:System.Windows.Forms.Design.AxImporter.IReferenceResolver.ResolveActiveXReference(System.Runtime.InteropServices.UCOMITypeLib)">
      <summary vsli:raw="Resolves a reference to the specified type library that contains an ActiveX control.">解析對包含 ActiveX 控制項的指定型別程式庫的參考。</summary>
      <param name="typeLib" vsli:raw="A &lt;see cref=&quot;T:System.Runtime.InteropServices.UCOMITypeLib&quot; /&gt; to resolve a reference to.">要解析其參考的 <see cref="T:System.Runtime.InteropServices.UCOMITypeLib" />。</param>
      <returns vsli:raw="A fully qualified path to an assembly.">組件的完整路徑。</returns>
    </member>
    <member name="M:System.Windows.Forms.Design.AxImporter.IReferenceResolver.ResolveComReference(System.Reflection.AssemblyName)">
      <summary vsli:raw="Resolves a reference to the specified assembly that contains a COM component.">解析對包含 COM 元件的指定組件的參考。</summary>
      <param name="name" vsli:raw="An &lt;see cref=&quot;T:System.Reflection.AssemblyName&quot; /&gt; that indicates the assembly to resolve a reference to.">
        <see cref="T:System.Reflection.AssemblyName" />，表示要解析其參考的組件。</param>
      <returns vsli:raw="A fully qualified path to an assembly.">組件的完整路徑。</returns>
    </member>
    <member name="M:System.Windows.Forms.Design.AxImporter.IReferenceResolver.ResolveComReference(System.Runtime.InteropServices.UCOMITypeLib)">
      <summary vsli:raw="Resolves a reference to the specified type library that contains an COM component.">解析對包含 COM 元件的指定型別程式庫的參考。</summary>
      <param name="typeLib" vsli:raw="A &lt;see cref=&quot;T:System.Runtime.InteropServices.UCOMITypeLib&quot; /&gt; to resolve a reference to.">要解析其參考的 <see cref="T:System.Runtime.InteropServices.UCOMITypeLib" />。</param>
      <returns vsli:raw="A fully qualified path to an assembly.">組件的完整路徑。</returns>
    </member>
    <member name="M:System.Windows.Forms.Design.AxImporter.IReferenceResolver.ResolveManagedReference(System.String)">
      <summary vsli:raw="Resolves a reference to the specified assembly.">解析對指定的組件的參考。</summary>
      <param name="assemName" vsli:raw="The name of the assembly to resolve a reference to.">要解析其參考的組件名稱。</param>
      <returns vsli:raw="A fully qualified path to an assembly.">組件的完整路徑。</returns>
    </member>
    <member name="T:System.Windows.Forms.Design.AxImporter.Options">
      <summary vsli:raw="Represents a set of options for an &lt;see cref=&quot;T:System.Windows.Forms.Design.AxImporter&quot; /&gt;.">表示 <see cref="T:System.Windows.Forms.Design.AxImporter" /> 的一組選項。</summary>
    </member>
    <member name="F:System.Windows.Forms.Design.AxImporter.Options.delaySign">
      <summary vsli:raw="Specifies whether the generated assembly is strongly named and will be signed later.">指定產生的組件是否以強式名稱命名，並會於稍後簽名該組件。</summary>
    </member>
    <member name="F:System.Windows.Forms.Design.AxImporter.Options.genSources">
      <summary vsli:raw="Specifies whether sources for the type library wrapper should be generated.">指定是否應產生型別程式庫包裝函式的來源。</summary>
    </member>
    <member name="F:System.Windows.Forms.Design.AxImporter.Options.ignoreRegisteredOcx">
      <summary vsli:raw="Specifies whether to use only input from the command line instead relying on a registered version.">指定是否只使用命令列的輸入而不依賴已註冊的版本。</summary>
    </member>
    <member name="F:System.Windows.Forms.Design.AxImporter.Options.keyContainer">
      <summary vsli:raw="Specifies the path to the file that contains the strong name key container for the generated assemblies.">指定至包含產生的組件的強式名稱金鑰容器的檔案路徑。</summary>
    </member>
    <member name="F:System.Windows.Forms.Design.AxImporter.Options.keyFile">
      <summary vsli:raw="Specifies the path to the file that contains the strong name key for the generated assemblies.">指定至包含產生的組件的強式名稱金鑰的檔案路徑。</summary>
    </member>
    <member name="F:System.Windows.Forms.Design.AxImporter.Options.keyPair">
      <summary vsli:raw="Specifies the strong name used for the generated assemblies.">指定產生的組件所使用的強式名稱。</summary>
    </member>
    <member name="F:System.Windows.Forms.Design.AxImporter.Options.msBuildErrors">
      <summary vsli:raw="Specifies whether errors are output in the Microsoft Build Engine (MSBuild) format.">指定是否將錯誤輸出為 Microsoft Build Engine (MSBuild) 格式。</summary>
    </member>
    <member name="F:System.Windows.Forms.Design.AxImporter.Options.noLogo">
      <summary vsli:raw="Indicates whether the ActiveX importer tool logo will be displayed when the control is imported.">指示匯入控制項時，是否要顯示 ActiveX 匯入工具標誌。</summary>
    </member>
    <member name="F:System.Windows.Forms.Design.AxImporter.Options.outputDirectory">
      <summary vsli:raw="Specifies the path to the directory that the generated assemblies will be created in.">指定至產生的組件建立位置的目錄的路徑。</summary>
    </member>
    <member name="F:System.Windows.Forms.Design.AxImporter.Options.outputName">
      <summary vsli:raw="Specifies the filename to generate the ActiveX control wrapper to.">指定產生 ActiveX 控制項包裝函式的目標檔名。</summary>
    </member>
    <member name="F:System.Windows.Forms.Design.AxImporter.Options.overwriteRCW">
      <summary vsli:raw="Specifies whether to overwrite existing files when generating assemblies.">指定產生組件時，是否要覆寫現有檔案。</summary>
    </member>
    <member name="F:System.Windows.Forms.Design.AxImporter.Options.publicKey">
      <summary vsli:raw="Specifies the public key used to sign the generated assemblies.">指定用於簽章產生的組件的公開金鑰。</summary>
    </member>
    <member name="F:System.Windows.Forms.Design.AxImporter.Options.references">
      <summary vsli:raw="Specifies the &lt;see cref=&quot;T:System.Windows.Forms.Design.AxImporter.IReferenceResolver&quot; /&gt; to use to resolve types and references when generating assemblies.">指定產生組件時，解析型別和參考所使用的 <see cref="T:System.Windows.Forms.Design.AxImporter.IReferenceResolver" />。</summary>
    </member>
    <member name="F:System.Windows.Forms.Design.AxImporter.Options.silentMode">
      <summary vsli:raw="Specifies whether to compile in silent mode, which generates less displayed information at compile time.">指定是否要以無訊息模式 (Silent Mode) 編譯，這種模式在編譯時產生較少的顯示資訊。</summary>
    </member>
    <member name="F:System.Windows.Forms.Design.AxImporter.Options.verboseMode">
      <summary vsli:raw="Specifies whether to compile in verbose mode, which generates more displayed information at compile time.">指定是否要以詳細資訊模式編譯，這種模式在編譯時產生較多的顯示資訊。</summary>
    </member>
    <member name="M:System.Windows.Forms.Design.AxImporter.Options.#ctor">
      <summary vsli:raw="Initializes a new instance of the &lt;see cref=&quot;T:System.Windows.Forms.Design.AxImporter.Options&quot; /&gt; class.">初始化 <see cref="T:System.Windows.Forms.Design.AxImporter.Options" /> 類別的新執行個體。</summary>
    </member>
    <member name="T:System.Windows.Forms.Design.Behavior.Adorner">
      <summary vsli:raw="Manages a collection of user-interface related &lt;see cref=&quot;T:System.Windows.Forms.Design.Behavior.Glyph&quot; /&gt; objects. This class cannot be inherited.">管理使用者介面相關之 <see cref="T:System.Windows.Forms.Design.Behavior.Glyph" /> 物件的集合。 此類別無法獲得繼承。</summary>
    </member>
    <member name="M:System.Windows.Forms.Design.Behavior.Adorner.#ctor">
      <summary vsli:raw="Initializes a new instance of the &lt;see cref=&quot;T:System.Windows.Forms.Design.Behavior.Adorner&quot; /&gt; class.">初始化 <see cref="T:System.Windows.Forms.Design.Behavior.Adorner" /> 類別的新執行個體。</summary>
    </member>
    <member name="M:System.Windows.Forms.Design.Behavior.Adorner.Invalidate">
      <summary vsli:raw="Forces the &lt;see cref=&quot;T:System.Windows.Forms.Design.Behavior.BehaviorService&quot; /&gt; to refresh its adorner window.">強制 <see cref="T:System.Windows.Forms.Design.Behavior.BehaviorService" /> 重新整理其裝飾項視窗。</summary>
    </member>
    <member name="M:System.Windows.Forms.Design.Behavior.Adorner.Invalidate(System.Drawing.Rectangle)">
      <summary vsli:raw="Forces the &lt;see cref=&quot;T:System.Windows.Forms.Design.Behavior.BehaviorService&quot; /&gt; to refresh its adorner window within the given &lt;see cref=&quot;T:System.Drawing.Rectangle&quot; /&gt;.">強制 <see cref="T:System.Windows.Forms.Design.Behavior.BehaviorService" /> 在指定的 <see cref="T:System.Drawing.Rectangle" /> 內重新整理其裝飾項視窗。</summary>
      <param name="rectangle" vsli:raw="The area to invalidate.">要使其失效的區域。</param>
    </member>
    <member name="M:System.Windows.Forms.Design.Behavior.Adorner.Invalidate(System.Drawing.Region)">
      <summary vsli:raw="Forces the &lt;see cref=&quot;T:System.Windows.Forms.Design.Behavior.BehaviorService&quot; /&gt; to refresh its adorner window within the given &lt;see cref=&quot;T:System.Drawing.Region&quot; /&gt;.">強制 <see cref="T:System.Windows.Forms.Design.Behavior.BehaviorService" /> 在指定的 <see cref="T:System.Drawing.Region" /> 內重新整理其裝飾項視窗。</summary>
      <param name="region" vsli:raw="The &lt;see cref=&quot;T:System.Drawing.Region&quot; /&gt; to invalidate.">要使其失效的 <see cref="T:System.Drawing.Region" />。</param>
    </member>
    <member name="P:System.Windows.Forms.Design.Behavior.Adorner.BehaviorService">
      <summary vsli:raw="Gets or sets the &lt;see cref=&quot;T:System.Windows.Forms.Design.Behavior.BehaviorService&quot; /&gt; associated with the &lt;see cref=&quot;T:System.Windows.Forms.Design.Behavior.Adorner&quot; /&gt;.">取得或設定與 <see cref="T:System.Windows.Forms.Design.Behavior.BehaviorService" /> 相關聯的 <see cref="T:System.Windows.Forms.Design.Behavior.Adorner" />。</summary>
      <returns vsli:raw="The &lt;see cref=&quot;T:System.Windows.Forms.Design.Behavior.BehaviorService&quot; /&gt; associated with the &lt;see cref=&quot;T:System.Windows.Forms.Design.Behavior.Adorner&quot; /&gt;.">與 <see cref="T:System.Windows.Forms.Design.Behavior.BehaviorService" /> 關聯的 <see cref="T:System.Windows.Forms.Design.Behavior.Adorner" />。</returns>
    </member>
    <member name="P:System.Windows.Forms.Design.Behavior.Adorner.Enabled">
      <summary vsli:raw="Gets or sets a value indicating if the &lt;see cref=&quot;T:System.Windows.Forms.Design.Behavior.Adorner&quot; /&gt; is enabled.">取得或設定值，指出是否啟用 <see cref="T:System.Windows.Forms.Design.Behavior.Adorner" />。</summary>
      <returns vsli:raw="&lt;see langword=&quot;true&quot; /&gt;, if the &lt;see cref=&quot;T:System.Windows.Forms.Design.Behavior.Adorner&quot; /&gt; is enabled; otherwise, &lt;see langword=&quot;false&quot; /&gt;.">如果已啟用 <see cref="T:System.Windows.Forms.Design.Behavior.Adorner" /> 則為 <see langword="true" />，否則為 <see langword="false" />。</returns>
    </member>
    <member name="P:System.Windows.Forms.Design.Behavior.Adorner.Glyphs">
      <summary vsli:raw="Gets the &lt;see cref=&quot;T:System.Windows.Forms.Design.Behavior.Glyph&quot; /&gt; collection.">取得 <see cref="T:System.Windows.Forms.Design.Behavior.Glyph" /> 集合。</summary>
      <returns vsli:raw="A collection of &lt;see cref=&quot;T:System.Windows.Forms.Design.Behavior.Glyph&quot; /&gt; objects.">
        <see cref="T:System.Windows.Forms.Design.Behavior.Glyph" /> 物件的集合。</returns>
    </member>
    <member name="T:System.Windows.Forms.Design.Behavior.Behavior">
      <summary vsli:raw="Represents the &lt;see cref=&quot;T:System.Windows.Forms.Design.Behavior.Behavior&quot; /&gt; objects that are managed by a &lt;see cref=&quot;T:System.Windows.Forms.Design.Behavior.BehaviorService&quot; /&gt;.">表示由 <see cref="T:System.Windows.Forms.Design.Behavior.Behavior" /> 管理的 <see cref="T:System.Windows.Forms.Design.Behavior.BehaviorService" /> 物件。</summary>
    </member>
    <member name="M:System.Windows.Forms.Design.Behavior.Behavior.#ctor">
      <summary vsli:raw="Initializes a new instance of the &lt;see cref=&quot;T:System.Windows.Forms.Design.Behavior.Behavior&quot; /&gt; class.">初始化 <see cref="T:System.Windows.Forms.Design.Behavior.Behavior" /> 類別的新執行個體。</summary>
    </member>
    <member name="M:System.Windows.Forms.Design.Behavior.Behavior.#ctor(System.Boolean,System.Windows.Forms.Design.Behavior.BehaviorService)">
      <summary vsli:raw="Initializes a new instance of the &lt;see cref=&quot;T:System.Windows.Forms.Design.Behavior.Behavior&quot; /&gt; class with the given &lt;see cref=&quot;T:System.Windows.Forms.Design.Behavior.BehaviorService&quot; /&gt;.">使用指定的 <see cref="T:System.Windows.Forms.Design.Behavior.Behavior" />，初始化 <see cref="T:System.Windows.Forms.Design.Behavior.BehaviorService" /> 類別的新執行個體。</summary>
      <param name="callParentBehavior" vsli:raw="&lt;see langword=&quot;true&quot; /&gt; if the parent behavior should be called if it exists; otherwise, &lt;see langword=&quot;false&quot; /&gt;.">如果父行為存在時應該呼叫它，則為 <see langword="true" />，否則為 <see langword="false" />。</param>
      <param name="behaviorService" vsli:raw="The &lt;see cref=&quot;T:System.Windows.Forms.Design.Behavior.BehaviorService&quot; /&gt; to use.">要使用的 <see cref="T:System.Windows.Forms.Design.Behavior.BehaviorService" />。</param>
      <exception cref="T:System.ArgumentNullException" vsli:raw="&lt;paramref name=&quot;callParentBehavior&quot; /&gt; is &lt;see langword=&quot;true&quot; /&gt;, and &lt;paramref name=&quot;behaviorService&quot; /&gt; is &lt;see langword=&quot;null&quot; /&gt;.">
        <paramref name="callParentBehavior" /> 為 <see langword="true" />，而 <paramref name="behaviorService" /> 為 <see langword="null" />。</exception>
    </member>
    <member name="M:System.Windows.Forms.Design.Behavior.Behavior.FindCommand(System.ComponentModel.Design.CommandID)">
      <summary vsli:raw="Intercepts commands.">攔截命令。</summary>
      <param name="commandId" vsli:raw="A &lt;see cref=&quot;T:System.ComponentModel.Design.CommandID&quot; /&gt; object.">
        <see cref="T:System.ComponentModel.Design.CommandID" /> 物件。</param>
      <returns vsli:raw="A &lt;see cref=&quot;T:System.ComponentModel.Design.MenuCommand&quot; /&gt;. By default, &lt;see cref=&quot;M:System.Windows.Forms.Design.Behavior.Behavior.FindCommand(System.ComponentModel.Design.CommandID)&quot; /&gt; returns &lt;see langword=&quot;null&quot; /&gt;.">
        <see cref="T:System.ComponentModel.Design.MenuCommand" />。 根據預設，<see cref="M:System.Windows.Forms.Design.Behavior.Behavior.FindCommand(System.ComponentModel.Design.CommandID)" /> 會傳回 <see langword="null" />。</returns>
    </member>
    <member name="M:System.Windows.Forms.Design.Behavior.Behavior.OnDragDrop(System.Windows.Forms.Design.Behavior.Glyph,System.Windows.Forms.DragEventArgs)">
      <summary vsli:raw="Permits custom drag-and-drop behavior.">允許自訂的拖放行為。</summary>
      <param name="g" vsli:raw="A &lt;see cref=&quot;T:System.Windows.Forms.Design.Behavior.Glyph&quot; /&gt; object on which to invoke drag-and-drop behavior.">
        <see cref="T:System.Windows.Forms.Design.Behavior.Glyph" /> 物件，會在這個物件上叫用拖放行為。</param>
      <param name="e" vsli:raw="A &lt;see cref=&quot;T:System.Windows.Forms.DragEventArgs&quot; /&gt; that contains the event data.">
        <see cref="T:System.Windows.Forms.DragEventArgs" />，其中包含事件資料。</param>
    </member>
    <member name="M:System.Windows.Forms.Design.Behavior.Behavior.OnDragEnter(System.Windows.Forms.Design.Behavior.Glyph,System.Windows.Forms.DragEventArgs)">
      <summary vsli:raw="Permits custom drag-enter behavior.">允許自訂的拖入 (drag-enter) 行為。</summary>
      <param name="g" vsli:raw="A &lt;see cref=&quot;T:System.Windows.Forms.Design.Behavior.Glyph&quot; /&gt; on which to invoke drag-enter behavior.">
        <see cref="T:System.Windows.Forms.Design.Behavior.Glyph" />，會在其上叫用拖入行為。</param>
      <param name="e" vsli:raw="A &lt;see cref=&quot;T:System.Windows.Forms.DragEventArgs&quot; /&gt; that contains the event data.">
        <see cref="T:System.Windows.Forms.DragEventArgs" />，其中包含事件資料。</param>
    </member>
    <member name="M:System.Windows.Forms.Design.Behavior.Behavior.OnDragLeave(System.Windows.Forms.Design.Behavior.Glyph,System.EventArgs)">
      <summary vsli:raw="Permits custom drag-leave behavior.">允許自訂的拖出 (drag-leave) 行為。</summary>
      <param name="g" vsli:raw="A &lt;see cref=&quot;T:System.Windows.Forms.Design.Behavior.Glyph&quot; /&gt; on which to invoke drag-leave behavior.">
        <see cref="T:System.Windows.Forms.Design.Behavior.Glyph" />，會在其上叫用拖出行為。</param>
      <param name="e" vsli:raw="A &lt;see cref=&quot;T:System.Windows.Forms.DragEventArgs&quot; /&gt; that contains the event data.">
        <see cref="T:System.Windows.Forms.DragEventArgs" />，其中包含事件資料。</param>
    </member>
    <member name="M:System.Windows.Forms.Design.Behavior.Behavior.OnDragOver(System.Windows.Forms.Design.Behavior.Glyph,System.Windows.Forms.DragEventArgs)">
      <summary vsli:raw="Permits custom drag-over behavior.">允許自訂的拖過 (Drag-Over) 行為。</summary>
      <param name="g" vsli:raw="A &lt;see cref=&quot;T:System.Windows.Forms.Design.Behavior.Glyph&quot; /&gt; on which to invoke drag-over behavior.">
        <see cref="T:System.Windows.Forms.Design.Behavior.Glyph" />，會在其上叫用拖過行為。</param>
      <param name="e" vsli:raw="A &lt;see cref=&quot;T:System.Windows.Forms.DragEventArgs&quot; /&gt; that contains the event data.">
        <see cref="T:System.Windows.Forms.DragEventArgs" />，其中包含事件資料。</param>
    </member>
    <member name="M:System.Windows.Forms.Design.Behavior.Behavior.OnGiveFeedback(System.Windows.Forms.Design.Behavior.Glyph,System.Windows.Forms.GiveFeedbackEventArgs)">
      <summary vsli:raw="Permits custom drag-and-drop feedback behavior.">允許自訂的拖放回應行為。</summary>
      <param name="g" vsli:raw="A &lt;see cref=&quot;T:System.Windows.Forms.Design.Behavior.Glyph&quot; /&gt; on which to invoke drag-and-drop behavior.">
        <see cref="T:System.Windows.Forms.Design.Behavior.Glyph" />，會在其上叫用拖放行為。</param>
      <param name="e" vsli:raw="A &lt;see cref=&quot;T:System.Windows.Forms.GiveFeedbackEventArgs&quot; /&gt; that contains the event data.">
        <see cref="T:System.Windows.Forms.GiveFeedbackEventArgs" />，其中包含事件資料。</param>
    </member>
    <member name="M:System.Windows.Forms.Design.Behavior.Behavior.OnLoseCapture(System.Windows.Forms.Design.Behavior.Glyph,System.EventArgs)">
      <summary vsli:raw="Called by the adorner window when it loses mouse capture.">裝飾項視窗在其遺失滑鼠捕捉 (Mouse Capture) 時呼叫。</summary>
      <param name="g" vsli:raw="A &lt;see cref=&quot;T:System.Windows.Forms.Design.Behavior.Glyph&quot; /&gt; on which to invoke drag-and-drop behavior.">
        <see cref="T:System.Windows.Forms.Design.Behavior.Glyph" />，會在其上叫用拖放行為。</param>
      <param name="e" vsli:raw="An &lt;see cref=&quot;T:System.EventArgs&quot; /&gt; that contains the event data.">包含事件資料的 <see cref="T:System.EventArgs" />。</param>
    </member>
    <member name="M:System.Windows.Forms.Design.Behavior.Behavior.OnMouseDoubleClick(System.Windows.Forms.Design.Behavior.Glyph,System.Windows.Forms.MouseButtons,System.Drawing.Point)">
      <summary vsli:raw="Called when any double-click message enters the adorner window of the &lt;see cref=&quot;T:System.Windows.Forms.Design.Behavior.BehaviorService&quot; /&gt;.">在任何按兩下滑鼠 (Double-Click) 訊息進入 <see cref="T:System.Windows.Forms.Design.Behavior.BehaviorService" /> 的裝飾項視窗時進行呼叫。</summary>
      <param name="g" vsli:raw="A &lt;see cref=&quot;T:System.Windows.Forms.Design.Behavior.Glyph&quot; /&gt;.">
        <see cref="T:System.Windows.Forms.Design.Behavior.Glyph" />。</param>
      <param name="button" vsli:raw="A &lt;see cref=&quot;T:System.Windows.Forms.MouseButtons&quot; /&gt; value indicating which button was clicked.">
        <see cref="T:System.Windows.Forms.MouseButtons" /> 值，表示按下的按鈕。</param>
      <param name="mouseLoc" vsli:raw="The location at which the click occurred.">發生按一下動作的位置。</param>
      <returns vsli:raw="&lt;see langword=&quot;true&quot; /&gt; if the message was handled; otherwise, &lt;see langword=&quot;false&quot; /&gt;.">如果已處理訊息，則為 <see langword="true" />；否則為 <see langword="false" />。</returns>
    </member>
    <member name="M:System.Windows.Forms.Design.Behavior.Behavior.OnMouseDown(System.Windows.Forms.Design.Behavior.Glyph,System.Windows.Forms.MouseButtons,System.Drawing.Point)">
      <summary vsli:raw="Called when any mouse-down message enters the adorner window of the &lt;see cref=&quot;T:System.Windows.Forms.Design.Behavior.BehaviorService&quot; /&gt;.">會在任何按下滑鼠 (Mouse-Down) 訊息進入 <see cref="T:System.Windows.Forms.Design.Behavior.BehaviorService" /> 的裝飾項視窗時進行呼叫。</summary>
      <param name="g" vsli:raw="A &lt;see cref=&quot;T:System.Windows.Forms.Design.Behavior.Glyph&quot; /&gt;.">
        <see cref="T:System.Windows.Forms.Design.Behavior.Glyph" />。</param>
      <param name="button" vsli:raw="A &lt;see cref=&quot;T:System.Windows.Forms.MouseButtons&quot; /&gt; value indicating which button was clicked.">
        <see cref="T:System.Windows.Forms.MouseButtons" /> 值，表示按下的按鈕。</param>
      <param name="mouseLoc" vsli:raw="The location at which the click occurred.">發生按一下動作的位置。</param>
      <returns vsli:raw="&lt;see langword=&quot;true&quot; /&gt; if the message was handled; otherwise, &lt;see langword=&quot;false&quot; /&gt;.">如果已處理訊息，則為 <see langword="true" />；否則為 <see langword="false" />。</returns>
    </member>
    <member name="M:System.Windows.Forms.Design.Behavior.Behavior.OnMouseEnter(System.Windows.Forms.Design.Behavior.Glyph)">
      <summary vsli:raw="Called when any mouse-enter message enters the adorner window of the &lt;see cref=&quot;T:System.Windows.Forms.Design.Behavior.BehaviorService&quot; /&gt;.">會在任何滑鼠移入 (Mouse-Enter) 訊息進入 <see cref="T:System.Windows.Forms.Design.Behavior.BehaviorService" /> 的裝飾項視窗時進行呼叫。</summary>
      <param name="g" vsli:raw="A &lt;see cref=&quot;T:System.Windows.Forms.Design.Behavior.Glyph&quot; /&gt;.">
        <see cref="T:System.Windows.Forms.Design.Behavior.Glyph" />。</param>
      <returns vsli:raw="&lt;see langword=&quot;true&quot; /&gt; if the message was handled; otherwise, &lt;see langword=&quot;false&quot; /&gt;.">如果已處理訊息，則為 <see langword="true" />；否則為 <see langword="false" />。</returns>
    </member>
    <member name="M:System.Windows.Forms.Design.Behavior.Behavior.OnMouseHover(System.Windows.Forms.Design.Behavior.Glyph,System.Drawing.Point)">
      <summary vsli:raw="Called when any mouse-hover message enters the adorner window of the &lt;see cref=&quot;T:System.Windows.Forms.Design.Behavior.BehaviorService&quot; /&gt;.">會在任何滑鼠停留 (Mouse-Hover) 訊息進入 <see cref="T:System.Windows.Forms.Design.Behavior.BehaviorService" /> 的裝飾項視窗時進行呼叫。</summary>
      <param name="g" vsli:raw="A &lt;see cref=&quot;T:System.Windows.Forms.Design.Behavior.Glyph&quot; /&gt;.">
        <see cref="T:System.Windows.Forms.Design.Behavior.Glyph" />。</param>
      <param name="mouseLoc" vsli:raw="The location at which the hover occurred.">發生停留的位置。</param>
      <returns vsli:raw="&lt;see langword=&quot;true&quot; /&gt; if the message was handled; otherwise, &lt;see langword=&quot;false&quot; /&gt;.">如果已處理訊息，則為 <see langword="true" />；否則為 <see langword="false" />。</returns>
    </member>
    <member name="M:System.Windows.Forms.Design.Behavior.Behavior.OnMouseLeave(System.Windows.Forms.Design.Behavior.Glyph)">
      <summary vsli:raw="Called when any mouse-leave message enters the adorner window of the &lt;see cref=&quot;T:System.Windows.Forms.Design.Behavior.BehaviorService&quot; /&gt;.">會在任何滑鼠移出 (Mouse-Leave) 訊息進入 <see cref="T:System.Windows.Forms.Design.Behavior.BehaviorService" /> 的裝飾項視窗時進行呼叫。</summary>
      <param name="g" vsli:raw="A &lt;see cref=&quot;T:System.Windows.Forms.Design.Behavior.Glyph&quot; /&gt;.">
        <see cref="T:System.Windows.Forms.Design.Behavior.Glyph" />。</param>
      <returns vsli:raw="&lt;see langword=&quot;true&quot; /&gt; if the message was handled; otherwise, &lt;see langword=&quot;false&quot; /&gt;.">如果已處理訊息，則為 <see langword="true" />；否則為 <see langword="false" />。</returns>
    </member>
    <member name="M:System.Windows.Forms.Design.Behavior.Behavior.OnMouseMove(System.Windows.Forms.Design.Behavior.Glyph,System.Windows.Forms.MouseButtons,System.Drawing.Point)">
      <summary vsli:raw="Called when any mouse-move message enters the adorner window of the &lt;see cref=&quot;T:System.Windows.Forms.Design.Behavior.BehaviorService&quot; /&gt;.">會在任何滑鼠移動 (Mouse-Move) 訊息進入 <see cref="T:System.Windows.Forms.Design.Behavior.BehaviorService" /> 的裝飾項視窗時進行呼叫。</summary>
      <param name="g" vsli:raw="A &lt;see cref=&quot;T:System.Windows.Forms.Design.Behavior.Glyph&quot; /&gt;.">
        <see cref="T:System.Windows.Forms.Design.Behavior.Glyph" />。</param>
      <param name="button" vsli:raw="A &lt;see cref=&quot;T:System.Windows.Forms.MouseButtons&quot; /&gt; value indicating which button was clicked.">
        <see cref="T:System.Windows.Forms.MouseButtons" /> 值，表示按下的按鈕。</param>
      <param name="mouseLoc" vsli:raw="The location at which the move occurred.">發生移動的位置。</param>
      <returns vsli:raw="&lt;see langword=&quot;true&quot; /&gt; if the message was handled; otherwise, &lt;see langword=&quot;false&quot; /&gt;.">如果已處理訊息，則為 <see langword="true" />；否則為 <see langword="false" />。</returns>
    </member>
    <member name="M:System.Windows.Forms.Design.Behavior.Behavior.OnMouseUp(System.Windows.Forms.Design.Behavior.Glyph,System.Windows.Forms.MouseButtons)">
      <summary vsli:raw="Called when any mouse-up message enters the adorner window of the &lt;see cref=&quot;T:System.Windows.Forms.Design.Behavior.BehaviorService&quot; /&gt;.">會在任何放開滑鼠 (Mouse-Up) 訊息進入 <see cref="T:System.Windows.Forms.Design.Behavior.BehaviorService" /> 的裝飾項視窗時進行呼叫。</summary>
      <param name="g" vsli:raw="A &lt;see cref=&quot;T:System.Windows.Forms.Design.Behavior.Glyph&quot; /&gt;.">
        <see cref="T:System.Windows.Forms.Design.Behavior.Glyph" />。</param>
      <param name="button" vsli:raw="A &lt;see cref=&quot;T:System.Windows.Forms.MouseButtons&quot; /&gt; value indicating which button was clicked.">
        <see cref="T:System.Windows.Forms.MouseButtons" /> 值，表示按下的按鈕。</param>
      <returns vsli:raw="&lt;see langword=&quot;true&quot; /&gt; if the message was handled; otherwise, &lt;see langword=&quot;false&quot; /&gt;.">如果已處理訊息，則為 <see langword="true" />；否則為 <see langword="false" />。</returns>
    </member>
    <member name="M:System.Windows.Forms.Design.Behavior.Behavior.OnQueryContinueDrag(System.Windows.Forms.Design.Behavior.Glyph,System.Windows.Forms.QueryContinueDragEventArgs)">
      <summary vsli:raw="Sends this drag-and-drop event from the adorner window to the appropriate &lt;see cref=&quot;T:System.Windows.Forms.Design.Behavior.Behavior&quot; /&gt; or hit-tested &lt;see cref=&quot;T:System.Windows.Forms.Design.Behavior.Glyph&quot; /&gt;.">將這個拖放事件從裝飾項 (Adorner) 視窗傳送至適當的 <see cref="T:System.Windows.Forms.Design.Behavior.Behavior" /> 或經過點擊測試的 <see cref="T:System.Windows.Forms.Design.Behavior.Glyph" />。</summary>
      <param name="g" vsli:raw="A &lt;see cref=&quot;T:System.Windows.Forms.Design.Behavior.Glyph&quot; /&gt;.">
        <see cref="T:System.Windows.Forms.Design.Behavior.Glyph" />。</param>
      <param name="e" vsli:raw="A &lt;see cref=&quot;T:System.Windows.Forms.QueryContinueDragEventArgs&quot; /&gt; that contains the event data.">
        <see cref="T:System.Windows.Forms.QueryContinueDragEventArgs" />，其中包含事件資料。</param>
    </member>
    <member name="P:System.Windows.Forms.Design.Behavior.Behavior.Cursor">
      <summary vsli:raw="Gets the cursor that should be displayed for this behavior.">取得應針對這個行為顯示的游標。</summary>
      <returns vsli:raw="A &lt;see cref=&quot;T:System.Windows.Forms.Cursor&quot; /&gt; that represents the cursor that should be displayed for this behavior.">
        <see cref="T:System.Windows.Forms.Cursor" />，表示應針對這個行為顯示的游標。</returns>
    </member>
    <member name="P:System.Windows.Forms.Design.Behavior.Behavior.DisableAllCommands">
      <summary vsli:raw="Gets a value indicating whether &lt;see cref=&quot;T:System.ComponentModel.Design.MenuCommand&quot; /&gt; objects should be disabled.">取得值，指出是否應該停用 <see cref="T:System.ComponentModel.Design.MenuCommand" /> 物件。</summary>
      <returns vsli:raw="&lt;see langword=&quot;true&quot; /&gt; if all &lt;see cref=&quot;T:System.ComponentModel.Design.MenuCommand&quot; /&gt; objects the designer receives should have states set to &lt;c&gt;Enabled = false&lt;/c&gt; when this &lt;see cref=&quot;T:System.Windows.Forms.Design.Behavior.Behavior&quot; /&gt; is active; otherwise, &lt;see langword=&quot;false&quot; /&gt;.">
        <see langword="true" /> 如果 <see cref="T:System.ComponentModel.Design.MenuCommand" /> 設計工具所接收的所有物件都應該將狀態設為 <c>Enabled = false</c> ，則為 <see cref="T:System.Windows.Forms.Design.Behavior.Behavior" /> ，否則為 <see langword="false" /> 。</returns>
    </member>
    <member name="T:System.Windows.Forms.Design.Behavior.BehaviorDragDropEventArgs">
      <summary vsli:raw="Provides data for the &lt;see cref=&quot;E:System.Windows.Forms.Design.Behavior.BehaviorService.BeginDrag&quot; /&gt; and &lt;see cref=&quot;E:System.Windows.Forms.Design.Behavior.BehaviorService.EndDrag&quot; /&gt; events.">提供 <see cref="E:System.Windows.Forms.Design.Behavior.BehaviorService.BeginDrag" /> 和 <see cref="E:System.Windows.Forms.Design.Behavior.BehaviorService.EndDrag" /> 事件的資料。</summary>
    </member>
    <member name="M:System.Windows.Forms.Design.Behavior.BehaviorDragDropEventArgs.#ctor(System.Collections.ICollection)">
      <summary vsli:raw="Initializes a new instance of the &lt;see cref=&quot;T:System.Windows.Forms.Design.Behavior.BehaviorDragDropEventArgs&quot; /&gt; class.">初始化 <see cref="T:System.Windows.Forms.Design.Behavior.BehaviorDragDropEventArgs" /> 類別的新執行個體。</summary>
      <param name="dragComponents" vsli:raw="The &lt;see cref=&quot;T:System.Collections.ICollection&quot; /&gt; of &lt;see cref=&quot;T:System.ComponentModel.IComponent&quot; /&gt; objects currently being dragged.">目前正在拖曳之 <see cref="T:System.Collections.ICollection" /> 物件的 <see cref="T:System.ComponentModel.IComponent" />。</param>
    </member>
    <member name="P:System.Windows.Forms.Design.Behavior.BehaviorDragDropEventArgs.DragComponents">
      <summary vsli:raw="Gets the list of &lt;see cref=&quot;T:System.ComponentModel.IComponent&quot; /&gt; objects currently being dragged.">取得目前正在拖曳的 <see cref="T:System.ComponentModel.IComponent" /> 物件清單。</summary>
      <returns vsli:raw="The &lt;see cref=&quot;T:System.Collections.ICollection&quot; /&gt; of &lt;see cref=&quot;T:System.ComponentModel.IComponent&quot; /&gt; objects currently being dragged.">目前正在拖曳之 <see cref="T:System.Collections.ICollection" /> 物件的 <see cref="T:System.ComponentModel.IComponent" />。</returns>
    </member>
    <member name="T:System.Windows.Forms.Design.Behavior.BehaviorDragDropEventHandler">
      <summary vsli:raw="Represents the methods that will handle the &lt;see cref=&quot;E:System.Windows.Forms.Design.Behavior.BehaviorService.BeginDrag&quot; /&gt; and &lt;see cref=&quot;E:System.Windows.Forms.Design.Behavior.BehaviorService.EndDrag&quot; /&gt; events of a &lt;see cref=&quot;T:System.Windows.Forms.Design.Behavior.BehaviorService&quot; /&gt;. This class cannot be inherited.">表示將處理 <see cref="E:System.Windows.Forms.Design.Behavior.BehaviorService.BeginDrag" /> 之 <see cref="E:System.Windows.Forms.Design.Behavior.BehaviorService.EndDrag" /> 和 <see cref="T:System.Windows.Forms.Design.Behavior.BehaviorService" /> 事件的方法。 此類別無法獲得繼承。</summary>
      <param name="sender" vsli:raw="The source of the event.">事件的來源。</param>
      <param name="e" vsli:raw="A &lt;see cref=&quot;T:System.Windows.Forms.Design.Behavior.BehaviorDragDropEventArgs&quot; /&gt; that contains the event data.">
        <see cref="T:System.Windows.Forms.Design.Behavior.BehaviorDragDropEventArgs" />，其中包含事件資料。</param>
    </member>
    <member name="T:System.Windows.Forms.Design.Behavior.BehaviorService">
      <summary vsli:raw="Manages user interface in the designer. This class cannot be inherited.">管理設計工具中的使用者介面。 此類別無法獲得繼承。</summary>
    </member>
    <member name="E:System.Windows.Forms.Design.Behavior.BehaviorService.BeginDrag">
      <summary vsli:raw="Occurs when the &lt;see cref=&quot;T:System.Windows.Forms.Design.Behavior.BehaviorService&quot; /&gt; starts a drag-and-drop operation.">發生於 <see cref="T:System.Windows.Forms.Design.Behavior.BehaviorService" /> 啟動拖放作業時。</summary>
    </member>
    <member name="E:System.Windows.Forms.Design.Behavior.BehaviorService.EndDrag">
      <summary vsli:raw="Occurs when the &lt;see cref=&quot;T:System.Windows.Forms.Design.Behavior.BehaviorService&quot; /&gt; completes a drag operation.">發生於 <see cref="T:System.Windows.Forms.Design.Behavior.BehaviorService" /> 完成拖曳作業時。</summary>
    </member>
    <member name="E:System.Windows.Forms.Design.Behavior.BehaviorService.Synchronize">
      <summary vsli:raw="Occurs when the current selection should be refreshed.">發生於應重新整理目前的選取範圍時。</summary>
    </member>
    <member name="M:System.Windows.Forms.Design.Behavior.BehaviorService.AdornerWindowPointToScreen(System.Drawing.Point)">
      <summary vsli:raw="Translates a &lt;see cref=&quot;T:System.Drawing.Point&quot; /&gt; in the adorner window to screen coordinates.">將裝飾項視窗中的 <see cref="T:System.Drawing.Point" /> 轉譯成螢幕座標。</summary>
      <param name="p" vsli:raw="The &lt;see cref=&quot;T:System.Drawing.Point&quot; /&gt; value to transform.">要轉換的 <see cref="T:System.Drawing.Point" /> 值。</param>
      <returns vsli:raw="The transformed &lt;see cref=&quot;T:System.Drawing.Point&quot; /&gt; value, in screen coordinates.">螢幕座標中已轉換的 <see cref="T:System.Drawing.Point" /> 值。</returns>
    </member>
    <member name="M:System.Windows.Forms.Design.Behavior.BehaviorService.AdornerWindowToScreen">
      <summary vsli:raw="Gets the location of the adorner window in screen coordinates.">取得螢幕座標中裝飾項 (Adorner) 視窗的位置。</summary>
      <returns vsli:raw="The location, from the upper-left corner of the adorner window, in screen coordinates.">螢幕座標中裝飾項 (Adorner) 視窗左上角的位置。</returns>
    </member>
    <member name="M:System.Windows.Forms.Design.Behavior.BehaviorService.ControlRectInAdornerWindow(System.Windows.Forms.Control)">
      <summary vsli:raw="Returns the bounding &lt;see cref=&quot;T:System.Drawing.Rectangle&quot; /&gt; of a &lt;see cref=&quot;T:System.Windows.Forms.Control&quot; /&gt;.">傳回 <see cref="T:System.Drawing.Rectangle" /> 的週框 <see cref="T:System.Windows.Forms.Control" />。</summary>
      <param name="c" vsli:raw="The &lt;see cref=&quot;T:System.Windows.Forms.Control&quot; /&gt; to translate.">要轉換的 <see cref="T:System.Windows.Forms.Control" />。</param>
      <returns vsli:raw="The bounding &lt;see cref=&quot;T:System.Drawing.Rectangle&quot; /&gt; of a &lt;see cref=&quot;T:System.Windows.Forms.Control&quot; /&gt; translated to the adorner window coordinates.">轉譯成裝飾項 (Adorner) 視窗座標之 <see cref="T:System.Drawing.Rectangle" /> 的 <see cref="T:System.Windows.Forms.Control" /> 週框。</returns>
    </member>
    <member name="M:System.Windows.Forms.Design.Behavior.BehaviorService.ControlToAdornerWindow(System.Windows.Forms.Control)">
      <summary vsli:raw="Returns the location of a &lt;see cref=&quot;T:System.Windows.Forms.Control&quot; /&gt; translated to adorner window coordinates.">傳回轉譯成裝飾項 (Adorner) 視窗座標之 <see cref="T:System.Windows.Forms.Control" /> 的位置。</summary>
      <param name="c" vsli:raw="The &lt;see cref=&quot;T:System.Windows.Forms.Control&quot; /&gt; to translate.">要轉換的 <see cref="T:System.Windows.Forms.Control" />。</param>
      <returns vsli:raw="A &lt;see cref=&quot;T:System.Drawing.Point&quot; /&gt; value indicating the location of &lt;paramref name=&quot;c&quot; /&gt; in adorner window coordinates.">
        <see cref="T:System.Drawing.Point" /> 值，表示裝飾項視窗座標中 <paramref name="c" /> 的位置。</returns>
    </member>
    <member name="M:System.Windows.Forms.Design.Behavior.BehaviorService.Dispose">
      <summary vsli:raw="Releases all resources used by the &lt;see cref=&quot;T:System.Windows.Forms.Design.Behavior.BehaviorService&quot; /&gt;.">釋放 <see cref="T:System.Windows.Forms.Design.Behavior.BehaviorService" /> 所使用的所有資源。</summary>
    </member>
    <member name="M:System.Windows.Forms.Design.Behavior.BehaviorService.GetNextBehavior(System.Windows.Forms.Design.Behavior.Behavior)">
      <summary vsli:raw="Returns the &lt;see cref=&quot;T:System.Windows.Forms.Design.Behavior.Behavior&quot; /&gt; immediately after the given &lt;see cref=&quot;T:System.Windows.Forms.Design.Behavior.Behavior&quot; /&gt; in the behavior stack.">傳回緊接著行為堆疊中指定的 <see cref="T:System.Windows.Forms.Design.Behavior.Behavior" /> 後面的 <see cref="T:System.Windows.Forms.Design.Behavior.Behavior" />。</summary>
      <param name="behavior" vsli:raw="The &lt;see cref=&quot;T:System.Windows.Forms.Design.Behavior.Behavior&quot; /&gt; preceding the &lt;see cref=&quot;T:System.Windows.Forms.Design.Behavior.Behavior&quot; /&gt; to be returned.">要傳回之 <see cref="T:System.Windows.Forms.Design.Behavior.Behavior" /> 前面的 <see cref="T:System.Windows.Forms.Design.Behavior.Behavior" />。</param>
      <returns vsli:raw="The &lt;see cref=&quot;T:System.Windows.Forms.Design.Behavior.Behavior&quot; /&gt; immediately after &lt;paramref name=&quot;behavior&quot; /&gt; in the behavior stack, or &lt;see langword=&quot;null&quot; /&gt; if there is no following behavior.">緊接在行為堆疊中 <paramref name="behavior" /> 之後的 <see cref="T:System.Windows.Forms.Design.Behavior.Behavior" />；如果沒有下列行為，則為 <see langword="null" />。</returns>
    </member>
    <member name="M:System.Windows.Forms.Design.Behavior.BehaviorService.Invalidate">
      <summary vsli:raw="Invalidates the adorner window of the &lt;see cref=&quot;T:System.Windows.Forms.Design.Behavior.BehaviorService&quot; /&gt;.">讓 <see cref="T:System.Windows.Forms.Design.Behavior.BehaviorService" /> 的裝飾項 (Adorner) 視窗失效。</summary>
    </member>
    <member name="M:System.Windows.Forms.Design.Behavior.BehaviorService.Invalidate(System.Drawing.Rectangle)">
      <summary vsli:raw="Invalidates, within the adorner window, the specified area of the &lt;see cref=&quot;T:System.Windows.Forms.Design.Behavior.BehaviorService&quot; /&gt;.">讓裝飾項 (Adorner) 視窗內 <see cref="T:System.Windows.Forms.Design.Behavior.BehaviorService" /> 的指定區域失效。</summary>
      <param name="rect" vsli:raw="The rectangular area to invalidate.">要使其失效的矩形區域。</param>
    </member>
    <member name="M:System.Windows.Forms.Design.Behavior.BehaviorService.Invalidate(System.Drawing.Region)">
      <summary vsli:raw="Invalidates, within the adorner window, the specified area of the &lt;see cref=&quot;T:System.Windows.Forms.Design.Behavior.BehaviorService&quot; /&gt;.">讓裝飾項 (Adorner) 視窗內 <see cref="T:System.Windows.Forms.Design.Behavior.BehaviorService" /> 的指定區域失效。</summary>
      <param name="r" vsli:raw="The region to invalidate.">要使其失效的區域。</param>
    </member>
    <member name="M:System.Windows.Forms.Design.Behavior.BehaviorService.MapAdornerWindowPoint(System.IntPtr,System.Drawing.Point)">
      <summary vsli:raw="Converts a point in a handle's coordinate system to the adorner window coordinates.">將控制代碼座標系統中的某個點轉換成裝飾項視窗座標。</summary>
      <param name="handle" vsli:raw="An adorner window's handle.">裝飾項視窗的控制代碼。</param>
      <param name="pt" vsli:raw="A &lt;see cref=&quot;T:System.Drawing.Point&quot; /&gt; in a handle's coordinate system.">控制代碼座標系統中的 <see cref="T:System.Drawing.Point" />。</param>
      <returns vsli:raw="A &lt;see cref=&quot;T:System.Drawing.Point&quot; /&gt; in the adorner window coordinates.">裝飾項視窗座標中的 <see cref="T:System.Drawing.Point" />。</returns>
    </member>
    <member name="M:System.Windows.Forms.Design.Behavior.BehaviorService.PopBehavior(System.Windows.Forms.Design.Behavior.Behavior)">
      <summary vsli:raw="Removes and returns the &lt;see cref=&quot;T:System.Windows.Forms.Design.Behavior.Behavior&quot; /&gt; at the top of the stack.">移除並傳回堆疊頂端的 <see cref="T:System.Windows.Forms.Design.Behavior.Behavior" />。</summary>
      <param name="behavior" vsli:raw="The &lt;see cref=&quot;T:System.Windows.Forms.Design.Behavior.Behavior&quot; /&gt; to remove from the stack.">要從堆疊移除的 <see cref="T:System.Windows.Forms.Design.Behavior.Behavior" />。</param>
      <exception cref="T:System.InvalidOperationException" vsli:raw="The &lt;see cref=&quot;T:System.Windows.Forms.Design.Behavior.Behavior&quot; /&gt; stack is empty.">
        <see cref="T:System.Windows.Forms.Design.Behavior.Behavior" /> 堆疊是空的。</exception>
      <returns vsli:raw="The &lt;see cref=&quot;T:System.Windows.Forms.Design.Behavior.Behavior&quot; /&gt; that was removed from the stack.">已從堆疊移除的 <see cref="T:System.Windows.Forms.Design.Behavior.Behavior" />。</returns>
    </member>
    <member name="M:System.Windows.Forms.Design.Behavior.BehaviorService.PushBehavior(System.Windows.Forms.Design.Behavior.Behavior)">
      <summary vsli:raw="Pushes a &lt;see cref=&quot;T:System.Windows.Forms.Design.Behavior.Behavior&quot; /&gt; onto the behavior stack.">將 <see cref="T:System.Windows.Forms.Design.Behavior.Behavior" /> 推入行為堆疊中。</summary>
      <param name="behavior" vsli:raw="The &lt;see cref=&quot;T:System.Windows.Forms.Design.Behavior.Behavior&quot; /&gt; to push.">要推入的 <see cref="T:System.Windows.Forms.Design.Behavior.Behavior" />。</param>
      <exception cref="T:System.ArgumentNullException" vsli:raw="&lt;paramref name=&quot;behavior&quot; /&gt; is &lt;see langword=&quot;null&quot; /&gt;.">
        <paramref name="behavior" /> 為 <see langword="null" />。</exception>
    </member>
    <member name="M:System.Windows.Forms.Design.Behavior.BehaviorService.PushCaptureBehavior(System.Windows.Forms.Design.Behavior.Behavior)">
      <summary vsli:raw="Pushes a &lt;see cref=&quot;T:System.Windows.Forms.Design.Behavior.Behavior&quot; /&gt; onto the behavior stack and assigns mouse capture to the behavior.">將 <see cref="T:System.Windows.Forms.Design.Behavior.Behavior" /> 推入行為堆疊中，並將滑鼠擷取指派給該行為。</summary>
      <param name="behavior" vsli:raw="The &lt;see cref=&quot;T:System.Windows.Forms.Design.Behavior.Behavior&quot; /&gt; to push.">要推入的 <see cref="T:System.Windows.Forms.Design.Behavior.Behavior" />。</param>
      <exception cref="T:System.ArgumentNullException" vsli:raw="&lt;paramref name=&quot;behavior&quot; /&gt; is &lt;see langword=&quot;null&quot; /&gt;.">
        <paramref name="behavior" /> 為 <see langword="null" />。</exception>
    </member>
    <member name="M:System.Windows.Forms.Design.Behavior.BehaviorService.ScreenToAdornerWindow(System.Drawing.Point)">
      <summary vsli:raw="Translates a point in screen coordinates into the adorner window coordinates of the &lt;see cref=&quot;T:System.Windows.Forms.Design.Behavior.BehaviorService&quot; /&gt;.">將螢幕座標中的點轉譯成 <see cref="T:System.Windows.Forms.Design.Behavior.BehaviorService" /> 的裝飾項視窗座標。</summary>
      <param name="p" vsli:raw="The &lt;see cref=&quot;T:System.Drawing.Point&quot; /&gt; value to transform.">要轉換的 <see cref="T:System.Drawing.Point" /> 值。</param>
      <returns vsli:raw="The transformed &lt;see cref=&quot;T:System.Drawing.Point&quot; /&gt; value, in adorner window coordinates.">裝飾項視窗座標中已轉換的 <see cref="T:System.Drawing.Point" /> 值。</returns>
    </member>
    <member name="M:System.Windows.Forms.Design.Behavior.BehaviorService.SyncSelection">
      <summary vsli:raw="Synchronizes all selection glyphs.">同步處理所有的選取圖形 (Glyph)。</summary>
    </member>
    <member name="P:System.Windows.Forms.Design.Behavior.BehaviorService.Adorners">
      <summary vsli:raw="Gets the &lt;see cref=&quot;T:System.Windows.Forms.Design.Behavior.BehaviorServiceAdornerCollection&quot; /&gt;.">取得 <see cref="T:System.Windows.Forms.Design.Behavior.BehaviorServiceAdornerCollection" />。</summary>
      <returns vsli:raw="A collection of adorner.">裝飾項集合。</returns>
    </member>
    <member name="P:System.Windows.Forms.Design.Behavior.BehaviorService.AdornerWindowGraphics">
      <summary vsli:raw="Gets the &lt;see cref=&quot;T:System.Drawing.Graphics&quot; /&gt; for the adorner window.">取得裝飾項 (Adorner) 視窗的 <see cref="T:System.Drawing.Graphics" />。</summary>
      <returns vsli:raw="The &lt;see cref=&quot;T:System.Drawing.Graphics&quot; /&gt; for the adorner window.">裝飾項視窗的 <see cref="T:System.Drawing.Graphics" />。</returns>
    </member>
    <member name="P:System.Windows.Forms.Design.Behavior.BehaviorService.CurrentBehavior">
      <summary vsli:raw="Gets the &lt;see cref=&quot;T:System.Windows.Forms.Design.Behavior.Behavior&quot; /&gt; at the top of the behavior stack without removing it.">取得行為堆疊頂端的 <see cref="T:System.Windows.Forms.Design.Behavior.Behavior" />，而不必將它移除。</summary>
      <returns vsli:raw="The &lt;see cref=&quot;T:System.Windows.Forms.Design.Behavior.Behavior&quot; /&gt; at the top of the behavior stack.">行為堆疊頂端的 <see cref="T:System.Windows.Forms.Design.Behavior.Behavior" />。</returns>
    </member>
    <member name="T:System.Windows.Forms.Design.Behavior.BehaviorServiceAdornerCollection">
      <summary vsli:raw="Stores &lt;see cref=&quot;T:System.Windows.Forms.Design.Behavior.Adorner&quot; /&gt; objects in a strongly typed collection.">將 <see cref="T:System.Windows.Forms.Design.Behavior.Adorner" /> 物件儲存在強類型集合中。</summary>
    </member>
    <member name="M:System.Windows.Forms.Design.Behavior.BehaviorServiceAdornerCollection.#ctor(System.Windows.Forms.Design.Behavior.Adorner[])">
      <summary vsli:raw="Initializes a new instance of the &lt;see cref=&quot;T:System.Windows.Forms.Design.Behavior.BehaviorServiceAdornerCollection&quot; /&gt; class with the given array.">使用指定陣列，初始化 <see cref="T:System.Windows.Forms.Design.Behavior.BehaviorServiceAdornerCollection" /> 類別的新執行個體。</summary>
      <param name="value" vsli:raw="An array of type &lt;see cref=&quot;T:System.Windows.Forms.Design.Behavior.Adorner&quot; /&gt; to populate the collection.">要填入集合之類型 <see cref="T:System.Windows.Forms.Design.Behavior.Adorner" /> 的陣列。</param>
    </member>
    <member name="M:System.Windows.Forms.Design.Behavior.BehaviorServiceAdornerCollection.#ctor(System.Windows.Forms.Design.Behavior.BehaviorService)">
      <summary vsli:raw="Initializes a new instance of the &lt;see cref=&quot;T:System.Windows.Forms.Design.Behavior.BehaviorServiceAdornerCollection&quot; /&gt; class with the given &lt;see cref=&quot;T:System.Windows.Forms.Design.Behavior.BehaviorService&quot; /&gt; reference.">使用指定的 <see cref="T:System.Windows.Forms.Design.Behavior.BehaviorServiceAdornerCollection" /> 參考，初始化 <see cref="T:System.Windows.Forms.Design.Behavior.BehaviorService" /> 類別的新執行個體。</summary>
      <param name="behaviorService" vsli:raw="A &lt;see cref=&quot;T:System.Windows.Forms.Design.Behavior.BehaviorService&quot; /&gt; reference.">
        <see cref="T:System.Windows.Forms.Design.Behavior.BehaviorService" /> 參考。</param>
    </member>
    <member name="M:System.Windows.Forms.Design.Behavior.BehaviorServiceAdornerCollection.#ctor(System.Windows.Forms.Design.Behavior.BehaviorServiceAdornerCollection)">
      <summary vsli:raw="Initializes a new instance of the &lt;see cref=&quot;T:System.Windows.Forms.Design.Behavior.BehaviorServiceAdornerCollection&quot; /&gt; class from an existing &lt;see cref=&quot;T:System.Windows.Forms.Design.Behavior.BehaviorServiceAdornerCollection&quot; /&gt;.">從現有的 <see cref="T:System.Windows.Forms.Design.Behavior.BehaviorServiceAdornerCollection" />，初始化 <see cref="T:System.Windows.Forms.Design.Behavior.BehaviorServiceAdornerCollection" /> 類別的新執行個體。</summary>
      <param name="value" vsli:raw="A &lt;see cref=&quot;T:System.Windows.Forms.Design.Behavior.BehaviorServiceAdornerCollection&quot; /&gt; from which to populate the collection.">要填入集合的來源 <see cref="T:System.Windows.Forms.Design.Behavior.BehaviorServiceAdornerCollection" />。</param>
    </member>
    <member name="M:System.Windows.Forms.Design.Behavior.BehaviorServiceAdornerCollection.Add(System.Windows.Forms.Design.Behavior.Adorner)">
      <summary vsli:raw="Adds an &lt;see cref=&quot;T:System.Windows.Forms.Design.Behavior.Adorner&quot; /&gt; with the specified value to the &lt;see cref=&quot;T:System.Windows.Forms.Design.Behavior.BehaviorServiceAdornerCollection&quot; /&gt;.">將具有指定值的 <see cref="T:System.Windows.Forms.Design.Behavior.Adorner" /> 加入至 <see cref="T:System.Windows.Forms.Design.Behavior.BehaviorServiceAdornerCollection" />。</summary>
      <param name="value" vsli:raw="An &lt;see cref=&quot;T:System.Windows.Forms.Design.Behavior.Adorner&quot; /&gt; to add to the end of the collection.">要加入至集合結尾的 <see cref="T:System.Windows.Forms.Design.Behavior.Adorner" />。</param>
      <returns vsli:raw="The index at which the new element was inserted.">要插入新項目的索引。</returns>
    </member>
    <member name="M:System.Windows.Forms.Design.Behavior.BehaviorServiceAdornerCollection.AddRange(System.Windows.Forms.Design.Behavior.Adorner[])">
      <summary vsli:raw="Copies the elements of an array to the end of the &lt;see cref=&quot;T:System.Windows.Forms.Design.Behavior.BehaviorServiceAdornerCollection&quot; /&gt;.">將陣列的元素複製至 <see cref="T:System.Windows.Forms.Design.Behavior.BehaviorServiceAdornerCollection" /> 的結尾。</summary>
      <param name="value" vsli:raw="An array of type &lt;see cref=&quot;T:System.Windows.Forms.Design.Behavior.Adorner&quot; /&gt; to copy to the end of the collection.">要複製至集合結尾之 <see cref="T:System.Windows.Forms.Design.Behavior.Adorner" /> 型別的陣列。</param>
    </member>
    <member name="M:System.Windows.Forms.Design.Behavior.BehaviorServiceAdornerCollection.AddRange(System.Windows.Forms.Design.Behavior.BehaviorServiceAdornerCollection)">
      <summary vsli:raw="Adds the contents of another &lt;see cref=&quot;T:System.Windows.Forms.Design.Behavior.BehaviorServiceAdornerCollection&quot; /&gt; to the end of the collection.">將另一個 <see cref="T:System.Windows.Forms.Design.Behavior.BehaviorServiceAdornerCollection" /> 的內容加入至集合末端。</summary>
      <param name="value" vsli:raw="A &lt;see cref=&quot;T:System.Windows.Forms.Design.Behavior.BehaviorServiceAdornerCollection&quot; /&gt; to add to the end of the collection.">要加入至集合結尾的 <see cref="T:System.Windows.Forms.Design.Behavior.BehaviorServiceAdornerCollection" />。</param>
    </member>
    <member name="M:System.Windows.Forms.Design.Behavior.BehaviorServiceAdornerCollection.Contains(System.Windows.Forms.Design.Behavior.Adorner)">
      <summary vsli:raw="Gets a value indicating whether the &lt;see cref=&quot;T:System.Windows.Forms.Design.Behavior.BehaviorServiceAdornerCollection&quot; /&gt; contains the specified &lt;see cref=&quot;T:System.Windows.Forms.Design.Behavior.Adorner&quot; /&gt;.">取得值，指出 <see cref="T:System.Windows.Forms.Design.Behavior.BehaviorServiceAdornerCollection" /> 是否含有指定的 <see cref="T:System.Windows.Forms.Design.Behavior.Adorner" />。</summary>
      <param name="value" vsli:raw="The &lt;see cref=&quot;T:System.Windows.Forms.Design.Behavior.Adorner&quot; /&gt; to locate.">要尋找的 <see cref="T:System.Windows.Forms.Design.Behavior.Adorner" />。</param>
      <returns vsli:raw="&lt;see langword=&quot;true&quot; /&gt; if the &lt;see cref=&quot;T:System.Windows.Forms.Design.Behavior.Adorner&quot; /&gt; is contained in the collection; otherwise, &lt;see langword=&quot;false&quot; /&gt;.">如果 <see cref="T:System.Windows.Forms.Design.Behavior.Adorner" /> 包含在集合中，則為 <see langword="true" />，否則為 <see langword="false" />。</returns>
    </member>
    <member name="M:System.Windows.Forms.Design.Behavior.BehaviorServiceAdornerCollection.CopyTo(System.Windows.Forms.Design.Behavior.Adorner[],System.Int32)">
      <summary vsli:raw="Copies the &lt;see cref=&quot;T:System.Windows.Forms.Design.Behavior.BehaviorServiceAdornerCollection&quot; /&gt; values to a one-dimensional &lt;see cref=&quot;T:System.Array&quot; /&gt; at the specified index.">將 <see cref="T:System.Windows.Forms.Design.Behavior.BehaviorServiceAdornerCollection" /> 值複製到指定索引處的一維 <see cref="T:System.Array" />。</summary>
      <param name="array" vsli:raw="The one-dimensional &lt;see cref=&quot;T:System.Array&quot; /&gt; that is the destination of the values copied from &lt;see cref=&quot;T:System.Windows.Forms.Design.Behavior.BehaviorServiceAdornerCollection&quot; /&gt;.">複製自 <see cref="T:System.Windows.Forms.Design.Behavior.BehaviorServiceAdornerCollection" /> 之值的目的地一維 <see cref="T:System.Array" />。</param>
      <param name="index" vsli:raw="The index in &lt;paramref name=&quot;array&quot; /&gt; where copying begins.">
        <paramref name="array" /> 中開始複製處的索引。</param>
      <exception cref="T:System.ArgumentException" vsli:raw="&lt;paramref name=&quot;array&quot; /&gt; is multidimensional.&#xA;&#xA;-or-&#xA;&#xA;The number of elements in the &lt;see cref=&quot;T:System.Windows.Forms.Design.Behavior.BehaviorServiceAdornerCollection&quot; /&gt; is greater than the available space between &lt;paramref name=&quot;index&quot; /&gt; and the end of &lt;paramref name=&quot;array&quot; /&gt;.">
        <paramref name="array" /> 是多維的。

-或-

<see cref="T:System.Windows.Forms.Design.Behavior.BehaviorServiceAdornerCollection" /> 中的項目數大於 <paramref name="index" /> 與 <paramref name="array" /> 結尾間的可用空間。</exception>
      <exception cref="T:System.ArgumentNullException" vsli:raw="&lt;paramref name=&quot;array&quot; /&gt; is &lt;see langword=&quot;null&quot; /&gt;.">
        <paramref name="array" /> 為 <see langword="null" />。</exception>
      <exception cref="T:System.ArgumentOutOfRangeException" vsli:raw="&lt;paramref name=&quot;arrayIndex&quot; /&gt; is less than the lower bound of &lt;paramref name=&quot;array&quot; /&gt;.">
        <paramref name="arrayIndex" /> 小於 <paramref name="array" /> 的下限。</exception>
    </member>
    <member name="M:System.Windows.Forms.Design.Behavior.BehaviorServiceAdornerCollection.GetEnumerator">
      <summary vsli:raw="Returns an enumerator that can iterate through the &lt;see cref=&quot;T:System.Windows.Forms.Design.Behavior.BehaviorServiceAdornerCollection&quot; /&gt; instance.">傳回可以逐一查看 <see cref="T:System.Windows.Forms.Design.Behavior.BehaviorServiceAdornerCollection" /> 執行個體的列舉值。</summary>
      <returns vsli:raw="An &lt;see cref=&quot;T:System.Collections.IEnumerator&quot; /&gt; for the &lt;see cref=&quot;T:System.Windows.Forms.Design.Behavior.BehaviorServiceAdornerCollection&quot; /&gt; instance.">
        <see cref="T:System.Collections.IEnumerator" /> 執行個體的 <see cref="T:System.Windows.Forms.Design.Behavior.BehaviorServiceAdornerCollection" />。</returns>
    </member>
    <member name="M:System.Windows.Forms.Design.Behavior.BehaviorServiceAdornerCollection.IndexOf(System.Windows.Forms.Design.Behavior.Adorner)">
      <summary vsli:raw="Returns the index of an &lt;see cref=&quot;T:System.Windows.Forms.Design.Behavior.Adorner&quot; /&gt; in the &lt;see cref=&quot;T:System.Windows.Forms.Design.Behavior.BehaviorServiceAdornerCollection&quot; /&gt;.">傳回 <see cref="T:System.Windows.Forms.Design.Behavior.Adorner" /> 中 <see cref="T:System.Windows.Forms.Design.Behavior.BehaviorServiceAdornerCollection" /> 的索引。</summary>
      <param name="value" vsli:raw="The &lt;see cref=&quot;T:System.Windows.Forms.Design.Behavior.Adorner&quot; /&gt; to locate.">要尋找的 <see cref="T:System.Windows.Forms.Design.Behavior.Adorner" />。</param>
      <returns vsli:raw="The index of the &lt;see cref=&quot;T:System.Windows.Forms.Design.Behavior.Adorner&quot; /&gt; of &lt;paramref name=&quot;value&quot; /&gt; in the &lt;see cref=&quot;T:System.Windows.Forms.Design.Behavior.BehaviorServiceAdornerCollection&quot; /&gt;, if found; otherwise, -1.">如果可以找到 <see cref="T:System.Windows.Forms.Design.Behavior.Adorner" /> 中 <paramref name="value" /> 之 <see cref="T:System.Windows.Forms.Design.Behavior.BehaviorServiceAdornerCollection" /> 的索引，否則為 -1。</returns>
    </member>
    <member name="M:System.Windows.Forms.Design.Behavior.BehaviorServiceAdornerCollection.Insert(System.Int32,System.Windows.Forms.Design.Behavior.Adorner)">
      <summary vsli:raw="Inserts an &lt;see cref=&quot;T:System.Windows.Forms.Design.Behavior.Adorner&quot; /&gt; into the &lt;see cref=&quot;T:System.Windows.Forms.Design.Behavior.BehaviorServiceAdornerCollection&quot; /&gt; at the specified index.">將 <see cref="T:System.Windows.Forms.Design.Behavior.Adorner" /> 插入至 <see cref="T:System.Windows.Forms.Design.Behavior.BehaviorServiceAdornerCollection" /> 的指定索引處。</summary>
      <param name="index" vsli:raw="The zero-based index where &lt;paramref name=&quot;value&quot; /&gt; should be inserted.">應該插入 <paramref name="value" /> 之以零起始的索引。</param>
      <param name="value" vsli:raw="The &lt;see cref=&quot;T:System.Windows.Forms.Design.Behavior.Adorner&quot; /&gt; to insert.">要插入的 <see cref="T:System.Windows.Forms.Design.Behavior.Adorner" />。</param>
    </member>
    <member name="M:System.Windows.Forms.Design.Behavior.BehaviorServiceAdornerCollection.Remove(System.Windows.Forms.Design.Behavior.Adorner)">
      <summary vsli:raw="Removes a specific &lt;see cref=&quot;T:System.Windows.Forms.Design.Behavior.Adorner&quot; /&gt; from the &lt;see cref=&quot;T:System.Windows.Forms.Design.Behavior.BehaviorServiceAdornerCollection&quot; /&gt;.">從 <see cref="T:System.Windows.Forms.Design.Behavior.Adorner" /> 移除特定的 <see cref="T:System.Windows.Forms.Design.Behavior.BehaviorServiceAdornerCollection" />。</summary>
      <param name="value" vsli:raw="The &lt;see cref=&quot;T:System.Windows.Forms.Design.Behavior.Adorner&quot; /&gt; to remove from the &lt;see cref=&quot;T:System.Windows.Forms.Design.Behavior.BehaviorServiceAdornerCollection&quot; /&gt;.">要從 <see cref="T:System.Windows.Forms.Design.Behavior.Adorner" /> 移除的 <see cref="T:System.Windows.Forms.Design.Behavior.BehaviorServiceAdornerCollection" />。</param>
      <exception cref="T:System.ArgumentException" vsli:raw="&lt;paramref name=&quot;value&quot; /&gt; is not found in the collection.">在集合中找不到 <paramref name="value" />。</exception>
    </member>
    <member name="P:System.Windows.Forms.Design.Behavior.BehaviorServiceAdornerCollection.Item(System.Int32)">
      <summary vsli:raw="Gets or sets the element at the specified index.">在指定的索引位置上取得或設定項目。</summary>
      <param name="index" vsli:raw="The zero-based index of the element.">元素以零起始的索引。</param>
      <returns vsli:raw="The &lt;see cref=&quot;T:System.Windows.Forms.Design.Behavior.Adorner&quot; /&gt; element specified by &lt;paramref name=&quot;index&quot; /&gt;.">
        <paramref name="index" /> 指定的 <see cref="T:System.Windows.Forms.Design.Behavior.Adorner" /> 項目。</returns>
    </member>
    <member name="T:System.Windows.Forms.Design.Behavior.BehaviorServiceAdornerCollectionEnumerator">
      <summary vsli:raw="Supports iteration over a &lt;see cref=&quot;T:System.Windows.Forms.Design.Behavior.BehaviorServiceAdornerCollection&quot; /&gt;.">支援 <see cref="T:System.Windows.Forms.Design.Behavior.BehaviorServiceAdornerCollection" /> 上的反覆項目。</summary>
    </member>
    <member name="M:System.Windows.Forms.Design.Behavior.BehaviorServiceAdornerCollectionEnumerator.#ctor(System.Windows.Forms.Design.Behavior.BehaviorServiceAdornerCollection)">
      <summary vsli:raw="Initializes a new instance of the &lt;see cref=&quot;T:System.Windows.Forms.Design.Behavior.BehaviorServiceAdornerCollectionEnumerator&quot; /&gt; class.">初始化 <see cref="T:System.Windows.Forms.Design.Behavior.BehaviorServiceAdornerCollectionEnumerator" /> 類別的新執行個體。</summary>
      <param name="mappings" vsli:raw="The &lt;see cref=&quot;T:System.Windows.Forms.Design.Behavior.BehaviorServiceAdornerCollection&quot; /&gt; for which to create the enumerator.">要建立列舉程式的 <see cref="T:System.Windows.Forms.Design.Behavior.BehaviorServiceAdornerCollection" />。</param>
    </member>
    <member name="M:System.Windows.Forms.Design.Behavior.BehaviorServiceAdornerCollectionEnumerator.MoveNext">
      <summary vsli:raw="Advances the enumerator to the next element of the &lt;see cref=&quot;T:System.Windows.Forms.Design.Behavior.BehaviorServiceAdornerCollection&quot; /&gt;.">將列舉值前移至 <see cref="T:System.Windows.Forms.Design.Behavior.BehaviorServiceAdornerCollection" /> 的下一個項目。</summary>
      <returns vsli:raw="&lt;see langword=&quot;true&quot; /&gt; if the enumerator was successfully advanced to the next element; &lt;see langword=&quot;false&quot; /&gt; if the enumerator was past the end of the collection.">如果列舉程式成功前移至下一個項目則為 <see langword="true" />，如果列舉程式已超過集合的結尾則為 <see langword="false" />。</returns>
    </member>
    <member name="M:System.Windows.Forms.Design.Behavior.BehaviorServiceAdornerCollectionEnumerator.Reset">
      <summary vsli:raw="Sets the enumerator to its initial position, which is before the first element in the collection.">設定列舉值至它的初始位置，這是在集合中第一個項目之前。</summary>
    </member>
    <member name="P:System.Windows.Forms.Design.Behavior.BehaviorServiceAdornerCollectionEnumerator.Current">
      <summary vsli:raw="Gets the current element in the &lt;see cref=&quot;T:System.Windows.Forms.Design.Behavior.BehaviorServiceAdornerCollection&quot; /&gt;.">取得 <see cref="T:System.Windows.Forms.Design.Behavior.BehaviorServiceAdornerCollection" /> 中目前的項目。</summary>
      <returns vsli:raw="The current element in the &lt;see cref=&quot;T:System.Windows.Forms.Design.Behavior.BehaviorServiceAdornerCollection&quot; /&gt;.">
        <see cref="T:System.Windows.Forms.Design.Behavior.BehaviorServiceAdornerCollection" /> 中目前的項目。</returns>
    </member>
    <member name="P:System.Windows.Forms.Design.Behavior.BehaviorServiceAdornerCollectionEnumerator.System#Collections#IEnumerator#Current">
      <summary vsli:raw="For a description of this member, see the &lt;see cref=&quot;P:System.Collections.IEnumerator.Current&quot; /&gt; property.">如需這個成員的描述，請參閱 <see cref="P:System.Collections.IEnumerator.Current" /> 屬性。</summary>
      <returns vsli:raw="The current &lt;see cref=&quot;T:System.Windows.Forms.Design.Behavior.Adorner&quot; /&gt; in the collection.">集合中目前的 <see cref="T:System.Windows.Forms.Design.Behavior.Adorner" />。</returns>
    </member>
    <member name="T:System.Windows.Forms.Design.Behavior.ComponentGlyph">
      <summary vsli:raw="Associates a &lt;see cref=&quot;T:System.Windows.Forms.Design.Behavior.Glyph&quot; /&gt; with its component.">將 <see cref="T:System.Windows.Forms.Design.Behavior.Glyph" /> 與其元件產生關聯。</summary>
    </member>
    <member name="M:System.Windows.Forms.Design.Behavior.ComponentGlyph.#ctor(System.ComponentModel.IComponent)">
      <summary vsli:raw="Initializes a new instance of the &lt;see cref=&quot;T:System.Windows.Forms.Design.Behavior.ComponentGlyph&quot; /&gt; class.">初始化 <see cref="T:System.Windows.Forms.Design.Behavior.ComponentGlyph" /> 類別的新執行個體。</summary>
      <param name="relatedComponent" vsli:raw="The component with which the &lt;see cref=&quot;T:System.Windows.Forms.Design.Behavior.Glyph&quot; /&gt; is associated.">與 <see cref="T:System.Windows.Forms.Design.Behavior.Glyph" /> 相關聯的元件。</param>
    </member>
    <member name="M:System.Windows.Forms.Design.Behavior.ComponentGlyph.#ctor(System.ComponentModel.IComponent,System.Windows.Forms.Design.Behavior.Behavior)">
      <summary vsli:raw="Initializes a new instance of the &lt;see cref=&quot;T:System.Windows.Forms.Design.Behavior.ComponentGlyph&quot; /&gt; class.">初始化 <see cref="T:System.Windows.Forms.Design.Behavior.ComponentGlyph" /> 類別的新執行個體。</summary>
      <param name="relatedComponent" vsli:raw="The component with which the &lt;see cref=&quot;T:System.Windows.Forms.Design.Behavior.Glyph&quot; /&gt; is associated.">與 <see cref="T:System.Windows.Forms.Design.Behavior.Glyph" /> 相關聯的元件。</param>
      <param name="behavior" vsli:raw="The &lt;see cref=&quot;T:System.Windows.Forms.Design.Behavior.Behavior&quot; /&gt; with which the &lt;see cref=&quot;T:System.Windows.Forms.Design.Behavior.Glyph&quot; /&gt; is associated.">與 <see cref="T:System.Windows.Forms.Design.Behavior.Behavior" /> 關聯的 <see cref="T:System.Windows.Forms.Design.Behavior.Glyph" />。</param>
    </member>
    <member name="M:System.Windows.Forms.Design.Behavior.ComponentGlyph.GetHitTest(System.Drawing.Point)">
      <summary vsli:raw="Indicates whether a mouse click at the specified point should be handled by the &lt;see cref=&quot;T:System.Windows.Forms.Design.Behavior.ComponentGlyph&quot; /&gt;.">指出在指定的按一下滑鼠動作是否應由 <see cref="T:System.Windows.Forms.Design.Behavior.ComponentGlyph" /> 處理。</summary>
      <param name="p" vsli:raw="A point to hit-test.">要點擊測試的點。</param>
      <returns vsli:raw="A &lt;see cref=&quot;T:System.Windows.Forms.Cursor&quot; /&gt; if the &lt;see cref=&quot;T:System.Windows.Forms.Design.Behavior.Glyph&quot; /&gt; is associated with &lt;paramref name=&quot;p&quot; /&gt;; otherwise, &lt;see langword=&quot;null&quot; /&gt;.">如果 <see cref="T:System.Windows.Forms.Cursor" /> 與 <paramref name="p" /> 相關聯，則為 <see cref="T:System.Windows.Forms.Design.Behavior.Glyph" />，否則為 <see langword="null" />。</returns>
    </member>
    <member name="M:System.Windows.Forms.Design.Behavior.ComponentGlyph.Paint(System.Windows.Forms.PaintEventArgs)">
      <summary vsli:raw="Provides paint logic.">提供繪製邏輯。</summary>
      <param name="pe" vsli:raw="A &lt;see cref=&quot;T:System.Windows.Forms.PaintEventArgs&quot; /&gt; containing the &lt;see cref=&quot;P:System.Windows.Forms.Design.Behavior.BehaviorService.AdornerWindowGraphics&quot; /&gt; of the &lt;see cref=&quot;T:System.Windows.Forms.Design.Behavior.BehaviorService&quot; /&gt;.">
        <see cref="T:System.Windows.Forms.PaintEventArgs" />，包含 <see cref="T:System.Windows.Forms.Design.Behavior.BehaviorService" /> 的 <see cref="P:System.Windows.Forms.Design.Behavior.BehaviorService.AdornerWindowGraphics" />。</param>
    </member>
    <member name="P:System.Windows.Forms.Design.Behavior.ComponentGlyph.RelatedComponent">
      <summary vsli:raw="Gets the component that is associated with the &lt;see cref=&quot;T:System.Windows.Forms.Design.Behavior.Glyph&quot; /&gt; .">取得與 <see cref="T:System.Windows.Forms.Design.Behavior.Glyph" /> 相關聯的元件。</summary>
      <returns vsli:raw="An &lt;see cref=&quot;T:System.ComponentModel.IComponent&quot; /&gt; associated with the &lt;see cref=&quot;T:System.Windows.Forms.Design.Behavior.Glyph&quot; /&gt;.">與 <see cref="T:System.ComponentModel.IComponent" /> 相關聯的 <see cref="T:System.Windows.Forms.Design.Behavior.Glyph" />。</returns>
    </member>
    <member name="T:System.Windows.Forms.Design.Behavior.ControlBodyGlyph">
      <summary vsli:raw="Associates a &lt;see cref=&quot;T:System.Windows.Forms.Design.Behavior.Glyph&quot; /&gt; with its control.">將 <see cref="T:System.Windows.Forms.Design.Behavior.Glyph" /> 與其控制項產生關聯。</summary>
    </member>
    <member name="M:System.Windows.Forms.Design.Behavior.ControlBodyGlyph.#ctor(System.Drawing.Rectangle,System.Windows.Forms.Cursor,System.ComponentModel.IComponent,System.Windows.Forms.Design.Behavior.Behavior)">
      <summary vsli:raw="Initializes a new instance of the &lt;see cref=&quot;T:System.Windows.Forms.Design.Behavior.ControlBodyGlyph&quot; /&gt; class.">初始化 <see cref="T:System.Windows.Forms.Design.Behavior.ControlBodyGlyph" /> 類別的新執行個體。</summary>
      <param name="bounds" vsli:raw="A &lt;see cref=&quot;T:System.Drawing.Rectangle&quot; /&gt; that represents the bounds of the &lt;see cref=&quot;T:System.Windows.Forms.Design.Behavior.Glyph&quot; /&gt;.">
        <see cref="T:System.Drawing.Rectangle" />，表示 <see cref="T:System.Windows.Forms.Design.Behavior.Glyph" /> 的界限。</param>
      <param name="cursor" vsli:raw="A &lt;see cref=&quot;T:System.Windows.Forms.Cursor&quot; /&gt; that represents the cursor to display when the mouse pointer is over the &lt;see cref=&quot;T:System.Windows.Forms.Design.Behavior.Glyph&quot; /&gt;.">
        <see cref="T:System.Windows.Forms.Cursor" />，代表將滑鼠指標移至 <see cref="T:System.Windows.Forms.Design.Behavior.Glyph" /> 上方時所顯示的游標。</param>
      <param name="relatedComponent" vsli:raw="The component with which the &lt;see cref=&quot;T:System.Windows.Forms.Design.Behavior.Glyph&quot; /&gt; is associated.">與 <see cref="T:System.Windows.Forms.Design.Behavior.Glyph" /> 相關聯的元件。</param>
      <param name="behavior" vsli:raw="The &lt;see cref=&quot;T:System.Windows.Forms.Design.Behavior.Behavior&quot; /&gt; with which the &lt;see cref=&quot;T:System.Windows.Forms.Design.Behavior.Glyph&quot; /&gt; is associated.">與 <see cref="T:System.Windows.Forms.Design.Behavior.Behavior" /> 關聯的 <see cref="T:System.Windows.Forms.Design.Behavior.Glyph" />。</param>
    </member>
    <member name="M:System.Windows.Forms.Design.Behavior.ControlBodyGlyph.#ctor(System.Drawing.Rectangle,System.Windows.Forms.Cursor,System.ComponentModel.IComponent,System.Windows.Forms.Design.ControlDesigner)">
      <summary vsli:raw="Initializes a new instance of the &lt;see cref=&quot;T:System.Windows.Forms.Design.Behavior.ControlBodyGlyph&quot; /&gt; class.">初始化 <see cref="T:System.Windows.Forms.Design.Behavior.ControlBodyGlyph" /> 類別的新執行個體。</summary>
      <param name="bounds" vsli:raw="A &lt;see cref=&quot;T:System.Drawing.Rectangle&quot; /&gt; that represents the bounds of the &lt;see cref=&quot;T:System.Windows.Forms.Design.Behavior.Glyph&quot; /&gt;.">
        <see cref="T:System.Drawing.Rectangle" />，表示 <see cref="T:System.Windows.Forms.Design.Behavior.Glyph" /> 的界限。</param>
      <param name="cursor" vsli:raw="A &lt;see cref=&quot;T:System.Windows.Forms.Cursor&quot; /&gt; that represents the cursor to display when the mouse pointer is over the &lt;see cref=&quot;T:System.Windows.Forms.Design.Behavior.Glyph&quot; /&gt;.">
        <see cref="T:System.Windows.Forms.Cursor" />，代表將滑鼠指標移至 <see cref="T:System.Windows.Forms.Design.Behavior.Glyph" /> 上方時所顯示的游標。</param>
      <param name="relatedComponent" vsli:raw="The component with which the &lt;see cref=&quot;T:System.Windows.Forms.Design.Behavior.Glyph&quot; /&gt; is associated.">與 <see cref="T:System.Windows.Forms.Design.Behavior.Glyph" /> 相關聯的元件。</param>
      <param name="designer" vsli:raw="A &lt;see cref=&quot;T:System.Windows.Forms.Design.ControlDesigner&quot; /&gt; with which the &lt;see cref=&quot;T:System.Windows.Forms.Design.Behavior.Glyph&quot; /&gt; is associated.">與 <see cref="T:System.Windows.Forms.Design.ControlDesigner" /> 相關聯的 <see cref="T:System.Windows.Forms.Design.Behavior.Glyph" />。</param>
    </member>
    <member name="M:System.Windows.Forms.Design.Behavior.ControlBodyGlyph.GetHitTest(System.Drawing.Point)">
      <summary vsli:raw="Indicates whether a mouse click at the specified point should be handled by the &lt;see cref=&quot;T:System.Windows.Forms.Design.Behavior.ControlBodyGlyph&quot; /&gt;.">指出在指定的按一下滑鼠動作是否應由 <see cref="T:System.Windows.Forms.Design.Behavior.ControlBodyGlyph" /> 處理。</summary>
      <param name="p" vsli:raw="A point to hit test.">要點擊測試的點。</param>
      <returns vsli:raw="A &lt;see cref=&quot;T:System.Windows.Forms.Cursor&quot; /&gt; if the &lt;see cref=&quot;T:System.Windows.Forms.Design.Behavior.Glyph&quot; /&gt; is associated with &lt;paramref name=&quot;p&quot; /&gt;; otherwise, &lt;see langword=&quot;null&quot; /&gt;.">如果 <see cref="T:System.Windows.Forms.Cursor" /> 與 <paramref name="p" /> 相關聯，則為 <see cref="T:System.Windows.Forms.Design.Behavior.Glyph" />，否則為 <see langword="null" />。</returns>
    </member>
    <member name="P:System.Windows.Forms.Design.Behavior.ControlBodyGlyph.Bounds">
      <summary vsli:raw="Gets the bounds of the &lt;see cref=&quot;T:System.Windows.Forms.Design.Behavior.Glyph&quot; /&gt;.">取得 <see cref="T:System.Windows.Forms.Design.Behavior.Glyph" /> 的界限。</summary>
      <returns vsli:raw="A &lt;see cref=&quot;T:System.Drawing.Rectangle&quot; /&gt; representing the bounds of the &lt;see cref=&quot;T:System.Windows.Forms.Design.Behavior.Glyph&quot; /&gt;.">
        <see cref="T:System.Drawing.Rectangle" />，表示 <see cref="T:System.Windows.Forms.Design.Behavior.Glyph" /> 的界限。</returns>
    </member>
    <member name="T:System.Windows.Forms.Design.Behavior.Glyph">
      <summary vsli:raw="Represents a single user interface (UI) entity managed by an &lt;see cref=&quot;T:System.Windows.Forms.Design.Behavior.Adorner&quot; /&gt;.">代表由 <see cref="T:System.Windows.Forms.Design.Behavior.Adorner" /> 管理的單一使用者介面 (UI) 實體 (Entity)。</summary>
    </member>
    <member name="M:System.Windows.Forms.Design.Behavior.Glyph.#ctor(System.Windows.Forms.Design.Behavior.Behavior)">
      <summary vsli:raw="Initializes a new instance of the &lt;see cref=&quot;T:System.Windows.Forms.Design.Behavior.Glyph&quot; /&gt; class.">初始化 <see cref="T:System.Windows.Forms.Design.Behavior.Glyph" /> 類別的新執行個體。</summary>
      <param name="behavior" vsli:raw="The &lt;see cref=&quot;T:System.Windows.Forms.Design.Behavior.Behavior&quot; /&gt; associated with the &lt;see cref=&quot;T:System.Windows.Forms.Design.Behavior.Glyph&quot; /&gt;. Can be &lt;see langword=&quot;null&quot; /&gt;.">與 <see cref="T:System.Windows.Forms.Design.Behavior.Behavior" /> 關聯的 <see cref="T:System.Windows.Forms.Design.Behavior.Glyph" />。 可以是 <see langword="null" />。</param>
    </member>
    <member name="M:System.Windows.Forms.Design.Behavior.Glyph.GetHitTest(System.Drawing.Point)">
      <summary vsli:raw="Provides hit test logic.">提供點擊測試邏輯。</summary>
      <param name="p" vsli:raw="A point to hit-test.">要點擊測試的點。</param>
      <returns vsli:raw="A &lt;see cref=&quot;T:System.Windows.Forms.Cursor&quot; /&gt; if the &lt;see cref=&quot;T:System.Windows.Forms.Design.Behavior.Glyph&quot; /&gt; is associated with &lt;paramref name=&quot;p&quot; /&gt;; otherwise, &lt;see langword=&quot;null&quot; /&gt;.">如果 <see cref="T:System.Windows.Forms.Cursor" /> 與 <paramref name="p" /> 相關聯，則為 <see cref="T:System.Windows.Forms.Design.Behavior.Glyph" />，否則為 <see langword="null" />。</returns>
    </member>
    <member name="M:System.Windows.Forms.Design.Behavior.Glyph.Paint(System.Windows.Forms.PaintEventArgs)">
      <summary vsli:raw="Provides paint logic.">提供繪製邏輯。</summary>
      <param name="pe" vsli:raw="A &lt;see cref=&quot;T:System.Windows.Forms.PaintEventArgs&quot; /&gt; that contains the event data.">
        <see cref="T:System.Windows.Forms.PaintEventArgs" />，其中包含事件資料。</param>
    </member>
    <member name="M:System.Windows.Forms.Design.Behavior.Glyph.SetBehavior(System.Windows.Forms.Design.Behavior.Behavior)">
      <summary vsli:raw="Changes the &lt;see cref=&quot;T:System.Windows.Forms.Design.Behavior.Behavior&quot; /&gt; associated with the &lt;see cref=&quot;T:System.Windows.Forms.Design.Behavior.Glyph&quot; /&gt;.">變更與 <see cref="T:System.Windows.Forms.Design.Behavior.Behavior" /> 相關聯的 <see cref="T:System.Windows.Forms.Design.Behavior.Glyph" />。</summary>
      <param name="behavior" vsli:raw="A &lt;see cref=&quot;T:System.Windows.Forms.Design.Behavior.Behavior&quot; /&gt; to associate with the &lt;see cref=&quot;T:System.Windows.Forms.Design.Behavior.Glyph&quot; /&gt;.">要與 <see cref="T:System.Windows.Forms.Design.Behavior.Behavior" /> 產生關聯的 <see cref="T:System.Windows.Forms.Design.Behavior.Glyph" />。</param>
    </member>
    <member name="P:System.Windows.Forms.Design.Behavior.Glyph.Behavior">
      <summary vsli:raw="Gets the &lt;see cref=&quot;T:System.Windows.Forms.Design.Behavior.Behavior&quot; /&gt; associated with the &lt;see cref=&quot;T:System.Windows.Forms.Design.Behavior.Glyph&quot; /&gt;.">取得與 <see cref="T:System.Windows.Forms.Design.Behavior.Behavior" /> 相關聯的 <see cref="T:System.Windows.Forms.Design.Behavior.Glyph" />。</summary>
      <returns vsli:raw="The &lt;see cref=&quot;T:System.Windows.Forms.Design.Behavior.Behavior&quot; /&gt; associated with the &lt;see cref=&quot;T:System.Windows.Forms.Design.Behavior.Glyph&quot; /&gt;, or &lt;see langword=&quot;null&quot; /&gt; if there is no behavior.">與 <see cref="T:System.Windows.Forms.Design.Behavior.Behavior" /> 相關聯的 <see cref="T:System.Windows.Forms.Design.Behavior.Glyph" />；如果沒有行為，則為 <see langword="null" />。</returns>
    </member>
    <member name="P:System.Windows.Forms.Design.Behavior.Glyph.Bounds">
      <summary vsli:raw="Gets the bounds of the &lt;see cref=&quot;T:System.Windows.Forms.Design.Behavior.Glyph&quot; /&gt;.">取得 <see cref="T:System.Windows.Forms.Design.Behavior.Glyph" /> 的界限。</summary>
      <returns vsli:raw="A &lt;see cref=&quot;T:System.Drawing.Rectangle&quot; /&gt; representing the bounds of the &lt;see cref=&quot;T:System.Windows.Forms.Design.Behavior.Glyph&quot; /&gt;.">
        <see cref="T:System.Drawing.Rectangle" />，表示 <see cref="T:System.Windows.Forms.Design.Behavior.Glyph" /> 的界限。</returns>
    </member>
    <member name="T:System.Windows.Forms.Design.Behavior.GlyphCollection">
      <summary vsli:raw="Stores &lt;see cref=&quot;T:System.Windows.Forms.Design.Behavior.Glyph&quot; /&gt; objects in a strongly typed collection.">將 <see cref="T:System.Windows.Forms.Design.Behavior.Glyph" /> 物件儲存在強類型集合中。</summary>
    </member>
    <member name="M:System.Windows.Forms.Design.Behavior.GlyphCollection.#ctor">
      <summary vsli:raw="Initializes a new instance of the &lt;see cref=&quot;T:System.Windows.Forms.Design.Behavior.GlyphCollection&quot; /&gt; class.">初始化 <see cref="T:System.Windows.Forms.Design.Behavior.GlyphCollection" /> 類別的新執行個體。</summary>
    </member>
    <member name="M:System.Windows.Forms.Design.Behavior.GlyphCollection.#ctor(System.Windows.Forms.Design.Behavior.Glyph[])">
      <summary vsli:raw="Initializes a new instance of the &lt;see cref=&quot;T:System.Windows.Forms.Design.Behavior.GlyphCollection&quot; /&gt; class with the given &lt;see cref=&quot;T:System.Windows.Forms.Design.Behavior.Glyph&quot; /&gt; array.">使用指定的 <see cref="T:System.Windows.Forms.Design.Behavior.GlyphCollection" /> 陣列，初始化 <see cref="T:System.Windows.Forms.Design.Behavior.Glyph" /> 類別的新執行個體。</summary>
      <param name="value" vsli:raw="An array of type &lt;see cref=&quot;T:System.Windows.Forms.Design.Behavior.Glyph&quot; /&gt; to populate the collection.">要填入集合之類型 <see cref="T:System.Windows.Forms.Design.Behavior.Glyph" /> 的陣列。</param>
    </member>
    <member name="M:System.Windows.Forms.Design.Behavior.GlyphCollection.#ctor(System.Windows.Forms.Design.Behavior.GlyphCollection)">
      <summary vsli:raw="Initializes a new instance of the &lt;see cref=&quot;T:System.Windows.Forms.Design.Behavior.GlyphCollection&quot; /&gt; class based on another &lt;see cref=&quot;T:System.Windows.Forms.Design.Behavior.GlyphCollection&quot; /&gt;.">根據另一個 <see cref="T:System.Windows.Forms.Design.Behavior.GlyphCollection" />，初始化 <see cref="T:System.Windows.Forms.Design.Behavior.GlyphCollection" /> 類別的新執行個體。</summary>
      <param name="value" vsli:raw="A &lt;see cref=&quot;T:System.Windows.Forms.Design.Behavior.GlyphCollection&quot; /&gt; to populate the collection.">要填入集合的 <see cref="T:System.Windows.Forms.Design.Behavior.GlyphCollection" />。</param>
    </member>
    <member name="M:System.Windows.Forms.Design.Behavior.GlyphCollection.Add(System.Windows.Forms.Design.Behavior.Glyph)">
      <summary vsli:raw="Adds a &lt;see cref=&quot;T:System.Windows.Forms.Design.Behavior.Glyph&quot; /&gt; with the specified value to the &lt;see cref=&quot;T:System.Windows.Forms.Design.Behavior.GlyphCollection&quot; /&gt;.">將具有指定值的 <see cref="T:System.Windows.Forms.Design.Behavior.Glyph" /> 加入至 <see cref="T:System.Windows.Forms.Design.Behavior.GlyphCollection" />。</summary>
      <param name="value" vsli:raw="A &lt;see cref=&quot;T:System.Windows.Forms.Design.Behavior.Glyph&quot; /&gt; to add to the end of the collection.">要加入至集合結尾的 <see cref="T:System.Windows.Forms.Design.Behavior.Glyph" />。</param>
      <returns vsli:raw="The index at which the new element was inserted.">要插入新項目的索引。</returns>
    </member>
    <member name="M:System.Windows.Forms.Design.Behavior.GlyphCollection.AddRange(System.Windows.Forms.Design.Behavior.Glyph[])">
      <summary vsli:raw="Copies the elements of an array to the end of the &lt;see cref=&quot;T:System.Windows.Forms.Design.Behavior.GlyphCollection&quot; /&gt;.">將陣列的元素複製至 <see cref="T:System.Windows.Forms.Design.Behavior.GlyphCollection" /> 的結尾。</summary>
      <param name="value" vsli:raw="An array of type &lt;see cref=&quot;T:System.Windows.Forms.Design.Behavior.Glyph&quot; /&gt; to copy to the end of the collection.">要複製至集合尾端之 <see cref="T:System.Windows.Forms.Design.Behavior.Glyph" /> 型別的陣列。</param>
    </member>
    <member name="M:System.Windows.Forms.Design.Behavior.GlyphCollection.AddRange(System.Windows.Forms.Design.Behavior.GlyphCollection)">
      <summary vsli:raw="Adds the contents of another &lt;see cref=&quot;T:System.Windows.Forms.Design.Behavior.GlyphCollection&quot; /&gt; to the end of the collection.">將另一個 <see cref="T:System.Windows.Forms.Design.Behavior.GlyphCollection" /> 的內容加入至集合末端。</summary>
      <param name="value" vsli:raw="A &lt;see cref=&quot;T:System.Windows.Forms.Design.Behavior.GlyphCollection&quot; /&gt; to add to the end of the collection.">要加入至集合結尾的 <see cref="T:System.Windows.Forms.Design.Behavior.GlyphCollection" />。</param>
    </member>
    <member name="M:System.Windows.Forms.Design.Behavior.GlyphCollection.Contains(System.Windows.Forms.Design.Behavior.Glyph)">
      <summary vsli:raw="Gets a value indicating whether the &lt;see cref=&quot;T:System.Windows.Forms.Design.Behavior.GlyphCollection&quot; /&gt; contains the specified &lt;see cref=&quot;T:System.Windows.Forms.Design.Behavior.Glyph&quot; /&gt;.">取得值，指出 <see cref="T:System.Windows.Forms.Design.Behavior.GlyphCollection" /> 是否含有指定的 <see cref="T:System.Windows.Forms.Design.Behavior.Glyph" />。</summary>
      <param name="value" vsli:raw="The &lt;see cref=&quot;T:System.Windows.Forms.Design.Behavior.Glyph&quot; /&gt; to locate.">要尋找的 <see cref="T:System.Windows.Forms.Design.Behavior.Glyph" />。</param>
      <returns vsli:raw="&lt;see langword=&quot;true&quot; /&gt; if the &lt;see cref=&quot;T:System.Windows.Forms.Design.Behavior.Glyph&quot; /&gt; is contained in the collection; otherwise, &lt;see langword=&quot;false&quot; /&gt;.">如果 <see cref="T:System.Windows.Forms.Design.Behavior.Glyph" /> 包含在集合裡，則為 <see langword="true" />，否則為 <see langword="false" />。</returns>
    </member>
    <member name="M:System.Windows.Forms.Design.Behavior.GlyphCollection.CopyTo(System.Windows.Forms.Design.Behavior.Glyph[],System.Int32)">
      <summary vsli:raw="Copies the &lt;see cref=&quot;T:System.Windows.Forms.Design.Behavior.GlyphCollection&quot; /&gt; values to a one-dimensional &lt;see cref=&quot;T:System.Array&quot; /&gt; at the specified index.">將 <see cref="T:System.Windows.Forms.Design.Behavior.GlyphCollection" /> 值複製到指定索引處的一維 <see cref="T:System.Array" />。</summary>
      <param name="array" vsli:raw="The one-dimensional &lt;see cref=&quot;T:System.Array&quot; /&gt; that is the destination of the values copied from &lt;see cref=&quot;T:System.Windows.Forms.Design.Behavior.GlyphCollection&quot; /&gt;.">複製自 <see cref="T:System.Windows.Forms.Design.Behavior.GlyphCollection" /> 之值的目的地一維 <see cref="T:System.Array" />。</param>
      <param name="index" vsli:raw="The index in &lt;paramref name=&quot;array&quot; /&gt; where copying begins.">
        <paramref name="array" /> 中開始複製處的索引。</param>
    </member>
    <member name="M:System.Windows.Forms.Design.Behavior.GlyphCollection.IndexOf(System.Windows.Forms.Design.Behavior.Glyph)">
      <summary vsli:raw="Returns the index of a &lt;see cref=&quot;T:System.Windows.Forms.Design.Behavior.Glyph&quot; /&gt; in the &lt;see cref=&quot;T:System.Windows.Forms.Design.Behavior.GlyphCollection&quot; /&gt;.">傳回 <see cref="T:System.Windows.Forms.Design.Behavior.Glyph" /> 中 <see cref="T:System.Windows.Forms.Design.Behavior.GlyphCollection" /> 的索引。</summary>
      <param name="value" vsli:raw="The &lt;see cref=&quot;T:System.Windows.Forms.Design.Behavior.Glyph&quot; /&gt; to locate.">要尋找的 <see cref="T:System.Windows.Forms.Design.Behavior.Glyph" />。</param>
      <returns vsli:raw="The index of the &lt;see cref=&quot;T:System.Windows.Forms.Design.Behavior.Glyph&quot; /&gt; of &lt;paramref name=&quot;value&quot; /&gt; in the &lt;see cref=&quot;T:System.Windows.Forms.Design.Behavior.GlyphCollection&quot; /&gt;, if found; otherwise, -1.">如果可以找到 <see cref="T:System.Windows.Forms.Design.Behavior.Glyph" /> 中 <paramref name="value" /> 之 <see cref="T:System.Windows.Forms.Design.Behavior.GlyphCollection" /> 的索引，否則為 -1。</returns>
    </member>
    <member name="M:System.Windows.Forms.Design.Behavior.GlyphCollection.Insert(System.Int32,System.Windows.Forms.Design.Behavior.Glyph)">
      <summary vsli:raw="Inserts a &lt;see cref=&quot;T:System.Windows.Forms.Design.Behavior.Glyph&quot; /&gt; into the &lt;see cref=&quot;T:System.Windows.Forms.Design.Behavior.GlyphCollection&quot; /&gt; at the specified index.">將 <see cref="T:System.Windows.Forms.Design.Behavior.Glyph" /> 插入 <see cref="T:System.Windows.Forms.Design.Behavior.GlyphCollection" />中指定的索引處。</summary>
      <param name="index" vsli:raw="The zero-based index where &lt;paramref name=&quot;value&quot; /&gt; should be inserted.">應該插入 <paramref name="value" /> 之以零起始的索引。</param>
      <param name="value" vsli:raw="The &lt;see cref=&quot;T:System.Windows.Forms.Design.Behavior.Glyph&quot; /&gt; to insert.">要插入的 <see cref="T:System.Windows.Forms.Design.Behavior.Glyph" />。</param>
    </member>
    <member name="M:System.Windows.Forms.Design.Behavior.GlyphCollection.Remove(System.Windows.Forms.Design.Behavior.Glyph)">
      <summary vsli:raw="Removes a specific &lt;see cref=&quot;T:System.Windows.Forms.Design.Behavior.Glyph&quot; /&gt; from the &lt;see cref=&quot;T:System.Windows.Forms.Design.Behavior.GlyphCollection&quot; /&gt;.">從 <see cref="T:System.Windows.Forms.Design.Behavior.Glyph" /> 移除特定的 <see cref="T:System.Windows.Forms.Design.Behavior.GlyphCollection" />。</summary>
      <param name="value" vsli:raw="The &lt;see cref=&quot;T:System.Windows.Forms.Design.Behavior.Glyph&quot; /&gt; to remove from the &lt;see cref=&quot;T:System.Windows.Forms.Design.Behavior.GlyphCollection&quot; /&gt;.">要從 <see cref="T:System.Windows.Forms.Design.Behavior.Glyph" /> 移除的 <see cref="T:System.Windows.Forms.Design.Behavior.GlyphCollection" />。</param>
    </member>
    <member name="P:System.Windows.Forms.Design.Behavior.GlyphCollection.Item(System.Int32)">
      <summary vsli:raw="Gets or sets the element at the specified index.">在指定的索引位置上取得或設定項目。</summary>
      <param name="index" vsli:raw="The zero-based index of the element.">元素以零起始的索引。</param>
      <returns vsli:raw="The &lt;see cref=&quot;T:System.Windows.Forms.Design.Behavior.Glyph&quot; /&gt; element at the specified index.">在指定索引的 <see cref="T:System.Windows.Forms.Design.Behavior.Glyph" /> 項目。</returns>
    </member>
    <member name="T:System.Windows.Forms.Design.Behavior.GlyphSelectionType">
      <summary vsli:raw="Describes the designer selection state of a &lt;see cref=&quot;T:System.Windows.Forms.Design.Behavior.Glyph&quot; /&gt;.">描述 <see cref="T:System.Windows.Forms.Design.Behavior.Glyph" /> 的設計工具選取狀態。</summary>
    </member>
    <member name="F:System.Windows.Forms.Design.Behavior.GlyphSelectionType.NotSelected">
      <summary vsli:raw="The &lt;see cref=&quot;T:System.Windows.Forms.Design.Behavior.Glyph&quot; /&gt; is not selected.">
        <see cref="T:System.Windows.Forms.Design.Behavior.Glyph" /> 未選取。</summary>
    </member>
    <member name="F:System.Windows.Forms.Design.Behavior.GlyphSelectionType.Selected">
      <summary vsli:raw="The &lt;see cref=&quot;T:System.Windows.Forms.Design.Behavior.Glyph&quot; /&gt; is selected.">
        <see cref="T:System.Windows.Forms.Design.Behavior.Glyph" /> 已選取。</summary>
    </member>
    <member name="F:System.Windows.Forms.Design.Behavior.GlyphSelectionType.SelectedPrimary">
      <summary vsli:raw="The &lt;see cref=&quot;T:System.Windows.Forms.Design.Behavior.Glyph&quot; /&gt; is the primary selection.">
        <see cref="T:System.Windows.Forms.Design.Behavior.Glyph" /> 為主要選取範圍。</summary>
    </member>
    <member name="T:System.Windows.Forms.Design.Behavior.SnapLine">
      <summary vsli:raw="Represents the horizontal and vertical line segments that are dynamically created in the user interface (UI) to assist in the design-time layout of controls in a container. This class cannot be inherited.">表示在使用者介面 (UI) 中動態建立的水平和垂直線段，用於協助容器中控制項的設計階段配置。 此類別無法獲得繼承。</summary>
    </member>
    <member name="M:System.Windows.Forms.Design.Behavior.SnapLine.#ctor(System.Windows.Forms.Design.Behavior.SnapLineType,System.Int32)">
      <summary vsli:raw="Initializes a new instance of the &lt;see cref=&quot;T:System.Windows.Forms.Design.Behavior.SnapLine&quot; /&gt; class using the specified snapline type and offset.">使用指定的對齊線類型和位移，初始化 <see cref="T:System.Windows.Forms.Design.Behavior.SnapLine" /> 類別的新執行個體。</summary>
      <param name="type" vsli:raw="The &lt;see cref=&quot;T:System.Windows.Forms.Design.Behavior.SnapLineType&quot; /&gt; to create. Describes the relative position and orientation of the snapline.">要建立的 <see cref="T:System.Windows.Forms.Design.Behavior.SnapLineType" />。 描述對齊線的相對位置和方向。</param>
      <param name="offset" vsli:raw="The position of the snapline, in pixels, relative to the upper-left origin of the owning control.">以像素計算的對齊線位置，相對於擁有的控制項的左上方原點。</param>
    </member>
    <member name="M:System.Windows.Forms.Design.Behavior.SnapLine.#ctor(System.Windows.Forms.Design.Behavior.SnapLineType,System.Int32,System.String)">
      <summary vsli:raw="Initializes a new instance of the &lt;see cref=&quot;T:System.Windows.Forms.Design.Behavior.SnapLine&quot; /&gt; class using the specified snapline type, offset, and filter name.">使用指定的對齊線類型、位移和篩選條件名稱，初始化 <see cref="T:System.Windows.Forms.Design.Behavior.SnapLine" /> 類別的新執行個體。</summary>
      <param name="type" vsli:raw="The &lt;see cref=&quot;T:System.Windows.Forms.Design.Behavior.SnapLineType&quot; /&gt; to create. Describes the relative position and orientation of the snapline.">要建立的 <see cref="T:System.Windows.Forms.Design.Behavior.SnapLineType" />。 描述對齊線的相對位置和方向。</param>
      <param name="offset" vsli:raw="The position of the snapline, in pixels, relative to the upper-left origin of the owning control.">以像素計算的對齊線位置，相對於擁有的控制項的左上方原點。</param>
      <param name="filter" vsli:raw="A &lt;see cref=&quot;T:System.String&quot; /&gt; used to specify a programmer-defined category of snaplines.">
        <see cref="T:System.String" />，用於指定程式設計人員定義的對齊線分類。</param>
    </member>
    <member name="M:System.Windows.Forms.Design.Behavior.SnapLine.#ctor(System.Windows.Forms.Design.Behavior.SnapLineType,System.Int32,System.String,System.Windows.Forms.Design.Behavior.SnapLinePriority)">
      <summary vsli:raw="Initializes a new instance of the &lt;see cref=&quot;T:System.Windows.Forms.Design.Behavior.SnapLine&quot; /&gt; class using the specified snapline type, offset, filter name, and priority.">使用指定的對齊線類型、位移、篩選條件名稱和優先權，初始化 <see cref="T:System.Windows.Forms.Design.Behavior.SnapLine" /> 類別的新執行個體。</summary>
      <param name="type" vsli:raw="The &lt;see cref=&quot;T:System.Windows.Forms.Design.Behavior.SnapLineType&quot; /&gt; to create. Describes the relative position and orientation of the snapline.">要建立的 <see cref="T:System.Windows.Forms.Design.Behavior.SnapLineType" />。 描述對齊線的相對位置和方向。</param>
      <param name="offset" vsli:raw="The position of the snapline, in pixels, relative to the upper-left origin of the owning control.">以像素計算的對齊線位置，相對於擁有的控制項的左上方原點。</param>
      <param name="filter" vsli:raw="A &lt;see cref=&quot;T:System.String&quot; /&gt; used to specify a programmer-defined category of snaplines.">
        <see cref="T:System.String" />，用於指定程式設計人員定義的對齊線分類。</param>
      <param name="priority" vsli:raw="The &lt;see cref=&quot;T:System.Windows.Forms.Design.Behavior.SnapLinePriority&quot; /&gt; of the snapline.">對齊線的 <see cref="T:System.Windows.Forms.Design.Behavior.SnapLinePriority" />。</param>
    </member>
    <member name="M:System.Windows.Forms.Design.Behavior.SnapLine.#ctor(System.Windows.Forms.Design.Behavior.SnapLineType,System.Int32,System.Windows.Forms.Design.Behavior.SnapLinePriority)">
      <summary vsli:raw="Initializes a new instance of the &lt;see cref=&quot;T:System.Windows.Forms.Design.Behavior.SnapLine&quot; /&gt; class using the specified snapline type, offset, and priority.">使用指定的對齊線類型、位移和優先權，初始化 <see cref="T:System.Windows.Forms.Design.Behavior.SnapLine" /> 類別的新執行個體。</summary>
      <param name="type" vsli:raw="The &lt;see cref=&quot;T:System.Windows.Forms.Design.Behavior.SnapLineType&quot; /&gt; to create. Describes the relative position and orientation of the snapline.">要建立的 <see cref="T:System.Windows.Forms.Design.Behavior.SnapLineType" />。 描述對齊線的相對位置和方向。</param>
      <param name="offset" vsli:raw="The position of the snapline, in pixels, relative to the upper-left origin of the owning control.">以像素計算的對齊線位置，相對於擁有的控制項的左上方原點。</param>
      <param name="priority" vsli:raw="The &lt;see cref=&quot;T:System.Windows.Forms.Design.Behavior.SnapLinePriority&quot; /&gt; of the snapline.">對齊線的 <see cref="T:System.Windows.Forms.Design.Behavior.SnapLinePriority" />。</param>
    </member>
    <member name="M:System.Windows.Forms.Design.Behavior.SnapLine.AdjustOffset(System.Int32)">
      <summary vsli:raw="Adjusts the &lt;see cref=&quot;P:System.Windows.Forms.Design.Behavior.SnapLine.Offset&quot; /&gt; property of the snapline.">調整對齊線的 <see cref="P:System.Windows.Forms.Design.Behavior.SnapLine.Offset" /> 屬性。</summary>
      <param name="adjustment" vsli:raw="The number of pixels to change the snapline offset by.">要變更對齊線位移的像素數目。</param>
    </member>
    <member name="M:System.Windows.Forms.Design.Behavior.SnapLine.ShouldSnap(System.Windows.Forms.Design.Behavior.SnapLine,System.Windows.Forms.Design.Behavior.SnapLine)">
      <summary vsli:raw="Returns a value indicating whether the specified &lt;see cref=&quot;T:System.Windows.Forms.Design.Behavior.SnapLine&quot; /&gt; should snap to another &lt;see cref=&quot;T:System.Windows.Forms.Design.Behavior.SnapLine&quot; /&gt;.">傳回值，指出指定的 <see cref="T:System.Windows.Forms.Design.Behavior.SnapLine" /> 是否應該與另一個 <see cref="T:System.Windows.Forms.Design.Behavior.SnapLine" /> 貼齊。</summary>
      <param name="line1" vsli:raw="The specified &lt;see cref=&quot;T:System.Windows.Forms.Design.Behavior.SnapLine&quot; /&gt;.">指定的 <see cref="T:System.Windows.Forms.Design.Behavior.SnapLine" />。</param>
      <param name="line2" vsli:raw="The &lt;see cref=&quot;T:System.Windows.Forms.Design.Behavior.SnapLine&quot; /&gt; to which the specified &lt;see cref=&quot;T:System.Windows.Forms.Design.Behavior.SnapLine&quot; /&gt; is expected to snap.">
        <see cref="T:System.Windows.Forms.Design.Behavior.SnapLine" />，指定的 <see cref="T:System.Windows.Forms.Design.Behavior.SnapLine" /> 必須與之貼齊。</param>
      <returns vsli:raw="&lt;see langword=&quot;true&quot; /&gt; if &lt;paramref name=&quot;line1&quot; /&gt; should snap to &lt;paramref name=&quot;line2&quot; /&gt;; otherwise, &lt;see langword=&quot;false&quot; /&gt;.">如果 <paramref name="line1" /> 應該與 <paramref name="line2" /> 貼齊則為 <see langword="true" />，否則為 <see langword="false" />。</returns>
    </member>
    <member name="M:System.Windows.Forms.Design.Behavior.SnapLine.ToString">
      <summary vsli:raw="Returns a string representation of the current snapline.">傳回目前對齊線的字串表示。</summary>
      <returns vsli:raw="A &lt;see cref=&quot;T:System.String&quot; /&gt; that represents the current &lt;see cref=&quot;T:System.Windows.Forms.Design.Behavior.SnapLine&quot; /&gt;.">
        <see cref="T:System.String" />，代表示目前的 <see cref="T:System.Windows.Forms.Design.Behavior.SnapLine" />。</returns>
    </member>
    <member name="P:System.Windows.Forms.Design.Behavior.SnapLine.Filter">
      <summary vsli:raw="Gets the programmer-defined filter category associated with this snapline.">取得與這個對齊線相關聯之程式設計人員定義的篩選條件分類。</summary>
      <returns vsli:raw="A &lt;see cref=&quot;T:System.String&quot; /&gt; that defines the filter category. The default is &lt;see langword=&quot;null&quot; /&gt;.">
        <see cref="T:System.String" />，定義篩選分類。 預設為 <see langword="null" />。</returns>
    </member>
    <member name="P:System.Windows.Forms.Design.Behavior.SnapLine.IsHorizontal">
      <summary vsli:raw="Gets a value indicating whether the snapline has a horizontal orientation.">取得值，指出對齊線是否具有水平方向。</summary>
      <returns vsli:raw="&lt;see langword=&quot;true&quot; /&gt; if the snapline is horizontal; otherwise, &lt;see langword=&quot;false&quot; /&gt;.">如果對齊線是水平的則為 <see langword="true" />，否則為 <see langword="false" />。</returns>
    </member>
    <member name="P:System.Windows.Forms.Design.Behavior.SnapLine.IsVertical">
      <summary vsli:raw="Gets a value indicating whether the snapline has a vertical orientation.">取得值，指出對齊線是否具有垂直方向。</summary>
      <returns vsli:raw="&lt;see langword=&quot;true&quot; /&gt; if the snapline is vertical; otherwise, &lt;see langword=&quot;false&quot; /&gt;.">如果對齊線是垂直的則為 <see langword="true" />，否則為 <see langword="false" />。</returns>
    </member>
    <member name="P:System.Windows.Forms.Design.Behavior.SnapLine.Offset">
      <summary vsli:raw="Gets the number of pixels that the snapline is offset from the origin of the associated control.">取得對齊線從相關聯控制項的原點位移的像素數目。</summary>
      <returns vsli:raw="The offset, in pixels, of the snapline.">對齊線的位移 (以像素為單位)。</returns>
    </member>
    <member name="P:System.Windows.Forms.Design.Behavior.SnapLine.Priority">
      <summary vsli:raw="Gets a value indicating the relative importance of the snapline.">取得值，表示對齊線的相對重要性。</summary>
      <returns vsli:raw="A &lt;see cref=&quot;T:System.Windows.Forms.Design.Behavior.SnapLinePriority&quot; /&gt; that represents the priority category of a snapline.">
        <see cref="T:System.Windows.Forms.Design.Behavior.SnapLinePriority" />，表示對齊線的優先權分類。</returns>
    </member>
    <member name="P:System.Windows.Forms.Design.Behavior.SnapLine.SnapLineType">
      <summary vsli:raw="Gets the type of a snapline, which indicates the general location and orientation.">取得對齊線的類型，指出一般位置和方向。</summary>
      <returns vsli:raw="A &lt;see cref=&quot;T:System.Windows.Forms.Design.Behavior.SnapLineType&quot; /&gt; that represents the orientation and general location, relative to control edges, of a snapline.">
        <see cref="T:System.Windows.Forms.Design.Behavior.SnapLineType" />，表示對齊線相對於控制項邊緣的方向和一般位置。</returns>
    </member>
    <member name="T:System.Windows.Forms.Design.Behavior.SnapLinePriority">
      <summary vsli:raw="Specifies the relative importance of a snapline.">指定對齊線的相對重要性。</summary>
    </member>
    <member name="F:System.Windows.Forms.Design.Behavior.SnapLinePriority.Always">
      <summary vsli:raw="The priority category that is equivalent to the highest priority of all the current snaplines. Indicates that this category of snapline should always be active.">等於所有目前對齊線之最高優先權的優先權分類。 表示這個分類的對齊線應該一直處於作用中。</summary>
    </member>
    <member name="F:System.Windows.Forms.Design.Behavior.SnapLinePriority.High">
      <summary vsli:raw="The highest priority category.">最高優先權分類。</summary>
    </member>
    <member name="F:System.Windows.Forms.Design.Behavior.SnapLinePriority.Low">
      <summary vsli:raw="The lowest priority category.">最低優先權分類。</summary>
    </member>
    <member name="F:System.Windows.Forms.Design.Behavior.SnapLinePriority.Medium">
      <summary vsli:raw="The middle priority category.">中等優先順序分類。</summary>
    </member>
    <member name="T:System.Windows.Forms.Design.Behavior.SnapLineType">
      <summary vsli:raw="Specifies the orientation and relative location of a snapline.">指定對齊線的方向和相對位置。</summary>
    </member>
    <member name="F:System.Windows.Forms.Design.Behavior.SnapLineType.Baseline">
      <summary vsli:raw="A horizontal snapline typically associated with a primary internal feature of a control; for example, the base of the text string in a &lt;see cref=&quot;T:System.Windows.Forms.Label&quot; /&gt; control.">一般與控制項的主要內部功能相關聯的水平對齊線，例如，<see cref="T:System.Windows.Forms.Label" /> 控制項中文字字串的基準。</summary>
    </member>
    <member name="F:System.Windows.Forms.Design.Behavior.SnapLineType.Bottom">
      <summary vsli:raw="A horizontal snapline typically aligned to the bottom edge of a control.">一般對齊至控制項下邊緣的水平對齊線。</summary>
    </member>
    <member name="F:System.Windows.Forms.Design.Behavior.SnapLineType.Horizontal">
      <summary vsli:raw="A horizontal snapline typically not associated with an edge of a control.">一般不與控制項邊緣相關聯的水平對齊線。</summary>
    </member>
    <member name="F:System.Windows.Forms.Design.Behavior.SnapLineType.Left">
      <summary vsli:raw="A vertical snapline typically aligned to the left edge of a control.">一般對齊至控制項左邊緣的垂直對齊線。</summary>
    </member>
    <member name="F:System.Windows.Forms.Design.Behavior.SnapLineType.Right">
      <summary vsli:raw="A vertical snapline typically aligned to the right edge of a control.">一般對齊至控制項右邊緣的垂直對齊線。</summary>
    </member>
    <member name="F:System.Windows.Forms.Design.Behavior.SnapLineType.Top">
      <summary vsli:raw="A horizontal snapline typically aligned to the top edge of a control.">一般對齊至控制項上邊緣的水平對齊線。</summary>
    </member>
    <member name="F:System.Windows.Forms.Design.Behavior.SnapLineType.Vertical">
      <summary vsli:raw="A vertical snapline typically not associated with an edge of a control.">一般不與控制項邊緣相關聯的垂直對齊線。</summary>
    </member>
    <member name="T:System.Windows.Forms.Design.BorderSidesEditor">
      <summary vsli:raw="Provides an editor for setting the &lt;see cref=&quot;P:System.Windows.Forms.ToolStripStatusLabel.BorderSides&quot; /&gt; property.">提供用來設定 <see cref="P:System.Windows.Forms.ToolStripStatusLabel.BorderSides" /> 屬性的編輯器。</summary>
    </member>
    <member name="M:System.Windows.Forms.Design.BorderSidesEditor.#ctor">
      <summary vsli:raw="Initializes a new instance of the &lt;see cref=&quot;T:System.Windows.Forms.Design.BorderSidesEditor&quot; /&gt; class.">初始化 <see cref="T:System.Windows.Forms.Design.BorderSidesEditor" /> 類別的新執行個體。</summary>
    </member>
    <member name="M:System.Windows.Forms.Design.BorderSidesEditor.EditValue(System.ComponentModel.ITypeDescriptorContext,System.IServiceProvider,System.Object)">
      <summary vsli:raw="Edits the given object value using the editor style provided by &lt;xref data-throw-if-not-resolved=&quot;true&quot; uid=&quot;System.Windows.Forms.Design.BorderSidesEditor.GetEditStyle(System.ComponentModel.ITypeDescriptorContext)&quot;&gt;&lt;/xref&gt;.">使用 <see cref="M:System.Windows.Forms.Design.BorderSidesEditor.GetEditStyle(System.ComponentModel.ITypeDescriptorContext)" /> 提供的編輯器樣式編輯指定的物件值。</summary>
      <param name="context" vsli:raw="An &lt;xref data-throw-if-not-resolved=&quot;true&quot; uid=&quot;System.ComponentModel.ITypeDescriptorContext&quot;&gt;&lt;/xref&gt; providing information about the control or component.">
        <see cref="T:System.ComponentModel.ITypeDescriptorContext" />，提供控制項或元件的資訊。</param>
      <param name="provider" vsli:raw="An &lt;xref data-throw-if-not-resolved=&quot;true&quot; uid=&quot;System.IServiceProvider&quot;&gt;&lt;/xref&gt; providing custom support to other objects.">
        <see cref="T:System.IServiceProvider" />，為其他物件提供自訂支援。</param>
      <param name="value" vsli:raw="The object value to edit.">要編輯的物件值。</param>
      <returns vsli:raw="The edited object.">編輯的物件。</returns>
    </member>
    <member name="M:System.Windows.Forms.Design.BorderSidesEditor.GetEditStyle(System.ComponentModel.ITypeDescriptorContext)">
      <summary vsli:raw="Retrieves the editing style of the &lt;code data-dev-comment-type=&quot;langword&quot;&gt;EditValue&lt;/code&gt; method.">擷取 <see langword="EditValue" /> 方法的編輯樣式。</summary>
      <param name="context" vsli:raw="An &lt;xref data-throw-if-not-resolved=&quot;true&quot; uid=&quot;System.ComponentModel.ITypeDescriptorContext&quot;&gt;&lt;/xref&gt; providing information about the control or component.">
        <see cref="T:System.ComponentModel.ITypeDescriptorContext" />，提供控制項或元件的資訊。</param>
      <returns vsli:raw="One of the &lt;xref data-throw-if-not-resolved=&quot;true&quot; uid=&quot;System.Drawing.Design.UITypeEditorEditStyle&quot;&gt;&lt;/xref&gt; values. If the method is not supported, this method returns &lt;xref data-throw-if-not-resolved=&quot;true&quot; uid=&quot;System.Drawing.Design.UITypeEditorEditStyle.None&quot;&gt;&lt;/xref&gt;.">其中一個 <see cref="T:System.Drawing.Design.UITypeEditorEditStyle" /> 值。 如果不支援該方法，這個方法會傳回 <see cref="F:System.Drawing.Design.UITypeEditorEditStyle.None" />。</returns>
    </member>
    <member name="T:System.Windows.Forms.Design.ComponentActionsType">
      <summary vsli:raw="Designer action items that can be associated with a component.">可元件建立關聯的設計工具動作項目。</summary>
    </member>
    <member name="F:System.Windows.Forms.Design.ComponentActionsType.All">
      <summary vsli:raw="Represents component and service type designer actions.">表示元件和服務類型設計工具動作。</summary>
    </member>
    <member name="F:System.Windows.Forms.Design.ComponentActionsType.Component">
      <summary vsli:raw="Represents pull-model designer actions.">表示提取模型設計工具動作。</summary>
    </member>
    <member name="F:System.Windows.Forms.Design.ComponentActionsType.Service">
      <summary vsli:raw="Represents push-model designer actions.">表示推送模型設計工具動作。</summary>
    </member>
    <member name="T:System.Windows.Forms.Design.ComponentDocumentDesigner">
      <summary vsli:raw="Base designer class for extending the design mode behavior of a root design document that supports nested components.">擴充根設計文件之設計模式行為的基底設計工具類別，此根設計文件支援巢狀的元件。</summary>
    </member>
    <member name="M:System.Windows.Forms.Design.ComponentDocumentDesigner.#ctor">
      <summary vsli:raw="Initializes a new instance of the &lt;see cref=&quot;T:System.Windows.Forms.Design.ComponentDocumentDesigner&quot; /&gt; class.">初始化 <see cref="T:System.Windows.Forms.Design.ComponentDocumentDesigner" /> 類別的新執行個體。</summary>
    </member>
    <member name="M:System.Windows.Forms.Design.ComponentDocumentDesigner.Dispose(System.Boolean)">
      <summary vsli:raw="Releases the unmanaged resources used by the &lt;see cref=&quot;T:System.Windows.Forms.Design.ComponentDocumentDesigner&quot; /&gt; and optionally releases the managed resources.">釋放 <see cref="T:System.Windows.Forms.Design.ComponentDocumentDesigner" /> 所使用的 Unmanaged 資源，並選擇性地釋放 Managed 資源。</summary>
      <param name="disposing" vsli:raw="&lt;see langword=&quot;true&quot; /&gt; to release both managed and unmanaged resources; &lt;see langword=&quot;false&quot; /&gt; to release only unmanaged resources.">
        <see langword="true" /> 表示釋放 Managed 和 Unmanaged 資源，<see langword="false" /> 則表示只釋放 Unmanaged 資源。</param>
    </member>
    <member name="M:System.Windows.Forms.Design.ComponentDocumentDesigner.GetToolSupported(System.Drawing.Design.ToolboxItem)">
      <summary vsli:raw="Gets a value indicating whether the specified tool is supported by the designer.">取得值，指出設計工具是否支援指定的工具。</summary>
      <param name="tool" vsli:raw="The &lt;see cref=&quot;T:System.Drawing.Design.ToolboxItem&quot; /&gt; to test for toolbox support.">測試工具箱支援的 <see cref="T:System.Drawing.Design.ToolboxItem" />。</param>
      <returns vsli:raw="&lt;see langword=&quot;true&quot; /&gt; if the tool should be enabled on the toolbox; &lt;see langword=&quot;false&quot; /&gt; if the document designer doesn't know how to use the tool.">如果應在工具箱上啟用工具，則為 <see langword="true" />；如果文件設計工具不知道如何使用工具，則為 <see langword="false" />。</returns>
    </member>
    <member name="M:System.Windows.Forms.Design.ComponentDocumentDesigner.Initialize(System.ComponentModel.IComponent)">
      <summary vsli:raw="Initializes the designer with the specified component.">使用指定的元件，初始化設計工具。</summary>
      <param name="component" vsli:raw="The &lt;see cref=&quot;T:System.ComponentModel.IComponent&quot; /&gt; to associate with the designer.">與設計工具關聯的 <see cref="T:System.ComponentModel.IComponent" />。</param>
    </member>
    <member name="M:System.Windows.Forms.Design.ComponentDocumentDesigner.PreFilterProperties(System.Collections.IDictionary)">
      <summary vsli:raw="Adjusts the set of properties the component will expose through a &lt;see cref=&quot;T:System.ComponentModel.TypeDescriptor&quot; /&gt;.">調整元件透過 <see cref="T:System.ComponentModel.TypeDescriptor" /> 公開的屬性集。</summary>
      <param name="properties" vsli:raw="An &lt;see cref=&quot;T:System.Collections.IDictionary&quot; /&gt; that contains the properties for the class of the component.">包含元件類別屬性的 <see cref="T:System.Collections.IDictionary" />。</param>
    </member>
    <member name="M:System.Windows.Forms.Design.ComponentDocumentDesigner.System#ComponentModel#Design#IRootDesigner#GetView(System.ComponentModel.Design.ViewTechnology)">
      <summary vsli:raw="For a description of this member, see &lt;see cref=&quot;T:System.ComponentModel.Design.ViewTechnology&quot; /&gt;.">如需這個成員的說明，請參閱 <see cref="T:System.ComponentModel.Design.ViewTechnology" />。</summary>
      <param name="technology" vsli:raw="A &lt;see cref=&quot;T:System.ComponentModel.Design.ViewTechnology&quot; /&gt; that indicates a particular view technology.">
        <see cref="T:System.ComponentModel.Design.ViewTechnology" />，表示特定的檢視技術。</param>
      <returns vsli:raw="An object that represents the view for this designer.">物件，表示這個設計工具的檢視。</returns>
    </member>
    <member name="M:System.Windows.Forms.Design.ComponentDocumentDesigner.System#ComponentModel#Design#ITypeDescriptorFilterService#FilterAttributes(System.ComponentModel.IComponent,System.Collections.IDictionary)">
      <summary vsli:raw="For a description of this member, see &lt;see cref=&quot;M:System.ComponentModel.Design.ITypeDescriptorFilterService.FilterAttributes(System.ComponentModel.IComponent,System.Collections.IDictionary)&quot; /&gt;.">如需這個成員的說明，請參閱 <see cref="M:System.ComponentModel.Design.ITypeDescriptorFilterService.FilterAttributes(System.ComponentModel.IComponent,System.Collections.IDictionary)" />。</summary>
      <param name="component" vsli:raw="The component to filter the attributes of.">要篩選其屬性的元件。</param>
      <param name="attributes" vsli:raw="A dictionary of attributes that can be modified.">可以修改的屬性字典。</param>
      <returns vsli:raw="&lt;see langword=&quot;true&quot; /&gt; if the set of filtered attributes is to be cached; &lt;see langword=&quot;false&quot; /&gt; if the filter service must query again.">如果要對篩選的屬性集進行快取，則為 <see langword="true" />，否則為 <see langword="false" />。</returns>
    </member>
    <member name="M:System.Windows.Forms.Design.ComponentDocumentDesigner.System#ComponentModel#Design#ITypeDescriptorFilterService#FilterEvents(System.ComponentModel.IComponent,System.Collections.IDictionary)">
      <summary vsli:raw="For a description of this member, see &lt;see cref=&quot;M:System.ComponentModel.Design.ITypeDescriptorFilterService.FilterEvents(System.ComponentModel.IComponent,System.Collections.IDictionary)&quot; /&gt;.">如需這個成員的說明，請參閱 <see cref="M:System.ComponentModel.Design.ITypeDescriptorFilterService.FilterEvents(System.ComponentModel.IComponent,System.Collections.IDictionary)" />。</summary>
      <param name="component" vsli:raw="The component to filter events for.">要為其篩選事件的元件。</param>
      <param name="events" vsli:raw="A dictionary of events that can be modified.">可以修改的事件字典。</param>
      <returns vsli:raw="&lt;see langword=&quot;true&quot; /&gt; if the set of filtered events is to be cached; &lt;see langword=&quot;false&quot; /&gt; if the filter service must query again.">如果要對篩選的事件集進行快取，則為 <see langword="true" />，否則為 <see langword="false" />。</returns>
    </member>
    <member name="M:System.Windows.Forms.Design.ComponentDocumentDesigner.System#ComponentModel#Design#ITypeDescriptorFilterService#FilterProperties(System.ComponentModel.IComponent,System.Collections.IDictionary)">
      <summary vsli:raw="For a description of this member, see &lt;see cref=&quot;M:System.ComponentModel.Design.ITypeDescriptorFilterService.FilterProperties(System.ComponentModel.IComponent,System.Collections.IDictionary)&quot; /&gt;.">如需這個成員的說明，請參閱 <see cref="M:System.ComponentModel.Design.ITypeDescriptorFilterService.FilterProperties(System.ComponentModel.IComponent,System.Collections.IDictionary)" />。</summary>
      <param name="component" vsli:raw="The component to filter properties for.">要為其篩選屬性的元件。</param>
      <param name="properties" vsli:raw="A dictionary of properties that can be modified.">可以修改的屬性字典。</param>
      <returns vsli:raw="&lt;see langword=&quot;true&quot; /&gt; if the set of filtered properties is to be cached; &lt;see langword=&quot;false&quot; /&gt; if the filter service must query again.">如果要對篩選的屬性集進行快取，則為 <see langword="true" />；否則為 <see langword="false" />。</returns>
    </member>
    <member name="M:System.Windows.Forms.Design.ComponentDocumentDesigner.System#Drawing#Design#IToolboxUser#GetToolSupported(System.Drawing.Design.ToolboxItem)">
      <summary vsli:raw="For a description of this member, see &lt;see cref=&quot;M:System.Drawing.Design.IToolboxUser.GetToolSupported(System.Drawing.Design.ToolboxItem)&quot; /&gt;.">如需這個成員的說明，請參閱 <see cref="M:System.Drawing.Design.IToolboxUser.GetToolSupported(System.Drawing.Design.ToolboxItem)" />。</summary>
      <param name="tool" vsli:raw="The &lt;see cref=&quot;T:System.Drawing.Design.ToolboxItem&quot; /&gt; to be tested for toolbox support.">要測試工具箱支援的 <see cref="T:System.Drawing.Design.ToolboxItem" />。</param>
      <returns vsli:raw="&lt;see langword=&quot;true&quot; /&gt; if the tool is supported by the toolbox and can be enabled; &lt;see langword=&quot;false&quot; /&gt; if the document designer does not know how to use the tool.">如果工具箱支援工具並且可以啟用，則為 <see langword="true" />；如果文件設計工具不知道使用工具的方式，則為 <see langword="false" />。</returns>
    </member>
    <member name="M:System.Windows.Forms.Design.ComponentDocumentDesigner.System#Drawing#Design#IToolboxUser#ToolPicked(System.Drawing.Design.ToolboxItem)">
      <summary vsli:raw="For a description of this member, see &lt;see cref=&quot;M:System.Drawing.Design.IToolboxUser.ToolPicked(System.Drawing.Design.ToolboxItem)&quot; /&gt;.">如需這個成員的說明，請參閱 <see cref="M:System.Drawing.Design.IToolboxUser.ToolPicked(System.Drawing.Design.ToolboxItem)" />。</summary>
      <param name="tool" vsli:raw="The &lt;see cref=&quot;T:System.Drawing.Design.ToolboxItem&quot; /&gt; to select.">要選取的 <see cref="T:System.Drawing.Design.ToolboxItem" />。</param>
    </member>
    <member name="P:System.Windows.Forms.Design.ComponentDocumentDesigner.Control">
      <summary vsli:raw="Gets the control for the designer.">取得設計工具的控制項。</summary>
      <returns vsli:raw="The &lt;see cref=&quot;T:System.Windows.Forms.Control&quot; /&gt; the designer is editing.">設計工具正在編輯的 <see cref="T:System.Windows.Forms.Control" />。</returns>
    </member>
    <member name="P:System.Windows.Forms.Design.ComponentDocumentDesigner.System#ComponentModel#Design#IRootDesigner#SupportedTechnologies">
      <summary vsli:raw="For a description of this member, see &lt;see cref=&quot;P:System.ComponentModel.Design.IRootDesigner.SupportedTechnologies&quot; /&gt;.">如需這個成員的說明，請參閱 <see cref="P:System.ComponentModel.Design.IRootDesigner.SupportedTechnologies" />。</summary>
      <returns vsli:raw="An array of supported &lt;see cref=&quot;T:System.ComponentModel.Design.ViewTechnology&quot; /&gt; values.">支援的 <see cref="T:System.ComponentModel.Design.ViewTechnology" /> 值的陣列。</returns>
    </member>
    <member name="P:System.Windows.Forms.Design.ComponentDocumentDesigner.TrayAutoArrange">
      <summary vsli:raw="Gets or sets a value indicating whether the component tray for the designer is in auto-arrange mode.">取得或設定一個數值，指出設計工具的元件匣是否為自動排列模式。</summary>
      <returns vsli:raw="&lt;see langword=&quot;true&quot; /&gt; if the component tray for the designer is in auto-arrange mode; otherwise, &lt;see langword=&quot;false&quot; /&gt;.">如果設計工具的元件匣是自動排列模式，則為 <see langword="true" />，否則為 <see langword="false" />。</returns>
    </member>
    <member name="P:System.Windows.Forms.Design.ComponentDocumentDesigner.TrayLargeIcon">
      <summary vsli:raw="Gets or sets a value indicating whether the component tray for the designer is in large icon mode.">取得或設定一個數值，指出設計工具的元件匣是否為大圖示模式。</summary>
      <returns vsli:raw="&lt;see langword=&quot;true&quot; /&gt; if the component tray for the designer is in large icon mode; otherwise, &lt;see langword=&quot;false&quot; /&gt;.">如果設計工具的元件匣是大圖示模式，則為 <see langword="true" />，否則為 <see langword="false" />。</returns>
    </member>
    <member name="T:System.Windows.Forms.Design.ComponentTray">
      <summary vsli:raw="Provides behavior for the component tray of a designer.">提供設計工具元件匣的行為。</summary>
    </member>
    <member name="M:System.Windows.Forms.Design.ComponentTray.#ctor(System.ComponentModel.Design.IDesigner,System.IServiceProvider)">
      <summary vsli:raw="Initializes a new instance of the &lt;see cref=&quot;T:System.Windows.Forms.Design.ComponentTray&quot; /&gt; class using the specified designer and service provider.">使用指定的設計工具和服務提供者，初始化 <see cref="T:System.Windows.Forms.Design.ComponentTray" /> 類別的新執行個體。</summary>
      <param name="mainDesigner" vsli:raw="The &lt;see cref=&quot;T:System.ComponentModel.Design.IDesigner&quot; /&gt; that is the main or document designer for the current project.">
        <see cref="T:System.ComponentModel.Design.IDesigner" />，是目前專案的主要或文件設計工具。</param>
      <param name="serviceProvider" vsli:raw="An &lt;see cref=&quot;T:System.IServiceProvider&quot; /&gt; that can be used to obtain design-time services.">
        <see cref="T:System.IServiceProvider" />，可用於取得設計階段服務。</param>
    </member>
    <member name="M:System.Windows.Forms.Design.ComponentTray.AddComponent(System.ComponentModel.IComponent)">
      <summary vsli:raw="Adds a component to the tray.">將元件加入元件匣中。</summary>
      <param name="component" vsli:raw="The &lt;see cref=&quot;T:System.ComponentModel.IComponent&quot; /&gt; to add to the tray.">要加入元件匣中的 <see cref="T:System.ComponentModel.IComponent" />。</param>
    </member>
    <member name="M:System.Windows.Forms.Design.ComponentTray.CanCreateComponentFromTool(System.Drawing.Design.ToolboxItem)">
      <summary vsli:raw="Gets a value indicating whether the specified tool can be used to create a new component.">取得值，指出是否能使用指定的工具建立新元件。</summary>
      <param name="tool" vsli:raw="The &lt;see cref=&quot;T:System.Drawing.Design.ToolboxItem&quot; /&gt; to test.">要測試的 <see cref="T:System.Drawing.Design.ToolboxItem" />。</param>
      <returns vsli:raw="&lt;see langword=&quot;true&quot; /&gt; if the specified tool can be used to create a component; otherwise, &lt;see langword=&quot;false&quot; /&gt;.">如果可以使用指定的工具建立元件，則為 <see langword="true" />，否則為 <see langword="false" />。</returns>
    </member>
    <member name="M:System.Windows.Forms.Design.ComponentTray.CanDisplayComponent(System.ComponentModel.IComponent)">
      <summary vsli:raw="Gets a value indicating whether the specified component can be displayed.">取得值，指出是否能顯示指定的元件。</summary>
      <param name="component" vsli:raw="The &lt;see cref=&quot;T:System.ComponentModel.IComponent&quot; /&gt; to test.">要測試的 <see cref="T:System.ComponentModel.IComponent" />。</param>
      <returns vsli:raw="&lt;see langword=&quot;true&quot; /&gt; if the component can be displayed; otherwise, &lt;see langword=&quot;false&quot; /&gt;.">如果可以顯示指定的元件，則為 <see langword="true" />，否則為 <see langword="false" />。</returns>
    </member>
    <member name="M:System.Windows.Forms.Design.ComponentTray.CreateComponentFromTool(System.Drawing.Design.ToolboxItem)">
      <summary vsli:raw="Creates a component from the specified toolbox item, adds the component to the current document, and displays a representation for the component in the component tray.">從指定的工具箱項目建立元件、將元件加入至目前的文件，並顯示元件匣中元件的表示。</summary>
      <param name="tool" vsli:raw="The &lt;see cref=&quot;T:System.Drawing.Design.ToolboxItem&quot; /&gt; to create a component from.">用來建立元件的 <see cref="T:System.Drawing.Design.ToolboxItem" />。</param>
    </member>
    <member name="M:System.Windows.Forms.Design.ComponentTray.DisplayError(System.Exception)">
      <summary vsli:raw="Displays an error message to the user with information about the specified exception.">向使用者顯示錯誤訊息，訊息中會有指定的例外狀況的相關資訊。</summary>
      <param name="e" vsli:raw="The exception about which to display information.">要顯示其資訊的例外狀況。</param>
    </member>
    <member name="M:System.Windows.Forms.Design.ComponentTray.Dispose(System.Boolean)">
      <summary vsli:raw="Releases the unmanaged resources used by the &lt;see cref=&quot;T:System.Windows.Forms.Design.ComponentTray&quot; /&gt; and optionally releases the managed resources.">釋放 <see cref="T:System.Windows.Forms.Design.ComponentTray" /> 所使用的 Unmanaged 資源，並選擇性地釋放 Managed 資源。</summary>
      <param name="disposing" vsli:raw="&lt;see langword=&quot;true&quot; /&gt; to release both managed and unmanaged resources; &lt;see langword=&quot;false&quot; /&gt; to release only unmanaged resources.">
        <see langword="true" /> 表示釋放 Managed 和 Unmanaged 資源，<see langword="false" /> 則表示只釋放 Unmanaged 資源。</param>
    </member>
    <member name="M:System.Windows.Forms.Design.ComponentTray.GetLocation(System.ComponentModel.IComponent)">
      <summary vsli:raw="Gets the location of the specified component, relative to the upper-left corner of the component tray.">取得指定元件相對於元件匣左上角的位置。</summary>
      <param name="receiver" vsli:raw="The &lt;see cref=&quot;T:System.ComponentModel.IComponent&quot; /&gt; to retrieve the location of.">要擷取其位置的 <see cref="T:System.ComponentModel.IComponent" />。</param>
      <returns vsli:raw="A &lt;see cref=&quot;T:System.Drawing.Point&quot; /&gt; indicating the coordinates of the specified component, or an empty &lt;see cref=&quot;T:System.Drawing.Point&quot; /&gt; if the specified component could not be found in the component tray. An empty &lt;see cref=&quot;T:System.Drawing.Point&quot; /&gt; has an &lt;see cref=&quot;P:System.Drawing.Point.IsEmpty&quot; /&gt; property equal to &lt;see langword=&quot;true&quot; /&gt; and typically has &lt;see cref=&quot;P:System.Drawing.Point.X&quot; /&gt; and &lt;see cref=&quot;P:System.Drawing.Point.Y&quot; /&gt; properties that are each equal to zero.">
        <see cref="T:System.Drawing.Point" />，指出指定元件之座標，如果在元件匣中找不到指定的元件，則為空的 <see cref="T:System.Drawing.Point" />。 空的 <see cref="T:System.Drawing.Point" /> 的 <see cref="P:System.Drawing.Point.IsEmpty" /> 屬性等於 <see langword="true" />，通常 <see cref="P:System.Drawing.Point.X" /> 和 <see cref="P:System.Drawing.Point.Y" /> 屬性都等於零。</returns>
    </member>
    <member name="M:System.Windows.Forms.Design.ComponentTray.GetNextComponent(System.ComponentModel.IComponent,System.Boolean)">
      <summary vsli:raw="Similar to &lt;see cref=&quot;M:System.Windows.Forms.Control.GetNextControl(System.Windows.Forms.Control,System.Boolean)&quot; /&gt;, this method returns the next component in the tray, given a starting component.">這個方法與 <see cref="M:System.Windows.Forms.Control.GetNextControl(System.Windows.Forms.Control,System.Boolean)" /> 類似，只要指定起始元件，就會在元件匣中傳回下一個元件。</summary>
      <param name="component" vsli:raw="The component from which to start enumerating.">要開始列舉的來源元件。</param>
      <param name="forward" vsli:raw="&lt;see langword=&quot;true&quot; /&gt; to enumerate forward through the list; otherwise, &lt;see langword=&quot;false&quot; /&gt; to enumerate backward.">
        <see langword="true" /> 表示要順向逐一列舉清單，<see langword="false" /> 則表示要反向列舉。</param>
      <returns vsli:raw="The next component in the component tray, or &lt;see langword=&quot;null&quot; /&gt;, if the end of the list is encountered (or the beginning, if &lt;paramref name=&quot;forward&quot; /&gt; is &lt;see langword=&quot;false&quot; /&gt;).">元件匣中的下一個元件；如果已到達清單結尾 (如果 <paramref name="forward" /> 是 <see langword="null" />，則為清單開頭)，則為 <see langword="false" />。</returns>
    </member>
    <member name="M:System.Windows.Forms.Design.ComponentTray.GetService(System.Type)">
      <summary vsli:raw="Gets the requested service type.">取得要求的服務型別。</summary>
      <param name="serviceType" vsli:raw="The type of the service to retrieve.">要擷取的服務型別。</param>
      <returns vsli:raw="An instance of the requested service, or &lt;see langword=&quot;null&quot; /&gt; if the service could not be found.">要求的服務的執行個體；如果找不到服務，則為 <see langword="null" />。</returns>
    </member>
    <member name="M:System.Windows.Forms.Design.ComponentTray.GetTrayLocation(System.ComponentModel.IComponent)">
      <summary vsli:raw="Gets the value of the &lt;see langword=&quot;Location&quot; /&gt; extender property.">取得 <see langword="Location" /> 擴充項 (Extender) 屬性的值。</summary>
      <param name="receiver" vsli:raw="The &lt;see cref=&quot;T:System.ComponentModel.IComponent&quot; /&gt; that receives the location extender property.">接收位置擴充項屬性的 <see cref="T:System.ComponentModel.IComponent" />。</param>
      <returns vsli:raw="A &lt;see cref=&quot;T:System.Drawing.Point&quot; /&gt; representing the location of &lt;paramref name=&quot;receiver&quot; /&gt;.">
        <see cref="T:System.Drawing.Point" />，表示 <paramref name="receiver" /> 的位置。</returns>
    </member>
    <member name="M:System.Windows.Forms.Design.ComponentTray.IsTrayComponent(System.ComponentModel.IComponent)">
      <summary vsli:raw="Tests a component for presence in the component tray.">測試元件是否存在元件匣中。</summary>
      <param name="comp" vsli:raw="The component to test for presence in the component tray.">要測試是否存在元件匣中的元件。</param>
      <returns vsli:raw="&lt;see langword=&quot;true&quot; /&gt; if &lt;paramref name=&quot;comp&quot; /&gt; is being shown on the tray; otherwise, &lt;see langword=&quot;false&quot; /&gt;.">如果 <paramref name="comp" /> 已經顯示在元件匣中，則為 <see langword="true" />，否則為 <see langword="false" />。</returns>
    </member>
    <member name="M:System.Windows.Forms.Design.ComponentTray.OnDragDrop(System.Windows.Forms.DragEventArgs)">
      <summary vsli:raw="Called when an object that has been dragged is dropped on the component tray.">在將拖曳的物件放在元件匣上時呼叫。</summary>
      <param name="de" vsli:raw="A &lt;see cref=&quot;T:System.Windows.Forms.DragEventArgs&quot; /&gt; that provides data for the event.">提供事件資料的 <see cref="T:System.Windows.Forms.DragEventArgs" />。</param>
    </member>
    <member name="M:System.Windows.Forms.Design.ComponentTray.OnDragEnter(System.Windows.Forms.DragEventArgs)">
      <summary vsli:raw="Called when an object is dragged over, and has entered the area over, the component tray.">在物件拖曳到元件匣上，並且進入區域上時呼叫。</summary>
      <param name="de" vsli:raw="A &lt;see cref=&quot;T:System.Windows.Forms.DragEventArgs&quot; /&gt; that provides data for the event.">提供事件資料的 <see cref="T:System.Windows.Forms.DragEventArgs" />。</param>
    </member>
    <member name="M:System.Windows.Forms.Design.ComponentTray.OnDragLeave(System.EventArgs)">
      <summary vsli:raw="Called when an object is dragged out of the area over the component tray.">在物件拖離元件匣上的區域時呼叫。</summary>
      <param name="e" vsli:raw="An &lt;see cref=&quot;T:System.EventArgs&quot; /&gt; that provides data for the event.">提供事件資料的 <see cref="T:System.EventArgs" />。</param>
    </member>
    <member name="M:System.Windows.Forms.Design.ComponentTray.OnDragOver(System.Windows.Forms.DragEventArgs)">
      <summary vsli:raw="Called when an object is dragged over the component tray.">在物件拖曳到元件匣上時呼叫。</summary>
      <param name="de" vsli:raw="A &lt;see cref=&quot;T:System.Windows.Forms.DragEventArgs&quot; /&gt; that provides data for the event.">提供事件資料的 <see cref="T:System.Windows.Forms.DragEventArgs" />。</param>
    </member>
    <member name="M:System.Windows.Forms.Design.ComponentTray.OnGiveFeedback(System.Windows.Forms.GiveFeedbackEventArgs)">
      <summary vsli:raw="Called during an OLE drag and drop operation to provide an opportunity for the component tray to give feedback to the user about the results of dropping the object at a specific point.">在 OLE 拖放作業時呼叫，讓元件匣得以傳送拖曳特定點物件之結果給使用者。</summary>
      <param name="gfevent" vsli:raw="A &lt;see cref=&quot;T:System.Windows.Forms.GiveFeedbackEventArgs&quot; /&gt; that provides data for the event.">提供事件資料的 <see cref="T:System.Windows.Forms.GiveFeedbackEventArgs" />。</param>
    </member>
    <member name="M:System.Windows.Forms.Design.ComponentTray.OnLayout(System.Windows.Forms.LayoutEventArgs)">
      <summary vsli:raw="Raises the &lt;see cref=&quot;E:System.Windows.Forms.Control.Layout&quot; /&gt; event.">引發 <see cref="E:System.Windows.Forms.Control.Layout" /> 事件。</summary>
      <param name="levent" vsli:raw="A &lt;see cref=&quot;T:System.Windows.Forms.LayoutEventArgs&quot; /&gt; that contains the event data.">
        <see cref="T:System.Windows.Forms.LayoutEventArgs" />，其中包含事件資料。</param>
    </member>
    <member name="M:System.Windows.Forms.Design.ComponentTray.OnLostCapture">
      <summary vsli:raw="Called when a mouse drag selection operation is canceled.">在取消滑鼠拖曳選取作業時呼叫。</summary>
    </member>
    <member name="M:System.Windows.Forms.Design.ComponentTray.OnMouseDoubleClick(System.Windows.Forms.MouseEventArgs)">
      <summary vsli:raw="Called when the mouse is double clicked over the component tray.">在元件匣上按兩下滑鼠時呼叫。</summary>
      <param name="e" vsli:raw="An &lt;see cref=&quot;T:System.EventArgs&quot; /&gt; that provides data for the event.">提供事件資料的 <see cref="T:System.EventArgs" />。</param>
    </member>
    <member name="M:System.Windows.Forms.Design.ComponentTray.OnMouseDown(System.Windows.Forms.MouseEventArgs)">
      <summary vsli:raw="Called when the mouse button is pressed.">在按下滑鼠按鍵時呼叫。</summary>
      <param name="e" vsli:raw="A &lt;see cref=&quot;T:System.Windows.Forms.MouseEventArgs&quot; /&gt; that provides data for the event.">提供事件資料的 <see cref="T:System.Windows.Forms.MouseEventArgs" />。</param>
    </member>
    <member name="M:System.Windows.Forms.Design.ComponentTray.OnMouseMove(System.Windows.Forms.MouseEventArgs)">
      <summary vsli:raw="Called when the mouse cursor position has changed.">在滑鼠游標位置變更時呼叫。</summary>
      <param name="e" vsli:raw="A &lt;see cref=&quot;T:System.Windows.Forms.MouseEventArgs&quot; /&gt; that provides data for the event.">提供事件資料的 <see cref="T:System.Windows.Forms.MouseEventArgs" />。</param>
    </member>
    <member name="M:System.Windows.Forms.Design.ComponentTray.OnMouseUp(System.Windows.Forms.MouseEventArgs)">
      <summary vsli:raw="Called when the mouse button has been released.">在放開滑鼠按鍵時呼叫。</summary>
      <param name="e" vsli:raw="A &lt;see cref=&quot;T:System.Windows.Forms.MouseEventArgs&quot; /&gt; that provides data for the event.">提供事件資料的 <see cref="T:System.Windows.Forms.MouseEventArgs" />。</param>
    </member>
    <member name="M:System.Windows.Forms.Design.ComponentTray.OnPaint(System.Windows.Forms.PaintEventArgs)">
      <summary vsli:raw="Called when the view for the component tray should be refreshed.">在應該重新整理元件匣的檢視時呼叫。</summary>
      <param name="pe" vsli:raw="A &lt;see cref=&quot;T:System.Windows.Forms.PaintEventArgs&quot; /&gt; that provides data for the event.">提供事件資料的 <see cref="T:System.Windows.Forms.PaintEventArgs" />。</param>
    </member>
    <member name="M:System.Windows.Forms.Design.ComponentTray.OnSetCursor">
      <summary vsli:raw="Called to set the mouse cursor.">呼叫以設定滑鼠游標。</summary>
    </member>
    <member name="M:System.Windows.Forms.Design.ComponentTray.RemoveComponent(System.ComponentModel.IComponent)">
      <summary vsli:raw="Removes the specified component from the tray.">從元件匣中移除指定的元件。</summary>
      <param name="component" vsli:raw="The &lt;see cref=&quot;T:System.ComponentModel.IComponent&quot; /&gt; to remove from the tray.">要從元件匣中移除的 <see cref="T:System.ComponentModel.IComponent" />。</param>
    </member>
    <member name="M:System.Windows.Forms.Design.ComponentTray.SetLocation(System.ComponentModel.IComponent,System.Drawing.Point)">
      <summary vsli:raw="Sets the location of the specified component to the specified location.">將指定的元件位置設定至指定的位置。</summary>
      <param name="receiver" vsli:raw="The &lt;see cref=&quot;T:System.ComponentModel.IComponent&quot; /&gt; to set the location of.">要設定其位置的 <see cref="T:System.ComponentModel.IComponent" />。</param>
      <param name="location" vsli:raw="A &lt;see cref=&quot;T:System.Drawing.Point&quot; /&gt; indicating the new location for the specified component.">
        <see cref="T:System.Drawing.Point" />，指出指定元件的新位置。</param>
    </member>
    <member name="M:System.Windows.Forms.Design.ComponentTray.SetTrayLocation(System.ComponentModel.IComponent,System.Drawing.Point)">
      <summary vsli:raw="Sets the value of the &lt;see langword=&quot;Location&quot; /&gt; extender property.">設定 <see langword="Location" /> 擴充項屬性的值。</summary>
      <param name="receiver" vsli:raw="The &lt;see cref=&quot;T:System.ComponentModel.IComponent&quot; /&gt; that receives the location extender property.">接收位置擴充項屬性的 <see cref="T:System.ComponentModel.IComponent" />。</param>
      <param name="location" vsli:raw="A &lt;see cref=&quot;T:System.Drawing.Point&quot; /&gt; representing the location of &lt;paramref name=&quot;receiver&quot; /&gt;.">
        <see cref="T:System.Drawing.Point" />，表示 <paramref name="receiver" /> 的位置。</param>
    </member>
    <member name="M:System.Windows.Forms.Design.ComponentTray.System#ComponentModel#IExtenderProvider#CanExtend(System.Object)">
      <summary vsli:raw="For a description of this member, see &lt;see cref=&quot;M:System.ComponentModel.IExtenderProvider.CanExtend(System.Object)&quot; /&gt;.">如需這個成員的說明，請參閱 <see cref="M:System.ComponentModel.IExtenderProvider.CanExtend(System.Object)" />。</summary>
      <param name="extendee" vsli:raw="The object to receive the extender properties.">要接收擴充項屬性的物件。</param>
      <returns vsli:raw="&lt;see langword=&quot;true&quot; /&gt; if this object can provide extender properties to the specified object; otherwise, &lt;see langword=&quot;false&quot; /&gt;.">如果這個物件能夠提供擴充項屬性給指定的物件則為 <see langword="true" />，否則為 <see langword="false" />。</returns>
    </member>
    <member name="M:System.Windows.Forms.Design.ComponentTray.WndProc(System.Windows.Forms.Message@)">
      <summary vsli:raw="Processes Windows messages.">處理 Windows 訊息。</summary>
      <param name="m" vsli:raw="The &lt;see cref=&quot;T:System.Windows.Forms.Message&quot; /&gt; to process.">要處理的 <see cref="T:System.Windows.Forms.Message" />。</param>
    </member>
    <member name="P:System.Windows.Forms.Design.ComponentTray.AutoArrange">
      <summary vsli:raw="Gets or sets a value indicating whether the tray items are automatically aligned.">取得或設定值，指出是否自動對齊元件匣項目。</summary>
      <returns vsli:raw="&lt;see langword=&quot;true&quot; /&gt; if the tray items are automatically arranged; otherwise, &lt;see langword=&quot;false&quot; /&gt;.">如果會自動排列元件匣項目，則為 <see langword="true" />，否則為 <see langword="false" />。</returns>
    </member>
    <member name="P:System.Windows.Forms.Design.ComponentTray.ComponentCount">
      <summary vsli:raw="Gets the number of components contained in the tray.">取得元件匣中包含的元件數目。</summary>
      <returns vsli:raw="The number of components in the tray.">元件匣中的元件數目。</returns>
    </member>
    <member name="P:System.Windows.Forms.Design.ComponentTray.ShowLargeIcons">
      <summary vsli:raw="Gets or sets a value indicating whether the tray displays a large icon to represent each component in the tray.">取得或設定值，指出元件匣是顯示大圖示，或者呈現元件匣中每一個元件。</summary>
      <returns vsli:raw="&lt;see langword=&quot;true&quot; /&gt; if large icons are displayed; otherwise, &lt;see langword=&quot;false&quot; /&gt;.">如果是顯示大圖示，則為 <see langword="true" />，否則為 <see langword="false" />。</returns>
    </member>
    <member name="T:System.Windows.Forms.Design.ControlDesigner">
      <summary vsli:raw="Extends the design mode behavior of a &lt;see cref=&quot;T:System.Windows.Forms.Control&quot; /&gt;.">擴充 <see cref="T:System.Windows.Forms.Control" /> 的設計模式行為。</summary>
    </member>
    <member name="F:System.Windows.Forms.Design.ControlDesigner.accessibilityObj">
      <summary vsli:raw="Specifies the accessibility object for the designer.">指定設計工具的可及性物件。</summary>
    </member>
    <member name="F:System.Windows.Forms.Design.ControlDesigner.InvalidPoint">
      <summary vsli:raw="Defines a local &lt;see cref=&quot;T:System.Drawing.Point&quot; /&gt; that represents the values of an invalid &lt;see cref=&quot;T:System.Drawing.Point&quot; /&gt;.">定義表示無效 <see cref="T:System.Drawing.Point" /> 之值的區域 <see cref="T:System.Drawing.Point" />。</summary>
    </member>
    <member name="M:System.Windows.Forms.Design.ControlDesigner.#ctor">
      <summary vsli:raw="Initializes a new instance of the &lt;see cref=&quot;T:System.Windows.Forms.Design.ControlDesigner&quot; /&gt; class.">初始化 <see cref="T:System.Windows.Forms.Design.ControlDesigner" /> 類別的新執行個體。</summary>
    </member>
    <member name="M:System.Windows.Forms.Design.ControlDesigner.BaseWndProc(System.Windows.Forms.Message@)">
      <summary vsli:raw="Processes Windows messages.">處理 Windows 訊息。</summary>
      <param name="m" vsli:raw="The &lt;see cref=&quot;T:System.Windows.Forms.Message&quot; /&gt; to process.">要處理的 <see cref="T:System.Windows.Forms.Message" />。</param>
    </member>
    <member name="M:System.Windows.Forms.Design.ControlDesigner.CanBeParentedTo(System.ComponentModel.Design.IDesigner)">
      <summary vsli:raw="Indicates if this designer's control can be parented by the control of the specified designer.">指示指定的設計工具控制項是否可以成為這個設計工具控制項的父系。</summary>
      <param name="parentDesigner" vsli:raw="The &lt;see cref=&quot;T:System.ComponentModel.Design.IDesigner&quot; /&gt; that manages the control to check.">管理控制項執行檢查的 <see cref="T:System.ComponentModel.Design.IDesigner" />。</param>
      <returns vsli:raw="&lt;see langword=&quot;true&quot; /&gt; if the control managed by the specified designer can parent the control managed by this designer; otherwise, &lt;see langword=&quot;false&quot; /&gt;.">如果指定設計工具管理的控制項可以成為這個設計工具管理控制項的父系，則為 <see langword="true" />，否則為 <see langword="false" />。</returns>
    </member>
    <member name="M:System.Windows.Forms.Design.ControlDesigner.DefWndProc(System.Windows.Forms.Message@)">
      <summary vsli:raw="Provides default processing for Windows messages.">提供 Windows 訊息的預設處理。</summary>
      <param name="m" vsli:raw="The &lt;see cref=&quot;T:System.Windows.Forms.Message&quot; /&gt; to process.">要處理的 <see cref="T:System.Windows.Forms.Message" />。</param>
    </member>
    <member name="M:System.Windows.Forms.Design.ControlDesigner.DisplayError(System.Exception)">
      <summary vsli:raw="Displays information about the specified exception to the user.">向使用者顯示指定之例外狀況的相關資訊。</summary>
      <param name="e" vsli:raw="The &lt;see cref=&quot;T:System.Exception&quot; /&gt; to display.">要顯示的 <see cref="T:System.Exception" />。</param>
    </member>
    <member name="M:System.Windows.Forms.Design.ControlDesigner.Dispose(System.Boolean)">
      <summary vsli:raw="Releases the unmanaged resources used by the &lt;see cref=&quot;T:System.Windows.Forms.Design.ControlDesigner&quot; /&gt; and optionally releases the managed resources.">釋放 <see cref="T:System.Windows.Forms.Design.ControlDesigner" /> 所使用的 Unmanaged 資源，並選擇性地釋放 Managed 資源。</summary>
      <param name="disposing" vsli:raw="&lt;see langword=&quot;true&quot; /&gt; to release both managed and unmanaged resources; &lt;see langword=&quot;false&quot; /&gt; to release only unmanaged resources.">
        <see langword="true" /> 表示釋放 Managed 和 Unmanaged 資源，<see langword="false" /> 則表示只釋放 Unmanaged 資源。</param>
    </member>
    <member name="M:System.Windows.Forms.Design.ControlDesigner.EnableDesignMode(System.Windows.Forms.Control,System.String)">
      <summary vsli:raw="Enables design time functionality for a child control.">啟用子控制項的設計階段功能。</summary>
      <param name="child" vsli:raw="The child control for which design mode will be enabled.">將啟用設計模式的子控制項。</param>
      <param name="name" vsli:raw="The name of &lt;paramref name=&quot;child&quot; /&gt; as exposed to the end user.">公開給使用者的 <paramref name="child" /> 名稱。</param>
      <exception cref="T:System.ArgumentNullException" vsli:raw="&lt;paramref name=&quot;child&quot; /&gt; or &lt;paramref name=&quot;name&quot; /&gt; is &lt;see langword=&quot;null&quot; /&gt;.">
        <paramref name="child" /> 或 <paramref name="name" /> 為 <see langword="null" />。</exception>
      <returns vsli:raw="&lt;see langword=&quot;true&quot; /&gt; if the child control could be enabled for design time; &lt;see langword=&quot;false&quot; /&gt; if the hosting infrastructure does not support it.">如果可以啟用設計階段的子控制項，則為 <see langword="true" />，如果裝載基礎結構不支援它，則為 <see langword="false" />。</returns>
    </member>
    <member name="M:System.Windows.Forms.Design.ControlDesigner.EnableDragDrop(System.Boolean)">
      <summary vsli:raw="Enables or disables drag-and-drop support for the control being designed.">啟用或停用設計中之控制項的拖放支援。</summary>
      <param name="value" vsli:raw="&lt;see langword=&quot;true&quot; /&gt; to enable drag-and-drop support for the control; &lt;see langword=&quot;false&quot; /&gt; if the control should not have drag-and-drop support. The default is &lt;see langword=&quot;false&quot; /&gt;.">會啟用控制項的拖放支援時，為 <see langword="true" />；如果控制項不應支援拖放功能，則為 <see langword="false" />。 預設為 <see langword="false" />。</param>
    </member>
    <member name="M:System.Windows.Forms.Design.ControlDesigner.GetControlGlyph(System.Windows.Forms.Design.Behavior.GlyphSelectionType)">
      <summary vsli:raw="Returns a &lt;see cref=&quot;T:System.Windows.Forms.Design.Behavior.ControlBodyGlyph&quot; /&gt; representing the bounds of this control.">傳回 <see cref="T:System.Windows.Forms.Design.Behavior.ControlBodyGlyph" />，表示這個控制項的界限。</summary>
      <param name="selectionType" vsli:raw="A &lt;see cref=&quot;T:System.Windows.Forms.Design.Behavior.GlyphSelectionType&quot; /&gt; value that specifies the selection state.">
        <see cref="T:System.Windows.Forms.Design.Behavior.GlyphSelectionType" /> 值，指定選取狀態。</param>
      <returns vsli:raw="A &lt;see cref=&quot;T:System.Windows.Forms.Design.Behavior.ControlBodyGlyph&quot; /&gt; representing the bounds of this control.">
        <see cref="T:System.Windows.Forms.Design.Behavior.ControlBodyGlyph" />，表示這個控制項的界限。</returns>
    </member>
    <member name="M:System.Windows.Forms.Design.ControlDesigner.GetGlyphs(System.Windows.Forms.Design.Behavior.GlyphSelectionType)">
      <summary vsli:raw="Gets a collection of &lt;see cref=&quot;T:System.Windows.Forms.Design.Behavior.Glyph&quot; /&gt; objects representing the selection borders and grab handles for a standard control.">取得 <see cref="T:System.Windows.Forms.Design.Behavior.Glyph" /> 物件的集合，表示標準控制項的選取範圍框線和抓取控點。</summary>
      <param name="selectionType" vsli:raw="A &lt;see cref=&quot;T:System.Windows.Forms.Design.Behavior.GlyphSelectionType&quot; /&gt; value that specifies the selection state.">
        <see cref="T:System.Windows.Forms.Design.Behavior.GlyphSelectionType" /> 值，指定選取狀態。</param>
      <returns vsli:raw="A collection of &lt;see cref=&quot;T:System.Windows.Forms.Design.Behavior.Glyph&quot; /&gt; objects.">
        <see cref="T:System.Windows.Forms.Design.Behavior.Glyph" /> 物件的集合。</returns>
    </member>
    <member name="M:System.Windows.Forms.Design.ControlDesigner.GetHitTest(System.Drawing.Point)">
      <summary vsli:raw="Indicates whether a mouse click at the specified point should be handled by the control.">指示在指定的點按一下滑鼠是否應由控制項處理。</summary>
      <param name="point" vsli:raw="A &lt;see cref=&quot;T:System.Drawing.Point&quot; /&gt; indicating the position at which the mouse was clicked, in screen coordinates.">
        <see cref="T:System.Drawing.Point" />，表示滑鼠按一下的位置，以螢幕座標 (Screen Coordinate) 表示。</param>
      <returns vsli:raw="&lt;see langword=&quot;true&quot; /&gt; if a click at the specified point is to be handled by the control; otherwise, &lt;see langword=&quot;false&quot; /&gt;.">如果在指定的點按一下是由控制項處理，則為 <see langword="true" />，否則為 <see langword="false" />。</returns>
    </member>
    <member name="M:System.Windows.Forms.Design.ControlDesigner.HookChildControls(System.Windows.Forms.Control)">
      <summary vsli:raw="Routes messages from the child controls of the specified control to the designer.">從指定的控制項的子控制項傳送訊息至設計工具。</summary>
      <param name="firstChild" vsli:raw="The first child &lt;see cref=&quot;T:System.Windows.Forms.Control&quot; /&gt; to process. This method may recursively call itself for children of the control.">要處理的第一個子 <see cref="T:System.Windows.Forms.Control" />。 這個方法會為控制項的子系遞迴地呼叫本身。</param>
    </member>
    <member name="M:System.Windows.Forms.Design.ControlDesigner.Initialize(System.ComponentModel.IComponent)">
      <summary vsli:raw="Initializes the designer with the specified component.">使用指定的元件，初始化設計工具。</summary>
      <param name="component" vsli:raw="The &lt;see cref=&quot;T:System.ComponentModel.IComponent&quot; /&gt; to associate the designer with. This component must always be an instance of, or derive from, &lt;see cref=&quot;T:System.Windows.Forms.Control&quot; /&gt;.">設計工具要與其關聯的 <see cref="T:System.ComponentModel.IComponent" />。 這個元件一定要是 <see cref="T:System.Windows.Forms.Control" /> 的執行個體，或從其中衍生。</param>
    </member>
    <member name="M:System.Windows.Forms.Design.ControlDesigner.InitializeExistingComponent(System.Collections.IDictionary)">
      <summary vsli:raw="Re-initializes an existing component.">重新初始化現有的元件。</summary>
      <param name="defaultValues" vsli:raw="A name/value dictionary of default values to apply to properties. May be &lt;see langword=&quot;null&quot; /&gt; if no default values are specified.">要套用至屬性之預設值的名稱/值字典。 如果未指定任何預設值，則可能為 <see langword="null" />。</param>
    </member>
    <member name="M:System.Windows.Forms.Design.ControlDesigner.InitializeNewComponent(System.Collections.IDictionary)">
      <summary vsli:raw="Initializes a newly created component.">初始化新建立的元件。</summary>
      <param name="defaultValues" vsli:raw="A name/value dictionary of default values to apply to properties. May be &lt;see langword=&quot;null&quot; /&gt; if no default values are specified.">要套用至屬性之預設值的名稱/值字典。 如果未指定任何預設值，則可能為 <see langword="null" />。</param>
    </member>
    <member name="M:System.Windows.Forms.Design.ControlDesigner.InternalControlDesigner(System.Int32)">
      <summary vsli:raw="Returns the internal control designer with the specified index in the &lt;see cref=&quot;T:System.Windows.Forms.Design.ControlDesigner&quot; /&gt;.">傳回 <see cref="T:System.Windows.Forms.Design.ControlDesigner" /> 中含指定索引的內部控制項設計工具。</summary>
      <param name="internalControlIndex" vsli:raw="A specified index to select the internal control designer. This index is zero-based.">用來選取內部控制項設計工具的指定索引。 這個索引是以零起始。</param>
      <returns vsli:raw="A &lt;see cref=&quot;T:System.Windows.Forms.Design.ControlDesigner&quot; /&gt; at the specified index.">指定索引處的 <see cref="T:System.Windows.Forms.Design.ControlDesigner" />。</returns>
    </member>
    <member name="M:System.Windows.Forms.Design.ControlDesigner.NumberOfInternalControlDesigners">
      <summary vsli:raw="Returns the number of internal control designers in the &lt;see cref=&quot;T:System.Windows.Forms.Design.ControlDesigner&quot; /&gt;.">傳回 <see cref="T:System.Windows.Forms.Design.ControlDesigner" /> 中內部控制項設計工具的數目。</summary>
      <returns vsli:raw="The number of internal control designers in the &lt;see cref=&quot;T:System.Windows.Forms.Design.ControlDesigner&quot; /&gt;.">
        <see cref="T:System.Windows.Forms.Design.ControlDesigner" /> 中內部控制項設計工具的數目。</returns>
    </member>
    <member name="M:System.Windows.Forms.Design.ControlDesigner.OnContextMenu(System.Int32,System.Int32)">
      <summary vsli:raw="Shows the context menu and provides an opportunity to perform additional processing when the context menu is about to be displayed.">顯示內容功能表，並且提供在內容功能表將要顯示時執行其他處理的機會。</summary>
      <param name="x" vsli:raw="The x coordinate at which to display the context menu.">X 座標，要在其上顯示內容功能表。</param>
      <param name="y" vsli:raw="The y coordinate at which to display the context menu.">Y 座標，要在其上顯示內容功能表。</param>
    </member>
    <member name="M:System.Windows.Forms.Design.ControlDesigner.OnCreateHandle">
      <summary vsli:raw="Provides an opportunity to perform additional processing immediately after the control handle has been created.">提供在建立控制項控制代碼之後，立即執行其他處理的機會。</summary>
    </member>
    <member name="M:System.Windows.Forms.Design.ControlDesigner.OnDragComplete(System.Windows.Forms.DragEventArgs)">
      <summary vsli:raw="Receives a call to clean up a drag-and-drop operation.">接收呼叫以清除拖放作業。</summary>
      <param name="de" vsli:raw="A &lt;see cref=&quot;T:System.Windows.Forms.DragEventArgs&quot; /&gt; that provides data for the event.">提供事件資料的 <see cref="T:System.Windows.Forms.DragEventArgs" />。</param>
    </member>
    <member name="M:System.Windows.Forms.Design.ControlDesigner.OnDragDrop(System.Windows.Forms.DragEventArgs)">
      <summary vsli:raw="Receives a call when a drag-and-drop object is dropped onto the control designer view.">在拖放物件放在控制項設計工具檢視上時接收呼叫。</summary>
      <param name="de" vsli:raw="A &lt;see cref=&quot;T:System.Windows.Forms.DragEventArgs&quot; /&gt; that provides data for the event.">提供事件資料的 <see cref="T:System.Windows.Forms.DragEventArgs" />。</param>
    </member>
    <member name="M:System.Windows.Forms.Design.ControlDesigner.OnDragEnter(System.Windows.Forms.DragEventArgs)">
      <summary vsli:raw="Receives a call when a drag-and-drop operation enters the control designer view.">在拖放作業進入控制項設計工具檢視時接收呼叫。</summary>
      <param name="de" vsli:raw="A &lt;see cref=&quot;T:System.Windows.Forms.DragEventArgs&quot; /&gt; that provides data for the event.">提供事件資料的 <see cref="T:System.Windows.Forms.DragEventArgs" />。</param>
    </member>
    <member name="M:System.Windows.Forms.Design.ControlDesigner.OnDragLeave(System.EventArgs)">
      <summary vsli:raw="Receives a call when a drag-and-drop operation leaves the control designer view.">在拖放作業離開控制項設計工具檢視時接收呼叫。</summary>
      <param name="e" vsli:raw="An &lt;see cref=&quot;T:System.EventArgs&quot; /&gt; that provides data for the event.">提供事件資料的 <see cref="T:System.EventArgs" />。</param>
    </member>
    <member name="M:System.Windows.Forms.Design.ControlDesigner.OnDragOver(System.Windows.Forms.DragEventArgs)">
      <summary vsli:raw="Receives a call when a drag-and-drop object is dragged over the control designer view.">在拖放物件拖曳至控制項設計工具檢視上時接收呼叫。</summary>
      <param name="de" vsli:raw="A &lt;see cref=&quot;T:System.Windows.Forms.DragEventArgs&quot; /&gt; that provides data for the event.">提供事件資料的 <see cref="T:System.Windows.Forms.DragEventArgs" />。</param>
    </member>
    <member name="M:System.Windows.Forms.Design.ControlDesigner.OnGiveFeedback(System.Windows.Forms.GiveFeedbackEventArgs)">
      <summary vsli:raw="Receives a call when a drag-and-drop operation is in progress to provide visual cues based on the location of the mouse while a drag operation is in progress.">在拖放作業進行中時接收呼叫，以提供拖曳作業進行時以滑鼠位置為基礎的視覺化提示。</summary>
      <param name="e" vsli:raw="A &lt;see cref=&quot;T:System.Windows.Forms.GiveFeedbackEventArgs&quot; /&gt; that provides data for the event.">提供事件資料的 <see cref="T:System.Windows.Forms.GiveFeedbackEventArgs" />。</param>
    </member>
    <member name="M:System.Windows.Forms.Design.ControlDesigner.OnMouseDragBegin(System.Int32,System.Int32)">
      <summary vsli:raw="Receives a call in response to the left mouse button being pressed and held while over the component.">接收呼叫以回應在元件上方按住滑鼠左鍵的動作。</summary>
      <param name="x" vsli:raw="The x position of the mouse in screen coordinates.">螢幕座標中滑鼠的 x 位置。</param>
      <param name="y" vsli:raw="The y position of the mouse in screen coordinates.">螢幕座標中滑鼠的 y 位置。</param>
    </member>
    <member name="M:System.Windows.Forms.Design.ControlDesigner.OnMouseDragEnd(System.Boolean)">
      <summary vsli:raw="Receives a call at the end of a drag-and-drop operation to complete or cancel the operation.">在拖放作業結束時接收呼叫，以完成或取消作業。</summary>
      <param name="cancel" vsli:raw="&lt;see langword=&quot;true&quot; /&gt; to cancel the drag; &lt;see langword=&quot;false&quot; /&gt; to commit it.">
        <see langword="true" /> 會取消拖曳；<see langword="false" /> 則會認可拖曳。</param>
    </member>
    <member name="M:System.Windows.Forms.Design.ControlDesigner.OnMouseDragMove(System.Int32,System.Int32)">
      <summary vsli:raw="Receives a call for each movement of the mouse during a drag-and-drop operation.">在拖放作業期間每次移動滑鼠時接收呼叫。</summary>
      <param name="x" vsli:raw="The x position of the mouse in screen coordinates.">螢幕座標中滑鼠的 x 位置。</param>
      <param name="y" vsli:raw="The y position of the mouse in screen coordinates.">螢幕座標中滑鼠的 y 位置。</param>
    </member>
    <member name="M:System.Windows.Forms.Design.ControlDesigner.OnMouseEnter">
      <summary vsli:raw="Receives a call when the mouse first enters the control.">在滑鼠首次進入控制項時接收呼叫。</summary>
    </member>
    <member name="M:System.Windows.Forms.Design.ControlDesigner.OnMouseHover">
      <summary vsli:raw="Receives a call after the mouse hovers over the control.">在滑鼠停留在控制項上方後接收呼叫。</summary>
    </member>
    <member name="M:System.Windows.Forms.Design.ControlDesigner.OnMouseLeave">
      <summary vsli:raw="Receives a call when the mouse first enters the control.">在滑鼠首次進入控制項時接收呼叫。</summary>
    </member>
    <member name="M:System.Windows.Forms.Design.ControlDesigner.OnPaintAdornments(System.Windows.Forms.PaintEventArgs)">
      <summary vsli:raw="Receives a call when the control that the designer is managing has painted its surface so the designer can paint any additional adornments on top of the control.">在設計工具正在管理的控制項已繪製其介面時接收呼叫，讓設計工具可以在控制項之上繪製任何其他的裝飾。</summary>
      <param name="pe" vsli:raw="A &lt;see cref=&quot;T:System.Windows.Forms.PaintEventArgs&quot; /&gt; the designer can use to draw on the control.">
        <see cref="T:System.Windows.Forms.PaintEventArgs" />，設計工具可用於在控制項上繪製。</param>
    </member>
    <member name="M:System.Windows.Forms.Design.ControlDesigner.OnSetComponentDefaults">
      <summary vsli:raw="Called when the designer is initialized.">當設計工具已初始化時呼叫。</summary>
    </member>
    <member name="M:System.Windows.Forms.Design.ControlDesigner.OnSetCursor">
      <summary vsli:raw="Receives a call each time the cursor needs to be set.">每次必須設定游標時就會接收呼叫。</summary>
    </member>
    <member name="M:System.Windows.Forms.Design.ControlDesigner.PreFilterProperties(System.Collections.IDictionary)">
      <summary vsli:raw="Adjusts the set of properties the component exposes through a &lt;see cref=&quot;T:System.ComponentModel.TypeDescriptor&quot; /&gt;.">調整元件透過 <see cref="T:System.ComponentModel.TypeDescriptor" /> 公開的屬性集。</summary>
      <param name="properties" vsli:raw="An &lt;see cref=&quot;T:System.Collections.IDictionary&quot; /&gt; containing the properties for the class of the component.">
        <see cref="T:System.Collections.IDictionary" />，包含元件的類別屬性。</param>
    </member>
    <member name="M:System.Windows.Forms.Design.ControlDesigner.UnhookChildControls(System.Windows.Forms.Control)">
      <summary vsli:raw="Routes messages for the children of the specified control to each control rather than to a parent designer.">將指定的控制項的子系訊息傳送至每一個控制項，而非傳送至父設計工具。</summary>
      <param name="firstChild" vsli:raw="The first child &lt;see cref=&quot;T:System.Windows.Forms.Control&quot; /&gt; to process. This method may recursively call itself for children of the control.">要處理的第一個子 <see cref="T:System.Windows.Forms.Control" />。 這個方法會為控制項的子系遞迴地呼叫本身。</param>
    </member>
    <member name="M:System.Windows.Forms.Design.ControlDesigner.WndProc(System.Windows.Forms.Message@)">
      <summary vsli:raw="Processes Windows messages and optionally routes them to the control.">處理 Windows 訊息，並選擇性地傳送它們至控制項。</summary>
      <param name="m" vsli:raw="The &lt;see cref=&quot;T:System.Windows.Forms.Message&quot; /&gt; to process.">要處理的 <see cref="T:System.Windows.Forms.Message" />。</param>
    </member>
    <member name="P:System.Windows.Forms.Design.ControlDesigner.AccessibilityObject">
      <summary vsli:raw="Gets the &lt;see cref=&quot;T:System.Windows.Forms.AccessibleObject&quot; /&gt; assigned to the control.">取得指定給控制項的 <see cref="T:System.Windows.Forms.AccessibleObject" />。</summary>
      <returns vsli:raw="The &lt;see cref=&quot;T:System.Windows.Forms.AccessibleObject&quot; /&gt; assigned to the control.">指定給控制項的 <see cref="T:System.Windows.Forms.AccessibleObject" />。</returns>
    </member>
    <member name="P:System.Windows.Forms.Design.ControlDesigner.AssociatedComponents">
      <summary vsli:raw="Gets the collection of components associated with the component managed by the designer.">取得元件集合，該集合與設計工具管理的元件相關聯。</summary>
      <returns vsli:raw="The components that are associated with the component managed by the designer.">元件，與設計工具管理的元件相關聯。</returns>
    </member>
    <member name="P:System.Windows.Forms.Design.ControlDesigner.AutoResizeHandles">
      <summary vsli:raw="Gets or sets a value indicating whether resize handle allocation depends on the value of the &lt;see cref=&quot;P:System.Windows.Forms.Control.AutoSize&quot; /&gt; property.">取得或設定值，指出縮放控點的配置是否取決於 <see cref="P:System.Windows.Forms.Control.AutoSize" /> 屬性的值。</summary>
      <returns vsli:raw="&lt;see langword=&quot;true&quot; /&gt; if resize handle allocation depends on the value of the &lt;see cref=&quot;P:System.Windows.Forms.Control.AutoSize&quot; /&gt; and &lt;see langword=&quot;AutoSizeMode&quot; /&gt; properties; otherwise, &lt;see langword=&quot;false&quot; /&gt;. The default is &lt;see langword=&quot;false&quot; /&gt;.">如果縮放控點的配置取決於 <see cref="P:System.Windows.Forms.Control.AutoSize" /> 和 <see langword="true" /> 屬性的值，則為 <see langword="AutoSizeMode" />，否則為 <see langword="false" />。 預設為 <see langword="false" />。</returns>
    </member>
    <member name="P:System.Windows.Forms.Design.ControlDesigner.BehaviorService">
      <summary vsli:raw="Gets the &lt;see cref=&quot;T:System.Windows.Forms.Design.Behavior.BehaviorService&quot; /&gt; from the design environment.">從設計環境取得 <see cref="T:System.Windows.Forms.Design.Behavior.BehaviorService" />。</summary>
      <returns vsli:raw="The &lt;see cref=&quot;T:System.Windows.Forms.Design.Behavior.BehaviorService&quot; /&gt;, or &lt;see langword=&quot;null&quot; /&gt; if the service is unavailable.">
        <see cref="T:System.Windows.Forms.Design.Behavior.BehaviorService" />；如果無法使用服務，則為 <see langword="null" />。</returns>
    </member>
    <member name="P:System.Windows.Forms.Design.ControlDesigner.Control">
      <summary vsli:raw="Gets the control that the designer is designing.">取得設計工具正在設計的控制項。</summary>
      <returns vsli:raw="The control that the designer is designing.">設計工具正在設計的控制項。</returns>
    </member>
    <member name="P:System.Windows.Forms.Design.ControlDesigner.EnableDragRect">
      <summary vsli:raw="Gets a value indicating whether drag rectangles can be drawn on this designer component.">取得值，指出是否能將拖曳矩形拖曳至這個設計工具元件上。</summary>
      <returns vsli:raw="&lt;see langword=&quot;true&quot; /&gt; if drag rectangles can be drawn; otherwise, &lt;see langword=&quot;false&quot; /&gt;.">如果拖曳矩形可以拖曳，則為 <see langword="true" />，否則為 <see langword="false" />。</returns>
    </member>
    <member name="P:System.Windows.Forms.Design.ControlDesigner.InheritanceAttribute">
      <summary vsli:raw="Gets the &lt;see cref=&quot;T:System.ComponentModel.InheritanceAttribute&quot; /&gt; of the designer.">取得設計工具的 <see cref="T:System.ComponentModel.InheritanceAttribute" />。</summary>
      <returns vsli:raw="&lt;see cref=&quot;F:System.ComponentModel.InheritanceAttribute.Inherited&quot; /&gt; if the designer is a root designer; otherwise, the value of the parent designer's &lt;see cref=&quot;P:System.ComponentModel.Design.ComponentDesigner.InheritanceAttribute&quot; /&gt; property.">如果設計工具是根目錄設計工具，則為 <see cref="F:System.ComponentModel.InheritanceAttribute.Inherited" />，否則為父代設計工具之 <see cref="P:System.ComponentModel.Design.ComponentDesigner.InheritanceAttribute" /> 屬性的值。</returns>
    </member>
    <member name="P:System.Windows.Forms.Design.ControlDesigner.ParentComponent">
      <summary vsli:raw="Gets the parent component for the &lt;see cref=&quot;T:System.Windows.Forms.Design.ControlDesigner&quot; /&gt;.">取得 <see cref="T:System.Windows.Forms.Design.ControlDesigner" /> 的父元件。</summary>
      <returns vsli:raw="The parent component for the &lt;see cref=&quot;T:System.Windows.Forms.Design.ControlDesigner&quot; /&gt;; otherwise, &lt;see langword=&quot;null&quot; /&gt; if there is no parent component.">
        <see cref="T:System.Windows.Forms.Design.ControlDesigner" /> 的父元件；如果沒有父元件，則為 <see langword="null" />。</returns>
    </member>
    <member name="P:System.Windows.Forms.Design.ControlDesigner.ParticipatesWithSnapLines">
      <summary vsli:raw="Gets a value indicating whether the &lt;see cref=&quot;T:System.Windows.Forms.Design.ControlDesigner&quot; /&gt; will allow snapline alignment during a drag operation.">取得值，指出 <see cref="T:System.Windows.Forms.Design.ControlDesigner" /> 是否可以在拖曳作業期間採用以對齊線為準的對齊方式。</summary>
      <returns vsli:raw="&lt;see langword=&quot;true&quot; /&gt; if the &lt;see cref=&quot;T:System.Windows.Forms.Design.ControlDesigner&quot; /&gt; will allow snapline alignment during a drag operation when the primary drag control is over this designer; otherwise, &lt;see langword=&quot;false&quot; /&gt;.">如果當主要拖曳控制項位於這個設計工具上方時，<see cref="T:System.Windows.Forms.Design.ControlDesigner" /> 允許在拖曳作業期間採用以對齊線為準的對齊方式，則為 <see langword="true" />，否則為 <see langword="false" />。</returns>
    </member>
    <member name="P:System.Windows.Forms.Design.ControlDesigner.SelectionRules">
      <summary vsli:raw="Gets the selection rules that indicate the movement capabilities of a component.">取得選取規則，指出元件的移動能力。</summary>
      <returns vsli:raw="A bitwise combination of &lt;see cref=&quot;T:System.Windows.Forms.Design.SelectionRules&quot; /&gt; values.">
        <see cref="T:System.Windows.Forms.Design.SelectionRules" /> 值的位元組合。</returns>
    </member>
    <member name="P:System.Windows.Forms.Design.ControlDesigner.SnapLines">
      <summary vsli:raw="Gets a list of &lt;see cref=&quot;T:System.Windows.Forms.Design.Behavior.SnapLine&quot; /&gt; objects representing significant alignment points for this control.">取得 <see cref="T:System.Windows.Forms.Design.Behavior.SnapLine" /> 物件的清單，表示此控制項的重要對齊點。</summary>
      <returns vsli:raw="A list of &lt;see cref=&quot;T:System.Windows.Forms.Design.Behavior.SnapLine&quot; /&gt; objects representing significant alignment points for this control.">
        <see cref="T:System.Windows.Forms.Design.Behavior.SnapLine" /> 物件的清單，表示此控制項的重要對齊點。</returns>
    </member>
    <member name="T:System.Windows.Forms.Design.ControlDesigner.ControlDesignerAccessibleObject">
      <summary vsli:raw="Provides an &lt;see cref=&quot;T:System.Windows.Forms.AccessibleObject&quot; /&gt; for &lt;see cref=&quot;T:System.Windows.Forms.Design.ControlDesigner&quot; /&gt;.">為 <see cref="T:System.Windows.Forms.Design.ControlDesigner" /> 提供 <see cref="T:System.Windows.Forms.AccessibleObject" />。</summary>
    </member>
    <member name="M:System.Windows.Forms.Design.ControlDesigner.ControlDesignerAccessibleObject.#ctor(System.Windows.Forms.Design.ControlDesigner,System.Windows.Forms.Control)">
      <summary vsli:raw="Initializes a new instance of the &lt;see cref=&quot;T:System.Windows.Forms.Design.ControlDesigner.ControlDesignerAccessibleObject&quot; /&gt; class using the specified designer and control.">使用指定的設計工具和控制項，初始化 <see cref="T:System.Windows.Forms.Design.ControlDesigner.ControlDesignerAccessibleObject" /> 類別的新執行個體。</summary>
      <param name="designer" vsli:raw="The &lt;see cref=&quot;T:System.Windows.Forms.Design.ControlDesigner&quot; /&gt; for the accessible object.">可存取物件的 <see cref="T:System.Windows.Forms.Design.ControlDesigner" />。</param>
      <param name="control" vsli:raw="The &lt;see cref=&quot;T:System.Windows.Forms.Control&quot; /&gt; for the accessible object.">可存取物件的 <see cref="T:System.Windows.Forms.Control" />。</param>
    </member>
    <member name="M:System.Windows.Forms.Design.ControlDesigner.ControlDesignerAccessibleObject.GetChild(System.Int32)">
      <summary vsli:raw="Retrieves the accessible child corresponding to the specified index.">擷取與指定索引相對應的可存取子系。</summary>
      <param name="index" vsli:raw="The zero-based index of the accessible child.">可存取子系的以零起始的索引。</param>
      <returns vsli:raw="An &lt;see cref=&quot;T:System.Windows.Forms.AccessibleObject&quot; /&gt; that represents the accessible child corresponding to the specified index.">
        <see cref="T:System.Windows.Forms.AccessibleObject" />，代表與指定索引相對應的可存取子系。</returns>
    </member>
    <member name="M:System.Windows.Forms.Design.ControlDesigner.ControlDesignerAccessibleObject.GetChildCount">
      <summary vsli:raw="Retrieves the number of children belonging to an accessible object.">擷取屬於可存取物件的子系數目。</summary>
      <returns vsli:raw="The number of children belonging to an accessible object.">屬於可存取物件的子系數目。</returns>
    </member>
    <member name="M:System.Windows.Forms.Design.ControlDesigner.ControlDesignerAccessibleObject.GetFocused">
      <summary vsli:raw="Retrieves the object that has the keyboard focus.">擷取具有鍵盤焦點的物件。</summary>
      <returns vsli:raw="An &lt;see cref=&quot;T:System.Windows.Forms.AccessibleObject&quot; /&gt; that specifies the currently focused child. This method returns the calling object if the object itself is focused. Returns &lt;see langword=&quot;null&quot; /&gt; if no object has focus.">
        <see cref="T:System.Windows.Forms.AccessibleObject" />，指定目前焦點集中的子系。 如果物件本身是集中的焦點，這個方法會傳回呼叫物件。 如果沒有物件有焦點，則傳回 <see langword="null" />。</returns>
    </member>
    <member name="M:System.Windows.Forms.Design.ControlDesigner.ControlDesignerAccessibleObject.GetSelected">
      <summary vsli:raw="Retrieves the currently selected child.">擷取目前選取的子系。</summary>
      <returns vsli:raw="An &lt;see cref=&quot;T:System.Windows.Forms.AccessibleObject&quot; /&gt; that represents the currently selected child. This method returns the calling object if the object itself is selected. Returns &lt;see langword=&quot;null&quot; /&gt; if is no child is currently selected and the object itself does not have focus.">
        <see cref="T:System.Windows.Forms.AccessibleObject" />，表示目前選取的子系。 如果物件本身被選取，這個方法會傳回呼叫物件。 如果目前沒有選取子系，且物件本身沒有焦點，則傳回 <see langword="null" />。</returns>
    </member>
    <member name="M:System.Windows.Forms.Design.ControlDesigner.ControlDesignerAccessibleObject.HitTest(System.Int32,System.Int32)">
      <summary vsli:raw="Retrieves the child object at the specified screen coordinates.">擷取位於指定螢幕座標的子物件。</summary>
      <param name="x" vsli:raw="The horizontal screen coordinate.">水平的螢幕座標。</param>
      <param name="y" vsli:raw="The vertical screen coordinate.">垂直的螢幕座標。</param>
      <returns vsli:raw="An &lt;see cref=&quot;T:System.Windows.Forms.AccessibleObject&quot; /&gt; that represents the child object at the given screen coordinates. This method returns the calling object if the object itself is at the location specified. Returns &lt;see langword=&quot;null&quot; /&gt; if no object is at the tested location.">
        <see cref="T:System.Windows.Forms.AccessibleObject" />，代表位於指定螢幕座標的子物件。 如果物件本身位在指定位置，這個方法會傳回呼叫物件。 如果測試的位置沒有物件，則傳回 <see langword="null" />。</returns>
    </member>
    <member name="P:System.Windows.Forms.Design.ControlDesigner.ControlDesignerAccessibleObject.Bounds">
      <summary vsli:raw="Gets the points that define the boundaries of the accessible object for the designer.">取得點，這些點定義設計工具可存取物件的界限。</summary>
      <returns vsli:raw="A &lt;see cref=&quot;T:System.Drawing.Rectangle&quot; /&gt; that indicates the boundaries of the accessible object for the designer.">
        <see cref="T:System.Drawing.Rectangle" />，表示設計工具可存取物件的界限。</returns>
    </member>
    <member name="P:System.Windows.Forms.Design.ControlDesigner.ControlDesignerAccessibleObject.DefaultAction">
      <summary vsli:raw="Gets a string that describes the default action of the specified object.">取得字串，描述指定物件的預設動作。</summary>
      <returns vsli:raw="A description of the default action for a specified object.">指定物件的預設動作之描述。</returns>
    </member>
    <member name="P:System.Windows.Forms.Design.ControlDesigner.ControlDesignerAccessibleObject.Description">
      <summary vsli:raw="Gets a string that describes the visual appearance of the specified object.">取得描述指定物件之視覺外觀的字串。</summary>
      <returns vsli:raw="A description of the object's visual appearance to the user, or &lt;see langword=&quot;null&quot; /&gt; if the object does not have a description.">物件對使用者之視覺外觀的描述，如果物件並沒有描述，則為 <see langword="null" />。</returns>
    </member>
    <member name="P:System.Windows.Forms.Design.ControlDesigner.ControlDesignerAccessibleObject.Name">
      <summary vsli:raw="Gets or sets the object name.">取得或設定物件名稱。</summary>
      <returns vsli:raw="The object name, or &lt;see langword=&quot;null&quot; /&gt; if the property has not been set.">物件名稱；如果屬性尚未設定，則為 <see langword="null" />。</returns>
    </member>
    <member name="P:System.Windows.Forms.Design.ControlDesigner.ControlDesignerAccessibleObject.Parent">
      <summary vsli:raw="Gets the parent of an accessible object.">取得可存取之物件的父系。</summary>
      <returns vsli:raw="An &lt;see cref=&quot;T:System.Windows.Forms.AccessibleObject&quot; /&gt; that represents the parent of an accessible object, or &lt;see langword=&quot;null&quot; /&gt; if there is no parent object.">表示可存取物件之父系的 <see cref="T:System.Windows.Forms.AccessibleObject" />；如果沒有父物件，則為 <see langword="null" />。</returns>
    </member>
    <member name="P:System.Windows.Forms.Design.ControlDesigner.ControlDesignerAccessibleObject.Role">
      <summary vsli:raw="Gets the role of this accessible object.">取得這個可存取之物件的角色。</summary>
      <returns vsli:raw="One of the &lt;see cref=&quot;T:System.Windows.Forms.AccessibleRole&quot; /&gt; values, or &lt;see cref=&quot;F:System.Windows.Forms.AccessibleRole.None&quot; /&gt; if no role has been specified.">其中一個 <see cref="T:System.Windows.Forms.AccessibleRole" /> 值；如果尚未指定角色，則為 <see cref="F:System.Windows.Forms.AccessibleRole.None" />。</returns>
    </member>
    <member name="P:System.Windows.Forms.Design.ControlDesigner.ControlDesignerAccessibleObject.State">
      <summary vsli:raw="Gets the state of this accessible object.">取得這個可存取物件的狀態。</summary>
      <returns vsli:raw="One of the &lt;see cref=&quot;T:System.Windows.Forms.AccessibleStates&quot; /&gt; values, or &lt;see cref=&quot;F:System.Windows.Forms.AccessibleStates.None&quot; /&gt;, if no state has been set.">其中一個 <see cref="T:System.Windows.Forms.AccessibleStates" /> 值；如果狀態尚未設定，則為 <see cref="F:System.Windows.Forms.AccessibleStates.None" />。</returns>
    </member>
    <member name="P:System.Windows.Forms.Design.ControlDesigner.ControlDesignerAccessibleObject.Value">
      <summary vsli:raw="Gets or sets the value of an accessible object.">取得或設定可存取物件的數值。</summary>
      <returns vsli:raw="The value of an accessible object, or &lt;see langword=&quot;null&quot; /&gt; if the object has no value set.">可存取物件的值，或者，如果未設定物件值，則為 <see langword="null" />。</returns>
    </member>
    <member name="T:System.Windows.Forms.Design.DesignerOptions">
      <summary vsli:raw="Provides access to get and set option values for a designer.">提供存取取得和設定設計工具的選項值。</summary>
    </member>
    <member name="M:System.Windows.Forms.Design.DesignerOptions.#ctor">
      <summary vsli:raw="Initializes a new instance of the &lt;see cref=&quot;T:System.Windows.Forms.Design.DesignerOptions&quot; /&gt; class.">初始化 <see cref="T:System.Windows.Forms.Design.DesignerOptions" /> 類別的新執行個體。</summary>
    </member>
    <member name="P:System.Windows.Forms.Design.DesignerOptions.EnableInSituEditing">
      <summary vsli:raw="Gets or sets a value that enables or disables in-place editing for &lt;see cref=&quot;T:System.Windows.Forms.ToolStrip&quot; /&gt; controls.">取得或設定值，啟用或停用 <see cref="T:System.Windows.Forms.ToolStrip" /> 控制項的就地編輯 (In-Place Editing) 功能。</summary>
      <returns vsli:raw="&lt;see langword=&quot;true&quot; /&gt; if in-place editing for &lt;see cref=&quot;T:System.Windows.Forms.ToolStrip&quot; /&gt; controls is enabled; otherwise, &lt;see langword=&quot;false&quot; /&gt;. The default is &lt;see langword=&quot;true&quot; /&gt;.">如果啟用 <see cref="T:System.Windows.Forms.ToolStrip" /> 控制項的就地編輯功能，則為 <see langword="true" />，否則為 <see langword="false" />。 預設為 <see langword="true" />。</returns>
    </member>
    <member name="P:System.Windows.Forms.Design.DesignerOptions.GridSize">
      <summary vsli:raw="Gets or sets a &lt;see cref=&quot;T:System.Drawing.Size&quot; /&gt; representing the dimensions of a grid unit.">取得或設定 <see cref="T:System.Drawing.Size" />，表示方格單位的維度。</summary>
      <returns vsli:raw="A &lt;see cref=&quot;T:System.Drawing.Size&quot; /&gt; representing the dimensions of a grid unit.">
        <see cref="T:System.Drawing.Size" />，表示方格單位的維度。</returns>
    </member>
    <member name="P:System.Windows.Forms.Design.DesignerOptions.ObjectBoundSmartTagAutoShow">
      <summary vsli:raw="Gets or sets a value that specifies whether a designer shows a component's smart tag panel automatically on creation.">取得或設定值，指定設計工具是否在建立時自動顯示元件的智慧標籤面板。</summary>
      <returns vsli:raw="&lt;see langword=&quot;true&quot; /&gt; to allow a component's smart tag panel to open automatically upon creation; otherwise, &lt;see langword=&quot;false&quot; /&gt;. The default is &lt;see langword=&quot;true&quot; /&gt;.">
        <see langword="true" /> 表示允許元件的智慧標籤面板在建立後自動開啟，否則為 <see langword="false" />。 預設為 <see langword="true" />。</returns>
    </member>
    <member name="P:System.Windows.Forms.Design.DesignerOptions.ShowGrid">
      <summary vsli:raw="Gets or sets a value that enables or disables the grid in the designer.">取得或設定值，啟用或停用設計工具中的方格。</summary>
      <returns vsli:raw="&lt;see langword=&quot;true&quot; /&gt; if the grid is enabled; otherwise, &lt;see langword=&quot;false&quot; /&gt;. The default is &lt;see langword=&quot;true&quot; /&gt;.">如果啟用方格，則為 <see langword="true" />，否則為 <see langword="false" />。 預設為 <see langword="true" />。</returns>
    </member>
    <member name="P:System.Windows.Forms.Design.DesignerOptions.SnapToGrid">
      <summary vsli:raw="Gets or sets a value that enables or disables whether controls are automatically placed at grid coordinates.">取得或設定值，指出控制項是否會自動放置在方格座標中。</summary>
      <returns vsli:raw="&lt;see langword=&quot;true&quot; /&gt; if snapping is enabled; otherwise, &lt;see langword=&quot;false&quot; /&gt;.">如果啟用貼齊功能，則為 <see langword="true" />，否則為 <see langword="false" />。</returns>
    </member>
    <member name="P:System.Windows.Forms.Design.DesignerOptions.UseOptimizedCodeGeneration">
      <summary vsli:raw="Gets or sets a value that enables or disables the component cache.">取得或設定值，啟用或停用元件快取。</summary>
      <returns vsli:raw="&lt;see langword=&quot;true&quot; /&gt; if the component cache is enabled; otherwise, &lt;see langword=&quot;false&quot; /&gt;. The default is &lt;see langword=&quot;true&quot; /&gt;.">如果啟用元件快取，則為 <see langword="true" />，否則為 <see langword="false" />。 預設為 <see langword="true" />。</returns>
    </member>
    <member name="P:System.Windows.Forms.Design.DesignerOptions.UseSmartTags">
      <summary vsli:raw="Gets or sets a value that enables or disables smart tags in the designer.">取得或設定值，啟用或停用設計工具中的智慧標籤。</summary>
      <returns vsli:raw="&lt;see langword=&quot;true&quot; /&gt; if smart tags in the designer are enabled; otherwise, &lt;see langword=&quot;false&quot; /&gt;.">如果啟用設計工具中的智慧標籤，則為 <see langword="true" />，否則為 <see langword="false" />。</returns>
    </member>
    <member name="P:System.Windows.Forms.Design.DesignerOptions.UseSnapLines">
      <summary vsli:raw="Gets or sets a value that enables or disables snaplines in the designer.">取得或設定值，這個值會啟用或停用設計工具中的對齊線。</summary>
      <returns vsli:raw="&lt;see langword=&quot;true&quot; /&gt; if snaplines in the designer are enabled; otherwise, &lt;see langword=&quot;false&quot; /&gt;.">如果啟用設計工具中的對齊線，則為 <see langword="true" />；否則為 <see langword="false" />。</returns>
    </member>
    <member name="T:System.Windows.Forms.Design.DockEditor">
      <summary vsli:raw="Provides a user interface for specifying a &lt;see cref=&quot;P:System.Windows.Forms.Control.Dock&quot; /&gt; property.">提供指定 <see cref="P:System.Windows.Forms.Control.Dock" /> 屬性的使用者介面。</summary>
    </member>
    <member name="M:System.Windows.Forms.Design.DockEditor.#ctor">
      <summary vsli:raw="Initializes a new instance of the &lt;see cref=&quot;T:System.Windows.Forms.Design.DockEditor&quot; /&gt; class.">初始化 <see cref="T:System.Windows.Forms.Design.DockEditor" /> 類別的新執行個體。</summary>
    </member>
    <member name="M:System.Windows.Forms.Design.DockEditor.EditValue(System.ComponentModel.ITypeDescriptorContext,System.IServiceProvider,System.Object)">
      <summary vsli:raw="Edits the specified object value using the editor style provided by GetEditorStyle. A service provider is provided so that any required editing services can be obtained.">使用 GetEditorStyle 提供的編輯器樣式編輯指定的物件值。 會提供服務提供者，以取得任何所需的編輯服務。</summary>
      <param name="context" vsli:raw="An &lt;see cref=&quot;T:System.ComponentModel.ITypeDescriptorContext&quot; /&gt; that can be used to gain additional context information.">
        <see cref="T:System.ComponentModel.ITypeDescriptorContext" />，可用來取得額外的內容資訊。</param>
      <param name="provider" vsli:raw="A service provider object through which editing services may be obtained.">服務提供者物件，可透過它編輯所取得的服務。</param>
      <param name="value" vsli:raw="An instance of the value being edited.">已編輯值的執行個體。</param>
      <returns vsli:raw="The new value of the object. If the value of the object hasn't changed, this should return the same object it was passed.">物件的新值。 如果物件的值未經變更，這應該會傳回與它之前所傳遞者相同的物件。</returns>
    </member>
    <member name="M:System.Windows.Forms.Design.DockEditor.GetEditStyle(System.ComponentModel.ITypeDescriptorContext)">
      <summary vsli:raw="Retrieves the editing style of the EditValue method. If the method is not supported, this will return None.">擷取 EditValue 方法的編輯樣式。 如果不支援該方法，則會傳回 None。</summary>
      <param name="context" vsli:raw="An &lt;xref data-throw-if-not-resolved=&quot;true&quot; uid=&quot;System.ComponentModel.ITypeDescriptorContext&quot;&gt;&lt;/xref&gt; that can be used to gain additional context information.">
        <see cref="T:System.ComponentModel.ITypeDescriptorContext" />，可用來取得額外的內容資訊。</param>
      <returns vsli:raw="An enum value indicating the provided editing style.">列舉值，表示所提供的編輯樣式。</returns>
    </member>
    <member name="T:System.Windows.Forms.Design.DocumentDesigner">
      <summary vsli:raw="Base designer class for extending the design mode behavior of, and providing a root-level design mode view for, a &lt;see cref=&quot;T:System.Windows.Forms.Control&quot; /&gt; that supports nested controls and should receive scroll messages.">針對支援巢狀控制項並應該接收捲動訊息的 <see cref="T:System.Windows.Forms.Control" />，可用於擴充其設計模式行為，並提供其根層級設計模式檢視的基底設計工具類別。</summary>
    </member>
    <member name="M:System.Windows.Forms.Design.DocumentDesigner.#ctor">
      <summary vsli:raw="Initializes a new instance of the &lt;see cref=&quot;T:System.Windows.Forms.Design.DocumentDesigner&quot; /&gt; class.">初始化 <see cref="T:System.Windows.Forms.Design.DocumentDesigner" /> 類別的新執行個體。</summary>
    </member>
    <member name="M:System.Windows.Forms.Design.DocumentDesigner.Dispose(System.Boolean)">
      <summary vsli:raw="Releases the unmanaged resources used by the &lt;see cref=&quot;T:System.Windows.Forms.Design.DocumentDesigner&quot; /&gt; and optionally releases the managed resources.">釋放 <see cref="T:System.Windows.Forms.Design.DocumentDesigner" /> 所使用的 Unmanaged 資源，並選擇性地釋放 Managed 資源。</summary>
      <param name="disposing" vsli:raw="&lt;see langword=&quot;true&quot; /&gt; to release both managed and unmanaged resources; &lt;see langword=&quot;false&quot; /&gt; to release only unmanaged resources.">
        <see langword="true" /> 表示釋放 Managed 和 Unmanaged 資源，<see langword="false" /> 則表示只釋放 Unmanaged 資源。</param>
    </member>
    <member name="M:System.Windows.Forms.Design.DocumentDesigner.EnsureMenuEditorService(System.ComponentModel.IComponent)">
      <summary>檢查功能表編輯器服務是否存在，如果不存在，會建立一個服務。</summary>
      <param name="c">
        <see cref="T:System.ComponentModel.IComponent" />，確保有內容功能表服務。</param>
    </member>
    <member name="M:System.Windows.Forms.Design.DocumentDesigner.GetGlyphs(System.Windows.Forms.Design.Behavior.GlyphSelectionType)">
      <summary vsli:raw="Gets a &lt;see cref=&quot;T:System.Windows.Forms.Design.Behavior.GlyphCollection&quot; /&gt; representing the &lt;see cref=&quot;T:System.Windows.Forms.Design.Behavior.Glyph&quot; /&gt; objects.">取得 <see cref="T:System.Windows.Forms.Design.Behavior.GlyphCollection" />，表示 <see cref="T:System.Windows.Forms.Design.Behavior.Glyph" /> 物件。</summary>
      <param name="selectionType" vsli:raw="A &lt;see cref=&quot;T:System.Windows.Forms.Design.Behavior.GlyphSelectionType&quot; /&gt; value that specifies the selection state.">
        <see cref="T:System.Windows.Forms.Design.Behavior.GlyphSelectionType" /> 值，指定選取狀態。</param>
      <returns vsli:raw="A collection of &lt;see cref=&quot;T:System.Windows.Forms.Design.Behavior.Glyph&quot; /&gt; objects.">
        <see cref="T:System.Windows.Forms.Design.Behavior.Glyph" /> 物件的集合。</returns>
    </member>
    <member name="M:System.Windows.Forms.Design.DocumentDesigner.GetToolSupported(System.Drawing.Design.ToolboxItem)">
      <summary vsli:raw="Indicates whether the specified tool is supported by the designer.">指示設計工具是否支援指定的工具。</summary>
      <param name="tool" vsli:raw="The &lt;see cref=&quot;T:System.Drawing.Design.ToolboxItem&quot; /&gt; to test for toolbox support.">測試工具箱支援的 <see cref="T:System.Drawing.Design.ToolboxItem" />。</param>
      <returns vsli:raw="&lt;see langword=&quot;true&quot; /&gt; if the tool should be enabled on the toolbox; &lt;see langword=&quot;false&quot; /&gt; if the document designer doesn't know how to use the tool.">如果應在工具箱上啟用工具，則為 <see langword="true" />；如果文件設計工具不知道如何使用工具，則為 <see langword="false" />。</returns>
    </member>
    <member name="M:System.Windows.Forms.Design.DocumentDesigner.Initialize(System.ComponentModel.IComponent)">
      <summary vsli:raw="Initializes the designer with the specified component.">使用指定的元件，初始化設計工具。</summary>
      <param name="component" vsli:raw="The &lt;see cref=&quot;T:System.ComponentModel.IComponent&quot; /&gt; to associate with the designer.">與設計工具關聯的 <see cref="T:System.ComponentModel.IComponent" />。</param>
    </member>
    <member name="M:System.Windows.Forms.Design.DocumentDesigner.OnContextMenu(System.Int32,System.Int32)">
      <summary vsli:raw="Called when the context menu should be displayed.">在應顯示內容功能表時呼叫。</summary>
      <param name="x" vsli:raw="The horizontal screen coordinate to display the context menu at.">要顯示內容功能表位置的水平螢幕座標。</param>
      <param name="y" vsli:raw="The vertical screen coordinate to display the context menu at.">要顯示內容功能表位置的垂直螢幕座標。</param>
    </member>
    <member name="M:System.Windows.Forms.Design.DocumentDesigner.OnCreateHandle">
      <summary vsli:raw="Called immediately after the handle for the designer has been created.">在建立設計工具的控制代碼後立即呼叫。</summary>
    </member>
    <member name="M:System.Windows.Forms.Design.DocumentDesigner.PreFilterProperties(System.Collections.IDictionary)">
      <summary vsli:raw="Adjusts the set of properties the component exposes through a &lt;see cref=&quot;T:System.ComponentModel.TypeDescriptor&quot; /&gt;.">調整元件透過 <see cref="T:System.ComponentModel.TypeDescriptor" /> 公開的屬性集。</summary>
      <param name="properties" vsli:raw="An &lt;see cref=&quot;T:System.Collections.IDictionary&quot; /&gt; that contains the properties for the class of the component.">包含元件類別屬性的 <see cref="T:System.Collections.IDictionary" />。</param>
    </member>
    <member name="M:System.Windows.Forms.Design.DocumentDesigner.System#ComponentModel#Design#IRootDesigner#GetView(System.ComponentModel.Design.ViewTechnology)">
      <summary vsli:raw="For a description of this member, see &lt;see cref=&quot;T:System.ComponentModel.Design.ViewTechnology&quot; /&gt;.">如需這個成員的說明，請參閱 <see cref="T:System.ComponentModel.Design.ViewTechnology" />。</summary>
      <param name="technology" vsli:raw="A &lt;see cref=&quot;T:System.ComponentModel.Design.ViewTechnology&quot; /&gt; that indicates a particular view technology.">
        <see cref="T:System.ComponentModel.Design.ViewTechnology" />，表示特定的檢視技術。</param>
      <returns vsli:raw="An object that represents the view for this designer.">物件，表示這個設計工具的檢視。</returns>
    </member>
    <member name="M:System.Windows.Forms.Design.DocumentDesigner.System#Drawing#Design#IToolboxUser#GetToolSupported(System.Drawing.Design.ToolboxItem)">
      <summary vsli:raw="For a description of this member, see &lt;see cref=&quot;M:System.Drawing.Design.IToolboxUser.GetToolSupported(System.Drawing.Design.ToolboxItem)&quot; /&gt;.">如需這個成員的說明，請參閱 <see cref="M:System.Drawing.Design.IToolboxUser.GetToolSupported(System.Drawing.Design.ToolboxItem)" />。</summary>
      <param name="tool" vsli:raw="The &lt;see cref=&quot;T:System.Drawing.Design.ToolboxItem&quot; /&gt; to be tested for toolbox support.">要測試工具箱支援的 <see cref="T:System.Drawing.Design.ToolboxItem" />。</param>
      <returns vsli:raw="&lt;see langword=&quot;true&quot; /&gt; if the tool is supported by the toolbox and can be enabled; &lt;see langword=&quot;false&quot; /&gt; if the document designer does not know how to use the tool.">如果工具箱支援工具並且可以啟用，則為 <see langword="true" />；如果文件設計工具不知道使用工具的方式，則為 <see langword="false" />。</returns>
    </member>
    <member name="M:System.Windows.Forms.Design.DocumentDesigner.System#Drawing#Design#IToolboxUser#ToolPicked(System.Drawing.Design.ToolboxItem)">
      <summary vsli:raw="For a description of this member, see &lt;see cref=&quot;M:System.Drawing.Design.IToolboxUser.ToolPicked(System.Drawing.Design.ToolboxItem)&quot; /&gt;.">如需這個成員的說明，請參閱 <see cref="M:System.Drawing.Design.IToolboxUser.ToolPicked(System.Drawing.Design.ToolboxItem)" />。</summary>
      <param name="tool" vsli:raw="The &lt;see cref=&quot;T:System.Drawing.Design.ToolboxItem&quot; /&gt; to select.">要選取的 <see cref="T:System.Drawing.Design.ToolboxItem" />。</param>
    </member>
    <member name="M:System.Windows.Forms.Design.DocumentDesigner.ToolPicked(System.Drawing.Design.ToolboxItem)">
      <summary vsli:raw="Selects the specified tool.">選取指定的工具。</summary>
      <param name="tool" vsli:raw="The &lt;see cref=&quot;T:System.Drawing.Design.ToolboxItem&quot; /&gt; to create a component for.">要為其建立元件的 <see cref="T:System.Drawing.Design.ToolboxItem" />。</param>
    </member>
    <member name="M:System.Windows.Forms.Design.DocumentDesigner.WndProc(System.Windows.Forms.Message@)">
      <summary>處理 Windows 訊息。</summary>
      <param name="m">要處理的 <see cref="T:System.Windows.Forms.Message" />。</param>
    </member>
    <member name="P:System.Windows.Forms.Design.DocumentDesigner.SelectionRules">
      <summary vsli:raw="Gets the &lt;see cref=&quot;T:System.Windows.Forms.Design.SelectionRules&quot; /&gt; for the designer.">取得設計工具的 <see cref="T:System.Windows.Forms.Design.SelectionRules" />。</summary>
      <returns vsli:raw="A bitwise combination of &lt;see cref=&quot;T:System.Windows.Forms.Design.SelectionRules&quot; /&gt; values.">
        <see cref="T:System.Windows.Forms.Design.SelectionRules" /> 值的位元組合。</returns>
    </member>
    <member name="P:System.Windows.Forms.Design.DocumentDesigner.System#ComponentModel#Design#IRootDesigner#SupportedTechnologies">
      <summary vsli:raw="For a description of this member, see &lt;see cref=&quot;P:System.ComponentModel.Design.IRootDesigner.SupportedTechnologies&quot; /&gt;.">如需這個成員的說明，請參閱 <see cref="P:System.ComponentModel.Design.IRootDesigner.SupportedTechnologies" />。</summary>
      <returns vsli:raw="An array of supported &lt;see cref=&quot;T:System.ComponentModel.Design.ViewTechnology&quot; /&gt; values.">支援的 <see cref="T:System.ComponentModel.Design.ViewTechnology" /> 值的陣列。</returns>
    </member>
    <member name="T:System.Windows.Forms.Design.EventHandlerService">
      <summary vsli:raw="Provides a systematic way to manage event handlers for the current document.">提供系統化方法來管理目前文件的事件處理常式。</summary>
    </member>
    <member name="E:System.Windows.Forms.Design.EventHandlerService.EventHandlerChanged">
      <summary vsli:raw="Fires an OnEventHandlerChanged event.">引發 OnEventHandlerChanged 事件。</summary>
    </member>
    <member name="M:System.Windows.Forms.Design.EventHandlerService.#ctor(System.Windows.Forms.Control)">
      <summary vsli:raw="Initializes a new instance of the &lt;see cref=&quot;T:System.Windows.Forms.Design.EventHandlerService&quot; /&gt; class.">初始化 <see cref="T:System.Windows.Forms.Design.EventHandlerService" /> 類別的新執行個體。</summary>
      <param name="focusWnd" vsli:raw="The &lt;see cref=&quot;T:System.Windows.Forms.Control&quot; /&gt; which is being designed.">正在設計的 <see cref="T:System.Windows.Forms.Control" />。</param>
    </member>
    <member name="M:System.Windows.Forms.Design.EventHandlerService.GetHandler(System.Type)">
      <summary vsli:raw="Gets the currently active event handler of the specified type.">取得指定型別的目前現用事件處理常式。</summary>
      <param name="handlerType" vsli:raw="The type of the handler to get.">要取得的處理常式型別。</param>
      <returns vsli:raw="An instance of the handler, or &lt;see langword=&quot;null&quot; /&gt; if there is no handler of the requested type.">處理常式的執行個體；如果沒有所要求型別的處理常式，則為 <see langword="null" />。</returns>
    </member>
    <member name="M:System.Windows.Forms.Design.EventHandlerService.PopHandler(System.Object)">
      <summary vsli:raw="Pops the given handler off of the stack.">從堆疊移除指定的處理常式。</summary>
      <param name="handler" vsli:raw="The handler to remove from the stack.">要從堆疊移除的處理常式。</param>
    </member>
    <member name="M:System.Windows.Forms.Design.EventHandlerService.PushHandler(System.Object)">
      <summary vsli:raw="Pushes a new event handler on the stack.">將新的事件處理常式推入至堆疊。</summary>
      <param name="handler" vsli:raw="The handler to add to the stack.">要加入至堆疊的處理常式。</param>
    </member>
    <member name="P:System.Windows.Forms.Design.EventHandlerService.FocusWindow">
      <summary vsli:raw="Gets the control to which event handlers are attached.">取得事件處理常式所附加至的控制項。</summary>
      <returns vsli:raw="The &lt;see cref=&quot;T:System.Windows.Forms.Control&quot; /&gt; which was attached through the constructor.">透過建構函式 (Constructor) 而附加的 <see cref="T:System.Windows.Forms.Control" />。</returns>
    </member>
    <member name="T:System.Windows.Forms.Design.FileNameEditor">
      <summary vsli:raw="Provides a user interface for selecting a file name.">提供選取檔名的使用者介面。</summary>
    </member>
    <member name="M:System.Windows.Forms.Design.FileNameEditor.#ctor">
      <summary vsli:raw="Initializes a new instance of the &lt;see cref=&quot;T:System.Windows.Forms.Design.FileNameEditor&quot; /&gt; class.">初始化 <see cref="T:System.Windows.Forms.Design.FileNameEditor" /> 類別的新執行個體。</summary>
    </member>
    <member name="M:System.Windows.Forms.Design.FileNameEditor.EditValue(System.ComponentModel.ITypeDescriptorContext,System.IServiceProvider,System.Object)">
      <summary vsli:raw="Edits the specified object using the editor style provided by the &lt;see cref=&quot;M:System.Windows.Forms.Design.FileNameEditor.GetEditStyle(System.ComponentModel.ITypeDescriptorContext)&quot; /&gt; method.">使用 <see cref="M:System.Windows.Forms.Design.FileNameEditor.GetEditStyle(System.ComponentModel.ITypeDescriptorContext)" /> 方法提供的編輯器樣式，編輯指定的物件。</summary>
      <param name="context" vsli:raw="An &lt;see cref=&quot;T:System.ComponentModel.ITypeDescriptorContext&quot; /&gt; that can be used to gain additional context information.">
        <see cref="T:System.ComponentModel.ITypeDescriptorContext" />，可用來取得額外的內容資訊。</param>
      <param name="provider" vsli:raw="A service provider object through which editing services may be obtained.">服務提供者物件，可透過它編輯所取得的服務。</param>
      <param name="value" vsli:raw="An instance of the value being edited.">已編輯值的執行個體。</param>
      <returns vsli:raw="The new value of the object. If the value of the object hasn't changed, this should return the same object it was passed.">物件的新值。 如果物件的值未經變更，這應該會傳回與它之前所傳遞者相同的物件。</returns>
    </member>
    <member name="M:System.Windows.Forms.Design.FileNameEditor.GetEditStyle(System.ComponentModel.ITypeDescriptorContext)">
      <summary vsli:raw="Gets the editing style used by the &lt;xref data-throw-if-not-resolved=&quot;true&quot; uid=&quot;System.Windows.Forms.Design.FileNameEditor.EditValue(System.ComponentModel.ITypeDescriptorContext,System.IServiceProvider,System.Object)&quot;&gt;&lt;/xref&gt; method.">取得 <see cref="M:System.Windows.Forms.Design.FileNameEditor.EditValue(System.ComponentModel.ITypeDescriptorContext,System.IServiceProvider,System.Object)" /> 方法使用的編輯樣式。</summary>
      <param name="context" vsli:raw="An &lt;xref data-throw-if-not-resolved=&quot;true&quot; uid=&quot;System.ComponentModel.ITypeDescriptorContext&quot;&gt;&lt;/xref&gt; that can be used to gain additional context information.">
        <see cref="T:System.ComponentModel.ITypeDescriptorContext" />，可用來取得額外的內容資訊。</param>
      <returns vsli:raw="One of the &lt;xref data-throw-if-not-resolved=&quot;true&quot; uid=&quot;System.Drawing.Design.UITypeEditorEditStyle&quot;&gt;&lt;/xref&gt; values indicating the provided editing style.">其中一個 <see cref="T:System.Drawing.Design.UITypeEditorEditStyle" /> 值，表示所提供的樣式。</returns>
    </member>
    <member name="M:System.Windows.Forms.Design.FileNameEditor.InitializeDialog(System.Windows.Forms.OpenFileDialog)">
      <summary vsli:raw="Initializes the open file dialog when it is created.">在建立開啟檔案對話方塊時初始化對話方塊。</summary>
      <param name="openFileDialog" vsli:raw="The &lt;see cref=&quot;T:System.Windows.Forms.OpenFileDialog&quot; /&gt; to use to select a file name.">用於選取檔名的 <see cref="T:System.Windows.Forms.OpenFileDialog" />。</param>
    </member>
    <member name="T:System.Windows.Forms.Design.FolderNameEditor">
      <summary vsli:raw="Provides a user interface for choosing a folder from the file system.">提供從檔案系統選擇資料夾的使用者介面。</summary>
    </member>
    <member name="M:System.Windows.Forms.Design.FolderNameEditor.#ctor">
      <summary vsli:raw="Initializes a new instance of the &lt;see cref=&quot;T:System.Windows.Forms.Design.FolderNameEditor&quot; /&gt; class.">初始化 <see cref="T:System.Windows.Forms.Design.FolderNameEditor" /> 類別的新執行個體。</summary>
    </member>
    <member name="M:System.Windows.Forms.Design.FolderNameEditor.EditValue(System.ComponentModel.ITypeDescriptorContext,System.IServiceProvider,System.Object)">
      <summary vsli:raw="Edits the specified object using the editor style provided by &lt;see cref=&quot;M:System.Windows.Forms.Design.FolderNameEditor.GetEditStyle(System.ComponentModel.ITypeDescriptorContext)&quot; /&gt;.">使用 <see cref="M:System.Windows.Forms.Design.FolderNameEditor.GetEditStyle(System.ComponentModel.ITypeDescriptorContext)" /> 所提供的編輯器樣式來編輯指定物件。</summary>
      <param name="context" vsli:raw="An &lt;see cref=&quot;T:System.ComponentModel.ITypeDescriptorContext&quot; /&gt; that can be used to gain additional context information.">
        <see cref="T:System.ComponentModel.ITypeDescriptorContext" />，可用來取得額外的內容資訊。</param>
      <param name="provider" vsli:raw="A service object provider.">服務物件提供者。</param>
      <param name="value" vsli:raw="The value to set.">要設定的值。</param>
      <returns vsli:raw="The new value of the object, or the old value if the object couldn't be updated.">物件的新值；如果無法更新物件，則為舊值。</returns>
    </member>
    <member name="M:System.Windows.Forms.Design.FolderNameEditor.GetEditStyle(System.ComponentModel.ITypeDescriptorContext)">
      <summary vsli:raw="Gets the editing style used by the &lt;xref data-throw-if-not-resolved=&quot;true&quot; uid=&quot;System.Windows.Forms.Design.FolderNameEditor.EditValue(System.ComponentModel.ITypeDescriptorContext,System.IServiceProvider,System.Object)&quot;&gt;&lt;/xref&gt; method.">取得 <see cref="M:System.Windows.Forms.Design.FolderNameEditor.EditValue(System.ComponentModel.ITypeDescriptorContext,System.IServiceProvider,System.Object)" /> 方法使用的編輯樣式。</summary>
      <param name="context" vsli:raw="An &lt;xref data-throw-if-not-resolved=&quot;true&quot; uid=&quot;System.ComponentModel.ITypeDescriptorContext&quot;&gt;&lt;/xref&gt; that can be used to gain additional context information.">
        <see cref="T:System.ComponentModel.ITypeDescriptorContext" />，可用來取得額外的內容資訊。</param>
      <returns vsli:raw="A &lt;xref data-throw-if-not-resolved=&quot;true&quot; uid=&quot;System.Drawing.Design.UITypeEditorEditStyle&quot;&gt;&lt;/xref&gt; enumeration value indicating the provided editing style.">
        <see cref="T:System.Drawing.Design.UITypeEditorEditStyle" /> 列舉型別 (Enumeration) 值，表示提供的編輯樣式。</returns>
    </member>
    <member name="M:System.Windows.Forms.Design.FolderNameEditor.InitializeDialog(System.Windows.Forms.Design.FolderNameEditor.FolderBrowser)">
      <summary vsli:raw="Initializes the folder browser dialog.">初始化資料夾瀏覽器對話方塊。</summary>
      <param name="folderBrowser" vsli:raw="A &lt;see cref=&quot;T:System.Windows.Forms.Design.FolderNameEditor.FolderBrowser&quot; /&gt; to choose a folder.">用來選擇資料夾的 <see cref="T:System.Windows.Forms.Design.FolderNameEditor.FolderBrowser" />。</param>
    </member>
    <member name="T:System.Windows.Forms.Design.FolderNameEditor.FolderBrowser">
      <summary vsli:raw="Represents a dialog box that allows the user to choose a folder. This class cannot be inherited.">表示允許使用者選擇資料夾的對話方塊。 此類別無法獲得繼承。</summary>
    </member>
    <member name="M:System.Windows.Forms.Design.FolderNameEditor.FolderBrowser.#ctor">
      <summary vsli:raw="Initializes a new instance of the &lt;see cref=&quot;T:System.Windows.Forms.Design.FolderNameEditor.FolderBrowser&quot; /&gt; class.">初始化 <see cref="T:System.Windows.Forms.Design.FolderNameEditor.FolderBrowser" /> 類別的新執行個體。</summary>
    </member>
    <member name="M:System.Windows.Forms.Design.FolderNameEditor.FolderBrowser.ShowDialog">
      <summary vsli:raw="Shows the folder browser dialog.">顯示資料夾瀏覽器對話方塊。</summary>
      <returns vsli:raw="The &lt;see cref=&quot;T:System.Windows.Forms.DialogResult&quot; /&gt; from the form.">來自表單的 <see cref="T:System.Windows.Forms.DialogResult" />。</returns>
    </member>
    <member name="M:System.Windows.Forms.Design.FolderNameEditor.FolderBrowser.ShowDialog(System.Windows.Forms.IWin32Window)">
      <summary vsli:raw="Shows the folder browser dialog with the specified owner.">顯示具有指定擁有者的資料夾瀏覽器對話方塊。</summary>
      <param name="owner" vsli:raw="Top-level window that will own the modal dialog (e.g.: System.Windows.Forms.Form).">將擁有強制回應 (Modal) 對話方塊的最上層視窗 (Top-Level Window)，例如：System.Windows.Forms.Form。</param>
      <returns vsli:raw="The &lt;see cref=&quot;T:System.Windows.Forms.DialogResult&quot; /&gt; from the form.">來自表單的 <see cref="T:System.Windows.Forms.DialogResult" />。</returns>
    </member>
    <member name="P:System.Windows.Forms.Design.FolderNameEditor.FolderBrowser.Description">
      <summary vsli:raw="Gets or sets a description to show above the folders.">取得或設定要在資料夾上方顯示的描述。</summary>
      <returns vsli:raw="The description to show above the folders.">要顯示在資料夾上方的描述。</returns>
    </member>
    <member name="P:System.Windows.Forms.Design.FolderNameEditor.FolderBrowser.DirectoryPath">
      <summary vsli:raw="Gets the directory path to the object the user picked.">取得使用者所選擇物件的目錄路徑。</summary>
      <returns vsli:raw="The directory path to the object the user picked.">使用者所選擇物件的目錄路徑。</returns>
    </member>
    <member name="P:System.Windows.Forms.Design.FolderNameEditor.FolderBrowser.StartLocation">
      <summary vsli:raw="Gets or sets the start location of the root node.">取得或設定根節點的開始位置。</summary>
      <returns vsli:raw="A &lt;see cref=&quot;T:System.Windows.Forms.Design.FolderNameEditor.FolderBrowserFolder&quot; /&gt; that indicates the location for the folder browser to initially browse to.">
        <see cref="T:System.Windows.Forms.Design.FolderNameEditor.FolderBrowserFolder" />，表示資料夾瀏覽器一開始瀏覽至的位置。</returns>
    </member>
    <member name="P:System.Windows.Forms.Design.FolderNameEditor.FolderBrowser.Style">
      <summary vsli:raw="The styles the folder browser will use when browsing folders. This should be a combination of flags from the &lt;see cref=&quot;T:System.Windows.Forms.Design.FolderNameEditor.FolderBrowserStyles&quot; /&gt; enumeration.">瀏覽資料夾時，資料夾瀏覽器所使用的樣式。 這會是 <see cref="T:System.Windows.Forms.Design.FolderNameEditor.FolderBrowserStyles" /> 列舉型別中的旗標組合。</summary>
      <returns vsli:raw="A &lt;see cref=&quot;T:System.Windows.Forms.Design.FolderNameEditor.FolderBrowserStyles&quot; /&gt; enumeration member that indicates behavior for the &lt;see cref=&quot;T:System.Windows.Forms.Design.FolderNameEditor.FolderBrowser&quot; /&gt; to use.">
        <see cref="T:System.Windows.Forms.Design.FolderNameEditor.FolderBrowserStyles" /> 列舉型別成員，表示 <see cref="T:System.Windows.Forms.Design.FolderNameEditor.FolderBrowser" /> 要使用的行為。</returns>
    </member>
    <member name="T:System.Windows.Forms.Design.FolderNameEditor.FolderBrowserFolder">
      <summary vsli:raw="Defines identifiers used to indicate the root folder for a folder browser to initially browse to.">定義識別項，用以指示資料夾瀏覽器最初瀏覽的根資料夾。</summary>
    </member>
    <member name="F:System.Windows.Forms.Design.FolderNameEditor.FolderBrowserFolder.Desktop">
      <summary vsli:raw="The user's desktop.">使用者的桌面。</summary>
    </member>
    <member name="F:System.Windows.Forms.Design.FolderNameEditor.FolderBrowserFolder.Favorites">
      <summary vsli:raw="The user's favorites list.">使用者的我的最愛清單。</summary>
    </member>
    <member name="F:System.Windows.Forms.Design.FolderNameEditor.FolderBrowserFolder.MyComputer">
      <summary vsli:raw="The contents of the My Computer icon.">[我的電腦] 圖示的內容。</summary>
    </member>
    <member name="F:System.Windows.Forms.Design.FolderNameEditor.FolderBrowserFolder.MyDocuments">
      <summary vsli:raw="The user's My Documents folder.">使用者的 [我的文件] 資料夾。</summary>
    </member>
    <member name="F:System.Windows.Forms.Design.FolderNameEditor.FolderBrowserFolder.MyPictures">
      <summary vsli:raw="User's location to store pictures.">使用者儲存圖片的位置。</summary>
    </member>
    <member name="F:System.Windows.Forms.Design.FolderNameEditor.FolderBrowserFolder.NetAndDialUpConnections">
      <summary vsli:raw="Network and dial-up connections.">網路和撥接連線。</summary>
    </member>
    <member name="F:System.Windows.Forms.Design.FolderNameEditor.FolderBrowserFolder.NetworkNeighborhood">
      <summary vsli:raw="The network neighborhood.">網路上的芳鄰。</summary>
    </member>
    <member name="F:System.Windows.Forms.Design.FolderNameEditor.FolderBrowserFolder.Printers">
      <summary vsli:raw="A folder containing installed printers.">包含已安裝印表機的資料夾。</summary>
    </member>
    <member name="F:System.Windows.Forms.Design.FolderNameEditor.FolderBrowserFolder.Recent">
      <summary vsli:raw="A folder containing shortcuts to recently opened files.">包含最近開啟檔案的捷徑之資料夾。</summary>
    </member>
    <member name="F:System.Windows.Forms.Design.FolderNameEditor.FolderBrowserFolder.SendTo">
      <summary vsli:raw="A folder containing shortcuts to applications to send documents to.">包含文件傳送到應用程式的捷徑之資料夾。</summary>
    </member>
    <member name="F:System.Windows.Forms.Design.FolderNameEditor.FolderBrowserFolder.StartMenu">
      <summary vsli:raw="The user's start menu.">使用者的開始功能表。</summary>
    </member>
    <member name="F:System.Windows.Forms.Design.FolderNameEditor.FolderBrowserFolder.Templates">
      <summary vsli:raw="The user's file templates.">使用者的檔案樣板。</summary>
    </member>
    <member name="T:System.Windows.Forms.Design.FolderNameEditor.FolderBrowserStyles">
      <summary vsli:raw="Defines identifiers used to specify behavior of a &lt;see cref=&quot;T:System.Windows.Forms.Design.FolderNameEditor.FolderBrowser&quot; /&gt;.">定義用來指定 <see cref="T:System.Windows.Forms.Design.FolderNameEditor.FolderBrowser" /> 的行為之識別項。</summary>
    </member>
    <member name="F:System.Windows.Forms.Design.FolderNameEditor.FolderBrowserStyles.BrowseForComputer">
      <summary vsli:raw="The folder browser can only return computers. If the user selects anything other than a computer, the OK button is grayed.">資料夾瀏覽器只能傳回電腦。 如果使用者選取電腦以外的物件，則 [確定]**** 按鈕會變為灰色。</summary>
    </member>
    <member name="F:System.Windows.Forms.Design.FolderNameEditor.FolderBrowserStyles.BrowseForEverything">
      <summary vsli:raw="The folder browser can return any object that it can return.">資料夾瀏覽器可傳回任何能被傳回的物件。</summary>
    </member>
    <member name="F:System.Windows.Forms.Design.FolderNameEditor.FolderBrowserStyles.BrowseForPrinter">
      <summary vsli:raw="The folder browser can only return printers. If the user selects anything other than a printer, the OK button is grayed.">資料夾瀏覽器只能傳回印表機。 如果使用者選取印表機以外的物件，則 [確定]**** 按鈕會變為灰色。</summary>
    </member>
    <member name="F:System.Windows.Forms.Design.FolderNameEditor.FolderBrowserStyles.RestrictToDomain">
      <summary vsli:raw="The folder browser will not include network folders below the domain level in the dialog box's tree view control, or allow navigation to network locations outside of the domain.">資料夾瀏覽器不會將網域層級以下的網路資料夾包含在對話方塊的樹狀檢視控制項中，也不會允許巡覽至網域以外的網路位置。</summary>
    </member>
    <member name="F:System.Windows.Forms.Design.FolderNameEditor.FolderBrowserStyles.RestrictToFilesystem">
      <summary vsli:raw="The folder browser will only return local file system directories. If the user selects folders that are not part of the local file system, the OK button is grayed.">資料夾瀏覽器只會傳回本機檔案系統目錄。 如果使用者選取非本機檔案系統的資料夾，則 [確定]**** 按鈕會變為灰色。</summary>
    </member>
    <member name="F:System.Windows.Forms.Design.FolderNameEditor.FolderBrowserStyles.RestrictToSubfolders">
      <summary vsli:raw="The folder browser will only return objects of the local file system that are within the root folder or a subfolder of the root folder. If the user selects a subfolder of the root folder that is not part of the local file system, the OK button is grayed.">資料夾瀏覽器只會傳回本機檔案系統上位於根資料夾或其子資料夾中的物件。 如果使用者選取非本機檔案系統之根資料夾的子資料夾，則 [確定]**** 按鈕會變為灰色。</summary>
    </member>
    <member name="F:System.Windows.Forms.Design.FolderNameEditor.FolderBrowserStyles.ShowTextBox">
      <summary vsli:raw="The folder browser includes a &lt;see cref=&quot;T:System.Windows.Forms.TextBox&quot; /&gt; control in the browse dialog box that allows the user to type the name of an item.">資料夾瀏覽器將 <see cref="T:System.Windows.Forms.TextBox" /> 控制項包含在瀏覽對話方塊中，讓使用者輸入項目名稱。</summary>
    </member>
    <member name="T:System.Windows.Forms.Design.IContainsThemedScrollbarWindows">
      <summary vsli:raw="Defines a method for getting information about how the scrollbars of windows need to be themed when displayed in the Visual Studio designer.">定義可在 Visual Studio 設計工具顯示視窗捲軸時，用來取得有關配置捲軸佈景主題之方式的資訊。</summary>
    </member>
    <member name="M:System.Windows.Forms.Design.IContainsThemedScrollbarWindows.ThemedScrollbarWindows">
      <summary vsli:raw="Gets an enumeration of &lt;see cref=&quot;T:System.Windows.Forms.Design.ThemedScrollbarWindow&quot; /&gt; objects that represent windows and how their scrollbars need to be themed when displayed in the Visual Studio designer.">取得 <see cref="T:System.Windows.Forms.Design.ThemedScrollbarWindow" /> 物件的列舉，這些物件表示視窗以及 Visual Studio 設計工具顯示其捲軸時配置其佈景主題的方法。</summary>
      <returns vsli:raw="An enumeration of objects that represent windows and how their scrollbars need to be themed when displayed in the Visual Studio designer.">物件的列舉，這些物件表示視窗以及 Visual Studio 設計工具顯示其捲軸時配置其佈景主題的方法。</returns>
    </member>
    <member name="T:System.Windows.Forms.Design.ImageListCodeDomSerializer">
      <summary vsli:raw="Serializes string dictionaries.">序列化字串字典。</summary>
    </member>
    <member name="M:System.Windows.Forms.Design.ImageListCodeDomSerializer.#ctor">
      <summary vsli:raw="Initializes a new instance of the &lt;see cref=&quot;T:System.Windows.Forms.Design.ImageListCodeDomSerializer&quot; /&gt; class.">初始化 <see cref="T:System.Windows.Forms.Design.ImageListCodeDomSerializer" /> 類別的新執行個體。</summary>
    </member>
    <member name="M:System.Windows.Forms.Design.ImageListCodeDomSerializer.Deserialize(System.ComponentModel.Design.Serialization.IDesignerSerializationManager,System.Object)">
      <summary vsli:raw="Deserializes the specified serialized Code Document Object Model (CodeDOM) object into an object.">將指定的序列化程式碼文件物件模型 (Code Document Object Model，CodeDOM) 物件還原序列化為物件。</summary>
      <param name="manager" vsli:raw="A serialization manager interface that is used during the deserialization process.">在還原序列化過程中所使用的序列化管理員介面。</param>
      <param name="codeObject" vsli:raw="A serialized CodeDOM object to deserialize.">要還原序列化的序列化 CodeDOM 物件。</param>
      <exception cref="T:System.ArgumentNullException" vsli:raw="&lt;paramref name=&quot;manager&quot; /&gt; or &lt;paramref name=&quot;codeObject&quot; /&gt; is &lt;see langword=&quot;null&quot; /&gt;.">
        <paramref name="manager" /> 或 <paramref name="codeObject" /> 為 <see langword="null" />。</exception>
      <returns vsli:raw="The deserialized CodeDOM object.">還原序列化的 CodeDOM 物件。</returns>
    </member>
    <member name="M:System.Windows.Forms.Design.ImageListCodeDomSerializer.Serialize(System.ComponentModel.Design.Serialization.IDesignerSerializationManager,System.Object)">
      <summary vsli:raw="Serializes the specified object into a Code Document Object Model (CodeDOM) object.">將指定的物件序列化為程式碼文件物件模型 (CodeDOM) 物件。</summary>
      <param name="manager" vsli:raw="The serialization manager to use during serialization.">要在序列化期間使用的序列化管理員。</param>
      <param name="value" vsli:raw="The object to serialize.">要序列化的物件。</param>
      <returns vsli:raw="A CodeDOM object representing the object that has been serialized.">CodeDOM 物件，表示已序列化的物件。</returns>
    </member>
    <member name="T:System.Windows.Forms.Design.ImageListImageEditor">
      <summary vsli:raw="Provides an editor that can perform default file searching for bitmap (.bmp) files.">提供可以執行點陣圖 (.bmp) 檔案之預設檔案搜尋的編輯器。</summary>
    </member>
    <member name="M:System.Windows.Forms.Design.ImageListImageEditor.#ctor">
      <summary vsli:raw="Initializes a new instance of the &lt;see cref=&quot;T:System.Windows.Forms.Design.ImageListImageEditor&quot; /&gt; class.">初始化 <see cref="T:System.Windows.Forms.Design.ImageListImageEditor" /> 類別的新執行個體。</summary>
    </member>
    <member name="M:System.Windows.Forms.Design.ImageListImageEditor.EditValue(System.ComponentModel.ITypeDescriptorContext,System.IServiceProvider,System.Object)">
      <summary vsli:raw="Edits the specified object value using the edit style provided by the &lt;see cref=&quot;M:System.Drawing.Design.ImageEditor.GetEditStyle(System.ComponentModel.ITypeDescriptorContext)&quot; /&gt; method.">使用 <see cref="M:System.Drawing.Design.ImageEditor.GetEditStyle(System.ComponentModel.ITypeDescriptorContext)" /> 方法所提供的編輯樣式來編輯指定的物件值。</summary>
      <param name="context" vsli:raw="An &lt;see cref=&quot;T:System.ComponentModel.ITypeDescriptorContext&quot; /&gt; that can be used to gain additional context information.">
        <see cref="T:System.ComponentModel.ITypeDescriptorContext" />，可用來取得額外的內容資訊。</param>
      <param name="provider" vsli:raw="An &lt;see cref=&quot;T:System.IServiceProvider&quot; /&gt; through which editing services can be obtained.">
        <see cref="T:System.IServiceProvider" />，可以透過它取得編輯服務。</param>
      <param name="value" vsli:raw="An &lt;see cref=&quot;T:System.Object&quot; /&gt; being edited.">正在編輯的 <see cref="T:System.Object" />。</param>
      <returns vsli:raw="An &lt;see cref=&quot;T:System.Object&quot; /&gt; representing the new value. If the value of the object has not changed, the &lt;see cref=&quot;M:System.Windows.Forms.Design.ImageListImageEditor.EditValue(System.ComponentModel.ITypeDescriptorContext,System.IServiceProvider,System.Object)&quot; /&gt; method returns the object that was passed to it.">
        <see cref="T:System.Object" />，表示新的值。 如果物件的值未經變更，<see cref="M:System.Windows.Forms.Design.ImageListImageEditor.EditValue(System.ComponentModel.ITypeDescriptorContext,System.IServiceProvider,System.Object)" /> 方法會傳回已傳遞給它的物件。</returns>
    </member>
    <member name="M:System.Windows.Forms.Design.ImageListImageEditor.GetFileDialogDescription">
      <summary vsli:raw="Gets the description for the default file-list filter provided by this editor.">取得這個編輯器所提供的預設檔案清單篩選條件的描述。</summary>
      <returns vsli:raw="The description for the default file-list filter.">預設檔案清單篩選條件的描述。</returns>
    </member>
    <member name="M:System.Windows.Forms.Design.ImageListImageEditor.GetImageExtenders">
      <summary vsli:raw="Gets an array of supported image types.">取得支援的影像類型陣列。</summary>
      <returns vsli:raw="An array of &lt;see cref=&quot;T:System.Type&quot; /&gt; representing supported image types.">
        <see cref="T:System.Type" /> 的陣列，表示支援的影像類型。</returns>
    </member>
    <member name="M:System.Windows.Forms.Design.ImageListImageEditor.GetPaintValueSupported(System.ComponentModel.ITypeDescriptorContext)">
      <summary vsli:raw="Gets a value indicating whether this editor supports painting a representation of an object's value.">取得值，指出這個編輯器是否支援繪製物件值的表示。</summary>
      <param name="context" vsli:raw="An &lt;see cref=&quot;T:System.ComponentModel.ITypeDescriptorContext&quot; /&gt; that can be used to gain additional context information.">
        <see cref="T:System.ComponentModel.ITypeDescriptorContext" />，可用來取得額外的內容資訊。</param>
      <returns vsli:raw="&lt;see langword=&quot;true&quot; /&gt; if &lt;see cref=&quot;M:System.Drawing.Design.ImageEditor.PaintValue(System.Drawing.Design.PaintValueEventArgs)&quot; /&gt; is implemented; otherwise, &lt;see langword=&quot;false&quot; /&gt;.">如果實作 <see cref="M:System.Drawing.Design.ImageEditor.PaintValue(System.Drawing.Design.PaintValueEventArgs)" /> 則為 <see langword="true" />，否則為 <see langword="false" />。</returns>
    </member>
    <member name="M:System.Windows.Forms.Design.ImageListImageEditor.PaintValue(System.Drawing.Design.PaintValueEventArgs)">
      <summary vsli:raw="Paints a value indicated by the specified &lt;see cref=&quot;T:System.Drawing.Design.PaintValueEventArgs&quot; /&gt;.">繪製由指定的 <see cref="T:System.Drawing.Design.PaintValueEventArgs" /> 所指示的值。</summary>
      <param name="e" vsli:raw="A &lt;see cref=&quot;T:System.Drawing.Design.PaintValueEventArgs&quot; /&gt; indicating what to paint and where to paint it.">
        <see cref="T:System.Drawing.Design.PaintValueEventArgs" />，表示要繪製什麼與繪製位置。</param>
    </member>
    <member name="T:System.Windows.Forms.Design.MaskDescriptor">
      <summary vsli:raw="Defines a set of members for derived classes to provide options for the masked text box UI type editor.">定義衍生類別的一組成員，為遮罩文字方塊 UI 型別編輯器提供選項。</summary>
    </member>
    <member name="M:System.Windows.Forms.Design.MaskDescriptor.#ctor">
      <summary vsli:raw="Initializes a new instance of the &lt;see cref=&quot;T:System.Windows.Forms.Design.MaskDescriptor&quot; /&gt; class.">初始化 <see cref="T:System.Windows.Forms.Design.MaskDescriptor" /> 類別的新執行個體。</summary>
    </member>
    <member name="M:System.Windows.Forms.Design.MaskDescriptor.Equals(System.Object)">
      <summary vsli:raw="Determines whether the specified &lt;see cref=&quot;T:System.Windows.Forms.Design.MaskDescriptor&quot; /&gt; is equal to the current &lt;see cref=&quot;T:System.Windows.Forms.Design.MaskDescriptor&quot; /&gt;.">判斷指定的 <see cref="T:System.Windows.Forms.Design.MaskDescriptor" /> 是否等於目前的 <see cref="T:System.Windows.Forms.Design.MaskDescriptor" />。</summary>
      <param name="maskDescriptor" vsli:raw="The &lt;see cref=&quot;T:System.Windows.Forms.Design.MaskDescriptor&quot; /&gt; to compare with the current &lt;see cref=&quot;T:System.Windows.Forms.Design.MaskDescriptor&quot; /&gt;.">與目前的 <see cref="T:System.Windows.Forms.Design.MaskDescriptor" /> 相比較的 <see cref="T:System.Windows.Forms.Design.MaskDescriptor" />。</param>
      <returns vsli:raw="&lt;see langword=&quot;true&quot; /&gt; if the specified &lt;see cref=&quot;T:System.Windows.Forms.Design.MaskDescriptor&quot; /&gt; is equal to the current &lt;see cref=&quot;T:System.Windows.Forms.Design.MaskDescriptor&quot; /&gt;; otherwise, &lt;see langword=&quot;false&quot; /&gt;.">如果指定的 <see cref="T:System.Windows.Forms.Design.MaskDescriptor" /> 和目前的 <see cref="T:System.Windows.Forms.Design.MaskDescriptor" /> 相等，則為 <see langword="true" />；否則為 <see langword="false" />。</returns>
    </member>
    <member name="M:System.Windows.Forms.Design.MaskDescriptor.GetHashCode">
      <summary vsli:raw="Serves as a hash function for a particular type.">以特定類型的雜湊函式進行服務。</summary>
      <returns vsli:raw="A hash code for the current &lt;see cref=&quot;T:System.Object&quot; /&gt;.">目前 <see cref="T:System.Object" /> 的雜湊碼。</returns>
    </member>
    <member name="M:System.Windows.Forms.Design.MaskDescriptor.IsValidMaskDescriptor(System.Windows.Forms.Design.MaskDescriptor)">
      <summary vsli:raw="Returns a value indicating whether the specified mask descriptor is valid and can be added to the masks list.">傳回值，這個值表示指定的遮罩描述項是否有效且可加入遮罩清單。</summary>
      <param name="maskDescriptor" vsli:raw="The mask descriptor to test for validity.">要測試有效性的遮罩描述項。</param>
      <returns vsli:raw="&lt;see langword=&quot;true&quot; /&gt; if &lt;paramref name=&quot;maskDescriptor&quot; /&gt; is valid; otherwise, &lt;see langword=&quot;false&quot; /&gt;.">如果 <paramref name="maskDescriptor" /> 有效則為 <see langword="true" />，否則為 <see langword="false" />。</returns>
    </member>
    <member name="M:System.Windows.Forms.Design.MaskDescriptor.IsValidMaskDescriptor(System.Windows.Forms.Design.MaskDescriptor,System.String@)">
      <summary vsli:raw="Returns a value indicating whether the specified mask descriptor is valid, and provides an error description if it is not valid.">傳回值，表示指定的遮罩描述項是否有效，並在無效時提供錯誤描述。</summary>
      <param name="maskDescriptor" vsli:raw="The mask descriptor to test for validity.">要測試有效性的遮罩描述項。</param>
      <param name="validationErrorDescription" vsli:raw="A string representing a validation error. If no validation error occurred, the &lt;paramref name=&quot;validationErrorDescription&quot; /&gt; is &lt;see cref=&quot;F:System.String.Empty&quot; /&gt;.">表示驗證錯誤的字串。 如果未發生任何驗證錯誤，則 <paramref name="validationErrorDescription" /> 為 <see cref="F:System.String.Empty" />。</param>
      <returns vsli:raw="&lt;see langword=&quot;true&quot; /&gt; if &lt;paramref name=&quot;maskDescriptor&quot; /&gt; is valid; otherwise, &lt;see langword=&quot;false&quot; /&gt;.">如果 <paramref name="maskDescriptor" /> 有效則為 <see langword="true" />，否則為 <see langword="false" />。</returns>
    </member>
    <member name="M:System.Windows.Forms.Design.MaskDescriptor.ToString">
      <summary vsli:raw="Returns a string that represents the current object.">傳回代表目前物件的字串。</summary>
      <returns vsli:raw="A string that represents the current object.">表示目前物件的字串。</returns>
    </member>
    <member name="P:System.Windows.Forms.Design.MaskDescriptor.Culture">
      <summary vsli:raw="Gets the &lt;see cref=&quot;T:System.Globalization.CultureInfo&quot; /&gt; representing the locale the mask is authored for.">取得 <see cref="T:System.Globalization.CultureInfo" />，表示撰寫遮罩的目標地區設定。</summary>
      <returns vsli:raw="A &lt;see cref=&quot;T:System.Globalization.CultureInfo&quot; /&gt; representing the locale the mask is authored for.">
        <see cref="T:System.Globalization.CultureInfo" />，表示撰寫遮罩的目標地區設定。</returns>
    </member>
    <member name="P:System.Windows.Forms.Design.MaskDescriptor.Mask">
      <summary vsli:raw="Gets the mask being defined.">取得所定義的遮罩。</summary>
      <returns vsli:raw="A &lt;see cref=&quot;T:System.String&quot; /&gt; containing the mask being defined.">
        <see cref="T:System.String" />，包含所定義的遮罩。</returns>
    </member>
    <member name="P:System.Windows.Forms.Design.MaskDescriptor.Name">
      <summary vsli:raw="Gets the user-friendly name of the mask.">取得遮罩的易記名稱。</summary>
      <returns vsli:raw="A &lt;see cref=&quot;T:System.String&quot; /&gt; containing the name or brief description of the &lt;see cref=&quot;P:System.Windows.Forms.Design.MaskDescriptor.Mask&quot; /&gt;.">
        <see cref="T:System.String" />，包含 <see cref="P:System.Windows.Forms.Design.MaskDescriptor.Mask" /> 的名稱或簡短描述。</returns>
    </member>
    <member name="P:System.Windows.Forms.Design.MaskDescriptor.Sample">
      <summary vsli:raw="Gets a sample of a formatted string for the mask.">取得遮罩的格式化字串範例。</summary>
      <returns vsli:raw="A &lt;see cref=&quot;T:System.String&quot; /&gt; containing text that is formatted by using the &lt;see cref=&quot;P:System.Windows.Forms.Design.MaskDescriptor.Mask&quot; /&gt;.">
        <see cref="T:System.String" />，包含使用 <see cref="P:System.Windows.Forms.Design.MaskDescriptor.Mask" /> 格式化的文字。</returns>
    </member>
    <member name="P:System.Windows.Forms.Design.MaskDescriptor.ValidatingType">
      <summary vsli:raw="Gets the type providing validation associated with the mask.">取得型別，提供與遮罩相關聯的驗證。</summary>
      <returns vsli:raw="The &lt;see cref=&quot;T:System.Type&quot; /&gt; that the formatted string is validated against.">
        <see cref="T:System.Type" />，做為驗證格式化字串的依據。</returns>
    </member>
    <member name="T:System.Windows.Forms.Design.MenuCommands">
      <summary vsli:raw="Defines a set of &lt;see cref=&quot;T:System.ComponentModel.Design.CommandID&quot; /&gt; fields that each correspond to a command function provided by the host environment.">定義一組 <see cref="T:System.ComponentModel.Design.CommandID" /> 欄位，每一個欄位都對應至主應用程式環境提供的一個命令函式。</summary>
    </member>
    <member name="F:System.Windows.Forms.Design.MenuCommands.ComponentTrayMenu">
      <summary vsli:raw="A &lt;see cref=&quot;T:System.ComponentModel.Design.CommandID&quot; /&gt; that can be used to access the component tray menu.">可用於存取元件匣功能表的 <see cref="T:System.ComponentModel.Design.CommandID" />。</summary>
    </member>
    <member name="F:System.Windows.Forms.Design.MenuCommands.ContainerMenu">
      <summary vsli:raw="A &lt;see cref=&quot;T:System.ComponentModel.Design.CommandID&quot; /&gt; that can be used to access the container menu.">可用於存取容器 (Container) 功能表的 <see cref="T:System.ComponentModel.Design.CommandID" />。</summary>
    </member>
    <member name="F:System.Windows.Forms.Design.MenuCommands.DesignerProperties">
      <summary vsli:raw="A &lt;see cref=&quot;T:System.ComponentModel.Design.CommandID&quot; /&gt; that can be used to access the properties page for the designer.">可用於存取設計工具屬性頁的 <see cref="T:System.ComponentModel.Design.CommandID" />。</summary>
    </member>
    <member name="F:System.Windows.Forms.Design.MenuCommands.EditLabel">
      <summary vsli:raw="A &lt;see cref=&quot;T:System.ComponentModel.Design.CommandID&quot; /&gt; that can be used to access the edit label handler.">可用於存取編輯標籤處理常式的 <see cref="T:System.ComponentModel.Design.CommandID" />。</summary>
    </member>
    <member name="F:System.Windows.Forms.Design.MenuCommands.KeyCancel">
      <summary vsli:raw="A &lt;see cref=&quot;T:System.ComponentModel.Design.CommandID&quot; /&gt; that can be used to access the cancel key handler.">可用於存取取消鍵處理常式的 <see cref="T:System.ComponentModel.Design.CommandID" />。</summary>
    </member>
    <member name="F:System.Windows.Forms.Design.MenuCommands.KeyDefaultAction">
      <summary vsli:raw="A &lt;see cref=&quot;T:System.ComponentModel.Design.CommandID&quot; /&gt; that can be used to access the default key handler.">可用於存取預設鍵處理常式的 <see cref="T:System.ComponentModel.Design.CommandID" />。</summary>
    </member>
    <member name="F:System.Windows.Forms.Design.MenuCommands.KeyEnd">
      <summary vsli:raw="A &lt;see cref=&quot;T:System.ComponentModel.Design.CommandID&quot; /&gt; that can be used to access the end key handler.">可用於存取 End 鍵處理常式的 <see cref="T:System.ComponentModel.Design.CommandID" />。</summary>
    </member>
    <member name="F:System.Windows.Forms.Design.MenuCommands.KeyHome">
      <summary vsli:raw="A &lt;see cref=&quot;T:System.ComponentModel.Design.CommandID&quot; /&gt; that can be used to access the home key handler.">可用於存取 Home 鍵處理常式的 <see cref="T:System.ComponentModel.Design.CommandID" />。</summary>
    </member>
    <member name="F:System.Windows.Forms.Design.MenuCommands.KeyInvokeSmartTag">
      <summary vsli:raw="A &lt;see cref=&quot;T:System.ComponentModel.Design.CommandID&quot; /&gt; that can be used to access the smart tag invocation handler.">可用於存取智慧標籤引動過程處理常式的 <see cref="T:System.ComponentModel.Design.CommandID" />。</summary>
    </member>
    <member name="F:System.Windows.Forms.Design.MenuCommands.KeyMoveDown">
      <summary vsli:raw="A &lt;see cref=&quot;T:System.ComponentModel.Design.CommandID&quot; /&gt; that can be used to access the move down key handler.">可用於存取下移鍵處理常式的 <see cref="T:System.ComponentModel.Design.CommandID" />。</summary>
    </member>
    <member name="F:System.Windows.Forms.Design.MenuCommands.KeyMoveLeft">
      <summary vsli:raw="A &lt;see cref=&quot;T:System.ComponentModel.Design.CommandID&quot; /&gt; that can be used to access the move left key handler.">可用於存取左移鍵處理常式的 <see cref="T:System.ComponentModel.Design.CommandID" />。</summary>
    </member>
    <member name="F:System.Windows.Forms.Design.MenuCommands.KeyMoveRight">
      <summary vsli:raw="A &lt;see cref=&quot;T:System.ComponentModel.Design.CommandID&quot; /&gt; that can be used to access the move right key handler.">可用於存取右移鍵處理常式的 <see cref="T:System.ComponentModel.Design.CommandID" />。</summary>
    </member>
    <member name="F:System.Windows.Forms.Design.MenuCommands.KeyMoveUp">
      <summary vsli:raw="A &lt;see cref=&quot;T:System.ComponentModel.Design.CommandID&quot; /&gt; that can be used to access the move up key handler.">可用於存取上移鍵處理常式的 <see cref="T:System.ComponentModel.Design.CommandID" />。</summary>
    </member>
    <member name="F:System.Windows.Forms.Design.MenuCommands.KeyNudgeDown">
      <summary vsli:raw="A &lt;see cref=&quot;T:System.ComponentModel.Design.CommandID&quot; /&gt; that can be used to access the nudge down key handler.">可用於存取向下微調鍵處理常式的 <see cref="T:System.ComponentModel.Design.CommandID" />。</summary>
    </member>
    <member name="F:System.Windows.Forms.Design.MenuCommands.KeyNudgeHeightDecrease">
      <summary vsli:raw="A &lt;see cref=&quot;T:System.ComponentModel.Design.CommandID&quot; /&gt; that can be used to access the nudge height decrease key handler.">可用於存取微減高度鍵處理常式的 <see cref="T:System.ComponentModel.Design.CommandID" />。</summary>
    </member>
    <member name="F:System.Windows.Forms.Design.MenuCommands.KeyNudgeHeightIncrease">
      <summary vsli:raw="A &lt;see cref=&quot;T:System.ComponentModel.Design.CommandID&quot; /&gt; that can be used to access the nudge height increase key handler.">可用於存取微增高度鍵處理常式的 <see cref="T:System.ComponentModel.Design.CommandID" />。</summary>
    </member>
    <member name="F:System.Windows.Forms.Design.MenuCommands.KeyNudgeLeft">
      <summary vsli:raw="A &lt;see cref=&quot;T:System.ComponentModel.Design.CommandID&quot; /&gt; that can be used to access the nudge left key handler.">可用於存取向左微調鍵處理常式的 <see cref="T:System.ComponentModel.Design.CommandID" />。</summary>
    </member>
    <member name="F:System.Windows.Forms.Design.MenuCommands.KeyNudgeRight">
      <summary vsli:raw="A &lt;see cref=&quot;T:System.ComponentModel.Design.CommandID&quot; /&gt; that can be used to access the nudge right key handler.">可用於存取向右微調鍵處理常式的 <see cref="T:System.ComponentModel.Design.CommandID" />。</summary>
    </member>
    <member name="F:System.Windows.Forms.Design.MenuCommands.KeyNudgeUp">
      <summary vsli:raw="A &lt;see cref=&quot;T:System.ComponentModel.Design.CommandID&quot; /&gt; that can be used to access the nudge up key handler.">可用於存取向上微調鍵處理常式的 <see cref="T:System.ComponentModel.Design.CommandID" />。</summary>
    </member>
    <member name="F:System.Windows.Forms.Design.MenuCommands.KeyNudgeWidthDecrease">
      <summary vsli:raw="A &lt;see cref=&quot;T:System.ComponentModel.Design.CommandID&quot; /&gt; that can be used to access the nudge width decrease key handler.">可用於存取微減寬度鍵處理常式的 <see cref="T:System.ComponentModel.Design.CommandID" />。</summary>
    </member>
    <member name="F:System.Windows.Forms.Design.MenuCommands.KeyNudgeWidthIncrease">
      <summary vsli:raw="A &lt;see cref=&quot;T:System.ComponentModel.Design.CommandID&quot; /&gt; that can be used to access the nudge width increase key handler.">可用於存取微增寬度鍵處理常式的 <see cref="T:System.ComponentModel.Design.CommandID" />。</summary>
    </member>
    <member name="F:System.Windows.Forms.Design.MenuCommands.KeyReverseCancel">
      <summary vsli:raw="A &lt;see cref=&quot;T:System.ComponentModel.Design.CommandID&quot; /&gt; that can be used to access the reverse cancel key handler.">可用於存取反向取消鍵處理常式的 <see cref="T:System.ComponentModel.Design.CommandID" />。</summary>
    </member>
    <member name="F:System.Windows.Forms.Design.MenuCommands.KeySelectNext">
      <summary vsli:raw="A &lt;see cref=&quot;T:System.ComponentModel.Design.CommandID&quot; /&gt; that can be used to access the select next key handler.">可用於存取選取下一個按鍵處理常式的 <see cref="T:System.ComponentModel.Design.CommandID" />。</summary>
    </member>
    <member name="F:System.Windows.Forms.Design.MenuCommands.KeySelectPrevious">
      <summary vsli:raw="A &lt;see cref=&quot;T:System.ComponentModel.Design.CommandID&quot; /&gt; that can be used to access the select previous key handler.">可用於存取選取上一個按鍵處理常式的 <see cref="T:System.ComponentModel.Design.CommandID" />。</summary>
    </member>
    <member name="F:System.Windows.Forms.Design.MenuCommands.KeyShiftEnd">
      <summary vsli:raw="A &lt;see cref=&quot;T:System.ComponentModel.Design.CommandID&quot; /&gt; that can be used to access the SHIFT-END key handler.">可用於存取 SHIFT-END 鍵處理常式的 <see cref="T:System.ComponentModel.Design.CommandID" />。</summary>
    </member>
    <member name="F:System.Windows.Forms.Design.MenuCommands.KeyShiftHome">
      <summary vsli:raw="A &lt;see cref=&quot;T:System.ComponentModel.Design.CommandID&quot; /&gt; that can be used to access the SHIFT-HOME key handler.">可用於存取 SHIFT-HOME 鍵處理常式的 <see cref="T:System.ComponentModel.Design.CommandID" />。</summary>
    </member>
    <member name="F:System.Windows.Forms.Design.MenuCommands.KeySizeHeightDecrease">
      <summary vsli:raw="A &lt;see cref=&quot;T:System.ComponentModel.Design.CommandID&quot; /&gt; that can be used to access the size height decrease key handler.">可用於存取減少大小高度鍵處理常式的 <see cref="T:System.ComponentModel.Design.CommandID" />。</summary>
    </member>
    <member name="F:System.Windows.Forms.Design.MenuCommands.KeySizeHeightIncrease">
      <summary vsli:raw="A &lt;see cref=&quot;T:System.ComponentModel.Design.CommandID&quot; /&gt; that can be used to access the size height increase key handler.">可用於存取增加大小高度鍵處理常式的 <see cref="T:System.ComponentModel.Design.CommandID" />。</summary>
    </member>
    <member name="F:System.Windows.Forms.Design.MenuCommands.KeySizeWidthDecrease">
      <summary vsli:raw="A &lt;see cref=&quot;T:System.ComponentModel.Design.CommandID&quot; /&gt; that can be used to access the size width decrease key handler.">可用於存取減少大小寬度鍵處理常式的 <see cref="T:System.ComponentModel.Design.CommandID" />。</summary>
    </member>
    <member name="F:System.Windows.Forms.Design.MenuCommands.KeySizeWidthIncrease">
      <summary vsli:raw="A &lt;see cref=&quot;T:System.ComponentModel.Design.CommandID&quot; /&gt; that can be used to access the size width increase key handler.">可用於存取增加大小寬度鍵處理常式的 <see cref="T:System.ComponentModel.Design.CommandID" />。</summary>
    </member>
    <member name="F:System.Windows.Forms.Design.MenuCommands.KeyTabOrderSelect">
      <summary vsli:raw="A &lt;see cref=&quot;T:System.ComponentModel.Design.CommandID&quot; /&gt; that can be used to access the tab order select key handler.">可用於存取定位順序選取鍵處理常式的 <see cref="T:System.ComponentModel.Design.CommandID" />。</summary>
    </member>
    <member name="F:System.Windows.Forms.Design.MenuCommands.SelectionMenu">
      <summary vsli:raw="A &lt;see cref=&quot;T:System.ComponentModel.Design.CommandID&quot; /&gt; that can be used to access the selection menu.">可用於存取選取功能表的 <see cref="T:System.ComponentModel.Design.CommandID" />。</summary>
    </member>
    <member name="F:System.Windows.Forms.Design.MenuCommands.SetStatusRectangle">
      <summary vsli:raw="A &lt;see cref=&quot;T:System.ComponentModel.Design.CommandID&quot; /&gt; that can be used to set the status rectangle.">可用於設定狀態矩形的 <see cref="T:System.ComponentModel.Design.CommandID" />。</summary>
    </member>
    <member name="F:System.Windows.Forms.Design.MenuCommands.SetStatusText">
      <summary vsli:raw="A &lt;see cref=&quot;T:System.ComponentModel.Design.CommandID&quot; /&gt; that can be used to set the status rectangle text.">可用於設定狀態矩形文字的 <see cref="T:System.ComponentModel.Design.CommandID" />。</summary>
    </member>
    <member name="F:System.Windows.Forms.Design.MenuCommands.TraySelectionMenu">
      <summary vsli:raw="A &lt;see cref=&quot;T:System.ComponentModel.Design.CommandID&quot; /&gt; that can be used to access the tray selection menu.">可用於存取元件匣選取功能表的 <see cref="T:System.ComponentModel.Design.CommandID" />。</summary>
    </member>
    <member name="M:System.Windows.Forms.Design.MenuCommands.#ctor">
      <summary vsli:raw="Initializes a new instance of the &lt;see cref=&quot;T:System.Windows.Forms.Design.MenuCommands&quot; /&gt; class.">初始化 <see cref="T:System.Windows.Forms.Design.MenuCommands" /> 類別的新執行個體。</summary>
    </member>
    <member name="T:System.Windows.Forms.Design.ParentControlDesigner">
      <summary vsli:raw="Extends the design mode behavior of a &lt;see cref=&quot;T:System.Windows.Forms.Control&quot; /&gt; that supports nested controls.">擴充支援巢狀控制項之 <see cref="T:System.Windows.Forms.Control" /> 的設計模式行為。</summary>
    </member>
    <member name="M:System.Windows.Forms.Design.ParentControlDesigner.#ctor">
      <summary vsli:raw="Initializes a new instance of the &lt;see cref=&quot;T:System.Windows.Forms.Design.ParentControlDesigner&quot; /&gt; class.">初始化 <see cref="T:System.Windows.Forms.Design.ParentControlDesigner" /> 類別的新執行個體。</summary>
    </member>
    <member name="M:System.Windows.Forms.Design.ParentControlDesigner.AddPaddingSnapLines(System.Collections.ArrayList@)">
      <summary vsli:raw="Adds padding snaplines.">加入邊框距離對齊線。</summary>
      <param name="snapLines" vsli:raw="An &lt;see cref=&quot;T:System.Collections.ArrayList&quot; /&gt; that contains &lt;see cref=&quot;T:System.Windows.Forms.Design.Behavior.SnapLine&quot; /&gt; objects.">
        <see cref="T:System.Collections.ArrayList" />，包含 <see cref="T:System.Windows.Forms.Design.Behavior.SnapLine" /> 物件。</param>
    </member>
    <member name="M:System.Windows.Forms.Design.ParentControlDesigner.CanAddComponent(System.ComponentModel.IComponent)">
      <summary vsli:raw="Called when a component is added to the parent container.">當元件加入至父容器時呼叫。</summary>
      <param name="component" vsli:raw="The component to test for errors.">要測試錯誤的元件。</param>
      <returns vsli:raw="&lt;see langword=&quot;true&quot; /&gt; if &lt;paramref name=&quot;component&quot; /&gt; can be added; otherwise, &lt;see langword=&quot;false&quot; /&gt;.">如果可以加入 <paramref name="component" /> 則為 <see langword="true" />，否則為 <see langword="false" />。</returns>
    </member>
    <member name="M:System.Windows.Forms.Design.ParentControlDesigner.CanParent(System.Windows.Forms.Control)">
      <summary vsli:raw="Indicates whether the specified control can be a child of the control managed by this designer.">指示指定的控制項是否可以為這個設計工具管理的控制項的子系。</summary>
      <param name="control" vsli:raw="The &lt;see cref=&quot;T:System.Windows.Forms.Control&quot; /&gt; to test.">要測試的 <see cref="T:System.Windows.Forms.Control" />。</param>
      <returns vsli:raw="&lt;see langword=&quot;true&quot; /&gt; if the specified control can be a child of the control managed by this designer; otherwise, &lt;see langword=&quot;false&quot; /&gt;.">如果指定的控制項可以是這個設計工具管理的控制項的子系，則為 <see langword="true" />，否則為 <see langword="false" />。</returns>
    </member>
    <member name="M:System.Windows.Forms.Design.ParentControlDesigner.CanParent(System.Windows.Forms.Design.ControlDesigner)">
      <summary vsli:raw="Indicates whether the control managed by the specified designer can be a child of the control managed by this designer.">指示由指定的設計工具管理的控制項，是否可以是這個設計工具管理的控制項的子系。</summary>
      <param name="controlDesigner" vsli:raw="The designer for the control to test.">要測試的控制項之設計工具。</param>
      <returns vsli:raw="&lt;see langword=&quot;true&quot; /&gt; if the control managed by the specified designer can be a child of the control managed by this designer; otherwise, &lt;see langword=&quot;false&quot; /&gt;.">如果指定的設計工具管理的控制項可以是這個設計工具管理的控制項的子系，則為 <see langword="true" />，否則為 <see langword="false" />。</returns>
    </member>
    <member name="M:System.Windows.Forms.Design.ParentControlDesigner.CreateTool(System.Drawing.Design.ToolboxItem)">
      <summary vsli:raw="Creates a component or control from the specified tool and adds it to the current design document.">利用指定的工具建立元件或控制項，並將其加入至目前的設計文件。</summary>
      <param name="tool" vsli:raw="The &lt;see cref=&quot;T:System.Drawing.Design.ToolboxItem&quot; /&gt; to create a component from.">用來建立元件的 <see cref="T:System.Drawing.Design.ToolboxItem" />。</param>
    </member>
    <member name="M:System.Windows.Forms.Design.ParentControlDesigner.CreateTool(System.Drawing.Design.ToolboxItem,System.Drawing.Point)">
      <summary vsli:raw="Creates a component or control from the specified tool and adds it to the current design document at the specified location.">利用指定的工具建立元件或控制項，並將其加入至目前的設計文件中指定的位置。</summary>
      <param name="tool" vsli:raw="The &lt;see cref=&quot;T:System.Drawing.Design.ToolboxItem&quot; /&gt; to create a component from.">用來建立元件的 <see cref="T:System.Drawing.Design.ToolboxItem" />。</param>
      <param name="location" vsli:raw="The &lt;see cref=&quot;T:System.Drawing.Point&quot; /&gt;, in design-time view screen coordinates, at which to center the component.">要將元件置中的 <see cref="T:System.Drawing.Point" /> (以設計階段檢視螢幕座標表示)。</param>
    </member>
    <member name="M:System.Windows.Forms.Design.ParentControlDesigner.CreateTool(System.Drawing.Design.ToolboxItem,System.Drawing.Rectangle)">
      <summary vsli:raw="Creates a component or control from the specified tool and adds it to the current design document within the bounds of the specified rectangle.">利用指定的工具建立元件或控制項，並將其加入至指定矩形範圍內的目前設計文件。</summary>
      <param name="tool" vsli:raw="The &lt;see cref=&quot;T:System.Drawing.Design.ToolboxItem&quot; /&gt; to create a component from.">用來建立元件的 <see cref="T:System.Drawing.Design.ToolboxItem" />。</param>
      <param name="bounds" vsli:raw="A &lt;see cref=&quot;T:System.Drawing.Rectangle&quot; /&gt; indicating the location and size for the component created from the tool. The &lt;see cref=&quot;P:System.Drawing.Rectangle.X&quot; /&gt; and &lt;see cref=&quot;P:System.Drawing.Rectangle.Y&quot; /&gt; values of the &lt;see cref=&quot;T:System.Drawing.Rectangle&quot; /&gt; indicate the design-time view screen coordinates of the upper-left corner of the component.">
        <see cref="T:System.Drawing.Rectangle" />，表示利用工具建立之元件的位置和大小。 <see cref="P:System.Drawing.Rectangle.X" /> 的 <see cref="P:System.Drawing.Rectangle.Y" /> 和 <see cref="T:System.Drawing.Rectangle" /> 值表示元件左上角的設計階段檢視螢幕座標。</param>
    </member>
    <member name="M:System.Windows.Forms.Design.ParentControlDesigner.CreateToolCore(System.Drawing.Design.ToolboxItem,System.Int32,System.Int32,System.Int32,System.Int32,System.Boolean,System.Boolean)">
      <summary vsli:raw="Provides core functionality for all the &lt;see cref=&quot;M:System.Windows.Forms.Design.ParentControlDesigner.CreateTool(System.Drawing.Design.ToolboxItem)&quot; /&gt; methods.">提供所有 <see cref="M:System.Windows.Forms.Design.ParentControlDesigner.CreateTool(System.Drawing.Design.ToolboxItem)" /> 方法的核心功能。</summary>
      <param name="tool" vsli:raw="The &lt;see cref=&quot;T:System.Drawing.Design.ToolboxItem&quot; /&gt; to create a component from.">用來建立元件的 <see cref="T:System.Drawing.Design.ToolboxItem" />。</param>
      <param name="x" vsli:raw="The horizontal position, in design-time view coordinates, of the location of the left edge of the tool, if a size is specified; the horizontal position of the center of the tool, if no size is specified.">如果指定了大小，則為工具左邊緣位置的水平位置 (以設計階段檢視座標表示)；如果未指定大小，則為工具中心的水平位置。</param>
      <param name="y" vsli:raw="The vertical position, in design-time view coordinates, of the location of the top edge of the tool, if a size is specified; the vertical position of the center of the tool, if no size is specified.">如果指定了大小，則為工具上邊緣位置的垂直位置 (以設計階段檢視座標表示)；如果未指定大小，則為工具中心的垂直位置。</param>
      <param name="width" vsli:raw="The width of the tool. This parameter is ignored if the &lt;paramref name=&quot;hasSize&quot; /&gt; parameter is set to &lt;see langword=&quot;false&quot; /&gt;.">工具的寬度。 如果 <paramref name="hasSize" /> 參數設定為 <see langword="false" />，會忽略這個參數。</param>
      <param name="height" vsli:raw="The height of the tool. This parameter is ignored if the &lt;paramref name=&quot;hasSize&quot; /&gt; parameter is set to &lt;see langword=&quot;false&quot; /&gt;.">工具的高度。 如果 <paramref name="hasSize" /> 參數設定為 <see langword="false" />，會忽略這個參數。</param>
      <param name="hasLocation" vsli:raw="&lt;see langword=&quot;true&quot; /&gt; if a location for the component is specified; &lt;see langword=&quot;false&quot; /&gt; if the component is to be positioned in the center of the currently selected control.">如果指定了元件的位置，則為 <see langword="true" />；如果元件要放置在目前選取的控制項的中央，則為 <see langword="false" />。</param>
      <param name="hasSize" vsli:raw="&lt;see langword=&quot;true&quot; /&gt; if a size for the component is specified; &lt;see langword=&quot;false&quot; /&gt; if the default height and width values for the component are to be used.">如果指定了元件的大小，則為 <see langword="true" />；如果要使用元件的預設高度和寬度值，則為 <see langword="false" />。</param>
      <returns vsli:raw="An array of components created from the tool.">利用工具建立的元件陣列。</returns>
    </member>
    <member name="M:System.Windows.Forms.Design.ParentControlDesigner.Dispose(System.Boolean)">
      <summary vsli:raw="Releases the unmanaged resources used by the &lt;see cref=&quot;T:System.Windows.Forms.Design.ParentControlDesigner&quot; /&gt;, and optionally releases the managed resources.">釋放 <see cref="T:System.Windows.Forms.Design.ParentControlDesigner" /> 所使用的 Unmanaged 資源，並選擇性釋放 Managed 資源。</summary>
      <param name="disposing" vsli:raw="&lt;see langword=&quot;true&quot; /&gt; to release both managed and unmanaged resources; &lt;see langword=&quot;false&quot; /&gt; to release only unmanaged resources.">
        <see langword="true" /> 表示釋放 Managed 和 Unmanaged 資源，<see langword="false" /> 則表示只釋放 Unmanaged 資源。</param>
    </member>
    <member name="M:System.Windows.Forms.Design.ParentControlDesigner.GetControl(System.Object)">
      <summary vsli:raw="Gets the control from the designer of the specified component.">從指定元件的設計工具取得控制項。</summary>
      <param name="component" vsli:raw="The component to retrieve the control for.">要為其擷取控制項的元件。</param>
      <returns vsli:raw="The &lt;see cref=&quot;T:System.Windows.Forms.Control&quot; /&gt; that the specified component belongs to.">指定的元件所屬的 <see cref="T:System.Windows.Forms.Control" />。</returns>
    </member>
    <member name="M:System.Windows.Forms.Design.ParentControlDesigner.GetControlGlyph(System.Windows.Forms.Design.Behavior.GlyphSelectionType)">
      <summary vsli:raw="Gets a body glyph that represents the bounds of the control.">取得主體圖像 (Glyph)，表示控制項的界限。</summary>
      <param name="selectionType" vsli:raw="A &lt;see cref=&quot;T:System.Windows.Forms.Design.Behavior.GlyphSelectionType&quot; /&gt; value that specifies the selection state.">
        <see cref="T:System.Windows.Forms.Design.Behavior.GlyphSelectionType" /> 值，指定選取狀態。</param>
      <returns vsli:raw="A body glyph that represents the bounds of the control.">主體圖像，表示控制項的界限。</returns>
    </member>
    <member name="M:System.Windows.Forms.Design.ParentControlDesigner.GetGlyphs(System.Windows.Forms.Design.Behavior.GlyphSelectionType)">
      <summary vsli:raw="Gets a collection of &lt;see cref=&quot;T:System.Windows.Forms.Design.Behavior.Glyph&quot; /&gt; objects representing the selection borders and grab handles for a standard control.">取得 <see cref="T:System.Windows.Forms.Design.Behavior.Glyph" /> 物件的集合，表示標準控制項的選取範圍框線和抓取控點。</summary>
      <param name="selectionType" vsli:raw="A &lt;see cref=&quot;T:System.Windows.Forms.Design.Behavior.GlyphSelectionType&quot; /&gt; value that specifies the selection state.">
        <see cref="T:System.Windows.Forms.Design.Behavior.GlyphSelectionType" /> 值，指定選取狀態。</param>
      <returns vsli:raw="A collection of &lt;see cref=&quot;T:System.Windows.Forms.Design.Behavior.Glyph&quot; /&gt; objects.">
        <see cref="T:System.Windows.Forms.Design.Behavior.Glyph" /> 物件的集合。</returns>
    </member>
    <member name="M:System.Windows.Forms.Design.ParentControlDesigner.GetParentForComponent(System.ComponentModel.IComponent)">
      <summary vsli:raw="Used by deriving classes to determine if it returns the control being designed or some other &lt;see cref=&quot;T:System.ComponentModel.Container&quot; /&gt; while adding a component to it.">衍生類別會在加入元件時，據以判斷是否傳回正在設計的控制項，或是其他的 <see cref="T:System.ComponentModel.Container" />。</summary>
      <param name="component" vsli:raw="The component for which to retrieve the parent &lt;see cref=&quot;T:System.Windows.Forms.Control&quot; /&gt;.">要擷取其父代 <see cref="T:System.Windows.Forms.Control" /> 的元件。</param>
      <returns vsli:raw="The parent &lt;see cref=&quot;T:System.Windows.Forms.Control&quot; /&gt; for the component.">元件的父代 <see cref="T:System.Windows.Forms.Control" />。</returns>
    </member>
    <member name="M:System.Windows.Forms.Design.ParentControlDesigner.GetUpdatedRect(System.Drawing.Rectangle,System.Drawing.Rectangle,System.Boolean)">
      <summary vsli:raw="Updates the position of the specified rectangle, adjusting it for grid alignment if grid alignment mode is enabled.">更新所指定矩形的位置，如果啟用了格線對齊模式，並將其調整為對齊格線。</summary>
      <param name="originalRect" vsli:raw="A &lt;see cref=&quot;T:System.Drawing.Rectangle&quot; /&gt; indicating the initial position of the component being updated.">
        <see cref="T:System.Drawing.Rectangle" />，表示所更新之元件的初始位置。</param>
      <param name="dragRect" vsli:raw="A &lt;see cref=&quot;T:System.Drawing.Rectangle&quot; /&gt; indicating the new position of the component.">
        <see cref="T:System.Drawing.Rectangle" />，表示元件的新位置。</param>
      <param name="updateSize" vsli:raw="&lt;see langword=&quot;true&quot; /&gt; to update the size of the rectangle, if there has been any change; otherwise, &lt;see langword=&quot;false&quot; /&gt;.">如果有任何變更會更新矩形的大小，則為 <see langword="true" />，否則為 <see langword="false" />。</param>
      <returns vsli:raw="A rectangle indicating the position of the component in design-time view screen coordinates. If no changes have been made, this method returns the original rectangle.">指示元件位置的矩形，以設計階段檢視螢幕座標表示。 如果未做任何變更，這個方法會傳回原始的矩形。</returns>
    </member>
    <member name="M:System.Windows.Forms.Design.ParentControlDesigner.Initialize(System.ComponentModel.IComponent)">
      <summary vsli:raw="Initializes the designer with the specified component.">使用指定的元件，初始化設計工具。</summary>
      <param name="component" vsli:raw="The &lt;see cref=&quot;T:System.ComponentModel.IComponent&quot; /&gt; to associate with the designer.">與設計工具關聯的 <see cref="T:System.ComponentModel.IComponent" />。</param>
    </member>
    <member name="M:System.Windows.Forms.Design.ParentControlDesigner.InitializeNewComponent(System.Collections.IDictionary)">
      <summary vsli:raw="Initializes a newly created component.">初始化新建立的元件。</summary>
      <param name="defaultValues" vsli:raw="A name/value dictionary of default values to apply to properties. May be &lt;see langword=&quot;null&quot; /&gt; if no default values are specified.">要套用至屬性之預設值的名稱/值字典。 如果未指定任何預設值，則可能為 <see langword="null" />。</param>
    </member>
    <member name="M:System.Windows.Forms.Design.ParentControlDesigner.InvokeCreateTool(System.Windows.Forms.Design.ParentControlDesigner,System.Drawing.Design.ToolboxItem)">
      <summary vsli:raw="Creates a tool from the specified &lt;see cref=&quot;T:System.Drawing.Design.ToolboxItem&quot; /&gt;.">利用指定的 <see cref="T:System.Drawing.Design.ToolboxItem" /> 來建立工具。</summary>
      <param name="toInvoke" vsli:raw="The &lt;see cref=&quot;T:System.Windows.Forms.Design.ParentControlDesigner&quot; /&gt; that the tool is to be used with.">工具要配合使用的 <see cref="T:System.Windows.Forms.Design.ParentControlDesigner" />。</param>
      <param name="tool" vsli:raw="The &lt;see cref=&quot;T:System.Drawing.Design.ToolboxItem&quot; /&gt; to create a tool from.">用來建立工具的 <see cref="T:System.Drawing.Design.ToolboxItem" />。</param>
    </member>
    <member name="M:System.Windows.Forms.Design.ParentControlDesigner.OnDragComplete(System.Windows.Forms.DragEventArgs)">
      <summary vsli:raw="Called in order to clean up a drag-and-drop operation.">需要清除拖放作業時呼叫。</summary>
      <param name="de" vsli:raw="A &lt;see cref=&quot;T:System.Windows.Forms.DragEventArgs&quot; /&gt; that provides data for the event.">提供事件資料的 <see cref="T:System.Windows.Forms.DragEventArgs" />。</param>
    </member>
    <member name="M:System.Windows.Forms.Design.ParentControlDesigner.OnDragDrop(System.Windows.Forms.DragEventArgs)">
      <summary vsli:raw="Called when a drag-and-drop object is dropped onto the control designer view.">在拖放物件放在控制項設計工具檢視上時呼叫。</summary>
      <param name="de" vsli:raw="A &lt;see cref=&quot;T:System.Windows.Forms.DragEventArgs&quot; /&gt; that provides data for the event.">提供事件資料的 <see cref="T:System.Windows.Forms.DragEventArgs" />。</param>
    </member>
    <member name="M:System.Windows.Forms.Design.ParentControlDesigner.OnDragEnter(System.Windows.Forms.DragEventArgs)">
      <summary vsli:raw="Called when a drag-and-drop operation enters the control designer view.">在拖放作業進入控制項設計工具檢視時呼叫。</summary>
      <param name="de" vsli:raw="A &lt;see cref=&quot;T:System.Windows.Forms.DragEventArgs&quot; /&gt; that provides data for the event.">提供事件資料的 <see cref="T:System.Windows.Forms.DragEventArgs" />。</param>
    </member>
    <member name="M:System.Windows.Forms.Design.ParentControlDesigner.OnDragLeave(System.EventArgs)">
      <summary vsli:raw="Called when a drag-and-drop operation leaves the control designer view.">在拖放作業離開控制項設計工具檢視時呼叫。</summary>
      <param name="e" vsli:raw="An &lt;see cref=&quot;T:System.EventArgs&quot; /&gt; that provides data for the event.">提供事件資料的 <see cref="T:System.EventArgs" />。</param>
    </member>
    <member name="M:System.Windows.Forms.Design.ParentControlDesigner.OnDragOver(System.Windows.Forms.DragEventArgs)">
      <summary vsli:raw="Called when a drag-and-drop object is dragged over the control designer view.">在拖放物件拖曳至控制項設計工具檢視上時呼叫。</summary>
      <param name="de" vsli:raw="A &lt;see cref=&quot;T:System.Windows.Forms.DragEventArgs&quot; /&gt; that provides data for the event.">提供事件資料的 <see cref="T:System.Windows.Forms.DragEventArgs" />。</param>
    </member>
    <member name="M:System.Windows.Forms.Design.ParentControlDesigner.OnMouseDragBegin(System.Int32,System.Int32)">
      <summary vsli:raw="Called in response to the left mouse button being pressed and held while over the component.">呼叫以回應在元件上按住滑鼠左鍵。</summary>
      <param name="x" vsli:raw="The x-coordinate of the mouse in screen coordinates.">螢幕座標中滑鼠的 X 座標。</param>
      <param name="y" vsli:raw="The y-coordinate of the mouse in screen coordinates.">螢幕座標中滑鼠的 Y 座標。</param>
    </member>
    <member name="M:System.Windows.Forms.Design.ParentControlDesigner.OnMouseDragEnd(System.Boolean)">
      <summary vsli:raw="Called at the end of a drag-and-drop operation to complete or cancel the operation.">在拖放作業結束時呼叫，以完成或取消作業。</summary>
      <param name="cancel" vsli:raw="&lt;see langword=&quot;true&quot; /&gt; to cancel the drag operation; &lt;see langword=&quot;false&quot; /&gt; to commit it.">
        <see langword="true" /> 會取消作業；<see langword="false" /> 會認可作業。</param>
    </member>
    <member name="M:System.Windows.Forms.Design.ParentControlDesigner.OnMouseDragMove(System.Int32,System.Int32)">
      <summary vsli:raw="Called for each movement of the mouse during a drag-and-drop operation.">在拖放作業當中，滑鼠每次移動時呼叫。</summary>
      <param name="x" vsli:raw="The x-coordinate of the mouse in screen coordinates.">螢幕座標中滑鼠的 X 座標。</param>
      <param name="y" vsli:raw="The y-coordinate of the mouse in screen coordinates.">螢幕座標中滑鼠的 Y 座標。</param>
    </member>
    <member name="M:System.Windows.Forms.Design.ParentControlDesigner.OnPaintAdornments(System.Windows.Forms.PaintEventArgs)">
      <summary vsli:raw="Called when the control that the designer is managing has painted its surface so the designer can paint any additional adornments on top of the control.">在設計工具正在管理的控制項繪製其介面時呼叫，讓設計工具可以在控制項之上繪製任何其他的裝飾。</summary>
      <param name="pe" vsli:raw="A &lt;see cref=&quot;T:System.Windows.Forms.PaintEventArgs&quot; /&gt; that provides data for the event.">提供事件資料的 <see cref="T:System.Windows.Forms.PaintEventArgs" />。</param>
    </member>
    <member name="M:System.Windows.Forms.Design.ParentControlDesigner.OnSetCursor">
      <summary vsli:raw="Provides an opportunity to change the current mouse cursor.">提供變更目前滑鼠游標的機會。</summary>
    </member>
    <member name="M:System.Windows.Forms.Design.ParentControlDesigner.PreFilterProperties(System.Collections.IDictionary)">
      <summary vsli:raw="Adjusts the set of properties the component will expose through a &lt;see cref=&quot;T:System.ComponentModel.TypeDescriptor&quot; /&gt;.">調整元件透過 <see cref="T:System.ComponentModel.TypeDescriptor" /> 公開的屬性集。</summary>
      <param name="properties" vsli:raw="An &lt;see cref=&quot;T:System.Collections.IDictionary&quot; /&gt; that contains the properties for the class of the component.">包含元件類別屬性的 <see cref="T:System.Collections.IDictionary" />。</param>
    </member>
    <member name="P:System.Windows.Forms.Design.ParentControlDesigner.AllowControlLasso">
      <summary vsli:raw="Gets a value indicating whether selected controls will be re-parented.">取得值，指出是否重設選取之控制項的父代。</summary>
      <returns vsli:raw="&lt;see langword=&quot;true&quot; /&gt; if the controls that were selected by lassoing on the designer's surface will be re-parented to this designer's control.">如果設計工具介面中以套索選取的控制項會重設為這個設計工具之控制項的父代，則為 <see langword="true" />。</returns>
    </member>
    <member name="P:System.Windows.Forms.Design.ParentControlDesigner.AllowGenericDragBox">
      <summary vsli:raw="Gets a value indicating whether a generic drag box should be drawn when dragging a toolbox item over the designer's surface.">取得值，指出將工具箱項目拖曳至設計工具的介面上時，是否應繪製泛型拖曳方塊。</summary>
      <returns vsli:raw="&lt;see langword=&quot;true&quot; /&gt; if a generic drag box should be drawn when dragging a toolbox item over the designer's surface; otherwise, &lt;see langword=&quot;false&quot; /&gt;. The default is &lt;see langword=&quot;true&quot; /&gt;.">如果將工具箱項目拖曳至設計工具的介面上時，應該要繪製泛型拖曳方塊，則為 <see langword="true" />，否則為 <see langword="false" />。 預設為 <see langword="true" />。</returns>
    </member>
    <member name="P:System.Windows.Forms.Design.ParentControlDesigner.AllowSetChildIndexOnDrop">
      <summary vsli:raw="Gets a value indicating whether the z-order of dragged controls should be maintained when dropped on a &lt;see cref=&quot;T:System.Windows.Forms.Design.ParentControlDesigner&quot; /&gt;.">取得值，指出將控制項拖曳至 <see cref="T:System.Windows.Forms.Design.ParentControlDesigner" /> 時，是否應維持被拖曳控制項的疊置順序 (Z-order)。</summary>
      <returns vsli:raw="&lt;see langword=&quot;true&quot; /&gt; if the z-order of dragged controls should be maintained when dropped on a &lt;see cref=&quot;T:System.Windows.Forms.Design.ParentControlDesigner&quot; /&gt;; otherwise, &lt;see langword=&quot;false&quot; /&gt;.">如果將控制項拖曳至 <see cref="T:System.Windows.Forms.Design.ParentControlDesigner" /> 時，應維持被拖曳控制項的疊置順序則為 <see langword="true" />，否則為 <see langword="false" />。</returns>
    </member>
    <member name="P:System.Windows.Forms.Design.ParentControlDesigner.DefaultControlLocation">
      <summary vsli:raw="Gets the default location for a control added to the designer.">取得加入至設計工具的控制項的預設位置。</summary>
      <returns vsli:raw="A &lt;see cref=&quot;T:System.Drawing.Point&quot; /&gt; that indicates the default location for a control added to the designer.">
        <see cref="T:System.Drawing.Point" />，表示加入至設計工具之控制項的預設位置。</returns>
    </member>
    <member name="P:System.Windows.Forms.Design.ParentControlDesigner.DrawGrid">
      <summary vsli:raw="Gets or sets a value indicating whether a grid should be drawn on the control for this designer.">取得或設定值，指出是否應在這個設計工具的控制項上繪製格線。</summary>
      <returns vsli:raw="&lt;see langword=&quot;true&quot; /&gt; if a grid should be drawn on the control in the designer; otherwise, &lt;see langword=&quot;false&quot; /&gt;.">如果應在設計工具中的控制項上繪製格線，則為 <see langword="true" />，否則為 <see langword="false" />。</returns>
    </member>
    <member name="P:System.Windows.Forms.Design.ParentControlDesigner.EnableDragRect">
      <summary vsli:raw="Gets a value indicating whether drag rectangles are drawn by the designer.">取得值，指出是否由設計工具繪製拖曳矩形。</summary>
      <returns vsli:raw="&lt;see langword=&quot;true&quot; /&gt; if drag rectangles are drawn; otherwise, &lt;see langword=&quot;false&quot; /&gt;. The default is &lt;see langword=&quot;true&quot; /&gt;.">如果繪製拖曳矩形，則為 <see langword="true" />，否則為 <see langword="false" />。 預設為 <see langword="true" />。</returns>
    </member>
    <member name="P:System.Windows.Forms.Design.ParentControlDesigner.GridSize">
      <summary vsli:raw="Gets or sets the size of each square of the grid that is drawn when the designer is in grid draw mode.">取得或設定設計工具在繪製格線模式時，所繪製的格線中每一個方形的大小。</summary>
      <exception cref="T:System.ArgumentException" vsli:raw="&lt;see cref=&quot;T:System.Drawing.Size&quot; /&gt; is outside the allowed range for &lt;see cref=&quot;P:System.Windows.Forms.Design.ParentControlDesigner.GridSize&quot; /&gt;. The default minimum value is 2, and the default maximum value is 200.">
        <see cref="T:System.Drawing.Size" /> 位於 <see cref="P:System.Windows.Forms.Design.ParentControlDesigner.GridSize" /> 的允許範圍之外。 預設的最小值為 2，預設的最大值為 200。</exception>
      <returns vsli:raw="A &lt;see cref=&quot;T:System.Drawing.Size&quot; /&gt; that represents the size of each square of the grid drawn on a form or user control.">
        <see cref="T:System.Drawing.Size" />，表示在表單或使用者控制項上繪製之格線的每一個方形大小。</returns>
    </member>
    <member name="P:System.Windows.Forms.Design.ParentControlDesigner.MouseDragTool">
      <summary vsli:raw="Gets a value indicating whether the designer has a valid tool during a drag operation.">取得值，指出設計工具在拖曳作業期間是否具有有效的工具。</summary>
      <returns vsli:raw="The tool being dragged, if creating a component, or &lt;see langword=&quot;null&quot; /&gt; if there is no tool.">如果會建立元件，則為要進行拖曳的工具，如果沒有工具則為 <see langword="null" />。</returns>
    </member>
    <member name="P:System.Windows.Forms.Design.ParentControlDesigner.SnapLines">
      <summary vsli:raw="Gets a list of &lt;see cref=&quot;T:System.Windows.Forms.Design.Behavior.SnapLine&quot; /&gt; objects representing significant alignment points for this control.">取得 <see cref="T:System.Windows.Forms.Design.Behavior.SnapLine" /> 物件的清單，表示此控制項的重要對齊點。</summary>
      <returns vsli:raw="A list of &lt;see cref=&quot;T:System.Windows.Forms.Design.Behavior.SnapLine&quot; /&gt; objects representing significant alignment points for this control.">
        <see cref="T:System.Windows.Forms.Design.Behavior.SnapLine" /> 物件的清單，表示此控制項的重要對齊點。</returns>
    </member>
    <member name="T:System.Windows.Forms.Design.ScrollableControlDesigner">
      <summary vsli:raw="Base designer class for extending the design mode behavior of a &lt;see cref=&quot;T:System.Windows.Forms.Control&quot; /&gt; which should receive scroll messages.">基底設計工具類別，用來擴充應該接收捲動訊息之 <see cref="T:System.Windows.Forms.Control" /> 的設計模式行為。</summary>
    </member>
    <member name="M:System.Windows.Forms.Design.ScrollableControlDesigner.#ctor">
      <summary vsli:raw="Initializes a new instance of the &lt;see cref=&quot;T:System.Windows.Forms.Design.ScrollableControlDesigner&quot; /&gt; class.">初始化 <see cref="T:System.Windows.Forms.Design.ScrollableControlDesigner" /> 類別的新執行個體。</summary>
    </member>
    <member name="M:System.Windows.Forms.Design.ScrollableControlDesigner.GetHitTest(System.Drawing.Point)">
      <summary vsli:raw="Indicates whether a mouse click at the specified point should be handled by the control.">指示在指定的點按一下滑鼠是否應由控制項處理。</summary>
      <param name="pt" vsli:raw="A &lt;see cref=&quot;T:System.Drawing.Point&quot; /&gt; indicating the position at which the mouse was clicked, in screen coordinates.">
        <see cref="T:System.Drawing.Point" />，表示滑鼠按一下的位置，以螢幕座標 (Screen Coordinate) 表示。</param>
      <returns vsli:raw="&lt;see langword=&quot;true&quot; /&gt; if a click at the specified point is to be handled by the control; otherwise, &lt;see langword=&quot;false&quot; /&gt;.">如果在指定的點按一下是由控制項處理，則為 <see langword="true" />，否則為 <see langword="false" />。</returns>
    </member>
    <member name="M:System.Windows.Forms.Design.ScrollableControlDesigner.WndProc(System.Windows.Forms.Message@)">
      <summary vsli:raw="Processes Windows messages and passes WM_HSCROLL and WM_VSCROLL messages to the control at design time.">處理 Windows 訊息，並在設計階段時傳遞 WM_HSCROLL 和 WM_VSCROLL 訊息至控制項。</summary>
      <param name="m" vsli:raw="The &lt;see cref=&quot;T:System.Windows.Forms.Message&quot; /&gt; to process.">要處理的 <see cref="T:System.Windows.Forms.Message" />。</param>
    </member>
    <member name="T:System.Windows.Forms.Design.SelectionRules">
      <summary vsli:raw="Defines identifiers that are used to indicate selection rules for a component.">定義用於指示元件選取規則的識別項。</summary>
    </member>
    <member name="F:System.Windows.Forms.Design.SelectionRules.AllSizeable">
      <summary vsli:raw="Indicates the component supports sizing in all directions.">指示元件支援所有方向的縮放。</summary>
    </member>
    <member name="F:System.Windows.Forms.Design.SelectionRules.BottomSizeable">
      <summary vsli:raw="Indicates the component supports resize from the bottom.">指示元件支援從下方調整大小。</summary>
    </member>
    <member name="F:System.Windows.Forms.Design.SelectionRules.LeftSizeable">
      <summary vsli:raw="Indicates the component supports resize from the left.">指示元件支援從左方調整大小。</summary>
    </member>
    <member name="F:System.Windows.Forms.Design.SelectionRules.Locked">
      <summary vsli:raw="Indicates the component is locked to its container. Overrides the &lt;see cref=&quot;F:System.Windows.Forms.Design.SelectionRules.Moveable&quot; /&gt;, &lt;see cref=&quot;F:System.Windows.Forms.Design.SelectionRules.AllSizeable&quot; /&gt;, &lt;see cref=&quot;F:System.Windows.Forms.Design.SelectionRules.BottomSizeable&quot; /&gt;, &lt;see cref=&quot;F:System.Windows.Forms.Design.SelectionRules.LeftSizeable&quot; /&gt;, &lt;see cref=&quot;F:System.Windows.Forms.Design.SelectionRules.RightSizeable&quot; /&gt;, and &lt;see cref=&quot;F:System.Windows.Forms.Design.SelectionRules.TopSizeable&quot; /&gt; bit flags of this enumeration.">指示元件鎖定至其容器 (Container)。 覆寫這個列舉型別的 <see cref="F:System.Windows.Forms.Design.SelectionRules.Moveable" />、<see cref="F:System.Windows.Forms.Design.SelectionRules.AllSizeable" />、<see cref="F:System.Windows.Forms.Design.SelectionRules.BottomSizeable" />、<see cref="F:System.Windows.Forms.Design.SelectionRules.LeftSizeable" />、<see cref="F:System.Windows.Forms.Design.SelectionRules.RightSizeable" /> 和 <see cref="F:System.Windows.Forms.Design.SelectionRules.TopSizeable" /> 位元旗標。</summary>
    </member>
    <member name="F:System.Windows.Forms.Design.SelectionRules.Moveable">
      <summary vsli:raw="Indicates the component supports a location property that allows it to be moved on the screen.">指示元件支援允許在螢幕上移動元件的位置屬性。</summary>
    </member>
    <member name="F:System.Windows.Forms.Design.SelectionRules.None">
      <summary vsli:raw="Indicates no special selection attributes.">指示沒有特殊選取屬性 (Attribute)。</summary>
    </member>
    <member name="F:System.Windows.Forms.Design.SelectionRules.RightSizeable">
      <summary vsli:raw="Indicates the component supports resize from the right.">指示元件支援從右方調整大小。</summary>
    </member>
    <member name="F:System.Windows.Forms.Design.SelectionRules.TopSizeable">
      <summary vsli:raw="Indicates the component supports resize from the top.">指示元件支援從上方調整大小。</summary>
    </member>
    <member name="F:System.Windows.Forms.Design.SelectionRules.Visible">
      <summary vsli:raw="Indicates the component has some form of visible user interface and the selection service is drawing a selection border around this user interface. If a selected component has this rule set, you can assume that the component implements &lt;see cref=&quot;T:System.ComponentModel.IComponent&quot; /&gt; and that it is associated with a corresponding designer instance.">指示元件有一些可見的使用者介面，而且選取服務會在這個使用者介面周圍繪製選取範圍框線。 如果選取的元件設定了這個規則，您可以假設元件實作 <see cref="T:System.ComponentModel.IComponent" />，而且與對應的設計工具執行個體 (Instance) 關聯。</summary>
    </member>
    <member name="T:System.Windows.Forms.Design.ShortcutKeysEditor">
      <summary vsli:raw="Provides an editor for picking shortcut keys.">提供用於選擇快速鍵的編輯器。</summary>
    </member>
    <member name="M:System.Windows.Forms.Design.ShortcutKeysEditor.#ctor">
      <summary vsli:raw="Initializes a new instance of the &lt;see cref=&quot;T:System.Windows.Forms.Design.ShortcutKeysEditor&quot; /&gt; class.">初始化 <see cref="T:System.Windows.Forms.Design.ShortcutKeysEditor" /> 類別的新執行個體。</summary>
    </member>
    <member name="M:System.Windows.Forms.Design.ShortcutKeysEditor.EditValue(System.ComponentModel.ITypeDescriptorContext,System.IServiceProvider,System.Object)">
      <summary vsli:raw="Edits the given object value using the editor style provided by the &lt;see cref=&quot;M:System.Windows.Forms.Design.ShortcutKeysEditor.GetEditStyle(System.ComponentModel.ITypeDescriptorContext)&quot; /&gt; method.">使用 <see cref="M:System.Windows.Forms.Design.ShortcutKeysEditor.GetEditStyle(System.ComponentModel.ITypeDescriptorContext)" /> 方法所提供的編輯器樣式來編輯指定的物件值。</summary>
      <param name="context" vsli:raw="An &lt;see cref=&quot;T:System.ComponentModel.ITypeDescriptorContext&quot; /&gt; that can be used to gain additional context information.">
        <see cref="T:System.ComponentModel.ITypeDescriptorContext" />，可用來取得額外的內容資訊。</param>
      <param name="provider" vsli:raw="An &lt;see cref=&quot;T:System.IServiceProvider&quot; /&gt; that this editor can use to obtain services.">
        <see cref="T:System.IServiceProvider" />，這個編輯器可用來取得服務。</param>
      <param name="value" vsli:raw="The &lt;see cref=&quot;T:System.Object&quot; /&gt; to edit.">要編輯的 <see cref="T:System.Object" />。</param>
      <returns vsli:raw="The new value of the &lt;see cref=&quot;T:System.Object&quot; /&gt;.">The new value of the <see cref="T:System.Object" />.</returns>
    </member>
    <member name="M:System.Windows.Forms.Design.ShortcutKeysEditor.GetEditStyle(System.ComponentModel.ITypeDescriptorContext)">
      <summary vsli:raw="Gets the editor style used by the &lt;xref data-throw-if-not-resolved=&quot;true&quot; uid=&quot;System.Windows.Forms.Design.ShortcutKeysEditor.EditValue*&quot;&gt;&lt;/xref&gt; method.">取得 <see cref="Overload:System.Windows.Forms.Design.ShortcutKeysEditor.EditValue" /> 方法所使用的編輯器樣式。</summary>
      <param name="context" vsli:raw="An &lt;xref data-throw-if-not-resolved=&quot;true&quot; uid=&quot;System.ComponentModel.ITypeDescriptorContext&quot;&gt;&lt;/xref&gt; that can be used to gain additional context information.">
        <see cref="T:System.ComponentModel.ITypeDescriptorContext" />，可用來取得額外的內容資訊。</param>
      <returns vsli:raw="A &lt;xref data-throw-if-not-resolved=&quot;true&quot; uid=&quot;System.Drawing.Design.UITypeEditorEditStyle&quot;&gt;&lt;/xref&gt; value that indicates the style of editor used by the &lt;xref data-throw-if-not-resolved=&quot;true&quot; uid=&quot;System.Windows.Forms.Design.ShortcutKeysEditor.EditValue*&quot;&gt;&lt;/xref&gt; method.">
        <see cref="T:System.Drawing.Design.UITypeEditorEditStyle" /> 值，表示 <see cref="Overload:System.Windows.Forms.Design.ShortcutKeysEditor.EditValue" /> 方法所使用的編輯器樣式。</returns>
    </member>
    <member name="T:System.Windows.Forms.Design.ThemedScrollbarMode">
      <summary vsli:raw="A value that indicates whether the scrollbars of a window and its children will be themed when displayed in the Visual Studio designer.">表示當 Visual Studio 設計工具顯示視窗捲軸及其子系時，是否配置其佈景主題的值。</summary>
    </member>
    <member name="F:System.Windows.Forms.Design.ThemedScrollbarMode.All">
      <summary vsli:raw="The window and all of its children will have themed scrollbars.">視窗及其所有子系將會有已配置佈景主題的捲軸。</summary>
    </member>
    <member name="F:System.Windows.Forms.Design.ThemedScrollbarMode.None">
      <summary vsli:raw="The window and all of its children will not be themed.">視窗及其所有子系將不會配置佈景主題。</summary>
    </member>
    <member name="F:System.Windows.Forms.Design.ThemedScrollbarMode.OnlyTopLevel">
      <summary vsli:raw="The window will have themed scrollbars but all of its children will not be themed.">視窗會有已配置佈景主題的捲軸，但是其所有子系都沒有配置佈景主題。</summary>
    </member>
    <member name="T:System.Windows.Forms.Design.ThemedScrollbarWindow">
      <summary vsli:raw="Represents a window and a value that indicates how its scrollbars should be themed when displayed in the Visual Studio designer.">表示視窗以及一個指示當 Visual Studio 設計工具顯示該視窗之捲軸時，應如何配置其佈景主題的值。</summary>
    </member>
    <member name="F:System.Windows.Forms.Design.ThemedScrollbarWindow.Handle">
      <summary vsli:raw="The window handle.">視窗控制代碼 (Window Handle)。</summary>
    </member>
    <member name="F:System.Windows.Forms.Design.ThemedScrollbarWindow.Mode">
      <summary vsli:raw="A value that indicates how the window scrollbars should be themed when displayed in the Visual Studio designer.">表示當 Visual Studio 設計工具顯示視窗捲軸時，應如何配置其佈景主題的值。</summary>
    </member>
    <member name="T:System.Windows.Forms.Design.WindowsFormsDesignerOptionService">
      <summary vsli:raw="Provides access to get and set option values for a Windows Forms designer.">提供可取得及設定 Windows Form 設計工具之選項值的存取權。</summary>
    </member>
    <member name="M:System.Windows.Forms.Design.WindowsFormsDesignerOptionService.#ctor">
      <summary vsli:raw="Initializes a new instance of the &lt;see cref=&quot;T:System.Windows.Forms.Design.WindowsFormsDesignerOptionService&quot; /&gt; class.">初始化 <see cref="T:System.Windows.Forms.Design.WindowsFormsDesignerOptionService" /> 類別的新執行個體。</summary>
    </member>
    <member name="M:System.Windows.Forms.Design.WindowsFormsDesignerOptionService.PopulateOptionCollection(System.ComponentModel.Design.DesignerOptionService.DesignerOptionCollection)">
      <summary vsli:raw="Populates a &lt;see cref=&quot;T:System.ComponentModel.Design.DesignerOptionService.DesignerOptionCollection&quot; /&gt;.">填入 <see cref="T:System.ComponentModel.Design.DesignerOptionService.DesignerOptionCollection" />。</summary>
      <param name="options" vsli:raw="The collection to populate.">要填入的集合。</param>
    </member>
    <member name="P:System.Windows.Forms.Design.WindowsFormsDesignerOptionService.CompatibilityOptions">
      <summary vsli:raw="Gets the &lt;see cref=&quot;T:System.Windows.Forms.Design.DesignerOptions&quot; /&gt; exposed by the &lt;see cref=&quot;T:System.Windows.Forms.Design.WindowsFormsDesignerOptionService&quot; /&gt;.">取得由 <see cref="T:System.Windows.Forms.Design.DesignerOptions" /> 所公開的 <see cref="T:System.Windows.Forms.Design.WindowsFormsDesignerOptionService" />。</summary>
      <returns vsli:raw="The &lt;see cref=&quot;T:System.Windows.Forms.Design.DesignerOptions&quot; /&gt; exposed by the &lt;see cref=&quot;T:System.Windows.Forms.Design.WindowsFormsDesignerOptionService&quot; /&gt;.">由 <see cref="T:System.Windows.Forms.Design.DesignerOptions" /> 所公開的 <see cref="T:System.Windows.Forms.Design.WindowsFormsDesignerOptionService" />。</returns>
    </member>
  </members>
</doc>