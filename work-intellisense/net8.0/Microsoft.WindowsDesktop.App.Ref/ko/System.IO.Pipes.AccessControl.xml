<?xml version="1.0" encoding="utf-8"?>
<doc>
  <assembly>
    <name>System.IO.Pipes.AccessControl</name>
  </assembly>
  <members>
    <member name="T:System.IO.Pipes.AnonymousPipeServerStreamAcl" />
    <member name="M:System.IO.Pipes.AnonymousPipeServerStreamAcl.Create(System.IO.Pipes.PipeDirection,System.IO.HandleInheritability,System.Int32,System.IO.Pipes.PipeSecurity)">
      <summary>지정된 파이프 방향, 상속 모드, 버퍼 크기 및 파이프 보안을 사용하여 <see cref="T:System.IO.Pipes.AnonymousPipeServerStream" /> 클래스의 새 인스턴스를 만듭니다.</summary>
      <param name="direction">파이프의 방향을 결정하는 열거형 값 중 하나입니다. 익명 파이프는 단방향이므로 방향을 <see cref="F:System.IO.Pipes.PipeDirection.InOut" />으로 설정할 수 없습니다.</param>
      <param name="inheritability">자식 프로세스가 기본 핸들을 상속할 수 있는지 여부를 결정하는 열거형 값 중 하나입니다.</param>
      <param name="bufferSize">버퍼의 크기입니다. 이 값은 0보다 크거나 같아야 합니다.</param>
      <param name="pipeSecurity">파이프의 액세스 제어 및 감사 보안을 결정하는 개체입니다.</param>
      <exception cref="T:System.NotSupportedException">
        <paramref name="direction" />이(가) <see cref="F:System.IO.Pipes.PipeDirection.InOut" />인 경우</exception>
      <exception cref="T:System.ArgumentOutOfRangeException">
        <paramref name="inheritability" />가 유효한 <see cref="T:System.IO.HandleInheritability" /> 열거형 값으로 설정되지 않은 경우

또는 
<paramref name="bufferSize" />가 0보다 작은 경우.</exception>
      <returns>새 익명 파이프 서버 스트림 인스턴스입니다.</returns>
    </member>
    <member name="T:System.IO.Pipes.NamedPipeServerStreamAcl" />
    <member name="M:System.IO.Pipes.NamedPipeServerStreamAcl.Create(System.String,System.IO.Pipes.PipeDirection,System.Int32,System.IO.Pipes.PipeTransmissionMode,System.IO.Pipes.PipeOptions,System.Int32,System.Int32,System.IO.Pipes.PipeSecurity,System.IO.HandleInheritability,System.IO.Pipes.PipeAccessRights)">
      <summary>지정된 파이프 이름, 파이프 방향, 최대 서버 인스턴스 수, 전송 모드, 파이프 옵션, 권장 입출력 버퍼 크기, 파이프 보안, 상속 모드 및 파이프 액세스 권한을 사용하여 <see cref="T:System.IO.Pipes.NamedPipeServerStream" /> 클래스의 새 인스턴스를 만듭니다.</summary>
      <param name="pipeName">파이프의 이름입니다.</param>
      <param name="direction">파이프의 방향을 결정하는 열거형 값 중 하나입니다.</param>
      <param name="maxNumberOfServerInstances">같은 이름을 공유하는 서버 인스턴스의 최대 수입니다. 이 값에 <see cref="F:System.IO.Pipes.NamedPipeServerStream.MaxAllowedServerInstances" />를 전달할 수 있습니다.</param>
      <param name="transmissionMode">파이프의 전송 모드를 결정하는 열거형 값 중 하나입니다.</param>
      <param name="options">파이프를 열거나 만드는 방법을 결정하는 열거형 값 중 하나입니다.</param>
      <param name="inBufferSize">입력 버퍼 크기입니다.</param>
      <param name="outBufferSize">출력 버퍼 크기입니다.</param>
      <param name="pipeSecurity">파이프의 액세스 제어 및 감사 보안을 결정하는 개체입니다.</param>
      <param name="inheritability">자식 프로세스가 기본 핸들을 상속할 수 있는지 여부를 결정하는 열거형 값 중 하나입니다.</param>
      <param name="additionalAccessRights">파이프의 액세스 권한을 지정하는 열거형 값 중 하나입니다.</param>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="pipeName" />이(가) <see langword="null" />인 경우</exception>
      <exception cref="T:System.ArgumentException">
        <paramref name="pipeName" />가 비어 있는 경우</exception>
      <exception cref="T:System.IO.IOException">
        <paramref name="options" />이(가) <see cref="F:System.IO.Pipes.PipeOptions.None" />인 경우</exception>
      <exception cref="T:System.ArgumentOutOfRangeException">
        <paramref name="options" />에 잘못된 플래그가 포함된 경우

또는

<paramref name="inBufferSize" /> 또는 <paramref name="outBufferSize" />가 0보다 작습니다.

또는

<paramref name="maxNumberOfServerInstances" />는 유효한 숫자가 아닌 경우. 이 값은 1보다 크거나 같고 254보다 작거나 같은 수이거나 <see cref="F:System.IO.Pipes.NamedPipeServerStream.MaxAllowedServerInstances" /> 값으로 설정해야 합니다.

또는

<paramref name="inheritability" />에 잘못된 열거형 값이 포함된 경우

또는

<paramref name="pipeName" />이 예약된 'anonymous'인 경우</exception>
      <returns>새 명명된 파이프 서버 스트림 인스턴스입니다.</returns>
    </member>
    <member name="T:System.IO.Pipes.PipeAccessRights">
      <summary>액세스 및 감사 규칙을 만들 때 사용할 액세스 권한을 정의합니다.</summary>
    </member>
    <member name="F:System.IO.Pipes.PipeAccessRights.AccessSystemSecurity">
      <summary>SACL(시스템 액세스 제어 목록)을 변경할 수 있는 권한을 지정합니다.</summary>
    </member>
    <member name="F:System.IO.Pipes.PipeAccessRights.ChangePermissions">
      <summary>파이프와 관련된 보안 및 감사 규칙을 변경할 수 있는 권한을 지정합니다.</summary>
    </member>
    <member name="F:System.IO.Pipes.PipeAccessRights.CreateNewInstance">
      <summary>새 파이프를 만들 수 있는 권한을 지정합니다. 이 권한을 설정하면 <see cref="F:System.IO.Pipes.PipeAccessRights.Synchronize" /> 권한도 설정됩니다.</summary>
    </member>
    <member name="F:System.IO.Pipes.PipeAccessRights.Delete">
      <summary>파이프를 삭제할 수 있는 권한을 지정합니다.</summary>
    </member>
    <member name="F:System.IO.Pipes.PipeAccessRights.FullControl">
      <summary>파이프에 대한 모든 권한을 실행하고 액세스 제어 및 감사 규칙을 수정할 수 있는 권한을 지정합니다. 이 값은 이 열거형에 포함된 모든 권한의 조합을 나타냅니다.</summary>
    </member>
    <member name="F:System.IO.Pipes.PipeAccessRights.Read">
      <summary>파이프에서 읽을 수 있는 권한을 지정합니다. 이 권한에는 <see cref="F:System.IO.Pipes.PipeAccessRights.ReadAttributes" />, <see cref="F:System.IO.Pipes.PipeAccessRights.ReadData" />, <see cref="F:System.IO.Pipes.PipeAccessRights.ReadExtendedAttributes" /> 및 <see cref="F:System.IO.Pipes.PipeAccessRights.ReadPermissions" /> 권한이 포함됩니다.</summary>
    </member>
    <member name="F:System.IO.Pipes.PipeAccessRights.ReadAttributes">
      <summary>파이프에서 파일 시스템 특성을 읽을 수 있는 권한을 지정합니다. 여기에는 데이터, 확장된 파일 시스템 특성 또는 액세스 규칙과 감사 규칙을 읽을 수 있는 권한이 포함되지 않습니다.</summary>
    </member>
    <member name="F:System.IO.Pipes.PipeAccessRights.ReadData">
      <summary>파이프에서 데이터를 읽을 수 있는 권한을 지정합니다. 여기에는 파일 시스템 특성, 확장된 파일 시스템 특성 또는 액세스 규칙과 감사 규칙을 읽을 수 있는 권한이 포함되지 않습니다.</summary>
    </member>
    <member name="F:System.IO.Pipes.PipeAccessRights.ReadExtendedAttributes">
      <summary>파이프에서 확장된 파일 시스템 특성을 읽을 수 있는 권한을 지정합니다. 여기에는 데이터, 파일 시스템 특성 또는 액세스 규칙과 감사 규칙을 읽을 수 있는 권한이 포함되지 않습니다.</summary>
    </member>
    <member name="F:System.IO.Pipes.PipeAccessRights.ReadPermissions">
      <summary>파이프에서 액세스 및 감사 규칙을 읽을 수 있는 권한을 지정합니다. 여기에는 데이터, 파일 시스템 특성 또는 확장된 파일 시스템 특성을 읽을 수 있는 권한이 포함되지 않습니다.</summary>
    </member>
    <member name="F:System.IO.Pipes.PipeAccessRights.ReadWrite">
      <summary>파이프에서 읽고 쓸 수 있는 권한을 지정합니다. 이 권한에는 <see cref="F:System.IO.Pipes.PipeAccessRights.ReadAttributes" />, <see cref="F:System.IO.Pipes.PipeAccessRights.ReadData" />, <see cref="F:System.IO.Pipes.PipeAccessRights.ReadExtendedAttributes" />, <see cref="F:System.IO.Pipes.PipeAccessRights.ReadPermissions" />, <see cref="F:System.IO.Pipes.PipeAccessRights.WriteAttributes" />, <see cref="F:System.IO.Pipes.PipeAccessRights.WriteData" /> 및 <see cref="F:System.IO.Pipes.PipeAccessRights.WriteExtendedAttributes" /> 권한이 포함됩니다.</summary>
    </member>
    <member name="F:System.IO.Pipes.PipeAccessRights.Synchronize">
      <summary>파이프 핸들이 I/O 작업 완료와 동기화될 때까지 애플리케이션이 대기할 수 있는지 여부를 지정합니다. 이 값은 파이프에 대한 액세스를 허용하는 경우 자동으로 설정되고, 파이프에 대한 액세스를 거부하는 경우 자동으로 제외됩니다. 파이프를 만들 권한에는 이 값이 필요합니다. 파이프를 만들 때 이 값을 명시적으로 설정하지 않으면 값이 자동으로 설정됩니다.</summary>
    </member>
    <member name="F:System.IO.Pipes.PipeAccessRights.TakeOwnership">
      <summary>파이프의 소유자를 변경할 수 있는 권한을 지정합니다. 파이프의 소유자는 해당 리소스에 대한 모든 권한을 갖습니다.</summary>
    </member>
    <member name="F:System.IO.Pipes.PipeAccessRights.Write">
      <summary>파이프에 쓸 수 있는 권한을 지정합니다. 이 권한에는 <see cref="F:System.IO.Pipes.PipeAccessRights.WriteAttributes" />, <see cref="F:System.IO.Pipes.PipeAccessRights.WriteData" /> 및 <see cref="F:System.IO.Pipes.PipeAccessRights.WriteExtendedAttributes" /> 권한이 포함됩니다.</summary>
    </member>
    <member name="F:System.IO.Pipes.PipeAccessRights.WriteAttributes">
      <summary>파이프에 파일 시스템 특성을 쓸 수 있는 권한을 지정합니다. 여기에는 데이터 또는 확장된 파일 시스템 특성을 쓸 수 있는 권한이 포함되지 않습니다.</summary>
    </member>
    <member name="F:System.IO.Pipes.PipeAccessRights.WriteData">
      <summary>파이프에 데이터를 쓸 수 있는 권한을 지정합니다. 여기에는 파일 시스템 특성 또는 확장된 파일 시스템 특성을 쓸 수 있는 권한이 포함되지 않습니다.</summary>
    </member>
    <member name="F:System.IO.Pipes.PipeAccessRights.WriteExtendedAttributes">
      <summary>파이프에 확장된 파일 시스템 특성을 쓸 수 있는 권한을 지정합니다. 여기에는 파일 특성 또는 데이터를 쓸 수 있는 권한이 포함되지 않습니다.</summary>
    </member>
    <member name="T:System.IO.Pipes.PipeAccessRule">
      <summary>파이프에 대한 액세스 규칙을 정의하는 ACE(액세스 제어 항목)를 추상화하여 나타냅니다.</summary>
    </member>
    <member name="M:System.IO.Pipes.PipeAccessRule.#ctor(System.Security.Principal.IdentityReference,System.IO.Pipes.PipeAccessRights,System.Security.AccessControl.AccessControlType)">
      <summary>지정된 ID, 파이프 액세스 권한 및 액세스 제어 형식을 사용하여 <see cref="T:System.IO.Pipes.PipeAccessRule" /> 클래스의 새 인스턴스를 초기화합니다.</summary>
      <param name="identity">사용자 계정에 대한 참조를 캡슐화하는 <see cref="T:System.Security.Principal.IdentityReference" /> 개체입니다.</param>
      <param name="rights">액세스 규칙과 관련된 작업 형식을 지정하는 <see cref="T:System.IO.Pipes.PipeAccessRights" /> 값 중 하나입니다.</param>
      <param name="type">작업의 허용 여부를 지정하는 <see cref="T:System.Security.AccessControl.AccessControlType" /> 값 중 하나입니다.</param>
    </member>
    <member name="M:System.IO.Pipes.PipeAccessRule.#ctor(System.String,System.IO.Pipes.PipeAccessRights,System.Security.AccessControl.AccessControlType)">
      <summary>지정된 ID, 파이프 액세스 권한 및 액세스 제어 형식을 사용하여 <see cref="T:System.IO.Pipes.PipeAccessRule" /> 클래스의 새 인스턴스를 초기화합니다.</summary>
      <param name="identity">사용자 계정의 이름입니다.</param>
      <param name="rights">액세스 규칙과 관련된 작업 형식을 지정하는 <see cref="T:System.IO.Pipes.PipeAccessRights" /> 값 중 하나입니다.</param>
      <param name="type">작업의 허용 여부를 지정하는 <see cref="T:System.Security.AccessControl.AccessControlType" /> 값 중 하나입니다.</param>
    </member>
    <member name="P:System.IO.Pipes.PipeAccessRule.PipeAccessRights">
      <summary>현재 <see cref="T:System.IO.Pipes.PipeAccessRights" /> 개체와 관련된 <see cref="T:System.IO.Pipes.PipeAccessRule" /> 플래그를 가져옵니다.</summary>
      <returns>
        <see cref="T:System.IO.Pipes.PipeAccessRights" /> 값의 비트 조합입니다.</returns>
    </member>
    <member name="T:System.IO.Pipes.PipeAuditRule">
      <summary>파이프에 대한 감사 규칙을 정의하는 ACE(액세스 제어 항목)를 추상화하여 나타냅니다.</summary>
    </member>
    <member name="M:System.IO.Pipes.PipeAuditRule.#ctor(System.Security.Principal.IdentityReference,System.IO.Pipes.PipeAccessRights,System.Security.AccessControl.AuditFlags)">
      <summary>
        <see cref="T:System.IO.Pipes.PipeAuditRule" /> 개체에 지정된 사용자 계정에 대해 <see cref="T:System.Security.Principal.IdentityReference" /> 클래스의 새 인스턴스를 초기화합니다.</summary>
      <param name="identity">사용자 계정에 대한 참조를 캡슐화하는 <see cref="T:System.Security.Principal.IdentityReference" /> 개체입니다.</param>
      <param name="rights">액세스 규칙과 관련된 작업 형식을 지정하는 <see cref="T:System.IO.Pipes.PipeAccessRights" /> 값 중 하나입니다.</param>
      <param name="flags">감사를 수행할 시점을 지정하는 <see cref="T:System.Security.AccessControl.AuditFlags" /> 값 중 하나입니다.</param>
    </member>
    <member name="M:System.IO.Pipes.PipeAuditRule.#ctor(System.String,System.IO.Pipes.PipeAccessRights,System.Security.AccessControl.AuditFlags)">
      <summary>명명된 사용자 계정에 대해 <see cref="T:System.IO.Pipes.PipeAuditRule" /> 클래스의 새 인스턴스를 초기화합니다.</summary>
      <param name="identity">사용자 계정의 이름입니다.</param>
      <param name="rights">액세스 규칙과 관련된 작업 형식을 지정하는 <see cref="T:System.IO.Pipes.PipeAccessRights" /> 값 중 하나입니다.</param>
      <param name="flags">감사를 수행할 시점을 지정하는 <see cref="T:System.Security.AccessControl.AuditFlags" /> 값 중 하나입니다.</param>
    </member>
    <member name="P:System.IO.Pipes.PipeAuditRule.PipeAccessRights">
      <summary>현재 <see cref="T:System.IO.Pipes.PipeAccessRights" /> 개체와 관련된 <see cref="T:System.IO.Pipes.PipeAuditRule" /> 플래그를 가져옵니다.</summary>
      <returns>
        <see cref="T:System.IO.Pipes.PipeAccessRights" /> 값의 비트 조합입니다.</returns>
    </member>
    <member name="T:System.IO.Pipes.PipesAclExtensions">
      <summary>파이프 스트림의 ACL(액세스 제어 목록) 보안 특성을 조작하기 위한 Windows 관련 정적 확장 메서드를 제공합니다.</summary>
    </member>
    <member name="M:System.IO.Pipes.PipesAclExtensions.GetAccessControl(System.IO.Pipes.PipeStream)">
      <summary>파이프 스트림의 보안 정보를 반환합니다.</summary>
      <param name="stream">보안 정보를 가져올 기존 파이프 스트림입니다.</param>
      <returns>파이프 스트림의 모든 액세스 제어 섹션에 대한 보안 설명자입니다.</returns>
    </member>
    <member name="M:System.IO.Pipes.PipesAclExtensions.SetAccessControl(System.IO.Pipes.PipeStream,System.IO.Pipes.PipeSecurity)">
      <summary>기존 파이프 스트림의 보안 특성을 변경합니다.</summary>
      <param name="stream">기존 파이프 스트림입니다.</param>
      <param name="pipeSecurity">파이프 스트림에 적용할 보안 정보입니다.</param>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="pipeSecurity" />이(가) <see langword="null" />인 경우</exception>
      <exception cref="T:System.IO.IOException">
        <paramref name="stream" />은 연결이 끊어진 <see cref="T:System.IO.Pipes.NamedPipeClientStream" /> 인스턴스입니다.</exception>
    </member>
    <member name="T:System.IO.Pipes.PipeSecurity">
      <summary>파이프에 대한 액세스 제어 및 감사 보안을 나타냅니다.</summary>
    </member>
    <member name="M:System.IO.Pipes.PipeSecurity.#ctor">
      <summary>
        <see cref="T:System.IO.Pipes.PipeSecurity" /> 클래스의 새 인스턴스를 초기화합니다.</summary>
    </member>
    <member name="M:System.IO.Pipes.PipeSecurity.AccessRuleFactory(System.Security.Principal.IdentityReference,System.Int32,System.Boolean,System.Security.AccessControl.InheritanceFlags,System.Security.AccessControl.PropagationFlags,System.Security.AccessControl.AccessControlType)">
      <summary>지정된 값을 사용하여 <see cref="T:System.Security.AccessControl.AccessRule" /> 클래스의 새 인스턴스를 초기화합니다.</summary>
      <param name="identityReference">액세스 규칙이 적용되는 ID입니다. 이는 <see cref="T:System.Security.Principal.SecurityIdentifier" /> 개체로 캐스팅할 수 있는 개체여야 합니다.</param>
      <param name="accessMask">이 규칙의 액세스 마스크입니다. 액세스 마스크는 익명 비트의 32비트 컬렉션으로, 비트의 의미는 개별 통합자가 정의합니다.</param>
      <param name="isInherited">이 규칙이 부모 컨테이너에서 상속되면 <see langword="true" />이고, 그렇지 않으면 <see langword="false" />입니다.</param>
      <param name="inheritanceFlags">액세스 규칙의 상속 속성을 지정하는 <see cref="T:System.Security.AccessControl.InheritanceFlags" /> 값 중 하나입니다.</param>
      <param name="propagationFlags">상속된 액세스 규칙을 자동으로 전파할지 여부를 지정하는 <see cref="T:System.Security.AccessControl.PropagationFlags" /> 값 중 하나입니다. <paramref name="inheritanceFlags" />가 <see cref="F:System.Security.AccessControl.InheritanceFlags.None" />으로 설정되면 전파 플래그는 무시됩니다.</param>
      <param name="type">유효한 액세스 제어 형식을 지정합니다.</param>
      <exception cref="T:System.ArgumentOutOfRangeException">
        <paramref name="accessMask" />, <paramref name="inheritanceFlags" />, <paramref name="propagationFlags" /> 또는 <paramref name="type" />에 잘못된 값을 지정하는 경우</exception>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="identityReference" />이(가) <see langword="null" />인 경우  
  
또는 
 <paramref name="accessMask" />가 0입니다.</exception>
      <exception cref="T:System.ArgumentException">
        <paramref name="identityReference" />의 형식이 <see cref="T:System.Security.Principal.SecurityIdentifier" />도 아니고 <see cref="T:System.Security.Principal.NTAccount" /> 형식으로 변환할 수 있는 <see cref="T:System.Security.Principal.SecurityIdentifier" /> 같은 형식도 아닌 경우</exception>
      <returns>이 메서드가 만드는 <see cref="T:System.Security.AccessControl.AccessRule" /> 개체입니다.</returns>
    </member>
    <member name="M:System.IO.Pipes.PipeSecurity.AddAccessRule(System.IO.Pipes.PipeAccessRule)">
      <summary>현재 <see cref="T:System.IO.Pipes.PipeSecurity" /> 개체와 관련된 DACL(임의 액세스 제어 목록)에 액세스 규칙을 추가합니다.</summary>
      <param name="rule">추가할 액세스 규칙입니다.</param>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="rule" /> 매개 변수가 <see langword="null" />인 경우</exception>
    </member>
    <member name="M:System.IO.Pipes.PipeSecurity.AddAuditRule(System.IO.Pipes.PipeAuditRule)">
      <summary>현재 <see cref="T:System.IO.Pipes.PipeSecurity" /> 개체와 관련된 SACL(시스템 액세스 제어 목록)에 감사 규칙을 추가합니다.</summary>
      <param name="rule">추가할 감사 규칙입니다.</param>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="rule" /> 매개 변수가 <see langword="null" />인 경우</exception>
    </member>
    <member name="M:System.IO.Pipes.PipeSecurity.AuditRuleFactory(System.Security.Principal.IdentityReference,System.Int32,System.Boolean,System.Security.AccessControl.InheritanceFlags,System.Security.AccessControl.PropagationFlags,System.Security.AccessControl.AuditFlags)">
      <summary>지정된 값을 사용하여 <see cref="T:System.Security.AccessControl.AuditRule" /> 클래스의 새 인스턴스를 초기화합니다.</summary>
      <param name="identityReference">액세스 규칙이 적용되는 ID입니다. 이는 <see cref="T:System.Security.Principal.SecurityIdentifier" /> 개체로 캐스팅할 수 있는 개체여야 합니다.</param>
      <param name="accessMask">이 규칙의 액세스 마스크입니다. 액세스 마스크는 익명 비트의 32비트 컬렉션으로, 비트의 의미는 개별 통합자가 정의합니다.</param>
      <param name="isInherited">이 규칙이 부모 컨테이너에서 상속되면 <see langword="true" />이고, 그렇지 않으면 false입니다.</param>
      <param name="inheritanceFlags">액세스 규칙의 상속 속성을 지정하는 <see cref="T:System.Security.AccessControl.InheritanceFlags" /> 값 중 하나입니다.</param>
      <param name="propagationFlags">상속된 액세스 규칙을 자동으로 전파할지 여부를 지정하는 <see cref="T:System.Security.AccessControl.PropagationFlags" /> 값 중 하나입니다. <paramref name="inheritanceFlags" />가 <see cref="F:System.Security.AccessControl.InheritanceFlags.None" />으로 설정되면 전파 플래그는 무시됩니다.</param>
      <param name="flags">유효한 액세스 제어 형식을 지정하는 <see cref="T:System.Security.AccessControl.AuditFlags" /> 값 중 하나입니다.</param>
      <exception cref="T:System.ArgumentOutOfRangeException">
        <paramref name="accessMask" />, <paramref name="inheritanceFlags" />, <paramref name="propagationFlags" /> 또는 <paramref name="flags" /> 속성에 잘못된 값을 지정한 경우</exception>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="identityReference" /> 속성은 <see langword="null" />입니다.  
  
또는 
<paramref name="accessMask" /> 속성이 0인 경우</exception>
      <exception cref="T:System.ArgumentException">
        <paramref name="identityReference" /> 속성이 <see cref="T:System.Security.Principal.SecurityIdentifier" /> 형식도 아니고 <see cref="T:System.Security.Principal.NTAccount" /> 형식으로 변환할 수 있는 <see cref="T:System.Security.Principal.SecurityIdentifier" /> 같은 형식도 아닌 경우</exception>
      <returns>이 메서드가 만드는 <see cref="T:System.Security.AccessControl.AuditRule" /> 개체입니다.</returns>
    </member>
    <member name="M:System.IO.Pipes.PipeSecurity.Persist(System.Runtime.InteropServices.SafeHandle)">
      <summary>현재 <see cref="T:System.IO.Pipes.PipeSecurity" /> 개체와 관련된 보안 설명자의 지정된 섹션을 영구 스토리지에 저장합니다.</summary>
      <param name="handle">현재 <see cref="T:System.IO.Pipes.PipeSecurity" /> 개체가 관련된 보안 개체의 핸들입니다.</param>
    </member>
    <member name="M:System.IO.Pipes.PipeSecurity.Persist(System.String)">
      <summary>현재 <see cref="T:System.IO.Pipes.PipeSecurity" /> 개체와 관련된 보안 설명자의 지정된 섹션을 영구 스토리지에 저장합니다.</summary>
      <param name="name">현재 <see cref="T:System.IO.Pipes.PipeSecurity" /> 개체와 관련된 보안 개체의 이름입니다.</param>
    </member>
    <member name="M:System.IO.Pipes.PipeSecurity.RemoveAccessRule(System.IO.Pipes.PipeAccessRule)">
      <summary>현재 <see cref="T:System.IO.Pipes.PipeSecurity" /> 개체와 관련된 DACL(임의 액세스 제어 목록)에서 액세스 규칙을 제거합니다.</summary>
      <param name="rule">제거할 액세스 규칙입니다.</param>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="rule" /> 매개 변수가 <see langword="null" />인 경우</exception>
      <returns>작업에 성공하면 <see langword="true" />이고, 그렇지 않으면 <see langword="false" />입니다.</returns>
    </member>
    <member name="M:System.IO.Pipes.PipeSecurity.RemoveAccessRuleSpecific(System.IO.Pipes.PipeAccessRule)">
      <summary>현재 <see cref="T:System.IO.Pipes.PipeSecurity" /> 개체와 관련된 DACL(임의 액세스 제어 목록)에서 지정된 액세스 규칙을 제거합니다.</summary>
      <param name="rule">제거할 액세스 규칙입니다.</param>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="rule" /> 매개 변수가 <see langword="null" />인 경우</exception>
    </member>
    <member name="M:System.IO.Pipes.PipeSecurity.RemoveAuditRule(System.IO.Pipes.PipeAuditRule)">
      <summary>현재 <see cref="T:System.IO.Pipes.PipeSecurity" /> 개체와 관련된 SACL(시스템 액세스 제어 목록)에서 감사 규칙을 제거합니다.</summary>
      <param name="rule">제거할 감사 규칙입니다.</param>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="rule" /> 매개 변수가 <see langword="null" />인 경우</exception>
      <returns>감사 규칙이 성공적으로 제거되면 <see langword="true" />이고, 그렇지 않으면 <see langword="false" />입니다.</returns>
    </member>
    <member name="M:System.IO.Pipes.PipeSecurity.RemoveAuditRuleAll(System.IO.Pipes.PipeAuditRule)">
      <summary>현재 <see cref="T:System.IO.Pipes.PipeSecurity" /> 개체와 관련된 SACL(시스템 액세스 제어 목록)에서 지정된 감사 규칙과 동일한 보안 식별자가 있는 모든 감사 규칙을 제거합니다.</summary>
      <param name="rule">제거할 감사 규칙입니다.</param>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="rule" /> 매개 변수가 <see langword="null" />인 경우</exception>
    </member>
    <member name="M:System.IO.Pipes.PipeSecurity.RemoveAuditRuleSpecific(System.IO.Pipes.PipeAuditRule)">
      <summary>현재 <see cref="T:System.IO.Pipes.PipeSecurity" /> 개체와 관련된 SACL(시스템 액세스 제어 목록)에서 지정된 감사 규칙을 제거합니다.</summary>
      <param name="rule">제거할 감사 규칙입니다.</param>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="rule" /> 매개 변수가 <see langword="null" />인 경우</exception>
    </member>
    <member name="M:System.IO.Pipes.PipeSecurity.ResetAccessRule(System.IO.Pipes.PipeAccessRule)">
      <summary>현재 <see cref="T:System.IO.Pipes.PipeSecurity" /> 개체와 관련된 DACL(임의 액세스 제어 목록)에서 모든 액세스 규칙을 제거한 다음 지정된 액세스 규칙을 추가합니다.</summary>
      <param name="rule">추가할 액세스 규칙입니다.</param>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="rule" /> 매개 변수가 <see langword="null" />인 경우</exception>
    </member>
    <member name="M:System.IO.Pipes.PipeSecurity.SetAccessRule(System.IO.Pipes.PipeAccessRule)">
      <summary>현재 <see cref="T:System.IO.Pipes.PipeSecurity" /> 개체와 관련된 DACL(임의 액세스 제어 목록)에서 액세스 규칙을 설정합니다.</summary>
      <param name="rule">설정할 규칙입니다.</param>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="rule" /> 매개 변수가 <see langword="null" />인 경우</exception>
    </member>
    <member name="M:System.IO.Pipes.PipeSecurity.SetAuditRule(System.IO.Pipes.PipeAuditRule)">
      <summary>현재 <see cref="T:System.IO.Pipes.PipeSecurity" /> 개체와 관련된 SACL(시스템 액세스 제어 목록)에서 감사 규칙을 설정합니다.</summary>
      <param name="rule">설정할 규칙입니다.</param>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="rule" /> 매개 변수가 <see langword="null" />인 경우</exception>
    </member>
    <member name="P:System.IO.Pipes.PipeSecurity.AccessRightType">
      <summary>현재 <see cref="T:System.Type" /> 개체와 관련된 보안 개체의 <see cref="T:System.IO.Pipes.PipeSecurity" />을 가져옵니다.</summary>
      <returns>현재 <see cref="T:System.IO.Pipes.PipeSecurity" /> 개체와 관련된 보안 개체의 형식입니다.</returns>
    </member>
    <member name="P:System.IO.Pipes.PipeSecurity.AccessRuleType">
      <summary>현재 <see cref="T:System.Type" /> 개체의 액세스 규칙과 관련된 개체의 <see cref="T:System.IO.Pipes.PipeSecurity" />을 가져옵니다.</summary>
      <returns>현재 <see cref="T:System.IO.Pipes.PipeSecurity" /> 개체의 액세스 규칙과 관련된 개체의 형식입니다.</returns>
    </member>
    <member name="P:System.IO.Pipes.PipeSecurity.AuditRuleType">
      <summary>현재 <see cref="T:System.Type" /> 개체의 감사 규칙과 관련된 <see cref="T:System.IO.Pipes.PipeSecurity" /> 개체를 가져옵니다.</summary>
      <returns>현재 <see cref="T:System.IO.Pipes.PipeSecurity" /> 개체의 감사 규칙과 관련된 개체의 형식입니다.</returns>
    </member>
  </members>
</doc>