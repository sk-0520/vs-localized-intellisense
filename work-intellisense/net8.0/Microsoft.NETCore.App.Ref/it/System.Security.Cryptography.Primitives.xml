<?xml version="1.0" encoding="utf-8"?>
<doc>
  <assembly>
    <name>System.Security.Cryptography.Primitives</name>
  </assembly>
  <members>
    <member name="T:System.Security.Cryptography.AsymmetricAlgorithm">
      <summary>Rappresenta la classe base astratta dalla quale devono ereditare tutte le implementazioni di algoritmi asimmetrici.</summary>
    </member>
    <member name="F:System.Security.Cryptography.AsymmetricAlgorithm.KeySizeValue">
      <summary>Rappresenta la dimensione in bit del modulo della chiave usato dall'algoritmo asimmetrico.</summary>
    </member>
    <member name="F:System.Security.Cryptography.AsymmetricAlgorithm.LegalKeySizesValue">
      <summary>Specifica le dimensioni delle chiavi supportate dall'algoritmo asimmetrico.</summary>
    </member>
    <member name="M:System.Security.Cryptography.AsymmetricAlgorithm.#ctor">
      <summary>Inizializza una nuova istanza della classe <see cref="T:System.Security.Cryptography.AsymmetricAlgorithm" />.</summary>
      <exception cref="T:System.Security.Cryptography.CryptographicException">L'implementazione della classe derivata non è valida.</exception>
    </member>
    <member name="M:System.Security.Cryptography.AsymmetricAlgorithm.Clear">
      <summary>Rilascia tutte le risorse usate dalla classe <see cref="T:System.Security.Cryptography.AsymmetricAlgorithm" />.</summary>
    </member>
    <member name="M:System.Security.Cryptography.AsymmetricAlgorithm.Create">
      <summary>Crea un oggetto predefinito di crittografia usato per eseguire l'algoritmo asimmetrico.</summary>
      <returns>Nuova istanza di <see cref="T:System.Security.Cryptography.RSACryptoServiceProvider" />, a meno che le impostazioni predefinite non siano state modificate tramite l'elemento &lt;cryptoClass&gt;.</returns>
    </member>
    <member name="M:System.Security.Cryptography.AsymmetricAlgorithm.Create(System.String)">
      <summary>Crea un'istanza dell'implementazione specificata di un algoritmo asimmetrico.</summary>
      <param name="algName">L'implementazione dell'algoritmo asimmetrico da usare. La tabella seguente illustra i valori validi per il parametro <paramref name="algName" /> e gli algoritmi a cui sono mappati.  
  
 <list type="table"><listheader><term> Valore del parametro</term><description> implementa</description></listheader><item><term> System.Security.Cryptography.AsymmetricAlgorithm</term><description><see cref="T:System.Security.Cryptography.AsymmetricAlgorithm" /></description></item><item><term> RSA</term><description><see cref="T:System.Security.Cryptography.RSA" /></description></item><item><term> System.Security.Cryptography.RSA</term><description><see cref="T:System.Security.Cryptography.RSA" /></description></item><item><term> DSA</term><description><see cref="T:System.Security.Cryptography.DSA" /></description></item><item><term> System.Security.Cryptography.DSA</term><description><see cref="T:System.Security.Cryptography.DSA" /></description></item><item><term> ECDsa</term><description><see cref="T:System.Security.Cryptography.ECDsa" /></description></item><item><term> ECDsaCng</term><description><see cref="T:System.Security.Cryptography.ECDsaCng" /></description></item><item><term> System.Security.Cryptography.ECDsaCng</term><description><see cref="T:System.Security.Cryptography.ECDsaCng" /></description></item><item><term> ECDH</term><description><see cref="T:System.Security.Cryptography.ECDiffieHellman" /></description></item><item><term> ECDiffieHellman</term><description><see cref="T:System.Security.Cryptography.ECDiffieHellman" /></description></item><item><term> ECDiffieHellmanCng</term><description><see cref="T:System.Security.Cryptography.ECDiffieHellmanCng" /></description></item><item><term> System.Security.Cryptography.ECDiffieHellmanCng</term><description><see cref="T:System.Security.Cryptography.ECDiffieHellmanCng" /></description></item></list></param>
      <returns>Nuova istanza dell'implementazione dell'algoritmo asimmetrico specificato.</returns>
    </member>
    <member name="M:System.Security.Cryptography.AsymmetricAlgorithm.Dispose">
      <summary>Rilascia tutte le risorse usate dall'istanza corrente della classe <see cref="T:System.Security.Cryptography.AsymmetricAlgorithm" />.</summary>
    </member>
    <member name="M:System.Security.Cryptography.AsymmetricAlgorithm.Dispose(System.Boolean)">
      <summary>Rilascia le risorse non gestite usate dalla classe <see cref="T:System.Security.Cryptography.AsymmetricAlgorithm" /> e facoltativamente le risorse gestite.</summary>
      <param name="disposing">
        <see langword="true" /> per rilasciare sia le risorse gestite sia quelle non gestite; <see langword="false" /> per rilasciare solo le risorse non gestite.</param>
    </member>
    <member name="M:System.Security.Cryptography.AsymmetricAlgorithm.ExportEncryptedPkcs8PrivateKey(System.ReadOnlySpan{System.Byte},System.Security.Cryptography.PbeParameters)">
      <summary>Esporta la chiave corrente nel formato PKCS#8 EncryptedPrivateKeyInfo con una password basata su byte.</summary>
      <param name="passwordBytes">Byte da usare come password per la crittografia del materiale della chiave.</param>
      <param name="pbeParameters">Parametri della crittografia basata su password (PBE) da usare per la crittografia del materiale della chiave.</param>
      <exception cref="T:System.Security.Cryptography.CryptographicException">Non è stato possibile esportare la chiave.

-oppure-

<paramref name="pbeParameters" /> indica che è necessario usare <see cref="F:System.Security.Cryptography.PbeEncryptionAlgorithm.TripleDes3KeyPkcs12" />, che richiede password basate su <see cref="T:System.Char" />.</exception>
      <returns>Matrice di byte contenente la rappresentazione PKCS#8 EncryptedPrivateKeyInfo della chiave.</returns>
    </member>
    <member name="M:System.Security.Cryptography.AsymmetricAlgorithm.ExportEncryptedPkcs8PrivateKey(System.ReadOnlySpan{System.Char},System.Security.Cryptography.PbeParameters)">
      <summary>Esporta la chiave corrente nel formato PKCS#8 EncryptedPrivateKeyInfo con una password basata su caratteri.</summary>
      <param name="password">Password da usare per la crittografia del materiale della chiave.</param>
      <param name="pbeParameters">Parametri della crittografia basata su password (PBE) da usare per la crittografia del materiale della chiave.</param>
      <exception cref="T:System.Security.Cryptography.CryptographicException">Non è stato possibile esportare la chiave.</exception>
      <returns>Matrice di byte contenente la rappresentazione PKCS#8 EncryptedPrivateKeyInfo della chiave.</returns>
    </member>
    <member name="M:System.Security.Cryptography.AsymmetricAlgorithm.ExportPkcs8PrivateKey">
      <summary>Esporta la chiave corrente nel formato PKCS#8 PrivateKeyInfo.</summary>
      <exception cref="T:System.Security.Cryptography.CryptographicException">Non è stato possibile esportare la chiave.</exception>
      <returns>Matrice di byte contenente la rappresentazione PKCS#8 PrivateKeyInfo della chiave.</returns>
    </member>
    <member name="M:System.Security.Cryptography.AsymmetricAlgorithm.ExportSubjectPublicKeyInfo">
      <summary>Esporta la parte della chiave pubblica della chiave corrente nel formato X.509 SubjectPublicKeyInfo.</summary>
      <returns>Matrice di byte contenente la rappresentazione X.509 SubjectPublicKeyInfo della parte della chiave pubblica della chiave.</returns>
    </member>
    <member name="M:System.Security.Cryptography.AsymmetricAlgorithm.FromXmlString(System.String)">
      <summary>Quando ne viene eseguito l'override in una classe derivata, ricostruisce un oggetto <see cref="T:System.Security.Cryptography.AsymmetricAlgorithm" /> da una stringa XML; in caso contrario, genera <see cref="T:System.NotImplementedException" />.</summary>
      <param name="xmlString">Stringa XML da usare per ricostruire l'oggetto <see cref="T:System.Security.Cryptography.AsymmetricAlgorithm" />.</param>
    </member>
    <member name="M:System.Security.Cryptography.AsymmetricAlgorithm.ImportEncryptedPkcs8PrivateKey(System.ReadOnlySpan{System.Byte},System.ReadOnlySpan{System.Byte},System.Int32@)">
      <summary>Quando sottoposto a override in una classe derivata, importa la coppia di chiavi pubblica/privata da una struttura PKCS#8 EncryptedPrivateKeyInfo dopo la decrittografia con una password basata su byte, sostituendo le chiavi per questo oggetto.</summary>
      <param name="passwordBytes">Byte da usare come password per la decrittografia del materiale della chiave.</param>
      <param name="source">Byte di una struttura PKCS#8 EncryptedPrivateKeyInfo nella codifica ASN.1-BER.</param>
      <param name="bytesRead">Quando termina, questo metodo contiene un valore che indica il numero di byte letti da <paramref name="source" />. Questo parametro viene trattato come non inizializzato.</param>
      <exception cref="T:System.Security.Cryptography.CryptographicException">La password non è corretta.

-oppure-

Il contenuto di <paramref name="source" /> indica che la funzione di derivazione della chiave (KDF) da applicare è la funzione PKCS#12 legacy, che richiede password basate su <see cref="T:System.Char" />.

-oppure-

Il contenuto di <paramref name="source" /> non rappresenta una struttura PKCS#8 EncryptedPrivateKeyInfo con codifica ASN.1-BER.

-oppure-

Il contenuto di <paramref name="source" /> indica che la chiave è per un algoritmo diverso dall'algoritmo rappresentato da questa istanza.

-oppure-

Il contenuto di <paramref name="source" /> rappresenta la chiave in un formato non supportato.

-oppure-

Importazione della chiave specifica dell'algoritmo non riuscita.</exception>
      <exception cref="T:System.NotImplementedException">Un tipo derivato non ha eseguito l'override di questo membro.</exception>
    </member>
    <member name="M:System.Security.Cryptography.AsymmetricAlgorithm.ImportEncryptedPkcs8PrivateKey(System.ReadOnlySpan{System.Char},System.ReadOnlySpan{System.Byte},System.Int32@)">
      <summary>Quando sottoposto a override in una classe derivata, importa la coppia di chiavi pubblica/privata da una struttura PKCS#8 EncryptedPrivateKeyInfo dopo la decrittografia con una password basata su caratteri, sostituendo le chiavi per questo oggetto.</summary>
      <param name="password">Password da usare per la decrittografia del materiale della chiave.</param>
      <param name="source">Byte di una struttura PKCS#8 EncryptedPrivateKeyInfo nella codifica ASN.1-BER.</param>
      <param name="bytesRead">Quando termina, questo metodo contiene un valore che indica il numero di byte letti da <paramref name="source" />. Questo parametro viene trattato come non inizializzato.</param>
      <exception cref="T:System.Security.Cryptography.CryptographicException">La password non è corretta.

-oppure-

Il contenuto di <paramref name="source" /> non rappresenta una struttura PKCS#8 EncryptedPrivateKeyInfo con codifica ASN.1-BER.

-oppure-

Il contenuto di <paramref name="source" /> indica che la chiave è per un algoritmo diverso dall'algoritmo rappresentato da questa istanza.

-oppure-

Il contenuto di <paramref name="source" /> rappresenta la chiave in un formato non supportato.

-oppure-

Importazione della chiave specifica dell'algoritmo non riuscita.</exception>
      <exception cref="T:System.NotImplementedException">Un tipo derivato non ha eseguito l'override di questo membro.</exception>
    </member>
    <member name="M:System.Security.Cryptography.AsymmetricAlgorithm.ImportFromEncryptedPem(System.ReadOnlySpan{System.Char},System.ReadOnlySpan{System.Byte})">
      <summary>Quando ne viene eseguito l'override in una classe derivata, importa una chiave crittografata RFC 7468 con codifica PEM, sostituendo le chiavi per questo oggetto.</summary>
      <param name="input">Testo con codifica PEM della chiave crittografata da importare.</param>
      <param name="passwordBytes">Byte da usare come password per la decrittografia del materiale della chiave.</param>
      <exception cref="T:System.NotImplementedException">Un tipo derivato non ha eseguito l'override di questo membro.</exception>
    </member>
    <member name="M:System.Security.Cryptography.AsymmetricAlgorithm.ImportFromEncryptedPem(System.ReadOnlySpan{System.Char},System.ReadOnlySpan{System.Char})">
      <summary>Quando ne viene eseguito l'override in una classe derivata, importa una chiave crittografata RFC 7468 con codifica PEM, sostituendo le chiavi per questo oggetto.</summary>
      <param name="input">Testo con codifica PEM della chiave crittografata da importare.</param>
      <param name="password">Password da usare per la decrittografia del materiale della chiave.</param>
      <exception cref="T:System.NotImplementedException">Un tipo derivato non ha eseguito l'override di questo membro.</exception>
    </member>
    <member name="M:System.Security.Cryptography.AsymmetricAlgorithm.ImportFromPem(System.ReadOnlySpan{System.Char})">
      <summary>Quando ne viene eseguito l'override in una classe derivata, importa una chiave con codifica testuale RFC 7468, sostituendo le chiavi per questo oggetto.</summary>
      <param name="input">Testo della chiave con codifica PEM da importare.</param>
      <exception cref="T:System.NotImplementedException">Un tipo derivato non ha eseguito l'override di questo membro.</exception>
    </member>
    <member name="M:System.Security.Cryptography.AsymmetricAlgorithm.ImportPkcs8PrivateKey(System.ReadOnlySpan{System.Byte},System.Int32@)">
      <summary>Quando sottoposto a override in una classe derivata, importa la coppia di chiavi pubblica/privata da una struttura PKCS#8 PrivateKeyInfo dopo la decrittografia, sostituendo le chiavi per questo oggetto.</summary>
      <param name="source">Byte di una struttura PKCS#8 PrivateKeyInfo nella codifica ASN.1-BER.</param>
      <param name="bytesRead">Quando termina, questo metodo contiene un valore che indica il numero di byte letti da <paramref name="source" />. Questo parametro viene trattato come non inizializzato.</param>
      <exception cref="T:System.Security.Cryptography.CryptographicException">Il contenuto di <paramref name="source" /> non rappresenta una struttura PKCS#8 PrivateKeyInfo con codifica ASN.1-BER.

-oppure-

Il contenuto di <paramref name="source" /> indica che la chiave è per un algoritmo diverso dall'algoritmo rappresentato da questa istanza.

-oppure-

Il contenuto di <paramref name="source" /> rappresenta la chiave in un formato non supportato.

-oppure-

Importazione della chiave specifica dell'algoritmo non riuscita.</exception>
      <exception cref="T:System.NotImplementedException">Un tipo derivato non ha eseguito l'override di questo membro.</exception>
    </member>
    <member name="M:System.Security.Cryptography.AsymmetricAlgorithm.ImportSubjectPublicKeyInfo(System.ReadOnlySpan{System.Byte},System.Int32@)">
      <summary>Quando sottoposto a override in una classe derivata, importa la chiave pubblica da una struttura X.509 SubjectPublicKeyInfo dopo la decrittografia, sostituendo le chiavi per questo oggetto.</summary>
      <param name="source">Byte di una struttura X.509 SubjectPublicKeyInfo nella codifica ASN.1-DER.</param>
      <param name="bytesRead">Quando termina, questo metodo contiene un valore che indica il numero di byte letti da <paramref name="source" />. Questo parametro viene trattato come non inizializzato.</param>
      <exception cref="T:System.Security.Cryptography.CryptographicException">Il contenuto di <paramref name="source" /> non rappresenta una struttura X.509 SubjectPublicKeyInfo con codifica ASN.1-DER.

-oppure-

Il contenuto di <paramref name="source" /> indica che la chiave è per un algoritmo diverso dall'algoritmo rappresentato da questa istanza.

-oppure-

Il contenuto di <paramref name="source" /> rappresenta la chiave in un formato non supportato.

-oppure-

Importazione della chiave specifica dell'algoritmo non riuscita.</exception>
      <exception cref="T:System.NotImplementedException">Un tipo derivato non ha eseguito l'override di questo membro.</exception>
    </member>
    <member name="M:System.Security.Cryptography.AsymmetricAlgorithm.ToXmlString(System.Boolean)">
      <summary>Quando ne viene eseguito l'override in una classe derivata, crea e restituisce una rappresentazione di stringa XML dell'oggetto <see cref="T:System.Security.Cryptography.AsymmetricAlgorithm" /> corrente; in caso contrario, genera <see cref="T:System.NotImplementedException" />.</summary>
      <param name="includePrivateParameters">
        <see langword="true" /> per includere i parametri privati; in caso contrario, <see langword="false" />.</param>
      <returns>Codifica in forma di stringa XML dell'oggetto <see cref="T:System.Security.Cryptography.AsymmetricAlgorithm" /> corrente.</returns>
    </member>
    <member name="M:System.Security.Cryptography.AsymmetricAlgorithm.TryExportEncryptedPkcs8PrivateKey(System.ReadOnlySpan{System.Byte},System.Security.Cryptography.PbeParameters,System.Span{System.Byte},System.Int32@)">
      <summary>Quando sottoposto a override in una classe derivata, tenta di esportare la chiave corrente nel formato PKCS#8 EncryptedPrivateKeyInfo in un buffer specificato, usando una password basata su byte.</summary>
      <param name="passwordBytes">Byte da usare come password per la crittografia del materiale della chiave.</param>
      <param name="pbeParameters">Parametri della crittografia basata su password (PBE) da usare per la crittografia del materiale della chiave.</param>
      <param name="destination">Intervallo di byte per la ricezione dei dati PKCS#8 EncryptedPrivateKeyInfo.</param>
      <param name="bytesWritten">Quando termina, questo metodo contiene un valore che indica il numero di byte scritti in <paramref name="destination" />. Questo parametro viene trattato come non inizializzato.</param>
      <exception cref="T:System.Security.Cryptography.CryptographicException">Non è stato possibile esportare la chiave.

-oppure-

<paramref name="pbeParameters" /> indica che è necessario usare <see cref="F:System.Security.Cryptography.PbeEncryptionAlgorithm.TripleDes3KeyPkcs12" />, che richiede password basate su <see cref="T:System.Char" />.</exception>
      <exception cref="T:System.NotImplementedException">Un tipo derivato non ha eseguito l'override di questo membro.</exception>
      <returns>
        <see langword="true" /> se <paramref name="destination" /> è sufficientemente grande per ricevere l'output. In caso contrario, <see langword="false" />.</returns>
    </member>
    <member name="M:System.Security.Cryptography.AsymmetricAlgorithm.TryExportEncryptedPkcs8PrivateKey(System.ReadOnlySpan{System.Char},System.Security.Cryptography.PbeParameters,System.Span{System.Byte},System.Int32@)">
      <summary>Quando sottoposto a override in una classe derivata, tenta di esportare la chiave corrente nel formato PKCS#8 EncryptedPrivateKeyInfo in un buffer specificato, usando una password basata su caratteri.</summary>
      <param name="password">Password da usare per la crittografia del materiale della chiave.</param>
      <param name="pbeParameters">Parametri della crittografia basata su password (PBE) da usare per la crittografia del materiale della chiave.</param>
      <param name="destination">Intervallo di byte per la ricezione dei dati PKCS#8 EncryptedPrivateKeyInfo.</param>
      <param name="bytesWritten">Quando termina, questo metodo contiene un valore che indica il numero di byte scritti in <paramref name="destination" />. Questo parametro viene trattato come non inizializzato.</param>
      <exception cref="T:System.Security.Cryptography.CryptographicException">Non è stato possibile esportare la chiave.</exception>
      <exception cref="T:System.NotImplementedException">Un tipo derivato non ha eseguito l'override di questo membro.</exception>
      <returns>
        <see langword="true" /> se <paramref name="destination" /> è sufficientemente grande per ricevere l'output. In caso contrario, <see langword="false" />.</returns>
    </member>
    <member name="M:System.Security.Cryptography.AsymmetricAlgorithm.TryExportPkcs8PrivateKey(System.Span{System.Byte},System.Int32@)">
      <summary>Quando sottoposto a override in una classe derivata, tenta di esportare la chiave corrente nel formato PKCS#8 PrivateKeyInfo in un buffer specificato.</summary>
      <param name="destination">Intervallo di byte per la ricezione dei dati PKCS#8 PrivateKeyInfo.</param>
      <param name="bytesWritten">Quando termina, questo metodo contiene un valore che indica il numero di byte scritti in <paramref name="destination" />. Questo parametro viene trattato come non inizializzato.</param>
      <exception cref="T:System.Security.Cryptography.CryptographicException">Non è stato possibile esportare la chiave.</exception>
      <exception cref="T:System.NotImplementedException">Un tipo derivato non ha eseguito l'override di questo membro.</exception>
      <returns>
        <see langword="true" /> se <paramref name="destination" /> è sufficientemente grande per ricevere l'output. In caso contrario, <see langword="false" />.</returns>
    </member>
    <member name="M:System.Security.Cryptography.AsymmetricAlgorithm.TryExportSubjectPublicKeyInfo(System.Span{System.Byte},System.Int32@)">
      <summary>Quando sottoposto a override in una classe derivata, tenta di esportare la chiave corrente nel formato X.509 SubjectPublicKeyInfo in un buffer specificato.</summary>
      <param name="destination">Intervallo di byte per ricevere i dati X.509 SubjectPublicKeyInfo.</param>
      <param name="bytesWritten">Quando termina, questo metodo contiene un valore che indica il numero di byte scritti in <paramref name="destination" />. Questo parametro viene trattato come non inizializzato.</param>
      <exception cref="T:System.Security.Cryptography.CryptographicException">Non è stato possibile esportare la chiave.</exception>
      <exception cref="T:System.NotImplementedException">Un tipo derivato non ha eseguito l'override di questo membro.</exception>
      <returns>
        <see langword="true" /> se <paramref name="destination" /> è sufficientemente grande per ricevere l'output. In caso contrario, <see langword="false" />.</returns>
    </member>
    <member name="P:System.Security.Cryptography.AsymmetricAlgorithm.KeyExchangeAlgorithm">
      <summary>Quando ne viene eseguito l'override in una classe derivata, ottiene il nome dell'algoritmo di scambio delle chiavi; in caso contrario, genera <see cref="T:System.NotImplementedException" />.</summary>
      <returns>Nome dell'algoritmo di scambio delle chiavi.</returns>
    </member>
    <member name="P:System.Security.Cryptography.AsymmetricAlgorithm.KeySize">
      <summary>Ottiene o imposta la dimensione in bit del modulo della chiave usato dall'algoritmo asimmetrico.</summary>
      <exception cref="T:System.Security.Cryptography.CryptographicException">Le dimensioni del modulo della chiave non sono valide.</exception>
      <returns>Dimensione in bit del modulo della chiave usato dall'algoritmo asimmetrico.</returns>
    </member>
    <member name="P:System.Security.Cryptography.AsymmetricAlgorithm.LegalKeySizes">
      <summary>Ottiene le dimensioni delle chiavi supportate dall'algoritmo asimmetrico.</summary>
      <returns>Matrice che contiene le dimensioni delle chiavi supportate dall'algoritmo asimmetrico.</returns>
    </member>
    <member name="P:System.Security.Cryptography.AsymmetricAlgorithm.SignatureAlgorithm">
      <summary>Quando ne viene eseguito l'override in una classe derivata, ottiene il nome dell'algoritmo di scambio delle chiavi; in caso contrario, genera sempre <see cref="T:System.NotImplementedException" />.</summary>
      <returns>Nome dell'algoritmo di firma.</returns>
    </member>
    <member name="T:System.Security.Cryptography.CipherMode">
      <summary>Specifica la modalità di crittografia di blocco da usare per la crittografia.</summary>
    </member>
    <member name="F:System.Security.Cryptography.CipherMode.CBC">
      <summary>La modalità <see langword="CBC" /> (Cipher Block Chaining) introduce la retroazione. Prima di essere crittografato, ogni blocco di testo normale viene combinato al testo crittografato del blocco precedente mediante un'operazione OR esclusiva bit per bit. In questo modo, viene garantito che anche se il testo normale è composto di numerosi blocchi identici, questi verranno crittografati in un blocco di testo crittografato diverso. Il vettore di inizializzazione viene combinato al primo blocco di testo normale mediante un'operazione OR esclusiva bit per bit prima che il blocco venga crittografato. Se un solo bit del blocco di testo crittografato risulta danneggiato, sarà danneggiato anche il corrispondente blocco di testo normale. Inoltre, verrà danneggiato un bit del blocco successivo che occupa la stessa posizione del bit originale danneggiato.</summary>
    </member>
    <member name="F:System.Security.Cryptography.CipherMode.CFB">
      <summary>Anziché elaborare un intero blocco alla volta, con la modalità <see langword="CFB" /> (Cipher Feedback) il testo normale viene elaborato in testo crittografato a piccoli incrementi. Questa modalità si avvale di un registro a scorrimento, della lunghezza di un blocco e suddiviso in sezioni. Se, ad esempio, la lunghezza del blocco è di 8 byte e l'elaborazione è di un byte alla volta, il registro a scorrimento sarà suddiviso in otto sezioni. Se un bit del testo crittografato risulta danneggiato, saranno danneggiati anche un bit del testo normale e il registro a scorrimento. In questo modo, risulteranno danneggiati anche i successivi incrementi di testo normale finché il bit errato non verrà eliminato dal registro a scorrimento. La dimensione del feedback predefinita può variare in base all'algoritmo, ma in genere corrisponde a 8 bit o al numero di bit della dimensione del blocco. È possibile modificare il numero di bit del feedback tramite la proprietà <see cref="P:System.Security.Cryptography.SymmetricAlgorithm.FeedbackSize" />. Gli algoritmi che supportano CFB utilizzano questa proprietà per impostare il feedback.</summary>
    </member>
    <member name="F:System.Security.Cryptography.CipherMode.CTS">
      <summary>La modalità <see langword="CTS" /> (Cipher Text Stealing) consente di gestire qualsiasi lunghezza di testo normale, producendo testo crittografato di lunghezza pari a quella del testo normale. Il funzionamento di questa modalità è analogo a quello della modalità <see langword="CBC" />, fatta eccezione per gli ultimi due blocchi di testo normale.</summary>
    </member>
    <member name="F:System.Security.Cryptography.CipherMode.ECB">
      <summary>La modalità <see langword="ECB" /> (Electronic Codebook) consente di crittografare ciascun blocco singolarmente. Tutti i blocchi di testo normale identici e che si trovano nello stesso messaggio, o in un messaggio diverso crittografato con la stessa chiave, verranno trasformati in blocchi di testo crittografato identici. Importante: questa modalità non è consigliabile perché può causare più violazioni della sicurezza. Se il testo normale da crittografare contiene molte ripetizioni, è verosimile che il testo crittografato venga suddiviso in un blocco per volta. È anche possibile utilizzare l'analisi dei blocchi per determinare la chiave di crittografia. Inoltre, un avversario attivo può sostituire e scambiare i singoli blocchi senza che venga rilevato, consentendo di salvare e inserire i blocchi nel flusso in altri punti senza essere individuati.</summary>
    </member>
    <member name="F:System.Security.Cryptography.CipherMode.OFB">
      <summary>La modalità <see langword="OFB" /> (Output Feedback) consente di elaborare piccoli incrementi di testo normale in testo crittografato, anziché elaborare un intero blocco alla volta. Questa modalità è analoga alla modalità <see langword="CFB" />; l'unica differenza consiste nel modo in cui viene creato il registro a scorrimento. Se un bit del testo crittografato risulta danneggiato, sarà danneggiato anche il corrispondente bit del testo normale. Se tuttavia nel testo crittografato sono presenti bit aggiuntivi o mancano alcuni bit, il testo normale risulterà danneggiato dal quel punto in poi.</summary>
    </member>
    <member name="T:System.Security.Cryptography.CryptographicOperations">
      <summary>Fornisce metodi da usare con la crittografia per ridurre il rischio di perdita di informazioni side-channel.</summary>
    </member>
    <member name="M:System.Security.Cryptography.CryptographicOperations.FixedTimeEquals(System.ReadOnlySpan{System.Byte},System.ReadOnlySpan{System.Byte})">
      <summary>Determina l'uguaglianza tra due sequenze di byte in un intervallo di tempo che dipende dalla lunghezza delle sequenze, ma non dai relativi valori.</summary>
      <param name="left">Primo buffer da confrontare.</param>
      <param name="right">Secondo buffer da confrontare.</param>
      <returns>
        <see langword="true" /> se <paramref name="left" /> e <paramref name="right" /> hanno gli stessi valori per <see cref="P:System.ReadOnlySpan`1.Length" /> e lo stesso contenuto. In caso contrario, <see langword="false" />.</returns>
    </member>
    <member name="M:System.Security.Cryptography.CryptographicOperations.ZeroMemory(System.Span{System.Byte})">
      <summary>Riempie il buffer specificato con zeri.</summary>
      <param name="buffer">Buffer da riempire con zeri.</param>
    </member>
    <member name="T:System.Security.Cryptography.CryptographicUnexpectedOperationException">
      <summary>Eccezione generata quando si verifica un'operazione imprevista durante un'operazione di crittografia.</summary>
    </member>
    <member name="M:System.Security.Cryptography.CryptographicUnexpectedOperationException.#ctor">
      <summary>Inizializza una nuova istanza della classe <see cref="T:System.Security.Cryptography.CryptographicUnexpectedOperationException" /> con le proprietà predefinite.</summary>
    </member>
    <member name="M:System.Security.Cryptography.CryptographicUnexpectedOperationException.#ctor(System.Runtime.Serialization.SerializationInfo,System.Runtime.Serialization.StreamingContext)">
      <summary>Inizializza una nuova istanza della classe <see cref="T:System.Security.Cryptography.CryptographicUnexpectedOperationException" /> con dati serializzati.</summary>
      <param name="info">Oggetto che contiene i dati oggetto serializzati.</param>
      <param name="context">Informazioni contestuali sull'origine o sulla destinazione.</param>
    </member>
    <member name="M:System.Security.Cryptography.CryptographicUnexpectedOperationException.#ctor(System.String)">
      <summary>Inizializza una nuova istanza della classe <see cref="T:System.Security.Cryptography.CryptographicUnexpectedOperationException" /> con un messaggio di errore specificato.</summary>
      <param name="message">Messaggio di errore in cui viene indicato il motivo dell'eccezione.</param>
    </member>
    <member name="M:System.Security.Cryptography.CryptographicUnexpectedOperationException.#ctor(System.String,System.Exception)">
      <summary>Inizializza una nuova istanza della classe <see cref="T:System.Security.Cryptography.CryptographicUnexpectedOperationException" /> con un messaggio di errore specificato e un riferimento all'eccezione interna che è la causa dell'eccezione corrente.</summary>
      <param name="message">Messaggio di errore in cui viene indicato il motivo dell'eccezione.</param>
      <param name="inner">Eccezione che ha determinato l'eccezione corrente. Se il parametro <paramref name="inner" /> non è <see langword="null" />, l'eccezione corrente viene generata in un blocco <see langword="catch" /> in cui viene gestita l'eccezione interna.</param>
    </member>
    <member name="M:System.Security.Cryptography.CryptographicUnexpectedOperationException.#ctor(System.String,System.String)">
      <summary>Inizializza una nuova istanza della classe <see cref="T:System.Security.Cryptography.CryptographicUnexpectedOperationException" /> con un messaggio di errore specificato nel formato descritto.</summary>
      <param name="format">Formato utilizzato per produrre il messaggio di errore.</param>
      <param name="insert">Messaggio di errore in cui viene indicato il motivo dell'eccezione.</param>
    </member>
    <member name="T:System.Security.Cryptography.CryptoStream">
      <summary>Definisce un flusso che collega i flussi di dati alle trasformazioni crittografiche.</summary>
    </member>
    <member name="M:System.Security.Cryptography.CryptoStream.#ctor(System.IO.Stream,System.Security.Cryptography.ICryptoTransform,System.Security.Cryptography.CryptoStreamMode)">
      <summary>Inizializza una nuova istanza della classe <see cref="T:System.Security.Cryptography.CryptoStream" /> con un flusso di dati di destinazione, la trasformazione da usare e la modalità del flusso.</summary>
      <param name="stream">Flusso su cui eseguire la trasformazione di crittografia.</param>
      <param name="transform">Trasformazione crittografica da eseguire sul flusso.</param>
      <param name="mode">Uno dei valori di <see cref="T:System.Security.Cryptography.CryptoStreamMode" />.</param>
      <exception cref="T:System.ArgumentException">
        <paramref name="stream" /> non è valido.</exception>
    </member>
    <member name="M:System.Security.Cryptography.CryptoStream.#ctor(System.IO.Stream,System.Security.Cryptography.ICryptoTransform,System.Security.Cryptography.CryptoStreamMode,System.Boolean)">
      <summary>Inizializza una nuova istanza della classe <see cref="T:System.Security.Cryptography.CryptoStream" />.</summary>
      <param name="stream">Flusso su cui eseguire la trasformazione di crittografia.</param>
      <param name="transform">Trasformazione di crittografia da eseguire sul flusso.</param>
      <param name="mode">Modalità del flusso.</param>
      <param name="leaveOpen">
        <see langword="true" /> per non chiudere il flusso sottostante quando l'oggetto <see cref="T:System.Security.Cryptography.CryptoStream" /> viene eliminato; in caso contrario, <see langword="false" />.</param>
      <exception cref="T:System.ArgumentException">
        <paramref name="mode" /> non è valido.</exception>
    </member>
    <member name="M:System.Security.Cryptography.CryptoStream.BeginRead(System.Byte[],System.Int32,System.Int32,System.AsyncCallback,System.Object)">
      <summary>Inizia un'operazione di lettura asincrona. (In alternativa, si consideri l'uso di <see cref="Overload:System.Security.Cryptography.CryptoStream.ReadAsync" />.)</summary>
      <param name="buffer">Buffer in cui leggere i dati.</param>
      <param name="offset">Offset dei byte nel <paramref name="buffer" /> da cui iniziare la scrittura dei dati letti dal flusso.</param>
      <param name="count">Numero massimo di byte da leggere.</param>
      <param name="callback">Callback asincrono facoltativo, da chiamare quando la lettura è completa.</param>
      <param name="state">Oggetto fornito dall'utente che distingue questa specifica richiesta di lettura asincrona da altre richieste.</param>
      <exception cref="T:System.IO.IOException">È stato eseguito un tentativo di lettura asincrona oltre la fine del flusso o si è verificato un errore del disco.</exception>
      <exception cref="T:System.ArgumentException">Uno o più argomenti non sono validi.</exception>
      <exception cref="T:System.ObjectDisposedException">Sono stati chiamati dei metodi dopo la chiusura del flusso.</exception>
      <exception cref="T:System.NotSupportedException">L'implementazione corrente di <see langword="Stream" /> non supporta l'operazione di lettura.</exception>
      <returns>Oggetto <see cref="T:System.IAsyncResult" /> che rappresenta la lettura asincrona, che può essere ancora in sospeso.</returns>
    </member>
    <member name="M:System.Security.Cryptography.CryptoStream.BeginWrite(System.Byte[],System.Int32,System.Int32,System.AsyncCallback,System.Object)">
      <summary>Inizia un'operazione di scrittura asincrona. (In alternativa, si consideri l'uso di <see cref="Overload:System.Security.Cryptography.CryptoStream.WriteAsync" />.)</summary>
      <param name="buffer">Buffer da cui scrivere i dati.</param>
      <param name="offset">Offset dei byte in <paramref name="buffer" /> da cui iniziare la scrittura.</param>
      <param name="count">Numero massimo di byte da scrivere.</param>
      <param name="callback">Callback asincrono facoltativo, da chiamare quando la scrittura è completa.</param>
      <param name="state">Oggetto fornito dall'utente che distingue questa specifica richiesta di scrittura asincrona da altre richieste.</param>
      <exception cref="T:System.IO.IOException">È stato eseguito un tentativo di scrittura asincrona oltre la fine del flusso o si è verificato un errore del disco.</exception>
      <exception cref="T:System.ArgumentException">Uno o più argomenti non sono validi.</exception>
      <exception cref="T:System.ObjectDisposedException">Sono stati chiamati dei metodi dopo la chiusura del flusso.</exception>
      <exception cref="T:System.NotSupportedException">L'implementazione corrente di <see langword="Stream" /> non supporta l'operazione di scrittura.</exception>
      <returns>Oggetto <see langword="IAsyncResult" /> che rappresenta la scrittura asincrona, che può essere ancora in sospeso.</returns>
    </member>
    <member name="M:System.Security.Cryptography.CryptoStream.Clear">
      <summary>Rilascia tutte le risorse usate da <see cref="T:System.Security.Cryptography.CryptoStream" />.</summary>
    </member>
    <member name="M:System.Security.Cryptography.CryptoStream.Dispose(System.Boolean)">
      <summary>Rilascia le risorse non gestite usate da <see cref="T:System.Security.Cryptography.CryptoStream" /> e, facoltativamente, le risorse gestite.</summary>
      <param name="disposing">
        <see langword="true" /> per rilasciare sia le risorse gestite sia quelle non gestite; <see langword="false" /> per rilasciare solo le risorse non gestite.</param>
    </member>
    <member name="M:System.Security.Cryptography.CryptoStream.DisposeAsync">
      <summary>Consente di liberare in modo asincrono le risorse non gestite utilizzate da <see cref="T:System.Security.Cryptography.CryptoStream" />.</summary>
      <returns>Attività che rappresenta l'operazione di eliminazione asincrona.</returns>
    </member>
    <member name="M:System.Security.Cryptography.CryptoStream.EndRead(System.IAsyncResult)">
      <summary>Attende il completamento della lettura asincrona in sospeso. (In alternativa, si consideri l'uso di <see cref="Overload:System.Security.Cryptography.CryptoStream.ReadAsync" />.)</summary>
      <param name="asyncResult">Riferimento alla richiesta asincrona in sospeso da completare.</param>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="asyncResult" /> costruito in modo predefinito è <see langword="null" />.</exception>
      <exception cref="T:System.ArgumentException">Non è disponibile un handle dell'operazione di lettura in sospeso.  
  
 -oppure-  
  
 L'operazione in sospeso non supporta la lettura.</exception>
      <exception cref="T:System.InvalidOperationException">
        <paramref name="asyncResult" /> non è stato generato da un metodo <see cref="M:System.Security.Cryptography.CryptoStream.BeginRead(System.Byte[],System.Int32,System.Int32,System.AsyncCallback,System.Object)" /> nel flusso corrente.</exception>
      <exception cref="T:System.IO.IOException">Il flusso è chiuso o si è verificato un errore interno.</exception>
      <returns>Numero di byte letti dal flusso, tra zero (0) e il numero di byte richiesto. I flussi restituiscono zero (0) solo alla fine del flusso; in caso contrario, si devono bloccare fino a quando non è disponibile almeno 1 byte.</returns>
    </member>
    <member name="M:System.Security.Cryptography.CryptoStream.EndWrite(System.IAsyncResult)">
      <summary>Termina un'operazione di scrittura asincrona. (In alternativa, si consideri l'uso di <see cref="Overload:System.Security.Cryptography.CryptoStream.WriteAsync" />.)</summary>
      <param name="asyncResult">Riferimento alla richiesta di I/O asincrona in sospeso.</param>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="asyncResult" /> costruito in modo predefinito è <see langword="null" />.</exception>
      <exception cref="T:System.ArgumentException">Non è disponibile un handle dell'operazione di scrittura in sospeso.  
  
 -oppure-  
  
 L'operazione in sospeso non supporta la scrittura.</exception>
      <exception cref="T:System.InvalidOperationException">
        <paramref name="asyncResult" /> non è stato generato da un metodo <see cref="M:System.IO.Stream.BeginWrite(System.Byte[],System.Int32,System.Int32,System.AsyncCallback,System.Object)" /> nel flusso corrente.</exception>
      <exception cref="T:System.IO.IOException">Il flusso è chiuso o si è verificato un errore interno.</exception>
    </member>
    <member name="M:System.Security.Cryptography.CryptoStream.Flush">
      <summary>Cancella tutti i buffer relativi al flusso corrente e consente la scrittura dei dati memorizzati nel buffer nel dispositivo sottostante.</summary>
    </member>
    <member name="M:System.Security.Cryptography.CryptoStream.FlushAsync(System.Threading.CancellationToken)">
      <summary>Cancella tutti i buffer del flusso corrente in modo asincrono e consente la scrittura dei dati memorizzati nel buffer nel dispositivo sottostante e monitora le richieste di annullamento.</summary>
      <param name="cancellationToken">Token da monitorare per le richieste di annullamento. Il valore predefinito è <see cref="P:System.Threading.CancellationToken.None" />.</param>
      <exception cref="T:System.ObjectDisposedException">Il flusso è stato eliminato.</exception>
      <returns>Attività che rappresenta l'operazione di scaricamento asincrona.</returns>
    </member>
    <member name="M:System.Security.Cryptography.CryptoStream.FlushFinalBlock">
      <summary>Aggiorna l'origine dati o il repository sottostante con lo stato corrente del buffer, quindi cancella il buffer.</summary>
      <exception cref="T:System.Security.Cryptography.CryptographicException">La chiave è danneggiata pertanto la spaziatura interna del flusso può non essere valida.</exception>
      <exception cref="T:System.NotSupportedException">Il flusso corrente non è modificabile.  
  
 -oppure-  
  
 Il blocco finale è già stato trasformato.</exception>
    </member>
    <member name="M:System.Security.Cryptography.CryptoStream.FlushFinalBlockAsync(System.Threading.CancellationToken)">
      <summary>Aggiorna in modo asincrono l'origine dati o il repository sottostante con lo stato corrente del buffer, quindi cancella il buffer.</summary>
      <param name="cancellationToken">Token da monitorare per le richieste di annullamento. Il valore predefinito è <see cref="P:System.Threading.CancellationToken.None" />.</param>
      <returns>Attività che rappresenta l'operazione di scaricamento asincrona.</returns>
    </member>
    <member name="M:System.Security.Cryptography.CryptoStream.Read(System.Byte[],System.Int32,System.Int32)">
      <summary>Legge una sequenza di byte dal flusso corrente e fa avanzare la posizione corrente nel flusso del numero di byte letti.</summary>
      <param name="buffer">Matrice di byte. Un massimo di byte <paramref name="count" /> viene letto dal flusso corrente e memorizzato in <paramref name="buffer" />.</param>
      <param name="offset">Offset dei byte in <paramref name="buffer" /> da cui iniziare la memorizzazione dei dati letti dal flusso corrente.</param>
      <param name="count">Numero massimo di byte da leggere dal flusso corrente.</param>
      <exception cref="T:System.NotSupportedException">L'oggetto <see cref="T:System.Security.Cryptography.CryptoStreamMode" /> associato all'oggetto <see cref="T:System.Security.Cryptography.CryptoStream" /> corrente non corrisponde al flusso sottostante.  Questa eccezione ad esempio viene generata quando si utilizza il campo <see cref="F:System.Security.Cryptography.CryptoStreamMode.Read" /> con un flusso sottostante di sola scrittura.</exception>
      <exception cref="T:System.ArgumentOutOfRangeException">Il parametro <paramref name="offset" /> è minore di zero.  
  
-oppure- 
Il parametro <paramref name="count" /> è minore di zero.</exception>
      <exception cref="T:System.ArgumentException">La somma dei parametri <paramref name="count" /> e <paramref name="offset" /> è maggiore della lunghezza del buffer.</exception>
      <returns>Numero complessivo di byte letti nel buffer. Questo numero può essere inferiore a quello dei byte richiesti, se la quantità di byte non è correntemente disponibile, oppure corrispondere a zero se è stata raggiunta la fine del flusso.</returns>
    </member>
    <member name="M:System.Security.Cryptography.CryptoStream.ReadAsync(System.Byte[],System.Int32,System.Int32,System.Threading.CancellationToken)">
      <summary>Legge una sequenza di byte dal flusso corrente in modo asincrono e passa alla posizione successiva all'interno del flusso corrente in base al numero di byte letti e monitora le richieste di annullamento.</summary>
      <param name="buffer">Buffer in cui scrivere i dati.</param>
      <param name="offset">Offset dei byte in <paramref name="buffer" /> da cui iniziare la scrittura dei dati dal flusso.</param>
      <param name="count">Numero massimo di byte da leggere.</param>
      <param name="cancellationToken">Token da monitorare per le richieste di annullamento. Il valore predefinito è <see cref="P:System.Threading.CancellationToken.None" />.</param>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="buffer" /> costruito in modo predefinito è <see langword="null" />.</exception>
      <exception cref="T:System.ArgumentOutOfRangeException">
        <paramref name="offset" /> o <paramref name="count" /> è negativo.</exception>
      <exception cref="T:System.ArgumentException">La somma di <paramref name="offset" /> e <paramref name="count" /> è maggiore della lunghezza del buffer.</exception>
      <exception cref="T:System.NotSupportedException">Il flusso non supporta la lettura.</exception>
      <exception cref="T:System.ObjectDisposedException">Il flusso è stato eliminato.</exception>
      <exception cref="T:System.InvalidOperationException">Il flusso è attualmente usato da un'operazione di lettura precedente.</exception>
      <returns>Attività che rappresenta l'operazione di lettura asincrona. Il valore del parametro <paramref name="TResult" /> dell'oggetto attività contiene il numero totale di byte letti nel buffer. Il risultato può essere minore del numero di byte richiesti se il numero di byte attualmente disponibili è minore di quelli richiesti o può essere pari a 0 (zero) se è stata raggiunta la fine del flusso.</returns>
    </member>
    <member name="M:System.Security.Cryptography.CryptoStream.ReadByte">
      <summary>Legge un byte dal flusso e sposta in avanti la posizione corrente all'interno del flusso di un byte o restituisce -1 se si trova alla fine del flusso.</summary>
      <exception cref="T:System.NotSupportedException">Il flusso non supporta la lettura.</exception>
      <exception cref="T:System.ObjectDisposedException">Sono stati chiamati dei metodi dopo la chiusura del flusso.</exception>
      <returns>Cast di byte senza segno in un parametro <see cref="T:System.Int32" /> oppure -1 se si trova alla fine del flusso.</returns>
    </member>
    <member name="M:System.Security.Cryptography.CryptoStream.Seek(System.Int64,System.IO.SeekOrigin)">
      <summary>Imposta la posizione all'interno del flusso corrente.</summary>
      <param name="offset">Offset dei byte rispetto al parametro <paramref name="origin" />.</param>
      <param name="origin">Oggetto <see cref="T:System.IO.SeekOrigin" /> che indica il punto di riferimento utilizzato per ottenere la nuova posizione.</param>
      <exception cref="T:System.NotSupportedException">Questo metodo non è supportato.</exception>
      <returns>Questo metodo non è supportato.</returns>
    </member>
    <member name="M:System.Security.Cryptography.CryptoStream.SetLength(System.Int64)">
      <summary>Imposta la lunghezza del flusso corrente.</summary>
      <param name="value">Lunghezza desiderata del flusso corrente in byte.</param>
      <exception cref="T:System.NotSupportedException">Questa proprietà esiste solo per supportare l'ereditarietà da <see cref="T:System.IO.Stream" /> e non può essere utilizzata.</exception>
    </member>
    <member name="M:System.Security.Cryptography.CryptoStream.Write(System.Byte[],System.Int32,System.Int32)">
      <summary>Consente di inserire una sequenza di byte nel flusso <see cref="T:System.Security.Cryptography.CryptoStream" /> corrente e di fare avanzare la posizione corrente all'interno del flusso in base al numero dei byte inseriti.</summary>
      <param name="buffer">Matrice di byte. Questo metodo copia i byte <paramref name="count" /> da <paramref name="buffer" /> nel flusso corrente.</param>
      <param name="offset">Offset dei byte in <paramref name="buffer" /> da cui iniziare la copia dei byte nel flusso corrente.</param>
      <param name="count">Numero di byte da scrivere nel flusso corrente.</param>
      <exception cref="T:System.NotSupportedException">L'oggetto <see cref="T:System.Security.Cryptography.CryptoStreamMode" /> associato all'oggetto <see cref="T:System.Security.Cryptography.CryptoStream" /> corrente non corrisponde al flusso sottostante.  Questa eccezione ad esempio viene generata quando si utilizza il campo <see cref="F:System.Security.Cryptography.CryptoStreamMode.Write" /> con un flusso sottostante di sola lettura.</exception>
      <exception cref="T:System.ArgumentOutOfRangeException">Il parametro <paramref name="offset" /> è minore di zero.  
  
-oppure- 
Il parametro <paramref name="count" /> è minore di zero.</exception>
      <exception cref="T:System.ArgumentException">La somma dei parametri <paramref name="count" /> e <paramref name="offset" /> è maggiore della lunghezza del buffer.</exception>
    </member>
    <member name="M:System.Security.Cryptography.CryptoStream.WriteAsync(System.Byte[],System.Int32,System.Int32,System.Threading.CancellationToken)">
      <summary>Scrive in modo asincrono una sequenza di byte nel flusso corrente e passa alla posizione successiva all'interno del flusso corrente in base al numero di byte scritti e monitora le richieste di annullamento.</summary>
      <param name="buffer">Buffer da cui scrivere i dati.</param>
      <param name="offset">Offset dei byte con base zero in <paramref name="buffer" /> da cui iniziare la scrittura dei byte nel flusso.</param>
      <param name="count">Numero massimo di byte da scrivere.</param>
      <param name="cancellationToken">Token da monitorare per le richieste di annullamento. Il valore predefinito è <see cref="P:System.Threading.CancellationToken.None" />.</param>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="buffer" /> costruito in modo predefinito è <see langword="null" />.</exception>
      <exception cref="T:System.ArgumentOutOfRangeException">
        <paramref name="offset" /> o <paramref name="count" /> è negativo.</exception>
      <exception cref="T:System.ArgumentException">La somma di <paramref name="offset" /> e <paramref name="count" /> è maggiore della lunghezza del buffer.</exception>
      <exception cref="T:System.NotSupportedException">Il flusso non supporta la scrittura.</exception>
      <exception cref="T:System.ObjectDisposedException">Il flusso è stato eliminato.</exception>
      <exception cref="T:System.InvalidOperationException">Il flusso è attualmente usato da un'operazione di scrittura precedente.</exception>
      <returns>Attività che rappresenta l'operazione di scrittura asincrona.</returns>
    </member>
    <member name="M:System.Security.Cryptography.CryptoStream.WriteByte(System.Byte)">
      <summary>Scrive un byte nella posizione corrente del flusso e sposta in avanti di un byte la posizione del flusso.</summary>
      <param name="value">Byte da scrivere nel flusso.</param>
      <exception cref="T:System.IO.IOException">Si è verificato un errore di I/O.</exception>
      <exception cref="T:System.NotSupportedException">Il flusso non supporta la scrittura o è già chiuso.</exception>
      <exception cref="T:System.ObjectDisposedException">Sono stati chiamati dei metodi dopo la chiusura del flusso.</exception>
    </member>
    <member name="P:System.Security.Cryptography.CryptoStream.CanRead">
      <summary>Ottiene un valore che indica se l'oggetto <see cref="T:System.Security.Cryptography.CryptoStream" /> è leggibile.</summary>
      <returns>
        <see langword="true" /> se il flusso corrente è leggibile; in caso contrario, <see langword="false" />.</returns>
    </member>
    <member name="P:System.Security.Cryptography.CryptoStream.CanSeek">
      <summary>Ottiene un valore che indica se è possibile effettuare ricerche nel flusso <see cref="T:System.Security.Cryptography.CryptoStream" /> corrente.</summary>
      <returns>Sempre <see langword="false" />.</returns>
    </member>
    <member name="P:System.Security.Cryptography.CryptoStream.CanWrite">
      <summary>Ottiene un valore che indica se l'oggetto <see cref="T:System.Security.Cryptography.CryptoStream" /> è scrivibile.</summary>
      <returns>
        <see langword="true" /> se il flusso corrente è scrivibile; in caso contrario, <see langword="false" />.</returns>
    </member>
    <member name="P:System.Security.Cryptography.CryptoStream.HasFlushedFinalBlock">
      <summary>Ottiene un valore che indica se il blocco finale del buffer è stato scritto nel flusso sottostante.</summary>
      <returns>
        <see langword="true" /> se il blocco finale è stato scaricato; in caso contrario, <see langword="false" />.</returns>
    </member>
    <member name="P:System.Security.Cryptography.CryptoStream.Length">
      <summary>Ottiene la lunghezza in byte del flusso.</summary>
      <exception cref="T:System.NotSupportedException">Questa proprietà non è supportata.</exception>
      <returns>Questa proprietà non è supportata.</returns>
    </member>
    <member name="P:System.Security.Cryptography.CryptoStream.Position">
      <summary>Ottiene o imposta la posizione all'interno del flusso corrente.</summary>
      <exception cref="T:System.NotSupportedException">Questa proprietà non è supportata.</exception>
      <returns>Questa proprietà non è supportata.</returns>
    </member>
    <member name="T:System.Security.Cryptography.CryptoStreamMode">
      <summary>Specifica la modalità di un flusso di crittografia.</summary>
    </member>
    <member name="F:System.Security.Cryptography.CryptoStreamMode.Read">
      <summary>Accesso in lettura a un flusso di crittografia.</summary>
    </member>
    <member name="F:System.Security.Cryptography.CryptoStreamMode.Write">
      <summary>Accesso in scrittura a un flusso di crittografia.</summary>
    </member>
    <member name="T:System.Security.Cryptography.HashAlgorithm">
      <summary>Rappresenta la classe base dalla quale devono derivare tutte le implementazioni degli algoritmi hash di crittografia.</summary>
    </member>
    <member name="F:System.Security.Cryptography.HashAlgorithm.HashSizeValue">
      <summary>Rappresenta la dimensione in bit del codice hash calcolato.</summary>
    </member>
    <member name="F:System.Security.Cryptography.HashAlgorithm.HashValue">
      <summary>Rappresenta il valore del codice hash calcolato.</summary>
    </member>
    <member name="F:System.Security.Cryptography.HashAlgorithm.State">
      <summary>Rappresenta lo stato del calcolo hash.</summary>
    </member>
    <member name="M:System.Security.Cryptography.HashAlgorithm.#ctor">
      <summary>Inizializza una nuova istanza della classe <see cref="T:System.Security.Cryptography.HashAlgorithm" />.</summary>
    </member>
    <member name="M:System.Security.Cryptography.HashAlgorithm.Clear">
      <summary>Rilascia tutte le risorse usate dalla classe <see cref="T:System.Security.Cryptography.HashAlgorithm" />.</summary>
    </member>
    <member name="M:System.Security.Cryptography.HashAlgorithm.ComputeHash(System.Byte[])">
      <summary>Consente di calcolare il valore hash della matrice di byte specificata.</summary>
      <param name="buffer">Input per il quale calcolare il codice hash.</param>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="buffer" /> è <see langword="null" />.</exception>
      <exception cref="T:System.ObjectDisposedException">L'oggetto è già stato eliminato.</exception>
      <returns>Codice hash calcolato.</returns>
    </member>
    <member name="M:System.Security.Cryptography.HashAlgorithm.ComputeHash(System.Byte[],System.Int32,System.Int32)">
      <summary>Consente di calcolare il valore hash dell'area specifica della matrice di byte specificata.</summary>
      <param name="buffer">Input per il quale calcolare il codice hash.</param>
      <param name="offset">Offset nella matrice di byte dal quale iniziare a usare i dati.</param>
      <param name="count">Numero di byte nella matrice da usare come dati.</param>
      <exception cref="T:System.ArgumentException">
        <paramref name="count" />è un valore non valido.  
  
-oppure- 
 La lunghezza di <paramref name="buffer" /> non è valida.</exception>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="buffer" /> è <see langword="null" />.</exception>
      <exception cref="T:System.ArgumentOutOfRangeException">
        <paramref name="offset" /> non è compreso nell'intervallo consentito. Per questo parametro è richiesto un numero non negativo.</exception>
      <exception cref="T:System.ObjectDisposedException">L'oggetto è già stato eliminato.</exception>
      <returns>Codice hash calcolato.</returns>
    </member>
    <member name="M:System.Security.Cryptography.HashAlgorithm.ComputeHash(System.IO.Stream)">
      <summary>Calcola il valore hash per l'oggetto <see cref="T:System.IO.Stream" /> specificato.</summary>
      <param name="inputStream">Input per il quale calcolare il codice hash.</param>
      <exception cref="T:System.ObjectDisposedException">L'oggetto è già stato eliminato.</exception>
      <returns>Codice hash calcolato.</returns>
    </member>
    <member name="M:System.Security.Cryptography.HashAlgorithm.ComputeHashAsync(System.IO.Stream,System.Threading.CancellationToken)">
      <summary>Calcola in modo asincrono il valore hash per l'oggetto <see cref="T:System.IO.Stream" /> specificato.</summary>
      <param name="inputStream">Input per il quale calcolare il codice hash.</param>
      <param name="cancellationToken">Token da monitorare per le richieste di annullamento.</param>
      <returns>Attività che rappresenta l'operazione asincrona di calcolo hash e che esegue il wrapping del codice hash calcolato.</returns>
    </member>
    <member name="M:System.Security.Cryptography.HashAlgorithm.Create">
      <summary>Crea un'istanza dell'implementazione predefinita di un algoritmo hash.</summary>
      <returns>Nuova istanza di <see cref="T:System.Security.Cryptography.SHA1CryptoServiceProvider" />, a meno che le impostazioni predefinite non siano state modificate.</returns>
    </member>
    <member name="M:System.Security.Cryptography.HashAlgorithm.Create(System.String)">
      <summary>Crea un'istanza dell'implementazione specificata di un algoritmo hash.</summary>
      <param name="hashName">Implementazione dell'algoritmo hash da usare. La tabella seguente illustra i valori validi per il parametro <paramref name="hashName" /> e gli algoritmi a cui sono mappati.  
  
 <list type="table"><listheader><term> Valore del parametro</term><description> implementa</description></listheader><item><term> SHA</term><description><see cref="T:System.Security.Cryptography.SHA1CryptoServiceProvider" /></description></item><item><term> SHA1</term><description><see cref="T:System.Security.Cryptography.SHA1CryptoServiceProvider" /></description></item><item><term> System.Security.Cryptography.SHA1</term><description><see cref="T:System.Security.Cryptography.SHA1CryptoServiceProvider" /></description></item><item><term> System.Security.Cryptography.HashAlgorithm</term><description><see cref="T:System.Security.Cryptography.SHA1CryptoServiceProvider" /></description></item><item><term> MD5</term><description><see cref="T:System.Security.Cryptography.MD5CryptoServiceProvider" /></description></item><item><term> System.Security.Cryptography.MD5</term><description><see cref="T:System.Security.Cryptography.MD5CryptoServiceProvider" /></description></item><item><term> SHA256</term><description><see cref="T:System.Security.Cryptography.SHA256Managed" /></description></item><item><term> SHA-256</term><description><see cref="T:System.Security.Cryptography.SHA256Managed" /></description></item><item><term> System.Security.Cryptography.SHA256</term><description><see cref="T:System.Security.Cryptography.SHA256Managed" /></description></item><item><term> SHA384</term><description><see cref="T:System.Security.Cryptography.SHA384Managed" /></description></item><item><term> SHA-384</term><description><see cref="T:System.Security.Cryptography.SHA384Managed" /></description></item><item><term> System.Security.Cryptography.SHA384</term><description><see cref="T:System.Security.Cryptography.SHA384Managed" /></description></item><item><term> SHA512</term><description><see cref="T:System.Security.Cryptography.SHA512Managed" /></description></item><item><term> SHA-512</term><description><see cref="T:System.Security.Cryptography.SHA512Managed" /></description></item><item><term> System.Security.Cryptography.SHA512</term><description><see cref="T:System.Security.Cryptography.SHA512Managed" /></description></item></list></param>
      <returns>Una nuova istanza dell'algoritmo hash specificato o <see langword="null" /> se <paramref name="hashName" /> non è un algoritmo hash valido.</returns>
    </member>
    <member name="M:System.Security.Cryptography.HashAlgorithm.Dispose">
      <summary>Rilascia tutte le risorse usate dall'istanza corrente della classe <see cref="T:System.Security.Cryptography.HashAlgorithm" />.</summary>
    </member>
    <member name="M:System.Security.Cryptography.HashAlgorithm.Dispose(System.Boolean)">
      <summary>Rilascia le risorse non gestite usate da <see cref="T:System.Security.Cryptography.HashAlgorithm" /> e, facoltativamente, le risorse gestite.</summary>
      <param name="disposing">
        <see langword="true" /> per rilasciare sia le risorse gestite sia quelle non gestite; <see langword="false" /> per rilasciare solo le risorse non gestite.</param>
    </member>
    <member name="M:System.Security.Cryptography.HashAlgorithm.HashCore(System.Byte[],System.Int32,System.Int32)">
      <summary>Quando ne viene eseguito l'override in una classe derivata, indirizza i dati scritti nell'oggetto verso l'algoritmo hash per il calcolo dell'hash.</summary>
      <param name="array">Input per il quale calcolare il codice hash.</param>
      <param name="ibStart">Offset nella matrice di byte dal quale iniziare a usare i dati.</param>
      <param name="cbSize">Numero di byte nella matrice di byte da utilizzare come dati.</param>
    </member>
    <member name="M:System.Security.Cryptography.HashAlgorithm.HashCore(System.ReadOnlySpan{System.Byte})">
      <summary>Consente di indirizzare i dati scritti nell'oggetto nell'algoritmo hash per il calcolo dell'hash.</summary>
      <param name="source">Input per il quale calcolare il codice hash.</param>
    </member>
    <member name="M:System.Security.Cryptography.HashAlgorithm.HashFinal">
      <summary>Quando ne viene eseguito l'override in una classe derivata, finalizza il calcolo hash una volta che gli ultimi dati sono stati elaborati dall'algoritmo hash crittografico.</summary>
      <returns>Codice hash calcolato.</returns>
    </member>
    <member name="M:System.Security.Cryptography.HashAlgorithm.Initialize">
      <summary>Reimposta lo stato iniziale dell'algoritmo hash.</summary>
    </member>
    <member name="M:System.Security.Cryptography.HashAlgorithm.TransformBlock(System.Byte[],System.Int32,System.Int32,System.Byte[],System.Int32)">
      <summary>Consente di calcolare il valore hash dell'area specifica della matrice di byte di input e di copiare una determinata area della matrice di byte di input nell'area specifica della matrice di byte di output.</summary>
      <param name="inputBuffer">Input per il quale calcolare il codice hash.</param>
      <param name="inputOffset">Offset nella matrice di byte di input dal quale iniziare a utilizzare i dati.</param>
      <param name="inputCount">Numero di byte nella matrice di byte di input da usare come dati.</param>
      <param name="outputBuffer">Copia della parte della matrice di input utilizzata per calcolare il codice hash.</param>
      <param name="outputOffset">Offset nella matrice di byte di output dal quale iniziare a scrivere i dati.</param>
      <exception cref="T:System.ArgumentException">
        <paramref name="inputCount" />utilizza un valore non valido.  
  
-oppure- 
 La lunghezza di <paramref name="inputBuffer" />non è valida.</exception>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="inputBuffer" /> è <see langword="null" />.</exception>
      <exception cref="T:System.ArgumentOutOfRangeException">
        <paramref name="inputOffset" /> non è compreso nell'intervallo consentito. Per questo parametro è richiesto un numero non negativo.</exception>
      <exception cref="T:System.ObjectDisposedException">L'oggetto è già stato eliminato.</exception>
      <returns>Numero di byte scritti.</returns>
    </member>
    <member name="M:System.Security.Cryptography.HashAlgorithm.TransformFinalBlock(System.Byte[],System.Int32,System.Int32)">
      <summary>Consente di calcolare il valore hash dell'area specifica della matrice di byte specificata.</summary>
      <param name="inputBuffer">Input per il quale calcolare il codice hash.</param>
      <param name="inputOffset">Offset nella matrice di byte dal quale iniziare a usare i dati.</param>
      <param name="inputCount">Numero di byte nella matrice di byte da utilizzare come dati.</param>
      <exception cref="T:System.ArgumentException">
        <paramref name="inputCount" />utilizza un valore non valido.  
  
-oppure- 
 La lunghezza dell'offset di <paramref name="inputBuffer" />non è valida.</exception>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="inputBuffer" /> è <see langword="null" />.</exception>
      <exception cref="T:System.ArgumentOutOfRangeException">
        <paramref name="inputOffset" /> non è compreso nell'intervallo consentito. Per questo parametro è richiesto un numero non negativo.</exception>
      <exception cref="T:System.ObjectDisposedException">L'oggetto è già stato eliminato.</exception>
      <returns>Matrice che rappresenta una copia della parte di input per cui viene generato un hash.</returns>
    </member>
    <member name="M:System.Security.Cryptography.HashAlgorithm.TryComputeHash(System.ReadOnlySpan{System.Byte},System.Span{System.Byte},System.Int32@)">
      <summary>Tenta di calcolare il valore hash per la matrice di byte specificata.</summary>
      <param name="source">Input per il quale calcolare il codice hash.</param>
      <param name="destination">Buffer per la ricezione del valore hash.</param>
      <param name="bytesWritten">Al termine di questo metodo, il numero totale di byte scritti in <paramref name="destination" />. Questo parametro viene trattato come non inizializzato.</param>
      <returns>
        <see langword="true" /> se la lunghezza di <paramref name="destination" /> è sufficiente per ricevere il valore hash. In caso contrario, <see langword="false" />.</returns>
    </member>
    <member name="M:System.Security.Cryptography.HashAlgorithm.TryHashFinal(System.Span{System.Byte},System.Int32@)">
      <summary>Tenta di finalizzare il calcolo hash dopo l'elaborazione degli ultimi dati da parte dell'algoritmo hash.</summary>
      <param name="destination">Buffer per la ricezione del valore hash.</param>
      <param name="bytesWritten">Al termine di questo metodo, il numero totale di byte scritti in <paramref name="destination" />. Questo parametro viene trattato come non inizializzato.</param>
      <returns>
        <see langword="true" /> se la lunghezza di <paramref name="destination" /> è sufficiente per ricevere il valore hash. In caso contrario, <see langword="false" />.</returns>
    </member>
    <member name="P:System.Security.Cryptography.HashAlgorithm.CanReuseTransform">
      <summary>Ottiene un valore che indica se è possibile riutilizzare la trasformazione corrente.</summary>
      <returns>Sempre <see langword="true" />.</returns>
    </member>
    <member name="P:System.Security.Cryptography.HashAlgorithm.CanTransformMultipleBlocks">
      <summary>Quando ne viene eseguito l'override in una classe derivata, ottiene un valore che indica se è possibile trasformare più blocchi.</summary>
      <returns>
        <see langword="true" /> se è possibile trasformare più blocchi; in caso contrario, <see langword="false" />.</returns>
    </member>
    <member name="P:System.Security.Cryptography.HashAlgorithm.Hash">
      <summary>Ottiene il valore del codice hash calcolato.</summary>
      <exception cref="T:System.Security.Cryptography.CryptographicUnexpectedOperationException">
        <see cref="F:System.Security.Cryptography.HashAlgorithm.HashValue" /> è <see langword="null" />.</exception>
      <exception cref="T:System.ObjectDisposedException">L'oggetto è già stato eliminato.</exception>
      <returns>Valore corrente del codice hash calcolato.</returns>
    </member>
    <member name="P:System.Security.Cryptography.HashAlgorithm.HashSize">
      <summary>Ottiene la dimensione in bit del codice hash calcolato.</summary>
      <returns>Dimensione in bit del codice hash calcolato.</returns>
    </member>
    <member name="P:System.Security.Cryptography.HashAlgorithm.InputBlockSize">
      <summary>Quando ne viene eseguito l'override in una classe derivata, ottiene la dimensione del blocco di input.</summary>
      <returns>Dimensione del blocco di input.</returns>
    </member>
    <member name="P:System.Security.Cryptography.HashAlgorithm.OutputBlockSize">
      <summary>Quando ne viene eseguito l'override in una classe derivata, ottiene la dimensione del blocco di output.</summary>
      <returns>Dimensione del blocco di output.</returns>
    </member>
    <member name="T:System.Security.Cryptography.HashAlgorithmName">
      <summary>Consente di specificare il nome di un algoritmo hash di crittografia.</summary>
    </member>
    <member name="M:System.Security.Cryptography.HashAlgorithmName.#ctor(System.String)">
      <summary>Inizializza una nuova istanza della struttura <see cref="T:System.Security.Cryptography.HashAlgorithmName" /> con un nome personalizzato.</summary>
      <param name="name">Nome dell'algoritmo hash personalizzato.</param>
    </member>
    <member name="M:System.Security.Cryptography.HashAlgorithmName.Equals(System.Object)">
      <summary>Restituisce un valore che indica se l'istanza corrente è uguale a un oggetto specificato.</summary>
      <param name="obj">Oggetto da confrontare con l'istanza corrente.</param>
      <returns>
        <see langword="true" /> se <paramref name="obj" /> è un oggetto <see cref="T:System.Security.Cryptography.HashAlgorithmName" /> e la relativa proprietà <see cref="P:System.Security.Cryptography.HashAlgorithmName.Name" /> è uguale a quella dell'istanza corrente. Il confronto viene eseguito tra ordinali e non viene applicata la distinzione tra maiuscole e minuscole.</returns>
    </member>
    <member name="M:System.Security.Cryptography.HashAlgorithmName.Equals(System.Security.Cryptography.HashAlgorithmName)">
      <summary>Restituisce un valore che indica se due istanze di <see cref="T:System.Security.Cryptography.HashAlgorithmName" /> sono uguali.</summary>
      <param name="other">Oggetto da confrontare con l'istanza corrente.</param>
      <returns>
        <see langword="true" /> se la proprietà <see cref="P:System.Security.Cryptography.HashAlgorithmName.Name" /> di <paramref name="other" /> è uguale a quella dell'istanza corrente. Il confronto viene eseguito tra ordinali e non viene applicata la distinzione tra maiuscole e minuscole.</returns>
    </member>
    <member name="M:System.Security.Cryptography.HashAlgorithmName.FromOid(System.String)">
      <summary>Converte l'OID specificato in un nome di algoritmo hash.</summary>
      <param name="oidValue">OID dell'algoritmo hash.</param>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="oidValue" /> costruito in modo predefinito è <see langword="null" />.</exception>
      <exception cref="T:System.Security.Cryptography.CryptographicException">
        <paramref name="oidValue" /> non rappresenta un algoritmo hash noto.</exception>
      <returns>Nome dell'algoritmo hash identificato dall'OID.</returns>
    </member>
    <member name="M:System.Security.Cryptography.HashAlgorithmName.GetHashCode">
      <summary>Restituisce il codice hash per l'istanza corrente.</summary>
      <returns>Codice hash dell'istanza corrente oppure 0 se non è stato fornito alcun valore <paramref name="name" /> al costruttore <see cref="T:System.Security.Cryptography.HashAlgorithmName" />.</returns>
    </member>
    <member name="M:System.Security.Cryptography.HashAlgorithmName.op_Equality(System.Security.Cryptography.HashAlgorithmName,System.Security.Cryptography.HashAlgorithmName)">
      <summary>Determina se due oggetti <see cref="T:System.Security.Cryptography.HashAlgorithmName" /> specificati sono uguali.</summary>
      <param name="left">Primo oggetto da confrontare.</param>
      <param name="right">Secondo oggetto da confrontare.</param>
      <returns>
        <see langword="true" /> se il valore di <see cref="P:System.Security.Cryptography.HashAlgorithmName.Name" /> è uguale sia per <paramref name="left" /> che per <paramref name="right" />; in caso contrario, <see langword="false" />.</returns>
    </member>
    <member name="M:System.Security.Cryptography.HashAlgorithmName.op_Inequality(System.Security.Cryptography.HashAlgorithmName,System.Security.Cryptography.HashAlgorithmName)">
      <summary>Determina se due oggetti <see cref="T:System.Security.Cryptography.HashAlgorithmName" /> specificati non sono uguali.</summary>
      <param name="left">Primo oggetto da confrontare.</param>
      <param name="right">Secondo oggetto da confrontare.</param>
      <returns>
        <see langword="true" /> se il valore di <see cref="P:System.Security.Cryptography.HashAlgorithmName.Name" /> è diverso in <paramref name="left" /> e in <paramref name="right" />; in caso contrario, <see langword="false" />.</returns>
    </member>
    <member name="M:System.Security.Cryptography.HashAlgorithmName.ToString">
      <summary>Restituisce la rappresentazione di stringa dell'istanza di <see cref="T:System.Security.Cryptography.HashAlgorithmName" /> corrente.</summary>
      <returns>Rappresentazione di stringa dell'istanza corrente di <see cref="T:System.Security.Cryptography.HashAlgorithmName" />.</returns>
    </member>
    <member name="M:System.Security.Cryptography.HashAlgorithmName.TryFromOid(System.String,System.Security.Cryptography.HashAlgorithmName@)">
      <summary>Prova a convertire l'OID specificato in un nome di algoritmo hash.</summary>
      <param name="oidValue">OID dell'algoritmo hash.</param>
      <param name="value">Quando questo metodo restituisce <see langword="true" />, l'algoritmo hash. Quando questo metodo restituisce <see langword="false" />, contiene <c>default</c>.</param>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="oidValue" /> costruito in modo predefinito è <see langword="null" />.</exception>
      <returns>
        <see langword="true" /> se l'OID è stato associato correttamente a un algoritmo hash; in caso contrario, <see langword="false" />.</returns>
    </member>
    <member name="P:System.Security.Cryptography.HashAlgorithmName.MD5">
      <summary>Ottiene un nome di algoritmo hash che rappresenta "MD5".</summary>
      <returns>Nome di algoritmo hash che rappresenta "MD5".</returns>
    </member>
    <member name="P:System.Security.Cryptography.HashAlgorithmName.Name">
      <summary>Ottiene la rappresentazione di stringa sottostante del nome dell'algoritmo.</summary>
      <returns>Rappresentazione di stringa del nome dell'algoritmo oppure <see langword="default" /> se non è disponibile alcun algoritmo hash.</returns>
    </member>
    <member name="P:System.Security.Cryptography.HashAlgorithmName.SHA1">
      <summary>Ottiene un nome di algoritmo hash che rappresenta "SHA1".</summary>
      <returns>Nome di algoritmo hash che rappresenta "SHA1".</returns>
    </member>
    <member name="P:System.Security.Cryptography.HashAlgorithmName.SHA256">
      <summary>Ottiene un nome di algoritmo hash che rappresenta "SHA256".</summary>
      <returns>Nome di algoritmo hash che rappresenta "SHA256".</returns>
    </member>
    <member name="P:System.Security.Cryptography.HashAlgorithmName.SHA384">
      <summary>Ottiene un nome di algoritmo hash che rappresenta "SHA384".</summary>
      <returns>Nome di algoritmo hash che rappresenta "SHA384".</returns>
    </member>
    <member name="P:System.Security.Cryptography.HashAlgorithmName.SHA512">
      <summary>Ottiene un nome di algoritmo hash che rappresenta "SHA512".</summary>
      <returns>Nome di algoritmo hash che rappresenta "SHA512".</returns>
    </member>
    <member name="T:System.Security.Cryptography.HMAC">
      <summary>Rappresenta la classe astratta dalla quale devono derivare tutte le implementazioni del codice HMAC (Hash-based Message Authentication Code).</summary>
    </member>
    <member name="M:System.Security.Cryptography.HMAC.#ctor">
      <summary>Inizializza una nuova istanza della classe <see cref="T:System.Security.Cryptography.HMAC" />.</summary>
    </member>
    <member name="M:System.Security.Cryptography.HMAC.Create">
      <summary>Crea un'istanza dell'implementazione predefinita di un codice HMAC.</summary>
      <returns>Una nuova istanza di SHA-1, a meno che le impostazioni predefinite non siano state modificate usando l'elemento &lt;cryptoClass&gt;.</returns>
    </member>
    <member name="M:System.Security.Cryptography.HMAC.Create(System.String)">
      <summary>Crea un'istanza dell'implementazione specificata di un codice HMAC (Hash-based Message Authentication Code).</summary>
      <param name="algorithmName">Implementazione HMAC da usare. La tabella seguente illustra i valori validi per il parametro <paramref name="algorithmName" /> e gli algoritmi a cui sono mappati.  
  
 <list type="table"><listheader><term> Valore del parametro</term><description> implementa</description></listheader><item><term> System.Security.Cryptography.HMAC</term><description><see cref="T:System.Security.Cryptography.HMACSHA1" /></description></item><item><term> System.Security.Cryptography.KeyedHashAlgorithm</term><description><see cref="T:System.Security.Cryptography.HMACSHA1" /></description></item><item><term> HMACMD5</term><description><see cref="T:System.Security.Cryptography.HMACMD5" /></description></item><item><term> System.Security.Cryptography.HMACMD5</term><description><see cref="T:System.Security.Cryptography.HMACMD5" /></description></item><item><term> HMACRIPEMD160</term><description><see cref="T:System.Security.Cryptography.HMACRIPEMD160" /></description></item><item><term> System.Security.Cryptography.HMACRIPEMD160</term><description><see cref="T:System.Security.Cryptography.HMACRIPEMD160" /></description></item><item><term> HMACSHA1</term><description><see cref="T:System.Security.Cryptography.HMACSHA1" /></description></item><item><term> System.Security.Cryptography.HMACSHA1</term><description><see cref="T:System.Security.Cryptography.HMACSHA1" /></description></item><item><term> HMACSHA256</term><description><see cref="T:System.Security.Cryptography.HMACSHA256" /></description></item><item><term> System.Security.Cryptography.HMACSHA256</term><description><see cref="T:System.Security.Cryptography.HMACSHA256" /></description></item><item><term> HMACSHA384</term><description><see cref="T:System.Security.Cryptography.HMACSHA384" /></description></item><item><term> System.Security.Cryptography.HMACSHA384</term><description><see cref="T:System.Security.Cryptography.HMACSHA384" /></description></item><item><term> HMACSHA512</term><description><see cref="T:System.Security.Cryptography.HMACSHA512" /></description></item><item><term> System.Security.Cryptography.HMACSHA512</term><description><see cref="T:System.Security.Cryptography.HMACSHA512" /></description></item><item><term> MACTripleDES</term><description><see cref="T:System.Security.Cryptography.MACTripleDES" /></description></item><item><term> System.Security.Cryptography.MACTripleDES</term><description><see cref="T:System.Security.Cryptography.MACTripleDES" /></description></item></list></param>
      <returns>Nuova istanza dell'implementazione HMAC specificata.</returns>
    </member>
    <member name="M:System.Security.Cryptography.HMAC.Dispose(System.Boolean)">
      <summary>Libera le risorse non gestite usate dalla classe <see cref="T:System.Security.Cryptography.HMAC" /> quando è lecito lo scambio delle chiavi ed eventualmente libera le risorse gestite.</summary>
      <param name="disposing">
        <see langword="true" /> per rilasciare sia le risorse gestite sia quelle non gestite; <see langword="false" /> per rilasciare solo le risorse non gestite.</param>
    </member>
    <member name="M:System.Security.Cryptography.HMAC.HashCore(System.Byte[],System.Int32,System.Int32)">
      <summary>Quando ne viene eseguito l'override in una classe derivata, indirizza i dati scritti nell'oggetto verso l'algoritmo HMAC per il calcolo del valore HMAC.</summary>
      <param name="rgb">Dati di input.</param>
      <param name="ib">Offset nella matrice di byte dal quale iniziare a usare i dati.</param>
      <param name="cb">Numero di byte nella matrice da usare come dati.</param>
    </member>
    <member name="M:System.Security.Cryptography.HMAC.HashCore(System.ReadOnlySpan{System.Byte})">
      <summary>Consente di indirizzare i dati scritti nell'oggetto nell'HMAC per il calcolo del valore HMAC.</summary>
      <param name="source">Input per il quale calcolare il valore HMAC.</param>
      <exception cref="T:System.PlatformNotSupportedException">In tutti i casi.</exception>
    </member>
    <member name="M:System.Security.Cryptography.HMAC.HashFinal">
      <summary>Quando ne viene eseguito l'override in una classe derivata, finalizza il calcolo del valore HMAC una volta che gli ultimi dati sono stati elaborati dall'algoritmo.</summary>
      <returns>Valore HMAC calcolato in una matrice di byte.</returns>
    </member>
    <member name="M:System.Security.Cryptography.HMAC.Initialize">
      <summary>Inizializza un'istanza dell'implementazione predefinita di <see cref="T:System.Security.Cryptography.HMAC" />.</summary>
    </member>
    <member name="M:System.Security.Cryptography.HMAC.TryHashFinal(System.Span{System.Byte},System.Int32@)">
      <summary>Tenta di finalizzare il calcolo del valore HMAC dopo l'elaborazione degli ultimi dati da parte dell'algoritmo HMAC.</summary>
      <param name="destination">Buffer per la ricezione del valore HMAC.</param>
      <param name="bytesWritten">Al termine di questo metodo, il numero totale di byte scritti in <paramref name="destination" />. Questo parametro viene trattato come non inizializzato.</param>
      <exception cref="T:System.PlatformNotSupportedException">Il metodo non viene sottoposto a override nel tipo derivato.</exception>
      <returns>
        <see langword="true" /> se la lunghezza di <paramref name="destination" /> è sufficiente per ricevere il valore HMAC. In caso contrario, <see langword="false" />.</returns>
    </member>
    <member name="P:System.Security.Cryptography.HMAC.BlockSizeValue">
      <summary>Ottiene o imposta la dimensione del blocco da utilizzare nel valore hash.</summary>
      <returns>Dimensione del blocco da usare nel valore hash.</returns>
    </member>
    <member name="P:System.Security.Cryptography.HMAC.HashName">
      <summary>Ottiene o imposta il nome dell'algoritmo hash da utilizzare per la generazione di un hash.</summary>
      <exception cref="T:System.Security.Cryptography.CryptographicException">L'algoritmo hash corrente non può essere modificato.</exception>
      <returns>Nome dell'algoritmo hash.</returns>
    </member>
    <member name="P:System.Security.Cryptography.HMAC.Key">
      <summary>Ottiene o imposta la chiave da usare nel calcolo del valore HMAC.</summary>
      <exception cref="T:System.Security.Cryptography.CryptographicException">Viene effettuato un tentativo di modificare la proprietà <see cref="P:System.Security.Cryptography.HMAC.Key" /> dopo l'inizio della generazione di un hash.</exception>
      <returns>Chiave da utilizzare nel calcolo HMAC.</returns>
    </member>
    <member name="T:System.Security.Cryptography.ICryptoTransform">
      <summary>Definisce le operazioni di base per le trasformazioni di crittografia.</summary>
    </member>
    <member name="M:System.Security.Cryptography.ICryptoTransform.TransformBlock(System.Byte[],System.Int32,System.Int32,System.Byte[],System.Int32)">
      <summary>Consente di trasformare l'area specificata della matrice di byte di input e copia la trasformazione ottenuta nell'area specificata della matrice di byte di output.</summary>
      <param name="inputBuffer">Input per il quale calcolare la trasformazione.</param>
      <param name="inputOffset">Offset nella matrice di byte di input dal quale iniziare a utilizzare i dati.</param>
      <param name="inputCount">Numero di byte nella matrice di byte di input da usare come dati.</param>
      <param name="outputBuffer">Output in cui scrivere la trasformazione.</param>
      <param name="outputOffset">Offset nella matrice di byte di output dal quale iniziare a scrivere i dati.</param>
      <returns>Numero di byte scritti.</returns>
    </member>
    <member name="M:System.Security.Cryptography.ICryptoTransform.TransformFinalBlock(System.Byte[],System.Int32,System.Int32)">
      <summary>Consente di trasformare l'area definita della matrice di byte specificata.</summary>
      <param name="inputBuffer">Input per il quale calcolare la trasformazione.</param>
      <param name="inputOffset">Offset nella matrice di byte dal quale iniziare a usare i dati.</param>
      <param name="inputCount">Numero di byte nella matrice di byte da utilizzare come dati.</param>
      <returns>Trasformazione calcolata.</returns>
    </member>
    <member name="P:System.Security.Cryptography.ICryptoTransform.CanReuseTransform">
      <summary>Ottiene un valore che indica se è possibile riutilizzare la trasformazione corrente.</summary>
      <returns>
        <see langword="true" /> se la trasformazione corrente può essere riutilizzata. In caso contrario, <see langword="false" />.</returns>
    </member>
    <member name="P:System.Security.Cryptography.ICryptoTransform.CanTransformMultipleBlocks">
      <summary>Ottiene un valore che indica se è possibile trasformare più blocchi.</summary>
      <returns>
        <see langword="true" /> se è possibile trasformare più blocchi; in caso contrario, <see langword="false" />.</returns>
    </member>
    <member name="P:System.Security.Cryptography.ICryptoTransform.InputBlockSize">
      <summary>Ottiene la dimensione del blocco di input.</summary>
      <returns>Dimensione in byte del blocco di dati di input.</returns>
    </member>
    <member name="P:System.Security.Cryptography.ICryptoTransform.OutputBlockSize">
      <summary>Ottiene la dimensione del blocco di output.</summary>
      <returns>Dimensione in byte del blocco di dati di output.</returns>
    </member>
    <member name="T:System.Security.Cryptography.KeyedHashAlgorithm">
      <summary>Rappresenta la classe astratta dalla quale devono derivare tutte le implementazioni degli algoritmi hash con chiave.</summary>
    </member>
    <member name="F:System.Security.Cryptography.KeyedHashAlgorithm.KeyValue">
      <summary>Chiave da usare nell'algoritmo hash.</summary>
    </member>
    <member name="M:System.Security.Cryptography.KeyedHashAlgorithm.#ctor">
      <summary>Inizializza una nuova istanza della classe <see cref="T:System.Security.Cryptography.KeyedHashAlgorithm" />.</summary>
    </member>
    <member name="M:System.Security.Cryptography.KeyedHashAlgorithm.Create">
      <summary>Crea un'istanza dell'implementazione predefinita di un algoritmo hash con chiave.</summary>
      <returns>Nuova istanza di <see cref="T:System.Security.Cryptography.HMACSHA1" />, a meno che le impostazioni predefinite non siano state modificate.</returns>
    </member>
    <member name="M:System.Security.Cryptography.KeyedHashAlgorithm.Create(System.String)">
      <summary>Crea un'istanza dell'implementazione specificata di un algoritmo hash con chiave.</summary>
      <param name="algName">Implementazione dell'algoritmo hash con chiave da usare. La tabella seguente illustra i valori validi per il parametro <paramref name="algName" /> e gli algoritmi a cui sono mappati.  
  
 <list type="table"><listheader><term> Valore del parametro</term><description> implementa</description></listheader><item><term> System.Security.Cryptography.HMAC</term><description><see cref="T:System.Security.Cryptography.HMACSHA1" /></description></item><item><term> System.Security.Cryptography.KeyedHashAlgorithm</term><description><see cref="T:System.Security.Cryptography.HMACSHA1" /></description></item><item><term> HMACMD5</term><description><see cref="T:System.Security.Cryptography.HMACMD5" /></description></item><item><term> System.Security.Cryptography.HMACMD5</term><description><see cref="T:System.Security.Cryptography.HMACMD5" /></description></item><item><term> HMACRIPEMD160</term><description><see cref="T:System.Security.Cryptography.HMACRIPEMD160" /></description></item><item><term> System.Security.Cryptography.HMACRIPEMD160</term><description><see cref="T:System.Security.Cryptography.HMACRIPEMD160" /></description></item><item><term> HMACSHA1</term><description><see cref="T:System.Security.Cryptography.HMACSHA1" /></description></item><item><term> System.Security.Cryptography.HMACSHA1</term><description><see cref="T:System.Security.Cryptography.HMACSHA1" /></description></item><item><term> HMACSHA256</term><description><see cref="T:System.Security.Cryptography.HMACSHA256" /></description></item><item><term> System.Security.Cryptography.HMACSHA256</term><description><see cref="T:System.Security.Cryptography.HMACSHA256" /></description></item><item><term> HMACSHA384</term><description><see cref="T:System.Security.Cryptography.HMACSHA384" /></description></item><item><term> System.Security.Cryptography.HMACSHA384</term><description><see cref="T:System.Security.Cryptography.HMACSHA384" /></description></item><item><term> HMACSHA512</term><description><see cref="T:System.Security.Cryptography.HMACSHA512" /></description></item><item><term> System.Security.Cryptography.HMACSHA512</term><description><see cref="T:System.Security.Cryptography.HMACSHA512" /></description></item><item><term> MACTripleDES</term><description><see cref="T:System.Security.Cryptography.MACTripleDES" /></description></item><item><term> System.Security.Cryptography.MACTripleDES</term><description><see cref="T:System.Security.Cryptography.MACTripleDES" /></description></item></list></param>
      <returns>Nuova istanza dell'algoritmo hash con chiave specificato.</returns>
    </member>
    <member name="M:System.Security.Cryptography.KeyedHashAlgorithm.Dispose(System.Boolean)">
      <summary>Rilascia le risorse non gestite usate da <see cref="T:System.Security.Cryptography.KeyedHashAlgorithm" /> e, facoltativamente, le risorse gestite.</summary>
      <param name="disposing">
        <see langword="true" /> per rilasciare sia le risorse gestite sia quelle non gestite; <see langword="false" /> per rilasciare solo le risorse non gestite.</param>
    </member>
    <member name="P:System.Security.Cryptography.KeyedHashAlgorithm.Key">
      <summary>Ottiene o imposta la chiave da usare nell'algoritmo hash.</summary>
      <exception cref="T:System.Security.Cryptography.CryptographicException">È stato effettuato un tentativo di modificare la proprietà <see cref="P:System.Security.Cryptography.KeyedHashAlgorithm.Key" /> dopo aver iniziato la generazione di hash.</exception>
      <returns>Chiave da usare nell'algoritmo hash.</returns>
    </member>
    <member name="T:System.Security.Cryptography.KeySizes">
      <summary>Determina il set di dimensioni valide delle chiavi per gli algoritmi di crittografia simmetrici.</summary>
    </member>
    <member name="M:System.Security.Cryptography.KeySizes.#ctor(System.Int32,System.Int32,System.Int32)">
      <summary>Inizializza una nuova istanza della classe <see cref="T:System.Security.Cryptography.KeySizes" /> con i valori della chiave specificati.</summary>
      <param name="minSize">Dimensione minima valida della chiave.</param>
      <param name="maxSize">Dimensione massima valida della chiave.</param>
      <param name="skipSize">Intervallo tra le dimensioni valide della chiave.</param>
    </member>
    <member name="P:System.Security.Cryptography.KeySizes.MaxSize">
      <summary>Specifica le dimensioni massime della chiave.</summary>
      <returns>Dimensioni massime della chiave.</returns>
    </member>
    <member name="P:System.Security.Cryptography.KeySizes.MinSize">
      <summary>Specifica le dimensioni minime della chiave.</summary>
      <returns>Dimensioni minime della chiave.</returns>
    </member>
    <member name="P:System.Security.Cryptography.KeySizes.SkipSize">
      <summary>Specifica l'intervallo tra dimensioni valide delle chiavi.</summary>
      <returns>Intervallo tra le dimensioni valide della chiave.</returns>
    </member>
    <member name="T:System.Security.Cryptography.PaddingMode">
      <summary>Specifica il tipo di riempimento da applicare quando il blocco di dati dei messaggi è più corto rispetto al numero totale di byte necessario per un'operazione di crittografia.</summary>
    </member>
    <member name="F:System.Security.Cryptography.PaddingMode.ANSIX923">
      <summary>La stringa di riempimento ANSIX923 è costituita da una sequenza di byte in cui sono inseriti degli zeri prima della lunghezza.</summary>
    </member>
    <member name="F:System.Security.Cryptography.PaddingMode.ISO10126">
      <summary>La stringa di riempimento ISO10126 è costituita da dati casuali prima della lunghezza.</summary>
    </member>
    <member name="F:System.Security.Cryptography.PaddingMode.None">
      <summary>Non viene effettuato alcun riempimento.</summary>
    </member>
    <member name="F:System.Security.Cryptography.PaddingMode.PKCS7">
      <summary>La stringa di riempimento PKCS #7 consiste di una sequenza di byte, ciascuno dei quali è uguale al numero totale di byte di riempimento aggiunti.</summary>
    </member>
    <member name="F:System.Security.Cryptography.PaddingMode.Zeros">
      <summary>I byte che costituiscono la stringa di riempimento sono impostati su zero.</summary>
    </member>
    <member name="T:System.Security.Cryptography.PbeEncryptionAlgorithm">
      <summary>Specifica gli algoritmi di crittografia da usare con la crittografia basata su password (PBE).</summary>
    </member>
    <member name="F:System.Security.Cryptography.PbeEncryptionAlgorithm.Aes128Cbc">
      <summary>Indica che la crittografia deve essere eseguita con l'algoritmo AES-128 in modalità CBC con riempimento PKCS#7.</summary>
    </member>
    <member name="F:System.Security.Cryptography.PbeEncryptionAlgorithm.Aes192Cbc">
      <summary>Indica che la crittografia deve essere eseguita con l'algoritmo AES-192 in modalità CBC con riempimento PKCS#7.</summary>
    </member>
    <member name="F:System.Security.Cryptography.PbeEncryptionAlgorithm.Aes256Cbc">
      <summary>Indica che la crittografia deve essere eseguita con l'algoritmo AES-256 in modalità CBC con riempimento PKCS#7.</summary>
    </member>
    <member name="F:System.Security.Cryptography.PbeEncryptionAlgorithm.TripleDes3KeyPkcs12">
      <summary>Indica che la crittografia deve essere eseguita con l'algoritmo TripleDES in modalità CBC con una chiave a 192 bit derivata mediante la funzione di derivazione di chiave da PKCS#12.</summary>
    </member>
    <member name="F:System.Security.Cryptography.PbeEncryptionAlgorithm.Unknown">
      <summary>Indica che non è stato selezionato alcun algoritmo di crittografia.</summary>
    </member>
    <member name="T:System.Security.Cryptography.PbeParameters">
      <summary>Rappresenta i parametri da usare per la crittografia basata su password (PBE).</summary>
    </member>
    <member name="M:System.Security.Cryptography.PbeParameters.#ctor(System.Security.Cryptography.PbeEncryptionAlgorithm,System.Security.Cryptography.HashAlgorithmName,System.Int32)">
      <summary>Inizializza una nuova istanza della classe <see cref="T:System.Security.Cryptography.PbeParameters" />.</summary>
      <param name="encryptionAlgorithm">Algoritmo da usare per la crittografia dei dati.</param>
      <param name="hashAlgorithm">Nome dell'algoritmo hash da usare con la funzione di derivazione di chiave per trasformare una password in una chiave di crittografia.</param>
      <param name="iterationCount">Il numero di iterazioni da fornire alla funzione di derivazione di chiave per trasformare una password in una chiave di crittografia.</param>
      <exception cref="T:System.ArgumentOutOfRangeException">
        <paramref name="iterationCount" /> è minore di 1.</exception>
    </member>
    <member name="P:System.Security.Cryptography.PbeParameters.EncryptionAlgorithm">
      <summary>Ottiene l'algoritmo da usare per la crittografia dei dati.</summary>
      <returns>Algoritmo da usare per la crittografia dei dati.</returns>
    </member>
    <member name="P:System.Security.Cryptography.PbeParameters.HashAlgorithm">
      <summary>Ottiene il nome dell'algoritmo hash da usare con la funzione di derivazione di chiave per trasformare una password in una chiave di crittografia.</summary>
      <returns>Nome dell'algoritmo hash da utilizzare con la funzione di derivazione della chiave (KDF) per trasformare una password in una chiave di crittografia.</returns>
    </member>
    <member name="P:System.Security.Cryptography.PbeParameters.IterationCount">
      <summary>Ottiene il numero di iterazioni da fornire alla funzione di derivazione di chiave per trasformare una password in una chiave di crittografia.</summary>
      <returns>Il numero di iterazioni da fornire alla funzione di derivazione di chiave per trasformare una password in una chiave di crittografia.</returns>
    </member>
    <member name="T:System.Security.Cryptography.SymmetricAlgorithm">
      <summary>Rappresenta la classe base astratta dalla quale devono ereditare tutte le implementazioni di algoritmi simmetrici.</summary>
    </member>
    <member name="F:System.Security.Cryptography.SymmetricAlgorithm.BlockSizeValue">
      <summary>Rappresenta la dimensione in bit del blocco dell'operazione di crittografia.</summary>
    </member>
    <member name="F:System.Security.Cryptography.SymmetricAlgorithm.FeedbackSizeValue">
      <summary>Rappresenta la dimensione in bit della quantità di informazioni raccolte dell'operazione di crittografia.</summary>
    </member>
    <member name="F:System.Security.Cryptography.SymmetricAlgorithm.IVValue">
      <summary>Rappresenta il vettore di inizializzazione <see cref="P:System.Security.Cryptography.SymmetricAlgorithm.IV" /> per l'algoritmo simmetrico.</summary>
    </member>
    <member name="F:System.Security.Cryptography.SymmetricAlgorithm.KeySizeValue">
      <summary>Rappresenta la dimensione in bit della chiave privata usata dall'algoritmo simmetrico.</summary>
    </member>
    <member name="F:System.Security.Cryptography.SymmetricAlgorithm.KeyValue">
      <summary>Rappresenta la chiave privata per l'algoritmo simmetrico.</summary>
    </member>
    <member name="F:System.Security.Cryptography.SymmetricAlgorithm.LegalBlockSizesValue">
      <summary>Specifica le dimensioni in bit dei blocchi supportate dall'algoritmo simmetrico.</summary>
    </member>
    <member name="F:System.Security.Cryptography.SymmetricAlgorithm.LegalKeySizesValue">
      <summary>Specifica le dimensioni in bit delle chiavi supportate dall'algoritmo simmetrico.</summary>
    </member>
    <member name="F:System.Security.Cryptography.SymmetricAlgorithm.ModeValue">
      <summary>Rappresenta la modalità di crittografia usata nell'algoritmo simmetrico.</summary>
    </member>
    <member name="F:System.Security.Cryptography.SymmetricAlgorithm.PaddingValue">
      <summary>Rappresenta la modalità di riempimento usata nell'algoritmo simmetrico.</summary>
    </member>
    <member name="M:System.Security.Cryptography.SymmetricAlgorithm.#ctor">
      <summary>Inizializza una nuova istanza della classe <see cref="T:System.Security.Cryptography.SymmetricAlgorithm" />.</summary>
      <exception cref="T:System.Security.Cryptography.CryptographicException">L'implementazione della classe derivata dall'algoritmo simmetrico non è valida.</exception>
    </member>
    <member name="M:System.Security.Cryptography.SymmetricAlgorithm.Clear">
      <summary>Rilascia tutte le risorse usate dalla classe <see cref="T:System.Security.Cryptography.SymmetricAlgorithm" />.</summary>
    </member>
    <member name="M:System.Security.Cryptography.SymmetricAlgorithm.Create">
      <summary>Crea l'oggetto di crittografia predefinito usato per eseguire l'algoritmo simmetrico.</summary>
      <returns>Oggetto di crittografia predefinito usato per eseguire l'algoritmo simmetrico.</returns>
    </member>
    <member name="M:System.Security.Cryptography.SymmetricAlgorithm.Create(System.String)">
      <summary>Crea l'oggetto di crittografia specificato usato per eseguire l'algoritmo simmetrico.</summary>
      <param name="algName">Nome dell'implementazione specifica della classe <see cref="T:System.Security.Cryptography.SymmetricAlgorithm" /> da usare.</param>
      <returns>Oggetto di crittografia usato per eseguire l'algoritmo simmetrico.</returns>
    </member>
    <member name="M:System.Security.Cryptography.SymmetricAlgorithm.CreateDecryptor">
      <summary>Crea un oggetto di decrittografia simmetrica con la proprietà <see cref="P:System.Security.Cryptography.SymmetricAlgorithm.Key" /> corrente e il vettore di inizializzazione <see cref="P:System.Security.Cryptography.SymmetricAlgorithm.IV" />.</summary>
      <returns>Oggetto di decrittografia simmetrica.</returns>
    </member>
    <member name="M:System.Security.Cryptography.SymmetricAlgorithm.CreateDecryptor(System.Byte[],System.Byte[])">
      <summary>Quando è sottoposto a override in una classe derivata, crea un oggetto di decrittografia simmetrica con la proprietà <see cref="P:System.Security.Cryptography.SymmetricAlgorithm.Key" /> e il vettore di inizializzazione <see cref="P:System.Security.Cryptography.SymmetricAlgorithm.IV" /> specificati.</summary>
      <param name="rgbKey">Chiave privata da usare per l'algoritmo simmetrico.</param>
      <param name="rgbIV">Vettore di inizializzazione da usare per l'algoritmo simmetrico.</param>
      <returns>Oggetto di decrittografia simmetrica.</returns>
    </member>
    <member name="M:System.Security.Cryptography.SymmetricAlgorithm.CreateEncryptor">
      <summary>Crea un oggetto di crittografia simmetrica con la proprietà <see cref="P:System.Security.Cryptography.SymmetricAlgorithm.Key" /> corrente e il vettore di inizializzazione <see cref="P:System.Security.Cryptography.SymmetricAlgorithm.IV" />.</summary>
      <returns>Oggetto di crittografia simmetrica.</returns>
    </member>
    <member name="M:System.Security.Cryptography.SymmetricAlgorithm.CreateEncryptor(System.Byte[],System.Byte[])">
      <summary>Quando è sottoposto a override in una classe derivata, crea un oggetto di crittografia simmetrica con la proprietà <see cref="P:System.Security.Cryptography.SymmetricAlgorithm.Key" /> e il vettore di inizializzazione <see cref="P:System.Security.Cryptography.SymmetricAlgorithm.IV" /> specificati.</summary>
      <param name="rgbKey">Chiave privata da usare per l'algoritmo simmetrico.</param>
      <param name="rgbIV">Vettore di inizializzazione da usare per l'algoritmo simmetrico.</param>
      <returns>Oggetto di crittografia simmetrica.</returns>
    </member>
    <member name="M:System.Security.Cryptography.SymmetricAlgorithm.Dispose">
      <summary>Rilascia tutte le risorse usate dall'istanza corrente della classe <see cref="T:System.Security.Cryptography.SymmetricAlgorithm" />.</summary>
    </member>
    <member name="M:System.Security.Cryptography.SymmetricAlgorithm.Dispose(System.Boolean)">
      <summary>Rilascia le risorse non gestite usate da <see cref="T:System.Security.Cryptography.SymmetricAlgorithm" /> e, facoltativamente, le risorse gestite.</summary>
      <param name="disposing">
        <see langword="true" /> per rilasciare sia le risorse gestite sia quelle non gestite; <see langword="false" /> per rilasciare solo le risorse non gestite.</param>
    </member>
    <member name="M:System.Security.Cryptography.SymmetricAlgorithm.GenerateIV">
      <summary>Quando è sottoposto a override in una classe derivata, genera un vettore di inizializzazione casuale <see cref="P:System.Security.Cryptography.SymmetricAlgorithm.IV" /> da usare per l'algoritmo.</summary>
    </member>
    <member name="M:System.Security.Cryptography.SymmetricAlgorithm.GenerateKey">
      <summary>Quando è sottoposto a override in una classe derivata, genera una chiave casuale <see cref="P:System.Security.Cryptography.SymmetricAlgorithm.Key" /> da usare per l'algoritmo.</summary>
    </member>
    <member name="M:System.Security.Cryptography.SymmetricAlgorithm.ValidKeySize(System.Int32)">
      <summary>Determina se la dimensione della chiave specificata è valida per l'algoritmo corrente.</summary>
      <param name="bitLength">Lunghezza in bit da verificare per una dimensione di chiave valida.</param>
      <returns>
        <see langword="true" /> se la dimensione specificata della chiave è valida per l'algoritmo corrente; in caso contrario, <see langword="false" />.</returns>
    </member>
    <member name="P:System.Security.Cryptography.SymmetricAlgorithm.BlockSize">
      <summary>Ottiene o imposta la dimensione in bit del blocco dell'operazione di crittografia.</summary>
      <exception cref="T:System.Security.Cryptography.CryptographicException">La dimensione del blocco non è valida.</exception>
      <returns>Dimensione in bit del blocco.</returns>
    </member>
    <member name="P:System.Security.Cryptography.SymmetricAlgorithm.FeedbackSize">
      <summary>Ottiene o imposta le dimensioni delle informazioni raccolte dell'operazione di crittografia per le modalità di crittografia CFB (Cipher Feedback) e OFB (Output Feedback).</summary>
      <exception cref="T:System.Security.Cryptography.CryptographicException">La dimensione della quantità di informazioni raccolte supera quella del blocco.</exception>
      <returns>Dimensione in bit della quantità di informazioni raccolte.</returns>
    </member>
    <member name="P:System.Security.Cryptography.SymmetricAlgorithm.IV">
      <summary>Ottiene o imposta il vettore di inizializzazione <see cref="P:System.Security.Cryptography.SymmetricAlgorithm.IV" /> per l'algoritmo simmetrico.</summary>
      <exception cref="T:System.ArgumentNullException">È stato effettuato un tentativo di impostare il vettore di inizializzazione su <see langword="null" />.</exception>
      <exception cref="T:System.Security.Cryptography.CryptographicException">È stato effettuato un tentativo di impostare il vettore di inizializzazione su una dimensione non valida.</exception>
      <returns>Vettore di inizializzazione.</returns>
    </member>
    <member name="P:System.Security.Cryptography.SymmetricAlgorithm.Key">
      <summary>Ottiene o imposta la chiave privata per l'algoritmo simmetrico.</summary>
      <exception cref="T:System.ArgumentNullException">Si è tentato di impostare la chiave su <see langword="null" />.</exception>
      <exception cref="T:System.Security.Cryptography.CryptographicException">La dimensione della chiave non è valida.</exception>
      <returns>Chiave privata da usare per l'algoritmo simmetrico.</returns>
    </member>
    <member name="P:System.Security.Cryptography.SymmetricAlgorithm.KeySize">
      <summary>Ottiene o imposta la dimensione in bit della chiave privata usata dall'algoritmo simmetrico.</summary>
      <exception cref="T:System.Security.Cryptography.CryptographicException">La dimensione della chiave non è valida.</exception>
      <returns>Dimensione in bit della chiave privata usata dall'algoritmo simmetrico.</returns>
    </member>
    <member name="P:System.Security.Cryptography.SymmetricAlgorithm.LegalBlockSizes">
      <summary>Ottiene le dimensioni in bit dei blocchi supportate dall'algoritmo simmetrico.</summary>
      <returns>Matrice che contiene le dimensioni dei blocchi supportate dall'algoritmo.</returns>
    </member>
    <member name="P:System.Security.Cryptography.SymmetricAlgorithm.LegalKeySizes">
      <summary>Ottiene le dimensioni in bit delle chiavi supportate dall'algoritmo simmetrico.</summary>
      <returns>Matrice che contiene le dimensioni delle chiavi supportate dall'algoritmo.</returns>
    </member>
    <member name="P:System.Security.Cryptography.SymmetricAlgorithm.Mode">
      <summary>Ottiene o imposta la modalità di funzionamento dell'algoritmo simmetrico.</summary>
      <exception cref="T:System.Security.Cryptography.CryptographicException">La modalità di cifratura non è uno dei valori di <see cref="T:System.Security.Cryptography.CipherMode" />.</exception>
      <returns>Modalità di funzionamento dell'algoritmo simmetrico. Il valore predefinito è <see cref="F:System.Security.Cryptography.CipherMode.CBC" />.</returns>
    </member>
    <member name="P:System.Security.Cryptography.SymmetricAlgorithm.Padding">
      <summary>Ottiene o imposta la modalità di riempimento usata nell'algoritmo simmetrico.</summary>
      <exception cref="T:System.Security.Cryptography.CryptographicException">La modalità di riempimento non è uno dei valori di <see cref="T:System.Security.Cryptography.PaddingMode" />.</exception>
      <returns>Modalità di riempimento usata nell'algoritmo simmetrico. Il valore predefinito è <see cref="F:System.Security.Cryptography.PaddingMode.PKCS7" />.</returns>
    </member>
  </members>
</doc>