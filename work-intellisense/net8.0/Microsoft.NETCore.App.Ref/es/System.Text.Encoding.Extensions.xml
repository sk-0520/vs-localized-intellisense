<?xml version="1.0" encoding="utf-8"?>
<doc xmlns:vsli="https://github.com/sk-0520/vs-localized-intellisense/tree/master/schema/2024">
  <assembly>
    <name>System.Text.Encoding.Extensions</name>
  </assembly>
  <members>
    <member name="T:System.Text.ASCIIEncoding">
      <summary vsli:raw="Represents an ASCII character encoding of Unicode characters.">Representa una codificación de caracteres ASCII de caracteres Unicode.</summary>
    </member>
    <member name="M:System.Text.ASCIIEncoding.#ctor">
      <summary vsli:raw="Initializes a new instance of the &lt;see cref=&quot;T:System.Text.ASCIIEncoding&quot; /&gt; class.">Inicializa una nueva instancia de la clase <see cref="T:System.Text.ASCIIEncoding" />.</summary>
    </member>
    <member name="M:System.Text.ASCIIEncoding.GetByteCount(System.Char*,System.Int32)">
      <summary vsli:raw="Calculates the number of bytes produced by encoding a set of characters starting at the specified character pointer.">Calcula el número de bytes generado mediante la codificación de un juego de caracteres a partir del puntero de caracteres especificado.</summary>
      <param name="chars" vsli:raw="A pointer to the first character to encode.">Puntero al primer carácter que se va a codificar.</param>
      <param name="count" vsli:raw="The number of characters to encode.">Número de caracteres que se van a codificar.</param>
      <exception cref="T:System.ArgumentNullException" vsli:raw="&lt;paramref name=&quot;chars&quot; /&gt; is &lt;see langword=&quot;null&quot; /&gt;.">
        <paramref name="chars" /> es <see langword="null" />.</exception>
      <exception cref="T:System.ArgumentOutOfRangeException" vsli:raw="&lt;paramref name=&quot;count&quot; /&gt; is less than zero.  &#xA;  &#xA; -or-  &#xA;  &#xA; The resulting number of bytes is greater than the maximum number that can be returned as an integer.">
        <paramref name="count" /> es menor que cero.  
  
o bien 
El número de bytes resultante es mayor que el número máximo que se puede devolver como entero.</exception>
      <exception cref="T:System.Text.EncoderFallbackException" vsli:raw="A fallback occurred (for more information, see Character Encoding in .NET)&#xA;  &#xA; -and-  &#xA;  &#xA; &lt;see cref=&quot;P:System.Text.Encoding.EncoderFallback&quot; /&gt; is set to &lt;see cref=&quot;T:System.Text.EncoderExceptionFallback&quot; /&gt;.">Se ha producido una reserva (para más información, vea Codificación de caracteres en .NET) 
- y - 
 El valor de <see cref="P:System.Text.Encoding.EncoderFallback" /> está establecido en <see cref="T:System.Text.EncoderExceptionFallback" />.</exception>
      <returns vsli:raw="The number of bytes produced by encoding the specified characters.">Número de bytes que se generan al codificar los caracteres especificados.</returns>
    </member>
    <member name="M:System.Text.ASCIIEncoding.GetByteCount(System.Char[],System.Int32,System.Int32)">
      <summary vsli:raw="Calculates the number of bytes produced by encoding a set of characters from the specified character array.">Calcula el número de bytes generado mediante la codificación de un juego de caracteres de la matriz de caracteres especificada.</summary>
      <param name="chars" vsli:raw="The character array containing the set of characters to encode.">Matriz de caracteres que contiene el juego de caracteres que se va a codificar.</param>
      <param name="index" vsli:raw="The index of the first character to encode.">Índice del primer carácter que se va a codificar.</param>
      <param name="count" vsli:raw="The number of characters to encode.">Número de caracteres que se van a codificar.</param>
      <exception cref="T:System.ArgumentNullException" vsli:raw="&lt;paramref name=&quot;chars&quot; /&gt; is &lt;see langword=&quot;null&quot; /&gt;.">
        <paramref name="chars" /> es <see langword="null" />.</exception>
      <exception cref="T:System.ArgumentOutOfRangeException" vsli:raw="&lt;paramref name=&quot;index&quot; /&gt; or &lt;paramref name=&quot;count&quot; /&gt; is less than zero.  &#xA;  &#xA; -or-  &#xA;  &#xA; &lt;paramref name=&quot;index&quot; /&gt; and &lt;paramref name=&quot;count&quot; /&gt; do not denote a valid range in &lt;paramref name=&quot;chars&quot; /&gt;.  &#xA;  &#xA; -or-  &#xA;  &#xA; The resulting number of bytes is greater than the maximum number that can be returned as an integer.">
        <paramref name="index" /> o <paramref name="count" /> es menor que cero.  
  
o bien 
 <paramref name="index" /> y <paramref name="count" /> no denotan un intervalo válido en <paramref name="chars" />.  
  
o bien 
El número de bytes resultante es mayor que el número máximo que se puede devolver como entero.</exception>
      <exception cref="T:System.Text.EncoderFallbackException" vsli:raw="A fallback occurred (for more information, see Character Encoding in .NET)&#xA;  &#xA; -and-  &#xA;  &#xA; &lt;see cref=&quot;P:System.Text.Encoding.EncoderFallback&quot; /&gt; is set to &lt;see cref=&quot;T:System.Text.EncoderExceptionFallback&quot; /&gt;.">Se ha producido una reserva (para más información, vea Codificación de caracteres en .NET) 
- y - 
 El valor de <see cref="P:System.Text.Encoding.EncoderFallback" /> está establecido en <see cref="T:System.Text.EncoderExceptionFallback" />.</exception>
      <returns vsli:raw="The number of bytes produced by encoding the specified characters.">Número de bytes que se generan al codificar los caracteres especificados.</returns>
    </member>
    <member name="M:System.Text.ASCIIEncoding.GetByteCount(System.ReadOnlySpan{System.Char})">
      <summary vsli:raw="Calculates the number of bytes produced by encoding the specified character span.">Calcula el número de bytes generado al codificar el intervalo de caracteres especificado.</summary>
      <param name="chars" vsli:raw="The span that contains the set of characters to encode.">Intervalo que contiene el juego de caracteres que se codificará.</param>
      <returns vsli:raw="The number of bytes produced by encoding the specified character span.">Número de bytes generado al codificar el intervalo de caracteres especificado.</returns>
    </member>
    <member name="M:System.Text.ASCIIEncoding.GetByteCount(System.String)">
      <summary vsli:raw="Calculates the number of bytes produced by encoding the characters in the specified &lt;see cref=&quot;T:System.String&quot; /&gt;.">Calcula el número de bytes generado al codificar los caracteres del objeto <see cref="T:System.String" /> especificado.</summary>
      <param name="chars" vsli:raw="The &lt;see cref=&quot;T:System.String&quot; /&gt; containing the set of characters to encode.">
        <see cref="T:System.String" /> que contiene el juego de caracteres que se va a codificar.</param>
      <exception cref="T:System.ArgumentNullException" vsli:raw="&lt;paramref name=&quot;chars&quot; /&gt; is &lt;see langword=&quot;null&quot; /&gt;.">
        <paramref name="chars" /> es <see langword="null" />.</exception>
      <exception cref="T:System.ArgumentOutOfRangeException" vsli:raw="The resulting number of bytes is greater than the maximum number that can be returned as an integer.">El número de bytes resultante es mayor que el número máximo que se puede devolver como entero.</exception>
      <exception cref="T:System.Text.EncoderFallbackException" vsli:raw="A fallback occurred (for more information, see Character Encoding in .NET)&#xA;  &#xA; -and-  &#xA;  &#xA; &lt;see cref=&quot;P:System.Text.Encoding.EncoderFallback&quot; /&gt; is set to &lt;see cref=&quot;T:System.Text.EncoderExceptionFallback&quot; /&gt;.">Se ha producido una reserva (para más información, vea Codificación de caracteres en .NET) 
- y - 
 El valor de <see cref="P:System.Text.Encoding.EncoderFallback" /> está establecido en <see cref="T:System.Text.EncoderExceptionFallback" />.</exception>
      <returns vsli:raw="The number of bytes produced by encoding the specified characters.">Número de bytes que se generan al codificar los caracteres especificados.</returns>
    </member>
    <member name="M:System.Text.ASCIIEncoding.GetBytes(System.Char*,System.Int32,System.Byte*,System.Int32)">
      <summary vsli:raw="Encodes a set of characters starting at the specified character pointer into a sequence of bytes that are stored starting at the specified byte pointer.">Codifica un juego de caracteres a partir del puntero de caracteres especificado en una secuencia de bytes que se almacenan a partir del puntero de bytes especificado.</summary>
      <param name="chars" vsli:raw="A pointer to the first character to encode.">Puntero al primer carácter que se va a codificar.</param>
      <param name="charCount" vsli:raw="The number of characters to encode.">Número de caracteres que se van a codificar.</param>
      <param name="bytes" vsli:raw="A pointer to the location at which to start writing the resulting sequence of bytes.">Puntero a la ubicación en la que se iniciará la escritura de la secuencia de bytes resultante.</param>
      <param name="byteCount" vsli:raw="The maximum number of bytes to write.">Número máximo de bytes que se pueden escribir.</param>
      <exception cref="T:System.ArgumentNullException" vsli:raw="&lt;paramref name=&quot;chars&quot; /&gt; is &lt;see langword=&quot;null&quot; /&gt;.  &#xA;  &#xA; -or-  &#xA;  &#xA; &lt;paramref name=&quot;bytes&quot; /&gt; is &lt;see langword=&quot;null&quot; /&gt;.">
        <paramref name="chars" /> es <see langword="null" />.  
  
o bien 
 <paramref name="bytes" /> es <see langword="null" />.</exception>
      <exception cref="T:System.ArgumentOutOfRangeException" vsli:raw="&lt;paramref name=&quot;charCount&quot; /&gt; or &lt;paramref name=&quot;byteCount&quot; /&gt; is less than zero.">
        <paramref name="charCount" /> o <paramref name="byteCount" /> es menor que cero.</exception>
      <exception cref="T:System.ArgumentException" vsli:raw="&lt;paramref name=&quot;byteCount&quot; /&gt; is less than the resulting number of bytes.">El valor de <paramref name="byteCount" /> es menor que el número resultante de bytes.</exception>
      <exception cref="T:System.Text.EncoderFallbackException" vsli:raw="A fallback occurred (for more information, see Character Encoding in .NET)&#xA;  &#xA; -and-  &#xA;  &#xA; &lt;see cref=&quot;P:System.Text.Encoding.EncoderFallback&quot; /&gt; is set to &lt;see cref=&quot;T:System.Text.EncoderExceptionFallback&quot; /&gt;.">Se ha producido una reserva (para más información, vea Codificación de caracteres en .NET) 
- y - 
 El valor de <see cref="P:System.Text.Encoding.EncoderFallback" /> está establecido en <see cref="T:System.Text.EncoderExceptionFallback" />.</exception>
      <returns vsli:raw="The actual number of bytes written at the location indicated by &lt;paramref name=&quot;bytes&quot; /&gt;.">Número real de bytes escritos en la ubicación indicada por <paramref name="bytes" />.</returns>
    </member>
    <member name="M:System.Text.ASCIIEncoding.GetBytes(System.Char[],System.Int32,System.Int32,System.Byte[],System.Int32)">
      <summary vsli:raw="Encodes a set of characters from the specified character array into the specified byte array.">Codifica un juego de caracteres de la matriz de caracteres determinada en la matriz de bytes especificada.</summary>
      <param name="chars" vsli:raw="The character array containing the set of characters to encode.">Matriz de caracteres que contiene el juego de caracteres que se va a codificar.</param>
      <param name="charIndex" vsli:raw="The index of the first character to encode.">Índice del primer carácter que se va a codificar.</param>
      <param name="charCount" vsli:raw="The number of characters to encode.">Número de caracteres que se van a codificar.</param>
      <param name="bytes" vsli:raw="The byte array to contain the resulting sequence of bytes.">Matriz de bytes que contendrá la secuencia de bytes resultante.</param>
      <param name="byteIndex" vsli:raw="The index at which to start writing the resulting sequence of bytes.">Índice en el que se inicia la escritura de la secuencia de bytes resultante.</param>
      <exception cref="T:System.ArgumentNullException" vsli:raw="&lt;paramref name=&quot;chars&quot; /&gt; is &lt;see langword=&quot;null&quot; /&gt;.  &#xA;  &#xA; -or-  &#xA;  &#xA; &lt;paramref name=&quot;bytes&quot; /&gt; is &lt;see langword=&quot;null&quot; /&gt;.">
        <paramref name="chars" /> es <see langword="null" />.  
  
o bien 
 <paramref name="bytes" /> es <see langword="null" />.</exception>
      <exception cref="T:System.ArgumentOutOfRangeException" vsli:raw="&lt;paramref name=&quot;charIndex&quot; /&gt; or &lt;paramref name=&quot;charCount&quot; /&gt; or &lt;paramref name=&quot;byteIndex&quot; /&gt; is less than zero.  &#xA;  &#xA; -or-  &#xA;  &#xA; &lt;paramref name=&quot;charIndex&quot; /&gt; and &lt;paramref name=&quot;charCount&quot; /&gt; do not denote a valid range in &lt;paramref name=&quot;chars&quot; /&gt;.  &#xA;  &#xA; -or-  &#xA;  &#xA; &lt;paramref name=&quot;byteIndex&quot; /&gt; is not a valid index in &lt;paramref name=&quot;bytes&quot; /&gt;.">El valor de <paramref name="charIndex" />, <paramref name="charCount" /> o <paramref name="byteIndex" /> es menor que cero.  
  
o bien 
 <paramref name="charIndex" /> y <paramref name="charCount" /> no denotan un intervalo válido en <paramref name="chars" />.  
  
o bien 
 <paramref name="byteIndex" /> no es un índice válido para <paramref name="bytes" />.</exception>
      <exception cref="T:System.ArgumentException" vsli:raw="&lt;paramref name=&quot;bytes&quot; /&gt; does not have enough capacity from &lt;paramref name=&quot;byteIndex&quot; /&gt; to the end of the array to accommodate the resulting bytes.">
        <paramref name="bytes" /> no tiene suficiente capacidad desde <paramref name="byteIndex" /> hasta el final de la matriz para alojar los bytes resultantes.</exception>
      <exception cref="T:System.Text.EncoderFallbackException" vsli:raw="A fallback occurred (for more information, see Character Encoding in .NET)&#xA;  &#xA; -and-  &#xA;  &#xA; &lt;see cref=&quot;P:System.Text.Encoding.EncoderFallback&quot; /&gt; is set to &lt;see cref=&quot;T:System.Text.EncoderExceptionFallback&quot; /&gt;.">Se ha producido una reserva (para más información, vea Codificación de caracteres en .NET) 
- y - 
 El valor de <see cref="P:System.Text.Encoding.EncoderFallback" /> está establecido en <see cref="T:System.Text.EncoderExceptionFallback" />.</exception>
      <returns vsli:raw="The actual number of bytes written into &lt;paramref name=&quot;bytes&quot; /&gt;.">Número real de bytes escritos en <paramref name="bytes" />.</returns>
    </member>
    <member name="M:System.Text.ASCIIEncoding.GetBytes(System.ReadOnlySpan{System.Char},System.Span{System.Byte})">
      <summary vsli:raw="Encodes the specified character span into the specified byte span.">Codifica el intervalo de caracteres especificado en el intervalo de bytes especificado.</summary>
      <param name="chars" vsli:raw="The character span to encode.">Intervalo de caracteres que se codificará.</param>
      <param name="bytes" vsli:raw="The span to contain the resulting set of bytes.">Intervalo que contendrá el conjunto de bytes resultante.</param>
      <returns vsli:raw="The actual number of bytes written into &lt;paramref name=&quot;bytes&quot; /&gt;.">Número real de bytes escritos en <paramref name="bytes" />.</returns>
    </member>
    <member name="M:System.Text.ASCIIEncoding.GetBytes(System.String,System.Int32,System.Int32,System.Byte[],System.Int32)">
      <summary vsli:raw="Encodes a set of characters from the specified &lt;see cref=&quot;T:System.String&quot; /&gt; into the specified byte array.">Codifica un juego de caracteres del objeto <see cref="T:System.String" /> especificado en la matriz de bytes especificada.</summary>
      <param name="chars" vsli:raw="The &lt;see cref=&quot;T:System.String&quot; /&gt; containing the set of characters to encode.">
        <see cref="T:System.String" /> que contiene el juego de caracteres que se va a codificar.</param>
      <param name="charIndex" vsli:raw="The index of the first character to encode.">Índice del primer carácter que se va a codificar.</param>
      <param name="charCount" vsli:raw="The number of characters to encode.">Número de caracteres que se van a codificar.</param>
      <param name="bytes" vsli:raw="The byte array to contain the resulting sequence of bytes.">Matriz de bytes que contendrá la secuencia de bytes resultante.</param>
      <param name="byteIndex" vsli:raw="The index at which to start writing the resulting sequence of bytes.">Índice en el que se inicia la escritura de la secuencia de bytes resultante.</param>
      <exception cref="T:System.ArgumentNullException" vsli:raw="&lt;paramref name=&quot;s&quot; /&gt; is &lt;see langword=&quot;null&quot; /&gt;.  &#xA;  &#xA; -or-  &#xA;  &#xA; &lt;paramref name=&quot;bytes&quot; /&gt; is &lt;see langword=&quot;null&quot; /&gt;.">
        <paramref name="s" /> es <see langword="null" />.  
  
o bien 
 <paramref name="bytes" /> es <see langword="null" />.</exception>
      <exception cref="T:System.ArgumentOutOfRangeException" vsli:raw="&lt;paramref name=&quot;charIndex&quot; /&gt; or &lt;paramref name=&quot;charCount&quot; /&gt; or &lt;paramref name=&quot;byteIndex&quot; /&gt; is less than zero.  &#xA;  &#xA; -or-  &#xA;  &#xA; &lt;paramref name=&quot;charIndex&quot; /&gt; and &lt;paramref name=&quot;charCount&quot; /&gt; do not denote a valid range in &lt;paramref name=&quot;chars&quot; /&gt;.  &#xA;  &#xA; -or-  &#xA;  &#xA; &lt;paramref name=&quot;byteIndex&quot; /&gt; is not a valid index in &lt;paramref name=&quot;bytes&quot; /&gt;.">El valor de <paramref name="charIndex" />, <paramref name="charCount" /> o <paramref name="byteIndex" /> es menor que cero.  
  
o bien 
 <paramref name="charIndex" /> y <paramref name="charCount" /> no denotan un intervalo válido en <paramref name="chars" />.  
  
o bien 
 <paramref name="byteIndex" /> no es un índice válido para <paramref name="bytes" />.</exception>
      <exception cref="T:System.ArgumentException" vsli:raw="&lt;paramref name=&quot;bytes&quot; /&gt; does not have enough capacity from &lt;paramref name=&quot;byteIndex&quot; /&gt; to the end of the array to accommodate the resulting bytes.">
        <paramref name="bytes" /> no tiene suficiente capacidad desde <paramref name="byteIndex" /> hasta el final de la matriz para alojar los bytes resultantes.</exception>
      <exception cref="T:System.Text.EncoderFallbackException" vsli:raw="A fallback occurred (for more information, see Character Encoding in .NET)&#xA;  &#xA; -and-  &#xA;  &#xA; &lt;see cref=&quot;P:System.Text.Encoding.EncoderFallback&quot; /&gt; is set to &lt;see cref=&quot;T:System.Text.EncoderExceptionFallback&quot; /&gt;.">Se ha producido una reserva (para más información, vea Codificación de caracteres en .NET) 
- y - 
 El valor de <see cref="P:System.Text.Encoding.EncoderFallback" /> está establecido en <see cref="T:System.Text.EncoderExceptionFallback" />.</exception>
      <returns vsli:raw="The actual number of bytes written into &lt;paramref name=&quot;bytes&quot; /&gt;.">Número real de bytes escritos en <paramref name="bytes" />.</returns>
    </member>
    <member name="M:System.Text.ASCIIEncoding.GetCharCount(System.Byte*,System.Int32)">
      <summary vsli:raw="Calculates the number of characters produced by decoding a sequence of bytes starting at the specified byte pointer.">Calcula el número de caracteres generado mediante la descodificación de una secuencia de bytes a partir del puntero de bytes especificado.</summary>
      <param name="bytes" vsli:raw="A pointer to the first byte to decode.">Puntero al primer byte que se va a descodificar.</param>
      <param name="count" vsli:raw="The number of bytes to decode.">Número de bytes que se van a descodificar.</param>
      <exception cref="T:System.ArgumentNullException" vsli:raw="&lt;paramref name=&quot;bytes&quot; /&gt; is &lt;see langword=&quot;null&quot; /&gt;.">
        <paramref name="bytes" /> es <see langword="null" />.</exception>
      <exception cref="T:System.ArgumentOutOfRangeException" vsli:raw="&lt;paramref name=&quot;count&quot; /&gt; is less than zero.  &#xA;  &#xA; -or-  &#xA;  &#xA; The resulting number of bytes is greater than the maximum number that can be returned as an integer.">
        <paramref name="count" /> es menor que cero.  
  
o bien 
El número de bytes resultante es mayor que el número máximo que se puede devolver como entero.</exception>
      <exception cref="T:System.Text.DecoderFallbackException" vsli:raw="A fallback occurred (for more information, see Character Encoding in .NET)&#xA;  &#xA; -and-  &#xA;  &#xA; &lt;see cref=&quot;P:System.Text.Encoding.DecoderFallback&quot; /&gt; is set to &lt;see cref=&quot;T:System.Text.DecoderExceptionFallback&quot; /&gt;.">Se ha producido una reserva (para más información, vea Codificación de caracteres en .NET) 
- y - 
 El valor de <see cref="P:System.Text.Encoding.DecoderFallback" /> está establecido en <see cref="T:System.Text.DecoderExceptionFallback" />.</exception>
      <returns vsli:raw="The number of characters produced by decoding the specified sequence of bytes.">Número de caracteres que se generan al descodificar la secuencia especificada de bytes.</returns>
    </member>
    <member name="M:System.Text.ASCIIEncoding.GetCharCount(System.Byte[],System.Int32,System.Int32)">
      <summary vsli:raw="Calculates the number of characters produced by decoding a sequence of bytes from the specified byte array.">Calcula el número de caracteres generado mediante la descodificación de una secuencia de bytes a partir de la matriz de bytes especificada.</summary>
      <param name="bytes" vsli:raw="The byte array containing the sequence of bytes to decode.">Matriz de bytes que contiene la secuencia de bytes que se va a descodificar.</param>
      <param name="index" vsli:raw="The index of the first byte to decode.">Índice del primer byte que se va a descodificar.</param>
      <param name="count" vsli:raw="The number of bytes to decode.">Número de bytes que se van a descodificar.</param>
      <exception cref="T:System.ArgumentNullException" vsli:raw="&lt;paramref name=&quot;bytes&quot; /&gt; is &lt;see langword=&quot;null&quot; /&gt;.">
        <paramref name="bytes" /> es <see langword="null" />.</exception>
      <exception cref="T:System.ArgumentOutOfRangeException" vsli:raw="&lt;paramref name=&quot;index&quot; /&gt; or &lt;paramref name=&quot;count&quot; /&gt; is less than zero.  &#xA;  &#xA; -or-  &#xA;  &#xA; &lt;paramref name=&quot;index&quot; /&gt; and &lt;paramref name=&quot;count&quot; /&gt; do not denote a valid range in &lt;paramref name=&quot;bytes&quot; /&gt;.  &#xA;  &#xA; -or-  &#xA;  &#xA; The resulting number of bytes is greater than the maximum number that can be returned as an integer.">
        <paramref name="index" /> o <paramref name="count" /> es menor que cero.  
  
o bien 
 <paramref name="index" /> y <paramref name="count" /> no denotan un intervalo válido en <paramref name="bytes" />.  
  
o bien 
El número de bytes resultante es mayor que el número máximo que se puede devolver como entero.</exception>
      <exception cref="T:System.Text.DecoderFallbackException" vsli:raw="A fallback occurred (for more information, see Character Encoding in .NET)&#xA;  &#xA; -and-  &#xA;  &#xA; &lt;see cref=&quot;P:System.Text.Encoding.DecoderFallback&quot; /&gt; is set to &lt;see cref=&quot;T:System.Text.DecoderExceptionFallback&quot; /&gt;.">Se ha producido una reserva (para más información, vea Codificación de caracteres en .NET) 
- y - 
 El valor de <see cref="P:System.Text.Encoding.DecoderFallback" /> está establecido en <see cref="T:System.Text.DecoderExceptionFallback" />.</exception>
      <returns vsli:raw="The number of characters produced by decoding the specified sequence of bytes.">Número de caracteres que se generan al descodificar la secuencia especificada de bytes.</returns>
    </member>
    <member name="M:System.Text.ASCIIEncoding.GetCharCount(System.ReadOnlySpan{System.Byte})">
      <summary vsli:raw="Calculates the number of characters produced by decoding the specified byte span.">Calcula el número de caracteres generado al descodificar el intervalo de bytes especificado.</summary>
      <param name="bytes" vsli:raw="The span containing the set of bytes to decode.">Intervalo que contiene el conjunto de bytes que se descodificará.</param>
      <returns vsli:raw="The number of characters produced by decoding the specified byte span.">Número de caracteres generado al descodificar el intervalo de bytes especificado.</returns>
    </member>
    <member name="M:System.Text.ASCIIEncoding.GetChars(System.Byte*,System.Int32,System.Char*,System.Int32)">
      <summary vsli:raw="Decodes a sequence of bytes starting at the specified byte pointer into a set of characters that are stored starting at the specified character pointer.">Descodifica una secuencia de bytes a partir del puntero de bytes especificado en un juego de caracteres que se almacenan a partir del puntero de caracteres especificado.</summary>
      <param name="bytes" vsli:raw="A pointer to the first byte to decode.">Puntero al primer byte que se va a descodificar.</param>
      <param name="byteCount" vsli:raw="The number of bytes to decode.">Número de bytes que se van a descodificar.</param>
      <param name="chars" vsli:raw="A pointer to the location at which to start writing the resulting set of characters.">Puntero a la ubicación en la que se iniciará la escritura del juego de caracteres resultante.</param>
      <param name="charCount" vsli:raw="The maximum number of characters to write.">Número máximo de caracteres que se van a escribir.</param>
      <exception cref="T:System.ArgumentNullException" vsli:raw="&lt;paramref name=&quot;bytes&quot; /&gt; is &lt;see langword=&quot;null&quot; /&gt;.  &#xA;  &#xA; -or-  &#xA;  &#xA; &lt;paramref name=&quot;chars&quot; /&gt; is &lt;see langword=&quot;null&quot; /&gt;.">
        <paramref name="bytes" /> es <see langword="null" />.  
  
o bien 
 <paramref name="chars" /> es <see langword="null" />.</exception>
      <exception cref="T:System.ArgumentOutOfRangeException" vsli:raw="&lt;paramref name=&quot;byteCount&quot; /&gt; or &lt;paramref name=&quot;charCount&quot; /&gt; is less than zero.">
        <paramref name="byteCount" /> o <paramref name="charCount" /> es menor que cero.</exception>
      <exception cref="T:System.ArgumentException" vsli:raw="&lt;paramref name=&quot;charCount&quot; /&gt; is less than the resulting number of characters.">El valor de <paramref name="charCount" /> es menor que el número de caracteres resultante.</exception>
      <exception cref="T:System.Text.DecoderFallbackException" vsli:raw="A fallback occurred (for more information, see Character Encoding in .NET)&#xA;  &#xA; -and-  &#xA;  &#xA; &lt;see cref=&quot;P:System.Text.Encoding.DecoderFallback&quot; /&gt; is set to &lt;see cref=&quot;T:System.Text.DecoderExceptionFallback&quot; /&gt;.">Se ha producido una reserva (para más información, vea Codificación de caracteres en .NET) 
- y - 
 El valor de <see cref="P:System.Text.Encoding.DecoderFallback" /> está establecido en <see cref="T:System.Text.DecoderExceptionFallback" />.</exception>
      <returns vsli:raw="The actual number of characters written at the location indicated by &lt;paramref name=&quot;chars&quot; /&gt;.">Número real de caracteres escrito en la ubicación indicada por <paramref name="chars" />.</returns>
    </member>
    <member name="M:System.Text.ASCIIEncoding.GetChars(System.Byte[],System.Int32,System.Int32,System.Char[],System.Int32)">
      <summary vsli:raw="Decodes a sequence of bytes from the specified byte array into the specified character array.">Descodifica una secuencia de bytes de la matriz de bytes especificada en la matriz de caracteres especificada.</summary>
      <param name="bytes" vsli:raw="The byte array containing the sequence of bytes to decode.">Matriz de bytes que contiene la secuencia de bytes que se va a descodificar.</param>
      <param name="byteIndex" vsli:raw="The index of the first byte to decode.">Índice del primer byte que se va a descodificar.</param>
      <param name="byteCount" vsli:raw="The number of bytes to decode.">Número de bytes que se van a descodificar.</param>
      <param name="chars" vsli:raw="The character array to contain the resulting set of characters.">Matriz de caracteres que contendrá el juego de caracteres resultante.</param>
      <param name="charIndex" vsli:raw="The index at which to start writing the resulting set of characters.">Índice en el que se inicia la escritura del juego de caracteres resultante.</param>
      <exception cref="T:System.ArgumentNullException" vsli:raw="&lt;paramref name=&quot;bytes&quot; /&gt; is &lt;see langword=&quot;null&quot; /&gt;.  &#xA;  &#xA; -or-  &#xA;  &#xA; &lt;paramref name=&quot;chars&quot; /&gt; is &lt;see langword=&quot;null&quot; /&gt;.">
        <paramref name="bytes" /> es <see langword="null" />.  
  
o bien 
 <paramref name="chars" /> es <see langword="null" />.</exception>
      <exception cref="T:System.ArgumentOutOfRangeException" vsli:raw="&lt;paramref name=&quot;byteIndex&quot; /&gt; or &lt;paramref name=&quot;byteCount&quot; /&gt; or &lt;paramref name=&quot;charIndex&quot; /&gt; is less than zero.  &#xA;  &#xA; -or-  &#xA;  &#xA; &lt;paramref name=&quot;byteindex&quot; /&gt; and &lt;paramref name=&quot;byteCount&quot; /&gt; do not denote a valid range in &lt;paramref name=&quot;bytes&quot; /&gt;.  &#xA;  &#xA; -or-  &#xA;  &#xA; &lt;paramref name=&quot;charIndex&quot; /&gt; is not a valid index in &lt;paramref name=&quot;chars&quot; /&gt;.">El valor de <paramref name="byteIndex" />, <paramref name="byteCount" /> o <paramref name="charIndex" /> es menor que cero.  
  
o bien 
 <paramref name="byteindex" /> y <paramref name="byteCount" /> no denotan un intervalo válido en <paramref name="bytes" />.  
  
o bien 
 <paramref name="charIndex" /> no es un índice válido para <paramref name="chars" />.</exception>
      <exception cref="T:System.ArgumentException" vsli:raw="&lt;paramref name=&quot;chars&quot; /&gt; does not have enough capacity from &lt;paramref name=&quot;charIndex&quot; /&gt; to the end of the array to accommodate the resulting characters.">
        <paramref name="chars" /> no tiene suficiente capacidad desde <paramref name="charIndex" /> hasta el final de la matriz para aloja los caracteres resultantes.</exception>
      <exception cref="T:System.Text.DecoderFallbackException" vsli:raw="A fallback occurred (for more information, see Character Encoding in .NET)&#xA;  &#xA; -and-  &#xA;  &#xA; &lt;see cref=&quot;P:System.Text.Encoding.DecoderFallback&quot; /&gt; is set to &lt;see cref=&quot;T:System.Text.DecoderExceptionFallback&quot; /&gt;.">Se ha producido una reserva (para más información, vea Codificación de caracteres en .NET) 
- y - 
 El valor de <see cref="P:System.Text.Encoding.DecoderFallback" /> está establecido en <see cref="T:System.Text.DecoderExceptionFallback" />.</exception>
      <returns vsli:raw="The actual number of characters written into &lt;paramref name=&quot;chars&quot; /&gt;.">Número real de caracteres escritos en <paramref name="chars" />.</returns>
    </member>
    <member name="M:System.Text.ASCIIEncoding.GetChars(System.ReadOnlySpan{System.Byte},System.Span{System.Char})">
      <summary vsli:raw="Decodes the specified byte span into the specified character span.">Descodifica el intervalo de bytes especificado en el intervalo de caracteres especificado.</summary>
      <param name="bytes" vsli:raw="The span containing the bytes to decode.">Intervalo que contiene los bytes que se descodificarán.</param>
      <param name="chars" vsli:raw="The span to contain the resulting set of characters.">Intervalo que contendrá el juego de caracteres resultante.</param>
      <returns vsli:raw="The actual number of characters written into &lt;paramref name=&quot;chars&quot; /&gt;.">Número real de caracteres escritos en <paramref name="chars" />.</returns>
    </member>
    <member name="M:System.Text.ASCIIEncoding.GetDecoder">
      <summary vsli:raw="Obtains a decoder that converts an ASCII encoded sequence of bytes into a sequence of Unicode characters.">Obtiene un descodificador que convierte una secuencia de bytes codificada en ASCII en una secuencia de caracteres Unicode.</summary>
      <returns vsli:raw="A &lt;see cref=&quot;T:System.Text.Decoder&quot; /&gt; that converts an ASCII encoded sequence of bytes into a sequence of Unicode characters.">Una clase <see cref="T:System.Text.Decoder" /> que convierte una secuencia de bytes codificada en ASCII en una secuencia de caracteres Unicode.</returns>
    </member>
    <member name="M:System.Text.ASCIIEncoding.GetEncoder">
      <summary vsli:raw="Obtains an encoder that converts a sequence of Unicode characters into an ASCII encoded sequence of bytes.">Obtiene un codificador que convierte una secuencia de caracteres Unicode en una secuencia de bytes codificada en ASCII.</summary>
      <returns vsli:raw="An &lt;see cref=&quot;T:System.Text.Encoder&quot; /&gt; that converts a sequence of Unicode characters into an ASCII encoded sequence of bytes.">Una clase <see cref="T:System.Text.Encoder" /> que convierte una secuencia de caracteres Unicode en una secuencia de bytes codificada en ASCII.</returns>
    </member>
    <member name="M:System.Text.ASCIIEncoding.GetMaxByteCount(System.Int32)">
      <summary vsli:raw="Calculates the maximum number of bytes produced by encoding the specified number of characters.">Calcula el número máximo de bytes generado mediante la codificación del número de caracteres especificado.</summary>
      <param name="charCount" vsli:raw="The number of characters to encode.">Número de caracteres que se van a codificar.</param>
      <exception cref="T:System.ArgumentOutOfRangeException" vsli:raw="&lt;paramref name=&quot;charCount&quot; /&gt; is less than zero.  &#xA;  &#xA; -or-  &#xA;  &#xA; The resulting number of bytes is greater than the maximum number that can be returned as an integer.">
        <paramref name="charCount" /> es menor que cero.  
  
o bien 
El número de bytes resultante es mayor que el número máximo que se puede devolver como entero.</exception>
      <returns vsli:raw="The maximum number of bytes produced by encoding the specified number of characters.">Número máximo de bytes generados al codificar el número de caracteres especificado.</returns>
    </member>
    <member name="M:System.Text.ASCIIEncoding.GetMaxCharCount(System.Int32)">
      <summary vsli:raw="Calculates the maximum number of characters produced by decoding the specified number of bytes.">Calcula el número máximo de caracteres generado mediante la descodificación del número de bytes especificado.</summary>
      <param name="byteCount" vsli:raw="The number of bytes to decode.">Número de bytes que se van a descodificar.</param>
      <exception cref="T:System.ArgumentOutOfRangeException" vsli:raw="&lt;paramref name=&quot;byteCount&quot; /&gt; is less than zero.  &#xA;  &#xA; -or-  &#xA;  &#xA; The resulting number of bytes is greater than the maximum number that can be returned as an integer.">
        <paramref name="byteCount" /> es menor que cero.  
  
o bien 
El número de bytes resultante es mayor que el número máximo que se puede devolver como entero.</exception>
      <returns vsli:raw="The maximum number of characters produced by decoding the specified number of bytes.">Número máximo de caracteres que se generan al descodificar el número de bytes especificado.</returns>
    </member>
    <member name="M:System.Text.ASCIIEncoding.GetString(System.Byte[],System.Int32,System.Int32)">
      <summary vsli:raw="Decodes a range of bytes from a byte array into a string.">Descodifica un intervalo de bytes de una matriz de bytes en una cadena.</summary>
      <param name="bytes" vsli:raw="The byte array containing the sequence of bytes to decode.">Matriz de bytes que contiene la secuencia de bytes que se va a descodificar.</param>
      <param name="byteIndex" vsli:raw="The index of the first byte to decode.">Índice del primer byte que se va a descodificar.</param>
      <param name="byteCount" vsli:raw="The number of bytes to decode.">Número de bytes que se van a descodificar.</param>
      <exception cref="T:System.ArgumentNullException" vsli:raw="&lt;paramref name=&quot;bytes&quot; /&gt; is &lt;see langword=&quot;null&quot; /&gt;.">
        <paramref name="bytes" /> es <see langword="null" />.</exception>
      <exception cref="T:System.ArgumentOutOfRangeException" vsli:raw="&lt;paramref name=&quot;index&quot; /&gt; or &lt;paramref name=&quot;count&quot; /&gt; is less than zero.  &#xA;  &#xA; -or-  &#xA;  &#xA; &lt;paramref name=&quot;index&quot; /&gt; and &lt;paramref name=&quot;count&quot; /&gt; do not denote a valid range in &lt;paramref name=&quot;bytes&quot; /&gt;.">
        <paramref name="index" /> o <paramref name="count" /> es menor que cero.  
  
o bien 
 <paramref name="index" /> y <paramref name="count" /> no denotan un intervalo válido en <paramref name="bytes" />.</exception>
      <exception cref="T:System.Text.DecoderFallbackException" vsli:raw="A fallback occurred (for more information, see Character Encoding in .NET)&#xA;  &#xA; -and-  &#xA;  &#xA; &lt;see cref=&quot;P:System.Text.Encoding.DecoderFallback&quot; /&gt; is set to &lt;see cref=&quot;T:System.Text.DecoderExceptionFallback&quot; /&gt;.">Se ha producido una reserva (para más información, vea Codificación de caracteres en .NET) 
- y - 
 El valor de <see cref="P:System.Text.Encoding.DecoderFallback" /> está establecido en <see cref="T:System.Text.DecoderExceptionFallback" />.</exception>
      <returns vsli:raw="A &lt;see cref=&quot;T:System.String&quot; /&gt; containing the results of decoding the specified sequence of bytes.">Objeto <see cref="T:System.String" /> que contiene los resultados obtenidos al descodificar la secuencia de bytes especificada.</returns>
    </member>
    <member name="P:System.Text.ASCIIEncoding.IsSingleByte">
      <summary vsli:raw="Gets a value indicating whether the current encoding uses single-byte code points.">Obtiene un valor que indica si la codificación actual utiliza puntos de código de un solo byte.</summary>
      <returns vsli:raw="This property is always &lt;see langword=&quot;true&quot; /&gt;.">Esta propiedad es siempre <see langword="true" />.</returns>
    </member>
    <member name="T:System.Text.UnicodeEncoding">
      <summary vsli:raw="Represents a UTF-16 encoding of Unicode characters.">Representa una codificación UTF-16 de caracteres Unicode.</summary>
    </member>
    <member name="F:System.Text.UnicodeEncoding.CharSize">
      <summary vsli:raw="Represents the Unicode character size in bytes. This field is a constant.">Representa, en bytes, el tamaño de caracteres Unicode. Este campo es una constante.</summary>
    </member>
    <member name="M:System.Text.UnicodeEncoding.#ctor">
      <summary vsli:raw="Initializes a new instance of the &lt;see cref=&quot;T:System.Text.UnicodeEncoding&quot; /&gt; class.">Inicializa una nueva instancia de la clase <see cref="T:System.Text.UnicodeEncoding" />.</summary>
    </member>
    <member name="M:System.Text.UnicodeEncoding.#ctor(System.Boolean,System.Boolean)">
      <summary vsli:raw="Initializes a new instance of the &lt;see cref=&quot;T:System.Text.UnicodeEncoding&quot; /&gt; class. Parameters specify whether to use the big endian byte order and whether the &lt;see cref=&quot;M:System.Text.UnicodeEncoding.GetPreamble&quot; /&gt; method returns a Unicode byte order mark.">Inicializa una nueva instancia de la clase <see cref="T:System.Text.UnicodeEncoding" />. Los parámetros especifican si se usa el orden de bytes big endian y si el método <see cref="M:System.Text.UnicodeEncoding.GetPreamble" /> devuelve una marca de orden de bytes Unicode.</summary>
      <param name="bigEndian" vsli:raw="&lt;see langword=&quot;true&quot; /&gt; to use the big endian byte order (most significant byte first), or &lt;see langword=&quot;false&quot; /&gt; to use the little endian byte order (least significant byte first).">
        <see langword="true" /> para usar el orden de bytes big endian (primero el byte más significativo) o <see langword="false" /> para usar el orden de bytes little endian (primero el byte menos significativo).</param>
      <param name="byteOrderMark" vsli:raw="&lt;see langword=&quot;true&quot; /&gt; to specify that the &lt;see cref=&quot;M:System.Text.UnicodeEncoding.GetPreamble&quot; /&gt; method returns a Unicode byte order mark; otherwise, &lt;see langword=&quot;false&quot; /&gt;.">Es <see langword="true" /> para especificar que el método <see cref="M:System.Text.UnicodeEncoding.GetPreamble" /> devuelve una marca de orden de bytes Unicode; en caso contrario, es <see langword="false" />.</param>
    </member>
    <member name="M:System.Text.UnicodeEncoding.#ctor(System.Boolean,System.Boolean,System.Boolean)">
      <summary vsli:raw="Initializes a new instance of the &lt;see cref=&quot;T:System.Text.UnicodeEncoding&quot; /&gt; class. Parameters specify whether to use the big endian byte order, whether to provide a Unicode byte order mark, and whether to throw an exception when an invalid encoding is detected.">Inicializa una nueva instancia de la clase <see cref="T:System.Text.UnicodeEncoding" />. Los parámetros especifican si se usa el orden de bytes big endian, si se proporciona una marca de orden de bytes Unicode y si se produce una excepción cuando se detecta una codificación no válida.</summary>
      <param name="bigEndian" vsli:raw="&lt;see langword=&quot;true&quot; /&gt; to use the big endian byte order (most significant byte first); &lt;see langword=&quot;false&quot; /&gt; to use the little endian byte order (least significant byte first).">
        <see langword="true" /> para usar el orden de bytes big endian (primero el byte más significativo); <see langword="false" /> para usar el orden de bytes little endian (primero el byte menos significativo).</param>
      <param name="byteOrderMark" vsli:raw="&lt;see langword=&quot;true&quot; /&gt; to specify that the &lt;see cref=&quot;M:System.Text.UnicodeEncoding.GetPreamble&quot; /&gt; method returns a Unicode byte order mark; otherwise, &lt;see langword=&quot;false&quot; /&gt;.">Es <see langword="true" /> para especificar que el método <see cref="M:System.Text.UnicodeEncoding.GetPreamble" /> devuelve una marca de orden de bytes Unicode; en caso contrario, es <see langword="false" />.</param>
      <param name="throwOnInvalidBytes" vsli:raw="&lt;see langword=&quot;true&quot; /&gt; to specify that an exception should be thrown when an invalid encoding is detected; otherwise, &lt;see langword=&quot;false&quot; /&gt;.">
        <see langword="true" /> para especificar que se produzca una excepción cuando se detecte una codificación no válida, en caso contrario, <see langword="false" />.</param>
    </member>
    <member name="M:System.Text.UnicodeEncoding.Equals(System.Object)">
      <summary vsli:raw="Determines whether the specified &lt;see cref=&quot;T:System.Object&quot; /&gt; is equal to the current &lt;see cref=&quot;T:System.Text.UnicodeEncoding&quot; /&gt; object.">Determina si el objeto <see cref="T:System.Object" /> especificado es igual al objeto <see cref="T:System.Text.UnicodeEncoding" /> actual.</summary>
      <param name="value" vsli:raw="The object to compare with the current object.">Objeto que se va a comparar con el objeto actual.</param>
      <returns vsli:raw="&lt;see langword=&quot;true&quot; /&gt; if &lt;paramref name=&quot;value&quot; /&gt; is an instance of &lt;see cref=&quot;T:System.Text.UnicodeEncoding&quot; /&gt; and is equal to the current object; otherwise, &lt;see langword=&quot;false&quot; /&gt;.">
        <see langword="true" /> si <paramref name="value" /> es una instancia de <see cref="T:System.Text.UnicodeEncoding" /> y es igual al objeto actual; en caso contrario, <see langword="false" />.</returns>
    </member>
    <member name="M:System.Text.UnicodeEncoding.GetByteCount(System.Char*,System.Int32)">
      <summary vsli:raw="Calculates the number of bytes produced by encoding a set of characters starting at the specified character pointer.">Calcula el número de bytes generado mediante la codificación de un juego de caracteres a partir del puntero de caracteres especificado.</summary>
      <param name="chars" vsli:raw="A pointer to the first character to encode.">Puntero al primer carácter que se va a codificar.</param>
      <param name="count" vsli:raw="The number of characters to encode.">Número de caracteres que se van a codificar.</param>
      <exception cref="T:System.ArgumentNullException" vsli:raw="&lt;paramref name=&quot;chars&quot; /&gt; is &lt;see langword=&quot;null&quot; /&gt;.">El valor de <paramref name="chars" /> es <see langword="null" />.</exception>
      <exception cref="T:System.ArgumentOutOfRangeException" vsli:raw="&lt;paramref name=&quot;count&quot; /&gt; is less than zero.  &#xA;  &#xA; -or-  &#xA;  &#xA; The resulting number of bytes is greater than the maximum number that can be returned as an integer.">
        <paramref name="count" /> es menor que cero.  
  
O bien 
El número de bytes resultante es mayor que el número máximo que se puede devolver como entero.</exception>
      <exception cref="T:System.ArgumentException" vsli:raw="Error detection is enabled and &lt;paramref name=&quot;chars&quot; /&gt; contains an invalid sequence of characters.">La detección de errores está habilitada y <paramref name="chars" /> contiene una secuencia de caracteres no válida.</exception>
      <exception cref="T:System.Text.EncoderFallbackException" vsli:raw="A fallback occurred (for more information, see Character Encoding in .NET)&#xA;  &#xA; -and-  &#xA;  &#xA; &lt;see cref=&quot;P:System.Text.Encoding.EncoderFallback&quot; /&gt; is set to &lt;see cref=&quot;T:System.Text.EncoderExceptionFallback&quot; /&gt;.">Se ha producido una reserva (para más información, vea Codificación de caracteres en .NET) 
- y - 
 El valor de <see cref="P:System.Text.Encoding.EncoderFallback" /> está establecido en <see cref="T:System.Text.EncoderExceptionFallback" />.</exception>
      <returns vsli:raw="The number of bytes produced by encoding the specified characters.">Número de bytes que se generan al codificar los caracteres especificados.</returns>
    </member>
    <member name="M:System.Text.UnicodeEncoding.GetByteCount(System.Char[],System.Int32,System.Int32)">
      <summary vsli:raw="Calculates the number of bytes produced by encoding a set of characters from the specified character array.">Calcula el número de bytes generado mediante la codificación de un juego de caracteres de la matriz de caracteres especificada.</summary>
      <param name="chars" vsli:raw="The character array containing the set of characters to encode.">Matriz de caracteres que contiene el juego de caracteres que se va a codificar.</param>
      <param name="index" vsli:raw="The index of the first character to encode.">Índice del primer carácter que se va a codificar.</param>
      <param name="count" vsli:raw="The number of characters to encode.">Número de caracteres que se van a codificar.</param>
      <exception cref="T:System.ArgumentNullException" vsli:raw="&lt;paramref name=&quot;chars&quot; /&gt; is &lt;see langword=&quot;null&quot; /&gt; (&lt;see langword=&quot;Nothing&quot; /&gt;).">
        <paramref name="chars" /> es <see langword="null" /> (<see langword="Nothing" />).</exception>
      <exception cref="T:System.ArgumentOutOfRangeException" vsli:raw="&lt;paramref name=&quot;index&quot; /&gt; or &lt;paramref name=&quot;count&quot; /&gt; is less than zero.  &#xA;  &#xA; -or-  &#xA;  &#xA; &lt;paramref name=&quot;index&quot; /&gt; and &lt;paramref name=&quot;count&quot; /&gt; do not denote a valid range in &lt;paramref name=&quot;chars&quot; /&gt;.  &#xA;  &#xA; -or-  &#xA;  &#xA; The resulting number of bytes is greater than the maximum number that can be returned as an integer.">
        <paramref name="index" /> o <paramref name="count" /> es menor que cero.  
  
O bien 
 <paramref name="index" /> y <paramref name="count" /> no denotan un intervalo válido en <paramref name="chars" />.  
  
O bien 
El número de bytes resultante es mayor que el número máximo que se puede devolver como entero.</exception>
      <exception cref="T:System.ArgumentException" vsli:raw="Error detection is enabled, and &lt;paramref name=&quot;chars&quot; /&gt; contains an invalid sequence of characters.">Está habilitada la detección de errores, y <paramref name="chars" /> contiene una secuencia de caracteres no válida.</exception>
      <exception cref="T:System.Text.EncoderFallbackException" vsli:raw="A fallback occurred (for more information, see Character Encoding in .NET)&#xA;  &#xA; -and-  &#xA;  &#xA; &lt;see cref=&quot;P:System.Text.Encoding.EncoderFallback&quot; /&gt; is set to &lt;see cref=&quot;T:System.Text.EncoderExceptionFallback&quot; /&gt;.">Se ha producido una reserva (para más información, vea Codificación de caracteres en .NET) 
- y - 
 El valor de <see cref="P:System.Text.Encoding.EncoderFallback" /> está establecido en <see cref="T:System.Text.EncoderExceptionFallback" />.</exception>
      <returns vsli:raw="The number of bytes produced by encoding the specified characters.">Número de bytes que se generan al codificar los caracteres especificados.</returns>
    </member>
    <member name="M:System.Text.UnicodeEncoding.GetByteCount(System.String)">
      <summary vsli:raw="Calculates the number of bytes produced by encoding the characters in the specified string.">Calcula el número de bytes generado al codificar los caracteres de la cadena especificada.</summary>
      <param name="s" vsli:raw="The string that contains the set of characters to encode.">Cadena que contiene el juego de caracteres que se va a codificar.</param>
      <exception cref="T:System.ArgumentNullException" vsli:raw="&lt;paramref name=&quot;s&quot; /&gt; is &lt;see langword=&quot;null&quot; /&gt;.">El valor de <paramref name="s" /> es <see langword="null" />.</exception>
      <exception cref="T:System.ArgumentOutOfRangeException" vsli:raw="The resulting number of bytes is greater than the maximum number that can be returned as an integer.">El número de bytes resultante es mayor que el número máximo que se puede devolver como entero.</exception>
      <exception cref="T:System.ArgumentException" vsli:raw="Error detection is enabled, and &lt;paramref name=&quot;s&quot; /&gt; contains an invalid sequence of characters.">Está habilitada la detección de errores, y <paramref name="s" /> contiene una secuencia de caracteres no válida.</exception>
      <exception cref="T:System.Text.EncoderFallbackException" vsli:raw="A fallback occurred (for more information, see Character Encoding in .NET)&#xA;  &#xA; -and-  &#xA;  &#xA; &lt;see cref=&quot;P:System.Text.Encoding.EncoderFallback&quot; /&gt; is set to &lt;see cref=&quot;T:System.Text.EncoderExceptionFallback&quot; /&gt;.">Se ha producido una reserva (para más información, vea Codificación de caracteres en .NET) 
- y - 
 El valor de <see cref="P:System.Text.Encoding.EncoderFallback" /> está establecido en <see cref="T:System.Text.EncoderExceptionFallback" />.</exception>
      <returns vsli:raw="The number of bytes produced by encoding the specified characters.">Número de bytes que se generan al codificar los caracteres especificados.</returns>
    </member>
    <member name="M:System.Text.UnicodeEncoding.GetBytes(System.Char*,System.Int32,System.Byte*,System.Int32)">
      <summary vsli:raw="Encodes a set of characters starting at the specified character pointer into a sequence of bytes that are stored starting at the specified byte pointer.">Codifica un juego de caracteres a partir del puntero de caracteres especificado en una secuencia de bytes que se almacenan a partir del puntero de bytes especificado.</summary>
      <param name="chars" vsli:raw="A pointer to the first character to encode.">Puntero al primer carácter que se va a codificar.</param>
      <param name="charCount" vsli:raw="The number of characters to encode.">Número de caracteres que se van a codificar.</param>
      <param name="bytes" vsli:raw="A pointer to the location at which to start writing the resulting sequence of bytes.">Puntero a la ubicación en la que se iniciará la escritura de la secuencia de bytes resultante.</param>
      <param name="byteCount" vsli:raw="The maximum number of bytes to write.">Número máximo de bytes que se pueden escribir.</param>
      <exception cref="T:System.ArgumentNullException" vsli:raw="&lt;paramref name=&quot;chars&quot; /&gt; is &lt;see langword=&quot;null&quot; /&gt; (&lt;see langword=&quot;Nothing&quot; /&gt;).  &#xA;  &#xA; -or-  &#xA;  &#xA; &lt;paramref name=&quot;bytes&quot; /&gt; is &lt;see langword=&quot;null&quot; /&gt; (&lt;see langword=&quot;Nothing&quot; /&gt;).">
        <paramref name="chars" /> es <see langword="null" /> (<see langword="Nothing" />).  
  
O bien 
 <paramref name="bytes" /> es <see langword="null" /> (<see langword="Nothing" />).</exception>
      <exception cref="T:System.ArgumentOutOfRangeException" vsli:raw="&lt;paramref name=&quot;charCount&quot; /&gt; or &lt;paramref name=&quot;byteCount&quot; /&gt; is less than zero.">
        <paramref name="charCount" /> o <paramref name="byteCount" /> es menor que cero.</exception>
      <exception cref="T:System.ArgumentException" vsli:raw="Error detection is enabled, and &lt;paramref name=&quot;chars&quot; /&gt; contains an invalid sequence of characters.  &#xA;  &#xA; -or-  &#xA;  &#xA; &lt;paramref name=&quot;byteCount&quot; /&gt; is less than the resulting number of bytes.">Está habilitada la detección de errores, y <paramref name="chars" /> contiene una secuencia de caracteres no válida.  
  
O bien 
 El valor de <paramref name="byteCount" /> es menor que el número resultante de bytes.</exception>
      <exception cref="T:System.Text.EncoderFallbackException" vsli:raw="A fallback occurred (for more information, see Character Encoding in .NET)&#xA;  &#xA; -and-  &#xA;  &#xA; &lt;see cref=&quot;P:System.Text.Encoding.EncoderFallback&quot; /&gt; is set to &lt;see cref=&quot;T:System.Text.EncoderExceptionFallback&quot; /&gt;.">Se ha producido una reserva (para más información, vea Codificación de caracteres en .NET) 
- y - 
 El valor de <see cref="P:System.Text.Encoding.EncoderFallback" /> está establecido en <see cref="T:System.Text.EncoderExceptionFallback" />.</exception>
      <returns vsli:raw="The actual number of bytes written at the location indicated by the &lt;paramref name=&quot;bytes&quot; /&gt; parameter.">Número real de bytes escritos en la ubicación indicada por el parámetro <paramref name="bytes" />.</returns>
    </member>
    <member name="M:System.Text.UnicodeEncoding.GetBytes(System.Char[],System.Int32,System.Int32,System.Byte[],System.Int32)">
      <summary vsli:raw="Encodes a set of characters from the specified character array into the specified byte array.">Codifica un juego de caracteres de la matriz de caracteres determinada en la matriz de bytes especificada.</summary>
      <param name="chars" vsli:raw="The character array containing the set of characters to encode.">Matriz de caracteres que contiene el juego de caracteres que se va a codificar.</param>
      <param name="charIndex" vsli:raw="The index of the first character to encode.">Índice del primer carácter que se va a codificar.</param>
      <param name="charCount" vsli:raw="The number of characters to encode.">Número de caracteres que se van a codificar.</param>
      <param name="bytes" vsli:raw="The byte array to contain the resulting sequence of bytes.">Matriz de bytes que contendrá la secuencia de bytes resultante.</param>
      <param name="byteIndex" vsli:raw="The index at which to start writing the resulting sequence of bytes.">Índice en el que se inicia la escritura de la secuencia de bytes resultante.</param>
      <exception cref="T:System.ArgumentNullException" vsli:raw="&lt;paramref name=&quot;chars&quot; /&gt; is &lt;see langword=&quot;null&quot; /&gt; (&lt;see langword=&quot;Nothing&quot; /&gt;).  &#xA;  &#xA; -or-  &#xA;  &#xA; &lt;paramref name=&quot;bytes&quot; /&gt; is &lt;see langword=&quot;null&quot; /&gt; (&lt;see langword=&quot;Nothing&quot; /&gt;).">
        <paramref name="chars" /> es <see langword="null" /> (<see langword="Nothing" />).  
  
O bien 
 <paramref name="bytes" /> es <see langword="null" /> (<see langword="Nothing" />).</exception>
      <exception cref="T:System.ArgumentOutOfRangeException" vsli:raw="&lt;paramref name=&quot;charIndex&quot; /&gt; or &lt;paramref name=&quot;charCount&quot; /&gt; or &lt;paramref name=&quot;byteIndex&quot; /&gt; is less than zero.  &#xA;  &#xA; -or-  &#xA;  &#xA; &lt;paramref name=&quot;charIndex&quot; /&gt; and &lt;paramref name=&quot;charCount&quot; /&gt; do not denote a valid range in &lt;paramref name=&quot;chars&quot; /&gt;.  &#xA;  &#xA; -or-  &#xA;  &#xA; &lt;paramref name=&quot;byteIndex&quot; /&gt; is not a valid index in &lt;paramref name=&quot;bytes&quot; /&gt;.">El valor de <paramref name="charIndex" />, <paramref name="charCount" /> o <paramref name="byteIndex" /> es menor que cero.  
  
O bien 
 <paramref name="charIndex" /> y <paramref name="charCount" /> no denotan un intervalo válido en <paramref name="chars" />.  
  
O bien 
 <paramref name="byteIndex" /> no es un índice válido para <paramref name="bytes" />.</exception>
      <exception cref="T:System.ArgumentException" vsli:raw="Error detection is enabled, and &lt;paramref name=&quot;chars&quot; /&gt; contains an invalid sequence of characters.  &#xA;  &#xA; -or-  &#xA;  &#xA; &lt;paramref name=&quot;bytes&quot; /&gt; does not have enough capacity from &lt;paramref name=&quot;byteIndex&quot; /&gt; to the end of the array to accommodate the resulting bytes.">Está habilitada la detección de errores, y <paramref name="chars" /> contiene una secuencia de caracteres no válida.  
  
O bien 
 <paramref name="bytes" /> no tiene suficiente capacidad desde <paramref name="byteIndex" /> hasta el final de la matriz para alojar los bytes resultantes.</exception>
      <exception cref="T:System.Text.EncoderFallbackException" vsli:raw="A fallback occurred (for more information, see Character Encoding in .NET)&#xA;  &#xA; -and-  &#xA;  &#xA; &lt;see cref=&quot;P:System.Text.Encoding.EncoderFallback&quot; /&gt; is set to &lt;see cref=&quot;T:System.Text.EncoderExceptionFallback&quot; /&gt;.">Se ha producido una reserva (para más información, vea Codificación de caracteres en .NET) 
- y - 
 El valor de <see cref="P:System.Text.Encoding.EncoderFallback" /> está establecido en <see cref="T:System.Text.EncoderExceptionFallback" />.</exception>
      <returns vsli:raw="The actual number of bytes written into &lt;paramref name=&quot;bytes&quot; /&gt;.">Número real de bytes escritos en <paramref name="bytes" />.</returns>
    </member>
    <member name="M:System.Text.UnicodeEncoding.GetBytes(System.String,System.Int32,System.Int32,System.Byte[],System.Int32)">
      <summary vsli:raw="Encodes a set of characters from the specified &lt;see cref=&quot;T:System.String&quot; /&gt; into the specified byte array.">Codifica un juego de caracteres del objeto <see cref="T:System.String" /> especificado en la matriz de bytes especificada.</summary>
      <param name="s" vsli:raw="The string containing the set of characters to encode.">Cadena que contiene el juego de caracteres que se va a codificar.</param>
      <param name="charIndex" vsli:raw="The index of the first character to encode.">Índice del primer carácter que se va a codificar.</param>
      <param name="charCount" vsli:raw="The number of characters to encode.">Número de caracteres que se van a codificar.</param>
      <param name="bytes" vsli:raw="The byte array to contain the resulting sequence of bytes.">Matriz de bytes que contendrá la secuencia de bytes resultante.</param>
      <param name="byteIndex" vsli:raw="The index at which to start writing the resulting sequence of bytes.">Índice en el que se inicia la escritura de la secuencia de bytes resultante.</param>
      <exception cref="T:System.ArgumentNullException" vsli:raw="&lt;paramref name=&quot;s&quot; /&gt; is &lt;see langword=&quot;null&quot; /&gt;.  &#xA;  &#xA; -or-  &#xA;  &#xA; &lt;paramref name=&quot;bytes&quot; /&gt; is &lt;see langword=&quot;null&quot; /&gt; (&lt;see langword=&quot;Nothing&quot; /&gt;).">El valor de <paramref name="s" /> es <see langword="null" />.  
  
O bien 
 <paramref name="bytes" /> es <see langword="null" /> (<see langword="Nothing" />).</exception>
      <exception cref="T:System.ArgumentOutOfRangeException" vsli:raw="&lt;paramref name=&quot;charIndex&quot; /&gt; or &lt;paramref name=&quot;charCount&quot; /&gt; or &lt;paramref name=&quot;byteIndex&quot; /&gt; is less than zero.  &#xA;  &#xA; -or-  &#xA;  &#xA; &lt;paramref name=&quot;charIndex&quot; /&gt; and &lt;paramref name=&quot;charCount&quot; /&gt; do not denote a valid range in &lt;paramref name=&quot;chars&quot; /&gt;.  &#xA;  &#xA; -or-  &#xA;  &#xA; &lt;paramref name=&quot;byteIndex&quot; /&gt; is not a valid index in &lt;paramref name=&quot;bytes&quot; /&gt;.">El valor de <paramref name="charIndex" />, <paramref name="charCount" /> o <paramref name="byteIndex" /> es menor que cero.  
  
O bien 
 <paramref name="charIndex" /> y <paramref name="charCount" /> no denotan un intervalo válido en <paramref name="chars" />.  
  
O bien 
 <paramref name="byteIndex" /> no es un índice válido para <paramref name="bytes" />.</exception>
      <exception cref="T:System.ArgumentException" vsli:raw="Error detection is enabled, and &lt;paramref name=&quot;s&quot; /&gt; contains an invalid sequence of characters.  &#xA;  &#xA; -or-  &#xA;  &#xA; &lt;paramref name=&quot;bytes&quot; /&gt; does not have enough capacity from &lt;paramref name=&quot;byteIndex&quot; /&gt; to the end of the array to accommodate the resulting bytes.">Está habilitada la detección de errores, y <paramref name="s" /> contiene una secuencia de caracteres no válida.  
  
O bien 
 <paramref name="bytes" /> no tiene suficiente capacidad desde <paramref name="byteIndex" /> hasta el final de la matriz para alojar los bytes resultantes.</exception>
      <exception cref="T:System.Text.EncoderFallbackException" vsli:raw="A fallback occurred (for more information, see Character Encoding in .NET)&#xA;  &#xA; -and-  &#xA;  &#xA; &lt;see cref=&quot;P:System.Text.Encoding.EncoderFallback&quot; /&gt; is set to &lt;see cref=&quot;T:System.Text.EncoderExceptionFallback&quot; /&gt;.">Se ha producido una reserva (para más información, vea Codificación de caracteres en .NET) 
- y - 
 El valor de <see cref="P:System.Text.Encoding.EncoderFallback" /> está establecido en <see cref="T:System.Text.EncoderExceptionFallback" />.</exception>
      <returns vsli:raw="The actual number of bytes written into &lt;paramref name=&quot;bytes&quot; /&gt;.">Número real de bytes escritos en <paramref name="bytes" />.</returns>
    </member>
    <member name="M:System.Text.UnicodeEncoding.GetCharCount(System.Byte*,System.Int32)">
      <summary vsli:raw="Calculates the number of characters produced by decoding a sequence of bytes starting at the specified byte pointer.">Calcula el número de caracteres generado mediante la descodificación de una secuencia de bytes a partir del puntero de bytes especificado.</summary>
      <param name="bytes" vsli:raw="A pointer to the first byte to decode.">Puntero al primer byte que se va a descodificar.</param>
      <param name="count" vsli:raw="The number of bytes to decode.">Número de bytes que se van a descodificar.</param>
      <exception cref="T:System.ArgumentNullException" vsli:raw="&lt;paramref name=&quot;bytes&quot; /&gt; is &lt;see langword=&quot;null&quot; /&gt; (&lt;see langword=&quot;Nothing&quot; /&gt;).">
        <paramref name="bytes" /> es <see langword="null" /> (<see langword="Nothing" />).</exception>
      <exception cref="T:System.ArgumentOutOfRangeException" vsli:raw="&lt;paramref name=&quot;count&quot; /&gt; is less than zero.  &#xA;  &#xA; -or-  &#xA;  &#xA; The resulting number of bytes is greater than the maximum number that can be returned as an integer.">
        <paramref name="count" /> es menor que cero.  
  
O bien 
El número de bytes resultante es mayor que el número máximo que se puede devolver como entero.</exception>
      <exception cref="T:System.ArgumentException" vsli:raw="Error detection is enabled, and &lt;paramref name=&quot;bytes&quot; /&gt; contains an invalid sequence of bytes.">Está habilitada la detección de errores, y <paramref name="bytes" /> contiene una secuencia de bytes no válida.</exception>
      <exception cref="T:System.Text.DecoderFallbackException" vsli:raw="A fallback occurred (for more information, see Character Encoding in .NET)&#xA;  &#xA; -and-  &#xA;  &#xA; &lt;see cref=&quot;P:System.Text.Encoding.DecoderFallback&quot; /&gt; is set to &lt;see cref=&quot;T:System.Text.DecoderExceptionFallback&quot; /&gt;.">Se ha producido una reserva (para más información, vea Codificación de caracteres en .NET) 
- y - 
 El valor de <see cref="P:System.Text.Encoding.DecoderFallback" /> está establecido en <see cref="T:System.Text.DecoderExceptionFallback" />.</exception>
      <returns vsli:raw="The number of characters produced by decoding the specified sequence of bytes.">Número de caracteres que se generan al descodificar la secuencia especificada de bytes.</returns>
    </member>
    <member name="M:System.Text.UnicodeEncoding.GetCharCount(System.Byte[],System.Int32,System.Int32)">
      <summary vsli:raw="Calculates the number of characters produced by decoding a sequence of bytes from the specified byte array.">Calcula el número de caracteres generado mediante la descodificación de una secuencia de bytes a partir de la matriz de bytes especificada.</summary>
      <param name="bytes" vsli:raw="The byte array containing the sequence of bytes to decode.">Matriz de bytes que contiene la secuencia de bytes que se va a descodificar.</param>
      <param name="index" vsli:raw="The index of the first byte to decode.">Índice del primer byte que se va a descodificar.</param>
      <param name="count" vsli:raw="The number of bytes to decode.">Número de bytes que se van a descodificar.</param>
      <exception cref="T:System.ArgumentNullException" vsli:raw="&lt;paramref name=&quot;bytes&quot; /&gt; is &lt;see langword=&quot;null&quot; /&gt; (&lt;see langword=&quot;Nothing&quot; /&gt;).">
        <paramref name="bytes" /> es <see langword="null" /> (<see langword="Nothing" />).</exception>
      <exception cref="T:System.ArgumentOutOfRangeException" vsli:raw="&lt;paramref name=&quot;index&quot; /&gt; or &lt;paramref name=&quot;count&quot; /&gt; is less than zero.  &#xA;  &#xA; -or-  &#xA;  &#xA; &lt;paramref name=&quot;index&quot; /&gt; and &lt;paramref name=&quot;count&quot; /&gt; do not denote a valid range in &lt;paramref name=&quot;bytes&quot; /&gt;.  &#xA;  &#xA; -or-  &#xA;  &#xA; The resulting number of bytes is greater than the maximum number that can be returned as an integer.">
        <paramref name="index" /> o <paramref name="count" /> es menor que cero.  
  
O bien 
 <paramref name="index" /> y <paramref name="count" /> no denotan un intervalo válido en <paramref name="bytes" />.  
  
O bien 
El número de bytes resultante es mayor que el número máximo que se puede devolver como entero.</exception>
      <exception cref="T:System.ArgumentException" vsli:raw="Error detection is enabled, and &lt;paramref name=&quot;bytes&quot; /&gt; contains an invalid sequence of bytes.">Está habilitada la detección de errores, y <paramref name="bytes" /> contiene una secuencia de bytes no válida.</exception>
      <exception cref="T:System.Text.DecoderFallbackException" vsli:raw="A fallback occurred (for more information, see Character Encoding in .NET)&#xA;  &#xA; -and-  &#xA;  &#xA; &lt;see cref=&quot;P:System.Text.Encoding.DecoderFallback&quot; /&gt; is set to &lt;see cref=&quot;T:System.Text.DecoderExceptionFallback&quot; /&gt;.">Se ha producido una reserva (para más información, vea Codificación de caracteres en .NET) 
- y - 
 El valor de <see cref="P:System.Text.Encoding.DecoderFallback" /> está establecido en <see cref="T:System.Text.DecoderExceptionFallback" />.</exception>
      <returns vsli:raw="The number of characters produced by decoding the specified sequence of bytes.">Número de caracteres que se generan al descodificar la secuencia especificada de bytes.</returns>
    </member>
    <member name="M:System.Text.UnicodeEncoding.GetChars(System.Byte*,System.Int32,System.Char*,System.Int32)">
      <summary vsli:raw="Decodes a sequence of bytes starting at the specified byte pointer into a set of characters that are stored starting at the specified character pointer.">Descodifica una secuencia de bytes a partir del puntero de bytes especificado en un juego de caracteres que se almacenan a partir del puntero de caracteres especificado.</summary>
      <param name="bytes" vsli:raw="A pointer to the first byte to decode.">Puntero al primer byte que se va a descodificar.</param>
      <param name="byteCount" vsli:raw="The number of bytes to decode.">Número de bytes que se van a descodificar.</param>
      <param name="chars" vsli:raw="A pointer to the location at which to start writing the resulting set of characters.">Puntero a la ubicación en la que se iniciará la escritura del juego de caracteres resultante.</param>
      <param name="charCount" vsli:raw="The maximum number of characters to write.">Número máximo de caracteres que se van a escribir.</param>
      <exception cref="T:System.ArgumentNullException" vsli:raw="&lt;paramref name=&quot;bytes&quot; /&gt; is &lt;see langword=&quot;null&quot; /&gt; (&lt;see langword=&quot;Nothing&quot; /&gt;).  &#xA;  &#xA; -or-  &#xA;  &#xA; &lt;paramref name=&quot;chars&quot; /&gt; is &lt;see langword=&quot;null&quot; /&gt; (&lt;see langword=&quot;Nothing&quot; /&gt;).">
        <paramref name="bytes" /> es <see langword="null" /> (<see langword="Nothing" />).  
  
O bien 
 <paramref name="chars" /> es <see langword="null" /> (<see langword="Nothing" />).</exception>
      <exception cref="T:System.ArgumentOutOfRangeException" vsli:raw="&lt;paramref name=&quot;byteCount&quot; /&gt; or &lt;paramref name=&quot;charCount&quot; /&gt; is less than zero.">
        <paramref name="byteCount" /> o <paramref name="charCount" /> es menor que cero.</exception>
      <exception cref="T:System.ArgumentException" vsli:raw="Error detection is enabled, and &lt;paramref name=&quot;bytes&quot; /&gt; contains an invalid sequence of bytes.  &#xA;  &#xA; -or-  &#xA;  &#xA; &lt;paramref name=&quot;charCount&quot; /&gt; is less than the resulting number of characters.">Está habilitada la detección de errores, y <paramref name="bytes" /> contiene una secuencia de bytes no válida.  
  
O bien 
 El valor de <paramref name="charCount" /> es menor que el número de caracteres resultante.</exception>
      <exception cref="T:System.Text.DecoderFallbackException" vsli:raw="A fallback occurred (for more information, see Character Encoding in .NET)&#xA;  &#xA; -and-  &#xA;  &#xA; &lt;see cref=&quot;P:System.Text.Encoding.DecoderFallback&quot; /&gt; is set to &lt;see cref=&quot;T:System.Text.DecoderExceptionFallback&quot; /&gt;.">Se ha producido una reserva (para más información, vea Codificación de caracteres en .NET) 
- y - 
 El valor de <see cref="P:System.Text.Encoding.DecoderFallback" /> está establecido en <see cref="T:System.Text.DecoderExceptionFallback" />.</exception>
      <returns vsli:raw="The actual number of characters written at the location indicated by the &lt;paramref name=&quot;chars&quot; /&gt; parameter.">Número real de caracteres escritos en la ubicación indicada por el parámetro <paramref name="chars" />.</returns>
    </member>
    <member name="M:System.Text.UnicodeEncoding.GetChars(System.Byte[],System.Int32,System.Int32,System.Char[],System.Int32)">
      <summary vsli:raw="Decodes a sequence of bytes from the specified byte array into the specified character array.">Descodifica una secuencia de bytes de la matriz de bytes especificada en la matriz de caracteres especificada.</summary>
      <param name="bytes" vsli:raw="The byte array containing the sequence of bytes to decode.">Matriz de bytes que contiene la secuencia de bytes que se va a descodificar.</param>
      <param name="byteIndex" vsli:raw="The index of the first byte to decode.">Índice del primer byte que se va a descodificar.</param>
      <param name="byteCount" vsli:raw="The number of bytes to decode.">Número de bytes que se van a descodificar.</param>
      <param name="chars" vsli:raw="The character array to contain the resulting set of characters.">Matriz de caracteres que contendrá el juego de caracteres resultante.</param>
      <param name="charIndex" vsli:raw="The index at which to start writing the resulting set of characters.">Índice en el que se inicia la escritura del juego de caracteres resultante.</param>
      <exception cref="T:System.ArgumentNullException" vsli:raw="&lt;paramref name=&quot;bytes&quot; /&gt; is &lt;see langword=&quot;null&quot; /&gt; (&lt;see langword=&quot;Nothing&quot; /&gt;).  &#xA;  &#xA; -or-  &#xA;  &#xA; &lt;paramref name=&quot;chars&quot; /&gt; is &lt;see langword=&quot;null&quot; /&gt; (&lt;see langword=&quot;Nothing&quot; /&gt;).">
        <paramref name="bytes" /> es <see langword="null" /> (<see langword="Nothing" />).  
  
O bien 
 <paramref name="chars" /> es <see langword="null" /> (<see langword="Nothing" />).</exception>
      <exception cref="T:System.ArgumentOutOfRangeException" vsli:raw="&lt;paramref name=&quot;byteIndex&quot; /&gt; or &lt;paramref name=&quot;byteCount&quot; /&gt; or &lt;paramref name=&quot;charIndex&quot; /&gt; is less than zero.  &#xA;  &#xA; -or-  &#xA;  &#xA; &lt;paramref name=&quot;byteindex&quot; /&gt; and &lt;paramref name=&quot;byteCount&quot; /&gt; do not denote a valid range in &lt;paramref name=&quot;bytes&quot; /&gt;.  &#xA;  &#xA; -or-  &#xA;  &#xA; &lt;paramref name=&quot;charIndex&quot; /&gt; is not a valid index in &lt;paramref name=&quot;chars&quot; /&gt;.">El valor de <paramref name="byteIndex" />, <paramref name="byteCount" /> o <paramref name="charIndex" /> es menor que cero.  
  
O bien 
 <paramref name="byteindex" /> y <paramref name="byteCount" /> no denotan un intervalo válido en <paramref name="bytes" />.  
  
O bien 
 <paramref name="charIndex" /> no es un índice válido para <paramref name="chars" />.</exception>
      <exception cref="T:System.ArgumentException" vsli:raw="Error detection is enabled, and &lt;paramref name=&quot;bytes&quot; /&gt; contains an invalid sequence of bytes.  &#xA;  &#xA; -or-  &#xA;  &#xA; &lt;paramref name=&quot;chars&quot; /&gt; does not have enough capacity from &lt;paramref name=&quot;charIndex&quot; /&gt; to the end of the array to accommodate the resulting characters.">Está habilitada la detección de errores, y <paramref name="bytes" /> contiene una secuencia de bytes no válida.  
  
O bien 
 <paramref name="chars" /> no tiene suficiente capacidad desde <paramref name="charIndex" /> hasta el final de la matriz para aloja los caracteres resultantes.</exception>
      <exception cref="T:System.Text.DecoderFallbackException" vsli:raw="A fallback occurred (for more information, see Character Encoding in .NET)&#xA;  &#xA; -and-  &#xA;  &#xA; &lt;see cref=&quot;P:System.Text.Encoding.DecoderFallback&quot; /&gt; is set to &lt;see cref=&quot;T:System.Text.DecoderExceptionFallback&quot; /&gt;.">Se ha producido una reserva (para más información, vea Codificación de caracteres en .NET) 
- y - 
 El valor de <see cref="P:System.Text.Encoding.DecoderFallback" /> está establecido en <see cref="T:System.Text.DecoderExceptionFallback" />.</exception>
      <returns vsli:raw="The actual number of characters written into &lt;paramref name=&quot;chars&quot; /&gt;.">Número real de caracteres escritos en <paramref name="chars" />.</returns>
    </member>
    <member name="M:System.Text.UnicodeEncoding.GetDecoder">
      <summary vsli:raw="Obtains a decoder that converts a UTF-16 encoded sequence of bytes into a sequence of Unicode characters.">Obtiene un descodificador que convierte una secuencia de bytes codificada en UTF-16 en una secuencia de caracteres Unicode.</summary>
      <returns vsli:raw="A &lt;see cref=&quot;T:System.Text.Decoder&quot; /&gt; that converts a UTF-16 encoded sequence of bytes into a sequence of Unicode characters.">Objeto <see cref="T:System.Text.Decoder" /> que convierte una secuencia de bytes codificada en UTF-16 en una secuencia de caracteres Unicode.</returns>
    </member>
    <member name="M:System.Text.UnicodeEncoding.GetEncoder">
      <summary vsli:raw="Obtains an encoder that converts a sequence of Unicode characters into a UTF-16 encoded sequence of bytes.">Obtiene un codificador que convierte una secuencia de caracteres Unicode en una secuencia de bytes codificada en UTF-16.</summary>
      <returns vsli:raw="A &lt;see cref=&quot;T:System.Text.Encoder&quot; /&gt; object that converts a sequence of Unicode characters into a UTF-16 encoded sequence of bytes.">Objeto <see cref="T:System.Text.Encoder" /> que convierte una secuencia de caracteres Unicode en una secuencia de bytes codificada en UTF-16.</returns>
    </member>
    <member name="M:System.Text.UnicodeEncoding.GetHashCode">
      <summary vsli:raw="Returns the hash code for the current instance.">Devuelve el código hash de la instancia actual.</summary>
      <returns vsli:raw="The hash code for the current &lt;see cref=&quot;T:System.Text.UnicodeEncoding&quot; /&gt; object.">Código hash para el objeto <see cref="T:System.Text.UnicodeEncoding" /> actual.</returns>
    </member>
    <member name="M:System.Text.UnicodeEncoding.GetMaxByteCount(System.Int32)">
      <summary vsli:raw="Calculates the maximum number of bytes produced by encoding the specified number of characters.">Calcula el número máximo de bytes generado mediante la codificación del número de caracteres especificado.</summary>
      <param name="charCount" vsli:raw="The number of characters to encode.">Número de caracteres que se van a codificar.</param>
      <exception cref="T:System.ArgumentOutOfRangeException" vsli:raw="&lt;paramref name=&quot;charCount&quot; /&gt; is less than zero.  &#xA;  &#xA; -or-  &#xA;  &#xA; The resulting number of bytes is greater than the maximum number that can be returned as an integer.">
        <paramref name="charCount" /> es menor que cero.  
  
O bien 
El número de bytes resultante es mayor que el número máximo que se puede devolver como entero.</exception>
      <exception cref="T:System.Text.EncoderFallbackException" vsli:raw="A fallback occurred (for more information, see Character Encoding in .NET)&#xA;  &#xA; -and-  &#xA;  &#xA; &lt;see cref=&quot;P:System.Text.Encoding.EncoderFallback&quot; /&gt; is set to &lt;see cref=&quot;T:System.Text.EncoderExceptionFallback&quot; /&gt;.">Se ha producido una reserva (para más información, vea Codificación de caracteres en .NET) 
- y - 
 El valor de <see cref="P:System.Text.Encoding.EncoderFallback" /> está establecido en <see cref="T:System.Text.EncoderExceptionFallback" />.</exception>
      <returns vsli:raw="The maximum number of bytes produced by encoding the specified number of characters.">Número máximo de bytes generados al codificar el número de caracteres especificado.</returns>
    </member>
    <member name="M:System.Text.UnicodeEncoding.GetMaxCharCount(System.Int32)">
      <summary vsli:raw="Calculates the maximum number of characters produced by decoding the specified number of bytes.">Calcula el número máximo de caracteres generado mediante la descodificación del número de bytes especificado.</summary>
      <param name="byteCount" vsli:raw="The number of bytes to decode.">Número de bytes que se van a descodificar.</param>
      <exception cref="T:System.ArgumentOutOfRangeException" vsli:raw="&lt;paramref name=&quot;byteCount&quot; /&gt; is less than zero.  &#xA;  &#xA; -or-  &#xA;  &#xA; The resulting number of bytes is greater than the maximum number that can be returned as an integer.">
        <paramref name="byteCount" /> es menor que cero.  
  
O bien 
El número de bytes resultante es mayor que el número máximo que se puede devolver como entero.</exception>
      <exception cref="T:System.Text.DecoderFallbackException" vsli:raw="A fallback occurred (for more information, see Character Encoding in .NET)&#xA;  &#xA; -and-  &#xA;  &#xA; &lt;see cref=&quot;P:System.Text.Encoding.DecoderFallback&quot; /&gt; is set to &lt;see cref=&quot;T:System.Text.DecoderExceptionFallback&quot; /&gt;.">Se ha producido una reserva (para más información, vea Codificación de caracteres en .NET) 
- y - 
 El valor de <see cref="P:System.Text.Encoding.DecoderFallback" /> está establecido en <see cref="T:System.Text.DecoderExceptionFallback" />.</exception>
      <returns vsli:raw="The maximum number of characters produced by decoding the specified number of bytes.">Número máximo de caracteres que se generan al descodificar el número de bytes especificado.</returns>
    </member>
    <member name="M:System.Text.UnicodeEncoding.GetPreamble">
      <summary vsli:raw="Returns a Unicode byte order mark encoded in UTF-16 format, if the constructor for this instance requests a byte order mark.">Devuelve una marca de orden de bytes Unicode codificada en formato UTF-16 si el constructor empleado para esta instancia solicita una marca de orden de bytes.</summary>
      <returns vsli:raw="A byte array containing the Unicode byte order mark, if the &lt;see cref=&quot;T:System.Text.UnicodeEncoding&quot; /&gt; object is configured to supply one. Otherwise, this method returns a zero-length byte array.">Matriz de bytes que contiene la marca de orden de bytes Unicode, si el objeto <see cref="T:System.Text.UnicodeEncoding" /> está configurado para proporcionar una. De lo contrario, este método devuelve una matriz de bytes de longitud cero.</returns>
    </member>
    <member name="M:System.Text.UnicodeEncoding.GetString(System.Byte[],System.Int32,System.Int32)">
      <summary vsli:raw="Decodes a range of bytes from a byte array into a string.">Descodifica un intervalo de bytes de una matriz de bytes en una cadena.</summary>
      <param name="bytes" vsli:raw="The byte array containing the sequence of bytes to decode.">Matriz de bytes que contiene la secuencia de bytes que se va a descodificar.</param>
      <param name="index" vsli:raw="The index of the first byte to decode.">Índice del primer byte que se va a descodificar.</param>
      <param name="count" vsli:raw="The number of bytes to decode.">Número de bytes que se van a descodificar.</param>
      <exception cref="T:System.ArgumentNullException" vsli:raw="&lt;paramref name=&quot;bytes&quot; /&gt; is &lt;see langword=&quot;null&quot; /&gt; (&lt;see langword=&quot;Nothing&quot; /&gt;).">
        <paramref name="bytes" /> es <see langword="null" /> (<see langword="Nothing" />).</exception>
      <exception cref="T:System.ArgumentOutOfRangeException" vsli:raw="&lt;paramref name=&quot;index&quot; /&gt; or &lt;paramref name=&quot;count&quot; /&gt; is less than zero.  &#xA;  &#xA; -or-  &#xA;  &#xA; &lt;paramref name=&quot;index&quot; /&gt; and &lt;paramref name=&quot;count&quot; /&gt; do not denote a valid range in &lt;paramref name=&quot;bytes&quot; /&gt;.">
        <paramref name="index" /> o <paramref name="count" /> es menor que cero.  
  
O bien 
 <paramref name="index" /> y <paramref name="count" /> no denotan un intervalo válido en <paramref name="bytes" />.</exception>
      <exception cref="T:System.ArgumentException" vsli:raw="Error detection is enabled, and &lt;paramref name=&quot;bytes&quot; /&gt; contains an invalid sequence of bytes.">Está habilitada la detección de errores, y <paramref name="bytes" /> contiene una secuencia de bytes no válida.</exception>
      <exception cref="T:System.Text.DecoderFallbackException" vsli:raw="A fallback occurred (for more information, see Character Encoding in .NET)&#xA;  &#xA; -and-  &#xA;  &#xA; &lt;see cref=&quot;P:System.Text.Encoding.DecoderFallback&quot; /&gt; is set to &lt;see cref=&quot;T:System.Text.DecoderExceptionFallback&quot; /&gt;.">Se ha producido una reserva (para más información, vea Codificación de caracteres en .NET) 
- y - 
 El valor de <see cref="P:System.Text.Encoding.DecoderFallback" /> está establecido en <see cref="T:System.Text.DecoderExceptionFallback" />.</exception>
      <returns vsli:raw="A &lt;see cref=&quot;T:System.String&quot; /&gt; object containing the results of decoding the specified sequence of bytes.">Objeto <see cref="T:System.String" /> que contiene los resultados obtenidos al descodificar la secuencia de bytes especificada.</returns>
    </member>
    <member name="P:System.Text.UnicodeEncoding.Preamble">
      <summary vsli:raw="Gets a Unicode byte order mark encoded in UTF-16 format, if this object is configured to supply one.">Obtiene una marca BOM Unicode codificada en formato UTF-16, si el objeto se ha configurado para proporcionarla.</summary>
      <returns vsli:raw="A byte span containing the Unicode byte order mark, if this object is configured to supply one; otherwise, the default span.">Intervalo de bytes que contiene la marca de orden de bytes Unicode, si este objeto está configurado para proporcionar uno; de lo contrario, el intervalo predeterminado.</returns>
    </member>
    <member name="T:System.Text.UTF32Encoding">
      <summary vsli:raw="Represents a UTF-32 encoding of Unicode characters.">Representa una codificación UTF-32 de caracteres Unicode.</summary>
    </member>
    <member name="M:System.Text.UTF32Encoding.#ctor">
      <summary vsli:raw="Initializes a new instance of the &lt;see cref=&quot;T:System.Text.UTF32Encoding&quot; /&gt; class.">Inicializa una nueva instancia de la clase <see cref="T:System.Text.UTF32Encoding" />.</summary>
    </member>
    <member name="M:System.Text.UTF32Encoding.#ctor(System.Boolean,System.Boolean)">
      <summary vsli:raw="Initializes a new instance of the &lt;see cref=&quot;T:System.Text.UTF32Encoding&quot; /&gt; class. Parameters specify whether to use the big endian byte order and whether the &lt;see cref=&quot;M:System.Text.UTF32Encoding.GetPreamble&quot; /&gt; method returns a Unicode byte order mark.">Inicializa una nueva instancia de la clase <see cref="T:System.Text.UTF32Encoding" />. Los parámetros especifican si se usa el orden de bytes big endian y si el método <see cref="M:System.Text.UTF32Encoding.GetPreamble" /> devuelve una marca de orden de bytes Unicode.</summary>
      <param name="bigEndian" vsli:raw="&lt;see langword=&quot;true&quot; /&gt; to use the big endian byte order (most significant byte first), or &lt;see langword=&quot;false&quot; /&gt; to use the little endian byte order (least significant byte first).">
        <see langword="true" /> para usar el orden de bytes big endian (primero el byte más significativo) o <see langword="false" /> para usar el orden de bytes little endian (primero el byte menos significativo).</param>
      <param name="byteOrderMark" vsli:raw="&lt;see langword=&quot;true&quot; /&gt; to specify that a Unicode byte order mark is provided; otherwise, &lt;see langword=&quot;false&quot; /&gt;.">Es <see langword="true" /> para especificar que se proporciona una marca de orden de bytes Unicode; en caso contrario, es <see langword="false" />.</param>
    </member>
    <member name="M:System.Text.UTF32Encoding.#ctor(System.Boolean,System.Boolean,System.Boolean)">
      <summary vsli:raw="Initializes a new instance of the &lt;see cref=&quot;T:System.Text.UTF32Encoding&quot; /&gt; class. Parameters specify whether to use the big endian byte order, whether to provide a Unicode byte order mark, and whether to throw an exception when an invalid encoding is detected.">Inicializa una nueva instancia de la clase <see cref="T:System.Text.UTF32Encoding" />. Los parámetros especifican si se usa el orden de bytes big endian, si se proporciona una marca de orden de bytes Unicode y si se produce una excepción cuando se detecta una codificación no válida.</summary>
      <param name="bigEndian" vsli:raw="&lt;see langword=&quot;true&quot; /&gt; to use the big endian byte order (most significant byte first), or &lt;see langword=&quot;false&quot; /&gt; to use the little endian byte order (least significant byte first).">
        <see langword="true" /> para usar el orden de bytes big endian (primero el byte más significativo) o <see langword="false" /> para usar el orden de bytes little endian (primero el byte menos significativo).</param>
      <param name="byteOrderMark" vsli:raw="&lt;see langword=&quot;true&quot; /&gt; to specify that a Unicode byte order mark is provided; otherwise, &lt;see langword=&quot;false&quot; /&gt;.">Es <see langword="true" /> para especificar que se proporciona una marca de orden de bytes Unicode; en caso contrario, es <see langword="false" />.</param>
      <param name="throwOnInvalidCharacters" vsli:raw="&lt;see langword=&quot;true&quot; /&gt; to specify that an exception should be thrown when an invalid encoding is detected; otherwise, &lt;see langword=&quot;false&quot; /&gt;.">
        <see langword="true" /> para especificar que se produzca una excepción cuando se detecte una codificación no válida, en caso contrario, <see langword="false" />.</param>
    </member>
    <member name="M:System.Text.UTF32Encoding.Equals(System.Object)">
      <summary vsli:raw="Determines whether the specified &lt;see cref=&quot;T:System.Object&quot; /&gt; is equal to the current &lt;see cref=&quot;T:System.Text.UTF32Encoding&quot; /&gt; object.">Determina si el objeto <see cref="T:System.Object" /> especificado es igual al objeto <see cref="T:System.Text.UTF32Encoding" /> actual.</summary>
      <param name="value" vsli:raw="The &lt;see cref=&quot;T:System.Object&quot; /&gt; to compare with the current object.">
        <see cref="T:System.Object" /> que se va a comparar con el objeto actual.</param>
      <returns vsli:raw="&lt;see langword=&quot;true&quot; /&gt; if &lt;paramref name=&quot;value&quot; /&gt; is an instance of &lt;see cref=&quot;T:System.Text.UTF32Encoding&quot; /&gt; and is equal to the current object; otherwise, &lt;see langword=&quot;false&quot; /&gt;.">
        <see langword="true" /> si <paramref name="value" /> es una instancia de <see cref="T:System.Text.UTF32Encoding" /> y es igual al objeto actual; en caso contrario, <see langword="false" />.</returns>
    </member>
    <member name="M:System.Text.UTF32Encoding.GetByteCount(System.Char*,System.Int32)">
      <summary vsli:raw="Calculates the number of bytes produced by encoding a set of characters starting at the specified character pointer.">Calcula el número de bytes generado mediante la codificación de un juego de caracteres a partir del puntero de caracteres especificado.</summary>
      <param name="chars" vsli:raw="A pointer to the first character to encode.">Puntero al primer carácter que se va a codificar.</param>
      <param name="count" vsli:raw="The number of characters to encode.">Número de caracteres que se van a codificar.</param>
      <exception cref="T:System.ArgumentNullException" vsli:raw="&lt;paramref name=&quot;chars&quot; /&gt; is &lt;see langword=&quot;null&quot; /&gt;.">
        <paramref name="chars" /> es <see langword="null" />.</exception>
      <exception cref="T:System.ArgumentOutOfRangeException" vsli:raw="&lt;paramref name=&quot;count&quot; /&gt; is less than zero.  &#xA;  &#xA; -or-  &#xA;  &#xA; The resulting number of bytes is greater than the maximum number that can be returned as an integer.">
        <paramref name="count" /> es menor que cero.  
  
o bien 
El número de bytes resultante es mayor que el número máximo que se puede devolver como entero.</exception>
      <exception cref="T:System.ArgumentException" vsli:raw="Error detection is enabled, and &lt;paramref name=&quot;chars&quot; /&gt; contains an invalid sequence of characters.">Está habilitada la detección de errores, y <paramref name="chars" /> contiene una secuencia de caracteres no válida.</exception>
      <exception cref="T:System.Text.EncoderFallbackException" vsli:raw="A fallback occurred (for more information, see Character Encoding in .NET)&#xA;  &#xA; -and-  &#xA;  &#xA; &lt;see cref=&quot;P:System.Text.Encoding.EncoderFallback&quot; /&gt; is set to &lt;see cref=&quot;T:System.Text.EncoderExceptionFallback&quot; /&gt;.">Se ha producido una reserva (para más información, vea Codificación de caracteres en .NET) 
- y - 
 El valor de <see cref="P:System.Text.Encoding.EncoderFallback" /> está establecido en <see cref="T:System.Text.EncoderExceptionFallback" />.</exception>
      <returns vsli:raw="The number of bytes produced by encoding the specified characters.">Número de bytes que se generan al codificar los caracteres especificados.</returns>
    </member>
    <member name="M:System.Text.UTF32Encoding.GetByteCount(System.Char[],System.Int32,System.Int32)">
      <summary vsli:raw="Calculates the number of bytes produced by encoding a set of characters from the specified character array.">Calcula el número de bytes generado mediante la codificación de un juego de caracteres de la matriz de caracteres especificada.</summary>
      <param name="chars" vsli:raw="The character array containing the set of characters to encode.">Matriz de caracteres que contiene el juego de caracteres que se va a codificar.</param>
      <param name="index" vsli:raw="The index of the first character to encode.">Índice del primer carácter que se va a codificar.</param>
      <param name="count" vsli:raw="The number of characters to encode.">Número de caracteres que se van a codificar.</param>
      <exception cref="T:System.ArgumentNullException" vsli:raw="&lt;paramref name=&quot;chars&quot; /&gt; is &lt;see langword=&quot;null&quot; /&gt;.">
        <paramref name="chars" /> es <see langword="null" />.</exception>
      <exception cref="T:System.ArgumentOutOfRangeException" vsli:raw="&lt;paramref name=&quot;index&quot; /&gt; or &lt;paramref name=&quot;count&quot; /&gt; is less than zero.  &#xA;  &#xA; -or-  &#xA;  &#xA; &lt;paramref name=&quot;index&quot; /&gt; and &lt;paramref name=&quot;count&quot; /&gt; do not denote a valid range in &lt;paramref name=&quot;chars&quot; /&gt;.  &#xA;  &#xA; -or-  &#xA;  &#xA; The resulting number of bytes is greater than the maximum number that can be returned as an integer.">
        <paramref name="index" /> o <paramref name="count" /> es menor que cero.  
  
o bien 
 <paramref name="index" /> y <paramref name="count" /> no denotan un intervalo válido en <paramref name="chars" />.  
  
o bien 
El número de bytes resultante es mayor que el número máximo que se puede devolver como entero.</exception>
      <exception cref="T:System.ArgumentException" vsli:raw="Error detection is enabled, and &lt;paramref name=&quot;chars&quot; /&gt; contains an invalid sequence of characters.">Está habilitada la detección de errores, y <paramref name="chars" /> contiene una secuencia de caracteres no válida.</exception>
      <exception cref="T:System.Text.EncoderFallbackException" vsli:raw="A fallback occurred (for more information, see Character Encoding in .NET)&#xA;  &#xA; -and-  &#xA;  &#xA; &lt;see cref=&quot;P:System.Text.Encoding.EncoderFallback&quot; /&gt; is set to &lt;see cref=&quot;T:System.Text.EncoderExceptionFallback&quot; /&gt;.">Se ha producido una reserva (para más información, vea Codificación de caracteres en .NET) 
- y - 
 El valor de <see cref="P:System.Text.Encoding.EncoderFallback" /> está establecido en <see cref="T:System.Text.EncoderExceptionFallback" />.</exception>
      <returns vsli:raw="The number of bytes produced by encoding the specified characters.">Número de bytes que se generan al codificar los caracteres especificados.</returns>
    </member>
    <member name="M:System.Text.UTF32Encoding.GetByteCount(System.String)">
      <summary vsli:raw="Calculates the number of bytes produced by encoding the characters in the specified &lt;see cref=&quot;T:System.String&quot; /&gt;.">Calcula el número de bytes generado al codificar los caracteres del objeto <see cref="T:System.String" /> especificado.</summary>
      <param name="s" vsli:raw="The &lt;see cref=&quot;T:System.String&quot; /&gt; containing the set of characters to encode.">
        <see cref="T:System.String" /> que contiene el juego de caracteres que se va a codificar.</param>
      <exception cref="T:System.ArgumentNullException" vsli:raw="&lt;paramref name=&quot;s&quot; /&gt; is &lt;see langword=&quot;null&quot; /&gt;.">
        <paramref name="s" /> es <see langword="null" />.</exception>
      <exception cref="T:System.ArgumentOutOfRangeException" vsli:raw="The resulting number of bytes is greater than the maximum number that can be returned as an integer.">El número de bytes resultante es mayor que el número máximo que se puede devolver como entero.</exception>
      <exception cref="T:System.ArgumentException" vsli:raw="Error detection is enabled, and &lt;paramref name=&quot;s&quot; /&gt; contains an invalid sequence of characters.">Está habilitada la detección de errores, y <paramref name="s" /> contiene una secuencia de caracteres no válida.</exception>
      <exception cref="T:System.Text.EncoderFallbackException" vsli:raw="A fallback occurred (for more information, see Character Encoding in .NET)&#xA;  &#xA; -and-  &#xA;  &#xA; &lt;see cref=&quot;P:System.Text.Encoding.EncoderFallback&quot; /&gt; is set to &lt;see cref=&quot;T:System.Text.EncoderExceptionFallback&quot; /&gt;.">Se ha producido una reserva (para más información, vea Codificación de caracteres en .NET) 
- y - 
 El valor de <see cref="P:System.Text.Encoding.EncoderFallback" /> está establecido en <see cref="T:System.Text.EncoderExceptionFallback" />.</exception>
      <returns vsli:raw="The number of bytes produced by encoding the specified characters.">Número de bytes que se generan al codificar los caracteres especificados.</returns>
    </member>
    <member name="M:System.Text.UTF32Encoding.GetBytes(System.Char*,System.Int32,System.Byte*,System.Int32)">
      <summary vsli:raw="Encodes a set of characters starting at the specified character pointer into a sequence of bytes that are stored starting at the specified byte pointer.">Codifica un juego de caracteres a partir del puntero de caracteres especificado en una secuencia de bytes que se almacenan a partir del puntero de bytes especificado.</summary>
      <param name="chars" vsli:raw="A pointer to the first character to encode.">Puntero al primer carácter que se va a codificar.</param>
      <param name="charCount" vsli:raw="The number of characters to encode.">Número de caracteres que se van a codificar.</param>
      <param name="bytes" vsli:raw="A pointer to the location at which to start writing the resulting sequence of bytes.">Puntero a la ubicación en la que se iniciará la escritura de la secuencia de bytes resultante.</param>
      <param name="byteCount" vsli:raw="The maximum number of bytes to write.">Número máximo de bytes que se pueden escribir.</param>
      <exception cref="T:System.ArgumentNullException" vsli:raw="&lt;paramref name=&quot;chars&quot; /&gt; is &lt;see langword=&quot;null&quot; /&gt;.  &#xA;  &#xA; -or-  &#xA;  &#xA; &lt;paramref name=&quot;bytes&quot; /&gt; is &lt;see langword=&quot;null&quot; /&gt;.">
        <paramref name="chars" /> es <see langword="null" />.  
  
o bien 
 <paramref name="bytes" /> es <see langword="null" />.</exception>
      <exception cref="T:System.ArgumentOutOfRangeException" vsli:raw="&lt;paramref name=&quot;charCount&quot; /&gt; or &lt;paramref name=&quot;byteCount&quot; /&gt; is less than zero.">
        <paramref name="charCount" /> o <paramref name="byteCount" /> es menor que cero.</exception>
      <exception cref="T:System.ArgumentException" vsli:raw="Error detection is enabled, and &lt;paramref name=&quot;chars&quot; /&gt; contains an invalid sequence of characters.  &#xA;  &#xA; -or-  &#xA;  &#xA; &lt;paramref name=&quot;byteCount&quot; /&gt; is less than the resulting number of bytes.">Está habilitada la detección de errores, y <paramref name="chars" /> contiene una secuencia de caracteres no válida.  
  
o bien 
 El valor de <paramref name="byteCount" /> es menor que el número resultante de bytes.</exception>
      <exception cref="T:System.Text.EncoderFallbackException" vsli:raw="A fallback occurred (for more information, see Character Encoding in .NET)&#xA;  &#xA; -and-  &#xA;  &#xA; &lt;see cref=&quot;P:System.Text.Encoding.EncoderFallback&quot; /&gt; is set to &lt;see cref=&quot;T:System.Text.EncoderExceptionFallback&quot; /&gt;.">Se ha producido una reserva (para más información, vea Codificación de caracteres en .NET) 
- y - 
 El valor de <see cref="P:System.Text.Encoding.EncoderFallback" /> está establecido en <see cref="T:System.Text.EncoderExceptionFallback" />.</exception>
      <returns vsli:raw="The actual number of bytes written at the location indicated by the &lt;paramref name=&quot;bytes&quot; /&gt; parameter.">Número real de bytes escritos en la ubicación indicada por el parámetro <paramref name="bytes" />.</returns>
    </member>
    <member name="M:System.Text.UTF32Encoding.GetBytes(System.Char[],System.Int32,System.Int32,System.Byte[],System.Int32)">
      <summary vsli:raw="Encodes a set of characters from the specified character array into the specified byte array.">Codifica un juego de caracteres de la matriz de caracteres determinada en la matriz de bytes especificada.</summary>
      <param name="chars" vsli:raw="The character array containing the set of characters to encode.">Matriz de caracteres que contiene el juego de caracteres que se va a codificar.</param>
      <param name="charIndex" vsli:raw="The index of the first character to encode.">Índice del primer carácter que se va a codificar.</param>
      <param name="charCount" vsli:raw="The number of characters to encode.">Número de caracteres que se van a codificar.</param>
      <param name="bytes" vsli:raw="The byte array to contain the resulting sequence of bytes.">Matriz de bytes que contendrá la secuencia de bytes resultante.</param>
      <param name="byteIndex" vsli:raw="The index at which to start writing the resulting sequence of bytes.">Índice en el que se inicia la escritura de la secuencia de bytes resultante.</param>
      <exception cref="T:System.ArgumentNullException" vsli:raw="&lt;paramref name=&quot;chars&quot; /&gt; is &lt;see langword=&quot;null&quot; /&gt;.  &#xA;  &#xA; -or-  &#xA;  &#xA; &lt;paramref name=&quot;bytes&quot; /&gt; is &lt;see langword=&quot;null&quot; /&gt;.">
        <paramref name="chars" /> es <see langword="null" />.  
  
o bien 
 <paramref name="bytes" /> es <see langword="null" />.</exception>
      <exception cref="T:System.ArgumentOutOfRangeException" vsli:raw="&lt;paramref name=&quot;charIndex&quot; /&gt; or &lt;paramref name=&quot;charCount&quot; /&gt; or &lt;paramref name=&quot;byteIndex&quot; /&gt; is less than zero.  &#xA;  &#xA; -or-  &#xA;  &#xA; &lt;paramref name=&quot;charIndex&quot; /&gt; and &lt;paramref name=&quot;charCount&quot; /&gt; do not denote a valid range in &lt;paramref name=&quot;chars&quot; /&gt;.  &#xA;  &#xA; -or-  &#xA;  &#xA; &lt;paramref name=&quot;byteIndex&quot; /&gt; is not a valid index in &lt;paramref name=&quot;bytes&quot; /&gt;.">El valor de <paramref name="charIndex" />, <paramref name="charCount" /> o <paramref name="byteIndex" /> es menor que cero.  
  
o bien 
 <paramref name="charIndex" /> y <paramref name="charCount" /> no denotan un intervalo válido en <paramref name="chars" />.  
  
o bien 
 <paramref name="byteIndex" /> no es un índice válido para <paramref name="bytes" />.</exception>
      <exception cref="T:System.ArgumentException" vsli:raw="Error detection is enabled, and &lt;paramref name=&quot;chars&quot; /&gt; contains an invalid sequence of characters.  &#xA;  &#xA; -or-  &#xA;  &#xA; &lt;paramref name=&quot;bytes&quot; /&gt; does not have enough capacity from &lt;paramref name=&quot;byteIndex&quot; /&gt; to the end of the array to accommodate the resulting bytes.">Está habilitada la detección de errores, y <paramref name="chars" /> contiene una secuencia de caracteres no válida.  
  
o bien 
 <paramref name="bytes" /> no tiene suficiente capacidad desde <paramref name="byteIndex" /> hasta el final de la matriz para alojar los bytes resultantes.</exception>
      <exception cref="T:System.Text.EncoderFallbackException" vsli:raw="A fallback occurred (for more information, see Character Encoding in .NET)&#xA;  &#xA; -and-  &#xA;  &#xA; &lt;see cref=&quot;P:System.Text.Encoding.EncoderFallback&quot; /&gt; is set to &lt;see cref=&quot;T:System.Text.EncoderExceptionFallback&quot; /&gt;.">Se ha producido una reserva (para más información, vea Codificación de caracteres en .NET) 
- y - 
 El valor de <see cref="P:System.Text.Encoding.EncoderFallback" /> está establecido en <see cref="T:System.Text.EncoderExceptionFallback" />.</exception>
      <returns vsli:raw="The actual number of bytes written into &lt;paramref name=&quot;bytes&quot; /&gt;.">Número real de bytes escritos en <paramref name="bytes" />.</returns>
    </member>
    <member name="M:System.Text.UTF32Encoding.GetBytes(System.String,System.Int32,System.Int32,System.Byte[],System.Int32)">
      <summary vsli:raw="Encodes a set of characters from the specified &lt;see cref=&quot;T:System.String&quot; /&gt; into the specified byte array.">Codifica un juego de caracteres del objeto <see cref="T:System.String" /> especificado en la matriz de bytes especificada.</summary>
      <param name="s" vsli:raw="The &lt;see cref=&quot;T:System.String&quot; /&gt; containing the set of characters to encode.">
        <see cref="T:System.String" /> que contiene el juego de caracteres que se va a codificar.</param>
      <param name="charIndex" vsli:raw="The index of the first character to encode.">Índice del primer carácter que se va a codificar.</param>
      <param name="charCount" vsli:raw="The number of characters to encode.">Número de caracteres que se van a codificar.</param>
      <param name="bytes" vsli:raw="The byte array to contain the resulting sequence of bytes.">Matriz de bytes que contendrá la secuencia de bytes resultante.</param>
      <param name="byteIndex" vsli:raw="The index at which to start writing the resulting sequence of bytes.">Índice en el que se inicia la escritura de la secuencia de bytes resultante.</param>
      <exception cref="T:System.ArgumentNullException" vsli:raw="&lt;paramref name=&quot;s&quot; /&gt; is &lt;see langword=&quot;null&quot; /&gt;.  &#xA;  &#xA; -or-  &#xA;  &#xA; &lt;paramref name=&quot;bytes&quot; /&gt; is &lt;see langword=&quot;null&quot; /&gt;.">
        <paramref name="s" /> es <see langword="null" />.  
  
o bien 
 <paramref name="bytes" /> es <see langword="null" />.</exception>
      <exception cref="T:System.ArgumentOutOfRangeException" vsli:raw="&lt;paramref name=&quot;charIndex&quot; /&gt; or &lt;paramref name=&quot;charCount&quot; /&gt; or &lt;paramref name=&quot;byteIndex&quot; /&gt; is less than zero.  &#xA;  &#xA; -or-  &#xA;  &#xA; &lt;paramref name=&quot;charIndex&quot; /&gt; and &lt;paramref name=&quot;charCount&quot; /&gt; do not denote a valid range in &lt;paramref name=&quot;chars&quot; /&gt;.  &#xA;  &#xA; -or-  &#xA;  &#xA; &lt;paramref name=&quot;byteIndex&quot; /&gt; is not a valid index in &lt;paramref name=&quot;bytes&quot; /&gt;.">El valor de <paramref name="charIndex" />, <paramref name="charCount" /> o <paramref name="byteIndex" /> es menor que cero.  
  
o bien 
 <paramref name="charIndex" /> y <paramref name="charCount" /> no denotan un intervalo válido en <paramref name="chars" />.  
  
o bien 
 <paramref name="byteIndex" /> no es un índice válido para <paramref name="bytes" />.</exception>
      <exception cref="T:System.ArgumentException" vsli:raw="Error detection is enabled, and &lt;paramref name=&quot;s&quot; /&gt; contains an invalid sequence of characters.  &#xA;  &#xA; -or-  &#xA;  &#xA; &lt;paramref name=&quot;bytes&quot; /&gt; does not have enough capacity from &lt;paramref name=&quot;byteIndex&quot; /&gt; to the end of the array to accommodate the resulting bytes.">Está habilitada la detección de errores, y <paramref name="s" /> contiene una secuencia de caracteres no válida.  
  
o bien 
 <paramref name="bytes" /> no tiene suficiente capacidad desde <paramref name="byteIndex" /> hasta el final de la matriz para alojar los bytes resultantes.</exception>
      <exception cref="T:System.Text.EncoderFallbackException" vsli:raw="A fallback occurred (for more information, see Character Encoding in .NET)&#xA;  &#xA; -and-  &#xA;  &#xA; &lt;see cref=&quot;P:System.Text.Encoding.EncoderFallback&quot; /&gt; is set to &lt;see cref=&quot;T:System.Text.EncoderExceptionFallback&quot; /&gt;.">Se ha producido una reserva (para más información, vea Codificación de caracteres en .NET) 
- y - 
 El valor de <see cref="P:System.Text.Encoding.EncoderFallback" /> está establecido en <see cref="T:System.Text.EncoderExceptionFallback" />.</exception>
      <returns vsli:raw="The actual number of bytes written into &lt;paramref name=&quot;bytes&quot; /&gt;.">Número real de bytes escritos en <paramref name="bytes" />.</returns>
    </member>
    <member name="M:System.Text.UTF32Encoding.GetCharCount(System.Byte*,System.Int32)">
      <summary vsli:raw="Calculates the number of characters produced by decoding a sequence of bytes starting at the specified byte pointer.">Calcula el número de caracteres generado mediante la descodificación de una secuencia de bytes a partir del puntero de bytes especificado.</summary>
      <param name="bytes" vsli:raw="A pointer to the first byte to decode.">Puntero al primer byte que se va a descodificar.</param>
      <param name="count" vsli:raw="The number of bytes to decode.">Número de bytes que se van a descodificar.</param>
      <exception cref="T:System.ArgumentNullException" vsli:raw="&lt;paramref name=&quot;bytes&quot; /&gt; is &lt;see langword=&quot;null&quot; /&gt;.">
        <paramref name="bytes" /> es <see langword="null" />.</exception>
      <exception cref="T:System.ArgumentOutOfRangeException" vsli:raw="&lt;paramref name=&quot;count&quot; /&gt; is less than zero.  &#xA;  &#xA; -or-  &#xA;  &#xA; The resulting number of bytes is greater than the maximum number that can be returned as an integer.">
        <paramref name="count" /> es menor que cero.  
  
o bien 
El número de bytes resultante es mayor que el número máximo que se puede devolver como entero.</exception>
      <exception cref="T:System.ArgumentException" vsli:raw="Error detection is enabled, and &lt;paramref name=&quot;bytes&quot; /&gt; contains an invalid sequence of bytes.">Está habilitada la detección de errores, y <paramref name="bytes" /> contiene una secuencia de bytes no válida.</exception>
      <exception cref="T:System.Text.DecoderFallbackException" vsli:raw="A fallback occurred (for more information, see Character Encoding in .NET)&#xA;  &#xA; -and-  &#xA;  &#xA; &lt;see cref=&quot;P:System.Text.Encoding.DecoderFallback&quot; /&gt; is set to &lt;see cref=&quot;T:System.Text.DecoderExceptionFallback&quot; /&gt;.">Se ha producido una reserva (para más información, vea Codificación de caracteres en .NET) 
- y - 
 El valor de <see cref="P:System.Text.Encoding.DecoderFallback" /> está establecido en <see cref="T:System.Text.DecoderExceptionFallback" />.</exception>
      <returns vsli:raw="The number of characters produced by decoding the specified sequence of bytes.">Número de caracteres que se generan al descodificar la secuencia especificada de bytes.</returns>
    </member>
    <member name="M:System.Text.UTF32Encoding.GetCharCount(System.Byte[],System.Int32,System.Int32)">
      <summary vsli:raw="Calculates the number of characters produced by decoding a sequence of bytes from the specified byte array.">Calcula el número de caracteres generado mediante la descodificación de una secuencia de bytes a partir de la matriz de bytes especificada.</summary>
      <param name="bytes" vsli:raw="The byte array containing the sequence of bytes to decode.">Matriz de bytes que contiene la secuencia de bytes que se va a descodificar.</param>
      <param name="index" vsli:raw="The index of the first byte to decode.">Índice del primer byte que se va a descodificar.</param>
      <param name="count" vsli:raw="The number of bytes to decode.">Número de bytes que se van a descodificar.</param>
      <exception cref="T:System.ArgumentNullException" vsli:raw="&lt;paramref name=&quot;bytes&quot; /&gt; is &lt;see langword=&quot;null&quot; /&gt;.">
        <paramref name="bytes" /> es <see langword="null" />.</exception>
      <exception cref="T:System.ArgumentOutOfRangeException" vsli:raw="&lt;paramref name=&quot;index&quot; /&gt; or &lt;paramref name=&quot;count&quot; /&gt; is less than zero.  &#xA;  &#xA; -or-  &#xA;  &#xA; &lt;paramref name=&quot;index&quot; /&gt; and &lt;paramref name=&quot;count&quot; /&gt; do not denote a valid range in &lt;paramref name=&quot;bytes&quot; /&gt;.  &#xA;  &#xA; -or-  &#xA;  &#xA; The resulting number of bytes is greater than the maximum number that can be returned as an integer.">
        <paramref name="index" /> o <paramref name="count" /> es menor que cero.  
  
o bien 
 <paramref name="index" /> y <paramref name="count" /> no denotan un intervalo válido en <paramref name="bytes" />.  
  
o bien 
El número de bytes resultante es mayor que el número máximo que se puede devolver como entero.</exception>
      <exception cref="T:System.ArgumentException" vsli:raw="Error detection is enabled, and &lt;paramref name=&quot;bytes&quot; /&gt; contains an invalid sequence of bytes.">Está habilitada la detección de errores, y <paramref name="bytes" /> contiene una secuencia de bytes no válida.</exception>
      <exception cref="T:System.Text.DecoderFallbackException" vsli:raw="A fallback occurred (for more information, see Character Encoding in .NET)&#xA;  &#xA; -and-  &#xA;  &#xA; &lt;see cref=&quot;P:System.Text.Encoding.DecoderFallback&quot; /&gt; is set to &lt;see cref=&quot;T:System.Text.DecoderExceptionFallback&quot; /&gt;.">Se ha producido una reserva (para más información, vea Codificación de caracteres en .NET) 
- y - 
 El valor de <see cref="P:System.Text.Encoding.DecoderFallback" /> está establecido en <see cref="T:System.Text.DecoderExceptionFallback" />.</exception>
      <returns vsli:raw="The number of characters produced by decoding the specified sequence of bytes.">Número de caracteres que se generan al descodificar la secuencia especificada de bytes.</returns>
    </member>
    <member name="M:System.Text.UTF32Encoding.GetChars(System.Byte*,System.Int32,System.Char*,System.Int32)">
      <summary vsli:raw="Decodes a sequence of bytes starting at the specified byte pointer into a set of characters that are stored starting at the specified character pointer.">Descodifica una secuencia de bytes a partir del puntero de bytes especificado en un juego de caracteres que se almacenan a partir del puntero de caracteres especificado.</summary>
      <param name="bytes" vsli:raw="A pointer to the first byte to decode.">Puntero al primer byte que se va a descodificar.</param>
      <param name="byteCount" vsli:raw="The number of bytes to decode.">Número de bytes que se van a descodificar.</param>
      <param name="chars" vsli:raw="A pointer to the location at which to start writing the resulting set of characters.">Puntero a la ubicación en la que se iniciará la escritura del juego de caracteres resultante.</param>
      <param name="charCount" vsli:raw="The maximum number of characters to write.">Número máximo de caracteres que se van a escribir.</param>
      <exception cref="T:System.ArgumentNullException" vsli:raw="&lt;paramref name=&quot;bytes&quot; /&gt; is &lt;see langword=&quot;null&quot; /&gt;.  &#xA;  &#xA; -or-  &#xA;  &#xA; &lt;paramref name=&quot;chars&quot; /&gt; is &lt;see langword=&quot;null&quot; /&gt;.">
        <paramref name="bytes" /> es <see langword="null" />.  
  
o bien 
 <paramref name="chars" /> es <see langword="null" />.</exception>
      <exception cref="T:System.ArgumentOutOfRangeException" vsli:raw="&lt;paramref name=&quot;byteCount&quot; /&gt; or &lt;paramref name=&quot;charCount&quot; /&gt; is less than zero.">
        <paramref name="byteCount" /> o <paramref name="charCount" /> es menor que cero.</exception>
      <exception cref="T:System.ArgumentException" vsli:raw="Error detection is enabled, and &lt;paramref name=&quot;bytes&quot; /&gt; contains an invalid sequence of bytes.  &#xA;  &#xA; -or-  &#xA;  &#xA; &lt;paramref name=&quot;charCount&quot; /&gt; is less than the resulting number of characters.">Está habilitada la detección de errores, y <paramref name="bytes" /> contiene una secuencia de bytes no válida.  
  
o bien 
 El valor de <paramref name="charCount" /> es menor que el número de caracteres resultante.</exception>
      <exception cref="T:System.Text.DecoderFallbackException" vsli:raw="A fallback occurred (for more information, see Character Encoding in .NET)&#xA;  &#xA; -and-  &#xA;  &#xA; &lt;see cref=&quot;P:System.Text.Encoding.DecoderFallback&quot; /&gt; is set to &lt;see cref=&quot;T:System.Text.DecoderExceptionFallback&quot; /&gt;.">Se ha producido una reserva (para más información, vea Codificación de caracteres en .NET) 
- y - 
 El valor de <see cref="P:System.Text.Encoding.DecoderFallback" /> está establecido en <see cref="T:System.Text.DecoderExceptionFallback" />.</exception>
      <returns vsli:raw="The actual number of characters written at the location indicated by &lt;paramref name=&quot;chars&quot; /&gt;.">Número real de caracteres escrito en la ubicación indicada por <paramref name="chars" />.</returns>
    </member>
    <member name="M:System.Text.UTF32Encoding.GetChars(System.Byte[],System.Int32,System.Int32,System.Char[],System.Int32)">
      <summary vsli:raw="Decodes a sequence of bytes from the specified byte array into the specified character array.">Descodifica una secuencia de bytes de la matriz de bytes especificada en la matriz de caracteres especificada.</summary>
      <param name="bytes" vsli:raw="The byte array containing the sequence of bytes to decode.">Matriz de bytes que contiene la secuencia de bytes que se va a descodificar.</param>
      <param name="byteIndex" vsli:raw="The index of the first byte to decode.">Índice del primer byte que se va a descodificar.</param>
      <param name="byteCount" vsli:raw="The number of bytes to decode.">Número de bytes que se van a descodificar.</param>
      <param name="chars" vsli:raw="The character array to contain the resulting set of characters.">Matriz de caracteres que contendrá el juego de caracteres resultante.</param>
      <param name="charIndex" vsli:raw="The index at which to start writing the resulting set of characters.">Índice en el que se inicia la escritura del juego de caracteres resultante.</param>
      <exception cref="T:System.ArgumentNullException" vsli:raw="&lt;paramref name=&quot;bytes&quot; /&gt; is &lt;see langword=&quot;null&quot; /&gt;.  &#xA;  &#xA; -or-  &#xA;  &#xA; &lt;paramref name=&quot;chars&quot; /&gt; is &lt;see langword=&quot;null&quot; /&gt;.">
        <paramref name="bytes" /> es <see langword="null" />.  
  
o bien 
 <paramref name="chars" /> es <see langword="null" />.</exception>
      <exception cref="T:System.ArgumentOutOfRangeException" vsli:raw="&lt;paramref name=&quot;byteIndex&quot; /&gt; or &lt;paramref name=&quot;byteCount&quot; /&gt; or &lt;paramref name=&quot;charIndex&quot; /&gt; is less than zero.  &#xA;  &#xA; -or-  &#xA;  &#xA; &lt;paramref name=&quot;byteindex&quot; /&gt; and &lt;paramref name=&quot;byteCount&quot; /&gt; do not denote a valid range in &lt;paramref name=&quot;bytes&quot; /&gt;.  &#xA;  &#xA; -or-  &#xA;  &#xA; &lt;paramref name=&quot;charIndex&quot; /&gt; is not a valid index in &lt;paramref name=&quot;chars&quot; /&gt;.">El valor de <paramref name="byteIndex" />, <paramref name="byteCount" /> o <paramref name="charIndex" /> es menor que cero.  
  
o bien 
 <paramref name="byteindex" /> y <paramref name="byteCount" /> no denotan un intervalo válido en <paramref name="bytes" />.  
  
o bien 
 <paramref name="charIndex" /> no es un índice válido para <paramref name="chars" />.</exception>
      <exception cref="T:System.ArgumentException" vsli:raw="Error detection is enabled, and &lt;paramref name=&quot;bytes&quot; /&gt; contains an invalid sequence of bytes.  &#xA;  &#xA; -or-  &#xA;  &#xA; &lt;paramref name=&quot;chars&quot; /&gt; does not have enough capacity from &lt;paramref name=&quot;charIndex&quot; /&gt; to the end of the array to accommodate the resulting characters.">Está habilitada la detección de errores, y <paramref name="bytes" /> contiene una secuencia de bytes no válida.  
  
o bien 
 <paramref name="chars" /> no tiene suficiente capacidad desde <paramref name="charIndex" /> hasta el final de la matriz para aloja los caracteres resultantes.</exception>
      <exception cref="T:System.Text.DecoderFallbackException" vsli:raw="A fallback occurred (for more information, see Character Encoding in .NET)&#xA;  &#xA; -and-  &#xA;  &#xA; &lt;see cref=&quot;P:System.Text.Encoding.DecoderFallback&quot; /&gt; is set to &lt;see cref=&quot;T:System.Text.DecoderExceptionFallback&quot; /&gt;.">Se ha producido una reserva (para más información, vea Codificación de caracteres en .NET) 
- y - 
 El valor de <see cref="P:System.Text.Encoding.DecoderFallback" /> está establecido en <see cref="T:System.Text.DecoderExceptionFallback" />.</exception>
      <returns vsli:raw="The actual number of characters written into &lt;paramref name=&quot;chars&quot; /&gt;.">Número real de caracteres escritos en <paramref name="chars" />.</returns>
    </member>
    <member name="M:System.Text.UTF32Encoding.GetDecoder">
      <summary vsli:raw="Obtains a decoder that converts a UTF-32 encoded sequence of bytes into a sequence of Unicode characters.">Obtiene un descodificador que convierte una secuencia de bytes codificada en UTF-32 en una secuencia de caracteres Unicode.</summary>
      <returns vsli:raw="A &lt;see cref=&quot;T:System.Text.Decoder&quot; /&gt; that converts a UTF-32 encoded sequence of bytes into a sequence of Unicode characters.">Objeto <see cref="T:System.Text.Decoder" /> que convierte una secuencia de bytes codificada en UTF-32 en una secuencia de caracteres Unicode.</returns>
    </member>
    <member name="M:System.Text.UTF32Encoding.GetEncoder">
      <summary vsli:raw="Obtains an encoder that converts a sequence of Unicode characters into a UTF-32 encoded sequence of bytes.">Obtiene un codificador que convierte una secuencia de caracteres Unicode en una secuencia de bytes codificada en UTF-32.</summary>
      <returns vsli:raw="A &lt;see cref=&quot;T:System.Text.Encoder&quot; /&gt; that converts a sequence of Unicode characters into a UTF-32 encoded sequence of bytes.">Objeto <see cref="T:System.Text.Encoder" /> que convierte una secuencia de caracteres Unicode en una secuencia de bytes UTF-32 codificada.</returns>
    </member>
    <member name="M:System.Text.UTF32Encoding.GetHashCode">
      <summary vsli:raw="Returns the hash code for the current instance.">Devuelve el código hash de la instancia actual.</summary>
      <returns vsli:raw="The hash code for the current &lt;see cref=&quot;T:System.Text.UTF32Encoding&quot; /&gt; object.">Código hash para el objeto <see cref="T:System.Text.UTF32Encoding" /> actual.</returns>
    </member>
    <member name="M:System.Text.UTF32Encoding.GetMaxByteCount(System.Int32)">
      <summary vsli:raw="Calculates the maximum number of bytes produced by encoding the specified number of characters.">Calcula el número máximo de bytes generado mediante la codificación del número de caracteres especificado.</summary>
      <param name="charCount" vsli:raw="The number of characters to encode.">Número de caracteres que se van a codificar.</param>
      <exception cref="T:System.ArgumentOutOfRangeException" vsli:raw="&lt;paramref name=&quot;charCount&quot; /&gt; is less than zero.  &#xA;  &#xA; -or-  &#xA;  &#xA; The resulting number of bytes is greater than the maximum number that can be returned as an integer.">
        <paramref name="charCount" /> es menor que cero.  
  
o bien 
El número de bytes resultante es mayor que el número máximo que se puede devolver como entero.</exception>
      <exception cref="T:System.Text.EncoderFallbackException" vsli:raw="A fallback occurred (for more information, see Character Encoding in .NET)&#xA;  &#xA; -and-  &#xA;  &#xA; &lt;see cref=&quot;P:System.Text.Encoding.EncoderFallback&quot; /&gt; is set to &lt;see cref=&quot;T:System.Text.EncoderExceptionFallback&quot; /&gt;.">Se ha producido una reserva (para más información, vea Codificación de caracteres en .NET) 
- y - 
 El valor de <see cref="P:System.Text.Encoding.EncoderFallback" /> está establecido en <see cref="T:System.Text.EncoderExceptionFallback" />.</exception>
      <returns vsli:raw="The maximum number of bytes produced by encoding the specified number of characters.">Número máximo de bytes generados al codificar el número de caracteres especificado.</returns>
    </member>
    <member name="M:System.Text.UTF32Encoding.GetMaxCharCount(System.Int32)">
      <summary vsli:raw="Calculates the maximum number of characters produced by decoding the specified number of bytes.">Calcula el número máximo de caracteres generado mediante la descodificación del número de bytes especificado.</summary>
      <param name="byteCount" vsli:raw="The number of bytes to decode.">Número de bytes que se van a descodificar.</param>
      <exception cref="T:System.ArgumentOutOfRangeException" vsli:raw="&lt;paramref name=&quot;byteCount&quot; /&gt; is less than zero.  &#xA;  &#xA; -or-  &#xA;  &#xA; The resulting number of bytes is greater than the maximum number that can be returned as an integer.">
        <paramref name="byteCount" /> es menor que cero.  
  
o bien 
El número de bytes resultante es mayor que el número máximo que se puede devolver como entero.</exception>
      <exception cref="T:System.Text.DecoderFallbackException" vsli:raw="A fallback occurred (for more information, see Character Encoding in .NET)&#xA;  &#xA; -and-  &#xA;  &#xA; &lt;see cref=&quot;P:System.Text.Encoding.DecoderFallback&quot; /&gt; is set to &lt;see cref=&quot;T:System.Text.DecoderExceptionFallback&quot; /&gt;.">Se ha producido una reserva (para más información, vea Codificación de caracteres en .NET) 
- y - 
 El valor de <see cref="P:System.Text.Encoding.DecoderFallback" /> está establecido en <see cref="T:System.Text.DecoderExceptionFallback" />.</exception>
      <returns vsli:raw="The maximum number of characters produced by decoding the specified number of bytes.">Número máximo de caracteres que se generan al descodificar el número de bytes especificado.</returns>
    </member>
    <member name="M:System.Text.UTF32Encoding.GetPreamble">
      <summary vsli:raw="Returns a Unicode byte order mark encoded in UTF-32 format, if the &lt;see cref=&quot;T:System.Text.UTF32Encoding&quot; /&gt; object is configured to supply one.">Devuelve una marca de orden de bytes Unicode codificada en formato UTF-32, si el objeto <see cref="T:System.Text.UTF32Encoding" /> está configurado para proporcionarla.</summary>
      <returns vsli:raw="A byte array containing the Unicode byte order mark, if the &lt;see cref=&quot;T:System.Text.UTF32Encoding&quot; /&gt; object is configured to supply one. Otherwise, this method returns a zero-length byte array.">Matriz de bytes que contiene la marca de orden de bytes Unicode, si el objeto <see cref="T:System.Text.UTF32Encoding" /> está configurado para proporcionar una. De lo contrario, este método devuelve una matriz de bytes de longitud cero.</returns>
    </member>
    <member name="M:System.Text.UTF32Encoding.GetString(System.Byte[],System.Int32,System.Int32)">
      <summary vsli:raw="Decodes a range of bytes from a byte array into a string.">Descodifica un intervalo de bytes de una matriz de bytes en una cadena.</summary>
      <param name="bytes" vsli:raw="The byte array containing the sequence of bytes to decode.">Matriz de bytes que contiene la secuencia de bytes que se va a descodificar.</param>
      <param name="index" vsli:raw="The index of the first byte to decode.">Índice del primer byte que se va a descodificar.</param>
      <param name="count" vsli:raw="The number of bytes to decode.">Número de bytes que se van a descodificar.</param>
      <exception cref="T:System.ArgumentNullException" vsli:raw="&lt;paramref name=&quot;bytes&quot; /&gt; is &lt;see langword=&quot;null&quot; /&gt;.">
        <paramref name="bytes" /> es <see langword="null" />.</exception>
      <exception cref="T:System.ArgumentOutOfRangeException" vsli:raw="&lt;paramref name=&quot;index&quot; /&gt; or &lt;paramref name=&quot;count&quot; /&gt; is less than zero.  &#xA;  &#xA; -or-  &#xA;  &#xA; &lt;paramref name=&quot;index&quot; /&gt; and &lt;paramref name=&quot;count&quot; /&gt; do not denote a valid range in &lt;paramref name=&quot;bytes&quot; /&gt;.">
        <paramref name="index" /> o <paramref name="count" /> es menor que cero.  
  
o bien 
 <paramref name="index" /> y <paramref name="count" /> no denotan un intervalo válido en <paramref name="bytes" />.</exception>
      <exception cref="T:System.ArgumentException" vsli:raw="Error detection is enabled, and &lt;paramref name=&quot;bytes&quot; /&gt; contains an invalid sequence of bytes.">Está habilitada la detección de errores, y <paramref name="bytes" /> contiene una secuencia de bytes no válida.</exception>
      <exception cref="T:System.Text.DecoderFallbackException" vsli:raw="A fallback occurred (for more information, see Character Encoding in .NET for a complete explanation).&#xA;  &#xA; -and-  &#xA;  &#xA; &lt;see cref=&quot;P:System.Text.Encoding.DecoderFallback&quot; /&gt; is set to &lt;see cref=&quot;T:System.Text.DecoderExceptionFallback&quot; /&gt;.">Se ha producido una acción de reserva (vea Codificación de caracteres en .NET para obtener una explicación completa).
  
- y - 
 El valor de <see cref="P:System.Text.Encoding.DecoderFallback" /> está establecido en <see cref="T:System.Text.DecoderExceptionFallback" />.</exception>
      <returns vsli:raw="A string that contains the results of decoding the specified sequence of bytes.">Cadena que contiene el resultado de la descodificación de la secuencia de bytes especificada.</returns>
    </member>
    <member name="P:System.Text.UTF32Encoding.Preamble">
      <summary vsli:raw="Gets a Unicode byte order mark encoded in UTF-32 format, if this object is configured to supply one.">Obtiene una marca BOM Unicode codificada en formato UTF-32, si el objeto se ha configurado para proporcionarla.</summary>
      <returns vsli:raw="A byte span containing the Unicode byte order mark, if this object is configured to supply one; otherwise, a default span.">Intervalo de bytes que contiene la marca de orden de bytes Unicode, si este objeto está configurado para proporcionar uno; de lo contrario, un intervalo predeterminado.</returns>
    </member>
    <member name="T:System.Text.UTF7Encoding">
      <summary vsli:raw="Represents a UTF-7 encoding of Unicode characters.">Representa una codificación UTF-7 de caracteres Unicode.</summary>
    </member>
    <member name="M:System.Text.UTF7Encoding.#ctor">
      <summary vsli:raw="Initializes a new instance of the &lt;see cref=&quot;T:System.Text.UTF7Encoding&quot; /&gt; class.">Inicializa una nueva instancia de la clase <see cref="T:System.Text.UTF7Encoding" />.</summary>
    </member>
    <member name="M:System.Text.UTF7Encoding.#ctor(System.Boolean)">
      <summary vsli:raw="Initializes a new instance of the &lt;see cref=&quot;T:System.Text.UTF7Encoding&quot; /&gt; class. A parameter specifies whether to allow optional characters.">Inicializa una nueva instancia de la clase <see cref="T:System.Text.UTF7Encoding" />. Un parámetro especifica si se permiten los caracteres opcionales.</summary>
      <param name="allowOptionals" vsli:raw="&lt;see langword=&quot;true&quot; /&gt; to specify that optional characters are allowed; otherwise, &lt;see langword=&quot;false&quot; /&gt;.">Es <see langword="true" /> para especificar que se permiten caracteres opcionales; de lo contrario, es <see langword="false" />.</param>
    </member>
    <member name="M:System.Text.UTF7Encoding.Equals(System.Object)">
      <summary vsli:raw="Gets a value indicating whether the specified object is equal to the current &lt;see cref=&quot;T:System.Text.UTF7Encoding&quot; /&gt; object.">Obtiene un valor que indica si el objeto especificado es igual al objeto <see cref="T:System.Text.UTF7Encoding" /> actual.</summary>
      <param name="value" vsli:raw="An object to compare to the current &lt;see cref=&quot;T:System.Text.UTF7Encoding&quot; /&gt; object.">Objeto para comparar con el objeto <see cref="T:System.Text.UTF7Encoding" /> actual.</param>
      <returns vsli:raw="&lt;see langword=&quot;true&quot; /&gt; if &lt;paramref name=&quot;value&quot; /&gt; is a &lt;see cref=&quot;T:System.Text.UTF7Encoding&quot; /&gt; object and is equal to the current &lt;see cref=&quot;T:System.Text.UTF7Encoding&quot; /&gt; object; otherwise, &lt;see langword=&quot;false&quot; /&gt;.">
        <see langword="true" /> si <paramref name="value" /> es un objeto <see cref="T:System.Text.UTF7Encoding" /> y es igual al objeto <see cref="T:System.Text.UTF7Encoding" /> actual; de lo contrario, <see langword="false" />.</returns>
    </member>
    <member name="M:System.Text.UTF7Encoding.GetByteCount(System.Char*,System.Int32)">
      <summary vsli:raw="Calculates the number of bytes produced by encoding a set of characters starting at the specified character pointer.">Calcula el número de bytes generado mediante la codificación de un juego de caracteres a partir del puntero de caracteres especificado.</summary>
      <param name="chars" vsli:raw="A pointer to the first character to encode.">Puntero al primer carácter que se va a codificar.</param>
      <param name="count" vsli:raw="The number of characters to encode.">Número de caracteres que se van a codificar.</param>
      <exception cref="T:System.ArgumentNullException" vsli:raw="&lt;paramref name=&quot;chars&quot; /&gt; is &lt;see langword=&quot;null&quot; /&gt; (&lt;see langword=&quot;Nothing&quot; /&gt; in Visual Basic .NET).">
        <paramref name="chars" /> es <see langword="null" /> (<see langword="Nothing" /> en Visual Basic .NET).</exception>
      <exception cref="T:System.ArgumentOutOfRangeException" vsli:raw="&lt;paramref name=&quot;count&quot; /&gt; is less than zero.  &#xA;  &#xA; -or-  &#xA;  &#xA; The resulting number of bytes is greater than the maximum number that can be returned as an int.">
        <paramref name="count" /> es menor que cero.  
  
o bien 
El número de bytes resultante es mayor que el número máximo que se puede devolver como entero.</exception>
      <exception cref="T:System.Text.EncoderFallbackException" vsli:raw="A fallback occurred (for more information, see Character Encoding in .NET)&#xA;  &#xA; -and-  &#xA;  &#xA; &lt;see cref=&quot;P:System.Text.Encoding.EncoderFallback&quot; /&gt; is set to &lt;see cref=&quot;T:System.Text.EncoderExceptionFallback&quot; /&gt;.">Se ha producido una reserva (para más información, vea Codificación de caracteres en .NET) 
- y - 
 El valor de <see cref="P:System.Text.Encoding.EncoderFallback" /> está establecido en <see cref="T:System.Text.EncoderExceptionFallback" />.</exception>
      <returns vsli:raw="The number of bytes produced by encoding the specified characters.">Número de bytes que se generan al codificar los caracteres especificados.</returns>
    </member>
    <member name="M:System.Text.UTF7Encoding.GetByteCount(System.Char[],System.Int32,System.Int32)">
      <summary vsli:raw="Calculates the number of bytes produced by encoding a set of characters from the specified character array.">Calcula el número de bytes generado mediante la codificación de un juego de caracteres de la matriz de caracteres especificada.</summary>
      <param name="chars" vsli:raw="The character array containing the set of characters to encode.">Matriz de caracteres que contiene el juego de caracteres que se va a codificar.</param>
      <param name="index" vsli:raw="The index of the first character to encode.">Índice del primer carácter que se va a codificar.</param>
      <param name="count" vsli:raw="The number of characters to encode.">Número de caracteres que se van a codificar.</param>
      <exception cref="T:System.ArgumentNullException" vsli:raw="&lt;paramref name=&quot;chars&quot; /&gt; is &lt;see langword=&quot;null&quot; /&gt; (&lt;see langword=&quot;Nothing&quot; /&gt;).">
        <paramref name="chars" /> es <see langword="null" /> (<see langword="Nothing" />).</exception>
      <exception cref="T:System.ArgumentOutOfRangeException" vsli:raw="&lt;paramref name=&quot;index&quot; /&gt; or &lt;paramref name=&quot;count&quot; /&gt; is less than zero.  &#xA;  &#xA; -or-  &#xA;  &#xA; &lt;paramref name=&quot;index&quot; /&gt; and &lt;paramref name=&quot;count&quot; /&gt; do not denote a valid range in &lt;paramref name=&quot;chars&quot; /&gt;.  &#xA;  &#xA; -or-  &#xA;  &#xA; The resulting number of bytes is greater than the maximum number that can be returned as an int.">
        <paramref name="index" /> o <paramref name="count" /> es menor que cero.  
  
o bien 
 <paramref name="index" /> y <paramref name="count" /> no denotan un intervalo válido en <paramref name="chars" />.  
  
o bien 
El número de bytes resultante es mayor que el número máximo que se puede devolver como entero.</exception>
      <exception cref="T:System.Text.EncoderFallbackException" vsli:raw="A fallback occurred (for more information, see Character Encoding in .NET)&#xA;  &#xA; -and-  &#xA;  &#xA; &lt;see cref=&quot;P:System.Text.Encoding.EncoderFallback&quot; /&gt; is set to &lt;see cref=&quot;T:System.Text.EncoderExceptionFallback&quot; /&gt;.">Se ha producido una reserva (para más información, vea Codificación de caracteres en .NET) 
- y - 
 El valor de <see cref="P:System.Text.Encoding.EncoderFallback" /> está establecido en <see cref="T:System.Text.EncoderExceptionFallback" />.</exception>
      <returns vsli:raw="The number of bytes produced by encoding the specified characters.">Número de bytes que se generan al codificar los caracteres especificados.</returns>
    </member>
    <member name="M:System.Text.UTF7Encoding.GetByteCount(System.String)">
      <summary vsli:raw="Calculates the number of bytes produced by encoding the characters in the specified &lt;see cref=&quot;T:System.String&quot; /&gt; object.">Calcula el número de bytes generado al codificar los caracteres del objeto <see cref="T:System.String" /> especificado.</summary>
      <param name="s" vsli:raw="The &lt;see cref=&quot;T:System.String&quot; /&gt; object containing the set of characters to encode.">Objeto <see cref="T:System.String" /> que contiene el conjunto de caracteres que se va a codificar.</param>
      <exception cref="T:System.ArgumentNullException" vsli:raw="&lt;paramref name=&quot;s&quot; /&gt; is &lt;see langword=&quot;null&quot; /&gt; (&lt;see langword=&quot;Nothing&quot; /&gt;).">
        <paramref name="s" /> es <see langword="null" /> (<see langword="Nothing" />).</exception>
      <exception cref="T:System.ArgumentOutOfRangeException" vsli:raw="The resulting number of bytes is greater than the maximum number that can be returned as an int.">El número de bytes resultante es mayor que el número máximo que se puede devolver como entero.</exception>
      <exception cref="T:System.Text.EncoderFallbackException" vsli:raw="A fallback occurred (for more information, see Character Encoding in .NET).&#xA;  &#xA; -and-  &#xA;  &#xA; &lt;see cref=&quot;P:System.Text.Encoding.EncoderFallback&quot; /&gt; is set to &lt;see cref=&quot;T:System.Text.EncoderExceptionFallback&quot; /&gt;.">Se ha producido una acción de reserva (vea Codificación de caracteres en .NET para obtener una explicación más detallada).
  
- y - 
 El valor de <see cref="P:System.Text.Encoding.EncoderFallback" /> está establecido en <see cref="T:System.Text.EncoderExceptionFallback" />.</exception>
      <returns vsli:raw="The number of bytes produced by encoding the specified characters.">Número de bytes que se generan al codificar los caracteres especificados.</returns>
    </member>
    <member name="M:System.Text.UTF7Encoding.GetBytes(System.Char*,System.Int32,System.Byte*,System.Int32)">
      <summary vsli:raw="Encodes a set of characters starting at the specified character pointer into a sequence of bytes that are stored starting at the specified byte pointer.">Codifica un juego de caracteres a partir del puntero de caracteres especificado en una secuencia de bytes que se almacenan a partir del puntero de bytes especificado.</summary>
      <param name="chars" vsli:raw="A pointer to the first character to encode.">Puntero al primer carácter que se va a codificar.</param>
      <param name="charCount" vsli:raw="The number of characters to encode.">Número de caracteres que se van a codificar.</param>
      <param name="bytes" vsli:raw="A pointer to the location at which to start writing the resulting sequence of bytes.">Puntero a la ubicación en la que se iniciará la escritura de la secuencia de bytes resultante.</param>
      <param name="byteCount" vsli:raw="The maximum number of bytes to write.">Número máximo de bytes que se pueden escribir.</param>
      <exception cref="T:System.ArgumentNullException" vsli:raw="&lt;paramref name=&quot;chars&quot; /&gt; is &lt;see langword=&quot;null&quot; /&gt; (&lt;see langword=&quot;Nothing&quot; /&gt;).  &#xA;  &#xA; -or-  &#xA;  &#xA; &lt;paramref name=&quot;bytes&quot; /&gt; is &lt;see langword=&quot;null&quot; /&gt; (&lt;see langword=&quot;Nothing&quot; /&gt;).">
        <paramref name="chars" /> es <see langword="null" /> (<see langword="Nothing" />).  
  
O bien 
 <paramref name="bytes" /> es <see langword="null" /> (<see langword="Nothing" />).</exception>
      <exception cref="T:System.ArgumentOutOfRangeException" vsli:raw="&lt;paramref name=&quot;charCount&quot; /&gt; or &lt;paramref name=&quot;byteCount&quot; /&gt; is less than zero.">
        <paramref name="charCount" /> o <paramref name="byteCount" /> es menor que cero.</exception>
      <exception cref="T:System.ArgumentException" vsli:raw="&lt;paramref name=&quot;byteCount&quot; /&gt; is less than the resulting number of bytes.">El valor de <paramref name="byteCount" /> es menor que el número resultante de bytes.</exception>
      <exception cref="T:System.Text.EncoderFallbackException" vsli:raw="A fallback occurred (see Character Encoding in .NET for fuller explanation).&#xA;  &#xA; -and-  &#xA;  &#xA; &lt;see cref=&quot;P:System.Text.Encoding.EncoderFallback&quot; /&gt; is set to &lt;see cref=&quot;T:System.Text.EncoderExceptionFallback&quot; /&gt;.">Se ha producido una acción de reserva (vea Codificación de caracteres en .NET para obtener una explicación más detallada).
  
- y - 
 El valor de <see cref="P:System.Text.Encoding.EncoderFallback" /> está establecido en <see cref="T:System.Text.EncoderExceptionFallback" />.</exception>
      <returns vsli:raw="The actual number of bytes written at the location indicated by &lt;paramref name=&quot;bytes&quot; /&gt;.">Número real de bytes escritos en la ubicación indicada por <paramref name="bytes" />.</returns>
    </member>
    <member name="M:System.Text.UTF7Encoding.GetBytes(System.Char[],System.Int32,System.Int32,System.Byte[],System.Int32)">
      <summary vsli:raw="Encodes a set of characters from the specified character array into the specified byte array.">Codifica un juego de caracteres de la matriz de caracteres determinada en la matriz de bytes especificada.</summary>
      <param name="chars" vsli:raw="The character array containing the set of characters to encode.">Matriz de caracteres que contiene el juego de caracteres que se va a codificar.</param>
      <param name="charIndex" vsli:raw="The index of the first character to encode.">Índice del primer carácter que se va a codificar.</param>
      <param name="charCount" vsli:raw="The number of characters to encode.">Número de caracteres que se van a codificar.</param>
      <param name="bytes" vsli:raw="The byte array to contain the resulting sequence of bytes.">Matriz de bytes que contendrá la secuencia de bytes resultante.</param>
      <param name="byteIndex" vsli:raw="The index at which to start writing the resulting sequence of bytes.">Índice en el que se inicia la escritura de la secuencia de bytes resultante.</param>
      <exception cref="T:System.ArgumentNullException" vsli:raw="&lt;paramref name=&quot;chars&quot; /&gt; is &lt;see langword=&quot;null&quot; /&gt; (&lt;see langword=&quot;Nothing&quot; /&gt;).  &#xA;  &#xA; -or-  &#xA;  &#xA; &lt;paramref name=&quot;bytes&quot; /&gt; is &lt;see langword=&quot;null&quot; /&gt; (&lt;see langword=&quot;Nothing&quot; /&gt;).">
        <paramref name="chars" /> es <see langword="null" /> (<see langword="Nothing" />).  
  
O bien 
 <paramref name="bytes" /> es <see langword="null" /> (<see langword="Nothing" />).</exception>
      <exception cref="T:System.ArgumentOutOfRangeException" vsli:raw="&lt;paramref name=&quot;charIndex&quot; /&gt; or &lt;paramref name=&quot;charCount&quot; /&gt; or &lt;paramref name=&quot;byteIndex&quot; /&gt; is less than zero.  &#xA;  &#xA; -or-  &#xA;  &#xA; &lt;paramref name=&quot;charIndex&quot; /&gt; and &lt;paramref name=&quot;charCount&quot; /&gt; do not denote a valid range in &lt;paramref name=&quot;chars&quot; /&gt;.  &#xA;  &#xA; -or-  &#xA;  &#xA; &lt;paramref name=&quot;byteIndex&quot; /&gt; is not a valid index in &lt;paramref name=&quot;bytes&quot; /&gt;.">El valor de <paramref name="charIndex" />, <paramref name="charCount" /> o <paramref name="byteIndex" /> es menor que cero.  
  
o bien 
 <paramref name="charIndex" /> y <paramref name="charCount" /> no denotan un intervalo válido en <paramref name="chars" />.  
  
o bien 
 <paramref name="byteIndex" /> no es un índice válido para <paramref name="bytes" />.</exception>
      <exception cref="T:System.ArgumentException" vsli:raw="&lt;paramref name=&quot;bytes&quot; /&gt; does not have enough capacity from &lt;paramref name=&quot;byteIndex&quot; /&gt; to the end of the array to accommodate the resulting bytes.">
        <paramref name="bytes" /> no tiene suficiente capacidad desde <paramref name="byteIndex" /> hasta el final de la matriz para alojar los bytes resultantes.</exception>
      <exception cref="T:System.Text.EncoderFallbackException" vsli:raw="A fallback occurred (see Character Encoding in .NET for fuller explanation).&#xA;  &#xA; -and-  &#xA;  &#xA; &lt;see cref=&quot;P:System.Text.Encoding.EncoderFallback&quot; /&gt; is set to &lt;see cref=&quot;T:System.Text.EncoderExceptionFallback&quot; /&gt;.">Se ha producido una acción de reserva (vea Codificación de caracteres en .NET para obtener una explicación más detallada).
  
- y - 
 El valor de <see cref="P:System.Text.Encoding.EncoderFallback" /> está establecido en <see cref="T:System.Text.EncoderExceptionFallback" />.</exception>
      <returns vsli:raw="The actual number of bytes written into &lt;paramref name=&quot;bytes&quot; /&gt;.">Número real de bytes escritos en <paramref name="bytes" />.</returns>
    </member>
    <member name="M:System.Text.UTF7Encoding.GetBytes(System.String,System.Int32,System.Int32,System.Byte[],System.Int32)">
      <summary vsli:raw="Encodes a set of characters from the specified &lt;see cref=&quot;T:System.String&quot; /&gt; into the specified byte array.">Codifica un juego de caracteres del objeto <see cref="T:System.String" /> especificado en la matriz de bytes especificada.</summary>
      <param name="s" vsli:raw="The &lt;see cref=&quot;T:System.String&quot; /&gt; containing the set of characters to encode.">
        <see cref="T:System.String" /> que contiene el juego de caracteres que se va a codificar.</param>
      <param name="charIndex" vsli:raw="The index of the first character to encode.">Índice del primer carácter que se va a codificar.</param>
      <param name="charCount" vsli:raw="The number of characters to encode.">Número de caracteres que se van a codificar.</param>
      <param name="bytes" vsli:raw="The byte array to contain the resulting sequence of bytes.">Matriz de bytes que contendrá la secuencia de bytes resultante.</param>
      <param name="byteIndex" vsli:raw="The index at which to start writing the resulting sequence of bytes.">Índice en el que se inicia la escritura de la secuencia de bytes resultante.</param>
      <exception cref="T:System.ArgumentNullException" vsli:raw="&lt;paramref name=&quot;s&quot; /&gt; is &lt;see langword=&quot;null&quot; /&gt; (&lt;see langword=&quot;Nothing&quot; /&gt;).  &#xA;  &#xA; -or-  &#xA;  &#xA; &lt;paramref name=&quot;bytes&quot; /&gt; is &lt;see langword=&quot;null&quot; /&gt; (&lt;see langword=&quot;Nothing&quot; /&gt;).">
        <paramref name="s" /> es <see langword="null" /> (<see langword="Nothing" />).  
  
O bien 
 <paramref name="bytes" /> es <see langword="null" /> (<see langword="Nothing" />).</exception>
      <exception cref="T:System.ArgumentOutOfRangeException" vsli:raw="&lt;paramref name=&quot;charIndex&quot; /&gt; or &lt;paramref name=&quot;charCount&quot; /&gt; or &lt;paramref name=&quot;byteIndex&quot; /&gt; is less than zero.  &#xA;  &#xA; -or-  &#xA;  &#xA; &lt;paramref name=&quot;charIndex&quot; /&gt; and &lt;paramref name=&quot;charCount&quot; /&gt; do not denote a valid range in &lt;paramref name=&quot;chars&quot; /&gt;.  &#xA;  &#xA; -or-  &#xA;  &#xA; &lt;paramref name=&quot;byteIndex&quot; /&gt; is not a valid index in &lt;paramref name=&quot;bytes&quot; /&gt;.">El valor de <paramref name="charIndex" />, <paramref name="charCount" /> o <paramref name="byteIndex" /> es menor que cero.  
  
o bien 
 <paramref name="charIndex" /> y <paramref name="charCount" /> no denotan un intervalo válido en <paramref name="chars" />.  
  
o bien 
 <paramref name="byteIndex" /> no es un índice válido para <paramref name="bytes" />.</exception>
      <exception cref="T:System.ArgumentException" vsli:raw="&lt;paramref name=&quot;bytes&quot; /&gt; does not have enough capacity from &lt;paramref name=&quot;byteIndex&quot; /&gt; to the end of the array to accommodate the resulting bytes.">
        <paramref name="bytes" /> no tiene suficiente capacidad desde <paramref name="byteIndex" /> hasta el final de la matriz para alojar los bytes resultantes.</exception>
      <exception cref="T:System.Text.EncoderFallbackException" vsli:raw="A fallback occurred (see Character Encoding in .NET for fuller explanation).&#xA;  &#xA; -and-  &#xA;  &#xA; &lt;see cref=&quot;P:System.Text.Encoding.EncoderFallback&quot; /&gt; is set to &lt;see cref=&quot;T:System.Text.EncoderExceptionFallback&quot; /&gt;.">Se ha producido una acción de reserva (vea Codificación de caracteres en .NET para obtener una explicación más detallada).
  
- y - 
 El valor de <see cref="P:System.Text.Encoding.EncoderFallback" /> está establecido en <see cref="T:System.Text.EncoderExceptionFallback" />.</exception>
      <returns vsli:raw="The actual number of bytes written into &lt;paramref name=&quot;bytes&quot; /&gt;.">Número real de bytes escritos en <paramref name="bytes" />.</returns>
    </member>
    <member name="M:System.Text.UTF7Encoding.GetCharCount(System.Byte*,System.Int32)">
      <summary vsli:raw="Calculates the number of characters produced by decoding a sequence of bytes starting at the specified byte pointer.">Calcula el número de caracteres generado mediante la descodificación de una secuencia de bytes a partir del puntero de bytes especificado.</summary>
      <param name="bytes" vsli:raw="A pointer to the first byte to decode.">Puntero al primer byte que se va a descodificar.</param>
      <param name="count" vsli:raw="The number of bytes to decode.">Número de bytes que se van a descodificar.</param>
      <exception cref="T:System.ArgumentNullException" vsli:raw="&lt;paramref name=&quot;bytes&quot; /&gt; is &lt;see langword=&quot;null&quot; /&gt; (&lt;see langword=&quot;Nothing&quot; /&gt;).">
        <paramref name="bytes" /> es <see langword="null" /> (<see langword="Nothing" />).</exception>
      <exception cref="T:System.ArgumentOutOfRangeException" vsli:raw="&lt;paramref name=&quot;count&quot; /&gt; is less than zero.  &#xA;  &#xA; -or-  &#xA;  &#xA; The resulting number of characters is greater than the maximum number that can be returned as an int.">
        <paramref name="count" /> es menor que cero.  
  
o bien 
El número de caracteres resultante es mayor que el número máximo que se puede devolver como entero.</exception>
      <exception cref="T:System.Text.DecoderFallbackException" vsli:raw="A fallback occurred (for more information, see Character Encoding in .NET).&#xA;  &#xA; -and-  &#xA;  &#xA; &lt;see cref=&quot;P:System.Text.Encoding.DecoderFallback&quot; /&gt; is set to &lt;see cref=&quot;T:System.Text.DecoderExceptionFallback&quot; /&gt;.">Se ha producido una acción de reserva (vea Codificación de caracteres en .NET para obtener una explicación más detallada).
  
- y - 
 El valor de <see cref="P:System.Text.Encoding.DecoderFallback" /> está establecido en <see cref="T:System.Text.DecoderExceptionFallback" />.</exception>
      <returns vsli:raw="The number of characters produced by decoding the specified sequence of bytes.">Número de caracteres que se generan al descodificar la secuencia especificada de bytes.</returns>
    </member>
    <member name="M:System.Text.UTF7Encoding.GetCharCount(System.Byte[],System.Int32,System.Int32)">
      <summary vsli:raw="Calculates the number of characters produced by decoding a sequence of bytes from the specified byte array.">Calcula el número de caracteres generado mediante la descodificación de una secuencia de bytes a partir de la matriz de bytes especificada.</summary>
      <param name="bytes" vsli:raw="The byte array containing the sequence of bytes to decode.">Matriz de bytes que contiene la secuencia de bytes que se va a descodificar.</param>
      <param name="index" vsli:raw="The index of the first byte to decode.">Índice del primer byte que se va a descodificar.</param>
      <param name="count" vsli:raw="The number of bytes to decode.">Número de bytes que se van a descodificar.</param>
      <exception cref="T:System.ArgumentNullException" vsli:raw="&lt;paramref name=&quot;bytes&quot; /&gt; is &lt;see langword=&quot;null&quot; /&gt; (&lt;see langword=&quot;Nothing&quot; /&gt;).">
        <paramref name="bytes" /> es <see langword="null" /> (<see langword="Nothing" />).</exception>
      <exception cref="T:System.ArgumentOutOfRangeException" vsli:raw="&lt;paramref name=&quot;index&quot; /&gt; or &lt;paramref name=&quot;count&quot; /&gt; is less than zero.  &#xA;  &#xA; -or-  &#xA;  &#xA; &lt;paramref name=&quot;index&quot; /&gt; and &lt;paramref name=&quot;count&quot; /&gt; do not denote a valid range in &lt;paramref name=&quot;bytes&quot; /&gt;.  &#xA;  &#xA; -or-  &#xA;  &#xA; The resulting number of characters is greater than the maximum number that can be returned as an int.">
        <paramref name="index" /> o <paramref name="count" /> es menor que cero.  
  
o bien 
 <paramref name="index" /> y <paramref name="count" /> no denotan un intervalo válido en <paramref name="bytes" />.  
  
o bien 
El número de caracteres resultante es mayor que el número máximo que se puede devolver como entero.</exception>
      <exception cref="T:System.Text.DecoderFallbackException" vsli:raw="A fallback occurred (for more information, see Character Encoding in .NET)&#xA;  &#xA; -and-  &#xA;  &#xA; &lt;see cref=&quot;P:System.Text.Encoding.DecoderFallback&quot; /&gt; is set to &lt;see cref=&quot;T:System.Text.DecoderExceptionFallback&quot; /&gt;.">Se ha producido una reserva (para más información, vea Codificación de caracteres en .NET) 
- y - 
 El valor de <see cref="P:System.Text.Encoding.DecoderFallback" /> está establecido en <see cref="T:System.Text.DecoderExceptionFallback" />.</exception>
      <returns vsli:raw="The number of characters produced by decoding the specified sequence of bytes.">Número de caracteres que se generan al descodificar la secuencia especificada de bytes.</returns>
    </member>
    <member name="M:System.Text.UTF7Encoding.GetChars(System.Byte*,System.Int32,System.Char*,System.Int32)">
      <summary vsli:raw="Decodes a sequence of bytes starting at the specified byte pointer into a set of characters that are stored starting at the specified character pointer.">Descodifica una secuencia de bytes a partir del puntero de bytes especificado en un juego de caracteres que se almacenan a partir del puntero de caracteres especificado.</summary>
      <param name="bytes" vsli:raw="A pointer to the first byte to decode.">Puntero al primer byte que se va a descodificar.</param>
      <param name="byteCount" vsli:raw="The number of bytes to decode.">Número de bytes que se van a descodificar.</param>
      <param name="chars" vsli:raw="A pointer to the location at which to start writing the resulting set of characters.">Puntero a la ubicación en la que se iniciará la escritura del juego de caracteres resultante.</param>
      <param name="charCount" vsli:raw="The maximum number of characters to write.">Número máximo de caracteres que se van a escribir.</param>
      <exception cref="T:System.ArgumentNullException" vsli:raw="&lt;paramref name=&quot;bytes&quot; /&gt; is &lt;see langword=&quot;null&quot; /&gt; (&lt;see langword=&quot;Nothing&quot; /&gt;).  &#xA;  &#xA; -or-  &#xA;  &#xA; &lt;paramref name=&quot;chars&quot; /&gt; is &lt;see langword=&quot;null&quot; /&gt; (&lt;see langword=&quot;Nothing&quot; /&gt;).">
        <paramref name="bytes" /> es <see langword="null" /> (<see langword="Nothing" />).  
  
O bien 
 <paramref name="chars" /> es <see langword="null" /> (<see langword="Nothing" />).</exception>
      <exception cref="T:System.ArgumentOutOfRangeException" vsli:raw="&lt;paramref name=&quot;byteCount&quot; /&gt; or &lt;paramref name=&quot;charCount&quot; /&gt; is less than zero.">
        <paramref name="byteCount" /> o <paramref name="charCount" /> es menor que cero.</exception>
      <exception cref="T:System.ArgumentException" vsli:raw="&lt;paramref name=&quot;charCount&quot; /&gt; is less than the resulting number of characters.">El valor de <paramref name="charCount" /> es menor que el número de caracteres resultante.</exception>
      <exception cref="T:System.Text.DecoderFallbackException" vsli:raw="A fallback occurred (for more information, see Character Encoding in .NET)&#xA;  &#xA; -and-  &#xA;  &#xA; &lt;see cref=&quot;P:System.Text.Encoding.DecoderFallback&quot; /&gt; is set to &lt;see cref=&quot;T:System.Text.DecoderExceptionFallback&quot; /&gt;.">Se ha producido una reserva (para más información, vea Codificación de caracteres en .NET) 
- y - 
 El valor de <see cref="P:System.Text.Encoding.DecoderFallback" /> está establecido en <see cref="T:System.Text.DecoderExceptionFallback" />.</exception>
      <returns vsli:raw="The actual number of characters written at the location indicated by &lt;paramref name=&quot;chars&quot; /&gt;.">Número real de caracteres escrito en la ubicación indicada por <paramref name="chars" />.</returns>
    </member>
    <member name="M:System.Text.UTF7Encoding.GetChars(System.Byte[],System.Int32,System.Int32,System.Char[],System.Int32)">
      <summary vsli:raw="Decodes a sequence of bytes from the specified byte array into the specified character array.">Descodifica una secuencia de bytes de la matriz de bytes especificada en la matriz de caracteres especificada.</summary>
      <param name="bytes" vsli:raw="The byte array containing the sequence of bytes to decode.">Matriz de bytes que contiene la secuencia de bytes que se va a descodificar.</param>
      <param name="byteIndex" vsli:raw="The index of the first byte to decode.">Índice del primer byte que se va a descodificar.</param>
      <param name="byteCount" vsli:raw="The number of bytes to decode.">Número de bytes que se van a descodificar.</param>
      <param name="chars" vsli:raw="The character array to contain the resulting set of characters.">Matriz de caracteres que contendrá el juego de caracteres resultante.</param>
      <param name="charIndex" vsli:raw="The index at which to start writing the resulting set of characters.">Índice en el que se inicia la escritura del juego de caracteres resultante.</param>
      <exception cref="T:System.ArgumentNullException" vsli:raw="&lt;paramref name=&quot;bytes&quot; /&gt; is &lt;see langword=&quot;null&quot; /&gt; (&lt;see langword=&quot;Nothing&quot; /&gt;).  &#xA;  &#xA; -or-  &#xA;  &#xA; &lt;paramref name=&quot;chars&quot; /&gt; is &lt;see langword=&quot;null&quot; /&gt; (&lt;see langword=&quot;Nothing&quot; /&gt;).">
        <paramref name="bytes" /> es <see langword="null" /> (<see langword="Nothing" />).  
  
O bien 
 <paramref name="chars" /> es <see langword="null" /> (<see langword="Nothing" />).</exception>
      <exception cref="T:System.ArgumentOutOfRangeException" vsli:raw="&lt;paramref name=&quot;byteIndex&quot; /&gt; or &lt;paramref name=&quot;byteCount&quot; /&gt; or &lt;paramref name=&quot;charIndex&quot; /&gt; is less than zero.  &#xA;  &#xA; -or-  &#xA;  &#xA; &lt;paramref name=&quot;byteindex&quot; /&gt; and &lt;paramref name=&quot;byteCount&quot; /&gt; do not denote a valid range in &lt;paramref name=&quot;bytes&quot; /&gt;.  &#xA;  &#xA; -or-  &#xA;  &#xA; &lt;paramref name=&quot;charIndex&quot; /&gt; is not a valid index in &lt;paramref name=&quot;chars&quot; /&gt;.">El valor de <paramref name="byteIndex" />, <paramref name="byteCount" /> o <paramref name="charIndex" /> es menor que cero.  
  
o bien 
 <paramref name="byteindex" /> y <paramref name="byteCount" /> no denotan un intervalo válido en <paramref name="bytes" />.  
  
o bien 
 <paramref name="charIndex" /> no es un índice válido para <paramref name="chars" />.</exception>
      <exception cref="T:System.ArgumentException" vsli:raw="&lt;paramref name=&quot;chars&quot; /&gt; does not have enough capacity from &lt;paramref name=&quot;charIndex&quot; /&gt; to the end of the array to accommodate the resulting characters.">
        <paramref name="chars" /> no tiene suficiente capacidad desde <paramref name="charIndex" /> hasta el final de la matriz para aloja los caracteres resultantes.</exception>
      <exception cref="T:System.Text.DecoderFallbackException" vsli:raw="A fallback occurred (for more information, see Character Encoding in .NET)&#xA;  &#xA; -and-  &#xA;  &#xA; &lt;see cref=&quot;P:System.Text.Encoding.DecoderFallback&quot; /&gt; is set to &lt;see cref=&quot;T:System.Text.DecoderExceptionFallback&quot; /&gt;.">Se ha producido una reserva (para más información, vea Codificación de caracteres en .NET) 
- y - 
 El valor de <see cref="P:System.Text.Encoding.DecoderFallback" /> está establecido en <see cref="T:System.Text.DecoderExceptionFallback" />.</exception>
      <returns vsli:raw="The actual number of characters written into &lt;paramref name=&quot;chars&quot; /&gt;.">Número real de caracteres escritos en <paramref name="chars" />.</returns>
    </member>
    <member name="M:System.Text.UTF7Encoding.GetDecoder">
      <summary vsli:raw="Obtains a decoder that converts a UTF-7 encoded sequence of bytes into a sequence of Unicode characters.">Obtiene un descodificador que convierte una secuencia de bytes codificada en UTF-7 en una secuencia de caracteres Unicode.</summary>
      <returns vsli:raw="A &lt;see cref=&quot;T:System.Text.Decoder&quot; /&gt; that converts a UTF-7 encoded sequence of bytes into a sequence of Unicode characters.">Objeto <see cref="T:System.Text.Decoder" /> que convierte una secuencia de bytes codificada en UTF-7 en una secuencia de caracteres Unicode.</returns>
    </member>
    <member name="M:System.Text.UTF7Encoding.GetEncoder">
      <summary vsli:raw="Obtains an encoder that converts a sequence of Unicode characters into a UTF-7 encoded sequence of bytes.">Obtiene un codificador que convierte una secuencia de caracteres Unicode en una secuencia de bytes codificada en UTF-7.</summary>
      <returns vsli:raw="A &lt;see cref=&quot;T:System.Text.Encoder&quot; /&gt; that converts a sequence of Unicode characters into a UTF-7 encoded sequence of bytes.">Objeto <see cref="T:System.Text.Encoder" /> que convierte una secuencia de caracteres Unicode en una secuencia de bytes UTF-7 codificada.</returns>
    </member>
    <member name="M:System.Text.UTF7Encoding.GetHashCode">
      <summary vsli:raw="Returns the hash code for the current &lt;see cref=&quot;T:System.Text.UTF7Encoding&quot; /&gt; object.">Devuelve el código hash del objeto <see cref="T:System.Text.UTF7Encoding" /> actual.</summary>
      <returns vsli:raw="A 32-bit signed integer hash code.">Código hash de un entero de 32 bits con signo.</returns>
    </member>
    <member name="M:System.Text.UTF7Encoding.GetMaxByteCount(System.Int32)">
      <summary vsli:raw="Calculates the maximum number of bytes produced by encoding the specified number of characters.">Calcula el número máximo de bytes generado mediante la codificación del número de caracteres especificado.</summary>
      <param name="charCount" vsli:raw="The number of characters to encode.">Número de caracteres que se van a codificar.</param>
      <exception cref="T:System.ArgumentOutOfRangeException" vsli:raw="&lt;paramref name=&quot;charCount&quot; /&gt; is less than zero.  &#xA;  &#xA; -or-  &#xA;  &#xA; The resulting number of bytes is greater than the maximum number that can be returned as an int.">
        <paramref name="charCount" /> es menor que cero.  
  
o bien 
El número de bytes resultante es mayor que el número máximo que se puede devolver como entero.</exception>
      <exception cref="T:System.Text.EncoderFallbackException" vsli:raw="A fallback occurred (for more information, see Character Encoding in .NET)&#xA;  &#xA; -and-  &#xA;  &#xA; &lt;see cref=&quot;P:System.Text.Encoding.EncoderFallback&quot; /&gt; is set to &lt;see cref=&quot;T:System.Text.EncoderExceptionFallback&quot; /&gt;.">Se ha producido una reserva (para más información, vea Codificación de caracteres en .NET) 
- y - 
 El valor de <see cref="P:System.Text.Encoding.EncoderFallback" /> está establecido en <see cref="T:System.Text.EncoderExceptionFallback" />.</exception>
      <returns vsli:raw="The maximum number of bytes produced by encoding the specified number of characters.">Número máximo de bytes generados al codificar el número de caracteres especificado.</returns>
    </member>
    <member name="M:System.Text.UTF7Encoding.GetMaxCharCount(System.Int32)">
      <summary vsli:raw="Calculates the maximum number of characters produced by decoding the specified number of bytes.">Calcula el número máximo de caracteres generado mediante la descodificación del número de bytes especificado.</summary>
      <param name="byteCount" vsli:raw="The number of bytes to decode.">Número de bytes que se van a descodificar.</param>
      <exception cref="T:System.ArgumentOutOfRangeException" vsli:raw="&lt;paramref name=&quot;byteCount&quot; /&gt; is less than zero.  &#xA;  &#xA; -or-  &#xA;  &#xA; The resulting number of characters is greater than the maximum number that can be returned as an int.">
        <paramref name="byteCount" /> es menor que cero.  
  
o bien 
El número de caracteres resultante es mayor que el número máximo que se puede devolver como entero.</exception>
      <exception cref="T:System.Text.DecoderFallbackException" vsli:raw="A fallback occurred (for more information, see Character Encoding in .NET)&#xA;  &#xA; -and-  &#xA;  &#xA; &lt;see cref=&quot;P:System.Text.Encoding.DecoderFallback&quot; /&gt; is set to &lt;see cref=&quot;T:System.Text.DecoderExceptionFallback&quot; /&gt;.">Se ha producido una reserva (para más información, vea Codificación de caracteres en .NET) 
- y - 
 El valor de <see cref="P:System.Text.Encoding.DecoderFallback" /> está establecido en <see cref="T:System.Text.DecoderExceptionFallback" />.</exception>
      <returns vsli:raw="The maximum number of characters produced by decoding the specified number of bytes.">Número máximo de caracteres que se generan al descodificar el número de bytes especificado.</returns>
    </member>
    <member name="M:System.Text.UTF7Encoding.GetString(System.Byte[],System.Int32,System.Int32)">
      <summary vsli:raw="Decodes a range of bytes from a byte array into a string.">Descodifica un intervalo de bytes de una matriz de bytes en una cadena.</summary>
      <param name="bytes" vsli:raw="The byte array containing the sequence of bytes to decode.">Matriz de bytes que contiene la secuencia de bytes que se va a descodificar.</param>
      <param name="index" vsli:raw="The index of the first byte to decode.">Índice del primer byte que se va a descodificar.</param>
      <param name="count" vsli:raw="The number of bytes to decode.">Número de bytes que se van a descodificar.</param>
      <exception cref="T:System.ArgumentNullException" vsli:raw="&lt;paramref name=&quot;bytes&quot; /&gt; is &lt;see langword=&quot;null&quot; /&gt; (&lt;see langword=&quot;Nothing&quot; /&gt;).">
        <paramref name="bytes" /> es <see langword="null" /> (<see langword="Nothing" />).</exception>
      <exception cref="T:System.ArgumentOutOfRangeException" vsli:raw="&lt;paramref name=&quot;index&quot; /&gt; or &lt;paramref name=&quot;count&quot; /&gt; is less than zero.  &#xA;  &#xA; -or-  &#xA;  &#xA; &lt;paramref name=&quot;index&quot; /&gt; and &lt;paramref name=&quot;count&quot; /&gt; do not denote a valid range in &lt;paramref name=&quot;bytes&quot; /&gt;.">
        <paramref name="index" /> o <paramref name="count" /> es menor que cero.  
  
o bien 
 <paramref name="index" /> y <paramref name="count" /> no denotan un intervalo válido en <paramref name="bytes" />.</exception>
      <exception cref="T:System.Text.DecoderFallbackException" vsli:raw="A fallback occurred (for more information, see Character Encoding in .NET).&#xA;  &#xA; -and-  &#xA;  &#xA; &lt;see cref=&quot;P:System.Text.Encoding.DecoderFallback&quot; /&gt; is set to &lt;see cref=&quot;T:System.Text.DecoderExceptionFallback&quot; /&gt;.">Se ha producido una acción de reserva (vea Codificación de caracteres en .NET para obtener una explicación más detallada).
  
- y - 
 El valor de <see cref="P:System.Text.Encoding.DecoderFallback" /> está establecido en <see cref="T:System.Text.DecoderExceptionFallback" />.</exception>
      <returns vsli:raw="A &lt;see cref=&quot;T:System.String&quot; /&gt; containing the results of decoding the specified sequence of bytes.">Objeto <see cref="T:System.String" /> que contiene los resultados obtenidos al descodificar la secuencia de bytes especificada.</returns>
    </member>
    <member name="T:System.Text.UTF8Encoding">
      <summary vsli:raw="Represents a UTF-8 encoding of Unicode characters.">Representa una codificación UTF-8 de caracteres Unicode.</summary>
    </member>
    <member name="M:System.Text.UTF8Encoding.#ctor">
      <summary vsli:raw="Initializes a new instance of the &lt;see cref=&quot;T:System.Text.UTF8Encoding&quot; /&gt; class.">Inicializa una nueva instancia de la clase <see cref="T:System.Text.UTF8Encoding" />.</summary>
    </member>
    <member name="M:System.Text.UTF8Encoding.#ctor(System.Boolean)">
      <summary vsli:raw="Initializes a new instance of the &lt;see cref=&quot;T:System.Text.UTF8Encoding&quot; /&gt; class. A parameter specifies whether to provide a Unicode byte order mark.">Inicializa una nueva instancia de la clase <see cref="T:System.Text.UTF8Encoding" />. Un parámetro especifica si se proporciona una marca de orden de bytes Unicode.</summary>
      <param name="encoderShouldEmitUTF8Identifier" vsli:raw="&lt;see langword=&quot;true&quot; /&gt; to specify that the &lt;see cref=&quot;M:System.Text.UTF8Encoding.GetPreamble&quot; /&gt; method returns a Unicode byte order mark; otherwise, &lt;see langword=&quot;false&quot; /&gt;.">Es <see langword="true" /> para especificar que el método <see cref="M:System.Text.UTF8Encoding.GetPreamble" /> devuelve una marca de orden de bytes Unicode; en caso contrario, es <see langword="false" />.</param>
    </member>
    <member name="M:System.Text.UTF8Encoding.#ctor(System.Boolean,System.Boolean)">
      <summary vsli:raw="Initializes a new instance of the &lt;see cref=&quot;T:System.Text.UTF8Encoding&quot; /&gt; class. Parameters specify whether to provide a Unicode byte order mark and whether to throw an exception when an invalid encoding is detected.">Inicializa una nueva instancia de la clase <see cref="T:System.Text.UTF8Encoding" />. Algunos parámetros especifican si se proporciona una marca de orden de bytes Unicode y si debe producirse una excepción cuando se detecta una codificación no válida.</summary>
      <param name="encoderShouldEmitUTF8Identifier" vsli:raw="&lt;see langword=&quot;true&quot; /&gt; to specify that the &lt;see cref=&quot;M:System.Text.UTF8Encoding.GetPreamble&quot; /&gt; method should return a Unicode byte order mark; otherwise, &lt;see langword=&quot;false&quot; /&gt;.">Es <see langword="true" /> para especificar que el método <see cref="M:System.Text.UTF8Encoding.GetPreamble" /> debe devolver una marca de orden de bytes Unicode; en caso contrario, es <see langword="false" />.</param>
      <param name="throwOnInvalidBytes" vsli:raw="&lt;see langword=&quot;true&quot; /&gt; to throw an exception when an invalid encoding is detected; otherwise, &lt;see langword=&quot;false&quot; /&gt;.">Es <see langword="true" /> para que se produzca una excepción cuando se detecta una codificación no válida; en caso contrario, es <see langword="false" />.</param>
    </member>
    <member name="M:System.Text.UTF8Encoding.Equals(System.Object)">
      <summary vsli:raw="Determines whether the specified object is equal to the current &lt;see cref=&quot;T:System.Text.UTF8Encoding&quot; /&gt; object.">Determina si el objeto especificado es igual al objeto <see cref="T:System.Text.UTF8Encoding" /> actual.</summary>
      <param name="value" vsli:raw="The object to compare with the current instance.">Objeto que se va a comparar con la instancia actual.</param>
      <returns vsli:raw="&lt;see langword=&quot;true&quot; /&gt; if &lt;paramref name=&quot;value&quot; /&gt; is an instance of &lt;see cref=&quot;T:System.Text.UTF8Encoding&quot; /&gt; and is equal to the current object; otherwise, &lt;see langword=&quot;false&quot; /&gt;.">
        <see langword="true" /> si <paramref name="value" /> es una instancia de <see cref="T:System.Text.UTF8Encoding" /> y es igual al objeto actual; en caso contrario, <see langword="false" />.</returns>
    </member>
    <member name="M:System.Text.UTF8Encoding.GetByteCount(System.Char*,System.Int32)">
      <summary vsli:raw="Calculates the number of bytes produced by encoding a set of characters starting at the specified character pointer.">Calcula el número de bytes generado mediante la codificación de un juego de caracteres a partir del puntero de caracteres especificado.</summary>
      <param name="chars" vsli:raw="A pointer to the first character to encode.">Puntero al primer carácter que se va a codificar.</param>
      <param name="count" vsli:raw="The number of characters to encode.">Número de caracteres que se van a codificar.</param>
      <exception cref="T:System.ArgumentNullException" vsli:raw="&lt;paramref name=&quot;chars&quot; /&gt; is &lt;see langword=&quot;null&quot; /&gt;.">
        <paramref name="chars" /> es <see langword="null" />.</exception>
      <exception cref="T:System.ArgumentOutOfRangeException" vsli:raw="&lt;paramref name=&quot;count&quot; /&gt; is less than zero.  &#xA;  &#xA; -or-  &#xA;  &#xA; The resulting number of bytes is greater than the maximum number that can be returned as an integer.">
        <paramref name="count" /> es menor que cero.  
  
o bien 
El número de bytes resultante es mayor que el número máximo que se puede devolver como entero.</exception>
      <exception cref="T:System.ArgumentException" vsli:raw="Error detection is enabled, and &lt;paramref name=&quot;chars&quot; /&gt; contains an invalid sequence of characters.">Está habilitada la detección de errores, y <paramref name="chars" /> contiene una secuencia de caracteres no válida.</exception>
      <exception cref="T:System.Text.EncoderFallbackException" vsli:raw="A fallback occurred (see Character Encoding in .NET for a complete explanation).&#xA;  &#xA; -and-  &#xA;  &#xA; &lt;see cref=&quot;P:System.Text.Encoding.EncoderFallback&quot; /&gt; is set to &lt;see cref=&quot;T:System.Text.EncoderExceptionFallback&quot; /&gt;.">Se ha producido una acción de reserva (vea Codificación de caracteres en .NET para obtener una explicación completa).
  
- y - 
 El valor de <see cref="P:System.Text.Encoding.EncoderFallback" /> está establecido en <see cref="T:System.Text.EncoderExceptionFallback" />.</exception>
      <returns vsli:raw="The number of bytes produced by encoding the specified characters.">Número de bytes que se generan al codificar los caracteres especificados.</returns>
    </member>
    <member name="M:System.Text.UTF8Encoding.GetByteCount(System.Char[],System.Int32,System.Int32)">
      <summary vsli:raw="Calculates the number of bytes produced by encoding a set of characters from the specified character array.">Calcula el número de bytes generado mediante la codificación de un juego de caracteres de la matriz de caracteres especificada.</summary>
      <param name="chars" vsli:raw="The character array containing the set of characters to encode.">Matriz de caracteres que contiene el juego de caracteres que se va a codificar.</param>
      <param name="index" vsli:raw="The index of the first character to encode.">Índice del primer carácter que se va a codificar.</param>
      <param name="count" vsli:raw="The number of characters to encode.">Número de caracteres que se van a codificar.</param>
      <exception cref="T:System.ArgumentNullException" vsli:raw="&lt;paramref name=&quot;chars&quot; /&gt; is &lt;see langword=&quot;null&quot; /&gt;.">
        <paramref name="chars" /> es <see langword="null" />.</exception>
      <exception cref="T:System.ArgumentOutOfRangeException" vsli:raw="&lt;paramref name=&quot;index&quot; /&gt; or &lt;paramref name=&quot;count&quot; /&gt; is less than zero.  &#xA;  &#xA; -or-  &#xA;  &#xA; &lt;paramref name=&quot;index&quot; /&gt; and &lt;paramref name=&quot;count&quot; /&gt; do not denote a valid range in &lt;paramref name=&quot;chars&quot; /&gt;.  &#xA;  &#xA; -or-  &#xA;  &#xA; The resulting number of bytes is greater than the maximum number that can be returned as an integer.">
        <paramref name="index" /> o <paramref name="count" /> es menor que cero.  
  
o bien 
 <paramref name="index" /> y <paramref name="count" /> no denotan un intervalo válido en <paramref name="chars" />.  
  
o bien 
El número de bytes resultante es mayor que el número máximo que se puede devolver como entero.</exception>
      <exception cref="T:System.ArgumentException" vsli:raw="Error detection is enabled, and &lt;paramref name=&quot;chars&quot; /&gt; contains an invalid sequence of characters.">Está habilitada la detección de errores, y <paramref name="chars" /> contiene una secuencia de caracteres no válida.</exception>
      <exception cref="T:System.Text.EncoderFallbackException" vsli:raw="A fallback occurred (for more information, see Character Encoding in .NET)&#xA;  &#xA; -and-  &#xA;  &#xA; The &lt;see cref=&quot;P:System.Text.Encoding.EncoderFallback&quot; /&gt; property is set to &lt;see cref=&quot;T:System.Text.EncoderExceptionFallback&quot; /&gt;.">Se ha producido una reserva (para más información, vea Codificación de caracteres en .NET) 
- y - 
La propiedad <see cref="P:System.Text.Encoding.EncoderFallback" /> está establecida en <see cref="T:System.Text.EncoderExceptionFallback" />.</exception>
      <returns vsli:raw="The number of bytes produced by encoding the specified characters.">Número de bytes que se generan al codificar los caracteres especificados.</returns>
    </member>
    <member name="M:System.Text.UTF8Encoding.GetByteCount(System.ReadOnlySpan{System.Char})">
      <summary vsli:raw="Calculates the number of bytes produced by encoding the specified character span.">Calcula el número de bytes generado al codificar el intervalo de caracteres especificado.</summary>
      <param name="chars" vsli:raw="The span that contains the set of characters to encode.">Intervalo que contiene el juego de caracteres que se codificará.</param>
      <exception cref="T:System.ArgumentException" vsli:raw="Error detection is enabled, and &lt;paramref name=&quot;chars&quot; /&gt; contains an invalid sequence of characters.">Está habilitada la detección de errores, y <paramref name="chars" /> contiene una secuencia de caracteres no válida.</exception>
      <exception cref="T:System.Text.EncoderFallbackException" vsli:raw="A fallback occurred (for more information, see Character Encoding in .NET).&#xA;  &#xA; -and-  &#xA;  &#xA; &lt;see cref=&quot;P:System.Text.Encoding.EncoderFallback&quot; /&gt; is set to &lt;see cref=&quot;T:System.Text.EncoderExceptionFallback&quot; /&gt;.">Se ha producido una acción de reserva (vea Codificación de caracteres de .NET para obtener una explicación completa).
  
- y - 
 El valor de <see cref="P:System.Text.Encoding.EncoderFallback" /> está establecido en <see cref="T:System.Text.EncoderExceptionFallback" />.</exception>
      <returns vsli:raw="The number of bytes produced by encoding the specified character span.">Número de bytes generado al codificar el intervalo de caracteres especificado.</returns>
    </member>
    <member name="M:System.Text.UTF8Encoding.GetByteCount(System.String)">
      <summary vsli:raw="Calculates the number of bytes produced by encoding the characters in the specified &lt;see cref=&quot;T:System.String&quot; /&gt;.">Calcula el número de bytes generado al codificar los caracteres del objeto <see cref="T:System.String" /> especificado.</summary>
      <param name="chars" vsli:raw="The &lt;see cref=&quot;T:System.String&quot; /&gt; containing the set of characters to encode.">
        <see cref="T:System.String" /> que contiene el juego de caracteres que se va a codificar.</param>
      <exception cref="T:System.ArgumentNullException" vsli:raw="&lt;paramref name=&quot;chars&quot; /&gt; is &lt;see langword=&quot;null&quot; /&gt;.">
        <paramref name="chars" /> es <see langword="null" />.</exception>
      <exception cref="T:System.ArgumentOutOfRangeException" vsli:raw="The resulting number of bytes is greater than the maximum number that can be returned as an integer.">El número de bytes resultante es mayor que el número máximo que se puede devolver como entero.</exception>
      <exception cref="T:System.ArgumentException" vsli:raw="Error detection is enabled, and &lt;paramref name=&quot;chars&quot; /&gt; contains an invalid sequence of characters.">Está habilitada la detección de errores, y <paramref name="chars" /> contiene una secuencia de caracteres no válida.</exception>
      <exception cref="T:System.Text.EncoderFallbackException" vsli:raw="A fallback occurred (for more information, see Character Encoding in .NET)&#xA;  &#xA; -and-  &#xA;  &#xA; &lt;see cref=&quot;P:System.Text.Encoding.EncoderFallback&quot; /&gt; is set to &lt;see cref=&quot;T:System.Text.EncoderExceptionFallback&quot; /&gt;.">Se ha producido una reserva (para más información, vea Codificación de caracteres en .NET) 
- y - 
 El valor de <see cref="P:System.Text.Encoding.EncoderFallback" /> está establecido en <see cref="T:System.Text.EncoderExceptionFallback" />.</exception>
      <returns vsli:raw="The number of bytes produced by encoding the specified characters.">Número de bytes que se generan al codificar los caracteres especificados.</returns>
    </member>
    <member name="M:System.Text.UTF8Encoding.GetBytes(System.Char*,System.Int32,System.Byte*,System.Int32)">
      <summary vsli:raw="Encodes a set of characters starting at the specified character pointer into a sequence of bytes that are stored starting at the specified byte pointer.">Codifica un juego de caracteres a partir del puntero de caracteres especificado en una secuencia de bytes que se almacenan a partir del puntero de bytes especificado.</summary>
      <param name="chars" vsli:raw="A pointer to the first character to encode.">Puntero al primer carácter que se va a codificar.</param>
      <param name="charCount" vsli:raw="The number of characters to encode.">Número de caracteres que se van a codificar.</param>
      <param name="bytes" vsli:raw="A pointer to the location at which to start writing the resulting sequence of bytes.">Puntero a la ubicación en la que se iniciará la escritura de la secuencia de bytes resultante.</param>
      <param name="byteCount" vsli:raw="The maximum number of bytes to write.">Número máximo de bytes que se pueden escribir.</param>
      <exception cref="T:System.ArgumentNullException" vsli:raw="&lt;paramref name=&quot;chars&quot; /&gt; is &lt;see langword=&quot;null&quot; /&gt;.  &#xA;  &#xA; -or-  &#xA;  &#xA; &lt;paramref name=&quot;bytes&quot; /&gt; is &lt;see langword=&quot;null&quot; /&gt;.">
        <paramref name="chars" /> es <see langword="null" />.  
  
o bien 
 <paramref name="bytes" /> es <see langword="null" />.</exception>
      <exception cref="T:System.ArgumentOutOfRangeException" vsli:raw="&lt;paramref name=&quot;charCount&quot; /&gt; or &lt;paramref name=&quot;byteCount&quot; /&gt; is less than zero.">
        <paramref name="charCount" /> o <paramref name="byteCount" /> es menor que cero.</exception>
      <exception cref="T:System.ArgumentException" vsli:raw="Error detection is enabled, and &lt;paramref name=&quot;chars&quot; /&gt; contains an invalid sequence of characters.  &#xA;  &#xA; -or-  &#xA;  &#xA; &lt;paramref name=&quot;byteCount&quot; /&gt; is less than the resulting number of bytes.">Está habilitada la detección de errores, y <paramref name="chars" /> contiene una secuencia de caracteres no válida.  
  
o bien 
 El valor de <paramref name="byteCount" /> es menor que el número resultante de bytes.</exception>
      <exception cref="T:System.Text.EncoderFallbackException" vsli:raw="A fallback occurred (for more information, see Character Encoding in .NET)&#xA;  &#xA; -and-  &#xA;  &#xA; &lt;see cref=&quot;P:System.Text.Encoding.EncoderFallback&quot; /&gt; is set to &lt;see cref=&quot;T:System.Text.EncoderExceptionFallback&quot; /&gt;.">Se ha producido una reserva (para más información, vea Codificación de caracteres en .NET) 
- y - 
 El valor de <see cref="P:System.Text.Encoding.EncoderFallback" /> está establecido en <see cref="T:System.Text.EncoderExceptionFallback" />.</exception>
      <returns vsli:raw="The actual number of bytes written at the location indicated by &lt;paramref name=&quot;bytes&quot; /&gt;.">Número real de bytes escritos en la ubicación indicada por <paramref name="bytes" />.</returns>
    </member>
    <member name="M:System.Text.UTF8Encoding.GetBytes(System.Char[],System.Int32,System.Int32,System.Byte[],System.Int32)">
      <summary vsli:raw="Encodes a set of characters from the specified character array into the specified byte array.">Codifica un juego de caracteres de la matriz de caracteres determinada en la matriz de bytes especificada.</summary>
      <param name="chars" vsli:raw="The character array containing the set of characters to encode.">Matriz de caracteres que contiene el juego de caracteres que se va a codificar.</param>
      <param name="charIndex" vsli:raw="The index of the first character to encode.">Índice del primer carácter que se va a codificar.</param>
      <param name="charCount" vsli:raw="The number of characters to encode.">Número de caracteres que se van a codificar.</param>
      <param name="bytes" vsli:raw="The byte array to contain the resulting sequence of bytes.">Matriz de bytes que contendrá la secuencia de bytes resultante.</param>
      <param name="byteIndex" vsli:raw="The index at which to start writing the resulting sequence of bytes.">Índice en el que se inicia la escritura de la secuencia de bytes resultante.</param>
      <exception cref="T:System.ArgumentNullException" vsli:raw="&lt;paramref name=&quot;chars&quot; /&gt; is &lt;see langword=&quot;null&quot; /&gt;.  &#xA;  &#xA; -or-  &#xA;  &#xA; &lt;paramref name=&quot;bytes&quot; /&gt; is &lt;see langword=&quot;null&quot; /&gt;.">
        <paramref name="chars" /> es <see langword="null" />.  
  
o bien 
 <paramref name="bytes" /> es <see langword="null" />.</exception>
      <exception cref="T:System.ArgumentOutOfRangeException" vsli:raw="&lt;paramref name=&quot;charIndex&quot; /&gt; or &lt;paramref name=&quot;charCount&quot; /&gt; or &lt;paramref name=&quot;byteIndex&quot; /&gt; is less than zero.  &#xA;  &#xA; -or-  &#xA;  &#xA; &lt;paramref name=&quot;charIndex&quot; /&gt; and &lt;paramref name=&quot;charCount&quot; /&gt; do not denote a valid range in &lt;paramref name=&quot;chars&quot; /&gt;.  &#xA;  &#xA; -or-  &#xA;  &#xA; &lt;paramref name=&quot;byteIndex&quot; /&gt; is not a valid index in &lt;paramref name=&quot;bytes&quot; /&gt;.">El valor de <paramref name="charIndex" />, <paramref name="charCount" /> o <paramref name="byteIndex" /> es menor que cero.  
  
o bien 
 <paramref name="charIndex" /> y <paramref name="charCount" /> no denotan un intervalo válido en <paramref name="chars" />.  
  
o bien 
 <paramref name="byteIndex" /> no es un índice válido para <paramref name="bytes" />.</exception>
      <exception cref="T:System.ArgumentException" vsli:raw="Error detection is enabled, and &lt;paramref name=&quot;chars&quot; /&gt; contains an invalid sequence of characters.  &#xA;  &#xA; -or-  &#xA;  &#xA; &lt;paramref name=&quot;bytes&quot; /&gt; does not have enough capacity from &lt;paramref name=&quot;byteIndex&quot; /&gt; to the end of the array to accommodate the resulting bytes.">Está habilitada la detección de errores, y <paramref name="chars" /> contiene una secuencia de caracteres no válida.  
  
o bien 
 <paramref name="bytes" /> no tiene suficiente capacidad desde <paramref name="byteIndex" /> hasta el final de la matriz para alojar los bytes resultantes.</exception>
      <exception cref="T:System.Text.EncoderFallbackException" vsli:raw="A fallback occurred (for more information, see Character Encoding in .NET)&#xA;  &#xA; -and-  &#xA;  &#xA; &lt;see cref=&quot;P:System.Text.Encoding.EncoderFallback&quot; /&gt; is set to &lt;see cref=&quot;T:System.Text.EncoderExceptionFallback&quot; /&gt;.">Se ha producido una reserva (para más información, vea Codificación de caracteres en .NET) 
- y - 
 El valor de <see cref="P:System.Text.Encoding.EncoderFallback" /> está establecido en <see cref="T:System.Text.EncoderExceptionFallback" />.</exception>
      <returns vsli:raw="The actual number of bytes written into &lt;paramref name=&quot;bytes&quot; /&gt;.">Número real de bytes escritos en <paramref name="bytes" />.</returns>
    </member>
    <member name="M:System.Text.UTF8Encoding.GetBytes(System.ReadOnlySpan{System.Char},System.Span{System.Byte})">
      <summary vsli:raw="Encodes the specified character span into the specified byte span.">Codifica el intervalo de caracteres especificado en el intervalo de bytes especificado.</summary>
      <param name="chars" vsli:raw="The character span to encode.">Intervalo de caracteres que se codificará.</param>
      <param name="bytes" vsli:raw="The span to contain the resulting set of bytes.">Intervalo que contendrá el conjunto de bytes resultante.</param>
      <returns vsli:raw="The actual number of bytes written into &lt;paramref name=&quot;bytes&quot; /&gt;.">Número real de bytes escritos en <paramref name="bytes" />.</returns>
    </member>
    <member name="M:System.Text.UTF8Encoding.GetBytes(System.String,System.Int32,System.Int32,System.Byte[],System.Int32)">
      <summary vsli:raw="Encodes a set of characters from the specified &lt;see cref=&quot;T:System.String&quot; /&gt; into the specified byte array.">Codifica un juego de caracteres del objeto <see cref="T:System.String" /> especificado en la matriz de bytes especificada.</summary>
      <param name="s" vsli:raw="The &lt;see cref=&quot;T:System.String&quot; /&gt; containing the set of characters to encode.">
        <see cref="T:System.String" /> que contiene el juego de caracteres que se va a codificar.</param>
      <param name="charIndex" vsli:raw="The index of the first character to encode.">Índice del primer carácter que se va a codificar.</param>
      <param name="charCount" vsli:raw="The number of characters to encode.">Número de caracteres que se van a codificar.</param>
      <param name="bytes" vsli:raw="The byte array to contain the resulting sequence of bytes.">Matriz de bytes que contendrá la secuencia de bytes resultante.</param>
      <param name="byteIndex" vsli:raw="The index at which to start writing the resulting sequence of bytes.">Índice en el que se inicia la escritura de la secuencia de bytes resultante.</param>
      <exception cref="T:System.ArgumentNullException" vsli:raw="&lt;paramref name=&quot;s&quot; /&gt; is &lt;see langword=&quot;null&quot; /&gt;.  &#xA;  &#xA; -or-  &#xA;  &#xA; &lt;paramref name=&quot;bytes&quot; /&gt; is &lt;see langword=&quot;null&quot; /&gt;.">
        <paramref name="s" /> es <see langword="null" />.  
  
o bien 
 <paramref name="bytes" /> es <see langword="null" />.</exception>
      <exception cref="T:System.ArgumentOutOfRangeException" vsli:raw="&lt;paramref name=&quot;charIndex&quot; /&gt; or &lt;paramref name=&quot;charCount&quot; /&gt; or &lt;paramref name=&quot;byteIndex&quot; /&gt; is less than zero.  &#xA;  &#xA; -or-  &#xA;  &#xA; &lt;paramref name=&quot;charIndex&quot; /&gt; and &lt;paramref name=&quot;charCount&quot; /&gt; do not denote a valid range in &lt;paramref name=&quot;chars&quot; /&gt;.  &#xA;  &#xA; -or-  &#xA;  &#xA; &lt;paramref name=&quot;byteIndex&quot; /&gt; is not a valid index in &lt;paramref name=&quot;bytes&quot; /&gt;.">El valor de <paramref name="charIndex" />, <paramref name="charCount" /> o <paramref name="byteIndex" /> es menor que cero.  
  
o bien 
 <paramref name="charIndex" /> y <paramref name="charCount" /> no denotan un intervalo válido en <paramref name="chars" />.  
  
o bien 
 <paramref name="byteIndex" /> no es un índice válido para <paramref name="bytes" />.</exception>
      <exception cref="T:System.ArgumentException" vsli:raw="Error detection is enabled, and &lt;paramref name=&quot;s&quot; /&gt; contains an invalid sequence of characters.  &#xA;  &#xA; -or-  &#xA;  &#xA; &lt;paramref name=&quot;bytes&quot; /&gt; does not have enough capacity from &lt;paramref name=&quot;byteIndex&quot; /&gt; to the end of the array to accommodate the resulting bytes.">Está habilitada la detección de errores, y <paramref name="s" /> contiene una secuencia de caracteres no válida.  
  
o bien 
 <paramref name="bytes" /> no tiene suficiente capacidad desde <paramref name="byteIndex" /> hasta el final de la matriz para alojar los bytes resultantes.</exception>
      <exception cref="T:System.Text.EncoderFallbackException" vsli:raw="A fallback occurred (for more information, see Character Encoding in .NET)&#xA;  &#xA; -and-  &#xA;  &#xA; &lt;see cref=&quot;P:System.Text.Encoding.EncoderFallback&quot; /&gt; is set to &lt;see cref=&quot;T:System.Text.EncoderExceptionFallback&quot; /&gt;.">Se ha producido una reserva (para más información, vea Codificación de caracteres en .NET) 
- y - 
 El valor de <see cref="P:System.Text.Encoding.EncoderFallback" /> está establecido en <see cref="T:System.Text.EncoderExceptionFallback" />.</exception>
      <returns vsli:raw="The actual number of bytes written into &lt;paramref name=&quot;bytes&quot; /&gt;.">Número real de bytes escritos en <paramref name="bytes" />.</returns>
    </member>
    <member name="M:System.Text.UTF8Encoding.GetCharCount(System.Byte*,System.Int32)">
      <summary vsli:raw="Calculates the number of characters produced by decoding a sequence of bytes starting at the specified byte pointer.">Calcula el número de caracteres generado mediante la descodificación de una secuencia de bytes a partir del puntero de bytes especificado.</summary>
      <param name="bytes" vsli:raw="A pointer to the first byte to decode.">Puntero al primer byte que se va a descodificar.</param>
      <param name="count" vsli:raw="The number of bytes to decode.">Número de bytes que se van a descodificar.</param>
      <exception cref="T:System.ArgumentNullException" vsli:raw="&lt;paramref name=&quot;bytes&quot; /&gt; is &lt;see langword=&quot;null&quot; /&gt;.">
        <paramref name="bytes" /> es <see langword="null" />.</exception>
      <exception cref="T:System.ArgumentOutOfRangeException" vsli:raw="&lt;paramref name=&quot;count&quot; /&gt; is less than zero.  &#xA;  &#xA; -or-  &#xA;  &#xA; The resulting number of bytes is greater than the maximum number that can be returned as an integer.">
        <paramref name="count" /> es menor que cero.  
  
o bien 
El número de bytes resultante es mayor que el número máximo que se puede devolver como entero.</exception>
      <exception cref="T:System.ArgumentException" vsli:raw="Error detection is enabled, and &lt;paramref name=&quot;bytes&quot; /&gt; contains an invalid sequence of bytes.">Está habilitada la detección de errores, y <paramref name="bytes" /> contiene una secuencia de bytes no válida.</exception>
      <exception cref="T:System.Text.DecoderFallbackException" vsli:raw="A fallback occurred (for more information, see Character Encoding in .NET)&#xA;  &#xA; -and-  &#xA;  &#xA; &lt;see cref=&quot;P:System.Text.Encoding.DecoderFallback&quot; /&gt; is set to &lt;see cref=&quot;T:System.Text.DecoderExceptionFallback&quot; /&gt;.">Se ha producido una reserva (para más información, vea Codificación de caracteres en .NET) 
- y - 
 El valor de <see cref="P:System.Text.Encoding.DecoderFallback" /> está establecido en <see cref="T:System.Text.DecoderExceptionFallback" />.</exception>
      <returns vsli:raw="The number of characters produced by decoding the specified sequence of bytes.">Número de caracteres que se generan al descodificar la secuencia especificada de bytes.</returns>
    </member>
    <member name="M:System.Text.UTF8Encoding.GetCharCount(System.Byte[],System.Int32,System.Int32)">
      <summary vsli:raw="Calculates the number of characters produced by decoding a sequence of bytes from the specified byte array.">Calcula el número de caracteres generado mediante la descodificación de una secuencia de bytes a partir de la matriz de bytes especificada.</summary>
      <param name="bytes" vsli:raw="The byte array containing the sequence of bytes to decode.">Matriz de bytes que contiene la secuencia de bytes que se va a descodificar.</param>
      <param name="index" vsli:raw="The index of the first byte to decode.">Índice del primer byte que se va a descodificar.</param>
      <param name="count" vsli:raw="The number of bytes to decode.">Número de bytes que se van a descodificar.</param>
      <exception cref="T:System.ArgumentNullException" vsli:raw="&lt;paramref name=&quot;bytes&quot; /&gt; is &lt;see langword=&quot;null&quot; /&gt;.">
        <paramref name="bytes" /> es <see langword="null" />.</exception>
      <exception cref="T:System.ArgumentOutOfRangeException" vsli:raw="&lt;paramref name=&quot;index&quot; /&gt; or &lt;paramref name=&quot;count&quot; /&gt; is less than zero.  &#xA;  &#xA; -or-  &#xA;  &#xA; &lt;paramref name=&quot;index&quot; /&gt; and &lt;paramref name=&quot;count&quot; /&gt; do not denote a valid range in &lt;paramref name=&quot;bytes&quot; /&gt;.  &#xA;  &#xA; -or-  &#xA;  &#xA; The resulting number of bytes is greater than the maximum number that can be returned as an integer.">
        <paramref name="index" /> o <paramref name="count" /> es menor que cero.  
  
o bien 
 <paramref name="index" /> y <paramref name="count" /> no denotan un intervalo válido en <paramref name="bytes" />.  
  
o bien 
El número de bytes resultante es mayor que el número máximo que se puede devolver como entero.</exception>
      <exception cref="T:System.ArgumentException" vsli:raw="Error detection is enabled, and &lt;paramref name=&quot;bytes&quot; /&gt; contains an invalid sequence of bytes.">Está habilitada la detección de errores, y <paramref name="bytes" /> contiene una secuencia de bytes no válida.</exception>
      <exception cref="T:System.Text.DecoderFallbackException" vsli:raw="A fallback occurred (for more information, see Character Encoding in .NET)&#xA;  &#xA; -and-  &#xA;  &#xA; &lt;see cref=&quot;P:System.Text.Encoding.DecoderFallback&quot; /&gt; is set to &lt;see cref=&quot;T:System.Text.DecoderExceptionFallback&quot; /&gt;.">Se ha producido una reserva (para más información, vea Codificación de caracteres en .NET) 
- y - 
 El valor de <see cref="P:System.Text.Encoding.DecoderFallback" /> está establecido en <see cref="T:System.Text.DecoderExceptionFallback" />.</exception>
      <returns vsli:raw="The number of characters produced by decoding the specified sequence of bytes.">Número de caracteres que se generan al descodificar la secuencia especificada de bytes.</returns>
    </member>
    <member name="M:System.Text.UTF8Encoding.GetCharCount(System.ReadOnlySpan{System.Byte})">
      <summary vsli:raw="Calculates the number of characters produced by decoding the specified byte span.">Calcula el número de caracteres generado al descodificar el intervalo de bytes especificado.</summary>
      <param name="bytes" vsli:raw="The span containing the set of bytes to decode.">Intervalo que contiene el conjunto de bytes que se descodificará.</param>
      <returns vsli:raw="The number of characters produced by decoding the specified byte span.">Número de caracteres generado al descodificar el intervalo de bytes especificado.</returns>
    </member>
    <member name="M:System.Text.UTF8Encoding.GetChars(System.Byte*,System.Int32,System.Char*,System.Int32)">
      <summary vsli:raw="Decodes a sequence of bytes starting at the specified byte pointer into a set of characters that are stored starting at the specified character pointer.">Descodifica una secuencia de bytes a partir del puntero de bytes especificado en un juego de caracteres que se almacenan a partir del puntero de caracteres especificado.</summary>
      <param name="bytes" vsli:raw="A pointer to the first byte to decode.">Puntero al primer byte que se va a descodificar.</param>
      <param name="byteCount" vsli:raw="The number of bytes to decode.">Número de bytes que se van a descodificar.</param>
      <param name="chars" vsli:raw="A pointer to the location at which to start writing the resulting set of characters.">Puntero a la ubicación en la que se iniciará la escritura del juego de caracteres resultante.</param>
      <param name="charCount" vsli:raw="The maximum number of characters to write.">Número máximo de caracteres que se van a escribir.</param>
      <exception cref="T:System.ArgumentNullException" vsli:raw="&lt;paramref name=&quot;bytes&quot; /&gt; is &lt;see langword=&quot;null&quot; /&gt;.  &#xA;  &#xA; -or-  &#xA;  &#xA; &lt;paramref name=&quot;chars&quot; /&gt; is &lt;see langword=&quot;null&quot; /&gt;.">
        <paramref name="bytes" /> es <see langword="null" />.  
  
o bien 
 <paramref name="chars" /> es <see langword="null" />.</exception>
      <exception cref="T:System.ArgumentOutOfRangeException" vsli:raw="&lt;paramref name=&quot;byteCount&quot; /&gt; or &lt;paramref name=&quot;charCount&quot; /&gt; is less than zero.">
        <paramref name="byteCount" /> o <paramref name="charCount" /> es menor que cero.</exception>
      <exception cref="T:System.ArgumentException" vsli:raw="Error detection is enabled, and &lt;paramref name=&quot;bytes&quot; /&gt; contains an invalid sequence of bytes.  &#xA;  &#xA; -or-  &#xA;  &#xA; &lt;paramref name=&quot;charCount&quot; /&gt; is less than the resulting number of characters.">Está habilitada la detección de errores, y <paramref name="bytes" /> contiene una secuencia de bytes no válida.  
  
o bien 
 El valor de <paramref name="charCount" /> es menor que el número de caracteres resultante.</exception>
      <exception cref="T:System.Text.DecoderFallbackException" vsli:raw="A fallback occurred (for more information, see Character Encoding in .NET)&#xA;  &#xA; -and-  &#xA;  &#xA; &lt;see cref=&quot;P:System.Text.Encoding.DecoderFallback&quot; /&gt; is set to &lt;see cref=&quot;T:System.Text.DecoderExceptionFallback&quot; /&gt;.">Se ha producido una reserva (para más información, vea Codificación de caracteres en .NET) 
- y - 
 El valor de <see cref="P:System.Text.Encoding.DecoderFallback" /> está establecido en <see cref="T:System.Text.DecoderExceptionFallback" />.</exception>
      <returns vsli:raw="The actual number of characters written at the location indicated by &lt;paramref name=&quot;chars&quot; /&gt;.">Número real de caracteres escrito en la ubicación indicada por <paramref name="chars" />.</returns>
    </member>
    <member name="M:System.Text.UTF8Encoding.GetChars(System.Byte[],System.Int32,System.Int32,System.Char[],System.Int32)">
      <summary vsli:raw="Decodes a sequence of bytes from the specified byte array into the specified character array.">Descodifica una secuencia de bytes de la matriz de bytes especificada en la matriz de caracteres especificada.</summary>
      <param name="bytes" vsli:raw="The byte array containing the sequence of bytes to decode.">Matriz de bytes que contiene la secuencia de bytes que se va a descodificar.</param>
      <param name="byteIndex" vsli:raw="The index of the first byte to decode.">Índice del primer byte que se va a descodificar.</param>
      <param name="byteCount" vsli:raw="The number of bytes to decode.">Número de bytes que se van a descodificar.</param>
      <param name="chars" vsli:raw="The character array to contain the resulting set of characters.">Matriz de caracteres que contendrá el juego de caracteres resultante.</param>
      <param name="charIndex" vsli:raw="The index at which to start writing the resulting set of characters.">Índice en el que se inicia la escritura del juego de caracteres resultante.</param>
      <exception cref="T:System.ArgumentNullException" vsli:raw="&lt;paramref name=&quot;bytes&quot; /&gt; is &lt;see langword=&quot;null&quot; /&gt;.  &#xA;  &#xA; -or-  &#xA;  &#xA; &lt;paramref name=&quot;chars&quot; /&gt; is &lt;see langword=&quot;null&quot; /&gt;.">
        <paramref name="bytes" /> es <see langword="null" />.  
  
o bien 
 <paramref name="chars" /> es <see langword="null" />.</exception>
      <exception cref="T:System.ArgumentOutOfRangeException" vsli:raw="&lt;paramref name=&quot;byteIndex&quot; /&gt; or &lt;paramref name=&quot;byteCount&quot; /&gt; or &lt;paramref name=&quot;charIndex&quot; /&gt; is less than zero.  &#xA;  &#xA; -or-  &#xA;  &#xA; &lt;paramref name=&quot;byteindex&quot; /&gt; and &lt;paramref name=&quot;byteCount&quot; /&gt; do not denote a valid range in &lt;paramref name=&quot;bytes&quot; /&gt;.  &#xA;  &#xA; -or-  &#xA;  &#xA; &lt;paramref name=&quot;charIndex&quot; /&gt; is not a valid index in &lt;paramref name=&quot;chars&quot; /&gt;.">El valor de <paramref name="byteIndex" />, <paramref name="byteCount" /> o <paramref name="charIndex" /> es menor que cero.  
  
o bien 
 <paramref name="byteindex" /> y <paramref name="byteCount" /> no denotan un intervalo válido en <paramref name="bytes" />.  
  
o bien 
 <paramref name="charIndex" /> no es un índice válido para <paramref name="chars" />.</exception>
      <exception cref="T:System.ArgumentException" vsli:raw="Error detection is enabled, and &lt;paramref name=&quot;bytes&quot; /&gt; contains an invalid sequence of bytes.  &#xA;  &#xA; -or-  &#xA;  &#xA; &lt;paramref name=&quot;chars&quot; /&gt; does not have enough capacity from &lt;paramref name=&quot;charIndex&quot; /&gt; to the end of the array to accommodate the resulting characters.">Está habilitada la detección de errores, y <paramref name="bytes" /> contiene una secuencia de bytes no válida.  
  
o bien 
 <paramref name="chars" /> no tiene suficiente capacidad desde <paramref name="charIndex" /> hasta el final de la matriz para aloja los caracteres resultantes.</exception>
      <exception cref="T:System.Text.DecoderFallbackException" vsli:raw="A fallback occurred (for more information, see Character Encoding in .NET)&#xA;  &#xA; -and-  &#xA;  &#xA; &lt;see cref=&quot;P:System.Text.Encoding.DecoderFallback&quot; /&gt; is set to &lt;see cref=&quot;T:System.Text.DecoderExceptionFallback&quot; /&gt;.">Se ha producido una reserva (para más información, vea Codificación de caracteres en .NET) 
- y - 
 El valor de <see cref="P:System.Text.Encoding.DecoderFallback" /> está establecido en <see cref="T:System.Text.DecoderExceptionFallback" />.</exception>
      <returns vsli:raw="The actual number of characters written into &lt;paramref name=&quot;chars&quot; /&gt;.">Número real de caracteres escritos en <paramref name="chars" />.</returns>
    </member>
    <member name="M:System.Text.UTF8Encoding.GetChars(System.ReadOnlySpan{System.Byte},System.Span{System.Char})">
      <summary vsli:raw="Decodes the specified byte span into the specified character span.">Descodifica el intervalo de bytes especificado en el intervalo de caracteres especificado.</summary>
      <param name="bytes" vsli:raw="The span containing the bytes to decode.">Intervalo que contiene los bytes que se descodificarán.</param>
      <param name="chars" vsli:raw="The span to contain the resulting set of characters.">Intervalo que contendrá el juego de caracteres resultante.</param>
      <returns vsli:raw="The actual number of characters written into &lt;paramref name=&quot;chars&quot; /&gt;.">Número real de caracteres escritos en <paramref name="chars" />.</returns>
    </member>
    <member name="M:System.Text.UTF8Encoding.GetDecoder">
      <summary vsli:raw="Obtains a decoder that converts a UTF-8 encoded sequence of bytes into a sequence of Unicode characters.">Obtiene un descodificador que convierte una secuencia de bytes codificada en UTF-8 en una secuencia de caracteres Unicode.</summary>
      <returns vsli:raw="A decoder that converts a UTF-8 encoded sequence of bytes into a sequence of Unicode characters.">Descodificador que convierte una secuencia de bytes codificada en UTF-8 en una secuencia de caracteres Unicode.</returns>
    </member>
    <member name="M:System.Text.UTF8Encoding.GetEncoder">
      <summary vsli:raw="Obtains an encoder that converts a sequence of Unicode characters into a UTF-8 encoded sequence of bytes.">Obtiene un codificador que convierte una secuencia de caracteres Unicode en una secuencia de bytes codificada en UTF-8.</summary>
      <returns vsli:raw="A &lt;see cref=&quot;T:System.Text.Encoder&quot; /&gt; that converts a sequence of Unicode characters into a UTF-8 encoded sequence of bytes.">Objeto <see cref="T:System.Text.Encoder" /> que convierte una secuencia de caracteres Unicode en una secuencia de bytes UTF-8 codificada.</returns>
    </member>
    <member name="M:System.Text.UTF8Encoding.GetHashCode">
      <summary vsli:raw="Returns the hash code for the current instance.">Devuelve el código hash de la instancia actual.</summary>
      <returns vsli:raw="The hash code for the current instance.">Código hash de la instancia actual.</returns>
    </member>
    <member name="M:System.Text.UTF8Encoding.GetMaxByteCount(System.Int32)">
      <summary vsli:raw="Calculates the maximum number of bytes produced by encoding the specified number of characters.">Calcula el número máximo de bytes generado mediante la codificación del número de caracteres especificado.</summary>
      <param name="charCount" vsli:raw="The number of characters to encode.">Número de caracteres que se van a codificar.</param>
      <exception cref="T:System.ArgumentOutOfRangeException" vsli:raw="&lt;paramref name=&quot;charCount&quot; /&gt; is less than zero.  &#xA;  &#xA; -or-  &#xA;  &#xA; The resulting number of bytes is greater than the maximum number that can be returned as an integer.">
        <paramref name="charCount" /> es menor que cero.  
  
o bien 
El número de bytes resultante es mayor que el número máximo que se puede devolver como entero.</exception>
      <exception cref="T:System.Text.EncoderFallbackException" vsli:raw="A fallback occurred (for more information, see Character Encoding in .NET)&#xA;  &#xA; -and-  &#xA;  &#xA; &lt;see cref=&quot;P:System.Text.Encoding.EncoderFallback&quot; /&gt; is set to &lt;see cref=&quot;T:System.Text.EncoderExceptionFallback&quot; /&gt;.">Se ha producido una reserva (para más información, vea Codificación de caracteres en .NET) 
- y - 
 El valor de <see cref="P:System.Text.Encoding.EncoderFallback" /> está establecido en <see cref="T:System.Text.EncoderExceptionFallback" />.</exception>
      <returns vsli:raw="The maximum number of bytes produced by encoding the specified number of characters.">Número máximo de bytes generados al codificar el número de caracteres especificado.</returns>
    </member>
    <member name="M:System.Text.UTF8Encoding.GetMaxCharCount(System.Int32)">
      <summary vsli:raw="Calculates the maximum number of characters produced by decoding the specified number of bytes.">Calcula el número máximo de caracteres generado mediante la descodificación del número de bytes especificado.</summary>
      <param name="byteCount" vsli:raw="The number of bytes to decode.">Número de bytes que se van a descodificar.</param>
      <exception cref="T:System.ArgumentOutOfRangeException" vsli:raw="&lt;paramref name=&quot;byteCount&quot; /&gt; is less than zero.  &#xA;  &#xA; -or-  &#xA;  &#xA; The resulting number of bytes is greater than the maximum number that can be returned as an integer.">
        <paramref name="byteCount" /> es menor que cero.  
  
o bien 
El número de bytes resultante es mayor que el número máximo que se puede devolver como entero.</exception>
      <exception cref="T:System.Text.DecoderFallbackException" vsli:raw="A fallback occurred (for more information, see Character Encoding in .NET)&#xA;  &#xA; -and-  &#xA;  &#xA; &lt;see cref=&quot;P:System.Text.Encoding.DecoderFallback&quot; /&gt; is set to &lt;see cref=&quot;T:System.Text.DecoderExceptionFallback&quot; /&gt;.">Se ha producido una reserva (para más información, vea Codificación de caracteres en .NET) 
- y - 
 El valor de <see cref="P:System.Text.Encoding.DecoderFallback" /> está establecido en <see cref="T:System.Text.DecoderExceptionFallback" />.</exception>
      <returns vsli:raw="The maximum number of characters produced by decoding the specified number of bytes.">Número máximo de caracteres que se generan al descodificar el número de bytes especificado.</returns>
    </member>
    <member name="M:System.Text.UTF8Encoding.GetPreamble">
      <summary vsli:raw="Returns a Unicode byte order mark encoded in UTF-8 format, if the &lt;see cref=&quot;T:System.Text.UTF8Encoding&quot; /&gt; encoding object is configured to supply one.">Devuelve una marca de orden de bytes Unicode codificada en formato UTF-8, si el objeto de codificación <see cref="T:System.Text.UTF8Encoding" /> está configurado para proporcionarla.</summary>
      <returns vsli:raw="A byte array containing the Unicode byte order mark, if the &lt;see cref=&quot;T:System.Text.UTF8Encoding&quot; /&gt; encoding object is configured to supply one. Otherwise, this method returns a zero-length byte array.">Una matriz de bytes que contiene la marca de orden de bytes Unicode, si el objeto de codificación <see cref="T:System.Text.UTF8Encoding" /> está configurado para proporcionarla. De lo contrario, este método devuelve una matriz de bytes de longitud cero.</returns>
    </member>
    <member name="M:System.Text.UTF8Encoding.GetString(System.Byte[],System.Int32,System.Int32)">
      <summary vsli:raw="Decodes a range of bytes from a byte array into a string.">Descodifica un intervalo de bytes de una matriz de bytes en una cadena.</summary>
      <param name="bytes" vsli:raw="The byte array containing the sequence of bytes to decode.">Matriz de bytes que contiene la secuencia de bytes que se va a descodificar.</param>
      <param name="index" vsli:raw="The index of the first byte to decode.">Índice del primer byte que se va a descodificar.</param>
      <param name="count" vsli:raw="The number of bytes to decode.">Número de bytes que se van a descodificar.</param>
      <exception cref="T:System.ArgumentNullException" vsli:raw="&lt;paramref name=&quot;bytes&quot; /&gt; is &lt;see langword=&quot;null&quot; /&gt;.">
        <paramref name="bytes" /> es <see langword="null" />.</exception>
      <exception cref="T:System.ArgumentOutOfRangeException" vsli:raw="&lt;paramref name=&quot;index&quot; /&gt; or &lt;paramref name=&quot;count&quot; /&gt; is less than zero.  &#xA;  &#xA; -or-  &#xA;  &#xA; &lt;paramref name=&quot;index&quot; /&gt; and &lt;paramref name=&quot;count&quot; /&gt; do not denote a valid range in &lt;paramref name=&quot;bytes&quot; /&gt;.">
        <paramref name="index" /> o <paramref name="count" /> es menor que cero.  
  
o bien 
 <paramref name="index" /> y <paramref name="count" /> no denotan un intervalo válido en <paramref name="bytes" />.</exception>
      <exception cref="T:System.ArgumentException" vsli:raw="Error detection is enabled, and &lt;paramref name=&quot;bytes&quot; /&gt; contains an invalid sequence of bytes.">Está habilitada la detección de errores, y <paramref name="bytes" /> contiene una secuencia de bytes no válida.</exception>
      <exception cref="T:System.Text.DecoderFallbackException" vsli:raw="A fallback occurred (for more information, see Character Encoding in .NET)&#xA;  &#xA; -and-  &#xA;  &#xA; &lt;see cref=&quot;P:System.Text.Encoding.DecoderFallback&quot; /&gt; is set to &lt;see cref=&quot;T:System.Text.DecoderExceptionFallback&quot; /&gt;.">Se ha producido una reserva (para más información, vea Codificación de caracteres en .NET) 
- y - 
 El valor de <see cref="P:System.Text.Encoding.DecoderFallback" /> está establecido en <see cref="T:System.Text.DecoderExceptionFallback" />.</exception>
      <returns vsli:raw="A &lt;see cref=&quot;T:System.String&quot; /&gt; containing the results of decoding the specified sequence of bytes.">Objeto <see cref="T:System.String" /> que contiene los resultados obtenidos al descodificar la secuencia de bytes especificada.</returns>
    </member>
    <member name="P:System.Text.UTF8Encoding.Preamble">
      <summary vsli:raw="Gets a Unicode byte order mark encoded in UTF-8 format, if this object is configured to supply one.">Obtiene una marca BOM Unicode codificada en formato UTF-8, si el objeto se ha configurado para proporcionarla.</summary>
      <returns vsli:raw="A byte span containing the Unicode byte order mark, if this object is configured to supply one; otherwise, the default span.">Intervalo de bytes que contiene la marca de orden de bytes Unicode, si este objeto está configurado para proporcionar uno; de lo contrario, el intervalo predeterminado.</returns>
    </member>
  </members>
</doc>