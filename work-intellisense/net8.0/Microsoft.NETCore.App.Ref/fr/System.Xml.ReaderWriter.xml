<?xml version="1.0" encoding="utf-8"?>
<doc xmlns:vsli="https://github.com/sk-0520/vs-localized-intellisense/tree/master/schema/2024">
  <assembly>
    <name>System.Xml.ReaderWriter</name>
  </assembly>
  <members>
    <member name="T:System.Xml.ConformanceLevel">
      <summary vsli:raw="Specifies the amount of input or output checking that &lt;see cref=&quot;T:System.Xml.XmlReader&quot; /&gt; and &lt;see cref=&quot;T:System.Xml.XmlWriter&quot; /&gt; objects perform.">Spécifie l’ampleur des contrôles d’entrée ou de sortie que les objets <see cref="T:System.Xml.XmlReader" /> et <see cref="T:System.Xml.XmlWriter" /> effectuent.</summary>
    </member>
    <member name="F:System.Xml.ConformanceLevel.Auto">
      <summary vsli:raw="The &lt;see cref=&quot;T:System.Xml.XmlReader&quot; /&gt; or &lt;see cref=&quot;T:System.Xml.XmlWriter&quot; /&gt; object automatically detects whether document-level or fragment-level checking should be performed, and does the appropriate checking. If you're wrapping another &lt;see cref=&quot;T:System.Xml.XmlReader&quot; /&gt; or &lt;see cref=&quot;T:System.Xml.XmlWriter&quot; /&gt; object, the outer object doesn't do any additional conformance checking. Conformance checking is left up to the underlying object.  &#xA;  &#xA; See the &lt;see cref=&quot;P:System.Xml.XmlReaderSettings.ConformanceLevel&quot; /&gt; and &lt;see cref=&quot;P:System.Xml.XmlWriterSettings.ConformanceLevel&quot; /&gt; properties for details on how the compliance level is determined.">L’objet <see cref="T:System.Xml.XmlReader" /> ou <see cref="T:System.Xml.XmlWriter" /> détecte automatiquement si une vérification au niveau du document ou du fragment doit être effectuée et procède au contrôle approprié. Si vous enveloppez (wrap) un autre objet <see cref="T:System.Xml.XmlReader" /> ou <see cref="T:System.Xml.XmlWriter" />, l’objet externe n’effectue aucune vérification de conformité supplémentaire. Le contrôle de conformité doit être fait par l'objet sous-jacent.  
  
Pour plus de détails sur la détermination du niveau de conformité, consultez les propriétés <see cref="P:System.Xml.XmlReaderSettings.ConformanceLevel" /> et <see cref="P:System.Xml.XmlWriterSettings.ConformanceLevel" />.</summary>
    </member>
    <member name="F:System.Xml.ConformanceLevel.Document">
      <summary vsli:raw="The XML data complies with the rules for a well-formed XML 1.0 document, as defined by the W3C. This level of checking ensures that the stream being read or written can be consumed by any processor as an XML 1.0 document.">Les données XML respectent les règles définissant un document XML 1.0 bien formé, tel que défini dans W3C. Ce niveau de vérification garantit que tout processeur peut utiliser le flux en cours de lecture ou d'écriture comme document XML 1.0.</summary>
    </member>
    <member name="F:System.Xml.ConformanceLevel.Fragment">
      <summary vsli:raw="The XML data is a well-formed XML fragment, as defined by the W3C.  This conformance level represents an XML document that might not have a root element but is otherwise well-formed. This level of checking ensures that the stream being read or written can be consumed by any processor as an XML 1.0 external parsed entity].">Les données XML sont un fragment XML bien formé, tel que défini dans W3C.  Ce niveau de conformité représente un document XML qui peut ne pas comporter d'élément racine, mais qui est par ailleurs bien formé. Ce niveau de vérification garantit que tout processeur peut utiliser le flux en cours de lecture ou d'écriture comme entité analysée externe XML 1.0.</summary>
    </member>
    <member name="T:System.Xml.DtdProcessing">
      <summary vsli:raw="Specifies the options for processing DTDs. The &lt;see cref=&quot;T:System.Xml.DtdProcessing&quot; /&gt; enumeration is used by the &lt;see cref=&quot;T:System.Xml.XmlReaderSettings&quot; /&gt; class.">Spécifie les options de traitement des DTD. L'énumération <see cref="T:System.Xml.DtdProcessing" /> est utilisée par la classe <see cref="T:System.Xml.XmlReaderSettings" />.</summary>
    </member>
    <member name="F:System.Xml.DtdProcessing.Ignore">
      <summary vsli:raw="Causes the DOCTYPE element to be ignored. No DTD processing occurs, and the DTD/DOCTYPE is lost on output.">Entraîne le fait que l'élément DOCTYPE est ignoré. Aucun traitement DTD n'a lieu, et l'élément DTD/DOCTYPE est omis dans la sortie.</summary>
    </member>
    <member name="F:System.Xml.DtdProcessing.Parse">
      <summary vsli:raw="Used for parsing DTDs.">Utilisé pour l'analyse des DTD.</summary>
    </member>
    <member name="F:System.Xml.DtdProcessing.Prohibit">
      <summary vsli:raw="Specifies that when a DTD is encountered, an &lt;see cref=&quot;T:System.Xml.XmlException&quot; /&gt; is thrown with a message that states that DTDs are prohibited. This is the default behavior.">Spécifie que lorsqu'une DTD est rencontrée, un <see cref="T:System.Xml.XmlException" /> est levé avec un message signalant que les DTD sont interdites. Il s'agit du comportement par défaut.</summary>
    </member>
    <member name="T:System.Xml.EntityHandling">
      <summary vsli:raw="Specifies how the &lt;see cref=&quot;T:System.Xml.XmlTextReader&quot; /&gt; or &lt;see cref=&quot;T:System.Xml.XmlValidatingReader&quot; /&gt; handle entities.">Spécifie comment <see cref="T:System.Xml.XmlTextReader" /> ou <see cref="T:System.Xml.XmlValidatingReader" /> gèrent les entités.</summary>
    </member>
    <member name="F:System.Xml.EntityHandling.ExpandCharEntities">
      <summary vsli:raw="Expands character entities and returns general entities as &lt;see cref=&quot;F:System.Xml.XmlNodeType.EntityReference&quot; /&gt; nodes. &#xA;        &#xA;You must call &lt;see cref=&quot;Overload:System.Xml.XmlReader.ResolveEntity&quot; /&gt; to see what the general entities expand to. This enables you to optimize entity handling by only expanding the entity the first time it is used.  &#xA;  &#xA;When set to &lt;see langword=&quot;ExpandCharEntities&quot; /&gt;, a reader call to the &lt;see cref=&quot;Overload:System.Xml.XmlReader.GetAttribute&quot; /&gt; method expands all entities (both general and character entities).">Développe des entités de caractères et retourne des entités générales telles que les nœuds <see cref="F:System.Xml.XmlNodeType.EntityReference" />. 
        
Vous devez appeler <see cref="Overload:System.Xml.XmlReader.ResolveEntity" /> pour voir comment les entités générales se développent. Cela vous permet d'optimiser la gestion des entités en ne les développant que lors de leur première utilisation.  
  
Lorsqu'il est défini sur <see langword="ExpandCharEntities" />, un appel de la méthode <see cref="Overload:System.Xml.XmlReader.GetAttribute" /> par le lecteur développe toutes les entités (entités générales et entités de caractères).</summary>
    </member>
    <member name="F:System.Xml.EntityHandling.ExpandEntities">
      <summary vsli:raw="Expands all entities and returns the expanded nodes.&#xA;        &#xA;&lt;see cref=&quot;F:System.Xml.XmlNodeType.EntityReference&quot; /&gt; nodes are not returned. The entity text is expanded in place of the entity references.">Développe toutes les entités et retourne les nœuds développés.
        
Les nœuds <see cref="F:System.Xml.XmlNodeType.EntityReference" /> ne sont pas renvoyés. Le texte de l'entité est développé à la place des références de celle-ci.</summary>
    </member>
    <member name="T:System.Xml.Formatting">
      <summary vsli:raw="Specifies formatting options for the &lt;see cref=&quot;T:System.Xml.XmlTextWriter&quot; /&gt;.">Spécifie les options de mise en forme pour le <see cref="T:System.Xml.XmlTextWriter" />.</summary>
    </member>
    <member name="F:System.Xml.Formatting.Indented">
      <summary vsli:raw="Causes child elements to be indented according to the &lt;see cref=&quot;P:System.Xml.XmlTextWriter.Indentation&quot; /&gt; and &lt;see cref=&quot;P:System.Xml.XmlTextWriter.IndentChar&quot; /&gt; settings.&#xA;&#xA;This option indents element content only; mixed content is not affected. For the XML 1.0 definitions of these terms, see the World Wide Web Consortium (W3C) documentation Element Content and Mixed Content.">Ajuste le retrait des éléments enfants sur la base des paramètres <see cref="P:System.Xml.XmlTextWriter.Indentation" /> et <see cref="P:System.Xml.XmlTextWriter.IndentChar" />.

Cette option met uniquement en retrait le contenu de l'élément ; le contenu mixte n'est pas affecté. Pour accéder aux définitions XML 1.0 de ces termes, reportez-vous à la documentation W3C (World Wide Web Consortium) Contenu de l'élément et Contenu mixte.</summary>
    </member>
    <member name="F:System.Xml.Formatting.None">
      <summary vsli:raw="No special formatting is applied. This is the default.">Aucune mise en forme spéciale n'est appliquée. Il s'agit de la valeur par défaut.</summary>
    </member>
    <member name="T:System.Xml.IApplicationResourceStreamResolver">
      <summary vsli:raw="Represents an application resource stream resolver.">Représente un programme de résolution de flux de données des ressources de l'application.</summary>
    </member>
    <member name="M:System.Xml.IApplicationResourceStreamResolver.GetApplicationResourceStream(System.Uri)">
      <summary vsli:raw="Returns an application resource stream from the specified URI.">Retourne un flux de ressources d'application à partir de l'URI spécifié.</summary>
      <param name="relativeUri" vsli:raw="The relative URI.">URI relative.</param>
      <returns vsli:raw="An application resource stream.">Flux de ressources d'application.</returns>
    </member>
    <member name="T:System.Xml.IHasXmlNode">
      <summary vsli:raw="Enables a class to return an &lt;see cref=&quot;T:System.Xml.XmlNode&quot; /&gt; from the current context or position.">Permet à une classe de retourner un <see cref="T:System.Xml.XmlNode" /> à partir du contexte en cours ou de la position actuelle.</summary>
    </member>
    <member name="M:System.Xml.IHasXmlNode.GetNode">
      <summary vsli:raw="Returns the &lt;see cref=&quot;T:System.Xml.XmlNode&quot; /&gt; for the current position.">Retourne <see cref="T:System.Xml.XmlNode" /> pour la position actuelle.</summary>
      <returns vsli:raw="The &lt;see langword=&quot;XmlNode&quot; /&gt; for the current position.">
        <see langword="XmlNode" /> pour la position actuelle.</returns>
    </member>
    <member name="T:System.Xml.IXmlLineInfo">
      <summary vsli:raw="Provides an interface to enable a class to return line and position information.">Fournit une interface pour permettre à une classe de retourner des informations de ligne et de position.</summary>
    </member>
    <member name="M:System.Xml.IXmlLineInfo.HasLineInfo">
      <summary vsli:raw="Gets a value indicating whether the class can return line information.">Obtient une valeur indiquant si la classe peut retourner des informations de ligne.</summary>
      <returns vsli:raw="&lt;see langword=&quot;true&quot; /&gt; if &lt;see cref=&quot;P:System.Xml.IXmlLineInfo.LineNumber&quot; /&gt; and &lt;see cref=&quot;P:System.Xml.IXmlLineInfo.LinePosition&quot; /&gt; can be provided; otherwise, &lt;see langword=&quot;false&quot; /&gt;.">
        <see langword="true" /> si <see cref="P:System.Xml.IXmlLineInfo.LineNumber" /> et <see cref="P:System.Xml.IXmlLineInfo.LinePosition" /> peuvent être fournis ; sinon, <see langword="false" />.</returns>
    </member>
    <member name="P:System.Xml.IXmlLineInfo.LineNumber">
      <summary vsli:raw="Gets the current line number.">Obtient le numéro de la ligne active.</summary>
      <returns vsli:raw="The current line number or 0 if no line information is available (for example, &lt;see cref=&quot;M:System.Xml.IXmlLineInfo.HasLineInfo&quot; /&gt; returns &lt;see langword=&quot;false&quot; /&gt;).">Le numéro de la ligne active ou 0 si aucune information de ligne n'est disponible (par exemple, <see cref="M:System.Xml.IXmlLineInfo.HasLineInfo" /> retourne <see langword="false" />).</returns>
    </member>
    <member name="P:System.Xml.IXmlLineInfo.LinePosition">
      <summary vsli:raw="Gets the current line position.">Obtient la position de la ligne active.</summary>
      <returns vsli:raw="The current line position or 0 if no line information is available (for example, &lt;see cref=&quot;M:System.Xml.IXmlLineInfo.HasLineInfo&quot; /&gt; returns &lt;see langword=&quot;false&quot; /&gt;).">La position de la ligne active ou 0 si aucune information de ligne n'est disponible (par exemple, <see cref="M:System.Xml.IXmlLineInfo.HasLineInfo" /> retourne <see langword="false" />).</returns>
    </member>
    <member name="T:System.Xml.IXmlNamespaceResolver">
      <summary vsli:raw="Provides read-only access to a set of prefix and namespace mappings.">Fournit un accès en lecture seule à un jeu de mappages de préfixes et d'espaces de noms.</summary>
    </member>
    <member name="M:System.Xml.IXmlNamespaceResolver.GetNamespacesInScope(System.Xml.XmlNamespaceScope)">
      <summary vsli:raw="Gets a collection of defined prefix-namespace mappings that are currently in scope.">Obtient une collection de mappages de préfixes sur des espaces de noms définis qui sont actuellement dans la portée.</summary>
      <param name="scope" vsli:raw="An &lt;see cref=&quot;T:System.Xml.XmlNamespaceScope&quot; /&gt; value that specifies the type of namespace nodes to return.">Valeur de <see cref="T:System.Xml.XmlNamespaceScope" /> qui spécifie le type de nœuds d'espace de noms à retourner.</param>
      <returns vsli:raw="An &lt;see cref=&quot;T:System.Collections.IDictionary&quot; /&gt; that contains the current in-scope namespaces.">
        <see cref="T:System.Collections.IDictionary" /> qui contient les espaces de noms actuellement dans la portée.</returns>
    </member>
    <member name="M:System.Xml.IXmlNamespaceResolver.LookupNamespace(System.String)">
      <summary vsli:raw="Gets the namespace URI mapped to the specified prefix.">Obtient l'URI de l'espace de noms mappé sur le préfixe spécifié.</summary>
      <param name="prefix" vsli:raw="The prefix whose namespace URI you wish to find.">Préfixe dont vous recherchez l'URI de l'espace de noms.</param>
      <returns vsli:raw="The namespace URI that is mapped to the prefix; &lt;see langword=&quot;null&quot; /&gt; if the prefix is not mapped to a namespace URI.">URI d'espace de noms mappé au préfixe ; <see langword="null" /> si le préfixe n'est pas mappé à un URI d'espace de noms.</returns>
    </member>
    <member name="M:System.Xml.IXmlNamespaceResolver.LookupPrefix(System.String)">
      <summary vsli:raw="Gets the prefix that is mapped to the specified namespace URI.">Obtient le préfixe qui est mappé sur l'URI de l'espace de noms spécifié.</summary>
      <param name="namespaceName" vsli:raw="The namespace URI whose prefix you wish to find.">URI de l'espace de noms dont vous recherchez le préfixe.</param>
      <returns vsli:raw="The prefix that is mapped to the namespace URI; &lt;see langword=&quot;null&quot; /&gt; if the namespace URI is not mapped to a prefix.">Préfixe mappé à l'URI d'espace de noms ; <see langword="null" /> si l'URI de l'espace de noms n'est pas mappé sur un préfixe.</returns>
    </member>
    <member name="T:System.Xml.NamespaceHandling">
      <summary vsli:raw="Specifies whether to remove duplicate namespace declarations in the &lt;see cref=&quot;T:System.Xml.XmlWriter&quot; /&gt;.">Spécifie si vous souhaitez supprimer les déclarations d'espace de noms en double dans le <see cref="T:System.Xml.XmlWriter" />.</summary>
    </member>
    <member name="F:System.Xml.NamespaceHandling.Default">
      <summary vsli:raw="Specifies that duplicate namespace declarations will not be removed.">Spécifie que les déclarations d'espace de noms en double ne seront pas supprimées.</summary>
    </member>
    <member name="F:System.Xml.NamespaceHandling.OmitDuplicates">
      <summary vsli:raw="Specifies that duplicate namespace declarations will be removed. For the duplicate namespace to be removed, the prefix and the namespace must match.">Spécifie que les déclarations d'espace de noms en double seront supprimées. Pour l'espace de noms en double à supprimer, le préfixe et l'espace de noms doivent correspondre.</summary>
    </member>
    <member name="T:System.Xml.NameTable">
      <summary vsli:raw="Implements a single-threaded &lt;see cref=&quot;T:System.Xml.XmlNameTable&quot; /&gt;.">Implémente un <see cref="T:System.Xml.XmlNameTable" /> à thread unique.</summary>
    </member>
    <member name="M:System.Xml.NameTable.#ctor">
      <summary vsli:raw="Initializes a new instance of the &lt;see langword=&quot;NameTable&quot; /&gt; class.">Initialise une nouvelle instance de la classe <see langword="NameTable" />.</summary>
    </member>
    <member name="M:System.Xml.NameTable.Add(System.Char[],System.Int32,System.Int32)">
      <summary vsli:raw="Atomizes the specified string and adds it to the &lt;see langword=&quot;NameTable&quot; /&gt;.">Atomise la chaîne spécifiée et l'ajoute à <see langword="NameTable" />.</summary>
      <param name="key" vsli:raw="The character array containing the string to add.">Tableau de caractères contenant les chaînes à ajouter.</param>
      <param name="start" vsli:raw="The zero-based index into the array specifying the first character of the string.">Index de base zéro dans le tableau spécifiant le premier caractère de la chaîne.</param>
      <param name="len" vsli:raw="The number of characters in the string.">Nombre de caractères dans la chaîne.</param>
      <exception cref="T:System.IndexOutOfRangeException" vsli:raw="0 &amp;gt; &lt;paramref name=&quot;start&quot; /&gt;  &#xA;  &#xA; -or-  &#xA;  &#xA; &lt;paramref name=&quot;start&quot; /&gt; &amp;gt;= &lt;paramref name=&quot;key&quot; /&gt;.Length  &#xA;  &#xA; -or-  &#xA;  &#xA; &lt;paramref name=&quot;len&quot; /&gt; &amp;gt;= &lt;paramref name=&quot;key&quot; /&gt;.Length  &#xA;  &#xA; The above conditions do not cause an exception to be thrown if &lt;paramref name=&quot;len&quot; /&gt; =0.">0 &gt; <paramref name="start" />  
  
- ou - 
 <paramref name="start" /> &gt;= <paramref name="key" />.Length 
- ou - 
 <paramref name="len" /> &gt;= <paramref name="key" />.Length 
Les conditions ci-dessus n'entraînent pas la levée d'une exception si <paramref name="len" />=0.</exception>
      <exception cref="T:System.ArgumentOutOfRangeException" vsli:raw="&lt;paramref name=&quot;len&quot; /&gt; &amp;lt; 0.">
        <paramref name="len" /> &lt; 0.</exception>
      <returns vsli:raw="The atomized string or the existing string if one already exists in the &lt;see langword=&quot;NameTable&quot; /&gt;. If &lt;paramref name=&quot;len&quot; /&gt; is zero, String.Empty is returned.">La chaîne atomisée ou, le cas échéant, la chaîne existante dans <see langword="NameTable" />. Si <paramref name="len" /> a la valeur zéro, String.Empty est retourné.</returns>
    </member>
    <member name="M:System.Xml.NameTable.Add(System.String)">
      <summary vsli:raw="Atomizes the specified string and adds it to the &lt;see langword=&quot;NameTable&quot; /&gt;.">Atomise la chaîne spécifiée et l'ajoute à <see langword="NameTable" />.</summary>
      <param name="key" vsli:raw="The string to add.">Chaîne à ajouter.</param>
      <exception cref="T:System.ArgumentNullException" vsli:raw="&lt;paramref name=&quot;key&quot; /&gt; is &lt;see langword=&quot;null&quot; /&gt;.">
        <paramref name="key" /> a la valeur <see langword="null" />.</exception>
      <returns vsli:raw="The atomized string or the existing string if it already exists in the &lt;see langword=&quot;NameTable&quot; /&gt;.">La chaîne atomisée ou, le cas échéant, la chaîne existante dans le <see langword="NameTable" />.</returns>
    </member>
    <member name="M:System.Xml.NameTable.Get(System.Char[],System.Int32,System.Int32)">
      <summary vsli:raw="Gets the atomized string containing the same characters as the specified range of characters in the given array.">Obtient la chaîne atomisée contenant les mêmes caractères que la plage de caractères spécifiée dans le tableau donné.</summary>
      <param name="key" vsli:raw="The character array containing the name to find.">Tableau de caractères contenant le nom à rechercher.</param>
      <param name="start" vsli:raw="The zero-based index into the array specifying the first character of the name.">Index de base zéro dans le tableau spécifiant le premier caractère du nom.</param>
      <param name="len" vsli:raw="The number of characters in the name.">Nombre de caractères dans le nom.</param>
      <exception cref="T:System.IndexOutOfRangeException" vsli:raw="0 &amp;gt; &lt;paramref name=&quot;start&quot; /&gt;  &#xA;  &#xA; -or-  &#xA;  &#xA; &lt;paramref name=&quot;start&quot; /&gt; &amp;gt;= &lt;paramref name=&quot;key&quot; /&gt;.Length  &#xA;  &#xA; -or-  &#xA;  &#xA; &lt;paramref name=&quot;len&quot; /&gt; &amp;gt;= &lt;paramref name=&quot;key&quot; /&gt;.Length  &#xA;  &#xA; The above conditions do not cause an exception to be thrown if &lt;paramref name=&quot;len&quot; /&gt; =0.">0 &gt; <paramref name="start" />  
  
- ou - 
 <paramref name="start" /> &gt;= <paramref name="key" />.Length 
- ou - 
 <paramref name="len" /> &gt;= <paramref name="key" />.Length 
Les conditions ci-dessus n'entraînent pas la levée d'une exception si <paramref name="len" />=0.</exception>
      <exception cref="T:System.ArgumentOutOfRangeException" vsli:raw="&lt;paramref name=&quot;len&quot; /&gt; &amp;lt; 0.">
        <paramref name="len" /> &lt; 0.</exception>
      <returns vsli:raw="The atomized string or &lt;see langword=&quot;null&quot; /&gt; if the string has not already been atomized. If &lt;paramref name=&quot;len&quot; /&gt; is zero, String.Empty is returned.">Chaîne atomisée ou <see langword="null" /> si la chaîne n'a pas encore été atomisée. Si <paramref name="len" /> a la valeur zéro, String.Empty est retourné.</returns>
    </member>
    <member name="M:System.Xml.NameTable.Get(System.String)">
      <summary vsli:raw="Gets the atomized string with the specified value.">Obtient la chaîne atomisée de valeur spécifiée.</summary>
      <param name="value" vsli:raw="The name to find.">Nom à rechercher.</param>
      <exception cref="T:System.ArgumentNullException" vsli:raw="&lt;paramref name=&quot;value&quot; /&gt; is &lt;see langword=&quot;null&quot; /&gt;.">
        <paramref name="value" /> a la valeur <see langword="null" />.</exception>
      <returns vsli:raw="The atomized string object or &lt;see langword=&quot;null&quot; /&gt; if the string has not already been atomized.">L'objet de chaîne atomisée ou <see langword="null" /> si la chaîne n'a pas encore été atomisée.</returns>
    </member>
    <member name="T:System.Xml.NewLineHandling">
      <summary vsli:raw="Specifies how to handle line breaks.">Spécifie comment gérer les sauts de ligne.</summary>
    </member>
    <member name="F:System.Xml.NewLineHandling.Entitize">
      <summary vsli:raw="New line characters are entitized. This setting preserves all characters when the output is read by a normalizing &lt;see cref=&quot;T:System.Xml.XmlReader&quot; /&gt;.">Les caractères de nouvelle ligne sont définis comme "entitize". Ce paramètre conserve tous les caractères lorsque la sortie est lue par un <see cref="T:System.Xml.XmlReader" /> normalisant.</summary>
    </member>
    <member name="F:System.Xml.NewLineHandling.None">
      <summary vsli:raw="The new line characters are unchanged. The output is the same as the input.">Les caractères de nouvelle ligne restent inchangés. La sortie est identique à l'entrée.</summary>
    </member>
    <member name="F:System.Xml.NewLineHandling.Replace">
      <summary vsli:raw="New line characters are replaced to match the character specified in the &lt;see cref=&quot;P:System.Xml.XmlWriterSettings.NewLineChars&quot; /&gt; property.">Les caractères de nouvelle ligne sont remplacés pour correspondre au caractère spécifié dans la propriété <see cref="P:System.Xml.XmlWriterSettings.NewLineChars" />.</summary>
    </member>
    <member name="T:System.Xml.ReadState">
      <summary vsli:raw="Specifies the state of the reader.">Spécifie l'état du lecteur.</summary>
    </member>
    <member name="F:System.Xml.ReadState.Closed">
      <summary vsli:raw="The &lt;see cref=&quot;M:System.Xml.XmlReader.Close&quot; /&gt; method has been called.">La méthode <see cref="M:System.Xml.XmlReader.Close" /> a été appelée.</summary>
    </member>
    <member name="F:System.Xml.ReadState.EndOfFile">
      <summary vsli:raw="The end of the file has been reached successfully.">La fin du fichier a été atteinte avec succès.</summary>
    </member>
    <member name="F:System.Xml.ReadState.Error">
      <summary vsli:raw="An error occurred that prevents the read operation from continuing.">Une erreur s'est produite et empêche l'opération de lecture de se poursuivre.</summary>
    </member>
    <member name="F:System.Xml.ReadState.Initial">
      <summary vsli:raw="The &lt;see langword=&quot;Read&quot; /&gt; method has not been called.">La méthode <see langword="Read" /> n'a pas été appelée.</summary>
    </member>
    <member name="F:System.Xml.ReadState.Interactive">
      <summary vsli:raw="The &lt;see langword=&quot;Read&quot; /&gt; method has been called. Additional methods may be called on the reader.">La méthode <see langword="Read" /> a été appelée. Des méthodes supplémentaires peuvent être appelées sur le lecteur.</summary>
    </member>
    <member name="T:System.Xml.Resolvers.XmlKnownDtds">
      <summary vsli:raw="The &lt;see cref=&quot;T:System.Xml.Resolvers.XmlKnownDtds&quot; /&gt; enumeration is used by the &lt;see cref=&quot;T:System.Xml.Resolvers.XmlPreloadedResolver&quot; /&gt; and defines which well-known DTDs that the &lt;see cref=&quot;T:System.Xml.Resolvers.XmlPreloadedResolver&quot; /&gt; recognizes.">L'énumération <see cref="T:System.Xml.Resolvers.XmlKnownDtds" /> est utilisée par le <see cref="T:System.Xml.Resolvers.XmlPreloadedResolver" /> et définit les DTD courantes que le <see cref="T:System.Xml.Resolvers.XmlPreloadedResolver" /> reconnaît.</summary>
    </member>
    <member name="F:System.Xml.Resolvers.XmlKnownDtds.All">
      <summary vsli:raw="Specifies that the &lt;see cref=&quot;T:System.Xml.Resolvers.XmlPreloadedResolver&quot; /&gt; will recognize all currently supported DTDs. This is the default behavior.">Spécifie que le <see cref="T:System.Xml.Resolvers.XmlPreloadedResolver" /> reconnaîtra toutes les DTD actuellement prises en charge. Il s'agit du comportement par défaut.</summary>
    </member>
    <member name="F:System.Xml.Resolvers.XmlKnownDtds.None">
      <summary vsli:raw="Specifies that the &lt;see cref=&quot;T:System.Xml.Resolvers.XmlPreloadedResolver&quot; /&gt; will not recognize any of the predefined DTDs.">Spécifie que le <see cref="T:System.Xml.Resolvers.XmlPreloadedResolver" /> ne reconnaîtra aucune des DTD prédéfinies.</summary>
    </member>
    <member name="F:System.Xml.Resolvers.XmlKnownDtds.Rss091">
      <summary vsli:raw="Specifies that the &lt;see cref=&quot;T:System.Xml.Resolvers.XmlPreloadedResolver&quot; /&gt; will recognize DTDs and entities that are defined in RSS 0.91.">Spécifie que le <see cref="T:System.Xml.Resolvers.XmlPreloadedResolver" /> reconnaîtra les DTD et les entités définies dans RSS 0.91.</summary>
    </member>
    <member name="F:System.Xml.Resolvers.XmlKnownDtds.Xhtml10">
      <summary vsli:raw="Specifies that the &lt;see cref=&quot;T:System.Xml.Resolvers.XmlPreloadedResolver&quot; /&gt; will recognize DTDs and entities that are defined in XHTML 1.0.">Spécifie que le <see cref="T:System.Xml.Resolvers.XmlPreloadedResolver" /> reconnaîtra les DTD et les entités définies dans XHTML 1.0.</summary>
    </member>
    <member name="T:System.Xml.Resolvers.XmlPreloadedResolver">
      <summary vsli:raw="Represents a class that is used to prepopulate the cache with DTDs or XML streams.">Représente une classe utilisée pour préremplir le cache avec des flux DTD ou XML.</summary>
    </member>
    <member name="M:System.Xml.Resolvers.XmlPreloadedResolver.#ctor">
      <summary vsli:raw="Initializes a new instance of the &lt;see cref=&quot;T:System.Xml.Resolvers.XmlPreloadedResolver&quot; /&gt; class.">Initialise une nouvelle instance de la classe <see cref="T:System.Xml.Resolvers.XmlPreloadedResolver" />.</summary>
    </member>
    <member name="M:System.Xml.Resolvers.XmlPreloadedResolver.#ctor(System.Xml.Resolvers.XmlKnownDtds)">
      <summary vsli:raw="Initializes a new instance of the &lt;see cref=&quot;T:System.Xml.Resolvers.XmlPreloadedResolver&quot; /&gt; class with the specified preloaded well-known DTDs.">Initialise une nouvelle instance de la classe <see cref="T:System.Xml.Resolvers.XmlPreloadedResolver" /> avec les DTD connues préchargées spécifiées.</summary>
      <param name="preloadedDtds" vsli:raw="The well-known DTDs that should be prepopulated into the cache.">DTD connues qui doivent être préremplies dans le cache.</param>
    </member>
    <member name="M:System.Xml.Resolvers.XmlPreloadedResolver.#ctor(System.Xml.XmlResolver)">
      <summary vsli:raw="Initializes a new instance of the &lt;see cref=&quot;T:System.Xml.Resolvers.XmlPreloadedResolver&quot; /&gt; class with the specified fallback resolver.">Initialise une nouvelle instance de la classe <see cref="T:System.Xml.Resolvers.XmlPreloadedResolver" /> avec le programme de résolution de secours spécifié.</summary>
      <param name="fallbackResolver" vsli:raw="The &lt;see langword=&quot;XmlResolver&quot; /&gt;, &lt;see langword=&quot;XmlXapResolver&quot; /&gt;, or your own resolver.">
        <see langword="XmlResolver" />, <see langword="XmlXapResolver" />, ou votre propre programme de résolution.</param>
    </member>
    <member name="M:System.Xml.Resolvers.XmlPreloadedResolver.#ctor(System.Xml.XmlResolver,System.Xml.Resolvers.XmlKnownDtds)">
      <summary vsli:raw="Initializes a new instance of the &lt;see cref=&quot;T:System.Xml.Resolvers.XmlPreloadedResolver&quot; /&gt; class with the specified fallback resolver and preloaded well-known DTDs.">Initialise une nouvelle instance de la classe <see cref="T:System.Xml.Resolvers.XmlPreloadedResolver" /> avec le programme de résolution de secours et les DTD connues préchargées spécifiés.</summary>
      <param name="fallbackResolver" vsli:raw="The &lt;see langword=&quot;XmlResolver&quot; /&gt;, &lt;see langword=&quot;XmlXapResolver&quot; /&gt;, or your own resolver.">
        <see langword="XmlResolver" />, <see langword="XmlXapResolver" />, ou votre propre programme de résolution.</param>
      <param name="preloadedDtds" vsli:raw="The well-known DTDs that should be prepopulated into the cache.">DTD connues qui doivent être préremplies dans le cache.</param>
    </member>
    <member name="M:System.Xml.Resolvers.XmlPreloadedResolver.#ctor(System.Xml.XmlResolver,System.Xml.Resolvers.XmlKnownDtds,System.Collections.Generic.IEqualityComparer{System.Uri})">
      <summary vsli:raw="Initializes a new instance of the &lt;see cref=&quot;T:System.Xml.Resolvers.XmlPreloadedResolver&quot; /&gt; class with the specified fallback resolver, preloaded well-known DTDs, and URI equality comparer.">Initialise une nouvelle instance de la classe <see cref="T:System.Xml.Resolvers.XmlPreloadedResolver" /> avec le programme de résolution de secours, les DTD connues préchargées et le comparateur d'égalité d'URI spécifiés.</summary>
      <param name="fallbackResolver" vsli:raw="The &lt;see langword=&quot;XmlResolver&quot; /&gt;, &lt;see langword=&quot;XmlXapResolver&quot; /&gt;, or your own resolver.">
        <see langword="XmlResolver" />, <see langword="XmlXapResolver" />, ou votre propre programme de résolution.</param>
      <param name="preloadedDtds" vsli:raw="The well-known DTDs that should be prepopulated into cache.">DTD connues qui doivent être préremplies dans le cache.</param>
      <param name="uriComparer" vsli:raw="The implementation of the &lt;see cref=&quot;T:System.Collections.Generic.IEqualityComparer`1&quot; /&gt; generic interface to use when you compare URIs.">Implémentation de l'interface générique du <see cref="T:System.Collections.Generic.IEqualityComparer`1" /> à utiliser lors de la comparaison d'URI.</param>
    </member>
    <member name="M:System.Xml.Resolvers.XmlPreloadedResolver.Add(System.Uri,System.Byte[])">
      <summary vsli:raw="Adds a byte array to the &lt;see cref=&quot;T:System.Xml.Resolvers.XmlPreloadedResolver&quot; /&gt; store and maps it to a URI. If the store already contains a mapping for the same URI, the existing mapping is overridden.">Ajoute un tableau d'octets au magasin de <see cref="T:System.Xml.Resolvers.XmlPreloadedResolver" /> et le mappe à un URI. Si le magasin contient déjà un mappage pour le même URI, le mappage existant est remplacé.</summary>
      <param name="uri" vsli:raw="The URI of the data that is being added to the &lt;see cref=&quot;T:System.Xml.Resolvers.XmlPreloadedResolver&quot; /&gt; store.">URI des données ajoutées au magasin <see cref="T:System.Xml.Resolvers.XmlPreloadedResolver" />.</param>
      <param name="value" vsli:raw="A byte array with the data that corresponds to the provided URI.">Tableau d'octets avec les données qui correspondent à l'URI fourni.</param>
      <exception cref="T:System.ArgumentNullException" vsli:raw="&lt;paramref name=&quot;uri&quot; /&gt; or &lt;paramref name=&quot;value&quot; /&gt; is &lt;see langword=&quot;null&quot; /&gt;.">
        <paramref name="uri" /> ou <paramref name="value" /> est <see langword="null" />.</exception>
    </member>
    <member name="M:System.Xml.Resolvers.XmlPreloadedResolver.Add(System.Uri,System.Byte[],System.Int32,System.Int32)">
      <summary vsli:raw="Adds a byte array to the &lt;see cref=&quot;T:System.Xml.Resolvers.XmlPreloadedResolver&quot; /&gt; store and maps it to a URI. If the store already contains a mapping for the same URI, the existing mapping is overridden.">Ajoute un tableau d'octets au magasin de <see cref="T:System.Xml.Resolvers.XmlPreloadedResolver" /> et le mappe à un URI. Si le magasin contient déjà un mappage pour le même URI, le mappage existant est remplacé.</summary>
      <param name="uri" vsli:raw="The URI of the data that is being added to the &lt;see cref=&quot;T:System.Xml.Resolvers.XmlPreloadedResolver&quot; /&gt; store.">URI des données ajoutées au magasin <see cref="T:System.Xml.Resolvers.XmlPreloadedResolver" />.</param>
      <param name="value" vsli:raw="A byte array with the data that corresponds to the provided URI.">Tableau d'octets avec les données qui correspondent à l'URI fourni.</param>
      <param name="offset" vsli:raw="The offset in the provided byte array where the data starts.">Offset du tableau d'octets fourni où les données démarrent.</param>
      <param name="count" vsli:raw="The number of bytes to read from the byte array, starting at the provided offset.">Nombre d'octets lus à partir du tableau d'octets, en commençant au décalage fourni.</param>
      <exception cref="T:System.ArgumentNullException" vsli:raw="&lt;paramref name=&quot;uri&quot; /&gt; or &lt;paramref name=&quot;value&quot; /&gt; is &lt;see langword=&quot;null&quot; /&gt;.">
        <paramref name="uri" /> ou <paramref name="value" /> est <see langword="null" />.</exception>
      <exception cref="T:System.ArgumentOutOfRangeException" vsli:raw="&lt;paramref name=&quot;offset&quot; /&gt; or &lt;paramref name=&quot;count&quot; /&gt; is less than 0.  &#xA;  &#xA; -or-  &#xA;  &#xA; The length of the &lt;paramref name=&quot;value&quot; /&gt; minus &lt;paramref name=&quot;offset&quot; /&gt; is less than &lt;paramref name=&quot;count&quot; /&gt;.">
        <paramref name="offset" /> ou <paramref name="count" /> est inférieur à 0.  
  
-ou- 
La longueur de <paramref name="value" /> moins <paramref name="offset" /> est inférieure à <paramref name="count" />.</exception>
    </member>
    <member name="M:System.Xml.Resolvers.XmlPreloadedResolver.Add(System.Uri,System.IO.Stream)">
      <summary vsli:raw="Adds a &lt;see cref=&quot;T:System.IO.Stream&quot; /&gt; to the &lt;see cref=&quot;T:System.Xml.Resolvers.XmlPreloadedResolver&quot; /&gt; store and maps it to a URI. If the store already contains a mapping for the same URI, the existing mapping is overridden.">Ajoute un <see cref="T:System.IO.Stream" /> au magasin de <see cref="T:System.Xml.Resolvers.XmlPreloadedResolver" /> et le mappe à un URI. Si le magasin contient déjà un mappage pour le même URI, le mappage existant est remplacé.</summary>
      <param name="uri" vsli:raw="The URI of the data that is being added to the &lt;see cref=&quot;T:System.Xml.Resolvers.XmlPreloadedResolver&quot; /&gt; store.">URI des données ajoutées au magasin <see cref="T:System.Xml.Resolvers.XmlPreloadedResolver" />.</param>
      <param name="value" vsli:raw="A &lt;see cref=&quot;T:System.IO.Stream&quot; /&gt; with the data that corresponds to the provided URI.">
        <see cref="T:System.IO.Stream" /> avec les données qui correspondent à l'URI fourni.</param>
      <exception cref="T:System.ArgumentNullException" vsli:raw="&lt;paramref name=&quot;uri&quot; /&gt; or &lt;paramref name=&quot;value&quot; /&gt; is &lt;see langword=&quot;null&quot; /&gt;.">
        <paramref name="uri" /> ou <paramref name="value" /> est <see langword="null" />.</exception>
    </member>
    <member name="M:System.Xml.Resolvers.XmlPreloadedResolver.Add(System.Uri,System.String)">
      <summary vsli:raw="Adds a string with preloaded data to the &lt;see cref=&quot;T:System.Xml.Resolvers.XmlPreloadedResolver&quot; /&gt; store and maps it to a URI. If the store already contains a mapping for the same URI, the existing mapping is overridden.">Ajoute une chaîne avec des données préchargées au magasin <see cref="T:System.Xml.Resolvers.XmlPreloadedResolver" /> et la mappe à une URL. Si le magasin contient déjà un mappage pour le même URI, le mappage existant est remplacé.</summary>
      <param name="uri" vsli:raw="The URI of the data that is being added to the &lt;see cref=&quot;T:System.Xml.Resolvers.XmlPreloadedResolver&quot; /&gt; store.">URI des données ajoutées au magasin <see cref="T:System.Xml.Resolvers.XmlPreloadedResolver" />.</param>
      <param name="value" vsli:raw="A &lt;see langword=&quot;String&quot; /&gt; with the data that corresponds to the provided URI.">
        <see langword="String" /> avec les données qui correspondent à l'URI fourni.</param>
      <exception cref="T:System.ArgumentNullException" vsli:raw="&lt;paramref name=&quot;uri&quot; /&gt; or &lt;paramref name=&quot;value&quot; /&gt; is &lt;see langword=&quot;null&quot; /&gt;.">
        <paramref name="uri" /> ou <paramref name="value" /> est <see langword="null" />.</exception>
    </member>
    <member name="M:System.Xml.Resolvers.XmlPreloadedResolver.GetEntity(System.Uri,System.String,System.Type)">
      <summary vsli:raw="Maps a URI to an object that contains the actual resource.">Mappe un URI vers un objet contenant la ressource réelle.</summary>
      <param name="absoluteUri" vsli:raw="The URI returned from &lt;see cref=&quot;M:System.Xml.XmlResolver.ResolveUri(System.Uri,System.String)&quot; /&gt;.">URI retourné par <see cref="M:System.Xml.XmlResolver.ResolveUri(System.Uri,System.String)" />.</param>
      <param name="role" vsli:raw="The current version of the .NET Framework for Silverlight does not use this parameter when resolving URIs. This parameter is provided for future extensibility purposes. For example, this parameter can be mapped to the xlink:role and used as an implementation-specific argument in other scenarios.">La version actuelle du .NET Framework pour Silverlight n'utilise pas ce paramètre lors de la résolution des URI. Ce paramètre est fourni pour des extensibilités futures. Par exemple, ce paramètre peut être mappé vers xlink:role et utilisé comme argument spécifique d'implémentation dans d'autres scénarios.</param>
      <param name="ofObjectToReturn" vsli:raw="The type of object to return. The &lt;see cref=&quot;T:System.Xml.Resolvers.XmlPreloadedResolver&quot; /&gt; supports &lt;see cref=&quot;T:System.IO.Stream&quot; /&gt; objects and &lt;see cref=&quot;T:System.IO.TextReader&quot; /&gt; objects for URIs that were added as &lt;see langword=&quot;String&quot; /&gt;. If the requested type is not supported by the resolver, an exception will be thrown. Use the &lt;see cref=&quot;M:System.Xml.Resolvers.XmlPreloadedResolver.SupportsType(System.Uri,System.Type)&quot; /&gt; method to determine whether a certain &lt;see langword=&quot;Type&quot; /&gt; is supported by this resolver.">Type d'objet à retourner. <see cref="T:System.Xml.Resolvers.XmlPreloadedResolver" /> prend en charge les objets <see cref="T:System.IO.Stream" /> et les objets <see cref="T:System.IO.TextReader" /> pour les URI ajoutés en tant que <see langword="String" />. Si le type demandé n'est pas pris en charge par le programme de résolution, une exception est levée. Utilisez la méthode <see cref="M:System.Xml.Resolvers.XmlPreloadedResolver.SupportsType(System.Uri,System.Type)" /> pour déterminer si un certain <see langword="Type" /> est pris en charge par ce programme de résolution.</param>
      <exception cref="T:System.ArgumentNullException" vsli:raw="&lt;paramref name=&quot;absoluteUri&quot; /&gt; is &lt;see langword=&quot;null&quot; /&gt;.">
        <paramref name="absoluteUri" /> a la valeur <see langword="null" />.</exception>
      <exception cref="T:System.Xml.XmlException" vsli:raw="Cannot resolve URI passed in &lt;paramref name=&quot;absoluteUri&quot; /&gt;.  &#xA;  &#xA; -or-  &#xA;  &#xA; &lt;paramref name=&quot;ofObjectToReturn&quot; /&gt; is not of a supported type.">Impossible de résoudre l'URI passé dans <paramref name="absoluteUri" />.  
  
-ou- 
 Le type de <paramref name="ofObjectToReturn" /> n'est pas un type pris en charge.</exception>
      <returns vsli:raw="A &lt;see cref=&quot;T:System.IO.Stream&quot; /&gt; or &lt;see cref=&quot;T:System.IO.TextReader&quot; /&gt; object that corresponds to the actual source.">Objet de <see cref="T:System.IO.Stream" /> ou de <see cref="T:System.IO.TextReader" /> qui correspond à la source réelle.</returns>
    </member>
    <member name="M:System.Xml.Resolvers.XmlPreloadedResolver.GetEntityAsync(System.Uri,System.String,System.Type)">
      <summary vsli:raw="Asynchronously maps a URI to an object that contains the actual resource.">Mappe de façon asynchrone un URI vers un objet contenant la ressource réelle.</summary>
      <param name="absoluteUri" vsli:raw="The URI returned from &lt;see cref=&quot;M:System.Xml.XmlResolver.ResolveUri(System.Uri,System.String)&quot; /&gt;.">URI retourné par <see cref="M:System.Xml.XmlResolver.ResolveUri(System.Uri,System.String)" />.</param>
      <param name="role" vsli:raw="The current version of the .NET Framework for Silverlight does not use this parameter when resolving URIs. This parameter is provided for future extensibility purposes. For example, this parameter can be mapped to the xlink:role and used as an implementation-specific argument in other scenarios.">La version actuelle du .NET Framework pour Silverlight n'utilise pas ce paramètre lors de la résolution des URI. Ce paramètre est fourni pour des extensibilités futures. Par exemple, ce paramètre peut être mappé vers xlink:role et utilisé comme argument spécifique d'implémentation dans d'autres scénarios.</param>
      <param name="ofObjectToReturn" vsli:raw="The type of object to return. The &lt;see cref=&quot;T:System.Xml.Resolvers.XmlPreloadedResolver&quot; /&gt; supports &lt;see cref=&quot;T:System.IO.Stream&quot; /&gt; objects and &lt;see cref=&quot;T:System.IO.TextReader&quot; /&gt; objects for URIs that were added as &lt;see langword=&quot;String&quot; /&gt;. If the requested type is not supported by the resolver, an exception will be thrown. Use the &lt;see cref=&quot;M:System.Xml.Resolvers.XmlPreloadedResolver.SupportsType(System.Uri,System.Type)&quot; /&gt; method to determine whether a certain &lt;see langword=&quot;Type&quot; /&gt; is supported by this resolver.">Type d'objet à retourner. <see cref="T:System.Xml.Resolvers.XmlPreloadedResolver" /> prend en charge les objets <see cref="T:System.IO.Stream" /> et les objets <see cref="T:System.IO.TextReader" /> pour les URI ajoutés en tant que <see langword="String" />. Si le type demandé n'est pas pris en charge par le programme de résolution, une exception est levée. Utilisez la méthode <see cref="M:System.Xml.Resolvers.XmlPreloadedResolver.SupportsType(System.Uri,System.Type)" /> pour déterminer si un certain <see langword="Type" /> est pris en charge par ce programme de résolution.</param>
      <returns vsli:raw="A &lt;see cref=&quot;T:System.IO.Stream&quot; /&gt; or &lt;see cref=&quot;T:System.IO.TextReader&quot; /&gt; object that corresponds to the actual source.">Objet de <see cref="T:System.IO.Stream" /> ou de <see cref="T:System.IO.TextReader" /> qui correspond à la source réelle.</returns>
    </member>
    <member name="M:System.Xml.Resolvers.XmlPreloadedResolver.Remove(System.Uri)">
      <summary vsli:raw="Removes the data that corresponds to the URI from the &lt;see cref=&quot;T:System.Xml.Resolvers.XmlPreloadedResolver&quot; /&gt;.">Supprime les données qui correspondent à l'URI du <see cref="T:System.Xml.Resolvers.XmlPreloadedResolver" />.</summary>
      <param name="uri" vsli:raw="The URI of the data that should be removed from the &lt;see cref=&quot;T:System.Xml.Resolvers.XmlPreloadedResolver&quot; /&gt; store.">URI des données à supprimer du magasin <see cref="T:System.Xml.Resolvers.XmlPreloadedResolver" />.</param>
      <exception cref="T:System.ArgumentNullException" vsli:raw="&lt;paramref name=&quot;uri&quot; /&gt; is &lt;see langword=&quot;null&quot; /&gt;.">
        <paramref name="uri" /> a la valeur <see langword="null" />.</exception>
    </member>
    <member name="M:System.Xml.Resolvers.XmlPreloadedResolver.ResolveUri(System.Uri,System.String)">
      <summary vsli:raw="Resolves the absolute URI from the base and relative URIs.">Résout l'URI absolu à partir des URI de base et relatifs.</summary>
      <param name="baseUri" vsli:raw="The base URI used to resolve the relative URI.">URI de base utilisé pour résoudre l'URI relatif.</param>
      <param name="relativeUri" vsli:raw="The URI to resolve. The URI can be absolute or relative. If absolute, this value effectively replaces the &lt;paramref name=&quot;baseUri&quot; /&gt; value. If relative, it combines with the &lt;paramref name=&quot;baseUri&quot; /&gt; to make an absolute URI.">URI à résoudre. L'URI peut être absolu ou relatif. S'il est absolu, cette valeur remplace effectivement la valeur de <paramref name="baseUri" />. S'il est relatif, il se combine à <paramref name="baseUri" /> pour produire un URI absolu.</param>
      <exception cref="T:System.ArgumentNullException" vsli:raw="&lt;paramref name=&quot;uri&quot; /&gt; is &lt;see langword=&quot;null&quot; /&gt;.">
        <paramref name="uri" /> a la valeur <see langword="null" />.</exception>
      <returns vsli:raw="The &lt;see cref=&quot;T:System.Uri&quot; /&gt; representing the absolute URI or &lt;see langword=&quot;null&quot; /&gt; if the relative URI cannot be resolved.">
        <see cref="T:System.Uri" /> représentent l'URI absolu ou <see langword="null" /> si l'URI relatif ne peut pas être résolu.</returns>
    </member>
    <member name="M:System.Xml.Resolvers.XmlPreloadedResolver.SupportsType(System.Uri,System.Type)">
      <summary vsli:raw="Determines whether the resolver supports other &lt;see cref=&quot;T:System.Type&quot; /&gt;s than just &lt;see cref=&quot;T:System.IO.Stream&quot; /&gt;.">Détermine si le programme de résolution prend en charge les autres <see cref="T:System.Type" />s au lieu de <see cref="T:System.IO.Stream" /> seulement.</summary>
      <param name="absoluteUri" vsli:raw="The absolute URI to check.">URI absolue à vérifier.</param>
      <param name="type" vsli:raw="The &lt;see cref=&quot;T:System.Type&quot; /&gt; to return.">
        <see cref="T:System.Type" /> à retourner.</param>
      <exception cref="T:System.ArgumentNullException" vsli:raw="&lt;paramref name=&quot;uri&quot; /&gt; is &lt;see langword=&quot;null&quot; /&gt;.">
        <paramref name="uri" /> a la valeur <see langword="null" />.</exception>
      <returns vsli:raw="&lt;see langword=&quot;true&quot; /&gt; if the &lt;see cref=&quot;T:System.Type&quot; /&gt; is supported; otherwise, &lt;see langword=&quot;false&quot; /&gt;.">
        <see langword="true" /> si le <see cref="T:System.Type" /> est pris en charge ; sinon <see langword="false" />.</returns>
    </member>
    <member name="P:System.Xml.Resolvers.XmlPreloadedResolver.Credentials">
      <summary vsli:raw="Sets the credentials that are used to authenticate the underlying &lt;see cref=&quot;T:System.Net.WebRequest&quot; /&gt;.">Définit les informations d'identification utilisées pour authentifier <see cref="T:System.Net.WebRequest" /> sous-jacent.</summary>
      <returns vsli:raw="The credentials that are used to authenticate the underlying web request.">Informations d'identification utilisées pour authentifier la requête Web sous-jacente.</returns>
    </member>
    <member name="P:System.Xml.Resolvers.XmlPreloadedResolver.PreloadedUris">
      <summary vsli:raw="Gets a collection of preloaded URIs.">Obtient une collection d'URI préchargés.</summary>
      <returns vsli:raw="The collection of preloaded URIs.">Collection d'URI préchargés.</returns>
    </member>
    <member name="T:System.Xml.Schema.IXmlSchemaInfo">
      <summary vsli:raw="Defines the post-schema-validation infoset of a validated XML node.">Définit le jeu d'informations postérieures à la validation du schéma d'un nœud XML validé.</summary>
    </member>
    <member name="P:System.Xml.Schema.IXmlSchemaInfo.IsDefault">
      <summary vsli:raw="Gets a value indicating if this validated XML node was set as the result of a default being applied during XML Schema Definition Language (XSD) schema validation.">Obtient une valeur indiquant si ce nœud XML validé a été défini comme le résultat d'une valeur par défaut appliquée pendant la validation du schéma en langage XSD (XML Schema Definition).</summary>
      <returns vsli:raw="&lt;see langword=&quot;true&quot; /&gt; if this validated XML node was set as the result of a default being applied during schema validation; otherwise, &lt;see langword=&quot;false&quot; /&gt;.">
        <see langword="true" /> si ce nœud XML était défini comme le résultat d'une valeur par défaut appliquée pendant la validation du schéma ; sinon, <see langword="false" />.</returns>
    </member>
    <member name="P:System.Xml.Schema.IXmlSchemaInfo.IsNil">
      <summary vsli:raw="Gets a value indicating if the value for this validated XML node is nil.">Obtient une valeur indiquant si la valeur de ce nœud XML est Nil.</summary>
      <returns vsli:raw="&lt;see langword=&quot;true&quot; /&gt; if the value for this validated XML node is nil; otherwise, &lt;see langword=&quot;false&quot; /&gt;.">
        <see langword="true" /> si la valeur de ce nœud XML validé est nil ; sinon, <see langword="false" />.</returns>
    </member>
    <member name="P:System.Xml.Schema.IXmlSchemaInfo.MemberType">
      <summary vsli:raw="Gets the dynamic schema type for this validated XML node.">Obtient le type de schéma dynamique pour ce nœud XML validé.</summary>
      <returns vsli:raw="An &lt;see cref=&quot;T:System.Xml.Schema.XmlSchemaSimpleType&quot; /&gt; object that represents the dynamic schema type for this validated XML node.">Un objet <see cref="T:System.Xml.Schema.XmlSchemaSimpleType" /> qui représente le type de schéma dynamique pour ce nœud XML validé.</returns>
    </member>
    <member name="P:System.Xml.Schema.IXmlSchemaInfo.SchemaAttribute">
      <summary vsli:raw="Gets the compiled &lt;see cref=&quot;T:System.Xml.Schema.XmlSchemaAttribute&quot; /&gt; that corresponds to this validated XML node.">Obtient le <see cref="T:System.Xml.Schema.XmlSchemaAttribute" /> compilé qui correspond à ce nœud XML validé.</summary>
      <returns vsli:raw="An &lt;see cref=&quot;T:System.Xml.Schema.XmlSchemaAttribute&quot; /&gt; that corresponds to this validated XML node.">
        <see cref="T:System.Xml.Schema.XmlSchemaAttribute" /> qui correspond à ce nœud XML validé.</returns>
    </member>
    <member name="P:System.Xml.Schema.IXmlSchemaInfo.SchemaElement">
      <summary vsli:raw="Gets the compiled &lt;see cref=&quot;T:System.Xml.Schema.XmlSchemaElement&quot; /&gt; that corresponds to this validated XML node.">Obtient le <see cref="T:System.Xml.Schema.XmlSchemaElement" /> compilé qui correspond à ce nœud XML validé.</summary>
      <returns vsli:raw="An &lt;see cref=&quot;T:System.Xml.Schema.XmlSchemaElement&quot; /&gt; that corresponds to this validated XML node.">
        <see cref="T:System.Xml.Schema.XmlSchemaElement" /> qui correspond à ce nœud XML validé.</returns>
    </member>
    <member name="P:System.Xml.Schema.IXmlSchemaInfo.SchemaType">
      <summary vsli:raw="Gets the static XML Schema Definition Language (XSD) schema type of this validated XML node.">Obtient le type de schéma en langage XSD (XML Schema Definition) statique de ce nœud XML validé.</summary>
      <returns vsli:raw="An &lt;see cref=&quot;T:System.Xml.Schema.XmlSchemaType&quot; /&gt; of this validated XML node.">
        <see cref="T:System.Xml.Schema.XmlSchemaType" /> de ce nœud XML validé.</returns>
    </member>
    <member name="P:System.Xml.Schema.IXmlSchemaInfo.Validity">
      <summary vsli:raw="Gets the &lt;see cref=&quot;T:System.Xml.Schema.XmlSchemaValidity&quot; /&gt; value of this validated XML node.">Obtient la valeur <see cref="T:System.Xml.Schema.XmlSchemaValidity" /> de ce nœud XML validé.</summary>
      <returns vsli:raw="An &lt;see cref=&quot;T:System.Xml.Schema.XmlSchemaValidity&quot; /&gt; value of this validated XML node.">Valeur <see cref="T:System.Xml.Schema.XmlSchemaValidity" /> de ce nœud XML validé.</returns>
    </member>
    <member name="T:System.Xml.Schema.ValidationEventArgs">
      <summary vsli:raw="Returns detailed information related to the &lt;see langword=&quot;ValidationEventHandler&quot; /&gt;.">Retourne des informations détaillées liées à <see langword="ValidationEventHandler" /> .</summary>
    </member>
    <member name="P:System.Xml.Schema.ValidationEventArgs.Exception">
      <summary vsli:raw="Gets the &lt;see cref=&quot;T:System.Xml.Schema.XmlSchemaException&quot; /&gt; associated with the validation event.">Obtient l'interface <see cref="T:System.Xml.Schema.XmlSchemaException" /> associée à l'événement de validation.</summary>
      <returns vsli:raw="The &lt;see langword=&quot;XmlSchemaException&quot; /&gt; associated with the validation event.">
        <see langword="XmlSchemaException" /> associé à l'événement de validation.</returns>
    </member>
    <member name="P:System.Xml.Schema.ValidationEventArgs.Message">
      <summary vsli:raw="Gets the text description corresponding to the validation event.">Obtient la description du texte correspondant à l'événement de validation.</summary>
      <returns vsli:raw="The text description.">Description du texte.</returns>
    </member>
    <member name="P:System.Xml.Schema.ValidationEventArgs.Severity">
      <summary vsli:raw="Gets the severity of the validation event.">Obtient la sévérité de l'événement de validation.</summary>
      <returns vsli:raw="An &lt;see cref=&quot;T:System.Xml.Schema.XmlSeverityType&quot; /&gt; value representing the severity of the validation event.">Valeur <see cref="T:System.Xml.Schema.XmlSeverityType" /> représentant la sévérité de l'événement de validation.</returns>
    </member>
    <member name="T:System.Xml.Schema.ValidationEventHandler">
      <summary vsli:raw="Represents the callback method that will handle XML schema validation events and the &lt;see cref=&quot;T:System.Xml.Schema.ValidationEventArgs&quot; /&gt;.">Représente la méthode de rappel qui gérera les événements de validation de schémas XML et <see cref="T:System.Xml.Schema.ValidationEventArgs" />.</summary>
      <param name="sender" vsli:raw="The source of the event.  &#xA;  &#xA; Note Determine the type of a sender before using it in your code. You cannot assume that the sender is an instance of a particular type. The sender is also not guaranteed to not  be null. Always surround your casts with failure handling logic.">Source de l'événement.  
  
 Remarque Déterminez le type d’un expéditeur avant de l’utiliser dans votre code. Vous ne pouvez pas supposer que l'émetteur est une instance d'un type particulier. Il n’est pas garanti que l’expéditeur ne soit pas null. Associez toujours vos casts à une logique de gestion des erreurs.</param>
      <param name="e" vsli:raw="The event data.">Données d'événement.</param>
    </member>
    <member name="T:System.Xml.Schema.XmlAtomicValue">
      <summary vsli:raw="Represents the typed value of a validated XML element or attribute. The &lt;see cref=&quot;T:System.Xml.Schema.XmlAtomicValue&quot; /&gt; class cannot be inherited.">Représente la valeur typée d'un élément XML ou d'un attribut validé. La classe <see cref="T:System.Xml.Schema.XmlAtomicValue" /> ne peut pas être héritée.</summary>
    </member>
    <member name="M:System.Xml.Schema.XmlAtomicValue.Clone">
      <summary vsli:raw="Returns a copy of this &lt;see cref=&quot;T:System.Xml.Schema.XmlAtomicValue&quot; /&gt; object.">Retourne une copie de cet objet <see cref="T:System.Xml.Schema.XmlAtomicValue" />.</summary>
      <returns vsli:raw="An &lt;see cref=&quot;T:System.Xml.Schema.XmlAtomicValue&quot; /&gt; object copy of this &lt;see cref=&quot;T:System.Xml.Schema.XmlAtomicValue&quot; /&gt; object.">Copie de l'objet <see cref="T:System.Xml.Schema.XmlAtomicValue" /> de cet objet <see cref="T:System.Xml.Schema.XmlAtomicValue" />.</returns>
    </member>
    <member name="M:System.Xml.Schema.XmlAtomicValue.System#ICloneable#Clone">
      <summary vsli:raw="For a description of this member, see &lt;see cref=&quot;M:System.Xml.Schema.XmlAtomicValue.Clone&quot; /&gt;.">Pour obtenir une description de ce membre, consultez <see cref="M:System.Xml.Schema.XmlAtomicValue.Clone" />.</summary>
      <returns vsli:raw="A copy of this &lt;see cref=&quot;T:System.Xml.Schema.XmlAtomicValue&quot; /&gt; object.">Copie de cet objet <see cref="T:System.Xml.Schema.XmlAtomicValue" />.</returns>
    </member>
    <member name="M:System.Xml.Schema.XmlAtomicValue.ToString">
      <summary vsli:raw="Gets the &lt;see langword=&quot;string&quot; /&gt; value of the validated XML element or attribute.">Obtient la valeur de <see langword="string" /> de l'élément XML ou de l'attribut validé.</summary>
      <returns vsli:raw="The &lt;see langword=&quot;string&quot; /&gt; value of the validated XML element or attribute.">Valeur <see langword="string" /> de l'élément XML ou de l'attribut validé.</returns>
    </member>
    <member name="M:System.Xml.Schema.XmlAtomicValue.ValueAs(System.Type,System.Xml.IXmlNamespaceResolver)">
      <summary vsli:raw="Returns the validated XML element or attribute's value as the type specified using the &lt;see cref=&quot;T:System.Xml.IXmlNamespaceResolver&quot; /&gt; object specified to resolve namespace prefixes.">Retourne la valeur de l'élément XML ou de l'attribut validé en tant que type spécifié à l'aide de l'objet <see cref="T:System.Xml.IXmlNamespaceResolver" /> spécifié pour trouver les préfixes d'espace de noms.</summary>
      <param name="type" vsli:raw="The type to return the validated XML element or attribute's value as.">Type sous lequel retourner l'élément XML ou l'attribut validé.</param>
      <param name="nsResolver" vsli:raw="The &lt;see cref=&quot;T:System.Xml.IXmlNamespaceResolver&quot; /&gt; object used to resolve namespace prefixes.">Objet <see cref="T:System.Xml.IXmlNamespaceResolver" /> utilisé pour résoudre les préfixes d’espace de noms.</param>
      <exception cref="T:System.FormatException" vsli:raw="The validated XML element or attribute's value is not in the correct format for the target type.">Le format de l'élément XML validé ou de la valeur de l'attribut n'est pas correct pour le type cible.</exception>
      <exception cref="T:System.InvalidCastException" vsli:raw="The attempted cast is not valid.">La tentative de cast n'est pas valide.</exception>
      <exception cref="T:System.OverflowException" vsli:raw="The attempted cast resulted in an overflow.">Le cast spécifié a généré un dépassement de capacité.</exception>
      <returns vsli:raw="The value of the validated XML element or attribute as the type requested.">Valeur de l'élément XML ou de l'attribut validé en tant que type demandé.</returns>
    </member>
    <member name="P:System.Xml.Schema.XmlAtomicValue.IsNode">
      <summary vsli:raw="Gets a value indicating whether the validated XML element or attribute is an XPath node or an atomic value.">Obtient une valeur indiquant si l'élément XML ou l'attribut validé est un nœud XPath ou une valeur atomique.</summary>
      <returns vsli:raw="&lt;see langword=&quot;true&quot; /&gt; if the validated XML element or attribute is an XPath node; &lt;see langword=&quot;false&quot; /&gt; if the validated XML element or attribute is an atomic value.">
        <see langword="true" /> si l'élément XML ou l'attribut validé est un nœud XPath ; <see langword="false" /> si l'élément XML ou l'attribut validé est une valeur atomique.</returns>
    </member>
    <member name="P:System.Xml.Schema.XmlAtomicValue.TypedValue">
      <summary vsli:raw="Gets the current validated XML element or attribute as a boxed object of the most appropriate .NET type according to its schema type.">Obtient l'élément XML ou l'attribut validé en tant qu'objet boxed du type Microsoft .NET Framework le plus approprié d'après son type de schéma.</summary>
      <returns vsli:raw="The current validated XML element or attribute as a boxed object of the most appropriate .NET type.">Élément XML ou attribut validé actuel en tant qu'objet boxed du type .NET Framework le plus approprié.</returns>
    </member>
    <member name="P:System.Xml.Schema.XmlAtomicValue.Value">
      <summary vsli:raw="Gets the &lt;see langword=&quot;string&quot; /&gt; value of the validated XML element or attribute.">Obtient la valeur de <see langword="string" /> de l'élément XML ou de l'attribut validé.</summary>
      <returns vsli:raw="The &lt;see langword=&quot;string&quot; /&gt; value of the validated XML element or attribute.">Valeur <see langword="string" /> de l'élément XML ou de l'attribut validé.</returns>
    </member>
    <member name="P:System.Xml.Schema.XmlAtomicValue.ValueAsBoolean">
      <summary vsli:raw="Gets the validated XML element or attribute's value as a &lt;see cref=&quot;T:System.Boolean&quot; /&gt;.">Obtient la valeur de l'élément XML ou de l'attribut validé en tant que <see cref="T:System.Boolean" />.</summary>
      <exception cref="T:System.FormatException" vsli:raw="The validated XML element or attribute's value is not in the correct format for the &lt;see cref=&quot;T:System.Boolean&quot; /&gt; type.">Le format de l'élément XML validé ou de la valeur de l'attribut n'est pas correct pour le type <see cref="T:System.Boolean" />.</exception>
      <exception cref="T:System.InvalidCastException" vsli:raw="The attempted cast to &lt;see cref=&quot;T:System.Boolean&quot; /&gt; is not valid.">La tentative de cast en <see cref="T:System.Boolean" /> n'est pas valide.</exception>
      <returns vsli:raw="The validated XML element or attribute's value as a &lt;see cref=&quot;T:System.Boolean&quot; /&gt;.">Valeur de l'élément XML ou de l'attribut validé en tant que <see cref="T:System.Boolean" />.</returns>
    </member>
    <member name="P:System.Xml.Schema.XmlAtomicValue.ValueAsDateTime">
      <summary vsli:raw="Gets the validated XML element or attribute's value as a &lt;see cref=&quot;T:System.DateTime&quot; /&gt;.">Obtient la valeur de l'élément XML ou de l'attribut validé en tant que <see cref="T:System.DateTime" />.</summary>
      <exception cref="T:System.FormatException" vsli:raw="The validated XML element or attribute's value is not in the correct format for the &lt;see cref=&quot;T:System.DateTime&quot; /&gt; type.">Le format de l'élément XML validé ou de la valeur de l'attribut n'est pas correct pour le type <see cref="T:System.DateTime" />.</exception>
      <exception cref="T:System.InvalidCastException" vsli:raw="The attempted cast to &lt;see cref=&quot;T:System.DateTime&quot; /&gt; is not valid.">La tentative de cast en <see cref="T:System.DateTime" /> n'est pas valide.</exception>
      <returns vsli:raw="The validated XML element or attribute's value as a &lt;see cref=&quot;T:System.DateTime&quot; /&gt;.">Valeur de l'élément XML ou de l'attribut validé en tant que <see cref="T:System.DateTime" />.</returns>
    </member>
    <member name="P:System.Xml.Schema.XmlAtomicValue.ValueAsDouble">
      <summary vsli:raw="Gets the validated XML element or attribute's value as a &lt;see cref=&quot;T:System.Double&quot; /&gt;.">Obtient la valeur de l'élément XML ou de l'attribut validé en tant que <see cref="T:System.Double" />.</summary>
      <exception cref="T:System.FormatException" vsli:raw="The validated XML element or attribute's value is not in the correct format for the &lt;see cref=&quot;T:System.Double&quot; /&gt; type.">Le format de l'élément XML validé ou de la valeur de l'attribut n'est pas correct pour le type <see cref="T:System.Double" />.</exception>
      <exception cref="T:System.InvalidCastException" vsli:raw="The attempted cast to &lt;see cref=&quot;T:System.Double&quot; /&gt; is not valid.">La tentative de cast en <see cref="T:System.Double" /> n'est pas valide.</exception>
      <exception cref="T:System.OverflowException" vsli:raw="The attempted cast resulted in an overflow.">Le cast spécifié a généré un dépassement de capacité.</exception>
      <returns vsli:raw="The validated XML element or attribute's value as a &lt;see cref=&quot;T:System.Double&quot; /&gt;.">Valeur de l'élément XML ou de l'attribut validé en tant que <see cref="T:System.Double" />.</returns>
    </member>
    <member name="P:System.Xml.Schema.XmlAtomicValue.ValueAsInt">
      <summary vsli:raw="Gets the validated XML element or attribute's value as an &lt;see cref=&quot;T:System.Int32&quot; /&gt;.">Obtient la valeur de l'élément XML ou de l'attribut validé en tant que <see cref="T:System.Int32" />.</summary>
      <exception cref="T:System.FormatException" vsli:raw="The validated XML element or attribute's value is not in the correct format for the &lt;see cref=&quot;T:System.Int32&quot; /&gt; type.">Le format de l'élément XML validé ou de la valeur de l'attribut n'est pas correct pour le type <see cref="T:System.Int32" />.</exception>
      <exception cref="T:System.InvalidCastException" vsli:raw="The attempted cast to &lt;see cref=&quot;T:System.Int32&quot; /&gt; is not valid.">La tentative de cast en <see cref="T:System.Int32" /> n'est pas valide.</exception>
      <exception cref="T:System.OverflowException" vsli:raw="The attempted cast resulted in an overflow.">Le cast spécifié a généré un dépassement de capacité.</exception>
      <returns vsli:raw="The validated XML element or attribute's value as an &lt;see cref=&quot;T:System.Int32&quot; /&gt;.">Valeur de l'élément XML ou de l'attribut validé en tant que <see cref="T:System.Int32" />.</returns>
    </member>
    <member name="P:System.Xml.Schema.XmlAtomicValue.ValueAsLong">
      <summary vsli:raw="Gets the validated XML element or attribute's value as an &lt;see cref=&quot;T:System.Int64&quot; /&gt;.">Obtient la valeur de l'élément XML ou de l'attribut validé en tant que <see cref="T:System.Int64" />.</summary>
      <exception cref="T:System.FormatException" vsli:raw="The validated XML element or attribute's value is not in the correct format for the &lt;see cref=&quot;T:System.Int64&quot; /&gt; type.">Le format de l'élément XML validé ou de la valeur de l'attribut n'est pas correct pour le type <see cref="T:System.Int64" />.</exception>
      <exception cref="T:System.InvalidCastException" vsli:raw="The attempted cast to &lt;see cref=&quot;T:System.Int64&quot; /&gt; is not valid.">La tentative de cast en <see cref="T:System.Int64" /> n'est pas valide.</exception>
      <exception cref="T:System.OverflowException" vsli:raw="The attempted cast resulted in an overflow.">Le cast spécifié a généré un dépassement de capacité.</exception>
      <returns vsli:raw="The validated XML element or attribute's value as an &lt;see cref=&quot;T:System.Int64&quot; /&gt;.">Valeur de l'élément XML ou de l'attribut validé en tant que <see cref="T:System.Int64" />.</returns>
    </member>
    <member name="P:System.Xml.Schema.XmlAtomicValue.ValueType">
      <summary vsli:raw="Gets the .NET type of the validated XML element or attribute.">Obtient le type Microsoft .NET Framework de l'élément XML ou de l'attribut validé.</summary>
      <returns vsli:raw="The .NET type of the validated XML element or attribute. The default value is &lt;see cref=&quot;T:System.String&quot; /&gt;.">Type .NET Framework de l'élément XML ou de l'attribut validé. La valeur par défaut est <see cref="T:System.String" />.</returns>
    </member>
    <member name="P:System.Xml.Schema.XmlAtomicValue.XmlType">
      <summary vsli:raw="Gets the &lt;see cref=&quot;T:System.Xml.Schema.XmlSchemaType&quot; /&gt; for the validated XML element or attribute.">Reçoit le <see cref="T:System.Xml.Schema.XmlSchemaType" /> pour l'élément XML ou l'attribut validé.</summary>
      <returns vsli:raw="The &lt;see cref=&quot;T:System.Xml.Schema.XmlSchemaType&quot; /&gt; for the validated XML element or attribute.">
        <see cref="T:System.Xml.Schema.XmlSchemaType" /> pour l'élément XML ou l'attribut validé.</returns>
    </member>
    <member name="T:System.Xml.Schema.XmlSchema">
      <summary vsli:raw="An in-memory representation of an XML Schema, as specified in the World Wide Web Consortium (W3C) XML Schema Part 1: Structures and XML Schema Part 2: Datatypes].">Représentation en mémoire d’un schéma XML, comme indiqué dans les spécifications World Wide Web Consortium (W3C) XML Schema Part 1: Structures et XML Schema Part 2: Datatypes].</summary>
    </member>
    <member name="F:System.Xml.Schema.XmlSchema.InstanceNamespace">
      <summary vsli:raw="The XML schema instance namespace. This field is constant.">Espace de noms de l'instance du schéma XML. Ce champ est constant.</summary>
    </member>
    <member name="F:System.Xml.Schema.XmlSchema.Namespace">
      <summary vsli:raw="The XML schema namespace. This field is constant.">Espace de noms du schéma XML. Ce champ est constant.</summary>
    </member>
    <member name="M:System.Xml.Schema.XmlSchema.#ctor">
      <summary vsli:raw="Initializes a new instance of the &lt;see cref=&quot;T:System.Xml.Schema.XmlSchema&quot; /&gt; class.">Initialise une nouvelle instance de la classe <see cref="T:System.Xml.Schema.XmlSchema" />.</summary>
    </member>
    <member name="M:System.Xml.Schema.XmlSchema.Compile(System.Xml.Schema.ValidationEventHandler)">
      <summary vsli:raw="Compiles the XML Schema Object Model (SOM) into schema information for validation. Used to check the syntactic and semantic structure of the programmatically built SOM. Semantic validation checking is performed during compilation.">Compile le modèle SOM (Schema Object Model) XML en informations de schéma pour la validation. Utilisé pour vérifier les structures syntaxique et sémantique du modèle SOM construit par programmation. La vérification de la validation sémantique s’effectue pendant la compilation.</summary>
      <param name="validationEventHandler" vsli:raw="The validation event handler that receives information about XML Schema validation errors.">Gestionnaire d'événements de validation qui reçoit les informations à propos des erreurs de validation des schémas XML.</param>
    </member>
    <member name="M:System.Xml.Schema.XmlSchema.Compile(System.Xml.Schema.ValidationEventHandler,System.Xml.XmlResolver)">
      <summary vsli:raw="Compiles the XML Schema Object Model (SOM) into schema information for validation. Used to check the syntactic and semantic structure of the programmatically built SOM. Semantic validation checking is performed during compilation.">Compile le modèle SOM (Schema Object Model) XML en informations de schéma pour la validation. Utilisé pour vérifier les structures syntaxique et sémantique du modèle SOM construit par programmation. La vérification de la validation sémantique s’effectue pendant la compilation.</summary>
      <param name="validationEventHandler" vsli:raw="The validation event handler that receives information about the XML Schema validation errors.">Gestionnaire d'événements de validation qui reçoit les informations à propos des erreurs de validation des schémas XML.</param>
      <param name="resolver" vsli:raw="The &lt;see langword=&quot;XmlResolver&quot; /&gt; used to resolve namespaces referenced in &lt;see langword=&quot;include&quot; /&gt; and &lt;see langword=&quot;import&quot; /&gt; elements.">
        <see langword="XmlResolver" /> utilisé pour résoudre les espaces de noms référencés par les éléments <see langword="include" /> et <see langword="import" />.</param>
    </member>
    <member name="M:System.Xml.Schema.XmlSchema.Read(System.IO.Stream,System.Xml.Schema.ValidationEventHandler)">
      <summary vsli:raw="Reads an XML Schema from the supplied stream.">Lit un schéma XML à partir du flux fourni.</summary>
      <param name="stream" vsli:raw="The supplied data stream.">Flux de données fourni.</param>
      <param name="validationEventHandler" vsli:raw="The validation event handler that receives information about XML Schema syntax errors.">Le gestionnaire d'événements de validation qui reçoit les informations à propos des erreurs de syntaxe des schémas XML.</param>
      <exception cref="T:System.Xml.Schema.XmlSchemaException" vsli:raw="An &lt;see cref=&quot;T:System.Xml.Schema.XmlSchemaException&quot; /&gt; is raised if no &lt;see cref=&quot;T:System.Xml.Schema.ValidationEventHandler&quot; /&gt; is specified.">Un <see cref="T:System.Xml.Schema.XmlSchemaException" /> est déclenché si aucun <see cref="T:System.Xml.Schema.ValidationEventHandler" /> n'est spécifié.</exception>
      <returns vsli:raw="The &lt;see cref=&quot;T:System.Xml.Schema.XmlSchema&quot; /&gt; object representing the XML Schema.">Objet <see cref="T:System.Xml.Schema.XmlSchema" /> représentant le schéma XML.</returns>
    </member>
    <member name="M:System.Xml.Schema.XmlSchema.Read(System.IO.TextReader,System.Xml.Schema.ValidationEventHandler)">
      <summary vsli:raw="Reads an XML Schema from the supplied &lt;see cref=&quot;T:System.IO.TextReader&quot; /&gt;.">Lit un schéma XML du <see cref="T:System.IO.TextReader" /> fourni.</summary>
      <param name="reader" vsli:raw="The &lt;see langword=&quot;TextReader&quot; /&gt; containing the XML Schema to read.">
        <see langword="TextReader" /> contenant le schéma XML à lire.</param>
      <param name="validationEventHandler" vsli:raw="The validation event handler that receives information about the XML Schema syntax errors.">Le gestionnaire d'événements de validation qui reçoit les informations à propos des erreurs de syntaxe des schémas XML.</param>
      <exception cref="T:System.Xml.Schema.XmlSchemaException" vsli:raw="An &lt;see cref=&quot;T:System.Xml.Schema.XmlSchemaException&quot; /&gt; is raised if no &lt;see cref=&quot;T:System.Xml.Schema.ValidationEventHandler&quot; /&gt; is specified.">Un <see cref="T:System.Xml.Schema.XmlSchemaException" /> est déclenché si aucun <see cref="T:System.Xml.Schema.ValidationEventHandler" /> n'est spécifié.</exception>
      <returns vsli:raw="The &lt;see cref=&quot;T:System.Xml.Schema.XmlSchema&quot; /&gt; object representing the XML Schema.">Objet <see cref="T:System.Xml.Schema.XmlSchema" /> représentant le schéma XML.</returns>
    </member>
    <member name="M:System.Xml.Schema.XmlSchema.Read(System.Xml.XmlReader,System.Xml.Schema.ValidationEventHandler)">
      <summary vsli:raw="Reads an XML Schema from the supplied &lt;see cref=&quot;T:System.Xml.XmlReader&quot; /&gt;.">Lit un schéma XML du <see cref="T:System.Xml.XmlReader" /> fourni.</summary>
      <param name="reader" vsli:raw="The &lt;see langword=&quot;XmlReader&quot; /&gt; containing the XML Schema to read.">
        <see langword="XmlReader" /> contenant le schéma XML à lire.</param>
      <param name="validationEventHandler" vsli:raw="The validation event handler that receives information about the XML Schema syntax errors.">Le gestionnaire d'événements de validation qui reçoit les informations à propos des erreurs de syntaxe des schémas XML.</param>
      <exception cref="T:System.Xml.Schema.XmlSchemaException" vsli:raw="An &lt;see cref=&quot;T:System.Xml.Schema.XmlSchemaException&quot; /&gt; is raised if no &lt;see cref=&quot;T:System.Xml.Schema.ValidationEventHandler&quot; /&gt; is specified.">Un <see cref="T:System.Xml.Schema.XmlSchemaException" /> est déclenché si aucun <see cref="T:System.Xml.Schema.ValidationEventHandler" /> n'est spécifié.</exception>
      <returns vsli:raw="The &lt;see cref=&quot;T:System.Xml.Schema.XmlSchema&quot; /&gt; object representing the XML Schema.">Objet <see cref="T:System.Xml.Schema.XmlSchema" /> représentant le schéma XML.</returns>
    </member>
    <member name="M:System.Xml.Schema.XmlSchema.Write(System.IO.Stream)">
      <summary vsli:raw="Writes the XML Schema to the supplied data stream.">Écrit le schéma XML dans le flux de données fourni.</summary>
      <param name="stream" vsli:raw="The supplied data stream.">Flux de données fourni.</param>
    </member>
    <member name="M:System.Xml.Schema.XmlSchema.Write(System.IO.Stream,System.Xml.XmlNamespaceManager)">
      <summary vsli:raw="Writes the XML Schema to the supplied &lt;see cref=&quot;T:System.IO.Stream&quot; /&gt; using the &lt;see cref=&quot;T:System.Xml.XmlNamespaceManager&quot; /&gt; specified.">Écrit le schéma XML dans le <see cref="T:System.IO.Stream" /> fourni à l'aide du <see cref="T:System.Xml.XmlNamespaceManager" /> spécifié.</summary>
      <param name="stream" vsli:raw="The supplied data stream.">Flux de données fourni.</param>
      <param name="namespaceManager" vsli:raw="The &lt;see cref=&quot;T:System.Xml.XmlNamespaceManager&quot; /&gt;.">L’<see cref="T:System.Xml.XmlNamespaceManager" />opérateur</param>
    </member>
    <member name="M:System.Xml.Schema.XmlSchema.Write(System.IO.TextWriter)">
      <summary vsli:raw="Writes the XML Schema to the supplied &lt;see cref=&quot;T:System.IO.TextWriter&quot; /&gt;.">Écrit le schéma XML dans le <see cref="T:System.IO.TextWriter" /> fourni.</summary>
      <param name="writer" vsli:raw="The &lt;see cref=&quot;T:System.IO.TextWriter&quot; /&gt; to write to.">
        <see cref="T:System.IO.TextWriter" /> dans lequel écrire.</param>
    </member>
    <member name="M:System.Xml.Schema.XmlSchema.Write(System.IO.TextWriter,System.Xml.XmlNamespaceManager)">
      <summary vsli:raw="Writes the XML Schema to the supplied &lt;see cref=&quot;T:System.IO.TextWriter&quot; /&gt;.">Écrit le schéma XML dans le <see cref="T:System.IO.TextWriter" /> fourni.</summary>
      <param name="writer" vsli:raw="The &lt;see cref=&quot;T:System.IO.TextWriter&quot; /&gt; to write to.">
        <see cref="T:System.IO.TextWriter" /> dans lequel écrire.</param>
      <param name="namespaceManager" vsli:raw="The &lt;see cref=&quot;T:System.Xml.XmlNamespaceManager&quot; /&gt;.">L’<see cref="T:System.Xml.XmlNamespaceManager" />opérateur</param>
    </member>
    <member name="M:System.Xml.Schema.XmlSchema.Write(System.Xml.XmlWriter)">
      <summary vsli:raw="Writes the XML Schema to the supplied &lt;see cref=&quot;T:System.Xml.XmlWriter&quot; /&gt;.">Écrit le schéma XML dans le <see cref="T:System.Xml.XmlWriter" /> fourni.</summary>
      <param name="writer" vsli:raw="The &lt;see cref=&quot;T:System.Xml.XmlWriter&quot; /&gt; to write to.">
        <see cref="T:System.Xml.XmlWriter" /> dans lequel écrire.</param>
      <exception cref="T:System.ArgumentNullException" vsli:raw="The &lt;paramref name=&quot;writer&quot; /&gt; parameter is null.">Le paramètre <paramref name="writer" /> est null.</exception>
    </member>
    <member name="M:System.Xml.Schema.XmlSchema.Write(System.Xml.XmlWriter,System.Xml.XmlNamespaceManager)">
      <summary vsli:raw="Writes the XML Schema to the supplied &lt;see cref=&quot;T:System.Xml.XmlWriter&quot; /&gt;.">Écrit le schéma XML dans le <see cref="T:System.Xml.XmlWriter" /> fourni.</summary>
      <param name="writer" vsli:raw="The &lt;see cref=&quot;T:System.Xml.XmlWriter&quot; /&gt; to write to.">
        <see cref="T:System.Xml.XmlWriter" /> dans lequel écrire.</param>
      <param name="namespaceManager" vsli:raw="The &lt;see cref=&quot;T:System.Xml.XmlNamespaceManager&quot; /&gt;.">L’<see cref="T:System.Xml.XmlNamespaceManager" />opérateur</param>
    </member>
    <member name="P:System.Xml.Schema.XmlSchema.AttributeFormDefault">
      <summary vsli:raw="Gets or sets the form for attributes declared in the target namespace of the schema.">Obtient ou définit le formulaire pour les attributs déclarés de l'espace de noms cible du schéma.</summary>
      <returns vsli:raw="The &lt;see cref=&quot;T:System.Xml.Schema.XmlSchemaForm&quot; /&gt; value that indicates if attributes from the target namespace are required to be qualified with the namespace prefix. The default is &lt;see cref=&quot;F:System.Xml.Schema.XmlSchemaForm.None&quot; /&gt;.">Valeur de <see cref="T:System.Xml.Schema.XmlSchemaForm" /> indiquant si des attributs de l'espace de noms cible sont requis pour être qualifiés avec le préfixe de l'espace de noms. La valeur par défaut est <see cref="F:System.Xml.Schema.XmlSchemaForm.None" />.</returns>
    </member>
    <member name="P:System.Xml.Schema.XmlSchema.AttributeGroups">
      <summary vsli:raw="Gets the post-schema-compilation value of all the global attribute groups in the schema.">Obtient la valeur postérieure à la compilation du schéma de tous les groupes d'attributs globaux du schéma.</summary>
      <returns vsli:raw="An &lt;see cref=&quot;T:System.Xml.Schema.XmlSchemaObjectTable&quot; /&gt; collection of all the global attribute groups in the schema.">Une collection <see cref="T:System.Xml.Schema.XmlSchemaObjectTable" /> de tous les groupes d'attributs globaux dans le schéma.</returns>
    </member>
    <member name="P:System.Xml.Schema.XmlSchema.Attributes">
      <summary vsli:raw="Gets the post-schema-compilation value for all the attributes in the schema.">Obtient la valeur postérieure à la compilation du schéma pour tous les attributs du schéma.</summary>
      <returns vsli:raw="An &lt;see cref=&quot;T:System.Xml.Schema.XmlSchemaObjectTable&quot; /&gt; collection of all the attributes in the schema.">Collection <see cref="T:System.Xml.Schema.XmlSchemaObjectTable" /> de tous les attributs dans le schéma.</returns>
    </member>
    <member name="P:System.Xml.Schema.XmlSchema.BlockDefault">
      <summary vsli:raw="Gets or sets the &lt;see langword=&quot;blockDefault&quot; /&gt; attribute which sets the default value of the &lt;see langword=&quot;block&quot; /&gt; attribute on element and complex types in the &lt;see langword=&quot;targetNamespace&quot; /&gt; of the schema.">Obtient ou définit l'attribut <see langword="blockDefault" /> qui définit la valeur par défaut de l'attribut <see langword="block" /> sur l'élément et les types complexes dans le <see langword="targetNamespace" /> du schéma.</summary>
      <returns vsli:raw="An &lt;see cref=&quot;T:System.Xml.Schema.XmlSchemaDerivationMethod&quot; /&gt; value representing the different methods for preventing derivation. The default value is &lt;see langword=&quot;XmlSchemaDerivationMethod.None&quot; /&gt;.">Valeur <see cref="T:System.Xml.Schema.XmlSchemaDerivationMethod" /> qui représente les différentes méthodes de prévention de la dérivation. La valeur par défaut est <see langword="XmlSchemaDerivationMethod.None" />.</returns>
    </member>
    <member name="P:System.Xml.Schema.XmlSchema.ElementFormDefault">
      <summary vsli:raw="Gets or sets the form for elements declared in the target namespace of the schema.">Obtient ou définit le formulaire pour les éléments déclarés de l'espace de noms cible du schéma.</summary>
      <returns vsli:raw="The &lt;see cref=&quot;T:System.Xml.Schema.XmlSchemaForm&quot; /&gt; value that indicates if elements from the target namespace are required to be qualified with the namespace prefix. The default is &lt;see cref=&quot;F:System.Xml.Schema.XmlSchemaForm.None&quot; /&gt;.">Valeur de <see cref="T:System.Xml.Schema.XmlSchemaForm" /> indiquant si des éléments de l'espace de noms cible sont requis pour être qualifiés avec le préfixe de l'espace de noms. La valeur par défaut est <see cref="F:System.Xml.Schema.XmlSchemaForm.None" />.</returns>
    </member>
    <member name="P:System.Xml.Schema.XmlSchema.Elements">
      <summary vsli:raw="Gets the post-schema-compilation value for all the elements in the schema.">Obtient la valeur postérieure à la compilation du schéma pour tous les éléments du schéma.</summary>
      <returns vsli:raw="An &lt;see cref=&quot;T:System.Xml.Schema.XmlSchemaObjectTable&quot; /&gt; collection of all the elements in the schema.">Collection <see cref="T:System.Xml.Schema.XmlSchemaObjectTable" /> de tous les éléments du schéma.</returns>
    </member>
    <member name="P:System.Xml.Schema.XmlSchema.FinalDefault">
      <summary vsli:raw="Gets or sets the &lt;see langword=&quot;finalDefault&quot; /&gt; attribute which sets the default value of the &lt;see langword=&quot;final&quot; /&gt; attribute on elements and complex types in the target namespace of the schema.">Obtient ou définit l'attribut <see langword="finalDefault" /> qui définit la valeur par défaut de l'attribut <see langword="final" /> sur les éléments et les types complexes dans l'espace de noms cible du schéma.</summary>
      <returns vsli:raw="An &lt;see cref=&quot;T:System.Xml.Schema.XmlSchemaDerivationMethod&quot; /&gt; value representing the different methods for preventing derivation. The default value is &lt;see langword=&quot;XmlSchemaDerivationMethod.None&quot; /&gt;.">Valeur <see cref="T:System.Xml.Schema.XmlSchemaDerivationMethod" /> qui représente les différentes méthodes de prévention de la dérivation. La valeur par défaut est <see langword="XmlSchemaDerivationMethod.None" />.</returns>
    </member>
    <member name="P:System.Xml.Schema.XmlSchema.Groups">
      <summary vsli:raw="Gets the post-schema-compilation value of all the groups in the schema.">Obtient la valeur postérieure à la compilation du schéma pour tous les groupes du schéma.</summary>
      <returns vsli:raw="An &lt;see cref=&quot;T:System.Xml.Schema.XmlSchemaObjectTable&quot; /&gt; collection of all the groups in the schema.">Collection <see cref="T:System.Xml.Schema.XmlSchemaObjectTable" /> de tous les groupes du schéma.</returns>
    </member>
    <member name="P:System.Xml.Schema.XmlSchema.Id">
      <summary vsli:raw="Gets or sets the string ID.">Obtient ou définit l'ID de la chaîne.</summary>
      <returns vsli:raw="The ID of the string. The default value is &lt;see langword=&quot;String.Empty&quot; /&gt;.">ID de la chaîne. La valeur par défaut est <see langword="String.Empty" />.</returns>
    </member>
    <member name="P:System.Xml.Schema.XmlSchema.Includes">
      <summary vsli:raw="Gets the collection of included and imported schemas.">Obtient la collection de schémas inclus et importés.</summary>
      <returns vsli:raw="An &lt;see cref=&quot;T:System.Xml.Schema.XmlSchemaObjectCollection&quot; /&gt; of the included and imported schemas.">
        <see cref="T:System.Xml.Schema.XmlSchemaObjectCollection" /> des schémas inclus et importés.</returns>
    </member>
    <member name="P:System.Xml.Schema.XmlSchema.IsCompiled">
      <summary vsli:raw="Indicates if the schema has been compiled.">Indique si le schéma a été compilé.</summary>
      <returns vsli:raw="&lt;see langword=&quot;true&quot; /&gt; if schema has been compiled, otherwise, &lt;see langword=&quot;false&quot; /&gt;. The default value is &lt;see langword=&quot;false&quot; /&gt;.">
        <see langword="true" /> si le schéma a été compilé ; sinon, <see langword="false" />. La valeur par défaut est <see langword="false" />.</returns>
    </member>
    <member name="P:System.Xml.Schema.XmlSchema.Items">
      <summary vsli:raw="Gets the collection of schema elements in the schema and is used to add new element types at the &lt;see langword=&quot;schema&quot; /&gt; element level.">Obtient la collection d'éléments de schéma dans le schéma et est utilisé pour ajouter de nouveaux types d'élément au niveau de l'élément <see langword="schema" />.</summary>
      <returns vsli:raw="An &lt;see cref=&quot;T:System.Xml.Schema.XmlSchemaObjectCollection&quot; /&gt; of schema elements in the schema.">
        <see cref="T:System.Xml.Schema.XmlSchemaObjectCollection" /> d'éléments de schéma dans le schéma.</returns>
    </member>
    <member name="P:System.Xml.Schema.XmlSchema.Notations">
      <summary vsli:raw="Gets the post-schema-compilation value for all notations in the schema.">Obtient la valeur postérieure à la compilation du schéma pour toutes les notations du schéma.</summary>
      <returns vsli:raw="An &lt;see cref=&quot;T:System.Xml.Schema.XmlSchemaObjectTable&quot; /&gt; collection of all notations in the schema.">Collection <see cref="T:System.Xml.Schema.XmlSchemaObjectTable" /> de toutes les notations du schéma.</returns>
    </member>
    <member name="P:System.Xml.Schema.XmlSchema.SchemaTypes">
      <summary vsli:raw="Gets the post-schema-compilation value of all schema types in the schema.">Obtient la valeur postérieure à la compilation du schéma de tous les types du schéma.</summary>
      <returns vsli:raw="An &lt;see cref=&quot;T:System.Xml.Schema.XmlSchemaObjectCollection&quot; /&gt; of all schema types in the schema.">
        <see cref="T:System.Xml.Schema.XmlSchemaObjectCollection" /> de tous les types de schéma du schéma.</returns>
    </member>
    <member name="P:System.Xml.Schema.XmlSchema.TargetNamespace">
      <summary vsli:raw="Gets or sets the Uniform Resource Identifier (URI) of the schema target namespace.">Obtient ou définit l'URI (Uniform Resource Identifier) de l'espace de noms cible du schéma.</summary>
      <returns vsli:raw="The schema target namespace.">Espace de noms cible du schéma.</returns>
    </member>
    <member name="P:System.Xml.Schema.XmlSchema.UnhandledAttributes">
      <summary vsli:raw="Gets or sets the qualified attributes which do not belong to the schema target namespace.">Obtient ou définit les attributs qualifiés qui n’appartiennent pas à l’espace de noms cible du schéma.</summary>
      <returns vsli:raw="An array of qualified &lt;see cref=&quot;T:System.Xml.XmlAttribute&quot; /&gt; objects that do not belong to the schema target namespace.">Tableau d'objets <see cref="T:System.Xml.XmlAttribute" /> qualifiés qui n'appartiennent pas à l'espace de noms cible du schéma.</returns>
    </member>
    <member name="P:System.Xml.Schema.XmlSchema.Version">
      <summary vsli:raw="Gets or sets the version of the schema.">Obtient ou définit la version du schéma.</summary>
      <returns vsli:raw="The version of the schema. The default value is &lt;see langword=&quot;String.Empty&quot; /&gt;.">Version du schéma. La valeur par défaut est <see langword="String.Empty" />.</returns>
    </member>
    <member name="T:System.Xml.Schema.XmlSchemaAll">
      <summary vsli:raw="Represents the World Wide Web Consortium (W3C) &lt;see langword=&quot;all&quot; /&gt; element (compositor).">Représente l'élément World Wide Web Consortium (W3C) <see langword="all" /> (compositeur).</summary>
    </member>
    <member name="M:System.Xml.Schema.XmlSchemaAll.#ctor">
      <summary vsli:raw="Initializes a new instance of the &lt;see cref=&quot;T:System.Xml.Schema.XmlSchemaAll&quot; /&gt; class.">Initialise une nouvelle instance de la classe <see cref="T:System.Xml.Schema.XmlSchemaAll" />.</summary>
    </member>
    <member name="P:System.Xml.Schema.XmlSchemaAll.Items">
      <summary vsli:raw="Gets the collection of &lt;see langword=&quot;XmlSchemaElement&quot; /&gt; elements contained within the &lt;see langword=&quot;all&quot; /&gt; compositor.">Obtient la collection des éléments <see langword="XmlSchemaElement" /> contenus dans le compositeur <see langword="all" />.</summary>
      <returns vsli:raw="The collection of elements contained in &lt;see langword=&quot;XmlSchemaAll&quot; /&gt;.">Collection d'éléments contenus dans <see langword="XmlSchemaAll" />.</returns>
    </member>
    <member name="T:System.Xml.Schema.XmlSchemaAnnotated">
      <summary vsli:raw="The base class for any element that can contain annotation elements.">Classe de base de tout élément pouvant contenir des éléments d'annotation.</summary>
    </member>
    <member name="M:System.Xml.Schema.XmlSchemaAnnotated.#ctor">
      <summary vsli:raw="Initializes a new instance of the &lt;see cref=&quot;T:System.Xml.Schema.XmlSchemaAnnotated&quot; /&gt; class.">Initialise une nouvelle instance de la classe <see cref="T:System.Xml.Schema.XmlSchemaAnnotated" />.</summary>
    </member>
    <member name="P:System.Xml.Schema.XmlSchemaAnnotated.Annotation">
      <summary vsli:raw="Gets or sets the &lt;see langword=&quot;annotation&quot; /&gt; property.">Obtient ou définit la propriété <see langword="annotation" />.</summary>
      <returns vsli:raw="An &lt;see cref=&quot;T:System.Xml.Schema.XmlSchemaAnnotation&quot; /&gt; representing the &lt;see langword=&quot;annotation&quot; /&gt; property.">
        <see cref="T:System.Xml.Schema.XmlSchemaAnnotation" /> représentant la propriété <see langword="annotation" />.</returns>
    </member>
    <member name="P:System.Xml.Schema.XmlSchemaAnnotated.Id">
      <summary vsli:raw="Gets or sets the string id.">Obtient ou définit l'ID de chaîne.</summary>
      <returns vsli:raw="The string id. The default is &lt;see langword=&quot;String.Empty&quot; /&gt;. Optional.">ID de chaîne. La valeur par défaut est <see langword="String.Empty" /> . Optionnel.</returns>
    </member>
    <member name="P:System.Xml.Schema.XmlSchemaAnnotated.UnhandledAttributes">
      <summary vsli:raw="Gets or sets the qualified attributes that do not belong to the current schema's target namespace.">Obtient ou définit les attributs qualifiés qui n'appartiennent pas à l'espace de noms cible du schéma en cours.</summary>
      <returns vsli:raw="An array of qualified &lt;see cref=&quot;T:System.Xml.XmlAttribute&quot; /&gt; objects that do not belong to the schema's target namespace.">Tableau d'objets <see cref="T:System.Xml.XmlAttribute" /> qualifiés qui n'appartiennent pas à l'espace de noms cible du schéma.</returns>
    </member>
    <member name="T:System.Xml.Schema.XmlSchemaAnnotation">
      <summary vsli:raw="Represents the World Wide Web Consortium (W3C) &lt;see langword=&quot;annotation&quot; /&gt; element.">Représente l'élément World Wide Web Consortium (W3C) <see langword="annotation" />.</summary>
    </member>
    <member name="M:System.Xml.Schema.XmlSchemaAnnotation.#ctor">
      <summary vsli:raw="Initializes a new instance of the &lt;see cref=&quot;T:System.Xml.Schema.XmlSchemaAnnotation&quot; /&gt; class.">Initialise une nouvelle instance de la classe <see cref="T:System.Xml.Schema.XmlSchemaAnnotation" />.</summary>
    </member>
    <member name="P:System.Xml.Schema.XmlSchemaAnnotation.Id">
      <summary vsli:raw="Gets or sets the string id.">Obtient ou définit l'ID de chaîne.</summary>
      <returns vsli:raw="The string id. The default is &lt;see langword=&quot;String.Empty&quot; /&gt;. Optional.">ID de chaîne. La valeur par défaut est <see langword="String.Empty" /> . Optionnel.</returns>
    </member>
    <member name="P:System.Xml.Schema.XmlSchemaAnnotation.Items">
      <summary vsli:raw="Gets the &lt;see langword=&quot;Items&quot; /&gt; collection that is used to store the &lt;see langword=&quot;appinfo&quot; /&gt; and &lt;see langword=&quot;documentation&quot; /&gt; child elements.">Obtient la collection <see langword="Items" /> utilisée pour stocker les éléments enfants <see langword="appinfo" /> et <see langword="documentation" />.</summary>
      <returns vsli:raw="An &lt;see cref=&quot;T:System.Xml.Schema.XmlSchemaObjectCollection&quot; /&gt; of &lt;see langword=&quot;appinfo&quot; /&gt; and &lt;see langword=&quot;documentation&quot; /&gt; child elements.">
        <see cref="T:System.Xml.Schema.XmlSchemaObjectCollection" /> d' <see langword="appinfo" /> et éléments enfants <see langword="documentation" />.</returns>
    </member>
    <member name="P:System.Xml.Schema.XmlSchemaAnnotation.UnhandledAttributes">
      <summary vsli:raw="Gets or sets the qualified attributes that do not belong to the schema's target namespace.">Obtient ou définit les attributs qualifiés qui n'appartiennent pas à l'espace de noms cible du schéma.</summary>
      <returns vsli:raw="An array of &lt;see cref=&quot;T:System.Xml.XmlAttribute&quot; /&gt; objects that do not belong to the schema's target namespace.">Tableau d'objets <see cref="T:System.Xml.XmlAttribute" /> qui n'appartiennent pas à l'espace de noms cible du schéma.</returns>
    </member>
    <member name="T:System.Xml.Schema.XmlSchemaAny">
      <summary vsli:raw="Represents the World Wide Web Consortium (W3C) &lt;see langword=&quot;any&quot; /&gt; element.">Représente l'élément World Wide Web Consortium (W3C) <see langword="any" />.</summary>
    </member>
    <member name="M:System.Xml.Schema.XmlSchemaAny.#ctor">
      <summary vsli:raw="Initializes a new instance of the &lt;see cref=&quot;T:System.Xml.Schema.XmlSchemaAny&quot; /&gt; class.">Initialise une nouvelle instance de la classe <see cref="T:System.Xml.Schema.XmlSchemaAny" />.</summary>
    </member>
    <member name="P:System.Xml.Schema.XmlSchemaAny.Namespace">
      <summary vsli:raw="Gets or sets the namespaces containing the elements that can be used.">Obtient ou définit les espaces de noms contenant les éléments qui peuvent être employés.</summary>
      <returns vsli:raw="Namespaces for elements that are available for use. The default is &lt;see langword=&quot;##any&quot; /&gt;. Optional.">Espaces de noms pour les éléments disponibles. La valeur par défaut est <see langword="##any" />. Optionnel.</returns>
    </member>
    <member name="P:System.Xml.Schema.XmlSchemaAny.ProcessContents">
      <summary vsli:raw="Gets or sets information about how an application or XML processor should handle the validation of XML documents for the elements specified by the &lt;see langword=&quot;any&quot; /&gt; element.">Obtient ou définit les informations concernant la gestion par une application ou un processeur XML de la validation de documents XML pour les éléments spécifiés par l'élément <see langword="any" />.</summary>
      <returns vsli:raw="One of the &lt;see cref=&quot;T:System.Xml.Schema.XmlSchemaContentProcessing&quot; /&gt; values. If no &lt;see langword=&quot;processContents&quot; /&gt; attribute is specified, the default is &lt;see langword=&quot;Strict&quot; /&gt;.">Une des valeurs de l'objet <see cref="T:System.Xml.Schema.XmlSchemaContentProcessing" />. Si aucun attribut <see langword="processContents" /> n'est spécifié, l'attribut par défaut est <see langword="Strict" />.</returns>
    </member>
    <member name="T:System.Xml.Schema.XmlSchemaAnyAttribute">
      <summary vsli:raw="Represents the World Wide Web Consortium (W3C) &lt;see langword=&quot;anyAttribute&quot; /&gt; element.">Représente l'élément World Wide Web Consortium (W3C) <see langword="anyAttribute" />.</summary>
    </member>
    <member name="M:System.Xml.Schema.XmlSchemaAnyAttribute.#ctor">
      <summary vsli:raw="Initializes a new instance of the &lt;see cref=&quot;T:System.Xml.Schema.XmlSchemaAnyAttribute&quot; /&gt; class.">Initialise une nouvelle instance de la classe <see cref="T:System.Xml.Schema.XmlSchemaAnyAttribute" />.</summary>
    </member>
    <member name="P:System.Xml.Schema.XmlSchemaAnyAttribute.Namespace">
      <summary vsli:raw="Gets or sets the namespaces containing the attributes that can be used.">Obtient ou définit les espaces de noms contenant les attributs qui peuvent être employés.</summary>
      <returns vsli:raw="Namespaces for attributes that are available for use. The default is &lt;see langword=&quot;##any&quot; /&gt;. Optional.">Espaces de noms pour les attributs disponibles. La valeur par défaut est <see langword="##any" />. Optionnel.</returns>
    </member>
    <member name="P:System.Xml.Schema.XmlSchemaAnyAttribute.ProcessContents">
      <summary vsli:raw="Gets or sets information about how an application or XML processor should handle the validation of XML documents for the attributes specified by the &lt;see langword=&quot;anyAttribute&quot; /&gt; element.">Obtient ou définit les informations concernant la gestion par une application ou un processeur XML de la validation de documents XML pour les attributs spécifiés par l'élément <see langword="anyAttribute" />.</summary>
      <returns vsli:raw="One of the &lt;see cref=&quot;T:System.Xml.Schema.XmlSchemaContentProcessing&quot; /&gt; values. If no &lt;see langword=&quot;processContents&quot; /&gt; attribute is specified, the default is &lt;see langword=&quot;Strict&quot; /&gt;.">Une des valeurs de l'objet <see cref="T:System.Xml.Schema.XmlSchemaContentProcessing" />. Si aucun attribut <see langword="processContents" /> n'est spécifié, l'attribut par défaut est <see langword="Strict" />.</returns>
    </member>
    <member name="T:System.Xml.Schema.XmlSchemaAppInfo">
      <summary vsli:raw="Represents the World Wide Web Consortium (W3C) &lt;see langword=&quot;appinfo&quot; /&gt; element.">Représente l'élément World Wide Web Consortium (W3C) <see langword="appinfo" />.</summary>
    </member>
    <member name="M:System.Xml.Schema.XmlSchemaAppInfo.#ctor">
      <summary vsli:raw="Initializes a new instance of the &lt;see cref=&quot;T:System.Xml.Schema.XmlSchemaAppInfo&quot; /&gt; class.">Initialise une nouvelle instance de la classe <see cref="T:System.Xml.Schema.XmlSchemaAppInfo" />.</summary>
    </member>
    <member name="P:System.Xml.Schema.XmlSchemaAppInfo.Markup">
      <summary vsli:raw="Gets or sets an array of &lt;see cref=&quot;T:System.Xml.XmlNode&quot; /&gt; objects that represents the &lt;see langword=&quot;appinfo&quot; /&gt; child nodes.">Obtient ou définit un tableau d'objets <see cref="T:System.Xml.XmlNode" /> qui représente les nœuds enfants <see langword="appinfo" />.</summary>
      <returns vsli:raw="An array of &lt;see cref=&quot;T:System.Xml.XmlNode&quot; /&gt; objects that represents the &lt;see langword=&quot;appinfo&quot; /&gt; child nodes.">Tableau d'objets <see cref="T:System.Xml.XmlNode" /> qui représente les nœuds enfants <see langword="appinfo" />.</returns>
    </member>
    <member name="P:System.Xml.Schema.XmlSchemaAppInfo.Source">
      <summary vsli:raw="Gets or sets the source of the application information.">Obtient ou définit la source des informations d'application.</summary>
      <returns vsli:raw="A Uniform Resource Identifier (URI) reference. The default is &lt;see langword=&quot;String.Empty&quot; /&gt;. Optional.">Référence d'URI (Uniform Resource Identifier). La valeur par défaut est <see langword="String.Empty" />. Optionnel.</returns>
    </member>
    <member name="T:System.Xml.Schema.XmlSchemaAttribute">
      <summary vsli:raw="Represents the &lt;see langword=&quot;attribute&quot; /&gt; element from the XML Schema as specified by the World Wide Web Consortium (W3C). Attributes provide additional information for other document elements. The attribute tag is nested between the tags of a document's element for the schema. The XML document displays attributes as named items in the opening tag of an element.">Représente l’élément <see langword="attribute" /> issu du schéma XML, comme spécifié par le W3C (World Wide Web Consortium). Les attributs fournissent des informations supplémentaires pour d'autres éléments du document. L’étiquette attribute est imbriquée entre les étiquettes d’un élément du document pour le schéma. Le document XML affiche les attributs en tant qu’éléments nommés dans l’étiquette d’ouverture d’un élément.</summary>
    </member>
    <member name="M:System.Xml.Schema.XmlSchemaAttribute.#ctor">
      <summary vsli:raw="Initializes a new instance of the &lt;see cref=&quot;T:System.Xml.Schema.XmlSchemaAttribute&quot; /&gt; class.">Initialise une nouvelle instance de la classe <see cref="T:System.Xml.Schema.XmlSchemaAttribute" />.</summary>
    </member>
    <member name="P:System.Xml.Schema.XmlSchemaAttribute.AttributeSchemaType">
      <summary vsli:raw="Gets an &lt;see cref=&quot;T:System.Xml.Schema.XmlSchemaSimpleType&quot; /&gt; object representing the type of the attribute based on the &lt;see cref=&quot;P:System.Xml.Schema.XmlSchemaAttribute.SchemaType&quot; /&gt; or &lt;see cref=&quot;P:System.Xml.Schema.XmlSchemaAttribute.SchemaTypeName&quot; /&gt; of the attribute.">Obtient un objet <see cref="T:System.Xml.Schema.XmlSchemaSimpleType" /> représentant le type de l'attribut basé sur le <see cref="P:System.Xml.Schema.XmlSchemaAttribute.SchemaType" /> ou le <see cref="P:System.Xml.Schema.XmlSchemaAttribute.SchemaTypeName" /> de l'attribut.</summary>
      <returns vsli:raw="An &lt;see cref=&quot;T:System.Xml.Schema.XmlSchemaSimpleType&quot; /&gt; object.">Objet <see cref="T:System.Xml.Schema.XmlSchemaSimpleType" />.</returns>
    </member>
    <member name="P:System.Xml.Schema.XmlSchemaAttribute.AttributeType">
      <summary vsli:raw="Gets the common language runtime (CLR) object based on the &lt;see cref=&quot;P:System.Xml.Schema.XmlSchemaAttribute.SchemaType&quot; /&gt; or &lt;see cref=&quot;P:System.Xml.Schema.XmlSchemaAttribute.SchemaTypeName&quot; /&gt; of the attribute that holds the post-compilation value of the &lt;see langword=&quot;AttributeType&quot; /&gt; property.">Obtient l'objet CLR (common language runtime) basé sur le <see cref="P:System.Xml.Schema.XmlSchemaAttribute.SchemaType" /> ou le <see cref="P:System.Xml.Schema.XmlSchemaAttribute.SchemaTypeName" /> de l'attribut qui contient la valeur de post-compilation de la propriété <see langword="AttributeType" />.</summary>
      <returns vsli:raw="The common runtime library (CLR) object that holds the post-compilation value of the &lt;see langword=&quot;AttributeType&quot; /&gt; property.">L'objet CLR (Common Runtime Library) qui contient la valeur de post-compilation de la propriété <see langword="AttributeType" />.</returns>
    </member>
    <member name="P:System.Xml.Schema.XmlSchemaAttribute.DefaultValue">
      <summary vsli:raw="Gets or sets the default value for the attribute.">Obtient ou définit la valeur par défaut de l'attribut.</summary>
      <returns vsli:raw="The default value for the attribute. The default is a null reference. Optional.">Valeur par défaut de l'attribut. La valeur par défaut est une référence null. Optionnel.</returns>
    </member>
    <member name="P:System.Xml.Schema.XmlSchemaAttribute.FixedValue">
      <summary vsli:raw="Gets or sets the fixed value for the attribute.">Obtient ou définit la valeur fixe de l'attribut.</summary>
      <returns vsli:raw="The fixed value for the attribute. The default is null. Optional.">Valeur fixe de cet attribut. La valeur par défaut est null. Optionnel.</returns>
    </member>
    <member name="P:System.Xml.Schema.XmlSchemaAttribute.Form">
      <summary vsli:raw="Gets or sets the form for the attribute.">Obtient ou définit le formulaire de l'attribut.</summary>
      <returns vsli:raw="One of the &lt;see cref=&quot;T:System.Xml.Schema.XmlSchemaForm&quot; /&gt; values. The default is the value of the &lt;see cref=&quot;P:System.Xml.Schema.XmlSchema.AttributeFormDefault&quot; /&gt; of the schema element containing the attribute. Optional.">Une des valeurs de l'objet <see cref="T:System.Xml.Schema.XmlSchemaForm" />. La valeur par défaut est la valeur du <see cref="P:System.Xml.Schema.XmlSchema.AttributeFormDefault" /> de l'élément du schéma qui contient l'attribut. Optionnel.</returns>
    </member>
    <member name="P:System.Xml.Schema.XmlSchemaAttribute.Name">
      <summary vsli:raw="Gets or sets the name of the attribute.">Obtient ou définit le nom de l'attribut.</summary>
      <returns vsli:raw="The name of the attribute.">Nom de l'attribut.</returns>
    </member>
    <member name="P:System.Xml.Schema.XmlSchemaAttribute.QualifiedName">
      <summary vsli:raw="Gets the qualified name for the attribute.">Obtient le nom qualifié de l'attribut.</summary>
      <returns vsli:raw="The post-compilation value of the &lt;see langword=&quot;QualifiedName&quot; /&gt; property.">Valeur de post-compilation de la propriété <see langword="QualifiedName" />.</returns>
    </member>
    <member name="P:System.Xml.Schema.XmlSchemaAttribute.RefName">
      <summary vsli:raw="Gets or sets the name of an attribute declared in this schema (or another schema indicated by the specified namespace).">Obtient ou définit le nom d'un attribut déclaré dans ce schéma (ou dans un autre schéma indiqué par l'espace de noms spécifié).</summary>
      <returns vsli:raw="The name of the attribute declared.">Nom de l'attribut déclaré.</returns>
    </member>
    <member name="P:System.Xml.Schema.XmlSchemaAttribute.SchemaType">
      <summary vsli:raw="Gets or sets the attribute type to a simple type.">Obtient ou définit le type d'attribut d'un type simple.</summary>
      <returns vsli:raw="The simple type defined in this schema.">Type simple défini dans ce schéma.</returns>
    </member>
    <member name="P:System.Xml.Schema.XmlSchemaAttribute.SchemaTypeName">
      <summary vsli:raw="Gets or sets the name of the simple type defined in this schema (or another schema indicated by the specified namespace).">Obtient ou définit le nom du type simple défini dans ce schéma (ou dans un autre schéma indiqué par l'espace de noms spécifié).</summary>
      <returns vsli:raw="The name of the simple type.">Nom du type simple.</returns>
    </member>
    <member name="P:System.Xml.Schema.XmlSchemaAttribute.Use">
      <summary vsli:raw="Gets or sets information about how the attribute is used.">Obtient ou définit des informations sur l'utilisation de l'attribut.</summary>
      <returns vsli:raw="One of the following values: None, Prohibited, Optional, or Required. The default is Optional. Optional.">Une des valeurs suivantes : Aucun, Interdit, Facultatif ou Obligatoire. La valeur par défaut est Facultatif. Optionnel.</returns>
    </member>
    <member name="T:System.Xml.Schema.XmlSchemaAttributeGroup">
      <summary vsli:raw="Represents the &lt;see langword=&quot;attributeGroup&quot; /&gt; element from the XML Schema as specified by the World Wide Web Consortium (W3C). AttributesGroups provides a mechanism to group a set of attribute declarations so that they can be incorporated as a group into complex type definitions.">Représente l’élément <see langword="attributeGroup" /> issu du schéma XML, comme spécifié par le W3C (World Wide Web Consortium). AttributesGroups fournit un mécanisme permettant de regrouper un ensemble de déclarations d'attributs pour qu'elles puissent être incorporées en tant que groupe dans des définitions de types complexes.</summary>
    </member>
    <member name="M:System.Xml.Schema.XmlSchemaAttributeGroup.#ctor">
      <summary vsli:raw="Initializes a new instance of the &lt;see cref=&quot;T:System.Xml.Schema.XmlSchemaAttributeGroup&quot; /&gt; class.">Initialise une nouvelle instance de la classe <see cref="T:System.Xml.Schema.XmlSchemaAttributeGroup" />.</summary>
    </member>
    <member name="P:System.Xml.Schema.XmlSchemaAttributeGroup.AnyAttribute">
      <summary vsli:raw="Gets or sets the &lt;see cref=&quot;T:System.Xml.Schema.XmlSchemaAnyAttribute&quot; /&gt; component of the attribute group.">Obtient ou définit le composant <see cref="T:System.Xml.Schema.XmlSchemaAnyAttribute" /> du groupe d'attributs.</summary>
      <returns vsli:raw="The World Wide Web Consortium (W3C) &lt;see langword=&quot;anyAttribute&quot; /&gt; element.">Élément World Wide Web Consortium (W3C) <see langword="anyAttribute" />.</returns>
    </member>
    <member name="P:System.Xml.Schema.XmlSchemaAttributeGroup.Attributes">
      <summary vsli:raw="Gets the collection of attributes for the attribute group. Contains &lt;see langword=&quot;XmlSchemaAttribute&quot; /&gt; and &lt;see langword=&quot;XmlSchemaAttributeGroupRef&quot; /&gt; elements.">Obtient la collection d’attributs pour le groupe d’attributs. Contient les éléments <see langword="XmlSchemaAttribute" /> et <see langword="XmlSchemaAttributeGroupRef" />.</summary>
      <returns vsli:raw="The collection of attributes for the attribute group.">Collection d'attributs pour le groupe d'attributs.</returns>
    </member>
    <member name="P:System.Xml.Schema.XmlSchemaAttributeGroup.Name">
      <summary vsli:raw="Gets or sets the name of the attribute group.">Obtient ou définit le nom du groupe d'attributs.</summary>
      <returns vsli:raw="The name of the attribute group.">Nom du groupe d'attributs.</returns>
    </member>
    <member name="P:System.Xml.Schema.XmlSchemaAttributeGroup.QualifiedName">
      <summary vsli:raw="Gets the qualified name of the attribute group.">Obtient le nom qualifié du groupe d'attributs.</summary>
      <returns vsli:raw="The qualified name of the attribute group.">Nom qualifié du groupe d'attributs.</returns>
    </member>
    <member name="P:System.Xml.Schema.XmlSchemaAttributeGroup.RedefinedAttributeGroup">
      <summary vsli:raw="Gets the redefined attribute group property from the XML Schema.">Obtient la propriété du groupe d'attributs redéfini à partir du schéma XML.</summary>
      <returns vsli:raw="The redefined attribute group property.">Propriété du groupe d'attributs redéfini.</returns>
    </member>
    <member name="T:System.Xml.Schema.XmlSchemaAttributeGroupRef">
      <summary vsli:raw="Represents the &lt;see langword=&quot;attributeGroup&quot; /&gt; element with the &lt;see langword=&quot;ref&quot; /&gt; attribute from the XML Schema as specified by the World Wide Web Consortium (W3C). AttributesGroupRef is the reference for an attributeGroup, name property contains the attribute group being referenced.">Représente l’élément <see langword="attributeGroup" /> avec l’attribut <see langword="ref" /> du schéma XML tel que spécifié par le W3C (World Wide Web Consortium). AttributesGroupRef est la référence de attributeGroup, la propriété name contient le groupe d'attributs référencé.</summary>
    </member>
    <member name="M:System.Xml.Schema.XmlSchemaAttributeGroupRef.#ctor">
      <summary vsli:raw="Initializes a new instance of the &lt;see cref=&quot;T:System.Xml.Schema.XmlSchemaAttributeGroupRef&quot; /&gt; class.">Initialise une nouvelle instance de la classe <see cref="T:System.Xml.Schema.XmlSchemaAttributeGroupRef" />.</summary>
    </member>
    <member name="P:System.Xml.Schema.XmlSchemaAttributeGroupRef.RefName">
      <summary vsli:raw="Gets or sets the name of the referenced &lt;see langword=&quot;attributeGroup&quot; /&gt; element.">Obtient ou définit le nom de l'élément <see langword="attributeGroup" /> référencé.</summary>
      <returns vsli:raw="The name of the referenced attribute group. The value must be a QName.">Nom du groupe d'attributs référencé. La valeur doit être de type QName.</returns>
    </member>
    <member name="T:System.Xml.Schema.XmlSchemaChoice">
      <summary vsli:raw="Represents the &lt;see langword=&quot;choice&quot; /&gt; element (compositor) from the XML Schema as specified by the World Wide Web Consortium (W3C). The &lt;see langword=&quot;choice&quot; /&gt; allows only one of its children to appear in an instance.">Représente l’élément <see langword="choice" /> (compositeur) issu d’un schéma XML comme spécifié par le W3C (World Wide Web Consortium). <see langword="choice" /> ne permet l'apparition que d'un seul de ses enfants par instance.</summary>
    </member>
    <member name="M:System.Xml.Schema.XmlSchemaChoice.#ctor">
      <summary vsli:raw="Initializes a new instance of the &lt;see cref=&quot;T:System.Xml.Schema.XmlSchemaChoice&quot; /&gt; class.">Initialise une nouvelle instance de la classe <see cref="T:System.Xml.Schema.XmlSchemaChoice" />.</summary>
    </member>
    <member name="P:System.Xml.Schema.XmlSchemaChoice.Items">
      <summary vsli:raw="Gets the collection of the elements contained with the compositor (&lt;see langword=&quot;choice&quot; /&gt;): &lt;see langword=&quot;XmlSchemaElement&quot; /&gt;, &lt;see langword=&quot;XmlSchemaGroupRef&quot; /&gt;, &lt;see langword=&quot;XmlSchemaChoice&quot; /&gt;, &lt;see langword=&quot;XmlSchemaSequence&quot; /&gt;, or &lt;see langword=&quot;XmlSchemaAny&quot; /&gt;.">Obtient la collection des éléments contenus avec le compositeur (<see langword="choice" />) : <see langword="XmlSchemaElement" />, <see langword="XmlSchemaGroupRef" />, <see langword="XmlSchemaChoice" />, <see langword="XmlSchemaSequence" /> ou <see langword="XmlSchemaAny" />.</summary>
      <returns vsli:raw="The collection of elements contained within &lt;see langword=&quot;XmlSchemaChoice&quot; /&gt;.">Collection d'éléments contenus dans <see langword="XmlSchemaChoice" />.</returns>
    </member>
    <member name="T:System.Xml.Schema.XmlSchemaCollection">
      <summary vsli:raw="Contains a cache of XML Schema definition language (XSD) and XML-Data Reduced (XDR) schemas. The &lt;see cref=&quot;T:System.Xml.Schema.XmlSchemaCollection&quot; /&gt; class is obsolete. Use &lt;see cref=&quot;T:System.Xml.Schema.XmlSchemaSet&quot; /&gt; instead.">Contient un cache de schémas en langage XSD (XML Schema Definition) et de schémas XDR (XML-Data Reduced). La classe <see cref="T:System.Xml.Schema.XmlSchemaCollection" /> est obsolète. Utilisez plutôt <see cref="T:System.Xml.Schema.XmlSchemaSet" />.</summary>
    </member>
    <member name="E:System.Xml.Schema.XmlSchemaCollection.ValidationEventHandler">
      <summary vsli:raw="Sets an event handler for receiving information about the XDR and XML schema validation errors.">Définit un gestionnaire d’événements pour recevoir des informations sur les erreurs de validation des schémas XDR et XML.</summary>
    </member>
    <member name="M:System.Xml.Schema.XmlSchemaCollection.#ctor">
      <summary vsli:raw="Initializes a new instance of the &lt;see langword=&quot;XmlSchemaCollection&quot; /&gt; class.">Initialise une nouvelle instance de la classe <see langword="XmlSchemaCollection" />.</summary>
    </member>
    <member name="M:System.Xml.Schema.XmlSchemaCollection.#ctor(System.Xml.XmlNameTable)">
      <summary vsli:raw="Initializes a new instance of the &lt;see langword=&quot;XmlSchemaCollection&quot; /&gt; class with the specified &lt;see cref=&quot;T:System.Xml.XmlNameTable&quot; /&gt;. The &lt;see langword=&quot;XmlNameTable&quot; /&gt; is used when loading schemas.">Initialise une nouvelle instance de la classe <see langword="XmlSchemaCollection" /> avec le <see cref="T:System.Xml.XmlNameTable" /> spécifié. <see langword="XmlNameTable" /> est utilisé lors du chargement des schémas.</summary>
      <param name="nametable" vsli:raw="The &lt;see langword=&quot;XmlNameTable&quot; /&gt; to use.">
        <see langword="XmlNameTable" /> à utiliser.</param>
    </member>
    <member name="M:System.Xml.Schema.XmlSchemaCollection.Add(System.String,System.String)">
      <summary vsli:raw="Adds the schema located by the given URL into the schema collection.">Ajoute le schéma indiqué par l'URL donnée à la collection de schémas.</summary>
      <param name="ns" vsli:raw="The namespace URI associated with the schema. For XML Schemas, this will typically be the &lt;see langword=&quot;targetNamespace&quot; /&gt;.">URI d'espace de noms associé au schéma. Pour les schémas XML, il s'agit généralement de <see langword="targetNamespace" />.</param>
      <param name="uri" vsli:raw="The URL that specifies the schema to load.">URL qui spécifie le schéma à charger.</param>
      <exception cref="T:System.Xml.XmlException" vsli:raw="The schema is not a valid schema.">Le schéma n'est pas valide.</exception>
      <returns vsli:raw="The &lt;see cref=&quot;T:System.Xml.Schema.XmlSchema&quot; /&gt; added to the schema collection; &lt;see langword=&quot;null&quot; /&gt; if the schema being added is an XDR schema or if there are compilation errors in the schema.">
        <see cref="T:System.Xml.Schema.XmlSchema" /> ajouté à la collection de schémas ; <see langword="null" /> si le schéma ajouté est de type XDR (XML-Data Reduced), ou si celui-ci présente des erreurs de compilation.</returns>
    </member>
    <member name="M:System.Xml.Schema.XmlSchemaCollection.Add(System.String,System.Xml.XmlReader)">
      <summary vsli:raw="Adds the schema contained in the &lt;see cref=&quot;T:System.Xml.XmlReader&quot; /&gt; to the schema collection.">Ajoute le schéma contenu dans <see cref="T:System.Xml.XmlReader" /> à la collection de schémas.</summary>
      <param name="ns" vsli:raw="The namespace URI associated with the schema. For XML Schemas, this will typically be the &lt;see langword=&quot;targetNamespace&quot; /&gt;.">URI d'espace de noms associé au schéma. Pour les schémas XML, il s'agit généralement de <see langword="targetNamespace" />.</param>
      <param name="reader" vsli:raw="&lt;see cref=&quot;T:System.Xml.XmlReader&quot; /&gt; containing the schema to add.">
        <see cref="T:System.Xml.XmlReader" /> contenant le schéma à ajouter.</param>
      <exception cref="T:System.Xml.XmlException" vsli:raw="The schema is not a valid schema.">Le schéma n'est pas valide.</exception>
      <returns vsli:raw="The &lt;see cref=&quot;T:System.Xml.Schema.XmlSchema&quot; /&gt; added to the schema collection; &lt;see langword=&quot;null&quot; /&gt; if the schema being added is an XDR schema or if there are compilation errors in the schema.">
        <see cref="T:System.Xml.Schema.XmlSchema" /> ajouté à la collection de schémas ; <see langword="null" /> si le schéma ajouté est de type XDR (XML-Data Reduced), ou si celui-ci présente des erreurs de compilation.</returns>
    </member>
    <member name="M:System.Xml.Schema.XmlSchemaCollection.Add(System.String,System.Xml.XmlReader,System.Xml.XmlResolver)">
      <summary vsli:raw="Adds the schema contained in the &lt;see cref=&quot;T:System.Xml.XmlReader&quot; /&gt; to the schema collection. The specified &lt;see cref=&quot;T:System.Xml.XmlResolver&quot; /&gt; is used to resolve any external resources.">Ajoute le schéma contenu dans <see cref="T:System.Xml.XmlReader" /> à la collection de schémas. Le <see cref="T:System.Xml.XmlResolver" /> spécifié permet de résoudre les ressources externes.</summary>
      <param name="ns" vsli:raw="The namespace URI associated with the schema. For XML Schemas, this will typically be the &lt;see langword=&quot;targetNamespace&quot; /&gt;.">URI d'espace de noms associé au schéma. Pour les schémas XML, il s'agit généralement de <see langword="targetNamespace" />.</param>
      <param name="reader" vsli:raw="&lt;see cref=&quot;T:System.Xml.XmlReader&quot; /&gt; containing the schema to add.">
        <see cref="T:System.Xml.XmlReader" /> contenant le schéma à ajouter.</param>
      <param name="resolver" vsli:raw="The &lt;see cref=&quot;T:System.Xml.XmlResolver&quot; /&gt; used to resolve namespaces referenced in &lt;see langword=&quot;include&quot; /&gt; and &lt;see langword=&quot;import&quot; /&gt; elements or &lt;see langword=&quot;x-schema&quot; /&gt; attribute (XDR schemas). If this is &lt;see langword=&quot;null&quot; /&gt;, external references are not resolved.">
        <see cref="T:System.Xml.XmlResolver" /> utilisé pour résoudre les espaces de noms référencés par les éléments <see langword="include" /> et <see langword="import" />, ou par l'attribut <see langword="x-schema" /> (schémas XDR). Si la valeur est <see langword="null" />, les ressources externes ne sont pas résolues.</param>
      <exception cref="T:System.Xml.XmlException" vsli:raw="The schema is not a valid schema.">Le schéma n'est pas valide.</exception>
      <returns vsli:raw="The &lt;see cref=&quot;T:System.Xml.Schema.XmlSchema&quot; /&gt; added to the schema collection; &lt;see langword=&quot;null&quot; /&gt; if the schema being added is an XDR schema or if there are compilation errors in the schema.">
        <see cref="T:System.Xml.Schema.XmlSchema" /> ajouté à la collection de schémas ; <see langword="null" /> si le schéma ajouté est de type XDR (XML-Data Reduced), ou si celui-ci présente des erreurs de compilation.</returns>
    </member>
    <member name="M:System.Xml.Schema.XmlSchemaCollection.Add(System.Xml.Schema.XmlSchema)">
      <summary vsli:raw="Adds the &lt;see cref=&quot;T:System.Xml.Schema.XmlSchema&quot; /&gt; to the collection.">Ajoute le <see cref="T:System.Xml.Schema.XmlSchema" /> à la collection.</summary>
      <param name="schema" vsli:raw="The &lt;see langword=&quot;XmlSchema&quot; /&gt; to add to the collection.">Objet <see langword="XmlSchema" /> à ajouter à la collection.</param>
      <returns vsli:raw="The &lt;see langword=&quot;XmlSchema&quot; /&gt; object.">Objet <see langword="XmlSchema" />.</returns>
    </member>
    <member name="M:System.Xml.Schema.XmlSchemaCollection.Add(System.Xml.Schema.XmlSchema,System.Xml.XmlResolver)">
      <summary vsli:raw="Adds the &lt;see cref=&quot;T:System.Xml.Schema.XmlSchema&quot; /&gt; to the collection. The specified &lt;see cref=&quot;T:System.Xml.XmlResolver&quot; /&gt; is used to resolve any external references.">Ajoute le <see cref="T:System.Xml.Schema.XmlSchema" /> à la collection. Le <see cref="T:System.Xml.XmlResolver" /> spécifié permet de résoudre les références externes.</summary>
      <param name="schema" vsli:raw="The &lt;see langword=&quot;XmlSchema&quot; /&gt; to add to the collection.">Objet <see langword="XmlSchema" /> à ajouter à la collection.</param>
      <param name="resolver" vsli:raw="The &lt;see cref=&quot;T:System.Xml.XmlResolver&quot; /&gt; used to resolve namespaces referenced in &lt;see langword=&quot;include&quot; /&gt; and &lt;see langword=&quot;import&quot; /&gt; elements. If this is &lt;see langword=&quot;null&quot; /&gt;, external references are not resolved.">
        <see cref="T:System.Xml.XmlResolver" /> utilisé pour résoudre les espaces de noms référencés par les éléments <see langword="include" /> et <see langword="import" />. Si la valeur est <see langword="null" />, les ressources externes ne sont pas résolues.</param>
      <exception cref="T:System.Xml.XmlException" vsli:raw="The schema is not a valid schema.">Le schéma n'est pas valide.</exception>
      <returns vsli:raw="The &lt;see langword=&quot;XmlSchema&quot; /&gt; added to the schema collection.">
        <see langword="XmlSchema" /> ajouté à la collection de schémas.</returns>
    </member>
    <member name="M:System.Xml.Schema.XmlSchemaCollection.Add(System.Xml.Schema.XmlSchemaCollection)">
      <summary vsli:raw="Adds all the namespaces defined in the given collection (including their associated schemas) to this collection.">Ajoute tous les espaces de noms définis dans la collection donnée (y compris les schémas associés) à cette collection.</summary>
      <param name="schema" vsli:raw="The &lt;see langword=&quot;XmlSchemaCollection&quot; /&gt; you want to add to this collection.">
        <see langword="XmlSchemaCollection" /> que vous souhaitez ajouter à la collection.</param>
    </member>
    <member name="M:System.Xml.Schema.XmlSchemaCollection.Contains(System.String)">
      <summary vsli:raw="Gets a value indicating whether a schema with the specified namespace is in the collection.">Obtient une valeur indiquant si le schéma comportant l'espace de noms spécifié fait partie de la collection.</summary>
      <param name="ns" vsli:raw="The namespace URI associated with the schema. For XML Schemas, this will typically be the target namespace.">URI d'espace de noms associé au schéma. Pour les schémas XML, il s'agit généralement de l'espace de noms cible.</param>
      <returns vsli:raw="&lt;see langword=&quot;true&quot; /&gt; if a schema with the specified namespace is in the collection; otherwise, &lt;see langword=&quot;false&quot; /&gt;.">
        <see langword="true" /> si le schéma comportant l'espace de noms spécifié se trouve dans la collection ; sinon, <see langword="false" />.</returns>
    </member>
    <member name="M:System.Xml.Schema.XmlSchemaCollection.Contains(System.Xml.Schema.XmlSchema)">
      <summary vsli:raw="Gets a value indicating whether the &lt;see langword=&quot;targetNamespace&quot; /&gt; of the specified &lt;see cref=&quot;T:System.Xml.Schema.XmlSchema&quot; /&gt; is in the collection.">Obtient une valeur indiquant si le <see langword="targetNamespace" /> du <see cref="T:System.Xml.Schema.XmlSchema" /> spécifié se trouve dans la collection.</summary>
      <param name="schema" vsli:raw="The &lt;see langword=&quot;XmlSchema&quot; /&gt; object.">Objet <see langword="XmlSchema" />.</param>
      <returns vsli:raw="&lt;see langword=&quot;true&quot; /&gt; if there is a schema in the collection with the same &lt;see langword=&quot;targetNamespace&quot; /&gt;; otherwise, &lt;see langword=&quot;false&quot; /&gt;.">
        <see langword="true" /> si un schéma comportant le même <see langword="targetNamespace" /> se trouve dans la collection ; sinon, <see langword="false" />.</returns>
    </member>
    <member name="M:System.Xml.Schema.XmlSchemaCollection.CopyTo(System.Xml.Schema.XmlSchema[],System.Int32)">
      <summary vsli:raw="Copies all the &lt;see langword=&quot;XmlSchema&quot; /&gt; objects from this collection into the given array starting at the given index.">Copie tous les objets <see langword="XmlSchema" /> de la collection dans le tableau donné, en commençant à l'index spécifié.</summary>
      <param name="array" vsli:raw="The array to copy the objects to.">Tableau dans lequel copier les objets.</param>
      <param name="index" vsli:raw="The index in &lt;paramref name=&quot;array&quot; /&gt; where copying will begin.">Index de <paramref name="array" /> où la copie commence.</param>
    </member>
    <member name="M:System.Xml.Schema.XmlSchemaCollection.GetEnumerator">
      <summary vsli:raw="Provides support for the &quot;for each&quot; style iteration over the collection of schemas.">Fournit une prise en charge de l’itération de style « For each » sur la collection de schémas.</summary>
      <returns vsli:raw="An enumerator for iterating over all schemas in the current collection.">Énumérateur permettant l'itération sur tous les schémas de la collection actuelle.</returns>
    </member>
    <member name="M:System.Xml.Schema.XmlSchemaCollection.System#Collections#ICollection#CopyTo(System.Array,System.Int32)">
      <summary vsli:raw="For a description of this member, see &lt;see cref=&quot;M:System.Xml.Schema.XmlSchemaCollection.CopyTo(System.Xml.Schema.XmlSchema[],System.Int32)&quot; /&gt;.">Pour obtenir une description de ce membre, consultez <see cref="M:System.Xml.Schema.XmlSchemaCollection.CopyTo(System.Xml.Schema.XmlSchema[],System.Int32)" />.</summary>
      <param name="array" vsli:raw="The array to copy the objects to.">Tableau dans lequel copier les objets.</param>
      <param name="index" vsli:raw="The index in &lt;paramref name=&quot;array&quot; /&gt; where copying will begin.">Index de <paramref name="array" /> où la copie commence.</param>
    </member>
    <member name="M:System.Xml.Schema.XmlSchemaCollection.System#Collections#IEnumerable#GetEnumerator">
      <summary vsli:raw="For a description of this member, see &lt;see cref=&quot;M:System.Xml.Schema.XmlSchemaCollection.GetEnumerator&quot; /&gt;.">Pour obtenir une description de ce membre, consultez <see cref="M:System.Xml.Schema.XmlSchemaCollection.GetEnumerator" />.</summary>
      <returns vsli:raw="The &lt;see cref=&quot;T:System.Collections.IEnumerator&quot; /&gt; for the collection.">
        <see cref="T:System.Collections.IEnumerator" /> pour la collection.</returns>
    </member>
    <member name="P:System.Xml.Schema.XmlSchemaCollection.Count">
      <summary vsli:raw="Gets the number of namespaces defined in this collection.">Obtient le nombre d’espaces de noms définis dans cette collection.</summary>
      <returns vsli:raw="The number of namespaces defined in this collection.">Nombre d’espaces de noms définis dans cette collection.</returns>
    </member>
    <member name="P:System.Xml.Schema.XmlSchemaCollection.Item(System.String)">
      <summary vsli:raw="Gets the &lt;see cref=&quot;T:System.Xml.Schema.XmlSchema&quot; /&gt; associated with the given namespace URI.">Obtient le <see cref="T:System.Xml.Schema.XmlSchema" /> associé à l'URI d'espace de noms donné.</summary>
      <param name="ns" vsli:raw="The namespace URI associated with the schema you want to return. This will typically be the &lt;see langword=&quot;targetNamespace&quot; /&gt; of the schema.">URI d'espace de noms associé au schéma que vous souhaitez retourner. Il s'agit généralement du <see langword="targetNamespace" /> du schéma.</param>
      <returns vsli:raw="The &lt;see langword=&quot;XmlSchema&quot; /&gt; associated with the namespace URI; &lt;see langword=&quot;null&quot; /&gt; if there is no loaded schema associated with the given namespace or if the namespace is associated with an XDR schema.">
        <see langword="XmlSchema" /> associé à l'URI d'espace de noms ; <see langword="null" /> si aucun schéma associé à l'espace de noms spécifié n'est chargé ou si l'espace de noms est associé à un schéma XDR.</returns>
    </member>
    <member name="P:System.Xml.Schema.XmlSchemaCollection.NameTable">
      <summary vsli:raw="Gets the default &lt;see langword=&quot;XmlNameTable&quot; /&gt; used by the &lt;see langword=&quot;XmlSchemaCollection&quot; /&gt; when loading new schemas.">Obtient le <see langword="XmlNameTable" /> par défaut utilisé par <see langword="XmlSchemaCollection" /> lors du chargement de nouveaux schémas.</summary>
      <returns vsli:raw="An &lt;see langword=&quot;XmlNameTable&quot; /&gt;.">Élément <see langword="XmlNameTable" />.</returns>
    </member>
    <member name="P:System.Xml.Schema.XmlSchemaCollection.System#Collections#ICollection#Count">
      <summary vsli:raw="For a description of this member, see &lt;see cref=&quot;P:System.Xml.Schema.XmlSchemaCollection.Count&quot; /&gt;.">Pour obtenir une description de ce membre, consultez <see cref="P:System.Xml.Schema.XmlSchemaCollection.Count" />.</summary>
      <returns vsli:raw="The count of the items in the collection.">Nombre d’éléments dans la collection.</returns>
    </member>
    <member name="P:System.Xml.Schema.XmlSchemaCollection.System#Collections#ICollection#IsSynchronized">
      <summary vsli:raw="For a description of this member, see &lt;see cref=&quot;P:System.Xml.Schema.XmlSchemaCollection.System#Collections#ICollection#IsSynchronized&quot; /&gt;.">Pour obtenir une description de ce membre, consultez <see cref="P:System.Xml.Schema.XmlSchemaCollection.System#Collections#ICollection#IsSynchronized" />.</summary>
      <returns vsli:raw="&lt;see langword=&quot;true&quot; /&gt; if the collection is synchronized; otherwise, &lt;see langword=&quot;false&quot; /&gt;.">
        <see langword="true" /> si la collection est synchronisée ; sinon, <see langword="false" />.</returns>
    </member>
    <member name="P:System.Xml.Schema.XmlSchemaCollection.System#Collections#ICollection#SyncRoot">
      <summary vsli:raw="For a description of this member, see &lt;see cref=&quot;P:System.Xml.Schema.XmlSchemaCollection.System#Collections#ICollection#SyncRoot&quot; /&gt;.">Pour obtenir une description de ce membre, consultez <see cref="P:System.Xml.Schema.XmlSchemaCollection.System#Collections#ICollection#SyncRoot" />.</summary>
      <returns vsli:raw="A &lt;see cref=&quot;P:System.Collections.ICollection.SyncRoot&quot; /&gt; object that can be used to synchronize access to the collection.">
        <see cref="P:System.Collections.ICollection.SyncRoot" />Objet qui peut être utilisé pour synchroniser l’accès à la collection.</returns>
    </member>
    <member name="T:System.Xml.Schema.XmlSchemaCollectionEnumerator">
      <summary vsli:raw="Supports a simple iteration over a collection. This class cannot be inherited.">Prend en charge une itération simple sur une collection. Cette classe ne peut pas être héritée.</summary>
    </member>
    <member name="M:System.Xml.Schema.XmlSchemaCollectionEnumerator.MoveNext">
      <summary vsli:raw="Advances the enumerator to the next schema in the collection.">Avance l'énumérateur jusqu'au schéma suivant de la collection.</summary>
      <returns vsli:raw="&lt;see langword=&quot;true&quot; /&gt; if the move was successful; &lt;see langword=&quot;false&quot; /&gt; if the enumerator has passed the end of the collection.">
        <see langword="true" /> si le passage au schéma suivant réussi ; <see langword="false" /> si l'énumérateur a dépassé la fin de la collection.</returns>
    </member>
    <member name="M:System.Xml.Schema.XmlSchemaCollectionEnumerator.System#Collections#IEnumerator#MoveNext">
      <summary vsli:raw="For a description of this member, see &lt;see cref=&quot;M:System.Xml.Schema.XmlSchemaCollectionEnumerator.MoveNext&quot; /&gt;.">Pour obtenir une description de ce membre, consultez <see cref="M:System.Xml.Schema.XmlSchemaCollectionEnumerator.MoveNext" />.</summary>
      <returns vsli:raw="The next node.">Nœud suivant.</returns>
    </member>
    <member name="M:System.Xml.Schema.XmlSchemaCollectionEnumerator.System#Collections#IEnumerator#Reset">
      <summary vsli:raw="For a description of this member, see &lt;see cref=&quot;M:System.Xml.Schema.XmlSchemaCollectionEnumerator.System#Collections#IEnumerator#Reset&quot; /&gt;.">Pour obtenir une description de ce membre, consultez <see cref="M:System.Xml.Schema.XmlSchemaCollectionEnumerator.System#Collections#IEnumerator#Reset" />.</summary>
    </member>
    <member name="P:System.Xml.Schema.XmlSchemaCollectionEnumerator.Current">
      <summary vsli:raw="Gets the current &lt;see cref=&quot;T:System.Xml.Schema.XmlSchema&quot; /&gt; in the collection.">Obtient le <see cref="T:System.Xml.Schema.XmlSchema" /> en cours dans la collection.</summary>
      <returns vsli:raw="The current &lt;see langword=&quot;XmlSchema&quot; /&gt; in the collection.">
        <see langword="XmlSchema" /> en cours dans la collection.</returns>
    </member>
    <member name="P:System.Xml.Schema.XmlSchemaCollectionEnumerator.System#Collections#IEnumerator#Current">
      <summary vsli:raw="For a description of this member, see &lt;see cref=&quot;P:System.Xml.Schema.XmlSchemaCollectionEnumerator.Current&quot; /&gt;.">Pour obtenir une description de ce membre, consultez <see cref="P:System.Xml.Schema.XmlSchemaCollectionEnumerator.Current" />.</summary>
      <returns vsli:raw="The current node.">Nœud actuel.</returns>
    </member>
    <member name="T:System.Xml.Schema.XmlSchemaCompilationSettings">
      <summary vsli:raw="Provides schema compilation options for the &lt;see cref=&quot;T:System.Xml.Schema.XmlSchemaSet&quot; /&gt; class This class cannot be inherited.">Fournit des options de compilation de schéma pour la classe <see cref="T:System.Xml.Schema.XmlSchemaSet" />. Cette classe ne peut pas être héritée.</summary>
    </member>
    <member name="M:System.Xml.Schema.XmlSchemaCompilationSettings.#ctor">
      <summary vsli:raw="Initializes a new instance of the &lt;see cref=&quot;T:System.Xml.Schema.XmlSchemaCompilationSettings&quot; /&gt; class.">Initialise une nouvelle instance de la classe <see cref="T:System.Xml.Schema.XmlSchemaCompilationSettings" />.</summary>
    </member>
    <member name="P:System.Xml.Schema.XmlSchemaCompilationSettings.EnableUpaCheck">
      <summary vsli:raw="Gets or sets a value indicating whether the &lt;see cref=&quot;T:System.Xml.Schema.XmlSchemaSet&quot; /&gt; should check for Unique Particle Attribution (UPA) violations.">Obtient ou définit une valeur indiquant si <see cref="T:System.Xml.Schema.XmlSchemaSet" /> doit vérifier les violations UPA (Unique Particle Attribution).</summary>
      <returns vsli:raw="&lt;see langword=&quot;true&quot; /&gt; if the &lt;see cref=&quot;T:System.Xml.Schema.XmlSchemaSet&quot; /&gt; should check for Unique Particle Attribution (UPA) violations; otherwise, &lt;see langword=&quot;false&quot; /&gt;. The default is &lt;see langword=&quot;true&quot; /&gt;.">
        <see langword="true" /> si <see cref="T:System.Xml.Schema.XmlSchemaSet" /> doit vérifier les violations UPA (Unique Particle Attribution) ; sinon, <see langword="false" />. La valeur par défaut est <see langword="true" />.</returns>
    </member>
    <member name="T:System.Xml.Schema.XmlSchemaComplexContent">
      <summary vsli:raw="Represents the &lt;see langword=&quot;complexContent&quot; /&gt; element from XML Schema as specified by the World Wide Web Consortium (W3C). This class represents the complex content model for complex types. It contains extensions or restrictions on a complex type that has either only elements or mixed content.">Représente l'élément <see langword="complexContent" /> issu d'un schéma XML comme spécifié par le W3C (World Wide Web Consortium). Cette classe représente le modèle de contenu complexe des types complexes. Elle contient des extensions ou des restrictions portant sur un type complexe qui contient uniquement des éléments ou un contenu mixte.</summary>
    </member>
    <member name="M:System.Xml.Schema.XmlSchemaComplexContent.#ctor">
      <summary vsli:raw="Initializes a new instance of the &lt;see cref=&quot;T:System.Xml.Schema.XmlSchemaComplexContent&quot; /&gt; class.">Initialise une nouvelle instance de la classe <see cref="T:System.Xml.Schema.XmlSchemaComplexContent" />.</summary>
    </member>
    <member name="P:System.Xml.Schema.XmlSchemaComplexContent.Content">
      <summary vsli:raw="Gets or sets the content.">Obtient ou définit le contenu.</summary>
      <returns vsli:raw="One of either the &lt;see cref=&quot;T:System.Xml.Schema.XmlSchemaComplexContentRestriction&quot; /&gt; or &lt;see cref=&quot;T:System.Xml.Schema.XmlSchemaComplexContentExtension&quot; /&gt; classes.">L'une des classes <see cref="T:System.Xml.Schema.XmlSchemaComplexContentRestriction" /> ou <see cref="T:System.Xml.Schema.XmlSchemaComplexContentExtension" />.</returns>
    </member>
    <member name="P:System.Xml.Schema.XmlSchemaComplexContent.IsMixed">
      <summary vsli:raw="Gets or sets information that determines if the type has a mixed content model.">Obtient ou définit les informations qui déterminent si le type possède un modèle de contenu mixte.</summary>
      <returns vsli:raw="If this property is &lt;see langword=&quot;true&quot; /&gt;, character data is allowed to appear between the child elements of the complex type (mixed content model). The default is &lt;see langword=&quot;false&quot; /&gt;. Optional.">Si la propriété a la valeur <see langword="true" />, les données caractères peuvent apparaître entre les éléments enfants du type complexe (modèle de contenu mixte). La valeur par défaut est <see langword="false" />. Optionnel.</returns>
    </member>
    <member name="T:System.Xml.Schema.XmlSchemaComplexContentExtension">
      <summary vsli:raw="Represents the &lt;see langword=&quot;extension&quot; /&gt; element from XML Schema as specified by the World Wide Web Consortium (W3C). This class is for complex types with complex content model derived by extension. It extends the complex type by adding attributes or elements.">Représente l'élément <see langword="extension" /> issu d'un schéma XML comme spécifié par le W3C (World Wide Web Consortium). Cette classe concerne les types complexes possédant un modèle de contenu complexe dérivé par extension. Elle étend le type complexe en ajoutant des attributs ou des éléments.</summary>
    </member>
    <member name="M:System.Xml.Schema.XmlSchemaComplexContentExtension.#ctor">
      <summary vsli:raw="Initializes a new instance of the &lt;see cref=&quot;T:System.Xml.Schema.XmlSchemaComplexContentExtension&quot; /&gt; class.">Initialise une nouvelle instance de la classe <see cref="T:System.Xml.Schema.XmlSchemaComplexContentExtension" />.</summary>
    </member>
    <member name="P:System.Xml.Schema.XmlSchemaComplexContentExtension.AnyAttribute">
      <summary vsli:raw="Gets or sets the &lt;see cref=&quot;T:System.Xml.Schema.XmlSchemaAnyAttribute&quot; /&gt; component of the complex content model.">Obtient ou définit le composant <see cref="T:System.Xml.Schema.XmlSchemaAnyAttribute" /> du modèle de contenu complexe.</summary>
      <returns vsli:raw="The &lt;see cref=&quot;T:System.Xml.Schema.XmlSchemaAnyAttribute&quot; /&gt; component of the complex content model.">Composant <see cref="T:System.Xml.Schema.XmlSchemaAnyAttribute" /> du modèle de contenu complexe.</returns>
    </member>
    <member name="P:System.Xml.Schema.XmlSchemaComplexContentExtension.Attributes">
      <summary vsli:raw="Gets the collection of attributes for the complex content. Contains &lt;see cref=&quot;T:System.Xml.Schema.XmlSchemaAttribute&quot; /&gt; and &lt;see cref=&quot;T:System.Xml.Schema.XmlSchemaAttributeGroupRef&quot; /&gt; elements.">Obtient la collection d'attributs pour le contenu complexe. Contient les éléments <see cref="T:System.Xml.Schema.XmlSchemaAttribute" /> et <see cref="T:System.Xml.Schema.XmlSchemaAttributeGroupRef" />.</summary>
      <returns vsli:raw="The collection of attributes for the complex content.">Collection d’attributs pour le contenu complexe.</returns>
    </member>
    <member name="P:System.Xml.Schema.XmlSchemaComplexContentExtension.BaseTypeName">
      <summary vsli:raw="Gets or sets the name of the complex type from which this type is derived by extension.">Obtient ou définit le nom du type complexe à partir duquel ce type est dérivé par extension.</summary>
      <returns vsli:raw="The name of the complex type from which this type is derived by extension.">Nom du type complexe à partir duquel ce type est dérivé par extension.</returns>
    </member>
    <member name="P:System.Xml.Schema.XmlSchemaComplexContentExtension.Particle">
      <summary vsli:raw="Gets or sets one of the &lt;see cref=&quot;T:System.Xml.Schema.XmlSchemaGroupRef&quot; /&gt;, &lt;see cref=&quot;T:System.Xml.Schema.XmlSchemaChoice&quot; /&gt;, &lt;see cref=&quot;T:System.Xml.Schema.XmlSchemaAll&quot; /&gt;, or &lt;see cref=&quot;T:System.Xml.Schema.XmlSchemaSequence&quot; /&gt; classes.">Obtient ou définit l'une des classes <see cref="T:System.Xml.Schema.XmlSchemaGroupRef" />, <see cref="T:System.Xml.Schema.XmlSchemaChoice" />, <see cref="T:System.Xml.Schema.XmlSchemaAll" /> ou <see cref="T:System.Xml.Schema.XmlSchemaSequence" />.</summary>
      <returns vsli:raw="One of the &lt;see cref=&quot;T:System.Xml.Schema.XmlSchemaGroupRef&quot; /&gt;, &lt;see cref=&quot;T:System.Xml.Schema.XmlSchemaChoice&quot; /&gt;, &lt;see cref=&quot;T:System.Xml.Schema.XmlSchemaAll&quot; /&gt;, or &lt;see cref=&quot;T:System.Xml.Schema.XmlSchemaSequence&quot; /&gt; classes.">Une des classes <see cref="T:System.Xml.Schema.XmlSchemaGroupRef" />, <see cref="T:System.Xml.Schema.XmlSchemaChoice" />, <see cref="T:System.Xml.Schema.XmlSchemaAll" /> ou <see cref="T:System.Xml.Schema.XmlSchemaSequence" />.</returns>
    </member>
    <member name="T:System.Xml.Schema.XmlSchemaComplexContentRestriction">
      <summary vsli:raw="Represents the &lt;see langword=&quot;restriction&quot; /&gt; element from XML Schema as specified by the World Wide Web Consortium (W3C). This class is for complex types with a complex content model derived by restriction. It restricts the contents of the complex type to a subset of the inherited complex type.">Représente l'élément <see langword="restriction" /> issu d'un schéma XML comme spécifié par le W3C (World Wide Web Consortium). Cette classe concerne les types complexes possédant un modèle de contenu complexe dérivé par restriction. Elle restreint le contenu du type complexe à un sous-ensemble du type complexe hérité.</summary>
    </member>
    <member name="M:System.Xml.Schema.XmlSchemaComplexContentRestriction.#ctor">
      <summary vsli:raw="Initializes a new instance of the &lt;see cref=&quot;T:System.Xml.Schema.XmlSchemaComplexContentRestriction&quot; /&gt; class.">Initialise une nouvelle instance de la classe <see cref="T:System.Xml.Schema.XmlSchemaComplexContentRestriction" />.</summary>
    </member>
    <member name="P:System.Xml.Schema.XmlSchemaComplexContentRestriction.AnyAttribute">
      <summary vsli:raw="Gets or sets the &lt;see cref=&quot;T:System.Xml.Schema.XmlSchemaAnyAttribute&quot; /&gt; component of the complex content model.">Obtient ou définit le composant <see cref="T:System.Xml.Schema.XmlSchemaAnyAttribute" /> du modèle de contenu complexe.</summary>
      <returns vsli:raw="The &lt;see cref=&quot;T:System.Xml.Schema.XmlSchemaAnyAttribute&quot; /&gt; component of the complex content model.">Composant <see cref="T:System.Xml.Schema.XmlSchemaAnyAttribute" /> du modèle de contenu complexe.</returns>
    </member>
    <member name="P:System.Xml.Schema.XmlSchemaComplexContentRestriction.Attributes">
      <summary vsli:raw="Gets the collection of attributes for the complex type. Contains the &lt;see cref=&quot;T:System.Xml.Schema.XmlSchemaAttribute&quot; /&gt; and &lt;see cref=&quot;T:System.Xml.Schema.XmlSchemaAttributeGroupRef&quot; /&gt; elements.">Obtient la collection d’attributs pour le type complexe. Contient les éléments <see cref="T:System.Xml.Schema.XmlSchemaAttribute" /> et <see cref="T:System.Xml.Schema.XmlSchemaAttributeGroupRef" />.</summary>
      <returns vsli:raw="The collection of attributes for the complex type.">Collection d'attributs pour le type complexe.</returns>
    </member>
    <member name="P:System.Xml.Schema.XmlSchemaComplexContentRestriction.BaseTypeName">
      <summary vsli:raw="Gets or sets the name of a complex type from which this type is derived by restriction.">Obtient ou définit le nom d'un type complexe à partir duquel ce type est dérivé par restriction.</summary>
      <returns vsli:raw="The name of the complex type from which this type is derived by restriction.">Nom du type complexe à partir duquel ce type est dérivé par restriction.</returns>
    </member>
    <member name="P:System.Xml.Schema.XmlSchemaComplexContentRestriction.Particle">
      <summary vsli:raw="Gets or sets one of the &lt;see cref=&quot;T:System.Xml.Schema.XmlSchemaGroupRef&quot; /&gt;, &lt;see cref=&quot;T:System.Xml.Schema.XmlSchemaChoice&quot; /&gt;, &lt;see cref=&quot;T:System.Xml.Schema.XmlSchemaAll&quot; /&gt;, or &lt;see cref=&quot;T:System.Xml.Schema.XmlSchemaSequence&quot; /&gt; classes.">Obtient ou définit l'une des classes <see cref="T:System.Xml.Schema.XmlSchemaGroupRef" />, <see cref="T:System.Xml.Schema.XmlSchemaChoice" />, <see cref="T:System.Xml.Schema.XmlSchemaAll" /> ou <see cref="T:System.Xml.Schema.XmlSchemaSequence" />.</summary>
      <returns vsli:raw="One of the &lt;see cref=&quot;T:System.Xml.Schema.XmlSchemaGroupRef&quot; /&gt;, &lt;see cref=&quot;T:System.Xml.Schema.XmlSchemaChoice&quot; /&gt;, &lt;see cref=&quot;T:System.Xml.Schema.XmlSchemaAll&quot; /&gt;, or &lt;see cref=&quot;T:System.Xml.Schema.XmlSchemaSequence&quot; /&gt; classes.">Une des classes <see cref="T:System.Xml.Schema.XmlSchemaGroupRef" />, <see cref="T:System.Xml.Schema.XmlSchemaChoice" />, <see cref="T:System.Xml.Schema.XmlSchemaAll" /> ou <see cref="T:System.Xml.Schema.XmlSchemaSequence" />.</returns>
    </member>
    <member name="T:System.Xml.Schema.XmlSchemaComplexType">
      <summary vsli:raw="Represents the &lt;see langword=&quot;complexType&quot; /&gt; element from XML Schema as specified by the World Wide Web Consortium (W3C). This class defines a complex type that determines the set of attributes and content of an element.">Représente l'élément <see langword="complexType" /> issu d'un schéma XML comme spécifié par le W3C (World Wide Web Consortium). Cette classe définit un type complexe qui détermine l'ensemble des attributs et du contenu d'un élément.</summary>
    </member>
    <member name="M:System.Xml.Schema.XmlSchemaComplexType.#ctor">
      <summary vsli:raw="Initializes a new instance of the &lt;see cref=&quot;T:System.Xml.Schema.XmlSchemaComplexType&quot; /&gt; class.">Initialise une nouvelle instance de la classe <see cref="T:System.Xml.Schema.XmlSchemaComplexType" />.</summary>
    </member>
    <member name="P:System.Xml.Schema.XmlSchemaComplexType.AnyAttribute">
      <summary vsli:raw="Gets or sets the value for the &lt;see cref=&quot;T:System.Xml.Schema.XmlSchemaAnyAttribute&quot; /&gt; component of the complex type.">Obtient ou définit la valeur du composant <see cref="T:System.Xml.Schema.XmlSchemaAnyAttribute" /> de type complexe.</summary>
      <returns vsli:raw="The &lt;see cref=&quot;T:System.Xml.Schema.XmlSchemaAnyAttribute&quot; /&gt; component of the complex type.">Composant <see cref="T:System.Xml.Schema.XmlSchemaAnyAttribute" /> de type complexe.</returns>
    </member>
    <member name="P:System.Xml.Schema.XmlSchemaComplexType.Attributes">
      <summary vsli:raw="Gets the collection of attributes for the complex type.">Obtient la collection d’attributs pour le type complexe.</summary>
      <returns vsli:raw="Contains &lt;see cref=&quot;T:System.Xml.Schema.XmlSchemaAttribute&quot; /&gt; and &lt;see cref=&quot;T:System.Xml.Schema.XmlSchemaAttributeGroupRef&quot; /&gt; classes.">Contient les classes <see cref="T:System.Xml.Schema.XmlSchemaAttribute" /> et <see cref="T:System.Xml.Schema.XmlSchemaAttributeGroupRef" />.</returns>
    </member>
    <member name="P:System.Xml.Schema.XmlSchemaComplexType.AttributeUses">
      <summary vsli:raw="Gets the collection of all the complied attributes of this complex type and its base types.">Obtient la collection de tous les attributs compilés de ce type complexe et de ses types de base.</summary>
      <returns vsli:raw="The collection of all the attributes from this complex type and its base types. The post-compilation value of the &lt;see langword=&quot;AttributeUses&quot; /&gt; property.">Collection de tous les attributs de ce type complexe et de ses types de base. Valeur de post-compilation de la propriété <see langword="AttributeUses" />.</returns>
    </member>
    <member name="P:System.Xml.Schema.XmlSchemaComplexType.AttributeWildcard">
      <summary vsli:raw="Gets the post-compilation value for &lt;see langword=&quot;anyAttribute&quot; /&gt; for this complex type and its base type(s).">Obtient la valeur postérieure à la compilation pour <see langword="anyAttribute" /> pour ce type complexe et son ou ses types de base.</summary>
      <returns vsli:raw="The post-compilation value of the &lt;see langword=&quot;anyAttribute&quot; /&gt; element.">Valeur de post-compilation de l'élément <see langword="anyAttribute" />.</returns>
    </member>
    <member name="P:System.Xml.Schema.XmlSchemaComplexType.Block">
      <summary vsli:raw="Gets or sets the &lt;see langword=&quot;block&quot; /&gt; attribute.">Obtient ou définit l’attribut <see langword="block" />.</summary>
      <returns vsli:raw="The &lt;see langword=&quot;block&quot; /&gt; attribute prevents a complex type from being used in the specified type of derivation. The default is &lt;see langword=&quot;XmlSchemaDerivationMethod.None&quot; /&gt;. Optional.">L'attribut <see langword="block" /> empêche l'utilisation d'un type complexe dans le type de dérivation spécifié. La valeur par défaut est <see langword="XmlSchemaDerivationMethod.None" />. Optionnel.</returns>
    </member>
    <member name="P:System.Xml.Schema.XmlSchemaComplexType.BlockResolved">
      <summary vsli:raw="Gets the value after the type has been compiled to the post-schema-validation information set (infoset). This value indicates how the type is enforced when &lt;see langword=&quot;xsi:type&quot; /&gt; is used in the instance document.">Obtient la valeur après la compilation du type dans le jeu d’informations (infoset) postérieur à la validation du schéma. Cette valeur indique comment le type est appliqué lorsque <see langword="xsi:type" /> est utilisé dans une instance de document.</summary>
      <returns vsli:raw="The post-schema-validated infoset value. The default is &lt;see langword=&quot;BlockDefault&quot; /&gt; value on the &lt;see langword=&quot;schema&quot; /&gt; element.">Valeur de l'infoset postérieur à la validation du schéma. La valeur par défaut est <see langword="BlockDefault" /> pour l'élément <see langword="schema" />.</returns>
    </member>
    <member name="P:System.Xml.Schema.XmlSchemaComplexType.ContentModel">
      <summary vsli:raw="Gets or sets the post-compilation &lt;see cref=&quot;T:System.Xml.Schema.XmlSchemaContentModel&quot; /&gt; of this complex type.">Obtient ou définit le <see cref="T:System.Xml.Schema.XmlSchemaContentModel" /> postérieur à la compilation de ce type complexe.</summary>
      <returns vsli:raw="The content model type that is one of the &lt;see cref=&quot;T:System.Xml.Schema.XmlSchemaSimpleContent&quot; /&gt; or &lt;see cref=&quot;T:System.Xml.Schema.XmlSchemaComplexContent&quot; /&gt; classes.">Type de modèle de contenu qui est une des classes <see cref="T:System.Xml.Schema.XmlSchemaSimpleContent" /> ou <see cref="T:System.Xml.Schema.XmlSchemaComplexContent" />.</returns>
    </member>
    <member name="P:System.Xml.Schema.XmlSchemaComplexType.ContentType">
      <summary vsli:raw="Gets the content model of the complex type which holds the post-compilation value.">Obtient le modèle de contenu du type complexe qui contient la valeur postérieure à la compilation.</summary>
      <returns vsli:raw="The post-compilation value of the content model for the complex type.">Valeur postérieure à la compilation du modèle de contenu du type complexe.</returns>
    </member>
    <member name="P:System.Xml.Schema.XmlSchemaComplexType.ContentTypeParticle">
      <summary vsli:raw="Gets the particle that holds the post-compilation value of the &lt;see cref=&quot;P:System.Xml.Schema.XmlSchemaComplexType.ContentType&quot; /&gt; particle.">Obtient la partie qui contient la valeur de post-compilation de la particule <see cref="P:System.Xml.Schema.XmlSchemaComplexType.ContentType" />.</summary>
      <returns vsli:raw="The particle for the content type. The post-compilation value of the &lt;see cref=&quot;P:System.Xml.Schema.XmlSchemaComplexType.ContentType&quot; /&gt; particle.">Particule du type de contenu. Valeur de post-compilation de la particule <see cref="P:System.Xml.Schema.XmlSchemaComplexType.ContentType" />.</returns>
    </member>
    <member name="P:System.Xml.Schema.XmlSchemaComplexType.IsAbstract">
      <summary vsli:raw="Gets or sets the information that determines if the &lt;see langword=&quot;complexType&quot; /&gt; element can be used in the instance document.">Obtient ou définit les informations qui déterminent si l'élément <see langword="complexType" /> peut être utilisé dans l'instance de document.</summary>
      <returns vsli:raw="If &lt;see langword=&quot;true&quot; /&gt;, an element cannot use this &lt;see langword=&quot;complexType&quot; /&gt; element directly and must use a complex type that is derived from this &lt;see langword=&quot;complexType&quot; /&gt; element. The default is &lt;see langword=&quot;false&quot; /&gt;. Optional.">Si la valeur est <see langword="true" />, un élément ne peut pas utiliser cet élément <see langword="complexType" /> directement et doit utiliser un type complexe dérivé de cet élément <see langword="complexType" />. La valeur par défaut est <see langword="false" />. Optionnel.</returns>
    </member>
    <member name="P:System.Xml.Schema.XmlSchemaComplexType.IsMixed">
      <summary vsli:raw="Gets or sets information that determines if the complex type has a mixed content model (markup within the content).">Obtient ou définit des informations qui déterminent si le type complexe possède un modèle de contenu mixte (balisage à l'intérieur du contenu).</summary>
      <returns vsli:raw="&lt;see langword=&quot;true&quot; /&gt;, if character data can appear between child elements of this complex type; otherwise, &lt;see langword=&quot;false&quot; /&gt;. The default is &lt;see langword=&quot;false&quot; /&gt;. Optional.">
        <see langword="true" />, si des données de caractères peuvent apparaître entre les éléments enfants de ce type complexe ; sinon, <see langword="false" />. La valeur par défaut est <see langword="false" />. Optionnel.</returns>
    </member>
    <member name="P:System.Xml.Schema.XmlSchemaComplexType.Particle">
      <summary vsli:raw="Gets or sets the compositor type as one of the &lt;see cref=&quot;T:System.Xml.Schema.XmlSchemaGroupRef&quot; /&gt;, &lt;see cref=&quot;T:System.Xml.Schema.XmlSchemaChoice&quot; /&gt;, &lt;see cref=&quot;T:System.Xml.Schema.XmlSchemaAll&quot; /&gt;, or &lt;see cref=&quot;T:System.Xml.Schema.XmlSchemaSequence&quot; /&gt; classes.">Obtient ou définit le type de compositeur comme l'une des classes <see cref="T:System.Xml.Schema.XmlSchemaGroupRef" />, <see cref="T:System.Xml.Schema.XmlSchemaChoice" />, <see cref="T:System.Xml.Schema.XmlSchemaAll" /> ou <see cref="T:System.Xml.Schema.XmlSchemaSequence" />.</summary>
      <returns vsli:raw="The compositor type.">Type de compositeur.</returns>
    </member>
    <member name="T:System.Xml.Schema.XmlSchemaContent">
      <summary vsli:raw="An abstract class for schema content.">Classe abstraite pour le contenu du schéma.</summary>
    </member>
    <member name="M:System.Xml.Schema.XmlSchemaContent.#ctor">
      <summary vsli:raw="Initializes a new instance of the &lt;see cref=&quot;T:System.Xml.Schema.XmlSchemaContent&quot; /&gt; class.">Initialise une nouvelle instance de la classe <see cref="T:System.Xml.Schema.XmlSchemaContent" />.</summary>
    </member>
    <member name="T:System.Xml.Schema.XmlSchemaContentModel">
      <summary vsli:raw="Specifies the order and structure of the child elements of a type.">Spécifie l'ordre et la structure des éléments enfants d'un type.</summary>
    </member>
    <member name="M:System.Xml.Schema.XmlSchemaContentModel.#ctor">
      <summary vsli:raw="Initializes a new instance of the &lt;see cref=&quot;T:System.Xml.Schema.XmlSchemaContentModel&quot; /&gt; class.">Initialise une nouvelle instance de la classe <see cref="T:System.Xml.Schema.XmlSchemaContentModel" />.</summary>
    </member>
    <member name="P:System.Xml.Schema.XmlSchemaContentModel.Content">
      <summary vsli:raw="Gets or sets the content of the type.">Obtient ou définit le contenu du type.</summary>
      <returns vsli:raw="Provides the content of the type.">Fournit le contenu du type.</returns>
    </member>
    <member name="T:System.Xml.Schema.XmlSchemaContentProcessing">
      <summary vsli:raw="Provides information about the validation mode of &lt;see langword=&quot;any&quot; /&gt; and &lt;see langword=&quot;anyAttribute&quot; /&gt; element replacements.">Fournit des informations sur le mode de validation des remplacements d'éléments <see langword="any" /> et <see langword="anyAttribute" />.</summary>
    </member>
    <member name="F:System.Xml.Schema.XmlSchemaContentProcessing.Lax">
      <summary vsli:raw="If the associated schema is found, the document items will be validated. No errors will be thrown otherwise.&#xA;        &#xA;If the item is not validated, the XML processor attempts to notify the client through a validation event handler with &lt;see cref=&quot;P:System.Xml.Schema.ValidationEventArgs.Severity&quot; /&gt; = &lt;see langword=&quot;XmlSeverityType.Warning&quot; /&gt;. If a validation event handler has not been set up, no information is returned when the warning is produced.">Si le schéma associé est trouvé, les éléments de document seront validés. Dans le cas contraire, aucune erreur ne sera levée.
        
Si l'élément n'est pas validé, le processeur XML tente de notifier le client via un gestionnaire d'événements de validation avec <see cref="P:System.Xml.Schema.ValidationEventArgs.Severity" /> = <see langword="XmlSeverityType.Warning" />. Si aucun gestionnaire d'événements de validation n'a été configuré, aucune information n'est renvoyée lorsque l'avertissement est généré.</summary>
    </member>
    <member name="F:System.Xml.Schema.XmlSchemaContentProcessing.None">
      <summary vsli:raw="Document items are not validated.">Les éléments de document ne sont pas validés.</summary>
    </member>
    <member name="F:System.Xml.Schema.XmlSchemaContentProcessing.Skip">
      <summary vsli:raw="Document items must consist of well-formed XML and are not validated by the schema.&#xA;        &#xA;The XML processor attempts to notify the client through a validation event handler with &lt;see cref=&quot;P:System.Xml.Schema.ValidationEventArgs.Severity&quot; /&gt; = &lt;see langword=&quot;XmlSeverityType.Warning&quot; /&gt; that no validation took place for the given item. If a validation event handler has not been set up, no information is returned when the warning is produced.">Les éléments de document doivent être composés en XML bien formé et ne font pas l'objet d'une validation par le schéma.
        
Le processeur XML tente de notifier le client, via un gestionnaire d'événements de validation avec <see cref="P:System.Xml.Schema.ValidationEventArgs.Severity" /> = <see langword="XmlSeverityType.Warning" />, qu'aucune validation n'a eu lieu pour l'élément donné. Si aucun gestionnaire d'événements de validation n'a été configuré, aucune information n'est renvoyée lorsque l'avertissement est généré.</summary>
    </member>
    <member name="F:System.Xml.Schema.XmlSchemaContentProcessing.Strict">
      <summary vsli:raw="The schema processor must find a schema associated with the indicated namespace to validate the document items.&#xA;        &#xA;If the processor cannot find a schema or if the items are not valid, the XML processor attempts to notify the client through a validation event handler with &lt;see cref=&quot;P:System.Xml.Schema.ValidationEventArgs.Severity&quot; /&gt; = &lt;see langword=&quot;XmlSeverityType.Warning&quot; /&gt;. If a validation error occurs and a validation event handler is not provided, an exception is thrown.">Le processeur de schéma doit rechercher un schéma associé à l'espace de noms indiqué pour valider les éléments de document.
        
Si le processeur ne trouve pas de schéma ou si les éléments ne sont pas valides, le processeur XML tente de notifier le client via un gestionnaire d'événements de validation avec <see cref="P:System.Xml.Schema.ValidationEventArgs.Severity" /> = <see langword="XmlSeverityType.Warning" />. Si une erreur de validation se produit et qu'aucun gestionnaire d'événements de validation n'est fourni, une exception est levée.</summary>
    </member>
    <member name="T:System.Xml.Schema.XmlSchemaContentType">
      <summary vsli:raw="Enumerations for the content model of the complex type. This represents the content in the post-schema-validation information set (infoset).">Énumérations pour le modèle de contenu du type complexe. Représente le contenu du jeu d'informations postérieur à la validation du schéma.</summary>
    </member>
    <member name="F:System.Xml.Schema.XmlSchemaContentType.ElementOnly">
      <summary vsli:raw="Element-only content.">Contenu limité à des éléments.</summary>
    </member>
    <member name="F:System.Xml.Schema.XmlSchemaContentType.Empty">
      <summary vsli:raw="Empty content.">Contenu vide.</summary>
    </member>
    <member name="F:System.Xml.Schema.XmlSchemaContentType.Mixed">
      <summary vsli:raw="Mixed content.">Contenu mixte.</summary>
    </member>
    <member name="F:System.Xml.Schema.XmlSchemaContentType.TextOnly">
      <summary vsli:raw="Text-only content.">Contenu limité à du texte.</summary>
    </member>
    <member name="T:System.Xml.Schema.XmlSchemaDatatype">
      <summary vsli:raw="The &lt;see cref=&quot;T:System.Xml.Schema.XmlSchemaDatatype&quot; /&gt; class is an abstract class for mapping XML Schema definition language (XSD) types to Common Language Runtime (CLR) types.">La classe <see cref="T:System.Xml.Schema.XmlSchemaDatatype" /> est une classe abstraite destinée au mappage de types XSD (XML Schema Definition) sur des types CLR (Common Language Runtime).</summary>
    </member>
    <member name="M:System.Xml.Schema.XmlSchemaDatatype.ChangeType(System.Object,System.Type)">
      <summary vsli:raw="Converts the value specified, whose type is one of the valid Common Language Runtime (CLR) representations of the XML schema type represented by the &lt;see cref=&quot;T:System.Xml.Schema.XmlSchemaDatatype&quot; /&gt;, to the CLR type specified.">Convertit la valeur spécifiée, dont le type est l'une des représentations CLR valides du type de schéma XML  représenté par <see cref="T:System.Xml.Schema.XmlSchemaDatatype" />, au type CLR spécifié.</summary>
      <param name="value" vsli:raw="The input value to convert to the specified type.">Valeur d'entrée à convertir dans le type spécifié.</param>
      <param name="targetType" vsli:raw="The target type to convert the input value to.">Type cible vers lequel convertir la valeur d'entrée.</param>
      <exception cref="T:System.ArgumentNullException" vsli:raw="The &lt;see cref=&quot;T:System.Object&quot; /&gt; or &lt;see cref=&quot;T:System.Type&quot; /&gt; parameter is &lt;see langword=&quot;null&quot; /&gt;.">Le paramètre <see cref="T:System.Object" /> ou <see cref="T:System.Type" /> est <see langword="null" />.</exception>
      <exception cref="T:System.InvalidCastException" vsli:raw="The type represented by the &lt;see cref=&quot;T:System.Xml.Schema.XmlSchemaDatatype&quot; /&gt; does not support a conversion from type of the value specified to the type specified.">Le type représenté par <see cref="T:System.Xml.Schema.XmlSchemaDatatype" /> ne prend pas en charge la conversion du type de valeur spécifié au type spécifié.</exception>
      <returns vsli:raw="The converted input value.">Valeur d'entrée convertie.</returns>
    </member>
    <member name="M:System.Xml.Schema.XmlSchemaDatatype.ChangeType(System.Object,System.Type,System.Xml.IXmlNamespaceResolver)">
      <summary vsli:raw="Converts the value specified, whose type is one of the valid Common Language Runtime (CLR) representations of the XML schema type represented by the &lt;see cref=&quot;T:System.Xml.Schema.XmlSchemaDatatype&quot; /&gt;, to the CLR type specified using the &lt;see cref=&quot;T:System.Xml.IXmlNamespaceResolver&quot; /&gt; if the &lt;see cref=&quot;T:System.Xml.Schema.XmlSchemaDatatype&quot; /&gt; represents the xs:QName type or a type derived from it.">Convertit la valeur spécifiée, dont le type est l'une des représentations CLR valides du type de schéma XML représenté par <see cref="T:System.Xml.Schema.XmlSchemaDatatype" />, au type CLR spécifié à l'aide de <see cref="T:System.Xml.IXmlNamespaceResolver" /> si <see cref="T:System.Xml.Schema.XmlSchemaDatatype" /> représente le type xs:QName ou un type dérivé.</summary>
      <param name="value" vsli:raw="The input value to convert to the specified type.">Valeur d'entrée à convertir dans le type spécifié.</param>
      <param name="targetType" vsli:raw="The target type to convert the input value to.">Type cible vers lequel convertir la valeur d'entrée.</param>
      <param name="namespaceResolver" vsli:raw="An &lt;see cref=&quot;T:System.Xml.IXmlNamespaceResolver&quot; /&gt; used for resolving namespace prefixes. This is only of use if the &lt;see cref=&quot;T:System.Xml.Schema.XmlSchemaDatatype&quot; /&gt; represents the xs:QName type or a type derived from it.">
        <see cref="T:System.Xml.IXmlNamespaceResolver" /> utilisé pour trouver les préfixes d'espaces de noms. Cela est utile uniquement si <see cref="T:System.Xml.Schema.XmlSchemaDatatype" /> représente le type xs:QName ou un type dérivé.</param>
      <exception cref="T:System.ArgumentNullException" vsli:raw="The &lt;see cref=&quot;T:System.Object&quot; /&gt; or &lt;see cref=&quot;T:System.Type&quot; /&gt; parameter is &lt;see langword=&quot;null&quot; /&gt;.">Le paramètre <see cref="T:System.Object" /> ou <see cref="T:System.Type" /> est <see langword="null" />.</exception>
      <exception cref="T:System.InvalidCastException" vsli:raw="The type represented by the &lt;see cref=&quot;T:System.Xml.Schema.XmlSchemaDatatype&quot; /&gt; does not support a conversion from type of the value specified to the type specified.">Le type représenté par <see cref="T:System.Xml.Schema.XmlSchemaDatatype" /> ne prend pas en charge la conversion du type de valeur spécifié au type spécifié.</exception>
      <returns vsli:raw="The converted input value.">Valeur d'entrée convertie.</returns>
    </member>
    <member name="M:System.Xml.Schema.XmlSchemaDatatype.IsDerivedFrom(System.Xml.Schema.XmlSchemaDatatype)">
      <summary vsli:raw="The &lt;see cref=&quot;M:System.Xml.Schema.XmlSchemaDatatype.IsDerivedFrom(System.Xml.Schema.XmlSchemaDatatype)&quot; /&gt; method always returns &lt;see langword=&quot;false&quot; /&gt;.">La méthode <see cref="M:System.Xml.Schema.XmlSchemaDatatype.IsDerivedFrom(System.Xml.Schema.XmlSchemaDatatype)" /> retourne toujours <see langword="false" />.</summary>
      <param name="datatype" vsli:raw="The &lt;see cref=&quot;T:System.Xml.Schema.XmlSchemaDatatype&quot; /&gt;.">L’<see cref="T:System.Xml.Schema.XmlSchemaDatatype" />opérateur</param>
      <returns vsli:raw="Always returns &lt;see langword=&quot;false&quot; /&gt;.">Retourne toujours <see langword="false" />.</returns>
    </member>
    <member name="M:System.Xml.Schema.XmlSchemaDatatype.ParseValue(System.String,System.Xml.XmlNameTable,System.Xml.IXmlNamespaceResolver)">
      <summary vsli:raw="When overridden in a derived class, validates the &lt;see langword=&quot;string&quot; /&gt; specified against a built-in or user-defined simple type.">En cas de substitution dans une classe dérivée, valide la <see langword="string" /> spécifiée par rapport à un type simple intégré ou défini par l'utilisateur.</summary>
      <param name="s" vsli:raw="The &lt;see langword=&quot;string&quot; /&gt; to validate against the simple type.">
        <see langword="string" /> à valider par rapport au type simple.</param>
      <param name="nameTable" vsli:raw="The &lt;see cref=&quot;T:System.Xml.XmlNameTable&quot; /&gt; to use for atomization while parsing the &lt;see langword=&quot;string&quot; /&gt; if this &lt;see cref=&quot;T:System.Xml.Schema.XmlSchemaDatatype&quot; /&gt; object represents the xs:NCName type.">
        <see cref="T:System.Xml.XmlNameTable" /> à utiliser pour l'atomisation lors de l'analyse de <see langword="string" /> si cet objet <see cref="T:System.Xml.Schema.XmlSchemaDatatype" /> représente le type xs:NCName.</param>
      <param name="nsmgr" vsli:raw="The &lt;see cref=&quot;T:System.Xml.IXmlNamespaceResolver&quot; /&gt; object to use while parsing the &lt;see langword=&quot;string&quot; /&gt; if this &lt;see cref=&quot;T:System.Xml.Schema.XmlSchemaDatatype&quot; /&gt; object represents the xs:QName type.">Objet <see cref="T:System.Xml.IXmlNamespaceResolver" /> à utiliser lors de l'analyse de <see langword="string" /> si cet objet <see cref="T:System.Xml.Schema.XmlSchemaDatatype" /> représente le type xs:QName.</param>
      <exception cref="T:System.Xml.Schema.XmlSchemaValidationException" vsli:raw="The input value is not a valid instance of this W3C XML Schema type.">La valeur d'entrée n'est pas une instance valide de ce type de schéma XML W3C.</exception>
      <exception cref="T:System.ArgumentNullException" vsli:raw="The value to parse cannot be &lt;see langword=&quot;null&quot; /&gt;.">La valeur à analyser ne peut pas être <see langword="null" />.</exception>
      <returns vsli:raw="An &lt;see cref=&quot;T:System.Object&quot; /&gt; that can be cast safely to the type returned by the &lt;see cref=&quot;P:System.Xml.Schema.XmlSchemaDatatype.ValueType&quot; /&gt; property.">
        <see cref="T:System.Object" /> qui peut être casté en toute sécurité en type retourné par la propriété <see cref="P:System.Xml.Schema.XmlSchemaDatatype.ValueType" />.</returns>
    </member>
    <member name="P:System.Xml.Schema.XmlSchemaDatatype.TokenizedType">
      <summary vsli:raw="When overridden in a derived class, gets the type for the &lt;see langword=&quot;string&quot; /&gt; as specified in the World Wide Web Consortium (W3C) XML 1.0 specification.">En cas de substitution dans une classe dérivée, elle obtient le type correspondant à <see langword="string" /> spécifié dans la définition XML 1.0 du World Wide Web Consortium (W3C).</summary>
      <returns vsli:raw="An &lt;see cref=&quot;T:System.Xml.XmlTokenizedType&quot; /&gt; value for the &lt;see langword=&quot;string&quot; /&gt;.">Valeur <see cref="T:System.Xml.XmlTokenizedType" /> correspondant au <see langword="string" />.</returns>
    </member>
    <member name="P:System.Xml.Schema.XmlSchemaDatatype.TypeCode">
      <summary vsli:raw="Gets the &lt;see cref=&quot;T:System.Xml.Schema.XmlTypeCode&quot; /&gt; value for the simple type.">Obtient la valeur <see cref="T:System.Xml.Schema.XmlTypeCode" /> de ce type simple.</summary>
      <returns vsli:raw="The &lt;see cref=&quot;T:System.Xml.Schema.XmlTypeCode&quot; /&gt; value for the simple type.">Valeur <see cref="T:System.Xml.Schema.XmlTypeCode" /> de ce type simple.</returns>
    </member>
    <member name="P:System.Xml.Schema.XmlSchemaDatatype.ValueType">
      <summary vsli:raw="When overridden in a derived class, gets the Common Language Runtime (CLR) type of the item.">En cas de substitution dans une classe dérivée, obtient le type Common Language Runtime (CLR) de l'élément.</summary>
      <returns vsli:raw="The Common Language Runtime (CLR) type of the item.">Type CLR de l'élément.</returns>
    </member>
    <member name="P:System.Xml.Schema.XmlSchemaDatatype.Variety">
      <summary vsli:raw="Gets the &lt;see cref=&quot;T:System.Xml.Schema.XmlSchemaDatatypeVariety&quot; /&gt; value for the simple type.">Obtient la valeur <see cref="T:System.Xml.Schema.XmlSchemaDatatypeVariety" /> de ce type simple.</summary>
      <returns vsli:raw="The &lt;see cref=&quot;T:System.Xml.Schema.XmlSchemaDatatypeVariety&quot; /&gt; value for the simple type.">Valeur <see cref="T:System.Xml.Schema.XmlSchemaDatatypeVariety" /> de ce type simple.</returns>
    </member>
    <member name="T:System.Xml.Schema.XmlSchemaDatatypeVariety">
      <summary vsli:raw="Specifies the W3C XML schema data type variety of the type.">Spécifie la variété du type de données du schéma XML W3C du type.</summary>
    </member>
    <member name="F:System.Xml.Schema.XmlSchemaDatatypeVariety.Atomic">
      <summary vsli:raw="A W3C XML schema atomic type.">Type atomique de schéma XML W3C.</summary>
    </member>
    <member name="F:System.Xml.Schema.XmlSchemaDatatypeVariety.List">
      <summary vsli:raw="A W3C XML schema list type.">Type de liste de schéma XML W3C.</summary>
    </member>
    <member name="F:System.Xml.Schema.XmlSchemaDatatypeVariety.Union">
      <summary vsli:raw="A W3C XML schema union type.">Type d'union de schéma XML W3C.</summary>
    </member>
    <member name="T:System.Xml.Schema.XmlSchemaDerivationMethod">
      <summary vsli:raw="Provides different methods for preventing derivation.">Fournit différentes méthodes pour éviter la dérivation.</summary>
    </member>
    <member name="F:System.Xml.Schema.XmlSchemaDerivationMethod.All">
      <summary vsli:raw="&lt;see langword=&quot;#all&quot; /&gt;. Refers to all derivation methods.">
        <see langword="#all" />. Fait référence à toutes les méthodes de dérivation.</summary>
    </member>
    <member name="F:System.Xml.Schema.XmlSchemaDerivationMethod.Empty">
      <summary vsli:raw="Override default derivation method to allow any derivation.">Substitue la méthode de dérivation par défaut pour permettre n'importe quelle dérivation.</summary>
    </member>
    <member name="F:System.Xml.Schema.XmlSchemaDerivationMethod.Extension">
      <summary vsli:raw="Refers to derivations by &lt;see langword=&quot;Extension&quot; /&gt;.">Fait référence aux dérivations par <see langword="Extension" />.</summary>
    </member>
    <member name="F:System.Xml.Schema.XmlSchemaDerivationMethod.List">
      <summary vsli:raw="Refers to derivations by &lt;see langword=&quot;List&quot; /&gt;.">Fait référence aux dérivations par <see langword="List" />.</summary>
    </member>
    <member name="F:System.Xml.Schema.XmlSchemaDerivationMethod.None">
      <summary vsli:raw="Accepts the default derivation method.">Accepte la méthode de dérivation par défaut.</summary>
    </member>
    <member name="F:System.Xml.Schema.XmlSchemaDerivationMethod.Restriction">
      <summary vsli:raw="Refers to derivations by &lt;see langword=&quot;Restriction&quot; /&gt;.">Fait référence aux dérivations par <see langword="Restriction" />.</summary>
    </member>
    <member name="F:System.Xml.Schema.XmlSchemaDerivationMethod.Substitution">
      <summary vsli:raw="Refers to derivations by &lt;see langword=&quot;Substitution&quot; /&gt;.">Fait référence aux dérivations par <see langword="Substitution" />.</summary>
    </member>
    <member name="F:System.Xml.Schema.XmlSchemaDerivationMethod.Union">
      <summary vsli:raw="Refers to derivations by &lt;see langword=&quot;Union&quot; /&gt;.">Fait référence aux dérivations par <see langword="Union" />.</summary>
    </member>
    <member name="T:System.Xml.Schema.XmlSchemaDocumentation">
      <summary vsli:raw="Represents the &lt;see langword=&quot;documentation&quot; /&gt; element from XML Schema as specified by the World Wide Web Consortium (W3C). This class specifies information to be read or used by humans within an &lt;see langword=&quot;annotation&quot; /&gt;.">Représente l'élément <see langword="documentation" /> issu d'un schéma XML comme spécifié par le W3C (World Wide Web Consortium). Cette classe spécifie les informations à lire ou utilisée par des personnes dans une <see langword="annotation" />.</summary>
    </member>
    <member name="M:System.Xml.Schema.XmlSchemaDocumentation.#ctor">
      <summary vsli:raw="Initializes a new instance of the &lt;see cref=&quot;T:System.Xml.Schema.XmlSchemaDocumentation&quot; /&gt; class.">Initialise une nouvelle instance de la classe <see cref="T:System.Xml.Schema.XmlSchemaDocumentation" />.</summary>
    </member>
    <member name="P:System.Xml.Schema.XmlSchemaDocumentation.Language">
      <summary vsli:raw="Gets or sets the &lt;see langword=&quot;xml:lang&quot; /&gt; attribute. This serves as an indicator of the language used in the contents.">Obtient ou définit l’attribut <see langword="xml:lang" />. Ceci sert d'indicateur du langage utilisé dans le contenu.</summary>
      <returns vsli:raw="The &lt;see langword=&quot;xml:lang&quot; /&gt; attribute. Optional.">Attribut <see langword="xml:lang" />. Optionnel.</returns>
    </member>
    <member name="P:System.Xml.Schema.XmlSchemaDocumentation.Markup">
      <summary vsli:raw="Gets or sets an array of &lt;see langword=&quot;XmlNodes&quot; /&gt; that represents the documentation child nodes.">Obtient ou définit un tableau de <see langword="XmlNodes" /> qui représente les nœuds enfants de la documentation.</summary>
      <returns vsli:raw="The array that represents the documentation child nodes.">Tableau représentant les nœuds enfants de la documentation.</returns>
    </member>
    <member name="P:System.Xml.Schema.XmlSchemaDocumentation.Source">
      <summary vsli:raw="Gets or sets the Uniform Resource Identifier (URI) source of the information.">Obtient ou définit la source URI (Uniform Resource Identifier) des informations.</summary>
      <returns vsli:raw="A URI reference. The default is &lt;see langword=&quot;String.Empty&quot; /&gt;. Optional.">Référence URI. La valeur par défaut est <see langword="String.Empty" />. Optionnel.</returns>
    </member>
    <member name="T:System.Xml.Schema.XmlSchemaElement">
      <summary vsli:raw="Represents the &lt;see langword=&quot;element&quot; /&gt; element from XML Schema as specified by the World Wide Web Consortium (W3C). This class is the base class for all particle types and is used to describe an element in an XML document.">Représente l'élément <see langword="element" /> issu d'un schéma XML comme spécifié par le W3C (World Wide Web Consortium). Cette classe est la classe de base de tous les types de particules et est utilisée pour décrire un élément dans un document XML.</summary>
    </member>
    <member name="M:System.Xml.Schema.XmlSchemaElement.#ctor">
      <summary vsli:raw="Initializes a new instance of the &lt;see cref=&quot;T:System.Xml.Schema.XmlSchemaElement&quot; /&gt; class.">Initialise une nouvelle instance de la classe <see cref="T:System.Xml.Schema.XmlSchemaElement" />.</summary>
    </member>
    <member name="P:System.Xml.Schema.XmlSchemaElement.Block">
      <summary vsli:raw="Gets or sets a &lt;see langword=&quot;Block&quot; /&gt; derivation.">Obtient ou définit une dérivation <see langword="Block" />.</summary>
      <returns vsli:raw="The attribute used to block a type derivation. Default value is &lt;see langword=&quot;XmlSchemaDerivationMethod.None&quot; /&gt;. Optional.">Attribut utilisé pour bloquer une dérivation de type. La valeur par défaut est <see langword="XmlSchemaDerivationMethod.None" />. Optionnel.</returns>
    </member>
    <member name="P:System.Xml.Schema.XmlSchemaElement.BlockResolved">
      <summary vsli:raw="Gets the post-compilation value of the &lt;see langword=&quot;Block&quot; /&gt; property.">Obtient la valeur de post-compilation de la propriété <see langword="Block" />.</summary>
      <returns vsli:raw="The post-compilation value of the &lt;see langword=&quot;Block&quot; /&gt; property. The default is the &lt;see langword=&quot;BlockDefault&quot; /&gt; value on the &lt;see langword=&quot;schema&quot; /&gt; element.">Valeur de post-compilation de la propriété <see langword="Block" />. La valeur par défaut est la valeur <see langword="BlockDefault" /> sur l'élément <see langword="schema" />.</returns>
    </member>
    <member name="P:System.Xml.Schema.XmlSchemaElement.Constraints">
      <summary vsli:raw="Gets the collection of constraints on the element.">Obtient la collection de contraintes sur l’élément.</summary>
      <returns vsli:raw="The collection of constraints.">Collection de contraintes.</returns>
    </member>
    <member name="P:System.Xml.Schema.XmlSchemaElement.DefaultValue">
      <summary vsli:raw="Gets or sets the default value of the element if its content is a simple type or content of the element is &lt;see langword=&quot;textOnly&quot; /&gt;.">Obtient ou définit la valeur par défaut de l'élément si le contenu est un type simple ou si le contenu de l'élément est <see langword="textOnly" />.</summary>
      <returns vsli:raw="The default value for the element. The default is a null reference. Optional.">Valeur par défaut de l'élément. La valeur par défaut est une référence null. Optionnel.</returns>
    </member>
    <member name="P:System.Xml.Schema.XmlSchemaElement.ElementSchemaType">
      <summary vsli:raw="Gets an &lt;see cref=&quot;T:System.Xml.Schema.XmlSchemaType&quot; /&gt; object representing the type of the element based on the &lt;see cref=&quot;P:System.Xml.Schema.XmlSchemaElement.SchemaType&quot; /&gt; or &lt;see cref=&quot;P:System.Xml.Schema.XmlSchemaElement.SchemaTypeName&quot; /&gt; values of the element.">Obtient un objet <see cref="T:System.Xml.Schema.XmlSchemaType" /> représentant le type de l'élément basé sur les valeurs <see cref="P:System.Xml.Schema.XmlSchemaElement.SchemaType" /> ou <see cref="P:System.Xml.Schema.XmlSchemaElement.SchemaTypeName" /> de l'élément.</summary>
      <returns vsli:raw="An &lt;see cref=&quot;T:System.Xml.Schema.XmlSchemaType&quot; /&gt; object.">Objet <see cref="T:System.Xml.Schema.XmlSchemaType" />.</returns>
    </member>
    <member name="P:System.Xml.Schema.XmlSchemaElement.ElementType">
      <summary vsli:raw="Gets a common language runtime (CLR) object based on the &lt;see cref=&quot;T:System.Xml.Schema.XmlSchemaElement&quot; /&gt; or &lt;see cref=&quot;T:System.Xml.Schema.XmlSchemaElement&quot; /&gt; of the element, which holds the post-compilation value of the &lt;see langword=&quot;ElementType&quot; /&gt; property.">Obtient un objet CLR (Common Language Runtime) basé sur <see cref="T:System.Xml.Schema.XmlSchemaElement" /> ou <see cref="T:System.Xml.Schema.XmlSchemaElement" /> de l'élément qui contient la valeur de post-compilation de la propriété <see langword="ElementType" />.</summary>
      <returns vsli:raw="The common language runtime object. The post-compilation value of the &lt;see langword=&quot;ElementType&quot; /&gt; property.">Objet CLR (common language runtime). Valeur de post-compilation de la propriété <see langword="ElementType" />.</returns>
    </member>
    <member name="P:System.Xml.Schema.XmlSchemaElement.Final">
      <summary vsli:raw="Gets or sets the &lt;see langword=&quot;Final&quot; /&gt; property to indicate that no further derivations are allowed.">Obtient ou définit la propriété <see langword="Final" /> pour indiquer que plus aucune dérivation n'est permise.</summary>
      <returns vsli:raw="The &lt;see langword=&quot;Final&quot; /&gt; property. The default is &lt;see langword=&quot;XmlSchemaDerivationMethod.None&quot; /&gt;. Optional.">La propriété <see langword="Final" />. La valeur par défaut est <see langword="XmlSchemaDerivationMethod.None" />. Optionnel.</returns>
    </member>
    <member name="P:System.Xml.Schema.XmlSchemaElement.FinalResolved">
      <summary vsli:raw="Gets the post-compilation value of the &lt;see langword=&quot;Final&quot; /&gt; property.">Obtient la valeur de post-compilation de la propriété <see langword="Final" />.</summary>
      <returns vsli:raw="The post-compilation value of the &lt;see langword=&quot;Final&quot; /&gt; property. Default value is the &lt;see langword=&quot;FinalDefault&quot; /&gt; value on the &lt;see langword=&quot;schema&quot; /&gt; element.">Valeur de post-compilation de la propriété <see langword="Final" />. La valeur par défaut est la valeur <see langword="FinalDefault" /> sur l'élément <see langword="schema" />.</returns>
    </member>
    <member name="P:System.Xml.Schema.XmlSchemaElement.FixedValue">
      <summary vsli:raw="Gets or sets the fixed value.">Obtient ou définit la valeur fixe.</summary>
      <returns vsli:raw="The fixed value that is predetermined and unchangeable. The default is a null reference. Optional.">Valeur fixe prédéterminée et non modifiable. La valeur par défaut est une référence null. Optionnel.</returns>
    </member>
    <member name="P:System.Xml.Schema.XmlSchemaElement.Form">
      <summary vsli:raw="Gets or sets the form for the element.">Obtient ou définit le formulaire pour l'élément.</summary>
      <returns vsli:raw="The form for the element. The default is the &lt;see cref=&quot;P:System.Xml.Schema.XmlSchema.ElementFormDefault&quot; /&gt; value. Optional.">Forme de l'élément. La valeur par défaut est la valeur <see cref="P:System.Xml.Schema.XmlSchema.ElementFormDefault" />. Optionnel.</returns>
    </member>
    <member name="P:System.Xml.Schema.XmlSchemaElement.IsAbstract">
      <summary vsli:raw="Gets or sets information to indicate if the element can be used in an instance document.">Obtient ou définit des informations indiquant si l'élément peut être utilisé dans un document d'instance.</summary>
      <returns vsli:raw="If &lt;see langword=&quot;true&quot; /&gt;, the element cannot appear in the instance document. The default is &lt;see langword=&quot;false&quot; /&gt;. Optional.">Si la valeur est <see langword="true" />, l'élément ne peut pas apparaître dans l'instance de document. La valeur par défaut est <see langword="false" />. Optionnel.</returns>
    </member>
    <member name="P:System.Xml.Schema.XmlSchemaElement.IsNillable">
      <summary vsli:raw="Gets or sets information that indicates if &lt;see langword=&quot;xsi:nil&quot; /&gt; can occur in the instance data. Indicates if an explicit nil value can be assigned to the element.">Obtient ou définit des informations qui indiquent si <see langword="xsi:nil" /> peut se produire dans les données d'instance. Indique si une valeur nulle explicite peut être assignée à l'élément.</summary>
      <returns vsli:raw="If nillable is &lt;see langword=&quot;true&quot; /&gt;, this enables an instance of the element to have the &lt;see langword=&quot;nil&quot; /&gt; attribute set to &lt;see langword=&quot;true&quot; /&gt;. The &lt;see langword=&quot;nil&quot; /&gt; attribute is defined as part of the XML Schema namespace for instances. The default is &lt;see langword=&quot;false&quot; /&gt;. Optional.">Si la valeur annulable est <see langword="true" />, une instance de l'élément peut avoir la valeur <see langword="nil" /> affectée à l'attribut <see langword="true" />. L'attribut <see langword="nil" /> est défini comme une partie de l'espace de noms du schéma XML pour les instances. La valeur par défaut est <see langword="false" />. Optionnel.</returns>
    </member>
    <member name="P:System.Xml.Schema.XmlSchemaElement.Name">
      <summary vsli:raw="Gets or sets the name of the element.">Obtient ou définit le nom de l'élément.</summary>
      <returns vsli:raw="The name of the element. The default is &lt;see langword=&quot;String.Empty&quot; /&gt;.">Nom de l'élément. La valeur par défaut est <see langword="String.Empty" />.</returns>
    </member>
    <member name="P:System.Xml.Schema.XmlSchemaElement.QualifiedName">
      <summary vsli:raw="Gets the actual qualified name for the given element.">Obtient le nom effectivement qualifié pour l'élément donné.</summary>
      <returns vsli:raw="The qualified name of the element. The post-compilation value of the &lt;see langword=&quot;QualifiedName&quot; /&gt; property.">Nom qualifié de l'élément. Valeur de post-compilation de la propriété <see langword="QualifiedName" />.</returns>
    </member>
    <member name="P:System.Xml.Schema.XmlSchemaElement.RefName">
      <summary vsli:raw="Gets or sets the reference name of an element declared in this schema (or another schema indicated by the specified namespace).">Obtient ou définit le nom de référence d'un élément déclaré dans ce schéma (ou dans un autre schéma indiqué par l'espace de noms spécifié).</summary>
      <returns vsli:raw="The reference name of the element.">Nom de référence de l'élément.</returns>
    </member>
    <member name="P:System.Xml.Schema.XmlSchemaElement.SchemaType">
      <summary vsli:raw="Gets or sets the type of the element. This can either be a complex type or a simple type.">Obtient ou définit le type de l'élément. Il peut s'agir d'un type complexe ou d'un type simple.</summary>
      <returns vsli:raw="The type of the element.">Type de l'élément.</returns>
    </member>
    <member name="P:System.Xml.Schema.XmlSchemaElement.SchemaTypeName">
      <summary vsli:raw="Gets or sets the name of a built-in data type defined in this schema or another schema indicated by the specified namespace.">Obtient ou définit le nom d'un type de données intégré défini dans ce schéma ou dans un autre schéma indiqué par l'espace de noms spécifié.</summary>
      <returns vsli:raw="The name of the built-in data type.">Nom du type de données intégré.</returns>
    </member>
    <member name="P:System.Xml.Schema.XmlSchemaElement.SubstitutionGroup">
      <summary vsli:raw="Gets or sets the name of an element that is being substituted by this element.">Obtient ou définit le nom d'un élément remplacé par cet élément.</summary>
      <returns vsli:raw="The qualified name of an element that is being substituted by this element. Optional.">Nom qualifié d'un élément remplacé par cet élément. Optionnel.</returns>
    </member>
    <member name="T:System.Xml.Schema.XmlSchemaEnumerationFacet">
      <summary vsli:raw="Represents the &lt;see langword=&quot;enumeration&quot; /&gt; facet from XML Schema as specified by the World Wide Web Consortium (W3C). This class specifies a list of valid values for a simpleType element. Declaration is contained within a &lt;see langword=&quot;restriction&quot; /&gt; declaration.">Représente la facette <see langword="enumeration" /> issue d’un schéma XML comme spécifié par le W3C (World Wide Web Consortium). Cette classe spécifie la liste des valeurs valides pour un élément simpleType. La déclaration est contenue dans une déclaration <see langword="restriction" />.</summary>
    </member>
    <member name="M:System.Xml.Schema.XmlSchemaEnumerationFacet.#ctor">
      <summary vsli:raw="Initializes a new instance of the &lt;see cref=&quot;T:System.Xml.Schema.XmlSchemaEnumerationFacet&quot; /&gt; class.">Initialise une nouvelle instance de la classe <see cref="T:System.Xml.Schema.XmlSchemaEnumerationFacet" />.</summary>
    </member>
    <member name="T:System.Xml.Schema.XmlSchemaException">
      <summary vsli:raw="Returns detailed information about the schema exception.">Retourne des informations détaillées à propos de l'exception du schéma.</summary>
    </member>
    <member name="M:System.Xml.Schema.XmlSchemaException.#ctor">
      <summary vsli:raw="Initializes a new instance of the &lt;see cref=&quot;T:System.Xml.Schema.XmlSchemaException&quot; /&gt; class.">Initialise une nouvelle instance de la classe <see cref="T:System.Xml.Schema.XmlSchemaException" />.</summary>
    </member>
    <member name="M:System.Xml.Schema.XmlSchemaException.#ctor(System.Runtime.Serialization.SerializationInfo,System.Runtime.Serialization.StreamingContext)">
      <summary vsli:raw="Constructs a new &lt;see langword=&quot;XmlSchemaException&quot; /&gt; object with the given &lt;see langword=&quot;SerializationInfo&quot; /&gt; and &lt;see langword=&quot;StreamingContext&quot; /&gt; information that contains all the properties of the &lt;see langword=&quot;XmlSchemaException&quot; /&gt;.">Construit un nouvel objet <see langword="XmlSchemaException" /> avec les informations données <see langword="SerializationInfo" /> et <see langword="StreamingContext" /> qui contiennent toutes les propriétés de <see langword="XmlSchemaException" />.</summary>
      <param name="info" vsli:raw="SerializationInfo.">SerializationInfo.</param>
      <param name="context" vsli:raw="StreamingContext.">StreamingContext.</param>
    </member>
    <member name="M:System.Xml.Schema.XmlSchemaException.#ctor(System.String)">
      <summary vsli:raw="Initializes a new instance of the &lt;see cref=&quot;T:System.Xml.Schema.XmlSchemaException&quot; /&gt; class with the exception message specified.">Initialise une nouvelle instance de la classe <see cref="T:System.Xml.Schema.XmlSchemaException" /> avec le message d'exception spécifié.</summary>
      <param name="message" vsli:raw="A &lt;see langword=&quot;string&quot; /&gt; description of the error condition.">Description <see langword="string" /> de la condition d'erreur.</param>
    </member>
    <member name="M:System.Xml.Schema.XmlSchemaException.#ctor(System.String,System.Exception)">
      <summary vsli:raw="Initializes a new instance of the &lt;see cref=&quot;T:System.Xml.Schema.XmlSchemaException&quot; /&gt; class with the exception message and original &lt;see cref=&quot;T:System.Exception&quot; /&gt; object that caused this exception specified.">Initialise une nouvelle instance de la classe <see cref="T:System.Xml.Schema.XmlSchemaException" /> avec le message d'exception et l'objet <see cref="T:System.Exception" /> d'origine qui a entraîné cette exception spécifiée.</summary>
      <param name="message" vsli:raw="A &lt;see langword=&quot;string&quot; /&gt; description of the error condition.">Description <see langword="string" /> de la condition d'erreur.</param>
      <param name="innerException" vsli:raw="The original &lt;see cref=&quot;T:System.Exception&quot; /&gt; object that caused this exception.">L'objet <see cref="T:System.Exception" /> d'origine qui a entraîné cette exception.</param>
    </member>
    <member name="M:System.Xml.Schema.XmlSchemaException.#ctor(System.String,System.Exception,System.Int32,System.Int32)">
      <summary vsli:raw="Initializes a new instance of the &lt;see cref=&quot;T:System.Xml.Schema.XmlSchemaException&quot; /&gt; class with the exception message specified, and the original &lt;see cref=&quot;T:System.Exception&quot; /&gt; object, line number, and line position of the XML that cause this exception specified.">Initialise une nouvelle instance de la classe <see cref="T:System.Xml.Schema.XmlSchemaException" /> avec le message d'exception spécifié et l'objet <see cref="T:System.Exception" /> d'origine, le numéro de ligne et la position de ligne du XML qui entraîne cette exception spécifiée.</summary>
      <param name="message" vsli:raw="A &lt;see langword=&quot;string&quot; /&gt; description of the error condition.">Description <see langword="string" /> de la condition d'erreur.</param>
      <param name="innerException" vsli:raw="The original &lt;see cref=&quot;T:System.Exception&quot; /&gt; object that caused this exception.">L'objet <see cref="T:System.Exception" /> d'origine qui a entraîné cette exception.</param>
      <param name="lineNumber" vsli:raw="The line number of the XML that caused this exception.">Le numéro de ligne du XML qui a entraîné cette exception.</param>
      <param name="linePosition" vsli:raw="The line position of the XML that caused this exception.">La position de ligne du XML qui a entraîné cette exception.</param>
    </member>
    <member name="M:System.Xml.Schema.XmlSchemaException.GetObjectData(System.Runtime.Serialization.SerializationInfo,System.Runtime.Serialization.StreamingContext)">
      <summary vsli:raw="Streams all the &lt;see langword=&quot;XmlSchemaException&quot; /&gt; properties into the &lt;see langword=&quot;SerializationInfo&quot; /&gt; class for the given &lt;see langword=&quot;StreamingContext&quot; /&gt;.">Transmet toutes les propriétés <see langword="XmlSchemaException" /> dans la classe <see langword="SerializationInfo" /> pour le <see langword="StreamingContext" /> donné.</summary>
      <param name="info" vsli:raw="The &lt;see langword=&quot;SerializationInfo&quot; /&gt;.">L’<see langword="SerializationInfo" />opérateur</param>
      <param name="context" vsli:raw="The &lt;see langword=&quot;StreamingContext&quot; /&gt; information.">informations <see langword="StreamingContext" />.</param>
    </member>
    <member name="P:System.Xml.Schema.XmlSchemaException.LineNumber">
      <summary vsli:raw="Gets the line number indicating where the error occurred.">Obtient le numéro de la ligne indiquant l'endroit où l'erreur s'est produite.</summary>
      <returns vsli:raw="The line number indicating where the error occurred.">Numéro de la ligne indiquant l'endroit où l'erreur s'est produite.</returns>
    </member>
    <member name="P:System.Xml.Schema.XmlSchemaException.LinePosition">
      <summary vsli:raw="Gets the line position indicating where the error occurred.">Obtient la position de la ligne indiquant l'endroit où l'erreur s'est produite.</summary>
      <returns vsli:raw="The line position indicating where the error occurred.">Position de la ligne indiquant l'endroit où l'erreur s'est produite.</returns>
    </member>
    <member name="P:System.Xml.Schema.XmlSchemaException.Message">
      <summary vsli:raw="Gets the description of the error condition of this exception.">Obtient la description de la condition d'erreur de cette exception.</summary>
      <returns vsli:raw="The description of the error condition of this exception.">Description de la condition d'erreur de cette exception.</returns>
    </member>
    <member name="P:System.Xml.Schema.XmlSchemaException.SourceSchemaObject">
      <summary vsli:raw="The &lt;see langword=&quot;XmlSchemaObject&quot; /&gt; that produced the &lt;see langword=&quot;XmlSchemaException&quot; /&gt;.">
        <see langword="XmlSchemaObject" /> qui a généré <see langword="XmlSchemaException" />.</summary>
      <returns vsli:raw="A valid object instance represents a structural validation error in the XML Schema Object Model (SOM).">Une instance d'objet valide représente une erreur de validation structurelle dans le modèle SOM (Schema Object Model) XML.</returns>
    </member>
    <member name="P:System.Xml.Schema.XmlSchemaException.SourceUri">
      <summary vsli:raw="Gets the Uniform Resource Identifier (URI) location of the schema that caused the exception.">Obtient l'emplacement de l'URI (Uniform Resource Identifier) du schéma qui a provoqué l'exception.</summary>
      <returns vsli:raw="The URI location of the schema that caused the exception.">Emplacement URI du schéma qui a provoqué l'exception.</returns>
    </member>
    <member name="T:System.Xml.Schema.XmlSchemaExternal">
      <summary vsli:raw="An abstract class. Provides information about the included schema.">Classe abstraite. Fournit des informations à propos du schéma inclus.</summary>
    </member>
    <member name="M:System.Xml.Schema.XmlSchemaExternal.#ctor">
      <summary vsli:raw="Initializes a new instance of the &lt;see cref=&quot;T:System.Xml.Schema.XmlSchemaExternal&quot; /&gt; class.">Initialise une nouvelle instance de la classe <see cref="T:System.Xml.Schema.XmlSchemaExternal" />.</summary>
    </member>
    <member name="P:System.Xml.Schema.XmlSchemaExternal.Id">
      <summary vsli:raw="Gets or sets the string id.">Obtient ou définit l'ID de chaîne.</summary>
      <returns vsli:raw="The string id. The default is &lt;see langword=&quot;String.Empty&quot; /&gt;. Optional.">ID de chaîne. La valeur par défaut est <see langword="String.Empty" /> . Optionnel.</returns>
    </member>
    <member name="P:System.Xml.Schema.XmlSchemaExternal.Schema">
      <summary vsli:raw="Gets or sets the &lt;see langword=&quot;XmlSchema&quot; /&gt; for the referenced schema.">Obtient ou définit le <see langword="XmlSchema" /> pour le schéma référencé.</summary>
      <returns vsli:raw="The &lt;see langword=&quot;XmlSchema&quot; /&gt; for the referenced schema.">
        <see langword="XmlSchema" /> pour le schéma référencé.</returns>
    </member>
    <member name="P:System.Xml.Schema.XmlSchemaExternal.SchemaLocation">
      <summary vsli:raw="Gets or sets the Uniform Resource Identifier (URI) location for the schema, which tells the schema processor where the schema physically resides.">Obtient ou définit l'emplacement de l'URI (Uniform Resource Identifier) pour le schéma, ce qui indique au processeur de schéma l'endroit où le schéma réside physiquement.</summary>
      <returns vsli:raw="The URI location for the schema. Optional for imported schemas.">Emplacement de l'URI pour le schéma. Facultatif pour les schémas importés.</returns>
    </member>
    <member name="P:System.Xml.Schema.XmlSchemaExternal.UnhandledAttributes">
      <summary vsli:raw="Gets or sets the qualified attributes, which do not belong to the schema target namespace.">Obtient ou définit les attributs qualifiés qui n’appartiennent pas à l’espace de noms cible du schéma.</summary>
      <returns vsli:raw="Qualified attributes that belong to another target namespace.">Attributs qualifiés appartenant à un autre espace de noms cible.</returns>
    </member>
    <member name="T:System.Xml.Schema.XmlSchemaFacet">
      <summary vsli:raw="Abstract class for all facets that are used when simple types are derived by restriction.">Classe abstraite pour toutes les facettes qui sont utilisées lorsque des types simples sont dérivés par restriction.</summary>
    </member>
    <member name="M:System.Xml.Schema.XmlSchemaFacet.#ctor">
      <summary vsli:raw="Initializes a new instance of the &lt;see cref=&quot;T:System.Xml.Schema.XmlSchemaFacet&quot; /&gt; class.">Initialise une nouvelle instance de la classe <see cref="T:System.Xml.Schema.XmlSchemaFacet" />.</summary>
    </member>
    <member name="P:System.Xml.Schema.XmlSchemaFacet.IsFixed">
      <summary vsli:raw="Gets or sets information that indicates that this facet is fixed.">Obtient ou définit les informations indiquant que la facette est fixe.</summary>
      <returns vsli:raw="If &lt;see langword=&quot;true&quot; /&gt;, value is fixed; otherwise, &lt;see langword=&quot;false&quot; /&gt;. The default is &lt;see langword=&quot;false&quot; /&gt;. Optional.">Si la valeur est <see langword="true" />, la valeur est fixe ; sinon, <see langword="false" />. La valeur par défaut est <see langword="false" />. Optionnel.</returns>
    </member>
    <member name="P:System.Xml.Schema.XmlSchemaFacet.Value">
      <summary vsli:raw="Gets or sets the &lt;see langword=&quot;value&quot; /&gt; attribute of the facet.">Obtient ou définit l'attribut <see langword="value" /> de la facette.</summary>
      <returns vsli:raw="The value attribute.">Valeur de l'attribut.</returns>
    </member>
    <member name="T:System.Xml.Schema.XmlSchemaForm">
      <summary vsli:raw="Indicates if attributes or elements need to be qualified with a namespace prefix.">Indique si les attributs ou les éléments doivent être qualifiés avec un préfixe d'espace de noms.</summary>
    </member>
    <member name="F:System.Xml.Schema.XmlSchemaForm.None">
      <summary vsli:raw="Element and attribute form is not specified in the schema.">Aucune forme d'élément et d'attribut n'est spécifiée dans le schéma.</summary>
    </member>
    <member name="F:System.Xml.Schema.XmlSchemaForm.Qualified">
      <summary vsli:raw="Elements and attributes must be qualified with a namespace prefix.">Les éléments et les attributs doivent être qualifiés à l'aide d'un préfixe d'espace de noms.</summary>
    </member>
    <member name="F:System.Xml.Schema.XmlSchemaForm.Unqualified">
      <summary vsli:raw="Elements and attributes are not required to be qualified with a namespace prefix.">Les éléments et les attributs ne doivent pas obligatoirement être qualifiés à l'aide d'un préfixe d'espace de noms.</summary>
    </member>
    <member name="T:System.Xml.Schema.XmlSchemaFractionDigitsFacet">
      <summary vsli:raw="Specifies a restriction on the number of digits that can be entered for the fraction value of a simpleType element. The value of fractionDigits must be a positive integer. Represents the World Wide Web Consortium (W3C) &lt;see langword=&quot;fractionDigits&quot; /&gt; facet.">Spécifie une restriction sur le nombre de chiffres pouvant être entrés pour la valeur de fraction d'un élément simpleType. La valeur de fractionDigits doit être un entier positif. Représente la facette World Wide Web Consortium (W3C) <see langword="fractionDigits" />.</summary>
    </member>
    <member name="M:System.Xml.Schema.XmlSchemaFractionDigitsFacet.#ctor">
      <summary vsli:raw="Initializes a new instance of the &lt;see cref=&quot;T:System.Xml.Schema.XmlSchemaFractionDigitsFacet&quot; /&gt; class.">Initialise une nouvelle instance de la classe <see cref="T:System.Xml.Schema.XmlSchemaFractionDigitsFacet" />.</summary>
    </member>
    <member name="T:System.Xml.Schema.XmlSchemaGroup">
      <summary vsli:raw="Represents the &lt;see langword=&quot;group&quot; /&gt; element from XML Schema as specified by the World Wide Web Consortium (W3C). This class defines groups at the &lt;see langword=&quot;schema&quot; /&gt; level that are referenced from the complex types. It groups a set of element declarations so that they can be incorporated as a group into complex type definitions.">Représente l'élément <see langword="group" /> issu d'un schéma XML comme spécifié par le W3C (World Wide Web Consortium). Cette classe définit les groupes au niveau <see langword="schema" /> qui sont référencés à partir de types complexes. Elle regroupe un ensemble de déclarations d'éléments pour qu'elles puissent être incorporées en tant que groupe dans des définitions de types complexes.</summary>
    </member>
    <member name="M:System.Xml.Schema.XmlSchemaGroup.#ctor">
      <summary vsli:raw="Initializes a new instance of the &lt;see cref=&quot;T:System.Xml.Schema.XmlSchemaGroup&quot; /&gt; class.">Initialise une nouvelle instance de la classe <see cref="T:System.Xml.Schema.XmlSchemaGroup" />.</summary>
    </member>
    <member name="P:System.Xml.Schema.XmlSchemaGroup.Name">
      <summary vsli:raw="Gets or sets the name of the schema group.">Obtient ou définit le nom du groupe de schémas.</summary>
      <returns vsli:raw="The name of the schema group.">Nom du groupe de schémas.</returns>
    </member>
    <member name="P:System.Xml.Schema.XmlSchemaGroup.Particle">
      <summary vsli:raw="Gets or sets one of the &lt;see cref=&quot;T:System.Xml.Schema.XmlSchemaChoice&quot; /&gt;, &lt;see cref=&quot;T:System.Xml.Schema.XmlSchemaAll&quot; /&gt;, or &lt;see cref=&quot;T:System.Xml.Schema.XmlSchemaSequence&quot; /&gt; classes.">Obtient ou définit une des classes <see cref="T:System.Xml.Schema.XmlSchemaChoice" />, <see cref="T:System.Xml.Schema.XmlSchemaAll" /> ou <see cref="T:System.Xml.Schema.XmlSchemaSequence" />.</summary>
      <returns vsli:raw="One of the &lt;see cref=&quot;T:System.Xml.Schema.XmlSchemaChoice&quot; /&gt;, &lt;see cref=&quot;T:System.Xml.Schema.XmlSchemaAll&quot; /&gt;, or &lt;see cref=&quot;T:System.Xml.Schema.XmlSchemaSequence&quot; /&gt; classes.">Une des classes <see cref="T:System.Xml.Schema.XmlSchemaChoice" />, <see cref="T:System.Xml.Schema.XmlSchemaAll" /> ou <see cref="T:System.Xml.Schema.XmlSchemaSequence" />.</returns>
    </member>
    <member name="P:System.Xml.Schema.XmlSchemaGroup.QualifiedName">
      <summary vsli:raw="Gets the qualified name of the schema group.">Obtient le nom qualifié du groupe de schémas.</summary>
      <returns vsli:raw="An &lt;see cref=&quot;T:System.Xml.XmlQualifiedName&quot; /&gt; object representing the qualified name of the schema group.">Objet <see cref="T:System.Xml.XmlQualifiedName" /> qui représente le nom qualifié du groupe de schémas.</returns>
    </member>
    <member name="T:System.Xml.Schema.XmlSchemaGroupBase">
      <summary vsli:raw="An abstract class for &lt;see cref=&quot;T:System.Xml.Schema.XmlSchemaAll&quot; /&gt;, &lt;see cref=&quot;T:System.Xml.Schema.XmlSchemaChoice&quot; /&gt;, or &lt;see cref=&quot;T:System.Xml.Schema.XmlSchemaSequence&quot; /&gt;.">Classe abstraite pour <see cref="T:System.Xml.Schema.XmlSchemaAll" />, <see cref="T:System.Xml.Schema.XmlSchemaChoice" /> ou <see cref="T:System.Xml.Schema.XmlSchemaSequence" />.</summary>
    </member>
    <member name="P:System.Xml.Schema.XmlSchemaGroupBase.Items">
      <summary vsli:raw="This collection is used to add new elements to the compositor.">Cette collection permet d'ajouter de nouveaux éléments au compositeur.</summary>
      <returns vsli:raw="An &lt;see langword=&quot;XmlSchemaObjectCollection&quot; /&gt;.">Élément <see langword="XmlSchemaObjectCollection" />.</returns>
    </member>
    <member name="T:System.Xml.Schema.XmlSchemaGroupRef">
      <summary vsli:raw="Represents the &lt;see langword=&quot;group&quot; /&gt; element with &lt;see langword=&quot;ref&quot; /&gt; attribute from the XML Schema as specified by the World Wide Web Consortium (W3C). This class is used within complex types that reference a &lt;see langword=&quot;group&quot; /&gt; defined at the &lt;see langword=&quot;schema&quot; /&gt; level.">Représente l’élément <see langword="group" /> avec l’attribut <see langword="ref" /> issu du schéma XML, comme spécifié par le W3C (World Wide Web Consortium). Cette classe est utilisée dans les types complexes qui référencent un <see langword="group" /> défini au niveau <see langword="schema" />.</summary>
    </member>
    <member name="M:System.Xml.Schema.XmlSchemaGroupRef.#ctor">
      <summary vsli:raw="Initializes a new instance of the &lt;see cref=&quot;T:System.Xml.Schema.XmlSchemaGroupRef&quot; /&gt; class.">Initialise une nouvelle instance de la classe <see cref="T:System.Xml.Schema.XmlSchemaGroupRef" />.</summary>
    </member>
    <member name="P:System.Xml.Schema.XmlSchemaGroupRef.Particle">
      <summary vsli:raw="Gets one of the &lt;see cref=&quot;T:System.Xml.Schema.XmlSchemaChoice&quot; /&gt;, &lt;see cref=&quot;T:System.Xml.Schema.XmlSchemaAll&quot; /&gt;, or &lt;see cref=&quot;T:System.Xml.Schema.XmlSchemaSequence&quot; /&gt; classes, which holds the post-compilation value of the &lt;see langword=&quot;Particle&quot; /&gt; property.">Obtient une des classes <see cref="T:System.Xml.Schema.XmlSchemaChoice" />, <see cref="T:System.Xml.Schema.XmlSchemaAll" />, ou <see cref="T:System.Xml.Schema.XmlSchemaSequence" /> qui contient la valeur de post-compilation de la propriété <see langword="Particle" />.</summary>
      <returns vsli:raw="The post-compilation value of the &lt;see langword=&quot;Particle&quot; /&gt; property, which is one of the &lt;see cref=&quot;T:System.Xml.Schema.XmlSchemaChoice&quot; /&gt;, &lt;see cref=&quot;T:System.Xml.Schema.XmlSchemaAll&quot; /&gt;, or &lt;see cref=&quot;T:System.Xml.Schema.XmlSchemaSequence&quot; /&gt; classes.">Valeur de post-compilation de la propriété <see langword="Particle" />, qui est une des classes suivantes :<see cref="T:System.Xml.Schema.XmlSchemaChoice" />, <see cref="T:System.Xml.Schema.XmlSchemaAll" />, ou <see cref="T:System.Xml.Schema.XmlSchemaSequence" />.</returns>
    </member>
    <member name="P:System.Xml.Schema.XmlSchemaGroupRef.RefName">
      <summary vsli:raw="Gets or sets the name of a group defined in this schema (or another schema indicated by the specified namespace).">Obtient ou définit le nom d'un groupe défini dans ce schéma (ou dans un autre schéma indiqué par l'espace de noms spécifié).</summary>
      <returns vsli:raw="The name of a group defined in this schema.">Nom d'un groupe défini dans ce schéma.</returns>
    </member>
    <member name="T:System.Xml.Schema.XmlSchemaIdentityConstraint">
      <summary vsli:raw="Class for the identity constraints: &lt;see langword=&quot;key&quot; /&gt;, &lt;see langword=&quot;keyref&quot; /&gt;, and &lt;see langword=&quot;unique&quot; /&gt; elements.">Classe pour les contraintes d'identité : éléments <see langword="key" />, <see langword="keyref" /> et <see langword="unique" />.</summary>
    </member>
    <member name="M:System.Xml.Schema.XmlSchemaIdentityConstraint.#ctor">
      <summary vsli:raw="Initializes a new instance of the &lt;see cref=&quot;T:System.Xml.Schema.XmlSchemaIdentityConstraint&quot; /&gt; class.">Initialise une nouvelle instance de la classe <see cref="T:System.Xml.Schema.XmlSchemaIdentityConstraint" />.</summary>
    </member>
    <member name="P:System.Xml.Schema.XmlSchemaIdentityConstraint.Fields">
      <summary vsli:raw="Gets the collection of fields that apply as children for the XML Path Language (XPath) expression selector.">Obtient la collection de champs qui s'appliquent en tant qu'enfants pour le sélecteur d'expressions XPath (XML Path Language).</summary>
      <returns vsli:raw="The collection of fields.">Collection de champs.</returns>
    </member>
    <member name="P:System.Xml.Schema.XmlSchemaIdentityConstraint.Name">
      <summary vsli:raw="Gets or sets the name of the identity constraint.">Obtient ou définit le nom de la contrainte d'identité.</summary>
      <returns vsli:raw="The name of the identity constraint.">Nom de la contrainte d'identité.</returns>
    </member>
    <member name="P:System.Xml.Schema.XmlSchemaIdentityConstraint.QualifiedName">
      <summary vsli:raw="Gets the qualified name of the identity constraint, which holds the post-compilation value of the &lt;see langword=&quot;QualifiedName&quot; /&gt; property.">Obtient le nom qualifié de la contrainte d'identité qui contient la valeur de post-compilation de la propriété <see langword="QualifiedName" />.</summary>
      <returns vsli:raw="The post-compilation value of the &lt;see langword=&quot;QualifiedName&quot; /&gt; property.">Valeur de post-compilation de la propriété <see langword="QualifiedName" />.</returns>
    </member>
    <member name="P:System.Xml.Schema.XmlSchemaIdentityConstraint.Selector">
      <summary vsli:raw="Gets or sets the XPath expression &lt;see langword=&quot;selector&quot; /&gt; element.">Obtient ou définit l'élément <see langword="selector" /> de l'expression XPath.</summary>
      <returns vsli:raw="The XPath expression &lt;see langword=&quot;selector&quot; /&gt; element.">Élément <see langword="selector" /> de l'expression XPath.</returns>
    </member>
    <member name="T:System.Xml.Schema.XmlSchemaImport">
      <summary vsli:raw="Represents the &lt;see langword=&quot;import&quot; /&gt; element from XML Schema as specified by the World Wide Web Consortium (W3C). This class is used to import schema components from other schemas.">Représente l'élément <see langword="import" /> issu d'un schéma XML comme spécifié par le W3C (World Wide Web Consortium). Cette classe est utilisée pour importer des composants de schéma d'autres schémas.</summary>
    </member>
    <member name="M:System.Xml.Schema.XmlSchemaImport.#ctor">
      <summary vsli:raw="Initializes a new instance of the &lt;see cref=&quot;T:System.Xml.Schema.XmlSchemaImport&quot; /&gt; class.">Initialise une nouvelle instance de la classe <see cref="T:System.Xml.Schema.XmlSchemaImport" />.</summary>
    </member>
    <member name="P:System.Xml.Schema.XmlSchemaImport.Annotation">
      <summary vsli:raw="Gets or sets the &lt;see langword=&quot;annotation&quot; /&gt; property.">Obtient ou définit la propriété <see langword="annotation" />.</summary>
      <returns vsli:raw="The annotation.">Annotation.</returns>
    </member>
    <member name="P:System.Xml.Schema.XmlSchemaImport.Namespace">
      <summary vsli:raw="Gets or sets the target namespace for the imported schema as a Uniform Resource Identifier (URI) reference.">Obtient ou définit l'espace de noms cible pour le schéma importé en tant que référence URI (Uniform Resource Identifier).</summary>
      <returns vsli:raw="The target namespace for the imported schema as a URI reference. Optional.">Espace de noms cible pour le schéma importé en tant que référence URI. Optionnel.</returns>
    </member>
    <member name="T:System.Xml.Schema.XmlSchemaInclude">
      <summary vsli:raw="Represents the &lt;see langword=&quot;include&quot; /&gt; element from XML Schema as specified by the World Wide Web Consortium (W3C). This class is used to include declarations and definitions from an external schema. The included declarations and definitions are then available for processing in the containing schema.">Représente l'élément <see langword="include" /> issu d'un schéma XML comme spécifié par le W3C (World Wide Web Consortium). Cette classe est utilisée pour inclure des déclarations et des définitions à partir d'un schéma externe. Les déclarations et les définitions incluses sont ensuite disponibles pour être traitées dans le schéma contenant.</summary>
    </member>
    <member name="M:System.Xml.Schema.XmlSchemaInclude.#ctor">
      <summary vsli:raw="Initializes a new instance of the &lt;see cref=&quot;T:System.Xml.Schema.XmlSchemaInclude&quot; /&gt; class.">Initialise une nouvelle instance de la classe <see cref="T:System.Xml.Schema.XmlSchemaInclude" />.</summary>
    </member>
    <member name="P:System.Xml.Schema.XmlSchemaInclude.Annotation">
      <summary vsli:raw="Gets or sets the &lt;see langword=&quot;annotation&quot; /&gt; property.">Obtient ou définit la propriété <see langword="annotation" />.</summary>
      <returns vsli:raw="The annotation.">Annotation.</returns>
    </member>
    <member name="T:System.Xml.Schema.XmlSchemaInference">
      <summary vsli:raw="Infers an XML Schema Definition Language (XSD) schema from an XML document. The &lt;see cref=&quot;T:System.Xml.Schema.XmlSchemaInference&quot; /&gt; class cannot be inherited.">Déduit un schéma en langage XSD (XML Schema Definition) d'un document XML. La classe <see cref="T:System.Xml.Schema.XmlSchemaInference" /> ne peut pas être héritée.</summary>
    </member>
    <member name="M:System.Xml.Schema.XmlSchemaInference.#ctor">
      <summary vsli:raw="Initializes a new instance of the &lt;see cref=&quot;T:System.Xml.Schema.XmlSchemaInference&quot; /&gt; class.">Initialise une nouvelle instance de la classe <see cref="T:System.Xml.Schema.XmlSchemaInference" />.</summary>
    </member>
    <member name="M:System.Xml.Schema.XmlSchemaInference.InferSchema(System.Xml.XmlReader)">
      <summary vsli:raw="Infers an XML Schema Definition Language (XSD) schema from the XML document contained in the &lt;see cref=&quot;T:System.Xml.XmlReader&quot; /&gt; object specified.">Déduit un schéma en langage XSD (XML Schema Definition) du document XML contenu dans l'objet <see cref="T:System.Xml.XmlReader" /> spécifié.</summary>
      <param name="instanceDocument" vsli:raw="An &lt;see cref=&quot;T:System.Xml.XmlReader&quot; /&gt; object containing the XML document to infer a schema from.">Objet <see cref="T:System.Xml.XmlReader" /> contenant le document XML duquel déduire un schéma.</param>
      <exception cref="T:System.Xml.XmlException" vsli:raw="The XML document is not well-formed.">Le document XML n'est pas correct.</exception>
      <exception cref="T:System.Xml.Schema.XmlSchemaInferenceException" vsli:raw="The &lt;see cref=&quot;T:System.Xml.XmlReader&quot; /&gt; object is not positioned on the root node or on an element. An error occurs during the schema inference process.">L'objet <see cref="T:System.Xml.XmlReader" /> n'est pas positionné sur le nœud racine ou sur un élément. Une erreur se produit pendant le processus d'inférence du schéma.</exception>
      <returns vsli:raw="An &lt;see cref=&quot;T:System.Xml.Schema.XmlSchemaSet&quot; /&gt; object containing the inferred schemas.">Objet <see cref="T:System.Xml.Schema.XmlSchemaSet" /> contenant les schémas déduits.</returns>
    </member>
    <member name="M:System.Xml.Schema.XmlSchemaInference.InferSchema(System.Xml.XmlReader,System.Xml.Schema.XmlSchemaSet)">
      <summary vsli:raw="Infers an XML Schema Definition Language (XSD) schema from the XML document contained in the &lt;see cref=&quot;T:System.Xml.XmlReader&quot; /&gt; object specified, and refines the inferred schema using an existing schema in the &lt;see cref=&quot;T:System.Xml.Schema.XmlSchemaSet&quot; /&gt; object specified with the same target namespace.">Déduit un schéma en langage XSD (XML Schema Definition) du document XML contenu dans l'objet <see cref="T:System.Xml.XmlReader" /> spécifié et raffine le schéma déduit à l'aide d'un schéma existant dans l'objet <see cref="T:System.Xml.Schema.XmlSchemaSet" /> spécifié avec le même espace de noms cible.</summary>
      <param name="instanceDocument" vsli:raw="An &lt;see cref=&quot;T:System.Xml.XmlReader&quot; /&gt; object containing the XML document to infer a schema from.">Objet <see cref="T:System.Xml.XmlReader" /> contenant le document XML duquel déduire un schéma.</param>
      <param name="schemas" vsli:raw="An &lt;see cref=&quot;T:System.Xml.Schema.XmlSchemaSet&quot; /&gt; object containing an existing schema used to refine the inferred schema.">Objet <see cref="T:System.Xml.Schema.XmlSchemaSet" /> contenant un schéma existant utilisé pour raffiner le schéma déduit.</param>
      <exception cref="T:System.Xml.XmlException" vsli:raw="The XML document is not well-formed.">Le document XML n'est pas correct.</exception>
      <exception cref="T:System.Xml.Schema.XmlSchemaInferenceException" vsli:raw="The &lt;see cref=&quot;T:System.Xml.XmlReader&quot; /&gt; object is not positioned on the root node or on an element. An error occurs during the schema inference process.">L'objet <see cref="T:System.Xml.XmlReader" /> n'est pas positionné sur le nœud racine ou sur un élément. Une erreur se produit pendant le processus d'inférence du schéma.</exception>
      <returns vsli:raw="An &lt;see cref=&quot;T:System.Xml.Schema.XmlSchemaSet&quot; /&gt; object containing the inferred schemas.">Objet <see cref="T:System.Xml.Schema.XmlSchemaSet" /> contenant les schémas déduits.</returns>
    </member>
    <member name="P:System.Xml.Schema.XmlSchemaInference.Occurrence">
      <summary vsli:raw="Gets or sets the &lt;see cref=&quot;T:System.Xml.Schema.XmlSchemaInference.InferenceOption&quot; /&gt; value that affects schema occurrence declarations inferred from the XML document.">Obtient ou définit la valeur <see cref="T:System.Xml.Schema.XmlSchemaInference.InferenceOption" /> qui a un impact sur les déclarations d'occurrences du schéma déduites du document XML.</summary>
      <returns vsli:raw="An &lt;see cref=&quot;T:System.Xml.Schema.XmlSchemaInference.InferenceOption&quot; /&gt; object.">Objet <see cref="T:System.Xml.Schema.XmlSchemaInference.InferenceOption" />.</returns>
    </member>
    <member name="P:System.Xml.Schema.XmlSchemaInference.TypeInference">
      <summary vsli:raw="Gets or sets the &lt;see cref=&quot;T:System.Xml.Schema.XmlSchemaInference.InferenceOption&quot; /&gt; value that affects types inferred from the XML document.">Obtient ou définit la valeur <see cref="T:System.Xml.Schema.XmlSchemaInference.InferenceOption" /> qui a un impact sur les types déduits du document XML.</summary>
      <returns vsli:raw="An &lt;see cref=&quot;T:System.Xml.Schema.XmlSchemaInference.InferenceOption&quot; /&gt; object.">Objet <see cref="T:System.Xml.Schema.XmlSchemaInference.InferenceOption" />.</returns>
    </member>
    <member name="T:System.Xml.Schema.XmlSchemaInference.InferenceOption">
      <summary vsli:raw="Affects occurrence and type information inferred by the &lt;see cref=&quot;T:System.Xml.Schema.XmlSchemaInference&quot; /&gt; class for elements and attributes in an XML document.">A un impact sur les informations liées aux occurrences et aux types déduits par la classe <see cref="T:System.Xml.Schema.XmlSchemaInference" /> pour les éléments et les attributs dans un document XML.</summary>
    </member>
    <member name="F:System.Xml.Schema.XmlSchemaInference.InferenceOption.Relaxed">
      <summary vsli:raw="Indicates that a less restrictive schema declaration should be inferred for a particular element or attribute.">Indique qu'une déclaration de schéma moins restrictive doit être déduite pour un élément ou un attribut particulier.</summary>
    </member>
    <member name="F:System.Xml.Schema.XmlSchemaInference.InferenceOption.Restricted">
      <summary vsli:raw="Indicates that a more restrictive schema declaration should be inferred for a particular element or attribute.">Indique qu'une déclaration de schéma plus restrictive doit être déduite pour un élément ou un attribut particulier.</summary>
    </member>
    <member name="T:System.Xml.Schema.XmlSchemaInferenceException">
      <summary vsli:raw="Returns information about errors encountered by the &lt;see cref=&quot;T:System.Xml.Schema.XmlSchemaInference&quot; /&gt; class while inferring a schema from an XML document.">Retourne des informations sur des erreurs rencontrées par la classe <see cref="T:System.Xml.Schema.XmlSchemaInference" /> lorsqu'un schéma est déduit à partir d'un document XML.</summary>
    </member>
    <member name="M:System.Xml.Schema.XmlSchemaInferenceException.#ctor">
      <summary vsli:raw="Initializes a new instance of the &lt;see cref=&quot;T:System.Xml.Schema.XmlSchemaInferenceException&quot; /&gt; class.">Initialise une nouvelle instance de la classe <see cref="T:System.Xml.Schema.XmlSchemaInferenceException" />.</summary>
    </member>
    <member name="M:System.Xml.Schema.XmlSchemaInferenceException.#ctor(System.Runtime.Serialization.SerializationInfo,System.Runtime.Serialization.StreamingContext)">
      <summary vsli:raw="Initializes a new instance of the &lt;see cref=&quot;T:System.Xml.Schema.XmlSchemaInferenceException&quot; /&gt; class with the &lt;see cref=&quot;T:System.Runtime.Serialization.SerializationInfo&quot; /&gt; and &lt;see cref=&quot;T:System.Runtime.Serialization.StreamingContext&quot; /&gt; objects specified that contain all the properties of the &lt;see cref=&quot;T:System.Xml.Schema.XmlSchemaInferenceException&quot; /&gt;.">Initialise une nouvelle instance de la classe <see cref="T:System.Xml.Schema.XmlSchemaInferenceException" /> avec les objets <see cref="T:System.Runtime.Serialization.SerializationInfo" /> et <see cref="T:System.Runtime.Serialization.StreamingContext" /> spécifiés qui contiennent toutes les propriétés de <see cref="T:System.Xml.Schema.XmlSchemaInferenceException" />.</summary>
      <param name="info" vsli:raw="A &lt;see cref=&quot;T:System.Runtime.Serialization.SerializationInfo&quot; /&gt; object.">Objet <see cref="T:System.Runtime.Serialization.SerializationInfo" />.</param>
      <param name="context" vsli:raw="A &lt;see cref=&quot;T:System.Runtime.Serialization.StreamingContext&quot; /&gt; object.">Objet <see cref="T:System.Runtime.Serialization.StreamingContext" />.</param>
    </member>
    <member name="M:System.Xml.Schema.XmlSchemaInferenceException.#ctor(System.String)">
      <summary vsli:raw="Initializes a new instance of the &lt;see cref=&quot;T:System.Xml.Schema.XmlSchemaInferenceException&quot; /&gt; class with the error message specified.">Initialise une nouvelle instance de la classe <see cref="T:System.Xml.Schema.XmlSchemaInferenceException" /> avec le message d'erreur spécifié.</summary>
      <param name="message" vsli:raw="A description of the error.">Description de l’erreur.</param>
    </member>
    <member name="M:System.Xml.Schema.XmlSchemaInferenceException.#ctor(System.String,System.Exception)">
      <summary vsli:raw="Initializes a new instance of the &lt;see cref=&quot;T:System.Xml.Schema.XmlSchemaInferenceException&quot; /&gt; class with the error message specified and the original &lt;see cref=&quot;T:System.Exception&quot; /&gt; that caused the &lt;see cref=&quot;T:System.Xml.Schema.XmlSchemaInferenceException&quot; /&gt; specified.">Initialise une nouvelle instance de la classe <see cref="T:System.Xml.Schema.XmlSchemaInferenceException" /> avec le message d'erreur spécifié et le <see cref="T:System.Exception" /> d'origine qui a entraîné le <see cref="T:System.Xml.Schema.XmlSchemaInferenceException" /> spécifié.</summary>
      <param name="message" vsli:raw="A description of the error.">Description de l’erreur.</param>
      <param name="innerException" vsli:raw="An &lt;see cref=&quot;T:System.Exception&quot; /&gt; object containing the original exception that caused the &lt;see cref=&quot;T:System.Xml.Schema.XmlSchemaInferenceException&quot; /&gt;.">Objet <see cref="T:System.Exception" /> qui contient l'exception d'origine qui a entraîné le <see cref="T:System.Xml.Schema.XmlSchemaInferenceException" />.</param>
    </member>
    <member name="M:System.Xml.Schema.XmlSchemaInferenceException.#ctor(System.String,System.Exception,System.Int32,System.Int32)">
      <summary vsli:raw="Initializes a new instance of the &lt;see cref=&quot;T:System.Xml.Schema.XmlSchemaInferenceException&quot; /&gt; class with the error message specified, the original &lt;see cref=&quot;T:System.Exception&quot; /&gt; that caused the &lt;see cref=&quot;T:System.Xml.Schema.XmlSchemaInferenceException&quot; /&gt; specified, and the line number and line position of the error in the XML document specified.">Initialise une nouvelle instance de la classe <see cref="T:System.Xml.Schema.XmlSchemaInferenceException" /> avec le message d'erreur spécifié, l'<see cref="T:System.Exception" /> d'origine qui a entraîné le <see cref="T:System.Xml.Schema.XmlSchemaInferenceException" /> spécifiée et le numéro et la position de ligne de l'erreur dans le document XML spécifié.</summary>
      <param name="message" vsli:raw="A description of the error.">Description de l’erreur.</param>
      <param name="innerException" vsli:raw="An &lt;see cref=&quot;T:System.Exception&quot; /&gt; object containing the original exception that caused the &lt;see cref=&quot;T:System.Xml.Schema.XmlSchemaInferenceException&quot; /&gt;.">Objet <see cref="T:System.Exception" /> qui contient l'exception d'origine qui a entraîné le <see cref="T:System.Xml.Schema.XmlSchemaInferenceException" />.</param>
      <param name="lineNumber" vsli:raw="The line number in the XML document that caused the &lt;see cref=&quot;T:System.Xml.Schema.XmlSchemaInferenceException&quot; /&gt;.">Numéro de ligne dans le document XML qui a entraîné le <see cref="T:System.Xml.Schema.XmlSchemaInferenceException" />.</param>
      <param name="linePosition" vsli:raw="The line position in the XML document that caused the &lt;see cref=&quot;T:System.Xml.Schema.XmlSchemaInferenceException&quot; /&gt;.">Position de ligne dans le document XML qui a entraîné le <see cref="T:System.Xml.Schema.XmlSchemaInferenceException" />.</param>
    </member>
    <member name="M:System.Xml.Schema.XmlSchemaInferenceException.GetObjectData(System.Runtime.Serialization.SerializationInfo,System.Runtime.Serialization.StreamingContext)">
      <summary vsli:raw="Streams all the &lt;see cref=&quot;T:System.Xml.Schema.XmlSchemaInferenceException&quot; /&gt; object properties into the &lt;see cref=&quot;T:System.Runtime.Serialization.SerializationInfo&quot; /&gt; object specified for the &lt;see cref=&quot;T:System.Runtime.Serialization.StreamingContext&quot; /&gt; object specified.">Transmet en continu toutes les propriétés d'objet <see cref="T:System.Xml.Schema.XmlSchemaInferenceException" /> dans l'objet <see cref="T:System.Runtime.Serialization.SerializationInfo" /> spécifié pour l'objet <see cref="T:System.Runtime.Serialization.StreamingContext" /> spécifié.</summary>
      <param name="info" vsli:raw="A &lt;see cref=&quot;T:System.Runtime.Serialization.SerializationInfo&quot; /&gt; object.">Objet <see cref="T:System.Runtime.Serialization.SerializationInfo" />.</param>
      <param name="context" vsli:raw="A &lt;see cref=&quot;T:System.Runtime.Serialization.StreamingContext&quot; /&gt; object.">Objet <see cref="T:System.Runtime.Serialization.StreamingContext" />.</param>
    </member>
    <member name="T:System.Xml.Schema.XmlSchemaInfo">
      <summary vsli:raw="Represents the post-schema-validation infoset of a validated XML node.">Représente le jeu d'informations postérieur à la validation du schéma d'un nœud XML validé.</summary>
    </member>
    <member name="M:System.Xml.Schema.XmlSchemaInfo.#ctor">
      <summary vsli:raw="Initializes a new instance of the &lt;see cref=&quot;T:System.Xml.Schema.XmlSchemaInfo&quot; /&gt; class.">Initialise une nouvelle instance de la classe <see cref="T:System.Xml.Schema.XmlSchemaInfo" />.</summary>
    </member>
    <member name="P:System.Xml.Schema.XmlSchemaInfo.ContentType">
      <summary vsli:raw="Gets or sets the &lt;see cref=&quot;T:System.Xml.Schema.XmlSchemaContentType&quot; /&gt; object that corresponds to the content type of this validated XML node.">Obtient ou définit l'objet <see cref="T:System.Xml.Schema.XmlSchemaContentType" /> qui correspond au type de contenu de ce nœud XML validé.</summary>
      <returns vsli:raw="An &lt;see cref=&quot;T:System.Xml.Schema.XmlSchemaContentType&quot; /&gt; object.">Objet <see cref="T:System.Xml.Schema.XmlSchemaContentType" />.</returns>
    </member>
    <member name="P:System.Xml.Schema.XmlSchemaInfo.IsDefault">
      <summary vsli:raw="Gets or sets a value indicating if this validated XML node was set as the result of a default being applied during XML Schema Definition Language (XSD) schema validation.">Obtient ou définit une valeur indiquant si ce nœud XML validé a été défini comme le résultat d'une valeur par défaut appliquée pendant la validation du schéma en langage XSD (XML Schema Definition).</summary>
      <returns vsli:raw="A &lt;see langword=&quot;bool&quot; /&gt; value.">Valeur <see langword="bool" />.</returns>
    </member>
    <member name="P:System.Xml.Schema.XmlSchemaInfo.IsNil">
      <summary vsli:raw="Gets or sets a value indicating if the value for this validated XML node is nil.">Obtient ou définit une valeur indiquant si la valeur de ce nœud XML est Nil.</summary>
      <returns vsli:raw="A &lt;see langword=&quot;bool&quot; /&gt; value.">Valeur <see langword="bool" />.</returns>
    </member>
    <member name="P:System.Xml.Schema.XmlSchemaInfo.MemberType">
      <summary vsli:raw="Gets or sets the dynamic schema type for this validated XML node.">Obtient ou définit le type de schéma dynamique pour ce nœud XML validé.</summary>
      <returns vsli:raw="An &lt;see cref=&quot;T:System.Xml.Schema.XmlSchemaSimpleType&quot; /&gt; object.">Objet <see cref="T:System.Xml.Schema.XmlSchemaSimpleType" />.</returns>
    </member>
    <member name="P:System.Xml.Schema.XmlSchemaInfo.SchemaAttribute">
      <summary vsli:raw="Gets or sets the compiled &lt;see cref=&quot;T:System.Xml.Schema.XmlSchemaAttribute&quot; /&gt; object that corresponds to this validated XML node.">Obtient ou définit l'objet <see cref="T:System.Xml.Schema.XmlSchemaAttribute" /> compilé qui correspond à ce nœud XML validé.</summary>
      <returns vsli:raw="An &lt;see cref=&quot;T:System.Xml.Schema.XmlSchemaAttribute&quot; /&gt; object.">Objet <see cref="T:System.Xml.Schema.XmlSchemaAttribute" />.</returns>
    </member>
    <member name="P:System.Xml.Schema.XmlSchemaInfo.SchemaElement">
      <summary vsli:raw="Gets or sets the compiled &lt;see cref=&quot;T:System.Xml.Schema.XmlSchemaElement&quot; /&gt; object that corresponds to this validated XML node.">Obtient ou définit l'objet <see cref="T:System.Xml.Schema.XmlSchemaElement" /> compilé qui correspond à ce nœud XML validé.</summary>
      <returns vsli:raw="An &lt;see cref=&quot;T:System.Xml.Schema.XmlSchemaElement&quot; /&gt; object.">Objet <see cref="T:System.Xml.Schema.XmlSchemaElement" />.</returns>
    </member>
    <member name="P:System.Xml.Schema.XmlSchemaInfo.SchemaType">
      <summary vsli:raw="Gets or sets the static XML Schema Definition Language (XSD) schema type of this validated XML node.">Obtient ou définit le type de schéma en langage XSD (XML Schema Definition) statique de ce nœud XML validé.</summary>
      <returns vsli:raw="An &lt;see cref=&quot;T:System.Xml.Schema.XmlSchemaType&quot; /&gt; object.">Objet <see cref="T:System.Xml.Schema.XmlSchemaType" />.</returns>
    </member>
    <member name="P:System.Xml.Schema.XmlSchemaInfo.Validity">
      <summary vsli:raw="Gets or sets the &lt;see cref=&quot;T:System.Xml.Schema.XmlSchemaValidity&quot; /&gt; value of this validated XML node.">Obtient ou définit la valeur <see cref="T:System.Xml.Schema.XmlSchemaValidity" /> de ce nœud XML validé.</summary>
      <returns vsli:raw="An &lt;see cref=&quot;T:System.Xml.Schema.XmlSchemaValidity&quot; /&gt; value.">Valeur <see cref="T:System.Xml.Schema.XmlSchemaValidity" />.</returns>
    </member>
    <member name="T:System.Xml.Schema.XmlSchemaKey">
      <summary vsli:raw="This class represents the &lt;see langword=&quot;key&quot; /&gt; element from XMLSchema as specified by the World Wide Web Consortium (W3C).">Cette classe représente l’élément <see langword="key" /> issu d’un schéma XML comme spécifié par le W3C (World Wide Web Consortium).</summary>
    </member>
    <member name="M:System.Xml.Schema.XmlSchemaKey.#ctor">
      <summary vsli:raw="Initializes a new instance of the &lt;see cref=&quot;T:System.Xml.Schema.XmlSchemaKey&quot; /&gt; class.">Initialise une nouvelle instance de la classe <see cref="T:System.Xml.Schema.XmlSchemaKey" />.</summary>
    </member>
    <member name="T:System.Xml.Schema.XmlSchemaKeyref">
      <summary vsli:raw="This class represents the &lt;see langword=&quot;keyref&quot; /&gt; element from XMLSchema as specified by the World Wide Web Consortium (W3C).">Cette classe représente l’élément <see langword="keyref" /> issu d’un schéma XML comme spécifié par le W3C (World Wide Web Consortium).</summary>
    </member>
    <member name="M:System.Xml.Schema.XmlSchemaKeyref.#ctor">
      <summary vsli:raw="Initializes a new instance of the &lt;see cref=&quot;T:System.Xml.Schema.XmlSchemaKeyref&quot; /&gt; class.">Initialise une nouvelle instance de la classe <see cref="T:System.Xml.Schema.XmlSchemaKeyref" />.</summary>
    </member>
    <member name="P:System.Xml.Schema.XmlSchemaKeyref.Refer">
      <summary vsli:raw="Gets or sets the name of the key that this constraint refers to in another simple or complex type.">Obtient ou définit le nom de la clé à laquelle cette contrainte fait référence dans un autre type simple ou complexe.</summary>
      <returns vsli:raw="The QName of the key that this constraint refers to.">QName de la clé à laquelle cette contrainte fait référence.</returns>
    </member>
    <member name="T:System.Xml.Schema.XmlSchemaLengthFacet">
      <summary vsli:raw="Represents the &lt;see langword=&quot;length&quot; /&gt; facet from XML Schema as specified by the World Wide Web Consortium (W3C). This class can be used to specify a restriction on the length of a &lt;see langword=&quot;simpleType&quot; /&gt; element on the data type.">Représente la facette <see langword="length" /> issue d’un schéma XML comme spécifié par le W3C (World Wide Web Consortium). Cette classe peut être utilisée pour spécifier une restriction sur la longueur d'un élément <see langword="simpleType" /> sur le type de données.</summary>
    </member>
    <member name="M:System.Xml.Schema.XmlSchemaLengthFacet.#ctor">
      <summary vsli:raw="Initializes a new instance of the &lt;see cref=&quot;T:System.Xml.Schema.XmlSchemaLengthFacet&quot; /&gt; class.">Initialise une nouvelle instance de la classe <see cref="T:System.Xml.Schema.XmlSchemaLengthFacet" />.</summary>
    </member>
    <member name="T:System.Xml.Schema.XmlSchemaMaxExclusiveFacet">
      <summary vsli:raw="Represents the &lt;see langword=&quot;maxExclusive&quot; /&gt; element from XML Schema as specified by the World Wide Web Consortium (W3C). This class can be used to specify a restriction on the maximum value of a &lt;see langword=&quot;simpleType&quot; /&gt; element. The element value must be less than the value of the &lt;see langword=&quot;maxExclusive&quot; /&gt; element.">Représente l'élément <see langword="maxExclusive" /> issu d'un schéma XML comme spécifié par le W3C (World Wide Web Consortium). Cette classe peut être utilisée pour spécifier une restriction sur la valeur maximale d'un élément <see langword="simpleType" />. La valeur de l'élément doit être inférieure à la valeur de l'élément <see langword="maxExclusive" />.</summary>
    </member>
    <member name="M:System.Xml.Schema.XmlSchemaMaxExclusiveFacet.#ctor">
      <summary vsli:raw="Initializes a new instance of the &lt;see cref=&quot;T:System.Xml.Schema.XmlSchemaMaxExclusiveFacet&quot; /&gt; class.">Initialise une nouvelle instance de la classe <see cref="T:System.Xml.Schema.XmlSchemaMaxExclusiveFacet" />.</summary>
    </member>
    <member name="T:System.Xml.Schema.XmlSchemaMaxInclusiveFacet">
      <summary vsli:raw="Represents the &lt;see langword=&quot;maxInclusive&quot; /&gt; element from XML Schema as specified by the World Wide Web Consortium (W3C). This class can be used to specify a restriction on the maximum value of a &lt;see langword=&quot;simpleType&quot; /&gt; element. The element value must be less than or equal to the value of the &lt;see langword=&quot;maxInclusive&quot; /&gt; element.">Représente l'élément <see langword="maxInclusive" /> issu d'un schéma XML comme spécifié par le W3C (World Wide Web Consortium). Cette classe peut être utilisée pour spécifier une restriction sur la valeur maximale d'un élément <see langword="simpleType" />. La valeur de l'élément doit être inférieure ou égale à la valeur de l'élément <see langword="maxInclusive" />.</summary>
    </member>
    <member name="M:System.Xml.Schema.XmlSchemaMaxInclusiveFacet.#ctor">
      <summary vsli:raw="Initializes a new instance of the &lt;see cref=&quot;T:System.Xml.Schema.XmlSchemaMaxInclusiveFacet&quot; /&gt; class.">Initialise une nouvelle instance de la classe <see cref="T:System.Xml.Schema.XmlSchemaMaxInclusiveFacet" />.</summary>
    </member>
    <member name="T:System.Xml.Schema.XmlSchemaMaxLengthFacet">
      <summary vsli:raw="Represents the &lt;see langword=&quot;maxLength&quot; /&gt; element from XML Schema as specified by the World Wide Web Consortium (W3C). This class can be used to specify a restriction on the maximum length of the data value of a &lt;see langword=&quot;simpleType&quot; /&gt; element. The length must be less than the value of the &lt;see langword=&quot;maxLength&quot; /&gt; element.">Représente l'élément <see langword="maxLength" /> issu d'un schéma XML comme spécifié par le W3C (World Wide Web Consortium). Cette classe peut être utilisée pour spécifier une restriction sur la longueur maximale de la valeur de données d'un élément <see langword="simpleType" />. La longueur doit être inférieure à la valeur d'élément <see langword="maxLength" />.</summary>
    </member>
    <member name="M:System.Xml.Schema.XmlSchemaMaxLengthFacet.#ctor">
      <summary vsli:raw="Initializes a new instance of the &lt;see cref=&quot;T:System.Xml.Schema.XmlSchemaMaxLengthFacet&quot; /&gt; class.">Initialise une nouvelle instance de la classe <see cref="T:System.Xml.Schema.XmlSchemaMaxLengthFacet" />.</summary>
    </member>
    <member name="T:System.Xml.Schema.XmlSchemaMinExclusiveFacet">
      <summary vsli:raw="Represents the &lt;see langword=&quot;minExclusive&quot; /&gt; element from XML Schema as specified by the World Wide Web Consortium (W3C). This class can be used to specify a restriction on the minimum value of a &lt;see langword=&quot;simpleType&quot; /&gt; element. The element value must be greater than the value of the &lt;see langword=&quot;minExclusive&quot; /&gt; element.">Représente l'élément <see langword="minExclusive" /> issu d'un schéma XML comme spécifié par le W3C (World Wide Web Consortium). Cette classe peut être utilisée pour spécifier une restriction sur la valeur minimale d'un élément <see langword="simpleType" />. La valeur de l'élément doit être supérieure à la valeur de l'élément <see langword="minExclusive" />.</summary>
    </member>
    <member name="M:System.Xml.Schema.XmlSchemaMinExclusiveFacet.#ctor">
      <summary vsli:raw="Initializes a new instance of the &lt;see cref=&quot;T:System.Xml.Schema.XmlSchemaMinExclusiveFacet&quot; /&gt; class.">Initialise une nouvelle instance de la classe <see cref="T:System.Xml.Schema.XmlSchemaMinExclusiveFacet" />.</summary>
    </member>
    <member name="T:System.Xml.Schema.XmlSchemaMinInclusiveFacet">
      <summary vsli:raw="Represents the &lt;see langword=&quot;minInclusive&quot; /&gt; element from XML Schema as specified by the World Wide Web Consortium (W3C). This class can be used to specify a restriction on the minimum value of a simpleType element. The element value must be greater than or equal to the value of the &lt;see langword=&quot;minInclusive&quot; /&gt; element.">Représente l'élément <see langword="minInclusive" /> issu d'un schéma XML comme spécifié par le W3C (World Wide Web Consortium). Cette classe peut être utilisée pour spécifier une restriction sur la valeur minimale d'un élément simpleType. La valeur de l'élément doit être supérieure ou égale à la valeur de l'élément <see langword="minInclusive" />.</summary>
    </member>
    <member name="M:System.Xml.Schema.XmlSchemaMinInclusiveFacet.#ctor">
      <summary vsli:raw="Initializes a new instance of the &lt;see cref=&quot;T:System.Xml.Schema.XmlSchemaMinInclusiveFacet&quot; /&gt; class.">Initialise une nouvelle instance de la classe <see cref="T:System.Xml.Schema.XmlSchemaMinInclusiveFacet" />.</summary>
    </member>
    <member name="T:System.Xml.Schema.XmlSchemaMinLengthFacet">
      <summary vsli:raw="Represents the &lt;see langword=&quot;minLength&quot; /&gt; element from XML Schema as specified by the World Wide Web Consortium (W3C). This class can be used to specify a restriction on the minimum length of the data value of a &lt;see langword=&quot;simpleType&quot; /&gt; element. The length must be greater than the value of the &lt;see langword=&quot;minLength&quot; /&gt; element.">Représente l'élément <see langword="minLength" /> issu d'un schéma XML comme spécifié par le W3C (World Wide Web Consortium). Cette classe peut être utilisée pour spécifier une restriction sur la longueur minimale de la valeur de données d'un élément <see langword="simpleType" />. La longueur doit être supérieure à la valeur de l'élément <see langword="minLength" />.</summary>
    </member>
    <member name="M:System.Xml.Schema.XmlSchemaMinLengthFacet.#ctor">
      <summary vsli:raw="Initializes a new instance of the &lt;see cref=&quot;T:System.Xml.Schema.XmlSchemaMinLengthFacet&quot; /&gt; class.">Initialise une nouvelle instance de la classe <see cref="T:System.Xml.Schema.XmlSchemaMinLengthFacet" />.</summary>
    </member>
    <member name="T:System.Xml.Schema.XmlSchemaNotation">
      <summary vsli:raw="Represents the &lt;see langword=&quot;notation&quot; /&gt; element from XML Schema as specified by the World Wide Web Consortium (W3C). An XML Schema &lt;see langword=&quot;notation&quot; /&gt; declaration is a reconstruction of &lt;see langword=&quot;XML 1.0 NOTATION&quot; /&gt; declarations. The purpose of notations is to describe the format of non-XML data within an XML document.">Représente l'élément <see langword="notation" /> issu d'un schéma XML comme spécifié par le W3C (World Wide Web Consortium). Une déclaration de <see langword="notation" /> de schéma XML est une reconstruction de déclarations <see langword="XML 1.0 NOTATION" />. L'objectif des notations est de décrire le format des données non XML dans un document XML.</summary>
    </member>
    <member name="M:System.Xml.Schema.XmlSchemaNotation.#ctor">
      <summary vsli:raw="Initializes a new instance of the &lt;see cref=&quot;T:System.Xml.Schema.XmlSchemaNotation&quot; /&gt; class.">Initialise une nouvelle instance de la classe <see cref="T:System.Xml.Schema.XmlSchemaNotation" />.</summary>
    </member>
    <member name="P:System.Xml.Schema.XmlSchemaNotation.Name">
      <summary vsli:raw="Gets or sets the name of the notation.">Obtient ou définit le nom de la notation.</summary>
      <returns vsli:raw="The name of the notation.">Nom de la notation.</returns>
    </member>
    <member name="P:System.Xml.Schema.XmlSchemaNotation.Public">
      <summary vsli:raw="Gets or sets the &lt;see langword=&quot;public&quot; /&gt; identifier.">Obtient ou définit l'identificateur <see langword="public" />.</summary>
      <returns vsli:raw="The &lt;see langword=&quot;public&quot; /&gt; identifier. The value must be a valid Uniform Resource Identifier (URI).">Identificateur <see langword="public" />. La valeur doit être un URI (Uniform Resource Identifier) valide.</returns>
    </member>
    <member name="P:System.Xml.Schema.XmlSchemaNotation.System">
      <summary vsli:raw="Gets or sets the &lt;see langword=&quot;system&quot; /&gt; identifier.">Obtient ou définit l'identificateur <see langword="system" />.</summary>
      <returns vsli:raw="The &lt;see langword=&quot;system&quot; /&gt; identifier. The value must be a valid URI.">Identificateur <see langword="system" />. La valeur doit être un URI valide.</returns>
    </member>
    <member name="T:System.Xml.Schema.XmlSchemaNumericFacet">
      <summary vsli:raw="Abstract class for defining &lt;see langword=&quot;numeric&quot; /&gt; facets. This class is the base class for numeric facet classes such as &lt;see cref=&quot;T:System.Xml.Schema.XmlSchemaMinLengthFacet&quot; /&gt;.">Classe abstraite pour facettes définissant <see langword="numeric" />. Cette classe est la classe de base pour les classes de facettes numériques telles que <see cref="T:System.Xml.Schema.XmlSchemaMinLengthFacet" /></summary>
    </member>
    <member name="M:System.Xml.Schema.XmlSchemaNumericFacet.#ctor">
      <summary vsli:raw="Initializes a new instance of the &lt;see cref=&quot;T:System.Xml.Schema.XmlSchemaNumericFacet&quot; /&gt; class.">Initialise une nouvelle instance de la classe <see cref="T:System.Xml.Schema.XmlSchemaNumericFacet" />.</summary>
    </member>
    <member name="T:System.Xml.Schema.XmlSchemaObject">
      <summary vsli:raw="Represents the root class for the Xml schema object model hierarchy and serves as a base class for classes such as the &lt;see cref=&quot;T:System.Xml.Schema.XmlSchema&quot; /&gt; class.">Représente la classe racine pour la hiérarchie des modèles objet de schéma XML et sert de classe de base pour les classes telles que la classe <see cref="T:System.Xml.Schema.XmlSchema" />.</summary>
    </member>
    <member name="M:System.Xml.Schema.XmlSchemaObject.#ctor">
      <summary vsli:raw="Initializes a new instance of the &lt;see cref=&quot;T:System.Xml.Schema.XmlSchemaObject&quot; /&gt; class.">Initialise une nouvelle instance de la classe <see cref="T:System.Xml.Schema.XmlSchemaObject" />.</summary>
    </member>
    <member name="P:System.Xml.Schema.XmlSchemaObject.LineNumber">
      <summary vsli:raw="Gets or sets the line number in the file to which the &lt;see langword=&quot;schema&quot; /&gt; element refers.">Obtient ou définit le numéro de la ligne du fichier à laquelle l'élément <see langword="schema" /> fait référence.</summary>
      <returns vsli:raw="The line number.">Numéro de ligne.</returns>
    </member>
    <member name="P:System.Xml.Schema.XmlSchemaObject.LinePosition">
      <summary vsli:raw="Gets or sets the line position in the file to which the &lt;see langword=&quot;schema&quot; /&gt; element refers.">Obtient ou définit la position de la ligne du fichier à laquelle l'élément <see langword="schema" /> fait référence.</summary>
      <returns vsli:raw="The line position.">Position de ligne.</returns>
    </member>
    <member name="P:System.Xml.Schema.XmlSchemaObject.Namespaces">
      <summary vsli:raw="Gets or sets the &lt;see cref=&quot;T:System.Xml.Serialization.XmlSerializerNamespaces&quot; /&gt; to use with this schema object.">Obtient ou définit le <see cref="T:System.Xml.Serialization.XmlSerializerNamespaces" /> à utiliser avec cet objet de schéma.</summary>
      <returns vsli:raw="The &lt;see cref=&quot;T:System.Xml.Serialization.XmlSerializerNamespaces&quot; /&gt; property for the schema object.">Propriété <see cref="T:System.Xml.Serialization.XmlSerializerNamespaces" /> de l'objet de schéma.</returns>
    </member>
    <member name="P:System.Xml.Schema.XmlSchemaObject.Parent">
      <summary vsli:raw="Gets or sets the parent of this &lt;see cref=&quot;T:System.Xml.Schema.XmlSchemaObject&quot; /&gt;.">Obtient ou définit le parent de ce <see cref="T:System.Xml.Schema.XmlSchemaObject" />.</summary>
      <returns vsli:raw="The parent &lt;see cref=&quot;T:System.Xml.Schema.XmlSchemaObject&quot; /&gt; of this &lt;see cref=&quot;T:System.Xml.Schema.XmlSchemaObject&quot; /&gt;.">
        <see cref="T:System.Xml.Schema.XmlSchemaObject" /> parent de ce <see cref="T:System.Xml.Schema.XmlSchemaObject" />.</returns>
    </member>
    <member name="P:System.Xml.Schema.XmlSchemaObject.SourceUri">
      <summary vsli:raw="Gets or sets the source location for the file that loaded the schema.">Obtient ou définit l'emplacement de la source pour le fichier qui a chargé le schéma.</summary>
      <returns vsli:raw="The source location (URI) for the file.">Emplacement de la source (URI) du fichier.</returns>
    </member>
    <member name="T:System.Xml.Schema.XmlSchemaObjectCollection">
      <summary vsli:raw="A collection of &lt;see cref=&quot;T:System.Xml.Schema.XmlSchemaObject&quot; /&gt;s.">Collection de <see cref="T:System.Xml.Schema.XmlSchemaObject" />.</summary>
    </member>
    <member name="M:System.Xml.Schema.XmlSchemaObjectCollection.#ctor">
      <summary vsli:raw="Initializes a new instance of the &lt;see langword=&quot;XmlSchemaObjectCollection&quot; /&gt; class.">Initialise une nouvelle instance de la classe <see langword="XmlSchemaObjectCollection" />.</summary>
    </member>
    <member name="M:System.Xml.Schema.XmlSchemaObjectCollection.#ctor(System.Xml.Schema.XmlSchemaObject)">
      <summary vsli:raw="Initializes a new instance of the &lt;see langword=&quot;XmlSchemaObjectCollection&quot; /&gt; class that takes an &lt;see cref=&quot;T:System.Xml.Schema.XmlSchemaObject&quot; /&gt;.">Initialise une nouvelle instance de la classe <see langword="XmlSchemaObjectCollection" /> qui accepte <see cref="T:System.Xml.Schema.XmlSchemaObject" />.</summary>
      <param name="parent" vsli:raw="The &lt;see cref=&quot;T:System.Xml.Schema.XmlSchemaObject&quot; /&gt;.">L’<see cref="T:System.Xml.Schema.XmlSchemaObject" />opérateur</param>
    </member>
    <member name="M:System.Xml.Schema.XmlSchemaObjectCollection.Add(System.Xml.Schema.XmlSchemaObject)">
      <summary vsli:raw="Adds an &lt;see cref=&quot;T:System.Xml.Schema.XmlSchemaObject&quot; /&gt; to the &lt;see langword=&quot;XmlSchemaObjectCollection&quot; /&gt;.">Ajoute un <see cref="T:System.Xml.Schema.XmlSchemaObject" /> à <see langword="XmlSchemaObjectCollection" />.</summary>
      <param name="item" vsli:raw="The &lt;see cref=&quot;T:System.Xml.Schema.XmlSchemaObject&quot; /&gt;.">L’<see cref="T:System.Xml.Schema.XmlSchemaObject" />opérateur</param>
      <exception cref="T:System.ArgumentOutOfRangeException" vsli:raw="&lt;paramref name=&quot;index&quot; /&gt; is less than zero.  &#xA;  &#xA; -or-  &#xA;  &#xA; &lt;paramref name=&quot;index&quot; /&gt; is greater than &lt;see langword=&quot;Count&quot; /&gt;.">
        <paramref name="index" /> est inférieur à zéro.  
  
- ou - 
 <paramref name="index" /> est supérieur à <see langword="Count" />.</exception>
      <exception cref="T:System.InvalidCastException" vsli:raw="The &lt;see cref=&quot;T:System.Xml.Schema.XmlSchemaObject&quot; /&gt; parameter specified is not of type &lt;see cref=&quot;T:System.Xml.Schema.XmlSchemaExternal&quot; /&gt; or its derived types &lt;see cref=&quot;T:System.Xml.Schema.XmlSchemaImport&quot; /&gt;, &lt;see cref=&quot;T:System.Xml.Schema.XmlSchemaInclude&quot; /&gt;, and &lt;see cref=&quot;T:System.Xml.Schema.XmlSchemaRedefine&quot; /&gt;.">Le paramètre <see cref="T:System.Xml.Schema.XmlSchemaObject" /> spécifié n'est pas de type <see cref="T:System.Xml.Schema.XmlSchemaExternal" /> ou de ses types dérivés <see cref="T:System.Xml.Schema.XmlSchemaImport" />, <see cref="T:System.Xml.Schema.XmlSchemaInclude" /> et <see cref="T:System.Xml.Schema.XmlSchemaRedefine" />.</exception>
      <returns vsli:raw="The index at which the item has been added.">Index au niveau duquel l’élément a été ajouté.</returns>
    </member>
    <member name="M:System.Xml.Schema.XmlSchemaObjectCollection.Contains(System.Xml.Schema.XmlSchemaObject)">
      <summary vsli:raw="Indicates if the specified &lt;see cref=&quot;T:System.Xml.Schema.XmlSchemaObject&quot; /&gt; is in the &lt;see langword=&quot;XmlSchemaObjectCollection&quot; /&gt;.">Indique si le <see cref="T:System.Xml.Schema.XmlSchemaObject" /> spécifié est dans le <see langword="XmlSchemaObjectCollection" />.</summary>
      <param name="item" vsli:raw="The &lt;see cref=&quot;T:System.Xml.Schema.XmlSchemaObject&quot; /&gt;.">L’<see cref="T:System.Xml.Schema.XmlSchemaObject" />opérateur</param>
      <returns vsli:raw="&lt;see langword=&quot;true&quot; /&gt; if the specified qualified name is in the collection; otherwise, returns &lt;see langword=&quot;false&quot; /&gt;. If null is supplied, &lt;see langword=&quot;false&quot; /&gt; is returned because there is no qualified name with a null name.">
        <see langword="true" /> si le nom qualifié spécifié se trouve dans la collection ; sinon, <see langword="false" /> est retourné. Si null est fourni, <see langword="false" /> est retourné parce qu'il n'y a pas de nom qualifié portant un nom null.</returns>
    </member>
    <member name="M:System.Xml.Schema.XmlSchemaObjectCollection.CopyTo(System.Xml.Schema.XmlSchemaObject[],System.Int32)">
      <summary vsli:raw="Copies all the &lt;see cref=&quot;T:System.Xml.Schema.XmlSchemaObject&quot; /&gt;s from the collection into the given array, starting at the given index.">Copie tous les <see cref="T:System.Xml.Schema.XmlSchemaObject" /> de la collection dans le tableau donné, en commençant à l'index spécifié.</summary>
      <param name="array" vsli:raw="The one-dimensional array that is the destination of the elements copied from the &lt;see langword=&quot;XmlSchemaObjectCollection&quot; /&gt;. The array must have zero-based indexing.">Le tableau unidimensionnel qui constitue la destination des éléments copiés à partir de <see langword="XmlSchemaObjectCollection" />. Ce tableau doit avoir une indexation de base zéro.</param>
      <param name="index" vsli:raw="The zero-based index in the array at which copying begins.">Index de base zéro dans le tableau au niveau duquel commencer la copie.</param>
      <exception cref="T:System.ArgumentNullException" vsli:raw="&lt;paramref name=&quot;array&quot; /&gt; is a null reference (&lt;see langword=&quot;Nothing&quot; /&gt; in Visual Basic).">
        <paramref name="array" /> est une référence Null (<see langword="Nothing" /> en Visual Basic).</exception>
      <exception cref="T:System.ArgumentOutOfRangeException" vsli:raw="&lt;paramref name=&quot;index&quot; /&gt; is less than zero.">
        <paramref name="index" /> est inférieur à zéro.</exception>
      <exception cref="T:System.ArgumentException" vsli:raw="&lt;paramref name=&quot;array&quot; /&gt; is multi-dimensional.  &#xA;  &#xA;-or-&#xA;  &#xA; &lt;paramref name=&quot;index&quot; /&gt; is equal to or greater than the length of &lt;paramref name=&quot;array&quot; /&gt;.  &#xA;  &#xA;-or-&#xA;  &#xA; The number of elements in the source &lt;see cref=&quot;T:System.Xml.Schema.XmlSchemaObject&quot; /&gt; is greater than the available space from index to the end of the destination array.">
        <paramref name="array" /> est multidimensionnel.  
  
- ou - 
 <paramref name="index" /> est supérieur ou égal à la longueur de <paramref name="array" />.  
  
- ou - 
Le nombre d'éléments dans le <see cref="T:System.Xml.Schema.XmlSchemaObject" /> source est supérieur à la quantité d'espace disponible entre l'index et la fin du tableau de destination.</exception>
      <exception cref="T:System.InvalidCastException" vsli:raw="The type of the source &lt;see cref=&quot;T:System.Xml.Schema.XmlSchemaObject&quot; /&gt; cannot be cast automatically to the type of the destination array.">Le type du <see cref="T:System.Xml.Schema.XmlSchemaObject" /> source ne peut pas être casté automatiquement en type du tableau de destination.</exception>
    </member>
    <member name="M:System.Xml.Schema.XmlSchemaObjectCollection.GetEnumerator">
      <summary vsli:raw="Returns an enumerator for iterating through the &lt;see langword=&quot;XmlSchemaObjects&quot; /&gt; contained in the &lt;see langword=&quot;XmlSchemaObjectCollection&quot; /&gt;.">Retourne un énumérateur qui peut être utilisé pour itérer sur les <see langword="XmlSchemaObjects" /> contenus dans <see langword="XmlSchemaObjectCollection" />.</summary>
      <returns vsli:raw="The iterator returns &lt;see cref=&quot;T:System.Xml.Schema.XmlSchemaObjectEnumerator&quot; /&gt;.">L'itérateur retourne <see cref="T:System.Xml.Schema.XmlSchemaObjectEnumerator" />.</returns>
    </member>
    <member name="M:System.Xml.Schema.XmlSchemaObjectCollection.IndexOf(System.Xml.Schema.XmlSchemaObject)">
      <summary vsli:raw="Gets the collection index corresponding to the specified &lt;see cref=&quot;T:System.Xml.Schema.XmlSchemaObject&quot; /&gt;.">Obtient l'index de collection correspondant du <see cref="T:System.Xml.Schema.XmlSchemaObject" /> spécifié.</summary>
      <param name="item" vsli:raw="The &lt;see cref=&quot;T:System.Xml.Schema.XmlSchemaObject&quot; /&gt; whose index you want to return.">
        <see cref="T:System.Xml.Schema.XmlSchemaObject" /> dont vous souhaitez retourner l'index.</param>
      <returns vsli:raw="The index corresponding to the specified &lt;see cref=&quot;T:System.Xml.Schema.XmlSchemaObject&quot; /&gt;.">Index correspondant du <see cref="T:System.Xml.Schema.XmlSchemaObject" /> spécifié.</returns>
    </member>
    <member name="M:System.Xml.Schema.XmlSchemaObjectCollection.Insert(System.Int32,System.Xml.Schema.XmlSchemaObject)">
      <summary vsli:raw="Inserts an &lt;see cref=&quot;T:System.Xml.Schema.XmlSchemaObject&quot; /&gt; to the &lt;see langword=&quot;XmlSchemaObjectCollection&quot; /&gt;.">Insère un <see cref="T:System.Xml.Schema.XmlSchemaObject" /> dans <see langword="XmlSchemaObjectCollection" />.</summary>
      <param name="index" vsli:raw="The zero-based index at which an item should be inserted.">Index de base zéro au niveau duquel un élément doit être inséré.</param>
      <param name="item" vsli:raw="The &lt;see cref=&quot;T:System.Xml.Schema.XmlSchemaObject&quot; /&gt; to insert.">
        <see cref="T:System.Xml.Schema.XmlSchemaObject" /> à insérer.</param>
      <exception cref="T:System.ArgumentOutOfRangeException" vsli:raw="&lt;paramref name=&quot;index&quot; /&gt; is less than zero.  &#xA;  &#xA; -or-  &#xA;  &#xA; &lt;paramref name=&quot;index&quot; /&gt; is greater than &lt;see langword=&quot;Count&quot; /&gt;.">
        <paramref name="index" /> est inférieur à zéro.  
  
- ou - 
 <paramref name="index" /> est supérieur à <see langword="Count" />.</exception>
    </member>
    <member name="M:System.Xml.Schema.XmlSchemaObjectCollection.OnClear">
      <summary vsli:raw="&lt;see langword=&quot;OnClear&quot; /&gt; is invoked before the standard &lt;see langword=&quot;Clear&quot; /&gt; behavior. For more information, see OnClear method for &lt;see cref=&quot;T:System.Collections.CollectionBase&quot; /&gt;.">
        <see langword="OnClear" /> est appelé avant le comportement <see langword="Clear" /> standard. Pour plus d'informations, consultez la méthode OnClear pour <see cref="T:System.Collections.CollectionBase" />.</summary>
    </member>
    <member name="M:System.Xml.Schema.XmlSchemaObjectCollection.OnInsert(System.Int32,System.Object)">
      <summary vsli:raw="&lt;see langword=&quot;OnInsert&quot; /&gt; is invoked before the standard &lt;see langword=&quot;Insert&quot; /&gt; behavior. For more information, see &lt;see langword=&quot;OnInsert&quot; /&gt; method &lt;see cref=&quot;T:System.Collections.CollectionBase&quot; /&gt;.">
        <see langword="OnInsert" /> est appelé avant le comportement <see langword="Insert" /> standard. Pour plus d'informations, consultez la méthode <see langword="OnInsert" /><see cref="T:System.Collections.CollectionBase" />.</summary>
      <param name="index" vsli:raw="The index of &lt;see cref=&quot;T:System.Xml.Schema.XmlSchemaObject&quot; /&gt;.">Index de <see cref="T:System.Xml.Schema.XmlSchemaObject" />.</param>
      <param name="item" vsli:raw="The item.">Élément.</param>
    </member>
    <member name="M:System.Xml.Schema.XmlSchemaObjectCollection.OnRemove(System.Int32,System.Object)">
      <summary vsli:raw="&lt;see langword=&quot;OnRemove&quot; /&gt; is invoked before the standard &lt;see langword=&quot;Remove&quot; /&gt; behavior. For more information, see the &lt;see langword=&quot;OnRemove&quot; /&gt; method for &lt;see cref=&quot;T:System.Collections.CollectionBase&quot; /&gt;.">
        <see langword="OnRemove" /> est appelé avant le comportement <see langword="Remove" /> standard. Pour plus d'informations, consultez la méthode <see langword="OnRemove" /> pour <see cref="T:System.Collections.CollectionBase" />.</summary>
      <param name="index" vsli:raw="The index of &lt;see cref=&quot;T:System.Xml.Schema.XmlSchemaObject&quot; /&gt;.">Index de <see cref="T:System.Xml.Schema.XmlSchemaObject" />.</param>
      <param name="item" vsli:raw="The item.">Élément.</param>
    </member>
    <member name="M:System.Xml.Schema.XmlSchemaObjectCollection.OnSet(System.Int32,System.Object,System.Object)">
      <summary vsli:raw="&lt;see langword=&quot;OnSet&quot; /&gt; is invoked before the standard &lt;see langword=&quot;Set&quot; /&gt; behavior. For more information, see the OnSet method for &lt;see cref=&quot;T:System.Collections.CollectionBase&quot; /&gt;.">
        <see langword="OnSet" /> est appelé avant le comportement <see langword="Set" /> standard. Pour plus d'informations, consultez la méthode OnSet pour <see cref="T:System.Collections.CollectionBase" />.</summary>
      <param name="index" vsli:raw="The index of &lt;see cref=&quot;T:System.Xml.Schema.XmlSchemaObject&quot; /&gt;.">Index de <see cref="T:System.Xml.Schema.XmlSchemaObject" />.</param>
      <param name="oldValue" vsli:raw="The old value.">Ancienne valeur.</param>
      <param name="newValue" vsli:raw="The new value.">Nouvelle valeur.</param>
    </member>
    <member name="M:System.Xml.Schema.XmlSchemaObjectCollection.Remove(System.Xml.Schema.XmlSchemaObject)">
      <summary vsli:raw="Removes an &lt;see cref=&quot;T:System.Xml.Schema.XmlSchemaObject&quot; /&gt; from the &lt;see langword=&quot;XmlSchemaObjectCollection&quot; /&gt;.">Enlève un <see cref="T:System.Xml.Schema.XmlSchemaObject" /> de <see langword="XmlSchemaObjectCollection" />.</summary>
      <param name="item" vsli:raw="The &lt;see cref=&quot;T:System.Xml.Schema.XmlSchemaObject&quot; /&gt; to remove.">
        <see cref="T:System.Xml.Schema.XmlSchemaObject" /> à supprimer.</param>
    </member>
    <member name="P:System.Xml.Schema.XmlSchemaObjectCollection.Item(System.Int32)">
      <summary vsli:raw="Gets the &lt;see cref=&quot;T:System.Xml.Schema.XmlSchemaObject&quot; /&gt; at the specified index.">Obtient l'objet <see cref="T:System.Xml.Schema.XmlSchemaObject" /> à l'index spécifié.</summary>
      <param name="index" vsli:raw="The index of the &lt;see cref=&quot;T:System.Xml.Schema.XmlSchemaObject&quot; /&gt;.">Index de <see cref="T:System.Xml.Schema.XmlSchemaObject" />.</param>
      <returns vsli:raw="The &lt;see cref=&quot;T:System.Xml.Schema.XmlSchemaObject&quot; /&gt; at the specified index.">
        <see cref="T:System.Xml.Schema.XmlSchemaObject" /> au niveau de l'index spécifié.</returns>
    </member>
    <member name="T:System.Xml.Schema.XmlSchemaObjectEnumerator">
      <summary vsli:raw="Represents the enumerator for the &lt;see cref=&quot;T:System.Xml.Schema.XmlSchemaObjectCollection&quot; /&gt;.">Représente l’énumérateur pour <see cref="T:System.Xml.Schema.XmlSchemaObjectCollection" />.</summary>
    </member>
    <member name="M:System.Xml.Schema.XmlSchemaObjectEnumerator.MoveNext">
      <summary vsli:raw="Moves to the next item in the collection.">Passe à l'élément suivant dans la collection.</summary>
      <returns vsli:raw="&lt;see langword=&quot;false&quot; /&gt; at the end of the collection.">
        <see langword="false" /> à la fin de la collection.</returns>
    </member>
    <member name="M:System.Xml.Schema.XmlSchemaObjectEnumerator.Reset">
      <summary vsli:raw="Resets the enumerator to the start of the collection.">Rétablit l'énumérateur au début de la collection.</summary>
    </member>
    <member name="M:System.Xml.Schema.XmlSchemaObjectEnumerator.System#Collections#IEnumerator#MoveNext">
      <summary vsli:raw="For a description of this member, see &lt;see cref=&quot;M:System.Xml.Schema.XmlSchemaObjectEnumerator.MoveNext&quot; /&gt;.">Pour obtenir une description de ce membre, consultez <see cref="M:System.Xml.Schema.XmlSchemaObjectEnumerator.MoveNext" />.</summary>
      <returns vsli:raw="The next &lt;see cref=&quot;T:System.Xml.Schema.XmlSchemaObject&quot; /&gt;.">
        <see cref="T:System.Xml.Schema.XmlSchemaObject" /> suivant.</returns>
    </member>
    <member name="M:System.Xml.Schema.XmlSchemaObjectEnumerator.System#Collections#IEnumerator#Reset">
      <summary vsli:raw="For a description of this member, see &lt;see cref=&quot;M:System.Xml.Schema.XmlSchemaObjectEnumerator.Reset&quot; /&gt;.">Pour obtenir une description de ce membre, consultez <see cref="M:System.Xml.Schema.XmlSchemaObjectEnumerator.Reset" />.</summary>
    </member>
    <member name="P:System.Xml.Schema.XmlSchemaObjectEnumerator.Current">
      <summary vsli:raw="Gets the current &lt;see cref=&quot;T:System.Xml.Schema.XmlSchemaObject&quot; /&gt; in the collection.">Obtient le <see cref="T:System.Xml.Schema.XmlSchemaObject" /> en cours dans la collection.</summary>
      <returns vsli:raw="The current &lt;see cref=&quot;T:System.Xml.Schema.XmlSchemaObject&quot; /&gt;.">
        <see cref="T:System.Xml.Schema.XmlSchemaObject" /> actuel.</returns>
    </member>
    <member name="P:System.Xml.Schema.XmlSchemaObjectEnumerator.System#Collections#IEnumerator#Current">
      <summary vsli:raw="For a description of this member, see &lt;see cref=&quot;P:System.Xml.Schema.XmlSchemaObjectEnumerator.Current&quot; /&gt;.">Pour obtenir une description de ce membre, consultez <see cref="P:System.Xml.Schema.XmlSchemaObjectEnumerator.Current" />.</summary>
      <returns vsli:raw="The current &lt;see cref=&quot;T:System.Xml.Schema.XmlSchemaObject&quot; /&gt;.">
        <see cref="T:System.Xml.Schema.XmlSchemaObject" /> actuel.</returns>
    </member>
    <member name="T:System.Xml.Schema.XmlSchemaObjectTable">
      <summary vsli:raw="Provides the collections for contained elements in the &lt;see cref=&quot;T:System.Xml.Schema.XmlSchema&quot; /&gt; class (for example, Attributes, AttributeGroups, Elements, and so on).">Fournit les collections pour les éléments contenus qui se trouvent dans la classe <see cref="T:System.Xml.Schema.XmlSchema" /> (par exemple, Attributes, AttributeGroups, Elements, etc.).</summary>
    </member>
    <member name="M:System.Xml.Schema.XmlSchemaObjectTable.Contains(System.Xml.XmlQualifiedName)">
      <summary vsli:raw="Determines if the qualified name specified exists in the collection.">Détermine si le nom qualifié spécifié existe dans la collection.</summary>
      <param name="name" vsli:raw="The &lt;see cref=&quot;T:System.Xml.XmlQualifiedName&quot; /&gt;.">L’<see cref="T:System.Xml.XmlQualifiedName" />opérateur</param>
      <returns vsli:raw="&lt;see langword=&quot;true&quot; /&gt; if the qualified name specified exists in the collection; otherwise, &lt;see langword=&quot;false&quot; /&gt;.">
        <see langword="true" /> si le nom qualifié spécifié existe dans la collection ; sinon, <see langword="false" />.</returns>
    </member>
    <member name="M:System.Xml.Schema.XmlSchemaObjectTable.GetEnumerator">
      <summary vsli:raw="Returns an enumerator that can iterate through the &lt;see cref=&quot;T:System.Xml.Schema.XmlSchemaObjectTable&quot; /&gt;.">Retourne un énumérateur qui peut itérer au sein de <see cref="T:System.Xml.Schema.XmlSchemaObjectTable" />.</summary>
      <returns vsli:raw="An &lt;see cref=&quot;T:System.Collections.IDictionaryEnumerator&quot; /&gt; that can iterate through &lt;see cref=&quot;T:System.Xml.Schema.XmlSchemaObjectTable&quot; /&gt;.">
        <see cref="T:System.Collections.IDictionaryEnumerator" /> qui peut parcourir <see cref="T:System.Xml.Schema.XmlSchemaObjectTable" />.</returns>
    </member>
    <member name="P:System.Xml.Schema.XmlSchemaObjectTable.Count">
      <summary vsli:raw="Gets the number of items contained in the &lt;see cref=&quot;T:System.Xml.Schema.XmlSchemaObjectTable&quot; /&gt;.">Obtient le nombre d'éléments contenus dans <see cref="T:System.Xml.Schema.XmlSchemaObjectTable" />.</summary>
      <returns vsli:raw="The number of items contained in the &lt;see cref=&quot;T:System.Xml.Schema.XmlSchemaObjectTable&quot; /&gt;.">Nombre d'éléments contenus dans <see cref="T:System.Xml.Schema.XmlSchemaObjectTable" />.</returns>
    </member>
    <member name="P:System.Xml.Schema.XmlSchemaObjectTable.Item(System.Xml.XmlQualifiedName)">
      <summary vsli:raw="Returns the element in the &lt;see cref=&quot;T:System.Xml.Schema.XmlSchemaObjectTable&quot; /&gt; specified by qualified name.">Retourne l'élément situé dans le <see cref="T:System.Xml.Schema.XmlSchemaObjectTable" /> spécifié par le nom qualifié.</summary>
      <param name="name" vsli:raw="The &lt;see cref=&quot;T:System.Xml.XmlQualifiedName&quot; /&gt; of the element to return.">
        <see cref="T:System.Xml.XmlQualifiedName" /> de l'élément à retourner.</param>
      <returns vsli:raw="The &lt;see cref=&quot;T:System.Xml.Schema.XmlSchemaObject&quot; /&gt; of the element in the &lt;see cref=&quot;T:System.Xml.Schema.XmlSchemaObjectTable&quot; /&gt; specified by qualified name.">
        <see cref="T:System.Xml.Schema.XmlSchemaObject" /> de l'élément situé dans le <see cref="T:System.Xml.Schema.XmlSchemaObjectTable" /> spécifié par le nom qualifié.</returns>
    </member>
    <member name="P:System.Xml.Schema.XmlSchemaObjectTable.Names">
      <summary vsli:raw="Returns a collection of all the named elements in the &lt;see cref=&quot;T:System.Xml.Schema.XmlSchemaObjectTable&quot; /&gt;.">Retourne une collection de tous les éléments nommés dans <see cref="T:System.Xml.Schema.XmlSchemaObjectTable" />.</summary>
      <returns vsli:raw="A collection of all the named elements in the &lt;see cref=&quot;T:System.Xml.Schema.XmlSchemaObjectTable&quot; /&gt;.">Collection de tous les éléments nommés dans <see cref="T:System.Xml.Schema.XmlSchemaObjectTable" />.</returns>
    </member>
    <member name="P:System.Xml.Schema.XmlSchemaObjectTable.Values">
      <summary vsli:raw="Returns a collection of all the values for all the elements in the &lt;see cref=&quot;T:System.Xml.Schema.XmlSchemaObjectTable&quot; /&gt;.">Retourne une collection de toutes les valeurs pour tous les éléments contenus dans <see cref="T:System.Xml.Schema.XmlSchemaObjectTable" />.</summary>
      <returns vsli:raw="A collection of all the values for all the elements in the &lt;see cref=&quot;T:System.Xml.Schema.XmlSchemaObjectTable&quot; /&gt;.">Collection de toutes les valeurs pour tous les éléments contenus dans <see cref="T:System.Xml.Schema.XmlSchemaObjectTable" />.</returns>
    </member>
    <member name="T:System.Xml.Schema.XmlSchemaParticle">
      <summary vsli:raw="Abstract class for that is the base class for all particle types (e.g. &lt;see cref=&quot;T:System.Xml.Schema.XmlSchemaAny&quot; /&gt;).">La classe abstraite pour cela est la classe de base de tous les types de particules (par exemple, <see cref="T:System.Xml.Schema.XmlSchemaAny" />).</summary>
    </member>
    <member name="M:System.Xml.Schema.XmlSchemaParticle.#ctor">
      <summary vsli:raw="Initializes a new instance of the &lt;see cref=&quot;T:System.Xml.Schema.XmlSchemaParticle&quot; /&gt; class.">Initialise une nouvelle instance de la classe <see cref="T:System.Xml.Schema.XmlSchemaParticle" />.</summary>
    </member>
    <member name="P:System.Xml.Schema.XmlSchemaParticle.MaxOccurs">
      <summary vsli:raw="Gets or sets the maximum number of times the particle can occur.">Obtient ou définit le nombre maximal de fois que la particule peut se présenter.</summary>
      <returns vsli:raw="The maximum number of times the particle can occur. The default is 1.">Nombre maximal de fois que la particule peut se présenter. La valeur par défaut est 1.</returns>
    </member>
    <member name="P:System.Xml.Schema.XmlSchemaParticle.MaxOccursString">
      <summary vsli:raw="Gets or sets the number as a string value. Maximum number of times the particle can occur.">Obtient ou définit le nombre sous forme d'une valeur de chaîne. Nombre maximal d'occurrences de la particule.</summary>
      <returns vsli:raw="The number as a string value. &lt;see langword=&quot;String.Empty&quot; /&gt; indicates that &lt;see langword=&quot;MaxOccurs&quot; /&gt; is equal to the default value. The default is a null reference.">Numéro en tant que valeur de chaîne. <see langword="String.Empty" /> indique que <see langword="MaxOccurs" /> est égal à la valeur par défaut. La valeur par défaut est une référence null.</returns>
    </member>
    <member name="P:System.Xml.Schema.XmlSchemaParticle.MinOccurs">
      <summary vsli:raw="Gets or sets the minimum number of times the particle can occur.">Obtient ou définit le nombre minimal de fois que la particule peut se présenter.</summary>
      <returns vsli:raw="The minimum number of times the particle can occur. The default is 1.">Nombre minimal de fois que la particule peut se présenter. La valeur par défaut est 1.</returns>
    </member>
    <member name="P:System.Xml.Schema.XmlSchemaParticle.MinOccursString">
      <summary vsli:raw="Gets or sets the number as a string value. The minimum number of times the particle can occur.">Obtient ou définit le nombre sous forme d'une valeur de chaîne. Nombre minimal de fois que la particule peut se présenter.</summary>
      <returns vsli:raw="The number as a string value. &lt;see langword=&quot;String.Empty&quot; /&gt; indicates that &lt;see langword=&quot;MinOccurs&quot; /&gt; is equal to the default value. The default is a null reference.">Numéro en tant que valeur de chaîne. <see langword="String.Empty" /> indique que <see langword="MinOccurs" /> est égal à la valeur par défaut. La valeur par défaut est une référence null.</returns>
    </member>
    <member name="T:System.Xml.Schema.XmlSchemaPatternFacet">
      <summary vsli:raw="Represents the &lt;see langword=&quot;pattern&quot; /&gt; element from XML Schema as specified by the World Wide Web Consortium (W3C). This class can be used to specify a restriction on the value entered for a &lt;see langword=&quot;simpleType&quot; /&gt; element.">Représente l'élément <see langword="pattern" /> issu d'un schéma XML comme spécifié par le W3C (World Wide Web Consortium). Cette classe peut être utilisée pour spécifier une restriction sur la valeur entrée pour un élément <see langword="simpleType" />.</summary>
    </member>
    <member name="M:System.Xml.Schema.XmlSchemaPatternFacet.#ctor">
      <summary vsli:raw="Initializes a new instance of the &lt;see cref=&quot;T:System.Xml.Schema.XmlSchemaPatternFacet&quot; /&gt; class.">Initialise une nouvelle instance de la classe <see cref="T:System.Xml.Schema.XmlSchemaPatternFacet" />.</summary>
    </member>
    <member name="T:System.Xml.Schema.XmlSchemaRedefine">
      <summary vsli:raw="Represents the &lt;see langword=&quot;redefine&quot; /&gt; element from XML Schema as specified by the World Wide Web Consortium (W3C). This class can be used to allow simple and complex types, groups and attribute groups from external schema files to be redefined in the current schema. This class can also be used to provide versioning for the schema elements.">Représente l'élément <see langword="redefine" /> issu d'un schéma XML comme spécifié par le W3C (World Wide Web Consortium). Cette classe permet de redéfinir dans le schéma actuel des types simples et complexes, des groupes et des groupes d'attributs en provenance de fichiers de schéma externes. Cette classe peut également être utilisée pour fournir le suivi des versions des éléments du schéma.</summary>
    </member>
    <member name="M:System.Xml.Schema.XmlSchemaRedefine.#ctor">
      <summary vsli:raw="Initializes a new instance of the &lt;see cref=&quot;T:System.Xml.Schema.XmlSchemaRedefine&quot; /&gt; class.">Initialise une nouvelle instance de la classe <see cref="T:System.Xml.Schema.XmlSchemaRedefine" />.</summary>
    </member>
    <member name="P:System.Xml.Schema.XmlSchemaRedefine.AttributeGroups">
      <summary vsli:raw="Gets the &lt;see cref=&quot;T:System.Xml.Schema.XmlSchemaObjectTable&quot; /&gt; , for all attributes in the schema, which holds the post-compilation value of the &lt;see langword=&quot;AttributeGroups&quot; /&gt; property.">Obtient <see cref="T:System.Xml.Schema.XmlSchemaObjectTable" />, pour tous les attributs du schéma, qui reprend la valeur de post-compilation de la propriété <see langword="AttributeGroups" />.</summary>
      <returns vsli:raw="The &lt;see cref=&quot;T:System.Xml.Schema.XmlSchemaObjectTable&quot; /&gt; for all attributes in the schema. The post-compilation value of the &lt;see langword=&quot;AttributeGroups&quot; /&gt; property.">
        <see cref="T:System.Xml.Schema.XmlSchemaObjectTable" /> pour tous les attributs du schéma. Valeur de post-compilation de la propriété <see langword="AttributeGroups" />.</returns>
    </member>
    <member name="P:System.Xml.Schema.XmlSchemaRedefine.Groups">
      <summary vsli:raw="Gets the &lt;see cref=&quot;T:System.Xml.Schema.XmlSchemaObjectTable&quot; /&gt;, for all groups in the schema, which holds the post-compilation value of the &lt;see langword=&quot;Groups&quot; /&gt; property.">Obtient <see cref="T:System.Xml.Schema.XmlSchemaObjectTable" />, pour tous les groupes du schéma, qui contient la valeur de post-compilation de la propriété <see langword="Groups" />.</summary>
      <returns vsli:raw="The &lt;see cref=&quot;T:System.Xml.Schema.XmlSchemaObjectTable&quot; /&gt; for all groups in the schema. The post-compilation value of the &lt;see langword=&quot;Groups&quot; /&gt; property.">
        <see cref="T:System.Xml.Schema.XmlSchemaObjectTable" /> pour tous les groupes du schéma. Valeur de post-compilation de la propriété <see langword="Groups" />.</returns>
    </member>
    <member name="P:System.Xml.Schema.XmlSchemaRedefine.Items">
      <summary vsli:raw="Gets the collection of the following classes: &lt;see cref=&quot;T:System.Xml.Schema.XmlSchemaAnnotation&quot; /&gt;, &lt;see cref=&quot;T:System.Xml.Schema.XmlSchemaAttributeGroup&quot; /&gt;, &lt;see cref=&quot;T:System.Xml.Schema.XmlSchemaComplexType&quot; /&gt;, &lt;see cref=&quot;T:System.Xml.Schema.XmlSchemaSimpleType&quot; /&gt;, and &lt;see cref=&quot;T:System.Xml.Schema.XmlSchemaGroup&quot; /&gt;.">Obtient la collection des classes suivantes : <see cref="T:System.Xml.Schema.XmlSchemaAnnotation" />, <see cref="T:System.Xml.Schema.XmlSchemaAttributeGroup" />, <see cref="T:System.Xml.Schema.XmlSchemaComplexType" />, <see cref="T:System.Xml.Schema.XmlSchemaSimpleType" /> et <see cref="T:System.Xml.Schema.XmlSchemaGroup" />.</summary>
      <returns vsli:raw="The elements contained within the redefine element.">Éléments contenus dans l'élément redéfini.</returns>
    </member>
    <member name="P:System.Xml.Schema.XmlSchemaRedefine.SchemaTypes">
      <summary vsli:raw="Gets the &lt;see cref=&quot;T:System.Xml.Schema.XmlSchemaObjectTable&quot; /&gt;, for all simple and complex types in the schema, which holds the post-compilation value of the &lt;see langword=&quot;SchemaTypes&quot; /&gt; property.">Obtient <see cref="T:System.Xml.Schema.XmlSchemaObjectTable" />, pour tous les types simples et complexes du schéma, qui contient la valeur de post-compilation de la propriété <see langword="SchemaTypes" />.</summary>
      <returns vsli:raw="The &lt;see cref=&quot;T:System.Xml.Schema.XmlSchemaObjectTable&quot; /&gt; for all schema types in the schema. The post-compilation value of the &lt;see langword=&quot;SchemaTypes&quot; /&gt; property.">
        <see cref="T:System.Xml.Schema.XmlSchemaObjectTable" /> pour tous les types de schéma du schéma. Valeur de post-compilation de la propriété <see langword="SchemaTypes" />.</returns>
    </member>
    <member name="T:System.Xml.Schema.XmlSchemaSequence">
      <summary vsli:raw="Represents the &lt;see langword=&quot;sequence&quot; /&gt; element (compositor) from the XML Schema as specified by the World Wide Web Consortium (W3C). The &lt;see langword=&quot;sequence&quot; /&gt; requires the elements in the group to appear in the specified sequence within the containing element.">Représente l’élément <see langword="sequence" /> (compositeur) issu d’un schéma XML comme spécifié par le W3C (World Wide Web Consortium). <see langword="sequence" /> requiert l'affichage des éléments du groupe selon l'ordre spécifié dans l'élément conteneur.</summary>
    </member>
    <member name="M:System.Xml.Schema.XmlSchemaSequence.#ctor">
      <summary vsli:raw="Initializes a new instance of the &lt;see cref=&quot;T:System.Xml.Schema.XmlSchemaSequence&quot; /&gt; class.">Initialise une nouvelle instance de la classe <see cref="T:System.Xml.Schema.XmlSchemaSequence" />.</summary>
    </member>
    <member name="P:System.Xml.Schema.XmlSchemaSequence.Items">
      <summary vsli:raw="The elements contained within the compositor. Collection of &lt;see cref=&quot;T:System.Xml.Schema.XmlSchemaElement&quot; /&gt;, &lt;see cref=&quot;T:System.Xml.Schema.XmlSchemaGroupRef&quot; /&gt;, &lt;see cref=&quot;T:System.Xml.Schema.XmlSchemaChoice&quot; /&gt;, &lt;see cref=&quot;T:System.Xml.Schema.XmlSchemaSequence&quot; /&gt;, or &lt;see cref=&quot;T:System.Xml.Schema.XmlSchemaAny&quot; /&gt;.">Éléments contenus dans le compositeur. Collection de <see cref="T:System.Xml.Schema.XmlSchemaElement" />, <see cref="T:System.Xml.Schema.XmlSchemaGroupRef" />, <see cref="T:System.Xml.Schema.XmlSchemaChoice" />, <see cref="T:System.Xml.Schema.XmlSchemaSequence" /> ou <see cref="T:System.Xml.Schema.XmlSchemaAny" />.</summary>
      <returns vsli:raw="The elements contained within the compositor.">Éléments contenus dans le compositeur.</returns>
    </member>
    <member name="T:System.Xml.Schema.XmlSchemaSet">
      <summary vsli:raw="Contains a cache of XML Schema definition language (XSD) schemas.">Contient un cache de schémas en langage XSD (XML Schema Definition).</summary>
    </member>
    <member name="E:System.Xml.Schema.XmlSchemaSet.ValidationEventHandler">
      <summary vsli:raw="Specifies an event handler for receiving information about XML Schema definition language (XSD) schema validation errors.">Spécifie un gestionnaire d'événements pour recevoir des informations sur les erreurs de validation du schéma en langage XSD (XML Schema Definition).</summary>
    </member>
    <member name="M:System.Xml.Schema.XmlSchemaSet.#ctor">
      <summary vsli:raw="Initializes a new instance of the &lt;see cref=&quot;T:System.Xml.Schema.XmlSchemaSet&quot; /&gt; class.">Initialise une nouvelle instance de la classe <see cref="T:System.Xml.Schema.XmlSchemaSet" />.</summary>
    </member>
    <member name="M:System.Xml.Schema.XmlSchemaSet.#ctor(System.Xml.XmlNameTable)">
      <summary vsli:raw="Initializes a new instance of the &lt;see cref=&quot;T:System.Xml.Schema.XmlSchemaSet&quot; /&gt; class with the specified &lt;see cref=&quot;T:System.Xml.XmlNameTable&quot; /&gt;.">Initialise une nouvelle instance de la classe <see cref="T:System.Xml.Schema.XmlSchemaSet" /> avec le <see cref="T:System.Xml.XmlNameTable" /> spécifié.</summary>
      <param name="nameTable" vsli:raw="The &lt;see cref=&quot;T:System.Xml.XmlNameTable&quot; /&gt; object to use.">L'objet <see cref="T:System.Xml.XmlNameTable" /> à utiliser.</param>
      <exception cref="T:System.ArgumentNullException" vsli:raw="The &lt;see cref=&quot;T:System.Xml.XmlNameTable&quot; /&gt; object passed as a parameter is &lt;see langword=&quot;null&quot; /&gt;.">L'objet <see cref="T:System.Xml.XmlNameTable" /> passé en tant que paramètre est <see langword="null" />.</exception>
    </member>
    <member name="M:System.Xml.Schema.XmlSchemaSet.Add(System.String,System.String)">
      <summary vsli:raw="Adds the XML Schema definition language (XSD) schema at the URL specified to the &lt;see cref=&quot;T:System.Xml.Schema.XmlSchemaSet&quot; /&gt;.">Ajoute le schéma en langage XSD (XML Schema Definition) XML à l'URL spécifiée à <see cref="T:System.Xml.Schema.XmlSchemaSet" />.</summary>
      <param name="targetNamespace" vsli:raw="The schema &lt;paramref name=&quot;targetNamespace&quot; /&gt; property, or &lt;see langword=&quot;null&quot; /&gt; to use the &lt;paramref name=&quot;targetNamespace&quot; /&gt; specified in the schema.">La propriété <paramref name="targetNamespace" /> du schéma, ou <see langword="null" />, pour utiliser le <paramref name="targetNamespace" /> spécifié dans le schéma.</param>
      <param name="schemaUri" vsli:raw="The URL that specifies the schema to load.">URL qui spécifie le schéma à charger.</param>
      <exception cref="T:System.Xml.Schema.XmlSchemaException" vsli:raw="The schema is not valid.">Le schéma n'est pas valide.</exception>
      <exception cref="T:System.ArgumentNullException" vsli:raw="The URL passed as a parameter is &lt;see langword=&quot;null&quot; /&gt; or &lt;see cref=&quot;F:System.String.Empty&quot; /&gt;.">L'URL passée en tant que paramètre est <see langword="null" /> ou <see cref="F:System.String.Empty" />.</exception>
      <returns vsli:raw="An &lt;see cref=&quot;T:System.Xml.Schema.XmlSchema&quot; /&gt; object if the schema is valid. If the schema is not valid and a &lt;see cref=&quot;T:System.Xml.Schema.ValidationEventHandler&quot; /&gt; is specified, then &lt;see langword=&quot;null&quot; /&gt; is returned and the appropriate validation event is raised. Otherwise, an &lt;see cref=&quot;T:System.Xml.Schema.XmlSchemaException&quot; /&gt; is thrown.">Objet <see cref="T:System.Xml.Schema.XmlSchema" /> si le schéma est valide. Si le schéma n'est pas valide et que <see cref="T:System.Xml.Schema.ValidationEventHandler" /> est spécifié, <see langword="null" /> est retourné et l'événement de validation approprié est déclenché. Sinon, une exception <see cref="T:System.Xml.Schema.XmlSchemaException" /> est levée.</returns>
    </member>
    <member name="M:System.Xml.Schema.XmlSchemaSet.Add(System.String,System.Xml.XmlReader)">
      <summary vsli:raw="Adds the XML Schema definition language (XSD) schema contained in the &lt;see cref=&quot;T:System.Xml.XmlReader&quot; /&gt; to the &lt;see cref=&quot;T:System.Xml.Schema.XmlSchemaSet&quot; /&gt;.">Ajoute le schéma en langage XSD (XML Schema Definition) XML contenu dans <see cref="T:System.Xml.XmlReader" /> à <see cref="T:System.Xml.Schema.XmlSchemaSet" />.</summary>
      <param name="targetNamespace" vsli:raw="The schema &lt;paramref name=&quot;targetNamespace&quot; /&gt; property, or &lt;see langword=&quot;null&quot; /&gt; to use the &lt;paramref name=&quot;targetNamespace&quot; /&gt; specified in the schema.">La propriété <paramref name="targetNamespace" /> du schéma, ou <see langword="null" />, pour utiliser le <paramref name="targetNamespace" /> spécifié dans le schéma.</param>
      <param name="schemaDocument" vsli:raw="The &lt;see cref=&quot;T:System.Xml.XmlReader&quot; /&gt; object.">Objet <see cref="T:System.Xml.XmlReader" />.</param>
      <exception cref="T:System.Xml.Schema.XmlSchemaException" vsli:raw="The schema is not valid.">Le schéma n'est pas valide.</exception>
      <exception cref="T:System.ArgumentNullException" vsli:raw="The &lt;see cref=&quot;T:System.Xml.XmlReader&quot; /&gt; object passed as a parameter is &lt;see langword=&quot;null&quot; /&gt;.">L'objet <see cref="T:System.Xml.XmlReader" /> passé en tant que paramètre est <see langword="null" />.</exception>
      <returns vsli:raw="An &lt;see cref=&quot;T:System.Xml.Schema.XmlSchema&quot; /&gt; object if the schema is valid. If the schema is not valid and a &lt;see cref=&quot;T:System.Xml.Schema.ValidationEventHandler&quot; /&gt; is specified, then &lt;see langword=&quot;null&quot; /&gt; is returned and the appropriate validation event is raised. Otherwise, an &lt;see cref=&quot;T:System.Xml.Schema.XmlSchemaException&quot; /&gt; is thrown.">Objet <see cref="T:System.Xml.Schema.XmlSchema" /> si le schéma est valide. Si le schéma n'est pas valide et que <see cref="T:System.Xml.Schema.ValidationEventHandler" /> est spécifié, <see langword="null" /> est retourné et l'événement de validation approprié est déclenché. Sinon, une exception <see cref="T:System.Xml.Schema.XmlSchemaException" /> est levée.</returns>
    </member>
    <member name="M:System.Xml.Schema.XmlSchemaSet.Add(System.Xml.Schema.XmlSchema)">
      <summary vsli:raw="Adds the given &lt;see cref=&quot;T:System.Xml.Schema.XmlSchema&quot; /&gt; to the &lt;see cref=&quot;T:System.Xml.Schema.XmlSchemaSet&quot; /&gt;.">Ajoute le <see cref="T:System.Xml.Schema.XmlSchema" /> donné à <see cref="T:System.Xml.Schema.XmlSchemaSet" />.</summary>
      <param name="schema" vsli:raw="The &lt;see cref=&quot;T:System.Xml.Schema.XmlSchema&quot; /&gt; object to add to the &lt;see cref=&quot;T:System.Xml.Schema.XmlSchemaSet&quot; /&gt;.">Objet <see cref="T:System.Xml.Schema.XmlSchema" /> à ajouter à <see cref="T:System.Xml.Schema.XmlSchemaSet" />.</param>
      <exception cref="T:System.Xml.Schema.XmlSchemaException" vsli:raw="The schema is not valid.">Le schéma n'est pas valide.</exception>
      <exception cref="T:System.ArgumentNullException" vsli:raw="The &lt;see cref=&quot;T:System.Xml.Schema.XmlSchema&quot; /&gt; object passed as a parameter is &lt;see langword=&quot;null&quot; /&gt;.">L'objet <see cref="T:System.Xml.Schema.XmlSchema" /> passé en tant que paramètre est <see langword="null" />.</exception>
      <returns vsli:raw="An &lt;see cref=&quot;T:System.Xml.Schema.XmlSchema&quot; /&gt; object if the schema is valid. If the schema is not valid and a &lt;see cref=&quot;T:System.Xml.Schema.ValidationEventHandler&quot; /&gt; is specified, then &lt;see langword=&quot;null&quot; /&gt; is returned and the appropriate validation event is raised. Otherwise, an &lt;see cref=&quot;T:System.Xml.Schema.XmlSchemaException&quot; /&gt; is thrown.">Objet <see cref="T:System.Xml.Schema.XmlSchema" /> si le schéma est valide. Si le schéma n'est pas valide et que <see cref="T:System.Xml.Schema.ValidationEventHandler" /> est spécifié, <see langword="null" /> est retourné et l'événement de validation approprié est déclenché. Sinon, une exception <see cref="T:System.Xml.Schema.XmlSchemaException" /> est levée.</returns>
    </member>
    <member name="M:System.Xml.Schema.XmlSchemaSet.Add(System.Xml.Schema.XmlSchemaSet)">
      <summary vsli:raw="Adds all the XML Schema definition language (XSD) schemas in the given &lt;see cref=&quot;T:System.Xml.Schema.XmlSchemaSet&quot; /&gt; to the &lt;see cref=&quot;T:System.Xml.Schema.XmlSchemaSet&quot; /&gt;.">Ajoute tous les schémas en langage XSD (XML Schema Definition) XML au <see cref="T:System.Xml.Schema.XmlSchemaSet" /> donné au <see cref="T:System.Xml.Schema.XmlSchemaSet" />.</summary>
      <param name="schemas" vsli:raw="The &lt;see cref=&quot;T:System.Xml.Schema.XmlSchemaSet&quot; /&gt; object.">Objet <see cref="T:System.Xml.Schema.XmlSchemaSet" />.</param>
      <exception cref="T:System.Xml.Schema.XmlSchemaException" vsli:raw="A schema in the &lt;see cref=&quot;T:System.Xml.Schema.XmlSchemaSet&quot; /&gt; is not valid.">Un schéma dans <see cref="T:System.Xml.Schema.XmlSchemaSet" /> n'est pas valide.</exception>
      <exception cref="T:System.ArgumentNullException" vsli:raw="The &lt;see cref=&quot;T:System.Xml.Schema.XmlSchemaSet&quot; /&gt; object passed as a parameter is &lt;see langword=&quot;null&quot; /&gt;.">L'objet <see cref="T:System.Xml.Schema.XmlSchemaSet" /> passé en tant que paramètre est <see langword="null" />.</exception>
    </member>
    <member name="M:System.Xml.Schema.XmlSchemaSet.Compile">
      <summary vsli:raw="Compiles the XML Schema definition language (XSD) schemas added to the &lt;see cref=&quot;T:System.Xml.Schema.XmlSchemaSet&quot; /&gt; into one logical schema.">Compile les schémas en langage XSD (XML Schema Definition) XML ajoutés au <see cref="T:System.Xml.Schema.XmlSchemaSet" /> dans un schéma logique.</summary>
      <exception cref="T:System.Xml.Schema.XmlSchemaException" vsli:raw="An error occurred when validating and compiling the schemas in the &lt;see cref=&quot;T:System.Xml.Schema.XmlSchemaSet&quot; /&gt;.">Une erreur s'est produite lors de la validation et de la compilation des schémas dans <see cref="T:System.Xml.Schema.XmlSchemaSet" />.</exception>
    </member>
    <member name="M:System.Xml.Schema.XmlSchemaSet.Contains(System.String)">
      <summary vsli:raw="Indicates whether an XML Schema definition language (XSD) schema with the specified target namespace URI is in the &lt;see cref=&quot;T:System.Xml.Schema.XmlSchemaSet&quot; /&gt;.">Indique si un schéma en langage XSD (XML Schema Definition) avec l'URI d'espace de noms cible spécifié se trouve dans <see cref="T:System.Xml.Schema.XmlSchemaSet" />.</summary>
      <param name="targetNamespace" vsli:raw="The schema &lt;paramref name=&quot;targetNamespace&quot; /&gt; property.">Propriété <paramref name="targetNamespace" /> du schéma.</param>
      <returns vsli:raw="&lt;see langword=&quot;true&quot; /&gt; if a schema with the specified target namespace URI is in the &lt;see cref=&quot;T:System.Xml.Schema.XmlSchemaSet&quot; /&gt;; otherwise, &lt;see langword=&quot;false&quot; /&gt;.">
        <see langword="true" /> si un schéma avec l'URI d'espace de noms cible spécifié se trouve <see cref="T:System.Xml.Schema.XmlSchemaSet" /> ; sinon, <see langword="false" />.</returns>
    </member>
    <member name="M:System.Xml.Schema.XmlSchemaSet.Contains(System.Xml.Schema.XmlSchema)">
      <summary vsli:raw="Indicates whether the specified XML Schema definition language (XSD) &lt;see cref=&quot;T:System.Xml.Schema.XmlSchema&quot; /&gt; object is in the &lt;see cref=&quot;T:System.Xml.Schema.XmlSchemaSet&quot; /&gt;.">Indique si l'objet en langage XSD (XML Schema Definition) <see cref="T:System.Xml.Schema.XmlSchema" /> spécifié se trouve dans <see cref="T:System.Xml.Schema.XmlSchemaSet" />.</summary>
      <param name="schema" vsli:raw="The &lt;see cref=&quot;T:System.Xml.Schema.XmlSchema&quot; /&gt; object.">Objet <see cref="T:System.Xml.Schema.XmlSchema" />.</param>
      <exception cref="T:System.ArgumentNullException" vsli:raw="The &lt;see cref=&quot;T:System.Xml.Schema.XmlSchemaSet&quot; /&gt; passed as a parameter is &lt;see langword=&quot;null&quot; /&gt;.">
        <see cref="T:System.Xml.Schema.XmlSchemaSet" /> passé en tant que paramètre est <see langword="null" />.</exception>
      <returns vsli:raw="&lt;see langword=&quot;true&quot; /&gt; if the &lt;see cref=&quot;T:System.Xml.Schema.XmlSchema&quot; /&gt; object is in the &lt;see cref=&quot;T:System.Xml.Schema.XmlSchemaSet&quot; /&gt;; otherwise, &lt;see langword=&quot;false&quot; /&gt;.">
        <see langword="true" /> si l'objet <see cref="T:System.Xml.Schema.XmlSchema" /> et dans le <see cref="T:System.Xml.Schema.XmlSchemaSet" /> ; sinon, <see langword="false" />.</returns>
    </member>
    <member name="M:System.Xml.Schema.XmlSchemaSet.CopyTo(System.Xml.Schema.XmlSchema[],System.Int32)">
      <summary vsli:raw="Copies all the &lt;see cref=&quot;T:System.Xml.Schema.XmlSchema&quot; /&gt; objects from the &lt;see cref=&quot;T:System.Xml.Schema.XmlSchemaSet&quot; /&gt; to the given array, starting at the given index.">Copie tous les objets <see cref="T:System.Xml.Schema.XmlSchema" /> de <see cref="T:System.Xml.Schema.XmlSchemaSet" /> vers le tableau donné, en commençant à l'index spécifié.</summary>
      <param name="schemas" vsli:raw="The array to copy the objects to.">Tableau dans lequel copier les objets.</param>
      <param name="index" vsli:raw="The index in the array where copying will begin.">Index à partir duquel la copie va commencer dans le tableau.</param>
    </member>
    <member name="M:System.Xml.Schema.XmlSchemaSet.Remove(System.Xml.Schema.XmlSchema)">
      <summary vsli:raw="Removes the specified XML Schema definition language (XSD) schema from the &lt;see cref=&quot;T:System.Xml.Schema.XmlSchemaSet&quot; /&gt;.">Supprime le schéma en langage XSD (XML Schema Definition) spécifié du <see cref="T:System.Xml.Schema.XmlSchemaSet" />.</summary>
      <param name="schema" vsli:raw="The &lt;see cref=&quot;T:System.Xml.Schema.XmlSchema&quot; /&gt; object to remove from the &lt;see cref=&quot;T:System.Xml.Schema.XmlSchemaSet&quot; /&gt;.">Objet <see cref="T:System.Xml.Schema.XmlSchema" /> à supprimer de <see cref="T:System.Xml.Schema.XmlSchemaSet" />.</param>
      <exception cref="T:System.Xml.Schema.XmlSchemaException" vsli:raw="The schema is not a valid schema.">Le schéma n'est pas valide.</exception>
      <exception cref="T:System.ArgumentNullException" vsli:raw="The &lt;see cref=&quot;T:System.Xml.Schema.XmlSchema&quot; /&gt; passed as a parameter is &lt;see langword=&quot;null&quot; /&gt;.">
        <see cref="T:System.Xml.Schema.XmlSchema" /> passé en tant que paramètre est <see langword="null" />.</exception>
      <returns vsli:raw="The &lt;see cref=&quot;T:System.Xml.Schema.XmlSchema&quot; /&gt; object removed from the &lt;see cref=&quot;T:System.Xml.Schema.XmlSchemaSet&quot; /&gt; or &lt;see langword=&quot;null&quot; /&gt; if the schema was not found in the &lt;see cref=&quot;T:System.Xml.Schema.XmlSchemaSet&quot; /&gt;.">L'objet <see cref="T:System.Xml.Schema.XmlSchema" /> supprimé de <see cref="T:System.Xml.Schema.XmlSchemaSet" /> ou <see langword="null" /> si le schéma n'a pas été trouvé dans <see cref="T:System.Xml.Schema.XmlSchemaSet" />.</returns>
    </member>
    <member name="M:System.Xml.Schema.XmlSchemaSet.RemoveRecursive(System.Xml.Schema.XmlSchema)">
      <summary vsli:raw="Removes the specified XML Schema definition language (XSD) schema and all the schemas it imports from the &lt;see cref=&quot;T:System.Xml.Schema.XmlSchemaSet&quot; /&gt;.">Supprime le schéma en langage XSD (XML Schema Definition) spécifié et tous les schémas qu'il importe de <see cref="T:System.Xml.Schema.XmlSchemaSet" />.</summary>
      <param name="schemaToRemove" vsli:raw="The &lt;see cref=&quot;T:System.Xml.Schema.XmlSchema&quot; /&gt; object to remove from the &lt;see cref=&quot;T:System.Xml.Schema.XmlSchemaSet&quot; /&gt;.">Objet <see cref="T:System.Xml.Schema.XmlSchema" /> à supprimer de <see cref="T:System.Xml.Schema.XmlSchemaSet" />.</param>
      <exception cref="T:System.ArgumentNullException" vsli:raw="The &lt;see cref=&quot;T:System.Xml.Schema.XmlSchema&quot; /&gt; passed as a parameter is &lt;see langword=&quot;null&quot; /&gt;.">
        <see cref="T:System.Xml.Schema.XmlSchema" /> passé en tant que paramètre est <see langword="null" />.</exception>
      <returns vsli:raw="&lt;see langword=&quot;true&quot; /&gt; if the &lt;see cref=&quot;T:System.Xml.Schema.XmlSchema&quot; /&gt; object and all its imports were successfully removed; otherwise, &lt;see langword=&quot;false&quot; /&gt;.">
        <see langword="true" /> si l'objet <see cref="T:System.Xml.Schema.XmlSchema" /> et toutes ses importations ont été supprimés ; sinon, <see langword="false" />.</returns>
    </member>
    <member name="M:System.Xml.Schema.XmlSchemaSet.Reprocess(System.Xml.Schema.XmlSchema)">
      <summary vsli:raw="Reprocesses an XML Schema definition language (XSD) schema that already exists in the &lt;see cref=&quot;T:System.Xml.Schema.XmlSchemaSet&quot; /&gt;.">Recycle un schéma en langage XSD (XML Schema Definition) qui existe déjà dans <see cref="T:System.Xml.Schema.XmlSchemaSet" />.</summary>
      <param name="schema" vsli:raw="The schema to reprocess.">Schéma à recycler.</param>
      <exception cref="T:System.Xml.Schema.XmlSchemaException" vsli:raw="The schema is not valid.">Le schéma n'est pas valide.</exception>
      <exception cref="T:System.ArgumentNullException" vsli:raw="The &lt;see cref=&quot;T:System.Xml.Schema.XmlSchema&quot; /&gt; object passed as a parameter is &lt;see langword=&quot;null&quot; /&gt;.">L'objet <see cref="T:System.Xml.Schema.XmlSchema" /> passé en tant que paramètre est <see langword="null" />.</exception>
      <exception cref="T:System.ArgumentException" vsli:raw="The &lt;see cref=&quot;T:System.Xml.Schema.XmlSchema&quot; /&gt; object passed as a parameter does not already exist in the &lt;see cref=&quot;T:System.Xml.Schema.XmlSchemaSet&quot; /&gt;.">L'objet <see cref="T:System.Xml.Schema.XmlSchema" /> passé en tant que paramètre n'existe pas déjà dans <see cref="T:System.Xml.Schema.XmlSchemaSet" />.</exception>
      <returns vsli:raw="An &lt;see cref=&quot;T:System.Xml.Schema.XmlSchema&quot; /&gt; object if the schema is a valid schema. If the schema is not valid and a &lt;see cref=&quot;T:System.Xml.Schema.ValidationEventHandler&quot; /&gt; is specified, &lt;see langword=&quot;null&quot; /&gt; is returned and the appropriate validation event is raised. Otherwise, an &lt;see cref=&quot;T:System.Xml.Schema.XmlSchemaException&quot; /&gt; is thrown.">Objet <see cref="T:System.Xml.Schema.XmlSchema" /> si le schéma est un schéma valide. Si le schéma n'est pas valide et que <see cref="T:System.Xml.Schema.ValidationEventHandler" /> est spécifié, <see langword="null" /> est retourné et l'événement de validation approprié est déclenché. Sinon, une exception <see cref="T:System.Xml.Schema.XmlSchemaException" /> est levée.</returns>
    </member>
    <member name="M:System.Xml.Schema.XmlSchemaSet.Schemas">
      <summary vsli:raw="Returns a collection of all the XML Schema definition language (XSD) schemas in the &lt;see cref=&quot;T:System.Xml.Schema.XmlSchemaSet&quot; /&gt;.">Retourne une collection de tous les schémas en langage XSD (XML Schema Definition) dans <see cref="T:System.Xml.Schema.XmlSchemaSet" />.</summary>
      <returns vsli:raw="An &lt;see cref=&quot;T:System.Collections.ICollection&quot; /&gt; object containing all the schemas that have been added to the &lt;see cref=&quot;T:System.Xml.Schema.XmlSchemaSet&quot; /&gt;. If no schemas have been added to the &lt;see cref=&quot;T:System.Xml.Schema.XmlSchemaSet&quot; /&gt;, an empty &lt;see cref=&quot;T:System.Collections.ICollection&quot; /&gt; object is returned.">Un objet <see cref="T:System.Collections.ICollection" /> contenant tous les schémas qui ont été ajoutés à <see cref="T:System.Xml.Schema.XmlSchemaSet" />. Si aucun schéma n'a été ajouté au <see cref="T:System.Xml.Schema.XmlSchemaSet" />, un objet <see cref="T:System.Collections.ICollection" /> vide est retourné.</returns>
    </member>
    <member name="M:System.Xml.Schema.XmlSchemaSet.Schemas(System.String)">
      <summary vsli:raw="Returns a collection of all the XML Schema definition language (XSD) schemas in the &lt;see cref=&quot;T:System.Xml.Schema.XmlSchemaSet&quot; /&gt; that belong to the given namespace.">Retourne une collection de tous les schémas en langage XSD (XML Schema Definition) dans <see cref="T:System.Xml.Schema.XmlSchemaSet" /> qui appartient à l'espace de noms donné.</summary>
      <param name="targetNamespace" vsli:raw="The schema &lt;paramref name=&quot;targetNamespace&quot; /&gt; property.">Propriété <paramref name="targetNamespace" /> du schéma.</param>
      <returns vsli:raw="An &lt;see cref=&quot;T:System.Collections.ICollection&quot; /&gt; object containing all the schemas that have been added to the &lt;see cref=&quot;T:System.Xml.Schema.XmlSchemaSet&quot; /&gt; that belong to the given namespace. If no schemas have been added to the &lt;see cref=&quot;T:System.Xml.Schema.XmlSchemaSet&quot; /&gt;, an empty &lt;see cref=&quot;T:System.Collections.ICollection&quot; /&gt; object is returned.">Objet <see cref="T:System.Collections.ICollection" /> contenant tous les schémas qui ont été ajoutés au <see cref="T:System.Xml.Schema.XmlSchemaSet" /> qui appartient à l'espace de noms donné. Si aucun schéma n'a été ajouté au <see cref="T:System.Xml.Schema.XmlSchemaSet" />, un objet <see cref="T:System.Collections.ICollection" /> vide est retourné.</returns>
    </member>
    <member name="P:System.Xml.Schema.XmlSchemaSet.CompilationSettings">
      <summary vsli:raw="Gets or sets the &lt;see cref=&quot;T:System.Xml.Schema.XmlSchemaCompilationSettings&quot; /&gt; for the &lt;see cref=&quot;T:System.Xml.Schema.XmlSchemaSet&quot; /&gt;.">Obtient ou définit <see cref="T:System.Xml.Schema.XmlSchemaCompilationSettings" /> pour <see cref="T:System.Xml.Schema.XmlSchemaSet" />.</summary>
      <returns vsli:raw="The &lt;see cref=&quot;T:System.Xml.Schema.XmlSchemaCompilationSettings&quot; /&gt; for the &lt;see cref=&quot;T:System.Xml.Schema.XmlSchemaSet&quot; /&gt;. The default is an &lt;see cref=&quot;T:System.Xml.Schema.XmlSchemaCompilationSettings&quot; /&gt; instance with the &lt;see cref=&quot;P:System.Xml.Schema.XmlSchemaCompilationSettings.EnableUpaCheck&quot; /&gt; property set to &lt;see langword=&quot;true&quot; /&gt;.">
        <see cref="T:System.Xml.Schema.XmlSchemaCompilationSettings" /> pour <see cref="T:System.Xml.Schema.XmlSchemaSet" />. La valeur par défaut est une instance de <see cref="T:System.Xml.Schema.XmlSchemaCompilationSettings" /> avec la propriété <see cref="P:System.Xml.Schema.XmlSchemaCompilationSettings.EnableUpaCheck" /> égale à <see langword="true" />.</returns>
    </member>
    <member name="P:System.Xml.Schema.XmlSchemaSet.Count">
      <summary vsli:raw="Gets the number of logical XML Schema definition language (XSD) schemas in the &lt;see cref=&quot;T:System.Xml.Schema.XmlSchemaSet&quot; /&gt;.">Obtient le nombre de schémas en langage XSD (XML Schema Definition) logiques dans <see cref="T:System.Xml.Schema.XmlSchemaSet" />.</summary>
      <returns vsli:raw="The number of logical schemas in the &lt;see cref=&quot;T:System.Xml.Schema.XmlSchemaSet&quot; /&gt;.">Nombre de schémas logiques dans <see cref="T:System.Xml.Schema.XmlSchemaSet" />.</returns>
    </member>
    <member name="P:System.Xml.Schema.XmlSchemaSet.GlobalAttributes">
      <summary vsli:raw="Gets all the global attributes in all the XML Schema definition language (XSD) schemas in the &lt;see cref=&quot;T:System.Xml.Schema.XmlSchemaSet&quot; /&gt;.">Obtient tous les attributs globaux dans tous les schémas en langage XSD (XML Schema Definition) dans <see cref="T:System.Xml.Schema.XmlSchemaSet" />.</summary>
      <returns vsli:raw="The collection of global attributes.">Collection d’attributs globaux.</returns>
    </member>
    <member name="P:System.Xml.Schema.XmlSchemaSet.GlobalElements">
      <summary vsli:raw="Gets all the global elements in all the XML Schema definition language (XSD) schemas in the &lt;see cref=&quot;T:System.Xml.Schema.XmlSchemaSet&quot; /&gt;.">Obtient tous les éléments globaux dans tous les schémas en langage XSD (XML Schema Definition) dans <see cref="T:System.Xml.Schema.XmlSchemaSet" />.</summary>
      <returns vsli:raw="The collection of global elements.">Collection d’éléments globaux.</returns>
    </member>
    <member name="P:System.Xml.Schema.XmlSchemaSet.GlobalTypes">
      <summary vsli:raw="Gets all of the global simple and complex types in all the XML Schema definition language (XSD) schemas in the &lt;see cref=&quot;T:System.Xml.Schema.XmlSchemaSet&quot; /&gt;.">Obtient tous les types simples et complexes globaux dans tous les schémas en langage XSD (XML Schema Definition) dans <see cref="T:System.Xml.Schema.XmlSchemaSet" />.</summary>
      <returns vsli:raw="The collection of global simple and complex types.">Collection de types simples et complexes globaux.</returns>
    </member>
    <member name="P:System.Xml.Schema.XmlSchemaSet.IsCompiled">
      <summary vsli:raw="Gets a value that indicates whether the XML Schema definition language (XSD) schemas in the &lt;see cref=&quot;T:System.Xml.Schema.XmlSchemaSet&quot; /&gt; have been compiled.">Obtient une valeur qui indique si les schémas en langage XSD (XML Schema Definition) du <see cref="T:System.Xml.Schema.XmlSchemaSet" /> ont été compilés.</summary>
      <returns vsli:raw="&lt;see langword=&quot;true&quot; /&gt; if the schemas in the &lt;see cref=&quot;T:System.Xml.Schema.XmlSchemaSet&quot; /&gt; have been compiled since the last time a schema was added or removed from the &lt;see cref=&quot;T:System.Xml.Schema.XmlSchemaSet&quot; /&gt;; otherwise, &lt;see langword=&quot;false&quot; /&gt;.">
        <see langword="true" /> si les schémas dans <see cref="T:System.Xml.Schema.XmlSchemaSet" /> ont été compilés depuis la dernière fois qu'un schéma a été ajouté à ou supprimé de <see cref="T:System.Xml.Schema.XmlSchemaSet" /> ; sinon, <see langword="false" />.</returns>
    </member>
    <member name="P:System.Xml.Schema.XmlSchemaSet.NameTable">
      <summary vsli:raw="Gets the default &lt;see cref=&quot;T:System.Xml.XmlNameTable&quot; /&gt; used by the &lt;see cref=&quot;T:System.Xml.Schema.XmlSchemaSet&quot; /&gt; when loading new XML Schema definition language (XSD) schemas.">Obtient le <see cref="T:System.Xml.XmlNameTable" /> par défaut utilisé par <see cref="T:System.Xml.Schema.XmlSchemaSet" /> lors du chargement de nouveaux schémas en langage XSD (XML Schema Definition).</summary>
      <returns vsli:raw="A table of atomized string objects.">Table d'objets de chaînes atomisées.</returns>
    </member>
    <member name="P:System.Xml.Schema.XmlSchemaSet.XmlResolver">
      <summary vsli:raw="Sets the &lt;see cref=&quot;T:System.Xml.XmlResolver&quot; /&gt; used to resolve namespaces or locations referenced in include and import elements of a schema.">Définit le <see cref="T:System.Xml.XmlResolver" /> utilisé pour résoudre les espaces de noms ou les emplacements référencés dans les éléments include et import d'un schéma.</summary>
      <returns vsli:raw="The &lt;see cref=&quot;T:System.Xml.XmlResolver&quot; /&gt; used to resolve namespaces or locations referenced in include and import elements of a schema.">
        <see cref="T:System.Xml.XmlResolver" /> utilisé pour résoudre les espaces de noms ou les emplacements référencés dans les éléments include et import d'un schéma.</returns>
    </member>
    <member name="T:System.Xml.Schema.XmlSchemaSimpleContent">
      <summary vsli:raw="Represents the &lt;see langword=&quot;simpleContent&quot; /&gt; element from XML Schema as specified by the World Wide Web Consortium (W3C). This class is for simple and complex types with simple content model.">Représente l'élément <see langword="simpleContent" /> issu d'un schéma XML comme spécifié par le W3C (World Wide Web Consortium). Cette classe concerne les types simples et complexes avec un modèle de contenu simple.</summary>
    </member>
    <member name="M:System.Xml.Schema.XmlSchemaSimpleContent.#ctor">
      <summary vsli:raw="Initializes a new instance of the &lt;see cref=&quot;T:System.Xml.Schema.XmlSchemaSimpleContent&quot; /&gt; class.">Initialise une nouvelle instance de la classe <see cref="T:System.Xml.Schema.XmlSchemaSimpleContent" />.</summary>
    </member>
    <member name="P:System.Xml.Schema.XmlSchemaSimpleContent.Content">
      <summary vsli:raw="Gets one of the &lt;see cref=&quot;T:System.Xml.Schema.XmlSchemaSimpleContentRestriction&quot; /&gt; or &lt;see cref=&quot;T:System.Xml.Schema.XmlSchemaSimpleContentExtension&quot; /&gt;.">Obtient <see cref="T:System.Xml.Schema.XmlSchemaSimpleContentRestriction" /> ou <see cref="T:System.Xml.Schema.XmlSchemaSimpleContentExtension" />.</summary>
      <returns vsli:raw="The content contained within the &lt;see langword=&quot;XmlSchemaSimpleContentRestriction&quot; /&gt; or &lt;see langword=&quot;XmlSchemaSimpleContentExtension&quot; /&gt; class.">Contenu de la classe <see langword="XmlSchemaSimpleContentRestriction" /> ou <see langword="XmlSchemaSimpleContentExtension" />.</returns>
    </member>
    <member name="T:System.Xml.Schema.XmlSchemaSimpleContentExtension">
      <summary vsli:raw="Represents the &lt;see langword=&quot;extension&quot; /&gt; element for simple content from XML Schema as specified by the World Wide Web Consortium (W3C). This class can be used to derive simple types by extension. Such derivations are used to extend the simple type content of the element by adding attributes.">Représente l’élément <see langword="extension" /> de contenu simple issu d’un schéma XML comme spécifié par le W3C (World Wide Web Consortium). Cette classe peut être utilisée pour dériver des types simples par extension. Ces dérivations sont utilisées pour étendre le contenu de type simple de l'élément en ajoutant des attributs.</summary>
    </member>
    <member name="M:System.Xml.Schema.XmlSchemaSimpleContentExtension.#ctor">
      <summary vsli:raw="Initializes a new instance of the &lt;see cref=&quot;T:System.Xml.Schema.XmlSchemaSimpleContentExtension&quot; /&gt; class.">Initialise une nouvelle instance de la classe <see cref="T:System.Xml.Schema.XmlSchemaSimpleContentExtension" />.</summary>
    </member>
    <member name="P:System.Xml.Schema.XmlSchemaSimpleContentExtension.AnyAttribute">
      <summary vsli:raw="Gets or sets the &lt;see langword=&quot;XmlSchemaAnyAttribute&quot; /&gt; to be used for the attribute value.">Obtient ou définit le <see langword="XmlSchemaAnyAttribute" /> à utiliser pour la valeur de l'attribut.</summary>
      <returns vsli:raw="The &lt;see langword=&quot;XmlSchemaAnyAttribute&quot; /&gt;. Optional.">L’<see langword="XmlSchemaAnyAttribute" />opérateur Optionnel.</returns>
    </member>
    <member name="P:System.Xml.Schema.XmlSchemaSimpleContentExtension.Attributes">
      <summary vsli:raw="Gets the collection of &lt;see cref=&quot;T:System.Xml.Schema.XmlSchemaAttribute&quot; /&gt; and &lt;see cref=&quot;T:System.Xml.Schema.XmlSchemaAttributeGroupRef&quot; /&gt;.">Obtient la collection de <see cref="T:System.Xml.Schema.XmlSchemaAttribute" /> et de <see cref="T:System.Xml.Schema.XmlSchemaAttributeGroupRef" />.</summary>
      <returns vsli:raw="The collection of attributes for the &lt;see langword=&quot;simpleType&quot; /&gt; element.">Collection d'attributs pour l'élément <see langword="simpleType" />.</returns>
    </member>
    <member name="P:System.Xml.Schema.XmlSchemaSimpleContentExtension.BaseTypeName">
      <summary vsli:raw="Gets or sets the name of a built-in data type or simple type from which this type is extended.">Obtient ou définit le nom d'un type de données intégré ou d'un type simple à partir duquel ce type est étendu.</summary>
      <returns vsli:raw="The base type name.">Nom du type de base.</returns>
    </member>
    <member name="T:System.Xml.Schema.XmlSchemaSimpleContentRestriction">
      <summary vsli:raw="Represents the &lt;see langword=&quot;restriction&quot; /&gt; element for simple content from XML Schema as specified by the World Wide Web Consortium (W3C). This class can be used to derive simple types by restriction. Such derivations can be used to restrict the range of values for the element to a subset of the values specified in the inherited simple type.">Représente l’élément <see langword="restriction" /> de contenu simple issu d’un schéma XML comme spécifié par le W3C (World Wide Web Consortium). Cette classe peut être utilisée pour dériver des types simples par restriction. Ces dérivations peuvent être utilisées pour restreindre la plage de valeurs de l'élément à un sous-ensemble de valeurs spécifié dans le type simple hérité.</summary>
    </member>
    <member name="M:System.Xml.Schema.XmlSchemaSimpleContentRestriction.#ctor">
      <summary vsli:raw="Initializes a new instance of the &lt;see cref=&quot;T:System.Xml.Schema.XmlSchemaSimpleContentRestriction&quot; /&gt; class.">Initialise une nouvelle instance de la classe <see cref="T:System.Xml.Schema.XmlSchemaSimpleContentRestriction" />.</summary>
    </member>
    <member name="P:System.Xml.Schema.XmlSchemaSimpleContentRestriction.AnyAttribute">
      <summary vsli:raw="Gets or sets an &lt;see cref=&quot;T:System.Xml.Schema.XmlSchemaAnyAttribute&quot; /&gt; to be used for the attribute value.">Obtient ou définit un <see cref="T:System.Xml.Schema.XmlSchemaAnyAttribute" /> à utiliser pour la valeur de l'attribut.</summary>
      <returns vsli:raw="The &lt;see cref=&quot;T:System.Xml.Schema.XmlSchemaAnyAttribute&quot; /&gt; for the attribute value. Optional.">
        <see cref="T:System.Xml.Schema.XmlSchemaAnyAttribute" /> pour la valeur de l'attribut. Optionnel.</returns>
    </member>
    <member name="P:System.Xml.Schema.XmlSchemaSimpleContentRestriction.Attributes">
      <summary vsli:raw="Gets the &lt;see cref=&quot;T:System.Xml.Schema.XmlSchemaAttribute&quot; /&gt; and &lt;see cref=&quot;T:System.Xml.Schema.XmlSchemaAttributeGroupRef&quot; /&gt; collection of attributes for the simple type.">Obtient la collection d’attributs <see cref="T:System.Xml.Schema.XmlSchemaAttribute" /> et <see cref="T:System.Xml.Schema.XmlSchemaAttributeGroupRef" /> pour le type simple.</summary>
      <returns vsli:raw="The collection of attributes for a simple type.">Collection d’attributs pour un type simple.</returns>
    </member>
    <member name="P:System.Xml.Schema.XmlSchemaSimpleContentRestriction.BaseType">
      <summary vsli:raw="Gets or sets the simple type base value.">Obtient ou définit la valeur de base du type simple.</summary>
      <returns vsli:raw="The simple type base value.">Valeur de base du type simple.</returns>
    </member>
    <member name="P:System.Xml.Schema.XmlSchemaSimpleContentRestriction.BaseTypeName">
      <summary vsli:raw="Gets or sets the name of the built-in data type or simple type from which this type is derived.">Obtient ou définit le nom du type de données intégré ou du type simple à partir duquel ce type est dérivé.</summary>
      <returns vsli:raw="The name of the base type.">Nom du type de base.</returns>
    </member>
    <member name="P:System.Xml.Schema.XmlSchemaSimpleContentRestriction.Facets">
      <summary vsli:raw="Gets or sets an Xml Schema facet.">Obtient ou définit une facette de schéma XML.</summary>
      <returns vsli:raw="One of the following facet classes:  &#xA;  &#xA; &lt;see cref=&quot;T:System.Xml.Schema.XmlSchemaLengthFacet&quot; /&gt;, &lt;see cref=&quot;T:System.Xml.Schema.XmlSchemaMinLengthFacet&quot; /&gt;, &lt;see cref=&quot;T:System.Xml.Schema.XmlSchemaMaxLengthFacet&quot; /&gt;, &lt;see cref=&quot;T:System.Xml.Schema.XmlSchemaPatternFacet&quot; /&gt;, &lt;see cref=&quot;T:System.Xml.Schema.XmlSchemaEnumerationFacet&quot; /&gt;, &lt;see cref=&quot;T:System.Xml.Schema.XmlSchemaMaxInclusiveFacet&quot; /&gt;, &lt;see cref=&quot;T:System.Xml.Schema.XmlSchemaMaxExclusiveFacet&quot; /&gt;, &lt;see cref=&quot;T:System.Xml.Schema.XmlSchemaMinInclusiveFacet&quot; /&gt;, &lt;see cref=&quot;T:System.Xml.Schema.XmlSchemaMinExclusiveFacet&quot; /&gt;, &lt;see cref=&quot;T:System.Xml.Schema.XmlSchemaFractionDigitsFacet&quot; /&gt;, &lt;see cref=&quot;T:System.Xml.Schema.XmlSchemaTotalDigitsFacet&quot; /&gt;, &lt;see cref=&quot;T:System.Xml.Schema.XmlSchemaWhiteSpaceFacet&quot; /&gt;.">Une des classes de facettes suivantes : 
 <see cref="T:System.Xml.Schema.XmlSchemaLengthFacet" />, <see cref="T:System.Xml.Schema.XmlSchemaMinLengthFacet" />, <see cref="T:System.Xml.Schema.XmlSchemaMaxLengthFacet" />, <see cref="T:System.Xml.Schema.XmlSchemaPatternFacet" />, <see cref="T:System.Xml.Schema.XmlSchemaEnumerationFacet" />, <see cref="T:System.Xml.Schema.XmlSchemaMaxInclusiveFacet" />, <see cref="T:System.Xml.Schema.XmlSchemaMaxExclusiveFacet" />, <see cref="T:System.Xml.Schema.XmlSchemaMinInclusiveFacet" />, <see cref="T:System.Xml.Schema.XmlSchemaMinExclusiveFacet" />, <see cref="T:System.Xml.Schema.XmlSchemaFractionDigitsFacet" />, <see cref="T:System.Xml.Schema.XmlSchemaTotalDigitsFacet" />, <see cref="T:System.Xml.Schema.XmlSchemaWhiteSpaceFacet" />.</returns>
    </member>
    <member name="T:System.Xml.Schema.XmlSchemaSimpleType">
      <summary vsli:raw="Represents the &lt;see langword=&quot;simpleType&quot; /&gt; element for simple content from XML Schema as specified by the World Wide Web Consortium (W3C). This class defines a simple type. Simple types can specify information and constraints for the value of attributes or elements with text-only content.">Représente l’élément <see langword="simpleType" /> de contenu simple issu d’un schéma XML comme spécifié par le W3C (World Wide Web Consortium). Cette classe définit un type simple. Les types simples peuvent spécifier des informations et des contraintes pour la valeur d'attributs ou d'éléments dont le contenu est de type texte uniquement.</summary>
    </member>
    <member name="M:System.Xml.Schema.XmlSchemaSimpleType.#ctor">
      <summary vsli:raw="Initializes a new instance of the &lt;see cref=&quot;T:System.Xml.Schema.XmlSchemaSimpleType&quot; /&gt; class.">Initialise une nouvelle instance de la classe <see cref="T:System.Xml.Schema.XmlSchemaSimpleType" />.</summary>
    </member>
    <member name="P:System.Xml.Schema.XmlSchemaSimpleType.Content">
      <summary vsli:raw="Gets or sets one of &lt;see cref=&quot;T:System.Xml.Schema.XmlSchemaSimpleTypeUnion&quot; /&gt;, &lt;see cref=&quot;T:System.Xml.Schema.XmlSchemaSimpleTypeList&quot; /&gt;, or &lt;see cref=&quot;T:System.Xml.Schema.XmlSchemaSimpleTypeRestriction&quot; /&gt;.">Obtient ou définit <see cref="T:System.Xml.Schema.XmlSchemaSimpleTypeUnion" />, <see cref="T:System.Xml.Schema.XmlSchemaSimpleTypeList" /> ou <see cref="T:System.Xml.Schema.XmlSchemaSimpleTypeRestriction" />.</summary>
      <returns vsli:raw="One of &lt;see langword=&quot;XmlSchemaSimpleTypeUnion&quot; /&gt;, &lt;see langword=&quot;XmlSchemaSimpleTypeList&quot; /&gt;, or &lt;see langword=&quot;XmlSchemaSimpleTypeRestriction&quot; /&gt;.">Une des classes <see langword="XmlSchemaSimpleTypeUnion" />, <see langword="XmlSchemaSimpleTypeList" /> ou <see langword="XmlSchemaSimpleTypeRestriction" />.</returns>
    </member>
    <member name="T:System.Xml.Schema.XmlSchemaSimpleTypeContent">
      <summary vsli:raw="Abstract class for simple type content classes.">Classe abstraite pour classes à contenu de type simple.</summary>
    </member>
    <member name="M:System.Xml.Schema.XmlSchemaSimpleTypeContent.#ctor">
      <summary vsli:raw="Initializes a new instance of the &lt;see cref=&quot;T:System.Xml.Schema.XmlSchemaSimpleTypeContent&quot; /&gt; class.">Initialise une nouvelle instance de la classe <see cref="T:System.Xml.Schema.XmlSchemaSimpleTypeContent" />.</summary>
    </member>
    <member name="T:System.Xml.Schema.XmlSchemaSimpleTypeList">
      <summary vsli:raw="Represents the &lt;see langword=&quot;list&quot; /&gt; element from XML Schema as specified by the World Wide Web Consortium (W3C). This class can be used to define a &lt;see langword=&quot;simpleType&quot; /&gt; element as a list of values of a specified data type.">Représente l'élément <see langword="list" /> issu d'un schéma XML comme spécifié par le W3C (World Wide Web Consortium). Cette classe peut être utilisée pour définir un élément <see langword="simpleType" /> comme une liste de valeurs d'un type de données spécifié.</summary>
    </member>
    <member name="M:System.Xml.Schema.XmlSchemaSimpleTypeList.#ctor">
      <summary vsli:raw="Initializes a new instance of the &lt;see cref=&quot;T:System.Xml.Schema.XmlSchemaSimpleTypeList&quot; /&gt; class.">Initialise une nouvelle instance de la classe <see cref="T:System.Xml.Schema.XmlSchemaSimpleTypeList" />.</summary>
    </member>
    <member name="P:System.Xml.Schema.XmlSchemaSimpleTypeList.BaseItemType">
      <summary vsli:raw="Gets or sets the &lt;see cref=&quot;T:System.Xml.Schema.XmlSchemaSimpleType&quot; /&gt; representing the type of the &lt;see langword=&quot;simpleType&quot; /&gt; element based on the &lt;see cref=&quot;P:System.Xml.Schema.XmlSchemaSimpleTypeList.ItemType&quot; /&gt; and &lt;see cref=&quot;P:System.Xml.Schema.XmlSchemaSimpleTypeList.ItemTypeName&quot; /&gt; values of the simple type.">Obtient ou définit le <see cref="T:System.Xml.Schema.XmlSchemaSimpleType" /> qui représente le type de l'élément <see langword="simpleType" /> basé sur les valeurs <see cref="P:System.Xml.Schema.XmlSchemaSimpleTypeList.ItemType" /> et <see cref="P:System.Xml.Schema.XmlSchemaSimpleTypeList.ItemTypeName" /> du type simple.</summary>
      <returns vsli:raw="The &lt;see cref=&quot;T:System.Xml.Schema.XmlSchemaSimpleType&quot; /&gt; representing the type of the &lt;see langword=&quot;simpleType&quot; /&gt; element.">
        <see cref="T:System.Xml.Schema.XmlSchemaSimpleType" /> représentant le type de l'élément <see langword="simpleType" />.</returns>
    </member>
    <member name="P:System.Xml.Schema.XmlSchemaSimpleTypeList.ItemType">
      <summary vsli:raw="Gets or sets the &lt;see langword=&quot;simpleType&quot; /&gt; element that is derived from the type specified by the base value.">Obtient ou définit l'élément <see langword="simpleType" /> dérivé du type spécifié par la valeur de base.</summary>
      <returns vsli:raw="The item type for the simple type element.">Type d'élément pour l'élément du type simple.</returns>
    </member>
    <member name="P:System.Xml.Schema.XmlSchemaSimpleTypeList.ItemTypeName">
      <summary vsli:raw="Gets or sets the name of a built-in data type or &lt;see langword=&quot;simpleType&quot; /&gt; element defined in this schema (or another schema indicated by the specified namespace).">Obtient ou définit le nom du type de donnée intégré ou de l'élément <see langword="simpleType" /> défini dans ce schéma (ou dans un autre schéma indiqué par l'espace de noms spécifié).</summary>
      <returns vsli:raw="The type name of the simple type list.">Nom du type de la liste de types simples.</returns>
    </member>
    <member name="T:System.Xml.Schema.XmlSchemaSimpleTypeRestriction">
      <summary vsli:raw="Represents the &lt;see langword=&quot;restriction&quot; /&gt; element for simple types from XML Schema as specified by the World Wide Web Consortium (W3C). This class can be used restricting &lt;see langword=&quot;simpleType&quot; /&gt; element.">Représente l’élément <see langword="restriction" /> de types simples issu d’un schéma XML comme spécifié par le W3C (World Wide Web Consortium). Cette classe peut être utilisée pour restreindre l'élément <see langword="simpleType" />.</summary>
    </member>
    <member name="M:System.Xml.Schema.XmlSchemaSimpleTypeRestriction.#ctor">
      <summary vsli:raw="Initializes a new instance of the &lt;see cref=&quot;T:System.Xml.Schema.XmlSchemaSimpleTypeRestriction&quot; /&gt; class.">Initialise une nouvelle instance de la classe <see cref="T:System.Xml.Schema.XmlSchemaSimpleTypeRestriction" />.</summary>
    </member>
    <member name="P:System.Xml.Schema.XmlSchemaSimpleTypeRestriction.BaseType">
      <summary vsli:raw="Gets or sets information on the base type.">Obtient ou définit des informations sur le type de base.</summary>
      <returns vsli:raw="The base type for the &lt;see langword=&quot;simpleType&quot; /&gt; element.">Type de base de l'élément <see langword="simpleType" />.</returns>
    </member>
    <member name="P:System.Xml.Schema.XmlSchemaSimpleTypeRestriction.BaseTypeName">
      <summary vsli:raw="Gets or sets the name of the qualified base type.">Obtient ou définit le nom du type de base qualifié.</summary>
      <returns vsli:raw="The qualified name of the simple type restriction base type.">Nom qualifié du type de base de la restriction de type simple.</returns>
    </member>
    <member name="P:System.Xml.Schema.XmlSchemaSimpleTypeRestriction.Facets">
      <summary vsli:raw="Gets or sets an Xml Schema facet.">Obtient ou définit une facette de schéma XML.</summary>
      <returns vsli:raw="One of the following facet classes:  &#xA;  &#xA; &lt;see cref=&quot;T:System.Xml.Schema.XmlSchemaLengthFacet&quot; /&gt;, &lt;see cref=&quot;T:System.Xml.Schema.XmlSchemaMinLengthFacet&quot; /&gt;, &lt;see cref=&quot;T:System.Xml.Schema.XmlSchemaMaxLengthFacet&quot; /&gt;, &lt;see cref=&quot;T:System.Xml.Schema.XmlSchemaPatternFacet&quot; /&gt;, &lt;see cref=&quot;T:System.Xml.Schema.XmlSchemaEnumerationFacet&quot; /&gt;, &lt;see cref=&quot;T:System.Xml.Schema.XmlSchemaMaxInclusiveFacet&quot; /&gt;, &lt;see cref=&quot;T:System.Xml.Schema.XmlSchemaMaxExclusiveFacet&quot; /&gt;, &lt;see cref=&quot;T:System.Xml.Schema.XmlSchemaMinInclusiveFacet&quot; /&gt;, &lt;see cref=&quot;T:System.Xml.Schema.XmlSchemaMinExclusiveFacet&quot; /&gt;, &lt;see cref=&quot;T:System.Xml.Schema.XmlSchemaFractionDigitsFacet&quot; /&gt;, &lt;see cref=&quot;T:System.Xml.Schema.XmlSchemaTotalDigitsFacet&quot; /&gt;, &lt;see cref=&quot;T:System.Xml.Schema.XmlSchemaWhiteSpaceFacet&quot; /&gt;.">Une des classes de facettes suivantes : 
 <see cref="T:System.Xml.Schema.XmlSchemaLengthFacet" />, <see cref="T:System.Xml.Schema.XmlSchemaMinLengthFacet" />, <see cref="T:System.Xml.Schema.XmlSchemaMaxLengthFacet" />, <see cref="T:System.Xml.Schema.XmlSchemaPatternFacet" />, <see cref="T:System.Xml.Schema.XmlSchemaEnumerationFacet" />, <see cref="T:System.Xml.Schema.XmlSchemaMaxInclusiveFacet" />, <see cref="T:System.Xml.Schema.XmlSchemaMaxExclusiveFacet" />, <see cref="T:System.Xml.Schema.XmlSchemaMinInclusiveFacet" />, <see cref="T:System.Xml.Schema.XmlSchemaMinExclusiveFacet" />, <see cref="T:System.Xml.Schema.XmlSchemaFractionDigitsFacet" />, <see cref="T:System.Xml.Schema.XmlSchemaTotalDigitsFacet" />, <see cref="T:System.Xml.Schema.XmlSchemaWhiteSpaceFacet" />.</returns>
    </member>
    <member name="T:System.Xml.Schema.XmlSchemaSimpleTypeUnion">
      <summary vsli:raw="Represents the &lt;see langword=&quot;union&quot; /&gt; element for simple types from XML Schema as specified by the World Wide Web Consortium (W3C). A &lt;see langword=&quot;union&quot; /&gt; datatype can be used to specify the content of a &lt;see langword=&quot;simpleType&quot; /&gt;. The value of the &lt;see langword=&quot;simpleType&quot; /&gt; element must be any one of a set of alternative datatypes specified in the union. Union types are always derived types and must comprise at least two alternative datatypes.">Représente l’élément <see langword="union" /> de types simples issu d’un schéma XML comme spécifié par le W3C (World Wide Web Consortium). Un type de données <see langword="union" /> peut être utilisé pour spécifier le contenu d'un <see langword="simpleType" />. La valeur de l'élément <see langword="simpleType" /> doit faire partie d'un jeu de types de données de remplacement spécifié dans l'union. Les types d'union sont toujours des types dérivés et doivent comprendre au moins deux types de données de remplacement.</summary>
    </member>
    <member name="M:System.Xml.Schema.XmlSchemaSimpleTypeUnion.#ctor">
      <summary vsli:raw="Initializes a new instance of the &lt;see cref=&quot;T:System.Xml.Schema.XmlSchemaSimpleTypeUnion&quot; /&gt; class.">Initialise une nouvelle instance de la classe <see cref="T:System.Xml.Schema.XmlSchemaSimpleTypeUnion" />.</summary>
    </member>
    <member name="P:System.Xml.Schema.XmlSchemaSimpleTypeUnion.BaseMemberTypes">
      <summary vsli:raw="Gets an array of &lt;see cref=&quot;T:System.Xml.Schema.XmlSchemaSimpleType&quot; /&gt; objects representing the type of the &lt;see langword=&quot;simpleType&quot; /&gt; element based on the &lt;see cref=&quot;P:System.Xml.Schema.XmlSchemaSimpleTypeUnion.BaseTypes&quot; /&gt; and &lt;see cref=&quot;P:System.Xml.Schema.XmlSchemaSimpleTypeUnion.MemberTypes&quot; /&gt; values of the simple type.">Obtient un tableau d'objets <see cref="T:System.Xml.Schema.XmlSchemaSimpleType" /> qui représentent le type de l'élément <see langword="simpleType" /> basé sur les valeurs <see cref="P:System.Xml.Schema.XmlSchemaSimpleTypeUnion.BaseTypes" /> et <see cref="P:System.Xml.Schema.XmlSchemaSimpleTypeUnion.MemberTypes" /> du type simple.</summary>
      <returns vsli:raw="An array of &lt;see cref=&quot;T:System.Xml.Schema.XmlSchemaSimpleType&quot; /&gt; objects representing the type of the &lt;see langword=&quot;simpleType&quot; /&gt; element.">Tableau d'objets <see cref="T:System.Xml.Schema.XmlSchemaSimpleType" /> représentant le type de l'élément <see langword="simpleType" />.</returns>
    </member>
    <member name="P:System.Xml.Schema.XmlSchemaSimpleTypeUnion.BaseTypes">
      <summary vsli:raw="Gets the collection of base types.">Obtient la collection des types de base.</summary>
      <returns vsli:raw="The collection of simple type base values.">Collection des valeurs de base du type simple.</returns>
    </member>
    <member name="P:System.Xml.Schema.XmlSchemaSimpleTypeUnion.MemberTypes">
      <summary vsli:raw="Gets or sets the array of qualified member names of built-in data types or &lt;see langword=&quot;simpleType&quot; /&gt; elements defined in this schema (or another schema indicated by the specified namespace).">Obtient ou définit le tableau des noms de membres qualifiés des types de données intégrés ou des éléments <see langword="simpleType" /> définis dans ce schéma (ou dans un autre schéma indiqué par l'espace de noms spécifié).</summary>
      <returns vsli:raw="An array that consists of a list of members of built-in data types or simple types.">Tableau qui comporte une liste des membres des types de données intégrés ou des types simples.</returns>
    </member>
    <member name="T:System.Xml.Schema.XmlSchemaTotalDigitsFacet">
      <summary vsli:raw="Represents the &lt;see langword=&quot;totalDigits&quot; /&gt; facet from XML Schema as specified by the World Wide Web Consortium (W3C). This class can be used to specify a restriction on the number of digits that can be entered for the value of a &lt;see langword=&quot;simpleType&quot; /&gt; element. That value of &lt;see langword=&quot;totalDigits&quot; /&gt; must be a positive integer.">Représente la facette <see langword="totalDigits" /> issue d’un schéma XML comme spécifié par le W3C (World Wide Web Consortium). Cette classe peut être utilisée pour spécifier une restriction sur le nombre de chiffres qui peuvent être entrés pour la valeur d'un élément <see langword="simpleType" />. Cette valeur de <see langword="totalDigits" /> doit être un entier positif.</summary>
    </member>
    <member name="M:System.Xml.Schema.XmlSchemaTotalDigitsFacet.#ctor">
      <summary vsli:raw="Initializes a new instance of the &lt;see cref=&quot;T:System.Xml.Schema.XmlSchemaTotalDigitsFacet&quot; /&gt; class.">Initialise une nouvelle instance de la classe <see cref="T:System.Xml.Schema.XmlSchemaTotalDigitsFacet" />.</summary>
    </member>
    <member name="T:System.Xml.Schema.XmlSchemaType">
      <summary vsli:raw="The base class for all simple types and complex types.">La classe de base de tous les types simples et complexes.</summary>
    </member>
    <member name="M:System.Xml.Schema.XmlSchemaType.#ctor">
      <summary vsli:raw="Initializes a new instance of the &lt;see cref=&quot;T:System.Xml.Schema.XmlSchemaType&quot; /&gt; class.">Initialise une nouvelle instance de la classe <see cref="T:System.Xml.Schema.XmlSchemaType" />.</summary>
    </member>
    <member name="M:System.Xml.Schema.XmlSchemaType.GetBuiltInComplexType(System.Xml.Schema.XmlTypeCode)">
      <summary vsli:raw="Returns an &lt;see cref=&quot;T:System.Xml.Schema.XmlSchemaComplexType&quot; /&gt; that represents the built-in complex type of the complex type specified.">Retourne un <see cref="T:System.Xml.Schema.XmlSchemaComplexType" /> qui représente le type complexe intégré du type complexe spécifié.</summary>
      <param name="typeCode" vsli:raw="One of the &lt;see cref=&quot;T:System.Xml.Schema.XmlTypeCode&quot; /&gt; values representing the complex type.">L'une des valeurs <see cref="T:System.Xml.Schema.XmlTypeCode" /> représentant le type complexe.</param>
      <returns vsli:raw="The &lt;see cref=&quot;T:System.Xml.Schema.XmlSchemaComplexType&quot; /&gt; that represents the built-in complex type.">
        <see cref="T:System.Xml.Schema.XmlSchemaComplexType" /> qui représente le type complexe intégré.</returns>
    </member>
    <member name="M:System.Xml.Schema.XmlSchemaType.GetBuiltInComplexType(System.Xml.XmlQualifiedName)">
      <summary vsli:raw="Returns an &lt;see cref=&quot;T:System.Xml.Schema.XmlSchemaComplexType&quot; /&gt; that represents the built-in complex type of the complex type specified by qualified name.">Retourne un <see cref="T:System.Xml.Schema.XmlSchemaComplexType" /> qui représente le type complexe intégré du type complexe spécifié par le nom qualifié.</summary>
      <param name="qualifiedName" vsli:raw="The &lt;see cref=&quot;T:System.Xml.XmlQualifiedName&quot; /&gt; of the complex type.">
        <see cref="T:System.Xml.XmlQualifiedName" /> du type complexe.</param>
      <exception cref="T:System.ArgumentNullException" vsli:raw="The &lt;see cref=&quot;T:System.Xml.XmlQualifiedName&quot; /&gt; parameter is &lt;see langword=&quot;null&quot; /&gt;.">Le paramètre <see cref="T:System.Xml.XmlQualifiedName" /> a la valeur <see langword="null" />.</exception>
      <returns vsli:raw="The &lt;see cref=&quot;T:System.Xml.Schema.XmlSchemaComplexType&quot; /&gt; that represents the built-in complex type.">
        <see cref="T:System.Xml.Schema.XmlSchemaComplexType" /> qui représente le type complexe intégré.</returns>
    </member>
    <member name="M:System.Xml.Schema.XmlSchemaType.GetBuiltInSimpleType(System.Xml.Schema.XmlTypeCode)">
      <summary vsli:raw="Returns an &lt;see cref=&quot;T:System.Xml.Schema.XmlSchemaSimpleType&quot; /&gt; that represents the built-in simple type of the specified simple type.">Retourne un <see cref="T:System.Xml.Schema.XmlSchemaSimpleType" /> qui représente le type simple intégré du type simple spécifié.</summary>
      <param name="typeCode" vsli:raw="One of the &lt;see cref=&quot;T:System.Xml.Schema.XmlTypeCode&quot; /&gt; values representing the simple type.">L'une des valeurs <see cref="T:System.Xml.Schema.XmlTypeCode" /> représentant le type simple.</param>
      <returns vsli:raw="The &lt;see cref=&quot;T:System.Xml.Schema.XmlSchemaSimpleType&quot; /&gt; that represents the built-in simple type.">
        <see cref="T:System.Xml.Schema.XmlSchemaSimpleType" /> qui représente le type simple intégré.</returns>
    </member>
    <member name="M:System.Xml.Schema.XmlSchemaType.GetBuiltInSimpleType(System.Xml.XmlQualifiedName)">
      <summary vsli:raw="Returns an &lt;see cref=&quot;T:System.Xml.Schema.XmlSchemaSimpleType&quot; /&gt; that represents the built-in simple type of the simple type that is specified by the qualified name.">Retourne un <see cref="T:System.Xml.Schema.XmlSchemaSimpleType" /> qui représente le type simple intégré du type simple spécifié par le nom qualifié.</summary>
      <param name="qualifiedName" vsli:raw="The &lt;see cref=&quot;T:System.Xml.XmlQualifiedName&quot; /&gt; of the simple type.">
        <see cref="T:System.Xml.XmlQualifiedName" /> du type simple.</param>
      <exception cref="T:System.ArgumentNullException" vsli:raw="The &lt;see cref=&quot;T:System.Xml.XmlQualifiedName&quot; /&gt; parameter is &lt;see langword=&quot;null&quot; /&gt;.">Le paramètre <see cref="T:System.Xml.XmlQualifiedName" /> a la valeur <see langword="null" />.</exception>
      <returns vsli:raw="The &lt;see cref=&quot;T:System.Xml.Schema.XmlSchemaSimpleType&quot; /&gt; that represents the built-in simple type.">
        <see cref="T:System.Xml.Schema.XmlSchemaSimpleType" /> qui représente le type simple intégré.</returns>
    </member>
    <member name="M:System.Xml.Schema.XmlSchemaType.IsDerivedFrom(System.Xml.Schema.XmlSchemaType,System.Xml.Schema.XmlSchemaType,System.Xml.Schema.XmlSchemaDerivationMethod)">
      <summary vsli:raw="Returns a value indicating if the derived schema type specified is derived from the base schema type specified.">Retourne une valeur indiquant si le type de schéma dérivé spécifié est dérivé du type de schéma de base spécifié.</summary>
      <param name="derivedType" vsli:raw="The derived &lt;see cref=&quot;T:System.Xml.Schema.XmlSchemaType&quot; /&gt; to test.">
        <see cref="T:System.Xml.Schema.XmlSchemaType" /> dérivé à tester.</param>
      <param name="baseType" vsli:raw="The base &lt;see cref=&quot;T:System.Xml.Schema.XmlSchemaType&quot; /&gt; to test the derived &lt;see cref=&quot;T:System.Xml.Schema.XmlSchemaType&quot; /&gt; against.">
        <see cref="T:System.Xml.Schema.XmlSchemaType" /> de base par rapport auquel tester le <see cref="T:System.Xml.Schema.XmlSchemaType" /> dérivé.</param>
      <param name="except" vsli:raw="One of the &lt;see cref=&quot;T:System.Xml.Schema.XmlSchemaDerivationMethod&quot; /&gt; values representing a type derivation method to exclude from testing.">Une des valeurs <see cref="T:System.Xml.Schema.XmlSchemaDerivationMethod" /> représentant une méthode de dérivation du type à exclure du test.</param>
      <returns vsli:raw="&lt;see langword=&quot;true&quot; /&gt; if the derived type is derived from the base type; otherwise, &lt;see langword=&quot;false&quot; /&gt;.">
        <see langword="true" /> si le type dérivé est dérivé du type de base ; sinon, <see langword="false" />.</returns>
    </member>
    <member name="P:System.Xml.Schema.XmlSchemaType.BaseSchemaType">
      <summary vsli:raw="Gets the post-compilation object type or the built-in XML Schema Definition Language (XSD) data type, simpleType element, or complexType element. This is a post-schema-compilation infoset property.">Obtient le type d'objet de post-compilation ou le type de données en langage XSD (XML Schema Definition) intégré, l'élément simpleType ou l'élément complexType. Il s'agit d'une propriété de jeu d'informations postérieure à la compilation du schéma.</summary>
      <returns vsli:raw="The built-in XSD data type, simpleType element, or complexType element.">Type de données XSD intégré, d'élément simpleType ou d'élément complexType.</returns>
    </member>
    <member name="P:System.Xml.Schema.XmlSchemaType.BaseXmlSchemaType">
      <summary vsli:raw="Gets the post-compilation value for the base type of this schema type.">Obtient la valeur de post-compilation pour le type de base de ce type de schéma.</summary>
      <returns vsli:raw="An &lt;see cref=&quot;T:System.Xml.Schema.XmlSchemaType&quot; /&gt; object representing the base type of this schema type.">Objet <see cref="T:System.Xml.Schema.XmlSchemaType" /> représentant le type de base de ce type de schéma.</returns>
    </member>
    <member name="P:System.Xml.Schema.XmlSchemaType.Datatype">
      <summary vsli:raw="Gets the post-compilation value for the data type of the complex type.">Obtient la valeur de post-compilation pour le type de données du type complexe.</summary>
      <returns vsli:raw="The &lt;see cref=&quot;T:System.Xml.Schema.XmlSchemaDatatype&quot; /&gt; post-schema-compilation value.">Valeur postérieure à la compilation du schéma <see cref="T:System.Xml.Schema.XmlSchemaDatatype" />.</returns>
    </member>
    <member name="P:System.Xml.Schema.XmlSchemaType.DerivedBy">
      <summary vsli:raw="Gets the post-compilation information on how this element was derived from its base type.">Obtient les informations de post-compilation sur la dérivation de cet élément à partir de son type de base.</summary>
      <returns vsli:raw="One of the valid &lt;see cref=&quot;T:System.Xml.Schema.XmlSchemaDerivationMethod&quot; /&gt; values.">Une des valeurs <see cref="T:System.Xml.Schema.XmlSchemaDerivationMethod" /> valides.</returns>
    </member>
    <member name="P:System.Xml.Schema.XmlSchemaType.Final">
      <summary vsli:raw="Gets or sets the final attribute of the type derivation that indicates if further derivations are allowed.">Obtient ou définit le dernier attribut de la dérivation de type qui indique si des dérivations supplémentaires sont autorisées.</summary>
      <returns vsli:raw="One of the valid &lt;see cref=&quot;T:System.Xml.Schema.XmlSchemaDerivationMethod&quot; /&gt; values. The default is &lt;see cref=&quot;F:System.Xml.Schema.XmlSchemaDerivationMethod.None&quot; /&gt;.">Une des valeurs <see cref="T:System.Xml.Schema.XmlSchemaDerivationMethod" /> valides. La valeur par défaut est <see cref="F:System.Xml.Schema.XmlSchemaDerivationMethod.None" />.</returns>
    </member>
    <member name="P:System.Xml.Schema.XmlSchemaType.FinalResolved">
      <summary vsli:raw="Gets the post-compilation value of the &lt;see cref=&quot;P:System.Xml.Schema.XmlSchemaType.Final&quot; /&gt; property.">Obtient la valeur de post-compilation de la propriété <see cref="P:System.Xml.Schema.XmlSchemaType.Final" />.</summary>
      <returns vsli:raw="The post-compilation value of the &lt;see cref=&quot;P:System.Xml.Schema.XmlSchemaType.Final&quot; /&gt; property. The default is the &lt;see langword=&quot;finalDefault&quot; /&gt; attribute value of the &lt;see langword=&quot;schema&quot; /&gt; element.">Valeur de post-compilation de la propriété <see cref="P:System.Xml.Schema.XmlSchemaType.Final" />. La valeur par défaut est la valeur de l'attribut <see langword="finalDefault" /> sur l'élément <see langword="schema" />.</returns>
    </member>
    <member name="P:System.Xml.Schema.XmlSchemaType.IsMixed">
      <summary vsli:raw="Gets or sets a value indicating if this type has a mixed content model. This property is only valid in a complex type.">Obtient ou définit une valeur indiquant si le type possède un modèle de contenu mixte. Cette propriété n'est valide que pour un type complexe.</summary>
      <returns vsli:raw="&lt;see langword=&quot;true&quot; /&gt; if the type has a mixed content model; otherwise, &lt;see langword=&quot;false&quot; /&gt;. The default is &lt;see langword=&quot;false&quot; /&gt;.">
        <see langword="true" /> si le type possède un modèle de contenu mixte ; sinon, <see langword="false" />. La valeur par défaut est <see langword="false" />.</returns>
    </member>
    <member name="P:System.Xml.Schema.XmlSchemaType.Name">
      <summary vsli:raw="Gets or sets the name of the type.">Obtient ou définit le nom du type.</summary>
      <returns vsli:raw="The name of the type.">Nom du type.</returns>
    </member>
    <member name="P:System.Xml.Schema.XmlSchemaType.QualifiedName">
      <summary vsli:raw="Gets the qualified name for the type built from the &lt;see langword=&quot;Name&quot; /&gt; attribute of this type. This is a post-schema-compilation property.">Obtient le nom qualifié du type construit à partir de l'attribut <see langword="Name" /> de ce type. Il s'agit d'une propriété postérieure à la compilation du schéma.</summary>
      <returns vsli:raw="The &lt;see cref=&quot;T:System.Xml.XmlQualifiedName&quot; /&gt; for the type built from the &lt;see langword=&quot;Name&quot; /&gt; attribute of this type.">
        <see cref="T:System.Xml.XmlQualifiedName" /> du type construit à partir de l'attribut <see langword="Name" /> de ce type.</returns>
    </member>
    <member name="P:System.Xml.Schema.XmlSchemaType.TypeCode">
      <summary vsli:raw="Gets the &lt;see cref=&quot;T:System.Xml.Schema.XmlTypeCode&quot; /&gt; of the type.">Obtient le <see cref="T:System.Xml.Schema.XmlTypeCode" /> du type.</summary>
      <returns vsli:raw="One of the &lt;see cref=&quot;T:System.Xml.Schema.XmlTypeCode&quot; /&gt; values.">Une des valeurs de l'objet <see cref="T:System.Xml.Schema.XmlTypeCode" />.</returns>
    </member>
    <member name="T:System.Xml.Schema.XmlSchemaUnique">
      <summary vsli:raw="Represents the &lt;see langword=&quot;unique&quot; /&gt; element from XML Schema as specified by the World Wide Web Consortium (W3C). This class can be used to identify a unique constraint among a set of elements.">Représente l'élément <see langword="unique" /> issu d'un schéma XML comme spécifié par le W3C (World Wide Web Consortium). Cette classe peut être utilisée pour identifier une contrainte unique dans un ensemble d'éléments.</summary>
    </member>
    <member name="M:System.Xml.Schema.XmlSchemaUnique.#ctor">
      <summary vsli:raw="Initializes a new instance of the &lt;see cref=&quot;T:System.Xml.Schema.XmlSchemaUnique&quot; /&gt; class.">Initialise une nouvelle instance de la classe <see cref="T:System.Xml.Schema.XmlSchemaUnique" />.</summary>
    </member>
    <member name="T:System.Xml.Schema.XmlSchemaUse">
      <summary vsli:raw="Indicator of how the attribute is used.">Indicateur du mode d'utilisation de l'attribut.</summary>
    </member>
    <member name="F:System.Xml.Schema.XmlSchemaUse.None">
      <summary vsli:raw="Attribute use not specified.">L'utilisation de l'attribut n'est pas spécifiée.</summary>
    </member>
    <member name="F:System.Xml.Schema.XmlSchemaUse.Optional">
      <summary vsli:raw="Attribute is optional.">L'attribut est facultatif.</summary>
    </member>
    <member name="F:System.Xml.Schema.XmlSchemaUse.Prohibited">
      <summary vsli:raw="Attribute cannot be used.">L'attribut ne peut pas être utilisé.</summary>
    </member>
    <member name="F:System.Xml.Schema.XmlSchemaUse.Required">
      <summary vsli:raw="Attribute must appear once.">L'attribut doit apparaître une fois.</summary>
    </member>
    <member name="T:System.Xml.Schema.XmlSchemaValidationException">
      <summary vsli:raw="Represents the exception thrown when XML Schema Definition Language (XSD) schema validation errors and warnings are encountered in an XML document being validated.">Représente l'exception levée lorsque des erreurs et des avertissements de validation du schéma en langage XSD (XML Schema Definition) sont trouvés dans un document XML en cours de validation.</summary>
    </member>
    <member name="M:System.Xml.Schema.XmlSchemaValidationException.#ctor">
      <summary vsli:raw="Initializes a new instance of the &lt;see cref=&quot;T:System.Xml.Schema.XmlSchemaValidationException&quot; /&gt; class.">Initialise une nouvelle instance de la classe <see cref="T:System.Xml.Schema.XmlSchemaValidationException" />.</summary>
    </member>
    <member name="M:System.Xml.Schema.XmlSchemaValidationException.#ctor(System.Runtime.Serialization.SerializationInfo,System.Runtime.Serialization.StreamingContext)">
      <summary vsli:raw="Initializes a new instance of the &lt;see cref=&quot;T:System.Xml.Schema.XmlSchemaValidationException&quot; /&gt; class with the &lt;see cref=&quot;T:System.Runtime.Serialization.SerializationInfo&quot; /&gt; and &lt;see cref=&quot;T:System.Runtime.Serialization.StreamingContext&quot; /&gt; objects specified.">Initialise une nouvelle instance de la classe <see cref="T:System.Xml.Schema.XmlSchemaValidationException" /> avec les objets <see cref="T:System.Runtime.Serialization.SerializationInfo" /> et <see cref="T:System.Runtime.Serialization.StreamingContext" /> spécifiés.</summary>
      <param name="info" vsli:raw="A &lt;see cref=&quot;T:System.Runtime.Serialization.SerializationInfo&quot; /&gt; object.">Objet <see cref="T:System.Runtime.Serialization.SerializationInfo" />.</param>
      <param name="context" vsli:raw="A &lt;see cref=&quot;T:System.Runtime.Serialization.StreamingContext&quot; /&gt; object.">Objet <see cref="T:System.Runtime.Serialization.StreamingContext" />.</param>
    </member>
    <member name="M:System.Xml.Schema.XmlSchemaValidationException.#ctor(System.String)">
      <summary vsli:raw="Initializes a new instance of the &lt;see cref=&quot;T:System.Xml.Schema.XmlSchemaValidationException&quot; /&gt; class with the exception message specified.">Initialise une nouvelle instance de la classe <see cref="T:System.Xml.Schema.XmlSchemaValidationException" /> avec le message d'exception spécifié.</summary>
      <param name="message" vsli:raw="A &lt;see langword=&quot;string&quot; /&gt; description of the error condition.">Description <see langword="string" /> de la condition d'erreur.</param>
    </member>
    <member name="M:System.Xml.Schema.XmlSchemaValidationException.#ctor(System.String,System.Exception)">
      <summary vsli:raw="Initializes a new instance of the &lt;see cref=&quot;T:System.Xml.Schema.XmlSchemaValidationException&quot; /&gt; class with the exception message and original &lt;see cref=&quot;T:System.Exception&quot; /&gt; object that caused this exception specified.">Initialise une nouvelle instance de la classe <see cref="T:System.Xml.Schema.XmlSchemaValidationException" /> avec le message d'exception et l'objet <see cref="T:System.Exception" /> d'origine qui a entraîné cette exception spécifiée.</summary>
      <param name="message" vsli:raw="A &lt;see langword=&quot;string&quot; /&gt; description of the error condition.">Description <see langword="string" /> de la condition d'erreur.</param>
      <param name="innerException" vsli:raw="The original &lt;see cref=&quot;T:System.Exception&quot; /&gt; object that caused this exception.">L'objet <see cref="T:System.Exception" /> d'origine qui a entraîné cette exception.</param>
    </member>
    <member name="M:System.Xml.Schema.XmlSchemaValidationException.#ctor(System.String,System.Exception,System.Int32,System.Int32)">
      <summary vsli:raw="Initializes a new instance of the &lt;see cref=&quot;T:System.Xml.Schema.XmlSchemaValidationException&quot; /&gt; class with the exception message specified, and the original &lt;see cref=&quot;T:System.Exception&quot; /&gt; object, line number, and line position of the XML that cause this exception specified.">Initialise une nouvelle instance de la classe <see cref="T:System.Xml.Schema.XmlSchemaValidationException" /> avec le message d'exception spécifié et l'objet <see cref="T:System.Exception" /> d'origine, le numéro de ligne et la position de ligne du XML qui entraîne cette exception spécifiée.</summary>
      <param name="message" vsli:raw="A &lt;see langword=&quot;string&quot; /&gt; description of the error condition.">Description <see langword="string" /> de la condition d'erreur.</param>
      <param name="innerException" vsli:raw="The original &lt;see cref=&quot;T:System.Exception&quot; /&gt; object that caused this exception.">L'objet <see cref="T:System.Exception" /> d'origine qui a entraîné cette exception.</param>
      <param name="lineNumber" vsli:raw="The line number of the XML that caused this exception.">Le numéro de ligne du XML qui a entraîné cette exception.</param>
      <param name="linePosition" vsli:raw="The line position of the XML that caused this exception.">La position de ligne du XML qui a entraîné cette exception.</param>
    </member>
    <member name="M:System.Xml.Schema.XmlSchemaValidationException.GetObjectData(System.Runtime.Serialization.SerializationInfo,System.Runtime.Serialization.StreamingContext)">
      <summary vsli:raw="Constructs a new &lt;see cref=&quot;T:System.Xml.Schema.XmlSchemaValidationException&quot; /&gt; object with the given &lt;see cref=&quot;T:System.Runtime.Serialization.SerializationInfo&quot; /&gt; and &lt;see cref=&quot;T:System.Runtime.Serialization.StreamingContext&quot; /&gt; information that contains all the properties of the &lt;see cref=&quot;T:System.Xml.Schema.XmlSchemaValidationException&quot; /&gt;.">Construit un nouvel objet <see cref="T:System.Xml.Schema.XmlSchemaValidationException" /> avec les informations données <see cref="T:System.Runtime.Serialization.SerializationInfo" /> et <see cref="T:System.Runtime.Serialization.StreamingContext" /> qui contiennent toutes les propriétés de <see cref="T:System.Xml.Schema.XmlSchemaValidationException" />.</summary>
      <param name="info" vsli:raw="&lt;see cref=&quot;T:System.Runtime.Serialization.SerializationInfo&quot; /&gt;">
        <see cref="T:System.Runtime.Serialization.SerializationInfo" />
      </param>
      <param name="context" vsli:raw="&lt;see cref=&quot;T:System.Runtime.Serialization.StreamingContext&quot; /&gt;">
        <see cref="T:System.Runtime.Serialization.StreamingContext" />
      </param>
    </member>
    <member name="M:System.Xml.Schema.XmlSchemaValidationException.SetSourceObject(System.Object)">
      <summary vsli:raw="Sets the XML node that causes the error.">Définit le nœud XML qui provoque l'erreur.</summary>
      <param name="sourceObject" vsli:raw="The source object.">Objet source.</param>
    </member>
    <member name="P:System.Xml.Schema.XmlSchemaValidationException.SourceObject">
      <summary vsli:raw="Gets the XML node that caused this &lt;see cref=&quot;T:System.Xml.Schema.XmlSchemaValidationException&quot; /&gt;.">Obtient le nœud XML qui a entraîné cette <see cref="T:System.Xml.Schema.XmlSchemaValidationException" />.</summary>
      <returns vsli:raw="The XML node that caused this &lt;see cref=&quot;T:System.Xml.Schema.XmlSchemaValidationException&quot; /&gt;.">Nœud XML qui a entraîné cette <see cref="T:System.Xml.Schema.XmlSchemaValidationException" />.</returns>
    </member>
    <member name="T:System.Xml.Schema.XmlSchemaValidationFlags">
      <summary vsli:raw="Specifies schema validation options used by the &lt;see cref=&quot;T:System.Xml.Schema.XmlSchemaValidator&quot; /&gt; and &lt;see cref=&quot;T:System.Xml.XmlReader&quot; /&gt; classes.">Spécifie les options de validation de schéma utilisées par les classes <see cref="T:System.Xml.Schema.XmlSchemaValidator" /> et <see cref="T:System.Xml.XmlReader" />.</summary>
    </member>
    <member name="F:System.Xml.Schema.XmlSchemaValidationFlags.AllowXmlAttributes">
      <summary vsli:raw="Allow xml:* attributes even if they are not defined in the schema. The attributes will be validated based on their data type.">Autorisez les attributs xml.* même s'ils ne sont pas définis dans le schéma. Les attributs sont validés selon leur type de données.</summary>
    </member>
    <member name="F:System.Xml.Schema.XmlSchemaValidationFlags.None">
      <summary vsli:raw="Do not process identity constraints, inline schemas, schema location hints, or report schema validation warnings.">Ne traite pas les contraintes d'identité, les schémas inline, les indications relatives à l'emplacement du schéma et ne signale pas les avertissements de validation du schéma.</summary>
    </member>
    <member name="F:System.Xml.Schema.XmlSchemaValidationFlags.ProcessIdentityConstraints">
      <summary vsli:raw="Process identity constraints (&lt;c&gt;xs:ID&lt;/c&gt;, &lt;c&gt;xs:IDREF&lt;/c&gt;, &lt;c&gt;xs:key&lt;/c&gt;, &lt;c&gt;xs:keyref&lt;/c&gt;, &lt;c&gt;xs:unique&lt;/c&gt;) encountered during validation.">Traite les contraintes d’identité (<c>xs:ID</c>, <c>xs:IDREF</c>, <c>xs:key</c>, <c>xs:keyref</c>, <c>xs:unique</c>) rencontrées pendant la validation.</summary>
    </member>
    <member name="F:System.Xml.Schema.XmlSchemaValidationFlags.ProcessInlineSchema">
      <summary vsli:raw="Process inline schemas encountered during validation.">Traite les schémas inline trouvés lors de la validation.</summary>
    </member>
    <member name="F:System.Xml.Schema.XmlSchemaValidationFlags.ProcessSchemaLocation">
      <summary vsli:raw="Process schema location hints (&lt;c&gt;xsi:schemaLocation&lt;/c&gt;, &lt;c&gt;xsi:noNamespaceSchemaLocation&lt;/c&gt;) encountered during validation.">Traite les indicateurs d’emplacement de schéma (<c>xsi:schemaLocation</c>, <c>xsi:noNamespaceSchemaLocation</c>) rencontrés pendant la validation.</summary>
    </member>
    <member name="F:System.Xml.Schema.XmlSchemaValidationFlags.ReportValidationWarnings">
      <summary vsli:raw="Report schema validation warnings encountered during validation.">Signale les avertissements de validation du schéma trouvés lors de la validation.</summary>
    </member>
    <member name="T:System.Xml.Schema.XmlSchemaValidator">
      <summary vsli:raw="Represents an XML Schema Definition Language (XSD) Schema validation engine. The &lt;see cref=&quot;T:System.Xml.Schema.XmlSchemaValidator&quot; /&gt; class cannot be inherited.">Représente un moteur de validation de schéma en langage XSD (XML Schema Definition). La classe <see cref="T:System.Xml.Schema.XmlSchemaValidator" /> ne peut pas être héritée.</summary>
    </member>
    <member name="E:System.Xml.Schema.XmlSchemaValidator.ValidationEventHandler">
      <summary vsli:raw="The &lt;see cref=&quot;T:System.Xml.Schema.ValidationEventHandler&quot; /&gt; that receives schema validation warnings and errors encountered during schema validation.">
        <see cref="T:System.Xml.Schema.ValidationEventHandler" /> qui reçoit des avertissements et des erreurs de validation du schéma trouvés lors de la validation du schéma.</summary>
    </member>
    <member name="M:System.Xml.Schema.XmlSchemaValidator.#ctor(System.Xml.XmlNameTable,System.Xml.Schema.XmlSchemaSet,System.Xml.IXmlNamespaceResolver,System.Xml.Schema.XmlSchemaValidationFlags)">
      <summary vsli:raw="Initializes a new instance of the &lt;see cref=&quot;T:System.Xml.Schema.XmlSchemaValidator&quot; /&gt; class.">Initialise une nouvelle instance de la classe <see cref="T:System.Xml.Schema.XmlSchemaValidator" />.</summary>
      <param name="nameTable" vsli:raw="An &lt;see cref=&quot;T:System.Xml.XmlNameTable&quot; /&gt; object containing element and attribute names as atomized strings.">Objet <see cref="T:System.Xml.XmlNameTable" /> contenant les noms d'éléments et d'attributs sous la forme de chaînes atomisées.</param>
      <param name="schemas" vsli:raw="An &lt;see cref=&quot;T:System.Xml.Schema.XmlSchemaSet&quot; /&gt; object containing the XML Schema Definition Language (XSD) schemas used for validation.">Objet <see cref="T:System.Xml.Schema.XmlSchemaSet" /> contenant les schémas XSD (XML Schema Definition) utilisés pour la validation.</param>
      <param name="namespaceResolver" vsli:raw="An &lt;see cref=&quot;T:System.Xml.IXmlNamespaceResolver&quot; /&gt; object used for resolving namespaces encountered during validation.">Objet <see cref="T:System.Xml.IXmlNamespaceResolver" /> permettant la résolution des espaces de noms trouvés pendant la validation.</param>
      <param name="validationFlags" vsli:raw="An &lt;see cref=&quot;T:System.Xml.Schema.XmlSchemaValidationFlags&quot; /&gt; value specifying schema validation options.">Valeur <see cref="T:System.Xml.Schema.XmlSchemaValidationFlags" /> spécifiant les options de validation du schéma.</param>
      <exception cref="T:System.ArgumentNullException" vsli:raw="One or more of the parameters specified are &lt;see langword=&quot;null&quot; /&gt;.">Un ou plusieurs des paramètres spécifiés sont <see langword="null" />.</exception>
      <exception cref="T:System.Xml.Schema.XmlSchemaException" vsli:raw="An error occurred while compiling schemas in the &lt;see cref=&quot;T:System.Xml.Schema.XmlSchemaSet&quot; /&gt; parameter.">Une erreur s'est produite lors de la compilation des schémas dans le paramètre <see cref="T:System.Xml.Schema.XmlSchemaSet" />.</exception>
    </member>
    <member name="M:System.Xml.Schema.XmlSchemaValidator.AddSchema(System.Xml.Schema.XmlSchema)">
      <summary vsli:raw="Adds an XML Schema Definition Language (XSD) schema to the set of schemas used for validation.">Ajoute un schéma en langage XSD (XML Schema Definition) à l’ensemble de schémas utilisé pour la validation.</summary>
      <param name="schema" vsli:raw="An &lt;see cref=&quot;T:System.Xml.Schema.XmlSchema&quot; /&gt; object to add to the set of schemas used for validation.">Objet <see cref="T:System.Xml.Schema.XmlSchema" /> à ajouter au jeu de schémas utilisé pour la validation.</param>
      <exception cref="T:System.ArgumentNullException" vsli:raw="The &lt;see cref=&quot;T:System.Xml.Schema.XmlSchema&quot; /&gt; parameter specified is &lt;see langword=&quot;null&quot; /&gt;.">Le paramètre <see cref="T:System.Xml.Schema.XmlSchema" /> spécifié est <see langword="null" />.</exception>
      <exception cref="T:System.Xml.Schema.XmlSchemaValidationException" vsli:raw="The target namespace of the &lt;see cref=&quot;T:System.Xml.Schema.XmlSchema&quot; /&gt; parameter matches that of any element or attribute already encountered by the &lt;see cref=&quot;T:System.Xml.Schema.XmlSchemaValidator&quot; /&gt; object.">L'espace de noms cible du paramètre <see cref="T:System.Xml.Schema.XmlSchema" /> correspond à celui de tout élément ou attribut déjà trouvé par l'objet <see cref="T:System.Xml.Schema.XmlSchemaValidator" />.</exception>
      <exception cref="T:System.Xml.Schema.XmlSchemaException" vsli:raw="The &lt;see cref=&quot;T:System.Xml.Schema.XmlSchema&quot; /&gt; parameter is invalid.">Le paramètre <see cref="T:System.Xml.Schema.XmlSchema" /> n'est pas valide.</exception>
    </member>
    <member name="M:System.Xml.Schema.XmlSchemaValidator.EndValidation">
      <summary vsli:raw="Ends validation and checks identity constraints for the entire XML document.">Termine la validation et vérifie les contraintes d’identité pour l’ensemble du document XML.</summary>
      <exception cref="T:System.Xml.Schema.XmlSchemaValidationException" vsli:raw="An identity constraint error was found in the XML document.">Une erreur de contrainte d'identité a été trouvée dans le document XML.</exception>
    </member>
    <member name="M:System.Xml.Schema.XmlSchemaValidator.GetExpectedAttributes">
      <summary vsli:raw="Returns the expected attributes for the current element context.">Retourne les attributs attendus pour le contexte d'élément actuel.</summary>
      <returns vsli:raw="An array of &lt;see cref=&quot;T:System.Xml.Schema.XmlSchemaAttribute&quot; /&gt; objects or an empty array if there are no expected attributes.">Un tableau d'objets <see cref="T:System.Xml.Schema.XmlSchemaAttribute" /> ou un tableau vide s'il n'y a pas d'attributs attendus.</returns>
    </member>
    <member name="M:System.Xml.Schema.XmlSchemaValidator.GetExpectedParticles">
      <summary vsli:raw="Returns the expected particles in the current element context.">Retourne les particules attendues dans le contexte d'élément actuel.</summary>
      <returns vsli:raw="An array of &lt;see cref=&quot;T:System.Xml.Schema.XmlSchemaParticle&quot; /&gt; objects or an empty array if there are no expected particles.">Un tableau d'objets <see cref="T:System.Xml.Schema.XmlSchemaParticle" /> ou un tableau vide s'il n'y a pas de particules attendues.</returns>
    </member>
    <member name="M:System.Xml.Schema.XmlSchemaValidator.GetUnspecifiedDefaultAttributes(System.Collections.ArrayList)">
      <summary vsli:raw="Validates identity constraints on the default attributes and populates the &lt;see cref=&quot;T:System.Collections.ArrayList&quot; /&gt; specified with &lt;see cref=&quot;T:System.Xml.Schema.XmlSchemaAttribute&quot; /&gt; objects for any attributes with default values that have not been previously validated using the &lt;see cref=&quot;Overload:System.Xml.Schema.XmlSchemaValidator.ValidateAttribute&quot; /&gt; method in the element context.">Valide les contraintes d'identité sur les attributs par défaut et remplit la <see cref="T:System.Collections.ArrayList" /> spécifiée avec les objets <see cref="T:System.Xml.Schema.XmlSchemaAttribute" /> pour tous les attributs avec les valeurs par défaut qui n'ont pas été déjà validés à l'aide de la méthode <see cref="Overload:System.Xml.Schema.XmlSchemaValidator.ValidateAttribute" /> dans le contexte d'élément.</summary>
      <param name="defaultAttributes" vsli:raw="An &lt;see cref=&quot;T:System.Collections.ArrayList&quot; /&gt; to populate with &lt;see cref=&quot;T:System.Xml.Schema.XmlSchemaAttribute&quot; /&gt; objects for any attributes not yet encountered during validation in the element context.">
        <see cref="T:System.Collections.ArrayList" /> à remplir pas avec les objets <see cref="T:System.Xml.Schema.XmlSchemaAttribute" /> pour tous attributs non trouvés lors de la validation dans le contexte d'élément.</param>
    </member>
    <member name="M:System.Xml.Schema.XmlSchemaValidator.Initialize">
      <summary vsli:raw="Initializes the state of the &lt;see cref=&quot;T:System.Xml.Schema.XmlSchemaValidator&quot; /&gt; object.">Initialise l'état de l'objet <see cref="T:System.Xml.Schema.XmlSchemaValidator" />.</summary>
      <exception cref="T:System.InvalidOperationException" vsli:raw="Calling the &lt;see cref=&quot;Overload:System.Xml.Schema.XmlSchemaValidator.Initialize&quot; /&gt; method is valid immediately after the construction of an &lt;see cref=&quot;T:System.Xml.Schema.XmlSchemaValidator&quot; /&gt; object or after a call to &lt;see cref=&quot;M:System.Xml.Schema.XmlSchemaValidator.EndValidation&quot; /&gt; only.">L'appel de la méthode <see cref="Overload:System.Xml.Schema.XmlSchemaValidator.Initialize" /> est immédiatement valide après la construction d'un objet <see cref="T:System.Xml.Schema.XmlSchemaValidator" /> ou après un appel à <see cref="M:System.Xml.Schema.XmlSchemaValidator.EndValidation" /> uniquement.</exception>
    </member>
    <member name="M:System.Xml.Schema.XmlSchemaValidator.Initialize(System.Xml.Schema.XmlSchemaObject)">
      <summary vsli:raw="Initializes the state of the &lt;see cref=&quot;T:System.Xml.Schema.XmlSchemaValidator&quot; /&gt; object using the &lt;see cref=&quot;T:System.Xml.Schema.XmlSchemaObject&quot; /&gt; specified for partial validation.">Initialise l'état de l'objet <see cref="T:System.Xml.Schema.XmlSchemaValidator" /> à l'aide du <see cref="T:System.Xml.Schema.XmlSchemaObject" /> spécifié pour la validation partielle.</summary>
      <param name="partialValidationType" vsli:raw="An &lt;see cref=&quot;T:System.Xml.Schema.XmlSchemaElement&quot; /&gt;, &lt;see cref=&quot;T:System.Xml.Schema.XmlSchemaAttribute&quot; /&gt;, or &lt;see cref=&quot;T:System.Xml.Schema.XmlSchemaType&quot; /&gt; object used to initialize the validation context of the &lt;see cref=&quot;T:System.Xml.Schema.XmlSchemaValidator&quot; /&gt; object for partial validation.">Objet <see cref="T:System.Xml.Schema.XmlSchemaElement" />, <see cref="T:System.Xml.Schema.XmlSchemaAttribute" /> ou  <see cref="T:System.Xml.Schema.XmlSchemaType" /> permettant d'initialiser le contexte de validation de l'objet <see cref="T:System.Xml.Schema.XmlSchemaValidator" /> pour la validation partielle.</param>
      <exception cref="T:System.InvalidOperationException" vsli:raw="Calling the &lt;see cref=&quot;Overload:System.Xml.Schema.XmlSchemaValidator.Initialize&quot; /&gt; method is valid immediately after the construction of an &lt;see cref=&quot;T:System.Xml.Schema.XmlSchemaValidator&quot; /&gt; object or after a call to &lt;see cref=&quot;M:System.Xml.Schema.XmlSchemaValidator.EndValidation&quot; /&gt; only.">L'appel de la méthode <see cref="Overload:System.Xml.Schema.XmlSchemaValidator.Initialize" /> est immédiatement valide après la construction d'un objet <see cref="T:System.Xml.Schema.XmlSchemaValidator" /> ou après un appel à <see cref="M:System.Xml.Schema.XmlSchemaValidator.EndValidation" /> uniquement.</exception>
      <exception cref="T:System.ArgumentException" vsli:raw="The &lt;see cref=&quot;T:System.Xml.Schema.XmlSchemaObject&quot; /&gt; parameter is not an &lt;see cref=&quot;T:System.Xml.Schema.XmlSchemaElement&quot; /&gt;, &lt;see cref=&quot;T:System.Xml.Schema.XmlSchemaAttribute&quot; /&gt;, or &lt;see cref=&quot;T:System.Xml.Schema.XmlSchemaType&quot; /&gt; object.">Le paramètre <see cref="T:System.Xml.Schema.XmlSchemaObject" /> n'est pas un objet <see cref="T:System.Xml.Schema.XmlSchemaElement" />, <see cref="T:System.Xml.Schema.XmlSchemaAttribute" /> ou <see cref="T:System.Xml.Schema.XmlSchemaType" />.</exception>
      <exception cref="T:System.ArgumentNullException" vsli:raw="The &lt;see cref=&quot;T:System.Xml.Schema.XmlSchemaObject&quot; /&gt; parameter cannot be &lt;see langword=&quot;null&quot; /&gt;.">Le paramètre <see cref="T:System.Xml.Schema.XmlSchemaObject" /> ne peut pas avoir la valeur <see langword="null" />.</exception>
    </member>
    <member name="M:System.Xml.Schema.XmlSchemaValidator.SkipToEndElement(System.Xml.Schema.XmlSchemaInfo)">
      <summary vsli:raw="Skips validation of the current element content and prepares the &lt;see cref=&quot;T:System.Xml.Schema.XmlSchemaValidator&quot; /&gt; object to validate content in the parent element's context.">Ignore la validation du contenu de l'élément actuel et prépare l'objet <see cref="T:System.Xml.Schema.XmlSchemaValidator" /> à la validation du contenu dans le contexte de l'élément parent.</summary>
      <param name="schemaInfo" vsli:raw="An &lt;see cref=&quot;T:System.Xml.Schema.XmlSchemaInfo&quot; /&gt; object whose properties are set if the current element content is successfully skipped. This parameter can be &lt;see langword=&quot;null&quot; /&gt;.">Objet <see cref="T:System.Xml.Schema.XmlSchemaInfo" /> dont les propriétés sont définies si le contenu d'élément actuel est ignoré avec succès. Ce paramètre peut être <see langword="null" />.</param>
      <exception cref="T:System.InvalidOperationException" vsli:raw="The &lt;see cref=&quot;M:System.Xml.Schema.XmlSchemaValidator.SkipToEndElement(System.Xml.Schema.XmlSchemaInfo)&quot; /&gt; method was not called in the correct sequence. For example, calling &lt;see cref=&quot;M:System.Xml.Schema.XmlSchemaValidator.SkipToEndElement(System.Xml.Schema.XmlSchemaInfo)&quot; /&gt; after calling &lt;see cref=&quot;M:System.Xml.Schema.XmlSchemaValidator.SkipToEndElement(System.Xml.Schema.XmlSchemaInfo)&quot; /&gt;.">La méthode <see cref="M:System.Xml.Schema.XmlSchemaValidator.SkipToEndElement(System.Xml.Schema.XmlSchemaInfo)" /> n'a pas été appelée dans la séquence appropriée. Par exemple, appeler <see cref="M:System.Xml.Schema.XmlSchemaValidator.SkipToEndElement(System.Xml.Schema.XmlSchemaInfo)" /> après avoir appelé <see cref="M:System.Xml.Schema.XmlSchemaValidator.SkipToEndElement(System.Xml.Schema.XmlSchemaInfo)" />.</exception>
    </member>
    <member name="M:System.Xml.Schema.XmlSchemaValidator.ValidateAttribute(System.String,System.String,System.String,System.Xml.Schema.XmlSchemaInfo)">
      <summary vsli:raw="Validates the attribute name, namespace URI, and value in the current element context.">Valide le nom de l'attribut, l'URI de l'espace de noms et la valeur dans le contexte d'élément actuel.</summary>
      <param name="localName" vsli:raw="The local name of the attribute to validate.">Nom local de l'attribut à valider.</param>
      <param name="namespaceUri" vsli:raw="The namespace URI of the attribute to validate.">URI de l'espace de noms de l'attribut à valider.</param>
      <param name="attributeValue" vsli:raw="The value of the attribute to validate.">Valeur de l'attribut à valider.</param>
      <param name="schemaInfo" vsli:raw="An &lt;see cref=&quot;T:System.Xml.Schema.XmlSchemaInfo&quot; /&gt; object whose properties are set on successful validation of the attribute. This parameter can be &lt;see langword=&quot;null&quot; /&gt;.">Objet <see cref="T:System.Xml.Schema.XmlSchemaInfo" /> dont les propriétés sont définies lors de la validation réussie de l'attribut. Ce paramètre peut être <see langword="null" />.</param>
      <exception cref="T:System.Xml.Schema.XmlSchemaValidationException" vsli:raw="The attribute is not valid in the current element context.">L'attribut n'est pas valide dans le contexte d'élément actuel.</exception>
      <exception cref="T:System.InvalidOperationException" vsli:raw="The &lt;see cref=&quot;Overload:System.Xml.Schema.XmlSchemaValidator.ValidateAttribute&quot; /&gt; method was not called in the correct sequence. For example, calling &lt;see cref=&quot;Overload:System.Xml.Schema.XmlSchemaValidator.ValidateAttribute&quot; /&gt; after calling &lt;see cref=&quot;M:System.Xml.Schema.XmlSchemaValidator.ValidateEndOfAttributes(System.Xml.Schema.XmlSchemaInfo)&quot; /&gt;.">La méthode <see cref="Overload:System.Xml.Schema.XmlSchemaValidator.ValidateAttribute" /> n'a pas été appelée dans la séquence appropriée. Par exemple, appeler <see cref="Overload:System.Xml.Schema.XmlSchemaValidator.ValidateAttribute" /> après avoir appelé <see cref="M:System.Xml.Schema.XmlSchemaValidator.ValidateEndOfAttributes(System.Xml.Schema.XmlSchemaInfo)" />.</exception>
      <exception cref="T:System.ArgumentNullException" vsli:raw="One or more of the parameters specified are &lt;see langword=&quot;null&quot; /&gt;.">Un ou plusieurs des paramètres spécifiés sont <see langword="null" />.</exception>
      <returns vsli:raw="The validated attribute's value.">Valeur de l'attribut validé.</returns>
    </member>
    <member name="M:System.Xml.Schema.XmlSchemaValidator.ValidateAttribute(System.String,System.String,System.Xml.Schema.XmlValueGetter,System.Xml.Schema.XmlSchemaInfo)">
      <summary vsli:raw="Validates the attribute name, namespace URI, and value in the current element context.">Valide le nom de l'attribut, l'URI de l'espace de noms et la valeur dans le contexte d'élément actuel.</summary>
      <param name="localName" vsli:raw="The local name of the attribute to validate.">Nom local de l'attribut à valider.</param>
      <param name="namespaceUri" vsli:raw="The namespace URI of the attribute to validate.">URI de l'espace de noms de l'attribut à valider.</param>
      <param name="attributeValue" vsli:raw="An &lt;see cref=&quot;T:System.Xml.Schema.XmlValueGetter&quot; /&gt;&lt;see langword=&quot;delegate&quot; /&gt; used to pass the attribute's value as a Common Language Runtime (CLR) type compatible with the XML Schema Definition Language (XSD) type of the attribute.">
        <see cref="T:System.Xml.Schema.XmlValueGetter" />
        <see langword="delegate" /> permettant de passer la valeur de l’attribut en tant que type CLR compatible avec le type de langage XSD (XML Schema Definition) de l’attribut.</param>
      <param name="schemaInfo" vsli:raw="An &lt;see cref=&quot;T:System.Xml.Schema.XmlSchemaInfo&quot; /&gt; object whose properties are set on successful validation of the attribute. This parameter and can be &lt;see langword=&quot;null&quot; /&gt;.">Objet <see cref="T:System.Xml.Schema.XmlSchemaInfo" /> dont les propriétés sont définies lors de la validation réussie de l'attribut. Ce paramètre peut être <see langword="null" />.</param>
      <exception cref="T:System.Xml.Schema.XmlSchemaValidationException" vsli:raw="The attribute is not valid in the current element context.">L'attribut n'est pas valide dans le contexte d'élément actuel.</exception>
      <exception cref="T:System.InvalidOperationException" vsli:raw="The &lt;see cref=&quot;Overload:System.Xml.Schema.XmlSchemaValidator.ValidateAttribute&quot; /&gt; method was not called in the correct sequence. For example, calling &lt;see cref=&quot;Overload:System.Xml.Schema.XmlSchemaValidator.ValidateAttribute&quot; /&gt; after calling &lt;see cref=&quot;M:System.Xml.Schema.XmlSchemaValidator.ValidateEndOfAttributes(System.Xml.Schema.XmlSchemaInfo)&quot; /&gt;.">La méthode <see cref="Overload:System.Xml.Schema.XmlSchemaValidator.ValidateAttribute" /> n'a pas été appelée dans la séquence appropriée. Par exemple, appeler <see cref="Overload:System.Xml.Schema.XmlSchemaValidator.ValidateAttribute" /> après avoir appelé <see cref="M:System.Xml.Schema.XmlSchemaValidator.ValidateEndOfAttributes(System.Xml.Schema.XmlSchemaInfo)" />.</exception>
      <exception cref="T:System.ArgumentNullException" vsli:raw="One or more of the parameters specified are &lt;see langword=&quot;null&quot; /&gt;.">Un ou plusieurs des paramètres spécifiés sont <see langword="null" />.</exception>
      <returns vsli:raw="The validated attribute's value.">Valeur de l'attribut validé.</returns>
    </member>
    <member name="M:System.Xml.Schema.XmlSchemaValidator.ValidateElement(System.String,System.String,System.Xml.Schema.XmlSchemaInfo)">
      <summary vsli:raw="Validates the element in the current context.">Valide l'élément dans le contexte actuel.</summary>
      <param name="localName" vsli:raw="The local name of the element to validate.">Nom local de l'élément à valider.</param>
      <param name="namespaceUri" vsli:raw="The namespace URI of the element to validate.">URI de l'espace de noms de l'élément à valider.</param>
      <param name="schemaInfo" vsli:raw="An &lt;see cref=&quot;T:System.Xml.Schema.XmlSchemaInfo&quot; /&gt; object whose properties are set on successful validation of the element's name. This parameter can be &lt;see langword=&quot;null&quot; /&gt;.">Objet <see cref="T:System.Xml.Schema.XmlSchemaInfo" /> dont les propriétés sont définies lors de la validation réussie du nom de l'élément. Ce paramètre peut être <see langword="null" />.</param>
      <exception cref="T:System.Xml.Schema.XmlSchemaValidationException" vsli:raw="The element's name is not valid in the current context.">Le nom de l'élément n'est pas valide dans le contexte actuel.</exception>
      <exception cref="T:System.InvalidOperationException" vsli:raw="The &lt;see cref=&quot;Overload:System.Xml.Schema.XmlSchemaValidator.ValidateElement&quot; /&gt; method was not called in the correct sequence. For example, the &lt;see cref=&quot;Overload:System.Xml.Schema.XmlSchemaValidator.ValidateElement&quot; /&gt; method is called after calling &lt;see cref=&quot;Overload:System.Xml.Schema.XmlSchemaValidator.ValidateAttribute&quot; /&gt;.">La méthode <see cref="Overload:System.Xml.Schema.XmlSchemaValidator.ValidateElement" /> n'a pas été appelée dans la séquence appropriée. Par exemple, la méthode <see cref="Overload:System.Xml.Schema.XmlSchemaValidator.ValidateElement" /> est appelée après l'appel de <see cref="Overload:System.Xml.Schema.XmlSchemaValidator.ValidateAttribute" />.</exception>
    </member>
    <member name="M:System.Xml.Schema.XmlSchemaValidator.ValidateElement(System.String,System.String,System.Xml.Schema.XmlSchemaInfo,System.String,System.String,System.String,System.String)">
      <summary vsli:raw="Validates the element in the current context with the &lt;c&gt;xsi:Type&lt;/c&gt;, &lt;c&gt;xsi:Nil&lt;/c&gt;, &lt;c&gt;xsi:SchemaLocation&lt;/c&gt;, and &lt;c&gt;xsi:NoNamespaceSchemaLocation&lt;/c&gt; attribute values specified.">Valide l’élément dans le contexte actuel dont les valeurs d’attribut <c>xsi:Type</c>, <c>xsi:Nil</c>, <c>xsi:SchemaLocation</c> et <c>xsi:NoNamespaceSchemaLocation</c> sont spécifiées.</summary>
      <param name="localName" vsli:raw="The local name of the element to validate.">Nom local de l'élément à valider.</param>
      <param name="namespaceUri" vsli:raw="The namespace URI of the element to validate.">URI de l'espace de noms de l'élément à valider.</param>
      <param name="schemaInfo" vsli:raw="An &lt;see cref=&quot;T:System.Xml.Schema.XmlSchemaInfo&quot; /&gt; object whose properties are set on successful validation of the element's name. This parameter can be &lt;see langword=&quot;null&quot; /&gt;.">Objet <see cref="T:System.Xml.Schema.XmlSchemaInfo" /> dont les propriétés sont définies lors de la validation réussie du nom de l'élément. Ce paramètre peut être <see langword="null" />.</param>
      <param name="xsiType" vsli:raw="The &lt;c&gt;xsi:Type&lt;/c&gt; attribute value of the element. This parameter can be &lt;see langword=&quot;null&quot; /&gt;.">Valeur de l’attribut <c>xsi:Type</c> de l’élément. Ce paramètre peut être <see langword="null" />.</param>
      <param name="xsiNil" vsli:raw="The &lt;c&gt;xsi:Nil&lt;/c&gt; attribute value of the element. This parameter can be &lt;see langword=&quot;null&quot; /&gt;.">Valeur de l’attribut <c>xsi:Nil</c> de l’élément. Ce paramètre peut être <see langword="null" />.</param>
      <param name="xsiSchemaLocation" vsli:raw="The &lt;c&gt;xsi:SchemaLocation&lt;/c&gt; attribute value of the element. This parameter can be &lt;see langword=&quot;null&quot; /&gt;.">Valeur de l’attribut <c>xsi:SchemaLocation</c> de l’élément. Ce paramètre peut être <see langword="null" />.</param>
      <param name="xsiNoNamespaceSchemaLocation" vsli:raw="The &lt;c&gt;xsi:NoNamespaceSchemaLocation&lt;/c&gt; attribute value of the element. This parameter can be &lt;see langword=&quot;null&quot; /&gt;.">Valeur de l’attribut <c>xsi:NoNamespaceSchemaLocation</c> de l’élément. Ce paramètre peut être <see langword="null" />.</param>
      <exception cref="T:System.Xml.Schema.XmlSchemaValidationException" vsli:raw="The element's name is not valid in the current context.">Le nom de l'élément n'est pas valide dans le contexte actuel.</exception>
      <exception cref="T:System.InvalidOperationException" vsli:raw="The &lt;see cref=&quot;Overload:System.Xml.Schema.XmlSchemaValidator.ValidateElement&quot; /&gt; method was not called in the correct sequence. For example, the &lt;see cref=&quot;Overload:System.Xml.Schema.XmlSchemaValidator.ValidateElement&quot; /&gt; method is called after calling &lt;see cref=&quot;Overload:System.Xml.Schema.XmlSchemaValidator.ValidateAttribute&quot; /&gt;.">La méthode <see cref="Overload:System.Xml.Schema.XmlSchemaValidator.ValidateElement" /> n'a pas été appelée dans la séquence appropriée. Par exemple, la méthode <see cref="Overload:System.Xml.Schema.XmlSchemaValidator.ValidateElement" /> est appelée après l'appel de <see cref="Overload:System.Xml.Schema.XmlSchemaValidator.ValidateAttribute" />.</exception>
    </member>
    <member name="M:System.Xml.Schema.XmlSchemaValidator.ValidateEndElement(System.Xml.Schema.XmlSchemaInfo)">
      <summary vsli:raw="Verifies if the text content of the element is valid according to its data type for elements with simple content, and verifies if the content of the current element is complete for elements with complex content.">Vérifie si le texte de l'élément est valide d'après son type de données pour les éléments dont le contenu est simple et vérifie si le contenu de l'élément actuel est complet pour les éléments dont le contenu est complexe.</summary>
      <param name="schemaInfo" vsli:raw="An &lt;see cref=&quot;T:System.Xml.Schema.XmlSchemaInfo&quot; /&gt; object whose properties are set on successful validation of the element. This parameter can be &lt;see langword=&quot;null&quot; /&gt;.">Objet <see cref="T:System.Xml.Schema.XmlSchemaInfo" /> dont les propriétés sont définies lors de la validation réussie de l'élément. Ce paramètre peut être <see langword="null" />.</param>
      <exception cref="T:System.Xml.Schema.XmlSchemaValidationException" vsli:raw="The element's content is not valid.">Le contenu de l'élément n'est pas valide.</exception>
      <exception cref="T:System.InvalidOperationException" vsli:raw="The &lt;see cref=&quot;Overload:System.Xml.Schema.XmlSchemaValidator.ValidateEndElement&quot; /&gt; method was not called in the correct sequence. For example, if the &lt;see cref=&quot;Overload:System.Xml.Schema.XmlSchemaValidator.ValidateEndElement&quot; /&gt; method is called after calling &lt;see cref=&quot;M:System.Xml.Schema.XmlSchemaValidator.SkipToEndElement(System.Xml.Schema.XmlSchemaInfo)&quot; /&gt;.">La méthode <see cref="Overload:System.Xml.Schema.XmlSchemaValidator.ValidateEndElement" /> n'a pas été appelée dans la séquence appropriée. Par exemple, la méthode <see cref="Overload:System.Xml.Schema.XmlSchemaValidator.ValidateEndElement" /> est appelée après l'appel de <see cref="M:System.Xml.Schema.XmlSchemaValidator.SkipToEndElement(System.Xml.Schema.XmlSchemaInfo)" />.</exception>
      <returns vsli:raw="The parsed, typed text value of the element if the element has simple content.">Valeur de texte typée analysée de l'élément si le contenu de celui-ci est simple.</returns>
    </member>
    <member name="M:System.Xml.Schema.XmlSchemaValidator.ValidateEndElement(System.Xml.Schema.XmlSchemaInfo,System.Object)">
      <summary vsli:raw="Verifies if the text content of the element specified is valid according to its data type.">Vérifie si le texte de l'élément spécifié est valide d'après son type de données.</summary>
      <param name="schemaInfo" vsli:raw="An &lt;see cref=&quot;T:System.Xml.Schema.XmlSchemaInfo&quot; /&gt; object whose properties are set on successful validation of the text content of the element. This parameter can be &lt;see langword=&quot;null&quot; /&gt;.">Objet <see cref="T:System.Xml.Schema.XmlSchemaInfo" /> dont les propriétés sont définies lors de la validation réussie du contenu de texte de l'élément. Ce paramètre peut être <see langword="null" />.</param>
      <param name="typedValue" vsli:raw="The typed text content of the element.">Texte typé de l'élément.</param>
      <exception cref="T:System.Xml.Schema.XmlSchemaValidationException" vsli:raw="The element's text content is not valid.">Le contenu de texte de l'élément n'est pas valide.</exception>
      <exception cref="T:System.InvalidOperationException" vsli:raw="The &lt;see cref=&quot;Overload:System.Xml.Schema.XmlSchemaValidator.ValidateEndElement&quot; /&gt; method was not called in the correct sequence (for example, if the &lt;see cref=&quot;Overload:System.Xml.Schema.XmlSchemaValidator.ValidateEndElement&quot; /&gt; method is called after calling &lt;see cref=&quot;M:System.Xml.Schema.XmlSchemaValidator.SkipToEndElement(System.Xml.Schema.XmlSchemaInfo)&quot; /&gt;), calls to the &lt;see cref=&quot;Overload:System.Xml.Schema.XmlSchemaValidator.ValidateText&quot; /&gt; method have been previously made, or the element has complex content.">La méthode <see cref="Overload:System.Xml.Schema.XmlSchemaValidator.ValidateEndElement" /> n'a pas été appelée dans la séquence correcte (par exemple, si la méthode <see cref="Overload:System.Xml.Schema.XmlSchemaValidator.ValidateEndElement" /> est appelée après avoir appelé <see cref="M:System.Xml.Schema.XmlSchemaValidator.SkipToEndElement(System.Xml.Schema.XmlSchemaInfo)" />), les appels à la méthode <see cref="Overload:System.Xml.Schema.XmlSchemaValidator.ValidateText" /> ont déjà été faits ou l'élément a un contenu complexe.</exception>
      <exception cref="T:System.ArgumentNullException" vsli:raw="The typed text content parameter cannot be &lt;see langword=&quot;null&quot; /&gt;.">Le paramètre de contenu de texte typé ne peut pas être <see langword="null" />.</exception>
      <returns vsli:raw="The parsed, typed simple content of the element.">Contenu simple typé analysé de l'élément.</returns>
    </member>
    <member name="M:System.Xml.Schema.XmlSchemaValidator.ValidateEndOfAttributes(System.Xml.Schema.XmlSchemaInfo)">
      <summary vsli:raw="Verifies whether all the required attributes in the element context are present and prepares the &lt;see cref=&quot;T:System.Xml.Schema.XmlSchemaValidator&quot; /&gt; object to validate the child content of the element.">Vérifie si tous les attributs obligatoires dans le contexte de l'élément sont présents et prépare l'objet <see cref="T:System.Xml.Schema.XmlSchemaValidator" /> à la validation du contenu enfant de l'élément.</summary>
      <param name="schemaInfo" vsli:raw="An &lt;see cref=&quot;T:System.Xml.Schema.XmlSchemaInfo&quot; /&gt; object whose properties are set on successful verification that all the required attributes in the element context are present. This parameter can be &lt;see langword=&quot;null&quot; /&gt;.">Objet <see cref="T:System.Xml.Schema.XmlSchemaInfo" /> dont les propriétés sont définies lors de la vérification réussie de la présence de tous les attributs requis dans le contexte d'élément. Ce paramètre peut être <see langword="null" />.</param>
      <exception cref="T:System.Xml.Schema.XmlSchemaValidationException" vsli:raw="One or more of the required attributes in the current element context were not found.">Un ou plusieurs des attributs requis dans le contexte d'élément actuel sont introuvables.</exception>
      <exception cref="T:System.InvalidOperationException" vsli:raw="The &lt;see cref=&quot;M:System.Xml.Schema.XmlSchemaValidator.ValidateEndOfAttributes(System.Xml.Schema.XmlSchemaInfo)&quot; /&gt; method was not called in the correct sequence. For example, calling &lt;see cref=&quot;M:System.Xml.Schema.XmlSchemaValidator.ValidateEndOfAttributes(System.Xml.Schema.XmlSchemaInfo)&quot; /&gt; after calling &lt;see cref=&quot;M:System.Xml.Schema.XmlSchemaValidator.SkipToEndElement(System.Xml.Schema.XmlSchemaInfo)&quot; /&gt;.">La méthode <see cref="M:System.Xml.Schema.XmlSchemaValidator.ValidateEndOfAttributes(System.Xml.Schema.XmlSchemaInfo)" /> n'a pas été appelée dans la séquence appropriée. Par exemple, appeler <see cref="M:System.Xml.Schema.XmlSchemaValidator.ValidateEndOfAttributes(System.Xml.Schema.XmlSchemaInfo)" /> après avoir appelé <see cref="M:System.Xml.Schema.XmlSchemaValidator.SkipToEndElement(System.Xml.Schema.XmlSchemaInfo)" />.</exception>
      <exception cref="T:System.ArgumentNullException" vsli:raw="One or more of the parameters specified are &lt;see langword=&quot;null&quot; /&gt;.">Un ou plusieurs des paramètres spécifiés sont <see langword="null" />.</exception>
    </member>
    <member name="M:System.Xml.Schema.XmlSchemaValidator.ValidateText(System.String)">
      <summary vsli:raw="Validates whether the text &lt;see langword=&quot;string&quot; /&gt; specified is allowed in the current element context, and accumulates the text for validation if the current element has simple content.">Valide si la <see langword="string" /> de texte spécifié est autorisée dans le contexte d'élément actuel et accumule le texte pour la validation si l'élément actuel a du contenu simple.</summary>
      <param name="elementValue" vsli:raw="A text &lt;see langword=&quot;string&quot; /&gt; to validate in the current element context.">
        <see langword="string" /> de texte à valider dans le contexte d'élément actuel.</param>
      <exception cref="T:System.Xml.Schema.XmlSchemaValidationException" vsli:raw="The text &lt;see langword=&quot;string&quot; /&gt; specified is not allowed in the current element context.">La <see langword="string" /> de texte spécifiée n'est pas autorisée dans le contexte d'élément actuel.</exception>
      <exception cref="T:System.InvalidOperationException" vsli:raw="The &lt;see cref=&quot;Overload:System.Xml.Schema.XmlSchemaValidator.ValidateText&quot; /&gt; method was not called in the correct sequence. For example, the &lt;see cref=&quot;Overload:System.Xml.Schema.XmlSchemaValidator.ValidateText&quot; /&gt; method is called after calling &lt;see cref=&quot;Overload:System.Xml.Schema.XmlSchemaValidator.ValidateAttribute&quot; /&gt;.">La méthode <see cref="Overload:System.Xml.Schema.XmlSchemaValidator.ValidateText" /> n'a pas été appelée dans la séquence appropriée. Par exemple, la méthode <see cref="Overload:System.Xml.Schema.XmlSchemaValidator.ValidateText" /> est appelée après l'appel de <see cref="Overload:System.Xml.Schema.XmlSchemaValidator.ValidateAttribute" />.</exception>
      <exception cref="T:System.ArgumentNullException" vsli:raw="The text &lt;see langword=&quot;string&quot; /&gt; parameter cannot be &lt;see langword=&quot;null&quot; /&gt;.">Le paramètre <see langword="string" /> de texte ne peut pas être <see langword="null" />.</exception>
    </member>
    <member name="M:System.Xml.Schema.XmlSchemaValidator.ValidateText(System.Xml.Schema.XmlValueGetter)">
      <summary vsli:raw="Validates whether the text returned by the &lt;see cref=&quot;T:System.Xml.Schema.XmlValueGetter&quot; /&gt; object specified is allowed in the current element context, and accumulates the text for validation if the current element has simple content.">Valide si le texte retourné par l'objet <see cref="T:System.Xml.Schema.XmlValueGetter" /> spécifié est autorisé dans le contexte d'élément actuel et accumule le texte pour la validation si l'élément actuel a du contenu simple.</summary>
      <param name="elementValue" vsli:raw="An &lt;see cref=&quot;T:System.Xml.Schema.XmlValueGetter&quot; /&gt;&lt;see langword=&quot;delegate&quot; /&gt; used to pass the text value as a Common Language Runtime (CLR) type compatible with the XML Schema Definition Language (XSD) type of the attribute.">
        <see cref="T:System.Xml.Schema.XmlValueGetter" />
        <see langword="delegate" /> permettant de passer la valeur de texte en tant que type CLR compatible avec le type de langage XSD (XML Schema Definition) de l’attribut.</param>
      <exception cref="T:System.Xml.Schema.XmlSchemaValidationException" vsli:raw="The text &lt;see langword=&quot;string&quot; /&gt; specified is not allowed in the current element context.">La <see langword="string" /> de texte spécifiée n'est pas autorisée dans le contexte d'élément actuel.</exception>
      <exception cref="T:System.InvalidOperationException" vsli:raw="The &lt;see cref=&quot;Overload:System.Xml.Schema.XmlSchemaValidator.ValidateText&quot; /&gt; method was not called in the correct sequence. For example, the &lt;see cref=&quot;Overload:System.Xml.Schema.XmlSchemaValidator.ValidateText&quot; /&gt; method is called after calling &lt;see cref=&quot;Overload:System.Xml.Schema.XmlSchemaValidator.ValidateAttribute&quot; /&gt;.">La méthode <see cref="Overload:System.Xml.Schema.XmlSchemaValidator.ValidateText" /> n'a pas été appelée dans la séquence appropriée. Par exemple, la méthode <see cref="Overload:System.Xml.Schema.XmlSchemaValidator.ValidateText" /> est appelée après l'appel de <see cref="Overload:System.Xml.Schema.XmlSchemaValidator.ValidateAttribute" />.</exception>
      <exception cref="T:System.ArgumentNullException" vsli:raw="The text &lt;see langword=&quot;string&quot; /&gt; parameter cannot be &lt;see langword=&quot;null&quot; /&gt;.">Le paramètre <see langword="string" /> de texte ne peut pas être <see langword="null" />.</exception>
    </member>
    <member name="M:System.Xml.Schema.XmlSchemaValidator.ValidateWhitespace(System.String)">
      <summary vsli:raw="Validates whether the white space in the &lt;see langword=&quot;string&quot; /&gt; specified is allowed in the current element context, and accumulates the white space for validation if the current element has simple content.">Valide si un espace blanc dans la <see langword="string" /> spécifiée est autorisé dans le contexte d'élément actuel et accumule l'espace blanc pour la validation si l'élément actuel a du contenu simple.</summary>
      <param name="elementValue" vsli:raw="A white space &lt;see langword=&quot;string&quot; /&gt; to validate in the current element context.">
        <see langword="string" /> espace blanc à valider dans le contexte d'élément actuel.</param>
      <exception cref="T:System.Xml.Schema.XmlSchemaValidationException" vsli:raw="White space is not allowed in the current element context.">L'espace blanc n'est pas autorisé dans le contexte d'élément actuel.</exception>
      <exception cref="T:System.InvalidOperationException" vsli:raw="The &lt;see cref=&quot;Overload:System.Xml.Schema.XmlSchemaValidator.ValidateWhitespace&quot; /&gt; method was not called in the correct sequence. For example, if the &lt;see cref=&quot;Overload:System.Xml.Schema.XmlSchemaValidator.ValidateWhitespace&quot; /&gt; method is called after calling &lt;see cref=&quot;Overload:System.Xml.Schema.XmlSchemaValidator.ValidateAttribute&quot; /&gt;.">La méthode <see cref="Overload:System.Xml.Schema.XmlSchemaValidator.ValidateWhitespace" /> n'a pas été appelée dans la séquence appropriée. Par exemple, la méthode <see cref="Overload:System.Xml.Schema.XmlSchemaValidator.ValidateWhitespace" /> est appelée après l'appel de <see cref="Overload:System.Xml.Schema.XmlSchemaValidator.ValidateAttribute" />.</exception>
    </member>
    <member name="M:System.Xml.Schema.XmlSchemaValidator.ValidateWhitespace(System.Xml.Schema.XmlValueGetter)">
      <summary vsli:raw="Validates whether the white space returned by the &lt;see cref=&quot;T:System.Xml.Schema.XmlValueGetter&quot; /&gt; object specified is allowed in the current element context, and accumulates the white space for validation if the current element has simple content.">Valide si l'espace blanc retourné par l'objet <see cref="T:System.Xml.Schema.XmlValueGetter" /> spécifié est autorisé dans le contexte d'élément actuel et accumule l'espace blanc pour la validation si l'élément actuel a du contenu simple.</summary>
      <param name="elementValue" vsli:raw="An &lt;see cref=&quot;T:System.Xml.Schema.XmlValueGetter&quot; /&gt;&lt;see langword=&quot;delegate&quot; /&gt; used to pass the white space value as a Common Language Runtime (CLR) type compatible with the XML Schema Definition Language (XSD) type of the attribute.">
        <see cref="T:System.Xml.Schema.XmlValueGetter" />
        <see langword="delegate" /> permettant de passer la valeur d’espace blanc en tant que type CLR compatible avec le type de langage XSD (XML Schema Definition) de l’attribut.</param>
      <exception cref="T:System.Xml.Schema.XmlSchemaValidationException" vsli:raw="White space is not allowed in the current element context.">L'espace blanc n'est pas autorisé dans le contexte d'élément actuel.</exception>
      <exception cref="T:System.InvalidOperationException" vsli:raw="The &lt;see cref=&quot;Overload:System.Xml.Schema.XmlSchemaValidator.ValidateWhitespace&quot; /&gt; method was not called in the correct sequence. For example, if the &lt;see cref=&quot;Overload:System.Xml.Schema.XmlSchemaValidator.ValidateWhitespace&quot; /&gt; method is called after calling &lt;see cref=&quot;Overload:System.Xml.Schema.XmlSchemaValidator.ValidateAttribute&quot; /&gt;.">La méthode <see cref="Overload:System.Xml.Schema.XmlSchemaValidator.ValidateWhitespace" /> n'a pas été appelée dans la séquence appropriée. Par exemple, la méthode <see cref="Overload:System.Xml.Schema.XmlSchemaValidator.ValidateWhitespace" /> est appelée après l'appel de <see cref="Overload:System.Xml.Schema.XmlSchemaValidator.ValidateAttribute" />.</exception>
    </member>
    <member name="P:System.Xml.Schema.XmlSchemaValidator.LineInfoProvider">
      <summary vsli:raw="Gets or sets the line number information for the XML node being validated.">Obtient ou définit les informations de numéro de ligne pour le nœud XML en cours de validation.</summary>
      <returns vsli:raw="An &lt;see cref=&quot;T:System.Xml.IXmlLineInfo&quot; /&gt; object.">Objet <see cref="T:System.Xml.IXmlLineInfo" />.</returns>
    </member>
    <member name="P:System.Xml.Schema.XmlSchemaValidator.SourceUri">
      <summary vsli:raw="Gets or sets the source URI for the XML node being validated.">Obtient ou définit l'URI source pour le nœud XML en cours de validation.</summary>
      <returns vsli:raw="A &lt;see cref=&quot;T:System.Uri&quot; /&gt; object representing the source URI for the XML node being validated; the default is &lt;see langword=&quot;null&quot; /&gt;.">Un objet <see cref="T:System.Uri" /> représentant l'URI source pour le nœud XML en cours de validation ; la valeur par défaut est <see langword="null" />.</returns>
    </member>
    <member name="P:System.Xml.Schema.XmlSchemaValidator.ValidationEventSender">
      <summary vsli:raw="Gets or sets the object sent as the sender object of a validation event.">Obtient ou définit l’objet envoyé comme objet expéditeur d’un événement de validation.</summary>
      <returns vsli:raw="An &lt;see cref=&quot;T:System.Object&quot; /&gt;; the default is this &lt;see cref=&quot;T:System.Xml.Schema.XmlSchemaValidator&quot; /&gt; object.">
        <see cref="T:System.Object" /> ; la valeur par défaut est cet objet <see cref="T:System.Xml.Schema.XmlSchemaValidator" />.</returns>
    </member>
    <member name="P:System.Xml.Schema.XmlSchemaValidator.XmlResolver">
      <summary vsli:raw="Sets the &lt;see cref=&quot;T:System.Xml.XmlResolver&quot; /&gt; object used to resolve &lt;c&gt;xs:import&lt;/c&gt; and &lt;c&gt;xs:include&lt;/c&gt; elements as well as &lt;c&gt;xsi:schemaLocation&lt;/c&gt; and &lt;c&gt;xsi:noNamespaceSchemaLocation&lt;/c&gt; attributes.">Définit l’objet <see cref="T:System.Xml.XmlResolver" /> utilisé pour résoudre les éléments <c>xs:import</c> et <c>xs:include</c>, ainsi que les attributs <c>xsi:schemaLocation</c> et <c>xsi:noNamespaceSchemaLocation</c>.</summary>
      <returns vsli:raw="An &lt;see cref=&quot;T:System.Xml.XmlResolver&quot; /&gt; object; the default is an &lt;see cref=&quot;T:System.Xml.XmlUrlResolver&quot; /&gt; object.">Objet <see cref="T:System.Xml.XmlResolver" /> ; la valeur par défaut est un objet <see cref="T:System.Xml.XmlUrlResolver" />.</returns>
    </member>
    <member name="T:System.Xml.Schema.XmlSchemaValidity">
      <summary vsli:raw="Represents the validity of an XML item validated by the &lt;see cref=&quot;T:System.Xml.Schema.XmlSchemaValidator&quot; /&gt; class.">Représente la validation d'un élément XML validé par la classe <see cref="T:System.Xml.Schema.XmlSchemaValidator" />.</summary>
    </member>
    <member name="F:System.Xml.Schema.XmlSchemaValidity.Invalid">
      <summary vsli:raw="The XML item is invalid.">L'élément XML n'est pas valide.</summary>
    </member>
    <member name="F:System.Xml.Schema.XmlSchemaValidity.NotKnown">
      <summary vsli:raw="The validity of the XML item is not known.">La validité de l'élément XML n'est pas connue.</summary>
    </member>
    <member name="F:System.Xml.Schema.XmlSchemaValidity.Valid">
      <summary vsli:raw="The XML item is valid.">L'élément XML est valide.</summary>
    </member>
    <member name="T:System.Xml.Schema.XmlSchemaWhiteSpaceFacet">
      <summary vsli:raw="Represents the World Wide Web Consortium (W3C) &lt;see langword=&quot;whiteSpace&quot; /&gt; facet.">Représente la facette World Wide Web Consortium (W3C) <see langword="whiteSpace" />.</summary>
    </member>
    <member name="M:System.Xml.Schema.XmlSchemaWhiteSpaceFacet.#ctor">
      <summary vsli:raw="Initializes a new instance of the &lt;see cref=&quot;T:System.Xml.Schema.XmlSchemaWhiteSpaceFacet&quot; /&gt; class.">Initialise une nouvelle instance de la classe <see cref="T:System.Xml.Schema.XmlSchemaWhiteSpaceFacet" />.</summary>
    </member>
    <member name="T:System.Xml.Schema.XmlSchemaXPath">
      <summary vsli:raw="Represents the World Wide Web Consortium (W3C) &lt;see langword=&quot;selector&quot; /&gt; element.">Représente l'élément World Wide Web Consortium (W3C) <see langword="selector" />.</summary>
    </member>
    <member name="M:System.Xml.Schema.XmlSchemaXPath.#ctor">
      <summary vsli:raw="Initializes a new instance of the &lt;see cref=&quot;T:System.Xml.Schema.XmlSchemaXPath&quot; /&gt; class.">Initialise une nouvelle instance de la classe <see cref="T:System.Xml.Schema.XmlSchemaXPath" />.</summary>
    </member>
    <member name="P:System.Xml.Schema.XmlSchemaXPath.XPath">
      <summary vsli:raw="Gets or sets the attribute for the XPath expression.">Obtient ou définit l'attribut pour l'expression XPath.</summary>
      <returns vsli:raw="The string attribute value for the XPath expression.">Valeur de l'attribut de la chaîne pour l'expression XPath.</returns>
    </member>
    <member name="T:System.Xml.Schema.XmlSeverityType">
      <summary vsli:raw="Represents the severity of the validation event.">Obtient la sévérité de l'événement de validation.</summary>
    </member>
    <member name="F:System.Xml.Schema.XmlSeverityType.Error">
      <summary vsli:raw="Indicates a validation error occurred when validating the instance document. This applies to document type definitions (DTDs) and XML Schema definition language (XSD) schemas. The World Wide Web Consortium (W3C) validity constraints are considered errors. If no validation event handler has been created, errors throw an exception.">Indique une erreur de validation intervenue lors de la validation de l'instance de document. Ceci s'applique aux schémas de définition de type de document (DTD) et XSD (XML Schema definition language). Les contraintes de validité World Wide Web Consortium (W3C) sont considérées comme des erreurs. Si aucun gestionnaire d'événements de validation n'a été créé, les erreurs lèvent une exception.</summary>
    </member>
    <member name="F:System.Xml.Schema.XmlSeverityType.Warning">
      <summary vsli:raw="Indicates that a validation event occurred that is not an error. A warning is typically issued when there is no DTD, or XML Schema to validate a particular element or attribute against. Unlike errors, warnings do not throw an exception if there is no validation event handler.">Indique qu'un événement de validation qui n'est pas une erreur s'est produit. En règle générale, un avertissement est émis lorsqu'il n'y a pas de schéma DTD ou XSD (XML Schema) permettant de valider un élément ou un attribut particulier. Contrairement aux erreurs, les avertissements ne lèvent pas une exception s'il n'existe pas de gestionnaire d'événements de validation.</summary>
    </member>
    <member name="T:System.Xml.Schema.XmlTypeCode">
      <summary vsli:raw="Represents the W3C XML Schema Definition Language (XSD) schema types.">Représente les types de schéma en langage XSD (XML Schema Definition) XML du W3C.</summary>
    </member>
    <member name="F:System.Xml.Schema.XmlTypeCode.AnyAtomicType">
      <summary vsli:raw="Any atomic value of a union.">Toute valeur atomique d'une union.</summary>
    </member>
    <member name="F:System.Xml.Schema.XmlTypeCode.AnyUri">
      <summary vsli:raw="A W3C XML Schema &lt;see langword=&quot;xs:anyURI&quot; /&gt; type.">Type <see langword="xs:anyURI" /> de schéma XML W3C.</summary>
    </member>
    <member name="F:System.Xml.Schema.XmlTypeCode.Attribute">
      <summary vsli:raw="This value supports the .NET Framework infrastructure and is not intended to be used directly from your code.">Cette valeur prend en charge l'infrastructure .NET Framework et n'est pas destinée à être directement utilisée à partir de votre code.</summary>
    </member>
    <member name="F:System.Xml.Schema.XmlTypeCode.Base64Binary">
      <summary vsli:raw="A W3C XML Schema &lt;see langword=&quot;xs:base64Binary&quot; /&gt; type.">Type <see langword="xs:base64Binary" /> de schéma XML W3C.</summary>
    </member>
    <member name="F:System.Xml.Schema.XmlTypeCode.Boolean">
      <summary vsli:raw="A W3C XML Schema &lt;see langword=&quot;xs:boolean&quot; /&gt; type.">Type <see langword="xs:boolean" /> de schéma XML W3C.</summary>
    </member>
    <member name="F:System.Xml.Schema.XmlTypeCode.Byte">
      <summary vsli:raw="A W3C XML Schema &lt;see langword=&quot;xs:byte&quot; /&gt; type.">Type <see langword="xs:byte" /> de schéma XML W3C.</summary>
    </member>
    <member name="F:System.Xml.Schema.XmlTypeCode.Comment">
      <summary vsli:raw="This value supports the .NET Framework infrastructure and is not intended to be used directly from your code.">Cette valeur prend en charge l'infrastructure .NET Framework et n'est pas destinée à être directement utilisée à partir de votre code.</summary>
    </member>
    <member name="F:System.Xml.Schema.XmlTypeCode.Date">
      <summary vsli:raw="A W3C XML Schema &lt;see langword=&quot;xs:date&quot; /&gt; type.">Type <see langword="xs:date" /> de schéma XML W3C.</summary>
    </member>
    <member name="F:System.Xml.Schema.XmlTypeCode.DateTime">
      <summary vsli:raw="A W3C XML Schema &lt;see langword=&quot;xs:dateTime&quot; /&gt; type.">Type <see langword="xs:dateTime" /> de schéma XML W3C.</summary>
    </member>
    <member name="F:System.Xml.Schema.XmlTypeCode.DayTimeDuration">
      <summary vsli:raw="This value supports the .NET Framework infrastructure and is not intended to be used directly from your code.">Cette valeur prend en charge l'infrastructure .NET Framework et n'est pas destinée à être directement utilisée à partir de votre code.</summary>
    </member>
    <member name="F:System.Xml.Schema.XmlTypeCode.Decimal">
      <summary vsli:raw="A W3C XML Schema &lt;see langword=&quot;xs:decimal&quot; /&gt; type.">Type <see langword="xs:decimal" /> de schéma XML W3C.</summary>
    </member>
    <member name="F:System.Xml.Schema.XmlTypeCode.Document">
      <summary vsli:raw="This value supports the .NET Framework infrastructure and is not intended to be used directly from your code.">Cette valeur prend en charge l'infrastructure .NET Framework et n'est pas destinée à être directement utilisée à partir de votre code.</summary>
    </member>
    <member name="F:System.Xml.Schema.XmlTypeCode.Double">
      <summary vsli:raw="A W3C XML Schema &lt;see langword=&quot;xs:double&quot; /&gt; type.">Type <see langword="xs:double" /> de schéma XML W3C.</summary>
    </member>
    <member name="F:System.Xml.Schema.XmlTypeCode.Duration">
      <summary vsli:raw="A W3C XML Schema &lt;see langword=&quot;xs:Duration&quot; /&gt; type.">Type <see langword="xs:Duration" /> de schéma XML W3C.</summary>
    </member>
    <member name="F:System.Xml.Schema.XmlTypeCode.Element">
      <summary vsli:raw="This value supports the .NET Framework infrastructure and is not intended to be used directly from your code.">Cette valeur prend en charge l'infrastructure .NET Framework et n'est pas destinée à être directement utilisée à partir de votre code.</summary>
    </member>
    <member name="F:System.Xml.Schema.XmlTypeCode.Entity">
      <summary vsli:raw="A W3C XML Schema &lt;see langword=&quot;xs:ENTITY&quot; /&gt; type.">Type <see langword="xs:ENTITY" /> de schéma XML W3C.</summary>
    </member>
    <member name="F:System.Xml.Schema.XmlTypeCode.Float">
      <summary vsli:raw="A W3C XML Schema &lt;see langword=&quot;xs:float&quot; /&gt; type.">Type <see langword="xs:float" /> de schéma XML W3C.</summary>
    </member>
    <member name="F:System.Xml.Schema.XmlTypeCode.GDay">
      <summary vsli:raw="A W3C XML Schema &lt;see langword=&quot;xs:gDay&quot; /&gt; type.">Type <see langword="xs:gDay" /> de schéma XML W3C.</summary>
    </member>
    <member name="F:System.Xml.Schema.XmlTypeCode.GMonth">
      <summary vsli:raw="A W3C XML Schema &lt;see langword=&quot;xs:gMonth&quot; /&gt; type.">Type <see langword="xs:gMonth" /> de schéma XML W3C.</summary>
    </member>
    <member name="F:System.Xml.Schema.XmlTypeCode.GMonthDay">
      <summary vsli:raw="A W3C XML Schema &lt;see langword=&quot;xs:gMonthDay&quot; /&gt; type.">Type <see langword="xs:gMonthDay" /> de schéma XML W3C.</summary>
    </member>
    <member name="F:System.Xml.Schema.XmlTypeCode.GYear">
      <summary vsli:raw="A W3C XML Schema &lt;see langword=&quot;xs:gYear&quot; /&gt; type.">Type <see langword="xs:gYear" /> de schéma XML W3C.</summary>
    </member>
    <member name="F:System.Xml.Schema.XmlTypeCode.GYearMonth">
      <summary vsli:raw="A W3C XML Schema &lt;see langword=&quot;xs:gYearMonth&quot; /&gt; type.">Type <see langword="xs:gYearMonth" /> de schéma XML W3C.</summary>
    </member>
    <member name="F:System.Xml.Schema.XmlTypeCode.HexBinary">
      <summary vsli:raw="A W3C XML Schema &lt;see langword=&quot;xs:hexBinary&quot; /&gt; type.">Type <see langword="xs:hexBinary" /> de schéma XML W3C.</summary>
    </member>
    <member name="F:System.Xml.Schema.XmlTypeCode.Id">
      <summary vsli:raw="A W3C XML Schema &lt;see langword=&quot;xs:ID&quot; /&gt; type.">Type <see langword="xs:ID" /> de schéma XML W3C.</summary>
    </member>
    <member name="F:System.Xml.Schema.XmlTypeCode.Idref">
      <summary vsli:raw="A W3C XML Schema &lt;see langword=&quot;xs:IDREF&quot; /&gt; type.">Type <see langword="xs:IDREF" /> de schéma XML W3C.</summary>
    </member>
    <member name="F:System.Xml.Schema.XmlTypeCode.Int">
      <summary vsli:raw="A W3C XML Schema &lt;see langword=&quot;xs:int&quot; /&gt; type.">Type <see langword="xs:int" /> de schéma XML W3C.</summary>
    </member>
    <member name="F:System.Xml.Schema.XmlTypeCode.Integer">
      <summary vsli:raw="A W3C XML Schema &lt;see langword=&quot;xs:integer&quot; /&gt; type.">Type <see langword="xs:integer" /> de schéma XML W3C.</summary>
    </member>
    <member name="F:System.Xml.Schema.XmlTypeCode.Item">
      <summary vsli:raw="An item such as a node or atomic value.">Élément tel qu'un nœud ou une valeur atomique.</summary>
    </member>
    <member name="F:System.Xml.Schema.XmlTypeCode.Language">
      <summary vsli:raw="A W3C XML Schema &lt;see langword=&quot;xs:language&quot; /&gt; type.">Type <see langword="xs:language" /> de schéma XML W3C.</summary>
    </member>
    <member name="F:System.Xml.Schema.XmlTypeCode.Long">
      <summary vsli:raw="A W3C XML Schema &lt;see langword=&quot;xs:long&quot; /&gt; type.">Type <see langword="xs:long" /> de schéma XML W3C.</summary>
    </member>
    <member name="F:System.Xml.Schema.XmlTypeCode.Name">
      <summary vsli:raw="A W3C XML Schema &lt;see langword=&quot;xs:Name&quot; /&gt; type.">Type <see langword="xs:Name" /> de schéma XML W3C.</summary>
    </member>
    <member name="F:System.Xml.Schema.XmlTypeCode.Namespace">
      <summary vsli:raw="This value supports the .NET Framework infrastructure and is not intended to be used directly from your code.">Cette valeur prend en charge l'infrastructure .NET Framework et n'est pas destinée à être directement utilisée à partir de votre code.</summary>
    </member>
    <member name="F:System.Xml.Schema.XmlTypeCode.NCName">
      <summary vsli:raw="A W3C XML Schema &lt;see langword=&quot;xs:NCName&quot; /&gt; type.">Type <see langword="xs:NCName" /> de schéma XML W3C.</summary>
    </member>
    <member name="F:System.Xml.Schema.XmlTypeCode.NegativeInteger">
      <summary vsli:raw="A W3C XML Schema &lt;see langword=&quot;xs:negativeInteger&quot; /&gt; type.">Type <see langword="xs:negativeInteger" /> de schéma XML W3C.</summary>
    </member>
    <member name="F:System.Xml.Schema.XmlTypeCode.NmToken">
      <summary vsli:raw="A W3C XML Schema &lt;see langword=&quot;xs:NMTOKEN&quot; /&gt; type.">Type <see langword="xs:NMTOKEN" /> de schéma XML W3C.</summary>
    </member>
    <member name="F:System.Xml.Schema.XmlTypeCode.Node">
      <summary vsli:raw="This value supports the .NET Framework infrastructure and is not intended to be used directly from your code.">Cette valeur prend en charge l'infrastructure .NET Framework et n'est pas destinée à être directement utilisée à partir de votre code.</summary>
    </member>
    <member name="F:System.Xml.Schema.XmlTypeCode.None">
      <summary vsli:raw="No type information.">Aucune information relative au type.</summary>
    </member>
    <member name="F:System.Xml.Schema.XmlTypeCode.NonNegativeInteger">
      <summary vsli:raw="A W3C XML Schema &lt;see langword=&quot;xs:nonNegativeInteger&quot; /&gt; type.">Type <see langword="xs:nonNegativeInteger" /> de schéma XML W3C.</summary>
    </member>
    <member name="F:System.Xml.Schema.XmlTypeCode.NonPositiveInteger">
      <summary vsli:raw="A W3C XML Schema &lt;see langword=&quot;xs:nonPositiveInteger&quot; /&gt; type.">Type <see langword="xs:nonPositiveInteger" /> de schéma XML W3C.</summary>
    </member>
    <member name="F:System.Xml.Schema.XmlTypeCode.NormalizedString">
      <summary vsli:raw="A W3C XML Schema &lt;see langword=&quot;xs:normalizedString&quot; /&gt; type.">Type <see langword="xs:normalizedString" /> de schéma XML W3C.</summary>
    </member>
    <member name="F:System.Xml.Schema.XmlTypeCode.Notation">
      <summary vsli:raw="A W3C XML Schema &lt;see langword=&quot;xs:NOTATION&quot; /&gt; type.">Type <see langword="xs:NOTATION" /> de schéma XML W3C.</summary>
    </member>
    <member name="F:System.Xml.Schema.XmlTypeCode.PositiveInteger">
      <summary vsli:raw="A W3C XML Schema &lt;see langword=&quot;xs:positiveInteger&quot; /&gt; type.">Type <see langword="xs:positiveInteger" /> de schéma XML W3C.</summary>
    </member>
    <member name="F:System.Xml.Schema.XmlTypeCode.ProcessingInstruction">
      <summary vsli:raw="This value supports the .NET Framework infrastructure and is not intended to be used directly from your code.">Cette valeur prend en charge l'infrastructure .NET Framework et n'est pas destinée à être directement utilisée à partir de votre code.</summary>
    </member>
    <member name="F:System.Xml.Schema.XmlTypeCode.QName">
      <summary vsli:raw="A W3C XML Schema &lt;see langword=&quot;xs:QName&quot; /&gt; type.">Type <see langword="xs:QName" /> de schéma XML W3C.</summary>
    </member>
    <member name="F:System.Xml.Schema.XmlTypeCode.Short">
      <summary vsli:raw="A W3C XML Schema &lt;see langword=&quot;xs:short&quot; /&gt; type.">Type <see langword="xs:short" /> de schéma XML W3C.</summary>
    </member>
    <member name="F:System.Xml.Schema.XmlTypeCode.String">
      <summary vsli:raw="A W3C XML Schema &lt;see langword=&quot;xs:string&quot; /&gt; type.">Type <see langword="xs:string" /> de schéma XML W3C.</summary>
    </member>
    <member name="F:System.Xml.Schema.XmlTypeCode.Text">
      <summary vsli:raw="This value supports the .NET Framework infrastructure and is not intended to be used directly from your code.">Cette valeur prend en charge l'infrastructure .NET Framework et n'est pas destinée à être directement utilisée à partir de votre code.</summary>
    </member>
    <member name="F:System.Xml.Schema.XmlTypeCode.Time">
      <summary vsli:raw="A W3C XML Schema &lt;see langword=&quot;xs:time&quot; /&gt; type.">Type <see langword="xs:time" /> de schéma XML W3C.</summary>
    </member>
    <member name="F:System.Xml.Schema.XmlTypeCode.Token">
      <summary vsli:raw="A W3C XML Schema &lt;see langword=&quot;xs:token&quot; /&gt; type.">Type <see langword="xs:token" /> de schéma XML W3C.</summary>
    </member>
    <member name="F:System.Xml.Schema.XmlTypeCode.UnsignedByte">
      <summary vsli:raw="A W3C XML Schema &lt;see langword=&quot;xs:unsignedByte&quot; /&gt; type.">Type <see langword="xs:unsignedByte" /> de schéma XML W3C.</summary>
    </member>
    <member name="F:System.Xml.Schema.XmlTypeCode.UnsignedInt">
      <summary vsli:raw="A W3C XML Schema &lt;see langword=&quot;xs:unsignedInt&quot; /&gt; type.">Type <see langword="xs:unsignedInt" /> de schéma XML W3C.</summary>
    </member>
    <member name="F:System.Xml.Schema.XmlTypeCode.UnsignedLong">
      <summary vsli:raw="A W3C XML Schema &lt;see langword=&quot;xs:unsignedLong&quot; /&gt; type.">Type <see langword="xs:unsignedLong" /> de schéma XML W3C.</summary>
    </member>
    <member name="F:System.Xml.Schema.XmlTypeCode.UnsignedShort">
      <summary vsli:raw="A W3C XML Schema &lt;see langword=&quot;xs:unsignedShort&quot; /&gt; type.">Type <see langword="xs:unsignedShort" /> de schéma XML W3C.</summary>
    </member>
    <member name="F:System.Xml.Schema.XmlTypeCode.UntypedAtomic">
      <summary vsli:raw="An untyped atomic value.">Valeur atomique non typée.</summary>
    </member>
    <member name="F:System.Xml.Schema.XmlTypeCode.YearMonthDuration">
      <summary vsli:raw="This value supports the .NET Framework infrastructure and is not intended to be used directly from your code.">Cette valeur prend en charge l'infrastructure .NET Framework et n'est pas destinée à être directement utilisée à partir de votre code.</summary>
    </member>
    <member name="T:System.Xml.Schema.XmlValueGetter">
      <summary vsli:raw="A &lt;see langword=&quot;delegate&quot; /&gt; used by the &lt;see cref=&quot;T:System.Xml.Schema.XmlSchemaValidator&quot; /&gt; class to pass attribute, text, and white space values as a Common Language Runtime (CLR) type compatible with the XML Schema Definition Language (XSD) type of the attribute, text, or white space.">
        <see langword="delegate" /> utilisé par la classe <see cref="T:System.Xml.Schema.XmlSchemaValidator" /> pour passer des valeurs d'attribut, de texte et d'espace blanc en tant que type CLR compatible avec le type langage XSD (XML Schema Definition) de l'attribut, du texte ou de l'espace blanc.</summary>
      <returns vsli:raw="An object containing the attribute, text, or white space value. The object is a CLR type that corresponds to the XSD type of the attribute, text, or white space value.">Objet contenant la valeur d'attribut, de texte ou d'espace blanc. L’objet est un type CLR qui correspond au type XSD de la valeur d’attribut, de texte ou d’espace blanc.</returns>
    </member>
    <member name="T:System.Xml.Serialization.IXmlSerializable">
      <summary vsli:raw="Provides custom formatting for XML serialization and deserialization.">Fournit une mise en forme personnalisée pour la désérialisation et la sérialisation XML.</summary>
    </member>
    <member name="M:System.Xml.Serialization.IXmlSerializable.GetSchema">
      <summary vsli:raw="This method is reserved and should not be used. When implementing the &lt;see langword=&quot;IXmlSerializable&quot; /&gt; interface, you should return &lt;see langword=&quot;null&quot; /&gt; (&lt;see langword=&quot;Nothing&quot; /&gt; in Visual Basic) from this method, and instead, if specifying a custom schema is required, apply the &lt;see cref=&quot;T:System.Xml.Serialization.XmlSchemaProviderAttribute&quot; /&gt; to the class.">Cette méthode est réservée et ne doit pas être utilisée. Au moment d’implémenter l’interface <see langword="IXmlSerializable" />, vous devez retourner la valeur <see langword="null" /> (<see langword="Nothing" /> en Visual Basic) à partir de cette méthode. En revanche, si vous devez spécifier un schéma personnalisé, appliquez <see cref="T:System.Xml.Serialization.XmlSchemaProviderAttribute" /> à la classe.</summary>
      <returns vsli:raw="An &lt;see cref=&quot;T:System.Xml.Schema.XmlSchema&quot; /&gt; that describes the XML representation of the object that is produced by the &lt;see cref=&quot;M:System.Xml.Serialization.IXmlSerializable.WriteXml(System.Xml.XmlWriter)&quot; /&gt; method and consumed by the &lt;see cref=&quot;M:System.Xml.Serialization.IXmlSerializable.ReadXml(System.Xml.XmlReader)&quot; /&gt; method.">
        <see cref="T:System.Xml.Schema.XmlSchema" /> qui décrit la représentation XML de l'objet qui est généré par la méthode <see cref="M:System.Xml.Serialization.IXmlSerializable.WriteXml(System.Xml.XmlWriter)" /> et consommé par la méthode <see cref="M:System.Xml.Serialization.IXmlSerializable.ReadXml(System.Xml.XmlReader)" />.</returns>
    </member>
    <member name="M:System.Xml.Serialization.IXmlSerializable.ReadXml(System.Xml.XmlReader)">
      <summary vsli:raw="Generates an object from its XML representation.">Génère un objet à partir de sa représentation XML.</summary>
      <param name="reader" vsli:raw="The &lt;see cref=&quot;T:System.Xml.XmlReader&quot; /&gt; stream from which the object is deserialized.">Flux <see cref="T:System.Xml.XmlReader" /> duquel l’objet est désérialisé.</param>
    </member>
    <member name="M:System.Xml.Serialization.IXmlSerializable.WriteXml(System.Xml.XmlWriter)">
      <summary vsli:raw="Converts an object into its XML representation.">Convertit un objet en sa représentation XML.</summary>
      <param name="writer" vsli:raw="The &lt;see cref=&quot;T:System.Xml.XmlWriter&quot; /&gt; stream to which the object is serialized.">Flux <see cref="T:System.Xml.XmlWriter" /> dans lequel l'objet est sérialisé.</param>
    </member>
    <member name="T:System.Xml.Serialization.XmlAnyAttributeAttribute">
      <summary vsli:raw="Specifies that the member (a field that returns an array of &lt;see cref=&quot;T:System.Xml.XmlAttribute&quot; /&gt; objects) can contain any XML attributes.">Spécifie que le membre (un champ retournant un tableau d'objets <see cref="T:System.Xml.XmlAttribute" />) peut contenir n'importe quel attribut XML.</summary>
    </member>
    <member name="M:System.Xml.Serialization.XmlAnyAttributeAttribute.#ctor">
      <summary vsli:raw="Constructs a new instance of the &lt;see cref=&quot;T:System.Xml.Serialization.XmlAnyAttributeAttribute&quot; /&gt; class.">Construit une nouvelle instance de la classe <see cref="T:System.Xml.Serialization.XmlAnyAttributeAttribute" />.</summary>
    </member>
    <member name="T:System.Xml.Serialization.XmlAnyElementAttribute">
      <summary vsli:raw="Specifies that the member (a field that returns an array of &lt;see cref=&quot;T:System.Xml.XmlElement&quot; /&gt; or &lt;see cref=&quot;T:System.Xml.XmlNode&quot; /&gt; objects) contains objects that represent any XML element that has no corresponding member in the object being serialized or deserialized.">Spécifie que le membre (un champ retournant un tableau d'objets <see cref="T:System.Xml.XmlElement" /> ou <see cref="T:System.Xml.XmlNode" />) contient des objets représentant tout élément XML n'ayant pas de membre correspondant dans l'objet en cours de sérialisation ou de désérialisation.</summary>
    </member>
    <member name="M:System.Xml.Serialization.XmlAnyElementAttribute.#ctor">
      <summary vsli:raw="Initializes a new instance of the &lt;see cref=&quot;T:System.Xml.Serialization.XmlAnyElementAttribute&quot; /&gt; class.">Initialise une nouvelle instance de la classe <see cref="T:System.Xml.Serialization.XmlAnyElementAttribute" />.</summary>
    </member>
    <member name="M:System.Xml.Serialization.XmlAnyElementAttribute.#ctor(System.String)">
      <summary vsli:raw="Initializes a new instance of the &lt;see cref=&quot;T:System.Xml.Serialization.XmlAnyElementAttribute&quot; /&gt; class and specifies the XML element name generated in the XML document.">Initialise une nouvelle instance de la classe <see cref="T:System.Xml.Serialization.XmlAnyElementAttribute" /> et spécifie le nom d'élément XML généré dans le document XML.</summary>
      <param name="name" vsli:raw="The name of the XML element that the &lt;see cref=&quot;T:System.Xml.Serialization.XmlSerializer&quot; /&gt; generates.">Nom de l'élément XML généré par <see cref="T:System.Xml.Serialization.XmlSerializer" />.</param>
    </member>
    <member name="M:System.Xml.Serialization.XmlAnyElementAttribute.#ctor(System.String,System.String)">
      <summary vsli:raw="Initializes a new instance of the &lt;see cref=&quot;T:System.Xml.Serialization.XmlAnyElementAttribute&quot; /&gt; class and specifies the XML element name generated in the XML document and its XML namespace.">Initialise une nouvelle instance de la classe <see cref="T:System.Xml.Serialization.XmlAnyElementAttribute" /> et spécifie le nom d'élément XML généré dans le document XML, ainsi que son espace de noms XML.</summary>
      <param name="name" vsli:raw="The name of the XML element that the &lt;see cref=&quot;T:System.Xml.Serialization.XmlSerializer&quot; /&gt; generates.">Nom de l'élément XML généré par <see cref="T:System.Xml.Serialization.XmlSerializer" />.</param>
      <param name="ns" vsli:raw="The XML namespace of the XML element.">Espace de noms XML de l'élément XML.</param>
    </member>
    <member name="P:System.Xml.Serialization.XmlAnyElementAttribute.Name">
      <summary vsli:raw="Gets or sets the XML element name.">Obtient ou définit le nom de l'élément XML.</summary>
      <exception cref="T:System.InvalidOperationException" vsli:raw="The element name of an array member does not match the element name specified by the &lt;see cref=&quot;P:System.Xml.Serialization.XmlAnyElementAttribute.Name&quot; /&gt; property.">Le nom d'élément d'un membre du tableau ne correspond pas au nom d'élément spécifié par la propriété <see cref="P:System.Xml.Serialization.XmlAnyElementAttribute.Name" />.</exception>
      <returns vsli:raw="The name of the XML element.">Nom de l'élément XML.</returns>
    </member>
    <member name="P:System.Xml.Serialization.XmlAnyElementAttribute.Namespace">
      <summary vsli:raw="Gets or sets the XML namespace generated in the XML document.">Obtient ou définit l'espace de noms XML généré dans le document XML.</summary>
      <returns vsli:raw="An XML namespace.">Espace de noms XML.</returns>
    </member>
    <member name="P:System.Xml.Serialization.XmlAnyElementAttribute.Order">
      <summary vsli:raw="Gets or sets the explicit order in which the elements are serialized or deserialized.">Obtient ou définit l'ordre explicite dans lequel les éléments sont sérialisés ou désérialisés.</summary>
      <returns vsli:raw="The order of the code generation.">Ordre de la génération du code.</returns>
    </member>
    <member name="T:System.Xml.Serialization.XmlAttributeAttribute">
      <summary vsli:raw="Specifies that the &lt;see cref=&quot;T:System.Xml.Serialization.XmlSerializer&quot; /&gt; must serialize the class member as an XML attribute.">Spécifie que <see cref="T:System.Xml.Serialization.XmlSerializer" /> doit sérialiser le membre de classe comme un attribut XML.</summary>
    </member>
    <member name="M:System.Xml.Serialization.XmlAttributeAttribute.#ctor">
      <summary vsli:raw="Initializes a new instance of the &lt;see cref=&quot;T:System.Xml.Serialization.XmlAttributeAttribute&quot; /&gt; class.">Initialise une nouvelle instance de la classe <see cref="T:System.Xml.Serialization.XmlAttributeAttribute" />.</summary>
    </member>
    <member name="M:System.Xml.Serialization.XmlAttributeAttribute.#ctor(System.String)">
      <summary vsli:raw="Initializes a new instance of the &lt;see cref=&quot;T:System.Xml.Serialization.XmlAttributeAttribute&quot; /&gt; class and specifies the name of the generated XML attribute.">Initialise une nouvelle instance de la classe <see cref="T:System.Xml.Serialization.XmlAttributeAttribute" /> et spécifie le nom de l'attribut XML généré.</summary>
      <param name="attributeName" vsli:raw="The name of the XML attribute that the &lt;see cref=&quot;T:System.Xml.Serialization.XmlSerializer&quot; /&gt; generates.">Nom de l'attribut XML généré par <see cref="T:System.Xml.Serialization.XmlSerializer" />.</param>
    </member>
    <member name="M:System.Xml.Serialization.XmlAttributeAttribute.#ctor(System.String,System.Type)">
      <summary vsli:raw="Initializes a new instance of the &lt;see cref=&quot;T:System.Xml.Serialization.XmlAttributeAttribute&quot; /&gt; class.">Initialise une nouvelle instance de la classe <see cref="T:System.Xml.Serialization.XmlAttributeAttribute" />.</summary>
      <param name="attributeName" vsli:raw="The name of the XML attribute that is generated.">Nom de l'attribut XML généré.</param>
      <param name="type" vsli:raw="The &lt;see cref=&quot;T:System.Type&quot; /&gt; used to store the attribute.">
        <see cref="T:System.Type" /> utilisé pour stocker l'attribut.</param>
    </member>
    <member name="M:System.Xml.Serialization.XmlAttributeAttribute.#ctor(System.Type)">
      <summary vsli:raw="Initializes a new instance of the &lt;see cref=&quot;T:System.Xml.Serialization.XmlAttributeAttribute&quot; /&gt; class.">Initialise une nouvelle instance de la classe <see cref="T:System.Xml.Serialization.XmlAttributeAttribute" />.</summary>
      <param name="type" vsli:raw="The &lt;see cref=&quot;T:System.Type&quot; /&gt; used to store the attribute.">
        <see cref="T:System.Type" /> utilisé pour stocker l'attribut.</param>
    </member>
    <member name="P:System.Xml.Serialization.XmlAttributeAttribute.AttributeName">
      <summary vsli:raw="Gets or sets the name of the XML attribute.">Obtient ou définit le nom de l'attribut XML.</summary>
      <returns vsli:raw="The name of the XML attribute. The default is the member name.">Nom de l'attribut XML. La valeur par défaut est le nom du membre.</returns>
    </member>
    <member name="P:System.Xml.Serialization.XmlAttributeAttribute.DataType">
      <summary vsli:raw="Gets or sets the XSD data type of the XML attribute generated by the &lt;see cref=&quot;T:System.Xml.Serialization.XmlSerializer&quot; /&gt;.">Obtient ou définit le type de données XSD de l'attribut XML généré par <see cref="T:System.Xml.Serialization.XmlSerializer" />.</summary>
      <returns vsli:raw="An XSD (XML Schema Document) data type.">Type de données XSD (XML Schema Document).</returns>
    </member>
    <member name="P:System.Xml.Serialization.XmlAttributeAttribute.Form">
      <summary vsli:raw="Gets or sets a value that indicates whether the XML attribute name generated by the &lt;see cref=&quot;T:System.Xml.Serialization.XmlSerializer&quot; /&gt; is qualified.">Obtient ou définit une valeur qui indique si le nom d'attribut XML généré par <see cref="T:System.Xml.Serialization.XmlSerializer" /> est qualifié.</summary>
      <returns vsli:raw="One of the &lt;see cref=&quot;T:System.Xml.Schema.XmlSchemaForm&quot; /&gt; values. The default is &lt;see langword=&quot;XmlForm.None&quot; /&gt;.">Une des valeurs de l'objet <see cref="T:System.Xml.Schema.XmlSchemaForm" />. La valeur par défaut est <see langword="XmlForm.None" />.</returns>
    </member>
    <member name="P:System.Xml.Serialization.XmlAttributeAttribute.Namespace">
      <summary vsli:raw="Gets or sets the XML namespace of the XML attribute.">Obtient ou définit l'espace de noms XML de l'attribut XML.</summary>
      <returns vsli:raw="The XML namespace of the XML attribute.">Espace de noms XML de l'attribut XML.</returns>
    </member>
    <member name="P:System.Xml.Serialization.XmlAttributeAttribute.Type">
      <summary vsli:raw="Gets or sets the complex type of the XML attribute.">Obtient ou définit le type complexe de l'attribut XML.</summary>
      <returns vsli:raw="The type of the XML attribute.">Type de l'attribut XML.</returns>
    </member>
    <member name="T:System.Xml.Serialization.XmlElementAttribute">
      <summary vsli:raw="Indicates that a public field or property represents an XML element when the &lt;see cref=&quot;T:System.Xml.Serialization.XmlSerializer&quot; /&gt; serializes or deserializes the object that contains it.">Indique qu'un champ public ou une propriété publique représente un élément XML lorsque <see cref="T:System.Xml.Serialization.XmlSerializer" /> sérialise ou désérialise l'objet qui le contient.</summary>
    </member>
    <member name="M:System.Xml.Serialization.XmlElementAttribute.#ctor">
      <summary vsli:raw="Initializes a new instance of the &lt;see cref=&quot;T:System.Xml.Serialization.XmlElementAttribute&quot; /&gt; class.">Initialise une nouvelle instance de la classe <see cref="T:System.Xml.Serialization.XmlElementAttribute" />.</summary>
    </member>
    <member name="M:System.Xml.Serialization.XmlElementAttribute.#ctor(System.String)">
      <summary vsli:raw="Initializes a new instance of the &lt;see cref=&quot;T:System.Xml.Serialization.XmlElementAttribute&quot; /&gt; class and specifies the name of the XML element.">Initialise une nouvelle instance de la classe <see cref="T:System.Xml.Serialization.XmlElementAttribute" /> et spécifie le nom de l'élément XML.</summary>
      <param name="elementName" vsli:raw="The XML element name of the serialized member.">Nom de l'élément XML du membre sérialisé.</param>
    </member>
    <member name="M:System.Xml.Serialization.XmlElementAttribute.#ctor(System.String,System.Type)">
      <summary vsli:raw="Initializes a new instance of the &lt;see cref=&quot;T:System.Xml.Serialization.XmlElementAttribute&quot; /&gt; and specifies the name of the XML element and a derived type for the member to which the &lt;see cref=&quot;T:System.Xml.Serialization.XmlElementAttribute&quot; /&gt; is applied. This member type is used when the &lt;see cref=&quot;T:System.Xml.Serialization.XmlSerializer&quot; /&gt; serializes the object that contains it.">Initialise une nouvelle instance de <see cref="T:System.Xml.Serialization.XmlElementAttribute" /> et spécifie le nom de l'élément XML et un type dérivé pour le membre auquel <see cref="T:System.Xml.Serialization.XmlElementAttribute" /> est appliqué. Ce type de membre est utilisé lorsque <see cref="T:System.Xml.Serialization.XmlSerializer" /> sérialise l'objet qui le contient.</summary>
      <param name="elementName" vsli:raw="The XML element name of the serialized member.">Nom de l'élément XML du membre sérialisé.</param>
      <param name="type" vsli:raw="The &lt;see cref=&quot;T:System.Type&quot; /&gt; of an object derived from the member's type.">
        <see cref="T:System.Type" /> d'un objet dérivé du type du membre.</param>
    </member>
    <member name="M:System.Xml.Serialization.XmlElementAttribute.#ctor(System.Type)">
      <summary vsli:raw="Initializes a new instance of the &lt;see cref=&quot;T:System.Xml.Serialization.XmlElementAttribute&quot; /&gt; class and specifies a type for the member to which the &lt;see cref=&quot;T:System.Xml.Serialization.XmlElementAttribute&quot; /&gt; is applied. This type is used by the &lt;see cref=&quot;T:System.Xml.Serialization.XmlSerializer&quot; /&gt; when serializing or deserializing object that contains it.">Initialise une nouvelle instance de la classe <see cref="T:System.Xml.Serialization.XmlElementAttribute" /> et spécifie un type pour le membre auquel <see cref="T:System.Xml.Serialization.XmlElementAttribute" /> est appliqué. Ce type est utilisé par <see cref="T:System.Xml.Serialization.XmlSerializer" /> lors de la sérialisation ou la désérialisation de l'objet qui le contient.</summary>
      <param name="type" vsli:raw="The &lt;see cref=&quot;T:System.Type&quot; /&gt; of an object derived from the member's type.">
        <see cref="T:System.Type" /> d'un objet dérivé du type du membre.</param>
    </member>
    <member name="P:System.Xml.Serialization.XmlElementAttribute.DataType">
      <summary vsli:raw="Gets or sets the XML Schema definition (XSD) data type of the XML element generated by the &lt;see cref=&quot;T:System.Xml.Serialization.XmlSerializer&quot; /&gt;.">Obtient ou définit le type de données XSD (XML Schema Definition) de l'élément XML généré par <see cref="T:System.Xml.Serialization.XmlSerializer" />.</summary>
      <exception cref="T:System.Exception" vsli:raw="The XML Schema data type you have specified cannot be mapped to the.NET data type.">Le type de données de schéma XML que vous avez spécifié ne peut pas être mappé au type de données .NET.</exception>
      <returns vsli:raw="An XML Schema data type.">Type de données de schéma XML.</returns>
    </member>
    <member name="P:System.Xml.Serialization.XmlElementAttribute.ElementName">
      <summary vsli:raw="Gets or sets the name of the generated XML element.">Obtient ou définit le nom de l'élément XML généré.</summary>
      <returns vsli:raw="The name of the generated XML element. The default is the member identifier.">Nom de l'élément XML généré. Par défaut, il s'agit de l'identificateur du membre.</returns>
    </member>
    <member name="P:System.Xml.Serialization.XmlElementAttribute.Form">
      <summary vsli:raw="Gets or sets a value that indicates whether the element is qualified.">Obtient ou définit une valeur qui indique si l'élément est qualifié.</summary>
      <returns vsli:raw="One of the &lt;see cref=&quot;T:System.Xml.Schema.XmlSchemaForm&quot; /&gt; values. The default is &lt;see cref=&quot;F:System.Xml.Schema.XmlSchemaForm.None&quot; /&gt;.">Une des valeurs de l'objet <see cref="T:System.Xml.Schema.XmlSchemaForm" />. La valeur par défaut est <see cref="F:System.Xml.Schema.XmlSchemaForm.None" />.</returns>
    </member>
    <member name="P:System.Xml.Serialization.XmlElementAttribute.IsNullable">
      <summary vsli:raw="Gets or sets a value that indicates whether the &lt;see cref=&quot;T:System.Xml.Serialization.XmlSerializer&quot; /&gt; must serialize a member that is set to &lt;see langword=&quot;null&quot; /&gt; as an empty tag with the &lt;see langword=&quot;xsi:nil&quot; /&gt; attribute set to &lt;see langword=&quot;true&quot; /&gt;.">Obtient ou définit une valeur qui indique si <see cref="T:System.Xml.Serialization.XmlSerializer" /> doit sérialiser un membre dont la valeur est <see langword="null" /> comme balise vide avec l'attribut <see langword="xsi:nil" /> ayant la valeur <see langword="true" />.</summary>
      <returns vsli:raw="&lt;see langword=&quot;true&quot; /&gt; if the &lt;see cref=&quot;T:System.Xml.Serialization.XmlSerializer&quot; /&gt; generates the &lt;see langword=&quot;xsi:nil&quot; /&gt; attribute; otherwise, &lt;see langword=&quot;false&quot; /&gt;.">
        <see langword="true" /> si <see cref="T:System.Xml.Serialization.XmlSerializer" /> génère l'attribut <see langword="xsi:nil" /> ; <see langword="false" /> sinon.</returns>
    </member>
    <member name="P:System.Xml.Serialization.XmlElementAttribute.Namespace">
      <summary vsli:raw="Gets or sets the namespace assigned to the XML element that results when the class is serialized.">Obtient ou définit l'espace de noms assigné à l'élément XML obtenu lorsque la classe est sérialisée.</summary>
      <returns vsli:raw="The namespace of the XML element.">Espace de noms de l'élément XML.</returns>
    </member>
    <member name="P:System.Xml.Serialization.XmlElementAttribute.Order">
      <summary vsli:raw="Gets or sets the explicit order in which the elements are serialized or deserialized.">Obtient ou définit l'ordre explicite dans lequel les éléments sont sérialisés ou désérialisés.</summary>
      <returns vsli:raw="The order of the code generation.">Ordre de la génération du code.</returns>
    </member>
    <member name="P:System.Xml.Serialization.XmlElementAttribute.Type">
      <summary vsli:raw="Gets or sets the object type used to represent the XML element.">Obtient ou définit le type d'objet utilisé pour représenter l'élément XML.</summary>
      <returns vsli:raw="The &lt;see cref=&quot;T:System.Type&quot; /&gt; of the member.">
        <see cref="T:System.Type" /> du membre.</returns>
    </member>
    <member name="T:System.Xml.Serialization.XmlEnumAttribute">
      <summary vsli:raw="Controls how the &lt;see cref=&quot;T:System.Xml.Serialization.XmlSerializer&quot; /&gt; serializes an enumeration member.">Contrôle la manière dont <see cref="T:System.Xml.Serialization.XmlSerializer" /> sérialise un membre de l'énumération.</summary>
    </member>
    <member name="M:System.Xml.Serialization.XmlEnumAttribute.#ctor">
      <summary vsli:raw="Initializes a new instance of the &lt;see cref=&quot;T:System.Xml.Serialization.XmlEnumAttribute&quot; /&gt; class.">Initialise une nouvelle instance de la classe <see cref="T:System.Xml.Serialization.XmlEnumAttribute" />.</summary>
    </member>
    <member name="M:System.Xml.Serialization.XmlEnumAttribute.#ctor(System.String)">
      <summary vsli:raw="Initializes a new instance of the &lt;see cref=&quot;T:System.Xml.Serialization.XmlEnumAttribute&quot; /&gt; class, and specifies the XML value that the &lt;see cref=&quot;T:System.Xml.Serialization.XmlSerializer&quot; /&gt; generates or recognizes (when it serializes or deserializes the enumeration, respectively).">Initialise une nouvelle instance de la classe <see cref="T:System.Xml.Serialization.XmlEnumAttribute" /> et spécifie la valeur XML que <see cref="T:System.Xml.Serialization.XmlSerializer" /> génère ou reconnaît (selon qu'il sérialise ou désérialise l'énumération, respectivement).</summary>
      <param name="name" vsli:raw="The overriding name of the enumeration member.">Nom de substitution pour le membre de l'énumération.</param>
    </member>
    <member name="P:System.Xml.Serialization.XmlEnumAttribute.Name">
      <summary vsli:raw="Gets or sets the value generated in an XML-document instance when the &lt;see cref=&quot;T:System.Xml.Serialization.XmlSerializer&quot; /&gt; serializes an enumeration, or the value recognized when it deserializes the enumeration member.">Obtient ou définit la valeur générée dans une instance de document XML lorsque <see cref="T:System.Xml.Serialization.XmlSerializer" /> sérialise une énumération ou la valeur reconnue lors de la désérialisation du membre de l'énumération.</summary>
      <returns vsli:raw="The value generated in an XML-document instance when the &lt;see cref=&quot;T:System.Xml.Serialization.XmlSerializer&quot; /&gt; serializes the enumeration, or the value recognized when it is deserializes the enumeration member.">Valeur générée dans une instance de document XML lorsque <see cref="T:System.Xml.Serialization.XmlSerializer" /> sérialise l'énumération ou valeur reconnue lors de la désérialisation du membre de l'énumération.</returns>
    </member>
    <member name="T:System.Xml.Serialization.XmlIgnoreAttribute">
      <summary vsli:raw="Instructs the &lt;see cref=&quot;M:System.Xml.Serialization.XmlSerializer.Serialize(System.IO.TextWriter,System.Object)&quot; /&gt; method of the &lt;see cref=&quot;T:System.Xml.Serialization.XmlSerializer&quot; /&gt; not to serialize the public field or public read/write property value.">Commande à la méthode <see cref="M:System.Xml.Serialization.XmlSerializer.Serialize(System.IO.TextWriter,System.Object)" /> de <see cref="T:System.Xml.Serialization.XmlSerializer" /> de ne pas sérialiser la valeur du champ public ou de la propriété en lecture/écriture publique.</summary>
    </member>
    <member name="M:System.Xml.Serialization.XmlIgnoreAttribute.#ctor">
      <summary vsli:raw="Initializes a new instance of the &lt;see cref=&quot;T:System.Xml.Serialization.XmlIgnoreAttribute&quot; /&gt; class.">Initialise une nouvelle instance de la classe <see cref="T:System.Xml.Serialization.XmlIgnoreAttribute" />.</summary>
    </member>
    <member name="T:System.Xml.Serialization.XmlNamespaceDeclarationsAttribute">
      <summary vsli:raw="Specifies that the target property, parameter, return value, or class member contains prefixes associated with namespaces that are used within an XML document.">Spécifie que le paramètre, la valeur de retour, le membre de classe ou la propriété cible contient des préfixes associés aux espaces de noms utilisés dans un document XML.</summary>
    </member>
    <member name="M:System.Xml.Serialization.XmlNamespaceDeclarationsAttribute.#ctor">
      <summary vsli:raw="Initializes a new instance of the &lt;see cref=&quot;T:System.Xml.Serialization.XmlNamespaceDeclarationsAttribute&quot; /&gt; class.">Initialise une nouvelle instance de la classe <see cref="T:System.Xml.Serialization.XmlNamespaceDeclarationsAttribute" />.</summary>
    </member>
    <member name="T:System.Xml.Serialization.XmlRootAttribute">
      <summary vsli:raw="Controls XML serialization of the attribute target as an XML root element.">Contrôle la sérialisation XML de l'attribut cible en tant qu'élément racine XML.</summary>
    </member>
    <member name="M:System.Xml.Serialization.XmlRootAttribute.#ctor">
      <summary vsli:raw="Initializes a new instance of the &lt;see cref=&quot;T:System.Xml.Serialization.XmlRootAttribute&quot; /&gt; class.">Initialise une nouvelle instance de la classe <see cref="T:System.Xml.Serialization.XmlRootAttribute" />.</summary>
    </member>
    <member name="M:System.Xml.Serialization.XmlRootAttribute.#ctor(System.String)">
      <summary vsli:raw="Initializes a new instance of the &lt;see cref=&quot;T:System.Xml.Serialization.XmlRootAttribute&quot; /&gt; class and specifies the name of the XML root element.">Initialise une nouvelle instance de la classe <see cref="T:System.Xml.Serialization.XmlRootAttribute" /> et spécifie le nom de l'élément racine XML.</summary>
      <param name="elementName" vsli:raw="The name of the XML root element.">Nom de l'élément racine XML.</param>
    </member>
    <member name="P:System.Xml.Serialization.XmlRootAttribute.DataType">
      <summary vsli:raw="Gets or sets the XSD data type of the XML root element.">Obtient ou définit le type de données XSD de l'élément racine XML.</summary>
      <returns vsli:raw="An XSD (XML Schema Document) data type.">Type de données XSD (XML Schema Document).</returns>
    </member>
    <member name="P:System.Xml.Serialization.XmlRootAttribute.ElementName">
      <summary vsli:raw="Gets or sets the name of the XML element that is generated and recognized by the &lt;see cref=&quot;T:System.Xml.Serialization.XmlSerializer&quot; /&gt; class's &lt;see cref=&quot;M:System.Xml.Serialization.XmlSerializer.Serialize(System.IO.TextWriter,System.Object)&quot; /&gt; and &lt;see cref=&quot;M:System.Xml.Serialization.XmlSerializer.Deserialize(System.IO.Stream)&quot; /&gt; methods, respectively.">Obtient ou définit le nom de l'élément XML qui est généré et reconnu, respectivement, par les méthodes <see cref="T:System.Xml.Serialization.XmlSerializer" /> et <see cref="M:System.Xml.Serialization.XmlSerializer.Serialize(System.IO.TextWriter,System.Object)" /> de la classe <see cref="M:System.Xml.Serialization.XmlSerializer.Deserialize(System.IO.Stream)" />.</summary>
      <returns vsli:raw="The name of the XML root element that is generated and recognized in an XML-document instance. The default is the name of the serialized class.">Nom de l'élément racine XML qui est généré et reconnu dans une instance de document XML. Par défaut, il s'agit du nom de la classe sérialisée.</returns>
    </member>
    <member name="P:System.Xml.Serialization.XmlRootAttribute.IsNullable">
      <summary vsli:raw="Gets or sets a value that indicates whether the &lt;see cref=&quot;T:System.Xml.Serialization.XmlSerializer&quot; /&gt; must serialize a member that is set to &lt;see langword=&quot;null&quot; /&gt; into the &lt;see langword=&quot;xsi:nil&quot; /&gt; attribute set to &lt;see langword=&quot;true&quot; /&gt;.">Obtient ou définit une valeur qui indique si <see cref="T:System.Xml.Serialization.XmlSerializer" /> doit sérialiser un membre qui est <see langword="null" /> en un attribut <see langword="xsi:nil" /> dont la valeur est <see langword="true" />.</summary>
      <returns vsli:raw="&lt;see langword=&quot;true&quot; /&gt; if the &lt;see cref=&quot;T:System.Xml.Serialization.XmlSerializer&quot; /&gt; generates the &lt;see langword=&quot;xsi:nil&quot; /&gt; attribute; otherwise, &lt;see langword=&quot;false&quot; /&gt;.">
        <see langword="true" /> si <see cref="T:System.Xml.Serialization.XmlSerializer" /> génère l'attribut <see langword="xsi:nil" /> ; <see langword="false" /> sinon.</returns>
    </member>
    <member name="P:System.Xml.Serialization.XmlRootAttribute.Namespace">
      <summary vsli:raw="Gets or sets the namespace for the XML root element.">Obtient ou définit l'espace de noms de l'élément racine XML.</summary>
      <returns vsli:raw="The namespace for the XML element.">Espace de noms de l'élément XML.</returns>
    </member>
    <member name="T:System.Xml.Serialization.XmlSchemaProviderAttribute">
      <summary vsli:raw="When applied to a type, stores the name of a static method of the type that returns an XML schema and a &lt;see cref=&quot;T:System.Xml.XmlQualifiedName&quot; /&gt; (or &lt;see cref=&quot;T:System.Xml.Schema.XmlSchemaType&quot; /&gt; for anonymous types) that controls the serialization of the type.">Quand il est appliqué à un type, stocke le nom d’une méthode statique du type qui retourne un schéma XML et un <see cref="T:System.Xml.XmlQualifiedName" /> (ou <see cref="T:System.Xml.Schema.XmlSchemaType" /> pour les types anonymes) qui contrôle la sérialisation du type.</summary>
    </member>
    <member name="M:System.Xml.Serialization.XmlSchemaProviderAttribute.#ctor(System.String)">
      <summary vsli:raw="Initializes a new instance of the &lt;see cref=&quot;T:System.Xml.Serialization.XmlSchemaProviderAttribute&quot; /&gt; class, taking the name of the static method that supplies the type's XML schema.">Initialise une nouvelle instance de la classe <see cref="T:System.Xml.Serialization.XmlSchemaProviderAttribute" />, en acceptant le nom de la méthode statique qui fournit le schéma XML du type.</summary>
      <param name="methodName" vsli:raw="The name of the static method that must be implemented.">Nom de la méthode statique qui doit être implémentée.</param>
    </member>
    <member name="P:System.Xml.Serialization.XmlSchemaProviderAttribute.IsAny">
      <summary vsli:raw="Gets or sets a value that determines whether the target class is a wildcard, or that the schema for the class has contains only an &lt;see langword=&quot;xs:any&quot; /&gt; element.">Obtient ou définit une valeur qui détermine si la classe cible est un caractère générique ou si le schéma de la classe contient uniquement un élément <see langword="xs:any" />.</summary>
      <returns vsli:raw="&lt;see langword=&quot;true&quot; /&gt;, if the class is a wildcard, or if the schema contains only the &lt;see langword=&quot;xs:any&quot; /&gt; element; otherwise, &lt;see langword=&quot;false&quot; /&gt;.">
        <see langword="true" /> si la classe est un caractère générique ou si le schéma contient uniquement l’élément <see langword="xs:any" /> ; sinon, <see langword="false" />.</returns>
    </member>
    <member name="P:System.Xml.Serialization.XmlSchemaProviderAttribute.MethodName">
      <summary vsli:raw="Gets the name of the static method that supplies the type's XML schema and the name of its XML Schema data type.">Obtient le nom de la méthode statique qui fournit le schéma XML du type et le nom du type de données de son schéma XML.</summary>
      <returns vsli:raw="The name of the method that is invoked by the XML infrastructure to return an XML schema.">Nom de la méthode appelée par l’infrastructure XML pour retourner un schéma XML.</returns>
    </member>
    <member name="T:System.Xml.Serialization.XmlSerializerNamespaces">
      <summary vsli:raw="Contains the XML namespaces and prefixes that the &lt;see cref=&quot;T:System.Xml.Serialization.XmlSerializer&quot; /&gt; uses to generate qualified names in an XML-document instance.">Contient les espaces de noms et préfixes XML utilisés par <see cref="T:System.Xml.Serialization.XmlSerializer" /> pour générer des noms qualifiés dans une instance de document XML.</summary>
    </member>
    <member name="M:System.Xml.Serialization.XmlSerializerNamespaces.#ctor">
      <summary vsli:raw="Initializes a new instance of the &lt;see cref=&quot;T:System.Xml.Serialization.XmlSerializerNamespaces&quot; /&gt; class.">Initialise une nouvelle instance de la classe <see cref="T:System.Xml.Serialization.XmlSerializerNamespaces" />.</summary>
    </member>
    <member name="M:System.Xml.Serialization.XmlSerializerNamespaces.#ctor(System.Xml.Serialization.XmlSerializerNamespaces)">
      <summary vsli:raw="Initializes a new instance of the &lt;see cref=&quot;T:System.Xml.Serialization.XmlSerializerNamespaces&quot; /&gt; class, using the specified instance of &lt;see langword=&quot;XmlSerializerNamespaces&quot; /&gt; containing the collection of prefix and namespace pairs.">Initialise une nouvelle instance de la classe <see cref="T:System.Xml.Serialization.XmlSerializerNamespaces" />, à l'aide de l'instance spécifiée de <see langword="XmlSerializerNamespaces" /> contenant la collection de paires préfixe-espace de noms.</summary>
      <param name="namespaces" vsli:raw="An instance of the &lt;see cref=&quot;T:System.Xml.Serialization.XmlSerializerNamespaces&quot; /&gt; containing the namespace and prefix pairs.">Instance de <see cref="T:System.Xml.Serialization.XmlSerializerNamespaces" /> contenant les paires espace de noms-préfixe.</param>
    </member>
    <member name="M:System.Xml.Serialization.XmlSerializerNamespaces.#ctor(System.Xml.XmlQualifiedName[])">
      <summary vsli:raw="Initializes a new instance of the &lt;see cref=&quot;T:System.Xml.Serialization.XmlSerializerNamespaces&quot; /&gt; class.">Initialise une nouvelle instance de la classe <see cref="T:System.Xml.Serialization.XmlSerializerNamespaces" />.</summary>
      <param name="namespaces" vsli:raw="An array of &lt;see cref=&quot;T:System.Xml.XmlQualifiedName&quot; /&gt; objects.">Tableau d'objets <see cref="T:System.Xml.XmlQualifiedName" />.</param>
    </member>
    <member name="M:System.Xml.Serialization.XmlSerializerNamespaces.Add(System.String,System.String)">
      <summary vsli:raw="Adds a prefix and namespace pair to an &lt;see cref=&quot;T:System.Xml.Serialization.XmlSerializerNamespaces&quot; /&gt; object.">Ajoute une paire préfixe/espace de noms à un objet <see cref="T:System.Xml.Serialization.XmlSerializerNamespaces" />.</summary>
      <param name="prefix" vsli:raw="The prefix associated with an XML namespace.">Préfixe associé à un espace de noms XML.</param>
      <param name="ns" vsli:raw="An XML namespace.">Espace de noms XML.</param>
    </member>
    <member name="M:System.Xml.Serialization.XmlSerializerNamespaces.ToArray">
      <summary vsli:raw="Gets the array of prefix and namespace pairs in an &lt;see cref=&quot;T:System.Xml.Serialization.XmlSerializerNamespaces&quot; /&gt; object.">Obtient le tableau de paires préfixe/espace de noms dans un objet <see cref="T:System.Xml.Serialization.XmlSerializerNamespaces" />.</summary>
      <returns vsli:raw="An array of &lt;see cref=&quot;T:System.Xml.XmlQualifiedName&quot; /&gt; objects that are used as qualified names in an XML document.">Tableau d'objets <see cref="T:System.Xml.XmlQualifiedName" /> utilisés en tant que noms qualifiés dans un document XML.</returns>
    </member>
    <member name="P:System.Xml.Serialization.XmlSerializerNamespaces.Count">
      <summary vsli:raw="Gets the number of prefix and namespace pairs in the collection.">Obtient le nombre de paires préfixe/espace de noms dans la collection.</summary>
      <returns vsli:raw="The number of prefix and namespace pairs in the collection.">Nombre de paires préfixe/espace de noms dans la collection.</returns>
    </member>
    <member name="T:System.Xml.Serialization.XmlTextAttribute">
      <summary vsli:raw="Indicates to the &lt;see cref=&quot;T:System.Xml.Serialization.XmlSerializer&quot; /&gt; that the member must be treated as XML text when the class that contains it is serialized or deserialized.">Indique à <see cref="T:System.Xml.Serialization.XmlSerializer" /> que le membre doit être traité comme du texte XML lorsque la classe qui le contient est sérialisée ou désérialisée.</summary>
    </member>
    <member name="M:System.Xml.Serialization.XmlTextAttribute.#ctor">
      <summary vsli:raw="Initializes a new instance of the &lt;see cref=&quot;T:System.Xml.Serialization.XmlTextAttribute&quot; /&gt; class.">Initialise une nouvelle instance de la classe <see cref="T:System.Xml.Serialization.XmlTextAttribute" />.</summary>
    </member>
    <member name="M:System.Xml.Serialization.XmlTextAttribute.#ctor(System.Type)">
      <summary vsli:raw="Initializes a new instance of the &lt;see cref=&quot;T:System.Xml.Serialization.XmlTextAttribute&quot; /&gt; class.">Initialise une nouvelle instance de la classe <see cref="T:System.Xml.Serialization.XmlTextAttribute" />.</summary>
      <param name="type" vsli:raw="The &lt;see cref=&quot;T:System.Type&quot; /&gt; of the member to be serialized.">
        <see cref="T:System.Type" /> du membre à sérialiser.</param>
    </member>
    <member name="P:System.Xml.Serialization.XmlTextAttribute.DataType">
      <summary vsli:raw="Gets or sets the XML Schema definition language (XSD) data type of the text generated by the &lt;see cref=&quot;T:System.Xml.Serialization.XmlSerializer&quot; /&gt;.">Obtient ou définit le type de données XSD (XML Schema Definition) du texte généré par <see cref="T:System.Xml.Serialization.XmlSerializer" />.</summary>
      <exception cref="T:System.Exception" vsli:raw="The XML Schema data type you have specified cannot be mapped to the .NET data type.">Le type de données de schéma XML que vous avez spécifié ne peut pas être mappé au type de données .NET.</exception>
      <exception cref="T:System.InvalidOperationException" vsli:raw="The XML Schema data type you have specified is invalid for the property and cannot be converted to the member type.">Le type de donnée de schéma XML que vous avez spécifié n'est pas valide pour la propriété et ne peut pas être converti dans le type du membre.</exception>
      <returns vsli:raw="An XML Schema (XSD) data type.">Type de données de schéma XML (XSD).</returns>
    </member>
    <member name="P:System.Xml.Serialization.XmlTextAttribute.Type">
      <summary vsli:raw="Gets or sets the type of the member.">Obtient ou définit le type du membre.</summary>
      <returns vsli:raw="The &lt;see cref=&quot;T:System.Type&quot; /&gt; of the member.">
        <see cref="T:System.Type" /> du membre.</returns>
    </member>
    <member name="T:System.Xml.ValidationType">
      <summary vsli:raw="Specifies the type of validation to perform.">Spécifie le type de validation à effectuer.</summary>
    </member>
    <member name="F:System.Xml.ValidationType.Auto">
      <summary vsli:raw="Validates if DTD or schema information is found. &#xA;&#xA;Starting with .NET Framework 2.0, this field is obsolete. It applies only to the obsolete &lt;see cref=&quot;T:System.Xml.XmlValidatingReader&quot; /&gt; class.">Effectue la validation si des informations DTD ou de schéma sont trouvées. 

À partir de .NET Framework 2.0, ce champ est obsolète. S'applique uniquement à la classe <see cref="T:System.Xml.XmlValidatingReader" /> obsolète.</summary>
    </member>
    <member name="F:System.Xml.ValidationType.DTD">
      <summary vsli:raw="Validates according to the DTD.">Est validé conformément au DTD.</summary>
    </member>
    <member name="F:System.Xml.ValidationType.None">
      <summary vsli:raw="No validation is performed, and no validation errors are thrown. This setting creates an XML 1.0 compliant non-validating parser.&#xA;        &#xA;Calls to &lt;see cref=&quot;M:System.Xml.XmlReader.ResolveEntity&quot; /&gt; report default attributes and resolve general entities. The DOCTYPE is not used for validation purposes.">Aucune validation n'est effectuée et aucune erreur de validation n'est levée. Ce paramètre crée un analyseur non validant conforme au langage XML 1.0.
        
Les appels à <see cref="M:System.Xml.XmlReader.ResolveEntity" /> signalent les attributs par défaut et résolvent les entités générales. L'élément DOCTYPE n'est pas utilisé à des fins de validation.</summary>
    </member>
    <member name="F:System.Xml.ValidationType.Schema">
      <summary vsli:raw="Validate according to XML Schema definition language (XSD) schemas, including inline XML Schemas. XML Schemas are associated with namespace URIs either by using the &lt;see langword=&quot;schemaLocation&quot; /&gt; attribute or the provided &lt;see langword=&quot;Schemas&quot; /&gt; property.">Effectue une validation en fonction des schémas XSD (XML Schema Definition), y compris des schémas XML inline. Les schémas XML sont associés à des URI d'espace de noms, en utilisant l'attribut <see langword="schemaLocation" /> ou la propriété <see langword="Schemas" /> fournie.</summary>
    </member>
    <member name="F:System.Xml.ValidationType.XDR">
      <summary vsli:raw="Validate according to XML-Data Reduced (XDR) schemas, including inline XDR schemas. XDR schemas are recognized using the &lt;see langword=&quot;x-schema&quot; /&gt; namespace prefix or the &lt;see cref=&quot;P:System.Xml.XmlValidatingReader.Schemas&quot; /&gt; property.&#xA;        &#xA;Starting with .NET Framework 2.0, this field is obsolete. It applies only to the obsolete &lt;see cref=&quot;T:System.Xml.XmlValidatingReader&quot; /&gt; class.">Effectue une validation en fonction des schémas XDR (XML-Data Reduced), y compris des schémas XDR inline. Les schémas XDR sont reconnus à l'aide du préfixe d'espace de noms <see langword="x-schema" /> ou de la propriété <see cref="P:System.Xml.XmlValidatingReader.Schemas" />.
        
À partir de .NET Framework 2.0, ce champ est obsolète. S'applique uniquement à la classe <see cref="T:System.Xml.XmlValidatingReader" /> obsolète.</summary>
    </member>
    <member name="T:System.Xml.WhitespaceHandling">
      <summary vsli:raw="Specifies how white space is handled.">Spécifie la façon dont est géré l'espace blanc.</summary>
    </member>
    <member name="F:System.Xml.WhitespaceHandling.All">
      <summary vsli:raw="Return &lt;see langword=&quot;Whitespace&quot; /&gt; and &lt;see langword=&quot;SignificantWhitespace&quot; /&gt; nodes. This is the default.">Retourner les nœuds <see langword="Whitespace" /> et <see langword="SignificantWhitespace" />. Il s'agit de la valeur par défaut.</summary>
    </member>
    <member name="F:System.Xml.WhitespaceHandling.None">
      <summary vsli:raw="Return no &lt;see langword=&quot;Whitespace&quot; /&gt; and no &lt;see langword=&quot;SignificantWhitespace&quot; /&gt; nodes.">Ne retourner aucun nœud <see langword="Whitespace" /> ni aucun nœud <see langword="SignificantWhitespace" />.</summary>
    </member>
    <member name="F:System.Xml.WhitespaceHandling.Significant">
      <summary vsli:raw="Return &lt;see langword=&quot;SignificantWhitespace&quot; /&gt; nodes only.">Retourner uniquement les nœuds <see langword="SignificantWhitespace" />.</summary>
    </member>
    <member name="T:System.Xml.WriteState">
      <summary vsli:raw="Specifies the state of the &lt;see cref=&quot;T:System.Xml.XmlWriter&quot; /&gt;.">Spécifie l'état de la classe <see cref="T:System.Xml.XmlWriter" />.</summary>
    </member>
    <member name="F:System.Xml.WriteState.Attribute">
      <summary vsli:raw="Indicates that an attribute value is being written.">Indique qu'une valeur d'attribut est en cours d'écriture.</summary>
    </member>
    <member name="F:System.Xml.WriteState.Closed">
      <summary vsli:raw="Indicates that the &lt;see cref=&quot;M:System.Xml.XmlWriter.Close&quot; /&gt; method has been called.">Indique que la méthode <see cref="M:System.Xml.XmlWriter.Close" /> a été appelée.</summary>
    </member>
    <member name="F:System.Xml.WriteState.Content">
      <summary vsli:raw="Indicates that element content is being written.">Indique que le contenu d'élément est en cours d'écriture.</summary>
    </member>
    <member name="F:System.Xml.WriteState.Element">
      <summary vsli:raw="Indicates that an element start tag is being written.">Indique qu'une balise de début d'élément est en cours d'écriture.</summary>
    </member>
    <member name="F:System.Xml.WriteState.Error">
      <summary vsli:raw="An exception has been thrown, which has left the &lt;see cref=&quot;T:System.Xml.XmlWriter&quot; /&gt; in an invalid state. You can call the &lt;see cref=&quot;M:System.Xml.XmlWriter.Close&quot; /&gt; method to put the &lt;see cref=&quot;T:System.Xml.XmlWriter&quot; /&gt; in the &lt;see cref=&quot;F:System.Xml.WriteState.Closed&quot; /&gt; state. Any other &lt;see cref=&quot;T:System.Xml.XmlWriter&quot; /&gt; method calls results in an &lt;see cref=&quot;T:System.InvalidOperationException&quot; /&gt;.&#xA;&#xA;This field was added in .NET Framework 2.0.">Une exception a été levée et a laissé le <see cref="T:System.Xml.XmlWriter" /> dans un état non valide. Vous pouvez appeler la méthode <see cref="M:System.Xml.XmlWriter.Close" /> pour mettre le <see cref="T:System.Xml.XmlWriter" /> à l'état <see cref="F:System.Xml.WriteState.Closed" />. Toute autre méthode <see cref="T:System.Xml.XmlWriter" /> appelle les résultats dans un <see cref="T:System.InvalidOperationException" />.

Ce champ a été ajouté dans .NET Framework 2.0.</summary>
    </member>
    <member name="F:System.Xml.WriteState.Prolog">
      <summary vsli:raw="Indicates that the prolog is being written.">Indique que le prologue est en cours d'écriture.</summary>
    </member>
    <member name="F:System.Xml.WriteState.Start">
      <summary vsli:raw="Indicates that a Write method has not yet been called.">Indique qu'une méthode Write n'a pas encore été appelée.</summary>
    </member>
    <member name="T:System.Xml.XmlAttribute">
      <summary vsli:raw="Represents an attribute. Valid and default values for the attribute are defined in a document type definition (DTD) or schema.">Représente un attribut. Les valeurs valides et par défaut de l'attribut sont définies dans une définition de type de document (DTD) ou dans un schéma.</summary>
    </member>
    <member name="M:System.Xml.XmlAttribute.#ctor(System.String,System.String,System.String,System.Xml.XmlDocument)">
      <summary vsli:raw="Initializes a new instance of the &lt;see cref=&quot;T:System.Xml.XmlAttribute&quot; /&gt; class.">Initialise une nouvelle instance de la classe <see cref="T:System.Xml.XmlAttribute" />.</summary>
      <param name="prefix" vsli:raw="The namespace prefix.">Le préfixe de l'espace de noms.</param>
      <param name="localName" vsli:raw="The local name of the attribute.">Le nom local de l'attribut.</param>
      <param name="namespaceURI" vsli:raw="The namespace uniform resource identifier (URI).">URI (Uniform Resource Identifier) de l'espace de noms.</param>
      <param name="doc" vsli:raw="The parent XML document.">Document XML parent.</param>
    </member>
    <member name="M:System.Xml.XmlAttribute.AppendChild(System.Xml.XmlNode)">
      <summary vsli:raw="Adds the specified node to the end of the list of child nodes, of this node.">Ajoute le nœud spécifié à la fin de la liste des nœuds enfants de ce nœud.</summary>
      <param name="newChild" vsli:raw="The &lt;see cref=&quot;T:System.Xml.XmlNode&quot; /&gt; to add.">
        <see cref="T:System.Xml.XmlNode" /> à ajouter.</param>
      <exception cref="T:System.InvalidOperationException" vsli:raw="This node is of a type that does not allow child nodes of the type of the &lt;paramref name=&quot;newChild&quot; /&gt; node.  &#xA;  &#xA; The &lt;paramref name=&quot;newChild&quot; /&gt; is an ancestor of this node.">Le type de ce nœud n'autorise pas les nœuds enfants possédant le type de nœud <paramref name="newChild" />.  
  
<paramref name="newChild" /> est un ancêtre de ce nœud.</exception>
      <exception cref="T:System.ArgumentException" vsli:raw="The &lt;paramref name=&quot;newChild&quot; /&gt; was created from a different document than the one that created this node.  &#xA;  &#xA; This node is read-only.">
        <paramref name="newChild" /> a été créé à partir d'un document différent de celui qui a créé ce nœud.  
  
Ce nœud est en lecture seule.</exception>
      <returns vsli:raw="The &lt;see cref=&quot;T:System.Xml.XmlNode&quot; /&gt; added.">
        <see cref="T:System.Xml.XmlNode" /> ajouté.</returns>
    </member>
    <member name="M:System.Xml.XmlAttribute.CloneNode(System.Boolean)">
      <summary vsli:raw="Creates a duplicate of this node.">Crée un doublon de ce nœud.</summary>
      <param name="deep" vsli:raw="&lt;see langword=&quot;true&quot; /&gt; to recursively clone the subtree under the specified node; &lt;see langword=&quot;false&quot; /&gt; to clone only the node itself.">
        <see langword="true" /> pour cloner de manière récursive le sous-arbre sous le nœud spécifié ; <see langword="false" /> pour cloner uniquement le nœud lui-même.</param>
      <returns vsli:raw="The duplicate node.">Doublon du nœud.</returns>
    </member>
    <member name="M:System.Xml.XmlAttribute.InsertAfter(System.Xml.XmlNode,System.Xml.XmlNode)">
      <summary vsli:raw="Inserts the specified node immediately after the specified reference node.">Insère le nœud spécifié immédiatement après le nœud de référence spécifié.</summary>
      <param name="newChild" vsli:raw="The &lt;see cref=&quot;T:System.Xml.XmlNode&quot; /&gt; to insert.">
        <see cref="T:System.Xml.XmlNode" /> à insérer.</param>
      <param name="refChild" vsli:raw="The &lt;see cref=&quot;T:System.Xml.XmlNode&quot; /&gt; that is the reference node. The &lt;paramref name=&quot;newChild&quot; /&gt; is placed after the &lt;paramref name=&quot;refChild&quot; /&gt;.">
        <see cref="T:System.Xml.XmlNode" /> qui est le nœud de référence. <paramref name="newChild" /> est placé après <paramref name="refChild" />.</param>
      <exception cref="T:System.InvalidOperationException" vsli:raw="This node is of a type that does not allow child nodes of the type of the &lt;paramref name=&quot;newChild&quot; /&gt; node.  &#xA;  &#xA; The &lt;paramref name=&quot;newChild&quot; /&gt; is an ancestor of this node.">Le type de ce nœud n'autorise pas les nœuds enfants possédant le type de nœud <paramref name="newChild" />.  
  
<paramref name="newChild" /> est un ancêtre de ce nœud.</exception>
      <exception cref="T:System.ArgumentException" vsli:raw="The &lt;paramref name=&quot;newChild&quot; /&gt; was created from a different document than the one that created this node.  &#xA;  &#xA; The &lt;paramref name=&quot;refChild&quot; /&gt; is not a child of this node.  &#xA;  &#xA; This node is read-only.">
        <paramref name="newChild" /> a été créé à partir d'un document différent de celui qui a créé ce nœud.  
  
<paramref name="refChild" /> n'est pas un enfant de ce nœud.  
  
Ce nœud est en lecture seule.</exception>
      <returns vsli:raw="The &lt;see cref=&quot;T:System.Xml.XmlNode&quot; /&gt; inserted.">
        <see cref="T:System.Xml.XmlNode" /> inséré.</returns>
    </member>
    <member name="M:System.Xml.XmlAttribute.InsertBefore(System.Xml.XmlNode,System.Xml.XmlNode)">
      <summary vsli:raw="Inserts the specified node immediately before the specified reference node.">Insère le nœud spécifié immédiatement avant le nœud de référence spécifié.</summary>
      <param name="newChild" vsli:raw="The &lt;see cref=&quot;T:System.Xml.XmlNode&quot; /&gt; to insert.">
        <see cref="T:System.Xml.XmlNode" /> à insérer.</param>
      <param name="refChild" vsli:raw="The &lt;see cref=&quot;T:System.Xml.XmlNode&quot; /&gt; that is the reference node. The &lt;paramref name=&quot;newChild&quot; /&gt; is placed before this node.">
        <see cref="T:System.Xml.XmlNode" /> qui est le nœud de référence. <paramref name="newChild" /> est placé avant ce nœud.</param>
      <exception cref="T:System.InvalidOperationException" vsli:raw="The current node is of a type that does not allow child nodes of the type of the &lt;paramref name=&quot;newChild&quot; /&gt; node.  &#xA;  &#xA; The &lt;paramref name=&quot;newChild&quot; /&gt; is an ancestor of this node.">Le type du nœud actuel n'autorise pas les nœuds enfants possédant le type de nœud <paramref name="newChild" />.  
  
<paramref name="newChild" /> est un ancêtre de ce nœud.</exception>
      <exception cref="T:System.ArgumentException" vsli:raw="The &lt;paramref name=&quot;newChild&quot; /&gt; was created from a different document than the one that created this node.  &#xA;  &#xA; The &lt;paramref name=&quot;refChild&quot; /&gt; is not a child of this node.  &#xA;  &#xA; This node is read-only.">
        <paramref name="newChild" /> a été créé à partir d'un document différent de celui qui a créé ce nœud.  
  
<paramref name="refChild" /> n'est pas un enfant de ce nœud.  
  
Ce nœud est en lecture seule.</exception>
      <returns vsli:raw="The &lt;see cref=&quot;T:System.Xml.XmlNode&quot; /&gt; inserted.">
        <see cref="T:System.Xml.XmlNode" /> inséré.</returns>
    </member>
    <member name="M:System.Xml.XmlAttribute.PrependChild(System.Xml.XmlNode)">
      <summary vsli:raw="Adds the specified node to the beginning of the list of child nodes for this node.">Ajoute le nœud spécifié au début de la liste des nœuds enfants de ce nœud.</summary>
      <param name="newChild" vsli:raw="The &lt;see cref=&quot;T:System.Xml.XmlNode&quot; /&gt; to add. If it is an &lt;see cref=&quot;T:System.Xml.XmlDocumentFragment&quot; /&gt;, the entire contents of the document fragment are moved into the child list of this node.">
        <see cref="T:System.Xml.XmlNode" /> à ajouter. S'il s'agit de <see cref="T:System.Xml.XmlDocumentFragment" />, le contenu entier du fragment de document est déplacé dans la liste enfant de ce nœud.</param>
      <exception cref="T:System.InvalidOperationException" vsli:raw="This node is of a type that does not allow child nodes of the type of the &lt;paramref name=&quot;newChild&quot; /&gt; node.  &#xA;  &#xA; The &lt;paramref name=&quot;newChild&quot; /&gt; is an ancestor of this node.">Le type de ce nœud n'autorise pas les nœuds enfants possédant le type de nœud <paramref name="newChild" />.  
  
<paramref name="newChild" /> est un ancêtre de ce nœud.</exception>
      <exception cref="T:System.ArgumentException" vsli:raw="The &lt;paramref name=&quot;newChild&quot; /&gt; was created from a different document than the one that created this node.  &#xA;  &#xA; This node is read-only.">
        <paramref name="newChild" /> a été créé à partir d'un document différent de celui qui a créé ce nœud.  
  
Ce nœud est en lecture seule.</exception>
      <returns vsli:raw="The &lt;see cref=&quot;T:System.Xml.XmlNode&quot; /&gt; added.">
        <see cref="T:System.Xml.XmlNode" /> ajouté.</returns>
    </member>
    <member name="M:System.Xml.XmlAttribute.RemoveChild(System.Xml.XmlNode)">
      <summary vsli:raw="Removes the specified child node.">Supprime le nœud enfant spécifié.</summary>
      <param name="oldChild" vsli:raw="The &lt;see cref=&quot;T:System.Xml.XmlNode&quot; /&gt; to remove.">
        <see cref="T:System.Xml.XmlNode" /> à supprimer.</param>
      <exception cref="T:System.ArgumentException" vsli:raw="The &lt;paramref name=&quot;oldChild&quot; /&gt; is not a child of this node. Or this node is read-only.">
        <paramref name="oldChild" /> n'est pas un enfant de ce nœud. ou bien ce nœud est en lecture seule.</exception>
      <returns vsli:raw="The &lt;see cref=&quot;T:System.Xml.XmlNode&quot; /&gt; removed.">
        <see cref="T:System.Xml.XmlNode" /> supprimé.</returns>
    </member>
    <member name="M:System.Xml.XmlAttribute.ReplaceChild(System.Xml.XmlNode,System.Xml.XmlNode)">
      <summary vsli:raw="Replaces the child node specified with the new child node specified.">Remplace le nœud enfant spécifié avec le nouveau nœud enfant spécifié.</summary>
      <param name="newChild" vsli:raw="The new child &lt;see cref=&quot;T:System.Xml.XmlNode&quot; /&gt;.">Nouveau <see cref="T:System.Xml.XmlNode" /> enfant.</param>
      <param name="oldChild" vsli:raw="The &lt;see cref=&quot;T:System.Xml.XmlNode&quot; /&gt; to replace.">
        <see cref="T:System.Xml.XmlNode" /> à remplacer.</param>
      <exception cref="T:System.InvalidOperationException" vsli:raw="This node is of a type that does not allow child nodes of the type of the &lt;paramref name=&quot;newChild&quot; /&gt; node.  &#xA;  &#xA; The &lt;paramref name=&quot;newChild&quot; /&gt; is an ancestor of this node.">Le type de ce nœud n'autorise pas les nœuds enfants possédant le type de nœud <paramref name="newChild" />.  
  
<paramref name="newChild" /> est un ancêtre de ce nœud.</exception>
      <exception cref="T:System.ArgumentException" vsli:raw="The &lt;paramref name=&quot;newChild&quot; /&gt; was created from a different document than the one that created this node.  &#xA;  &#xA; This node is read-only.  &#xA;  &#xA; The &lt;paramref name=&quot;oldChild&quot; /&gt; is not a child of this node.">
        <paramref name="newChild" /> a été créé à partir d'un document différent de celui qui a créé ce nœud.  
  
Ce nœud est en lecture seule.  
  
<paramref name="oldChild" /> n'est pas un enfant de ce nœud.</exception>
      <returns vsli:raw="The &lt;see cref=&quot;T:System.Xml.XmlNode&quot; /&gt; replaced.">
        <see cref="T:System.Xml.XmlNode" /> remplacé.</returns>
    </member>
    <member name="M:System.Xml.XmlAttribute.WriteContentTo(System.Xml.XmlWriter)">
      <summary vsli:raw="Saves all the children of the node to the specified &lt;see cref=&quot;T:System.Xml.XmlWriter&quot; /&gt;.">Enregistre tous les enfants du nœud dans l’élément <see cref="T:System.Xml.XmlWriter" /> spécifié.</summary>
      <param name="w" vsli:raw="The &lt;see langword=&quot;XmlWriter&quot; /&gt; to which you want to save.">L'élément <see langword="XmlWriter" /> dans lequel vous voulez enregistrer.</param>
    </member>
    <member name="M:System.Xml.XmlAttribute.WriteTo(System.Xml.XmlWriter)">
      <summary vsli:raw="Saves the node to the specified &lt;see cref=&quot;T:System.Xml.XmlWriter&quot; /&gt;.">Enregistre le nœud dans le <see cref="T:System.Xml.XmlWriter" /> spécifié.</summary>
      <param name="w" vsli:raw="The &lt;see langword=&quot;XmlWriter&quot; /&gt; to which you want to save.">L'élément <see langword="XmlWriter" /> dans lequel vous voulez enregistrer.</param>
    </member>
    <member name="P:System.Xml.XmlAttribute.BaseURI">
      <summary vsli:raw="Gets the base Uniform Resource Identifier (URI) of the node.">Obtient l'URI (Uniform Resource Identifier) de base du nœud.</summary>
      <returns vsli:raw="The location from which the node was loaded or String.Empty if the node has no base URI. Attribute nodes have the same base URI as their owner element. If an attribute node does not have an owner element, &lt;see langword=&quot;BaseURI&quot; /&gt; returns String.Empty.">Emplacement à partir duquel le nœud a été chargé ou String.Empty si le nœud n'a pas d'URI de base. Les nœuds d'attributs ont la même URI de base que leur élément propriétaire. Si un nœud d'attribut n'a pas d'élément propriétaire, <see langword="BaseURI" /> retourne String.Empty.</returns>
    </member>
    <member name="P:System.Xml.XmlAttribute.InnerText">
      <summary vsli:raw="Sets the concatenated values of the node and all its children.">Définit les valeurs concaténées du nœud et de tous ses enfants.</summary>
      <returns vsli:raw="The concatenated values of the node and all its children. For attribute nodes, this property has the same functionality as the &lt;see cref=&quot;P:System.Xml.XmlAttribute.Value&quot; /&gt; property.">Valeurs concaténées du nœud et de tous ses enfants. Pour les nœuds d'attribut, cette propriété remplit la même fonction que la propriété <see cref="P:System.Xml.XmlAttribute.Value" />.</returns>
    </member>
    <member name="P:System.Xml.XmlAttribute.InnerXml">
      <summary vsli:raw="Sets the value of the attribute.">Définit la valeur de l'attribut.</summary>
      <exception cref="T:System.Xml.XmlException" vsli:raw="The XML specified when setting this property is not well-formed.">Le code XML spécifié pendant la définition de cette propriété n’est pas bien formé.</exception>
      <returns vsli:raw="The attribute value.">Valeur de l'attribut</returns>
    </member>
    <member name="P:System.Xml.XmlAttribute.LocalName">
      <summary vsli:raw="Gets the local name of the node.">Obtient le nom local du nœud.</summary>
      <returns vsli:raw="The name of the attribute node with the prefix removed. In the following example &amp;lt;book bk:genre= 'novel'&amp;gt;, the &lt;see langword=&quot;LocalName&quot; /&gt; of the attribute is &lt;see langword=&quot;genre&quot; /&gt;.">Nom du nœud d'attribut sans le préfixe. Dans l’exemple de &lt; livre BK : genre = 'nouveau' &gt; , le <see langword="LocalName" /> de l’attribut est <see langword="genre" /> .</returns>
    </member>
    <member name="P:System.Xml.XmlAttribute.Name">
      <summary vsli:raw="Gets the qualified name of the node.">Obtient le nom qualifié du nœud.</summary>
      <returns vsli:raw="The qualified name of the attribute node.">Nom qualifié du nœud d'attribut.</returns>
    </member>
    <member name="P:System.Xml.XmlAttribute.NamespaceURI">
      <summary vsli:raw="Gets the namespace URI of this node.">Obtient l'URI de l'espace de noms de ce nœud.</summary>
      <returns vsli:raw="The namespace URI of this node. If the attribute is not explicitly given a namespace, this property returns String.Empty.">Espace de noms d'URI du nœud. Si l'attribut ne se voit pas assigner un espace de noms de manière explicite, cette propriété retourne String.Empty.</returns>
    </member>
    <member name="P:System.Xml.XmlAttribute.NodeType">
      <summary vsli:raw="Gets the type of the current node.">Obtient le type du nœud actuel.</summary>
      <returns vsli:raw="The node type for &lt;see langword=&quot;XmlAttribute&quot; /&gt; nodes is XmlNodeType.Attribute.">Le type des nœuds <see langword="XmlAttribute" /> est XmlNodeType.Attribute.</returns>
    </member>
    <member name="P:System.Xml.XmlAttribute.OwnerDocument">
      <summary vsli:raw="Gets the &lt;see cref=&quot;T:System.Xml.XmlDocument&quot; /&gt; to which this node belongs.">Obtient le <see cref="T:System.Xml.XmlDocument" /> auquel ce nœud appartient.</summary>
      <returns vsli:raw="An XML document to which this node belongs.">Un document XML auquel ce nœud appartient.</returns>
    </member>
    <member name="P:System.Xml.XmlAttribute.OwnerElement">
      <summary vsli:raw="Gets the &lt;see cref=&quot;T:System.Xml.XmlElement&quot; /&gt; to which the attribute belongs.">Obtient le <see cref="T:System.Xml.XmlElement" /> auquel appartient l'attribut.</summary>
      <returns vsli:raw="The &lt;see langword=&quot;XmlElement&quot; /&gt; that the attribute belongs to or &lt;see langword=&quot;null&quot; /&gt; if this attribute is not part of an &lt;see langword=&quot;XmlElement&quot; /&gt;.">
        <see langword="XmlElement" /> auquel appartient l'attribut, ou <see langword="null" /> si celui-ci ne fait pas partie d'un <see langword="XmlElement" />.</returns>
    </member>
    <member name="P:System.Xml.XmlAttribute.ParentNode">
      <summary vsli:raw="Gets the parent of this node. For &lt;see langword=&quot;XmlAttribute&quot; /&gt; nodes, this property always returns &lt;see langword=&quot;null&quot; /&gt;.">Obtient le parent de ce nœud. Pour les nœuds <see langword="XmlAttribute" />, cette propriété retourne toujours <see langword="null" />.</summary>
      <returns vsli:raw="For &lt;see langword=&quot;XmlAttribute&quot; /&gt; nodes, this property always returns &lt;see langword=&quot;null&quot; /&gt;.">Pour les nœuds <see langword="XmlAttribute" />, cette propriété retourne toujours <see langword="null" />.</returns>
    </member>
    <member name="P:System.Xml.XmlAttribute.Prefix">
      <summary vsli:raw="Gets or sets the namespace prefix of this node.">Obtient ou définit le préfixe de l'espace de noms de ce nœud.</summary>
      <exception cref="T:System.ArgumentException" vsli:raw="This node is read-only.">Ce nœud est en lecture seule.</exception>
      <exception cref="T:System.Xml.XmlException" vsli:raw="The specified prefix contains an invalid character.  &#xA;  &#xA; The specified prefix is malformed.  &#xA;  &#xA; The namespaceURI of this node is &lt;see langword=&quot;null&quot; /&gt;.  &#xA;  &#xA; The specified prefix is &quot;xml&quot;, and the namespaceURI of this node is different from &quot;http://www.w3.org/XML/1998/namespace&quot;.  &#xA;  &#xA; This node is an attribute, the specified prefix is &quot;xmlns&quot;, and the namespaceURI of this node is different from &quot;http://www.w3.org/2000/xmlns/&quot;.  &#xA;  &#xA; This node is an attribute, and the qualifiedName of this node is &quot;xmlns&quot; [Namespaces].">Le préfixe spécifié contient un caractère non valide.  
  
Le préfixe spécifié est mal formé.  
  
L’URI de l’espace de noms de ce nœud est <see langword="null" />.  
  
Le préfixe spécifié est « xml » et l’URI d’espace de noms de ce nœud est différent de « http://www.w3.org/XML/1998/namespace ».  
  
Le nœud est un attribut, le préfixe spécifié est « xmlns » et l’URI d’espace de noms de ce nœud est différent de « http://www.w3.org/2000/xmlns/ ».  
  
Ce nœud est un attribut et son qualifiedName est « xmlns » [espaces de noms].</exception>
      <returns vsli:raw="The namespace prefix of this node. If there is no prefix, this property returns String.Empty.">Préfixe de l'espace de noms de ce nœud. En l'absence de préfixe, cette propriété retourne String.Empty.</returns>
    </member>
    <member name="P:System.Xml.XmlAttribute.SchemaInfo">
      <summary vsli:raw="Gets the post-schema-validation-infoset that has been assigned to this node as a result of schema validation.">Obtient le jeu d'informations postérieures à la validation du schéma qui a été assigné à ce nœud à la suite de la validation du schéma.</summary>
      <returns vsli:raw="An &lt;see cref=&quot;T:System.Xml.Schema.IXmlSchemaInfo&quot; /&gt; containing the post-schema-validation-infoset of this node.">
        <see cref="T:System.Xml.Schema.IXmlSchemaInfo" /> contenant le jeu d'informations postérieures à la validation du schéma de ce nœud.</returns>
    </member>
    <member name="P:System.Xml.XmlAttribute.Specified">
      <summary vsli:raw="Gets a value indicating whether the attribute value was explicitly set.">Obtient une valeur indiquant si la valeur de l'attribut a été définie explicitement.</summary>
      <returns vsli:raw="&lt;see langword=&quot;true&quot; /&gt; if this attribute was explicitly given a value in the original instance document; otherwise, &lt;see langword=&quot;false&quot; /&gt;. A value of &lt;see langword=&quot;false&quot; /&gt; indicates that the value of the attribute came from the DTD.">
        <see langword="true" /> si l'attribut a reçu explicitement une valeur dans l'instance de document d'origine ; sinon <see langword="false" />. Une valeur <see langword="false" /> indique que la valeur de l'attribut provient du DTD.</returns>
    </member>
    <member name="P:System.Xml.XmlAttribute.Value">
      <summary vsli:raw="Gets or sets the value of the node.">Obtient ou définit la valeur du nœud.</summary>
      <exception cref="T:System.ArgumentException" vsli:raw="The node is read-only and a set operation is called.">Le nœud est en lecture seule et une opération set est appelée.</exception>
      <returns vsli:raw="The value returned depends on the &lt;see cref=&quot;P:System.Xml.XmlNode.NodeType&quot; /&gt; of the node. For &lt;see langword=&quot;XmlAttribute&quot; /&gt; nodes, this property is the value of attribute.">La valeur retournée dépend du <see cref="P:System.Xml.XmlNode.NodeType" /> du nœud. Pour les nœuds <see langword="XmlAttribute" />, cette propriété équivaut à la valeur de l'attribut.</returns>
    </member>
    <member name="T:System.Xml.XmlAttributeCollection">
      <summary vsli:raw="Represents a collection of attributes that can be accessed by name or index.">Représente une collection d'attributs qui sont accessibles par nom ou index.</summary>
    </member>
    <member name="M:System.Xml.XmlAttributeCollection.Append(System.Xml.XmlAttribute)">
      <summary vsli:raw="Inserts the specified attribute as the last node in the collection.">Insère l'attribut spécifié en tant que dernier nœud de la collection.</summary>
      <param name="node" vsli:raw="The attribute to insert.">Attribut à insérer.</param>
      <exception cref="T:System.ArgumentException" vsli:raw="&lt;paramref name=&quot;node&quot; /&gt; was created from a document different from the one that created this collection.">
        <paramref name="node" /> a été créé à partir d'un document différent de celui qui a créé cette collection.</exception>
      <returns vsli:raw="The &lt;see langword=&quot;XmlAttribute&quot; /&gt; to append to the collection.">
        <see langword="XmlAttribute" /> à ajouter à la collection.</returns>
    </member>
    <member name="M:System.Xml.XmlAttributeCollection.CopyTo(System.Xml.XmlAttribute[],System.Int32)">
      <summary vsli:raw="Copies all the &lt;see cref=&quot;T:System.Xml.XmlAttribute&quot; /&gt; objects from this collection into the given array.">Copie tous les objets de cette collection <see cref="T:System.Xml.XmlAttribute" /> dans le tableau donné.</summary>
      <param name="array" vsli:raw="The array that is the destination of the objects copied from this collection.">Tableau à une dimension, qui est la destination des objets copiés à partir de la collection.</param>
      <param name="index" vsli:raw="The index in the array where copying begins.">Index à partir duquel la copie commence dans le tableau.</param>
    </member>
    <member name="M:System.Xml.XmlAttributeCollection.InsertAfter(System.Xml.XmlAttribute,System.Xml.XmlAttribute)">
      <summary vsli:raw="Inserts the specified attribute immediately after the specified reference attribute.">Insère l'attribut spécifié immédiatement après l'attribut de référence spécifié.</summary>
      <param name="newNode" vsli:raw="The attribute to insert.">Attribut à insérer.</param>
      <param name="refNode" vsli:raw="The reference attribute. &lt;paramref name=&quot;newNode&quot; /&gt; is placed after the &lt;paramref name=&quot;refNode&quot; /&gt;.">Attribut de référence. <paramref name="newNode" /> est placé après <paramref name="refNode" />.</param>
      <exception cref="T:System.ArgumentException" vsli:raw="The &lt;paramref name=&quot;newNode&quot; /&gt; was created from a document different from the one that created this collection. Or the &lt;paramref name=&quot;refNode&quot; /&gt; is not a member of this collection.">
        <paramref name="newNode" /> a été créé à partir d'un document différent de celui qui a créé cette collection. Ou <paramref name="refNode" /> n'est pas membre de cette collection.</exception>
      <returns vsli:raw="The &lt;see langword=&quot;XmlAttribute&quot; /&gt; to insert into the collection.">
        <see langword="XmlAttribute" /> à insérer dans la collection.</returns>
    </member>
    <member name="M:System.Xml.XmlAttributeCollection.InsertBefore(System.Xml.XmlAttribute,System.Xml.XmlAttribute)">
      <summary vsli:raw="Inserts the specified attribute immediately before the specified reference attribute.">Insère l'attribut spécifié immédiatement avant l'attribut de référence spécifié.</summary>
      <param name="newNode" vsli:raw="The attribute to insert.">Attribut à insérer.</param>
      <param name="refNode" vsli:raw="The reference attribute. &lt;paramref name=&quot;newNode&quot; /&gt; is placed before the &lt;paramref name=&quot;refNode&quot; /&gt;.">Attribut de référence. <paramref name="newNode" /> est placé avant <paramref name="refNode" />.</param>
      <exception cref="T:System.ArgumentException" vsli:raw="The &lt;paramref name=&quot;newNode&quot; /&gt; was created from a document different from the one that created this collection. Or the &lt;paramref name=&quot;refNode&quot; /&gt; is not a member of this collection.">
        <paramref name="newNode" /> a été créé à partir d'un document différent de celui qui a créé cette collection. Ou <paramref name="refNode" /> n'est pas membre de cette collection.</exception>
      <returns vsli:raw="The &lt;see langword=&quot;XmlAttribute&quot; /&gt; to insert into the collection.">
        <see langword="XmlAttribute" /> à insérer dans la collection.</returns>
    </member>
    <member name="M:System.Xml.XmlAttributeCollection.Prepend(System.Xml.XmlAttribute)">
      <summary vsli:raw="Inserts the specified attribute as the first node in the collection.">Insère l'attribut spécifié en tant que premier nœud de la collection.</summary>
      <param name="node" vsli:raw="The attribute to insert.">Attribut à insérer.</param>
      <returns vsli:raw="The &lt;see langword=&quot;XmlAttribute&quot; /&gt; added to the collection.">
        <see langword="XmlAttribute" /> ajouté à la collection.</returns>
    </member>
    <member name="M:System.Xml.XmlAttributeCollection.Remove(System.Xml.XmlAttribute)">
      <summary vsli:raw="Removes the specified attribute from the collection.">Supprime l'attribut spécifié de la collection.</summary>
      <param name="node" vsli:raw="The attribute to remove.">Attribut à enlever.</param>
      <returns vsli:raw="The node removed or &lt;see langword=&quot;null&quot; /&gt; if it is not found in the collection.">Nœud supprimé ou <see langword="null" /> s'il ne se trouve pas dans la collection.</returns>
    </member>
    <member name="M:System.Xml.XmlAttributeCollection.RemoveAll">
      <summary vsli:raw="Removes all attributes from the collection.">Supprime tous les attributs de la collection.</summary>
    </member>
    <member name="M:System.Xml.XmlAttributeCollection.RemoveAt(System.Int32)">
      <summary vsli:raw="Removes the attribute corresponding to the specified index from the collection.">Supprime l'attribut correspondant à l'index spécifié de la collection.</summary>
      <param name="i" vsli:raw="The index of the node to remove. The first node has index 0.">Index du nœud à supprimer. Le premier nœud possède l’index 0.</param>
      <returns vsli:raw="Returns &lt;see langword=&quot;null&quot; /&gt; if there is no attribute at the specified index.">Retourne <see langword="null" /> s'il n'y a aucun attribut à l'index spécifié.</returns>
    </member>
    <member name="M:System.Xml.XmlAttributeCollection.SetNamedItem(System.Xml.XmlNode)">
      <summary vsli:raw="Adds a &lt;see cref=&quot;T:System.Xml.XmlNode&quot; /&gt; using its &lt;see cref=&quot;P:System.Xml.XmlNode.Name&quot; /&gt; property.">Ajoute <see cref="T:System.Xml.XmlNode" /> à l’aide de sa propriété <see cref="P:System.Xml.XmlNode.Name" />.</summary>
      <param name="node" vsli:raw="An attribute node to store in this collection. The node will later be accessible using the name of the node. If a node with that name is already present in the collection, it is replaced by the new one; otherwise, the node is appended to the end of the collection.">Un nœud d'attribut à stocker dans cette collection. Le nœud sera accessible par la suite à l'aide de son nom. Si un nœud porte déjà ce nom dans la collection, il est alors remplacé par ce nouveau nœud ; sinon, le nœud est ajouté à la fin de la collection.</param>
      <exception cref="T:System.ArgumentException" vsli:raw="&lt;paramref name=&quot;node&quot; /&gt; was created from a different &lt;see cref=&quot;T:System.Xml.XmlDocument&quot; /&gt; than the one that created this collection.  &#xA;  &#xA; This &lt;see langword=&quot;XmlAttributeCollection&quot; /&gt; is read-only.">
        <paramref name="node" /> a été créé à partir d'un <see cref="T:System.Xml.XmlDocument" /> différent de celui qui a créé cette collection.  
  
Cette <see langword="XmlAttributeCollection" /> est en lecture seule.</exception>
      <exception cref="T:System.InvalidOperationException" vsli:raw="&lt;paramref name=&quot;node&quot; /&gt; is an &lt;see cref=&quot;T:System.Xml.XmlAttribute&quot; /&gt; that is already an attribute of another &lt;see cref=&quot;T:System.Xml.XmlElement&quot; /&gt; object. To re-use attributes in other elements, you must clone the &lt;see langword=&quot;XmlAttribute&quot; /&gt; objects you want to re-use.">
        <paramref name="node" /> est un <see cref="T:System.Xml.XmlAttribute" /> qui est déjà un attribut d'un autre objet <see cref="T:System.Xml.XmlElement" />. Pour réutiliser des attributs dans d'autres éléments, vous devez cloner les <see langword="XmlAttribute" /> objets que vous voulez réutiliser.</exception>
      <returns vsli:raw="If the &lt;paramref name=&quot;node&quot; /&gt; replaces an existing node with the same name, the old node is returned; otherwise, the added node is returned.">Si <paramref name="node" /> remplace un nœud existant portant le même nom, l'ancien nœud est retourné ; sinon, le nœud ajouté est retourné.</returns>
    </member>
    <member name="M:System.Xml.XmlAttributeCollection.System#Collections#ICollection#CopyTo(System.Array,System.Int32)">
      <summary vsli:raw="For a description of this member, see &lt;see cref=&quot;M:System.Xml.XmlAttributeCollection.CopyTo(System.Xml.XmlAttribute[],System.Int32)&quot; /&gt;.">Pour obtenir une description de ce membre, consultez <see cref="M:System.Xml.XmlAttributeCollection.CopyTo(System.Xml.XmlAttribute[],System.Int32)" />.</summary>
      <param name="array" vsli:raw="The array that is the destination of the objects copied from this collection.">Tableau à une dimension, qui est la destination des objets copiés à partir de la collection.</param>
      <param name="index" vsli:raw="The index in the array where copying begins.">Index à partir duquel la copie commence dans le tableau.</param>
    </member>
    <member name="P:System.Xml.XmlAttributeCollection.ItemOf(System.Int32)">
      <summary vsli:raw="Gets the attribute with the specified index.">Obtient l'attribut avec l'index spécifié.</summary>
      <param name="i" vsli:raw="The index of the attribute.">Index de l'attribut.</param>
      <exception cref="T:System.IndexOutOfRangeException" vsli:raw="The index being passed in is out of range.">L'index qui est passé est hors limites.</exception>
      <returns vsli:raw="The attribute at the specified index.">Attribut au niveau de l’index spécifié.</returns>
    </member>
    <member name="P:System.Xml.XmlAttributeCollection.ItemOf(System.String)">
      <summary vsli:raw="Gets the attribute with the specified name.">Obtient l'attribut avec le nom spécifié.</summary>
      <param name="name" vsli:raw="The qualified name of the attribute.">Nom qualifié de l'attribut.</param>
      <returns vsli:raw="The attribute with the specified name. If the attribute does not exist, this property returns &lt;see langword=&quot;null&quot; /&gt;.">Attribut portant le nom spécifié. Si l'attribut n'existe pas, cette propriété retourne <see langword="null" />.</returns>
    </member>
    <member name="P:System.Xml.XmlAttributeCollection.ItemOf(System.String,System.String)">
      <summary vsli:raw="Gets the attribute with the specified local name and namespace Uniform Resource Identifier (URI).">Obtient l'attribut possédant le nom local et l'URI (Uniform Resource Identifier) de l'espace de noms spécifiés.</summary>
      <param name="localName" vsli:raw="The local name of the attribute.">Le nom local de l'attribut.</param>
      <param name="namespaceURI" vsli:raw="The namespace URI of the attribute.">L'URI de l'espace de noms de l'attribut.</param>
      <returns vsli:raw="The attribute with the specified local name and namespace URI. If the attribute does not exist, this property returns &lt;see langword=&quot;null&quot; /&gt;.">Attribut avec le nom local et l’URI de l’espace de noms spécifiés. Si l'attribut n'existe pas, cette propriété retourne <see langword="null" />.</returns>
    </member>
    <member name="P:System.Xml.XmlAttributeCollection.System#Collections#ICollection#Count">
      <summary vsli:raw="For a description of this member, see &lt;see cref=&quot;P:System.Xml.XmlAttributeCollection.System#Collections#ICollection#Count&quot; /&gt;.">Pour obtenir une description de ce membre, consultez <see cref="P:System.Xml.XmlAttributeCollection.System#Collections#ICollection#Count" />.</summary>
      <returns vsli:raw="An &lt;see langword=&quot;int&quot; /&gt; that contains the count of the attributes.">
        <see langword="int" />Qui contient le nombre d’attributs.</returns>
    </member>
    <member name="P:System.Xml.XmlAttributeCollection.System#Collections#ICollection#IsSynchronized">
      <summary vsli:raw="For a description of this member, see &lt;see cref=&quot;P:System.Xml.XmlAttributeCollection.System#Collections#ICollection#IsSynchronized&quot; /&gt;.">Pour obtenir une description de ce membre, consultez <see cref="P:System.Xml.XmlAttributeCollection.System#Collections#ICollection#IsSynchronized" />.</summary>
      <returns vsli:raw="&lt;see langword=&quot;true&quot; /&gt; if the collection is synchronized.">
        <see langword="true" /> Si la collection est synchronisée.</returns>
    </member>
    <member name="P:System.Xml.XmlAttributeCollection.System#Collections#ICollection#SyncRoot">
      <summary vsli:raw="For a description of this member, see &lt;see cref=&quot;P:System.Xml.XmlAttributeCollection.System#Collections#ICollection#SyncRoot&quot; /&gt;.">Pour obtenir une description de ce membre, consultez <see cref="P:System.Xml.XmlAttributeCollection.System#Collections#ICollection#SyncRoot" />.</summary>
      <returns vsli:raw="The &lt;see cref=&quot;T:System.Object&quot; /&gt; that is the root of the collection.">
        <see cref="T:System.Object" />Qui est la racine de la collection.</returns>
    </member>
    <member name="T:System.Xml.XmlCDataSection">
      <summary vsli:raw="Represents a CDATA section.">Représente une section CDATA.</summary>
    </member>
    <member name="M:System.Xml.XmlCDataSection.#ctor(System.String,System.Xml.XmlDocument)">
      <summary vsli:raw="Initializes a new instance of the &lt;see cref=&quot;T:System.Xml.XmlCDataSection&quot; /&gt; class.">Initialise une nouvelle instance de la classe <see cref="T:System.Xml.XmlCDataSection" />.</summary>
      <param name="data" vsli:raw="&lt;see cref=&quot;T:System.String&quot; /&gt; that contains character data.">
        <see cref="T:System.String" /> qui contient des données caractères.</param>
      <param name="doc" vsli:raw="&lt;see cref=&quot;T:System.Xml.XmlDocument&quot; /&gt; object.">Objet <see cref="T:System.Xml.XmlDocument" />.</param>
    </member>
    <member name="M:System.Xml.XmlCDataSection.CloneNode(System.Boolean)">
      <summary vsli:raw="Creates a duplicate of this node.">Crée un doublon de ce nœud.</summary>
      <param name="deep" vsli:raw="&lt;see langword=&quot;true&quot; /&gt; to recursively clone the subtree under the specified node; &lt;see langword=&quot;false&quot; /&gt; to clone only the node itself. Because CDATA nodes do not have children, regardless of the parameter setting, the cloned node will always include the data content.">
        <see langword="true" /> pour cloner récursivement la sous-arborescence sous le nœud spécifié ; <see langword="false" /> pour cloner seulement le nœud lui-même. Comme les nœuds CDATA n'ont pas d'enfant, le nœud cloné comportera toujours des données, quelle que soit la valeur du paramètre.</param>
      <returns vsli:raw="The cloned node.">Nœud cloné.</returns>
    </member>
    <member name="M:System.Xml.XmlCDataSection.WriteContentTo(System.Xml.XmlWriter)">
      <summary vsli:raw="Saves the children of the node to the specified &lt;see cref=&quot;T:System.Xml.XmlWriter&quot; /&gt;.">Enregistre les enfants du nœud dans le <see cref="T:System.Xml.XmlWriter" /> spécifié.</summary>
      <param name="w" vsli:raw="The &lt;see langword=&quot;XmlWriter&quot; /&gt; to which you want to save.">L'élément <see langword="XmlWriter" /> dans lequel vous voulez enregistrer.</param>
    </member>
    <member name="M:System.Xml.XmlCDataSection.WriteTo(System.Xml.XmlWriter)">
      <summary vsli:raw="Saves the node to the specified &lt;see cref=&quot;T:System.Xml.XmlWriter&quot; /&gt;.">Enregistre le nœud dans le <see cref="T:System.Xml.XmlWriter" /> spécifié.</summary>
      <param name="w" vsli:raw="The &lt;see langword=&quot;XmlWriter&quot; /&gt; to which you want to save.">L'élément <see langword="XmlWriter" /> dans lequel vous voulez enregistrer.</param>
    </member>
    <member name="P:System.Xml.XmlCDataSection.LocalName">
      <summary vsli:raw="Gets the local name of the node.">Obtient le nom local du nœud.</summary>
      <returns vsli:raw="For CDATA nodes, the local name is &lt;see langword=&quot;#cdata-section&quot; /&gt;.">Pour les nœuds CDATA, le nom local est <see langword="#cdata-section" />.</returns>
    </member>
    <member name="P:System.Xml.XmlCDataSection.Name">
      <summary vsli:raw="Gets the qualified name of the node.">Obtient le nom qualifié du nœud.</summary>
      <returns vsli:raw="For CDATA nodes, the name is &lt;see langword=&quot;#cdata-section&quot; /&gt;.">Pour les nœuds CDATA, le nom est <see langword="#cdata-section" />.</returns>
    </member>
    <member name="P:System.Xml.XmlCDataSection.NodeType">
      <summary vsli:raw="Gets the type of the current node.">Obtient le type du nœud actuel.</summary>
      <returns vsli:raw="The node type. For CDATA nodes, the value is XmlNodeType.CDATA.">Type de nœud. Pour les nœuds CDATA, la valeur est XmlNodeType.CDATA.</returns>
    </member>
    <member name="P:System.Xml.XmlCDataSection.ParentNode">
      <summary vsli:raw="Gets the parent of this node (for nodes that can have parents).">Obtient le parent de ce nœud (pour les nœuds qui peuvent avoir des parents).</summary>
      <returns vsli:raw="The &lt;see langword=&quot;XmlNode&quot; /&gt; that is the parent of the current node. If a node has just been created and not yet added to the tree, or if it has been removed from the tree, the parent is &lt;see langword=&quot;null&quot; /&gt;. For all other nodes, the value returned depends on the &lt;see cref=&quot;P:System.Xml.XmlNode.NodeType&quot; /&gt; of the node. The following table describes the possible return values for the &lt;see langword=&quot;ParentNode&quot; /&gt; property.">
        <see langword="XmlNode" /> correspondant au parent du nœud actif. Si un nœud vient d’être créé mais qu’il n’a pas encore été ajouté à l’arborescence, ou s’il a été supprimé de celle-ci, le parent est <see langword="null" />. Pour tous les autres nœuds, la valeur retournée dépend du <see cref="P:System.Xml.XmlNode.NodeType" /> du nœud. Le tableau suivant décrit les différentes valeurs de retour possibles pour la propriété <see langword="ParentNode" />.</returns>
    </member>
    <member name="P:System.Xml.XmlCDataSection.PreviousText">
      <summary vsli:raw="Gets the text node that immediately precedes this node.">Obtient le nœud de texte qui précède immédiatement ce nœud.</summary>
      <returns vsli:raw="Returns &lt;see cref=&quot;T:System.Xml.XmlNode&quot; /&gt;.">Retourne <see cref="T:System.Xml.XmlNode" />.</returns>
    </member>
    <member name="T:System.Xml.XmlCharacterData">
      <summary vsli:raw="Provides text manipulation methods that are used by several classes.">Fournit des méthodes de manipulation de texte qui sont utilisées par plusieurs classes.</summary>
    </member>
    <member name="M:System.Xml.XmlCharacterData.#ctor(System.String,System.Xml.XmlDocument)">
      <summary vsli:raw="Initializes a new instance of the &lt;see cref=&quot;T:System.Xml.XmlCharacterData&quot; /&gt; class.">Initialise une nouvelle instance de la classe <see cref="T:System.Xml.XmlCharacterData" />.</summary>
      <param name="data" vsli:raw="String that contains character data to be added to document.">Chaîne qui contient des données caractères à ajouter au document.</param>
      <param name="doc" vsli:raw="&lt;see cref=&quot;T:System.Xml.XmlDocument&quot; /&gt; to contain character data.">
        <see cref="T:System.Xml.XmlDocument" /> pour contenir les données caractères.</param>
    </member>
    <member name="M:System.Xml.XmlCharacterData.AppendData(System.String)">
      <summary vsli:raw="Appends the specified string to the end of the character data of the node.">Ajoute la chaîne spécifiée à la fin des données de caractère du nœud.</summary>
      <param name="strData" vsli:raw="The string to insert into the existing string.">Chaîne à insérer dans la chaîne existante.</param>
    </member>
    <member name="M:System.Xml.XmlCharacterData.DeleteData(System.Int32,System.Int32)">
      <summary vsli:raw="Removes a range of characters from the node.">Supprime une plage de caractères du nœud.</summary>
      <param name="offset" vsli:raw="The position within the string to start deleting.">Position dans la chaîne à laquelle commencer la suppression.</param>
      <param name="count" vsli:raw="The number of characters to delete.">Nombre de caractères à supprimer.</param>
    </member>
    <member name="M:System.Xml.XmlCharacterData.InsertData(System.Int32,System.String)">
      <summary vsli:raw="Inserts the specified string at the specified character offset.">Insère la chaîne spécifiée à l'offset du caractère spécifié.</summary>
      <param name="offset" vsli:raw="The position within the string to insert the supplied string data.">Position dans la chaîne à laquelle insérer les données de type chaîne fournies.</param>
      <param name="strData" vsli:raw="The string data that is to be inserted into the existing string.">Données de type chaîne à insérer dans la chaîne existante.</param>
    </member>
    <member name="M:System.Xml.XmlCharacterData.ReplaceData(System.Int32,System.Int32,System.String)">
      <summary vsli:raw="Replaces the specified number of characters starting at the specified offset with the specified string.">Remplace le nombre spécifié de caractères en commençant à l'offset spécifié avec la chaîne spécifiée.</summary>
      <param name="offset" vsli:raw="The position within the string to start replacing.">Position dans la chaîne à laquelle commencer le remplacement.</param>
      <param name="count" vsli:raw="The number of characters to replace.">Nombre de caractères à remplacer.</param>
      <param name="strData" vsli:raw="The new data that replaces the old string data.">Les nouvelles données remplacent les anciennes données de type chaîne.</param>
    </member>
    <member name="M:System.Xml.XmlCharacterData.Substring(System.Int32,System.Int32)">
      <summary vsli:raw="Retrieves a substring of the full string from the specified range.">Récupère une sous-chaîne de la chaîne complète à partir de la plage spécifiée.</summary>
      <param name="offset" vsli:raw="The position within the string to start retrieving. An offset of zero indicates the starting point is at the start of the data.">Position dans la chaîne à laquelle commencer la récupération. Un offset nul indique que la position de départ est le début des données.</param>
      <param name="count" vsli:raw="The number of characters to retrieve.">Nombre de caractères à récupérer.</param>
      <returns vsli:raw="The substring corresponding to the specified range.">Sous-chaîne correspondant à la place spécifiée.</returns>
    </member>
    <member name="P:System.Xml.XmlCharacterData.Data">
      <summary vsli:raw="Contains the data of the node.">Contient les données du nœud.</summary>
      <returns vsli:raw="The data of the node.">Données du nœud.</returns>
    </member>
    <member name="P:System.Xml.XmlCharacterData.InnerText">
      <summary vsli:raw="Gets or sets the concatenated values of the node and all the children of the node.">Obtient ou définit les valeurs concaténées du nœud et de tous ses enfants.</summary>
      <returns vsli:raw="The concatenated values of the node and all the children of the node.">Valeurs concaténées du nœud et de tous ses enfants.</returns>
    </member>
    <member name="P:System.Xml.XmlCharacterData.Length">
      <summary vsli:raw="Gets the length of the data, in characters.">Obtient la longueur des données, en caractères.</summary>
      <returns vsli:raw="The length, in characters, of the string in the &lt;see cref=&quot;P:System.Xml.XmlCharacterData.Data&quot; /&gt; property. The length may be zero; that is, CharacterData nodes can be empty.">Longueur, en caractères, de la chaîne de la propriété <see cref="P:System.Xml.XmlCharacterData.Data" />. La longueur peut être égale à zéro, c'est-à-dire que les nœuds CharacterData peuvent être vides.</returns>
    </member>
    <member name="P:System.Xml.XmlCharacterData.Value">
      <summary vsli:raw="Gets or sets the value of the node.">Obtient ou définit la valeur du nœud.</summary>
      <exception cref="T:System.ArgumentException" vsli:raw="Node is read-only.">Le nœud est en lecture seule.</exception>
      <returns vsli:raw="The value of the node.">Valeur du nœud.</returns>
    </member>
    <member name="T:System.Xml.XmlComment">
      <summary vsli:raw="Represents the content of an XML comment.">Représente le contenu d'un commentaire XML.</summary>
    </member>
    <member name="M:System.Xml.XmlComment.#ctor(System.String,System.Xml.XmlDocument)">
      <summary vsli:raw="Initializes a new instance of the &lt;see cref=&quot;T:System.Xml.XmlComment&quot; /&gt; class.">Initialise une nouvelle instance de la classe <see cref="T:System.Xml.XmlComment" />.</summary>
      <param name="comment" vsli:raw="The content of the comment element.">Contenu de l'élément du commentaire.</param>
      <param name="doc" vsli:raw="The parent XML document.">Document XML parent.</param>
    </member>
    <member name="M:System.Xml.XmlComment.CloneNode(System.Boolean)">
      <summary vsli:raw="Creates a duplicate of this node.">Crée un doublon de ce nœud.</summary>
      <param name="deep" vsli:raw="&lt;see langword=&quot;true&quot; /&gt; to recursively clone the subtree under the specified node; &lt;see langword=&quot;false&quot; /&gt; to clone only the node itself. Because comment nodes do not have children, the cloned node always includes the text content, regardless of the parameter setting.">
        <see langword="true" /> pour cloner récursivement la sous-arborescence sous le nœud spécifié ; <see langword="false" /> pour cloner seulement le nœud lui-même. Comme les nœuds de commentaires n'ont pas d'enfant, le nœud cloné comporte toujours du texte, quelle que soit la valeur du paramètre.</param>
      <returns vsli:raw="The cloned node.">Nœud cloné.</returns>
    </member>
    <member name="M:System.Xml.XmlComment.WriteContentTo(System.Xml.XmlWriter)">
      <summary vsli:raw="Saves all the children of the node to the specified &lt;see cref=&quot;T:System.Xml.XmlWriter&quot; /&gt;. Because comment nodes do not have children, this method has no effect.">Enregistre tous les enfants du nœud dans l’élément <see cref="T:System.Xml.XmlWriter" /> spécifié. Comme les nœuds de commentaires n'ont pas d'enfant, cette méthode reste sans effet.</summary>
      <param name="w" vsli:raw="The &lt;see langword=&quot;XmlWriter&quot; /&gt; to which you want to save.">L'élément <see langword="XmlWriter" /> dans lequel vous voulez enregistrer.</param>
    </member>
    <member name="M:System.Xml.XmlComment.WriteTo(System.Xml.XmlWriter)">
      <summary vsli:raw="Saves the node to the specified &lt;see cref=&quot;T:System.Xml.XmlWriter&quot; /&gt;.">Enregistre le nœud dans le <see cref="T:System.Xml.XmlWriter" /> spécifié.</summary>
      <param name="w" vsli:raw="The &lt;see langword=&quot;XmlWriter&quot; /&gt; to which you want to save.">L'élément <see langword="XmlWriter" /> dans lequel vous voulez enregistrer.</param>
    </member>
    <member name="P:System.Xml.XmlComment.LocalName">
      <summary vsli:raw="Gets the local name of the node.">Obtient le nom local du nœud.</summary>
      <returns vsli:raw="For comment nodes, the value is &lt;see langword=&quot;#comment&quot; /&gt;.">Pour les nœuds de commentaire, la valeur est <see langword="#comment" />.</returns>
    </member>
    <member name="P:System.Xml.XmlComment.Name">
      <summary vsli:raw="Gets the qualified name of the node.">Obtient le nom qualifié du nœud.</summary>
      <returns vsli:raw="For comment nodes, the value is &lt;see langword=&quot;#comment&quot; /&gt;.">Pour les nœuds de commentaire, la valeur est <see langword="#comment" />.</returns>
    </member>
    <member name="P:System.Xml.XmlComment.NodeType">
      <summary vsli:raw="Gets the type of the current node.">Obtient le type du nœud actuel.</summary>
      <returns vsli:raw="For comment nodes, the value is XmlNodeType.Comment.">Pour les nœuds de commentaires, la valeur est XmlNodeType.Comment.</returns>
    </member>
    <member name="T:System.Xml.XmlConvert">
      <summary vsli:raw="Encodes and decodes XML names, and provides methods for converting between common language runtime types and XML Schema definition language (XSD) types. When converting data types, the values returned are locale-independent.">Encode et décode les noms XML, et fournit des méthodes pour la conversion entre les types Common Language Runtime et les types XSD (XML Schema Definition). Lors de la conversion de types de données, les valeurs retournées sont indépendantes des paramètres régionaux.</summary>
    </member>
    <member name="M:System.Xml.XmlConvert.#ctor">
      <summary vsli:raw="Initializes a new instance of the &lt;see cref=&quot;T:System.Xml.XmlConvert&quot; /&gt; class.">Initialise une nouvelle instance de la classe <see cref="T:System.Xml.XmlConvert" />.</summary>
    </member>
    <member name="M:System.Xml.XmlConvert.DecodeName(System.String)">
      <summary vsli:raw="Decodes a name. This method does the reverse of the &lt;see cref=&quot;M:System.Xml.XmlConvert.EncodeName(System.String)&quot; /&gt; and &lt;see cref=&quot;M:System.Xml.XmlConvert.EncodeLocalName(System.String)&quot; /&gt; methods.">Décode un nom. Cette méthode fait le contraire des méthodes <see cref="M:System.Xml.XmlConvert.EncodeName(System.String)" /> et <see cref="M:System.Xml.XmlConvert.EncodeLocalName(System.String)" />.</summary>
      <param name="name" vsli:raw="The name to be transformed.">Nom à transformer.</param>
      <returns vsli:raw="The decoded name.">Nom décodé.</returns>
    </member>
    <member name="M:System.Xml.XmlConvert.EncodeLocalName(System.String)">
      <summary vsli:raw="Converts the name to a valid XML local name.">Convertit le nom en un nom local XML valide.</summary>
      <param name="name" vsli:raw="The name to be encoded.">Nom à encoder.</param>
      <returns vsli:raw="The encoded name.">Nom encodé.</returns>
    </member>
    <member name="M:System.Xml.XmlConvert.EncodeName(System.String)">
      <summary vsli:raw="Converts the name to a valid XML name.">Convertit le nom en un nom XML valide.</summary>
      <param name="name" vsli:raw="A name to be translated.">Nom à traduire.</param>
      <returns vsli:raw="The name with any invalid characters replaced by an escape string.">Nom avec les caractères non valides remplacés par une chaîne d’échappement.</returns>
    </member>
    <member name="M:System.Xml.XmlConvert.EncodeNmToken(System.String)">
      <summary vsli:raw="Verifies the name is valid according to the XML specification.">Vérifie que le nom est valide selon la spécification XML.</summary>
      <param name="name" vsli:raw="The name to be encoded.">Nom à encoder.</param>
      <returns vsli:raw="The encoded name.">Nom encodé.</returns>
    </member>
    <member name="M:System.Xml.XmlConvert.IsNCNameChar(System.Char)">
      <summary vsli:raw="Checks whether the passed-in character is a valid non-colon character type.">Vérifie si le caractère passé est un type de caractère autre que deux-points valide.</summary>
      <param name="ch" vsli:raw="The character to verify as a non-colon character.">Caractère dont il faut vérifier qu'il n'est pas le caractère deux-points.</param>
      <returns vsli:raw="&lt;see langword=&quot;true&quot; /&gt; if the character is a valid non-colon character type; otherwise, &lt;see langword=&quot;false&quot; /&gt;.">
        <see langword="true" /> si le caractère est un type de caractère valide autre que le caractère deux-points ; sinon, <see langword="false" />.</returns>
    </member>
    <member name="M:System.Xml.XmlConvert.IsPublicIdChar(System.Char)">
      <summary vsli:raw="Returns the passed-in character instance if the character in the argument is a valid public id character, otherwise &lt;see langword=&quot;null&quot; /&gt;.">Retourne l'instance du caractère passé si le caractère de l'argument est un caractère d'ID public valide, sinon <see langword="null" />.</summary>
      <param name="ch" vsli:raw="&lt;see cref=&quot;T:System.Char&quot; /&gt; object to validate.">Objet <see cref="T:System.Char" /> à valider.</param>
      <returns vsli:raw="The passed-in character if the character is a valid public id character, otherwise &lt;see langword=&quot;null&quot; /&gt;.">Caractère passé si le caractère est un caractère d’ID public valide, sinon <see langword="null" />.</returns>
    </member>
    <member name="M:System.Xml.XmlConvert.IsStartNCNameChar(System.Char)">
      <summary vsli:raw="Checks if the passed-in character is a valid Start Name Character type.">Vérifie si le caractère passé est un type de caractère de début de nom valide.</summary>
      <param name="ch" vsli:raw="The character to validate.">Caractère à valider.</param>
      <returns vsli:raw="&lt;see langword=&quot;true&quot; /&gt; if the character is a valid Start Name Character type; otherwise, &lt;see langword=&quot;false&quot; /&gt;.">
        <see langword="true" /> si le caractère est un type de caractère de début de nom valide ; sinon, <see langword="false" />.</returns>
    </member>
    <member name="M:System.Xml.XmlConvert.IsWhitespaceChar(System.Char)">
      <summary vsli:raw="Checks if the passed-in character is a valid XML whitespace character.">Vérifie si le caractère passé est un caractère d'espace XML valide.</summary>
      <param name="ch" vsli:raw="The character to validate.">Caractère à valider.</param>
      <returns vsli:raw="&lt;see langword=&quot;true&quot; /&gt; if the passed in character is a valid XML whitespace character; otherwise, &lt;see langword=&quot;false&quot; /&gt;.">
        <see langword="true" /> si le caractère passé est un caractère d’espace XML valide ; sinon, <see langword="false" />.</returns>
    </member>
    <member name="M:System.Xml.XmlConvert.IsXmlChar(System.Char)">
      <summary vsli:raw="Checks if the passed-in character is a valid XML character.">Vérifie si le caractère passé est un caractère XML valide.</summary>
      <param name="ch" vsli:raw="The character to validate.">Caractère à valider.</param>
      <returns vsli:raw="&lt;see langword=&quot;true&quot; /&gt; if the passed in character is a valid XML character; otherwise, &lt;see langword=&quot;false&quot; /&gt;.">
        <see langword="true" /> si le caractère passé est un caractère XML valide ; sinon, <see langword="false" />.</returns>
    </member>
    <member name="M:System.Xml.XmlConvert.IsXmlSurrogatePair(System.Char,System.Char)">
      <summary vsli:raw="Checks if the passed-in surrogate pair of characters is a valid XML character.">Vérifie si la paire de caractères de substitution passée est un caractère XML valide.</summary>
      <param name="lowChar" vsli:raw="The surrogate character to validate.">Caractère de substitution à valider.</param>
      <param name="highChar" vsli:raw="The surrogate character to validate.">Caractère de substitution à valider.</param>
      <returns vsli:raw="&lt;see langword=&quot;true&quot; /&gt; if the passed in surrogate pair of characters is a valid XML character; otherwise, &lt;see langword=&quot;false&quot; /&gt;.">
        <see langword="true" /> si la paire de caractères de substitution passée est un caractère XML valide ; sinon, <see langword="false" />.</returns>
    </member>
    <member name="M:System.Xml.XmlConvert.ToBoolean(System.String)">
      <summary vsli:raw="Converts the &lt;see cref=&quot;T:System.String&quot; /&gt; to a &lt;see cref=&quot;T:System.Boolean&quot; /&gt; equivalent.">Convertit la chaîne <see cref="T:System.String" /> en un équivalent <see cref="T:System.Boolean" />.</summary>
      <param name="s" vsli:raw="The string to convert.">Chaîne à convertir.</param>
      <exception cref="T:System.ArgumentNullException" vsli:raw="&lt;paramref name=&quot;s&quot; /&gt; is &lt;see langword=&quot;null&quot; /&gt;.">
        <paramref name="s" /> a la valeur <see langword="null" />.</exception>
      <exception cref="T:System.FormatException" vsli:raw="&lt;paramref name=&quot;s&quot; /&gt; does not represent a &lt;see langword=&quot;Boolean&quot; /&gt; value.">
        <paramref name="s" /> ne représente pas une valeur <see langword="Boolean" />.</exception>
      <returns vsli:raw="A &lt;see langword=&quot;Boolean&quot; /&gt; value, that is, &lt;see langword=&quot;true&quot; /&gt; or &lt;see langword=&quot;false&quot; /&gt;.">Valeur <see langword="Boolean" />, c'est-à-dire <see langword="true" /> ou <see langword="false" />.</returns>
    </member>
    <member name="M:System.Xml.XmlConvert.ToByte(System.String)">
      <summary vsli:raw="Converts the &lt;see cref=&quot;T:System.String&quot; /&gt; to a &lt;see cref=&quot;T:System.Byte&quot; /&gt; equivalent.">Convertit la chaîne <see cref="T:System.String" /> en un équivalent <see cref="T:System.Byte" />.</summary>
      <param name="s" vsli:raw="The string to convert.">Chaîne à convertir.</param>
      <exception cref="T:System.ArgumentNullException" vsli:raw="&lt;paramref name=&quot;s&quot; /&gt; is &lt;see langword=&quot;null&quot; /&gt;.">
        <paramref name="s" /> a la valeur <see langword="null" />.</exception>
      <exception cref="T:System.FormatException" vsli:raw="&lt;paramref name=&quot;s&quot; /&gt; is not in the correct format.">Le format de <paramref name="s" /> est incorrect.</exception>
      <exception cref="T:System.OverflowException" vsli:raw="&lt;paramref name=&quot;s&quot; /&gt; represents a number less than &lt;see cref=&quot;F:System.Byte.MinValue&quot;&gt;Byte.MinValue&lt;/see&gt; or greater than &lt;see cref=&quot;F:System.Byte.MaxValue&quot;&gt;Byte.MaxValue&lt;/see&gt;.">
        <paramref name="s" /> représente un nombre inférieur à <see cref="F:System.Byte.MinValue" /> ou supérieur à <see cref="F:System.Byte.MaxValue" />.</exception>
      <returns vsli:raw="A &lt;see langword=&quot;Byte&quot; /&gt; equivalent of the string.">Équivalent <see langword="Byte" /> de la chaîne.</returns>
    </member>
    <member name="M:System.Xml.XmlConvert.ToChar(System.String)">
      <summary vsli:raw="Converts the &lt;see cref=&quot;T:System.String&quot; /&gt; to a &lt;see cref=&quot;T:System.Char&quot; /&gt; equivalent.">Convertit la chaîne <see cref="T:System.String" /> en un équivalent <see cref="T:System.Char" />.</summary>
      <param name="s" vsli:raw="The string containing a single character to convert.">Chaîne contenant un seul caractère à convertir.</param>
      <exception cref="T:System.ArgumentNullException" vsli:raw="The value of the &lt;paramref name=&quot;s&quot; /&gt; parameter is &lt;see langword=&quot;null&quot; /&gt;.">La valeur du paramètre <paramref name="s" /> est <see langword="null" />.</exception>
      <exception cref="T:System.FormatException" vsli:raw="The &lt;paramref name=&quot;s&quot; /&gt; parameter contains more than one character.">Le paramètre <paramref name="s" /> contient plusieurs caractères.</exception>
      <returns vsli:raw="A &lt;see langword=&quot;Char&quot; /&gt; representing the single character.">
        <see langword="Char" /> représentant le caractère unique.</returns>
    </member>
    <member name="M:System.Xml.XmlConvert.ToDateTime(System.String)">
      <summary vsli:raw="Converts the &lt;see cref=&quot;T:System.String&quot; /&gt; to a &lt;see cref=&quot;T:System.DateTime&quot; /&gt; equivalent.">Convertit la chaîne <see cref="T:System.String" /> en un équivalent <see cref="T:System.DateTime" />.</summary>
      <param name="s" vsli:raw="The string to convert.">Chaîne à convertir.</param>
      <exception cref="T:System.ArgumentNullException" vsli:raw="&lt;paramref name=&quot;s&quot; /&gt; is &lt;see langword=&quot;null&quot; /&gt;.">
        <paramref name="s" /> a la valeur <see langword="null" />.</exception>
      <exception cref="T:System.FormatException" vsli:raw="&lt;paramref name=&quot;s&quot; /&gt; is an empty string or is not in the correct format.">
        <paramref name="s" /> est une chaîne vide et n'est pas dans le format approprié.</exception>
      <returns vsli:raw="A &lt;see langword=&quot;DateTime&quot; /&gt; equivalent of the string.">Équivalent <see langword="DateTime" /> de la chaîne.</returns>
    </member>
    <member name="M:System.Xml.XmlConvert.ToDateTime(System.String,System.String)">
      <summary vsli:raw="Converts the &lt;see cref=&quot;T:System.String&quot; /&gt; to a &lt;see cref=&quot;T:System.DateTime&quot; /&gt; equivalent.">Convertit la chaîne <see cref="T:System.String" /> en un équivalent <see cref="T:System.DateTime" />.</summary>
      <param name="s" vsli:raw="The string to convert.">Chaîne à convertir.</param>
      <param name="format" vsli:raw="The format structure to apply to the converted &lt;see langword=&quot;DateTime&quot; /&gt;. Valid formats include &quot;yyyy-MM-ddTHH:mm:sszzzzzz&quot; and its subsets. The string is validated against this format.">Structure du format à appliquer à l'élément <see langword="DateTime" /> converti. Les formats valides sont "yyyy-MM-ddTHH:mm:sszzzzzz" et ses sous-ensembles. La chaîne est validée par rapport à ce format.</param>
      <exception cref="T:System.ArgumentNullException" vsli:raw="&lt;paramref name=&quot;s&quot; /&gt; is &lt;see langword=&quot;null&quot; /&gt;.">
        <paramref name="s" /> a la valeur <see langword="null" />.</exception>
      <exception cref="T:System.FormatException" vsli:raw="&lt;paramref name=&quot;s&quot; /&gt; or &lt;paramref name=&quot;format&quot; /&gt; is String.Empty  &#xA;  &#xA; -or-  &#xA;  &#xA; &lt;paramref name=&quot;s&quot; /&gt; does not contain a date and time that corresponds to &lt;paramref name=&quot;format&quot; /&gt;.">
        <paramref name="s" /> ou <paramref name="format" /> est String.Empty 
- ou - 
 <paramref name="s" /> ne contient aucune date ou heure correspondant à <paramref name="format" />.</exception>
      <returns vsli:raw="A &lt;see langword=&quot;DateTime&quot; /&gt; equivalent of the string.">Équivalent <see langword="DateTime" /> de la chaîne.</returns>
    </member>
    <member name="M:System.Xml.XmlConvert.ToDateTime(System.String,System.String[])">
      <summary vsli:raw="Converts the &lt;see cref=&quot;T:System.String&quot; /&gt; to a &lt;see cref=&quot;T:System.DateTime&quot; /&gt; equivalent.">Convertit la chaîne <see cref="T:System.String" /> en un équivalent <see cref="T:System.DateTime" />.</summary>
      <param name="s" vsli:raw="The string to convert.">Chaîne à convertir.</param>
      <param name="formats" vsli:raw="An array containing the format structures to apply to the converted &lt;see langword=&quot;DateTime&quot; /&gt;. Valid formats include &quot;yyyy-MM-ddTHH:mm:sszzzzzz&quot; and its subsets.">Tableau contenant les structures du format à appliquer à l'élément <see langword="DateTime" /> converti. Les formats valides sont "yyyy-MM-ddTHH:mm:sszzzzzz" et ses sous-ensembles.</param>
      <exception cref="T:System.ArgumentNullException" vsli:raw="&lt;paramref name=&quot;s&quot; /&gt; is &lt;see langword=&quot;null&quot; /&gt;.">
        <paramref name="s" /> a la valeur <see langword="null" />.</exception>
      <exception cref="T:System.FormatException" vsli:raw="&lt;paramref name=&quot;s&quot; /&gt; or an element of &lt;paramref name=&quot;formats&quot; /&gt; is String.Empty  &#xA;  &#xA; -or-  &#xA;  &#xA; &lt;paramref name=&quot;s&quot; /&gt; does not contain a date and time that corresponds to any of the elements of &lt;paramref name=&quot;formats&quot; /&gt;.">
        <paramref name="s" /> ou un élément de <paramref name="formats" /> est String.Empty 
- ou - 
 <paramref name="s" /> ne contient aucune date ou heure correspondant à un élément de <paramref name="formats" />.</exception>
      <returns vsli:raw="A &lt;see langword=&quot;DateTime&quot; /&gt; equivalent of the string.">Équivalent <see langword="DateTime" /> de la chaîne.</returns>
    </member>
    <member name="M:System.Xml.XmlConvert.ToDateTime(System.String,System.Xml.XmlDateTimeSerializationMode)">
      <summary vsli:raw="Converts the &lt;see cref=&quot;T:System.String&quot; /&gt; to a &lt;see cref=&quot;T:System.DateTime&quot; /&gt; using the &lt;see cref=&quot;T:System.Xml.XmlDateTimeSerializationMode&quot; /&gt; specified.">Convertit l'élément <see cref="T:System.String" /> en une chaîne <see cref="T:System.DateTime" /> en utilisant le mode <see cref="T:System.Xml.XmlDateTimeSerializationMode" /> spécifié.</summary>
      <param name="s" vsli:raw="The &lt;see cref=&quot;T:System.String&quot; /&gt; value to convert.">Valeur <see cref="T:System.String" /> à convertir.</param>
      <param name="dateTimeOption" vsli:raw="One of the enumeration values that specify whether the date should be converted to local time or preserved as Coordinated Universal Time (UTC), if it is a UTC date.">Une des valeurs d’énumération qui spécifient si la date doit être convertie en heure locale ou conservée en temps UTC, s’il s’agit d’une date UTC.</param>
      <exception cref="T:System.NullReferenceException" vsli:raw="&lt;paramref name=&quot;s&quot; /&gt; is &lt;see langword=&quot;null&quot; /&gt;.">
        <paramref name="s" /> a la valeur <see langword="null" />.</exception>
      <exception cref="T:System.ArgumentNullException" vsli:raw="&lt;paramref name=&quot;dateTimeOption&quot; /&gt; is &lt;see langword=&quot;null&quot; /&gt;.">
        <paramref name="dateTimeOption" /> a la valeur <see langword="null" />.</exception>
      <exception cref="T:System.FormatException" vsli:raw="&lt;paramref name=&quot;s&quot; /&gt; is an empty string or is not in a valid format.">
        <paramref name="s" /> est une chaîne vide ou n'est pas dans un format valide.</exception>
      <returns vsli:raw="A &lt;see cref=&quot;T:System.DateTime&quot; /&gt; equivalent of the &lt;see cref=&quot;T:System.String&quot; /&gt;.">Équivalent <see cref="T:System.DateTime" /> de l'élément <see cref="T:System.String" />.</returns>
    </member>
    <member name="M:System.Xml.XmlConvert.ToDateTimeOffset(System.String)">
      <summary vsli:raw="Converts the supplied &lt;see cref=&quot;T:System.String&quot; /&gt; to a &lt;see cref=&quot;T:System.DateTimeOffset&quot; /&gt; equivalent.">Convertit la chaîne <see cref="T:System.String" /> fournie en un équivalent <see cref="T:System.DateTimeOffset" />.</summary>
      <param name="s" vsli:raw="The string to convert. The string must conform to a subset of the W3C Recommendation for the XML dateTime type. For more information, see the dateTime section of the XML Schema specification.">Chaîne à convertir.  
  
 Remarque La chaîne doit être conforme à une partie de la recommandation du W3C sur le type XML dateTime. Pour plus d’informations, consultez la section dateTime de la spécification XML Schema.</param>
      <exception cref="T:System.ArgumentNullException" vsli:raw="&lt;paramref name=&quot;s&quot; /&gt; is &lt;see langword=&quot;null&quot; /&gt;.">
        <paramref name="s" /> a la valeur <see langword="null" />.</exception>
      <exception cref="T:System.ArgumentOutOfRangeException" vsli:raw="The argument passed to this method is outside the range of allowable values. For information about allowable values, see &lt;see cref=&quot;T:System.DateTimeOffset&quot; /&gt;.">L'argument passé à cette méthode se trouve en dehors de la plage de valeurs autorisées. Pour plus d'informations sur les valeurs autorisées, consultez <see cref="T:System.DateTimeOffset" />.</exception>
      <exception cref="T:System.FormatException" vsli:raw="The argument passed to this method does not conform to a subset of the W3C Recommendations for the XML dateTime type. For more information, see the dateTime section of the XML Schema specification.">L'argument passé à cette méthode n'est pas conforme à un sous-ensemble de recommandations du W3C sur le type XML dateTime. Pour plus d’informations, consultez la section dateTime de la spécification XML Schema.</exception>
      <returns vsli:raw="The &lt;see cref=&quot;T:System.DateTimeOffset&quot; /&gt; equivalent of the supplied string.">Équivalent <see cref="T:System.DateTimeOffset" /> de la chaîne fournie.</returns>
    </member>
    <member name="M:System.Xml.XmlConvert.ToDateTimeOffset(System.String,System.String)">
      <summary vsli:raw="Converts the supplied &lt;see cref=&quot;T:System.String&quot; /&gt; to a &lt;see cref=&quot;T:System.DateTimeOffset&quot; /&gt; equivalent.">Convertit la chaîne <see cref="T:System.String" /> fournie en un équivalent <see cref="T:System.DateTimeOffset" />.</summary>
      <param name="s" vsli:raw="The string to convert.">Chaîne à convertir.</param>
      <param name="format" vsli:raw="The format from which &lt;paramref name=&quot;s&quot; /&gt; is converted. The format parameter can be any subset of the W3C Recommendation for the XML dateTime type. (For more information, see the dateTime section of the XML Schema specification..) The string &lt;paramref name=&quot;s&quot; /&gt; is validated against this format.">Format à partir duquel <paramref name="s" /> est convertie. Le paramètre de format peut correspondre à un sous-ensemble de recommandations du W3C pour le type XML dateTime. (Pour plus d’informations, consultez la section dateTime de la spécification XML Schema.) La chaîne <paramref name="s" /> est validée par rapport à ce format.</param>
      <exception cref="T:System.ArgumentNullException" vsli:raw="&lt;paramref name=&quot;s&quot; /&gt; is &lt;see langword=&quot;null&quot; /&gt;.">
        <paramref name="s" /> a la valeur <see langword="null" />.</exception>
      <exception cref="T:System.FormatException" vsli:raw="&lt;paramref name=&quot;s&quot; /&gt; or &lt;paramref name=&quot;format&quot; /&gt; is an empty string or is not in the specified format.">
        <paramref name="s" /> ou <paramref name="format" /> est une chaîne vide et n'est pas dans le format spécifié.</exception>
      <returns vsli:raw="The &lt;see cref=&quot;T:System.DateTimeOffset&quot; /&gt; equivalent of the supplied string.">Équivalent <see cref="T:System.DateTimeOffset" /> de la chaîne fournie.</returns>
    </member>
    <member name="M:System.Xml.XmlConvert.ToDateTimeOffset(System.String,System.String[])">
      <summary vsli:raw="Converts the supplied &lt;see cref=&quot;T:System.String&quot; /&gt; to a &lt;see cref=&quot;T:System.DateTimeOffset&quot; /&gt; equivalent.">Convertit la chaîne <see cref="T:System.String" /> fournie en un équivalent <see cref="T:System.DateTimeOffset" />.</summary>
      <param name="s" vsli:raw="The string to convert.">Chaîne à convertir.</param>
      <param name="formats" vsli:raw="An array of formats from which &lt;paramref name=&quot;s&quot; /&gt; can be converted. Each format in &lt;paramref name=&quot;formats&quot; /&gt; can be any subset of the W3C Recommendation for the XML dateTime type. (For more information, see the dateTime section of the XML Schema specification..) The string &lt;paramref name=&quot;s&quot; /&gt; is validated against one of these formats.">Tableau de formats à partir duquel <paramref name="s" /> peut être convertie. Chaque format figurant dans <paramref name="formats" /> peut correspondre à un des sous-ensembles de la recommandation W3C pour le type XML dateTime. (Pour plus d’informations, consultez la section dateTime de la spécification XML Schema.) La chaîne <paramref name="s" /> est validée par rapport à l'un de ces formats.</param>
      <returns vsli:raw="The &lt;see cref=&quot;T:System.DateTimeOffset&quot; /&gt; equivalent of the supplied string.">Équivalent <see cref="T:System.DateTimeOffset" /> de la chaîne fournie.</returns>
    </member>
    <member name="M:System.Xml.XmlConvert.ToDecimal(System.String)">
      <summary vsli:raw="Converts the &lt;see cref=&quot;T:System.String&quot; /&gt; to a &lt;see cref=&quot;T:System.Decimal&quot; /&gt; equivalent.">Convertit la chaîne <see cref="T:System.String" /> en un équivalent <see cref="T:System.Decimal" />.</summary>
      <param name="s" vsli:raw="The string to convert.">Chaîne à convertir.</param>
      <exception cref="T:System.ArgumentNullException" vsli:raw="&lt;paramref name=&quot;s&quot; /&gt; is &lt;see langword=&quot;null&quot; /&gt;.">
        <paramref name="s" /> a la valeur <see langword="null" />.</exception>
      <exception cref="T:System.FormatException" vsli:raw="&lt;paramref name=&quot;s&quot; /&gt; is not in the correct format.">Le format de <paramref name="s" /> est incorrect.</exception>
      <exception cref="T:System.OverflowException" vsli:raw="&lt;paramref name=&quot;s&quot; /&gt; represents a number less than &lt;see cref=&quot;F:System.Decimal.MinValue&quot;&gt;Decimal.MinValue&lt;/see&gt; or greater than &lt;see cref=&quot;F:System.Decimal.MaxValue&quot;&gt;Decimal.MaxValue&lt;/see&gt;.">
        <paramref name="s" /> représente un nombre inférieur à <see cref="F:System.Decimal.MinValue" /> ou supérieur à <see cref="F:System.Decimal.MaxValue" />.</exception>
      <returns vsli:raw="A &lt;see langword=&quot;Decimal&quot; /&gt; equivalent of the string.">Équivalent <see langword="Decimal" /> de la chaîne.</returns>
    </member>
    <member name="M:System.Xml.XmlConvert.ToDouble(System.String)">
      <summary vsli:raw="Converts the &lt;see cref=&quot;T:System.String&quot; /&gt; to a &lt;see cref=&quot;T:System.Double&quot; /&gt; equivalent.">Convertit la chaîne <see cref="T:System.String" /> en un équivalent <see cref="T:System.Double" />.</summary>
      <param name="s" vsli:raw="The string to convert.">Chaîne à convertir.</param>
      <exception cref="T:System.ArgumentNullException" vsli:raw="&lt;paramref name=&quot;s&quot; /&gt; is &lt;see langword=&quot;null&quot; /&gt;.">
        <paramref name="s" /> a la valeur <see langword="null" />.</exception>
      <exception cref="T:System.FormatException" vsli:raw="&lt;paramref name=&quot;s&quot; /&gt; is not in the correct format.">Le format de <paramref name="s" /> est incorrect.</exception>
      <exception cref="T:System.OverflowException" vsli:raw="&lt;paramref name=&quot;s&quot; /&gt; represents a number less than &lt;see cref=&quot;F:System.Double.MinValue&quot;&gt;Double.MinValue&lt;/see&gt; or greater than &lt;see cref=&quot;F:System.Double.MaxValue&quot;&gt;Double.MaxValue&lt;/see&gt;.">
        <paramref name="s" /> représente un nombre inférieur à <see cref="F:System.Double.MinValue" /> ou supérieur à <see cref="F:System.Double.MaxValue" />.</exception>
      <returns vsli:raw="A &lt;see cref=&quot;T:System.Double&quot; /&gt; equivalent of the string.">Équivalent <see cref="T:System.Double" /> de la chaîne.</returns>
    </member>
    <member name="M:System.Xml.XmlConvert.ToGuid(System.String)">
      <summary vsli:raw="Converts the &lt;see cref=&quot;T:System.String&quot; /&gt; to a &lt;see cref=&quot;T:System.Guid&quot; /&gt; equivalent.">Convertit la chaîne <see cref="T:System.String" /> en un équivalent <see cref="T:System.Guid" />.</summary>
      <param name="s" vsli:raw="The string to convert.">Chaîne à convertir.</param>
      <returns vsli:raw="A &lt;see langword=&quot;Guid&quot; /&gt; equivalent of the string.">Équivalent <see langword="Guid" /> de la chaîne.</returns>
    </member>
    <member name="M:System.Xml.XmlConvert.ToInt16(System.String)">
      <summary vsli:raw="Converts the &lt;see cref=&quot;T:System.String&quot; /&gt; to a &lt;see cref=&quot;T:System.Int16&quot; /&gt; equivalent.">Convertit la chaîne <see cref="T:System.String" /> en un équivalent <see cref="T:System.Int16" />.</summary>
      <param name="s" vsli:raw="The string to convert.">Chaîne à convertir.</param>
      <exception cref="T:System.ArgumentNullException" vsli:raw="&lt;paramref name=&quot;s&quot; /&gt; is &lt;see langword=&quot;null&quot; /&gt;.">
        <paramref name="s" /> a la valeur <see langword="null" />.</exception>
      <exception cref="T:System.FormatException" vsli:raw="&lt;paramref name=&quot;s&quot; /&gt; is not in the correct format.">Le format de <paramref name="s" /> est incorrect.</exception>
      <exception cref="T:System.OverflowException" vsli:raw="&lt;paramref name=&quot;s&quot; /&gt; represents a number less than &lt;see cref=&quot;F:System.Int16.MinValue&quot;&gt;Int16.MinValue&lt;/see&gt; or greater than &lt;see cref=&quot;F:System.Int16.MaxValue&quot;&gt;Int16.MaxValue&lt;/see&gt;.">
        <paramref name="s" /> représente un nombre inférieur à <see cref="F:System.Int16.MinValue" /> ou supérieur à <see cref="F:System.Int16.MaxValue" />.</exception>
      <returns vsli:raw="An &lt;see cref=&quot;T:System.Int16&quot; /&gt; equivalent of the string.">Équivalent <see cref="T:System.Int16" /> de la chaîne.</returns>
    </member>
    <member name="M:System.Xml.XmlConvert.ToInt32(System.String)">
      <summary vsli:raw="Converts the &lt;see cref=&quot;T:System.String&quot; /&gt; to a &lt;see cref=&quot;T:System.Int32&quot; /&gt; equivalent.">Convertit la chaîne <see cref="T:System.String" /> en un équivalent <see cref="T:System.Int32" />.</summary>
      <param name="s" vsli:raw="The string to convert.">Chaîne à convertir.</param>
      <exception cref="T:System.ArgumentNullException" vsli:raw="&lt;paramref name=&quot;s&quot; /&gt; is &lt;see langword=&quot;null&quot; /&gt;.">
        <paramref name="s" /> a la valeur <see langword="null" />.</exception>
      <exception cref="T:System.FormatException" vsli:raw="&lt;paramref name=&quot;s&quot; /&gt; is not in the correct format.">Le format de <paramref name="s" /> est incorrect.</exception>
      <exception cref="T:System.OverflowException" vsli:raw="&lt;paramref name=&quot;s&quot; /&gt; represents a number less than &lt;see cref=&quot;F:System.Int32.MinValue&quot;&gt;Int32.MinValue&lt;/see&gt; or greater than &lt;see cref=&quot;F:System.Int32.MaxValue&quot;&gt;Int32.MaxValue&lt;/see&gt;.">
        <paramref name="s" /> représente un nombre inférieur à <see cref="F:System.Int32.MinValue" /> ou supérieur à <see cref="F:System.Int32.MaxValue" />.</exception>
      <returns vsli:raw="An &lt;see cref=&quot;T:System.Int32&quot; /&gt; equivalent of the string.">Équivalent <see cref="T:System.Int32" /> de la chaîne.</returns>
    </member>
    <member name="M:System.Xml.XmlConvert.ToInt64(System.String)">
      <summary vsli:raw="Converts the &lt;see cref=&quot;T:System.String&quot; /&gt; to a &lt;see cref=&quot;T:System.Int64&quot; /&gt; equivalent.">Convertit la chaîne <see cref="T:System.String" /> en un équivalent <see cref="T:System.Int64" />.</summary>
      <param name="s" vsli:raw="The string to convert.">Chaîne à convertir.</param>
      <exception cref="T:System.ArgumentNullException" vsli:raw="&lt;paramref name=&quot;s&quot; /&gt; is &lt;see langword=&quot;null&quot; /&gt;.">
        <paramref name="s" /> a la valeur <see langword="null" />.</exception>
      <exception cref="T:System.FormatException" vsli:raw="&lt;paramref name=&quot;s&quot; /&gt; is not in the correct format.">Le format de <paramref name="s" /> est incorrect.</exception>
      <exception cref="T:System.OverflowException" vsli:raw="&lt;paramref name=&quot;s&quot; /&gt; represents a number less than &lt;see cref=&quot;F:System.Int64.MinValue&quot;&gt;Int64.MinValue&lt;/see&gt; or greater than &lt;see cref=&quot;F:System.Int64.MaxValue&quot;&gt;Int64.MaxValue&lt;/see&gt;.">
        <paramref name="s" /> représente un nombre inférieur à <see cref="F:System.Int64.MinValue" /> ou supérieur à <see cref="F:System.Int64.MaxValue" />.</exception>
      <returns vsli:raw="An &lt;see cref=&quot;T:System.Int64&quot; /&gt; equivalent of the string.">Équivalent <see cref="T:System.Int64" /> de la chaîne.</returns>
    </member>
    <member name="M:System.Xml.XmlConvert.ToSByte(System.String)">
      <summary vsli:raw="Converts the &lt;see cref=&quot;T:System.String&quot; /&gt; to a &lt;see cref=&quot;T:System.SByte&quot; /&gt; equivalent.">Convertit la chaîne <see cref="T:System.String" /> en un équivalent <see cref="T:System.SByte" />.</summary>
      <param name="s" vsli:raw="The string to convert.">Chaîne à convertir.</param>
      <exception cref="T:System.ArgumentNullException" vsli:raw="&lt;paramref name=&quot;s&quot; /&gt; is &lt;see langword=&quot;null&quot; /&gt;.">
        <paramref name="s" /> a la valeur <see langword="null" />.</exception>
      <exception cref="T:System.FormatException" vsli:raw="&lt;paramref name=&quot;s&quot; /&gt; is not in the correct format.">Le format de <paramref name="s" /> est incorrect.</exception>
      <exception cref="T:System.OverflowException" vsli:raw="&lt;paramref name=&quot;s&quot; /&gt; represents a number less than &lt;see cref=&quot;F:System.SByte.MinValue&quot;&gt;SByte.MinValue&lt;/see&gt; or greater than &lt;see cref=&quot;F:System.SByte.MaxValue&quot;&gt;SByte.MaxValue&lt;/see&gt;.">
        <paramref name="s" /> représente un nombre inférieur à <see cref="F:System.SByte.MinValue" /> ou supérieur à <see cref="F:System.SByte.MaxValue" />.</exception>
      <returns vsli:raw="An &lt;see langword=&quot;SByte&quot; /&gt; equivalent of the string.">Équivalent <see langword="SByte" /> de la chaîne.</returns>
    </member>
    <member name="M:System.Xml.XmlConvert.ToSingle(System.String)">
      <summary vsli:raw="Converts the &lt;see cref=&quot;T:System.String&quot; /&gt; to a &lt;see cref=&quot;T:System.Single&quot; /&gt; equivalent.">Convertit la chaîne <see cref="T:System.String" /> en un équivalent <see cref="T:System.Single" />.</summary>
      <param name="s" vsli:raw="The string to convert.">Chaîne à convertir.</param>
      <exception cref="T:System.ArgumentNullException" vsli:raw="&lt;paramref name=&quot;s&quot; /&gt; is &lt;see langword=&quot;null&quot; /&gt;.">
        <paramref name="s" /> a la valeur <see langword="null" />.</exception>
      <exception cref="T:System.FormatException" vsli:raw="&lt;paramref name=&quot;s&quot; /&gt; is not in the correct format.">Le format de <paramref name="s" /> est incorrect.</exception>
      <exception cref="T:System.OverflowException" vsli:raw="&lt;paramref name=&quot;s&quot; /&gt; represents a number less than &lt;see cref=&quot;F:System.Single.MinValue&quot;&gt;Single.MinValue&lt;/see&gt; or greater than &lt;see cref=&quot;F:System.Single.MaxValue&quot;&gt;Single.MaxValue&lt;/see&gt;.">
        <paramref name="s" /> représente un nombre inférieur à <see cref="F:System.Single.MinValue" /> ou supérieur à <see cref="F:System.Single.MaxValue" />.</exception>
      <returns vsli:raw="A &lt;see cref=&quot;T:System.Single&quot; /&gt; equivalent of the string.">Équivalent <see cref="T:System.Single" /> de la chaîne.</returns>
    </member>
    <member name="M:System.Xml.XmlConvert.ToString(System.Boolean)">
      <summary vsli:raw="Converts the &lt;see cref=&quot;T:System.Boolean&quot; /&gt; to a &lt;see cref=&quot;T:System.String&quot; /&gt;.">Convertit le <see cref="T:System.Boolean" /> en <see cref="T:System.String" />.</summary>
      <param name="value" vsli:raw="The value to convert.">Valeur à convertir.</param>
      <returns vsli:raw="A string representation of the &lt;see langword=&quot;Boolean&quot; /&gt;, that is, &quot;true&quot; or &quot;false&quot;.">Une représentation sous forme de chaîne de l'élément <see langword="Boolean" />, c'est-à-dire "true" ou "false".</returns>
    </member>
    <member name="M:System.Xml.XmlConvert.ToString(System.Byte)">
      <summary vsli:raw="Converts the &lt;see cref=&quot;T:System.Byte&quot; /&gt; to a &lt;see cref=&quot;T:System.String&quot; /&gt;.">Convertit le <see cref="T:System.Byte" /> en <see cref="T:System.String" />.</summary>
      <param name="value" vsli:raw="The value to convert.">Valeur à convertir.</param>
      <returns vsli:raw="A string representation of the &lt;see langword=&quot;Byte&quot; /&gt;.">Représentation sous forme de chaîne de <see langword="Byte" />.</returns>
    </member>
    <member name="M:System.Xml.XmlConvert.ToString(System.Char)">
      <summary vsli:raw="Converts the &lt;see cref=&quot;T:System.Char&quot; /&gt; to a &lt;see cref=&quot;T:System.String&quot; /&gt;.">Convertit le <see cref="T:System.Char" /> en <see cref="T:System.String" />.</summary>
      <param name="value" vsli:raw="The value to convert.">Valeur à convertir.</param>
      <returns vsli:raw="A string representation of the &lt;see langword=&quot;Char&quot; /&gt;.">Représentation sous forme de chaîne de <see langword="Char" />.</returns>
    </member>
    <member name="M:System.Xml.XmlConvert.ToString(System.DateTime)">
      <summary vsli:raw="Converts the &lt;see cref=&quot;T:System.DateTime&quot; /&gt; to a &lt;see cref=&quot;T:System.String&quot; /&gt;.">Convertit le <see cref="T:System.DateTime" /> en <see cref="T:System.String" />.</summary>
      <param name="value" vsli:raw="The value to convert.">Valeur à convertir.</param>
      <returns vsli:raw="A string representation of the &lt;see langword=&quot;DateTime&quot; /&gt; in the format yyyy-MM-ddTHH:mm:ss where 'T' is a constant literal.">Représentation sous forme de chaîne de <see langword="DateTime" /> au format yyyy-MM-ddTHH:mm:ss, où 'T' est une constante littérale.</returns>
    </member>
    <member name="M:System.Xml.XmlConvert.ToString(System.DateTime,System.String)">
      <summary vsli:raw="Converts the &lt;see cref=&quot;T:System.DateTime&quot; /&gt; to a &lt;see cref=&quot;T:System.String&quot; /&gt;.">Convertit le <see cref="T:System.DateTime" /> en <see cref="T:System.String" />.</summary>
      <param name="value" vsli:raw="The value to convert.">Valeur à convertir.</param>
      <param name="format" vsli:raw="The format structure that defines how to display the converted string. Valid formats include &quot;yyyy-MM-ddTHH:mm:sszzzzzz&quot; and its subsets.">Structure du format qui définit comment afficher la chaîne convertie. Les formats valides sont "yyyy-MM-ddTHH:mm:sszzzzzz" et ses sous-ensembles.</param>
      <returns vsli:raw="A string representation of the &lt;see langword=&quot;DateTime&quot; /&gt; in the specified format.">Représentation sous forme de chaîne de <see langword="DateTime" /> au format spécifié.</returns>
    </member>
    <member name="M:System.Xml.XmlConvert.ToString(System.DateTime,System.Xml.XmlDateTimeSerializationMode)">
      <summary vsli:raw="Converts the &lt;see cref=&quot;T:System.DateTime&quot; /&gt; to a &lt;see cref=&quot;T:System.String&quot; /&gt; using the &lt;see cref=&quot;T:System.Xml.XmlDateTimeSerializationMode&quot; /&gt; specified.">Convertit l'élément <see cref="T:System.DateTime" /> en une chaîne <see cref="T:System.String" /> en utilisant le mode <see cref="T:System.Xml.XmlDateTimeSerializationMode" /> spécifié.</summary>
      <param name="value" vsli:raw="The &lt;see cref=&quot;T:System.DateTime&quot; /&gt; value to convert.">Valeur <see cref="T:System.DateTime" /> à convertir.</param>
      <param name="dateTimeOption" vsli:raw="One of the &lt;see cref=&quot;T:System.Xml.XmlDateTimeSerializationMode&quot; /&gt; values that specify how to treat the &lt;see cref=&quot;T:System.DateTime&quot; /&gt; value.">Une des valeurs de <see cref="T:System.Xml.XmlDateTimeSerializationMode" /> qui spécifient comment traiter la valeur <see cref="T:System.DateTime" />.</param>
      <exception cref="T:System.ArgumentException" vsli:raw="The &lt;paramref name=&quot;dateTimeOption&quot; /&gt; value is not valid.">La valeur <paramref name="dateTimeOption" /> n'est pas valide.</exception>
      <exception cref="T:System.ArgumentNullException" vsli:raw="The &lt;paramref name=&quot;value&quot; /&gt; or &lt;paramref name=&quot;dateTimeOption&quot; /&gt; value is &lt;see langword=&quot;null&quot; /&gt;.">La valeur de <paramref name="value" /> ou de <paramref name="dateTimeOption" /> est <see langword="null" />.</exception>
      <returns vsli:raw="A &lt;see cref=&quot;T:System.String&quot; /&gt; equivalent of the &lt;see cref=&quot;T:System.DateTime&quot; /&gt;.">Équivalent <see cref="T:System.String" /> de l'élément <see cref="T:System.DateTime" />.</returns>
    </member>
    <member name="M:System.Xml.XmlConvert.ToString(System.DateTimeOffset)">
      <summary vsli:raw="Converts the supplied &lt;see cref=&quot;T:System.DateTimeOffset&quot; /&gt; to a &lt;see cref=&quot;T:System.String&quot; /&gt;.">Convertit l'élément <see cref="T:System.DateTimeOffset" /> fourni en une chaîne <see cref="T:System.String" />.</summary>
      <param name="value" vsli:raw="The &lt;see cref=&quot;T:System.DateTimeOffset&quot; /&gt; to be converted.">
        <see cref="T:System.DateTimeOffset" /> à convertir.</param>
      <returns vsli:raw="A &lt;see cref=&quot;T:System.String&quot; /&gt; representation of the supplied &lt;see cref=&quot;T:System.DateTimeOffset&quot; /&gt;.">Représentation <see cref="T:System.String" /> de l'élément <see cref="T:System.DateTimeOffset" /> fourni.</returns>
    </member>
    <member name="M:System.Xml.XmlConvert.ToString(System.DateTimeOffset,System.String)">
      <summary vsli:raw="Converts the supplied &lt;see cref=&quot;T:System.DateTimeOffset&quot; /&gt; to a &lt;see cref=&quot;T:System.String&quot; /&gt; in the specified format.">Convertit l'élément <see cref="T:System.DateTimeOffset" /> fourni en une chaîne <see cref="T:System.String" /> dans le format spécifié.</summary>
      <param name="value" vsli:raw="The &lt;see cref=&quot;T:System.DateTimeOffset&quot; /&gt; to be converted.">
        <see cref="T:System.DateTimeOffset" /> à convertir.</param>
      <param name="format" vsli:raw="The format to which &lt;paramref name=&quot;s&quot; /&gt; is converted. The format parameter can be any subset of the W3C Recommendation for the XML dateTime type. (For more information, see the dateTime section of the XML Schema specification..)">Format vers lequel <paramref name="s" /> est convertie. Le paramètre de format peut correspondre à un sous-ensemble de recommandations du W3C pour le type XML dateTime. (Pour plus d’informations, consultez la section dateTime de la spécification XML Schema.)</param>
      <returns vsli:raw="A &lt;see cref=&quot;T:System.String&quot; /&gt; representation in the specified format of the supplied &lt;see cref=&quot;T:System.DateTimeOffset&quot; /&gt;.">Représentation <see cref="T:System.String" /> dans le format spécifié de l'élément <see cref="T:System.DateTimeOffset" />.</returns>
    </member>
    <member name="M:System.Xml.XmlConvert.ToString(System.Decimal)">
      <summary vsli:raw="Converts the &lt;see cref=&quot;T:System.Decimal&quot; /&gt; to a &lt;see cref=&quot;T:System.String&quot; /&gt;.">Convertit le <see cref="T:System.Decimal" /> en <see cref="T:System.String" />.</summary>
      <param name="value" vsli:raw="The value to convert.">Valeur à convertir.</param>
      <returns vsli:raw="A string representation of the &lt;see langword=&quot;Decimal&quot; /&gt;.">Représentation sous forme de chaîne de <see langword="Decimal" />.</returns>
    </member>
    <member name="M:System.Xml.XmlConvert.ToString(System.Double)">
      <summary vsli:raw="Converts the &lt;see cref=&quot;T:System.Double&quot; /&gt; to a &lt;see cref=&quot;T:System.String&quot; /&gt;.">Convertit le <see cref="T:System.Double" /> en <see cref="T:System.String" />.</summary>
      <param name="value" vsli:raw="The value to convert.">Valeur à convertir.</param>
      <returns vsli:raw="A string representation of the &lt;see cref=&quot;T:System.Double&quot; /&gt;.">Représentation sous forme de chaîne de <see cref="T:System.Double" />.</returns>
    </member>
    <member name="M:System.Xml.XmlConvert.ToString(System.Guid)">
      <summary vsli:raw="Converts the &lt;see cref=&quot;T:System.Guid&quot; /&gt; to a &lt;see cref=&quot;T:System.String&quot; /&gt;.">Convertit le <see cref="T:System.Guid" /> en <see cref="T:System.String" />.</summary>
      <param name="value" vsli:raw="The value to convert.">Valeur à convertir.</param>
      <returns vsli:raw="A string representation of the &lt;see langword=&quot;Guid&quot; /&gt;.">Représentation sous forme de chaîne de <see langword="Guid" />.</returns>
    </member>
    <member name="M:System.Xml.XmlConvert.ToString(System.Int16)">
      <summary vsli:raw="Converts the &lt;see cref=&quot;T:System.Int16&quot; /&gt; to a &lt;see cref=&quot;T:System.String&quot; /&gt;.">Convertit le <see cref="T:System.Int16" /> en <see cref="T:System.String" />.</summary>
      <param name="value" vsli:raw="The value to convert.">Valeur à convertir.</param>
      <returns vsli:raw="A string representation of the &lt;see cref=&quot;T:System.Int16&quot; /&gt;.">Représentation sous forme de chaîne de <see cref="T:System.Int16" />.</returns>
    </member>
    <member name="M:System.Xml.XmlConvert.ToString(System.Int32)">
      <summary vsli:raw="Converts the &lt;see cref=&quot;T:System.Int32&quot; /&gt; to a &lt;see cref=&quot;T:System.String&quot; /&gt;.">Convertit le <see cref="T:System.Int32" /> en <see cref="T:System.String" />.</summary>
      <param name="value" vsli:raw="The value to convert.">Valeur à convertir.</param>
      <returns vsli:raw="A string representation of the &lt;see cref=&quot;T:System.Int32&quot; /&gt;.">Représentation sous forme de chaîne de <see cref="T:System.Int32" />.</returns>
    </member>
    <member name="M:System.Xml.XmlConvert.ToString(System.Int64)">
      <summary vsli:raw="Converts the &lt;see cref=&quot;T:System.Int64&quot; /&gt; to a &lt;see cref=&quot;T:System.String&quot; /&gt;.">Convertit le <see cref="T:System.Int64" /> en <see cref="T:System.String" />.</summary>
      <param name="value" vsli:raw="The value to convert.">Valeur à convertir.</param>
      <returns vsli:raw="A string representation of the &lt;see cref=&quot;T:System.Int64&quot; /&gt;.">Représentation sous forme de chaîne de <see cref="T:System.Int64" />.</returns>
    </member>
    <member name="M:System.Xml.XmlConvert.ToString(System.SByte)">
      <summary vsli:raw="Converts the &lt;see cref=&quot;T:System.SByte&quot; /&gt; to a &lt;see cref=&quot;T:System.String&quot; /&gt;.">Convertit le <see cref="T:System.SByte" /> en <see cref="T:System.String" />.</summary>
      <param name="value" vsli:raw="The value to convert.">Valeur à convertir.</param>
      <returns vsli:raw="A string representation of the &lt;see langword=&quot;SByte&quot; /&gt;.">Représentation sous forme de chaîne de <see langword="SByte" />.</returns>
    </member>
    <member name="M:System.Xml.XmlConvert.ToString(System.Single)">
      <summary vsli:raw="Converts the &lt;see cref=&quot;T:System.Single&quot; /&gt; to a &lt;see cref=&quot;T:System.String&quot; /&gt;.">Convertit le <see cref="T:System.Single" /> en <see cref="T:System.String" />.</summary>
      <param name="value" vsli:raw="The value to convert.">Valeur à convertir.</param>
      <returns vsli:raw="A string representation of the &lt;see cref=&quot;T:System.Single&quot; /&gt;.">Représentation sous forme de chaîne de <see cref="T:System.Single" />.</returns>
    </member>
    <member name="M:System.Xml.XmlConvert.ToString(System.TimeSpan)">
      <summary vsli:raw="Converts the &lt;see cref=&quot;T:System.TimeSpan&quot; /&gt; to a &lt;see cref=&quot;T:System.String&quot; /&gt;.">Convertit le <see cref="T:System.TimeSpan" /> en <see cref="T:System.String" />.</summary>
      <param name="value" vsli:raw="The value to convert.">Valeur à convertir.</param>
      <returns vsli:raw="A string representation of the &lt;see langword=&quot;TimeSpan&quot; /&gt;.">Représentation sous forme de chaîne de <see langword="TimeSpan" />.</returns>
    </member>
    <member name="M:System.Xml.XmlConvert.ToString(System.UInt16)">
      <summary vsli:raw="Converts the &lt;see cref=&quot;T:System.UInt16&quot; /&gt; to a &lt;see cref=&quot;T:System.String&quot; /&gt;.">Convertit le <see cref="T:System.UInt16" /> en <see cref="T:System.String" />.</summary>
      <param name="value" vsli:raw="The value to convert.">Valeur à convertir.</param>
      <returns vsli:raw="A string representation of the &lt;see cref=&quot;T:System.UInt16&quot; /&gt;.">Représentation sous forme de chaîne de <see cref="T:System.UInt16" />.</returns>
    </member>
    <member name="M:System.Xml.XmlConvert.ToString(System.UInt32)">
      <summary vsli:raw="Converts the &lt;see cref=&quot;T:System.UInt32&quot; /&gt; to a &lt;see cref=&quot;T:System.String&quot; /&gt;.">Convertit le <see cref="T:System.UInt32" /> en <see cref="T:System.String" />.</summary>
      <param name="value" vsli:raw="The value to convert.">Valeur à convertir.</param>
      <returns vsli:raw="A string representation of the &lt;see cref=&quot;T:System.UInt32&quot; /&gt;.">Représentation sous forme de chaîne de <see cref="T:System.UInt32" />.</returns>
    </member>
    <member name="M:System.Xml.XmlConvert.ToString(System.UInt64)">
      <summary vsli:raw="Converts the &lt;see cref=&quot;T:System.UInt64&quot; /&gt; to a &lt;see cref=&quot;T:System.String&quot; /&gt;.">Convertit le <see cref="T:System.UInt64" /> en <see cref="T:System.String" />.</summary>
      <param name="value" vsli:raw="The value to convert.">Valeur à convertir.</param>
      <returns vsli:raw="A string representation of the &lt;see cref=&quot;T:System.UInt64&quot; /&gt;.">Représentation sous forme de chaîne de <see cref="T:System.UInt64" />.</returns>
    </member>
    <member name="M:System.Xml.XmlConvert.ToTimeSpan(System.String)">
      <summary vsli:raw="Converts the &lt;see cref=&quot;T:System.String&quot; /&gt; to a &lt;see cref=&quot;T:System.TimeSpan&quot; /&gt; equivalent.">Convertit la chaîne <see cref="T:System.String" /> en un équivalent <see cref="T:System.TimeSpan" />.</summary>
      <param name="s" vsli:raw="The string to convert. The string format must conform to the W3C XML Schema Part 2: Datatypes recommendation for duration.">Chaîne à convertir. Le format de chaîne doit être conforme à la recommandation W3C intitulée Schema Part 2 : Datatypes pour les durées.</param>
      <exception cref="T:System.FormatException" vsli:raw="&lt;paramref name=&quot;s&quot; /&gt; is not in correct format to represent a &lt;see langword=&quot;TimeSpan&quot; /&gt; value.">Le format de <paramref name="s" /> est incorrect pour représenter une valeur <see langword="TimeSpan" />.</exception>
      <returns vsli:raw="A &lt;see langword=&quot;TimeSpan&quot; /&gt; equivalent of the string.">Équivalent <see langword="TimeSpan" /> de la chaîne.</returns>
    </member>
    <member name="M:System.Xml.XmlConvert.ToUInt16(System.String)">
      <summary vsli:raw="Converts the &lt;see cref=&quot;T:System.String&quot; /&gt; to a &lt;see cref=&quot;T:System.UInt16&quot; /&gt; equivalent.">Convertit la chaîne <see cref="T:System.String" /> en un équivalent <see cref="T:System.UInt16" />.</summary>
      <param name="s" vsli:raw="The string to convert.">Chaîne à convertir.</param>
      <exception cref="T:System.ArgumentNullException" vsli:raw="&lt;paramref name=&quot;s&quot; /&gt; is &lt;see langword=&quot;null&quot; /&gt;.">
        <paramref name="s" /> a la valeur <see langword="null" />.</exception>
      <exception cref="T:System.FormatException" vsli:raw="&lt;paramref name=&quot;s&quot; /&gt; is not in the correct format.">Le format de <paramref name="s" /> est incorrect.</exception>
      <exception cref="T:System.OverflowException" vsli:raw="&lt;paramref name=&quot;s&quot; /&gt; represents a number less than &lt;see cref=&quot;F:System.UInt16.MinValue&quot;&gt;UInt16.MinValue&lt;/see&gt; or greater than &lt;see cref=&quot;F:System.UInt16.MaxValue&quot;&gt;UInt16.MaxValue&lt;/see&gt;.">
        <paramref name="s" /> représente un nombre inférieur à <see cref="F:System.UInt16.MinValue" /> ou supérieur à <see cref="F:System.UInt16.MaxValue" />.</exception>
      <returns vsli:raw="A &lt;see cref=&quot;T:System.UInt16&quot; /&gt; equivalent of the string.">Équivalent <see cref="T:System.UInt16" /> de la chaîne.</returns>
    </member>
    <member name="M:System.Xml.XmlConvert.ToUInt32(System.String)">
      <summary vsli:raw="Converts the &lt;see cref=&quot;T:System.String&quot; /&gt; to a &lt;see cref=&quot;T:System.UInt32&quot; /&gt; equivalent.">Convertit la chaîne <see cref="T:System.String" /> en un équivalent <see cref="T:System.UInt32" />.</summary>
      <param name="s" vsli:raw="The string to convert.">Chaîne à convertir.</param>
      <exception cref="T:System.ArgumentNullException" vsli:raw="&lt;paramref name=&quot;s&quot; /&gt; is &lt;see langword=&quot;null&quot; /&gt;.">
        <paramref name="s" /> a la valeur <see langword="null" />.</exception>
      <exception cref="T:System.FormatException" vsli:raw="&lt;paramref name=&quot;s&quot; /&gt; is not in the correct format.">Le format de <paramref name="s" /> est incorrect.</exception>
      <exception cref="T:System.OverflowException" vsli:raw="&lt;paramref name=&quot;s&quot; /&gt; represents a number less than &lt;see cref=&quot;F:System.UInt32.MinValue&quot;&gt;UInt32.MinValue&lt;/see&gt; or greater than &lt;see cref=&quot;F:System.UInt32.MaxValue&quot;&gt;UInt32.MaxValue&lt;/see&gt;.">
        <paramref name="s" /> représente un nombre inférieur à <see cref="F:System.UInt32.MinValue" /> ou supérieur à <see cref="F:System.UInt32.MaxValue" />.</exception>
      <returns vsli:raw="A &lt;see cref=&quot;T:System.UInt32&quot; /&gt; equivalent of the string.">Équivalent <see cref="T:System.UInt32" /> de la chaîne.</returns>
    </member>
    <member name="M:System.Xml.XmlConvert.ToUInt64(System.String)">
      <summary vsli:raw="Converts the &lt;see cref=&quot;T:System.String&quot; /&gt; to a &lt;see cref=&quot;T:System.UInt64&quot; /&gt; equivalent.">Convertit la chaîne <see cref="T:System.String" /> en un équivalent <see cref="T:System.UInt64" />.</summary>
      <param name="s" vsli:raw="The string to convert.">Chaîne à convertir.</param>
      <exception cref="T:System.ArgumentNullException" vsli:raw="&lt;paramref name=&quot;s&quot; /&gt; is &lt;see langword=&quot;null&quot; /&gt;.">
        <paramref name="s" /> a la valeur <see langword="null" />.</exception>
      <exception cref="T:System.FormatException" vsli:raw="&lt;paramref name=&quot;s&quot; /&gt; is not in the correct format.">Le format de <paramref name="s" /> est incorrect.</exception>
      <exception cref="T:System.OverflowException" vsli:raw="&lt;paramref name=&quot;s&quot; /&gt; represents a number less than &lt;see cref=&quot;F:System.UInt64.MinValue&quot;&gt;UInt64.MinValue&lt;/see&gt; or greater than &lt;see cref=&quot;F:System.UInt64.MaxValue&quot;&gt;UInt64.MaxValue&lt;/see&gt;.">
        <paramref name="s" /> représente un nombre inférieur à <see cref="F:System.UInt64.MinValue" /> ou supérieur à <see cref="F:System.UInt64.MaxValue" />.</exception>
      <returns vsli:raw="A &lt;see cref=&quot;T:System.UInt64&quot; /&gt; equivalent of the string.">Équivalent <see cref="T:System.UInt64" /> de la chaîne.</returns>
    </member>
    <member name="M:System.Xml.XmlConvert.VerifyName(System.String)">
      <summary vsli:raw="Verifies that the name is a valid name according to the W3C Extended Markup Language recommendation.">Vérifie que le nom est un nom valide selon la recommandation W3C XML (Extended Markup Language).</summary>
      <param name="name" vsli:raw="The name to verify.">Nom à vérifier.</param>
      <exception cref="T:System.Xml.XmlException" vsli:raw="&lt;paramref name=&quot;name&quot; /&gt; is not a valid XML name.">
        <paramref name="name" /> n'est pas un nom XML valide.</exception>
      <exception cref="T:System.ArgumentNullException" vsli:raw="&lt;paramref name=&quot;name&quot; /&gt; is &lt;see langword=&quot;null&quot; /&gt; or String.Empty.">
        <paramref name="name" /> est <see langword="null" /> ou String.Empty.</exception>
      <returns vsli:raw="The name, if it is a valid XML name.">Le nom, s'il s'agit d'un nom XML valide.</returns>
    </member>
    <member name="M:System.Xml.XmlConvert.VerifyNCName(System.String)">
      <summary vsli:raw="Verifies that the name is a valid &lt;see langword=&quot;NCName&quot; /&gt; according to the W3C Extended Markup Language recommendation. An &lt;see langword=&quot;NCName&quot; /&gt; is a name that cannot contain a colon.">Vérifie que le nom est un <see langword="NCName" /> valide selon la recommandation W3C XML (Extended Markup Language). Un élément <see langword="NCName" /> est un nom qui ne peut pas contenir un signe deux-points.</summary>
      <param name="name" vsli:raw="The name to verify.">Nom à vérifier.</param>
      <exception cref="T:System.ArgumentNullException" vsli:raw="&lt;paramref name=&quot;name&quot; /&gt; is &lt;see langword=&quot;null&quot; /&gt; or &lt;see cref=&quot;F:System.String.Empty&quot; /&gt;.">
        <paramref name="name" /> est <see langword="null" /> ou <c>String.Empty</c>.</exception>
      <exception cref="T:System.Xml.XmlException" vsli:raw="&lt;paramref name=&quot;name&quot; /&gt; is not a valid non-colon name.">
        <paramref name="name" /> n'est pas un nom non deux points valide.</exception>
      <returns vsli:raw="The name, if it is a valid NCName.">Le nom, s'il s'agit d'un NCName valide.</returns>
    </member>
    <member name="M:System.Xml.XmlConvert.VerifyNMTOKEN(System.String)">
      <summary vsli:raw="Verifies that the string is a valid NMTOKEN according to the W3C XML Schema Part2: Datatypes recommendation.">Vérifie que la chaîne est un NMTOKEN valide conformément à la recommandation W3C XML intitulée Schema Part2: Datatypes.</summary>
      <param name="name" vsli:raw="The string you wish to verify.">Chaîne à vérifier.</param>
      <exception cref="T:System.Xml.XmlException" vsli:raw="The string is not a valid name token.">La chaîne n'est pas un jeton de nom valide.</exception>
      <exception cref="T:System.ArgumentNullException" vsli:raw="&lt;paramref name=&quot;name&quot; /&gt; is &lt;see langword=&quot;null&quot; /&gt;.">
        <paramref name="name" /> a la valeur <see langword="null" />.</exception>
      <returns vsli:raw="The name token, if it is a valid NMTOKEN.">Jeton de nom, s'il s'agit d'un NMTOKEN valide.</returns>
    </member>
    <member name="M:System.Xml.XmlConvert.VerifyPublicId(System.String)">
      <summary vsli:raw="Returns the passed in string instance if all the characters in the string argument are valid public id characters.">Retourne l’instance de chaîne passée si tous les caractères de l’argument de chaîne sont des caractères d’ID publics valides.</summary>
      <param name="publicId" vsli:raw="&lt;see cref=&quot;T:System.String&quot; /&gt; that contains the id to validate.">
        <see cref="T:System.String" /> qui contient l'ID à valider.</param>
      <returns vsli:raw="The passed-in string if all the characters in the argument are valid public id characters.">Chaîne passée si tous les caractères de l’argument sont des caractères d’ID publics valides.</returns>
    </member>
    <member name="M:System.Xml.XmlConvert.VerifyTOKEN(System.String)">
      <summary vsli:raw="Verifies that the string is a valid token according to the W3C XML Schema Part2: Datatypes recommendation.">Vérifie que la chaîne est un jeton valide selon la recommandation du W3C intitulée XML Schema Part 2 : Datatypes</summary>
      <param name="token" vsli:raw="The string value you wish to verify.">Valeur de chaîne à vérifier.</param>
      <exception cref="T:System.Xml.XmlException" vsli:raw="The string value is not a valid token.">La valeur de chaîne n'est pas un jeton valide.</exception>
      <returns vsli:raw="The token, if it is a valid token.">Jeton, s'il s'agit d'un jeton valide.</returns>
    </member>
    <member name="M:System.Xml.XmlConvert.VerifyWhitespace(System.String)">
      <summary vsli:raw="Returns the passed-in string instance if all the characters in the string argument are valid whitespace characters.">Retourne l'instance de chaîne passée si tous les caractères de l'argument de chaîne sont des caractères d'espace valides.</summary>
      <param name="content" vsli:raw="&lt;see cref=&quot;T:System.String&quot; /&gt; to verify.">
        <see cref="T:System.String" /> à vérifier.</param>
      <returns vsli:raw="The passed-in string instance if all the characters in the string argument are valid whitespace characters, otherwise &lt;see langword=&quot;null&quot; /&gt;.">Instance de chaîne passée si tous les caractères de l’argument de chaîne sont des caractères d’espace valides, sinon <see langword="null" />.</returns>
    </member>
    <member name="M:System.Xml.XmlConvert.VerifyXmlChars(System.String)">
      <summary vsli:raw="Returns the passed-in string if all the characters and surrogate pair characters in the string argument are valid XML characters, otherwise an &lt;see langword=&quot;XmlException&quot; /&gt; is thrown with information on the first invalid character encountered.">Retourne les caractères de la chaîne passée si tous les caractères et caractères de la paire de substitution de l'argument de chaîne sont des caractères XML valides, sinon une exception <see langword="XmlException" /> est levée avec des informations relatives au premier caractère non valide rencontré.</summary>
      <param name="content" vsli:raw="&lt;see cref=&quot;T:System.String&quot; /&gt; that contains characters to verify.">Chaîne <see cref="T:System.String" /> qui contient les caractères à vérifier.</param>
      <returns vsli:raw="The passed-in string if all the characters and surrogate-pair characters in the string argument are valid XML characters, otherwise an &lt;see langword=&quot;XmlException&quot; /&gt; is thrown with information on the first invalid character encountered.">Caractères de la chaîne passée si tous les caractères et caractères de la paire de substitution de l’argument de chaîne sont des caractères XML valides, sinon une exception <see langword="XmlException" /> est levée avec des informations relatives au premier caractère non valide rencontré.</returns>
    </member>
    <member name="T:System.Xml.XmlDateTimeSerializationMode">
      <summary vsli:raw="Specifies how to treat the time value when converting between string and &lt;see cref=&quot;T:System.DateTime&quot; /&gt;.">Spécifie la façon de traiter la valeur d'heure lors de la conversion entre chaîne et <see cref="T:System.DateTime" />.</summary>
    </member>
    <member name="F:System.Xml.XmlDateTimeSerializationMode.Local">
      <summary vsli:raw="Treat as local time. If the &lt;see cref=&quot;T:System.DateTime&quot; /&gt; object represents a Coordinated Universal Time (UTC), it is converted to the local time.">Traiter en tant qu'heure locale. Si l'objet <see cref="T:System.DateTime" /> représente une heure UTC (Universal Time Coordinates), il est converti en heure locale.</summary>
    </member>
    <member name="F:System.Xml.XmlDateTimeSerializationMode.RoundtripKind">
      <summary vsli:raw="Time zone information should be preserved when converting.">Les informations relatives au fuseau horaire doivent être conservées lors de la conversion.</summary>
    </member>
    <member name="F:System.Xml.XmlDateTimeSerializationMode.Unspecified">
      <summary vsli:raw="Treat as a local time if a &lt;see cref=&quot;T:System.DateTime&quot; /&gt; is being converted to a string. If a string is being converted to &lt;see cref=&quot;T:System.DateTime&quot; /&gt;, convert to a local time if a time zone is specified.">Traiter en tant qu'heure locale si un <see cref="T:System.DateTime" /> est converti en chaîne. Si une chaîne est convertie en <see cref="T:System.DateTime" />, convertissez-la en heure locale si un fuseau horaire est spécifié.</summary>
    </member>
    <member name="F:System.Xml.XmlDateTimeSerializationMode.Utc">
      <summary vsli:raw="Treat as a UTC. If the &lt;see cref=&quot;T:System.DateTime&quot; /&gt; object represents a local time, it is converted to a UTC.">Traiter en tant qu'heure UTC. Si l'objet <see cref="T:System.DateTime" /> représente une heure locale, il est converti en UTC.</summary>
    </member>
    <member name="T:System.Xml.XmlDeclaration">
      <summary vsli:raw="Represents the XML declaration node &amp;lt;?xml version='1.0'...?&amp;gt;.">Représente le nœud de déclaration XML &lt;?xml version='1.0'...?&gt;.</summary>
    </member>
    <member name="M:System.Xml.XmlDeclaration.#ctor(System.String,System.String,System.String,System.Xml.XmlDocument)">
      <summary vsli:raw="Initializes a new instance of the &lt;see cref=&quot;T:System.Xml.XmlDeclaration&quot; /&gt; class.">Initialise une nouvelle instance de la classe <see cref="T:System.Xml.XmlDeclaration" />.</summary>
      <param name="version" vsli:raw="The XML version; see the &lt;see cref=&quot;P:System.Xml.XmlDeclaration.Version&quot; /&gt; property.">Version XML ; consultez la propriété <see cref="P:System.Xml.XmlDeclaration.Version" />.</param>
      <param name="encoding" vsli:raw="The encoding scheme; see the &lt;see cref=&quot;P:System.Xml.XmlDeclaration.Encoding&quot; /&gt; property.">Schéma d'encodage ; consultez la propriété <see cref="P:System.Xml.XmlDeclaration.Encoding" />.</param>
      <param name="standalone" vsli:raw="Indicates whether the XML document depends on an external DTD; see the &lt;see cref=&quot;P:System.Xml.XmlDeclaration.Standalone&quot; /&gt; property.">Indique si le document XML dépend d'un DTD externe ; consultez la propriété <see cref="P:System.Xml.XmlDeclaration.Standalone" />.</param>
      <param name="doc" vsli:raw="The parent XML document.">Document XML parent.</param>
    </member>
    <member name="M:System.Xml.XmlDeclaration.CloneNode(System.Boolean)">
      <summary vsli:raw="Creates a duplicate of this node.">Crée un doublon de ce nœud.</summary>
      <param name="deep" vsli:raw="&lt;see langword=&quot;true&quot; /&gt; to recursively clone the subtree under the specified node; &lt;see langword=&quot;false&quot; /&gt; to clone only the node itself. Because &lt;see langword=&quot;XmlDeclaration&quot; /&gt; nodes do not have children, the cloned node always includes the data value, regardless of the parameter setting.">
        <see langword="true" /> pour cloner récursivement la sous-arborescence sous le nœud spécifié ; <see langword="false" /> pour cloner seulement le nœud lui-même. Comme les nœuds <see langword="XmlDeclaration" /> n'ont pas d'enfant, le nœud cloné comporte toujours la valeur des données, quelle que soit la valeur du paramètre.</param>
      <returns vsli:raw="The cloned node.">Nœud cloné.</returns>
    </member>
    <member name="M:System.Xml.XmlDeclaration.WriteContentTo(System.Xml.XmlWriter)">
      <summary vsli:raw="Saves the children of the node to the specified &lt;see cref=&quot;T:System.Xml.XmlWriter&quot; /&gt;. Because &lt;see langword=&quot;XmlDeclaration&quot; /&gt; nodes do not have children, this method has no effect.">Enregistre les enfants du nœud dans le <see cref="T:System.Xml.XmlWriter" /> spécifié. Étant donné que les nœuds <see langword="XmlDeclaration" /> n'ont pas d'enfants, cette méthode est sans effet.</summary>
      <param name="w" vsli:raw="The &lt;see langword=&quot;XmlWriter&quot; /&gt; to which you want to save.">L'élément <see langword="XmlWriter" /> dans lequel vous voulez enregistrer.</param>
    </member>
    <member name="M:System.Xml.XmlDeclaration.WriteTo(System.Xml.XmlWriter)">
      <summary vsli:raw="Saves the node to the specified &lt;see cref=&quot;T:System.Xml.XmlWriter&quot; /&gt;.">Enregistre le nœud dans le <see cref="T:System.Xml.XmlWriter" /> spécifié.</summary>
      <param name="w" vsli:raw="The &lt;see langword=&quot;XmlWriter&quot; /&gt; to which you want to save.">L'élément <see langword="XmlWriter" /> dans lequel vous voulez enregistrer.</param>
    </member>
    <member name="P:System.Xml.XmlDeclaration.Encoding">
      <summary vsli:raw="Gets or sets the encoding level of the XML document.">Obtient ou définit le niveau d'encodage du document XML.</summary>
      <returns vsli:raw="The valid character encoding name. The most commonly supported character encoding names for XML are the following:  &#xA;  &#xA; &lt;list type=&quot;table&quot;&gt;&lt;listheader&gt;&lt;term&gt; Category&lt;/term&gt;&lt;description&gt; Encoding Names&lt;/description&gt;&lt;/listheader&gt;&lt;item&gt;&lt;term&gt; Unicode&lt;/term&gt;&lt;description&gt; UTF-8, UTF-16&lt;/description&gt;&lt;/item&gt;&lt;item&gt;&lt;term&gt; ISO 10646&lt;/term&gt;&lt;description&gt; ISO-10646-UCS-2, ISO-10646-UCS-4&lt;/description&gt;&lt;/item&gt;&lt;item&gt;&lt;term&gt; ISO 8859&lt;/term&gt;&lt;description&gt; ISO-8859-n (where &quot;n&quot; is a digit from 1 to 9)&lt;/description&gt;&lt;/item&gt;&lt;item&gt;&lt;term&gt; JIS X-0208-1997&lt;/term&gt;&lt;description&gt; ISO-2022-JP, Shift_JIS, EUC-JP&lt;/description&gt;&lt;/item&gt;&lt;/list&gt;  &#xA;&#xA; This value is optional. If a value is not set, this property returns String.Empty.  &#xA;  &#xA; If an encoding attribute is not included, UTF-8 encoding is assumed when the document is written or saved out.">Nom d'encodage de caractères valide. Les noms d'encodages de caractères les plus couramment pris en charge pour XML sont les suivants :  
  
 <list type="table"><listheader><term> Category</term><description> Noms d'encodages</description></listheader><item><term> Unicode</term><description> UTF-8, UTF-16</description></item><item><term> ISO 10646</term><description> ISO-10646-UCS-2, ISO-10646-UCS-4</description></item><item><term> ISO 8859</term><description> ISO-8859-n (où « n » correspond à un nombre compris entre 1 et 9)</description></item><item><term> JIS X-0208-1997</term><description> ISO-2022-JP, Shift_JIS, EUC-JP</description></item></list>  

 Cette valeur est facultative. Si aucune valeur n'est définie, cette propriété retourne alors String.Empty.  
  
 Si aucun attribut d'encodage n'est inclus, l'encodage admis par défaut lors de l'écriture ou de l'enregistrement du document est alors UTF-8.</returns>
    </member>
    <member name="P:System.Xml.XmlDeclaration.InnerText">
      <summary vsli:raw="Gets or sets the concatenated values of the &lt;see langword=&quot;XmlDeclaration&quot; /&gt;.">Obtient ou définit les valeurs concaténées de <see langword="XmlDeclaration" />.</summary>
      <returns vsli:raw="The concatenated values of the &lt;see langword=&quot;XmlDeclaration&quot; /&gt; (that is, everything between &lt;c&gt;&amp;lt;?xml&lt;/c&gt; and &lt;c&gt;?&amp;gt;&lt;/c&gt;).">Valeurs concaténées de <see langword="XmlDeclaration" /> (c’est-à-dire tout ce qui se trouve entre <c> &lt; ? XML</c> et <c>? &gt; </c>).</returns>
    </member>
    <member name="P:System.Xml.XmlDeclaration.LocalName">
      <summary vsli:raw="Gets the local name of the node.">Obtient le nom local du nœud.</summary>
      <returns vsli:raw="For &lt;see langword=&quot;XmlDeclaration&quot; /&gt; nodes, the local name is &lt;see langword=&quot;xml&quot; /&gt;.">Pour les nœuds <see langword="XmlDeclaration" />, le nom local est <see langword="xml" />.</returns>
    </member>
    <member name="P:System.Xml.XmlDeclaration.Name">
      <summary vsli:raw="Gets the qualified name of the node.">Obtient le nom qualifié du nœud.</summary>
      <returns vsli:raw="For &lt;see langword=&quot;XmlDeclaration&quot; /&gt; nodes, the name is &lt;see langword=&quot;xml&quot; /&gt;.">Pour les nœuds <see langword="XmlDeclaration" />, le nom est <see langword="xml" />.</returns>
    </member>
    <member name="P:System.Xml.XmlDeclaration.NodeType">
      <summary vsli:raw="Gets the type of the current node.">Obtient le type du nœud actuel.</summary>
      <returns vsli:raw="For &lt;see langword=&quot;XmlDeclaration&quot; /&gt; nodes, this value is XmlNodeType.XmlDeclaration.">Pour les nœuds <see langword="XmlDeclaration" />, cette valeur est XmlNodeType.XmlDeclaration.</returns>
    </member>
    <member name="P:System.Xml.XmlDeclaration.Standalone">
      <summary vsli:raw="Gets or sets the value of the standalone attribute.">Obtient ou définit la valeur de l'attribut autonome.</summary>
      <returns vsli:raw="Valid values are &lt;see langword=&quot;yes&quot; /&gt; if all entity declarations required by the XML document are contained within the document or &lt;see langword=&quot;no&quot; /&gt; if an external document type definition (DTD) is required. If a standalone attribute is not present in the XML declaration, this property returns String.Empty.">Les valeurs valides sont <see langword="yes" /> si toutes les déclarations requises par le document XML sont contenues dans le document, ou <see langword="no" /> si une définition de type de document (DTD) externe est requise. Si aucun attribut autonome ne figure dans la déclaration XML, cette propriété retourne alors String.Empty.</returns>
    </member>
    <member name="P:System.Xml.XmlDeclaration.Value">
      <summary vsli:raw="Gets or sets the value of the &lt;see langword=&quot;XmlDeclaration&quot; /&gt;.">Obtient ou définit la valeur du <see langword="XmlDeclaration" />.</summary>
      <returns vsli:raw="The contents of the &lt;see langword=&quot;XmlDeclaration&quot; /&gt; (that is, everything between &lt;c&gt;&amp;lt;?xml&lt;/c&gt; and &lt;c&gt;?&amp;gt;&lt;/c&gt;).">Le contenu du <see langword="XmlDeclaration" /> (c’est-à-dire tout ce qui se trouve entre <c> &lt; ? XML</c> et <c>? &gt; </c>).</returns>
    </member>
    <member name="P:System.Xml.XmlDeclaration.Version">
      <summary vsli:raw="Gets the XML version of the document.">Obtient la version XML du document.</summary>
      <returns vsli:raw="The value is always &lt;see langword=&quot;1.0&quot; /&gt;.">La valeur est toujours <see langword="1.0" />.</returns>
    </member>
    <member name="T:System.Xml.XmlDocument">
      <summary vsli:raw="Represents an XML document. You can use this class to load, validate, edit, add, and position XML in a document.">Représente un document XML. Vous pouvez utiliser cette classe pour charger, valider, modifier, ajouter et positionner du contenu XML dans un document.</summary>
    </member>
    <member name="E:System.Xml.XmlDocument.NodeChanged">
      <summary vsli:raw="Occurs when the &lt;see cref=&quot;P:System.Xml.XmlNode.Value&quot; /&gt; of a node belonging to this document has been changed.">Se produit quand l'élément <see cref="P:System.Xml.XmlNode.Value" /> d'un nœud appartenant à ce document a été modifié.</summary>
    </member>
    <member name="E:System.Xml.XmlDocument.NodeChanging">
      <summary vsli:raw="Occurs when the &lt;see cref=&quot;P:System.Xml.XmlNode.Value&quot; /&gt; of a node belonging to this document is about to be changed.">Se produit quand l'élément <see cref="P:System.Xml.XmlNode.Value" /> d'un nœud appartenant à ce document est sur le point d'être modifié.</summary>
    </member>
    <member name="E:System.Xml.XmlDocument.NodeInserted">
      <summary vsli:raw="Occurs when a node belonging to this document has been inserted into another node.">Se produit quand un nœud appartenant à ce document a été inséré dans un autre nœud.</summary>
    </member>
    <member name="E:System.Xml.XmlDocument.NodeInserting">
      <summary vsli:raw="Occurs when a node belonging to this document is about to be inserted into another node.">Se produit quand un nœud appartenant à ce document est sur le point d'être inséré dans un autre nœud.</summary>
    </member>
    <member name="E:System.Xml.XmlDocument.NodeRemoved">
      <summary vsli:raw="Occurs when a node belonging to this document has been removed from its parent.">Se produit quand un nœud appartenant à ce document a été enlevé à son parent.</summary>
    </member>
    <member name="E:System.Xml.XmlDocument.NodeRemoving">
      <summary vsli:raw="Occurs when a node belonging to this document is about to be removed from the document.">Se produit quand un nœud appartenant à ce document est sur le point d'être supprimé du document.</summary>
    </member>
    <member name="M:System.Xml.XmlDocument.#ctor">
      <summary vsli:raw="Initializes a new instance of the &lt;see cref=&quot;T:System.Xml.XmlDocument&quot; /&gt; class.">Initialise une nouvelle instance de la classe <see cref="T:System.Xml.XmlDocument" />.</summary>
    </member>
    <member name="M:System.Xml.XmlDocument.#ctor(System.Xml.XmlImplementation)">
      <summary vsli:raw="Initializes a new instance of the &lt;see langword=&quot;XmlDocument&quot; /&gt; class with the specified &lt;see cref=&quot;T:System.Xml.XmlImplementation&quot; /&gt;.">Initialise une nouvelle instance de la classe <see langword="XmlDocument" /> avec le <see cref="T:System.Xml.XmlImplementation" /> spécifié.</summary>
      <param name="imp" vsli:raw="The &lt;see langword=&quot;XmlImplementation&quot; /&gt; to use.">
        <see langword="XmlImplementation" /> à utiliser.</param>
    </member>
    <member name="M:System.Xml.XmlDocument.#ctor(System.Xml.XmlNameTable)">
      <summary vsli:raw="Initializes a new instance of the &lt;see langword=&quot;XmlDocument&quot; /&gt; class with the specified &lt;see cref=&quot;T:System.Xml.XmlNameTable&quot; /&gt;.">Initialise une nouvelle instance de la classe <see langword="XmlDocument" /> avec le <see cref="T:System.Xml.XmlNameTable" /> spécifié.</summary>
      <param name="nt" vsli:raw="The &lt;see langword=&quot;XmlNameTable&quot; /&gt; to use.">
        <see langword="XmlNameTable" /> à utiliser.</param>
    </member>
    <member name="M:System.Xml.XmlDocument.CloneNode(System.Boolean)">
      <summary vsli:raw="Creates a duplicate of this node.">Crée un doublon de ce nœud.</summary>
      <param name="deep" vsli:raw="&lt;see langword=&quot;true&quot; /&gt; to recursively clone the subtree under the specified node; &lt;see langword=&quot;false&quot; /&gt; to clone only the node itself.">
        <see langword="true" /> pour cloner récursivement la sous-arborescence sous le nœud spécifié ; <see langword="false" /> pour cloner seulement le nœud lui-même.</param>
      <returns vsli:raw="The cloned &lt;see langword=&quot;XmlDocument&quot; /&gt; node.">Le nœud <see langword="XmlDocument" /> cloné.</returns>
    </member>
    <member name="M:System.Xml.XmlDocument.CreateAttribute(System.String)">
      <summary vsli:raw="Creates an &lt;see cref=&quot;T:System.Xml.XmlAttribute&quot; /&gt; with the specified &lt;see cref=&quot;P:System.Xml.XmlDocument.Name&quot; /&gt;.">Crée un élément <see cref="T:System.Xml.XmlAttribute" /> avec la valeur <see cref="P:System.Xml.XmlDocument.Name" /> spécifiée.</summary>
      <param name="name" vsli:raw="The qualified name of the attribute. If the name contains a colon, the &lt;see cref=&quot;P:System.Xml.XmlNode.Prefix&quot; /&gt; property reflects the part of the name preceding the first colon and the &lt;see cref=&quot;P:System.Xml.XmlDocument.LocalName&quot; /&gt; property reflects the part of the name following the first colon. The &lt;see cref=&quot;P:System.Xml.XmlNode.NamespaceURI&quot; /&gt; remains empty unless the prefix is a recognized built-in prefix such as xmlns. In this case &lt;see langword=&quot;NamespaceURI&quot; /&gt; has a value of &lt;c&gt;http://www.w3.org/2000/xmlns/&lt;/c&gt;.">Nom qualifié de l'attribut. Si le nom contient un signe deux-points, la propriété <see cref="P:System.Xml.XmlNode.Prefix" /> reflète la partie du nom qui précède le premier signe deux-points, et la propriété <see cref="P:System.Xml.XmlDocument.LocalName" /> reflète la partie du nom qui suit le premier signe deux-points. L'élément <see cref="P:System.Xml.XmlNode.NamespaceURI" /> reste vide sauf si le préfixe est un préfixe intégré reconnu, comme xmlns. Dans ce cas, <see langword="NamespaceURI" /> a la valeur <c>http://www.w3.org/2000/xmlns/</c>.</param>
      <returns vsli:raw="The new &lt;see langword=&quot;XmlAttribute&quot; /&gt;.">Nouvelle <see langword="XmlAttribute" />.</returns>
    </member>
    <member name="M:System.Xml.XmlDocument.CreateAttribute(System.String,System.String)">
      <summary vsli:raw="Creates an &lt;see cref=&quot;T:System.Xml.XmlAttribute&quot; /&gt; with the specified qualified name and &lt;see cref=&quot;P:System.Xml.XmlNode.NamespaceURI&quot; /&gt;.">Crée un élément <see cref="T:System.Xml.XmlAttribute" /> avec le nom qualifié et l'élément <see cref="P:System.Xml.XmlNode.NamespaceURI" /> spécifiés.</summary>
      <param name="qualifiedName" vsli:raw="The qualified name of the attribute. If the name contains a colon then the &lt;see cref=&quot;P:System.Xml.XmlNode.Prefix&quot; /&gt; property will reflect the part of the name preceding the colon and the &lt;see cref=&quot;P:System.Xml.XmlDocument.LocalName&quot; /&gt; property will reflect the part of the name after the colon.">Nom qualifié de l'attribut. Si le nom contient un signe deux-points, la propriété <see cref="P:System.Xml.XmlNode.Prefix" /> reflète la partie du nom qui précède le signe deux-points et la propriété <see cref="P:System.Xml.XmlDocument.LocalName" /> reflète la partie du nom qui suit le signe deux-points.</param>
      <param name="namespaceURI" vsli:raw="The namespaceURI of the attribute. If the qualified name includes a prefix of xmlns, then this parameter must be &lt;c&gt;http://www.w3.org/2000/xmlns/&lt;/c&gt;.">URI de l'espace de noms de l'attribut. Si le nom qualifié comprend un préfixe xmlns, ce paramètre doit être <c>http://www.w3.org/2000/xmlns/</c>.</param>
      <returns vsli:raw="The new &lt;see langword=&quot;XmlAttribute&quot; /&gt;.">Nouvelle <see langword="XmlAttribute" />.</returns>
    </member>
    <member name="M:System.Xml.XmlDocument.CreateAttribute(System.String,System.String,System.String)">
      <summary vsli:raw="Creates an &lt;see cref=&quot;T:System.Xml.XmlAttribute&quot; /&gt; with the specified &lt;see cref=&quot;P:System.Xml.XmlNode.Prefix&quot; /&gt;, &lt;see cref=&quot;P:System.Xml.XmlDocument.LocalName&quot; /&gt;, and &lt;see cref=&quot;P:System.Xml.XmlNode.NamespaceURI&quot; /&gt;.">Crée un élément <see cref="T:System.Xml.XmlAttribute" /> avec les éléments <see cref="P:System.Xml.XmlNode.Prefix" />, <see cref="P:System.Xml.XmlDocument.LocalName" /> et <see cref="P:System.Xml.XmlNode.NamespaceURI" /> spécifiés.</summary>
      <param name="prefix" vsli:raw="The prefix of the attribute (if any). String.Empty and &lt;see langword=&quot;null&quot; /&gt; are equivalent.">Préfixe de l'attribut (le cas échéant). String.Empty et <see langword="null" /> sont équivalents.</param>
      <param name="localName" vsli:raw="The local name of the attribute.">Le nom local de l'attribut.</param>
      <param name="namespaceURI" vsli:raw="The namespace URI of the attribute (if any). String.Empty and &lt;see langword=&quot;null&quot; /&gt; are equivalent. If &lt;paramref name=&quot;prefix&quot; /&gt; is xmlns, then this parameter must be &lt;c&gt;http://www.w3.org/2000/xmlns/&lt;/c&gt;; otherwise an exception is thrown.">URI de l'espace de noms de l'attribut (le cas échéant). String.Empty et <see langword="null" /> sont équivalents. Si <paramref name="prefix" /> est xmlns, ce paramètre doit être <c>http://www.w3.org/2000/xmlns/</c> ; sinon, une exception est levée.</param>
      <returns vsli:raw="The new &lt;see langword=&quot;XmlAttribute&quot; /&gt;.">Nouvelle <see langword="XmlAttribute" />.</returns>
    </member>
    <member name="M:System.Xml.XmlDocument.CreateCDataSection(System.String)">
      <summary vsli:raw="Creates an &lt;see cref=&quot;T:System.Xml.XmlCDataSection&quot; /&gt; containing the specified data.">Crée un élément <see cref="T:System.Xml.XmlCDataSection" /> contenant les données spécifiées.</summary>
      <param name="data" vsli:raw="The content of the new &lt;see langword=&quot;XmlCDataSection&quot; /&gt;.">Contenu du nouvel élément <see langword="XmlCDataSection" />.</param>
      <returns vsli:raw="The new &lt;see langword=&quot;XmlCDataSection&quot; /&gt;.">Nouvelle <see langword="XmlCDataSection" />.</returns>
    </member>
    <member name="M:System.Xml.XmlDocument.CreateComment(System.String)">
      <summary vsli:raw="Creates an &lt;see cref=&quot;T:System.Xml.XmlComment&quot; /&gt; containing the specified data.">Crée un élément <see cref="T:System.Xml.XmlComment" /> contenant les données spécifiées.</summary>
      <param name="data" vsli:raw="The content of the new &lt;see langword=&quot;XmlComment&quot; /&gt;.">Contenu du nouvel élément <see langword="XmlComment" />.</param>
      <returns vsli:raw="The new &lt;see langword=&quot;XmlComment&quot; /&gt;.">Nouvelle <see langword="XmlComment" />.</returns>
    </member>
    <member name="M:System.Xml.XmlDocument.CreateDefaultAttribute(System.String,System.String,System.String)">
      <summary vsli:raw="Creates a default attribute with the specified prefix, local name and namespace URI.">Crée un attribut par défaut avec le préfixe, le nom local et l'URI de l'espace de noms spécifiés.</summary>
      <param name="prefix" vsli:raw="The prefix of the attribute (if any).">Préfixe de l'attribut (le cas échéant).</param>
      <param name="localName" vsli:raw="The local name of the attribute.">Le nom local de l'attribut.</param>
      <param name="namespaceURI" vsli:raw="The namespace URI of the attribute (if any).">URI de l'espace de noms de l'attribut (le cas échéant).</param>
      <returns vsli:raw="The new &lt;see cref=&quot;T:System.Xml.XmlAttribute&quot; /&gt;.">Nouvelle <see cref="T:System.Xml.XmlAttribute" />.</returns>
    </member>
    <member name="M:System.Xml.XmlDocument.CreateDocumentFragment">
      <summary vsli:raw="Creates an &lt;see cref=&quot;T:System.Xml.XmlDocumentFragment&quot; /&gt;.">Crée un objet <see cref="T:System.Xml.XmlDocumentFragment" />.</summary>
      <returns vsli:raw="The new &lt;see langword=&quot;XmlDocumentFragment&quot; /&gt;.">Nouvelle <see langword="XmlDocumentFragment" />.</returns>
    </member>
    <member name="M:System.Xml.XmlDocument.CreateDocumentType(System.String,System.String,System.String,System.String)">
      <summary vsli:raw="Returns a new &lt;see cref=&quot;T:System.Xml.XmlDocumentType&quot; /&gt; object.">Retourne un nouvel objet <see cref="T:System.Xml.XmlDocumentType" />.</summary>
      <param name="name" vsli:raw="Name of the document type.">Nom du type de document.</param>
      <param name="publicId" vsli:raw="The public identifier of the document type or &lt;see langword=&quot;null&quot; /&gt;. You can specify a public URI and also a system identifier to identify the location of the external DTD subset.">Identificateur public du type de document ou <see langword="null" />. Vous pouvez spécifier un URI public ainsi qu'un identificateur de système pour identifier l'emplacement du sous-ensemble DTD externe.</param>
      <param name="systemId" vsli:raw="The system identifier of the document type or &lt;see langword=&quot;null&quot; /&gt;. Specifies the URL of the file location for the external DTD subset.">Identificateur système du type de document ou <see langword="null" />. Spécifie l'URL de l'emplacement de fichier pour le sous-ensemble DTD externe.</param>
      <param name="internalSubset" vsli:raw="The DTD internal subset of the document type or &lt;see langword=&quot;null&quot; /&gt;.">Sous-ensemble interne du DTD du type de document ou <see langword="null" />.</param>
      <returns vsli:raw="The new &lt;see langword=&quot;XmlDocumentType&quot; /&gt;.">Nouvelle <see langword="XmlDocumentType" />.</returns>
    </member>
    <member name="M:System.Xml.XmlDocument.CreateElement(System.String)">
      <summary vsli:raw="Creates an element with the specified name.">Crée un élément avec le nom spécifié.</summary>
      <param name="name" vsli:raw="The qualified name of the element. If the name contains a colon then the &lt;see cref=&quot;P:System.Xml.XmlNode.Prefix&quot; /&gt; property reflects the part of the name preceding the colon and the &lt;see cref=&quot;P:System.Xml.XmlDocument.LocalName&quot; /&gt; property reflects the part of the name after the colon. The qualified name cannot include a prefix of 'xmlns'.">Nom qualifié de l'élément. Si le nom contient un signe deux-points, la propriété <see cref="P:System.Xml.XmlNode.Prefix" /> reflète la partie du nom qui précède le signe deux-points et la propriété <see cref="P:System.Xml.XmlDocument.LocalName" /> reflète la partie du nom qui suit le signe deux-points. Le nom qualifié ne peut pas contenir le préfixe « xmlns ».</param>
      <returns vsli:raw="The new &lt;see langword=&quot;XmlElement&quot; /&gt;.">Nouvelle <see langword="XmlElement" />.</returns>
    </member>
    <member name="M:System.Xml.XmlDocument.CreateElement(System.String,System.String)">
      <summary vsli:raw="Creates an &lt;see cref=&quot;T:System.Xml.XmlElement&quot; /&gt; with the qualified name and &lt;see cref=&quot;P:System.Xml.XmlNode.NamespaceURI&quot; /&gt;.">Crée un élément <see cref="T:System.Xml.XmlElement" /> avec le nom qualifié et l'élément <see cref="P:System.Xml.XmlNode.NamespaceURI" />.</summary>
      <param name="qualifiedName" vsli:raw="The qualified name of the element. If the name contains a colon then the &lt;see cref=&quot;P:System.Xml.XmlNode.Prefix&quot; /&gt; property will reflect the part of the name preceding the colon and the &lt;see cref=&quot;P:System.Xml.XmlDocument.LocalName&quot; /&gt; property will reflect the part of the name after the colon. The qualified name cannot include a prefix of 'xmlns'.">Nom qualifié de l'élément. Si le nom contient un signe deux-points, la propriété <see cref="P:System.Xml.XmlNode.Prefix" /> reflète la partie du nom qui précède le signe deux-points et la propriété <see cref="P:System.Xml.XmlDocument.LocalName" /> reflète la partie du nom qui suit le signe deux-points. Le nom qualifié ne peut pas contenir le préfixe « xmlns ».</param>
      <param name="namespaceURI" vsli:raw="The namespace URI of the element.">L'URI de l'espace de noms de l'élément.</param>
      <returns vsli:raw="The new &lt;see langword=&quot;XmlElement&quot; /&gt;.">Nouvelle <see langword="XmlElement" />.</returns>
    </member>
    <member name="M:System.Xml.XmlDocument.CreateElement(System.String,System.String,System.String)">
      <summary vsli:raw="Creates an element with the specified &lt;see cref=&quot;P:System.Xml.XmlNode.Prefix&quot; /&gt;, &lt;see cref=&quot;P:System.Xml.XmlDocument.LocalName&quot; /&gt;, and &lt;see cref=&quot;P:System.Xml.XmlNode.NamespaceURI&quot; /&gt;.">Crée un élément avec les éléments <see cref="P:System.Xml.XmlNode.Prefix" />, <see cref="P:System.Xml.XmlDocument.LocalName" /> et <see cref="P:System.Xml.XmlNode.NamespaceURI" /> spécifiés.</summary>
      <param name="prefix" vsli:raw="The prefix of the new element (if any). String.Empty and &lt;see langword=&quot;null&quot; /&gt; are equivalent.">Préfixe du nouvel élément (le cas échéant). String.Empty et <see langword="null" /> sont équivalents.</param>
      <param name="localName" vsli:raw="The local name of the new element.">Le nom local du nouvel élément.</param>
      <param name="namespaceURI" vsli:raw="The namespace URI of the new element (if any). String.Empty and &lt;see langword=&quot;null&quot; /&gt; are equivalent.">URI de l'espace de noms du nouvel élément (le cas échéant). String.Empty et <see langword="null" /> sont équivalents.</param>
      <returns vsli:raw="The new &lt;see cref=&quot;T:System.Xml.XmlElement&quot; /&gt;.">Nouvelle <see cref="T:System.Xml.XmlElement" />.</returns>
    </member>
    <member name="M:System.Xml.XmlDocument.CreateEntityReference(System.String)">
      <summary vsli:raw="Creates an &lt;see cref=&quot;T:System.Xml.XmlEntityReference&quot; /&gt; with the specified name.">Crée un élément <see cref="T:System.Xml.XmlEntityReference" /> avec le nom spécifié.</summary>
      <param name="name" vsli:raw="The name of the entity reference.">Nom de la référence d'entité.</param>
      <exception cref="T:System.ArgumentException" vsli:raw="The name is invalid (for example, names starting with'#' are invalid.)">Le nom n’est pas valide (par exemple, les noms commençant par « # » ne sont pas valides).</exception>
      <returns vsli:raw="The new &lt;see langword=&quot;XmlEntityReference&quot; /&gt;.">Nouvelle <see langword="XmlEntityReference" />.</returns>
    </member>
    <member name="M:System.Xml.XmlDocument.CreateNavigator">
      <summary vsli:raw="Creates a new &lt;see cref=&quot;T:System.Xml.XPath.XPathNavigator&quot; /&gt; object for navigating this document.">Crée un objet <see cref="T:System.Xml.XPath.XPathNavigator" /> pour naviguer dans ce document.</summary>
      <returns vsli:raw="An &lt;see cref=&quot;T:System.Xml.XPath.XPathNavigator&quot; /&gt; object.">Objet <see cref="T:System.Xml.XPath.XPathNavigator" />.</returns>
    </member>
    <member name="M:System.Xml.XmlDocument.CreateNavigator(System.Xml.XmlNode)">
      <summary vsli:raw="Creates an &lt;see cref=&quot;T:System.Xml.XPath.XPathNavigator&quot; /&gt; object for navigating this document positioned on the &lt;see cref=&quot;T:System.Xml.XmlNode&quot; /&gt; specified.">Crée un objet <see cref="T:System.Xml.XPath.XPathNavigator" /> pour naviguer dans ce document, positionné sur l'élément <see cref="T:System.Xml.XmlNode" /> spécifié.</summary>
      <param name="node" vsli:raw="The &lt;see cref=&quot;T:System.Xml.XmlNode&quot; /&gt; you want the navigator initially positioned on.">Élément <see cref="T:System.Xml.XmlNode" /> sur lequel vous voulez que le navigateur soit initialement positionné.</param>
      <returns vsli:raw="An &lt;see cref=&quot;T:System.Xml.XPath.XPathNavigator&quot; /&gt; object.">Objet <see cref="T:System.Xml.XPath.XPathNavigator" />.</returns>
    </member>
    <member name="M:System.Xml.XmlDocument.CreateNode(System.String,System.String,System.String)">
      <summary vsli:raw="Creates an &lt;see cref=&quot;T:System.Xml.XmlNode&quot; /&gt; with the specified node type, &lt;see cref=&quot;P:System.Xml.XmlDocument.Name&quot; /&gt;, and &lt;see cref=&quot;P:System.Xml.XmlNode.NamespaceURI&quot; /&gt;.">Crée un élément <see cref="T:System.Xml.XmlNode" /> avec le type de nœud, l'élément <see cref="P:System.Xml.XmlDocument.Name" /> et l'élément <see cref="P:System.Xml.XmlNode.NamespaceURI" /> spécifiés.</summary>
      <param name="nodeTypeString" vsli:raw="String version of the &lt;see cref=&quot;T:System.Xml.XmlNodeType&quot; /&gt; of the new node. This parameter must be one of the values listed in the table below.">Version au format chaîne de l'élément <see cref="T:System.Xml.XmlNodeType" /> du nouveau nœud. Ce paramètre doit prendre l'une des valeurs répertoriées dans le tableau suivant.</param>
      <param name="name" vsli:raw="The qualified name of the new node. If the name contains a colon, it is parsed into &lt;see cref=&quot;P:System.Xml.XmlNode.Prefix&quot; /&gt; and &lt;see cref=&quot;P:System.Xml.XmlDocument.LocalName&quot; /&gt; components.">Nom qualifié du nouveau nœud. Si le nom contient un signe deux-points, il est analysé en deux composants : <see cref="P:System.Xml.XmlNode.Prefix" /> et <see cref="P:System.Xml.XmlDocument.LocalName" />.</param>
      <param name="namespaceURI" vsli:raw="The namespace URI of the new node.">L'URI de l'espace de noms du nouveau nœud.</param>
      <exception cref="T:System.ArgumentException" vsli:raw="The name was not provided and the &lt;see langword=&quot;XmlNodeType&quot; /&gt; requires a name; or &lt;paramref name=&quot;nodeTypeString&quot; /&gt; is not one of the strings listed below.">Le nom n’a pas été fourni alors que <see langword="XmlNodeType" /> requiert un nom, ou <paramref name="nodeTypeString" /> ne figure pas parmi les chaînes répertoriées ci-dessous.</exception>
      <returns vsli:raw="The new &lt;see langword=&quot;XmlNode&quot; /&gt;.">Nouvelle <see langword="XmlNode" />.</returns>
    </member>
    <member name="M:System.Xml.XmlDocument.CreateNode(System.Xml.XmlNodeType,System.String,System.String)">
      <summary vsli:raw="Creates an &lt;see cref=&quot;T:System.Xml.XmlNode&quot; /&gt; with the specified &lt;see cref=&quot;T:System.Xml.XmlNodeType&quot; /&gt;, &lt;see cref=&quot;P:System.Xml.XmlDocument.Name&quot; /&gt;, and &lt;see cref=&quot;P:System.Xml.XmlNode.NamespaceURI&quot; /&gt;.">Crée un élément <see cref="T:System.Xml.XmlNode" /> avec les éléments <see cref="T:System.Xml.XmlNodeType" />, <see cref="P:System.Xml.XmlDocument.Name" /> et <see cref="P:System.Xml.XmlNode.NamespaceURI" /> spécifiés.</summary>
      <param name="type" vsli:raw="The &lt;see langword=&quot;XmlNodeType&quot; /&gt; of the new node.">
        <see langword="XmlNodeType" /> du nouveau nœud.</param>
      <param name="name" vsli:raw="The qualified name of the new node. If the name contains a colon then it is parsed into &lt;see cref=&quot;P:System.Xml.XmlNode.Prefix&quot; /&gt; and &lt;see cref=&quot;P:System.Xml.XmlDocument.LocalName&quot; /&gt; components.">Nom qualifié du nouveau nœud. Si le nom contient un signe deux-points, il est analysé en deux composants : <see cref="P:System.Xml.XmlNode.Prefix" /> et <see cref="P:System.Xml.XmlDocument.LocalName" />.</param>
      <param name="namespaceURI" vsli:raw="The namespace URI of the new node.">L'URI de l'espace de noms du nouveau nœud.</param>
      <exception cref="T:System.ArgumentException" vsli:raw="The name was not provided and the &lt;see langword=&quot;XmlNodeType&quot; /&gt; requires a name.">Le nom n’a pas été fourni alors que <see langword="XmlNodeType" /> requiert un nom.</exception>
      <returns vsli:raw="The new &lt;see langword=&quot;XmlNode&quot; /&gt;.">Nouvelle <see langword="XmlNode" />.</returns>
    </member>
    <member name="M:System.Xml.XmlDocument.CreateNode(System.Xml.XmlNodeType,System.String,System.String,System.String)">
      <summary vsli:raw="Creates a &lt;see cref=&quot;T:System.Xml.XmlNode&quot; /&gt; with the specified &lt;see cref=&quot;T:System.Xml.XmlNodeType&quot; /&gt;, &lt;see cref=&quot;P:System.Xml.XmlNode.Prefix&quot; /&gt;, &lt;see cref=&quot;P:System.Xml.XmlDocument.Name&quot; /&gt;, and &lt;see cref=&quot;P:System.Xml.XmlNode.NamespaceURI&quot; /&gt;.">Crée un élément <see cref="T:System.Xml.XmlNode" /> avec les éléments <see cref="T:System.Xml.XmlNodeType" />, <see cref="P:System.Xml.XmlNode.Prefix" />, <see cref="P:System.Xml.XmlDocument.Name" /> et <see cref="P:System.Xml.XmlNode.NamespaceURI" /> spécifiés.</summary>
      <param name="type" vsli:raw="The &lt;see langword=&quot;XmlNodeType&quot; /&gt; of the new node.">
        <see langword="XmlNodeType" /> du nouveau nœud.</param>
      <param name="prefix" vsli:raw="The prefix of the new node.">Préfixe du nouveau nœud.</param>
      <param name="name" vsli:raw="The local name of the new node.">Nom local du nouveau nœud.</param>
      <param name="namespaceURI" vsli:raw="The namespace URI of the new node.">L'URI de l'espace de noms du nouveau nœud.</param>
      <exception cref="T:System.ArgumentException" vsli:raw="The name was not provided and the &lt;see langword=&quot;XmlNodeType&quot; /&gt; requires a name.">Le nom n’a pas été fourni alors que <see langword="XmlNodeType" /> requiert un nom.</exception>
      <returns vsli:raw="The new &lt;see langword=&quot;XmlNode&quot; /&gt;.">Nouvelle <see langword="XmlNode" />.</returns>
    </member>
    <member name="M:System.Xml.XmlDocument.CreateProcessingInstruction(System.String,System.String)">
      <summary vsli:raw="Creates an &lt;see cref=&quot;T:System.Xml.XmlProcessingInstruction&quot; /&gt; with the specified name and data.">Crée un élément <see cref="T:System.Xml.XmlProcessingInstruction" /> avec le nom et les données spécifiés.</summary>
      <param name="target" vsli:raw="The name of the processing instruction.">Nom de l'instruction de traitement.</param>
      <param name="data" vsli:raw="The data for the processing instruction.">Données de l'instruction de traitement.</param>
      <returns vsli:raw="The new &lt;see langword=&quot;XmlProcessingInstruction&quot; /&gt;.">Nouvelle <see langword="XmlProcessingInstruction" />.</returns>
    </member>
    <member name="M:System.Xml.XmlDocument.CreateSignificantWhitespace(System.String)">
      <summary vsli:raw="Creates an &lt;see cref=&quot;T:System.Xml.XmlSignificantWhitespace&quot; /&gt; node.">Crée un nœud <see cref="T:System.Xml.XmlSignificantWhitespace" />.</summary>
      <param name="text" vsli:raw="The string must contain only the following characters &amp;amp;#20; &amp;amp;#10; &amp;amp;#13; and &amp;amp;#9;.">La chaîne doit contenir uniquement les caractères suivants &amp;#20; &amp;#10; &amp;#13; et &amp;#9;</param>
      <returns vsli:raw="A new &lt;see langword=&quot;XmlSignificantWhitespace&quot; /&gt; node.">Nouveau nœud <see langword="XmlSignificantWhitespace" />.</returns>
    </member>
    <member name="M:System.Xml.XmlDocument.CreateTextNode(System.String)">
      <summary vsli:raw="Creates an &lt;see cref=&quot;T:System.Xml.XmlText&quot; /&gt; with the specified text.">Crée un élément <see cref="T:System.Xml.XmlText" /> avec le texte spécifié.</summary>
      <param name="text" vsli:raw="The text for the Text node.">Texte du nœud Text.</param>
      <returns vsli:raw="The new &lt;see langword=&quot;XmlText&quot; /&gt; node.">Nouveau nœud <see langword="XmlText" />.</returns>
    </member>
    <member name="M:System.Xml.XmlDocument.CreateWhitespace(System.String)">
      <summary vsli:raw="Creates an &lt;see cref=&quot;T:System.Xml.XmlWhitespace&quot; /&gt; node.">Crée un nœud <see cref="T:System.Xml.XmlWhitespace" />.</summary>
      <param name="text" vsli:raw="The string must contain only the following characters &amp;amp;#20; &amp;amp;#10; &amp;amp;#13; and &amp;amp;#9;.">La chaîne doit contenir uniquement les caractères suivants &amp;#20; &amp;#10; &amp;#13; et &amp;#9;</param>
      <returns vsli:raw="A new &lt;see langword=&quot;XmlWhitespace&quot; /&gt; node.">Nouveau nœud <see langword="XmlWhitespace" />.</returns>
    </member>
    <member name="M:System.Xml.XmlDocument.CreateXmlDeclaration(System.String,System.String,System.String)">
      <summary vsli:raw="Creates an &lt;see cref=&quot;T:System.Xml.XmlDeclaration&quot; /&gt; node with the specified values.">Crée un nœud <see cref="T:System.Xml.XmlDeclaration" /> avec les valeurs spécifiées.</summary>
      <param name="version" vsli:raw="The version must be &quot;1.0&quot;.">La version doit être "1.0".</param>
      <param name="encoding" vsli:raw="The value of the encoding attribute. This is the encoding that is used when you save the &lt;see cref=&quot;T:System.Xml.XmlDocument&quot; /&gt; to a file or a stream; therefore, it must be set to a string supported by the &lt;see cref=&quot;T:System.Text.Encoding&quot; /&gt; class, otherwise &lt;see cref=&quot;M:System.Xml.XmlDocument.Save(System.String)&quot; /&gt; fails. If this is &lt;see langword=&quot;null&quot; /&gt; or String.Empty, the &lt;see langword=&quot;Save&quot; /&gt; method does not write an encoding attribute on the XML declaration and therefore the default encoding, UTF-8, is used.  &#xA;  &#xA; Note: If the &lt;see langword=&quot;XmlDocument&quot; /&gt; is saved to either a &lt;see cref=&quot;T:System.IO.TextWriter&quot; /&gt; or an &lt;see cref=&quot;T:System.Xml.XmlTextWriter&quot; /&gt;, this encoding value is discarded. Instead, the encoding of the &lt;see langword=&quot;TextWriter&quot; /&gt; or the &lt;see langword=&quot;XmlTextWriter&quot; /&gt; is used. This ensures that the XML written out can be read back using the correct encoding.">Valeur de l'attribut d'encodage. Il s'agit de l'encodage utilisé quand vous enregistrez un élément <see cref="T:System.Xml.XmlDocument" /> dans un fichier ou un flux ; il doit donc être défini avec une chaîne prise en charge par la classe <see cref="T:System.Text.Encoding" />, sinon <see cref="M:System.Xml.XmlDocument.Save(System.String)" /> échoue. Si cette valeur est <see langword="null" /> ou String.Empty, la méthode <see langword="Save" /> n'écrit pas d'attribut d'encodage sur la déclaration XML ; le codage par défaut UTF-8 est donc utilisé.  
  
Remarque : si l'élément <see langword="XmlDocument" /> est enregistré dans un <see cref="T:System.IO.TextWriter" /> ou un <see cref="T:System.Xml.XmlTextWriter" />, cette valeur d'encodage est ignorée. L'encodage du <see langword="TextWriter" /> ou du <see langword="XmlTextWriter" /> est utilisé à la place. Cela garantit que le code XML écrit peut être lu en utilisant l'encodage correct.</param>
      <param name="standalone" vsli:raw="The value must be either &quot;yes&quot; or &quot;no&quot;. If this is &lt;see langword=&quot;null&quot; /&gt; or String.Empty, the &lt;see langword=&quot;Save&quot; /&gt; method does not write a standalone attribute on the XML declaration.">La valeur doit être "yes" ou "no". Si cette valeur est <see langword="null" /> ou String.Empty, la méthode <see langword="Save" /> n'écrit pas d'attribut autonome sur la déclaration XML.</param>
      <exception cref="T:System.ArgumentException" vsli:raw="The values of &lt;paramref name=&quot;version&quot; /&gt; or &lt;paramref name=&quot;standalone&quot; /&gt; are something other than the ones specified above.">Les valeurs de <paramref name="version" /> ou <paramref name="standalone" /> sont différentes de celles spécifiées ci-dessus.</exception>
      <returns vsli:raw="The new &lt;see langword=&quot;XmlDeclaration&quot; /&gt; node.">Nouveau nœud <see langword="XmlDeclaration" />.</returns>
    </member>
    <member name="M:System.Xml.XmlDocument.GetElementById(System.String)">
      <summary vsli:raw="Gets the &lt;see cref=&quot;T:System.Xml.XmlElement&quot; /&gt; with the specified ID.">Obtient l'élément <see cref="T:System.Xml.XmlElement" /> avec l'ID spécifié.</summary>
      <param name="elementId" vsli:raw="The attribute ID to match.">ID d'attribut avec lequel établir une correspondance.</param>
      <returns vsli:raw="The &lt;see langword=&quot;XmlElement&quot; /&gt; with the matching ID or &lt;see langword=&quot;null&quot; /&gt; if no matching element is found.">Élément <see langword="XmlElement" /> avec l'ID correspondant ou <see langword="null" /> si aucun élément correspondant n'est trouvé.</returns>
    </member>
    <member name="M:System.Xml.XmlDocument.GetElementsByTagName(System.String)">
      <summary vsli:raw="Returns an &lt;see cref=&quot;T:System.Xml.XmlNodeList&quot; /&gt; containing a list of all descendant elements that match the specified &lt;see cref=&quot;P:System.Xml.XmlDocument.Name&quot; /&gt;.">Retourne un élément <see cref="T:System.Xml.XmlNodeList" /> contenant la liste de tous les éléments descendants qui correspondent à l'élément <see cref="P:System.Xml.XmlDocument.Name" /> spécifié.</summary>
      <param name="name" vsli:raw="The qualified name to match. It is matched against the &lt;see langword=&quot;Name&quot; /&gt; property of the matching node. The special value &quot;*&quot; matches all tags.">Nom qualifié à trouver. Il est comparé à la propriété <see langword="Name" /> du nœud correspondant. La valeur spéciale "*" correspond à toutes les étiquettes.</param>
      <returns vsli:raw="An &lt;see cref=&quot;T:System.Xml.XmlNodeList&quot; /&gt; containing a list of all matching nodes. If no nodes match &lt;paramref name=&quot;name&quot; /&gt;, the returned collection will be empty.">Un élément <see cref="T:System.Xml.XmlNodeList" /> contenant la liste de tous les nœuds correspondants. Si aucun nœud ne correspond à <paramref name="name" />, la collection retournée sera vide.</returns>
    </member>
    <member name="M:System.Xml.XmlDocument.GetElementsByTagName(System.String,System.String)">
      <summary vsli:raw="Returns an &lt;see cref=&quot;T:System.Xml.XmlNodeList&quot; /&gt; containing a list of all descendant elements that match the specified &lt;see cref=&quot;P:System.Xml.XmlDocument.LocalName&quot; /&gt; and &lt;see cref=&quot;P:System.Xml.XmlNode.NamespaceURI&quot; /&gt;.">Retourne un élément <see cref="T:System.Xml.XmlNodeList" /> contenant la liste de tous les éléments descendants qui correspondent aux éléments <see cref="P:System.Xml.XmlDocument.LocalName" /> et <see cref="P:System.Xml.XmlNode.NamespaceURI" /> spécifiés.</summary>
      <param name="localName" vsli:raw="The LocalName to match. The special value &quot;*&quot; matches all tags.">LocalName à trouver. La valeur spéciale "*" correspond à toutes les étiquettes.</param>
      <param name="namespaceURI" vsli:raw="NamespaceURI to match.">URI d'espace de noms avec lequel établir une correspondance.</param>
      <returns vsli:raw="An &lt;see cref=&quot;T:System.Xml.XmlNodeList&quot; /&gt; containing a list of all matching nodes. If no nodes match the specified &lt;paramref name=&quot;localName&quot; /&gt; and &lt;paramref name=&quot;namespaceURI&quot; /&gt;, the returned collection will be empty.">Un élément <see cref="T:System.Xml.XmlNodeList" /> contenant la liste de tous les nœuds correspondants. Si aucun nœud ne correspond aux éléments <paramref name="localName" /> et <paramref name="namespaceURI" /> spécifiés, la collection retournée sera vide.</returns>
    </member>
    <member name="M:System.Xml.XmlDocument.ImportNode(System.Xml.XmlNode,System.Boolean)">
      <summary vsli:raw="Imports a node from another document to the current document.">Importe un nœud d'un autre document vers le document actif.</summary>
      <param name="node" vsli:raw="The node being imported.">Nœud importé.</param>
      <param name="deep" vsli:raw="&lt;see langword=&quot;true&quot; /&gt; to perform a deep clone; otherwise, &lt;see langword=&quot;false&quot; /&gt;.">
        <see langword="true" /> pour réaliser un clone complet ; sinon, <see langword="false" />.</param>
      <exception cref="T:System.InvalidOperationException" vsli:raw="Calling this method on a node type which cannot be imported.">Appeler cette méthode sur un type de nœud qui ne peut pas être importé.</exception>
      <returns vsli:raw="The imported &lt;see cref=&quot;T:System.Xml.XmlNode&quot; /&gt;.">L'élément <see cref="T:System.Xml.XmlNode" /> importé.</returns>
    </member>
    <member name="M:System.Xml.XmlDocument.Load(System.IO.Stream)">
      <summary vsli:raw="Loads the XML document from the specified stream.">Charge le document XML à partir du flux spécifié.</summary>
      <param name="inStream" vsli:raw="The stream containing the XML document to load.">Flux contenant le document XML à charger.</param>
      <exception cref="T:System.Xml.XmlException" vsli:raw="There is a load or parse error in the XML. In this case, a &lt;see cref=&quot;T:System.IO.FileNotFoundException&quot; /&gt; is raised.">Le fichier XML contient une erreur de chargement ou d’analyse. Dans ce cas, une <see cref="T:System.IO.FileNotFoundException" /> est levée.</exception>
    </member>
    <member name="M:System.Xml.XmlDocument.Load(System.IO.TextReader)">
      <summary vsli:raw="Loads the XML document from the specified &lt;see cref=&quot;T:System.IO.TextReader&quot; /&gt;.">Charge le document XML à partir de l'élément <see cref="T:System.IO.TextReader" /> spécifié.</summary>
      <param name="txtReader" vsli:raw="The &lt;see langword=&quot;TextReader&quot; /&gt; used to feed the XML data into the document.">L'élément <see langword="TextReader" /> utilisé pour introduire les données XML dans le document.</param>
      <exception cref="T:System.Xml.XmlException" vsli:raw="There is a load or parse error in the XML. In this case, the document remains empty.">Le fichier XML contient une erreur de chargement ou d’analyse. Dans ce cas, le document reste vide.</exception>
    </member>
    <member name="M:System.Xml.XmlDocument.Load(System.String)">
      <summary vsli:raw="Loads the XML document from the specified URL.">Charge le document XML à partir de l'URL spécifiée.</summary>
      <param name="filename" vsli:raw="URL for the file containing the XML document to load. The URL can be either a local file or an HTTP URL (a Web address).">URL du fichier contenant le document XML à charger. L'URL peut être un fichier local ou une URL HTTP (adresse web).</param>
      <exception cref="T:System.Xml.XmlException" vsli:raw="There is a load or parse error in the XML. In this case, a &lt;see cref=&quot;T:System.IO.FileNotFoundException&quot; /&gt; is raised.">Le fichier XML contient une erreur de chargement ou d’analyse. Dans ce cas, une <see cref="T:System.IO.FileNotFoundException" /> est levée.</exception>
      <exception cref="T:System.ArgumentException" vsli:raw="&lt;paramref name=&quot;filename&quot; /&gt; is a zero-length string, contains only white space, or contains one or more invalid characters as defined by &lt;see cref=&quot;F:System.IO.Path.InvalidPathChars&quot; /&gt;.">
        <paramref name="filename" /> est une chaîne de longueur nulle, contient seulement un espace, ou contient un ou plusieurs caractères non valides définis par <see cref="F:System.IO.Path.InvalidPathChars" />.</exception>
      <exception cref="T:System.ArgumentNullException" vsli:raw="&lt;paramref name=&quot;filename&quot; /&gt; is &lt;see langword=&quot;null&quot; /&gt;.">
        <paramref name="filename" /> a la valeur <see langword="null" />.</exception>
      <exception cref="T:System.IO.PathTooLongException" vsli:raw="The specified path, file name, or both exceed the system-defined maximum length.">Le chemin et/ou le nom de fichier spécifiés dépassent la longueur maximale définie par le système.</exception>
      <exception cref="T:System.IO.DirectoryNotFoundException" vsli:raw="The specified path is invalid (for example, it is on an unmapped drive).">Le chemin spécifié n’est pas valide (par exemple, il est sur un lecteur non mappé).</exception>
      <exception cref="T:System.IO.IOException" vsli:raw="An I/O error occurred while opening the file.">Une erreur d’E/S s’est produite lors de l’ouverture du fichier.</exception>
      <exception cref="T:System.UnauthorizedAccessException" vsli:raw="&lt;paramref name=&quot;filename&quot; /&gt; specified a file that is read-only.  &#xA;  &#xA; -or-  &#xA;  &#xA; This operation is not supported on the current platform.  &#xA;  &#xA; -or-  &#xA;  &#xA; &lt;paramref name=&quot;filename&quot; /&gt; specified a directory.  &#xA;  &#xA; -or-  &#xA;  &#xA; The caller does not have the required permission.">
        <paramref name="filename" /> a spécifié un fichier en lecture seule.  
  
- ou - 
Cette opération n'est pas prise en charge sur la plateforme actuelle.  
  
- ou - 
 <paramref name="filename" /> a spécifié un répertoire.  
  
- ou - 
L'appelant n'a pas l'autorisation requise.</exception>
      <exception cref="T:System.IO.FileNotFoundException" vsli:raw="The file specified in &lt;paramref name=&quot;filename&quot; /&gt; was not found.">Le fichier spécifié dans <paramref name="filename" /> est introuvable.</exception>
      <exception cref="T:System.NotSupportedException" vsli:raw="&lt;paramref name=&quot;filename&quot; /&gt; is in an invalid format.">
        <paramref name="filename" /> est dans un format non valide.</exception>
      <exception cref="T:System.Security.SecurityException" vsli:raw="The caller does not have the required permission.">L'appelant n'a pas l'autorisation requise.</exception>
    </member>
    <member name="M:System.Xml.XmlDocument.Load(System.Xml.XmlReader)">
      <summary vsli:raw="Loads the XML document from the specified &lt;see cref=&quot;T:System.Xml.XmlReader&quot; /&gt;.">Charge le document XML à partir de l'élément <see cref="T:System.Xml.XmlReader" /> spécifié.</summary>
      <param name="reader" vsli:raw="The &lt;see langword=&quot;XmlReader&quot; /&gt; used to feed the XML data into the document.">L'élément <see langword="XmlReader" /> utilisé pour introduire les données XML dans le document.</param>
      <exception cref="T:System.Xml.XmlException" vsli:raw="There is a load or parse error in the XML. In this case, the document remains empty.">Le fichier XML contient une erreur de chargement ou d’analyse. Dans ce cas, le document reste vide.</exception>
    </member>
    <member name="M:System.Xml.XmlDocument.LoadXml(System.String)">
      <summary vsli:raw="Loads the XML document from the specified string.">Charge le document XML à partir de la chaîne spécifiée.</summary>
      <param name="xml" vsli:raw="String containing the XML document to load.">Chaîne contenant le document XML à charger.</param>
      <exception cref="T:System.Xml.XmlException" vsli:raw="There is a load or parse error in the XML. In this case, the document remains empty.">Le fichier XML contient une erreur de chargement ou d’analyse. Dans ce cas, le document reste vide.</exception>
    </member>
    <member name="M:System.Xml.XmlDocument.ReadNode(System.Xml.XmlReader)">
      <summary vsli:raw="Creates an &lt;see cref=&quot;T:System.Xml.XmlNode&quot; /&gt; object based on the information in the &lt;see cref=&quot;T:System.Xml.XmlReader&quot; /&gt;. The reader must be positioned on a node or attribute.">Crée un objet <see cref="T:System.Xml.XmlNode" /> sur la base des informations de l'élément <see cref="T:System.Xml.XmlReader" />. Le lecteur doit être positionné sur un nœud ou sur un attribut.</summary>
      <param name="reader" vsli:raw="The XML source.">Source XML</param>
      <exception cref="T:System.NullReferenceException" vsli:raw="The reader is positioned on a node type that does not translate to a valid DOM node (for example, EndElement or EndEntity).">Le lecteur est positionné sur un type de nœud qui ne se convertit pas en nœud DOM valide (par exemple, EndElement ou EndEntity).</exception>
      <returns vsli:raw="The new &lt;see langword=&quot;XmlNode&quot; /&gt; or &lt;see langword=&quot;null&quot; /&gt; if no more nodes exist.">Le nouvel élément <see langword="XmlNode" /> ou <see langword="null" /> s'il n'existe plus de nœuds.</returns>
    </member>
    <member name="M:System.Xml.XmlDocument.Save(System.IO.Stream)">
      <summary vsli:raw="Saves the XML document to the specified stream.">Enregistre le document XML dans le flux spécifié.</summary>
      <param name="outStream" vsli:raw="The stream to which you want to save.">Flux dans lequel vous voulez enregistrer.</param>
      <exception cref="T:System.Xml.XmlException" vsli:raw="The operation would not result in a well formed XML document (for example, no document element or duplicate XML declarations).">L’opération ne se traduirait pas par un document XML bien formé (par exemple, aucun élément de document ou aucune double déclaration XML).</exception>
    </member>
    <member name="M:System.Xml.XmlDocument.Save(System.IO.TextWriter)">
      <summary vsli:raw="Saves the XML document to the specified &lt;see cref=&quot;T:System.IO.TextWriter&quot; /&gt;.">Enregistre le document XML dans l'élément <see cref="T:System.IO.TextWriter" /> spécifié.</summary>
      <param name="writer" vsli:raw="The &lt;see langword=&quot;TextWriter&quot; /&gt; to which you want to save.">L'élément <see langword="TextWriter" /> dans lequel vous voulez enregistrer.</param>
      <exception cref="T:System.Xml.XmlException" vsli:raw="The operation would not result in a well formed XML document (for example, no document element or duplicate XML declarations).">L’opération ne se traduirait pas par un document XML bien formé (par exemple, aucun élément de document ou aucune double déclaration XML).</exception>
    </member>
    <member name="M:System.Xml.XmlDocument.Save(System.String)">
      <summary vsli:raw="Saves the XML document to the specified file. If the specified file exists, this method overwrites it.">Enregistre le document XML dans le fichier spécifié. Si le fichier spécifié existe, cette méthode le remplace.</summary>
      <param name="filename" vsli:raw="The location of the file where you want to save the document.">Emplacement du fichier où vous voulez enregistrer le document.</param>
      <exception cref="T:System.Xml.XmlException" vsli:raw="The operation would not result in a well formed XML document (for example, no document element or duplicate XML declarations).">L’opération ne se traduirait pas par un document XML bien formé (par exemple, aucun élément de document ou aucune double déclaration XML).</exception>
    </member>
    <member name="M:System.Xml.XmlDocument.Save(System.Xml.XmlWriter)">
      <summary vsli:raw="Saves the XML document to the specified &lt;see cref=&quot;T:System.Xml.XmlWriter&quot; /&gt;.">Enregistre le document XML dans l'élément <see cref="T:System.Xml.XmlWriter" /> spécifié.</summary>
      <param name="w" vsli:raw="The &lt;see langword=&quot;XmlWriter&quot; /&gt; to which you want to save.">L'élément <see langword="XmlWriter" /> dans lequel vous voulez enregistrer.</param>
      <exception cref="T:System.Xml.XmlException" vsli:raw="The operation would not result in a well formed XML document (for example, no document element or duplicate XML declarations).">L’opération ne se traduirait pas par un document XML bien formé (par exemple, aucun élément de document ou aucune double déclaration XML).</exception>
    </member>
    <member name="M:System.Xml.XmlDocument.Validate(System.Xml.Schema.ValidationEventHandler)">
      <summary vsli:raw="Validates the &lt;see cref=&quot;T:System.Xml.XmlDocument&quot; /&gt; against the XML Schema Definition Language (XSD) schemas contained in the &lt;see cref=&quot;P:System.Xml.XmlDocument.Schemas&quot; /&gt; property.">Valide l'élément <see cref="T:System.Xml.XmlDocument" /> par rapport aux schémas XSD contenus dans la propriété <see cref="P:System.Xml.XmlDocument.Schemas" />.</summary>
      <param name="validationEventHandler" vsli:raw="The &lt;see cref=&quot;T:System.Xml.Schema.ValidationEventHandler&quot; /&gt; object that receives information about schema validation warnings and errors.">Objet <see cref="T:System.Xml.Schema.ValidationEventHandler" /> qui reçoit des informations sur les erreurs et les avertissements de la validation des schémas.</param>
      <exception cref="T:System.Xml.Schema.XmlSchemaValidationException" vsli:raw="A schema validation event occurred and no &lt;see cref=&quot;T:System.Xml.Schema.ValidationEventHandler&quot; /&gt; object was specified.">Un événement de validation de schéma s’est produit et aucun objet <see cref="T:System.Xml.Schema.ValidationEventHandler" /> n’a été spécifié.</exception>
    </member>
    <member name="M:System.Xml.XmlDocument.Validate(System.Xml.Schema.ValidationEventHandler,System.Xml.XmlNode)">
      <summary vsli:raw="Validates the &lt;see cref=&quot;T:System.Xml.XmlNode&quot; /&gt; object specified against the XML Schema Definition Language (XSD) schemas in the &lt;see cref=&quot;P:System.Xml.XmlDocument.Schemas&quot; /&gt; property.">Valide l'objet <see cref="T:System.Xml.XmlNode" /> spécifié par rapport aux schémas XSD de la propriété <see cref="P:System.Xml.XmlDocument.Schemas" />.</summary>
      <param name="validationEventHandler" vsli:raw="The &lt;see cref=&quot;T:System.Xml.Schema.ValidationEventHandler&quot; /&gt; object that receives information about schema validation warnings and errors.">Objet <see cref="T:System.Xml.Schema.ValidationEventHandler" /> qui reçoit des informations sur les erreurs et les avertissements de la validation des schémas.</param>
      <param name="nodeToValidate" vsli:raw="The &lt;see cref=&quot;T:System.Xml.XmlNode&quot; /&gt; object created from an &lt;see cref=&quot;T:System.Xml.XmlDocument&quot; /&gt; to validate.">Objet <see cref="T:System.Xml.XmlNode" /> créé à partir de l'élément <see cref="T:System.Xml.XmlDocument" /> à valider.</param>
      <exception cref="T:System.ArgumentException" vsli:raw="The &lt;see cref=&quot;T:System.Xml.XmlNode&quot; /&gt; object parameter was not created from an &lt;see cref=&quot;T:System.Xml.XmlDocument&quot; /&gt;.">Le paramètre de l’objet <see cref="T:System.Xml.XmlNode" /> n’a pas été créé à partir d’un <see cref="T:System.Xml.XmlDocument" />.</exception>
      <exception cref="T:System.InvalidOperationException" vsli:raw="The &lt;see cref=&quot;T:System.Xml.XmlNode&quot; /&gt; object parameter is not an element, attribute, document fragment, or the root node.">Le paramètre de l’objet <see cref="T:System.Xml.XmlNode" /> n’est pas un élément, un attribut, un fragment de document ou le nœud racine.</exception>
      <exception cref="T:System.Xml.Schema.XmlSchemaValidationException" vsli:raw="A schema validation event occurred and no &lt;see cref=&quot;T:System.Xml.Schema.ValidationEventHandler&quot; /&gt; object was specified.">Un événement de validation de schéma s’est produit et aucun objet <see cref="T:System.Xml.Schema.ValidationEventHandler" /> n’a été spécifié.</exception>
    </member>
    <member name="M:System.Xml.XmlDocument.WriteContentTo(System.Xml.XmlWriter)">
      <summary vsli:raw="Saves all the children of the &lt;see langword=&quot;XmlDocument&quot; /&gt; node to the specified &lt;see cref=&quot;T:System.Xml.XmlWriter&quot; /&gt;.">Enregistre tous les enfants du nœud <see langword="XmlDocument" /> dans l'élément <see cref="T:System.Xml.XmlWriter" /> spécifié.</summary>
      <param name="xw" vsli:raw="The &lt;see langword=&quot;XmlWriter&quot; /&gt; to which you want to save.">L'élément <see langword="XmlWriter" /> dans lequel vous voulez enregistrer.</param>
    </member>
    <member name="M:System.Xml.XmlDocument.WriteTo(System.Xml.XmlWriter)">
      <summary vsli:raw="Saves the &lt;see langword=&quot;XmlDocument&quot; /&gt; node to the specified &lt;see cref=&quot;T:System.Xml.XmlWriter&quot; /&gt;.">Enregistre le nœud <see langword="XmlDocument" /> dans l'élément <see cref="T:System.Xml.XmlWriter" /> spécifié.</summary>
      <param name="w" vsli:raw="The &lt;see langword=&quot;XmlWriter&quot; /&gt; to which you want to save.">L'élément <see langword="XmlWriter" /> dans lequel vous voulez enregistrer.</param>
    </member>
    <member name="P:System.Xml.XmlDocument.BaseURI">
      <summary vsli:raw="Gets the base URI of the current node.">Obtient l'URI de base du nœud actuel.</summary>
      <returns vsli:raw="The location from which the node was loaded.">Emplacement à partir duquel le nœud a été chargé.</returns>
    </member>
    <member name="P:System.Xml.XmlDocument.DocumentElement">
      <summary vsli:raw="Gets the root &lt;see cref=&quot;T:System.Xml.XmlElement&quot; /&gt; for the document.">Obtient l'élément <see cref="T:System.Xml.XmlElement" /> racine pour le document.</summary>
      <returns vsli:raw="The &lt;see langword=&quot;XmlElement&quot; /&gt; that represents the root of the XML document tree. If no root exists, &lt;see langword=&quot;null&quot; /&gt; is returned.">Élément <see langword="XmlElement" /> représentant la racine de l'arborescence du document XML. S'il n'existe pas de racine, <see langword="null" /> est retourné.</returns>
    </member>
    <member name="P:System.Xml.XmlDocument.DocumentType">
      <summary vsli:raw="Gets the node containing the DOCTYPE declaration.">Obtient le nœud contenant la déclaration DOCTYPE.</summary>
      <returns vsli:raw="The &lt;see cref=&quot;T:System.Xml.XmlNode&quot; /&gt; containing the DocumentType (DOCTYPE declaration).">Nœud <see cref="T:System.Xml.XmlNode" /> contenant le DocumentType (déclaration DOCTYPE).</returns>
    </member>
    <member name="P:System.Xml.XmlDocument.Implementation">
      <summary vsli:raw="Gets the &lt;see cref=&quot;T:System.Xml.XmlImplementation&quot; /&gt; object for the current document.">Obtient l'objet <see cref="T:System.Xml.XmlImplementation" /> pour le document actif.</summary>
      <returns vsli:raw="The &lt;see langword=&quot;XmlImplementation&quot; /&gt; object for the current document.">Objet <see langword="XmlImplementation" /> pour le document actif.</returns>
    </member>
    <member name="P:System.Xml.XmlDocument.InnerText">
      <summary vsli:raw="Throws an &lt;see cref=&quot;T:System.InvalidOperationException&quot; /&gt; in all cases.">Lève une exception <see cref="T:System.InvalidOperationException" /> dans tous les cas.</summary>
      <exception cref="T:System.InvalidOperationException" vsli:raw="In all cases.">Dans tous les cas.</exception>
      <returns vsli:raw="The values of the node and all its child nodes.">Valeurs concaténées du nœud et de tous ses nœuds enfants.</returns>
    </member>
    <member name="P:System.Xml.XmlDocument.InnerXml">
      <summary vsli:raw="Gets or sets the markup representing the children of the current node.">Obtient ou définit le balisage représentant les enfants du nœud actuel.</summary>
      <exception cref="T:System.Xml.XmlException" vsli:raw="The XML specified when setting this property is not well-formed.">Le code XML spécifié pendant la définition de cette propriété n’est pas bien formé.</exception>
      <returns vsli:raw="The markup of the children of the current node.">Balisage des enfants du nœud actuel.</returns>
    </member>
    <member name="P:System.Xml.XmlDocument.IsReadOnly">
      <summary vsli:raw="Gets a value indicating whether the current node is read-only.">Obtient une valeur indiquant si le nœud actuel est en lecture seule.</summary>
      <returns vsli:raw="&lt;see langword=&quot;true&quot; /&gt; if the current node is read-only; otherwise &lt;see langword=&quot;false&quot; /&gt;. &lt;see langword=&quot;XmlDocument&quot; /&gt; nodes always return &lt;see langword=&quot;false&quot; /&gt;.">
        <see langword="true" /> si le nœud actuel est en lecture seule ; sinon, <see langword="false" />. Les nœuds <see langword="XmlDocument" /> retournent toujours <see langword="false" />.</returns>
    </member>
    <member name="P:System.Xml.XmlDocument.LocalName">
      <summary vsli:raw="Gets the local name of the node.">Obtient le nom local du nœud.</summary>
      <returns vsli:raw="For &lt;see langword=&quot;XmlDocument&quot; /&gt; nodes, the local name is #document.">Pour les nœuds <see langword="XmlDocument" />, le nom local est #document.</returns>
    </member>
    <member name="P:System.Xml.XmlDocument.Name">
      <summary vsli:raw="Gets the qualified name of the node.">Obtient le nom qualifié du nœud.</summary>
      <returns vsli:raw="For &lt;see langword=&quot;XmlDocument&quot; /&gt; nodes, the name is #document.">Pour les nœuds <see langword="XmlDocument" />, le nom est #document.</returns>
    </member>
    <member name="P:System.Xml.XmlDocument.NameTable">
      <summary vsli:raw="Gets the &lt;see cref=&quot;T:System.Xml.XmlNameTable&quot; /&gt; associated with this implementation.">Obtient l'élément <see cref="T:System.Xml.XmlNameTable" /> associé à cette implémentation.</summary>
      <returns vsli:raw="An &lt;see langword=&quot;XmlNameTable&quot; /&gt; enabling you to get the atomized version of a string within the document.">Un élément <see langword="XmlNameTable" /> qui vous permet d'obtenir la version atomisée d'une chaîne dans le document.</returns>
    </member>
    <member name="P:System.Xml.XmlDocument.NodeType">
      <summary vsli:raw="Gets the type of the current node.">Obtient le type du nœud actuel.</summary>
      <returns vsli:raw="The node type. For &lt;see langword=&quot;XmlDocument&quot; /&gt; nodes, this value is XmlNodeType.Document.">Type de nœud. Pour les nœuds <see langword="XmlDocument" />, cette valeur est XmlNodeType.Document.</returns>
    </member>
    <member name="P:System.Xml.XmlDocument.OwnerDocument">
      <summary vsli:raw="Gets the &lt;see cref=&quot;T:System.Xml.XmlDocument&quot; /&gt; to which the current node belongs.">Obtient l'élément <see cref="T:System.Xml.XmlDocument" /> auquel le nœud actif appartient.</summary>
      <returns vsli:raw="For &lt;see langword=&quot;XmlDocument&quot; /&gt; nodes (&lt;see cref=&quot;P:System.Xml.XmlDocument.NodeType&quot; /&gt; equals XmlNodeType.Document), this property always returns &lt;see langword=&quot;null&quot; /&gt;.">Pour les nœuds <see langword="XmlDocument" /> (<see cref="P:System.Xml.XmlDocument.NodeType" /> est égal à XmlNodeType.Document), cette propriété retourne toujours <see langword="null" />.</returns>
    </member>
    <member name="P:System.Xml.XmlDocument.ParentNode">
      <summary vsli:raw="Gets the parent node of this node (for nodes that can have parents).">Obtient le nœud parent de ce nœud (pour les nœuds qui peuvent avoir des parents).</summary>
      <returns vsli:raw="Always returns &lt;see langword=&quot;null&quot; /&gt;.">Retourne toujours <see langword="null" />.</returns>
    </member>
    <member name="P:System.Xml.XmlDocument.PreserveWhitespace">
      <summary vsli:raw="Gets or sets a value indicating whether to preserve white space in element content.">Obtient ou définit une valeur indiquant si les espaces blancs doivent être conservés dans le contenu d'élément.</summary>
      <returns vsli:raw="&lt;see langword=&quot;true&quot; /&gt; to preserve white space; otherwise &lt;see langword=&quot;false&quot; /&gt;. The default is &lt;see langword=&quot;false&quot; /&gt;.">
        <see langword="true" /> pour conserver les espaces ; sinon, <see langword="false" />. La valeur par défaut est <see langword="false" />.</returns>
    </member>
    <member name="P:System.Xml.XmlDocument.SchemaInfo">
      <summary vsli:raw="Returns the Post-Schema-Validation-Infoset (PSVI) of the node.">Retourne le jeu d’informations postérieures à la validation du schéma (PSVI, Post-Schema-Validation-Infoset) pour le nœud.</summary>
      <returns vsli:raw="The &lt;see cref=&quot;T:System.Xml.Schema.IXmlSchemaInfo&quot; /&gt; object representing the PSVI of the node.">L'objet <see cref="T:System.Xml.Schema.IXmlSchemaInfo" /> représentant le PSVI du nœud.</returns>
    </member>
    <member name="P:System.Xml.XmlDocument.Schemas">
      <summary vsli:raw="Gets or sets the &lt;see cref=&quot;T:System.Xml.Schema.XmlSchemaSet&quot; /&gt; object associated with this &lt;see cref=&quot;T:System.Xml.XmlDocument&quot; /&gt;.">Obtient ou définit l'objet <see cref="T:System.Xml.Schema.XmlSchemaSet" /> associé à cet élément <see cref="T:System.Xml.XmlDocument" />.</summary>
      <returns vsli:raw="An &lt;see cref=&quot;T:System.Xml.Schema.XmlSchemaSet&quot; /&gt; object containing the XML Schema Definition Language (XSD) schemas associated with this &lt;see cref=&quot;T:System.Xml.XmlDocument&quot; /&gt;; otherwise, an empty &lt;see cref=&quot;T:System.Xml.Schema.XmlSchemaSet&quot; /&gt; object.">Un objet <see cref="T:System.Xml.Schema.XmlSchemaSet" /> contenant les schémas XSD (XML Schema Definition Language) associés à cet élément <see cref="T:System.Xml.XmlDocument" /> ; sinon, un objet <see cref="T:System.Xml.Schema.XmlSchemaSet" /> vide.</returns>
    </member>
    <member name="P:System.Xml.XmlDocument.XmlResolver">
      <summary vsli:raw="Sets the &lt;see cref=&quot;T:System.Xml.XmlResolver&quot; /&gt; to use for resolving external resources.">Définit l'élément <see cref="T:System.Xml.XmlResolver" /> à utiliser pour résoudre les ressources externes.</summary>
      <exception cref="T:System.Xml.XmlException" vsli:raw="This property is set to &lt;see langword=&quot;null&quot; /&gt; and an external DTD or entity is encountered.">Cette propriété a la valeur <see langword="null" /> et une entité ou DTD externe est rencontrée.</exception>
      <returns vsli:raw="The &lt;see langword=&quot;XmlResolver&quot; /&gt; to use.  &#xA;  &#xA; In version 1.1 of the.NET Framework, the caller must be fully trusted in order to specify an &lt;see langword=&quot;XmlResolver&quot; /&gt;.">
        <see langword="XmlResolver" /> à utiliser.  
  
Dans la version 1.1 du .NET Framework, l'appelant doit être entièrement fiable pour pouvoir spécifier un élément <see langword="XmlResolver" />.</returns>
    </member>
    <member name="T:System.Xml.XmlDocumentFragment">
      <summary vsli:raw="Represents a lightweight object that is useful for tree insert operations.">Représente un objet rudimentaire utilisé dans les opérations d'insertion dans les arborescences.</summary>
    </member>
    <member name="M:System.Xml.XmlDocumentFragment.#ctor(System.Xml.XmlDocument)">
      <summary vsli:raw="Initializes a new instance of the &lt;see cref=&quot;T:System.Xml.XmlDocumentFragment&quot; /&gt; class.">Initialise une nouvelle instance de la classe <see cref="T:System.Xml.XmlDocumentFragment" />.</summary>
      <param name="ownerDocument" vsli:raw="The XML document that is the source of the fragment.">Document XML qui est la source du fragment.</param>
    </member>
    <member name="M:System.Xml.XmlDocumentFragment.CloneNode(System.Boolean)">
      <summary vsli:raw="Creates a duplicate of this node.">Crée un doublon de ce nœud.</summary>
      <param name="deep" vsli:raw="&lt;see langword=&quot;true&quot; /&gt; to recursively clone the subtree under the specified node; &lt;see langword=&quot;false&quot; /&gt; to clone only the node itself.">
        <see langword="true" /> pour cloner récursivement la sous-arborescence sous le nœud spécifié ; <see langword="false" /> pour cloner seulement le nœud lui-même.</param>
      <returns vsli:raw="The cloned node.">Nœud cloné.</returns>
    </member>
    <member name="M:System.Xml.XmlDocumentFragment.WriteContentTo(System.Xml.XmlWriter)">
      <summary vsli:raw="Saves all the children of the node to the specified &lt;see cref=&quot;T:System.Xml.XmlWriter&quot; /&gt;.">Enregistre tous les enfants du nœud dans l’élément <see cref="T:System.Xml.XmlWriter" /> spécifié.</summary>
      <param name="w" vsli:raw="The &lt;see langword=&quot;XmlWriter&quot; /&gt; to which you want to save.">L'élément <see langword="XmlWriter" /> dans lequel vous voulez enregistrer.</param>
    </member>
    <member name="M:System.Xml.XmlDocumentFragment.WriteTo(System.Xml.XmlWriter)">
      <summary vsli:raw="Saves the node to the specified &lt;see cref=&quot;T:System.Xml.XmlWriter&quot; /&gt;.">Enregistre le nœud dans le <see cref="T:System.Xml.XmlWriter" /> spécifié.</summary>
      <param name="w" vsli:raw="The &lt;see langword=&quot;XmlWriter&quot; /&gt; to which you want to save.">L'élément <see langword="XmlWriter" /> dans lequel vous voulez enregistrer.</param>
    </member>
    <member name="P:System.Xml.XmlDocumentFragment.InnerXml">
      <summary vsli:raw="Gets or sets the markup representing the children of this node.">Obtient ou définit le balisage représentant les enfants de ce nœud.</summary>
      <exception cref="T:System.Xml.XmlException" vsli:raw="The XML specified when setting this property is not well-formed.">Le code XML spécifié pendant la définition de cette propriété n’est pas bien formé.</exception>
      <returns vsli:raw="The markup of the children of this node.">Balisage des enfants de ce nœud.</returns>
    </member>
    <member name="P:System.Xml.XmlDocumentFragment.LocalName">
      <summary vsli:raw="Gets the local name of the node.">Obtient le nom local du nœud.</summary>
      <returns vsli:raw="For &lt;see langword=&quot;XmlDocumentFragment&quot; /&gt; nodes, the local name is &lt;see langword=&quot;#document-fragment&quot; /&gt;.">Pour les nœuds <see langword="XmlDocumentFragment" />, le nom local est <see langword="#document-fragment" />.</returns>
    </member>
    <member name="P:System.Xml.XmlDocumentFragment.Name">
      <summary vsli:raw="Gets the qualified name of the node.">Obtient le nom qualifié du nœud.</summary>
      <returns vsli:raw="For &lt;see langword=&quot;XmlDocumentFragment&quot; /&gt;, the name is &lt;see langword=&quot;#document-fragment&quot; /&gt;.">Pour <see langword="XmlDocumentFragment" />, le nom est <see langword="#document-fragment" />.</returns>
    </member>
    <member name="P:System.Xml.XmlDocumentFragment.NodeType">
      <summary vsli:raw="Gets the type of the current node.">Obtient le type du nœud actuel.</summary>
      <returns vsli:raw="For &lt;see langword=&quot;XmlDocumentFragment&quot; /&gt; nodes, this value is XmlNodeType.DocumentFragment.">Pour les nœuds <see langword="XmlDocumentFragment" />, cette valeur est XmlNodeType.DocumentFragment.</returns>
    </member>
    <member name="P:System.Xml.XmlDocumentFragment.OwnerDocument">
      <summary vsli:raw="Gets the &lt;see cref=&quot;T:System.Xml.XmlDocument&quot; /&gt; to which this node belongs.">Obtient le <see cref="T:System.Xml.XmlDocument" /> auquel ce nœud appartient.</summary>
      <returns vsli:raw="The &lt;see langword=&quot;XmlDocument&quot; /&gt; to which this node belongs.">
        <see langword="XmlDocument" /> auquel ce nœud appartient.</returns>
    </member>
    <member name="P:System.Xml.XmlDocumentFragment.ParentNode">
      <summary vsli:raw="Gets the parent of this node (for nodes that can have parents).">Obtient le parent de ce nœud (pour les nœuds qui peuvent avoir des parents).</summary>
      <returns vsli:raw="The parent of this node.  &#xA;  &#xA; For &lt;see langword=&quot;XmlDocumentFragment&quot; /&gt; nodes, this property is always &lt;see langword=&quot;null&quot; /&gt;.">Parent de ce nœud.  
  
Pour les nœuds <see langword="XmlDocumentFragment" />, cette propriété est toujours <see langword="null" />.</returns>
    </member>
    <member name="T:System.Xml.XmlDocumentType">
      <summary vsli:raw="Represents the document type declaration.">Représente la déclaration du type de document.</summary>
    </member>
    <member name="M:System.Xml.XmlDocumentType.#ctor(System.String,System.String,System.String,System.String,System.Xml.XmlDocument)">
      <summary vsli:raw="Initializes a new instance of the &lt;see cref=&quot;T:System.Xml.XmlDocumentType&quot; /&gt; class.">Initialise une nouvelle instance de la classe <see cref="T:System.Xml.XmlDocumentType" />.</summary>
      <param name="name" vsli:raw="The qualified name; see the &lt;see cref=&quot;P:System.Xml.XmlDocumentType.Name&quot; /&gt; property.">Nom qualifié ; consultez la propriété <see cref="P:System.Xml.XmlDocumentType.Name" />.</param>
      <param name="publicId" vsli:raw="The public identifier; see the &lt;see cref=&quot;P:System.Xml.XmlDocumentType.PublicId&quot; /&gt; property.">Identificateur public ; consultez la propriété <see cref="P:System.Xml.XmlDocumentType.PublicId" />.</param>
      <param name="systemId" vsli:raw="The system identifier; see the &lt;see cref=&quot;P:System.Xml.XmlDocumentType.SystemId&quot; /&gt; property.">Identificateur système ; consultez la propriété <see cref="P:System.Xml.XmlDocumentType.SystemId" />.</param>
      <param name="internalSubset" vsli:raw="The DTD internal subset; see the &lt;see cref=&quot;P:System.Xml.XmlDocumentType.InternalSubset&quot; /&gt; property.">Sous-ensemble interne de DTD ; consultez la propriété <see cref="P:System.Xml.XmlDocumentType.InternalSubset" />.</param>
      <param name="doc" vsli:raw="The parent document.">Document parent.</param>
    </member>
    <member name="M:System.Xml.XmlDocumentType.CloneNode(System.Boolean)">
      <summary vsli:raw="Creates a duplicate of this node.">Crée un doublon de ce nœud.</summary>
      <param name="deep" vsli:raw="&lt;see langword=&quot;true&quot; /&gt; to recursively clone the subtree under the specified node; &lt;see langword=&quot;false&quot; /&gt; to clone only the node itself. For document type nodes, the cloned node always includes the subtree, regardless of the parameter setting.">
        <see langword="true" /> pour cloner récursivement la sous-arborescence sous le nœud spécifié ; <see langword="false" /> pour cloner seulement le nœud lui-même. Pour les nœuds de type de document, le nœud cloné inclut toujours le sous-arbre, quels que soient les paramètres.</param>
      <returns vsli:raw="The cloned node.">Nœud cloné.</returns>
    </member>
    <member name="M:System.Xml.XmlDocumentType.WriteContentTo(System.Xml.XmlWriter)">
      <summary vsli:raw="Saves all the children of the node to the specified &lt;see cref=&quot;T:System.Xml.XmlWriter&quot; /&gt;. For &lt;see langword=&quot;XmlDocumentType&quot; /&gt; nodes, this method has no effect.">Enregistre tous les enfants du nœud dans l’élément <see cref="T:System.Xml.XmlWriter" /> spécifié. Pour les nœuds <see langword="XmlDocumentType" />, cette méthode n'a aucun effet.</summary>
      <param name="w" vsli:raw="The &lt;see langword=&quot;XmlWriter&quot; /&gt; to which you want to save.">L'élément <see langword="XmlWriter" /> dans lequel vous voulez enregistrer.</param>
    </member>
    <member name="M:System.Xml.XmlDocumentType.WriteTo(System.Xml.XmlWriter)">
      <summary vsli:raw="Saves the node to the specified &lt;see cref=&quot;T:System.Xml.XmlWriter&quot; /&gt;.">Enregistre le nœud dans le <see cref="T:System.Xml.XmlWriter" /> spécifié.</summary>
      <param name="w" vsli:raw="The &lt;see langword=&quot;XmlWriter&quot; /&gt; to which you want to save.">L'élément <see langword="XmlWriter" /> dans lequel vous voulez enregistrer.</param>
    </member>
    <member name="P:System.Xml.XmlDocumentType.Entities">
      <summary vsli:raw="Gets the collection of &lt;see cref=&quot;T:System.Xml.XmlEntity&quot; /&gt; nodes declared in the document type declaration.">Obtient la collection de nœuds <see cref="T:System.Xml.XmlEntity" /> présents dans la déclaration du type de document.</summary>
      <returns vsli:raw="An &lt;see cref=&quot;T:System.Xml.XmlNamedNodeMap&quot; /&gt; containing the &lt;see langword=&quot;XmlEntity&quot; /&gt; nodes. The returned &lt;see langword=&quot;XmlNamedNodeMap&quot; /&gt; is read-only.">
        <see cref="T:System.Xml.XmlNamedNodeMap" /> contenant les nœuds <see langword="XmlEntity" />. Le <see langword="XmlNamedNodeMap" /> retourné est en lecture seule.</returns>
    </member>
    <member name="P:System.Xml.XmlDocumentType.InternalSubset">
      <summary vsli:raw="Gets the value of the document type definition (DTD) internal subset on the DOCTYPE declaration.">Obtient la valeur du sous-ensemble interne de définition de type de document (DTD) sur la déclaration DOCTYPE.</summary>
      <returns vsli:raw="The DTD internal subset on the DOCTYPE. If there is no DTD internal subset, String.Empty is returned.">Sous-ensemble interne DTD sur DOCTYPE. S'il n'existe aucun sous-ensemble interne DTD, String.Empty est retourné.</returns>
    </member>
    <member name="P:System.Xml.XmlDocumentType.IsReadOnly">
      <summary vsli:raw="Gets a value indicating whether the node is read-only.">Obtient une valeur indiquant si le nœud est en lecture seule.</summary>
      <returns vsli:raw="&lt;see langword=&quot;true&quot; /&gt; if the node is read-only; otherwise, &lt;see langword=&quot;false&quot; /&gt;.  &#xA;  &#xA; Because DocumentType nodes are read-only, this property always returns &lt;see langword=&quot;true&quot; /&gt;.">
        <see langword="true" /> Si le nœud est en lecture seule ; Sinon, <see langword="false" /> .  
  
Les nœuds DocumentType étant en lecture seule, cette propriété retourne toujours <see langword="true" />.</returns>
    </member>
    <member name="P:System.Xml.XmlDocumentType.LocalName">
      <summary vsli:raw="Gets the local name of the node.">Obtient le nom local du nœud.</summary>
      <returns vsli:raw="For DocumentType nodes, this property returns the name of the document type.">Pour les nœuds DocumentType, cette propriété retourne le nom du type de document.</returns>
    </member>
    <member name="P:System.Xml.XmlDocumentType.Name">
      <summary vsli:raw="Gets the qualified name of the node.">Obtient le nom qualifié du nœud.</summary>
      <returns vsli:raw="For DocumentType nodes, this property returns the name of the document type.">Pour les nœuds DocumentType, cette propriété retourne le nom du type de document.</returns>
    </member>
    <member name="P:System.Xml.XmlDocumentType.NodeType">
      <summary vsli:raw="Gets the type of the current node.">Obtient le type du nœud actuel.</summary>
      <returns vsli:raw="For DocumentType nodes, this value is XmlNodeType.DocumentType.">Pour les nœuds DocumentType, cette valeur est XmlNodeType.DocumentType.</returns>
    </member>
    <member name="P:System.Xml.XmlDocumentType.Notations">
      <summary vsli:raw="Gets the collection of &lt;see cref=&quot;T:System.Xml.XmlNotation&quot; /&gt; nodes present in the document type declaration.">Obtient la collection de nœuds <see cref="T:System.Xml.XmlNotation" /> présents dans la déclaration du type de document.</summary>
      <returns vsli:raw="An &lt;see cref=&quot;T:System.Xml.XmlNamedNodeMap&quot; /&gt; containing the &lt;see langword=&quot;XmlNotation&quot; /&gt; nodes. The returned &lt;see langword=&quot;XmlNamedNodeMap&quot; /&gt; is read-only.">
        <see cref="T:System.Xml.XmlNamedNodeMap" /> contenant les nœuds <see langword="XmlNotation" />. Le <see langword="XmlNamedNodeMap" /> retourné est en lecture seule.</returns>
    </member>
    <member name="P:System.Xml.XmlDocumentType.PublicId">
      <summary vsli:raw="Gets the value of the public identifier on the DOCTYPE declaration.">Obtient la valeur de l'identificateur public sur la déclaration DOCTYPE.</summary>
      <returns vsli:raw="The public identifier on the DOCTYPE. If there is no public identifier, &lt;see langword=&quot;null&quot; /&gt; is returned.">Identificateur public sur DOCTYPE. S'il n'existe aucun identificateur public, <see langword="null" /> est alors retournée.</returns>
    </member>
    <member name="P:System.Xml.XmlDocumentType.SystemId">
      <summary vsli:raw="Gets the value of the system identifier on the DOCTYPE declaration.">Obtient la valeur de l'identificateur système sur la déclaration DOCTYPE.</summary>
      <returns vsli:raw="The system identifier on the DOCTYPE. If there is no system identifier, &lt;see langword=&quot;null&quot; /&gt; is returned.">Identificateur système sur DOCTYPE. S'il n'existe aucun identificateur système, <see langword="null" /> est alors retournée.</returns>
    </member>
    <member name="T:System.Xml.XmlElement">
      <summary vsli:raw="Represents an element.">Représente un élément.</summary>
    </member>
    <member name="M:System.Xml.XmlElement.#ctor(System.String,System.String,System.String,System.Xml.XmlDocument)">
      <summary vsli:raw="Initializes a new instance of the &lt;see cref=&quot;T:System.Xml.XmlElement&quot; /&gt; class.">Initialise une nouvelle instance de la classe <see cref="T:System.Xml.XmlElement" />.</summary>
      <param name="prefix" vsli:raw="The namespace prefix; see the &lt;see cref=&quot;P:System.Xml.XmlElement.Prefix&quot; /&gt; property.">Préfixe de l'espace de noms ; consultez la propriété <see cref="P:System.Xml.XmlElement.Prefix" />.</param>
      <param name="localName" vsli:raw="The local name; see the &lt;see cref=&quot;P:System.Xml.XmlElement.LocalName&quot; /&gt; property.">Nom local ; consultez la propriété <see cref="P:System.Xml.XmlElement.LocalName" />.</param>
      <param name="namespaceURI" vsli:raw="The namespace URI; see the &lt;see cref=&quot;P:System.Xml.XmlElement.NamespaceURI&quot; /&gt; property.">URI de l'espace de noms ; consultez la propriété <see cref="P:System.Xml.XmlElement.NamespaceURI" />.</param>
      <param name="doc" vsli:raw="The parent XML document.">Document XML parent.</param>
    </member>
    <member name="M:System.Xml.XmlElement.CloneNode(System.Boolean)">
      <summary vsli:raw="Creates a duplicate of this node.">Crée un doublon de ce nœud.</summary>
      <param name="deep" vsli:raw="&lt;see langword=&quot;true&quot; /&gt; to recursively clone the subtree under the specified node; &lt;see langword=&quot;false&quot; /&gt; to clone only the node itself (and its attributes if the node is an &lt;see langword=&quot;XmlElement&quot; /&gt;).">
        <see langword="true" /> pour cloner récursivement la sous-arborescence sous le nœud spécifié ; <see langword="false" /> pour cloner seulement le nœud lui-même (et ses attributs si le nœud est un <see langword="XmlElement" />).</param>
      <returns vsli:raw="The cloned node.">Nœud cloné.</returns>
    </member>
    <member name="M:System.Xml.XmlElement.GetAttribute(System.String)">
      <summary vsli:raw="Returns the value for the attribute with the specified name.">Retourne la valeur définie pour l’attribut avec le nom spécifié.</summary>
      <param name="name" vsli:raw="The name of the attribute to retrieve. This is a qualified name. It is matched against the &lt;see langword=&quot;Name&quot; /&gt; property of the matching node.">Nom de l’attribut à récupérer. Il s’agit d’un nom qualifié. Il est comparé à la propriété <see langword="Name" /> du nœud correspondant.</param>
      <returns vsli:raw="The value of the specified attribute. An empty string is returned if a matching attribute is not found or if the attribute does not have a specified or default value.">Valeur de l'attribut spécifié. Une chaîne vide est retournée si aucun attribut correspondant n’est trouvé ou si l’attribut ne possède pas de valeur spécifiée ou de valeur par défaut.</returns>
    </member>
    <member name="M:System.Xml.XmlElement.GetAttribute(System.String,System.String)">
      <summary vsli:raw="Returns the value for the attribute with the specified local name and namespace URI.">Retourne la valeur de l'attribut avec le nom local et l'URI de l'espace de noms spécifiés.</summary>
      <param name="localName" vsli:raw="The local name of the attribute to retrieve.">Nom local de l'attribut à récupérer.</param>
      <param name="namespaceURI" vsli:raw="The namespace URI of the attribute to retrieve.">URI de l'espace de noms de l'attribut à récupérer.</param>
      <returns vsli:raw="The value of the specified attribute. An empty string is returned if a matching attribute is not found or if the attribute does not have a specified or default value.">Valeur de l'attribut spécifié. Une chaîne vide est retournée si aucun attribut correspondant n’est trouvé ou si l’attribut ne possède pas de valeur spécifiée ou de valeur par défaut.</returns>
    </member>
    <member name="M:System.Xml.XmlElement.GetAttributeNode(System.String)">
      <summary vsli:raw="Returns the &lt;see langword=&quot;XmlAttribute&quot; /&gt; with the specified name.">Retourne le <see langword="XmlAttribute" /> avec le nom spécifié.</summary>
      <param name="name" vsli:raw="The name of the attribute to retrieve. This is a qualified name. It is matched against the &lt;see langword=&quot;Name&quot; /&gt; property of the matching node.">Nom de l’attribut à récupérer. Il s’agit d’un nom qualifié. Il est comparé à la propriété <see langword="Name" /> du nœud correspondant.</param>
      <returns vsli:raw="The specified &lt;see langword=&quot;XmlAttribute&quot; /&gt; or &lt;see langword=&quot;null&quot; /&gt; if a matching attribute was not found.">
        <see langword="XmlAttribute" /> ou <see langword="null" /> spécifié si aucun attribut correspondant n’a été trouvé.</returns>
    </member>
    <member name="M:System.Xml.XmlElement.GetAttributeNode(System.String,System.String)">
      <summary vsli:raw="Returns the &lt;see cref=&quot;T:System.Xml.XmlAttribute&quot; /&gt; with the specified local name and namespace URI.">Retourne <see cref="T:System.Xml.XmlAttribute" /> avec le nom local et l'URI de l'espace de noms spécifiés.</summary>
      <param name="localName" vsli:raw="The local name of the attribute.">Le nom local de l'attribut.</param>
      <param name="namespaceURI" vsli:raw="The namespace URI of the attribute.">L'URI de l'espace de noms de l'attribut.</param>
      <returns vsli:raw="The specified &lt;see langword=&quot;XmlAttribute&quot; /&gt; or &lt;see langword=&quot;null&quot; /&gt; if a matching attribute was not found.">
        <see langword="XmlAttribute" /> ou <see langword="null" /> spécifié si aucun attribut correspondant n’a été trouvé.</returns>
    </member>
    <member name="M:System.Xml.XmlElement.GetElementsByTagName(System.String)">
      <summary vsli:raw="Returns an &lt;see cref=&quot;T:System.Xml.XmlNodeList&quot; /&gt; containing a list of all descendant elements that match the specified &lt;see cref=&quot;P:System.Xml.XmlElement.Name&quot; /&gt;.">Retourne un élément <see cref="T:System.Xml.XmlNodeList" /> contenant la liste de tous les éléments descendants qui correspondent à l'élément <see cref="P:System.Xml.XmlElement.Name" /> spécifié.</summary>
      <param name="name" vsli:raw="The name tag to match. This is a qualified name. It is matched against the &lt;see langword=&quot;Name&quot; /&gt; property of the matching node. The asterisk (*) is a special value that matches all tags.">Balise de nom à mettre en correspondance. Il s’agit d’un nom qualifié. Il est comparé à la propriété <see langword="Name" /> du nœud correspondant. L’astérisque (*) est une valeur spéciale qui correspond à toutes les balises.</param>
      <returns vsli:raw="An &lt;see cref=&quot;T:System.Xml.XmlNodeList&quot; /&gt; containing a list of all matching nodes. The list is empty if there are no matching nodes.">Un élément <see cref="T:System.Xml.XmlNodeList" /> contenant la liste de tous les nœuds correspondants. La liste est vide s’il n’existe aucun nœud correspondant.</returns>
    </member>
    <member name="M:System.Xml.XmlElement.GetElementsByTagName(System.String,System.String)">
      <summary vsli:raw="Returns an &lt;see cref=&quot;T:System.Xml.XmlNodeList&quot; /&gt; containing a list of all descendant elements that match the specified &lt;see cref=&quot;P:System.Xml.XmlElement.LocalName&quot; /&gt; and &lt;see cref=&quot;P:System.Xml.XmlElement.NamespaceURI&quot; /&gt;.">Retourne un élément <see cref="T:System.Xml.XmlNodeList" /> contenant la liste de tous les éléments descendants qui correspondent aux éléments <see cref="P:System.Xml.XmlElement.LocalName" /> et <see cref="P:System.Xml.XmlElement.NamespaceURI" /> spécifiés.</summary>
      <param name="localName" vsli:raw="The local name to match. The asterisk (*) is a special value that matches all tags.">Nom local à mettre en correspondance. L’astérisque (*) est une valeur spéciale qui correspond à toutes les balises.</param>
      <param name="namespaceURI" vsli:raw="The namespace URI to match.">URI de l'espace de noms à mettre en correspondance.</param>
      <returns vsli:raw="An &lt;see cref=&quot;T:System.Xml.XmlNodeList&quot; /&gt; containing a list of all matching nodes. The list is empty if there are no matching nodes.">Un élément <see cref="T:System.Xml.XmlNodeList" /> contenant la liste de tous les nœuds correspondants. La liste est vide s’il n’existe aucun nœud correspondant.</returns>
    </member>
    <member name="M:System.Xml.XmlElement.HasAttribute(System.String)">
      <summary vsli:raw="Determines whether the current node has an attribute with the specified name.">Détermine si le nœud actif possède un attribut portant le nom spécifié.</summary>
      <param name="name" vsli:raw="The name of the attribute to find. This is a qualified name. It is matched against the &lt;see langword=&quot;Name&quot; /&gt; property of the matching node.">Nom de l’attribut à rechercher. Il s’agit d’un nom qualifié. Il est comparé à la propriété <see langword="Name" /> du nœud correspondant.</param>
      <returns vsli:raw="&lt;see langword=&quot;true&quot; /&gt; if the current node has the specified attribute; otherwise, &lt;see langword=&quot;false&quot; /&gt;.">
        <see langword="true" /> si le nœud actif possède l’attribut spécifié ; sinon, <see langword="false" />.</returns>
    </member>
    <member name="M:System.Xml.XmlElement.HasAttribute(System.String,System.String)">
      <summary vsli:raw="Determines whether the current node has an attribute with the specified local name and namespace URI.">Détermine si le nœud actuel possède un attribut avec le nom local et l'URI de l'espace de noms spécifiés.</summary>
      <param name="localName" vsli:raw="The local name of the attribute to find.">Nom local de l'attribut à rechercher.</param>
      <param name="namespaceURI" vsli:raw="The namespace URI of the attribute to find.">URI de l'espace de noms de l'attribut à rechercher.</param>
      <returns vsli:raw="&lt;see langword=&quot;true&quot; /&gt; if the current node has the specified attribute; otherwise, &lt;see langword=&quot;false&quot; /&gt;.">
        <see langword="true" /> si le nœud actif possède l’attribut spécifié ; sinon, <see langword="false" />.</returns>
    </member>
    <member name="M:System.Xml.XmlElement.RemoveAll">
      <summary vsli:raw="Removes all specified attributes and children of the current node. Default attributes are not removed.">Supprime tous les attributs et enfants spécifiés du nœud actuel. Les attributs par défaut ne sont pas supprimés.</summary>
    </member>
    <member name="M:System.Xml.XmlElement.RemoveAllAttributes">
      <summary vsli:raw="Removes all specified attributes from the element. Default attributes are not removed.">Supprime tous les attributs spécifiés de l’élément. Les attributs par défaut ne sont pas supprimés.</summary>
    </member>
    <member name="M:System.Xml.XmlElement.RemoveAttribute(System.String)">
      <summary vsli:raw="Removes an attribute by name.">Supprime un attribut par nom.</summary>
      <param name="name" vsli:raw="The name of the attribute to remove. This is a qualified name. It is matched against the &lt;see langword=&quot;Name&quot; /&gt; property of the matching node.">Nom de l'attribut à supprimer. Il s’agit d’un nom qualifié. Il est comparé à la propriété <see langword="Name" /> du nœud correspondant.</param>
      <exception cref="T:System.ArgumentException" vsli:raw="The node is read-only.">Le nœud est en lecture seule.</exception>
    </member>
    <member name="M:System.Xml.XmlElement.RemoveAttribute(System.String,System.String)">
      <summary vsli:raw="Removes an attribute with the specified local name and namespace URI. (If the removed attribute has a default value, it is immediately replaced).">Supprime un attribut avec le nom local et l'URI de l'espace de noms spécifiés. (Si l’attribut supprimé possède une valeur par défaut, elle est remplacée immédiatement).</summary>
      <param name="localName" vsli:raw="The local name of the attribute to remove.">Nom local de l'attribut à supprimer.</param>
      <param name="namespaceURI" vsli:raw="The namespace URI of the attribute to remove.">URI de l'espace de noms de l'attribut à supprimer.</param>
      <exception cref="T:System.ArgumentException" vsli:raw="The node is read-only.">Le nœud est en lecture seule.</exception>
    </member>
    <member name="M:System.Xml.XmlElement.RemoveAttributeAt(System.Int32)">
      <summary vsli:raw="Removes the attribute node with the specified index from the element. (If the removed attribute has a default value, it is immediately replaced).">Supprime de l’élément le nœud d’attribut avec l’index spécifié. (Si l’attribut supprimé possède une valeur par défaut, elle est remplacée immédiatement).</summary>
      <param name="i" vsli:raw="The index of the node to remove. The first node has index 0.">Index du nœud à supprimer. Le premier nœud possède l’index 0.</param>
      <returns vsli:raw="The attribute node removed or &lt;see langword=&quot;null&quot; /&gt; if there is no node at the given index.">Nœud d’attribut supprimé, ou <see langword="null" /> s’il n’existe aucun nœud à l’index donné.</returns>
    </member>
    <member name="M:System.Xml.XmlElement.RemoveAttributeNode(System.String,System.String)">
      <summary vsli:raw="Removes the &lt;see cref=&quot;T:System.Xml.XmlAttribute&quot; /&gt; specified by the local name and namespace URI. (If the removed attribute has a default value, it is immediately replaced).">Supprime <see cref="T:System.Xml.XmlAttribute" /> spécifié par le nom local et l'URI de l'espace de noms. (Si l’attribut supprimé possède une valeur par défaut, elle est remplacée immédiatement).</summary>
      <param name="localName" vsli:raw="The local name of the attribute.">Le nom local de l'attribut.</param>
      <param name="namespaceURI" vsli:raw="The namespace URI of the attribute.">L'URI de l'espace de noms de l'attribut.</param>
      <exception cref="T:System.ArgumentException" vsli:raw="This node is read-only.">Ce nœud est en lecture seule.</exception>
      <returns vsli:raw="The removed &lt;see langword=&quot;XmlAttribute&quot; /&gt; or &lt;see langword=&quot;null&quot; /&gt; if the &lt;see langword=&quot;XmlElement&quot; /&gt; does not have a matching attribute node.">
        <see langword="XmlAttribute" /> supprimé ou <see langword="null" /> si <see langword="XmlElement" /> ne possède pas de nœud d'attribut correspondant.</returns>
    </member>
    <member name="M:System.Xml.XmlElement.RemoveAttributeNode(System.Xml.XmlAttribute)">
      <summary vsli:raw="Removes the specified &lt;see cref=&quot;T:System.Xml.XmlAttribute&quot; /&gt;.">Supprime le <see cref="T:System.Xml.XmlAttribute" /> spécifié.</summary>
      <param name="oldAttr" vsli:raw="The &lt;see langword=&quot;XmlAttribute&quot; /&gt; node to remove. If the removed attribute has a default value, it is immediately replaced.">Nœud <see langword="XmlAttribute" /> à supprimer. Si l'attribut supprimé possède une valeur par défaut, il est immédiatement remplacé.</param>
      <exception cref="T:System.ArgumentException" vsli:raw="This node is read-only.">Ce nœud est en lecture seule.</exception>
      <returns vsli:raw="The removed &lt;see langword=&quot;XmlAttribute&quot; /&gt; or &lt;see langword=&quot;null&quot; /&gt; if &lt;paramref name=&quot;oldAttr&quot; /&gt; is not an attribute node of the &lt;see langword=&quot;XmlElement&quot; /&gt;.">Le <see langword="XmlAttribute" /> supprimé ou <see langword="null" /> si <paramref name="oldAttr" /> n'est pas un nœud d'attribut de <see langword="XmlElement" />.</returns>
    </member>
    <member name="M:System.Xml.XmlElement.SetAttribute(System.String,System.String)">
      <summary vsli:raw="Sets the value of the attribute with the specified name.">Définit la valeur de l'attribut avec le nom spécifié.</summary>
      <param name="name" vsli:raw="The name of the attribute to create or alter. This is a qualified name. If the name contains a colon it is parsed into prefix and local name components.">Nom de l'attribut à créer ou à modifier. Il s’agit d’un nom qualifié. Si le nom contient un signe deux-points, il est analysé dans les composants de préfixe et de nom local.</param>
      <param name="value" vsli:raw="The value to set for the attribute.">Valeur à définir pour l'attribut.</param>
      <exception cref="T:System.Xml.XmlException" vsli:raw="The specified name contains an invalid character.">Le nom spécifié contient un caractère non valide.</exception>
      <exception cref="T:System.ArgumentException" vsli:raw="The node is read-only.">Le nœud est en lecture seule.</exception>
    </member>
    <member name="M:System.Xml.XmlElement.SetAttribute(System.String,System.String,System.String)">
      <summary vsli:raw="Sets the value of the attribute with the specified local name and namespace URI.">Définit la valeur de l'attribut avec le nom local et l'URI de l'espace de noms spécifiés.</summary>
      <param name="localName" vsli:raw="The local name of the attribute.">Le nom local de l'attribut.</param>
      <param name="namespaceURI" vsli:raw="The namespace URI of the attribute.">L'URI de l'espace de noms de l'attribut.</param>
      <param name="value" vsli:raw="The value to set for the attribute.">Valeur à définir pour l'attribut.</param>
      <returns vsli:raw="The attribute value.">Valeur de l'attribut</returns>
    </member>
    <member name="M:System.Xml.XmlElement.SetAttributeNode(System.String,System.String)">
      <summary vsli:raw="Adds the specified &lt;see cref=&quot;T:System.Xml.XmlAttribute&quot; /&gt;.">Ajoute le <see cref="T:System.Xml.XmlAttribute" /> spécifié.</summary>
      <param name="localName" vsli:raw="The local name of the attribute.">Le nom local de l'attribut.</param>
      <param name="namespaceURI" vsli:raw="The namespace URI of the attribute.">L'URI de l'espace de noms de l'attribut.</param>
      <returns vsli:raw="The &lt;see langword=&quot;XmlAttribute&quot; /&gt; to add.">
        <see langword="XmlAttribute" /> à ajouter.</returns>
    </member>
    <member name="M:System.Xml.XmlElement.SetAttributeNode(System.Xml.XmlAttribute)">
      <summary vsli:raw="Adds the specified &lt;see cref=&quot;T:System.Xml.XmlAttribute&quot; /&gt;.">Ajoute le <see cref="T:System.Xml.XmlAttribute" /> spécifié.</summary>
      <param name="newAttr" vsli:raw="The &lt;see langword=&quot;XmlAttribute&quot; /&gt; node to add to the attribute collection for this element.">Nœud <see langword="XmlAttribute" /> à ajouter à la collection d'attributs de cet élément.</param>
      <exception cref="T:System.ArgumentException" vsli:raw="The &lt;paramref name=&quot;newAttr&quot; /&gt; was created from a different document than the one that created this node. Or this node is read-only.">
        <paramref name="newAttr" /> a été créé à partir d'un document différent de celui qui a créé ce nœud. ou bien ce nœud est en lecture seule.</exception>
      <exception cref="T:System.InvalidOperationException" vsli:raw="The &lt;paramref name=&quot;newAttr&quot; /&gt; is already an attribute of another &lt;see langword=&quot;XmlElement&quot; /&gt; object. You must explicitly clone &lt;see langword=&quot;XmlAttribute&quot; /&gt; nodes to re-use them in other &lt;see langword=&quot;XmlElement&quot; /&gt; objects.">
        <paramref name="newAttr" /> est déjà l'attribut d'un autre objet <see langword="XmlElement" />. Vous devez explicitement cloner les nœuds <see langword="XmlAttribute" /> pour les réutiliser dans d'autres objets <see langword="XmlElement" />.</exception>
      <returns vsli:raw="If the attribute replaces an existing attribute with the same name, the old &lt;see langword=&quot;XmlAttribute&quot; /&gt; is returned; otherwise, &lt;see langword=&quot;null&quot; /&gt; is returned.">Si l'attribut remplace un attribut existant portant le même nom, l'ancien <see langword="XmlAttribute" /> est retourné ; sinon, <see langword="null" /> est retournée.</returns>
    </member>
    <member name="M:System.Xml.XmlElement.WriteContentTo(System.Xml.XmlWriter)">
      <summary vsli:raw="Saves all the children of the node to the specified &lt;see cref=&quot;T:System.Xml.XmlWriter&quot; /&gt;.">Enregistre tous les enfants du nœud dans l’élément <see cref="T:System.Xml.XmlWriter" /> spécifié.</summary>
      <param name="w" vsli:raw="The &lt;see langword=&quot;XmlWriter&quot; /&gt; to which you want to save.">L'élément <see langword="XmlWriter" /> dans lequel vous voulez enregistrer.</param>
    </member>
    <member name="M:System.Xml.XmlElement.WriteTo(System.Xml.XmlWriter)">
      <summary vsli:raw="Saves the current node to the specified &lt;see cref=&quot;T:System.Xml.XmlWriter&quot; /&gt;.">Enregistre le nœud actif dans le <see cref="T:System.Xml.XmlWriter" /> spécifié.</summary>
      <param name="w" vsli:raw="The &lt;see langword=&quot;XmlWriter&quot; /&gt; to which you want to save.">L'élément <see langword="XmlWriter" /> dans lequel vous voulez enregistrer.</param>
    </member>
    <member name="P:System.Xml.XmlElement.Attributes">
      <summary vsli:raw="Gets an &lt;see cref=&quot;T:System.Xml.XmlAttributeCollection&quot; /&gt; containing the list of attributes for this node.">Obtient un <see cref="T:System.Xml.XmlAttributeCollection" /> contenant la liste des attributs de ce nœud.</summary>
      <returns vsli:raw="&lt;see cref=&quot;T:System.Xml.XmlAttributeCollection&quot; /&gt; containing the list of attributes for this node.">
        <see cref="T:System.Xml.XmlAttributeCollection" /> contenant la liste des attributs de ce nœud.</returns>
    </member>
    <member name="P:System.Xml.XmlElement.HasAttributes">
      <summary vsli:raw="Gets a &lt;see langword=&quot;boolean&quot; /&gt; value indicating whether the current node has any attributes.">Obtient une valeur <see langword="boolean" /> indiquant si le nœud actuel a des attributs.</summary>
      <returns vsli:raw="&lt;see langword=&quot;true&quot; /&gt; if the current node has attributes; otherwise, &lt;see langword=&quot;false&quot; /&gt;.">
        <see langword="true" /> si le nœud actuel possède des attributs ; sinon, <see langword="false" />.</returns>
    </member>
    <member name="P:System.Xml.XmlElement.InnerText">
      <summary vsli:raw="Gets or sets the concatenated values of the node and all its children.">Obtient ou définit les valeurs concaténées du nœud et de tous ses enfants.</summary>
      <returns vsli:raw="The concatenated values of the node and all its children.">Valeurs concaténées du nœud et de tous ses enfants.</returns>
    </member>
    <member name="P:System.Xml.XmlElement.InnerXml">
      <summary vsli:raw="Gets or sets the markup representing just the children of this node.">Obtient ou définit le balisage représentant uniquement les enfants de ce nœud.</summary>
      <exception cref="T:System.Xml.XmlException" vsli:raw="The XML specified when setting this property is not well-formed.">Le code XML spécifié pendant la définition de cette propriété n’est pas bien formé.</exception>
      <returns vsli:raw="The markup of the children of this node.">Balisage des enfants de ce nœud.</returns>
    </member>
    <member name="P:System.Xml.XmlElement.IsEmpty">
      <summary vsli:raw="Gets or sets the tag format of the element.">Obtient ou définit le format de balise de l’élément.</summary>
      <returns vsli:raw="&lt;see langword=&quot;true&quot; /&gt; if the element is to be serialized in the short tag format &quot;&amp;lt;item/&amp;gt;&quot;; &lt;see langword=&quot;false&quot; /&gt; for the long format &quot;&amp;lt;item&amp;gt;&amp;lt;/item&amp;gt;&quot;.  &#xA;  &#xA; When setting this property, if set to &lt;see langword=&quot;true&quot; /&gt;, the children of the element are removed and the element is serialized in the short tag format. If set to &lt;see langword=&quot;false&quot; /&gt;, the value of the property is changed (regardless of whether or not the element has content); if the element is empty, it is serialized in the long format.  &#xA;  &#xA; This property is a Microsoft extension to the Document Object Model (DOM).">
        <see langword="true" />Si l’élément doit être sérialisé au format de balise abrégé " &lt; Item/ &gt; "; <see langword="false" /> pour le format long " &lt; Item &gt; &lt; /Item &gt; ".  
  
Si vous affectez la valeur <see langword="true" /> à cette propriété, les enfants de l’élément sont supprimés et l’élément est sérialisé au format d’étiquette abrégé. Si vous affectez la valeur <see langword="false" />, la valeur de la propriété est modifiée (que l’élément possède ou non du contenu) ; si l’élément est vide, il est sérialisé au format long.  
  
Cette propriété est une extension Microsoft du modèle DOM (Document Object Model).</returns>
    </member>
    <member name="P:System.Xml.XmlElement.LocalName">
      <summary vsli:raw="Gets the local name of the current node.">Obtient le nom local du nœud actuel.</summary>
      <returns vsli:raw="The name of the current node with the prefix removed. For example, &lt;see langword=&quot;LocalName&quot; /&gt; is book for the element &amp;lt;bk:book&amp;gt;.">Nom du nœud actuel dont le préfixe est supprimé. Par exemple, <see langword="LocalName" /> est Book pour l’élément &lt; BK : Book &gt; .</returns>
    </member>
    <member name="P:System.Xml.XmlElement.Name">
      <summary vsli:raw="Gets the qualified name of the node.">Obtient le nom qualifié du nœud.</summary>
      <returns vsli:raw="The qualified name of the node. For &lt;see langword=&quot;XmlElement&quot; /&gt; nodes, this is the tag name of the element.">Nom qualifié du nœud. Pour les nœuds <see langword="XmlElement" />, nom de balise de l’élément.</returns>
    </member>
    <member name="P:System.Xml.XmlElement.NamespaceURI">
      <summary vsli:raw="Gets the namespace URI of this node.">Obtient l'URI de l'espace de noms de ce nœud.</summary>
      <returns vsli:raw="The namespace URI of this node. If there is no namespace URI, this property returns String.Empty.">Espace de noms d'URI du nœud. En l'absence d'URI d'espace de noms, cette propriété retourne String.Empty.</returns>
    </member>
    <member name="P:System.Xml.XmlElement.NextSibling">
      <summary vsli:raw="Gets the &lt;see cref=&quot;T:System.Xml.XmlNode&quot; /&gt; immediately following this element.">Obtient <see cref="T:System.Xml.XmlNode" /> qui suit immédiatement cet élément.</summary>
      <returns vsli:raw="The &lt;see langword=&quot;XmlNode&quot; /&gt; immediately following this element.">
        <see langword="XmlNode" /> qui suit immédiatement cet élément.</returns>
    </member>
    <member name="P:System.Xml.XmlElement.NodeType">
      <summary vsli:raw="Gets the type of the current node.">Obtient le type du nœud actuel.</summary>
      <returns vsli:raw="The node type. For &lt;see langword=&quot;XmlElement&quot; /&gt; nodes, this value is XmlNodeType.Element.">Type de nœud. Pour les nœuds <see langword="XmlElement" />, cette valeur est XmlNodeType.Element.</returns>
    </member>
    <member name="P:System.Xml.XmlElement.OwnerDocument">
      <summary vsli:raw="Gets the &lt;see cref=&quot;T:System.Xml.XmlDocument&quot; /&gt; to which this node belongs.">Obtient le <see cref="T:System.Xml.XmlDocument" /> auquel ce nœud appartient.</summary>
      <returns vsli:raw="The &lt;see langword=&quot;XmlDocument&quot; /&gt; to which this element belongs.">
        <see langword="XmlDocument" /> auquel cet élément appartient.</returns>
    </member>
    <member name="P:System.Xml.XmlElement.ParentNode">
      <summary vsli:raw="Gets the parent of this node (for nodes that can have parents).">Obtient le parent de ce nœud (pour les nœuds qui peuvent avoir des parents).</summary>
      <returns vsli:raw="The &lt;see langword=&quot;XmlNode&quot; /&gt; that is the parent of the current node. If a node has just been created and not yet added to the tree, or if it has been removed from the tree, the parent is &lt;see langword=&quot;null&quot; /&gt;. For all other nodes, the value returned depends on the &lt;see cref=&quot;P:System.Xml.XmlNode.NodeType&quot; /&gt; of the node. The following table describes the possible return values for the &lt;see langword=&quot;ParentNode&quot; /&gt; property.">
        <see langword="XmlNode" /> correspondant au parent du nœud actif. Si un nœud vient d’être créé mais qu’il n’a pas encore été ajouté à l’arborescence, ou s’il a été supprimé de celle-ci, le parent est <see langword="null" />. Pour tous les autres nœuds, la valeur retournée dépend du <see cref="P:System.Xml.XmlNode.NodeType" /> du nœud. Le tableau suivant décrit les différentes valeurs de retour possibles pour la propriété <see langword="ParentNode" />.</returns>
    </member>
    <member name="P:System.Xml.XmlElement.Prefix">
      <summary vsli:raw="Gets or sets the namespace prefix of this node.">Obtient ou définit le préfixe de l'espace de noms de ce nœud.</summary>
      <exception cref="T:System.ArgumentException" vsli:raw="This node is read-only.">Ce nœud est en lecture seule.</exception>
      <exception cref="T:System.Xml.XmlException" vsli:raw="The specified prefix contains an invalid character.  &#xA;  &#xA; The specified prefix is malformed.  &#xA;  &#xA; The namespaceURI of this node is &lt;see langword=&quot;null&quot; /&gt;.  &#xA;  &#xA; The specified prefix is &quot;xml&quot; and the namespaceURI of this node is different from http://www.w3.org/XML/1998/namespace.">Le préfixe spécifié contient un caractère non valide.  
  
Le préfixe spécifié est mal formé.  
  
L’URI de l’espace de noms de ce nœud est <see langword="null" />.  
  
Le préfixe spécifié est « xml » et l’URI d’espace de noms de ce nœud est différent de http://www.w3.org/XML/1998/namespace.</exception>
      <returns vsli:raw="The namespace prefix of this node. If there is no prefix, this property returns String.Empty.">Préfixe de l'espace de noms de ce nœud. En l'absence de préfixe, cette propriété retourne String.Empty.</returns>
    </member>
    <member name="P:System.Xml.XmlElement.SchemaInfo">
      <summary vsli:raw="Gets the post schema validation infoset that has been assigned to this node as a result of schema validation.">Obtient le jeu d’informations postérieures à la validation du schéma qui a été assigné à ce nœud à la suite de la validation du schéma.</summary>
      <returns vsli:raw="An &lt;see cref=&quot;T:System.Xml.Schema.IXmlSchemaInfo&quot; /&gt; object containing the post schema validation infoset of this node.">Objet <see cref="T:System.Xml.Schema.IXmlSchemaInfo" /> contenant le jeu d'informations postérieures à la validation du schéma de ce nœud.</returns>
    </member>
    <member name="T:System.Xml.XmlEntity">
      <summary vsli:raw="Represents an entity declaration, such as &amp;lt;!ENTITY... &amp;gt;.">Représente une déclaration d’entité, telle que &lt;!ENTITY... &gt;.</summary>
    </member>
    <member name="M:System.Xml.XmlEntity.CloneNode(System.Boolean)">
      <summary vsli:raw="Creates a duplicate of this node. Entity nodes cannot be cloned. Calling this method on an &lt;see cref=&quot;T:System.Xml.XmlEntity&quot; /&gt; object throws an exception.">Crée un doublon de ce nœud. Les nœuds d'entité ne peuvent pas être clonés. L'appel de cette méthode sur un objet <see cref="T:System.Xml.XmlEntity" /> lève une exception.</summary>
      <param name="deep" vsli:raw="&lt;see langword=&quot;true&quot; /&gt; to recursively clone the subtree under the specified node; &lt;see langword=&quot;false&quot; /&gt; to clone only the node itself.">
        <see langword="true" /> pour cloner récursivement la sous-arborescence sous le nœud spécifié ; <see langword="false" /> pour cloner seulement le nœud lui-même.</param>
      <exception cref="T:System.InvalidOperationException" vsli:raw="Entity nodes cannot be cloned. Calling this method on an &lt;see cref=&quot;T:System.Xml.XmlEntity&quot; /&gt; object throws an exception.">Les nœuds d'entité ne peuvent pas être clonés. L'appel de cette méthode sur un objet <see cref="T:System.Xml.XmlEntity" /> lève une exception.</exception>
      <returns vsli:raw="A copy of the &lt;see cref=&quot;T:System.Xml.XmlNode&quot; /&gt; from which the method is called.">Une copie du <see cref="T:System.Xml.XmlNode" /> à partir duquel la méthode est appelée.</returns>
    </member>
    <member name="M:System.Xml.XmlEntity.WriteContentTo(System.Xml.XmlWriter)">
      <summary vsli:raw="Saves all the children of the node to the specified &lt;see cref=&quot;T:System.Xml.XmlWriter&quot; /&gt;. For &lt;see langword=&quot;XmlEntity&quot; /&gt; nodes, this method has no effect.">Enregistre tous les enfants du nœud dans l’élément <see cref="T:System.Xml.XmlWriter" /> spécifié. Pour les nœuds <see langword="XmlEntity" />, cette méthode n'a aucun effet.</summary>
      <param name="w" vsli:raw="The &lt;see langword=&quot;XmlWriter&quot; /&gt; to which you want to save.">L'élément <see langword="XmlWriter" /> dans lequel vous voulez enregistrer.</param>
    </member>
    <member name="M:System.Xml.XmlEntity.WriteTo(System.Xml.XmlWriter)">
      <summary vsli:raw="Saves the node to the specified &lt;see cref=&quot;T:System.Xml.XmlWriter&quot; /&gt;. For &lt;see langword=&quot;XmlEntity&quot; /&gt; nodes, this method has no effect.">Enregistre le nœud dans le <see cref="T:System.Xml.XmlWriter" /> spécifié. Pour les nœuds <see langword="XmlEntity" />, cette méthode n'a aucun effet.</summary>
      <param name="w" vsli:raw="The &lt;see langword=&quot;XmlWriter&quot; /&gt; to which you want to save.">L'élément <see langword="XmlWriter" /> dans lequel vous voulez enregistrer.</param>
    </member>
    <member name="P:System.Xml.XmlEntity.BaseURI">
      <summary vsli:raw="Gets the base Uniform Resource Identifier (URI) of the current node.">Obtient l'URI (Uniform Resource Identifier) de base du nœud actuel.</summary>
      <returns vsli:raw="The location from which the node was loaded.">Emplacement à partir duquel le nœud a été chargé.</returns>
    </member>
    <member name="P:System.Xml.XmlEntity.InnerText">
      <summary vsli:raw="Gets the concatenated values of the entity node and all its children.">Obtient les valeurs concaténées du nœud d'entité et de tous ses enfants.</summary>
      <exception cref="T:System.InvalidOperationException" vsli:raw="Attempting to set the property.">Tentative de définition de la propriété.</exception>
      <returns vsli:raw="The concatenated values of the node and all its children.">Valeurs concaténées du nœud et de tous ses enfants.</returns>
    </member>
    <member name="P:System.Xml.XmlEntity.InnerXml">
      <summary vsli:raw="Gets the markup representing the children of this node.">Obtient le balisage représentant les enfants de ce nœud.</summary>
      <exception cref="T:System.InvalidOperationException" vsli:raw="Attempting to set the property.">Tentative de définition de la propriété.</exception>
      <returns vsli:raw="For &lt;see langword=&quot;XmlEntity&quot; /&gt; nodes, String.Empty is returned.">Pour les nœuds <see langword="XmlEntity" />, String.Empty est retourné.</returns>
    </member>
    <member name="P:System.Xml.XmlEntity.IsReadOnly">
      <summary vsli:raw="Gets a value indicating whether the node is read-only.">Obtient une valeur indiquant si le nœud est en lecture seule.</summary>
      <returns vsli:raw="&lt;see langword=&quot;true&quot; /&gt; if the node is read-only; otherwise, &lt;see langword=&quot;false&quot; /&gt;.  &#xA;  &#xA; Because &lt;see langword=&quot;XmlEntity&quot; /&gt; nodes are read-only, this property always returns &lt;see langword=&quot;true&quot; /&gt;.">
        <see langword="true" /> Si le nœud est en lecture seule ; Sinon, <see langword="false" /> .  
  
Les nœuds <see langword="XmlEntity" /> étant en lecture seule, cette propriété retourne toujours <see langword="true" />.</returns>
    </member>
    <member name="P:System.Xml.XmlEntity.LocalName">
      <summary vsli:raw="Gets the name of the node without the namespace prefix.">Obtient le nom du nœud sans le préfixe de l'espace de noms.</summary>
      <returns vsli:raw="For &lt;see langword=&quot;XmlEntity&quot; /&gt; nodes, this property returns the name of the entity.">Pour les nœuds <see langword="XmlEntity" />, cette propriété retourne le nom de l'entité.</returns>
    </member>
    <member name="P:System.Xml.XmlEntity.Name">
      <summary vsli:raw="Gets the name of the node.">Obtient le nom du nœud.</summary>
      <returns vsli:raw="The name of the entity.">Nom de l'entité.</returns>
    </member>
    <member name="P:System.Xml.XmlEntity.NodeType">
      <summary vsli:raw="Gets the type of the node.">Obtient le type du nœud.</summary>
      <returns vsli:raw="The node type. For &lt;see langword=&quot;XmlEntity&quot; /&gt; nodes, the value is XmlNodeType.Entity.">Type de nœud. Pour les nœuds <see langword="XmlEntity" />, la valeur est XmlNodeType.Entity.</returns>
    </member>
    <member name="P:System.Xml.XmlEntity.NotationName">
      <summary vsli:raw="Gets the name of the optional NDATA attribute on the entity declaration.">Obtient le nom de l'attribut NDATA facultatif sur la déclaration d'entité.</summary>
      <returns vsli:raw="The name of the NDATA attribute. If there is no NDATA, &lt;see langword=&quot;null&quot; /&gt; is returned.">Nom de l'attribut NDATA. S'il n'existe aucun NDATA, <see langword="null" /> est retournée.</returns>
    </member>
    <member name="P:System.Xml.XmlEntity.OuterXml">
      <summary vsli:raw="Gets the markup representing this node and all its children.">Obtient le balisage représentant ce nœud et tous ses enfants.</summary>
      <returns vsli:raw="For &lt;see langword=&quot;XmlEntity&quot; /&gt; nodes, String.Empty is returned.">Pour les nœuds <see langword="XmlEntity" />, String.Empty est retourné.</returns>
    </member>
    <member name="P:System.Xml.XmlEntity.PublicId">
      <summary vsli:raw="Gets the value of the public identifier on the entity declaration.">Obtient la valeur de l'identificateur public sur la déclaration d'entité.</summary>
      <returns vsli:raw="The public identifier on the entity. If there is no public identifier, &lt;see langword=&quot;null&quot; /&gt; is returned.">Identificateur public sur l'entité. S'il n'existe aucun identificateur public, <see langword="null" /> est alors retournée.</returns>
    </member>
    <member name="P:System.Xml.XmlEntity.SystemId">
      <summary vsli:raw="Gets the value of the system identifier on the entity declaration.">Obtient la valeur de l'identificateur système sur la déclaration d'entité.</summary>
      <returns vsli:raw="The system identifier on the entity. If there is no system identifier, &lt;see langword=&quot;null&quot; /&gt; is returned.">Identificateur système sur l'entité. S'il n'existe aucun identificateur système, <see langword="null" /> est alors retournée.</returns>
    </member>
    <member name="T:System.Xml.XmlEntityReference">
      <summary vsli:raw="Represents an entity reference node.">Représente un nœud de référence d'entité.</summary>
    </member>
    <member name="M:System.Xml.XmlEntityReference.#ctor(System.String,System.Xml.XmlDocument)">
      <summary vsli:raw="Initializes a new instance of the &lt;see cref=&quot;T:System.Xml.XmlEntityReference&quot; /&gt; class.">Initialise une nouvelle instance de la classe <see cref="T:System.Xml.XmlEntityReference" />.</summary>
      <param name="name" vsli:raw="The name of the entity reference; see the &lt;see cref=&quot;P:System.Xml.XmlEntityReference.Name&quot; /&gt; property.">Nom de la référence d'entité ; consultez la propriété <see cref="P:System.Xml.XmlEntityReference.Name" />.</param>
      <param name="doc" vsli:raw="The parent XML document.">Document XML parent.</param>
    </member>
    <member name="M:System.Xml.XmlEntityReference.CloneNode(System.Boolean)">
      <summary vsli:raw="Creates a duplicate of this node.">Crée un doublon de ce nœud.</summary>
      <param name="deep" vsli:raw="&lt;see langword=&quot;true&quot; /&gt; to recursively clone the subtree under the specified node; &lt;see langword=&quot;false&quot; /&gt; to clone only the node itself. For &lt;see langword=&quot;XmlEntityReference&quot; /&gt; nodes, this method always returns an entity reference node with no children. The replacement text is set when the node is inserted into a parent.">
        <see langword="true" /> pour cloner récursivement la sous-arborescence sous le nœud spécifié ; <see langword="false" /> pour cloner seulement le nœud lui-même. Pour les nœuds <see langword="XmlEntityReference" />, cette méthode retourne toujours un nœud de référence d'entité sans enfants. Le texte de remplacement est défini quand le nœud est inséré dans un parent.</param>
      <returns vsli:raw="The cloned node.">Nœud cloné.</returns>
    </member>
    <member name="M:System.Xml.XmlEntityReference.WriteContentTo(System.Xml.XmlWriter)">
      <summary vsli:raw="Saves all the children of the node to the specified &lt;see cref=&quot;T:System.Xml.XmlWriter&quot; /&gt;.">Enregistre tous les enfants du nœud dans l’élément <see cref="T:System.Xml.XmlWriter" /> spécifié.</summary>
      <param name="w" vsli:raw="The &lt;see langword=&quot;XmlWriter&quot; /&gt; to which you want to save.">L'élément <see langword="XmlWriter" /> dans lequel vous voulez enregistrer.</param>
    </member>
    <member name="M:System.Xml.XmlEntityReference.WriteTo(System.Xml.XmlWriter)">
      <summary vsli:raw="Saves the node to the specified &lt;see cref=&quot;T:System.Xml.XmlWriter&quot; /&gt;.">Enregistre le nœud dans le <see cref="T:System.Xml.XmlWriter" /> spécifié.</summary>
      <param name="w" vsli:raw="The &lt;see langword=&quot;XmlWriter&quot; /&gt; to which you want to save.">L'élément <see langword="XmlWriter" /> dans lequel vous voulez enregistrer.</param>
    </member>
    <member name="P:System.Xml.XmlEntityReference.BaseURI">
      <summary vsli:raw="Gets the base Uniform Resource Identifier (URI) of the current node.">Obtient l'URI (Uniform Resource Identifier) de base du nœud actuel.</summary>
      <returns vsli:raw="The location from which the node was loaded.">Emplacement à partir duquel le nœud a été chargé.</returns>
    </member>
    <member name="P:System.Xml.XmlEntityReference.IsReadOnly">
      <summary vsli:raw="Gets a value indicating whether the node is read-only.">Obtient une valeur indiquant si le nœud est en lecture seule.</summary>
      <returns vsli:raw="&lt;see langword=&quot;true&quot; /&gt; if the node is read-only; otherwise &lt;see langword=&quot;false&quot; /&gt;.  &#xA;  &#xA; Because &lt;see langword=&quot;XmlEntityReference&quot; /&gt; nodes are read-only, this property always returns &lt;see langword=&quot;true&quot; /&gt;.">
        <see langword="true" /> si le nœud est en lecture seule ; sinon, <see langword="false" />.  
  
Les nœuds <see langword="XmlEntityReference" /> étant en lecture seule, cette propriété retourne toujours <see langword="true" />.</returns>
    </member>
    <member name="P:System.Xml.XmlEntityReference.LocalName">
      <summary vsli:raw="Gets the local name of the node.">Obtient le nom local du nœud.</summary>
      <returns vsli:raw="For &lt;see langword=&quot;XmlEntityReference&quot; /&gt; nodes, this property returns the name of the entity referenced.">Pour les nœuds <see langword="XmlEntityReference" />, cette propriété retourne le nom de l'entité référencée.</returns>
    </member>
    <member name="P:System.Xml.XmlEntityReference.Name">
      <summary vsli:raw="Gets the name of the node.">Obtient le nom du nœud.</summary>
      <returns vsli:raw="The name of the entity referenced.">Nom de l'entité référencée.</returns>
    </member>
    <member name="P:System.Xml.XmlEntityReference.NodeType">
      <summary vsli:raw="Gets the type of the node.">Obtient le type du nœud.</summary>
      <returns vsli:raw="The node type. For &lt;see langword=&quot;XmlEntityReference&quot; /&gt; nodes, the value is XmlNodeType.EntityReference.">Type de nœud. Pour les nœuds <see langword="XmlEntityReference" />, la valeur est XmlNodeType.EntityReference.</returns>
    </member>
    <member name="P:System.Xml.XmlEntityReference.Value">
      <summary vsli:raw="Gets or sets the value of the node.">Obtient ou définit la valeur du nœud.</summary>
      <exception cref="T:System.ArgumentException" vsli:raw="Node is read-only.">Le nœud est en lecture seule.</exception>
      <exception cref="T:System.InvalidOperationException" vsli:raw="Setting the property.">Définition de la propriété.</exception>
      <returns vsli:raw="The value of the node. For &lt;see langword=&quot;XmlEntityReference&quot; /&gt; nodes, this property returns &lt;see langword=&quot;null&quot; /&gt;.">Valeur du nœud. Pour les nœuds <see langword="XmlEntityReference" />, cette propriété retourne <see langword="null" />.</returns>
    </member>
    <member name="T:System.Xml.XmlException">
      <summary vsli:raw="Returns detailed information about the last exception.">Retourne des informations détaillées sur la dernière exception.</summary>
    </member>
    <member name="M:System.Xml.XmlException.#ctor">
      <summary vsli:raw="Initializes a new instance of the &lt;see langword=&quot;XmlException&quot; /&gt; class.">Initialise une nouvelle instance de la classe <see langword="XmlException" />.</summary>
    </member>
    <member name="M:System.Xml.XmlException.#ctor(System.Runtime.Serialization.SerializationInfo,System.Runtime.Serialization.StreamingContext)">
      <summary vsli:raw="Initializes a new instance of the &lt;see langword=&quot;XmlException&quot; /&gt; class using the information in the &lt;see cref=&quot;T:System.Runtime.Serialization.SerializationInfo&quot; /&gt; and &lt;see cref=&quot;T:System.Runtime.Serialization.StreamingContext&quot; /&gt; objects.">Initialise une nouvelle instance de la classe <see langword="XmlException" /> à l'aide des informations contenues dans les objets <see cref="T:System.Runtime.Serialization.SerializationInfo" /> et <see cref="T:System.Runtime.Serialization.StreamingContext" />.</summary>
      <param name="info" vsli:raw="The &lt;see langword=&quot;SerializationInfo&quot; /&gt; object containing all the properties of an &lt;see langword=&quot;XmlException&quot; /&gt;.">Objet <see langword="SerializationInfo" /> contenant toutes les propriétés de <see langword="XmlException" />.</param>
      <param name="context" vsli:raw="The &lt;see langword=&quot;StreamingContext&quot; /&gt; object containing the context information.">Objet <see langword="StreamingContext" /> contenant les informations de contexte.</param>
    </member>
    <member name="M:System.Xml.XmlException.#ctor(System.String)">
      <summary vsli:raw="Initializes a new instance of the &lt;see langword=&quot;XmlException&quot; /&gt; class with a specified error message.">Initialise une nouvelle instance de la classe <see langword="XmlException" /> avec un message d'erreur spécifié.</summary>
      <param name="message" vsli:raw="The error description.">Description de l'erreur.</param>
    </member>
    <member name="M:System.Xml.XmlException.#ctor(System.String,System.Exception)">
      <summary vsli:raw="Initializes a new instance of the &lt;see langword=&quot;XmlException&quot; /&gt; class.">Initialise une nouvelle instance de la classe <see langword="XmlException" />.</summary>
      <param name="message" vsli:raw="The description of the error condition.">Description de la condition d'erreur.</param>
      <param name="innerException" vsli:raw="The &lt;see cref=&quot;T:System.Exception&quot; /&gt; that threw the &lt;see langword=&quot;XmlException&quot; /&gt;, if any. This value can be &lt;see langword=&quot;null&quot; /&gt;.">
        <see cref="T:System.Exception" /> qui a levé <see langword="XmlException" />, le cas échéant. Cette valeur peut être <see langword="null" />.</param>
    </member>
    <member name="M:System.Xml.XmlException.#ctor(System.String,System.Exception,System.Int32,System.Int32)">
      <summary vsli:raw="Initializes a new instance of the &lt;see langword=&quot;XmlException&quot; /&gt; class with the specified message, inner exception, line number, and line position.">Initialise une nouvelle instance de la classe <see langword="XmlException" /> avec le message, l'exception interne, le numéro de ligne et la position de ligne spécifiés.</summary>
      <param name="message" vsli:raw="The error description.">Description de l'erreur.</param>
      <param name="innerException" vsli:raw="The exception that is the cause of the current exception. This value can be &lt;see langword=&quot;null&quot; /&gt;.">Exception ayant provoqué l'exception actuelle. Cette valeur peut être <see langword="null" />.</param>
      <param name="lineNumber" vsli:raw="The line number indicating where the error occurred.">Numéro de la ligne indiquant l'endroit où l'erreur s'est produite.</param>
      <param name="linePosition" vsli:raw="The line position indicating where the error occurred.">Position de la ligne indiquant l'endroit où l'erreur s'est produite.</param>
    </member>
    <member name="M:System.Xml.XmlException.GetObjectData(System.Runtime.Serialization.SerializationInfo,System.Runtime.Serialization.StreamingContext)">
      <summary vsli:raw="Streams all the &lt;see langword=&quot;XmlException&quot; /&gt; properties into the &lt;see cref=&quot;T:System.Runtime.Serialization.SerializationInfo&quot; /&gt; class for the given &lt;see cref=&quot;T:System.Runtime.Serialization.StreamingContext&quot; /&gt;.">Transmet toutes les propriétés <see langword="XmlException" /> dans la classe <see cref="T:System.Runtime.Serialization.SerializationInfo" /> pour le <see cref="T:System.Runtime.Serialization.StreamingContext" /> donné.</summary>
      <param name="info" vsli:raw="The &lt;see langword=&quot;SerializationInfo&quot; /&gt; object.">Objet <see langword="SerializationInfo" />.</param>
      <param name="context" vsli:raw="The &lt;see langword=&quot;StreamingContext&quot; /&gt; object.">Objet <see langword="StreamingContext" />.</param>
    </member>
    <member name="P:System.Xml.XmlException.LineNumber">
      <summary vsli:raw="Gets the line number indicating where the error occurred. Line numbers start at 1.">Obtient le numéro de la ligne indiquant l'endroit où l'erreur s'est produite. La numérotation des lignes débute à 1.</summary>
      <returns vsli:raw="The line number indicating where the error occurred.">Numéro de la ligne indiquant l'endroit où l'erreur s'est produite.</returns>
    </member>
    <member name="P:System.Xml.XmlException.LinePosition">
      <summary vsli:raw="Gets the line position indicating where the error occurred. Line position starts at 1.">Obtient la position de la ligne indiquant l'endroit où l'erreur s'est produite. La position de la ligne commence à 1.</summary>
      <returns vsli:raw="The line position indicating where the error occurred.">Position de la ligne indiquant l'endroit où l'erreur s'est produite.</returns>
    </member>
    <member name="P:System.Xml.XmlException.Message">
      <summary vsli:raw="Gets a message describing the current exception.">Obtient un message décrivant l'exception actuelle.</summary>
      <returns vsli:raw="The error message that explains the reason for the exception.">Message d'erreur qui explique la raison de l'exception.</returns>
    </member>
    <member name="P:System.Xml.XmlException.SourceUri">
      <summary vsli:raw="Gets the location of the XML file.">Obtient l'emplacement du fichier XML.</summary>
      <returns vsli:raw="The source URI for the XML data. If there is no source URI, this property returns &lt;see langword=&quot;null&quot; /&gt;.">URI source des données XML. S'il n'y a aucun URI source, cette propriété retourne <see langword="null" />.</returns>
    </member>
    <member name="T:System.Xml.XmlImplementation">
      <summary vsli:raw="Defines the context for a set of &lt;see cref=&quot;T:System.Xml.XmlDocument&quot; /&gt; objects.">Définit le contexte pour un jeu d'objets <see cref="T:System.Xml.XmlDocument" />.</summary>
    </member>
    <member name="M:System.Xml.XmlImplementation.#ctor">
      <summary vsli:raw="Initializes a new instance of the &lt;see cref=&quot;T:System.Xml.XmlImplementation&quot; /&gt; class.">Initialise une nouvelle instance de la classe <see cref="T:System.Xml.XmlImplementation" />.</summary>
    </member>
    <member name="M:System.Xml.XmlImplementation.#ctor(System.Xml.XmlNameTable)">
      <summary vsli:raw="Initializes a new instance of the &lt;see cref=&quot;T:System.Xml.XmlImplementation&quot; /&gt; class with the &lt;see cref=&quot;T:System.Xml.XmlNameTable&quot; /&gt; specified.">Initialise une nouvelle instance de la classe <see cref="T:System.Xml.XmlImplementation" /> avec le <see cref="T:System.Xml.XmlNameTable" /> spécifié.</summary>
      <param name="nt" vsli:raw="An &lt;see cref=&quot;T:System.Xml.XmlNameTable&quot; /&gt; object.">Objet <see cref="T:System.Xml.XmlNameTable" />.</param>
    </member>
    <member name="M:System.Xml.XmlImplementation.CreateDocument">
      <summary vsli:raw="Creates a new &lt;see cref=&quot;T:System.Xml.XmlDocument&quot; /&gt;.">Crée un <see cref="T:System.Xml.XmlDocument" />.</summary>
      <returns vsli:raw="The new &lt;see langword=&quot;XmlDocument&quot; /&gt; object.">Nouvel objet <see langword="XmlDocument" /> .</returns>
    </member>
    <member name="M:System.Xml.XmlImplementation.HasFeature(System.String,System.String)">
      <summary vsli:raw="Tests if the Document Object Model (DOM) implementation implements a specific feature.">Teste si l'implémentation DOM (Document Object Model) implémente une fonctionnalité spécifique.</summary>
      <param name="strFeature" vsli:raw="The package name of the feature to test. This name is not case-sensitive.">Nom de package de la fonctionnalité à tester. Ce nom ne respecte pas la casse.</param>
      <param name="strVersion" vsli:raw="This is the version number of the package name to test. If the version is not specified (&lt;see langword=&quot;null&quot; /&gt;), supporting any version of the feature causes the method to return &lt;see langword=&quot;true&quot; /&gt;.">Ceci est le numéro de version du nom de package à tester. Si la version n'est pas spécifiée (<see langword="null" />), la prise en charge de n'importe quelle version de la fonctionnalité entraîne le retour de <see langword="true" /> par la méthode.</param>
      <returns vsli:raw="&lt;see langword=&quot;true&quot; /&gt; if the feature is implemented in the specified version; otherwise, &lt;see langword=&quot;false&quot; /&gt;.  &#xA;  &#xA; The following table shows the combinations that cause &lt;see langword=&quot;HasFeature&quot; /&gt; to return &lt;see langword=&quot;true&quot; /&gt;.  &#xA;  &#xA; &lt;list type=&quot;table&quot;&gt;&lt;listheader&gt;&lt;term&gt; strFeature&lt;/term&gt;&lt;description&gt; strVersion&lt;/description&gt;&lt;/listheader&gt;&lt;item&gt;&lt;term&gt; XML&lt;/term&gt;&lt;description&gt; 1.0&lt;/description&gt;&lt;/item&gt;&lt;item&gt;&lt;term&gt; XML&lt;/term&gt;&lt;description&gt; 2.0&lt;/description&gt;&lt;/item&gt;&lt;/list&gt;">
        <see langword="true" /> si la fonctionnalité est implémentée dans la version spécifiée ; sinon, <see langword="false" />.  
  
Le tableau suivant montre les combinaisons en présence desquelles <see langword="HasFeature" /> retourne <see langword="true" />.  
  
 <list type="table"><listheader><term> strFeature</term><description> strVersion</description></listheader><item><term> XML</term><description> 1.0</description></item><item><term> XML</term><description> 2.0</description></item></list></returns>
    </member>
    <member name="T:System.Xml.XmlLinkedNode">
      <summary vsli:raw="Gets the node immediately preceding or following this node.">Obtient le nœud qui précède ou suit immédiatement ce nœud.</summary>
    </member>
    <member name="P:System.Xml.XmlLinkedNode.NextSibling">
      <summary vsli:raw="Gets the node immediately following this node.">Obtient le nœud qui suit immédiatement ce nœud.</summary>
      <returns vsli:raw="The &lt;see cref=&quot;T:System.Xml.XmlNode&quot; /&gt; immediately following this node or &lt;see langword=&quot;null&quot; /&gt; if one does not exist.">
        <see cref="T:System.Xml.XmlNode" /> qui suit immédiatement ce nœud, ou <see langword="null" /> s'il n'y en a pas.</returns>
    </member>
    <member name="P:System.Xml.XmlLinkedNode.PreviousSibling">
      <summary vsli:raw="Gets the node immediately preceding this node.">Obtient le nœud qui précède immédiatement ce nœud.</summary>
      <returns vsli:raw="The preceding &lt;see cref=&quot;T:System.Xml.XmlNode&quot; /&gt; or &lt;see langword=&quot;null&quot; /&gt; if one does not exist.">
        <see cref="T:System.Xml.XmlNode" /> précédent ou <see langword="null" /> s'il n'y en a pas.</returns>
    </member>
    <member name="T:System.Xml.XmlNamedNodeMap">
      <summary vsli:raw="Represents a collection of nodes that can be accessed by name or index.">Représente une collection de nœuds qui sont accessibles par nom ou index.</summary>
    </member>
    <member name="M:System.Xml.XmlNamedNodeMap.GetEnumerator">
      <summary vsli:raw="Provides support for the &quot;foreach&quot; style iteration over the collection of nodes in the &lt;see langword=&quot;XmlNamedNodeMap&quot; /&gt;.">Fournit une prise en charge de l'itération de style « foreach » sur la collection de nœuds de <see langword="XmlNamedNodeMap" />.</summary>
      <returns vsli:raw="An enumerator object.">Objet énumérateur.</returns>
    </member>
    <member name="M:System.Xml.XmlNamedNodeMap.GetNamedItem(System.String)">
      <summary vsli:raw="Retrieves an &lt;see cref=&quot;T:System.Xml.XmlNode&quot; /&gt; specified by name.">Récupère <see cref="T:System.Xml.XmlNode" /> spécifié par son nom.</summary>
      <param name="name" vsli:raw="The qualified name of the node to retrieve. It is matched against the &lt;see cref=&quot;P:System.Xml.XmlNode.Name&quot; /&gt; property of the matching node.">Nom qualifié du nœud à récupérer. Il est comparé à la propriété <see cref="P:System.Xml.XmlNode.Name" /> du nœud correspondant.</param>
      <returns vsli:raw="An &lt;see langword=&quot;XmlNode&quot; /&gt; with the specified name or &lt;see langword=&quot;null&quot; /&gt; if a matching node is not found.">
        <see langword="XmlNode" /> avec le nom spécifié ou <see langword="null" /> si aucun nœud correspondant n'est trouvé.</returns>
    </member>
    <member name="M:System.Xml.XmlNamedNodeMap.GetNamedItem(System.String,System.String)">
      <summary vsli:raw="Retrieves a node with the matching &lt;see cref=&quot;P:System.Xml.XmlNode.LocalName&quot; /&gt; and &lt;see cref=&quot;P:System.Xml.XmlNode.NamespaceURI&quot; /&gt;.">Récupère un nœud avec les <see cref="P:System.Xml.XmlNode.LocalName" /> et <see cref="P:System.Xml.XmlNode.NamespaceURI" /> correspondants.</summary>
      <param name="localName" vsli:raw="The local name of the node to retrieve.">Nom local du nœud à récupérer.</param>
      <param name="namespaceURI" vsli:raw="The namespace Uniform Resource Identifier (URI) of the node to retrieve.">URI (Uniform Resource Identifier) de l'espace de noms du nœud à récupérer.</param>
      <returns vsli:raw="An &lt;see cref=&quot;T:System.Xml.XmlNode&quot; /&gt; with the matching local name and namespace URI or &lt;see langword=&quot;null&quot; /&gt; if a matching node was not found.">
        <see cref="T:System.Xml.XmlNode" /> avec le nom local et l'URI de l'espace de noms correspondants ou <see langword="null" /> si aucun nœud correspondant n'est trouvé.</returns>
    </member>
    <member name="M:System.Xml.XmlNamedNodeMap.Item(System.Int32)">
      <summary vsli:raw="Retrieves the node at the specified index in the &lt;see langword=&quot;XmlNamedNodeMap&quot; /&gt;.">Récupère le nœud à l'index spécifié dans <see langword="XmlNamedNodeMap" />.</summary>
      <param name="index" vsli:raw="The index position of the node to retrieve from the &lt;see langword=&quot;XmlNamedNodeMap&quot; /&gt;. The index is zero-based; therefore, the index of the first node is 0 and the index of the last node is &lt;see cref=&quot;P:System.Xml.XmlNamedNodeMap.Count&quot; /&gt; -1.">Position de l'index du nœud à récupérer de <see langword="XmlNamedNodeMap" />. L'index est de base zéro ; par conséquent, l'index du premier nœud est 0 et l'index du dernier nœud est <see cref="P:System.Xml.XmlNamedNodeMap.Count" /> -1.</param>
      <returns vsli:raw="The &lt;see cref=&quot;T:System.Xml.XmlNode&quot; /&gt; at the specified index. If &lt;paramref name=&quot;index&quot; /&gt; is less than 0 or greater than or equal to the &lt;see cref=&quot;P:System.Xml.XmlNamedNodeMap.Count&quot; /&gt; property, &lt;see langword=&quot;null&quot; /&gt; is returned.">
        <see cref="T:System.Xml.XmlNode" /> au niveau de l'index spécifié. Si <paramref name="index" /> est inférieur à 0, ou encore supérieur ou égal à la propriété <see cref="P:System.Xml.XmlNamedNodeMap.Count" />, <see langword="null" /> est retournée.</returns>
    </member>
    <member name="M:System.Xml.XmlNamedNodeMap.RemoveNamedItem(System.String)">
      <summary vsli:raw="Removes the node from the &lt;see langword=&quot;XmlNamedNodeMap&quot; /&gt;.">Supprime le nœud de <see langword="XmlNamedNodeMap" />.</summary>
      <param name="name" vsli:raw="The qualified name of the node to remove. The name is matched against the &lt;see cref=&quot;P:System.Xml.XmlNode.Name&quot; /&gt; property of the matching node.">Nom qualifié du nœud à supprimer. Ce nom est comparé à la propriété <see cref="P:System.Xml.XmlNode.Name" /> du nœud correspondant.</param>
      <returns vsli:raw="The &lt;see langword=&quot;XmlNode&quot; /&gt; removed from this &lt;see langword=&quot;XmlNamedNodeMap&quot; /&gt; or &lt;see langword=&quot;null&quot; /&gt; if a matching node was not found.">
        <see langword="XmlNode" /> supprimé de <see langword="XmlNamedNodeMap" /> ou <see langword="null" /> si aucun nœud correspondant n'est trouvé.</returns>
    </member>
    <member name="M:System.Xml.XmlNamedNodeMap.RemoveNamedItem(System.String,System.String)">
      <summary vsli:raw="Removes a node with the matching &lt;see cref=&quot;P:System.Xml.XmlNode.LocalName&quot; /&gt; and &lt;see cref=&quot;P:System.Xml.XmlNode.NamespaceURI&quot; /&gt;.">Supprime un nœud avec les <see cref="P:System.Xml.XmlNode.LocalName" /> et <see cref="P:System.Xml.XmlNode.NamespaceURI" /> correspondants.</summary>
      <param name="localName" vsli:raw="The local name of the node to remove.">Nom local du nœud à supprimer.</param>
      <param name="namespaceURI" vsli:raw="The namespace URI of the node to remove.">URI de l'espace de noms du nœud à supprimer.</param>
      <returns vsli:raw="The &lt;see cref=&quot;T:System.Xml.XmlNode&quot; /&gt; removed or &lt;see langword=&quot;null&quot; /&gt; if a matching node was not found.">
        <see cref="T:System.Xml.XmlNode" /> supprimé ou <see langword="null" /> si aucun nœud correspondant n'est trouvé.</returns>
    </member>
    <member name="M:System.Xml.XmlNamedNodeMap.SetNamedItem(System.Xml.XmlNode)">
      <summary vsli:raw="Adds an &lt;see cref=&quot;T:System.Xml.XmlNode&quot; /&gt; using its &lt;see cref=&quot;P:System.Xml.XmlNode.Name&quot; /&gt; property.">Ajoute un <see cref="T:System.Xml.XmlNode" /> à l'aide de sa propriété <see cref="P:System.Xml.XmlNode.Name" />.</summary>
      <param name="node" vsli:raw="An &lt;see langword=&quot;XmlNode&quot; /&gt; to store in the &lt;see langword=&quot;XmlNamedNodeMap&quot; /&gt;. If a node with that name is already present in the map, it is replaced by the new one.">
        <see langword="XmlNode" /> à stocker dans <see langword="XmlNamedNodeMap" />. Si un nœud portant ce nom est déjà présent dans la table, il est remplacé par le nouveau nœud.</param>
      <exception cref="T:System.ArgumentException" vsli:raw="The &lt;paramref name=&quot;node&quot; /&gt; was created from a different &lt;see cref=&quot;T:System.Xml.XmlDocument&quot; /&gt; than the one that created the &lt;see langword=&quot;XmlNamedNodeMap&quot; /&gt;; or the &lt;see langword=&quot;XmlNamedNodeMap&quot; /&gt; is read-only.">
        <paramref name="node" /> a été créé à partir d'un <see cref="T:System.Xml.XmlDocument" /> différent de celui qui a créé <see langword="XmlNamedNodeMap" />, ou bien <see langword="XmlNamedNodeMap" /> est en lecture seule.</exception>
      <returns vsli:raw="If the &lt;paramref name=&quot;node&quot; /&gt; replaces an existing node with the same name, the old node is returned; otherwise, &lt;see langword=&quot;null&quot; /&gt; is returned.">Si <paramref name="node" /> remplace un nœud existant portant le même nom, l'ancien nœud est retourné ; sinon, <see langword="null" /> est retournée.</returns>
    </member>
    <member name="P:System.Xml.XmlNamedNodeMap.Count">
      <summary vsli:raw="Gets the number of nodes in the &lt;see langword=&quot;XmlNamedNodeMap&quot; /&gt;.">Obtient le nombre de nœuds dans le <see langword="XmlNamedNodeMap" />.</summary>
      <returns vsli:raw="The number of nodes.">Nombre de nœuds.</returns>
    </member>
    <member name="T:System.Xml.XmlNamespaceManager">
      <summary vsli:raw="Resolves, adds, and removes namespaces to a collection and provides scope management for these namespaces.">Résout des espaces de noms dans une collection, ajoute des espaces de noms à une collection, en supprime et gère la portée de ces espaces de noms.</summary>
    </member>
    <member name="M:System.Xml.XmlNamespaceManager.#ctor(System.Xml.XmlNameTable)">
      <summary vsli:raw="Initializes a new instance of the &lt;see cref=&quot;T:System.Xml.XmlNamespaceManager&quot; /&gt; class with the specified &lt;see cref=&quot;T:System.Xml.XmlNameTable&quot; /&gt;.">Initialise une nouvelle instance de la classe <see cref="T:System.Xml.XmlNamespaceManager" /> avec le <see cref="T:System.Xml.XmlNameTable" /> spécifié.</summary>
      <param name="nameTable" vsli:raw="The &lt;see cref=&quot;T:System.Xml.XmlNameTable&quot; /&gt; to use.">
        <see cref="T:System.Xml.XmlNameTable" /> à utiliser.</param>
      <exception cref="T:System.NullReferenceException" vsli:raw="&lt;see langword=&quot;null&quot; /&gt; is passed to the constructor.">
        <see langword="null" /> est passée au constructeur.</exception>
    </member>
    <member name="M:System.Xml.XmlNamespaceManager.AddNamespace(System.String,System.String)">
      <summary vsli:raw="Adds the given namespace to the collection.">Ajoute l’espace de noms spécifié à la collection.</summary>
      <param name="prefix" vsli:raw="The prefix to associate with the namespace being added. Use String.Empty to add a default namespace.  &#xA;  &#xA; Note If the &lt;see cref=&quot;T:System.Xml.XmlNamespaceManager&quot; /&gt; will be used for resolving namespaces in an XML Path Language (XPath) expression, a prefix must be specified. If an XPath expression does not include a prefix, it is assumed that the namespace Uniform Resource Identifier (URI) is the empty namespace. For more information about XPath expressions and the &lt;see cref=&quot;T:System.Xml.XmlNamespaceManager&quot; /&gt;, refer to the &lt;see cref=&quot;M:System.Xml.XmlNode.SelectNodes(System.String)&quot; /&gt; and &lt;see cref=&quot;M:System.Xml.XPath.XPathExpression.SetContext(System.Xml.XmlNamespaceManager)&quot; /&gt; methods.">Préfixe à associer à l'espace de noms ajouté. Utilisez String.Empty pour ajouter un espace de noms par défaut.  
  
 Remarque Si <see cref="T:System.Xml.XmlNamespaceManager" /> est utilisé pour la résolution des espaces de noms dans une expression XPath (XML Path Language), un préfixe doit être spécifié. Si une expression XPath n’inclut pas de préfixe, l’URI (Uniform Resource Identifier) d’espace de noms est supposé être un espace de noms vide. Pour plus d'informations sur les expressions XPath et <see cref="T:System.Xml.XmlNamespaceManager" />, reportez-vous aux méthodes <see cref="M:System.Xml.XmlNode.SelectNodes(System.String)" /> et <see cref="M:System.Xml.XPath.XPathExpression.SetContext(System.Xml.XmlNamespaceManager)" />.</param>
      <param name="uri" vsli:raw="The namespace to add.">Espace de noms à ajouter.</param>
      <exception cref="T:System.ArgumentException" vsli:raw="The value for &lt;paramref name=&quot;prefix&quot; /&gt; is &quot;xml&quot; or &quot;xmlns&quot;.">La valeur de <paramref name="prefix" /> est « xml » ou « xmlns ».</exception>
      <exception cref="T:System.ArgumentNullException" vsli:raw="The value for &lt;paramref name=&quot;prefix&quot; /&gt; or &lt;paramref name=&quot;uri&quot; /&gt; is &lt;see langword=&quot;null&quot; /&gt;.">La valeur de <paramref name="prefix" /> ou de <paramref name="uri" /> est <see langword="null" />.</exception>
    </member>
    <member name="M:System.Xml.XmlNamespaceManager.GetEnumerator">
      <summary vsli:raw="Returns an enumerator to use to iterate through the namespaces in the &lt;see cref=&quot;T:System.Xml.XmlNamespaceManager&quot; /&gt;.">Retourne un énumérateur qui peut être utilisé pour itérer au sein des espaces de noms de <see cref="T:System.Xml.XmlNamespaceManager" />.</summary>
      <returns vsli:raw="An &lt;see cref=&quot;T:System.Collections.IEnumerator&quot; /&gt; containing the prefixes stored by the &lt;see cref=&quot;T:System.Xml.XmlNamespaceManager&quot; /&gt;.">
        <see cref="T:System.Collections.IEnumerator" /> contenant les préfixes stockés par <see cref="T:System.Xml.XmlNamespaceManager" />.</returns>
    </member>
    <member name="M:System.Xml.XmlNamespaceManager.GetNamespacesInScope(System.Xml.XmlNamespaceScope)">
      <summary vsli:raw="Gets a collection of namespace names keyed by prefix which can be used to enumerate the namespaces currently in scope.">Obtient une collection de noms d'espace de noms indexés par préfixe qui peut être utilisée pour énumérer les espaces de noms figurant actuellement dans la portée.</summary>
      <param name="scope" vsli:raw="An enumeration value that specifies the type of namespace nodes to return.">Valeur d'énumération qui spécifie le type de nœuds d'espace de noms à retourner.</param>
      <returns vsli:raw="A collection of namespace and prefix pairs currently in scope.">Collection de paires d'espace de noms et préfixe actuellement dans la portée.</returns>
    </member>
    <member name="M:System.Xml.XmlNamespaceManager.HasNamespace(System.String)">
      <summary vsli:raw="Gets a value indicating whether the supplied prefix has a namespace defined for the current pushed scope.">Obtient une valeur indiquant si le préfixe fourni possède un espace de noms défini pour la portée actuelle faisant l'objet d'un push.</summary>
      <param name="prefix" vsli:raw="The prefix of the namespace you want to find.">Préfixe de l'espace de noms que vous souhaitez rechercher.</param>
      <returns vsli:raw="&lt;see langword=&quot;true&quot; /&gt; if there is a namespace defined; otherwise, &lt;see langword=&quot;false&quot; /&gt;.">
        <see langword="true" /> si un espace de noms est défini ; sinon, <see langword="false" />.</returns>
    </member>
    <member name="M:System.Xml.XmlNamespaceManager.LookupNamespace(System.String)">
      <summary vsli:raw="Gets the namespace URI for the specified prefix.">Obtient l'URI de l'espace de noms du préfixe spécifié.</summary>
      <param name="prefix" vsli:raw="The prefix whose namespace URI you want to resolve. To match the default namespace, pass String.Empty.">Préfixe dont vous souhaitez résoudre l'URI de l'espace de noms. Pour mettre en correspondance l'espace de noms par défaut, passez String.Empty.</param>
      <returns vsli:raw="The namespace URI for &lt;paramref name=&quot;prefix&quot; /&gt; or &lt;see langword=&quot;null&quot; /&gt; if there is no mapped namespace. The returned string is atomized.  &#xA;  &#xA; For more information on atomized strings, see the &lt;see cref=&quot;T:System.Xml.XmlNameTable&quot; /&gt; class.">URI de l’espace de noms pour <paramref name="prefix" /> ou <see langword="null" /> en l’absence d’un espace de noms mappé. La chaîne retournée est atomisée.  
  
Pour plus d'informations sur les chaînes atomisées, consultez la classe <see cref="T:System.Xml.XmlNameTable" />.</returns>
    </member>
    <member name="M:System.Xml.XmlNamespaceManager.LookupPrefix(System.String)">
      <summary vsli:raw="Finds the prefix declared for the given namespace URI.">Recherche le préfixe déclaré pour l'URI de l'espace de noms spécifié.</summary>
      <param name="uri" vsli:raw="The namespace to resolve for the prefix.">Espace de noms à résoudre pour le préfixe.</param>
      <returns vsli:raw="The matching prefix. If there is no mapped prefix, the method returns String.Empty. If a null value is supplied, then &lt;see langword=&quot;null&quot; /&gt; is returned.">Préfixe correspondant. S'il n'y a aucun préfixe mappé, la méthode retourne String.Empty. Si une valeur nulle est fournie, <see langword="null" /> est alors retourné.</returns>
    </member>
    <member name="M:System.Xml.XmlNamespaceManager.PopScope">
      <summary vsli:raw="Pops a namespace scope off the stack.">Dépile une portée espace de noms de la pile.</summary>
      <returns vsli:raw="&lt;see langword=&quot;true&quot; /&gt; if there are namespace scopes left on the stack; &lt;see langword=&quot;false&quot; /&gt; if there are no more namespaces to pop.">
        <see langword="true" /> s'il reste des portées espaces de noms sur la pile ; <see langword="false" /> s'il n'existe plus d'espaces de noms à dépiler.</returns>
    </member>
    <member name="M:System.Xml.XmlNamespaceManager.PushScope">
      <summary vsli:raw="Pushes a namespace scope onto the stack.">Exécute un push d'une portée espace de noms dans la pile.</summary>
    </member>
    <member name="M:System.Xml.XmlNamespaceManager.RemoveNamespace(System.String,System.String)">
      <summary vsli:raw="Removes the given namespace for the given prefix.">Supprime l'espace de noms indiqué pour le préfixe spécifié.</summary>
      <param name="prefix" vsli:raw="The prefix for the namespace.">Préfixe de l'espace de noms.</param>
      <param name="uri" vsli:raw="The namespace to remove for the given prefix. The namespace removed is from the current namespace scope. Namespaces outside the current scope are ignored.">Espace de noms à supprimer pour le préfixe spécifié. L'espace de noms supprimé provient de la portée espace de noms en cours. Les espaces de noms situés en dehors de la portée actuelle sont ignorés.</param>
      <exception cref="T:System.ArgumentNullException" vsli:raw="The value of &lt;paramref name=&quot;prefix&quot; /&gt; or &lt;paramref name=&quot;uri&quot; /&gt; is &lt;see langword=&quot;null&quot; /&gt;.">La valeur de <paramref name="prefix" /> ou <paramref name="uri" /> est <see langword="null" />.</exception>
    </member>
    <member name="P:System.Xml.XmlNamespaceManager.DefaultNamespace">
      <summary vsli:raw="Gets the namespace URI for the default namespace.">Obtient l'URI de l'espace de noms de l'espace de noms par défaut.</summary>
      <returns vsli:raw="The namespace URI for the default namespace, or an empty string if there is no default namespace.">L’URI d’espace de noms pour l’espace de noms par défaut, ou une chaîne vide s’il n’y a pas d’espace de noms par défaut.</returns>
    </member>
    <member name="P:System.Xml.XmlNamespaceManager.NameTable">
      <summary vsli:raw="Gets the &lt;see cref=&quot;T:System.Xml.XmlNameTable&quot; /&gt; associated with this object.">Obtient l'objet <see cref="T:System.Xml.XmlNameTable" /> associé à cet objet.</summary>
      <returns vsli:raw="The &lt;see cref=&quot;T:System.Xml.XmlNameTable&quot; /&gt; used by this object.">
        <see cref="T:System.Xml.XmlNameTable" /> utilisé par cet objet.</returns>
    </member>
    <member name="T:System.Xml.XmlNamespaceScope">
      <summary vsli:raw="Defines the namespace scope.">Définit la portée des espaces de noms.</summary>
    </member>
    <member name="F:System.Xml.XmlNamespaceScope.All">
      <summary vsli:raw="All namespaces defined in the scope of the current node. This includes the xmlns:xml namespace which is always declared implicitly. The order of the namespaces returned is not defined.">Tous les espaces de noms définis dans la portée du nœud actuel. Ceci inclut l'espace de noms xmlns:xml, qui est toujours déclaré implicitement. L'ordre des espaces de noms retournés n'est pas défini.</summary>
    </member>
    <member name="F:System.Xml.XmlNamespaceScope.ExcludeXml">
      <summary vsli:raw="All namespaces defined in the scope of the current node, excluding the xmlns:xml namespace, which is always declared implicitly. The order of the namespaces returned is not defined.">Tous les espaces de noms définis dans la portée du nœud actuel, à l'exclusion de l'espace de noms xmlns:xml, qui est toujours déclaré implicitement. L'ordre des espaces de noms retournés n'est pas défini.</summary>
    </member>
    <member name="F:System.Xml.XmlNamespaceScope.Local">
      <summary vsli:raw="All namespaces that are defined locally at the current node.">Tous les espaces de noms qui sont définis localement sur le nœud actuel.</summary>
    </member>
    <member name="T:System.Xml.XmlNameTable">
      <summary vsli:raw="Table of atomized string objects.">Table d'objets de chaînes atomisées.</summary>
    </member>
    <member name="M:System.Xml.XmlNameTable.#ctor">
      <summary vsli:raw="Initializes a new instance of the &lt;see cref=&quot;T:System.Xml.XmlNameTable&quot; /&gt; class.">Initialise une nouvelle instance de la classe <see cref="T:System.Xml.XmlNameTable" />.</summary>
    </member>
    <member name="M:System.Xml.XmlNameTable.Add(System.Char[],System.Int32,System.Int32)">
      <summary vsli:raw="When overridden in a derived class, atomizes the specified string and adds it to the &lt;see langword=&quot;XmlNameTable&quot; /&gt;.">En cas de substitution dans une classe dérivée, atomise la chaîne spécifiée et l'ajoute à <see langword="XmlNameTable" />.</summary>
      <param name="array" vsli:raw="The character array containing the name to add.">Tableau de caractères contenant le nom à ajouter.</param>
      <param name="offset" vsli:raw="Zero-based index into the array specifying the first character of the name.">Index de base zéro dans le tableau spécifiant le premier caractère du nom.</param>
      <param name="length" vsli:raw="The number of characters in the name.">Nombre de caractères dans le nom.</param>
      <exception cref="T:System.IndexOutOfRangeException" vsli:raw="0 &amp;gt; &lt;paramref name=&quot;offset&quot; /&gt;  &#xA;  &#xA; -or-  &#xA;  &#xA; &lt;paramref name=&quot;offset&quot; /&gt; &amp;gt;= &lt;paramref name=&quot;array&quot; /&gt;.Length  &#xA;  &#xA; -or-  &#xA;  &#xA; &lt;paramref name=&quot;length&quot; /&gt; &amp;gt; &lt;paramref name=&quot;array&quot; /&gt;.Length  &#xA;  &#xA; The above conditions do not cause an exception to be thrown if &lt;paramref name=&quot;length&quot; /&gt; =0.">0 &gt; <paramref name="offset" />  
  
- ou - 
 <paramref name="offset" /> &gt;= <paramref name="array" />.Length 
- ou - 
 <paramref name="length" /> &gt; <paramref name="array" />.Length 
Les conditions ci-dessus n'entraînent pas la levée d'une exception si <paramref name="length" />=0.</exception>
      <exception cref="T:System.ArgumentOutOfRangeException" vsli:raw="&lt;paramref name=&quot;length&quot; /&gt; &amp;lt; 0.">
        <paramref name="length" /> &lt; 0.</exception>
      <returns vsli:raw="The new atomized string or the existing one if it already exists. If length is zero, String.Empty is returned.">Nouvelle chaîne atomisée ou, le cas échéant, la chaîne existante. Si la longueur a la valeur zéro, String.Empty est retourné.</returns>
    </member>
    <member name="M:System.Xml.XmlNameTable.Add(System.String)">
      <summary vsli:raw="When overridden in a derived class, atomizes the specified string and adds it to the &lt;see langword=&quot;XmlNameTable&quot; /&gt;.">En cas de substitution dans une classe dérivée, atomise la chaîne spécifiée et l'ajoute à <see langword="XmlNameTable" />.</summary>
      <param name="array" vsli:raw="The name to add.">Nom à ajouter.</param>
      <exception cref="T:System.ArgumentNullException" vsli:raw="&lt;paramref name=&quot;array&quot; /&gt; is &lt;see langword=&quot;null&quot; /&gt;.">
        <paramref name="array" /> a la valeur <see langword="null" />.</exception>
      <returns vsli:raw="The new atomized string or the existing one if it already exists.">Nouvelle chaîne atomisée ou, le cas échéant, la chaîne existante.</returns>
    </member>
    <member name="M:System.Xml.XmlNameTable.Get(System.Char[],System.Int32,System.Int32)">
      <summary vsli:raw="When overridden in a derived class, gets the atomized string containing the same characters as the specified range of characters in the given array.">En cas de substitution dans une classe dérivée, obtient la chaîne atomisée contenant les mêmes caractères que la plage de caractères spécifiée dans le tableau donné.</summary>
      <param name="array" vsli:raw="The character array containing the name to look up.">Tableau de caractères contenant le nom à rechercher.</param>
      <param name="offset" vsli:raw="The zero-based index into the array specifying the first character of the name.">Index de base zéro dans le tableau spécifiant le premier caractère du nom.</param>
      <param name="length" vsli:raw="The number of characters in the name.">Nombre de caractères dans le nom.</param>
      <exception cref="T:System.IndexOutOfRangeException" vsli:raw="0 &amp;gt; &lt;paramref name=&quot;offset&quot; /&gt;  &#xA;  &#xA; -or-  &#xA;  &#xA; &lt;paramref name=&quot;offset&quot; /&gt; &amp;gt;= &lt;paramref name=&quot;array&quot; /&gt;.Length  &#xA;  &#xA; -or-  &#xA;  &#xA; &lt;paramref name=&quot;length&quot; /&gt; &amp;gt; &lt;paramref name=&quot;array&quot; /&gt;.Length  &#xA;  &#xA; The above conditions do not cause an exception to be thrown if &lt;paramref name=&quot;length&quot; /&gt; =0.">0 &gt; <paramref name="offset" />  
  
- ou - 
 <paramref name="offset" /> &gt;= <paramref name="array" />.Length 
- ou - 
 <paramref name="length" /> &gt; <paramref name="array" />.Length 
Les conditions ci-dessus n'entraînent pas la levée d'une exception si <paramref name="length" />=0.</exception>
      <exception cref="T:System.ArgumentOutOfRangeException" vsli:raw="&lt;paramref name=&quot;length&quot; /&gt; &amp;lt; 0.">
        <paramref name="length" /> &lt; 0.</exception>
      <returns vsli:raw="The atomized string or &lt;see langword=&quot;null&quot; /&gt; if the string has not already been atomized. If &lt;paramref name=&quot;length&quot; /&gt; is zero, String.Empty is returned.">Chaîne atomisée ou <see langword="null" /> si la chaîne n'a pas encore été atomisée. Si <paramref name="length" /> a la valeur zéro, String.Empty est retourné.</returns>
    </member>
    <member name="M:System.Xml.XmlNameTable.Get(System.String)">
      <summary vsli:raw="When overridden in a derived class, gets the atomized string containing the same value as the specified string.">En cas de substitution dans une classe dérivée, obtient la chaîne atomisée contenant la même valeur que la chaîne spécifiée.</summary>
      <param name="array" vsli:raw="The name to look up.">Nom à rechercher.</param>
      <exception cref="T:System.ArgumentNullException" vsli:raw="&lt;paramref name=&quot;array&quot; /&gt; is &lt;see langword=&quot;null&quot; /&gt;.">
        <paramref name="array" /> a la valeur <see langword="null" />.</exception>
      <returns vsli:raw="The atomized string or &lt;see langword=&quot;null&quot; /&gt; if the string has not already been atomized.">Chaîne atomisée ou <see langword="null" /> si la chaîne n'a pas encore été atomisée.</returns>
    </member>
    <member name="T:System.Xml.XmlNode">
      <summary vsli:raw="Represents a single node in the XML document.">Représente un nœud unique dans le document XML.</summary>
    </member>
    <member name="M:System.Xml.XmlNode.AppendChild(System.Xml.XmlNode)">
      <summary vsli:raw="Adds the specified node to the end of the list of child nodes, of this node.">Ajoute le nœud spécifié à la fin de la liste des nœuds enfants de ce nœud.</summary>
      <param name="newChild" vsli:raw="The node to add. All the contents of the node to be added are moved into the specified location.">Le nœud à ajouter. Tout le contenu du nœud à ajouter est déplacé dans l'emplacement spécifié.</param>
      <exception cref="T:System.InvalidOperationException" vsli:raw="This node is of a type that does not allow child nodes of the type of the &lt;paramref name=&quot;newChild&quot; /&gt; node.  &#xA;  &#xA; The &lt;paramref name=&quot;newChild&quot; /&gt; is an ancestor of this node.">Le type de ce nœud n'autorise pas les nœuds enfants possédant le type de nœud <paramref name="newChild" />.  
  
<paramref name="newChild" /> est un ancêtre de ce nœud.</exception>
      <exception cref="T:System.ArgumentException" vsli:raw="The &lt;paramref name=&quot;newChild&quot; /&gt; was created from a different document than the one that created this node.  &#xA;  &#xA; This node is read-only.">
        <paramref name="newChild" /> a été créé à partir d'un document différent de celui qui a créé ce nœud.  
  
Ce nœud est en lecture seule.</exception>
      <returns vsli:raw="The node added.">Nœud ajouté.</returns>
    </member>
    <member name="M:System.Xml.XmlNode.Clone">
      <summary vsli:raw="Creates a duplicate of this node.">Crée un doublon de ce nœud.</summary>
      <returns vsli:raw="The cloned node.">Nœud cloné.</returns>
    </member>
    <member name="M:System.Xml.XmlNode.CloneNode(System.Boolean)">
      <summary vsli:raw="Creates a duplicate of the node, when overridden in a derived class.">Crée un doublon du nœud en cas de substitution dans une classe dérivée.</summary>
      <param name="deep" vsli:raw="&lt;see langword=&quot;true&quot; /&gt; to recursively clone the subtree under the specified node; &lt;see langword=&quot;false&quot; /&gt; to clone only the node itself.">
        <see langword="true" /> pour cloner récursivement la sous-arborescence sous le nœud spécifié ; <see langword="false" /> pour cloner seulement le nœud lui-même.</param>
      <exception cref="T:System.InvalidOperationException" vsli:raw="Calling this method on a node type that cannot be cloned.">Appel de cette méthode sur un type de nœud ne pouvant pas être cloné.</exception>
      <returns vsli:raw="The cloned node.">Nœud cloné.</returns>
    </member>
    <member name="M:System.Xml.XmlNode.CreateNavigator">
      <summary vsli:raw="Creates an &lt;see cref=&quot;T:System.Xml.XPath.XPathNavigator&quot; /&gt; for navigating this object.">Crée <see cref="T:System.Xml.XPath.XPathNavigator" /> pour la navigation dans cet objet.</summary>
      <returns vsli:raw="An &lt;see langword=&quot;XPathNavigator&quot; /&gt; object used to navigate the node. The &lt;see langword=&quot;XPathNavigator&quot; /&gt; is positioned on the node from which the method was called. It is not positioned on the root of the document.">Un objet <see langword="XPathNavigator" /> utilisé pour naviguer dans le nœud. <see langword="XPathNavigator" /> est placé sur le nœud à partir duquel la méthode a été appelée. Il n'est pas placé sur la racine du document.</returns>
    </member>
    <member name="M:System.Xml.XmlNode.GetEnumerator">
      <summary vsli:raw="Gets an enumerator that iterates through the child nodes in the current node.">Obtient un énumérateur qui effectue les itérations au sein des nœuds enfants du nœud en cours.</summary>
      <returns vsli:raw="An &lt;see cref=&quot;T:System.Collections.IEnumerator&quot; /&gt; object that can be used to iterate through the child nodes in the current node.">Objet <see cref="T:System.Collections.IEnumerator" /> qui permet d'effectuer des itérations au sein des nœuds enfants du nœud en cours.</returns>
    </member>
    <member name="M:System.Xml.XmlNode.GetNamespaceOfPrefix(System.String)">
      <summary vsli:raw="Looks up the closest xmlns declaration for the given prefix that is in scope for the current node and returns the namespace URI in the declaration.">Recherche la déclaration xmlns la plus proche du préfixe spécifié qui se trouve dans la portée du nœud actuel, puis retourne l’URI de l’espace de noms dans la déclaration.</summary>
      <param name="prefix" vsli:raw="The prefix whose namespace URI you want to find.">Préfixe dont vous recherchez l'URI d'espace de noms.</param>
      <returns vsli:raw="The namespace URI of the specified prefix.">URI de l'espace de noms du préfixe spécifié.</returns>
    </member>
    <member name="M:System.Xml.XmlNode.GetPrefixOfNamespace(System.String)">
      <summary vsli:raw="Looks up the closest xmlns declaration for the given namespace URI that is in scope for the current node and returns the prefix defined in that declaration.">Recherche la déclaration xmlns la plus proche de l’URI de l’espace de noms spécifié qui se trouve dans la portée du nœud actuel, puis retourne le préfixe défini dans cette déclaration.</summary>
      <param name="namespaceURI" vsli:raw="The namespace URI whose prefix you want to find.">URI de l'espace de noms dont vous recherchez le préfixe.</param>
      <returns vsli:raw="The prefix for the specified namespace URI.">Préfixe de l'URI de l'espace de noms spécifié.</returns>
    </member>
    <member name="M:System.Xml.XmlNode.InsertAfter(System.Xml.XmlNode,System.Xml.XmlNode)">
      <summary vsli:raw="Inserts the specified node immediately after the specified reference node.">Insère le nœud spécifié immédiatement après le nœud de référence spécifié.</summary>
      <param name="newChild" vsli:raw="The node to insert.">Le nœud à insérer.</param>
      <param name="refChild" vsli:raw="The reference node. &lt;paramref name=&quot;newChild&quot; /&gt; is placed after &lt;paramref name=&quot;refChild&quot; /&gt;.">Le nœud de référence. <paramref name="newChild" /> est placé après <paramref name="refChild" />.</param>
      <exception cref="T:System.InvalidOperationException" vsli:raw="This node is of a type that does not allow child nodes of the type of the &lt;paramref name=&quot;newChild&quot; /&gt; node.  &#xA;  &#xA; The &lt;paramref name=&quot;newChild&quot; /&gt; is an ancestor of this node.">Le type de ce nœud n'autorise pas les nœuds enfants possédant le type de nœud <paramref name="newChild" />.  
  
<paramref name="newChild" /> est un ancêtre de ce nœud.</exception>
      <exception cref="T:System.ArgumentException" vsli:raw="The &lt;paramref name=&quot;newChild&quot; /&gt; was created from a different document than the one that created this node.  &#xA;  &#xA; The &lt;paramref name=&quot;refChild&quot; /&gt; is not a child of this node.  &#xA;  &#xA; This node is read-only.">
        <paramref name="newChild" /> a été créé à partir d'un document différent de celui qui a créé ce nœud.  
  
<paramref name="refChild" /> n'est pas un enfant de ce nœud.  
  
Ce nœud est en lecture seule.</exception>
      <returns vsli:raw="The node being inserted.">Nœud inséré.</returns>
    </member>
    <member name="M:System.Xml.XmlNode.InsertBefore(System.Xml.XmlNode,System.Xml.XmlNode)">
      <summary vsli:raw="Inserts the specified node immediately before the specified reference node.">Insère le nœud spécifié immédiatement avant le nœud de référence spécifié.</summary>
      <param name="newChild" vsli:raw="The node to insert.">Le nœud à insérer.</param>
      <param name="refChild" vsli:raw="The reference node. &lt;paramref name=&quot;newChild&quot; /&gt; is placed before this node.">Le nœud de référence. <paramref name="newChild" /> est placé avant ce nœud.</param>
      <exception cref="T:System.InvalidOperationException" vsli:raw="The current node is of a type that does not allow child nodes of the type of the &lt;paramref name=&quot;newChild&quot; /&gt; node.  &#xA;  &#xA; The &lt;paramref name=&quot;newChild&quot; /&gt; is an ancestor of this node.">Le type du nœud actuel n'autorise pas les nœuds enfants possédant le type de nœud <paramref name="newChild" />.  
  
<paramref name="newChild" /> est un ancêtre de ce nœud.</exception>
      <exception cref="T:System.ArgumentException" vsli:raw="The &lt;paramref name=&quot;newChild&quot; /&gt; was created from a different document than the one that created this node.  &#xA;  &#xA; The &lt;paramref name=&quot;refChild&quot; /&gt; is not a child of this node.  &#xA;  &#xA; This node is read-only.">
        <paramref name="newChild" /> a été créé à partir d'un document différent de celui qui a créé ce nœud.  
  
<paramref name="refChild" /> n'est pas un enfant de ce nœud.  
  
Ce nœud est en lecture seule.</exception>
      <returns vsli:raw="The node being inserted.">Nœud inséré.</returns>
    </member>
    <member name="M:System.Xml.XmlNode.Normalize">
      <summary vsli:raw="Puts all XmlText nodes in the full depth of the sub-tree underneath this XmlNode into a &quot;normal&quot; form where only markup (that is, tags, comments, processing instructions, CDATA sections, and entity references) separates XmlText nodes, that is, there are no adjacent XmlText nodes.">Place tous les nœuds XmlText dans la profondeur du sous-arbre sous XmlNode dans un formulaire « normal », où seul le balisage (c’est-à-dire les étiquettes, les commentaires, les instructions de traitement, les sections CDATA et les références d’entité) sépare les nœuds XmlText ; en d’autres termes, il n’existe pas de nœuds XmlText adjacents.</summary>
    </member>
    <member name="M:System.Xml.XmlNode.PrependChild(System.Xml.XmlNode)">
      <summary vsli:raw="Adds the specified node to the beginning of the list of child nodes for this node.">Ajoute le nœud spécifié au début de la liste des nœuds enfants de ce nœud.</summary>
      <param name="newChild" vsli:raw="The node to add. All the contents of the node to be added are moved into the specified location.">Le nœud à ajouter. Tout le contenu du nœud à ajouter est déplacé dans l'emplacement spécifié.</param>
      <exception cref="T:System.InvalidOperationException" vsli:raw="This node is of a type that does not allow child nodes of the type of the &lt;paramref name=&quot;newChild&quot; /&gt; node.  &#xA;  &#xA; The &lt;paramref name=&quot;newChild&quot; /&gt; is an ancestor of this node.">Le type de ce nœud n'autorise pas les nœuds enfants possédant le type de nœud <paramref name="newChild" />.  
  
<paramref name="newChild" /> est un ancêtre de ce nœud.</exception>
      <exception cref="T:System.ArgumentException" vsli:raw="The &lt;paramref name=&quot;newChild&quot; /&gt; was created from a different document than the one that created this node.  &#xA;  &#xA; This node is read-only.">
        <paramref name="newChild" /> a été créé à partir d'un document différent de celui qui a créé ce nœud.  
  
Ce nœud est en lecture seule.</exception>
      <returns vsli:raw="The node added.">Nœud ajouté.</returns>
    </member>
    <member name="M:System.Xml.XmlNode.RemoveAll">
      <summary vsli:raw="Removes all the child nodes and/or attributes of the current node.">Supprime tous les nœuds enfants et/ou d'attributs du nœud actuel.</summary>
    </member>
    <member name="M:System.Xml.XmlNode.RemoveChild(System.Xml.XmlNode)">
      <summary vsli:raw="Removes specified child node.">Supprime le nœud enfant spécifié.</summary>
      <param name="oldChild" vsli:raw="The node being removed.">Nœud supprimé.</param>
      <exception cref="T:System.ArgumentException" vsli:raw="The &lt;paramref name=&quot;oldChild&quot; /&gt; is not a child of this node. Or this node is read-only.">
        <paramref name="oldChild" /> n'est pas un enfant de ce nœud. ou bien ce nœud est en lecture seule.</exception>
      <returns vsli:raw="The node removed.">Nœud supprimé.</returns>
    </member>
    <member name="M:System.Xml.XmlNode.ReplaceChild(System.Xml.XmlNode,System.Xml.XmlNode)">
      <summary vsli:raw="Replaces the child node &lt;paramref name=&quot;oldChild&quot; /&gt; with &lt;paramref name=&quot;newChild&quot; /&gt; node.">Remplace le nœud enfant <paramref name="oldChild" /> par le nœud <paramref name="newChild" />.</summary>
      <param name="newChild" vsli:raw="The new node to put in the child list.">Nouveau nœud à insérer dans la liste enfant.</param>
      <param name="oldChild" vsli:raw="The node being replaced in the list.">Nœud remplacé dans la liste.</param>
      <exception cref="T:System.InvalidOperationException" vsli:raw="This node is of a type that does not allow child nodes of the type of the &lt;paramref name=&quot;newChild&quot; /&gt; node.  &#xA;  &#xA; The &lt;paramref name=&quot;newChild&quot; /&gt; is an ancestor of this node.">Le type de ce nœud n'autorise pas les nœuds enfants possédant le type de nœud <paramref name="newChild" />.  
  
<paramref name="newChild" /> est un ancêtre de ce nœud.</exception>
      <exception cref="T:System.ArgumentException" vsli:raw="The &lt;paramref name=&quot;newChild&quot; /&gt; was created from a different document than the one that created this node.  &#xA;  &#xA; This node is read-only.  &#xA;  &#xA; The &lt;paramref name=&quot;oldChild&quot; /&gt; is not a child of this node.">
        <paramref name="newChild" /> a été créé à partir d'un document différent de celui qui a créé ce nœud.  
  
Ce nœud est en lecture seule.  
  
<paramref name="oldChild" /> n'est pas un enfant de ce nœud.</exception>
      <returns vsli:raw="The node replaced.">Nœud remplacé.</returns>
    </member>
    <member name="M:System.Xml.XmlNode.SelectNodes(System.String)">
      <summary vsli:raw="Selects a list of nodes matching the XPath expression.">Sélectionne une liste de nœuds correspondant à l'expression XPath.</summary>
      <param name="xpath" vsli:raw="The XPath expression.">Expression XPath.</param>
      <exception cref="T:System.Xml.XPath.XPathException" vsli:raw="The XPath expression contains a prefix. See XPath Examples.">L'expression XPath contient un préfixe. Consultez Exemples de XPath.</exception>
      <returns vsli:raw="An &lt;see cref=&quot;T:System.Xml.XmlNodeList&quot; /&gt; containing a collection of nodes matching the XPath query.">
        <see cref="T:System.Xml.XmlNodeList" /> contenant une collection de nœuds correspondant à la requête XPath.</returns>
    </member>
    <member name="M:System.Xml.XmlNode.SelectNodes(System.String,System.Xml.XmlNamespaceManager)">
      <summary vsli:raw="Selects a list of nodes matching the XPath expression. Any prefixes found in the XPath expression are resolved using the supplied &lt;see cref=&quot;T:System.Xml.XmlNamespaceManager&quot; /&gt;.">Sélectionne une liste de nœuds correspondant à l'expression XPath. Tous les préfixes trouvés dans l'expression XPath sont résolus à l'aide du <see cref="T:System.Xml.XmlNamespaceManager" /> fourni.</summary>
      <param name="xpath" vsli:raw="The XPath expression. See XPath Examples.">Expression XPath. Consultez Exemples de XPath.</param>
      <param name="nsmgr" vsli:raw="An &lt;see cref=&quot;T:System.Xml.XmlNamespaceManager&quot; /&gt; to use for resolving namespaces for prefixes in the XPath expression.">
        <see cref="T:System.Xml.XmlNamespaceManager" /> à utiliser pour résoudre les espaces de noms des préfixes dans l'expression XPath.</param>
      <exception cref="T:System.Xml.XPath.XPathException" vsli:raw="The XPath expression contains a prefix which is not defined in the &lt;see langword=&quot;XmlNamespaceManager&quot; /&gt;.">L'expression XPath contient un préfixe qui n'est pas défini dans <see langword="XmlNamespaceManager" />.</exception>
      <returns vsli:raw="An &lt;see cref=&quot;T:System.Xml.XmlNodeList&quot; /&gt; containing a collection of nodes matching the XPath query.">
        <see cref="T:System.Xml.XmlNodeList" /> contenant une collection de nœuds correspondant à la requête XPath.</returns>
    </member>
    <member name="M:System.Xml.XmlNode.SelectSingleNode(System.String)">
      <summary vsli:raw="Selects the first &lt;see langword=&quot;XmlNode&quot; /&gt; that matches the XPath expression.">Sélectionne le premier <see langword="XmlNode" /> correspondant à l'expression XPath.</summary>
      <param name="xpath" vsli:raw="The XPath expression. See XPath Examples.">Expression XPath. Consultez Exemples de XPath.</param>
      <exception cref="T:System.Xml.XPath.XPathException" vsli:raw="The XPath expression contains a prefix.">L'expression XPath contient un préfixe.</exception>
      <returns vsli:raw="The first &lt;see langword=&quot;XmlNode&quot; /&gt; that matches the XPath query or &lt;see langword=&quot;null&quot; /&gt; if no matching node is found.">Premier <see langword="XmlNode" /> correspondant à la requête XPath ou <see langword="null" /> si aucun nœud correspondant n'est trouvé.</returns>
    </member>
    <member name="M:System.Xml.XmlNode.SelectSingleNode(System.String,System.Xml.XmlNamespaceManager)">
      <summary vsli:raw="Selects the first &lt;see langword=&quot;XmlNode&quot; /&gt; that matches the XPath expression. Any prefixes found in the XPath expression are resolved using the supplied &lt;see cref=&quot;T:System.Xml.XmlNamespaceManager&quot; /&gt;.">Sélectionne le premier <see langword="XmlNode" /> correspondant à l'expression XPath. Tous les préfixes trouvés dans l'expression XPath sont résolus à l'aide du <see cref="T:System.Xml.XmlNamespaceManager" /> fourni.</summary>
      <param name="xpath" vsli:raw="The XPath expression. See XPath Examples.">Expression XPath. Consultez Exemples de XPath.</param>
      <param name="nsmgr" vsli:raw="An &lt;see cref=&quot;T:System.Xml.XmlNamespaceManager&quot; /&gt; to use for resolving namespaces for prefixes in the XPath expression.">
        <see cref="T:System.Xml.XmlNamespaceManager" /> à utiliser pour résoudre les espaces de noms des préfixes dans l'expression XPath.</param>
      <exception cref="T:System.Xml.XPath.XPathException" vsli:raw="The XPath expression contains a prefix which is not defined in the &lt;see langword=&quot;XmlNamespaceManager&quot; /&gt;.">L'expression XPath contient un préfixe qui n'est pas défini dans <see langword="XmlNamespaceManager" />.</exception>
      <returns vsli:raw="The first &lt;see langword=&quot;XmlNode&quot; /&gt; that matches the XPath query or &lt;see langword=&quot;null&quot; /&gt; if no matching node is found.">Premier <see langword="XmlNode" /> correspondant à la requête XPath ou <see langword="null" /> si aucun nœud correspondant n'est trouvé.</returns>
    </member>
    <member name="M:System.Xml.XmlNode.Supports(System.String,System.String)">
      <summary vsli:raw="Tests if the DOM implementation implements a specific feature.">Teste si l'implémentation DOM implémente une fonctionnalité spécifique.</summary>
      <param name="feature" vsli:raw="The package name of the feature to test. This name is not case-sensitive.">Nom de package de la fonctionnalité à tester. Ce nom ne respecte pas la casse.</param>
      <param name="version" vsli:raw="The version number of the package name to test. If the version is not specified (null), supporting any version of the feature causes the method to return true.">Numéro de version du nom de package à tester. Si la version n’est pas spécifiée (null), la prise en charge de n’importe quelle version de la fonctionnalité entraîne le retour de la valeur true par la méthode.</param>
      <returns vsli:raw="&lt;see langword=&quot;true&quot; /&gt; if the feature is implemented in the specified version; otherwise, &lt;see langword=&quot;false&quot; /&gt;. The following table describes the combinations that return &lt;see langword=&quot;true&quot; /&gt;.  &#xA;  &#xA; &lt;list type=&quot;table&quot;&gt;&lt;listheader&gt;&lt;term&gt; Feature&lt;/term&gt;&lt;description&gt; Version&lt;/description&gt;&lt;/listheader&gt;&lt;item&gt;&lt;term&gt; XML&lt;/term&gt;&lt;description&gt; 1.0&lt;/description&gt;&lt;/item&gt;&lt;item&gt;&lt;term&gt; XML&lt;/term&gt;&lt;description&gt; 2.0&lt;/description&gt;&lt;/item&gt;&lt;/list&gt;">
        <see langword="true" /> si la fonctionnalité est implémentée dans la version spécifiée ; sinon, <see langword="false" />. Le tableau suivant décrit les combinaisons qui retournent <see langword="true" />.  
  
 <list type="table"><listheader><term> Fonctionnalité</term><description> Version</description></listheader><item><term> XML</term><description> 1.0</description></item><item><term> XML</term><description> 2.0</description></item></list></returns>
    </member>
    <member name="M:System.Xml.XmlNode.System#Collections#IEnumerable#GetEnumerator">
      <summary vsli:raw="For a description of this member, see &lt;see cref=&quot;M:System.Xml.XmlNode.GetEnumerator&quot; /&gt;.">Pour obtenir une description de ce membre, consultez <see cref="M:System.Xml.XmlNode.GetEnumerator" />.</summary>
      <returns vsli:raw="An enumerator for the collection.">Énumérateur de la collection.</returns>
    </member>
    <member name="M:System.Xml.XmlNode.System#ICloneable#Clone">
      <summary vsli:raw="For a description of this member, see &lt;see cref=&quot;M:System.Xml.XmlNode.Clone&quot; /&gt;.">Pour obtenir une description de ce membre, consultez <see cref="M:System.Xml.XmlNode.Clone" />.</summary>
      <returns vsli:raw="A copy of the node from which it is called.">Copie du nœud à partir duquel il est appelé.</returns>
    </member>
    <member name="M:System.Xml.XmlNode.WriteContentTo(System.Xml.XmlWriter)">
      <summary vsli:raw="Saves all the child nodes of the node to the specified &lt;see cref=&quot;T:System.Xml.XmlWriter&quot; /&gt;, when overridden in a derived class.">Enregistre tous les nœuds enfants du nœud dans le <see cref="T:System.Xml.XmlWriter" /> spécifié.</summary>
      <param name="w" vsli:raw="The &lt;see langword=&quot;XmlWriter&quot; /&gt; to which you want to save.">L'élément <see langword="XmlWriter" /> dans lequel vous voulez enregistrer.</param>
    </member>
    <member name="M:System.Xml.XmlNode.WriteTo(System.Xml.XmlWriter)">
      <summary vsli:raw="Saves the current node to the specified &lt;see cref=&quot;T:System.Xml.XmlWriter&quot; /&gt;, when overridden in a derived class.">Enregistre le nœud actuel dans le <see cref="T:System.Xml.XmlWriter" /> spécifié, en cas de substitution dans une classe dérivée.</summary>
      <param name="w" vsli:raw="The &lt;see langword=&quot;XmlWriter&quot; /&gt; to which you want to save.">L'élément <see langword="XmlWriter" /> dans lequel vous voulez enregistrer.</param>
    </member>
    <member name="P:System.Xml.XmlNode.Attributes">
      <summary vsli:raw="Gets an &lt;see cref=&quot;T:System.Xml.XmlAttributeCollection&quot; /&gt; containing the attributes of this node.">Obtient un <see cref="T:System.Xml.XmlAttributeCollection" /> contenant les attributs du nœud.</summary>
      <returns vsli:raw="An &lt;see langword=&quot;XmlAttributeCollection&quot; /&gt; containing the attributes of the node.  &#xA;  &#xA; If the node is of type XmlNodeType.Element, the attributes of the node are returned. Otherwise, this property returns &lt;see langword=&quot;null&quot; /&gt;.">
        <see langword="XmlAttributeCollection" /> contenant les attributs du nœud.  
  
Si le nœud est de type XmlNodeType.Element, les attributs du nœud sont retournés. Sinon, cette propriété retourne <see langword="null" />.</returns>
    </member>
    <member name="P:System.Xml.XmlNode.BaseURI">
      <summary vsli:raw="Gets the base URI of the current node.">Obtient l'URI de base du nœud actuel.</summary>
      <returns vsli:raw="The location from which the node was loaded or String.Empty if the node has no base URI.">Emplacement à partir duquel le nœud a été chargé ou String.Empty si le nœud n'a pas d'URI de base.</returns>
    </member>
    <member name="P:System.Xml.XmlNode.ChildNodes">
      <summary vsli:raw="Gets all the child nodes of the node.">Obtient tous les nœuds enfants du nœud.</summary>
      <returns vsli:raw="An object that contains all the child nodes of the node.  &#xA;  &#xA; If there are no child nodes, this property returns an empty &lt;see cref=&quot;T:System.Xml.XmlNodeList&quot; /&gt;.">Objet contenant tous les nœuds enfants du nœud.  
  
En l'absence de nœuds enfants, cette propriété retourne un <see cref="T:System.Xml.XmlNodeList" /> vide.</returns>
    </member>
    <member name="P:System.Xml.XmlNode.FirstChild">
      <summary vsli:raw="Gets the first child of the node.">Obtient le premier enfant du nœud.</summary>
      <returns vsli:raw="The first child of the node. If there is no such node, &lt;see langword=&quot;null&quot; /&gt; is returned.">Premier enfant du nœud. Si le nœud n'existe pas, <see langword="null" /> est retournée.</returns>
    </member>
    <member name="P:System.Xml.XmlNode.HasChildNodes">
      <summary vsli:raw="Gets a value indicating whether this node has any child nodes.">Obtient une valeur indiquant si ce nœud possède des nœuds enfants.</summary>
      <returns vsli:raw="&lt;see langword=&quot;true&quot; /&gt; if the node has child nodes; otherwise, &lt;see langword=&quot;false&quot; /&gt;.">
        <see langword="true" /> si le nœud possède des nœuds enfants ; sinon, <see langword="false" />.</returns>
    </member>
    <member name="P:System.Xml.XmlNode.InnerText">
      <summary vsli:raw="Gets or sets the concatenated values of the node and all its child nodes.">Obtient ou définit les valeurs concaténées du nœud et de tous ses nœuds enfants.</summary>
      <returns vsli:raw="The concatenated values of the node and all its child nodes.">Valeurs concaténées du nœud et de tous ses nœuds enfants.</returns>
    </member>
    <member name="P:System.Xml.XmlNode.InnerXml">
      <summary vsli:raw="Gets or sets the markup representing only the child nodes of this node.">Obtient ou définit le balisage représentant uniquement les nœuds enfants de ce nœud.</summary>
      <exception cref="T:System.InvalidOperationException" vsli:raw="Setting this property on a node that cannot have child nodes.">Définition de cette propriété sur un nœud ne pouvant pas avoir de nœuds enfants.</exception>
      <exception cref="T:System.Xml.XmlException" vsli:raw="The XML specified when setting this property is not well-formed.">Le code XML spécifié pendant la définition de cette propriété n’est pas bien formé.</exception>
      <returns vsli:raw="The markup of the child nodes of this node, not including default attributes.">Balisage des nœuds enfants de ce nœud.  
  
 <block subset="none" type="note"><para><see langword="InnerXml" /> ne retourne pas les attributs par défaut.</para></block></returns>
    </member>
    <member name="P:System.Xml.XmlNode.IsReadOnly">
      <summary vsli:raw="Gets a value indicating whether the node is read-only.">Obtient une valeur indiquant si le nœud est en lecture seule.</summary>
      <returns vsli:raw="&lt;see langword=&quot;true&quot; /&gt; if the node is read-only; otherwise, &lt;see langword=&quot;false&quot; /&gt;.">
        <see langword="true" /> Si le nœud est en lecture seule ; Sinon, <see langword="false" /> .</returns>
    </member>
    <member name="P:System.Xml.XmlNode.Item(System.String)">
      <summary vsli:raw="Gets the first child element with the specified &lt;see cref=&quot;P:System.Xml.XmlNode.Name&quot; /&gt;.">Obtient le premier élément enfant avec le <see cref="P:System.Xml.XmlNode.Name" /> spécifié.</summary>
      <param name="name" vsli:raw="The qualified name of the element to retrieve.">Nom qualifié de l'élément à récupérer</param>
      <returns vsli:raw="The first &lt;see cref=&quot;T:System.Xml.XmlElement&quot; /&gt; that matches the specified name. It returns a null reference (&lt;see langword=&quot;Nothing&quot; /&gt; in Visual Basic) if there is no match.">Premier <see cref="T:System.Xml.XmlElement" /> correspondant au nom spécifié. Elle retourne une référence nulle (<see langword="Nothing" /> en Visual Basic) si aucune correspondance n'est trouvée.</returns>
    </member>
    <member name="P:System.Xml.XmlNode.Item(System.String,System.String)">
      <summary vsli:raw="Gets the first child element with the specified &lt;see cref=&quot;P:System.Xml.XmlNode.LocalName&quot; /&gt; and &lt;see cref=&quot;P:System.Xml.XmlNode.NamespaceURI&quot; /&gt;.">Obtient le premier élément enfant avec le <see cref="P:System.Xml.XmlNode.LocalName" /> et le <see cref="P:System.Xml.XmlNode.NamespaceURI" /> spécifiés.</summary>
      <param name="localname" vsli:raw="The local name of the element.">Le nom local de l'élément.</param>
      <param name="ns" vsli:raw="The namespace URI of the element.">L'URI de l'espace de noms de l'élément.</param>
      <returns vsli:raw="The first &lt;see cref=&quot;T:System.Xml.XmlElement&quot; /&gt; with the matching &lt;paramref name=&quot;localname&quot; /&gt; and &lt;paramref name=&quot;ns&quot; /&gt;. It returns a null reference (&lt;see langword=&quot;Nothing&quot; /&gt; in Visual Basic) if there is no match.">Premier <see cref="T:System.Xml.XmlElement" /> ayant les <paramref name="localname" /> et <paramref name="ns" /> correspondants. Elle retourne une référence nulle (<see langword="Nothing" /> en Visual Basic) si aucune correspondance n'est trouvée.</returns>
    </member>
    <member name="P:System.Xml.XmlNode.LastChild">
      <summary vsli:raw="Gets the last child of the node.">Obtient le dernier enfant du nœud.</summary>
      <returns vsli:raw="The last child of the node. If there is no such node, &lt;see langword=&quot;null&quot; /&gt; is returned.">Dernier enfant du nœud. Si le nœud n'existe pas, <see langword="null" /> est retournée.</returns>
    </member>
    <member name="P:System.Xml.XmlNode.LocalName">
      <summary vsli:raw="Gets the local name of the node, when overridden in a derived class.">Obtient le nom local du nœud en cas de substitution dans une classe dérivée.</summary>
      <returns vsli:raw="The name of the node with the prefix removed. For example, &lt;see langword=&quot;LocalName&quot; /&gt; is book for the element &amp;lt;bk:book&amp;gt;.  &#xA;  &#xA; The name returned is dependent on the &lt;see cref=&quot;P:System.Xml.XmlNode.NodeType&quot; /&gt; of the node:  &#xA;  &#xA; &lt;list type=&quot;table&quot;&gt;&lt;listheader&gt;&lt;term&gt; Type&lt;/term&gt;&lt;description&gt; Name&lt;/description&gt;&lt;/listheader&gt;&lt;item&gt;&lt;term&gt; Attribute&lt;/term&gt;&lt;description&gt; The local name of the attribute.&lt;/description&gt;&lt;/item&gt;&lt;item&gt;&lt;term&gt; CDATA&lt;/term&gt;&lt;description&gt; #cdata-section&lt;/description&gt;&lt;/item&gt;&lt;item&gt;&lt;term&gt; Comment&lt;/term&gt;&lt;description&gt; #comment&lt;/description&gt;&lt;/item&gt;&lt;item&gt;&lt;term&gt; Document&lt;/term&gt;&lt;description&gt; #document&lt;/description&gt;&lt;/item&gt;&lt;item&gt;&lt;term&gt; DocumentFragment&lt;/term&gt;&lt;description&gt; #document-fragment&lt;/description&gt;&lt;/item&gt;&lt;item&gt;&lt;term&gt; DocumentType&lt;/term&gt;&lt;description&gt; The document type name.&lt;/description&gt;&lt;/item&gt;&lt;item&gt;&lt;term&gt; Element&lt;/term&gt;&lt;description&gt; The local name of the element.&lt;/description&gt;&lt;/item&gt;&lt;item&gt;&lt;term&gt; Entity&lt;/term&gt;&lt;description&gt; The name of the entity.&lt;/description&gt;&lt;/item&gt;&lt;item&gt;&lt;term&gt; EntityReference&lt;/term&gt;&lt;description&gt; The name of the entity referenced.&lt;/description&gt;&lt;/item&gt;&lt;item&gt;&lt;term&gt; Notation&lt;/term&gt;&lt;description&gt; The notation name.&lt;/description&gt;&lt;/item&gt;&lt;item&gt;&lt;term&gt; ProcessingInstruction&lt;/term&gt;&lt;description&gt; The target of the processing instruction.&lt;/description&gt;&lt;/item&gt;&lt;item&gt;&lt;term&gt; Text&lt;/term&gt;&lt;description&gt; #text&lt;/description&gt;&lt;/item&gt;&lt;item&gt;&lt;term&gt; Whitespace&lt;/term&gt;&lt;description&gt; #whitespace&lt;/description&gt;&lt;/item&gt;&lt;item&gt;&lt;term&gt; SignificantWhitespace&lt;/term&gt;&lt;description&gt; #significant-whitespace&lt;/description&gt;&lt;/item&gt;&lt;item&gt;&lt;term&gt; XmlDeclaration&lt;/term&gt;&lt;description&gt; #xml-declaration&lt;/description&gt;&lt;/item&gt;&lt;/list&gt;">Nom du nœud dont le préfixe est supprimé. Par exemple, <see langword="LocalName" /> est Book pour l’élément &lt; BK : Book &gt; .  
  
Le nom retourné dépend du <see cref="P:System.Xml.XmlNode.NodeType" /> du nœud : 
 <list type="table"><listheader><term> Type</term><description> Nom</description></listheader><item><term> Attribut</term><description> Le nom local de l'attribut.</description></item><item><term> CDATA</term><description> #cdata-section</description></item><item><term> Commentaire</term><description> #comment</description></item><item><term> Document</term><description> #document</description></item><item><term> DocumentFragment</term><description> #document-fragment</description></item><item><term> DocumentType ;</term><description> Nom du type de document.</description></item><item><term> Élément</term><description> Le nom local de l'élément.</description></item><item><term> Entité</term><description> Nom de l'entité.</description></item><item><term> EntityReference</term><description> Nom de l'entité référencée.</description></item><item><term> Notation</term><description> Nom de la notation.</description></item><item><term> ProcessingInstruction ;</term><description> Cible de l'instruction de traitement.</description></item><item><term> Texte</term><description> #text</description></item><item><term> Espace blanc</term><description> #whitespace</description></item><item><term> SignificantWhitespace</term><description> #significant-whitespace</description></item><item><term> XmlDeclaration</term><description> #xml-declaration</description></item></list></returns>
    </member>
    <member name="P:System.Xml.XmlNode.Name">
      <summary vsli:raw="Gets the qualified name of the node, when overridden in a derived class.">Obtient le nom qualifié du nœud, en cas de substitution dans une classe dérivée.</summary>
      <returns vsli:raw="The qualified name of the node. The name returned is dependent on the &lt;see cref=&quot;P:System.Xml.XmlNode.NodeType&quot; /&gt; of the node:  &#xA;  &#xA; &lt;list type=&quot;table&quot;&gt;&lt;listheader&gt;&lt;term&gt; Type&lt;/term&gt;&lt;description&gt; Name&lt;/description&gt;&lt;/listheader&gt;&lt;item&gt;&lt;term&gt; Attribute&lt;/term&gt;&lt;description&gt; The qualified name of the attribute.&lt;/description&gt;&lt;/item&gt;&lt;item&gt;&lt;term&gt; CDATA&lt;/term&gt;&lt;description&gt; #cdata-section&lt;/description&gt;&lt;/item&gt;&lt;item&gt;&lt;term&gt; Comment&lt;/term&gt;&lt;description&gt; #comment&lt;/description&gt;&lt;/item&gt;&lt;item&gt;&lt;term&gt; Document&lt;/term&gt;&lt;description&gt; #document&lt;/description&gt;&lt;/item&gt;&lt;item&gt;&lt;term&gt; DocumentFragment&lt;/term&gt;&lt;description&gt; #document-fragment&lt;/description&gt;&lt;/item&gt;&lt;item&gt;&lt;term&gt; DocumentType&lt;/term&gt;&lt;description&gt; The document type name.&lt;/description&gt;&lt;/item&gt;&lt;item&gt;&lt;term&gt; Element&lt;/term&gt;&lt;description&gt; The qualified name of the element.&lt;/description&gt;&lt;/item&gt;&lt;item&gt;&lt;term&gt; Entity&lt;/term&gt;&lt;description&gt; The name of the entity.&lt;/description&gt;&lt;/item&gt;&lt;item&gt;&lt;term&gt; EntityReference&lt;/term&gt;&lt;description&gt; The name of the entity referenced.&lt;/description&gt;&lt;/item&gt;&lt;item&gt;&lt;term&gt; Notation&lt;/term&gt;&lt;description&gt; The notation name.&lt;/description&gt;&lt;/item&gt;&lt;item&gt;&lt;term&gt; ProcessingInstruction&lt;/term&gt;&lt;description&gt; The target of the processing instruction.&lt;/description&gt;&lt;/item&gt;&lt;item&gt;&lt;term&gt; Text&lt;/term&gt;&lt;description&gt; #text&lt;/description&gt;&lt;/item&gt;&lt;item&gt;&lt;term&gt; Whitespace&lt;/term&gt;&lt;description&gt; #whitespace&lt;/description&gt;&lt;/item&gt;&lt;item&gt;&lt;term&gt; SignificantWhitespace&lt;/term&gt;&lt;description&gt; #significant-whitespace&lt;/description&gt;&lt;/item&gt;&lt;item&gt;&lt;term&gt; XmlDeclaration&lt;/term&gt;&lt;description&gt; #xml-declaration&lt;/description&gt;&lt;/item&gt;&lt;/list&gt;">Nom qualifié du nœud. Le nom retourné dépend du <see cref="P:System.Xml.XmlNode.NodeType" /> du nœud : 
 <list type="table"><listheader><term> Type</term><description> Nom</description></listheader><item><term> Attribut</term><description> Nom qualifié de l'attribut.</description></item><item><term> CDATA</term><description> #cdata-section</description></item><item><term> Commentaire</term><description> #comment</description></item><item><term> Document</term><description> #document</description></item><item><term> DocumentFragment</term><description> #document-fragment</description></item><item><term> DocumentType ;</term><description> Nom du type de document.</description></item><item><term> Élément</term><description> Nom qualifié de l'élément.</description></item><item><term> Entité</term><description> Nom de l'entité.</description></item><item><term> EntityReference</term><description> Nom de l'entité référencée.</description></item><item><term> Notation</term><description> Nom de la notation.</description></item><item><term> ProcessingInstruction ;</term><description> Cible de l'instruction de traitement.</description></item><item><term> Texte</term><description> #text</description></item><item><term> Espace blanc</term><description> #whitespace</description></item><item><term> SignificantWhitespace</term><description> #significant-whitespace</description></item><item><term> XmlDeclaration</term><description> #xml-declaration</description></item></list></returns>
    </member>
    <member name="P:System.Xml.XmlNode.NamespaceURI">
      <summary vsli:raw="Gets the namespace URI of this node.">Obtient l'URI de l'espace de noms de ce nœud.</summary>
      <returns vsli:raw="The namespace URI of this node. If there is no namespace URI, this property returns String.Empty.">Espace de noms d'URI du nœud. En l'absence d'URI d'espace de noms, cette propriété retourne String.Empty.</returns>
    </member>
    <member name="P:System.Xml.XmlNode.NextSibling">
      <summary vsli:raw="Gets the node immediately following this node.">Obtient le nœud qui suit immédiatement ce nœud.</summary>
      <returns vsli:raw="The next &lt;see langword=&quot;XmlNode&quot; /&gt;. If there is no next node, &lt;see langword=&quot;null&quot; /&gt; is returned.">
        <see langword="XmlNode" /> suivant. Si le nœud suivant n'existe pas, <see langword="null" /> est retournée.</returns>
    </member>
    <member name="P:System.Xml.XmlNode.NodeType">
      <summary vsli:raw="Gets the type of the current node, when overridden in a derived class.">Obtient le type du nœud actuel, en cas de substitution dans une classe dérivée.</summary>
      <returns vsli:raw="One of the &lt;see cref=&quot;T:System.Xml.XmlNodeType&quot; /&gt; values.">Une des valeurs de l'objet <see cref="T:System.Xml.XmlNodeType" />.</returns>
    </member>
    <member name="P:System.Xml.XmlNode.OuterXml">
      <summary vsli:raw="Gets the markup containing this node and all its child nodes.">Obtient la marque contenant ce nœud et tous ses nœuds enfants.</summary>
      <returns vsli:raw="The markup containing this node and all its child nodes, not including default attributes.">Balisage contenant ce nœud et tous ses nœuds enfants.  
  
 <block subset="none" type="note"><para><see langword="OuterXml" /> ne retourne pas les attributs par défaut.</para></block></returns>
    </member>
    <member name="P:System.Xml.XmlNode.OwnerDocument">
      <summary vsli:raw="Gets the &lt;see cref=&quot;T:System.Xml.XmlDocument&quot; /&gt; to which this node belongs.">Obtient le <see cref="T:System.Xml.XmlDocument" /> auquel ce nœud appartient.</summary>
      <returns vsli:raw="The &lt;see cref=&quot;T:System.Xml.XmlDocument&quot; /&gt; to which this node belongs.  &#xA;  &#xA; If the node is an &lt;see cref=&quot;T:System.Xml.XmlDocument&quot; /&gt; (NodeType equals XmlNodeType.Document), this property returns &lt;see langword=&quot;null&quot; /&gt;.">
        <see cref="T:System.Xml.XmlDocument" /> auquel ce nœud appartient.  
  
Si le nœud est <see cref="T:System.Xml.XmlDocument" /> (NodeType est égal à XmlNodeType.Document), cette propriété retourne <see langword="null" />.</returns>
    </member>
    <member name="P:System.Xml.XmlNode.ParentNode">
      <summary vsli:raw="Gets the parent of this node (for nodes that can have parents).">Obtient le parent de ce nœud (pour les nœuds qui peuvent avoir des parents).</summary>
      <returns vsli:raw="The &lt;see langword=&quot;XmlNode&quot; /&gt; that is the parent of the current node. If a node has just been created and not yet added to the tree, or if it has been removed from the tree, the parent is &lt;see langword=&quot;null&quot; /&gt;. For all other nodes, the value returned depends on the &lt;see cref=&quot;P:System.Xml.XmlNode.NodeType&quot; /&gt; of the node. The following table describes the possible return values for the &lt;see langword=&quot;ParentNode&quot; /&gt; property.  &#xA;  &#xA; &lt;list type=&quot;table&quot;&gt;&lt;listheader&gt;&lt;term&gt; NodeType&lt;/term&gt;&lt;description&gt; Return Value of ParentNode&lt;/description&gt;&lt;/listheader&gt;&lt;item&gt;&lt;term&gt; Attribute, Document, DocumentFragment, Entity, Notation&lt;/term&gt;&lt;description&gt; Returns &lt;see langword=&quot;null&quot; /&gt;; these nodes do not have parents.&lt;/description&gt;&lt;/item&gt;&lt;item&gt;&lt;term&gt; CDATA&lt;/term&gt;&lt;description&gt; Returns the element or entity reference containing the CDATA section.&lt;/description&gt;&lt;/item&gt;&lt;item&gt;&lt;term&gt; Comment&lt;/term&gt;&lt;description&gt; Returns the element, entity reference, document type, or document containing the comment.&lt;/description&gt;&lt;/item&gt;&lt;item&gt;&lt;term&gt; DocumentType&lt;/term&gt;&lt;description&gt; Returns the document node.&lt;/description&gt;&lt;/item&gt;&lt;item&gt;&lt;term&gt; Element&lt;/term&gt;&lt;description&gt; Returns the parent node of the element. If the element is the root node in the tree, the parent is the document node.&lt;/description&gt;&lt;/item&gt;&lt;item&gt;&lt;term&gt; EntityReference&lt;/term&gt;&lt;description&gt; Returns the element, attribute, or entity reference containing the entity reference.&lt;/description&gt;&lt;/item&gt;&lt;item&gt;&lt;term&gt; ProcessingInstruction&lt;/term&gt;&lt;description&gt; Returns the document, element, document type, or entity reference containing the processing instruction.&lt;/description&gt;&lt;/item&gt;&lt;item&gt;&lt;term&gt; Text&lt;/term&gt;&lt;description&gt; Returns the parent element, attribute, or entity reference containing the text node.&lt;/description&gt;&lt;/item&gt;&lt;/list&gt;">
        <see langword="XmlNode" /> correspondant au parent du nœud actif. Si un nœud vient d’être créé mais qu’il n’a pas encore été ajouté à l’arborescence, ou s’il a été supprimé de celle-ci, le parent est <see langword="null" />. Pour tous les autres nœuds, la valeur retournée dépend du <see cref="P:System.Xml.XmlNode.NodeType" /> du nœud. Le tableau suivant décrit les différentes valeurs de retour possibles pour la propriété <see langword="ParentNode" />.  
  
 <list type="table"><listheader><term> NodeType</term><description> Valeur de retour de ParentNode</description></listheader><item><term> Attribute, Document, DocumentFragment, Entity et Notation</term><description> Retourne <see langword="null" /> ; ces nœuds n'ont pas de parents.</description></item><item><term> CDATA</term><description> Retourne l'élément ou la référence d'entité contenant la section CDATA.</description></item><item><term> Commentaire</term><description> Retourne l'élément, la référence d'entité, le type de document ou le document contenant le commentaire.</description></item><item><term> DocumentType ;</term><description> Retourne le nœud du document.</description></item><item><term> Élément</term><description> Retourne le nœud parent de l'élément. Si l'élément est le nœud racine de l'arborescence, le parent est le nœud du document.</description></item><item><term> EntityReference</term><description> Retourne l'élément, l'attribut ou la référence d'entité contenant la référence d'entité.</description></item><item><term> ProcessingInstruction ;</term><description> Retourne le document, l'élément, le type de document ou la référence d'entité contenant l'instruction de traitement.</description></item><item><term> Texte</term><description> Retourne l'élément parent, l'attribut ou la référence d'entité contenant le nœud de texte.</description></item></list></returns>
    </member>
    <member name="P:System.Xml.XmlNode.Prefix">
      <summary vsli:raw="Gets or sets the namespace prefix of this node.">Obtient ou définit le préfixe de l'espace de noms de ce nœud.</summary>
      <exception cref="T:System.ArgumentException" vsli:raw="This node is read-only.">Ce nœud est en lecture seule.</exception>
      <exception cref="T:System.Xml.XmlException" vsli:raw="The specified prefix contains an invalid character.  &#xA;  &#xA; The specified prefix is malformed.  &#xA;  &#xA; The specified prefix is &quot;xml&quot; and the namespaceURI of this node is different from &quot;http://www.w3.org/XML/1998/namespace&quot;.  &#xA;  &#xA; This node is an attribute and the specified prefix is &quot;xmlns&quot; and the namespaceURI of this node is different from &quot;http://www.w3.org/2000/xmlns/ &quot;.  &#xA;  &#xA; This node is an attribute and the qualifiedName of this node is &quot;xmlns&quot;.">Le préfixe spécifié contient un caractère non valide.  
  
 Le préfixe spécifié est mal formé.  
  
 Le préfixe spécifié est « xml » et l’URI d’espace de noms de ce nœud est différent de « http://www.w3.org/XML/1998/namespace ».  
  
 Le nœud est un attribut, le préfixe spécifié est « xmlns » et l’URI d’espace de noms de ce nœud est différent de « http://www.w3.org/2000/xmlns/ ».  
  
 Ce nœud est un attribut et le qualifiedName de ce nœud est "xmlns".</exception>
      <returns vsli:raw="The namespace prefix of this node. For example, &lt;see langword=&quot;Prefix&quot; /&gt; is bk for the element &amp;lt;bk:book&amp;gt;. If there is no prefix, this property returns String.Empty.">Préfixe de l'espace de noms de ce nœud. Par exemple, <see langword="Prefix" /> est BK pour l’élément &lt; BK : Book &gt; . En l'absence de préfixe, cette propriété retourne String.Empty.</returns>
    </member>
    <member name="P:System.Xml.XmlNode.PreviousSibling">
      <summary vsli:raw="Gets the node immediately preceding this node.">Obtient le nœud qui précède immédiatement ce nœud.</summary>
      <returns vsli:raw="The preceding &lt;see langword=&quot;XmlNode&quot; /&gt;. If there is no preceding node, &lt;see langword=&quot;null&quot; /&gt; is returned.">
        <see langword="XmlNode" /> précédent. Si le nœud précédent n'existe pas, <see langword="null" /> est retournée.</returns>
    </member>
    <member name="P:System.Xml.XmlNode.PreviousText">
      <summary vsli:raw="Gets the text node that immediately precedes this node.">Obtient le nœud de texte qui précède immédiatement ce nœud.</summary>
      <returns vsli:raw="Returns &lt;see cref=&quot;T:System.Xml.XmlNode&quot; /&gt;.">Retourne <see cref="T:System.Xml.XmlNode" />.</returns>
    </member>
    <member name="P:System.Xml.XmlNode.SchemaInfo">
      <summary vsli:raw="Gets the post schema validation infoset that has been assigned to this node as a result of schema validation.">Obtient le jeu d’informations postérieures à la validation du schéma qui a été assigné à ce nœud à la suite de la validation du schéma.</summary>
      <returns vsli:raw="An &lt;see cref=&quot;T:System.Xml.Schema.IXmlSchemaInfo&quot; /&gt; object containing the post schema validation infoset of this node.">Objet <see cref="T:System.Xml.Schema.IXmlSchemaInfo" /> contenant le jeu d'informations postérieures à la validation du schéma de ce nœud.</returns>
    </member>
    <member name="P:System.Xml.XmlNode.Value">
      <summary vsli:raw="Gets or sets the value of the node.">Obtient ou définit la valeur du nœud.</summary>
      <exception cref="T:System.ArgumentException" vsli:raw="Setting the value of a node that is read-only.">Définition de la valeur d'un nœud qui est en lecture seule.</exception>
      <exception cref="T:System.InvalidOperationException" vsli:raw="Setting the value of a node that is not supposed to have a value (for example, an Element node).">Définition de la valeur d'un nœud qui n'est pas censé posséder de valeur (par exemple un nœud Element).</exception>
      <returns vsli:raw="The value returned depends on the &lt;see cref=&quot;P:System.Xml.XmlNode.NodeType&quot; /&gt; of the node:  &#xA;  &#xA; &lt;list type=&quot;table&quot;&gt;&lt;listheader&gt;&lt;term&gt; Type&lt;/term&gt;&lt;description&gt; Value&lt;/description&gt;&lt;/listheader&gt;&lt;item&gt;&lt;term&gt; Attribute&lt;/term&gt;&lt;description&gt; The value of the attribute.&lt;/description&gt;&lt;/item&gt;&lt;item&gt;&lt;term&gt; CDATASection&lt;/term&gt;&lt;description&gt; The content of the CDATA Section.&lt;/description&gt;&lt;/item&gt;&lt;item&gt;&lt;term&gt; Comment&lt;/term&gt;&lt;description&gt; The content of the comment.&lt;/description&gt;&lt;/item&gt;&lt;item&gt;&lt;term&gt; Document&lt;/term&gt;&lt;description&gt;&lt;see langword=&quot;null&quot; /&gt;.&lt;/description&gt;&lt;/item&gt;&lt;item&gt;&lt;term&gt; DocumentFragment&lt;/term&gt;&lt;description&gt;&lt;see langword=&quot;null&quot; /&gt;.&lt;/description&gt;&lt;/item&gt;&lt;item&gt;&lt;term&gt; DocumentType&lt;/term&gt;&lt;description&gt;&lt;see langword=&quot;null&quot; /&gt;.&lt;/description&gt;&lt;/item&gt;&lt;item&gt;&lt;term&gt; Element&lt;/term&gt;&lt;description&gt;&lt;see langword=&quot;null&quot; /&gt;. You can use the &lt;see cref=&quot;P:System.Xml.XmlElement.InnerText&quot; /&gt; or &lt;see cref=&quot;P:System.Xml.XmlElement.InnerXml&quot; /&gt; properties to access the value of the element node.&lt;/description&gt;&lt;/item&gt;&lt;item&gt;&lt;term&gt; Entity&lt;/term&gt;&lt;description&gt;&lt;see langword=&quot;null&quot; /&gt;.&lt;/description&gt;&lt;/item&gt;&lt;item&gt;&lt;term&gt; EntityReference&lt;/term&gt;&lt;description&gt;&lt;see langword=&quot;null&quot; /&gt;.&lt;/description&gt;&lt;/item&gt;&lt;item&gt;&lt;term&gt; Notation&lt;/term&gt;&lt;description&gt;&lt;see langword=&quot;null&quot; /&gt;.&lt;/description&gt;&lt;/item&gt;&lt;item&gt;&lt;term&gt; ProcessingInstruction&lt;/term&gt;&lt;description&gt; The entire content excluding the target.&lt;/description&gt;&lt;/item&gt;&lt;item&gt;&lt;term&gt; Text&lt;/term&gt;&lt;description&gt; The content of the text node.&lt;/description&gt;&lt;/item&gt;&lt;item&gt;&lt;term&gt; SignificantWhitespace&lt;/term&gt;&lt;description&gt; The white space characters. White space can consist of one or more space characters, carriage returns, line feeds, or tabs.&lt;/description&gt;&lt;/item&gt;&lt;item&gt;&lt;term&gt; Whitespace&lt;/term&gt;&lt;description&gt; The white space characters. White space can consist of one or more space characters, carriage returns, line feeds, or tabs.&lt;/description&gt;&lt;/item&gt;&lt;item&gt;&lt;term&gt; XmlDeclaration&lt;/term&gt;&lt;description&gt; The content of the declaration (that is, everything between &amp;lt;?xml and ?&amp;gt;).&lt;/description&gt;&lt;/item&gt;&lt;/list&gt;">La valeur retournée dépend du <see cref="P:System.Xml.XmlNode.NodeType" /> du nœud : 
 <list type="table"><listheader><term> Type</term><description> Valeur</description></listheader><item><term> Attribut</term><description> Valeur de l'attribut.</description></item><item><term> CDATASection.</term><description> Contenu de la section CDATA.</description></item><item><term> Commentaire</term><description> Contenu du commentaire.</description></item><item><term> Document</term><description><see langword="null" />.</description></item><item><term> DocumentFragment</term><description><see langword="null" />.</description></item><item><term> DocumentType ;</term><description><see langword="null" />.</description></item><item><term> Élément</term><description><see langword="null" />. Vous pouvez utiliser les propriétés <see cref="P:System.Xml.XmlElement.InnerText" /> ou <see cref="P:System.Xml.XmlElement.InnerXml" /> pour accéder à la valeur du nœud d'élément.</description></item><item><term> Entité</term><description><see langword="null" />.</description></item><item><term> EntityReference</term><description><see langword="null" />.</description></item><item><term> Notation</term><description><see langword="null" />.</description></item><item><term> ProcessingInstruction ;</term><description> Contenu entier, à l'exclusion de la cible.</description></item><item><term> Texte</term><description> Contenu du nœud de texte.</description></item><item><term> SignificantWhitespace</term><description> Espaces blancs. Un espace blanc peut se composer de plusieurs espaces, retours chariots, changements de ligne ou tabulations.</description></item><item><term> Espace blanc</term><description> Espaces blancs. Un espace blanc peut se composer de plusieurs espaces, retours chariots, changements de ligne ou tabulations.</description></item><item><term> XmlDeclaration</term><description> Contenu de la déclaration (c’est-à-dire tout ce qui se trouve entre &lt; ? XML et ? &gt; ).</description></item></list></returns>
    </member>
    <member name="T:System.Xml.XmlNodeChangedAction">
      <summary vsli:raw="Specifies the type of node change.">Spécifie le type de modification du nœud.</summary>
    </member>
    <member name="F:System.Xml.XmlNodeChangedAction.Change">
      <summary vsli:raw="A node value is being changed.">Une valeur de nœud est modifiée.</summary>
    </member>
    <member name="F:System.Xml.XmlNodeChangedAction.Insert">
      <summary vsli:raw="A node is being inserted in the tree.">Un nœud est inséré dans l'arborescence.</summary>
    </member>
    <member name="F:System.Xml.XmlNodeChangedAction.Remove">
      <summary vsli:raw="A node is being removed from the tree.">Un nœud est supprimé de l'arborescence.</summary>
    </member>
    <member name="T:System.Xml.XmlNodeChangedEventArgs">
      <summary vsli:raw="Provides data for the &lt;see cref=&quot;E:System.Xml.XmlDocument.NodeChanged&quot; /&gt;, &lt;see cref=&quot;E:System.Xml.XmlDocument.NodeChanging&quot; /&gt;, &lt;see cref=&quot;E:System.Xml.XmlDocument.NodeInserted&quot; /&gt;, &lt;see cref=&quot;E:System.Xml.XmlDocument.NodeInserting&quot; /&gt;, &lt;see cref=&quot;E:System.Xml.XmlDocument.NodeRemoved&quot; /&gt; and &lt;see cref=&quot;E:System.Xml.XmlDocument.NodeRemoving&quot; /&gt; events.">Fournit des données pour les événements <see cref="E:System.Xml.XmlDocument.NodeChanged" />, <see cref="E:System.Xml.XmlDocument.NodeChanging" />, <see cref="E:System.Xml.XmlDocument.NodeInserted" />, <see cref="E:System.Xml.XmlDocument.NodeInserting" />, <see cref="E:System.Xml.XmlDocument.NodeRemoved" /> et <see cref="E:System.Xml.XmlDocument.NodeRemoving" />.</summary>
    </member>
    <member name="M:System.Xml.XmlNodeChangedEventArgs.#ctor(System.Xml.XmlNode,System.Xml.XmlNode,System.Xml.XmlNode,System.String,System.String,System.Xml.XmlNodeChangedAction)">
      <summary vsli:raw="Initializes a new instance of the &lt;see cref=&quot;T:System.Xml.XmlNodeChangedEventArgs&quot; /&gt; class.">Initialise une nouvelle instance de la classe <see cref="T:System.Xml.XmlNodeChangedEventArgs" />.</summary>
      <param name="node" vsli:raw="The &lt;see cref=&quot;T:System.Xml.XmlNode&quot; /&gt; that generated the event.">
        <see cref="T:System.Xml.XmlNode" /> qui a généré l'événement.</param>
      <param name="oldParent" vsli:raw="The old parent &lt;see cref=&quot;T:System.Xml.XmlNode&quot; /&gt; of the &lt;see cref=&quot;T:System.Xml.XmlNode&quot; /&gt; that generated the event.">Le parent ancien <see cref="T:System.Xml.XmlNode" /> du <see cref="T:System.Xml.XmlNode" /> qui a généré l'événement.</param>
      <param name="newParent" vsli:raw="The new parent &lt;see cref=&quot;T:System.Xml.XmlNode&quot; /&gt; of the &lt;see cref=&quot;T:System.Xml.XmlNode&quot; /&gt; that generated the event.">Le nouveau parent <see cref="T:System.Xml.XmlNode" /> du <see cref="T:System.Xml.XmlNode" /> qui a généré l'événement.</param>
      <param name="oldValue" vsli:raw="The old value of the &lt;see cref=&quot;T:System.Xml.XmlNode&quot; /&gt; that generated the event.">L'ancienne valeur du <see cref="T:System.Xml.XmlNode" /> qui a généré l'événement.</param>
      <param name="newValue" vsli:raw="The new value of the &lt;see cref=&quot;T:System.Xml.XmlNode&quot; /&gt; that generated the event.">La nouvelle valeur du <see cref="T:System.Xml.XmlNode" /> qui a généré l'événement.</param>
      <param name="action" vsli:raw="The &lt;see cref=&quot;T:System.Xml.XmlNodeChangedAction&quot; /&gt;.">L’<see cref="T:System.Xml.XmlNodeChangedAction" />opérateur</param>
    </member>
    <member name="P:System.Xml.XmlNodeChangedEventArgs.Action">
      <summary vsli:raw="Gets a value indicating what type of node change event is occurring.">Obtient une valeur indiquant le type d'événement de modification du nœud qui se produit.</summary>
      <returns vsli:raw="One of the enumeration values that describes the node change event. The &lt;see langword=&quot;Action&quot; /&gt; value does not differentiate between when the event occurred (before or after). You can create separate event handlers to handle both instances.">L’une des valeurs d’énumération qui décrit l’événement de modification de nœud. La valeur <see langword="Action" /> ne distingue pas le moment de l'exécution de l'action (avant ou après). Vous pouvez créer des gestionnaires d'événements distincts pour gérer les deux instances.</returns>
    </member>
    <member name="P:System.Xml.XmlNodeChangedEventArgs.NewParent">
      <summary vsli:raw="Gets the value of the &lt;see cref=&quot;P:System.Xml.XmlNode.ParentNode&quot; /&gt; after the operation completes.">Obtient la valeur de <see cref="P:System.Xml.XmlNode.ParentNode" /> une fois l'opération terminée.</summary>
      <returns vsli:raw="The value of the &lt;see langword=&quot;ParentNode&quot; /&gt; after the operation completes. This property returns &lt;see langword=&quot;null&quot; /&gt; if the node is being removed. For attribute nodes, this property returns the &lt;see cref=&quot;P:System.Xml.XmlAttribute.OwnerElement&quot; /&gt;.">Valeur de <see langword="ParentNode" /> une fois l'opération terminée. Cette propriété retourne <see langword="null" /> si le nœud est supprimé.  
  
 <block subset="none" type="note"><para>  
 Pour les nœuds d'attribut, cette propriété retourne <see cref="P:System.Xml.XmlAttribute.OwnerElement" />.</para></block></returns>
    </member>
    <member name="P:System.Xml.XmlNodeChangedEventArgs.NewValue">
      <summary vsli:raw="Gets the new value of the node.">Obtient la nouvelle valeur du nœud.</summary>
      <returns vsli:raw="The new value of the node. This property returns &lt;see langword=&quot;null&quot; /&gt; if the node is neither an attribute nor a text node, or if the node is being removed.  &#xA;  &#xA; If called in a &lt;see cref=&quot;E:System.Xml.XmlDocument.NodeChanging&quot; /&gt; event, &lt;see langword=&quot;NewValue&quot; /&gt; returns the value of the node if the change is successful. If called in a &lt;see cref=&quot;E:System.Xml.XmlDocument.NodeChanged&quot; /&gt; event, &lt;see langword=&quot;NewValue&quot; /&gt; returns the current value of the node.">Nouvelle valeur du nœud. Cette propriété retourne <see langword="null" /> si le nœud n'est ni un attribut ni un nœud de texte, ou si le nœud est supprimé.  
  
En cas d'appel dans un événement <see cref="E:System.Xml.XmlDocument.NodeChanging" />, <see langword="NewValue" /> retourne la valeur du nœud si la modification réussit. En cas d'appel dans un événement <see cref="E:System.Xml.XmlDocument.NodeChanged" />, <see langword="NewValue" /> retourne la valeur actuelle du nœud.</returns>
    </member>
    <member name="P:System.Xml.XmlNodeChangedEventArgs.Node">
      <summary vsli:raw="Gets the &lt;see cref=&quot;T:System.Xml.XmlNode&quot; /&gt; that is being added, removed or changed.">Obtient <see cref="T:System.Xml.XmlNode" /> qui est ajouté, supprimé ou modifié.</summary>
      <returns vsli:raw="The &lt;see langword=&quot;XmlNode&quot; /&gt; that is being added, removed or changed; this property never returns &lt;see langword=&quot;null&quot; /&gt;.">
        <see langword="XmlNode" /> ajouté, supprimé ou modifié ; cette propriété ne retourne jamais <see langword="null" />.</returns>
    </member>
    <member name="P:System.Xml.XmlNodeChangedEventArgs.OldParent">
      <summary vsli:raw="Gets the value of the &lt;see cref=&quot;P:System.Xml.XmlNode.ParentNode&quot; /&gt; before the operation began.">Obtient la valeur de <see cref="P:System.Xml.XmlNode.ParentNode" /> avant le début de l'opération.</summary>
      <returns vsli:raw="The value of the &lt;see langword=&quot;ParentNode&quot; /&gt; before the operation began. This property returns &lt;see langword=&quot;null&quot; /&gt; if the node did not have a parent. For attribute nodes, this property returns the &lt;see cref=&quot;P:System.Xml.XmlAttribute.OwnerElement&quot; /&gt;.">Valeur de <see langword="ParentNode" /> avant le début de l'opération. Cette propriété retourne <see langword="null" /> si le nœud n'a pas de parent.  
  
 <block subset="none" type="note"><para>  
 Pour les nœuds d'attribut, cette propriété retourne <see cref="P:System.Xml.XmlAttribute.OwnerElement" />.</para></block></returns>
    </member>
    <member name="P:System.Xml.XmlNodeChangedEventArgs.OldValue">
      <summary vsli:raw="Gets the original value of the node.">Obtient la valeur d'origine du nœud.</summary>
      <returns vsli:raw="The original value of the node. This property returns &lt;see langword=&quot;null&quot; /&gt; if the node is neither an attribute nor a text node, or if the node is being inserted.  &#xA;  &#xA; If called in a &lt;see cref=&quot;E:System.Xml.XmlDocument.NodeChanging&quot; /&gt; event, &lt;see langword=&quot;OldValue&quot; /&gt; returns the current value of the node that will be replaced if the change is successful. If called in a &lt;see cref=&quot;E:System.Xml.XmlDocument.NodeChanged&quot; /&gt; event, &lt;see langword=&quot;OldValue&quot; /&gt; returns the value of node prior to the change.">Valeur d'origine du nœud. Cette propriété retourne <see langword="null" /> si le nœud n'est ni un attribut ni un nœud de texte, ou si le nœud est en cours d'insertion.  
  
En cas d'appel dans un événement <see cref="E:System.Xml.XmlDocument.NodeChanging" />, <see langword="OldValue" /> retourne la valeur actuelle du nœud qui sera remplacée si la modification réussit. En cas d'appel dans un événement <see cref="E:System.Xml.XmlDocument.NodeChanged" />, <see langword="OldValue" /> retourne la valeur du nœud avant la modification.</returns>
    </member>
    <member name="T:System.Xml.XmlNodeChangedEventHandler">
      <summary vsli:raw="Represents the method that handles &lt;see cref=&quot;E:System.Xml.XmlDocument.NodeChanged&quot; /&gt;, &lt;see cref=&quot;E:System.Xml.XmlDocument.NodeChanging&quot; /&gt;, &lt;see cref=&quot;E:System.Xml.XmlDocument.NodeInserted&quot; /&gt;, &lt;see cref=&quot;E:System.Xml.XmlDocument.NodeInserting&quot; /&gt;, &lt;see cref=&quot;E:System.Xml.XmlDocument.NodeRemoved&quot; /&gt; and &lt;see cref=&quot;E:System.Xml.XmlDocument.NodeRemoving&quot; /&gt; events.">Représente la méthode qui gère les événements <see cref="E:System.Xml.XmlDocument.NodeChanged" />, <see cref="E:System.Xml.XmlDocument.NodeChanging" />, <see cref="E:System.Xml.XmlDocument.NodeInserted" />, <see cref="E:System.Xml.XmlDocument.NodeInserting" />, <see cref="E:System.Xml.XmlDocument.NodeRemoved" /> et <see cref="E:System.Xml.XmlDocument.NodeRemoving" />.</summary>
      <param name="sender" vsli:raw="The source of the event.">Source de l'événement.</param>
      <param name="e" vsli:raw="An &lt;see cref=&quot;T:System.Xml.XmlNodeChangedEventArgs&quot; /&gt; containing the event data.">
        <see cref="T:System.Xml.XmlNodeChangedEventArgs" /> qui contient les données d'événement.</param>
    </member>
    <member name="T:System.Xml.XmlNodeList">
      <summary vsli:raw="Represents an ordered collection of nodes.">Représente une collection ordonnée de nœuds.</summary>
    </member>
    <member name="M:System.Xml.XmlNodeList.#ctor">
      <summary vsli:raw="Initializes a new instance of the &lt;see cref=&quot;T:System.Xml.XmlNodeList&quot; /&gt; class.">Initialise une nouvelle instance de la classe <see cref="T:System.Xml.XmlNodeList" />.</summary>
    </member>
    <member name="M:System.Xml.XmlNodeList.GetEnumerator">
      <summary vsli:raw="Gets an enumerator that iterates through the collection of nodes.">Obtient un énumérateur qui itère au sein de la collection de nœuds.</summary>
      <returns vsli:raw="An enumerator used to iterate through the collection of nodes.">Énumérateur utilisé pour itérer au sein de la collection de nœuds.</returns>
    </member>
    <member name="M:System.Xml.XmlNodeList.Item(System.Int32)">
      <summary vsli:raw="Retrieves a node at the given index.">Récupère un nœud à l'index spécifié.</summary>
      <param name="index" vsli:raw="The zero-based index into the list of nodes.">Index de base zéro dans la liste de nœuds.</param>
      <returns vsli:raw="The &lt;see cref=&quot;T:System.Xml.XmlNode&quot; /&gt; with the specified index in the collection. If &lt;paramref name=&quot;index&quot; /&gt; is greater than or equal to the number of nodes in the list, this returns &lt;see langword=&quot;null&quot; /&gt;.">
        <see cref="T:System.Xml.XmlNode" /> avec l'index spécifié dans la collection. Si <paramref name="index" /> est supérieur ou égal au nombre de nœuds de la liste, cet état retourne <see langword="null" />.</returns>
    </member>
    <member name="M:System.Xml.XmlNodeList.PrivateDisposeNodeList">
      <summary vsli:raw="Disposes resources in the node list privately.">Supprime les ressources dans la liste de nœuds en privé.</summary>
    </member>
    <member name="M:System.Xml.XmlNodeList.System#IDisposable#Dispose">
      <summary vsli:raw="Releases all resources used by the &lt;see cref=&quot;T:System.Xml.XmlNodeList&quot; /&gt; class.">Libère toutes les ressources utilisées par la classe <see cref="T:System.Xml.XmlNodeList" />.</summary>
    </member>
    <member name="P:System.Xml.XmlNodeList.Count">
      <summary vsli:raw="Gets the number of nodes in the &lt;see langword=&quot;XmlNodeList&quot; /&gt;.">Obtient le nombre de nœuds dans le <see langword="XmlNodeList" />.</summary>
      <returns vsli:raw="The number of nodes in the &lt;see langword=&quot;XmlNodeList&quot; /&gt;.">Nombre de nœuds dans le <see langword="XmlNodeList" />.</returns>
    </member>
    <member name="P:System.Xml.XmlNodeList.ItemOf(System.Int32)">
      <summary vsli:raw="Gets a node at the given index.">Obtient un nœud à l'index spécifié.</summary>
      <param name="i" vsli:raw="The zero-based index into the list of nodes.">Index de base zéro dans la liste de nœuds.</param>
      <returns vsli:raw="The &lt;see cref=&quot;T:System.Xml.XmlNode&quot; /&gt; with the specified index in the collection. If index is greater than or equal to the number of nodes in the list, this returns &lt;see langword=&quot;null&quot; /&gt;.">
        <see cref="T:System.Xml.XmlNode" /> avec l'index spécifié dans la collection. Si l'index est supérieur ou égal au nombre de nœuds de la liste, cet état retourne <see langword="null" />.</returns>
    </member>
    <member name="T:System.Xml.XmlNodeOrder">
      <summary vsli:raw="Describes the document order of a node compared to a second node.">Décrit l'ordre des documents dans un nœud comparé à un second nœud.</summary>
    </member>
    <member name="F:System.Xml.XmlNodeOrder.After">
      <summary vsli:raw="The current node of this navigator is after the current node of the supplied navigator.">Le nœud actuel de ce navigateur se situe après le nœud actuel du navigateur fourni.</summary>
    </member>
    <member name="F:System.Xml.XmlNodeOrder.Before">
      <summary vsli:raw="The current node of this navigator is before the current node of the supplied navigator.">Le nœud actuel de ce navigateur se situe avant le nœud actuel du navigateur fourni.</summary>
    </member>
    <member name="F:System.Xml.XmlNodeOrder.Same">
      <summary vsli:raw="The two navigators are positioned on the same node.">Les deux navigateurs sont placés sur le même nœud.</summary>
    </member>
    <member name="F:System.Xml.XmlNodeOrder.Unknown">
      <summary vsli:raw="The node positions cannot be determined in document order, relative to each other. This could occur if the two nodes reside in different trees.">La position des nœuds ne peut pas être déterminée dans l'ordre des documents, les uns par rapport aux autres. Cela peut se produire si les deux nœuds résident dans des arborescences différentes.</summary>
    </member>
    <member name="T:System.Xml.XmlNodeReader">
      <summary vsli:raw="Represents a reader that provides fast, non-cached forward only access to XML data in an &lt;see cref=&quot;T:System.Xml.XmlNode&quot; /&gt;.">Représente un lecteur fournissant un accès aux données XML par un flux rapide, non mis en cache et avant uniquement dans <see cref="T:System.Xml.XmlNode" />.</summary>
    </member>
    <member name="M:System.Xml.XmlNodeReader.#ctor(System.Xml.XmlNode)">
      <summary vsli:raw="Creates an instance of the &lt;see langword=&quot;XmlNodeReader&quot; /&gt; class using the specified &lt;see cref=&quot;T:System.Xml.XmlNode&quot; /&gt;.">Crée une instance de la classe <see langword="XmlNodeReader" /> à l'aide du <see cref="T:System.Xml.XmlNode" /> spécifié.</summary>
      <param name="node" vsli:raw="The &lt;see langword=&quot;XmlNode&quot; /&gt; you want to read.">
        <see langword="XmlNode" /> à lire.</param>
    </member>
    <member name="M:System.Xml.XmlNodeReader.Close">
      <summary vsli:raw="Changes the &lt;see cref=&quot;P:System.Xml.XmlNodeReader.ReadState&quot; /&gt; to &lt;see langword=&quot;Closed&quot; /&gt;.">Modifie <see cref="P:System.Xml.XmlNodeReader.ReadState" /> en lui attribuant la valeur <see langword="Closed" />.</summary>
    </member>
    <member name="M:System.Xml.XmlNodeReader.GetAttribute(System.Int32)">
      <summary vsli:raw="Gets the value of the attribute with the specified index.">Obtient la valeur de l'attribut avec l'index spécifié.</summary>
      <param name="attributeIndex" vsli:raw="The index of the attribute. The index is zero-based. (The first attribute has index 0.)">Index de l'attribut. L'index est de base zéro. Le premier attribut possède l'index 0.</param>
      <exception cref="T:System.ArgumentOutOfRangeException" vsli:raw="The &lt;paramref name=&quot;i&quot; /&gt; parameter is less than 0 or greater than or equal to &lt;see cref=&quot;P:System.Xml.XmlNodeReader.AttributeCount&quot; /&gt;.">Le paramètre <paramref name="i" /> est inférieur à 0 ou encore supérieur ou égal à <see cref="P:System.Xml.XmlNodeReader.AttributeCount" />.</exception>
      <returns vsli:raw="The value of the specified attribute.">Valeur de l'attribut spécifié.</returns>
    </member>
    <member name="M:System.Xml.XmlNodeReader.GetAttribute(System.String)">
      <summary vsli:raw="Gets the value of the attribute with the specified name.">Obtient la valeur de l'attribut avec le nom spécifié.</summary>
      <param name="name" vsli:raw="The qualified name of the attribute.">Nom qualifié de l'attribut.</param>
      <returns vsli:raw="The value of the specified attribute. If the attribute is not found, &lt;see langword=&quot;null&quot; /&gt; is returned.">Valeur de l'attribut spécifié. Si l'attribut est introuvable, <see langword="null" /> est retourné.</returns>
    </member>
    <member name="M:System.Xml.XmlNodeReader.GetAttribute(System.String,System.String)">
      <summary vsli:raw="Gets the value of the attribute with the specified local name and namespace URI.">Obtient la valeur de l'attribut avec le nom local et l'URI de l'espace de noms spécifiés.</summary>
      <param name="name" vsli:raw="The local name of the attribute.">Le nom local de l'attribut.</param>
      <param name="namespaceURI" vsli:raw="The namespace URI of the attribute.">L'URI de l'espace de noms de l'attribut.</param>
      <returns vsli:raw="The value of the specified attribute. If the attribute is not found, &lt;see langword=&quot;null&quot; /&gt; is returned.">Valeur de l'attribut spécifié. Si l'attribut est introuvable, <see langword="null" /> est retourné.</returns>
    </member>
    <member name="M:System.Xml.XmlNodeReader.LookupNamespace(System.String)">
      <summary vsli:raw="Resolves a namespace prefix in the current element's scope.">Résout un préfixe de l'espace de noms dans la portée de l'élément actuel.</summary>
      <param name="prefix" vsli:raw="The prefix whose namespace URI you want to resolve. To match the default namespace, pass an empty string. This string does not have to be atomized.">Préfixe dont vous souhaitez résoudre l'URI de l'espace de noms. Pour établir une correspondance avec l'espace de noms par défaut, passez une chaîne vide. Il n'est pas nécessaire d'atomiser cette chaîne.</param>
      <returns vsli:raw="The namespace URI to which the prefix maps or &lt;see langword=&quot;null&quot; /&gt; if no matching prefix is found.">URI de l'espace de noms vers lequel le préfixe est mappé ou <see langword="null" /> si aucun préfixe correspondant n'est trouvé.</returns>
    </member>
    <member name="M:System.Xml.XmlNodeReader.MoveToAttribute(System.Int32)">
      <summary vsli:raw="Moves to the attribute with the specified index.">Se déplace vers l'attribut avec l'index spécifié.</summary>
      <param name="attributeIndex" vsli:raw="The index of the attribute.">Index de l'attribut.</param>
      <exception cref="T:System.ArgumentOutOfRangeException" vsli:raw="The &lt;paramref name=&quot;i&quot; /&gt; parameter is less than 0 or greater than or equal to &lt;see cref=&quot;P:System.Xml.XmlReader.AttributeCount&quot; /&gt;.">Le paramètre <paramref name="i" /> est inférieur à 0 ou encore supérieur ou égal à <see cref="P:System.Xml.XmlReader.AttributeCount" />.</exception>
    </member>
    <member name="M:System.Xml.XmlNodeReader.MoveToAttribute(System.String)">
      <summary vsli:raw="Moves to the attribute with the specified name.">Se déplace vers l'attribut avec le nom spécifié.</summary>
      <param name="name" vsli:raw="The qualified name of the attribute.">Nom qualifié de l'attribut.</param>
      <returns vsli:raw="&lt;see langword=&quot;true&quot; /&gt; if the attribute is found; otherwise, &lt;see langword=&quot;false&quot; /&gt;. If &lt;see langword=&quot;false&quot; /&gt;, the reader's position does not change.">
        <see langword="true" /> si l'attribut est trouvé ; sinon, <see langword="false" />. Si la valeur est <see langword="false" />, la position du lecteur ne change pas.</returns>
    </member>
    <member name="M:System.Xml.XmlNodeReader.MoveToAttribute(System.String,System.String)">
      <summary vsli:raw="Moves to the attribute with the specified local name and namespace URI.">Se déplace vers l'attribut avec le nom local et l'URI d'espace de noms spécifiés.</summary>
      <param name="name" vsli:raw="The local name of the attribute.">Le nom local de l'attribut.</param>
      <param name="namespaceURI" vsli:raw="The namespace URI of the attribute.">L'URI de l'espace de noms de l'attribut.</param>
      <returns vsli:raw="&lt;see langword=&quot;true&quot; /&gt; if the attribute is found; otherwise, &lt;see langword=&quot;false&quot; /&gt;. If &lt;see langword=&quot;false&quot; /&gt;, the reader's position does not change.">
        <see langword="true" /> si l'attribut est trouvé ; sinon, <see langword="false" />. Si la valeur est <see langword="false" />, la position du lecteur ne change pas.</returns>
    </member>
    <member name="M:System.Xml.XmlNodeReader.MoveToElement">
      <summary vsli:raw="Moves to the element that contains the current attribute node.">Se déplace vers l'élément contenant le nœud d'attribut actuel.</summary>
      <returns vsli:raw="&lt;see langword=&quot;true&quot; /&gt; if the reader is positioned on an attribute (the reader moves to the element that owns the attribute); &lt;see langword=&quot;false&quot; /&gt; if the reader is not positioned on an attribute (the position of the reader does not change).">
        <see langword="true" /> si le lecteur est placé sur un attribut (le lecteur se déplace vers l'élément qui possède l'attribut) ; <see langword="false" /> si le lecteur n'est pas placé sur un attribut (la position du lecteur ne change pas).</returns>
    </member>
    <member name="M:System.Xml.XmlNodeReader.MoveToFirstAttribute">
      <summary vsli:raw="Moves to the first attribute.">Effectue un déplacement vers le premier attribut.</summary>
      <returns vsli:raw="&lt;see langword=&quot;true&quot; /&gt; if an attribute exists (the reader moves to the first attribute); otherwise, &lt;see langword=&quot;false&quot; /&gt; (the position of the reader does not change).">
        <see langword="true" /> si un attribut existe (le lecteur se déplace vers le premier attribut) ; sinon, <see langword="false" /> (la position du lecteur ne change pas).</returns>
    </member>
    <member name="M:System.Xml.XmlNodeReader.MoveToNextAttribute">
      <summary vsli:raw="Moves to the next attribute.">Effectue un déplacement vers l'attribut suivant.</summary>
      <returns vsli:raw="&lt;see langword=&quot;true&quot; /&gt; if there is a next attribute; &lt;see langword=&quot;false&quot; /&gt; if there are no more attributes.">
        <see langword="true" /> s'il existe un attribut suivant ; <see langword="false" /> s'il n'existe plus d'attributs.</returns>
    </member>
    <member name="M:System.Xml.XmlNodeReader.Read">
      <summary vsli:raw="Reads the next node from the stream.">Lit le nœud suivant du flux.</summary>
      <returns vsli:raw="&lt;see langword=&quot;true&quot; /&gt; if the next node was read successfully; &lt;see langword=&quot;false&quot; /&gt; if there are no more nodes to read.">
        <see langword="true" /> si le nœud suivant a été lu correctement ; <see langword="false" /> s'il n'y a plus de nœuds à lire.</returns>
    </member>
    <member name="M:System.Xml.XmlNodeReader.ReadAttributeValue">
      <summary vsli:raw="Parses the attribute value into one or more &lt;see langword=&quot;Text&quot; /&gt;, &lt;see langword=&quot;EntityReference&quot; /&gt;, or &lt;see langword=&quot;EndEntity&quot; /&gt; nodes.">Analyse la valeur d'attribut selon un ou plusieurs nœuds <see langword="Text" />, <see langword="EntityReference" /> ou <see langword="EndEntity" />.</summary>
      <returns vsli:raw="&lt;see langword=&quot;true&quot; /&gt; if there are nodes to return.  &#xA;  &#xA; &lt;see langword=&quot;false&quot; /&gt; if the reader is not positioned on an attribute node when the initial call is made or if all the attribute values have been read.  &#xA;  &#xA; An empty attribute, such as, &lt;c&gt;misc=&quot;&quot;&lt;/c&gt;, returns &lt;see langword=&quot;true&quot; /&gt; with a single node with a value of String.Empty.">
        <see langword="true" /> s'il y a des nœuds à retourner.  
  
 <see langword="false" /> si le lecteur n'est pas placé sur un nœud d'attribut quand l'appel initial est effectué ou si toutes les valeurs d'attributs ont été lues.  
  
Un attribut vide, tel que <c>misc=""</c>, retourne <see langword="true" /> avec un nœud unique et la valeur String.Empty.</returns>
    </member>
    <member name="M:System.Xml.XmlNodeReader.ReadContentAsBase64(System.Byte[],System.Int32,System.Int32)">
      <summary vsli:raw="Reads the content and returns the Base64 decoded binary bytes.">Lit le contenu et retourne les octets binaires décodés au format Base64.</summary>
      <param name="buffer" vsli:raw="The buffer into which to copy the resulting text. This value cannot be &lt;see langword=&quot;null&quot; /&gt;.">Mémoire tampon dans laquelle copier le texte obtenu. Cette valeur ne peut pas être <see langword="null" />.</param>
      <param name="index" vsli:raw="The offset into the buffer where to start copying the result.">Offset de la mémoire tampon où commence la copie du résultat.</param>
      <param name="count" vsli:raw="The maximum number of bytes to copy into the buffer. The actual number of bytes copied is returned from this method.">Nombre maximal d'octets à copier dans la mémoire tampon. Le nombre réel d'octets copiés est retourné à partir de cette méthode.</param>
      <exception cref="T:System.ArgumentNullException" vsli:raw="The &lt;paramref name=&quot;buffer&quot; /&gt; value is &lt;see langword=&quot;null&quot; /&gt;.">
        <paramref name="buffer" /> a la valeur <see langword="null" />.</exception>
      <exception cref="T:System.InvalidOperationException" vsli:raw="&lt;see cref=&quot;M:System.Xml.XmlNodeReader.ReadContentAsBase64(System.Byte[],System.Int32,System.Int32)&quot; /&gt; is not supported on the current node.">
        <see cref="M:System.Xml.XmlNodeReader.ReadContentAsBase64(System.Byte[],System.Int32,System.Int32)" /> n'est pas pris en charge sur le nœud actuel.</exception>
      <exception cref="T:System.ArgumentOutOfRangeException" vsli:raw="The index into the buffer or index + count is larger than the allocated buffer size.">L'index de la mémoire tampon (ou l'index augmenté de la valeur du paramètre count) est supérieur à la taille de la mémoire tampon allouée.</exception>
      <returns vsli:raw="The number of bytes written to the buffer.">Nombre d'octets écrits dans la mémoire tampon.</returns>
    </member>
    <member name="M:System.Xml.XmlNodeReader.ReadContentAsBinHex(System.Byte[],System.Int32,System.Int32)">
      <summary vsli:raw="Reads the content and returns the BinHex decoded binary bytes.">Lit le contenu et retourne les octets binaires décodés au format BinHex.</summary>
      <param name="buffer" vsli:raw="The buffer into which to copy the resulting text. This value cannot be &lt;see langword=&quot;null&quot; /&gt;.">Mémoire tampon dans laquelle copier le texte obtenu. Cette valeur ne peut pas être <see langword="null" />.</param>
      <param name="index" vsli:raw="The offset into the buffer where to start copying the result.">Offset de la mémoire tampon où commence la copie du résultat.</param>
      <param name="count" vsli:raw="The maximum number of bytes to copy into the buffer. The actual number of bytes copied is returned from this method.">Nombre maximal d'octets à copier dans la mémoire tampon. Le nombre réel d'octets copiés est retourné à partir de cette méthode.</param>
      <exception cref="T:System.ArgumentNullException" vsli:raw="The &lt;paramref name=&quot;buffer&quot; /&gt; value is &lt;see langword=&quot;null&quot; /&gt;.">
        <paramref name="buffer" /> a la valeur <see langword="null" />.</exception>
      <exception cref="T:System.InvalidOperationException" vsli:raw="&lt;see cref=&quot;M:System.Xml.XmlNodeReader.ReadContentAsBinHex(System.Byte[],System.Int32,System.Int32)&quot; /&gt; is not supported on the current node.">
        <see cref="M:System.Xml.XmlNodeReader.ReadContentAsBinHex(System.Byte[],System.Int32,System.Int32)" /> n'est pas pris en charge sur le nœud actuel.</exception>
      <exception cref="T:System.ArgumentOutOfRangeException" vsli:raw="The index into the buffer or index + count is larger than the allocated buffer size.">L'index de la mémoire tampon (ou l'index augmenté de la valeur du paramètre count) est supérieur à la taille de la mémoire tampon allouée.</exception>
      <returns vsli:raw="The number of bytes written to the buffer.">Nombre d'octets écrits dans la mémoire tampon.</returns>
    </member>
    <member name="M:System.Xml.XmlNodeReader.ReadElementContentAsBase64(System.Byte[],System.Int32,System.Int32)">
      <summary vsli:raw="Reads the element and decodes the Base64 content.">Lit l'élément et décode le contenu Base64.</summary>
      <param name="buffer" vsli:raw="The buffer into which to copy the resulting text. This value cannot be &lt;see langword=&quot;null&quot; /&gt;.">Mémoire tampon dans laquelle copier le texte obtenu. Cette valeur ne peut pas être <see langword="null" />.</param>
      <param name="index" vsli:raw="The offset into the buffer where to start copying the result.">Offset de la mémoire tampon où commence la copie du résultat.</param>
      <param name="count" vsli:raw="The maximum number of bytes to copy into the buffer. The actual number of bytes copied is returned from this method.">Nombre maximal d'octets à copier dans la mémoire tampon. Le nombre réel d'octets copiés est retourné à partir de cette méthode.</param>
      <exception cref="T:System.ArgumentNullException" vsli:raw="The &lt;paramref name=&quot;buffer&quot; /&gt; value is &lt;see langword=&quot;null&quot; /&gt;.">
        <paramref name="buffer" /> a la valeur <see langword="null" />.</exception>
      <exception cref="T:System.InvalidOperationException" vsli:raw="The current node is not an element node.">Le nœud actuel n'est pas un nœud d'élément.</exception>
      <exception cref="T:System.ArgumentOutOfRangeException" vsli:raw="The index into the buffer or index + count is larger than the allocated buffer size.">L'index de la mémoire tampon (ou l'index augmenté de la valeur du paramètre count) est supérieur à la taille de la mémoire tampon allouée.</exception>
      <exception cref="T:System.Xml.XmlException" vsli:raw="The element contains mixed content.">L'élément contient le contenu mixte.</exception>
      <exception cref="T:System.FormatException" vsli:raw="The content cannot be converted to the requested type.">Impossible de convertir le contenu en type demandé.</exception>
      <returns vsli:raw="The number of bytes written to the buffer.">Nombre d'octets écrits dans la mémoire tampon.</returns>
    </member>
    <member name="M:System.Xml.XmlNodeReader.ReadElementContentAsBinHex(System.Byte[],System.Int32,System.Int32)">
      <summary vsli:raw="Reads the element and decodes the BinHex content.">Lit l'élément et décode le contenu BinHex.</summary>
      <param name="buffer" vsli:raw="The buffer into which to copy the resulting text. This value cannot be &lt;see langword=&quot;null&quot; /&gt;.">Mémoire tampon dans laquelle copier le texte obtenu. Cette valeur ne peut pas être <see langword="null" />.</param>
      <param name="index" vsli:raw="The offset into the buffer where to start copying the result.">Offset de la mémoire tampon où commence la copie du résultat.</param>
      <param name="count" vsli:raw="The maximum number of bytes to copy into the buffer. The actual number of bytes copied is returned from this method.">Nombre maximal d'octets à copier dans la mémoire tampon. Le nombre réel d'octets copiés est retourné à partir de cette méthode.</param>
      <exception cref="T:System.ArgumentNullException" vsli:raw="The &lt;paramref name=&quot;buffer&quot; /&gt; value is &lt;see langword=&quot;null&quot; /&gt;.">
        <paramref name="buffer" /> a la valeur <see langword="null" />.</exception>
      <exception cref="T:System.InvalidOperationException" vsli:raw="The current node is not an element node.">Le nœud actuel n'est pas un nœud d'élément.</exception>
      <exception cref="T:System.ArgumentOutOfRangeException" vsli:raw="The index into the buffer or index + count is larger than the allocated buffer size.">L'index de la mémoire tampon (ou l'index augmenté de la valeur du paramètre count) est supérieur à la taille de la mémoire tampon allouée.</exception>
      <exception cref="T:System.Xml.XmlException" vsli:raw="The element contains mixed content.">L'élément contient le contenu mixte.</exception>
      <exception cref="T:System.FormatException" vsli:raw="The content cannot be converted to the requested type.">Impossible de convertir le contenu en type demandé.</exception>
      <returns vsli:raw="The number of bytes written to the buffer.">Nombre d'octets écrits dans la mémoire tampon.</returns>
    </member>
    <member name="M:System.Xml.XmlNodeReader.ReadString">
      <summary vsli:raw="Reads the contents of an element or text node as a string.">Lit le contenu d'un nœud d'élément ou de texte sous forme de chaîne.</summary>
      <returns vsli:raw="The contents of the element or text-like node (This can include CDATA, Text nodes, and so on). This can be an empty string if the reader is positioned on something other than an element or text node, or if there is no more text content to return in the current context.  &#xA;  &#xA; &lt;see langword=&quot;Note:&quot; /&gt; The text node can be either an element or an attribute text node.">Contenu d'un nœud d'élément ou de texte (il peut inclure des nœuds CDATA, Text, etc.). Il peut s'agir d'une chaîne vide si le lecteur est placé sur autre chose qu'un nœud d'élément ou de texte, ou s'il n'existe plus de texte à retourner dans le contexte actuel.  
  
 <see langword="Note:" /> Le nœud de texte peut être un élément ou un nœud de texte d'attribut.</returns>
    </member>
    <member name="M:System.Xml.XmlNodeReader.ResolveEntity">
      <summary vsli:raw="Resolves the entity reference for &lt;see langword=&quot;EntityReference&quot; /&gt; nodes.">Résout la référence d'entité pour les nœuds <see langword="EntityReference" />.</summary>
      <exception cref="T:System.InvalidOperationException" vsli:raw="The reader is not positioned on an &lt;see langword=&quot;EntityReference&quot; /&gt; node.">Le lecteur n'est pas placé sur un nœud <see langword="EntityReference" />.</exception>
    </member>
    <member name="M:System.Xml.XmlNodeReader.Skip">
      <summary vsli:raw="Skips the children of the current node.">Ignore les enfants du nœud actuel.</summary>
    </member>
    <member name="M:System.Xml.XmlNodeReader.System#Xml#IXmlNamespaceResolver#GetNamespacesInScope(System.Xml.XmlNamespaceScope)">
      <summary vsli:raw="For a description of this member, see &lt;see cref=&quot;M:System.Xml.IXmlNamespaceResolver.GetNamespacesInScope(System.Xml.XmlNamespaceScope)&quot; /&gt;.">Pour obtenir une description de ce membre, consultez <see cref="M:System.Xml.IXmlNamespaceResolver.GetNamespacesInScope(System.Xml.XmlNamespaceScope)" />.</summary>
      <param name="scope" vsli:raw="&lt;see cref=&quot;T:System.Xml.XmlNamespaceScope&quot; /&gt; object.">Objet <see cref="T:System.Xml.XmlNamespaceScope" />.</param>
      <returns vsli:raw="&lt;see cref=&quot;T:System.Collections.IDictionary&quot; /&gt; object that contains the namespaces that are in scope.">Objet <see cref="T:System.Collections.IDictionary" /> qui contient les espaces de noms qui sont dans la portée.</returns>
    </member>
    <member name="M:System.Xml.XmlNodeReader.System#Xml#IXmlNamespaceResolver#LookupNamespace(System.String)">
      <summary vsli:raw="For a description of this member, see &lt;see cref=&quot;M:System.Xml.IXmlNamespaceResolver.LookupNamespace(System.String)&quot; /&gt;.">Pour obtenir une description de ce membre, consultez <see cref="M:System.Xml.IXmlNamespaceResolver.LookupNamespace(System.String)" />.</summary>
      <param name="prefix" vsli:raw="&lt;see cref=&quot;T:System.String&quot; /&gt; that contains the namespace prefix.">
        <see cref="T:System.String" /> qui contient le préfixe d'espace de noms.</param>
      <returns vsli:raw="&lt;see cref=&quot;T:System.String&quot; /&gt; that contains the namespace name.">
        <see cref="T:System.String" /> qui contient le nom d'espace de noms.</returns>
    </member>
    <member name="M:System.Xml.XmlNodeReader.System#Xml#IXmlNamespaceResolver#LookupPrefix(System.String)">
      <summary vsli:raw="For a description of this member, see &lt;see cref=&quot;M:System.Xml.IXmlNamespaceResolver.LookupPrefix(System.String)&quot; /&gt;.">Pour obtenir une description de ce membre, consultez <see cref="M:System.Xml.IXmlNamespaceResolver.LookupPrefix(System.String)" />.</summary>
      <param name="namespaceName" vsli:raw="&lt;see cref=&quot;T:System.String&quot; /&gt; object that identifies the namespace.">Objet <see cref="T:System.String" /> qui identifie l'espace de noms.</param>
      <returns vsli:raw="&lt;see cref=&quot;T:System.String&quot; /&gt; object that contains the namespace prefix.">Objet <see cref="T:System.String" /> qui contient le préfixe d'espace de noms.</returns>
    </member>
    <member name="P:System.Xml.XmlNodeReader.AttributeCount">
      <summary vsli:raw="Gets the number of attributes on the current node.">Obtient le nombre d'attributs du nœud actuel.</summary>
      <returns vsli:raw="The number of attributes on the current node. This number includes default attributes.">Nombre d'attributs du nœud actuel. Ce nombre inclut les attributs par défaut.</returns>
    </member>
    <member name="P:System.Xml.XmlNodeReader.BaseURI">
      <summary vsli:raw="Gets the base URI of the current node.">Obtient l'URI de base du nœud actuel.</summary>
      <returns vsli:raw="The base URI of the current node.">URI de base du nœud actuel.</returns>
    </member>
    <member name="P:System.Xml.XmlNodeReader.CanReadBinaryContent">
      <summary vsli:raw="Gets a value indicating whether the &lt;see cref=&quot;T:System.Xml.XmlNodeReader&quot; /&gt; implements the binary content read methods.">Obtient une valeur indiquant si <see cref="T:System.Xml.XmlNodeReader" /> implémente les méthodes de lecture de contenu binaire.</summary>
      <returns vsli:raw="&lt;see langword=&quot;true&quot; /&gt; if the binary content read methods are implemented; otherwise &lt;see langword=&quot;false&quot; /&gt;. The &lt;see cref=&quot;T:System.Xml.XmlNodeReader&quot; /&gt; class always returns &lt;see langword=&quot;true&quot; /&gt;.">
        <see langword="true" /> si les méthodes de lecture de contenu binaire sont implémentées ; sinon, <see langword="false" />. La classe <see cref="T:System.Xml.XmlNodeReader" /> retourne toujours <see langword="true" />.</returns>
    </member>
    <member name="P:System.Xml.XmlNodeReader.CanResolveEntity">
      <summary vsli:raw="Gets a value indicating whether this reader can parse and resolve entities.">Obtient une valeur indiquant si ce lecteur peut analyser et résoudre les entités.</summary>
      <returns vsli:raw="&lt;see langword=&quot;true&quot; /&gt; if the reader can parse and resolve entities; otherwise, &lt;see langword=&quot;false&quot; /&gt;. &lt;see langword=&quot;XmlNodeReader&quot; /&gt; always returns &lt;see langword=&quot;true&quot; /&gt;.">
        <see langword="true" /> si le lecteur peut analyser et résoudre les entités ; sinon, <see langword="false" />. <see langword="XmlNodeReader" /> retourne toujours <see langword="true" />.</returns>
    </member>
    <member name="P:System.Xml.XmlNodeReader.Depth">
      <summary vsli:raw="Gets the depth of the current node in the XML document.">Obtient la profondeur du nœud actuel dans le document XML.</summary>
      <returns vsli:raw="The depth of the current node in the XML document.">Profondeur du nœud actuel dans le document XML.</returns>
    </member>
    <member name="P:System.Xml.XmlNodeReader.EOF">
      <summary vsli:raw="Gets a value indicating whether the reader is positioned at the end of the stream.">Obtient une valeur indiquant si le lecteur est placé à la fin du flux.</summary>
      <returns vsli:raw="&lt;see langword=&quot;true&quot; /&gt; if the reader is positioned at the end of the stream; otherwise, &lt;see langword=&quot;false&quot; /&gt;.">
        <see langword="true" /> si le lecteur est placé à la fin du flux ; sinon, <see langword="false" />.</returns>
    </member>
    <member name="P:System.Xml.XmlNodeReader.HasAttributes">
      <summary vsli:raw="Gets a value indicating whether the current node has any attributes.">Obtient une valeur indiquant si le nœud actuel a des attributs.</summary>
      <returns vsli:raw="&lt;see langword=&quot;true&quot; /&gt; if the current node has attributes; otherwise, &lt;see langword=&quot;false&quot; /&gt;.">
        <see langword="true" /> si le nœud actuel possède des attributs ; sinon, <see langword="false" />.</returns>
    </member>
    <member name="P:System.Xml.XmlNodeReader.HasValue">
      <summary vsli:raw="Gets a value indicating whether the current node can have a &lt;see cref=&quot;P:System.Xml.XmlNodeReader.Value&quot; /&gt;.">Obtient une valeur indiquant si le nœud actuel possède <see cref="P:System.Xml.XmlNodeReader.Value" />.</summary>
      <returns vsli:raw="&lt;see langword=&quot;true&quot; /&gt; if the node on which the reader is currently positioned can have a &lt;see langword=&quot;Value&quot; /&gt;; otherwise, &lt;see langword=&quot;false&quot; /&gt;.">
        <see langword="true" /> si le nœud sur lequel le lecteur est placé actuellement peut avoir un <see langword="Value" /> ; sinon, <see langword="false" />.</returns>
    </member>
    <member name="P:System.Xml.XmlNodeReader.IsDefault">
      <summary vsli:raw="Gets a value indicating whether the current node is an attribute that was generated from the default value defined in the document type definition (DTD) or schema.">Obtient une valeur indiquant si le nœud actuel est un attribut généré à partir de la valeur par défaut définie dans la définition de type de document (DTD) ou le schéma.</summary>
      <returns vsli:raw="&lt;see langword=&quot;true&quot; /&gt; if the current node is an attribute whose value was generated from the default value defined in the DTD or schema; &lt;see langword=&quot;false&quot; /&gt; if the attribute value was explicitly set.">
        <see langword="true" /> si le nœud actuel est un attribut dont la valeur a été générée à partir de la valeur par défaut définie dans le DTD ou le schéma ; <see langword="false" /> si la valeur d'attribut a été définie explicitement.</returns>
    </member>
    <member name="P:System.Xml.XmlNodeReader.IsEmptyElement">
      <summary vsli:raw="Gets a value indicating whether the current node is an empty element (for example, &lt;c&gt;&amp;lt;MyElement/&amp;gt;&lt;/c&gt;).">Obtient une valeur indiquant si le nœud actuel est un élément vide (par exemple, <c>&lt;MyElement/&gt;</c>).</summary>
      <returns vsli:raw="&lt;see langword=&quot;true&quot; /&gt; if the current node is an element (&lt;see cref=&quot;P:System.Xml.XmlNodeReader.NodeType&quot; /&gt; equals &lt;see langword=&quot;XmlNodeType.Element&quot; /&gt;) and it ends with &lt;c&gt;/&amp;gt;&lt;/c&gt;; otherwise, &lt;see langword=&quot;false&quot; /&gt;.">
        <see langword="true" /> Si le nœud actuel est un élément ( <see cref="P:System.Xml.XmlNodeReader.NodeType" /> est égal <see langword="XmlNodeType.Element" /> à) et qu’il se termine par <c>/&gt;</c> ; sinon, <see langword="false" /> .</returns>
    </member>
    <member name="P:System.Xml.XmlNodeReader.LocalName">
      <summary vsli:raw="Gets the local name of the current node.">Obtient le nom local du nœud actuel.</summary>
      <returns vsli:raw="The name of the current node with the prefix removed. For example, &lt;see langword=&quot;LocalName&quot; /&gt; is &lt;see langword=&quot;book&quot; /&gt; for the element &lt;c&gt;&amp;lt;bk:book&amp;gt;&lt;/c&gt;.  &#xA;  &#xA; For node types that do not have a name (like &lt;see langword=&quot;Text&quot; /&gt;, &lt;see langword=&quot;Comment&quot; /&gt;, and so on), this property returns String.Empty.">Nom du nœud actuel dont le préfixe est supprimé. Par exemple, <see langword="LocalName" /> est <see langword="book" /> pour l’élément <c> &lt; BK : Book &gt; </c>.  
  
Pour les types de nœuds qui n'ont pas de nom (par exemple <see langword="Text" />, <see langword="Comment" />, etc.), cette propriété retourne String.Empty.</returns>
    </member>
    <member name="P:System.Xml.XmlNodeReader.Name">
      <summary vsli:raw="Gets the qualified name of the current node.">Obtient le nom qualifié du nœud actuel.</summary>
      <returns vsli:raw="The qualified name of the current node. For example, &lt;see langword=&quot;Name&quot; /&gt; is &lt;see langword=&quot;bk:book&quot; /&gt; for the element &lt;c&gt;&amp;lt;bk:book&amp;gt;&lt;/c&gt;.  &#xA;  &#xA; The name returned is dependent on the &lt;see cref=&quot;P:System.Xml.XmlNodeReader.NodeType&quot; /&gt; of the node. The following node types return the listed values. All other node types return an empty string.  &#xA;  &#xA; &lt;list type=&quot;table&quot;&gt;&lt;listheader&gt;&lt;term&gt; Node Type&lt;/term&gt;&lt;description&gt; Name&lt;/description&gt;&lt;/listheader&gt;&lt;item&gt;&lt;term&gt;&lt;see langword=&quot;Attribute&quot; /&gt;&lt;/term&gt;&lt;description&gt; The name of the attribute.&lt;/description&gt;&lt;/item&gt;&lt;item&gt;&lt;term&gt;&lt;see langword=&quot;DocumentType&quot; /&gt;&lt;/term&gt;&lt;description&gt; The document type name.&lt;/description&gt;&lt;/item&gt;&lt;item&gt;&lt;term&gt;&lt;see langword=&quot;Element&quot; /&gt;&lt;/term&gt;&lt;description&gt; The tag name.&lt;/description&gt;&lt;/item&gt;&lt;item&gt;&lt;term&gt;&lt;see langword=&quot;EntityReference&quot; /&gt;&lt;/term&gt;&lt;description&gt; The name of the entity referenced.&lt;/description&gt;&lt;/item&gt;&lt;item&gt;&lt;term&gt;&lt;see langword=&quot;ProcessingInstruction&quot; /&gt;&lt;/term&gt;&lt;description&gt; The target of the processing instruction.&lt;/description&gt;&lt;/item&gt;&lt;item&gt;&lt;term&gt;&lt;see langword=&quot;XmlDeclaration&quot; /&gt;&lt;/term&gt;&lt;description&gt; The literal string &lt;see langword=&quot;xml&quot; /&gt;.&lt;/description&gt;&lt;/item&gt;&lt;/list&gt;">Nom qualifié du nœud actuel. Par exemple, <see langword="Name" /> est <see langword="bk:book" /> pour l’élément <c> &lt; BK : Book &gt; </c>.  
  
Le nom retourné dépend du <see cref="P:System.Xml.XmlNodeReader.NodeType" /> du nœud. Les types de nœuds suivants retournent les valeurs répertoriées. Tous les autres types de nœuds retournent une chaîne vide.  
  
 <list type="table"><listheader><term> Type de nœud</term><description> Name</description></listheader><item><term><see langword="Attribute" /></term><description> Nom de l'attribut.</description></item><item><term><see langword="DocumentType" /></term><description> Nom du type de document.</description></item><item><term><see langword="Element" /></term><description> Nom de la balise.</description></item><item><term><see langword="EntityReference" /></term><description> Nom de l'entité référencée.</description></item><item><term><see langword="ProcessingInstruction" /></term><description> Cible de l'instruction de traitement.</description></item><item><term><see langword="XmlDeclaration" /></term><description> Chaîne littérale <see langword="xml" />.</description></item></list></returns>
    </member>
    <member name="P:System.Xml.XmlNodeReader.NamespaceURI">
      <summary vsli:raw="Gets the namespace URI (as defined in the W3C Namespace specification) of the node on which the reader is positioned.">Obtient l'URI d'espace de noms (tel qu'il est défini dans la spécification relative aux espaces de noms du W3C) du nœud sur lequel le lecteur est placé.</summary>
      <returns vsli:raw="The namespace URI of the current node; otherwise an empty string.">URI d'espace de noms du nœud actuel ; sinon, une chaîne vide.</returns>
    </member>
    <member name="P:System.Xml.XmlNodeReader.NameTable">
      <summary vsli:raw="Gets the &lt;see cref=&quot;T:System.Xml.XmlNameTable&quot; /&gt; associated with this implementation.">Obtient l'élément <see cref="T:System.Xml.XmlNameTable" /> associé à cette implémentation.</summary>
      <returns vsli:raw="The &lt;see langword=&quot;XmlNameTable&quot; /&gt; enabling you to get the atomized version of a string within the node.">
        <see langword="XmlNameTable" /> vous permettant d'obtenir la version atomisée d'une chaîne au sein du nœud.</returns>
    </member>
    <member name="P:System.Xml.XmlNodeReader.NodeType">
      <summary vsli:raw="Gets the type of the current node.">Obtient le type du nœud actuel.</summary>
      <returns vsli:raw="One of the &lt;see cref=&quot;T:System.Xml.XmlNodeType&quot; /&gt; values representing the type of the current node.">Une des valeurs de <see cref="T:System.Xml.XmlNodeType" /> représentant le type du nœud actuel.</returns>
    </member>
    <member name="P:System.Xml.XmlNodeReader.Prefix">
      <summary vsli:raw="Gets the namespace prefix associated with the current node.">Obtient le préfixe de l'espace de noms associé au nœud actuel.</summary>
      <returns vsli:raw="The namespace prefix associated with the current node.">Préfixe de l'espace de noms associé au nœud actuel.</returns>
    </member>
    <member name="P:System.Xml.XmlNodeReader.ReadState">
      <summary vsli:raw="Gets the state of the reader.">Obtient l'état du lecteur.</summary>
      <returns vsli:raw="One of the &lt;see cref=&quot;T:System.Xml.ReadState&quot; /&gt; values.">Une des valeurs de l'objet <see cref="T:System.Xml.ReadState" />.</returns>
    </member>
    <member name="P:System.Xml.XmlNodeReader.SchemaInfo">
      <summary vsli:raw="Gets the schema information that has been assigned to the current node.">Obtient les informations de schéma qui ont été assignées au nœud actuel.</summary>
      <returns vsli:raw="An &lt;see cref=&quot;T:System.Xml.Schema.IXmlSchemaInfo&quot; /&gt; object containing the schema information for the current node.">Objet <see cref="T:System.Xml.Schema.IXmlSchemaInfo" /> qui contient les informations de schéma du nœud actuel.</returns>
    </member>
    <member name="P:System.Xml.XmlNodeReader.Value">
      <summary vsli:raw="Gets the text value of the current node.">Obtient le texte du nœud actuel.</summary>
      <returns vsli:raw="The value returned depends on the &lt;see cref=&quot;P:System.Xml.XmlNodeReader.NodeType&quot; /&gt; of the node. The following table lists node types that have a value to return. All other node types return String.Empty.  &#xA;  &#xA; &lt;list type=&quot;table&quot;&gt;&lt;listheader&gt;&lt;term&gt; Node Type&lt;/term&gt;&lt;description&gt; Value&lt;/description&gt;&lt;/listheader&gt;&lt;item&gt;&lt;term&gt;&lt;see langword=&quot;Attribute&quot; /&gt;&lt;/term&gt;&lt;description&gt; The value of the attribute.&lt;/description&gt;&lt;/item&gt;&lt;item&gt;&lt;term&gt;&lt;see langword=&quot;CDATA&quot; /&gt;&lt;/term&gt;&lt;description&gt; The content of the CDATA section.&lt;/description&gt;&lt;/item&gt;&lt;item&gt;&lt;term&gt;&lt;see langword=&quot;Comment&quot; /&gt;&lt;/term&gt;&lt;description&gt; The content of the comment.&lt;/description&gt;&lt;/item&gt;&lt;item&gt;&lt;term&gt;&lt;see langword=&quot;DocumentType&quot; /&gt;&lt;/term&gt;&lt;description&gt; The internal subset.&lt;/description&gt;&lt;/item&gt;&lt;item&gt;&lt;term&gt;&lt;see langword=&quot;ProcessingInstruction&quot; /&gt;&lt;/term&gt;&lt;description&gt; The entire content, excluding the target.&lt;/description&gt;&lt;/item&gt;&lt;item&gt;&lt;term&gt;&lt;see langword=&quot;SignificantWhitespace&quot; /&gt;&lt;/term&gt;&lt;description&gt; The white space between markup in a mixed content model.&lt;/description&gt;&lt;/item&gt;&lt;item&gt;&lt;term&gt;&lt;see langword=&quot;Text&quot; /&gt;&lt;/term&gt;&lt;description&gt; The content of the text node.&lt;/description&gt;&lt;/item&gt;&lt;item&gt;&lt;term&gt;&lt;see langword=&quot;Whitespace&quot; /&gt;&lt;/term&gt;&lt;description&gt; The white space between markup.&lt;/description&gt;&lt;/item&gt;&lt;item&gt;&lt;term&gt;&lt;see langword=&quot;XmlDeclaration&quot; /&gt;&lt;/term&gt;&lt;description&gt; The content of the declaration.&lt;/description&gt;&lt;/item&gt;&lt;/list&gt;">La valeur retournée dépend du <see cref="P:System.Xml.XmlNodeReader.NodeType" /> du nœud. Le tableau suivant répertorie les types de nœuds possédant une valeur de retour. Tous les autres types de nœuds retournent String.Empty.  
  
 <list type="table"><listheader><term> Type de nœud</term><description> Value</description></listheader><item><term><see langword="Attribute" /></term><description> Valeur de l'attribut.</description></item><item><term><see langword="CDATA" /></term><description> Contenu de la section CDATA.</description></item><item><term><see langword="Comment" /></term><description> Contenu du commentaire.</description></item><item><term><see langword="DocumentType" /></term><description> Sous-ensemble interne.</description></item><item><term><see langword="ProcessingInstruction" /></term><description> Contenu entier, cible exclue.</description></item><item><term><see langword="SignificantWhitespace" /></term><description> Espace blanc entre les balisages dans un modèle de contenu mixte.</description></item><item><term><see langword="Text" /></term><description> Contenu du nœud de texte.</description></item><item><term><see langword="Whitespace" /></term><description> Espace blanc entre les balises.</description></item><item><term><see langword="XmlDeclaration" /></term><description> Contenu de la déclaration.</description></item></list></returns>
    </member>
    <member name="P:System.Xml.XmlNodeReader.XmlLang">
      <summary vsli:raw="Gets the current &lt;see langword=&quot;xml:lang&quot; /&gt; scope.">Obtient la portée de <see langword="xml:lang" /> actuelle.</summary>
      <returns vsli:raw="The current &lt;see langword=&quot;xml:lang&quot; /&gt; scope.">Portée de <see langword="xml:lang" /> actuelle.</returns>
    </member>
    <member name="P:System.Xml.XmlNodeReader.XmlSpace">
      <summary vsli:raw="Gets the current &lt;see langword=&quot;xml:space&quot; /&gt; scope.">Obtient la portée de <see langword="xml:space" /> actuelle.</summary>
      <returns vsli:raw="One of the &lt;see cref=&quot;T:System.Xml.XmlSpace&quot; /&gt; values. If no &lt;see langword=&quot;xml:space&quot; /&gt; scope exists, this property defaults to &lt;see langword=&quot;XmlSpace.None&quot; /&gt;.">Une des valeurs de l'objet <see cref="T:System.Xml.XmlSpace" />. S'il n'existe pas de portée de <see langword="xml:space" />, cette propriété prend la valeur par défaut <see langword="XmlSpace.None" />.</returns>
    </member>
    <member name="T:System.Xml.XmlNodeType">
      <summary vsli:raw="Specifies the type of node.">Spécifie le type de nœud.</summary>
    </member>
    <member name="F:System.Xml.XmlNodeType.Attribute">
      <summary vsli:raw="An attribute (for example, &lt;c&gt;id='123'&lt;/c&gt; ).">Attribut (par exemple, <c>id='123'</c>).</summary>
    </member>
    <member name="F:System.Xml.XmlNodeType.CDATA">
      <summary vsli:raw="A CDATA section (for example, &lt;c&gt;&amp;lt;![CDATA[my escaped text]]&amp;gt;&lt;/c&gt; ).">Section CDATA (par exemple, <c>&lt;![CDATA[my escaped text]]&gt;</c>).</summary>
    </member>
    <member name="F:System.Xml.XmlNodeType.Comment">
      <summary vsli:raw="A comment (for example, &lt;c&gt;&amp;lt;!-- my comment --&amp;gt;&lt;/c&gt; ).">Commentaire (par exemple, <c>&lt;!-- my comment --&gt;</c>).</summary>
    </member>
    <member name="F:System.Xml.XmlNodeType.Document">
      <summary vsli:raw="A document object that, as the root of the document tree, provides access to the entire XML document.">Objet document qui, en tant que racine de l'arborescence de documents, permet d'accéder à l'intégralité du document XML.</summary>
    </member>
    <member name="F:System.Xml.XmlNodeType.DocumentFragment">
      <summary vsli:raw="A document fragment.">Fragment de document.</summary>
    </member>
    <member name="F:System.Xml.XmlNodeType.DocumentType">
      <summary vsli:raw="The document type declaration, indicated by the following tag (for example, &lt;c&gt;&amp;lt;!DOCTYPE...&amp;gt;&lt;/c&gt; ).">Déclaration de type du document, indiquée par la balise suivante (par exemple, <c>&lt;!DOCTYPE...&gt;</c>).</summary>
    </member>
    <member name="F:System.Xml.XmlNodeType.Element">
      <summary vsli:raw="An element (for example, &lt;c&gt;&amp;lt;item&amp;gt;&lt;/c&gt; ).">Élément (par exemple, <c>&lt;item&gt;</c>).</summary>
    </member>
    <member name="F:System.Xml.XmlNodeType.EndElement">
      <summary vsli:raw="An end element tag (for example, &lt;c&gt;&amp;lt;/item&amp;gt;&lt;/c&gt; ).">Balise d’élément de fin (par exemple, <c>&lt;/item&gt;</c>).</summary>
    </member>
    <member name="F:System.Xml.XmlNodeType.EndEntity">
      <summary vsli:raw="Returned when &lt;see langword=&quot;XmlReader&quot; /&gt; gets to the end of the entity replacement as a result of a call to &lt;see cref=&quot;M:System.Xml.XmlReader.ResolveEntity&quot; /&gt;.">Retourné lorsque <see langword="XmlReader" /> parvient à la fin du remplacement de l'entité, à la suite d'un appel à <see cref="M:System.Xml.XmlReader.ResolveEntity" />.</summary>
    </member>
    <member name="F:System.Xml.XmlNodeType.Entity">
      <summary vsli:raw="An entity declaration (for example, &lt;c&gt;&amp;lt;!ENTITY...&amp;gt;&lt;/c&gt; ).">Déclaration d’entité (par exemple, <c>&lt;!ENTITY...&gt;</c>).</summary>
    </member>
    <member name="F:System.Xml.XmlNodeType.EntityReference">
      <summary vsli:raw="A reference to an entity (for example, &lt;c&gt;&amp;amp;num;&lt;/c&gt; ).">Référence à une entité (par exemple, <c>&amp;num;</c>).</summary>
    </member>
    <member name="F:System.Xml.XmlNodeType.None">
      <summary vsli:raw="This is returned by the &lt;see cref=&quot;T:System.Xml.XmlReader&quot; /&gt; if a &lt;see langword=&quot;Read&quot; /&gt; method has not been called.">Ceci est retourné par <see cref="T:System.Xml.XmlReader" /> si aucune méthode <see langword="Read" /> n'a été appelée.</summary>
    </member>
    <member name="F:System.Xml.XmlNodeType.Notation">
      <summary vsli:raw="A notation in the document type declaration (for example, &lt;c&gt;&amp;lt;!NOTATION...&amp;gt;&lt;/c&gt; ).">Notation dans la déclaration de type du document (par exemple, <c>&lt;!NOTATION...&gt;</c>).</summary>
    </member>
    <member name="F:System.Xml.XmlNodeType.ProcessingInstruction">
      <summary vsli:raw="A processing instruction (for example, &lt;c&gt;&amp;lt;?pi test?&amp;gt;&lt;/c&gt; ).">Instruction de traitement (par exemple, <c>&lt;?pi test?&gt;</c>).</summary>
    </member>
    <member name="F:System.Xml.XmlNodeType.SignificantWhitespace">
      <summary vsli:raw="White space between markup in a mixed content model or white space within the &lt;c&gt;xml:space=&quot;preserve&quot;&lt;/c&gt; scope.">Espace blanc entre le balisage dans un modèle de contenu mixte ou espace blanc dans la portée <c>xml:space="preserve"</c>.</summary>
    </member>
    <member name="F:System.Xml.XmlNodeType.Text">
      <summary vsli:raw="&lt;para&gt;The text content of a node.&lt;/para&gt;&lt;para&gt;A &lt;see cref=&quot;F:System.Xml.XmlNodeType.Text&quot; /&gt; node cannot have any child nodes. It can appear as the child node of the &lt;see cref=&quot;F:System.Xml.XmlNodeType.Attribute&quot; /&gt;, &lt;see cref=&quot;F:System.Xml.XmlNodeType.DocumentFragment&quot; /&gt;, &lt;see cref=&quot;F:System.Xml.XmlNodeType.Element&quot; /&gt;, and &lt;see cref=&quot;F:System.Xml.XmlNodeType.EntityReference&quot; /&gt; nodes.&lt;/para&gt;">Texte d'un nœud.</summary>
    </member>
    <member name="F:System.Xml.XmlNodeType.Whitespace">
      <summary vsli:raw="White space between markup.">Espace blanc entre le balisage.</summary>
    </member>
    <member name="F:System.Xml.XmlNodeType.XmlDeclaration">
      <summary vsli:raw="&lt;para&gt;The XML declaration (for example, &lt;c&gt;&amp;lt;?xml version='1.0'?&amp;gt;&lt;/c&gt; ).&lt;/para&gt;&lt;para&gt;The &lt;see cref=&quot;F:System.Xml.XmlNodeType.XmlDeclaration&quot; /&gt; node must be the first node in the document. It cannot have children. It is a child of the &lt;see cref=&quot;F:System.Xml.XmlNodeType.Document&quot; /&gt; node. It can have attributes that provide version and encoding information.&lt;/para&gt;">Déclaration XML (par exemple, <c>&lt;?xml version='1.0'?&gt;</c>).</summary>
    </member>
    <member name="T:System.Xml.XmlNotation">
      <summary vsli:raw="Represents a notation declaration, such as &amp;lt;!NOTATION... &amp;gt;.">Représente une déclaration de notation, telle que &lt;! NOTATION...&gt;.</summary>
    </member>
    <member name="M:System.Xml.XmlNotation.CloneNode(System.Boolean)">
      <summary vsli:raw="Creates a duplicate of this node. Notation nodes cannot be cloned. Calling this method on an &lt;see cref=&quot;T:System.Xml.XmlNotation&quot; /&gt; object throws an exception.">Crée un doublon de ce nœud. Les nœuds de notation ne peuvent pas être clonés. L'appel de cette méthode sur un objet <see cref="T:System.Xml.XmlNotation" /> lève une exception.</summary>
      <param name="deep" vsli:raw="&lt;see langword=&quot;true&quot; /&gt; to recursively clone the subtree under the specified node; &lt;see langword=&quot;false&quot; /&gt; to clone only the node itself.">
        <see langword="true" /> pour cloner récursivement la sous-arborescence sous le nœud spécifié ; <see langword="false" /> pour cloner seulement le nœud lui-même.</param>
      <exception cref="T:System.InvalidOperationException" vsli:raw="Notation nodes cannot be cloned. Calling this method on an &lt;see cref=&quot;T:System.Xml.XmlNotation&quot; /&gt; object throws an exception.">Les nœuds de notation ne peuvent pas être clonés. L'appel de cette méthode sur un objet <see cref="T:System.Xml.XmlNotation" /> lève une exception.</exception>
      <returns vsli:raw="A &lt;see cref=&quot;T:System.Xml.XmlNode&quot; /&gt; copy of the node from which the method is called.">Copie <see cref="T:System.Xml.XmlNode" /> du nœud à partir duquel la méthode est appelée.</returns>
    </member>
    <member name="M:System.Xml.XmlNotation.WriteContentTo(System.Xml.XmlWriter)">
      <summary vsli:raw="Saves the children of the node to the specified &lt;see cref=&quot;T:System.Xml.XmlWriter&quot; /&gt;. This method has no effect on &lt;see langword=&quot;XmlNotation&quot; /&gt; nodes.">Enregistre les enfants du nœud dans le <see cref="T:System.Xml.XmlWriter" /> spécifié. Cette méthode n'a aucun effet sur les nœuds <see langword="XmlNotation" />.</summary>
      <param name="w" vsli:raw="The &lt;see langword=&quot;XmlWriter&quot; /&gt; to which you want to save.">L'élément <see langword="XmlWriter" /> dans lequel vous voulez enregistrer.</param>
    </member>
    <member name="M:System.Xml.XmlNotation.WriteTo(System.Xml.XmlWriter)">
      <summary vsli:raw="Saves the node to the specified &lt;see cref=&quot;T:System.Xml.XmlWriter&quot; /&gt;. This method has no effect on &lt;see langword=&quot;XmlNotation&quot; /&gt; nodes.">Enregistre le nœud dans le <see cref="T:System.Xml.XmlWriter" /> spécifié. Cette méthode n'a aucun effet sur les nœuds <see langword="XmlNotation" />.</summary>
      <param name="w" vsli:raw="The &lt;see langword=&quot;XmlWriter&quot; /&gt; to which you want to save.">L'élément <see langword="XmlWriter" /> dans lequel vous voulez enregistrer.</param>
    </member>
    <member name="P:System.Xml.XmlNotation.InnerXml">
      <summary vsli:raw="Gets the markup representing the children of this node.">Obtient le balisage représentant les enfants de ce nœud.</summary>
      <exception cref="T:System.InvalidOperationException" vsli:raw="Attempting to set the property.">Tentative de définition de la propriété.</exception>
      <returns vsli:raw="For &lt;see langword=&quot;XmlNotation&quot; /&gt; nodes, String.Empty is returned.">Pour les nœuds <see langword="XmlNotation" />, String.Empty est retourné.</returns>
    </member>
    <member name="P:System.Xml.XmlNotation.IsReadOnly">
      <summary vsli:raw="Gets a value indicating whether the node is read-only.">Obtient une valeur indiquant si le nœud est en lecture seule.</summary>
      <returns vsli:raw="&lt;see langword=&quot;true&quot; /&gt; if the node is read-only; otherwise, &lt;see langword=&quot;false&quot; /&gt;.  &#xA;  &#xA; Because &lt;see langword=&quot;XmlNotation&quot; /&gt; nodes are read-only, this property always returns &lt;see langword=&quot;true&quot; /&gt;.">
        <see langword="true" /> Si le nœud est en lecture seule ; Sinon, <see langword="false" /> .  
  
Les nœuds <see langword="XmlNotation" /> étant en lecture seule, cette propriété retourne toujours <see langword="true" />.</returns>
    </member>
    <member name="P:System.Xml.XmlNotation.LocalName">
      <summary vsli:raw="Gets the name of the current node without the namespace prefix.">Obtient le nom du nœud actuel sans le préfixe de l'espace de noms.</summary>
      <returns vsli:raw="For &lt;see langword=&quot;XmlNotation&quot; /&gt; nodes, this property returns the name of the notation.">Pour les nœuds <see langword="XmlNotation" />, cette propriété retourne le nom de la notation.</returns>
    </member>
    <member name="P:System.Xml.XmlNotation.Name">
      <summary vsli:raw="Gets the name of the current node.">Obtient le nom du nœud actuel.</summary>
      <returns vsli:raw="The name of the notation.">Nom de la notation.</returns>
    </member>
    <member name="P:System.Xml.XmlNotation.NodeType">
      <summary vsli:raw="Gets the type of the current node.">Obtient le type du nœud actuel.</summary>
      <returns vsli:raw="The node type. For &lt;see langword=&quot;XmlNotation&quot; /&gt; nodes, the value is XmlNodeType.Notation.">Type de nœud. Pour les nœuds <see langword="XmlNotation" />, la valeur est XmlNodeType.Notation.</returns>
    </member>
    <member name="P:System.Xml.XmlNotation.OuterXml">
      <summary vsli:raw="Gets the markup representing this node and all its children.">Obtient le balisage représentant ce nœud et tous ses enfants.</summary>
      <returns vsli:raw="For &lt;see langword=&quot;XmlNotation&quot; /&gt; nodes, String.Empty is returned.">Pour les nœuds <see langword="XmlNotation" />, String.Empty est retourné.</returns>
    </member>
    <member name="P:System.Xml.XmlNotation.PublicId">
      <summary vsli:raw="Gets the value of the public identifier on the notation declaration.">Obtient la valeur de l'identificateur public sur la déclaration de notation.</summary>
      <returns vsli:raw="The public identifier on the notation. If there is no public identifier, &lt;see langword=&quot;null&quot; /&gt; is returned.">Identificateur public sur la notation. S'il n'existe aucun identificateur public, <see langword="null" /> est alors retournée.</returns>
    </member>
    <member name="P:System.Xml.XmlNotation.SystemId">
      <summary vsli:raw="Gets the value of the system identifier on the notation declaration.">Obtient la valeur de l'identificateur système sur la déclaration de notation.</summary>
      <returns vsli:raw="The system identifier on the notation. If there is no system identifier, &lt;see langword=&quot;null&quot; /&gt; is returned.">Identificateur système sur la notation. S'il n'existe aucun identificateur système, <see langword="null" /> est alors retournée.</returns>
    </member>
    <member name="T:System.Xml.XmlOutputMethod">
      <summary vsli:raw="Specifies the method used to serialize the &lt;see cref=&quot;T:System.Xml.XmlWriter&quot; /&gt; output.">Spécifie la méthode utilisée pour sérialiser la sortie <see cref="T:System.Xml.XmlWriter" />.</summary>
    </member>
    <member name="F:System.Xml.XmlOutputMethod.AutoDetect">
      <summary vsli:raw="Use the XSLT rules to choose between the &lt;see cref=&quot;F:System.Xml.XmlOutputMethod.Xml&quot; /&gt; and &lt;see cref=&quot;F:System.Xml.XmlOutputMethod.Html&quot; /&gt; output methods at runtime.">Utilisez les règles XSLT pour effectuer un choix entre les méthodes de sortie <see cref="F:System.Xml.XmlOutputMethod.Xml" /> et  <see cref="F:System.Xml.XmlOutputMethod.Html" /> à l'exécution.</summary>
    </member>
    <member name="F:System.Xml.XmlOutputMethod.Html">
      <summary vsli:raw="Serialize according to the HTML rules specified by XSLT.">Sérialiser conformément aux règles HTML spécifiées par XSLT.</summary>
    </member>
    <member name="F:System.Xml.XmlOutputMethod.Text">
      <summary vsli:raw="Serialize text blocks only.">Sérialiser uniquement des blocs de texte.</summary>
    </member>
    <member name="F:System.Xml.XmlOutputMethod.Xml">
      <summary vsli:raw="Serialize according to the XML 1.0 rules.">Sérialiser conformément aux règles XML 1.0.</summary>
    </member>
    <member name="T:System.Xml.XmlParserContext">
      <summary vsli:raw="Provides all the context information required by the &lt;see cref=&quot;T:System.Xml.XmlReader&quot; /&gt; to parse an XML fragment.">Fournit toutes les informations de contexte requises par <see cref="T:System.Xml.XmlReader" /> pour analyser un fragment XML.</summary>
    </member>
    <member name="M:System.Xml.XmlParserContext.#ctor(System.Xml.XmlNameTable,System.Xml.XmlNamespaceManager,System.String,System.String,System.String,System.String,System.String,System.String,System.Xml.XmlSpace)">
      <summary vsli:raw="Initializes a new instance of the &lt;see langword=&quot;XmlParserContext&quot; /&gt; class with the specified &lt;see cref=&quot;T:System.Xml.XmlNameTable&quot; /&gt;, &lt;see cref=&quot;T:System.Xml.XmlNamespaceManager&quot; /&gt;, base URI, &lt;see langword=&quot;xml:lang&quot; /&gt;, &lt;see langword=&quot;xml:space&quot; /&gt;, and document type values.">Initialise une nouvelle instance de la classe <see langword="XmlParserContext" /> avec les <see cref="T:System.Xml.XmlNameTable" />, <see cref="T:System.Xml.XmlNamespaceManager" />, URI de base, <see langword="xml:lang" />, <see langword="xml:space" /> et valeurs de type de document spécifiés.</summary>
      <param name="nt" vsli:raw="The &lt;see cref=&quot;T:System.Xml.XmlNameTable&quot; /&gt; to use to atomize strings. If this is &lt;see langword=&quot;null&quot; /&gt;, the name table used to construct the &lt;paramref name=&quot;nsMgr&quot; /&gt; is used instead. For more information about atomized strings, see &lt;see cref=&quot;T:System.Xml.XmlNameTable&quot; /&gt;.">
        <see cref="T:System.Xml.XmlNameTable" /> à utiliser pour atomiser les chaînes. Si la valeur est <see langword="null" />, la table de noms servant à construire <paramref name="nsMgr" /> est utilisée à la place. Pour plus d'informations concernant les chaînes atomisées, consultez <see cref="T:System.Xml.XmlNameTable" />.</param>
      <param name="nsMgr" vsli:raw="The &lt;see cref=&quot;T:System.Xml.XmlNamespaceManager&quot; /&gt; to use for looking up namespace information, or &lt;see langword=&quot;null&quot; /&gt;.">
        <see cref="T:System.Xml.XmlNamespaceManager" /> à utiliser pour la recherche d'informations d'espace de noms, ou <see langword="null" />.</param>
      <param name="docTypeName" vsli:raw="The name of the document type declaration.">Nom de la déclaration de type du document.</param>
      <param name="pubId" vsli:raw="The public identifier.">Identificateur public.</param>
      <param name="sysId" vsli:raw="The system identifier.">Identificateur système.</param>
      <param name="internalSubset" vsli:raw="The internal DTD subset. The DTD subset is used for entity resolution, not for document validation.">Sous-ensemble interne DTD. Le sous-ensemble DTD est utilisé pour la résolution d'entité, pas pour la validation de document.</param>
      <param name="baseURI" vsli:raw="The base URI for the XML fragment (the location from which the fragment was loaded).">URI de base du fragment XML (emplacement à partir duquel le fragment a été chargé).</param>
      <param name="xmlLang" vsli:raw="The &lt;see langword=&quot;xml:lang&quot; /&gt; scope.">L’étendue <see langword="xml:lang" />.</param>
      <param name="xmlSpace" vsli:raw="An &lt;see cref=&quot;T:System.Xml.XmlSpace&quot; /&gt; value indicating the &lt;see langword=&quot;xml:space&quot; /&gt; scope.">Valeur <see cref="T:System.Xml.XmlSpace" /> indiquant la portée <see langword="xml:space" />.</param>
      <exception cref="T:System.Xml.XmlException" vsli:raw="&lt;paramref name=&quot;nt&quot; /&gt; is not the same &lt;see langword=&quot;XmlNameTable&quot; /&gt; used to construct &lt;paramref name=&quot;nsMgr&quot; /&gt;.">
        <paramref name="nt" /> n'est pas le même <see langword="XmlNameTable" /> utilisé pour construire <paramref name="nsMgr" />.</exception>
    </member>
    <member name="M:System.Xml.XmlParserContext.#ctor(System.Xml.XmlNameTable,System.Xml.XmlNamespaceManager,System.String,System.String,System.String,System.String,System.String,System.String,System.Xml.XmlSpace,System.Text.Encoding)">
      <summary vsli:raw="Initializes a new instance of the &lt;see langword=&quot;XmlParserContext&quot; /&gt; class with the specified &lt;see cref=&quot;T:System.Xml.XmlNameTable&quot; /&gt;, &lt;see cref=&quot;T:System.Xml.XmlNamespaceManager&quot; /&gt;, base URI, &lt;see langword=&quot;xml:lang&quot; /&gt;, &lt;see langword=&quot;xml:space&quot; /&gt;, encoding, and document type values.">Initialise une nouvelle instance de la classe <see langword="XmlParserContext" /> avec les <see cref="T:System.Xml.XmlNameTable" />, <see cref="T:System.Xml.XmlNamespaceManager" />, URI de base, <see langword="xml:lang" />, <see langword="xml:space" />, encodage et valeurs de type de document spécifiés.</summary>
      <param name="nt" vsli:raw="The &lt;see cref=&quot;T:System.Xml.XmlNameTable&quot; /&gt; to use to atomize strings. If this is &lt;see langword=&quot;null&quot; /&gt;, the name table used to construct the &lt;paramref name=&quot;nsMgr&quot; /&gt; is used instead. For more information about atomized strings, see &lt;see cref=&quot;T:System.Xml.XmlNameTable&quot; /&gt;.">
        <see cref="T:System.Xml.XmlNameTable" /> à utiliser pour atomiser les chaînes. Si la valeur est <see langword="null" />, la table de noms servant à construire <paramref name="nsMgr" /> est utilisée à la place. Pour plus d'informations concernant les chaînes atomisées, consultez <see cref="T:System.Xml.XmlNameTable" />.</param>
      <param name="nsMgr" vsli:raw="The &lt;see cref=&quot;T:System.Xml.XmlNamespaceManager&quot; /&gt; to use for looking up namespace information, or &lt;see langword=&quot;null&quot; /&gt;.">
        <see cref="T:System.Xml.XmlNamespaceManager" /> à utiliser pour la recherche d'informations d'espace de noms, ou <see langword="null" />.</param>
      <param name="docTypeName" vsli:raw="The name of the document type declaration.">Nom de la déclaration de type du document.</param>
      <param name="pubId" vsli:raw="The public identifier.">Identificateur public.</param>
      <param name="sysId" vsli:raw="The system identifier.">Identificateur système.</param>
      <param name="internalSubset" vsli:raw="The internal DTD subset. The DTD is used for entity resolution, not for document validation.">Sous-ensemble interne DTD. Le DTD est utilisé pour la résolution d'entité, pas pour la validation de document.</param>
      <param name="baseURI" vsli:raw="The base URI for the XML fragment (the location from which the fragment was loaded).">URI de base du fragment XML (emplacement à partir duquel le fragment a été chargé).</param>
      <param name="xmlLang" vsli:raw="The &lt;see langword=&quot;xml:lang&quot; /&gt; scope.">L’étendue <see langword="xml:lang" />.</param>
      <param name="xmlSpace" vsli:raw="An &lt;see cref=&quot;T:System.Xml.XmlSpace&quot; /&gt; value indicating the &lt;see langword=&quot;xml:space&quot; /&gt; scope.">Valeur <see cref="T:System.Xml.XmlSpace" /> indiquant la portée <see langword="xml:space" />.</param>
      <param name="enc" vsli:raw="An &lt;see cref=&quot;T:System.Text.Encoding&quot; /&gt; object indicating the encoding setting.">Objet <see cref="T:System.Text.Encoding" /> indiquant le paramètre d'encodage.</param>
      <exception cref="T:System.Xml.XmlException" vsli:raw="&lt;paramref name=&quot;nt&quot; /&gt; is not the same &lt;see langword=&quot;XmlNameTable&quot; /&gt; used to construct &lt;paramref name=&quot;nsMgr&quot; /&gt;.">
        <paramref name="nt" /> n'est pas le même <see langword="XmlNameTable" /> utilisé pour construire <paramref name="nsMgr" />.</exception>
    </member>
    <member name="M:System.Xml.XmlParserContext.#ctor(System.Xml.XmlNameTable,System.Xml.XmlNamespaceManager,System.String,System.Xml.XmlSpace)">
      <summary vsli:raw="Initializes a new instance of the &lt;see langword=&quot;XmlParserContext&quot; /&gt; class with the specified &lt;see cref=&quot;T:System.Xml.XmlNameTable&quot; /&gt;, &lt;see cref=&quot;T:System.Xml.XmlNamespaceManager&quot; /&gt;, &lt;see langword=&quot;xml:lang&quot; /&gt;, and &lt;see langword=&quot;xml:space&quot; /&gt; values.">Initialise une nouvelle instance de la classe <see langword="XmlParserContext" /> avec les valeurs <see cref="T:System.Xml.XmlNameTable" />, <see cref="T:System.Xml.XmlNamespaceManager" />, <see langword="xml:lang" /> et <see langword="xml:space" /> spécifiées.</summary>
      <param name="nt" vsli:raw="The &lt;see cref=&quot;T:System.Xml.XmlNameTable&quot; /&gt; to use to atomize strings. If this is &lt;see langword=&quot;null&quot; /&gt;, the name table used to construct the &lt;paramref name=&quot;nsMgr&quot; /&gt; is used instead. For more information about atomized strings, see &lt;see cref=&quot;T:System.Xml.XmlNameTable&quot; /&gt;.">
        <see cref="T:System.Xml.XmlNameTable" /> à utiliser pour atomiser les chaînes. Si la valeur est <see langword="null" />, la table de noms servant à construire <paramref name="nsMgr" /> est utilisée à la place. Pour plus d'informations concernant les chaînes atomisées, consultez <see cref="T:System.Xml.XmlNameTable" />.</param>
      <param name="nsMgr" vsli:raw="The &lt;see cref=&quot;T:System.Xml.XmlNamespaceManager&quot; /&gt; to use for looking up namespace information, or &lt;see langword=&quot;null&quot; /&gt;.">
        <see cref="T:System.Xml.XmlNamespaceManager" /> à utiliser pour la recherche d'informations d'espace de noms, ou <see langword="null" />.</param>
      <param name="xmlLang" vsli:raw="The &lt;see langword=&quot;xml:lang&quot; /&gt; scope.">L’étendue <see langword="xml:lang" />.</param>
      <param name="xmlSpace" vsli:raw="An &lt;see cref=&quot;T:System.Xml.XmlSpace&quot; /&gt; value indicating the &lt;see langword=&quot;xml:space&quot; /&gt; scope.">Valeur <see cref="T:System.Xml.XmlSpace" /> indiquant la portée <see langword="xml:space" />.</param>
      <exception cref="T:System.Xml.XmlException" vsli:raw="&lt;paramref name=&quot;nt&quot; /&gt; is not the same &lt;see langword=&quot;XmlNameTable&quot; /&gt; used to construct &lt;paramref name=&quot;nsMgr&quot; /&gt;.">
        <paramref name="nt" /> n'est pas le même <see langword="XmlNameTable" /> utilisé pour construire <paramref name="nsMgr" />.</exception>
    </member>
    <member name="M:System.Xml.XmlParserContext.#ctor(System.Xml.XmlNameTable,System.Xml.XmlNamespaceManager,System.String,System.Xml.XmlSpace,System.Text.Encoding)">
      <summary vsli:raw="Initializes a new instance of the &lt;see langword=&quot;XmlParserContext&quot; /&gt; class with the specified &lt;see cref=&quot;T:System.Xml.XmlNameTable&quot; /&gt;, &lt;see cref=&quot;T:System.Xml.XmlNamespaceManager&quot; /&gt;, &lt;see langword=&quot;xml:lang&quot; /&gt;, &lt;see langword=&quot;xml:space&quot; /&gt;, and encoding.">Initialise une nouvelle instance de la classe <see langword="XmlParserContext" /> avec les <see cref="T:System.Xml.XmlNameTable" />, <see cref="T:System.Xml.XmlNamespaceManager" />, <see langword="xml:lang" />, <see langword="xml:space" /> spécifiés et l'encodage spécifié.</summary>
      <param name="nt" vsli:raw="The &lt;see cref=&quot;T:System.Xml.XmlNameTable&quot; /&gt; to use to atomize strings. If this is &lt;see langword=&quot;null&quot; /&gt;, the name table used to construct the &lt;paramref name=&quot;nsMgr&quot; /&gt; is used instead. For more information on atomized strings, see &lt;see cref=&quot;T:System.Xml.XmlNameTable&quot; /&gt;.">
        <see cref="T:System.Xml.XmlNameTable" /> à utiliser pour atomiser les chaînes. Si la valeur est <see langword="null" />, la table de noms servant à construire <paramref name="nsMgr" /> est utilisée à la place. Pour plus d'informations sur les chaînes atomisées, consultez <see cref="T:System.Xml.XmlNameTable" />.</param>
      <param name="nsMgr" vsli:raw="The &lt;see cref=&quot;T:System.Xml.XmlNamespaceManager&quot; /&gt; to use for looking up namespace information, or &lt;see langword=&quot;null&quot; /&gt;.">
        <see cref="T:System.Xml.XmlNamespaceManager" /> à utiliser pour la recherche d'informations d'espace de noms, ou <see langword="null" />.</param>
      <param name="xmlLang" vsli:raw="The &lt;see langword=&quot;xml:lang&quot; /&gt; scope.">L’étendue <see langword="xml:lang" />.</param>
      <param name="xmlSpace" vsli:raw="An &lt;see cref=&quot;T:System.Xml.XmlSpace&quot; /&gt; value indicating the &lt;see langword=&quot;xml:space&quot; /&gt; scope.">Valeur <see cref="T:System.Xml.XmlSpace" /> indiquant la portée <see langword="xml:space" />.</param>
      <param name="enc" vsli:raw="An &lt;see cref=&quot;T:System.Text.Encoding&quot; /&gt; object indicating the encoding setting.">Objet <see cref="T:System.Text.Encoding" /> indiquant le paramètre d'encodage.</param>
      <exception cref="T:System.Xml.XmlException" vsli:raw="&lt;paramref name=&quot;nt&quot; /&gt; is not the same &lt;see langword=&quot;XmlNameTable&quot; /&gt; used to construct &lt;paramref name=&quot;nsMgr&quot; /&gt;.">
        <paramref name="nt" /> n'est pas le même <see langword="XmlNameTable" /> utilisé pour construire <paramref name="nsMgr" />.</exception>
    </member>
    <member name="P:System.Xml.XmlParserContext.BaseURI">
      <summary vsli:raw="Gets or sets the base URI.">Obtient ou définit l'URI de base.</summary>
      <returns vsli:raw="The base URI to use to resolve the DTD file.">URI de base à utiliser pour résoudre le fichier DTD.</returns>
    </member>
    <member name="P:System.Xml.XmlParserContext.DocTypeName">
      <summary vsli:raw="Gets or sets the name of the document type declaration.">Obtient ou définit le nom de la déclaration de type du document.</summary>
      <returns vsli:raw="The name of the document type declaration.">Nom de la déclaration de type du document.</returns>
    </member>
    <member name="P:System.Xml.XmlParserContext.Encoding">
      <summary vsli:raw="Gets or sets the encoding type.">Obtient ou définit le type d'encodage.</summary>
      <returns vsli:raw="An &lt;see cref=&quot;T:System.Text.Encoding&quot; /&gt; object indicating the encoding type.">Objet <see cref="T:System.Text.Encoding" /> indiquant le type d'encodage.</returns>
    </member>
    <member name="P:System.Xml.XmlParserContext.InternalSubset">
      <summary vsli:raw="Gets or sets the internal DTD subset.">Obtient ou définit le sous-ensemble interne DTD.</summary>
      <returns vsli:raw="The internal DTD subset. For example, this property returns everything between the square brackets &lt;c&gt;&amp;lt;!DOCTYPE doc [...]&amp;gt;&lt;/c&gt;.">Sous-ensemble interne DTD. Par exemple, cette propriété retourne tout ce qui se trouve entre les crochets <c> &lt; ! Document DOCTYPE [...] &gt; </c>.</returns>
    </member>
    <member name="P:System.Xml.XmlParserContext.NamespaceManager">
      <summary vsli:raw="Gets or sets the &lt;see cref=&quot;T:System.Xml.XmlNamespaceManager&quot; /&gt;.">Obtient ou définit <see cref="T:System.Xml.XmlNamespaceManager" />.</summary>
      <returns vsli:raw="The &lt;see langword=&quot;XmlNamespaceManager&quot; /&gt;.">L’<see langword="XmlNamespaceManager" />opérateur</returns>
    </member>
    <member name="P:System.Xml.XmlParserContext.NameTable">
      <summary vsli:raw="Gets the &lt;see cref=&quot;T:System.Xml.XmlNameTable&quot; /&gt; used to atomize strings. For more information on atomized strings, see &lt;see cref=&quot;T:System.Xml.XmlNameTable&quot; /&gt;.">Obtient le <see cref="T:System.Xml.XmlNameTable" /> utilisé pour atomiser les chaînes. Pour plus d'informations sur les chaînes atomisées, consultez <see cref="T:System.Xml.XmlNameTable" />.</summary>
      <returns vsli:raw="The &lt;see langword=&quot;XmlNameTable&quot; /&gt;.">L’<see langword="XmlNameTable" />opérateur</returns>
    </member>
    <member name="P:System.Xml.XmlParserContext.PublicId">
      <summary vsli:raw="Gets or sets the public identifier.">Obtient ou définit l'identificateur public.</summary>
      <returns vsli:raw="The public identifier.">Identificateur public.</returns>
    </member>
    <member name="P:System.Xml.XmlParserContext.SystemId">
      <summary vsli:raw="Gets or sets the system identifier.">Obtient ou définit l'identificateur système.</summary>
      <returns vsli:raw="The system identifier.">Identificateur système.</returns>
    </member>
    <member name="P:System.Xml.XmlParserContext.XmlLang">
      <summary vsli:raw="Gets or sets the current &lt;see langword=&quot;xml:lang&quot; /&gt; scope.">Obtient ou définit la portée <see langword="xml:lang" /> en cours.</summary>
      <returns vsli:raw="The current &lt;see langword=&quot;xml:lang&quot; /&gt; scope. If there is no &lt;see langword=&quot;xml:lang&quot; /&gt; in scope, &lt;see langword=&quot;String.Empty&quot; /&gt; is returned.">Portée de <see langword="xml:lang" /> actuelle. S'il n'existe aucun <see langword="xml:lang" /> dans la portée, <see langword="String.Empty" /> est retournée.</returns>
    </member>
    <member name="P:System.Xml.XmlParserContext.XmlSpace">
      <summary vsli:raw="Gets or sets the current &lt;see langword=&quot;xml:space&quot; /&gt; scope.">Obtient ou définit la portée <see langword="xml:space" /> en cours.</summary>
      <returns vsli:raw="An &lt;see cref=&quot;T:System.Xml.XmlSpace&quot; /&gt; value indicating the &lt;see langword=&quot;xml:space&quot; /&gt; scope.">Valeur <see cref="T:System.Xml.XmlSpace" /> indiquant la portée <see langword="xml:space" />.</returns>
    </member>
    <member name="T:System.Xml.XmlProcessingInstruction">
      <summary vsli:raw="Represents a processing instruction, which XML defines to keep processor-specific information in the text of the document.">Représente une instruction de traitement, définie par le code XML pour conserver les informations spécifiques au processeur dans le texte du document.</summary>
    </member>
    <member name="M:System.Xml.XmlProcessingInstruction.#ctor(System.String,System.String,System.Xml.XmlDocument)">
      <summary vsli:raw="Initializes a new instance of the &lt;see cref=&quot;T:System.Xml.XmlProcessingInstruction&quot; /&gt; class.">Initialise une nouvelle instance de la classe <see cref="T:System.Xml.XmlProcessingInstruction" />.</summary>
      <param name="target" vsli:raw="The target of the processing instruction; see the &lt;see cref=&quot;P:System.Xml.XmlProcessingInstruction.Target&quot; /&gt; property.">Cible de l'instruction de traitement ; consultez la propriété <see cref="P:System.Xml.XmlProcessingInstruction.Target" />.</param>
      <param name="data" vsli:raw="The content of the instruction; see the &lt;see cref=&quot;P:System.Xml.XmlProcessingInstruction.Data&quot; /&gt; property.">Contenu de l'instruction ; consultez la propriété <see cref="P:System.Xml.XmlProcessingInstruction.Data" />.</param>
      <param name="doc" vsli:raw="The parent XML document.">Document XML parent.</param>
    </member>
    <member name="M:System.Xml.XmlProcessingInstruction.CloneNode(System.Boolean)">
      <summary vsli:raw="Creates a duplicate of this node.">Crée un doublon de ce nœud.</summary>
      <param name="deep" vsli:raw="&lt;code data-dev-comment-type=&quot;langword&quot;&gt;true&lt;/code&gt; to recursively clone the subtree under the specified node; &lt;code data-dev-comment-type=&quot;langword&quot;&gt;false&lt;/code&gt; to clone only the node itself.">
        <see langword="true" /> pour cloner récursivement la sous-arborescence sous le nœud spécifié ; <see langword="false" /> pour cloner seulement le nœud lui-même.</param>
      <returns vsli:raw="The duplicate node.">Doublon du nœud.</returns>
    </member>
    <member name="M:System.Xml.XmlProcessingInstruction.WriteContentTo(System.Xml.XmlWriter)">
      <summary vsli:raw="Saves all the children of the node to the specified &lt;xref data-throw-if-not-resolved=&quot;true&quot; uid=&quot;System.Xml.XmlWriter&quot;&gt;&lt;/xref&gt;. Because ProcessingInstruction nodes do not have children, this method has no effect.">Enregistre tous les enfants du nœud dans l’élément <see cref="T:System.Xml.XmlWriter" /> spécifié. Les nœuds ProcessingInstruction n'ont pas d'enfants, par conséquent, cette méthode est sans effet.</summary>
      <param name="w" vsli:raw="The &lt;code data-dev-comment-type=&quot;langword&quot;&gt;XmlWriter&lt;/code&gt; to which you want to save.">L'élément <see langword="XmlWriter" /> dans lequel vous voulez enregistrer.</param>
    </member>
    <member name="M:System.Xml.XmlProcessingInstruction.WriteTo(System.Xml.XmlWriter)">
      <summary vsli:raw="Saves the node to the specified &lt;xref data-throw-if-not-resolved=&quot;true&quot; uid=&quot;System.Xml.XmlWriter&quot;&gt;&lt;/xref&gt;.">Enregistre le nœud dans le <see cref="T:System.Xml.XmlWriter" /> spécifié.</summary>
      <param name="w" vsli:raw="The &lt;code data-dev-comment-type=&quot;langword&quot;&gt;XmlWriter&lt;/code&gt; to which you want to save.">L'élément <see langword="XmlWriter" /> dans lequel vous voulez enregistrer.</param>
    </member>
    <member name="P:System.Xml.XmlProcessingInstruction.Data">
      <summary vsli:raw="Gets or sets the content of the processing instruction, excluding the target.">Obtient ou définit le contenu de l'instruction de traitement, à l'exclusion de la cible.</summary>
      <returns vsli:raw="The content of the processing instruction, excluding the target.">Contenu de l'instruction de traitement, à l'exclusion de la cible.</returns>
    </member>
    <member name="P:System.Xml.XmlProcessingInstruction.InnerText">
      <summary vsli:raw="Gets or sets the concatenated values of the node and all its children.">Obtient ou définit les valeurs concaténées du nœud et de tous ses enfants.</summary>
      <returns vsli:raw="The concatenated values of the node and all its children.">Valeurs concaténées du nœud et de tous ses enfants.</returns>
    </member>
    <member name="P:System.Xml.XmlProcessingInstruction.LocalName">
      <summary vsli:raw="Gets the local name of the node.">Obtient le nom local du nœud.</summary>
      <returns vsli:raw="For processing instruction nodes, this property returns the target of the processing instruction.">Pour les nœuds d'instruction de traitement, cette propriété retourne la cible de l'instruction de traitement.</returns>
    </member>
    <member name="P:System.Xml.XmlProcessingInstruction.Name">
      <summary vsli:raw="Gets the qualified name of the node.">Obtient le nom qualifié du nœud.</summary>
      <returns vsli:raw="For processing instruction nodes, this property returns the target of the processing instruction.">Pour les nœuds d'instruction de traitement, cette propriété retourne la cible de l'instruction de traitement.</returns>
    </member>
    <member name="P:System.Xml.XmlProcessingInstruction.NodeType">
      <summary vsli:raw="Gets the type of the current node.">Obtient le type du nœud actuel.</summary>
      <returns vsli:raw="For &lt;code data-dev-comment-type=&quot;langword&quot;&gt;XmlProcessingInstruction&lt;/code&gt; nodes, this value is XmlNodeType.ProcessingInstruction.">Pour les nœuds <see langword="XmlProcessingInstruction" />, cette valeur est XmlNodeType.ProcessingInstruction.</returns>
    </member>
    <member name="P:System.Xml.XmlProcessingInstruction.Target">
      <summary vsli:raw="Gets the target of the processing instruction.">Obtient la cible de l'instruction de traitement.</summary>
      <returns vsli:raw="The target of the processing instruction.">Cible de l'instruction de traitement.</returns>
    </member>
    <member name="P:System.Xml.XmlProcessingInstruction.Value">
      <summary vsli:raw="Gets or sets the value of the node.">Obtient ou définit la valeur du nœud.</summary>
      <exception cref="T:System.ArgumentException">Le nœud est en lecture seule.</exception>
      <returns vsli:raw="The entire content of the processing instruction, excluding the target.">Intégralité du contenu de l'instruction de traitement, à l'exclusion de la cible.</returns>
    </member>
    <member name="T:System.Xml.XmlQualifiedName">
      <summary vsli:raw="Represents an XML qualified name.">Représente un nom qualifié XML.</summary>
    </member>
    <member name="F:System.Xml.XmlQualifiedName.Empty">
      <summary vsli:raw="Provides an empty &lt;see cref=&quot;T:System.Xml.XmlQualifiedName&quot; /&gt;.">Fournit une chaîne vide <see cref="T:System.Xml.XmlQualifiedName" />.</summary>
    </member>
    <member name="M:System.Xml.XmlQualifiedName.#ctor">
      <summary vsli:raw="Initializes a new instance of the &lt;see cref=&quot;T:System.Xml.XmlQualifiedName&quot; /&gt; class.">Initialise une nouvelle instance de la classe <see cref="T:System.Xml.XmlQualifiedName" />.</summary>
    </member>
    <member name="M:System.Xml.XmlQualifiedName.#ctor(System.String)">
      <summary vsli:raw="Initializes a new instance of the &lt;see cref=&quot;T:System.Xml.XmlQualifiedName&quot; /&gt; class with the specified name.">Initialise une nouvelle instance de la classe <see cref="T:System.Xml.XmlQualifiedName" /> avec le nom spécifié.</summary>
      <param name="name" vsli:raw="The local name to use as the name of the &lt;see cref=&quot;T:System.Xml.XmlQualifiedName&quot; /&gt; object.">Le nom local à utiliser comme nom de l'objet <see cref="T:System.Xml.XmlQualifiedName" />.</param>
    </member>
    <member name="M:System.Xml.XmlQualifiedName.#ctor(System.String,System.String)">
      <summary vsli:raw="Initializes a new instance of the &lt;see cref=&quot;T:System.Xml.XmlQualifiedName&quot; /&gt; class with the specified name and namespace.">Initialise une nouvelle instance de la classe <see cref="T:System.Xml.XmlQualifiedName" /> avec le nom et l'espace de noms spécifiés.</summary>
      <param name="name" vsli:raw="The local name to use as the name of the &lt;see cref=&quot;T:System.Xml.XmlQualifiedName&quot; /&gt; object.">Le nom local à utiliser comme nom de l'objet <see cref="T:System.Xml.XmlQualifiedName" />.</param>
      <param name="ns" vsli:raw="The namespace for the &lt;see cref=&quot;T:System.Xml.XmlQualifiedName&quot; /&gt; object.">Espace de noms pour l'objet <see cref="T:System.Xml.XmlQualifiedName" />.</param>
    </member>
    <member name="M:System.Xml.XmlQualifiedName.Equals(System.Object)">
      <summary vsli:raw="Determines whether the specified &lt;see cref=&quot;T:System.Xml.XmlQualifiedName&quot; /&gt; object is equal to the current &lt;see cref=&quot;T:System.Xml.XmlQualifiedName&quot; /&gt; object.">Détermine si l'objet <see cref="T:System.Xml.XmlQualifiedName" /> spécifié est égal à l'objet <see cref="T:System.Xml.XmlQualifiedName" /> en cours.</summary>
      <param name="other" vsli:raw="The &lt;see cref=&quot;T:System.Xml.XmlQualifiedName&quot; /&gt; to compare.">
        <see cref="T:System.Xml.XmlQualifiedName" /> à comparer.</param>
      <returns vsli:raw="&lt;see langword=&quot;true&quot; /&gt; if the two are the same instance object; otherwise, &lt;see langword=&quot;false&quot; /&gt;.">
        <see langword="true" /> si les deux sont le même objet d'instance ; sinon, <see langword="false" />.</returns>
    </member>
    <member name="M:System.Xml.XmlQualifiedName.GetHashCode">
      <summary vsli:raw="Returns the hash code for the &lt;see cref=&quot;T:System.Xml.XmlQualifiedName&quot; /&gt;.">Retourne le code de hachage pour la <see cref="T:System.Xml.XmlQualifiedName" />.</summary>
      <returns vsli:raw="A hash code for this object.">Code de hachage de cet objet.</returns>
    </member>
    <member name="M:System.Xml.XmlQualifiedName.op_Equality(System.Xml.XmlQualifiedName,System.Xml.XmlQualifiedName)">
      <summary vsli:raw="Compares two &lt;see cref=&quot;T:System.Xml.XmlQualifiedName&quot; /&gt; objects.">Compare deux objets <see cref="T:System.Xml.XmlQualifiedName" />.</summary>
      <param name="a" vsli:raw="An &lt;see cref=&quot;T:System.Xml.XmlQualifiedName&quot; /&gt; to compare.">
        <see cref="T:System.Xml.XmlQualifiedName" /> à comparer.</param>
      <param name="b" vsli:raw="An &lt;see cref=&quot;T:System.Xml.XmlQualifiedName&quot; /&gt; to compare.">
        <see cref="T:System.Xml.XmlQualifiedName" /> à comparer.</param>
      <returns vsli:raw="&lt;see langword=&quot;true&quot; /&gt; if the two objects have the same name and namespace values; otherwise, &lt;see langword=&quot;false&quot; /&gt;.">
        <see langword="true" /> si les deux objets ont le même nom et les mêmes valeurs d'espace de noms ; sinon <see langword="false" />.</returns>
    </member>
    <member name="M:System.Xml.XmlQualifiedName.op_Inequality(System.Xml.XmlQualifiedName,System.Xml.XmlQualifiedName)">
      <summary vsli:raw="Compares two &lt;see cref=&quot;T:System.Xml.XmlQualifiedName&quot; /&gt; objects.">Compare deux objets <see cref="T:System.Xml.XmlQualifiedName" />.</summary>
      <param name="a" vsli:raw="An &lt;see cref=&quot;T:System.Xml.XmlQualifiedName&quot; /&gt; to compare.">
        <see cref="T:System.Xml.XmlQualifiedName" /> à comparer.</param>
      <param name="b" vsli:raw="An &lt;see cref=&quot;T:System.Xml.XmlQualifiedName&quot; /&gt; to compare.">
        <see cref="T:System.Xml.XmlQualifiedName" /> à comparer.</param>
      <returns vsli:raw="&lt;see langword=&quot;true&quot; /&gt; if the name and namespace values for the two objects differ; otherwise, &lt;see langword=&quot;false&quot; /&gt;.">
        <see langword="true" /> si les valeurs de nom et d'espace de noms diffèrent pour les deux objets ; sinon <see langword="false" />.</returns>
    </member>
    <member name="M:System.Xml.XmlQualifiedName.ToString">
      <summary vsli:raw="Returns the string value of the &lt;see cref=&quot;T:System.Xml.XmlQualifiedName&quot; /&gt;.">Retourne la valeur de chaîne de <see cref="T:System.Xml.XmlQualifiedName" />.</summary>
      <returns vsli:raw="The string value of the &lt;see cref=&quot;T:System.Xml.XmlQualifiedName&quot; /&gt; in the format of &lt;see langword=&quot;namespace:localname&quot; /&gt;. If the object does not have a namespace defined, this method returns just the local name.">La valeur de chaîne de <see cref="T:System.Xml.XmlQualifiedName" /> au format de <see langword="namespace:localname" />. Si l'objet n'a pas un espace de noms défini, cette méthode retourne uniquement le nom local.</returns>
    </member>
    <member name="M:System.Xml.XmlQualifiedName.ToString(System.String,System.String)">
      <summary vsli:raw="Returns the string value of the &lt;see cref=&quot;T:System.Xml.XmlQualifiedName&quot; /&gt;.">Retourne la valeur de chaîne de <see cref="T:System.Xml.XmlQualifiedName" />.</summary>
      <param name="name" vsli:raw="The name of the object.">Nom de l'objet.</param>
      <param name="ns" vsli:raw="The namespace of the object.">Espace de noms pour l'objet.</param>
      <returns vsli:raw="The string value of the &lt;see cref=&quot;T:System.Xml.XmlQualifiedName&quot; /&gt; in the format of &lt;see langword=&quot;namespace:localname&quot; /&gt;. If the object does not have a namespace defined, this method returns just the local name.">La valeur de chaîne de <see cref="T:System.Xml.XmlQualifiedName" /> au format de <see langword="namespace:localname" />. Si l'objet n'a pas un espace de noms défini, cette méthode retourne uniquement le nom local.</returns>
    </member>
    <member name="P:System.Xml.XmlQualifiedName.IsEmpty">
      <summary vsli:raw="Gets a value indicating whether the &lt;see cref=&quot;T:System.Xml.XmlQualifiedName&quot; /&gt; is empty.">Obtient une valeur indiquant si le <see cref="T:System.Xml.XmlQualifiedName" /> est vide.</summary>
      <returns vsli:raw="&lt;see langword=&quot;true&quot; /&gt; if name and namespace are empty strings; otherwise, &lt;see langword=&quot;false&quot; /&gt;.">
        <see langword="true" /> si le nom et l'espace de noms sont des chaînes vides ; sinon <see langword="false" />.</returns>
    </member>
    <member name="P:System.Xml.XmlQualifiedName.Name">
      <summary vsli:raw="Gets a string representation of the qualified name of the &lt;see cref=&quot;T:System.Xml.XmlQualifiedName&quot; /&gt;.">Obtient une représentation de chaîne du nom complet de <see cref="T:System.Xml.XmlQualifiedName" />.</summary>
      <returns vsli:raw="A string representation of the qualified name or String.Empty if a name is not defined for the object.">Une représentation du nom complet ou String.Empty si un nom n'est pas défini pour l'objet.</returns>
    </member>
    <member name="P:System.Xml.XmlQualifiedName.Namespace">
      <summary vsli:raw="Gets a string representation of the namespace of the &lt;see cref=&quot;T:System.Xml.XmlQualifiedName&quot; /&gt;.">Obtient une représentation d'espace de noms de <see cref="T:System.Xml.XmlQualifiedName" />.</summary>
      <returns vsli:raw="A string representation of the namespace or String.Empty if a namespace is not defined for the object.">Une représentation de l'espace de noms, ou String.Empty si un espace de noms n'est pas défini pour l'objet.</returns>
    </member>
    <member name="T:System.Xml.XmlReader">
      <summary vsli:raw="Represents a reader that provides fast, noncached, forward-only access to XML data.">Représente un lecteur fournissant un accès rapide, non mis en cache et en avant uniquement vers les données XML.</summary>
    </member>
    <member name="M:System.Xml.XmlReader.#ctor">
      <summary vsli:raw="Initializes a new instance of the &lt;see langword=&quot;XmlReader&quot; /&gt; class.">Initialise une nouvelle instance de la classe <see langword="XmlReader" />.</summary>
    </member>
    <member name="M:System.Xml.XmlReader.Close">
      <summary vsli:raw="When overridden in a derived class, changes the &lt;see cref=&quot;P:System.Xml.XmlReader.ReadState&quot; /&gt; to &lt;see cref=&quot;F:System.Xml.ReadState.Closed&quot; /&gt;.">En cas de substitution dans une classe dérivée, modifie <see cref="P:System.Xml.XmlReader.ReadState" /> en <see cref="F:System.Xml.ReadState.Closed" />.</summary>
      <exception cref="T:System.InvalidOperationException" vsli:raw="An &lt;see cref=&quot;T:System.Xml.XmlReader&quot; /&gt; method was called before a previous asynchronous operation finished. In this case, &lt;see cref=&quot;T:System.InvalidOperationException&quot; /&gt; is thrown with the message &quot;An asynchronous operation is already in progress.&quot;">Une méthode <see cref="T:System.Xml.XmlReader" /> a été appelée avant la fin d’une opération asynchrone précédente. Dans ce cas, l’exception <see cref="T:System.InvalidOperationException" /> est levée avec le message « Une opération asynchrone est déjà en cours ».</exception>
    </member>
    <member name="M:System.Xml.XmlReader.Create(System.IO.Stream)">
      <summary vsli:raw="Creates a new &lt;see cref=&quot;T:System.Xml.XmlReader&quot; /&gt; instance using the specified stream with default settings.">Crée une instance de <see cref="T:System.Xml.XmlReader" /> à l’aide du flux spécifié avec les paramètres par défaut.</summary>
      <param name="input" vsli:raw="The stream that contains the XML data.&#xA;&#xA; The &lt;see cref=&quot;T:System.Xml.XmlReader&quot; /&gt; scans the first bytes of the stream looking for a byte order mark or other sign of encoding. When encoding is determined, the encoding is used to continue reading the stream, and processing continues parsing the input as a stream of (Unicode) characters.">Flux contenant les données XML.  
  
<see cref="T:System.Xml.XmlReader" /> analyse les premiers octets du flux à la recherche d’une marque d’ordre des octets ou d’un autre signe de codage. Quand l'encodage est déterminé, il est utilisé pour continuer à lire le flux, et le traitement continue à analyser l'entrée en tant que flux de caractères (Unicode).</param>
      <exception cref="T:System.ArgumentNullException" vsli:raw="The &lt;paramref name=&quot;input&quot; /&gt; value is &lt;see langword=&quot;null&quot; /&gt;.">
        <paramref name="input" /> a la valeur <see langword="null" />.</exception>
      <exception cref="T:System.Security.SecurityException" vsli:raw="The &lt;see cref=&quot;T:System.Xml.XmlReader&quot; /&gt; does not have sufficient permissions to access the location of the XML data.">
        <see cref="T:System.Xml.XmlReader" /> n’a pas d’autorisations suffisantes pour accéder à l’emplacement des données XML.</exception>
      <returns vsli:raw="An object that is used to read the XML data in the stream.">Objet permettant de lire les données XML contenues dans le flux de données.</returns>
    </member>
    <member name="M:System.Xml.XmlReader.Create(System.IO.Stream,System.Xml.XmlReaderSettings)">
      <summary vsli:raw="Creates a new &lt;see cref=&quot;T:System.Xml.XmlReader&quot; /&gt; instance with the specified stream and settings.">Crée une instance de <see cref="T:System.Xml.XmlReader" /> avec le flux et les paramètres spécifiés.</summary>
      <param name="input" vsli:raw="The stream that contains the XML data.&#xA;&#xA; The &lt;see cref=&quot;T:System.Xml.XmlReader&quot; /&gt; scans the first bytes of the stream looking for a byte order mark or other sign of encoding. When encoding is determined, the encoding is used to continue reading the stream, and processing continues parsing the input as a stream of (Unicode) characters.">Flux contenant les données XML.  
  
<see cref="T:System.Xml.XmlReader" /> analyse les premiers octets du flux à la recherche d’une marque d’ordre des octets ou d’un autre signe de codage. Quand l'encodage est déterminé, il est utilisé pour continuer à lire le flux, et le traitement continue à analyser l'entrée en tant que flux de caractères (Unicode).</param>
      <param name="settings" vsli:raw="The settings for the new &lt;see cref=&quot;T:System.Xml.XmlReader&quot; /&gt; instance. This value can be &lt;see langword=&quot;null&quot; /&gt;.">Paramètres de la nouvelle instance de <see cref="T:System.Xml.XmlReader" />. Cette valeur peut être <see langword="null" />.</param>
      <exception cref="T:System.ArgumentNullException" vsli:raw="The &lt;paramref name=&quot;input&quot; /&gt; value is &lt;see langword=&quot;null&quot; /&gt;.">
        <paramref name="input" /> a la valeur <see langword="null" />.</exception>
      <returns vsli:raw="An object that is used to read the XML data in the stream.">Objet permettant de lire les données XML contenues dans le flux de données.</returns>
    </member>
    <member name="M:System.Xml.XmlReader.Create(System.IO.Stream,System.Xml.XmlReaderSettings,System.String)">
      <summary vsli:raw="Creates a new &lt;see cref=&quot;T:System.Xml.XmlReader&quot; /&gt; instance using the specified stream, base URI, and settings.">Crée une instance de <see cref="T:System.Xml.XmlReader" /> en utilisant le flux, l’URI de base et les paramètres spécifiés.</summary>
      <param name="input" vsli:raw="The stream that contains the XML data.&#xA;&#xA; The &lt;see cref=&quot;T:System.Xml.XmlReader&quot; /&gt; scans the first bytes of the stream looking for a byte order mark or other sign of encoding. When encoding is determined, the encoding is used to continue reading the stream, and processing continues parsing the input as a stream of (Unicode) characters.">Flux contenant les données XML.  
  
<see cref="T:System.Xml.XmlReader" /> analyse les premiers octets du flux à la recherche d’une marque d’ordre des octets ou d’un autre signe de codage. Quand l'encodage est déterminé, il est utilisé pour continuer à lire le flux, et le traitement continue à analyser l'entrée en tant que flux de caractères (Unicode).</param>
      <param name="settings" vsli:raw="The settings for the new &lt;see cref=&quot;T:System.Xml.XmlReader&quot; /&gt; instance. This value can be &lt;see langword=&quot;null&quot; /&gt;.">Paramètres de la nouvelle instance de <see cref="T:System.Xml.XmlReader" />. Cette valeur peut être <see langword="null" />.</param>
      <param name="baseUri" vsli:raw="The base URI for the entity or document being read. This value can be &lt;see langword=&quot;null&quot; /&gt;.&#xA;&#xA; Security Note The base URI is used to resolve the relative URI of the XML document. Do not use a base URI from an untrusted source.">URI de base pour l'entité ou le document en cours de lecture. Cette valeur peut être <see langword="null" />.  
  
 Note sur la sécurité L’URI de base est utilisé pour résoudre l’URI relatif du document XML. N'utilisez pas un URI de base provenant d'une source non fiable.</param>
      <exception cref="T:System.ArgumentNullException" vsli:raw="The &lt;paramref name=&quot;input&quot; /&gt; value is &lt;see langword=&quot;null&quot; /&gt;.">
        <paramref name="input" /> a la valeur <see langword="null" />.</exception>
      <returns vsli:raw="An object that is used to read the XML data in the stream.">Objet permettant de lire les données XML contenues dans le flux de données.</returns>
    </member>
    <member name="M:System.Xml.XmlReader.Create(System.IO.Stream,System.Xml.XmlReaderSettings,System.Xml.XmlParserContext)">
      <summary vsli:raw="Creates a new &lt;see cref=&quot;T:System.Xml.XmlReader&quot; /&gt; instance using the specified stream, settings, and context information for parsing.">Crée une instance de <see cref="T:System.Xml.XmlReader" /> à l’aide du flux, des paramètres et des informations de contexte d’analyse spécifiés.</summary>
      <param name="input" vsli:raw="The stream that contains the XML data.&#xA;&#xA; The &lt;see cref=&quot;T:System.Xml.XmlReader&quot; /&gt; scans the first bytes of the stream looking for a byte order mark or other sign of encoding. When encoding is determined, the encoding is used to continue reading the stream, and processing continues parsing the input as a stream of (Unicode) characters.">Flux contenant les données XML.  
  
<see cref="T:System.Xml.XmlReader" /> analyse les premiers octets du flux à la recherche d’une marque d’ordre des octets ou d’un autre signe de codage. Quand l'encodage est déterminé, il est utilisé pour continuer à lire le flux, et le traitement continue à analyser l'entrée en tant que flux de caractères (Unicode).</param>
      <param name="settings" vsli:raw="The settings for the new &lt;see cref=&quot;T:System.Xml.XmlReader&quot; /&gt; instance. This value can be &lt;see langword=&quot;null&quot; /&gt;.">Paramètres de la nouvelle instance de <see cref="T:System.Xml.XmlReader" />. Cette valeur peut être <see langword="null" />.</param>
      <param name="inputContext" vsli:raw="The context information required to parse the XML fragment. The context information can include the &lt;see cref=&quot;T:System.Xml.XmlNameTable&quot; /&gt; to use, encoding, namespace scope, the current &lt;c&gt;xml:lang&lt;/c&gt; and &lt;c&gt;xml:space&lt;/c&gt; scope, base URI, and document type definition.&#xA;&#xA; This value can be &lt;see langword=&quot;null&quot; /&gt;.">Les informations de contexte nécessaires à l'analyse du fragment XML. Les informations de contexte peuvent inclure le <see cref="T:System.Xml.XmlNameTable" /> à utiliser, l’encodage, la portée d’espace de noms, la portée <c>xml:lang</c> et <c>xml:space</c> actuelle, l’URI de base et la définition de type de document.  
  
Cette valeur peut être <see langword="null" />.</param>
      <exception cref="T:System.ArgumentNullException" vsli:raw="The &lt;paramref name=&quot;input&quot; /&gt; value is &lt;see langword=&quot;null&quot; /&gt;.">
        <paramref name="input" /> a la valeur <see langword="null" />.</exception>
      <returns vsli:raw="An object that is used to read the XML data in the stream.">Objet permettant de lire les données XML contenues dans le flux de données.</returns>
    </member>
    <member name="M:System.Xml.XmlReader.Create(System.IO.TextReader)">
      <summary vsli:raw="Creates a new &lt;see cref=&quot;T:System.Xml.XmlReader&quot; /&gt; instance by using the specified text reader.">Crée une instance de <see cref="T:System.Xml.XmlReader" /> à l’aide du lecteur de texte spécifié.</summary>
      <param name="input" vsli:raw="The text reader from which to read the XML data. A text reader returns a stream of Unicode characters, so the encoding specified in the XML declaration is not used by the XML reader to decode the data stream.">Lecteur de texte à partir duquel lire les données XML. Comme un lecteur de texte retourne un flux de caractères Unicode, l'encodage spécifié dans la déclaration XML n'est pas utilisé par le lecteur XML pour décoder le flux de données.</param>
      <exception cref="T:System.ArgumentNullException" vsli:raw="The &lt;paramref name=&quot;input&quot; /&gt; value is &lt;see langword=&quot;null&quot; /&gt;.">
        <paramref name="input" /> a la valeur <see langword="null" />.</exception>
      <returns vsli:raw="An object that is used to read the XML data in the stream.">Objet permettant de lire les données XML contenues dans le flux de données.</returns>
    </member>
    <member name="M:System.Xml.XmlReader.Create(System.IO.TextReader,System.Xml.XmlReaderSettings)">
      <summary vsli:raw="Creates a new &lt;see cref=&quot;T:System.Xml.XmlReader&quot; /&gt; instance by using the specified text reader and settings.">Crée une instance de <see cref="T:System.Xml.XmlReader" /> à l’aide du lecteur de texte et des paramètres spécifiés.</summary>
      <param name="input" vsli:raw="The text reader from which to read the XML data. A text reader returns a stream of Unicode characters, so the encoding specified in the XML declaration isn't used by the XML reader to decode the data stream.">Lecteur de texte à partir duquel lire les données XML. Comme un lecteur de texte retourne un flux de caractères Unicode, l'encodage spécifié dans la déclaration XML n'est pas utilisé par le lecteur XML pour décoder le flux de données.</param>
      <param name="settings" vsli:raw="The settings for the new &lt;see cref=&quot;T:System.Xml.XmlReader&quot; /&gt;. This value can be &lt;see langword=&quot;null&quot; /&gt;.">Paramètres du nouveau <see cref="T:System.Xml.XmlReader" />. Cette valeur peut être <see langword="null" />.</param>
      <exception cref="T:System.ArgumentNullException" vsli:raw="The &lt;paramref name=&quot;input&quot; /&gt; value is &lt;see langword=&quot;null&quot; /&gt;.">
        <paramref name="input" /> a la valeur <see langword="null" />.</exception>
      <returns vsli:raw="An object that is used to read the XML data in the stream.">Objet permettant de lire les données XML contenues dans le flux de données.</returns>
    </member>
    <member name="M:System.Xml.XmlReader.Create(System.IO.TextReader,System.Xml.XmlReaderSettings,System.String)">
      <summary vsli:raw="Creates a new &lt;see cref=&quot;T:System.Xml.XmlReader&quot; /&gt; instance by using the specified text reader, settings, and base URI.">Crée une instance de <see cref="T:System.Xml.XmlReader" /> à l’aide du lecteur de texte, des paramètres et de l’URI de base spécifiés.</summary>
      <param name="input" vsli:raw="The text reader from which to read the XML data. A text reader returns a stream of Unicode characters, so the encoding specified in the XML declaration isn't used by the &lt;see cref=&quot;T:System.Xml.XmlReader&quot; /&gt; to decode the data stream.">Lecteur de texte à partir duquel lire les données XML. Comme un lecteur de texte retourne un flux de caractères Unicode, l’encodage spécifié dans la déclaration XML n’est pas utilisé par le lecteur <see cref="T:System.Xml.XmlReader" /> pour décoder le flux de données.</param>
      <param name="settings" vsli:raw="The settings for the new &lt;see cref=&quot;T:System.Xml.XmlReader&quot; /&gt; instance. This value can be &lt;see langword=&quot;null&quot; /&gt;.">Paramètres de la nouvelle instance de <see cref="T:System.Xml.XmlReader" />. Cette valeur peut être <see langword="null" />.</param>
      <param name="baseUri" vsli:raw="The base URI for the entity or document being read. This value can be &lt;see langword=&quot;null&quot; /&gt;.&#xA;&#xA; Security Note The base URI is used to resolve the relative URI of the XML document. Do not use a base URI from an untrusted source.">URI de base pour l'entité ou le document en cours de lecture. Cette valeur peut être <see langword="null" />.  
  
 Note sur la sécurité L’URI de base est utilisé pour résoudre l’URI relatif du document XML. N'utilisez pas un URI de base provenant d'une source non fiable.</param>
      <exception cref="T:System.ArgumentNullException" vsli:raw="The &lt;paramref name=&quot;input&quot; /&gt; value is &lt;see langword=&quot;null&quot; /&gt;.">
        <paramref name="input" /> a la valeur <see langword="null" />.</exception>
      <returns vsli:raw="An object that is used to read the XML data in the stream.">Objet permettant de lire les données XML contenues dans le flux de données.</returns>
    </member>
    <member name="M:System.Xml.XmlReader.Create(System.IO.TextReader,System.Xml.XmlReaderSettings,System.Xml.XmlParserContext)">
      <summary vsli:raw="Creates a new &lt;see cref=&quot;T:System.Xml.XmlReader&quot; /&gt; instance by using the specified text reader, settings, and context information for parsing.">Crée une instance de <see cref="T:System.Xml.XmlReader" /> à l’aide du lecteur de texte, des paramètres et des informations de contexte d’analyse spécifiés.</summary>
      <param name="input" vsli:raw="The text reader from which to read the XML data. A text reader returns a stream of Unicode characters, so the encoding specified in the XML declaration isn't used by the XML reader to decode the data stream.">Lecteur de texte à partir duquel lire les données XML. Comme un lecteur de texte retourne un flux de caractères Unicode, l'encodage spécifié dans la déclaration XML n'est pas utilisé par le lecteur XML pour décoder le flux de données.</param>
      <param name="settings" vsli:raw="The settings for the new &lt;see cref=&quot;T:System.Xml.XmlReader&quot; /&gt; instance. This value can be &lt;see langword=&quot;null&quot; /&gt;.">Paramètres de la nouvelle instance de <see cref="T:System.Xml.XmlReader" />. Cette valeur peut être <see langword="null" />.</param>
      <param name="inputContext" vsli:raw="The context information required to parse the XML fragment. The context information can include the &lt;see cref=&quot;T:System.Xml.XmlNameTable&quot; /&gt; to use, encoding, namespace scope, the current &lt;c&gt;xml:lang&lt;/c&gt; and &lt;c&gt;xml:space&lt;/c&gt; scope, base URI, and document type definition.&#xA;&#xA; This value can be &lt;see langword=&quot;null&quot; /&gt;.">Les informations de contexte nécessaires à l'analyse du fragment XML. Les informations de contexte peuvent inclure le <see cref="T:System.Xml.XmlNameTable" /> à utiliser, l’encodage, la portée d’espace de noms, la portée <c>xml:lang</c> et <c>xml:space</c> actuelle, l’URI de base et la définition de type de document.  
  
Cette valeur peut être <see langword="null" />.</param>
      <exception cref="T:System.ArgumentNullException" vsli:raw="The &lt;paramref name=&quot;input&quot; /&gt; value is &lt;see langword=&quot;null&quot; /&gt;.">
        <paramref name="input" /> a la valeur <see langword="null" />.</exception>
      <exception cref="T:System.ArgumentException" vsli:raw="The &lt;see cref=&quot;P:System.Xml.XmlReaderSettings.NameTable&quot; /&gt; and &lt;see cref=&quot;P:System.Xml.XmlParserContext.NameTable&quot; /&gt; properties both contain values. (Only one of these &lt;see langword=&quot;NameTable&quot; /&gt; properties can be set and used.)">Les propriétés <see cref="P:System.Xml.XmlReaderSettings.NameTable" /> et <see cref="P:System.Xml.XmlParserContext.NameTable" /> contiennent toutes deux des valeurs. (Vous ne pouvez définir et utiliser qu’une seule de ces propriétés <see langword="NameTable" />).</exception>
      <returns vsli:raw="An object that is used to read the XML data in the stream.">Objet permettant de lire les données XML contenues dans le flux de données.</returns>
    </member>
    <member name="M:System.Xml.XmlReader.Create(System.String)">
      <summary vsli:raw="Creates a new &lt;see cref=&quot;T:System.Xml.XmlReader&quot; /&gt; instance with specified URI.">Crée une instance de <see cref="T:System.Xml.XmlReader" /> avec l’URI spécifié.</summary>
      <param name="inputUri" vsli:raw="The URI for the file that contains the XML data. The &lt;see cref=&quot;T:System.Xml.XmlUrlResolver&quot; /&gt; class is used to convert the path to a canonical data representation.">URI du fichier qui contient les données XML. La classe <see cref="T:System.Xml.XmlUrlResolver" /> permet de convertir le chemin en représentation de données canonique.</param>
      <exception cref="T:System.ArgumentNullException" vsli:raw="The &lt;paramref name=&quot;inputUri&quot; /&gt; value is &lt;see langword=&quot;null&quot; /&gt;.">
        <paramref name="inputUri" /> a la valeur <see langword="null" />.</exception>
      <exception cref="T:System.Security.SecurityException" vsli:raw="The &lt;see cref=&quot;T:System.Xml.XmlReader&quot; /&gt; does not have sufficient permissions to access the location of the XML data.">
        <see cref="T:System.Xml.XmlReader" /> n’a pas d’autorisations suffisantes pour accéder à l’emplacement des données XML.</exception>
      <exception cref="T:System.IO.FileNotFoundException" vsli:raw="The file identified by the URI does not exist.">Le fichier identifié par l’URI n’existe pas.</exception>
      <exception cref="T:System.UriFormatException" vsli:raw="The URI format is not correct.&#xA;&#xA;Note: In .NET for Windows Store apps or the Portable Class Library, catch the base class exception, &lt;see cref=&quot;T:System.FormatException&quot; /&gt;, instead.">
        <block subset="none" type="note">
          <para>  
 Dans .NET pour les applications du Windows Store ou la Bibliothèque de classes portable, interceptez l’exception de la classe de base, <see cref="T:System.FormatException" />, à la place.</para>
        </block>  
  
 Le format d’URI n’est pas correct.</exception>
      <returns vsli:raw="An object that is used to read the XML data in the stream.">Objet permettant de lire les données XML contenues dans le flux de données.</returns>
    </member>
    <member name="M:System.Xml.XmlReader.Create(System.String,System.Xml.XmlReaderSettings)">
      <summary vsli:raw="Creates a new &lt;see cref=&quot;T:System.Xml.XmlReader&quot; /&gt; instance by using the specified URI and settings.">Crée une instance de <see cref="T:System.Xml.XmlReader" /> en utilisant l’URI et les paramètres spécifiés.</summary>
      <param name="inputUri" vsli:raw="The URI for the file containing the XML data. The &lt;see cref=&quot;T:System.Xml.XmlResolver&quot; /&gt; object on the &lt;see cref=&quot;T:System.Xml.XmlReaderSettings&quot; /&gt; object is used to convert the path to a canonical data representation. If &lt;see cref=&quot;P:System.Xml.XmlReaderSettings.XmlResolver&quot; /&gt; is &lt;see langword=&quot;null&quot; /&gt;, a new &lt;see cref=&quot;T:System.Xml.XmlUrlResolver&quot; /&gt; object is used.">URI du fichier contenant les données XML. L’objet <see cref="T:System.Xml.XmlResolver" /> de l’objet <see cref="T:System.Xml.XmlReaderSettings" /> permet de convertir le chemin en représentation de données canonique. Si <see cref="P:System.Xml.XmlReaderSettings.XmlResolver" /> a la valeur <see langword="null" />, un nouvel objet <see cref="T:System.Xml.XmlUrlResolver" /> est utilisé.</param>
      <param name="settings" vsli:raw="The settings for the new &lt;see cref=&quot;T:System.Xml.XmlReader&quot; /&gt; instance. This value can be &lt;see langword=&quot;null&quot; /&gt;.">Paramètres de la nouvelle instance de <see cref="T:System.Xml.XmlReader" />. Cette valeur peut être <see langword="null" />.</param>
      <exception cref="T:System.ArgumentNullException" vsli:raw="The &lt;paramref name=&quot;inputUri&quot; /&gt; value is &lt;see langword=&quot;null&quot; /&gt;.">
        <paramref name="inputUri" /> a la valeur <see langword="null" />.</exception>
      <exception cref="T:System.IO.FileNotFoundException" vsli:raw="The file specified by the URI cannot be found.">Le fichier spécifié par l’URI est introuvable.</exception>
      <exception cref="T:System.UriFormatException" vsli:raw="The URI format is not correct.&#xA;&#xA;Note: In .NET for Windows Store apps or the Portable Class Library, catch the base class exception, &lt;see cref=&quot;T:System.FormatException&quot; /&gt;, instead.">
        <block subset="none" type="note">
          <para>  
 Dans .NET pour les applications du Windows Store ou la Bibliothèque de classes portable, interceptez l’exception de la classe de base, <see cref="T:System.FormatException" />, à la place.</para>
        </block>  
  
 Le format d’URI n’est pas correct.</exception>
      <returns vsli:raw="An object that is used to read the XML data in the stream.">Objet permettant de lire les données XML contenues dans le flux de données.</returns>
    </member>
    <member name="M:System.Xml.XmlReader.Create(System.String,System.Xml.XmlReaderSettings,System.Xml.XmlParserContext)">
      <summary vsli:raw="Creates a new &lt;see cref=&quot;T:System.Xml.XmlReader&quot; /&gt; instance by using the specified URI, settings, and context information for parsing.">Crée une instance de <see cref="T:System.Xml.XmlReader" /> en utilisant l’URI, les paramètres et les informations de contexte spécifiés pour l’analyse.</summary>
      <param name="inputUri" vsli:raw="The URI for the file containing the XML data. The &lt;see cref=&quot;T:System.Xml.XmlResolver&quot; /&gt; object on the &lt;see cref=&quot;T:System.Xml.XmlReaderSettings&quot; /&gt; object is used to convert the path to a canonical data representation. If &lt;see cref=&quot;P:System.Xml.XmlReaderSettings.XmlResolver&quot; /&gt; is &lt;see langword=&quot;null&quot; /&gt;, a new &lt;see cref=&quot;T:System.Xml.XmlUrlResolver&quot; /&gt; object is used.">URI du fichier contenant les données XML. L’objet <see cref="T:System.Xml.XmlResolver" /> de l’objet <see cref="T:System.Xml.XmlReaderSettings" /> permet de convertir le chemin en représentation de données canonique. Si <see cref="P:System.Xml.XmlReaderSettings.XmlResolver" /> a la valeur <see langword="null" />, un nouvel objet <see cref="T:System.Xml.XmlUrlResolver" /> est utilisé.</param>
      <param name="settings" vsli:raw="The settings for the new &lt;see cref=&quot;T:System.Xml.XmlReader&quot; /&gt; instance. This value can be &lt;see langword=&quot;null&quot; /&gt;.">Paramètres de la nouvelle instance de <see cref="T:System.Xml.XmlReader" />. Cette valeur peut être <see langword="null" />.</param>
      <param name="inputContext" vsli:raw="The context information required to parse the XML fragment. The context information can include the &lt;see cref=&quot;T:System.Xml.XmlNameTable&quot; /&gt; to use, encoding, namespace scope, the current &lt;c&gt;xml:lang&lt;/c&gt; and &lt;c&gt;xml:space&lt;/c&gt; scope, base URI, and document type definition.&#xA;&#xA; This value can be &lt;see langword=&quot;null&quot; /&gt;.">Les informations de contexte nécessaires à l'analyse du fragment XML. Les informations de contexte peuvent inclure le <see cref="T:System.Xml.XmlNameTable" /> à utiliser, l’encodage, la portée d’espace de noms, la portée <c>xml:lang</c> et <c>xml:space</c> actuelle, l’URI de base et la définition de type de document.  
  
Cette valeur peut être <see langword="null" />.</param>
      <exception cref="T:System.ArgumentNullException" vsli:raw="The &lt;see langword=&quot;inputUri&quot; /&gt; value is &lt;see langword=&quot;null&quot; /&gt;.">
        <see langword="inputUri" /> a la valeur <see langword="null" />.</exception>
      <exception cref="T:System.Security.SecurityException" vsli:raw="The &lt;see cref=&quot;T:System.Xml.XmlReader&quot; /&gt; does not have sufficient permissions to access the location of the XML data.">
        <see cref="T:System.Xml.XmlReader" /> n’a pas d’autorisations suffisantes pour accéder à l’emplacement des données XML.</exception>
      <exception cref="T:System.ArgumentException" vsli:raw="The &lt;see cref=&quot;P:System.Xml.XmlReaderSettings.NameTable&quot; /&gt; and &lt;see cref=&quot;P:System.Xml.XmlParserContext.NameTable&quot; /&gt; properties both contain values. (Only one of these &lt;see langword=&quot;NameTable&quot; /&gt; properties can be set and used).">Les propriétés <see cref="P:System.Xml.XmlReaderSettings.NameTable" /> et <see cref="P:System.Xml.XmlParserContext.NameTable" /> contiennent toutes deux des valeurs. (Vous ne pouvez définir et utiliser qu’une seule de ces propriétés <see langword="NameTable" />).</exception>
      <exception cref="T:System.IO.FileNotFoundException" vsli:raw="The file specified by the URI cannot be found.">Le fichier spécifié par l’URI est introuvable.</exception>
      <exception cref="T:System.UriFormatException" vsli:raw="The URI format is not correct.">Le format d’URI n’est pas correct.</exception>
      <returns vsli:raw="An object that is used to read the XML data in the stream.">Objet permettant de lire les données XML contenues dans le flux de données.</returns>
    </member>
    <member name="M:System.Xml.XmlReader.Create(System.Xml.XmlReader,System.Xml.XmlReaderSettings)">
      <summary vsli:raw="Creates a new &lt;see cref=&quot;T:System.Xml.XmlReader&quot; /&gt; instance by using the specified XML reader and settings.">Crée une instance de <see cref="T:System.Xml.XmlReader" /> à l’aide des paramètres et du lecteur XML spécifiés.</summary>
      <param name="reader" vsli:raw="The object that you want to use as the underlying XML reader.">L'objet à utiliser comme lecteur XML sous-jacent.</param>
      <param name="settings" vsli:raw="The settings for the new &lt;see cref=&quot;T:System.Xml.XmlReader&quot; /&gt; instance.&#xA;&#xA; The conformance level of the &lt;see cref=&quot;T:System.Xml.XmlReaderSettings&quot; /&gt; object must either match the conformance level of the underlying reader, or it must be set to &lt;see cref=&quot;F:System.Xml.ConformanceLevel.Auto&quot; /&gt;.">Paramètres de la nouvelle instance de <see cref="T:System.Xml.XmlReader" />.  
  
Le niveau de conformité de l’objet <see cref="T:System.Xml.XmlReaderSettings" /> doit soit correspondre au niveau de conformité du lecteur sous-jacent, soit avoir la valeur <see cref="F:System.Xml.ConformanceLevel.Auto" />.</param>
      <exception cref="T:System.ArgumentNullException" vsli:raw="The &lt;paramref name=&quot;reader&quot; /&gt; value is &lt;see langword=&quot;null&quot; /&gt;.">
        <paramref name="reader" /> a la valeur <see langword="null" />.</exception>
      <exception cref="T:System.InvalidOperationException" vsli:raw="If the &lt;see cref=&quot;T:System.Xml.XmlReaderSettings&quot; /&gt; object specifies a conformance level that is not consistent with conformance level of the underlying reader.&#xA;&#xA; -or-&#xA;&#xA; The underlying &lt;see cref=&quot;T:System.Xml.XmlReader&quot; /&gt; is in an &lt;see cref=&quot;F:System.Xml.ReadState.Error&quot; /&gt; or &lt;see cref=&quot;F:System.Xml.ReadState.Closed&quot; /&gt; state.">Si l’objet <see cref="T:System.Xml.XmlReaderSettings" /> spécifie un niveau de conformité qui n’est pas cohérent avec le niveau de conformité du lecteur sous-jacent.  
  
- ou - 
Le <see cref="T:System.Xml.XmlReader" /> sous-jacent se trouve dans un état <see cref="F:System.Xml.ReadState.Error" /> ou <see cref="F:System.Xml.ReadState.Closed" />.</exception>
      <returns vsli:raw="An object that is wrapped around the specified &lt;see cref=&quot;T:System.Xml.XmlReader&quot; /&gt; object.">Objet autour de l’objet <see cref="T:System.Xml.XmlReader" /> spécifié.</returns>
    </member>
    <member name="M:System.Xml.XmlReader.Dispose">
      <summary vsli:raw="Releases all resources used by the current instance of the &lt;see cref=&quot;T:System.Xml.XmlReader&quot; /&gt; class.">Libère toutes les ressources utilisées par l'instance actuelle de la classe <see cref="T:System.Xml.XmlReader" />.</summary>
      <exception cref="T:System.InvalidOperationException" vsli:raw="An &lt;see cref=&quot;T:System.Xml.XmlReader&quot; /&gt; method was called before a previous asynchronous operation finished. In this case, &lt;see cref=&quot;T:System.InvalidOperationException&quot; /&gt; is thrown with the message &quot;An asynchronous operation is already in progress.&quot;">Une méthode <see cref="T:System.Xml.XmlReader" /> a été appelée avant la fin d’une opération asynchrone précédente. Dans ce cas, l’exception <see cref="T:System.InvalidOperationException" /> est levée avec le message « Une opération asynchrone est déjà en cours ».</exception>
    </member>
    <member name="M:System.Xml.XmlReader.Dispose(System.Boolean)">
      <summary vsli:raw="Releases the unmanaged resources used by the &lt;see cref=&quot;T:System.Xml.XmlReader&quot; /&gt; and optionally releases the managed resources.">Libère les ressources non managées utilisées par <see cref="T:System.Xml.XmlReader" /> et libère éventuellement les ressources managées.</summary>
      <param name="disposing" vsli:raw="&lt;see langword=&quot;true&quot; /&gt; to release both managed and unmanaged resources; &lt;see langword=&quot;false&quot; /&gt; to release only unmanaged resources.">
        <see langword="true" /> pour libérer les ressources managées et non managées ; <see langword="false" /> pour libérer uniquement les ressources non managées.</param>
      <exception cref="T:System.InvalidOperationException" vsli:raw="An &lt;see cref=&quot;T:System.Xml.XmlReader&quot; /&gt; method was called before a previous asynchronous operation finished. In this case, &lt;see cref=&quot;T:System.InvalidOperationException&quot; /&gt; is thrown with the message &quot;An asynchronous operation is already in progress.&quot;">Une méthode <see cref="T:System.Xml.XmlReader" /> a été appelée avant la fin d’une opération asynchrone précédente. Dans ce cas, l’exception <see cref="T:System.InvalidOperationException" /> est levée avec le message « Une opération asynchrone est déjà en cours ».</exception>
    </member>
    <member name="M:System.Xml.XmlReader.GetAttribute(System.Int32)">
      <summary vsli:raw="When overridden in a derived class, gets the value of the attribute with the specified index.">En cas de substitution dans une classe dérivée, obtient la valeur de l'attribut avec l'index spécifié.</summary>
      <param name="i" vsli:raw="The index of the attribute. The index is zero-based. (The first attribute has index 0.)">Index de l'attribut. L'index est de base zéro. Le premier attribut possède l'index 0.</param>
      <exception cref="T:System.ArgumentOutOfRangeException" vsli:raw="&lt;paramref name=&quot;i&quot; /&gt; is out of range. It must be non-negative and less than the size of the attribute collection.">
        <paramref name="i" /> est hors limites. Il doit être non négatif et inférieur à la taille de la collection d'attributs.</exception>
      <exception cref="T:System.InvalidOperationException" vsli:raw="An &lt;see cref=&quot;T:System.Xml.XmlReader&quot; /&gt; method was called before a previous asynchronous operation finished. In this case, &lt;see cref=&quot;T:System.InvalidOperationException&quot; /&gt; is thrown with the message &quot;An asynchronous operation is already in progress.&quot;">Une méthode <see cref="T:System.Xml.XmlReader" /> a été appelée avant la fin d’une opération asynchrone précédente. Dans ce cas, l’exception <see cref="T:System.InvalidOperationException" /> est levée avec le message « Une opération asynchrone est déjà en cours ».</exception>
      <returns vsli:raw="The value of the specified attribute. This method does not move the reader.">Valeur de l'attribut spécifié. Cette méthode ne déplace pas le lecteur.</returns>
    </member>
    <member name="M:System.Xml.XmlReader.GetAttribute(System.String)">
      <summary vsli:raw="When overridden in a derived class, gets the value of the attribute with the specified &lt;see cref=&quot;P:System.Xml.XmlReader.Name&quot; /&gt;.">En cas de substitution dans une classe dérivée, obtient la valeur de l'attribut avec le <see cref="P:System.Xml.XmlReader.Name" /> spécifié.</summary>
      <param name="name" vsli:raw="The qualified name of the attribute.">Nom qualifié de l'attribut.</param>
      <exception cref="T:System.ArgumentNullException" vsli:raw="&lt;paramref name=&quot;name&quot; /&gt; is &lt;see langword=&quot;null&quot; /&gt;.">
        <paramref name="name" /> a la valeur <see langword="null" />.</exception>
      <exception cref="T:System.InvalidOperationException" vsli:raw="An &lt;see cref=&quot;T:System.Xml.XmlReader&quot; /&gt; method was called before a previous asynchronous operation finished. In this case, &lt;see cref=&quot;T:System.InvalidOperationException&quot; /&gt; is thrown with the message &quot;An asynchronous operation is already in progress.&quot;">Une méthode <see cref="T:System.Xml.XmlReader" /> a été appelée avant la fin d’une opération asynchrone précédente. Dans ce cas, l’exception <see cref="T:System.InvalidOperationException" /> est levée avec le message « Une opération asynchrone est déjà en cours ».</exception>
      <returns vsli:raw="The value of the specified attribute. If the attribute is not found or the value is &lt;see langword=&quot;String.Empty&quot; /&gt;, &lt;see langword=&quot;null&quot; /&gt; is returned.">Valeur de l'attribut spécifié. Si l'attribut est introuvable ou si la valeur est <see langword="String.Empty" />, <see langword="null" /> est retourné.</returns>
    </member>
    <member name="M:System.Xml.XmlReader.GetAttribute(System.String,System.String)">
      <summary vsli:raw="When overridden in a derived class, gets the value of the attribute with the specified &lt;see cref=&quot;P:System.Xml.XmlReader.LocalName&quot; /&gt; and &lt;see cref=&quot;P:System.Xml.XmlReader.NamespaceURI&quot; /&gt;.">En cas de substitution dans une classe dérivée, obtient la valeur de l'attribut avec le <see cref="P:System.Xml.XmlReader.LocalName" /> et le <see cref="P:System.Xml.XmlReader.NamespaceURI" /> spécifiés.</summary>
      <param name="name" vsli:raw="The local name of the attribute.">Le nom local de l'attribut.</param>
      <param name="namespaceURI" vsli:raw="The namespace URI of the attribute.">L'URI de l'espace de noms de l'attribut.</param>
      <exception cref="T:System.ArgumentNullException" vsli:raw="&lt;paramref name=&quot;name&quot; /&gt; is &lt;see langword=&quot;null&quot; /&gt;.">
        <paramref name="name" /> a la valeur <see langword="null" />.</exception>
      <exception cref="T:System.InvalidOperationException" vsli:raw="An &lt;see cref=&quot;T:System.Xml.XmlReader&quot; /&gt; method was called before a previous asynchronous operation finished. In this case, &lt;see cref=&quot;T:System.InvalidOperationException&quot; /&gt; is thrown with the message &quot;An asynchronous operation is already in progress.&quot;">Une méthode <see cref="T:System.Xml.XmlReader" /> a été appelée avant la fin d’une opération asynchrone précédente. Dans ce cas, l’exception <see cref="T:System.InvalidOperationException" /> est levée avec le message « Une opération asynchrone est déjà en cours ».</exception>
      <returns vsli:raw="The value of the specified attribute. If the attribute is not found or the value is &lt;see langword=&quot;String.Empty&quot; /&gt;, &lt;see langword=&quot;null&quot; /&gt; is returned. This method does not move the reader.">Valeur de l'attribut spécifié. Si l'attribut est introuvable ou si la valeur est <see langword="String.Empty" />, <see langword="null" /> est retourné. Cette méthode ne déplace pas le lecteur.</returns>
    </member>
    <member name="M:System.Xml.XmlReader.GetValueAsync">
      <summary vsli:raw="Asynchronously gets the value of the current node.">Obtient de façon asynchrone la valeur du nœud actuel.</summary>
      <exception cref="T:System.InvalidOperationException" vsli:raw="An &lt;see cref=&quot;T:System.Xml.XmlReader&quot; /&gt; method was called before a previous asynchronous operation finished. In this case, &lt;see cref=&quot;T:System.InvalidOperationException&quot; /&gt; is thrown with the message &quot;An asynchronous operation is already in progress&quot;.&#xA;&#xA;-or-&#xA;&#xA;An &lt;see cref=&quot;T:System.Xml.XmlReader&quot; /&gt; asynchronous method was called without setting the &lt;see cref=&quot;P:System.Xml.XmlReaderSettings.Async&quot; /&gt; flag to &lt;see langword=&quot;true&quot; /&gt;. In this case, &lt;see cref=&quot;T:System.InvalidOperationException&quot; /&gt; is thrown with the message &quot;Set XmlReaderSettings.Async to true if you want to use Async Methods.&quot;">Une méthode <see cref="T:System.Xml.XmlReader" /> a été appelée avant la fin d’une opération asynchrone précédente. Dans ce cas, l’exception <see cref="T:System.InvalidOperationException" /> est levée avec le message « Une opération asynchrone est déjà en cours. »

- ou -

Une méthode asynchrone <see cref="T:System.Xml.XmlReader" /> a été appelée sans définir l’indicateur <see cref="P:System.Xml.XmlReaderSettings.Async" /> sur <see langword="true" />. Dans ce cas, l’exception <see cref="T:System.InvalidOperationException" /> est levée avec le message « Attribuez à XmlReaderSettings.Async la valeur True si vous voulez utiliser des méthodes asynchrones ».</exception>
      <returns vsli:raw="The value of the current node.">Valeur du nœud actuel.</returns>
    </member>
    <member name="M:System.Xml.XmlReader.IsName(System.String)">
      <summary vsli:raw="Returns a value indicating whether the string argument is a valid XML name.">Retourne une valeur indiquant si l’argument de chaîne est un nom XML valide.</summary>
      <param name="str" vsli:raw="The name to validate.">Nom à valider.</param>
      <exception cref="T:System.ArgumentNullException" vsli:raw="The &lt;paramref name=&quot;str&quot; /&gt; value is &lt;see langword=&quot;null&quot; /&gt;.">
        <paramref name="str" /> a la valeur <see langword="null" />.</exception>
      <returns vsli:raw="&lt;see langword=&quot;true&quot; /&gt; if the name is valid; otherwise, &lt;see langword=&quot;false&quot; /&gt;.">
        <see langword="true" /> si le nom est valide ; sinon, <see langword="false" />.</returns>
    </member>
    <member name="M:System.Xml.XmlReader.IsNameToken(System.String)">
      <summary vsli:raw="Returns a value indicating whether or not the string argument is a valid XML name token.">Retourne une valeur indiquant si l’argument de chaîne est un jeton de nom XML valide.</summary>
      <param name="str" vsli:raw="The name token to validate.">Jeton de nom à valider.</param>
      <exception cref="T:System.ArgumentNullException" vsli:raw="The &lt;paramref name=&quot;str&quot; /&gt; value is &lt;see langword=&quot;null&quot; /&gt;.">
        <paramref name="str" /> a la valeur <see langword="null" />.</exception>
      <returns vsli:raw="&lt;see langword=&quot;true&quot; /&gt; if it is a valid name token; otherwise &lt;see langword=&quot;false&quot; /&gt;.">
        <see langword="true" /> si le jeton de nom est valide ; sinon, <see langword="false" />.</returns>
    </member>
    <member name="M:System.Xml.XmlReader.IsStartElement">
      <summary vsli:raw="Calls &lt;see cref=&quot;M:System.Xml.XmlReader.MoveToContent&quot; /&gt; and tests if the current content node is a start tag or empty element tag.">Appelle <see cref="M:System.Xml.XmlReader.MoveToContent" /> et vérifie si le nœud de contenu actuel est une balise de début ou une balise d'élément vide.</summary>
      <exception cref="T:System.Xml.XmlException" vsli:raw="Incorrect XML is encountered in the input stream.">Code XML incorrect dans le flux d'entrée.</exception>
      <exception cref="T:System.InvalidOperationException" vsli:raw="An &lt;see cref=&quot;T:System.Xml.XmlReader&quot; /&gt; method was called before a previous asynchronous operation finished. In this case, &lt;see cref=&quot;T:System.InvalidOperationException&quot; /&gt; is thrown with the message &quot;An asynchronous operation is already in progress.&quot;">Une méthode <see cref="T:System.Xml.XmlReader" /> a été appelée avant la fin d’une opération asynchrone précédente. Dans ce cas, l’exception <see cref="T:System.InvalidOperationException" /> est levée avec le message « Une opération asynchrone est déjà en cours ».</exception>
      <returns vsli:raw="&lt;see langword=&quot;true&quot; /&gt; if &lt;see cref=&quot;M:System.Xml.XmlReader.MoveToContent&quot; /&gt; finds a start tag or empty element tag; &lt;see langword=&quot;false&quot; /&gt; if a node type other than &lt;see langword=&quot;XmlNodeType.Element&quot; /&gt; was found.">
        <see langword="true" /> si <see cref="M:System.Xml.XmlReader.MoveToContent" /> trouve une balise de début ou une balise d'élément vide ; <see langword="false" /> si un type de nœud autre que <see langword="XmlNodeType.Element" /> est trouvé.</returns>
    </member>
    <member name="M:System.Xml.XmlReader.IsStartElement(System.String)">
      <summary vsli:raw="Calls &lt;see cref=&quot;M:System.Xml.XmlReader.MoveToContent&quot; /&gt; and tests if the current content node is a start tag or empty element tag and if the &lt;see cref=&quot;P:System.Xml.XmlReader.Name&quot; /&gt; property of the element found matches the given argument.">Appelle <see cref="M:System.Xml.XmlReader.MoveToContent" />, vérifie si le nœud de contenu actuel est une balise de début ou une balise d'élément vide, puis vérifie également si la propriété <see cref="P:System.Xml.XmlReader.Name" /> de l'élément trouvé correspond à l'argument spécifié.</summary>
      <param name="name" vsli:raw="The string matched against the &lt;see langword=&quot;Name&quot; /&gt; property of the element found.">Chaîne comparée à la propriété <see langword="Name" /> de l'élément trouvé.</param>
      <exception cref="T:System.Xml.XmlException" vsli:raw="Incorrect XML is encountered in the input stream.">Code XML incorrect dans le flux d'entrée.</exception>
      <exception cref="T:System.InvalidOperationException" vsli:raw="An &lt;see cref=&quot;T:System.Xml.XmlReader&quot; /&gt; method was called before a previous asynchronous operation finished. In this case, &lt;see cref=&quot;T:System.InvalidOperationException&quot; /&gt; is thrown with the message &quot;An asynchronous operation is already in progress.&quot;">Une méthode <see cref="T:System.Xml.XmlReader" /> a été appelée avant la fin d’une opération asynchrone précédente. Dans ce cas, l’exception <see cref="T:System.InvalidOperationException" /> est levée avec le message « Une opération asynchrone est déjà en cours ».</exception>
      <returns vsli:raw="&lt;see langword=&quot;true&quot; /&gt; if the resulting node is an element and the &lt;see langword=&quot;Name&quot; /&gt; property matches the specified string. &lt;see langword=&quot;false&quot; /&gt; if a node type other than &lt;see langword=&quot;XmlNodeType.Element&quot; /&gt; was found or if the element &lt;see langword=&quot;Name&quot; /&gt; property does not match the specified string.">
        <see langword="true" /> si le nœud résultant est un élément et si la propriété <see langword="Name" /> correspond à la chaîne spécifiée. <see langword="false" /> si un type de nœud autre que <see langword="XmlNodeType.Element" /> a été trouvé ou si la propriété <see langword="Name" /> de l'élément ne correspond pas à la chaîne spécifiée.</returns>
    </member>
    <member name="M:System.Xml.XmlReader.IsStartElement(System.String,System.String)">
      <summary vsli:raw="Calls &lt;see cref=&quot;M:System.Xml.XmlReader.MoveToContent&quot; /&gt; and tests if the current content node is a start tag or empty element tag and if the &lt;see cref=&quot;P:System.Xml.XmlReader.LocalName&quot; /&gt; and &lt;see cref=&quot;P:System.Xml.XmlReader.NamespaceURI&quot; /&gt; properties of the element found match the given strings.">Appelle <see cref="M:System.Xml.XmlReader.MoveToContent" />, vérifie si le nœud de contenu actuel est une balise de début ou une balise d'élément vide, puis vérifie également si les propriétés <see cref="P:System.Xml.XmlReader.LocalName" /> et <see cref="P:System.Xml.XmlReader.NamespaceURI" /> de l'élément trouvé correspondent aux chaînes spécifiées.</summary>
      <param name="localname" vsli:raw="The string to match against the &lt;see langword=&quot;LocalName&quot; /&gt; property of the element found.">Chaîne à comparer à la propriété <see langword="LocalName" /> de l'élément trouvé.</param>
      <param name="ns" vsli:raw="The string to match against the &lt;see langword=&quot;NamespaceURI&quot; /&gt; property of the element found.">Chaîne à comparer à la propriété <see langword="NamespaceURI" /> de l'élément trouvé.</param>
      <exception cref="T:System.Xml.XmlException" vsli:raw="Incorrect XML is encountered in the input stream.">Code XML incorrect dans le flux d'entrée.</exception>
      <exception cref="T:System.InvalidOperationException" vsli:raw="An &lt;see cref=&quot;T:System.Xml.XmlReader&quot; /&gt; method was called before a previous asynchronous operation finished. In this case, &lt;see cref=&quot;T:System.InvalidOperationException&quot; /&gt; is thrown with the message &quot;An asynchronous operation is already in progress.&quot;">Une méthode <see cref="T:System.Xml.XmlReader" /> a été appelée avant la fin d’une opération asynchrone précédente. Dans ce cas, l’exception <see cref="T:System.InvalidOperationException" /> est levée avec le message « Une opération asynchrone est déjà en cours ».</exception>
      <returns vsli:raw="&lt;see langword=&quot;true&quot; /&gt; if the resulting node is an element. &lt;see langword=&quot;false&quot; /&gt; if a node type other than &lt;see langword=&quot;XmlNodeType.Element&quot; /&gt; was found or if the &lt;see langword=&quot;LocalName&quot; /&gt; and &lt;see langword=&quot;NamespaceURI&quot; /&gt; properties of the element do not match the specified strings.">
        <see langword="true" /> si le nœud résultant est un élément. <see langword="false" /> si un type de nœud autre que <see langword="XmlNodeType.Element" /> a été trouvé ou si les propriétés <see langword="LocalName" /> et <see langword="NamespaceURI" /> de l'élément ne correspondent pas aux chaînes spécifiées.</returns>
    </member>
    <member name="M:System.Xml.XmlReader.LookupNamespace(System.String)">
      <summary vsli:raw="When overridden in a derived class, resolves a namespace prefix in the current element's scope.">En cas de substitution dans une classe dérivée, résout un préfixe de l'espace de noms dans la portée de l'élément en cours.</summary>
      <param name="prefix" vsli:raw="The prefix whose namespace URI you want to resolve. To match the default namespace, pass an empty string.">Préfixe dont vous souhaitez résoudre l'URI de l'espace de noms. Pour établir une correspondance avec l'espace de noms par défaut, passez une chaîne vide.</param>
      <exception cref="T:System.InvalidOperationException" vsli:raw="An &lt;see cref=&quot;T:System.Xml.XmlReader&quot; /&gt; method was called before a previous asynchronous operation finished. In this case, &lt;see cref=&quot;T:System.InvalidOperationException&quot; /&gt; is thrown with the message &quot;An asynchronous operation is already in progress.&quot;">Une méthode <see cref="T:System.Xml.XmlReader" /> a été appelée avant la fin d’une opération asynchrone précédente. Dans ce cas, l’exception <see cref="T:System.InvalidOperationException" /> est levée avec le message « Une opération asynchrone est déjà en cours ».</exception>
      <returns vsli:raw="The namespace URI to which the prefix maps or &lt;see langword=&quot;null&quot; /&gt; if no matching prefix is found.">URI de l'espace de noms vers lequel le préfixe est mappé ou <see langword="null" /> si aucun préfixe correspondant n'est trouvé.</returns>
    </member>
    <member name="M:System.Xml.XmlReader.MoveToAttribute(System.Int32)">
      <summary vsli:raw="When overridden in a derived class, moves to the attribute with the specified index.">En cas de substitution dans une classe dérivée, se déplace vers l'attribut avec l'index spécifié.</summary>
      <param name="i" vsli:raw="The index of the attribute.">Index de l'attribut.</param>
      <exception cref="T:System.InvalidOperationException" vsli:raw="An &lt;see cref=&quot;T:System.Xml.XmlReader&quot; /&gt; method was called before a previous asynchronous operation finished. In this case, &lt;see cref=&quot;T:System.InvalidOperationException&quot; /&gt; is thrown with the message &quot;An asynchronous operation is already in progress.&quot;">Une méthode <see cref="T:System.Xml.XmlReader" /> a été appelée avant la fin d’une opération asynchrone précédente. Dans ce cas, l’exception <see cref="T:System.InvalidOperationException" /> est levée avec le message « Une opération asynchrone est déjà en cours ».</exception>
      <exception cref="T:System.ArgumentOutOfRangeException" vsli:raw="The parameter has a negative value.">Le paramètre a une valeur négative.</exception>
    </member>
    <member name="M:System.Xml.XmlReader.MoveToAttribute(System.String)">
      <summary vsli:raw="When overridden in a derived class, moves to the attribute with the specified &lt;see cref=&quot;P:System.Xml.XmlReader.Name&quot; /&gt;.">En cas de substitution dans une classe dérivée, se déplace vers l'attribut avec le <see cref="P:System.Xml.XmlReader.Name" /> spécifié.</summary>
      <param name="name" vsli:raw="The qualified name of the attribute.">Nom qualifié de l'attribut.</param>
      <exception cref="T:System.InvalidOperationException" vsli:raw="An &lt;see cref=&quot;T:System.Xml.XmlReader&quot; /&gt; method was called before a previous asynchronous operation finished. In this case, &lt;see cref=&quot;T:System.InvalidOperationException&quot; /&gt; is thrown with the message &quot;An asynchronous operation is already in progress.&quot;">Une méthode <see cref="T:System.Xml.XmlReader" /> a été appelée avant la fin d’une opération asynchrone précédente. Dans ce cas, l’exception <see cref="T:System.InvalidOperationException" /> est levée avec le message « Une opération asynchrone est déjà en cours ».</exception>
      <exception cref="T:System.ArgumentException" vsli:raw="The parameter is an empty string.">Le paramètre est une chaîne vide.</exception>
      <returns vsli:raw="&lt;see langword=&quot;true&quot; /&gt; if the attribute is found; otherwise, &lt;see langword=&quot;false&quot; /&gt;. If &lt;see langword=&quot;false&quot; /&gt;, the reader's position does not change.">
        <see langword="true" /> si l'attribut est trouvé ; sinon, <see langword="false" />. Si la valeur est <see langword="false" />, la position du lecteur ne change pas.</returns>
    </member>
    <member name="M:System.Xml.XmlReader.MoveToAttribute(System.String,System.String)">
      <summary vsli:raw="When overridden in a derived class, moves to the attribute with the specified &lt;see cref=&quot;P:System.Xml.XmlReader.LocalName&quot; /&gt; and &lt;see cref=&quot;P:System.Xml.XmlReader.NamespaceURI&quot; /&gt;.">En cas de substitution dans une classe dérivée, se déplace vers l'attribut avec le <see cref="P:System.Xml.XmlReader.LocalName" /> et le <see cref="P:System.Xml.XmlReader.NamespaceURI" /> spécifiés.</summary>
      <param name="name" vsli:raw="The local name of the attribute.">Le nom local de l'attribut.</param>
      <param name="ns" vsli:raw="The namespace URI of the attribute.">L'URI de l'espace de noms de l'attribut.</param>
      <exception cref="T:System.InvalidOperationException" vsli:raw="An &lt;see cref=&quot;T:System.Xml.XmlReader&quot; /&gt; method was called before a previous asynchronous operation finished. In this case, &lt;see cref=&quot;T:System.InvalidOperationException&quot; /&gt; is thrown with the message &quot;An asynchronous operation is already in progress.&quot;">Une méthode <see cref="T:System.Xml.XmlReader" /> a été appelée avant la fin d’une opération asynchrone précédente. Dans ce cas, l’exception <see cref="T:System.InvalidOperationException" /> est levée avec le message « Une opération asynchrone est déjà en cours ».</exception>
      <exception cref="T:System.ArgumentNullException" vsli:raw="Both parameter values are &lt;see langword=&quot;null&quot; /&gt;.">La valeur des deux paramètres est <see langword="null" />.</exception>
      <returns vsli:raw="&lt;see langword=&quot;true&quot; /&gt; if the attribute is found; otherwise, &lt;see langword=&quot;false&quot; /&gt;. If &lt;see langword=&quot;false&quot; /&gt;, the reader's position does not change.">
        <see langword="true" /> si l'attribut est trouvé ; sinon, <see langword="false" />. Si la valeur est <see langword="false" />, la position du lecteur ne change pas.</returns>
    </member>
    <member name="M:System.Xml.XmlReader.MoveToContent">
      <summary vsli:raw="Checks whether the current node is a content (non-white space text, &lt;see langword=&quot;CDATA&quot; /&gt;, &lt;see langword=&quot;Element&quot; /&gt;, &lt;see langword=&quot;EndElement&quot; /&gt;, &lt;see langword=&quot;EntityReference&quot; /&gt;, or &lt;see langword=&quot;EndEntity&quot; /&gt;) node. If the node is not a content node, the reader skips ahead to the next content node or end of file. It skips over nodes of the following type: &lt;see langword=&quot;ProcessingInstruction&quot; /&gt;, &lt;see langword=&quot;DocumentType&quot; /&gt;, &lt;see langword=&quot;Comment&quot; /&gt;, &lt;see langword=&quot;Whitespace&quot; /&gt;, or &lt;see langword=&quot;SignificantWhitespace&quot; /&gt;.">Vérifie si le nœud actuel est un nœud de contenu (texte non constitué d'espaces blancs, <see langword="CDATA" />, <see langword="Element" />, <see langword="EndElement" />, <see langword="EntityReference" /> ou <see langword="EndEntity" />). Si le nœud n'est pas un nœud de contenu, le lecteur avance jusqu'au nœud de contenu suivant ou jusqu'à la fin du fichier. Il ignore les nœuds possédant les types suivants : <see langword="ProcessingInstruction" />, <see langword="DocumentType" />, <see langword="Comment" />, <see langword="Whitespace" /> ou <see langword="SignificantWhitespace" />.</summary>
      <exception cref="T:System.Xml.XmlException" vsli:raw="Incorrect XML encountered in the input stream.">Code XML incorrect dans le flux d'entrée.</exception>
      <exception cref="T:System.InvalidOperationException" vsli:raw="An &lt;see cref=&quot;T:System.Xml.XmlReader&quot; /&gt; method was called before a previous asynchronous operation finished. In this case, &lt;see cref=&quot;T:System.InvalidOperationException&quot; /&gt; is thrown with the message &quot;An asynchronous operation is already in progress.&quot;">Une méthode <see cref="T:System.Xml.XmlReader" /> a été appelée avant la fin d’une opération asynchrone précédente. Dans ce cas, l’exception <see cref="T:System.InvalidOperationException" /> est levée avec le message « Une opération asynchrone est déjà en cours ».</exception>
      <returns vsli:raw="The &lt;see cref=&quot;P:System.Xml.XmlReader.NodeType&quot; /&gt; of the current node found by the method or &lt;see langword=&quot;XmlNodeType.None&quot; /&gt; if the reader has reached the end of the input stream.">L’élément <see cref="P:System.Xml.XmlReader.NodeType" /> du nœud actuel trouvé par la méthode ou <see langword="XmlNodeType.None" /> si le lecteur a atteint la fin du flux d'entrée.</returns>
    </member>
    <member name="M:System.Xml.XmlReader.MoveToContentAsync">
      <summary vsli:raw="Asynchronously checks whether the current node is a content node. If the node is not a content node, the reader skips ahead to the next content node or end of file.">Vérifie de façon asynchrone si le nœud actuel est un nœud de contenu. Si le nœud n'est pas un nœud de contenu, le lecteur avance jusqu'au nœud de contenu suivant ou jusqu'à la fin du fichier.</summary>
      <exception cref="T:System.InvalidOperationException" vsli:raw="An &lt;see cref=&quot;T:System.Xml.XmlReader&quot; /&gt; method was called before a previous asynchronous operation finished. In this case, &lt;see cref=&quot;T:System.InvalidOperationException&quot; /&gt; is thrown with the message &quot;An asynchronous operation is already in progress.&quot;&#xA;&#xA;-or-&#xA;&#xA;An &lt;see cref=&quot;T:System.Xml.XmlReader&quot; /&gt; asynchronous method was called without setting the &lt;see cref=&quot;P:System.Xml.XmlReaderSettings.Async&quot; /&gt; flag to &lt;see langword=&quot;true&quot; /&gt;. In this case, &lt;see cref=&quot;T:System.InvalidOperationException&quot; /&gt; is thrown with the message &quot;Set XmlReaderSettings.Async to true if you want to use Async Methods.&quot;">Une méthode <see cref="T:System.Xml.XmlReader" /> a été appelée avant la fin d’une opération asynchrone précédente. Dans ce cas, l’exception <see cref="T:System.InvalidOperationException" /> est levée avec le message « Une opération asynchrone est déjà en cours ».

- ou -

Une méthode asynchrone <see cref="T:System.Xml.XmlReader" /> a été appelée sans définir l’indicateur <see cref="P:System.Xml.XmlReaderSettings.Async" /> sur <see langword="true" />. Dans ce cas, l’exception <see cref="T:System.InvalidOperationException" /> est levée avec le message « Attribuez à XmlReaderSettings.Async la valeur True si vous voulez utiliser des méthodes asynchrones ».</exception>
      <returns vsli:raw="The &lt;see cref=&quot;P:System.Xml.XmlReader.NodeType&quot; /&gt; of the current node found by the method or &lt;see langword=&quot;XmlNodeType.None&quot; /&gt; if the reader has reached the end of the input stream.">L’élément <see cref="P:System.Xml.XmlReader.NodeType" /> du nœud actuel trouvé par la méthode ou <see langword="XmlNodeType.None" /> si le lecteur a atteint la fin du flux d'entrée.</returns>
    </member>
    <member name="M:System.Xml.XmlReader.MoveToElement">
      <summary vsli:raw="When overridden in a derived class, moves to the element that contains the current attribute node.">En cas de substitution dans une classe dérivée, se déplace vers l'élément contenant le nœud d'attribut actuel.</summary>
      <exception cref="T:System.InvalidOperationException" vsli:raw="An &lt;see cref=&quot;T:System.Xml.XmlReader&quot; /&gt; method was called before a previous asynchronous operation finished. In this case, &lt;see cref=&quot;T:System.InvalidOperationException&quot; /&gt; is thrown with the message &quot;An asynchronous operation is already in progress.&quot;">Une méthode <see cref="T:System.Xml.XmlReader" /> a été appelée avant la fin d’une opération asynchrone précédente. Dans ce cas, l’exception <see cref="T:System.InvalidOperationException" /> est levée avec le message « Une opération asynchrone est déjà en cours ».</exception>
      <returns vsli:raw="&lt;see langword=&quot;true&quot; /&gt; if the reader is positioned on an attribute (the reader moves to the element that owns the attribute); &lt;see langword=&quot;false&quot; /&gt; if the reader is not positioned on an attribute (the position of the reader does not change).">
        <see langword="true" /> si le lecteur est placé sur un attribut (le lecteur se déplace vers l'élément qui possède l'attribut) ; <see langword="false" /> si le lecteur n'est pas placé sur un attribut (la position du lecteur ne change pas).</returns>
    </member>
    <member name="M:System.Xml.XmlReader.MoveToFirstAttribute">
      <summary vsli:raw="When overridden in a derived class, moves to the first attribute.">En cas de substitution dans une classe dérivée, se déplace vers le premier attribut.</summary>
      <exception cref="T:System.InvalidOperationException" vsli:raw="An &lt;see cref=&quot;T:System.Xml.XmlReader&quot; /&gt; method was called before a previous asynchronous operation finished. In this case, &lt;see cref=&quot;T:System.InvalidOperationException&quot; /&gt; is thrown with the message &quot;An asynchronous operation is already in progress.&quot;">Une méthode <see cref="T:System.Xml.XmlReader" /> a été appelée avant la fin d’une opération asynchrone précédente. Dans ce cas, l’exception <see cref="T:System.InvalidOperationException" /> est levée avec le message « Une opération asynchrone est déjà en cours ».</exception>
      <returns vsli:raw="&lt;see langword=&quot;true&quot; /&gt; if an attribute exists (the reader moves to the first attribute); otherwise, &lt;see langword=&quot;false&quot; /&gt; (the position of the reader does not change).">
        <see langword="true" /> si un attribut existe (le lecteur se déplace vers le premier attribut) ; sinon, <see langword="false" /> (la position du lecteur ne change pas).</returns>
    </member>
    <member name="M:System.Xml.XmlReader.MoveToNextAttribute">
      <summary vsli:raw="When overridden in a derived class, moves to the next attribute.">En cas de substitution dans une classe dérivée, se déplace vers l'attribut suivant.</summary>
      <exception cref="T:System.InvalidOperationException" vsli:raw="An &lt;see cref=&quot;T:System.Xml.XmlReader&quot; /&gt; method was called before a previous asynchronous operation finished. In this case, &lt;see cref=&quot;T:System.InvalidOperationException&quot; /&gt; is thrown with the message &quot;An asynchronous operation is already in progress.&quot;">Une méthode <see cref="T:System.Xml.XmlReader" /> a été appelée avant la fin d’une opération asynchrone précédente. Dans ce cas, l’exception <see cref="T:System.InvalidOperationException" /> est levée avec le message « Une opération asynchrone est déjà en cours ».</exception>
      <returns vsli:raw="&lt;see langword=&quot;true&quot; /&gt; if there is a next attribute; &lt;see langword=&quot;false&quot; /&gt; if there are no more attributes.">
        <see langword="true" /> s'il existe un attribut suivant ; <see langword="false" /> s'il n'existe plus d'attributs.</returns>
    </member>
    <member name="M:System.Xml.XmlReader.Read">
      <summary vsli:raw="When overridden in a derived class, reads the next node from the stream.">En cas de substitution dans une classe dérivée, lit le nœud suivant à partir du flux.</summary>
      <exception cref="T:System.Xml.XmlException" vsli:raw="An error occurred while parsing the XML.">Une erreur s’est produite lors de l’analyse du XML.</exception>
      <exception cref="T:System.InvalidOperationException" vsli:raw="An &lt;see cref=&quot;T:System.Xml.XmlReader&quot; /&gt; method was called before a previous asynchronous operation finished. In this case, &lt;see cref=&quot;T:System.InvalidOperationException&quot; /&gt; is thrown with the message &quot;An asynchronous operation is already in progress.&quot;">Une méthode <see cref="T:System.Xml.XmlReader" /> a été appelée avant la fin d’une opération asynchrone précédente. Dans ce cas, l’exception <see cref="T:System.InvalidOperationException" /> est levée avec le message « Une opération asynchrone est déjà en cours ».</exception>
      <returns vsli:raw="&lt;see langword=&quot;true&quot; /&gt; if the next node was read successfully; otherwise, &lt;see langword=&quot;false&quot; /&gt;.">
        <see langword="true" /> si le nœud suivant est correctement lu ; sinon, <see langword="false" />.</returns>
    </member>
    <member name="M:System.Xml.XmlReader.ReadAsync">
      <summary vsli:raw="Asynchronously reads the next node from the stream.">Lit de façon asynchrone le nœud suivant à partir du flux de données.</summary>
      <exception cref="T:System.InvalidOperationException" vsli:raw="An &lt;see cref=&quot;T:System.Xml.XmlReader&quot; /&gt; method was called before a previous asynchronous operation finished. In this case, &lt;see cref=&quot;T:System.InvalidOperationException&quot; /&gt; is thrown with the message &quot;An asynchronous operation is already in progress.&quot;&#xA;&#xA;-or-&#xA;&#xA;An &lt;see cref=&quot;T:System.Xml.XmlReader&quot; /&gt; asynchronous method was called without setting the &lt;see cref=&quot;P:System.Xml.XmlReaderSettings.Async&quot; /&gt; flag to &lt;see langword=&quot;true&quot; /&gt;. In this case, &lt;see cref=&quot;T:System.InvalidOperationException&quot; /&gt; is thrown with the message &quot;Set XmlReaderSettings.Async to true if you want to use Async Methods.&quot;">Une méthode <see cref="T:System.Xml.XmlReader" /> a été appelée avant la fin d’une opération asynchrone précédente. Dans ce cas, l’exception <see cref="T:System.InvalidOperationException" /> est levée avec le message « Une opération asynchrone est déjà en cours ».

- ou -

Une méthode asynchrone <see cref="T:System.Xml.XmlReader" /> a été appelée sans définir l’indicateur <see cref="P:System.Xml.XmlReaderSettings.Async" /> sur <see langword="true" />. Dans ce cas, l’exception <see cref="T:System.InvalidOperationException" /> est levée avec le message « Attribuez à XmlReaderSettings.Async la valeur True si vous voulez utiliser des méthodes asynchrones ».</exception>
      <returns vsli:raw="&lt;see langword=&quot;true&quot; /&gt; if the next node was read successfully; &lt;see langword=&quot;false&quot; /&gt; if there are no more nodes to read.">
        <see langword="true" /> si le nœud suivant a été lu correctement ; <see langword="false" /> s'il n'y a plus de nœuds à lire.</returns>
    </member>
    <member name="M:System.Xml.XmlReader.ReadAttributeValue">
      <summary vsli:raw="When overridden in a derived class, parses the attribute value into one or more &lt;see langword=&quot;Text&quot; /&gt;, &lt;see langword=&quot;EntityReference&quot; /&gt;, or &lt;see langword=&quot;EndEntity&quot; /&gt; nodes.">En cas de substitution dans une classe dérivée, analyse la valeur d'attribut dans un ou plusieurs nœuds <see langword="Text" />, <see langword="EntityReference" /> ou <see langword="EndEntity" />.</summary>
      <exception cref="T:System.InvalidOperationException" vsli:raw="An &lt;see cref=&quot;T:System.Xml.XmlReader&quot; /&gt; method was called before a previous asynchronous operation finished. In this case, &lt;see cref=&quot;T:System.InvalidOperationException&quot; /&gt; is thrown with the message &quot;An asynchronous operation is already in progress.&quot;">Une méthode <see cref="T:System.Xml.XmlReader" /> a été appelée avant la fin d’une opération asynchrone précédente. Dans ce cas, l’exception <see cref="T:System.InvalidOperationException" /> est levée avec le message « Une opération asynchrone est déjà en cours ».</exception>
      <returns vsli:raw="&lt;see langword=&quot;true&quot; /&gt; if there are nodes to return.&#xA;&#xA; &lt;see langword=&quot;false&quot; /&gt; if the reader is not positioned on an attribute node when the initial call is made or if all the attribute values have been read.&#xA;&#xA; An empty attribute, such as, &lt;c&gt;misc=&quot;&quot;&lt;/c&gt;, returns &lt;see langword=&quot;true&quot; /&gt; with a single node with a value of &lt;see langword=&quot;String.Empty&quot; /&gt;.">
        <see langword="true" /> s'il y a des nœuds à retourner.  
  
 <see langword="false" /> si le lecteur n'est pas placé sur un nœud d'attribut quand l'appel initial est effectué ou si toutes les valeurs d'attributs ont été lues.  
  
Un attribut vide, tel que <c>misc=""</c>, retourne <see langword="true" /> avec un nœud unique et la valeur <see langword="String.Empty" />.</returns>
    </member>
    <member name="M:System.Xml.XmlReader.ReadContentAs(System.Type,System.Xml.IXmlNamespaceResolver)">
      <summary vsli:raw="Reads the content as an object of the type specified.">Lit le contenu en tant qu'objet du type spécifié.</summary>
      <param name="returnType" vsli:raw="The type of the value to be returned.&#xA;&#xA; Note With the release of the .NET Framework 3.5, the value of the &lt;paramref name=&quot;returnType&quot; /&gt; parameter can now be the &lt;see cref=&quot;T:System.DateTimeOffset&quot; /&gt; type.">Type de la valeur à retourner.  
  
 Remarque Avec le .NET Framework version 3.5, la valeur du paramètre <paramref name="returnType" /> peut maintenant être le type <see cref="T:System.DateTimeOffset" />.</param>
      <param name="namespaceResolver" vsli:raw="An &lt;see cref=&quot;T:System.Xml.IXmlNamespaceResolver&quot; /&gt; object that is used to resolve any namespace prefixes related to type conversion. For example, this can be used when converting an &lt;see cref=&quot;T:System.Xml.XmlQualifiedName&quot; /&gt; object to an &lt;c&gt;xs:string&lt;/c&gt;.&#xA;&#xA; This value can be &lt;see langword=&quot;null&quot; /&gt;.">Objet <see cref="T:System.Xml.IXmlNamespaceResolver" /> permettant de résoudre tous les préfixes d'espaces de noms liés à la conversion de type. Par exemple, il peut être utilisé lors de la conversion d’un objet <see cref="T:System.Xml.XmlQualifiedName" /> en <c>xs:string</c>.  
  
Cette valeur peut être <see langword="null" />.</param>
      <exception cref="T:System.FormatException" vsli:raw="The content is not in the correct format for the target type.">Le format du contenu n'est pas correct pour le type cible.</exception>
      <exception cref="T:System.InvalidCastException" vsli:raw="The attempted cast is not valid.">La tentative de cast n'est pas valide.</exception>
      <exception cref="T:System.ArgumentNullException" vsli:raw="The &lt;paramref name=&quot;returnType&quot; /&gt; value is &lt;see langword=&quot;null&quot; /&gt;.">
        <paramref name="returnType" /> a la valeur <see langword="null" />.</exception>
      <exception cref="T:System.InvalidOperationException" vsli:raw="The current node is not a supported node type. See the table below for details.&#xA;&#xA;-or-&#xA;&#xA;An &lt;see cref=&quot;T:System.Xml.XmlReader&quot; /&gt; method was called before a previous asynchronous operation finished. In this case, &lt;see cref=&quot;T:System.InvalidOperationException&quot; /&gt; is thrown with the message &quot;An asynchronous operation is already in progress.&quot;">Le nœud actuel n'est pas un type de nœud pris en charge. Voir le tableau ci-dessous pour plus d'informations.

- ou -

Une méthode <see cref="T:System.Xml.XmlReader" /> a été appelée avant la fin d’une opération asynchrone précédente. Dans ce cas, l’exception <see cref="T:System.InvalidOperationException" /> est levée avec le message « Une opération asynchrone est déjà en cours ».</exception>
      <exception cref="T:System.OverflowException" vsli:raw="Read &lt;see langword=&quot;Decimal.MaxValue&quot; /&gt;.">Lire <see langword="Decimal.MaxValue" />.</exception>
      <returns vsli:raw="The concatenated text content or attribute value converted to the requested type.">Contenu de texte concaténé ou valeur d'attribut converti(e) en type demandé.</returns>
    </member>
    <member name="M:System.Xml.XmlReader.ReadContentAsAsync(System.Type,System.Xml.IXmlNamespaceResolver)">
      <summary vsli:raw="Asynchronously reads the content as an object of the type specified.">Lit de façon asynchrone le contenu en tant qu'objet du type spécifié.</summary>
      <param name="returnType" vsli:raw="The type of the value to be returned.">Type de la valeur à retourner.</param>
      <param name="namespaceResolver" vsli:raw="An &lt;see cref=&quot;T:System.Xml.IXmlNamespaceResolver&quot; /&gt; object that is used to resolve any namespace prefixes related to type conversion.">Objet <see cref="T:System.Xml.IXmlNamespaceResolver" /> permettant de résoudre tous les préfixes d'espaces de noms liés à la conversion de type.</param>
      <exception cref="T:System.InvalidOperationException" vsli:raw="An &lt;see cref=&quot;T:System.Xml.XmlReader&quot; /&gt; method was called before a previous asynchronous operation finished. In this case, &lt;see cref=&quot;T:System.InvalidOperationException&quot; /&gt; is thrown with the message &quot;An asynchronous operation is already in progress.&quot;&#xA;&#xA;-or-&#xA;&#xA;An &lt;see cref=&quot;T:System.Xml.XmlReader&quot; /&gt; asynchronous method was called without setting the &lt;see cref=&quot;P:System.Xml.XmlReaderSettings.Async&quot; /&gt; flag to &lt;see langword=&quot;true&quot; /&gt;. In this case, &lt;see cref=&quot;T:System.InvalidOperationException&quot; /&gt; is thrown with the message &quot;Set XmlReaderSettings.Async to true if you want to use Async Methods.&quot;">Une méthode <see cref="T:System.Xml.XmlReader" /> a été appelée avant la fin d’une opération asynchrone précédente. Dans ce cas, l’exception <see cref="T:System.InvalidOperationException" /> est levée avec le message « Une opération asynchrone est déjà en cours ».

- ou -

Une méthode asynchrone <see cref="T:System.Xml.XmlReader" /> a été appelée sans définir l’indicateur <see cref="P:System.Xml.XmlReaderSettings.Async" /> sur <see langword="true" />. Dans ce cas, l’exception <see cref="T:System.InvalidOperationException" /> est levée avec le message « Attribuez à XmlReaderSettings.Async la valeur True si vous voulez utiliser des méthodes asynchrones ».</exception>
      <returns vsli:raw="The concatenated text content or attribute value converted to the requested type.">Contenu de texte concaténé ou valeur d'attribut converti(e) en type demandé.</returns>
    </member>
    <member name="M:System.Xml.XmlReader.ReadContentAsBase64(System.Byte[],System.Int32,System.Int32)">
      <summary vsli:raw="Reads the content and returns the Base64 decoded binary bytes.">Lit le contenu et retourne les octets binaires décodés au format Base64.</summary>
      <param name="buffer" vsli:raw="The buffer into which to copy the resulting text. This value cannot be &lt;see langword=&quot;null&quot; /&gt;.">Mémoire tampon dans laquelle copier le texte obtenu. Cette valeur ne peut pas être <see langword="null" />.</param>
      <param name="index" vsli:raw="The offset into the buffer where to start copying the result.">Offset de la mémoire tampon où commence la copie du résultat.</param>
      <param name="count" vsli:raw="The maximum number of bytes to copy into the buffer. The actual number of bytes copied is returned from this method.">Nombre maximal d'octets à copier dans la mémoire tampon. Le nombre réel d'octets copiés est retourné à partir de cette méthode.</param>
      <exception cref="T:System.ArgumentNullException" vsli:raw="The &lt;paramref name=&quot;buffer&quot; /&gt; value is &lt;see langword=&quot;null&quot; /&gt;.">
        <paramref name="buffer" /> a la valeur <see langword="null" />.</exception>
      <exception cref="T:System.InvalidOperationException" vsli:raw="&lt;see cref=&quot;M:System.Xml.XmlReader.ReadContentAsBase64(System.Byte[],System.Int32,System.Int32)&quot; /&gt; is not supported on the current node.&#xA;&#xA;-or-&#xA;&#xA;An &lt;see cref=&quot;T:System.Xml.XmlReader&quot; /&gt; method was called before a previous asynchronous operation finished. In this case, &lt;see cref=&quot;T:System.InvalidOperationException&quot; /&gt; is thrown with the message &quot;An asynchronous operation is already in progress.&quot;">
        <see cref="M:System.Xml.XmlReader.ReadContentAsBase64(System.Byte[],System.Int32,System.Int32)" /> n'est pas pris en charge sur le nœud actuel.

- ou -

Une méthode <see cref="T:System.Xml.XmlReader" /> a été appelée avant la fin d’une opération asynchrone précédente. Dans ce cas, l’exception <see cref="T:System.InvalidOperationException" /> est levée avec le message « Une opération asynchrone est déjà en cours ».</exception>
      <exception cref="T:System.ArgumentOutOfRangeException" vsli:raw="The index into the buffer or index + count is larger than the allocated buffer size.">L'index de la mémoire tampon (ou l'index augmenté de la valeur du paramètre count) est supérieur à la taille de la mémoire tampon allouée.</exception>
      <exception cref="T:System.NotSupportedException" vsli:raw="The &lt;see cref=&quot;T:System.Xml.XmlReader&quot; /&gt; implementation does not support this method.">L'implémentation de <see cref="T:System.Xml.XmlReader" /> ne prend pas en charge cette méthode.</exception>
      <returns vsli:raw="The number of bytes written to the buffer.">Nombre d'octets écrits dans la mémoire tampon.</returns>
    </member>
    <member name="M:System.Xml.XmlReader.ReadContentAsBase64Async(System.Byte[],System.Int32,System.Int32)">
      <summary vsli:raw="Asynchronously reads the content and returns the Base64 decoded binary bytes.">Lit de façon asynchrone le contenu et retourne les octets binaires décodés au format Base64.</summary>
      <param name="buffer" vsli:raw="The buffer into which to copy the resulting text. This value cannot be &lt;see langword=&quot;null&quot; /&gt;.">Mémoire tampon dans laquelle copier le texte obtenu. Cette valeur ne peut pas être <see langword="null" />.</param>
      <param name="index" vsli:raw="The offset into the buffer where to start copying the result.">Offset de la mémoire tampon où commence la copie du résultat.</param>
      <param name="count" vsli:raw="The maximum number of bytes to copy into the buffer. The actual number of bytes copied is returned from this method.">Nombre maximal d'octets à copier dans la mémoire tampon. Le nombre réel d'octets copiés est retourné à partir de cette méthode.</param>
      <exception cref="T:System.InvalidOperationException" vsli:raw="An &lt;see cref=&quot;T:System.Xml.XmlReader&quot; /&gt; method was called before a previous asynchronous operation finished. In this case, &lt;see cref=&quot;T:System.InvalidOperationException&quot; /&gt; is thrown with the message &quot;An asynchronous operation is already in progress.&quot;&#xA;&#xA;-or-&#xA;&#xA;An &lt;see cref=&quot;T:System.Xml.XmlReader&quot; /&gt; asynchronous method was called without setting the &lt;see cref=&quot;P:System.Xml.XmlReaderSettings.Async&quot; /&gt; flag to &lt;see langword=&quot;true&quot; /&gt;. In this case, &lt;see cref=&quot;T:System.InvalidOperationException&quot; /&gt; is thrown with the message &quot;Set XmlReaderSettings.Async to true if you want to use Async Methods.&quot;">Une méthode <see cref="T:System.Xml.XmlReader" /> a été appelée avant la fin d’une opération asynchrone précédente. Dans ce cas, l’exception <see cref="T:System.InvalidOperationException" /> est levée avec le message « Une opération asynchrone est déjà en cours ».

- ou -

Une méthode asynchrone <see cref="T:System.Xml.XmlReader" /> a été appelée sans définir l’indicateur <see cref="P:System.Xml.XmlReaderSettings.Async" /> sur <see langword="true" />. Dans ce cas, l’exception <see cref="T:System.InvalidOperationException" /> est levée avec le message « Attribuez à XmlReaderSettings.Async la valeur True si vous voulez utiliser des méthodes asynchrones ».</exception>
      <returns vsli:raw="The number of bytes written to the buffer.">Nombre d'octets écrits dans la mémoire tampon.</returns>
    </member>
    <member name="M:System.Xml.XmlReader.ReadContentAsBinHex(System.Byte[],System.Int32,System.Int32)">
      <summary vsli:raw="Reads the content and returns the &lt;see langword=&quot;BinHex&quot; /&gt; decoded binary bytes.">Lit le contenu et retourne les octets binaires décodés au format <see langword="BinHex" />.</summary>
      <param name="buffer" vsli:raw="The buffer into which to copy the resulting text. This value cannot be &lt;see langword=&quot;null&quot; /&gt;.">Mémoire tampon dans laquelle copier le texte obtenu. Cette valeur ne peut pas être <see langword="null" />.</param>
      <param name="index" vsli:raw="The offset into the buffer where to start copying the result.">Offset de la mémoire tampon où commence la copie du résultat.</param>
      <param name="count" vsli:raw="The maximum number of bytes to copy into the buffer. The actual number of bytes copied is returned from this method.">Nombre maximal d'octets à copier dans la mémoire tampon. Le nombre réel d'octets copiés est retourné à partir de cette méthode.</param>
      <exception cref="T:System.ArgumentNullException" vsli:raw="The &lt;paramref name=&quot;buffer&quot; /&gt; value is &lt;see langword=&quot;null&quot; /&gt;.">
        <paramref name="buffer" /> a la valeur <see langword="null" />.</exception>
      <exception cref="T:System.InvalidOperationException" vsli:raw="&lt;see cref=&quot;M:System.Xml.XmlReader.ReadContentAsBinHex(System.Byte[],System.Int32,System.Int32)&quot; /&gt; is not supported on the current node.&#xA;&#xA;-or-&#xA;&#xA;An &lt;see cref=&quot;T:System.Xml.XmlReader&quot; /&gt; method was called before a previous asynchronous operation finished. In this case, &lt;see cref=&quot;T:System.InvalidOperationException&quot; /&gt; is thrown with the message &quot;An asynchronous operation is already in progress.&quot;">
        <see cref="M:System.Xml.XmlReader.ReadContentAsBinHex(System.Byte[],System.Int32,System.Int32)" /> n'est pas pris en charge sur le nœud actuel.

- ou -

Une méthode <see cref="T:System.Xml.XmlReader" /> a été appelée avant la fin d’une opération asynchrone précédente. Dans ce cas, l’exception <see cref="T:System.InvalidOperationException" /> est levée avec le message « Une opération asynchrone est déjà en cours ».</exception>
      <exception cref="T:System.ArgumentOutOfRangeException" vsli:raw="The index into the buffer or index + count is larger than the allocated buffer size.">L'index de la mémoire tampon (ou l'index augmenté de la valeur du paramètre count) est supérieur à la taille de la mémoire tampon allouée.</exception>
      <exception cref="T:System.NotSupportedException" vsli:raw="The &lt;see cref=&quot;T:System.Xml.XmlReader&quot; /&gt; implementation does not support this method.">L'implémentation de <see cref="T:System.Xml.XmlReader" /> ne prend pas en charge cette méthode.</exception>
      <returns vsli:raw="The number of bytes written to the buffer.">Nombre d'octets écrits dans la mémoire tampon.</returns>
    </member>
    <member name="M:System.Xml.XmlReader.ReadContentAsBinHexAsync(System.Byte[],System.Int32,System.Int32)">
      <summary vsli:raw="Asynchronously reads the content and returns the &lt;see langword=&quot;BinHex&quot; /&gt; decoded binary bytes.">Lit de façon asynchrone le contenu et retourne les octets binaires décodés au format <see langword="BinHex" />.</summary>
      <param name="buffer" vsli:raw="The buffer into which to copy the resulting text. This value cannot be &lt;see langword=&quot;null&quot; /&gt;.">Mémoire tampon dans laquelle copier le texte obtenu. Cette valeur ne peut pas être <see langword="null" />.</param>
      <param name="index" vsli:raw="The offset into the buffer where to start copying the result.">Offset de la mémoire tampon où commence la copie du résultat.</param>
      <param name="count" vsli:raw="The maximum number of bytes to copy into the buffer. The actual number of bytes copied is returned from this method.">Nombre maximal d'octets à copier dans la mémoire tampon. Le nombre réel d'octets copiés est retourné à partir de cette méthode.</param>
      <exception cref="T:System.InvalidOperationException" vsli:raw="An &lt;see cref=&quot;T:System.Xml.XmlReader&quot; /&gt; method was called before a previous asynchronous operation finished. In this case, &lt;see cref=&quot;T:System.InvalidOperationException&quot; /&gt; is thrown with the message &quot;An asynchronous operation is already in progress.&quot;&#xA;&#xA;-or-&#xA;&#xA;An &lt;see cref=&quot;T:System.Xml.XmlReader&quot; /&gt; asynchronous method was called without setting the &lt;see cref=&quot;P:System.Xml.XmlReaderSettings.Async&quot; /&gt; flag to &lt;see langword=&quot;true&quot; /&gt;. In this case, &lt;see cref=&quot;T:System.InvalidOperationException&quot; /&gt; is thrown with the message &quot;Set XmlReaderSettings.Async to true if you want to use Async Methods.&quot;">Une méthode <see cref="T:System.Xml.XmlReader" /> a été appelée avant la fin d’une opération asynchrone précédente. Dans ce cas, l’exception <see cref="T:System.InvalidOperationException" /> est levée avec le message « Une opération asynchrone est déjà en cours ».

- ou -

Une méthode asynchrone <see cref="T:System.Xml.XmlReader" /> a été appelée sans définir l’indicateur <see cref="P:System.Xml.XmlReaderSettings.Async" /> sur <see langword="true" />. Dans ce cas, l’exception <see cref="T:System.InvalidOperationException" /> est levée avec le message « Attribuez à XmlReaderSettings.Async la valeur True si vous voulez utiliser des méthodes asynchrones ».</exception>
      <returns vsli:raw="The number of bytes written to the buffer.">Nombre d'octets écrits dans la mémoire tampon.</returns>
    </member>
    <member name="M:System.Xml.XmlReader.ReadContentAsBoolean">
      <summary vsli:raw="Reads the text content at the current position as a &lt;see langword=&quot;Boolean&quot; /&gt;.">Lit le contenu de texte à la position actuelle comme un <see langword="Boolean" />.</summary>
      <exception cref="T:System.InvalidCastException" vsli:raw="The attempted cast is not valid.">La tentative de cast n'est pas valide.</exception>
      <exception cref="T:System.FormatException" vsli:raw="The string format is not valid.">Le format de chaîne n'est pas valide.</exception>
      <exception cref="T:System.InvalidOperationException" vsli:raw="An &lt;see cref=&quot;T:System.Xml.XmlReader&quot; /&gt; method was called before a previous asynchronous operation finished. In this case, &lt;see cref=&quot;T:System.InvalidOperationException&quot; /&gt; is thrown with the message &quot;An asynchronous operation is already in progress.&quot;">Une méthode <see cref="T:System.Xml.XmlReader" /> a été appelée avant la fin d’une opération asynchrone précédente. Dans ce cas, l’exception <see cref="T:System.InvalidOperationException" /> est levée avec le message « Une opération asynchrone est déjà en cours ».</exception>
      <returns vsli:raw="The text content as a &lt;see cref=&quot;T:System.Boolean&quot; /&gt; object.">Contenu de texte sous la forme d'un objet <see cref="T:System.Boolean" />.</returns>
    </member>
    <member name="M:System.Xml.XmlReader.ReadContentAsDateTime">
      <summary vsli:raw="Reads the text content at the current position as a &lt;see cref=&quot;T:System.DateTime&quot; /&gt; object.">Lit le contenu de texte à la position actuelle comme un objet <see cref="T:System.DateTime" />.</summary>
      <exception cref="T:System.InvalidCastException" vsli:raw="The attempted cast is not valid.">La tentative de cast n'est pas valide.</exception>
      <exception cref="T:System.FormatException" vsli:raw="The string format is not valid.">Le format de chaîne n'est pas valide.</exception>
      <exception cref="T:System.InvalidOperationException" vsli:raw="An &lt;see cref=&quot;T:System.Xml.XmlReader&quot; /&gt; method was called before a previous asynchronous operation finished. In this case, &lt;see cref=&quot;T:System.InvalidOperationException&quot; /&gt; is thrown with the message &quot;An asynchronous operation is already in progress.&quot;">Une méthode <see cref="T:System.Xml.XmlReader" /> a été appelée avant la fin d’une opération asynchrone précédente. Dans ce cas, l’exception <see cref="T:System.InvalidOperationException" /> est levée avec le message « Une opération asynchrone est déjà en cours ».</exception>
      <returns vsli:raw="The text content as a &lt;see cref=&quot;T:System.DateTime&quot; /&gt; object.">Contenu de texte sous la forme d'un objet <see cref="T:System.DateTime" />.</returns>
    </member>
    <member name="M:System.Xml.XmlReader.ReadContentAsDateTimeOffset">
      <summary vsli:raw="Reads the text content at the current position as a &lt;see cref=&quot;T:System.DateTimeOffset&quot; /&gt; object.">Lit le contenu de texte à la position actuelle comme un objet <see cref="T:System.DateTimeOffset" />.</summary>
      <exception cref="T:System.InvalidOperationException" vsli:raw="An &lt;see cref=&quot;T:System.Xml.XmlReader&quot; /&gt; method was called before a previous asynchronous operation finished. In this case, &lt;see cref=&quot;T:System.InvalidOperationException&quot; /&gt; is thrown with the message &quot;An asynchronous operation is already in progress.&quot;">Une méthode <see cref="T:System.Xml.XmlReader" /> a été appelée avant la fin d’une opération asynchrone précédente. Dans ce cas, l’exception <see cref="T:System.InvalidOperationException" /> est levée avec le message « Une opération asynchrone est déjà en cours ».</exception>
      <returns vsli:raw="The text content as a &lt;see cref=&quot;T:System.DateTimeOffset&quot; /&gt; object.">Contenu de texte sous la forme d'un objet <see cref="T:System.DateTimeOffset" />.</returns>
    </member>
    <member name="M:System.Xml.XmlReader.ReadContentAsDecimal">
      <summary vsli:raw="Reads the text content at the current position as a &lt;see cref=&quot;T:System.Decimal&quot; /&gt; object.">Lit le contenu de texte à la position actuelle comme un objet <see cref="T:System.Decimal" />.</summary>
      <exception cref="T:System.InvalidCastException" vsli:raw="The attempted cast is not valid.">La tentative de cast n'est pas valide.</exception>
      <exception cref="T:System.FormatException" vsli:raw="The string format is not valid.">Le format de chaîne n'est pas valide.</exception>
      <exception cref="T:System.InvalidOperationException" vsli:raw="An &lt;see cref=&quot;T:System.Xml.XmlReader&quot; /&gt; method was called before a previous asynchronous operation finished. In this case, &lt;see cref=&quot;T:System.InvalidOperationException&quot; /&gt; is thrown with the message &quot;An asynchronous operation is already in progress.&quot;">Une méthode <see cref="T:System.Xml.XmlReader" /> a été appelée avant la fin d’une opération asynchrone précédente. Dans ce cas, l’exception <see cref="T:System.InvalidOperationException" /> est levée avec le message « Une opération asynchrone est déjà en cours ».</exception>
      <returns vsli:raw="The text content at the current position as a &lt;see cref=&quot;T:System.Decimal&quot; /&gt; object.">Contenu de texte à la position actuelle comme un objet <see cref="T:System.Decimal" />.</returns>
    </member>
    <member name="M:System.Xml.XmlReader.ReadContentAsDouble">
      <summary vsli:raw="Reads the text content at the current position as a double-precision floating-point number.">Lit le contenu de texte à la position actuelle en tant que nombre à virgule flottante double précision.</summary>
      <exception cref="T:System.InvalidCastException" vsli:raw="The attempted cast is not valid.">La tentative de cast n'est pas valide.</exception>
      <exception cref="T:System.FormatException" vsli:raw="The string format is not valid.">Le format de chaîne n'est pas valide.</exception>
      <exception cref="T:System.InvalidOperationException" vsli:raw="An &lt;see cref=&quot;T:System.Xml.XmlReader&quot; /&gt; method was called before a previous asynchronous operation finished. In this case, &lt;see cref=&quot;T:System.InvalidOperationException&quot; /&gt; is thrown with the message &quot;An asynchronous operation is already in progress.&quot;">Une méthode <see cref="T:System.Xml.XmlReader" /> a été appelée avant la fin d’une opération asynchrone précédente. Dans ce cas, l’exception <see cref="T:System.InvalidOperationException" /> est levée avec le message « Une opération asynchrone est déjà en cours ».</exception>
      <returns vsli:raw="The text content as a double-precision floating-point number.">Contenu de texte sous la forme d'un nombre à virgule flottante double précision.</returns>
    </member>
    <member name="M:System.Xml.XmlReader.ReadContentAsFloat">
      <summary vsli:raw="Reads the text content at the current position as a single-precision floating point number.">Lit le contenu de texte à la position actuelle en tant que nombre à virgule flottante simple précision.</summary>
      <exception cref="T:System.InvalidCastException" vsli:raw="The attempted cast is not valid.">La tentative de cast n'est pas valide.</exception>
      <exception cref="T:System.FormatException" vsli:raw="The string format is not valid.">Le format de chaîne n'est pas valide.</exception>
      <exception cref="T:System.InvalidOperationException" vsli:raw="An &lt;see cref=&quot;T:System.Xml.XmlReader&quot; /&gt; method was called before a previous asynchronous operation finished. In this case, &lt;see cref=&quot;T:System.InvalidOperationException&quot; /&gt; is thrown with the message &quot;An asynchronous operation is already in progress.&quot;">Une méthode <see cref="T:System.Xml.XmlReader" /> a été appelée avant la fin d’une opération asynchrone précédente. Dans ce cas, l’exception <see cref="T:System.InvalidOperationException" /> est levée avec le message « Une opération asynchrone est déjà en cours ».</exception>
      <returns vsli:raw="The text content at the current position as a single-precision floating point number.">Contenu de texte à la position actuelle en tant que nombre à virgule flottante simple précision.</returns>
    </member>
    <member name="M:System.Xml.XmlReader.ReadContentAsInt">
      <summary vsli:raw="Reads the text content at the current position as a 32-bit signed integer.">Lit le contenu de texte à la position actuelle comme un entier signé de 32 bits.</summary>
      <exception cref="T:System.InvalidCastException" vsli:raw="The attempted cast is not valid.">La tentative de cast n'est pas valide.</exception>
      <exception cref="T:System.FormatException" vsli:raw="The string format is not valid.">Le format de chaîne n'est pas valide.</exception>
      <exception cref="T:System.InvalidOperationException" vsli:raw="An &lt;see cref=&quot;T:System.Xml.XmlReader&quot; /&gt; method was called before a previous asynchronous operation finished. In this case, &lt;see cref=&quot;T:System.InvalidOperationException&quot; /&gt; is thrown with the message &quot;An asynchronous operation is already in progress.&quot;">Une méthode <see cref="T:System.Xml.XmlReader" /> a été appelée avant la fin d’une opération asynchrone précédente. Dans ce cas, l’exception <see cref="T:System.InvalidOperationException" /> est levée avec le message « Une opération asynchrone est déjà en cours ».</exception>
      <returns vsli:raw="The text content as a 32-bit signed integer.">Contenu de texte sous la forme d'un entier signé de 32 bits.</returns>
    </member>
    <member name="M:System.Xml.XmlReader.ReadContentAsLong">
      <summary vsli:raw="Reads the text content at the current position as a 64-bit signed integer.">Lit le contenu de texte à la position actuelle comme un entier signé de 64 bits.</summary>
      <exception cref="T:System.InvalidCastException" vsli:raw="The attempted cast is not valid.">La tentative de cast n'est pas valide.</exception>
      <exception cref="T:System.FormatException" vsli:raw="The string format is not valid.">Le format de chaîne n'est pas valide.</exception>
      <exception cref="T:System.InvalidOperationException" vsli:raw="An &lt;see cref=&quot;T:System.Xml.XmlReader&quot; /&gt; method was called before a previous asynchronous operation finished. In this case, &lt;see cref=&quot;T:System.InvalidOperationException&quot; /&gt; is thrown with the message &quot;An asynchronous operation is already in progress.&quot;">Une méthode <see cref="T:System.Xml.XmlReader" /> a été appelée avant la fin d’une opération asynchrone précédente. Dans ce cas, l’exception <see cref="T:System.InvalidOperationException" /> est levée avec le message « Une opération asynchrone est déjà en cours ».</exception>
      <returns vsli:raw="The text content as a 64-bit signed integer.">Contenu de texte sous la forme d’un entier signé de 64 bits.</returns>
    </member>
    <member name="M:System.Xml.XmlReader.ReadContentAsObject">
      <summary vsli:raw="Reads the text content at the current position as an &lt;see cref=&quot;T:System.Object&quot; /&gt;.">Lit le contenu de texte à la position actuelle comme un <see cref="T:System.Object" />.</summary>
      <exception cref="T:System.InvalidCastException" vsli:raw="The attempted cast is not valid.">La tentative de cast n'est pas valide.</exception>
      <exception cref="T:System.FormatException" vsli:raw="The string format is not valid.">Le format de chaîne n'est pas valide.</exception>
      <exception cref="T:System.InvalidOperationException" vsli:raw="An &lt;see cref=&quot;T:System.Xml.XmlReader&quot; /&gt; method was called before a previous asynchronous operation finished. In this case, &lt;see cref=&quot;T:System.InvalidOperationException&quot; /&gt; is thrown with the message &quot;An asynchronous operation is already in progress.&quot;">Une méthode <see cref="T:System.Xml.XmlReader" /> a été appelée avant la fin d’une opération asynchrone précédente. Dans ce cas, l’exception <see cref="T:System.InvalidOperationException" /> est levée avec le message « Une opération asynchrone est déjà en cours ».</exception>
      <returns vsli:raw="The text content as the most appropriate common language runtime (CLR) object.">Contenu de texte sous la forme de l'objet CLR le plus approprié.</returns>
    </member>
    <member name="M:System.Xml.XmlReader.ReadContentAsObjectAsync">
      <summary vsli:raw="Asynchronously reads the text content at the current position as an &lt;see cref=&quot;T:System.Object&quot; /&gt;.">Lit de façon asynchrone le contenu de texte à la position actuelle comme un objet <see cref="T:System.Object" />.</summary>
      <exception cref="T:System.InvalidOperationException" vsli:raw="An &lt;see cref=&quot;T:System.Xml.XmlReader&quot; /&gt; method was called before a previous asynchronous operation finished. In this case, &lt;see cref=&quot;T:System.InvalidOperationException&quot; /&gt; is thrown with the message &quot;An asynchronous operation is already in progress.&quot;&#xA;&#xA;-or-&#xA;&#xA;An &lt;see cref=&quot;T:System.Xml.XmlReader&quot; /&gt; asynchronous method was called without setting the &lt;see cref=&quot;P:System.Xml.XmlReaderSettings.Async&quot; /&gt; flag to &lt;see langword=&quot;true&quot; /&gt;. In this case, &lt;see cref=&quot;T:System.InvalidOperationException&quot; /&gt; is thrown with the message &quot;Set XmlReaderSettings.Async to true if you want to use Async Methods.&quot;">Une méthode <see cref="T:System.Xml.XmlReader" /> a été appelée avant la fin d’une opération asynchrone précédente. Dans ce cas, l’exception <see cref="T:System.InvalidOperationException" /> est levée avec le message « Une opération asynchrone est déjà en cours ».

- ou -

Une méthode asynchrone <see cref="T:System.Xml.XmlReader" /> a été appelée sans définir l’indicateur <see cref="P:System.Xml.XmlReaderSettings.Async" /> sur <see langword="true" />. Dans ce cas, l’exception <see cref="T:System.InvalidOperationException" /> est levée avec le message « Attribuez à XmlReaderSettings.Async la valeur True si vous voulez utiliser des méthodes asynchrones ».</exception>
      <returns vsli:raw="The text content as the most appropriate common language runtime (CLR) object.">Contenu de texte sous la forme de l'objet CLR le plus approprié.</returns>
    </member>
    <member name="M:System.Xml.XmlReader.ReadContentAsString">
      <summary vsli:raw="Reads the text content at the current position as a &lt;see cref=&quot;T:System.String&quot; /&gt; object.">Lit le contenu de texte à la position actuelle comme un objet <see cref="T:System.String" />.</summary>
      <exception cref="T:System.InvalidCastException" vsli:raw="The attempted cast is not valid.">La tentative de cast n'est pas valide.</exception>
      <exception cref="T:System.FormatException" vsli:raw="The string format is not valid.">Le format de chaîne n'est pas valide.</exception>
      <exception cref="T:System.InvalidOperationException" vsli:raw="An &lt;see cref=&quot;T:System.Xml.XmlReader&quot; /&gt; method was called before a previous asynchronous operation finished. In this case, &lt;see cref=&quot;T:System.InvalidOperationException&quot; /&gt; is thrown with the message &quot;An asynchronous operation is already in progress.&quot;">Une méthode <see cref="T:System.Xml.XmlReader" /> a été appelée avant la fin d’une opération asynchrone précédente. Dans ce cas, l’exception <see cref="T:System.InvalidOperationException" /> est levée avec le message « Une opération asynchrone est déjà en cours ».</exception>
      <returns vsli:raw="The text content as a &lt;see cref=&quot;T:System.String&quot; /&gt; object.">Contenu de texte sous la forme d'un objet <see cref="T:System.String" />.</returns>
    </member>
    <member name="M:System.Xml.XmlReader.ReadContentAsStringAsync">
      <summary vsli:raw="Asynchronously reads the text content at the current position as a &lt;see cref=&quot;T:System.String&quot; /&gt; object.">Lit de façon asynchrone le contenu de texte à la position actuelle comme un objet <see cref="T:System.String" />.</summary>
      <exception cref="T:System.InvalidOperationException" vsli:raw="An &lt;see cref=&quot;T:System.Xml.XmlReader&quot; /&gt; method was called before a previous asynchronous operation finished. In this case, &lt;see cref=&quot;T:System.InvalidOperationException&quot; /&gt; is thrown with the message &quot;An asynchronous operation is already in progress.&quot;&#xA;&#xA;-or-&#xA;&#xA;An &lt;see cref=&quot;T:System.Xml.XmlReader&quot; /&gt; asynchronous method was called without setting the &lt;see cref=&quot;P:System.Xml.XmlReaderSettings.Async&quot; /&gt; flag to &lt;see langword=&quot;true&quot; /&gt;. In this case, &lt;see cref=&quot;T:System.InvalidOperationException&quot; /&gt; is thrown with the message &quot;Set XmlReaderSettings.Async to true if you want to use Async Methods.&quot;">Une méthode <see cref="T:System.Xml.XmlReader" /> a été appelée avant la fin d’une opération asynchrone précédente. Dans ce cas, l’exception <see cref="T:System.InvalidOperationException" /> est levée avec le message « Une opération asynchrone est déjà en cours ».

- ou -

Une méthode asynchrone <see cref="T:System.Xml.XmlReader" /> a été appelée sans définir l’indicateur <see cref="P:System.Xml.XmlReaderSettings.Async" /> sur <see langword="true" />. Dans ce cas, l’exception <see cref="T:System.InvalidOperationException" /> est levée avec le message « Attribuez à XmlReaderSettings.Async la valeur True si vous voulez utiliser des méthodes asynchrones ».</exception>
      <returns vsli:raw="The text content as a &lt;see cref=&quot;T:System.String&quot; /&gt; object.">Contenu de texte sous la forme d'un objet <see cref="T:System.String" />.</returns>
    </member>
    <member name="M:System.Xml.XmlReader.ReadElementContentAs(System.Type,System.Xml.IXmlNamespaceResolver)">
      <summary vsli:raw="Reads the element content as the requested type.">Lit le contenu de l'élément en tant que type demandé.</summary>
      <param name="returnType" vsli:raw="The type of the value to be returned.&#xA;&#xA; Note With the release of the .NET Framework 3.5, the value of the &lt;paramref name=&quot;returnType&quot; /&gt; parameter can now be the &lt;see cref=&quot;T:System.DateTimeOffset&quot; /&gt; type.">Type de la valeur à retourner.  
  
 Remarque Avec le .NET Framework version 3.5, la valeur du paramètre <paramref name="returnType" /> peut maintenant être le type <see cref="T:System.DateTimeOffset" />.</param>
      <param name="namespaceResolver" vsli:raw="An &lt;see cref=&quot;T:System.Xml.IXmlNamespaceResolver&quot; /&gt; object that is used to resolve any namespace prefixes related to type conversion.">Objet <see cref="T:System.Xml.IXmlNamespaceResolver" /> permettant de résoudre tous les préfixes d'espaces de noms liés à la conversion de type.</param>
      <exception cref="T:System.InvalidOperationException" vsli:raw="The &lt;see cref=&quot;T:System.Xml.XmlReader&quot; /&gt; is not positioned on an element.&#xA;&#xA;-or-&#xA;&#xA;An &lt;see cref=&quot;T:System.Xml.XmlReader&quot; /&gt; method was called before a previous asynchronous operation finished. In this case, &lt;see cref=&quot;T:System.InvalidOperationException&quot; /&gt; is thrown with the message &quot;An asynchronous operation is already in progress.&quot;">
        <see cref="T:System.Xml.XmlReader" /> n'est pas placé sur un élément.

- ou -

Une méthode <see cref="T:System.Xml.XmlReader" /> a été appelée avant la fin d’une opération asynchrone précédente. Dans ce cas, l’exception <see cref="T:System.InvalidOperationException" /> est levée avec le message « Une opération asynchrone est déjà en cours ».</exception>
      <exception cref="T:System.Xml.XmlException" vsli:raw="The current element contains child elements.&#xA;&#xA; -or-&#xA;&#xA; The element content cannot be converted to the requested type.">L'élément en cours contient des éléments enfants.  
  
 - ou -  
  
 Impossible de convertir le contenu de l'élément en type demandé.</exception>
      <exception cref="T:System.ArgumentNullException" vsli:raw="The method is called with &lt;see langword=&quot;null&quot; /&gt; arguments.">La méthode est appelée avec des arguments <see langword="null" />.</exception>
      <exception cref="T:System.OverflowException" vsli:raw="Read &lt;see langword=&quot;Decimal.MaxValue&quot; /&gt;.">Lire <see langword="Decimal.MaxValue" />.</exception>
      <returns vsli:raw="The element content converted to the requested typed object.">Contenu d'élément converti en l'objet typé demandé.</returns>
    </member>
    <member name="M:System.Xml.XmlReader.ReadElementContentAs(System.Type,System.Xml.IXmlNamespaceResolver,System.String,System.String)">
      <summary vsli:raw="Checks that the specified local name and namespace URI matches that of the current element, then reads the element content as the requested type.">Vérifie que le nom local spécifié et l'URI de l'espace de noms correspondent à ceux de l'élément actuel, puis lit le contenu d'élément en tant que type demandé.</summary>
      <param name="returnType" vsli:raw="The type of the value to be returned.&#xA;&#xA; Note With the release of the .NET Framework 3.5, the value of the &lt;paramref name=&quot;returnType&quot; /&gt; parameter can now be the &lt;see cref=&quot;T:System.DateTimeOffset&quot; /&gt; type.">Type de la valeur à retourner.  
  
 Remarque Avec le .NET Framework version 3.5, la valeur du paramètre <paramref name="returnType" /> peut maintenant être le type <see cref="T:System.DateTimeOffset" />.</param>
      <param name="namespaceResolver" vsli:raw="An &lt;see cref=&quot;T:System.Xml.IXmlNamespaceResolver&quot; /&gt; object that is used to resolve any namespace prefixes related to type conversion.">Objet <see cref="T:System.Xml.IXmlNamespaceResolver" /> permettant de résoudre tous les préfixes d'espaces de noms liés à la conversion de type.</param>
      <param name="localName" vsli:raw="The local name of the element.">Le nom local de l'élément.</param>
      <param name="namespaceURI" vsli:raw="The namespace URI of the element.">L'URI de l'espace de noms de l'élément.</param>
      <exception cref="T:System.InvalidOperationException" vsli:raw="The &lt;see cref=&quot;T:System.Xml.XmlReader&quot; /&gt; is not positioned on an element.&#xA;&#xA;-or-&#xA;&#xA;An &lt;see cref=&quot;T:System.Xml.XmlReader&quot; /&gt; method was called before a previous asynchronous operation finished. In this case, &lt;see cref=&quot;T:System.InvalidOperationException&quot; /&gt; is thrown with the message &quot;An asynchronous operation is already in progress.&quot;">
        <see cref="T:System.Xml.XmlReader" /> n'est pas placé sur un élément.

- ou -

Une méthode <see cref="T:System.Xml.XmlReader" /> a été appelée avant la fin d’une opération asynchrone précédente. Dans ce cas, l’exception <see cref="T:System.InvalidOperationException" /> est levée avec le message « Une opération asynchrone est déjà en cours ».</exception>
      <exception cref="T:System.Xml.XmlException" vsli:raw="The current element contains child elements.&#xA;&#xA; -or-&#xA;&#xA; The element content cannot be converted to the requested type.">L'élément en cours contient des éléments enfants.  
  
 - ou -  
  
 Impossible de convertir le contenu de l'élément en type demandé.</exception>
      <exception cref="T:System.ArgumentNullException" vsli:raw="The method is called with &lt;see langword=&quot;null&quot; /&gt; arguments.">La méthode est appelée avec des arguments <see langword="null" />.</exception>
      <exception cref="T:System.ArgumentException" vsli:raw="The specified local name and namespace URI do not match that of the current element being read.">Le nom local et l'URI de l'espace de noms spécifiés ne correspondent pas à l'élément actuel lu.</exception>
      <exception cref="T:System.OverflowException" vsli:raw="Read &lt;see langword=&quot;Decimal.MaxValue&quot; /&gt;.">Lire <see langword="Decimal.MaxValue" />.</exception>
      <returns vsli:raw="The element content converted to the requested typed object.">Contenu d'élément converti en l'objet typé demandé.</returns>
    </member>
    <member name="M:System.Xml.XmlReader.ReadElementContentAsAsync(System.Type,System.Xml.IXmlNamespaceResolver)">
      <summary vsli:raw="Asynchronously reads the element content as the requested type.">Lit de façon asynchrone le contenu de l'élément en tant que type demandé.</summary>
      <param name="returnType" vsli:raw="The type of the value to be returned.">Type de la valeur à retourner.</param>
      <param name="namespaceResolver" vsli:raw="An &lt;see cref=&quot;T:System.Xml.IXmlNamespaceResolver&quot; /&gt; object that is used to resolve any namespace prefixes related to type conversion.">Objet <see cref="T:System.Xml.IXmlNamespaceResolver" /> permettant de résoudre tous les préfixes d'espaces de noms liés à la conversion de type.</param>
      <exception cref="T:System.InvalidOperationException" vsli:raw="An &lt;see cref=&quot;T:System.Xml.XmlReader&quot; /&gt; method was called before a previous asynchronous operation finished. In this case, &lt;see cref=&quot;T:System.InvalidOperationException&quot; /&gt; is thrown with the message &quot;An asynchronous operation is already in progress.&quot;&#xA;-or-&#xA;&#xA;An &lt;see cref=&quot;T:System.Xml.XmlReader&quot; /&gt; asynchronous method was called without setting the &lt;see cref=&quot;P:System.Xml.XmlReaderSettings.Async&quot; /&gt; flag to &lt;see langword=&quot;true&quot; /&gt;. In this case, &lt;see cref=&quot;T:System.InvalidOperationException&quot; /&gt; is thrown with the message &quot;Set XmlReaderSettings.Async to true if you want to use Async Methods.&quot;">Une méthode <see cref="T:System.Xml.XmlReader" /> a été appelée avant la fin d’une opération asynchrone précédente. Dans ce cas, l’exception <see cref="T:System.InvalidOperationException" /> est levée avec le message « Une opération asynchrone est déjà en cours ».
- ou -

Une méthode asynchrone <see cref="T:System.Xml.XmlReader" /> a été appelée sans définir l’indicateur <see cref="P:System.Xml.XmlReaderSettings.Async" /> sur <see langword="true" />. Dans ce cas, l’exception <see cref="T:System.InvalidOperationException" /> est levée avec le message « Attribuez à XmlReaderSettings.Async la valeur True si vous voulez utiliser des méthodes asynchrones ».</exception>
      <returns vsli:raw="The element content converted to the requested typed object.">Contenu d'élément converti en l'objet typé demandé.</returns>
    </member>
    <member name="M:System.Xml.XmlReader.ReadElementContentAsBase64(System.Byte[],System.Int32,System.Int32)">
      <summary vsli:raw="Reads the element and decodes the &lt;see langword=&quot;Base64&quot; /&gt; content.">Lit l'élément et décode le contenu au format <see langword="Base64" />.</summary>
      <param name="buffer" vsli:raw="The buffer into which to copy the resulting text. This value cannot be &lt;see langword=&quot;null&quot; /&gt;.">Mémoire tampon dans laquelle copier le texte obtenu. Cette valeur ne peut pas être <see langword="null" />.</param>
      <param name="index" vsli:raw="The offset into the buffer where to start copying the result.">Offset de la mémoire tampon où commence la copie du résultat.</param>
      <param name="count" vsli:raw="The maximum number of bytes to copy into the buffer. The actual number of bytes copied is returned from this method.">Nombre maximal d'octets à copier dans la mémoire tampon. Le nombre réel d'octets copiés est retourné à partir de cette méthode.</param>
      <exception cref="T:System.ArgumentNullException" vsli:raw="The &lt;paramref name=&quot;buffer&quot; /&gt; value is &lt;see langword=&quot;null&quot; /&gt;.">
        <paramref name="buffer" /> a la valeur <see langword="null" />.</exception>
      <exception cref="T:System.InvalidOperationException" vsli:raw="The current node is not an element node.&#xA;&#xA;-or-&#xA;&#xA;An &lt;see cref=&quot;T:System.Xml.XmlReader&quot; /&gt; method was called before a previous asynchronous operation finished. In this case, &lt;see cref=&quot;T:System.InvalidOperationException&quot; /&gt; is thrown with the message &quot;An asynchronous operation is already in progress.&quot;">Le nœud actuel n'est pas un nœud d'élément.

- ou -

Une méthode <see cref="T:System.Xml.XmlReader" /> a été appelée avant la fin d’une opération asynchrone précédente. Dans ce cas, l’exception <see cref="T:System.InvalidOperationException" /> est levée avec le message « Une opération asynchrone est déjà en cours ».</exception>
      <exception cref="T:System.ArgumentOutOfRangeException" vsli:raw="The index into the buffer or index + count is larger than the allocated buffer size.">L'index de la mémoire tampon (ou l'index augmenté de la valeur du paramètre count) est supérieur à la taille de la mémoire tampon allouée.</exception>
      <exception cref="T:System.NotSupportedException" vsli:raw="The &lt;see cref=&quot;T:System.Xml.XmlReader&quot; /&gt; implementation does not support this method.">L'implémentation de <see cref="T:System.Xml.XmlReader" /> ne prend pas en charge cette méthode.</exception>
      <exception cref="T:System.Xml.XmlException" vsli:raw="The element contains mixed-content.">L'élément contient un contenu mixte.</exception>
      <exception cref="T:System.FormatException" vsli:raw="The content cannot be converted to the requested type.">Impossible de convertir le contenu en type demandé.</exception>
      <returns vsli:raw="The number of bytes written to the buffer.">Nombre d'octets écrits dans la mémoire tampon.</returns>
    </member>
    <member name="M:System.Xml.XmlReader.ReadElementContentAsBase64Async(System.Byte[],System.Int32,System.Int32)">
      <summary vsli:raw="Asynchronously reads the element and decodes the &lt;see langword=&quot;Base64&quot; /&gt; content.">Lit de façon asynchrone l'élément et décode le contenu au format <see langword="Base64" />.</summary>
      <param name="buffer" vsli:raw="The buffer into which to copy the resulting text. This value cannot be &lt;see langword=&quot;null&quot; /&gt;.">Mémoire tampon dans laquelle copier le texte obtenu. Cette valeur ne peut pas être <see langword="null" />.</param>
      <param name="index" vsli:raw="The offset into the buffer where to start copying the result.">Offset de la mémoire tampon où commence la copie du résultat.</param>
      <param name="count" vsli:raw="The maximum number of bytes to copy into the buffer. The actual number of bytes copied is returned from this method.">Nombre maximal d'octets à copier dans la mémoire tampon. Le nombre réel d'octets copiés est retourné à partir de cette méthode.</param>
      <exception cref="T:System.InvalidOperationException" vsli:raw="An &lt;see cref=&quot;T:System.Xml.XmlReader&quot; /&gt; method was called before a previous asynchronous operation finished. In this case, &lt;see cref=&quot;T:System.InvalidOperationException&quot; /&gt; is thrown with the message &quot;An asynchronous operation is already in progress.&quot;&#xA;&#xA;-or-&#xA;&#xA;An &lt;see cref=&quot;T:System.Xml.XmlReader&quot; /&gt; asynchronous method was called without setting the &lt;see cref=&quot;P:System.Xml.XmlReaderSettings.Async&quot; /&gt; flag to &lt;see langword=&quot;true&quot; /&gt;. In this case, &lt;see cref=&quot;T:System.InvalidOperationException&quot; /&gt; is thrown with the message &quot;Set XmlReaderSettings.Async to true if you want to use Async Methods.&quot;">Une méthode <see cref="T:System.Xml.XmlReader" /> a été appelée avant la fin d’une opération asynchrone précédente. Dans ce cas, l’exception <see cref="T:System.InvalidOperationException" /> est levée avec le message « Une opération asynchrone est déjà en cours ».

- ou -

Une méthode asynchrone <see cref="T:System.Xml.XmlReader" /> a été appelée sans définir l’indicateur <see cref="P:System.Xml.XmlReaderSettings.Async" /> sur <see langword="true" />. Dans ce cas, l’exception <see cref="T:System.InvalidOperationException" /> est levée avec le message « Attribuez à XmlReaderSettings.Async la valeur True si vous voulez utiliser des méthodes asynchrones ».</exception>
      <returns vsli:raw="The number of bytes written to the buffer.">Nombre d'octets écrits dans la mémoire tampon.</returns>
    </member>
    <member name="M:System.Xml.XmlReader.ReadElementContentAsBinHex(System.Byte[],System.Int32,System.Int32)">
      <summary vsli:raw="Reads the element and decodes the &lt;see langword=&quot;BinHex&quot; /&gt; content.">Lit l'élément et décode le contenu au format <see langword="BinHex" />.</summary>
      <param name="buffer" vsli:raw="The buffer into which to copy the resulting text. This value cannot be &lt;see langword=&quot;null&quot; /&gt;.">Mémoire tampon dans laquelle copier le texte obtenu. Cette valeur ne peut pas être <see langword="null" />.</param>
      <param name="index" vsli:raw="The offset into the buffer where to start copying the result.">Offset de la mémoire tampon où commence la copie du résultat.</param>
      <param name="count" vsli:raw="The maximum number of bytes to copy into the buffer. The actual number of bytes copied is returned from this method.">Nombre maximal d'octets à copier dans la mémoire tampon. Le nombre réel d'octets copiés est retourné à partir de cette méthode.</param>
      <exception cref="T:System.ArgumentNullException" vsli:raw="The &lt;paramref name=&quot;buffer&quot; /&gt; value is &lt;see langword=&quot;null&quot; /&gt;.">
        <paramref name="buffer" /> a la valeur <see langword="null" />.</exception>
      <exception cref="T:System.InvalidOperationException" vsli:raw="The current node is not an element node.&#xA;&#xA;-or-&#xA;&#xA;An &lt;see cref=&quot;T:System.Xml.XmlReader&quot; /&gt; method was called before a previous asynchronous operation finished. In this case, &lt;see cref=&quot;T:System.InvalidOperationException&quot; /&gt; is thrown with the message &quot;An asynchronous operation is already in progress.&quot;">Le nœud actuel n'est pas un nœud d'élément.

- ou -

Une méthode <see cref="T:System.Xml.XmlReader" /> a été appelée avant la fin d’une opération asynchrone précédente. Dans ce cas, l’exception <see cref="T:System.InvalidOperationException" /> est levée avec le message « Une opération asynchrone est déjà en cours ».</exception>
      <exception cref="T:System.ArgumentOutOfRangeException" vsli:raw="The index into the buffer or index + count is larger than the allocated buffer size.">L'index de la mémoire tampon (ou l'index augmenté de la valeur du paramètre count) est supérieur à la taille de la mémoire tampon allouée.</exception>
      <exception cref="T:System.NotSupportedException" vsli:raw="The &lt;see cref=&quot;T:System.Xml.XmlReader&quot; /&gt; implementation does not support this method.">L'implémentation de <see cref="T:System.Xml.XmlReader" /> ne prend pas en charge cette méthode.</exception>
      <exception cref="T:System.Xml.XmlException" vsli:raw="The element contains mixed-content.">L'élément contient un contenu mixte.</exception>
      <exception cref="T:System.FormatException" vsli:raw="The content cannot be converted to the requested type.">Impossible de convertir le contenu en type demandé.</exception>
      <returns vsli:raw="The number of bytes written to the buffer.">Nombre d'octets écrits dans la mémoire tampon.</returns>
    </member>
    <member name="M:System.Xml.XmlReader.ReadElementContentAsBinHexAsync(System.Byte[],System.Int32,System.Int32)">
      <summary vsli:raw="Asynchronously reads the element and decodes the &lt;see langword=&quot;BinHex&quot; /&gt; content.">Lit de façon asynchrone l'élément et décode le contenu au format <see langword="BinHex" />.</summary>
      <param name="buffer" vsli:raw="The buffer into which to copy the resulting text. This value cannot be &lt;see langword=&quot;null&quot; /&gt;.">Mémoire tampon dans laquelle copier le texte obtenu. Cette valeur ne peut pas être <see langword="null" />.</param>
      <param name="index" vsli:raw="The offset into the buffer where to start copying the result.">Offset de la mémoire tampon où commence la copie du résultat.</param>
      <param name="count" vsli:raw="The maximum number of bytes to copy into the buffer. The actual number of bytes copied is returned from this method.">Nombre maximal d'octets à copier dans la mémoire tampon. Le nombre réel d'octets copiés est retourné à partir de cette méthode.</param>
      <exception cref="T:System.InvalidOperationException" vsli:raw="An &lt;see cref=&quot;T:System.Xml.XmlReader&quot; /&gt; method was called before a previous asynchronous operation finished. In this case, &lt;see cref=&quot;T:System.InvalidOperationException&quot; /&gt; is thrown with the message &quot;An asynchronous operation is already in progress.&quot;&#xA;&#xA;-or-&#xA;&#xA;An &lt;see cref=&quot;T:System.Xml.XmlReader&quot; /&gt; asynchronous method was called without setting the &lt;see cref=&quot;P:System.Xml.XmlReaderSettings.Async&quot; /&gt; flag to &lt;see langword=&quot;true&quot; /&gt;. In this case, &lt;see cref=&quot;T:System.InvalidOperationException&quot; /&gt; is thrown with the message &quot;Set XmlReaderSettings.Async to true if you want to use Async Methods.&quot;">Une méthode <see cref="T:System.Xml.XmlReader" /> a été appelée avant la fin d’une opération asynchrone précédente. Dans ce cas, l’exception <see cref="T:System.InvalidOperationException" /> est levée avec le message « Une opération asynchrone est déjà en cours ».

- ou -

Une méthode asynchrone <see cref="T:System.Xml.XmlReader" /> a été appelée sans définir l’indicateur <see cref="P:System.Xml.XmlReaderSettings.Async" /> sur <see langword="true" />. Dans ce cas, l’exception <see cref="T:System.InvalidOperationException" /> est levée avec le message « Attribuez à XmlReaderSettings.Async la valeur True si vous voulez utiliser des méthodes asynchrones ».</exception>
      <returns vsli:raw="The number of bytes written to the buffer.">Nombre d'octets écrits dans la mémoire tampon.</returns>
    </member>
    <member name="M:System.Xml.XmlReader.ReadElementContentAsBoolean">
      <summary vsli:raw="Reads the current element and returns the contents as a &lt;see cref=&quot;T:System.Boolean&quot; /&gt; object.">Lit l'élément actuel et retourne le contenu en tant qu'objet <see cref="T:System.Boolean" />.</summary>
      <exception cref="T:System.InvalidOperationException" vsli:raw="The &lt;see cref=&quot;T:System.Xml.XmlReader&quot; /&gt; is not positioned on an element.&#xA;&#xA;-or-&#xA;&#xA;An &lt;see cref=&quot;T:System.Xml.XmlReader&quot; /&gt; method was called before a previous asynchronous operation finished. In this case, &lt;see cref=&quot;T:System.InvalidOperationException&quot; /&gt; is thrown with the message &quot;An asynchronous operation is already in progress.&quot;">
        <see cref="T:System.Xml.XmlReader" /> n'est pas placé sur un élément.

- ou -

Une méthode <see cref="T:System.Xml.XmlReader" /> a été appelée avant la fin d’une opération asynchrone précédente. Dans ce cas, l’exception <see cref="T:System.InvalidOperationException" /> est levée avec le message « Une opération asynchrone est déjà en cours ».</exception>
      <exception cref="T:System.Xml.XmlException" vsli:raw="The current element contains child elements.&#xA;&#xA; -or-&#xA;&#xA; The element content cannot be converted to a &lt;see cref=&quot;T:System.Boolean&quot; /&gt; object.">L'élément en cours contient des éléments enfants.  
  
- ou - 
Le contenu de l'élément ne peut pas être converti en objet <see cref="T:System.Boolean" />.</exception>
      <exception cref="T:System.ArgumentNullException" vsli:raw="The method is called with &lt;see langword=&quot;null&quot; /&gt; arguments.">La méthode est appelée avec des arguments <see langword="null" />.</exception>
      <returns vsli:raw="The element content as a &lt;see cref=&quot;T:System.Boolean&quot; /&gt; object.">Contenu de l'élément sous la forme d'un objet <see cref="T:System.Boolean" />.</returns>
    </member>
    <member name="M:System.Xml.XmlReader.ReadElementContentAsBoolean(System.String,System.String)">
      <summary vsli:raw="Checks that the specified local name and namespace URI matches that of the current element, then reads the current element and returns the contents as a &lt;see cref=&quot;T:System.Boolean&quot; /&gt; object.">Vérifie que le nom local spécifié et l'URI de l'espace de noms correspondent à ceux de l'élément actuel, puis lit l'élément actuel et retourne le contenu en tant qu'objet <see cref="T:System.Boolean" />.</summary>
      <param name="localName" vsli:raw="The local name of the element.">Le nom local de l'élément.</param>
      <param name="namespaceURI" vsli:raw="The namespace URI of the element.">L'URI de l'espace de noms de l'élément.</param>
      <exception cref="T:System.InvalidOperationException" vsli:raw="The &lt;see cref=&quot;T:System.Xml.XmlReader&quot; /&gt; is not positioned on an element.&#xA;&#xA;-or-&#xA;&#xA;An &lt;see cref=&quot;T:System.Xml.XmlReader&quot; /&gt; method was called before a previous asynchronous operation finished. In this case, &lt;see cref=&quot;T:System.InvalidOperationException&quot; /&gt; is thrown with the message &quot;An asynchronous operation is already in progress.&quot;">
        <see cref="T:System.Xml.XmlReader" /> n'est pas placé sur un élément.

- ou -

Une méthode <see cref="T:System.Xml.XmlReader" /> a été appelée avant la fin d’une opération asynchrone précédente. Dans ce cas, l’exception <see cref="T:System.InvalidOperationException" /> est levée avec le message « Une opération asynchrone est déjà en cours ».</exception>
      <exception cref="T:System.Xml.XmlException" vsli:raw="The current element contains child elements.&#xA;&#xA; -or-&#xA;&#xA; The element content cannot be converted to the requested type.">L'élément en cours contient des éléments enfants.  
  
 - ou -  
  
 Impossible de convertir le contenu de l'élément en type demandé.</exception>
      <exception cref="T:System.ArgumentNullException" vsli:raw="The method is called with &lt;see langword=&quot;null&quot; /&gt; arguments.">La méthode est appelée avec des arguments <see langword="null" />.</exception>
      <exception cref="T:System.ArgumentException" vsli:raw="The specified local name and namespace URI do not match that of the current element being read.">Le nom local et l'URI de l'espace de noms spécifiés ne correspondent pas à l'élément actuel lu.</exception>
      <returns vsli:raw="The element content as a &lt;see cref=&quot;T:System.Boolean&quot; /&gt; object.">Contenu de l'élément sous la forme d'un objet <see cref="T:System.Boolean" />.</returns>
    </member>
    <member name="M:System.Xml.XmlReader.ReadElementContentAsDateTime">
      <summary vsli:raw="Reads the current element and returns the contents as a &lt;see cref=&quot;T:System.DateTime&quot; /&gt; object.">Lit l'élément actuel et retourne le contenu en tant qu'objet <see cref="T:System.DateTime" />.</summary>
      <exception cref="T:System.InvalidOperationException" vsli:raw="The &lt;see cref=&quot;T:System.Xml.XmlReader&quot; /&gt; is not positioned on an element.&#xA;&#xA;-or-&#xA;&#xA;An &lt;see cref=&quot;T:System.Xml.XmlReader&quot; /&gt; method was called before a previous asynchronous operation finished. In this case, &lt;see cref=&quot;T:System.InvalidOperationException&quot; /&gt; is thrown with the message &quot;An asynchronous operation is already in progress.&quot;">
        <see cref="T:System.Xml.XmlReader" /> n'est pas placé sur un élément.

- ou -

Une méthode <see cref="T:System.Xml.XmlReader" /> a été appelée avant la fin d’une opération asynchrone précédente. Dans ce cas, l’exception <see cref="T:System.InvalidOperationException" /> est levée avec le message « Une opération asynchrone est déjà en cours ».</exception>
      <exception cref="T:System.Xml.XmlException" vsli:raw="The current element contains child elements.&#xA;&#xA; -or-&#xA;&#xA; The element content cannot be converted to a &lt;see cref=&quot;T:System.DateTime&quot; /&gt; object.">L'élément en cours contient des éléments enfants.  
  
- ou - 
Le contenu de l'élément ne peut pas être converti en objet <see cref="T:System.DateTime" />.</exception>
      <exception cref="T:System.ArgumentNullException" vsli:raw="The method is called with &lt;see langword=&quot;null&quot; /&gt; arguments.">La méthode est appelée avec des arguments <see langword="null" />.</exception>
      <returns vsli:raw="The element content as a &lt;see cref=&quot;T:System.DateTime&quot; /&gt; object.">Contenu de l'élément sous la forme d'un objet <see cref="T:System.DateTime" />.</returns>
    </member>
    <member name="M:System.Xml.XmlReader.ReadElementContentAsDateTime(System.String,System.String)">
      <summary vsli:raw="Checks that the specified local name and namespace URI matches that of the current element, then reads the current element and returns the contents as a &lt;see cref=&quot;T:System.DateTime&quot; /&gt; object.">Vérifie que le nom local spécifié et l'URI de l'espace de noms correspondent à ceux de l'élément actuel, puis lit l'élément actuel et retourne le contenu en tant qu'objet <see cref="T:System.DateTime" />.</summary>
      <param name="localName" vsli:raw="The local name of the element.">Le nom local de l'élément.</param>
      <param name="namespaceURI" vsli:raw="The namespace URI of the element.">L'URI de l'espace de noms de l'élément.</param>
      <exception cref="T:System.InvalidOperationException" vsli:raw="The &lt;see cref=&quot;T:System.Xml.XmlReader&quot; /&gt; is not positioned on an element.&#xA;&#xA;-or-&#xA;&#xA;An &lt;see cref=&quot;T:System.Xml.XmlReader&quot; /&gt; method was called before a previous asynchronous operation finished. In this case, &lt;see cref=&quot;T:System.InvalidOperationException&quot; /&gt; is thrown with the message &quot;An asynchronous operation is already in progress.&quot;">
        <see cref="T:System.Xml.XmlReader" /> n'est pas placé sur un élément.

- ou -

Une méthode <see cref="T:System.Xml.XmlReader" /> a été appelée avant la fin d’une opération asynchrone précédente. Dans ce cas, l’exception <see cref="T:System.InvalidOperationException" /> est levée avec le message « Une opération asynchrone est déjà en cours ».</exception>
      <exception cref="T:System.Xml.XmlException" vsli:raw="The current element contains child elements.&#xA;&#xA; -or-&#xA;&#xA; The element content cannot be converted to the requested type.">L'élément en cours contient des éléments enfants.  
  
 - ou -  
  
 Impossible de convertir le contenu de l'élément en type demandé.</exception>
      <exception cref="T:System.ArgumentNullException" vsli:raw="The method is called with &lt;see langword=&quot;null&quot; /&gt; arguments.">La méthode est appelée avec des arguments <see langword="null" />.</exception>
      <exception cref="T:System.ArgumentException" vsli:raw="The specified local name and namespace URI do not match that of the current element being read.">Le nom local et l'URI de l'espace de noms spécifiés ne correspondent pas à l'élément actuel lu.</exception>
      <returns vsli:raw="The element contents as a &lt;see cref=&quot;T:System.DateTime&quot; /&gt; object.">Contenu de l'élément sous la forme d'un objet <see cref="T:System.DateTime" />.</returns>
    </member>
    <member name="M:System.Xml.XmlReader.ReadElementContentAsDecimal">
      <summary vsli:raw="Reads the current element and returns the contents as a &lt;see cref=&quot;T:System.Decimal&quot; /&gt; object.">Lit l'élément actuel et retourne le contenu en tant qu'objet <see cref="T:System.Decimal" />.</summary>
      <exception cref="T:System.InvalidOperationException" vsli:raw="The &lt;see cref=&quot;T:System.Xml.XmlReader&quot; /&gt; is not positioned on an element.&#xA;&#xA;-or-&#xA;&#xA;An &lt;see cref=&quot;T:System.Xml.XmlReader&quot; /&gt; method was called before a previous asynchronous operation finished. In this case, &lt;see cref=&quot;T:System.InvalidOperationException&quot; /&gt; is thrown with the message &quot;An asynchronous operation is already in progress.&quot;">
        <see cref="T:System.Xml.XmlReader" /> n'est pas placé sur un élément.

- ou -

Une méthode <see cref="T:System.Xml.XmlReader" /> a été appelée avant la fin d’une opération asynchrone précédente. Dans ce cas, l’exception <see cref="T:System.InvalidOperationException" /> est levée avec le message « Une opération asynchrone est déjà en cours ».</exception>
      <exception cref="T:System.Xml.XmlException" vsli:raw="The current element contains child elements.&#xA;&#xA; -or-&#xA;&#xA; The element content cannot be converted to a &lt;see cref=&quot;T:System.Decimal&quot; /&gt;.">L'élément en cours contient des éléments enfants.  
  
- ou - 
Le contenu de l'élément ne peut pas être converti en <see cref="T:System.Decimal" />.</exception>
      <exception cref="T:System.ArgumentNullException" vsli:raw="The method is called with &lt;see langword=&quot;null&quot; /&gt; arguments.">La méthode est appelée avec des arguments <see langword="null" />.</exception>
      <returns vsli:raw="The element content as a &lt;see cref=&quot;T:System.Decimal&quot; /&gt; object.">Contenu de l'élément sous la forme d'un objet <see cref="T:System.Decimal" />.</returns>
    </member>
    <member name="M:System.Xml.XmlReader.ReadElementContentAsDecimal(System.String,System.String)">
      <summary vsli:raw="Checks that the specified local name and namespace URI matches that of the current element, then reads the current element and returns the contents as a &lt;see cref=&quot;T:System.Decimal&quot; /&gt; object.">Vérifie que le nom local spécifié et l'URI de l'espace de noms correspondent à ceux de l'élément actuel, puis lit l'élément actuel et retourne le contenu en tant qu'objet <see cref="T:System.Decimal" />.</summary>
      <param name="localName" vsli:raw="The local name of the element.">Le nom local de l'élément.</param>
      <param name="namespaceURI" vsli:raw="The namespace URI of the element.">L'URI de l'espace de noms de l'élément.</param>
      <exception cref="T:System.InvalidOperationException" vsli:raw="The &lt;see cref=&quot;T:System.Xml.XmlReader&quot; /&gt; is not positioned on an element.&#xA;&#xA;-or-&#xA;&#xA;An &lt;see cref=&quot;T:System.Xml.XmlReader&quot; /&gt; method was called before a previous asynchronous operation finished. In this case, &lt;see cref=&quot;T:System.InvalidOperationException&quot; /&gt; is thrown with the message &quot;An asynchronous operation is already in progress.&quot;">
        <see cref="T:System.Xml.XmlReader" /> n'est pas placé sur un élément.

- ou -

Une méthode <see cref="T:System.Xml.XmlReader" /> a été appelée avant la fin d’une opération asynchrone précédente. Dans ce cas, l’exception <see cref="T:System.InvalidOperationException" /> est levée avec le message « Une opération asynchrone est déjà en cours ».</exception>
      <exception cref="T:System.Xml.XmlException" vsli:raw="The current element contains child elements.&#xA;&#xA; -or-&#xA;&#xA; The element content cannot be converted to a &lt;see cref=&quot;T:System.Decimal&quot; /&gt;.">L'élément en cours contient des éléments enfants.  
  
- ou - 
Le contenu de l'élément ne peut pas être converti en <see cref="T:System.Decimal" />.</exception>
      <exception cref="T:System.ArgumentNullException" vsli:raw="The method is called with &lt;see langword=&quot;null&quot; /&gt; arguments.">La méthode est appelée avec des arguments <see langword="null" />.</exception>
      <exception cref="T:System.ArgumentException" vsli:raw="The specified local name and namespace URI do not match that of the current element being read.">Le nom local et l'URI de l'espace de noms spécifiés ne correspondent pas à l'élément actuel lu.</exception>
      <returns vsli:raw="The element content as a &lt;see cref=&quot;T:System.Decimal&quot; /&gt; object.">Contenu de l'élément sous la forme d'un objet <see cref="T:System.Decimal" />.</returns>
    </member>
    <member name="M:System.Xml.XmlReader.ReadElementContentAsDouble">
      <summary vsli:raw="Reads the current element and returns the contents as a double-precision floating-point number.">Lit l'élément actuel et retourne le contenu en tant que nombre à virgule flottante double précision.</summary>
      <exception cref="T:System.InvalidOperationException" vsli:raw="The &lt;see cref=&quot;T:System.Xml.XmlReader&quot; /&gt; is not positioned on an element.&#xA;&#xA;-or-&#xA;&#xA;An &lt;see cref=&quot;T:System.Xml.XmlReader&quot; /&gt; method was called before a previous asynchronous operation finished. In this case, &lt;see cref=&quot;T:System.InvalidOperationException&quot; /&gt; is thrown with the message &quot;An asynchronous operation is already in progress.&quot;">
        <see cref="T:System.Xml.XmlReader" /> n'est pas placé sur un élément.

- ou -

Une méthode <see cref="T:System.Xml.XmlReader" /> a été appelée avant la fin d’une opération asynchrone précédente. Dans ce cas, l’exception <see cref="T:System.InvalidOperationException" /> est levée avec le message « Une opération asynchrone est déjà en cours ».</exception>
      <exception cref="T:System.Xml.XmlException" vsli:raw="The current element contains child elements.&#xA;&#xA; -or-&#xA;&#xA; The element content cannot be converted to a double-precision floating-point number.">L'élément en cours contient des éléments enfants.  
  
 - ou -  
  
 Le contenu de l'élément ne peut pas être converti en nombre à virgule flottante double précision.</exception>
      <exception cref="T:System.ArgumentNullException" vsli:raw="The method is called with &lt;see langword=&quot;null&quot; /&gt; arguments.">La méthode est appelée avec des arguments <see langword="null" />.</exception>
      <returns vsli:raw="The element content as a double-precision floating-point number.">Contenu d'élément sous la forme d'un nombre à virgule flottante double précision.</returns>
    </member>
    <member name="M:System.Xml.XmlReader.ReadElementContentAsDouble(System.String,System.String)">
      <summary vsli:raw="Checks that the specified local name and namespace URI matches that of the current element, then reads the current element and returns the contents as a double-precision floating-point number.">Vérifie que le nom local et l'URI de l'espace de noms spécifiés correspondent à ceux de l'élément actuel, puis lit l'élément actuel et retourne le contenu sous la forme d'un nombre à virgule flottante double précision.</summary>
      <param name="localName" vsli:raw="The local name of the element.">Le nom local de l'élément.</param>
      <param name="namespaceURI" vsli:raw="The namespace URI of the element.">L'URI de l'espace de noms de l'élément.</param>
      <exception cref="T:System.InvalidOperationException" vsli:raw="The &lt;see cref=&quot;T:System.Xml.XmlReader&quot; /&gt; is not positioned on an element.&#xA;&#xA;-or-&#xA;&#xA;An &lt;see cref=&quot;T:System.Xml.XmlReader&quot; /&gt; method was called before a previous asynchronous operation finished. In this case, &lt;see cref=&quot;T:System.InvalidOperationException&quot; /&gt; is thrown with the message &quot;An asynchronous operation is already in progress.&quot;">
        <see cref="T:System.Xml.XmlReader" /> n'est pas placé sur un élément.

- ou -

Une méthode <see cref="T:System.Xml.XmlReader" /> a été appelée avant la fin d’une opération asynchrone précédente. Dans ce cas, l’exception <see cref="T:System.InvalidOperationException" /> est levée avec le message « Une opération asynchrone est déjà en cours ».</exception>
      <exception cref="T:System.Xml.XmlException" vsli:raw="The current element contains child elements.&#xA;&#xA; -or-&#xA;&#xA; The element content cannot be converted to the requested type.">L'élément en cours contient des éléments enfants.  
  
 - ou -  
  
 Impossible de convertir le contenu de l'élément en type demandé.</exception>
      <exception cref="T:System.ArgumentNullException" vsli:raw="The method is called with &lt;see langword=&quot;null&quot; /&gt; arguments.">La méthode est appelée avec des arguments <see langword="null" />.</exception>
      <exception cref="T:System.ArgumentException" vsli:raw="The specified local name and namespace URI do not match that of the current element being read.">Le nom local et l'URI de l'espace de noms spécifiés ne correspondent pas à l'élément actuel lu.</exception>
      <returns vsli:raw="The element content as a double-precision floating-point number.">Contenu d'élément sous la forme d'un nombre à virgule flottante double précision.</returns>
    </member>
    <member name="M:System.Xml.XmlReader.ReadElementContentAsFloat">
      <summary vsli:raw="Reads the current element and returns the contents as single-precision floating-point number.">Lit l'élément actuel et retourne le contenu en tant que nombre à virgule flottante simple précision.</summary>
      <exception cref="T:System.InvalidOperationException" vsli:raw="The &lt;see cref=&quot;T:System.Xml.XmlReader&quot; /&gt; is not positioned on an element.&#xA;&#xA;-or-&#xA;&#xA;An &lt;see cref=&quot;T:System.Xml.XmlReader&quot; /&gt; method was called before a previous asynchronous operation finished. In this case, &lt;see cref=&quot;T:System.InvalidOperationException&quot; /&gt; is thrown with the message &quot;An asynchronous operation is already in progress.&quot;">
        <see cref="T:System.Xml.XmlReader" /> n'est pas placé sur un élément.

- ou -

Une méthode <see cref="T:System.Xml.XmlReader" /> a été appelée avant la fin d’une opération asynchrone précédente. Dans ce cas, l’exception <see cref="T:System.InvalidOperationException" /> est levée avec le message « Une opération asynchrone est déjà en cours ».</exception>
      <exception cref="T:System.Xml.XmlException" vsli:raw="The current element contains child elements.&#xA;&#xA; -or-&#xA;&#xA; The element content cannot be converted to a single-precision floating-point number.">L'élément en cours contient des éléments enfants.  
  
 - ou -  
  
 Le contenu de l'élément ne peut pas être converti en nombre à virgule flottante simple précision.</exception>
      <exception cref="T:System.ArgumentNullException" vsli:raw="The method is called with &lt;see langword=&quot;null&quot; /&gt; arguments.">La méthode est appelée avec des arguments <see langword="null" />.</exception>
      <returns vsli:raw="The element content as a single-precision floating point number.">Contenu d'élément sous la forme d'un nombre à virgule flottante simple précision.</returns>
    </member>
    <member name="M:System.Xml.XmlReader.ReadElementContentAsFloat(System.String,System.String)">
      <summary vsli:raw="Checks that the specified local name and namespace URI matches that of the current element, then reads the current element and returns the contents as a single-precision floating-point number.">Vérifie que le nom local et l'URI de l'espace de noms spécifiés correspondent à ceux de l'élément actuel, puis lit l'élément actuel et retourne le contenu sous la forme d'un nombre à virgule flottante simple précision.</summary>
      <param name="localName" vsli:raw="The local name of the element.">Le nom local de l'élément.</param>
      <param name="namespaceURI" vsli:raw="The namespace URI of the element.">L'URI de l'espace de noms de l'élément.</param>
      <exception cref="T:System.InvalidOperationException" vsli:raw="The &lt;see cref=&quot;T:System.Xml.XmlReader&quot; /&gt; is not positioned on an element.&#xA;&#xA;-or-&#xA;&#xA;An &lt;see cref=&quot;T:System.Xml.XmlReader&quot; /&gt; method was called before a previous asynchronous operation finished. In this case, &lt;see cref=&quot;T:System.InvalidOperationException&quot; /&gt; is thrown with the message &quot;An asynchronous operation is already in progress.&quot;">
        <see cref="T:System.Xml.XmlReader" /> n'est pas placé sur un élément.

- ou - 
Une méthode <see cref="T:System.Xml.XmlReader" /> a été appelée avant la fin d’une opération asynchrone précédente. Dans ce cas, l’exception <see cref="T:System.InvalidOperationException" /> est levée avec le message « Une opération asynchrone est déjà en cours ».</exception>
      <exception cref="T:System.Xml.XmlException" vsli:raw="The current element contains child elements.&#xA;&#xA; -or-&#xA;&#xA; The element content cannot be converted to a single-precision floating-point number.">L'élément en cours contient des éléments enfants.  
  
 - ou -  
  
 Le contenu de l'élément ne peut pas être converti en nombre à virgule flottante simple précision.</exception>
      <exception cref="T:System.ArgumentNullException" vsli:raw="The method is called with &lt;see langword=&quot;null&quot; /&gt; arguments.">La méthode est appelée avec des arguments <see langword="null" />.</exception>
      <exception cref="T:System.ArgumentException" vsli:raw="The specified local name and namespace URI do not match that of the current element being read.">Le nom local et l'URI de l'espace de noms spécifiés ne correspondent pas à l'élément actuel lu.</exception>
      <returns vsli:raw="The element content as a single-precision floating point number.">Contenu d'élément sous la forme d'un nombre à virgule flottante simple précision.</returns>
    </member>
    <member name="M:System.Xml.XmlReader.ReadElementContentAsInt">
      <summary vsli:raw="Reads the current element and returns the contents as a 32-bit signed integer.">Lit l'élément actuel et retourne le contenu comme un entier signé de 32 bits.</summary>
      <exception cref="T:System.InvalidOperationException" vsli:raw="The &lt;see cref=&quot;T:System.Xml.XmlReader&quot; /&gt; is not positioned on an element.&#xA;&#xA;-or-&#xA;&#xA;An &lt;see cref=&quot;T:System.Xml.XmlReader&quot; /&gt; method was called before a previous asynchronous operation finished. In this case, &lt;see cref=&quot;T:System.InvalidOperationException&quot; /&gt; is thrown with the message &quot;An asynchronous operation is already in progress.&quot;">
        <see cref="T:System.Xml.XmlReader" /> n'est pas placé sur un élément.

- ou - 
Une méthode <see cref="T:System.Xml.XmlReader" /> a été appelée avant la fin d’une opération asynchrone précédente. Dans ce cas, l’exception <see cref="T:System.InvalidOperationException" /> est levée avec le message « Une opération asynchrone est déjà en cours ».</exception>
      <exception cref="T:System.Xml.XmlException" vsli:raw="The current element contains child elements.&#xA;&#xA; -or-&#xA;&#xA; The element content cannot be converted to a 32-bit signed integer.">L'élément en cours contient des éléments enfants.  
  
 - ou -  
  
 Le contenu de l'élément ne peut pas être converti en un entier signé de 32 bits.</exception>
      <returns vsli:raw="The element content as a 32-bit signed integer.">Contenu d'élément sous la forme d'un entier signé de 32 bits.</returns>
    </member>
    <member name="M:System.Xml.XmlReader.ReadElementContentAsInt(System.String,System.String)">
      <summary vsli:raw="Checks that the specified local name and namespace URI matches that of the current element, then reads the current element and returns the contents as a 32-bit signed integer.">Vérifie que le nom local spécifié et l'URI de l'espace de noms correspondent à ceux de l'élément actuel, puis lit l'élément actuel et retourne le contenu en tant qu'entier signé de 32 bits.</summary>
      <param name="localName" vsli:raw="The local name of the element.">Le nom local de l'élément.</param>
      <param name="namespaceURI" vsli:raw="The namespace URI of the element.">L'URI de l'espace de noms de l'élément.</param>
      <exception cref="T:System.InvalidOperationException" vsli:raw="The &lt;see cref=&quot;T:System.Xml.XmlReader&quot; /&gt; is not positioned on an element.&#xA;&#xA;-or-&#xA;&#xA;An &lt;see cref=&quot;T:System.Xml.XmlReader&quot; /&gt; method was called before a previous asynchronous operation finished. In this case, &lt;see cref=&quot;T:System.InvalidOperationException&quot; /&gt; is thrown with the message &quot;An asynchronous operation is already in progress.&quot;">
        <see cref="T:System.Xml.XmlReader" /> n'est pas placé sur un élément.

- ou - 
Une méthode <see cref="T:System.Xml.XmlReader" /> a été appelée avant la fin d’une opération asynchrone précédente. Dans ce cas, l’exception <see cref="T:System.InvalidOperationException" /> est levée avec le message « Une opération asynchrone est déjà en cours ».</exception>
      <exception cref="T:System.Xml.XmlException" vsli:raw="The current element contains child elements.&#xA;&#xA; -or-&#xA;&#xA; The element content cannot be converted to a 32-bit signed integer.">L'élément en cours contient des éléments enfants.  
  
 - ou -  
  
 Le contenu de l'élément ne peut pas être converti en un entier signé de 32 bits.</exception>
      <exception cref="T:System.ArgumentNullException" vsli:raw="The method is called with &lt;see langword=&quot;null&quot; /&gt; arguments.">La méthode est appelée avec des arguments <see langword="null" />.</exception>
      <exception cref="T:System.ArgumentException" vsli:raw="The specified local name and namespace URI do not match that of the current element being read.">Le nom local et l'URI de l'espace de noms spécifiés ne correspondent pas à l'élément actuel lu.</exception>
      <returns vsli:raw="The element content as a 32-bit signed integer.">Contenu d'élément sous la forme d'un entier signé de 32 bits.</returns>
    </member>
    <member name="M:System.Xml.XmlReader.ReadElementContentAsLong">
      <summary vsli:raw="Reads the current element and returns the contents as a 64-bit signed integer.">Lit l’élément actuel et retourne le contenu comme un entier signé de 64 bits.</summary>
      <exception cref="T:System.InvalidOperationException" vsli:raw="The &lt;see cref=&quot;T:System.Xml.XmlReader&quot; /&gt; is not positioned on an element.&#xA;&#xA;-or-&#xA;&#xA;An &lt;see cref=&quot;T:System.Xml.XmlReader&quot; /&gt; method was called before a previous asynchronous operation finished. In this case, &lt;see cref=&quot;T:System.InvalidOperationException&quot; /&gt; is thrown with the message &quot;An asynchronous operation is already in progress.&quot;">
        <see cref="T:System.Xml.XmlReader" /> n'est pas placé sur un élément.

- ou - 
Une méthode <see cref="T:System.Xml.XmlReader" /> a été appelée avant la fin d’une opération asynchrone précédente. Dans ce cas, l’exception <see cref="T:System.InvalidOperationException" /> est levée avec le message « Une opération asynchrone est déjà en cours ».</exception>
      <exception cref="T:System.Xml.XmlException" vsli:raw="The current element contains child elements.&#xA;&#xA; -or-&#xA;&#xA; The element content cannot be converted to a 64-bit signed integer.">L'élément en cours contient des éléments enfants.  
  
 - ou -  
  
 Le contenu de l’élément ne peut pas être converti en entier signé de 64 bits.</exception>
      <exception cref="T:System.ArgumentNullException" vsli:raw="The method is called with &lt;see langword=&quot;null&quot; /&gt; arguments.">La méthode est appelée avec des arguments <see langword="null" />.</exception>
      <returns vsli:raw="The element content as a 64-bit signed integer.">Contenu d’élément sous la forme d’un entier signé de 64 bits.</returns>
    </member>
    <member name="M:System.Xml.XmlReader.ReadElementContentAsLong(System.String,System.String)">
      <summary vsli:raw="Checks that the specified local name and namespace URI matches that of the current element, then reads the current element and returns the contents as a 64-bit signed integer.">Vérifie que le nom local spécifié et l’URI de l’espace de noms correspondent à ceux de l’élément actuel, puis lit l’élément actuel et retourne le contenu en tant qu’entier signé de 64 bits.</summary>
      <param name="localName" vsli:raw="The local name of the element.">Le nom local de l'élément.</param>
      <param name="namespaceURI" vsli:raw="The namespace URI of the element.">L'URI de l'espace de noms de l'élément.</param>
      <exception cref="T:System.InvalidOperationException" vsli:raw="The &lt;see cref=&quot;T:System.Xml.XmlReader&quot; /&gt; is not positioned on an element.&#xA;&#xA;-or-&#xA;&#xA;An &lt;see cref=&quot;T:System.Xml.XmlReader&quot; /&gt; method was called before a previous asynchronous operation finished. In this case, &lt;see cref=&quot;T:System.InvalidOperationException&quot; /&gt; is thrown with the message &quot;An asynchronous operation is already in progress.&quot;">
        <see cref="T:System.Xml.XmlReader" /> n'est pas placé sur un élément.

- ou - 
Une méthode <see cref="T:System.Xml.XmlReader" /> a été appelée avant la fin d’une opération asynchrone précédente. Dans ce cas, l’exception <see cref="T:System.InvalidOperationException" /> est levée avec le message « Une opération asynchrone est déjà en cours ».</exception>
      <exception cref="T:System.Xml.XmlException" vsli:raw="The current element contains child elements.&#xA;&#xA; -or-&#xA;&#xA; The element content cannot be converted to a 64-bit signed integer.">L'élément en cours contient des éléments enfants.  
  
 - ou -  
  
 Le contenu de l’élément ne peut pas être converti en entier signé de 64 bits.</exception>
      <exception cref="T:System.ArgumentNullException" vsli:raw="The method is called with &lt;see langword=&quot;null&quot; /&gt; arguments.">La méthode est appelée avec des arguments <see langword="null" />.</exception>
      <exception cref="T:System.ArgumentException" vsli:raw="The specified local name and namespace URI do not match that of the current element being read.">Le nom local et l'URI de l'espace de noms spécifiés ne correspondent pas à l'élément actuel lu.</exception>
      <returns vsli:raw="The element content as a 64-bit signed integer.">Contenu d'élément sous la forme d'un entier signé de 64 bits.</returns>
    </member>
    <member name="M:System.Xml.XmlReader.ReadElementContentAsObject">
      <summary vsli:raw="Reads the current element and returns the contents as an &lt;see cref=&quot;T:System.Object&quot; /&gt;.">Lit l'élément actuel et retourne le contenu en tant que <see cref="T:System.Object" />.</summary>
      <exception cref="T:System.InvalidOperationException" vsli:raw="The &lt;see cref=&quot;T:System.Xml.XmlReader&quot; /&gt; is not positioned on an element.&#xA;&#xA;-or-&#xA;&#xA;An &lt;see cref=&quot;T:System.Xml.XmlReader&quot; /&gt; method was called before a previous asynchronous operation finished. In this case, &lt;see cref=&quot;T:System.InvalidOperationException&quot; /&gt; is thrown with the message &quot;An asynchronous operation is already in progress.&quot;">
        <see cref="T:System.Xml.XmlReader" /> n'est pas placé sur un élément.

- ou - 
Une méthode <see cref="T:System.Xml.XmlReader" /> a été appelée avant la fin d’une opération asynchrone précédente. Dans ce cas, l’exception <see cref="T:System.InvalidOperationException" /> est levée avec le message « Une opération asynchrone est déjà en cours ».</exception>
      <exception cref="T:System.Xml.XmlException" vsli:raw="The current element contains child elements.&#xA;&#xA; -or-&#xA;&#xA; The element content cannot be converted to the requested type">L'élément en cours contient des éléments enfants.  
  
 - ou -  
  
 Impossible de convertir le contenu de l'élément en type demandé</exception>
      <exception cref="T:System.ArgumentNullException" vsli:raw="The method is called with &lt;see langword=&quot;null&quot; /&gt; arguments.">La méthode est appelée avec des arguments <see langword="null" />.</exception>
      <returns vsli:raw="A boxed common language runtime (CLR) object of the most appropriate type. The &lt;see cref=&quot;P:System.Xml.XmlReader.ValueType&quot; /&gt; property determines the appropriate CLR type. If the content is typed as a list type, this method returns an array of boxed objects of the appropriate type.">Objet CLR boxed du type le plus approprié. La propriété <see cref="P:System.Xml.XmlReader.ValueType" /> détermine le type CLR approprié. Si le contenu est de type liste, cette méthode retourne un tableau d'objets boxed du type approprié.</returns>
    </member>
    <member name="M:System.Xml.XmlReader.ReadElementContentAsObject(System.String,System.String)">
      <summary vsli:raw="Checks that the specified local name and namespace URI matches that of the current element, then reads the current element and returns the contents as an &lt;see cref=&quot;T:System.Object&quot; /&gt;.">Vérifie que le nom local et l'URI de l'espace de noms spécifiés correspondent à ceux de l'élément actuel, puis lit l'élément actuel et retourne le contenu en tant qu'objet <see cref="T:System.Object" />.</summary>
      <param name="localName" vsli:raw="The local name of the element.">Le nom local de l'élément.</param>
      <param name="namespaceURI" vsli:raw="The namespace URI of the element.">L'URI de l'espace de noms de l'élément.</param>
      <exception cref="T:System.InvalidOperationException" vsli:raw="The &lt;see cref=&quot;T:System.Xml.XmlReader&quot; /&gt; is not positioned on an element.&#xA;&#xA;-or-&#xA;&#xA;An &lt;see cref=&quot;T:System.Xml.XmlReader&quot; /&gt; method was called before a previous asynchronous operation finished. In this case, &lt;see cref=&quot;T:System.InvalidOperationException&quot; /&gt; is thrown with the message &quot;An asynchronous operation is already in progress.&quot;">
        <see cref="T:System.Xml.XmlReader" /> n'est pas placé sur un élément.

- ou - 
Une méthode <see cref="T:System.Xml.XmlReader" /> a été appelée avant la fin d’une opération asynchrone précédente. Dans ce cas, l’exception <see cref="T:System.InvalidOperationException" /> est levée avec le message « Une opération asynchrone est déjà en cours ».</exception>
      <exception cref="T:System.Xml.XmlException" vsli:raw="The current element contains child elements.&#xA;&#xA; -or-&#xA;&#xA; The element content cannot be converted to the requested type.">L'élément en cours contient des éléments enfants.  
  
 - ou -  
  
 Impossible de convertir le contenu de l'élément en type demandé.</exception>
      <exception cref="T:System.ArgumentNullException" vsli:raw="The method is called with &lt;see langword=&quot;null&quot; /&gt; arguments.">La méthode est appelée avec des arguments <see langword="null" />.</exception>
      <exception cref="T:System.ArgumentException" vsli:raw="The specified local name and namespace URI do not match that of the current element being read.">Le nom local et l'URI de l'espace de noms spécifiés ne correspondent pas à l'élément actuel lu.</exception>
      <returns vsli:raw="A boxed common language runtime (CLR) object of the most appropriate type. The &lt;see cref=&quot;P:System.Xml.XmlReader.ValueType&quot; /&gt; property determines the appropriate CLR type. If the content is typed as a list type, this method returns an array of boxed objects of the appropriate type.">Objet CLR boxed du type le plus approprié. La propriété <see cref="P:System.Xml.XmlReader.ValueType" /> détermine le type CLR approprié. Si le contenu est de type liste, cette méthode retourne un tableau d'objets boxed du type approprié.</returns>
    </member>
    <member name="M:System.Xml.XmlReader.ReadElementContentAsObjectAsync">
      <summary vsli:raw="Asynchronously reads the current element and returns the contents as an &lt;see cref=&quot;T:System.Object&quot; /&gt;.">Lit de façon asynchrone l'élément actuel et retourne le contenu en tant que <see cref="T:System.Object" />.</summary>
      <exception cref="T:System.InvalidOperationException" vsli:raw="An &lt;see cref=&quot;T:System.Xml.XmlReader&quot; /&gt; method was called before a previous asynchronous operation finished. In this case, &lt;see cref=&quot;T:System.InvalidOperationException&quot; /&gt; is thrown with the message &quot;An asynchronous operation is already in progress.&quot;&#xA;&#xA;-or-&#xA;&#xA;An &lt;see cref=&quot;T:System.Xml.XmlReader&quot; /&gt; asynchronous method was called without setting the &lt;see cref=&quot;P:System.Xml.XmlReaderSettings.Async&quot; /&gt; flag to &lt;see langword=&quot;true&quot; /&gt;. In this case, &lt;see cref=&quot;T:System.InvalidOperationException&quot; /&gt; is thrown with the message &quot;Set XmlReaderSettings.Async to true if you want to use Async Methods.&quot;">Une méthode <see cref="T:System.Xml.XmlReader" /> a été appelée avant la fin d’une opération asynchrone précédente. Dans ce cas, l’exception <see cref="T:System.InvalidOperationException" /> est levée avec le message « Une opération asynchrone est déjà en cours ».

- ou -

Une méthode asynchrone <see cref="T:System.Xml.XmlReader" /> a été appelée sans définir l’indicateur <see cref="P:System.Xml.XmlReaderSettings.Async" /> sur <see langword="true" />. Dans ce cas, l’exception <see cref="T:System.InvalidOperationException" /> est levée avec le message « Attribuez à XmlReaderSettings.Async la valeur True si vous voulez utiliser des méthodes asynchrones ».</exception>
      <returns vsli:raw="A boxed common language runtime (CLR) object of the most appropriate type. The &lt;see cref=&quot;P:System.Xml.XmlReader.ValueType&quot; /&gt; property determines the appropriate CLR type. If the content is typed as a list type, this method returns an array of boxed objects of the appropriate type.">Objet CLR boxed du type le plus approprié. La propriété <see cref="P:System.Xml.XmlReader.ValueType" /> détermine le type CLR approprié. Si le contenu est de type liste, cette méthode retourne un tableau d'objets boxed du type approprié.</returns>
    </member>
    <member name="M:System.Xml.XmlReader.ReadElementContentAsString">
      <summary vsli:raw="Reads the current element and returns the contents as a &lt;see cref=&quot;T:System.String&quot; /&gt; object.">Lit l'élément actuel et retourne le contenu en tant qu'objet <see cref="T:System.String" />.</summary>
      <exception cref="T:System.InvalidOperationException" vsli:raw="The &lt;see cref=&quot;T:System.Xml.XmlReader&quot; /&gt; is not positioned on an element.&#xA;&#xA;-or-&#xA;&#xA;An &lt;see cref=&quot;T:System.Xml.XmlReader&quot; /&gt; method was called before a previous asynchronous operation finished. In this case, &lt;see cref=&quot;T:System.InvalidOperationException&quot; /&gt; is thrown with the message &quot;An asynchronous operation is already in progress.&quot;">
        <see cref="T:System.Xml.XmlReader" /> n'est pas placé sur un élément.

- ou -

Une méthode <see cref="T:System.Xml.XmlReader" /> a été appelée avant la fin d’une opération asynchrone précédente. Dans ce cas, l’exception <see cref="T:System.InvalidOperationException" /> est levée avec le message « Une opération asynchrone est déjà en cours ».</exception>
      <exception cref="T:System.Xml.XmlException" vsli:raw="The current element contains child elements.&#xA;&#xA; -or-&#xA;&#xA; The element content cannot be converted to a &lt;see cref=&quot;T:System.String&quot; /&gt; object.">L'élément en cours contient des éléments enfants.  
  
- ou - 
Le contenu de l'élément ne peut pas être converti en objet <see cref="T:System.String" />.</exception>
      <exception cref="T:System.ArgumentNullException" vsli:raw="The method is called with &lt;see langword=&quot;null&quot; /&gt; arguments.">La méthode est appelée avec des arguments <see langword="null" />.</exception>
      <returns vsli:raw="The element content as a &lt;see cref=&quot;T:System.String&quot; /&gt; object.">Contenu de l'élément sous la forme d'un objet <see cref="T:System.String" />.</returns>
    </member>
    <member name="M:System.Xml.XmlReader.ReadElementContentAsString(System.String,System.String)">
      <summary vsli:raw="Checks that the specified local name and namespace URI matches that of the current element, then reads the current element and returns the contents as a &lt;see cref=&quot;T:System.String&quot; /&gt; object.">Vérifie que le nom local spécifié et l'URI de l'espace de noms correspondent à ceux de l'élément actuel, puis lit l'élément actuel et retourne le contenu en tant qu'objet <see cref="T:System.String" />.</summary>
      <param name="localName" vsli:raw="The local name of the element.">Le nom local de l'élément.</param>
      <param name="namespaceURI" vsli:raw="The namespace URI of the element.">L'URI de l'espace de noms de l'élément.</param>
      <exception cref="T:System.InvalidOperationException" vsli:raw="The &lt;see cref=&quot;T:System.Xml.XmlReader&quot; /&gt; is not positioned on an element.&#xA;&#xA;-or-&#xA;&#xA;An &lt;see cref=&quot;T:System.Xml.XmlReader&quot; /&gt; method was called before a previous asynchronous operation finished. In this case, &lt;see cref=&quot;T:System.InvalidOperationException&quot; /&gt; is thrown with the message &quot;An asynchronous operation is already in progress.&quot;">
        <see cref="T:System.Xml.XmlReader" /> n'est pas placé sur un élément.

- ou -

Une méthode <see cref="T:System.Xml.XmlReader" /> a été appelée avant la fin d’une opération asynchrone précédente. Dans ce cas, l’exception <see cref="T:System.InvalidOperationException" /> est levée avec le message « Une opération asynchrone est déjà en cours ».</exception>
      <exception cref="T:System.Xml.XmlException" vsli:raw="The current element contains child elements.&#xA;&#xA; -or-&#xA;&#xA; The element content cannot be converted to a &lt;see cref=&quot;T:System.String&quot; /&gt; object.">L'élément en cours contient des éléments enfants.  
  
- ou - 
Le contenu de l'élément ne peut pas être converti en objet <see cref="T:System.String" />.</exception>
      <exception cref="T:System.ArgumentNullException" vsli:raw="The method is called with &lt;see langword=&quot;null&quot; /&gt; arguments.">La méthode est appelée avec des arguments <see langword="null" />.</exception>
      <exception cref="T:System.ArgumentException" vsli:raw="The specified local name and namespace URI do not match that of the current element being read.">Le nom local et l'URI de l'espace de noms spécifiés ne correspondent pas à l'élément actuel lu.</exception>
      <returns vsli:raw="The element content as a &lt;see cref=&quot;T:System.String&quot; /&gt; object.">Contenu de l'élément sous la forme d'un objet <see cref="T:System.String" />.</returns>
    </member>
    <member name="M:System.Xml.XmlReader.ReadElementContentAsStringAsync">
      <summary vsli:raw="Asynchronously reads the current element and returns the contents as a &lt;see cref=&quot;T:System.String&quot; /&gt; object.">Lit de façon asynchrone l'élément actuel et retourne le contenu en tant qu'objet <see cref="T:System.String" />.</summary>
      <exception cref="T:System.InvalidOperationException" vsli:raw="An &lt;see cref=&quot;T:System.Xml.XmlReader&quot; /&gt; asynchronous method was called without setting the &lt;see cref=&quot;P:System.Xml.XmlReaderSettings.Async&quot; /&gt; flag to &lt;see langword=&quot;true&quot; /&gt;. In this case, &lt;see cref=&quot;T:System.InvalidOperationException&quot; /&gt; is thrown with the message &quot;Set XmlReaderSettings.Async to true if you want to use Async Methods.&quot;">Une méthode asynchrone <see cref="T:System.Xml.XmlReader" /> a été appelée sans définir l’indicateur <see cref="P:System.Xml.XmlReaderSettings.Async" /> sur <see langword="true" />. Dans ce cas, l’exception <see cref="T:System.InvalidOperationException" /> est levée avec le message « Attribuez à XmlReaderSettings.Async la valeur True si vous voulez utiliser des méthodes asynchrones ».</exception>
      <returns vsli:raw="The element content as a &lt;see cref=&quot;T:System.String&quot; /&gt; object.">Contenu de l'élément sous la forme d'un objet <see cref="T:System.String" />.</returns>
    </member>
    <member name="M:System.Xml.XmlReader.ReadElementString">
      <summary vsli:raw="Reads a text-only element. However, we recommend that you use the &lt;see cref=&quot;M:System.Xml.XmlReader.ReadElementContentAsString&quot; /&gt; method instead, because it provides a more straightforward way to handle this operation.">Lit un élément texte uniquement. Toutefois, nous vous recommandons d’utiliser plutôt la méthode <see cref="M:System.Xml.XmlReader.ReadElementContentAsString" />, car elle permet de gérer cette opération de façon plus directe.</summary>
      <exception cref="T:System.Xml.XmlException" vsli:raw="The next content node is not a start tag; or the element found does not contain a simple text value.">Le nœud de contenu suivant n'est pas une balise de début ; ou l'élément trouvé ne contient pas de valeur texte brut.</exception>
      <exception cref="T:System.InvalidOperationException" vsli:raw="An &lt;see cref=&quot;T:System.Xml.XmlReader&quot; /&gt; method was called before a previous asynchronous operation finished. In this case, &lt;see cref=&quot;T:System.InvalidOperationException&quot; /&gt; is thrown with the message &quot;An asynchronous operation is already in progress.&quot;">Une méthode <see cref="T:System.Xml.XmlReader" /> a été appelée avant la fin d’une opération asynchrone précédente. Dans ce cas, l’exception <see cref="T:System.InvalidOperationException" /> est levée avec le message « Une opération asynchrone est déjà en cours ».</exception>
      <returns vsli:raw="The text contained in the element that was read. An empty string if the element is empty.">Le texte contenu dans l'élément lu. Une chaîne vide si l’élément est vide.</returns>
    </member>
    <member name="M:System.Xml.XmlReader.ReadElementString(System.String)">
      <summary vsli:raw="Checks that the &lt;see cref=&quot;P:System.Xml.XmlReader.Name&quot; /&gt; property of the element found matches the given string before reading a text-only element. However, we recommend that you use the &lt;see cref=&quot;M:System.Xml.XmlReader.ReadElementContentAsString&quot; /&gt; method instead, because it provides a more straightforward way to handle this operation.">Vérifie que la propriété <see cref="P:System.Xml.XmlReader.Name" /> de l'élément trouvé correspond à la chaîne spécifiée avant de lire un élément de texte brut. Toutefois, nous vous recommandons d’utiliser plutôt la méthode <see cref="M:System.Xml.XmlReader.ReadElementContentAsString" />, car elle permet de gérer cette opération de façon plus directe.</summary>
      <param name="name" vsli:raw="The name to check.">Nom à vérifier.</param>
      <exception cref="T:System.Xml.XmlException" vsli:raw="If the next content node is not a start tag; if the element &lt;see langword=&quot;Name&quot; /&gt; does not match the given argument; or if the element found does not contain a simple text value.">Si le nœud de contenu suivant n'est pas une balise de début ; si l'élément <see langword="Name" /> ne correspond pas à l'argument spécifié ; ou si l'élément trouvé ne contient pas de valeur texte brut.</exception>
      <exception cref="T:System.InvalidOperationException" vsli:raw="An &lt;see cref=&quot;T:System.Xml.XmlReader&quot; /&gt; method was called before a previous asynchronous operation finished. In this case, &lt;see cref=&quot;T:System.InvalidOperationException&quot; /&gt; is thrown with the message &quot;An asynchronous operation is already in progress.&quot;">Une méthode <see cref="T:System.Xml.XmlReader" /> a été appelée avant la fin d’une opération asynchrone précédente. Dans ce cas, l’exception <see cref="T:System.InvalidOperationException" /> est levée avec le message « Une opération asynchrone est déjà en cours ».</exception>
      <returns vsli:raw="The text contained in the element that was read. An empty string if the element is empty.">Le texte contenu dans l'élément lu. Une chaîne vide si l’élément est vide.</returns>
    </member>
    <member name="M:System.Xml.XmlReader.ReadElementString(System.String,System.String)">
      <summary vsli:raw="Checks that the &lt;see cref=&quot;P:System.Xml.XmlReader.LocalName&quot; /&gt; and &lt;see cref=&quot;P:System.Xml.XmlReader.NamespaceURI&quot; /&gt; properties of the element found matches the given strings before reading a text-only element. However, we recommend that you use the &lt;see cref=&quot;M:System.Xml.XmlReader.ReadElementContentAsString(System.String,System.String)&quot; /&gt; method instead, because it provides a more straightforward way to handle this operation.">Vérifie que les propriétés <see cref="P:System.Xml.XmlReader.LocalName" /> et <see cref="P:System.Xml.XmlReader.NamespaceURI" /> de l'élément trouvé correspondent aux chaînes spécifiées avant de lire un élément de texte brut. Toutefois, nous vous recommandons d’utiliser plutôt la méthode <see cref="M:System.Xml.XmlReader.ReadElementContentAsString(System.String,System.String)" />, car elle permet de gérer cette opération de façon plus directe.</summary>
      <param name="localname" vsli:raw="The local name to check.">Nom local à vérifier.</param>
      <param name="ns" vsli:raw="The namespace URI to check.">URI de l'espace de noms à vérifier.</param>
      <exception cref="T:System.Xml.XmlException" vsli:raw="If the next content node is not a start tag; if the element &lt;see langword=&quot;LocalName&quot; /&gt; or &lt;see langword=&quot;NamespaceURI&quot; /&gt; do not match the given arguments; or if the element found does not contain a simple text value.">Si le nœud de contenu suivant n'est pas une balise de début ; si les éléments <see langword="LocalName" /> ou <see langword="NamespaceURI" /> ne correspondent pas aux arguments spécifiés ; ou si l'élément trouvé ne contient pas de valeur texte brut.</exception>
      <exception cref="T:System.InvalidOperationException" vsli:raw="An &lt;see cref=&quot;T:System.Xml.XmlReader&quot; /&gt; method was called before a previous asynchronous operation finished. In this case, &lt;see cref=&quot;T:System.InvalidOperationException&quot; /&gt; is thrown with the message &quot;An asynchronous operation is already in progress.&quot;">Une méthode <see cref="T:System.Xml.XmlReader" /> a été appelée avant la fin d’une opération asynchrone précédente. Dans ce cas, l’exception <see cref="T:System.InvalidOperationException" /> est levée avec le message « Une opération asynchrone est déjà en cours ».</exception>
      <returns vsli:raw="The text contained in the element that was read. An empty string if the element is empty.">Le texte contenu dans l'élément lu. Une chaîne vide si l’élément est vide.</returns>
    </member>
    <member name="M:System.Xml.XmlReader.ReadEndElement">
      <summary vsli:raw="Checks that the current content node is an end tag and advances the reader to the next node.">Vérifie que le nœud de contenu actuel est une étiquette de fin et avance le lecteur jusqu’au nœud suivant.</summary>
      <exception cref="T:System.Xml.XmlException" vsli:raw="The current node is not an end tag or if incorrect XML is encountered in the input stream.">Le nœud actuel n'est pas une balise de fin ou un code XML incorrect est trouvé dans le flux d'entrée.</exception>
      <exception cref="T:System.InvalidOperationException" vsli:raw="An &lt;see cref=&quot;T:System.Xml.XmlReader&quot; /&gt; method was called before a previous asynchronous operation finished. In this case, &lt;see cref=&quot;T:System.InvalidOperationException&quot; /&gt; is thrown with the message &quot;An asynchronous operation is already in progress.&quot;">Une méthode <see cref="T:System.Xml.XmlReader" /> a été appelée avant la fin d’une opération asynchrone précédente. Dans ce cas, l’exception <see cref="T:System.InvalidOperationException" /> est levée avec le message « Une opération asynchrone est déjà en cours ».</exception>
    </member>
    <member name="M:System.Xml.XmlReader.ReadInnerXml">
      <summary vsli:raw="When overridden in a derived class, reads all the content, including markup, as a string.">En cas de substitution dans une classe dérivée, lit tout le contenu, y compris le balisage, sous forme de chaîne.</summary>
      <exception cref="T:System.Xml.XmlException" vsli:raw="The XML was not well-formed, or an error occurred while parsing the XML.">XML était incorrect ou une erreur s'est produite lors de l'analyse XML.</exception>
      <exception cref="T:System.InvalidOperationException" vsli:raw="An &lt;see cref=&quot;T:System.Xml.XmlReader&quot; /&gt; method was called before a previous asynchronous operation finished. In this case, &lt;see cref=&quot;T:System.InvalidOperationException&quot; /&gt; is thrown with the message &quot;An asynchronous operation is already in progress.&quot;">Une méthode <see cref="T:System.Xml.XmlReader" /> a été appelée avant la fin d’une opération asynchrone précédente. Dans ce cas, l’exception <see cref="T:System.InvalidOperationException" /> est levée avec le message « Une opération asynchrone est déjà en cours ».</exception>
      <returns vsli:raw="All the XML content, including markup, in the current node. If the current node has no children, an empty string is returned.&#xA;&#xA; If the current node is neither an element nor attribute, an empty string is returned.">Tout le contenu XML, y compris le balisage, du nœud actuel. Si le nœud actuel n'a pas d'enfants, une chaîne vide est retournée.  
  
 Si le nœud actuel n'est ni un élément ni un attribut, une chaîne vide est retournée.</returns>
    </member>
    <member name="M:System.Xml.XmlReader.ReadInnerXmlAsync">
      <summary vsli:raw="Asynchronously reads all the content, including markup, as a string.">Lit de façon asynchrone tout le contenu, notamment le balisage, en tant que chaîne.</summary>
      <exception cref="T:System.InvalidOperationException" vsli:raw="An &lt;see cref=&quot;T:System.Xml.XmlReader&quot; /&gt; method was called before a previous asynchronous operation finished. In this case, &lt;see cref=&quot;T:System.InvalidOperationException&quot; /&gt; is thrown with the message &quot;An asynchronous operation is already in progress.&quot;&#xA;&#xA;-or-&#xA;&#xA;An &lt;see cref=&quot;T:System.Xml.XmlReader&quot; /&gt; asynchronous method was called without setting the &lt;see cref=&quot;P:System.Xml.XmlReaderSettings.Async&quot; /&gt; flag to &lt;see langword=&quot;true&quot; /&gt;. In this case, &lt;see cref=&quot;T:System.InvalidOperationException&quot; /&gt; is thrown with the message &quot;Set XmlReaderSettings.Async to true if you want to use Async Methods.&quot;">Une méthode <see cref="T:System.Xml.XmlReader" /> a été appelée avant la fin d’une opération asynchrone précédente. Dans ce cas, l’exception <see cref="T:System.InvalidOperationException" /> est levée avec le message « Une opération asynchrone est déjà en cours ».

- ou -

Une méthode asynchrone <see cref="T:System.Xml.XmlReader" /> a été appelée sans définir l’indicateur <see cref="P:System.Xml.XmlReaderSettings.Async" /> sur <see langword="true" />. Dans ce cas, l’exception <see cref="T:System.InvalidOperationException" /> est levée avec le message « Attribuez à XmlReaderSettings.Async la valeur True si vous voulez utiliser des méthodes asynchrones ».</exception>
      <returns vsli:raw="All the XML content, including markup, in the current node. If the current node has no children, an empty string is returned.">Tout le contenu XML, y compris le balisage, du nœud actuel. Si le nœud actuel n'a pas d'enfants, une chaîne vide est retournée.</returns>
    </member>
    <member name="M:System.Xml.XmlReader.ReadOuterXml">
      <summary vsli:raw="When overridden in a derived class, reads the content, including markup, representing this node and all its children.">En cas de substitution dans une classe dérivée, lit le contenu, y compris le balisage, représentant ce nœud et tous ses enfants.</summary>
      <exception cref="T:System.Xml.XmlException" vsli:raw="The XML was not well-formed, or an error occurred while parsing the XML.">XML était incorrect ou une erreur s'est produite lors de l'analyse XML.</exception>
      <exception cref="T:System.InvalidOperationException" vsli:raw="An &lt;see cref=&quot;T:System.Xml.XmlReader&quot; /&gt; method was called before a previous asynchronous operation finished. In this case, &lt;see cref=&quot;T:System.InvalidOperationException&quot; /&gt; is thrown with the message &quot;An asynchronous operation is already in progress.&quot;">Une méthode <see cref="T:System.Xml.XmlReader" /> a été appelée avant la fin d’une opération asynchrone précédente. Dans ce cas, l’exception <see cref="T:System.InvalidOperationException" /> est levée avec le message « Une opération asynchrone est déjà en cours ».</exception>
      <returns vsli:raw="If the reader is positioned on an element or an attribute node, this method returns all the XML content, including markup, of the current node and all its children; otherwise, it returns an empty string.">Si le lecteur est placé sur un nœud d'élément ou d'attribut, cette méthode retourne tout le contenu XML, y compris le balisage, du nœud actuel et de tous ses enfants ; sinon, elle retourne une chaîne vide.</returns>
    </member>
    <member name="M:System.Xml.XmlReader.ReadOuterXmlAsync">
      <summary vsli:raw="Asynchronously reads the content, including markup, representing this node and all its children.">Lit de façon asynchrone le contenu, notamment le balisage, qui représente ce nœud et tous ses enfants.</summary>
      <exception cref="T:System.InvalidOperationException" vsli:raw="An &lt;see cref=&quot;T:System.Xml.XmlReader&quot; /&gt; asynchronous method was called without setting the &lt;see cref=&quot;P:System.Xml.XmlReaderSettings.Async&quot; /&gt; flag to &lt;see langword=&quot;true&quot; /&gt;. In this case, &lt;see cref=&quot;T:System.InvalidOperationException&quot; /&gt; is thrown with the message &quot;Set XmlReaderSettings.Async to true if you want to use Async Methods.&quot;">Une méthode asynchrone <see cref="T:System.Xml.XmlReader" /> a été appelée sans définir l’indicateur <see cref="P:System.Xml.XmlReaderSettings.Async" /> sur <see langword="true" />. Dans ce cas, l’exception <see cref="T:System.InvalidOperationException" /> est levée avec le message « Attribuez à XmlReaderSettings.Async la valeur True si vous voulez utiliser des méthodes asynchrones ».</exception>
      <returns vsli:raw="If the reader is positioned on an element or an attribute node, this method returns all the XML content, including markup, of the current node and all its children; otherwise, it returns an empty string.">Si le lecteur est placé sur un nœud d'élément ou d'attribut, cette méthode retourne tout le contenu XML, y compris le balisage, du nœud actuel et de tous ses enfants ; sinon, elle retourne une chaîne vide.</returns>
    </member>
    <member name="M:System.Xml.XmlReader.ReadStartElement">
      <summary vsli:raw="Checks that the current node is an element and advances the reader to the next node.">Vérifie que le nœud actuel est un élément et avance le lecteur jusqu'au nœud suivant.</summary>
      <exception cref="T:System.Xml.XmlException" vsli:raw="Incorrect XML was encountered in the input stream.">Code XML incorrect dans le flux d'entrée.</exception>
      <exception cref="T:System.InvalidOperationException" vsli:raw="An &lt;see cref=&quot;T:System.Xml.XmlReader&quot; /&gt; method was called before a previous asynchronous operation finished. In this case, &lt;see cref=&quot;T:System.InvalidOperationException&quot; /&gt; is thrown with the message &quot;An asynchronous operation is already in progress.&quot;">Une méthode <see cref="T:System.Xml.XmlReader" /> a été appelée avant la fin d’une opération asynchrone précédente. Dans ce cas, l’exception <see cref="T:System.InvalidOperationException" /> est levée avec le message « Une opération asynchrone est déjà en cours ».</exception>
    </member>
    <member name="M:System.Xml.XmlReader.ReadStartElement(System.String)">
      <summary vsli:raw="Checks that the current content node is an element with the given &lt;see cref=&quot;P:System.Xml.XmlReader.Name&quot; /&gt; and advances the reader to the next node.">Vérifie que le nœud de contenu actuel est un élément avec le <see cref="P:System.Xml.XmlReader.Name" /> spécifié, puis avance le lecteur jusqu'au nœud suivant.</summary>
      <param name="name" vsli:raw="The qualified name of the element.">Nom qualifié de l'élément.</param>
      <exception cref="T:System.Xml.XmlException" vsli:raw="Incorrect XML was encountered in the input stream.&#xA;&#xA; -or-&#xA;&#xA; The &lt;see cref=&quot;P:System.Xml.XmlReader.Name&quot; /&gt; of the element does not match the given &lt;paramref name=&quot;name&quot; /&gt;.">Code XML incorrect dans le flux d'entrée.  
  
- ou - 
Le <see cref="P:System.Xml.XmlReader.Name" /> de l'élément ne correspond pas au <paramref name="name" /> donné.</exception>
      <exception cref="T:System.InvalidOperationException" vsli:raw="An &lt;see cref=&quot;T:System.Xml.XmlReader&quot; /&gt; method was called before a previous asynchronous operation finished. In this case, &lt;see cref=&quot;T:System.InvalidOperationException&quot; /&gt; is thrown with the message &quot;An asynchronous operation is already in progress.&quot;">Une méthode <see cref="T:System.Xml.XmlReader" /> a été appelée avant la fin d’une opération asynchrone précédente. Dans ce cas, l’exception <see cref="T:System.InvalidOperationException" /> est levée avec le message « Une opération asynchrone est déjà en cours ».</exception>
    </member>
    <member name="M:System.Xml.XmlReader.ReadStartElement(System.String,System.String)">
      <summary vsli:raw="Checks that the current content node is an element with the given &lt;see cref=&quot;P:System.Xml.XmlReader.LocalName&quot; /&gt; and &lt;see cref=&quot;P:System.Xml.XmlReader.NamespaceURI&quot; /&gt; and advances the reader to the next node.">Vérifie que le nœud de contenu actuel est un élément avec le <see cref="P:System.Xml.XmlReader.LocalName" /> et le <see cref="P:System.Xml.XmlReader.NamespaceURI" /> spécifiés, puis avance le lecteur jusqu'au nœud suivant.</summary>
      <param name="localname" vsli:raw="The local name of the element.">Le nom local de l'élément.</param>
      <param name="ns" vsli:raw="The namespace URI of the element.">L'URI de l'espace de noms de l'élément.</param>
      <exception cref="T:System.Xml.XmlException" vsli:raw="Incorrect XML was encountered in the input stream.&#xA;&#xA; -or-&#xA;&#xA; The &lt;see cref=&quot;P:System.Xml.XmlReader.LocalName&quot; /&gt; and &lt;see cref=&quot;P:System.Xml.XmlReader.NamespaceURI&quot; /&gt; properties of the element found do not match the given arguments.">Code XML incorrect dans le flux d'entrée.  
  
- ou - 
Les propriétés <see cref="P:System.Xml.XmlReader.LocalName" /> et <see cref="P:System.Xml.XmlReader.NamespaceURI" /> de l'élément trouvé ne correspondent pas aux arguments spécifiés.</exception>
      <exception cref="T:System.InvalidOperationException" vsli:raw="An &lt;see cref=&quot;T:System.Xml.XmlReader&quot; /&gt; method was called before a previous asynchronous operation finished. In this case, &lt;see cref=&quot;T:System.InvalidOperationException&quot; /&gt; is thrown with the message &quot;An asynchronous operation is already in progress.&quot;">Une méthode <see cref="T:System.Xml.XmlReader" /> a été appelée avant la fin d’une opération asynchrone précédente. Dans ce cas, l’exception <see cref="T:System.InvalidOperationException" /> est levée avec le message « Une opération asynchrone est déjà en cours ».</exception>
    </member>
    <member name="M:System.Xml.XmlReader.ReadString">
      <summary vsli:raw="When overridden in a derived class, reads the contents of an element or text node as a string. However, we recommend that you use the &lt;see cref=&quot;Overload:System.Xml.XmlReader.ReadElementContentAsString&quot; /&gt; method instead, because it provides a more straightforward way to handle this operation.">En cas de substitution dans une classe dérivée, lit le contenu d'un nœud d'élément ou de texte sous forme de chaîne. Toutefois, nous vous recommandons d’utiliser plutôt la méthode <see cref="Overload:System.Xml.XmlReader.ReadElementContentAsString" />, car elle permet de gérer cette opération de façon plus directe.</summary>
      <exception cref="T:System.Xml.XmlException" vsli:raw="An error occurred while parsing the XML.">Une erreur s’est produite lors de l’analyse du XML.</exception>
      <exception cref="T:System.InvalidOperationException" vsli:raw="An &lt;see cref=&quot;T:System.Xml.XmlReader&quot; /&gt; method was called before a previous asynchronous operation finished. In this case, &lt;see cref=&quot;T:System.InvalidOperationException&quot; /&gt; is thrown with the message &quot;An asynchronous operation is already in progress.&quot;">Une méthode <see cref="T:System.Xml.XmlReader" /> a été appelée avant la fin d’une opération asynchrone précédente. Dans ce cas, l’exception <see cref="T:System.InvalidOperationException" /> est levée avec le message « Une opération asynchrone est déjà en cours ».</exception>
      <returns vsli:raw="The contents of the element or an empty string.">Contenu de l'élément ou chaîne vide.</returns>
    </member>
    <member name="M:System.Xml.XmlReader.ReadSubtree">
      <summary vsli:raw="Returns a new &lt;see langword=&quot;XmlReader&quot; /&gt; instance that can be used to read the current node, and all its descendants.">Retourne une nouvelle instance de <see langword="XmlReader" /> qui permet de lire le nœud actuel, ainsi que tous ses descendants.</summary>
      <exception cref="T:System.InvalidOperationException" vsli:raw="The XML reader isn't positioned on an element when this method is called.&#xA;&#xA;-or-&#xA;&#xA;An &lt;see cref=&quot;T:System.Xml.XmlReader&quot; /&gt; method was called before a previous asynchronous operation finished. In this case, &lt;see cref=&quot;T:System.InvalidOperationException&quot; /&gt; is thrown with the message &quot;An asynchronous operation is already in progress.&quot;">Le lecteur XML n’est pas placé sur un élément quand cette méthode est appelée.

- ou -

Une méthode <see cref="T:System.Xml.XmlReader" /> a été appelée avant la fin d’une opération asynchrone précédente. Dans ce cas, l’exception <see cref="T:System.InvalidOperationException" /> est levée avec le message « Une opération asynchrone est déjà en cours ».</exception>
      <returns vsli:raw="A new XML reader instance set to &lt;see cref=&quot;F:System.Xml.ReadState.Initial&quot; /&gt;. Calling the &lt;see cref=&quot;M:System.Xml.XmlReader.Read&quot; /&gt; method positions the new reader on the node that was current before the call to the &lt;see cref=&quot;M:System.Xml.XmlReader.ReadSubtree&quot; /&gt; method.">Nouvelle instance du lecteur XML définie sur <see cref="F:System.Xml.ReadState.Initial" />. L’appel de la méthode <see cref="M:System.Xml.XmlReader.Read" /> place le nouveau lecteur sur le nœud qui était actuel avant l’appel à la méthode <see cref="M:System.Xml.XmlReader.ReadSubtree" />.</returns>
    </member>
    <member name="M:System.Xml.XmlReader.ReadToDescendant(System.String)">
      <summary vsli:raw="Advances the &lt;see cref=&quot;T:System.Xml.XmlReader&quot; /&gt; to the next descendant element with the specified qualified name.">Avance le <see cref="T:System.Xml.XmlReader" /> vers l'élément descendant suivant portant le nom qualifié spécifié.</summary>
      <param name="name" vsli:raw="The qualified name of the element you wish to move to.">Nom qualifié de l'élément vers lequel se déplacer.</param>
      <exception cref="T:System.InvalidOperationException" vsli:raw="An &lt;see cref=&quot;T:System.Xml.XmlReader&quot; /&gt; method was called before a previous asynchronous operation finished. In this case, &lt;see cref=&quot;T:System.InvalidOperationException&quot; /&gt; is thrown with the message &quot;An asynchronous operation is already in progress.&quot;">Une méthode <see cref="T:System.Xml.XmlReader" /> a été appelée avant la fin d’une opération asynchrone précédente. Dans ce cas, l’exception <see cref="T:System.InvalidOperationException" /> est levée avec le message « Une opération asynchrone est déjà en cours ».</exception>
      <exception cref="T:System.ArgumentException" vsli:raw="The parameter is an empty string.">Le paramètre est une chaîne vide.</exception>
      <returns vsli:raw="&lt;see langword=&quot;true&quot; /&gt; if a matching descendant element is found; otherwise &lt;see langword=&quot;false&quot; /&gt;. If a matching descendant element is not found, the &lt;see cref=&quot;T:System.Xml.XmlReader&quot; /&gt; is positioned on the end tag (&lt;see cref=&quot;P:System.Xml.XmlReader.NodeType&quot; /&gt; is &lt;see langword=&quot;XmlNodeType.EndElement&quot; /&gt;) of the element.&#xA;&#xA; If the &lt;see cref=&quot;T:System.Xml.XmlReader&quot; /&gt; is not positioned on an element when &lt;see cref=&quot;M:System.Xml.XmlReader.ReadToDescendant(System.String)&quot; /&gt; was called, this method returns &lt;see langword=&quot;false&quot; /&gt; and the position of the &lt;see cref=&quot;T:System.Xml.XmlReader&quot; /&gt; is not changed.">
        <see langword="true" /> si un élément descendant correspondant est trouvé ; sinon, <see langword="false" />. Si aucun élément enfant correspondant n'est trouvé, le <see cref="T:System.Xml.XmlReader" /> est placé sur la balise de fin (<see cref="P:System.Xml.XmlReader.NodeType" /> est <see langword="XmlNodeType.EndElement" />) de l'élément.  
  
Si <see cref="T:System.Xml.XmlReader" /> n'est pas placé sur un élément lorsque <see cref="M:System.Xml.XmlReader.ReadToDescendant(System.String)" /> est appelé, cette méthode retourne <see langword="false" /> et la position de <see cref="T:System.Xml.XmlReader" /> ne change pas.</returns>
    </member>
    <member name="M:System.Xml.XmlReader.ReadToDescendant(System.String,System.String)">
      <summary vsli:raw="Advances the &lt;see cref=&quot;T:System.Xml.XmlReader&quot; /&gt; to the next descendant element with the specified local name and namespace URI.">Avance <see cref="T:System.Xml.XmlReader" /> vers le nœud descendant suivant doté du nom local et de l'URI de l'espace de noms spécifiés.</summary>
      <param name="localName" vsli:raw="The local name of the element you wish to move to.">Nom local de l'élément vers lequel se déplacer.</param>
      <param name="namespaceURI" vsli:raw="The namespace URI of the element you wish to move to.">URI de l'espace de noms de l'élément vers lequel se déplacer.</param>
      <exception cref="T:System.InvalidOperationException" vsli:raw="An &lt;see cref=&quot;T:System.Xml.XmlReader&quot; /&gt; method was called before a previous asynchronous operation finished. In this case, &lt;see cref=&quot;T:System.InvalidOperationException&quot; /&gt; is thrown with the message &quot;An asynchronous operation is already in progress.&quot;">Une méthode <see cref="T:System.Xml.XmlReader" /> a été appelée avant la fin d’une opération asynchrone précédente. Dans ce cas, l’exception <see cref="T:System.InvalidOperationException" /> est levée avec le message « Une opération asynchrone est déjà en cours ».</exception>
      <exception cref="T:System.ArgumentNullException" vsli:raw="Both parameter values are &lt;see langword=&quot;null&quot; /&gt;.">La valeur des deux paramètres est <see langword="null" />.</exception>
      <returns vsli:raw="&lt;see langword=&quot;true&quot; /&gt; if a matching descendant element is found; otherwise &lt;see langword=&quot;false&quot; /&gt;. If a matching descendant element is not found, the &lt;see cref=&quot;T:System.Xml.XmlReader&quot; /&gt; is positioned on the end tag (&lt;see cref=&quot;P:System.Xml.XmlReader.NodeType&quot; /&gt; is &lt;see langword=&quot;XmlNodeType.EndElement&quot; /&gt;) of the element.&#xA;&#xA; If the &lt;see cref=&quot;T:System.Xml.XmlReader&quot; /&gt; is not positioned on an element when &lt;see cref=&quot;M:System.Xml.XmlReader.ReadToDescendant(System.String,System.String)&quot; /&gt; was called, this method returns &lt;see langword=&quot;false&quot; /&gt; and the position of the &lt;see cref=&quot;T:System.Xml.XmlReader&quot; /&gt; is not changed.">
        <see langword="true" /> si un élément descendant correspondant est trouvé ; sinon, <see langword="false" />. Si aucun élément enfant correspondant n'est trouvé, le <see cref="T:System.Xml.XmlReader" /> est placé sur la balise de fin (<see cref="P:System.Xml.XmlReader.NodeType" /> est <see langword="XmlNodeType.EndElement" />) de l'élément.  
  
Si <see cref="T:System.Xml.XmlReader" /> n'est pas placé sur un élément lorsque <see cref="M:System.Xml.XmlReader.ReadToDescendant(System.String,System.String)" /> est appelé, cette méthode retourne <see langword="false" /> et la position de <see cref="T:System.Xml.XmlReader" /> ne change pas.</returns>
    </member>
    <member name="M:System.Xml.XmlReader.ReadToFollowing(System.String)">
      <summary vsli:raw="Reads until an element with the specified qualified name is found.">Lit jusqu'à trouver un élément avec le nom qualifié spécifié.</summary>
      <param name="name" vsli:raw="The qualified name of the element.">Nom qualifié de l'élément.</param>
      <exception cref="T:System.InvalidOperationException" vsli:raw="An &lt;see cref=&quot;T:System.Xml.XmlReader&quot; /&gt; method was called before a previous asynchronous operation finished. In this case, &lt;see cref=&quot;T:System.InvalidOperationException&quot; /&gt; is thrown with the message &quot;An asynchronous operation is already in progress.&quot;">Une méthode <see cref="T:System.Xml.XmlReader" /> a été appelée avant la fin d’une opération asynchrone précédente. Dans ce cas, l’exception <see cref="T:System.InvalidOperationException" /> est levée avec le message « Une opération asynchrone est déjà en cours ».</exception>
      <exception cref="T:System.ArgumentException" vsli:raw="The parameter is an empty string.">Le paramètre est une chaîne vide.</exception>
      <returns vsli:raw="&lt;see langword=&quot;true&quot; /&gt; if a matching element is found; otherwise &lt;see langword=&quot;false&quot; /&gt; and the &lt;see cref=&quot;T:System.Xml.XmlReader&quot; /&gt; is in an end of file state.">
        <see langword="true" /> si un élément correspondant est trouvé ; sinon, <see langword="false" /> et <see cref="T:System.Xml.XmlReader" /> est dans un état de fin de fichier.</returns>
    </member>
    <member name="M:System.Xml.XmlReader.ReadToFollowing(System.String,System.String)">
      <summary vsli:raw="Reads until an element with the specified local name and namespace URI is found.">Lit jusqu'à trouver un élément avec le nom local et l'URI de l'espace de noms spécifiés.</summary>
      <param name="localName" vsli:raw="The local name of the element.">Le nom local de l'élément.</param>
      <param name="namespaceURI" vsli:raw="The namespace URI of the element.">L'URI de l'espace de noms de l'élément.</param>
      <exception cref="T:System.InvalidOperationException" vsli:raw="An &lt;see cref=&quot;T:System.Xml.XmlReader&quot; /&gt; method was called before a previous asynchronous operation finished. In this case, &lt;see cref=&quot;T:System.InvalidOperationException&quot; /&gt; is thrown with the message &quot;An asynchronous operation is already in progress.&quot;">Une méthode <see cref="T:System.Xml.XmlReader" /> a été appelée avant la fin d’une opération asynchrone précédente. Dans ce cas, l’exception <see cref="T:System.InvalidOperationException" /> est levée avec le message « Une opération asynchrone est déjà en cours ».</exception>
      <exception cref="T:System.ArgumentNullException" vsli:raw="Both parameter values are &lt;see langword=&quot;null&quot; /&gt;.">La valeur des deux paramètres est <see langword="null" />.</exception>
      <returns vsli:raw="&lt;see langword=&quot;true&quot; /&gt; if a matching element is found; otherwise &lt;see langword=&quot;false&quot; /&gt; and the &lt;see cref=&quot;T:System.Xml.XmlReader&quot; /&gt; is in an end of file state.">
        <see langword="true" /> si un élément correspondant est trouvé ; sinon, <see langword="false" /> et <see cref="T:System.Xml.XmlReader" /> est dans un état de fin de fichier.</returns>
    </member>
    <member name="M:System.Xml.XmlReader.ReadToNextSibling(System.String)">
      <summary vsli:raw="Advances the &lt;see langword=&quot;XmlReader&quot; /&gt; to the next sibling element with the specified qualified name.">Avance le <see langword="XmlReader" /> vers l'élément frère suivant portant le nom qualifié spécifié.</summary>
      <param name="name" vsli:raw="The qualified name of the sibling element you wish to move to.">Nom qualifié de l'élément frère vers lequel se déplacer.</param>
      <exception cref="T:System.InvalidOperationException" vsli:raw="An &lt;see cref=&quot;T:System.Xml.XmlReader&quot; /&gt; method was called before a previous asynchronous operation finished. In this case, &lt;see cref=&quot;T:System.InvalidOperationException&quot; /&gt; is thrown with the message &quot;An asynchronous operation is already in progress.&quot;">Une méthode <see cref="T:System.Xml.XmlReader" /> a été appelée avant la fin d’une opération asynchrone précédente. Dans ce cas, l’exception <see cref="T:System.InvalidOperationException" /> est levée avec le message « Une opération asynchrone est déjà en cours ».</exception>
      <exception cref="T:System.ArgumentException" vsli:raw="The parameter is an empty string.">Le paramètre est une chaîne vide.</exception>
      <returns vsli:raw="&lt;see langword=&quot;true&quot; /&gt; if a matching sibling element is found; otherwise &lt;see langword=&quot;false&quot; /&gt;. If a matching sibling element is not found, the &lt;see langword=&quot;XmlReader&quot; /&gt; is positioned on the end tag (&lt;see cref=&quot;P:System.Xml.XmlReader.NodeType&quot; /&gt; is &lt;see langword=&quot;XmlNodeType.EndElement&quot; /&gt;) of the parent element.">
        <see langword="true" /> si un élément frère correspondant est trouvé ; sinon, <see langword="false" />. Si aucun élément frère correspondant n’est trouvé, le <see langword="XmlReader" /> est placé sur la balise de fin (<see cref="P:System.Xml.XmlReader.NodeType" /> est <see langword="XmlNodeType.EndElement" />) de l’élément parent.</returns>
    </member>
    <member name="M:System.Xml.XmlReader.ReadToNextSibling(System.String,System.String)">
      <summary vsli:raw="Advances the &lt;see langword=&quot;XmlReader&quot; /&gt; to the next sibling element with the specified local name and namespace URI.">Avance <see langword="XmlReader" /> vers l’élément frère suivant doté du nom local et de l’URI de l’espace de noms spécifiés.</summary>
      <param name="localName" vsli:raw="The local name of the sibling element you wish to move to.">Nom local de l'élément frère vers lequel se déplacer.</param>
      <param name="namespaceURI" vsli:raw="The namespace URI of the sibling element you wish to move to.">URI de l'espace de noms de l'élément frère vers lequel se déplacer.</param>
      <exception cref="T:System.InvalidOperationException" vsli:raw="An &lt;see cref=&quot;T:System.Xml.XmlReader&quot; /&gt; method was called before a previous asynchronous operation finished. In this case, &lt;see cref=&quot;T:System.InvalidOperationException&quot; /&gt; is thrown with the message &quot;An asynchronous operation is already in progress.&quot;">Une méthode <see cref="T:System.Xml.XmlReader" /> a été appelée avant la fin d’une opération asynchrone précédente. Dans ce cas, l’exception <see cref="T:System.InvalidOperationException" /> est levée avec le message « Une opération asynchrone est déjà en cours ».</exception>
      <exception cref="T:System.ArgumentNullException" vsli:raw="Both parameter values are &lt;see langword=&quot;null&quot; /&gt;.">La valeur des deux paramètres est <see langword="null" />.</exception>
      <returns vsli:raw="&lt;see langword=&quot;true&quot; /&gt; if a matching sibling element is found; otherwise, &lt;see langword=&quot;false&quot; /&gt;. If a matching sibling element is not found, the &lt;see langword=&quot;XmlReader&quot; /&gt; is positioned on the end tag (&lt;see cref=&quot;P:System.Xml.XmlReader.NodeType&quot; /&gt; is &lt;see langword=&quot;XmlNodeType.EndElement&quot; /&gt;) of the parent element.">
        <see langword="true" /> si un élément frère correspondant est trouvé ; sinon, <see langword="false" />. Si aucun élément frère correspondant n’est trouvé, le <see langword="XmlReader" /> est placé sur la balise de fin (<see cref="P:System.Xml.XmlReader.NodeType" /> est <see langword="XmlNodeType.EndElement" />) de l’élément parent.</returns>
    </member>
    <member name="M:System.Xml.XmlReader.ReadValueChunk(System.Char[],System.Int32,System.Int32)">
      <summary vsli:raw="Reads large streams of text embedded in an XML document.">Lit des flux de texte volumineux incorporés dans un document XML.</summary>
      <param name="buffer" vsli:raw="The array of characters that serves as the buffer to which the text contents are written. This value cannot be &lt;see langword=&quot;null&quot; /&gt;.">Tableau de caractères servant de mémoire tampon dans laquelle le texte est écrit. Cette valeur ne peut pas être <see langword="null" />.</param>
      <param name="index" vsli:raw="The offset within the buffer where the &lt;see cref=&quot;T:System.Xml.XmlReader&quot; /&gt; can start to copy the results.">Offset dans la mémoire tampon où le <see cref="T:System.Xml.XmlReader" /> peut commencer à copier les résultats.</param>
      <param name="count" vsli:raw="The maximum number of characters to copy into the buffer. The actual number of characters copied is returned from this method.">Nombre maximal de caractères à copier dans la mémoire tampon. Le nombre réel de caractères copiés est retourné à partir de cette méthode.</param>
      <exception cref="T:System.InvalidOperationException" vsli:raw="The current node does not have a value (&lt;see cref=&quot;P:System.Xml.XmlReader.HasValue&quot; /&gt; is &lt;see langword=&quot;false&quot; /&gt;).&#xA;&#xA;-or-&#xA;&#xA;An &lt;see cref=&quot;T:System.Xml.XmlReader&quot; /&gt; method was called before a previous asynchronous operation finished. In this case, &lt;see cref=&quot;T:System.InvalidOperationException&quot; /&gt; is thrown with the message &quot;An asynchronous operation is already in progress.&quot;">Le nœud actuel n'a pas de valeur (<see cref="P:System.Xml.XmlReader.HasValue" /> est <see langword="false" />).

- ou - 
Une méthode <see cref="T:System.Xml.XmlReader" /> a été appelée avant la fin d’une opération asynchrone précédente. Dans ce cas, l’exception <see cref="T:System.InvalidOperationException" /> est levée avec le message « Une opération asynchrone est déjà en cours ».</exception>
      <exception cref="T:System.ArgumentNullException" vsli:raw="The &lt;paramref name=&quot;buffer&quot; /&gt; value is &lt;see langword=&quot;null&quot; /&gt;.">
        <paramref name="buffer" /> a la valeur <see langword="null" />.</exception>
      <exception cref="T:System.ArgumentOutOfRangeException" vsli:raw="The index into the buffer, or index + count is larger than the allocated buffer size.">L'index de la mémoire tampon, ou l'index augmenté de la valeur du paramètre count, est supérieur à la taille de la mémoire tampon allouée.</exception>
      <exception cref="T:System.NotSupportedException" vsli:raw="The &lt;see cref=&quot;T:System.Xml.XmlReader&quot; /&gt; implementation does not support this method.">L'implémentation de <see cref="T:System.Xml.XmlReader" /> ne prend pas en charge cette méthode.</exception>
      <exception cref="T:System.Xml.XmlException" vsli:raw="The XML data is not well-formed.">La forme des données XML n'est pas correcte.</exception>
      <returns vsli:raw="The number of characters read into the buffer. The value zero is returned when there is no more text content.">Nombre total de caractères lus dans la mémoire tampon. La valeur zéro est retournée quand il n'y a plus de contenu de texte.</returns>
    </member>
    <member name="M:System.Xml.XmlReader.ReadValueChunkAsync(System.Char[],System.Int32,System.Int32)">
      <summary vsli:raw="Asynchronously reads large streams of text embedded in an XML document.">Lit de façon asynchrone des flux de texte volumineux incorporés dans un document XML.</summary>
      <param name="buffer" vsli:raw="The array of characters that serves as the buffer to which the text contents are written. This value cannot be &lt;see langword=&quot;null&quot; /&gt;.">Tableau de caractères servant de mémoire tampon dans laquelle le texte est écrit. Cette valeur ne peut pas être <see langword="null" />.</param>
      <param name="index" vsli:raw="The offset within the buffer where the &lt;see cref=&quot;T:System.Xml.XmlReader&quot; /&gt; can start to copy the results.">Offset dans la mémoire tampon où le <see cref="T:System.Xml.XmlReader" /> peut commencer à copier les résultats.</param>
      <param name="count" vsli:raw="The maximum number of characters to copy into the buffer. The actual number of characters copied is returned from this method.">Nombre maximal de caractères à copier dans la mémoire tampon. Le nombre réel de caractères copiés est retourné à partir de cette méthode.</param>
      <exception cref="T:System.InvalidOperationException" vsli:raw="An &lt;see cref=&quot;T:System.Xml.XmlReader&quot; /&gt; method was called before a previous asynchronous operation finished. In this case, &lt;see cref=&quot;T:System.InvalidOperationException&quot; /&gt; is thrown with the message &quot;An asynchronous operation is already in progress.&quot;&#xA;-or-&#xA;&#xA;An &lt;see cref=&quot;T:System.Xml.XmlReader&quot; /&gt; asynchronous method was called without setting the &lt;see cref=&quot;P:System.Xml.XmlReaderSettings.Async&quot; /&gt; flag to &lt;see langword=&quot;true&quot; /&gt;. In this case, &lt;see cref=&quot;T:System.InvalidOperationException&quot; /&gt; is thrown with the message &quot;Set XmlReaderSettings.Async to true if you want to use Async Methods.&quot;">Une méthode <see cref="T:System.Xml.XmlReader" /> a été appelée avant la fin d’une opération asynchrone précédente. Dans ce cas, l’exception <see cref="T:System.InvalidOperationException" /> est levée avec le message « Une opération asynchrone est déjà en cours ».
- ou -

Une méthode asynchrone <see cref="T:System.Xml.XmlReader" /> a été appelée sans définir l’indicateur <see cref="P:System.Xml.XmlReaderSettings.Async" /> sur <see langword="true" />. Dans ce cas, l’exception <see cref="T:System.InvalidOperationException" /> est levée avec le message « Attribuez à XmlReaderSettings.Async la valeur True si vous voulez utiliser des méthodes asynchrones ».</exception>
      <returns vsli:raw="The number of characters read into the buffer. The value zero is returned when there is no more text content.">Nombre total de caractères lus dans la mémoire tampon. La valeur zéro est retournée quand il n'y a plus de contenu de texte.</returns>
    </member>
    <member name="M:System.Xml.XmlReader.ResolveEntity">
      <summary vsli:raw="When overridden in a derived class, resolves the entity reference for &lt;see langword=&quot;EntityReference&quot; /&gt; nodes.">En cas de substitution dans une classe dérivée, résout la référence d'entité des nœuds <see langword="EntityReference" />.</summary>
      <exception cref="T:System.InvalidOperationException" vsli:raw="The reader is not positioned on an &lt;see langword=&quot;EntityReference&quot; /&gt; node; this implementation of the reader cannot resolve entities (&lt;see cref=&quot;P:System.Xml.XmlReader.CanResolveEntity&quot; /&gt; returns &lt;see langword=&quot;false&quot; /&gt;).&#xA;&#xA;-or-&#xA;&#xA;An &lt;see cref=&quot;T:System.Xml.XmlReader&quot; /&gt; method was called before a previous asynchronous operation finished. In this case, &lt;see cref=&quot;T:System.InvalidOperationException&quot; /&gt; is thrown with the message &quot;An asynchronous operation is already in progress.&quot;">Le lecteur n'est pas placé sur un nœud <see langword="EntityReference" /> ; cette implémentation du lecteur ne permet pas de résoudre les entités (<see cref="P:System.Xml.XmlReader.CanResolveEntity" /> retourne <see langword="false" />).

- ou -

Une méthode <see cref="T:System.Xml.XmlReader" /> a été appelée avant la fin d’une opération asynchrone précédente. Dans ce cas, l’exception <see cref="T:System.InvalidOperationException" /> est levée avec le message « Une opération asynchrone est déjà en cours ».</exception>
    </member>
    <member name="M:System.Xml.XmlReader.Skip">
      <summary vsli:raw="Skips the children of the current node.">Ignore les enfants du nœud actuel.</summary>
      <exception cref="T:System.InvalidOperationException" vsli:raw="An &lt;see cref=&quot;T:System.Xml.XmlReader&quot; /&gt; method was called before a previous asynchronous operation finished. In this case, &lt;see cref=&quot;T:System.InvalidOperationException&quot; /&gt; is thrown with the message &quot;An asynchronous operation is already in progress.&quot;">Une méthode <see cref="T:System.Xml.XmlReader" /> a été appelée avant la fin d’une opération asynchrone précédente. Dans ce cas, l’exception <see cref="T:System.InvalidOperationException" /> est levée avec le message « Une opération asynchrone est déjà en cours ».</exception>
    </member>
    <member name="M:System.Xml.XmlReader.SkipAsync">
      <summary vsli:raw="Asynchronously skips the children of the current node.">Ignore de façon asynchrone les enfants du nœud actuel.</summary>
      <exception cref="T:System.InvalidOperationException" vsli:raw="An &lt;see cref=&quot;T:System.Xml.XmlReader&quot; /&gt; method was called before a previous asynchronous operation finished. In this case, &lt;see cref=&quot;T:System.InvalidOperationException&quot; /&gt; is thrown with the message &quot;An asynchronous operation is already in progress.&quot;&#xA;&#xA;-or-&#xA;&#xA;An &lt;see cref=&quot;T:System.Xml.XmlReader&quot; /&gt; asynchronous method was called without setting the &lt;see cref=&quot;P:System.Xml.XmlReaderSettings.Async&quot; /&gt; flag to &lt;see langword=&quot;true&quot; /&gt;. In this case, &lt;see cref=&quot;T:System.InvalidOperationException&quot; /&gt; is thrown with the message &quot;Set XmlReaderSettings.Async to true if you want to use Async Methods.&quot;">Une méthode <see cref="T:System.Xml.XmlReader" /> a été appelée avant la fin d’une opération asynchrone précédente. Dans ce cas, l’exception <see cref="T:System.InvalidOperationException" /> est levée avec le message « Une opération asynchrone est déjà en cours ».

- ou -

Une méthode asynchrone <see cref="T:System.Xml.XmlReader" /> a été appelée sans définir l’indicateur <see cref="P:System.Xml.XmlReaderSettings.Async" /> sur <see langword="true" />. Dans ce cas, l’exception <see cref="T:System.InvalidOperationException" /> est levée avec le message « Attribuez à XmlReaderSettings.Async la valeur True si vous voulez utiliser des méthodes asynchrones ».</exception>
      <returns vsli:raw="The current node.">Nœud actuel.</returns>
    </member>
    <member name="P:System.Xml.XmlReader.AttributeCount">
      <summary vsli:raw="When overridden in a derived class, gets the number of attributes on the current node.">En cas de substitution dans une classe dérivée, obtient le nombre d'attributs du nœud actuel.</summary>
      <exception cref="T:System.InvalidOperationException" vsli:raw="An &lt;see cref=&quot;T:System.Xml.XmlReader&quot; /&gt; method was called before a previous asynchronous operation finished. In this case, &lt;see cref=&quot;T:System.InvalidOperationException&quot; /&gt; is thrown with the message &quot;An asynchronous operation is already in progress.&quot;">Une méthode <see cref="T:System.Xml.XmlReader" /> a été appelée avant la fin d’une opération asynchrone précédente. Dans ce cas, l’exception <see cref="T:System.InvalidOperationException" /> est levée avec le message « Une opération asynchrone est déjà en cours ».</exception>
      <returns vsli:raw="The number of attributes on the current node.">Nombre d'attributs du nœud actuel.</returns>
    </member>
    <member name="P:System.Xml.XmlReader.BaseURI">
      <summary vsli:raw="When overridden in a derived class, gets the base URI of the current node.">En cas de substitution dans une classe dérivée, obtient l'URI de base du nœud actuel.</summary>
      <exception cref="T:System.InvalidOperationException" vsli:raw="An &lt;see cref=&quot;T:System.Xml.XmlReader&quot; /&gt; method was called before a previous asynchronous operation finished. In this case, &lt;see cref=&quot;T:System.InvalidOperationException&quot; /&gt; is thrown with the message &quot;An asynchronous operation is already in progress.&quot;">Une méthode <see cref="T:System.Xml.XmlReader" /> a été appelée avant la fin d’une opération asynchrone précédente. Dans ce cas, l’exception <see cref="T:System.InvalidOperationException" /> est levée avec le message « Une opération asynchrone est déjà en cours ».</exception>
      <returns vsli:raw="The base URI of the current node.">URI de base du nœud actuel.</returns>
    </member>
    <member name="P:System.Xml.XmlReader.CanReadBinaryContent">
      <summary vsli:raw="Gets a value indicating whether the &lt;see cref=&quot;T:System.Xml.XmlReader&quot; /&gt; implements the binary content read methods.">Obtient une valeur indiquant si <see cref="T:System.Xml.XmlReader" /> implémente les méthodes de lecture de contenu binaire.</summary>
      <exception cref="T:System.InvalidOperationException" vsli:raw="An &lt;see cref=&quot;T:System.Xml.XmlReader&quot; /&gt; method was called before a previous asynchronous operation finished. In this case, &lt;see cref=&quot;T:System.InvalidOperationException&quot; /&gt; is thrown with the message &quot;An asynchronous operation is already in progress.&quot;">Une méthode <see cref="T:System.Xml.XmlReader" /> a été appelée avant la fin d’une opération asynchrone précédente. Dans ce cas, l’exception <see cref="T:System.InvalidOperationException" /> est levée avec le message « Une opération asynchrone est déjà en cours ».</exception>
      <returns vsli:raw="&lt;see langword=&quot;true&quot; /&gt; if the binary content read methods are implemented; otherwise &lt;see langword=&quot;false&quot; /&gt;.">
        <see langword="true" /> si les méthodes de lecture de contenu binaire sont implémentées ; sinon, <see langword="false" />.</returns>
    </member>
    <member name="P:System.Xml.XmlReader.CanReadValueChunk">
      <summary vsli:raw="Gets a value indicating whether the &lt;see cref=&quot;T:System.Xml.XmlReader&quot; /&gt; implements the &lt;see cref=&quot;M:System.Xml.XmlReader.ReadValueChunk(System.Char[],System.Int32,System.Int32)&quot; /&gt; method.">Obtient une valeur indiquant si <see cref="T:System.Xml.XmlReader" /> implémente la méthode <see cref="M:System.Xml.XmlReader.ReadValueChunk(System.Char[],System.Int32,System.Int32)" />.</summary>
      <exception cref="T:System.InvalidOperationException" vsli:raw="An &lt;see cref=&quot;T:System.Xml.XmlReader&quot; /&gt; method was called before a previous asynchronous operation finished. In this case, &lt;see cref=&quot;T:System.InvalidOperationException&quot; /&gt; is thrown with the message &quot;An asynchronous operation is already in progress.&quot;">Une méthode <see cref="T:System.Xml.XmlReader" /> a été appelée avant la fin d’une opération asynchrone précédente. Dans ce cas, l’exception <see cref="T:System.InvalidOperationException" /> est levée avec le message « Une opération asynchrone est déjà en cours ».</exception>
      <returns vsli:raw="&lt;see langword=&quot;true&quot; /&gt; if the &lt;see cref=&quot;T:System.Xml.XmlReader&quot; /&gt; implements the &lt;see cref=&quot;M:System.Xml.XmlReader.ReadValueChunk(System.Char[],System.Int32,System.Int32)&quot; /&gt; method; otherwise &lt;see langword=&quot;false&quot; /&gt;.">
        <see langword="true" /> si <see cref="T:System.Xml.XmlReader" /> implémente la méthode <see cref="M:System.Xml.XmlReader.ReadValueChunk(System.Char[],System.Int32,System.Int32)" /> ; sinon, <see langword="false" />.</returns>
    </member>
    <member name="P:System.Xml.XmlReader.CanResolveEntity">
      <summary vsli:raw="Gets a value indicating whether this reader can parse and resolve entities.">Obtient une valeur indiquant si ce lecteur peut analyser et résoudre les entités.</summary>
      <exception cref="T:System.InvalidOperationException" vsli:raw="An &lt;see cref=&quot;T:System.Xml.XmlReader&quot; /&gt; method was called before a previous asynchronous operation finished. In this case, &lt;see cref=&quot;T:System.InvalidOperationException&quot; /&gt; is thrown with the message &quot;An asynchronous operation is already in progress.&quot;">Une méthode <see cref="T:System.Xml.XmlReader" /> a été appelée avant la fin d’une opération asynchrone précédente. Dans ce cas, l’exception <see cref="T:System.InvalidOperationException" /> est levée avec le message « Une opération asynchrone est déjà en cours ».</exception>
      <returns vsli:raw="&lt;see langword=&quot;true&quot; /&gt; if the reader can parse and resolve entities; otherwise, &lt;see langword=&quot;false&quot; /&gt;.">
        <see langword="true" /> si le lecteur peut analyser et résoudre les entités ; sinon, <see langword="false" />.</returns>
    </member>
    <member name="P:System.Xml.XmlReader.Depth">
      <summary vsli:raw="When overridden in a derived class, gets the depth of the current node in the XML document.">En cas de substitution dans une classe dérivée, obtient la profondeur du nœud actuel dans le document XML.</summary>
      <exception cref="T:System.InvalidOperationException" vsli:raw="An &lt;see cref=&quot;T:System.Xml.XmlReader&quot; /&gt; method was called before a previous asynchronous operation finished. In this case, &lt;see cref=&quot;T:System.InvalidOperationException&quot; /&gt; is thrown with the message &quot;An asynchronous operation is already in progress.&quot;">Une méthode <see cref="T:System.Xml.XmlReader" /> a été appelée avant la fin d’une opération asynchrone précédente. Dans ce cas, l’exception <see cref="T:System.InvalidOperationException" /> est levée avec le message « Une opération asynchrone est déjà en cours ».</exception>
      <returns vsli:raw="The depth of the current node in the XML document.">Profondeur du nœud actuel dans le document XML.</returns>
    </member>
    <member name="P:System.Xml.XmlReader.EOF">
      <summary vsli:raw="When overridden in a derived class, gets a value indicating whether the reader is positioned at the end of the stream.">En cas de substitution dans une classe dérivée, obtient une valeur indiquant si le lecteur est placé à la fin du flux.</summary>
      <exception cref="T:System.InvalidOperationException" vsli:raw="An &lt;see cref=&quot;T:System.Xml.XmlReader&quot; /&gt; method was called before a previous asynchronous operation finished. In this case, &lt;see cref=&quot;T:System.InvalidOperationException&quot; /&gt; is thrown with the message &quot;An asynchronous operation is already in progress.&quot;">Une méthode <see cref="T:System.Xml.XmlReader" /> a été appelée avant la fin d’une opération asynchrone précédente. Dans ce cas, l’exception <see cref="T:System.InvalidOperationException" /> est levée avec le message « Une opération asynchrone est déjà en cours ».</exception>
      <returns vsli:raw="&lt;see langword=&quot;true&quot; /&gt; if the reader is positioned at the end of the stream; otherwise, &lt;see langword=&quot;false&quot; /&gt;.">
        <see langword="true" /> si le lecteur est placé à la fin du flux ; sinon, <see langword="false" />.</returns>
    </member>
    <member name="P:System.Xml.XmlReader.HasAttributes">
      <summary vsli:raw="Gets a value indicating whether the current node has any attributes.">Obtient une valeur indiquant si le nœud actuel a des attributs.</summary>
      <exception cref="T:System.InvalidOperationException" vsli:raw="An &lt;see cref=&quot;T:System.Xml.XmlReader&quot; /&gt; method was called before a previous asynchronous operation finished. In this case, &lt;see cref=&quot;T:System.InvalidOperationException&quot; /&gt; is thrown with the message &quot;An asynchronous operation is already in progress.&quot;">Une méthode <see cref="T:System.Xml.XmlReader" /> a été appelée avant la fin d’une opération asynchrone précédente. Dans ce cas, l’exception <see cref="T:System.InvalidOperationException" /> est levée avec le message « Une opération asynchrone est déjà en cours ».</exception>
      <returns vsli:raw="&lt;see langword=&quot;true&quot; /&gt; if the current node has attributes; otherwise, &lt;see langword=&quot;false&quot; /&gt;.">
        <see langword="true" /> si le nœud actuel possède des attributs ; sinon, <see langword="false" />.</returns>
    </member>
    <member name="P:System.Xml.XmlReader.HasValue">
      <summary vsli:raw="When overridden in a derived class, gets a value indicating whether the current node can have a &lt;see cref=&quot;P:System.Xml.XmlReader.Value&quot; /&gt;.">En cas de substitution dans une classe dérivée, obtient une valeur indiquant si le nœud actuel peut posséder <see cref="P:System.Xml.XmlReader.Value" />.</summary>
      <exception cref="T:System.InvalidOperationException" vsli:raw="An &lt;see cref=&quot;T:System.Xml.XmlReader&quot; /&gt; method was called before a previous asynchronous operation finished. In this case, &lt;see cref=&quot;T:System.InvalidOperationException&quot; /&gt; is thrown with the message &quot;An asynchronous operation is already in progress.&quot;">Une méthode <see cref="T:System.Xml.XmlReader" /> a été appelée avant la fin d’une opération asynchrone précédente. Dans ce cas, l’exception <see cref="T:System.InvalidOperationException" /> est levée avec le message « Une opération asynchrone est déjà en cours ».</exception>
      <returns vsli:raw="&lt;see langword=&quot;true&quot; /&gt; if the node on which the reader is currently positioned can have a &lt;see langword=&quot;Value&quot; /&gt;; otherwise, &lt;see langword=&quot;false&quot; /&gt;. If &lt;see langword=&quot;false&quot; /&gt;, the node has a value of &lt;see langword=&quot;String.Empty&quot; /&gt;.">
        <see langword="true" /> si le nœud sur lequel le lecteur est placé actuellement peut avoir un <see langword="Value" /> ; sinon, <see langword="false" />. Si <see langword="false" />, le nœud a une valeur de <see langword="String.Empty" />.</returns>
    </member>
    <member name="P:System.Xml.XmlReader.IsDefault">
      <summary vsli:raw="When overridden in a derived class, gets a value indicating whether the current node is an attribute that was generated from the default value defined in the DTD or schema.">En cas de substitution dans une classe dérivée, obtient une valeur indiquant si le nœud actuel est un attribut généré à partir de la valeur par défaut définie dans le DTD ou le schéma.</summary>
      <exception cref="T:System.InvalidOperationException" vsli:raw="An &lt;see cref=&quot;T:System.Xml.XmlReader&quot; /&gt; method was called before a previous asynchronous operation finished. In this case, &lt;see cref=&quot;T:System.InvalidOperationException&quot; /&gt; is thrown with the message &quot;An asynchronous operation is already in progress.&quot;">Une méthode <see cref="T:System.Xml.XmlReader" /> a été appelée avant la fin d’une opération asynchrone précédente. Dans ce cas, l’exception <see cref="T:System.InvalidOperationException" /> est levée avec le message « Une opération asynchrone est déjà en cours ».</exception>
      <returns vsli:raw="&lt;see langword=&quot;true&quot; /&gt; if the current node is an attribute whose value was generated from the default value defined in the DTD or schema; &lt;see langword=&quot;false&quot; /&gt; if the attribute value was explicitly set.">
        <see langword="true" /> si le nœud actuel est un attribut dont la valeur a été générée à partir de la valeur par défaut définie dans le DTD ou le schéma ; <see langword="false" /> si la valeur d'attribut a été définie explicitement.</returns>
    </member>
    <member name="P:System.Xml.XmlReader.IsEmptyElement">
      <summary vsli:raw="When overridden in a derived class, gets a value indicating whether the current node is an empty element (for example, &lt;c&gt;&amp;lt;MyElement/&amp;gt;&lt;/c&gt;).">En cas de substitution dans une classe dérivée, obtient une valeur indiquant si le nœud actuel est un élément vide (par exemple, <c>&lt;MyElement/&gt;</c>).</summary>
      <exception cref="T:System.InvalidOperationException" vsli:raw="An &lt;see cref=&quot;T:System.Xml.XmlReader&quot; /&gt; method was called before a previous asynchronous operation finished. In this case, &lt;see cref=&quot;T:System.InvalidOperationException&quot; /&gt; is thrown with the message &quot;An asynchronous operation is already in progress.&quot;">Une méthode <see cref="T:System.Xml.XmlReader" /> a été appelée avant la fin d’une opération asynchrone précédente. Dans ce cas, l’exception <see cref="T:System.InvalidOperationException" /> est levée avec le message « Une opération asynchrone est déjà en cours ».</exception>
      <returns vsli:raw="&lt;see langword=&quot;true&quot; /&gt; if the current node is an element (&lt;see cref=&quot;P:System.Xml.XmlReader.NodeType&quot; /&gt; equals &lt;see langword=&quot;XmlNodeType.Element&quot; /&gt;) that ends with &lt;c&gt;/&amp;gt;&lt;/c&gt;; otherwise, &lt;see langword=&quot;false&quot; /&gt;.">
        <see langword="true" /> Si le nœud actuel est un élément ( <see cref="P:System.Xml.XmlReader.NodeType" /> est égal <see langword="XmlNodeType.Element" /> à) qui se termine par <c>/&gt;</c> ; sinon, <see langword="false" /> .</returns>
    </member>
    <member name="P:System.Xml.XmlReader.Item(System.Int32)">
      <summary vsli:raw="When overridden in a derived class, gets the value of the attribute with the specified index.">En cas de substitution dans une classe dérivée, obtient la valeur de l'attribut avec l'index spécifié.</summary>
      <param name="i" vsli:raw="The index of the attribute.">Index de l'attribut.</param>
      <exception cref="T:System.InvalidOperationException" vsli:raw="An &lt;see cref=&quot;T:System.Xml.XmlReader&quot; /&gt; method was called before a previous asynchronous operation finished. In this case, &lt;see cref=&quot;T:System.InvalidOperationException&quot; /&gt; is thrown with the message &quot;An asynchronous operation is already in progress.&quot;">Une méthode <see cref="T:System.Xml.XmlReader" /> a été appelée avant la fin d’une opération asynchrone précédente. Dans ce cas, l’exception <see cref="T:System.InvalidOperationException" /> est levée avec le message « Une opération asynchrone est déjà en cours ».</exception>
      <returns vsli:raw="The value of the specified attribute.">Valeur de l'attribut spécifié.</returns>
    </member>
    <member name="P:System.Xml.XmlReader.Item(System.String)">
      <summary vsli:raw="When overridden in a derived class, gets the value of the attribute with the specified &lt;see cref=&quot;P:System.Xml.XmlReader.Name&quot; /&gt;.">En cas de substitution dans une classe dérivée, obtient la valeur de l'attribut avec le <see cref="P:System.Xml.XmlReader.Name" /> spécifié.</summary>
      <param name="name" vsli:raw="The qualified name of the attribute.">Nom qualifié de l'attribut.</param>
      <exception cref="T:System.InvalidOperationException" vsli:raw="An &lt;see cref=&quot;T:System.Xml.XmlReader&quot; /&gt; method was called before a previous asynchronous operation finished. In this case, &lt;see cref=&quot;T:System.InvalidOperationException&quot; /&gt; is thrown with the message &quot;An asynchronous operation is already in progress.&quot;">Une méthode <see cref="T:System.Xml.XmlReader" /> a été appelée avant la fin d’une opération asynchrone précédente. Dans ce cas, l’exception <see cref="T:System.InvalidOperationException" /> est levée avec le message « Une opération asynchrone est déjà en cours ».</exception>
      <returns vsli:raw="The value of the specified attribute. If the attribute is not found, &lt;see langword=&quot;null&quot; /&gt; is returned.">Valeur de l'attribut spécifié. Si l'attribut est introuvable, <see langword="null" /> est retourné.</returns>
    </member>
    <member name="P:System.Xml.XmlReader.Item(System.String,System.String)">
      <summary vsli:raw="When overridden in a derived class, gets the value of the attribute with the specified &lt;see cref=&quot;P:System.Xml.XmlReader.LocalName&quot; /&gt; and &lt;see cref=&quot;P:System.Xml.XmlReader.NamespaceURI&quot; /&gt;.">En cas de substitution dans une classe dérivée, obtient la valeur de l'attribut avec le <see cref="P:System.Xml.XmlReader.LocalName" /> et le <see cref="P:System.Xml.XmlReader.NamespaceURI" /> spécifiés.</summary>
      <param name="name" vsli:raw="The local name of the attribute.">Le nom local de l'attribut.</param>
      <param name="namespaceURI" vsli:raw="The namespace URI of the attribute.">L'URI de l'espace de noms de l'attribut.</param>
      <exception cref="T:System.InvalidOperationException" vsli:raw="An &lt;see cref=&quot;T:System.Xml.XmlReader&quot; /&gt; method was called before a previous asynchronous operation finished. In this case, &lt;see cref=&quot;T:System.InvalidOperationException&quot; /&gt; is thrown with the message &quot;An asynchronous operation is already in progress.&quot;">Une méthode <see cref="T:System.Xml.XmlReader" /> a été appelée avant la fin d’une opération asynchrone précédente. Dans ce cas, l’exception <see cref="T:System.InvalidOperationException" /> est levée avec le message « Une opération asynchrone est déjà en cours ».</exception>
      <returns vsli:raw="The value of the specified attribute. If the attribute is not found, &lt;see langword=&quot;null&quot; /&gt; is returned.">Valeur de l'attribut spécifié. Si l'attribut est introuvable, <see langword="null" /> est retourné.</returns>
    </member>
    <member name="P:System.Xml.XmlReader.LocalName">
      <summary vsli:raw="When overridden in a derived class, gets the local name of the current node.">En cas de substitution dans une classe dérivée, obtient le nom local du nœud actuel.</summary>
      <exception cref="T:System.InvalidOperationException" vsli:raw="An &lt;see cref=&quot;T:System.Xml.XmlReader&quot; /&gt; method was called before a previous asynchronous operation finished. In this case, &lt;see cref=&quot;T:System.InvalidOperationException&quot; /&gt; is thrown with the message &quot;An asynchronous operation is already in progress.&quot;">Une méthode <see cref="T:System.Xml.XmlReader" /> a été appelée avant la fin d’une opération asynchrone précédente. Dans ce cas, l’exception <see cref="T:System.InvalidOperationException" /> est levée avec le message « Une opération asynchrone est déjà en cours ».</exception>
      <returns vsli:raw="The name of the current node with the prefix removed. For example, &lt;see langword=&quot;LocalName&quot; /&gt; is &lt;see langword=&quot;book&quot; /&gt; for the element &lt;c&gt;&amp;lt;bk:book&amp;gt;&lt;/c&gt;.&#xA;&#xA; For node types that do not have a name (like &lt;see langword=&quot;Text&quot; /&gt;, &lt;see langword=&quot;Comment&quot; /&gt;, and so on), this property returns &lt;see langword=&quot;String.Empty&quot; /&gt;.">Nom du nœud actuel dont le préfixe est supprimé. Par exemple, <see langword="LocalName" /> est <see langword="book" /> pour l’élément <c> &lt; BK : Book &gt; </c>.  
  
Pour les types de nœuds qui n'ont pas de nom (par exemple <see langword="Text" />, <see langword="Comment" />, etc.), cette propriété retourne <see langword="String.Empty" />.</returns>
    </member>
    <member name="P:System.Xml.XmlReader.Name">
      <summary vsli:raw="When overridden in a derived class, gets the qualified name of the current node.">En cas de substitution dans une classe dérivée, obtient le nom qualifié du nœud actuel.</summary>
      <exception cref="T:System.InvalidOperationException" vsli:raw="An &lt;see cref=&quot;T:System.Xml.XmlReader&quot; /&gt; method was called before a previous asynchronous operation finished. In this case, &lt;see cref=&quot;T:System.InvalidOperationException&quot; /&gt; is thrown with the message &quot;An asynchronous operation is already in progress.&quot;">Une méthode <see cref="T:System.Xml.XmlReader" /> a été appelée avant la fin d’une opération asynchrone précédente. Dans ce cas, l’exception <see cref="T:System.InvalidOperationException" /> est levée avec le message « Une opération asynchrone est déjà en cours ».</exception>
      <returns vsli:raw="The qualified name of the current node. For example, &lt;see langword=&quot;Name&quot; /&gt; is &lt;see langword=&quot;bk:book&quot; /&gt; for the element &lt;c&gt;&amp;lt;bk:book&amp;gt;&lt;/c&gt;.&#xA;&#xA; The name returned is dependent on the &lt;see cref=&quot;P:System.Xml.XmlReader.NodeType&quot; /&gt; of the node. The following node types return the listed values. All other node types return an empty string.&#xA;&#xA; &lt;list type=&quot;table&quot;&gt;&lt;listheader&gt;&lt;term&gt; Node type&lt;/term&gt;&lt;description&gt; Name&lt;/description&gt;&lt;/listheader&gt;&lt;item&gt;&lt;term&gt;&lt;see langword=&quot;Attribute&quot; /&gt;&lt;/term&gt;&lt;description&gt; The name of the attribute.&lt;/description&gt;&lt;/item&gt;&lt;item&gt;&lt;term&gt;&lt;see langword=&quot;DocumentType&quot; /&gt;&lt;/term&gt;&lt;description&gt; The document type name.&lt;/description&gt;&lt;/item&gt;&lt;item&gt;&lt;term&gt;&lt;see langword=&quot;Element&quot; /&gt;&lt;/term&gt;&lt;description&gt; The tag name.&lt;/description&gt;&lt;/item&gt;&lt;item&gt;&lt;term&gt;&lt;see langword=&quot;EntityReference&quot; /&gt;&lt;/term&gt;&lt;description&gt; The name of the entity referenced.&lt;/description&gt;&lt;/item&gt;&lt;item&gt;&lt;term&gt;&lt;see langword=&quot;ProcessingInstruction&quot; /&gt;&lt;/term&gt;&lt;description&gt; The target of the processing instruction.&lt;/description&gt;&lt;/item&gt;&lt;item&gt;&lt;term&gt;&lt;see langword=&quot;XmlDeclaration&quot; /&gt;&lt;/term&gt;&lt;description&gt; The literal string &lt;see langword=&quot;xml&quot; /&gt;.&lt;/description&gt;&lt;/item&gt;&lt;/list&gt;">Nom qualifié du nœud actuel. Par exemple, <see langword="Name" /> est <see langword="bk:book" /> pour l’élément <c> &lt; BK : Book &gt; </c>.  
  
Le nom retourné dépend du <see cref="P:System.Xml.XmlReader.NodeType" /> du nœud. Les types de nœuds suivants retournent les valeurs répertoriées. Tous les autres types de nœuds retournent une chaîne vide.  
  
 <list type="table"><listheader><term> Type de nœud</term><description> Name</description></listheader><item><term><see langword="Attribute" /></term><description> Nom de l'attribut.</description></item><item><term><see langword="DocumentType" /></term><description> Nom du type de document.</description></item><item><term><see langword="Element" /></term><description> Nom de la balise.</description></item><item><term><see langword="EntityReference" /></term><description> Nom de l'entité référencée.</description></item><item><term><see langword="ProcessingInstruction" /></term><description> Cible de l'instruction de traitement.</description></item><item><term><see langword="XmlDeclaration" /></term><description> Chaîne littérale <see langword="xml" />.</description></item></list></returns>
    </member>
    <member name="P:System.Xml.XmlReader.NamespaceURI">
      <summary vsli:raw="When overridden in a derived class, gets the namespace URI (as defined in the W3C Namespace specification) of the node on which the reader is positioned.">En cas de substitution dans une classe dérivée, obtient l'URI de l'espace de noms (tel qu'il est défini dans la spécification relative aux espaces de noms du W3C) du nœud sur lequel le lecteur est placé.</summary>
      <exception cref="T:System.InvalidOperationException" vsli:raw="An &lt;see cref=&quot;T:System.Xml.XmlReader&quot; /&gt; method was called before a previous asynchronous operation finished. In this case, &lt;see cref=&quot;T:System.InvalidOperationException&quot; /&gt; is thrown with the message &quot;An asynchronous operation is already in progress.&quot;">Une méthode <see cref="T:System.Xml.XmlReader" /> a été appelée avant la fin d’une opération asynchrone précédente. Dans ce cas, l’exception <see cref="T:System.InvalidOperationException" /> est levée avec le message « Une opération asynchrone est déjà en cours ».</exception>
      <returns vsli:raw="The namespace URI of the current node; otherwise an empty string.">URI d'espace de noms du nœud actuel ; sinon, une chaîne vide.</returns>
    </member>
    <member name="P:System.Xml.XmlReader.NameTable">
      <summary vsli:raw="When overridden in a derived class, gets the &lt;see cref=&quot;T:System.Xml.XmlNameTable&quot; /&gt; associated with this implementation.">En cas de substitution dans une classe dérivée, obtient le <see cref="T:System.Xml.XmlNameTable" /> associé à cette implémentation.</summary>
      <exception cref="T:System.InvalidOperationException" vsli:raw="An &lt;see cref=&quot;T:System.Xml.XmlReader&quot; /&gt; method was called before a previous asynchronous operation finished. In this case, &lt;see cref=&quot;T:System.InvalidOperationException&quot; /&gt; is thrown with the message &quot;An asynchronous operation is already in progress.&quot;">Une méthode <see cref="T:System.Xml.XmlReader" /> a été appelée avant la fin d’une opération asynchrone précédente. Dans ce cas, l’exception <see cref="T:System.InvalidOperationException" /> est levée avec le message « Une opération asynchrone est déjà en cours ».</exception>
      <returns vsli:raw="The &lt;see langword=&quot;XmlNameTable&quot; /&gt; enabling you to get the atomized version of a string within the node.">
        <see langword="XmlNameTable" /> vous permettant d'obtenir la version atomisée d'une chaîne au sein du nœud.</returns>
    </member>
    <member name="P:System.Xml.XmlReader.NodeType">
      <summary vsli:raw="When overridden in a derived class, gets the type of the current node.">En cas de substitution dans une classe dérivée, obtient le type du nœud actuel.</summary>
      <exception cref="T:System.InvalidOperationException" vsli:raw="An &lt;see cref=&quot;T:System.Xml.XmlReader&quot; /&gt; method was called before a previous asynchronous operation finished. In this case, &lt;see cref=&quot;T:System.InvalidOperationException&quot; /&gt; is thrown with the message &quot;An asynchronous operation is already in progress.&quot;">Une méthode <see cref="T:System.Xml.XmlReader" /> a été appelée avant la fin d’une opération asynchrone précédente. Dans ce cas, l’exception <see cref="T:System.InvalidOperationException" /> est levée avec le message « Une opération asynchrone est déjà en cours ».</exception>
      <returns vsli:raw="One of the enumeration values that specify the type of the current node.">Une des valeurs d'énumération qui spécifient le type du nœud actuel.</returns>
    </member>
    <member name="P:System.Xml.XmlReader.Prefix">
      <summary vsli:raw="When overridden in a derived class, gets the namespace prefix associated with the current node.">En cas de substitution dans une classe dérivée, obtient le préfixe de l'espace de noms associé au nœud actuel.</summary>
      <exception cref="T:System.InvalidOperationException" vsli:raw="An &lt;see cref=&quot;T:System.Xml.XmlReader&quot; /&gt; method was called before a previous asynchronous operation finished. In this case, &lt;see cref=&quot;T:System.InvalidOperationException&quot; /&gt; is thrown with the message &quot;An asynchronous operation is already in progress.&quot;">Une méthode <see cref="T:System.Xml.XmlReader" /> a été appelée avant la fin d’une opération asynchrone précédente. Dans ce cas, l’exception <see cref="T:System.InvalidOperationException" /> est levée avec le message « Une opération asynchrone est déjà en cours ».</exception>
      <returns vsli:raw="The namespace prefix associated with the current node.">Préfixe de l'espace de noms associé au nœud actuel.</returns>
    </member>
    <member name="P:System.Xml.XmlReader.QuoteChar">
      <summary vsli:raw="When overridden in a derived class, gets the quotation mark character used to enclose the value of an attribute node.">En cas de substitution dans une classe dérivée, obtient le caractère guillemet permettant de délimiter la valeur d'un nœud d'attribut.</summary>
      <exception cref="T:System.InvalidOperationException" vsli:raw="An &lt;see cref=&quot;T:System.Xml.XmlReader&quot; /&gt; method was called before a previous asynchronous operation finished. In this case, &lt;see cref=&quot;T:System.InvalidOperationException&quot; /&gt; is thrown with the message &quot;An asynchronous operation is already in progress.&quot;">Une méthode <see cref="T:System.Xml.XmlReader" /> a été appelée avant la fin d’une opération asynchrone précédente. Dans ce cas, l’exception <see cref="T:System.InvalidOperationException" /> est levée avec le message « Une opération asynchrone est déjà en cours ».</exception>
      <returns vsli:raw="The quotation mark character (&quot; or ') used to enclose the value of an attribute node.">Caractère guillemet (" ou ') permettant de délimiter la valeur d'un nœud d'attribut.</returns>
    </member>
    <member name="P:System.Xml.XmlReader.ReadState">
      <summary vsli:raw="When overridden in a derived class, gets the state of the reader.">En cas de substitution dans une classe dérivée, obtient l'état du lecteur.</summary>
      <exception cref="T:System.InvalidOperationException" vsli:raw="An &lt;see cref=&quot;T:System.Xml.XmlReader&quot; /&gt; method was called before a previous asynchronous operation finished. In this case, &lt;see cref=&quot;T:System.InvalidOperationException&quot; /&gt; is thrown with the message &quot;An asynchronous operation is already in progress.&quot;">Une méthode <see cref="T:System.Xml.XmlReader" /> a été appelée avant la fin d’une opération asynchrone précédente. Dans ce cas, l’exception <see cref="T:System.InvalidOperationException" /> est levée avec le message « Une opération asynchrone est déjà en cours ».</exception>
      <returns vsli:raw="One of the enumeration values that specifies the state of the reader.">L'une des valeurs d'énumération qui spécifie l'état du lecteur.</returns>
    </member>
    <member name="P:System.Xml.XmlReader.SchemaInfo">
      <summary vsli:raw="Gets the schema information that has been assigned to the current node as a result of schema validation.">Obtient les informations de schéma qui ont été assignées au nœud actuel à la suite de la validation du schéma.</summary>
      <exception cref="T:System.InvalidOperationException" vsli:raw="An &lt;see cref=&quot;T:System.Xml.XmlReader&quot; /&gt; method was called before a previous asynchronous operation finished. In this case, &lt;see cref=&quot;T:System.InvalidOperationException&quot; /&gt; is thrown with the message &quot;An asynchronous operation is already in progress.&quot;">Une méthode <see cref="T:System.Xml.XmlReader" /> a été appelée avant la fin d’une opération asynchrone précédente. Dans ce cas, l’exception <see cref="T:System.InvalidOperationException" /> est levée avec le message « Une opération asynchrone est déjà en cours ».</exception>
      <returns vsli:raw="An &lt;see cref=&quot;T:System.Xml.Schema.IXmlSchemaInfo&quot; /&gt; object containing the schema information for the current node. Schema information can be set on elements, attributes, or on text nodes with a non-null &lt;see cref=&quot;P:System.Xml.XmlReader.ValueType&quot; /&gt; (typed values).&#xA;&#xA; If the current node is not one of the above node types, or if the &lt;see langword=&quot;XmlReader&quot; /&gt; instance does not report schema information, this property returns &lt;see langword=&quot;null&quot; /&gt;.&#xA;&#xA; If this property is called from an &lt;see cref=&quot;T:System.Xml.XmlTextReader&quot; /&gt; or an &lt;see cref=&quot;T:System.Xml.XmlValidatingReader&quot; /&gt; object, this property always returns &lt;see langword=&quot;null&quot; /&gt;. These &lt;see langword=&quot;XmlReader&quot; /&gt; implementations do not expose schema information through the &lt;see langword=&quot;SchemaInfo&quot; /&gt; property.">Objet <see cref="T:System.Xml.Schema.IXmlSchemaInfo" /> qui contient les informations de schéma du nœud actuel. Les informations de schéma peuvent être définies sur des nœuds d'élément, d'attribut ou de texte avec un <see cref="P:System.Xml.XmlReader.ValueType" /> non NULL (valeurs typées).  
  
Si le nœud actuel n'appartient pas à l'un des types précités ou si l'instance de <see langword="XmlReader" /> ne signale pas d'informations de schéma, cette propriété retourne <see langword="null" />.  
  
Si cette propriété est appelée à partir d'un objet <see cref="T:System.Xml.XmlTextReader" /> ou <see cref="T:System.Xml.XmlValidatingReader" />, cette propriété retourne toujours <see langword="null" />. Ces implémentations <see langword="XmlReader" /> n'exposent pas d'informations de schéma par le biais de la propriété <see langword="SchemaInfo" />.  
  
 <block subset="none" type="note"><para>  
 Si vous devez obtenir le jeu d'informations postérieur à la validation du schéma (PSVI) pour un élément, positionnez le lecteur sur la balise de fin de l'élément plutôt que sur la balise de début. Le PSVI s'obtient par le biais de la propriété <see langword="SchemaInfo" /> d'un lecteur. Le lecteur validant créé par l'intermédiaire de <see cref="Overload:System.Xml.XmlReader.Create" /> avec la propriété <see cref="P:System.Xml.XmlReaderSettings.ValidationType" /> définie à <see cref="F:System.Xml.ValidationType.Schema" /> possède un PSVI complet pour un élément seulement lorsque le lecteur est positionné sur la balise de fin d'un élément.</para></block></returns>
    </member>
    <member name="P:System.Xml.XmlReader.Settings">
      <summary vsli:raw="Gets the &lt;see cref=&quot;T:System.Xml.XmlReaderSettings&quot; /&gt; object used to create this &lt;see cref=&quot;T:System.Xml.XmlReader&quot; /&gt; instance.">Obtient l'objet <see cref="T:System.Xml.XmlReaderSettings" /> permettant de créer cette instance de <see cref="T:System.Xml.XmlReader" />.</summary>
      <exception cref="T:System.InvalidOperationException" vsli:raw="An &lt;see cref=&quot;T:System.Xml.XmlReader&quot; /&gt; method was called before a previous asynchronous operation finished. In this case, &lt;see cref=&quot;T:System.InvalidOperationException&quot; /&gt; is thrown with the message &quot;An asynchronous operation is already in progress.&quot;">Une méthode <see cref="T:System.Xml.XmlReader" /> a été appelée avant la fin d’une opération asynchrone précédente. Dans ce cas, l’exception <see cref="T:System.InvalidOperationException" /> est levée avec le message « Une opération asynchrone est déjà en cours ».</exception>
      <returns vsli:raw="The &lt;see cref=&quot;T:System.Xml.XmlReaderSettings&quot; /&gt; object used to create this reader instance. If this reader was not created using the &lt;see cref=&quot;Overload:System.Xml.XmlReader.Create&quot; /&gt; method, this property returns &lt;see langword=&quot;null&quot; /&gt;.">Objet <see cref="T:System.Xml.XmlReaderSettings" /> permettant de créer cette instance du lecteur. Si ce lecteur n'a pas été créé à l'aide de la méthode <see cref="Overload:System.Xml.XmlReader.Create" />, cette propriété retourne <see langword="null" />.</returns>
    </member>
    <member name="P:System.Xml.XmlReader.Value">
      <summary vsli:raw="When overridden in a derived class, gets the text value of the current node.">En cas de substitution dans une classe dérivée, obtient la valeur texte du nœud actuel.</summary>
      <exception cref="T:System.InvalidOperationException" vsli:raw="An &lt;see cref=&quot;T:System.Xml.XmlReader&quot; /&gt; method was called before a previous asynchronous operation finished. In this case, &lt;see cref=&quot;T:System.InvalidOperationException&quot; /&gt; is thrown with the message &quot;An asynchronous operation is already in progress.&quot;">Une méthode <see cref="T:System.Xml.XmlReader" /> a été appelée avant la fin d’une opération asynchrone précédente. Dans ce cas, l’exception <see cref="T:System.InvalidOperationException" /> est levée avec le message « Une opération asynchrone est déjà en cours ».</exception>
      <returns vsli:raw="The value returned depends on the &lt;see cref=&quot;P:System.Xml.XmlReader.NodeType&quot; /&gt; of the node. The following table lists node types that have a value to return. All other node types return &lt;see langword=&quot;String.Empty&quot; /&gt;.&#xA;&#xA; &lt;list type=&quot;table&quot;&gt;&lt;listheader&gt;&lt;term&gt; Node type&lt;/term&gt;&lt;description&gt; Value&lt;/description&gt;&lt;/listheader&gt;&lt;item&gt;&lt;term&gt;&lt;see langword=&quot;Attribute&quot; /&gt;&lt;/term&gt;&lt;description&gt; The value of the attribute.&lt;/description&gt;&lt;/item&gt;&lt;item&gt;&lt;term&gt;&lt;see langword=&quot;CDATA&quot; /&gt;&lt;/term&gt;&lt;description&gt; The content of the CDATA section.&lt;/description&gt;&lt;/item&gt;&lt;item&gt;&lt;term&gt;&lt;see langword=&quot;Comment&quot; /&gt;&lt;/term&gt;&lt;description&gt; The content of the comment.&lt;/description&gt;&lt;/item&gt;&lt;item&gt;&lt;term&gt;&lt;see langword=&quot;DocumentType&quot; /&gt;&lt;/term&gt;&lt;description&gt; The internal subset.&lt;/description&gt;&lt;/item&gt;&lt;item&gt;&lt;term&gt;&lt;see langword=&quot;ProcessingInstruction&quot; /&gt;&lt;/term&gt;&lt;description&gt; The entire content, excluding the target.&lt;/description&gt;&lt;/item&gt;&lt;item&gt;&lt;term&gt;&lt;see langword=&quot;SignificantWhitespace&quot; /&gt;&lt;/term&gt;&lt;description&gt; The white space between markup in a mixed content model.&lt;/description&gt;&lt;/item&gt;&lt;item&gt;&lt;term&gt;&lt;see langword=&quot;Text&quot; /&gt;&lt;/term&gt;&lt;description&gt; The content of the text node.&lt;/description&gt;&lt;/item&gt;&lt;item&gt;&lt;term&gt;&lt;see langword=&quot;Whitespace&quot; /&gt;&lt;/term&gt;&lt;description&gt; The white space between markup.&lt;/description&gt;&lt;/item&gt;&lt;item&gt;&lt;term&gt;&lt;see langword=&quot;XmlDeclaration&quot; /&gt;&lt;/term&gt;&lt;description&gt; The content of the declaration.&lt;/description&gt;&lt;/item&gt;&lt;/list&gt;">La valeur retournée dépend du <see cref="P:System.Xml.XmlReader.NodeType" /> du nœud. Le tableau suivant répertorie les types de nœuds possédant une valeur de retour. Tous les autres types de nœuds retournent <see langword="String.Empty" />.  
  
 <list type="table"><listheader><term> Type de nœud</term><description> Value</description></listheader><item><term><see langword="Attribute" /></term><description> Valeur de l'attribut.</description></item><item><term><see langword="CDATA" /></term><description> Contenu de la section CDATA.</description></item><item><term><see langword="Comment" /></term><description> Contenu du commentaire.</description></item><item><term><see langword="DocumentType" /></term><description> Sous-ensemble interne.</description></item><item><term><see langword="ProcessingInstruction" /></term><description> Contenu entier, cible exclue.</description></item><item><term><see langword="SignificantWhitespace" /></term><description> Espace blanc entre les balisages dans un modèle de contenu mixte.</description></item><item><term><see langword="Text" /></term><description> Contenu du nœud de texte.</description></item><item><term><see langword="Whitespace" /></term><description> Espace blanc entre les balises.</description></item><item><term><see langword="XmlDeclaration" /></term><description> Contenu de la déclaration.</description></item></list></returns>
    </member>
    <member name="P:System.Xml.XmlReader.ValueType">
      <summary vsli:raw="Gets The Common Language Runtime (CLR) type for the current node.">Obtient le type de CLR du nœud actuel.</summary>
      <exception cref="T:System.InvalidOperationException" vsli:raw="An &lt;see cref=&quot;T:System.Xml.XmlReader&quot; /&gt; method was called before a previous asynchronous operation finished. In this case, &lt;see cref=&quot;T:System.InvalidOperationException&quot; /&gt; is thrown with the message &quot;An asynchronous operation is already in progress.&quot;">Une méthode <see cref="T:System.Xml.XmlReader" /> a été appelée avant la fin d’une opération asynchrone précédente. Dans ce cas, l’exception <see cref="T:System.InvalidOperationException" /> est levée avec le message « Une opération asynchrone est déjà en cours ».</exception>
      <returns vsli:raw="The CLR type that corresponds to the typed value of the node. The default is &lt;see langword=&quot;System.String&quot; /&gt;.">Type CLR qui correspond à la valeur typée du nœud. La valeur par défaut est <see langword="System.String" />.</returns>
    </member>
    <member name="P:System.Xml.XmlReader.XmlLang">
      <summary vsli:raw="When overridden in a derived class, gets the current &lt;see langword=&quot;xml:lang&quot; /&gt; scope.">En cas de substitution dans une classe dérivée, obtient la portée <see langword="xml:lang" /> en cours.</summary>
      <exception cref="T:System.InvalidOperationException" vsli:raw="An &lt;see cref=&quot;T:System.Xml.XmlReader&quot; /&gt; method was called before a previous asynchronous operation finished. In this case, &lt;see cref=&quot;T:System.InvalidOperationException&quot; /&gt; is thrown with the message &quot;An asynchronous operation is already in progress.&quot;">Une méthode <see cref="T:System.Xml.XmlReader" /> a été appelée avant la fin d’une opération asynchrone précédente. Dans ce cas, l’exception <see cref="T:System.InvalidOperationException" /> est levée avec le message « Une opération asynchrone est déjà en cours ».</exception>
      <returns vsli:raw="The current &lt;see langword=&quot;xml:lang&quot; /&gt; scope.">Portée de <see langword="xml:lang" /> actuelle.</returns>
    </member>
    <member name="P:System.Xml.XmlReader.XmlSpace">
      <summary vsli:raw="When overridden in a derived class, gets the current &lt;see langword=&quot;xml:space&quot; /&gt; scope.">En cas de substitution dans une classe dérivée, obtient la portée <see langword="xml:space" /> en cours.</summary>
      <exception cref="T:System.InvalidOperationException" vsli:raw="An &lt;see cref=&quot;T:System.Xml.XmlReader&quot; /&gt; method was called before a previous asynchronous operation finished. In this case, &lt;see cref=&quot;T:System.InvalidOperationException&quot; /&gt; is thrown with the message &quot;An asynchronous operation is already in progress.&quot;">Une méthode <see cref="T:System.Xml.XmlReader" /> a été appelée avant la fin d’une opération asynchrone précédente. Dans ce cas, l’exception <see cref="T:System.InvalidOperationException" /> est levée avec le message « Une opération asynchrone est déjà en cours ».</exception>
      <returns vsli:raw="One of the &lt;see cref=&quot;T:System.Xml.XmlSpace&quot; /&gt; values. If no &lt;see langword=&quot;xml:space&quot; /&gt; scope exists, this property defaults to &lt;see langword=&quot;XmlSpace.None&quot; /&gt;.">Une des valeurs de l'objet <see cref="T:System.Xml.XmlSpace" />. S'il n'existe pas de portée de <see langword="xml:space" />, cette propriété prend la valeur par défaut <see langword="XmlSpace.None" />.</returns>
    </member>
    <member name="T:System.Xml.XmlReaderSettings">
      <summary vsli:raw="Specifies a set of features to support on the &lt;see cref=&quot;T:System.Xml.XmlReader&quot; /&gt; object created by the &lt;see cref=&quot;Overload:System.Xml.XmlReader.Create&quot; /&gt; method.">Spécifie un jeu de fonctionnalités à prendre en charge sur l'objet <see cref="T:System.Xml.XmlReader" /> créé par la méthode <see cref="Overload:System.Xml.XmlReader.Create" />.</summary>
    </member>
    <member name="E:System.Xml.XmlReaderSettings.ValidationEventHandler">
      <summary vsli:raw="Occurs when the reader encounters validation errors.">Se produit quand le lecteur trouve des erreurs de validation.</summary>
    </member>
    <member name="M:System.Xml.XmlReaderSettings.#ctor">
      <summary vsli:raw="Initializes a new instance of the &lt;see cref=&quot;T:System.Xml.XmlReaderSettings&quot; /&gt; class.">Initialise une nouvelle instance de la classe <see cref="T:System.Xml.XmlReaderSettings" />.</summary>
    </member>
    <member name="M:System.Xml.XmlReaderSettings.Clone">
      <summary vsli:raw="Creates a copy of the &lt;see cref=&quot;T:System.Xml.XmlReaderSettings&quot; /&gt; instance.">Crée une copie de l'instance <see cref="T:System.Xml.XmlReaderSettings" />.</summary>
      <returns vsli:raw="The cloned &lt;see cref=&quot;T:System.Xml.XmlReaderSettings&quot; /&gt; object.">Objet <see cref="T:System.Xml.XmlReaderSettings" /> cloné.</returns>
    </member>
    <member name="M:System.Xml.XmlReaderSettings.Reset">
      <summary vsli:raw="Resets the members of the settings class to their default values.">Réinitialise les membres de la classe de paramètres à leurs valeurs par défaut.</summary>
    </member>
    <member name="P:System.Xml.XmlReaderSettings.Async">
      <summary vsli:raw="Gets or sets whether asynchronous &lt;see cref=&quot;T:System.Xml.XmlReader&quot; /&gt; methods can be used on a particular &lt;see cref=&quot;T:System.Xml.XmlReader&quot; /&gt; instance.">Obtient ou définit une valeur indiquant si les méthodes <see cref="T:System.Xml.XmlReader" /> asynchrones peuvent être utilisées sur une instance <see cref="T:System.Xml.XmlReader" /> particulière.</summary>
      <returns vsli:raw="&lt;see langword=&quot;true&quot; /&gt; if asynchronous methods can be used; otherwise, &lt;see langword=&quot;false&quot; /&gt;.">
        <see langword="true" /> si des méthodes asynchrones peuvent être utilisées ; sinon, <see langword="false" />.</returns>
    </member>
    <member name="P:System.Xml.XmlReaderSettings.CheckCharacters">
      <summary vsli:raw="Gets or sets a value indicating whether to do character checking.">Obtient ou définit une valeur indiquant si la vérification des caractères doit être assurée.</summary>
      <returns vsli:raw="&lt;see langword=&quot;true&quot; /&gt; to do character checking; otherwise &lt;see langword=&quot;false&quot; /&gt;. The default is &lt;see langword=&quot;true&quot; /&gt;.">
        <see langword="true" /> pour assurer la vérification des caractères ; sinon, <see langword="false" />. La valeur par défaut est <see langword="true" />.  
  
 <block subset="none" type="note"><para>  
 Si le <see cref="T:System.Xml.XmlReader" /> traite des données de texte, il vérifie toujours que les noms XML et le contenu de texte sont valides, indépendamment du paramètre de propriété. L'attribution à <see cref="P:System.Xml.XmlReaderSettings.CheckCharacters" /> de la valeur <see langword="false" /> désactive la vérification de caractères pour la recherche de références d'entité de caractère.</para></block></returns>
    </member>
    <member name="P:System.Xml.XmlReaderSettings.CloseInput">
      <summary vsli:raw="Gets or sets a value indicating whether the underlying stream or &lt;see cref=&quot;T:System.IO.TextReader&quot; /&gt; should be closed when the reader is closed.">Obtient ou définit une valeur indiquant si le flux sous-jacent ou <see cref="T:System.IO.TextReader" /> doit être fermé à la fermeture du lecteur.</summary>
      <returns vsli:raw="&lt;see langword=&quot;true&quot; /&gt; to close the underlying stream or &lt;see cref=&quot;T:System.IO.TextReader&quot; /&gt; when the reader is closed; otherwise &lt;see langword=&quot;false&quot; /&gt;. The default is &lt;see langword=&quot;false&quot; /&gt;.">
        <see langword="true" /> pour fermer le flux sous-jacent ou <see cref="T:System.IO.TextReader" /> à la fermeture du lecteur ; sinon <see langword="false" />. La valeur par défaut est <see langword="false" />.</returns>
    </member>
    <member name="P:System.Xml.XmlReaderSettings.ConformanceLevel">
      <summary vsli:raw="Gets or sets the level of conformance which the &lt;see cref=&quot;T:System.Xml.XmlReader&quot; /&gt; will comply.">Obtient ou définit le niveau de conformité que <see cref="T:System.Xml.XmlReader" /> respecte.</summary>
      <returns vsli:raw="One of the enumeration values that specifies the level of conformance that the XML reader will enforce. The default is &lt;see cref=&quot;F:System.Xml.ConformanceLevel.Document&quot; /&gt;.">Une des valeurs d'énumération qui spécifie le niveau de conformité appliqué par le lecteur XML. La valeur par défaut est <see cref="F:System.Xml.ConformanceLevel.Document" />.</returns>
    </member>
    <member name="P:System.Xml.XmlReaderSettings.DtdProcessing">
      <summary vsli:raw="Gets or sets a value that determines the processing of DTDs.">Obtient ou définit une valeur qui détermine le traitement des DTD.</summary>
      <returns vsli:raw="One of the enumeration values that determines the processing of DTDs. The default is &lt;see cref=&quot;F:System.Xml.DtdProcessing.Prohibit&quot; /&gt;.">L'une des valeurs d'énumération qui détermine le traitement des DTD. La valeur par défaut est <see cref="F:System.Xml.DtdProcessing.Prohibit" />.</returns>
    </member>
    <member name="P:System.Xml.XmlReaderSettings.IgnoreComments">
      <summary vsli:raw="Gets or sets a value indicating whether to ignore comments.">Obtient ou définit une valeur indiquant si les commentaires doivent être ignorés.</summary>
      <returns vsli:raw="&lt;see langword=&quot;true&quot; /&gt; to ignore comments; otherwise &lt;see langword=&quot;false&quot; /&gt;. The default is &lt;see langword=&quot;false&quot; /&gt;.">
        <see langword="true" /> pour ignorer les commentaires ; sinon <see langword="false" />. La valeur par défaut est <see langword="false" />.</returns>
    </member>
    <member name="P:System.Xml.XmlReaderSettings.IgnoreProcessingInstructions">
      <summary vsli:raw="Gets or sets a value indicating whether to ignore processing instructions.">Obtient ou définit une valeur indiquant si les instructions de traitement doivent être ignorées.</summary>
      <returns vsli:raw="&lt;see langword=&quot;true&quot; /&gt; to ignore processing instructions; otherwise &lt;see langword=&quot;false&quot; /&gt;. The default is &lt;see langword=&quot;false&quot; /&gt;.">
        <see langword="true" /> pour ignorer les instructions de traitement ; sinon <see langword="false" />. La valeur par défaut est <see langword="false" />.</returns>
    </member>
    <member name="P:System.Xml.XmlReaderSettings.IgnoreWhitespace">
      <summary vsli:raw="Gets or sets a value indicating whether to ignore insignificant white space.">Obtient ou définit une valeur indiquant si les espaces blancs non significatifs doivent être ignorés.</summary>
      <returns vsli:raw="&lt;see langword=&quot;true&quot; /&gt; to ignore white space; otherwise &lt;see langword=&quot;false&quot; /&gt;. The default is &lt;see langword=&quot;false&quot; /&gt;.">
        <see langword="true" /> pour ignorer l'espace blanc ; sinon <see langword="false" />. La valeur par défaut est <see langword="false" />.</returns>
    </member>
    <member name="P:System.Xml.XmlReaderSettings.LineNumberOffset">
      <summary vsli:raw="Gets or sets line number offset of the &lt;see cref=&quot;T:System.Xml.XmlReader&quot; /&gt; object.">Obtient ou définit l'offset du numéro de ligne de l'objet <see cref="T:System.Xml.XmlReader" />.</summary>
      <returns vsli:raw="The line number offset. The default is 0.">Offset de numéro de ligne. La valeur par défaut est 0.</returns>
    </member>
    <member name="P:System.Xml.XmlReaderSettings.LinePositionOffset">
      <summary vsli:raw="Gets or sets line position offset of the &lt;see cref=&quot;T:System.Xml.XmlReader&quot; /&gt; object.">Obtient ou définit l'offset de position de ligne de l'objet <see cref="T:System.Xml.XmlReader" />.</summary>
      <returns vsli:raw="The line position offset. The default is 0.">Décalage de position de ligne. La valeur par défaut est 0.</returns>
    </member>
    <member name="P:System.Xml.XmlReaderSettings.MaxCharactersFromEntities">
      <summary vsli:raw="Gets or sets a value indicating the maximum allowable number of characters in a document that result from expanding entities.">Obtient ou définit une valeur correspondant au nombre maximal autorisé de caractères dans un document, qui résultent du développement des entités.</summary>
      <returns vsli:raw="The maximum allowable number of characters from expanded entities. The default is 0.">Nombre maximal autorisé de caractères résultant du développement des entités. La valeur par défaut est 0.</returns>
    </member>
    <member name="P:System.Xml.XmlReaderSettings.MaxCharactersInDocument">
      <summary vsli:raw="Gets or sets a value indicating the maximum allowable number of characters in an XML document. A zero (0) value means no limits on the size of the XML document. A non-zero value specifies the maximum size, in characters.">Obtient ou définit une valeur correspondant au nombre maximal autorisé de caractères dans un document XML. Zéro (0) signifie que la taille du document XML n'est pas limitée. Une valeur non nulle spécifie la taille maximale, en caractères.</summary>
      <returns vsli:raw="The maximum allowable number of characters in an XML document. The default is 0.">Nombre maximal autorisé de caractères dans un document XML. La valeur par défaut est 0.</returns>
    </member>
    <member name="P:System.Xml.XmlReaderSettings.NameTable">
      <summary vsli:raw="Gets or sets the &lt;see cref=&quot;T:System.Xml.XmlNameTable&quot; /&gt; used for atomized string comparisons.">Obtient ou définit <see cref="T:System.Xml.XmlNameTable" /> servant aux comparaisons de chaînes atomisées.</summary>
      <returns vsli:raw="The &lt;see cref=&quot;T:System.Xml.XmlNameTable&quot; /&gt; that stores all the atomized strings used by all &lt;see cref=&quot;T:System.Xml.XmlReader&quot; /&gt; instances created using this &lt;see cref=&quot;T:System.Xml.XmlReaderSettings&quot; /&gt; object.  &#xA;  &#xA; The default is &lt;see langword=&quot;null&quot; /&gt;. The created &lt;see cref=&quot;T:System.Xml.XmlReader&quot; /&gt; instance will use a new empty &lt;see cref=&quot;T:System.Xml.NameTable&quot; /&gt; if this value is &lt;see langword=&quot;null&quot; /&gt;.">
        <see cref="T:System.Xml.XmlNameTable" /> qui stocke toutes les chaînes atomisées utilisées par toutes les instances <see cref="T:System.Xml.XmlReader" /> créées à l'aide de cet objet <see cref="T:System.Xml.XmlReaderSettings" />.  
  
La valeur par défaut est <see langword="null" />. L'instance de <see cref="T:System.Xml.XmlReader" /> créée utilisera un nouveau <see cref="T:System.Xml.NameTable" /> vide si cette valeur est <see langword="null" />.</returns>
    </member>
    <member name="P:System.Xml.XmlReaderSettings.ProhibitDtd">
      <summary vsli:raw="Gets or sets a value indicating whether to prohibit document type definition (DTD) processing. This property is obsolete. Use &lt;see cref=&quot;P:System.Xml.XmlTextReader.DtdProcessing&quot; /&gt; instead.">Obtient ou définit une valeur indiquant s'il convient d'interdire le traitement de la définition de type de document (DTD). Cette propriété est obsolète. Utilisez plutôt <see cref="P:System.Xml.XmlTextReader.DtdProcessing" />.</summary>
      <returns vsli:raw="&lt;see langword=&quot;true&quot; /&gt; to prohibit DTD processing; otherwise &lt;see langword=&quot;false&quot; /&gt;. The default is &lt;see langword=&quot;true&quot; /&gt;.">
        <see langword="true" /> pour interdire le traitement DTD ; sinon <see langword="false" />. La valeur par défaut est <see langword="true" />.</returns>
    </member>
    <member name="P:System.Xml.XmlReaderSettings.Schemas">
      <summary vsli:raw="Gets or sets the &lt;see cref=&quot;T:System.Xml.Schema.XmlSchemaSet&quot; /&gt; to use when performing schema validation.">Obtient ou définit le <see cref="T:System.Xml.Schema.XmlSchemaSet" /> à utiliser lors de la validation du schéma.</summary>
      <returns vsli:raw="The &lt;see cref=&quot;T:System.Xml.Schema.XmlSchemaSet&quot; /&gt; to use when performing schema validation. The default is an empty &lt;see cref=&quot;T:System.Xml.Schema.XmlSchemaSet&quot; /&gt; object.">
        <see cref="T:System.Xml.Schema.XmlSchemaSet" /> à utiliser lors de la validation de schéma. La valeur par défaut correspond à un objet <see cref="T:System.Xml.Schema.XmlSchemaSet" /> vide.</returns>
    </member>
    <member name="P:System.Xml.XmlReaderSettings.ValidationFlags">
      <summary vsli:raw="Gets or sets a value indicating the schema validation settings. This setting applies to &lt;see cref=&quot;T:System.Xml.XmlReader&quot; /&gt; objects that validate schemas (&lt;see cref=&quot;P:System.Xml.XmlReaderSettings.ValidationType&quot; /&gt; property set to &lt;see langword=&quot;ValidationType.Schema&quot; /&gt;).">Obtient ou définit une valeur indiquant les paramètres de validation du schéma. Ce paramètre s'applique aux objets <see cref="T:System.Xml.XmlReader" /> qui valident des schémas (propriété <see cref="P:System.Xml.XmlReaderSettings.ValidationType" /> définie avec la valeur <see langword="ValidationType.Schema" />).</summary>
      <returns vsli:raw="A bitwise combination of enumeration values that specify validation options. &lt;see cref=&quot;F:System.Xml.Schema.XmlSchemaValidationFlags.ProcessIdentityConstraints&quot; /&gt; and &lt;see cref=&quot;F:System.Xml.Schema.XmlSchemaValidationFlags.AllowXmlAttributes&quot; /&gt; are enabled by default. &lt;see cref=&quot;F:System.Xml.Schema.XmlSchemaValidationFlags.ProcessInlineSchema&quot; /&gt;, &lt;see cref=&quot;F:System.Xml.Schema.XmlSchemaValidationFlags.ProcessSchemaLocation&quot; /&gt;, and &lt;see cref=&quot;F:System.Xml.Schema.XmlSchemaValidationFlags.ReportValidationWarnings&quot; /&gt; are disabled by default.">Combinaison d’opérations de bits de valeurs d’énumération qui spécifient des options de validation. <see cref="F:System.Xml.Schema.XmlSchemaValidationFlags.ProcessIdentityConstraints" /> et <see cref="F:System.Xml.Schema.XmlSchemaValidationFlags.AllowXmlAttributes" /> sont activés par défaut. <see cref="F:System.Xml.Schema.XmlSchemaValidationFlags.ProcessInlineSchema" />, <see cref="F:System.Xml.Schema.XmlSchemaValidationFlags.ProcessSchemaLocation" /> et <see cref="F:System.Xml.Schema.XmlSchemaValidationFlags.ReportValidationWarnings" /> sont désactivés par défaut.</returns>
    </member>
    <member name="P:System.Xml.XmlReaderSettings.ValidationType">
      <summary vsli:raw="Gets or sets a value indicating whether the &lt;see cref=&quot;T:System.Xml.XmlReader&quot; /&gt; will perform validation or type assignment when reading.">Obtient ou définit une valeur indiquant si le <see cref="T:System.Xml.XmlReader" /> doit effectuer la validation ou l'assignation de type lors de la lecture.</summary>
      <returns vsli:raw="One of the &lt;see cref=&quot;T:System.Xml.ValidationType&quot; /&gt; values that indicates whether XmlReader will perform validation or type assignment when reading. The default is &lt;see langword=&quot;ValidationType.None&quot; /&gt;.">L'une des valeurs <see cref="T:System.Xml.ValidationType" /> qui indique si XmlReader exécute la validation ou l'assignation de type lors de la lecture. La valeur par défaut est <see langword="ValidationType.None" />.</returns>
    </member>
    <member name="P:System.Xml.XmlReaderSettings.XmlResolver">
      <summary vsli:raw="Sets the &lt;see cref=&quot;T:System.Xml.XmlResolver&quot; /&gt; used to access external documents.">Définit le <see cref="T:System.Xml.XmlResolver" /> permettant d'accéder aux documents externes.</summary>
      <returns vsli:raw="An &lt;see cref=&quot;T:System.Xml.XmlResolver&quot; /&gt; used to access external documents. If set to &lt;see langword=&quot;null&quot; /&gt;, an &lt;see cref=&quot;T:System.Xml.XmlException&quot; /&gt; is thrown when the &lt;see cref=&quot;T:System.Xml.XmlReader&quot; /&gt; tries to access an external resource. The default is a new &lt;see cref=&quot;T:System.Xml.XmlUrlResolver&quot; /&gt; with no credentials.  Starting with the .NET Framework 4.5.2, this setting has a default value of &lt;see langword=&quot;null&quot; /&gt;.">
        <see cref="T:System.Xml.XmlResolver" /> permettant d'accéder aux documents externes. Si sa valeur est <see langword="null" />, une <see cref="T:System.Xml.XmlException" /> est levée lorsque le <see cref="T:System.Xml.XmlReader" /> tente d'accéder à une ressource externe. La valeur par défaut est un nouveau <see cref="T:System.Xml.XmlUrlResolver" /> sans informations d'identification.  À partir du .NET Framework 4.5.2, la valeur par défaut de ce paramètre est <see langword="null" /> .</returns>
    </member>
    <member name="T:System.Xml.XmlResolver">
      <summary vsli:raw="Resolves external XML resources named by a Uniform Resource Identifier (URI).">Résout les ressources XML externes nommées par un URI (Uniform Resource Identifier).</summary>
    </member>
    <member name="M:System.Xml.XmlResolver.#ctor">
      <summary vsli:raw="Initializes a new instance of the &lt;see cref=&quot;T:System.Xml.XmlResolver&quot; /&gt; class.">Initialise une nouvelle instance de la classe <see cref="T:System.Xml.XmlResolver" />.</summary>
    </member>
    <member name="M:System.Xml.XmlResolver.GetEntity(System.Uri,System.String,System.Type)">
      <summary vsli:raw="When overridden in a derived class, maps a URI to an object that contains the actual resource.">En cas de substitution dans une classe dérivée, mappe un URI vers un objet qui contient la ressource réelle.</summary>
      <param name="absoluteUri" vsli:raw="The URI returned from &lt;see cref=&quot;M:System.Xml.XmlResolver.ResolveUri(System.Uri,System.String)&quot; /&gt;.">URI retourné par <see cref="M:System.Xml.XmlResolver.ResolveUri(System.Uri,System.String)" />.</param>
      <param name="role" vsli:raw="Currently not used.">Pas utilisé pour l’instant.</param>
      <param name="ofObjectToReturn" vsli:raw="The type of object to return. The current version only returns System.IO.Stream objects.">Type d'objet à retourner. La version actuelle ne retourne que les objets System.IO.Stream.</param>
      <exception cref="T:System.Xml.XmlException" vsli:raw="&lt;paramref name=&quot;ofObjectToReturn&quot; /&gt; is not a &lt;see langword=&quot;Stream&quot; /&gt; type.">
        <paramref name="ofObjectToReturn" /> n'est pas un type <see langword="Stream" />.</exception>
      <exception cref="T:System.UriFormatException" vsli:raw="The specified URI is not an absolute URI.">L'URI spécifié n'est pas un URI absolu.</exception>
      <exception cref="T:System.ArgumentNullException" vsli:raw="&lt;paramref name=&quot;absoluteUri&quot; /&gt; is &lt;see langword=&quot;null&quot; /&gt;.">
        <paramref name="absoluteUri" /> a la valeur <see langword="null" />.</exception>
      <exception cref="T:System.Exception" vsli:raw="There is a runtime error (for example, an interrupted server connection).">Une erreur d'exécution se produit (par exemple, une interruption de la connexion au serveur).</exception>
      <returns vsli:raw="A stream object or &lt;see langword=&quot;null&quot; /&gt; if a type other than stream is specified.">Objet de flux ou <see langword="null" /> si un type autre que stream est spécifié.</returns>
    </member>
    <member name="M:System.Xml.XmlResolver.GetEntityAsync(System.Uri,System.String,System.Type)">
      <summary vsli:raw="Asynchronously maps a URI to an object that contains the actual resource.">Mappe de façon asynchrone un URI vers un objet contenant la ressource réelle.</summary>
      <param name="absoluteUri" vsli:raw="The URI returned from &lt;see cref=&quot;M:System.Xml.XmlResolver.ResolveUri(System.Uri,System.String)&quot; /&gt;.">URI retourné par <see cref="M:System.Xml.XmlResolver.ResolveUri(System.Uri,System.String)" />.</param>
      <param name="role" vsli:raw="Currently not used.">Pas utilisé pour l’instant.</param>
      <param name="ofObjectToReturn" vsli:raw="The type of object to return. The current version only returns &lt;see cref=&quot;T:System.IO.Stream&quot; /&gt; objects.">Type d'objet à retourner. La version actuelle ne retourne que des objets <see cref="T:System.IO.Stream" />.</param>
      <returns vsli:raw="A stream object or &lt;see langword=&quot;null&quot; /&gt; if a type other than stream is specified.">Objet de flux ou <see langword="null" /> si un type autre que stream est spécifié.</returns>
    </member>
    <member name="M:System.Xml.XmlResolver.ResolveUri(System.Uri,System.String)">
      <summary vsli:raw="When overridden in a derived class, resolves the absolute URI from the base and relative URIs.">En cas de substitution dans une classe dérivée, résout l'URI absolu à partir de l'URI de base et de l'URI relatif.</summary>
      <param name="baseUri" vsli:raw="The base URI used to resolve the relative URI.">URI de base utilisé pour résoudre l'URI relatif.</param>
      <param name="relativeUri" vsli:raw="The URI to resolve. The URI can be absolute or relative. If absolute, this value effectively replaces the &lt;paramref name=&quot;baseUri&quot; /&gt; value. If relative, it combines with the &lt;paramref name=&quot;baseUri&quot; /&gt; to make an absolute URI.">URI à résoudre. L'URI peut être absolu ou relatif. S'il est absolu, cette valeur remplace effectivement la valeur de <paramref name="baseUri" />. S'il est relatif, il se combine à <paramref name="baseUri" /> pour produire un URI absolu.</param>
      <exception cref="T:System.ArgumentException" vsli:raw="&lt;paramref name=&quot;relativeUri&quot; /&gt; is &lt;see langword=&quot;null&quot; /&gt;.">
        <paramref name="relativeUri" /> a la valeur <see langword="null" />.</exception>
      <returns vsli:raw="The absolute URI or &lt;see langword=&quot;null&quot; /&gt; if the relative URI cannot be resolved.">URI absolu ou <see langword="null" /> si l'URI relatif ne peut pas être résolu.</returns>
    </member>
    <member name="M:System.Xml.XmlResolver.SupportsType(System.Uri,System.Type)">
      <summary vsli:raw="Enables the resolver to return types other than &lt;see cref=&quot;T:System.IO.Stream&quot; /&gt;.">Permet au programme de résolution de retourner d’autres types que <see cref="T:System.IO.Stream" />.</summary>
      <param name="absoluteUri" vsli:raw="The URI.">URI.</param>
      <param name="type" vsli:raw="The type to return.">Type à retourner.</param>
      <returns vsli:raw="&lt;see langword=&quot;true&quot; /&gt; if the &lt;paramref name=&quot;type&quot; /&gt; is supported; otherwise, &lt;see langword=&quot;false&quot; /&gt;.">
        <see langword="true" /> si le <paramref name="type" /> est pris en charge ; sinon <see langword="false" />.</returns>
    </member>
    <member name="P:System.Xml.XmlResolver.Credentials">
      <summary vsli:raw="When overridden in a derived class, sets the credentials used to authenticate web requests.">En cas de substitution dans une classe dérivée, définit les informations d'identification utilisées pour authentifier les demandes web.</summary>
      <returns vsli:raw="The credentials to be used to authenticate web requests. If this property is not set, the value defaults to &lt;see langword=&quot;null&quot; /&gt;; that is, the &lt;see langword=&quot;XmlResolver&quot; /&gt; has no user credentials.">Informations d'identification à utiliser pour authentifier les demandes web. Si cette propriété n'est pas définie, la valeur par défaut est <see langword="null" /> ; <see langword="XmlResolver" /> n'a donc pas d'informations d'identification d'utilisateur.</returns>
    </member>
    <member name="T:System.Xml.XmlSecureResolver">
      <summary vsli:raw="Helps to secure another implementation of &lt;see cref=&quot;T:System.Xml.XmlResolver&quot; /&gt; by wrapping the &lt;see cref=&quot;T:System.Xml.XmlResolver&quot; /&gt; object and restricting the resources that the underlying &lt;see cref=&quot;T:System.Xml.XmlResolver&quot; /&gt; has access to.">Aide à sécuriser une autre implémentation de <see cref="T:System.Xml.XmlResolver" /> en incluant dans un wrapper l'objet <see cref="T:System.Xml.XmlResolver" /> et en limitant les ressources auxquelles le <see cref="T:System.Xml.XmlResolver" /> sous-jacent a accès.</summary>
    </member>
    <member name="M:System.Xml.XmlSecureResolver.#ctor(System.Xml.XmlResolver,System.String)">
      <summary vsli:raw="Initializes a new instance of the &lt;see cref=&quot;T:System.Xml.XmlSecureResolver&quot; /&gt; class with the &lt;see cref=&quot;T:System.Xml.XmlResolver&quot; /&gt; and URL provided.">Initialise une nouvelle instance de la classe <see cref="T:System.Xml.XmlSecureResolver" /> avec le <see cref="T:System.Xml.XmlResolver" /> et l'URL spécifiés.</summary>
      <param name="resolver" vsli:raw="The XML resolver that is wrapped by the &lt;see cref=&quot;T:System.Xml.XmlSecureResolver&quot; /&gt;.">Programme de résolution XML inclus dans un wrapper par le <see cref="T:System.Xml.XmlSecureResolver" />.</param>
      <param name="securityUrl" vsli:raw="The URL used to create the &lt;see cref=&quot;T:System.Security.PermissionSet&quot; /&gt; that will be applied to the underlying &lt;see cref=&quot;T:System.Xml.XmlResolver&quot; /&gt;. The &lt;see cref=&quot;T:System.Xml.XmlSecureResolver&quot; /&gt; calls &lt;see cref=&quot;M:System.Security.PermissionSet.PermitOnly&quot; /&gt; on the created &lt;see cref=&quot;T:System.Security.PermissionSet&quot; /&gt; before calling &lt;see cref=&quot;M:System.Xml.XmlSecureResolver.GetEntity(System.Uri,System.String,System.Type)&quot; /&gt; on the underlying &lt;see cref=&quot;T:System.Xml.XmlResolver&quot; /&gt;.">URL utilisée pour créer le <see cref="T:System.Security.PermissionSet" /> qui sera appliqué au <see cref="T:System.Xml.XmlResolver" /> sous-jacent. Le <see cref="T:System.Xml.XmlSecureResolver" /> appelle <see cref="M:System.Security.PermissionSet.PermitOnly" /> sur le <see cref="T:System.Security.PermissionSet" /> créé avant d'appeler <see cref="M:System.Xml.XmlSecureResolver.GetEntity(System.Uri,System.String,System.Type)" /> sur le <see cref="T:System.Xml.XmlResolver" /> sous-jacent.</param>
    </member>
    <member name="M:System.Xml.XmlSecureResolver.GetEntity(System.Uri,System.String,System.Type)">
      <summary vsli:raw="Maps a URI to an object that contains the actual resource. This method temporarily sets the &lt;see cref=&quot;T:System.Security.PermissionSet&quot; /&gt; created in the constructor by calling &lt;see cref=&quot;M:System.Security.PermissionSet.PermitOnly&quot; /&gt; before calling &lt;see langword=&quot;GetEntity&quot; /&gt; on the underlying &lt;see cref=&quot;T:System.Xml.XmlResolver&quot; /&gt; to open the resource.">Mappe un URI vers un objet contenant la ressource réelle. Cette méthode définit temporairement le <see cref="T:System.Security.PermissionSet" /> créé dans le constructeur en appelant <see cref="M:System.Security.PermissionSet.PermitOnly" /> avant d'appeler <see langword="GetEntity" /> sur le <see cref="T:System.Xml.XmlResolver" /> sous-jacent pour ouvrir la ressource.</summary>
      <param name="absoluteUri" vsli:raw="The URI that is returned from &lt;see cref=&quot;M:System.Xml.XmlSecureResolver.ResolveUri(System.Uri,System.String)&quot; /&gt;.">URI retourné par <see cref="M:System.Xml.XmlSecureResolver.ResolveUri(System.Uri,System.String)" />.</param>
      <param name="role" vsli:raw="Currently not used.">Pas utilisé pour l’instant.</param>
      <param name="ofObjectToReturn" vsli:raw="The type of object to return. The current version only returns &lt;see cref=&quot;T:System.IO.Stream&quot; /&gt; objects.">Type d'objet à retourner. La version actuelle ne retourne que des objets <see cref="T:System.IO.Stream" />.</param>
      <exception cref="T:System.Xml.XmlException" vsli:raw="&lt;paramref name=&quot;ofObjectToReturn&quot; /&gt; is neither &lt;see langword=&quot;null&quot; /&gt; nor a &lt;see cref=&quot;T:System.IO.Stream&quot; /&gt; type.&#xA;&#xA;-or-&#xA;&#xA;.NET 7 and later versions: In all cases.">
        <paramref name="ofObjectToReturn" /> n'est ni <see langword="null" /> ni un type <see cref="T:System.IO.Stream" />.</exception>
      <exception cref="T:System.UriFormatException" vsli:raw="The specified URI is not an absolute URI.">L'URI spécifié n'est pas un URI absolu.</exception>
      <exception cref="T:System.NullReferenceException" vsli:raw="&lt;paramref name=&quot;absoluteUri&quot; /&gt; is &lt;see langword=&quot;null&quot; /&gt;.">
        <paramref name="absoluteUri" /> a la valeur <see langword="null" />.</exception>
      <exception cref="T:System.Exception" vsli:raw="There is a run-time error (for example, an interrupted server connection).">Une erreur d'exécution se produit (par exemple, une interruption de la connexion au serveur).</exception>
      <returns vsli:raw="The stream returned by calling &lt;see langword=&quot;GetEntity&quot; /&gt; on the underlying &lt;see cref=&quot;T:System.Xml.XmlResolver&quot; /&gt;. If a type other than &lt;see cref=&quot;T:System.IO.Stream&quot; /&gt; is specified, the method returns &lt;see langword=&quot;null&quot; /&gt;.">Flux retourné en appelant <see langword="GetEntity" /> sur le <see cref="T:System.Xml.XmlResolver" /> sous-jacent. Si un type autre que <see cref="T:System.IO.Stream" /> est spécifié, la méthode retourne <see langword="null" />.</returns>
    </member>
    <member name="M:System.Xml.XmlSecureResolver.GetEntityAsync(System.Uri,System.String,System.Type)">
      <summary vsli:raw="Asynchronously maps a URI to an object that contains the actual resource.">Mappe de façon asynchrone un URI vers un objet contenant la ressource réelle.</summary>
      <param name="absoluteUri" vsli:raw="The URI returned from &lt;see cref=&quot;M:System.Xml.XmlSecureResolver.ResolveUri(System.Uri,System.String)&quot; /&gt;.">URI retourné par <see cref="M:System.Xml.XmlSecureResolver.ResolveUri(System.Uri,System.String)" />.</param>
      <param name="role" vsli:raw="Currently not used.">Pas utilisé pour l’instant.</param>
      <param name="ofObjectToReturn" vsli:raw="The type of object to return. The current version only returns &lt;see cref=&quot;T:System.IO.Stream&quot; /&gt; objects.">Type d'objet à retourner. La version actuelle ne retourne que des objets <see cref="T:System.IO.Stream" />.</param>
      <returns vsli:raw="The stream returned by calling &lt;see langword=&quot;GetEntity&quot; /&gt; on the underlying &lt;see cref=&quot;T:System.Xml.XmlResolver&quot; /&gt;. If a type other than &lt;see cref=&quot;T:System.IO.Stream&quot; /&gt; is specified, the method returns &lt;see langword=&quot;null&quot; /&gt;.">Flux retourné en appelant <see langword="GetEntity" /> sur le <see cref="T:System.Xml.XmlResolver" /> sous-jacent. Si un type autre que <see cref="T:System.IO.Stream" /> est spécifié, la méthode retourne <see langword="null" />.</returns>
    </member>
    <member name="M:System.Xml.XmlSecureResolver.ResolveUri(System.Uri,System.String)">
      <summary vsli:raw="Resolves the absolute URI from the base and relative URIs by calling &lt;see langword=&quot;ResolveUri&quot; /&gt; on the underlying &lt;see cref=&quot;T:System.Xml.XmlResolver&quot; /&gt;.">Résout l'URI absolu à partir des URI de base et relatifs en appelant <see langword="ResolveUri" /> sur le <see cref="T:System.Xml.XmlResolver" /> sous-jacent.</summary>
      <param name="baseUri" vsli:raw="The base URI used to resolve the relative URI.">URI de base utilisé pour résoudre l'URI relatif.</param>
      <param name="relativeUri" vsli:raw="The URI to resolve. The URI can be absolute or relative. If absolute, this value effectively replaces the &lt;paramref name=&quot;baseUri&quot; /&gt; value. If relative, it combines with the &lt;paramref name=&quot;baseUri&quot; /&gt; to make an absolute URI.">URI à résoudre. L'URI peut être absolu ou relatif. S'il est absolu, cette valeur remplace effectivement la valeur de <paramref name="baseUri" />. S'il est relatif, il se combine à <paramref name="baseUri" /> pour produire un URI absolu.</param>
      <exception cref="T:System.ArgumentException" vsli:raw="&lt;paramref name=&quot;relativeUri&quot; /&gt; is &lt;see langword=&quot;null&quot; /&gt;.">
        <paramref name="relativeUri" /> a la valeur <see langword="null" />.</exception>
      <returns vsli:raw="The absolute URI or &lt;see langword=&quot;null&quot; /&gt; if the relative URI cannot be resolved (returned by calling &lt;see langword=&quot;ResolveUri&quot; /&gt; on the underlying &lt;see cref=&quot;T:System.Xml.XmlResolver&quot; /&gt;).">URI absolu ou <see langword="null" /> si l'URI relatif ne peut pas être résolu (retourné en appelant <see langword="ResolveUri" /> sur le <see cref="T:System.Xml.XmlResolver" /> sous-jacent).</returns>
    </member>
    <member name="P:System.Xml.XmlSecureResolver.Credentials">
      <summary vsli:raw="Sets credentials used to authenticate web requests.">Définit les informations d'identification utilisées pour authentifier les demandes web.</summary>
      <returns vsli:raw="The credentials to be used to authenticate web requests. The &lt;see cref=&quot;T:System.Xml.XmlSecureResolver&quot; /&gt; sets the given credentials on the underlying &lt;see cref=&quot;T:System.Xml.XmlResolver&quot; /&gt;. If this property is not set, the value defaults to &lt;see langword=&quot;null&quot; /&gt;; that is, the &lt;see cref=&quot;T:System.Xml.XmlSecureResolver&quot; /&gt; has no user credentials.">Informations d'identification à utiliser pour authentifier les demandes web. Le <see cref="T:System.Xml.XmlSecureResolver" /> définit les informations d'identification fournies sur le <see cref="T:System.Xml.XmlResolver" /> sous-jacent. Si cette propriété n'est pas définie, la valeur par défaut est <see langword="null" /> ; <see cref="T:System.Xml.XmlSecureResolver" /> n'a donc pas d'informations d'identification d'utilisateur.</returns>
    </member>
    <member name="T:System.Xml.XmlSignificantWhitespace">
      <summary vsli:raw="Represents white space between markup in a mixed content node or white space within an xml:space= 'preserve' scope. This is also referred to as significant white space.">Représente un espace blanc entre le balisage d'un nœud de contenu mixte ou un espace blanc dans une portée xml:space= 'preserve'. Ceci est quelquefois appelé aussi espace blanc significatif.</summary>
    </member>
    <member name="M:System.Xml.XmlSignificantWhitespace.#ctor(System.String,System.Xml.XmlDocument)">
      <summary vsli:raw="Initializes a new instance of the &lt;see cref=&quot;T:System.Xml.XmlSignificantWhitespace&quot; /&gt; class.">Initialise une nouvelle instance de la classe <see cref="T:System.Xml.XmlSignificantWhitespace" />.</summary>
      <param name="strData" vsli:raw="The white space characters of the node.">Caractères d'espace blanc du nœud.</param>
      <param name="doc" vsli:raw="The &lt;see cref=&quot;T:System.Xml.XmlDocument&quot; /&gt; object.">Objet <see cref="T:System.Xml.XmlDocument" />.</param>
    </member>
    <member name="M:System.Xml.XmlSignificantWhitespace.CloneNode(System.Boolean)">
      <summary vsli:raw="Creates a duplicate of this node.">Crée un doublon de ce nœud.</summary>
      <param name="deep" vsli:raw="&lt;see langword=&quot;true&quot; /&gt; to recursively clone the subtree under the specified node; &lt;see langword=&quot;false&quot; /&gt; to clone only the node itself. For significant white space nodes, the cloned node always includes the data value, regardless of the parameter setting.">
        <see langword="true" /> pour cloner récursivement la sous-arborescence sous le nœud spécifié ; <see langword="false" /> pour cloner seulement le nœud lui-même. Pour les nœuds d'espace blanc significatif, le nœud cloné comporte toujours la valeur des données, quelle que soit la valeur du paramètre.</param>
      <returns vsli:raw="The cloned node.">Nœud cloné.</returns>
    </member>
    <member name="M:System.Xml.XmlSignificantWhitespace.WriteContentTo(System.Xml.XmlWriter)">
      <summary vsli:raw="Saves all the children of the node to the specified &lt;see cref=&quot;T:System.Xml.XmlWriter&quot; /&gt;.">Enregistre tous les enfants du nœud dans l’élément <see cref="T:System.Xml.XmlWriter" /> spécifié.</summary>
      <param name="w" vsli:raw="The &lt;see langword=&quot;XmlWriter&quot; /&gt; to which you want to save.">L'élément <see langword="XmlWriter" /> dans lequel vous voulez enregistrer.</param>
    </member>
    <member name="M:System.Xml.XmlSignificantWhitespace.WriteTo(System.Xml.XmlWriter)">
      <summary vsli:raw="Saves the node to the specified &lt;see cref=&quot;T:System.Xml.XmlWriter&quot; /&gt;.">Enregistre le nœud dans le <see cref="T:System.Xml.XmlWriter" /> spécifié.</summary>
      <param name="w" vsli:raw="The &lt;see langword=&quot;XmlWriter&quot; /&gt; to which you want to save.">L'élément <see langword="XmlWriter" /> dans lequel vous voulez enregistrer.</param>
    </member>
    <member name="P:System.Xml.XmlSignificantWhitespace.LocalName">
      <summary vsli:raw="Gets the local name of the node.">Obtient le nom local du nœud.</summary>
      <returns vsli:raw="For &lt;see langword=&quot;XmlSignificantWhitespace&quot; /&gt; nodes, this property returns &lt;see langword=&quot;#significant-whitespace&quot; /&gt;.">Pour les nœuds <see langword="XmlSignificantWhitespace" />, cette propriété retourne <see langword="#significant-whitespace" />.</returns>
    </member>
    <member name="P:System.Xml.XmlSignificantWhitespace.Name">
      <summary vsli:raw="Gets the qualified name of the node.">Obtient le nom qualifié du nœud.</summary>
      <returns vsli:raw="For &lt;see langword=&quot;XmlSignificantWhitespace&quot; /&gt; nodes, this property returns &lt;see langword=&quot;#significant-whitespace&quot; /&gt;.">Pour les nœuds <see langword="XmlSignificantWhitespace" />, cette propriété retourne <see langword="#significant-whitespace" />.</returns>
    </member>
    <member name="P:System.Xml.XmlSignificantWhitespace.NodeType">
      <summary vsli:raw="Gets the type of the current node.">Obtient le type du nœud actuel.</summary>
      <returns vsli:raw="For &lt;see langword=&quot;XmlSignificantWhitespace&quot; /&gt; nodes, this value is XmlNodeType.SignificantWhitespace.">Pour les nœuds <see langword="XmlSignificantWhitespace" />, cette valeur est XmlNodeType.SignificantWhitespace.</returns>
    </member>
    <member name="P:System.Xml.XmlSignificantWhitespace.ParentNode">
      <summary vsli:raw="Gets the parent of the current node.">Obtient le parent du nœud actuel.</summary>
      <returns vsli:raw="The &lt;see cref=&quot;T:System.Xml.XmlNode&quot; /&gt; parent node of the current node.">Nœud <see cref="T:System.Xml.XmlNode" /> parent du nœud actuel.</returns>
    </member>
    <member name="P:System.Xml.XmlSignificantWhitespace.PreviousText">
      <summary vsli:raw="Gets the text node that immediately precedes this node.">Obtient le nœud de texte qui précède immédiatement ce nœud.</summary>
      <returns vsli:raw="Returns &lt;see cref=&quot;T:System.Xml.XmlNode&quot; /&gt;.">Retourne <see cref="T:System.Xml.XmlNode" />.</returns>
    </member>
    <member name="P:System.Xml.XmlSignificantWhitespace.Value">
      <summary vsli:raw="Gets or sets the value of the node.">Obtient ou définit la valeur du nœud.</summary>
      <exception cref="T:System.ArgumentException" vsli:raw="Setting &lt;see langword=&quot;Value&quot; /&gt; to invalid white space characters.">Affectation d'espaces blancs non valides à <see langword="Value" />.</exception>
      <returns vsli:raw="The white space characters found in the node.">Caractères d'espace blanc trouvés dans le nœud.</returns>
    </member>
    <member name="T:System.Xml.XmlSpace">
      <summary vsli:raw="Specifies the current &lt;see langword=&quot;xml:space&quot; /&gt; scope.">Spécifie la portée <see langword="xml:space" /> en cours.</summary>
    </member>
    <member name="F:System.Xml.XmlSpace.Default">
      <summary vsli:raw="The &lt;see langword=&quot;xml:space&quot; /&gt; scope equals &lt;see langword=&quot;default&quot; /&gt;.">La portée <see langword="xml:space" /> est <see langword="default" />.</summary>
    </member>
    <member name="F:System.Xml.XmlSpace.None">
      <summary vsli:raw="No &lt;see langword=&quot;xml:space&quot; /&gt; scope.">Pas de portée <see langword="xml:space" />.</summary>
    </member>
    <member name="F:System.Xml.XmlSpace.Preserve">
      <summary vsli:raw="The &lt;see langword=&quot;xml:space&quot; /&gt; scope equals &lt;see langword=&quot;preserve&quot; /&gt;.">La portée <see langword="xml:space" /> est <see langword="preserve" />.</summary>
    </member>
    <member name="T:System.Xml.XmlText">
      <summary vsli:raw="Represents the text content of an element or attribute.">Représente le contenu texte d'un élément ou attribut.</summary>
    </member>
    <member name="M:System.Xml.XmlText.#ctor(System.String,System.Xml.XmlDocument)">
      <summary vsli:raw="Initializes a new instance of the &lt;see cref=&quot;T:System.Xml.XmlText&quot; /&gt; class.">Initialise une nouvelle instance de la classe <see cref="T:System.Xml.XmlText" />.</summary>
      <param name="strData" vsli:raw="The content of the node; see the &lt;see cref=&quot;P:System.Xml.XmlText.Value&quot; /&gt; property.">Contenu du nœud ; consultez la propriété <see cref="P:System.Xml.XmlText.Value" />.</param>
      <param name="doc" vsli:raw="The parent XML document.">Document XML parent.</param>
    </member>
    <member name="M:System.Xml.XmlText.CloneNode(System.Boolean)">
      <summary vsli:raw="Creates a duplicate of this node.">Crée un doublon de ce nœud.</summary>
      <param name="deep" vsli:raw="&lt;see langword=&quot;true&quot; /&gt; to recursively clone the subtree under the specified node; &lt;see langword=&quot;false&quot; /&gt; to clone only the node itself.">
        <see langword="true" /> pour cloner récursivement la sous-arborescence sous le nœud spécifié ; <see langword="false" /> pour cloner seulement le nœud lui-même.</param>
      <returns vsli:raw="The cloned node.">Nœud cloné.</returns>
    </member>
    <member name="M:System.Xml.XmlText.SplitText(System.Int32)">
      <summary vsli:raw="Splits the node into two nodes at the specified offset, keeping both in the tree as siblings.">Fractionne le nœud en deux nœuds frères au niveau de l’offset spécifié ; ils sont conservés tous les deux dans l’arborescence.</summary>
      <param name="offset" vsli:raw="The offset at which to split the node.">Offset au niveau duquel diviser le nœud.</param>
      <returns vsli:raw="The new node.">Nouveau nœud.</returns>
    </member>
    <member name="M:System.Xml.XmlText.WriteContentTo(System.Xml.XmlWriter)">
      <summary vsli:raw="Saves all the children of the node to the specified &lt;see cref=&quot;T:System.Xml.XmlWriter&quot; /&gt;. &lt;see langword=&quot;XmlText&quot; /&gt; nodes do not have children, so this method has no effect.">Enregistre tous les enfants du nœud dans l’élément <see cref="T:System.Xml.XmlWriter" /> spécifié. Les nœuds <see langword="XmlText" /> n'ayant pas d'enfants, cette méthode n'a pas d'effet.</summary>
      <param name="w" vsli:raw="The &lt;see langword=&quot;XmlWriter&quot; /&gt; to which you want to save.">L'élément <see langword="XmlWriter" /> dans lequel vous voulez enregistrer.</param>
    </member>
    <member name="M:System.Xml.XmlText.WriteTo(System.Xml.XmlWriter)">
      <summary vsli:raw="Saves the node to the specified &lt;see cref=&quot;T:System.Xml.XmlWriter&quot; /&gt;.">Enregistre le nœud dans le <see cref="T:System.Xml.XmlWriter" /> spécifié.</summary>
      <param name="w" vsli:raw="The &lt;see langword=&quot;XmlWriter&quot; /&gt; to which you want to save.">L'élément <see langword="XmlWriter" /> dans lequel vous voulez enregistrer.</param>
    </member>
    <member name="P:System.Xml.XmlText.LocalName">
      <summary vsli:raw="Gets the local name of the node.">Obtient le nom local du nœud.</summary>
      <returns vsli:raw="For text nodes, this property returns &lt;see langword=&quot;#text&quot; /&gt;.">Pour les nœuds de texte, cette propriété retourne <see langword="#text" />.</returns>
    </member>
    <member name="P:System.Xml.XmlText.Name">
      <summary vsli:raw="Gets the qualified name of the node.">Obtient le nom qualifié du nœud.</summary>
      <returns vsli:raw="For text nodes, this property returns &lt;see langword=&quot;#text&quot; /&gt;.">Pour les nœuds de texte, cette propriété retourne <see langword="#text" />.</returns>
    </member>
    <member name="P:System.Xml.XmlText.NodeType">
      <summary vsli:raw="Gets the type of the current node.">Obtient le type du nœud actuel.</summary>
      <returns vsli:raw="For text nodes, this value is XmlNodeType.Text.">Pour les nœuds de texte, cette valeur est XmlNodeType.Text.</returns>
    </member>
    <member name="P:System.Xml.XmlText.ParentNode">
      <summary vsli:raw="Gets the parent of this node (for nodes that can have parents).">Obtient le parent de ce nœud (pour les nœuds qui peuvent avoir des parents).</summary>
      <returns vsli:raw="The &lt;see langword=&quot;XmlNode&quot; /&gt; that is the parent of the current node. If a node has just been created and not yet added to the tree, or if it has been removed from the tree, the parent is &lt;see langword=&quot;null&quot; /&gt;. For all other nodes, the value returned depends on the &lt;see cref=&quot;P:System.Xml.XmlNode.NodeType&quot; /&gt; of the node. The following table describes the possible return values for the &lt;see langword=&quot;ParentNode&quot; /&gt; property.">
        <see langword="XmlNode" /> correspondant au parent du nœud actif. Si un nœud vient d’être créé mais qu’il n’a pas encore été ajouté à l’arborescence, ou s’il a été supprimé de celle-ci, le parent est <see langword="null" />. Pour tous les autres nœuds, la valeur retournée dépend du <see cref="P:System.Xml.XmlNode.NodeType" /> du nœud. Le tableau suivant décrit les différentes valeurs de retour possibles pour la propriété <see langword="ParentNode" />.</returns>
    </member>
    <member name="P:System.Xml.XmlText.PreviousText">
      <summary vsli:raw="Gets the text node that immediately precedes this node.">Obtient le nœud de texte qui précède immédiatement ce nœud.</summary>
      <returns vsli:raw="Returns &lt;see cref=&quot;T:System.Xml.XmlNode&quot; /&gt;.">Retourne <see cref="T:System.Xml.XmlNode" />.</returns>
    </member>
    <member name="P:System.Xml.XmlText.Value">
      <summary vsli:raw="Gets or sets the value of the node.">Obtient ou définit la valeur du nœud.</summary>
      <returns vsli:raw="The content of the text node.">Contenu du nœud de texte.</returns>
    </member>
    <member name="T:System.Xml.XmlTextReader">
      <summary vsli:raw="Represents a reader that provides fast, non-cached, forward-only access to XML data.  &#xA;  &#xA; Starting with the .NET Framework 2.0, we recommend that you use the &lt;see cref=&quot;T:System.Xml.XmlReader&quot; /&gt; class instead.">Représente un lecteur fournissant un accès rapide, non mis en cache et en avant uniquement vers les données XML.  
  
À compter de .NET Framework 2.0, nous vous recommandons d'utiliser plutôt la classe <see cref="T:System.Xml.XmlReader" />.</summary>
    </member>
    <member name="M:System.Xml.XmlTextReader.#ctor">
      <summary vsli:raw="Initializes a new instance of the &lt;see langword=&quot;XmlTextReader&quot; /&gt;.">Initialise une nouvelle instance de l'objet <see langword="XmlTextReader" />.</summary>
    </member>
    <member name="M:System.Xml.XmlTextReader.#ctor(System.IO.Stream)">
      <summary vsli:raw="Initializes a new instance of the &lt;see cref=&quot;T:System.Xml.XmlTextReader&quot; /&gt; class with the specified stream.">Initialise une nouvelle instance de la classe <see cref="T:System.Xml.XmlTextReader" /> avec le flux spécifié.</summary>
      <param name="input" vsli:raw="The stream containing the XML data to read.">Flux contenant les données XML à lire.</param>
      <exception cref="T:System.ArgumentNullException" vsli:raw="&lt;paramref name=&quot;input&quot; /&gt; is &lt;see langword=&quot;null&quot; /&gt;.">
        <paramref name="input" /> a la valeur <see langword="null" />.</exception>
    </member>
    <member name="M:System.Xml.XmlTextReader.#ctor(System.IO.Stream,System.Xml.XmlNameTable)">
      <summary vsli:raw="Initializes a new instance of the &lt;see cref=&quot;T:System.Xml.XmlTextReader&quot; /&gt; class with the specified stream and &lt;see cref=&quot;T:System.Xml.XmlNameTable&quot; /&gt;.">Initialise une nouvelle instance de la classe <see cref="T:System.Xml.XmlTextReader" /> avec le flux spécifié et <see cref="T:System.Xml.XmlNameTable" />.</summary>
      <param name="input" vsli:raw="The stream containing the XML data to read.">Flux contenant les données XML à lire.</param>
      <param name="nt" vsli:raw="The &lt;see langword=&quot;XmlNameTable&quot; /&gt; to use.">
        <see langword="XmlNameTable" /> à utiliser.</param>
      <exception cref="T:System.NullReferenceException" vsli:raw="The &lt;paramref name=&quot;input&quot; /&gt; or &lt;paramref name=&quot;nt&quot; /&gt; value is &lt;see langword=&quot;null&quot; /&gt;.">La valeur de <paramref name="input" /> ou de <paramref name="nt" /> est <see langword="null" />.</exception>
    </member>
    <member name="M:System.Xml.XmlTextReader.#ctor(System.IO.Stream,System.Xml.XmlNodeType,System.Xml.XmlParserContext)">
      <summary vsli:raw="Initializes a new instance of the &lt;see cref=&quot;T:System.Xml.XmlTextReader&quot; /&gt; class with the specified stream, &lt;see cref=&quot;T:System.Xml.XmlNodeType&quot; /&gt;, and &lt;see cref=&quot;T:System.Xml.XmlParserContext&quot; /&gt;.">Initialise une nouvelle instance de la classe <see cref="T:System.Xml.XmlTextReader" /> avec le flux spécifié, <see cref="T:System.Xml.XmlNodeType" /> et <see cref="T:System.Xml.XmlParserContext" />.</summary>
      <param name="xmlFragment" vsli:raw="The stream containing the XML fragment to parse.">Flux contenant le fragment XML à analyser.</param>
      <param name="fragType" vsli:raw="The &lt;see cref=&quot;T:System.Xml.XmlNodeType&quot; /&gt; of the XML fragment. This also determines what the fragment can contain. (See table below.)">
        <see cref="T:System.Xml.XmlNodeType" /> du fragment XML. Ceci détermine également ce que le fragment peut contenir. Consultez le tableau ci-dessous.</param>
      <param name="context" vsli:raw="The &lt;see cref=&quot;T:System.Xml.XmlParserContext&quot; /&gt; in which the &lt;paramref name=&quot;xmlFragment&quot; /&gt; is to be parsed. This includes the &lt;see cref=&quot;T:System.Xml.XmlNameTable&quot; /&gt; to use, encoding, namespace scope, the current &lt;c&gt;xml:lang&lt;/c&gt;, and the &lt;c&gt;xml:space&lt;/c&gt; scope.">
        <see cref="T:System.Xml.XmlParserContext" /> dans lequel <paramref name="xmlFragment" /> doit être analysé. Ceci inclut le <see cref="T:System.Xml.XmlNameTable" /> à utiliser, l’encodage, la portée de l’espace de noms, le <c>xml:lang</c> actuel et la portée <c>xml:space</c>.</param>
      <exception cref="T:System.Xml.XmlException" vsli:raw="&lt;paramref name=&quot;fragType&quot; /&gt; is not an Element, Attribute, or Document &lt;see langword=&quot;XmlNodeType&quot; /&gt;.">
        <paramref name="fragType" /> n'est pas un <see langword="XmlNodeType" /> Element, Attribute ou Document.</exception>
      <exception cref="T:System.ArgumentNullException" vsli:raw="&lt;paramref name=&quot;xmlFragment&quot; /&gt; is &lt;see langword=&quot;null&quot; /&gt;.">
        <paramref name="xmlFragment" /> a la valeur <see langword="null" />.</exception>
    </member>
    <member name="M:System.Xml.XmlTextReader.#ctor(System.IO.TextReader)">
      <summary vsli:raw="Initializes a new instance of the &lt;see cref=&quot;T:System.Xml.XmlTextReader&quot; /&gt; class with the specified &lt;see cref=&quot;T:System.IO.TextReader&quot; /&gt;.">Initialise une nouvelle instance de la classe <see cref="T:System.Xml.XmlTextReader" /> avec le <see cref="T:System.IO.TextReader" /> spécifié.</summary>
      <param name="input" vsli:raw="The &lt;see langword=&quot;TextReader&quot; /&gt; containing the XML data to read.">
        <see langword="TextReader" /> contenant les données XML à lire.</param>
    </member>
    <member name="M:System.Xml.XmlTextReader.#ctor(System.IO.TextReader,System.Xml.XmlNameTable)">
      <summary vsli:raw="Initializes a new instance of the &lt;see cref=&quot;T:System.Xml.XmlTextReader&quot; /&gt; class with the specified &lt;see cref=&quot;T:System.IO.TextReader&quot; /&gt; and &lt;see cref=&quot;T:System.Xml.XmlNameTable&quot; /&gt;.">Initialise une nouvelle instance de la classe <see cref="T:System.Xml.XmlTextReader" /> avec les <see cref="T:System.IO.TextReader" /> et <see cref="T:System.Xml.XmlNameTable" /> spécifiés.</summary>
      <param name="input" vsli:raw="The &lt;see langword=&quot;TextReader&quot; /&gt; containing the XML data to read.">
        <see langword="TextReader" /> contenant les données XML à lire.</param>
      <param name="nt" vsli:raw="The &lt;see langword=&quot;XmlNameTable&quot; /&gt; to use.">
        <see langword="XmlNameTable" /> à utiliser.</param>
      <exception cref="T:System.NullReferenceException" vsli:raw="The &lt;paramref name=&quot;nt&quot; /&gt; value is &lt;see langword=&quot;null&quot; /&gt;.">
        <paramref name="nt" /> a la valeur <see langword="null" />.</exception>
    </member>
    <member name="M:System.Xml.XmlTextReader.#ctor(System.String)">
      <summary vsli:raw="Initializes a new instance of the &lt;see cref=&quot;T:System.Xml.XmlTextReader&quot; /&gt; class with the specified file.">Initialise une nouvelle instance de la classe <see cref="T:System.Xml.XmlTextReader" /> avec le fichier spécifié.</summary>
      <param name="url" vsli:raw="The URL for the file containing the XML data. The &lt;see cref=&quot;P:System.Xml.XmlTextReader.BaseURI&quot; /&gt; is set to this value.">URL du fichier contenant les données XML. Cette valeur est affectée à la propriété <see cref="P:System.Xml.XmlTextReader.BaseURI" />.</param>
      <exception cref="T:System.IO.FileNotFoundException" vsli:raw="The specified file cannot be found.">Le fichier spécifié est introuvable.</exception>
      <exception cref="T:System.IO.DirectoryNotFoundException" vsli:raw="Part of the filename or directory cannot be found.">Une partie du nom de fichier ou de répertoire est introuvable.</exception>
      <exception cref="T:System.InvalidOperationException" vsli:raw="&lt;paramref name=&quot;url&quot; /&gt; is an empty string.">
        <paramref name="url" /> est une chaîne vide.</exception>
      <exception cref="T:System.Net.WebException" vsli:raw="The remote filename cannot be resolved.  &#xA;  &#xA; -or-  &#xA;  &#xA; An error occurred while processing the request.">Le nom de fichier distant ne peut pas être résolu.  
  
 - ou -  
  
 Une erreur s’est produite pendant le traitement de la requête.</exception>
      <exception cref="T:System.UriFormatException" vsli:raw="&lt;paramref name=&quot;url&quot; /&gt; is not a valid URI.">
        <paramref name="url" /> n'est pas un URI valide.</exception>
    </member>
    <member name="M:System.Xml.XmlTextReader.#ctor(System.String,System.IO.Stream)">
      <summary vsli:raw="Initializes a new instance of the &lt;see cref=&quot;T:System.Xml.XmlTextReader&quot; /&gt; class with the specified URL and stream.">Initialise une nouvelle instance de la classe <see cref="T:System.Xml.XmlTextReader" /> avec l'URL et le flux spécifiés.</summary>
      <param name="url" vsli:raw="The URL to use for resolving external resources. The &lt;see cref=&quot;P:System.Xml.XmlTextReader.BaseURI&quot; /&gt; is set to this value.">URL à utiliser pour résoudre les ressources externes. Cette valeur est affectée à la propriété <see cref="P:System.Xml.XmlTextReader.BaseURI" />.</param>
      <param name="input" vsli:raw="The stream containing the XML data to read.">Flux contenant les données XML à lire.</param>
      <exception cref="T:System.ArgumentNullException" vsli:raw="&lt;paramref name=&quot;input&quot; /&gt; is &lt;see langword=&quot;null&quot; /&gt;.">
        <paramref name="input" /> a la valeur <see langword="null" />.</exception>
    </member>
    <member name="M:System.Xml.XmlTextReader.#ctor(System.String,System.IO.Stream,System.Xml.XmlNameTable)">
      <summary vsli:raw="Initializes a new instance of the &lt;see cref=&quot;T:System.Xml.XmlTextReader&quot; /&gt; class with the specified URL, stream and &lt;see cref=&quot;T:System.Xml.XmlNameTable&quot; /&gt;.">Initialise une nouvelle instance de la classe <see cref="T:System.Xml.XmlTextReader" /> avec l'URL, le flux et le <see cref="T:System.Xml.XmlNameTable" /> spécifiés.</summary>
      <param name="url" vsli:raw="The URL to use for resolving external resources. The &lt;see cref=&quot;P:System.Xml.XmlTextReader.BaseURI&quot; /&gt; is set to this value. If &lt;paramref name=&quot;url&quot; /&gt; is &lt;see langword=&quot;null&quot; /&gt;, &lt;see langword=&quot;BaseURI&quot; /&gt; is set to &lt;see langword=&quot;String.Empty&quot; /&gt;.">URL à utiliser pour résoudre les ressources externes. Cette valeur est affectée à la propriété <see cref="P:System.Xml.XmlTextReader.BaseURI" />. Si <paramref name="url" /> a la valeur <see langword="null" />, <see langword="BaseURI" /> a la valeur <see langword="String.Empty" />.</param>
      <param name="input" vsli:raw="The stream containing the XML data to read.">Flux contenant les données XML à lire.</param>
      <param name="nt" vsli:raw="The &lt;see langword=&quot;XmlNameTable&quot; /&gt; to use.">
        <see langword="XmlNameTable" /> à utiliser.</param>
      <exception cref="T:System.NullReferenceException" vsli:raw="The &lt;paramref name=&quot;input&quot; /&gt; or &lt;paramref name=&quot;nt&quot; /&gt; value is &lt;see langword=&quot;null&quot; /&gt;.">La valeur de <paramref name="input" /> ou de <paramref name="nt" /> est <see langword="null" />.</exception>
    </member>
    <member name="M:System.Xml.XmlTextReader.#ctor(System.String,System.IO.TextReader)">
      <summary vsli:raw="Initializes a new instance of the &lt;see cref=&quot;T:System.Xml.XmlTextReader&quot; /&gt; class with the specified URL and &lt;see cref=&quot;T:System.IO.TextReader&quot; /&gt;.">Initialise une nouvelle instance de la classe <see cref="T:System.Xml.XmlTextReader" /> avec l'URL et le <see cref="T:System.IO.TextReader" /> spécifiés.</summary>
      <param name="url" vsli:raw="The URL to use for resolving external resources. The &lt;see cref=&quot;P:System.Xml.XmlTextReader.BaseURI&quot; /&gt; is set to this value.">URL à utiliser pour résoudre les ressources externes. Cette valeur est affectée à la propriété <see cref="P:System.Xml.XmlTextReader.BaseURI" />.</param>
      <param name="input" vsli:raw="The &lt;see langword=&quot;TextReader&quot; /&gt; containing the XML data to read.">
        <see langword="TextReader" /> contenant les données XML à lire.</param>
    </member>
    <member name="M:System.Xml.XmlTextReader.#ctor(System.String,System.IO.TextReader,System.Xml.XmlNameTable)">
      <summary vsli:raw="Initializes a new instance of the &lt;see cref=&quot;T:System.Xml.XmlTextReader&quot; /&gt; class with the specified URL, &lt;see cref=&quot;T:System.IO.TextReader&quot; /&gt; and &lt;see cref=&quot;T:System.Xml.XmlNameTable&quot; /&gt;.">Initialise une nouvelle instance de la classe <see cref="T:System.Xml.XmlTextReader" /> avec l'URL, le <see cref="T:System.IO.TextReader" /> et le <see cref="T:System.Xml.XmlNameTable" /> spécifiés.</summary>
      <param name="url" vsli:raw="The URL to use for resolving external resources. The &lt;see cref=&quot;P:System.Xml.XmlTextReader.BaseURI&quot; /&gt; is set to this value. If &lt;paramref name=&quot;url&quot; /&gt; is &lt;see langword=&quot;null&quot; /&gt;, &lt;see langword=&quot;BaseURI&quot; /&gt; is set to &lt;see langword=&quot;String.Empty&quot; /&gt;.">URL à utiliser pour résoudre les ressources externes. Cette valeur est affectée à la propriété <see cref="P:System.Xml.XmlTextReader.BaseURI" />. Si <paramref name="url" /> a la valeur <see langword="null" />, <see langword="BaseURI" /> a la valeur <see langword="String.Empty" />.</param>
      <param name="input" vsli:raw="The &lt;see langword=&quot;TextReader&quot; /&gt; containing the XML data to read.">
        <see langword="TextReader" /> contenant les données XML à lire.</param>
      <param name="nt" vsli:raw="The &lt;see langword=&quot;XmlNameTable&quot; /&gt; to use.">
        <see langword="XmlNameTable" /> à utiliser.</param>
      <exception cref="T:System.ArgumentNullException" vsli:raw="The &lt;paramref name=&quot;nt&quot; /&gt; value is &lt;see langword=&quot;null&quot; /&gt;.">
        <paramref name="nt" /> a la valeur <see langword="null" />.</exception>
    </member>
    <member name="M:System.Xml.XmlTextReader.#ctor(System.String,System.Xml.XmlNameTable)">
      <summary vsli:raw="Initializes a new instance of the &lt;see cref=&quot;T:System.Xml.XmlTextReader&quot; /&gt; class with the specified file and &lt;see cref=&quot;T:System.Xml.XmlNameTable&quot; /&gt;.">Initialise une nouvelle instance de la classe <see cref="T:System.Xml.XmlTextReader" /> avec le fichier et le <see cref="T:System.Xml.XmlNameTable" /> spécifiés.</summary>
      <param name="url" vsli:raw="The URL for the file containing the XML data to read.">URL du fichier contenant les données XML à lire.</param>
      <param name="nt" vsli:raw="The &lt;see langword=&quot;XmlNameTable&quot; /&gt; to use.">
        <see langword="XmlNameTable" /> à utiliser.</param>
      <exception cref="T:System.NullReferenceException" vsli:raw="The &lt;paramref name=&quot;nt&quot; /&gt; value is &lt;see langword=&quot;null&quot; /&gt;.">
        <paramref name="nt" /> a la valeur <see langword="null" />.</exception>
      <exception cref="T:System.IO.FileNotFoundException" vsli:raw="The specified file cannot be found.">Le fichier spécifié est introuvable.</exception>
      <exception cref="T:System.IO.DirectoryNotFoundException" vsli:raw="Part of the filename or directory cannot be found.">Une partie du nom de fichier ou de répertoire est introuvable.</exception>
      <exception cref="T:System.InvalidOperationException" vsli:raw="&lt;paramref name=&quot;url&quot; /&gt; is an empty string.">
        <paramref name="url" /> est une chaîne vide.</exception>
      <exception cref="T:System.Net.WebException" vsli:raw="The remote filename cannot be resolved.  &#xA;  &#xA; -or-  &#xA;  &#xA; An error occurred while processing the request.">Le nom de fichier distant ne peut pas être résolu.  
  
 - ou -  
  
 Une erreur s’est produite pendant le traitement de la requête.</exception>
      <exception cref="T:System.UriFormatException" vsli:raw="&lt;paramref name=&quot;url&quot; /&gt; is not a valid URI.">
        <paramref name="url" /> n'est pas un URI valide.</exception>
    </member>
    <member name="M:System.Xml.XmlTextReader.#ctor(System.String,System.Xml.XmlNodeType,System.Xml.XmlParserContext)">
      <summary vsli:raw="Initializes a new instance of the &lt;see cref=&quot;T:System.Xml.XmlTextReader&quot; /&gt; class with the specified string, &lt;see cref=&quot;T:System.Xml.XmlNodeType&quot; /&gt;, and &lt;see cref=&quot;T:System.Xml.XmlParserContext&quot; /&gt;.">Initialise une nouvelle instance de la classe <see cref="T:System.Xml.XmlTextReader" /> avec la chaîne, le <see cref="T:System.Xml.XmlNodeType" /> et le <see cref="T:System.Xml.XmlParserContext" /> spécifiés.</summary>
      <param name="xmlFragment" vsli:raw="The string containing the XML fragment to parse.">Chaîne contenant le fragment XML à analyser.</param>
      <param name="fragType" vsli:raw="The &lt;see cref=&quot;T:System.Xml.XmlNodeType&quot; /&gt; of the XML fragment. This also determines what the fragment string can contain. (See table below.)">
        <see cref="T:System.Xml.XmlNodeType" /> du fragment XML. Ceci détermine également ce que la chaîne du fragment peut contenir. Consultez le tableau ci-dessous.</param>
      <param name="context" vsli:raw="The &lt;see cref=&quot;T:System.Xml.XmlParserContext&quot; /&gt; in which the &lt;paramref name=&quot;xmlFragment&quot; /&gt; is to be parsed. This includes the &lt;see cref=&quot;T:System.Xml.XmlNameTable&quot; /&gt; to use, encoding, namespace scope, the current &lt;c&gt;xml:lang&lt;/c&gt;, and the &lt;c&gt;xml:space&lt;/c&gt; scope.">
        <see cref="T:System.Xml.XmlParserContext" /> dans lequel <paramref name="xmlFragment" /> doit être analysé. Ceci inclut le <see cref="T:System.Xml.XmlNameTable" /> à utiliser, l’encodage, la portée de l’espace de noms, le <c>xml:lang</c> actuel et la portée <c>xml:space</c>.</param>
      <exception cref="T:System.Xml.XmlException" vsli:raw="&lt;paramref name=&quot;fragType&quot; /&gt; is not an &lt;see langword=&quot;Element&quot; /&gt;, &lt;see langword=&quot;Attribute&quot; /&gt;, or &lt;see langword=&quot;Document&quot; /&gt;&lt;see langword=&quot;XmlNodeType&quot; /&gt;.">
        <paramref name="fragType" /> n’est pas un <see langword="Element" />, <see langword="Attribute" /> ni un <see langword="Document" /><see langword="XmlNodeType" />.</exception>
      <exception cref="T:System.ArgumentNullException" vsli:raw="&lt;paramref name=&quot;xmlFragment&quot; /&gt; is &lt;see langword=&quot;null&quot; /&gt;.">
        <paramref name="xmlFragment" /> a la valeur <see langword="null" />.</exception>
    </member>
    <member name="M:System.Xml.XmlTextReader.#ctor(System.Xml.XmlNameTable)">
      <summary vsli:raw="Initializes a new instance of the &lt;see cref=&quot;T:System.Xml.XmlTextReader&quot; /&gt; class with the specified &lt;see cref=&quot;T:System.Xml.XmlNameTable&quot; /&gt;.">Initialise une nouvelle instance de la classe <see cref="T:System.Xml.XmlTextReader" /> avec le <see cref="T:System.Xml.XmlNameTable" /> spécifié.</summary>
      <param name="nt" vsli:raw="The &lt;see langword=&quot;XmlNameTable&quot; /&gt; to use.">
        <see langword="XmlNameTable" /> à utiliser.</param>
    </member>
    <member name="M:System.Xml.XmlTextReader.Close">
      <summary vsli:raw="Changes the &lt;see cref=&quot;P:System.Xml.XmlReader.ReadState&quot; /&gt; to &lt;see langword=&quot;Closed&quot; /&gt;.">Modifie <see cref="P:System.Xml.XmlReader.ReadState" /> en lui attribuant la valeur <see langword="Closed" />.</summary>
    </member>
    <member name="M:System.Xml.XmlTextReader.GetAttribute(System.Int32)">
      <summary vsli:raw="Gets the value of the attribute with the specified index.">Obtient la valeur de l'attribut avec l'index spécifié.</summary>
      <param name="i" vsli:raw="The index of the attribute. The index is zero-based. (The first attribute has index 0.)">Index de l'attribut. L'index est de base zéro. Le premier attribut possède l'index 0.</param>
      <exception cref="T:System.ArgumentOutOfRangeException" vsli:raw="The &lt;paramref name=&quot;i&quot; /&gt; parameter is less than 0 or greater than or equal to &lt;see cref=&quot;P:System.Xml.XmlTextReader.AttributeCount&quot; /&gt;.">Le paramètre <paramref name="i" /> est inférieur à 0 ou encore supérieur ou égal à <see cref="P:System.Xml.XmlTextReader.AttributeCount" />.</exception>
      <returns vsli:raw="The value of the specified attribute.">Valeur de l'attribut spécifié.</returns>
    </member>
    <member name="M:System.Xml.XmlTextReader.GetAttribute(System.String)">
      <summary vsli:raw="Gets the value of the attribute with the specified name.">Obtient la valeur de l'attribut avec le nom spécifié.</summary>
      <param name="name" vsli:raw="The qualified name of the attribute.">Nom qualifié de l'attribut.</param>
      <returns vsli:raw="The value of the specified attribute. If the attribute is not found, &lt;see langword=&quot;null&quot; /&gt; is returned.">Valeur de l'attribut spécifié. Si l'attribut est introuvable, <see langword="null" /> est retourné.</returns>
    </member>
    <member name="M:System.Xml.XmlTextReader.GetAttribute(System.String,System.String)">
      <summary vsli:raw="Gets the value of the attribute with the specified local name and namespace URI.">Obtient la valeur de l'attribut avec le nom local et l'URI de l'espace de noms spécifiés.</summary>
      <param name="localName" vsli:raw="The local name of the attribute.">Le nom local de l'attribut.</param>
      <param name="namespaceURI" vsli:raw="The namespace URI of the attribute.">L'URI de l'espace de noms de l'attribut.</param>
      <returns vsli:raw="The value of the specified attribute. If the attribute is not found, &lt;see langword=&quot;null&quot; /&gt; is returned. This method does not move the reader.">Valeur de l'attribut spécifié. Si l'attribut est introuvable, <see langword="null" /> est retourné. Cette méthode ne déplace pas le lecteur.</returns>
    </member>
    <member name="M:System.Xml.XmlTextReader.GetNamespacesInScope(System.Xml.XmlNamespaceScope)">
      <summary vsli:raw="Gets a collection that contains all namespaces currently in-scope.">Obtient une collection qui contient tous les espaces de noms actuellement dans la portée.</summary>
      <param name="scope" vsli:raw="An &lt;see cref=&quot;T:System.Xml.XmlNamespaceScope&quot; /&gt; value that specifies the type of namespace nodes to return.">Valeur de <see cref="T:System.Xml.XmlNamespaceScope" /> qui spécifie le type de nœuds d'espace de noms à retourner.</param>
      <returns vsli:raw="An &lt;see cref=&quot;T:System.Collections.IDictionary&quot; /&gt; object that contains all the current in-scope namespaces. If the reader is not positioned on an element, an empty dictionary (no namespaces) is returned.">Objet <see cref="T:System.Collections.IDictionary" /> qui contient tous les espaces de noms actuellement dans la portée. Si le lecteur n'est pas positionné sur un élément, un dictionnaire vide (aucun espace de noms) est retourné.</returns>
    </member>
    <member name="M:System.Xml.XmlTextReader.GetRemainder">
      <summary vsli:raw="Gets the remainder of the buffered XML.">Obtient le reste du contenu XML mis en mémoire tampon.</summary>
      <returns vsli:raw="A &lt;see cref=&quot;T:System.IO.TextReader&quot; /&gt; containing the remainder of the buffered XML.">
        <see cref="T:System.IO.TextReader" /> contenant le reste du contenu XML mis en mémoire tampon.</returns>
    </member>
    <member name="M:System.Xml.XmlTextReader.HasLineInfo">
      <summary vsli:raw="Gets a value indicating whether the class can return line information.">Obtient une valeur indiquant si la classe peut retourner des informations de ligne.</summary>
      <returns vsli:raw="&lt;see langword=&quot;true&quot; /&gt; if the class can return line information; otherwise, &lt;see langword=&quot;false&quot; /&gt;.">
        <see langword="true" /> si la classe peut retourner des informations de ligne ; sinon, <see langword="false" />.</returns>
    </member>
    <member name="M:System.Xml.XmlTextReader.LookupNamespace(System.String)">
      <summary vsli:raw="Resolves a namespace prefix in the current element's scope.">Résout un préfixe de l'espace de noms dans la portée de l'élément actuel.</summary>
      <param name="prefix" vsli:raw="The prefix whose namespace URI you want to resolve. To match the default namespace, pass an empty string. This string does not have to be atomized.">Préfixe dont vous souhaitez résoudre l'URI de l'espace de noms. Pour établir une correspondance avec l'espace de noms par défaut, passez une chaîne vide. Il n'est pas nécessaire d'atomiser cette chaîne.</param>
      <exception cref="T:System.ArgumentNullException" vsli:raw="The &lt;see cref=&quot;P:System.Xml.XmlTextReader.Namespaces&quot; /&gt; property is set to &lt;see langword=&quot;true&quot; /&gt; and the &lt;paramref name=&quot;prefix&quot; /&gt; value is &lt;see langword=&quot;null&quot; /&gt;.">La propriété <see cref="P:System.Xml.XmlTextReader.Namespaces" /> a la valeur <see langword="true" /> et <paramref name="prefix" /> est <see langword="null" />.</exception>
      <returns vsli:raw="The namespace URI to which the prefix maps or &lt;see langword=&quot;null&quot; /&gt; if no matching prefix is found.">URI de l'espace de noms vers lequel le préfixe est mappé ou <see langword="null" /> si aucun préfixe correspondant n'est trouvé.</returns>
    </member>
    <member name="M:System.Xml.XmlTextReader.MoveToAttribute(System.Int32)">
      <summary vsli:raw="Moves to the attribute with the specified index.">Se déplace vers l'attribut avec l'index spécifié.</summary>
      <param name="i" vsli:raw="The index of the attribute.">Index de l'attribut.</param>
      <exception cref="T:System.ArgumentOutOfRangeException" vsli:raw="The &lt;paramref name=&quot;i&quot; /&gt; parameter is less than 0 or greater than or equal to &lt;see cref=&quot;P:System.Xml.XmlReader.AttributeCount&quot; /&gt;.">Le paramètre <paramref name="i" /> est inférieur à 0 ou encore supérieur ou égal à <see cref="P:System.Xml.XmlReader.AttributeCount" />.</exception>
    </member>
    <member name="M:System.Xml.XmlTextReader.MoveToAttribute(System.String)">
      <summary vsli:raw="Moves to the attribute with the specified name.">Se déplace vers l'attribut avec le nom spécifié.</summary>
      <param name="name" vsli:raw="The qualified name of the attribute.">Nom qualifié de l'attribut.</param>
      <returns vsli:raw="&lt;see langword=&quot;true&quot; /&gt; if the attribute is found; otherwise, &lt;see langword=&quot;false&quot; /&gt;. If &lt;see langword=&quot;false&quot; /&gt;, the reader's position does not change.">
        <see langword="true" /> si l'attribut est trouvé ; sinon, <see langword="false" />. Si la valeur est <see langword="false" />, la position du lecteur ne change pas.</returns>
    </member>
    <member name="M:System.Xml.XmlTextReader.MoveToAttribute(System.String,System.String)">
      <summary vsli:raw="Moves to the attribute with the specified local name and namespace URI.">Se déplace vers l'attribut avec le nom local et l'URI d'espace de noms spécifiés.</summary>
      <param name="localName" vsli:raw="The local name of the attribute.">Le nom local de l'attribut.</param>
      <param name="namespaceURI" vsli:raw="The namespace URI of the attribute.">L'URI de l'espace de noms de l'attribut.</param>
      <returns vsli:raw="&lt;see langword=&quot;true&quot; /&gt; if the attribute is found; otherwise, &lt;see langword=&quot;false&quot; /&gt;. If &lt;see langword=&quot;false&quot; /&gt;, the reader's position does not change.">
        <see langword="true" /> si l'attribut est trouvé ; sinon, <see langword="false" />. Si la valeur est <see langword="false" />, la position du lecteur ne change pas.</returns>
    </member>
    <member name="M:System.Xml.XmlTextReader.MoveToElement">
      <summary vsli:raw="Moves to the element that contains the current attribute node.">Se déplace vers l'élément contenant le nœud d'attribut actuel.</summary>
      <returns vsli:raw="&lt;see langword=&quot;true&quot; /&gt; if the reader is positioned on an attribute (the reader moves to the element that owns the attribute); &lt;see langword=&quot;false&quot; /&gt; if the reader is not positioned on an attribute (the position of the reader does not change).">
        <see langword="true" /> si le lecteur est placé sur un attribut (le lecteur se déplace vers l'élément qui possède l'attribut) ; <see langword="false" /> si le lecteur n'est pas placé sur un attribut (la position du lecteur ne change pas).</returns>
    </member>
    <member name="M:System.Xml.XmlTextReader.MoveToFirstAttribute">
      <summary vsli:raw="Moves to the first attribute.">Effectue un déplacement vers le premier attribut.</summary>
      <returns vsli:raw="&lt;see langword=&quot;true&quot; /&gt; if an attribute exists (the reader moves to the first attribute); otherwise, &lt;see langword=&quot;false&quot; /&gt; (the position of the reader does not change).">
        <see langword="true" /> si un attribut existe (le lecteur se déplace vers le premier attribut) ; sinon, <see langword="false" /> (la position du lecteur ne change pas).</returns>
    </member>
    <member name="M:System.Xml.XmlTextReader.MoveToNextAttribute">
      <summary vsli:raw="Moves to the next attribute.">Effectue un déplacement vers l'attribut suivant.</summary>
      <returns vsli:raw="&lt;see langword=&quot;true&quot; /&gt; if there is a next attribute; &lt;see langword=&quot;false&quot; /&gt; if there are no more attributes.">
        <see langword="true" /> s'il existe un attribut suivant ; <see langword="false" /> s'il n'existe plus d'attributs.</returns>
    </member>
    <member name="M:System.Xml.XmlTextReader.Read">
      <summary vsli:raw="Reads the next node from the stream.">Lit le nœud suivant du flux.</summary>
      <exception cref="T:System.Xml.XmlException" vsli:raw="An error occurred while parsing the XML.">Une erreur s’est produite lors de l’analyse du XML.</exception>
      <returns vsli:raw="&lt;see langword=&quot;true&quot; /&gt; if the next node was read successfully; &lt;see langword=&quot;false&quot; /&gt; if there are no more nodes to read.">
        <see langword="true" /> si le nœud suivant a été lu correctement ; <see langword="false" /> s'il n'y a plus de nœuds à lire.</returns>
    </member>
    <member name="M:System.Xml.XmlTextReader.ReadAttributeValue">
      <summary vsli:raw="Parses the attribute value into one or more &lt;see langword=&quot;Text&quot; /&gt;, &lt;see langword=&quot;EntityReference&quot; /&gt;, or &lt;see langword=&quot;EndEntity&quot; /&gt; nodes.">Analyse la valeur d'attribut selon un ou plusieurs nœuds <see langword="Text" />, <see langword="EntityReference" /> ou <see langword="EndEntity" />.</summary>
      <returns vsli:raw="&lt;see langword=&quot;true&quot; /&gt; if there are nodes to return.  &#xA;  &#xA; &lt;see langword=&quot;false&quot; /&gt; if the reader is not positioned on an attribute node when the initial call is made or if all the attribute values have been read.  &#xA;  &#xA; An empty attribute, such as, &lt;c&gt;misc=&quot;&quot;&lt;/c&gt;, returns &lt;see langword=&quot;true&quot; /&gt; with a single node with a value of &lt;see langword=&quot;String.Empty&quot; /&gt;.">
        <see langword="true" /> s'il y a des nœuds à retourner.  
  
 <see langword="false" /> si le lecteur n'est pas placé sur un nœud d'attribut quand l'appel initial est effectué ou si toutes les valeurs d'attributs ont été lues.  
  
Un attribut vide, tel que <c>misc=""</c>, retourne <see langword="true" /> avec un nœud unique et la valeur <see langword="String.Empty" />.</returns>
    </member>
    <member name="M:System.Xml.XmlTextReader.ReadBase64(System.Byte[],System.Int32,System.Int32)">
      <summary vsli:raw="Decodes Base64 and returns the decoded binary bytes.">Décode Base64 et retourne les octets binaires décodés.</summary>
      <param name="array" vsli:raw="The array of characters that serves as the buffer to which the text contents are written.">Tableau de caractères servant de mémoire tampon dans laquelle le texte est écrit.</param>
      <param name="offset" vsli:raw="The zero-based index into the array specifying where the method can begin to write to the buffer.">Index de base zéro dans le tableau spécifiant à partir d'où la méthode peut écrire dans la mémoire tampon.</param>
      <param name="len" vsli:raw="The number of bytes to write into the buffer.">Nombre d'octets à écrire dans la mémoire tampon.</param>
      <exception cref="T:System.Xml.XmlException" vsli:raw="The Base64 sequence is not valid.">La séquence Base64 est non valide.</exception>
      <exception cref="T:System.ArgumentNullException" vsli:raw="The value of &lt;paramref name=&quot;array&quot; /&gt; is &lt;see langword=&quot;null&quot; /&gt;.">La valeur de <paramref name="array" /> est <see langword="null" />.</exception>
      <exception cref="T:System.ArgumentOutOfRangeException" vsli:raw="&lt;paramref name=&quot;offset&quot; /&gt; &amp;lt; 0, or &lt;paramref name=&quot;len&quot; /&gt; &amp;lt; 0, or &lt;paramref name=&quot;len&quot; /&gt; &amp;gt; &lt;paramref name=&quot;array&quot; /&gt;.Length- &lt;paramref name=&quot;offset&quot; /&gt;.">
        <paramref name="offset" /> &lt; 0, ou <paramref name="len" /> &lt; 0, ou <paramref name="len" /> &gt; <paramref name="array" />.Length- <paramref name="offset" />.</exception>
      <returns vsli:raw="The number of bytes written to the buffer.">Nombre d'octets écrits dans la mémoire tampon.</returns>
    </member>
    <member name="M:System.Xml.XmlTextReader.ReadBinHex(System.Byte[],System.Int32,System.Int32)">
      <summary vsli:raw="Decodes &lt;see langword=&quot;BinHex&quot; /&gt; and returns the decoded binary bytes.">Décode <see langword="BinHex" /> et retourne les octets binaires décodés.</summary>
      <param name="array" vsli:raw="The byte array that serves as the buffer to which the decoded binary bytes are written.">Tableau d'octets qui sert de mémoire tampon dans laquelle les octets binaires décodés sont écrits.</param>
      <param name="offset" vsli:raw="The zero-based index into the array specifying where the method can begin to write to the buffer.">Index de base zéro dans le tableau spécifiant à partir d'où la méthode peut écrire dans la mémoire tampon.</param>
      <param name="len" vsli:raw="The number of bytes to write into the buffer.">Nombre d'octets à écrire dans la mémoire tampon.</param>
      <exception cref="T:System.Xml.XmlException" vsli:raw="The &lt;see langword=&quot;BinHex&quot; /&gt; sequence is not valid.">La séquence <see langword="BinHex" /> n'est pas valide.</exception>
      <exception cref="T:System.ArgumentNullException" vsli:raw="The value of &lt;paramref name=&quot;array&quot; /&gt; is &lt;see langword=&quot;null&quot; /&gt;.">La valeur de <paramref name="array" /> est <see langword="null" />.</exception>
      <exception cref="T:System.ArgumentOutOfRangeException" vsli:raw="&lt;paramref name=&quot;offset&quot; /&gt; &amp;lt; 0, or &lt;paramref name=&quot;len&quot; /&gt; &amp;lt; 0, or &lt;paramref name=&quot;len&quot; /&gt; &amp;gt; &lt;paramref name=&quot;array&quot; /&gt;.Length- &lt;paramref name=&quot;offset&quot; /&gt;.">
        <paramref name="offset" /> &lt; 0, ou <paramref name="len" /> &lt; 0, ou <paramref name="len" /> &gt; <paramref name="array" />.Length- <paramref name="offset" />.</exception>
      <returns vsli:raw="The number of bytes written to your buffer.">Nombre d'octets écrits dans la mémoire tampon.</returns>
    </member>
    <member name="M:System.Xml.XmlTextReader.ReadChars(System.Char[],System.Int32,System.Int32)">
      <summary vsli:raw="Reads the text contents of an element into a character buffer. This method is designed to read large streams of embedded text by calling it successively.">Lit le texte d'un élément dans une mémoire tampon de caractères. Cette méthode est conçue pour lire des flux importants de texte incorporé en l'appelant de manière successive.</summary>
      <param name="buffer" vsli:raw="The array of characters that serves as the buffer to which the text contents are written.">Tableau de caractères servant de mémoire tampon dans laquelle le texte est écrit.</param>
      <param name="index" vsli:raw="The position within &lt;paramref name=&quot;buffer&quot; /&gt; where the method can begin writing text contents.">Emplacement dans <paramref name="buffer" /> à partir duquel la méthode peut écrire du texte.</param>
      <param name="count" vsli:raw="The number of characters to write into &lt;paramref name=&quot;buffer&quot; /&gt;.">Nombre de caractères à écrire dans <paramref name="buffer" />.</param>
      <exception cref="T:System.ArgumentException" vsli:raw="&lt;paramref name=&quot;count&quot; /&gt; is greater than the space specified in the &lt;paramref name=&quot;buffer&quot; /&gt; (buffer size - &lt;paramref name=&quot;index&quot; /&gt;).">
        <paramref name="count" /> est supérieur à l’espace spécifié dans le <paramref name="buffer" /> (taille de mémoire tampon - <paramref name="index" />).</exception>
      <exception cref="T:System.ArgumentNullException" vsli:raw="The &lt;paramref name=&quot;buffer&quot; /&gt; value is &lt;see langword=&quot;null&quot; /&gt;.">
        <paramref name="buffer" /> a la valeur <see langword="null" />.</exception>
      <exception cref="T:System.ArgumentOutOfRangeException" vsli:raw="&lt;paramref name=&quot;index&quot; /&gt;&lt;see langword=&quot;&amp;lt; 0&quot; /&gt; or &lt;paramref name=&quot;count&quot; /&gt;&lt;see langword=&quot;&amp;lt; 0&quot; /&gt;.">
        <paramref name="index" />
        <see langword="&lt; 0" /> ou <paramref name="count" /><see langword="&lt; 0" />.</exception>
      <returns vsli:raw="The number of characters read. This can be &lt;see langword=&quot;0&quot; /&gt; if the reader is not positioned on an element or if there is no more text content to return in the current context.">Nombre de caractères à lire. Il peut s'agir de <see langword="0" /> si le lecteur n'est pas placé sur un élément ou s'il n'existe plus de texte à retourner dans le contexte actuel.</returns>
    </member>
    <member name="M:System.Xml.XmlTextReader.ReadContentAsBase64(System.Byte[],System.Int32,System.Int32)">
      <summary vsli:raw="Reads the content and returns the &lt;see langword=&quot;Base64&quot; /&gt; decoded binary bytes.">Lit le contenu et retourne les octets binaires décodés au format <see langword="Base64" />.</summary>
      <param name="buffer" vsli:raw="The buffer into which to copy the resulting text. This value cannot be &lt;see langword=&quot;null&quot; /&gt;.">Mémoire tampon dans laquelle copier le texte obtenu. Cette valeur ne peut pas être <see langword="null" />.</param>
      <param name="index" vsli:raw="The offset into the buffer where to start copying the result.">Offset de la mémoire tampon où commence la copie du résultat.</param>
      <param name="count" vsli:raw="The maximum number of bytes to copy into the buffer. The actual number of bytes copied is returned from this method.">Nombre maximal d'octets à copier dans la mémoire tampon. Le nombre réel d'octets copiés est retourné à partir de cette méthode.</param>
      <exception cref="T:System.ArgumentNullException" vsli:raw="The &lt;paramref name=&quot;buffer&quot; /&gt; value is &lt;see langword=&quot;null&quot; /&gt;.">
        <paramref name="buffer" /> a la valeur <see langword="null" />.</exception>
      <exception cref="T:System.InvalidOperationException" vsli:raw="&lt;see cref=&quot;M:System.Xml.XmlTextReader.ReadContentAsBase64(System.Byte[],System.Int32,System.Int32)&quot; /&gt; is not supported in the current node.">
        <see cref="M:System.Xml.XmlTextReader.ReadContentAsBase64(System.Byte[],System.Int32,System.Int32)" /> n'est pas pris en charge sur le nœud actuel.</exception>
      <exception cref="T:System.ArgumentOutOfRangeException" vsli:raw="The index into the buffer or index + count is larger than the allocated buffer size.">L'index de la mémoire tampon (ou l'index augmenté de la valeur du paramètre count) est supérieur à la taille de la mémoire tampon allouée.</exception>
      <returns vsli:raw="The number of bytes written to the buffer.">Nombre d'octets écrits dans la mémoire tampon.</returns>
    </member>
    <member name="M:System.Xml.XmlTextReader.ReadContentAsBinHex(System.Byte[],System.Int32,System.Int32)">
      <summary vsli:raw="Reads the content and returns the &lt;see langword=&quot;BinHex&quot; /&gt; decoded binary bytes.">Lit le contenu et retourne les octets binaires décodés au format <see langword="BinHex" />.</summary>
      <param name="buffer" vsli:raw="The buffer into which to copy the resulting text. This value cannot be &lt;see langword=&quot;null&quot; /&gt;.">Mémoire tampon dans laquelle copier le texte obtenu. Cette valeur ne peut pas être <see langword="null" />.</param>
      <param name="index" vsli:raw="The offset into the buffer where to start copying the result.">Offset de la mémoire tampon où commence la copie du résultat.</param>
      <param name="count" vsli:raw="The maximum number of bytes to copy into the buffer. The actual number of bytes copied is returned from this method.">Nombre maximal d'octets à copier dans la mémoire tampon. Le nombre réel d'octets copiés est retourné à partir de cette méthode.</param>
      <exception cref="T:System.ArgumentNullException" vsli:raw="The &lt;paramref name=&quot;buffer&quot; /&gt; value is &lt;see langword=&quot;null&quot; /&gt;.">
        <paramref name="buffer" /> a la valeur <see langword="null" />.</exception>
      <exception cref="T:System.InvalidOperationException" vsli:raw="&lt;see cref=&quot;M:System.Xml.XmlTextReader.ReadContentAsBinHex(System.Byte[],System.Int32,System.Int32)&quot; /&gt; is not supported on the current node.">
        <see cref="M:System.Xml.XmlTextReader.ReadContentAsBinHex(System.Byte[],System.Int32,System.Int32)" /> n'est pas pris en charge sur le nœud actuel.</exception>
      <exception cref="T:System.ArgumentOutOfRangeException" vsli:raw="The index into the buffer or index + count is larger than the allocated buffer size.">L'index de la mémoire tampon (ou l'index augmenté de la valeur du paramètre count) est supérieur à la taille de la mémoire tampon allouée.</exception>
      <exception cref="T:System.NotSupportedException" vsli:raw="The &lt;see cref=&quot;T:System.Xml.XmlTextReader&quot; /&gt; implementation does not support this method.">L'implémentation de <see cref="T:System.Xml.XmlTextReader" /> ne prend pas en charge cette méthode.</exception>
      <returns vsli:raw="The number of bytes written to the buffer.">Nombre d'octets écrits dans la mémoire tampon.</returns>
    </member>
    <member name="M:System.Xml.XmlTextReader.ReadElementContentAsBase64(System.Byte[],System.Int32,System.Int32)">
      <summary vsli:raw="Reads the element and decodes the Base64 content.">Lit l'élément et décode le contenu Base64.</summary>
      <param name="buffer" vsli:raw="The buffer into which to copy the resulting text. This value cannot be &lt;see langword=&quot;null&quot; /&gt;.">Mémoire tampon dans laquelle copier le texte obtenu. Cette valeur ne peut pas être <see langword="null" />.</param>
      <param name="index" vsli:raw="The offset into the buffer where to start copying the result.">Offset de la mémoire tampon où commence la copie du résultat.</param>
      <param name="count" vsli:raw="The maximum number of bytes to copy into the buffer. The actual number of bytes copied is returned from this method.">Nombre maximal d'octets à copier dans la mémoire tampon. Le nombre réel d'octets copiés est retourné à partir de cette méthode.</param>
      <exception cref="T:System.ArgumentNullException" vsli:raw="The &lt;paramref name=&quot;buffer&quot; /&gt; value is &lt;see langword=&quot;null&quot; /&gt;.">
        <paramref name="buffer" /> a la valeur <see langword="null" />.</exception>
      <exception cref="T:System.InvalidOperationException" vsli:raw="The current node is not an element node.">Le nœud actuel n'est pas un nœud d'élément.</exception>
      <exception cref="T:System.ArgumentOutOfRangeException" vsli:raw="The index into the buffer or index + count is larger than the allocated buffer size.">L'index de la mémoire tampon (ou l'index augmenté de la valeur du paramètre count) est supérieur à la taille de la mémoire tampon allouée.</exception>
      <exception cref="T:System.NotSupportedException" vsli:raw="The &lt;see cref=&quot;T:System.Xml.XmlTextReader&quot; /&gt; implementation does not support this method.">L'implémentation de <see cref="T:System.Xml.XmlTextReader" /> ne prend pas en charge cette méthode.</exception>
      <exception cref="T:System.Xml.XmlException" vsli:raw="The element contains mixed-content.">L'élément contient un contenu mixte.</exception>
      <exception cref="T:System.FormatException" vsli:raw="The content cannot be converted to the requested type.">Impossible de convertir le contenu en type demandé.</exception>
      <returns vsli:raw="The number of bytes written to the buffer.">Nombre d'octets écrits dans la mémoire tampon.</returns>
    </member>
    <member name="M:System.Xml.XmlTextReader.ReadElementContentAsBinHex(System.Byte[],System.Int32,System.Int32)">
      <summary vsli:raw="Reads the element and decodes the &lt;see langword=&quot;BinHex&quot; /&gt; content.">Lit l'élément et décode le contenu au format <see langword="BinHex" />.</summary>
      <param name="buffer" vsli:raw="The buffer into which to copy the resulting text. This value cannot be &lt;see langword=&quot;null&quot; /&gt;.">Mémoire tampon dans laquelle copier le texte obtenu. Cette valeur ne peut pas être <see langword="null" />.</param>
      <param name="index" vsli:raw="The offset into the buffer where to start copying the result.">Offset de la mémoire tampon où commence la copie du résultat.</param>
      <param name="count" vsli:raw="The maximum number of bytes to copy into the buffer. The actual number of bytes copied is returned from this method.">Nombre maximal d'octets à copier dans la mémoire tampon. Le nombre réel d'octets copiés est retourné à partir de cette méthode.</param>
      <exception cref="T:System.ArgumentNullException" vsli:raw="The &lt;paramref name=&quot;buffer&quot; /&gt; value is &lt;see langword=&quot;null&quot; /&gt;.">
        <paramref name="buffer" /> a la valeur <see langword="null" />.</exception>
      <exception cref="T:System.InvalidOperationException" vsli:raw="The current node is not an element node.">Le nœud actuel n'est pas un nœud d'élément.</exception>
      <exception cref="T:System.ArgumentOutOfRangeException" vsli:raw="The index into the buffer or index + count is larger than the allocated buffer size.">L'index de la mémoire tampon (ou l'index augmenté de la valeur du paramètre count) est supérieur à la taille de la mémoire tampon allouée.</exception>
      <exception cref="T:System.NotSupportedException" vsli:raw="The &lt;see cref=&quot;T:System.Xml.XmlReader&quot; /&gt; implementation does not support this method.">L'implémentation de <see cref="T:System.Xml.XmlReader" /> ne prend pas en charge cette méthode.</exception>
      <exception cref="T:System.Xml.XmlException" vsli:raw="The element contains mixed-content.">L'élément contient un contenu mixte.</exception>
      <exception cref="T:System.FormatException" vsli:raw="The content cannot be converted to the requested type.">Impossible de convertir le contenu en type demandé.</exception>
      <returns vsli:raw="The number of bytes written to the buffer.">Nombre d'octets écrits dans la mémoire tampon.</returns>
    </member>
    <member name="M:System.Xml.XmlTextReader.ReadString">
      <summary vsli:raw="Reads the contents of an element or a text node as a string.">Lit le contenu d'un nœud d'élément ou de texte sous forme de chaîne.</summary>
      <exception cref="T:System.Xml.XmlException" vsli:raw="An error occurred while parsing the XML.">Une erreur s’est produite lors de l’analyse du XML.</exception>
      <exception cref="T:System.InvalidOperationException" vsli:raw="An invalid operation was attempted.">Une opération incorrecte a été tentée.</exception>
      <returns vsli:raw="The contents of the element or text node. This can be an empty string if the reader is positioned on something other than an element or text node, or if there is no more text content to return in the current context.  &#xA;  &#xA; &lt;see langword=&quot;Note:&quot; /&gt; The text node can be either an element or an attribute text node.">Contenu du nœud d'élément ou de texte. Il peut s'agir d'une chaîne vide si le lecteur est placé sur autre chose qu'un nœud d'élément ou de texte, ou s'il n'existe plus de texte à retourner dans le contexte actuel.  
  
 <see langword="Note:" /> Le nœud de texte peut être un élément ou un nœud de texte d'attribut.</returns>
    </member>
    <member name="M:System.Xml.XmlTextReader.ResetState">
      <summary vsli:raw="Resets the state of the reader to ReadState.Initial.">Réinitialise l'état du lecteur à ReadState.Initial.</summary>
      <exception cref="T:System.InvalidOperationException" vsli:raw="Calling &lt;see langword=&quot;ResetState&quot; /&gt; if the reader was constructed using an &lt;see cref=&quot;T:System.Xml.XmlParserContext&quot; /&gt;.">Appel de <see langword="ResetState" /> si le lecteur a été construit à l'aide de <see cref="T:System.Xml.XmlParserContext" />.</exception>
      <exception cref="T:System.Xml.XmlException" vsli:raw="Documents in a single stream do not share the same encoding.">Les documents dans un flux de données unique ne partagent pas le même encodage.</exception>
    </member>
    <member name="M:System.Xml.XmlTextReader.ResolveEntity">
      <summary vsli:raw="Resolves the entity reference for &lt;see langword=&quot;EntityReference&quot; /&gt; nodes.">Résout la référence d'entité pour les nœuds <see langword="EntityReference" />.</summary>
    </member>
    <member name="M:System.Xml.XmlTextReader.Skip">
      <summary vsli:raw="Skips the children of the current node.">Ignore les enfants du nœud actuel.</summary>
    </member>
    <member name="M:System.Xml.XmlTextReader.System#Xml#IXmlNamespaceResolver#GetNamespacesInScope(System.Xml.XmlNamespaceScope)">
      <summary vsli:raw="For a description of this member, see &lt;see cref=&quot;M:System.Xml.IXmlNamespaceResolver.GetNamespacesInScope(System.Xml.XmlNamespaceScope)&quot; /&gt;.">Pour obtenir une description de ce membre, consultez <see cref="M:System.Xml.IXmlNamespaceResolver.GetNamespacesInScope(System.Xml.XmlNamespaceScope)" />.</summary>
      <param name="scope" vsli:raw="An &lt;see cref=&quot;T:System.Xml.XmlNamespaceScope&quot; /&gt; value that specifies the type of namespace nodes to return.">Valeur de <see cref="T:System.Xml.XmlNamespaceScope" /> qui spécifie le type de nœuds d'espace de noms à retourner.</param>
      <returns vsli:raw="An &lt;see cref=&quot;T:System.Collections.IDictionary&quot; /&gt; that contains the current in-scope namespaces.">
        <see cref="T:System.Collections.IDictionary" /> qui contient les espaces de noms actuellement dans la portée.</returns>
    </member>
    <member name="M:System.Xml.XmlTextReader.System#Xml#IXmlNamespaceResolver#LookupNamespace(System.String)">
      <summary vsli:raw="For a description of this member, see &lt;see cref=&quot;M:System.Xml.IXmlNamespaceResolver.LookupNamespace(System.String)&quot; /&gt;.">Pour obtenir une description de ce membre, consultez <see cref="M:System.Xml.IXmlNamespaceResolver.LookupNamespace(System.String)" />.</summary>
      <param name="prefix" vsli:raw="The prefix whose namespace URI you wish to find.">Préfixe dont vous recherchez l'URI de l'espace de noms.</param>
      <returns vsli:raw="The namespace URI that is mapped to the prefix; &lt;see langword=&quot;null&quot; /&gt; if the prefix is not mapped to a namespace URI.">URI d'espace de noms mappé au préfixe ; <see langword="null" /> si le préfixe n'est pas mappé à un URI d'espace de noms.</returns>
    </member>
    <member name="M:System.Xml.XmlTextReader.System#Xml#IXmlNamespaceResolver#LookupPrefix(System.String)">
      <summary vsli:raw="For a description of this member, see &lt;see cref=&quot;M:System.Xml.IXmlNamespaceResolver.LookupPrefix(System.String)&quot; /&gt;.">Pour obtenir une description de ce membre, consultez <see cref="M:System.Xml.IXmlNamespaceResolver.LookupPrefix(System.String)" />.</summary>
      <param name="namespaceName" vsli:raw="The namespace URI whose prefix you wish to find.">URI de l'espace de noms dont vous recherchez le préfixe.</param>
      <returns vsli:raw="The prefix that is mapped to the namespace URI; &lt;see langword=&quot;null&quot; /&gt; if the namespace URI is not mapped to a prefix.">Préfixe mappé à l'URI d'espace de noms ; <see langword="null" /> si l'URI de l'espace de noms n'est pas mappé sur un préfixe.</returns>
    </member>
    <member name="P:System.Xml.XmlTextReader.AttributeCount">
      <summary vsli:raw="Gets the number of attributes on the current node.">Obtient le nombre d'attributs du nœud actuel.</summary>
      <returns vsli:raw="The number of attributes on the current node.">Nombre d'attributs du nœud actuel.</returns>
    </member>
    <member name="P:System.Xml.XmlTextReader.BaseURI">
      <summary vsli:raw="Gets the base URI of the current node.">Obtient l'URI de base du nœud actuel.</summary>
      <returns vsli:raw="The base URI of the current node.">URI de base du nœud actuel.</returns>
    </member>
    <member name="P:System.Xml.XmlTextReader.CanReadBinaryContent">
      <summary vsli:raw="Gets a value indicating whether the &lt;see cref=&quot;T:System.Xml.XmlTextReader&quot; /&gt; implements the binary content read methods.">Obtient une valeur indiquant si <see cref="T:System.Xml.XmlTextReader" /> implémente les méthodes de lecture de contenu binaire.</summary>
      <returns vsli:raw="&lt;see langword=&quot;true&quot; /&gt; if the binary content read methods are implemented; otherwise &lt;see langword=&quot;false&quot; /&gt;. The &lt;see cref=&quot;T:System.Xml.XmlTextReader&quot; /&gt; class always returns &lt;see langword=&quot;true&quot; /&gt;.">
        <see langword="true" /> si les méthodes de lecture de contenu binaire sont implémentées ; sinon, <see langword="false" />. La classe <see cref="T:System.Xml.XmlTextReader" /> retourne toujours <see langword="true" />.</returns>
    </member>
    <member name="P:System.Xml.XmlTextReader.CanReadValueChunk">
      <summary vsli:raw="Gets a value indicating whether the &lt;see cref=&quot;T:System.Xml.XmlTextReader&quot; /&gt; implements the &lt;see cref=&quot;M:System.Xml.XmlReader.ReadValueChunk(System.Char[],System.Int32,System.Int32)&quot; /&gt; method.">Obtient une valeur indiquant si <see cref="T:System.Xml.XmlTextReader" /> implémente la méthode <see cref="M:System.Xml.XmlReader.ReadValueChunk(System.Char[],System.Int32,System.Int32)" />.</summary>
      <returns vsli:raw="&lt;see langword=&quot;true&quot; /&gt; if the &lt;see cref=&quot;T:System.Xml.XmlTextReader&quot; /&gt; implements the &lt;see cref=&quot;M:System.Xml.XmlReader.ReadValueChunk(System.Char[],System.Int32,System.Int32)&quot; /&gt; method; otherwise &lt;see langword=&quot;false&quot; /&gt;. The &lt;see cref=&quot;T:System.Xml.XmlTextReader&quot; /&gt; class always returns &lt;see langword=&quot;false&quot; /&gt;.">
        <see langword="true" /> si <see cref="T:System.Xml.XmlTextReader" /> implémente la méthode <see cref="M:System.Xml.XmlReader.ReadValueChunk(System.Char[],System.Int32,System.Int32)" /> ; sinon, <see langword="false" />. La classe <see cref="T:System.Xml.XmlTextReader" /> retourne toujours <see langword="false" />.</returns>
    </member>
    <member name="P:System.Xml.XmlTextReader.CanResolveEntity">
      <summary vsli:raw="Gets a value indicating whether this reader can parse and resolve entities.">Obtient une valeur indiquant si ce lecteur peut analyser et résoudre les entités.</summary>
      <returns vsli:raw="&lt;see langword=&quot;true&quot; /&gt; if the reader can parse and resolve entities; otherwise, &lt;see langword=&quot;false&quot; /&gt;. The &lt;see langword=&quot;XmlTextReader&quot; /&gt; class always returns &lt;see langword=&quot;true&quot; /&gt;.">
        <see langword="true" /> si le lecteur peut analyser et résoudre les entités ; sinon, <see langword="false" />. La classe <see langword="XmlTextReader" /> retourne toujours <see langword="true" />.</returns>
    </member>
    <member name="P:System.Xml.XmlTextReader.Depth">
      <summary vsli:raw="Gets the depth of the current node in the XML document.">Obtient la profondeur du nœud actuel dans le document XML.</summary>
      <returns vsli:raw="The depth of the current node in the XML document.">Profondeur du nœud actuel dans le document XML.</returns>
    </member>
    <member name="P:System.Xml.XmlTextReader.DtdProcessing">
      <summary vsli:raw="Gets or sets the &lt;see cref=&quot;T:System.Xml.DtdProcessing&quot; /&gt; enumeration.">Obtient ou définit l'énumération <see cref="T:System.Xml.DtdProcessing" />.</summary>
      <returns vsli:raw="The &lt;see cref=&quot;T:System.Xml.DtdProcessing&quot; /&gt; enumeration.">Énumération <see cref="T:System.Xml.DtdProcessing" />.</returns>
    </member>
    <member name="P:System.Xml.XmlTextReader.Encoding">
      <summary vsli:raw="Gets the encoding of the document.">Obtient l'encodage du document.</summary>
      <returns vsli:raw="The encoding value. If no encoding attribute exists, and there is no byte-order mark, this defaults to UTF-8.">Valeur d'encodage. S'il n'existe pas d'attribut d'encodage, ni d'indicateur d'ordre d'octets, la valeur par défaut est UTF-8.</returns>
    </member>
    <member name="P:System.Xml.XmlTextReader.EntityHandling">
      <summary vsli:raw="Gets or sets a value that specifies how the reader handles entities.">Obtient ou définit une valeur qui spécifie le mode de gestion des entités par le lecteur.</summary>
      <returns vsli:raw="One of the &lt;see cref=&quot;T:System.Xml.EntityHandling&quot; /&gt; values. If no &lt;see langword=&quot;EntityHandling&quot; /&gt; is specified, it defaults to &lt;see langword=&quot;EntityHandling.ExpandCharEntities&quot; /&gt;.">Une des valeurs de l'objet <see cref="T:System.Xml.EntityHandling" />. Si aucun <see langword="EntityHandling" /> n'est spécifié, il prend par défaut la valeur <see langword="EntityHandling.ExpandCharEntities" />.</returns>
    </member>
    <member name="P:System.Xml.XmlTextReader.EOF">
      <summary vsli:raw="Gets a value indicating whether the reader is positioned at the end of the stream.">Obtient une valeur indiquant si le lecteur est placé à la fin du flux.</summary>
      <returns vsli:raw="&lt;see langword=&quot;true&quot; /&gt; if the reader is positioned at the end of the stream; otherwise, &lt;see langword=&quot;false&quot; /&gt;.">
        <see langword="true" /> si le lecteur est placé à la fin du flux ; sinon, <see langword="false" />.</returns>
    </member>
    <member name="P:System.Xml.XmlTextReader.HasValue">
      <summary vsli:raw="Gets a value indicating whether the current node can have a &lt;see cref=&quot;P:System.Xml.XmlTextReader.Value&quot; /&gt; other than &lt;see langword=&quot;String.Empty&quot; /&gt;.">Obtient une valeur indiquant si le nœud actuel peut avoir une valeur <see cref="P:System.Xml.XmlTextReader.Value" /> autre que <see langword="String.Empty" />.</summary>
      <returns vsli:raw="&lt;see langword=&quot;true&quot; /&gt; if the node on which the reader is currently positioned can have a &lt;see langword=&quot;Value&quot; /&gt;; otherwise, &lt;see langword=&quot;false&quot; /&gt;.">
        <see langword="true" /> si le nœud sur lequel le lecteur est placé actuellement peut avoir un <see langword="Value" /> ; sinon, <see langword="false" />.</returns>
    </member>
    <member name="P:System.Xml.XmlTextReader.IsDefault">
      <summary vsli:raw="Gets a value indicating whether the current node is an attribute that was generated from the default value defined in the DTD or schema.">Obtient une valeur indiquant si le nœud actuel est un attribut qui a été généré à partir de la valeur par défaut définie dans la DTD ou le schéma.</summary>
      <returns vsli:raw="This property always returns &lt;see langword=&quot;false&quot; /&gt;. (&lt;see cref=&quot;T:System.Xml.XmlTextReader&quot; /&gt; does not expand default attributes.)">Cette propriété retourne toujours <see langword="false" />. (<see cref="T:System.Xml.XmlTextReader" /> ne développe pas les attributs par défaut.)</returns>
    </member>
    <member name="P:System.Xml.XmlTextReader.IsEmptyElement">
      <summary vsli:raw="Gets a value indicating whether the current node is an empty element (for example, &lt;c&gt;&amp;lt;MyElement/&amp;gt;&lt;/c&gt;).">Obtient une valeur indiquant si le nœud actuel est un élément vide (par exemple, <c>&lt;MyElement/&gt;</c>).</summary>
      <returns vsli:raw="&lt;see langword=&quot;true&quot; /&gt; if the current node is an element (&lt;see cref=&quot;P:System.Xml.XmlTextReader.NodeType&quot; /&gt; equals &lt;see langword=&quot;XmlNodeType.Element&quot; /&gt;) that ends with &lt;c&gt;/&amp;gt;&lt;/c&gt;; otherwise, &lt;see langword=&quot;false&quot; /&gt;.">
        <see langword="true" /> Si le nœud actuel est un élément ( <see cref="P:System.Xml.XmlTextReader.NodeType" /> est égal <see langword="XmlNodeType.Element" /> à) qui se termine par <c>/&gt;</c> ; sinon, <see langword="false" /> .</returns>
    </member>
    <member name="P:System.Xml.XmlTextReader.LineNumber">
      <summary vsli:raw="Gets the current line number.">Obtient le numéro de la ligne active.</summary>
      <returns vsli:raw="The current line number.">Numéro de ligne active.</returns>
    </member>
    <member name="P:System.Xml.XmlTextReader.LinePosition">
      <summary vsli:raw="Gets the current line position.">Obtient la position de la ligne active.</summary>
      <returns vsli:raw="The current line position.">Position de la ligne active.</returns>
    </member>
    <member name="P:System.Xml.XmlTextReader.LocalName">
      <summary vsli:raw="Gets the local name of the current node.">Obtient le nom local du nœud actuel.</summary>
      <returns vsli:raw="The name of the current node with the prefix removed. For example, &lt;see langword=&quot;LocalName&quot; /&gt; is &lt;see langword=&quot;book&quot; /&gt; for the element &lt;c&gt;&amp;lt;bk:book&amp;gt;&lt;/c&gt;.  &#xA;  &#xA; For node types that do not have a name (like &lt;see langword=&quot;Text&quot; /&gt;, &lt;see langword=&quot;Comment&quot; /&gt;, and so on), this property returns &lt;see langword=&quot;String.Empty&quot; /&gt;.">Nom du nœud actuel dont le préfixe est supprimé. Par exemple, <see langword="LocalName" /> est <see langword="book" /> pour l’élément <c> &lt; BK : Book &gt; </c>.  
  
Pour les types de nœuds qui n'ont pas de nom (par exemple <see langword="Text" />, <see langword="Comment" />, etc.), cette propriété retourne <see langword="String.Empty" />.</returns>
    </member>
    <member name="P:System.Xml.XmlTextReader.Name">
      <summary vsli:raw="Gets the qualified name of the current node.">Obtient le nom qualifié du nœud actuel.</summary>
      <returns vsli:raw="The qualified name of the current node. For example, &lt;see langword=&quot;Name&quot; /&gt; is &lt;see langword=&quot;bk:book&quot; /&gt; for the element &lt;c&gt;&amp;lt;bk:book&amp;gt;&lt;/c&gt;.  &#xA;  &#xA; The name returned is dependent on the &lt;see cref=&quot;P:System.Xml.XmlTextReader.NodeType&quot; /&gt; of the node. The following node types return the listed values. All other node types return an empty string.  &#xA;  &#xA; &lt;list type=&quot;table&quot;&gt;&lt;listheader&gt;&lt;term&gt; Node Type&lt;/term&gt;&lt;description&gt; Name&lt;/description&gt;&lt;/listheader&gt;&lt;item&gt;&lt;term&gt;&lt;see langword=&quot;Attribute&quot; /&gt;&lt;/term&gt;&lt;description&gt; The name of the attribute.&lt;/description&gt;&lt;/item&gt;&lt;item&gt;&lt;term&gt;&lt;see langword=&quot;DocumentType&quot; /&gt;&lt;/term&gt;&lt;description&gt; The document type name.&lt;/description&gt;&lt;/item&gt;&lt;item&gt;&lt;term&gt;&lt;see langword=&quot;Element&quot; /&gt;&lt;/term&gt;&lt;description&gt; The tag name.&lt;/description&gt;&lt;/item&gt;&lt;item&gt;&lt;term&gt;&lt;see langword=&quot;EntityReference&quot; /&gt;&lt;/term&gt;&lt;description&gt; The name of the entity referenced.&lt;/description&gt;&lt;/item&gt;&lt;item&gt;&lt;term&gt;&lt;see langword=&quot;ProcessingInstruction&quot; /&gt;&lt;/term&gt;&lt;description&gt; The target of the processing instruction.&lt;/description&gt;&lt;/item&gt;&lt;item&gt;&lt;term&gt;&lt;see langword=&quot;XmlDeclaration&quot; /&gt;&lt;/term&gt;&lt;description&gt; The literal string &lt;see langword=&quot;xml&quot; /&gt;.&lt;/description&gt;&lt;/item&gt;&lt;/list&gt;">Nom qualifié du nœud actuel. Par exemple, <see langword="Name" /> est <see langword="bk:book" /> pour l’élément <c> &lt; BK : Book &gt; </c>.  
  
Le nom retourné dépend du <see cref="P:System.Xml.XmlTextReader.NodeType" /> du nœud. Les types de nœuds suivants retournent les valeurs répertoriées. Tous les autres types de nœuds retournent une chaîne vide.  
  
 <list type="table"><listheader><term> Type de nœud</term><description> Name</description></listheader><item><term><see langword="Attribute" /></term><description> Nom de l'attribut.</description></item><item><term><see langword="DocumentType" /></term><description> Nom du type de document.</description></item><item><term><see langword="Element" /></term><description> Nom de la balise.</description></item><item><term><see langword="EntityReference" /></term><description> Nom de l'entité référencée.</description></item><item><term><see langword="ProcessingInstruction" /></term><description> Cible de l'instruction de traitement.</description></item><item><term><see langword="XmlDeclaration" /></term><description> Chaîne littérale <see langword="xml" />.</description></item></list></returns>
    </member>
    <member name="P:System.Xml.XmlTextReader.Namespaces">
      <summary vsli:raw="Gets or sets a value indicating whether to do namespace support.">Obtient ou définit une valeur indiquant si la prise en charge des espaces de noms doit être assurée ou non.</summary>
      <exception cref="T:System.InvalidOperationException" vsli:raw="Setting this property after a read operation has occurred (&lt;see cref=&quot;P:System.Xml.XmlTextReader.ReadState&quot; /&gt; is not &lt;see langword=&quot;ReadState.Initial&quot; /&gt;).">Définition de cette propriété après une opération de lecture (<see cref="P:System.Xml.XmlTextReader.ReadState" /> n'est pas <see langword="ReadState.Initial" />).</exception>
      <returns vsli:raw="&lt;see langword=&quot;true&quot; /&gt; to do namespace support; otherwise, &lt;see langword=&quot;false&quot; /&gt;. The default is &lt;see langword=&quot;true&quot; /&gt;.">
        <see langword="true" /> pour assurer la prise en charge des espaces de noms ; sinon, <see langword="false" />. La valeur par défaut est <see langword="true" />.</returns>
    </member>
    <member name="P:System.Xml.XmlTextReader.NamespaceURI">
      <summary vsli:raw="Gets the namespace URI (as defined in the W3C Namespace specification) of the node on which the reader is positioned.">Obtient l'URI d'espace de noms (tel qu'il est défini dans la spécification relative aux espaces de noms du W3C) du nœud sur lequel le lecteur est placé.</summary>
      <returns vsli:raw="The namespace URI of the current node; otherwise an empty string.">URI d'espace de noms du nœud actuel ; sinon, une chaîne vide.</returns>
    </member>
    <member name="P:System.Xml.XmlTextReader.NameTable">
      <summary vsli:raw="Gets the &lt;see cref=&quot;T:System.Xml.XmlNameTable&quot; /&gt; associated with this implementation.">Obtient l'élément <see cref="T:System.Xml.XmlNameTable" /> associé à cette implémentation.</summary>
      <returns vsli:raw="The &lt;see langword=&quot;XmlNameTable&quot; /&gt; enabling you to get the atomized version of a string within the node.">
        <see langword="XmlNameTable" /> vous permettant d'obtenir la version atomisée d'une chaîne au sein du nœud.</returns>
    </member>
    <member name="P:System.Xml.XmlTextReader.NodeType">
      <summary vsli:raw="Gets the type of the current node.">Obtient le type du nœud actuel.</summary>
      <returns vsli:raw="One of the &lt;see cref=&quot;T:System.Xml.XmlNodeType&quot; /&gt; values representing the type of the current node.">Une des valeurs de <see cref="T:System.Xml.XmlNodeType" /> représentant le type du nœud actuel.</returns>
    </member>
    <member name="P:System.Xml.XmlTextReader.Normalization">
      <summary vsli:raw="Gets or sets a value indicating whether to normalize white space and attribute values.">Obtient ou définit une valeur indiquant si les valeurs d'espaces blancs et d'attributs doivent être normalisées.</summary>
      <exception cref="T:System.InvalidOperationException" vsli:raw="Setting this property when the reader is closed (&lt;see cref=&quot;P:System.Xml.XmlTextReader.ReadState&quot; /&gt; is &lt;see langword=&quot;ReadState.Closed&quot; /&gt;).">Définition de cette propriété lorsque le lecteur est fermé (<see cref="P:System.Xml.XmlTextReader.ReadState" /> est <see langword="ReadState.Closed" />).</exception>
      <returns vsli:raw="&lt;see langword=&quot;true&quot; /&gt; to normalize; otherwise, &lt;see langword=&quot;false&quot; /&gt;. The default is &lt;see langword=&quot;false&quot; /&gt;.">
        <see langword="true" /> pour effectuer la normalisation ; sinon, <see langword="false" />. La valeur par défaut est <see langword="false" />.</returns>
    </member>
    <member name="P:System.Xml.XmlTextReader.Prefix">
      <summary vsli:raw="Gets the namespace prefix associated with the current node.">Obtient le préfixe de l'espace de noms associé au nœud actuel.</summary>
      <returns vsli:raw="The namespace prefix associated with the current node.">Préfixe de l'espace de noms associé au nœud actuel.</returns>
    </member>
    <member name="P:System.Xml.XmlTextReader.ProhibitDtd">
      <summary vsli:raw="Gets or sets a value indicating whether to allow DTD processing. This property is obsolete. Use &lt;see cref=&quot;P:System.Xml.XmlTextReader.DtdProcessing&quot; /&gt; instead.">Obtient ou définit une valeur indiquant si le traitement DTD doit être autorisé. Cette propriété est obsolète. Utilisez plutôt <see cref="P:System.Xml.XmlTextReader.DtdProcessing" />.</summary>
      <returns vsli:raw="&lt;see langword=&quot;true&quot; /&gt; to disallow DTD processing; otherwise &lt;see langword=&quot;false&quot; /&gt;. The default is &lt;see langword=&quot;false&quot; /&gt;.">
        <see langword="true" /> pour refuser le traitement DTD ; sinon, <see langword="false" />. La valeur par défaut est <see langword="false" />.</returns>
    </member>
    <member name="P:System.Xml.XmlTextReader.QuoteChar">
      <summary vsli:raw="Gets the quotation mark character used to enclose the value of an attribute node.">Obtient le caractère guillemet permettant de délimiter la valeur d'un nœud d'attribut.</summary>
      <returns vsli:raw="The quotation mark character (&quot; or ') used to enclose the value of an attribute node.">Caractère guillemet (" ou ') permettant de délimiter la valeur d'un nœud d'attribut.</returns>
    </member>
    <member name="P:System.Xml.XmlTextReader.ReadState">
      <summary vsli:raw="Gets the state of the reader.">Obtient l'état du lecteur.</summary>
      <returns vsli:raw="One of the &lt;see cref=&quot;T:System.Xml.ReadState&quot; /&gt; values.">Une des valeurs de l'objet <see cref="T:System.Xml.ReadState" />.</returns>
    </member>
    <member name="P:System.Xml.XmlTextReader.Value">
      <summary vsli:raw="Gets the text value of the current node.">Obtient le texte du nœud actuel.</summary>
      <returns vsli:raw="The value returned depends on the &lt;see cref=&quot;P:System.Xml.XmlTextReader.NodeType&quot; /&gt; of the node. The following table lists node types that have a value to return. All other node types return &lt;see langword=&quot;String.Empty&quot; /&gt;.  &#xA;  &#xA; &lt;list type=&quot;table&quot;&gt;&lt;listheader&gt;&lt;term&gt; Node Type&lt;/term&gt;&lt;description&gt; Value&lt;/description&gt;&lt;/listheader&gt;&lt;item&gt;&lt;term&gt;&lt;see langword=&quot;Attribute&quot; /&gt;&lt;/term&gt;&lt;description&gt; The value of the attribute.&lt;/description&gt;&lt;/item&gt;&lt;item&gt;&lt;term&gt;&lt;see langword=&quot;CDATA&quot; /&gt;&lt;/term&gt;&lt;description&gt; The content of the CDATA section.&lt;/description&gt;&lt;/item&gt;&lt;item&gt;&lt;term&gt;&lt;see langword=&quot;Comment&quot; /&gt;&lt;/term&gt;&lt;description&gt; The content of the comment.&lt;/description&gt;&lt;/item&gt;&lt;item&gt;&lt;term&gt;&lt;see langword=&quot;DocumentType&quot; /&gt;&lt;/term&gt;&lt;description&gt; The internal subset.&lt;/description&gt;&lt;/item&gt;&lt;item&gt;&lt;term&gt;&lt;see langword=&quot;ProcessingInstruction&quot; /&gt;&lt;/term&gt;&lt;description&gt; The entire content, excluding the target.&lt;/description&gt;&lt;/item&gt;&lt;item&gt;&lt;term&gt;&lt;see langword=&quot;SignificantWhitespace&quot; /&gt;&lt;/term&gt;&lt;description&gt; The white space within an &lt;see langword=&quot;xml:space&quot; /&gt;= 'preserve' scope.&lt;/description&gt;&lt;/item&gt;&lt;item&gt;&lt;term&gt;&lt;see langword=&quot;Text&quot; /&gt;&lt;/term&gt;&lt;description&gt; The content of the text node.&lt;/description&gt;&lt;/item&gt;&lt;item&gt;&lt;term&gt;&lt;see langword=&quot;Whitespace&quot; /&gt;&lt;/term&gt;&lt;description&gt; The white space between markup.&lt;/description&gt;&lt;/item&gt;&lt;item&gt;&lt;term&gt;&lt;see langword=&quot;XmlDeclaration&quot; /&gt;&lt;/term&gt;&lt;description&gt; The content of the declaration.&lt;/description&gt;&lt;/item&gt;&lt;/list&gt;">La valeur retournée dépend du <see cref="P:System.Xml.XmlTextReader.NodeType" /> du nœud. Le tableau suivant répertorie les types de nœuds possédant une valeur de retour. Tous les autres types de nœuds retournent <see langword="String.Empty" />.  
  
 <list type="table"><listheader><term> Type de nœud</term><description> Value</description></listheader><item><term><see langword="Attribute" /></term><description> Valeur de l'attribut.</description></item><item><term><see langword="CDATA" /></term><description> Contenu de la section CDATA.</description></item><item><term><see langword="Comment" /></term><description> Contenu du commentaire.</description></item><item><term><see langword="DocumentType" /></term><description> Sous-ensemble interne.</description></item><item><term><see langword="ProcessingInstruction" /></term><description> Contenu entier, cible exclue.</description></item><item><term><see langword="SignificantWhitespace" /></term><description> Espace blanc dans une portée <see langword="xml:space" />= 'preserve'.</description></item><item><term><see langword="Text" /></term><description> Contenu du nœud de texte.</description></item><item><term><see langword="Whitespace" /></term><description> Espace blanc entre les balises.</description></item><item><term><see langword="XmlDeclaration" /></term><description> Contenu de la déclaration.</description></item></list></returns>
    </member>
    <member name="P:System.Xml.XmlTextReader.WhitespaceHandling">
      <summary vsli:raw="Gets or sets a value that specifies how white space is handled.">Obtient ou définit une valeur qui spécifie le mode de gestion de l'espace blanc.</summary>
      <exception cref="T:System.ArgumentOutOfRangeException" vsli:raw="Invalid value specified.">Valeur non valide spécifiée.</exception>
      <exception cref="T:System.InvalidOperationException" vsli:raw="Setting this property when the reader is closed (&lt;see cref=&quot;P:System.Xml.XmlTextReader.ReadState&quot; /&gt; is &lt;see langword=&quot;ReadState.Closed&quot; /&gt;).">Définition de cette propriété lorsque le lecteur est fermé (<see cref="P:System.Xml.XmlTextReader.ReadState" /> est <see langword="ReadState.Closed" />).</exception>
      <returns vsli:raw="One of the &lt;see cref=&quot;T:System.Xml.WhitespaceHandling&quot; /&gt; values. The default is &lt;see langword=&quot;WhitespaceHandling.All&quot; /&gt; (returns &lt;see langword=&quot;Whitespace&quot; /&gt; and &lt;see langword=&quot;SignificantWhitespace&quot; /&gt; nodes).">Une des valeurs de l'objet <see cref="T:System.Xml.WhitespaceHandling" />. La valeur par défaut est <see langword="WhitespaceHandling.All" /> (retourne des nœuds <see langword="Whitespace" /> et <see langword="SignificantWhitespace" />).</returns>
    </member>
    <member name="P:System.Xml.XmlTextReader.XmlLang">
      <summary vsli:raw="Gets the current &lt;see langword=&quot;xml:lang&quot; /&gt; scope.">Obtient la portée de <see langword="xml:lang" /> actuelle.</summary>
      <returns vsli:raw="The current &lt;see langword=&quot;xml:lang&quot; /&gt; scope.">Portée de <see langword="xml:lang" /> actuelle.</returns>
    </member>
    <member name="P:System.Xml.XmlTextReader.XmlResolver">
      <summary vsli:raw="Sets the &lt;see cref=&quot;T:System.Xml.XmlResolver&quot; /&gt; used for resolving DTD references.">Définit le <see cref="T:System.Xml.XmlResolver" /> utilisé pour la résolution des références DTD.</summary>
      <returns vsli:raw="The &lt;see langword=&quot;XmlResolver&quot; /&gt; to use. If set to &lt;see langword=&quot;null&quot; /&gt;, external resources are not resolved.  &#xA;  &#xA; In version 1.1 of the .NET Framework, the caller must be fully trusted in order to specify an &lt;see langword=&quot;XmlResolver&quot; /&gt;.">
        <see langword="XmlResolver" /> à utiliser. Si la valeur est <see langword="null" />, les ressources externes ne sont pas résolues.  
  
Dans la version 1.1 du .NET Framework, l'appelant doit bénéficier d'un niveau de confiance suffisant pour spécifier un <see langword="XmlResolver" />.</returns>
    </member>
    <member name="P:System.Xml.XmlTextReader.XmlSpace">
      <summary vsli:raw="Gets the current &lt;see langword=&quot;xml:space&quot; /&gt; scope.">Obtient la portée de <see langword="xml:space" /> actuelle.</summary>
      <returns vsli:raw="One of the &lt;see cref=&quot;T:System.Xml.XmlSpace&quot; /&gt; values. If no &lt;see langword=&quot;xml:space&quot; /&gt; scope exists, this property defaults to &lt;see langword=&quot;XmlSpace.None&quot; /&gt;.">Une des valeurs de l'objet <see cref="T:System.Xml.XmlSpace" />. S'il n'existe pas de portée de <see langword="xml:space" />, cette propriété prend la valeur par défaut <see langword="XmlSpace.None" />.</returns>
    </member>
    <member name="T:System.Xml.XmlTextWriter">
      <summary vsli:raw="Represents a writer that provides a fast, non-cached, forward-only way of generating streams or files containing XML data that conforms to the W3C Extensible Markup Language (XML) 1.0 and the Namespaces in XML recommendations.  &#xA;  &#xA; Starting with the .NET Framework 2.0, we recommend that you use the &lt;see cref=&quot;T:System.Xml.XmlWriter&quot; /&gt; class instead.">Représente un writer qui fournit un procédé rapide, sans mise en cache et en avant uniquement de génération de flux de fichiers contenant des données XML ; ce procédé est conforme aux recommandations du W3C intitulées Extensible Markup Language (XML) 1.0 et Namespace in XML.  
  
À compter de .NET Framework 2.0, nous vous recommandons d'utiliser plutôt la classe <see cref="T:System.Xml.XmlWriter" />.</summary>
    </member>
    <member name="M:System.Xml.XmlTextWriter.#ctor(System.IO.Stream,System.Text.Encoding)">
      <summary vsli:raw="Creates an instance of the &lt;see langword=&quot;XmlTextWriter&quot; /&gt; class using the specified stream and encoding.">Crée une instance de la classe <see langword="XmlTextWriter" /> à l'aide du flux et de l'encodage spécifiés.</summary>
      <param name="w" vsli:raw="The stream to which you want to write.">Flux dans lequel vous voulez écrire.</param>
      <param name="encoding" vsli:raw="The encoding to generate. If encoding is &lt;see langword=&quot;null&quot; /&gt; it writes out the stream as UTF-8 and omits the encoding attribute from the &lt;see langword=&quot;ProcessingInstruction&quot; /&gt;.">Encodage à générer. Si l'encodage est <see langword="null" />, il écrit le flux au format UTF-8 et omet l'attribut de codage de <see langword="ProcessingInstruction" />.</param>
      <exception cref="T:System.ArgumentException" vsli:raw="The encoding is not supported or the stream cannot be written to.">L'encodage n'est pas pris en charge ou il est impossible d'écrire dans le flux.</exception>
      <exception cref="T:System.ArgumentNullException" vsli:raw="&lt;paramref name=&quot;w&quot; /&gt; is &lt;see langword=&quot;null&quot; /&gt;.">
        <paramref name="w" /> a la valeur <see langword="null" />.</exception>
    </member>
    <member name="M:System.Xml.XmlTextWriter.#ctor(System.IO.TextWriter)">
      <summary vsli:raw="Creates an instance of the &lt;see langword=&quot;XmlTextWriter&quot; /&gt; class using the specified &lt;see cref=&quot;T:System.IO.TextWriter&quot; /&gt;.">Crée une instance de la classe <see langword="XmlTextWriter" /> à l'aide du <see cref="T:System.IO.TextWriter" /> spécifié.</summary>
      <param name="w" vsli:raw="The &lt;see langword=&quot;TextWriter&quot; /&gt; to write to. It is assumed that the &lt;see langword=&quot;TextWriter&quot; /&gt; is already set to the correct encoding.">
        <see langword="TextWriter" /> dans lequel écrire. On suppose que <see langword="TextWriter" /> est déjà défini selon l'encodage approprié.</param>
    </member>
    <member name="M:System.Xml.XmlTextWriter.#ctor(System.String,System.Text.Encoding)">
      <summary vsli:raw="Creates an instance of the &lt;see cref=&quot;T:System.Xml.XmlTextWriter&quot; /&gt; class using the specified file.">Crée une instance de la classe <see cref="T:System.Xml.XmlTextWriter" /> à l'aide du fichier spécifié.</summary>
      <param name="filename" vsli:raw="The filename to write to. If the file exists, it truncates it and overwrites it with the new content.">Nom du fichier dans lequel écrire. Si le fichier existe, il le tronque et remplace son contenu.</param>
      <param name="encoding" vsli:raw="The encoding to generate. If encoding is &lt;see langword=&quot;null&quot; /&gt; it writes the file out as UTF-8, and omits the encoding attribute from the &lt;see langword=&quot;ProcessingInstruction&quot; /&gt;.">Encodage à générer. Si l'encodage est <see langword="null" />, il écrit le fichier au format UTF-8 et omet l'attribut de codage de <see langword="ProcessingInstruction" />.</param>
      <exception cref="T:System.ArgumentException" vsli:raw="The encoding is not supported; the filename is empty, contains only white space, or contains one or more invalid characters.">L'encodage n'est pas pris en charge ou le nom de fichier est vide, ne comporte que des espaces blancs ou contient un ou plusieurs caractères non valides.</exception>
      <exception cref="T:System.UnauthorizedAccessException" vsli:raw="Access is denied.">L’accès est refusé.</exception>
      <exception cref="T:System.ArgumentNullException" vsli:raw="The filename is &lt;see langword=&quot;null&quot; /&gt;.">Le nom de fichier est <see langword="null" />.</exception>
      <exception cref="T:System.IO.DirectoryNotFoundException" vsli:raw="The directory to write to is not found.">Impossible de trouver le répertoire auquel l'écriture est destinée.</exception>
      <exception cref="T:System.IO.IOException" vsli:raw="The filename includes an incorrect or invalid syntax for file name, directory name, or volume label syntax.">Le nom de fichier comporte une syntaxe incorrecte ou non valide au niveau du nom de fichier, de répertoire ou de volume.</exception>
      <exception cref="T:System.Security.SecurityException" vsli:raw="The caller does not have the required permission.">L'appelant n'a pas l'autorisation requise.</exception>
    </member>
    <member name="M:System.Xml.XmlTextWriter.Close">
      <summary vsli:raw="Closes this stream and the underlying stream.">Ferme ce flux et le flux sous-jacent.</summary>
    </member>
    <member name="M:System.Xml.XmlTextWriter.Flush">
      <summary vsli:raw="Flushes whatever is in the buffer to the underlying streams and also flushes the underlying stream.">Vide le contenu de la mémoire tampon dans les flux sous-jacents, puis vide le flux sous-jacent.</summary>
    </member>
    <member name="M:System.Xml.XmlTextWriter.LookupPrefix(System.String)">
      <summary vsli:raw="Returns the closest prefix defined in the current namespace scope for the namespace URI.">Retourne le préfixe le plus proche défini dans la portée espace de noms actuelle pour l'URI de l'espace de noms.</summary>
      <param name="ns" vsli:raw="Namespace URI whose prefix you want to find.">URI de l'espace de noms dont vous recherchez le préfixe.</param>
      <exception cref="T:System.ArgumentException" vsli:raw="&lt;paramref name=&quot;ns&quot; /&gt; is either &lt;see langword=&quot;null&quot; /&gt; or &lt;see langword=&quot;String.Empty&quot; /&gt;.">
        <paramref name="ns" /> a la valeur <see langword="null" /> ou <see langword="String.Empty" />.</exception>
      <returns vsli:raw="The matching prefix. Or &lt;see langword=&quot;null&quot; /&gt; if no matching namespace URI is found in the current scope.">Préfixe correspondant. Ou <see langword="null" /> s'il n'existe aucun URI d'espace de noms dans la portée actuelle.</returns>
    </member>
    <member name="M:System.Xml.XmlTextWriter.WriteBase64(System.Byte[],System.Int32,System.Int32)">
      <summary vsli:raw="Encodes the specified binary bytes as base64 and writes out the resulting text.">Encode les octets binaires spécifiés au format base64 et écrit le texte résultant.</summary>
      <param name="buffer" vsli:raw="Byte array to encode.">Tableau d'octets à encoder.</param>
      <param name="index" vsli:raw="The position within the buffer indicating the start of the bytes to write.">Emplacement dans la mémoire tampon indiquant le début des octets à écrire.</param>
      <param name="count" vsli:raw="The number of bytes to write.">Nombre d'octets à écrire.</param>
      <exception cref="T:System.ArgumentNullException" vsli:raw="&lt;paramref name=&quot;buffer&quot; /&gt; is &lt;see langword=&quot;null&quot; /&gt;.">
        <paramref name="buffer" /> a la valeur <see langword="null" />.</exception>
      <exception cref="T:System.ArgumentException" vsli:raw="The buffer length minus &lt;paramref name=&quot;index&quot; /&gt; is less than &lt;paramref name=&quot;count&quot; /&gt;.">La longueur de la mémoire tampon moins <paramref name="index" /> est inférieure à <paramref name="count" />.</exception>
      <exception cref="T:System.ArgumentOutOfRangeException" vsli:raw="&lt;paramref name=&quot;index&quot; /&gt; or &lt;paramref name=&quot;count&quot; /&gt; is less than zero.">
        <paramref name="index" /> ou <paramref name="count" /> est inférieur à zéro.</exception>
      <exception cref="T:System.InvalidOperationException" vsli:raw="The &lt;see cref=&quot;P:System.Xml.XmlTextWriter.WriteState&quot; /&gt; is &lt;see langword=&quot;Closed&quot; /&gt;.">
        <see cref="P:System.Xml.XmlTextWriter.WriteState" /> a la valeur <see langword="Closed" />.</exception>
    </member>
    <member name="M:System.Xml.XmlTextWriter.WriteBinHex(System.Byte[],System.Int32,System.Int32)">
      <summary vsli:raw="Encodes the specified binary bytes as binhex and writes out the resulting text.">Encode les octets binaires spécifiés au format binhex et écrit le texte résultant.</summary>
      <param name="buffer" vsli:raw="Byte array to encode.">Tableau d'octets à encoder.</param>
      <param name="index" vsli:raw="The position in the buffer indicating the start of the bytes to write.">Emplacement dans la mémoire tampon indiquant le début des octets à écrire.</param>
      <param name="count" vsli:raw="The number of bytes to write.">Nombre d'octets à écrire.</param>
      <exception cref="T:System.ArgumentNullException" vsli:raw="&lt;paramref name=&quot;buffer&quot; /&gt; is &lt;see langword=&quot;null&quot; /&gt;.">
        <paramref name="buffer" /> a la valeur <see langword="null" />.</exception>
      <exception cref="T:System.ArgumentException" vsli:raw="The buffer length minus &lt;paramref name=&quot;index&quot; /&gt; is less than &lt;paramref name=&quot;count&quot; /&gt;.">La longueur de la mémoire tampon moins <paramref name="index" /> est inférieure à <paramref name="count" />.</exception>
      <exception cref="T:System.ArgumentOutOfRangeException" vsli:raw="&lt;paramref name=&quot;index&quot; /&gt; or &lt;paramref name=&quot;count&quot; /&gt; is less than zero.">
        <paramref name="index" /> ou <paramref name="count" /> est inférieur à zéro.</exception>
      <exception cref="T:System.InvalidOperationException" vsli:raw="The &lt;see cref=&quot;P:System.Xml.XmlTextWriter.WriteState&quot; /&gt; is Closed.">
        <see cref="P:System.Xml.XmlTextWriter.WriteState" /> est fermé.</exception>
    </member>
    <member name="M:System.Xml.XmlTextWriter.WriteCData(System.String)">
      <summary vsli:raw="Writes out a &amp;lt;![CDATA[...]]&amp;gt; block containing the specified text.">Écrit un bloc &lt;![CDATA[...]]&gt; contenant le texte spécifié.</summary>
      <param name="text" vsli:raw="Text to place inside the CDATA block.">Texte à placer dans le bloc CDATA.</param>
      <exception cref="T:System.ArgumentException" vsli:raw="The text would result in a non-well formed XML document.">Le texte est à l'origine d'un document XML incorrect.</exception>
      <exception cref="T:System.InvalidOperationException" vsli:raw="The &lt;see cref=&quot;P:System.Xml.XmlTextWriter.WriteState&quot; /&gt; is &lt;see langword=&quot;Closed&quot; /&gt;.">
        <see cref="P:System.Xml.XmlTextWriter.WriteState" /> a la valeur <see langword="Closed" />.</exception>
    </member>
    <member name="M:System.Xml.XmlTextWriter.WriteCharEntity(System.Char)">
      <summary vsli:raw="Forces the generation of a character entity for the specified Unicode character value.">Force la génération d'une entité de caractère pour la valeur du caractère Unicode spécifiée.</summary>
      <param name="ch" vsli:raw="Unicode character for which to generate a character entity.">Caractère Unicode pour lequel une entité de caractère doit être générée.</param>
      <exception cref="T:System.ArgumentException" vsli:raw="The character is in the surrogate pair character range, &lt;see langword=&quot;0xd800&quot; /&gt; - &lt;see langword=&quot;0xdfff&quot; /&gt;; or the text would result in a non-well formed XML document.">Le caractère est dans la plage de caractères de paire de substitution, <see langword="0xd800" /> - <see langword="0xdfff" /> ; sinon, le texte serait un document XML au format incorrect.</exception>
      <exception cref="T:System.InvalidOperationException" vsli:raw="The &lt;see cref=&quot;P:System.Xml.XmlTextWriter.WriteState&quot; /&gt; is &lt;see langword=&quot;Closed&quot; /&gt;.">
        <see cref="P:System.Xml.XmlTextWriter.WriteState" /> a la valeur <see langword="Closed" />.</exception>
    </member>
    <member name="M:System.Xml.XmlTextWriter.WriteChars(System.Char[],System.Int32,System.Int32)">
      <summary vsli:raw="Writes text one buffer at a time.">Écrit du texte mémoire tampon par mémoire tampon.</summary>
      <param name="buffer" vsli:raw="Character array containing the text to write.">Tableau de caractères contenant le texte à écrire.</param>
      <param name="index" vsli:raw="The position in the buffer indicating the start of the text to write.">Emplacement dans la mémoire tampon indiquant le début du texte à écrire.</param>
      <param name="count" vsli:raw="The number of characters to write.">Nombre de caractères à écrire.</param>
      <exception cref="T:System.ArgumentNullException" vsli:raw="&lt;paramref name=&quot;buffer&quot; /&gt; is &lt;see langword=&quot;null&quot; /&gt;.">
        <paramref name="buffer" /> a la valeur <see langword="null" />.</exception>
      <exception cref="T:System.ArgumentOutOfRangeException" vsli:raw="&lt;paramref name=&quot;index&quot; /&gt; or &lt;paramref name=&quot;count&quot; /&gt; is less than zero.  &#xA;  &#xA; -or-  &#xA;  &#xA; The buffer length minus &lt;paramref name=&quot;index&quot; /&gt; is less than &lt;paramref name=&quot;count&quot; /&gt;; the call results in surrogate pair characters being split or an invalid surrogate pair being written.">
        <paramref name="index" /> ou <paramref name="count" /> est inférieur à zéro.  
  
- ou - 
La longueur de la mémoire tampon moins <paramref name="index" /> est inférieure à <paramref name="count" /> ; par conséquent, l'appel entraîne une séparation des caractères de paire de substitution ou l'écriture d'une paire de substitution non valide.</exception>
      <exception cref="T:System.InvalidOperationException" vsli:raw="The &lt;see cref=&quot;P:System.Xml.XmlTextWriter.WriteState&quot; /&gt; is Closed.">
        <see cref="P:System.Xml.XmlTextWriter.WriteState" /> est fermé.</exception>
    </member>
    <member name="M:System.Xml.XmlTextWriter.WriteComment(System.String)">
      <summary vsli:raw="Writes out a comment &amp;lt;!--...--&amp;gt; containing the specified text.">Écrit un commentaire &lt;!--...--&gt; contenant le texte spécifié.</summary>
      <param name="text" vsli:raw="Text to place inside the comment.">Texte à placer dans le commentaire.</param>
      <exception cref="T:System.ArgumentException" vsli:raw="The text would result in a non-well formed XML document.">Le texte est à l'origine d'un document XML incorrect.</exception>
      <exception cref="T:System.InvalidOperationException" vsli:raw="The &lt;see cref=&quot;P:System.Xml.XmlTextWriter.WriteState&quot; /&gt; is &lt;see langword=&quot;Closed&quot; /&gt;.">
        <see cref="P:System.Xml.XmlTextWriter.WriteState" /> a la valeur <see langword="Closed" />.</exception>
    </member>
    <member name="M:System.Xml.XmlTextWriter.WriteDocType(System.String,System.String,System.String,System.String)">
      <summary vsli:raw="Writes the DOCTYPE declaration with the specified name and optional attributes.">Écrit la déclaration DOCTYPE avec le nom et les attributs facultatifs spécifiés.</summary>
      <param name="name" vsli:raw="The name of the DOCTYPE. This must be non-empty.">Nom de DOCTYPE. Ne doit pas être vide.</param>
      <param name="pubid" vsli:raw="If non-null it also writes PUBLIC &quot;pubid&quot; &quot;sysid&quot; where &lt;paramref name=&quot;pubid&quot; /&gt; and &lt;paramref name=&quot;sysid&quot; /&gt; are replaced with the value of the given arguments.">Si la valeur est non null, elle écrit également PUBLIC "pubid" "sysid", <paramref name="pubid" /> et <paramref name="sysid" /> étant remplacés par la valeur des arguments spécifiés.</param>
      <param name="sysid" vsli:raw="If &lt;paramref name=&quot;pubid&quot; /&gt; is null and &lt;paramref name=&quot;sysid&quot; /&gt; is non-null it writes SYSTEM &quot;sysid&quot; where &lt;paramref name=&quot;sysid&quot; /&gt; is replaced with the value of this argument.">Si <paramref name="pubid" /> est null et que <paramref name="sysid" /> est non null, elle écrit SYSTEM "sysid", <paramref name="sysid" /> étant remplacé par la valeur de cet argument.</param>
      <param name="subset" vsli:raw="If non-null it writes [subset] where subset is replaced with the value of this argument.">Si la valeur est non null, elle écrit [subset] où subset est remplacé par la valeur de cet argument.</param>
      <exception cref="T:System.InvalidOperationException" vsli:raw="This method was called outside the prolog (after the root element).">Cette méthode a été appelée en dehors du prologue (après l'élément racine).</exception>
      <exception cref="T:System.ArgumentException" vsli:raw="&lt;paramref name=&quot;name&quot; /&gt; is &lt;see langword=&quot;null&quot; /&gt; or &lt;see langword=&quot;String.Empty&quot; /&gt;  &#xA;  &#xA; -or-  &#xA;  &#xA; the value for &lt;paramref name=&quot;name&quot; /&gt; would result in invalid XML.">
        <paramref name="name" /> ou <see langword="null" /> est <see langword="String.Empty" />.  
  
- ou - 
La valeur de <paramref name="name" /> produit un contenu XML non valide.</exception>
    </member>
    <member name="M:System.Xml.XmlTextWriter.WriteEndAttribute">
      <summary vsli:raw="Closes the previous &lt;see cref=&quot;M:System.Xml.XmlTextWriter.WriteStartAttribute(System.String,System.String,System.String)&quot; /&gt; call.">Ferme le précédent appel de <see cref="M:System.Xml.XmlTextWriter.WriteStartAttribute(System.String,System.String,System.String)" />.</summary>
    </member>
    <member name="M:System.Xml.XmlTextWriter.WriteEndDocument">
      <summary vsli:raw="Closes any open elements or attributes and puts the writer back in the Start state.">Ferme les éléments ou attributs ouverts, et replace le writer à l'état Start.</summary>
      <exception cref="T:System.ArgumentException" vsli:raw="The XML document is invalid.">Le document XML n'est pas valide.</exception>
    </member>
    <member name="M:System.Xml.XmlTextWriter.WriteEndElement">
      <summary vsli:raw="Closes one element and pops the corresponding namespace scope.">Ferme un élément et exécute un pop sur la portée espace de noms correspondante.</summary>
    </member>
    <member name="M:System.Xml.XmlTextWriter.WriteEntityRef(System.String)">
      <summary vsli:raw="Writes out an entity reference as &lt;see langword=&quot;&amp;amp;name;&quot; /&gt;.">ةcrit une référence d'entité comme suit : <see langword="&amp;name;" />.</summary>
      <param name="name" vsli:raw="Name of the entity reference.">Nom de la référence de l'entité.</param>
      <exception cref="T:System.ArgumentException" vsli:raw="The text would result in a non-well formed XML document or &lt;paramref name=&quot;name&quot; /&gt; is either &lt;see langword=&quot;null&quot; /&gt; or &lt;see langword=&quot;String.Empty&quot; /&gt;.">Le texte est à l'origine d'un document XML incorrect ou <paramref name="name" /> est soit <see langword="null" />, soit <see langword="String.Empty" />.</exception>
    </member>
    <member name="M:System.Xml.XmlTextWriter.WriteFullEndElement">
      <summary vsli:raw="Closes one element and pops the corresponding namespace scope.">Ferme un élément et exécute un pop sur la portée espace de noms correspondante.</summary>
    </member>
    <member name="M:System.Xml.XmlTextWriter.WriteName(System.String)">
      <summary vsli:raw="Writes out the specified name, ensuring it is a valid name according to the W3C XML 1.0 recommendation.">Écrit le nom spécifié, en vérifiant qu’il s’agit d’un nom valide conformément à la recommandation W3C pour XML 1.0.</summary>
      <param name="name" vsli:raw="Name to write.">Nom à écrire.</param>
      <exception cref="T:System.ArgumentException" vsli:raw="&lt;paramref name=&quot;name&quot; /&gt; is not a valid XML name; or &lt;paramref name=&quot;name&quot; /&gt; is either &lt;see langword=&quot;null&quot; /&gt; or &lt;see langword=&quot;String.Empty&quot; /&gt;.">
        <paramref name="name" /> n'est pas un nom XML valide ; ou <paramref name="name" /> est soit <see langword="null" />, soit <see langword="String.Empty" />.</exception>
    </member>
    <member name="M:System.Xml.XmlTextWriter.WriteNmToken(System.String)">
      <summary vsli:raw="Writes out the specified name, ensuring it is a valid &lt;see langword=&quot;NmToken&quot; /&gt; according to the W3C XML 1.0 recommendation.">Écrit le nom spécifié, en vérifiant qu’il s’agit d’un <see langword="NmToken" /> valide conformément à la recommandation W3C pour XML 1.0.</summary>
      <param name="name" vsli:raw="Name to write.">Nom à écrire.</param>
      <exception cref="T:System.ArgumentException" vsli:raw="&lt;paramref name=&quot;name&quot; /&gt; is not a valid &lt;see langword=&quot;NmToken&quot; /&gt;; or &lt;paramref name=&quot;name&quot; /&gt; is either &lt;see langword=&quot;null&quot; /&gt; or &lt;see langword=&quot;String.Empty&quot; /&gt;.">
        <paramref name="name" /> n'est pas un <see langword="NmToken" />valide ; ou <paramref name="name" /> est soit <see langword="null" />, soit <see langword="String.Empty" />.</exception>
    </member>
    <member name="M:System.Xml.XmlTextWriter.WriteProcessingInstruction(System.String,System.String)">
      <summary vsli:raw="Writes out a processing instruction with a space between the name and text as follows: &amp;lt;?name text?&amp;gt;.">Écrit une instruction de traitement avec un espace entre le nom et le texte, comme suit : &lt;?name text?&gt;.</summary>
      <param name="name" vsli:raw="Name of the processing instruction.">Nom de l'instruction de traitement.</param>
      <param name="text" vsli:raw="Text to include in the processing instruction.">Texte à inclure dans l'instruction de traitement.</param>
      <exception cref="T:System.ArgumentException" vsli:raw="The text would result in a non-well formed XML document.  &#xA;  &#xA; &lt;paramref name=&quot;name&quot; /&gt; is either &lt;see langword=&quot;null&quot; /&gt; or &lt;see langword=&quot;String.Empty&quot; /&gt;.  &#xA;  &#xA; This method is being used to create an XML declaration after &lt;see cref=&quot;M:System.Xml.XmlTextWriter.WriteStartDocument&quot; /&gt; has already been called.">Le texte est à l'origine d'un document XML incorrect.  
  
 <paramref name="name" /> a la valeur <see langword="null" /> ou <see langword="String.Empty" />.  
  
Cette méthode permet de créer une déclaration XML après l'appel de <see cref="M:System.Xml.XmlTextWriter.WriteStartDocument" />.</exception>
    </member>
    <member name="M:System.Xml.XmlTextWriter.WriteQualifiedName(System.String,System.String)">
      <summary vsli:raw="Writes out the namespace-qualified name. This method looks up the prefix that is in scope for the given namespace.">Écrit le nom qualifié de l'espace de noms. Cette méthode recherche le préfixe situé dans la portée de l'espace de noms spécifié.</summary>
      <param name="localName" vsli:raw="The local name to write.">Nom local à écrire.</param>
      <param name="ns" vsli:raw="The namespace URI to associate with the name.">URI de l'espace de noms à associer au nom.</param>
      <exception cref="T:System.ArgumentException" vsli:raw="&lt;paramref name=&quot;localName&quot; /&gt; is either &lt;see langword=&quot;null&quot; /&gt; or &lt;see langword=&quot;String.Empty&quot; /&gt;.  &#xA;  &#xA; &lt;paramref name=&quot;localName&quot; /&gt; is not a valid name according to the W3C Namespaces spec.">
        <paramref name="localName" /> a la valeur <see langword="null" /> ou <see langword="String.Empty" />.  
  
 <paramref name="localName" /> n'est pas un nom valide conformément à la spécification du W3C relative aux espaces de noms.</exception>
    </member>
    <member name="M:System.Xml.XmlTextWriter.WriteRaw(System.Char[],System.Int32,System.Int32)">
      <summary vsli:raw="Writes raw markup manually from a character buffer.">Écrit manuellement un balisage brut à partir d'une mémoire tampon de caractères.</summary>
      <param name="buffer" vsli:raw="Character array containing the text to write.">Tableau de caractères contenant le texte à écrire.</param>
      <param name="index" vsli:raw="The position within the buffer indicating the start of the text to write.">Emplacement dans la mémoire tampon indiquant le début du texte à écrire.</param>
      <param name="count" vsli:raw="The number of characters to write.">Nombre de caractères à écrire.</param>
      <exception cref="T:System.ArgumentNullException" vsli:raw="&lt;paramref name=&quot;buffer&quot; /&gt; is &lt;see langword=&quot;null&quot; /&gt;.">
        <paramref name="buffer" /> a la valeur <see langword="null" />.</exception>
      <exception cref="T:System.ArgumentOutOfRangeException" vsli:raw="&lt;paramref name=&quot;index&quot; /&gt; or &lt;paramref name=&quot;count&quot; /&gt; is less than zero.  &#xA;  &#xA; -or-  &#xA;  &#xA; The buffer length minus &lt;paramref name=&quot;index&quot; /&gt; is less than &lt;paramref name=&quot;count&quot; /&gt;.">
        <paramref name="index" /> ou <paramref name="count" /> est inférieur à zéro.  
  
- ou - 
La longueur de la mémoire tampon moins <paramref name="index" /> est inférieure à <paramref name="count" />.</exception>
    </member>
    <member name="M:System.Xml.XmlTextWriter.WriteRaw(System.String)">
      <summary vsli:raw="Writes raw markup manually from a string.">Écrit manuellement un balisage brut à partir d'une chaîne.</summary>
      <param name="data" vsli:raw="String containing the text to write.">Chaîne contenant le texte à écrire.</param>
    </member>
    <member name="M:System.Xml.XmlTextWriter.WriteStartAttribute(System.String,System.String,System.String)">
      <summary vsli:raw="Writes the start of an attribute.">Écrit le début d'un attribut.</summary>
      <param name="prefix" vsli:raw="&lt;see langword=&quot;Namespace&quot; /&gt; prefix of the attribute.">Préfixe <see langword="Namespace" /> de l'attribut.</param>
      <param name="localName" vsli:raw="&lt;see langword=&quot;LocalName&quot; /&gt; of the attribute.">
        <see langword="LocalName" /> de l'attribut.</param>
      <param name="ns" vsli:raw="&lt;see langword=&quot;NamespaceURI&quot; /&gt; of the attribute.">
        <see langword="NamespaceURI" /> de l'attribut.</param>
      <exception cref="T:System.ArgumentException" vsli:raw="&lt;paramref name=&quot;localName&quot; /&gt; is either &lt;see langword=&quot;null&quot; /&gt; or &lt;see langword=&quot;String.Empty&quot; /&gt;.">
        <paramref name="localName" /> a la valeur <see langword="null" /> ou <see langword="String.Empty" />.</exception>
    </member>
    <member name="M:System.Xml.XmlTextWriter.WriteStartDocument">
      <summary vsli:raw="Writes the XML declaration with the version &quot;1.0&quot;.">Écrit la déclaration XML avec la version "1.0".</summary>
      <exception cref="T:System.InvalidOperationException" vsli:raw="This is not the first write method called after the constructor.">Il ne s'agit pas de la première méthode d'écriture appelée à la suite du constructeur.</exception>
    </member>
    <member name="M:System.Xml.XmlTextWriter.WriteStartDocument(System.Boolean)">
      <summary vsli:raw="Writes the XML declaration with the version &quot;1.0&quot; and the standalone attribute.">Écrit la déclaration XML avec la version "1.0" et l'attribut autonome.</summary>
      <param name="standalone" vsli:raw="If &lt;see langword=&quot;true&quot; /&gt;, it writes &quot;standalone=yes&quot;; if &lt;see langword=&quot;false&quot; /&gt;, it writes &quot;standalone=no&quot;.">Si la valeur est <see langword="true" />, elle écrit "standalone=yes"; si la valeur est <see langword="false" />, elle écrit "standalone=no".</param>
      <exception cref="T:System.InvalidOperationException" vsli:raw="This is not the first write method called after the constructor.">Il ne s'agit pas de la première méthode d'écriture appelée à la suite du constructeur.</exception>
    </member>
    <member name="M:System.Xml.XmlTextWriter.WriteStartElement(System.String,System.String,System.String)">
      <summary vsli:raw="Writes the specified start tag and associates it with the given namespace and prefix.">Écrit la balise de début indiquée et l'associe à l'espace de noms et au préfixe spécifiés.</summary>
      <param name="prefix" vsli:raw="The namespace prefix of the element.">Préfixe d'espace de noms de cet élément.</param>
      <param name="localName" vsli:raw="The local name of the element.">Le nom local de l'élément.</param>
      <param name="ns" vsli:raw="The namespace URI to associate with the element. If this namespace is already in scope and has an associated prefix then the writer automatically writes that prefix also.">URI de l'espace de noms à associer à l'élément. Si cet espace de noms est déjà dans la portée et qu'il possède un préfixe associé, le writer écrit automatiquement ce préfixe également.</param>
      <exception cref="T:System.InvalidOperationException" vsli:raw="The writer is closed.">Le writer est fermé.</exception>
    </member>
    <member name="M:System.Xml.XmlTextWriter.WriteString(System.String)">
      <summary vsli:raw="Writes the given text content.">Écrit le texte spécifié.</summary>
      <param name="text" vsli:raw="Text to write.">Texte à écrire.</param>
      <exception cref="T:System.ArgumentException" vsli:raw="The text string contains an invalid surrogate pair.">La chaîne de texte contient une paire de substitution non valide.</exception>
    </member>
    <member name="M:System.Xml.XmlTextWriter.WriteSurrogateCharEntity(System.Char,System.Char)">
      <summary vsli:raw="Generates and writes the surrogate character entity for the surrogate character pair.">Génère et écrit l'entité de caractère de substitution correspondant à la paire de caractères de substitution.</summary>
      <param name="lowChar" vsli:raw="The low surrogate. This must be a value between &lt;see langword=&quot;0xDC00&quot; /&gt; and &lt;see langword=&quot;0xDFFF&quot; /&gt;.">Substitut faible. Il doit s'agir d'une valeur entre <see langword="0xDC00" /> et <see langword="0xDFFF" />.</param>
      <param name="highChar" vsli:raw="The high surrogate. This must be a value between &lt;see langword=&quot;0xD800&quot; /&gt; and &lt;see langword=&quot;0xDBFF&quot; /&gt;.">Substitut étendu. Il doit s'agir d'une valeur entre <see langword="0xD800" /> et <see langword="0xDBFF" />.</param>
      <exception cref="T:System.Exception" vsli:raw="An invalid surrogate character pair was passed.">Une paire de caractères de substitution non valide est passée.</exception>
    </member>
    <member name="M:System.Xml.XmlTextWriter.WriteWhitespace(System.String)">
      <summary vsli:raw="Writes out the given white space.">Écrit l'espace blanc spécifié</summary>
      <param name="ws" vsli:raw="The string of white space characters.">Chaîne d'espaces blancs.</param>
      <exception cref="T:System.ArgumentException" vsli:raw="The string contains non-white space characters.">La chaîne contient des caractères qui ne sont pas des espaces blancs.</exception>
    </member>
    <member name="P:System.Xml.XmlTextWriter.BaseStream">
      <summary vsli:raw="Gets the underlying stream object.">Obtient l'objet de flux sous-jacent.</summary>
      <returns vsli:raw="The stream to which the &lt;see langword=&quot;XmlTextWriter&quot; /&gt; is writing or &lt;see langword=&quot;null&quot; /&gt; if the &lt;see langword=&quot;XmlTextWriter&quot; /&gt; was constructed using a &lt;see cref=&quot;T:System.IO.TextWriter&quot; /&gt; that does not inherit from the &lt;see cref=&quot;T:System.IO.StreamWriter&quot; /&gt; class.">Flux dans lequel <see langword="XmlTextWriter" /> écrit ou <see langword="null" /> si <see langword="XmlTextWriter" /> a été construit à l'aide d'un <see cref="T:System.IO.TextWriter" /> qui n'hérite pas de la classe <see cref="T:System.IO.StreamWriter" />.</returns>
    </member>
    <member name="P:System.Xml.XmlTextWriter.Formatting">
      <summary vsli:raw="Indicates how the output is formatted.">Indique la façon dont la sortie est mise en forme.</summary>
      <returns vsli:raw="One of the &lt;see cref=&quot;T:System.Xml.Formatting&quot; /&gt; values. The default is &lt;see langword=&quot;Formatting.None&quot; /&gt; (no special formatting).">Une des valeurs de l'objet <see cref="T:System.Xml.Formatting" />. La valeur par défaut est <see langword="Formatting.None" /> (aucune mise en forme spéciale).</returns>
    </member>
    <member name="P:System.Xml.XmlTextWriter.Indentation">
      <summary vsli:raw="Gets or sets how many IndentChars to write for each level in the hierarchy when &lt;see cref=&quot;P:System.Xml.XmlTextWriter.Formatting&quot; /&gt; is set to &lt;see langword=&quot;Formatting.Indented&quot; /&gt;.">Obtient ou définit le nombre d'IndentChars à écrire pour chaque niveau de la hiérarchie lorsque <see cref="P:System.Xml.XmlTextWriter.Formatting" /> a la valeur <see langword="Formatting.Indented" />.</summary>
      <exception cref="T:System.ArgumentException" vsli:raw="Setting this property to a negative value.">Affectation d'une valeur négative à cette propriété.</exception>
      <returns vsli:raw="Number of &lt;see langword=&quot;IndentChars&quot; /&gt; for each level. The default is 2.">Nombre de <see langword="IndentChars" /> pour chaque niveau. La valeur par défaut est 2.</returns>
    </member>
    <member name="P:System.Xml.XmlTextWriter.IndentChar">
      <summary vsli:raw="Gets or sets which character to use for indenting when &lt;see cref=&quot;P:System.Xml.XmlTextWriter.Formatting&quot; /&gt; is set to &lt;see langword=&quot;Formatting.Indented&quot; /&gt;.">Obtient ou définit le caractère à utiliser pour la mise en retrait lorsque <see cref="P:System.Xml.XmlTextWriter.Formatting" /> a la valeur <see langword="Formatting.Indented" />.</summary>
      <returns vsli:raw="The character to use for indenting. The default is space.">Caractère à utiliser pour la mise en retrait. La valeur par défaut est un espace.  
  
 <block subset="none" type="note"><para><see langword="XmlTextWriter" /> vous permet d'affecter n'importe quel caractère à cette propriété. Pour garantir la validité du code XML, vous devez spécifier un espace blanc valide, 0x9, 0x10, 0x13 ou 0x20.</para></block></returns>
    </member>
    <member name="P:System.Xml.XmlTextWriter.Namespaces">
      <summary vsli:raw="Gets or sets a value indicating whether to do namespace support.">Obtient ou définit une valeur indiquant si la prise en charge des espaces de noms doit être assurée ou non.</summary>
      <exception cref="T:System.InvalidOperationException" vsli:raw="You can only change this property when in the &lt;see langword=&quot;WriteState.Start&quot; /&gt; state.">Vous ne pouvez modifier cette propriété que dans l'état <see langword="WriteState.Start" />.</exception>
      <returns vsli:raw="&lt;see langword=&quot;true&quot; /&gt; to support namespaces; otherwise, &lt;see langword=&quot;false&quot; /&gt;.  &#xA;  &#xA; The default is &lt;see langword=&quot;true&quot; /&gt;.">
        <see langword="true" /> pour assurer la prise en charge des espaces de noms ; sinon, <see langword="false" />.  
  
La valeur par défaut est <see langword="true" />.</returns>
    </member>
    <member name="P:System.Xml.XmlTextWriter.QuoteChar">
      <summary vsli:raw="Gets or sets which character to use to quote attribute values.">Obtient ou définit le caractère à utiliser pour mettre les valeurs d'attributs entre guillemets.</summary>
      <exception cref="T:System.ArgumentException" vsli:raw="Setting this property to something other than either a single or double quote.">Affectation d'un autre élément qu'un guillemet simple ou double à cette propriété.</exception>
      <returns vsli:raw="The character to use to quote attribute values. This must be a single quote (&amp;amp;#39;) or a double quote (&amp;amp;#34;). The default is a double quote.">Caractère à utiliser pour mettre les valeurs d'attributs entre guillemets. Il doit s’agir d’un guillemet simple ( &amp; #39 ;) ou un guillemet double ( &amp; #34 ;). La valeur par défaut est un guillemet double.</returns>
    </member>
    <member name="P:System.Xml.XmlTextWriter.WriteState">
      <summary vsli:raw="Gets the state of the writer.">Obtient l'état du writer.</summary>
      <returns vsli:raw="One of the &lt;see cref=&quot;T:System.Xml.WriteState&quot; /&gt; values.">Une des valeurs de l'objet <see cref="T:System.Xml.WriteState" />.</returns>
    </member>
    <member name="P:System.Xml.XmlTextWriter.XmlLang">
      <summary vsli:raw="Gets the current &lt;see langword=&quot;xml:lang&quot; /&gt; scope.">Obtient la portée de <see langword="xml:lang" /> actuelle.</summary>
      <returns vsli:raw="The current &lt;see langword=&quot;xml:lang&quot; /&gt; or &lt;see langword=&quot;null&quot; /&gt; if there is no &lt;see langword=&quot;xml:lang&quot; /&gt; in the current scope.">
        <see langword="xml:lang" /> actuel ou <see langword="null" /> s'il n'y a aucun <see langword="xml:lang" /> dans la portée actuelle.</returns>
    </member>
    <member name="P:System.Xml.XmlTextWriter.XmlSpace">
      <summary vsli:raw="Gets an &lt;see cref=&quot;T:System.Xml.XmlSpace&quot; /&gt; representing the current &lt;see langword=&quot;xml:space&quot; /&gt; scope.">Obtient un <see cref="T:System.Xml.XmlSpace" /> représentant la portée <see langword="xml:space" /> en cours.</summary>
      <returns vsli:raw="An &lt;see langword=&quot;XmlSpace&quot; /&gt; representing the current &lt;see langword=&quot;xml:space&quot; /&gt; scope.  &#xA;  &#xA; &lt;list type=&quot;table&quot;&gt;&lt;listheader&gt;&lt;term&gt; Value&lt;/term&gt;&lt;description&gt; Meaning&lt;/description&gt;&lt;/listheader&gt;&lt;item&gt;&lt;term&gt; None&lt;/term&gt;&lt;description&gt; This is the default if no &lt;see langword=&quot;xml:space&quot; /&gt; scope exists.&lt;/description&gt;&lt;/item&gt;&lt;item&gt;&lt;term&gt; Default&lt;/term&gt;&lt;description&gt; The current scope is &lt;see langword=&quot;xml:space&quot; /&gt;=&quot;default&quot;.&lt;/description&gt;&lt;/item&gt;&lt;item&gt;&lt;term&gt; Preserve&lt;/term&gt;&lt;description&gt; The current scope is &lt;see langword=&quot;xml:space&quot; /&gt;=&quot;preserve&quot;.&lt;/description&gt;&lt;/item&gt;&lt;/list&gt;">Obtient un <see langword="XmlSpace" /> représentant la portée <see langword="xml:space" /> en cours.  
  
 <list type="table"><listheader><term> Valeur</term><description> Signification</description></listheader><item><term> Aucun</term><description> Valeur par défaut si aucune portée <see langword="xml:space" /> n'existe.</description></item><item><term> Par défaut</term><description> La portée actuelle est <see langword="xml:space" />= "default".</description></item><item><term> Preserve</term><description> La portée actuelle est <see langword="xml:space" />= "preserve".</description></item></list></returns>
    </member>
    <member name="T:System.Xml.XmlTokenizedType">
      <summary vsli:raw="Represents the XML type for the string. This allows the string to be read as a particular XML type, for example a CDATA section type.">Représente le type XML de la chaîne. Cela permet ainsi de lire la chaîne selon un type XML particulier, par exemple un type de section CDATA.</summary>
    </member>
    <member name="F:System.Xml.XmlTokenizedType.CDATA">
      <summary vsli:raw="CDATA type.">Type CDATA.</summary>
    </member>
    <member name="F:System.Xml.XmlTokenizedType.ENTITIES">
      <summary vsli:raw="ENTITIES type.">Type ENTITIES.</summary>
    </member>
    <member name="F:System.Xml.XmlTokenizedType.ENTITY">
      <summary vsli:raw="ENTITY type.">Type ENTITY.</summary>
    </member>
    <member name="F:System.Xml.XmlTokenizedType.ENUMERATION">
      <summary vsli:raw="ENUMERATION type.">Type ENUMERATION.</summary>
    </member>
    <member name="F:System.Xml.XmlTokenizedType.ID">
      <summary vsli:raw="ID type.">Type ID.</summary>
    </member>
    <member name="F:System.Xml.XmlTokenizedType.IDREF">
      <summary vsli:raw="IDREF type.">Type IDREF.</summary>
    </member>
    <member name="F:System.Xml.XmlTokenizedType.IDREFS">
      <summary vsli:raw="IDREFS type.">Type IDREFS.</summary>
    </member>
    <member name="F:System.Xml.XmlTokenizedType.NCName">
      <summary vsli:raw="NCName type.">Type NCName.</summary>
    </member>
    <member name="F:System.Xml.XmlTokenizedType.NMTOKEN">
      <summary vsli:raw="NMTOKEN type.">Type NMTOKEN.</summary>
    </member>
    <member name="F:System.Xml.XmlTokenizedType.NMTOKENS">
      <summary vsli:raw="NMTOKENS type.">Type NMTOKENS.</summary>
    </member>
    <member name="F:System.Xml.XmlTokenizedType.None">
      <summary vsli:raw="No type.">Pas de type.</summary>
    </member>
    <member name="F:System.Xml.XmlTokenizedType.NOTATION">
      <summary vsli:raw="NOTATION type.">Type NOTATION.</summary>
    </member>
    <member name="F:System.Xml.XmlTokenizedType.QName">
      <summary vsli:raw="QName type.">Type QName.</summary>
    </member>
    <member name="T:System.Xml.XmlUrlResolver">
      <summary vsli:raw="Resolves external XML resources named by a Uniform Resource Identifier (URI).">Résout les ressources XML externes nommées par un URI (Uniform Resource Identifier).</summary>
    </member>
    <member name="M:System.Xml.XmlUrlResolver.#ctor">
      <summary vsli:raw="Initializes a new instance of the &lt;see cref=&quot;T:System.Xml.XmlUrlResolver&quot; /&gt; class.">Initialise une nouvelle instance de la classe <see cref="T:System.Xml.XmlUrlResolver" />.</summary>
    </member>
    <member name="M:System.Xml.XmlUrlResolver.GetEntity(System.Uri,System.String,System.Type)">
      <summary vsli:raw="Maps a URI to an object that contains the actual resource.">Mappe un URI vers un objet contenant la ressource réelle.</summary>
      <param name="absoluteUri" vsli:raw="The URI returned from &lt;see cref=&quot;M:System.Xml.XmlResolver.ResolveUri(System.Uri,System.String)&quot; /&gt;.">URI retourné par <see cref="M:System.Xml.XmlResolver.ResolveUri(System.Uri,System.String)" />.</param>
      <param name="role" vsli:raw="Currently not used.">Pas utilisé pour l’instant.</param>
      <param name="ofObjectToReturn" vsli:raw="The type of object to return. The current implementation only returns &lt;see cref=&quot;T:System.IO.Stream&quot; /&gt; objects.">Type d'objet à retourner. L'implémentation actuelle ne retourne que des objets <see cref="T:System.IO.Stream" />.</param>
      <exception cref="T:System.Xml.XmlException" vsli:raw="&lt;paramref name=&quot;ofObjectToReturn&quot; /&gt; is neither &lt;see langword=&quot;null&quot; /&gt; nor a &lt;see langword=&quot;Stream&quot; /&gt; type.">
        <paramref name="ofObjectToReturn" /> n'est ni <see langword="null" /> ni un type <see langword="Stream" />.</exception>
      <exception cref="T:System.UriFormatException" vsli:raw="The specified URI is not an absolute URI.">L'URI spécifié n'est pas un URI absolu.</exception>
      <exception cref="T:System.ArgumentNullException" vsli:raw="&lt;paramref name=&quot;absoluteUri&quot; /&gt; is &lt;see langword=&quot;null&quot; /&gt;.">
        <paramref name="absoluteUri" /> a la valeur <see langword="null" />.</exception>
      <exception cref="T:System.Exception" vsli:raw="There is a runtime error (for example, an interrupted server connection).">Une erreur d'exécution se produit (par exemple, une interruption de la connexion au serveur).</exception>
      <returns vsli:raw="A stream object or &lt;see langword=&quot;null&quot; /&gt; if a type other than stream is specified.">Objet de flux ou <see langword="null" /> si un type autre que stream est spécifié.</returns>
    </member>
    <member name="M:System.Xml.XmlUrlResolver.GetEntityAsync(System.Uri,System.String,System.Type)">
      <summary vsli:raw="Asynchronously maps a URI to an object that contains the actual resource.">Mappe de façon asynchrone un URI vers un objet contenant la ressource réelle.</summary>
      <param name="absoluteUri" vsli:raw="The URI returned from &lt;see cref=&quot;M:System.Xml.XmlResolver.ResolveUri(System.Uri,System.String)&quot; /&gt;.">URI retourné par <see cref="M:System.Xml.XmlResolver.ResolveUri(System.Uri,System.String)" />.</param>
      <param name="role" vsli:raw="Currently not used.">Pas utilisé pour l’instant.</param>
      <param name="ofObjectToReturn" vsli:raw="The type of object to return. The current implementation only returns &lt;see cref=&quot;T:System.IO.Stream&quot; /&gt; objects.">Type d'objet à retourner. L'implémentation actuelle ne retourne que des objets <see cref="T:System.IO.Stream" />.</param>
      <returns vsli:raw="A stream object or &lt;see langword=&quot;null&quot; /&gt; if a type other than stream is specified.">Objet de flux ou <see langword="null" /> si un type autre que stream est spécifié.</returns>
    </member>
    <member name="M:System.Xml.XmlUrlResolver.ResolveUri(System.Uri,System.String)">
      <summary vsli:raw="Resolves the absolute URI from the base and relative URIs.">Résout l'URI absolu à partir des URI de base et relatifs.</summary>
      <param name="baseUri" vsli:raw="The base URI used to resolve the relative URI.">URI de base utilisé pour résoudre l'URI relatif.</param>
      <param name="relativeUri" vsli:raw="The URI to resolve. The URI can be absolute or relative. If absolute, this value effectively replaces the &lt;paramref name=&quot;baseUri&quot; /&gt; value. If relative, it combines with the &lt;paramref name=&quot;baseUri&quot; /&gt; to make an absolute URI.">URI à résoudre. L'URI peut être absolu ou relatif. S'il est absolu, cette valeur remplace effectivement la valeur de <paramref name="baseUri" />. S'il est relatif, il se combine à <paramref name="baseUri" /> pour produire un URI absolu.</param>
      <exception cref="T:System.ArgumentNullException" vsli:raw="&lt;paramref name=&quot;baseUri&quot; /&gt; is &lt;see langword=&quot;null&quot; /&gt; or &lt;paramref name=&quot;relativeUri&quot; /&gt; is &lt;see langword=&quot;null&quot; /&gt;.">
        <paramref name="baseUri" /> a la valeur <see langword="null" /> ou <paramref name="relativeUri" /> a la valeur <see langword="null" />.</exception>
      <returns vsli:raw="The absolute URI, or &lt;see langword=&quot;null&quot; /&gt; if the relative URI cannot be resolved.">URI absolu ou <see langword="null" /> si l'URI relatif ne peut pas être résolu.</returns>
    </member>
    <member name="P:System.Xml.XmlUrlResolver.CachePolicy">
      <summary vsli:raw="Gets or sets the cache policy for the underlying &lt;see cref=&quot;T:System.Net.WebRequest&quot; /&gt; object.">Obtient ou définit la stratégie de cache pour l'objet <see cref="T:System.Net.WebRequest" /> sous-jacent.</summary>
      <returns vsli:raw="The cache policy for the underlying web request.">Stratégie de cache pour la requête web sous-jacente.</returns>
    </member>
    <member name="P:System.Xml.XmlUrlResolver.Credentials">
      <summary vsli:raw="Sets credentials used to authenticate web requests.">Définit les informations d'identification utilisées pour authentifier les demandes web.</summary>
      <returns vsli:raw="The credentials to be used to authenticate web requests. If this property is not set, the value defaults to &lt;see langword=&quot;null&quot; /&gt;; that is, the &lt;see langword=&quot;XmlUrlResolver&quot; /&gt; has no user credentials.">Informations d'identification à utiliser pour authentifier les demandes web. Si cette propriété n'est pas définie, la valeur par défaut est <see langword="null" /> ; <see langword="XmlUrlResolver" /> n'a donc pas d'informations d'identification d'utilisateur.</returns>
    </member>
    <member name="P:System.Xml.XmlUrlResolver.Proxy">
      <summary vsli:raw="Gets or sets the network proxy for the underlying &lt;see cref=&quot;T:System.Net.WebRequest&quot; /&gt; object.">Obtient ou définit le proxy réseau pour l'objet <see cref="T:System.Net.WebRequest" /> sous-jacent.</summary>
      <returns vsli:raw="The &lt;see cref=&quot;T:System.Net.IWebProxy&quot; /&gt; to use to access the Internet resource.">Élément <see cref="T:System.Net.IWebProxy" /> à utiliser pour accéder à la ressource Internet.</returns>
    </member>
    <member name="T:System.Xml.XmlValidatingReader">
      <summary vsli:raw="Represents a reader that provides document type definition (DTD), XML-Data Reduced (XDR) schema, and XML Schema definition language (XSD) validation.  &#xA;  &#xA; This class is obsolete. Starting with the .NET Framework 2.0, we recommend that you use the &lt;see cref=&quot;T:System.Xml.XmlReaderSettings&quot; /&gt; class and the &lt;see cref=&quot;Overload:System.Xml.XmlReader.Create&quot; /&gt; method to create a validating XML reader.">Représente un lecteur fournissant une validation de définition de type de document (DTD), de schéma XDR (XML-Data Reduced) et en langage XSD (XML Schema Definition).  
  
Cette classe est obsolète. À compter de .NET Framework 2.0, nous vous recommandons d'utiliser la classe <see cref="T:System.Xml.XmlReaderSettings" /> et la méthode <see cref="Overload:System.Xml.XmlReader.Create" /> pour créer un lecteur XML de validation.</summary>
    </member>
    <member name="E:System.Xml.XmlValidatingReader.ValidationEventHandler">
      <summary vsli:raw="Sets an event handler for receiving information about document type definition (DTD), XML-Data Reduced (XDR) schema, and XML Schema definition language (XSD) schema validation errors.">Définit un gestionnaire d’événements pour la réception d’informations sur les erreurs de validation de définition de type de document (DTD), de schéma XDR (XML-Data Reduced) et en langage XSD (XML Schema Definition).</summary>
    </member>
    <member name="M:System.Xml.XmlValidatingReader.#ctor(System.IO.Stream,System.Xml.XmlNodeType,System.Xml.XmlParserContext)">
      <summary vsli:raw="Initializes a new instance of the &lt;see langword=&quot;XmlValidatingReader&quot; /&gt; class with the specified values.">Initialise une nouvelle instance de la classe <see langword="XmlValidatingReader" /> avec les valeurs spécifiées.</summary>
      <param name="xmlFragment" vsli:raw="The stream containing the XML fragment to parse.">Flux contenant le fragment XML à analyser.</param>
      <param name="fragType" vsli:raw="The &lt;see cref=&quot;T:System.Xml.XmlNodeType&quot; /&gt; of the XML fragment. This determines what the fragment can contain (see table below).">
        <see cref="T:System.Xml.XmlNodeType" /> du fragment XML. Ceci détermine ce que le fragment peut contenir (consultez le tableau ci-dessous).</param>
      <param name="context" vsli:raw="The &lt;see cref=&quot;T:System.Xml.XmlParserContext&quot; /&gt; in which the XML fragment is to be parsed. This includes the &lt;see cref=&quot;T:System.Xml.XmlNameTable&quot; /&gt; to use, encoding, namespace scope, current &lt;see langword=&quot;xml:lang&quot; /&gt;, and &lt;see langword=&quot;xml:space&quot; /&gt; scope.">
        <see cref="T:System.Xml.XmlParserContext" /> dans lequel le fragment XML doit être analysé. Ceci inclut le <see cref="T:System.Xml.XmlNameTable" /> à utiliser, l'encodage, la portée de l'espace de noms, le <see langword="xml:lang" /> actuel et la portée de <see langword="xml:space" />.</param>
      <exception cref="T:System.Xml.XmlException" vsli:raw="&lt;paramref name=&quot;fragType&quot; /&gt; is not one of the node types listed in the table below.">
        <paramref name="fragType" /> ne fait pas partie des types de nœuds répertoriés dans le tableau ci-dessous.</exception>
    </member>
    <member name="M:System.Xml.XmlValidatingReader.#ctor(System.String,System.Xml.XmlNodeType,System.Xml.XmlParserContext)">
      <summary vsli:raw="Initializes a new instance of the &lt;see langword=&quot;XmlValidatingReader&quot; /&gt; class with the specified values.">Initialise une nouvelle instance de la classe <see langword="XmlValidatingReader" /> avec les valeurs spécifiées.</summary>
      <param name="xmlFragment" vsli:raw="The string containing the XML fragment to parse.">Chaîne contenant le fragment XML à analyser.</param>
      <param name="fragType" vsli:raw="The &lt;see cref=&quot;T:System.Xml.XmlNodeType&quot; /&gt; of the XML fragment. This also determines what the fragment string can contain (see table below).">
        <see cref="T:System.Xml.XmlNodeType" /> du fragment XML. Ceci détermine également ce que la chaîne du fragment peut contenir (consultez le tableau ci-dessous).</param>
      <param name="context" vsli:raw="The &lt;see cref=&quot;T:System.Xml.XmlParserContext&quot; /&gt; in which the XML fragment is to be parsed. This includes the &lt;see cref=&quot;T:System.Xml.NameTable&quot; /&gt; to use, encoding, namespace scope, current xml:lang, and xml:space scope.">
        <see cref="T:System.Xml.XmlParserContext" /> dans lequel le fragment XML doit être analysé. Ceci inclut le <see cref="T:System.Xml.NameTable" /> à utiliser, l'encodage, la portée de l'espace de noms, le xml:lang actuel et la portée de xml:space.</param>
      <exception cref="T:System.Xml.XmlException" vsli:raw="&lt;paramref name=&quot;fragType&quot; /&gt; is not one of the node types listed in the table below.">
        <paramref name="fragType" /> ne fait pas partie des types de nœuds répertoriés dans le tableau ci-dessous.</exception>
    </member>
    <member name="M:System.Xml.XmlValidatingReader.#ctor(System.Xml.XmlReader)">
      <summary vsli:raw="Initializes a new instance of the &lt;see langword=&quot;XmlValidatingReader&quot; /&gt; class that validates the content returned from the given &lt;see cref=&quot;T:System.Xml.XmlReader&quot; /&gt;.">Initialise une nouvelle instance de la classe <see langword="XmlValidatingReader" /> qui valide le contenu retourné à partir du <see cref="T:System.Xml.XmlReader" /> en question.</summary>
      <param name="reader" vsli:raw="The &lt;see langword=&quot;XmlReader&quot; /&gt; to read from while validating. The current implementation supports only &lt;see cref=&quot;T:System.Xml.XmlTextReader&quot; /&gt;.">
        <see langword="XmlReader" /> à lire au moment de la validation. L'implémentation actuelle ne prend en charge que <see cref="T:System.Xml.XmlTextReader" />.</param>
      <exception cref="T:System.ArgumentException" vsli:raw="The reader specified is not an &lt;see langword=&quot;XmlTextReader&quot; /&gt;.">Le lecteur spécifié n'est pas <see langword="XmlTextReader" />.</exception>
    </member>
    <member name="M:System.Xml.XmlValidatingReader.Close">
      <summary vsli:raw="Changes the &lt;see cref=&quot;P:System.Xml.XmlReader.ReadState&quot; /&gt; to Closed.">Modifie <see cref="P:System.Xml.XmlReader.ReadState" /> en lui attribuant la valeur Closed.</summary>
    </member>
    <member name="M:System.Xml.XmlValidatingReader.GetAttribute(System.Int32)">
      <summary vsli:raw="Gets the value of the attribute with the specified index.">Obtient la valeur de l'attribut avec l'index spécifié.</summary>
      <param name="i" vsli:raw="The index of the attribute. The index is zero-based. (The first attribute has index 0.)">Index de l'attribut. L'index est de base zéro. Le premier attribut possède l'index 0.</param>
      <exception cref="T:System.ArgumentOutOfRangeException" vsli:raw="The &lt;paramref name=&quot;i&quot; /&gt; parameter is less than 0 or greater than or equal to &lt;see cref=&quot;P:System.Xml.XmlValidatingReader.AttributeCount&quot; /&gt;.">Le paramètre <paramref name="i" /> est inférieur à 0 ou encore supérieur ou égal à <see cref="P:System.Xml.XmlValidatingReader.AttributeCount" />.</exception>
      <returns vsli:raw="The value of the specified attribute.">Valeur de l'attribut spécifié.</returns>
    </member>
    <member name="M:System.Xml.XmlValidatingReader.GetAttribute(System.String)">
      <summary vsli:raw="Gets the value of the attribute with the specified name.">Obtient la valeur de l'attribut avec le nom spécifié.</summary>
      <param name="name" vsli:raw="The qualified name of the attribute.">Nom qualifié de l'attribut.</param>
      <returns vsli:raw="The value of the specified attribute. If the attribute is not found, &lt;see langword=&quot;null&quot; /&gt; is returned.">Valeur de l'attribut spécifié. Si l'attribut est introuvable, <see langword="null" /> est retourné.</returns>
    </member>
    <member name="M:System.Xml.XmlValidatingReader.GetAttribute(System.String,System.String)">
      <summary vsli:raw="Gets the value of the attribute with the specified local name and namespace Uniform Resource Identifier (URI).">Obtient la valeur de l'attribut avec le nom local et l'URI (Uniform Resource Identifier) de l'espace de noms spécifiés.</summary>
      <param name="localName" vsli:raw="The local name of the attribute.">Le nom local de l'attribut.</param>
      <param name="namespaceURI" vsli:raw="The namespace URI of the attribute.">L'URI de l'espace de noms de l'attribut.</param>
      <returns vsli:raw="The value of the specified attribute. If the attribute is not found, &lt;see langword=&quot;null&quot; /&gt; is returned. This method does not move the reader.">Valeur de l'attribut spécifié. Si l'attribut est introuvable, <see langword="null" /> est retourné. Cette méthode ne déplace pas le lecteur.</returns>
    </member>
    <member name="M:System.Xml.XmlValidatingReader.HasLineInfo">
      <summary vsli:raw="Gets a value indicating whether the class can return line information.">Obtient une valeur indiquant si la classe peut retourner des informations de ligne.</summary>
      <returns vsli:raw="&lt;see langword=&quot;true&quot; /&gt; if the class can return line information; otherwise, &lt;see langword=&quot;false&quot; /&gt;.">
        <see langword="true" /> si la classe peut retourner des informations de ligne ; sinon, <see langword="false" />.</returns>
    </member>
    <member name="M:System.Xml.XmlValidatingReader.LookupNamespace(System.String)">
      <summary vsli:raw="Resolves a namespace prefix in the current element's scope.">Résout un préfixe de l'espace de noms dans la portée de l'élément actuel.</summary>
      <param name="prefix" vsli:raw="The prefix whose namespace Uniform Resource Identifier (URI) you want to resolve. To match the default namespace, pass an empty string.">Préfixe dont vous souhaitez résoudre l'URI (Uniform Resource Identifier) d'espace de noms. Pour établir une correspondance avec l'espace de noms par défaut, passez une chaîne vide.</param>
      <returns vsli:raw="The namespace URI to which the prefix maps or &lt;see langword=&quot;null&quot; /&gt; if no matching prefix is found.">URI de l'espace de noms vers lequel le préfixe est mappé ou <see langword="null" /> si aucun préfixe correspondant n'est trouvé.</returns>
    </member>
    <member name="M:System.Xml.XmlValidatingReader.MoveToAttribute(System.Int32)">
      <summary vsli:raw="Moves to the attribute with the specified index.">Se déplace vers l'attribut avec l'index spécifié.</summary>
      <param name="i" vsli:raw="The index of the attribute.">Index de l'attribut.</param>
      <exception cref="T:System.ArgumentOutOfRangeException" vsli:raw="The &lt;paramref name=&quot;i&quot; /&gt; parameter is less than 0 or greater than or equal to &lt;see cref=&quot;P:System.Xml.XmlReader.AttributeCount&quot; /&gt;.">Le paramètre <paramref name="i" /> est inférieur à 0 ou encore supérieur ou égal à <see cref="P:System.Xml.XmlReader.AttributeCount" />.</exception>
    </member>
    <member name="M:System.Xml.XmlValidatingReader.MoveToAttribute(System.String)">
      <summary vsli:raw="Moves to the attribute with the specified name.">Se déplace vers l'attribut avec le nom spécifié.</summary>
      <param name="name" vsli:raw="The qualified name of the attribute.">Nom qualifié de l'attribut.</param>
      <returns vsli:raw="&lt;see langword=&quot;true&quot; /&gt; if the attribute is found; otherwise, &lt;see langword=&quot;false&quot; /&gt;. If &lt;see langword=&quot;false&quot; /&gt;, the position of the reader does not change.">
        <see langword="true" /> si l'attribut est trouvé ; sinon, <see langword="false" />. Si la valeur est <see langword="false" />, la position du lecteur ne change pas.</returns>
    </member>
    <member name="M:System.Xml.XmlValidatingReader.MoveToAttribute(System.String,System.String)">
      <summary vsli:raw="Moves to the attribute with the specified local name and namespace Uniform Resource Identifier (URI).">Se déplace vers l'attribut possédant le nom local et l'URI (Uniform Resource Identifier) de l'espace de noms spécifiés.</summary>
      <param name="localName" vsli:raw="The local name of the attribute.">Le nom local de l'attribut.</param>
      <param name="namespaceURI" vsli:raw="The namespace URI of the attribute.">L'URI de l'espace de noms de l'attribut.</param>
      <returns vsli:raw="&lt;see langword=&quot;true&quot; /&gt; if the attribute is found; otherwise, &lt;see langword=&quot;false&quot; /&gt;. If &lt;see langword=&quot;false&quot; /&gt;, the position of the reader does not change.">
        <see langword="true" /> si l'attribut est trouvé ; sinon, <see langword="false" />. Si la valeur est <see langword="false" />, la position du lecteur ne change pas.</returns>
    </member>
    <member name="M:System.Xml.XmlValidatingReader.MoveToElement">
      <summary vsli:raw="Moves to the element that contains the current attribute node.">Se déplace vers l'élément contenant le nœud d'attribut actuel.</summary>
      <returns vsli:raw="&lt;see langword=&quot;true&quot; /&gt; if the reader is positioned on an attribute (the reader moves to the element that owns the attribute); &lt;see langword=&quot;false&quot; /&gt; if the reader is not positioned on an attribute (the position of the reader does not change).">
        <see langword="true" /> si le lecteur est placé sur un attribut (le lecteur se déplace vers l'élément qui possède l'attribut) ; <see langword="false" /> si le lecteur n'est pas placé sur un attribut (la position du lecteur ne change pas).</returns>
    </member>
    <member name="M:System.Xml.XmlValidatingReader.MoveToFirstAttribute">
      <summary vsli:raw="Moves to the first attribute.">Effectue un déplacement vers le premier attribut.</summary>
      <returns vsli:raw="&lt;see langword=&quot;true&quot; /&gt; if an attribute exists (the reader moves to the first attribute); otherwise, &lt;see langword=&quot;false&quot; /&gt; (the position of the reader does not change).">
        <see langword="true" /> si un attribut existe (le lecteur se déplace vers le premier attribut) ; sinon, <see langword="false" /> (la position du lecteur ne change pas).</returns>
    </member>
    <member name="M:System.Xml.XmlValidatingReader.MoveToNextAttribute">
      <summary vsli:raw="Moves to the next attribute.">Effectue un déplacement vers l'attribut suivant.</summary>
      <returns vsli:raw="&lt;see langword=&quot;true&quot; /&gt; if there is a next attribute; &lt;see langword=&quot;false&quot; /&gt; if there are no more attributes.">
        <see langword="true" /> s'il existe un attribut suivant ; <see langword="false" /> s'il n'existe plus d'attributs.</returns>
    </member>
    <member name="M:System.Xml.XmlValidatingReader.Read">
      <summary vsli:raw="Reads the next node from the stream.">Lit le nœud suivant du flux.</summary>
      <returns vsli:raw="&lt;see langword=&quot;true&quot; /&gt; if the next node was read successfully; &lt;see langword=&quot;false&quot; /&gt; if there are no more nodes to read.">
        <see langword="true" /> si le nœud suivant a été lu correctement ; <see langword="false" /> s'il n'y a plus de nœuds à lire.</returns>
    </member>
    <member name="M:System.Xml.XmlValidatingReader.ReadAttributeValue">
      <summary vsli:raw="Parses the attribute value into one or more &lt;see langword=&quot;Text&quot; /&gt;, &lt;see langword=&quot;EntityReference&quot; /&gt;, or &lt;see langword=&quot;EndEntity&quot; /&gt; nodes.">Analyse la valeur d'attribut selon un ou plusieurs nœuds <see langword="Text" />, <see langword="EntityReference" /> ou <see langword="EndEntity" />.</summary>
      <returns vsli:raw="&lt;see langword=&quot;true&quot; /&gt; if there are nodes to return.  &#xA;  &#xA; &lt;see langword=&quot;false&quot; /&gt; if the reader is not positioned on an attribute node when the initial call is made or if all the attribute values have been read.  &#xA;  &#xA; An empty attribute, such as, &lt;c&gt;misc=&quot;&quot;&lt;/c&gt;, returns &lt;see langword=&quot;true&quot; /&gt; with a single node with a value of String.Empty.">
        <see langword="true" /> s'il y a des nœuds à retourner.  
  
 <see langword="false" /> si le lecteur n'est pas placé sur un nœud d'attribut quand l'appel initial est effectué ou si toutes les valeurs d'attributs ont été lues.  
  
Un attribut vide, tel que <c>misc=""</c>, retourne <see langword="true" /> avec un nœud unique et la valeur String.Empty.</returns>
    </member>
    <member name="M:System.Xml.XmlValidatingReader.ReadContentAsBase64(System.Byte[],System.Int32,System.Int32)">
      <summary vsli:raw="Reads the content and returns the Base64 decoded binary bytes.">Lit le contenu et retourne les octets binaires décodés au format Base64.</summary>
      <param name="buffer" vsli:raw="The buffer into which to copy the resulting text. This value cannot be &lt;see langword=&quot;null&quot; /&gt;.">Mémoire tampon dans laquelle copier le texte obtenu. Cette valeur ne peut pas être <see langword="null" />.</param>
      <param name="index" vsli:raw="The offset into the buffer where to start copying the result.">Offset de la mémoire tampon où commence la copie du résultat.</param>
      <param name="count" vsli:raw="The maximum number of bytes to copy into the buffer. The actual number of bytes copied is returned from this method.">Nombre maximal d'octets à copier dans la mémoire tampon. Le nombre réel d'octets copiés est retourné à partir de cette méthode.</param>
      <exception cref="T:System.ArgumentNullException" vsli:raw="The &lt;paramref name=&quot;buffer&quot; /&gt; value is &lt;see langword=&quot;null&quot; /&gt;.">
        <paramref name="buffer" /> a la valeur <see langword="null" />.</exception>
      <exception cref="T:System.InvalidOperationException" vsli:raw="&lt;see cref=&quot;M:System.Xml.XmlValidatingReader.ReadContentAsBase64(System.Byte[],System.Int32,System.Int32)&quot; /&gt; is not supported on the current node.">
        <see cref="M:System.Xml.XmlValidatingReader.ReadContentAsBase64(System.Byte[],System.Int32,System.Int32)" /> n'est pas pris en charge sur le nœud actuel.</exception>
      <exception cref="T:System.ArgumentOutOfRangeException" vsli:raw="The index into the buffer or index + count is larger than the allocated buffer size.">L'index de la mémoire tampon (ou l'index augmenté de la valeur du paramètre count) est supérieur à la taille de la mémoire tampon allouée.</exception>
      <returns vsli:raw="The number of bytes written to the buffer.">Nombre d'octets écrits dans la mémoire tampon.</returns>
    </member>
    <member name="M:System.Xml.XmlValidatingReader.ReadContentAsBinHex(System.Byte[],System.Int32,System.Int32)">
      <summary vsli:raw="Reads the content and returns the BinHex decoded binary bytes.">Lit le contenu et retourne les octets binaires décodés au format BinHex.</summary>
      <param name="buffer" vsli:raw="The buffer into which to copy the resulting text. This value cannot be &lt;see langword=&quot;null&quot; /&gt;.">Mémoire tampon dans laquelle copier le texte obtenu. Cette valeur ne peut pas être <see langword="null" />.</param>
      <param name="index" vsli:raw="The offset into the buffer where to start copying the result.">Offset de la mémoire tampon où commence la copie du résultat.</param>
      <param name="count" vsli:raw="The maximum number of bytes to copy into the buffer. The actual number of bytes copied is returned from this method.">Nombre maximal d'octets à copier dans la mémoire tampon. Le nombre réel d'octets copiés est retourné à partir de cette méthode.</param>
      <exception cref="T:System.ArgumentNullException" vsli:raw="The &lt;paramref name=&quot;buffer&quot; /&gt; value is &lt;see langword=&quot;null&quot; /&gt;.">
        <paramref name="buffer" /> a la valeur <see langword="null" />.</exception>
      <exception cref="T:System.InvalidOperationException" vsli:raw="&lt;see cref=&quot;M:System.Xml.XmlValidatingReader.ReadContentAsBinHex(System.Byte[],System.Int32,System.Int32)&quot; /&gt; is not supported on the current node.">
        <see cref="M:System.Xml.XmlValidatingReader.ReadContentAsBinHex(System.Byte[],System.Int32,System.Int32)" /> n'est pas pris en charge sur le nœud actuel.</exception>
      <exception cref="T:System.ArgumentOutOfRangeException" vsli:raw="The index into the buffer or index + count is larger than the allocated buffer size.">L'index de la mémoire tampon (ou l'index augmenté de la valeur du paramètre count) est supérieur à la taille de la mémoire tampon allouée.</exception>
      <exception cref="T:System.NotSupportedException" vsli:raw="The &lt;see cref=&quot;T:System.Xml.XmlValidatingReader&quot; /&gt; implementation does not support this method.">L'implémentation de <see cref="T:System.Xml.XmlValidatingReader" /> ne prend pas en charge cette méthode.</exception>
      <returns vsli:raw="The number of bytes written to the buffer.">Nombre d'octets écrits dans la mémoire tampon.</returns>
    </member>
    <member name="M:System.Xml.XmlValidatingReader.ReadElementContentAsBase64(System.Byte[],System.Int32,System.Int32)">
      <summary vsli:raw="Reads the element and decodes the Base64 content.">Lit l'élément et décode le contenu Base64.</summary>
      <param name="buffer" vsli:raw="The buffer into which to copy the resulting text. This value cannot be &lt;see langword=&quot;null&quot; /&gt;.">Mémoire tampon dans laquelle copier le texte obtenu. Cette valeur ne peut pas être <see langword="null" />.</param>
      <param name="index" vsli:raw="The offset into the buffer where to start copying the result.">Offset de la mémoire tampon où commence la copie du résultat.</param>
      <param name="count" vsli:raw="The maximum number of bytes to copy into the buffer. The actual number of bytes copied is returned from this method.">Nombre maximal d'octets à copier dans la mémoire tampon. Le nombre réel d'octets copiés est retourné à partir de cette méthode.</param>
      <exception cref="T:System.ArgumentNullException" vsli:raw="The &lt;paramref name=&quot;buffer&quot; /&gt; value is &lt;see langword=&quot;null&quot; /&gt;.">
        <paramref name="buffer" /> a la valeur <see langword="null" />.</exception>
      <exception cref="T:System.InvalidOperationException" vsli:raw="The current node is not an element node.">Le nœud actuel n'est pas un nœud d'élément.</exception>
      <exception cref="T:System.ArgumentOutOfRangeException" vsli:raw="The index into the buffer or index + count is larger than the allocated buffer size.">L'index de la mémoire tampon (ou l'index augmenté de la valeur du paramètre count) est supérieur à la taille de la mémoire tampon allouée.</exception>
      <exception cref="T:System.NotSupportedException" vsli:raw="The &lt;see cref=&quot;T:System.Xml.XmlValidatingReader&quot; /&gt; implementation does not support this method.">L'implémentation de <see cref="T:System.Xml.XmlValidatingReader" /> ne prend pas en charge cette méthode.</exception>
      <exception cref="T:System.Xml.XmlException" vsli:raw="The element contains mixed-content.">L'élément contient un contenu mixte.</exception>
      <exception cref="T:System.FormatException" vsli:raw="The content cannot be converted to the requested type.">Impossible de convertir le contenu en type demandé.</exception>
      <returns vsli:raw="The number of bytes written to the buffer.">Nombre d'octets écrits dans la mémoire tampon.</returns>
    </member>
    <member name="M:System.Xml.XmlValidatingReader.ReadElementContentAsBinHex(System.Byte[],System.Int32,System.Int32)">
      <summary vsli:raw="Reads the element and decodes the BinHex content.">Lit l'élément et décode le contenu BinHex.</summary>
      <param name="buffer" vsli:raw="The buffer into which to copy the resulting text. This value cannot be &lt;see langword=&quot;null&quot; /&gt;.">Mémoire tampon dans laquelle copier le texte obtenu. Cette valeur ne peut pas être <see langword="null" />.</param>
      <param name="index" vsli:raw="The offset into the buffer where to start copying the result.">Offset de la mémoire tampon où commence la copie du résultat.</param>
      <param name="count" vsli:raw="The maximum number of bytes to copy into the buffer. The actual number of bytes copied is returned from this method.">Nombre maximal d'octets à copier dans la mémoire tampon. Le nombre réel d'octets copiés est retourné à partir de cette méthode.</param>
      <exception cref="T:System.ArgumentNullException" vsli:raw="The &lt;paramref name=&quot;buffer&quot; /&gt; value is &lt;see langword=&quot;null&quot; /&gt;.">
        <paramref name="buffer" /> a la valeur <see langword="null" />.</exception>
      <exception cref="T:System.InvalidOperationException" vsli:raw="The current node is not an element node.">Le nœud actuel n'est pas un nœud d'élément.</exception>
      <exception cref="T:System.ArgumentOutOfRangeException" vsli:raw="The index into the buffer or index + count is larger than the allocated buffer size.">L'index de la mémoire tampon (ou l'index augmenté de la valeur du paramètre count) est supérieur à la taille de la mémoire tampon allouée.</exception>
      <exception cref="T:System.NotSupportedException" vsli:raw="The &lt;see cref=&quot;T:System.Xml.XmlValidatingReader&quot; /&gt; implementation does not support this method.">L'implémentation de <see cref="T:System.Xml.XmlValidatingReader" /> ne prend pas en charge cette méthode.</exception>
      <exception cref="T:System.Xml.XmlException" vsli:raw="The element contains mixed-content.">L'élément contient un contenu mixte.</exception>
      <exception cref="T:System.FormatException" vsli:raw="The content cannot be converted to the requested type.">Impossible de convertir le contenu en type demandé.</exception>
      <returns vsli:raw="The number of bytes written to the buffer.">Nombre d'octets écrits dans la mémoire tampon.</returns>
    </member>
    <member name="M:System.Xml.XmlValidatingReader.ReadString">
      <summary vsli:raw="Reads the contents of an element or text node as a string.">Lit le contenu d'un nœud d'élément ou de texte sous forme de chaîne.</summary>
      <returns vsli:raw="The contents of the element or text node. This can be an empty string if the reader is positioned on something other than an element or text node, or if there is no more text content to return in the current context.">Contenu du nœud d'élément ou de texte. Il peut s'agir d'une chaîne vide si le lecteur est placé sur autre chose qu'un nœud d'élément ou de texte, ou s'il n'existe plus de texte à retourner dans le contexte actuel.  
  
 <block subset="none" type="note"><para>  
 Le nœud de texte peut être un nœud de texte d'élément ou d'attribut.</para></block></returns>
    </member>
    <member name="M:System.Xml.XmlValidatingReader.ReadTypedValue">
      <summary vsli:raw="Gets the common language runtime type for the specified XML Schema definition language (XSD) type.">Obtient le type Common Language Runtime pour le type langage XSD (XML Schema Definition) spécifié.</summary>
      <returns vsli:raw="The common language runtime type for the specified XML Schema type.">Type Common Language Runtime pour le type de schéma XML spécifié.</returns>
    </member>
    <member name="M:System.Xml.XmlValidatingReader.ResolveEntity">
      <summary vsli:raw="Resolves the entity reference for &lt;see langword=&quot;EntityReference&quot; /&gt; nodes.">Résout la référence d'entité pour les nœuds <see langword="EntityReference" />.</summary>
      <exception cref="T:System.InvalidOperationException" vsli:raw="The reader is not positioned on an &lt;see langword=&quot;EntityReference&quot; /&gt; node.">Le lecteur n'est pas placé sur un nœud <see langword="EntityReference" />.</exception>
    </member>
    <member name="M:System.Xml.XmlValidatingReader.System#Xml#IXmlNamespaceResolver#GetNamespacesInScope(System.Xml.XmlNamespaceScope)">
      <summary vsli:raw="For a description of this member, see &lt;see cref=&quot;M:System.Xml.IXmlNamespaceResolver.GetNamespacesInScope(System.Xml.XmlNamespaceScope)&quot; /&gt;.">Pour obtenir une description de ce membre, consultez <see cref="M:System.Xml.IXmlNamespaceResolver.GetNamespacesInScope(System.Xml.XmlNamespaceScope)" />.</summary>
      <param name="scope" vsli:raw="An &lt;see cref=&quot;T:System.Xml.XmlNamespaceScope&quot; /&gt; object that identifies the scope of the reader.">Objet <see cref="T:System.Xml.XmlNamespaceScope" /> qui identifie la portée du lecteur.</param>
      <returns vsli:raw="An &lt;see cref=&quot;T:System.Collections.IDictionary&quot; /&gt; object that identifies the namespaces in scope.">Objet <see cref="T:System.Collections.IDictionary" /> qui identifie les espaces de noms dans l’étendue.</returns>
    </member>
    <member name="M:System.Xml.XmlValidatingReader.System#Xml#IXmlNamespaceResolver#LookupNamespace(System.String)">
      <summary vsli:raw="For a description of this member, see &lt;see cref=&quot;M:System.Xml.IXmlNamespaceResolver.LookupNamespace(System.String)&quot; /&gt;.">Pour obtenir une description de ce membre, consultez <see cref="M:System.Xml.IXmlNamespaceResolver.LookupNamespace(System.String)" />.</summary>
      <param name="prefix" vsli:raw="The namespace prefix.">Le préfixe de l'espace de noms.</param>
      <returns vsli:raw="A string value that contains the namespace Uri that is associated with the prefix.">Valeur de chaîne qui contient l'espace de noms URI associé au préfixe.</returns>
    </member>
    <member name="M:System.Xml.XmlValidatingReader.System#Xml#IXmlNamespaceResolver#LookupPrefix(System.String)">
      <summary vsli:raw="For a description of this member, see &lt;see cref=&quot;M:System.Xml.IXmlNamespaceResolver.LookupPrefix(System.String)&quot; /&gt;.">Pour obtenir une description de ce membre, consultez <see cref="M:System.Xml.IXmlNamespaceResolver.LookupPrefix(System.String)" />.</summary>
      <param name="namespaceName" vsli:raw="The namespace that is associated with the prefix.">Espace de noms associé au préfixe.</param>
      <returns vsli:raw="A string value that contains the namespace prefix that is associated with the &lt;paramref name=&quot;namespaceName&quot; /&gt;.">Valeur de chaîne qui contient le préfixe d'espace de noms associé au <paramref name="namespaceName" />.</returns>
    </member>
    <member name="P:System.Xml.XmlValidatingReader.AttributeCount">
      <summary vsli:raw="Gets the number of attributes on the current node.">Obtient le nombre d'attributs du nœud actuel.</summary>
      <returns vsli:raw="The number of attributes on the current node. This number includes default attributes.">Nombre d'attributs du nœud actuel. Ce nombre inclut les attributs par défaut.</returns>
    </member>
    <member name="P:System.Xml.XmlValidatingReader.BaseURI">
      <summary vsli:raw="Gets the base URI of the current node.">Obtient l'URI de base du nœud actuel.</summary>
      <returns vsli:raw="The base URI of the current node.">URI de base du nœud actuel.</returns>
    </member>
    <member name="P:System.Xml.XmlValidatingReader.CanReadBinaryContent">
      <summary vsli:raw="Gets a value indicating whether the &lt;see cref=&quot;T:System.Xml.XmlValidatingReader&quot; /&gt; implements the binary content read methods.">Obtient une valeur indiquant si <see cref="T:System.Xml.XmlValidatingReader" /> implémente les méthodes de lecture de contenu binaire.</summary>
      <returns vsli:raw="&lt;see langword=&quot;true&quot; /&gt; if the binary content read methods are implemented; otherwise &lt;see langword=&quot;false&quot; /&gt;. The &lt;see cref=&quot;T:System.Xml.XmlValidatingReader&quot; /&gt; class returns &lt;see langword=&quot;true&quot; /&gt;.">
        <see langword="true" /> si les méthodes de lecture de contenu binaire sont implémentées ; sinon, <see langword="false" />. La classe <see cref="T:System.Xml.XmlValidatingReader" /> retourne <see langword="true" />.</returns>
    </member>
    <member name="P:System.Xml.XmlValidatingReader.CanResolveEntity">
      <summary vsli:raw="Gets a value indicating whether this reader can parse and resolve entities.">Obtient une valeur indiquant si ce lecteur peut analyser et résoudre les entités.</summary>
      <returns vsli:raw="&lt;see langword=&quot;true&quot; /&gt; if the reader can parse and resolve entities; otherwise, &lt;see langword=&quot;false&quot; /&gt;. &lt;see langword=&quot;XmlValidatingReader&quot; /&gt; always returns &lt;see langword=&quot;true&quot; /&gt;.">
        <see langword="true" /> si le lecteur peut analyser et résoudre les entités ; sinon, <see langword="false" />. <see langword="XmlValidatingReader" /> retourne toujours <see langword="true" />.</returns>
    </member>
    <member name="P:System.Xml.XmlValidatingReader.Depth">
      <summary vsli:raw="Gets the depth of the current node in the XML document.">Obtient la profondeur du nœud actuel dans le document XML.</summary>
      <returns vsli:raw="The depth of the current node in the XML document.">Profondeur du nœud actuel dans le document XML.</returns>
    </member>
    <member name="P:System.Xml.XmlValidatingReader.Encoding">
      <summary vsli:raw="Gets the encoding attribute for the document.">Obtient l'attribut d'encodage du document.</summary>
      <returns vsli:raw="The encoding value. If no encoding attribute exists, and there is not byte-order mark, this defaults to UTF-8.">Valeur d'encodage. S'il n'existe pas d'attribut d'encodage, ni d'indicateur d'ordre d'octets, la valeur par défaut est UTF-8.</returns>
    </member>
    <member name="P:System.Xml.XmlValidatingReader.EntityHandling">
      <summary vsli:raw="Gets or sets a value that specifies how the reader handles entities.">Obtient ou définit une valeur qui spécifie le mode de gestion des entités par le lecteur.</summary>
      <exception cref="T:System.ArgumentOutOfRangeException" vsli:raw="Invalid value was specified.">Valeur non valide spécifiée.</exception>
      <returns vsli:raw="One of the &lt;see cref=&quot;T:System.Xml.EntityHandling&quot; /&gt; values. If no &lt;see langword=&quot;EntityHandling&quot; /&gt; is specified, it defaults to EntityHandling.ExpandEntities.">Une des valeurs de l'objet <see cref="T:System.Xml.EntityHandling" />. Si aucun <see langword="EntityHandling" /> n’est spécifié, la valeur par défaut est EntityHandling.ExpandEntities.</returns>
    </member>
    <member name="P:System.Xml.XmlValidatingReader.EOF">
      <summary vsli:raw="Gets a value indicating whether the reader is positioned at the end of the stream.">Obtient une valeur indiquant si le lecteur est placé à la fin du flux.</summary>
      <returns vsli:raw="&lt;see langword=&quot;true&quot; /&gt; if the reader is positioned at the end of the stream; otherwise, &lt;see langword=&quot;false&quot; /&gt;.">
        <see langword="true" /> si le lecteur est placé à la fin du flux ; sinon, <see langword="false" />.</returns>
    </member>
    <member name="P:System.Xml.XmlValidatingReader.HasValue">
      <summary vsli:raw="Gets a value indicating whether the current node can have a &lt;see cref=&quot;P:System.Xml.XmlValidatingReader.Value&quot; /&gt; other than String.Empty.">Obtient une valeur indiquant si le nœud actuel peut avoir une valeur <see cref="P:System.Xml.XmlValidatingReader.Value" /> autre que String.Empty.</summary>
      <returns vsli:raw="&lt;see langword=&quot;true&quot; /&gt; if the node on which the reader is currently positioned can have a &lt;see langword=&quot;Value&quot; /&gt;; otherwise, &lt;see langword=&quot;false&quot; /&gt;.">
        <see langword="true" /> si le nœud sur lequel le lecteur est placé actuellement peut avoir un <see langword="Value" /> ; sinon, <see langword="false" />.</returns>
    </member>
    <member name="P:System.Xml.XmlValidatingReader.IsDefault">
      <summary vsli:raw="Gets a value indicating whether the current node is an attribute that was generated from the default value defined in the document type definition (DTD) or schema.">Obtient une valeur indiquant si le nœud actuel est un attribut généré à partir de la valeur par défaut définie dans la définition de type de document (DTD) ou le schéma.</summary>
      <returns vsli:raw="&lt;see langword=&quot;true&quot; /&gt; if the current node is an attribute whose value was generated from the default value defined in the DTD or schema; &lt;see langword=&quot;false&quot; /&gt; if the attribute value was explicitly set.">
        <see langword="true" /> si le nœud actuel est un attribut dont la valeur a été générée à partir de la valeur par défaut définie dans le DTD ou le schéma ; <see langword="false" /> si la valeur d'attribut a été définie explicitement.</returns>
    </member>
    <member name="P:System.Xml.XmlValidatingReader.IsEmptyElement">
      <summary vsli:raw="Gets a value indicating whether the current node is an empty element (for example, &lt;c&gt;&amp;lt;MyElement/&amp;gt;&lt;/c&gt;).">Obtient une valeur indiquant si le nœud actuel est un élément vide (par exemple, <c>&lt;MyElement/&gt;</c>).</summary>
      <returns vsli:raw="&lt;see langword=&quot;true&quot; /&gt; if the current node is an element (&lt;see cref=&quot;P:System.Xml.XmlValidatingReader.NodeType&quot; /&gt; equals &lt;see langword=&quot;XmlNodeType.Element&quot; /&gt;) that ends with &lt;c&gt;/&amp;gt;&lt;/c&gt;; otherwise, &lt;see langword=&quot;false&quot; /&gt;.">
        <see langword="true" /> Si le nœud actuel est un élément ( <see cref="P:System.Xml.XmlValidatingReader.NodeType" /> est égal <see langword="XmlNodeType.Element" /> à) qui se termine par <c>/&gt;</c> ; sinon, <see langword="false" /> .</returns>
    </member>
    <member name="P:System.Xml.XmlValidatingReader.LineNumber">
      <summary vsli:raw="Gets the current line number.">Obtient le numéro de la ligne active.</summary>
      <returns vsli:raw="The current line number. The starting value for this property is 1.">Numéro de ligne active. La valeur de départ de cette propriété est 1.</returns>
    </member>
    <member name="P:System.Xml.XmlValidatingReader.LinePosition">
      <summary vsli:raw="Gets the current line position.">Obtient la position de la ligne active.</summary>
      <returns vsli:raw="The current line position. The starting value for this property is 1.">Position de la ligne active. La valeur de départ de cette propriété est 1.</returns>
    </member>
    <member name="P:System.Xml.XmlValidatingReader.LocalName">
      <summary vsli:raw="Gets the local name of the current node.">Obtient le nom local du nœud actuel.</summary>
      <returns vsli:raw="The name of the current node with the prefix removed. For example, &lt;see langword=&quot;LocalName&quot; /&gt; is &lt;see langword=&quot;book&quot; /&gt; for the element &lt;c&gt;&amp;lt;bk:book&amp;gt;&lt;/c&gt;.  &#xA;  &#xA; For node types that do not have a name (like &lt;see langword=&quot;Text&quot; /&gt;, &lt;see langword=&quot;Comment&quot; /&gt;, and so on), this property returns String.Empty.">Nom du nœud actuel dont le préfixe est supprimé. Par exemple, <see langword="LocalName" /> est <see langword="book" /> pour l’élément <c> &lt; BK : Book &gt; </c>.  
  
Pour les types de nœuds qui n'ont pas de nom (par exemple <see langword="Text" />, <see langword="Comment" />, etc.), cette propriété retourne String.Empty.</returns>
    </member>
    <member name="P:System.Xml.XmlValidatingReader.Name">
      <summary vsli:raw="Gets the qualified name of the current node.">Obtient le nom qualifié du nœud actuel.</summary>
      <returns vsli:raw="The qualified name of the current node. For example, &lt;see langword=&quot;Name&quot; /&gt; is &lt;see langword=&quot;bk:book&quot; /&gt; for the element &lt;c&gt;&amp;lt;bk:book&amp;gt;&lt;/c&gt;.  &#xA;  &#xA; The name returned is dependent on the &lt;see cref=&quot;P:System.Xml.XmlValidatingReader.NodeType&quot; /&gt; of the node. The following node types return the listed values. All other node types return an empty string.  &#xA;  &#xA; &lt;list type=&quot;table&quot;&gt;&lt;listheader&gt;&lt;term&gt; Node Type&lt;/term&gt;&lt;description&gt; Name&lt;/description&gt;&lt;/listheader&gt;&lt;item&gt;&lt;term&gt;&lt;see langword=&quot;Attribute&quot; /&gt;&lt;/term&gt;&lt;description&gt; The name of the attribute.&lt;/description&gt;&lt;/item&gt;&lt;item&gt;&lt;term&gt;&lt;see langword=&quot;DocumentType&quot; /&gt;&lt;/term&gt;&lt;description&gt; The document type name.&lt;/description&gt;&lt;/item&gt;&lt;item&gt;&lt;term&gt;&lt;see langword=&quot;Element&quot; /&gt;&lt;/term&gt;&lt;description&gt; The tag name.&lt;/description&gt;&lt;/item&gt;&lt;item&gt;&lt;term&gt;&lt;see langword=&quot;EntityReference&quot; /&gt;&lt;/term&gt;&lt;description&gt; The name of the entity referenced.&lt;/description&gt;&lt;/item&gt;&lt;item&gt;&lt;term&gt;&lt;see langword=&quot;ProcessingInstruction&quot; /&gt;&lt;/term&gt;&lt;description&gt; The target of the processing instruction.&lt;/description&gt;&lt;/item&gt;&lt;item&gt;&lt;term&gt;&lt;see langword=&quot;XmlDeclaration&quot; /&gt;&lt;/term&gt;&lt;description&gt; The literal string &lt;see langword=&quot;xml&quot; /&gt;.&lt;/description&gt;&lt;/item&gt;&lt;/list&gt;">Nom qualifié du nœud actuel. Par exemple, <see langword="Name" /> est <see langword="bk:book" /> pour l’élément <c> &lt; BK : Book &gt; </c>.  
  
Le nom retourné dépend du <see cref="P:System.Xml.XmlValidatingReader.NodeType" /> du nœud. Les types de nœuds suivants retournent les valeurs répertoriées. Tous les autres types de nœuds retournent une chaîne vide.  
  
 <list type="table"><listheader><term> Type de nœud</term><description> Name</description></listheader><item><term><see langword="Attribute" /></term><description> Nom de l'attribut.</description></item><item><term><see langword="DocumentType" /></term><description> Nom du type de document.</description></item><item><term><see langword="Element" /></term><description> Nom de la balise.</description></item><item><term><see langword="EntityReference" /></term><description> Nom de l'entité référencée.</description></item><item><term><see langword="ProcessingInstruction" /></term><description> Cible de l'instruction de traitement.</description></item><item><term><see langword="XmlDeclaration" /></term><description> Chaîne littérale <see langword="xml" />.</description></item></list></returns>
    </member>
    <member name="P:System.Xml.XmlValidatingReader.Namespaces">
      <summary vsli:raw="Gets or sets a value indicating whether to do namespace support.">Obtient ou définit une valeur indiquant si la prise en charge des espaces de noms doit être assurée ou non.</summary>
      <returns vsli:raw="&lt;see langword=&quot;true&quot; /&gt; to do namespace support; otherwise, &lt;see langword=&quot;false&quot; /&gt;. The default is &lt;see langword=&quot;true&quot; /&gt;.">
        <see langword="true" /> pour assurer la prise en charge des espaces de noms ; sinon, <see langword="false" />. La valeur par défaut est <see langword="true" />.</returns>
    </member>
    <member name="P:System.Xml.XmlValidatingReader.NamespaceURI">
      <summary vsli:raw="Gets the namespace Uniform Resource Identifier (URI) (as defined in the World Wide Web Consortium (W3C) Namespace specification) of the node on which the reader is positioned.">Obtient l’URI (Uniform Resource Identifier) d’espace de noms (tel qu’il est défini dans la spécification relative aux espaces de noms du W3C) du nœud sur lequel le lecteur est placé.</summary>
      <returns vsli:raw="The namespace URI of the current node; otherwise an empty string.">URI d'espace de noms du nœud actuel ; sinon, une chaîne vide.</returns>
    </member>
    <member name="P:System.Xml.XmlValidatingReader.NameTable">
      <summary vsli:raw="Gets the &lt;see cref=&quot;T:System.Xml.XmlNameTable&quot; /&gt; associated with this implementation.">Obtient l'élément <see cref="T:System.Xml.XmlNameTable" /> associé à cette implémentation.</summary>
      <returns vsli:raw="&lt;see langword=&quot;XmlNameTable&quot; /&gt; that enables you to get the atomized version of a string within the node.">
        <see langword="XmlNameTable" /> vous permettant d'obtenir la version atomisée d'une chaîne au sein du nœud.</returns>
    </member>
    <member name="P:System.Xml.XmlValidatingReader.NodeType">
      <summary vsli:raw="Gets the type of the current node.">Obtient le type du nœud actuel.</summary>
      <returns vsli:raw="One of the &lt;see cref=&quot;T:System.Xml.XmlNodeType&quot; /&gt; values representing the type of the current node.">Une des valeurs de <see cref="T:System.Xml.XmlNodeType" /> représentant le type du nœud actuel.</returns>
    </member>
    <member name="P:System.Xml.XmlValidatingReader.Prefix">
      <summary vsli:raw="Gets the namespace prefix associated with the current node.">Obtient le préfixe de l'espace de noms associé au nœud actuel.</summary>
      <returns vsli:raw="The namespace prefix associated with the current node.">Préfixe de l'espace de noms associé au nœud actuel.</returns>
    </member>
    <member name="P:System.Xml.XmlValidatingReader.QuoteChar">
      <summary vsli:raw="Gets the quotation mark character used to enclose the value of an attribute node.">Obtient le caractère guillemet permettant de délimiter la valeur d'un nœud d'attribut.</summary>
      <returns vsli:raw="The quotation mark character (&quot; or ') used to enclose the value of an attribute node.">Caractère guillemet (" ou ') permettant de délimiter la valeur d'un nœud d'attribut.</returns>
    </member>
    <member name="P:System.Xml.XmlValidatingReader.Reader">
      <summary vsli:raw="Gets the &lt;see cref=&quot;T:System.Xml.XmlReader&quot; /&gt; used to construct this &lt;see langword=&quot;XmlValidatingReader&quot; /&gt;.">Obtient le <see cref="T:System.Xml.XmlReader" /> utilisé pour construire ce <see langword="XmlValidatingReader" />.</summary>
      <returns vsli:raw="The &lt;see langword=&quot;XmlReader&quot; /&gt; specified in the constructor.">
        <see langword="XmlReader" /> spécifié dans le constructeur.</returns>
    </member>
    <member name="P:System.Xml.XmlValidatingReader.ReadState">
      <summary vsli:raw="Gets the state of the reader.">Obtient l'état du lecteur.</summary>
      <returns vsli:raw="One of the &lt;see cref=&quot;T:System.Xml.ReadState&quot; /&gt; values.">Une des valeurs de l'objet <see cref="T:System.Xml.ReadState" />.</returns>
    </member>
    <member name="P:System.Xml.XmlValidatingReader.Schemas">
      <summary vsli:raw="Gets a &lt;see cref=&quot;T:System.Xml.Schema.XmlSchemaCollection&quot; /&gt; to use for validation.">Obtient un <see cref="T:System.Xml.Schema.XmlSchemaCollection" /> à utiliser pour la validation.</summary>
      <returns vsli:raw="The &lt;see langword=&quot;XmlSchemaCollection&quot; /&gt; to use for validation.">
        <see langword="XmlSchemaCollection" /> à utiliser pour la validation.</returns>
    </member>
    <member name="P:System.Xml.XmlValidatingReader.SchemaType">
      <summary vsli:raw="Gets a schema type object.">Obtient un objet de type de schéma.</summary>
      <returns vsli:raw="&lt;see cref=&quot;T:System.Xml.Schema.XmlSchemaDatatype&quot; /&gt;, &lt;see cref=&quot;T:System.Xml.Schema.XmlSchemaSimpleType&quot; /&gt;, or &lt;see cref=&quot;T:System.Xml.Schema.XmlSchemaComplexType&quot; /&gt; depending whether the node value is a built in XML Schema definition language (XSD) type or a user defined simpleType or complexType; &lt;see langword=&quot;null&quot; /&gt; if the current node has no schema type.">
        <see cref="T:System.Xml.Schema.XmlSchemaDatatype" />, <see cref="T:System.Xml.Schema.XmlSchemaSimpleType" /> ou <see cref="T:System.Xml.Schema.XmlSchemaComplexType" /> selon que la valeur du nœud est un type langage XSD (XML Schema Definition) intégré, un simpleType ou un complexType défini par l'utilisateur ; sinon, <see langword="null" /> si le nœud actuel n'a pas de type de schéma.</returns>
    </member>
    <member name="P:System.Xml.XmlValidatingReader.ValidationType">
      <summary vsli:raw="Gets or sets a value indicating the type of validation to perform.">Obtient ou définit une valeur indiquant le type de validation à effectuer.</summary>
      <exception cref="T:System.InvalidOperationException" vsli:raw="Setting the property after a Read has been called.">Définition de la propriété après un appel de Read.</exception>
      <returns vsli:raw="One of the &lt;see cref=&quot;T:System.Xml.ValidationType&quot; /&gt; values. If this property is not set, it defaults to ValidationType.Auto.">Une des valeurs de l'objet <see cref="T:System.Xml.ValidationType" />. Si cette propriété n'est pas définie, la valeur par défaut est ValidationType.Auto.</returns>
    </member>
    <member name="P:System.Xml.XmlValidatingReader.Value">
      <summary vsli:raw="Gets the text value of the current node.">Obtient le texte du nœud actuel.</summary>
      <returns vsli:raw="The value returned depends on the &lt;see cref=&quot;P:System.Xml.XmlValidatingReader.NodeType&quot; /&gt; of the node. The following table lists node types that have a value to return. All other node types return String.Empty.  &#xA;  &#xA; &lt;list type=&quot;table&quot;&gt;&lt;listheader&gt;&lt;term&gt; Node Type&lt;/term&gt;&lt;description&gt; Value&lt;/description&gt;&lt;/listheader&gt;&lt;item&gt;&lt;term&gt;&lt;see langword=&quot;Attribute&quot; /&gt;&lt;/term&gt;&lt;description&gt; The value of the attribute.&lt;/description&gt;&lt;/item&gt;&lt;item&gt;&lt;term&gt;&lt;see langword=&quot;CDATA&quot; /&gt;&lt;/term&gt;&lt;description&gt; The content of the CDATA section.&lt;/description&gt;&lt;/item&gt;&lt;item&gt;&lt;term&gt;&lt;see langword=&quot;Comment&quot; /&gt;&lt;/term&gt;&lt;description&gt; The content of the comment.&lt;/description&gt;&lt;/item&gt;&lt;item&gt;&lt;term&gt;&lt;see langword=&quot;DocumentType&quot; /&gt;&lt;/term&gt;&lt;description&gt; The internal subset.&lt;/description&gt;&lt;/item&gt;&lt;item&gt;&lt;term&gt;&lt;see langword=&quot;ProcessingInstruction&quot; /&gt;&lt;/term&gt;&lt;description&gt; The entire content, excluding the target.&lt;/description&gt;&lt;/item&gt;&lt;item&gt;&lt;term&gt;&lt;see langword=&quot;SignificantWhitespace&quot; /&gt;&lt;/term&gt;&lt;description&gt; The white space between markup in a mixed content model.&lt;/description&gt;&lt;/item&gt;&lt;item&gt;&lt;term&gt;&lt;see langword=&quot;Text&quot; /&gt;&lt;/term&gt;&lt;description&gt; The content of the text node.&lt;/description&gt;&lt;/item&gt;&lt;item&gt;&lt;term&gt;&lt;see langword=&quot;Whitespace&quot; /&gt;&lt;/term&gt;&lt;description&gt; The white space between markup.&lt;/description&gt;&lt;/item&gt;&lt;item&gt;&lt;term&gt;&lt;see langword=&quot;XmlDeclaration&quot; /&gt;&lt;/term&gt;&lt;description&gt; The content of the declaration.&lt;/description&gt;&lt;/item&gt;&lt;/list&gt;">La valeur retournée dépend du <see cref="P:System.Xml.XmlValidatingReader.NodeType" /> du nœud. Le tableau suivant répertorie les types de nœuds possédant une valeur de retour. Tous les autres types de nœuds retournent String.Empty.  
  
 <list type="table"><listheader><term> Type de nœud</term><description> Value</description></listheader><item><term><see langword="Attribute" /></term><description> Valeur de l'attribut.</description></item><item><term><see langword="CDATA" /></term><description> Contenu de la section CDATA.</description></item><item><term><see langword="Comment" /></term><description> Contenu du commentaire.</description></item><item><term><see langword="DocumentType" /></term><description> Sous-ensemble interne.</description></item><item><term><see langword="ProcessingInstruction" /></term><description> Contenu entier, cible exclue.</description></item><item><term><see langword="SignificantWhitespace" /></term><description> Espace blanc entre les balisages dans un modèle de contenu mixte.</description></item><item><term><see langword="Text" /></term><description> Contenu du nœud de texte.</description></item><item><term><see langword="Whitespace" /></term><description> Espace blanc entre les balises.</description></item><item><term><see langword="XmlDeclaration" /></term><description> Contenu de la déclaration.</description></item></list></returns>
    </member>
    <member name="P:System.Xml.XmlValidatingReader.XmlLang">
      <summary vsli:raw="Gets the current &lt;see langword=&quot;xml:lang&quot; /&gt; scope.">Obtient la portée de <see langword="xml:lang" /> actuelle.</summary>
      <returns vsli:raw="The current &lt;see langword=&quot;xml:lang&quot; /&gt; scope.">Portée de <see langword="xml:lang" /> actuelle.</returns>
    </member>
    <member name="P:System.Xml.XmlValidatingReader.XmlResolver">
      <summary vsli:raw="Sets the &lt;see cref=&quot;T:System.Xml.XmlResolver&quot; /&gt; used for resolving external document type definition (DTD) and schema location references. The &lt;see langword=&quot;XmlResolver&quot; /&gt; is also used to handle any import or include elements found in XML Schema definition language (XSD) schemas.">Définit le <see cref="T:System.Xml.XmlResolver" /> utilisé pour la résolution des références d'emplacement des définitions de type de document (DTD) et schémas externes. <see langword="XmlResolver" /> permet aussi de gérer les éléments import ou include présents dans les schémas en langage XSD (XML Schema Definition).</summary>
      <returns vsli:raw="The &lt;see langword=&quot;XmlResolver&quot; /&gt; to use. If set to &lt;see langword=&quot;null&quot; /&gt;, external resources are not resolved.  &#xA;  &#xA; In version 1.1 of the .NET Framework, the caller must be fully trusted to specify an &lt;see langword=&quot;XmlResolver&quot; /&gt;.">
        <see langword="XmlResolver" /> à utiliser. Si la valeur est <see langword="null" />, les ressources externes ne sont pas résolues.  
  
Dans la version 1.1 du .NET Framework, l'appelant doit bénéficier d'un niveau de confiance suffisant pour spécifier un <see langword="XmlResolver" />.</returns>
    </member>
    <member name="P:System.Xml.XmlValidatingReader.XmlSpace">
      <summary vsli:raw="Gets the current &lt;see langword=&quot;xml:space&quot; /&gt; scope.">Obtient la portée de <see langword="xml:space" /> actuelle.</summary>
      <returns vsli:raw="One of the &lt;see cref=&quot;T:System.Xml.XmlSpace&quot; /&gt; values. If no &lt;see langword=&quot;xml:space&quot; /&gt; scope exists, this property defaults to &lt;see langword=&quot;XmlSpace.None&quot; /&gt;.">Une des valeurs de l'objet <see cref="T:System.Xml.XmlSpace" />. S'il n'existe pas de portée de <see langword="xml:space" />, cette propriété prend la valeur par défaut <see langword="XmlSpace.None" />.</returns>
    </member>
    <member name="T:System.Xml.XmlWhitespace">
      <summary vsli:raw="Represents white space in element content.">Représente un espace blanc dans un contenu d'élément.</summary>
    </member>
    <member name="M:System.Xml.XmlWhitespace.#ctor(System.String,System.Xml.XmlDocument)">
      <summary vsli:raw="Initializes a new instance of the &lt;see cref=&quot;T:System.Xml.XmlWhitespace&quot; /&gt; class.">Initialise une nouvelle instance de la classe <see cref="T:System.Xml.XmlWhitespace" />.</summary>
      <param name="strData" vsli:raw="The white space characters of the node.">Caractères d'espace blanc du nœud.</param>
      <param name="doc" vsli:raw="The &lt;see cref=&quot;T:System.Xml.XmlDocument&quot; /&gt; object.">Objet <see cref="T:System.Xml.XmlDocument" />.</param>
    </member>
    <member name="M:System.Xml.XmlWhitespace.CloneNode(System.Boolean)">
      <summary vsli:raw="Creates a duplicate of this node.">Crée un doublon de ce nœud.</summary>
      <param name="deep" vsli:raw="&lt;see langword=&quot;true&quot; /&gt; to recursively clone the subtree under the specified node; &lt;see langword=&quot;false&quot; /&gt; to clone only the node itself. For white space nodes, the cloned node always includes the data value, regardless of the parameter setting.">
        <see langword="true" /> pour cloner récursivement la sous-arborescence sous le nœud spécifié ; <see langword="false" /> pour cloner seulement le nœud lui-même. Pour les nœuds d'espace blanc, le nœud cloné comporte toujours la valeur des données, quelle que soit la valeur du paramètre.</param>
      <returns vsli:raw="The cloned node.">Nœud cloné.</returns>
    </member>
    <member name="M:System.Xml.XmlWhitespace.WriteContentTo(System.Xml.XmlWriter)">
      <summary vsli:raw="Saves all the children of the node to the specified &lt;see cref=&quot;T:System.Xml.XmlWriter&quot; /&gt;.">Enregistre tous les enfants du nœud dans l’élément <see cref="T:System.Xml.XmlWriter" /> spécifié.</summary>
      <param name="w" vsli:raw="The &lt;see cref=&quot;T:System.Xml.XmlWriter&quot; /&gt; to which you want to save.">L'élément <see cref="T:System.Xml.XmlWriter" /> dans lequel vous voulez enregistrer.</param>
    </member>
    <member name="M:System.Xml.XmlWhitespace.WriteTo(System.Xml.XmlWriter)">
      <summary vsli:raw="Saves the node to the specified &lt;see cref=&quot;T:System.Xml.XmlWriter&quot; /&gt;.">Enregistre le nœud dans le <see cref="T:System.Xml.XmlWriter" /> spécifié.</summary>
      <param name="w" vsli:raw="The &lt;see cref=&quot;T:System.Xml.XmlWriter&quot; /&gt; to which you want to save.">L'élément <see cref="T:System.Xml.XmlWriter" /> dans lequel vous voulez enregistrer.</param>
    </member>
    <member name="P:System.Xml.XmlWhitespace.LocalName">
      <summary vsli:raw="Gets the local name of the node.">Obtient le nom local du nœud.</summary>
      <returns vsli:raw="For &lt;see langword=&quot;XmlWhitespace&quot; /&gt; nodes, this property returns &lt;see langword=&quot;#whitespace&quot; /&gt;.">Pour les nœuds <see langword="XmlWhitespace" />, cette propriété retourne <see langword="#whitespace" />.</returns>
    </member>
    <member name="P:System.Xml.XmlWhitespace.Name">
      <summary vsli:raw="Gets the qualified name of the node.">Obtient le nom qualifié du nœud.</summary>
      <returns vsli:raw="For &lt;see langword=&quot;XmlWhitespace&quot; /&gt; nodes, this property returns &lt;see langword=&quot;#whitespace&quot; /&gt;.">Pour les nœuds <see langword="XmlWhitespace" />, cette propriété retourne <see langword="#whitespace" />.</returns>
    </member>
    <member name="P:System.Xml.XmlWhitespace.NodeType">
      <summary vsli:raw="Gets the type of the node.">Obtient le type du nœud.</summary>
      <returns vsli:raw="For &lt;see langword=&quot;XmlWhitespace&quot; /&gt; nodes, the value is &lt;see cref=&quot;F:System.Xml.XmlNodeType.Whitespace&quot; /&gt;.">Pour les nœuds <see langword="XmlWhitespace" />, la valeur est <see cref="F:System.Xml.XmlNodeType.Whitespace" />.</returns>
    </member>
    <member name="P:System.Xml.XmlWhitespace.ParentNode">
      <summary vsli:raw="Gets the parent of the current node.">Obtient le parent du nœud actuel.</summary>
      <returns vsli:raw="The &lt;see cref=&quot;T:System.Xml.XmlNode&quot; /&gt; parent node of the current node.">Nœud <see cref="T:System.Xml.XmlNode" /> parent du nœud actuel.</returns>
    </member>
    <member name="P:System.Xml.XmlWhitespace.PreviousText">
      <summary vsli:raw="Gets the text node that immediately precedes this node.">Obtient le nœud de texte qui précède immédiatement ce nœud.</summary>
      <returns vsli:raw="Returns &lt;see cref=&quot;T:System.Xml.XmlNode&quot; /&gt;.">Retourne <see cref="T:System.Xml.XmlNode" />.</returns>
    </member>
    <member name="P:System.Xml.XmlWhitespace.Value">
      <summary vsli:raw="Gets or sets the value of the node.">Obtient ou définit la valeur du nœud.</summary>
      <exception cref="T:System.ArgumentException" vsli:raw="Setting &lt;see cref=&quot;P:System.Xml.XmlWhitespace.Value&quot; /&gt; to invalid white space characters.">Affectation d'espaces blancs non valides à <see cref="P:System.Xml.XmlWhitespace.Value" />.</exception>
      <returns vsli:raw="The white space characters found in the node.">Caractères d'espace blanc trouvés dans le nœud.</returns>
    </member>
    <member name="T:System.Xml.XmlWriter">
      <summary vsli:raw="Represents a writer that provides a fast, non-cached, forward-only way to generate streams or files that contain XML data.">Représente un writer qui fournit un moyen rapide, sans mise en cache et en avant de générer des flux de données ou des fichiers contenant des données XML.</summary>
    </member>
    <member name="M:System.Xml.XmlWriter.#ctor">
      <summary vsli:raw="Initializes a new instance of the &lt;see cref=&quot;T:System.Xml.XmlWriter&quot; /&gt; class.">Initialise une nouvelle instance de la classe <see cref="T:System.Xml.XmlWriter" />.</summary>
    </member>
    <member name="M:System.Xml.XmlWriter.Close">
      <summary vsli:raw="When overridden in a derived class, closes this stream and the underlying stream.">En cas de substitution dans une classe dérivée, ferme ce flux et le flux sous-jacent.</summary>
      <exception cref="T:System.InvalidOperationException" vsli:raw="A call is made to write more output after &lt;see langword=&quot;Close&quot; /&gt; has been called or the result of this call is an invalid XML document.&#xA;&#xA;-or-&#xA;&#xA;An &lt;see cref=&quot;T:System.Xml.XmlWriter&quot; /&gt; method was called before a previous asynchronous operation finished. In this case, &lt;see cref=&quot;T:System.InvalidOperationException&quot; /&gt; is thrown with the message &quot;An asynchronous operation is already in progress.&quot;">Un appel est effectué pour écrire un complément de code en sortie après l'appel de <see langword="Close" /> ou lorsque le résultat de cet appel est un document XML non valide.

- ou -

Une méthode <see cref="T:System.Xml.XmlWriter" /> a été appelée avant la fin d’une opération asynchrone précédente. Dans ce cas, l’exception <see cref="T:System.InvalidOperationException" /> est levée avec le message « Une opération asynchrone est déjà en cours ».</exception>
    </member>
    <member name="M:System.Xml.XmlWriter.Create(System.IO.Stream)">
      <summary vsli:raw="Creates a new &lt;see cref=&quot;T:System.Xml.XmlWriter&quot; /&gt; instance using the specified stream.">Crée une nouvelle instance de <see cref="T:System.Xml.XmlWriter" /> à l'aide du flux spécifié.</summary>
      <param name="output" vsli:raw="The stream to which you want to write. The &lt;see cref=&quot;T:System.Xml.XmlWriter&quot; /&gt; writes XML 1.0 text syntax and appends it to the specified stream.">Flux dans lequel vous voulez écrire. <see cref="T:System.Xml.XmlWriter" /> écrit la syntaxe du texte XML 1.0 et l'ajoute au flux de données spécifié.</param>
      <exception cref="T:System.ArgumentNullException" vsli:raw="The &lt;paramref name=&quot;stream&quot; /&gt; value is &lt;see langword=&quot;null&quot; /&gt;.">
        <paramref name="stream" /> a la valeur <see langword="null" />.</exception>
      <returns vsli:raw="An &lt;see cref=&quot;T:System.Xml.XmlWriter&quot; /&gt; object.">Objet <see cref="T:System.Xml.XmlWriter" />.</returns>
    </member>
    <member name="M:System.Xml.XmlWriter.Create(System.IO.Stream,System.Xml.XmlWriterSettings)">
      <summary vsli:raw="Creates a new &lt;see cref=&quot;T:System.Xml.XmlWriter&quot; /&gt; instance using the stream and &lt;see cref=&quot;T:System.Xml.XmlWriterSettings&quot; /&gt; object.">Crée une instance de <see cref="T:System.Xml.XmlWriter" /> à l'aide du flux et de l'objet <see cref="T:System.Xml.XmlWriterSettings" />.</summary>
      <param name="output" vsli:raw="The stream to which you want to write. The &lt;see cref=&quot;T:System.Xml.XmlWriter&quot; /&gt; writes XML 1.0 text syntax and appends it to the specified stream.">Flux dans lequel vous voulez écrire. <see cref="T:System.Xml.XmlWriter" /> écrit la syntaxe du texte XML 1.0 et l'ajoute au flux de données spécifié.</param>
      <param name="settings" vsli:raw="The &lt;see cref=&quot;T:System.Xml.XmlWriterSettings&quot; /&gt; object used to configure the new &lt;see cref=&quot;T:System.Xml.XmlWriter&quot; /&gt; instance. If this is &lt;see langword=&quot;null&quot; /&gt;, a &lt;see cref=&quot;T:System.Xml.XmlWriterSettings&quot; /&gt; with default settings is used.  &#xA;  &#xA; If the &lt;see cref=&quot;T:System.Xml.XmlWriter&quot; /&gt; is being used with the &lt;see cref=&quot;M:System.Xml.Xsl.XslCompiledTransform.Transform(System.String,System.Xml.XmlWriter)&quot; /&gt; method, you should use the &lt;see cref=&quot;P:System.Xml.Xsl.XslCompiledTransform.OutputSettings&quot; /&gt; property to obtain an &lt;see cref=&quot;T:System.Xml.XmlWriterSettings&quot; /&gt; object with the correct settings. This ensures that the created &lt;see cref=&quot;T:System.Xml.XmlWriter&quot; /&gt; object has the correct output settings.">Objet <see cref="T:System.Xml.XmlWriterSettings" /> permettant de configurer la nouvelle instance de <see cref="T:System.Xml.XmlWriter" />. S'il est <see langword="null" />, un <see cref="T:System.Xml.XmlWriterSettings" /> avec des paramètres par défaut est utilisé.  
  
Si <see cref="T:System.Xml.XmlWriter" /> est utilisé avec la méthode <see cref="M:System.Xml.Xsl.XslCompiledTransform.Transform(System.String,System.Xml.XmlWriter)" />, vous devez utiliser la propriété <see cref="P:System.Xml.Xsl.XslCompiledTransform.OutputSettings" /> pour obtenir un objet <see cref="T:System.Xml.XmlWriterSettings" /> avec les paramètres corrects. Cela garantit que l'objet <see cref="T:System.Xml.XmlWriter" /> créé dispose des paramètres de sortie corrects.</param>
      <exception cref="T:System.ArgumentNullException" vsli:raw="The &lt;paramref name=&quot;stream&quot; /&gt; value is &lt;see langword=&quot;null&quot; /&gt;.">
        <paramref name="stream" /> a la valeur <see langword="null" />.</exception>
      <returns vsli:raw="An &lt;see cref=&quot;T:System.Xml.XmlWriter&quot; /&gt; object.">Objet <see cref="T:System.Xml.XmlWriter" />.</returns>
    </member>
    <member name="M:System.Xml.XmlWriter.Create(System.IO.TextWriter)">
      <summary vsli:raw="Creates a new &lt;see cref=&quot;T:System.Xml.XmlWriter&quot; /&gt; instance using the specified &lt;see cref=&quot;T:System.IO.TextWriter&quot; /&gt;.">Crée une nouvelle instance de <see cref="T:System.Xml.XmlWriter" /> à l'aide du <see cref="T:System.IO.TextWriter" /> spécifié.</summary>
      <param name="output" vsli:raw="The &lt;see cref=&quot;T:System.IO.TextWriter&quot; /&gt; to which you want to write. The &lt;see cref=&quot;T:System.Xml.XmlWriter&quot; /&gt; writes XML 1.0 text syntax and appends it to the specified &lt;see cref=&quot;T:System.IO.TextWriter&quot; /&gt;.">
        <see cref="T:System.IO.TextWriter" /> dans lequel écrire. <see cref="T:System.Xml.XmlWriter" /> écrit la syntaxe du texte XML 1.0 et l'ajoute au <see cref="T:System.IO.TextWriter" /> spécifié.</param>
      <exception cref="T:System.ArgumentNullException" vsli:raw="The &lt;paramref name=&quot;text&quot; /&gt; value is &lt;see langword=&quot;null&quot; /&gt;.">
        <paramref name="text" /> a la valeur <see langword="null" />.</exception>
      <returns vsli:raw="An &lt;see cref=&quot;T:System.Xml.XmlWriter&quot; /&gt; object.">Objet <see cref="T:System.Xml.XmlWriter" />.</returns>
    </member>
    <member name="M:System.Xml.XmlWriter.Create(System.IO.TextWriter,System.Xml.XmlWriterSettings)">
      <summary vsli:raw="Creates a new &lt;see cref=&quot;T:System.Xml.XmlWriter&quot; /&gt; instance using the &lt;see cref=&quot;T:System.IO.TextWriter&quot; /&gt; and &lt;see cref=&quot;T:System.Xml.XmlWriterSettings&quot; /&gt; objects.">Crée une nouvelle instance de <see cref="T:System.Xml.XmlWriter" /> à l'aide des objets <see cref="T:System.IO.TextWriter" /> et <see cref="T:System.Xml.XmlWriterSettings" />.</summary>
      <param name="output" vsli:raw="The &lt;see cref=&quot;T:System.IO.TextWriter&quot; /&gt; to which you want to write. The &lt;see cref=&quot;T:System.Xml.XmlWriter&quot; /&gt; writes XML 1.0 text syntax and appends it to the specified &lt;see cref=&quot;T:System.IO.TextWriter&quot; /&gt;.">
        <see cref="T:System.IO.TextWriter" /> dans lequel écrire. <see cref="T:System.Xml.XmlWriter" /> écrit la syntaxe du texte XML 1.0 et l'ajoute au <see cref="T:System.IO.TextWriter" /> spécifié.</param>
      <param name="settings" vsli:raw="The &lt;see cref=&quot;T:System.Xml.XmlWriterSettings&quot; /&gt; object used to configure the new &lt;see cref=&quot;T:System.Xml.XmlWriter&quot; /&gt; instance. If this is &lt;see langword=&quot;null&quot; /&gt;, a &lt;see cref=&quot;T:System.Xml.XmlWriterSettings&quot; /&gt; with default settings is used.  &#xA;  &#xA; If the &lt;see cref=&quot;T:System.Xml.XmlWriter&quot; /&gt; is being used with the &lt;see cref=&quot;M:System.Xml.Xsl.XslCompiledTransform.Transform(System.String,System.Xml.XmlWriter)&quot; /&gt; method, you should use the &lt;see cref=&quot;P:System.Xml.Xsl.XslCompiledTransform.OutputSettings&quot; /&gt; property to obtain an &lt;see cref=&quot;T:System.Xml.XmlWriterSettings&quot; /&gt; object with the correct settings. This ensures that the created &lt;see cref=&quot;T:System.Xml.XmlWriter&quot; /&gt; object has the correct output settings.">Objet <see cref="T:System.Xml.XmlWriterSettings" /> permettant de configurer la nouvelle instance de <see cref="T:System.Xml.XmlWriter" />. S'il est <see langword="null" />, un <see cref="T:System.Xml.XmlWriterSettings" /> avec des paramètres par défaut est utilisé.  
  
Si <see cref="T:System.Xml.XmlWriter" /> est utilisé avec la méthode <see cref="M:System.Xml.Xsl.XslCompiledTransform.Transform(System.String,System.Xml.XmlWriter)" />, vous devez utiliser la propriété <see cref="P:System.Xml.Xsl.XslCompiledTransform.OutputSettings" /> pour obtenir un objet <see cref="T:System.Xml.XmlWriterSettings" /> avec les paramètres corrects. Cela garantit que l'objet <see cref="T:System.Xml.XmlWriter" /> créé dispose des paramètres de sortie corrects.</param>
      <exception cref="T:System.ArgumentNullException" vsli:raw="The &lt;paramref name=&quot;text&quot; /&gt; value is &lt;see langword=&quot;null&quot; /&gt;.">
        <paramref name="text" /> a la valeur <see langword="null" />.</exception>
      <returns vsli:raw="An &lt;see cref=&quot;T:System.Xml.XmlWriter&quot; /&gt; object.">Objet <see cref="T:System.Xml.XmlWriter" />.</returns>
    </member>
    <member name="M:System.Xml.XmlWriter.Create(System.String)">
      <summary vsli:raw="Creates a new &lt;see cref=&quot;T:System.Xml.XmlWriter&quot; /&gt; instance using the specified filename.">Crée une instance de <see cref="T:System.Xml.XmlWriter" /> à l'aide du nom de fichier spécifié.</summary>
      <param name="outputFileName" vsli:raw="The file to which you want to write. The &lt;see cref=&quot;T:System.Xml.XmlWriter&quot; /&gt; creates a file at the specified path and writes to it in XML 1.0 text syntax. The &lt;paramref name=&quot;outputFileName&quot; /&gt; must be a file system path.">Fichier dans lequel écrire. <see cref="T:System.Xml.XmlWriter" /> crée un fichier au chemin d'accès spécifié et y écrit en syntaxe de texte XML 1.0. <paramref name="outputFileName" /> doit être un chemin d'accès de système de fichiers.</param>
      <exception cref="T:System.ArgumentNullException" vsli:raw="The &lt;paramref name=&quot;url&quot; /&gt; value is &lt;see langword=&quot;null&quot; /&gt;.">
        <paramref name="url" /> a la valeur <see langword="null" />.</exception>
      <returns vsli:raw="An &lt;see cref=&quot;T:System.Xml.XmlWriter&quot; /&gt; object.">Objet <see cref="T:System.Xml.XmlWriter" />.</returns>
    </member>
    <member name="M:System.Xml.XmlWriter.Create(System.String,System.Xml.XmlWriterSettings)">
      <summary vsli:raw="Creates a new &lt;see cref=&quot;T:System.Xml.XmlWriter&quot; /&gt; instance using the filename and &lt;see cref=&quot;T:System.Xml.XmlWriterSettings&quot; /&gt; object.">Crée une instance de <see cref="T:System.Xml.XmlWriter" /> à l'aide du nom de fichier et de l'objet <see cref="T:System.Xml.XmlWriterSettings" />.</summary>
      <param name="outputFileName" vsli:raw="The file to which you want to write. The &lt;see cref=&quot;T:System.Xml.XmlWriter&quot; /&gt; creates a file at the specified path and writes to it in XML 1.0 text syntax. The &lt;paramref name=&quot;outputFileName&quot; /&gt; must be a file system path.">Fichier dans lequel écrire. <see cref="T:System.Xml.XmlWriter" /> crée un fichier au chemin d'accès spécifié et y écrit en syntaxe de texte XML 1.0. <paramref name="outputFileName" /> doit être un chemin d'accès de système de fichiers.</param>
      <param name="settings" vsli:raw="The &lt;see cref=&quot;T:System.Xml.XmlWriterSettings&quot; /&gt; object used to configure the new &lt;see cref=&quot;T:System.Xml.XmlWriter&quot; /&gt; instance. If this is &lt;see langword=&quot;null&quot; /&gt;, a &lt;see cref=&quot;T:System.Xml.XmlWriterSettings&quot; /&gt; with default settings is used.  &#xA;  &#xA; If the &lt;see cref=&quot;T:System.Xml.XmlWriter&quot; /&gt; is being used with the &lt;see cref=&quot;M:System.Xml.Xsl.XslCompiledTransform.Transform(System.String,System.Xml.XmlWriter)&quot; /&gt; method, you should use the &lt;see cref=&quot;P:System.Xml.Xsl.XslCompiledTransform.OutputSettings&quot; /&gt; property to obtain an &lt;see cref=&quot;T:System.Xml.XmlWriterSettings&quot; /&gt; object with the correct settings. This ensures that the created &lt;see cref=&quot;T:System.Xml.XmlWriter&quot; /&gt; object has the correct output settings.">Objet <see cref="T:System.Xml.XmlWriterSettings" /> permettant de configurer la nouvelle instance de <see cref="T:System.Xml.XmlWriter" />. S'il est <see langword="null" />, un <see cref="T:System.Xml.XmlWriterSettings" /> avec des paramètres par défaut est utilisé.  
  
Si <see cref="T:System.Xml.XmlWriter" /> est utilisé avec la méthode <see cref="M:System.Xml.Xsl.XslCompiledTransform.Transform(System.String,System.Xml.XmlWriter)" />, vous devez utiliser la propriété <see cref="P:System.Xml.Xsl.XslCompiledTransform.OutputSettings" /> pour obtenir un objet <see cref="T:System.Xml.XmlWriterSettings" /> avec les paramètres corrects. Cela garantit que l'objet <see cref="T:System.Xml.XmlWriter" /> créé dispose des paramètres de sortie corrects.</param>
      <exception cref="T:System.ArgumentNullException" vsli:raw="The &lt;paramref name=&quot;url&quot; /&gt; value is &lt;see langword=&quot;null&quot; /&gt;.">
        <paramref name="url" /> a la valeur <see langword="null" />.</exception>
      <returns vsli:raw="An &lt;see cref=&quot;T:System.Xml.XmlWriter&quot; /&gt; object.">Objet <see cref="T:System.Xml.XmlWriter" />.</returns>
    </member>
    <member name="M:System.Xml.XmlWriter.Create(System.Text.StringBuilder)">
      <summary vsli:raw="Creates a new &lt;see cref=&quot;T:System.Xml.XmlWriter&quot; /&gt; instance using the specified &lt;see cref=&quot;T:System.Text.StringBuilder&quot; /&gt;.">Crée une nouvelle instance de <see cref="T:System.Xml.XmlWriter" /> à l'aide du <see cref="T:System.Text.StringBuilder" /> spécifié.</summary>
      <param name="output" vsli:raw="The &lt;see cref=&quot;T:System.Text.StringBuilder&quot; /&gt; to which to write to. Content written by the &lt;see cref=&quot;T:System.Xml.XmlWriter&quot; /&gt; is appended to the &lt;see cref=&quot;T:System.Text.StringBuilder&quot; /&gt;.">
        <see cref="T:System.Text.StringBuilder" /> dans lequel écrire. Le contenu écrit par le <see cref="T:System.Xml.XmlWriter" /> est ajouté au <see cref="T:System.Text.StringBuilder" />.</param>
      <exception cref="T:System.ArgumentNullException" vsli:raw="The &lt;paramref name=&quot;builder&quot; /&gt; value is &lt;see langword=&quot;null&quot; /&gt;.">
        <paramref name="builder" /> a la valeur <see langword="null" />.</exception>
      <returns vsli:raw="An &lt;see cref=&quot;T:System.Xml.XmlWriter&quot; /&gt; object.">Objet <see cref="T:System.Xml.XmlWriter" />.</returns>
    </member>
    <member name="M:System.Xml.XmlWriter.Create(System.Text.StringBuilder,System.Xml.XmlWriterSettings)">
      <summary vsli:raw="Creates a new &lt;see cref=&quot;T:System.Xml.XmlWriter&quot; /&gt; instance using the &lt;see cref=&quot;T:System.Text.StringBuilder&quot; /&gt; and &lt;see cref=&quot;T:System.Xml.XmlWriterSettings&quot; /&gt; objects.">Crée une nouvelle instance de <see cref="T:System.Xml.XmlWriter" /> à l'aide des objets <see cref="T:System.Text.StringBuilder" /> et <see cref="T:System.Xml.XmlWriterSettings" />.</summary>
      <param name="output" vsli:raw="The &lt;see cref=&quot;T:System.Text.StringBuilder&quot; /&gt; to which to write to. Content written by the &lt;see cref=&quot;T:System.Xml.XmlWriter&quot; /&gt; is appended to the &lt;see cref=&quot;T:System.Text.StringBuilder&quot; /&gt;.">
        <see cref="T:System.Text.StringBuilder" /> dans lequel écrire. Le contenu écrit par le <see cref="T:System.Xml.XmlWriter" /> est ajouté au <see cref="T:System.Text.StringBuilder" />.</param>
      <param name="settings" vsli:raw="The &lt;see cref=&quot;T:System.Xml.XmlWriterSettings&quot; /&gt; object used to configure the new &lt;see cref=&quot;T:System.Xml.XmlWriter&quot; /&gt; instance. If this is &lt;see langword=&quot;null&quot; /&gt;, a &lt;see cref=&quot;T:System.Xml.XmlWriterSettings&quot; /&gt; with default settings is used.  &#xA;  &#xA; If the &lt;see cref=&quot;T:System.Xml.XmlWriter&quot; /&gt; is being used with the &lt;see cref=&quot;M:System.Xml.Xsl.XslCompiledTransform.Transform(System.String,System.Xml.XmlWriter)&quot; /&gt; method, you should use the &lt;see cref=&quot;P:System.Xml.Xsl.XslCompiledTransform.OutputSettings&quot; /&gt; property to obtain an &lt;see cref=&quot;T:System.Xml.XmlWriterSettings&quot; /&gt; object with the correct settings. This ensures that the created &lt;see cref=&quot;T:System.Xml.XmlWriter&quot; /&gt; object has the correct output settings.">Objet <see cref="T:System.Xml.XmlWriterSettings" /> permettant de configurer la nouvelle instance de <see cref="T:System.Xml.XmlWriter" />. S'il est <see langword="null" />, un <see cref="T:System.Xml.XmlWriterSettings" /> avec des paramètres par défaut est utilisé.  
  
Si <see cref="T:System.Xml.XmlWriter" /> est utilisé avec la méthode <see cref="M:System.Xml.Xsl.XslCompiledTransform.Transform(System.String,System.Xml.XmlWriter)" />, vous devez utiliser la propriété <see cref="P:System.Xml.Xsl.XslCompiledTransform.OutputSettings" /> pour obtenir un objet <see cref="T:System.Xml.XmlWriterSettings" /> avec les paramètres corrects. Cela garantit que l'objet <see cref="T:System.Xml.XmlWriter" /> créé dispose des paramètres de sortie corrects.</param>
      <exception cref="T:System.ArgumentNullException" vsli:raw="The &lt;paramref name=&quot;builder&quot; /&gt; value is &lt;see langword=&quot;null&quot; /&gt;.">
        <paramref name="builder" /> a la valeur <see langword="null" />.</exception>
      <returns vsli:raw="An &lt;see cref=&quot;T:System.Xml.XmlWriter&quot; /&gt; object.">Objet <see cref="T:System.Xml.XmlWriter" />.</returns>
    </member>
    <member name="M:System.Xml.XmlWriter.Create(System.Xml.XmlWriter)">
      <summary vsli:raw="Creates a new &lt;see cref=&quot;T:System.Xml.XmlWriter&quot; /&gt; instance using the specified &lt;see cref=&quot;T:System.Xml.XmlWriter&quot; /&gt; object.">Crée une instance de <see cref="T:System.Xml.XmlWriter" /> à l'aide de l'objet <see cref="T:System.Xml.XmlWriter" /> spécifié.</summary>
      <param name="output" vsli:raw="The &lt;see cref=&quot;T:System.Xml.XmlWriter&quot; /&gt; object that you want to use as the underlying writer.">L'objet <see cref="T:System.Xml.XmlWriter" /> à utiliser comme writer sous-jacent.</param>
      <exception cref="T:System.ArgumentNullException" vsli:raw="The &lt;paramref name=&quot;writer&quot; /&gt; value is &lt;see langword=&quot;null&quot; /&gt;.">
        <paramref name="writer" /> a la valeur <see langword="null" />.</exception>
      <returns vsli:raw="An &lt;see cref=&quot;T:System.Xml.XmlWriter&quot; /&gt; object that is wrapped around the specified &lt;see cref=&quot;T:System.Xml.XmlWriter&quot; /&gt; object.">Objet <see cref="T:System.Xml.XmlWriter" /> autour de l'objet <see cref="T:System.Xml.XmlWriter" /> spécifié.</returns>
    </member>
    <member name="M:System.Xml.XmlWriter.Create(System.Xml.XmlWriter,System.Xml.XmlWriterSettings)">
      <summary vsli:raw="Creates a new &lt;see cref=&quot;T:System.Xml.XmlWriter&quot; /&gt; instance using the specified &lt;see cref=&quot;T:System.Xml.XmlWriter&quot; /&gt; and &lt;see cref=&quot;T:System.Xml.XmlWriterSettings&quot; /&gt; objects.">Crée une nouvelle instance de <see cref="T:System.Xml.XmlWriter" /> à l'aide des objets <see cref="T:System.Xml.XmlWriter" /> et <see cref="T:System.Xml.XmlWriterSettings" /> spécifiés.</summary>
      <param name="output" vsli:raw="The &lt;see cref=&quot;T:System.Xml.XmlWriter&quot; /&gt; object that you want to use as the underlying writer.">L'objet <see cref="T:System.Xml.XmlWriter" /> à utiliser comme writer sous-jacent.</param>
      <param name="settings" vsli:raw="The &lt;see cref=&quot;T:System.Xml.XmlWriterSettings&quot; /&gt; object used to configure the new &lt;see cref=&quot;T:System.Xml.XmlWriter&quot; /&gt; instance. If this is &lt;see langword=&quot;null&quot; /&gt;, a &lt;see cref=&quot;T:System.Xml.XmlWriterSettings&quot; /&gt; with default settings is used.  &#xA;  &#xA; If the &lt;see cref=&quot;T:System.Xml.XmlWriter&quot; /&gt; is being used with the &lt;see cref=&quot;M:System.Xml.Xsl.XslCompiledTransform.Transform(System.String,System.Xml.XmlWriter)&quot; /&gt; method, you should use the &lt;see cref=&quot;P:System.Xml.Xsl.XslCompiledTransform.OutputSettings&quot; /&gt; property to obtain an &lt;see cref=&quot;T:System.Xml.XmlWriterSettings&quot; /&gt; object with the correct settings. This ensures that the created &lt;see cref=&quot;T:System.Xml.XmlWriter&quot; /&gt; object has the correct output settings.">Objet <see cref="T:System.Xml.XmlWriterSettings" /> permettant de configurer la nouvelle instance de <see cref="T:System.Xml.XmlWriter" />. S'il est <see langword="null" />, un <see cref="T:System.Xml.XmlWriterSettings" /> avec des paramètres par défaut est utilisé.  
  
Si <see cref="T:System.Xml.XmlWriter" /> est utilisé avec la méthode <see cref="M:System.Xml.Xsl.XslCompiledTransform.Transform(System.String,System.Xml.XmlWriter)" />, vous devez utiliser la propriété <see cref="P:System.Xml.Xsl.XslCompiledTransform.OutputSettings" /> pour obtenir un objet <see cref="T:System.Xml.XmlWriterSettings" /> avec les paramètres corrects. Cela garantit que l'objet <see cref="T:System.Xml.XmlWriter" /> créé dispose des paramètres de sortie corrects.</param>
      <exception cref="T:System.ArgumentNullException" vsli:raw="The &lt;paramref name=&quot;writer&quot; /&gt; value is &lt;see langword=&quot;null&quot; /&gt;.">
        <paramref name="writer" /> a la valeur <see langword="null" />.</exception>
      <returns vsli:raw="An &lt;see cref=&quot;T:System.Xml.XmlWriter&quot; /&gt; object that is wrapped around the specified &lt;see cref=&quot;T:System.Xml.XmlWriter&quot; /&gt; object.">Objet <see cref="T:System.Xml.XmlWriter" /> autour de l'objet <see cref="T:System.Xml.XmlWriter" /> spécifié.</returns>
    </member>
    <member name="M:System.Xml.XmlWriter.Dispose">
      <summary vsli:raw="Releases all resources used by the current instance of the &lt;see cref=&quot;T:System.Xml.XmlWriter&quot; /&gt; class.">Libère toutes les ressources utilisées par l'instance actuelle de la classe <see cref="T:System.Xml.XmlWriter" />.</summary>
      <exception cref="T:System.InvalidOperationException" vsli:raw="An &lt;see cref=&quot;T:System.Xml.XmlWriter&quot; /&gt; method was called before a previous asynchronous operation finished. In this case, &lt;see cref=&quot;T:System.InvalidOperationException&quot; /&gt; is thrown with the message &quot;An asynchronous operation is already in progress.&quot;">Une méthode <see cref="T:System.Xml.XmlWriter" /> a été appelée avant la fin d’une opération asynchrone précédente. Dans ce cas, l’exception <see cref="T:System.InvalidOperationException" /> est levée avec le message « Une opération asynchrone est déjà en cours ».</exception>
    </member>
    <member name="M:System.Xml.XmlWriter.Dispose(System.Boolean)">
      <summary vsli:raw="Releases the unmanaged resources used by the &lt;see cref=&quot;T:System.Xml.XmlWriter&quot; /&gt; and optionally releases the managed resources.">Libère les ressources non managées utilisées par <see cref="T:System.Xml.XmlWriter" /> et libère éventuellement les ressources managées.</summary>
      <param name="disposing" vsli:raw="&lt;see langword=&quot;true&quot; /&gt; to release both managed and unmanaged resources; &lt;see langword=&quot;false&quot; /&gt; to release only unmanaged resources.">
        <see langword="true" /> pour libérer les ressources managées et non managées ; <see langword="false" /> pour libérer uniquement les ressources non managées.</param>
      <exception cref="T:System.InvalidOperationException" vsli:raw="An &lt;see cref=&quot;T:System.Xml.XmlWriter&quot; /&gt; method was called before a previous asynchronous operation finished. In this case, &lt;see cref=&quot;T:System.InvalidOperationException&quot; /&gt; is thrown with the message &quot;An asynchronous operation is already in progress.&quot;">Une méthode <see cref="T:System.Xml.XmlWriter" /> a été appelée avant la fin d’une opération asynchrone précédente. Dans ce cas, l’exception <see cref="T:System.InvalidOperationException" /> est levée avec le message « Une opération asynchrone est déjà en cours ».</exception>
    </member>
    <member name="M:System.Xml.XmlWriter.DisposeAsync">
      <summary vsli:raw="Performs application-defined tasks associated with freeing, releasing, or resetting unmanaged resources asynchronously.">Exécute les tâches définies par l'application associées à la libération ou à la redéfinition asynchrone des ressources non managées.</summary>
      <returns vsli:raw="A task that represents the asynchronous dispose operation.">Tâche qui représente l’opération de suppression asynchrone.</returns>
    </member>
    <member name="M:System.Xml.XmlWriter.DisposeAsyncCore">
      <summary vsli:raw="Performs application-defined tasks associated with freeing, releasing, or resetting managed resources asynchronously.">Exécute les tâches définies par l'application associées à la libération ou à la redéfinition asynchrone des ressources managées.</summary>
      <returns vsli:raw="A task that represents the asynchronous dispose operation.">Tâche qui représente l’opération de suppression asynchrone.</returns>
    </member>
    <member name="M:System.Xml.XmlWriter.Flush">
      <summary vsli:raw="When overridden in a derived class, flushes whatever is in the buffer to the underlying streams and also flushes the underlying stream.">En cas de substitution dans une classe dérivée, vide le contenu de la mémoire tampon dans les flux sous-jacents, puis vide le flux sous-jacent.</summary>
      <exception cref="T:System.InvalidOperationException" vsli:raw="An &lt;see cref=&quot;T:System.Xml.XmlWriter&quot; /&gt; method was called before a previous asynchronous operation finished. In this case, &lt;see cref=&quot;T:System.InvalidOperationException&quot; /&gt; is thrown with the message &quot;An asynchronous operation is already in progress.&quot;">Une méthode <see cref="T:System.Xml.XmlWriter" /> a été appelée avant la fin d’une opération asynchrone précédente. Dans ce cas, l’exception <see cref="T:System.InvalidOperationException" /> est levée avec le message « Une opération asynchrone est déjà en cours ».</exception>
    </member>
    <member name="M:System.Xml.XmlWriter.FlushAsync">
      <summary vsli:raw="Asynchronously flushes whatever is in the buffer to the underlying streams and also flushes the underlying stream.">Vide de façon asynchrone le contenu de la mémoire tampon dans les flux sous-jacents, puis vide le flux sous-jacent.</summary>
      <exception cref="T:System.InvalidOperationException" vsli:raw="An &lt;see cref=&quot;T:System.Xml.XmlWriter&quot; /&gt; method was called before a previous asynchronous operation finished. In this case, &lt;see cref=&quot;T:System.InvalidOperationException&quot; /&gt; is thrown with the message &quot;An asynchronous operation is already in progress.&quot;&#xA;&#xA;-or-&#xA;&#xA;An &lt;see cref=&quot;T:System.Xml.XmlWriter&quot; /&gt; asynchronous method was called without setting the &lt;see cref=&quot;P:System.Xml.XmlWriterSettings.Async&quot; /&gt; flag to &lt;see langword=&quot;true&quot; /&gt;. In this case, &lt;see cref=&quot;T:System.InvalidOperationException&quot; /&gt; is thrown with the message &quot;Set XmlWriterSettings.Async to true if you want to use Async Methods.&quot;">Une méthode <see cref="T:System.Xml.XmlWriter" /> a été appelée avant la fin d’une opération asynchrone précédente. Dans ce cas, l’exception <see cref="T:System.InvalidOperationException" /> est levée avec le message « Une opération asynchrone est déjà en cours ».

- ou -

Une méthode asynchrone <see cref="T:System.Xml.XmlWriter" /> a été appelée sans définir l’indicateur <see cref="P:System.Xml.XmlWriterSettings.Async" /> sur <see langword="true" />. Dans ce cas, <see cref="T:System.InvalidOperationException" /> est levée avec le message « Attribuez à XmlReaderSettings.Async la valeur True si vous voulez utiliser des méthodes asynchrones ».</exception>
      <returns vsli:raw="The task that represents the asynchronous &lt;see langword=&quot;Flush&quot; /&gt; operation.">Tâche qui représente l'opération <see langword="Flush" /> asynchrone.</returns>
    </member>
    <member name="M:System.Xml.XmlWriter.LookupPrefix(System.String)">
      <summary vsli:raw="When overridden in a derived class, returns the closest prefix defined in the current namespace scope for the namespace URI.">En cas de substitution dans une classe dérivée, retourne le préfixe le plus proche défini dans la portée espace de noms actuelle pour l'URI de l'espace de noms.</summary>
      <param name="ns" vsli:raw="The namespace URI whose prefix you want to find.">URI de l'espace de noms dont vous recherchez le préfixe.</param>
      <exception cref="T:System.ArgumentException" vsli:raw="&lt;paramref name=&quot;ns&quot; /&gt; is either &lt;see langword=&quot;null&quot; /&gt; or &lt;see langword=&quot;String.Empty&quot; /&gt;.">
        <paramref name="ns" /> a la valeur <see langword="null" /> ou <see langword="String.Empty" />.</exception>
      <exception cref="T:System.InvalidOperationException" vsli:raw="An &lt;see cref=&quot;T:System.Xml.XmlWriter&quot; /&gt; method was called before a previous asynchronous operation finished. In this case, &lt;see cref=&quot;T:System.InvalidOperationException&quot; /&gt; is thrown with the message &quot;An asynchronous operation is already in progress.&quot;">Une méthode <see cref="T:System.Xml.XmlWriter" /> a été appelée avant la fin d’une opération asynchrone précédente. Dans ce cas, l’exception <see cref="T:System.InvalidOperationException" /> est levée avec le message « Une opération asynchrone est déjà en cours ».</exception>
      <returns vsli:raw="The matching prefix or &lt;see langword=&quot;null&quot; /&gt; if no matching namespace URI is found in the current scope.">Le préfixe correspondant ou <see langword="null" />, s'il n'existe aucun URI d'espace de noms correspondant dans la portée actuelle.</returns>
    </member>
    <member name="M:System.Xml.XmlWriter.WriteAttributes(System.Xml.XmlReader,System.Boolean)">
      <summary vsli:raw="When overridden in a derived class, writes out all the attributes found at the current position in the &lt;see cref=&quot;T:System.Xml.XmlReader&quot; /&gt;.">En cas de substitution dans une classe dérivée, écrit tous les attributs trouvés à la position actuelle dans <see cref="T:System.Xml.XmlReader" />.</summary>
      <param name="reader" vsli:raw="The &lt;see langword=&quot;XmlReader&quot; /&gt; from which to copy the attributes.">
        <see langword="XmlReader" /> à partir duquel les attributs doivent être copiés.</param>
      <param name="defattr" vsli:raw="&lt;see langword=&quot;true&quot; /&gt; to copy the default attributes from the &lt;see langword=&quot;XmlReader&quot; /&gt;; otherwise, &lt;see langword=&quot;false&quot; /&gt;.">
        <see langword="true" /> pour copier les attributs par défaut à partir de <see langword="XmlReader" /> ; sinon, <see langword="false" />.</param>
      <exception cref="T:System.ArgumentNullException" vsli:raw="&lt;paramref name=&quot;reader&quot; /&gt; is &lt;see langword=&quot;null&quot; /&gt;.">
        <paramref name="reader" /> a la valeur <see langword="null" />.</exception>
      <exception cref="T:System.Xml.XmlException" vsli:raw="The reader is not positioned on an &lt;see langword=&quot;element&quot; /&gt;, &lt;see langword=&quot;attribute&quot; /&gt; or &lt;see langword=&quot;XmlDeclaration&quot; /&gt; node.">Le lecteur n'est pas placé sur un nœud <see langword="element" />, <see langword="attribute" /> ou <see langword="XmlDeclaration" />.</exception>
      <exception cref="T:System.InvalidOperationException" vsli:raw="An &lt;see cref=&quot;T:System.Xml.XmlWriter&quot; /&gt; method was called before a previous asynchronous operation finished. In this case, &lt;see cref=&quot;T:System.InvalidOperationException&quot; /&gt; is thrown with the message &quot;An asynchronous operation is already in progress.&quot;">Une méthode <see cref="T:System.Xml.XmlWriter" /> a été appelée avant la fin d’une opération asynchrone précédente. Dans ce cas, l’exception <see cref="T:System.InvalidOperationException" /> est levée avec le message « Une opération asynchrone est déjà en cours ».</exception>
    </member>
    <member name="M:System.Xml.XmlWriter.WriteAttributesAsync(System.Xml.XmlReader,System.Boolean)">
      <summary vsli:raw="Asynchronously writes out all the attributes found at the current position in the &lt;see cref=&quot;T:System.Xml.XmlReader&quot; /&gt;.">Écrit de façon asynchrone tous les attributs trouvés à la position actuelle dans le <see cref="T:System.Xml.XmlReader" />.</summary>
      <param name="reader" vsli:raw="The &lt;see langword=&quot;XmlReader&quot; /&gt; from which to copy the attributes.">
        <see langword="XmlReader" /> à partir duquel les attributs doivent être copiés.</param>
      <param name="defattr" vsli:raw="&lt;see langword=&quot;true&quot; /&gt; to copy the default attributes from the &lt;see langword=&quot;XmlReader&quot; /&gt;; otherwise, &lt;see langword=&quot;false&quot; /&gt;.">
        <see langword="true" /> pour copier les attributs par défaut à partir de <see langword="XmlReader" /> ; sinon, <see langword="false" />.</param>
      <exception cref="T:System.InvalidOperationException" vsli:raw="An &lt;see cref=&quot;T:System.Xml.XmlWriter&quot; /&gt; method was called before a previous asynchronous operation finished. In this case, &lt;see cref=&quot;T:System.InvalidOperationException&quot; /&gt; is thrown with the message &quot;An asynchronous operation is already in progress.&quot;&#xA;&#xA;-or-&#xA;&#xA;An &lt;see cref=&quot;T:System.Xml.XmlWriter&quot; /&gt; asynchronous method was called without setting the &lt;see cref=&quot;P:System.Xml.XmlWriterSettings.Async&quot; /&gt; flag to &lt;see langword=&quot;true&quot; /&gt;. In this case, &lt;see cref=&quot;T:System.InvalidOperationException&quot; /&gt; is thrown with the message &quot;Set XmlWriterSettings.Async to true if you want to use Async Methods.&quot;">Une méthode <see cref="T:System.Xml.XmlWriter" /> a été appelée avant la fin d’une opération asynchrone précédente. Dans ce cas, l’exception <see cref="T:System.InvalidOperationException" /> est levée avec le message « Une opération asynchrone est déjà en cours ».

- ou -

Une méthode asynchrone <see cref="T:System.Xml.XmlWriter" /> a été appelée sans définir l’indicateur <see cref="P:System.Xml.XmlWriterSettings.Async" /> sur <see langword="true" />. Dans ce cas, <see cref="T:System.InvalidOperationException" /> est levée avec le message « Attribuez à XmlReaderSettings.Async la valeur True si vous voulez utiliser des méthodes asynchrones ».</exception>
      <returns vsli:raw="The task that represents the asynchronous &lt;see langword=&quot;WriteAttributes&quot; /&gt; operation.">Tâche qui représente l'opération <see langword="WriteAttributes" /> asynchrone.</returns>
    </member>
    <member name="M:System.Xml.XmlWriter.WriteAttributeString(System.String,System.String)">
      <summary vsli:raw="When overridden in a derived class, writes out the attribute with the specified local name and value.">En cas de substitution dans une classe dérivée, écrit l'attribut avec le nom local et la valeur spécifiés.</summary>
      <param name="localName" vsli:raw="The local name of the attribute.">Le nom local de l'attribut.</param>
      <param name="value" vsli:raw="The value of the attribute.">Valeur de l'attribut.</param>
      <exception cref="T:System.InvalidOperationException" vsli:raw="The state of writer is not &lt;see langword=&quot;WriteState.Element&quot; /&gt; or writer is closed.&#xA;&#xA;-or-&#xA;&#xA;An &lt;see cref=&quot;T:System.Xml.XmlWriter&quot; /&gt; method was called before a previous asynchronous operation finished. In this case, &lt;see cref=&quot;T:System.InvalidOperationException&quot; /&gt; is thrown with the message &quot;An asynchronous operation is already in progress.&quot;">L'état du writer n'est pas <see langword="WriteState.Element" /> ou le writer est fermé.

- ou -

Une méthode <see cref="T:System.Xml.XmlWriter" /> a été appelée avant la fin d’une opération asynchrone précédente. Dans ce cas, l’exception <see cref="T:System.InvalidOperationException" /> est levée avec le message « Une opération asynchrone est déjà en cours ».</exception>
      <exception cref="T:System.ArgumentException" vsli:raw="The &lt;see langword=&quot;xml:space&quot; /&gt; or &lt;see langword=&quot;xml:lang&quot; /&gt; attribute value is invalid.">La valeur d'attribut <see langword="xml:space" /> ou <see langword="xml:lang" /> n'est pas valide.</exception>
    </member>
    <member name="M:System.Xml.XmlWriter.WriteAttributeString(System.String,System.String,System.String)">
      <summary vsli:raw="When overridden in a derived class, writes an attribute with the specified local name, namespace URI, and value.">En cas de substitution dans une classe dérivée, écrit un attribut avec le nom local, l'URI de l'espace de noms et la valeur spécifiés.</summary>
      <param name="localName" vsli:raw="The local name of the attribute.">Le nom local de l'attribut.</param>
      <param name="ns" vsli:raw="The namespace URI to associate with the attribute.">URI de l'espace de noms à associer à l'attribut.</param>
      <param name="value" vsli:raw="The value of the attribute.">Valeur de l'attribut.</param>
      <exception cref="T:System.InvalidOperationException" vsli:raw="The state of writer is not &lt;see langword=&quot;WriteState.Element&quot; /&gt; or writer is closed.&#xA;&#xA;-or-&#xA;        &#xA;An &lt;see cref=&quot;T:System.Xml.XmlWriter&quot; /&gt; method was called before a previous asynchronous operation finished. In this case, &lt;see cref=&quot;T:System.InvalidOperationException&quot; /&gt; is thrown with the message &quot;An asynchronous operation is already in progress.&quot;">L'état du writer n'est pas <see langword="WriteState.Element" /> ou le writer est fermé.

- ou - 
Une méthode <see cref="T:System.Xml.XmlWriter" /> a été appelée avant la fin d’une opération asynchrone précédente. Dans ce cas, l’exception <see cref="T:System.InvalidOperationException" /> est levée avec le message « Une opération asynchrone est déjà en cours ».</exception>
      <exception cref="T:System.ArgumentException" vsli:raw="The &lt;see langword=&quot;xml:space&quot; /&gt; or &lt;see langword=&quot;xml:lang&quot; /&gt; attribute value is invalid.">La valeur d'attribut <see langword="xml:space" /> ou <see langword="xml:lang" /> n'est pas valide.</exception>
    </member>
    <member name="M:System.Xml.XmlWriter.WriteAttributeString(System.String,System.String,System.String,System.String)">
      <summary vsli:raw="When overridden in a derived class, writes out the attribute with the specified prefix, local name, namespace URI, and value.">En cas de substitution dans une classe dérivée, écrit l'attribut avec le préfixe, le nom local, l'URI de l'espace de noms et la valeur spécifiés.</summary>
      <param name="prefix" vsli:raw="The namespace prefix of the attribute.">Préfixe de l'espace de noms de cet attribut.</param>
      <param name="localName" vsli:raw="The local name of the attribute.">Le nom local de l'attribut.</param>
      <param name="ns" vsli:raw="The namespace URI of the attribute.">L'URI de l'espace de noms de l'attribut.</param>
      <param name="value" vsli:raw="The value of the attribute.">Valeur de l'attribut.</param>
      <exception cref="T:System.InvalidOperationException" vsli:raw="The state of writer is not &lt;see langword=&quot;WriteState.Element&quot; /&gt; or writer is closed.&#xA;&#xA;-or-&#xA;        &#xA;An &lt;see cref=&quot;T:System.Xml.XmlWriter&quot; /&gt; method was called before a previous asynchronous operation finished. In this case, &lt;see cref=&quot;T:System.InvalidOperationException&quot; /&gt; is thrown with the message &quot;An asynchronous operation is already in progress.&quot;">L'état du writer n'est pas <see langword="WriteState.Element" /> ou le writer est fermé.

- ou - 
Une méthode <see cref="T:System.Xml.XmlWriter" /> a été appelée avant la fin d’une opération asynchrone précédente. Dans ce cas, l’exception <see cref="T:System.InvalidOperationException" /> est levée avec le message « Une opération asynchrone est déjà en cours ».</exception>
      <exception cref="T:System.ArgumentException" vsli:raw="The &lt;see langword=&quot;xml:space&quot; /&gt; or &lt;see langword=&quot;xml:lang&quot; /&gt; attribute value is invalid.">La valeur d'attribut <see langword="xml:space" /> ou <see langword="xml:lang" /> n'est pas valide.</exception>
      <exception cref="T:System.Xml.XmlException" vsli:raw="The &lt;paramref name=&quot;localName&quot; /&gt; or &lt;paramref name=&quot;ns&quot; /&gt; is &lt;see langword=&quot;null&quot; /&gt;.">
        <paramref name="localName" /> ou <paramref name="ns" /> a la valeur <see langword="null" />.</exception>
    </member>
    <member name="M:System.Xml.XmlWriter.WriteAttributeStringAsync(System.String,System.String,System.String,System.String)">
      <summary vsli:raw="Asynchronously writes out the attribute with the specified prefix, local name, namespace URI, and value.">Écrit de façon asynchrone l'attribut avec le préfixe, le nom local, l'URI de l'espace de noms et la valeur spécifiés.</summary>
      <param name="prefix" vsli:raw="The namespace prefix of the attribute.">Préfixe de l'espace de noms de cet attribut.</param>
      <param name="localName" vsli:raw="The local name of the attribute.">Le nom local de l'attribut.</param>
      <param name="ns" vsli:raw="The namespace URI of the attribute.">L'URI de l'espace de noms de l'attribut.</param>
      <param name="value" vsli:raw="The value of the attribute.">Valeur de l'attribut.</param>
      <exception cref="T:System.InvalidOperationException" vsli:raw="An &lt;see cref=&quot;T:System.Xml.XmlWriter&quot; /&gt; method was called before a previous asynchronous operation finished. In this case, &lt;see cref=&quot;T:System.InvalidOperationException&quot; /&gt; is thrown with the message &quot;An asynchronous operation is already in progress.&quot;&#xA;&#xA;-or-&#xA;    &#xA;An &lt;see cref=&quot;T:System.Xml.XmlWriter&quot; /&gt; asynchronous method was called without setting the &lt;see cref=&quot;P:System.Xml.XmlWriterSettings.Async&quot; /&gt; flag to &lt;see langword=&quot;true&quot; /&gt;. In this case, &lt;see cref=&quot;T:System.InvalidOperationException&quot; /&gt; is thrown with the message &quot;Set XmlWriterSettings.Async to true if you want to use Async Methods.&quot;">Une méthode <see cref="T:System.Xml.XmlWriter" /> a été appelée avant la fin d’une opération asynchrone précédente. Dans ce cas, l’exception <see cref="T:System.InvalidOperationException" /> est levée avec le message « Une opération asynchrone est déjà en cours ».

- ou - 
Une méthode asynchrone <see cref="T:System.Xml.XmlWriter" /> a été appelée sans définir l’indicateur <see cref="P:System.Xml.XmlWriterSettings.Async" /> sur <see langword="true" />. Dans ce cas, <see cref="T:System.InvalidOperationException" /> est levée avec le message « Attribuez à XmlReaderSettings.Async la valeur True si vous voulez utiliser des méthodes asynchrones ».</exception>
      <returns vsli:raw="The task that represents the asynchronous &lt;see langword=&quot;WriteAttributeString&quot; /&gt; operation.">Tâche qui représente l'opération <see langword="WriteAttributeString" /> asynchrone.</returns>
    </member>
    <member name="M:System.Xml.XmlWriter.WriteBase64(System.Byte[],System.Int32,System.Int32)">
      <summary vsli:raw="When overridden in a derived class, encodes the specified binary bytes as Base64 and writes out the resulting text.">En cas de substitution dans une classe dérivée, code les octets binaires spécifiés au format Base64 et écrit le texte obtenu.</summary>
      <param name="buffer" vsli:raw="Byte array to encode.">Tableau d'octets à encoder.</param>
      <param name="index" vsli:raw="The position in the buffer indicating the start of the bytes to write.">Emplacement dans la mémoire tampon indiquant le début des octets à écrire.</param>
      <param name="count" vsli:raw="The number of bytes to write.">Nombre d'octets à écrire.</param>
      <exception cref="T:System.ArgumentNullException" vsli:raw="&lt;paramref name=&quot;buffer&quot; /&gt; is &lt;see langword=&quot;null&quot; /&gt;.">
        <paramref name="buffer" /> a la valeur <see langword="null" />.</exception>
      <exception cref="T:System.ArgumentOutOfRangeException" vsli:raw="&lt;paramref name=&quot;index&quot; /&gt; or &lt;paramref name=&quot;count&quot; /&gt; is less than zero.  &#xA;  &#xA; -or-  &#xA;  &#xA; The buffer length minus &lt;paramref name=&quot;index&quot; /&gt; is less than &lt;paramref name=&quot;count&quot; /&gt;.">
        <paramref name="index" /> ou <paramref name="count" /> est inférieur à zéro.  
  
- ou - 
La longueur de la mémoire tampon moins <paramref name="index" /> est inférieure à <paramref name="count" />.</exception>
      <exception cref="T:System.InvalidOperationException" vsli:raw="An &lt;see cref=&quot;T:System.Xml.XmlWriter&quot; /&gt; method was called before a previous asynchronous operation finished. In this case, &lt;see cref=&quot;T:System.InvalidOperationException&quot; /&gt; is thrown with the message &quot;An asynchronous operation is already in progress.&quot;">Une méthode <see cref="T:System.Xml.XmlWriter" /> a été appelée avant la fin d’une opération asynchrone précédente. Dans ce cas, l’exception <see cref="T:System.InvalidOperationException" /> est levée avec le message « Une opération asynchrone est déjà en cours ».</exception>
    </member>
    <member name="M:System.Xml.XmlWriter.WriteBase64Async(System.Byte[],System.Int32,System.Int32)">
      <summary vsli:raw="Asynchronously encodes the specified binary bytes as Base64 and writes out the resulting text.">Encode de façon asynchrone les octets binaires spécifiés au format base64 et écrit le texte résultant.</summary>
      <param name="buffer" vsli:raw="Byte array to encode.">Tableau d'octets à encoder.</param>
      <param name="index" vsli:raw="The position in the buffer indicating the start of the bytes to write.">Emplacement dans la mémoire tampon indiquant le début des octets à écrire.</param>
      <param name="count" vsli:raw="The number of bytes to write.">Nombre d'octets à écrire.</param>
      <exception cref="T:System.InvalidOperationException" vsli:raw="An &lt;see cref=&quot;T:System.Xml.XmlWriter&quot; /&gt; method was called before a previous asynchronous operation finished. In this case, &lt;see cref=&quot;T:System.InvalidOperationException&quot; /&gt; is thrown with the message &quot;An asynchronous operation is already in progress.&quot;&#xA;&#xA;-or-&#xA;&#xA;An &lt;see cref=&quot;T:System.Xml.XmlWriter&quot; /&gt; asynchronous method was called without setting the &lt;see cref=&quot;P:System.Xml.XmlWriterSettings.Async&quot; /&gt; flag to &lt;see langword=&quot;true&quot; /&gt;. In this case, &lt;see cref=&quot;T:System.InvalidOperationException&quot; /&gt; is thrown with the message &quot;Set XmlWriterSettings.Async to true if you want to use Async Methods.&quot;">Une méthode <see cref="T:System.Xml.XmlWriter" /> a été appelée avant la fin d’une opération asynchrone précédente. Dans ce cas, l’exception <see cref="T:System.InvalidOperationException" /> est levée avec le message « Une opération asynchrone est déjà en cours ».

- ou -

Une méthode asynchrone <see cref="T:System.Xml.XmlWriter" /> a été appelée sans définir l’indicateur <see cref="P:System.Xml.XmlWriterSettings.Async" /> sur <see langword="true" />. Dans ce cas, <see cref="T:System.InvalidOperationException" /> est levée avec le message « Attribuez à XmlReaderSettings.Async la valeur True si vous voulez utiliser des méthodes asynchrones ».</exception>
      <returns vsli:raw="The task that represents the asynchronous &lt;see langword=&quot;WriteBase64&quot; /&gt; operation.">Tâche qui représente l'opération <see langword="WriteBase64" /> asynchrone.</returns>
    </member>
    <member name="M:System.Xml.XmlWriter.WriteBinHex(System.Byte[],System.Int32,System.Int32)">
      <summary vsli:raw="When overridden in a derived class, encodes the specified binary bytes as &lt;see langword=&quot;BinHex&quot; /&gt; and writes out the resulting text.">En cas de substitution dans une classe dérivée, code les octets binaires spécifiés au format <see langword="BinHex" /> et écrit le texte obtenu.</summary>
      <param name="buffer" vsli:raw="Byte array to encode.">Tableau d'octets à encoder.</param>
      <param name="index" vsli:raw="The position in the buffer indicating the start of the bytes to write.">Emplacement dans la mémoire tampon indiquant le début des octets à écrire.</param>
      <param name="count" vsli:raw="The number of bytes to write.">Nombre d'octets à écrire.</param>
      <exception cref="T:System.ArgumentNullException" vsli:raw="&lt;paramref name=&quot;buffer&quot; /&gt; is &lt;see langword=&quot;null&quot; /&gt;.">
        <paramref name="buffer" /> a la valeur <see langword="null" />.</exception>
      <exception cref="T:System.InvalidOperationException" vsli:raw="The writer is closed or in error state.&#xA;-or-&#xA;&#xA;An &lt;see cref=&quot;T:System.Xml.XmlWriter&quot; /&gt; method was called before a previous asynchronous operation finished. In this case, &lt;see cref=&quot;T:System.InvalidOperationException&quot; /&gt; is thrown with the message &quot;An asynchronous operation is already in progress.&quot;">Le Writer est fermé ou a l'état d'erreur.
- ou -

Une méthode <see cref="T:System.Xml.XmlWriter" /> a été appelée avant la fin d’une opération asynchrone précédente. Dans ce cas, l’exception <see cref="T:System.InvalidOperationException" /> est levée avec le message « Une opération asynchrone est déjà en cours ».</exception>
      <exception cref="T:System.ArgumentOutOfRangeException" vsli:raw="&lt;paramref name=&quot;index&quot; /&gt; or &lt;paramref name=&quot;count&quot; /&gt; is less than zero.  &#xA;  &#xA; -or-  &#xA;  &#xA; The buffer length minus &lt;paramref name=&quot;index&quot; /&gt; is less than &lt;paramref name=&quot;count&quot; /&gt;.">
        <paramref name="index" /> ou <paramref name="count" /> est inférieur à zéro.  
  
- ou - 
La longueur de la mémoire tampon moins <paramref name="index" /> est inférieure à <paramref name="count" />.</exception>
    </member>
    <member name="M:System.Xml.XmlWriter.WriteBinHexAsync(System.Byte[],System.Int32,System.Int32)">
      <summary vsli:raw="Asynchronously encodes the specified binary bytes as &lt;see langword=&quot;BinHex&quot; /&gt; and writes out the resulting text.">Encode de façon asynchrone les octets binaires spécifiés au format <see langword="BinHex" /> et écrit le texte résultant.</summary>
      <param name="buffer" vsli:raw="Byte array to encode.">Tableau d'octets à encoder.</param>
      <param name="index" vsli:raw="The position in the buffer indicating the start of the bytes to write.">Emplacement dans la mémoire tampon indiquant le début des octets à écrire.</param>
      <param name="count" vsli:raw="The number of bytes to write.">Nombre d'octets à écrire.</param>
      <exception cref="T:System.InvalidOperationException" vsli:raw="An &lt;see cref=&quot;T:System.Xml.XmlWriter&quot; /&gt; method was called before a previous asynchronous operation finished. In this case, &lt;see cref=&quot;T:System.InvalidOperationException&quot; /&gt; is thrown with the message &quot;An asynchronous operation is already in progress.&quot;&#xA;&#xA;-or-&#xA;&#xA;An &lt;see cref=&quot;T:System.Xml.XmlWriter&quot; /&gt; asynchronous method was called without setting the &lt;see cref=&quot;P:System.Xml.XmlWriterSettings.Async&quot; /&gt; flag to &lt;see langword=&quot;true&quot; /&gt;. In this case, &lt;see cref=&quot;T:System.InvalidOperationException&quot; /&gt; is thrown with the message &quot;Set XmlWriterSettings.Async to true if you want to use Async Methods.&quot;">Une méthode <see cref="T:System.Xml.XmlWriter" /> a été appelée avant la fin d’une opération asynchrone précédente. Dans ce cas, l’exception <see cref="T:System.InvalidOperationException" /> est levée avec le message « Une opération asynchrone est déjà en cours ».

- ou -

Une méthode asynchrone <see cref="T:System.Xml.XmlWriter" /> a été appelée sans définir l’indicateur <see cref="P:System.Xml.XmlWriterSettings.Async" /> sur <see langword="true" />. Dans ce cas, <see cref="T:System.InvalidOperationException" /> est levée avec le message « Attribuez à XmlReaderSettings.Async la valeur True si vous voulez utiliser des méthodes asynchrones ».</exception>
      <returns vsli:raw="The task that represents the asynchronous &lt;see langword=&quot;WriteBinHex&quot; /&gt; operation.">Tâche qui représente l'opération <see langword="WriteBinHex" /> asynchrone.</returns>
    </member>
    <member name="M:System.Xml.XmlWriter.WriteCData(System.String)">
      <summary vsli:raw="When overridden in a derived class, writes out a &amp;lt;![CDATA[...]]&amp;gt; block containing the specified text.">En cas de substitution dans une classe dérivée, écrit un bloc &lt;![CDATA[...]]&gt; contenant le texte spécifié.</summary>
      <param name="text" vsli:raw="The text to place inside the CDATA block.">Texte à placer dans le bloc CDATA.</param>
      <exception cref="T:System.ArgumentException" vsli:raw="The text would result in a non-well formed XML document.">Le texte est à l'origine d'un document XML incorrect.</exception>
      <exception cref="T:System.InvalidOperationException" vsli:raw="An &lt;see cref=&quot;T:System.Xml.XmlWriter&quot; /&gt; method was called before a previous asynchronous operation finished. In this case, &lt;see cref=&quot;T:System.InvalidOperationException&quot; /&gt; is thrown with the message &quot;An asynchronous operation is already in progress.&quot;">Une méthode <see cref="T:System.Xml.XmlWriter" /> a été appelée avant la fin d’une opération asynchrone précédente. Dans ce cas, l’exception <see cref="T:System.InvalidOperationException" /> est levée avec le message « Une opération asynchrone est déjà en cours ».</exception>
    </member>
    <member name="M:System.Xml.XmlWriter.WriteCDataAsync(System.String)">
      <summary vsli:raw="Asynchronously writes out a &amp;lt;![CDATA[...]]&amp;gt; block containing the specified text.">Écrit de façon asynchrone un bloc &lt;![CDATA[...]]&gt; contenant le texte spécifié.</summary>
      <param name="text" vsli:raw="The text to place inside the CDATA block.">Texte à placer dans le bloc CDATA.</param>
      <exception cref="T:System.InvalidOperationException" vsli:raw="An &lt;see cref=&quot;T:System.Xml.XmlWriter&quot; /&gt; method was called before a previous asynchronous operation finished. In this case, &lt;see cref=&quot;T:System.InvalidOperationException&quot; /&gt; is thrown with the message &quot;An asynchronous operation is already in progress.&quot;&#xA;&#xA;-or-&#xA;&#xA;An &lt;see cref=&quot;T:System.Xml.XmlWriter&quot; /&gt; asynchronous method was called without setting the &lt;see cref=&quot;P:System.Xml.XmlWriterSettings.Async&quot; /&gt; flag to &lt;see langword=&quot;true&quot; /&gt;. In this case, &lt;see cref=&quot;T:System.InvalidOperationException&quot; /&gt; is thrown with the message &quot;Set XmlWriterSettings.Async to true if you want to use Async Methods.&quot;">Une méthode <see cref="T:System.Xml.XmlWriter" /> a été appelée avant la fin d’une opération asynchrone précédente. Dans ce cas, l’exception <see cref="T:System.InvalidOperationException" /> est levée avec le message « Une opération asynchrone est déjà en cours ».

- ou -

Une méthode asynchrone <see cref="T:System.Xml.XmlWriter" /> a été appelée sans définir l’indicateur <see cref="P:System.Xml.XmlWriterSettings.Async" /> sur <see langword="true" />. Dans ce cas, <see cref="T:System.InvalidOperationException" /> est levée avec le message « Attribuez à XmlReaderSettings.Async la valeur True si vous voulez utiliser des méthodes asynchrones ».</exception>
      <returns vsli:raw="The task that represents the asynchronous &lt;see langword=&quot;WriteCData&quot; /&gt; operation.">Tâche qui représente l'opération <see langword="WriteCData" /> asynchrone.</returns>
    </member>
    <member name="M:System.Xml.XmlWriter.WriteCharEntity(System.Char)">
      <summary vsli:raw="When overridden in a derived class, forces the generation of a character entity for the specified Unicode character value.">En cas de substitution dans une classe dérivée, force la génération d'une entité de caractère pour la valeur du caractère Unicode spécifiée.</summary>
      <param name="ch" vsli:raw="The Unicode character for which to generate a character entity.">Caractère Unicode pour lequel une entité de caractère doit être générée.</param>
      <exception cref="T:System.ArgumentException" vsli:raw="The character is in the surrogate pair character range, &lt;see langword=&quot;0xd800&quot; /&gt; - &lt;see langword=&quot;0xdfff&quot; /&gt;.">Le caractère se trouve dans la plage de caractères de paire de substitution, <see langword="0xd800" /> - <see langword="0xdfff" />.</exception>
      <exception cref="T:System.InvalidOperationException" vsli:raw="An &lt;see cref=&quot;T:System.Xml.XmlWriter&quot; /&gt; method was called before a previous asynchronous operation finished. In this case, &lt;see cref=&quot;T:System.InvalidOperationException&quot; /&gt; is thrown with the message &quot;An asynchronous operation is already in progress.&quot;">Une méthode <see cref="T:System.Xml.XmlWriter" /> a été appelée avant la fin d’une opération asynchrone précédente. Dans ce cas, l’exception <see cref="T:System.InvalidOperationException" /> est levée avec le message « Une opération asynchrone est déjà en cours ».</exception>
    </member>
    <member name="M:System.Xml.XmlWriter.WriteCharEntityAsync(System.Char)">
      <summary vsli:raw="Asynchronously forces the generation of a character entity for the specified Unicode character value.">Force de façon asynchrone la génération d'une entité de caractère pour la valeur du caractère Unicode spécifiée.</summary>
      <param name="ch" vsli:raw="The Unicode character for which to generate a character entity.">Caractère Unicode pour lequel une entité de caractère doit être générée.</param>
      <exception cref="T:System.InvalidOperationException" vsli:raw="An &lt;see cref=&quot;T:System.Xml.XmlWriter&quot; /&gt; method was called before a previous asynchronous operation finished. In this case, &lt;see cref=&quot;T:System.InvalidOperationException&quot; /&gt; is thrown with the message &quot;An asynchronous operation is already in progress.&quot;&#xA;&#xA;-or-&#xA;&#xA;An &lt;see cref=&quot;T:System.Xml.XmlWriter&quot; /&gt; asynchronous method was called without setting the &lt;see cref=&quot;P:System.Xml.XmlWriterSettings.Async&quot; /&gt; flag to &lt;see langword=&quot;true&quot; /&gt;. In this case, &lt;see cref=&quot;T:System.InvalidOperationException&quot; /&gt; is thrown with the message &quot;Set XmlWriterSettings.Async to true if you want to use Async Methods.&quot;">Une méthode <see cref="T:System.Xml.XmlWriter" /> a été appelée avant la fin d’une opération asynchrone précédente. Dans ce cas, l’exception <see cref="T:System.InvalidOperationException" /> est levée avec le message « Une opération asynchrone est déjà en cours ».

- ou -

Une méthode asynchrone <see cref="T:System.Xml.XmlWriter" /> a été appelée sans définir l’indicateur <see cref="P:System.Xml.XmlWriterSettings.Async" /> sur <see langword="true" />. Dans ce cas, <see cref="T:System.InvalidOperationException" /> est levée avec le message « Attribuez à XmlReaderSettings.Async la valeur True si vous voulez utiliser des méthodes asynchrones ».</exception>
      <returns vsli:raw="The task that represents the asynchronous &lt;see langword=&quot;WriteCharEntity&quot; /&gt; operation.">Tâche qui représente l'opération <see langword="WriteCharEntity" /> asynchrone.</returns>
    </member>
    <member name="M:System.Xml.XmlWriter.WriteChars(System.Char[],System.Int32,System.Int32)">
      <summary vsli:raw="When overridden in a derived class, writes text one buffer at a time.">En cas de substitution dans une classe dérivée, écrit du texte mémoire tampon par mémoire tampon.</summary>
      <param name="buffer" vsli:raw="Character array containing the text to write.">Tableau de caractères contenant le texte à écrire.</param>
      <param name="index" vsli:raw="The position in the buffer indicating the start of the text to write.">Emplacement dans la mémoire tampon indiquant le début du texte à écrire.</param>
      <param name="count" vsli:raw="The number of characters to write.">Nombre de caractères à écrire.</param>
      <exception cref="T:System.ArgumentNullException" vsli:raw="&lt;paramref name=&quot;buffer&quot; /&gt; is &lt;see langword=&quot;null&quot; /&gt;.">
        <paramref name="buffer" /> a la valeur <see langword="null" />.</exception>
      <exception cref="T:System.ArgumentOutOfRangeException" vsli:raw="&lt;paramref name=&quot;index&quot; /&gt; or &lt;paramref name=&quot;count&quot; /&gt; is less than zero.  &#xA;  &#xA; -or-  &#xA;  &#xA; The buffer length minus &lt;paramref name=&quot;index&quot; /&gt; is less than &lt;paramref name=&quot;count&quot; /&gt;; the call results in surrogate pair characters being split or an invalid surrogate pair being written.">
        <paramref name="index" /> ou <paramref name="count" /> est inférieur à zéro.  
  
- ou - 
La longueur de la mémoire tampon moins <paramref name="index" /> est inférieure à <paramref name="count" /> ; par conséquent, l'appel entraîne une séparation des caractères de paire de substitution ou l'écriture d'une paire de substitution non valide.</exception>
      <exception cref="T:System.ArgumentException" vsli:raw="The &lt;paramref name=&quot;buffer&quot; /&gt; parameter value is not valid.">La valeur de paramètre <paramref name="buffer" /> n'est pas valide.</exception>
      <exception cref="T:System.InvalidOperationException" vsli:raw="An &lt;see cref=&quot;T:System.Xml.XmlWriter&quot; /&gt; method was called before a previous asynchronous operation finished. In this case, &lt;see cref=&quot;T:System.InvalidOperationException&quot; /&gt; is thrown with the message &quot;An asynchronous operation is already in progress.&quot;">Une méthode <see cref="T:System.Xml.XmlWriter" /> a été appelée avant la fin d’une opération asynchrone précédente. Dans ce cas, l’exception <see cref="T:System.InvalidOperationException" /> est levée avec le message « Une opération asynchrone est déjà en cours ».</exception>
    </member>
    <member name="M:System.Xml.XmlWriter.WriteCharsAsync(System.Char[],System.Int32,System.Int32)">
      <summary vsli:raw="Asynchronously writes text one buffer at a time.">Écrit de façon asynchrone du texte mémoire tampon par mémoire tampon.</summary>
      <param name="buffer" vsli:raw="Character array containing the text to write.">Tableau de caractères contenant le texte à écrire.</param>
      <param name="index" vsli:raw="The position in the buffer indicating the start of the text to write.">Emplacement dans la mémoire tampon indiquant le début du texte à écrire.</param>
      <param name="count" vsli:raw="The number of characters to write.">Nombre de caractères à écrire.</param>
      <exception cref="T:System.InvalidOperationException" vsli:raw="An &lt;see cref=&quot;T:System.Xml.XmlWriter&quot; /&gt; method was called before a previous asynchronous operation finished. In this case, &lt;see cref=&quot;T:System.InvalidOperationException&quot; /&gt; is thrown with the message &quot;An asynchronous operation is already in progress.&quot;&#xA;&#xA;-or-&#xA;&#xA;An &lt;see cref=&quot;T:System.Xml.XmlWriter&quot; /&gt; asynchronous method was called without setting the &lt;see cref=&quot;P:System.Xml.XmlWriterSettings.Async&quot; /&gt; flag to &lt;see langword=&quot;true&quot; /&gt;. In this case, &lt;see cref=&quot;T:System.InvalidOperationException&quot; /&gt; is thrown with the message &quot;Set XmlWriterSettings.Async to true if you want to use Async Methods.&quot;">Une méthode <see cref="T:System.Xml.XmlWriter" /> a été appelée avant la fin d’une opération asynchrone précédente. Dans ce cas, l’exception <see cref="T:System.InvalidOperationException" /> est levée avec le message « Une opération asynchrone est déjà en cours ».

- ou -

Une méthode asynchrone <see cref="T:System.Xml.XmlWriter" /> a été appelée sans définir l’indicateur <see cref="P:System.Xml.XmlWriterSettings.Async" /> sur <see langword="true" />. Dans ce cas, <see cref="T:System.InvalidOperationException" /> est levée avec le message « Attribuez à XmlReaderSettings.Async la valeur True si vous voulez utiliser des méthodes asynchrones ».</exception>
      <returns vsli:raw="The task that represents the asynchronous &lt;see langword=&quot;WriteChars&quot; /&gt; operation.">Tâche qui représente l'opération <see langword="WriteChars" /> asynchrone.</returns>
    </member>
    <member name="M:System.Xml.XmlWriter.WriteComment(System.String)">
      <summary vsli:raw="When overridden in a derived class, writes out a comment &amp;lt;!--...--&amp;gt; containing the specified text.">En cas de substitution dans une classe dérivée, écrit un commentaire &lt;!--...--&gt; contenant le texte spécifié.</summary>
      <param name="text" vsli:raw="Text to place inside the comment.">Texte à placer dans le commentaire.</param>
      <exception cref="T:System.ArgumentException" vsli:raw="The text would result in a non-well-formed XML document.">Le texte est à l'origine d'un document XML incorrect.</exception>
      <exception cref="T:System.InvalidOperationException" vsli:raw="An &lt;see cref=&quot;T:System.Xml.XmlWriter&quot; /&gt; method was called before a previous asynchronous operation finished. In this case, &lt;see cref=&quot;T:System.InvalidOperationException&quot; /&gt; is thrown with the message &quot;An asynchronous operation is already in progress.&quot;">Une méthode <see cref="T:System.Xml.XmlWriter" /> a été appelée avant la fin d’une opération asynchrone précédente. Dans ce cas, l’exception <see cref="T:System.InvalidOperationException" /> est levée avec le message « Une opération asynchrone est déjà en cours ».</exception>
    </member>
    <member name="M:System.Xml.XmlWriter.WriteCommentAsync(System.String)">
      <summary vsli:raw="Asynchronously writes out a comment &amp;lt;!--...--&amp;gt; containing the specified text.">Écrit de façon asynchrone un commentaire &lt;!--...--&gt; contenant le texte spécifié.</summary>
      <param name="text" vsli:raw="Text to place inside the comment.">Texte à placer dans le commentaire.</param>
      <exception cref="T:System.InvalidOperationException" vsli:raw="An &lt;see cref=&quot;T:System.Xml.XmlWriter&quot; /&gt; method was called before a previous asynchronous operation finished. In this case, &lt;see cref=&quot;T:System.InvalidOperationException&quot; /&gt; is thrown with the message &quot;An asynchronous operation is already in progress.&quot;&#xA;&#xA;-or-&#xA;&#xA;An &lt;see cref=&quot;T:System.Xml.XmlWriter&quot; /&gt; asynchronous method was called without setting the &lt;see cref=&quot;P:System.Xml.XmlWriterSettings.Async&quot; /&gt; flag to &lt;see langword=&quot;true&quot; /&gt;. In this case, &lt;see cref=&quot;T:System.InvalidOperationException&quot; /&gt; is thrown with the message &quot;Set XmlWriterSettings.Async to true if you want to use Async Methods.&quot;">Une méthode <see cref="T:System.Xml.XmlWriter" /> a été appelée avant la fin d’une opération asynchrone précédente. Dans ce cas, l’exception <see cref="T:System.InvalidOperationException" /> est levée avec le message « Une opération asynchrone est déjà en cours ».

- ou -

Une méthode asynchrone <see cref="T:System.Xml.XmlWriter" /> a été appelée sans définir l’indicateur <see cref="P:System.Xml.XmlWriterSettings.Async" /> sur <see langword="true" />. Dans ce cas, <see cref="T:System.InvalidOperationException" /> est levée avec le message « Attribuez à XmlReaderSettings.Async la valeur True si vous voulez utiliser des méthodes asynchrones ».</exception>
      <returns vsli:raw="The task that represents the asynchronous &lt;see langword=&quot;WriteComment&quot; /&gt; operation.">Tâche qui représente l'opération <see langword="WriteComment" /> asynchrone.</returns>
    </member>
    <member name="M:System.Xml.XmlWriter.WriteDocType(System.String,System.String,System.String,System.String)">
      <summary vsli:raw="When overridden in a derived class, writes the DOCTYPE declaration with the specified name and optional attributes.">En cas de substitution dans une classe dérivée, écrit la déclaration DOCTYPE avec le nom et les attributs facultatifs spécifiés.</summary>
      <param name="name" vsli:raw="The name of the DOCTYPE. This must be non-empty.">Nom de DOCTYPE. Ne doit pas être vide.</param>
      <param name="pubid" vsli:raw="If non-null it also writes PUBLIC &quot;pubid&quot; &quot;sysid&quot; where &lt;paramref name=&quot;pubid&quot; /&gt; and &lt;paramref name=&quot;sysid&quot; /&gt; are replaced with the value of the given arguments.">Si la valeur est non null, elle écrit également PUBLIC "pubid" "sysid", <paramref name="pubid" /> et <paramref name="sysid" /> étant remplacés par la valeur des arguments spécifiés.</param>
      <param name="sysid" vsli:raw="If &lt;paramref name=&quot;pubid&quot; /&gt; is &lt;see langword=&quot;null&quot; /&gt; and &lt;paramref name=&quot;sysid&quot; /&gt; is non-null it writes SYSTEM &quot;sysid&quot; where &lt;paramref name=&quot;sysid&quot; /&gt; is replaced with the value of this argument.">Si <paramref name="pubid" /> est <see langword="null" /> et que <paramref name="sysid" /> est non null, elle écrit SYSTEM "sysid", <paramref name="sysid" /> étant remplacé par la valeur de cet argument.</param>
      <param name="subset" vsli:raw="If non-null it writes [subset] where subset is replaced with the value of this argument.">Si la valeur est non null, elle écrit [subset] où subset est remplacé par la valeur de cet argument.</param>
      <exception cref="T:System.InvalidOperationException" vsli:raw="This method was called outside the prolog (after the root element).&#xA;&#xA;-or-&#xA;&#xA;An &lt;see cref=&quot;T:System.Xml.XmlWriter&quot; /&gt; method was called before a previous asynchronous operation finished. In this case, &lt;see cref=&quot;T:System.InvalidOperationException&quot; /&gt; is thrown with the message &quot;An asynchronous operation is already in progress.&quot;">Cette méthode a été appelée en dehors du prologue (après l'élément racine).

- ou -

Une méthode <see cref="T:System.Xml.XmlWriter" /> a été appelée avant la fin d’une opération asynchrone précédente. Dans ce cas, l’exception <see cref="T:System.InvalidOperationException" /> est levée avec le message « Une opération asynchrone est déjà en cours ».</exception>
      <exception cref="T:System.ArgumentException" vsli:raw="The value for &lt;paramref name=&quot;name&quot; /&gt; would result in invalid XML.">La valeur de <paramref name="name" /> produit un contenu XML non valide.</exception>
    </member>
    <member name="M:System.Xml.XmlWriter.WriteDocTypeAsync(System.String,System.String,System.String,System.String)">
      <summary vsli:raw="Asynchronously writes the DOCTYPE declaration with the specified name and optional attributes.">Écrit de façon asynchrone la déclaration DOCTYPE avec le nom et les attributs facultatifs spécifiés.</summary>
      <param name="name" vsli:raw="The name of the DOCTYPE. This must be non-empty.">Nom de DOCTYPE. Ne doit pas être vide.</param>
      <param name="pubid" vsli:raw="If non-null it also writes PUBLIC &quot;pubid&quot; &quot;sysid&quot; where &lt;paramref name=&quot;pubid&quot; /&gt; and &lt;paramref name=&quot;sysid&quot; /&gt; are replaced with the value of the given arguments.">Si la valeur est non null, elle écrit également PUBLIC "pubid" "sysid", <paramref name="pubid" /> et <paramref name="sysid" /> étant remplacés par la valeur des arguments spécifiés.</param>
      <param name="sysid" vsli:raw="If &lt;paramref name=&quot;pubid&quot; /&gt; is &lt;see langword=&quot;null&quot; /&gt; and &lt;paramref name=&quot;sysid&quot; /&gt; is non-null it writes SYSTEM &quot;sysid&quot; where &lt;paramref name=&quot;sysid&quot; /&gt; is replaced with the value of this argument.">Si <paramref name="pubid" /> est <see langword="null" /> et que <paramref name="sysid" /> est non null, elle écrit SYSTEM "sysid", <paramref name="sysid" /> étant remplacé par la valeur de cet argument.</param>
      <param name="subset" vsli:raw="If non-null it writes [subset] where subset is replaced with the value of this argument.">Si la valeur est non null, elle écrit [subset] où subset est remplacé par la valeur de cet argument.</param>
      <exception cref="T:System.InvalidOperationException" vsli:raw="An &lt;see cref=&quot;T:System.Xml.XmlWriter&quot; /&gt; method was called before a previous asynchronous operation finished. In this case, &lt;see cref=&quot;T:System.InvalidOperationException&quot; /&gt; is thrown with the message &quot;An asynchronous operation is already in progress.&quot;&#xA;&#xA;-or-&#xA;&#xA;An &lt;see cref=&quot;T:System.Xml.XmlWriter&quot; /&gt; asynchronous method was called without setting the &lt;see cref=&quot;P:System.Xml.XmlWriterSettings.Async&quot; /&gt; flag to &lt;see langword=&quot;true&quot; /&gt;. In this case, &lt;see cref=&quot;T:System.InvalidOperationException&quot; /&gt; is thrown with the message &quot;Set XmlWriterSettings.Async to true if you want to use Async Methods.&quot;">Une méthode <see cref="T:System.Xml.XmlWriter" /> a été appelée avant la fin d’une opération asynchrone précédente. Dans ce cas, l’exception <see cref="T:System.InvalidOperationException" /> est levée avec le message « Une opération asynchrone est déjà en cours ».

- ou -

Une méthode asynchrone <see cref="T:System.Xml.XmlWriter" /> a été appelée sans définir l’indicateur <see cref="P:System.Xml.XmlWriterSettings.Async" /> sur <see langword="true" />. Dans ce cas, <see cref="T:System.InvalidOperationException" /> est levée avec le message « Attribuez à XmlReaderSettings.Async la valeur True si vous voulez utiliser des méthodes asynchrones ».</exception>
      <returns vsli:raw="The task that represents the asynchronous &lt;see langword=&quot;WriteDocType&quot; /&gt; operation.">Tâche qui représente l'opération <see langword="WriteDocType" /> asynchrone.</returns>
    </member>
    <member name="M:System.Xml.XmlWriter.WriteElementString(System.String,System.String)">
      <summary vsli:raw="Writes an element with the specified local name and value.">Écrit un élément avec la valeur et le nom locaux spécifiés.</summary>
      <param name="localName" vsli:raw="The local name of the element.">Le nom local de l'élément.</param>
      <param name="value" vsli:raw="The value of the element.">Valeur de l'élément.</param>
      <exception cref="T:System.ArgumentException" vsli:raw="The &lt;paramref name=&quot;localName&quot; /&gt; value is &lt;see langword=&quot;null&quot; /&gt; or an empty string.  &#xA;  &#xA; -or-  &#xA;  &#xA; The parameter values are not valid.">La valeur <paramref name="localName" /> est une chaîne vide ou est <see langword="null" />.  
  
- ou - 
Les valeurs du paramètre ne sont pas valides.</exception>
      <exception cref="T:System.Text.EncoderFallbackException" vsli:raw="There is a character in the buffer that is a valid XML character but is not valid for the output encoding. For example, if the output encoding is ASCII, you should only use characters from the range of 0 to 127 for element and attribute names. The invalid character might be in the argument of this method or in an argument of previous methods that were writing to the buffer. Such characters are escaped by character entity references when possible (for example, in text nodes or attribute values). However, the character entity reference is not allowed in element and attribute names, comments, processing instructions, or CDATA sections.">Un caractère dans la mémoire tampon est un caractère XML valide mais n'est pas valide pour l'encodage de sortie. Par exemple, si l'encodage de sortie est ASCII, vous devez utiliser uniquement des caractères de la plage de 0 à 127 pour les noms d'éléments et d'attributs. Le caractère non valide peut être dans l'argument de cette méthode ou dans un argument des méthodes précédentes qui écrivaient dans la mémoire tampon. Les caractères de ce type sont échappés par les références d'entité de caractère lorsque cela est possible (par exemple, dans les nœuds de texte ou les valeurs d'attribut). Toutefois, la référence d'entité de caractère n'est pas autorisée dans les noms d'éléments et d'attributs, les commentaires, les instructions de traitement ou les sections CDATA.</exception>
      <exception cref="T:System.InvalidOperationException" vsli:raw="An &lt;see cref=&quot;T:System.Xml.XmlWriter&quot; /&gt; method was called before a previous asynchronous operation finished. In this case, &lt;see cref=&quot;T:System.InvalidOperationException&quot; /&gt; is thrown with the message &quot;An asynchronous operation is already in progress.&quot;">Une méthode <see cref="T:System.Xml.XmlWriter" /> a été appelée avant la fin d’une opération asynchrone précédente. Dans ce cas, l’exception <see cref="T:System.InvalidOperationException" /> est levée avec le message « Une opération asynchrone est déjà en cours ».</exception>
    </member>
    <member name="M:System.Xml.XmlWriter.WriteElementString(System.String,System.String,System.String)">
      <summary vsli:raw="Writes an element with the specified local name, namespace URI, and value.">Écrit un élément avec le nom local, l'URI de l'espace de noms et la valeur spécifiés.</summary>
      <param name="localName" vsli:raw="The local name of the element.">Le nom local de l'élément.</param>
      <param name="ns" vsli:raw="The namespace URI to associate with the element.">URI de l'espace de noms à associer à l'élément.</param>
      <param name="value" vsli:raw="The value of the element.">Valeur de l'élément.</param>
      <exception cref="T:System.ArgumentException" vsli:raw="The &lt;paramref name=&quot;localName&quot; /&gt; value is &lt;see langword=&quot;null&quot; /&gt; or an empty string.  &#xA;  &#xA; -or-  &#xA;  &#xA; The parameter values are not valid.">La valeur <paramref name="localName" /> est une chaîne vide ou est <see langword="null" />.  
  
- ou - 
Les valeurs du paramètre ne sont pas valides.</exception>
      <exception cref="T:System.Text.EncoderFallbackException" vsli:raw="There is a character in the buffer that is a valid XML character but is not valid for the output encoding. For example, if the output encoding is ASCII, you should only use characters from the range of 0 to 127 for element and attribute names. The invalid character might be in the argument of this method or in an argument of previous methods that were writing to the buffer. Such characters are escaped by character entity references when possible (for example, in text nodes or attribute values). However, the character entity reference is not allowed in element and attribute names, comments, processing instructions, or CDATA sections.">Un caractère dans la mémoire tampon est un caractère XML valide mais n'est pas valide pour l'encodage de sortie. Par exemple, si l'encodage de sortie est ASCII, vous devez utiliser uniquement des caractères de la plage de 0 à 127 pour les noms d'éléments et d'attributs. Le caractère non valide peut être dans l'argument de cette méthode ou dans un argument des méthodes précédentes qui écrivaient dans la mémoire tampon. Les caractères de ce type sont échappés par les références d'entité de caractère lorsque cela est possible (par exemple, dans les nœuds de texte ou les valeurs d'attribut). Toutefois, la référence d'entité de caractère n'est pas autorisée dans les noms d'éléments et d'attributs, les commentaires, les instructions de traitement ou les sections CDATA.</exception>
      <exception cref="T:System.InvalidOperationException" vsli:raw="An &lt;see cref=&quot;T:System.Xml.XmlWriter&quot; /&gt; method was called before a previous asynchronous operation finished. In this case, &lt;see cref=&quot;T:System.InvalidOperationException&quot; /&gt; is thrown with the message &quot;An asynchronous operation is already in progress.&quot;">Une méthode <see cref="T:System.Xml.XmlWriter" /> a été appelée avant la fin d’une opération asynchrone précédente. Dans ce cas, l’exception <see cref="T:System.InvalidOperationException" /> est levée avec le message « Une opération asynchrone est déjà en cours ».</exception>
    </member>
    <member name="M:System.Xml.XmlWriter.WriteElementString(System.String,System.String,System.String,System.String)">
      <summary vsli:raw="Writes an element with the specified prefix, local name, namespace URI, and value.">Écrit un élément avec le préfixe spécifié, le nom local, l'URI de l'espace de noms et la valeur spécifiés.</summary>
      <param name="prefix" vsli:raw="The prefix of the element.">Le préfixe de l'élément.</param>
      <param name="localName" vsli:raw="The local name of the element.">Le nom local de l'élément.</param>
      <param name="ns" vsli:raw="The namespace URI of the element.">L'URI de l'espace de noms de l'élément.</param>
      <param name="value" vsli:raw="The value of the element.">Valeur de l'élément.</param>
      <exception cref="T:System.ArgumentException" vsli:raw="The &lt;paramref name=&quot;localName&quot; /&gt; value is &lt;see langword=&quot;null&quot; /&gt; or an empty string.  &#xA;  &#xA; -or-  &#xA;  &#xA; The parameter values are not valid.">La valeur <paramref name="localName" /> est une chaîne vide ou est <see langword="null" />.  
  
- ou - 
Les valeurs du paramètre ne sont pas valides.</exception>
      <exception cref="T:System.Text.EncoderFallbackException" vsli:raw="There is a character in the buffer that is a valid XML character but is not valid for the output encoding. For example, if the output encoding is ASCII, you should only use characters from the range of 0 to 127 for element and attribute names. The invalid character might be in the argument of this method or in an argument of previous methods that were writing to the buffer. Such characters are escaped by character entity references when possible (for example, in text nodes or attribute values). However, the character entity reference is not allowed in element and attribute names, comments, processing instructions, or CDATA sections.">Un caractère dans la mémoire tampon est un caractère XML valide mais n'est pas valide pour l'encodage de sortie. Par exemple, si l'encodage de sortie est ASCII, vous devez utiliser uniquement des caractères de la plage de 0 à 127 pour les noms d'éléments et d'attributs. Le caractère non valide peut être dans l'argument de cette méthode ou dans un argument des méthodes précédentes qui écrivaient dans la mémoire tampon. Les caractères de ce type sont échappés par les références d'entité de caractère lorsque cela est possible (par exemple, dans les nœuds de texte ou les valeurs d'attribut). Toutefois, la référence d'entité de caractère n'est pas autorisée dans les noms d'éléments et d'attributs, les commentaires, les instructions de traitement ou les sections CDATA.</exception>
      <exception cref="T:System.InvalidOperationException" vsli:raw="An &lt;see cref=&quot;T:System.Xml.XmlWriter&quot; /&gt; method was called before a previous asynchronous operation finished. In this case, &lt;see cref=&quot;T:System.InvalidOperationException&quot; /&gt; is thrown with the message &quot;An asynchronous operation is already in progress.&quot;">Une méthode <see cref="T:System.Xml.XmlWriter" /> a été appelée avant la fin d’une opération asynchrone précédente. Dans ce cas, l’exception <see cref="T:System.InvalidOperationException" /> est levée avec le message « Une opération asynchrone est déjà en cours ».</exception>
    </member>
    <member name="M:System.Xml.XmlWriter.WriteElementStringAsync(System.String,System.String,System.String,System.String)">
      <summary vsli:raw="Asynchronously writes an element with the specified prefix, local name, namespace URI, and value.">Écrit de façon asynchrone un élément avec le préfixe spécifié, le nom local, l'URI de l'espace de noms et la valeur spécifiés.</summary>
      <param name="prefix" vsli:raw="The prefix of the element.">Le préfixe de l'élément.</param>
      <param name="localName" vsli:raw="The local name of the element.">Le nom local de l'élément.</param>
      <param name="ns" vsli:raw="The namespace URI of the element.">L'URI de l'espace de noms de l'élément.</param>
      <param name="value" vsli:raw="The value of the element.">Valeur de l'élément.</param>
      <exception cref="T:System.InvalidOperationException" vsli:raw="An &lt;see cref=&quot;T:System.Xml.XmlWriter&quot; /&gt; method was called before a previous asynchronous operation finished. In this case, &lt;see cref=&quot;T:System.InvalidOperationException&quot; /&gt; is thrown with the message &quot;An asynchronous operation is already in progress.&quot;&#xA;&#xA;-or-&#xA;&#xA;An &lt;see cref=&quot;T:System.Xml.XmlWriter&quot; /&gt; asynchronous method was called without setting the &lt;see cref=&quot;P:System.Xml.XmlWriterSettings.Async&quot; /&gt; flag to &lt;see langword=&quot;true&quot; /&gt;. In this case, &lt;see cref=&quot;T:System.InvalidOperationException&quot; /&gt; is thrown with the message &quot;Set XmlWriterSettings.Async to true if you want to use Async Methods.&quot;">Une méthode <see cref="T:System.Xml.XmlWriter" /> a été appelée avant la fin d’une opération asynchrone précédente. Dans ce cas, l’exception <see cref="T:System.InvalidOperationException" /> est levée avec le message « Une opération asynchrone est déjà en cours ».

- ou -

Une méthode asynchrone <see cref="T:System.Xml.XmlWriter" /> a été appelée sans définir l’indicateur <see cref="P:System.Xml.XmlWriterSettings.Async" /> sur <see langword="true" />. Dans ce cas, <see cref="T:System.InvalidOperationException" /> est levée avec le message « Attribuez à XmlReaderSettings.Async la valeur True si vous voulez utiliser des méthodes asynchrones ».</exception>
      <returns vsli:raw="The task that represents the asynchronous &lt;see langword=&quot;WriteElementString&quot; /&gt; operation.">Tâche qui représente l'opération <see langword="WriteElementString" /> asynchrone.</returns>
    </member>
    <member name="M:System.Xml.XmlWriter.WriteEndAttribute">
      <summary vsli:raw="When overridden in a derived class, closes the previous &lt;see cref=&quot;M:System.Xml.XmlWriter.WriteStartAttribute(System.String,System.String)&quot; /&gt; call.">En cas de substitution dans une classe dérivée, ferme le précédent appel de <see cref="M:System.Xml.XmlWriter.WriteStartAttribute(System.String,System.String)" />.</summary>
      <exception cref="T:System.InvalidOperationException" vsli:raw="An &lt;see cref=&quot;T:System.Xml.XmlWriter&quot; /&gt; method was called before a previous asynchronous operation finished. In this case, &lt;see cref=&quot;T:System.InvalidOperationException&quot; /&gt; is thrown with the message &quot;An asynchronous operation is already in progress.&quot;">Une méthode <see cref="T:System.Xml.XmlWriter" /> a été appelée avant la fin d’une opération asynchrone précédente. Dans ce cas, l’exception <see cref="T:System.InvalidOperationException" /> est levée avec le message « Une opération asynchrone est déjà en cours ».</exception>
    </member>
    <member name="M:System.Xml.XmlWriter.WriteEndAttributeAsync">
      <summary vsli:raw="Asynchronously closes the previous &lt;see cref=&quot;M:System.Xml.XmlWriter.WriteStartAttribute(System.String,System.String)&quot; /&gt; call.">Ferme de façon asynchrone l'appel <see cref="M:System.Xml.XmlWriter.WriteStartAttribute(System.String,System.String)" /> précédent.</summary>
      <exception cref="T:System.InvalidOperationException" vsli:raw="An &lt;see cref=&quot;T:System.Xml.XmlWriter&quot; /&gt; method was called before a previous asynchronous operation finished. In this case, &lt;see cref=&quot;T:System.InvalidOperationException&quot; /&gt; is thrown with the message &quot;An asynchronous operation is already in progress.&quot;&#xA;&#xA;-or-&#xA;&#xA;An &lt;see cref=&quot;T:System.Xml.XmlWriter&quot; /&gt; asynchronous method was called without setting the &lt;see cref=&quot;P:System.Xml.XmlWriterSettings.Async&quot; /&gt; flag to &lt;see langword=&quot;true&quot; /&gt;. In this case, &lt;see cref=&quot;T:System.InvalidOperationException&quot; /&gt; is thrown with the message &quot;Set XmlWriterSettings.Async to true if you want to use Async Methods.&quot;">Une méthode <see cref="T:System.Xml.XmlWriter" /> a été appelée avant la fin d’une opération asynchrone précédente. Dans ce cas, l’exception <see cref="T:System.InvalidOperationException" /> est levée avec le message « Une opération asynchrone est déjà en cours ».

- ou -

Une méthode asynchrone <see cref="T:System.Xml.XmlWriter" /> a été appelée sans définir l’indicateur <see cref="P:System.Xml.XmlWriterSettings.Async" /> sur <see langword="true" />. Dans ce cas, <see cref="T:System.InvalidOperationException" /> est levée avec le message « Attribuez à XmlReaderSettings.Async la valeur True si vous voulez utiliser des méthodes asynchrones ».</exception>
      <returns vsli:raw="The task that represents the asynchronous &lt;see langword=&quot;WriteEndAttribute&quot; /&gt; operation.">Tâche qui représente l'opération <see langword="WriteEndAttribute" /> asynchrone.</returns>
    </member>
    <member name="M:System.Xml.XmlWriter.WriteEndDocument">
      <summary vsli:raw="When overridden in a derived class, closes any open elements or attributes and puts the writer back in the Start state.">En cas de substitution dans une classe dérivée, ferme les éléments ou attributs ouverts, et replace le writer à l'état Start.</summary>
      <exception cref="T:System.ArgumentException" vsli:raw="The XML document is invalid.">Le document XML n'est pas valide.</exception>
      <exception cref="T:System.InvalidOperationException" vsli:raw="An &lt;see cref=&quot;T:System.Xml.XmlWriter&quot; /&gt; method was called before a previous asynchronous operation finished. In this case, &lt;see cref=&quot;T:System.InvalidOperationException&quot; /&gt; is thrown with the message &quot;An asynchronous operation is already in progress.&quot;">Une méthode <see cref="T:System.Xml.XmlWriter" /> a été appelée avant la fin d’une opération asynchrone précédente. Dans ce cas, l’exception <see cref="T:System.InvalidOperationException" /> est levée avec le message « Une opération asynchrone est déjà en cours ».</exception>
    </member>
    <member name="M:System.Xml.XmlWriter.WriteEndDocumentAsync">
      <summary vsli:raw="Asynchronously closes any open elements or attributes and puts the writer back in the Start state.">Ferme de façon asynchrone les éléments ou attributs ouverts, et replace le writer à l'état Start.</summary>
      <exception cref="T:System.InvalidOperationException" vsli:raw="An &lt;see cref=&quot;T:System.Xml.XmlWriter&quot; /&gt; method was called before a previous asynchronous operation finished. In this case, &lt;see cref=&quot;T:System.InvalidOperationException&quot; /&gt; is thrown with the message &quot;An asynchronous operation is already in progress.&quot;&#xA;&#xA;-or-&#xA;&#xA;An &lt;see cref=&quot;T:System.Xml.XmlWriter&quot; /&gt; asynchronous method was called without setting the &lt;see cref=&quot;P:System.Xml.XmlWriterSettings.Async&quot; /&gt; flag to &lt;see langword=&quot;true&quot; /&gt;. In this case, &lt;see cref=&quot;T:System.InvalidOperationException&quot; /&gt; is thrown with the message &quot;Set XmlWriterSettings.Async to true if you want to use Async Methods.&quot;">Une méthode <see cref="T:System.Xml.XmlWriter" /> a été appelée avant la fin d’une opération asynchrone précédente. Dans ce cas, l’exception <see cref="T:System.InvalidOperationException" /> est levée avec le message « Une opération asynchrone est déjà en cours ».

- ou -

Une méthode asynchrone <see cref="T:System.Xml.XmlWriter" /> a été appelée sans définir l’indicateur <see cref="P:System.Xml.XmlWriterSettings.Async" /> sur <see langword="true" />. Dans ce cas, <see cref="T:System.InvalidOperationException" /> est levée avec le message « Attribuez à XmlReaderSettings.Async la valeur True si vous voulez utiliser des méthodes asynchrones ».</exception>
      <returns vsli:raw="The task that represents the asynchronous &lt;see langword=&quot;WriteEndDocument&quot; /&gt; operation.">Tâche qui représente l'opération <see langword="WriteEndDocument" /> asynchrone.</returns>
    </member>
    <member name="M:System.Xml.XmlWriter.WriteEndElement">
      <summary vsli:raw="When overridden in a derived class, closes one element and pops the corresponding namespace scope.">En cas de substitution dans une classe dérivée, ferme un élément et dépile la portée espace de noms correspondante.</summary>
      <exception cref="T:System.InvalidOperationException" vsli:raw="This results in an invalid XML document.&#xA;&#xA;-or-&#xA;&#xA;An &lt;see cref=&quot;T:System.Xml.XmlWriter&quot; /&gt; method was called before a previous asynchronous operation finished. In this case, &lt;see cref=&quot;T:System.InvalidOperationException&quot; /&gt; is thrown with the message &quot;An asynchronous operation is already in progress.&quot;">Il en résulte un document XML non valide.

- ou -

Une méthode <see cref="T:System.Xml.XmlWriter" /> a été appelée avant la fin d’une opération asynchrone précédente. Dans ce cas, l’exception <see cref="T:System.InvalidOperationException" /> est levée avec le message « Une opération asynchrone est déjà en cours ».</exception>
    </member>
    <member name="M:System.Xml.XmlWriter.WriteEndElementAsync">
      <summary vsli:raw="Asynchronously closes one element and pops the corresponding namespace scope.">Ferme de façon asynchrone un élément et exécute un pop sur la portée espace de noms correspondante.</summary>
      <exception cref="T:System.InvalidOperationException" vsli:raw="An &lt;see cref=&quot;T:System.Xml.XmlWriter&quot; /&gt; method was called before a previous asynchronous operation finished. In this case, &lt;see cref=&quot;T:System.InvalidOperationException&quot; /&gt; is thrown with the message &quot;An asynchronous operation is already in progress.&quot;&#xA;&#xA;-or-&#xA;&#xA;An &lt;see cref=&quot;T:System.Xml.XmlWriter&quot; /&gt; asynchronous method was called without setting the &lt;see cref=&quot;P:System.Xml.XmlWriterSettings.Async&quot; /&gt; flag to &lt;see langword=&quot;true&quot; /&gt;. In this case, &lt;see cref=&quot;T:System.InvalidOperationException&quot; /&gt; is thrown with the message &quot;Set XmlWriterSettings.Async to true if you want to use Async Methods.&quot;">Une méthode <see cref="T:System.Xml.XmlWriter" /> a été appelée avant la fin d’une opération asynchrone précédente. Dans ce cas, l’exception <see cref="T:System.InvalidOperationException" /> est levée avec le message « Une opération asynchrone est déjà en cours ».

- ou -

Une méthode asynchrone <see cref="T:System.Xml.XmlWriter" /> a été appelée sans définir l’indicateur <see cref="P:System.Xml.XmlWriterSettings.Async" /> sur <see langword="true" />. Dans ce cas, <see cref="T:System.InvalidOperationException" /> est levée avec le message « Attribuez à XmlReaderSettings.Async la valeur True si vous voulez utiliser des méthodes asynchrones ».</exception>
      <returns vsli:raw="The task that represents the asynchronous &lt;see langword=&quot;WriteEndElement&quot; /&gt; operation.">Tâche qui représente l'opération <see langword="WriteEndElement" /> asynchrone.</returns>
    </member>
    <member name="M:System.Xml.XmlWriter.WriteEntityRef(System.String)">
      <summary vsli:raw="When overridden in a derived class, writes out an entity reference as &lt;see langword=&quot;&amp;amp;name;&quot; /&gt;.">En cas de substitution dans une classe dérivée, écrit une référence d'entité comme suit : <see langword="&amp;name;" />.</summary>
      <param name="name" vsli:raw="The name of the entity reference.">Nom de la référence d'entité.</param>
      <exception cref="T:System.ArgumentException" vsli:raw="&lt;paramref name=&quot;name&quot; /&gt; is either &lt;see langword=&quot;null&quot; /&gt; or &lt;see langword=&quot;String.Empty&quot; /&gt;.">
        <paramref name="name" /> a la valeur <see langword="null" /> ou <see langword="String.Empty" />.</exception>
      <exception cref="T:System.InvalidOperationException" vsli:raw="An &lt;see cref=&quot;T:System.Xml.XmlWriter&quot; /&gt; method was called before a previous asynchronous operation finished. In this case, &lt;see cref=&quot;T:System.InvalidOperationException&quot; /&gt; is thrown with the message &quot;An asynchronous operation is already in progress.&quot;">Une méthode <see cref="T:System.Xml.XmlWriter" /> a été appelée avant la fin d’une opération asynchrone précédente. Dans ce cas, l’exception <see cref="T:System.InvalidOperationException" /> est levée avec le message « Une opération asynchrone est déjà en cours ».</exception>
    </member>
    <member name="M:System.Xml.XmlWriter.WriteEntityRefAsync(System.String)">
      <summary vsli:raw="Asynchronously writes out an entity reference as &lt;see langword=&quot;&amp;amp;name;&quot; /&gt;.">Écrit de façon asynchrone une référence d'entité comme suit : <see langword="&amp;name;" />.</summary>
      <param name="name" vsli:raw="The name of the entity reference.">Nom de la référence d'entité.</param>
      <exception cref="T:System.InvalidOperationException" vsli:raw="An &lt;see cref=&quot;T:System.Xml.XmlWriter&quot; /&gt; method was called before a previous asynchronous operation finished. In this case, &lt;see cref=&quot;T:System.InvalidOperationException&quot; /&gt; is thrown with the message &quot;An asynchronous operation is already in progress.&quot;&#xA;&#xA;-or-&#xA;&#xA;An &lt;see cref=&quot;T:System.Xml.XmlWriter&quot; /&gt; asynchronous method was called without setting the &lt;see cref=&quot;P:System.Xml.XmlWriterSettings.Async&quot; /&gt; flag to &lt;see langword=&quot;true&quot; /&gt;. In this case, &lt;see cref=&quot;T:System.InvalidOperationException&quot; /&gt; is thrown with the message &quot;Set XmlWriterSettings.Async to true if you want to use Async Methods.&quot;">Une méthode <see cref="T:System.Xml.XmlWriter" /> a été appelée avant la fin d’une opération asynchrone précédente. Dans ce cas, l’exception <see cref="T:System.InvalidOperationException" /> est levée avec le message « Une opération asynchrone est déjà en cours ».

- ou -

Une méthode asynchrone <see cref="T:System.Xml.XmlWriter" /> a été appelée sans définir l’indicateur <see cref="P:System.Xml.XmlWriterSettings.Async" /> sur <see langword="true" />. Dans ce cas, <see cref="T:System.InvalidOperationException" /> est levée avec le message « Attribuez à XmlReaderSettings.Async la valeur True si vous voulez utiliser des méthodes asynchrones ».</exception>
      <returns vsli:raw="The task that represents the asynchronous &lt;see langword=&quot;WriteEntityRef&quot; /&gt; operation.">Tâche qui représente l'opération <see langword="WriteEntityRef" /> asynchrone.</returns>
    </member>
    <member name="M:System.Xml.XmlWriter.WriteFullEndElement">
      <summary vsli:raw="When overridden in a derived class, closes one element and pops the corresponding namespace scope.">En cas de substitution dans une classe dérivée, ferme un élément et dépile la portée espace de noms correspondante.</summary>
      <exception cref="T:System.InvalidOperationException" vsli:raw="An &lt;see cref=&quot;T:System.Xml.XmlWriter&quot; /&gt; method was called before a previous asynchronous operation finished. In this case, &lt;see cref=&quot;T:System.InvalidOperationException&quot; /&gt; is thrown with the message &quot;An asynchronous operation is already in progress.&quot;">Une méthode <see cref="T:System.Xml.XmlWriter" /> a été appelée avant la fin d’une opération asynchrone précédente. Dans ce cas, l’exception <see cref="T:System.InvalidOperationException" /> est levée avec le message « Une opération asynchrone est déjà en cours ».</exception>
    </member>
    <member name="M:System.Xml.XmlWriter.WriteFullEndElementAsync">
      <summary vsli:raw="Asynchronously closes one element and pops the corresponding namespace scope.">Ferme de façon asynchrone un élément et exécute un pop sur la portée espace de noms correspondante.</summary>
      <exception cref="T:System.InvalidOperationException" vsli:raw="An &lt;see cref=&quot;T:System.Xml.XmlWriter&quot; /&gt; method was called before a previous asynchronous operation finished. In this case, &lt;see cref=&quot;T:System.InvalidOperationException&quot; /&gt; is thrown with the message &quot;An asynchronous operation is already in progress.&quot;&#xA;&#xA;-or-&#xA;&#xA;An &lt;see cref=&quot;T:System.Xml.XmlWriter&quot; /&gt; asynchronous method was called without setting the &lt;see cref=&quot;P:System.Xml.XmlWriterSettings.Async&quot; /&gt; flag to &lt;see langword=&quot;true&quot; /&gt;. In this case, &lt;see cref=&quot;T:System.InvalidOperationException&quot; /&gt; is thrown with the message &quot;Set XmlWriterSettings.Async to true if you want to use Async Methods.&quot;">Une méthode <see cref="T:System.Xml.XmlWriter" /> a été appelée avant la fin d’une opération asynchrone précédente. Dans ce cas, l’exception <see cref="T:System.InvalidOperationException" /> est levée avec le message « Une opération asynchrone est déjà en cours ».

- ou -

Une méthode asynchrone <see cref="T:System.Xml.XmlWriter" /> a été appelée sans définir l’indicateur <see cref="P:System.Xml.XmlWriterSettings.Async" /> sur <see langword="true" />. Dans ce cas, <see cref="T:System.InvalidOperationException" /> est levée avec le message « Attribuez à XmlReaderSettings.Async la valeur True si vous voulez utiliser des méthodes asynchrones ».</exception>
      <returns vsli:raw="The task that represents the asynchronous &lt;see langword=&quot;WriteFullEndElement&quot; /&gt; operation.">Tâche qui représente l'opération <see langword="WriteFullEndElement" /> asynchrone.</returns>
    </member>
    <member name="M:System.Xml.XmlWriter.WriteName(System.String)">
      <summary vsli:raw="When overridden in a derived class, writes out the specified name, ensuring it is a valid name according to the W3C XML 1.0 recommendation (https://www.w3.org/TR/1998/REC-xml-19980210#NT-Name).">En cas de remplacement dans une classe dérivée, écrit le nom spécifié, en vérifiant qu’il s’agit d’un nom valide conformément à la recommandation W3C pour le XML 1.0 (https://www.w3.org/TR/1998/REC-xml-19980210#NT-Name)).</summary>
      <param name="name" vsli:raw="The name to write.">Nom à écrire.</param>
      <exception cref="T:System.ArgumentException" vsli:raw="&lt;paramref name=&quot;name&quot; /&gt; is not a valid XML name; or &lt;paramref name=&quot;name&quot; /&gt; is either &lt;see langword=&quot;null&quot; /&gt; or &lt;see langword=&quot;String.Empty&quot; /&gt;.">
        <paramref name="name" /> n'est pas un nom XML valide ; ou <paramref name="name" /> est soit <see langword="null" />, soit <see langword="String.Empty" />.</exception>
      <exception cref="T:System.InvalidOperationException" vsli:raw="An &lt;see cref=&quot;T:System.Xml.XmlWriter&quot; /&gt; method was called before a previous asynchronous operation finished. In this case, &lt;see cref=&quot;T:System.InvalidOperationException&quot; /&gt; is thrown with the message &quot;An asynchronous operation is already in progress.&quot;">Une méthode <see cref="T:System.Xml.XmlWriter" /> a été appelée avant la fin d’une opération asynchrone précédente. Dans ce cas, l’exception <see cref="T:System.InvalidOperationException" /> est levée avec le message « Une opération asynchrone est déjà en cours ».</exception>
    </member>
    <member name="M:System.Xml.XmlWriter.WriteNameAsync(System.String)">
      <summary vsli:raw="Asynchronously writes out the specified name, ensuring it is a valid name according to the W3C XML 1.0 recommendation (https://www.w3.org/TR/1998/REC-xml-19980210#NT-Name).">Écrit le nom spécifié de façon asynchrone, en vérifiant qu’il s’agit d’un nom valide conformément à la recommandation W3C pour le XML 1.0 (https://www.w3.org/TR/1998/REC-xml-19980210#NT-Name)).</summary>
      <param name="name" vsli:raw="The name to write.">Nom à écrire.</param>
      <exception cref="T:System.InvalidOperationException" vsli:raw="An &lt;see cref=&quot;T:System.Xml.XmlWriter&quot; /&gt; method was called before a previous asynchronous operation finished. In this case, &lt;see cref=&quot;T:System.InvalidOperationException&quot; /&gt; is thrown with the message &quot;An asynchronous operation is already in progress.&quot;&#xA;&#xA;-or-&#xA;&#xA;An &lt;see cref=&quot;T:System.Xml.XmlWriter&quot; /&gt; asynchronous method was called without setting the &lt;see cref=&quot;P:System.Xml.XmlWriterSettings.Async&quot; /&gt; flag to &lt;see langword=&quot;true&quot; /&gt;. In this case, &lt;see cref=&quot;T:System.InvalidOperationException&quot; /&gt; is thrown with the message &quot;Set XmlWriterSettings.Async to true if you want to use Async Methods.&quot;">Une méthode <see cref="T:System.Xml.XmlWriter" /> a été appelée avant la fin d’une opération asynchrone précédente. Dans ce cas, l’exception <see cref="T:System.InvalidOperationException" /> est levée avec le message « Une opération asynchrone est déjà en cours ».

- ou -

Une méthode asynchrone <see cref="T:System.Xml.XmlWriter" /> a été appelée sans définir l’indicateur <see cref="P:System.Xml.XmlWriterSettings.Async" /> sur <see langword="true" />. Dans ce cas, <see cref="T:System.InvalidOperationException" /> est levée avec le message « Attribuez à XmlReaderSettings.Async la valeur True si vous voulez utiliser des méthodes asynchrones ».</exception>
      <returns vsli:raw="The task that represents the asynchronous &lt;see langword=&quot;WriteName&quot; /&gt; operation.">Tâche qui représente l'opération <see langword="WriteName" /> asynchrone.</returns>
    </member>
    <member name="M:System.Xml.XmlWriter.WriteNmToken(System.String)">
      <summary vsli:raw="When overridden in a derived class, writes out the specified name, ensuring it is a valid NmToken according to the W3C XML 1.0 recommendation (https://www.w3.org/TR/1998/REC-xml-19980210#NT-Name).">En cas de remplacement dans une classe dérivée, écrit le nom spécifié, en vérifiant qu’il s’agit d’un NmToken valide conformément à la recommandation W3C pour le XML 1.0 (https://www.w3.org/TR/1998/REC-xml-19980210#NT-Name)).</summary>
      <param name="name" vsli:raw="The name to write.">Nom à écrire.</param>
      <exception cref="T:System.ArgumentException" vsli:raw="&lt;paramref name=&quot;name&quot; /&gt; is not a valid NmToken; or &lt;paramref name=&quot;name&quot; /&gt; is either &lt;see langword=&quot;null&quot; /&gt; or &lt;see langword=&quot;String.Empty&quot; /&gt;.">
        <paramref name="name" /> n'est pas un NmToken valide ; ou <paramref name="name" /> est soit <see langword="null" />, soit <see langword="String.Empty" />.</exception>
      <exception cref="T:System.InvalidOperationException" vsli:raw="An &lt;see cref=&quot;T:System.Xml.XmlWriter&quot; /&gt; method was called before a previous asynchronous operation finished. In this case, &lt;see cref=&quot;T:System.InvalidOperationException&quot; /&gt; is thrown with the message &quot;An asynchronous operation is already in progress.&quot;">Une méthode <see cref="T:System.Xml.XmlWriter" /> a été appelée avant la fin d’une opération asynchrone précédente. Dans ce cas, l’exception <see cref="T:System.InvalidOperationException" /> est levée avec le message « Une opération asynchrone est déjà en cours ».</exception>
    </member>
    <member name="M:System.Xml.XmlWriter.WriteNmTokenAsync(System.String)">
      <summary vsli:raw="Asynchronously writes out the specified name, ensuring it is a valid NmToken according to the W3C XML 1.0 recommendation (https://www.w3.org/TR/1998/REC-xml-19980210#NT-Name).">Écrit le nom spécifié de façon asynchrone, en vérifiant qu’il s’agit d’un NmToken valide conformément à la recommandation W3C pour le XML 1.0 (https://www.w3.org/TR/1998/REC-xml-19980210#NT-Name)).</summary>
      <param name="name" vsli:raw="The name to write.">Nom à écrire.</param>
      <exception cref="T:System.InvalidOperationException" vsli:raw="An &lt;see cref=&quot;T:System.Xml.XmlWriter&quot; /&gt; method was called before a previous asynchronous operation finished. In this case, &lt;see cref=&quot;T:System.InvalidOperationException&quot; /&gt; is thrown with the message &quot;An asynchronous operation is already in progress.&quot;&#xA;&#xA;-or-&#xA;&#xA;An &lt;see cref=&quot;T:System.Xml.XmlWriter&quot; /&gt; asynchronous method was called without setting the &lt;see cref=&quot;P:System.Xml.XmlWriterSettings.Async&quot; /&gt; flag to &lt;see langword=&quot;true&quot; /&gt;. In this case, &lt;see cref=&quot;T:System.InvalidOperationException&quot; /&gt; is thrown with the message &quot;Set XmlWriterSettings.Async to true if you want to use Async Methods.&quot;">Une méthode <see cref="T:System.Xml.XmlWriter" /> a été appelée avant la fin d’une opération asynchrone précédente. Dans ce cas, l’exception <see cref="T:System.InvalidOperationException" /> est levée avec le message « Une opération asynchrone est déjà en cours ».

- ou -

Une méthode asynchrone <see cref="T:System.Xml.XmlWriter" /> a été appelée sans définir l’indicateur <see cref="P:System.Xml.XmlWriterSettings.Async" /> sur <see langword="true" />. Dans ce cas, <see cref="T:System.InvalidOperationException" /> est levée avec le message « Attribuez à XmlReaderSettings.Async la valeur True si vous voulez utiliser des méthodes asynchrones ».</exception>
      <returns vsli:raw="The task that represents the asynchronous &lt;see langword=&quot;WriteNmToken&quot; /&gt; operation.">Tâche qui représente l'opération <see langword="WriteNmToken" /> asynchrone.</returns>
    </member>
    <member name="M:System.Xml.XmlWriter.WriteNode(System.Xml.XmlReader,System.Boolean)">
      <summary vsli:raw="When overridden in a derived class, copies everything from the reader to the writer and moves the reader to the start of the next sibling.">En cas de substitution dans une classe dérivée, copie tout le contenu du lecteur vers le writer, puis déplace le lecteur vers le début du frère suivant.</summary>
      <param name="reader" vsli:raw="The &lt;see cref=&quot;T:System.Xml.XmlReader&quot; /&gt; to read from.">
        <see cref="T:System.Xml.XmlReader" /> à lire.</param>
      <param name="defattr" vsli:raw="&lt;see langword=&quot;true&quot; /&gt; to copy the default attributes from the &lt;see langword=&quot;XmlReader&quot; /&gt;; otherwise, &lt;see langword=&quot;false&quot; /&gt;.">
        <see langword="true" /> pour copier les attributs par défaut à partir de <see langword="XmlReader" /> ; sinon, <see langword="false" />.</param>
      <exception cref="T:System.ArgumentNullException" vsli:raw="&lt;paramref name=&quot;reader&quot; /&gt; is &lt;see langword=&quot;null&quot; /&gt;.">
        <paramref name="reader" /> a la valeur <see langword="null" />.</exception>
      <exception cref="T:System.ArgumentException" vsli:raw="&lt;paramref name=&quot;reader&quot; /&gt; contains invalid characters.">
        <paramref name="reader" /> contient des caractères non valides.</exception>
      <exception cref="T:System.InvalidOperationException" vsli:raw="An &lt;see cref=&quot;T:System.Xml.XmlWriter&quot; /&gt; method was called before a previous asynchronous operation finished. In this case, &lt;see cref=&quot;T:System.InvalidOperationException&quot; /&gt; is thrown with the message &quot;An asynchronous operation is already in progress.&quot;">Une méthode <see cref="T:System.Xml.XmlWriter" /> a été appelée avant la fin d’une opération asynchrone précédente. Dans ce cas, l’exception <see cref="T:System.InvalidOperationException" /> est levée avec le message « Une opération asynchrone est déjà en cours ».</exception>
    </member>
    <member name="M:System.Xml.XmlWriter.WriteNode(System.Xml.XPath.XPathNavigator,System.Boolean)">
      <summary vsli:raw="Copies everything from the &lt;see cref=&quot;T:System.Xml.XPath.XPathNavigator&quot; /&gt; object to the writer. The position of the &lt;see cref=&quot;T:System.Xml.XPath.XPathNavigator&quot; /&gt; remains unchanged.">Copie tout de l'objet <see cref="T:System.Xml.XPath.XPathNavigator" /> vers le writer. La position du <see cref="T:System.Xml.XPath.XPathNavigator" /> reste inchangée.</summary>
      <param name="navigator" vsli:raw="The &lt;see cref=&quot;T:System.Xml.XPath.XPathNavigator&quot; /&gt; to copy from.">Le <see cref="T:System.Xml.XPath.XPathNavigator" /> à partir duquel effectuer la copie.</param>
      <param name="defattr" vsli:raw="&lt;see langword=&quot;true&quot; /&gt; to copy the default attributes; otherwise, &lt;see langword=&quot;false&quot; /&gt;.">
        <see langword="true" /> pour copier les attributs par défaut ; sinon, <see langword="false" />.</param>
      <exception cref="T:System.ArgumentNullException" vsli:raw="&lt;paramref name=&quot;navigator&quot; /&gt; is &lt;see langword=&quot;null&quot; /&gt;.">
        <paramref name="navigator" /> a la valeur <see langword="null" />.</exception>
      <exception cref="T:System.InvalidOperationException" vsli:raw="An &lt;see cref=&quot;T:System.Xml.XmlWriter&quot; /&gt; method was called before a previous asynchronous operation finished. In this case, &lt;see cref=&quot;T:System.InvalidOperationException&quot; /&gt; is thrown with the message &quot;An asynchronous operation is already in progress.&quot;">Une méthode <see cref="T:System.Xml.XmlWriter" /> a été appelée avant la fin d’une opération asynchrone précédente. Dans ce cas, l’exception <see cref="T:System.InvalidOperationException" /> est levée avec le message « Une opération asynchrone est déjà en cours ».</exception>
    </member>
    <member name="M:System.Xml.XmlWriter.WriteNodeAsync(System.Xml.XmlReader,System.Boolean)">
      <summary vsli:raw="Asynchronously copies everything from the reader to the writer and moves the reader to the start of the next sibling.">Copie de façon asynchrone tout le contenu du lecteur vers le writer, puis déplace le lecteur vers le début du frère suivant.</summary>
      <param name="reader" vsli:raw="The &lt;see cref=&quot;T:System.Xml.XmlReader&quot; /&gt; to read from.">
        <see cref="T:System.Xml.XmlReader" /> à lire.</param>
      <param name="defattr" vsli:raw="&lt;see langword=&quot;true&quot; /&gt; to copy the default attributes from the &lt;see langword=&quot;XmlReader&quot; /&gt;; otherwise, &lt;see langword=&quot;false&quot; /&gt;.">
        <see langword="true" /> pour copier les attributs par défaut à partir de <see langword="XmlReader" /> ; sinon, <see langword="false" />.</param>
      <exception cref="T:System.InvalidOperationException" vsli:raw="An &lt;see cref=&quot;T:System.Xml.XmlWriter&quot; /&gt; method was called before a previous asynchronous operation finished. In this case, &lt;see cref=&quot;T:System.InvalidOperationException&quot; /&gt; is thrown with the message &quot;An asynchronous operation is already in progress.&quot;&#xA;&#xA;-or-&#xA;&#xA;An &lt;see cref=&quot;T:System.Xml.XmlWriter&quot; /&gt; asynchronous method was called without setting the &lt;see cref=&quot;P:System.Xml.XmlWriterSettings.Async&quot; /&gt; flag to &lt;see langword=&quot;true&quot; /&gt;. In this case, &lt;see cref=&quot;T:System.InvalidOperationException&quot; /&gt; is thrown with the message &quot;Set XmlWriterSettings.Async to true if you want to use Async Methods.&quot;">Une méthode <see cref="T:System.Xml.XmlWriter" /> a été appelée avant la fin d’une opération asynchrone précédente. Dans ce cas, l’exception <see cref="T:System.InvalidOperationException" /> est levée avec le message « Une opération asynchrone est déjà en cours ».

- ou -

Une méthode asynchrone <see cref="T:System.Xml.XmlWriter" /> a été appelée sans définir l’indicateur <see cref="P:System.Xml.XmlWriterSettings.Async" /> sur <see langword="true" />. Dans ce cas, <see cref="T:System.InvalidOperationException" /> est levée avec le message « Attribuez à XmlReaderSettings.Async la valeur True si vous voulez utiliser des méthodes asynchrones ».</exception>
      <returns vsli:raw="The task that represents the asynchronous &lt;see langword=&quot;WriteNode&quot; /&gt; operation.">Tâche qui représente l'opération <see langword="WriteNode" /> asynchrone.</returns>
    </member>
    <member name="M:System.Xml.XmlWriter.WriteNodeAsync(System.Xml.XPath.XPathNavigator,System.Boolean)">
      <summary vsli:raw="Asynchronously copies everything from the &lt;see cref=&quot;T:System.Xml.XPath.XPathNavigator&quot; /&gt; object to the writer. The position of the &lt;see cref=&quot;T:System.Xml.XPath.XPathNavigator&quot; /&gt; remains unchanged.">Copie de façon asynchrone tout le contenu de l'objet <see cref="T:System.Xml.XPath.XPathNavigator" /> vers le writer. La position du <see cref="T:System.Xml.XPath.XPathNavigator" /> reste inchangée.</summary>
      <param name="navigator" vsli:raw="The &lt;see cref=&quot;T:System.Xml.XPath.XPathNavigator&quot; /&gt; to copy from.">Le <see cref="T:System.Xml.XPath.XPathNavigator" /> à partir duquel effectuer la copie.</param>
      <param name="defattr" vsli:raw="&lt;see langword=&quot;true&quot; /&gt; to copy the default attributes; otherwise, &lt;see langword=&quot;false&quot; /&gt;.">
        <see langword="true" /> pour copier les attributs par défaut ; sinon, <see langword="false" />.</param>
      <exception cref="T:System.InvalidOperationException" vsli:raw="An &lt;see cref=&quot;T:System.Xml.XmlWriter&quot; /&gt; method was called before a previous asynchronous operation finished. In this case, &lt;see cref=&quot;T:System.InvalidOperationException&quot; /&gt; is thrown with the message &quot;An asynchronous operation is already in progress.&quot;&#xA;&#xA;-or-&#xA;&#xA;An &lt;see cref=&quot;T:System.Xml.XmlWriter&quot; /&gt; asynchronous method was called without setting the &lt;see cref=&quot;P:System.Xml.XmlWriterSettings.Async&quot; /&gt; flag to &lt;see langword=&quot;true&quot; /&gt;. In this case, &lt;see cref=&quot;T:System.InvalidOperationException&quot; /&gt; is thrown with the message &quot;Set XmlWriterSettings.Async to true if you want to use Async Methods.&quot;">Une méthode <see cref="T:System.Xml.XmlWriter" /> a été appelée avant la fin d’une opération asynchrone précédente. Dans ce cas, l’exception <see cref="T:System.InvalidOperationException" /> est levée avec le message « Une opération asynchrone est déjà en cours ».

- ou -

Une méthode asynchrone <see cref="T:System.Xml.XmlWriter" /> a été appelée sans définir l’indicateur <see cref="P:System.Xml.XmlWriterSettings.Async" /> sur <see langword="true" />. Dans ce cas, <see cref="T:System.InvalidOperationException" /> est levée avec le message « Attribuez à XmlReaderSettings.Async la valeur True si vous voulez utiliser des méthodes asynchrones ».</exception>
      <returns vsli:raw="The task that represents the asynchronous &lt;see langword=&quot;WriteNode&quot; /&gt; operation.">Tâche qui représente l'opération <see langword="WriteNode" /> asynchrone.</returns>
    </member>
    <member name="M:System.Xml.XmlWriter.WriteProcessingInstruction(System.String,System.String)">
      <summary vsli:raw="When overridden in a derived class, writes out a processing instruction with a space between the name and text as follows: &amp;lt;?name text?&amp;gt;.">En cas de substitution dans une classe dérivée, écrit une instruction de traitement avec un espace entre le nom et le texte : &lt;?name text?&gt;.</summary>
      <param name="name" vsli:raw="The name of the processing instruction.">Nom de l'instruction de traitement.</param>
      <param name="text" vsli:raw="The text to include in the processing instruction.">Texte à inclure dans l'instruction de traitement.</param>
      <exception cref="T:System.ArgumentException" vsli:raw="The text would result in a non-well formed XML document.  &#xA;  &#xA; &lt;paramref name=&quot;name&quot; /&gt; is either &lt;see langword=&quot;null&quot; /&gt; or &lt;see langword=&quot;String.Empty&quot; /&gt;.  &#xA;  &#xA; This method is being used to create an XML declaration after &lt;see cref=&quot;M:System.Xml.XmlWriter.WriteStartDocument&quot; /&gt; has already been called.">Le texte est à l'origine d'un document XML incorrect.  
  
 <paramref name="name" /> a la valeur <see langword="null" /> ou <see langword="String.Empty" />.  
  
Cette méthode permet de créer une déclaration XML après l'appel de <see cref="M:System.Xml.XmlWriter.WriteStartDocument" />.</exception>
      <exception cref="T:System.InvalidOperationException" vsli:raw="An &lt;see cref=&quot;T:System.Xml.XmlWriter&quot; /&gt; method was called before a previous asynchronous operation finished. In this case, &lt;see cref=&quot;T:System.InvalidOperationException&quot; /&gt; is thrown with the message &quot;An asynchronous operation is already in progress.&quot;">Une méthode <see cref="T:System.Xml.XmlWriter" /> a été appelée avant la fin d’une opération asynchrone précédente. Dans ce cas, l’exception <see cref="T:System.InvalidOperationException" /> est levée avec le message « Une opération asynchrone est déjà en cours ».</exception>
    </member>
    <member name="M:System.Xml.XmlWriter.WriteProcessingInstructionAsync(System.String,System.String)">
      <summary vsli:raw="Asynchronously writes out a processing instruction with a space between the name and text as follows: &amp;lt;?name text?&amp;gt;.">Écrit de façon asynchrone une instruction de traitement avec un espace entre le nom et le texte, comme suit : &lt;?name text?&gt;.</summary>
      <param name="name" vsli:raw="The name of the processing instruction.">Nom de l'instruction de traitement.</param>
      <param name="text" vsli:raw="The text to include in the processing instruction.">Texte à inclure dans l'instruction de traitement.</param>
      <exception cref="T:System.InvalidOperationException" vsli:raw="An &lt;see cref=&quot;T:System.Xml.XmlWriter&quot; /&gt; method was called before a previous asynchronous operation finished. In this case, &lt;see cref=&quot;T:System.InvalidOperationException&quot; /&gt; is thrown with the message &quot;An asynchronous operation is already in progress.&quot;&#xA;&#xA;-or-&#xA;&#xA;An &lt;see cref=&quot;T:System.Xml.XmlWriter&quot; /&gt; asynchronous method was called without setting the &lt;see cref=&quot;P:System.Xml.XmlWriterSettings.Async&quot; /&gt; flag to &lt;see langword=&quot;true&quot; /&gt;. In this case, &lt;see cref=&quot;T:System.InvalidOperationException&quot; /&gt; is thrown with the message &quot;Set XmlWriterSettings.Async to true if you want to use Async Methods.&quot;">Une méthode <see cref="T:System.Xml.XmlWriter" /> a été appelée avant la fin d’une opération asynchrone précédente. Dans ce cas, l’exception <see cref="T:System.InvalidOperationException" /> est levée avec le message « Une opération asynchrone est déjà en cours ».

- ou -

Une méthode asynchrone <see cref="T:System.Xml.XmlWriter" /> a été appelée sans définir l’indicateur <see cref="P:System.Xml.XmlWriterSettings.Async" /> sur <see langword="true" />. Dans ce cas, <see cref="T:System.InvalidOperationException" /> est levée avec le message « Attribuez à XmlReaderSettings.Async la valeur True si vous voulez utiliser des méthodes asynchrones ».</exception>
      <returns vsli:raw="The task that represents the asynchronous &lt;see langword=&quot;WriteProcessingInstruction&quot; /&gt; operation.">Tâche qui représente l'opération <see langword="WriteProcessingInstruction" /> asynchrone.</returns>
    </member>
    <member name="M:System.Xml.XmlWriter.WriteQualifiedName(System.String,System.String)">
      <summary vsli:raw="When overridden in a derived class, writes out the namespace-qualified name. This method looks up the prefix that is in scope for the given namespace.">En cas de substitution dans une classe dérivée, écrit le nom qualifié de l'espace de noms. Cette méthode recherche le préfixe situé dans la portée de l'espace de noms spécifié.</summary>
      <param name="localName" vsli:raw="The local name to write.">Nom local à écrire.</param>
      <param name="ns" vsli:raw="The namespace URI for the name.">URI d'espace de noms de ce nom.</param>
      <exception cref="T:System.ArgumentException" vsli:raw="&lt;paramref name=&quot;localName&quot; /&gt; is either &lt;see langword=&quot;null&quot; /&gt; or &lt;see langword=&quot;String.Empty&quot; /&gt;.  &#xA;  &#xA; &lt;paramref name=&quot;localName&quot; /&gt; is not a valid name.">
        <paramref name="localName" /> a la valeur <see langword="null" /> ou <see langword="String.Empty" />.  
  
 <paramref name="localName" /> n'est pas un nom valide.</exception>
      <exception cref="T:System.InvalidOperationException" vsli:raw="An &lt;see cref=&quot;T:System.Xml.XmlWriter&quot; /&gt; method was called before a previous asynchronous operation finished. In this case, &lt;see cref=&quot;T:System.InvalidOperationException&quot; /&gt; is thrown with the message &quot;An asynchronous operation is already in progress.&quot;">Une méthode <see cref="T:System.Xml.XmlWriter" /> a été appelée avant la fin d’une opération asynchrone précédente. Dans ce cas, l’exception <see cref="T:System.InvalidOperationException" /> est levée avec le message « Une opération asynchrone est déjà en cours ».</exception>
    </member>
    <member name="M:System.Xml.XmlWriter.WriteQualifiedNameAsync(System.String,System.String)">
      <summary vsli:raw="Asynchronously writes out the namespace-qualified name. This method looks up the prefix that is in scope for the given namespace.">Écrit de façon asynchrone le nom qualifié de l'espace de noms. Cette méthode recherche le préfixe situé dans la portée de l'espace de noms spécifié.</summary>
      <param name="localName" vsli:raw="The local name to write.">Nom local à écrire.</param>
      <param name="ns" vsli:raw="The namespace URI for the name.">URI d'espace de noms de ce nom.</param>
      <exception cref="T:System.InvalidOperationException" vsli:raw="An &lt;see cref=&quot;T:System.Xml.XmlWriter&quot; /&gt; method was called before a previous asynchronous operation finished. In this case, &lt;see cref=&quot;T:System.InvalidOperationException&quot; /&gt; is thrown with the message &quot;An asynchronous operation is already in progress.&quot;&#xA;&#xA;-or-&#xA;&#xA;An &lt;see cref=&quot;T:System.Xml.XmlWriter&quot; /&gt; asynchronous method was called without setting the &lt;see cref=&quot;P:System.Xml.XmlWriterSettings.Async&quot; /&gt; flag to &lt;see langword=&quot;true&quot; /&gt;. In this case, &lt;see cref=&quot;T:System.InvalidOperationException&quot; /&gt; is thrown with the message &quot;Set XmlWriterSettings.Async to true if you want to use Async Methods.&quot;">Une méthode <see cref="T:System.Xml.XmlWriter" /> a été appelée avant la fin d’une opération asynchrone précédente. Dans ce cas, l’exception <see cref="T:System.InvalidOperationException" /> est levée avec le message « Une opération asynchrone est déjà en cours ».

- ou -

Une méthode asynchrone <see cref="T:System.Xml.XmlWriter" /> a été appelée sans définir l’indicateur <see cref="P:System.Xml.XmlWriterSettings.Async" /> sur <see langword="true" />. Dans ce cas, <see cref="T:System.InvalidOperationException" /> est levée avec le message « Attribuez à XmlReaderSettings.Async la valeur True si vous voulez utiliser des méthodes asynchrones ».</exception>
      <returns vsli:raw="The task that represents the asynchronous &lt;see langword=&quot;WriteQualifiedName&quot; /&gt; operation.">Tâche qui représente l'opération <see langword="WriteQualifiedName" /> asynchrone.</returns>
    </member>
    <member name="M:System.Xml.XmlWriter.WriteRaw(System.Char[],System.Int32,System.Int32)">
      <summary vsli:raw="When overridden in a derived class, writes raw markup manually from a character buffer.">En cas de substitution dans une classe dérivée, écrit manuellement un balisage brut à partir d'une mémoire tampon de caractères.</summary>
      <param name="buffer" vsli:raw="Character array containing the text to write.">Tableau de caractères contenant le texte à écrire.</param>
      <param name="index" vsli:raw="The position within the buffer indicating the start of the text to write.">Emplacement dans la mémoire tampon indiquant le début du texte à écrire.</param>
      <param name="count" vsli:raw="The number of characters to write.">Nombre de caractères à écrire.</param>
      <exception cref="T:System.ArgumentNullException" vsli:raw="&lt;paramref name=&quot;buffer&quot; /&gt; is &lt;see langword=&quot;null&quot; /&gt;.">
        <paramref name="buffer" /> a la valeur <see langword="null" />.</exception>
      <exception cref="T:System.ArgumentOutOfRangeException" vsli:raw="&lt;paramref name=&quot;index&quot; /&gt; or &lt;paramref name=&quot;count&quot; /&gt; is less than zero.  &#xA;  &#xA; -or-  &#xA;  &#xA; The buffer length minus &lt;paramref name=&quot;index&quot; /&gt; is less than &lt;paramref name=&quot;count&quot; /&gt;.">
        <paramref name="index" /> ou <paramref name="count" /> est inférieur à zéro.  
  
- ou - 
La longueur de la mémoire tampon moins <paramref name="index" /> est inférieure à <paramref name="count" />.</exception>
      <exception cref="T:System.InvalidOperationException" vsli:raw="An &lt;see cref=&quot;T:System.Xml.XmlWriter&quot; /&gt; method was called before a previous asynchronous operation finished. In this case, &lt;see cref=&quot;T:System.InvalidOperationException&quot; /&gt; is thrown with the message &quot;An asynchronous operation is already in progress.&quot;">Une méthode <see cref="T:System.Xml.XmlWriter" /> a été appelée avant la fin d’une opération asynchrone précédente. Dans ce cas, l’exception <see cref="T:System.InvalidOperationException" /> est levée avec le message « Une opération asynchrone est déjà en cours ».</exception>
    </member>
    <member name="M:System.Xml.XmlWriter.WriteRaw(System.String)">
      <summary vsli:raw="When overridden in a derived class, writes raw markup manually from a string.">En cas de substitution dans une classe dérivée, écrit manuellement un balisage brut à partir d'une chaîne.</summary>
      <param name="data" vsli:raw="String containing the text to write.">Chaîne contenant le texte à écrire.</param>
      <exception cref="T:System.ArgumentException" vsli:raw="&lt;paramref name=&quot;data&quot; /&gt; is either &lt;see langword=&quot;null&quot; /&gt; or &lt;see langword=&quot;String.Empty&quot; /&gt;.">
        <paramref name="data" /> a la valeur <see langword="null" /> ou <see langword="String.Empty" />.</exception>
      <exception cref="T:System.InvalidOperationException" vsli:raw="An &lt;see cref=&quot;T:System.Xml.XmlWriter&quot; /&gt; method was called before a previous asynchronous operation finished. In this case, &lt;see cref=&quot;T:System.InvalidOperationException&quot; /&gt; is thrown with the message &quot;An asynchronous operation is already in progress.&quot;">Une méthode <see cref="T:System.Xml.XmlWriter" /> a été appelée avant la fin d’une opération asynchrone précédente. Dans ce cas, l’exception <see cref="T:System.InvalidOperationException" /> est levée avec le message « Une opération asynchrone est déjà en cours ».</exception>
    </member>
    <member name="M:System.Xml.XmlWriter.WriteRawAsync(System.Char[],System.Int32,System.Int32)">
      <summary vsli:raw="Asynchronously writes raw markup manually from a character buffer.">Écrit manuellement de façon asynchrone un balisage brut à partir d'une mémoire tampon de caractères.</summary>
      <param name="buffer" vsli:raw="Character array containing the text to write.">Tableau de caractères contenant le texte à écrire.</param>
      <param name="index" vsli:raw="The position within the buffer indicating the start of the text to write.">Emplacement dans la mémoire tampon indiquant le début du texte à écrire.</param>
      <param name="count" vsli:raw="The number of characters to write.">Nombre de caractères à écrire.</param>
      <exception cref="T:System.InvalidOperationException" vsli:raw="An &lt;see cref=&quot;T:System.Xml.XmlWriter&quot; /&gt; method was called before a previous asynchronous operation finished. In this case, &lt;see cref=&quot;T:System.InvalidOperationException&quot; /&gt; is thrown with the message &quot;An asynchronous operation is already in progress.&quot;&#xA;&#xA;-or-&#xA;&#xA;An &lt;see cref=&quot;T:System.Xml.XmlWriter&quot; /&gt; asynchronous method was called without setting the &lt;see cref=&quot;P:System.Xml.XmlWriterSettings.Async&quot; /&gt; flag to &lt;see langword=&quot;true&quot; /&gt;. In this case, &lt;see cref=&quot;T:System.InvalidOperationException&quot; /&gt; is thrown with the message &quot;Set XmlWriterSettings.Async to true if you want to use Async Methods.&quot;">Une méthode <see cref="T:System.Xml.XmlWriter" /> a été appelée avant la fin d’une opération asynchrone précédente. Dans ce cas, l’exception <see cref="T:System.InvalidOperationException" /> est levée avec le message « Une opération asynchrone est déjà en cours ».

- ou -

Une méthode asynchrone <see cref="T:System.Xml.XmlWriter" /> a été appelée sans définir l’indicateur <see cref="P:System.Xml.XmlWriterSettings.Async" /> sur <see langword="true" />. Dans ce cas, <see cref="T:System.InvalidOperationException" /> est levée avec le message « Attribuez à XmlReaderSettings.Async la valeur True si vous voulez utiliser des méthodes asynchrones ».</exception>
      <returns vsli:raw="The task that represents the asynchronous &lt;see langword=&quot;WriteRaw&quot; /&gt; operation.">Tâche qui représente l'opération <see langword="WriteRaw" /> asynchrone.</returns>
    </member>
    <member name="M:System.Xml.XmlWriter.WriteRawAsync(System.String)">
      <summary vsli:raw="Asynchronously writes raw markup manually from a string.">Écrit de façon asynchrone un balisage brut à partir d'une chaîne.</summary>
      <param name="data" vsli:raw="String containing the text to write.">Chaîne contenant le texte à écrire.</param>
      <exception cref="T:System.InvalidOperationException" vsli:raw="An &lt;see cref=&quot;T:System.Xml.XmlWriter&quot; /&gt; method was called before a previous asynchronous operation finished. In this case, &lt;see cref=&quot;T:System.InvalidOperationException&quot; /&gt; is thrown with the message &quot;An asynchronous operation is already in progress.&quot;&#xA;&#xA;-or-&#xA;&#xA;An &lt;see cref=&quot;T:System.Xml.XmlWriter&quot; /&gt; asynchronous method was called without setting the &lt;see cref=&quot;P:System.Xml.XmlWriterSettings.Async&quot; /&gt; flag to &lt;see langword=&quot;true&quot; /&gt;. In this case, &lt;see cref=&quot;T:System.InvalidOperationException&quot; /&gt; is thrown with the message &quot;Set XmlWriterSettings.Async to true if you want to use Async Methods.&quot;">Une méthode <see cref="T:System.Xml.XmlWriter" /> a été appelée avant la fin d’une opération asynchrone précédente. Dans ce cas, l’exception <see cref="T:System.InvalidOperationException" /> est levée avec le message « Une opération asynchrone est déjà en cours ».

- ou -

Une méthode asynchrone <see cref="T:System.Xml.XmlWriter" /> a été appelée sans définir l’indicateur <see cref="P:System.Xml.XmlWriterSettings.Async" /> sur <see langword="true" />. Dans ce cas, <see cref="T:System.InvalidOperationException" /> est levée avec le message « Attribuez à XmlReaderSettings.Async la valeur True si vous voulez utiliser des méthodes asynchrones ».</exception>
      <returns vsli:raw="The task that represents the asynchronous &lt;see langword=&quot;WriteRaw&quot; /&gt; operation.">Tâche qui représente l'opération <see langword="WriteRaw" /> asynchrone.</returns>
    </member>
    <member name="M:System.Xml.XmlWriter.WriteStartAttribute(System.String)">
      <summary vsli:raw="Writes the start of an attribute with the specified local name.">Écrit le début d'un attribut avec le nom local spécifié.</summary>
      <param name="localName" vsli:raw="The local name of the attribute.">Le nom local de l'attribut.</param>
      <exception cref="T:System.InvalidOperationException" vsli:raw="The writer is closed.&#xA;&#xA;-or-&#xA;&#xA;An &lt;see cref=&quot;T:System.Xml.XmlWriter&quot; /&gt; method was called before a previous asynchronous operation finished. In this case, &lt;see cref=&quot;T:System.InvalidOperationException&quot; /&gt; is thrown with the message &quot;An asynchronous operation is already in progress.&quot;">Le writer est fermé.

- ou -

Une méthode <see cref="T:System.Xml.XmlWriter" /> a été appelée avant la fin d’une opération asynchrone précédente. Dans ce cas, l’exception <see cref="T:System.InvalidOperationException" /> est levée avec le message « Une opération asynchrone est déjà en cours ».</exception>
      <exception cref="T:System.Text.EncoderFallbackException" vsli:raw="There is a character in the buffer that is a valid XML character but is not valid for the output encoding. For example, if the output encoding is ASCII, you should only use characters from the range of 0 to 127 for element and attribute names. The invalid character might be in the argument of this method or in an argument of previous methods that were writing to the buffer. Such characters are escaped by character entity references when possible (for example, in text nodes or attribute values). However, the character entity reference is not allowed in element and attribute names, comments, processing instructions, or CDATA sections.">Un caractère dans la mémoire tampon est un caractère XML valide mais n'est pas valide pour l'encodage de sortie. Par exemple, si l'encodage de sortie est ASCII, vous devez utiliser uniquement des caractères de la plage de 0 à 127 pour les noms d'éléments et d'attributs. Le caractère non valide peut être dans l'argument de cette méthode ou dans un argument des méthodes précédentes qui écrivaient dans la mémoire tampon. Les caractères de ce type sont échappés par les références d'entité de caractère lorsque cela est possible (par exemple, dans les nœuds de texte ou les valeurs d'attribut). Toutefois, la référence d'entité de caractère n'est pas autorisée dans les noms d'éléments et d'attributs, les commentaires, les instructions de traitement ou les sections CDATA.</exception>
    </member>
    <member name="M:System.Xml.XmlWriter.WriteStartAttribute(System.String,System.String)">
      <summary vsli:raw="Writes the start of an attribute with the specified local name and namespace URI.">Écrit le début d'un attribut avec le nom local et l'URI de l'espace de noms spécifiés.</summary>
      <param name="localName" vsli:raw="The local name of the attribute.">Le nom local de l'attribut.</param>
      <param name="ns" vsli:raw="The namespace URI of the attribute.">L'URI de l'espace de noms de l'attribut.</param>
      <exception cref="T:System.Text.EncoderFallbackException" vsli:raw="There is a character in the buffer that is a valid XML character but is not valid for the output encoding. For example, if the output encoding is ASCII, you should only use characters from the range of 0 to 127 for element and attribute names. The invalid character might be in the argument of this method or in an argument of previous methods that were writing to the buffer. Such characters are escaped by character entity references when possible (for example, in text nodes or attribute values). However, the character entity reference is not allowed in element and attribute names, comments, processing instructions, or CDATA sections.">Un caractère dans la mémoire tampon est un caractère XML valide mais n'est pas valide pour l'encodage de sortie. Par exemple, si l'encodage de sortie est ASCII, vous devez utiliser uniquement des caractères de la plage de 0 à 127 pour les noms d'éléments et d'attributs. Le caractère non valide peut être dans l'argument de cette méthode ou dans un argument des méthodes précédentes qui écrivaient dans la mémoire tampon. Les caractères de ce type sont échappés par les références d'entité de caractère lorsque cela est possible (par exemple, dans les nœuds de texte ou les valeurs d'attribut). Toutefois, la référence d'entité de caractère n'est pas autorisée dans les noms d'éléments et d'attributs, les commentaires, les instructions de traitement ou les sections CDATA.</exception>
      <exception cref="T:System.InvalidOperationException" vsli:raw="An &lt;see cref=&quot;T:System.Xml.XmlWriter&quot; /&gt; method was called before a previous asynchronous operation finished. In this case, &lt;see cref=&quot;T:System.InvalidOperationException&quot; /&gt; is thrown with the message &quot;An asynchronous operation is already in progress.&quot;">Une méthode <see cref="T:System.Xml.XmlWriter" /> a été appelée avant la fin d’une opération asynchrone précédente. Dans ce cas, l’exception <see cref="T:System.InvalidOperationException" /> est levée avec le message « Une opération asynchrone est déjà en cours ».</exception>
    </member>
    <member name="M:System.Xml.XmlWriter.WriteStartAttribute(System.String,System.String,System.String)">
      <summary vsli:raw="When overridden in a derived class, writes the start of an attribute with the specified prefix, local name, and namespace URI.">En cas de substitution dans une classe dérivée, écrit le début d'un attribut avec le préfixe, le nom local et l'URI de l'espace de noms spécifiés.</summary>
      <param name="prefix" vsli:raw="The namespace prefix of the attribute.">Préfixe de l'espace de noms de cet attribut.</param>
      <param name="localName" vsli:raw="The local name of the attribute.">Le nom local de l'attribut.</param>
      <param name="ns" vsli:raw="The namespace URI for the attribute.">URI d'espace de noms de cet attribut.</param>
      <exception cref="T:System.Text.EncoderFallbackException" vsli:raw="There is a character in the buffer that is a valid XML character but is not valid for the output encoding. For example, if the output encoding is ASCII, you should only use characters from the range of 0 to 127 for element and attribute names. The invalid character might be in the argument of this method or in an argument of previous methods that were writing to the buffer. Such characters are escaped by character entity references when possible (for example, in text nodes or attribute values). However, the character entity reference is not allowed in element and attribute names, comments, processing instructions, or CDATA sections.">Un caractère dans la mémoire tampon est un caractère XML valide mais n'est pas valide pour l'encodage de sortie. Par exemple, si l'encodage de sortie est ASCII, vous devez utiliser uniquement des caractères de la plage de 0 à 127 pour les noms d'éléments et d'attributs. Le caractère non valide peut être dans l'argument de cette méthode ou dans un argument des méthodes précédentes qui écrivaient dans la mémoire tampon. Les caractères de ce type sont échappés par les références d'entité de caractère lorsque cela est possible (par exemple, dans les nœuds de texte ou les valeurs d'attribut). Toutefois, la référence d'entité de caractère n'est pas autorisée dans les noms d'éléments et d'attributs, les commentaires, les instructions de traitement ou les sections CDATA.</exception>
      <exception cref="T:System.InvalidOperationException" vsli:raw="An &lt;see cref=&quot;T:System.Xml.XmlWriter&quot; /&gt; method was called before a previous asynchronous operation finished. In this case, &lt;see cref=&quot;T:System.InvalidOperationException&quot; /&gt; is thrown with the message &quot;An asynchronous operation is already in progress.&quot;">Une méthode <see cref="T:System.Xml.XmlWriter" /> a été appelée avant la fin d’une opération asynchrone précédente. Dans ce cas, l’exception <see cref="T:System.InvalidOperationException" /> est levée avec le message « Une opération asynchrone est déjà en cours ».</exception>
    </member>
    <member name="M:System.Xml.XmlWriter.WriteStartAttributeAsync(System.String,System.String,System.String)">
      <summary vsli:raw="Asynchronously writes the start of an attribute with the specified prefix, local name, and namespace URI.">Écrit de façon asynchrone le début d'un attribut avec le préfixe, le nom local et l'URI de l'espace de noms spécifiés.</summary>
      <param name="prefix" vsli:raw="The namespace prefix of the attribute.">Préfixe de l'espace de noms de cet attribut.</param>
      <param name="localName" vsli:raw="The local name of the attribute.">Le nom local de l'attribut.</param>
      <param name="ns" vsli:raw="The namespace URI for the attribute.">URI d'espace de noms de cet attribut.</param>
      <exception cref="T:System.InvalidOperationException" vsli:raw="An &lt;see cref=&quot;T:System.Xml.XmlWriter&quot; /&gt; method was called before a previous asynchronous operation finished. In this case, &lt;see cref=&quot;T:System.InvalidOperationException&quot; /&gt; is thrown with the message &quot;An asynchronous operation is already in progress.&quot;&#xA;&#xA;-or-&#xA;&#xA;An &lt;see cref=&quot;T:System.Xml.XmlWriter&quot; /&gt; asynchronous method was called without setting the &lt;see cref=&quot;P:System.Xml.XmlWriterSettings.Async&quot; /&gt; flag to &lt;see langword=&quot;true&quot; /&gt;. In this case, &lt;see cref=&quot;T:System.InvalidOperationException&quot; /&gt; is thrown with the message &quot;Set XmlWriterSettings.Async to true if you want to use Async Methods.&quot;">Une méthode <see cref="T:System.Xml.XmlWriter" /> a été appelée avant la fin d’une opération asynchrone précédente. Dans ce cas, l’exception <see cref="T:System.InvalidOperationException" /> est levée avec le message « Une opération asynchrone est déjà en cours ».

- ou -

Une méthode asynchrone <see cref="T:System.Xml.XmlWriter" /> a été appelée sans définir l’indicateur <see cref="P:System.Xml.XmlWriterSettings.Async" /> sur <see langword="true" />. Dans ce cas, <see cref="T:System.InvalidOperationException" /> est levée avec le message « Attribuez à XmlReaderSettings.Async la valeur True si vous voulez utiliser des méthodes asynchrones ».</exception>
      <returns vsli:raw="The task that represents the asynchronous &lt;see langword=&quot;WriteStartAttribute&quot; /&gt; operation.">Tâche qui représente l'opération <see langword="WriteStartAttribute" /> asynchrone.</returns>
    </member>
    <member name="M:System.Xml.XmlWriter.WriteStartDocument">
      <summary vsli:raw="When overridden in a derived class, writes the XML declaration with the version &quot;1.0&quot;.">En cas de substitution dans une classe dérivée, écrit la déclaration XML avec la version "1.0".</summary>
      <exception cref="T:System.InvalidOperationException" vsli:raw="This is not the first write method called after the constructor.&#xA;&#xA;-or-&#xA;&#xA;An &lt;see cref=&quot;T:System.Xml.XmlWriter&quot; /&gt; method was called before a previous asynchronous operation finished. In this case, &lt;see cref=&quot;T:System.InvalidOperationException&quot; /&gt; is thrown with the message &quot;An asynchronous operation is already in progress.&quot;">Il ne s'agit pas de la première méthode d'écriture appelée à la suite du constructeur.

- ou -

Une méthode <see cref="T:System.Xml.XmlWriter" /> a été appelée avant la fin d’une opération asynchrone précédente. Dans ce cas, l’exception <see cref="T:System.InvalidOperationException" /> est levée avec le message « Une opération asynchrone est déjà en cours ».</exception>
    </member>
    <member name="M:System.Xml.XmlWriter.WriteStartDocument(System.Boolean)">
      <summary vsli:raw="When overridden in a derived class, writes the XML declaration with the version &quot;1.0&quot; and the standalone attribute.">En cas de substitution dans une classe dérivée, écrit la déclaration XML avec la version "1.0" et l'attribut autonome.</summary>
      <param name="standalone" vsli:raw="If &lt;see langword=&quot;true&quot; /&gt;, it writes &quot;standalone=yes&quot;; if &lt;see langword=&quot;false&quot; /&gt;, it writes &quot;standalone=no&quot;.">Si la valeur est <see langword="true" />, elle écrit "standalone=yes"; si la valeur est <see langword="false" />, elle écrit "standalone=no".</param>
      <exception cref="T:System.InvalidOperationException" vsli:raw="This is not the first write method called after the constructor.&#xA;&#xA;-or-&#xA;&#xA;An &lt;see cref=&quot;T:System.Xml.XmlWriter&quot; /&gt; method was called before a previous asynchronous operation finished. In this case, &lt;see cref=&quot;T:System.InvalidOperationException&quot; /&gt; is thrown with the message &quot;An asynchronous operation is already in progress.&quot;">Il ne s'agit pas de la première méthode d'écriture appelée à la suite du constructeur.

- ou -

Une méthode <see cref="T:System.Xml.XmlWriter" /> a été appelée avant la fin d’une opération asynchrone précédente. Dans ce cas, l’exception <see cref="T:System.InvalidOperationException" /> est levée avec le message « Une opération asynchrone est déjà en cours ».</exception>
    </member>
    <member name="M:System.Xml.XmlWriter.WriteStartDocumentAsync">
      <summary vsli:raw="Asynchronously writes the XML declaration with the version &quot;1.0&quot;.">Écrit de façon asynchrone la déclaration XML avec la version « 1.0 ».</summary>
      <exception cref="T:System.InvalidOperationException" vsli:raw="An &lt;see cref=&quot;T:System.Xml.XmlWriter&quot; /&gt; method was called before a previous asynchronous operation finished. In this case, &lt;see cref=&quot;T:System.InvalidOperationException&quot; /&gt; is thrown with the message &quot;An asynchronous operation is already in progress.&quot;&#xA;&#xA;-or-&#xA;&#xA;An &lt;see cref=&quot;T:System.Xml.XmlWriter&quot; /&gt; asynchronous method was called without setting the &lt;see cref=&quot;P:System.Xml.XmlWriterSettings.Async&quot; /&gt; flag to &lt;see langword=&quot;true&quot; /&gt;. In this case, &lt;see cref=&quot;T:System.InvalidOperationException&quot; /&gt; is thrown with the message &quot;Set XmlWriterSettings.Async to true if you want to use Async Methods.&quot;">Une méthode <see cref="T:System.Xml.XmlWriter" /> a été appelée avant la fin d’une opération asynchrone précédente. Dans ce cas, l’exception <see cref="T:System.InvalidOperationException" /> est levée avec le message « Une opération asynchrone est déjà en cours ».

- ou -

Une méthode asynchrone <see cref="T:System.Xml.XmlWriter" /> a été appelée sans définir l’indicateur <see cref="P:System.Xml.XmlWriterSettings.Async" /> sur <see langword="true" />. Dans ce cas, <see cref="T:System.InvalidOperationException" /> est levée avec le message « Attribuez à XmlReaderSettings.Async la valeur True si vous voulez utiliser des méthodes asynchrones ».</exception>
      <returns vsli:raw="The task that represents the asynchronous &lt;see langword=&quot;WriteStartDocument&quot; /&gt; operation.">Tâche qui représente l'opération <see langword="WriteStartDocument" /> asynchrone.</returns>
    </member>
    <member name="M:System.Xml.XmlWriter.WriteStartDocumentAsync(System.Boolean)">
      <summary vsli:raw="Asynchronously writes the XML declaration with the version &quot;1.0&quot; and the standalone attribute.">Écrit de façon asynchrone la déclaration XML avec la version « 1.0 » et l'attribut autonome.</summary>
      <param name="standalone" vsli:raw="If &lt;see langword=&quot;true&quot; /&gt;, it writes &quot;standalone=yes&quot;; if &lt;see langword=&quot;false&quot; /&gt;, it writes &quot;standalone=no&quot;.">Si la valeur est <see langword="true" />, elle écrit "standalone=yes"; si la valeur est <see langword="false" />, elle écrit "standalone=no".</param>
      <exception cref="T:System.InvalidOperationException" vsli:raw="An &lt;see cref=&quot;T:System.Xml.XmlWriter&quot; /&gt; method was called before a previous asynchronous operation finished. In this case, &lt;see cref=&quot;T:System.InvalidOperationException&quot; /&gt; is thrown with the message &quot;An asynchronous operation is already in progress.&quot;&#xA;&#xA;-or-&#xA;&#xA;An &lt;see cref=&quot;T:System.Xml.XmlWriter&quot; /&gt; asynchronous method was called without setting the &lt;see cref=&quot;P:System.Xml.XmlWriterSettings.Async&quot; /&gt; flag to &lt;see langword=&quot;true&quot; /&gt;. In this case, &lt;see cref=&quot;T:System.InvalidOperationException&quot; /&gt; is thrown with the message &quot;Set XmlWriterSettings.Async to true if you want to use Async Methods.&quot;">Une méthode <see cref="T:System.Xml.XmlWriter" /> a été appelée avant la fin d’une opération asynchrone précédente. Dans ce cas, l’exception <see cref="T:System.InvalidOperationException" /> est levée avec le message « Une opération asynchrone est déjà en cours ».

- ou -

Une méthode asynchrone <see cref="T:System.Xml.XmlWriter" /> a été appelée sans définir l’indicateur <see cref="P:System.Xml.XmlWriterSettings.Async" /> sur <see langword="true" />. Dans ce cas, <see cref="T:System.InvalidOperationException" /> est levée avec le message « Attribuez à XmlReaderSettings.Async la valeur True si vous voulez utiliser des méthodes asynchrones ».</exception>
      <returns vsli:raw="The task that represents the asynchronous &lt;see langword=&quot;WriteStartDocument&quot; /&gt; operation.">Tâche qui représente l'opération <see langword="WriteStartDocument" /> asynchrone.</returns>
    </member>
    <member name="M:System.Xml.XmlWriter.WriteStartElement(System.String)">
      <summary vsli:raw="When overridden in a derived class, writes out a start tag with the specified local name.">En cas de substitution dans une classe dérivée, écrit une balise de début avec le nom local spécifié.</summary>
      <param name="localName" vsli:raw="The local name of the element.">Le nom local de l'élément.</param>
      <exception cref="T:System.InvalidOperationException" vsli:raw="The writer is closed.&#xA;&#xA;-or-&#xA;&#xA;An &lt;see cref=&quot;T:System.Xml.XmlWriter&quot; /&gt; method was called before a previous asynchronous operation finished. In this case, &lt;see cref=&quot;T:System.InvalidOperationException&quot; /&gt; is thrown with the message &quot;An asynchronous operation is already in progress.&quot;">Le writer est fermé.

- ou -

Une méthode <see cref="T:System.Xml.XmlWriter" /> a été appelée avant la fin d’une opération asynchrone précédente. Dans ce cas, l’exception <see cref="T:System.InvalidOperationException" /> est levée avec le message « Une opération asynchrone est déjà en cours ».</exception>
      <exception cref="T:System.Text.EncoderFallbackException" vsli:raw="There is a character in the buffer that is a valid XML character but is not valid for the output encoding. For example, if the output encoding is ASCII, you should only use characters from the range of 0 to 127 for element and attribute names. The invalid character might be in the argument of this method or in an argument of previous methods that were writing to the buffer. Such characters are escaped by character entity references when possible (for example, in text nodes or attribute values). However, the character entity reference is not allowed in element and attribute names, comments, processing instructions, or CDATA sections.">Un caractère dans la mémoire tampon est un caractère XML valide mais n'est pas valide pour l'encodage de sortie. Par exemple, si l'encodage de sortie est ASCII, vous devez utiliser uniquement des caractères de la plage de 0 à 127 pour les noms d'éléments et d'attributs. Le caractère non valide peut être dans l'argument de cette méthode ou dans un argument des méthodes précédentes qui écrivaient dans la mémoire tampon. Les caractères de ce type sont échappés par les références d'entité de caractère lorsque cela est possible (par exemple, dans les nœuds de texte ou les valeurs d'attribut). Toutefois, la référence d'entité de caractère n'est pas autorisée dans les noms d'éléments et d'attributs, les commentaires, les instructions de traitement ou les sections CDATA.</exception>
    </member>
    <member name="M:System.Xml.XmlWriter.WriteStartElement(System.String,System.String)">
      <summary vsli:raw="When overridden in a derived class, writes the specified start tag and associates it with the given namespace.">En cas de substitution dans une classe dérivée, écrit l’étiquette de début spécifiée et l’associe à l’espace de noms indiqué.</summary>
      <param name="localName" vsli:raw="The local name of the element.">Le nom local de l'élément.</param>
      <param name="ns" vsli:raw="The namespace URI to associate with the element. If this namespace is already in scope and has an associated prefix, the writer automatically writes that prefix also.">URI de l'espace de noms à associer à l'élément. Si cet espace de noms est déjà dans la portée et qu'il possède un préfixe associé, le writer écrit automatiquement ce préfixe également.</param>
      <exception cref="T:System.InvalidOperationException" vsli:raw="The writer is closed.&#xA;&#xA;-or-&#xA;&#xA;An &lt;see cref=&quot;T:System.Xml.XmlWriter&quot; /&gt; method was called before a previous asynchronous operation finished. In this case, &lt;see cref=&quot;T:System.InvalidOperationException&quot; /&gt; is thrown with the message &quot;An asynchronous operation is already in progress.&quot;">Le writer est fermé.

- ou -

Une méthode <see cref="T:System.Xml.XmlWriter" /> a été appelée avant la fin d’une opération asynchrone précédente. Dans ce cas, l’exception <see cref="T:System.InvalidOperationException" /> est levée avec le message « Une opération asynchrone est déjà en cours ».</exception>
      <exception cref="T:System.Text.EncoderFallbackException" vsli:raw="There is a character in the buffer that is a valid XML character but is not valid for the output encoding. For example, if the output encoding is ASCII, you should only use characters from the range of 0 to 127 for element and attribute names. The invalid character might be in the argument of this method or in an argument of previous methods that were writing to the buffer. Such characters are escaped by character entity references when possible (for example, in text nodes or attribute values). However, the character entity reference is not allowed in element and attribute names, comments, processing instructions, or CDATA sections.">Un caractère dans la mémoire tampon est un caractère XML valide mais n'est pas valide pour l'encodage de sortie. Par exemple, si l'encodage de sortie est ASCII, vous devez utiliser uniquement des caractères de la plage de 0 à 127 pour les noms d'éléments et d'attributs. Le caractère non valide peut être dans l'argument de cette méthode ou dans un argument des méthodes précédentes qui écrivaient dans la mémoire tampon. Les caractères de ce type sont échappés par les références d'entité de caractère lorsque cela est possible (par exemple, dans les nœuds de texte ou les valeurs d'attribut). Toutefois, la référence d'entité de caractère n'est pas autorisée dans les noms d'éléments et d'attributs, les commentaires, les instructions de traitement ou les sections CDATA.</exception>
    </member>
    <member name="M:System.Xml.XmlWriter.WriteStartElement(System.String,System.String,System.String)">
      <summary vsli:raw="When overridden in a derived class, writes the specified start tag and associates it with the given namespace and prefix.">En cas de substitution dans une classe dérivée, écrit l’étiquette de début spécifiée, puis l’associe à l’espace de noms et au préfixe indiqués.</summary>
      <param name="prefix" vsli:raw="The namespace prefix of the element.">Préfixe d'espace de noms de cet élément.</param>
      <param name="localName" vsli:raw="The local name of the element.">Le nom local de l'élément.</param>
      <param name="ns" vsli:raw="The namespace URI to associate with the element.">URI de l'espace de noms à associer à l'élément.</param>
      <exception cref="T:System.InvalidOperationException" vsli:raw="The writer is closed.&#xA;&#xA;-or-&#xA;&#xA;An &lt;see cref=&quot;T:System.Xml.XmlWriter&quot; /&gt; method was called before a previous asynchronous operation finished. In this case, &lt;see cref=&quot;T:System.InvalidOperationException&quot; /&gt; is thrown with the message &quot;An asynchronous operation is already in progress.&quot;">Le writer est fermé.

- ou -

Une méthode <see cref="T:System.Xml.XmlWriter" /> a été appelée avant la fin d’une opération asynchrone précédente. Dans ce cas, l’exception <see cref="T:System.InvalidOperationException" /> est levée avec le message « Une opération asynchrone est déjà en cours ».</exception>
      <exception cref="T:System.Text.EncoderFallbackException" vsli:raw="There is a character in the buffer that is a valid XML character but is not valid for the output encoding. For example, if the output encoding is ASCII, you should only use characters from the range of 0 to 127 for element and attribute names. The invalid character might be in the argument of this method or in an argument of previous methods that were writing to the buffer. Such characters are escaped by character entity references when possible (for example, in text nodes or attribute values). However, the character entity reference is not allowed in element and attribute names, comments, processing instructions, or CDATA sections.">Un caractère dans la mémoire tampon est un caractère XML valide mais n'est pas valide pour l'encodage de sortie. Par exemple, si l'encodage de sortie est ASCII, vous devez utiliser uniquement des caractères de la plage de 0 à 127 pour les noms d'éléments et d'attributs. Le caractère non valide peut être dans l'argument de cette méthode ou dans un argument des méthodes précédentes qui écrivaient dans la mémoire tampon. Les caractères de ce type sont échappés par les références d'entité de caractère lorsque cela est possible (par exemple, dans les nœuds de texte ou les valeurs d'attribut). Toutefois, la référence d'entité de caractère n'est pas autorisée dans les noms d'éléments et d'attributs, les commentaires, les instructions de traitement ou les sections CDATA.</exception>
    </member>
    <member name="M:System.Xml.XmlWriter.WriteStartElementAsync(System.String,System.String,System.String)">
      <summary vsli:raw="Asynchronously writes the specified start tag and associates it with the given namespace and prefix.">Écrit de façon asynchrone l’étiquette de début indiquée et l’associe à l’espace de noms et au préfixe spécifiés.</summary>
      <param name="prefix" vsli:raw="The namespace prefix of the element.">Préfixe d'espace de noms de cet élément.</param>
      <param name="localName" vsli:raw="The local name of the element.">Le nom local de l'élément.</param>
      <param name="ns" vsli:raw="The namespace URI to associate with the element.">URI de l'espace de noms à associer à l'élément.</param>
      <exception cref="T:System.InvalidOperationException" vsli:raw="An &lt;see cref=&quot;T:System.Xml.XmlWriter&quot; /&gt; method was called before a previous asynchronous operation finished. In this case, &lt;see cref=&quot;T:System.InvalidOperationException&quot; /&gt; is thrown with the message &quot;An asynchronous operation is already in progress.&quot;&#xA;&#xA;-or-&#xA;&#xA;An &lt;see cref=&quot;T:System.Xml.XmlWriter&quot; /&gt; asynchronous method was called without setting the &lt;see cref=&quot;P:System.Xml.XmlWriterSettings.Async&quot; /&gt; flag to &lt;see langword=&quot;true&quot; /&gt;. In this case, &lt;see cref=&quot;T:System.InvalidOperationException&quot; /&gt; is thrown with the message &quot;Set XmlWriterSettings.Async to true if you want to use Async Methods.&quot;">Une méthode <see cref="T:System.Xml.XmlWriter" /> a été appelée avant la fin d’une opération asynchrone précédente. Dans ce cas, l’exception <see cref="T:System.InvalidOperationException" /> est levée avec le message « Une opération asynchrone est déjà en cours ».

- ou -

Une méthode asynchrone <see cref="T:System.Xml.XmlWriter" /> a été appelée sans définir l’indicateur <see cref="P:System.Xml.XmlWriterSettings.Async" /> sur <see langword="true" />. Dans ce cas, <see cref="T:System.InvalidOperationException" /> est levée avec le message « Attribuez à XmlReaderSettings.Async la valeur True si vous voulez utiliser des méthodes asynchrones ».</exception>
      <returns vsli:raw="The task that represents the asynchronous &lt;see langword=&quot;WriteStartElement&quot; /&gt; operation.">Tâche qui représente l'opération <see langword="WriteStartElement" /> asynchrone.</returns>
    </member>
    <member name="M:System.Xml.XmlWriter.WriteString(System.String)">
      <summary vsli:raw="When overridden in a derived class, writes the given text content.">En cas de substitution dans une classe dérivée, écrit le texte spécifié.</summary>
      <param name="text" vsli:raw="The text to write.">Texte à écrire.</param>
      <exception cref="T:System.ArgumentException" vsli:raw="The text string contains an invalid surrogate pair.">La chaîne de texte contient une paire de substitution non valide.</exception>
      <exception cref="T:System.InvalidOperationException" vsli:raw="An &lt;see cref=&quot;T:System.Xml.XmlWriter&quot; /&gt; method was called before a previous asynchronous operation finished. In this case, &lt;see cref=&quot;T:System.InvalidOperationException&quot; /&gt; is thrown with the message &quot;An asynchronous operation is already in progress.&quot;">Une méthode <see cref="T:System.Xml.XmlWriter" /> a été appelée avant la fin d’une opération asynchrone précédente. Dans ce cas, l’exception <see cref="T:System.InvalidOperationException" /> est levée avec le message « Une opération asynchrone est déjà en cours ».</exception>
    </member>
    <member name="M:System.Xml.XmlWriter.WriteStringAsync(System.String)">
      <summary vsli:raw="Asynchronously writes the given text content.">Écrit de façon asynchrone le texte spécifié.</summary>
      <param name="text" vsli:raw="The text to write.">Texte à écrire.</param>
      <exception cref="T:System.InvalidOperationException" vsli:raw="An &lt;see cref=&quot;T:System.Xml.XmlWriter&quot; /&gt; method was called before a previous asynchronous operation finished. In this case, &lt;see cref=&quot;T:System.InvalidOperationException&quot; /&gt; is thrown with the message &quot;An asynchronous operation is already in progress.&quot;&#xA;&#xA;-or-&#xA;&#xA;An &lt;see cref=&quot;T:System.Xml.XmlWriter&quot; /&gt; asynchronous method was called without setting the &lt;see cref=&quot;P:System.Xml.XmlWriterSettings.Async&quot; /&gt; flag to &lt;see langword=&quot;true&quot; /&gt;. In this case, &lt;see cref=&quot;T:System.InvalidOperationException&quot; /&gt; is thrown with the message &quot;Set XmlWriterSettings.Async to true if you want to use Async Methods.&quot;">Une méthode <see cref="T:System.Xml.XmlWriter" /> a été appelée avant la fin d’une opération asynchrone précédente. Dans ce cas, l’exception <see cref="T:System.InvalidOperationException" /> est levée avec le message « Une opération asynchrone est déjà en cours ».

- ou -

Une méthode asynchrone <see cref="T:System.Xml.XmlWriter" /> a été appelée sans définir l’indicateur <see cref="P:System.Xml.XmlWriterSettings.Async" /> sur <see langword="true" />. Dans ce cas, <see cref="T:System.InvalidOperationException" /> est levée avec le message « Attribuez à XmlReaderSettings.Async la valeur True si vous voulez utiliser des méthodes asynchrones ».</exception>
      <returns vsli:raw="The task that represents the asynchronous &lt;see langword=&quot;WriteString&quot; /&gt; operation.">Tâche qui représente l'opération <see langword="WriteString" /> asynchrone.</returns>
    </member>
    <member name="M:System.Xml.XmlWriter.WriteSurrogateCharEntity(System.Char,System.Char)">
      <summary vsli:raw="When overridden in a derived class, generates and writes the surrogate character entity for the surrogate character pair.">En cas de substitution dans une classe dérivée, génère et écrit l'entité de caractère de substitution correspondant à la paire de caractères de substitution.</summary>
      <param name="lowChar" vsli:raw="The low surrogate. This must be a value between 0xDC00 and 0xDFFF.">Substitut faible. Il doit s'agir d'une valeur comprise entre 0xDC00 et 0xDFFF.</param>
      <param name="highChar" vsli:raw="The high surrogate. This must be a value between 0xD800 and 0xDBFF.">Substitut étendu. Il doit s'agir d'une valeur comprise entre 0xD800 et 0xDBFF.</param>
      <exception cref="T:System.ArgumentException" vsli:raw="An invalid surrogate character pair was passed.">Une paire de caractères de substitution non valide est passée.</exception>
      <exception cref="T:System.InvalidOperationException" vsli:raw="An &lt;see cref=&quot;T:System.Xml.XmlWriter&quot; /&gt; method was called before a previous asynchronous operation finished. In this case, &lt;see cref=&quot;T:System.InvalidOperationException&quot; /&gt; is thrown with the message &quot;An asynchronous operation is already in progress.&quot;">Une méthode <see cref="T:System.Xml.XmlWriter" /> a été appelée avant la fin d’une opération asynchrone précédente. Dans ce cas, l’exception <see cref="T:System.InvalidOperationException" /> est levée avec le message « Une opération asynchrone est déjà en cours ».</exception>
    </member>
    <member name="M:System.Xml.XmlWriter.WriteSurrogateCharEntityAsync(System.Char,System.Char)">
      <summary vsli:raw="Asynchronously generates and writes the surrogate character entity for the surrogate character pair.">Génère de façon asynchrone et écrit l'entité de caractère de substitution correspondant à la paire de caractères de substitution.</summary>
      <param name="lowChar" vsli:raw="The low surrogate. This must be a value between 0xDC00 and 0xDFFF.">Substitut faible. Il doit s'agir d'une valeur comprise entre 0xDC00 et 0xDFFF.</param>
      <param name="highChar" vsli:raw="The high surrogate. This must be a value between 0xD800 and 0xDBFF.">Substitut étendu. Il doit s'agir d'une valeur comprise entre 0xD800 et 0xDBFF.</param>
      <exception cref="T:System.InvalidOperationException" vsli:raw="An &lt;see cref=&quot;T:System.Xml.XmlWriter&quot; /&gt; method was called before a previous asynchronous operation finished. In this case, &lt;see cref=&quot;T:System.InvalidOperationException&quot; /&gt; is thrown with the message &quot;An asynchronous operation is already in progress.&quot;&#xA;&#xA;-or-&#xA;&#xA;An &lt;see cref=&quot;T:System.Xml.XmlWriter&quot; /&gt; asynchronous method was called without setting the &lt;see cref=&quot;P:System.Xml.XmlWriterSettings.Async&quot; /&gt; flag to &lt;see langword=&quot;true&quot; /&gt;. In this case, &lt;see cref=&quot;T:System.InvalidOperationException&quot; /&gt; is thrown with the message &quot;Set XmlWriterSettings.Async to true if you want to use Async Methods.&quot;">Une méthode <see cref="T:System.Xml.XmlWriter" /> a été appelée avant la fin d’une opération asynchrone précédente. Dans ce cas, l’exception <see cref="T:System.InvalidOperationException" /> est levée avec le message « Une opération asynchrone est déjà en cours ».

- ou -

Une méthode asynchrone <see cref="T:System.Xml.XmlWriter" /> a été appelée sans définir l’indicateur <see cref="P:System.Xml.XmlWriterSettings.Async" /> sur <see langword="true" />. Dans ce cas, <see cref="T:System.InvalidOperationException" /> est levée avec le message « Attribuez à XmlReaderSettings.Async la valeur True si vous voulez utiliser des méthodes asynchrones ».</exception>
      <returns vsli:raw="The task that represents the asynchronous &lt;see langword=&quot;WriteSurrogateCharEntity&quot; /&gt; operation.">Tâche qui représente l'opération <see langword="WriteSurrogateCharEntity" /> asynchrone.</returns>
    </member>
    <member name="M:System.Xml.XmlWriter.WriteValue(System.Boolean)">
      <summary vsli:raw="Writes a &lt;see cref=&quot;T:System.Boolean&quot; /&gt; value.">Écrit une valeur <see cref="T:System.Boolean" />.</summary>
      <param name="value" vsli:raw="The &lt;see cref=&quot;T:System.Boolean&quot; /&gt; value to write.">La valeur <see cref="T:System.Boolean" /> à écrire.</param>
      <exception cref="T:System.ArgumentException" vsli:raw="An invalid value was specified.">Une valeur non valide a été spécifiée.</exception>
      <exception cref="T:System.InvalidOperationException" vsli:raw="An &lt;see cref=&quot;T:System.Xml.XmlWriter&quot; /&gt; method was called before a previous asynchronous operation finished. In this case, &lt;see cref=&quot;T:System.InvalidOperationException&quot; /&gt; is thrown with the message &quot;An asynchronous operation is already in progress.&quot;">Une méthode <see cref="T:System.Xml.XmlWriter" /> a été appelée avant la fin d’une opération asynchrone précédente. Dans ce cas, l’exception <see cref="T:System.InvalidOperationException" /> est levée avec le message « Une opération asynchrone est déjà en cours ».</exception>
    </member>
    <member name="M:System.Xml.XmlWriter.WriteValue(System.DateTime)">
      <summary vsli:raw="Writes a &lt;see cref=&quot;T:System.DateTime&quot; /&gt; value.">Écrit une valeur <see cref="T:System.DateTime" />.</summary>
      <param name="value" vsli:raw="The &lt;see cref=&quot;T:System.DateTime&quot; /&gt; value to write.">La valeur <see cref="T:System.DateTime" /> à écrire.</param>
      <exception cref="T:System.ArgumentException" vsli:raw="An invalid value was specified.">Une valeur non valide a été spécifiée.</exception>
      <exception cref="T:System.InvalidOperationException" vsli:raw="An &lt;see cref=&quot;T:System.Xml.XmlWriter&quot; /&gt; method was called before a previous asynchronous operation finished. In this case, &lt;see cref=&quot;T:System.InvalidOperationException&quot; /&gt; is thrown with the message &quot;An asynchronous operation is already in progress.&quot;">Une méthode <see cref="T:System.Xml.XmlWriter" /> a été appelée avant la fin d’une opération asynchrone précédente. Dans ce cas, l’exception <see cref="T:System.InvalidOperationException" /> est levée avec le message « Une opération asynchrone est déjà en cours ».</exception>
    </member>
    <member name="M:System.Xml.XmlWriter.WriteValue(System.DateTimeOffset)">
      <summary vsli:raw="Writes a &lt;see cref=&quot;T:System.DateTimeOffset&quot; /&gt; value.">Écrit une valeur <see cref="T:System.DateTimeOffset" />.</summary>
      <param name="value" vsli:raw="The &lt;see cref=&quot;T:System.DateTimeOffset&quot; /&gt; value to write.">La valeur <see cref="T:System.DateTimeOffset" /> à écrire.</param>
      <exception cref="T:System.InvalidOperationException" vsli:raw="An &lt;see cref=&quot;T:System.Xml.XmlWriter&quot; /&gt; method was called before a previous asynchronous operation finished. In this case, &lt;see cref=&quot;T:System.InvalidOperationException&quot; /&gt; is thrown with the message &quot;An asynchronous operation is already in progress.&quot;">Une méthode <see cref="T:System.Xml.XmlWriter" /> a été appelée avant la fin d’une opération asynchrone précédente. Dans ce cas, l’exception <see cref="T:System.InvalidOperationException" /> est levée avec le message « Une opération asynchrone est déjà en cours ».</exception>
    </member>
    <member name="M:System.Xml.XmlWriter.WriteValue(System.Decimal)">
      <summary vsli:raw="Writes a &lt;see cref=&quot;T:System.Decimal&quot; /&gt; value.">Écrit une valeur <see cref="T:System.Decimal" />.</summary>
      <param name="value" vsli:raw="The &lt;see cref=&quot;T:System.Decimal&quot; /&gt; value to write.">La valeur <see cref="T:System.Decimal" /> à écrire.</param>
      <exception cref="T:System.ArgumentException" vsli:raw="An invalid value was specified.">Une valeur non valide a été spécifiée.</exception>
      <exception cref="T:System.InvalidOperationException" vsli:raw="An &lt;see cref=&quot;T:System.Xml.XmlWriter&quot; /&gt; method was called before a previous asynchronous operation finished. In this case, &lt;see cref=&quot;T:System.InvalidOperationException&quot; /&gt; is thrown with the message &quot;An asynchronous operation is already in progress.&quot;">Une méthode <see cref="T:System.Xml.XmlWriter" /> a été appelée avant la fin d’une opération asynchrone précédente. Dans ce cas, l’exception <see cref="T:System.InvalidOperationException" /> est levée avec le message « Une opération asynchrone est déjà en cours ».</exception>
    </member>
    <member name="M:System.Xml.XmlWriter.WriteValue(System.Double)">
      <summary vsli:raw="Writes a &lt;see cref=&quot;T:System.Double&quot; /&gt; value.">Écrit une valeur <see cref="T:System.Double" />.</summary>
      <param name="value" vsli:raw="The &lt;see cref=&quot;T:System.Double&quot; /&gt; value to write.">La valeur <see cref="T:System.Double" /> à écrire.</param>
      <exception cref="T:System.ArgumentException" vsli:raw="An invalid value was specified.">Une valeur non valide a été spécifiée.</exception>
      <exception cref="T:System.InvalidOperationException" vsli:raw="An &lt;see cref=&quot;T:System.Xml.XmlWriter&quot; /&gt; method was called before a previous asynchronous operation finished. In this case, &lt;see cref=&quot;T:System.InvalidOperationException&quot; /&gt; is thrown with the message &quot;An asynchronous operation is already in progress.&quot;">Une méthode <see cref="T:System.Xml.XmlWriter" /> a été appelée avant la fin d’une opération asynchrone précédente. Dans ce cas, l’exception <see cref="T:System.InvalidOperationException" /> est levée avec le message « Une opération asynchrone est déjà en cours ».</exception>
    </member>
    <member name="M:System.Xml.XmlWriter.WriteValue(System.Int32)">
      <summary vsli:raw="Writes a &lt;see cref=&quot;T:System.Int32&quot; /&gt; value.">Écrit une valeur <see cref="T:System.Int32" />.</summary>
      <param name="value" vsli:raw="The &lt;see cref=&quot;T:System.Int32&quot; /&gt; value to write.">La valeur <see cref="T:System.Int32" /> à écrire.</param>
      <exception cref="T:System.ArgumentException" vsli:raw="An invalid value was specified.">Une valeur non valide a été spécifiée.</exception>
      <exception cref="T:System.InvalidOperationException" vsli:raw="An &lt;see cref=&quot;T:System.Xml.XmlWriter&quot; /&gt; method was called before a previous asynchronous operation finished. In this case, &lt;see cref=&quot;T:System.InvalidOperationException&quot; /&gt; is thrown with the message &quot;An asynchronous operation is already in progress.&quot;">Une méthode <see cref="T:System.Xml.XmlWriter" /> a été appelée avant la fin d’une opération asynchrone précédente. Dans ce cas, l’exception <see cref="T:System.InvalidOperationException" /> est levée avec le message « Une opération asynchrone est déjà en cours ».</exception>
    </member>
    <member name="M:System.Xml.XmlWriter.WriteValue(System.Int64)">
      <summary vsli:raw="Writes a &lt;see cref=&quot;T:System.Int64&quot; /&gt; value.">Écrit une valeur <see cref="T:System.Int64" />.</summary>
      <param name="value" vsli:raw="The &lt;see cref=&quot;T:System.Int64&quot; /&gt; value to write.">La valeur <see cref="T:System.Int64" /> à écrire.</param>
      <exception cref="T:System.ArgumentException" vsli:raw="An invalid value was specified.">Une valeur non valide a été spécifiée.</exception>
      <exception cref="T:System.InvalidOperationException" vsli:raw="An &lt;see cref=&quot;T:System.Xml.XmlWriter&quot; /&gt; method was called before a previous asynchronous operation finished. In this case, &lt;see cref=&quot;T:System.InvalidOperationException&quot; /&gt; is thrown with the message &quot;An asynchronous operation is already in progress.&quot;">Une méthode <see cref="T:System.Xml.XmlWriter" /> a été appelée avant la fin d’une opération asynchrone précédente. Dans ce cas, l’exception <see cref="T:System.InvalidOperationException" /> est levée avec le message « Une opération asynchrone est déjà en cours ».</exception>
    </member>
    <member name="M:System.Xml.XmlWriter.WriteValue(System.Object)">
      <summary vsli:raw="Writes the object value.">Écrit la valeur de l'objet.</summary>
      <param name="value" vsli:raw="The object value to write.  &#xA;  &#xA; Note With the release of the .NET Framework 3.5, this method accepts &lt;see cref=&quot;T:System.DateTimeOffset&quot; /&gt; as a parameter.">Valeur de l'objet à écrire.  
  
 Remarque Avec le .NET Framework version 3.5, cette méthode accepte <see cref="T:System.DateTimeOffset" /> en tant que paramètre.</param>
      <exception cref="T:System.ArgumentException" vsli:raw="An invalid value was specified.">Une valeur non valide a été spécifiée.</exception>
      <exception cref="T:System.ArgumentNullException" vsli:raw="The &lt;paramref name=&quot;value&quot; /&gt; is &lt;see langword=&quot;null&quot; /&gt;.">
        <paramref name="value" /> a la valeur <see langword="null" />.</exception>
      <exception cref="T:System.InvalidOperationException" vsli:raw="The writer is closed or in error state.&#xA;&#xA;-or-&#xA;&#xA;An &lt;see cref=&quot;T:System.Xml.XmlWriter&quot; /&gt; method was called before a previous asynchronous operation finished. In this case, &lt;see cref=&quot;T:System.InvalidOperationException&quot; /&gt; is thrown with the message &quot;An asynchronous operation is already in progress.&quot;">Le Writer est fermé ou a l'état d'erreur.

- ou -

Une méthode <see cref="T:System.Xml.XmlWriter" /> a été appelée avant la fin d’une opération asynchrone précédente. Dans ce cas, l’exception <see cref="T:System.InvalidOperationException" /> est levée avec le message « Une opération asynchrone est déjà en cours ».</exception>
    </member>
    <member name="M:System.Xml.XmlWriter.WriteValue(System.Single)">
      <summary vsli:raw="Writes a single-precision floating-point number.">Écrit un nombre à virgule flottante simple précision.</summary>
      <param name="value" vsli:raw="The single-precision floating-point number to write.">Nombre à virgule flottante simple précision à écrire.</param>
      <exception cref="T:System.ArgumentException" vsli:raw="An invalid value was specified.">Une valeur non valide a été spécifiée.</exception>
      <exception cref="T:System.InvalidOperationException" vsli:raw="An &lt;see cref=&quot;T:System.Xml.XmlWriter&quot; /&gt; method was called before a previous asynchronous operation finished. In this case, &lt;see cref=&quot;T:System.InvalidOperationException&quot; /&gt; is thrown with the message &quot;An asynchronous operation is already in progress.&quot;">Une méthode <see cref="T:System.Xml.XmlWriter" /> a été appelée avant la fin d’une opération asynchrone précédente. Dans ce cas, l’exception <see cref="T:System.InvalidOperationException" /> est levée avec le message « Une opération asynchrone est déjà en cours ».</exception>
    </member>
    <member name="M:System.Xml.XmlWriter.WriteValue(System.String)">
      <summary vsli:raw="Writes a &lt;see cref=&quot;T:System.String&quot; /&gt; value.">Écrit une valeur <see cref="T:System.String" />.</summary>
      <param name="value" vsli:raw="The &lt;see cref=&quot;T:System.String&quot; /&gt; value to write.">La valeur <see cref="T:System.String" /> à écrire.</param>
      <exception cref="T:System.ArgumentException" vsli:raw="An invalid value was specified.">Une valeur non valide a été spécifiée.</exception>
      <exception cref="T:System.InvalidOperationException" vsli:raw="An &lt;see cref=&quot;T:System.Xml.XmlWriter&quot; /&gt; method was called before a previous asynchronous operation finished. In this case, &lt;see cref=&quot;T:System.InvalidOperationException&quot; /&gt; is thrown with the message &quot;An asynchronous operation is already in progress.&quot;">Une méthode <see cref="T:System.Xml.XmlWriter" /> a été appelée avant la fin d’une opération asynchrone précédente. Dans ce cas, l’exception <see cref="T:System.InvalidOperationException" /> est levée avec le message « Une opération asynchrone est déjà en cours ».</exception>
    </member>
    <member name="M:System.Xml.XmlWriter.WriteWhitespace(System.String)">
      <summary vsli:raw="When overridden in a derived class, writes out the given white space.">En cas de substitution dans une classe dérivée, écrit l'espace blanc spécifié.</summary>
      <param name="ws" vsli:raw="The string of white space characters.">Chaîne d'espaces blancs.</param>
      <exception cref="T:System.ArgumentException" vsli:raw="The string contains non-white space characters.">La chaîne contient des caractères qui ne sont pas des espaces blancs.</exception>
      <exception cref="T:System.InvalidOperationException" vsli:raw="An &lt;see cref=&quot;T:System.Xml.XmlWriter&quot; /&gt; method was called before a previous asynchronous operation finished. In this case, &lt;see cref=&quot;T:System.InvalidOperationException&quot; /&gt; is thrown with the message &quot;An asynchronous operation is already in progress.&quot;">Une méthode <see cref="T:System.Xml.XmlWriter" /> a été appelée avant la fin d’une opération asynchrone précédente. Dans ce cas, l’exception <see cref="T:System.InvalidOperationException" /> est levée avec le message « Une opération asynchrone est déjà en cours ».</exception>
    </member>
    <member name="M:System.Xml.XmlWriter.WriteWhitespaceAsync(System.String)">
      <summary vsli:raw="Asynchronously writes out the given white space.">Écrit de façon asynchrone l'espace blanc spécifié.</summary>
      <param name="ws" vsli:raw="The string of white space characters.">Chaîne d'espaces blancs.</param>
      <exception cref="T:System.InvalidOperationException" vsli:raw="An &lt;see cref=&quot;T:System.Xml.XmlWriter&quot; /&gt; method was called before a previous asynchronous operation finished. In this case, &lt;see cref=&quot;T:System.InvalidOperationException&quot; /&gt; is thrown with the message &quot;An asynchronous operation is already in progress.&quot;&#xA;&#xA;-or-&#xA;&#xA;An &lt;see cref=&quot;T:System.Xml.XmlWriter&quot; /&gt; asynchronous method was called without setting the &lt;see cref=&quot;P:System.Xml.XmlWriterSettings.Async&quot; /&gt; flag to &lt;see langword=&quot;true&quot; /&gt;. In this case, &lt;see cref=&quot;T:System.InvalidOperationException&quot; /&gt; is thrown with the message &quot;Set XmlWriterSettings.Async to true if you want to use Async Methods.&quot;">Une méthode <see cref="T:System.Xml.XmlWriter" /> a été appelée avant la fin d’une opération asynchrone précédente. Dans ce cas, l’exception <see cref="T:System.InvalidOperationException" /> est levée avec le message « Une opération asynchrone est déjà en cours ».

- ou -

Une méthode asynchrone <see cref="T:System.Xml.XmlWriter" /> a été appelée sans définir l’indicateur <see cref="P:System.Xml.XmlWriterSettings.Async" /> sur <see langword="true" />. Dans ce cas, <see cref="T:System.InvalidOperationException" /> est levée avec le message « Attribuez à XmlReaderSettings.Async la valeur True si vous voulez utiliser des méthodes asynchrones ».</exception>
      <returns vsli:raw="The task that represents the asynchronous &lt;see langword=&quot;WriteWhitespace&quot; /&gt; operation.">Tâche qui représente l'opération <see langword="WriteWhitespace" /> asynchrone.</returns>
    </member>
    <member name="P:System.Xml.XmlWriter.Settings">
      <summary vsli:raw="Gets the &lt;see cref=&quot;T:System.Xml.XmlWriterSettings&quot; /&gt; object used to create this &lt;see cref=&quot;T:System.Xml.XmlWriter&quot; /&gt; instance.">Obtient l'objet <see cref="T:System.Xml.XmlWriterSettings" /> permettant de créer cette instance de <see cref="T:System.Xml.XmlWriter" />.</summary>
      <exception cref="T:System.InvalidOperationException" vsli:raw="An &lt;see cref=&quot;T:System.Xml.XmlWriter&quot; /&gt; method was called before a previous asynchronous operation finished. In this case, &lt;see cref=&quot;T:System.InvalidOperationException&quot; /&gt; is thrown with the message &quot;An asynchronous operation is already in progress.&quot;">Une méthode <see cref="T:System.Xml.XmlWriter" /> a été appelée avant la fin d’une opération asynchrone précédente. Dans ce cas, l’exception <see cref="T:System.InvalidOperationException" /> est levée avec le message « Une opération asynchrone est déjà en cours ».</exception>
      <returns vsli:raw="The &lt;see cref=&quot;T:System.Xml.XmlWriterSettings&quot; /&gt; object used to create this writer instance. If this writer was not created using the &lt;see cref=&quot;Overload:System.Xml.XmlWriter.Create&quot; /&gt; method, this property returns &lt;see langword=&quot;null&quot; /&gt;.">Objet <see cref="T:System.Xml.XmlWriterSettings" /> permettant de créer cette instance de writer. Si ce writer n'a pas été créé à l'aide de la méthode <see cref="Overload:System.Xml.XmlWriter.Create" />, cette propriété retourne <see langword="null" />.</returns>
    </member>
    <member name="P:System.Xml.XmlWriter.WriteState">
      <summary vsli:raw="When overridden in a derived class, gets the state of the writer.">En cas de substitution dans une classe dérivée, obtient l'état du writer.</summary>
      <exception cref="T:System.InvalidOperationException" vsli:raw="An &lt;see cref=&quot;T:System.Xml.XmlWriter&quot; /&gt; method was called before a previous asynchronous operation finished. In this case, &lt;see cref=&quot;T:System.InvalidOperationException&quot; /&gt; is thrown with the message &quot;An asynchronous operation is already in progress.&quot;">Une méthode <see cref="T:System.Xml.XmlWriter" /> a été appelée avant la fin d’une opération asynchrone précédente. Dans ce cas, l’exception <see cref="T:System.InvalidOperationException" /> est levée avec le message « Une opération asynchrone est déjà en cours ».</exception>
      <returns vsli:raw="One of the &lt;see cref=&quot;T:System.Xml.WriteState&quot; /&gt; values.">Une des valeurs de l'objet <see cref="T:System.Xml.WriteState" />.</returns>
    </member>
    <member name="P:System.Xml.XmlWriter.XmlLang">
      <summary vsli:raw="When overridden in a derived class, gets the current &lt;see langword=&quot;xml:lang&quot; /&gt; scope.">En cas de substitution dans une classe dérivée, obtient la portée <see langword="xml:lang" /> en cours.</summary>
      <exception cref="T:System.InvalidOperationException" vsli:raw="An &lt;see cref=&quot;T:System.Xml.XmlWriter&quot; /&gt; method was called before a previous asynchronous operation finished. In this case, &lt;see cref=&quot;T:System.InvalidOperationException&quot; /&gt; is thrown with the message &quot;An asynchronous operation is already in progress.&quot;">Une méthode <see cref="T:System.Xml.XmlWriter" /> a été appelée avant la fin d’une opération asynchrone précédente. Dans ce cas, l’exception <see cref="T:System.InvalidOperationException" /> est levée avec le message « Une opération asynchrone est déjà en cours ».</exception>
      <returns vsli:raw="The current &lt;see langword=&quot;xml:lang&quot; /&gt; scope.">Portée de <see langword="xml:lang" /> actuelle.</returns>
    </member>
    <member name="P:System.Xml.XmlWriter.XmlSpace">
      <summary vsli:raw="When overridden in a derived class, gets an &lt;see cref=&quot;T:System.Xml.XmlSpace&quot; /&gt; representing the current &lt;see langword=&quot;xml:space&quot; /&gt; scope.">En cas de substitution dans une classe dérivée, obtient <see cref="T:System.Xml.XmlSpace" /> représentant la portée <see langword="xml:space" /> en cours.</summary>
      <exception cref="T:System.InvalidOperationException" vsli:raw="An &lt;see cref=&quot;T:System.Xml.XmlWriter&quot; /&gt; method was called before a previous asynchronous operation finished. In this case, &lt;see cref=&quot;T:System.InvalidOperationException&quot; /&gt; is thrown with the message &quot;An asynchronous operation is already in progress.&quot;">Une méthode <see cref="T:System.Xml.XmlWriter" /> a été appelée avant la fin d’une opération asynchrone précédente. Dans ce cas, l’exception <see cref="T:System.InvalidOperationException" /> est levée avec le message « Une opération asynchrone est déjà en cours ».</exception>
      <returns vsli:raw="An &lt;see langword=&quot;XmlSpace&quot; /&gt; representing the current &lt;see langword=&quot;xml:space&quot; /&gt; scope.  &#xA;  &#xA; &lt;list type=&quot;table&quot;&gt;&lt;listheader&gt;&lt;term&gt; Value&lt;/term&gt;&lt;description&gt; Meaning&lt;/description&gt;&lt;/listheader&gt;&lt;item&gt;&lt;term&gt;&lt;see langword=&quot;None&quot; /&gt;&lt;/term&gt;&lt;description&gt; This is the default if no &lt;see langword=&quot;xml:space&quot; /&gt; scope exists.&lt;/description&gt;&lt;/item&gt;&lt;item&gt;&lt;term&gt;&lt;see langword=&quot;Default&quot; /&gt;&lt;/term&gt;&lt;description&gt; The current scope is &lt;see langword=&quot;xml:space&quot; /&gt;=&quot;default&quot;.&lt;/description&gt;&lt;/item&gt;&lt;item&gt;&lt;term&gt;&lt;see langword=&quot;Preserve&quot; /&gt;&lt;/term&gt;&lt;description&gt; The current scope is &lt;see langword=&quot;xml:space&quot; /&gt;=&quot;preserve&quot;.&lt;/description&gt;&lt;/item&gt;&lt;/list&gt;">Obtient un <see langword="XmlSpace" /> représentant la portée <see langword="xml:space" /> en cours.  
  
 <list type="table"><listheader><term> Value</term><description> Signification</description></listheader><item><term><see langword="None" /></term><description> Valeur par défaut si aucune portée <see langword="xml:space" /> n'existe.</description></item><item><term><see langword="Default" /></term><description> La portée actuelle est <see langword="xml:space" />= "default".</description></item><item><term><see langword="Preserve" /></term><description> La portée actuelle est <see langword="xml:space" />= "preserve".</description></item></list></returns>
    </member>
    <member name="T:System.Xml.XmlWriterSettings">
      <summary vsli:raw="Specifies a set of features to support on the &lt;see cref=&quot;T:System.Xml.XmlWriter&quot; /&gt; object created by the &lt;see cref=&quot;Overload:System.Xml.XmlWriter.Create&quot; /&gt; method.">Spécifie un jeu de fonctionnalités à prendre en charge sur l'objet <see cref="T:System.Xml.XmlWriter" /> créé par la méthode <see cref="Overload:System.Xml.XmlWriter.Create" />.</summary>
    </member>
    <member name="M:System.Xml.XmlWriterSettings.#ctor">
      <summary vsli:raw="Initializes a new instance of the &lt;see cref=&quot;T:System.Xml.XmlWriterSettings&quot; /&gt; class.">Initialise une nouvelle instance de la classe <see cref="T:System.Xml.XmlWriterSettings" />.</summary>
    </member>
    <member name="M:System.Xml.XmlWriterSettings.Clone">
      <summary vsli:raw="Creates a copy of the &lt;see cref=&quot;T:System.Xml.XmlWriterSettings&quot; /&gt; instance.">Crée une copie de l'instance <see cref="T:System.Xml.XmlWriterSettings" />.</summary>
      <returns vsli:raw="The cloned &lt;see cref=&quot;T:System.Xml.XmlWriterSettings&quot; /&gt; object.">Objet <see cref="T:System.Xml.XmlWriterSettings" /> cloné.</returns>
    </member>
    <member name="M:System.Xml.XmlWriterSettings.Reset">
      <summary vsli:raw="Resets the members of the settings class to their default values.">Réinitialise les membres de la classe de paramètres à leurs valeurs par défaut.</summary>
    </member>
    <member name="P:System.Xml.XmlWriterSettings.Async">
      <summary vsli:raw="Gets or sets a value that indicates whether asynchronous &lt;see cref=&quot;T:System.Xml.XmlWriter&quot; /&gt; methods can be used on a particular &lt;see cref=&quot;T:System.Xml.XmlWriter&quot; /&gt; instance.">Obtient ou définit une valeur qui indique si les méthodes <see cref="T:System.Xml.XmlWriter" /> asynchrones peuvent être utilisées sur une instance <see cref="T:System.Xml.XmlWriter" /> particulière.</summary>
      <returns vsli:raw="&lt;see langword=&quot;true&quot; /&gt; if asynchronous methods can be used; otherwise, &lt;see langword=&quot;false&quot; /&gt;.">
        <see langword="true" /> si des méthodes asynchrones peuvent être utilisées ; sinon, <see langword="false" />.</returns>
    </member>
    <member name="P:System.Xml.XmlWriterSettings.CheckCharacters">
      <summary vsli:raw="Gets or sets a value that indicates whether the XML writer should check to ensure that all characters in the document conform to the &quot;2.2 Characters&quot; section of the W3C XML 1.0 Recommendation.">Obtient ou définit une valeur qui indique si le writer XML doit vérifier que tous les caractères du document sont conformes à la section « 2.2 Characters » de la recommandation W3C sur XML 1.0.</summary>
      <returns vsli:raw="&lt;see langword=&quot;true&quot; /&gt; to do character checking; otherwise, &lt;see langword=&quot;false&quot; /&gt;. The default is &lt;see langword=&quot;true&quot; /&gt;.">
        <see langword="true" /> pour assurer la vérification des caractères ; sinon, <see langword="false" />. La valeur par défaut est <see langword="true" />.</returns>
    </member>
    <member name="P:System.Xml.XmlWriterSettings.CloseOutput">
      <summary vsli:raw="Gets or sets a value indicating whether the &lt;see cref=&quot;T:System.Xml.XmlWriter&quot; /&gt; should also close the underlying stream or &lt;see cref=&quot;T:System.IO.TextWriter&quot; /&gt; when the &lt;see cref=&quot;M:System.Xml.XmlWriter.Close&quot; /&gt; method is called.">Obtient ou définit une valeur indiquant si <see cref="T:System.Xml.XmlWriter" /> doit également fermer le flux sous-jacent ou <see cref="T:System.IO.TextWriter" /> lorsque la méthode <see cref="M:System.Xml.XmlWriter.Close" /> est appelée.</summary>
      <returns vsli:raw="&lt;see langword=&quot;true&quot; /&gt; to also close the underlying stream or &lt;see cref=&quot;T:System.IO.TextWriter&quot; /&gt;; otherwise, &lt;see langword=&quot;false&quot; /&gt;. The default is &lt;see langword=&quot;false&quot; /&gt;.">
        <see langword="true" /> pour également fermer le flux sous-jacent ou <see cref="T:System.IO.TextWriter" /> ; sinon, <see langword="false" />. La valeur par défaut est <see langword="false" />.</returns>
    </member>
    <member name="P:System.Xml.XmlWriterSettings.ConformanceLevel">
      <summary vsli:raw="Gets or sets the level of conformance that the XML writer checks the XML output for.">Obtient ou définit le niveau de conformité de vérification de sortie XML du writer XML.</summary>
      <returns vsli:raw="One of the enumeration values that specifies the level of conformance (document, fragment, or automatic detection). The default is &lt;see cref=&quot;F:System.Xml.ConformanceLevel.Document&quot; /&gt;.">Une des valeurs d'énumération qui spécifie le niveau de conformité (document, fragment ou détection automatique). La valeur par défaut est <see cref="F:System.Xml.ConformanceLevel.Document" />.</returns>
    </member>
    <member name="P:System.Xml.XmlWriterSettings.DoNotEscapeUriAttributes">
      <summary vsli:raw="Gets or sets a value that indicates whether the &lt;see cref=&quot;T:System.Xml.XmlWriter&quot; /&gt; does not escape URI attributes.">Obtient ou définit une valeur qui indique si le <see cref="T:System.Xml.XmlWriter" /> ne place pas les attributs d'URI dans des séquences d’échappement.</summary>
      <returns vsli:raw="&lt;see langword=&quot;true&quot; /&gt; if the &lt;see cref=&quot;T:System.Xml.XmlWriter&quot; /&gt; does not escape URI attributes; otherwise, &lt;see langword=&quot;false&quot; /&gt;. The default is &lt;see langword=&quot;false&quot; /&gt;.">
        <see langword="true" /> Si le <see cref="T:System.Xml.XmlWriter" /> n’échappe pas les attributs d’URI ; sinon, <see langword="false" /> . La valeur par défaut est <see langword="false" />.</returns>
    </member>
    <member name="P:System.Xml.XmlWriterSettings.Encoding">
      <summary vsli:raw="Gets or sets the type of text encoding to use.">Obtient ou définit le type d'encodage de texte à utiliser.</summary>
      <returns vsli:raw="The text encoding to use. The default is &lt;see langword=&quot;Encoding.UTF8&quot; /&gt;.">Encodage de texte à utiliser. La valeur par défaut est <see langword="Encoding.UTF8" />.</returns>
    </member>
    <member name="P:System.Xml.XmlWriterSettings.Indent">
      <summary vsli:raw="Gets or sets a value indicating whether to indent elements.">Obtient ou définit une valeur indiquant si les éléments doivent être mis en retrait.</summary>
      <returns vsli:raw="&lt;see langword=&quot;true&quot; /&gt; to write individual elements on new lines and indent; otherwise, &lt;see langword=&quot;false&quot; /&gt;. The default is &lt;see langword=&quot;false&quot; /&gt;.">
        <see langword="true" /> pour écrire des éléments individuels sur de nouvelles lignes et les mettre en retrait ; sinon, <see langword="false" />. La valeur par défaut est <see langword="false" />.</returns>
    </member>
    <member name="P:System.Xml.XmlWriterSettings.IndentChars">
      <summary vsli:raw="Gets or sets the character string to use when indenting. This setting is used when the &lt;see cref=&quot;P:System.Xml.XmlWriterSettings.Indent&quot; /&gt; property is set to &lt;see langword=&quot;true&quot; /&gt;.">Obtient ou définit la chaîne de caractères à utiliser au moment de la mise en retrait. Ce paramètre est utilisé lorsque la propriété <see cref="P:System.Xml.XmlWriterSettings.Indent" /> a la valeur <see langword="true" />.</summary>
      <exception cref="T:System.ArgumentNullException" vsli:raw="The value assigned to the &lt;see cref=&quot;P:System.Xml.XmlWriterSettings.IndentChars&quot; /&gt; is &lt;see langword=&quot;null&quot; /&gt;.">La valeur assignée à <see cref="P:System.Xml.XmlWriterSettings.IndentChars" /> est <see langword="null" />.</exception>
      <returns vsli:raw="The character string to use when indenting. This can be set to any string value. However, to ensure valid XML, you should specify only valid white space characters, such as space characters, tabs, carriage returns, or line feeds. The default is two spaces.">Chaîne de caractères à utiliser au moment de la mise en retrait. Elle peut avoir n'importe quelle valeur de chaîne. Toutefois, pour garantir la validité du XML, vous devez spécifier uniquement des caractères d'espace blanc valides, tels que les espaces, les tabulations, les retours chariot ou les sauts de ligne. Par défaut, il s'agit de deux espaces.</returns>
    </member>
    <member name="P:System.Xml.XmlWriterSettings.NamespaceHandling">
      <summary vsli:raw="Gets or sets a value that indicates whether the &lt;see cref=&quot;T:System.Xml.XmlWriter&quot; /&gt; should remove duplicate namespace declarations when writing XML content. The default behavior is for the writer to output all namespace declarations that are present in the writer's namespace resolver.">Obtient ou définit une valeur qui indique si <see cref="T:System.Xml.XmlWriter" /> doit supprimer des déclarations d'espace de noms en double lors de l'écriture du contenu XML. Le comportement par défaut consiste pour le writer à générer la sortie de toutes les déclarations d'espace de noms qui sont présentes dans le programme de résolution d'espace de noms du writer.</summary>
      <returns vsli:raw="The &lt;see cref=&quot;T:System.Xml.NamespaceHandling&quot; /&gt; enumeration used to specify whether to remove duplicate namespace declarations in the &lt;see cref=&quot;T:System.Xml.XmlWriter&quot; /&gt;.">L'énumération <see cref="T:System.Xml.NamespaceHandling" /> utilisée pour spécifier s'il faut supprimer les déclarations d'espace de noms en double dans le <see cref="T:System.Xml.XmlWriter" />.</returns>
    </member>
    <member name="P:System.Xml.XmlWriterSettings.NewLineChars">
      <summary vsli:raw="Gets or sets the character string to use for line breaks.">Obtient ou définit la chaîne de caractères à utiliser pour les sauts de ligne.</summary>
      <exception cref="T:System.ArgumentNullException" vsli:raw="The value assigned to the &lt;see cref=&quot;P:System.Xml.XmlWriterSettings.NewLineChars&quot; /&gt; is &lt;see langword=&quot;null&quot; /&gt;.">La valeur assignée à <see cref="P:System.Xml.XmlWriterSettings.NewLineChars" /> est <see langword="null" />.</exception>
      <returns vsli:raw="The character string to use for line breaks. This can be set to any string value. However, to ensure valid XML, you should specify only valid white space characters, such as space characters, tabs, carriage returns, or line feeds. The default is &lt;c&gt;\r\n&lt;/c&gt; (carriage return, new line) for non-Unix platforms, and &lt;c&gt;\n&lt;/c&gt; (new line) for Unix platforms.">Chaîne de caractères à utiliser pour les sauts de ligne. Elle peut avoir n'importe quelle valeur de chaîne. Toutefois, pour garantir la validité du XML, vous devez spécifier uniquement des caractères d'espace blanc valides, tels que les espaces, les tabulations, les retours chariot ou les sauts de ligne. La valeur par défaut est <c>\r\n</c> (retour chariot, nouvelle ligne).</returns>
    </member>
    <member name="P:System.Xml.XmlWriterSettings.NewLineHandling">
      <summary vsli:raw="Gets or sets a value indicating whether to normalize line breaks in the output.">Obtient ou définit une valeur indiquant s'il convient de normaliser des sauts de ligne dans la sortie.</summary>
      <returns vsli:raw="One of the &lt;see cref=&quot;T:System.Xml.NewLineHandling&quot; /&gt; values. The default is &lt;see cref=&quot;F:System.Xml.NewLineHandling.Replace&quot; /&gt;.">Une des valeurs de l'objet <see cref="T:System.Xml.NewLineHandling" />. La valeur par défaut est <see cref="F:System.Xml.NewLineHandling.Replace" />.</returns>
    </member>
    <member name="P:System.Xml.XmlWriterSettings.NewLineOnAttributes">
      <summary vsli:raw="Gets or sets a value indicating whether to write attributes on a new line.">Obtient ou définit une valeur indiquant s'il convient d'écrire des attributs sur une nouvelle ligne.</summary>
      <returns vsli:raw="&lt;see langword=&quot;true&quot; /&gt; to write attributes on individual lines; otherwise, &lt;see langword=&quot;false&quot; /&gt;. The default is &lt;see langword=&quot;false&quot; /&gt;.">
        <see langword="true" /> pour écrire des attributs sur des lignes ; sinon, <see langword="false" />. La valeur par défaut est <see langword="false" />.  
  
 <block subset="none" type="note"><para>  
 Ce paramètre n'a aucun effet si la propriété <see cref="P:System.Xml.XmlWriterSettings.Indent" /> a la valeur <see langword="false" />.</para></block>  
  
 Lorsque <see cref="P:System.Xml.XmlWriterSettings.NewLineOnAttributes" /> a la valeur <see langword="true" />, chaque attribut est ajouté avec une nouvelle ligne et un niveau supplémentaire de mise en retrait.</returns>
    </member>
    <member name="P:System.Xml.XmlWriterSettings.OmitXmlDeclaration">
      <summary vsli:raw="Gets or sets a value indicating whether to omit an XML declaration.">Obtient ou définit une valeur indiquant si une déclaration XML doit être omise.</summary>
      <returns vsli:raw="&lt;see langword=&quot;true&quot; /&gt; to omit the XML declaration; otherwise, &lt;see langword=&quot;false&quot; /&gt;. The default is &lt;see langword=&quot;false&quot; /&gt;, an XML declaration is written.">
        <see langword="true" /> pour omettre la déclaration XML ; sinon, <see langword="false" />. La valeur par défaut est <see langword="false" />, une déclaration XML est écrite.</returns>
    </member>
    <member name="P:System.Xml.XmlWriterSettings.OutputMethod">
      <summary vsli:raw="Gets the method used to serialize the &lt;see cref=&quot;T:System.Xml.XmlWriter&quot; /&gt; output.">Obtient la méthode utilisée pour sérialiser la sortie <see cref="T:System.Xml.XmlWriter" />.</summary>
      <returns vsli:raw="One of the &lt;see cref=&quot;T:System.Xml.XmlOutputMethod&quot; /&gt; values. The default is &lt;see cref=&quot;F:System.Xml.XmlOutputMethod.Xml&quot; /&gt;.">Une des valeurs de l'objet <see cref="T:System.Xml.XmlOutputMethod" />. La valeur par défaut est <see cref="F:System.Xml.XmlOutputMethod.Xml" />.</returns>
    </member>
    <member name="P:System.Xml.XmlWriterSettings.WriteEndDocumentOnClose">
      <summary vsli:raw="Gets or sets a value that indicates whether the &lt;see cref=&quot;T:System.Xml.XmlWriter&quot; /&gt; will add closing tags to all unclosed element tags when the &lt;see cref=&quot;M:System.Xml.XmlWriter.Close&quot; /&gt; method is called.">Obtient ou définit une valeur qui indique si <see cref="T:System.Xml.XmlWriter" /> ajoutera des indicateurs de fermeture à tous les indicateurs d'éléments non fermés lorsque la méthode <see cref="M:System.Xml.XmlWriter.Close" /> est appelée.</summary>
      <returns vsli:raw="&lt;see langword=&quot;true&quot; /&gt; if all unclosed element tags will be closed out; otherwise, &lt;see langword=&quot;false&quot; /&gt;. The default value is &lt;see langword=&quot;true&quot; /&gt;.">
        <see langword="true" /> si toutes les balises d'élément non fermées seront fermées ; sinon, <see langword="false" />. La valeur par défaut est <see langword="true" />.</returns>
    </member>
    <member name="T:System.Xml.XPath.IXPathNavigable">
      <summary vsli:raw="Provides an accessor to the &lt;see cref=&quot;T:System.Xml.XPath.XPathNavigator&quot; /&gt; class.">Fournit un accesseur à la classe <see cref="T:System.Xml.XPath.XPathNavigator" />.</summary>
    </member>
    <member name="M:System.Xml.XPath.IXPathNavigable.CreateNavigator">
      <summary vsli:raw="Returns a new &lt;see cref=&quot;T:System.Xml.XPath.XPathNavigator&quot; /&gt; object.">Retourne un nouvel objet <see cref="T:System.Xml.XPath.XPathNavigator" />.</summary>
      <returns vsli:raw="An &lt;see cref=&quot;T:System.Xml.XPath.XPathNavigator&quot; /&gt; object.">Objet <see cref="T:System.Xml.XPath.XPathNavigator" />.</returns>
    </member>
    <member name="T:System.Xml.XPath.XmlCaseOrder">
      <summary vsli:raw="Specifies the sort order for uppercase and lowercase letters.">Spécifie l'ordre de tri des lettres majuscules et minuscules.</summary>
    </member>
    <member name="F:System.Xml.XPath.XmlCaseOrder.LowerFirst">
      <summary vsli:raw="Lowercase letters are sorted before uppercase letters.">Les lettres minuscules sont triées avant les lettres majuscules.</summary>
    </member>
    <member name="F:System.Xml.XPath.XmlCaseOrder.None">
      <summary vsli:raw="Ignore the case.">Ignore la casse.</summary>
    </member>
    <member name="F:System.Xml.XPath.XmlCaseOrder.UpperFirst">
      <summary vsli:raw="Uppercase letters are sorted before lowercase letters.">Les lettres majuscules sont triées avant les lettres minuscules.</summary>
    </member>
    <member name="T:System.Xml.XPath.XmlDataType">
      <summary vsli:raw="Specifies the data type used to determine sort order.">Spécifie le type de données utilisé pour déterminer l'ordre de tri.</summary>
    </member>
    <member name="F:System.Xml.XPath.XmlDataType.Number">
      <summary vsli:raw="Values are sorted numerically.">Les valeurs sont triées par ordre numérique.</summary>
    </member>
    <member name="F:System.Xml.XPath.XmlDataType.Text">
      <summary vsli:raw="Values are sorted alphabetically.">Les valeurs sont triées par ordre alphabétique.</summary>
    </member>
    <member name="T:System.Xml.XPath.XmlSortOrder">
      <summary vsli:raw="Specifies the sort order.">Spécifie l'ordre de tri.</summary>
    </member>
    <member name="F:System.Xml.XPath.XmlSortOrder.Ascending">
      <summary vsli:raw="Nodes are sorted in ascending order. For example, if the numbers 1,2,3, and 4 are sorted in ascending order, they appear as 1,2,3,4.">Les nœuds sont triés par ordre croissant. Par exemple, si les nombres 1, 2, 3 et 4 sont triés par ordre croissant, ils s'affichent dans l'ordre suivant : 1,2,3,4.</summary>
    </member>
    <member name="F:System.Xml.XPath.XmlSortOrder.Descending">
      <summary vsli:raw="Nodes are sorted in descending order. For example, if the numbers 1,2,3, and 4 are sorted in descending order, they appear as, 4,3,2,1.">Les nœuds sont triés par ordre décroissant. Par exemple, si les nombres 1, 2, 3 et 4 sont triés par ordre décroissant, ils s'affichent dans l'ordre suivant : 4,3,2,1.</summary>
    </member>
    <member name="T:System.Xml.XPath.XPathExpression">
      <summary vsli:raw="Provides a typed class that represents a compiled XPath expression.">Fournit une classe typée qui représente une expression XPath compilée.</summary>
    </member>
    <member name="M:System.Xml.XPath.XPathExpression.AddSort(System.Object,System.Collections.IComparer)">
      <summary vsli:raw="When overridden in a derived class, sorts the nodes selected by the XPath expression according to the specified &lt;see cref=&quot;T:System.Collections.IComparer&quot; /&gt; object.">En cas de substitution dans une classe dérivée, trie les nœuds sélectionnés par l'expression XPath en fonction de l'objet <see cref="T:System.Collections.IComparer" /> spécifié.</summary>
      <param name="expr" vsli:raw="An object representing the sort key. This can be the &lt;see langword=&quot;string&quot; /&gt; value of the node or an &lt;see cref=&quot;T:System.Xml.XPath.XPathExpression&quot; /&gt; object with a compiled XPath expression.">Objet représentant la clé de tri. Il peut s’agir de la valeur <see langword="string" /> du nœud ou d’un <see cref="T:System.Xml.XPath.XPathExpression" /> avec une expression XPath compilée.</param>
      <param name="comparer" vsli:raw="An &lt;see cref=&quot;T:System.Collections.IComparer&quot; /&gt; object that provides the specific data type comparisons for comparing two objects for equivalence.">Objet <see cref="T:System.Collections.IComparer" /> qui fournit les comparaisons de type de données spécifiques pour déterminer si deux objets sont équivalents.</param>
      <exception cref="T:System.Xml.XPath.XPathException" vsli:raw="The &lt;see cref=&quot;T:System.Xml.XPath.XPathExpression&quot; /&gt; or sort key includes a prefix and either an &lt;see cref=&quot;T:System.Xml.XmlNamespaceManager&quot; /&gt; is not provided, or the prefix cannot be found in the supplied &lt;see cref=&quot;T:System.Xml.XmlNamespaceManager&quot; /&gt;.">
        <see cref="T:System.Xml.XPath.XPathExpression" /> ou la clé de tri inclut un préfixe et soit un <see cref="T:System.Xml.XmlNamespaceManager" /> n’est pas fourni, soit le préfixe est introuvable dans le <see cref="T:System.Xml.XmlNamespaceManager" /> fourni.</exception>
    </member>
    <member name="M:System.Xml.XPath.XPathExpression.AddSort(System.Object,System.Xml.XPath.XmlSortOrder,System.Xml.XPath.XmlCaseOrder,System.String,System.Xml.XPath.XmlDataType)">
      <summary vsli:raw="When overridden in a derived class, sorts the nodes selected by the XPath expression according to the supplied parameters.">En cas de remplacement dans une classe dérivée, trie les nœuds sélectionnés par l’expression XPath en fonction des paramètres fournis.</summary>
      <param name="expr" vsli:raw="An object representing the sort key. This can be the &lt;see langword=&quot;string&quot; /&gt; value of the node or an &lt;see cref=&quot;T:System.Xml.XPath.XPathExpression&quot; /&gt; object with a compiled XPath expression.">Objet représentant la clé de tri. Il peut s’agir de la valeur <see langword="string" /> du nœud ou d’un <see cref="T:System.Xml.XPath.XPathExpression" /> avec une expression XPath compilée.</param>
      <param name="order" vsli:raw="An &lt;see cref=&quot;T:System.Xml.XPath.XmlSortOrder&quot; /&gt; value indicating the sort order.">Valeur <see cref="T:System.Xml.XPath.XmlSortOrder" /> indiquant l’ordre de tri.</param>
      <param name="caseOrder" vsli:raw="An &lt;see cref=&quot;T:System.Xml.XPath.XmlCaseOrder&quot; /&gt; value indicating how to sort uppercase and lowercase letters.">Valeur <see cref="T:System.Xml.XPath.XmlCaseOrder" /> indiquant la façon dont les lettres majuscules et minuscules sont triées.</param>
      <param name="lang" vsli:raw="The language to use for comparison. Uses the &lt;see cref=&quot;T:System.Globalization.CultureInfo&quot; /&gt; class that can be passed to the &lt;see cref=&quot;Overload:System.String.Compare&quot; /&gt; method for the language types, for example, &quot;us-en&quot; for U.S. English. If an empty string is specified, the system environment is used to determine the &lt;see cref=&quot;T:System.Globalization.CultureInfo&quot; /&gt;.">Langue à utiliser pour la comparaison. Utilise la classe <see cref="T:System.Globalization.CultureInfo" /> qui peut être passée à la méthode <see cref="Overload:System.String.Compare" /> pour les types de langue, par exemple, « us-en » pour l'anglais des États-Unis. Si une chaîne vide est spécifiée, l’environnement système est utilisé pour déterminer la <see cref="T:System.Globalization.CultureInfo" />.</param>
      <param name="dataType" vsli:raw="An &lt;see cref=&quot;T:System.Xml.XPath.XmlDataType&quot; /&gt; value indicating the sort order for the data type.">Valeur <see cref="T:System.Xml.XPath.XmlDataType" /> indiquant l’ordre de tri pour le type de données.</param>
      <exception cref="T:System.Xml.XPath.XPathException" vsli:raw="The &lt;see cref=&quot;T:System.Xml.XPath.XPathExpression&quot; /&gt; or sort key includes a prefix and either an &lt;see cref=&quot;T:System.Xml.XmlNamespaceManager&quot; /&gt; is not provided, or the prefix cannot be found in the supplied &lt;see cref=&quot;T:System.Xml.XmlNamespaceManager&quot; /&gt;.">
        <see cref="T:System.Xml.XPath.XPathExpression" /> ou la clé de tri inclut un préfixe et soit un <see cref="T:System.Xml.XmlNamespaceManager" /> n’est pas fourni, soit le préfixe est introuvable dans le <see cref="T:System.Xml.XmlNamespaceManager" /> fourni.</exception>
    </member>
    <member name="M:System.Xml.XPath.XPathExpression.Clone">
      <summary vsli:raw="When overridden in a derived class, returns a clone of this &lt;see cref=&quot;T:System.Xml.XPath.XPathExpression&quot; /&gt;.">En cas de substitution dans une classe dérivée, retourne un clone de <see cref="T:System.Xml.XPath.XPathExpression" />.</summary>
      <returns vsli:raw="A new &lt;see cref=&quot;T:System.Xml.XPath.XPathExpression&quot; /&gt; object.">Nouvel objet <see cref="T:System.Xml.XPath.XPathExpression" />.</returns>
    </member>
    <member name="M:System.Xml.XPath.XPathExpression.Compile(System.String)">
      <summary vsli:raw="Compiles the XPath expression specified and returns an &lt;see cref=&quot;T:System.Xml.XPath.XPathExpression&quot; /&gt; object representing the XPath expression.">Compile l’expression XPath spécifiée et retourne un objet <see cref="T:System.Xml.XPath.XPathExpression" /> représentant l’expression XPath.</summary>
      <param name="xpath" vsli:raw="An XPath expression.">Expression XPath.</param>
      <exception cref="T:System.ArgumentException" vsli:raw="The XPath expression parameter is not a valid XPath expression.">Le paramètre d’expression XPath n’est pas une expression XPath valide.</exception>
      <exception cref="T:System.Xml.XPath.XPathException" vsli:raw="The XPath expression is not valid.">L’expression XPath n’est pas valide.</exception>
      <returns vsli:raw="An &lt;see cref=&quot;T:System.Xml.XPath.XPathExpression&quot; /&gt; object.">Objet <see cref="T:System.Xml.XPath.XPathExpression" />.</returns>
    </member>
    <member name="M:System.Xml.XPath.XPathExpression.Compile(System.String,System.Xml.IXmlNamespaceResolver)">
      <summary vsli:raw="Compiles the specified XPath expression, with the &lt;see cref=&quot;T:System.Xml.IXmlNamespaceResolver&quot; /&gt; object specified for namespace resolution, and returns an &lt;see cref=&quot;T:System.Xml.XPath.XPathExpression&quot; /&gt; object that represents the XPath expression.">Compile l'expression XPath spécifiée avec l'objet <see cref="T:System.Xml.IXmlNamespaceResolver" /> spécifié pour la résolution d'espace de noms et retourne un objet <see cref="T:System.Xml.XPath.XPathExpression" /> qui représente l'expression XPath.</summary>
      <param name="xpath" vsli:raw="An XPath expression.">Expression XPath.</param>
      <param name="nsResolver" vsli:raw="An object that implements the &lt;see cref=&quot;T:System.Xml.IXmlNamespaceResolver&quot; /&gt; interface for namespace resolution.">Objet qui implémente l'interface <see cref="T:System.Xml.IXmlNamespaceResolver" /> pour la résolution d'espace de noms.</param>
      <exception cref="T:System.ArgumentException" vsli:raw="The XPath expression parameter is not a valid XPath expression.">Le paramètre d’expression XPath n’est pas une expression XPath valide.</exception>
      <exception cref="T:System.Xml.XPath.XPathException" vsli:raw="The XPath expression is not valid.">L’expression XPath n’est pas valide.</exception>
      <returns vsli:raw="An &lt;see cref=&quot;T:System.Xml.XPath.XPathExpression&quot; /&gt; object.">Objet <see cref="T:System.Xml.XPath.XPathExpression" />.</returns>
    </member>
    <member name="M:System.Xml.XPath.XPathExpression.SetContext(System.Xml.IXmlNamespaceResolver)">
      <summary vsli:raw="When overridden in a derived class, specifies the &lt;see cref=&quot;T:System.Xml.IXmlNamespaceResolver&quot; /&gt; object to use for namespace resolution.">En cas de remplacement dans une classe dérivée, spécifie l’objet <see cref="T:System.Xml.IXmlNamespaceResolver" /> à utiliser pour la résolution d’espace de noms.</summary>
      <param name="nsResolver" vsli:raw="An object that implements the &lt;see cref=&quot;T:System.Xml.IXmlNamespaceResolver&quot; /&gt; interface to use for namespace resolution.">Objet qui implémente l’interface <see cref="T:System.Xml.IXmlNamespaceResolver" /> à utiliser pour la résolution d’espace de noms.</param>
      <exception cref="T:System.Xml.XPath.XPathException" vsli:raw="The &lt;see cref=&quot;T:System.Xml.IXmlNamespaceResolver&quot; /&gt; object parameter is not derived from &lt;see cref=&quot;T:System.Xml.IXmlNamespaceResolver&quot; /&gt;.">Le paramètre de l’objet <see cref="T:System.Xml.IXmlNamespaceResolver" /> n’est pas dérivé de <see cref="T:System.Xml.IXmlNamespaceResolver" />.</exception>
    </member>
    <member name="M:System.Xml.XPath.XPathExpression.SetContext(System.Xml.XmlNamespaceManager)">
      <summary vsli:raw="When overridden in a derived class, specifies the &lt;see cref=&quot;T:System.Xml.XmlNamespaceManager&quot; /&gt; object to use for namespace resolution.">En cas de remplacement dans une classe dérivée, spécifie l’objet <see cref="T:System.Xml.XmlNamespaceManager" /> à utiliser pour la résolution d’espace de noms.</summary>
      <param name="nsManager" vsli:raw="An &lt;see cref=&quot;T:System.Xml.XmlNamespaceManager&quot; /&gt; object to use for namespace resolution.">Objet <see cref="T:System.Xml.XmlNamespaceManager" /> à utiliser pour la résolution d’espace de noms.</param>
      <exception cref="T:System.Xml.XPath.XPathException" vsli:raw="The &lt;see cref=&quot;T:System.Xml.XmlNamespaceManager&quot; /&gt; object parameter is not derived from the &lt;see cref=&quot;T:System.Xml.XmlNamespaceManager&quot; /&gt; class.">Le paramètre de l’objet <see cref="T:System.Xml.XmlNamespaceManager" /> n’est pas dérivé de la classe <see cref="T:System.Xml.XmlNamespaceManager" />.</exception>
    </member>
    <member name="P:System.Xml.XPath.XPathExpression.Expression">
      <summary vsli:raw="When overridden in a derived class, gets a &lt;see langword=&quot;string&quot; /&gt; representation of the &lt;see cref=&quot;T:System.Xml.XPath.XPathExpression&quot; /&gt;.">En cas de substitution dans une classe dérivée, obtient une représentation <see langword="string" /> de <see cref="T:System.Xml.XPath.XPathExpression" />.</summary>
      <returns vsli:raw="A &lt;see langword=&quot;string&quot; /&gt; representation of the &lt;see cref=&quot;T:System.Xml.XPath.XPathExpression&quot; /&gt;.">Représentation sous forme de <see langword="string" /> de <see cref="T:System.Xml.XPath.XPathExpression" />.</returns>
    </member>
    <member name="P:System.Xml.XPath.XPathExpression.ReturnType">
      <summary vsli:raw="When overridden in a derived class, gets the result type of the XPath expression.">En cas de substitution dans une classe dérivée, obtient le type de résultat de l’expression XPath.</summary>
      <returns vsli:raw="An &lt;see cref=&quot;T:System.Xml.XPath.XPathResultType&quot; /&gt; value representing the result type of the XPath expression.">Valeur <see cref="T:System.Xml.XPath.XPathResultType" /> représentant le type de résultat de l’expression XPath.</returns>
    </member>
    <member name="T:System.Xml.XPath.XPathItem">
      <summary vsli:raw="Represents an item in the XQuery 1.0 and XPath 2.0 Data Model.">Représente un élément dans le modèle de données XQuery 1.0 et XPath 2.0.</summary>
    </member>
    <member name="M:System.Xml.XPath.XPathItem.#ctor">
      <summary vsli:raw="Initializes a new instance of the &lt;see cref=&quot;T:System.Xml.XPath.XPathItem&quot; /&gt; class.">Initialise une nouvelle instance de la classe <see cref="T:System.Xml.XPath.XPathItem" />.</summary>
    </member>
    <member name="M:System.Xml.XPath.XPathItem.ValueAs(System.Type)">
      <summary vsli:raw="Returns the item's value as the specified type.">Retourne la valeur de l'élément comme type spécifié.</summary>
      <param name="returnType" vsli:raw="The type to return the item value as.">Type utilisé pour retourner la valeur de l'élément.</param>
      <exception cref="T:System.FormatException" vsli:raw="The item's value is not in the correct format for the target type.">Le format de la valeur de l'élément n'est pas correct pour le type cible.</exception>
      <exception cref="T:System.InvalidCastException" vsli:raw="The attempted cast is not valid.">La tentative de cast n'est pas valide.</exception>
      <exception cref="T:System.OverflowException" vsli:raw="The attempted cast resulted in an overflow.">Le cast spécifié a généré un dépassement de capacité.</exception>
      <returns vsli:raw="The value of the item as the type requested.">Valeur de l'élément en tant que type demandé.</returns>
    </member>
    <member name="M:System.Xml.XPath.XPathItem.ValueAs(System.Type,System.Xml.IXmlNamespaceResolver)">
      <summary vsli:raw="When overridden in a derived class, returns the item's value as the type specified using the &lt;see cref=&quot;T:System.Xml.IXmlNamespaceResolver&quot; /&gt; object specified to resolve namespace prefixes.">En cas de substitution dans une classe dérivée, retourne la valeur de l'élément en tant que type spécifié à l'aide de l'objet <see cref="T:System.Xml.IXmlNamespaceResolver" /> spécifié pour résoudre les préfixes d'espace de noms.</summary>
      <param name="returnType" vsli:raw="The type to return the item's value as.">Type utilisé pour retourner la valeur de l'élément.</param>
      <param name="nsResolver" vsli:raw="The &lt;see cref=&quot;T:System.Xml.IXmlNamespaceResolver&quot; /&gt; object used to resolve namespace prefixes.">Objet <see cref="T:System.Xml.IXmlNamespaceResolver" /> utilisé pour résoudre les préfixes d’espace de noms.</param>
      <exception cref="T:System.FormatException" vsli:raw="The item's value is not in the correct format for the target type.">Le format de la valeur de l'élément n'est pas correct pour le type cible.</exception>
      <exception cref="T:System.InvalidCastException" vsli:raw="The attempted cast is not valid.">La tentative de cast n'est pas valide.</exception>
      <exception cref="T:System.OverflowException" vsli:raw="The attempted cast resulted in an overflow.">Le cast spécifié a généré un dépassement de capacité.</exception>
      <returns vsli:raw="The value of the item as the type requested.">Valeur de l'élément en tant que type demandé.</returns>
    </member>
    <member name="P:System.Xml.XPath.XPathItem.IsNode">
      <summary vsli:raw="When overridden in a derived class, gets a value indicating whether the item represents an XPath node or an atomic value.">En cas de substitution dans une classe dérivée, obtient une valeur indiquant si l'élément représente un nœud XPath ou une valeur atomique.</summary>
      <returns vsli:raw="&lt;see langword=&quot;true&quot; /&gt; if the item represents an XPath node; &lt;see langword=&quot;false&quot; /&gt; if the item represents an atomic value.">
        <see langword="true" /> si l'élément représente un nœud XPath ; <see langword="false" /> si l'élément représente une valeur atomique.</returns>
    </member>
    <member name="P:System.Xml.XPath.XPathItem.TypedValue">
      <summary vsli:raw="When overridden in a derived class, gets the current item as a boxed object of the most appropriate .NET Framework 2.0 type according to its schema type.">En cas de substitution dans une classe dérivée, obtient l'élément actuel en tant qu'objet boxed (converti) du type .NET Framework 2.0 le plus approprié selon son type de schéma.</summary>
      <returns vsli:raw="The current item as a boxed object of the most appropriate .NET Framework type.">Élément actuel en tant qu'objet boxed du type .NET Framework le plus approprié.</returns>
    </member>
    <member name="P:System.Xml.XPath.XPathItem.Value">
      <summary vsli:raw="When overridden in a derived class, gets the &lt;see langword=&quot;string&quot; /&gt; value of the item.">En cas de substitution dans une classe dérivée, obtient la valeur <see langword="string" /> de l'élément.</summary>
      <returns vsli:raw="The &lt;see langword=&quot;string&quot; /&gt; value of the item.">Valeur <see langword="string" /> de l'élément.</returns>
    </member>
    <member name="P:System.Xml.XPath.XPathItem.ValueAsBoolean">
      <summary vsli:raw="When overridden in a derived class, gets the item's value as a &lt;see cref=&quot;T:System.Boolean&quot; /&gt;.">En cas de substitution dans une classe dérivée, obtient la valeur de l'élément en tant que <see cref="T:System.Boolean" />.</summary>
      <exception cref="T:System.FormatException" vsli:raw="The item's value is not in the correct format for the &lt;see cref=&quot;T:System.Boolean&quot; /&gt; type.">Le format de la valeur de l'élément n'est pas correct pour le type <see cref="T:System.Boolean" />.</exception>
      <exception cref="T:System.InvalidCastException" vsli:raw="The attempted cast to &lt;see cref=&quot;T:System.Boolean&quot; /&gt; is not valid.">La tentative de cast en <see cref="T:System.Boolean" /> n'est pas valide.</exception>
      <returns vsli:raw="The item's value as a &lt;see cref=&quot;T:System.Boolean&quot; /&gt;.">Valeur de l'élément en tant que <see cref="T:System.Boolean" />.</returns>
    </member>
    <member name="P:System.Xml.XPath.XPathItem.ValueAsDateTime">
      <summary vsli:raw="When overridden in a derived class, gets the item's value as a &lt;see cref=&quot;T:System.DateTime&quot; /&gt;.">En cas de substitution dans une classe dérivée, obtient la valeur de l'élément en tant que <see cref="T:System.DateTime" />.</summary>
      <exception cref="T:System.FormatException" vsli:raw="The item's value is not in the correct format for the &lt;see cref=&quot;T:System.DateTime&quot; /&gt; type.">Le format de la valeur de l'élément n'est pas correct pour le type <see cref="T:System.DateTime" />.</exception>
      <exception cref="T:System.InvalidCastException" vsli:raw="The attempted cast to &lt;see cref=&quot;T:System.DateTime&quot; /&gt; is not valid.">La tentative de cast en <see cref="T:System.DateTime" /> n'est pas valide.</exception>
      <returns vsli:raw="The item's value as a &lt;see cref=&quot;T:System.DateTime&quot; /&gt;.">Valeur de l'élément en tant que <see cref="T:System.DateTime" />.</returns>
    </member>
    <member name="P:System.Xml.XPath.XPathItem.ValueAsDouble">
      <summary vsli:raw="When overridden in a derived class, gets the item's value as a &lt;see cref=&quot;T:System.Double&quot; /&gt;.">En cas de substitution dans une classe dérivée, obtient la valeur de l'élément en tant que <see cref="T:System.Double" />.</summary>
      <exception cref="T:System.FormatException" vsli:raw="The item's value is not in the correct format for the &lt;see cref=&quot;T:System.Double&quot; /&gt; type.">Le format de la valeur de l'élément n'est pas correct pour le type <see cref="T:System.Double" />.</exception>
      <exception cref="T:System.InvalidCastException" vsli:raw="The attempted cast to &lt;see cref=&quot;T:System.Double&quot; /&gt; is not valid.">La tentative de cast en <see cref="T:System.Double" /> n'est pas valide.</exception>
      <exception cref="T:System.OverflowException" vsli:raw="The attempted cast resulted in an overflow.">Le cast spécifié a généré un dépassement de capacité.</exception>
      <returns vsli:raw="The item's value as a &lt;see cref=&quot;T:System.Double&quot; /&gt;.">Valeur de l'élément en tant que <see cref="T:System.Double" />.</returns>
    </member>
    <member name="P:System.Xml.XPath.XPathItem.ValueAsInt">
      <summary vsli:raw="When overridden in a derived class, gets the item's value as an &lt;see cref=&quot;T:System.Int32&quot; /&gt;.">En cas de substitution dans une classe dérivée, obtient la valeur de l'élément en tant que <see cref="T:System.Int32" />.</summary>
      <exception cref="T:System.FormatException" vsli:raw="The item's value is not in the correct format for the &lt;see cref=&quot;T:System.Int32&quot; /&gt; type.">Le format de la valeur de l'élément n'est pas correct pour le type <see cref="T:System.Int32" />.</exception>
      <exception cref="T:System.InvalidCastException" vsli:raw="The attempted cast to &lt;see cref=&quot;T:System.Int32&quot; /&gt; is not valid.">La tentative de cast en <see cref="T:System.Int32" /> n'est pas valide.</exception>
      <exception cref="T:System.OverflowException" vsli:raw="The attempted cast resulted in an overflow.">Le cast spécifié a généré un dépassement de capacité.</exception>
      <returns vsli:raw="The item's value as an &lt;see cref=&quot;T:System.Int32&quot; /&gt;.">Valeur de l'élément en tant que <see cref="T:System.Int32" />.</returns>
    </member>
    <member name="P:System.Xml.XPath.XPathItem.ValueAsLong">
      <summary vsli:raw="When overridden in a derived class, gets the item's value as an &lt;see cref=&quot;T:System.Int64&quot; /&gt;.">En cas de substitution dans une classe dérivée, obtient la valeur de l'élément en tant que <see cref="T:System.Int64" />.</summary>
      <exception cref="T:System.FormatException" vsli:raw="The item's value is not in the correct format for the &lt;see cref=&quot;T:System.Int64&quot; /&gt; type.">Le format de la valeur de l'élément n'est pas correct pour le type <see cref="T:System.Int64" />.</exception>
      <exception cref="T:System.InvalidCastException" vsli:raw="The attempted cast to &lt;see cref=&quot;T:System.Int64&quot; /&gt; is not valid.">La tentative de cast en <see cref="T:System.Int64" /> n'est pas valide.</exception>
      <exception cref="T:System.OverflowException" vsli:raw="The attempted cast resulted in an overflow.">Le cast spécifié a généré un dépassement de capacité.</exception>
      <returns vsli:raw="The item's value as an &lt;see cref=&quot;T:System.Int64&quot; /&gt;.">Valeur de l'élément en tant que <see cref="T:System.Int64" />.</returns>
    </member>
    <member name="P:System.Xml.XPath.XPathItem.ValueType">
      <summary vsli:raw="When overridden in a derived class, gets the .NET Framework 2.0 type of the item.">En cas de substitution dans une classe dérivée, obtient le type de .NET Framework 2.0 de l'élément.</summary>
      <returns vsli:raw="The .NET Framework type of the item. The default value is &lt;see cref=&quot;T:System.String&quot; /&gt;.">Type de .NET Framework de l'élément. La valeur par défaut est <see cref="T:System.String" />.</returns>
    </member>
    <member name="P:System.Xml.XPath.XPathItem.XmlType">
      <summary vsli:raw="When overridden in a derived class, gets the &lt;see cref=&quot;T:System.Xml.Schema.XmlSchemaType&quot; /&gt; for the item.">En cas de substitution dans une classe dérivée, obtient le <see cref="T:System.Xml.Schema.XmlSchemaType" /> de l'élément.</summary>
      <returns vsli:raw="The &lt;see cref=&quot;T:System.Xml.Schema.XmlSchemaType&quot; /&gt; for the item.">
        <see cref="T:System.Xml.Schema.XmlSchemaType" /> de l’élément.</returns>
    </member>
    <member name="T:System.Xml.XPath.XPathNamespaceScope">
      <summary vsli:raw="Defines the namespace scope.">Définit la portée des espaces de noms.</summary>
    </member>
    <member name="F:System.Xml.XPath.XPathNamespaceScope.All">
      <summary vsli:raw="Returns all namespaces defined in the scope of the current node. This includes the &lt;c&gt;xmlns:xml&lt;/c&gt; namespace which is always declared implicitly. The order of the namespaces returned is not defined.">Retourne tous les espaces de noms définis dans la portée du nœud actuel. Ceci inclut l’espace de noms <c>xmlns:xml</c>, qui est toujours déclaré implicitement. L'ordre des espaces de noms retournés n'est pas défini.</summary>
    </member>
    <member name="F:System.Xml.XPath.XPathNamespaceScope.ExcludeXml">
      <summary vsli:raw="Returns all namespaces defined in the scope of the current node, excluding the &lt;c&gt;xmlns:xml&lt;/c&gt; namespace. The &lt;c&gt;xmlns:xml&lt;/c&gt; namespace is always declared implicitly. The order of the namespaces returned is not defined.">Retourne tous les espaces de noms définis dans la portée du nœud actuel, à l’exception de l’espace de noms <c>xmlns:xml</c>. L’espace de noms <c>xmlns:xml</c> est toujours déclaré implicitement. L'ordre des espaces de noms retournés n'est pas défini.</summary>
    </member>
    <member name="F:System.Xml.XPath.XPathNamespaceScope.Local">
      <summary vsli:raw="Returns all namespaces that are defined locally at the current node.">Retourne tous les espaces de noms définis localement sur le nœud actuel.</summary>
    </member>
    <member name="T:System.Xml.XPath.XPathNavigator">
      <summary vsli:raw="Provides a cursor model for navigating and editing XML data.">Fournit un modèle de curseur pour la navigation dans les données XML et leur modification.</summary>
    </member>
    <member name="M:System.Xml.XPath.XPathNavigator.#ctor">
      <summary vsli:raw="Initializes a new instance of the &lt;see cref=&quot;T:System.Xml.XPath.XPathNavigator&quot; /&gt; class.">Initialise une nouvelle instance de la classe <see cref="T:System.Xml.XPath.XPathNavigator" />.</summary>
    </member>
    <member name="M:System.Xml.XPath.XPathNavigator.AppendChild">
      <summary vsli:raw="Returns an &lt;see cref=&quot;T:System.Xml.XmlWriter&quot; /&gt; object used to create one or more new child nodes at the end of the list of child nodes of the current node.">Retourne un objet <see cref="T:System.Xml.XmlWriter" /> permettant de créer un ou plusieurs nœuds enfants à la fin de la liste de nœuds enfants du nœud actuel.</summary>
      <exception cref="T:System.InvalidOperationException" vsli:raw="The current node the &lt;see cref=&quot;T:System.Xml.XPath.XPathNavigator&quot; /&gt; is positioned on is not the root node or an element node.">Le nœud actuel sur lequel le <see cref="T:System.Xml.XPath.XPathNavigator" /> est positionné ne correspond pas au nœud racine ni à un nœud d’élément.</exception>
      <exception cref="T:System.NotSupportedException" vsli:raw="The &lt;see cref=&quot;T:System.Xml.XPath.XPathNavigator&quot; /&gt; does not support editing.">Le <see cref="T:System.Xml.XPath.XPathNavigator" /> ne prend pas en charge la modification.</exception>
      <returns vsli:raw="An &lt;see cref=&quot;T:System.Xml.XmlWriter&quot; /&gt; object used to create new child nodes at the end of the list of child nodes of the current node.">Objet <see cref="T:System.Xml.XmlWriter" /> permettant de créer des nœuds enfants à la fin de la liste de nœuds enfants du nœud actuel.</returns>
    </member>
    <member name="M:System.Xml.XPath.XPathNavigator.AppendChild(System.String)">
      <summary vsli:raw="Creates a new child node at the end of the list of child nodes of the current node using the XML data string specified.">Crée un nœud enfant à la fin de la liste de nœuds enfants du nœud actuel à l'aide de la chaîne de données XML spécifiée.</summary>
      <param name="newChild" vsli:raw="The XML data string for the new child node.">Chaîne de données XML pour le nouveau nœud enfant.</param>
      <exception cref="T:System.ArgumentNullException" vsli:raw="The XML data string parameter is &lt;see langword=&quot;null&quot; /&gt;.">Le paramètre de chaîne de données XML est <see langword="null" />.</exception>
      <exception cref="T:System.InvalidOperationException" vsli:raw="The current node the &lt;see cref=&quot;T:System.Xml.XPath.XPathNavigator&quot; /&gt; is positioned on is not the root node or an element node.">Le nœud actuel sur lequel le <see cref="T:System.Xml.XPath.XPathNavigator" /> est positionné ne correspond pas au nœud racine ni à un nœud d’élément.</exception>
      <exception cref="T:System.NotSupportedException" vsli:raw="The &lt;see cref=&quot;T:System.Xml.XPath.XPathNavigator&quot; /&gt; does not support editing.">Le <see cref="T:System.Xml.XPath.XPathNavigator" /> ne prend pas en charge la modification.</exception>
      <exception cref="T:System.Xml.XmlException" vsli:raw="The XML data string parameter is not well-formed.">Le paramètre de chaîne de données XML n’est pas mis en forme correctement.</exception>
    </member>
    <member name="M:System.Xml.XPath.XPathNavigator.AppendChild(System.Xml.XmlReader)">
      <summary vsli:raw="Creates a new child node at the end of the list of child nodes of the current node using the XML contents of the &lt;see cref=&quot;T:System.Xml.XmlReader&quot; /&gt; object specified.">Crée un nœud enfant à la fin de la liste de nœuds enfants du nœud actuel à l’aide du contenu XML de l’objet <see cref="T:System.Xml.XmlReader" /> spécifié.</summary>
      <param name="newChild" vsli:raw="An &lt;see cref=&quot;T:System.Xml.XmlReader&quot; /&gt; object positioned on the XML data for the new child node.">Objet <see cref="T:System.Xml.XmlReader" /> positionné sur les données XML pour le nouveau nœud enfant.</param>
      <exception cref="T:System.ArgumentException" vsli:raw="The &lt;see cref=&quot;T:System.Xml.XmlReader&quot; /&gt; object is in an error state or closed.">L’objet <see cref="T:System.Xml.XmlReader" /> est dans un état d’erreur ou fermé.</exception>
      <exception cref="T:System.ArgumentNullException" vsli:raw="The &lt;see cref=&quot;T:System.Xml.XmlReader&quot; /&gt; object parameter is &lt;see langword=&quot;null&quot; /&gt;.">Le paramètre de l’objet <see cref="T:System.Xml.XmlReader" /> est <see langword="null" />.</exception>
      <exception cref="T:System.InvalidOperationException" vsli:raw="The current node the &lt;see cref=&quot;T:System.Xml.XPath.XPathNavigator&quot; /&gt; is positioned on is not the root node or an element node.">Le nœud actuel sur lequel le <see cref="T:System.Xml.XPath.XPathNavigator" /> est positionné ne correspond pas au nœud racine ni à un nœud d’élément.</exception>
      <exception cref="T:System.NotSupportedException" vsli:raw="The &lt;see cref=&quot;T:System.Xml.XPath.XPathNavigator&quot; /&gt; does not support editing.">Le <see cref="T:System.Xml.XPath.XPathNavigator" /> ne prend pas en charge la modification.</exception>
      <exception cref="T:System.Xml.XmlException" vsli:raw="The XML contents of the &lt;see cref=&quot;T:System.Xml.XmlReader&quot; /&gt; object parameter is not well-formed.">Le contenu XML du paramètre de l’objet <see cref="T:System.Xml.XmlReader" /> n’est pas mis en forme correctement.</exception>
    </member>
    <member name="M:System.Xml.XPath.XPathNavigator.AppendChild(System.Xml.XPath.XPathNavigator)">
      <summary vsli:raw="Creates a new child node at the end of the list of child nodes of the current node using the nodes in the &lt;see cref=&quot;T:System.Xml.XPath.XPathNavigator&quot; /&gt; specified.">Crée un nœud enfant à la fin de la liste de nœuds enfants du nœud actuel à l’aide des nœuds du <see cref="T:System.Xml.XPath.XPathNavigator" /> spécifié.</summary>
      <param name="newChild" vsli:raw="An &lt;see cref=&quot;T:System.Xml.XPath.XPathNavigator&quot; /&gt; object positioned on the node to add as the new child node.">Objet <see cref="T:System.Xml.XPath.XPathNavigator" /> positionné sur le nœud à ajouter en tant que nouveau nœud enfant.</param>
      <exception cref="T:System.ArgumentNullException" vsli:raw="The &lt;see cref=&quot;T:System.Xml.XPath.XPathNavigator&quot; /&gt; object parameter is &lt;see langword=&quot;null&quot; /&gt;.">Le paramètre de l’objet <see cref="T:System.Xml.XPath.XPathNavigator" /> est <see langword="null" />.</exception>
      <exception cref="T:System.InvalidOperationException" vsli:raw="The current node the &lt;see cref=&quot;T:System.Xml.XPath.XPathNavigator&quot; /&gt; is positioned on is not the root node or an element node.">Le nœud actuel sur lequel le <see cref="T:System.Xml.XPath.XPathNavigator" /> est positionné ne correspond pas au nœud racine ni à un nœud d’élément.</exception>
      <exception cref="T:System.NotSupportedException" vsli:raw="The &lt;see cref=&quot;T:System.Xml.XPath.XPathNavigator&quot; /&gt; does not support editing.">Le <see cref="T:System.Xml.XPath.XPathNavigator" /> ne prend pas en charge la modification.</exception>
    </member>
    <member name="M:System.Xml.XPath.XPathNavigator.AppendChildElement(System.String,System.String,System.String,System.String)">
      <summary vsli:raw="Creates a new child element node at the end of the list of child nodes of the current node using the namespace prefix, local name and namespace URI specified with the value specified.">Crée un nœud d'élément enfant à la fin de la liste de nœuds enfants du nœud actuel à l'aide du préfixe d'espace de noms, du nom local et de l'URI d'espace de noms spécifiés avec la valeur spécifiée.</summary>
      <param name="prefix" vsli:raw="The namespace prefix of the new child element node (if any).">Préfixe d'espace de noms du nouveau nœud d'élément enfant (le cas échéant).</param>
      <param name="localName" vsli:raw="The local name of the new child element node (if any).">Nom local du nouveau nœud d'élément enfant (le cas échéant).</param>
      <param name="namespaceURI" vsli:raw="The namespace URI of the new child element node (if any). &lt;see cref=&quot;F:System.String.Empty&quot; /&gt; and &lt;see langword=&quot;null&quot; /&gt; are equivalent.">URI d’espace de noms du nouveau nœud d’élément enfant (le cas échéant). <see cref="F:System.String.Empty" /> et <see langword="null" /> sont équivalents.</param>
      <param name="value" vsli:raw="The value of the new child element node. If &lt;see cref=&quot;F:System.String.Empty&quot; /&gt; or &lt;see langword=&quot;null&quot; /&gt; are passed, an empty element is created.">Valeur du nouveau nœud d'élément enfant. Si <see cref="F:System.String.Empty" /> ou <see langword="null" /> sont passés, une élément vide est créé</param>
      <exception cref="T:System.InvalidOperationException" vsli:raw="The current node the &lt;see cref=&quot;T:System.Xml.XPath.XPathNavigator&quot; /&gt; is positioned on is not the root node or an element node.">Le nœud actuel sur lequel le <see cref="T:System.Xml.XPath.XPathNavigator" /> est positionné ne correspond pas au nœud racine ni à un nœud d’élément.</exception>
      <exception cref="T:System.NotSupportedException" vsli:raw="The &lt;see cref=&quot;T:System.Xml.XPath.XPathNavigator&quot; /&gt; does not support editing.">Le <see cref="T:System.Xml.XPath.XPathNavigator" /> ne prend pas en charge la modification.</exception>
    </member>
    <member name="M:System.Xml.XPath.XPathNavigator.CheckValidity(System.Xml.Schema.XmlSchemaSet,System.Xml.Schema.ValidationEventHandler)">
      <summary vsli:raw="Verifies that the XML data in the &lt;see cref=&quot;T:System.Xml.XPath.XPathNavigator&quot; /&gt; conforms to the XML Schema definition language (XSD) schema provided.">Vérifie que les données XML du <see cref="T:System.Xml.XPath.XPathNavigator" /> sont conformes au schéma XSD (XML Schema Definition) fourni.</summary>
      <param name="schemas" vsli:raw="The &lt;see cref=&quot;T:System.Xml.Schema.XmlSchemaSet&quot; /&gt; containing the schemas used to validate the XML data contained in the &lt;see cref=&quot;T:System.Xml.XPath.XPathNavigator&quot; /&gt;.">
        <see cref="T:System.Xml.Schema.XmlSchemaSet" /> contenant les schémas utilisés pour valider les données XML contenues dans <see cref="T:System.Xml.XPath.XPathNavigator" />.</param>
      <param name="validationEventHandler" vsli:raw="The &lt;see cref=&quot;T:System.Xml.Schema.ValidationEventHandler&quot; /&gt; that receives information about schema validation warnings and errors.">
        <see cref="T:System.Xml.Schema.ValidationEventHandler" /> qui reçoit des informations à propos d'avertissements et d'erreurs de la validation du schéma.</param>
      <exception cref="T:System.Xml.Schema.XmlSchemaValidationException" vsli:raw="A schema validation error occurred, and no &lt;see cref=&quot;T:System.Xml.Schema.ValidationEventHandler&quot; /&gt; was specified to handle validation errors.">Une erreur de validation du schéma s'est produite et aucun <see cref="T:System.Xml.Schema.ValidationEventHandler" /> n'a été spécifié pour gérer les erreurs de validation.</exception>
      <exception cref="T:System.InvalidOperationException" vsli:raw="The &lt;see cref=&quot;T:System.Xml.XPath.XPathNavigator&quot; /&gt; is positioned on a node that is not an element, attribute, or the root node or there is not type information to perform validation.">Le <see cref="T:System.Xml.XPath.XPathNavigator" /> est positionné sur un nœud qui n'est pas un élément, un attribut ou le nœud racine ou s'il n'y a aucune information liée au type pour effectuer la validation.</exception>
      <exception cref="T:System.ArgumentException" vsli:raw="The &lt;see cref=&quot;M:System.Xml.XPath.XPathNavigator.CheckValidity(System.Xml.Schema.XmlSchemaSet,System.Xml.Schema.ValidationEventHandler)&quot; /&gt; method was called with an &lt;see cref=&quot;T:System.Xml.Schema.XmlSchemaSet&quot; /&gt; parameter when the &lt;see cref=&quot;T:System.Xml.XPath.XPathNavigator&quot; /&gt; was not positioned on the root node of the XML data.">La méthode <see cref="M:System.Xml.XPath.XPathNavigator.CheckValidity(System.Xml.Schema.XmlSchemaSet,System.Xml.Schema.ValidationEventHandler)" /> a été appelée avec un paramètre <see cref="T:System.Xml.Schema.XmlSchemaSet" /> lorsque le <see cref="T:System.Xml.XPath.XPathNavigator" /> n'était pas positionné sur le nœud racine des données XML.</exception>
      <returns vsli:raw="&lt;see langword=&quot;true&quot; /&gt; if no schema validation errors occurred; otherwise, &lt;see langword=&quot;false&quot; /&gt;.">
        <see langword="true" /> si aucune erreur de validation du schéma ne s'est produite ; sinon, <see langword="false" />.</returns>
    </member>
    <member name="M:System.Xml.XPath.XPathNavigator.Clone">
      <summary vsli:raw="When overridden in a derived class, creates a new &lt;see cref=&quot;T:System.Xml.XPath.XPathNavigator&quot; /&gt; positioned at the same node as this &lt;see cref=&quot;T:System.Xml.XPath.XPathNavigator&quot; /&gt;.">En cas de substitution dans une classe dérivée, crée un <see cref="T:System.Xml.XPath.XPathNavigator" /> positionné au même nœud que ce <see cref="T:System.Xml.XPath.XPathNavigator" />.</summary>
      <returns vsli:raw="A new &lt;see cref=&quot;T:System.Xml.XPath.XPathNavigator&quot; /&gt; positioned at the same node as this &lt;see cref=&quot;T:System.Xml.XPath.XPathNavigator&quot; /&gt;.">Nouveau <see cref="T:System.Xml.XPath.XPathNavigator" /> positionné au même nœud que ce <see cref="T:System.Xml.XPath.XPathNavigator" />.</returns>
    </member>
    <member name="M:System.Xml.XPath.XPathNavigator.ComparePosition(System.Xml.XPath.XPathNavigator)">
      <summary vsli:raw="Compares the position of the current &lt;see cref=&quot;T:System.Xml.XPath.XPathNavigator&quot; /&gt; with the position of the &lt;see cref=&quot;T:System.Xml.XPath.XPathNavigator&quot; /&gt; specified.">Compare la position du <see cref="T:System.Xml.XPath.XPathNavigator" /> en cours avec la position du <see cref="T:System.Xml.XPath.XPathNavigator" /> spécifié.</summary>
      <param name="nav" vsli:raw="The &lt;see cref=&quot;T:System.Xml.XPath.XPathNavigator&quot; /&gt; to compare against.">
        <see cref="T:System.Xml.XPath.XPathNavigator" /> avec lequel effectuer la comparaison.</param>
      <returns vsli:raw="An &lt;see cref=&quot;T:System.Xml.XmlNodeOrder&quot; /&gt; value representing the comparative position of the two &lt;see cref=&quot;T:System.Xml.XPath.XPathNavigator&quot; /&gt; objects.">Une valeur de <see cref="T:System.Xml.XmlNodeOrder" /> représentant la position comparative des deux objets <see cref="T:System.Xml.XPath.XPathNavigator" />.</returns>
    </member>
    <member name="M:System.Xml.XPath.XPathNavigator.Compile(System.String)">
      <summary vsli:raw="Compiles a string representing an XPath expression and returns an &lt;see cref=&quot;T:System.Xml.XPath.XPathExpression&quot; /&gt; object.">Compile une chaîne représentant une expression XPath, puis retourne un objet <see cref="T:System.Xml.XPath.XPathExpression" />.</summary>
      <param name="xpath" vsli:raw="A string representing an XPath expression.">Chaîne représentant une expression XPath.</param>
      <exception cref="T:System.ArgumentException" vsli:raw="The &lt;paramref name=&quot;xpath&quot; /&gt; parameter contains an XPath expression that is not valid.">Le paramètre <paramref name="xpath" /> contient une expression XPath qui n'est pas valide.</exception>
      <exception cref="T:System.Xml.XPath.XPathException" vsli:raw="The XPath expression is not valid.">L’expression XPath n’est pas valide.</exception>
      <returns vsli:raw="An &lt;see cref=&quot;T:System.Xml.XPath.XPathExpression&quot; /&gt; object representing the XPath expression.">Objet <see cref="T:System.Xml.XPath.XPathExpression" /> représentant l'expression XPath.</returns>
    </member>
    <member name="M:System.Xml.XPath.XPathNavigator.CreateAttribute(System.String,System.String,System.String,System.String)">
      <summary vsli:raw="Creates an attribute node on the current element node using the namespace prefix, local name and namespace URI specified with the value specified.">Crée un nœud d'attribut sur le nœud d'élément actuel à l'aide du préfixe d'espace de noms, du nom local et de l'URI d'espace de noms spécifiés avec la valeur spécifiée.</summary>
      <param name="prefix" vsli:raw="The namespace prefix of the new attribute node (if any).">Préfixe d'espace de noms du nouveau nœud d'attribut (le cas échéant).</param>
      <param name="localName" vsli:raw="The local name of the new attribute node which cannot &lt;see cref=&quot;F:System.String.Empty&quot; /&gt; or &lt;see langword=&quot;null&quot; /&gt;.">Nom local du nouveau nœud d’attribut qui ne peut pas être <see cref="F:System.String.Empty" /> ni <see langword="null" />.</param>
      <param name="namespaceURI" vsli:raw="The namespace URI for the new attribute node (if any).">URI d'espace de noms du nouveau nœud d'attribut (le cas échéant).</param>
      <param name="value" vsli:raw="The value of the new attribute node. If &lt;see cref=&quot;F:System.String.Empty&quot; /&gt; or &lt;see langword=&quot;null&quot; /&gt; are passed, an empty attribute node is created.">Valeur du nouveau nœud d'attribut. Si <see cref="F:System.String.Empty" /> ou <see langword="null" /> sont passés, un nœud d’attribut vide est créé.</param>
      <exception cref="T:System.InvalidOperationException" vsli:raw="The &lt;see cref=&quot;T:System.Xml.XPath.XPathNavigator&quot; /&gt; is not positioned on an element node.">Le <see cref="T:System.Xml.XPath.XPathNavigator" /> n’est pas positionné sur un nœud d’élément.</exception>
      <exception cref="T:System.NotSupportedException" vsli:raw="The &lt;see cref=&quot;T:System.Xml.XPath.XPathNavigator&quot; /&gt; does not support editing.">Le <see cref="T:System.Xml.XPath.XPathNavigator" /> ne prend pas en charge la modification.</exception>
    </member>
    <member name="M:System.Xml.XPath.XPathNavigator.CreateAttributes">
      <summary vsli:raw="Returns an &lt;see cref=&quot;T:System.Xml.XmlWriter&quot; /&gt; object used to create new attributes on the current element.">Retourne un objet <see cref="T:System.Xml.XmlWriter" /> utilisé pour créer des attributs sur l’élément actuel.</summary>
      <exception cref="T:System.InvalidOperationException" vsli:raw="The &lt;see cref=&quot;T:System.Xml.XPath.XPathNavigator&quot; /&gt; is not positioned on an element node.">Le <see cref="T:System.Xml.XPath.XPathNavigator" /> n’est pas positionné sur un nœud d’élément.</exception>
      <exception cref="T:System.NotSupportedException" vsli:raw="The &lt;see cref=&quot;T:System.Xml.XPath.XPathNavigator&quot; /&gt; does not support editing.">Le <see cref="T:System.Xml.XPath.XPathNavigator" /> ne prend pas en charge la modification.</exception>
      <returns vsli:raw="An &lt;see cref=&quot;T:System.Xml.XmlWriter&quot; /&gt; object used to create new attributes on the current element.">Objet <see cref="T:System.Xml.XmlWriter" /> utilisé pour créer des attributs sur l’élément actuel.</returns>
    </member>
    <member name="M:System.Xml.XPath.XPathNavigator.CreateNavigator">
      <summary vsli:raw="Returns a copy of the &lt;see cref=&quot;T:System.Xml.XPath.XPathNavigator&quot; /&gt;.">Retourne une copie de <see cref="T:System.Xml.XPath.XPathNavigator" />.</summary>
      <returns vsli:raw="An &lt;see cref=&quot;T:System.Xml.XPath.XPathNavigator&quot; /&gt; copy of this &lt;see cref=&quot;T:System.Xml.XPath.XPathNavigator&quot; /&gt;.">Copie <see cref="T:System.Xml.XPath.XPathNavigator" /> de ce <see cref="T:System.Xml.XPath.XPathNavigator" />.</returns>
    </member>
    <member name="M:System.Xml.XPath.XPathNavigator.DeleteRange(System.Xml.XPath.XPathNavigator)">
      <summary vsli:raw="Deletes a range of sibling nodes from the current node to the node specified.">Supprime une plage de nœuds frères allant du nœud actuel au nœud spécifié.</summary>
      <param name="lastSiblingToDelete" vsli:raw="An &lt;see cref=&quot;T:System.Xml.XPath.XPathNavigator&quot; /&gt; positioned on the last sibling node in the range to delete.">
        <see cref="T:System.Xml.XPath.XPathNavigator" /> positionné sur le dernier nœud frère de la plage à supprimer.</param>
      <exception cref="T:System.ArgumentNullException" vsli:raw="The &lt;see cref=&quot;T:System.Xml.XPath.XPathNavigator&quot; /&gt; specified is &lt;see langword=&quot;null&quot; /&gt;.">Le <see cref="T:System.Xml.XPath.XPathNavigator" /> spécifié a la valeur <see langword="null" />.</exception>
      <exception cref="T:System.NotSupportedException" vsli:raw="The &lt;see cref=&quot;T:System.Xml.XPath.XPathNavigator&quot; /&gt; does not support editing.">Le <see cref="T:System.Xml.XPath.XPathNavigator" /> ne prend pas en charge la modification.</exception>
      <exception cref="T:System.InvalidOperationException" vsli:raw="The last node to delete specified is not a valid sibling node of the current node.">Le dernier nœud à supprimer spécifié n’est pas un nœud frère valide du nœud actuel.</exception>
    </member>
    <member name="M:System.Xml.XPath.XPathNavigator.DeleteSelf">
      <summary vsli:raw="Deletes the current node and its child nodes.">Supprime le nœud actuel et ses nœuds enfants.</summary>
      <exception cref="T:System.InvalidOperationException" vsli:raw="The &lt;see cref=&quot;T:System.Xml.XPath.XPathNavigator&quot; /&gt; is positioned on a node that cannot be deleted such as the root node or a namespace node.">Le <see cref="T:System.Xml.XPath.XPathNavigator" /> est positionné sur un nœud qui ne peut pas être supprimé, comme le nœud racine ou un nœud d’espace de noms.</exception>
      <exception cref="T:System.NotSupportedException" vsli:raw="The &lt;see cref=&quot;T:System.Xml.XPath.XPathNavigator&quot; /&gt; does not support editing.">Le <see cref="T:System.Xml.XPath.XPathNavigator" /> ne prend pas en charge la modification.</exception>
    </member>
    <member name="M:System.Xml.XPath.XPathNavigator.Evaluate(System.String)">
      <summary vsli:raw="Evaluates the specified XPath expression and returns the typed result.">Évalue l'expression XPath spécifiée et retourne le résultat typé.</summary>
      <param name="xpath" vsli:raw="A string representing an XPath expression that can be evaluated.">Chaîne représentant une expression XPath qui peut être évaluée.</param>
      <exception cref="T:System.ArgumentException" vsli:raw="The return type of the XPath expression is a node set.">Le type de retour de l’expression XPath est un ensemble de nœuds.</exception>
      <exception cref="T:System.Xml.XPath.XPathException" vsli:raw="The XPath expression is not valid.">L’expression XPath n’est pas valide.</exception>
      <returns vsli:raw="The result of the expression (Boolean, number, string, or node set). This maps to &lt;see cref=&quot;T:System.Boolean&quot; /&gt;, &lt;see cref=&quot;T:System.Double&quot; /&gt;, &lt;see cref=&quot;T:System.String&quot; /&gt;, or &lt;see cref=&quot;T:System.Xml.XPath.XPathNodeIterator&quot; /&gt; objects respectively.">Résultat de l'expression (booléen, nombre, chaîne ou jeu de nœuds). Ceci mappe aux objets <see cref="T:System.Boolean" />, <see cref="T:System.Double" />, <see cref="T:System.String" /> ou <see cref="T:System.Xml.XPath.XPathNodeIterator" />, respectivement.</returns>
    </member>
    <member name="M:System.Xml.XPath.XPathNavigator.Evaluate(System.String,System.Xml.IXmlNamespaceResolver)">
      <summary vsli:raw="Evaluates the specified XPath expression and returns the typed result, using the &lt;see cref=&quot;T:System.Xml.IXmlNamespaceResolver&quot; /&gt; object specified to resolve namespace prefixes in the XPath expression.">Évalue l’expression XPath spécifiée et retourne le résultat typé, à l’aide de l’objet <see cref="T:System.Xml.IXmlNamespaceResolver" /> spécifié pour trouver les préfixes d’espace de noms dans l’expression XPath.</summary>
      <param name="xpath" vsli:raw="A string representing an XPath expression that can be evaluated.">Chaîne représentant une expression XPath qui peut être évaluée.</param>
      <param name="resolver" vsli:raw="The &lt;see cref=&quot;T:System.Xml.IXmlNamespaceResolver&quot; /&gt; object used to resolve namespace prefixes in the XPath expression.">Objet <see cref="T:System.Xml.IXmlNamespaceResolver" /> permettant de trouver les préfixes d’espace de noms dans l’expression XPath.</param>
      <exception cref="T:System.ArgumentException" vsli:raw="The return type of the XPath expression is a node set.">Le type de retour de l’expression XPath est un ensemble de nœuds.</exception>
      <exception cref="T:System.Xml.XPath.XPathException" vsli:raw="The XPath expression is not valid.">L’expression XPath n’est pas valide.</exception>
      <returns vsli:raw="The result of the expression (Boolean, number, string, or node set). This maps to &lt;see cref=&quot;T:System.Boolean&quot; /&gt;, &lt;see cref=&quot;T:System.Double&quot; /&gt;, &lt;see cref=&quot;T:System.String&quot; /&gt;, or &lt;see cref=&quot;T:System.Xml.XPath.XPathNodeIterator&quot; /&gt; objects respectively.">Résultat de l'expression (booléen, nombre, chaîne ou jeu de nœuds). Ceci mappe aux objets <see cref="T:System.Boolean" />, <see cref="T:System.Double" />, <see cref="T:System.String" /> ou <see cref="T:System.Xml.XPath.XPathNodeIterator" />, respectivement.</returns>
    </member>
    <member name="M:System.Xml.XPath.XPathNavigator.Evaluate(System.Xml.XPath.XPathExpression)">
      <summary vsli:raw="Evaluates the &lt;see cref=&quot;T:System.Xml.XPath.XPathExpression&quot; /&gt; and returns the typed result.">Évalue la <see cref="T:System.Xml.XPath.XPathExpression" /> et retourne le résultat typé.</summary>
      <param name="expr" vsli:raw="An &lt;see cref=&quot;T:System.Xml.XPath.XPathExpression&quot; /&gt; that can be evaluated.">Élément <see cref="T:System.Xml.XPath.XPathExpression" /> qui peut être évalué.</param>
      <exception cref="T:System.ArgumentException" vsli:raw="The return type of the XPath expression is a node set.">Le type de retour de l’expression XPath est un ensemble de nœuds.</exception>
      <exception cref="T:System.Xml.XPath.XPathException" vsli:raw="The XPath expression is not valid.">L’expression XPath n’est pas valide.</exception>
      <returns vsli:raw="The result of the expression (Boolean, number, string, or node set). This maps to &lt;see cref=&quot;T:System.Boolean&quot; /&gt;, &lt;see cref=&quot;T:System.Double&quot; /&gt;, &lt;see cref=&quot;T:System.String&quot; /&gt;, or &lt;see cref=&quot;T:System.Xml.XPath.XPathNodeIterator&quot; /&gt; objects respectively.">Résultat de l'expression (booléen, nombre, chaîne ou jeu de nœuds). Ceci mappe aux objets <see cref="T:System.Boolean" />, <see cref="T:System.Double" />, <see cref="T:System.String" /> ou <see cref="T:System.Xml.XPath.XPathNodeIterator" />, respectivement.</returns>
    </member>
    <member name="M:System.Xml.XPath.XPathNavigator.Evaluate(System.Xml.XPath.XPathExpression,System.Xml.XPath.XPathNodeIterator)">
      <summary vsli:raw="Uses the supplied context to evaluate the &lt;see cref=&quot;T:System.Xml.XPath.XPathExpression&quot; /&gt;, and returns the typed result.">Utilise le contexte fourni pour évaluer l’<see cref="T:System.Xml.XPath.XPathExpression" /> et retourne le résultat typé.</summary>
      <param name="expr" vsli:raw="An &lt;see cref=&quot;T:System.Xml.XPath.XPathExpression&quot; /&gt; that can be evaluated.">Élément <see cref="T:System.Xml.XPath.XPathExpression" /> qui peut être évalué.</param>
      <param name="context" vsli:raw="An &lt;see cref=&quot;T:System.Xml.XPath.XPathNodeIterator&quot; /&gt; that points to the selected node set that the evaluation is to be performed on.">
        <see cref="T:System.Xml.XPath.XPathNodeIterator" /> qui pointe vers l’ensemble de nœuds sélectionné auquel doit s’appliquer l’évaluation.</param>
      <exception cref="T:System.ArgumentException" vsli:raw="The return type of the XPath expression is a node set.">Le type de retour de l’expression XPath est un ensemble de nœuds.</exception>
      <exception cref="T:System.Xml.XPath.XPathException" vsli:raw="The XPath expression is not valid.">L’expression XPath n’est pas valide.</exception>
      <returns vsli:raw="The result of the expression (Boolean, number, string, or node set). This maps to &lt;see cref=&quot;T:System.Boolean&quot; /&gt;, &lt;see cref=&quot;T:System.Double&quot; /&gt;, &lt;see cref=&quot;T:System.String&quot; /&gt;, or &lt;see cref=&quot;T:System.Xml.XPath.XPathNodeIterator&quot; /&gt; objects respectively.">Résultat de l'expression (booléen, nombre, chaîne ou jeu de nœuds). Ceci mappe aux objets <see cref="T:System.Boolean" />, <see cref="T:System.Double" />, <see cref="T:System.String" /> ou <see cref="T:System.Xml.XPath.XPathNodeIterator" />, respectivement.</returns>
    </member>
    <member name="M:System.Xml.XPath.XPathNavigator.GetAttribute(System.String,System.String)">
      <summary vsli:raw="Gets the value of the attribute with the specified local name and namespace URI.">Obtient la valeur de l'attribut avec le nom local et l'URI de l'espace de noms spécifiés.</summary>
      <param name="localName" vsli:raw="The local name of the attribute. &lt;paramref name=&quot;localName&quot; /&gt; is case-sensitive.">Le nom local de l'attribut. <paramref name="localName" /> respecte la casse.</param>
      <param name="namespaceURI" vsli:raw="The namespace URI of the attribute.">L'URI de l'espace de noms de l'attribut.</param>
      <returns vsli:raw="A &lt;see cref=&quot;T:System.String&quot; /&gt; that contains the value of the specified attribute; &lt;see cref=&quot;F:System.String.Empty&quot; /&gt; if a matching attribute is not found, or if the &lt;see cref=&quot;T:System.Xml.XPath.XPathNavigator&quot; /&gt; is not positioned on an element node.">
        <see cref="T:System.String" /> qui contient la valeur de l'attribut spécifié ; <see cref="F:System.String.Empty" /> si un attribut correspondant est introuvable ou si <see cref="T:System.Xml.XPath.XPathNavigator" /> n'est pas positionné sur un nœud d'élément.</returns>
    </member>
    <member name="M:System.Xml.XPath.XPathNavigator.GetNamespace(System.String)">
      <summary vsli:raw="Returns the value of the namespace node corresponding to the specified local name.">Retourne la valeur du nœud d'espace de noms correspondant au nom local spécifié.</summary>
      <param name="name" vsli:raw="The local name of the namespace node.">Nom local du nœud d'espace de noms.</param>
      <returns vsli:raw="A &lt;see cref=&quot;T:System.String&quot; /&gt; that contains the value of the namespace node; &lt;see cref=&quot;F:System.String.Empty&quot; /&gt; if a matching namespace node is not found, or if the &lt;see cref=&quot;T:System.Xml.XPath.XPathNavigator&quot; /&gt; is not positioned on an element node.">
        <see cref="T:System.String" /> qui contient la valeur du nœud d'espace de noms ; <see cref="F:System.String.Empty" /> si un attribut correspondant est introuvable ou si <see cref="T:System.Xml.XPath.XPathNavigator" /> n'est pas positionné sur un nœud d'élément.</returns>
    </member>
    <member name="M:System.Xml.XPath.XPathNavigator.GetNamespacesInScope(System.Xml.XmlNamespaceScope)">
      <summary vsli:raw="Returns the in-scope namespaces of the current node.">Retourne tous les espaces de noms dans la portée du nœud actuel.</summary>
      <param name="scope" vsli:raw="An &lt;see cref=&quot;T:System.Xml.XmlNamespaceScope&quot; /&gt; value specifying the namespaces to return.">Valeur <see cref="T:System.Xml.XmlNamespaceScope" /> spécifiant les espaces de noms à retourner.</param>
      <returns vsli:raw="An &lt;see cref=&quot;T:System.Collections.Generic.IDictionary`2&quot; /&gt; collection of namespace names keyed by prefix.">Collection <see cref="T:System.Collections.Generic.IDictionary`2" /> de noms d'espaces de noms indexée par préfixe.</returns>
    </member>
    <member name="M:System.Xml.XPath.XPathNavigator.InsertAfter">
      <summary vsli:raw="Returns an &lt;see cref=&quot;T:System.Xml.XmlWriter&quot; /&gt; object used to create a new sibling node after the currently selected node.">Retourne un objet <see cref="T:System.Xml.XmlWriter" /> utilisé pour créer un nœud frère après le nœud actuellement sélectionné.</summary>
      <exception cref="T:System.InvalidOperationException" vsli:raw="The position of the &lt;see cref=&quot;T:System.Xml.XPath.XPathNavigator&quot; /&gt; does not allow a new sibling node to be inserted after the current node.">La position du <see cref="T:System.Xml.XPath.XPathNavigator" /> n’autorise pas l’insertion d’un nœud frère après le nœud actuel.</exception>
      <exception cref="T:System.NotSupportedException" vsli:raw="The &lt;see cref=&quot;T:System.Xml.XPath.XPathNavigator&quot; /&gt; does not support editing.">Le <see cref="T:System.Xml.XPath.XPathNavigator" /> ne prend pas en charge la modification.</exception>
      <returns vsli:raw="An &lt;see cref=&quot;T:System.Xml.XmlWriter&quot; /&gt; object used to create a new sibling node after the currently selected node.">Objet <see cref="T:System.Xml.XmlWriter" /> utilisé pour créer un nœud frère après le nœud actuellement sélectionné.</returns>
    </member>
    <member name="M:System.Xml.XPath.XPathNavigator.InsertAfter(System.String)">
      <summary vsli:raw="Creates a new sibling node after the currently selected node using the XML string specified.">Crée un nœud frère après le nœud actuellement sélectionné à l'aide de la chaîne XML spécifiée.</summary>
      <param name="newSibling" vsli:raw="The XML data string for the new sibling node.">Chaîne de données XML pour le nouveau nœud frère.</param>
      <exception cref="T:System.ArgumentNullException" vsli:raw="The XML string parameter is &lt;see langword=&quot;null&quot; /&gt;.">Le paramètre de chaîne XML est <see langword="null" />.</exception>
      <exception cref="T:System.InvalidOperationException" vsli:raw="The position of the &lt;see cref=&quot;T:System.Xml.XPath.XPathNavigator&quot; /&gt; does not allow a new sibling node to be inserted after the current node.">La position du <see cref="T:System.Xml.XPath.XPathNavigator" /> n’autorise pas l’insertion d’un nœud frère après le nœud actuel.</exception>
      <exception cref="T:System.NotSupportedException" vsli:raw="The &lt;see cref=&quot;T:System.Xml.XPath.XPathNavigator&quot; /&gt; does not support editing.">Le <see cref="T:System.Xml.XPath.XPathNavigator" /> ne prend pas en charge la modification.</exception>
      <exception cref="T:System.Xml.XmlException" vsli:raw="The XML string parameter is not well-formed.">Le paramètre de chaîne XML n’est pas mis en forme correctement.</exception>
    </member>
    <member name="M:System.Xml.XPath.XPathNavigator.InsertAfter(System.Xml.XmlReader)">
      <summary vsli:raw="Creates a new sibling node after the currently selected node using the XML contents of the &lt;see cref=&quot;T:System.Xml.XmlReader&quot; /&gt; object specified.">Crée un nœud frère après le nœud actuellement sélectionné en utilisant le contenu XML de l’objet <see cref="T:System.Xml.XmlReader" /> spécifié.</summary>
      <param name="newSibling" vsli:raw="An &lt;see cref=&quot;T:System.Xml.XmlReader&quot; /&gt; object positioned on the XML data for the new sibling node.">Objet <see cref="T:System.Xml.XmlReader" /> positionné sur les données XML pour le nouveau nœud frère.</param>
      <exception cref="T:System.ArgumentException" vsli:raw="The &lt;see cref=&quot;T:System.Xml.XmlReader&quot; /&gt; object is in an error state or closed.">L’objet <see cref="T:System.Xml.XmlReader" /> est dans un état d’erreur ou fermé.</exception>
      <exception cref="T:System.ArgumentNullException" vsli:raw="The &lt;see cref=&quot;T:System.Xml.XmlReader&quot; /&gt; object parameter is &lt;see langword=&quot;null&quot; /&gt;.">Le paramètre de l’objet <see cref="T:System.Xml.XmlReader" /> est <see langword="null" />.</exception>
      <exception cref="T:System.InvalidOperationException" vsli:raw="The position of the &lt;see cref=&quot;T:System.Xml.XPath.XPathNavigator&quot; /&gt; does not allow a new sibling node to be inserted after the current node.">La position du <see cref="T:System.Xml.XPath.XPathNavigator" /> n’autorise pas l’insertion d’un nœud frère après le nœud actuel.</exception>
      <exception cref="T:System.NotSupportedException" vsli:raw="The &lt;see cref=&quot;T:System.Xml.XPath.XPathNavigator&quot; /&gt; does not support editing.">Le <see cref="T:System.Xml.XPath.XPathNavigator" /> ne prend pas en charge la modification.</exception>
      <exception cref="T:System.Xml.XmlException" vsli:raw="The XML contents of the &lt;see cref=&quot;T:System.Xml.XmlReader&quot; /&gt; object parameter is not well-formed.">Le contenu XML du paramètre de l’objet <see cref="T:System.Xml.XmlReader" /> n’est pas mis en forme correctement.</exception>
    </member>
    <member name="M:System.Xml.XPath.XPathNavigator.InsertAfter(System.Xml.XPath.XPathNavigator)">
      <summary vsli:raw="Creates a new sibling node after the currently selected node using the nodes in the &lt;see cref=&quot;T:System.Xml.XPath.XPathNavigator&quot; /&gt; object specified.">Crée un nœud frère après le nœud actuellement sélectionné à l’aide des nœuds dans l’objet <see cref="T:System.Xml.XPath.XPathNavigator" /> spécifié.</summary>
      <param name="newSibling" vsli:raw="An &lt;see cref=&quot;T:System.Xml.XPath.XPathNavigator&quot; /&gt; object positioned on the node to add as the new sibling node.">Objet <see cref="T:System.Xml.XPath.XPathNavigator" /> positionné sur le nœud à ajouter en tant que nouveau nœud frère.</param>
      <exception cref="T:System.ArgumentNullException" vsli:raw="The &lt;see cref=&quot;T:System.Xml.XPath.XPathNavigator&quot; /&gt; object parameter is &lt;see langword=&quot;null&quot; /&gt;.">Le paramètre de l’objet <see cref="T:System.Xml.XPath.XPathNavigator" /> est <see langword="null" />.</exception>
      <exception cref="T:System.InvalidOperationException" vsli:raw="The position of the &lt;see cref=&quot;T:System.Xml.XPath.XPathNavigator&quot; /&gt; does not allow a new sibling node to be inserted after the current node.">La position du <see cref="T:System.Xml.XPath.XPathNavigator" /> n’autorise pas l’insertion d’un nœud frère après le nœud actuel.</exception>
      <exception cref="T:System.NotSupportedException" vsli:raw="The &lt;see cref=&quot;T:System.Xml.XPath.XPathNavigator&quot; /&gt; does not support editing.">Le <see cref="T:System.Xml.XPath.XPathNavigator" /> ne prend pas en charge la modification.</exception>
    </member>
    <member name="M:System.Xml.XPath.XPathNavigator.InsertBefore">
      <summary vsli:raw="Returns an &lt;see cref=&quot;T:System.Xml.XmlWriter&quot; /&gt; object used to create a new sibling node before the currently selected node.">Retourne un objet <see cref="T:System.Xml.XmlWriter" /> utilisé pour créer un nœud frère avant le nœud actuellement sélectionné.</summary>
      <exception cref="T:System.InvalidOperationException" vsli:raw="The position of the &lt;see cref=&quot;T:System.Xml.XPath.XPathNavigator&quot; /&gt; does not allow a new sibling node to be inserted before the current node.">La position du <see cref="T:System.Xml.XPath.XPathNavigator" /> n’autorise pas l’insertion d’un nœud frère avant le nœud actuel.</exception>
      <exception cref="T:System.NotSupportedException" vsli:raw="The &lt;see cref=&quot;T:System.Xml.XPath.XPathNavigator&quot; /&gt; does not support editing.">Le <see cref="T:System.Xml.XPath.XPathNavigator" /> ne prend pas en charge la modification.</exception>
      <returns vsli:raw="An &lt;see cref=&quot;T:System.Xml.XmlWriter&quot; /&gt; object used to create a new sibling node before the currently selected node.">Objet <see cref="T:System.Xml.XmlWriter" /> utilisé pour créer un nœud frère avant le nœud actuellement sélectionné.</returns>
    </member>
    <member name="M:System.Xml.XPath.XPathNavigator.InsertBefore(System.String)">
      <summary vsli:raw="Creates a new sibling node before the currently selected node using the XML string specified.">Crée un nœud frère avant le nœud actuellement sélectionné à l'aide de la chaîne XML spécifiée.</summary>
      <param name="newSibling" vsli:raw="The XML data string for the new sibling node.">Chaîne de données XML pour le nouveau nœud frère.</param>
      <exception cref="T:System.ArgumentNullException" vsli:raw="The XML string parameter is &lt;see langword=&quot;null&quot; /&gt;.">Le paramètre de chaîne XML est <see langword="null" />.</exception>
      <exception cref="T:System.InvalidOperationException" vsli:raw="The position of the &lt;see cref=&quot;T:System.Xml.XPath.XPathNavigator&quot; /&gt; does not allow a new sibling node to be inserted before the current node.">La position du <see cref="T:System.Xml.XPath.XPathNavigator" /> n’autorise pas l’insertion d’un nœud frère avant le nœud actuel.</exception>
      <exception cref="T:System.NotSupportedException" vsli:raw="The &lt;see cref=&quot;T:System.Xml.XPath.XPathNavigator&quot; /&gt; does not support editing.">Le <see cref="T:System.Xml.XPath.XPathNavigator" /> ne prend pas en charge la modification.</exception>
      <exception cref="T:System.Xml.XmlException" vsli:raw="The XML string parameter is not well-formed.">Le paramètre de chaîne XML n’est pas mis en forme correctement.</exception>
    </member>
    <member name="M:System.Xml.XPath.XPathNavigator.InsertBefore(System.Xml.XmlReader)">
      <summary vsli:raw="Creates a new sibling node before the currently selected node using the XML contents of the &lt;see cref=&quot;T:System.Xml.XmlReader&quot; /&gt; object specified.">Crée un nœud frère avant le nœud actuellement sélectionné en utilisant le contenu XML de l’objet <see cref="T:System.Xml.XmlReader" /> spécifié.</summary>
      <param name="newSibling" vsli:raw="An &lt;see cref=&quot;T:System.Xml.XmlReader&quot; /&gt; object positioned on the XML data for the new sibling node.">Objet <see cref="T:System.Xml.XmlReader" /> positionné sur les données XML pour le nouveau nœud frère.</param>
      <exception cref="T:System.ArgumentException" vsli:raw="The &lt;see cref=&quot;T:System.Xml.XmlReader&quot; /&gt; object is in an error state or closed.">L’objet <see cref="T:System.Xml.XmlReader" /> est dans un état d’erreur ou fermé.</exception>
      <exception cref="T:System.ArgumentNullException" vsli:raw="The &lt;see cref=&quot;T:System.Xml.XmlReader&quot; /&gt; object parameter is &lt;see langword=&quot;null&quot; /&gt;.">Le paramètre de l’objet <see cref="T:System.Xml.XmlReader" /> est <see langword="null" />.</exception>
      <exception cref="T:System.InvalidOperationException" vsli:raw="The position of the &lt;see cref=&quot;T:System.Xml.XPath.XPathNavigator&quot; /&gt; does not allow a new sibling node to be inserted before the current node.">La position du <see cref="T:System.Xml.XPath.XPathNavigator" /> n’autorise pas l’insertion d’un nœud frère avant le nœud actuel.</exception>
      <exception cref="T:System.NotSupportedException" vsli:raw="The &lt;see cref=&quot;T:System.Xml.XPath.XPathNavigator&quot; /&gt; does not support editing.">Le <see cref="T:System.Xml.XPath.XPathNavigator" /> ne prend pas en charge la modification.</exception>
      <exception cref="T:System.Xml.XmlException" vsli:raw="The XML contents of the &lt;see cref=&quot;T:System.Xml.XmlReader&quot; /&gt; object parameter is not well-formed.">Le contenu XML du paramètre de l’objet <see cref="T:System.Xml.XmlReader" /> n’est pas mis en forme correctement.</exception>
    </member>
    <member name="M:System.Xml.XPath.XPathNavigator.InsertBefore(System.Xml.XPath.XPathNavigator)">
      <summary vsli:raw="Creates a new sibling node before the currently selected node using the nodes in the &lt;see cref=&quot;T:System.Xml.XPath.XPathNavigator&quot; /&gt; specified.">Crée un nœud frère avant le nœud actuellement sélectionné à l’aide des nœuds dans l’objet <see cref="T:System.Xml.XPath.XPathNavigator" /> spécifié.</summary>
      <param name="newSibling" vsli:raw="An &lt;see cref=&quot;T:System.Xml.XPath.XPathNavigator&quot; /&gt; object positioned on the node to add as the new sibling node.">Objet <see cref="T:System.Xml.XPath.XPathNavigator" /> positionné sur le nœud à ajouter en tant que nouveau nœud frère.</param>
      <exception cref="T:System.ArgumentNullException" vsli:raw="The &lt;see cref=&quot;T:System.Xml.XPath.XPathNavigator&quot; /&gt; object parameter is &lt;see langword=&quot;null&quot; /&gt;.">Le paramètre de l’objet <see cref="T:System.Xml.XPath.XPathNavigator" /> est <see langword="null" />.</exception>
      <exception cref="T:System.InvalidOperationException" vsli:raw="The position of the &lt;see cref=&quot;T:System.Xml.XPath.XPathNavigator&quot; /&gt; does not allow a new sibling node to be inserted before the current node.">La position du <see cref="T:System.Xml.XPath.XPathNavigator" /> n’autorise pas l’insertion d’un nœud frère avant le nœud actuel.</exception>
      <exception cref="T:System.NotSupportedException" vsli:raw="The &lt;see cref=&quot;T:System.Xml.XPath.XPathNavigator&quot; /&gt; does not support editing.">Le <see cref="T:System.Xml.XPath.XPathNavigator" /> ne prend pas en charge la modification.</exception>
    </member>
    <member name="M:System.Xml.XPath.XPathNavigator.InsertElementAfter(System.String,System.String,System.String,System.String)">
      <summary vsli:raw="Creates a new sibling element after the current node using the namespace prefix, local name and namespace URI specified, with the value specified.">Crée un élément frère après le nœud actuel à l'aide du préfixe d'espace de noms, du nom local et de l'URI d'espace de noms spécifiés, avec la valeur spécifiée.</summary>
      <param name="prefix" vsli:raw="The namespace prefix of the new child element (if any).">Préfixe d'espace de noms du nouvel élément enfant (le cas échéant).</param>
      <param name="localName" vsli:raw="The local name of the new child element (if any).">Nom local du nouvel élément enfant (le cas échéant).</param>
      <param name="namespaceURI" vsli:raw="The namespace URI of the new child element (if any). &lt;see cref=&quot;F:System.String.Empty&quot; /&gt; and &lt;see langword=&quot;null&quot; /&gt; are equivalent.">URI de l’espace de noms du nouvel élément enfant (le cas échéant). <see cref="F:System.String.Empty" /> et <see langword="null" /> sont équivalents.</param>
      <param name="value" vsli:raw="The value of the new child element. If &lt;see cref=&quot;F:System.String.Empty&quot; /&gt; or &lt;see langword=&quot;null&quot; /&gt; are passed, an empty element is created.">Valeur du nouvel élément enfant. Si <see cref="F:System.String.Empty" /> ou <see langword="null" /> sont passés, une élément vide est créé</param>
      <exception cref="T:System.InvalidOperationException" vsli:raw="The position of the &lt;see cref=&quot;T:System.Xml.XPath.XPathNavigator&quot; /&gt; does not allow a new sibling node to be inserted after the current node.">La position du <see cref="T:System.Xml.XPath.XPathNavigator" /> n’autorise pas l’insertion d’un nœud frère après le nœud actuel.</exception>
      <exception cref="T:System.NotSupportedException" vsli:raw="The &lt;see cref=&quot;T:System.Xml.XPath.XPathNavigator&quot; /&gt; does not support editing.">Le <see cref="T:System.Xml.XPath.XPathNavigator" /> ne prend pas en charge la modification.</exception>
    </member>
    <member name="M:System.Xml.XPath.XPathNavigator.InsertElementBefore(System.String,System.String,System.String,System.String)">
      <summary vsli:raw="Creates a new sibling element before the current node using the namespace prefix, local name, and namespace URI specified, with the value specified.">Crée un élément frère avant le nœud actuel à l'aide du préfixe d'espace de noms, du nom local et de l'URI d'espace de noms spécifiés, avec la valeur spécifiée.</summary>
      <param name="prefix" vsli:raw="The namespace prefix of the new child element (if any).">Préfixe d'espace de noms du nouvel élément enfant (le cas échéant).</param>
      <param name="localName" vsli:raw="The local name of the new child element (if any).">Nom local du nouvel élément enfant (le cas échéant).</param>
      <param name="namespaceURI" vsli:raw="The namespace URI of the new child element (if any). &lt;see cref=&quot;F:System.String.Empty&quot; /&gt; and &lt;see langword=&quot;null&quot; /&gt; are equivalent.">URI de l’espace de noms du nouvel élément enfant (le cas échéant). <see cref="F:System.String.Empty" /> et <see langword="null" /> sont équivalents.</param>
      <param name="value" vsli:raw="The value of the new child element. If &lt;see cref=&quot;F:System.String.Empty&quot; /&gt; or &lt;see langword=&quot;null&quot; /&gt; are passed, an empty element is created.">Valeur du nouvel élément enfant. Si <see cref="F:System.String.Empty" /> ou <see langword="null" /> sont passés, une élément vide est créé</param>
      <exception cref="T:System.InvalidOperationException" vsli:raw="The position of the &lt;see cref=&quot;T:System.Xml.XPath.XPathNavigator&quot; /&gt; does not allow a new sibling node to be inserted before the current node.">La position du <see cref="T:System.Xml.XPath.XPathNavigator" /> n’autorise pas l’insertion d’un nœud frère avant le nœud actuel.</exception>
      <exception cref="T:System.NotSupportedException" vsli:raw="The &lt;see cref=&quot;T:System.Xml.XPath.XPathNavigator&quot; /&gt; does not support editing.">Le <see cref="T:System.Xml.XPath.XPathNavigator" /> ne prend pas en charge la modification.</exception>
    </member>
    <member name="M:System.Xml.XPath.XPathNavigator.IsDescendant(System.Xml.XPath.XPathNavigator)">
      <summary vsli:raw="Determines whether the specified &lt;see cref=&quot;T:System.Xml.XPath.XPathNavigator&quot; /&gt; is a descendant of the current &lt;see cref=&quot;T:System.Xml.XPath.XPathNavigator&quot; /&gt;.">Détermine si le <see cref="T:System.Xml.XPath.XPathNavigator" /> spécifié est un descendant du <see cref="T:System.Xml.XPath.XPathNavigator" /> en cours.</summary>
      <param name="nav" vsli:raw="The &lt;see cref=&quot;T:System.Xml.XPath.XPathNavigator&quot; /&gt; to compare to this &lt;see cref=&quot;T:System.Xml.XPath.XPathNavigator&quot; /&gt;.">
        <see cref="T:System.Xml.XPath.XPathNavigator" /> à comparer à <see cref="T:System.Xml.XPath.XPathNavigator" />.</param>
      <returns vsli:raw="&lt;see langword=&quot;true&quot; /&gt; if the specified &lt;see cref=&quot;T:System.Xml.XPath.XPathNavigator&quot; /&gt; is a descendant of the current &lt;see cref=&quot;T:System.Xml.XPath.XPathNavigator&quot; /&gt;; otherwise, &lt;see langword=&quot;false&quot; /&gt;.">Retourne <see langword="true" /> si le <see cref="T:System.Xml.XPath.XPathNavigator" /> spécifié est un descendant de <see cref="T:System.Xml.XPath.XPathNavigator" /> en cours ; sinon, <see langword="false" />.</returns>
    </member>
    <member name="M:System.Xml.XPath.XPathNavigator.IsSamePosition(System.Xml.XPath.XPathNavigator)">
      <summary vsli:raw="When overridden in a derived class, determines whether the current &lt;see cref=&quot;T:System.Xml.XPath.XPathNavigator&quot; /&gt; is at the same position as the specified &lt;see cref=&quot;T:System.Xml.XPath.XPathNavigator&quot; /&gt;.">En cas de substitution dans une classe dérivée, détermine si le <see cref="T:System.Xml.XPath.XPathNavigator" /> actuel est à la même position que le <see cref="T:System.Xml.XPath.XPathNavigator" /> spécifié.</summary>
      <param name="other" vsli:raw="The &lt;see cref=&quot;T:System.Xml.XPath.XPathNavigator&quot; /&gt; to compare to this &lt;see cref=&quot;T:System.Xml.XPath.XPathNavigator&quot; /&gt;.">
        <see cref="T:System.Xml.XPath.XPathNavigator" /> à comparer à <see cref="T:System.Xml.XPath.XPathNavigator" />.</param>
      <returns vsli:raw="&lt;see langword=&quot;true&quot; /&gt; if the two &lt;see cref=&quot;T:System.Xml.XPath.XPathNavigator&quot; /&gt; objects have the same position; otherwise, &lt;see langword=&quot;false&quot; /&gt;.">
        <see langword="true" /> si les deux objets <see cref="T:System.Xml.XPath.XPathNavigator" /> sont à la même position ; sinon, <see langword="false" />.</returns>
    </member>
    <member name="M:System.Xml.XPath.XPathNavigator.LookupNamespace(System.String)">
      <summary vsli:raw="Gets the namespace URI for the specified prefix.">Obtient l'URI de l'espace de noms du préfixe spécifié.</summary>
      <param name="prefix" vsli:raw="The prefix whose namespace URI you want to resolve. To match the default namespace, pass &lt;see cref=&quot;F:System.String.Empty&quot; /&gt;.">Préfixe dont vous souhaitez résoudre l'URI de l'espace de noms. Pour mettre en correspondance l'espace de noms par défaut, passez <see cref="F:System.String.Empty" />.</param>
      <returns vsli:raw="A &lt;see cref=&quot;T:System.String&quot; /&gt; that contains the namespace URI assigned to the namespace prefix specified; &lt;see langword=&quot;null&quot; /&gt; if no namespace URI is assigned to the prefix specified. The &lt;see cref=&quot;T:System.String&quot; /&gt; returned is atomized.">
        <see cref="T:System.String" /> qui contient l'URI d'espace de noms attribué au préfixe d'espace de noms spécifié ; <see langword="null" /> si aucun URI d'espace de noms n'est assigné au préfixe spécifié. La <see cref="T:System.String" /> retournée est atomisée.</returns>
    </member>
    <member name="M:System.Xml.XPath.XPathNavigator.LookupPrefix(System.String)">
      <summary vsli:raw="Gets the prefix declared for the specified namespace URI.">Obtient le préfixe déclaré pour l'URI d'espace de noms spécifié.</summary>
      <param name="namespaceURI" vsli:raw="The namespace URI to resolve for the prefix.">URI d'espace de noms à trouver pour le préfixe.</param>
      <returns vsli:raw="A &lt;see cref=&quot;T:System.String&quot; /&gt; that contains the namespace prefix assigned to the namespace URI specified; otherwise, &lt;see cref=&quot;F:System.String.Empty&quot; /&gt; if no prefix is assigned to the namespace URI specified. The &lt;see cref=&quot;T:System.String&quot; /&gt; returned is atomized.">
        <see cref="T:System.String" /> qui contient le préfixe d'espace de noms assigné à l'URI d'espace de noms spécifié ; sinon, <see cref="F:System.String.Empty" />, si aucun préfixe n'est assigné à l'URI d'espace de noms spécifié. La <see cref="T:System.String" /> retournée est atomisée.</returns>
    </member>
    <member name="M:System.Xml.XPath.XPathNavigator.Matches(System.String)">
      <summary vsli:raw="Determines whether the current node matches the specified XPath expression.">Détermine si le nœud actuel correspond à l’expression XPath spécifiée.</summary>
      <param name="xpath" vsli:raw="The XPath expression.">Expression XPath.</param>
      <exception cref="T:System.ArgumentException" vsli:raw="The XPath expression cannot be evaluated.">L’expression XPath ne peut pas être évaluée.</exception>
      <exception cref="T:System.Xml.XPath.XPathException" vsli:raw="The XPath expression is not valid.">L’expression XPath n’est pas valide.</exception>
      <returns vsli:raw="&lt;see langword=&quot;true&quot; /&gt; if the current node matches the specified XPath expression; otherwise, &lt;see langword=&quot;false&quot; /&gt;.">
        <see langword="true" /> si le nœud actuel correspond à l'expression XPath spécifiée ; sinon, <see langword="false" />.</returns>
    </member>
    <member name="M:System.Xml.XPath.XPathNavigator.Matches(System.Xml.XPath.XPathExpression)">
      <summary vsli:raw="Determines whether the current node matches the specified &lt;see cref=&quot;T:System.Xml.XPath.XPathExpression&quot; /&gt;.">Détermine si le nœud actuel correspond à l’expression <see cref="T:System.Xml.XPath.XPathExpression" /> spécifiée.</summary>
      <param name="expr" vsli:raw="An &lt;see cref=&quot;T:System.Xml.XPath.XPathExpression&quot; /&gt; object containing the compiled XPath expression.">Objet <see cref="T:System.Xml.XPath.XPathExpression" /> contenant l’expression XPath compilée.</param>
      <exception cref="T:System.ArgumentException" vsli:raw="The XPath expression cannot be evaluated.">L’expression XPath ne peut pas être évaluée.</exception>
      <exception cref="T:System.Xml.XPath.XPathException" vsli:raw="The XPath expression is not valid.">L’expression XPath n’est pas valide.</exception>
      <returns vsli:raw="&lt;see langword=&quot;true&quot; /&gt; if the current node matches the &lt;see cref=&quot;T:System.Xml.XPath.XPathExpression&quot; /&gt;; otherwise, &lt;see langword=&quot;false&quot; /&gt;.">
        <see langword="true" /> si le nœud actuel correspond à l’expression <see cref="T:System.Xml.XPath.XPathExpression" /> ; sinon, <see langword="false" />.</returns>
    </member>
    <member name="M:System.Xml.XPath.XPathNavigator.MoveTo(System.Xml.XPath.XPathNavigator)">
      <summary vsli:raw="When overridden in a derived class, moves the &lt;see cref=&quot;T:System.Xml.XPath.XPathNavigator&quot; /&gt; to the same position as the specified &lt;see cref=&quot;T:System.Xml.XPath.XPathNavigator&quot; /&gt;.">En cas de substitution dans une classe dérivée, déplace <see cref="T:System.Xml.XPath.XPathNavigator" /> vers la même position que celle du <see cref="T:System.Xml.XPath.XPathNavigator" /> spécifié.</summary>
      <param name="other" vsli:raw="The &lt;see cref=&quot;T:System.Xml.XPath.XPathNavigator&quot; /&gt; positioned on the node that you want to move to.">
        <see cref="T:System.Xml.XPath.XPathNavigator" /> placé sur le nœud vers lequel vous souhaitez vous déplacer.</param>
      <returns vsli:raw="&lt;see langword=&quot;true&quot; /&gt; if the &lt;see cref=&quot;T:System.Xml.XPath.XPathNavigator&quot; /&gt; is successful moving to the same position as the specified &lt;see cref=&quot;T:System.Xml.XPath.XPathNavigator&quot; /&gt;; otherwise, &lt;see langword=&quot;false&quot; /&gt;. If &lt;see langword=&quot;false&quot; /&gt;, the position of the &lt;see cref=&quot;T:System.Xml.XPath.XPathNavigator&quot; /&gt; is unchanged.">
        <see langword="true" /> si le <see cref="T:System.Xml.XPath.XPathNavigator" /> se déplace correctement vers la même position que celle du <see cref="T:System.Xml.XPath.XPathNavigator" /> spécifié ; sinon, <see langword="false" />. Si la valeur est <see langword="false" />, c’est que la position du <see cref="T:System.Xml.XPath.XPathNavigator" /> est inchangée.</returns>
    </member>
    <member name="M:System.Xml.XPath.XPathNavigator.MoveToAttribute(System.String,System.String)">
      <summary vsli:raw="Moves the &lt;see cref=&quot;T:System.Xml.XPath.XPathNavigator&quot; /&gt; to the attribute with the matching local name and namespace URI.">Déplace le <see cref="T:System.Xml.XPath.XPathNavigator" /> vers l'attribut avec le nom local et l'URI d'espace de noms spécifiés.</summary>
      <param name="localName" vsli:raw="The local name of the attribute.">Le nom local de l'attribut.</param>
      <param name="namespaceURI" vsli:raw="The namespace URI of the attribute; &lt;see langword=&quot;null&quot; /&gt; for an empty namespace.">L'URI d'espace de noms de l'attribut ; <see langword="null" /> pour un espace de noms vide.</param>
      <returns vsli:raw="&lt;see langword=&quot;true&quot; /&gt; if the &lt;see cref=&quot;T:System.Xml.XPath.XPathNavigator&quot; /&gt; is successful moving to the attribute; otherwise, &lt;see langword=&quot;false&quot; /&gt;. If &lt;see langword=&quot;false&quot; /&gt;, the position of the &lt;see cref=&quot;T:System.Xml.XPath.XPathNavigator&quot; /&gt; is unchanged.">
        <see langword="true" /> si le <see cref="T:System.Xml.XPath.XPathNavigator" /> se déplace correctement vers l’attribut ; sinon, <see langword="false" />. Si la valeur est <see langword="false" />, c’est que la position du <see cref="T:System.Xml.XPath.XPathNavigator" /> est inchangée.</returns>
    </member>
    <member name="M:System.Xml.XPath.XPathNavigator.MoveToChild(System.String,System.String)">
      <summary vsli:raw="Moves the &lt;see cref=&quot;T:System.Xml.XPath.XPathNavigator&quot; /&gt; to the child node with the local name and namespace URI specified.">Déplace <see cref="T:System.Xml.XPath.XPathNavigator" /> vers le nœud enfant doté du nom local et de l'URI d'espace de noms spécifiés.</summary>
      <param name="localName" vsli:raw="The local name of the child node to move to.">Nom local du nœud enfant vers lequel se déplacer.</param>
      <param name="namespaceURI" vsli:raw="The namespace URI of the child node to move to.">URI d'espace de noms du nœud enfant vers lequel se déplacer.</param>
      <returns vsli:raw="&lt;see langword=&quot;true&quot; /&gt; if the &lt;see cref=&quot;T:System.Xml.XPath.XPathNavigator&quot; /&gt; is successful moving to the child node; otherwise, &lt;see langword=&quot;false&quot; /&gt;. If &lt;see langword=&quot;false&quot; /&gt;, the position of the &lt;see cref=&quot;T:System.Xml.XPath.XPathNavigator&quot; /&gt; is unchanged.">
        <see langword="true" /> si le <see cref="T:System.Xml.XPath.XPathNavigator" /> se déplace correctement vers le nœud enfant ; sinon, <see langword="false" />. Si la valeur est <see langword="false" />, c’est que la position du <see cref="T:System.Xml.XPath.XPathNavigator" /> est inchangée.</returns>
    </member>
    <member name="M:System.Xml.XPath.XPathNavigator.MoveToChild(System.Xml.XPath.XPathNodeType)">
      <summary vsli:raw="Moves the &lt;see cref=&quot;T:System.Xml.XPath.XPathNavigator&quot; /&gt; to the child node of the &lt;see cref=&quot;T:System.Xml.XPath.XPathNodeType&quot; /&gt; specified.">Déplace le <see cref="T:System.Xml.XPath.XPathNavigator" /> vers le nœud enfant du <see cref="T:System.Xml.XPath.XPathNodeType" /> spécifié.</summary>
      <param name="type" vsli:raw="The &lt;see cref=&quot;T:System.Xml.XPath.XPathNodeType&quot; /&gt; of the child node to move to.">
        <see cref="T:System.Xml.XPath.XPathNodeType" /> du nœud enfant vers lequel se déplacer.</param>
      <returns vsli:raw="&lt;see langword=&quot;true&quot; /&gt; if the &lt;see cref=&quot;T:System.Xml.XPath.XPathNavigator&quot; /&gt; is successful moving to the child node; otherwise, &lt;see langword=&quot;false&quot; /&gt;. If &lt;see langword=&quot;false&quot; /&gt;, the position of the &lt;see cref=&quot;T:System.Xml.XPath.XPathNavigator&quot; /&gt; is unchanged.">
        <see langword="true" /> si le <see cref="T:System.Xml.XPath.XPathNavigator" /> se déplace correctement vers le nœud enfant ; sinon, <see langword="false" />. Si la valeur est <see langword="false" />, c’est que la position du <see cref="T:System.Xml.XPath.XPathNavigator" /> est inchangée.</returns>
    </member>
    <member name="M:System.Xml.XPath.XPathNavigator.MoveToFirst">
      <summary vsli:raw="Moves the &lt;see cref=&quot;T:System.Xml.XPath.XPathNavigator&quot; /&gt; to the first sibling node of the current node.">Déplace l'objet <see cref="T:System.Xml.XPath.XPathNavigator" /> vers le premier nœud frère du nœud actuel.</summary>
      <returns vsli:raw="&lt;see langword=&quot;true&quot; /&gt; if the &lt;see cref=&quot;T:System.Xml.XPath.XPathNavigator&quot; /&gt; is successful moving to the first sibling node of the current node; &lt;see langword=&quot;false&quot; /&gt; if there is no first sibling, or if the &lt;see cref=&quot;T:System.Xml.XPath.XPathNavigator&quot; /&gt; is currently positioned on an attribute node. If the &lt;see cref=&quot;T:System.Xml.XPath.XPathNavigator&quot; /&gt; is already positioned on the first sibling, &lt;see cref=&quot;T:System.Xml.XPath.XPathNavigator&quot; /&gt; will return &lt;see langword=&quot;true&quot; /&gt; and will not move its position.  &#xA;  &#xA; If &lt;see cref=&quot;M:System.Xml.XPath.XPathNavigator.MoveToFirst&quot; /&gt; returns &lt;see langword=&quot;false&quot; /&gt; because there is no first sibling, or if &lt;see cref=&quot;T:System.Xml.XPath.XPathNavigator&quot; /&gt; is currently positioned on an attribute, the position of the &lt;see cref=&quot;T:System.Xml.XPath.XPathNavigator&quot; /&gt; is unchanged.">
        <see langword="true" /> si le <see cref="T:System.Xml.XPath.XPathNavigator" /> se déplace correctement vers le premier nœud frère du nœud actuel ; <see langword="false" /> s’il n’existe aucun premier nœud frère ou si le <see cref="T:System.Xml.XPath.XPathNavigator" /> est actuellement positionné sur un nœud d’attribut. Si le <see cref="T:System.Xml.XPath.XPathNavigator" /> est déjà positionné sur le premier frère, <see cref="T:System.Xml.XPath.XPathNavigator" /> retourne <see langword="true" /> et ne déplace pas sa position.  
  
Si <see cref="M:System.Xml.XPath.XPathNavigator.MoveToFirst" /> retourne <see langword="false" /> parce qu'il n'y a pas de premier frère ou si <see cref="T:System.Xml.XPath.XPathNavigator" /> est actuellement positionné sur un attribut, la position du <see cref="T:System.Xml.XPath.XPathNavigator" /> ne change pas.</returns>
    </member>
    <member name="M:System.Xml.XPath.XPathNavigator.MoveToFirstAttribute">
      <summary vsli:raw="When overridden in a derived class, moves the &lt;see cref=&quot;T:System.Xml.XPath.XPathNavigator&quot; /&gt; to the first attribute of the current node.">En cas de substitution dans une classe dérivée, déplace le <see cref="T:System.Xml.XPath.XPathNavigator" /> au premier attribut du nœud actuel.</summary>
      <returns vsli:raw="&lt;see langword=&quot;true&quot; /&gt; if the &lt;see cref=&quot;T:System.Xml.XPath.XPathNavigator&quot; /&gt; is successful moving to the first attribute of the current node; otherwise, &lt;see langword=&quot;false&quot; /&gt;. If &lt;see langword=&quot;false&quot; /&gt;, the position of the &lt;see cref=&quot;T:System.Xml.XPath.XPathNavigator&quot; /&gt; is unchanged.">
        <see langword="true" /> si le <see cref="T:System.Xml.XPath.XPathNavigator" /> se déplace correctement vers le premier attribut du nœud actuel ; sinon, <see langword="false" />. Si la valeur est <see langword="false" />, c’est que la position du <see cref="T:System.Xml.XPath.XPathNavigator" /> est inchangée.</returns>
    </member>
    <member name="M:System.Xml.XPath.XPathNavigator.MoveToFirstChild">
      <summary vsli:raw="When overridden in a derived class, moves the &lt;see cref=&quot;T:System.Xml.XPath.XPathNavigator&quot; /&gt; to the first child node of the current node.">En cas de substitution dans une classe dérivée, déplace <see cref="T:System.Xml.XPath.XPathNavigator" /> vers le premier attribut enfant du nœud actuel.</summary>
      <returns vsli:raw="&lt;see langword=&quot;true&quot; /&gt; if the &lt;see cref=&quot;T:System.Xml.XPath.XPathNavigator&quot; /&gt; is successful moving to the first child node of the current node; otherwise, &lt;see langword=&quot;false&quot; /&gt;. If &lt;see langword=&quot;false&quot; /&gt;, the position of the &lt;see cref=&quot;T:System.Xml.XPath.XPathNavigator&quot; /&gt; is unchanged.">
        <see langword="true" /> si le <see cref="T:System.Xml.XPath.XPathNavigator" /> se déplace correctement vers le premier nœud enfant du nœud actuel ; sinon, <see langword="false" />. Si la valeur est <see langword="false" />, c’est que la position du <see cref="T:System.Xml.XPath.XPathNavigator" /> est inchangée.</returns>
    </member>
    <member name="M:System.Xml.XPath.XPathNavigator.MoveToFirstNamespace">
      <summary vsli:raw="Moves the &lt;see cref=&quot;T:System.Xml.XPath.XPathNavigator&quot; /&gt; to first namespace node of the current node.">Déplace <see cref="T:System.Xml.XPath.XPathNavigator" /> vers le premier nœud d'espace du nœud actuel.</summary>
      <returns vsli:raw="&lt;see langword=&quot;true&quot; /&gt; if the &lt;see cref=&quot;T:System.Xml.XPath.XPathNavigator&quot; /&gt; is successful moving to the first namespace node; otherwise, &lt;see langword=&quot;false&quot; /&gt;. If &lt;see langword=&quot;false&quot; /&gt;, the position of the &lt;see cref=&quot;T:System.Xml.XPath.XPathNavigator&quot; /&gt; is unchanged.">
        <see langword="true" /> si le <see cref="T:System.Xml.XPath.XPathNavigator" /> se déplace correctement vers le premier nœud d’espace de noms ; sinon, <see langword="false" />. Si la valeur est <see langword="false" />, c’est que la position du <see cref="T:System.Xml.XPath.XPathNavigator" /> est inchangée.</returns>
    </member>
    <member name="M:System.Xml.XPath.XPathNavigator.MoveToFirstNamespace(System.Xml.XPath.XPathNamespaceScope)">
      <summary vsli:raw="When overridden in a derived class, moves the &lt;see cref=&quot;T:System.Xml.XPath.XPathNavigator&quot; /&gt; to the first namespace node that matches the &lt;see cref=&quot;T:System.Xml.XPath.XPathNamespaceScope&quot; /&gt; specified.">En cas de substitution dans une classe dérivée, déplace <see cref="T:System.Xml.XPath.XPathNavigator" /> vers le premier nœud d'espace de noms qui correspond à la <see cref="T:System.Xml.XPath.XPathNamespaceScope" /> spécifiée.</summary>
      <param name="namespaceScope" vsli:raw="An &lt;see cref=&quot;T:System.Xml.XPath.XPathNamespaceScope&quot; /&gt; value describing the namespace scope.">Valeur de <see cref="T:System.Xml.XPath.XPathNamespaceScope" /> décrivant la portée espace de noms.</param>
      <returns vsli:raw="&lt;see langword=&quot;true&quot; /&gt; if the &lt;see cref=&quot;T:System.Xml.XPath.XPathNavigator&quot; /&gt; is successful moving to the first namespace node; otherwise, &lt;see langword=&quot;false&quot; /&gt;. If &lt;see langword=&quot;false&quot; /&gt;, the position of the &lt;see cref=&quot;T:System.Xml.XPath.XPathNavigator&quot; /&gt; is unchanged.">
        <see langword="true" /> si le <see cref="T:System.Xml.XPath.XPathNavigator" /> se déplace correctement vers le premier nœud d’espace de noms ; sinon, <see langword="false" />. Si la valeur est <see langword="false" />, c’est que la position du <see cref="T:System.Xml.XPath.XPathNavigator" /> est inchangée.</returns>
    </member>
    <member name="M:System.Xml.XPath.XPathNavigator.MoveToFollowing(System.String,System.String)">
      <summary vsli:raw="Moves the &lt;see cref=&quot;T:System.Xml.XPath.XPathNavigator&quot; /&gt; to the element with the local name and namespace URI specified in document order.">Déplace le <see cref="T:System.Xml.XPath.XPathNavigator" /> vers l’élément dont le nom local et l’URI d’espace de noms spécifiés dans l’ordre du document.</summary>
      <param name="localName" vsli:raw="The local name of the element.">Le nom local de l'élément.</param>
      <param name="namespaceURI" vsli:raw="The namespace URI of the element.">L'URI de l'espace de noms de l'élément.</param>
      <returns vsli:raw="&lt;see langword=&quot;true&quot; /&gt; if the &lt;see cref=&quot;T:System.Xml.XPath.XPathNavigator&quot; /&gt; moved successfully; otherwise, &lt;see langword=&quot;false&quot; /&gt;.">
        <see langword="true" /> si le déplacement de <see cref="T:System.Xml.XPath.XPathNavigator" /> est réussi ; sinon, <see langword="false" />.</returns>
    </member>
    <member name="M:System.Xml.XPath.XPathNavigator.MoveToFollowing(System.String,System.String,System.Xml.XPath.XPathNavigator)">
      <summary vsli:raw="Moves the &lt;see cref=&quot;T:System.Xml.XPath.XPathNavigator&quot; /&gt; to the element with the local name and namespace URI specified, to the boundary specified, in document order.">Déplace le <see cref="T:System.Xml.XPath.XPathNavigator" /> vers l’élément avec le nom local et l’URI d’espace de noms spécifiés, à la limite spécifiée, dans l’ordre du document.</summary>
      <param name="localName" vsli:raw="The local name of the element.">Le nom local de l'élément.</param>
      <param name="namespaceURI" vsli:raw="The namespace URI of the element.">L'URI de l'espace de noms de l'élément.</param>
      <param name="end" vsli:raw="The &lt;see cref=&quot;T:System.Xml.XPath.XPathNavigator&quot; /&gt; object positioned on the element boundary which the current &lt;see cref=&quot;T:System.Xml.XPath.XPathNavigator&quot; /&gt; will not move past while searching for the following element.">Objet <see cref="T:System.Xml.XPath.XPathNavigator" /> positionné sur la limite de l’élément que le <see cref="T:System.Xml.XPath.XPathNavigator" /> actuel ne dépassera pas en recherchant l’élément suivant.</param>
      <returns vsli:raw="&lt;see langword=&quot;true&quot; /&gt; if the &lt;see cref=&quot;T:System.Xml.XPath.XPathNavigator&quot; /&gt; moved successfully; otherwise, &lt;see langword=&quot;false&quot; /&gt;.">
        <see langword="true" /> si le déplacement de <see cref="T:System.Xml.XPath.XPathNavigator" /> est réussi ; sinon, <see langword="false" />.</returns>
    </member>
    <member name="M:System.Xml.XPath.XPathNavigator.MoveToFollowing(System.Xml.XPath.XPathNodeType)">
      <summary vsli:raw="Moves the &lt;see cref=&quot;T:System.Xml.XPath.XPathNavigator&quot; /&gt; to the following element of the &lt;see cref=&quot;T:System.Xml.XPath.XPathNodeType&quot; /&gt; specified in document order.">Déplace le <see cref="T:System.Xml.XPath.XPathNavigator" /> à l’élément suivant du <see cref="T:System.Xml.XPath.XPathNodeType" /> spécifié dans l’ordre du document.</summary>
      <param name="type" vsli:raw="The &lt;see cref=&quot;T:System.Xml.XPath.XPathNodeType&quot; /&gt; of the element. The &lt;see cref=&quot;T:System.Xml.XPath.XPathNodeType&quot; /&gt; cannot be &lt;see cref=&quot;F:System.Xml.XPath.XPathNodeType.Attribute&quot; /&gt; or &lt;see cref=&quot;F:System.Xml.XPath.XPathNodeType.Namespace&quot; /&gt;.">
        <see cref="T:System.Xml.XPath.XPathNodeType" /> de l’élément. Le <see cref="T:System.Xml.XPath.XPathNodeType" /> ne peut pas être <see cref="F:System.Xml.XPath.XPathNodeType.Attribute" /> ni <see cref="F:System.Xml.XPath.XPathNodeType.Namespace" />.</param>
      <returns vsli:raw="&lt;see langword=&quot;true&quot; /&gt; if the &lt;see cref=&quot;T:System.Xml.XPath.XPathNavigator&quot; /&gt; moved successfully; otherwise, &lt;see langword=&quot;false&quot; /&gt;.">
        <see langword="true" /> si le déplacement de <see cref="T:System.Xml.XPath.XPathNavigator" /> est réussi ; sinon, <see langword="false" />.</returns>
    </member>
    <member name="M:System.Xml.XPath.XPathNavigator.MoveToFollowing(System.Xml.XPath.XPathNodeType,System.Xml.XPath.XPathNavigator)">
      <summary vsli:raw="Moves the &lt;see cref=&quot;T:System.Xml.XPath.XPathNavigator&quot; /&gt; to the following element of the &lt;see cref=&quot;T:System.Xml.XPath.XPathNodeType&quot; /&gt; specified, to the boundary specified, in document order.">Déplace le <see cref="T:System.Xml.XPath.XPathNavigator" /> vers l’élément suivant du <see cref="T:System.Xml.XPath.XPathNodeType" /> spécifié, à la limite spécifiée, dans l’ordre du document.</summary>
      <param name="type" vsli:raw="The &lt;see cref=&quot;T:System.Xml.XPath.XPathNodeType&quot; /&gt; of the element. The &lt;see cref=&quot;T:System.Xml.XPath.XPathNodeType&quot; /&gt; cannot be &lt;see cref=&quot;F:System.Xml.XPath.XPathNodeType.Attribute&quot; /&gt; or &lt;see cref=&quot;F:System.Xml.XPath.XPathNodeType.Namespace&quot; /&gt;.">
        <see cref="T:System.Xml.XPath.XPathNodeType" /> de l’élément. Le <see cref="T:System.Xml.XPath.XPathNodeType" /> ne peut pas être <see cref="F:System.Xml.XPath.XPathNodeType.Attribute" /> ni <see cref="F:System.Xml.XPath.XPathNodeType.Namespace" />.</param>
      <param name="end" vsli:raw="The &lt;see cref=&quot;T:System.Xml.XPath.XPathNavigator&quot; /&gt; object positioned on the element boundary which the current &lt;see cref=&quot;T:System.Xml.XPath.XPathNavigator&quot; /&gt; will not move past while searching for the following element.">Objet <see cref="T:System.Xml.XPath.XPathNavigator" /> positionné sur la limite de l’élément que le <see cref="T:System.Xml.XPath.XPathNavigator" /> actuel ne dépassera pas en recherchant l’élément suivant.</param>
      <returns vsli:raw="&lt;see langword=&quot;true&quot; /&gt; if the &lt;see cref=&quot;T:System.Xml.XPath.XPathNavigator&quot; /&gt; moved successfully; otherwise, &lt;see langword=&quot;false&quot; /&gt;.">
        <see langword="true" /> si le déplacement de <see cref="T:System.Xml.XPath.XPathNavigator" /> est réussi ; sinon, <see langword="false" />.</returns>
    </member>
    <member name="M:System.Xml.XPath.XPathNavigator.MoveToId(System.String)">
      <summary vsli:raw="When overridden in a derived class, moves to the node that has an attribute of type &lt;c&gt;ID&lt;/c&gt; whose value matches the specified &lt;see cref=&quot;T:System.String&quot; /&gt;.">En cas de substitution dans une classe dérivée, se déplace vers le nœud qui a un attribut de type <c>ID</c> dont la valeur correspond à la <see cref="T:System.String" /> spécifiée.</summary>
      <param name="id" vsli:raw="A &lt;see cref=&quot;T:System.String&quot; /&gt; representing the &lt;c&gt;ID&lt;/c&gt; value of the node to which you want to move.">
        <see cref="T:System.String" /> représentant la valeur <c>ID</c> du nœud vers lequel vous souhaitez vous déplacer.</param>
      <returns vsli:raw="&lt;see langword=&quot;true&quot; /&gt; if the &lt;see cref=&quot;T:System.Xml.XPath.XPathNavigator&quot; /&gt; is successful moving; otherwise, &lt;see langword=&quot;false&quot; /&gt;. If &lt;see langword=&quot;false&quot; /&gt;, the position of the navigator is unchanged.">
        <see langword="true" /> si <see cref="T:System.Xml.XPath.XPathNavigator" /> réussit son déplacement ; sinon, <see langword="false" />. Si <see langword="false" />, la position du navigateur demeure inchangée.</returns>
    </member>
    <member name="M:System.Xml.XPath.XPathNavigator.MoveToNamespace(System.String)">
      <summary vsli:raw="Moves the &lt;see cref=&quot;T:System.Xml.XPath.XPathNavigator&quot; /&gt; to the namespace node with the specified namespace prefix.">Déplace <see cref="T:System.Xml.XPath.XPathNavigator" /> vers le nœud d'espace de noms correspondant au préfixe d'espace de noms.</summary>
      <param name="name" vsli:raw="The namespace prefix of the namespace node.">Préfixe d'espace de noms du nœud d'espace de noms.</param>
      <returns vsli:raw="&lt;see langword=&quot;true&quot; /&gt; if the &lt;see cref=&quot;T:System.Xml.XPath.XPathNavigator&quot; /&gt; is successful moving to the specified namespace; &lt;see langword=&quot;false&quot; /&gt; if a matching namespace node was not found, or if the &lt;see cref=&quot;T:System.Xml.XPath.XPathNavigator&quot; /&gt; is not positioned on an element node. If &lt;see langword=&quot;false&quot; /&gt;, the position of the &lt;see cref=&quot;T:System.Xml.XPath.XPathNavigator&quot; /&gt; is unchanged.">
        <see langword="true" /> si le déplacement de <see cref="T:System.Xml.XPath.XPathNavigator" /> vers l'espace de noms spécifié est réussi ; <see langword="false" /> si aucun nœud d'espace de noms correspondant n'est trouvé ou si le <see cref="T:System.Xml.XPath.XPathNavigator" /> n'est pas positionné sur un nœud d'élément. Si la valeur est <see langword="false" />, c’est que la position du <see cref="T:System.Xml.XPath.XPathNavigator" /> est inchangée.</returns>
    </member>
    <member name="M:System.Xml.XPath.XPathNavigator.MoveToNext">
      <summary vsli:raw="When overridden in a derived class, moves the &lt;see cref=&quot;T:System.Xml.XPath.XPathNavigator&quot; /&gt; to the next sibling node of the current node.">En cas de remplacement dans une classe dérivée, déplace le <see cref="T:System.Xml.XPath.XPathNavigator" /> vers le nœud frère suivant du nœud actuel.</summary>
      <returns vsli:raw="&lt;see langword=&quot;true&quot; /&gt; if the &lt;see cref=&quot;T:System.Xml.XPath.XPathNavigator&quot; /&gt; is successful moving to the next sibling node; otherwise, &lt;see langword=&quot;false&quot; /&gt; if there are no more siblings or if the &lt;see cref=&quot;T:System.Xml.XPath.XPathNavigator&quot; /&gt; is currently positioned on an attribute node. If &lt;see langword=&quot;false&quot; /&gt;, the position of the &lt;see cref=&quot;T:System.Xml.XPath.XPathNavigator&quot; /&gt; is unchanged.">
        <see langword="true" /> si le <see cref="T:System.Xml.XPath.XPathNavigator" /> se déplace correctement au nœud frère suivant ; sinon, <see langword="false" /> s’il n’y a plus d’autres nœuds frères ou si le <see cref="T:System.Xml.XPath.XPathNavigator" /> est actuellement positionné sur un nœud d’attribut. Si la valeur est <see langword="false" />, c’est que la position du <see cref="T:System.Xml.XPath.XPathNavigator" /> est inchangée.</returns>
    </member>
    <member name="M:System.Xml.XPath.XPathNavigator.MoveToNext(System.String,System.String)">
      <summary vsli:raw="Moves the &lt;see cref=&quot;T:System.Xml.XPath.XPathNavigator&quot; /&gt; to the next sibling node with the local name and namespace URI specified.">Déplace <see cref="T:System.Xml.XPath.XPathNavigator" /> vers le nœud frère suivant doté du nom local et de l'URI d'espace de noms spécifiés.</summary>
      <param name="localName" vsli:raw="The local name of the next sibling node to move to.">Nom local du nœud frère suivant vers lequel se déplacer.</param>
      <param name="namespaceURI" vsli:raw="The namespace URI of the next sibling node to move to.">URI d'espace de noms du nœud frère suivant vers lequel se déplacer.</param>
      <returns vsli:raw="&lt;see langword=&quot;true&quot; /&gt; if the &lt;see cref=&quot;T:System.Xml.XPath.XPathNavigator&quot; /&gt; is successful moving to the next sibling node; &lt;see langword=&quot;false&quot; /&gt; if there are no more siblings, or if the &lt;see cref=&quot;T:System.Xml.XPath.XPathNavigator&quot; /&gt; is currently positioned on an attribute node. If &lt;see langword=&quot;false&quot; /&gt;, the position of the &lt;see cref=&quot;T:System.Xml.XPath.XPathNavigator&quot; /&gt; is unchanged.">
        <see langword="true" /> si le <see cref="T:System.Xml.XPath.XPathNavigator" /> se déplace correctement vers le nœud frère suivant ; <see langword="false" /> s’il n’existe plus de frères ou si le <see cref="T:System.Xml.XPath.XPathNavigator" /> est actuellement positionné sur un nœud d’attribut. Si la valeur est <see langword="false" />, c’est que la position du <see cref="T:System.Xml.XPath.XPathNavigator" /> est inchangée.</returns>
    </member>
    <member name="M:System.Xml.XPath.XPathNavigator.MoveToNext(System.Xml.XPath.XPathNodeType)">
      <summary vsli:raw="Moves the &lt;see cref=&quot;T:System.Xml.XPath.XPathNavigator&quot; /&gt; to the next sibling node of the current node that matches the &lt;see cref=&quot;T:System.Xml.XPath.XPathNodeType&quot; /&gt; specified.">Déplace le <see cref="T:System.Xml.XPath.XPathNavigator" /> vers le nœud frère suivant du nœud actuel qui correspond au <see cref="T:System.Xml.XPath.XPathNodeType" /> spécifié.</summary>
      <param name="type" vsli:raw="The &lt;see cref=&quot;T:System.Xml.XPath.XPathNodeType&quot; /&gt; of the sibling node to move to.">
        <see cref="T:System.Xml.XPath.XPathNodeType" /> du nœud frère vers lequel se déplacer.</param>
      <returns vsli:raw="&lt;see langword=&quot;true&quot; /&gt; if the &lt;see cref=&quot;T:System.Xml.XPath.XPathNavigator&quot; /&gt; is successful moving to the next sibling node; otherwise, &lt;see langword=&quot;false&quot; /&gt; if there are no more siblings or if the &lt;see cref=&quot;T:System.Xml.XPath.XPathNavigator&quot; /&gt; is currently positioned on an attribute node. If &lt;see langword=&quot;false&quot; /&gt;, the position of the &lt;see cref=&quot;T:System.Xml.XPath.XPathNavigator&quot; /&gt; is unchanged.">
        <see langword="true" /> si le <see cref="T:System.Xml.XPath.XPathNavigator" /> se déplace correctement au nœud frère suivant ; sinon, <see langword="false" /> s’il n’y a plus d’autres nœuds frères ou si le <see cref="T:System.Xml.XPath.XPathNavigator" /> est actuellement positionné sur un nœud d’attribut. Si la valeur est <see langword="false" />, c’est que la position du <see cref="T:System.Xml.XPath.XPathNavigator" /> est inchangée.</returns>
    </member>
    <member name="M:System.Xml.XPath.XPathNavigator.MoveToNextAttribute">
      <summary vsli:raw="When overridden in a derived class, moves the &lt;see cref=&quot;T:System.Xml.XPath.XPathNavigator&quot; /&gt; to the next attribute.">En cas de substitution dans une classe dérivée, déplace le <see cref="T:System.Xml.XPath.XPathNavigator" /> vers l’attribut suivant.</summary>
      <returns vsli:raw="&lt;see langword=&quot;true&quot; /&gt; if the &lt;see cref=&quot;T:System.Xml.XPath.XPathNavigator&quot; /&gt; is successful moving to the next attribute; &lt;see langword=&quot;false&quot; /&gt; if there are no more attributes. If &lt;see langword=&quot;false&quot; /&gt;, the position of the &lt;see cref=&quot;T:System.Xml.XPath.XPathNavigator&quot; /&gt; is unchanged.">
        <see langword="true" /> si le <see cref="T:System.Xml.XPath.XPathNavigator" /> se déplace correctement vers l’attribut suivant ; <see langword="false" /> s’il n’existe plus d’attributs. Si la valeur est <see langword="false" />, c’est que la position du <see cref="T:System.Xml.XPath.XPathNavigator" /> est inchangée.</returns>
    </member>
    <member name="M:System.Xml.XPath.XPathNavigator.MoveToNextNamespace">
      <summary vsli:raw="Moves the &lt;see cref=&quot;T:System.Xml.XPath.XPathNavigator&quot; /&gt; to the next namespace node.">Déplace <see cref="T:System.Xml.XPath.XPathNavigator" /> vers le nœud d'espace de noms suivant.</summary>
      <returns vsli:raw="&lt;see langword=&quot;true&quot; /&gt; if the &lt;see cref=&quot;T:System.Xml.XPath.XPathNavigator&quot; /&gt; is successful moving to the next namespace node; otherwise, &lt;see langword=&quot;false&quot; /&gt;. If &lt;see langword=&quot;false&quot; /&gt;, the position of the &lt;see cref=&quot;T:System.Xml.XPath.XPathNavigator&quot; /&gt; is unchanged.">
        <see langword="true" /> si le <see cref="T:System.Xml.XPath.XPathNavigator" /> se déplace correctement vers le nœud d’espace de noms suivant ; sinon, <see langword="false" />. Si la valeur est <see langword="false" />, c’est que la position du <see cref="T:System.Xml.XPath.XPathNavigator" /> est inchangée.</returns>
    </member>
    <member name="M:System.Xml.XPath.XPathNavigator.MoveToNextNamespace(System.Xml.XPath.XPathNamespaceScope)">
      <summary vsli:raw="When overridden in a derived class, moves the &lt;see cref=&quot;T:System.Xml.XPath.XPathNavigator&quot; /&gt; to the next namespace node matching the &lt;see cref=&quot;T:System.Xml.XPath.XPathNamespaceScope&quot; /&gt; specified.">En cas de substitution dans une classe dérivée, déplace <see cref="T:System.Xml.XPath.XPathNavigator" /> vers le nœud d'espace de noms suivant qui correspond à la <see cref="T:System.Xml.XPath.XPathNamespaceScope" /> spécifiée.</summary>
      <param name="namespaceScope" vsli:raw="An &lt;see cref=&quot;T:System.Xml.XPath.XPathNamespaceScope&quot; /&gt; value describing the namespace scope.">Valeur de <see cref="T:System.Xml.XPath.XPathNamespaceScope" /> décrivant la portée espace de noms.</param>
      <returns vsli:raw="&lt;see langword=&quot;true&quot; /&gt; if the &lt;see cref=&quot;T:System.Xml.XPath.XPathNavigator&quot; /&gt; is successful moving to the next namespace node; otherwise, &lt;see langword=&quot;false&quot; /&gt;. If &lt;see langword=&quot;false&quot; /&gt;, the position of the &lt;see cref=&quot;T:System.Xml.XPath.XPathNavigator&quot; /&gt; is unchanged.">
        <see langword="true" /> si le <see cref="T:System.Xml.XPath.XPathNavigator" /> se déplace correctement vers le nœud d’espace de noms suivant ; sinon, <see langword="false" />. Si la valeur est <see langword="false" />, c’est que la position du <see cref="T:System.Xml.XPath.XPathNavigator" /> est inchangée.</returns>
    </member>
    <member name="M:System.Xml.XPath.XPathNavigator.MoveToParent">
      <summary vsli:raw="When overridden in a derived class, moves the &lt;see cref=&quot;T:System.Xml.XPath.XPathNavigator&quot; /&gt; to the parent node of the current node.">En cas de substitution dans une classe dérivée, déplace <see cref="T:System.Xml.XPath.XPathNavigator" /> vers le nœud parent du nœud actuel.</summary>
      <returns vsli:raw="&lt;see langword=&quot;true&quot; /&gt; if the &lt;see cref=&quot;T:System.Xml.XPath.XPathNavigator&quot; /&gt; is successful moving to the parent node of the current node; otherwise, &lt;see langword=&quot;false&quot; /&gt;. If &lt;see langword=&quot;false&quot; /&gt;, the position of the &lt;see cref=&quot;T:System.Xml.XPath.XPathNavigator&quot; /&gt; is unchanged.">
        <see langword="true" /> si le <see cref="T:System.Xml.XPath.XPathNavigator" /> se déplace correctement vers le premier nœud parent du nœud actuel ; sinon, <see langword="false" />. Si la valeur est <see langword="false" />, c’est que la position du <see cref="T:System.Xml.XPath.XPathNavigator" /> est inchangée.</returns>
    </member>
    <member name="M:System.Xml.XPath.XPathNavigator.MoveToPrevious">
      <summary vsli:raw="When overridden in a derived class, moves the &lt;see cref=&quot;T:System.Xml.XPath.XPathNavigator&quot; /&gt; to the previous sibling node of the current node.">En cas de substitution dans une classe dérivée, déplace <see cref="T:System.Xml.XPath.XPathNavigator" /> vers le nœud frère précédent du nœud actuel.</summary>
      <returns vsli:raw="&lt;see langword=&quot;true&quot; /&gt; if the &lt;see cref=&quot;T:System.Xml.XPath.XPathNavigator&quot; /&gt; is successful moving to the previous sibling node; otherwise, &lt;see langword=&quot;false&quot; /&gt; if there is no previous sibling node or if the &lt;see cref=&quot;T:System.Xml.XPath.XPathNavigator&quot; /&gt; is currently positioned on an attribute node. If &lt;see langword=&quot;false&quot; /&gt;, the position of the &lt;see cref=&quot;T:System.Xml.XPath.XPathNavigator&quot; /&gt; is unchanged.">
        <see langword="true" /> si le <see cref="T:System.Xml.XPath.XPathNavigator" /> se déplace correctement vers le nœud frère précédent ; sinon, <see langword="false" /> s’il n’existe pas de nœud frère précédent ou si le <see cref="T:System.Xml.XPath.XPathNavigator" /> est actuellement positionné sur un nœud d’attribut. Si la valeur est <see langword="false" />, c’est que la position du <see cref="T:System.Xml.XPath.XPathNavigator" /> est inchangée.</returns>
    </member>
    <member name="M:System.Xml.XPath.XPathNavigator.MoveToRoot">
      <summary vsli:raw="Moves the &lt;see cref=&quot;T:System.Xml.XPath.XPathNavigator&quot; /&gt; to the root node that the current node belongs to.">Déplace <see cref="T:System.Xml.XPath.XPathNavigator" /> vers le nœud racine auquel le nœud actuel appartient.</summary>
    </member>
    <member name="M:System.Xml.XPath.XPathNavigator.PrependChild">
      <summary vsli:raw="Returns an &lt;see cref=&quot;T:System.Xml.XmlWriter&quot; /&gt; object used to create a new child node at the beginning of the list of child nodes of the current node.">Retourne un objet <see cref="T:System.Xml.XmlWriter" /> permettant de créer un nœud enfant au début de la liste de nœuds enfants du nœud actuel.</summary>
      <exception cref="T:System.InvalidOperationException" vsli:raw="The current node the &lt;see cref=&quot;T:System.Xml.XPath.XPathNavigator&quot; /&gt; is positioned on does not allow a new child node to be prepended.">Le nœud actuel du <see cref="T:System.Xml.XPath.XPathNavigator" /> est positionné ou n’autorise pas le placement d’un nouveau nœud enfant en début de liste.</exception>
      <exception cref="T:System.NotSupportedException" vsli:raw="The &lt;see cref=&quot;T:System.Xml.XPath.XPathNavigator&quot; /&gt; does not support editing.">Le <see cref="T:System.Xml.XPath.XPathNavigator" /> ne prend pas en charge la modification.</exception>
      <returns vsli:raw="An &lt;see cref=&quot;T:System.Xml.XmlWriter&quot; /&gt; object used to create a new child node at the beginning of the list of child nodes of the current node.">Objet <see cref="T:System.Xml.XmlWriter" /> permettant de créer un nœud enfant au début de la liste de nœuds enfants du nœud actuel.</returns>
    </member>
    <member name="M:System.Xml.XPath.XPathNavigator.PrependChild(System.String)">
      <summary vsli:raw="Creates a new child node at the beginning of the list of child nodes of the current node using the XML string specified.">Crée un nœud enfant au début de la liste de nœuds enfants du nœud actuel à l'aide de la chaîne XML spécifiée.</summary>
      <param name="newChild" vsli:raw="The XML data string for the new child node.">Chaîne de données XML pour le nouveau nœud enfant.</param>
      <exception cref="T:System.ArgumentNullException" vsli:raw="The XML string parameter is &lt;see langword=&quot;null&quot; /&gt;.">Le paramètre de chaîne XML est <see langword="null" />.</exception>
      <exception cref="T:System.InvalidOperationException" vsli:raw="The current node the &lt;see cref=&quot;T:System.Xml.XPath.XPathNavigator&quot; /&gt; is positioned on does not allow a new child node to be prepended.">Le nœud actuel du <see cref="T:System.Xml.XPath.XPathNavigator" /> est positionné ou n’autorise pas le placement d’un nouveau nœud enfant en début de liste.</exception>
      <exception cref="T:System.NotSupportedException" vsli:raw="The &lt;see cref=&quot;T:System.Xml.XPath.XPathNavigator&quot; /&gt; does not support editing.">Le <see cref="T:System.Xml.XPath.XPathNavigator" /> ne prend pas en charge la modification.</exception>
      <exception cref="T:System.Xml.XmlException" vsli:raw="The XML string parameter is not well-formed.">Le paramètre de chaîne XML n’est pas mis en forme correctement.</exception>
    </member>
    <member name="M:System.Xml.XPath.XPathNavigator.PrependChild(System.Xml.XmlReader)">
      <summary vsli:raw="Creates a new child node at the beginning of the list of child nodes of the current node using the XML contents of the &lt;see cref=&quot;T:System.Xml.XmlReader&quot; /&gt; object specified.">Crée un nœud enfant au début de la liste des nœuds enfants du nœud actuel en utilisant le contenu XML de l’objet <see cref="T:System.Xml.XmlReader" /> spécifié.</summary>
      <param name="newChild" vsli:raw="An &lt;see cref=&quot;T:System.Xml.XmlReader&quot; /&gt; object positioned on the XML data for the new child node.">Objet <see cref="T:System.Xml.XmlReader" /> positionné sur les données XML pour le nouveau nœud enfant.</param>
      <exception cref="T:System.ArgumentException" vsli:raw="The &lt;see cref=&quot;T:System.Xml.XmlReader&quot; /&gt; object is in an error state or closed.">L’objet <see cref="T:System.Xml.XmlReader" /> est dans un état d’erreur ou fermé.</exception>
      <exception cref="T:System.ArgumentNullException" vsli:raw="The &lt;see cref=&quot;T:System.Xml.XmlReader&quot; /&gt; object parameter is &lt;see langword=&quot;null&quot; /&gt;.">Le paramètre de l’objet <see cref="T:System.Xml.XmlReader" /> est <see langword="null" />.</exception>
      <exception cref="T:System.InvalidOperationException" vsli:raw="The current node the &lt;see cref=&quot;T:System.Xml.XPath.XPathNavigator&quot; /&gt; is positioned on does not allow a new child node to be prepended.">Le nœud actuel du <see cref="T:System.Xml.XPath.XPathNavigator" /> est positionné ou n’autorise pas le placement d’un nouveau nœud enfant en début de liste.</exception>
      <exception cref="T:System.NotSupportedException" vsli:raw="The &lt;see cref=&quot;T:System.Xml.XPath.XPathNavigator&quot; /&gt; does not support editing.">Le <see cref="T:System.Xml.XPath.XPathNavigator" /> ne prend pas en charge la modification.</exception>
      <exception cref="T:System.Xml.XmlException" vsli:raw="The XML contents of the &lt;see cref=&quot;T:System.Xml.XmlReader&quot; /&gt; object parameter is not well-formed.">Le contenu XML du paramètre de l’objet <see cref="T:System.Xml.XmlReader" /> n’est pas mis en forme correctement.</exception>
    </member>
    <member name="M:System.Xml.XPath.XPathNavigator.PrependChild(System.Xml.XPath.XPathNavigator)">
      <summary vsli:raw="Creates a new child node at the beginning of the list of child nodes of the current node using the nodes in the &lt;see cref=&quot;T:System.Xml.XPath.XPathNavigator&quot; /&gt; object specified.">Crée un nœud enfant au début de la liste de nœuds enfants du nœud actuel à l’aide des nœuds de l’objet <see cref="T:System.Xml.XPath.XPathNavigator" /> spécifié.</summary>
      <param name="newChild" vsli:raw="An &lt;see cref=&quot;T:System.Xml.XPath.XPathNavigator&quot; /&gt; object positioned on the node to add as the new child node.">Objet <see cref="T:System.Xml.XPath.XPathNavigator" /> positionné sur le nœud à ajouter en tant que nouveau nœud enfant.</param>
      <exception cref="T:System.ArgumentNullException" vsli:raw="The &lt;see cref=&quot;T:System.Xml.XPath.XPathNavigator&quot; /&gt; object parameter is &lt;see langword=&quot;null&quot; /&gt;.">Le paramètre de l’objet <see cref="T:System.Xml.XPath.XPathNavigator" /> est <see langword="null" />.</exception>
      <exception cref="T:System.InvalidOperationException" vsli:raw="The current node the &lt;see cref=&quot;T:System.Xml.XPath.XPathNavigator&quot; /&gt; is positioned on does not allow a new child node to be prepended.">Le nœud actuel du <see cref="T:System.Xml.XPath.XPathNavigator" /> est positionné ou n’autorise pas le placement d’un nouveau nœud enfant en début de liste.</exception>
      <exception cref="T:System.NotSupportedException" vsli:raw="The &lt;see cref=&quot;T:System.Xml.XPath.XPathNavigator&quot; /&gt; does not support editing.">Le <see cref="T:System.Xml.XPath.XPathNavigator" /> ne prend pas en charge la modification.</exception>
    </member>
    <member name="M:System.Xml.XPath.XPathNavigator.PrependChildElement(System.String,System.String,System.String,System.String)">
      <summary vsli:raw="Creates a new child element at the beginning of the list of child nodes of the current node using the namespace prefix, local name, and namespace URI specified with the value specified.">Crée un élément enfant au début de la liste de nœuds enfants du nœud actuel à l'aide du préfixe d'espace de noms, du nom local et de l'URI d'espace de noms spécifiés avec la valeur spécifiée.</summary>
      <param name="prefix" vsli:raw="The namespace prefix of the new child element (if any).">Préfixe d'espace de noms du nouvel élément enfant (le cas échéant).</param>
      <param name="localName" vsli:raw="The local name of the new child element (if any).">Nom local du nouvel élément enfant (le cas échéant).</param>
      <param name="namespaceURI" vsli:raw="The namespace URI of the new child element (if any). &lt;see cref=&quot;F:System.String.Empty&quot; /&gt; and &lt;see langword=&quot;null&quot; /&gt; are equivalent.">URI de l’espace de noms du nouvel élément enfant (le cas échéant). <see cref="F:System.String.Empty" /> et <see langword="null" /> sont équivalents.</param>
      <param name="value" vsli:raw="The value of the new child element. If &lt;see cref=&quot;F:System.String.Empty&quot; /&gt; or &lt;see langword=&quot;null&quot; /&gt; are passed, an empty element is created.">Valeur du nouvel élément enfant. Si <see cref="F:System.String.Empty" /> ou <see langword="null" /> sont passés, une élément vide est créé</param>
      <exception cref="T:System.InvalidOperationException" vsli:raw="The current node the &lt;see cref=&quot;T:System.Xml.XPath.XPathNavigator&quot; /&gt; is positioned on does not allow a new child node to be prepended.">Le nœud actuel du <see cref="T:System.Xml.XPath.XPathNavigator" /> est positionné ou n’autorise pas le placement d’un nouveau nœud enfant en début de liste.</exception>
      <exception cref="T:System.NotSupportedException" vsli:raw="The &lt;see cref=&quot;T:System.Xml.XPath.XPathNavigator&quot; /&gt; does not support editing.">Le <see cref="T:System.Xml.XPath.XPathNavigator" /> ne prend pas en charge la modification.</exception>
    </member>
    <member name="M:System.Xml.XPath.XPathNavigator.ReadSubtree">
      <summary vsli:raw="Returns an &lt;see cref=&quot;T:System.Xml.XmlReader&quot; /&gt; object that contains the current node and its child nodes.">Retourne un objet <see cref="T:System.Xml.XmlReader" /> qui contient le nœud actuel et ses nœuds enfants.</summary>
      <exception cref="T:System.InvalidOperationException" vsli:raw="The &lt;see cref=&quot;T:System.Xml.XPath.XPathNavigator&quot; /&gt; is not positioned on an element node or the root node.">Le <see cref="T:System.Xml.XPath.XPathNavigator" /> n’est pas positionné sur un nœud d’élément ou sur le nœud racine.</exception>
      <returns vsli:raw="An &lt;see cref=&quot;T:System.Xml.XmlReader&quot; /&gt; object that contains the current node and its child nodes.">Objet <see cref="T:System.Xml.XmlReader" /> qui contient le nœud actuel et ses nœuds enfants.</returns>
    </member>
    <member name="M:System.Xml.XPath.XPathNavigator.ReplaceRange(System.Xml.XPath.XPathNavigator)">
      <summary vsli:raw="Replaces a range of sibling nodes from the current node to the node specified.">Remplace une plage de nœuds frères allant du nœud actuel au nœud spécifié.</summary>
      <param name="lastSiblingToReplace" vsli:raw="An &lt;see cref=&quot;T:System.Xml.XPath.XPathNavigator&quot; /&gt; positioned on the last sibling node in the range to replace.">
        <see cref="T:System.Xml.XPath.XPathNavigator" /> positionné sur le dernier nœud frère de la plage à remplacer.</param>
      <exception cref="T:System.ArgumentNullException" vsli:raw="The &lt;see cref=&quot;T:System.Xml.XPath.XPathNavigator&quot; /&gt; specified is &lt;see langword=&quot;null&quot; /&gt;.">Le <see cref="T:System.Xml.XPath.XPathNavigator" /> spécifié a la valeur <see langword="null" />.</exception>
      <exception cref="T:System.NotSupportedException" vsli:raw="The &lt;see cref=&quot;T:System.Xml.XPath.XPathNavigator&quot; /&gt; does not support editing.">Le <see cref="T:System.Xml.XPath.XPathNavigator" /> ne prend pas en charge la modification.</exception>
      <exception cref="T:System.InvalidOperationException" vsli:raw="The last node to replace specified is not a valid sibling node of the current node.">Le dernier nœud à remplacer spécifié n’est pas un nœud frère valide du nœud actuel.</exception>
      <returns vsli:raw="An &lt;see cref=&quot;T:System.Xml.XmlWriter&quot; /&gt; object used to specify the replacement range.">Objet <see cref="T:System.Xml.XmlWriter" /> permettant de spécifier la plage de remplacement.</returns>
    </member>
    <member name="M:System.Xml.XPath.XPathNavigator.ReplaceSelf(System.String)">
      <summary vsli:raw="Replaces the current node with the content of the string specified.">Remplace le nœud actuel par le contenu de la chaîne spécifiée.</summary>
      <param name="newNode" vsli:raw="The XML data string for the new node.">Chaîne de données XML pour le nouveau nœud.</param>
      <exception cref="T:System.ArgumentNullException" vsli:raw="The XML string parameter is &lt;see langword=&quot;null&quot; /&gt;.">Le paramètre de chaîne XML est <see langword="null" />.</exception>
      <exception cref="T:System.InvalidOperationException" vsli:raw="The &lt;see cref=&quot;T:System.Xml.XPath.XPathNavigator&quot; /&gt; is not positioned on an element, text, processing instruction, or comment node.">Le <see cref="T:System.Xml.XPath.XPathNavigator" /> n’est pas positionné sur un élément, un texte, une instruction de traitement ni un nœud de commentaire.</exception>
      <exception cref="T:System.NotSupportedException" vsli:raw="The &lt;see cref=&quot;T:System.Xml.XPath.XPathNavigator&quot; /&gt; does not support editing.">Le <see cref="T:System.Xml.XPath.XPathNavigator" /> ne prend pas en charge la modification.</exception>
      <exception cref="T:System.Xml.XmlException" vsli:raw="The XML string parameter is not well-formed.">Le paramètre de chaîne XML n’est pas mis en forme correctement.</exception>
    </member>
    <member name="M:System.Xml.XPath.XPathNavigator.ReplaceSelf(System.Xml.XmlReader)">
      <summary vsli:raw="Replaces the current node with the contents of the &lt;see cref=&quot;T:System.Xml.XmlReader&quot; /&gt; object specified.">Remplace le nœud actuel par le contenu de l’objet <see cref="T:System.Xml.XmlReader" /> spécifié.</summary>
      <param name="newNode" vsli:raw="An &lt;see cref=&quot;T:System.Xml.XmlReader&quot; /&gt; object positioned on the XML data for the new node.">Objet <see cref="T:System.Xml.XmlReader" /> positionné sur les données XML pour le nouveau nœud.</param>
      <exception cref="T:System.ArgumentException" vsli:raw="The &lt;see cref=&quot;T:System.Xml.XmlReader&quot; /&gt; object is in an error state or closed.">L’objet <see cref="T:System.Xml.XmlReader" /> est dans un état d’erreur ou fermé.</exception>
      <exception cref="T:System.ArgumentNullException" vsli:raw="The &lt;see cref=&quot;T:System.Xml.XmlReader&quot; /&gt; object parameter is &lt;see langword=&quot;null&quot; /&gt;.">Le paramètre de l’objet <see cref="T:System.Xml.XmlReader" /> est <see langword="null" />.</exception>
      <exception cref="T:System.InvalidOperationException" vsli:raw="The &lt;see cref=&quot;T:System.Xml.XPath.XPathNavigator&quot; /&gt; is not positioned on an element, text, processing instruction, or comment node.">Le <see cref="T:System.Xml.XPath.XPathNavigator" /> n’est pas positionné sur un élément, un texte, une instruction de traitement ni un nœud de commentaire.</exception>
      <exception cref="T:System.NotSupportedException" vsli:raw="The &lt;see cref=&quot;T:System.Xml.XPath.XPathNavigator&quot; /&gt; does not support editing.">Le <see cref="T:System.Xml.XPath.XPathNavigator" /> ne prend pas en charge la modification.</exception>
      <exception cref="T:System.Xml.XmlException" vsli:raw="The XML contents of the &lt;see cref=&quot;T:System.Xml.XmlReader&quot; /&gt; object parameter is not well-formed.">Le contenu XML du paramètre de l’objet <see cref="T:System.Xml.XmlReader" /> n’est pas mis en forme correctement.</exception>
    </member>
    <member name="M:System.Xml.XPath.XPathNavigator.ReplaceSelf(System.Xml.XPath.XPathNavigator)">
      <summary vsli:raw="Replaces the current node with the contents of the &lt;see cref=&quot;T:System.Xml.XPath.XPathNavigator&quot; /&gt; object specified.">Remplace le nœud actuel par le contenu de l’objet <see cref="T:System.Xml.XPath.XPathNavigator" /> spécifié.</summary>
      <param name="newNode" vsli:raw="An &lt;see cref=&quot;T:System.Xml.XPath.XPathNavigator&quot; /&gt; object positioned on the new node.">Objet <see cref="T:System.Xml.XPath.XPathNavigator" /> positionné sur le nouveau nœud.</param>
      <exception cref="T:System.ArgumentNullException" vsli:raw="The &lt;see cref=&quot;T:System.Xml.XPath.XPathNavigator&quot; /&gt; object parameter is &lt;see langword=&quot;null&quot; /&gt;.">Le paramètre de l’objet <see cref="T:System.Xml.XPath.XPathNavigator" /> est <see langword="null" />.</exception>
      <exception cref="T:System.InvalidOperationException" vsli:raw="The &lt;see cref=&quot;T:System.Xml.XPath.XPathNavigator&quot; /&gt; is not positioned on an element, text, processing instruction, or comment node.">Le <see cref="T:System.Xml.XPath.XPathNavigator" /> n’est pas positionné sur un élément, un texte, une instruction de traitement ni un nœud de commentaire.</exception>
      <exception cref="T:System.NotSupportedException" vsli:raw="The &lt;see cref=&quot;T:System.Xml.XPath.XPathNavigator&quot; /&gt; does not support editing.">Le <see cref="T:System.Xml.XPath.XPathNavigator" /> ne prend pas en charge la modification.</exception>
      <exception cref="T:System.Xml.XmlException" vsli:raw="The XML contents of the &lt;see cref=&quot;T:System.Xml.XPath.XPathNavigator&quot; /&gt; object parameter is not well-formed.">Le contenu XML du paramètre de l’objet <see cref="T:System.Xml.XPath.XPathNavigator" /> n’est pas mis en forme correctement.</exception>
    </member>
    <member name="M:System.Xml.XPath.XPathNavigator.Select(System.String)">
      <summary vsli:raw="Selects a node set, using the specified XPath expression.">Sélectionne un jeu de nœuds à l’aide de l’expression XPath spécifiée.</summary>
      <param name="xpath" vsli:raw="A &lt;see cref=&quot;T:System.String&quot; /&gt; representing an XPath expression.">
        <see cref="T:System.String" /> représentant une expression XPath.</param>
      <exception cref="T:System.ArgumentException" vsli:raw="The XPath expression contains an error or its return type is not a node set.">L’expression XPath contient une erreur ou son type de retour n’est pas un ensemble de nœuds.</exception>
      <exception cref="T:System.Xml.XPath.XPathException" vsli:raw="The XPath expression is not valid.">L’expression XPath n’est pas valide.</exception>
      <returns vsli:raw="An &lt;see cref=&quot;T:System.Xml.XPath.XPathNodeIterator&quot; /&gt; pointing to the selected node set.">
        <see cref="T:System.Xml.XPath.XPathNodeIterator" /> pointant vers l’ensemble de nœuds sélectionné.</returns>
    </member>
    <member name="M:System.Xml.XPath.XPathNavigator.Select(System.String,System.Xml.IXmlNamespaceResolver)">
      <summary vsli:raw="Selects a node set using the specified XPath expression with the &lt;see cref=&quot;T:System.Xml.IXmlNamespaceResolver&quot; /&gt; object specified to resolve namespace prefixes.">Sélectionne un ensemble de nœuds en utilisant l’expression XPath spécifiée avec l’objet <see cref="T:System.Xml.IXmlNamespaceResolver" /> spécifié pour résoudre les préfixes d’espace de noms.</summary>
      <param name="xpath" vsli:raw="A &lt;see cref=&quot;T:System.String&quot; /&gt; representing an XPath expression.">
        <see cref="T:System.String" /> représentant une expression XPath.</param>
      <param name="resolver" vsli:raw="The &lt;see cref=&quot;T:System.Xml.IXmlNamespaceResolver&quot; /&gt; object used to resolve namespace prefixes.">Objet <see cref="T:System.Xml.IXmlNamespaceResolver" /> utilisé pour résoudre les préfixes d’espace de noms.</param>
      <exception cref="T:System.ArgumentException" vsli:raw="The XPath expression contains an error or its return type is not a node set.">L’expression XPath contient une erreur ou son type de retour n’est pas un ensemble de nœuds.</exception>
      <exception cref="T:System.Xml.XPath.XPathException" vsli:raw="The XPath expression is not valid.">L’expression XPath n’est pas valide.</exception>
      <returns vsli:raw="An &lt;see cref=&quot;T:System.Xml.XPath.XPathNodeIterator&quot; /&gt; that points to the selected node set.">
        <see cref="T:System.Xml.XPath.XPathNodeIterator" /> qui pointe vers l’ensemble de nœuds sélectionné.</returns>
    </member>
    <member name="M:System.Xml.XPath.XPathNavigator.Select(System.Xml.XPath.XPathExpression)">
      <summary vsli:raw="Selects a node set using the specified &lt;see cref=&quot;T:System.Xml.XPath.XPathExpression&quot; /&gt;.">Sélectionne un ensemble de nœuds à l’aide de l’<see cref="T:System.Xml.XPath.XPathExpression" /> spécifiée.</summary>
      <param name="expr" vsli:raw="An &lt;see cref=&quot;T:System.Xml.XPath.XPathExpression&quot; /&gt; object containing the compiled XPath query.">Objet <see cref="T:System.Xml.XPath.XPathExpression" /> contenant la requête XPath compilée.</param>
      <exception cref="T:System.ArgumentException" vsli:raw="The XPath expression contains an error or its return type is not a node set.">L’expression XPath contient une erreur ou son type de retour n’est pas un ensemble de nœuds.</exception>
      <exception cref="T:System.Xml.XPath.XPathException" vsli:raw="The XPath expression is not valid.">L’expression XPath n’est pas valide.</exception>
      <returns vsli:raw="An &lt;see cref=&quot;T:System.Xml.XPath.XPathNodeIterator&quot; /&gt; that points to the selected node set.">
        <see cref="T:System.Xml.XPath.XPathNodeIterator" /> qui pointe vers l’ensemble de nœuds sélectionné.</returns>
    </member>
    <member name="M:System.Xml.XPath.XPathNavigator.SelectAncestors(System.String,System.String,System.Boolean)">
      <summary vsli:raw="Selects all the ancestor nodes of the current node that have the specified local name and namespace URI.">Sélectionne tous les nœuds ancêtres du nœud actuel dotés du nom local et de l'URI d'espace de noms spécifiés.</summary>
      <param name="name" vsli:raw="The local name of the ancestor nodes.">Nom local des nœuds ancêtres.</param>
      <param name="namespaceURI" vsli:raw="The namespace URI of the ancestor nodes.">URI d'espace de noms des nœuds ancêtres.</param>
      <param name="matchSelf" vsli:raw="To include the context node in the selection, &lt;see langword=&quot;true&quot; /&gt;; otherwise, &lt;see langword=&quot;false&quot; /&gt;.">Pour inclure le nœud de contexte dans la sélection, <see langword="true" /> ; sinon, <see langword="false" />.</param>
      <exception cref="T:System.ArgumentNullException" vsli:raw="&lt;see langword=&quot;null&quot; /&gt; cannot be passed as a parameter.">
        <see langword="null" /> ne peut pas être passé comme paramètre.</exception>
      <returns vsli:raw="An &lt;see cref=&quot;T:System.Xml.XPath.XPathNodeIterator&quot; /&gt; that contains the selected nodes. The returned nodes are in reverse document order.">
        <see cref="T:System.Xml.XPath.XPathNodeIterator" /> qui contient les nœuds sélectionnés. Les nœuds retournés sont dans l'ordre inverse des documents.</returns>
    </member>
    <member name="M:System.Xml.XPath.XPathNavigator.SelectAncestors(System.Xml.XPath.XPathNodeType,System.Boolean)">
      <summary vsli:raw="Selects all the ancestor nodes of the current node that have a matching &lt;see cref=&quot;T:System.Xml.XPath.XPathNodeType&quot; /&gt;.">Sélectionne tous les nœuds ancêtres du nœud actuel qui possèdent un <see cref="T:System.Xml.XPath.XPathNodeType" /> correspondant.</summary>
      <param name="type" vsli:raw="The &lt;see cref=&quot;T:System.Xml.XPath.XPathNodeType&quot; /&gt; of the ancestor nodes.">
        <see cref="T:System.Xml.XPath.XPathNodeType" /> des nœuds ancêtres.</param>
      <param name="matchSelf" vsli:raw="To include the context node in the selection, &lt;see langword=&quot;true&quot; /&gt;; otherwise, &lt;see langword=&quot;false&quot; /&gt;.">Pour inclure le nœud de contexte dans la sélection, <see langword="true" /> ; sinon, <see langword="false" />.</param>
      <returns vsli:raw="An &lt;see cref=&quot;T:System.Xml.XPath.XPathNodeIterator&quot; /&gt; that contains the selected nodes. The returned nodes are in reverse document order.">
        <see cref="T:System.Xml.XPath.XPathNodeIterator" /> qui contient les nœuds sélectionnés. Les nœuds retournés sont dans l'ordre inverse des documents.</returns>
    </member>
    <member name="M:System.Xml.XPath.XPathNavigator.SelectChildren(System.String,System.String)">
      <summary vsli:raw="Selects all the child nodes of the current node that have the local name and namespace URI specified.">Sélectionne tous les nœuds enfants du nœud actuel dotés du nom local et de l'URI d'espace de noms spécifiés.</summary>
      <param name="name" vsli:raw="The local name of the child nodes.">Nom local des nœuds enfants.</param>
      <param name="namespaceURI" vsli:raw="The namespace URI of the child nodes.">URI d'espace de noms des nœuds enfants.</param>
      <exception cref="T:System.ArgumentNullException" vsli:raw="&lt;see langword=&quot;null&quot; /&gt; cannot be passed as a parameter.">
        <see langword="null" /> ne peut pas être passé comme paramètre.</exception>
      <returns vsli:raw="An &lt;see cref=&quot;T:System.Xml.XPath.XPathNodeIterator&quot; /&gt; that contains the selected nodes.">
        <see cref="T:System.Xml.XPath.XPathNodeIterator" /> qui contient les nœuds sélectionnés.</returns>
    </member>
    <member name="M:System.Xml.XPath.XPathNavigator.SelectChildren(System.Xml.XPath.XPathNodeType)">
      <summary vsli:raw="Selects all the child nodes of the current node that have the matching &lt;see cref=&quot;T:System.Xml.XPath.XPathNodeType&quot; /&gt;.">Sélectionne tous les nœuds enfants du nœud actuel dotés du <see cref="T:System.Xml.XPath.XPathNodeType" /> correspondant.</summary>
      <param name="type" vsli:raw="The &lt;see cref=&quot;T:System.Xml.XPath.XPathNodeType&quot; /&gt; of the child nodes.">
        <see cref="T:System.Xml.XPath.XPathNodeType" /> des nœuds enfants.</param>
      <returns vsli:raw="An &lt;see cref=&quot;T:System.Xml.XPath.XPathNodeIterator&quot; /&gt; that contains the selected nodes.">
        <see cref="T:System.Xml.XPath.XPathNodeIterator" /> qui contient les nœuds sélectionnés.</returns>
    </member>
    <member name="M:System.Xml.XPath.XPathNavigator.SelectDescendants(System.String,System.String,System.Boolean)">
      <summary vsli:raw="Selects all the descendant nodes of the current node with the local name and namespace URI specified.">Sélectionne tous les nœuds descendants du nœud actuel dotés du nom local et de l'URI d'espace de noms spécifiés.</summary>
      <param name="name" vsli:raw="The local name of the descendant nodes.">Nom local des nœuds descendants.</param>
      <param name="namespaceURI" vsli:raw="The namespace URI of the descendant nodes.">URI d'espace de noms des nœuds descendants.</param>
      <param name="matchSelf" vsli:raw="&lt;see langword=&quot;true&quot; /&gt; to include the context node in the selection; otherwise, &lt;see langword=&quot;false&quot; /&gt;.">
        <see langword="true" /> pour inclure le nœud de contexte dans la sélection ; sinon, <see langword="false" />.</param>
      <exception cref="T:System.ArgumentNullException" vsli:raw="&lt;see langword=&quot;null&quot; /&gt; cannot be passed as a parameter.">
        <see langword="null" /> ne peut pas être passé comme paramètre.</exception>
      <returns vsli:raw="An &lt;see cref=&quot;T:System.Xml.XPath.XPathNodeIterator&quot; /&gt; that contains the selected nodes.">
        <see cref="T:System.Xml.XPath.XPathNodeIterator" /> qui contient les nœuds sélectionnés.</returns>
    </member>
    <member name="M:System.Xml.XPath.XPathNavigator.SelectDescendants(System.Xml.XPath.XPathNodeType,System.Boolean)">
      <summary vsli:raw="Selects all the descendant nodes of the current node that have a matching &lt;see cref=&quot;T:System.Xml.XPath.XPathNodeType&quot; /&gt;.">Sélectionne tous les nœuds descendants du nœud actuel qui possèdent un <see cref="T:System.Xml.XPath.XPathNodeType" /> correspondant.</summary>
      <param name="type" vsli:raw="The &lt;see cref=&quot;T:System.Xml.XPath.XPathNodeType&quot; /&gt; of the descendant nodes.">
        <see cref="T:System.Xml.XPath.XPathNodeType" /> des nœuds descendants.</param>
      <param name="matchSelf" vsli:raw="&lt;see langword=&quot;true&quot; /&gt; to include the context node in the selection; otherwise, &lt;see langword=&quot;false&quot; /&gt;.">
        <see langword="true" /> pour inclure le nœud de contexte dans la sélection ; sinon, <see langword="false" />.</param>
      <returns vsli:raw="An &lt;see cref=&quot;T:System.Xml.XPath.XPathNodeIterator&quot; /&gt; that contains the selected nodes.">
        <see cref="T:System.Xml.XPath.XPathNodeIterator" /> qui contient les nœuds sélectionnés.</returns>
    </member>
    <member name="M:System.Xml.XPath.XPathNavigator.SelectSingleNode(System.String)">
      <summary vsli:raw="Selects a single node in the &lt;see cref=&quot;T:System.Xml.XPath.XPathNavigator&quot; /&gt; using the specified XPath query.">Sélectionne un seul nœud dans le <see cref="T:System.Xml.XPath.XPathNavigator" /> en utilisant la requête XPath spécifiée.</summary>
      <param name="xpath" vsli:raw="A &lt;see cref=&quot;T:System.String&quot; /&gt; representing an XPath expression.">
        <see cref="T:System.String" /> représentant une expression XPath.</param>
      <exception cref="T:System.ArgumentException" vsli:raw="An error was encountered in the XPath query or the return type of the XPath expression is not a node.">Une erreur s’est produite dans la requête XPath ou le type de retour de l’expression XPath n’est pas un nœud.</exception>
      <exception cref="T:System.Xml.XPath.XPathException" vsli:raw="The XPath query is not valid.">La requête XPath n’est pas valide.</exception>
      <returns vsli:raw="An &lt;see cref=&quot;T:System.Xml.XPath.XPathNavigator&quot; /&gt; object that contains the first matching node for the XPath query specified; otherwise, &lt;see langword=&quot;null&quot; /&gt; if there are no query results.">Objet <see cref="T:System.Xml.XPath.XPathNavigator" /> qui contient le premier nœud correspondant pour la requête XPath spécifiée ; sinon, <see langword="null" /> s’il n’y a pas de résultats pour la requête.</returns>
    </member>
    <member name="M:System.Xml.XPath.XPathNavigator.SelectSingleNode(System.String,System.Xml.IXmlNamespaceResolver)">
      <summary vsli:raw="Selects a single node in the &lt;see cref=&quot;T:System.Xml.XPath.XPathNavigator&quot; /&gt; object using the specified XPath query with the &lt;see cref=&quot;T:System.Xml.IXmlNamespaceResolver&quot; /&gt; object specified to resolve namespace prefixes.">Sélectionne un seul nœud dans l’objet <see cref="T:System.Xml.XPath.XPathNavigator" /> à l’aide de la requête XPath spécifiée avec l’objet <see cref="T:System.Xml.IXmlNamespaceResolver" /> spécifié pour trouver les préfixes d’espace de noms.</summary>
      <param name="xpath" vsli:raw="A &lt;see cref=&quot;T:System.String&quot; /&gt; representing an XPath expression.">
        <see cref="T:System.String" /> représentant une expression XPath.</param>
      <param name="resolver" vsli:raw="The &lt;see cref=&quot;T:System.Xml.IXmlNamespaceResolver&quot; /&gt; object used to resolve namespace prefixes in the XPath query.">Objet <see cref="T:System.Xml.IXmlNamespaceResolver" /> permettant de trouver les préfixes d’espace de noms dans la requête XPath.</param>
      <exception cref="T:System.ArgumentException" vsli:raw="An error was encountered in the XPath query or the return type of the XPath expression is not a node.">Une erreur s’est produite dans la requête XPath ou le type de retour de l’expression XPath n’est pas un nœud.</exception>
      <exception cref="T:System.Xml.XPath.XPathException" vsli:raw="The XPath query is not valid.">La requête XPath n’est pas valide.</exception>
      <returns vsli:raw="An &lt;see cref=&quot;T:System.Xml.XPath.XPathNavigator&quot; /&gt; object that contains the first matching node for the XPath query specified; otherwise &lt;see langword=&quot;null&quot; /&gt; if there are no query results.">Objet <see cref="T:System.Xml.XPath.XPathNavigator" /> qui contient le premier nœud correspondant pour la requête XPath spécifiée ; sinon, <see langword="null" /> s’il n’y a pas de résultats pour la requête.</returns>
    </member>
    <member name="M:System.Xml.XPath.XPathNavigator.SelectSingleNode(System.Xml.XPath.XPathExpression)">
      <summary vsli:raw="Selects a single node in the &lt;see cref=&quot;T:System.Xml.XPath.XPathNavigator&quot; /&gt; using the specified &lt;see cref=&quot;T:System.Xml.XPath.XPathExpression&quot; /&gt; object.">Sélectionne un seul nœud dans le <see cref="T:System.Xml.XPath.XPathNavigator" /> en utilisant l’objet <see cref="T:System.Xml.XPath.XPathExpression" /> spécifié.</summary>
      <param name="expression" vsli:raw="An &lt;see cref=&quot;T:System.Xml.XPath.XPathExpression&quot; /&gt; object containing the compiled XPath query.">Objet <see cref="T:System.Xml.XPath.XPathExpression" /> contenant la requête XPath compilée.</param>
      <exception cref="T:System.ArgumentException" vsli:raw="An error was encountered in the XPath query or the return type of the XPath expression is not a node.">Une erreur s’est produite dans la requête XPath ou le type de retour de l’expression XPath n’est pas un nœud.</exception>
      <exception cref="T:System.Xml.XPath.XPathException" vsli:raw="The XPath query is not valid.">La requête XPath n’est pas valide.</exception>
      <returns vsli:raw="An &lt;see cref=&quot;T:System.Xml.XPath.XPathNavigator&quot; /&gt; object that contains the first matching node for the XPath query specified; otherwise &lt;see langword=&quot;null&quot; /&gt; if there are no query results.">Objet <see cref="T:System.Xml.XPath.XPathNavigator" /> qui contient le premier nœud correspondant pour la requête XPath spécifiée ; sinon, <see langword="null" /> s’il n’y a pas de résultats pour la requête.</returns>
    </member>
    <member name="M:System.Xml.XPath.XPathNavigator.SetTypedValue(System.Object)">
      <summary vsli:raw="Sets the typed value of the current node.">Définit la valeur typée du nœud actuel.</summary>
      <param name="typedValue" vsli:raw="The new typed value of the node.">Nouvelle valeur typée du nœud.</param>
      <exception cref="T:System.ArgumentException" vsli:raw="The &lt;see cref=&quot;T:System.Xml.XPath.XPathNavigator&quot; /&gt; does not support the type of the object specified.">Le <see cref="T:System.Xml.XPath.XPathNavigator" /> ne prend pas en charge le type de l’objet spécifié.</exception>
      <exception cref="T:System.ArgumentNullException" vsli:raw="The value specified cannot be &lt;see langword=&quot;null&quot; /&gt;.">La valeur spécifiée ne peut pas être <see langword="null" />.</exception>
      <exception cref="T:System.InvalidOperationException" vsli:raw="The &lt;see cref=&quot;T:System.Xml.XPath.XPathNavigator&quot; /&gt; is not positioned on an element or attribute node.">Le <see cref="T:System.Xml.XPath.XPathNavigator" /> n’est pas positionné sur un nœud d’élément ni d’attribut.</exception>
      <exception cref="T:System.NotSupportedException" vsli:raw="The &lt;see cref=&quot;T:System.Xml.XPath.XPathNavigator&quot; /&gt; does not support editing.">Le <see cref="T:System.Xml.XPath.XPathNavigator" /> ne prend pas en charge la modification.</exception>
    </member>
    <member name="M:System.Xml.XPath.XPathNavigator.SetValue(System.String)">
      <summary vsli:raw="Sets the value of the current node.">Définit la valeur du nœud actuel.</summary>
      <param name="value" vsli:raw="The new value of the node.">Nouvelle valeur du nœud.</param>
      <exception cref="T:System.ArgumentNullException" vsli:raw="The value parameter is &lt;see langword=&quot;null&quot; /&gt;.">Le paramètre de valeur est <see langword="null" />.</exception>
      <exception cref="T:System.InvalidOperationException" vsli:raw="The &lt;see cref=&quot;T:System.Xml.XPath.XPathNavigator&quot; /&gt; is positioned on the root node, a namespace node, or the specified value is invalid.">Le <see cref="T:System.Xml.XPath.XPathNavigator" /> est positionné sur le nœud racine ou sur un nœud d’espace de noms, ou la valeur spécifiée n’est pas valide.</exception>
      <exception cref="T:System.NotSupportedException" vsli:raw="The &lt;see cref=&quot;T:System.Xml.XPath.XPathNavigator&quot; /&gt; does not support editing.">Le <see cref="T:System.Xml.XPath.XPathNavigator" /> ne prend pas en charge la modification.</exception>
    </member>
    <member name="M:System.Xml.XPath.XPathNavigator.System#ICloneable#Clone">
      <summary vsli:raw="Creates a new copy of the &lt;see cref=&quot;T:System.Xml.XPath.XPathNavigator&quot; /&gt; object.">Crée une copie de l’objet <see cref="T:System.Xml.XPath.XPathNavigator" />.</summary>
      <returns vsli:raw="A new copy of the &lt;see cref=&quot;T:System.Xml.XPath.XPathNavigator&quot; /&gt; object.">Nouvelle copie de l’objet <see cref="T:System.Xml.XPath.XPathNavigator" />.</returns>
    </member>
    <member name="M:System.Xml.XPath.XPathNavigator.ToString">
      <summary vsli:raw="Gets the text value of the current node.">Obtient la valeur de texte du nœud actuel.</summary>
      <returns vsli:raw="A &lt;see langword=&quot;string&quot; /&gt; that contains the text value of the current node.">
        <see langword="string" /> qui contient la valeur de texte du nœud actuel.</returns>
    </member>
    <member name="M:System.Xml.XPath.XPathNavigator.ValueAs(System.Type,System.Xml.IXmlNamespaceResolver)">
      <summary vsli:raw="Gets the current node's value as the &lt;see cref=&quot;T:System.Type&quot; /&gt; specified, using the &lt;see cref=&quot;T:System.Xml.IXmlNamespaceResolver&quot; /&gt; object specified to resolve namespace prefixes.">Obtient la valeur du nœud actuel en tant que <see cref="T:System.Type" /> spécifié, à l'aide de l'objet <see cref="T:System.Xml.IXmlNamespaceResolver" /> spécifié pour trouver les préfixes d'espace de noms.</summary>
      <param name="returnType" vsli:raw="The &lt;see cref=&quot;T:System.Type&quot; /&gt; to return the current node's value as.">
        <see cref="T:System.Type" /> permettant de retourner la valeur du nœud actuel.</param>
      <param name="nsResolver" vsli:raw="The &lt;see cref=&quot;T:System.Xml.IXmlNamespaceResolver&quot; /&gt; object used to resolve namespace prefixes.">Objet <see cref="T:System.Xml.IXmlNamespaceResolver" /> utilisé pour résoudre les préfixes d’espace de noms.</param>
      <exception cref="T:System.FormatException" vsli:raw="The current node's value is not in the correct format for the target type.">La valeur du nœud actuel n'est pas correcte pour le type cible.</exception>
      <exception cref="T:System.InvalidCastException" vsli:raw="The attempted cast is not valid.">La tentative de cast n'est pas valide.</exception>
      <returns vsli:raw="The value of the current node as the &lt;see cref=&quot;T:System.Type&quot; /&gt; requested.">Valeur du nœud actuel en tant que <see cref="T:System.Type" /> demandé.</returns>
    </member>
    <member name="M:System.Xml.XPath.XPathNavigator.WriteSubtree(System.Xml.XmlWriter)">
      <summary vsli:raw="Streams the current node and its child nodes to the &lt;see cref=&quot;T:System.Xml.XmlWriter&quot; /&gt; object specified.">Transmet en continu le nœud actuel et ses nœuds enfants à l’objet <see cref="T:System.Xml.XmlWriter" /> spécifié.</summary>
      <param name="writer" vsli:raw="The &lt;see cref=&quot;T:System.Xml.XmlWriter&quot; /&gt; object to stream to.">Objet <see cref="T:System.Xml.XmlWriter" /> vers lequel transmettre en continu.</param>
    </member>
    <member name="P:System.Xml.XPath.XPathNavigator.BaseURI">
      <summary vsli:raw="When overridden in a derived class, gets the base URI for the current node.">En cas de substitution dans une classe dérivée, obtient l'URI de base du nœud actuel.</summary>
      <returns vsli:raw="The location from which the node was loaded, or &lt;see cref=&quot;F:System.String.Empty&quot; /&gt; if there is no value.">Emplacement à partir duquel le nœud a été chargé ou <see cref="F:System.String.Empty" /> s'il n'y a aucune valeur.</returns>
    </member>
    <member name="P:System.Xml.XPath.XPathNavigator.CanEdit">
      <summary vsli:raw="Gets a value that indicates whether the &lt;see cref=&quot;T:System.Xml.XPath.XPathNavigator&quot; /&gt; can edit the underlying XML data.">Obtient une valeur indiquant si le <see cref="T:System.Xml.XPath.XPathNavigator" /> peut modifier les données XML sous-jacentes.</summary>
      <returns vsli:raw="&lt;see langword=&quot;true&quot; /&gt; if the &lt;see cref=&quot;T:System.Xml.XPath.XPathNavigator&quot; /&gt; can edit the underlying XML data; otherwise, &lt;see langword=&quot;false&quot; /&gt;.">
        <see langword="true" /> Si le <see cref="T:System.Xml.XPath.XPathNavigator" /> peut modifier les données XML sous-jacentes ; sinon, <see langword="false" /> .</returns>
    </member>
    <member name="P:System.Xml.XPath.XPathNavigator.HasAttributes">
      <summary vsli:raw="Gets a value that indicates whether the current node has any attributes.">Obtient une valeur indiquant si le nœud actuel a des attributs.</summary>
      <returns vsli:raw="&lt;see langword=&quot;true&quot; /&gt; if the current node has attributes; returns &lt;see langword=&quot;false&quot; /&gt; if the current node has no attributes, or if the &lt;see cref=&quot;T:System.Xml.XPath.XPathNavigator&quot; /&gt; is not positioned on an element node.">
        <see langword="true" /> Si le nœud actuel possède des attributs ; retourne <see langword="false" /> si le nœud actuel n’a pas d’attributs ou si le <see cref="T:System.Xml.XPath.XPathNavigator" /> n’est pas positionné sur un nœud d’élément.</returns>
    </member>
    <member name="P:System.Xml.XPath.XPathNavigator.HasChildren">
      <summary vsli:raw="Gets a value that indicates whether the current node has any child nodes.">Obtient une valeur indiquant si le nœud actuel a des nœuds enfants.</summary>
      <returns vsli:raw="&lt;see langword=&quot;true&quot; /&gt; if the current node has any child nodes; otherwise, &lt;see langword=&quot;false&quot; /&gt;.">
        <see langword="true" /> si le nœud actuel possède des nœuds enfants ; sinon, <see langword="false" />.</returns>
    </member>
    <member name="P:System.Xml.XPath.XPathNavigator.InnerXml">
      <summary vsli:raw="Gets or sets the markup representing the child nodes of the current node.">Obtient ou définit le balisage représentant les nœuds enfants du nœud actuel.</summary>
      <exception cref="T:System.InvalidOperationException" vsli:raw="The &lt;see cref=&quot;P:System.Xml.XPath.XPathNavigator.InnerXml&quot; /&gt; property cannot be set.">Impossible de définir la propriété <see cref="P:System.Xml.XPath.XPathNavigator.InnerXml" />.</exception>
      <returns vsli:raw="A &lt;see cref=&quot;T:System.String&quot; /&gt; that contains the markup of the child nodes of the current node.">
        <see cref="T:System.String" /> qui contient le balisage des nœuds enfants du nœud actuel.</returns>
    </member>
    <member name="P:System.Xml.XPath.XPathNavigator.IsEmptyElement">
      <summary vsli:raw="When overridden in a derived class, gets a value that indicates whether the current node is an empty element without an end element tag.">En cas de substitution dans une classe dérivée, obtient une valeur qui indique si le nœud actuel est un élément vide sans étiquette d’élément de fin.</summary>
      <returns vsli:raw="&lt;see langword=&quot;true&quot; /&gt; if the current node is an empty element; otherwise, &lt;see langword=&quot;false&quot; /&gt;.">
        <see langword="true" /> si le nœud actuel est un élément vide ; sinon, <see langword="false" />.</returns>
    </member>
    <member name="P:System.Xml.XPath.XPathNavigator.IsNode">
      <summary vsli:raw="Gets a value that indicates if the current node represents an XPath node.">Obtient une valeur qui indique si le nœud actuel représente un nœud XPath.</summary>
      <returns vsli:raw="Always returns &lt;see langword=&quot;true&quot; /&gt;.">Retourne toujours <see langword="true" />.</returns>
    </member>
    <member name="P:System.Xml.XPath.XPathNavigator.LocalName">
      <summary vsli:raw="When overridden in a derived class, gets the &lt;see cref=&quot;P:System.Xml.XPath.XPathNavigator.Name&quot; /&gt; of the current node without any namespace prefix.">En cas de remplacement dans une classe dérivée, obtient le <see cref="P:System.Xml.XPath.XPathNavigator.Name" /> du nœud actuel sans aucun préfixe d’espace de noms.</summary>
      <returns vsli:raw="A &lt;see cref=&quot;T:System.String&quot; /&gt; that contains the local name of the current node, or &lt;see cref=&quot;F:System.String.Empty&quot; /&gt; if the current node does not have a name (for example, text or comment nodes).">
        <see cref="T:System.String" /> qui contient le nom local du nœud actuel ou <see cref="F:System.String.Empty" /> si le nœud actuel n’a pas de nom (par exemple, des nœuds de texte ou de commentaire).</returns>
    </member>
    <member name="P:System.Xml.XPath.XPathNavigator.Name">
      <summary vsli:raw="When overridden in a derived class, gets the qualified name of the current node.">En cas de substitution dans une classe dérivée, obtient le nom qualifié du nœud actuel.</summary>
      <returns vsli:raw="A &lt;see cref=&quot;T:System.String&quot; /&gt; that contains the qualified &lt;see cref=&quot;P:System.Xml.XPath.XPathNavigator.Name&quot; /&gt; of the current node, or &lt;see cref=&quot;F:System.String.Empty&quot; /&gt; if the current node does not have a name (for example, text or comment nodes).">
        <see cref="T:System.String" /> qui contient le <see cref="P:System.Xml.XPath.XPathNavigator.Name" /> qualifié du nœud actuel, ou <see cref="F:System.String.Empty" /> si le nœud actuel n’a pas de nom (par exemple, des nœuds de texte ou de commentaire).</returns>
    </member>
    <member name="P:System.Xml.XPath.XPathNavigator.NamespaceURI">
      <summary vsli:raw="When overridden in a derived class, gets the namespace URI of the current node.">En cas de substitution dans une classe dérivée, obtient l'URI de l'espace de noms du nœud actuel.</summary>
      <returns vsli:raw="A &lt;see cref=&quot;T:System.String&quot; /&gt; that contains the namespace URI of the current node, or &lt;see cref=&quot;F:System.String.Empty&quot; /&gt; if the current node has no namespace URI.">Une <see cref="T:System.String" /> qui contient l’URI de l’espace de noms du nœud actuel, ou <see cref="F:System.String.Empty" /> si le nœud actuel n’a pas d’URI d’espace de noms.</returns>
    </member>
    <member name="P:System.Xml.XPath.XPathNavigator.NameTable">
      <summary vsli:raw="When overridden in a derived class, gets the &lt;see cref=&quot;T:System.Xml.XmlNameTable&quot; /&gt; of the &lt;see cref=&quot;T:System.Xml.XPath.XPathNavigator&quot; /&gt;.">En cas de substitution dans une classe dérivée, obtient <see cref="T:System.Xml.XmlNameTable" /> de <see cref="T:System.Xml.XPath.XPathNavigator" />.</summary>
      <returns vsli:raw="An &lt;see cref=&quot;T:System.Xml.XmlNameTable&quot; /&gt; object enabling you to get the atomized version of a &lt;see cref=&quot;T:System.String&quot; /&gt; within the XML document.">Objet <see cref="T:System.Xml.XmlNameTable" /> qui vous permet d'obtenir la version atomisée d'une <see cref="T:System.String" /> au sein du document XML.</returns>
    </member>
    <member name="P:System.Xml.XPath.XPathNavigator.NavigatorComparer">
      <summary vsli:raw="Gets an &lt;see cref=&quot;T:System.Collections.IEqualityComparer&quot; /&gt; used for equality comparison of &lt;see cref=&quot;T:System.Xml.XPath.XPathNavigator&quot; /&gt; objects.">Obtient un <see cref="T:System.Collections.IEqualityComparer" /> utilisé pour la comparaison d’égalité d’objets <see cref="T:System.Xml.XPath.XPathNavigator" />.</summary>
      <returns vsli:raw="An &lt;see cref=&quot;T:System.Collections.IEqualityComparer&quot; /&gt; used for equality comparison of &lt;see cref=&quot;T:System.Xml.XPath.XPathNavigator&quot; /&gt; objects.">
        <see cref="T:System.Collections.IEqualityComparer" /> utilisé pour la comparaison d’égalité d’objets <see cref="T:System.Xml.XPath.XPathNavigator" />.</returns>
    </member>
    <member name="P:System.Xml.XPath.XPathNavigator.NodeType">
      <summary vsli:raw="When overridden in a derived class, gets the &lt;see cref=&quot;T:System.Xml.XPath.XPathNodeType&quot; /&gt; of the current node.">En cas de substitution dans une classe dérivée, obtient le <see cref="T:System.Xml.XPath.XPathNodeType" /> du nœud actuel.</summary>
      <returns vsli:raw="One of the &lt;see cref=&quot;T:System.Xml.XPath.XPathNodeType&quot; /&gt; values representing the current node.">Une des valeurs <see cref="T:System.Xml.XPath.XPathNodeType" /> représentant le nœud actuel.</returns>
    </member>
    <member name="P:System.Xml.XPath.XPathNavigator.OuterXml">
      <summary vsli:raw="Gets or sets the markup representing the opening and closing tags of the current node and its child nodes.">Obtient ou définit le balisage représentant les balises d'ouverture et de fermeture du nœud actuel et de ses nœuds enfants.</summary>
      <returns vsli:raw="A &lt;see cref=&quot;T:System.String&quot; /&gt; that contains the markup representing the opening and closing tags of the current node and its child nodes.">
        <see cref="T:System.String" /> qui contient le balisage représentant les balises d’ouverture et de fermeture du nœud actuel et de ses nœuds enfants.</returns>
    </member>
    <member name="P:System.Xml.XPath.XPathNavigator.Prefix">
      <summary vsli:raw="When overridden in a derived class, gets the namespace prefix associated with the current node.">En cas de substitution dans une classe dérivée, obtient le préfixe de l'espace de noms associé au nœud actuel.</summary>
      <returns vsli:raw="A &lt;see cref=&quot;T:System.String&quot; /&gt; that contains the namespace prefix associated with the current node.">
        <see cref="T:System.String" /> qui contient le préfixe de l’espace de noms associé au nœud actuel.</returns>
    </member>
    <member name="P:System.Xml.XPath.XPathNavigator.SchemaInfo">
      <summary vsli:raw="Gets the schema information that has been assigned to the current node as a result of schema validation.">Obtient les informations de schéma qui ont été assignées au nœud actuel à la suite de la validation du schéma.</summary>
      <returns vsli:raw="An &lt;see cref=&quot;T:System.Xml.Schema.IXmlSchemaInfo&quot; /&gt; object that contains the schema information for the current node.">Objet <see cref="T:System.Xml.Schema.IXmlSchemaInfo" /> qui contient les informations de schéma du nœud actuel.</returns>
    </member>
    <member name="P:System.Xml.XPath.XPathNavigator.TypedValue">
      <summary vsli:raw="Gets the current node as a boxed object of the most appropriate .NET type.">Obtient le nœud actuel en tant qu'objet boxed du type .NET Framework le plus approprié.</summary>
      <returns vsli:raw="The current node as a boxed object of the most appropriate .NET type.">Nœud actuel en tant qu'objet boxed du type .NET Framework le plus approprié.</returns>
    </member>
    <member name="P:System.Xml.XPath.XPathNavigator.UnderlyingObject">
      <summary vsli:raw="Used by &lt;see cref=&quot;T:System.Xml.XPath.XPathNavigator&quot; /&gt; implementations which provide a &quot;virtualized&quot; XML view over a store, to provide access to underlying objects.">Utilisé par les implémentations de <see cref="T:System.Xml.XPath.XPathNavigator" /> qui fournissent un affichage XML « virtualisé » d'un magasin, en vue de proposer un accès aux objets sous-jacents.</summary>
      <returns vsli:raw="The default is &lt;see langword=&quot;null&quot; /&gt;.">La valeur par défaut est <see langword="null" />.</returns>
    </member>
    <member name="P:System.Xml.XPath.XPathNavigator.ValueAsBoolean">
      <summary vsli:raw="Gets the current node's value as a &lt;see cref=&quot;T:System.Boolean&quot; /&gt;.">Obtient la valeur du nœud actuel en tant que <see cref="T:System.Boolean" />.</summary>
      <exception cref="T:System.FormatException" vsli:raw="The current node's string value cannot be converted to a &lt;see cref=&quot;T:System.Boolean&quot; /&gt;.">La valeur de chaîne du nœud actuel ne peut pas être convertie en <see cref="T:System.Boolean" />.</exception>
      <exception cref="T:System.InvalidCastException" vsli:raw="The attempted cast to &lt;see cref=&quot;T:System.Boolean&quot; /&gt; is not valid.">La tentative de cast en <see cref="T:System.Boolean" /> n'est pas valide.</exception>
      <returns vsli:raw="The current node's value as a &lt;see cref=&quot;T:System.Boolean&quot; /&gt;.">Valeur du nœud actuel en tant que <see cref="T:System.Boolean" />.</returns>
    </member>
    <member name="P:System.Xml.XPath.XPathNavigator.ValueAsDateTime">
      <summary vsli:raw="Gets the current node's value as a &lt;see cref=&quot;T:System.DateTime&quot; /&gt;.">Obtient la valeur du nœud actuel en tant que <see cref="T:System.DateTime" />.</summary>
      <exception cref="T:System.FormatException" vsli:raw="The current node's string value cannot be converted to a &lt;see cref=&quot;T:System.DateTime&quot; /&gt;.">La valeur de chaîne du nœud actuel ne peut pas être convertie en <see cref="T:System.DateTime" />.</exception>
      <exception cref="T:System.InvalidCastException" vsli:raw="The attempted cast to &lt;see cref=&quot;T:System.DateTime&quot; /&gt; is not valid.">La tentative de cast en <see cref="T:System.DateTime" /> n'est pas valide.</exception>
      <returns vsli:raw="The current node's value as a &lt;see cref=&quot;T:System.DateTime&quot; /&gt;.">Valeur du nœud actuel en tant que <see cref="T:System.DateTime" />.</returns>
    </member>
    <member name="P:System.Xml.XPath.XPathNavigator.ValueAsDouble">
      <summary vsli:raw="Gets the current node's value as a &lt;see cref=&quot;T:System.Double&quot; /&gt;.">Obtient la valeur du nœud actuel en tant que <see cref="T:System.Double" />.</summary>
      <exception cref="T:System.FormatException" vsli:raw="The current node's string value cannot be converted to a &lt;see cref=&quot;T:System.Double&quot; /&gt;.">La valeur de chaîne du nœud actuel ne peut pas être convertie en <see cref="T:System.Double" />.</exception>
      <exception cref="T:System.InvalidCastException" vsli:raw="The attempted cast to &lt;see cref=&quot;T:System.Double&quot; /&gt; is not valid.">La tentative de cast en <see cref="T:System.Double" /> n'est pas valide.</exception>
      <returns vsli:raw="The current node's value as a &lt;see cref=&quot;T:System.Double&quot; /&gt;.">Valeur du nœud actuel en tant que <see cref="T:System.Double" />.</returns>
    </member>
    <member name="P:System.Xml.XPath.XPathNavigator.ValueAsInt">
      <summary vsli:raw="Gets the current node's value as an &lt;see cref=&quot;T:System.Int32&quot; /&gt;.">Obtient la valeur du nœud actuel en tant que <see cref="T:System.Int32" />.</summary>
      <exception cref="T:System.FormatException" vsli:raw="The current node's string value cannot be converted to a &lt;see cref=&quot;T:System.Int32&quot; /&gt;.">La valeur de chaîne du nœud actuel ne peut pas être convertie en <see cref="T:System.Int32" />.</exception>
      <exception cref="T:System.InvalidCastException" vsli:raw="The attempted cast to &lt;see cref=&quot;T:System.Int32&quot; /&gt; is not valid.">La tentative de cast en <see cref="T:System.Int32" /> n'est pas valide.</exception>
      <returns vsli:raw="The current node's value as an &lt;see cref=&quot;T:System.Int32&quot; /&gt;.">Valeur du nœud actuel en tant que <see cref="T:System.Int32" />.</returns>
    </member>
    <member name="P:System.Xml.XPath.XPathNavigator.ValueAsLong">
      <summary vsli:raw="Gets the current node's value as an &lt;see cref=&quot;T:System.Int64&quot; /&gt;.">Obtient la valeur du nœud actuel en tant que <see cref="T:System.Int64" />.</summary>
      <exception cref="T:System.FormatException" vsli:raw="The current node's string value cannot be converted to a &lt;see cref=&quot;T:System.Int64&quot; /&gt;.">La valeur de chaîne du nœud actuel ne peut pas être convertie en <see cref="T:System.Int64" />.</exception>
      <exception cref="T:System.InvalidCastException" vsli:raw="The attempted cast to &lt;see cref=&quot;T:System.Int64&quot; /&gt; is not valid.">La tentative de cast en <see cref="T:System.Int64" /> n'est pas valide.</exception>
      <returns vsli:raw="The current node's value as an &lt;see cref=&quot;T:System.Int64&quot; /&gt;.">Valeur du nœud actuel en tant que <see cref="T:System.Int64" />.</returns>
    </member>
    <member name="P:System.Xml.XPath.XPathNavigator.ValueType">
      <summary vsli:raw="Gets the .NET &lt;see cref=&quot;T:System.Type&quot; /&gt; of the current node.">Obtient le <see cref="T:System.Type" /> du .NET Framework du nœud actuel.</summary>
      <returns vsli:raw="The .NET &lt;see cref=&quot;T:System.Type&quot; /&gt; of the current node. The default value is &lt;see cref=&quot;T:System.String&quot; /&gt;.">
        <see cref="T:System.Type" /> du .NET Framework du nœud actuel. La valeur par défaut est <see cref="T:System.String" />.</returns>
    </member>
    <member name="P:System.Xml.XPath.XPathNavigator.XmlLang">
      <summary vsli:raw="Gets the &lt;c&gt;xml:lang&lt;/c&gt; scope for the current node.">Obtient la portée <c>xml:lang</c> du nœud actuel.</summary>
      <returns vsli:raw="A &lt;see cref=&quot;T:System.String&quot; /&gt; that contains the value of the &lt;c&gt;xml:lang&lt;/c&gt; scope, or &lt;see cref=&quot;F:System.String.Empty&quot; /&gt; if the current node has no &lt;c&gt;xml:lang&lt;/c&gt; scope value to return.">
        <see cref="T:System.String" />Qui contient la valeur de la portée <c>XML : lang</c> , ou <see cref="F:System.String.Empty" /> si le nœud actuel n’a aucune valeur de portée <c>XML : lang</c> à retourner.</returns>
    </member>
    <member name="P:System.Xml.XPath.XPathNavigator.XmlType">
      <summary vsli:raw="Gets the &lt;see cref=&quot;T:System.Xml.Schema.XmlSchemaType&quot; /&gt; information for the current node.">Obtient les informations <see cref="T:System.Xml.Schema.XmlSchemaType" /> pour le nœud actuel.</summary>
      <returns vsli:raw="An &lt;see cref=&quot;T:System.Xml.Schema.XmlSchemaType&quot; /&gt; object; default is &lt;see langword=&quot;null&quot; /&gt;.">Objet <see cref="T:System.Xml.Schema.XmlSchemaType" /> ; la valeur par défaut est <see langword="null" />.</returns>
    </member>
    <member name="T:System.Xml.XPath.XPathNodeIterator">
      <summary vsli:raw="Provides an iterator over a selected set of nodes.">Fournit un itérateur sur un ensemble de nœuds sélectionné.</summary>
    </member>
    <member name="M:System.Xml.XPath.XPathNodeIterator.#ctor">
      <summary vsli:raw="Initializes a new instance of the &lt;see cref=&quot;T:System.Xml.XPath.XPathNodeIterator&quot; /&gt; class.">Initialise une nouvelle instance de la classe <see cref="T:System.Xml.XPath.XPathNodeIterator" />.</summary>
    </member>
    <member name="M:System.Xml.XPath.XPathNodeIterator.Clone">
      <summary vsli:raw="When overridden in a derived class, returns a clone of this &lt;see cref=&quot;T:System.Xml.XPath.XPathNodeIterator&quot; /&gt; object.">En cas de substitution dans une classe dérivée, retourne un clone de cet objet <see cref="T:System.Xml.XPath.XPathNodeIterator" />.</summary>
      <returns vsli:raw="A new &lt;see cref=&quot;T:System.Xml.XPath.XPathNodeIterator&quot; /&gt; object clone of this &lt;see cref=&quot;T:System.Xml.XPath.XPathNodeIterator&quot; /&gt; object.">Nouveau clone d'objet <see cref="T:System.Xml.XPath.XPathNodeIterator" /> de cet objet <see cref="T:System.Xml.XPath.XPathNodeIterator" />.</returns>
    </member>
    <member name="M:System.Xml.XPath.XPathNodeIterator.GetEnumerator">
      <summary vsli:raw="Returns an &lt;see cref=&quot;T:System.Collections.IEnumerator&quot; /&gt; object to iterate through the selected node set.">Retourne un objet <see cref="T:System.Collections.IEnumerator" /> pour itérer au sein de l'ensemble de nœuds sélectionné.</summary>
      <returns vsli:raw="An &lt;see cref=&quot;T:System.Collections.IEnumerator&quot; /&gt; object to iterate through the selected node set.">Objet <see cref="T:System.Collections.IEnumerator" /> pour itérer au sein de l'ensemble de nœuds sélectionné.</returns>
    </member>
    <member name="M:System.Xml.XPath.XPathNodeIterator.MoveNext">
      <summary vsli:raw="When overridden in a derived class, moves the &lt;see cref=&quot;T:System.Xml.XPath.XPathNavigator&quot; /&gt; object returned by the &lt;see cref=&quot;P:System.Xml.XPath.XPathNodeIterator.Current&quot; /&gt; property to the next node in the selected node set.">En cas de substitution dans une classe dérivée, déplace l’objet <see cref="T:System.Xml.XPath.XPathNavigator" /> retourné par la propriété <see cref="P:System.Xml.XPath.XPathNodeIterator.Current" /> vers le nœud suivant dans l’ensemble de nœuds sélectionné.</summary>
      <returns vsli:raw="&lt;see langword=&quot;true&quot; /&gt; if the &lt;see cref=&quot;T:System.Xml.XPath.XPathNavigator&quot; /&gt; object moved to the next node; &lt;see langword=&quot;false&quot; /&gt; if there are no more selected nodes.">
        <see langword="true" /> si l’objet <see cref="T:System.Xml.XPath.XPathNavigator" /> a été déplacé vers le nœud suivant ; <see langword="false" /> en l’absence d’autres nœuds sélectionnés.</returns>
    </member>
    <member name="M:System.Xml.XPath.XPathNodeIterator.System#ICloneable#Clone">
      <summary vsli:raw="Creates a new object that is a copy of the current instance.">Crée un objet qui est une copie de l'instance actuelle.</summary>
      <returns vsli:raw="A new object that is a copy of this instance.">Nouvel objet qui est une copie de cette instance.</returns>
    </member>
    <member name="P:System.Xml.XPath.XPathNodeIterator.Count">
      <summary vsli:raw="Gets the index of the last node in the selected set of nodes.">Obtient l'index du dernier nœud dans l'ensemble des nœuds sélectionnés.</summary>
      <returns vsli:raw="The index of the last node in the selected set of nodes, or 0 if there are no selected nodes.">Index du dernier nœud de l'ensemble de nœuds sélectionné ou 0 s'il n'existe pas de nœuds sélectionnés.</returns>
    </member>
    <member name="P:System.Xml.XPath.XPathNodeIterator.Current">
      <summary vsli:raw="When overridden in a derived class, gets the &lt;see cref=&quot;T:System.Xml.XPath.XPathNavigator&quot; /&gt; object for this &lt;see cref=&quot;T:System.Xml.XPath.XPathNodeIterator&quot; /&gt;, positioned on the current context node.">En cas de substitution dans une classe dérivée, obtient l’objet <see cref="T:System.Xml.XPath.XPathNavigator" /> pour cet élément <see cref="T:System.Xml.XPath.XPathNodeIterator" />, placé sur le nœud de contexte actuel.</summary>
      <returns vsli:raw="An &lt;see cref=&quot;T:System.Xml.XPath.XPathNavigator&quot; /&gt; object positioned on the context node from which the node set was selected. The &lt;see cref=&quot;M:System.Xml.XPath.XPathNodeIterator.MoveNext&quot; /&gt; method must be called to move the &lt;see cref=&quot;T:System.Xml.XPath.XPathNodeIterator&quot; /&gt; to the first node in the selected set.">Objet <see cref="T:System.Xml.XPath.XPathNavigator" /> positionné sur le nœud de contexte à partir duquel l’ensemble de nœuds a été sélectionné. La méthode <see cref="M:System.Xml.XPath.XPathNodeIterator.MoveNext" /> doit être appelée pour déplacer l’élément <see cref="T:System.Xml.XPath.XPathNodeIterator" /> vers le premier nœud de l’ensemble sélectionné.</returns>
    </member>
    <member name="P:System.Xml.XPath.XPathNodeIterator.CurrentPosition">
      <summary vsli:raw="When overridden in a derived class, gets the index of the current position in the selected set of nodes.">En cas de substitution dans une classe dérivée, obtient l'index de la position actuelle dans l'ensemble des nœuds sélectionnés.</summary>
      <returns vsli:raw="The index of the current position.">Index de la position actuelle.</returns>
    </member>
    <member name="T:System.Xml.XPath.XPathNodeType">
      <summary vsli:raw="Defines the XPath node types that can be returned from the &lt;see cref=&quot;T:System.Xml.XPath.XPathNavigator&quot; /&gt; class.">Définit les types de nœuds XPath pouvant être retournés à partir de la classe <see cref="T:System.Xml.XPath.XPathNavigator" />.</summary>
    </member>
    <member name="F:System.Xml.XPath.XPathNodeType.All">
      <summary vsli:raw="Any of the &lt;see cref=&quot;T:System.Xml.XPath.XPathNodeType&quot; /&gt; node types.">Un des types de nœuds <see cref="T:System.Xml.XPath.XPathNodeType" />.</summary>
    </member>
    <member name="F:System.Xml.XPath.XPathNodeType.Attribute">
      <summary vsli:raw="An attribute, such as &lt;c&gt;id='123'&lt;/c&gt;.">Attribut, tel que <c>id=’123’</c>.</summary>
    </member>
    <member name="F:System.Xml.XPath.XPathNodeType.Comment">
      <summary vsli:raw="A comment, such as &lt;c&gt;&amp;lt;!-- my comment --&amp;gt;&lt;/c&gt;.">Commentaire, tel que <c>&lt;!-- mon commentaire --&gt;</c></summary>
    </member>
    <member name="F:System.Xml.XPath.XPathNodeType.Element">
      <summary vsli:raw="An element, such as &lt;c&gt;&amp;lt;element&amp;gt;&lt;/c&gt;.">Élément, tel que <c>&lt;élément&gt;</c>.</summary>
    </member>
    <member name="F:System.Xml.XPath.XPathNodeType.Namespace">
      <summary vsli:raw="A namespace, such as &lt;c&gt;xmlns=&quot;namespace&quot;&lt;/c&gt;.">Espace de noms, tel que <c>xmlns="espace de noms"</c>.</summary>
    </member>
    <member name="F:System.Xml.XPath.XPathNodeType.ProcessingInstruction">
      <summary vsli:raw="A processing instruction, such as &lt;c&gt;&amp;lt;?pi test?&amp;gt;&lt;/c&gt;. This does not include XML declarations, which are not visible to the &lt;see cref=&quot;T:System.Xml.XPath.XPathNavigator&quot; /&gt; class.">Instruction de traitement, telle que <c>&lt;?pi test?&gt;</c>. Cela n'inclut pas les déclarations XML, lesquelles ne sont pas visibles pour la classe <see cref="T:System.Xml.XPath.XPathNavigator" />.</summary>
    </member>
    <member name="F:System.Xml.XPath.XPathNodeType.Root">
      <summary vsli:raw="The root node of the XML document or node tree.">Nœud racine du document XML ou arborescence de nœuds.</summary>
    </member>
    <member name="F:System.Xml.XPath.XPathNodeType.SignificantWhitespace">
      <summary vsli:raw="A node with white space characters and &lt;c&gt;xml:space&lt;/c&gt; set to &lt;c&gt;preserve&lt;/c&gt;.">Nœud dont les espaces blancs et <c>xml:space</c> sont définis sur <c>preserve</c>.</summary>
    </member>
    <member name="F:System.Xml.XPath.XPathNodeType.Text">
      <summary vsli:raw="The text content of a node. Equivalent to the Document Object Model (DOM) Text and CDATA node types. Contains at least one character.">Texte d'un nœud. Équivalent aux types de nœuds CDATA et de texte DOM (Document Object Model). Comporte au moins un caractère.</summary>
    </member>
    <member name="F:System.Xml.XPath.XPathNodeType.Whitespace">
      <summary vsli:raw="A node with only white space characters and no significant white space. White space characters are &lt;c&gt;#x20&lt;/c&gt;, &lt;c&gt;#x9&lt;/c&gt;, &lt;c&gt;#xD&lt;/c&gt;, or &lt;c&gt;#xA&lt;/c&gt;.">Nœud comportant uniquement des espaces blancs et aucun espace blanc significatif. Les espaces blancs sont <c>#x20</c>, <c>#x9</c>, <c>#xD</c> ou <c>#xA</c>.</summary>
    </member>
    <member name="T:System.Xml.XPath.XPathResultType">
      <summary vsli:raw="Specifies the return type of the XPath expression.">Spécifie le type de retour de l'expression XPath.</summary>
    </member>
    <member name="F:System.Xml.XPath.XPathResultType.Any">
      <summary vsli:raw="Any of the XPath node types.">Un des types de nœuds XPath.</summary>
    </member>
    <member name="F:System.Xml.XPath.XPathResultType.Boolean">
      <summary vsli:raw="A &lt;see cref=&quot;T:System.Boolean&quot; /&gt;&lt;see langword=&quot;true&quot; /&gt; or &lt;see langword=&quot;false&quot; /&gt; value.">Valeur <see cref="T:System.Boolean" /><see langword="true" /> ou <see langword="false" /></summary>
    </member>
    <member name="F:System.Xml.XPath.XPathResultType.Error">
      <summary vsli:raw="The expression does not evaluate to the correct XPath type.">L'expression ne prend pas la valeur du type XPath correct.</summary>
    </member>
    <member name="F:System.Xml.XPath.XPathResultType.Navigator">
      <summary vsli:raw="A tree fragment.">Fragment d'arborescence.</summary>
    </member>
    <member name="F:System.Xml.XPath.XPathResultType.NodeSet">
      <summary vsli:raw="A node collection.">Collection de nœuds.</summary>
    </member>
    <member name="F:System.Xml.XPath.XPathResultType.Number">
      <summary vsli:raw="A numeric value.">Valeur numérique.</summary>
    </member>
    <member name="F:System.Xml.XPath.XPathResultType.String">
      <summary vsli:raw="A &lt;see cref=&quot;T:System.String&quot; /&gt; value.">Valeur <see cref="T:System.String" />.</summary>
    </member>
    <member name="T:System.Xml.Xsl.IXsltContextFunction">
      <summary vsli:raw="Provides an interface to a given function defined in the Extensible Stylesheet Language for Transformations (XSLT) style sheet during runtime execution.">Fournit une interface à une fonction donnée définie dans la feuille de style XSLT (Extensible Stylesheet Language for Transformations) au moment de l'exécution.</summary>
    </member>
    <member name="M:System.Xml.Xsl.IXsltContextFunction.Invoke(System.Xml.Xsl.XsltContext,System.Object[],System.Xml.XPath.XPathNavigator)">
      <summary vsli:raw="Provides the method to invoke the function with the given arguments in the given context.">Fournit la méthode permettant d'appeler la fonction avec les arguments donnés dans le contexte spécifié.</summary>
      <param name="xsltContext" vsli:raw="The XSLT context for the function call.">Contexte XSLT de l'appel de fonction.</param>
      <param name="args" vsli:raw="The arguments of the function call. Each argument is an element in the array.">Les arguments de l'appel de la fonction. Chaque argument est un élément d'un tableau.</param>
      <param name="docContext" vsli:raw="The context node for the function call.">Nœud de contexte de l'appel de fonction.</param>
      <returns vsli:raw="An &lt;see cref=&quot;T:System.Object&quot; /&gt; representing the return value of the function.">
        <see cref="T:System.Object" /> représentant la valeur de retour de la fonction.</returns>
    </member>
    <member name="P:System.Xml.Xsl.IXsltContextFunction.ArgTypes">
      <summary vsli:raw="Gets the supplied XML Path Language (XPath) types for the function's argument list. This information can be used to discover the signature of the function which allows you to differentiate between overloaded functions.">Obtient les types XPath (XML Path Language) fournis pour la liste d'arguments de la fonction. Cette information peut être utilisée pour découvrir la signature de la fonction qui vous permet de faire la différence entre les fonctions surchargées.</summary>
      <returns vsli:raw="An array of &lt;see cref=&quot;T:System.Xml.XPath.XPathResultType&quot; /&gt; representing the types for the function's argument list.">Tableau de <see cref="T:System.Xml.XPath.XPathResultType" /> représentant les types de la liste d'arguments de la fonction.</returns>
    </member>
    <member name="P:System.Xml.Xsl.IXsltContextFunction.Maxargs">
      <summary vsli:raw="Gets the maximum number of arguments for the function. This enables the user to differentiate between overloaded functions.">Obtient le nombre maximal d'arguments pour la fonction. Ceci permet à l'utilisateur de faire la différence entre les fonctions surchargées.</summary>
      <returns vsli:raw="The maximum number of arguments for the function.">Nombre maximal d'arguments pour la fonction.</returns>
    </member>
    <member name="P:System.Xml.Xsl.IXsltContextFunction.Minargs">
      <summary vsli:raw="Gets the minimum number of arguments for the function. This enables the user to differentiate between overloaded functions.">Obtient le nombre minimum d'arguments pour la fonction. Ceci permet à l'utilisateur de faire la différence entre les fonctions surchargées.</summary>
      <returns vsli:raw="The minimum number of arguments for the function.">Nombre minimum d'arguments pour la fonction.</returns>
    </member>
    <member name="P:System.Xml.Xsl.IXsltContextFunction.ReturnType">
      <summary vsli:raw="Gets the &lt;see cref=&quot;T:System.Xml.XPath.XPathResultType&quot; /&gt; representing the XPath type returned by the function.">Obtient le <see cref="T:System.Xml.XPath.XPathResultType" /> représentant le type XPath retourné par la fonction.</summary>
      <returns vsli:raw="An &lt;see cref=&quot;T:System.Xml.XPath.XPathResultType&quot; /&gt; representing the XPath type returned by the function.">
        <see cref="T:System.Xml.XPath.XPathResultType" /> représentant le type XPath retourné par la fonction.</returns>
    </member>
    <member name="T:System.Xml.Xsl.IXsltContextVariable">
      <summary vsli:raw="Provides an interface to a given variable that is defined in the style sheet during runtime execution.">Fournit une interface à une variable donnée définie dans la feuille de style au moment de l'exécution.</summary>
    </member>
    <member name="M:System.Xml.Xsl.IXsltContextVariable.Evaluate(System.Xml.Xsl.XsltContext)">
      <summary vsli:raw="Evaluates the variable at runtime and returns an object that represents the value of the variable.">Évalue la variable au moment de l'exécution et retourne un objet qui représente la valeur de la variable.</summary>
      <param name="xsltContext" vsli:raw="An &lt;see cref=&quot;T:System.Xml.Xsl.XsltContext&quot; /&gt; representing the execution context of the variable.">
        <see cref="T:System.Xml.Xsl.XsltContext" /> représentant le contexte d'exécution de la variable.</param>
      <returns vsli:raw="An &lt;see cref=&quot;T:System.Object&quot; /&gt; representing the value of the variable. Possible return types include number, string, Boolean, document fragment, or node set.">
        <see cref="T:System.Object" /> représentant la valeur de la variable. Plusieurs types de retour sont possibles, notamment un nombre, une chaîne, un booléen, un fragment de document ou un ensemble de nœuds.</returns>
    </member>
    <member name="P:System.Xml.Xsl.IXsltContextVariable.IsLocal">
      <summary vsli:raw="Gets a value indicating whether the variable is local.">Obtient une valeur indiquant si la variable est locale.</summary>
      <returns vsli:raw="&lt;see langword=&quot;true&quot; /&gt; if the variable is a local variable in the current context; otherwise, &lt;see langword=&quot;false&quot; /&gt;.">
        <see langword="true" /> si la variable est une variable locale dans le contexte actuel ; sinon, <see langword="false" />.</returns>
    </member>
    <member name="P:System.Xml.Xsl.IXsltContextVariable.IsParam">
      <summary vsli:raw="Gets a value indicating whether the variable is an Extensible Stylesheet Language Transformations (XSLT) parameter. This can be a parameter to a style sheet or a template.">Obtient une valeur indiquant si la variable est un paramètre XSLT (Extensible Stylesheet Language Transformation). Il peut s'agir d'un paramètre d'une feuille de style ou d'un modèle.</summary>
      <returns vsli:raw="&lt;see langword=&quot;true&quot; /&gt; if the variable is an XSLT parameter; otherwise, &lt;see langword=&quot;false&quot; /&gt;.">
        <see langword="true" /> si la variable est un paramètre XSLT ; sinon, <see langword="false" />.</returns>
    </member>
    <member name="P:System.Xml.Xsl.IXsltContextVariable.VariableType">
      <summary vsli:raw="Gets the &lt;see cref=&quot;T:System.Xml.XPath.XPathResultType&quot; /&gt; representing the XML Path Language (XPath) type of the variable.">Obtient <see cref="T:System.Xml.XPath.XPathResultType" />, lequel représente le type XPath (XML Path Language) de la variable.</summary>
      <returns vsli:raw="The &lt;see cref=&quot;T:System.Xml.XPath.XPathResultType&quot; /&gt; representing the XPath type of the variable.">
        <see cref="T:System.Xml.XPath.XPathResultType" /> représentant le type XPath de la variable.</returns>
    </member>
    <member name="T:System.Xml.Xsl.XslCompiledTransform">
      <summary vsli:raw="Transforms XML data using an XSLT style sheet.">Transforme des données XML à l'aide d'une feuille de style XSLT.</summary>
    </member>
    <member name="M:System.Xml.Xsl.XslCompiledTransform.#ctor">
      <summary vsli:raw="Initializes a new instance of the &lt;see cref=&quot;T:System.Xml.Xsl.XslCompiledTransform&quot; /&gt; class.">Initialise une nouvelle instance de la classe <see cref="T:System.Xml.Xsl.XslCompiledTransform" />.</summary>
    </member>
    <member name="M:System.Xml.Xsl.XslCompiledTransform.#ctor(System.Boolean)">
      <summary vsli:raw="Initializes a new instance of the &lt;see cref=&quot;T:System.Xml.Xsl.XslCompiledTransform&quot; /&gt; class with the specified debug setting.">Initialise une nouvelle instance de la classe <see cref="T:System.Xml.Xsl.XslCompiledTransform" /> avec les paramètres de débogage spécifiés.</summary>
      <param name="enableDebug" vsli:raw="&lt;see langword=&quot;true&quot; /&gt; to generate debug information; otherwise &lt;see langword=&quot;false&quot; /&gt;. Setting this to &lt;see langword=&quot;true&quot; /&gt; enables you to debug the style sheet with the Microsoft Visual Studio Debugger.">
        <see langword="true" /> pour générer les informations de débogage ; sinon <see langword="false" />. Le fait de la définir à <see langword="true" /> vous permet de déboguer la feuille de style avec le débogueur Microsoft Visual Studio.</param>
    </member>
    <member name="M:System.Xml.Xsl.XslCompiledTransform.Load(System.Reflection.MethodInfo,System.Byte[],System.Type[])">
      <summary vsli:raw="Loads a method from a style sheet compiled using the &lt;see langword=&quot;XSLTC.exe&quot; /&gt; utility.">Charge une méthode à partir d'une feuille de style compilée à l'aide de l'utilitaire <see langword="XSLTC.exe" />.</summary>
      <param name="executeMethod" vsli:raw="A &lt;see cref=&quot;T:System.Reflection.MethodInfo&quot; /&gt; object representing the compiler-generated &lt;c&gt;execute&lt;/c&gt; method of the compiled style sheet.">Objet <see cref="T:System.Reflection.MethodInfo" /> qui représente la méthode <c>execute</c> générée par le compilateur de la feuille de style compilée.</param>
      <param name="queryData" vsli:raw="A byte array of serialized data structures in the &lt;c&gt;staticData&lt;/c&gt; field of the compiled style sheet as generated by the &lt;see cref=&quot;M:System.Xml.Xsl.XslCompiledTransform.CompileToType(System.Xml.XmlReader,System.Xml.Xsl.XsltSettings,System.Xml.XmlResolver,System.Boolean,System.Reflection.Emit.TypeBuilder,System.String)&quot; /&gt; method.">Tableau d’octets de structures de données sérialisées dans le champ <c>staticData</c> de la feuille de style compilée tel qu’il a été généré par la méthode <see cref="M:System.Xml.Xsl.XslCompiledTransform.CompileToType(System.Xml.XmlReader,System.Xml.Xsl.XsltSettings,System.Xml.XmlResolver,System.Boolean,System.Reflection.Emit.TypeBuilder,System.String)" />.</param>
      <param name="earlyBoundTypes" vsli:raw="An array of types stored in the compiler-generated &lt;c&gt;ebTypes&lt;/c&gt; field of the compiled style sheet.">Tableau de types stocké dans le champ <c>ebTypes</c> généré par le compilateur de la feuille de style compilée.</param>
    </member>
    <member name="M:System.Xml.Xsl.XslCompiledTransform.Load(System.String)">
      <summary vsli:raw="Loads and compiles the style sheet located at the specified URI.">Charge et compile la feuille de style se trouvant à l'URI spécifié.</summary>
      <param name="stylesheetUri" vsli:raw="The URI of the style sheet.">URI de la feuille de style.</param>
      <exception cref="T:System.ArgumentNullException" vsli:raw="The &lt;paramref name=&quot;stylesheetUri&quot; /&gt; value is &lt;see langword=&quot;null&quot; /&gt;.">
        <paramref name="stylesheetUri" /> a la valeur <see langword="null" />.</exception>
      <exception cref="T:System.Xml.Xsl.XsltException" vsli:raw="The style sheet contains an error.">La feuille de style contient une erreur.</exception>
      <exception cref="T:System.IO.FileNotFoundException" vsli:raw="The style sheet cannot be found.">La feuille de style est introuvable.</exception>
      <exception cref="T:System.IO.DirectoryNotFoundException" vsli:raw="The &lt;paramref name=&quot;stylesheetUri&quot; /&gt; value includes a filename or directory that cannot be found.">La valeur <paramref name="stylesheetUri" /> contient un nom de fichier ou un répertoire qui est introuvable.</exception>
      <exception cref="T:System.Net.WebException" vsli:raw="The &lt;paramref name=&quot;stylesheetUri&quot; /&gt; value cannot be resolved.  &#xA;  &#xA; -or-  &#xA;  &#xA; An error occurred while processing the request.">La valeur <paramref name="stylesheetUri" /> ne peut pas être résolue.  
  
- ou - 
Une erreur s’est produite lors du traitement de la demande.</exception>
      <exception cref="T:System.UriFormatException" vsli:raw="&lt;paramref name=&quot;stylesheetUri&quot; /&gt; is not a valid URI.">
        <paramref name="stylesheetUri" /> n'est pas un URI valide.</exception>
      <exception cref="T:System.Xml.XmlException" vsli:raw="There was a parsing error loading the style sheet.">Une erreur d'analyse s'est produite lors du chargement de la feuille de style.</exception>
    </member>
    <member name="M:System.Xml.Xsl.XslCompiledTransform.Load(System.String,System.Xml.Xsl.XsltSettings,System.Xml.XmlResolver)">
      <summary vsli:raw="Loads and compiles the XSLT style sheet specified by the URI. The &lt;see cref=&quot;T:System.Xml.XmlResolver&quot; /&gt; resolves any XSLT &lt;c&gt;import&lt;/c&gt; or &lt;c&gt;include&lt;/c&gt; elements and the XSLT settings determine the permissions for the style sheet.">Charge et compile la feuille de style XSLT spécifiée par l'URI. <see cref="T:System.Xml.XmlResolver" /> résout tous les éléments XSLT <c>import</c> ou <c>include</c>, et les paramètres XSLT déterminent les autorisations pour la feuille de style.</summary>
      <param name="stylesheetUri" vsli:raw="The URI of the style sheet.">URI de la feuille de style.</param>
      <param name="settings" vsli:raw="The &lt;see cref=&quot;T:System.Xml.Xsl.XsltSettings&quot; /&gt; to apply to the style sheet. If this is &lt;see langword=&quot;null&quot; /&gt;, the &lt;see cref=&quot;P:System.Xml.Xsl.XsltSettings.Default&quot; /&gt; setting is applied.">
        <see cref="T:System.Xml.Xsl.XsltSettings" /> à appliquer à la feuille de style. Si <see langword="null" />, le paramètre <see cref="P:System.Xml.Xsl.XsltSettings.Default" /> est appliqué.</param>
      <param name="stylesheetResolver" vsli:raw="The &lt;see cref=&quot;T:System.Xml.XmlResolver&quot; /&gt; used to resolve the style sheet URI and any style sheets referenced in XSLT &lt;c&gt;import&lt;/c&gt; and &lt;c&gt;include&lt;/c&gt; elements.">
        <see cref="T:System.Xml.XmlResolver" /> utilisé pour résoudre l’URI de feuille de style et toutes les feuilles de style référencées dans les éléments XSLT <c>import</c> et <c>include</c>.</param>
      <exception cref="T:System.ArgumentNullException" vsli:raw="The &lt;paramref name=&quot;stylesheetUri&quot; /&gt; or &lt;paramref name=&quot;stylesheetResolver&quot; /&gt; value is &lt;see langword=&quot;null&quot; /&gt;.">La valeur de <paramref name="stylesheetUri" /> ou de <paramref name="stylesheetResolver" /> est <see langword="null" />.</exception>
      <exception cref="T:System.Xml.Xsl.XsltException" vsli:raw="The style sheet contains an error.">La feuille de style contient une erreur.</exception>
      <exception cref="T:System.IO.FileNotFoundException" vsli:raw="The style sheet cannot be found.">La feuille de style est introuvable.</exception>
      <exception cref="T:System.IO.DirectoryNotFoundException" vsli:raw="The &lt;paramref name=&quot;stylesheetUri&quot; /&gt; value includes a filename or directory that cannot be found.">La valeur <paramref name="stylesheetUri" /> contient un nom de fichier ou un répertoire qui est introuvable.</exception>
      <exception cref="T:System.Net.WebException" vsli:raw="The &lt;paramref name=&quot;stylesheetUri&quot; /&gt; value cannot be resolved.  &#xA;  &#xA; -or-  &#xA;  &#xA; An error occurred while processing the request.">La valeur <paramref name="stylesheetUri" /> ne peut pas être résolue.  
  
- ou - 
Une erreur s’est produite lors du traitement de la demande.</exception>
      <exception cref="T:System.UriFormatException" vsli:raw="&lt;paramref name=&quot;stylesheetUri&quot; /&gt; is not a valid URI.">
        <paramref name="stylesheetUri" /> n'est pas un URI valide.</exception>
      <exception cref="T:System.Xml.XmlException" vsli:raw="There was a parsing error loading the style sheet.">Une erreur d'analyse s'est produite lors du chargement de la feuille de style.</exception>
    </member>
    <member name="M:System.Xml.Xsl.XslCompiledTransform.Load(System.Type)">
      <summary vsli:raw="Loads the compiled style sheet that was created using the XSLT Compiler (xsltc.exe).">Charge la feuille de style compilée qui a été créée à l’aide du compilateur XSLT (xsltc.exe).</summary>
      <param name="compiledStylesheet" vsli:raw="The name of the class that contains the compiled style sheet.  &#xA;  &#xA; This is usually the name of the style sheet. Unless otherwise specified, the xsltc.exe tool uses the name of the style sheet for the class and assembly names.">Nom de la classe qui contient la feuille de style compilée.  
  
 Il s'agit habituellement du nom de la feuille de style. Sauf spécification contraire, l'outil xsltc.exe utilise le nom de la feuille de style pour les noms de la classe et de l'assembly.</param>
    </member>
    <member name="M:System.Xml.Xsl.XslCompiledTransform.Load(System.Xml.XmlReader)">
      <summary vsli:raw="Compiles the style sheet contained in the &lt;see cref=&quot;T:System.Xml.XmlReader&quot; /&gt;.">Compile la feuille de style contenue dans <see cref="T:System.Xml.XmlReader" />.</summary>
      <param name="stylesheet" vsli:raw="An &lt;see cref=&quot;T:System.Xml.XmlReader&quot; /&gt; containing the style sheet.">
        <see cref="T:System.Xml.XmlReader" /> contenant la feuille de style.</param>
      <exception cref="T:System.ArgumentNullException" vsli:raw="The &lt;paramref name=&quot;stylesheet&quot; /&gt; value is &lt;see langword=&quot;null&quot; /&gt;.">
        <paramref name="stylesheet" /> a la valeur <see langword="null" />.</exception>
      <exception cref="T:System.Xml.Xsl.XsltException" vsli:raw="The style sheet contains an error.">La feuille de style contient une erreur.</exception>
    </member>
    <member name="M:System.Xml.Xsl.XslCompiledTransform.Load(System.Xml.XmlReader,System.Xml.Xsl.XsltSettings,System.Xml.XmlResolver)">
      <summary vsli:raw="Compiles the XSLT style sheet contained in the &lt;see cref=&quot;T:System.Xml.XmlReader&quot; /&gt;. The &lt;see cref=&quot;T:System.Xml.XmlResolver&quot; /&gt; resolves any XSLT &lt;c&gt;import&lt;/c&gt; or &lt;c&gt;include&lt;/c&gt; elements and the XSLT settings determine the permissions for the style sheet.">Compile la feuille de style XSLT figurant dans <see cref="T:System.Xml.XmlReader" />. <see cref="T:System.Xml.XmlResolver" /> résout tous les éléments XSLT <c>import</c> ou <c>include</c>, et les paramètres XSLT déterminent les autorisations pour la feuille de style.</summary>
      <param name="stylesheet" vsli:raw="The &lt;see cref=&quot;T:System.Xml.XmlReader&quot; /&gt; containing the style sheet.">
        <see cref="T:System.Xml.XmlReader" /> contenant la feuille de style.</param>
      <param name="settings" vsli:raw="The &lt;see cref=&quot;T:System.Xml.Xsl.XsltSettings&quot; /&gt; to apply to the style sheet. If this is &lt;see langword=&quot;null&quot; /&gt;, the &lt;see cref=&quot;P:System.Xml.Xsl.XsltSettings.Default&quot; /&gt; setting is applied.">
        <see cref="T:System.Xml.Xsl.XsltSettings" /> à appliquer à la feuille de style. Si <see langword="null" />, le paramètre <see cref="P:System.Xml.Xsl.XsltSettings.Default" /> est appliqué.</param>
      <param name="stylesheetResolver" vsli:raw="The &lt;see cref=&quot;T:System.Xml.XmlResolver&quot; /&gt; used to resolve any style sheets referenced in XSLT &lt;c&gt;import&lt;/c&gt; and &lt;c&gt;include&lt;/c&gt; elements. If this is &lt;see langword=&quot;null&quot; /&gt;, external resources are not resolved.">
        <see cref="T:System.Xml.XmlResolver" /> utilisé pour résoudre toute feuille de style référencée dans les éléments <c>import</c> et <c>include</c>. Si la valeur est <see langword="null" />, les ressources externes ne sont pas résolues.</param>
      <exception cref="T:System.ArgumentNullException" vsli:raw="The &lt;paramref name=&quot;stylesheet&quot; /&gt; value is &lt;see langword=&quot;null&quot; /&gt;.">
        <paramref name="stylesheet" /> a la valeur <see langword="null" />.</exception>
      <exception cref="T:System.Xml.Xsl.XsltException" vsli:raw="The style sheet contains an error.">La feuille de style contient une erreur.</exception>
    </member>
    <member name="M:System.Xml.Xsl.XslCompiledTransform.Load(System.Xml.XPath.IXPathNavigable)">
      <summary vsli:raw="Compiles the style sheet contained in the &lt;see cref=&quot;T:System.Xml.XPath.IXPathNavigable&quot; /&gt; object.">Compile la feuille de style contenue dans l'objet <see cref="T:System.Xml.XPath.IXPathNavigable" />.</summary>
      <param name="stylesheet" vsli:raw="An object implementing the &lt;see cref=&quot;T:System.Xml.XPath.IXPathNavigable&quot; /&gt; interface. In the Microsoft .NET Framework, this can be either an &lt;see cref=&quot;T:System.Xml.XmlNode&quot; /&gt; (typically an &lt;see cref=&quot;T:System.Xml.XmlDocument&quot; /&gt;), or an &lt;see cref=&quot;T:System.Xml.XPath.XPathDocument&quot; /&gt; containing the style sheet.">Objet implémentant l'interface <see cref="T:System.Xml.XPath.IXPathNavigable" />. Dans Microsoft .NET Framework, il peut s'agir de <see cref="T:System.Xml.XmlNode" /> (généralement <see cref="T:System.Xml.XmlDocument" />) ou de <see cref="T:System.Xml.XPath.XPathDocument" /> contenant la feuille de style.</param>
      <exception cref="T:System.ArgumentNullException" vsli:raw="The &lt;paramref name=&quot;stylesheet&quot; /&gt; value is &lt;see langword=&quot;null&quot; /&gt;.">
        <paramref name="stylesheet" /> a la valeur <see langword="null" />.</exception>
      <exception cref="T:System.Xml.Xsl.XsltException" vsli:raw="The style sheet contains an error.">La feuille de style contient une erreur.</exception>
    </member>
    <member name="M:System.Xml.Xsl.XslCompiledTransform.Load(System.Xml.XPath.IXPathNavigable,System.Xml.Xsl.XsltSettings,System.Xml.XmlResolver)">
      <summary vsli:raw="Compiles the XSLT style sheet contained in the &lt;see cref=&quot;T:System.Xml.XPath.IXPathNavigable&quot; /&gt;. The &lt;see cref=&quot;T:System.Xml.XmlResolver&quot; /&gt; resolves any XSLT &lt;c&gt;import&lt;/c&gt; or &lt;c&gt;include&lt;/c&gt; elements and the XSLT settings determine the permissions for the style sheet.">Compile la feuille de style XSLT figurant dans <see cref="T:System.Xml.XPath.IXPathNavigable" />. <see cref="T:System.Xml.XmlResolver" /> résout tous les éléments XSLT <c>import</c> ou <c>include</c>, et les paramètres XSLT déterminent les autorisations pour la feuille de style.</summary>
      <param name="stylesheet" vsli:raw="An object implementing the &lt;see cref=&quot;T:System.Xml.XPath.IXPathNavigable&quot; /&gt; interface. In the Microsoft .NET Framework, this can be either an &lt;see cref=&quot;T:System.Xml.XmlNode&quot; /&gt; (typically an &lt;see cref=&quot;T:System.Xml.XmlDocument&quot; /&gt;), or an &lt;see cref=&quot;T:System.Xml.XPath.XPathDocument&quot; /&gt; containing the style sheet.">Objet implémentant l'interface <see cref="T:System.Xml.XPath.IXPathNavigable" />. Dans Microsoft .NET Framework, il peut s'agir de <see cref="T:System.Xml.XmlNode" /> (généralement <see cref="T:System.Xml.XmlDocument" />) ou de <see cref="T:System.Xml.XPath.XPathDocument" /> contenant la feuille de style.</param>
      <param name="settings" vsli:raw="The &lt;see cref=&quot;T:System.Xml.Xsl.XsltSettings&quot; /&gt; to apply to the style sheet. If this is &lt;see langword=&quot;null&quot; /&gt;, the &lt;see cref=&quot;P:System.Xml.Xsl.XsltSettings.Default&quot; /&gt; setting is applied.">
        <see cref="T:System.Xml.Xsl.XsltSettings" /> à appliquer à la feuille de style. Si <see langword="null" />, le paramètre <see cref="P:System.Xml.Xsl.XsltSettings.Default" /> est appliqué.</param>
      <param name="stylesheetResolver" vsli:raw="The &lt;see cref=&quot;T:System.Xml.XmlResolver&quot; /&gt; used to resolve any style sheets referenced in XSLT &lt;c&gt;import&lt;/c&gt; and &lt;c&gt;include&lt;/c&gt; elements. If this is &lt;see langword=&quot;null&quot; /&gt;, external resources are not resolved.">
        <see cref="T:System.Xml.XmlResolver" /> utilisé pour résoudre toute feuille de style référencée dans les éléments <c>import</c> et <c>include</c>. Si la valeur est <see langword="null" />, les ressources externes ne sont pas résolues.</param>
      <exception cref="T:System.ArgumentNullException" vsli:raw="The &lt;paramref name=&quot;stylesheet&quot; /&gt; value is &lt;see langword=&quot;null&quot; /&gt;.">
        <paramref name="stylesheet" /> a la valeur <see langword="null" />.</exception>
      <exception cref="T:System.Xml.Xsl.XsltException" vsli:raw="The style sheet contains an error.">La feuille de style contient une erreur.</exception>
    </member>
    <member name="M:System.Xml.Xsl.XslCompiledTransform.Transform(System.String,System.String)">
      <summary vsli:raw="Executes the transform using the input document specified by the URI and outputs the results to a file.">Exécute la transformation à l'aide du document d'entrée spécifié par l'URI et renvoie les résultats vers un fichier.</summary>
      <param name="inputUri" vsli:raw="The URI of the input document.">URI du document d'entrée.</param>
      <param name="resultsFile" vsli:raw="The URI of the output file.">URI du fichier de sortie.</param>
      <exception cref="T:System.ArgumentNullException" vsli:raw="The &lt;paramref name=&quot;inputUri&quot; /&gt; or &lt;paramref name=&quot;resultsFile&quot; /&gt; value is &lt;see langword=&quot;null&quot; /&gt;.">La valeur de <paramref name="inputUri" /> ou de <paramref name="resultsFile" /> est <see langword="null" />.</exception>
      <exception cref="T:System.Xml.Xsl.XsltException" vsli:raw="There was an error executing the XSLT transform.">Une erreur s'est produite lors de l'exécution de la transformation XSLT.</exception>
      <exception cref="T:System.IO.FileNotFoundException" vsli:raw="The input document cannot be found.">Le document d'entrée est introuvable.</exception>
      <exception cref="T:System.IO.DirectoryNotFoundException" vsli:raw="The &lt;paramref name=&quot;inputUri&quot; /&gt; or &lt;paramref name=&quot;resultsFile&quot; /&gt; value includes a filename or directory cannot be found.">La valeur <paramref name="inputUri" /> ou <paramref name="resultsFile" /> contient un nom de fichier ou un répertoire qui est introuvable.</exception>
      <exception cref="T:System.Net.WebException" vsli:raw="The &lt;paramref name=&quot;inputUri&quot; /&gt; or &lt;paramref name=&quot;resultsFile&quot; /&gt; value cannot be resolved.  &#xA;  &#xA; -or-  &#xA;  &#xA; An error occurred while processing the request.">La valeur <paramref name="inputUri" /> ou <paramref name="resultsFile" /> ne peut pas être résolue.  
  
- ou - 
Une erreur s'est produite pendant le traitement de la demande.</exception>
      <exception cref="T:System.UriFormatException" vsli:raw="&lt;paramref name=&quot;inputUri&quot; /&gt; or &lt;paramref name=&quot;resultsFile&quot; /&gt; is not a valid URI.">
        <paramref name="inputUri" /> ou <paramref name="resultsFile" /> n'est pas un URI valide.</exception>
      <exception cref="T:System.Xml.XmlException" vsli:raw="There was a parsing error loading the input document.">Une erreur d'analyse s'est produite lors du chargement du document d'entrée.</exception>
    </member>
    <member name="M:System.Xml.Xsl.XslCompiledTransform.Transform(System.String,System.Xml.XmlWriter)">
      <summary vsli:raw="Executes the transform using the input document specified by the URI and outputs the results to an &lt;see cref=&quot;T:System.Xml.XmlWriter&quot; /&gt;.">Exécute la transformation à l'aide du document d'entrée spécifié par l'URI et renvoie les résultats vers <see cref="T:System.Xml.XmlWriter" />.</summary>
      <param name="inputUri" vsli:raw="The URI of the input document.">URI du document d'entrée.</param>
      <param name="results" vsli:raw="The &lt;see cref=&quot;T:System.Xml.XmlWriter&quot; /&gt; to which you want to output.  &#xA;  &#xA; If the style sheet contains an &lt;c&gt;xsl:output&lt;/c&gt; element, you should create the &lt;see cref=&quot;T:System.Xml.XmlWriter&quot; /&gt; using the &lt;see cref=&quot;T:System.Xml.XmlWriterSettings&quot; /&gt; object returned from the &lt;see cref=&quot;P:System.Xml.Xsl.XslCompiledTransform.OutputSettings&quot; /&gt; property. This ensures that the &lt;see cref=&quot;T:System.Xml.XmlWriter&quot; /&gt; has the correct output settings.">
        <see cref="T:System.Xml.XmlWriter" /> vers lequel vous souhaitez exporter.  
  
Si la feuille de style contient un élément <c>xsl:output</c>, vous devez créer l’objet <see cref="T:System.Xml.XmlWriter" /> à l’aide de l’objet <see cref="T:System.Xml.XmlWriterSettings" /> retourné par la propriété <see cref="P:System.Xml.Xsl.XslCompiledTransform.OutputSettings" />. Cela garantit que <see cref="T:System.Xml.XmlWriter" /> a des paramètres de sortie corrects.</param>
      <exception cref="T:System.ArgumentNullException" vsli:raw="The &lt;paramref name=&quot;inputUri&quot; /&gt; or &lt;paramref name=&quot;results&quot; /&gt; value is &lt;see langword=&quot;null&quot; /&gt;.">La valeur de <paramref name="inputUri" /> ou de <paramref name="results" /> est <see langword="null" />.</exception>
      <exception cref="T:System.Xml.Xsl.XsltException" vsli:raw="There was an error executing the XSLT transform.">Une erreur s'est produite lors de l'exécution de la transformation XSLT.</exception>
      <exception cref="T:System.IO.DirectoryNotFoundException" vsli:raw="The &lt;paramref name=&quot;inputUri&quot; /&gt; value includes a filename or directory cannot be found.">La valeur <paramref name="inputUri" /> contient un nom de fichier ou le répertoire est introuvable.</exception>
      <exception cref="T:System.Net.WebException" vsli:raw="The &lt;paramref name=&quot;inputUri&quot; /&gt; value cannot be resolved.  &#xA;  &#xA; -or-  &#xA;  &#xA; An error occurred while processing the request.">La valeur <paramref name="inputUri" /> ne peut pas être résolue.  
  
- ou - 
Une erreur s’est produite lors du traitement de la demande.</exception>
      <exception cref="T:System.UriFormatException" vsli:raw="&lt;paramref name=&quot;inputUri&quot; /&gt; is not a valid URI.">
        <paramref name="inputUri" /> n'est pas un URI valide.</exception>
      <exception cref="T:System.Xml.XmlException" vsli:raw="There was a parsing error loading the input document.">Une erreur d'analyse s'est produite lors du chargement du document d'entrée.</exception>
    </member>
    <member name="M:System.Xml.Xsl.XslCompiledTransform.Transform(System.String,System.Xml.Xsl.XsltArgumentList,System.IO.Stream)">
      <summary vsli:raw="Executes the transform using the input document specified by the URI and outputs the results to stream. The &lt;see cref=&quot;T:System.Xml.Xsl.XsltArgumentList&quot; /&gt; provides additional run-time arguments.">Exécute la transformation à l'aide du document d'entrée spécifié par l'URI et renvoie les résultats vers un flux. <see cref="T:System.Xml.Xsl.XsltArgumentList" /> fournit des arguments d'exécution supplémentaires.</summary>
      <param name="inputUri" vsli:raw="The URI of the input document.">URI du document d'entrée.</param>
      <param name="arguments" vsli:raw="An &lt;see cref=&quot;T:System.Xml.Xsl.XsltArgumentList&quot; /&gt; containing the namespace-qualified arguments used as input to the transform. This value can be &lt;see langword=&quot;null&quot; /&gt;.">
        <see cref="T:System.Xml.Xsl.XsltArgumentList" /> contenant des arguments qualifiés par un espace de noms utilisés comme données d'entrée pour la transformation. Cette valeur peut être <see langword="null" />.</param>
      <param name="results" vsli:raw="The stream to which you want to output.">Flux dans lequel vous voulez générer le résultat.</param>
      <exception cref="T:System.ArgumentNullException" vsli:raw="The &lt;paramref name=&quot;inputUri&quot; /&gt; or &lt;paramref name=&quot;results&quot; /&gt; value is &lt;see langword=&quot;null&quot; /&gt;.">La valeur de <paramref name="inputUri" /> ou de <paramref name="results" /> est <see langword="null" />.</exception>
      <exception cref="T:System.Xml.Xsl.XsltException" vsli:raw="There was an error executing the XSLT transform.">Une erreur s'est produite lors de l'exécution de la transformation XSLT.</exception>
      <exception cref="T:System.IO.DirectoryNotFoundException" vsli:raw="The &lt;paramref name=&quot;inputUri&quot; /&gt; value includes a filename or directory cannot be found.">La valeur <paramref name="inputUri" /> contient un nom de fichier ou le répertoire est introuvable.</exception>
      <exception cref="T:System.Net.WebException" vsli:raw="The &lt;paramref name=&quot;inputUri&quot; /&gt; value cannot be resolved.  &#xA;  &#xA; -or-  &#xA;  &#xA; An error occurred while processing the request.">La valeur <paramref name="inputUri" /> ne peut pas être résolue.  
  
- ou - 
Une erreur s'est produite pendant le traitement de la demande.</exception>
      <exception cref="T:System.UriFormatException" vsli:raw="&lt;paramref name=&quot;inputUri&quot; /&gt; is not a valid URI.">
        <paramref name="inputUri" /> n'est pas un URI valide.</exception>
      <exception cref="T:System.Xml.XmlException" vsli:raw="There was a parsing error loading the input document.">Une erreur d'analyse s'est produite lors du chargement du document d'entrée.</exception>
    </member>
    <member name="M:System.Xml.Xsl.XslCompiledTransform.Transform(System.String,System.Xml.Xsl.XsltArgumentList,System.IO.TextWriter)">
      <summary vsli:raw="Executes the transform using the input document specified by the URI and outputs the results to a &lt;see cref=&quot;T:System.IO.TextWriter&quot; /&gt;.">Exécute la transformation à l'aide du document d'entrée spécifié par l'URI et renvoie les résultats vers <see cref="T:System.IO.TextWriter" />.</summary>
      <param name="inputUri" vsli:raw="The URI of the input document.">URI du document d'entrée.</param>
      <param name="arguments" vsli:raw="An &lt;see cref=&quot;T:System.Xml.Xsl.XsltArgumentList&quot; /&gt; containing the namespace-qualified arguments used as input to the transform. This value can be &lt;see langword=&quot;null&quot; /&gt;.">
        <see cref="T:System.Xml.Xsl.XsltArgumentList" /> contenant des arguments qualifiés par un espace de noms utilisés comme données d'entrée pour la transformation. Cette valeur peut être <see langword="null" />.</param>
      <param name="results" vsli:raw="The &lt;see cref=&quot;T:System.IO.TextWriter&quot; /&gt; to which you want to output.">
        <see cref="T:System.IO.TextWriter" /> vers lequel vous souhaitez exporter.</param>
      <exception cref="T:System.ArgumentNullException" vsli:raw="The &lt;paramref name=&quot;inputUri&quot; /&gt; or &lt;paramref name=&quot;results&quot; /&gt; value is &lt;see langword=&quot;null&quot; /&gt;.">La valeur de <paramref name="inputUri" /> ou de <paramref name="results" /> est <see langword="null" />.</exception>
      <exception cref="T:System.Xml.Xsl.XsltException" vsli:raw="There was an error executing the XSLT transform.">Une erreur s'est produite lors de l'exécution de la transformation XSLT.</exception>
      <exception cref="T:System.IO.DirectoryNotFoundException" vsli:raw="The &lt;paramref name=&quot;inputUri&quot; /&gt; value includes a filename or directory cannot be found.">La valeur <paramref name="inputUri" /> contient un nom de fichier ou le répertoire est introuvable.</exception>
      <exception cref="T:System.Net.WebException" vsli:raw="The &lt;paramref name=&quot;inputUri&quot; /&gt; value cannot be resolved.  &#xA;  &#xA; -or-  &#xA;  &#xA; An error occurred while processing the request.">La valeur <paramref name="inputUri" /> ne peut pas être résolue.  
  
- ou - 
Une erreur s'est produite pendant le traitement de la demande.</exception>
      <exception cref="T:System.UriFormatException" vsli:raw="&lt;paramref name=&quot;inputUri&quot; /&gt; is not a valid URI.">
        <paramref name="inputUri" /> n'est pas un URI valide.</exception>
      <exception cref="T:System.Xml.XmlException" vsli:raw="There was a parsing error loading the input document.">Une erreur d'analyse s'est produite lors du chargement du document d'entrée.</exception>
    </member>
    <member name="M:System.Xml.Xsl.XslCompiledTransform.Transform(System.String,System.Xml.Xsl.XsltArgumentList,System.Xml.XmlWriter)">
      <summary vsli:raw="Executes the transform using the input document specified by the URI and outputs the results to an &lt;see cref=&quot;T:System.Xml.XmlWriter&quot; /&gt;. The &lt;see cref=&quot;T:System.Xml.Xsl.XsltArgumentList&quot; /&gt; provides additional run-time arguments.">Exécute la transformation à l'aide du document d'entrée spécifié par l'URI et renvoie les résultats vers <see cref="T:System.Xml.XmlWriter" />. <see cref="T:System.Xml.Xsl.XsltArgumentList" /> fournit des arguments d'exécution supplémentaires.</summary>
      <param name="inputUri" vsli:raw="The URI of the input document.">URI du document d'entrée.</param>
      <param name="arguments" vsli:raw="An &lt;see cref=&quot;T:System.Xml.Xsl.XsltArgumentList&quot; /&gt; containing the namespace-qualified arguments used as input to the transform. This value can be &lt;see langword=&quot;null&quot; /&gt;.">
        <see cref="T:System.Xml.Xsl.XsltArgumentList" /> contenant des arguments qualifiés par un espace de noms utilisés comme données d'entrée pour la transformation. Cette valeur peut être <see langword="null" />.</param>
      <param name="results" vsli:raw="The &lt;see cref=&quot;T:System.Xml.XmlWriter&quot; /&gt; to which you want to output.  &#xA;  &#xA; If the style sheet contains an &lt;c&gt;xsl:output&lt;/c&gt; element, you should create the &lt;see cref=&quot;T:System.Xml.XmlWriter&quot; /&gt; using the &lt;see cref=&quot;T:System.Xml.XmlWriterSettings&quot; /&gt; object returned from the &lt;see cref=&quot;P:System.Xml.Xsl.XslCompiledTransform.OutputSettings&quot; /&gt; property. This ensures that the &lt;see cref=&quot;T:System.Xml.XmlWriter&quot; /&gt; has the correct output settings.">
        <see cref="T:System.Xml.XmlWriter" /> vers lequel vous souhaitez exporter.  
  
Si la feuille de style contient un élément <c>xsl:output</c>, vous devez créer l’objet <see cref="T:System.Xml.XmlWriter" /> à l’aide de l’objet <see cref="T:System.Xml.XmlWriterSettings" /> retourné par la propriété <see cref="P:System.Xml.Xsl.XslCompiledTransform.OutputSettings" />. Cela garantit que <see cref="T:System.Xml.XmlWriter" /> a des paramètres de sortie corrects.</param>
      <exception cref="T:System.ArgumentNullException" vsli:raw="The &lt;paramref name=&quot;inputUri&quot; /&gt; or &lt;paramref name=&quot;results&quot; /&gt; value is &lt;see langword=&quot;null&quot; /&gt;.">La valeur de <paramref name="inputUri" /> ou de <paramref name="results" /> est <see langword="null" />.</exception>
      <exception cref="T:System.Xml.Xsl.XsltException" vsli:raw="There was an error executing the XSLT transform.">Une erreur s'est produite lors de l'exécution de la transformation XSLT.</exception>
      <exception cref="T:System.IO.DirectoryNotFoundException" vsli:raw="The &lt;paramref name=&quot;inputtUri&quot; /&gt; value includes a filename or directory cannot be found.">La valeur <paramref name="inputtUri" /> contient un nom de fichier ou le répertoire est introuvable.</exception>
      <exception cref="T:System.Net.WebException" vsli:raw="The &lt;paramref name=&quot;inputUri&quot; /&gt; value cannot be resolved.  &#xA;  &#xA; -or-  &#xA;  &#xA; An error occurred while processing the request.">La valeur <paramref name="inputUri" /> ne peut pas être résolue.  
  
- ou - 
Une erreur s’est produite lors du traitement de la demande.</exception>
      <exception cref="T:System.UriFormatException" vsli:raw="&lt;paramref name=&quot;inputUri&quot; /&gt; is not a valid URI.">
        <paramref name="inputUri" /> n'est pas un URI valide.</exception>
      <exception cref="T:System.Xml.XmlException" vsli:raw="There was a parsing error loading the input document.">Une erreur d'analyse s'est produite lors du chargement du document d'entrée.</exception>
    </member>
    <member name="M:System.Xml.Xsl.XslCompiledTransform.Transform(System.Xml.XmlReader,System.Xml.XmlWriter)">
      <summary vsli:raw="Executes the transform using the input document specified by the &lt;see cref=&quot;T:System.Xml.XmlReader&quot; /&gt; object and outputs the results to an &lt;see cref=&quot;T:System.Xml.XmlWriter&quot; /&gt;.">Exécute la transformation à l'aide du document d'entrée spécifié par l'objet <see cref="T:System.Xml.XmlReader" /> et renvoie les résultats vers <see cref="T:System.Xml.XmlWriter" />.</summary>
      <param name="input" vsli:raw="The &lt;see cref=&quot;T:System.Xml.XmlReader&quot; /&gt; containing the input document.">
        <see cref="T:System.Xml.XmlReader" /> contenant le document d'entrée.</param>
      <param name="results" vsli:raw="The &lt;see cref=&quot;T:System.Xml.XmlWriter&quot; /&gt; to which you want to output.  &#xA;  &#xA; If the style sheet contains an &lt;c&gt;xsl:output&lt;/c&gt; element, you should create the &lt;see cref=&quot;T:System.Xml.XmlWriter&quot; /&gt; using the &lt;see cref=&quot;T:System.Xml.XmlWriterSettings&quot; /&gt; object returned from the &lt;see cref=&quot;P:System.Xml.Xsl.XslCompiledTransform.OutputSettings&quot; /&gt; property. This ensures that the &lt;see cref=&quot;T:System.Xml.XmlWriter&quot; /&gt; has the correct output settings.">
        <see cref="T:System.Xml.XmlWriter" /> vers lequel vous souhaitez exporter.  
  
Si la feuille de style contient un élément <c>xsl:output</c>, vous devez créer l’objet <see cref="T:System.Xml.XmlWriter" /> à l’aide de l’objet <see cref="T:System.Xml.XmlWriterSettings" /> retourné par la propriété <see cref="P:System.Xml.Xsl.XslCompiledTransform.OutputSettings" />. Cela garantit que <see cref="T:System.Xml.XmlWriter" /> a des paramètres de sortie corrects.</param>
      <exception cref="T:System.ArgumentNullException" vsli:raw="The &lt;paramref name=&quot;input&quot; /&gt; or &lt;paramref name=&quot;results&quot; /&gt; value is &lt;see langword=&quot;null&quot; /&gt;.">La valeur de <paramref name="input" /> ou de <paramref name="results" /> est <see langword="null" />.</exception>
      <exception cref="T:System.Xml.Xsl.XsltException" vsli:raw="There was an error executing the XSLT transform.">Une erreur s'est produite lors de l'exécution de la transformation XSLT.</exception>
    </member>
    <member name="M:System.Xml.Xsl.XslCompiledTransform.Transform(System.Xml.XmlReader,System.Xml.Xsl.XsltArgumentList,System.IO.Stream)">
      <summary vsli:raw="Executes the transform using the input document specified by the &lt;see cref=&quot;T:System.Xml.XmlReader&quot; /&gt; object and outputs the results to a stream. The &lt;see cref=&quot;T:System.Xml.Xsl.XsltArgumentList&quot; /&gt; provides additional run-time arguments.">Exécute la transformation à l'aide du document d'entrée spécifié par l'objet <see cref="T:System.Xml.XmlReader" /> et renvoie les résultats vers un flux. <see cref="T:System.Xml.Xsl.XsltArgumentList" /> fournit des arguments d'exécution supplémentaires.</summary>
      <param name="input" vsli:raw="An &lt;see cref=&quot;T:System.Xml.XmlReader&quot; /&gt; containing the input document.">
        <see cref="T:System.Xml.XmlReader" /> contenant le document d'entrée.</param>
      <param name="arguments" vsli:raw="An &lt;see cref=&quot;T:System.Xml.Xsl.XsltArgumentList&quot; /&gt; containing the namespace-qualified arguments used as input to the transform. This value can be &lt;see langword=&quot;null&quot; /&gt;.">
        <see cref="T:System.Xml.Xsl.XsltArgumentList" /> contenant des arguments qualifiés par un espace de noms utilisés comme données d'entrée pour la transformation. Cette valeur peut être <see langword="null" />.</param>
      <param name="results" vsli:raw="The stream to which you want to output.">Flux dans lequel vous voulez générer le résultat.</param>
      <exception cref="T:System.ArgumentNullException" vsli:raw="The &lt;paramref name=&quot;input&quot; /&gt; or &lt;paramref name=&quot;results&quot; /&gt; value is &lt;see langword=&quot;null&quot; /&gt;.">La valeur de <paramref name="input" /> ou de <paramref name="results" /> est <see langword="null" />.</exception>
      <exception cref="T:System.Xml.Xsl.XsltException" vsli:raw="There was an error executing the XSLT transform.">Une erreur s'est produite lors de l'exécution de la transformation XSLT.</exception>
    </member>
    <member name="M:System.Xml.Xsl.XslCompiledTransform.Transform(System.Xml.XmlReader,System.Xml.Xsl.XsltArgumentList,System.IO.TextWriter)">
      <summary vsli:raw="Executes the transform using the input document specified by the &lt;see cref=&quot;T:System.Xml.XmlReader&quot; /&gt; object and outputs the results to a &lt;see cref=&quot;T:System.IO.TextWriter&quot; /&gt;. The &lt;see cref=&quot;T:System.Xml.Xsl.XsltArgumentList&quot; /&gt; provides additional run-time arguments.">Exécute la transformation à l'aide du document d'entrée spécifié par l'objet <see cref="T:System.Xml.XmlReader" /> et renvoie les résultats vers <see cref="T:System.IO.TextWriter" />. <see cref="T:System.Xml.Xsl.XsltArgumentList" /> fournit des arguments d'exécution supplémentaires.</summary>
      <param name="input" vsli:raw="An &lt;see cref=&quot;T:System.Xml.XmlReader&quot; /&gt; containing the input document.">
        <see cref="T:System.Xml.XmlReader" /> contenant le document d'entrée.</param>
      <param name="arguments" vsli:raw="An &lt;see cref=&quot;T:System.Xml.Xsl.XsltArgumentList&quot; /&gt; containing the namespace-qualified arguments used as input to the transform. This value can be &lt;see langword=&quot;null&quot; /&gt;.">
        <see cref="T:System.Xml.Xsl.XsltArgumentList" /> contenant des arguments qualifiés par un espace de noms utilisés comme données d'entrée pour la transformation. Cette valeur peut être <see langword="null" />.</param>
      <param name="results" vsli:raw="The &lt;see cref=&quot;T:System.IO.TextWriter&quot; /&gt; to which you want to output.">
        <see cref="T:System.IO.TextWriter" /> vers lequel vous souhaitez exporter.</param>
      <exception cref="T:System.ArgumentNullException" vsli:raw="The &lt;paramref name=&quot;input&quot; /&gt; or &lt;paramref name=&quot;results&quot; /&gt; value is &lt;see langword=&quot;null&quot; /&gt;.">La valeur de <paramref name="input" /> ou de <paramref name="results" /> est <see langword="null" />.</exception>
      <exception cref="T:System.Xml.Xsl.XsltException" vsli:raw="There was an error executing the XSLT transform.">Une erreur s'est produite lors de l'exécution de la transformation XSLT.</exception>
    </member>
    <member name="M:System.Xml.Xsl.XslCompiledTransform.Transform(System.Xml.XmlReader,System.Xml.Xsl.XsltArgumentList,System.Xml.XmlWriter)">
      <summary vsli:raw="Executes the transform using the input document specified by the &lt;see cref=&quot;T:System.Xml.XmlReader&quot; /&gt; object and outputs the results to an &lt;see cref=&quot;T:System.Xml.XmlWriter&quot; /&gt;. The &lt;see cref=&quot;T:System.Xml.Xsl.XsltArgumentList&quot; /&gt; provides additional run-time arguments.">Exécute la transformation à l'aide du document d'entrée spécifié par l'objet <see cref="T:System.Xml.XmlReader" /> et renvoie les résultats vers <see cref="T:System.Xml.XmlWriter" />. <see cref="T:System.Xml.Xsl.XsltArgumentList" /> fournit des arguments d'exécution supplémentaires.</summary>
      <param name="input" vsli:raw="An &lt;see cref=&quot;T:System.Xml.XmlReader&quot; /&gt; containing the input document.">
        <see cref="T:System.Xml.XmlReader" /> contenant le document d'entrée.</param>
      <param name="arguments" vsli:raw="An &lt;see cref=&quot;T:System.Xml.Xsl.XsltArgumentList&quot; /&gt; containing the namespace-qualified arguments used as input to the transform. This value can be &lt;see langword=&quot;null&quot; /&gt;.">
        <see cref="T:System.Xml.Xsl.XsltArgumentList" /> contenant des arguments qualifiés par un espace de noms utilisés comme données d'entrée pour la transformation. Cette valeur peut être <see langword="null" />.</param>
      <param name="results" vsli:raw="The &lt;see cref=&quot;T:System.Xml.XmlWriter&quot; /&gt; to which you want to output.  &#xA;  &#xA; If the style sheet contains an &lt;c&gt;xsl:output&lt;/c&gt; element, you should create the &lt;see cref=&quot;T:System.Xml.XmlWriter&quot; /&gt; using the &lt;see cref=&quot;T:System.Xml.XmlWriterSettings&quot; /&gt; object returned from the &lt;see cref=&quot;P:System.Xml.Xsl.XslCompiledTransform.OutputSettings&quot; /&gt; property. This ensures that the &lt;see cref=&quot;T:System.Xml.XmlWriter&quot; /&gt; has the correct output settings.">
        <see cref="T:System.Xml.XmlWriter" /> vers lequel vous souhaitez exporter.  
  
Si la feuille de style contient un élément <c>xsl:output</c>, vous devez créer l’objet <see cref="T:System.Xml.XmlWriter" /> à l’aide de l’objet <see cref="T:System.Xml.XmlWriterSettings" /> retourné par la propriété <see cref="P:System.Xml.Xsl.XslCompiledTransform.OutputSettings" />. Cela garantit que <see cref="T:System.Xml.XmlWriter" /> a des paramètres de sortie corrects.</param>
      <exception cref="T:System.ArgumentNullException" vsli:raw="The &lt;paramref name=&quot;input&quot; /&gt; or &lt;paramref name=&quot;results&quot; /&gt; value is &lt;see langword=&quot;null&quot; /&gt;.">La valeur de <paramref name="input" /> ou de <paramref name="results" /> est <see langword="null" />.</exception>
      <exception cref="T:System.Xml.Xsl.XsltException" vsli:raw="There was an error executing the XSLT transform.">Une erreur s'est produite lors de l'exécution de la transformation XSLT.</exception>
    </member>
    <member name="M:System.Xml.Xsl.XslCompiledTransform.Transform(System.Xml.XmlReader,System.Xml.Xsl.XsltArgumentList,System.Xml.XmlWriter,System.Xml.XmlResolver)">
      <summary vsli:raw="Executes the transform using the input document specified by the &lt;see cref=&quot;T:System.Xml.XmlReader&quot; /&gt; object and outputs the results to an &lt;see cref=&quot;T:System.Xml.XmlWriter&quot; /&gt;. The &lt;see cref=&quot;T:System.Xml.Xsl.XsltArgumentList&quot; /&gt; provides additional run-time arguments and the XmlResolver resolves the XSLT &lt;c&gt;document()&lt;/c&gt; function.">Exécute la transformation à l'aide du document d'entrée spécifié par l'objet <see cref="T:System.Xml.XmlReader" /> et renvoie les résultats vers <see cref="T:System.Xml.XmlWriter" />. <see cref="T:System.Xml.Xsl.XsltArgumentList" /> fournit des arguments de runtime supplémentaires et XmlResolver résout la fonction XSLT <c>document()</c>.</summary>
      <param name="input" vsli:raw="An &lt;see cref=&quot;T:System.Xml.XmlReader&quot; /&gt; containing the input document.">
        <see cref="T:System.Xml.XmlReader" /> contenant le document d'entrée.</param>
      <param name="arguments" vsli:raw="An &lt;see cref=&quot;T:System.Xml.Xsl.XsltArgumentList&quot; /&gt; containing the namespace-qualified arguments used as input to the transform. This value can be &lt;see langword=&quot;null&quot; /&gt;.">
        <see cref="T:System.Xml.Xsl.XsltArgumentList" /> contenant des arguments qualifiés par un espace de noms utilisés comme données d'entrée pour la transformation. Cette valeur peut être <see langword="null" />.</param>
      <param name="results" vsli:raw="The &lt;see cref=&quot;T:System.Xml.XmlWriter&quot; /&gt; to which you want to output.  &#xA;  &#xA; If the style sheet contains an &lt;c&gt;xsl:output&lt;/c&gt; element, you should create the &lt;see cref=&quot;T:System.Xml.XmlWriter&quot; /&gt; using the &lt;see cref=&quot;T:System.Xml.XmlWriterSettings&quot; /&gt; object returned from the &lt;see cref=&quot;P:System.Xml.Xsl.XslCompiledTransform.OutputSettings&quot; /&gt; property. This ensures that the &lt;see cref=&quot;T:System.Xml.XmlWriter&quot; /&gt; has the correct output settings.">
        <see cref="T:System.Xml.XmlWriter" /> vers lequel vous souhaitez exporter.  
  
Si la feuille de style contient un élément <c>xsl:output</c>, vous devez créer l’objet <see cref="T:System.Xml.XmlWriter" /> à l’aide de l’objet <see cref="T:System.Xml.XmlWriterSettings" /> retourné par la propriété <see cref="P:System.Xml.Xsl.XslCompiledTransform.OutputSettings" />. Cela garantit que <see cref="T:System.Xml.XmlWriter" /> a des paramètres de sortie corrects.</param>
      <param name="documentResolver" vsli:raw="The &lt;see cref=&quot;T:System.Xml.XmlResolver&quot; /&gt; used to resolve the XSLT &lt;c&gt;document()&lt;/c&gt; function. If this is &lt;see langword=&quot;null&quot; /&gt;, the &lt;c&gt;document()&lt;/c&gt; function is not resolved.">
        <see cref="T:System.Xml.XmlResolver" /> utilisé pour résoudre la fonction <c>document()</c> XSLT. S’il s’agit de <see langword="null" />, la fonction <c>document()</c> n’est pas résolue.</param>
      <exception cref="T:System.ArgumentNullException" vsli:raw="The &lt;paramref name=&quot;input&quot; /&gt; or &lt;paramref name=&quot;results&quot; /&gt; value is &lt;see langword=&quot;null&quot; /&gt;.">La valeur de <paramref name="input" /> ou de <paramref name="results" /> est <see langword="null" />.</exception>
      <exception cref="T:System.Xml.Xsl.XsltException" vsli:raw="There was an error executing the XSLT transform.">Une erreur s'est produite lors de l'exécution de la transformation XSLT.</exception>
    </member>
    <member name="M:System.Xml.Xsl.XslCompiledTransform.Transform(System.Xml.XPath.IXPathNavigable,System.Xml.XmlWriter)">
      <summary vsli:raw="Executes the transform using the input document specified by the &lt;see cref=&quot;T:System.Xml.XPath.IXPathNavigable&quot; /&gt; object and outputs the results to an &lt;see cref=&quot;T:System.Xml.XmlWriter&quot; /&gt;.">Exécute la transformation à l'aide du document d'entrée spécifié par l'objet <see cref="T:System.Xml.XPath.IXPathNavigable" /> et renvoie les résultats vers <see cref="T:System.Xml.XmlWriter" />.</summary>
      <param name="input" vsli:raw="An object implementing the &lt;see cref=&quot;T:System.Xml.XPath.IXPathNavigable&quot; /&gt; interface. In the Microsoft .NET Framework, this can be either an &lt;see cref=&quot;T:System.Xml.XmlNode&quot; /&gt; (typically an &lt;see cref=&quot;T:System.Xml.XmlDocument&quot; /&gt;), or an &lt;see cref=&quot;T:System.Xml.XPath.XPathDocument&quot; /&gt; containing the data to be transformed.">Objet implémentant l'interface <see cref="T:System.Xml.XPath.IXPathNavigable" />. Dans Microsoft .NET Framework, il peut s'agir de <see cref="T:System.Xml.XmlNode" /> (généralement <see cref="T:System.Xml.XmlDocument" />) ou de <see cref="T:System.Xml.XPath.XPathDocument" /> contenant les données à transformer.</param>
      <param name="results" vsli:raw="The &lt;see cref=&quot;T:System.Xml.XmlWriter&quot; /&gt; to which you want to output.  &#xA;  &#xA; If the style sheet contains an &lt;c&gt;xsl:output&lt;/c&gt; element, you should create the &lt;see cref=&quot;T:System.Xml.XmlWriter&quot; /&gt; using the &lt;see cref=&quot;T:System.Xml.XmlWriterSettings&quot; /&gt; object returned from the &lt;see cref=&quot;P:System.Xml.Xsl.XslCompiledTransform.OutputSettings&quot; /&gt; property. This ensures that the &lt;see cref=&quot;T:System.Xml.XmlWriter&quot; /&gt; has the correct output settings.">
        <see cref="T:System.Xml.XmlWriter" /> vers lequel vous souhaitez exporter.  
  
Si la feuille de style contient un élément <c>xsl:output</c>, vous devez créer l’objet <see cref="T:System.Xml.XmlWriter" /> à l’aide de l’objet <see cref="T:System.Xml.XmlWriterSettings" /> retourné par la propriété <see cref="P:System.Xml.Xsl.XslCompiledTransform.OutputSettings" />. Cela garantit que <see cref="T:System.Xml.XmlWriter" /> a des paramètres de sortie corrects.</param>
      <exception cref="T:System.ArgumentNullException" vsli:raw="The &lt;paramref name=&quot;input&quot; /&gt; or &lt;paramref name=&quot;results&quot; /&gt; value is &lt;see langword=&quot;null&quot; /&gt;.">La valeur de <paramref name="input" /> ou de <paramref name="results" /> est <see langword="null" />.</exception>
      <exception cref="T:System.Xml.Xsl.XsltException" vsli:raw="There was an error executing the XSLT transform.">Une erreur s'est produite lors de l'exécution de la transformation XSLT.</exception>
    </member>
    <member name="M:System.Xml.Xsl.XslCompiledTransform.Transform(System.Xml.XPath.IXPathNavigable,System.Xml.Xsl.XsltArgumentList,System.IO.Stream)">
      <summary vsli:raw="Executes the transform using the input document specified by the &lt;see cref=&quot;T:System.Xml.XPath.IXPathNavigable&quot; /&gt; object and outputs the results to a stream. The &lt;see cref=&quot;T:System.Xml.Xsl.XsltArgumentList&quot; /&gt; provides additional runtime arguments.">Exécute la transformation à l'aide du document d'entrée spécifié par l'objet <see cref="T:System.Xml.XPath.IXPathNavigable" /> et renvoie les résultats vers un flux. <see cref="T:System.Xml.Xsl.XsltArgumentList" /> fournit des arguments d'exécution supplémentaires.</summary>
      <param name="input" vsli:raw="An object implementing the &lt;see cref=&quot;T:System.Xml.XPath.IXPathNavigable&quot; /&gt; interface. In the Microsoft .NET Framework, this can be either an &lt;see cref=&quot;T:System.Xml.XmlNode&quot; /&gt; (typically an &lt;see cref=&quot;T:System.Xml.XmlDocument&quot; /&gt;), or an &lt;see cref=&quot;T:System.Xml.XPath.XPathDocument&quot; /&gt; containing the data to be transformed.">Objet implémentant l'interface <see cref="T:System.Xml.XPath.IXPathNavigable" />. Dans Microsoft .NET Framework, il peut s'agir de <see cref="T:System.Xml.XmlNode" /> (généralement <see cref="T:System.Xml.XmlDocument" />) ou de <see cref="T:System.Xml.XPath.XPathDocument" /> contenant les données à transformer.</param>
      <param name="arguments" vsli:raw="An &lt;see cref=&quot;T:System.Xml.Xsl.XsltArgumentList&quot; /&gt; containing the namespace-qualified arguments used as input to the transform. This value can be &lt;see langword=&quot;null&quot; /&gt;.">
        <see cref="T:System.Xml.Xsl.XsltArgumentList" /> contenant des arguments qualifiés par un espace de noms utilisés comme données d'entrée pour la transformation. Cette valeur peut être <see langword="null" />.</param>
      <param name="results" vsli:raw="The stream to which you want to output.">Flux dans lequel vous voulez générer le résultat.</param>
      <exception cref="T:System.ArgumentNullException" vsli:raw="The &lt;paramref name=&quot;input&quot; /&gt; or &lt;paramref name=&quot;results&quot; /&gt; value is &lt;see langword=&quot;null&quot; /&gt;.">La valeur de <paramref name="input" /> ou de <paramref name="results" /> est <see langword="null" />.</exception>
      <exception cref="T:System.Xml.Xsl.XsltException" vsli:raw="There was an error executing the XSLT transform.">Une erreur s'est produite lors de l'exécution de la transformation XSLT.</exception>
    </member>
    <member name="M:System.Xml.Xsl.XslCompiledTransform.Transform(System.Xml.XPath.IXPathNavigable,System.Xml.Xsl.XsltArgumentList,System.IO.TextWriter)">
      <summary vsli:raw="Executes the transform using the input document specified by the &lt;see cref=&quot;T:System.Xml.XPath.IXPathNavigable&quot; /&gt; object and outputs the results to an &lt;see cref=&quot;T:System.IO.TextWriter&quot; /&gt;. The &lt;see cref=&quot;T:System.Xml.Xsl.XsltArgumentList&quot; /&gt; provides additional run-time arguments.">Exécute la transformation à l'aide du document d'entrée spécifié par l'objet <see cref="T:System.Xml.XPath.IXPathNavigable" /> et renvoie les résultats vers <see cref="T:System.IO.TextWriter" />. <see cref="T:System.Xml.Xsl.XsltArgumentList" /> fournit des arguments d'exécution supplémentaires.</summary>
      <param name="input" vsli:raw="An object implementing the &lt;see cref=&quot;T:System.Xml.XPath.IXPathNavigable&quot; /&gt; interface. In the Microsoft .NET Framework, this can be either an &lt;see cref=&quot;T:System.Xml.XmlNode&quot; /&gt; (typically an &lt;see cref=&quot;T:System.Xml.XmlDocument&quot; /&gt;), or an &lt;see cref=&quot;T:System.Xml.XPath.XPathDocument&quot; /&gt; containing the data to be transformed.">Objet implémentant l'interface <see cref="T:System.Xml.XPath.IXPathNavigable" />. Dans Microsoft .NET Framework, il peut s'agir de <see cref="T:System.Xml.XmlNode" /> (généralement <see cref="T:System.Xml.XmlDocument" />) ou de <see cref="T:System.Xml.XPath.XPathDocument" /> contenant les données à transformer.</param>
      <param name="arguments" vsli:raw="An &lt;see cref=&quot;T:System.Xml.Xsl.XsltArgumentList&quot; /&gt; containing the namespace-qualified arguments used as input to the transform. This value can be &lt;see langword=&quot;null&quot; /&gt;.">
        <see cref="T:System.Xml.Xsl.XsltArgumentList" /> contenant des arguments qualifiés par un espace de noms utilisés comme données d'entrée pour la transformation. Cette valeur peut être <see langword="null" />.</param>
      <param name="results" vsli:raw="The &lt;see cref=&quot;T:System.IO.TextWriter&quot; /&gt; to which you want to output.">
        <see cref="T:System.IO.TextWriter" /> vers lequel vous souhaitez exporter.</param>
      <exception cref="T:System.ArgumentNullException" vsli:raw="The &lt;paramref name=&quot;input&quot; /&gt; or &lt;paramref name=&quot;results&quot; /&gt; value is &lt;see langword=&quot;null&quot; /&gt;.">La valeur de <paramref name="input" /> ou de <paramref name="results" /> est <see langword="null" />.</exception>
      <exception cref="T:System.Xml.Xsl.XsltException" vsli:raw="There was an error executing the XSLT transform.">Une erreur s'est produite lors de l'exécution de la transformation XSLT.</exception>
    </member>
    <member name="M:System.Xml.Xsl.XslCompiledTransform.Transform(System.Xml.XPath.IXPathNavigable,System.Xml.Xsl.XsltArgumentList,System.Xml.XmlWriter)">
      <summary vsli:raw="Executes the transform using the input document specified by the &lt;see cref=&quot;T:System.Xml.XPath.IXPathNavigable&quot; /&gt; object and outputs the results to an &lt;see cref=&quot;T:System.Xml.XmlWriter&quot; /&gt;. The &lt;see cref=&quot;T:System.Xml.Xsl.XsltArgumentList&quot; /&gt; provides additional run-time arguments.">Exécute la transformation à l'aide du document d'entrée spécifié par l'objet <see cref="T:System.Xml.XPath.IXPathNavigable" /> et renvoie les résultats vers <see cref="T:System.Xml.XmlWriter" />. <see cref="T:System.Xml.Xsl.XsltArgumentList" /> fournit des arguments d'exécution supplémentaires.</summary>
      <param name="input" vsli:raw="An object implementing the &lt;see cref=&quot;T:System.Xml.XPath.IXPathNavigable&quot; /&gt; interface. In the Microsoft .NET Framework, this can be either an &lt;see cref=&quot;T:System.Xml.XmlNode&quot; /&gt; (typically an &lt;see cref=&quot;T:System.Xml.XmlDocument&quot; /&gt;), or an &lt;see cref=&quot;T:System.Xml.XPath.XPathDocument&quot; /&gt; containing the data to be transformed.">Objet implémentant l'interface <see cref="T:System.Xml.XPath.IXPathNavigable" />. Dans Microsoft .NET Framework, il peut s'agir de <see cref="T:System.Xml.XmlNode" /> (généralement <see cref="T:System.Xml.XmlDocument" />) ou de <see cref="T:System.Xml.XPath.XPathDocument" /> contenant les données à transformer.</param>
      <param name="arguments" vsli:raw="An &lt;see cref=&quot;T:System.Xml.Xsl.XsltArgumentList&quot; /&gt; containing the namespace-qualified arguments used as input to the transform. This value can be &lt;see langword=&quot;null&quot; /&gt;.">
        <see cref="T:System.Xml.Xsl.XsltArgumentList" /> contenant des arguments qualifiés par un espace de noms utilisés comme données d'entrée pour la transformation. Cette valeur peut être <see langword="null" />.</param>
      <param name="results" vsli:raw="The &lt;see cref=&quot;T:System.Xml.XmlWriter&quot; /&gt; to which you want to output.  &#xA;  &#xA; If the style sheet contains an &lt;c&gt;xsl:output&lt;/c&gt; element, you should create the &lt;see cref=&quot;T:System.Xml.XmlWriter&quot; /&gt; using the &lt;see cref=&quot;T:System.Xml.XmlWriterSettings&quot; /&gt; object returned from the &lt;see cref=&quot;P:System.Xml.Xsl.XslCompiledTransform.OutputSettings&quot; /&gt; property. This ensures that the &lt;see cref=&quot;T:System.Xml.XmlWriter&quot; /&gt; has the correct output settings.">
        <see cref="T:System.Xml.XmlWriter" /> vers lequel vous souhaitez exporter.  
  
Si la feuille de style contient un élément <c>xsl:output</c>, vous devez créer l’objet <see cref="T:System.Xml.XmlWriter" /> à l’aide de l’objet <see cref="T:System.Xml.XmlWriterSettings" /> retourné par la propriété <see cref="P:System.Xml.Xsl.XslCompiledTransform.OutputSettings" />. Cela garantit que <see cref="T:System.Xml.XmlWriter" /> a des paramètres de sortie corrects.</param>
      <exception cref="T:System.ArgumentNullException" vsli:raw="The &lt;paramref name=&quot;input&quot; /&gt; or &lt;paramref name=&quot;results&quot; /&gt; value is &lt;see langword=&quot;null&quot; /&gt;.">La valeur de <paramref name="input" /> ou de <paramref name="results" /> est <see langword="null" />.</exception>
      <exception cref="T:System.Xml.Xsl.XsltException" vsli:raw="There was an error executing the XSLT transform.">Une erreur s'est produite lors de l'exécution de la transformation XSLT.</exception>
    </member>
    <member name="M:System.Xml.Xsl.XslCompiledTransform.Transform(System.Xml.XPath.IXPathNavigable,System.Xml.Xsl.XsltArgumentList,System.Xml.XmlWriter,System.Xml.XmlResolver)">
      <summary vsli:raw="Executes the transform by using the input document that is specified by the &lt;see cref=&quot;T:System.Xml.XPath.IXPathNavigable&quot; /&gt; object and outputs the results to an &lt;see cref=&quot;T:System.Xml.XmlWriter&quot; /&gt;. The &lt;see cref=&quot;T:System.Xml.Xsl.XsltArgumentList&quot; /&gt; provides additional run-time arguments and the &lt;see cref=&quot;T:System.Xml.XmlResolver&quot; /&gt; resolves the XSLT &lt;see langword=&quot;document()&quot; /&gt; function.">Exécute la transformation à l’aide du document d’entrée spécifié par l’objet <see cref="T:System.Xml.XPath.IXPathNavigable" /> et renvoie les résultats vers un <see cref="T:System.Xml.XmlWriter" />. La <see cref="T:System.Xml.Xsl.XsltArgumentList" /> fournit des arguments d’exécution supplémentaires et <see cref="T:System.Xml.XmlResolver" /> résout la fonction XSLT <see langword="document()" />.</summary>
      <param name="input" vsli:raw="The document to transform that is specified by the &lt;see cref=&quot;T:System.Xml.XPath.IXPathNavigable&quot; /&gt; object.">Le document à transformer spécifié par l’objet <see cref="T:System.Xml.XPath.IXPathNavigable" />.</param>
      <param name="arguments" vsli:raw="Argument list as &lt;see cref=&quot;T:System.Xml.Xsl.XsltArgumentList&quot; /&gt;.">Liste d’arguments comme <see cref="T:System.Xml.Xsl.XsltArgumentList" />.</param>
      <param name="results" vsli:raw="The &lt;see cref=&quot;T:System.Xml.XmlWriter&quot; /&gt; to which you want to output.  &#xA;  &#xA; If the style sheet contains an &lt;see langword=&quot;xsl:output&quot; /&gt; element, you should create the &lt;see cref=&quot;T:System.Xml.XmlWriter&quot; /&gt; by using the &lt;see cref=&quot;T:System.Xml.XmlWriterSettings&quot; /&gt; object that is returned from the &lt;see cref=&quot;P:System.Xml.Xsl.XslCompiledTransform.OutputSettings&quot; /&gt; property. This ensures that the &lt;see cref=&quot;T:System.Xml.XmlWriter&quot; /&gt; has the correct output settings.">
        <see cref="T:System.Xml.XmlWriter" /> vers lequel vous souhaitez exporter.  
  
Si la feuille de style contient un élément <see langword="xsl:output" />, vous devez créer l’objet <see cref="T:System.Xml.XmlWriter" /> à l’aide de l’objet <see cref="T:System.Xml.XmlWriterSettings" /> retourné par la propriété <see cref="P:System.Xml.Xsl.XslCompiledTransform.OutputSettings" />. Cela garantit que <see cref="T:System.Xml.XmlWriter" /> a des paramètres de sortie corrects.</param>
      <param name="documentResolver" vsli:raw="The &lt;see cref=&quot;T:System.Xml.XmlResolver&quot; /&gt; used to resolve the XSLT &lt;see langword=&quot;document()&quot; /&gt; function. If this is &lt;see langword=&quot;null&quot; /&gt;, the &lt;see langword=&quot;document()&quot; /&gt; function is not resolved.">Le <see cref="T:System.Xml.XmlResolver" /> utilisé pour résoudre la fonction <see langword="document()" /> XSLT. S’il a la valeur <see langword="null" />, la fonction <see langword="document()" /> n’est pas résolue.</param>
    </member>
    <member name="P:System.Xml.Xsl.XslCompiledTransform.OutputSettings">
      <summary vsli:raw="Gets an &lt;see cref=&quot;T:System.Xml.XmlWriterSettings&quot; /&gt; object that contains the output information derived from the &lt;c&gt;xsl:output&lt;/c&gt; element of the style sheet.">Obtient un objet <see cref="T:System.Xml.XmlWriterSettings" /> qui contient les informations de sortie dérivées de l’élément <c>xsl:output</c> de la feuille de style.</summary>
      <returns vsli:raw="A read-only &lt;see cref=&quot;T:System.Xml.XmlWriterSettings&quot; /&gt; object that contains the output information derived from the &lt;c&gt;xsl:output&lt;/c&gt; element of the style sheet. This value can be &lt;see langword=&quot;null&quot; /&gt;.">Objet en lecture seule <see cref="T:System.Xml.XmlWriterSettings" /> qui contient les informations de sortie dérivées de l’élément <c>xsl : output</c> de la feuille de style. Cette valeur peut être <see langword="null" />.</returns>
    </member>
    <member name="T:System.Xml.Xsl.XsltArgumentList">
      <summary vsli:raw="Contains a variable number of arguments which are either XSLT parameters or extension objects.">Contient un nombre variable d'arguments qui sont soit des paramètres XSLT, soit des objets d'extension.</summary>
    </member>
    <member name="E:System.Xml.Xsl.XsltArgumentList.XsltMessageEncountered">
      <summary vsli:raw="Occurs when a message is specified in the style sheet by the &lt;c&gt;xsl:message&lt;/c&gt; element.">Se produit lorsqu’un message est spécifié dans la feuille de style par l’élément <c>xsl:message</c>.</summary>
    </member>
    <member name="M:System.Xml.Xsl.XsltArgumentList.#ctor">
      <summary vsli:raw="Implements a new instance of the &lt;see cref=&quot;T:System.Xml.Xsl.XsltArgumentList&quot; /&gt;.">Implémente une nouvelle instance de <see cref="T:System.Xml.Xsl.XsltArgumentList" />.</summary>
    </member>
    <member name="M:System.Xml.Xsl.XsltArgumentList.AddExtensionObject(System.String,System.Object)">
      <summary vsli:raw="Adds a new object to the &lt;see cref=&quot;T:System.Xml.Xsl.XsltArgumentList&quot; /&gt; and associates it with the namespace URI.">Ajoute un nouvel objet à <see cref="T:System.Xml.Xsl.XsltArgumentList" /> et l'associe à l'URI d'espace de noms.</summary>
      <param name="namespaceUri" vsli:raw="The namespace URI to associate with the object. To use the default namespace, specify an empty string.">URI d'espace de noms à associer à l'objet. Pour utiliser l'espace de noms par défaut, spécifiez une chaîne vide.</param>
      <param name="extension" vsli:raw="The object to add to the list.">Objet à ajouter à la liste.</param>
      <exception cref="T:System.ArgumentException" vsli:raw="The &lt;paramref name=&quot;namespaceUri&quot; /&gt; is either &lt;see langword=&quot;null&quot; /&gt; or http://www.w3.org/1999/XSL/Transform  &#xA;  &#xA; The &lt;paramref name=&quot;namespaceUri&quot; /&gt; already has an extension object associated with it.">
        <paramref name="namespaceUri" /> est <see langword="null" /> ou http://www.w3.org/1999/XSL/Transform 
<paramref name="namespaceUri" /> possède déjà un objet d'extension associé.</exception>
      <exception cref="T:System.Security.SecurityException" vsli:raw="The caller does not have sufficient permissions to call this method.">L'appelant n'a pas les autorisations suffisantes pour appeler cette méthode.</exception>
    </member>
    <member name="M:System.Xml.Xsl.XsltArgumentList.AddParam(System.String,System.String,System.Object)">
      <summary vsli:raw="Adds a parameter to the &lt;see cref=&quot;T:System.Xml.Xsl.XsltArgumentList&quot; /&gt; and associates it with the namespace qualified name.">Ajoute un paramètre à <see cref="T:System.Xml.Xsl.XsltArgumentList" /> et l'associe au nom qualifié d'espace de noms.</summary>
      <param name="name" vsli:raw="The name to associate with the parameter.">Nom à associer au paramètre.</param>
      <param name="namespaceUri" vsli:raw="The namespace URI to associate with the parameter. To use the default namespace, specify an empty string.">URI d'espace de noms à associer au paramètre. Pour utiliser l'espace de noms par défaut, spécifiez une chaîne vide.</param>
      <param name="parameter" vsli:raw="The parameter value or object to add to the list.">Valeur de paramètre ou objet à ajouter à la liste.</param>
      <exception cref="T:System.ArgumentException" vsli:raw="The &lt;paramref name=&quot;namespaceUri&quot; /&gt; is either &lt;see langword=&quot;null&quot; /&gt; or http://www.w3.org/1999/XSL/Transform.  &#xA;  &#xA; The &lt;paramref name=&quot;name&quot; /&gt; is not a valid name according to the W3C XML specification.  &#xA;  &#xA; The &lt;paramref name=&quot;namespaceUri&quot; /&gt; already has a parameter associated with it.">
        <paramref name="namespaceUri" /> est <see langword="null" /> ou http://www.w3.org/1999/XSL/Transform.  
  
<paramref name="name" /> n'est pas un nom valide conformément à la spécification du W3C relative au XML.  
  
<paramref name="namespaceUri" /> possède déjà un paramètre qui lui est associé.</exception>
    </member>
    <member name="M:System.Xml.Xsl.XsltArgumentList.Clear">
      <summary vsli:raw="Removes all parameters and extension objects from the &lt;see cref=&quot;T:System.Xml.Xsl.XsltArgumentList&quot; /&gt;.">Supprime tous les paramètres et tous les objets d'extension de <see cref="T:System.Xml.Xsl.XsltArgumentList" />.</summary>
    </member>
    <member name="M:System.Xml.Xsl.XsltArgumentList.GetExtensionObject(System.String)">
      <summary vsli:raw="Gets the object associated with the given namespace.">Obtient l'objet associé à l'espace de noms spécifié.</summary>
      <param name="namespaceUri" vsli:raw="The namespace URI of the object.">URI d'espace de noms de l'objet.</param>
      <returns vsli:raw="The namespace URI object or &lt;see langword=&quot;null&quot; /&gt; if one was not found.">Objet d'URI d'espace de noms ou <see langword="null" />, s'il n'en existe pas.</returns>
    </member>
    <member name="M:System.Xml.Xsl.XsltArgumentList.GetParam(System.String,System.String)">
      <summary vsli:raw="Gets the parameter associated with the namespace qualified name.">Obtient le paramètre associé au nom qualifié d'espace de noms.</summary>
      <param name="name" vsli:raw="The name of the parameter. &lt;see cref=&quot;T:System.Xml.Xsl.XsltArgumentList&quot; /&gt; does not check to ensure the name passed is a valid local name; however, the name cannot be &lt;see langword=&quot;null&quot; /&gt;.">Nom du paramètre. <see cref="T:System.Xml.Xsl.XsltArgumentList" /> ne vérifie pas si le nom passé est un nom local valide ; cependant, ce nom ne peut pas être <see langword="null" />.</param>
      <param name="namespaceUri" vsli:raw="The namespace URI associated with the parameter.">URI d'espace de noms associé au paramètre.</param>
      <returns vsli:raw="The parameter object or &lt;see langword=&quot;null&quot; /&gt; if one was not found.">Objet de paramètre ou <see langword="null" />, s'il n'en existe pas.</returns>
    </member>
    <member name="M:System.Xml.Xsl.XsltArgumentList.RemoveExtensionObject(System.String)">
      <summary vsli:raw="Removes the object with the namespace URI from the &lt;see cref=&quot;T:System.Xml.Xsl.XsltArgumentList&quot; /&gt;.">Supprime l'objet ainsi que l'URI d'espace de noms de <see cref="T:System.Xml.Xsl.XsltArgumentList" />.</summary>
      <param name="namespaceUri" vsli:raw="The namespace URI associated with the object to remove.">URI d'espace de noms associé à l'objet à supprimer.</param>
      <returns vsli:raw="The object with the namespace URI or &lt;see langword=&quot;null&quot; /&gt; if one was not found.">Objet avec l'URI d'espace de noms ou <see langword="null" />, s'il n'en existe pas.</returns>
    </member>
    <member name="M:System.Xml.Xsl.XsltArgumentList.RemoveParam(System.String,System.String)">
      <summary vsli:raw="Removes the parameter from the &lt;see cref=&quot;T:System.Xml.Xsl.XsltArgumentList&quot; /&gt;.">Supprime le paramètre de <see cref="T:System.Xml.Xsl.XsltArgumentList" />.</summary>
      <param name="name" vsli:raw="The name of the parameter to remove. &lt;see cref=&quot;T:System.Xml.Xsl.XsltArgumentList&quot; /&gt; does not check to ensure the name passed is a valid local name; however, the name cannot be &lt;see langword=&quot;null&quot; /&gt;.">Nom du paramètre à supprimer. <see cref="T:System.Xml.Xsl.XsltArgumentList" /> ne vérifie pas si le nom passé est un nom local valide ; cependant, ce nom ne peut pas être <see langword="null" />.</param>
      <param name="namespaceUri" vsli:raw="The namespace URI of the parameter to remove.">URI d'espace de noms du paramètre à supprimer.</param>
      <returns vsli:raw="The parameter object or &lt;see langword=&quot;null&quot; /&gt; if one was not found.">Objet de paramètre ou <see langword="null" />, s'il n'en existe pas.</returns>
    </member>
    <member name="T:System.Xml.Xsl.XsltCompileException">
      <summary vsli:raw="The exception that is thrown by the Load method when an error is found in the XSLT style sheet.">Exception levée par la méthode Load lorsqu’une erreur se produit dans la feuille de style XSLT.</summary>
    </member>
    <member name="M:System.Xml.Xsl.XsltCompileException.#ctor">
      <summary vsli:raw="Initializes a new instance of the &lt;see cref=&quot;T:System.Xml.Xsl.XsltCompileException&quot; /&gt; class.">Initialise une nouvelle instance de la classe <see cref="T:System.Xml.Xsl.XsltCompileException" />.</summary>
    </member>
    <member name="M:System.Xml.Xsl.XsltCompileException.#ctor(System.Exception,System.String,System.Int32,System.Int32)">
      <summary vsli:raw="Initializes a new instance of the &lt;see langword=&quot;XsltCompileException&quot; /&gt; class.">Initialise une nouvelle instance de la classe <see langword="XsltCompileException" />.</summary>
      <param name="inner" vsli:raw="The &lt;see cref=&quot;T:System.Exception&quot; /&gt; that threw the &lt;see langword=&quot;XsltCompileException&quot; /&gt;.">
        <see cref="T:System.Exception" /> qui a levé <see langword="XsltCompileException" />.</param>
      <param name="sourceUri" vsli:raw="The location path of the style sheet.">Chemin d'accès de la feuille de style.</param>
      <param name="lineNumber" vsli:raw="The line number indicating where the error occurred in the style sheet.">Numéro de la ligne indiquant l'endroit où l'erreur s'est produite dans la feuille de style.</param>
      <param name="linePosition" vsli:raw="The line position indicating where the error occurred in the style sheet.">Position de ligne indiquant l'endroit où l'erreur s'est produite dans la feuille de style.</param>
    </member>
    <member name="M:System.Xml.Xsl.XsltCompileException.#ctor(System.Runtime.Serialization.SerializationInfo,System.Runtime.Serialization.StreamingContext)">
      <summary vsli:raw="Initializes a new instance of the &lt;see langword=&quot;XsltCompileException&quot; /&gt; class using the information in the &lt;see cref=&quot;T:System.Runtime.Serialization.SerializationInfo&quot; /&gt; and &lt;see cref=&quot;T:System.Runtime.Serialization.StreamingContext&quot; /&gt; objects.">Initialise une nouvelle instance de la classe <see langword="XsltCompileException" /> à l'aide des informations contenues dans les objets <see cref="T:System.Runtime.Serialization.SerializationInfo" /> et <see cref="T:System.Runtime.Serialization.StreamingContext" />.</summary>
      <param name="info" vsli:raw="The &lt;see langword=&quot;SerializationInfo&quot; /&gt; object containing all the properties of an &lt;see langword=&quot;XsltCompileException&quot; /&gt;.">Objet <see langword="SerializationInfo" /> contenant toutes les propriétés de <see langword="XsltCompileException" />.</param>
      <param name="context" vsli:raw="The &lt;see langword=&quot;StreamingContext&quot; /&gt; object containing the context information.">Objet <see langword="StreamingContext" /> contenant les informations de contexte.</param>
    </member>
    <member name="M:System.Xml.Xsl.XsltCompileException.#ctor(System.String)">
      <summary vsli:raw="Initializes a new instance of the &lt;see cref=&quot;T:System.Xml.Xsl.XsltCompileException&quot; /&gt; class with a specified error message.">Initialise une nouvelle instance de la classe <see cref="T:System.Xml.Xsl.XsltCompileException" /> avec un message d'erreur spécifié.</summary>
      <param name="message" vsli:raw="The message that describes the error.">Message décrivant l'erreur.</param>
    </member>
    <member name="M:System.Xml.Xsl.XsltCompileException.#ctor(System.String,System.Exception)">
      <summary vsli:raw="Initializes a new instance of the &lt;see cref=&quot;T:System.Xml.Xsl.XsltCompileException&quot; /&gt; class specified error message and a reference to the inner exception that is the cause of this exception.">Initialise une nouvelle instance de la classe <see cref="T:System.Xml.Xsl.XsltCompileException" /> avec un message d'erreur spécifié et une référence à l'exception interne ayant provoqué cette exception.</summary>
      <param name="message" vsli:raw="The message that describes the error.">Message décrivant l'erreur.</param>
      <param name="innerException" vsli:raw="The exception that is the cause of the current exception, or &lt;see langword=&quot;null&quot; /&gt; if no inner exception is specified.">L'exception qui est la cause de l'exception actuelle ou <see langword="null" /> si aucune exception interne n'est spécifiée.</param>
    </member>
    <member name="M:System.Xml.Xsl.XsltCompileException.GetObjectData(System.Runtime.Serialization.SerializationInfo,System.Runtime.Serialization.StreamingContext)">
      <summary vsli:raw="Streams all the &lt;see langword=&quot;XsltCompileException&quot; /&gt; properties into the &lt;see cref=&quot;T:System.Runtime.Serialization.SerializationInfo&quot; /&gt; class for the given &lt;see cref=&quot;T:System.Runtime.Serialization.StreamingContext&quot; /&gt;.">Transmet toutes les propriétés <see langword="XsltCompileException" /> dans la classe <see cref="T:System.Runtime.Serialization.SerializationInfo" /> pour le <see cref="T:System.Runtime.Serialization.StreamingContext" /> donné.</summary>
      <param name="info" vsli:raw="The &lt;see langword=&quot;SerializationInfo&quot; /&gt; object.">Objet <see langword="SerializationInfo" />.</param>
      <param name="context" vsli:raw="The &lt;see langword=&quot;StreamingContext&quot; /&gt; object.">Objet <see langword="StreamingContext" />.</param>
    </member>
    <member name="T:System.Xml.Xsl.XsltContext">
      <summary vsli:raw="Encapsulates the current execution context of the Extensible Stylesheet Language for Transformations (XSLT) processor allowing XML Path Language (XPath) to resolve functions, parameters, and namespaces within XPath expressions.">Encapsule le contexte d'exécution actuel du processeur XSLT (Extensible Stylesheet Language for Transformations) permettant à XPath (XML Path Language) de résoudre des fonctions, des paramètres et des espaces de noms dans des expressions XPath.</summary>
    </member>
    <member name="M:System.Xml.Xsl.XsltContext.#ctor">
      <summary vsli:raw="Initializes a new instance of the &lt;see cref=&quot;T:System.Xml.Xsl.XsltContext&quot; /&gt; class.">Initialise une nouvelle instance de la classe <see cref="T:System.Xml.Xsl.XsltContext" />.</summary>
    </member>
    <member name="M:System.Xml.Xsl.XsltContext.#ctor(System.Xml.NameTable)">
      <summary vsli:raw="Initializes a new instance of the &lt;see cref=&quot;T:System.Xml.Xsl.XsltContext&quot; /&gt; class with the specified &lt;see cref=&quot;T:System.Xml.NameTable&quot; /&gt;.">Initialise une nouvelle instance de la classe <see cref="T:System.Xml.Xsl.XsltContext" /> avec le <see cref="T:System.Xml.NameTable" /> spécifié.</summary>
      <param name="table" vsli:raw="The &lt;see cref=&quot;T:System.Xml.NameTable&quot; /&gt; to use.">
        <see cref="T:System.Xml.NameTable" /> à utiliser.</param>
    </member>
    <member name="M:System.Xml.Xsl.XsltContext.CompareDocument(System.String,System.String)">
      <summary vsli:raw="When overridden in a derived class, compares the base Uniform Resource Identifiers (URIs) of two documents based upon the order the documents were loaded by the XSLT processor (that is, the &lt;see cref=&quot;T:System.Xml.Xsl.XslTransform&quot; /&gt; class).">En cas de substitution dans une classe dérivée, compare les URI (Uniform Resource Identifier) de base de deux documents dans l'ordre de chargement des documents par le processeur XSLT (c'est-à-dire la classe <see cref="T:System.Xml.Xsl.XslTransform" />).</summary>
      <param name="baseUri" vsli:raw="The base URI of the first document to compare.">URI de base du premier document à comparer.</param>
      <param name="nextbaseUri" vsli:raw="The base URI of the second document to compare.">URI de base du deuxième document à comparer.</param>
      <returns vsli:raw="An integer value describing the relative order of the two base URIs: -1 if &lt;paramref name=&quot;baseUri&quot; /&gt; occurs before &lt;paramref name=&quot;nextbaseUri&quot; /&gt;; 0 if the two base URIs are identical; and 1 if &lt;paramref name=&quot;baseUri&quot; /&gt; occurs after &lt;paramref name=&quot;nextbaseUri&quot; /&gt;.">Valeur entière décrivant l’ordre relatif des deux URI de base : -1 si <paramref name="baseUri" /> se produit avant <paramref name="nextbaseUri" /> ; 0 si les deux URI de base sont identiques ; 1 si <paramref name="baseUri" /> se produit après <paramref name="nextbaseUri" />.</returns>
    </member>
    <member name="M:System.Xml.Xsl.XsltContext.PreserveWhitespace(System.Xml.XPath.XPathNavigator)">
      <summary vsli:raw="When overridden in a derived class, evaluates whether to preserve white space nodes or strip them for the given context.">Substitué dans une classe dérivée, évalue si les nœuds d'espaces blancs doivent être préservés ou débarrassés du contexte donné.</summary>
      <param name="node" vsli:raw="The white space node that is to be preserved or stripped in the current context.">Nœud d'espace blanc à préserver ou à supprimer dans le contexte actuel.</param>
      <returns vsli:raw="&lt;see langword=&quot;true&quot; /&gt; if the white space is to be preserved; &lt;see langword=&quot;false&quot; /&gt; if the white space is to be stripped.">
        <see langword="true" /> si l’espace blanc doit être préservé ; <see langword="false" /> si l’espace blanc doit être supprimé.</returns>
    </member>
    <member name="M:System.Xml.Xsl.XsltContext.ResolveFunction(System.String,System.String,System.Xml.XPath.XPathResultType[])">
      <summary vsli:raw="When overridden in a derived class, resolves a function reference and returns an &lt;see cref=&quot;T:System.Xml.Xsl.IXsltContextFunction&quot; /&gt; representing the function. The &lt;see cref=&quot;T:System.Xml.Xsl.IXsltContextFunction&quot; /&gt; is used at execution time to get the return value of the function.">En cas de substitution dans une classe dérivée, résout une référence de fonction et retourne un <see cref="T:System.Xml.Xsl.IXsltContextFunction" /> représentant la fonction. <see cref="T:System.Xml.Xsl.IXsltContextFunction" /> est utilisée au moment de l'exécution pour obtenir la valeur de retour de la fonction.</summary>
      <param name="prefix" vsli:raw="The prefix of the function as it appears in the XPath expression.">Préfixe de la fonction tel qu’il apparaît dans l’expression XPath.</param>
      <param name="name" vsli:raw="The name of the function.">Nom de la fonction.</param>
      <param name="ArgTypes" vsli:raw="An array of argument types for the function being resolved. This allows you to select between methods with the same name (for example, overloaded methods).">Tableau de types d’argument pour la fonction en cours de résolution. Ceci vous permet de faire un choix entre les méthodes portant le même nom (par exemple, méthodes surchargées).</param>
      <returns vsli:raw="An &lt;see cref=&quot;T:System.Xml.Xsl.IXsltContextFunction&quot; /&gt; representing the function.">
        <see cref="T:System.Xml.Xsl.IXsltContextFunction" /> représentant la fonction.</returns>
    </member>
    <member name="M:System.Xml.Xsl.XsltContext.ResolveVariable(System.String,System.String)">
      <summary vsli:raw="When overridden in a derived class, resolves a variable reference and returns an &lt;see cref=&quot;T:System.Xml.Xsl.IXsltContextVariable&quot; /&gt; representing the variable.">En cas de substitution dans une classe dérivée, résout une référence de variable et retourne un <see cref="T:System.Xml.Xsl.IXsltContextVariable" /> représentant la variable.</summary>
      <param name="prefix" vsli:raw="The prefix of the variable as it appears in the XPath expression.">Préfixe de la variable tel qu'il apparaît dans l'expression XPath.</param>
      <param name="name" vsli:raw="The name of the variable.">Nom de la variable.</param>
      <returns vsli:raw="An &lt;see cref=&quot;T:System.Xml.Xsl.IXsltContextVariable&quot; /&gt; representing the variable at runtime.">
        <see cref="T:System.Xml.Xsl.IXsltContextVariable" /> représentant la variable au moment de l'exécution.</returns>
    </member>
    <member name="P:System.Xml.Xsl.XsltContext.Whitespace">
      <summary vsli:raw="When overridden in a derived class, gets a value indicating whether to include white space nodes in the output.">En cas de substitution dans une classe dérivée, obtient une valeur indiquant si des nœuds d'espaces blancs doivent être inclus dans le résultat.</summary>
      <returns vsli:raw="&lt;see langword=&quot;true&quot; /&gt; to check white space nodes in the source document for inclusion in the output; &lt;see langword=&quot;false&quot; /&gt; to not evaluate white space nodes. The default is &lt;see langword=&quot;true&quot; /&gt;.">
        <see langword="true" /> pour vérifier les nœuds d'espaces blancs dans le document source en vue de leur inclusion dans le résultat ; <see langword="false" /> pour ne pas évaluer les nœuds d'espaces blancs. La valeur par défaut est <see langword="true" />.</returns>
    </member>
    <member name="T:System.Xml.Xsl.XsltException">
      <summary vsli:raw="The exception that is thrown when an error occurs while processing an XSLT transformation.">Exception levée lorsqu'une erreur se produit lors du traitement d'une transformation XSLT.</summary>
    </member>
    <member name="M:System.Xml.Xsl.XsltException.#ctor">
      <summary vsli:raw="Initializes a new instance of the &lt;see cref=&quot;T:System.Xml.Xsl.XsltException&quot; /&gt; class.">Initialise une nouvelle instance de la classe <see cref="T:System.Xml.Xsl.XsltException" />.</summary>
    </member>
    <member name="M:System.Xml.Xsl.XsltException.#ctor(System.Runtime.Serialization.SerializationInfo,System.Runtime.Serialization.StreamingContext)">
      <summary vsli:raw="Initializes a new instance of the &lt;see langword=&quot;XsltException&quot; /&gt; class using the information in the &lt;see cref=&quot;T:System.Runtime.Serialization.SerializationInfo&quot; /&gt; and &lt;see cref=&quot;T:System.Runtime.Serialization.StreamingContext&quot; /&gt; objects.">Initialise une nouvelle instance de la classe <see langword="XsltException" /> à l'aide des informations contenues dans les objets <see cref="T:System.Runtime.Serialization.SerializationInfo" /> et <see cref="T:System.Runtime.Serialization.StreamingContext" />.</summary>
      <param name="info" vsli:raw="The &lt;see langword=&quot;SerializationInfo&quot; /&gt; object containing all the properties of an &lt;see langword=&quot;XsltException&quot; /&gt;.">Objet <see langword="SerializationInfo" /> contenant toutes les propriétés de <see langword="XsltException" />.</param>
      <param name="context" vsli:raw="The &lt;see langword=&quot;StreamingContext&quot; /&gt; object.">Objet <see langword="StreamingContext" />.</param>
    </member>
    <member name="M:System.Xml.Xsl.XsltException.#ctor(System.String)">
      <summary vsli:raw="Initializes a new instance of the &lt;see cref=&quot;T:System.Xml.Xsl.XsltException&quot; /&gt; class with a specified error message.">Initialise une nouvelle instance de la classe <see cref="T:System.Xml.Xsl.XsltException" /> avec un message d'erreur spécifié.</summary>
      <param name="message" vsli:raw="The message that describes the error.">Message décrivant l'erreur.</param>
    </member>
    <member name="M:System.Xml.Xsl.XsltException.#ctor(System.String,System.Exception)">
      <summary vsli:raw="Initializes a new instance of the &lt;see langword=&quot;XsltException&quot; /&gt; class.">Initialise une nouvelle instance de la classe <see langword="XsltException" />.</summary>
      <param name="message" vsli:raw="The description of the error condition.">Description de la condition d'erreur.</param>
      <param name="innerException" vsli:raw="The &lt;see cref=&quot;T:System.Exception&quot; /&gt; which threw the &lt;see langword=&quot;XsltException&quot; /&gt;, if any. This value can be &lt;see langword=&quot;null&quot; /&gt;.">
        <see cref="T:System.Exception" /> qui a levé le <see langword="XsltException" /> éventuel. Cette valeur peut être <see langword="null" />.</param>
    </member>
    <member name="M:System.Xml.Xsl.XsltException.GetObjectData(System.Runtime.Serialization.SerializationInfo,System.Runtime.Serialization.StreamingContext)">
      <summary vsli:raw="Streams all the &lt;see langword=&quot;XsltException&quot; /&gt; properties into the &lt;see cref=&quot;T:System.Runtime.Serialization.SerializationInfo&quot; /&gt; class for the given &lt;see cref=&quot;T:System.Runtime.Serialization.StreamingContext&quot; /&gt;.">Transmet toutes les propriétés <see langword="XsltException" /> dans la classe <see cref="T:System.Runtime.Serialization.SerializationInfo" /> pour le <see cref="T:System.Runtime.Serialization.StreamingContext" /> donné.</summary>
      <param name="info" vsli:raw="The &lt;see langword=&quot;SerializationInfo&quot; /&gt; object.">Objet <see langword="SerializationInfo" />.</param>
      <param name="context" vsli:raw="The &lt;see langword=&quot;StreamingContext&quot; /&gt; object.">Objet <see langword="StreamingContext" />.</param>
    </member>
    <member name="P:System.Xml.Xsl.XsltException.LineNumber">
      <summary vsli:raw="Gets the line number indicating where the error occurred in the style sheet.">Obtient le numéro de la ligne indiquant l'endroit où l'erreur s'est produite dans la feuille de style.</summary>
      <returns vsli:raw="The line number indicating where the error occurred in the style sheet.">Numéro de la ligne indiquant l'endroit où l'erreur s'est produite dans la feuille de style.</returns>
    </member>
    <member name="P:System.Xml.Xsl.XsltException.LinePosition">
      <summary vsli:raw="Gets the line position indicating where the error occurred in the style sheet.">Obtient la position de ligne indiquant l'endroit où l'erreur s'est produite dans la feuille de style.</summary>
      <returns vsli:raw="The line position indicating where the error occurred in the style sheet.">Position de ligne indiquant l'endroit où l'erreur s'est produite dans la feuille de style.</returns>
    </member>
    <member name="P:System.Xml.Xsl.XsltException.Message">
      <summary vsli:raw="Gets the formatted error message describing the current exception.">Obtient le message d'erreur mis en forme qui décrit l'exception en cours.</summary>
      <returns vsli:raw="The formatted error message describing the current exception.">Message d'erreur mis en forme qui décrit l'exception en cours.</returns>
    </member>
    <member name="P:System.Xml.Xsl.XsltException.SourceUri">
      <summary vsli:raw="Gets the location path of the style sheet.">Obtient le chemin d'accès de la feuille de style.</summary>
      <returns vsli:raw="The location path of the style sheet.">Chemin d'accès de la feuille de style.</returns>
    </member>
    <member name="T:System.Xml.Xsl.XsltMessageEncounteredEventArgs">
      <summary vsli:raw="Provides data for the &lt;see cref=&quot;E:System.Xml.Xsl.XsltArgumentList.XsltMessageEncountered&quot; /&gt; event.">Fournit des données pour l'événement <see cref="E:System.Xml.Xsl.XsltArgumentList.XsltMessageEncountered" />.</summary>
    </member>
    <member name="M:System.Xml.Xsl.XsltMessageEncounteredEventArgs.#ctor">
      <summary vsli:raw="Initializes a new instance of the &lt;see cref=&quot;T:System.Xml.Xsl.XsltMessageEncounteredEventArgs&quot; /&gt; class.">Initialise une nouvelle instance de la classe <see cref="T:System.Xml.Xsl.XsltMessageEncounteredEventArgs" />.</summary>
    </member>
    <member name="P:System.Xml.Xsl.XsltMessageEncounteredEventArgs.Message">
      <summary vsli:raw="Gets the contents of the &lt;c&gt;xsl:message&lt;/c&gt; element.">Obtient le contenu de l’élément <c>xsl:message</c>.</summary>
      <returns vsli:raw="The contents of the &lt;c&gt;xsl:message&lt;/c&gt; element.">Contenu de l’élément <c>xsl : message</c> .</returns>
    </member>
    <member name="T:System.Xml.Xsl.XsltMessageEncounteredEventHandler">
      <summary vsli:raw="Represents the method that will handle the &lt;see cref=&quot;E:System.Xml.Xsl.XsltArgumentList.XsltMessageEncountered&quot; /&gt; event.">Représente la méthode qui gérera l'événement <see cref="E:System.Xml.Xsl.XsltArgumentList.XsltMessageEncountered" />.</summary>
      <param name="sender" vsli:raw="The source of the event.">Source de l'événement.</param>
      <param name="e" vsli:raw="The &lt;see cref=&quot;T:System.Xml.Xsl.XsltMessageEncounteredEventArgs&quot; /&gt; containing the event data.">
        <see cref="T:System.Xml.Xsl.XsltMessageEncounteredEventArgs" /> contenant les données d'événement.</param>
    </member>
    <member name="T:System.Xml.Xsl.XslTransform">
      <summary vsli:raw="Transforms XML data using an Extensible Stylesheet Language for Transformations (XSLT) style sheet.">Transforme les données XML à l'aide d'une feuille de style XSLT (Extensible Stylesheet Language for Transformations).</summary>
    </member>
    <member name="M:System.Xml.Xsl.XslTransform.#ctor">
      <summary vsli:raw="Initializes a new instance of the &lt;see cref=&quot;T:System.Xml.Xsl.XslTransform&quot; /&gt; class.">Initialise une nouvelle instance de la classe <see cref="T:System.Xml.Xsl.XslTransform" />.</summary>
    </member>
    <member name="M:System.Xml.Xsl.XslTransform.Load(System.String)">
      <summary vsli:raw="Loads the XSLT style sheet specified by a URL.">Charge la feuille de style XSLT spécifiée par une URL.</summary>
      <param name="url" vsli:raw="The URL that specifies the XSLT style sheet to load.">URL qui spécifie la feuille de style XSLT à charger.</param>
      <exception cref="T:System.Xml.Xsl.XsltCompileException" vsli:raw="The loaded resource is not a valid style sheet.">La ressource chargée n'est pas une feuille de style valide.</exception>
      <exception cref="T:System.Security.SecurityException" vsli:raw="The style sheet contains embedded script, and the caller does not have &lt;see langword=&quot;UnmanagedCode&quot; /&gt; permission.">La feuille de style contient des scripts incorporés et l'appelant n'a pas d'autorisation <see langword="UnmanagedCode" />.</exception>
    </member>
    <member name="M:System.Xml.Xsl.XslTransform.Load(System.String,System.Xml.XmlResolver)">
      <summary vsli:raw="Loads the XSLT style sheet specified by a URL.">Charge la feuille de style XSLT spécifiée par une URL.</summary>
      <param name="url" vsli:raw="The URL that specifies the XSLT style sheet to load.">URL qui spécifie la feuille de style XSLT à charger.</param>
      <param name="resolver" vsli:raw="The &lt;see cref=&quot;T:System.Xml.XmlResolver&quot; /&gt; to use to load the style sheet and any style sheet(s) referenced in &lt;c&gt;xsl:import&lt;/c&gt; and &lt;c&gt;xsl:include&lt;/c&gt; elements.  &#xA;  &#xA; If this is &lt;see langword=&quot;null&quot; /&gt;, a default &lt;see cref=&quot;T:System.Xml.XmlUrlResolver&quot; /&gt; with no user credentials is used to open the style sheet. The default &lt;see cref=&quot;T:System.Xml.XmlUrlResolver&quot; /&gt; is not used to resolve any external resources in the style sheet, so &lt;c&gt;xsl:import&lt;/c&gt; and &lt;c&gt;xsl:include&lt;/c&gt; elements are not resolved.  &#xA;  &#xA; The &lt;see cref=&quot;T:System.Xml.XmlResolver&quot; /&gt; is not cached after the &lt;see cref=&quot;M:System.Xml.Xsl.XslTransform.Load(System.String,System.Xml.XmlResolver)&quot; /&gt; method completes.">
        <see cref="T:System.Xml.XmlResolver" /> à utiliser pour charger la feuille de style et toutes les feuilles de style référencées dans les éléments <c>xsl:import</c> et <c>xsl:include</c>.  
  
S'il a la valeur <see langword="null" />, un <see cref="T:System.Xml.XmlUrlResolver" /> par défaut sans informations d'identification d'utilisateur est employé pour ouvrir la feuille de style. Dans la mesure où le <see cref="T:System.Xml.XmlUrlResolver" /> par défaut n’est pas utilisé pour résoudre des ressources externes dans la feuille de style, les éléments <c>xsl:import</c> et <c>xsl:include</c> ne sont pas résolus.  
  
<see cref="T:System.Xml.XmlResolver" /> n'est pas mis en cache à la fin de la méthode <see cref="M:System.Xml.Xsl.XslTransform.Load(System.String,System.Xml.XmlResolver)" />.</param>
      <exception cref="T:System.Xml.Xsl.XsltCompileException" vsli:raw="The loaded resource is not a valid style sheet.">La ressource chargée n'est pas une feuille de style valide.</exception>
      <exception cref="T:System.Security.SecurityException" vsli:raw="The style sheet contains embedded script, and the caller does not have &lt;see langword=&quot;UnmanagedCode&quot; /&gt; permission.">La feuille de style contient des scripts incorporés et l'appelant n'a pas d'autorisation <see langword="UnmanagedCode" />.</exception>
    </member>
    <member name="M:System.Xml.Xsl.XslTransform.Load(System.Xml.XmlReader)">
      <summary vsli:raw="Loads the XSLT style sheet contained in the &lt;see cref=&quot;T:System.Xml.XmlReader&quot; /&gt;.">Charge la feuille de style XSLT figurant dans <see cref="T:System.Xml.XmlReader" />.</summary>
      <param name="stylesheet" vsli:raw="An &lt;see cref=&quot;T:System.Xml.XmlReader&quot; /&gt; object that contains the XSLT style sheet.">Objet <see cref="T:System.Xml.XmlReader" /> qui contient la feuille de style XSLT.</param>
      <exception cref="T:System.Xml.Xsl.XsltCompileException" vsli:raw="The current node does not conform to a valid style sheet.">Le nœud actuel n'est pas conforme à une feuille de style valide.</exception>
      <exception cref="T:System.Security.SecurityException" vsli:raw="The style sheet contains embedded scripts, and the caller does not have &lt;see langword=&quot;UnmanagedCode&quot; /&gt; permission.">La feuille de style contient des scripts incorporés et l'appelant n'a pas d'autorisation <see langword="UnmanagedCode" />.</exception>
    </member>
    <member name="M:System.Xml.Xsl.XslTransform.Load(System.Xml.XmlReader,System.Xml.XmlResolver)">
      <summary vsli:raw="Loads the XSLT style sheet contained in the &lt;see cref=&quot;T:System.Xml.XmlReader&quot; /&gt;.">Charge la feuille de style XSLT figurant dans <see cref="T:System.Xml.XmlReader" />.</summary>
      <param name="stylesheet" vsli:raw="An &lt;see cref=&quot;T:System.Xml.XmlReader&quot; /&gt; object that contains the XSLT style sheet.">Objet <see cref="T:System.Xml.XmlReader" /> qui contient la feuille de style XSLT.</param>
      <param name="resolver" vsli:raw="The &lt;see cref=&quot;T:System.Xml.XmlResolver&quot; /&gt; used to load any style sheets referenced in &lt;c&gt;xsl:import&lt;/c&gt; and &lt;c&gt;xsl:include&lt;/c&gt; elements. If this is &lt;see langword=&quot;null&quot; /&gt;, external resources are not resolved.  &#xA;  &#xA; The &lt;see cref=&quot;T:System.Xml.XmlResolver&quot; /&gt; is not cached after the &lt;see cref=&quot;M:System.Xml.Xsl.XslTransform.Load(System.Xml.XmlReader,System.Xml.XmlResolver)&quot; /&gt; method completes.">
        <see cref="T:System.Xml.XmlResolver" /> utilisé pour charger toute feuille de style référencée dans les éléments <c>xsl:import</c> et <c>xsl:include</c>. Si la valeur est <see langword="null" />, les ressources externes ne sont pas résolues.  
  
<see cref="T:System.Xml.XmlResolver" /> n'est pas mis en cache à la fin de la méthode <see cref="M:System.Xml.Xsl.XslTransform.Load(System.Xml.XmlReader,System.Xml.XmlResolver)" />.</param>
      <exception cref="T:System.Xml.Xsl.XsltCompileException" vsli:raw="The current node does not conform to a valid style sheet.">Le nœud actuel n'est pas conforme à une feuille de style valide.</exception>
      <exception cref="T:System.Security.SecurityException" vsli:raw="The style sheet contains embedded scripts, and the caller does not have &lt;see langword=&quot;UnmanagedCode&quot; /&gt; permission.">La feuille de style contient des scripts incorporés et l'appelant n'a pas d'autorisation <see langword="UnmanagedCode" />.</exception>
    </member>
    <member name="M:System.Xml.Xsl.XslTransform.Load(System.Xml.XPath.IXPathNavigable)">
      <summary vsli:raw="Loads the XSLT style sheet contained in the &lt;see cref=&quot;T:System.Xml.XPath.IXPathNavigable&quot; /&gt;.">Charge la feuille de style XSLT figurant dans <see cref="T:System.Xml.XPath.IXPathNavigable" />.</summary>
      <param name="stylesheet" vsli:raw="An object implementing the &lt;see cref=&quot;T:System.Xml.XPath.IXPathNavigable&quot; /&gt; interface. In the .NET Framework, this can be either an &lt;see cref=&quot;T:System.Xml.XmlNode&quot; /&gt; (typically an &lt;see cref=&quot;T:System.Xml.XmlDocument&quot; /&gt;), or an &lt;see cref=&quot;T:System.Xml.XPath.XPathDocument&quot; /&gt; containing the XSLT style sheet.">Objet implémentant l'interface <see cref="T:System.Xml.XPath.IXPathNavigable" />. Dans le .NET Framework, il peut s’agir de <see cref="T:System.Xml.XmlNode" /> (généralement <see cref="T:System.Xml.XmlDocument" />) ou de <see cref="T:System.Xml.XPath.XPathDocument" /> contenant la feuille de style XSLT.</param>
      <exception cref="T:System.Xml.Xsl.XsltCompileException" vsli:raw="The loaded resource is not a valid style sheet.">La ressource chargée n'est pas une feuille de style valide.</exception>
      <exception cref="T:System.Security.SecurityException" vsli:raw="The style sheet contains embedded scripts, and the caller does not have &lt;see langword=&quot;UnmanagedCode&quot; /&gt; permission.">La feuille de style contient des scripts incorporés et l'appelant n'a pas d'autorisation <see langword="UnmanagedCode" />.</exception>
    </member>
    <member name="M:System.Xml.Xsl.XslTransform.Load(System.Xml.XPath.IXPathNavigable,System.Xml.XmlResolver)">
      <summary vsli:raw="Loads the XSLT style sheet contained in the &lt;see cref=&quot;T:System.Xml.XPath.IXPathNavigable&quot; /&gt;.">Charge la feuille de style XSLT figurant dans <see cref="T:System.Xml.XPath.IXPathNavigable" />.</summary>
      <param name="stylesheet" vsli:raw="An object implementing the &lt;see cref=&quot;T:System.Xml.XPath.IXPathNavigable&quot; /&gt; interface. In the .NET Framework, this can be either an &lt;see cref=&quot;T:System.Xml.XmlNode&quot; /&gt; (typically an &lt;see cref=&quot;T:System.Xml.XmlDocument&quot; /&gt;), or an &lt;see cref=&quot;T:System.Xml.XPath.XPathDocument&quot; /&gt; containing the XSLT style sheet.">Objet implémentant l'interface <see cref="T:System.Xml.XPath.IXPathNavigable" />. Dans le .NET Framework, il peut s’agir de <see cref="T:System.Xml.XmlNode" /> (généralement <see cref="T:System.Xml.XmlDocument" />) ou de <see cref="T:System.Xml.XPath.XPathDocument" /> contenant la feuille de style XSLT.</param>
      <param name="resolver" vsli:raw="The &lt;see cref=&quot;T:System.Xml.XmlResolver&quot; /&gt; used to load any style sheets referenced in &lt;c&gt;xsl:import&lt;/c&gt; and &lt;c&gt;xsl:include&lt;/c&gt; elements. If this is &lt;see langword=&quot;null&quot; /&gt;, external resources are not resolved.  &#xA;  &#xA; The &lt;see cref=&quot;T:System.Xml.XmlResolver&quot; /&gt; is not cached after the &lt;see cref=&quot;Overload:System.Xml.Xsl.XslTransform.Load&quot; /&gt; method completes.">
        <see cref="T:System.Xml.XmlResolver" /> utilisé pour charger toute feuille de style référencée dans les éléments <c>xsl:import</c> et <c>xsl:include</c>. Si la valeur est <see langword="null" />, les ressources externes ne sont pas résolues.  
  
<see cref="T:System.Xml.XmlResolver" /> n'est pas mis en cache à la fin de la méthode <see cref="Overload:System.Xml.Xsl.XslTransform.Load" />.</param>
      <exception cref="T:System.Xml.Xsl.XsltCompileException" vsli:raw="The loaded resource is not a valid style sheet.">La ressource chargée n'est pas une feuille de style valide.</exception>
      <exception cref="T:System.Security.SecurityException" vsli:raw="The style sheet contains embedded scripts, and the caller does not have &lt;see langword=&quot;UnmanagedCode&quot; /&gt; permission.">La feuille de style contient des scripts incorporés et l'appelant n'a pas d'autorisation <see langword="UnmanagedCode" />.</exception>
    </member>
    <member name="M:System.Xml.Xsl.XslTransform.Load(System.Xml.XPath.XPathNavigator)">
      <summary vsli:raw="Loads the XSLT style sheet contained in the &lt;see cref=&quot;T:System.Xml.XPath.XPathNavigator&quot; /&gt;.">Charge la feuille de style XSLT figurant dans <see cref="T:System.Xml.XPath.XPathNavigator" />.</summary>
      <param name="stylesheet" vsli:raw="An &lt;see cref=&quot;T:System.Xml.XPath.XPathNavigator&quot; /&gt; object that contains the XSLT style sheet.">Objet <see cref="T:System.Xml.XPath.XPathNavigator" /> qui contient la feuille de style XSLT.</param>
      <exception cref="T:System.Xml.Xsl.XsltCompileException" vsli:raw="The current node does not conform to a valid style sheet.">Le nœud actuel n'est pas conforme à une feuille de style valide.</exception>
      <exception cref="T:System.Security.SecurityException" vsli:raw="The style sheet contains embedded scripts, and the caller does not have &lt;see langword=&quot;UnmanagedCode&quot; /&gt; permission.">La feuille de style contient des scripts incorporés et l'appelant n'a pas d'autorisation <see langword="UnmanagedCode" />.</exception>
    </member>
    <member name="M:System.Xml.Xsl.XslTransform.Load(System.Xml.XPath.XPathNavigator,System.Xml.XmlResolver)">
      <summary vsli:raw="Loads the XSLT style sheet contained in the &lt;see cref=&quot;T:System.Xml.XPath.XPathNavigator&quot; /&gt;.">Charge la feuille de style XSLT figurant dans <see cref="T:System.Xml.XPath.XPathNavigator" />.</summary>
      <param name="stylesheet" vsli:raw="An &lt;see cref=&quot;T:System.Xml.XPath.XPathNavigator&quot; /&gt; object that contains the XSLT style sheet.">Objet <see cref="T:System.Xml.XPath.XPathNavigator" /> qui contient la feuille de style XSLT.</param>
      <param name="resolver" vsli:raw="The &lt;see cref=&quot;T:System.Xml.XmlResolver&quot; /&gt; used to load any style sheets referenced in &lt;c&gt;xsl:import&lt;/c&gt; and &lt;c&gt;xsl:include&lt;/c&gt; elements. If this is &lt;see langword=&quot;null&quot; /&gt;, external resources are not resolved.  &#xA;  &#xA; The &lt;see cref=&quot;T:System.Xml.XmlResolver&quot; /&gt; is not cached after the &lt;see cref=&quot;Overload:System.Xml.Xsl.XslTransform.Load&quot; /&gt; method completes.">
        <see cref="T:System.Xml.XmlResolver" /> utilisé pour charger toute feuille de style référencée dans les éléments <c>xsl:import</c> et <c>xsl:include</c>. Si la valeur est <see langword="null" />, les ressources externes ne sont pas résolues.  
  
<see cref="T:System.Xml.XmlResolver" /> n'est pas mis en cache à la fin de la méthode <see cref="Overload:System.Xml.Xsl.XslTransform.Load" />.</param>
      <exception cref="T:System.Xml.Xsl.XsltCompileException" vsli:raw="The current node does not conform to a valid style sheet.">Le nœud actuel n'est pas conforme à une feuille de style valide.</exception>
      <exception cref="T:System.Security.SecurityException" vsli:raw="The style sheet contains embedded scripts, and the caller does not have &lt;see langword=&quot;UnmanagedCode&quot; /&gt; permission.">La feuille de style contient des scripts incorporés et l'appelant n'a pas d'autorisation <see langword="UnmanagedCode" />.</exception>
    </member>
    <member name="M:System.Xml.Xsl.XslTransform.Transform(System.String,System.String)">
      <summary vsli:raw="Transforms the XML data in the input file and outputs the result to an output file.">Convertit les données XML dans le fichier d'entrée et renvoie le résultat dans un fichier de sortie.</summary>
      <param name="inputfile" vsli:raw="The URL of the source document to be transformed.">URL du document source à transformer.</param>
      <param name="outputfile" vsli:raw="The URL of the output file.">URL du fichier de sortie.</param>
    </member>
    <member name="M:System.Xml.Xsl.XslTransform.Transform(System.String,System.String,System.Xml.XmlResolver)">
      <summary vsli:raw="Transforms the XML data in the input file and outputs the result to an output file.">Convertit les données XML dans le fichier d'entrée et renvoie le résultat dans un fichier de sortie.</summary>
      <param name="inputfile" vsli:raw="The URL of the source document to be transformed.">URL du document source à transformer.</param>
      <param name="outputfile" vsli:raw="The URL of the output file.">URL du fichier de sortie.</param>
      <param name="resolver" vsli:raw="The &lt;see cref=&quot;T:System.Xml.XmlResolver&quot; /&gt; used to resolve the XSLT &lt;c&gt;document()&lt;/c&gt; function. If this is &lt;see langword=&quot;null&quot; /&gt;, the &lt;c&gt;document()&lt;/c&gt; function is not resolved.  &#xA;  &#xA; The &lt;see cref=&quot;T:System.Xml.XmlResolver&quot; /&gt; is not cached after the &lt;see cref=&quot;Overload:System.Xml.Xsl.XslTransform.Transform&quot; /&gt; method completes.">
        <see cref="T:System.Xml.XmlResolver" /> utilisé pour résoudre la fonction <c>document()</c> XSLT. S’il s’agit de <see langword="null" />, la fonction <c>document()</c> n’est pas résolue.  
  
<see cref="T:System.Xml.XmlResolver" /> n'est pas mis en cache à la fin de la méthode <see cref="Overload:System.Xml.Xsl.XslTransform.Transform" />.</param>
    </member>
    <member name="M:System.Xml.Xsl.XslTransform.Transform(System.Xml.XPath.IXPathNavigable,System.Xml.Xsl.XsltArgumentList)">
      <summary vsli:raw="Transforms the XML data in the &lt;see cref=&quot;T:System.Xml.XPath.IXPathNavigable&quot; /&gt; using the specified &lt;paramref name=&quot;args&quot; /&gt; and outputs the result to an &lt;see cref=&quot;T:System.Xml.XmlReader&quot; /&gt;.">Transforme les données XML dans <see cref="T:System.Xml.XPath.IXPathNavigable" /> en utilisant les <paramref name="args" /> spécifiés et renvoie le résultat dans <see cref="T:System.Xml.XmlReader" />.</summary>
      <param name="input" vsli:raw="An object implementing the &lt;see cref=&quot;T:System.Xml.XPath.IXPathNavigable&quot; /&gt; interface. In the .NET Framework, this can be either an &lt;see cref=&quot;T:System.Xml.XmlNode&quot; /&gt; (typically an &lt;see cref=&quot;T:System.Xml.XmlDocument&quot; /&gt;), or an &lt;see cref=&quot;T:System.Xml.XPath.XPathDocument&quot; /&gt; containing the data to be transformed.">Objet implémentant l'interface <see cref="T:System.Xml.XPath.IXPathNavigable" />. Dans le .NET Framework, il peut s’agir de <see cref="T:System.Xml.XmlNode" /> (généralement <see cref="T:System.Xml.XmlDocument" />) ou de <see cref="T:System.Xml.XPath.XPathDocument" /> contenant les données à transformer.</param>
      <param name="args" vsli:raw="An &lt;see cref=&quot;T:System.Xml.Xsl.XsltArgumentList&quot; /&gt; containing the namespace-qualified arguments used as input to the transformation.">
        <see cref="T:System.Xml.Xsl.XsltArgumentList" /> contenant des arguments qualifiés par un espace de noms, utilisés comme données d'entrée pour la transformation.</param>
      <returns vsli:raw="An &lt;see cref=&quot;T:System.Xml.XmlReader&quot; /&gt; containing the results of the transformation.">
        <see cref="T:System.Xml.XmlReader" /> contenant les résultats de la transformation.</returns>
    </member>
    <member name="M:System.Xml.Xsl.XslTransform.Transform(System.Xml.XPath.IXPathNavigable,System.Xml.Xsl.XsltArgumentList,System.IO.Stream)">
      <summary vsli:raw="Transforms the XML data in the &lt;see cref=&quot;T:System.Xml.XPath.IXPathNavigable&quot; /&gt; using the specified &lt;paramref name=&quot;args&quot; /&gt; and outputs the result to a &lt;see cref=&quot;T:System.IO.Stream&quot; /&gt;.">Transforme les données XML dans <see cref="T:System.Xml.XPath.IXPathNavigable" /> en utilisant les <paramref name="args" /> spécifiés et renvoie le résultat dans <see cref="T:System.IO.Stream" />.</summary>
      <param name="input" vsli:raw="An object implementing the &lt;see cref=&quot;T:System.Xml.XPath.IXPathNavigable&quot; /&gt; interface. In the .NET Framework, this can be either an &lt;see cref=&quot;T:System.Xml.XmlNode&quot; /&gt; (typically an &lt;see cref=&quot;T:System.Xml.XmlDocument&quot; /&gt;), or an &lt;see cref=&quot;T:System.Xml.XPath.XPathDocument&quot; /&gt; containing the data to be transformed.">Objet implémentant l'interface <see cref="T:System.Xml.XPath.IXPathNavigable" />. Dans le .NET Framework, il peut s’agir de <see cref="T:System.Xml.XmlNode" /> (généralement <see cref="T:System.Xml.XmlDocument" />) ou de <see cref="T:System.Xml.XPath.XPathDocument" /> contenant les données à transformer.</param>
      <param name="args" vsli:raw="An &lt;see cref=&quot;T:System.Xml.Xsl.XsltArgumentList&quot; /&gt; containing the namespace-qualified arguments used as input to the transformation.">
        <see cref="T:System.Xml.Xsl.XsltArgumentList" /> contenant des arguments qualifiés par un espace de noms, utilisés comme données d'entrée pour la transformation.</param>
      <param name="output" vsli:raw="The stream to which you want to output.">Flux dans lequel vous voulez générer le résultat.</param>
      <exception cref="T:System.InvalidOperationException" vsli:raw="There was an error processing the XSLT transformation.  &#xA;  &#xA; Note: This is a change in behavior from earlier versions. An &lt;see cref=&quot;T:System.Xml.Xsl.XsltException&quot; /&gt; is thrown if you are using Microsoft .NET Framework version 1.1 or earlier.">Une erreur s'est produite lors du traitement de la transformation XSLT.  
  
Remarque : il s'agit d'un changement de comportement par rapport aux versions précédentes. Une <see cref="T:System.Xml.Xsl.XsltException" /> est levée si vous utilisez Microsoft .NET Framework version 1.1 ou antérieure.</exception>
    </member>
    <member name="M:System.Xml.Xsl.XslTransform.Transform(System.Xml.XPath.IXPathNavigable,System.Xml.Xsl.XsltArgumentList,System.IO.Stream,System.Xml.XmlResolver)">
      <summary vsli:raw="Transforms the XML data in the &lt;see cref=&quot;T:System.Xml.XPath.IXPathNavigable&quot; /&gt; using the specified &lt;paramref name=&quot;args&quot; /&gt; and outputs the result to a &lt;see cref=&quot;T:System.IO.Stream&quot; /&gt;.">Transforme les données XML dans <see cref="T:System.Xml.XPath.IXPathNavigable" /> en utilisant les <paramref name="args" /> spécifiés et renvoie le résultat dans <see cref="T:System.IO.Stream" />.</summary>
      <param name="input" vsli:raw="An object implementing the &lt;see cref=&quot;T:System.Xml.XPath.IXPathNavigable&quot; /&gt; interface. In the .NET Framework, this can be either an &lt;see cref=&quot;T:System.Xml.XmlNode&quot; /&gt; (typically an &lt;see cref=&quot;T:System.Xml.XmlDocument&quot; /&gt;), or an &lt;see cref=&quot;T:System.Xml.XPath.XPathDocument&quot; /&gt; containing the data to be transformed.">Objet implémentant l'interface <see cref="T:System.Xml.XPath.IXPathNavigable" />. Dans le .NET Framework, il peut s’agir de <see cref="T:System.Xml.XmlNode" /> (généralement <see cref="T:System.Xml.XmlDocument" />) ou de <see cref="T:System.Xml.XPath.XPathDocument" /> contenant les données à transformer.</param>
      <param name="args" vsli:raw="An &lt;see cref=&quot;T:System.Xml.Xsl.XsltArgumentList&quot; /&gt; containing the namespace-qualified arguments used as input to the transformation.">
        <see cref="T:System.Xml.Xsl.XsltArgumentList" /> contenant des arguments qualifiés par un espace de noms, utilisés comme données d'entrée pour la transformation.</param>
      <param name="output" vsli:raw="The stream to which you want to output.">Flux dans lequel vous voulez générer le résultat.</param>
      <param name="resolver" vsli:raw="The &lt;see cref=&quot;T:System.Xml.XmlResolver&quot; /&gt; used to resolve the XSLT &lt;c&gt;document()&lt;/c&gt; function. If this is &lt;see langword=&quot;null&quot; /&gt;, the &lt;c&gt;document()&lt;/c&gt; function is not resolved.  &#xA;  &#xA; The &lt;see cref=&quot;T:System.Xml.XmlResolver&quot; /&gt; is not cached after the &lt;see cref=&quot;Overload:System.Xml.Xsl.XslTransform.Transform&quot; /&gt; method completes.">
        <see cref="T:System.Xml.XmlResolver" /> utilisé pour résoudre la fonction <c>document()</c> XSLT. S’il s’agit de <see langword="null" />, la fonction <c>document()</c> n’est pas résolue.  
  
<see cref="T:System.Xml.XmlResolver" /> n'est pas mis en cache à la fin de la méthode <see cref="Overload:System.Xml.Xsl.XslTransform.Transform" />.</param>
      <exception cref="T:System.InvalidOperationException" vsli:raw="There was an error processing the XSLT transformation.  &#xA;  &#xA; Note: This is a change in behavior from earlier versions. An &lt;see cref=&quot;T:System.Xml.Xsl.XsltException&quot; /&gt; is thrown if you are using Microsoft .NET Framework version 1.1 or earlier.">Une erreur s'est produite lors du traitement de la transformation XSLT.  
  
Remarque : il s'agit d'un changement de comportement par rapport aux versions précédentes. Une <see cref="T:System.Xml.Xsl.XsltException" /> est levée si vous utilisez Microsoft .NET Framework version 1.1 ou antérieure.</exception>
    </member>
    <member name="M:System.Xml.Xsl.XslTransform.Transform(System.Xml.XPath.IXPathNavigable,System.Xml.Xsl.XsltArgumentList,System.IO.TextWriter)">
      <summary vsli:raw="Transforms the XML data in the &lt;see cref=&quot;T:System.Xml.XPath.IXPathNavigable&quot; /&gt; using the specified &lt;paramref name=&quot;args&quot; /&gt; and outputs the result to a &lt;see cref=&quot;T:System.IO.TextWriter&quot; /&gt;.">Transforme les données XML dans <see cref="T:System.Xml.XPath.IXPathNavigable" /> en utilisant les <paramref name="args" /> spécifiés et renvoie le résultat dans <see cref="T:System.IO.TextWriter" />.</summary>
      <param name="input" vsli:raw="An object implementing the &lt;see cref=&quot;T:System.Xml.XPath.IXPathNavigable&quot; /&gt; interface. In the .NET Framework, this can be either an &lt;see cref=&quot;T:System.Xml.XmlNode&quot; /&gt; (typically an &lt;see cref=&quot;T:System.Xml.XmlDocument&quot; /&gt;), or an &lt;see cref=&quot;T:System.Xml.XPath.XPathDocument&quot; /&gt; containing the data to be transformed.">Objet implémentant l'interface <see cref="T:System.Xml.XPath.IXPathNavigable" />. Dans le .NET Framework, il peut s’agir de <see cref="T:System.Xml.XmlNode" /> (généralement <see cref="T:System.Xml.XmlDocument" />) ou de <see cref="T:System.Xml.XPath.XPathDocument" /> contenant les données à transformer.</param>
      <param name="args" vsli:raw="An &lt;see cref=&quot;T:System.Xml.Xsl.XsltArgumentList&quot; /&gt; containing the namespace-qualified arguments used as input to the transformation.">
        <see cref="T:System.Xml.Xsl.XsltArgumentList" /> contenant des arguments qualifiés par un espace de noms, utilisés comme données d'entrée pour la transformation.</param>
      <param name="output" vsli:raw="The &lt;see cref=&quot;T:System.IO.TextWriter&quot; /&gt; to which you want to output.">
        <see cref="T:System.IO.TextWriter" /> vers lequel vous souhaitez exporter.</param>
      <exception cref="T:System.InvalidOperationException" vsli:raw="There was an error processing the XSLT transformation.  &#xA;  &#xA; Note: This is a change in behavior from earlier versions. An &lt;see cref=&quot;T:System.Xml.Xsl.XsltException&quot; /&gt; is thrown if you are using Microsoft .NET Framework version 1.1 or earlier.">Une erreur s'est produite lors du traitement de la transformation XSLT.  
  
Remarque : il s'agit d'un changement de comportement par rapport aux versions précédentes. Une <see cref="T:System.Xml.Xsl.XsltException" /> est levée si vous utilisez Microsoft .NET Framework version 1.1 ou antérieure.</exception>
    </member>
    <member name="M:System.Xml.Xsl.XslTransform.Transform(System.Xml.XPath.IXPathNavigable,System.Xml.Xsl.XsltArgumentList,System.IO.TextWriter,System.Xml.XmlResolver)">
      <summary vsli:raw="Transforms the XML data in the &lt;see cref=&quot;T:System.Xml.XPath.IXPathNavigable&quot; /&gt; using the specified &lt;paramref name=&quot;args&quot; /&gt; and outputs the result to a &lt;see cref=&quot;T:System.IO.TextWriter&quot; /&gt;.">Transforme les données XML dans <see cref="T:System.Xml.XPath.IXPathNavigable" /> en utilisant les <paramref name="args" /> spécifiés et renvoie le résultat dans <see cref="T:System.IO.TextWriter" />.</summary>
      <param name="input" vsli:raw="An object implementing the &lt;see cref=&quot;T:System.Xml.XPath.IXPathNavigable&quot; /&gt; interface. In the .NET Framework, this can be either an &lt;see cref=&quot;T:System.Xml.XmlNode&quot; /&gt; (typically an &lt;see cref=&quot;T:System.Xml.XmlDocument&quot; /&gt;), or an &lt;see cref=&quot;T:System.Xml.XPath.XPathDocument&quot; /&gt; containing the data to be transformed.">Objet implémentant l'interface <see cref="T:System.Xml.XPath.IXPathNavigable" />. Dans le .NET Framework, il peut s’agir de <see cref="T:System.Xml.XmlNode" /> (généralement <see cref="T:System.Xml.XmlDocument" />) ou de <see cref="T:System.Xml.XPath.XPathDocument" /> contenant les données à transformer.</param>
      <param name="args" vsli:raw="An &lt;see cref=&quot;T:System.Xml.Xsl.XsltArgumentList&quot; /&gt; containing the namespace-qualified arguments used as input to the transformation.">
        <see cref="T:System.Xml.Xsl.XsltArgumentList" /> contenant des arguments qualifiés par un espace de noms, utilisés comme données d'entrée pour la transformation.</param>
      <param name="output" vsli:raw="The &lt;see cref=&quot;T:System.IO.TextWriter&quot; /&gt; to which you want to output.">
        <see cref="T:System.IO.TextWriter" /> vers lequel vous souhaitez exporter.</param>
      <param name="resolver" vsli:raw="The &lt;see cref=&quot;T:System.Xml.XmlResolver&quot; /&gt; used to resolve the XSLT &lt;c&gt;document()&lt;/c&gt; function. If this is &lt;see langword=&quot;null&quot; /&gt;, the &lt;c&gt;document()&lt;/c&gt; function is not resolved.  &#xA;  &#xA; The &lt;see cref=&quot;T:System.Xml.XmlResolver&quot; /&gt; is not cached after the &lt;see cref=&quot;M:System.Xml.Xsl.XslTransform.Transform(System.Xml.XPath.IXPathNavigable,System.Xml.Xsl.XsltArgumentList,System.IO.TextWriter,System.Xml.XmlResolver)&quot; /&gt; method completes.">
        <see cref="T:System.Xml.XmlResolver" /> utilisé pour résoudre la fonction <c>document()</c> XSLT. S’il s’agit de <see langword="null" />, la fonction <c>document()</c> n’est pas résolue.  
  
<see cref="T:System.Xml.XmlResolver" /> n'est pas mis en cache à la fin de la méthode <see cref="M:System.Xml.Xsl.XslTransform.Transform(System.Xml.XPath.IXPathNavigable,System.Xml.Xsl.XsltArgumentList,System.IO.TextWriter,System.Xml.XmlResolver)" />.</param>
      <exception cref="T:System.InvalidOperationException" vsli:raw="There was an error processing the XSLT transformation.  &#xA;  &#xA; Note: This is a change in behavior from earlier versions. An &lt;see cref=&quot;T:System.Xml.Xsl.XsltException&quot; /&gt; is thrown if you are using Microsoft .NET Framework version 1.1 or earlier.">Une erreur s'est produite lors du traitement de la transformation XSLT.  
  
Remarque : il s'agit d'un changement de comportement par rapport aux versions précédentes. Une <see cref="T:System.Xml.Xsl.XsltException" /> est levée si vous utilisez Microsoft .NET Framework version 1.1 ou antérieure.</exception>
    </member>
    <member name="M:System.Xml.Xsl.XslTransform.Transform(System.Xml.XPath.IXPathNavigable,System.Xml.Xsl.XsltArgumentList,System.Xml.XmlResolver)">
      <summary vsli:raw="Transforms the XML data in the &lt;see cref=&quot;T:System.Xml.XPath.IXPathNavigable&quot; /&gt; using the specified &lt;paramref name=&quot;args&quot; /&gt; and outputs the result to an &lt;see cref=&quot;T:System.Xml.XmlReader&quot; /&gt;.">Transforme les données XML dans <see cref="T:System.Xml.XPath.IXPathNavigable" /> en utilisant les <paramref name="args" /> spécifiés et renvoie le résultat dans <see cref="T:System.Xml.XmlReader" />.</summary>
      <param name="input" vsli:raw="An object implementing the &lt;see cref=&quot;T:System.Xml.XPath.IXPathNavigable&quot; /&gt; interface. In the .NET Framework, this can be either an &lt;see cref=&quot;T:System.Xml.XmlNode&quot; /&gt; (typically an &lt;see cref=&quot;T:System.Xml.XmlDocument&quot; /&gt;), or an &lt;see cref=&quot;T:System.Xml.XPath.XPathDocument&quot; /&gt; containing the data to be transformed.">Objet implémentant l'interface <see cref="T:System.Xml.XPath.IXPathNavigable" />. Dans le .NET Framework, il peut s’agir de <see cref="T:System.Xml.XmlNode" /> (généralement <see cref="T:System.Xml.XmlDocument" />) ou de <see cref="T:System.Xml.XPath.XPathDocument" /> contenant les données à transformer.</param>
      <param name="args" vsli:raw="An &lt;see cref=&quot;T:System.Xml.Xsl.XsltArgumentList&quot; /&gt; containing the namespace-qualified arguments used as input to the transformation.">
        <see cref="T:System.Xml.Xsl.XsltArgumentList" /> contenant des arguments qualifiés par un espace de noms, utilisés comme données d'entrée pour la transformation.</param>
      <param name="resolver" vsli:raw="The &lt;see cref=&quot;T:System.Xml.XmlResolver&quot; /&gt; used to resolve the XSLT &lt;c&gt;document()&lt;/c&gt; function. If this is &lt;see langword=&quot;null&quot; /&gt;, the &lt;c&gt;document()&lt;/c&gt; function is not resolved.  &#xA;  &#xA; The &lt;see cref=&quot;T:System.Xml.XmlResolver&quot; /&gt; is not cached after the &lt;see cref=&quot;M:System.Xml.Xsl.XslTransform.Transform(System.Xml.XPath.IXPathNavigable,System.Xml.Xsl.XsltArgumentList,System.Xml.XmlResolver)&quot; /&gt; method completes.">
        <see cref="T:System.Xml.XmlResolver" /> utilisé pour résoudre la fonction <c>document()</c> XSLT. S’il s’agit de <see langword="null" />, la fonction <c>document()</c> n’est pas résolue.  
  
<see cref="T:System.Xml.XmlResolver" /> n'est pas mis en cache à la fin de la méthode <see cref="M:System.Xml.Xsl.XslTransform.Transform(System.Xml.XPath.IXPathNavigable,System.Xml.Xsl.XsltArgumentList,System.Xml.XmlResolver)" />.</param>
      <returns vsli:raw="An &lt;see cref=&quot;T:System.Xml.XmlReader&quot; /&gt; containing the results of the transformation.">
        <see cref="T:System.Xml.XmlReader" /> contenant les résultats de la transformation.</returns>
    </member>
    <member name="M:System.Xml.Xsl.XslTransform.Transform(System.Xml.XPath.IXPathNavigable,System.Xml.Xsl.XsltArgumentList,System.Xml.XmlWriter)">
      <summary vsli:raw="Transforms the XML data in the &lt;see cref=&quot;T:System.Xml.XPath.IXPathNavigable&quot; /&gt; using the specified &lt;paramref name=&quot;args&quot; /&gt; and outputs the result to an &lt;see cref=&quot;T:System.Xml.XmlWriter&quot; /&gt;.">Transforme les données XML dans <see cref="T:System.Xml.XPath.IXPathNavigable" /> en utilisant les <paramref name="args" /> spécifiés et renvoie le résultat dans <see cref="T:System.Xml.XmlWriter" />.</summary>
      <param name="input" vsli:raw="An object implementing the &lt;see cref=&quot;T:System.Xml.XPath.IXPathNavigable&quot; /&gt; interface. In the .NET Framework, this can be either an &lt;see cref=&quot;T:System.Xml.XmlNode&quot; /&gt; (typically an &lt;see cref=&quot;T:System.Xml.XmlDocument&quot; /&gt;), or an &lt;see cref=&quot;T:System.Xml.XPath.XPathDocument&quot; /&gt; containing the data to be transformed.">Objet implémentant l'interface <see cref="T:System.Xml.XPath.IXPathNavigable" />. Dans le .NET Framework, il peut s’agir de <see cref="T:System.Xml.XmlNode" /> (généralement <see cref="T:System.Xml.XmlDocument" />) ou de <see cref="T:System.Xml.XPath.XPathDocument" /> contenant les données à transformer.</param>
      <param name="args" vsli:raw="An &lt;see cref=&quot;T:System.Xml.Xsl.XsltArgumentList&quot; /&gt; containing the namespace-qualified arguments used as input to the transformation.">
        <see cref="T:System.Xml.Xsl.XsltArgumentList" /> contenant des arguments qualifiés par un espace de noms, utilisés comme données d'entrée pour la transformation.</param>
      <param name="output" vsli:raw="The &lt;see cref=&quot;T:System.Xml.XmlWriter&quot; /&gt; to which you want to output.">
        <see cref="T:System.Xml.XmlWriter" /> vers lequel vous souhaitez exporter.</param>
      <exception cref="T:System.InvalidOperationException" vsli:raw="There was an error processing the XSLT transformation.  &#xA;  &#xA; Note: This is a change in behavior from earlier versions. An &lt;see cref=&quot;T:System.Xml.Xsl.XsltException&quot; /&gt; is thrown if you are using Microsoft .NET Framework version 1.1 or earlier.">Une erreur s'est produite lors du traitement de la transformation XSLT.  
  
Remarque : il s'agit d'un changement de comportement par rapport aux versions précédentes. Une <see cref="T:System.Xml.Xsl.XsltException" /> est levée si vous utilisez Microsoft .NET Framework version 1.1 ou antérieure.</exception>
    </member>
    <member name="M:System.Xml.Xsl.XslTransform.Transform(System.Xml.XPath.IXPathNavigable,System.Xml.Xsl.XsltArgumentList,System.Xml.XmlWriter,System.Xml.XmlResolver)">
      <summary vsli:raw="Transforms the XML data in the &lt;see cref=&quot;T:System.Xml.XPath.IXPathNavigable&quot; /&gt; using the specified &lt;paramref name=&quot;args&quot; /&gt; and outputs the result to an &lt;see cref=&quot;T:System.Xml.XmlWriter&quot; /&gt;.">Transforme les données XML dans <see cref="T:System.Xml.XPath.IXPathNavigable" /> en utilisant les <paramref name="args" /> spécifiés et renvoie le résultat dans <see cref="T:System.Xml.XmlWriter" />.</summary>
      <param name="input" vsli:raw="An object implementing the &lt;see cref=&quot;T:System.Xml.XPath.IXPathNavigable&quot; /&gt; interface. In the .NET Framework, this can be either an &lt;see cref=&quot;T:System.Xml.XmlNode&quot; /&gt; (typically an &lt;see cref=&quot;T:System.Xml.XmlDocument&quot; /&gt;), or an &lt;see cref=&quot;T:System.Xml.XPath.XPathDocument&quot; /&gt; containing the data to be transformed.">Objet implémentant l'interface <see cref="T:System.Xml.XPath.IXPathNavigable" />. Dans le .NET Framework, il peut s’agir de <see cref="T:System.Xml.XmlNode" /> (généralement <see cref="T:System.Xml.XmlDocument" />) ou de <see cref="T:System.Xml.XPath.XPathDocument" /> contenant les données à transformer.</param>
      <param name="args" vsli:raw="An &lt;see cref=&quot;T:System.Xml.Xsl.XsltArgumentList&quot; /&gt; containing the namespace-qualified arguments used as input to the transformation.">
        <see cref="T:System.Xml.Xsl.XsltArgumentList" /> contenant des arguments qualifiés par un espace de noms, utilisés comme données d'entrée pour la transformation.</param>
      <param name="output" vsli:raw="The &lt;see cref=&quot;T:System.Xml.XmlWriter&quot; /&gt; to which you want to output.">
        <see cref="T:System.Xml.XmlWriter" /> vers lequel vous souhaitez exporter.</param>
      <param name="resolver" vsli:raw="The &lt;see cref=&quot;T:System.Xml.XmlResolver&quot; /&gt; used to resolve the XSLT &lt;c&gt;document()&lt;/c&gt; function. If this is &lt;see langword=&quot;null&quot; /&gt;, the &lt;c&gt;document()&lt;/c&gt; function is not resolved.  &#xA;  &#xA; The &lt;see cref=&quot;T:System.Xml.XmlResolver&quot; /&gt; is not cached after the &lt;see cref=&quot;M:System.Xml.Xsl.XslTransform.Transform(System.Xml.XPath.IXPathNavigable,System.Xml.Xsl.XsltArgumentList,System.Xml.XmlWriter,System.Xml.XmlResolver)&quot; /&gt; method completes.">
        <see cref="T:System.Xml.XmlResolver" /> utilisé pour résoudre la fonction <c>document()</c> XSLT. S’il s’agit de <see langword="null" />, la fonction <c>document()</c> n’est pas résolue.  
  
<see cref="T:System.Xml.XmlResolver" /> n'est pas mis en cache à la fin de la méthode <see cref="M:System.Xml.Xsl.XslTransform.Transform(System.Xml.XPath.IXPathNavigable,System.Xml.Xsl.XsltArgumentList,System.Xml.XmlWriter,System.Xml.XmlResolver)" />.</param>
      <exception cref="T:System.InvalidOperationException" vsli:raw="There was an error processing the XSLT transformation.  &#xA;  &#xA; Note: This is a change in behavior from earlier versions. An &lt;see cref=&quot;T:System.Xml.Xsl.XsltException&quot; /&gt; is thrown if you are using Microsoft .NET Framework version 1.1 or earlier.">Une erreur s'est produite lors du traitement de la transformation XSLT.  
  
Remarque : il s'agit d'un changement de comportement par rapport aux versions précédentes. Une <see cref="T:System.Xml.Xsl.XsltException" /> est levée si vous utilisez Microsoft .NET Framework version 1.1 ou antérieure.</exception>
    </member>
    <member name="M:System.Xml.Xsl.XslTransform.Transform(System.Xml.XPath.XPathNavigator,System.Xml.Xsl.XsltArgumentList)">
      <summary vsli:raw="Transforms the XML data in the &lt;see cref=&quot;T:System.Xml.XPath.XPathNavigator&quot; /&gt; using the specified &lt;paramref name=&quot;args&quot; /&gt; and outputs the result to an &lt;see cref=&quot;T:System.Xml.XmlReader&quot; /&gt;.">Transforme les données XML dans <see cref="T:System.Xml.XPath.XPathNavigator" /> en utilisant les <paramref name="args" /> spécifiés et renvoie le résultat dans <see cref="T:System.Xml.XmlReader" />.</summary>
      <param name="input" vsli:raw="An &lt;see cref=&quot;T:System.Xml.XPath.XPathNavigator&quot; /&gt; containing the data to be transformed.">
        <see cref="T:System.Xml.XPath.XPathNavigator" /> contenant les données à transformer.</param>
      <param name="args" vsli:raw="An &lt;see cref=&quot;T:System.Xml.Xsl.XsltArgumentList&quot; /&gt; containing the namespace-qualified arguments used as input to the transformation.">
        <see cref="T:System.Xml.Xsl.XsltArgumentList" /> contenant des arguments qualifiés par un espace de noms, utilisés comme données d'entrée pour la transformation.</param>
      <exception cref="T:System.InvalidOperationException" vsli:raw="There was an error processing the XSLT transformation.  &#xA;  &#xA; Note: This is a change in behavior from earlier versions. An &lt;see cref=&quot;T:System.Xml.Xsl.XsltException&quot; /&gt; is thrown if you are using Microsoft .NET Framework version 1.1 or earlier.">Une erreur s'est produite lors du traitement de la transformation XSLT.  
  
Remarque : il s'agit d'un changement de comportement par rapport aux versions précédentes. Une <see cref="T:System.Xml.Xsl.XsltException" /> est levée si vous utilisez Microsoft .NET Framework version 1.1 ou antérieure.</exception>
      <returns vsli:raw="An &lt;see cref=&quot;T:System.Xml.XmlReader&quot; /&gt; containing the results of the transformation.">
        <see cref="T:System.Xml.XmlReader" /> contenant les résultats de la transformation.</returns>
    </member>
    <member name="M:System.Xml.Xsl.XslTransform.Transform(System.Xml.XPath.XPathNavigator,System.Xml.Xsl.XsltArgumentList,System.IO.Stream)">
      <summary vsli:raw="Transforms the XML data in the &lt;see cref=&quot;T:System.Xml.XPath.XPathNavigator&quot; /&gt; using the specified &lt;paramref name=&quot;args&quot; /&gt; and outputs the result to a &lt;see cref=&quot;T:System.IO.Stream&quot; /&gt;.">Transforme les données XML dans <see cref="T:System.Xml.XPath.XPathNavigator" /> en utilisant les <paramref name="args" /> spécifiés et renvoie le résultat dans <see cref="T:System.IO.Stream" />.</summary>
      <param name="input" vsli:raw="An &lt;see cref=&quot;T:System.Xml.XPath.XPathNavigator&quot; /&gt; containing the data to be transformed.">
        <see cref="T:System.Xml.XPath.XPathNavigator" /> contenant les données à transformer.</param>
      <param name="args" vsli:raw="An &lt;see cref=&quot;T:System.Xml.Xsl.XsltArgumentList&quot; /&gt; containing the namespace-qualified arguments used as input to the transformation.">
        <see cref="T:System.Xml.Xsl.XsltArgumentList" /> contenant des arguments qualifiés par un espace de noms, utilisés comme données d'entrée pour la transformation.</param>
      <param name="output" vsli:raw="The stream to which you want to output.">Flux dans lequel vous voulez générer le résultat.</param>
      <exception cref="T:System.InvalidOperationException" vsli:raw="There was an error processing the XSLT transformation.  &#xA;  &#xA; Note: This is a change in behavior from earlier versions. An &lt;see cref=&quot;T:System.Xml.Xsl.XsltException&quot; /&gt; is thrown if you are using Microsoft .NET Framework version 1.1 or earlier.">Une erreur s'est produite lors du traitement de la transformation XSLT.  
  
Remarque : il s'agit d'un changement de comportement par rapport aux versions précédentes. Une <see cref="T:System.Xml.Xsl.XsltException" /> est levée si vous utilisez Microsoft .NET Framework version 1.1 ou antérieure.</exception>
    </member>
    <member name="M:System.Xml.Xsl.XslTransform.Transform(System.Xml.XPath.XPathNavigator,System.Xml.Xsl.XsltArgumentList,System.IO.Stream,System.Xml.XmlResolver)">
      <summary vsli:raw="Transforms the XML data in the &lt;see cref=&quot;T:System.Xml.XPath.XPathNavigator&quot; /&gt; using the specified &lt;paramref name=&quot;args&quot; /&gt; and outputs the result to a &lt;see cref=&quot;T:System.IO.Stream&quot; /&gt;.">Transforme les données XML dans <see cref="T:System.Xml.XPath.XPathNavigator" /> en utilisant les <paramref name="args" /> spécifiés et renvoie le résultat dans <see cref="T:System.IO.Stream" />.</summary>
      <param name="input" vsli:raw="An &lt;see cref=&quot;T:System.Xml.XPath.XPathNavigator&quot; /&gt; containing the data to be transformed.">
        <see cref="T:System.Xml.XPath.XPathNavigator" /> contenant les données à transformer.</param>
      <param name="args" vsli:raw="An &lt;see cref=&quot;T:System.Xml.Xsl.XsltArgumentList&quot; /&gt; containing the namespace-qualified arguments used as input to the transformation.">
        <see cref="T:System.Xml.Xsl.XsltArgumentList" /> contenant des arguments qualifiés par un espace de noms, utilisés comme données d'entrée pour la transformation.</param>
      <param name="output" vsli:raw="The stream to which you want to output.">Flux dans lequel vous voulez générer le résultat.</param>
      <param name="resolver" vsli:raw="The &lt;see cref=&quot;T:System.Xml.XmlResolver&quot; /&gt; used to resolve the XSLT &lt;c&gt;document()&lt;/c&gt; function. If this is &lt;see langword=&quot;null&quot; /&gt;, the &lt;c&gt;document()&lt;/c&gt; function is not resolved.  &#xA;  &#xA; The &lt;see cref=&quot;T:System.Xml.XmlResolver&quot; /&gt; is not cached after the &lt;see cref=&quot;M:System.Xml.Xsl.XslTransform.Transform(System.Xml.XPath.XPathNavigator,System.Xml.Xsl.XsltArgumentList,System.IO.Stream,System.Xml.XmlResolver)&quot; /&gt; method completes.">
        <see cref="T:System.Xml.XmlResolver" /> utilisé pour résoudre la fonction <c>document()</c> XSLT. S’il s’agit de <see langword="null" />, la fonction <c>document()</c> n’est pas résolue.  
  
<see cref="T:System.Xml.XmlResolver" /> n'est pas mis en cache à la fin de la méthode <see cref="M:System.Xml.Xsl.XslTransform.Transform(System.Xml.XPath.XPathNavigator,System.Xml.Xsl.XsltArgumentList,System.IO.Stream,System.Xml.XmlResolver)" />.</param>
      <exception cref="T:System.InvalidOperationException" vsli:raw="There was an error processing the XSLT transformation.  &#xA;  &#xA; Note: This is a change in behavior from earlier versions. An &lt;see cref=&quot;T:System.Xml.Xsl.XsltException&quot; /&gt; is thrown if you are using Microsoft .NET Framework version 1.1 or earlier.">Une erreur s'est produite lors du traitement de la transformation XSLT.  
  
Remarque : il s'agit d'un changement de comportement par rapport aux versions précédentes. Une <see cref="T:System.Xml.Xsl.XsltException" /> est levée si vous utilisez Microsoft .NET Framework version 1.1 ou antérieure.</exception>
    </member>
    <member name="M:System.Xml.Xsl.XslTransform.Transform(System.Xml.XPath.XPathNavigator,System.Xml.Xsl.XsltArgumentList,System.IO.TextWriter)">
      <summary vsli:raw="Transforms the XML data in the &lt;see cref=&quot;T:System.Xml.XPath.XPathNavigator&quot; /&gt; using the specified &lt;paramref name=&quot;args&quot; /&gt; and outputs the result to a &lt;see cref=&quot;T:System.IO.TextWriter&quot; /&gt;.">Transforme les données XML dans <see cref="T:System.Xml.XPath.XPathNavigator" /> en utilisant les <paramref name="args" /> spécifiés et renvoie le résultat dans <see cref="T:System.IO.TextWriter" />.</summary>
      <param name="input" vsli:raw="An &lt;see cref=&quot;T:System.Xml.XPath.XPathNavigator&quot; /&gt; containing the data to be transformed.">
        <see cref="T:System.Xml.XPath.XPathNavigator" /> contenant les données à transformer.</param>
      <param name="args" vsli:raw="An &lt;see cref=&quot;T:System.Xml.Xsl.XsltArgumentList&quot; /&gt; containing the namespace-qualified arguments used as input to the transformation.">
        <see cref="T:System.Xml.Xsl.XsltArgumentList" /> contenant des arguments qualifiés par un espace de noms, utilisés comme données d'entrée pour la transformation.</param>
      <param name="output" vsli:raw="The &lt;see cref=&quot;T:System.IO.TextWriter&quot; /&gt; to which you want to output.">
        <see cref="T:System.IO.TextWriter" /> vers lequel vous souhaitez exporter.</param>
      <exception cref="T:System.InvalidOperationException" vsli:raw="There was an error processing the XSLT transformation.  &#xA;  &#xA; Note: This is a change in behavior from earlier versions. An &lt;see cref=&quot;T:System.Xml.Xsl.XsltException&quot; /&gt; is thrown if you are using Microsoft .NET Framework version 1.1 or earlier.">Une erreur s'est produite lors du traitement de la transformation XSLT.  
  
Remarque : il s'agit d'un changement de comportement par rapport aux versions précédentes. Une <see cref="T:System.Xml.Xsl.XsltException" /> est levée si vous utilisez Microsoft .NET Framework version 1.1 ou antérieure.</exception>
    </member>
    <member name="M:System.Xml.Xsl.XslTransform.Transform(System.Xml.XPath.XPathNavigator,System.Xml.Xsl.XsltArgumentList,System.IO.TextWriter,System.Xml.XmlResolver)">
      <summary vsli:raw="Transforms the XML data in the &lt;see cref=&quot;T:System.Xml.XPath.XPathNavigator&quot; /&gt; using the specified &lt;paramref name=&quot;args&quot; /&gt; and outputs the result to a &lt;see cref=&quot;T:System.IO.TextWriter&quot; /&gt;.">Transforme les données XML dans <see cref="T:System.Xml.XPath.XPathNavigator" /> en utilisant les <paramref name="args" /> spécifiés et renvoie le résultat dans <see cref="T:System.IO.TextWriter" />.</summary>
      <param name="input" vsli:raw="An &lt;see cref=&quot;T:System.Xml.XPath.XPathNavigator&quot; /&gt; containing the data to be transformed.">
        <see cref="T:System.Xml.XPath.XPathNavigator" /> contenant les données à transformer.</param>
      <param name="args" vsli:raw="An &lt;see cref=&quot;T:System.Xml.Xsl.XsltArgumentList&quot; /&gt; containing the namespace-qualified arguments used as input to the transformation.">
        <see cref="T:System.Xml.Xsl.XsltArgumentList" /> contenant des arguments qualifiés par un espace de noms, utilisés comme données d'entrée pour la transformation.</param>
      <param name="output" vsli:raw="The &lt;see cref=&quot;T:System.IO.TextWriter&quot; /&gt; to which you want to output.">
        <see cref="T:System.IO.TextWriter" /> vers lequel vous souhaitez exporter.</param>
      <param name="resolver" vsli:raw="The &lt;see cref=&quot;T:System.Xml.XmlResolver&quot; /&gt; used to resolve the XSLT &lt;c&gt;document()&lt;/c&gt; function. If this is &lt;see langword=&quot;null&quot; /&gt;, the &lt;c&gt;document()&lt;/c&gt; function is not resolved.  &#xA;  &#xA; The &lt;see cref=&quot;T:System.Xml.XmlResolver&quot; /&gt; is not cached after the &lt;see cref=&quot;M:System.Xml.Xsl.XslTransform.Transform(System.Xml.XPath.XPathNavigator,System.Xml.Xsl.XsltArgumentList,System.IO.TextWriter,System.Xml.XmlResolver)&quot; /&gt; method completes.">
        <see cref="T:System.Xml.XmlResolver" /> utilisé pour résoudre la fonction <c>document()</c> XSLT. S’il s’agit de <see langword="null" />, la fonction <c>document()</c> n’est pas résolue.  
  
<see cref="T:System.Xml.XmlResolver" /> n'est pas mis en cache à la fin de la méthode <see cref="M:System.Xml.Xsl.XslTransform.Transform(System.Xml.XPath.XPathNavigator,System.Xml.Xsl.XsltArgumentList,System.IO.TextWriter,System.Xml.XmlResolver)" />.</param>
      <exception cref="T:System.InvalidOperationException" vsli:raw="There was an error processing the XSLT transformation.  &#xA;  &#xA; Note: This is a change in behavior from earlier versions. An &lt;see cref=&quot;T:System.Xml.Xsl.XsltException&quot; /&gt; is thrown if you are using Microsoft .NET Framework version 1.1 or earlier.">Une erreur s'est produite lors du traitement de la transformation XSLT.  
  
Remarque : il s'agit d'un changement de comportement par rapport aux versions précédentes. Une <see cref="T:System.Xml.Xsl.XsltException" /> est levée si vous utilisez Microsoft .NET Framework version 1.1 ou antérieure.</exception>
    </member>
    <member name="M:System.Xml.Xsl.XslTransform.Transform(System.Xml.XPath.XPathNavigator,System.Xml.Xsl.XsltArgumentList,System.Xml.XmlResolver)">
      <summary vsli:raw="Transforms the XML data in the &lt;see cref=&quot;T:System.Xml.XPath.XPathNavigator&quot; /&gt; using the specified &lt;paramref name=&quot;args&quot; /&gt; and outputs the result to an &lt;see cref=&quot;T:System.Xml.XmlReader&quot; /&gt;.">Transforme les données XML dans <see cref="T:System.Xml.XPath.XPathNavigator" /> en utilisant les <paramref name="args" /> spécifiés et renvoie le résultat dans <see cref="T:System.Xml.XmlReader" />.</summary>
      <param name="input" vsli:raw="An &lt;see cref=&quot;T:System.Xml.XPath.XPathNavigator&quot; /&gt; containing the data to be transformed.">
        <see cref="T:System.Xml.XPath.XPathNavigator" /> contenant les données à transformer.</param>
      <param name="args" vsli:raw="An &lt;see cref=&quot;T:System.Xml.Xsl.XsltArgumentList&quot; /&gt; containing the namespace-qualified arguments used as input to the transformation.">
        <see cref="T:System.Xml.Xsl.XsltArgumentList" /> contenant des arguments qualifiés par un espace de noms, utilisés comme données d'entrée pour la transformation.</param>
      <param name="resolver" vsli:raw="The &lt;see cref=&quot;T:System.Xml.XmlResolver&quot; /&gt; used to resolve the XSLT &lt;c&gt;document()&lt;/c&gt; function. If this is &lt;see langword=&quot;null&quot; /&gt;, the &lt;c&gt;document()&lt;/c&gt; function is not resolved.  &#xA;  &#xA; The &lt;see cref=&quot;T:System.Xml.XmlResolver&quot; /&gt; is not cached after the &lt;see cref=&quot;M:System.Xml.Xsl.XslTransform.Transform(System.Xml.XPath.XPathNavigator,System.Xml.Xsl.XsltArgumentList,System.Xml.XmlResolver)&quot; /&gt; method completes.">
        <see cref="T:System.Xml.XmlResolver" /> utilisé pour résoudre la fonction <c>document()</c> XSLT. S’il s’agit de <see langword="null" />, la fonction <c>document()</c> n’est pas résolue.  
  
<see cref="T:System.Xml.XmlResolver" /> n'est pas mis en cache à la fin de la méthode <see cref="M:System.Xml.Xsl.XslTransform.Transform(System.Xml.XPath.XPathNavigator,System.Xml.Xsl.XsltArgumentList,System.Xml.XmlResolver)" />.</param>
      <exception cref="T:System.InvalidOperationException" vsli:raw="There was an error processing the XSLT transformation.  &#xA;  &#xA; Note: This is a change in behavior from earlier versions. An &lt;see cref=&quot;T:System.Xml.Xsl.XsltException&quot; /&gt; is thrown if you are using Microsoft .NET Framework version 1.1 or earlier.">Une erreur s'est produite lors du traitement de la transformation XSLT.  
  
Remarque : il s'agit d'un changement de comportement par rapport aux versions précédentes. Une <see cref="T:System.Xml.Xsl.XsltException" /> est levée si vous utilisez Microsoft .NET Framework version 1.1 ou antérieure.</exception>
      <returns vsli:raw="An &lt;see cref=&quot;T:System.Xml.XmlReader&quot; /&gt; containing the results of the transformation.">
        <see cref="T:System.Xml.XmlReader" /> contenant les résultats de la transformation.</returns>
    </member>
    <member name="M:System.Xml.Xsl.XslTransform.Transform(System.Xml.XPath.XPathNavigator,System.Xml.Xsl.XsltArgumentList,System.Xml.XmlWriter)">
      <summary vsli:raw="Transforms the XML data in the &lt;see cref=&quot;T:System.Xml.XPath.XPathNavigator&quot; /&gt; using the specified args and outputs the result to an &lt;see cref=&quot;T:System.Xml.XmlWriter&quot; /&gt;.">Convertit les données XML spécifiées dans <see cref="T:System.Xml.XPath.XPathNavigator" /> en utilisant les arguments spécifiés et renvoie le résultat dans <see cref="T:System.Xml.XmlWriter" />.</summary>
      <param name="input" vsli:raw="An &lt;see cref=&quot;T:System.Xml.XPath.XPathNavigator&quot; /&gt; containing the data to be transformed.">
        <see cref="T:System.Xml.XPath.XPathNavigator" /> contenant les données à transformer.</param>
      <param name="args" vsli:raw="An &lt;see cref=&quot;T:System.Xml.Xsl.XsltArgumentList&quot; /&gt; containing the namespace-qualified arguments used as input to the transformation.">
        <see cref="T:System.Xml.Xsl.XsltArgumentList" /> contenant des arguments qualifiés par un espace de noms, utilisés comme données d'entrée pour la transformation.</param>
      <param name="output" vsli:raw="The &lt;see cref=&quot;T:System.Xml.XmlWriter&quot; /&gt; to which you want to output.">
        <see cref="T:System.Xml.XmlWriter" /> vers lequel vous souhaitez exporter.</param>
      <exception cref="T:System.InvalidOperationException" vsli:raw="There was an error processing the XSLT transformation.  &#xA;  &#xA; Note: This is a change in behavior from earlier versions. An &lt;see cref=&quot;T:System.Xml.Xsl.XsltException&quot; /&gt; is thrown if you are using Microsoft .NET Framework version 1.1 or earlier.">Une erreur s'est produite lors du traitement de la transformation XSLT.  
  
Remarque : il s'agit d'un changement de comportement par rapport aux versions précédentes. Une <see cref="T:System.Xml.Xsl.XsltException" /> est levée si vous utilisez Microsoft .NET Framework version 1.1 ou antérieure.</exception>
    </member>
    <member name="M:System.Xml.Xsl.XslTransform.Transform(System.Xml.XPath.XPathNavigator,System.Xml.Xsl.XsltArgumentList,System.Xml.XmlWriter,System.Xml.XmlResolver)">
      <summary vsli:raw="Transforms the XML data in the &lt;see cref=&quot;T:System.Xml.XPath.XPathNavigator&quot; /&gt; using the specified args and outputs the result to an &lt;see cref=&quot;T:System.Xml.XmlWriter&quot; /&gt;.">Convertit les données XML spécifiées dans <see cref="T:System.Xml.XPath.XPathNavigator" /> en utilisant les arguments spécifiés et renvoie le résultat dans <see cref="T:System.Xml.XmlWriter" />.</summary>
      <param name="input" vsli:raw="An &lt;see cref=&quot;T:System.Xml.XPath.XPathNavigator&quot; /&gt; containing the data to be transformed.">
        <see cref="T:System.Xml.XPath.XPathNavigator" /> contenant les données à transformer.</param>
      <param name="args" vsli:raw="An &lt;see cref=&quot;T:System.Xml.Xsl.XsltArgumentList&quot; /&gt; containing the namespace-qualified arguments used as input to the transformation.">
        <see cref="T:System.Xml.Xsl.XsltArgumentList" /> contenant des arguments qualifiés par un espace de noms, utilisés comme données d'entrée pour la transformation.</param>
      <param name="output" vsli:raw="The &lt;see cref=&quot;T:System.Xml.XmlWriter&quot; /&gt; to which you want to output.">
        <see cref="T:System.Xml.XmlWriter" /> vers lequel vous souhaitez exporter.</param>
      <param name="resolver" vsli:raw="The &lt;see cref=&quot;T:System.Xml.XmlResolver&quot; /&gt; used to resolve the XSLT &lt;c&gt;document()&lt;/c&gt; function. If this is &lt;see langword=&quot;null&quot; /&gt;, the &lt;c&gt;document()&lt;/c&gt; function is not resolved.  &#xA;  &#xA; The &lt;see cref=&quot;T:System.Xml.XmlResolver&quot; /&gt; is not cached after the &lt;see cref=&quot;M:System.Xml.Xsl.XslTransform.Transform(System.Xml.XPath.XPathNavigator,System.Xml.Xsl.XsltArgumentList,System.Xml.XmlWriter,System.Xml.XmlResolver)&quot; /&gt; method completes.">
        <see cref="T:System.Xml.XmlResolver" /> utilisé pour résoudre la fonction <c>document()</c> XSLT. S’il s’agit de <see langword="null" />, la fonction <c>document()</c> n’est pas résolue.  
  
<see cref="T:System.Xml.XmlResolver" /> n'est pas mis en cache à la fin de la méthode <see cref="M:System.Xml.Xsl.XslTransform.Transform(System.Xml.XPath.XPathNavigator,System.Xml.Xsl.XsltArgumentList,System.Xml.XmlWriter,System.Xml.XmlResolver)" />.</param>
      <exception cref="T:System.InvalidOperationException" vsli:raw="There was an error processing the XSLT transformation.  &#xA;  &#xA; Note: This is a change in behavior from earlier versions. An &lt;see cref=&quot;T:System.Xml.Xsl.XsltException&quot; /&gt; is thrown if you are using Microsoft .NET Framework version 1.1 or earlier.">Une erreur s'est produite lors du traitement de la transformation XSLT.  
  
Remarque : il s'agit d'un changement de comportement par rapport aux versions précédentes. Une <see cref="T:System.Xml.Xsl.XsltException" /> est levée si vous utilisez Microsoft .NET Framework version 1.1 ou antérieure.</exception>
    </member>
    <member name="P:System.Xml.Xsl.XslTransform.XmlResolver">
      <summary vsli:raw="Sets the &lt;see cref=&quot;T:System.Xml.XmlResolver&quot; /&gt; used to resolve external resources when the &lt;see cref=&quot;Overload:System.Xml.Xsl.XslTransform.Transform&quot; /&gt; method is called.">Définit le <see cref="T:System.Xml.XmlResolver" /> utilisé pour résoudre les ressources externes lorsque la méthode <see cref="Overload:System.Xml.Xsl.XslTransform.Transform" /> est appelée.</summary>
      <returns vsli:raw="The &lt;see cref=&quot;T:System.Xml.XmlResolver&quot; /&gt; to use during transformation. If set to &lt;see langword=&quot;null&quot; /&gt;, the XSLT &lt;c&gt;document()&lt;/c&gt; function is not resolved.">
        <see cref="T:System.Xml.XmlResolver" /> à utiliser pendant la transformation. Si la valeur <see langword="null" /> est, la fonction <c>document XSLT ()</c> n’est pas résolue.</returns>
    </member>
    <member name="T:System.Xml.Xsl.XsltSettings">
      <summary vsli:raw="Specifies the XSLT features to support during execution of the XSLT style sheet.">Spécifie les fonctionnalités XSLT à prendre en charge lors de l'exécution de la feuille de style XSLT.</summary>
    </member>
    <member name="M:System.Xml.Xsl.XsltSettings.#ctor">
      <summary vsli:raw="Initializes a new instance of the &lt;see cref=&quot;T:System.Xml.Xsl.XsltSettings&quot; /&gt; class with default settings.">Initialise une nouvelle instance de la classe <see cref="T:System.Xml.Xsl.XsltSettings" /> avec les paramètres par défaut.</summary>
    </member>
    <member name="M:System.Xml.Xsl.XsltSettings.#ctor(System.Boolean,System.Boolean)">
      <summary vsli:raw="Initializes a new instance of the &lt;see cref=&quot;T:System.Xml.Xsl.XsltSettings&quot; /&gt; class with the specified settings.">Initialise une nouvelle instance de la classe <see cref="T:System.Xml.Xsl.XsltSettings" /> avec les paramètres spécifiés.</summary>
      <param name="enableDocumentFunction" vsli:raw="&lt;see langword=&quot;true&quot; /&gt; to enable support for the XSLT &lt;c&gt;document()&lt;/c&gt; function; otherwise, &lt;see langword=&quot;false&quot; /&gt;.">
        <see langword="true" /> pour activer la prise en charge de la fonction <c>document()</c> XSLT ; sinon, <see langword="false" />.</param>
      <param name="enableScript" vsli:raw="&lt;see langword=&quot;true&quot; /&gt; to enable support for embedded scripts blocks; otherwise, &lt;see langword=&quot;false&quot; /&gt;.">
        <see langword="true" /> pour activer la prise en charge des blocs de scripts incorporés ; sinon, <see langword="false" />.</param>
    </member>
    <member name="P:System.Xml.Xsl.XsltSettings.Default">
      <summary vsli:raw="Gets an &lt;see cref=&quot;T:System.Xml.Xsl.XsltSettings&quot; /&gt; object with default settings. Support for the XSLT &lt;c&gt;document()&lt;/c&gt; function and embedded script blocks is disabled.">Obtient un objet <see cref="T:System.Xml.Xsl.XsltSettings" /> avec les paramètres par défaut. La prise en charge de la fonction <c>document()</c> XSLT et des blocs de script incorporés est désactivée.</summary>
      <returns vsli:raw="An &lt;see cref=&quot;T:System.Xml.Xsl.XsltSettings&quot; /&gt; object with the &lt;see cref=&quot;P:System.Xml.Xsl.XsltSettings.EnableDocumentFunction&quot; /&gt; and &lt;see cref=&quot;P:System.Xml.Xsl.XsltSettings.EnableScript&quot; /&gt; properties set to &lt;see langword=&quot;false&quot; /&gt;.">Objet <see cref="T:System.Xml.Xsl.XsltSettings" /> dont les propriétés <see cref="P:System.Xml.Xsl.XsltSettings.EnableDocumentFunction" /> et <see cref="P:System.Xml.Xsl.XsltSettings.EnableScript" /> ont la valeur <see langword="false" />.</returns>
    </member>
    <member name="P:System.Xml.Xsl.XsltSettings.EnableDocumentFunction">
      <summary vsli:raw="Gets or sets a value indicating whether to enable support for the XSLT &lt;c&gt;document()&lt;/c&gt; function.">Obtient ou définit une valeur indiquant s’il convient d’activer la prise en charge de la fonction <c>document()</c> XSLT.</summary>
      <returns vsli:raw="&lt;see langword=&quot;true&quot; /&gt; to support the XSLT &lt;c&gt;document()&lt;/c&gt; function; otherwise, &lt;see langword=&quot;false&quot; /&gt;. The default is &lt;see langword=&quot;false&quot; /&gt;.">
        <see langword="true" /> pour prendre en charge la fonction <c>document ()</c> XSLT ; Sinon, <see langword="false" /> . La valeur par défaut est <see langword="false" />.</returns>
    </member>
    <member name="P:System.Xml.Xsl.XsltSettings.EnableScript">
      <summary vsli:raw="Gets or sets a value indicating whether to enable support for embedded script blocks.">Obtient ou définit une valeur indiquant s'il convient d'activer la prise en charge des blocs de script incorporés.</summary>
      <returns vsli:raw="&lt;see langword=&quot;true&quot; /&gt; to support script blocks in XSLT style sheets; otherwise, &lt;see langword=&quot;false&quot; /&gt;. The default is &lt;see langword=&quot;false&quot; /&gt;.">
        <see langword="true" /> pour prendre en charge des blocs de script dans les feuilles de style XSLT ; sinon, <see langword="false" />. La valeur par défaut est <see langword="false" />.</returns>
    </member>
    <member name="P:System.Xml.Xsl.XsltSettings.TrustedXslt">
      <summary vsli:raw="Gets an &lt;see cref=&quot;T:System.Xml.Xsl.XsltSettings&quot; /&gt; object that enables support for the XSLT &lt;c&gt;document()&lt;/c&gt; function and embedded script blocks.">Obtient un objet <see cref="T:System.Xml.Xsl.XsltSettings" /> qui active la prise en charge de la fonction <c>document()</c> XSLT et des blocs de script incorporés.</summary>
      <returns vsli:raw="An &lt;see cref=&quot;T:System.Xml.Xsl.XsltSettings&quot; /&gt; object with the &lt;see cref=&quot;P:System.Xml.Xsl.XsltSettings.EnableDocumentFunction&quot; /&gt; and &lt;see cref=&quot;P:System.Xml.Xsl.XsltSettings.EnableScript&quot; /&gt; properties set to &lt;see langword=&quot;true&quot; /&gt;.">Objet <see cref="T:System.Xml.Xsl.XsltSettings" /> dont les propriétés <see cref="P:System.Xml.Xsl.XsltSettings.EnableDocumentFunction" /> et <see cref="P:System.Xml.Xsl.XsltSettings.EnableScript" /> ont la valeur <see langword="true" />.</returns>
    </member>
  </members>
</doc>