<?xml version="1.0" encoding="utf-8"?>
<doc xmlns:vsli="https://github.com/sk-0520/vs-localized-intellisense/tree/master/schema/2024">
  <assembly>
    <name>System.Data.Common</name>
  </assembly>
  <members>
    <member name="T:System.Data.AcceptRejectRule">
      <summary vsli:raw="Determines the action that occurs when the &lt;see cref=&quot;M:System.Data.DataSet.AcceptChanges&quot; /&gt; or &lt;see cref=&quot;M:System.Data.DataTable.RejectChanges&quot; /&gt; method is invoked on a &lt;see cref=&quot;T:System.Data.DataTable&quot; /&gt; with a &lt;see cref=&quot;T:System.Data.ForeignKeyConstraint&quot; /&gt;.">确定在带有 <see cref="M:System.Data.DataSet.AcceptChanges" /> 的 <see cref="M:System.Data.DataTable.RejectChanges" /> 上调用 <see cref="T:System.Data.DataTable" /> 或 <see cref="T:System.Data.ForeignKeyConstraint" /> 方法时将发生的操作。</summary>
    </member>
    <member name="F:System.Data.AcceptRejectRule.Cascade">
      <summary vsli:raw="Changes are cascaded across the relationship.">在关系中级联更改。</summary>
    </member>
    <member name="F:System.Data.AcceptRejectRule.None">
      <summary vsli:raw="No action occurs (default).">不发生任何操作（默认）。</summary>
    </member>
    <member name="T:System.Data.CommandBehavior">
      <summary vsli:raw="Provides a description of the results of the query and its effect on the database.">提供查询结果及其对数据库的影响的说明。</summary>
    </member>
    <member name="F:System.Data.CommandBehavior.CloseConnection">
      <summary vsli:raw="When the command is executed, the associated &lt;see langword=&quot;Connection&quot; /&gt; object is closed when the associated &lt;see langword=&quot;DataReader&quot; /&gt; object is closed.">执行命令时，关闭关联的 <see langword="DataReader" /> 对象时，关联的 <see langword="Connection" /> 对象也会关闭。</summary>
    </member>
    <member name="F:System.Data.CommandBehavior.Default">
      <summary vsli:raw="The query may return multiple result sets. Execution of the query may affect the database state. &lt;see langword=&quot;Default&quot; /&gt; sets no &lt;see cref=&quot;T:System.Data.CommandBehavior&quot; /&gt; flags, so calling &lt;see langword=&quot;ExecuteReader(CommandBehavior.Default)&quot; /&gt; is functionally equivalent to calling &lt;see langword=&quot;ExecuteReader()&quot; /&gt;.">查询可能返回多个结果集。 执行此查询可能会影响数据库状态。 <see langword="Default" /> 未设置 <see cref="T:System.Data.CommandBehavior" /> 标志，因此调用 <see langword="ExecuteReader(CommandBehavior.Default)" /> 在功能上等效于调用 <see langword="ExecuteReader()" />。</summary>
    </member>
    <member name="F:System.Data.CommandBehavior.KeyInfo">
      <summary vsli:raw="The query returns column and primary key information. The provider appends extra columns to the result set for existing primary key and timestamp columns.">查询返回列和主键信息。 提供程序将额外的列附加到现有主键和时间戳列的结果集。</summary>
    </member>
    <member name="F:System.Data.CommandBehavior.SchemaOnly">
      <summary vsli:raw="The query returns column information only. When using &lt;see cref=&quot;F:System.Data.CommandBehavior.SchemaOnly&quot; /&gt;, the .NET Framework Data Provider for SQL Server precedes the statement being executed with SET FMTONLY ON.">查询仅返回列信息。 使用 <see cref="F:System.Data.CommandBehavior.SchemaOnly" /> 时，用于 SQL Server 的 .NET Framework 数据提供程序在要执行的语句前加上 SET FMTONLY ON。</summary>
    </member>
    <member name="F:System.Data.CommandBehavior.SequentialAccess">
      <summary vsli:raw="Provides a way for the &lt;see langword=&quot;DataReader&quot; /&gt; to handle rows that contain columns with large binary values. Rather than loading the entire row, &lt;see langword=&quot;SequentialAccess&quot; /&gt; enables the &lt;see langword=&quot;DataReader&quot; /&gt; to load data as a stream. You can then use the &lt;see langword=&quot;GetBytes&quot; /&gt; or &lt;see langword=&quot;GetChars&quot; /&gt; method to specify a byte location to start the read operation, and a limited buffer size for the data being returned.">提供一种方法，以便 <see langword="DataReader" /> 处理包含带有大型二进制值的列的行。 <see langword="SequentialAccess" /> 不是加载整行，而是使 <see langword="DataReader" /> 能够以数据流的加载数据。 然后可以使用 <see langword="GetBytes" /> 或 <see langword="GetChars" /> 方法来指定开始读取操作的字节位置，以及正在返回的数据的有限缓冲区大小。</summary>
    </member>
    <member name="F:System.Data.CommandBehavior.SingleResult">
      <summary vsli:raw="The query returns a single result set.">查询会返回单个结果集。</summary>
    </member>
    <member name="F:System.Data.CommandBehavior.SingleRow">
      <summary vsli:raw="The query is expected to return a single row of the first result set. Execution of the query may affect the database state. Some .NET data providers may, but are not required to, use this information to optimize the performance of the command. When you specify &lt;see cref=&quot;F:System.Data.CommandBehavior.SingleRow&quot; /&gt; with the &lt;see cref=&quot;M:System.Data.OleDb.OleDbCommand.ExecuteReader&quot; /&gt; method of the &lt;see cref=&quot;T:System.Data.OleDb.OleDbCommand&quot; /&gt; object, the .NET Framework Data Provider for OLE DB performs binding using the OLE DB &lt;see langword=&quot;IRow&quot; /&gt; interface if it is available. Otherwise, it uses the &lt;see langword=&quot;IRowset&quot; /&gt; interface. If your SQL statement is expected to return only a single row, specifying &lt;see cref=&quot;F:System.Data.CommandBehavior.SingleRow&quot; /&gt; can also improve application performance. It is possible to specify &lt;see langword=&quot;SingleRow&quot; /&gt; when executing queries that are expected to return multiple result sets.  In that case, where both a multi-result set SQL query and single row are specified, the result returned will contain only the first row of the first result set. The other result sets of the query will not be returned.">查询应返回结果集中的单行。 执行此查询可能会影响数据库状态。 某些 .NET Framework 数据提供程序可能（但不要求）使用此信息来优化命令性能。 使用 <see cref="T:System.Data.OleDb.OleDbCommand" /> 对象的 <see cref="M:System.Data.OleDb.OleDbCommand.ExecuteReader" /> 方法指定 <see cref="F:System.Data.CommandBehavior.SingleRow" /> 时，用于 OLE DB 的 .NET Framework 数据提供程序使用 OLE DB <see langword="IRow" /> 接口（如果可用）执行绑定。 否则，它使用 <see langword="IRowset" /> 接口。 如果期望 SQL 语句仅返回一行，则指定 <see cref="F:System.Data.CommandBehavior.SingleRow" /> 也可提高应用程序性能。 执行应返回多个结果集的查询时，可指定 <see langword="SingleRow" />。  在这种情况下，如果同时指定了多结果集 SQL 查询和单行，返回的结果仅包含第一个结果集的第一行。 不返回查询的其他结果集。</summary>
    </member>
    <member name="T:System.Data.CommandType">
      <summary vsli:raw="Specifies how a command string is interpreted.">指定如何解释命令字符串。</summary>
    </member>
    <member name="F:System.Data.CommandType.StoredProcedure">
      <summary vsli:raw="The name of a stored procedure.">存储过程的名称。</summary>
    </member>
    <member name="F:System.Data.CommandType.TableDirect">
      <summary vsli:raw="The name of a table.">表的名称。</summary>
    </member>
    <member name="F:System.Data.CommandType.Text">
      <summary vsli:raw="An SQL text command. (Default.)">SQL 文本命令。 （默认。）</summary>
    </member>
    <member name="T:System.Data.Common.CatalogLocation">
      <summary vsli:raw="Indicates the position of the catalog name in a qualified table name in a text command.">指示目录名称在文本命令的限定表名中的位置。</summary>
    </member>
    <member name="F:System.Data.Common.CatalogLocation.End">
      <summary vsli:raw="Indicates that the position of the catalog name occurs after the schema portion of a fully qualified table name in a text command. &lt;c&gt;End&lt;/c&gt; and &lt;c&gt;Start&lt;/c&gt; are mutually exclusive.">指示目录名称的位置位于文本命令的完全限定表名中的架构部分之后。 <c>结束</c>和<c>开始</c>是互斥的。</summary>
    </member>
    <member name="F:System.Data.Common.CatalogLocation.Start">
      <summary vsli:raw="Indicates that the position of the catalog name occurs before the schema portion of a fully qualified table name in a text command. &lt;c&gt;Start&lt;/c&gt; and &lt;c&gt;End&lt;/c&gt; are mutually exclusive.">指示目录名称的位置位于文本命令的完全限定表名中的架构部分之前。 <c>开始</c>和<c>结束</c>是互斥的。</summary>
    </member>
    <member name="T:System.Data.Common.DataAdapter">
      <summary vsli:raw="Represents a set of SQL commands and a database connection that are used to fill the &lt;see cref=&quot;T:System.Data.DataSet&quot; /&gt; and update the data source.">表示用于填充 <see cref="T:System.Data.DataSet" /> 和更新数据源的一组 SQL 命令和一个数据库连接。</summary>
    </member>
    <member name="E:System.Data.Common.DataAdapter.FillError">
      <summary vsli:raw="Returned when an error occurs during a fill operation.">在填充操作过程中出现错误时返回。</summary>
    </member>
    <member name="M:System.Data.Common.DataAdapter.#ctor">
      <summary vsli:raw="Initializes a new instance of the &lt;see cref=&quot;T:System.Data.Common.DataAdapter&quot; /&gt; class.">初始化 <see cref="T:System.Data.Common.DataAdapter" /> 类的新实例。</summary>
    </member>
    <member name="M:System.Data.Common.DataAdapter.#ctor(System.Data.Common.DataAdapter)">
      <summary vsli:raw="Initializes a new instance of the &lt;see cref=&quot;T:System.Data.Common.DataAdapter&quot; /&gt; class from an existing object of the same type.">从同一类型的现有对象中初始化 <see cref="T:System.Data.Common.DataAdapter" /> 类的新实例。</summary>
      <param name="from" vsli:raw="A &lt;see cref=&quot;T:System.Data.Common.DataAdapter&quot; /&gt; object used to create the new &lt;see cref=&quot;T:System.Data.Common.DataAdapter&quot; /&gt;.">用于创建新 <see cref="T:System.Data.Common.DataAdapter" /> 的 <see cref="T:System.Data.Common.DataAdapter" /> 对象。</param>
    </member>
    <member name="M:System.Data.Common.DataAdapter.CloneInternals">
      <summary vsli:raw="Creates a copy of this instance of &lt;see cref=&quot;T:System.Data.Common.DataAdapter&quot; /&gt;.">创建此 <see cref="T:System.Data.Common.DataAdapter" /> 实例的一个副本。</summary>
      <returns vsli:raw="The cloned instance of &lt;see cref=&quot;T:System.Data.Common.DataAdapter&quot; /&gt;.">
        <see cref="T:System.Data.Common.DataAdapter" /> 的克隆实例。</returns>
    </member>
    <member name="M:System.Data.Common.DataAdapter.CreateTableMappings">
      <summary vsli:raw="Creates a new &lt;see cref=&quot;T:System.Data.Common.DataTableMappingCollection&quot; /&gt;.">创建一个新的 <see cref="T:System.Data.Common.DataTableMappingCollection" />。</summary>
      <returns vsli:raw="A new table mapping collection.">新的表映射集合。</returns>
    </member>
    <member name="M:System.Data.Common.DataAdapter.Dispose(System.Boolean)">
      <summary vsli:raw="Releases the unmanaged resources used by the &lt;see cref=&quot;T:System.Data.Common.DataAdapter&quot; /&gt; and optionally releases the managed resources.">释放由 <see cref="T:System.Data.Common.DataAdapter" /> 占用的非托管资源，还可以另外再释放托管资源。</summary>
      <param name="disposing" vsli:raw="&lt;see langword=&quot;true&quot; /&gt; to release both managed and unmanaged resources; &lt;see langword=&quot;false&quot; /&gt; to release only unmanaged resources.">若要释放托管资源和非托管资源，则为 <see langword="true" />；若仅释放非托管资源，则为 <see langword="false" />。</param>
    </member>
    <member name="M:System.Data.Common.DataAdapter.Fill(System.Data.DataSet)">
      <summary vsli:raw="Adds or refreshes rows in the &lt;see cref=&quot;T:System.Data.DataSet&quot; /&gt; to match those in the data source.">在 <see cref="T:System.Data.DataSet" /> 中添加或刷新行以与数据源中的行匹配。</summary>
      <param name="dataSet" vsli:raw="A &lt;see cref=&quot;T:System.Data.DataSet&quot; /&gt; to fill with records and, if necessary, schema.">要用记录和架构（如果必要）填充的 <see cref="T:System.Data.DataSet" />。</param>
      <returns vsli:raw="The number of rows successfully added to or refreshed in the &lt;see cref=&quot;T:System.Data.DataSet&quot; /&gt;. This does not include rows affected by statements that do not return rows.">已在 <see cref="T:System.Data.DataSet" /> 中成功添加或刷新的行数。 这不包括受不返回行的语句影响的行。</returns>
    </member>
    <member name="M:System.Data.Common.DataAdapter.Fill(System.Data.DataSet,System.String,System.Data.IDataReader,System.Int32,System.Int32)">
      <summary vsli:raw="Adds or refreshes rows in a specified range in the &lt;see cref=&quot;T:System.Data.DataSet&quot; /&gt; to match those in the data source using the &lt;see cref=&quot;T:System.Data.DataSet&quot; /&gt; and &lt;see cref=&quot;T:System.Data.DataTable&quot; /&gt; names.">在 <see cref="T:System.Data.DataSet" /> 的指定范围中添加或刷新行以匹配使用 <see cref="T:System.Data.DataSet" /> 和 <see cref="T:System.Data.DataTable" /> 名称的数据源中的行。</summary>
      <param name="dataSet" vsli:raw="A &lt;see cref=&quot;T:System.Data.DataSet&quot; /&gt; to fill with records.">一个要用记录填充的 <see cref="T:System.Data.DataSet" />。</param>
      <param name="srcTable" vsli:raw="A string indicating the name of the source table.">一个字符串，指示源表的名称。</param>
      <param name="dataReader" vsli:raw="An instance of &lt;see cref=&quot;T:System.Data.IDataReader&quot; /&gt;.">
        <see cref="T:System.Data.IDataReader" /> 的一个实例。</param>
      <param name="startRecord" vsli:raw="The zero-based index of the starting record.">起始记录的从零开始的索引。</param>
      <param name="maxRecords" vsli:raw="An integer indicating the maximum number of records.">指示最大记录数的整数。</param>
      <returns vsli:raw="The number of rows successfully added to or refreshed in the &lt;see cref=&quot;T:System.Data.DataSet&quot; /&gt;. This does not include rows affected by statements that do not return rows.">已在 <see cref="T:System.Data.DataSet" /> 中成功添加或刷新的行数。 这不包括受不返回行的语句影响的行。</returns>
    </member>
    <member name="M:System.Data.Common.DataAdapter.Fill(System.Data.DataTable,System.Data.IDataReader)">
      <summary vsli:raw="Adds or refreshes rows in the &lt;see cref=&quot;T:System.Data.DataTable&quot; /&gt; to match those in the data source using the &lt;see cref=&quot;T:System.Data.DataTable&quot; /&gt; name and the specified &lt;see cref=&quot;T:System.Data.IDataReader&quot; /&gt;.">在 <see cref="T:System.Data.DataTable" /> 中添加或刷新行以与使用 <see cref="T:System.Data.DataTable" /> 名称和指定的 <see cref="T:System.Data.IDataReader" /> 的数据源中的行匹配。</summary>
      <param name="dataTable" vsli:raw="A &lt;see cref=&quot;T:System.Data.DataTable&quot; /&gt; to fill with records.">一个要用记录填充的 <see cref="T:System.Data.DataTable" />。</param>
      <param name="dataReader" vsli:raw="An instance of &lt;see cref=&quot;T:System.Data.IDataReader&quot; /&gt;.">
        <see cref="T:System.Data.IDataReader" /> 的一个实例。</param>
      <returns vsli:raw="The number of rows successfully added to or refreshed in the &lt;see cref=&quot;T:System.Data.DataTable&quot; /&gt;. This does not include rows affected by statements that do not return rows.">已在 <see cref="T:System.Data.DataTable" /> 中成功添加或刷新的行数。 这不包括受不返回行的语句影响的行。</returns>
    </member>
    <member name="M:System.Data.Common.DataAdapter.Fill(System.Data.DataTable[],System.Data.IDataReader,System.Int32,System.Int32)">
      <summary vsli:raw="Adds or refreshes rows in a specified range in the collection of &lt;see cref=&quot;T:System.Data.DataTable&quot; /&gt; objects to match those in the data source.">在 <see cref="T:System.Data.DataTable" /> 对象集合的指定范围中添加或刷新行以与数据源中的行匹配。</summary>
      <param name="dataTables" vsli:raw="A collection of &lt;see cref=&quot;T:System.Data.DataTable&quot; /&gt; objects to fill with records.">要用记录填充的 <see cref="T:System.Data.DataTable" /> 对象的集合。</param>
      <param name="dataReader" vsli:raw="An instance of &lt;see cref=&quot;T:System.Data.IDataReader&quot; /&gt;.">
        <see cref="T:System.Data.IDataReader" /> 的一个实例。</param>
      <param name="startRecord" vsli:raw="The zero-based index of the starting record.">起始记录的从零开始的索引。</param>
      <param name="maxRecords" vsli:raw="An integer indicating the maximum number of records.">指示最大记录数的整数。</param>
      <returns vsli:raw="The number of rows successfully added to or refreshed in the &lt;see cref=&quot;T:System.Data.DataTable&quot; /&gt;. This does not include rows affected by statements that do not return rows.">已在 <see cref="T:System.Data.DataTable" /> 中成功添加或刷新的行数。 这不包括受不返回行的语句影响的行。</returns>
    </member>
    <member name="M:System.Data.Common.DataAdapter.FillSchema(System.Data.DataSet,System.Data.SchemaType)">
      <summary vsli:raw="Adds a &lt;see cref=&quot;T:System.Data.DataTable&quot; /&gt; to the specified &lt;see cref=&quot;T:System.Data.DataSet&quot; /&gt; and configures the schema to match that in the data source based on the specified &lt;see cref=&quot;T:System.Data.SchemaType&quot; /&gt;.">将 <see cref="T:System.Data.DataTable" /> 添加到指定的 <see cref="T:System.Data.DataSet" /> ，并根据指定的 <see cref="T:System.Data.SchemaType" />配置架构以匹配数据源中的架构。</summary>
      <param name="dataSet" vsli:raw="The &lt;see cref=&quot;T:System.Data.DataSet&quot; /&gt; to be filled with the schema from the data source.">要用数据源中的架构填充的 <see cref="T:System.Data.DataSet" />。</param>
      <param name="schemaType" vsli:raw="One of the &lt;see cref=&quot;T:System.Data.SchemaType&quot; /&gt; values.">
        <see cref="T:System.Data.SchemaType" /> 值之一。</param>
      <returns vsli:raw="A &lt;see cref=&quot;T:System.Data.DataTable&quot; /&gt; object that contains schema information returned from the data source.">包含从数据源返回的架构信息的 <see cref="T:System.Data.DataTable" /> 对象。</returns>
    </member>
    <member name="M:System.Data.Common.DataAdapter.FillSchema(System.Data.DataSet,System.Data.SchemaType,System.String,System.Data.IDataReader)">
      <summary vsli:raw="Adds a &lt;see cref=&quot;T:System.Data.DataTable&quot; /&gt; to the specified &lt;see cref=&quot;T:System.Data.DataSet&quot; /&gt;.">向指定的 <see cref="T:System.Data.DataTable" /> 添加一个 <see cref="T:System.Data.DataSet" />。</summary>
      <param name="dataSet" vsli:raw="The &lt;see cref=&quot;T:System.Data.DataTable&quot; /&gt; to be filled from the &lt;see cref=&quot;T:System.Data.IDataReader&quot; /&gt;.">要从 <see cref="T:System.Data.DataTable" /> 填充的 <see cref="T:System.Data.IDataReader" />。</param>
      <param name="schemaType" vsli:raw="One of the &lt;see cref=&quot;T:System.Data.SchemaType&quot; /&gt; values.">
        <see cref="T:System.Data.SchemaType" /> 值之一。</param>
      <param name="srcTable" vsli:raw="The name of the source table to use for table mapping.">用于表映射的源表的名称。</param>
      <param name="dataReader" vsli:raw="The &lt;see cref=&quot;T:System.Data.IDataReader&quot; /&gt; to be used as the data source when filling the &lt;see cref=&quot;T:System.Data.DataTable&quot; /&gt;.">填充 <see cref="T:System.Data.IDataReader" /> 时要用作数据源的 <see cref="T:System.Data.DataTable" />。</param>
      <returns vsli:raw="A reference to a collection of &lt;see cref=&quot;T:System.Data.DataTable&quot; /&gt; objects that were added to the &lt;see cref=&quot;T:System.Data.DataSet&quot; /&gt;.">一个引用，指向添加到 <see cref="T:System.Data.DataSet" /> 的 <see cref="T:System.Data.DataTable" /> 对象的集合。</returns>
    </member>
    <member name="M:System.Data.Common.DataAdapter.FillSchema(System.Data.DataTable,System.Data.SchemaType,System.Data.IDataReader)">
      <summary vsli:raw="Adds a &lt;see cref=&quot;T:System.Data.DataTable&quot; /&gt; to the specified &lt;see cref=&quot;T:System.Data.DataSet&quot; /&gt;.">向指定的 <see cref="T:System.Data.DataTable" /> 添加一个 <see cref="T:System.Data.DataSet" />。</summary>
      <param name="dataTable" vsli:raw="The &lt;see cref=&quot;T:System.Data.DataTable&quot; /&gt; to be filled from the &lt;see cref=&quot;T:System.Data.IDataReader&quot; /&gt;.">要从 <see cref="T:System.Data.DataTable" /> 填充的 <see cref="T:System.Data.IDataReader" />。</param>
      <param name="schemaType" vsli:raw="One of the &lt;see cref=&quot;T:System.Data.SchemaType&quot; /&gt; values.">
        <see cref="T:System.Data.SchemaType" /> 值之一。</param>
      <param name="dataReader" vsli:raw="The &lt;see cref=&quot;T:System.Data.IDataReader&quot; /&gt; to be used as the data source when filling the &lt;see cref=&quot;T:System.Data.DataTable&quot; /&gt;.">填充 <see cref="T:System.Data.IDataReader" /> 时要用作数据源的 <see cref="T:System.Data.DataTable" />。</param>
      <returns vsli:raw="A &lt;see cref=&quot;T:System.Data.DataTable&quot; /&gt; object that contains schema information returned from the data source.">包含从数据源返回的架构信息的 <see cref="T:System.Data.DataTable" /> 对象。</returns>
    </member>
    <member name="M:System.Data.Common.DataAdapter.GetFillParameters">
      <summary vsli:raw="Gets the parameters set by the user when executing an SQL SELECT statement.">获取当执行 SQL SELECT 语句时由用户设置的参数。</summary>
      <returns vsli:raw="An array of &lt;see cref=&quot;T:System.Data.IDataParameter&quot; /&gt; objects that contains the parameters set by the user.">
        <see cref="T:System.Data.IDataParameter" /> 对象的数组，这些对象包含由用户设置的参数。</returns>
    </member>
    <member name="M:System.Data.Common.DataAdapter.HasTableMappings">
      <summary vsli:raw="Indicates whether a &lt;see cref=&quot;T:System.Data.Common.DataTableMappingCollection&quot; /&gt; has been created.">指示是否已创建了一个 <see cref="T:System.Data.Common.DataTableMappingCollection" />。</summary>
      <returns vsli:raw="&lt;see langword=&quot;true&quot; /&gt; if a &lt;see cref=&quot;T:System.Data.Common.DataTableMappingCollection&quot; /&gt; has been created; otherwise &lt;see langword=&quot;false&quot; /&gt;.">如果已创建 <see cref="T:System.Data.Common.DataTableMappingCollection" />，则为 <see langword="true" />；否则为 <see langword="false" />。</returns>
    </member>
    <member name="M:System.Data.Common.DataAdapter.OnFillError(System.Data.FillErrorEventArgs)">
      <summary vsli:raw="Invoked when an error occurs during a &lt;see langword=&quot;Fill&quot; /&gt;.">当 <see langword="Fill" /> 过程中出现错误时调用。</summary>
      <param name="value" vsli:raw="A &lt;see cref=&quot;T:System.Data.FillErrorEventArgs&quot; /&gt; object.">
        <see cref="T:System.Data.FillErrorEventArgs" /> 对象。</param>
    </member>
    <member name="M:System.Data.Common.DataAdapter.ResetFillLoadOption">
      <summary vsli:raw="Resets &lt;see cref=&quot;P:System.Data.Common.DataAdapter.FillLoadOption&quot; /&gt; to its default state and causes &lt;see cref=&quot;M:System.Data.Common.DataAdapter.Fill(System.Data.DataSet)&quot; /&gt; to honor &lt;see cref=&quot;P:System.Data.Common.DataAdapter.AcceptChangesDuringFill&quot; /&gt;.">将 <see cref="P:System.Data.Common.DataAdapter.FillLoadOption" /> 重置为默认状态，并使 <see cref="M:System.Data.Common.DataAdapter.Fill(System.Data.DataSet)" /> 接受 <see cref="P:System.Data.Common.DataAdapter.AcceptChangesDuringFill" />。</summary>
    </member>
    <member name="M:System.Data.Common.DataAdapter.ShouldSerializeAcceptChangesDuringFill">
      <summary vsli:raw="Determines whether the &lt;see cref=&quot;P:System.Data.Common.DataAdapter.AcceptChangesDuringFill&quot; /&gt; property should be persisted.">确定是否应保持 <see cref="P:System.Data.Common.DataAdapter.AcceptChangesDuringFill" /> 属性。</summary>
      <returns vsli:raw="&lt;see langword=&quot;true&quot; /&gt; if the &lt;see cref=&quot;P:System.Data.Common.DataAdapter.AcceptChangesDuringFill&quot; /&gt; property is persisted; otherwise &lt;see langword=&quot;false&quot; /&gt;.">如果保持 <see cref="P:System.Data.Common.DataAdapter.AcceptChangesDuringFill" /> 属性，则为 <see langword="true" />；否则为 <see langword="false" />。</returns>
    </member>
    <member name="M:System.Data.Common.DataAdapter.ShouldSerializeFillLoadOption">
      <summary vsli:raw="Determines whether the &lt;see cref=&quot;P:System.Data.Common.DataAdapter.FillLoadOption&quot; /&gt; property should be persisted.">确定是否应保持 <see cref="P:System.Data.Common.DataAdapter.FillLoadOption" /> 属性。</summary>
      <returns vsli:raw="&lt;see langword=&quot;true&quot; /&gt; if the &lt;see cref=&quot;P:System.Data.Common.DataAdapter.FillLoadOption&quot; /&gt; property is persisted; otherwise &lt;see langword=&quot;false&quot; /&gt;.">如果保持 <see cref="P:System.Data.Common.DataAdapter.FillLoadOption" /> 属性，则为 <see langword="true" />；否则为 <see langword="false" />。</returns>
    </member>
    <member name="M:System.Data.Common.DataAdapter.ShouldSerializeTableMappings">
      <summary vsli:raw="Determines whether one or more &lt;see cref=&quot;T:System.Data.Common.DataTableMapping&quot; /&gt; objects exist and they should be persisted.">确定一个或多个 <see cref="T:System.Data.Common.DataTableMapping" /> 对象是否存在，并且它们是否应该是持久的。</summary>
      <returns vsli:raw="&lt;see langword=&quot;true&quot; /&gt; if one or more &lt;see cref=&quot;T:System.Data.Common.DataTableMapping&quot; /&gt; objects exist; otherwise &lt;see langword=&quot;false&quot; /&gt;.">如果存在一个或多个 <see cref="T:System.Data.Common.DataTableMapping" /> 对象，则为 <see langword="true" />；否则为 <see langword="false" />。</returns>
    </member>
    <member name="M:System.Data.Common.DataAdapter.Update(System.Data.DataSet)">
      <summary vsli:raw="Calls the respective INSERT, UPDATE, or DELETE statements for each inserted, updated, or deleted row in the specified &lt;see cref=&quot;T:System.Data.DataSet&quot; /&gt; from a &lt;see cref=&quot;T:System.Data.DataTable&quot; /&gt; named &quot;Table.&quot;">从名为“Table”的 <see cref="T:System.Data.DataSet" /> 为指定的 <see cref="T:System.Data.DataTable" /> 中每个已插入、已更新或已删除的行调用相应的 INSERT、UPDATE 或 DELETE 语句。</summary>
      <param name="dataSet" vsli:raw="The &lt;see cref=&quot;T:System.Data.DataSet&quot; /&gt; used to update the data source.">用于更新数据源的 <see cref="T:System.Data.DataSet" />。</param>
      <exception cref="T:System.InvalidOperationException" vsli:raw="The source table is invalid.">源表无效。</exception>
      <exception cref="T:System.Data.DBConcurrencyException" vsli:raw="An attempt to execute an INSERT, UPDATE, or DELETE statement resulted in zero records affected.">尝试执行 INSERT、UPDATE 或 DELETE 语句，但没有记录受到影响。</exception>
      <returns vsli:raw="The number of rows successfully updated from the &lt;see cref=&quot;T:System.Data.DataSet&quot; /&gt;.">
        <see cref="T:System.Data.DataSet" /> 中成功更新的行数。</returns>
    </member>
    <member name="P:System.Data.Common.DataAdapter.AcceptChangesDuringFill">
      <summary vsli:raw="Gets or sets a value indicating whether &lt;see cref=&quot;M:System.Data.DataRow.AcceptChanges&quot; /&gt; is called on a &lt;see cref=&quot;T:System.Data.DataRow&quot; /&gt; after it is added to the &lt;see cref=&quot;T:System.Data.DataTable&quot; /&gt; during any of the Fill operations.">获取或设置一个值，该值指示在任何 Fill**** 操作过程中，在将 <see cref="M:System.Data.DataRow.AcceptChanges" /> 添加到 <see cref="T:System.Data.DataRow" /> 之后是否在 <see cref="T:System.Data.DataTable" /> 上调用它。</summary>
      <returns vsli:raw="&lt;see langword=&quot;true&quot; /&gt; if &lt;see cref=&quot;M:System.Data.DataRow.AcceptChanges&quot; /&gt; is called on the &lt;see cref=&quot;T:System.Data.DataRow&quot; /&gt;; otherwise &lt;see langword=&quot;false&quot; /&gt;. The default is &lt;see langword=&quot;true&quot; /&gt;.">如果在 <see cref="M:System.Data.DataRow.AcceptChanges" /> 上调用 <see cref="T:System.Data.DataRow" />，则为 <see langword="true" />；否则为 <see langword="false" />。 默认值为 <see langword="true" />。</returns>
    </member>
    <member name="P:System.Data.Common.DataAdapter.AcceptChangesDuringUpdate">
      <summary vsli:raw="Gets or sets whether &lt;see cref=&quot;M:System.Data.DataRow.AcceptChanges&quot; /&gt; is called during a &lt;see cref=&quot;M:System.Data.Common.DataAdapter.Update(System.Data.DataSet)&quot; /&gt;.">获取或设置在 <see cref="M:System.Data.DataRow.AcceptChanges" /> 期间是否调用 <see cref="M:System.Data.Common.DataAdapter.Update(System.Data.DataSet)" />。</summary>
      <returns vsli:raw="&lt;see langword=&quot;true&quot; /&gt; if &lt;see cref=&quot;M:System.Data.DataRow.AcceptChanges&quot; /&gt; is called during an &lt;see cref=&quot;M:System.Data.Common.DataAdapter.Update(System.Data.DataSet)&quot; /&gt;; otherwise &lt;see langword=&quot;false&quot; /&gt;. The default is &lt;see langword=&quot;true&quot; /&gt;.">如果在 <see cref="M:System.Data.DataRow.AcceptChanges" /> 期间调用 <see cref="M:System.Data.Common.DataAdapter.Update(System.Data.DataSet)" />，则为 <see langword="true" />；否则为 <see langword="false" />。 默认值为 <see langword="true" />。</returns>
    </member>
    <member name="P:System.Data.Common.DataAdapter.ContinueUpdateOnError">
      <summary vsli:raw="Gets or sets a value that specifies whether to generate an exception when an error is encountered during a row update.">获取或设置一个值，该值指定在行更新过程中遇到错误时是否生成异常。</summary>
      <returns vsli:raw="&lt;see langword=&quot;true&quot; /&gt; to continue the update without generating an exception; otherwise &lt;see langword=&quot;false&quot; /&gt;. The default is &lt;see langword=&quot;false&quot; /&gt;.">如果要继续更新而不生成异常，则为 <see langword="true" />，否则为 <see langword="false" />。 默认值为 <see langword="false" />。</returns>
    </member>
    <member name="P:System.Data.Common.DataAdapter.FillLoadOption">
      <summary vsli:raw="Gets or sets the &lt;see cref=&quot;T:System.Data.LoadOption&quot; /&gt; that determines how the adapter fills the &lt;see cref=&quot;T:System.Data.DataTable&quot; /&gt; from the &lt;see cref=&quot;T:System.Data.Common.DbDataReader&quot; /&gt;.">获取或设置 <see cref="T:System.Data.LoadOption" />，后者确定适配器如何从 <see cref="T:System.Data.DataTable" /> 中填充 <see cref="T:System.Data.Common.DbDataReader" />。</summary>
      <returns vsli:raw="A &lt;see cref=&quot;T:System.Data.LoadOption&quot; /&gt; value.">一个 <see cref="T:System.Data.LoadOption" /> 值。</returns>
    </member>
    <member name="P:System.Data.Common.DataAdapter.MissingMappingAction">
      <summary vsli:raw="Determines the action to take when incoming data does not have a matching table or column.">确定传入数据没有匹配的表或列时需要执行的操作。</summary>
      <exception cref="T:System.ArgumentException" vsli:raw="The value set is not one of the &lt;see cref=&quot;T:System.Data.MissingMappingAction&quot; /&gt; values.">设置的值不是 <see cref="T:System.Data.MissingMappingAction" /> 值之一。</exception>
      <returns vsli:raw="One of the &lt;see cref=&quot;T:System.Data.MissingMappingAction&quot; /&gt; values. The default is &lt;see langword=&quot;Passthrough&quot; /&gt;.">
        <see cref="T:System.Data.MissingMappingAction" /> 值之一。 默认值为 <see langword="Passthrough" />。</returns>
    </member>
    <member name="P:System.Data.Common.DataAdapter.MissingSchemaAction">
      <summary vsli:raw="Determines the action to take when existing &lt;see cref=&quot;T:System.Data.DataSet&quot; /&gt; schema does not match incoming data.">确定现有 <see cref="T:System.Data.DataSet" /> 架构与传入数据不匹配时需要执行的操作。</summary>
      <exception cref="T:System.ArgumentException" vsli:raw="The value set is not one of the &lt;see cref=&quot;T:System.Data.MissingSchemaAction&quot; /&gt; values.">设置的值不是 <see cref="T:System.Data.MissingSchemaAction" /> 值之一。</exception>
      <returns vsli:raw="One of the &lt;see cref=&quot;T:System.Data.MissingSchemaAction&quot; /&gt; values. The default is &lt;see langword=&quot;Add&quot; /&gt;.">
        <see cref="T:System.Data.MissingSchemaAction" /> 值之一。 默认值为 <see langword="Add" />。</returns>
    </member>
    <member name="P:System.Data.Common.DataAdapter.ReturnProviderSpecificTypes">
      <summary vsli:raw="Gets or sets whether the &lt;see langword=&quot;Fill&quot; /&gt; method should return provider-specific values or common CLS-compliant values.">获取或设置 <see langword="Fill" /> 方法是应当返回提供程序特定的值，还是返回公用的符合 CLS 的值。</summary>
      <returns vsli:raw="&lt;see langword=&quot;true&quot; /&gt; if the &lt;see langword=&quot;Fill&quot; /&gt; method should return provider-specific values; otherwise &lt;see langword=&quot;false&quot; /&gt; to return common CLS-compliant values.">如果 <see langword="true" /> 方法应返回特定于提供程序的值，则为 <see langword="Fill" />；否则如果返回常用的符合 CLS 的值，则为 <see langword="false" />。</returns>
    </member>
    <member name="P:System.Data.Common.DataAdapter.System#Data#IDataAdapter#TableMappings">
      <summary vsli:raw="Gets a collection that indicates how a source table is mapped to a dataset table.">指示如何将源表映射到数据集表。</summary>
      <returns vsli:raw="A collection that provides the primary mapping between the returned records and the &lt;see cref=&quot;T:System.Data.DataSet&quot; /&gt;. The default value is an empty collection.">一个集合，它提供返回记录和 <see cref="T:System.Data.DataSet" /> 之间的主映射。 默认值为空集合。</returns>
    </member>
    <member name="P:System.Data.Common.DataAdapter.TableMappings">
      <summary vsli:raw="Gets a collection that provides the primary mapping between a source table and a &lt;see cref=&quot;T:System.Data.DataTable&quot; /&gt;.">获取一个集合，它提供源表和 <see cref="T:System.Data.DataTable" /> 之间的主映射。</summary>
      <returns vsli:raw="A collection that provides the primary mapping between the returned records and the &lt;see cref=&quot;T:System.Data.DataSet&quot; /&gt;. The default value is an empty collection.">一个集合，它提供返回记录和 <see cref="T:System.Data.DataSet" /> 之间的主映射。 默认值为空集合。</returns>
    </member>
    <member name="T:System.Data.Common.DataColumnMapping">
      <summary vsli:raw="Contains a generic column mapping for an object that inherits from &lt;see cref=&quot;T:System.Data.Common.DataAdapter&quot; /&gt;. This class cannot be inherited.">包含从 <see cref="T:System.Data.Common.DataAdapter" /> 继承的对象的一般列映射。 此类不能被继承。</summary>
    </member>
    <member name="M:System.Data.Common.DataColumnMapping.#ctor">
      <summary vsli:raw="Initializes a new instance of the &lt;see cref=&quot;T:System.Data.Common.DataColumnMapping&quot; /&gt; class.">初始化 <see cref="T:System.Data.Common.DataColumnMapping" /> 类的新实例。</summary>
    </member>
    <member name="M:System.Data.Common.DataColumnMapping.#ctor(System.String,System.String)">
      <summary vsli:raw="Initializes a new instance of the &lt;see cref=&quot;T:System.Data.Common.DataColumnMapping&quot; /&gt; class with the specified source column name and &lt;see cref=&quot;T:System.Data.DataSet&quot; /&gt; column name to map to.">使用指定的源列名称和要映射到的 <see cref="T:System.Data.Common.DataColumnMapping" /> 列名初始化 <see cref="T:System.Data.DataSet" /> 类的新实例。</summary>
      <param name="sourceColumn" vsli:raw="The case-sensitive column name from a data source.">数据源中区分大小写的列名。</param>
      <param name="dataSetColumn" vsli:raw="The column name, which is not case sensitive, from a &lt;see cref=&quot;T:System.Data.DataSet&quot; /&gt; to map to.">
        <see cref="T:System.Data.DataSet" /> 中要映射到的列名（该名称不区分大小写）。</param>
    </member>
    <member name="M:System.Data.Common.DataColumnMapping.GetDataColumnBySchemaAction(System.Data.DataTable,System.Type,System.Data.MissingSchemaAction)">
      <summary vsli:raw="Gets a &lt;see cref=&quot;T:System.Data.DataColumn&quot; /&gt; from the given &lt;see cref=&quot;T:System.Data.DataTable&quot; /&gt; using the &lt;see cref=&quot;T:System.Data.MissingSchemaAction&quot; /&gt; and the &lt;see cref=&quot;P:System.Data.Common.DataColumnMapping.DataSetColumn&quot; /&gt; property.">使用 <see cref="T:System.Data.DataColumn" /> 和 <see cref="T:System.Data.DataTable" /> 属性从给定的 <see cref="T:System.Data.MissingSchemaAction" /> 获取 <see cref="P:System.Data.Common.DataColumnMapping.DataSetColumn" />。</summary>
      <param name="dataTable" vsli:raw="The &lt;see cref=&quot;T:System.Data.DataTable&quot; /&gt; to get the column from.">从中获取列的 <see cref="T:System.Data.DataTable" />。</param>
      <param name="dataType" vsli:raw="The &lt;see cref=&quot;T:System.Type&quot; /&gt; of the data column.">数据列的 <see cref="T:System.Type" />。</param>
      <param name="schemaAction" vsli:raw="One of the &lt;see cref=&quot;T:System.Data.MissingSchemaAction&quot; /&gt; values.">
        <see cref="T:System.Data.MissingSchemaAction" /> 值之一。</param>
      <returns vsli:raw="A data column.">数据列。</returns>
    </member>
    <member name="M:System.Data.Common.DataColumnMapping.GetDataColumnBySchemaAction(System.String,System.String,System.Data.DataTable,System.Type,System.Data.MissingSchemaAction)">
      <summary vsli:raw="A static version of &lt;see cref=&quot;M:System.Data.Common.DataColumnMapping.GetDataColumnBySchemaAction(System.Data.DataTable,System.Type,System.Data.MissingSchemaAction)&quot; /&gt; that can be called without instantiating a &lt;see cref=&quot;T:System.Data.Common.DataColumnMapping&quot; /&gt; object.">
        <see cref="M:System.Data.Common.DataColumnMapping.GetDataColumnBySchemaAction(System.Data.DataTable,System.Type,System.Data.MissingSchemaAction)" /> 的静态版本，可以在不实例化 <see cref="T:System.Data.Common.DataColumnMapping" /> 对象的情况下调用。</summary>
      <param name="sourceColumn" vsli:raw="The case-sensitive column name from a data source.">数据源中区分大小写的列名。</param>
      <param name="dataSetColumn" vsli:raw="The column name, which is not case sensitive, from a &lt;see cref=&quot;T:System.Data.DataSet&quot; /&gt; to map to.">
        <see cref="T:System.Data.DataSet" /> 中要映射到的列名（该名称不区分大小写）。</param>
      <param name="dataTable" vsli:raw="An instance of &lt;see cref=&quot;T:System.Data.DataTable&quot; /&gt;.">
        <see cref="T:System.Data.DataTable" /> 的一个实例。</param>
      <param name="dataType" vsli:raw="The data type for the column being mapped.">正被映射的列的数据类型。</param>
      <param name="schemaAction" vsli:raw="Determines the action to take when existing &lt;see cref=&quot;T:System.Data.DataSet&quot; /&gt; schema does not match incoming data.">确定现有 <see cref="T:System.Data.DataSet" /> 架构与传入数据不匹配时需要执行的操作。</param>
      <returns vsli:raw="A &lt;see cref=&quot;T:System.Data.DataColumn&quot; /&gt; object.">
        <see cref="T:System.Data.DataColumn" /> 对象。</returns>
    </member>
    <member name="M:System.Data.Common.DataColumnMapping.System#ICloneable#Clone">
      <summary vsli:raw="Creates a new object that is a copy of the current instance.">创建作为当前实例副本的新对象。</summary>
      <returns vsli:raw="A copy of the current object.">当前对象的副本。</returns>
    </member>
    <member name="M:System.Data.Common.DataColumnMapping.ToString">
      <summary vsli:raw="Converts the current &lt;see cref=&quot;P:System.Data.Common.DataColumnMapping.SourceColumn&quot; /&gt; name to a string.">将当前的 <see cref="P:System.Data.Common.DataColumnMapping.SourceColumn" /> 名称转换为字符串。</summary>
      <returns vsli:raw="The current &lt;see cref=&quot;P:System.Data.Common.DataColumnMapping.SourceColumn&quot; /&gt; name as a string.">当前的 <see cref="P:System.Data.Common.DataColumnMapping.SourceColumn" /> 名称作为字符串。</returns>
    </member>
    <member name="P:System.Data.Common.DataColumnMapping.DataSetColumn">
      <summary vsli:raw="Gets or sets the name of the column within the &lt;see cref=&quot;T:System.Data.DataSet&quot; /&gt; to map to.">获取或设置 <see cref="T:System.Data.DataSet" /> 中要映射到的列的名称。</summary>
      <returns vsli:raw="The name of the column within the &lt;see cref=&quot;T:System.Data.DataSet&quot; /&gt; to map to. The name is not case sensitive.">
        <see cref="T:System.Data.DataSet" /> 中要映射到的列的名称。 该名称不区分大小写。</returns>
    </member>
    <member name="P:System.Data.Common.DataColumnMapping.SourceColumn">
      <summary vsli:raw="Gets or sets the name of the column within the data source to map from. The name is case-sensitive.">获取或设置数据源中从其映射的列的名称。 该名称区分大小写。</summary>
      <returns vsli:raw="The case-sensitive name of the column in the data source.">数据源中列的区分大小写的名称。</returns>
    </member>
    <member name="T:System.Data.Common.DataColumnMappingCollection">
      <summary vsli:raw="Contains a collection of &lt;see cref=&quot;T:System.Data.Common.DataColumnMapping&quot; /&gt; objects.">包含 <see cref="T:System.Data.Common.DataColumnMapping" /> 对象的集合。</summary>
    </member>
    <member name="M:System.Data.Common.DataColumnMappingCollection.#ctor">
      <summary vsli:raw="Creates an empty &lt;see cref=&quot;T:System.Data.Common.DataColumnMappingCollection&quot; /&gt;.">创建一个空的 <see cref="T:System.Data.Common.DataColumnMappingCollection" />。</summary>
    </member>
    <member name="M:System.Data.Common.DataColumnMappingCollection.Add(System.Object)">
      <summary vsli:raw="Adds a &lt;see cref=&quot;T:System.Data.Common.DataColumnMapping&quot; /&gt; object to the collection.">将 <see cref="T:System.Data.Common.DataColumnMapping" /> 对象添加到集合中。</summary>
      <param name="value" vsli:raw="A &lt;see langword=&quot;DataColumnMapping&quot; /&gt; object to add to the collection.">要添加到集合的 <see langword="DataColumnMapping" /> 对象。</param>
      <exception cref="T:System.InvalidCastException" vsli:raw="The object passed in was not a &lt;see cref=&quot;T:System.Data.Common.DataColumnMapping&quot; /&gt; object.">传入的对象不是 <see cref="T:System.Data.Common.DataColumnMapping" /> 对象。</exception>
      <returns vsli:raw="The index of the &lt;see langword=&quot;DataColumnMapping&quot; /&gt; object that was added to the collection.">已添加到集合中的 <see langword="DataColumnMapping" /> 对象的索引。</returns>
    </member>
    <member name="M:System.Data.Common.DataColumnMappingCollection.Add(System.String,System.String)">
      <summary vsli:raw="Adds a &lt;see cref=&quot;T:System.Data.Common.DataColumnMapping&quot; /&gt; object to the collection when given a source column name and a &lt;see cref=&quot;T:System.Data.DataSet&quot; /&gt; column name.">当给定源列名称和 <see cref="T:System.Data.Common.DataColumnMapping" /> 列名时，将 <see cref="T:System.Data.DataSet" /> 对象添加到集合中。</summary>
      <param name="sourceColumn" vsli:raw="The case-sensitive name of the source column to map to.">要映射到的源列的区分大小写的名称。</param>
      <param name="dataSetColumn" vsli:raw="The name, which is not case-sensitive, of the &lt;see cref=&quot;T:System.Data.DataSet&quot; /&gt; column to map to.">要映射到的 <see cref="T:System.Data.DataSet" /> 列的名称（该名称不区分大小写）。</param>
      <returns vsli:raw="The &lt;see langword=&quot;DataColumnMapping&quot; /&gt; object that was added to the collection.">已添加到集合中的 <see langword="DataColumnMapping" /> 对象。</returns>
    </member>
    <member name="M:System.Data.Common.DataColumnMappingCollection.AddRange(System.Array)">
      <summary vsli:raw="Copies the elements of the specified &lt;see cref=&quot;T:System.Array&quot; /&gt; to the end of the collection.">将指定的 <see cref="T:System.Array" /> 的元素复制到集合末尾。</summary>
      <param name="values" vsli:raw="The &lt;see cref=&quot;T:System.Array&quot; /&gt; to add to the collection.">要添加到集合中的 <see cref="T:System.Array" />。</param>
    </member>
    <member name="M:System.Data.Common.DataColumnMappingCollection.AddRange(System.Data.Common.DataColumnMapping[])">
      <summary vsli:raw="Copies the elements of the specified &lt;see cref=&quot;T:System.Data.Common.DataColumnMapping&quot; /&gt; array to the end of the collection.">将指定的 <see cref="T:System.Data.Common.DataColumnMapping" /> 数组的元素复制到集合末尾。</summary>
      <param name="values" vsli:raw="The array of &lt;see cref=&quot;T:System.Data.Common.DataColumnMapping&quot; /&gt; objects to add to the collection.">要添加到集合中的 <see cref="T:System.Data.Common.DataColumnMapping" /> 对象的数组。</param>
    </member>
    <member name="M:System.Data.Common.DataColumnMappingCollection.Clear">
      <summary vsli:raw="Removes all &lt;see cref=&quot;T:System.Data.Common.DataColumnMapping&quot; /&gt; objects from the collection.">从集合中删除所有 <see cref="T:System.Data.Common.DataColumnMapping" /> 对象。</summary>
    </member>
    <member name="M:System.Data.Common.DataColumnMappingCollection.Contains(System.Object)">
      <summary vsli:raw="Gets a value indicating whether a &lt;see cref=&quot;T:System.Data.Common.DataColumnMapping&quot; /&gt; object with the given &lt;see cref=&quot;T:System.Object&quot; /&gt; exists in the collection.">获取一个值，该值指示集合中是否存在具有给定 <see cref="T:System.Data.Common.DataColumnMapping" /> 的 <see cref="T:System.Object" /> 对象。</summary>
      <param name="value" vsli:raw="An &lt;see cref=&quot;T:System.Object&quot; /&gt; that is the &lt;see cref=&quot;T:System.Data.Common.DataColumnMapping&quot; /&gt;.">是 <see cref="T:System.Data.Common.DataColumnMapping" /> 的 <see cref="T:System.Object" />。</param>
      <exception cref="T:System.InvalidCastException" vsli:raw="The object passed in was not a &lt;see cref=&quot;T:System.Data.Common.DataColumnMapping&quot; /&gt; object.">传入的对象不是 <see cref="T:System.Data.Common.DataColumnMapping" /> 对象。</exception>
      <returns vsli:raw="&lt;see langword=&quot;true&quot; /&gt; if the collection contains the specified &lt;see cref=&quot;T:System.Data.Common.DataColumnMapping&quot; /&gt; object; otherwise, &lt;see langword=&quot;false&quot; /&gt;.">如果集合包含指定的 <see cref="T:System.Data.Common.DataColumnMapping" /> 对象，则为 <see langword="true" />；否则为 <see langword="false" />。</returns>
    </member>
    <member name="M:System.Data.Common.DataColumnMappingCollection.Contains(System.String)">
      <summary vsli:raw="Gets a value indicating whether a &lt;see cref=&quot;T:System.Data.Common.DataColumnMapping&quot; /&gt; object with the given source column name exists in the collection.">获取一个值，该值指示集合中是否存在具有给定源列名称的 <see cref="T:System.Data.Common.DataColumnMapping" /> 对象。</summary>
      <param name="value" vsli:raw="The case-sensitive source column name of the &lt;see cref=&quot;T:System.Data.Common.DataColumnMapping&quot; /&gt; object.">
        <see cref="T:System.Data.Common.DataColumnMapping" /> 对象的区分大小写的源列名称。</param>
      <returns vsli:raw="&lt;see langword=&quot;true&quot; /&gt; if collection contains a &lt;see cref=&quot;T:System.Data.Common.DataColumnMapping&quot; /&gt; object with the specified source column name; otherwise, &lt;see langword=&quot;false&quot; /&gt;.">如果集合包含具有指定源列名称的 <see cref="T:System.Data.Common.DataColumnMapping" /> 对象，则为 <see langword="true" />；否则为 <see langword="false" />。</returns>
    </member>
    <member name="M:System.Data.Common.DataColumnMappingCollection.CopyTo(System.Array,System.Int32)">
      <summary vsli:raw="Copies the elements of the &lt;see cref=&quot;T:System.Data.Common.DataColumnMappingCollection&quot; /&gt; to the specified array.">将 <see cref="T:System.Data.Common.DataColumnMappingCollection" /> 的元素复制到指定的数组。</summary>
      <param name="array" vsli:raw="An &lt;see cref=&quot;T:System.Array&quot; /&gt; to which to copy &lt;see cref=&quot;T:System.Data.Common.DataColumnMappingCollection&quot; /&gt; elements.">要将 <see cref="T:System.Array" /> 元素复制到其中的 <see cref="T:System.Data.Common.DataColumnMappingCollection" />。</param>
      <param name="index" vsli:raw="The starting index of the array.">数组的起始索引。</param>
    </member>
    <member name="M:System.Data.Common.DataColumnMappingCollection.CopyTo(System.Data.Common.DataColumnMapping[],System.Int32)">
      <summary vsli:raw="Copies the elements of the &lt;see cref=&quot;T:System.Data.Common.DataColumnMappingCollection&quot; /&gt; to the specified &lt;see cref=&quot;T:System.Data.Common.DataColumnMapping&quot; /&gt; array.">将 <see cref="T:System.Data.Common.DataColumnMappingCollection" /> 的元素复制到指定的 <see cref="T:System.Data.Common.DataColumnMapping" /> 数组。</summary>
      <param name="array" vsli:raw="A &lt;see cref=&quot;T:System.Data.Common.DataColumnMapping&quot; /&gt; array to which to copy the &lt;see cref=&quot;T:System.Data.Common.DataColumnMappingCollection&quot; /&gt; elements.">
        <see cref="T:System.Data.Common.DataColumnMapping" /> 元素要复制到的 <see cref="T:System.Data.Common.DataColumnMappingCollection" /> 数组。</param>
      <param name="index" vsli:raw="The zero-based index in the &lt;paramref name=&quot;array&quot; /&gt; at which copying begins.">
        <paramref name="array" /> 中从零开始的索引，在此处开始复制。</param>
    </member>
    <member name="M:System.Data.Common.DataColumnMappingCollection.GetByDataSetColumn(System.String)">
      <summary vsli:raw="Gets the &lt;see cref=&quot;T:System.Data.Common.DataColumnMapping&quot; /&gt; object with the specified &lt;see cref=&quot;T:System.Data.DataSet&quot; /&gt; column name.">获取具有指定 <see cref="T:System.Data.Common.DataColumnMapping" /> 列名的 <see cref="T:System.Data.DataSet" /> 对象。</summary>
      <param name="value" vsli:raw="The name, which is not case-sensitive, of the &lt;see cref=&quot;T:System.Data.DataSet&quot; /&gt; column to find.">要查找的 <see cref="T:System.Data.DataSet" /> 列的名称（该名称不区分大小写）。</param>
      <returns vsli:raw="The &lt;see cref=&quot;T:System.Data.Common.DataColumnMapping&quot; /&gt; object with the specified &lt;see cref=&quot;T:System.Data.DataSet&quot; /&gt; column name.">具有指定 <see cref="T:System.Data.Common.DataColumnMapping" /> 列名的 <see cref="T:System.Data.DataSet" /> 对象。</returns>
    </member>
    <member name="M:System.Data.Common.DataColumnMappingCollection.GetColumnMappingBySchemaAction(System.Data.Common.DataColumnMappingCollection,System.String,System.Data.MissingMappingAction)">
      <summary vsli:raw="Gets a &lt;see cref=&quot;T:System.Data.Common.DataColumnMapping&quot; /&gt; for the specified &lt;see cref=&quot;T:System.Data.Common.DataColumnMappingCollection&quot; /&gt;, source column name, and &lt;see cref=&quot;T:System.Data.MissingMappingAction&quot; /&gt;.">给指定的 <see cref="T:System.Data.Common.DataColumnMapping" />、源列名称和 <see cref="T:System.Data.Common.DataColumnMappingCollection" /> 获取一个 <see cref="T:System.Data.MissingMappingAction" />。</summary>
      <param name="columnMappings" vsli:raw="The &lt;see cref=&quot;T:System.Data.Common.DataColumnMappingCollection&quot; /&gt;.">
        <see cref="T:System.Data.Common.DataColumnMappingCollection" />
      </param>
      <param name="sourceColumn" vsli:raw="The case-sensitive source column name to find.">要查找的区分大小写的源列名称。</param>
      <param name="mappingAction" vsli:raw="One of the &lt;see cref=&quot;T:System.Data.MissingMappingAction&quot; /&gt; values.">
        <see cref="T:System.Data.MissingMappingAction" /> 值之一。</param>
      <exception cref="T:System.InvalidOperationException" vsli:raw="The &lt;paramref name=&quot;mappingAction&quot; /&gt; parameter was set to &lt;see langword=&quot;Error&quot; /&gt;, and no mapping was specified.">
        <paramref name="mappingAction" /> 参数设置为 <see langword="Error" />，并且未指定任何映射。</exception>
      <returns vsli:raw="A &lt;see cref=&quot;T:System.Data.Common.DataColumnMapping&quot; /&gt; object.">
        <see cref="T:System.Data.Common.DataColumnMapping" /> 对象。</returns>
    </member>
    <member name="M:System.Data.Common.DataColumnMappingCollection.GetDataColumn(System.Data.Common.DataColumnMappingCollection,System.String,System.Type,System.Data.DataTable,System.Data.MissingMappingAction,System.Data.MissingSchemaAction)">
      <summary vsli:raw="A static method that returns a &lt;see cref=&quot;T:System.Data.DataColumn&quot; /&gt; object without instantiating a &lt;see cref=&quot;T:System.Data.Common.DataColumnMappingCollection&quot; /&gt; object.">一个静态方法，它返回未实例化的 <see cref="T:System.Data.DataColumn" /> 对象的 <see cref="T:System.Data.Common.DataColumnMappingCollection" /> 对象。</summary>
      <param name="columnMappings" vsli:raw="The &lt;see cref=&quot;T:System.Data.Common.DataColumnMappingCollection&quot; /&gt;.">
        <see cref="T:System.Data.Common.DataColumnMappingCollection" />
      </param>
      <param name="sourceColumn" vsli:raw="The case-sensitive column name from a data source.">数据源中区分大小写的列名。</param>
      <param name="dataType" vsli:raw="The data type for the column being mapped.">正被映射的列的数据类型。</param>
      <param name="dataTable" vsli:raw="An instance of &lt;see cref=&quot;T:System.Data.DataTable&quot; /&gt;.">
        <see cref="T:System.Data.DataTable" /> 的一个实例。</param>
      <param name="mappingAction" vsli:raw="One of the &lt;see cref=&quot;T:System.Data.MissingMappingAction&quot; /&gt; values.">
        <see cref="T:System.Data.MissingMappingAction" /> 值之一。</param>
      <param name="schemaAction" vsli:raw="Determines the action to take when the existing &lt;see cref=&quot;T:System.Data.DataSet&quot; /&gt; schema does not match incoming data.">确定现有 <see cref="T:System.Data.DataSet" /> 架构与传入数据不匹配时需要执行的操作。</param>
      <returns vsli:raw="A &lt;see cref=&quot;T:System.Data.DataColumn&quot; /&gt; object.">
        <see cref="T:System.Data.DataColumn" /> 对象。</returns>
    </member>
    <member name="M:System.Data.Common.DataColumnMappingCollection.GetEnumerator">
      <summary vsli:raw="Gets an enumerator that can iterate through the collection.">获取可循环访问集合的枚举数。</summary>
      <returns vsli:raw="An &lt;see cref=&quot;T:System.Collections.IEnumerator&quot; /&gt; that can be used to iterate through the collection.">可用于循环访问集合的 <see cref="T:System.Collections.IEnumerator" />。</returns>
    </member>
    <member name="M:System.Data.Common.DataColumnMappingCollection.IndexOf(System.Object)">
      <summary vsli:raw="Gets the location of the specified &lt;see cref=&quot;T:System.Object&quot; /&gt; that is a &lt;see cref=&quot;T:System.Data.Common.DataColumnMapping&quot; /&gt; within the collection.">获取指定的 <see cref="T:System.Object" />（它是 <see cref="T:System.Data.Common.DataColumnMapping" />）在集合中的位置。</summary>
      <param name="value" vsli:raw="An &lt;see cref=&quot;T:System.Object&quot; /&gt; that is the &lt;see cref=&quot;T:System.Data.Common.DataColumnMapping&quot; /&gt; to find.">一个 <see cref="T:System.Object" />，它是要查找的 <see cref="T:System.Data.Common.DataColumnMapping" />。</param>
      <returns vsli:raw="The zero-based location of the specified &lt;see cref=&quot;T:System.Object&quot; /&gt; that is a &lt;see cref=&quot;T:System.Data.Common.DataColumnMapping&quot; /&gt; within the collection.">指定的 <see cref="T:System.Object" />（它是 <see cref="T:System.Data.Common.DataColumnMapping" />）在集合中从零开始的位置。</returns>
    </member>
    <member name="M:System.Data.Common.DataColumnMappingCollection.IndexOf(System.String)">
      <summary vsli:raw="Gets the location of the &lt;see cref=&quot;T:System.Data.Common.DataColumnMapping&quot; /&gt; with the specified source column name.">获取具有指定源列名称的 <see cref="T:System.Data.Common.DataColumnMapping" /> 的位置。</summary>
      <param name="sourceColumn" vsli:raw="The case-sensitive name of the source column.">源列的区分大小写的名称。</param>
      <returns vsli:raw="The zero-based location of the &lt;see cref=&quot;T:System.Data.Common.DataColumnMapping&quot; /&gt; with the specified case-sensitive source column name.">具有指定的区分大小写的源列名称的 <see cref="T:System.Data.Common.DataColumnMapping" /> 从零开始的位置。</returns>
    </member>
    <member name="M:System.Data.Common.DataColumnMappingCollection.IndexOfDataSetColumn(System.String)">
      <summary vsli:raw="Gets the location of the specified &lt;see cref=&quot;T:System.Data.Common.DataColumnMapping&quot; /&gt; with the given &lt;see cref=&quot;T:System.Data.DataSet&quot; /&gt; column name.">获取具有给定 <see cref="T:System.Data.Common.DataColumnMapping" /> 列名的指定 <see cref="T:System.Data.DataSet" /> 的位置。</summary>
      <param name="dataSetColumn" vsli:raw="The name, which is not case-sensitive, of the data set column to find.">要查找的数据集列的名称（该名称不区分大小写）。</param>
      <returns vsli:raw="The zero-based location of the specified &lt;see cref=&quot;T:System.Data.Common.DataColumnMapping&quot; /&gt; with the given &lt;see langword=&quot;DataSet&quot; /&gt; column name, or -1 if the &lt;see langword=&quot;DataColumnMapping&quot; /&gt; object does not exist in the collection.">具有给定 <see langword="DataSet" /> 列名的指定 <see cref="T:System.Data.Common.DataColumnMapping" /> 的从零开始的位置；或者如果在集合中不存在 <see langword="DataColumnMapping" /> 对象，则为 -1。</returns>
    </member>
    <member name="M:System.Data.Common.DataColumnMappingCollection.Insert(System.Int32,System.Data.Common.DataColumnMapping)">
      <summary vsli:raw="Inserts a &lt;see cref=&quot;T:System.Data.Common.DataColumnMapping&quot; /&gt; object into the &lt;see cref=&quot;T:System.Data.Common.DataColumnMappingCollection&quot; /&gt; at the specified index.">在 <see cref="T:System.Data.Common.DataColumnMapping" /> 中的指定索引处插入一个 <see cref="T:System.Data.Common.DataColumnMappingCollection" /> 对象。</summary>
      <param name="index" vsli:raw="The zero-based index of the &lt;see cref=&quot;T:System.Data.Common.DataColumnMapping&quot; /&gt; object to insert.">要插入的 <see cref="T:System.Data.Common.DataColumnMapping" /> 对象的从零开始的索引。</param>
      <param name="value" vsli:raw="The &lt;see cref=&quot;T:System.Data.Common.DataColumnMapping&quot; /&gt; object.">
        <see cref="T:System.Data.Common.DataColumnMapping" /> 对象。</param>
    </member>
    <member name="M:System.Data.Common.DataColumnMappingCollection.Insert(System.Int32,System.Object)">
      <summary vsli:raw="Inserts a &lt;see cref=&quot;T:System.Data.Common.DataColumnMapping&quot; /&gt; object into the &lt;see cref=&quot;T:System.Data.Common.DataColumnMappingCollection&quot; /&gt; at the specified index.">在 <see cref="T:System.Data.Common.DataColumnMapping" /> 中的指定索引处插入一个 <see cref="T:System.Data.Common.DataColumnMappingCollection" /> 对象。</summary>
      <param name="index" vsli:raw="The zero-based index of the &lt;see cref=&quot;T:System.Data.Common.DataColumnMapping&quot; /&gt; object to insert.">要插入的 <see cref="T:System.Data.Common.DataColumnMapping" /> 对象的从零开始的索引。</param>
      <param name="value" vsli:raw="The &lt;see cref=&quot;T:System.Data.Common.DataColumnMapping&quot; /&gt; object.">
        <see cref="T:System.Data.Common.DataColumnMapping" /> 对象。</param>
    </member>
    <member name="M:System.Data.Common.DataColumnMappingCollection.Remove(System.Data.Common.DataColumnMapping)">
      <summary vsli:raw="Removes the specified &lt;see cref=&quot;T:System.Data.Common.DataColumnMapping&quot; /&gt; from the collection.">从集合中移除指定的 <see cref="T:System.Data.Common.DataColumnMapping" />。</summary>
      <param name="value" vsli:raw="The &lt;see cref=&quot;T:System.Data.Common.DataColumnMapping&quot; /&gt; to remove.">要移除的 <see cref="T:System.Data.Common.DataColumnMapping" />。</param>
    </member>
    <member name="M:System.Data.Common.DataColumnMappingCollection.Remove(System.Object)">
      <summary vsli:raw="Removes the &lt;see cref=&quot;T:System.Object&quot; /&gt; that is a &lt;see cref=&quot;T:System.Data.Common.DataColumnMapping&quot; /&gt; from the collection.">从集合中移除 <see cref="T:System.Object" />，它是一个 <see cref="T:System.Data.Common.DataColumnMapping" />。</summary>
      <param name="value" vsli:raw="The &lt;see cref=&quot;T:System.Object&quot; /&gt; that is the &lt;see cref=&quot;T:System.Data.Common.DataColumnMapping&quot; /&gt; to remove.">
        <see cref="T:System.Object" />，它是要移除的 <see cref="T:System.Data.Common.DataColumnMapping" />。</param>
      <exception cref="T:System.InvalidCastException" vsli:raw="The object specified was not a &lt;see cref=&quot;T:System.Data.Common.DataColumnMapping&quot; /&gt; object.">指定的对象不是 <see cref="T:System.Data.Common.DataColumnMapping" /> 对象。</exception>
      <exception cref="T:System.ArgumentException" vsli:raw="The object specified is not in the collection.">指定的对象不在集合中。</exception>
    </member>
    <member name="M:System.Data.Common.DataColumnMappingCollection.RemoveAt(System.Int32)">
      <summary vsli:raw="Removes the &lt;see cref=&quot;T:System.Data.Common.DataColumnMapping&quot; /&gt; object with the specified index from the collection.">从集合中移除具有指定索引的 <see cref="T:System.Data.Common.DataColumnMapping" /> 对象。</summary>
      <param name="index" vsli:raw="The zero-based index of the &lt;see cref=&quot;T:System.Data.Common.DataColumnMapping&quot; /&gt; object to remove.">要移除的 <see cref="T:System.Data.Common.DataColumnMapping" /> 对象的从零开始的索引。</param>
      <exception cref="T:System.IndexOutOfRangeException" vsli:raw="There is no &lt;see cref=&quot;T:System.Data.Common.DataColumnMapping&quot; /&gt; object with the specified index.">没有具有指定索引的 <see cref="T:System.Data.Common.DataColumnMapping" /> 对象。</exception>
    </member>
    <member name="M:System.Data.Common.DataColumnMappingCollection.RemoveAt(System.String)">
      <summary vsli:raw="Removes the &lt;see cref=&quot;T:System.Data.Common.DataColumnMapping&quot; /&gt; object with the specified source column name from the collection.">从集合中移除具有指定源列名称的 <see cref="T:System.Data.Common.DataColumnMapping" /> 对象。</summary>
      <param name="sourceColumn" vsli:raw="The case-sensitive source column name.">区分大小写的源列名称。</param>
      <exception cref="T:System.IndexOutOfRangeException" vsli:raw="There is no &lt;see cref=&quot;T:System.Data.Common.DataColumnMapping&quot; /&gt; object with the specified source column name.">没有具有指定源列名称的 <see cref="T:System.Data.Common.DataColumnMapping" /> 对象。</exception>
    </member>
    <member name="M:System.Data.Common.DataColumnMappingCollection.System#Data#IColumnMappingCollection#Add(System.String,System.String)">
      <summary vsli:raw="Adds a &lt;see cref=&quot;T:System.Data.Common.DataColumnMapping&quot; /&gt; object to the &lt;see cref=&quot;T:System.Data.Common.DataColumnMappingCollection&quot; /&gt; by using the source column and &lt;see cref=&quot;T:System.Data.DataSet&quot; /&gt; column names.">使用源列名和 <see cref="T:System.Data.Common.DataColumnMapping" /> 列名将 <see cref="T:System.Data.Common.DataColumnMappingCollection" /> 对象添加到 <see cref="T:System.Data.DataSet" />。</summary>
      <param name="sourceColumnName" vsli:raw="The case-sensitive name of the source column.">源列的区分大小写的名称。</param>
      <param name="dataSetColumnName" vsli:raw="The name of the &lt;see cref=&quot;T:System.Data.DataSet&quot; /&gt; column.">
        <see cref="T:System.Data.DataSet" /> 列的名称。</param>
      <returns vsli:raw="The ColumnMapping object that was added to the collection.">已添加到集合中的 ColumnMapping 对象。</returns>
    </member>
    <member name="M:System.Data.Common.DataColumnMappingCollection.System#Data#IColumnMappingCollection#GetByDataSetColumn(System.String)">
      <summary vsli:raw="Gets the &lt;see cref=&quot;T:System.Data.Common.DataColumnMapping&quot; /&gt; object that has the specified &lt;see cref=&quot;T:System.Data.DataSet&quot; /&gt; column name.">获取具有指定的 <see cref="T:System.Data.Common.DataColumnMapping" /> 列名的 <see cref="T:System.Data.DataSet" /> 对象。</summary>
      <param name="dataSetColumnName" vsli:raw="The name, which is not case-sensitive, of the &lt;see cref=&quot;T:System.Data.DataSet&quot; /&gt; column to find.">要查找的 <see cref="T:System.Data.DataSet" /> 列的名称（该名称不区分大小写）。</param>
      <returns vsli:raw="The &lt;see cref=&quot;T:System.Data.Common.DataColumnMapping&quot; /&gt; object that  has the specified &lt;see cref=&quot;T:System.Data.DataSet&quot; /&gt; column name.">具有指定的 <see cref="T:System.Data.Common.DataColumnMapping" /> 列名的 <see cref="T:System.Data.DataSet" /> 对象。</returns>
    </member>
    <member name="P:System.Data.Common.DataColumnMappingCollection.Count">
      <summary vsli:raw="Gets the number of &lt;see cref=&quot;T:System.Data.Common.DataColumnMapping&quot; /&gt; objects in the collection.">获取集合中 <see cref="T:System.Data.Common.DataColumnMapping" /> 对象的数量。</summary>
      <returns vsli:raw="The number of items in the collection.">集合中项的数目。</returns>
    </member>
    <member name="P:System.Data.Common.DataColumnMappingCollection.Item(System.Int32)">
      <summary vsli:raw="Gets or sets the &lt;see cref=&quot;T:System.Data.Common.DataColumnMapping&quot; /&gt; object at the specified index.">获取或设置位于指定索引处的 <see cref="T:System.Data.Common.DataColumnMapping" /> 对象。</summary>
      <param name="index" vsli:raw="The zero-based index of the &lt;see cref=&quot;T:System.Data.Common.DataColumnMapping&quot; /&gt; object to find.">要查找的 <see cref="T:System.Data.Common.DataColumnMapping" /> 对象的从零开始的索引。</param>
      <returns vsli:raw="The &lt;see cref=&quot;T:System.Data.Common.DataColumnMapping&quot; /&gt; object at the specified index.">指定索引处的 <see cref="T:System.Data.Common.DataColumnMapping" /> 对象。</returns>
    </member>
    <member name="P:System.Data.Common.DataColumnMappingCollection.Item(System.String)">
      <summary vsli:raw="Gets or sets the &lt;see cref=&quot;T:System.Data.Common.DataColumnMapping&quot; /&gt; object with the specified source column name.">获取或设置具有指定源列名称的 <see cref="T:System.Data.Common.DataColumnMapping" /> 对象。</summary>
      <param name="sourceColumn" vsli:raw="The case-sensitive name of the source column.">源列的区分大小写的名称。</param>
      <returns vsli:raw="The &lt;see cref=&quot;T:System.Data.Common.DataColumnMapping&quot; /&gt; object with the specified source column name.">具有指定源列名称的 <see cref="T:System.Data.Common.DataColumnMapping" /> 对象。</returns>
    </member>
    <member name="P:System.Data.Common.DataColumnMappingCollection.System#Collections#ICollection#IsSynchronized">
      <summary vsli:raw="Gets a value that indicates whether access to the &lt;see cref=&quot;T:System.Collections.ICollection&quot; /&gt; is synchronized (thread safe).">获取一个值，该值指示是否同步对 <see cref="T:System.Collections.ICollection" /> 的访问（线程安全）。</summary>
      <returns vsli:raw="&lt;see langword=&quot;true&quot; /&gt; if access to the &lt;see cref=&quot;T:System.Collections.ICollection&quot; /&gt; is synchronized (thread safe); otherwise, &lt;see langword=&quot;false&quot; /&gt;.">如果对 <see langword="true" /> 的访问是同步的（线程安全），则为 <see cref="T:System.Collections.ICollection" />；否则为 <see langword="false" />。</returns>
    </member>
    <member name="P:System.Data.Common.DataColumnMappingCollection.System#Collections#ICollection#SyncRoot">
      <summary vsli:raw="Gets an object that can be used to synchronize access to the &lt;see cref=&quot;T:System.Collections.ICollection&quot; /&gt;.">获取可用于同步对 <see cref="T:System.Collections.ICollection" /> 的访问的对象。</summary>
      <returns vsli:raw="An object that can be used to synchronize access to the &lt;see cref=&quot;T:System.Collections.ICollection&quot; /&gt;.">用于同步对 <see cref="T:System.Collections.ICollection" /> 的访问的对象。</returns>
    </member>
    <member name="P:System.Data.Common.DataColumnMappingCollection.System#Collections#IList#IsFixedSize">
      <summary vsli:raw="Gets a value that indicates whether the &lt;see cref=&quot;T:System.Collections.IList&quot; /&gt; has a fixed size.">获取一个值，该值指示 <see cref="T:System.Collections.IList" /> 是否具有固定大小。</summary>
      <returns vsli:raw="&lt;see langword=&quot;true&quot; /&gt; if the &lt;see cref=&quot;T:System.Collections.IList&quot; /&gt; has a fixed size; otherwise, &lt;see langword=&quot;false&quot; /&gt;.">如果 <see langword="true" /> 具有固定大小，则为 <see cref="T:System.Collections.IList" />；否则为 <see langword="false" />。</returns>
    </member>
    <member name="P:System.Data.Common.DataColumnMappingCollection.System#Collections#IList#IsReadOnly">
      <summary vsli:raw="Gets a value that indicates whether the &lt;see cref=&quot;T:System.Collections.IList&quot; /&gt; is read-only.">获取一个值，该值指示 <see cref="T:System.Collections.IList" /> 是否为只读。</summary>
      <returns vsli:raw="&lt;see langword=&quot;true&quot; /&gt; if the &lt;see cref=&quot;T:System.Collections.IList&quot; /&gt; is read-only; otherwise, &lt;see langword=&quot;false&quot; /&gt;.">如果 <see langword="true" /> 是只读的，则为 <see cref="T:System.Collections.IList" />；否则为 <see langword="false" />。</returns>
    </member>
    <member name="P:System.Data.Common.DataColumnMappingCollection.System#Collections#IList#Item(System.Int32)">
      <summary vsli:raw="Gets or sets the element at the specified index.">获取或设置指定索引处的元素。</summary>
      <param name="index" vsli:raw="The zero-based index of the element to get or set.">要获取或设置的元素的从零开始的索引。</param>
      <returns vsli:raw="The element at the specified index.">指定索引处的元素。</returns>
    </member>
    <member name="P:System.Data.Common.DataColumnMappingCollection.System#Data#IColumnMappingCollection#Item(System.String)">
      <summary vsli:raw="Gets or sets the &lt;see cref=&quot;T:System.Data.IColumnMapping&quot; /&gt; object with the specified &lt;see langword=&quot;SourceColumn&quot; /&gt; name.">获取或设置具有指定 <see langword="SourceColumn" /> 名称的 <see cref="T:System.Data.IColumnMapping" /> 对象。</summary>
      <param name="index" vsli:raw="Index of the element.">元素的索引。</param>
      <returns vsli:raw="The &lt;see langword=&quot;IColumnMapping&quot; /&gt; object with the specified &lt;see langword=&quot;SourceColumn&quot; /&gt; name.">具有指定 <see langword="IColumnMapping" /> 名称的 <see langword="SourceColumn" /> 对象。</returns>
    </member>
    <member name="T:System.Data.Common.DataTableMapping">
      <summary vsli:raw="Contains a description of a mapped relationship between a source table and a &lt;see cref=&quot;T:System.Data.DataTable&quot; /&gt;. This class is used by a &lt;see cref=&quot;T:System.Data.Common.DataAdapter&quot; /&gt; when populating a &lt;see cref=&quot;T:System.Data.DataSet&quot; /&gt;.">包含有关源表与 <see cref="T:System.Data.DataTable" /> 之间映射关系的说明。 填充 <see cref="T:System.Data.DataSet" /> 时，由 <see cref="T:System.Data.Common.DataAdapter" /> 使用该类。</summary>
    </member>
    <member name="M:System.Data.Common.DataTableMapping.#ctor">
      <summary vsli:raw="Initializes a new instance of the &lt;see cref=&quot;T:System.Data.Common.DataTableMapping&quot; /&gt; class.">初始化 <see cref="T:System.Data.Common.DataTableMapping" /> 类的新实例。</summary>
    </member>
    <member name="M:System.Data.Common.DataTableMapping.#ctor(System.String,System.String)">
      <summary vsli:raw="Initializes a new instance of the &lt;see cref=&quot;T:System.Data.Common.DataTableMapping&quot; /&gt; class with a source when given a source table name and a &lt;see cref=&quot;T:System.Data.DataTable&quot; /&gt; name.">给定源表名称和 <see cref="T:System.Data.DataTable" /> 名称时，使用源初始化 <see cref="T:System.Data.Common.DataTableMapping" /> 类的新实例。</summary>
      <param name="sourceTable" vsli:raw="The case-sensitive source table name from a data source.">数据源中区分大小写的源表名称。</param>
      <param name="dataSetTable" vsli:raw="The table name from a &lt;see cref=&quot;T:System.Data.DataSet&quot; /&gt; to map to.">
        <see cref="T:System.Data.DataSet" /> 中要映射到的表名。</param>
    </member>
    <member name="M:System.Data.Common.DataTableMapping.#ctor(System.String,System.String,System.Data.Common.DataColumnMapping[])">
      <summary vsli:raw="Initializes a new instance of the &lt;see cref=&quot;T:System.Data.Common.DataTableMapping&quot; /&gt; class when given a source table name, a &lt;see cref=&quot;T:System.Data.DataTable&quot; /&gt; name, and an array of &lt;see cref=&quot;T:System.Data.Common.DataColumnMapping&quot; /&gt; objects.">给定源表名称、<see cref="T:System.Data.DataTable" /> 名称和 <see cref="T:System.Data.Common.DataColumnMapping" /> 对象数组时，初始化 <see cref="T:System.Data.Common.DataTableMapping" /> 类的新实例。</summary>
      <param name="sourceTable" vsli:raw="The case-sensitive source table name from a data source.">数据源中区分大小写的源表名称。</param>
      <param name="dataSetTable" vsli:raw="The table name from a &lt;see cref=&quot;T:System.Data.DataSet&quot; /&gt; to map to.">
        <see cref="T:System.Data.DataSet" /> 中要映射到的表名。</param>
      <param name="columnMappings" vsli:raw="An array of &lt;see cref=&quot;T:System.Data.Common.DataColumnMapping&quot; /&gt; objects.">一个 <see cref="T:System.Data.Common.DataColumnMapping" /> 对象数组。</param>
    </member>
    <member name="M:System.Data.Common.DataTableMapping.GetColumnMappingBySchemaAction(System.String,System.Data.MissingMappingAction)">
      <summary vsli:raw="Gets a &lt;see cref=&quot;T:System.Data.DataColumn&quot; /&gt; from the specified &lt;see cref=&quot;T:System.Data.DataTable&quot; /&gt; using the specified &lt;see cref=&quot;T:System.Data.MissingMappingAction&quot; /&gt; value and the name of the &lt;see cref=&quot;T:System.Data.DataColumn&quot; /&gt;.">使用指定的 <see cref="T:System.Data.MissingMappingAction" /> 值和 <see cref="T:System.Data.DataColumn" /> 的名称从指定的 <see cref="T:System.Data.DataTable" /> 中获取 <see cref="T:System.Data.DataColumn" />。</summary>
      <param name="sourceColumn" vsli:raw="The name of the &lt;see cref=&quot;T:System.Data.DataColumn&quot; /&gt;.">
        <see cref="T:System.Data.DataColumn" /> 的名称。</param>
      <param name="mappingAction" vsli:raw="One of the &lt;see cref=&quot;T:System.Data.MissingMappingAction&quot; /&gt; values.">
        <see cref="T:System.Data.MissingMappingAction" /> 值之一。</param>
      <exception cref="T:System.InvalidOperationException" vsli:raw="The &lt;paramref name=&quot;mappingAction&quot; /&gt; parameter was set to &lt;see langword=&quot;Error&quot; /&gt;, and no mapping was specified.">
        <paramref name="mappingAction" /> 参数设置为 <see langword="Error" />，并且未指定任何映射。</exception>
      <returns vsli:raw="A data column.">数据列。</returns>
    </member>
    <member name="M:System.Data.Common.DataTableMapping.GetDataColumn(System.String,System.Type,System.Data.DataTable,System.Data.MissingMappingAction,System.Data.MissingSchemaAction)">
      <summary vsli:raw="Returns a &lt;see cref=&quot;T:System.Data.DataColumn&quot; /&gt; object for a given column name.">为给定的列名返回 <see cref="T:System.Data.DataColumn" /> 对象。</summary>
      <param name="sourceColumn" vsli:raw="The name of the &lt;see cref=&quot;T:System.Data.DataColumn&quot; /&gt;.">
        <see cref="T:System.Data.DataColumn" /> 的名称。</param>
      <param name="dataType" vsli:raw="The data type for &lt;paramref name=&quot;sourceColumn&quot; /&gt;.">
        <paramref name="sourceColumn" /> 的数据类型。</param>
      <param name="dataTable" vsli:raw="The table name from a &lt;see cref=&quot;T:System.Data.DataSet&quot; /&gt; to map to.">
        <see cref="T:System.Data.DataSet" /> 中要映射到的表名。</param>
      <param name="mappingAction" vsli:raw="One of the &lt;see cref=&quot;T:System.Data.MissingMappingAction&quot; /&gt; values.">
        <see cref="T:System.Data.MissingMappingAction" /> 值之一。</param>
      <param name="schemaAction" vsli:raw="One of the &lt;see cref=&quot;T:System.Data.MissingSchemaAction&quot; /&gt; values.">
        <see cref="T:System.Data.MissingSchemaAction" /> 值之一。</param>
      <returns vsli:raw="A &lt;see cref=&quot;T:System.Data.DataColumn&quot; /&gt; object.">
        <see cref="T:System.Data.DataColumn" /> 对象。</returns>
    </member>
    <member name="M:System.Data.Common.DataTableMapping.GetDataTableBySchemaAction(System.Data.DataSet,System.Data.MissingSchemaAction)">
      <summary vsli:raw="Gets the current &lt;see cref=&quot;T:System.Data.DataTable&quot; /&gt; for the specified &lt;see cref=&quot;T:System.Data.DataSet&quot; /&gt; using the specified &lt;see cref=&quot;T:System.Data.MissingSchemaAction&quot; /&gt; value.">使用指定的 <see cref="T:System.Data.MissingSchemaAction" /> 值获取指定 <see cref="T:System.Data.DataSet" /> 的当前 <see cref="T:System.Data.DataTable" />。</summary>
      <param name="dataSet" vsli:raw="The &lt;see cref=&quot;T:System.Data.DataSet&quot; /&gt; from which to get the &lt;see cref=&quot;T:System.Data.DataTable&quot; /&gt;.">要从其中获取 <see cref="T:System.Data.DataTable" /> 的 <see cref="T:System.Data.DataSet" />。</param>
      <param name="schemaAction" vsli:raw="One of the &lt;see cref=&quot;T:System.Data.MissingSchemaAction&quot; /&gt; values.">
        <see cref="T:System.Data.MissingSchemaAction" /> 值之一。</param>
      <returns vsli:raw="A data table.">数据表。</returns>
    </member>
    <member name="M:System.Data.Common.DataTableMapping.System#ICloneable#Clone">
      <summary vsli:raw="Creates a new object that is a copy of the current instance.">创建作为当前实例副本的新对象。</summary>
      <returns vsli:raw="A new object that is a copy of the current instance.">作为当前实例副本的新对象。</returns>
    </member>
    <member name="M:System.Data.Common.DataTableMapping.ToString">
      <summary vsli:raw="Converts the current &lt;see cref=&quot;P:System.Data.Common.DataTableMapping.SourceTable&quot; /&gt; name to a string.">将当前的 <see cref="P:System.Data.Common.DataTableMapping.SourceTable" /> 名称转换为字符串。</summary>
      <returns vsli:raw="The current &lt;see cref=&quot;P:System.Data.Common.DataTableMapping.SourceTable&quot; /&gt; name, as a string.">当前的 <see cref="P:System.Data.Common.DataTableMapping.SourceTable" /> 名称作为字符串。</returns>
    </member>
    <member name="P:System.Data.Common.DataTableMapping.ColumnMappings">
      <summary vsli:raw="Gets the &lt;see cref=&quot;T:System.Data.Common.DataColumnMappingCollection&quot; /&gt; for the &lt;see cref=&quot;T:System.Data.DataTable&quot; /&gt;.">获取 <see cref="T:System.Data.Common.DataColumnMappingCollection" /> 的 <see cref="T:System.Data.DataTable" />。</summary>
      <returns vsli:raw="A data column mapping collection.">一个数据列映射集合。</returns>
    </member>
    <member name="P:System.Data.Common.DataTableMapping.DataSetTable">
      <summary vsli:raw="Gets or sets the table name from a &lt;see cref=&quot;T:System.Data.DataSet&quot; /&gt;.">获取或设置 <see cref="T:System.Data.DataSet" /> 中的表名。</summary>
      <returns vsli:raw="The table name from a &lt;see cref=&quot;T:System.Data.DataSet&quot; /&gt;.">
        <see cref="T:System.Data.DataSet" /> 中的表名称。</returns>
    </member>
    <member name="P:System.Data.Common.DataTableMapping.SourceTable">
      <summary vsli:raw="Gets or sets the case-sensitive source table name from a data source.">获取或设置数据源中区分大小写的源表名称。</summary>
      <returns vsli:raw="The case-sensitive source table name from a data source.">数据源中区分大小写的源表名称。</returns>
    </member>
    <member name="P:System.Data.Common.DataTableMapping.System#Data#ITableMapping#ColumnMappings">
      <summary vsli:raw="Gets the derived &lt;see cref=&quot;T:System.Data.Common.DataColumnMappingCollection&quot; /&gt; for the &lt;see cref=&quot;T:System.Data.DataTable&quot; /&gt;.">获取 <see cref="T:System.Data.DataTable" /> 的派生 <see cref="T:System.Data.Common.DataColumnMappingCollection" />。</summary>
      <returns vsli:raw="A data column mapping collection.">一个数据列映射集合。</returns>
    </member>
    <member name="T:System.Data.Common.DataTableMappingCollection">
      <summary vsli:raw="A collection of &lt;see cref=&quot;T:System.Data.Common.DataTableMapping&quot; /&gt; objects. This class cannot be inherited.">
        <see cref="T:System.Data.Common.DataTableMapping" /> 对象的集合。 此类不能被继承。</summary>
    </member>
    <member name="M:System.Data.Common.DataTableMappingCollection.#ctor">
      <summary vsli:raw="Initializes a new instance of the &lt;see cref=&quot;T:System.Data.Common.DataTableMappingCollection&quot; /&gt; class. This new instance is empty, that is, it does not yet contain any &lt;see cref=&quot;T:System.Data.Common.DataTableMapping&quot; /&gt; objects.">初始化 <see cref="T:System.Data.Common.DataTableMappingCollection" /> 类的新实例。 此新实例为空，即它尚未包含任何 <see cref="T:System.Data.Common.DataTableMapping" /> 对象。</summary>
    </member>
    <member name="M:System.Data.Common.DataTableMappingCollection.Add(System.Object)">
      <summary vsli:raw="Adds an &lt;see cref=&quot;T:System.Object&quot; /&gt; that is a table mapping to the collection.">添加 <see cref="T:System.Object" />，它是集合的表映射。</summary>
      <param name="value" vsli:raw="A &lt;see langword=&quot;DataTableMapping&quot; /&gt; object to add to the collection.">要添加到集合的 <see langword="DataTableMapping" /> 对象。</param>
      <exception cref="T:System.InvalidCastException" vsli:raw="The object passed in was not a &lt;see cref=&quot;T:System.Data.Common.DataTableMapping&quot; /&gt; object.">传入的对象不是 <see cref="T:System.Data.Common.DataTableMapping" /> 对象。</exception>
      <returns vsli:raw="The index of the &lt;see langword=&quot;DataTableMapping&quot; /&gt; object added to the collection.">添加到集合中的 <see langword="DataTableMapping" /> 对象的索引。</returns>
    </member>
    <member name="M:System.Data.Common.DataTableMappingCollection.Add(System.String,System.String)">
      <summary vsli:raw="Adds a &lt;see cref=&quot;T:System.Data.Common.DataTableMapping&quot; /&gt; object to the collection when given a source table name and a &lt;see cref=&quot;T:System.Data.DataSet&quot; /&gt; table name.">给定源表名称和 <see cref="T:System.Data.DataSet" /> 表名时，向集合添加 <see cref="T:System.Data.Common.DataTableMapping" /> 对象。</summary>
      <param name="sourceTable" vsli:raw="The case-sensitive name of the source table to map from.">要从中映射的源表的区分大小写的名称。</param>
      <param name="dataSetTable" vsli:raw="The name, which is not case-sensitive, of the &lt;see cref=&quot;T:System.Data.DataSet&quot; /&gt; table to map to.">要映射到的 <see cref="T:System.Data.DataSet" /> 表的名称（该名称不区分大小写）。</param>
      <returns vsli:raw="The &lt;see cref=&quot;T:System.Data.Common.DataTableMapping&quot; /&gt; object that was added to the collection.">已添加到集合中的 <see cref="T:System.Data.Common.DataTableMapping" /> 对象。</returns>
    </member>
    <member name="M:System.Data.Common.DataTableMappingCollection.AddRange(System.Array)">
      <summary vsli:raw="Copies the elements of the specified &lt;see cref=&quot;T:System.Array&quot; /&gt; to the end of the collection.">将指定的 <see cref="T:System.Array" /> 的元素复制到集合末尾。</summary>
      <param name="values" vsli:raw="An &lt;see cref=&quot;T:System.Array&quot; /&gt; of values to add to the collection.">要添加到集合的值的 <see cref="T:System.Array" />。</param>
    </member>
    <member name="M:System.Data.Common.DataTableMappingCollection.AddRange(System.Data.Common.DataTableMapping[])">
      <summary vsli:raw="Copies the elements of the specified &lt;see cref=&quot;T:System.Data.Common.DataTableMapping&quot; /&gt; array to the end of the collection.">将指定的 <see cref="T:System.Data.Common.DataTableMapping" /> 数组的元素复制到集合末尾。</summary>
      <param name="values" vsli:raw="The array of &lt;see cref=&quot;T:System.Data.Common.DataTableMapping&quot; /&gt; objects to add to the collection.">要添加到集合中的 <see cref="T:System.Data.Common.DataTableMapping" /> 对象的数组。</param>
    </member>
    <member name="M:System.Data.Common.DataTableMappingCollection.Clear">
      <summary vsli:raw="Removes all &lt;see cref=&quot;T:System.Data.Common.DataTableMapping&quot; /&gt; objects from the collection.">从集合中删除所有 <see cref="T:System.Data.Common.DataTableMapping" /> 对象。</summary>
    </member>
    <member name="M:System.Data.Common.DataTableMappingCollection.Contains(System.Object)">
      <summary vsli:raw="Gets a value indicating whether the given &lt;see cref=&quot;T:System.Data.Common.DataTableMapping&quot; /&gt; object exists in the collection.">获取一个值，该值指示集合中是否存在给定的 <see cref="T:System.Data.Common.DataTableMapping" /> 对象。</summary>
      <param name="value" vsli:raw="An &lt;see cref=&quot;T:System.Object&quot; /&gt; that is the &lt;see cref=&quot;T:System.Data.Common.DataTableMapping&quot; /&gt;.">是 <see cref="T:System.Data.Common.DataTableMapping" /> 的 <see cref="T:System.Object" />。</param>
      <returns vsli:raw="&lt;see langword=&quot;true&quot; /&gt; if this collection contains the specified &lt;see cref=&quot;T:System.Data.Common.DataTableMapping&quot; /&gt;; otherwise &lt;see langword=&quot;false&quot; /&gt;.">如果此集合包含指定的 <see cref="T:System.Data.Common.DataTableMapping" />，则为 <see langword="true" />；否则为 <see langword="false" />。</returns>
    </member>
    <member name="M:System.Data.Common.DataTableMappingCollection.Contains(System.String)">
      <summary vsli:raw="Gets a value indicating whether a &lt;see cref=&quot;T:System.Data.Common.DataTableMapping&quot; /&gt; object with the specified source table name exists in the collection.">获取一个值，该值指示集合中是否存在具有指定源表名称的 <see cref="T:System.Data.Common.DataTableMapping" /> 对象。</summary>
      <param name="value" vsli:raw="The case-sensitive source table name containing the &lt;see cref=&quot;T:System.Data.Common.DataTableMapping&quot; /&gt; object.">包含 <see cref="T:System.Data.Common.DataTableMapping" /> 对象的区分大小写的源表名称。</param>
      <returns vsli:raw="&lt;see langword=&quot;true&quot; /&gt; if the collection contains a &lt;see cref=&quot;T:System.Data.Common.DataTableMapping&quot; /&gt; object with this source table name; otherwise &lt;see langword=&quot;false&quot; /&gt;.">如果该集合包含具有此源表名称的 <see cref="T:System.Data.Common.DataTableMapping" /> 对象，则为 <see langword="true" />；否则为 <see langword="false" />。</returns>
    </member>
    <member name="M:System.Data.Common.DataTableMappingCollection.CopyTo(System.Array,System.Int32)">
      <summary vsli:raw="Copies the elements of the &lt;see cref=&quot;T:System.Data.Common.DataTableMappingCollection&quot; /&gt; to the specified array.">将 <see cref="T:System.Data.Common.DataTableMappingCollection" /> 的元素复制到指定的数组。</summary>
      <param name="array" vsli:raw="An &lt;see cref=&quot;T:System.Array&quot; /&gt; to which to copy the &lt;see cref=&quot;T:System.Data.Common.DataTableMappingCollection&quot; /&gt; elements.">要将 <see cref="T:System.Data.Common.DataTableMappingCollection" /> 元素复制到其中的 <see cref="T:System.Array" />。</param>
      <param name="index" vsli:raw="The starting index of the array.">数组的起始索引。</param>
    </member>
    <member name="M:System.Data.Common.DataTableMappingCollection.CopyTo(System.Data.Common.DataTableMapping[],System.Int32)">
      <summary vsli:raw="Copies the elements of the &lt;see cref=&quot;T:System.Data.Common.DataTableMapping&quot; /&gt; to the specified array.">将 <see cref="T:System.Data.Common.DataTableMapping" /> 的元素复制到指定的数组。</summary>
      <param name="array" vsli:raw="A &lt;see cref=&quot;T:System.Data.Common.DataTableMapping&quot; /&gt; to which to copy the &lt;see cref=&quot;T:System.Data.Common.DataTableMappingCollection&quot; /&gt; elements.">要将 <see cref="T:System.Data.Common.DataTableMappingCollection" /> 元素复制到其中的 <see cref="T:System.Data.Common.DataTableMapping" />。</param>
      <param name="index" vsli:raw="The starting index of the array.">数组的起始索引。</param>
    </member>
    <member name="M:System.Data.Common.DataTableMappingCollection.GetByDataSetTable(System.String)">
      <summary vsli:raw="Gets the &lt;see cref=&quot;T:System.Data.Common.DataTableMapping&quot; /&gt; object with the specified &lt;see cref=&quot;T:System.Data.DataSet&quot; /&gt; table name.">获取具有指定的 <see cref="T:System.Data.DataSet" /> 表名的 <see cref="T:System.Data.Common.DataTableMapping" /> 对象。</summary>
      <param name="dataSetTable" vsli:raw="The name, which is not case-sensitive, of the &lt;see cref=&quot;T:System.Data.DataSet&quot; /&gt; table to find.">要查找的 <see cref="T:System.Data.DataSet" /> 表的名称（该名称不区分大小写）。</param>
      <returns vsli:raw="The &lt;see cref=&quot;T:System.Data.Common.DataTableMapping&quot; /&gt; object with the specified &lt;see cref=&quot;T:System.Data.DataSet&quot; /&gt; table name.">具有指定的 <see cref="T:System.Data.DataSet" /> 表名的 <see cref="T:System.Data.Common.DataTableMapping" /> 对象。</returns>
    </member>
    <member name="M:System.Data.Common.DataTableMappingCollection.GetEnumerator">
      <summary vsli:raw="Gets an enumerator that can iterate through the collection.">获取可循环访问集合的枚举数。</summary>
      <returns vsli:raw="An &lt;see cref=&quot;T:System.Collections.IEnumerator&quot; /&gt; that can be used to iterate through the collection.">可用于循环访问集合的 <see cref="T:System.Collections.IEnumerator" />。</returns>
    </member>
    <member name="M:System.Data.Common.DataTableMappingCollection.GetTableMappingBySchemaAction(System.Data.Common.DataTableMappingCollection,System.String,System.String,System.Data.MissingMappingAction)">
      <summary vsli:raw="Gets a &lt;see cref=&quot;T:System.Data.Common.DataColumnMapping&quot; /&gt; object with the specified source table name and &lt;see cref=&quot;T:System.Data.DataSet&quot; /&gt; table name, using the given &lt;see cref=&quot;T:System.Data.MissingMappingAction&quot; /&gt;.">使用给定的 <see cref="T:System.Data.MissingMappingAction" /> 获取具有指定源表名称和 <see cref="T:System.Data.DataSet" /> 表名称的 <see cref="T:System.Data.Common.DataColumnMapping" /> 对象。</summary>
      <param name="tableMappings" vsli:raw="The &lt;see cref=&quot;T:System.Data.Common.DataTableMappingCollection&quot; /&gt; collection to search.">要搜索的 <see cref="T:System.Data.Common.DataTableMappingCollection" /> 集合。</param>
      <param name="sourceTable" vsli:raw="The case-sensitive name of the mapped source table.">已映射的区分大小写的源表名称。</param>
      <param name="dataSetTable" vsli:raw="The name, which is not case-sensitive, of the mapped &lt;see cref=&quot;T:System.Data.DataSet&quot; /&gt; table.">已映射的 <see cref="T:System.Data.DataSet" /> 表的名称（该名称不区分大小写）。</param>
      <param name="mappingAction" vsli:raw="One of the &lt;see cref=&quot;T:System.Data.MissingMappingAction&quot; /&gt; values.">
        <see cref="T:System.Data.MissingMappingAction" /> 值之一。</param>
      <exception cref="T:System.InvalidOperationException" vsli:raw="The &lt;paramref name=&quot;mappingAction&quot; /&gt; parameter was set to &lt;see langword=&quot;Error&quot; /&gt;, and no mapping was specified.">
        <paramref name="mappingAction" /> 参数设置为 <see langword="Error" />，并且未指定任何映射。</exception>
      <returns vsli:raw="A &lt;see cref=&quot;T:System.Data.Common.DataTableMapping&quot; /&gt; object.">
        <see cref="T:System.Data.Common.DataTableMapping" /> 对象。</returns>
    </member>
    <member name="M:System.Data.Common.DataTableMappingCollection.IndexOf(System.Object)">
      <summary vsli:raw="Gets the location of the specified &lt;see cref=&quot;T:System.Data.Common.DataTableMapping&quot; /&gt; object within the collection.">获取指定的 <see cref="T:System.Data.Common.DataTableMapping" /> 对象在集合中的位置。</summary>
      <param name="value" vsli:raw="An &lt;see cref=&quot;T:System.Object&quot; /&gt; that is the &lt;see cref=&quot;T:System.Data.Common.DataTableMapping&quot; /&gt; object to find.">
        <see cref="T:System.Object" /> 即要查找的 <see cref="T:System.Data.Common.DataTableMapping" /> 对象。</param>
      <returns vsli:raw="The zero-based location of the specified &lt;see cref=&quot;T:System.Data.Common.DataTableMapping&quot; /&gt; object within the collection.">指定的 <see cref="T:System.Data.Common.DataTableMapping" /> 对象在集合中从零开始的位置。</returns>
    </member>
    <member name="M:System.Data.Common.DataTableMappingCollection.IndexOf(System.String)">
      <summary vsli:raw="Gets the location of the &lt;see cref=&quot;T:System.Data.Common.DataTableMapping&quot; /&gt; object with the specified source table name.">获取具有指定源表名称的 <see cref="T:System.Data.Common.DataTableMapping" /> 对象的位置。</summary>
      <param name="sourceTable" vsli:raw="The case-sensitive name of the source table.">区分大小写的源表名称。</param>
      <returns vsli:raw="The zero-based location of the &lt;see cref=&quot;T:System.Data.Common.DataTableMapping&quot; /&gt; object with the specified source table name.">具有指定源表名称的 <see cref="T:System.Data.Common.DataTableMapping" /> 对象的从零开始的位置。</returns>
    </member>
    <member name="M:System.Data.Common.DataTableMappingCollection.IndexOfDataSetTable(System.String)">
      <summary vsli:raw="Gets the location of the &lt;see cref=&quot;T:System.Data.Common.DataTableMapping&quot; /&gt; object with the specified &lt;see cref=&quot;T:System.Data.DataSet&quot; /&gt; table name.">获取具有指定的 <see cref="T:System.Data.DataSet" /> 表名称的 <see cref="T:System.Data.Common.DataTableMapping" /> 对象的位置。</summary>
      <param name="dataSetTable" vsli:raw="The name, which is not case-sensitive, of the &lt;see langword=&quot;DataSet&quot; /&gt; table to find.">要查找的 <see langword="DataSet" /> 表的名称（该名称不区分大小写）。</param>
      <returns vsli:raw="The zero-based location of the &lt;see cref=&quot;T:System.Data.Common.DataTableMapping&quot; /&gt; object with the given &lt;see cref=&quot;T:System.Data.DataSet&quot; /&gt; table name, or -1 if the &lt;see cref=&quot;T:System.Data.Common.DataTableMapping&quot; /&gt; object does not exist in the collection.">具有给定 <see cref="T:System.Data.DataSet" /> 表名称的 <see cref="T:System.Data.Common.DataTableMapping" /> 对象的从零开始的位置；或者，如果集合中不存在 <see cref="T:System.Data.Common.DataTableMapping" /> 对象，则为 -1。</returns>
    </member>
    <member name="M:System.Data.Common.DataTableMappingCollection.Insert(System.Int32,System.Data.Common.DataTableMapping)">
      <summary vsli:raw="Inserts a &lt;see cref=&quot;T:System.Data.Common.DataTableMapping&quot; /&gt; object into the &lt;see cref=&quot;T:System.Data.Common.DataTableMappingCollection&quot; /&gt; at the specified index.">在 <see cref="T:System.Data.Common.DataTableMapping" /> 中的指定索引处插入一个 <see cref="T:System.Data.Common.DataTableMappingCollection" /> 对象。</summary>
      <param name="index" vsli:raw="The zero-based index of the &lt;see cref=&quot;T:System.Data.Common.DataTableMapping&quot; /&gt; object to insert.">要插入的 <see cref="T:System.Data.Common.DataTableMapping" /> 对象的从零开始的索引。</param>
      <param name="value" vsli:raw="The &lt;see cref=&quot;T:System.Data.Common.DataTableMapping&quot; /&gt; object to insert.">要插入的 <see cref="T:System.Data.Common.DataTableMapping" /> 对象。</param>
    </member>
    <member name="M:System.Data.Common.DataTableMappingCollection.Insert(System.Int32,System.Object)">
      <summary vsli:raw="Inserts a &lt;see cref=&quot;T:System.Data.Common.DataTableMapping&quot; /&gt; object into the &lt;see cref=&quot;T:System.Data.Common.DataTableMappingCollection&quot; /&gt; at the specified index.">在 <see cref="T:System.Data.Common.DataTableMapping" /> 中的指定索引处插入一个 <see cref="T:System.Data.Common.DataTableMappingCollection" /> 对象。</summary>
      <param name="index" vsli:raw="The zero-based index of the &lt;see cref=&quot;T:System.Data.Common.DataTableMapping&quot; /&gt; object to insert.">要插入的 <see cref="T:System.Data.Common.DataTableMapping" /> 对象的从零开始的索引。</param>
      <param name="value" vsli:raw="The &lt;see cref=&quot;T:System.Data.Common.DataTableMapping&quot; /&gt; object to insert.">要插入的 <see cref="T:System.Data.Common.DataTableMapping" /> 对象。</param>
    </member>
    <member name="M:System.Data.Common.DataTableMappingCollection.Remove(System.Data.Common.DataTableMapping)">
      <summary vsli:raw="Removes the specified &lt;see cref=&quot;T:System.Data.Common.DataTableMapping&quot; /&gt; object from the collection.">从集合中移除指定的 <see cref="T:System.Data.Common.DataTableMapping" /> 对象。</summary>
      <param name="value" vsli:raw="The &lt;see cref=&quot;T:System.Data.Common.DataTableMapping&quot; /&gt; object to remove.">要移除的 <see cref="T:System.Data.Common.DataTableMapping" /> 对象。</param>
    </member>
    <member name="M:System.Data.Common.DataTableMappingCollection.Remove(System.Object)">
      <summary vsli:raw="Removes the specified &lt;see cref=&quot;T:System.Data.Common.DataTableMapping&quot; /&gt; object from the collection.">从集合中移除指定的 <see cref="T:System.Data.Common.DataTableMapping" /> 对象。</summary>
      <param name="value" vsli:raw="The &lt;see cref=&quot;T:System.Data.Common.DataTableMapping&quot; /&gt; object to remove.">要移除的 <see cref="T:System.Data.Common.DataTableMapping" /> 对象。</param>
      <exception cref="T:System.InvalidCastException" vsli:raw="The object specified was not a &lt;see cref=&quot;T:System.Data.Common.DataTableMapping&quot; /&gt; object.">指定的对象不是 <see cref="T:System.Data.Common.DataTableMapping" /> 对象。</exception>
      <exception cref="T:System.ArgumentException" vsli:raw="The object specified is not in the collection.">指定的对象不在集合中。</exception>
    </member>
    <member name="M:System.Data.Common.DataTableMappingCollection.RemoveAt(System.Int32)">
      <summary vsli:raw="Removes the &lt;see cref=&quot;T:System.Data.Common.DataTableMapping&quot; /&gt; object located at the specified index from the collection.">从集合中移除位于指定索引处的 <see cref="T:System.Data.Common.DataTableMapping" /> 对象。</summary>
      <param name="index" vsli:raw="The zero-based index of the &lt;see cref=&quot;T:System.Data.Common.DataTableMapping&quot; /&gt; object to remove.">要移除的 <see cref="T:System.Data.Common.DataTableMapping" /> 对象的从零开始的索引。</param>
      <exception cref="T:System.IndexOutOfRangeException" vsli:raw="A &lt;see cref=&quot;T:System.Data.Common.DataTableMapping&quot; /&gt; object does not exist with the specified index.">具有指定索引的 <see cref="T:System.Data.Common.DataTableMapping" /> 对象不存在。</exception>
    </member>
    <member name="M:System.Data.Common.DataTableMappingCollection.RemoveAt(System.String)">
      <summary vsli:raw="Removes the &lt;see cref=&quot;T:System.Data.Common.DataTableMapping&quot; /&gt; object with the specified source table name from the collection.">从集合中移除具有指定源表名称的 <see cref="T:System.Data.Common.DataTableMapping" /> 对象。</summary>
      <param name="sourceTable" vsli:raw="The case-sensitive source table name to find.">要查找的区分大小写的源表名称。</param>
      <exception cref="T:System.IndexOutOfRangeException" vsli:raw="A &lt;see cref=&quot;T:System.Data.Common.DataTableMapping&quot; /&gt; object does not exist with the specified source table name.">具有指定源表名称的 <see cref="T:System.Data.Common.DataTableMapping" /> 对象不存在。</exception>
    </member>
    <member name="M:System.Data.Common.DataTableMappingCollection.System#Data#ITableMappingCollection#Add(System.String,System.String)">
      <summary vsli:raw="Adds a table mapping to the collection.">向集合添加表映射。</summary>
      <param name="sourceTableName" vsli:raw="The case-sensitive name of the source table.">区分大小写的源表名称。</param>
      <param name="dataSetTableName" vsli:raw="The name of the &lt;see cref=&quot;T:System.Data.DataSet&quot; /&gt; table.">
        <see cref="T:System.Data.DataSet" /> 表的名称。</param>
      <returns vsli:raw="A reference to the newly-mapped &lt;see cref=&quot;T:System.Data.ITableMapping&quot; /&gt; object.">对新映射的 <see cref="T:System.Data.ITableMapping" /> 对象的引用。</returns>
    </member>
    <member name="M:System.Data.Common.DataTableMappingCollection.System#Data#ITableMappingCollection#GetByDataSetTable(System.String)">
      <summary vsli:raw="Gets the TableMapping object with the specified &lt;see cref=&quot;T:System.Data.DataSet&quot; /&gt; table name.">获取具有指定的 <see cref="T:System.Data.DataSet" /> 表名的 TableMapping 对象。</summary>
      <param name="dataSetTableName" vsli:raw="The name of the &lt;see langword=&quot;DataSet&quot; /&gt; table within the collection.">集合中表 <see langword="DataSet" /> 的名称。</param>
      <returns vsli:raw="The TableMapping object with the specified &lt;see langword=&quot;DataSet&quot; /&gt; table name.">具有指定的 <see langword="DataSet" /> 表名的 TableMapping 对象。</returns>
    </member>
    <member name="P:System.Data.Common.DataTableMappingCollection.Count">
      <summary vsli:raw="Gets the number of &lt;see cref=&quot;T:System.Data.Common.DataTableMapping&quot; /&gt; objects in the collection.">获取集合中 <see cref="T:System.Data.Common.DataTableMapping" /> 对象的数量。</summary>
      <returns vsli:raw="The number of &lt;see langword=&quot;DataTableMapping&quot; /&gt; objects in the collection.">集合中 <see langword="DataTableMapping" /> 对象的数目。</returns>
    </member>
    <member name="P:System.Data.Common.DataTableMappingCollection.Item(System.Int32)">
      <summary vsli:raw="Gets or sets the &lt;see cref=&quot;T:System.Data.Common.DataTableMapping&quot; /&gt; object at the specified index.">获取或设置位于指定索引处的 <see cref="T:System.Data.Common.DataTableMapping" /> 对象。</summary>
      <param name="index" vsli:raw="The zero-based index of the &lt;see cref=&quot;T:System.Data.Common.DataTableMapping&quot; /&gt; object to return.">要返回的 <see cref="T:System.Data.Common.DataTableMapping" /> 对象的从零开始的索引。</param>
      <returns vsli:raw="The &lt;see cref=&quot;T:System.Data.Common.DataTableMapping&quot; /&gt; object at the specified index.">指定索引处的 <see cref="T:System.Data.Common.DataTableMapping" /> 对象。</returns>
    </member>
    <member name="P:System.Data.Common.DataTableMappingCollection.Item(System.String)">
      <summary vsli:raw="Gets or sets the &lt;see cref=&quot;T:System.Data.Common.DataTableMapping&quot; /&gt; object with the specified source table name.">获取或设置具有指定源表名称的 <see cref="T:System.Data.Common.DataTableMapping" /> 对象。</summary>
      <param name="sourceTable" vsli:raw="The case-sensitive name of the source table.">区分大小写的源表名称。</param>
      <returns vsli:raw="The &lt;see cref=&quot;T:System.Data.Common.DataTableMapping&quot; /&gt; object with the specified source table name.">具有指定源表名称的 <see cref="T:System.Data.Common.DataTableMapping" /> 对象。</returns>
    </member>
    <member name="P:System.Data.Common.DataTableMappingCollection.System#Collections#ICollection#IsSynchronized">
      <summary vsli:raw="Gets a value indicating whether access to the &lt;see cref=&quot;T:System.Collections.ICollection&quot; /&gt; is synchronized (thread safe).">获取一个值，该值指示是否同步对 <see cref="T:System.Collections.ICollection" /> 的访问（线程安全）。</summary>
      <returns vsli:raw="&lt;see langword=&quot;true&quot; /&gt; if access to the &lt;see cref=&quot;T:System.Collections.ICollection&quot; /&gt; is synchronized (thread safe); otherwise, &lt;see langword=&quot;false&quot; /&gt;.">如果对 <see langword="true" /> 的访问是同步的（线程安全），则为 <see cref="T:System.Collections.ICollection" />；否则为 <see langword="false" />。</returns>
    </member>
    <member name="P:System.Data.Common.DataTableMappingCollection.System#Collections#ICollection#SyncRoot">
      <summary vsli:raw="Gets an object that can be used to synchronize access to the &lt;see cref=&quot;T:System.Collections.ICollection&quot; /&gt;.">获取可用于同步对 <see cref="T:System.Collections.ICollection" /> 的访问的对象。</summary>
      <returns vsli:raw="An object that can be used to synchronize access to the &lt;see cref=&quot;T:System.Collections.ICollection&quot; /&gt;.">用于同步对 <see cref="T:System.Collections.ICollection" /> 的访问的对象。</returns>
    </member>
    <member name="P:System.Data.Common.DataTableMappingCollection.System#Collections#IList#IsFixedSize">
      <summary vsli:raw="Gets a value indicating whether the &lt;see cref=&quot;T:System.Collections.IList&quot; /&gt; has a fixed size.">获取一个值，该值指示 <see cref="T:System.Collections.IList" /> 是否具有固定大小。</summary>
      <returns vsli:raw="&lt;see langword=&quot;true&quot; /&gt; if the &lt;see cref=&quot;T:System.Collections.IList&quot; /&gt; has a fixed size; otherwise, &lt;see langword=&quot;false&quot; /&gt;.">如果 <see langword="true" /> 具有固定大小，则为 <see cref="T:System.Collections.IList" />；否则为 <see langword="false" />。</returns>
    </member>
    <member name="P:System.Data.Common.DataTableMappingCollection.System#Collections#IList#IsReadOnly">
      <summary vsli:raw="Gets a value indicating whether the &lt;see cref=&quot;T:System.Collections.IList&quot; /&gt; is read-only.">获取一个值，该值指示 <see cref="T:System.Collections.IList" /> 是否为只读。</summary>
      <returns vsli:raw="&lt;see langword=&quot;true&quot; /&gt; if the &lt;see cref=&quot;T:System.Collections.IList&quot; /&gt; is read-only; otherwise, &lt;see langword=&quot;false&quot; /&gt;.">如果 <see langword="true" /> 是只读的，则为 <see cref="T:System.Collections.IList" />；否则为 <see langword="false" />。</returns>
    </member>
    <member name="P:System.Data.Common.DataTableMappingCollection.System#Collections#IList#Item(System.Int32)">
      <summary vsli:raw="Gets or sets an item from the collection at a specified index.">获取或设置指定索引处的集合中的项。</summary>
      <param name="index" vsli:raw="The zero-based index of the item to get or set.">要获取或设置的项的从零开始的索引。</param>
      <returns vsli:raw="The element at the specified index.">指定索引处的元素。</returns>
    </member>
    <member name="P:System.Data.Common.DataTableMappingCollection.System#Data#ITableMappingCollection#Item(System.String)">
      <summary vsli:raw="Gets or sets the instance of &lt;see cref=&quot;T:System.Data.ITableMapping&quot; /&gt; with the specified &lt;see cref=&quot;P:System.Data.ITableMapping.SourceTable&quot; /&gt; name.">获取或设置具有指定 <see cref="P:System.Data.ITableMapping.SourceTable" /> 名称的 <see cref="T:System.Data.ITableMapping" /> 的实例。</summary>
      <param name="index" vsli:raw="The &lt;see langword=&quot;SourceTable&quot; /&gt; name of the &lt;see cref=&quot;T:System.Data.ITableMapping&quot; /&gt;.">
        <see cref="T:System.Data.ITableMapping" /> 的 <see langword="SourceTable" /> 名称。</param>
      <returns vsli:raw="The instance of &lt;see cref=&quot;T:System.Data.ITableMapping&quot; /&gt; with the specified &lt;see langword=&quot;SourceTable&quot; /&gt; name.">具有指定的 <see langword="SourceTable" /> 名称的 <see cref="T:System.Data.ITableMapping" /> 的实例。</returns>
    </member>
    <member name="T:System.Data.Common.DbColumn">
      <summary vsli:raw="Represents a column within a data source.">表示数据源中的列。</summary>
    </member>
    <member name="M:System.Data.Common.DbColumn.#ctor">
      <summary vsli:raw="Initializes a new instance of the &lt;see cref=&quot;T:System.Data.Common.DbColumn&quot; /&gt; class.">初始化 <see cref="T:System.Data.Common.DbColumn" /> 类的新实例。</summary>
    </member>
    <member name="P:System.Data.Common.DbColumn.AllowDBNull">
      <summary vsli:raw="Gets a nullable boolean value that indicates whether &lt;see langword=&quot;DBNull&quot; /&gt; values are allowed in this column, or returns &lt;see langword=&quot;null&quot; /&gt; if no value is set. Can be set to either &lt;see langword=&quot;true&quot; /&gt; or &lt;see langword=&quot;false&quot; /&gt; indicating whether &lt;see langword=&quot;DBNull&quot; /&gt; values are allowed in this column, or &lt;see langword=&quot;null&quot; /&gt; (&lt;see langword=&quot;Nothing&quot; /&gt; in Visual Basic) when overridden in a derived class.">获取可为 null 的布尔值，该值指示此列中是否允许 <see langword="DBNull" /> 值，或者在未设置任何值时返回 <see langword="null" />。 在派生类中重写时，可设置为 <see langword="true" /> 或 <see langword="false" />，指示此列中是否允许 <see langword="DBNull" /> 值，也可设置为 <see langword="null" />（在 Visual Basic 中为 <see langword="Nothing" />）。</summary>
      <returns vsli:raw="Returns &lt;see langword=&quot;true&quot; /&gt; if &lt;see langword=&quot;DBNull&quot; /&gt; values are allowed in this column; otherwise, &lt;see langword=&quot;false&quot; /&gt;. If no value is set, returns a null reference (&lt;see langword=&quot;Nothing&quot; /&gt; in Visual Basic).">如果此列中允许 <see langword="DBNull" /> 值，则返回 <see langword="true" />，否则，返回 <see langword="false" />。 如果未设置任何值，则返回空引用（在 Visual Basic 中为 <see langword="Nothing" />）。</returns>
    </member>
    <member name="P:System.Data.Common.DbColumn.BaseCatalogName">
      <summary vsli:raw="Gets the catalog name associated with the data source; otherwise, &lt;see langword=&quot;null&quot; /&gt; if no value is set. Can be set to either the catalog name or &lt;see langword=&quot;null&quot; /&gt; when overridden in a derived class.">获取与数据源关联的目录；否则，如果未设置任何值，则为 <see langword="null" />。 在派生类中重写时，可设置为目录名称或 <see langword="null" />。</summary>
      <returns vsli:raw="The catalog name associated with the data source; otherwise, a null reference (&lt;see langword=&quot;Nothing&quot; /&gt; in Visual Basic) if no value is set.">与数据源关联的目录名称；否则，如果未设置任何值，则为空引用（在 Visual Basic 中为 <see langword="Nothing" />）。</returns>
    </member>
    <member name="P:System.Data.Common.DbColumn.BaseColumnName">
      <summary vsli:raw="Gets the base column name; otherwise, &lt;see langword=&quot;null&quot; /&gt; if no value is set. Can be set to either the column name or &lt;see langword=&quot;null&quot; /&gt; when overridden in a derived class.">获取列名称；否则，如果未设置任何值，则为 <see langword="null" />。 在派生类中重写时，可设置为列名称或 <see langword="null" />。</summary>
      <returns vsli:raw="The base column name; otherwise, a null reference (&lt;see langword=&quot;Nothing&quot; /&gt; in Visual Basic) if no value is set.">基列名称；否则，如果未设置任何值，则为空引用（在 Visual Basic 中为 <see langword="Nothing" />）。</returns>
    </member>
    <member name="P:System.Data.Common.DbColumn.BaseSchemaName">
      <summary vsli:raw="Gets the schema name associated with the data source; otherwise, &lt;see langword=&quot;null&quot; /&gt; if no value is set. Can be set to either the schema name or &lt;see langword=&quot;null&quot; /&gt; when overridden in a derived class.">获取与数据源关联的架构；否则，如果未设置任何值，则为 <see langword="null" />。 在派生类中重写时，可设置为架构名称或 <see langword="null" />。</summary>
      <returns vsli:raw="The schema name associated with the data source; otherwise, a null reference (&lt;see langword=&quot;Nothing&quot; /&gt; in Visual Basic) if no value is set.">与数据源关联的架构名称；否则，如果未设置任何值，则为空引用（在 Visual Basic 中为 <see langword="Nothing" />）。</returns>
    </member>
    <member name="P:System.Data.Common.DbColumn.BaseServerName">
      <summary vsli:raw="Gets the server name associated with the column; otherwise, &lt;see langword=&quot;null&quot; /&gt; if no value is set. Can be set to either the server name or &lt;see langword=&quot;null&quot; /&gt; when overridden in a derived class.">获取与列关联的服务器名称；否则，如果未设置任何值，则为 <see langword="null" />。 在派生类中重写时，可设置为服务器名称或 <see langword="null" />。</summary>
      <returns vsli:raw="The server name associated with the column; otherwise, a null reference (&lt;see langword=&quot;Nothing&quot; /&gt; in Visual Basic) if no value is set.">与列关联的服务器名称；否则，如果未设置任何值，则为空引用（在 Visual Basic 中为 <see langword="Nothing" />）。</returns>
    </member>
    <member name="P:System.Data.Common.DbColumn.BaseTableName">
      <summary vsli:raw="Gets the table name in the schema; otherwise, &lt;see langword=&quot;null&quot; /&gt; if no value is set. Can be set to either the table name or &lt;see langword=&quot;null&quot; /&gt; when overridden in a derived class.">获取架构中的表名称；否则，如果未设置任何值，则为 <see langword="null" />。 在派生类中重写时，可设置为表名称或 <see langword="null" />。</summary>
      <returns vsli:raw="The table name in the schema; otherwise, a null reference (&lt;see langword=&quot;Nothing&quot; /&gt; in Visual Basic) if no value is set.">架构中的表名称；否则，如果未设置任何值，则为空引用（在 Visual Basic 中为 <see langword="Nothing" />）。</returns>
    </member>
    <member name="P:System.Data.Common.DbColumn.ColumnName">
      <summary vsli:raw="Gets the name of the column. Can be set to the column name when overridden in a derived class.">获取列的名称。 在派生类中重写时，可设置为列名称。</summary>
      <returns vsli:raw="The name of the column.">列的名称。</returns>
    </member>
    <member name="P:System.Data.Common.DbColumn.ColumnOrdinal">
      <summary vsli:raw="Gets the column position (ordinal) in the datasource row; otherwise, &lt;see langword=&quot;null&quot; /&gt; if no value is set. Can be set to either an &lt;see langword=&quot;int32&quot; /&gt; value to specify the column position or &lt;see langword=&quot;null&quot; /&gt; when overridden in a derived class.">获取数据源行中的列位置（序号）；否则，如果未设置任何值，则为 <see langword="null" />。 在派生类中重写时，可设置为 <see langword="int32" /> 值（用于指定列位置）或 <see langword="null" />。</summary>
      <returns vsli:raw="An &lt;see langword=&quot;int32&quot; /&gt; value for column ordinal; otherwise, a null reference (&lt;see langword=&quot;Nothing&quot; /&gt; in Visual Basic) if no value is set.">表示列序号的 <see langword="int32" /> 值；否则，如果未设置任何值，则为空引用（在 Visual Basic 中为 <see langword="Nothing" />）。</returns>
    </member>
    <member name="P:System.Data.Common.DbColumn.ColumnSize">
      <summary vsli:raw="Gets the column size; otherwise, &lt;see langword=&quot;null&quot; /&gt; if no value is set. Can be set to either an &lt;see langword=&quot;int32&quot; /&gt; value to specify the column size or &lt;see langword=&quot;null&quot; /&gt; when overridden in a derived class.">获取列大小；否则，如果未设置任何值，则为 <see langword="null" />。 在派生类中重写时，可设置为 <see langword="int32" /> 值（用于指定列大小）或 <see langword="null" />。</summary>
      <returns vsli:raw="An &lt;see langword=&quot;int32&quot; /&gt; value for column size; otherwise, a null reference (&lt;see langword=&quot;Nothing&quot; /&gt; in Visual Basic) if no value is set.">
        <see langword="int32" />列大小的值; 否则，如果未设置任何值，则为 null 引用 (<see langword="Nothing" /> Visual Basic) 。</returns>
    </member>
    <member name="P:System.Data.Common.DbColumn.DataType">
      <summary vsli:raw="Gets the type of data stored in the column. Can be set to a &lt;see cref=&quot;T:System.Type&quot; /&gt; object that represents the type of data in the column when overridden in a derived class.">获取列中存储的数据的类型。 在派生类中重写时，可设置为表示列中数据类型的 <see cref="T:System.Type" /> 对象。</summary>
      <returns vsli:raw="A &lt;see cref=&quot;T:System.Type&quot; /&gt; object that represents the type of data the column contains.">表示列中包含的数据类型的 <see cref="T:System.Type" /> 对象。</returns>
    </member>
    <member name="P:System.Data.Common.DbColumn.DataTypeName">
      <summary vsli:raw="Gets the name of the data type; otherwise, &lt;see langword=&quot;null&quot; /&gt; if no value is set. Can be set to either the data type name or &lt;see langword=&quot;null&quot; /&gt; when overridden in a derived class.">获取数据类型的名称；否则，如果未设置任何值，则为 <see langword="null" />。 在派生类中重写时，可设置为数据类型名称或 <see langword="null" />。</summary>
      <returns vsli:raw="The name of the data type; otherwise, a null reference (&lt;see langword=&quot;Nothing&quot; /&gt; in Visual Basic) if no value is set.">数据类型的名称；否则，如果未设置任何值，则为空引用（在 Visual Basic 中为 <see langword="Nothing" />）。</returns>
    </member>
    <member name="P:System.Data.Common.DbColumn.IsAliased">
      <summary vsli:raw="Gets a nullable boolean value that indicates whether this column is aliased, or returns &lt;see langword=&quot;null&quot; /&gt; if no value is set. Can be set to either &lt;see langword=&quot;true&quot; /&gt; or &lt;see langword=&quot;false&quot; /&gt; indicating whether this column is aliased, or &lt;see langword=&quot;null&quot; /&gt; (&lt;see langword=&quot;Nothing&quot; /&gt; in Visual Basic) when overridden in a derived class.">获取可为 null 的布尔值，该值指示此列是否具有别名，或者在未设置任何值时返回 <see langword="null" />。 在派生类中重写时，可设置为 <see langword="true" /> 或 <see langword="false" />，指示此列是否具有别名，也可设置为 <see langword="null" />（在 Visual Basic 中为 <see langword="Nothing" />）。</summary>
      <returns vsli:raw="Returns &lt;see langword=&quot;true&quot; /&gt; if this column is aliased; otherwise, &lt;see langword=&quot;false&quot; /&gt;. If no value is set, returns a null reference (&lt;see langword=&quot;Nothing&quot; /&gt; in Visual Basic).">如果此列具有别名，则返回 <see langword="true" />；否则返回 <see langword="false" />。 如果未设置任何值，则返回空引用（在 Visual Basic 中为 <see langword="Nothing" />）。</returns>
    </member>
    <member name="P:System.Data.Common.DbColumn.IsAutoIncrement">
      <summary vsli:raw="Gets a nullable boolean value that indicates whether values in this column are automatically incremented, or returns &lt;see langword=&quot;null&quot; /&gt; if no value is set. Can be set to either &lt;see langword=&quot;true&quot; /&gt; or &lt;see langword=&quot;false&quot; /&gt; indicating whether values in this column are automatically incremented, or &lt;see langword=&quot;null&quot; /&gt; (&lt;see langword=&quot;Nothing&quot; /&gt; in Visual Basic) when overridden in a derived class.">获取可为 null 的布尔值，该值指示此列中的值是否自动递增，或者在未设置任何值时返回 <see langword="null" />。 在派生类中重写时，可设置为 <see langword="true" /> 或 <see langword="false" />，指示此列中的值是否自动递增，也可设置为 <see langword="null" />（在 Visual Basic中为 <see langword="Nothing" />）。</summary>
      <returns vsli:raw="Returns &lt;see langword=&quot;true&quot; /&gt; if values in this column are automatically incremented; otherwise, &lt;see langword=&quot;false&quot; /&gt;. If no value is set, returns a null reference (&lt;see langword=&quot;Nothing&quot; /&gt; in Visual Basic).">如果此列中的值自动递增，则返回 <see langword="true" />，否则，返回 <see langword="false" />。 如果未设置任何值，则返回空引用（在 Visual Basic 中为 <see langword="Nothing" />）。</returns>
    </member>
    <member name="P:System.Data.Common.DbColumn.IsExpression">
      <summary vsli:raw="Gets a nullable boolean value that indicates whether this column is an expression, or returns &lt;see langword=&quot;null&quot; /&gt; if no value is set. Can be set to either &lt;see langword=&quot;true&quot; /&gt; or &lt;see langword=&quot;false&quot; /&gt; indicating whether this column is an expression, or &lt;see langword=&quot;null&quot; /&gt; (&lt;see langword=&quot;Nothing&quot; /&gt; in Visual Basic) when overridden in a derived class.">获取可为 null 的布尔值，该值指示此列是否是表达式，或者在未设置任何值时返回 <see langword="null" />。 在派生类中重写时，可设置为 <see langword="true" /> 或 <see langword="false" />，指示此列是否是表达式，也可设置为 <see langword="null" />（在 Visual Basic 中为 <see langword="Nothing" />）。</summary>
      <returns vsli:raw="Returns &lt;see langword=&quot;true&quot; /&gt; if this column is an expression; otherwise, &lt;see langword=&quot;false&quot; /&gt;. If no value is set, returns a null reference (&lt;see langword=&quot;Nothing&quot; /&gt; in Visual Basic).">如果此列是表达式，将返回 <see langword="true" />；否则返回 <see langword="false" />。 如果未设置任何值，则返回空引用（在 Visual Basic 中为 <see langword="Nothing" />）。</returns>
    </member>
    <member name="P:System.Data.Common.DbColumn.IsHidden">
      <summary vsli:raw="Gets a nullable boolean value that indicates whether this column is hidden, or returns &lt;see langword=&quot;null&quot; /&gt; if no value is set. Can be set to either &lt;see langword=&quot;true&quot; /&gt; or &lt;see langword=&quot;false&quot; /&gt; indicating whether this column is hidden, or &lt;see langword=&quot;null&quot; /&gt; (&lt;see langword=&quot;Nothing&quot; /&gt; in Visual Basic) when overridden in a derived class.">获取可为 null 的布尔值，该值指示此列是否被隐藏，或者在未设置任何值时返回 <see langword="null" />。 在派生类中重写时，可设置为 <see langword="true" /> 或 <see langword="false" />，指示此列是否被隐藏，也可设置为 <see langword="null" />（在 Visual Basic 中为 <see langword="Nothing" />）。</summary>
      <returns vsli:raw="Returns &lt;see langword=&quot;true&quot; /&gt; if this column is hidden; otherwise, &lt;see langword=&quot;false&quot; /&gt;. If no value is set, returns a null reference (&lt;see langword=&quot;Nothing&quot; /&gt; in Visual Basic).">如果此列被隐藏，则返回 <see langword="true" />；否则返回 <see langword="false" />。 如果未设置任何值，则返回空引用（在 Visual Basic 中为 <see langword="Nothing" />）。</returns>
    </member>
    <member name="P:System.Data.Common.DbColumn.IsIdentity">
      <summary vsli:raw="Gets a nullable boolean value that indicates whether this column is an identity, or returns &lt;see langword=&quot;null&quot; /&gt; if no value is set. Can be set to either &lt;see langword=&quot;true&quot; /&gt; or &lt;see langword=&quot;false&quot; /&gt; indicating whether this column is an identity, or &lt;see langword=&quot;null&quot; /&gt; (&lt;see langword=&quot;Nothing&quot; /&gt; in Visual Basic) when overridden in a derived class.">获取可为 null 的布尔值，该值指示此列是否是标识，或者在未设置任何值时返回 <see langword="null" />。 在派生类中重写时，可设置为 <see langword="true" /> 或 <see langword="false" />，指示此列是否是标识，也可设置为 <see langword="null" />（在 Visual Basic 中为 <see langword="Nothing" />）。</summary>
      <returns vsli:raw="Returns &lt;see langword=&quot;true&quot; /&gt; if this column is an identity; otherwise, &lt;see langword=&quot;false&quot; /&gt;. If no value is set, returns a null reference (&lt;see langword=&quot;Nothing&quot; /&gt; in Visual Basic).">如果此列是标识，将返回 <see langword="true" />；否则返回 <see langword="false" />。 如果未设置任何值，则返回空引用（在 Visual Basic 中为 <see langword="Nothing" />）。</returns>
    </member>
    <member name="P:System.Data.Common.DbColumn.IsKey">
      <summary vsli:raw="Gets a nullable boolean value that indicates whether this column is a key, or returns &lt;see langword=&quot;null&quot; /&gt; if no value is set. Can be set to either &lt;see langword=&quot;true&quot; /&gt; or &lt;see langword=&quot;false&quot; /&gt; indicating whether this column is a key, or &lt;see langword=&quot;null&quot; /&gt; (&lt;see langword=&quot;Nothing&quot; /&gt; in Visual Basic) when overridden in a derived class.">获取可为 null 的布尔值，该值指示此列是否是密钥，或者在未设置任何值时返回 <see langword="null" />。 在派生类中重写时，可设置为 <see langword="true" /> 或 <see langword="false" />，指示此列是否是密钥，也可以设置为 <see langword="null" />（在 Visual Basic 中为 <see langword="Nothing" />）。</summary>
      <returns vsli:raw="Returns &lt;see langword=&quot;true&quot; /&gt; if this column is a key; otherwise, &lt;see langword=&quot;false&quot; /&gt;. If no value is set, returns a null reference (&lt;see langword=&quot;Nothing&quot; /&gt; in Visual Basic).">如果此列是密钥，则返回 <see langword="true" />；否则返回 <see langword="false" />。 如果未设置任何值，则返回空引用（在 Visual Basic 中为 <see langword="Nothing" />）。</returns>
    </member>
    <member name="P:System.Data.Common.DbColumn.IsLong">
      <summary vsli:raw="Gets a nullable boolean value that indicates whether this column contains long data, or returns &lt;see langword=&quot;null&quot; /&gt; if no value is set. Can be set to either &lt;see langword=&quot;true&quot; /&gt; or &lt;see langword=&quot;false&quot; /&gt; indicating whether this column contains long data, or &lt;see langword=&quot;null&quot; /&gt; (&lt;see langword=&quot;Nothing&quot; /&gt; in Visual Basic) when overridden in a derived class.">获取可为 null 的布尔值，该值指示此列是否包含长数据，或者在未设置任何值时返回 <see langword="null" />。 在派生类中重写时，可设置为 <see langword="true" /> 或 <see langword="false" />，指示此列是否包含长数据，也可设置为 <see langword="null" />（在 Visual Basic 中为 <see langword="Nothing" />）。</summary>
      <returns vsli:raw="Returns &lt;see langword=&quot;true&quot; /&gt; if this column contains long data; otherwise, &lt;see langword=&quot;false&quot; /&gt;. If no value is set, returns a null reference (&lt;see langword=&quot;Nothing&quot; /&gt; in Visual Basic).">如果此列包含长数据，则返回 <see langword="true" />；否则，返回 <see langword="false" />。 如果未设置任何值，则返回空引用（在 Visual Basic 中为 <see langword="Nothing" />）。</returns>
    </member>
    <member name="P:System.Data.Common.DbColumn.IsReadOnly">
      <summary vsli:raw="Gets a nullable boolean value that indicates whether this column is read-only, or returns &lt;see langword=&quot;null&quot; /&gt; if no value is set. Can be set to either &lt;see langword=&quot;true&quot; /&gt; or &lt;see langword=&quot;false&quot; /&gt; indicating whether this column is read-only, or &lt;see langword=&quot;null&quot; /&gt; (&lt;see langword=&quot;Nothing&quot; /&gt; in Visual Basic) when overridden in a derived class.">获取可为 null 的布尔值，该值指示此列是否是只读的，或者在未设置任何值时返回 <see langword="null" />。 在派生类中重写时，可设置为 <see langword="true" /> 或 <see langword="false" />，指示此列是否是只读的，也可设置为 <see langword="null" />（在 Visual Basic 中为 <see langword="Nothing" />）。</summary>
      <returns vsli:raw="Returns &lt;see langword=&quot;true&quot; /&gt; if this column is read-only; otherwise, &lt;see langword=&quot;false&quot; /&gt;. If no value is set, returns a null reference (&lt;see langword=&quot;Nothing&quot; /&gt; in Visual Basic).">如果此列为只读，则返回 <see langword="true" />；否则返回 <see langword="false" />。 如果未设置任何值，则返回空引用（在 Visual Basic 中为 <see langword="Nothing" />）。</returns>
    </member>
    <member name="P:System.Data.Common.DbColumn.IsUnique">
      <summary vsli:raw="Gets a nullable boolean value that indicates whether a unique constraint applies to this column, or returns &lt;see langword=&quot;null&quot; /&gt; if no value is set. Can be set to either &lt;see langword=&quot;true&quot; /&gt; or &lt;see langword=&quot;false&quot; /&gt; indicating whether a unique constraint applies to this column, or &lt;see langword=&quot;null&quot; /&gt; (&lt;see langword=&quot;Nothing&quot; /&gt; in Visual Basic) when overridden in a derived class.">获取可为 null 的布尔值，该值指示唯一约束是否适用于此列，或者在未设置任何值时返回 <see langword="null" />。 在派生类中重写时，可设置为 <see langword="true" /> 或 <see langword="false" />，指示唯一约束是否适用于此列，也可设置为 <see langword="null" />（在 Visual Basic 中为 <see langword="Nothing" />）。</summary>
      <returns vsli:raw="Returns &lt;see langword=&quot;true&quot; /&gt; if a unique constraint applies to this column; otherwise, &lt;see langword=&quot;false&quot; /&gt;. If no value is set, returns a null reference (&lt;see langword=&quot;Nothing&quot; /&gt; in Visual Basic).">如果唯一约束适用于此列，返回 <see langword="true" />；否则返回 <see langword="false" />。 如果未设置任何值，则返回空引用（在 Visual Basic 中为 <see langword="Nothing" />）。</returns>
    </member>
    <member name="P:System.Data.Common.DbColumn.Item(System.String)">
      <summary vsli:raw="Gets the object based on the column property name.">获取基于列属性名称的对象。</summary>
      <param name="property" vsli:raw="The column property name.">列属性名称。</param>
      <returns vsli:raw="The object based on the column property name.">基于列属性名称的对象。</returns>
    </member>
    <member name="P:System.Data.Common.DbColumn.NumericPrecision">
      <summary vsli:raw="Gets the numeric precision of the column data; otherwise, &lt;see langword=&quot;null&quot; /&gt; if no value is set. Can be set to either an &lt;see langword=&quot;int32&quot; /&gt; value to specify the numeric precision of the column data or &lt;see langword=&quot;null&quot; /&gt; when overridden in a derived class.">获取列数据的数值精度，否则在未设置任何值时为 <see langword="null" />。 在派生类中重写时，可设置为 <see langword="int32" /> 值（用于指定列数据的数值精度）或 <see langword="null" />。</summary>
      <returns vsli:raw="An &lt;see langword=&quot;int32&quot; /&gt; value that specifies the precision of the column data, if the data is numeric; otherwise, a null reference (&lt;see langword=&quot;Nothing&quot; /&gt; in Visual Basic) if no value is set.">
        <see langword="int32" />如果数据为数值，则为指定列数据的精度的值; 否则，如果未设置任何值，则为 null 引用 (<see langword="Nothing" /> Visual Basic) 。</returns>
    </member>
    <member name="P:System.Data.Common.DbColumn.NumericScale">
      <summary vsli:raw="Gets a nullable &lt;see langword=&quot;int32&quot; /&gt; value that either returns &lt;see langword=&quot;null&quot; /&gt; or the numeric scale of the column data. Can be set to either &lt;see langword=&quot;null&quot; /&gt; or an &lt;see langword=&quot;int32&quot; /&gt; value for the numeric scale of the column data when overridden in a derived class.">获取可为 null 的 <see langword="int32" /> 值，该值将返回 <see langword="null" /> 或列数据的数值范围。 在派生类中重写时，可设置为 <see langword="null" /> 或 <see langword="int32" /> 值（用于表示列数据的数值范围）。</summary>
      <returns vsli:raw="A null reference (&lt;see langword=&quot;Nothing&quot; /&gt; in Visual Basic) if no value is set; otherwise, a &lt;see langword=&quot;int32&quot; /&gt; value that specifies the scale of the column data, if the data is numeric.">如果未设置任何值，则为空引用（在 Visual Basic 中为 <see langword="Nothing" />）；否则，在数据是数值时，为指定列数据范围的 <see langword="int32" /> 值。</returns>
    </member>
    <member name="P:System.Data.Common.DbColumn.UdtAssemblyQualifiedName">
      <summary vsli:raw="Gets the assembly-qualified name of the &lt;see cref=&quot;T:System.Type&quot; /&gt; object that represents the type of data in the column; otherwise, &lt;see langword=&quot;null&quot; /&gt; if no value is set. Can be set to either the assembly-qualified name or &lt;see langword=&quot;null&quot; /&gt; when overridden in a derived class.">获取表示列中数据类型的 <see cref="T:System.Type" /> 对象的程序集限定名称，否则，在未设置任何值时为 <see langword="null" />。 在派生类中重写时，可设置为程序集限定名称或 <see langword="null" />。</summary>
      <returns vsli:raw="The assembly-qualified name of the &lt;see cref=&quot;T:System.Type&quot; /&gt; object that represents the type of data in the column; otherwise, a null reference (&lt;see langword=&quot;Nothing&quot; /&gt; in Visual Basic) if no value is set.">表示列中数据类型的 <see cref="T:System.Type" /> 对象的程序集限定名称，否则，在未设置任何值时为空引用（在 Visual Basic 中为 <see langword="Nothing" />）。</returns>
    </member>
    <member name="T:System.Data.Common.DbCommand">
      <summary vsli:raw="Represents an SQL statement or stored procedure to execute against a data source. Provides a base class for database-specific classes that represent commands. &lt;see cref=&quot;Overload:System.Data.Common.DbCommand.ExecuteNonQueryAsync&quot; /&gt;.">表示要对数据源执行的 SQL 语句或存储过程。 提供表示命令的数据库特定类的基类。 <see cref="Overload:System.Data.Common.DbCommand.ExecuteNonQueryAsync" /></summary>
    </member>
    <member name="M:System.Data.Common.DbCommand.#ctor">
      <summary vsli:raw="Constructs an instance of the &lt;see cref=&quot;T:System.Data.Common.DbCommand&quot; /&gt; object.">构造 <see cref="T:System.Data.Common.DbCommand" /> 对象的实例。</summary>
    </member>
    <member name="M:System.Data.Common.DbCommand.Cancel">
      <summary vsli:raw="Attempts to cancel the execution of a &lt;see cref=&quot;T:System.Data.Common.DbCommand&quot; /&gt;.">在派生类中重写时，尝试取消 <see cref="T:System.Data.Common.DbCommand" /> 的执行。</summary>
    </member>
    <member name="M:System.Data.Common.DbCommand.CreateDbParameter">
      <summary vsli:raw="Creates a new instance of a &lt;see cref=&quot;T:System.Data.Common.DbParameter&quot; /&gt; object.">在派生类中重写时，创建 <see cref="T:System.Data.Common.DbParameter" /> 对象的新实例。</summary>
      <returns vsli:raw="A &lt;see cref=&quot;T:System.Data.Common.DbParameter&quot; /&gt; object.">
        <see cref="T:System.Data.Common.DbParameter" /> 对象。</returns>
    </member>
    <member name="M:System.Data.Common.DbCommand.CreateParameter">
      <summary vsli:raw="Creates a new instance of a &lt;see cref=&quot;T:System.Data.Common.DbParameter&quot; /&gt; object.">创建 <see cref="T:System.Data.Common.DbParameter" /> 对象的新实例。</summary>
      <returns vsli:raw="A &lt;see cref=&quot;T:System.Data.Common.DbParameter&quot; /&gt; object.">
        <see cref="T:System.Data.Common.DbParameter" /> 对象。</returns>
    </member>
    <member name="M:System.Data.Common.DbCommand.DisposeAsync">
      <summary vsli:raw="Asynchronously diposes the command object.">异步处置命令对象。</summary>
      <returns vsli:raw="A &lt;see cref=&quot;T:System.Threading.Tasks.ValueTask&quot; /&gt; representing the asynchronous operation.">表示异步操作的 <see cref="T:System.Threading.Tasks.ValueTask" />。</returns>
    </member>
    <member name="M:System.Data.Common.DbCommand.ExecuteDbDataReader(System.Data.CommandBehavior)">
      <summary vsli:raw="Executes the command against its connection, returning a &lt;see cref=&quot;T:System.Data.Common.DbDataReader&quot; /&gt; which can be used to access the results.">当在派生类中重写时，针对连接执行命令文本。</summary>
      <param name="behavior" vsli:raw="An instance of &lt;see cref=&quot;T:System.Data.CommandBehavior&quot; /&gt;, specifying options for command execution and data retrieval.">
        <see cref="T:System.Data.CommandBehavior" /> 的一个实例。</param>
      <exception cref="T:System.Data.Common.DbException" vsli:raw="An error occurred while executing the command.">执行命令文本时出现的一个错误。</exception>
      <exception cref="T:System.ArgumentException" vsli:raw="An invalid &lt;see cref=&quot;T:System.Data.CommandBehavior&quot; /&gt; value.">无效的 <see cref="T:System.Data.CommandBehavior" /> 值。</exception>
      <returns vsli:raw="A &lt;see cref=&quot;T:System.Data.Common.DbDataReader&quot; /&gt; object.">表示该操作的任务。</returns>
    </member>
    <member name="M:System.Data.Common.DbCommand.ExecuteDbDataReaderAsync(System.Data.CommandBehavior,System.Threading.CancellationToken)">
      <summary vsli:raw="Providers should implement this method to provide a non-default implementation for &lt;see cref=&quot;Overload:System.Data.Common.DbCommand.ExecuteReader&quot; /&gt; overloads.  &#xA;  &#xA; The default implementation invokes the synchronous &lt;see cref=&quot;M:System.Data.Common.DbCommand.ExecuteReader&quot; /&gt; method and returns a completed task, blocking the calling thread. The default implementation will return a cancelled task if passed an already cancelled cancellation token. Exceptions thrown by ExecuteReader will be communicated via the returned Task Exception property.  &#xA;  &#xA; This method accepts a cancellation token that can be used to request the operation to be cancelled early. Implementations may ignore this request.">提供程序应执行该方法对 <see cref="Overload:System.Data.Common.DbCommand.ExecuteReader" /> 重载提供非默认的实现。  
  
默认实现调用同步 <see cref="M:System.Data.Common.DbCommand.ExecuteReader" /> 方法并返回已完成任务，以便阻止调用线程。 如果传递到已取消的取消标记，则默认实现将返回已取消的任务。 ExecuteReader 引发的异常将通过返回的任务异常属性传递。  
  
该方法可用于请求操作之前接受取消标记。 实现可能会忽略该请求。</summary>
      <param name="behavior" vsli:raw="An instance of &lt;see cref=&quot;T:System.Data.CommandBehavior&quot; /&gt;, specifying options for command execution and data retrieval.">语句执行和数据检索的选项。</param>
      <param name="cancellationToken" vsli:raw="A token to cancel the asynchronous operation.">用于取消异步操作的令牌。</param>
      <exception cref="T:System.Data.Common.DbException" vsli:raw="An error occurred while executing the command.">执行命令文本时出现的一个错误。</exception>
      <exception cref="T:System.ArgumentException" vsli:raw="An invalid &lt;see cref=&quot;T:System.Data.CommandBehavior&quot; /&gt; value.">无效的 <see cref="T:System.Data.CommandBehavior" /> 值。</exception>
      <returns vsli:raw="A task representing the asynchronous operation.">表示异步操作的任务。</returns>
    </member>
    <member name="M:System.Data.Common.DbCommand.ExecuteNonQuery">
      <summary vsli:raw="Executes the command against its connection object, returning the number of rows affected.">当在派生类中重写时，针对连接对象执行 SQL 语句。</summary>
      <returns vsli:raw="The number of rows affected.">受影响的行数。</returns>
    </member>
    <member name="M:System.Data.Common.DbCommand.ExecuteNonQueryAsync">
      <summary vsli:raw="An asynchronous version of &lt;see cref=&quot;M:System.Data.Common.DbCommand.ExecuteNonQuery&quot; /&gt;, which executes the command against its connection object, returning the number of rows affected.&#xA;  &#xA; Invokes &lt;see cref=&quot;M:System.Data.Common.DbCommand.ExecuteNonQueryAsync(System.Threading.CancellationToken)&quot; /&gt; with CancellationToken.None.">
        <see cref="M:System.Data.Common.DbCommand.ExecuteNonQuery" />的异步版本，针对一个连接对象执行一个 SQL 声明。  
  
通过 CancellationToken.None 调用 <see cref="M:System.Data.Common.DbCommand.ExecuteNonQueryAsync(System.Threading.CancellationToken)" />。</summary>
      <exception cref="T:System.Data.Common.DbException" vsli:raw="An error occurred while executing the command.">执行命令文本时出现的一个错误。</exception>
      <returns vsli:raw="A task representing the asynchronous operation.">表示异步操作的任务。</returns>
    </member>
    <member name="M:System.Data.Common.DbCommand.ExecuteNonQueryAsync(System.Threading.CancellationToken)">
      <summary vsli:raw="This is the asynchronous version of &lt;see cref=&quot;M:System.Data.Common.DbCommand.ExecuteNonQuery&quot; /&gt;. Providers should override with an appropriate implementation. The cancellation token may optionally be ignored.  &#xA;  &#xA; The default implementation invokes the synchronous &lt;see cref=&quot;M:System.Data.Common.DbCommand.ExecuteNonQuery&quot; /&gt; method and returns a completed task, blocking the calling thread. The default implementation will return a cancelled task if passed an already cancelled cancellation token.  Exceptions thrown by &lt;see cref=&quot;M:System.Data.Common.DbCommand.ExecuteNonQuery&quot; /&gt; will be communicated via the returned Task Exception property.  &#xA;  &#xA; Do not invoke other methods and properties of the &lt;see langword=&quot;DbCommand&quot; /&gt; object until the returned Task is complete.">这是 <see cref="M:System.Data.Common.DbCommand.ExecuteNonQuery" /> 的异步版本。 提供程序应使用合适的实现进行重写。 可选择性忽略取消标记。  
  
默认实现调用同步 <see cref="M:System.Data.Common.DbCommand.ExecuteNonQuery" /> 方法并返回已完成任务，以便阻止调用线程。 如果传递到已取消的取消标记，则默认实现将返回已取消的任务。  <see cref="M:System.Data.Common.DbCommand.ExecuteNonQuery" /> 引发的异常将通过任务异常属性传递。  
  
在返回的任务完成前，不要调用 <see langword="DbCommand" /> 对象的其他方法和属性。</summary>
      <param name="cancellationToken" vsli:raw="A token to cancel the asynchronous operation.">用于取消异步操作的令牌。</param>
      <exception cref="T:System.Data.Common.DbException" vsli:raw="An error occurred while executing the command.">执行命令文本时出现的一个错误。</exception>
      <returns vsli:raw="A task representing the asynchronous operation.">表示异步操作的任务。</returns>
    </member>
    <member name="M:System.Data.Common.DbCommand.ExecuteReader">
      <summary vsli:raw="Executes the command against its connection, returning a &lt;see cref=&quot;T:System.Data.Common.DbDataReader&quot; /&gt; which can be used to access the results.">针对 <see cref="P:System.Data.Common.DbCommand.CommandText" /> 执行 <see cref="P:System.Data.Common.DbCommand.Connection" />，并返回 <see cref="T:System.Data.Common.DbDataReader" />。</summary>
      <returns vsli:raw="A &lt;see cref=&quot;T:System.Data.Common.DbDataReader&quot; /&gt; object.">
        <see cref="T:System.Data.Common.DbDataReader" /> 对象。</returns>
    </member>
    <member name="M:System.Data.Common.DbCommand.ExecuteReader(System.Data.CommandBehavior)">
      <summary vsli:raw="Executes the command against its connection, returning a &lt;see cref=&quot;T:System.Data.Common.DbDataReader&quot; /&gt; which can be used to access the results.">针对 <see cref="P:System.Data.Common.DbCommand.CommandText" /> 执行 <see cref="P:System.Data.Common.DbCommand.Connection" />，并使用 <see cref="T:System.Data.Common.DbDataReader" /> 值之一返回 <see cref="T:System.Data.CommandBehavior" />。</summary>
      <param name="behavior" vsli:raw="An instance of &lt;see cref=&quot;T:System.Data.CommandBehavior&quot; /&gt;, specifying options for command execution and data retrieval.">用于指定命令行为的枚举值之一。</param>
      <returns vsli:raw="An &lt;see cref=&quot;T:System.Data.Common.DbDataReader&quot; /&gt; object.">一个 <see cref="T:System.Data.Common.DbDataReader" /> 对象。</returns>
    </member>
    <member name="M:System.Data.Common.DbCommand.ExecuteReaderAsync">
      <summary vsli:raw="An asynchronous version of &lt;see cref=&quot;Overload:System.Data.Common.DbCommand.ExecuteReader&quot; /&gt;, which executes the command against its connection, returning a &lt;see cref=&quot;T:System.Data.Common.DbDataReader&quot; /&gt; which can be used to access the results.&#xA;  &#xA; Invokes &lt;see cref=&quot;M:System.Data.Common.DbCommand.ExecuteDbDataReaderAsync(System.Data.CommandBehavior,System.Threading.CancellationToken)&quot; /&gt; with CancellationToken.None.">
        <see cref="Overload:System.Data.Common.DbCommand.ExecuteReader" /> 的异步版本，针对 <see cref="P:System.Data.Common.DbCommand.CommandText" /> 和 <see cref="P:System.Data.Common.DbCommand.Connection" /> 执行 <see cref="T:System.Data.Common.DbDataReader" />。  
  
通过 CancellationToken.None 调用 <see cref="M:System.Data.Common.DbCommand.ExecuteDbDataReaderAsync(System.Data.CommandBehavior,System.Threading.CancellationToken)" />。</summary>
      <exception cref="T:System.Data.Common.DbException" vsli:raw="An error occurred while executing the command.">执行命令文本时出现的一个错误。</exception>
      <exception cref="T:System.ArgumentException" vsli:raw="An invalid &lt;see cref=&quot;T:System.Data.CommandBehavior&quot; /&gt; value.">无效的 <see cref="T:System.Data.CommandBehavior" /> 值。</exception>
      <returns vsli:raw="A task representing the asynchronous operation.">表示异步操作的任务。</returns>
    </member>
    <member name="M:System.Data.Common.DbCommand.ExecuteReaderAsync(System.Data.CommandBehavior)">
      <summary vsli:raw="An asynchronous version of &lt;see cref=&quot;Overload:System.Data.Common.DbCommand.ExecuteReader&quot; /&gt;, which executes the command against its connection, returning a &lt;see cref=&quot;T:System.Data.Common.DbDataReader&quot; /&gt; which can be used to access the results.&#xA;  &#xA; Invokes &lt;see cref=&quot;M:System.Data.Common.DbCommand.ExecuteDbDataReaderAsync(System.Data.CommandBehavior,System.Threading.CancellationToken)&quot; /&gt;.">
        <see cref="Overload:System.Data.Common.DbCommand.ExecuteReader" /> 的异步版本，针对 <see cref="P:System.Data.Common.DbCommand.CommandText" /> 和 <see cref="P:System.Data.Common.DbCommand.Connection" /> 执行 <see cref="T:System.Data.Common.DbDataReader" />。  
  
调用 <see cref="M:System.Data.Common.DbCommand.ExecuteDbDataReaderAsync(System.Data.CommandBehavior,System.Threading.CancellationToken)" />.</summary>
      <param name="behavior" vsli:raw="One of the enumeration values that specifies how the command should execute and how data should be retrieved.">指定了命令行为的枚举值之一。</param>
      <exception cref="T:System.Data.Common.DbException" vsli:raw="An error occurred while executing the command.">执行命令文本时出现的一个错误。</exception>
      <exception cref="T:System.ArgumentException" vsli:raw="An invalid &lt;see cref=&quot;T:System.Data.CommandBehavior&quot; /&gt; value.">无效的 <see cref="T:System.Data.CommandBehavior" /> 值。</exception>
      <returns vsli:raw="A task representing the asynchronous operation.">表示异步操作的任务。</returns>
    </member>
    <member name="M:System.Data.Common.DbCommand.ExecuteReaderAsync(System.Data.CommandBehavior,System.Threading.CancellationToken)">
      <summary vsli:raw="Invokes &lt;see cref=&quot;M:System.Data.Common.DbCommand.ExecuteDbDataReaderAsync(System.Data.CommandBehavior,System.Threading.CancellationToken)&quot; /&gt;.">调用 <see cref="M:System.Data.Common.DbCommand.ExecuteDbDataReaderAsync(System.Data.CommandBehavior,System.Threading.CancellationToken)" />.</summary>
      <param name="behavior" vsli:raw="One of the enumeration values that specifies the command behavior.">用于指定命令行为的枚举值之一。</param>
      <param name="cancellationToken" vsli:raw="A token to cancel the asynchronous operation.">用于取消异步操作的令牌。</param>
      <exception cref="T:System.Data.Common.DbException" vsli:raw="An error occurred while executing the command.">执行命令文本时出现的一个错误。</exception>
      <exception cref="T:System.ArgumentException" vsli:raw="An invalid &lt;see cref=&quot;T:System.Data.CommandBehavior&quot; /&gt; value.">无效的 <see cref="T:System.Data.CommandBehavior" /> 值。</exception>
      <returns vsli:raw="A task representing the asynchronous operation.">表示异步操作的任务。</returns>
    </member>
    <member name="M:System.Data.Common.DbCommand.ExecuteReaderAsync(System.Threading.CancellationToken)">
      <summary vsli:raw="An asynchronous version of &lt;see cref=&quot;Overload:System.Data.Common.DbCommand.ExecuteReader&quot; /&gt;, which executes the command against its connection, returning a &lt;see cref=&quot;T:System.Data.Common.DbDataReader&quot; /&gt; which can be used to access the results.&#xA;  &#xA; Invokes &lt;see cref=&quot;M:System.Data.Common.DbCommand.ExecuteDbDataReaderAsync(System.Data.CommandBehavior,System.Threading.CancellationToken)&quot; /&gt;.">
        <see cref="Overload:System.Data.Common.DbCommand.ExecuteReader" /> 的异步版本，针对 <see cref="P:System.Data.Common.DbCommand.CommandText" /> 和 <see cref="P:System.Data.Common.DbCommand.Connection" /> 执行 <see cref="T:System.Data.Common.DbDataReader" />。 此方法传播有关应取消操作的通知。  
  
调用 <see cref="M:System.Data.Common.DbCommand.ExecuteDbDataReaderAsync(System.Data.CommandBehavior,System.Threading.CancellationToken)" />.</summary>
      <param name="cancellationToken" vsli:raw="A token to cancel the asynchronous operation.">用于取消异步操作的令牌。</param>
      <exception cref="T:System.Data.Common.DbException" vsli:raw="An error occurred while executing the command.">执行命令文本时出现的一个错误。</exception>
      <exception cref="T:System.ArgumentException" vsli:raw="An invalid &lt;see cref=&quot;T:System.Data.CommandBehavior&quot; /&gt; value.">无效的 <see cref="T:System.Data.CommandBehavior" /> 值。</exception>
      <returns vsli:raw="A task representing the asynchronous operation.">表示异步操作的任务。</returns>
    </member>
    <member name="M:System.Data.Common.DbCommand.ExecuteScalar">
      <summary vsli:raw="Executes the command and returns the first column of the first row in the first returned result set. All other columns, rows and result sets are ignored.">当在派生类中重写时，执行查询，并将查询返回的结果集中第一行的第一列返回。 所有其他的列和行将被忽略。</summary>
      <returns vsli:raw="The first column of the first row in the first result set.">结果集中第一行的第一列。</returns>
    </member>
    <member name="M:System.Data.Common.DbCommand.ExecuteScalarAsync">
      <summary vsli:raw="An asynchronous version of &lt;see cref=&quot;M:System.Data.Common.DbCommand.ExecuteScalar&quot; /&gt;, which executes the command and returns the first column of the first row in the first returned result set. All other columns, rows and result sets are ignored.  &#xA;  &#xA; Invokes &lt;see cref=&quot;M:System.Data.Common.DbCommand.ExecuteScalarAsync(System.Threading.CancellationToken)&quot; /&gt; with CancellationToken.None.">
        <see cref="M:System.Data.Common.DbCommand.ExecuteScalar" /> 的异步版本，执行查询，并将查询返回的结果集中第一行的第一列返回。 所有其他的列和行将被忽略。  
  
通过 CancellationToken.None 调用 <see cref="M:System.Data.Common.DbCommand.ExecuteScalarAsync(System.Threading.CancellationToken)" />。</summary>
      <exception cref="T:System.Data.Common.DbException" vsli:raw="An error occurred while executing the command.">执行命令文本时出现的一个错误。</exception>
      <returns vsli:raw="A task representing the asynchronous operation.">表示异步操作的任务。</returns>
    </member>
    <member name="M:System.Data.Common.DbCommand.ExecuteScalarAsync(System.Threading.CancellationToken)">
      <summary vsli:raw="This is the asynchronous version of &lt;see cref=&quot;M:System.Data.Common.DbCommand.ExecuteScalar&quot; /&gt;. Providers should override with an appropriate implementation. The cancellation token may optionally be ignored.  &#xA;  &#xA; The default implementation invokes the synchronous &lt;see cref=&quot;M:System.Data.Common.DbCommand.ExecuteScalar&quot; /&gt; method and returns a completed task, blocking the calling thread. The default implementation will return a cancelled task if passed an already cancelled cancellation token. Exceptions thrown by ExecuteScalar will be communicated via the returned Task Exception property.  &#xA;  &#xA; Do not invoke other methods and properties of the &lt;see langword=&quot;DbCommand&quot; /&gt; object until the returned Task is complete.">这是 <see cref="M:System.Data.Common.DbCommand.ExecuteScalar" /> 的异步版本。 提供程序应使用合适的实现进行重写。 可选择性忽略取消标记。  
  
默认实现调用同步 <see cref="M:System.Data.Common.DbCommand.ExecuteScalar" /> 方法并返回已完成任务，以便阻止调用线程。 如果传递到已取消的取消标记，则默认实现将返回已取消的任务。 ExecuteScalar 引发的异常将通过返回的任务异常属性传递。  
  
在返回的任务完成前，不要调用 <see langword="DbCommand" /> 对象的其他方法和属性。</summary>
      <param name="cancellationToken" vsli:raw="A token to cancel the asynchronous operation.">用于取消异步操作的令牌。</param>
      <exception cref="T:System.Data.Common.DbException" vsli:raw="An error occurred while executing the command.">执行命令文本时出现的一个错误。</exception>
      <returns vsli:raw="A task representing the asynchronous operation.">表示异步操作的任务。</returns>
    </member>
    <member name="M:System.Data.Common.DbCommand.Prepare">
      <summary vsli:raw="Creates a prepared (or compiled) version of the command on the data source.">当在派生类中重写时，在数据源上创建准备就绪（或已编译）的命令版本。</summary>
    </member>
    <member name="M:System.Data.Common.DbCommand.PrepareAsync(System.Threading.CancellationToken)">
      <summary vsli:raw="Asynchronously creates a prepared (or compiled) version of the command on the data source.">在数据源上异步创建准备就绪（或已编译）的命令版本。</summary>
      <param name="cancellationToken" vsli:raw="An optional token to cancel the asynchronous operation. The default value is &lt;see cref=&quot;P:System.Threading.CancellationToken.None&quot; /&gt;.">用于取消异步操作的可选令牌。 默认值是 <see cref="P:System.Threading.CancellationToken.None" />。</param>
      <returns vsli:raw="A &lt;see cref=&quot;T:System.Threading.Tasks.Task&quot; /&gt; representing the asynchronous operation.">表示异步操作的 <see cref="T:System.Threading.Tasks.Task" />。</returns>
    </member>
    <member name="M:System.Data.Common.DbCommand.System#Data#IDbCommand#CreateParameter">
      <summary vsli:raw="Creates a new instance of an &lt;see cref=&quot;T:System.Data.IDbDataParameter&quot; /&gt; object.">创建 <see cref="T:System.Data.IDbDataParameter" /> 对象的新实例。</summary>
      <returns vsli:raw="An &lt;see langword=&quot;IDbDataParameter&quot; /&gt; object.">一个 <see langword="IDbDataParameter" /> 对象。</returns>
    </member>
    <member name="M:System.Data.Common.DbCommand.System#Data#IDbCommand#ExecuteReader">
      <summary vsli:raw="Executes the &lt;see cref=&quot;P:System.Data.IDbCommand.CommandText&quot; /&gt; against the &lt;see cref=&quot;P:System.Data.IDbCommand.Connection&quot; /&gt; and builds an &lt;see cref=&quot;T:System.Data.IDataReader&quot; /&gt;.">对 <see cref="P:System.Data.IDbCommand.Connection" /> 执行 <see cref="P:System.Data.IDbCommand.CommandText" /> 并生成 <see cref="T:System.Data.IDataReader" />。</summary>
      <returns vsli:raw="An &lt;see cref=&quot;T:System.Data.IDataReader&quot; /&gt; object.">一个 <see cref="T:System.Data.IDataReader" /> 对象。</returns>
    </member>
    <member name="M:System.Data.Common.DbCommand.System#Data#IDbCommand#ExecuteReader(System.Data.CommandBehavior)">
      <summary vsli:raw="Executes the &lt;see cref=&quot;P:System.Data.IDbCommand.CommandText&quot; /&gt; against the &lt;see cref=&quot;P:System.Data.IDbCommand.Connection&quot; /&gt;, and builds an &lt;see cref=&quot;T:System.Data.IDataReader&quot; /&gt; using one of the &lt;see cref=&quot;T:System.Data.CommandBehavior&quot; /&gt; values.">对 <see cref="P:System.Data.IDbCommand.Connection" /> 执行 <see cref="P:System.Data.IDbCommand.CommandText" />，并使用 <see cref="T:System.Data.CommandBehavior" /> 值之一生成 <see cref="T:System.Data.IDataReader" />。</summary>
      <param name="behavior" vsli:raw="One of the enumeration values that specifies the command behavior.">用于指定命令行为的枚举值之一。</param>
      <returns vsli:raw="An &lt;see cref=&quot;T:System.Data.IDataReader&quot; /&gt; object.">一个 <see cref="T:System.Data.IDataReader" /> 对象。</returns>
    </member>
    <member name="P:System.Data.Common.DbCommand.CommandText">
      <summary vsli:raw="Gets or sets the text command to run against the data source.">在派生类中重写时，获取或设置对数据源运行的文本命令。</summary>
      <returns vsli:raw="The text command to execute. The default value is an empty string (&quot;&quot;).">要执行的文本命令。 默认值为空字符串 ("")。</returns>
    </member>
    <member name="P:System.Data.Common.DbCommand.CommandTimeout">
      <summary vsli:raw="Gets or sets the wait time (in seconds) before terminating the attempt to execute the command and generating an error.">在派生类中重写时，获取或设置在终止尝试执行命令并生成错误之前的等待时间（以秒为单位）。</summary>
      <returns vsli:raw="The time in seconds to wait for the command to execute.">等待命令执行所需的时间（以秒为单位）。</returns>
    </member>
    <member name="P:System.Data.Common.DbCommand.CommandType">
      <summary vsli:raw="Gets or sets how the &lt;see cref=&quot;P:System.Data.Common.DbCommand.CommandText&quot; /&gt; property is interpreted.">在派生类中重写时，获取或设置 <see cref="P:System.Data.Common.DbCommand.CommandText" /> 属性的解释方式。</summary>
      <returns vsli:raw="One of the enumeration values that specifies how a command string is interpreted. The default is &lt;see langword=&quot;Text&quot; /&gt;.">指定如何解释命令字符串的枚举值之一。 默认值为 <see langword="Text" />。</returns>
    </member>
    <member name="P:System.Data.Common.DbCommand.Connection">
      <summary vsli:raw="Gets or sets the &lt;see cref=&quot;T:System.Data.Common.DbConnection&quot; /&gt; used by this &lt;see cref=&quot;T:System.Data.Common.DbCommand&quot; /&gt;.">获取或设置此 <see cref="T:System.Data.Common.DbConnection" /> 使用的 <see cref="T:System.Data.Common.DbCommand" />。</summary>
      <returns vsli:raw="The connection to the data source.">与数据源的连接。</returns>
    </member>
    <member name="P:System.Data.Common.DbCommand.DbConnection">
      <summary vsli:raw="Gets or sets the &lt;see cref=&quot;T:System.Data.Common.DbConnection&quot; /&gt; used by this &lt;see cref=&quot;T:System.Data.Common.DbCommand&quot; /&gt;.">当在派生类中重写时，获取或设置此 <see cref="T:System.Data.Common.DbCommand" /> 使用的 <see cref="T:System.Data.Common.DbConnection" />。</summary>
      <returns vsli:raw="The connection to the data source.">与数据源的连接。</returns>
    </member>
    <member name="P:System.Data.Common.DbCommand.DbParameterCollection">
      <summary vsli:raw="Gets the collection of &lt;see cref=&quot;T:System.Data.Common.DbParameter&quot; /&gt; objects.">在派生类中重写时，获取 <see cref="T:System.Data.Common.DbParameter" /> 对象的集合。</summary>
      <returns vsli:raw="The parameters of the SQL statement or stored procedure.">SQL 语句或存储过程的参数。</returns>
    </member>
    <member name="P:System.Data.Common.DbCommand.DbTransaction">
      <summary vsli:raw="Gets or sets the &lt;see cref=&quot;P:System.Data.Common.DbTransaction&quot; /&gt; within which this &lt;see cref=&quot;T:System.Data.Common.DbCommand&quot; /&gt; object executes.">当在派生类中重写时，获取或设置执行 <see cref="T:System.Data.Common.DbCommand" /> 对象时所在的 <see cref="P:System.Data.Common.DbCommand.DbTransaction" />。</summary>
      <returns vsli:raw="The transaction within which a command object of a .NET data provider executes. The default value is a null reference (&lt;see langword=&quot;Nothing&quot; /&gt; in Visual Basic).">.NET 数据提供程序的命令对象在其中执行的事务。 默认值为空引用（在 Visual Basic 中为 <see langword="Nothing" />）。</returns>
    </member>
    <member name="P:System.Data.Common.DbCommand.DesignTimeVisible">
      <summary vsli:raw="Gets or sets a value indicating whether the command object should be visible in a customized interface control.">当在派生类中重写时，获取或设置一个值，该值指示此命令对象在自定义界面控件中是否可见。</summary>
      <returns vsli:raw="&lt;see langword=&quot;true&quot; /&gt;, if the command object should be visible in a control; otherwise &lt;see langword=&quot;false&quot; /&gt;. The default is &lt;see langword=&quot;true&quot; /&gt;.">如果该命令对象应在控件中可见，则为 <see langword="true" />；否则为 <see langword="false" />。 默认值为 <see langword="true" />。</returns>
    </member>
    <member name="P:System.Data.Common.DbCommand.Parameters">
      <summary vsli:raw="Gets the collection of &lt;see cref=&quot;T:System.Data.Common.DbParameter&quot; /&gt; objects. For more information on parameters, see Configuring Parameters and Parameter Data Types.">获取 <see cref="T:System.Data.Common.DbParameter" /> 对象的集合。 有关参数的详细信息，请参阅配置参数和参数数据类型。</summary>
      <returns vsli:raw="The parameters of the SQL statement or stored procedure.">SQL 语句或存储过程的参数。</returns>
    </member>
    <member name="P:System.Data.Common.DbCommand.System#Data#IDbCommand#Connection">
      <summary vsli:raw="Gets or sets the &lt;see cref=&quot;T:System.Data.IDbConnection&quot; /&gt; used by this instance of the &lt;see cref=&quot;T:System.Data.IDbCommand&quot; /&gt;.">获取或设置 <see cref="T:System.Data.IDbCommand" /> 的此实例使用的 <see cref="T:System.Data.IDbConnection" />。</summary>
      <returns vsli:raw="The connection to the data source.">与数据源的连接。</returns>
    </member>
    <member name="P:System.Data.Common.DbCommand.System#Data#IDbCommand#Parameters">
      <summary vsli:raw="Gets the &lt;see cref=&quot;T:System.Data.IDataParameterCollection&quot; /&gt;.">获取 <see cref="T:System.Data.IDataParameterCollection" />。</summary>
      <returns vsli:raw="The parameters of the SQL statement or stored procedure.">SQL 语句或存储过程的参数。</returns>
    </member>
    <member name="P:System.Data.Common.DbCommand.System#Data#IDbCommand#Transaction">
      <summary vsli:raw="Gets or sets the &lt;see cref=&quot;P:System.Data.Common.DbCommand.DbTransaction&quot; /&gt; within which this &lt;see cref=&quot;T:System.Data.Common.DbCommand&quot; /&gt; object executes.">获取或设置将在其中执行此 <see cref="T:System.Data.Common.DbCommand" /> 对象的 <see cref="P:System.Data.Common.DbCommand.DbTransaction" />。</summary>
      <returns vsli:raw="The transaction within which a &lt;see langword=&quot;Command&quot; /&gt; object of a .NET Framework data provider executes. The default value is a null reference (&lt;see langword=&quot;Nothing&quot; /&gt; in Visual Basic).">在其中执行 .NET Framework 数据提供程序的 <see langword="Command" /> 对象的事务。 默认值为空引用（在 Visual Basic 中为 <see langword="Nothing" />）。</returns>
    </member>
    <member name="P:System.Data.Common.DbCommand.Transaction">
      <summary vsli:raw="Gets or sets the &lt;see cref=&quot;T:System.Data.Common.DbTransaction&quot; /&gt; within which this &lt;see cref=&quot;T:System.Data.Common.DbCommand&quot; /&gt; object executes.">获取或设置将在其中执行此 <see cref="T:System.Data.Common.DbCommand" /> 对象的 <see cref="T:System.Data.Common.DbTransaction" />。</summary>
      <returns vsli:raw="The transaction within which a command object of a .NET Framework data provider executes. The default value is a null reference (&lt;see langword=&quot;Nothing&quot; /&gt; in Visual Basic).">在其中执行 .NET Framework 数据提供程序的 <see langword="Command" /> 对象的事务。 默认值为空引用（在 Visual Basic 中为 <see langword="Nothing" />）。</returns>
    </member>
    <member name="P:System.Data.Common.DbCommand.UpdatedRowSource">
      <summary vsli:raw="Gets or sets how command results are applied to the &lt;see cref=&quot;T:System.Data.DataRow&quot; /&gt; when used by the Update method of a &lt;see cref=&quot;T:System.Data.Common.DbDataAdapter&quot; /&gt;.">当在派生类中重写时，获取或设置命令结果在由 <see cref="T:System.Data.DataRow" /> 的 Update 方法使用时如何应用于 <see cref="T:System.Data.Common.DbDataAdapter" />。</summary>
      <returns vsli:raw="One of the enumeration values that indicates how command results are applied. The default is &lt;see langword=&quot;Both&quot; /&gt; unless the command is automatically generated. Then the default is &lt;see langword=&quot;None&quot; /&gt;.">枚举值之一，指示如何应用命令结果。 除非自动生成该命令，否则默认值为 <see langword="Both" />。 如果自动生成该命令，默认值为 <see langword="None" />。</returns>
    </member>
    <member name="T:System.Data.Common.DbCommandBuilder">
      <summary vsli:raw="Automatically generates single-table commands used to reconcile changes made to a &lt;see cref=&quot;T:System.Data.DataSet&quot; /&gt; with the associated database. This is an abstract class that can only be inherited.">自动生成用于协调 <see cref="T:System.Data.DataSet" /> 的更改与关联数据库的单表命令。 这是一个只能被继承的抽象类。</summary>
    </member>
    <member name="M:System.Data.Common.DbCommandBuilder.#ctor">
      <summary vsli:raw="Initializes a new instance of a class that inherits from the &lt;see cref=&quot;T:System.Data.Common.DbCommandBuilder&quot; /&gt; class.">初始化从 <see cref="T:System.Data.Common.DbCommandBuilder" /> 类继承的类的新实例。</summary>
    </member>
    <member name="M:System.Data.Common.DbCommandBuilder.ApplyParameterInfo(System.Data.Common.DbParameter,System.Data.DataRow,System.Data.StatementType,System.Boolean)">
      <summary vsli:raw="Allows the provider implementation of the &lt;see cref=&quot;T:System.Data.Common.DbCommandBuilder&quot; /&gt; class to handle additional parameter properties.">允许 <see cref="T:System.Data.Common.DbCommandBuilder" /> 类的提供程序实现处理附加参数属性。</summary>
      <param name="parameter" vsli:raw="A &lt;see cref=&quot;T:System.Data.Common.DbParameter&quot; /&gt; to which the additional modifications are applied.">要将附加修改应用到的 <see cref="T:System.Data.Common.DbParameter" />。</param>
      <param name="row" vsli:raw="The &lt;see cref=&quot;T:System.Data.DataRow&quot; /&gt; from the schema table provided by &lt;see cref=&quot;M:System.Data.Common.DbDataReader.GetSchemaTable&quot; /&gt;.">来自由 <see cref="T:System.Data.DataRow" /> 提供的架构表的 <see cref="M:System.Data.Common.DbDataReader.GetSchemaTable" />。</param>
      <param name="statementType" vsli:raw="The type of command being generated; INSERT, UPDATE or DELETE.">生成的命令的类型；INSERT、UPDATE 或 DELETE。</param>
      <param name="whereClause" vsli:raw="&lt;see langword=&quot;true&quot; /&gt; if the parameter is part of the update or delete WHERE clause, &lt;see langword=&quot;false&quot; /&gt; if it is part of the insert or update values.">如果参数是 update 或 delete WHERE 子句的一部分，则为 <see langword="true" />；如果是 insert 或 update 值的一部分，则为 <see langword="false" />。</param>
    </member>
    <member name="M:System.Data.Common.DbCommandBuilder.Dispose(System.Boolean)">
      <summary vsli:raw="Releases the unmanaged resources used by the &lt;see cref=&quot;T:System.Data.Common.DbCommandBuilder&quot; /&gt; and optionally releases the managed resources.">释放由 <see cref="T:System.Data.Common.DbCommandBuilder" /> 占用的非托管资源，还可以另外再释放托管资源。</summary>
      <param name="disposing" vsli:raw="&lt;see langword=&quot;true&quot; /&gt; to release both managed and unmanaged resources; &lt;see langword=&quot;false&quot; /&gt; to release only unmanaged resources.">若要释放托管资源和非托管资源，则为 <see langword="true" />；若仅释放非托管资源，则为 <see langword="false" />。</param>
    </member>
    <member name="M:System.Data.Common.DbCommandBuilder.GetDeleteCommand">
      <summary vsli:raw="Gets the automatically generated &lt;see cref=&quot;T:System.Data.Common.DbCommand&quot; /&gt; object required to perform deletions at the data source.">获取在数据源中执行删除操作所需的自动生成的 <see cref="T:System.Data.Common.DbCommand" /> 对象。</summary>
      <returns vsli:raw="The automatically generated &lt;see cref=&quot;T:System.Data.Common.DbCommand&quot; /&gt; object required to perform deletions.">自动生成的、执行删除操作所需的 <see cref="T:System.Data.Common.DbCommand" /> 对象。</returns>
    </member>
    <member name="M:System.Data.Common.DbCommandBuilder.GetDeleteCommand(System.Boolean)">
      <summary vsli:raw="Gets the automatically generated &lt;see cref=&quot;T:System.Data.Common.DbCommand&quot; /&gt; object required to perform deletions at the data source, optionally using columns for parameter names.">获取对数据源执行删除操作所必需的自动生成的 <see cref="T:System.Data.Common.DbCommand" /> 对象，可选择使用列作为参数名。</summary>
      <param name="useColumnsForParameterNames" vsli:raw="If &lt;see langword=&quot;true&quot; /&gt;, generate parameter names matching column names, if possible. If &lt;see langword=&quot;false&quot; /&gt;, generate &lt;c&gt;@p1&lt;/c&gt;, &lt;c&gt;@p2&lt;/c&gt;, and so on.">如果为 <see langword="true" />，则生成与列名匹配的参数名（如果可能）。 如果为 <see langword="false" />，则生成 <c>@p1</c>、<c>@p2</c>，以此类推。</param>
      <returns vsli:raw="The automatically generated &lt;see cref=&quot;T:System.Data.Common.DbCommand&quot; /&gt; object required to perform deletions.">自动生成的、执行删除操作所需的 <see cref="T:System.Data.Common.DbCommand" /> 对象。</returns>
    </member>
    <member name="M:System.Data.Common.DbCommandBuilder.GetInsertCommand">
      <summary vsli:raw="Gets the automatically generated &lt;see cref=&quot;T:System.Data.Common.DbCommand&quot; /&gt; object required to perform insertions at the data source.">获取在数据源中执行插入操作所需的自动生成的 <see cref="T:System.Data.Common.DbCommand" /> 对象。</summary>
      <returns vsli:raw="The automatically generated &lt;see cref=&quot;T:System.Data.Common.DbCommand&quot; /&gt; object required to perform insertions.">自动生成的、执行插入操作所需的 <see cref="T:System.Data.Common.DbCommand" /> 对象。</returns>
    </member>
    <member name="M:System.Data.Common.DbCommandBuilder.GetInsertCommand(System.Boolean)">
      <summary vsli:raw="Gets the automatically generated &lt;see cref=&quot;T:System.Data.Common.DbCommand&quot; /&gt; object required to perform insertions at the data source, optionally using columns for parameter names.">获取对数据源执行插入操作所必需的自动生成的 <see cref="T:System.Data.Common.DbCommand" /> 对象，可选择使用列作为参数名。</summary>
      <param name="useColumnsForParameterNames" vsli:raw="If &lt;see langword=&quot;true&quot; /&gt;, generate parameter names matching column names, if possible. If &lt;see langword=&quot;false&quot; /&gt;, generate &lt;c&gt;@p1&lt;/c&gt;, &lt;c&gt;@p2&lt;/c&gt;, and so on.">如果为 <see langword="true" />，则生成与列名匹配的参数名（如果可能）。 如果为 <see langword="false" />，则生成 <c>@p1</c>、<c>@p2</c>，以此类推。</param>
      <returns vsli:raw="The automatically generated &lt;see cref=&quot;T:System.Data.Common.DbCommand&quot; /&gt; object required to perform insertions.">自动生成的、执行插入操作所需的 <see cref="T:System.Data.Common.DbCommand" /> 对象。</returns>
    </member>
    <member name="M:System.Data.Common.DbCommandBuilder.GetParameterName(System.Int32)">
      <summary vsli:raw="Returns the name of the specified parameter in the format of &lt;c&gt;@p#&lt;/c&gt;. Use when building a custom command builder.">以 <c>@p#</c> 格式返回指定参数的名称。 在生成自定义命令生成器时使用。</summary>
      <param name="parameterOrdinal" vsli:raw="The number to be included as part of the parameter's name.">作为参数名的一部分而包含的数字。</param>
      <returns vsli:raw="The name of the parameter with the specified number appended as part of the parameter name.">参数名，其中包含作为参数名的一部分而附加的指定数字。</returns>
    </member>
    <member name="M:System.Data.Common.DbCommandBuilder.GetParameterName(System.String)">
      <summary vsli:raw="Returns the full parameter name, given the partial parameter name.">给定部分参数名，返回完整参数名。</summary>
      <param name="parameterName" vsli:raw="The partial name of the parameter.">参数的部分名称。</param>
      <returns vsli:raw="The full parameter name corresponding to the partial parameter name requested.">对应于所请求的部分参数名的完整参数名。</returns>
    </member>
    <member name="M:System.Data.Common.DbCommandBuilder.GetParameterPlaceholder(System.Int32)">
      <summary vsli:raw="Returns the placeholder for the parameter in the associated SQL statement.">返回该参数在关联的 SQL 语句中的占位符。</summary>
      <param name="parameterOrdinal" vsli:raw="The number to be included as part of the parameter's name.">作为参数名的一部分而包含的数字。</param>
      <returns vsli:raw="The name of the parameter with the specified number appended.">附加了指定数字的参数名。</returns>
    </member>
    <member name="M:System.Data.Common.DbCommandBuilder.GetSchemaTable(System.Data.Common.DbCommand)">
      <summary vsli:raw="Returns the schema table for the &lt;see cref=&quot;T:System.Data.Common.DbCommandBuilder&quot; /&gt;.">返回 <see cref="T:System.Data.Common.DbCommandBuilder" /> 的架构表。</summary>
      <param name="sourceCommand" vsli:raw="The &lt;see cref=&quot;T:System.Data.Common.DbCommand&quot; /&gt; for which to retrieve the corresponding schema table.">要为其检索对应架构表的 <see cref="T:System.Data.Common.DbCommand" />。</param>
      <returns vsli:raw="A &lt;see cref=&quot;T:System.Data.DataTable&quot; /&gt; that represents the schema for the specific &lt;see cref=&quot;T:System.Data.Common.DbCommand&quot; /&gt;.">表示特定 <see cref="T:System.Data.DataTable" /> 的架构的 <see cref="T:System.Data.Common.DbCommand" />。</returns>
    </member>
    <member name="M:System.Data.Common.DbCommandBuilder.GetUpdateCommand">
      <summary vsli:raw="Gets the automatically generated &lt;see cref=&quot;T:System.Data.Common.DbCommand&quot; /&gt; object required to perform updates at the data source.">获取在数据源中执行更新操作所需的自动生成的 <see cref="T:System.Data.Common.DbCommand" /> 对象。</summary>
      <returns vsli:raw="The automatically generated &lt;see cref=&quot;T:System.Data.Common.DbCommand&quot; /&gt; object required to perform updates.">自动生成的、执行更新所需的 <see cref="T:System.Data.Common.DbCommand" /> 对象。</returns>
    </member>
    <member name="M:System.Data.Common.DbCommandBuilder.GetUpdateCommand(System.Boolean)">
      <summary vsli:raw="Gets the automatically generated &lt;see cref=&quot;T:System.Data.Common.DbCommand&quot; /&gt; object required to perform updates at the data source, optionally using columns for parameter names.">获取对数据源执行更新操作所必需的自动生成的 <see cref="T:System.Data.Common.DbCommand" /> 对象，可选择使用列作为参数名。</summary>
      <param name="useColumnsForParameterNames" vsli:raw="If &lt;see langword=&quot;true&quot; /&gt;, generate parameter names matching column names, if possible. If &lt;see langword=&quot;false&quot; /&gt;, generate &lt;c&gt;@p1&lt;/c&gt;, &lt;c&gt;@p2&lt;/c&gt;, and so on.">如果为 <see langword="true" />，则生成与列名匹配的参数名（如果可能）。 如果为 <see langword="false" />，则生成 <c>@p1</c>、<c>@p2</c>，以此类推。</param>
      <returns vsli:raw="The automatically generated &lt;see cref=&quot;T:System.Data.Common.DbCommand&quot; /&gt; object required to perform updates.">自动生成的、执行更新所需的 <see cref="T:System.Data.Common.DbCommand" /> 对象。</returns>
    </member>
    <member name="M:System.Data.Common.DbCommandBuilder.InitializeCommand(System.Data.Common.DbCommand)">
      <summary vsli:raw="Resets the &lt;see cref=&quot;P:System.Data.Common.DbCommand.CommandTimeout&quot; /&gt;, &lt;see cref=&quot;P:System.Data.Common.DbCommand.Transaction&quot; /&gt;, &lt;see cref=&quot;P:System.Data.Common.DbCommand.CommandType&quot; /&gt;, and &lt;see cref=&quot;T:System.Data.UpdateRowSource&quot; /&gt; properties on the &lt;see cref=&quot;T:System.Data.Common.DbCommand&quot; /&gt;.">重置 <see cref="P:System.Data.Common.DbCommand.CommandTimeout" /> 上的 <see cref="P:System.Data.Common.DbCommand.Transaction" />、<see cref="P:System.Data.Common.DbCommand.CommandType" />、<see cref="T:System.Data.UpdateRowSource" /> 和 <see cref="T:System.Data.Common.DbCommand" /> 属性。</summary>
      <param name="command" vsli:raw="The &lt;see cref=&quot;T:System.Data.Common.DbCommand&quot; /&gt; to be used by the command builder for the corresponding insert, update, or delete command.">由命令生成器用于对应的 insert、update 或 delete 命令的 <see cref="T:System.Data.Common.DbCommand" />。</param>
      <returns vsli:raw="A &lt;see cref=&quot;T:System.Data.Common.DbCommand&quot; /&gt; instance to use for each insert, update, or delete operation. Passing a null value allows the &lt;see cref=&quot;M:System.Data.Common.DbCommandBuilder.InitializeCommand(System.Data.Common.DbCommand)&quot; /&gt; method to create a &lt;see cref=&quot;T:System.Data.Common.DbCommand&quot; /&gt; object based on the Select command associated with the &lt;see cref=&quot;T:System.Data.Common.DbCommandBuilder&quot; /&gt;.">用于每个 insert、update 或 delete 操作的 <see cref="T:System.Data.Common.DbCommand" /> 实例。 传入一个 null 值将允许 <see cref="M:System.Data.Common.DbCommandBuilder.InitializeCommand(System.Data.Common.DbCommand)" /> 方法根据与 <see cref="T:System.Data.Common.DbCommand" /> 关联的 Select 命令创建 <see cref="T:System.Data.Common.DbCommandBuilder" /> 对象。</returns>
    </member>
    <member name="M:System.Data.Common.DbCommandBuilder.QuoteIdentifier(System.String)">
      <summary vsli:raw="Given an unquoted identifier in the correct catalog case, returns the correct quoted form of that identifier, including properly escaping any embedded quotes in the identifier.">以正确的目录大小写给定一个不带引号的标识符，返回该标识符的带引号的正确形式，包括正确转义该标识符中嵌入的任何引号。</summary>
      <param name="unquotedIdentifier" vsli:raw="The original unquoted identifier.">不带引号的原始标识符。</param>
      <returns vsli:raw="The quoted version of the identifier. Embedded quotes within the identifier are properly escaped.">带引号的标识符版本。 该标识符中嵌入的引号已正确转义。</returns>
    </member>
    <member name="M:System.Data.Common.DbCommandBuilder.RefreshSchema">
      <summary vsli:raw="Clears the commands associated with this &lt;see cref=&quot;T:System.Data.Common.DbCommandBuilder&quot; /&gt;.">清除与此 <see cref="T:System.Data.Common.DbCommandBuilder" /> 关联的命令。</summary>
    </member>
    <member name="M:System.Data.Common.DbCommandBuilder.RowUpdatingHandler(System.Data.Common.RowUpdatingEventArgs)">
      <summary vsli:raw="Adds an event handler for the &lt;see cref=&quot;E:System.Data.OleDb.OleDbDataAdapter.RowUpdating&quot; /&gt; event.">添加 <see cref="E:System.Data.OleDb.OleDbDataAdapter.RowUpdating" /> 事件的事件处理程序。</summary>
      <param name="rowUpdatingEvent" vsli:raw="A &lt;see cref=&quot;T:System.Data.Common.RowUpdatingEventArgs&quot; /&gt; instance containing information about the event.">包含关于该事件的信息的 <see cref="T:System.Data.Common.RowUpdatingEventArgs" /> 实例。</param>
    </member>
    <member name="M:System.Data.Common.DbCommandBuilder.SetRowUpdatingHandler(System.Data.Common.DbDataAdapter)">
      <summary vsli:raw="Registers the &lt;see cref=&quot;T:System.Data.Common.DbCommandBuilder&quot; /&gt; to handle the &lt;see cref=&quot;E:System.Data.OleDb.OleDbDataAdapter.RowUpdating&quot; /&gt; event for a &lt;see cref=&quot;T:System.Data.Common.DbDataAdapter&quot; /&gt;.">注册 <see cref="T:System.Data.Common.DbCommandBuilder" /> 以处理 <see cref="E:System.Data.OleDb.OleDbDataAdapter.RowUpdating" /> 的 <see cref="T:System.Data.Common.DbDataAdapter" /> 事件。</summary>
      <param name="adapter" vsli:raw="The &lt;see cref=&quot;T:System.Data.Common.DbDataAdapter&quot; /&gt; to be used for the update.">要用于更新的 <see cref="T:System.Data.Common.DbDataAdapter" />。</param>
    </member>
    <member name="M:System.Data.Common.DbCommandBuilder.UnquoteIdentifier(System.String)">
      <summary vsli:raw="Given a quoted identifier, returns the correct unquoted form of that identifier, including properly un-escaping any embedded quotes in the identifier.">给定一个带引号的标识符，返回该标识符的不带引号的正确形式，包括正确地取消转义该标识符中嵌入的任何引号。</summary>
      <param name="quotedIdentifier" vsli:raw="The identifier that will have its embedded quotes removed.">其嵌入引号将被移除的标识符。</param>
      <returns vsli:raw="The unquoted identifier, with embedded quotes properly un-escaped.">不带引号的标识符，其中嵌入的引号已正确进行取消转义。</returns>
    </member>
    <member name="P:System.Data.Common.DbCommandBuilder.CatalogLocation">
      <summary vsli:raw="Gets or sets the &lt;see cref=&quot;T:System.Data.Common.CatalogLocation&quot; /&gt; for an instance of the &lt;see cref=&quot;T:System.Data.Common.DbCommandBuilder&quot; /&gt; class.">获取或设置 <see cref="T:System.Data.Common.DbCommandBuilder" /> 类的实例的 <see cref="T:System.Data.Common.CatalogLocation" />。</summary>
      <returns vsli:raw="A &lt;see cref=&quot;T:System.Data.Common.CatalogLocation&quot; /&gt; object.">
        <see cref="T:System.Data.Common.CatalogLocation" /> 对象。</returns>
    </member>
    <member name="P:System.Data.Common.DbCommandBuilder.CatalogSeparator">
      <summary vsli:raw="Gets or sets a string used as the catalog separator for an instance of the &lt;see cref=&quot;T:System.Data.Common.DbCommandBuilder&quot; /&gt; class.">获取或设置一个字符串，该字符串用作 <see cref="T:System.Data.Common.DbCommandBuilder" /> 类的实例的目录分隔符。</summary>
      <returns vsli:raw="A string indicating the catalog separator for use with an instance of the &lt;see cref=&quot;T:System.Data.Common.DbCommandBuilder&quot; /&gt; class.">一个字符串，指示用于 <see cref="T:System.Data.Common.DbCommandBuilder" /> 类的实例的目录分隔符。</returns>
    </member>
    <member name="P:System.Data.Common.DbCommandBuilder.ConflictOption">
      <summary vsli:raw="Specifies which &lt;see cref=&quot;T:System.Data.ConflictOption&quot; /&gt; is to be used by the &lt;see cref=&quot;T:System.Data.Common.DbCommandBuilder&quot; /&gt;.">指定哪个 <see cref="T:System.Data.ConflictOption" /> 将由 <see cref="T:System.Data.Common.DbCommandBuilder" /> 使用。</summary>
      <returns vsli:raw="Returns one of the &lt;see cref=&quot;T:System.Data.ConflictOption&quot; /&gt; values describing the behavior of this &lt;see cref=&quot;T:System.Data.Common.DbCommandBuilder&quot; /&gt;.">返回描述此 <see cref="T:System.Data.ConflictOption" /> 行为的 <see cref="T:System.Data.Common.DbCommandBuilder" /> 值之一。</returns>
    </member>
    <member name="P:System.Data.Common.DbCommandBuilder.DataAdapter">
      <summary vsli:raw="Gets or sets a &lt;see cref=&quot;T:System.Data.Common.DbDataAdapter&quot; /&gt; object for which Transact-SQL statements are automatically generated.">获取或设置自动为其生成 Transact-SQL 语句的一个 <see cref="T:System.Data.Common.DbDataAdapter" /> 对象。</summary>
      <returns vsli:raw="A &lt;see cref=&quot;T:System.Data.Common.DbDataAdapter&quot; /&gt; object.">
        <see cref="T:System.Data.Common.DbDataAdapter" /> 对象。</returns>
    </member>
    <member name="P:System.Data.Common.DbCommandBuilder.QuotePrefix">
      <summary vsli:raw="Gets or sets the beginning character or characters to use when specifying database objects (for example, tables or columns) whose names contain characters such as spaces or reserved tokens.">获取或设置指定其名称包含空格或保留标记等字符的数据库对象（例如，表或列）时使用的开始字符。</summary>
      <exception cref="T:System.InvalidOperationException" vsli:raw="This property cannot be changed after an insert, update, or delete command has been generated.">当生成 Insert、Update 或 Delete 命令后，不能更改此属性。</exception>
      <returns vsli:raw="The beginning character or characters to use. The default is an empty string.">要使用的起始字符。 默认值为一个空字符串。</returns>
    </member>
    <member name="P:System.Data.Common.DbCommandBuilder.QuoteSuffix">
      <summary vsli:raw="Gets or sets the ending character or characters to use when specifying database objects (for example, tables or columns) whose names contain characters such as spaces or reserved tokens.">获取或设置一个或多个结束字符，供指定其名称中包含空格或保留标记等字符的数据库对象（例如，表或列）时使用。</summary>
      <returns vsli:raw="The ending character or characters to use. The default is an empty string.">要使用的结束字符。 默认值为一个空字符串。</returns>
    </member>
    <member name="P:System.Data.Common.DbCommandBuilder.SchemaSeparator">
      <summary vsli:raw="Gets or sets the character to be used for the separator between the schema identifier and any other identifiers.">获取或设置要用作架构标识符和任何其他标识符之间的分隔符的字符。</summary>
      <returns vsli:raw="The character to be used as the schema separator.">要用作架构分隔符的字符。</returns>
    </member>
    <member name="P:System.Data.Common.DbCommandBuilder.SetAllValues">
      <summary vsli:raw="Specifies whether all column values in an update statement are included or only changed ones.">指定 update 语句中是包含所有列值还是仅包含更改的列值。</summary>
      <returns vsli:raw="&lt;see langword=&quot;true&quot; /&gt; if the UPDATE statement generated by the &lt;see cref=&quot;T:System.Data.Common.DbCommandBuilder&quot; /&gt; includes all columns; &lt;see langword=&quot;false&quot; /&gt; if it includes only changed columns.">如果 <see cref="T:System.Data.Common.DbCommandBuilder" /> 生成的 UPDATE 语句包含所有列，则为 <see langword="true" />；如果它仅包含更改的列，则为 <see langword="false" />。</returns>
    </member>
    <member name="T:System.Data.Common.DbConnection">
      <summary vsli:raw="Defines the core behavior of database connections and provides a base class for database-specific connections.">定义数据库连接的核心行为，并为数据库专用连接提供基类。</summary>
    </member>
    <member name="E:System.Data.Common.DbConnection.StateChange">
      <summary vsli:raw="Occurs when the state of the connection changes.">当连接状态改变时发生。</summary>
    </member>
    <member name="M:System.Data.Common.DbConnection.#ctor">
      <summary vsli:raw="Initializes a new instance of the &lt;see cref=&quot;T:System.Data.Common.DbConnection&quot; /&gt; class.">初始化 <see cref="T:System.Data.Common.DbConnection" /> 类的新实例。</summary>
    </member>
    <member name="M:System.Data.Common.DbConnection.BeginDbTransaction(System.Data.IsolationLevel)">
      <summary vsli:raw="When overridden in a derived class, starts a database transaction.">在派生类中重写时，启动数据库事务。</summary>
      <param name="isolationLevel" vsli:raw="One of the enumeration values that specifies the isolation level for the transaction to use.">枚举值之一，指定要使用的事务的隔离级别。</param>
      <returns vsli:raw="An object representing the new transaction.">表示新事务的对象。</returns>
    </member>
    <member name="M:System.Data.Common.DbConnection.BeginDbTransactionAsync(System.Data.IsolationLevel,System.Threading.CancellationToken)">
      <summary vsli:raw="Asynchronously starts a database transaction.">异步启动数据库事务。</summary>
      <param name="isolationLevel" vsli:raw="One of the enumeration values that specifies the isolation level for the transaction to use.">枚举值之一，指定要使用的事务的隔离级别。</param>
      <param name="cancellationToken" vsli:raw="A token to cancel the asynchronous operation.">用于取消异步操作的令牌。</param>
      <returns vsli:raw="A task whose &lt;see cref=&quot;P:System.Threading.Tasks.Task`1.Result&quot; /&gt; property is an object representing the new transaction.">一个任务，其 <see cref="P:System.Threading.Tasks.Task`1.Result" /> 属性为表示新事物的对象。</returns>
    </member>
    <member name="M:System.Data.Common.DbConnection.BeginTransaction">
      <summary vsli:raw="Starts a database transaction.">开始数据库事务。</summary>
      <returns vsli:raw="An object representing the new transaction.">表示新事务的对象。</returns>
    </member>
    <member name="M:System.Data.Common.DbConnection.BeginTransaction(System.Data.IsolationLevel)">
      <summary vsli:raw="Starts a database transaction with the specified isolation level.">以指定的隔离级别启动数据库事务。</summary>
      <param name="isolationLevel" vsli:raw="One of the enumeration values that specifies the isolation level for the transaction to use.">枚举值之一，指定要使用的事务的隔离级别。</param>
      <returns vsli:raw="An object representing the new transaction.">表示新事务的对象。</returns>
    </member>
    <member name="M:System.Data.Common.DbConnection.BeginTransactionAsync(System.Data.IsolationLevel,System.Threading.CancellationToken)">
      <summary vsli:raw="Asynchronously begins a database transaction.">异步开始数据库事务。</summary>
      <param name="isolationLevel" vsli:raw="One of the enumeration values that specifies the isolation level for the transaction to use.">枚举值之一，指定要使用的事务的隔离级别。</param>
      <param name="cancellationToken" vsli:raw="An optional token to cancel the asynchronous operation. The default value is &lt;see cref=&quot;P:System.Threading.CancellationToken.None&quot; /&gt;.">用于取消异步操作的可选令牌。 默认值是 <see cref="P:System.Threading.CancellationToken.None" />。</param>
      <returns vsli:raw="A task whose &lt;see cref=&quot;P:System.Threading.Tasks.Task`1.Result&quot; /&gt; property is an object representing the new transaction.">一个任务，其 <see cref="P:System.Threading.Tasks.Task`1.Result" /> 属性为表示新事物的对象。</returns>
    </member>
    <member name="M:System.Data.Common.DbConnection.BeginTransactionAsync(System.Threading.CancellationToken)">
      <summary vsli:raw="Asynchronously begins a database transaction.">异步开始数据库事务。</summary>
      <param name="cancellationToken" vsli:raw="An optional token to cancel the asynchronous operation. The default value is &lt;see cref=&quot;P:System.Threading.CancellationToken.None&quot; /&gt;.">用于取消异步操作的可选令牌。 默认值是 <see cref="P:System.Threading.CancellationToken.None" />。</param>
      <returns vsli:raw="A task whose &lt;see cref=&quot;P:System.Threading.Tasks.Task`1.Result&quot; /&gt; property is an object representing the new transaction.">一个任务，其 <see cref="P:System.Threading.Tasks.Task`1.Result" /> 属性为表示新事物的对象。</returns>
    </member>
    <member name="M:System.Data.Common.DbConnection.ChangeDatabase(System.String)">
      <summary vsli:raw="When overridden in a derived class, changes the current database for an open connection.">当在派生类中重写时，更改打开的连接的当前数据库。</summary>
      <param name="databaseName" vsli:raw="The name of the database for the connection to use.">要使用的连接的数据库名称。</param>
    </member>
    <member name="M:System.Data.Common.DbConnection.ChangeDatabaseAsync(System.String,System.Threading.CancellationToken)">
      <summary vsli:raw="Asynchronously changes the current database for an open connection.">为打开的连接对象异步更改当前数据库。</summary>
      <param name="databaseName" vsli:raw="The name of the database for the connection to use.">要使用的连接的数据库名称。</param>
      <param name="cancellationToken" vsli:raw="An optional token to cancel the asynchronous operation. The default value is &lt;see cref=&quot;P:System.Threading.CancellationToken.None&quot; /&gt;.">用于取消异步操作的可选令牌。 默认值是 <see cref="P:System.Threading.CancellationToken.None" />。</param>
      <returns vsli:raw="A task representing the asynchronous operation.">表示异步操作的任务。</returns>
    </member>
    <member name="M:System.Data.Common.DbConnection.Close">
      <summary vsli:raw="When overridden in a derived class, closes the connection to the database.">在派生类中重写时，关闭与数据库之间的连接。</summary>
    </member>
    <member name="M:System.Data.Common.DbConnection.CloseAsync">
      <summary vsli:raw="Asynchronously closes the connection to the database.">异步关闭与数据库之间的连接。</summary>
      <returns vsli:raw="A &lt;see cref=&quot;T:System.Threading.Tasks.Task&quot; /&gt; representing the asynchronous operation.">表示异步操作的 <see cref="T:System.Threading.Tasks.Task" />。</returns>
    </member>
    <member name="M:System.Data.Common.DbConnection.CreateCommand">
      <summary vsli:raw="Creates and returns a &lt;see cref=&quot;T:System.Data.Common.DbCommand&quot; /&gt; object associated with the current connection.">创建并返回与当前连接关联的 <see cref="T:System.Data.Common.DbCommand" /> 对象。</summary>
      <returns vsli:raw="A &lt;see cref=&quot;T:System.Data.Common.DbCommand&quot; /&gt; object.">
        <see cref="T:System.Data.Common.DbCommand" /> 对象。</returns>
    </member>
    <member name="M:System.Data.Common.DbConnection.CreateDbCommand">
      <summary vsli:raw="When overridden in a derived class, creates and returns a &lt;see cref=&quot;T:System.Data.Common.DbCommand&quot; /&gt; object associated with the current connection.">在派生类中重写时，创建并返回与当前连接关联的 <see cref="T:System.Data.Common.DbCommand" /> 对象。</summary>
      <returns vsli:raw="A &lt;see cref=&quot;T:System.Data.Common.DbCommand&quot; /&gt; object.">
        <see cref="T:System.Data.Common.DbCommand" /> 对象。</returns>
    </member>
    <member name="M:System.Data.Common.DbConnection.DisposeAsync">
      <summary vsli:raw="Asynchronously diposes the connection object.">异步处置连接对象。</summary>
      <returns vsli:raw="A &lt;see cref=&quot;T:System.Threading.Tasks.ValueTask&quot; /&gt; representing the asynchronous operation.">表示异步操作的 <see cref="T:System.Threading.Tasks.ValueTask" />。</returns>
    </member>
    <member name="M:System.Data.Common.DbConnection.EnlistTransaction(System.Transactions.Transaction)">
      <summary vsli:raw="Enlists in the specified transaction.">在指定事务中登记。</summary>
      <param name="transaction" vsli:raw="A reference to an existing &lt;see cref=&quot;T:System.Transactions.Transaction&quot; /&gt; in which to enlist.">对用于登记的现有 <see cref="T:System.Transactions.Transaction" /> 的引用。</param>
    </member>
    <member name="M:System.Data.Common.DbConnection.GetSchema">
      <summary vsli:raw="Returns schema information for the data source of this &lt;see cref=&quot;T:System.Data.Common.DbConnection&quot; /&gt;.">返回此 <see cref="T:System.Data.Common.DbConnection" /> 的数据源的架构信息。</summary>
      <returns vsli:raw="A &lt;see cref=&quot;T:System.Data.DataTable&quot; /&gt; that contains schema information.">一个包含架构信息的 <see cref="T:System.Data.DataTable" />。</returns>
    </member>
    <member name="M:System.Data.Common.DbConnection.GetSchema(System.String)">
      <summary vsli:raw="Returns schema information for the data source of this &lt;see cref=&quot;T:System.Data.Common.DbConnection&quot; /&gt; using the specified string for the schema name.">通过使用架构名称的指定字符串，返回此 <see cref="T:System.Data.Common.DbConnection" /> 的数据源的架构信息。</summary>
      <param name="collectionName" vsli:raw="Specifies the name of the schema to return.">指定要返回的架构的名称。</param>
      <exception cref="T:System.ArgumentException" vsli:raw="&lt;paramref name=&quot;collectionName&quot; /&gt; is specified as null.">将 <paramref name="collectionName" /> 指定为 null。</exception>
      <returns vsli:raw="A &lt;see cref=&quot;T:System.Data.DataTable&quot; /&gt; that contains schema information.">一个包含架构信息的 <see cref="T:System.Data.DataTable" />。</returns>
    </member>
    <member name="M:System.Data.Common.DbConnection.GetSchema(System.String,System.String[])">
      <summary vsli:raw="Returns schema information for the data source of this &lt;see cref=&quot;T:System.Data.Common.DbConnection&quot; /&gt; using the specified string for the schema name and the specified string array for the restriction values.">通过使用指定字符串作为架构名称，指定字符串数组作为限制值，返回此 <see cref="T:System.Data.Common.DbConnection" /> 的数据源的架构信息。</summary>
      <param name="collectionName" vsli:raw="Specifies the name of the schema to return.">指定要返回的架构的名称。</param>
      <param name="restrictionValues" vsli:raw="Specifies a set of restriction values for the requested schema.">为请求的架构指定一组限制值。</param>
      <exception cref="T:System.ArgumentException" vsli:raw="&lt;paramref name=&quot;collectionName&quot; /&gt; is specified as null.">将 <paramref name="collectionName" /> 指定为 null。</exception>
      <returns vsli:raw="A &lt;see cref=&quot;T:System.Data.DataTable&quot; /&gt; that contains schema information.">一个包含架构信息的 <see cref="T:System.Data.DataTable" />。</returns>
    </member>
    <member name="M:System.Data.Common.DbConnection.GetSchemaAsync(System.String,System.String[],System.Threading.CancellationToken)">
      <summary vsli:raw="This is the asynchronous version of &lt;see cref=&quot;M:System.Data.Common.DbConnection.GetSchema(System.String,System.String[])&quot; /&gt;.&#xA;            Providers should override with an appropriate implementation.&#xA;            The &lt;paramref name=&quot;cancellationToken&quot; /&gt; can optionally be honored.&#xA;            The default implementation invokes the synchronous &lt;see cref=&quot;M:System.Data.Common.DbConnection.GetSchema(System.String,System.String[])&quot; /&gt; call and returns a completed task.&#xA;            The default implementation will return a cancelled task if passed an already cancelled &lt;paramref name=&quot;cancellationToken&quot; /&gt;.&#xA;            Exceptions thrown by &lt;see cref=&quot;M:System.Data.Common.DbConnection.GetSchema(System.String,System.String[])&quot; /&gt; will be communicated via the returned Task Exception property.">这是 <see cref="M:System.Data.Common.DbConnection.GetSchema(System.String,System.String[])" /> 的异步版本。
提供程序应使用合适的实现进行重写。
可以选择接受 <paramref name="cancellationToken" />。
默认实现调用同步 <see cref="M:System.Data.Common.DbConnection.GetSchema(System.String,System.String[])" /> 调用并返回已完成任务。
如果传递到已取消 <paramref name="cancellationToken" />，则默认实现将返回已取消的任务。
<see cref="M:System.Data.Common.DbConnection.GetSchema(System.String,System.String[])" /> 引发的异常将通过任务异常属性传递。</summary>
      <param name="collectionName" vsli:raw="Specifies the name of the schema to return.">指定要返回的架构的名称。</param>
      <param name="restrictionValues" vsli:raw="Specifies a set of restriction values for the requested schema.">为请求的架构指定一组限制值。</param>
      <param name="cancellationToken" vsli:raw="The cancellation instruction.">取消指令。</param>
      <returns vsli:raw="A task representing the asynchronous operation.">表示异步操作的任务。</returns>
    </member>
    <member name="M:System.Data.Common.DbConnection.GetSchemaAsync(System.String,System.Threading.CancellationToken)">
      <summary vsli:raw="This is the asynchronous version of &lt;see cref=&quot;M:System.Data.Common.DbConnection.GetSchema(System.String)&quot; /&gt;.&#xA;            Providers should override with an appropriate implementation.&#xA;            The &lt;paramref name=&quot;cancellationToken&quot; /&gt; can optionally be honored.&#xA;            The default implementation invokes the synchronous &lt;see cref=&quot;M:System.Data.Common.DbConnection.GetSchema(System.String)&quot; /&gt; call and returns a completed task.&#xA;            The default implementation will return a cancelled task if passed an already cancelled &lt;paramref name=&quot;cancellationToken&quot; /&gt;.&#xA;            Exceptions thrown by &lt;see cref=&quot;M:System.Data.Common.DbConnection.GetSchema(System.String)&quot; /&gt; will be communicated via the returned Task Exception property.">这是 <see cref="M:System.Data.Common.DbConnection.GetSchema(System.String)" /> 的异步版本。
提供程序应使用合适的实现进行重写。
可以选择接受 <paramref name="cancellationToken" />。
默认实现调用同步 <see cref="M:System.Data.Common.DbConnection.GetSchema(System.String)" /> 调用并返回已完成任务。
如果传递到已取消 <paramref name="cancellationToken" />，则默认实现将返回已取消的任务。
<see cref="M:System.Data.Common.DbConnection.GetSchema(System.String)" /> 引发的异常将通过任务异常属性传递。</summary>
      <param name="collectionName" vsli:raw="Specifies the name of the schema to return.">指定要返回的架构的名称。</param>
      <param name="cancellationToken" vsli:raw="The cancellation instruction.">取消指令。</param>
      <returns vsli:raw="A task representing the asynchronous operation.">表示异步操作的任务。</returns>
    </member>
    <member name="M:System.Data.Common.DbConnection.GetSchemaAsync(System.Threading.CancellationToken)">
      <summary vsli:raw="This is an asynchronous version of &lt;see cref=&quot;M:System.Data.Common.DbConnection.GetSchema&quot; /&gt;.&#xA;            Providers should override with an appropriate implementation.&#xA;            The &lt;paramref name=&quot;cancellationToken&quot; /&gt; can optionally be honored.&#xA;            The default implementation invokes the synchronous &lt;see cref=&quot;M:System.Data.Common.DbConnection.GetSchema&quot; /&gt; call and returns a completed task.&#xA;            The default implementation will return a cancelled task if passed an already cancelled &lt;paramref name=&quot;cancellationToken&quot; /&gt;.&#xA;            Exceptions thrown by &lt;see cref=&quot;M:System.Data.Common.DbConnection.GetSchema&quot; /&gt; will be communicated via the returned Task Exception property.">这是 <see cref="M:System.Data.Common.DbConnection.GetSchema" /> 的异步版本。
提供程序应使用合适的实现进行重写。
可以选择接受 <paramref name="cancellationToken" />。
默认实现调用同步 <see cref="M:System.Data.Common.DbConnection.GetSchema" /> 调用并返回已完成任务。
如果传递到已取消 <paramref name="cancellationToken" />，则默认实现将返回已取消的任务。
<see cref="M:System.Data.Common.DbConnection.GetSchema" /> 引发的异常将通过任务异常属性传递。</summary>
      <param name="cancellationToken" vsli:raw="The cancellation instruction.">取消指令。</param>
      <returns vsli:raw="A task representing the asynchronous operation.">表示异步操作的任务。</returns>
    </member>
    <member name="M:System.Data.Common.DbConnection.OnStateChange(System.Data.StateChangeEventArgs)">
      <summary vsli:raw="Raises the &lt;see cref=&quot;E:System.Data.Common.DbConnection.StateChange&quot; /&gt; event.">引发 <see cref="E:System.Data.Common.DbConnection.StateChange" /> 事件。</summary>
      <param name="stateChange" vsli:raw="A &lt;see cref=&quot;T:System.Data.StateChangeEventArgs&quot; /&gt; that contains the event data.">包含事件数据的 <see cref="T:System.Data.StateChangeEventArgs" />。</param>
    </member>
    <member name="M:System.Data.Common.DbConnection.Open">
      <summary vsli:raw="When overridden in a derived class, opens a database connection with the settings specified by the &lt;see cref=&quot;P:System.Data.Common.DbConnection.ConnectionString&quot; /&gt;.">在派生类中重写时，打开其设置由 <see cref="P:System.Data.Common.DbConnection.ConnectionString" /> 指定的数据库连接。</summary>
    </member>
    <member name="M:System.Data.Common.DbConnection.OpenAsync">
      <summary vsli:raw="An asynchronous version of &lt;see cref=&quot;M:System.Data.Common.DbConnection.Open&quot; /&gt;, which opens a database connection with the settings specified by the &lt;see cref=&quot;P:System.Data.Common.DbConnection.ConnectionString&quot; /&gt;. This method invokes the virtual method &lt;see cref=&quot;M:System.Data.Common.DbConnection.OpenAsync(System.Threading.CancellationToken)&quot; /&gt; with CancellationToken.None.">
        <see cref="M:System.Data.Common.DbConnection.Open" />的异步版本，打开由 <see cref="P:System.Data.Common.DbConnection.ConnectionString" />指定的设置的数据库连接。 此方法通过 CancellationToken.None 调用虚拟方法 <see cref="M:System.Data.Common.DbConnection.OpenAsync(System.Threading.CancellationToken)" />。</summary>
      <returns vsli:raw="A task representing the asynchronous operation.">表示异步操作的任务。</returns>
    </member>
    <member name="M:System.Data.Common.DbConnection.OpenAsync(System.Threading.CancellationToken)">
      <summary vsli:raw="This is the asynchronous version of &lt;see cref=&quot;M:System.Data.Common.DbConnection.Open&quot; /&gt;. Providers should override with an appropriate implementation. The cancellation token can optionally be honored.  &#xA;  &#xA; The default implementation invokes the synchronous &lt;see cref=&quot;M:System.Data.Common.DbConnection.Open&quot; /&gt; call and returns a completed task. The default implementation will return a cancelled task if passed an already cancelled cancellationToken. Exceptions thrown by Open will be communicated via the returned Task Exception property.  &#xA;  &#xA; Do not invoke other methods and properties of the &lt;see langword=&quot;DbConnection&quot; /&gt; object until the returned Task is complete.">这是 <see cref="M:System.Data.Common.DbConnection.Open" /> 的异步版本。 提供程序应使用合适的实现进行重写。 可选择性接受取消标记。  
  
默认实现调用同步 <see cref="M:System.Data.Common.DbConnection.Open" /> 调用并返回已完成任务。 如果传递到已取消的取消标记，则默认实现将返回已取消的 cancellationToken。 Open 引发的异常将通过返回的任务异常属性传递。  
  
在返回的任务完成前，不要调用 <see langword="DbConnection" /> 对象的其他方法和属性。</summary>
      <param name="cancellationToken" vsli:raw="The cancellation instruction.">取消指令。</param>
      <returns vsli:raw="A task representing the asynchronous operation.">表示异步操作的任务。</returns>
    </member>
    <member name="M:System.Data.Common.DbConnection.System#Data#IDbConnection#BeginTransaction">
      <summary vsli:raw="Begins a database transaction.">开始一项数据库事务。</summary>
      <returns vsli:raw="An object that represents the new transaction.">一个表示新事务的对象。</returns>
    </member>
    <member name="M:System.Data.Common.DbConnection.System#Data#IDbConnection#BeginTransaction(System.Data.IsolationLevel)">
      <summary vsli:raw="Begins a database transaction with the specified isolation level.">以指定的隔离级别启动数据库事务。</summary>
      <param name="isolationLevel" vsli:raw="One of the enumeration values that specifies the isolation level for the transaction to use.">枚举值之一，指定要使用的事务的隔离级别。</param>
      <returns vsli:raw="An object that represents the new transaction.">一个表示新事务的对象。</returns>
    </member>
    <member name="M:System.Data.Common.DbConnection.System#Data#IDbConnection#CreateCommand">
      <summary vsli:raw="Creates and returns a &lt;see cref=&quot;T:System.Data.Common.DbCommand&quot; /&gt; object that is associated with the current connection.">创建并返回与当前连接关联的 <see cref="T:System.Data.Common.DbCommand" /> 对象。</summary>
      <returns vsli:raw="A &lt;see cref=&quot;T:System.Data.Common.DbCommand&quot; /&gt; object that is associated with the connection.">与连接关联的 <see cref="T:System.Data.Common.DbCommand" /> 对象。</returns>
    </member>
    <member name="P:System.Data.Common.DbConnection.ConnectionString">
      <summary vsli:raw="When overridden in a derived class, gets or sets the string used to open the connection.">在派生类中重写时，获取或设置用于打开连接的字符串。</summary>
      <returns vsli:raw="The connection string used to establish the initial connection. The exact contents of the connection string depend on the specific data source for this connection. The default value is an empty string.">用来建立初始连接的连接字符串。 该连接字符串的确切内容取决于此连接的特定数据源。 默认值为一个空字符串。</returns>
    </member>
    <member name="P:System.Data.Common.DbConnection.ConnectionTimeout">
      <summary vsli:raw="Gets the time to wait (in seconds) while establishing a connection before terminating the attempt and generating an error.">获取在建立连接时终止尝试并生成错误之前所等待的时间（以秒为单位）。</summary>
      <returns vsli:raw="The time (in seconds) to wait for a connection to open. The default value is determined by the specific type of connection that you are using.">等待连接打开所需的时间（以秒为单位）。 默认值是由您正在使用的连接的特定类型确定的。</returns>
    </member>
    <member name="P:System.Data.Common.DbConnection.Database">
      <summary vsli:raw="When overridden in a derived class, gets the name of the current database after a connection is opened, or the database name specified in the connection string before the connection is opened.">在派生类中重写时，在连接打开之后获取当前数据库的名称，或者在连接打开之前获取连接字符串中指定的数据库名。</summary>
      <returns vsli:raw="The name of the current database or the name of the database to be used after a connection is opened. The default value is an empty string.">当前数据库的名称或打开连接后要使用的数据库的名称。 默认值为一个空字符串。</returns>
    </member>
    <member name="P:System.Data.Common.DbConnection.DataSource">
      <summary vsli:raw="When overridden in a derived class, gets the name of the database server to which to connect.">在派生类中重写时，获取要连接的数据库服务器的名称。</summary>
      <returns vsli:raw="The name of the database server to which to connect. The default value is an empty string.">要连接的数据库服务器的名称。 默认值为一个空字符串。</returns>
    </member>
    <member name="P:System.Data.Common.DbConnection.DbProviderFactory">
      <summary vsli:raw="Gets the &lt;see cref=&quot;T:System.Data.Common.DbProviderFactory&quot; /&gt; for this &lt;see cref=&quot;T:System.Data.Common.DbConnection&quot; /&gt;.">获取此 <see cref="T:System.Data.Common.DbProviderFactory" /> 的 <see cref="T:System.Data.Common.DbConnection" />。</summary>
      <returns vsli:raw="A set of methods for creating instances of a provider's implementation of the data source classes.">一组方法的集合，这些方法用于创建提供程序对数据源类的实现的实例。</returns>
    </member>
    <member name="P:System.Data.Common.DbConnection.ServerVersion">
      <summary vsli:raw="When overridden in a derived class, gets a string that represents the version of the server to which the object is connected.">在派生类中重写时，获取表示对象所连接到的服务器的版本的字符串。</summary>
      <exception cref="T:System.InvalidOperationException" vsli:raw="&lt;see cref=&quot;P:System.Data.Common.DbConnection.ServerVersion&quot; /&gt; was called while the returned Task was not completed and the connection was not opened after a call to &lt;see cref=&quot;Overload:System.Data.Common.DbConnection.OpenAsync&quot; /&gt;.">当返回的任务未完成，且在调用 <see cref="Overload:System.Data.Common.DbConnection.OpenAsync" /> 后未打开连接时，调用了 <see cref="P:System.Data.Common.DbConnection.ServerVersion" />。</exception>
      <returns vsli:raw="The version of the database. The format of the string returned depends on the specific type of connection you are using.">数据库的版本。 返回的字符串的格式取决于您正在使用的连接的特定类型。</returns>
    </member>
    <member name="P:System.Data.Common.DbConnection.State">
      <summary vsli:raw="Gets a string that describes the state of the connection.">获取描述连接状态的字符串。</summary>
      <returns vsli:raw="The state of the connection. The format of the string returned depends on the specific type of connection you are using.">连接的状态。 返回的字符串的格式取决于您正在使用的连接的特定类型。</returns>
    </member>
    <member name="T:System.Data.Common.DbConnectionStringBuilder">
      <summary vsli:raw="Provides a base class for strongly typed connection string builders.">提供强类型化连接字符串生成器的基类。</summary>
    </member>
    <member name="M:System.Data.Common.DbConnectionStringBuilder.#ctor">
      <summary vsli:raw="Initializes a new instance of the &lt;see cref=&quot;T:System.Data.Common.DbConnectionStringBuilder&quot; /&gt; class.">初始化 <see cref="T:System.Data.Common.DbConnectionStringBuilder" /> 类的新实例。</summary>
    </member>
    <member name="M:System.Data.Common.DbConnectionStringBuilder.#ctor(System.Boolean)">
      <summary vsli:raw="Initializes a new instance of the &lt;see cref=&quot;T:System.Data.Common.DbConnectionStringBuilder&quot; /&gt; class, optionally using ODBC rules for quoting values.">初始化 <see cref="T:System.Data.Common.DbConnectionStringBuilder" /> 类的新实例，可以选择使用 ODBC 规则来引用值。</summary>
      <param name="useOdbcRules" vsli:raw="&lt;see langword=&quot;true&quot; /&gt; to use {} to delimit fields; &lt;see langword=&quot;false&quot; /&gt; to use quotation marks.">如果使用 {} 来分隔字段，则为 <see langword="true" />；如果使用引号，则为 <see langword="false" />。</param>
    </member>
    <member name="M:System.Data.Common.DbConnectionStringBuilder.Add(System.String,System.Object)">
      <summary vsli:raw="Adds an entry with the specified key and value into the &lt;see cref=&quot;T:System.Data.Common.DbConnectionStringBuilder&quot; /&gt;.">将带有指定键和值的条目添加到 <see cref="T:System.Data.Common.DbConnectionStringBuilder" /> 中。</summary>
      <param name="keyword" vsli:raw="The key to add to the &lt;see cref=&quot;T:System.Data.Common.DbConnectionStringBuilder&quot; /&gt;.">要添加到 <see cref="T:System.Data.Common.DbConnectionStringBuilder" /> 的键。</param>
      <param name="value" vsli:raw="The value for the specified key.">指定键的值。</param>
      <exception cref="T:System.ArgumentNullException" vsli:raw="&lt;paramref name=&quot;keyword&quot; /&gt; is a null reference (&lt;see langword=&quot;Nothing&quot; /&gt; in Visual Basic).">
        <paramref name="keyword" /> 为空引用（在 Visual Basic 中为 <see langword="Nothing" />）。</exception>
      <exception cref="T:System.NotSupportedException" vsli:raw="The &lt;see cref=&quot;T:System.Data.Common.DbConnectionStringBuilder&quot; /&gt; is read-only.&#xA;&#xA; -or-&#xA;&#xA; The &lt;see cref=&quot;T:System.Data.Common.DbConnectionStringBuilder&quot; /&gt; has a fixed size.">
        <see cref="T:System.Data.Common.DbConnectionStringBuilder" /> 为只读。

- 或 -

<see cref="T:System.Data.Common.DbConnectionStringBuilder" /> 具有固定的大小。</exception>
    </member>
    <member name="M:System.Data.Common.DbConnectionStringBuilder.AppendKeyValuePair(System.Text.StringBuilder,System.String,System.String)">
      <summary vsli:raw="Provides an efficient and safe way to append a key and value to an existing &lt;see cref=&quot;T:System.Text.StringBuilder&quot; /&gt; object.">提供了一种有效而安全的方法，用于将键和值附加到现有的 <see cref="T:System.Text.StringBuilder" /> 对象中。</summary>
      <param name="builder" vsli:raw="The &lt;see cref=&quot;T:System.Text.StringBuilder&quot; /&gt; to which to add the key/value pair.">要向其中添加键/值对的 <see cref="T:System.Text.StringBuilder" />。</param>
      <param name="keyword" vsli:raw="The key to be added.">要添加的键。</param>
      <param name="value" vsli:raw="The value for the supplied key.">提供的键的值。</param>
    </member>
    <member name="M:System.Data.Common.DbConnectionStringBuilder.AppendKeyValuePair(System.Text.StringBuilder,System.String,System.String,System.Boolean)">
      <summary vsli:raw="Provides an efficient and safe way to append a key and value to an existing &lt;see cref=&quot;T:System.Text.StringBuilder&quot; /&gt; object.">提供了一种有效而安全的方法，用于将键和值附加到现有的 <see cref="T:System.Text.StringBuilder" /> 对象中。</summary>
      <param name="builder" vsli:raw="The &lt;see cref=&quot;T:System.Text.StringBuilder&quot; /&gt; to which to add the key/value pair.">要向其中添加键/值对的 <see cref="T:System.Text.StringBuilder" />。</param>
      <param name="keyword" vsli:raw="The key to be added.">要添加的键。</param>
      <param name="value" vsli:raw="The value for the supplied key.">提供的键的值。</param>
      <param name="useOdbcRules" vsli:raw="&lt;see langword=&quot;true&quot; /&gt; to use {} to delimit fields, &lt;see langword=&quot;false&quot; /&gt; to use quotation marks.">如果使用 {} 来分隔字段，则为 <see langword="true" />；如果使用引号，则为 <see langword="false" />。</param>
    </member>
    <member name="M:System.Data.Common.DbConnectionStringBuilder.Clear">
      <summary vsli:raw="Clears the contents of the &lt;see cref=&quot;T:System.Data.Common.DbConnectionStringBuilder&quot; /&gt; instance.">清除 <see cref="T:System.Data.Common.DbConnectionStringBuilder" /> 实例的内容。</summary>
      <exception cref="T:System.NotSupportedException" vsli:raw="The &lt;see cref=&quot;T:System.Data.Common.DbConnectionStringBuilder&quot; /&gt; is read-only.">
        <see cref="T:System.Data.Common.DbConnectionStringBuilder" /> 为只读。</exception>
    </member>
    <member name="M:System.Data.Common.DbConnectionStringBuilder.ClearPropertyDescriptors">
      <summary vsli:raw="Clears the collection of &lt;see cref=&quot;T:System.ComponentModel.PropertyDescriptor&quot; /&gt; objects on the associated &lt;see cref=&quot;T:System.Data.Common.DbConnectionStringBuilder&quot; /&gt;.">清除关联的 <see cref="T:System.Data.Common.DbConnectionStringBuilder" /> 上的 <see cref="T:System.ComponentModel.PropertyDescriptor" /> 对象集合。</summary>
    </member>
    <member name="M:System.Data.Common.DbConnectionStringBuilder.ContainsKey(System.String)">
      <summary vsli:raw="Determines whether the &lt;see cref=&quot;T:System.Data.Common.DbConnectionStringBuilder&quot; /&gt; contains a specific key.">确定 <see cref="T:System.Data.Common.DbConnectionStringBuilder" /> 是否包含特定键。</summary>
      <param name="keyword" vsli:raw="The key to locate in the &lt;see cref=&quot;T:System.Data.Common.DbConnectionStringBuilder&quot; /&gt;.">要在 <see cref="T:System.Data.Common.DbConnectionStringBuilder" /> 中定位的键。</param>
      <exception cref="T:System.ArgumentNullException" vsli:raw="&lt;paramref name=&quot;keyword&quot; /&gt; is a null reference (&lt;see langword=&quot;Nothing&quot; /&gt; in Visual Basic).">
        <paramref name="keyword" /> 为空引用（在 Visual Basic 中为 <see langword="Nothing" />）。</exception>
      <returns vsli:raw="&lt;see langword=&quot;true&quot; /&gt; if the &lt;see cref=&quot;T:System.Data.Common.DbConnectionStringBuilder&quot; /&gt; contains an entry with the specified key; otherwise &lt;see langword=&quot;false&quot; /&gt;.">如果 <see cref="T:System.Data.Common.DbConnectionStringBuilder" /> 包含具有指定键的项，则为 <see langword="true" />；否则为 <see langword="false" />。</returns>
    </member>
    <member name="M:System.Data.Common.DbConnectionStringBuilder.EquivalentTo(System.Data.Common.DbConnectionStringBuilder)">
      <summary vsli:raw="Compares the connection information in this &lt;see cref=&quot;T:System.Data.Common.DbConnectionStringBuilder&quot; /&gt; object with the connection information in the supplied object.">将此 <see cref="T:System.Data.Common.DbConnectionStringBuilder" /> 对象中的连接信息与提供的对象中的连接信息进行比较。</summary>
      <param name="connectionStringBuilder" vsli:raw="The &lt;see cref=&quot;T:System.Data.Common.DbConnectionStringBuilder&quot; /&gt; to be compared with this &lt;see cref=&quot;T:System.Data.Common.DbConnectionStringBuilder&quot; /&gt; object.">要与此 <see cref="T:System.Data.Common.DbConnectionStringBuilder" /> 对象进行比较的 <see cref="T:System.Data.Common.DbConnectionStringBuilder" />。</param>
      <returns vsli:raw="&lt;see langword=&quot;true&quot; /&gt; if the connection information in both of the &lt;see cref=&quot;T:System.Data.Common.DbConnectionStringBuilder&quot; /&gt; objects causes an equivalent connection string; otherwise &lt;see langword=&quot;false&quot; /&gt;.">如果两个 <see cref="T:System.Data.Common.DbConnectionStringBuilder" /> 对象中的连接信息生成等效的连接字符串，则为 <see langword="true" />；否则为 <see langword="false" />。</returns>
    </member>
    <member name="M:System.Data.Common.DbConnectionStringBuilder.GetProperties(System.Collections.Hashtable)">
      <summary vsli:raw="Fills a supplied &lt;see cref=&quot;T:System.Collections.Hashtable&quot; /&gt; with information about all the properties of this &lt;see cref=&quot;T:System.Data.Common.DbConnectionStringBuilder&quot; /&gt;.">使用有关此 <see cref="T:System.Data.Common.DbConnectionStringBuilder" /> 的所有属性的信息，填充提供的 <see cref="T:System.Collections.Hashtable" />。</summary>
      <param name="propertyDescriptors" vsli:raw="The &lt;see cref=&quot;T:System.Collections.Hashtable&quot; /&gt; to be filled with information about this &lt;see cref=&quot;T:System.Data.Common.DbConnectionStringBuilder&quot; /&gt;.">使用有关此 <see cref="T:System.Data.Common.DbConnectionStringBuilder" /> 的信息填充的 <see cref="T:System.Collections.Hashtable" />。</param>
    </member>
    <member name="M:System.Data.Common.DbConnectionStringBuilder.Remove(System.String)">
      <summary vsli:raw="Removes the entry with the specified key from the &lt;see cref=&quot;T:System.Data.Common.DbConnectionStringBuilder&quot; /&gt; instance.">从 <see cref="T:System.Data.Common.DbConnectionStringBuilder" /> 实例中移除具有指定的键的项。</summary>
      <param name="keyword" vsli:raw="The key of the key/value pair to be removed from the connection string in this &lt;see cref=&quot;T:System.Data.Common.DbConnectionStringBuilder&quot; /&gt;.">要从此 <see cref="T:System.Data.Common.DbConnectionStringBuilder" /> 中的连接字符串移除的键/值对中的键。</param>
      <exception cref="T:System.ArgumentNullException" vsli:raw="&lt;paramref name=&quot;keyword&quot; /&gt; is null (&lt;see langword=&quot;Nothing&quot; /&gt; in Visual Basic)">
        <paramref name="keyword" /> 为 Null（在 Visual Basic 中为 <see langword="Nothing" />）</exception>
      <exception cref="T:System.NotSupportedException" vsli:raw="The &lt;see cref=&quot;T:System.Data.Common.DbConnectionStringBuilder&quot; /&gt; is read-only, or the &lt;see cref=&quot;T:System.Data.Common.DbConnectionStringBuilder&quot; /&gt; has a fixed size.">
        <see cref="T:System.Data.Common.DbConnectionStringBuilder" /> 是只读，或 <see cref="T:System.Data.Common.DbConnectionStringBuilder" /> 具有固定的大小。</exception>
      <returns vsli:raw="&lt;see langword=&quot;true&quot; /&gt; if the key existed within the connection string and was removed; &lt;see langword=&quot;false&quot; /&gt; if the key did not exist.">如果该键存在于连接字符串中并已被移除，则为 <see langword="true" />；如果该键不存在，则为 <see langword="false" />。</returns>
    </member>
    <member name="M:System.Data.Common.DbConnectionStringBuilder.ShouldSerialize(System.String)">
      <summary vsli:raw="Indicates whether the specified key exists in this &lt;see cref=&quot;T:System.Data.Common.DbConnectionStringBuilder&quot; /&gt; instance.">指示此 <see cref="T:System.Data.Common.DbConnectionStringBuilder" /> 实例中是否存在指定的键。</summary>
      <param name="keyword" vsli:raw="The key to locate in the &lt;see cref=&quot;T:System.Data.Common.DbConnectionStringBuilder&quot; /&gt;.">要在 <see cref="T:System.Data.Common.DbConnectionStringBuilder" /> 中定位的键。</param>
      <returns vsli:raw="&lt;see langword=&quot;true&quot; /&gt; if the &lt;see cref=&quot;T:System.Data.Common.DbConnectionStringBuilder&quot; /&gt; contains an entry with the specified key; otherwise &lt;see langword=&quot;false&quot; /&gt;.">如果 <see cref="T:System.Data.Common.DbConnectionStringBuilder" /> 包含具有指定键的项，则为 <see langword="true" />；否则为 <see langword="false" />。</returns>
    </member>
    <member name="M:System.Data.Common.DbConnectionStringBuilder.System#Collections#ICollection#CopyTo(System.Array,System.Int32)">
      <summary vsli:raw="Copies the elements of the &lt;see cref=&quot;T:System.Collections.ICollection&quot; /&gt; to an &lt;see cref=&quot;T:System.Array&quot; /&gt;, starting at a particular &lt;see cref=&quot;T:System.Array&quot; /&gt; index.">从特定的 <see cref="T:System.Collections.ICollection" /> 索引开始，将 <see cref="T:System.Array" /> 的元素复制到一个 <see cref="T:System.Array" /> 中。</summary>
      <param name="array" vsli:raw="The one-dimensional &lt;see cref=&quot;T:System.Array&quot; /&gt; that is the destination of the elements copied from &lt;see cref=&quot;T:System.Collections.ICollection&quot; /&gt;. The &lt;see cref=&quot;T:System.Array&quot; /&gt; must have zero-based indexing.">一维 <see cref="T:System.Array" />，它是从 <see cref="T:System.Collections.ICollection" /> 复制的元素的目标。 <see cref="T:System.Array" /> 必须具有从零开始的索引。</param>
      <param name="index" vsli:raw="The zero-based index in &lt;paramref name=&quot;array&quot; /&gt; at which copying begins.">
        <paramref name="array" /> 中从零开始的索引，从此处开始复制。</param>
    </member>
    <member name="M:System.Data.Common.DbConnectionStringBuilder.System#Collections#IDictionary#Add(System.Object,System.Object)">
      <summary vsli:raw="Adds an element with the provided key and value to the &lt;see cref=&quot;T:System.Collections.IDictionary&quot; /&gt; object.">在 <see cref="T:System.Collections.IDictionary" /> 对象中添加一个带有所提供的键和值的元素。</summary>
      <param name="keyword" vsli:raw="The &lt;see cref=&quot;T:System.Object&quot; /&gt; to use as the key of the element to add.">用作要添加的元素的键的 <see cref="T:System.Object" />。</param>
      <param name="value" vsli:raw="The &lt;see cref=&quot;T:System.Object&quot; /&gt; to use as the value of the element to add.">用作要添加的元素的键的 <see cref="T:System.Object" />。</param>
    </member>
    <member name="M:System.Data.Common.DbConnectionStringBuilder.System#Collections#IDictionary#Contains(System.Object)">
      <summary vsli:raw="Determines whether the &lt;see cref=&quot;T:System.Collections.IDictionary&quot; /&gt; object contains an element with the specified key.">确定 <see cref="T:System.Collections.IDictionary" /> 对象是否包含具有指定键的元素。</summary>
      <param name="keyword" vsli:raw="The key to locate in the &lt;see cref=&quot;T:System.Collections.IDictionary&quot; /&gt; object.">要在 <see cref="T:System.Collections.IDictionary" /> 对象中查找的键。</param>
      <returns vsli:raw="&lt;see langword=&quot;true&quot; /&gt; if the &lt;see cref=&quot;T:System.Collections.IDictionary&quot; /&gt; contains an element with the key; otherwise, &lt;see langword=&quot;false&quot; /&gt;.">如果 <see langword="true" /> 包含具有键的元素，则为 <see cref="T:System.Collections.IDictionary" />；否则为 <see langword="false" />。</returns>
    </member>
    <member name="M:System.Data.Common.DbConnectionStringBuilder.System#Collections#IDictionary#GetEnumerator">
      <summary vsli:raw="Returns an &lt;see cref=&quot;T:System.Collections.IDictionaryEnumerator&quot; /&gt; object for the &lt;see cref=&quot;T:System.Collections.IDictionary&quot; /&gt; object.">返回 <see cref="T:System.Collections.IDictionary" /> 对象的 <see cref="T:System.Collections.IDictionaryEnumerator" /> 对象。</summary>
      <returns vsli:raw="An &lt;see cref=&quot;T:System.Collections.IDictionaryEnumerator&quot; /&gt; object for the &lt;see cref=&quot;T:System.Collections.IDictionary&quot; /&gt; object.">
        <see cref="T:System.Collections.IDictionaryEnumerator" /> 对象的 <see cref="T:System.Collections.IDictionary" /> 对象。</returns>
    </member>
    <member name="M:System.Data.Common.DbConnectionStringBuilder.System#Collections#IDictionary#Remove(System.Object)">
      <summary vsli:raw="Removes the element with the specified key from the &lt;see cref=&quot;T:System.Collections.IDictionary&quot; /&gt; object.">从 <see cref="T:System.Collections.IDictionary" /> 对象中移除具有指定键的元素。</summary>
      <param name="keyword" vsli:raw="The key of the element to remove.">要移除的元素的键。</param>
    </member>
    <member name="M:System.Data.Common.DbConnectionStringBuilder.System#Collections#IEnumerable#GetEnumerator">
      <summary vsli:raw="Returns an enumerator that iterates through a collection.">返回循环访问集合的枚举数。</summary>
      <returns vsli:raw="An &lt;see cref=&quot;T:System.Collections.IEnumerator&quot; /&gt; object that can be used to iterate through the collection.">一个可用于循环访问集合的 <see cref="T:System.Collections.IEnumerator" /> 对象。</returns>
    </member>
    <member name="M:System.Data.Common.DbConnectionStringBuilder.System#ComponentModel#ICustomTypeDescriptor#GetAttributes">
      <summary vsli:raw="Returns a collection of custom attributes for this instance of a component.">返回此组件实例的自定义属性的集合。</summary>
      <returns vsli:raw="An &lt;see cref=&quot;T:System.ComponentModel.AttributeCollection&quot; /&gt; containing the attributes for this object.">包含此对象的属性的 <see cref="T:System.ComponentModel.AttributeCollection" />。</returns>
    </member>
    <member name="M:System.Data.Common.DbConnectionStringBuilder.System#ComponentModel#ICustomTypeDescriptor#GetClassName">
      <summary vsli:raw="Returns the class name of this instance of a component.">返回此组件实例的类名称。</summary>
      <returns vsli:raw="The class name of the object, or &lt;see langword=&quot;null&quot; /&gt; if the class does not have a name.">对象的类名称，如果该类没有名称，则为 <see langword="null" />。</returns>
    </member>
    <member name="M:System.Data.Common.DbConnectionStringBuilder.System#ComponentModel#ICustomTypeDescriptor#GetComponentName">
      <summary vsli:raw="Returns the name of this instance of a component.">返回某个组件的此实例的名称。</summary>
      <returns vsli:raw="The name of the object, or &lt;see langword=&quot;null&quot; /&gt; if the object does not have a name.">对象的名称，如果该对象不具有名称，则为 <see langword="null" />。</returns>
    </member>
    <member name="M:System.Data.Common.DbConnectionStringBuilder.System#ComponentModel#ICustomTypeDescriptor#GetConverter">
      <summary vsli:raw="Returns a type converter for this instance of a component.">返回此组件实例的类型转换器。</summary>
      <returns vsli:raw="A &lt;see cref=&quot;T:System.ComponentModel.TypeConverter&quot; /&gt; that is the converter for this object, or &lt;see langword=&quot;null&quot; /&gt; if there is no &lt;see cref=&quot;T:System.ComponentModel.TypeConverter&quot; /&gt; for this object.">作为此对象转换器的 <see cref="T:System.ComponentModel.TypeConverter" />，或为 <see langword="null" />（如果此对象不存在任何 <see cref="T:System.ComponentModel.TypeConverter" />）。</returns>
    </member>
    <member name="M:System.Data.Common.DbConnectionStringBuilder.System#ComponentModel#ICustomTypeDescriptor#GetDefaultEvent">
      <summary vsli:raw="Returns the default event for this instance of a component.">返回某个组件的此实例的默认事件。</summary>
      <returns vsli:raw="An &lt;see cref=&quot;T:System.ComponentModel.EventDescriptor&quot; /&gt; that represents the default event for this object, or &lt;see langword=&quot;null&quot; /&gt; if this object does not have events.">表示此对象的默认事件的 <see cref="T:System.ComponentModel.EventDescriptor" /> ；如果该对象没有事件，则为 <see langword="null" /> 。</returns>
    </member>
    <member name="M:System.Data.Common.DbConnectionStringBuilder.System#ComponentModel#ICustomTypeDescriptor#GetDefaultProperty">
      <summary vsli:raw="Returns the default property for this instance of a component.">返回此组件实例的默认属性。</summary>
      <returns vsli:raw="A &lt;see cref=&quot;T:System.ComponentModel.PropertyDescriptor&quot; /&gt; that represents the default property for this object, or &lt;see langword=&quot;null&quot; /&gt; if this object does not have properties.">表示此对象的默认属性的 <see cref="T:System.ComponentModel.PropertyDescriptor" />；如果该对象没有属性，则为 <see langword="null" />。</returns>
    </member>
    <member name="M:System.Data.Common.DbConnectionStringBuilder.System#ComponentModel#ICustomTypeDescriptor#GetEditor(System.Type)">
      <summary vsli:raw="Returns an editor of the specified type for this instance of a component.">返回此组件实例的指定类型的编辑器。</summary>
      <param name="editorBaseType" vsli:raw="A &lt;see cref=&quot;T:System.Type&quot; /&gt; that represents the editor for this object.">表示该对象的编辑器的 <see cref="T:System.Type" />。</param>
      <returns vsli:raw="An &lt;see cref=&quot;T:System.Object&quot; /&gt; of the specified type that is the editor for this object, or &lt;see langword=&quot;null&quot; /&gt; if the editor cannot be found.">表示该对象编辑器的指定类型的 <see cref="T:System.Object" />；如果无法找到编辑器，则为 <see langword="null" />。</returns>
    </member>
    <member name="M:System.Data.Common.DbConnectionStringBuilder.System#ComponentModel#ICustomTypeDescriptor#GetEvents">
      <summary vsli:raw="Returns the events for this instance of a component.">返回此组件实例的事件。</summary>
      <returns vsli:raw="An &lt;see cref=&quot;T:System.ComponentModel.EventDescriptorCollection&quot; /&gt; that represents the events for this component instance.">一个 <see cref="T:System.ComponentModel.EventDescriptorCollection" />，表示此组件实例的事件。</returns>
    </member>
    <member name="M:System.Data.Common.DbConnectionStringBuilder.System#ComponentModel#ICustomTypeDescriptor#GetEvents(System.Attribute[])">
      <summary vsli:raw="Returns the events for this instance of a component using the specified attribute array as a filter.">使用指定的属性数组作为筛选器，返回此组件实例的事件。</summary>
      <param name="attributes" vsli:raw="An array of type &lt;see cref=&quot;T:System.Attribute&quot; /&gt; that is used as a filter.">用作筛选器的 <see cref="T:System.Attribute" /> 类型数组。</param>
      <returns vsli:raw="An &lt;see cref=&quot;T:System.ComponentModel.EventDescriptorCollection&quot; /&gt; that represents the filtered events for this component instance.">表示此组件实例的已筛选事件的 <see cref="T:System.ComponentModel.EventDescriptorCollection" />。</returns>
    </member>
    <member name="M:System.Data.Common.DbConnectionStringBuilder.System#ComponentModel#ICustomTypeDescriptor#GetProperties">
      <summary vsli:raw="Returns the properties for this instance of a component.">返回此组件实例的属性。</summary>
      <returns vsli:raw="A &lt;see cref=&quot;T:System.ComponentModel.PropertyDescriptorCollection&quot; /&gt; that represents the properties for this component instance.">表示此组件实例的属性的 <see cref="T:System.ComponentModel.PropertyDescriptorCollection" />。</returns>
    </member>
    <member name="M:System.Data.Common.DbConnectionStringBuilder.System#ComponentModel#ICustomTypeDescriptor#GetProperties(System.Attribute[])">
      <summary vsli:raw="Returns the properties for this instance of a component using the attribute array as a filter.">使用特性数组作为筛选器，返回此组件实例的属性。</summary>
      <param name="attributes" vsli:raw="An array of type &lt;see cref=&quot;T:System.Attribute&quot; /&gt; that is used as a filter.">用作筛选器的 <see cref="T:System.Attribute" /> 类型数组。</param>
      <returns vsli:raw="A &lt;see cref=&quot;T:System.ComponentModel.PropertyDescriptorCollection&quot; /&gt; that represents the filtered properties for this component instance.">一个 <see cref="T:System.ComponentModel.PropertyDescriptorCollection" />，它表示此组件实例的已筛选属性。</returns>
    </member>
    <member name="M:System.Data.Common.DbConnectionStringBuilder.System#ComponentModel#ICustomTypeDescriptor#GetPropertyOwner(System.ComponentModel.PropertyDescriptor)">
      <summary vsli:raw="Returns an object that contains the property described by the specified property descriptor.">返回一个对象，该对象包含指定的属性描述符所描述的属性。</summary>
      <param name="pd" vsli:raw="A &lt;see cref=&quot;T:System.ComponentModel.PropertyDescriptor&quot; /&gt; that represents the property whose owner is to be found.">一个 <see cref="T:System.ComponentModel.PropertyDescriptor" />，表示要查找其所有者的属性。</param>
      <returns vsli:raw="An &lt;see cref=&quot;T:System.Object&quot; /&gt; that represents the owner of the specified property.">一个 <see cref="T:System.Object" />，表示指定属性的所有者。</returns>
    </member>
    <member name="M:System.Data.Common.DbConnectionStringBuilder.ToString">
      <summary vsli:raw="Returns the connection string associated with this &lt;see cref=&quot;T:System.Data.Common.DbConnectionStringBuilder&quot; /&gt;.">返回与此 <see cref="T:System.Data.Common.DbConnectionStringBuilder" /> 关联的连接字符串。</summary>
      <returns vsli:raw="The current &lt;see cref=&quot;P:System.Data.Common.DbConnectionStringBuilder.ConnectionString&quot; /&gt; property.">当前 <see cref="P:System.Data.Common.DbConnectionStringBuilder.ConnectionString" /> 属性。</returns>
    </member>
    <member name="M:System.Data.Common.DbConnectionStringBuilder.TryGetValue(System.String,System.Object@)">
      <summary vsli:raw="Retrieves a value corresponding to the supplied key from this &lt;see cref=&quot;T:System.Data.Common.DbConnectionStringBuilder&quot; /&gt;.">从此 <see cref="T:System.Data.Common.DbConnectionStringBuilder" /> 中检索与提供的键相对应的值。</summary>
      <param name="keyword" vsli:raw="The key of the item to retrieve.">要检索的项的键。</param>
      <param name="value" vsli:raw="The value corresponding to the &lt;paramref name=&quot;keyword&quot; /&gt;.">与 <paramref name="keyword" /> 对应的值。</param>
      <exception cref="T:System.ArgumentNullException" vsli:raw="&lt;paramref name=&quot;keyword&quot; /&gt; contains a null value (&lt;see langword=&quot;Nothing&quot; /&gt; in Visual Basic).">
        <paramref name="keyword" /> 包含一个 null 值（在 Visual Basic 中为 <see langword="Nothing" />）。</exception>
      <returns vsli:raw="&lt;see langword=&quot;true&quot; /&gt; if &lt;paramref name=&quot;keyword&quot; /&gt; was found within the connection string, &lt;see langword=&quot;false&quot; /&gt; otherwise.">如果在连接字符串中找到 <paramref name="keyword" />，则为 <see langword="true" />，否则为 <see langword="false" />。</returns>
    </member>
    <member name="P:System.Data.Common.DbConnectionStringBuilder.BrowsableConnectionString">
      <summary vsli:raw="Gets or sets a value that indicates whether the &lt;see cref=&quot;P:System.Data.Common.DbConnectionStringBuilder.ConnectionString&quot; /&gt; property is visible in Visual Studio designers.">获取或设置一个值，该值指示 <see cref="P:System.Data.Common.DbConnectionStringBuilder.ConnectionString" /> 属性是否在 Visual Studio 设计器中可见。</summary>
      <returns vsli:raw="&lt;see langword=&quot;true&quot; /&gt; if the connection string is visible within designers; &lt;see langword=&quot;false&quot; /&gt; otherwise. The default is &lt;see langword=&quot;true&quot; /&gt;.">如果连接字符串在设计器中可见，则为 <see langword="true" />；否则为 <see langword="false" />。 默认值为 <see langword="true" />。</returns>
    </member>
    <member name="P:System.Data.Common.DbConnectionStringBuilder.ConnectionString">
      <summary vsli:raw="Gets or sets the connection string associated with the &lt;see cref=&quot;T:System.Data.Common.DbConnectionStringBuilder&quot; /&gt;.">获取或设置与 <see cref="T:System.Data.Common.DbConnectionStringBuilder" /> 相关联的连接字符串。</summary>
      <exception cref="T:System.ArgumentException" vsli:raw="An invalid connection string argument has been supplied.">提供的连接字符串参数无效。</exception>
      <returns vsli:raw="The current connection string, created from the key/value pairs that are contained within the &lt;see cref=&quot;T:System.Data.Common.DbConnectionStringBuilder&quot; /&gt;. The default value is an empty string.">使用 <see cref="T:System.Data.Common.DbConnectionStringBuilder" /> 中包含的键/值对创建的当前连接字符串。 默认值为一个空字符串。</returns>
    </member>
    <member name="P:System.Data.Common.DbConnectionStringBuilder.Count">
      <summary vsli:raw="Gets the current number of keys that are contained within the &lt;see cref=&quot;P:System.Data.Common.DbConnectionStringBuilder.ConnectionString&quot; /&gt; property.">获取属性 <see cref="P:System.Data.Common.DbConnectionStringBuilder.ConnectionString" /> 中包含的键的当前数目。</summary>
      <returns vsli:raw="The number of keys that are contained within the connection string maintained by the &lt;see cref=&quot;T:System.Data.Common.DbConnectionStringBuilder&quot; /&gt; instance.">由 <see cref="T:System.Data.Common.DbConnectionStringBuilder" /> 实例维护的连接字符串中包含的键的数目。</returns>
    </member>
    <member name="P:System.Data.Common.DbConnectionStringBuilder.IsFixedSize">
      <summary vsli:raw="Gets a value that indicates whether the &lt;see cref=&quot;T:System.Data.Common.DbConnectionStringBuilder&quot; /&gt; has a fixed size.">获取一个值，该值指示 <see cref="T:System.Data.Common.DbConnectionStringBuilder" /> 是否具有固定大小。</summary>
      <returns vsli:raw="&lt;see langword=&quot;true&quot; /&gt; if the &lt;see cref=&quot;T:System.Data.Common.DbConnectionStringBuilder&quot; /&gt; has a fixed size; otherwise &lt;see langword=&quot;false&quot; /&gt;.">如果 <see cref="T:System.Data.Common.DbConnectionStringBuilder" /> 具有固定大小，则为 <see langword="true" />；否则为 <see langword="false" />。</returns>
    </member>
    <member name="P:System.Data.Common.DbConnectionStringBuilder.IsReadOnly">
      <summary vsli:raw="Gets a value that indicates whether the &lt;see cref=&quot;T:System.Data.Common.DbConnectionStringBuilder&quot; /&gt; is read-only.">获取一个值，该值指示 <see cref="T:System.Data.Common.DbConnectionStringBuilder" /> 是否为只读。</summary>
      <returns vsli:raw="&lt;see langword=&quot;true&quot; /&gt; if the &lt;see cref=&quot;T:System.Data.Common.DbConnectionStringBuilder&quot; /&gt; is read-only; otherwise &lt;see langword=&quot;false&quot; /&gt;. The default is &lt;see langword=&quot;false&quot; /&gt;.">如果 <see langword="true" /> 为只读，则为 <see cref="T:System.Data.Common.DbConnectionStringBuilder" />；否则为 <see langword="false" />。 默认值为 <see langword="false" />。</returns>
    </member>
    <member name="P:System.Data.Common.DbConnectionStringBuilder.Item(System.String)">
      <summary vsli:raw="Gets or sets the value associated with the specified key.">获取或设置与指定的键关联的值。</summary>
      <param name="keyword" vsli:raw="The key of the item to get or set.">要获取或设置的项的键。</param>
      <exception cref="T:System.ArgumentNullException" vsli:raw="&lt;paramref name=&quot;keyword&quot; /&gt; is a null reference (&lt;see langword=&quot;Nothing&quot; /&gt; in Visual Basic).">
        <paramref name="keyword" /> 为空引用（在 Visual Basic 中为 <see langword="Nothing" />）。</exception>
      <exception cref="T:System.NotSupportedException" vsli:raw="The property is set, and the &lt;see cref=&quot;T:System.Data.Common.DbConnectionStringBuilder&quot; /&gt; is read-only.&#xA;&#xA; -or-&#xA;&#xA; The property is set, &lt;paramref name=&quot;keyword&quot; /&gt; does not exist in the collection, and the &lt;see cref=&quot;T:System.Data.Common.DbConnectionStringBuilder&quot; /&gt; has a fixed size.">设置了该属性，但 <see cref="T:System.Data.Common.DbConnectionStringBuilder" /> 为只读。

- 或 -

设置了该属性，但 <paramref name="keyword" /> 不存在于集合中，且 <see cref="T:System.Data.Common.DbConnectionStringBuilder" /> 具有固定的大小。</exception>
      <returns vsli:raw="The value associated with the specified key. If the specified key is not found, trying to get it returns a null reference (&lt;see langword=&quot;Nothing&quot; /&gt; in Visual Basic), and trying to set it creates a new element using the specified key.&#xA;&#xA; Passing a null (&lt;see langword=&quot;Nothing&quot; /&gt; in Visual Basic) key throws an &lt;see cref=&quot;T:System.ArgumentNullException&quot; /&gt;. Assigning a null value removes the key/value pair.">与指定的键相关联的值。 如果指定键未找到，尝试让其返回空引用（在 Visual Basic 中为 <see langword="Nothing" />），并尝试设置为使用指定键创建新的元素。

传递 null 键（在 Visual Basic 中为 <see langword="Nothing" />）将引发 <see cref="T:System.ArgumentNullException" />。 分配一个删除键/值对的 null 值。</returns>
    </member>
    <member name="P:System.Data.Common.DbConnectionStringBuilder.Keys">
      <summary vsli:raw="Gets an &lt;see cref=&quot;T:System.Collections.ICollection&quot; /&gt; that contains the keys in the &lt;see cref=&quot;T:System.Data.Common.DbConnectionStringBuilder&quot; /&gt;.">获取包含 <see cref="T:System.Collections.ICollection" /> 中的键的 <see cref="T:System.Data.Common.DbConnectionStringBuilder" />。</summary>
      <returns vsli:raw="An &lt;see cref=&quot;T:System.Collections.ICollection&quot; /&gt; that contains the keys in the &lt;see cref=&quot;T:System.Data.Common.DbConnectionStringBuilder&quot; /&gt;.">一个 <see cref="T:System.Collections.ICollection" />，它包含 <see cref="T:System.Data.Common.DbConnectionStringBuilder" /> 中的键。</returns>
    </member>
    <member name="P:System.Data.Common.DbConnectionStringBuilder.System#Collections#ICollection#IsSynchronized">
      <summary vsli:raw="Gets a value indicating whether access to the &lt;see cref=&quot;T:System.Collections.ICollection&quot; /&gt; is synchronized (thread safe).">获取一个值，该值指示是否同步对 <see cref="T:System.Collections.ICollection" /> 的访问（线程安全）。</summary>
      <returns vsli:raw="&lt;see langword=&quot;true&quot; /&gt; if access to the &lt;see cref=&quot;T:System.Collections.ICollection&quot; /&gt; is synchronized (thread safe); otherwise, &lt;see langword=&quot;false&quot; /&gt;.">如果对 <see langword="true" /> 的访问是同步的（线程安全），则为 <see cref="T:System.Collections.ICollection" />；否则为 <see langword="false" />。</returns>
    </member>
    <member name="P:System.Data.Common.DbConnectionStringBuilder.System#Collections#ICollection#SyncRoot">
      <summary vsli:raw="Gets an object that can be used to synchronize access to the &lt;see cref=&quot;T:System.Collections.ICollection&quot; /&gt;.">获取可用于同步对 <see cref="T:System.Collections.ICollection" /> 的访问的对象。</summary>
      <returns vsli:raw="An object that can be used to synchronize access to the &lt;see cref=&quot;T:System.Collections.ICollection&quot; /&gt;.">用于同步对 <see cref="T:System.Collections.ICollection" /> 的访问的对象。</returns>
    </member>
    <member name="P:System.Data.Common.DbConnectionStringBuilder.System#Collections#IDictionary#Item(System.Object)">
      <summary vsli:raw="Gets or sets the element with the specified key.">获取或设置具有指定键的元素。</summary>
      <param name="keyword" vsli:raw="The key of the element to get or set.">要获取或设置的元素的键。</param>
      <returns vsli:raw="The element with the specified key.">带有指定键的元素。</returns>
    </member>
    <member name="P:System.Data.Common.DbConnectionStringBuilder.Values">
      <summary vsli:raw="Gets an &lt;see cref=&quot;T:System.Collections.ICollection&quot; /&gt; that contains the values in the &lt;see cref=&quot;T:System.Data.Common.DbConnectionStringBuilder&quot; /&gt;.">获取一个包含 <see cref="T:System.Collections.ICollection" /> 中的值的 <see cref="T:System.Data.Common.DbConnectionStringBuilder" />。</summary>
      <returns vsli:raw="An &lt;see cref=&quot;T:System.Collections.ICollection&quot; /&gt; that contains the values in the &lt;see cref=&quot;T:System.Data.Common.DbConnectionStringBuilder&quot; /&gt;.">一个 <see cref="T:System.Collections.ICollection" />，包含 <see cref="T:System.Data.Common.DbConnectionStringBuilder" /> 中的值。</returns>
    </member>
    <member name="T:System.Data.Common.DbDataAdapter">
      <summary vsli:raw="Aids implementation of the &lt;see cref=&quot;T:System.Data.IDbDataAdapter&quot; /&gt; interface. Inheritors of &lt;see cref=&quot;T:System.Data.Common.DbDataAdapter&quot; /&gt; implement a set of functions to provide strong typing, but inherit most of the functionality needed to fully implement a DataAdapter.">帮助实现 <see cref="T:System.Data.IDbDataAdapter" /> 接口。 <see cref="T:System.Data.Common.DbDataAdapter" /> 的继承类实现了一组功能以提供强类型，但是继承了完全实现 DataAdapter**** 所需的大部分功能。</summary>
    </member>
    <member name="F:System.Data.Common.DbDataAdapter.DefaultSourceTableName">
      <summary vsli:raw="The default name used by the &lt;see cref=&quot;T:System.Data.Common.DataAdapter&quot; /&gt; object for table mappings.">
        <see cref="T:System.Data.Common.DataAdapter" /> 对象用于表映射的默认名称。</summary>
    </member>
    <member name="M:System.Data.Common.DbDataAdapter.#ctor">
      <summary vsli:raw="Initializes a new instance of a DataAdapter class.">初始化 DataAdapter**** 类的新实例。</summary>
    </member>
    <member name="M:System.Data.Common.DbDataAdapter.#ctor(System.Data.Common.DbDataAdapter)">
      <summary vsli:raw="Initializes a new instance of the &lt;see langword=&quot;DataAdapter&quot; /&gt; class from an existing object of the same type.">从同一类型的现有对象中初始化 <see langword="DataAdapter" /> 类的新实例。</summary>
      <param name="adapter" vsli:raw="A &lt;see langword=&quot;DataAdapter&quot; /&gt; object used to create the new &lt;see langword=&quot;DataAdapter&quot; /&gt;.">用于创建新 <see langword="DataAdapter" /> 的 <see langword="DataAdapter" /> 对象。</param>
    </member>
    <member name="M:System.Data.Common.DbDataAdapter.AddToBatch(System.Data.IDbCommand)">
      <summary vsli:raw="Adds a &lt;see cref=&quot;T:System.Data.IDbCommand&quot; /&gt; to the current batch.">向当前批处理添加 <see cref="T:System.Data.IDbCommand" />。</summary>
      <param name="command" vsli:raw="The &lt;see cref=&quot;T:System.Data.IDbCommand&quot; /&gt; to add to the batch.">要添加到批处理的 <see cref="T:System.Data.IDbCommand" />。</param>
      <exception cref="T:System.NotSupportedException" vsli:raw="The adapter does not support batches.">该适配器不支持批处理。</exception>
      <returns vsli:raw="The number of commands in the batch before adding the &lt;see cref=&quot;T:System.Data.IDbCommand&quot; /&gt;.">添加 <see cref="T:System.Data.IDbCommand" /> 之前批处理中的命令数。</returns>
    </member>
    <member name="M:System.Data.Common.DbDataAdapter.ClearBatch">
      <summary vsli:raw="Removes all &lt;see cref=&quot;T:System.Data.IDbCommand&quot; /&gt; objects from the batch.">从批处理中移除所有 <see cref="T:System.Data.IDbCommand" /> 对象。</summary>
      <exception cref="T:System.NotSupportedException" vsli:raw="The adapter does not support batches.">该适配器不支持批处理。</exception>
    </member>
    <member name="M:System.Data.Common.DbDataAdapter.CreateRowUpdatedEvent(System.Data.DataRow,System.Data.IDbCommand,System.Data.StatementType,System.Data.Common.DataTableMapping)">
      <summary vsli:raw="Initializes a new instance of the &lt;see cref=&quot;T:System.Data.Common.RowUpdatedEventArgs&quot; /&gt; class.">初始化 <see cref="T:System.Data.Common.RowUpdatedEventArgs" /> 类的新实例。</summary>
      <param name="dataRow" vsli:raw="The &lt;see cref=&quot;T:System.Data.DataRow&quot; /&gt; used to update the data source.">用于更新数据源的 <see cref="T:System.Data.DataRow" />。</param>
      <param name="command" vsli:raw="The &lt;see cref=&quot;T:System.Data.IDbCommand&quot; /&gt; executed during the &lt;see cref=&quot;M:System.Data.IDataAdapter.Update(System.Data.DataSet)&quot; /&gt;.">在 <see cref="T:System.Data.IDbCommand" /> 过程中执行的 <see cref="M:System.Data.IDataAdapter.Update(System.Data.DataSet)" />。</param>
      <param name="statementType" vsli:raw="Whether the command is an UPDATE, INSERT, DELETE, or SELECT statement.">该命令是 UPDATE、INSERT、DELETE 语句还是 SELECT 语句。</param>
      <param name="tableMapping" vsli:raw="A &lt;see cref=&quot;T:System.Data.Common.DataTableMapping&quot; /&gt; object.">
        <see cref="T:System.Data.Common.DataTableMapping" /> 对象。</param>
      <returns vsli:raw="A new instance of the &lt;see cref=&quot;T:System.Data.Common.RowUpdatedEventArgs&quot; /&gt; class.">
        <see cref="T:System.Data.Common.RowUpdatedEventArgs" /> 类的新实例。</returns>
    </member>
    <member name="M:System.Data.Common.DbDataAdapter.CreateRowUpdatingEvent(System.Data.DataRow,System.Data.IDbCommand,System.Data.StatementType,System.Data.Common.DataTableMapping)">
      <summary vsli:raw="Initializes a new instance of the &lt;see cref=&quot;T:System.Data.Common.RowUpdatingEventArgs&quot; /&gt; class.">初始化 <see cref="T:System.Data.Common.RowUpdatingEventArgs" /> 类的新实例。</summary>
      <param name="dataRow" vsli:raw="The &lt;see cref=&quot;T:System.Data.DataRow&quot; /&gt; that updates the data source.">更新数据源的 <see cref="T:System.Data.DataRow" />。</param>
      <param name="command" vsli:raw="The &lt;see cref=&quot;T:System.Data.IDbCommand&quot; /&gt; to execute during the &lt;see cref=&quot;M:System.Data.IDataAdapter.Update(System.Data.DataSet)&quot; /&gt;.">要在 <see cref="T:System.Data.IDbCommand" /> 过程中执行的 <see cref="M:System.Data.IDataAdapter.Update(System.Data.DataSet)" />。</param>
      <param name="statementType" vsli:raw="Whether the command is an UPDATE, INSERT, DELETE, or SELECT statement.">该命令是 UPDATE、INSERT、DELETE 语句还是 SELECT 语句。</param>
      <param name="tableMapping" vsli:raw="A &lt;see cref=&quot;T:System.Data.Common.DataTableMapping&quot; /&gt; object.">
        <see cref="T:System.Data.Common.DataTableMapping" /> 对象。</param>
      <returns vsli:raw="A new instance of the &lt;see cref=&quot;T:System.Data.Common.RowUpdatingEventArgs&quot; /&gt; class.">
        <see cref="T:System.Data.Common.RowUpdatingEventArgs" /> 类的新实例。</returns>
    </member>
    <member name="M:System.Data.Common.DbDataAdapter.Dispose(System.Boolean)">
      <summary vsli:raw="Releases the unmanaged resources used by the &lt;see cref=&quot;T:System.Data.Common.DbDataAdapter&quot; /&gt; and optionally releases the managed resources.">释放由 <see cref="T:System.Data.Common.DbDataAdapter" /> 占用的非托管资源，还可以另外再释放托管资源。</summary>
      <param name="disposing" vsli:raw="&lt;see langword=&quot;true&quot; /&gt; to release both managed and unmanaged resources; &lt;see langword=&quot;false&quot; /&gt; to release only unmanaged resources.">若要释放托管资源和非托管资源，则为 <see langword="true" />；若仅释放非托管资源，则为 <see langword="false" />。</param>
    </member>
    <member name="M:System.Data.Common.DbDataAdapter.ExecuteBatch">
      <summary vsli:raw="Executes the current batch.">执行当前批处理。</summary>
      <returns vsli:raw="The return value from the last command in the batch.">从批处理中的最后一个命令返回的值。</returns>
    </member>
    <member name="M:System.Data.Common.DbDataAdapter.Fill(System.Data.DataSet)">
      <summary vsli:raw="Adds or refreshes rows in the &lt;see cref=&quot;T:System.Data.DataSet&quot; /&gt;.">在 <see cref="T:System.Data.DataSet" /> 中添加或刷新行。</summary>
      <param name="dataSet" vsli:raw="A &lt;see cref=&quot;T:System.Data.DataSet&quot; /&gt; to fill with records and, if necessary, schema.">要用记录和架构（如果必要）填充的 <see cref="T:System.Data.DataSet" />。</param>
      <returns vsli:raw="The number of rows successfully added to or refreshed in the &lt;see cref=&quot;T:System.Data.DataSet&quot; /&gt;. This does not include rows affected by statements that do not return rows.">已在 <see cref="T:System.Data.DataSet" /> 中成功添加或刷新的行数。 这不包括受不返回行的语句影响的行。</returns>
    </member>
    <member name="M:System.Data.Common.DbDataAdapter.Fill(System.Data.DataSet,System.Int32,System.Int32,System.String)">
      <summary vsli:raw="Adds or refreshes rows in a specified range in the &lt;see cref=&quot;T:System.Data.DataSet&quot; /&gt; to match those in the data source using the &lt;see cref=&quot;T:System.Data.DataSet&quot; /&gt; and &lt;see cref=&quot;T:System.Data.DataTable&quot; /&gt; names.">在 <see cref="T:System.Data.DataSet" /> 的指定范围中添加或刷新行以匹配使用 <see cref="T:System.Data.DataSet" /> 和 <see cref="T:System.Data.DataTable" /> 名称的数据源中的行。</summary>
      <param name="dataSet" vsli:raw="A &lt;see cref=&quot;T:System.Data.DataSet&quot; /&gt; to fill with records and, if necessary, schema.">要用记录和架构（如果必要）填充的 <see cref="T:System.Data.DataSet" />。</param>
      <param name="startRecord" vsli:raw="The zero-based record number to start with.">从其开始的从零开始的记录号。</param>
      <param name="maxRecords" vsli:raw="The maximum number of records to retrieve. Specify 0 to retrieve all records after the start record.">要检索的最大记录数。</param>
      <param name="srcTable" vsli:raw="The name of the source table to use for table mapping.">用于表映射的源表的名称。</param>
      <exception cref="T:System.SystemException" vsli:raw="The &lt;see cref=&quot;T:System.Data.DataSet&quot; /&gt; is invalid.">
        <see cref="T:System.Data.DataSet" /> 无效。</exception>
      <exception cref="T:System.InvalidOperationException" vsli:raw="The source table is invalid.  &#xA;  &#xA; -or-  &#xA;  &#xA; The connection is invalid.">源表无效。  
  
 - 或 -  
  
 连接无效。</exception>
      <exception cref="T:System.InvalidCastException" vsli:raw="The connection could not be found.">未能找到连接。</exception>
      <exception cref="T:System.ArgumentException" vsli:raw="The &lt;paramref name=&quot;startRecord&quot; /&gt; parameter is less than 0.  &#xA;  &#xA; -or-  &#xA;  &#xA; The &lt;paramref name=&quot;maxRecords&quot; /&gt; parameter is less than 0.">
        <paramref name="startRecord" /> 参数小于 0。  
  
- 或 - 
<paramref name="maxRecords" /> 参数小于 0。</exception>
      <returns vsli:raw="The number of rows successfully added to or refreshed in the &lt;see cref=&quot;T:System.Data.DataSet&quot; /&gt;. This does not include rows affected by statements that do not return rows.">已在 <see cref="T:System.Data.DataSet" /> 中成功添加或刷新的行数。 这不包括受不返回行的语句影响的行。</returns>
    </member>
    <member name="M:System.Data.Common.DbDataAdapter.Fill(System.Data.DataSet,System.Int32,System.Int32,System.String,System.Data.IDbCommand,System.Data.CommandBehavior)">
      <summary vsli:raw="Adds or refreshes rows in a specified range in the &lt;see cref=&quot;T:System.Data.DataSet&quot; /&gt; to match those in the data source using the &lt;see cref=&quot;T:System.Data.DataSet&quot; /&gt; and source table names, command string, and command behavior.">使用 <see cref="T:System.Data.DataSet" /> 和源表名称、命令字符串以及命令行为，在 <see cref="T:System.Data.DataSet" /> 的指定范围中添加或刷新某些行以使它们与数据源中对应的行相一致。</summary>
      <param name="dataSet" vsli:raw="A &lt;see cref=&quot;T:System.Data.DataSet&quot; /&gt; to fill with records and, if necessary, schema.">要用记录和架构（如果必要）填充的 <see cref="T:System.Data.DataSet" />。</param>
      <param name="startRecord" vsli:raw="The zero-based record number to start with.">从其开始的从零开始的记录号。</param>
      <param name="maxRecords" vsli:raw="The maximum number of records to retrieve. Specify 0 to retrieve all records after the start record.">要检索的最大记录数。</param>
      <param name="srcTable" vsli:raw="The name of the source table to use for table mapping.">用于表映射的源表的名称。</param>
      <param name="command" vsli:raw="The SQL SELECT statement used to retrieve rows from the data source.">用于从数据源中检索行的 SQL SELECT 语句。</param>
      <param name="behavior" vsli:raw="One of the &lt;see cref=&quot;T:System.Data.CommandBehavior&quot; /&gt; values.">
        <see cref="T:System.Data.CommandBehavior" /> 值之一。</param>
      <exception cref="T:System.InvalidOperationException" vsli:raw="The source table is invalid.">源表无效。</exception>
      <exception cref="T:System.ArgumentException" vsli:raw="The &lt;paramref name=&quot;startRecord&quot; /&gt; parameter is less than 0.  &#xA;  &#xA; -or-  &#xA;  &#xA; The &lt;paramref name=&quot;maxRecords&quot; /&gt; parameter is less than 0.">
        <paramref name="startRecord" /> 参数小于 0。  
  
- 或 - 
<paramref name="maxRecords" /> 参数小于 0。</exception>
      <returns vsli:raw="The number of rows successfully added to or refreshed in the &lt;see cref=&quot;T:System.Data.DataSet&quot; /&gt;. This does not include rows affected by statements that do not return rows.">已在 <see cref="T:System.Data.DataSet" /> 中成功添加或刷新的行数。 这不包括受不返回行的语句影响的行。</returns>
    </member>
    <member name="M:System.Data.Common.DbDataAdapter.Fill(System.Data.DataSet,System.String)">
      <summary vsli:raw="Adds or refreshes rows in the &lt;see cref=&quot;T:System.Data.DataSet&quot; /&gt; to match those in the data source using the &lt;see cref=&quot;T:System.Data.DataSet&quot; /&gt; and &lt;see cref=&quot;T:System.Data.DataTable&quot; /&gt; names.">在 <see cref="T:System.Data.DataSet" /> 中添加或刷新行以匹配使用 <see cref="T:System.Data.DataSet" /> 和 <see cref="T:System.Data.DataTable" /> 名称的数据源中的行。</summary>
      <param name="dataSet" vsli:raw="A &lt;see cref=&quot;T:System.Data.DataSet&quot; /&gt; to fill with records and, if necessary, schema.">要用记录和架构（如果必要）填充的 <see cref="T:System.Data.DataSet" />。</param>
      <param name="srcTable" vsli:raw="The name of the source table to use for table mapping.">用于表映射的源表的名称。</param>
      <exception cref="T:System.SystemException" vsli:raw="The source table is invalid.">源表无效。</exception>
      <returns vsli:raw="The number of rows successfully added to or refreshed in the &lt;see cref=&quot;T:System.Data.DataSet&quot; /&gt;. This does not include rows affected by statements that do not return rows.">已在 <see cref="T:System.Data.DataSet" /> 中成功添加或刷新的行数。 这不包括受不返回行的语句影响的行。</returns>
    </member>
    <member name="M:System.Data.Common.DbDataAdapter.Fill(System.Data.DataTable)">
      <summary vsli:raw="Adds or refreshes rows in a specified range in the &lt;see cref=&quot;T:System.Data.DataSet&quot; /&gt; to match those in the data source using the &lt;see cref=&quot;T:System.Data.DataTable&quot; /&gt; name.">在 <see cref="T:System.Data.DataSet" /> 的指定范围中添加或刷新行，以与使用 <see cref="T:System.Data.DataTable" /> 名称的数据源中的行匹配。</summary>
      <param name="dataTable" vsli:raw="The name of the &lt;see cref=&quot;T:System.Data.DataTable&quot; /&gt; to use for table mapping.">用于表映射的 <see cref="T:System.Data.DataTable" /> 的名称。</param>
      <exception cref="T:System.InvalidOperationException" vsli:raw="The source table is invalid.">源表无效。</exception>
      <returns vsli:raw="The number of rows successfully added to or refreshed in the &lt;see cref=&quot;T:System.Data.DataSet&quot; /&gt;. This does not include rows affected by statements that do not return rows.">已在 <see cref="T:System.Data.DataSet" /> 中成功添加或刷新的行数。 这不包括受不返回行的语句影响的行。</returns>
    </member>
    <member name="M:System.Data.Common.DbDataAdapter.Fill(System.Data.DataTable,System.Data.IDbCommand,System.Data.CommandBehavior)">
      <summary vsli:raw="Adds or refreshes rows in a &lt;see cref=&quot;T:System.Data.DataTable&quot; /&gt; to match those in the data source using the specified &lt;see cref=&quot;T:System.Data.DataTable&quot; /&gt;, &lt;see cref=&quot;T:System.Data.IDbCommand&quot; /&gt; and &lt;see cref=&quot;T:System.Data.CommandBehavior&quot; /&gt;.">在 <see cref="T:System.Data.DataTable" /> 中添加或刷新行，以与使用指定的 <see cref="T:System.Data.DataTable" />、<see cref="T:System.Data.IDbCommand" /> 和 <see cref="T:System.Data.CommandBehavior" /> 的数据源中的行匹配。</summary>
      <param name="dataTable" vsli:raw="A &lt;see cref=&quot;T:System.Data.DataTable&quot; /&gt; to fill with records and, if necessary, schema.">要用记录和架构（如果必要）填充的 <see cref="T:System.Data.DataTable" />。</param>
      <param name="command" vsli:raw="The SQL SELECT statement used to retrieve rows from the data source.">用于从数据源中检索行的 SQL SELECT 语句。</param>
      <param name="behavior" vsli:raw="One of the &lt;see cref=&quot;T:System.Data.CommandBehavior&quot; /&gt; values.">
        <see cref="T:System.Data.CommandBehavior" /> 值之一。</param>
      <returns vsli:raw="The number of rows successfully added to or refreshed in the &lt;see cref=&quot;T:System.Data.DataTable&quot; /&gt;. This does not include rows affected by statements that do not return rows.">已在 <see cref="T:System.Data.DataTable" /> 中成功添加或刷新的行数。 这不包括受不返回行的语句影响的行。</returns>
    </member>
    <member name="M:System.Data.Common.DbDataAdapter.Fill(System.Data.DataTable[],System.Int32,System.Int32,System.Data.IDbCommand,System.Data.CommandBehavior)">
      <summary vsli:raw="Adds or refreshes rows in a specified range in the &lt;see cref=&quot;T:System.Data.DataSet&quot; /&gt; to match those in the data source using the &lt;see cref=&quot;T:System.Data.DataSet&quot; /&gt; and &lt;see cref=&quot;T:System.Data.DataTable&quot; /&gt; names.">在 <see cref="T:System.Data.DataSet" /> 的指定范围中添加或刷新行以匹配使用 <see cref="T:System.Data.DataSet" /> 和 <see cref="T:System.Data.DataTable" /> 名称的数据源中的行。</summary>
      <param name="dataTables" vsli:raw="The &lt;see cref=&quot;T:System.Data.DataTable&quot; /&gt; objects to fill from the data source.">要从数据源填充的 <see cref="T:System.Data.DataTable" /> 对象。</param>
      <param name="startRecord" vsli:raw="The zero-based record number to start with.">从其开始的从零开始的记录号。</param>
      <param name="maxRecords" vsli:raw="The maximum number of records to retrieve. Specify 0 to retrieve all records after the start record.">要检索的最大记录数。</param>
      <param name="command" vsli:raw="The &lt;see cref=&quot;T:System.Data.IDbCommand&quot; /&gt; executed to fill the &lt;see cref=&quot;T:System.Data.DataTable&quot; /&gt; objects.">执行以填充 <see cref="T:System.Data.IDbCommand" /> 对象的 <see cref="T:System.Data.DataTable" />。</param>
      <param name="behavior" vsli:raw="One of the &lt;see cref=&quot;T:System.Data.CommandBehavior&quot; /&gt; values.">
        <see cref="T:System.Data.CommandBehavior" /> 值之一。</param>
      <exception cref="T:System.SystemException" vsli:raw="The &lt;see cref=&quot;T:System.Data.DataSet&quot; /&gt; is invalid.">
        <see cref="T:System.Data.DataSet" /> 无效。</exception>
      <exception cref="T:System.InvalidOperationException" vsli:raw="The source table is invalid.  &#xA;  &#xA; -or-  &#xA;  &#xA; The connection is invalid.">源表无效。  
  
 - 或 -  
  
 连接无效。</exception>
      <exception cref="T:System.InvalidCastException" vsli:raw="The connection could not be found.">未能找到连接。</exception>
      <exception cref="T:System.ArgumentException" vsli:raw="The &lt;paramref name=&quot;startRecord&quot; /&gt; parameter is less than 0.  &#xA;  &#xA; -or-  &#xA;  &#xA; The &lt;paramref name=&quot;maxRecords&quot; /&gt; parameter is less than 0.">
        <paramref name="startRecord" /> 参数小于 0。  
  
- 或 - 
<paramref name="maxRecords" /> 参数小于 0。</exception>
      <returns vsli:raw="The number of rows added to or refreshed in the data tables.">已在数据表中添加或刷新的行数。</returns>
    </member>
    <member name="M:System.Data.Common.DbDataAdapter.Fill(System.Int32,System.Int32,System.Data.DataTable[])">
      <summary vsli:raw="Adds or refreshes rows in one or more &lt;see cref=&quot;T:System.Data.DataTable&quot; /&gt; objects to match those in the data source starting at the specified record and retrieving up to the specified maximum number of records.">在 <see cref="T:System.Data.DataTable" /> 中添加或刷新行，以与从指定的记录开始一直检索到指定的最大数目的记录的数据源中的行匹配。</summary>
      <param name="startRecord" vsli:raw="The zero-based record number to start with.">从其开始的从零开始的记录号。</param>
      <param name="maxRecords" vsli:raw="The maximum number of records to retrieve. Specify 0 to retrieve all records after the start record.">要检索的最大记录数。</param>
      <param name="dataTables" vsli:raw="The &lt;see cref=&quot;T:System.Data.DataTable&quot; /&gt; objects to fill from the data source.">要从数据源填充的 <see cref="T:System.Data.DataTable" /> 对象。</param>
      <returns vsli:raw="The number of rows successfully added to or refreshed in the &lt;see cref=&quot;T:System.Data.DataTable&quot; /&gt; objects. This value does not include rows affected by statements that do not return rows.">已在 <see cref="T:System.Data.DataTable" /> 中成功添加或刷新的行数。 此值不包括受不返回行的语句影响的行。</returns>
    </member>
    <member name="M:System.Data.Common.DbDataAdapter.FillSchema(System.Data.DataSet,System.Data.SchemaType)">
      <summary vsli:raw="Adds a &lt;see cref=&quot;T:System.Data.DataTable&quot; /&gt; named &quot;Table&quot; to the specified &lt;see cref=&quot;T:System.Data.DataSet&quot; /&gt; and configures the schema to match that in the data source based on the specified &lt;see cref=&quot;T:System.Data.SchemaType&quot; /&gt;.">将名为“Table”的 <see cref="T:System.Data.DataTable" /> 添加到指定的 <see cref="T:System.Data.DataSet" />，并根据指定的 <see cref="T:System.Data.SchemaType" /> 配置架构以匹配数据源中的架构。</summary>
      <param name="dataSet" vsli:raw="A &lt;see cref=&quot;T:System.Data.DataSet&quot; /&gt; to insert the schema in.">要插入架构的 <see cref="T:System.Data.DataSet" />。</param>
      <param name="schemaType" vsli:raw="One of the &lt;see cref=&quot;T:System.Data.SchemaType&quot; /&gt; values that specify how to insert the schema.">
        <see cref="T:System.Data.SchemaType" /> 值之一，指定如何插入架构。</param>
      <returns vsli:raw="A reference to a collection of &lt;see cref=&quot;T:System.Data.DataTable&quot; /&gt; objects that were added to the &lt;see cref=&quot;T:System.Data.DataSet&quot; /&gt;.">一个引用，指向添加到 <see cref="T:System.Data.DataSet" /> 的 <see cref="T:System.Data.DataTable" /> 对象的集合。</returns>
    </member>
    <member name="M:System.Data.Common.DbDataAdapter.FillSchema(System.Data.DataSet,System.Data.SchemaType,System.Data.IDbCommand,System.String,System.Data.CommandBehavior)">
      <summary vsli:raw="Adds a &lt;see cref=&quot;T:System.Data.DataTable&quot; /&gt; to the specified &lt;see cref=&quot;T:System.Data.DataSet&quot; /&gt; and configures the schema to match that in the data source based on the specified &lt;see cref=&quot;T:System.Data.SchemaType&quot; /&gt;.">将 <see cref="T:System.Data.DataTable" /> 添加到指定的 <see cref="T:System.Data.DataSet" /> ，并根据指定的 <see cref="T:System.Data.SchemaType" />配置架构以匹配数据源中的架构。</summary>
      <param name="dataSet" vsli:raw="The &lt;see cref=&quot;T:System.Data.DataSet&quot; /&gt; to be filled with the schema from the data source.">要用数据源中的架构填充的 <see cref="T:System.Data.DataSet" />。</param>
      <param name="schemaType" vsli:raw="One of the &lt;see cref=&quot;T:System.Data.SchemaType&quot; /&gt; values.">
        <see cref="T:System.Data.SchemaType" /> 值之一。</param>
      <param name="command" vsli:raw="The SQL SELECT statement used to retrieve rows from the data source.">用于从数据源中检索行的 SQL SELECT 语句。</param>
      <param name="srcTable" vsli:raw="The name of the source table to use for table mapping.">用于表映射的源表的名称。</param>
      <param name="behavior" vsli:raw="One of the &lt;see cref=&quot;T:System.Data.CommandBehavior&quot; /&gt; values.">
        <see cref="T:System.Data.CommandBehavior" /> 值之一。</param>
      <returns vsli:raw="An array of &lt;see cref=&quot;T:System.Data.DataTable&quot; /&gt; objects that contain schema information returned from the data source.">
        <see cref="T:System.Data.DataTable" /> 对象的数组，这些对象包含从数据源返回的架构信息。</returns>
    </member>
    <member name="M:System.Data.Common.DbDataAdapter.FillSchema(System.Data.DataSet,System.Data.SchemaType,System.String)">
      <summary vsli:raw="Adds a &lt;see cref=&quot;T:System.Data.DataTable&quot; /&gt; to the specified &lt;see cref=&quot;T:System.Data.DataSet&quot; /&gt; and configures the schema to match that in the data source based upon the specified &lt;see cref=&quot;T:System.Data.SchemaType&quot; /&gt; and &lt;see cref=&quot;T:System.Data.DataTable&quot; /&gt;.">将 <see cref="T:System.Data.DataTable" /> 添加到指定的 <see cref="T:System.Data.DataSet" /> 中，并根据指定的 <see cref="T:System.Data.SchemaType" /> 和 <see cref="T:System.Data.DataTable" /> 配置架构以匹配数据源中的架构。</summary>
      <param name="dataSet" vsli:raw="A &lt;see cref=&quot;T:System.Data.DataSet&quot; /&gt; to insert the schema in.">要插入架构的 <see cref="T:System.Data.DataSet" />。</param>
      <param name="schemaType" vsli:raw="One of the &lt;see cref=&quot;T:System.Data.SchemaType&quot; /&gt; values that specify how to insert the schema.">
        <see cref="T:System.Data.SchemaType" /> 值之一，指定如何插入架构。</param>
      <param name="srcTable" vsli:raw="The name of the source table to use for table mapping.">用于表映射的源表的名称。</param>
      <exception cref="T:System.ArgumentException" vsli:raw="A source table from which to get the schema could not be found.">找不到从中获取架构的源表。</exception>
      <returns vsli:raw="A reference to a collection of &lt;see cref=&quot;T:System.Data.DataTable&quot; /&gt; objects that were added to the &lt;see cref=&quot;T:System.Data.DataSet&quot; /&gt;.">一个引用，指向添加到 <see cref="T:System.Data.DataSet" /> 的 <see cref="T:System.Data.DataTable" /> 对象的集合。</returns>
    </member>
    <member name="M:System.Data.Common.DbDataAdapter.FillSchema(System.Data.DataTable,System.Data.SchemaType)">
      <summary vsli:raw="Configures the schema of the specified &lt;see cref=&quot;T:System.Data.DataTable&quot; /&gt; based on the specified &lt;see cref=&quot;T:System.Data.SchemaType&quot; /&gt;.">根据指定的 <see cref="T:System.Data.SchemaType" /> 配置指定 <see cref="T:System.Data.DataTable" /> 的架构。</summary>
      <param name="dataTable" vsli:raw="The &lt;see cref=&quot;T:System.Data.DataTable&quot; /&gt; to be filled with the schema from the data source.">要用数据源中的架构填充的 <see cref="T:System.Data.DataTable" />。</param>
      <param name="schemaType" vsli:raw="One of the &lt;see cref=&quot;T:System.Data.SchemaType&quot; /&gt; values.">
        <see cref="T:System.Data.SchemaType" /> 值之一。</param>
      <returns vsli:raw="A &lt;see cref=&quot;T:System.Data.DataTable&quot; /&gt; that contains schema information returned from the data source.">一个 <see cref="T:System.Data.DataTable" />，其中包含从数据源返回的架构信息。</returns>
    </member>
    <member name="M:System.Data.Common.DbDataAdapter.FillSchema(System.Data.DataTable,System.Data.SchemaType,System.Data.IDbCommand,System.Data.CommandBehavior)">
      <summary vsli:raw="Configures the schema of the specified &lt;see cref=&quot;T:System.Data.DataTable&quot; /&gt; based on the specified &lt;see cref=&quot;T:System.Data.SchemaType&quot; /&gt;, command string, and &lt;see cref=&quot;T:System.Data.CommandBehavior&quot; /&gt; values.">根据指定的 <see cref="T:System.Data.DataTable" />、命令字符串以及 <see cref="T:System.Data.SchemaType" /> 值配置指定 <see cref="T:System.Data.CommandBehavior" /> 的架构。</summary>
      <param name="dataTable" vsli:raw="The &lt;see cref=&quot;T:System.Data.DataTable&quot; /&gt; to be filled with the schema from the data source.">要用数据源中的架构填充的 <see cref="T:System.Data.DataTable" />。</param>
      <param name="schemaType" vsli:raw="One of the &lt;see cref=&quot;T:System.Data.SchemaType&quot; /&gt; values.">
        <see cref="T:System.Data.SchemaType" /> 值之一。</param>
      <param name="command" vsli:raw="The SQL SELECT statement used to retrieve rows from the data source.">用于从数据源中检索行的 SQL SELECT 语句。</param>
      <param name="behavior" vsli:raw="One of the &lt;see cref=&quot;T:System.Data.CommandBehavior&quot; /&gt; values.">
        <see cref="T:System.Data.CommandBehavior" /> 值之一。</param>
      <returns vsli:raw="A of &lt;see cref=&quot;T:System.Data.DataTable&quot; /&gt; object that contains schema information returned from the data source.">包含从数据源返回的架构信息的 <see cref="T:System.Data.DataTable" /> 对象。</returns>
    </member>
    <member name="M:System.Data.Common.DbDataAdapter.GetBatchedParameter(System.Int32,System.Int32)">
      <summary vsli:raw="Returns a &lt;see cref=&quot;T:System.Data.IDataParameter&quot; /&gt; from one of the commands in the current batch.">从当前批处理中的其中一个命令返回一个 <see cref="T:System.Data.IDataParameter" />。</summary>
      <param name="commandIdentifier" vsli:raw="The index of the command to retrieve the parameter from.">要从中检索参数的命令的索引。</param>
      <param name="parameterIndex" vsli:raw="The index of the parameter within the command.">命令内的参数的索引。</param>
      <exception cref="T:System.NotSupportedException" vsli:raw="The adapter does not support batches.">该适配器不支持批处理。</exception>
      <returns vsli:raw="The &lt;see cref=&quot;T:System.Data.IDataParameter&quot; /&gt; specified.">指定的 <see cref="T:System.Data.IDataParameter" />。</returns>
    </member>
    <member name="M:System.Data.Common.DbDataAdapter.GetBatchedRecordsAffected(System.Int32,System.Int32@,System.Exception@)">
      <summary vsli:raw="Returns information about an individual update attempt within a larger batched update.">返回与较大的批处理更新内的单次更新尝试有关的信息。</summary>
      <param name="commandIdentifier" vsli:raw="The zero-based column ordinal of the individual command within the batch.">该批次内单个命令的从零开始的列序号。</param>
      <param name="recordsAffected" vsli:raw="The number of rows affected in the data store by the specified command within the batch.">数据存储区中受该批内的指定命令影响的行数。</param>
      <param name="error" vsli:raw="An &lt;see cref=&quot;T:System.Exception&quot; /&gt; thrown during execution of the specified command. Returns &lt;see langword=&quot;null&quot; /&gt; (&lt;see langword=&quot;Nothing&quot; /&gt; in Visual Basic) if no exception is thrown.">在执行指定命令期间引发的一个 <see cref="T:System.Exception" />。 如果未引发任何异常，则返回 <see langword="null" />（在 Visual Basic 中为 <see langword="Nothing" />）。</param>
      <returns vsli:raw="Information about an individual update attempt within a larger batched update.">与较大的批处理更新内的单次更新尝试有关的信息。</returns>
    </member>
    <member name="M:System.Data.Common.DbDataAdapter.GetFillParameters">
      <summary vsli:raw="Gets the parameters set by the user when executing an SQL SELECT statement.">获取当执行 SQL SELECT 语句时由用户设置的参数。</summary>
      <returns vsli:raw="An array of &lt;see cref=&quot;T:System.Data.IDataParameter&quot; /&gt; objects that contains the parameters set by the user.">
        <see cref="T:System.Data.IDataParameter" /> 对象的数组，这些对象包含由用户设置的参数。</returns>
    </member>
    <member name="M:System.Data.Common.DbDataAdapter.InitializeBatching">
      <summary vsli:raw="Initializes batching for the &lt;see cref=&quot;T:System.Data.Common.DbDataAdapter&quot; /&gt;.">初始化 <see cref="T:System.Data.Common.DbDataAdapter" /> 的批处理。</summary>
      <exception cref="T:System.NotSupportedException" vsli:raw="The adapter does not support batches.">该适配器不支持批处理。</exception>
    </member>
    <member name="M:System.Data.Common.DbDataAdapter.OnRowUpdated(System.Data.Common.RowUpdatedEventArgs)">
      <summary vsli:raw="Raises the &lt;see langword=&quot;RowUpdated&quot; /&gt; event of a .NET data provider.">引发 .NET Framework 数据提供程序的 <see langword="RowUpdated" /> 事件。</summary>
      <param name="value" vsli:raw="A &lt;see cref=&quot;T:System.Data.Common.RowUpdatedEventArgs&quot; /&gt; that contains the event data.">包含事件数据的 <see cref="T:System.Data.Common.RowUpdatedEventArgs" />。</param>
    </member>
    <member name="M:System.Data.Common.DbDataAdapter.OnRowUpdating(System.Data.Common.RowUpdatingEventArgs)">
      <summary vsli:raw="Raises the &lt;see langword=&quot;RowUpdating&quot; /&gt; event of a .NET data provider.">引发 .NET Framework 数据提供程序的 <see langword="RowUpdating" /> 事件。</summary>
      <param name="value" vsli:raw="An &lt;see cref=&quot;T:System.Data.Common.RowUpdatingEventArgs&quot; /&gt; that contains the event data.">包含事件数据的 <see cref="T:System.Data.Common.RowUpdatingEventArgs" />。</param>
    </member>
    <member name="M:System.Data.Common.DbDataAdapter.System#ICloneable#Clone">
      <summary vsli:raw="Creates a new object that is a copy of the current instance.">创建作为当前实例副本的新对象。</summary>
      <returns vsli:raw="A new object that is a copy of this instance.">作为此实例副本的新对象。</returns>
    </member>
    <member name="M:System.Data.Common.DbDataAdapter.TerminateBatching">
      <summary vsli:raw="Ends batching for the &lt;see cref=&quot;T:System.Data.Common.DbDataAdapter&quot; /&gt;.">结束 <see cref="T:System.Data.Common.DbDataAdapter" /> 的批处理。</summary>
      <exception cref="T:System.NotSupportedException" vsli:raw="The adapter does not support batches.">该适配器不支持批处理。</exception>
    </member>
    <member name="M:System.Data.Common.DbDataAdapter.Update(System.Data.DataRow[])">
      <summary vsli:raw="Updates the values in the database by executing the respective INSERT, UPDATE, or DELETE statements for each inserted, updated, or deleted row in the specified array in the &lt;see cref=&quot;T:System.Data.DataSet&quot; /&gt;.">通过为 <see cref="T:System.Data.DataSet" /> 中的指定数组中的每个已插入、已更新或已删除的行执行相应的 INSERT、UPDATE 或 DELETE 语句来更新数据库中的值。</summary>
      <param name="dataRows" vsli:raw="An array of &lt;see cref=&quot;T:System.Data.DataRow&quot; /&gt; objects used to update the data source.">用于更新数据源的 <see cref="T:System.Data.DataRow" /> 对象的数组。</param>
      <exception cref="T:System.ArgumentNullException" vsli:raw="The &lt;see cref=&quot;T:System.Data.DataSet&quot; /&gt; is invalid.">
        <see cref="T:System.Data.DataSet" /> 无效。</exception>
      <exception cref="T:System.InvalidOperationException" vsli:raw="The source table is invalid.">源表无效。</exception>
      <exception cref="T:System.SystemException" vsli:raw="No &lt;see cref=&quot;T:System.Data.DataRow&quot; /&gt; exists to update.  &#xA;  &#xA; -or-  &#xA;  &#xA; No &lt;see cref=&quot;T:System.Data.DataTable&quot; /&gt; exists to update.  &#xA;  &#xA; -or-  &#xA;  &#xA; No &lt;see cref=&quot;T:System.Data.DataSet&quot; /&gt; exists to use as a source.">不存在要更新的 <see cref="T:System.Data.DataRow" />。  
  
- 或 - 
不存在要更新的 <see cref="T:System.Data.DataTable" />。  
  
- 或 - 
不存在要用作源的 <see cref="T:System.Data.DataSet" />。</exception>
      <exception cref="T:System.Data.DBConcurrencyException" vsli:raw="An attempt to execute an INSERT, UPDATE, or DELETE statement resulted in zero records affected.">尝试执行 INSERT、UPDATE 或 DELETE 语句，但没有记录受到影响。</exception>
      <returns vsli:raw="The number of rows successfully updated from the &lt;see cref=&quot;T:System.Data.DataSet&quot; /&gt;.">
        <see cref="T:System.Data.DataSet" /> 中成功更新的行数。</returns>
    </member>
    <member name="M:System.Data.Common.DbDataAdapter.Update(System.Data.DataRow[],System.Data.Common.DataTableMapping)">
      <summary vsli:raw="Updates the values in the database by executing the respective INSERT, UPDATE, or DELETE statements for each inserted, updated, or deleted row in the specified array of &lt;see cref=&quot;T:System.Data.DataRow&quot; /&gt; objects.">通过为指定的 <see cref="T:System.Data.DataSet" /> 对象数组中的每个已插入、已更新或已删除的行执行相应的 INSERT、UPDATE 或 DELETE 语句来更新数据库中的值。</summary>
      <param name="dataRows" vsli:raw="An array of &lt;see cref=&quot;T:System.Data.DataRow&quot; /&gt; objects used to update the data source.">用于更新数据源的 <see cref="T:System.Data.DataRow" /> 对象的数组。</param>
      <param name="tableMapping" vsli:raw="The &lt;see cref=&quot;P:System.Data.IDataAdapter.TableMappings&quot; /&gt; collection to use.">要使用的 <see cref="P:System.Data.IDataAdapter.TableMappings" /> 集合。</param>
      <exception cref="T:System.ArgumentNullException" vsli:raw="The &lt;see cref=&quot;T:System.Data.DataSet&quot; /&gt; is invalid.">
        <see cref="T:System.Data.DataSet" /> 无效。</exception>
      <exception cref="T:System.InvalidOperationException" vsli:raw="The source table is invalid.">源表无效。</exception>
      <exception cref="T:System.SystemException" vsli:raw="No &lt;see cref=&quot;T:System.Data.DataRow&quot; /&gt; exists to update.  &#xA;  &#xA; -or-  &#xA;  &#xA; No &lt;see cref=&quot;T:System.Data.DataTable&quot; /&gt; exists to update.  &#xA;  &#xA; -or-  &#xA;  &#xA; No &lt;see cref=&quot;T:System.Data.DataSet&quot; /&gt; exists to use as a source.">不存在要更新的 <see cref="T:System.Data.DataRow" />。  
  
- 或 - 
不存在要更新的 <see cref="T:System.Data.DataTable" />。  
  
- 或 - 
不存在要用作源的 <see cref="T:System.Data.DataSet" />。</exception>
      <exception cref="T:System.Data.DBConcurrencyException" vsli:raw="An attempt to execute an INSERT, UPDATE, or DELETE statement resulted in zero records affected.">尝试执行 INSERT、UPDATE 或 DELETE 语句，但没有记录受到影响。</exception>
      <returns vsli:raw="The number of rows successfully updated from the array of &lt;see cref=&quot;T:System.Data.DataRow&quot; /&gt; objects.">
        <see cref="T:System.Data.DataSet" /> 中成功更新的行数。</returns>
    </member>
    <member name="M:System.Data.Common.DbDataAdapter.Update(System.Data.DataSet)">
      <summary vsli:raw="Updates the values in the database by executing the respective INSERT, UPDATE, or DELETE statements for each inserted, updated, or deleted row in the specified &lt;see cref=&quot;T:System.Data.DataSet&quot; /&gt;.">通过为指定的 <see cref="T:System.Data.DataSet" /> 中的每个已插入、已更新或已删除的行执行相应的 INSERT、UPDATE 或 DELETE 语句来更新数据库中的值。</summary>
      <param name="dataSet" vsli:raw="The &lt;see cref=&quot;T:System.Data.DataSet&quot; /&gt; used to update the data source.">用于更新数据源的 <see cref="T:System.Data.DataSet" />。</param>
      <exception cref="T:System.InvalidOperationException" vsli:raw="The source table is invalid.">源表无效。</exception>
      <exception cref="T:System.Data.DBConcurrencyException" vsli:raw="An attempt to execute an INSERT, UPDATE, or DELETE statement resulted in zero records affected.">尝试执行 INSERT、UPDATE 或 DELETE 语句，但没有记录受到影响。</exception>
      <returns vsli:raw="The number of rows successfully updated from the &lt;see cref=&quot;T:System.Data.DataSet&quot; /&gt;.">
        <see cref="T:System.Data.DataSet" /> 中成功更新的行数。</returns>
    </member>
    <member name="M:System.Data.Common.DbDataAdapter.Update(System.Data.DataSet,System.String)">
      <summary vsli:raw="Updates the values in the database by executing the respective INSERT, UPDATE, or DELETE statements for each inserted, updated, or deleted row in the &lt;see cref=&quot;T:System.Data.DataSet&quot; /&gt; with the specified &lt;see cref=&quot;T:System.Data.DataTable&quot; /&gt; name.">通过为具有指定名称 <see cref="T:System.Data.DataSet" /> 的 <see cref="T:System.Data.DataTable" /> 中的每个已插入、已更新或已删除的行执行相应的 INSERT、UPDATE 或 DELETE 语句来更新数据库中的值。</summary>
      <param name="dataSet" vsli:raw="The &lt;see cref=&quot;T:System.Data.DataSet&quot; /&gt; to use to update the data source.">用于更新数据源的 <see cref="T:System.Data.DataSet" />。</param>
      <param name="srcTable" vsli:raw="The name of the source table to use for table mapping.">用于表映射的源表的名称。</param>
      <exception cref="T:System.ArgumentNullException" vsli:raw="The &lt;see cref=&quot;T:System.Data.DataSet&quot; /&gt; is invalid.">
        <see cref="T:System.Data.DataSet" /> 无效。</exception>
      <exception cref="T:System.InvalidOperationException" vsli:raw="The source table is invalid.">源表无效。</exception>
      <exception cref="T:System.Data.DBConcurrencyException" vsli:raw="An attempt to execute an INSERT, UPDATE, or DELETE statement resulted in zero records affected.">尝试执行 INSERT、UPDATE 或 DELETE 语句，但没有记录受到影响。</exception>
      <returns vsli:raw="The number of rows successfully updated from the &lt;see cref=&quot;T:System.Data.DataSet&quot; /&gt;.">
        <see cref="T:System.Data.DataSet" /> 中成功更新的行数。</returns>
    </member>
    <member name="M:System.Data.Common.DbDataAdapter.Update(System.Data.DataTable)">
      <summary vsli:raw="Updates the values in the database by executing the respective INSERT, UPDATE, or DELETE statements for each inserted, updated, or deleted row in the specified &lt;see cref=&quot;T:System.Data.DataTable&quot; /&gt;.">通过为指定的 <see cref="T:System.Data.DataTable" /> 中的每个已插入、已更新或已删除的行执行相应的 INSERT、UPDATE 或 DELETE 语句来更新数据库中的值。</summary>
      <param name="dataTable" vsli:raw="The &lt;see cref=&quot;T:System.Data.DataTable&quot; /&gt; used to update the data source.">用于更新数据源的 <see cref="T:System.Data.DataTable" />。</param>
      <exception cref="T:System.ArgumentNullException" vsli:raw="The &lt;see cref=&quot;T:System.Data.DataSet&quot; /&gt; is invalid.">
        <see cref="T:System.Data.DataSet" /> 无效。</exception>
      <exception cref="T:System.InvalidOperationException" vsli:raw="The source table is invalid.">源表无效。</exception>
      <exception cref="T:System.SystemException" vsli:raw="No &lt;see cref=&quot;T:System.Data.DataRow&quot; /&gt; exists to update.  &#xA;  &#xA; -or-  &#xA;  &#xA; No &lt;see cref=&quot;T:System.Data.DataTable&quot; /&gt; exists to update.  &#xA;  &#xA; -or-  &#xA;  &#xA; No &lt;see cref=&quot;T:System.Data.DataSet&quot; /&gt; exists to use as a source.">不存在要更新的 <see cref="T:System.Data.DataRow" />。  
  
- 或 - 
不存在要更新的 <see cref="T:System.Data.DataTable" />。  
  
- 或 - 
不存在要用作源的 <see cref="T:System.Data.DataSet" />。</exception>
      <exception cref="T:System.Data.DBConcurrencyException" vsli:raw="An attempt to execute an INSERT, UPDATE, or DELETE statement resulted in zero records affected.">尝试执行 INSERT、UPDATE 或 DELETE 语句，但没有记录受到影响。</exception>
      <returns vsli:raw="The number of rows successfully updated from the &lt;see cref=&quot;T:System.Data.DataTable&quot; /&gt;.">
        <see cref="T:System.Data.DataTable" /> 中成功更新的行数。</returns>
    </member>
    <member name="P:System.Data.Common.DbDataAdapter.DeleteCommand">
      <summary vsli:raw="Gets or sets a command for deleting records from the data set.">获取或设置用于从数据集中删除记录的命令。</summary>
      <returns vsli:raw="An &lt;see cref=&quot;T:System.Data.IDbCommand&quot; /&gt; used during &lt;see cref=&quot;M:System.Data.IDataAdapter.Update(System.Data.DataSet)&quot; /&gt; to delete records in the data source for deleted rows in the data set.">
        <see cref="T:System.Data.IDbCommand" /> 过程中使用的 <see cref="M:System.Data.IDataAdapter.Update(System.Data.DataSet)" />，它针对数据集中已删除的行删除数据源中的记录。</returns>
    </member>
    <member name="P:System.Data.Common.DbDataAdapter.FillCommandBehavior">
      <summary vsli:raw="Gets or sets the behavior of the command used to fill the data adapter.">获取或设置用于填充数据适配器的命令的行为。</summary>
      <returns vsli:raw="The &lt;see cref=&quot;T:System.Data.CommandBehavior&quot; /&gt; of the command used to fill the data adapter.">用于填充数据适配器的命令的 <see cref="T:System.Data.CommandBehavior" />。</returns>
    </member>
    <member name="P:System.Data.Common.DbDataAdapter.InsertCommand">
      <summary vsli:raw="Gets or sets a command used to insert new records into the data source.">获取或设置用于在数据源中插入新记录的命令。</summary>
      <returns vsli:raw="A &lt;see cref=&quot;T:System.Data.IDbCommand&quot; /&gt; used during &lt;see cref=&quot;M:System.Data.IDataAdapter.Update(System.Data.DataSet)&quot; /&gt; to insert records in the data source for new rows in the data set.">在 <see cref="T:System.Data.IDbCommand" /> 过程中使用的 <see cref="M:System.Data.IDataAdapter.Update(System.Data.DataSet)" />，它针对数据集中的新行将记录插入到数据源中。</returns>
    </member>
    <member name="P:System.Data.Common.DbDataAdapter.SelectCommand">
      <summary vsli:raw="Gets or sets a command used to select records in the data source.">获取或设置用于在数据源中选择记录的命令。</summary>
      <returns vsli:raw="A &lt;see cref=&quot;T:System.Data.IDbCommand&quot; /&gt; that is used during &lt;see cref=&quot;M:System.Data.IDataAdapter.Update(System.Data.DataSet)&quot; /&gt; to select records from data source for placement in the data set.">在 <see cref="T:System.Data.IDbCommand" /> 过程中使用的 <see cref="M:System.Data.IDataAdapter.Update(System.Data.DataSet)" />，它从数据源中选择记录以便放入数据集中。</returns>
    </member>
    <member name="P:System.Data.Common.DbDataAdapter.System#Data#IDbDataAdapter#DeleteCommand">
      <summary vsli:raw="Gets or sets an SQL statement for deleting records from the data set.">获取或设置用于从数据集中删除记录的 SQL 语句。</summary>
      <returns vsli:raw="An &lt;see cref=&quot;T:System.Data.IDbCommand&quot; /&gt; used during &lt;see cref=&quot;M:System.Data.Common.DbDataAdapter.Update(System.Data.DataSet)&quot; /&gt; to delete records in the data source for deleted rows in the data set.">
        <see cref="T:System.Data.IDbCommand" /> 过程中使用的 <see cref="M:System.Data.Common.DbDataAdapter.Update(System.Data.DataSet)" />，它针对数据集中已删除的行删除数据源中的记录。</returns>
    </member>
    <member name="P:System.Data.Common.DbDataAdapter.System#Data#IDbDataAdapter#InsertCommand">
      <summary vsli:raw="Gets or sets an SQL statement used to insert new records into the data source.">获取或设置用于将新记录插入到数据源中的 SQL 语句。</summary>
      <returns vsli:raw="An &lt;see cref=&quot;T:System.Data.IDbCommand&quot; /&gt; used during &lt;see cref=&quot;M:System.Data.Common.DbDataAdapter.Update(System.Data.DataSet)&quot; /&gt; to insert records in the data source for new rows in the data set.">在 <see cref="T:System.Data.IDbCommand" /> 过程中使用的 <see cref="M:System.Data.Common.DbDataAdapter.Update(System.Data.DataSet)" />，它针对数据集中的新行将记录插入到数据源。</returns>
    </member>
    <member name="P:System.Data.Common.DbDataAdapter.System#Data#IDbDataAdapter#SelectCommand">
      <summary vsli:raw="Gets or sets an SQL statement used to select records in the data source.">获取或设置用于在数据源中选择记录的 SQL 语句。</summary>
      <returns vsli:raw="An &lt;see cref=&quot;T:System.Data.IDbCommand&quot; /&gt; that is used during &lt;see cref=&quot;M:System.Data.Common.DbDataAdapter.Update(System.Data.DataSet)&quot; /&gt; to select records from data source for placement in the data set.">在 <see cref="T:System.Data.IDbCommand" /> 过程中使用的 <see cref="M:System.Data.Common.DbDataAdapter.Update(System.Data.DataSet)" />，它从数据源中选择记录以便放入数据集中。</returns>
    </member>
    <member name="P:System.Data.Common.DbDataAdapter.System#Data#IDbDataAdapter#UpdateCommand">
      <summary vsli:raw="Gets or sets an SQL statement used to update records in the data source.">获取或设置用于更新数据源中的记录的 SQL 语句。</summary>
      <returns vsli:raw="An &lt;see cref=&quot;T:System.Data.IDbCommand&quot; /&gt; used during &lt;see cref=&quot;M:System.Data.Common.DbDataAdapter.Update(System.Data.DataSet)&quot; /&gt; to update records in the data source for modified rows in the data set.">在 <see cref="T:System.Data.IDbCommand" /> 过程中使用的 <see cref="M:System.Data.Common.DbDataAdapter.Update(System.Data.DataSet)" />，它针对数据集中已修改的行更新数据源中的记录。</returns>
    </member>
    <member name="P:System.Data.Common.DbDataAdapter.UpdateBatchSize">
      <summary vsli:raw="Gets or sets a value that enables or disables batch processing support, and specifies the number of commands that can be executed in a batch.">获取或设置一个值，该值启用或禁用批处理支持，并且指定可在一次批处理中执行的命令的数量。</summary>
      <returns vsli:raw="The number of rows to process per batch.  &#xA;  &#xA; &lt;list type=&quot;table&quot;&gt;&lt;listheader&gt;&lt;term&gt; Value is&lt;/term&gt;&lt;description&gt; Effect&lt;/description&gt;&lt;/listheader&gt;&lt;item&gt;&lt;term&gt; 0&lt;/term&gt;&lt;description&gt; There is no limit on the batch size.&lt;/description&gt;&lt;/item&gt;&lt;item&gt;&lt;term&gt; 1&lt;/term&gt;&lt;description&gt; Disables batch updating.&lt;/description&gt;&lt;/item&gt;&lt;item&gt;&lt;term&gt; &amp;gt; 1&lt;/term&gt;&lt;description&gt; Changes are sent using batches of &lt;see cref=&quot;P:System.Data.Common.DbDataAdapter.UpdateBatchSize&quot; /&gt; operations at a time.&lt;/description&gt;&lt;/item&gt;&lt;/list&gt;  &#xA;&#xA; When setting this to a value other than 1, all the commands associated with the &lt;see cref=&quot;T:System.Data.Common.DbDataAdapter&quot; /&gt; must have their &lt;see cref=&quot;P:System.Data.IDbCommand.UpdatedRowSource&quot; /&gt; property set to None or OutputParameters. An exception will be thrown otherwise.">每个批处理要处理的行数。  
  
 <list type="table"><listheader><term> 值为</term><description> 效果</description></listheader><item><term> 0</term><description> 批大小没有限制。</description></item><item><term> 1</term><description> 禁用批量更新。</description></item><item><term> &gt; 2</term><description> 更改是使用 <see cref="P:System.Data.Common.DbDataAdapter.UpdateBatchSize" /> 操作的批处理一次性发送的。</description></item></list>  

 将此值设置为1以外的值时，所有与关联的命令都 <see cref="T:System.Data.Common.DbDataAdapter" /> 必须 <see cref="P:System.Data.IDbCommand.UpdatedRowSource" /> 将其属性设置为 None 或 OutputParameters。 否则，将引发异常。</returns>
    </member>
    <member name="P:System.Data.Common.DbDataAdapter.UpdateCommand">
      <summary vsli:raw="Gets or sets a command used to update records in the data source.">获取或设置用于更新数据源中的记录的命令。</summary>
      <returns vsli:raw="A &lt;see cref=&quot;T:System.Data.IDbCommand&quot; /&gt; used during &lt;see cref=&quot;M:System.Data.IDataAdapter.Update(System.Data.DataSet)&quot; /&gt; to update records in the data source for modified rows in the data set.">在 <see cref="T:System.Data.IDbCommand" /> 过程中使用的 <see cref="M:System.Data.IDataAdapter.Update(System.Data.DataSet)" />，它针对数据集中已修改的行更新数据源中的记录。</returns>
    </member>
    <member name="T:System.Data.Common.DbDataReader">
      <summary vsli:raw="Reads a forward-only stream of rows from a data source.">从数据源中读取行的只进流。</summary>
    </member>
    <member name="M:System.Data.Common.DbDataReader.#ctor">
      <summary vsli:raw="Initializes a new instance of the &lt;see cref=&quot;T:System.Data.Common.DbDataReader&quot; /&gt; class.">初始化 <see cref="T:System.Data.Common.DbDataReader" /> 类的新实例。</summary>
    </member>
    <member name="M:System.Data.Common.DbDataReader.Close">
      <summary vsli:raw="Closes the &lt;see cref=&quot;T:System.Data.Common.DbDataReader&quot; /&gt; object.">关闭 <see cref="T:System.Data.Common.DbDataReader" /> 对象。</summary>
    </member>
    <member name="M:System.Data.Common.DbDataReader.CloseAsync">
      <summary vsli:raw="Asynchronously closes the &lt;see cref=&quot;T:System.Data.Common.DbDataReader&quot; /&gt; object.">异步关闭 <see cref="T:System.Data.Common.DbDataReader" /> 对象。</summary>
      <returns vsli:raw="A task representing the asynchronous operation.">表示异步操作的任务。</returns>
    </member>
    <member name="M:System.Data.Common.DbDataReader.Dispose">
      <summary vsli:raw="Releases all resources used by the current instance of the &lt;see cref=&quot;T:System.Data.Common.DbDataReader&quot; /&gt; class.">释放 <see cref="T:System.Data.Common.DbDataReader" /> 类的当前实例所使用的所有资源。</summary>
    </member>
    <member name="M:System.Data.Common.DbDataReader.Dispose(System.Boolean)">
      <summary vsli:raw="Releases the unmanaged resources used by the &lt;see cref=&quot;T:System.Data.Common.DbDataReader&quot; /&gt; and optionally releases the managed resources.">释放由 <see cref="T:System.Data.Common.DbDataReader" /> 占用的非托管资源，还可以另外再释放托管资源。</summary>
      <param name="disposing" vsli:raw="&lt;see langword=&quot;true&quot; /&gt; to release managed and unmanaged resources; &lt;see langword=&quot;false&quot; /&gt; to release only unmanaged resources.">若要释放托管资源和非托管的资源，则为 <see langword="true" />；若要仅释放非托管资源，则为 <see langword="false" />。</param>
    </member>
    <member name="M:System.Data.Common.DbDataReader.DisposeAsync">
      <summary vsli:raw="Asynchronously releases all resources used by the current instance of the &lt;see cref=&quot;T:System.Data.Common.DbDataReader&quot; /&gt; class.">异步释放 <see cref="T:System.Data.Common.DbDataReader" /> 类的当前实例所使用的所有资源。</summary>
      <returns vsli:raw="A &lt;see cref=&quot;T:System.Threading.Tasks.ValueTask&quot; /&gt; representing the asynchronous operation.">表示异步操作的 <see cref="T:System.Threading.Tasks.ValueTask" />。</returns>
    </member>
    <member name="M:System.Data.Common.DbDataReader.GetBoolean(System.Int32)">
      <summary vsli:raw="When overridden in a derived class, gets the value of the specified column as a Boolean.">在派生类中重写时，以布尔值的形式获取指定列的值。</summary>
      <param name="ordinal" vsli:raw="The zero-based column ordinal.">从零开始的列序号。</param>
      <exception cref="T:System.IndexOutOfRangeException" vsli:raw="The column index is out of range.">列索引超出范围。</exception>
      <exception cref="T:System.InvalidCastException" vsli:raw="The specified cast is not valid.">指定的强制转换无效。</exception>
      <returns vsli:raw="The value of the specified column.">指定列的值。</returns>
    </member>
    <member name="M:System.Data.Common.DbDataReader.GetByte(System.Int32)">
      <summary vsli:raw="When overridden in a derived class, gets the value of the specified column as a byte.">在派生类中重写时，以字节形式获取指定列的值。</summary>
      <param name="ordinal" vsli:raw="The zero-based column ordinal.">从零开始的列序号。</param>
      <exception cref="T:System.IndexOutOfRangeException" vsli:raw="The column index is out of range.">列索引超出范围。</exception>
      <exception cref="T:System.InvalidCastException" vsli:raw="The specified cast is not valid.">指定的强制转换无效。</exception>
      <returns vsli:raw="The value of the specified column.">指定列的值。</returns>
    </member>
    <member name="M:System.Data.Common.DbDataReader.GetBytes(System.Int32,System.Int64,System.Byte[],System.Int32,System.Int32)">
      <summary vsli:raw="When overridden in a derived class, reads a specified number of bytes from the specified column starting at a specified index and writes them to a buffer starting at a specified position in the buffer.">在派生类中重写时，从指定列中指定索引处开始读取指定数量的字节，并从缓冲区的指定位置开始将其写入缓冲区中。</summary>
      <param name="ordinal" vsli:raw="The zero-based column ordinal.">从零开始的列序号。</param>
      <param name="dataOffset" vsli:raw="The index within the row from which to begin the read operation.">行中作为读取操作起始位置的索引。</param>
      <param name="buffer" vsli:raw="The buffer into which to copy the data.">要将数据复制到的缓冲区。</param>
      <param name="bufferOffset" vsli:raw="The index with the buffer to which the data will be copied.">要将数据复制到的位置的缓冲区索引。</param>
      <param name="length" vsli:raw="The maximum number of bytes to read.">最多读取的字节数。</param>
      <exception cref="T:System.IndexOutOfRangeException" vsli:raw="The column index is out of range.">列索引超出范围。</exception>
      <exception cref="T:System.InvalidCastException" vsli:raw="The specified cast is not valid.">指定的强制转换无效。</exception>
      <returns vsli:raw="The actual number of bytes read.">读取的实际字节数。</returns>
    </member>
    <member name="M:System.Data.Common.DbDataReader.GetChar(System.Int32)">
      <summary vsli:raw="When overridden in a derived class, gets the value of the specified column as a single character.">在派生类中重写时，以单个字符的形式获取指定列的值。</summary>
      <param name="ordinal" vsli:raw="The zero-based column ordinal.">从零开始的列序号。</param>
      <exception cref="T:System.IndexOutOfRangeException" vsli:raw="The column index is out of range.">列索引超出范围。</exception>
      <exception cref="T:System.InvalidCastException" vsli:raw="The specified cast is not valid.">指定的强制转换无效。</exception>
      <returns vsli:raw="The value of the specified column.">指定列的值。</returns>
    </member>
    <member name="M:System.Data.Common.DbDataReader.GetChars(System.Int32,System.Int64,System.Char[],System.Int32,System.Int32)">
      <summary vsli:raw="When overridden in a derived class, reads a specified number of characters from a specified column starting at a specified index, and writes them to a buffer starting at a specified position.">在派生类中重写时，从指定列中指定索引处开始读取指定数量的字符，并从缓冲区的指定位置开始将其写入缓冲区中。</summary>
      <param name="ordinal" vsli:raw="The zero-based column ordinal.">从零开始的列序号。</param>
      <param name="dataOffset" vsli:raw="The index within the row from which to begin the read operation.">行中作为读取操作起始位置的索引。</param>
      <param name="buffer" vsli:raw="The buffer into which to copy the data.">要将数据复制到的缓冲区。</param>
      <param name="bufferOffset" vsli:raw="The index with the buffer to which the data will be copied.">要将数据复制到的位置的缓冲区索引。</param>
      <param name="length" vsli:raw="The maximum number of characters to read.">最多读取的字符数。</param>
      <returns vsli:raw="The actual number of characters read.">读取的实际字符数。</returns>
    </member>
    <member name="M:System.Data.Common.DbDataReader.GetColumnSchemaAsync(System.Threading.CancellationToken)">
      <summary vsli:raw="This is the asynchronous version of &lt;see cref=&quot;M:System.Data.Common.DbDataReaderExtensions.GetColumnSchema(System.Data.Common.DbDataReader)&quot; /&gt;.&#xA;            Providers should override with an appropriate implementation.&#xA;            The &lt;paramref name=&quot;cancellationToken&quot; /&gt; can optionally be honored.&#xA;            The default implementation invokes the synchronous &lt;see cref=&quot;M:System.Data.Common.DbDataReaderExtensions.GetColumnSchema(System.Data.Common.DbDataReader)&quot; /&gt; call and returns a completed task.&#xA;            The default implementation will return a cancelled task if passed an already cancelled &lt;paramref name=&quot;cancellationToken&quot; /&gt;.&#xA;            Exceptions thrown by &lt;see cref=&quot;M:System.Data.Common.DbDataReaderExtensions.GetColumnSchema(System.Data.Common.DbDataReader)&quot; /&gt; will be communicated via the returned Task Exception property.">这是 <see cref="M:System.Data.Common.DbDataReaderExtensions.GetColumnSchema(System.Data.Common.DbDataReader)" /> 的异步版本。
提供程序应使用合适的实现进行重写。
可以选择接受 <paramref name="cancellationToken" />。
默认实现调用同步 <see cref="M:System.Data.Common.DbDataReaderExtensions.GetColumnSchema(System.Data.Common.DbDataReader)" /> 调用并返回已完成任务。
如果传递到已取消 <paramref name="cancellationToken" />，则默认实现将返回已取消的任务。
<see cref="M:System.Data.Common.DbDataReaderExtensions.GetColumnSchema(System.Data.Common.DbDataReader)" /> 引发的异常将通过任务异常属性传递。</summary>
      <param name="cancellationToken" vsli:raw="The cancellation instruction.">取消指令。</param>
      <returns vsli:raw="A task representing the asynchronous operation.">表示异步操作的任务。</returns>
    </member>
    <member name="M:System.Data.Common.DbDataReader.GetData(System.Int32)">
      <summary vsli:raw="Returns a nested data reader for the requested column.">返回所请求列的嵌套数据读取器。</summary>
      <param name="ordinal" vsli:raw="The zero-based column ordinal.">从零开始的列序号。</param>
      <exception cref="T:System.IndexOutOfRangeException" vsli:raw="The column index is out of range.">列索引超出范围。</exception>
      <returns vsli:raw="A data reader.">数据读取器。</returns>
    </member>
    <member name="M:System.Data.Common.DbDataReader.GetDataTypeName(System.Int32)">
      <summary vsli:raw="When overridden in a derived class, gets name of the data type of the specified column.">在派生类中重写时，获取指定列的数据类型的名称。</summary>
      <param name="ordinal" vsli:raw="The zero-based column ordinal.">从零开始的列序号。</param>
      <exception cref="T:System.IndexOutOfRangeException" vsli:raw="The column index is out of range.">列索引超出范围。</exception>
      <returns vsli:raw="The name of the data type.">数据类型的名称。</returns>
    </member>
    <member name="M:System.Data.Common.DbDataReader.GetDateTime(System.Int32)">
      <summary vsli:raw="When overridden in a derived class, gets the value of the specified column as a &lt;see cref=&quot;T:System.DateTime&quot; /&gt; object.">在派生类中重写时，以 <see cref="T:System.DateTime" /> 对象的形式获取指定列的值。</summary>
      <param name="ordinal" vsli:raw="The zero-based column ordinal.">从零开始的列序号。</param>
      <exception cref="T:System.IndexOutOfRangeException" vsli:raw="The column index is out of range.">列索引超出范围。</exception>
      <exception cref="T:System.InvalidCastException" vsli:raw="The specified cast is not valid.">指定的强制转换无效。</exception>
      <returns vsli:raw="The value of the specified column.">指定列的值。</returns>
    </member>
    <member name="M:System.Data.Common.DbDataReader.GetDbDataReader(System.Int32)">
      <summary vsli:raw="Returns a &lt;see cref=&quot;T:System.Data.Common.DbDataReader&quot; /&gt; object for the requested column ordinal that can be overridden with a provider-specific implementation.">返回被请求的列序号的 <see cref="T:System.Data.Common.DbDataReader" /> 对象，可以使用提供程序特定的实现对该对象进行重写。</summary>
      <param name="ordinal" vsli:raw="The zero-based column ordinal.">从零开始的列序号。</param>
      <returns vsli:raw="A &lt;see cref=&quot;T:System.Data.Common.DbDataReader&quot; /&gt; object.">
        <see cref="T:System.Data.Common.DbDataReader" /> 对象。</returns>
    </member>
    <member name="M:System.Data.Common.DbDataReader.GetDecimal(System.Int32)">
      <summary vsli:raw="When overridden in a derived class, gets the value of the specified column as a &lt;see cref=&quot;T:System.Decimal&quot; /&gt;.">在派生类中重写时，以 <see cref="T:System.Decimal" /> 的形式获取指定列的值。</summary>
      <param name="ordinal" vsli:raw="The zero-based column ordinal.">从零开始的列序号。</param>
      <exception cref="T:System.IndexOutOfRangeException" vsli:raw="The column index is out of range.">列索引超出范围。</exception>
      <exception cref="T:System.InvalidCastException" vsli:raw="The specified cast is not valid.">指定的强制转换无效。</exception>
      <returns vsli:raw="The value of the specified column.">指定列的值。</returns>
    </member>
    <member name="M:System.Data.Common.DbDataReader.GetDouble(System.Int32)">
      <summary vsli:raw="When overridden in a derived class, gets the value of the specified column as a double-precision floating point number.">在派生类中重写时，以双精度浮点数的形式获取指定列的值。</summary>
      <param name="ordinal" vsli:raw="The zero-based column ordinal.">从零开始的列序号。</param>
      <exception cref="T:System.InvalidCastException" vsli:raw="The specified cast is not valid.">指定的强制转换无效。</exception>
      <returns vsli:raw="The value of the specified column.">指定列的值。</returns>
    </member>
    <member name="M:System.Data.Common.DbDataReader.GetEnumerator">
      <summary vsli:raw="When overridden in a derived class, returns an enumerator that can be used to iterate through the rows in the data reader.">当在派生类中重写时，返回一个枚举器，可用于循环访问数据读取器中的行。</summary>
      <returns vsli:raw="An enumerator that can be used to iterate through the rows in the data reader.">一个枚举器，可用于循环访问数据读取器中的行。</returns>
    </member>
    <member name="M:System.Data.Common.DbDataReader.GetFieldType(System.Int32)">
      <summary vsli:raw="When overridden in a derived class, gets the data type of the specified column.">在派生类中重写时，获取指定列的数据类型。</summary>
      <param name="ordinal" vsli:raw="The zero-based column ordinal.">从零开始的列序号。</param>
      <exception cref="T:System.IndexOutOfRangeException" vsli:raw="The column index is out of range.">列索引超出范围。</exception>
      <exception cref="T:System.InvalidCastException" vsli:raw="The specified cast is not valid.">指定的强制转换无效。</exception>
      <returns vsli:raw="The data type of the specified column.">指定列的数据类型。</returns>
    </member>
    <member name="M:System.Data.Common.DbDataReader.GetFieldValue``1(System.Int32)">
      <summary vsli:raw="Gets the value of the specified column as the requested type.">获取指定列的值作为请求的类型。</summary>
      <param name="ordinal" vsli:raw="The zero-based column ordinal.">从零开始的列序号。</param>
      <typeparam name="T" vsli:raw="The type of the value to be returned.">要返回的值的类型。</typeparam>
      <exception cref="T:System.InvalidOperationException" vsli:raw="The connection was dropped or closed during data retrieval.  &#xA;&#xA;-or-&#xA;  &#xA; The data reader was closed during data retrieval.  &#xA;  &#xA;-or-&#xA;&#xA; There is no data ready to be read (for example, the first &lt;see cref=&quot;M:System.Data.Common.DbDataReader.Read&quot; /&gt; hasn't been called, or it returned &lt;see langword=&quot;false&quot; /&gt;).  &#xA;&#xA;-or-&#xA;&#xA; The reader tried to read a previously-read column in sequential mode.  &#xA;&#xA;-or-&#xA;&#xA; There was an asynchronous operation in progress. This applies to all Get* methods when running in sequential mode, as they could be called while reading a stream.">在数据检索期间删除或关闭连接。  

- 或 - 
在数据检索期间关闭数据读取器。  
  
- 或 -

没有可读取的数据（例如尚未调用第一个 <see cref="M:System.Data.Common.DbDataReader.Read" />，或调用返回了 <see langword="false" />）。  

- 或 -

读取器试图按顺序模式读取曾读取的列。  

- 或 -

没有正在进行的异步操作。 以顺序模式运行时，这适用于所有 Get* 方法，读取流时也可对其进行调用。</exception>
      <exception cref="T:System.IndexOutOfRangeException" vsli:raw="The column index is out of range.">列索引超出范围。</exception>
      <exception cref="T:System.InvalidCastException" vsli:raw="The value returned by the database doesn't match or cannot be cast to &lt;typeparamref name=&quot;T&quot; /&gt;.">数据库返回的值不匹配或不能转换为 <typeparamref name="T" />。</exception>
      <returns vsli:raw="The value of the specified column.">指定列的值。</returns>
    </member>
    <member name="M:System.Data.Common.DbDataReader.GetFieldValueAsync``1(System.Int32)">
      <summary vsli:raw="Asynchronously gets the value of the specified column as the requested type.">异步获取指定列的值作为请求的类型。</summary>
      <param name="ordinal" vsli:raw="The zero-based column ordinal.">从零开始的列序号。</param>
      <typeparam name="T" vsli:raw="The type of the value to be returned.">要返回的值的类型。</typeparam>
      <exception cref="T:System.InvalidOperationException" vsli:raw="The connection was dropped or closed during data retrieval.  &#xA;  &#xA;-or-&#xA;&#xA; The data reader was closed during the data retrieval.  &#xA;&#xA;-or-&#xA;&#xA; There is no data ready to be read (for example, the first &lt;see cref=&quot;M:System.Data.Common.DbDataReader.Read&quot; /&gt; hasn't been called, or it returned &lt;see langword=&quot;false&quot; /&gt;).&#xA;&#xA;-or-&#xA;&#xA; Tried to read a previously-read column in sequential mode.  &#xA;&#xA;-or-&#xA;&#xA; There was an asynchronous operation in progress. This applies to all Get_*_ methods when running in sequential mode, as they could be called while reading a stream.">在数据检索期间删除或关闭连接。  
  
- 或 -

在数据检索期间关闭数据读取器。  

- 或 -

没有可读取的数据（例如尚未调用第一个 <see cref="M:System.Data.Common.DbDataReader.Read" />，或调用返回了 <see langword="false" />）。

- 或 -

按顺序模式尝试读取上一步骤中读取的列。  

- 或 -

没有正在进行的异步操作。 以顺序模式运行时，这适用于所有 Get_*_ 方法，读取流时也可对其进行调用。</exception>
      <exception cref="T:System.IndexOutOfRangeException" vsli:raw="The column index is out of range.">列索引超出范围。</exception>
      <exception cref="T:System.InvalidCastException" vsli:raw="The value returned by the database doesn't match or cannot be cast to &lt;typeparamref name=&quot;T&quot; /&gt;.">数据库返回的值不匹配或不能转换为 <typeparamref name="T" />。</exception>
      <returns vsli:raw="A task whose &lt;see cref=&quot;P:System.Threading.Tasks.Task`1.Result&quot; /&gt; contains the value of the specified column.">
        <see cref="P:System.Threading.Tasks.Task`1.Result" /> 包含指定列的值的任务。</returns>
    </member>
    <member name="M:System.Data.Common.DbDataReader.GetFieldValueAsync``1(System.Int32,System.Threading.CancellationToken)">
      <summary vsli:raw="Asynchronously gets the value of the specified column as the requested type.">异步获取指定列的值作为请求的类型。</summary>
      <param name="ordinal" vsli:raw="The zero-based column ordinal.">从零开始的列序号。</param>
      <param name="cancellationToken" vsli:raw="A token to cancel the asynchronous operation.">用于取消异步操作的令牌。</param>
      <typeparam name="T" vsli:raw="The type of the value to be returned.">要返回的值的类型。</typeparam>
      <exception cref="T:System.InvalidOperationException" vsli:raw="The connection was dropped or closed during data retrieval.  &#xA;  &#xA;-or-&#xA;&#xA; The data reader was closed during the data retrieval.  &#xA;&#xA;-or-&#xA;&#xA; There is no data ready to be read (for example, the first &lt;see cref=&quot;M:System.Data.Common.DbDataReader.Read&quot; /&gt; hasn't been called, or it returned &lt;see langword=&quot;false&quot; /&gt;).&#xA;&#xA;-or-&#xA;&#xA; Tried to read a previously-read column in sequential mode.  &#xA;&#xA;-or-&#xA;&#xA; There was an asynchronous operation in progress. This applies to all Get_*_ methods when running in sequential mode, as they could be called while reading a stream.">在数据检索期间删除或关闭连接。  
  
- 或 -

在数据检索期间关闭数据读取器。  

- 或 -

没有可读取的数据（例如尚未调用第一个 <see cref="M:System.Data.Common.DbDataReader.Read" />，或调用返回了 <see langword="false" />）。

- 或 -

按顺序模式尝试读取上一步骤中读取的列。  

- 或 -

没有正在进行的异步操作。 以顺序模式运行时，这适用于所有 Get_*_ 方法，读取流时也可对其进行调用。</exception>
      <exception cref="T:System.IndexOutOfRangeException" vsli:raw="The column index is out of range.">列索引超出范围。</exception>
      <exception cref="T:System.InvalidCastException" vsli:raw="The value returned by the database doesn't match or cannot be cast to &lt;typeparamref name=&quot;T&quot; /&gt;.">数据库返回的值不匹配或不能转换为 <typeparamref name="T" />。</exception>
      <returns vsli:raw="A task whose &lt;see cref=&quot;P:System.Threading.Tasks.Task`1.Result&quot; /&gt; contains the value of the specified column.">
        <see cref="P:System.Threading.Tasks.Task`1.Result" /> 包含指定列的值的任务。</returns>
    </member>
    <member name="M:System.Data.Common.DbDataReader.GetFloat(System.Int32)">
      <summary vsli:raw="When overridden in a derived class, gets the value of the specified column as a single-precision floating point number.">在派生类中重写时，以单精度浮点数的形式获取指定列的值。</summary>
      <param name="ordinal" vsli:raw="The zero-based column ordinal.">从零开始的列序号。</param>
      <exception cref="T:System.IndexOutOfRangeException" vsli:raw="The column index is out of range.">列索引超出范围。</exception>
      <exception cref="T:System.InvalidCastException" vsli:raw="The specified cast is not valid.">指定的强制转换无效。</exception>
      <returns vsli:raw="The value of the specified column.">指定列的值。</returns>
    </member>
    <member name="M:System.Data.Common.DbDataReader.GetGuid(System.Int32)">
      <summary vsli:raw="When overridden in a derived class, gets the value of the specified column as a globally unique identifier (GUID).">在派生类中重写时，以全局唯一标识符 (GUID) 的形式获取指定列的值。</summary>
      <param name="ordinal" vsli:raw="The zero-based column ordinal.">从零开始的列序号。</param>
      <exception cref="T:System.IndexOutOfRangeException" vsli:raw="The column index is out of range.">列索引超出范围。</exception>
      <exception cref="T:System.InvalidCastException" vsli:raw="The specified cast is not valid.">指定的强制转换无效。</exception>
      <returns vsli:raw="The value of the specified column.">指定列的值。</returns>
    </member>
    <member name="M:System.Data.Common.DbDataReader.GetInt16(System.Int32)">
      <summary vsli:raw="When overridden in a derived class, gets the value of the specified column as a 16-bit signed integer.">在派生类中重写时，以 16 位带符号整数的形式获取指定列的值。</summary>
      <param name="ordinal" vsli:raw="The zero-based column ordinal.">从零开始的列序号。</param>
      <exception cref="T:System.IndexOutOfRangeException" vsli:raw="The column index is out of range.">列索引超出范围。</exception>
      <exception cref="T:System.InvalidCastException" vsli:raw="The specified cast is not valid.">指定的强制转换无效。</exception>
      <returns vsli:raw="The value of the specified column.">指定列的值。</returns>
    </member>
    <member name="M:System.Data.Common.DbDataReader.GetInt32(System.Int32)">
      <summary vsli:raw="When overridden in a derived class, gets the value of the specified column as a 32-bit signed integer.">在派生类中重写时，以 32 位带符号整数的形式获取指定列的值。</summary>
      <param name="ordinal" vsli:raw="The zero-based column ordinal.">从零开始的列序号。</param>
      <exception cref="T:System.IndexOutOfRangeException" vsli:raw="The column index is out of range.">列索引超出范围。</exception>
      <exception cref="T:System.InvalidCastException" vsli:raw="The specified cast is not valid.">指定的强制转换无效。</exception>
      <returns vsli:raw="The value of the specified column.">指定列的值。</returns>
    </member>
    <member name="M:System.Data.Common.DbDataReader.GetInt64(System.Int32)">
      <summary vsli:raw="When overridden in a derived class, gets the value of the specified column as a 64-bit signed integer.">在派生类中重写时，以 64 位带符号整数的形式获取指定列的值。</summary>
      <param name="ordinal" vsli:raw="The zero-based column ordinal.">从零开始的列序号。</param>
      <exception cref="T:System.IndexOutOfRangeException" vsli:raw="The column index is out of range.">列索引超出范围。</exception>
      <exception cref="T:System.InvalidCastException" vsli:raw="The specified cast is not valid.">指定的强制转换无效。</exception>
      <returns vsli:raw="The value of the specified column.">指定列的值。</returns>
    </member>
    <member name="M:System.Data.Common.DbDataReader.GetName(System.Int32)">
      <summary vsli:raw="When overridden in a derived class, gets the name of the column, given the zero-based column ordinal.">在派生类中重写时，获取列的名称，前提是列的序号是从零开始的。</summary>
      <param name="ordinal" vsli:raw="The zero-based column ordinal.">从零开始的列序号。</param>
      <returns vsli:raw="The name of the specified column.">指定列的名称。</returns>
    </member>
    <member name="M:System.Data.Common.DbDataReader.GetOrdinal(System.String)">
      <summary vsli:raw="When overridden in a derived class, gets the column ordinal given the name of the column.">在派生类中重写时，在给定了列名称的情况下，获取列序号。</summary>
      <param name="name" vsli:raw="The name of the column.">列的名称。</param>
      <exception cref="T:System.IndexOutOfRangeException" vsli:raw="The name specified is not a valid column name.">指定的名称不是有效的列名。</exception>
      <returns vsli:raw="The zero-based column ordinal.">从零开始的列序号。</returns>
    </member>
    <member name="M:System.Data.Common.DbDataReader.GetProviderSpecificFieldType(System.Int32)">
      <summary vsli:raw="Gets the provider-specific type of the specified column.">获取指定列的特定于提供程序的类型。</summary>
      <param name="ordinal" vsli:raw="The zero-based column ordinal.">从零开始的列序号。</param>
      <exception cref="T:System.IndexOutOfRangeException" vsli:raw="The column index is out of range.">列索引超出范围。</exception>
      <returns vsli:raw="A provider-specific .NET type.">特定于提供程序的 .NET 类型。</returns>
    </member>
    <member name="M:System.Data.Common.DbDataReader.GetProviderSpecificValue(System.Int32)">
      <summary vsli:raw="Gets the value of the specified column as an instance of a provider-specific type.">以特定于提供程序的类型实例的形式获取指定列的值。</summary>
      <param name="ordinal" vsli:raw="The zero-based column ordinal.">从零开始的列序号。</param>
      <returns vsli:raw="The value of the specified column.">指定列的值。</returns>
    </member>
    <member name="M:System.Data.Common.DbDataReader.GetProviderSpecificValues(System.Object[])">
      <summary vsli:raw="Gets all provider-specific attribute columns in the collection for the current row.">在当前行的集合中获取提供程序特定的所有属性列。</summary>
      <param name="values" vsli:raw="An array of &lt;see cref=&quot;T:System.Object&quot; /&gt; into which to copy the attribute columns.">要将属性列复制到的 <see cref="T:System.Object" /> 数组。</param>
      <returns vsli:raw="The number of instances of elements in the array.">数组中元素的实例数。</returns>
    </member>
    <member name="M:System.Data.Common.DbDataReader.GetSchemaTable">
      <summary vsli:raw="Returns a &lt;see cref=&quot;T:System.Data.DataTable&quot; /&gt; that describes the column metadata of the &lt;see cref=&quot;T:System.Data.Common.DbDataReader&quot; /&gt;.&#xA;Returns &lt;see langword=&quot;null&quot; /&gt; if the executed command returned no resultset, or after &lt;see cref=&quot;M:System.Data.Common.DbDataReader.NextResult&quot; /&gt; returns &lt;see langword=&quot;false&quot; /&gt;.">返回一个 <see cref="T:System.Data.DataTable" />，它描述 <see cref="T:System.Data.Common.DbDataReader" /> 的列元数据。</summary>
      <exception cref="T:System.InvalidOperationException" vsli:raw="The &lt;see cref=&quot;T:System.Data.Common.DbDataReader&quot; /&gt; is closed.">
        <see cref="T:System.Data.Common.DbDataReader" /> 是关闭的。</exception>
      <exception cref="T:System.IndexOutOfRangeException" vsli:raw="The column index is out of range.">列索引超出范围。</exception>
      <exception cref="T:System.NotSupportedException" vsli:raw=".NET Core and .NET 5+ only: In all cases.">仅限 .NET Core：不支持此成员。</exception>
      <returns vsli:raw="A &lt;see cref=&quot;T:System.Data.DataTable&quot; /&gt; that describes the column metadata.">一个描述列元数据的 <see cref="T:System.Data.DataTable" />。</returns>
    </member>
    <member name="M:System.Data.Common.DbDataReader.GetSchemaTableAsync(System.Threading.CancellationToken)">
      <summary vsli:raw="This is the asynchronous version of &lt;see cref=&quot;M:System.Data.Common.DbDataReader.GetSchemaTable&quot; /&gt;.&#xA;            Providers should override with an appropriate implementation.&#xA;            The &lt;paramref name=&quot;cancellationToken&quot; /&gt; can optionally be honored.&#xA;            The default implementation invokes the synchronous &lt;see cref=&quot;M:System.Data.Common.DbDataReader.GetSchemaTable&quot; /&gt; call and returns a completed task.&#xA;            The default implementation will return a cancelled task if passed an already cancelled &lt;paramref name=&quot;cancellationToken&quot; /&gt;.&#xA;            Exceptions thrown by &lt;see cref=&quot;M:System.Data.Common.DbDataReader.GetSchemaTable&quot; /&gt; will be communicated via the returned Task Exception property.">这是 <see cref="M:System.Data.Common.DbDataReader.GetSchemaTable" /> 的异步版本。
提供程序应使用合适的实现进行重写。
可以选择接受 <paramref name="cancellationToken" />。
默认实现调用同步 <see cref="M:System.Data.Common.DbDataReader.GetSchemaTable" /> 调用并返回已完成任务。
如果传递到已取消 <paramref name="cancellationToken" />，则默认实现将返回已取消的任务。
<see cref="M:System.Data.Common.DbDataReader.GetSchemaTable" /> 引发的异常将通过任务异常属性传递。</summary>
      <param name="cancellationToken" vsli:raw="The cancellation instruction.">取消指令。</param>
      <returns vsli:raw="A task representing the asynchronous operation.">表示异步操作的任务。</returns>
    </member>
    <member name="M:System.Data.Common.DbDataReader.GetStream(System.Int32)">
      <summary vsli:raw="Gets a stream to retrieve data from the specified column.">获取从指定列检索数据的流。</summary>
      <param name="ordinal" vsli:raw="The zero-based column ordinal.">从零开始的列序号。</param>
      <exception cref="T:System.InvalidOperationException" vsli:raw="The connection was dropped or closed during the data retrieval.  &#xA;  &#xA;-or-&#xA;&#xA; The data reader is closed during the data retrieval.  &#xA;&#xA;-or-&#xA;&#xA; There is no data ready to be read (for example, the first &lt;see cref=&quot;M:System.Data.Common.DbDataReader.Read&quot; /&gt; hasn't been called, or returned false).  &#xA;&#xA;-or-&#xA;&#xA; The data reader tried to read a previously-read column in sequential mode.  &#xA;&#xA;-or-&#xA;&#xA; There was an asynchronous operation in progress. This applies to all Get* methods when running in sequential mode, as they could be called while reading a stream.">在数据检索期间删除或关闭连接。  
  
- 或 -

在数据检索期间关闭数据读取器。  

- 或 -

没有要读取的就绪数据 (例如，第一个 <see cref="M:System.Data.Common.DbDataReader.Read" /> 未被调用或返回错误)。  

- 或 -

数据读取器按顺序模式尝试读取上一步骤中读取的列。  

- 或 -

没有正在进行的异步操作。 以顺序模式运行时，这适用于所有 Get* 方法，读取流时也可对其进行调用。</exception>
      <exception cref="T:System.IndexOutOfRangeException" vsli:raw="The column index is out of range.">列索引超出范围。</exception>
      <exception cref="T:System.InvalidCastException" vsli:raw="The specified column isn't a binary type that supports reading with a &lt;see cref=&quot;T:System.IO.Stream&quot; /&gt;.">指定的列不是支持用 <see cref="T:System.IO.Stream" /> 读取的二进制类型。</exception>
      <returns vsli:raw="A stream.">一个流。</returns>
    </member>
    <member name="M:System.Data.Common.DbDataReader.GetString(System.Int32)">
      <summary vsli:raw="When overridden in a derived class, gets the value of the specified column as an instance of &lt;see cref=&quot;T:System.String&quot; /&gt;.">在派生类中重写时，以 <see cref="T:System.String" /> 实例的形式获取指定列的值。</summary>
      <param name="ordinal" vsli:raw="The zero-based column ordinal.">从零开始的列序号。</param>
      <exception cref="T:System.IndexOutOfRangeException" vsli:raw="The column index is out of range.">列索引超出范围。</exception>
      <exception cref="T:System.InvalidCastException" vsli:raw="The specified cast is not valid.">指定的强制转换无效。</exception>
      <returns vsli:raw="The value of the specified column.">指定列的值。</returns>
    </member>
    <member name="M:System.Data.Common.DbDataReader.GetTextReader(System.Int32)">
      <summary vsli:raw="Gets a text reader to retrieve data from the column.">获取文本读取器以从列中检索数据。</summary>
      <param name="ordinal" vsli:raw="The zero-based column ordinal.">从零开始的列序号。</param>
      <exception cref="T:System.InvalidOperationException" vsli:raw="The connection was dropped or closed during the data retrieval.  &#xA;  &#xA;-or-&#xA;&#xA; The data reader is closed during the data retrieval.  &#xA;&#xA;-or-&#xA;&#xA; There is no data ready to be read (for example, the first &lt;see cref=&quot;M:System.Data.Common.DbDataReader.Read&quot; /&gt; hasn't been called, or returned false).  &#xA;&#xA;-or-&#xA;&#xA; The data reader tried to read a previously-read column in sequential mode.  &#xA;&#xA;-or-&#xA;&#xA; There was an asynchronous operation in progress. This applies to all Get* methods when running in sequential mode, as they could be called while reading a stream.">在数据检索期间删除或关闭连接。  
  
- 或 -

在数据检索期间关闭数据读取器。  

- 或 -

没有要读取的就绪数据 (例如，第一个 <see cref="M:System.Data.Common.DbDataReader.Read" /> 未被调用或返回错误)。  

- 或 -

数据读取器按顺序模式尝试读取上一步骤中读取的列。  

- 或 -

没有正在进行的异步操作。 以顺序模式运行时，这适用于所有 Get* 方法，读取流时也可对其进行调用。</exception>
      <exception cref="T:System.IndexOutOfRangeException" vsli:raw="The column index is out of range.">列索引超出范围。</exception>
      <exception cref="T:System.InvalidCastException" vsli:raw="The specified column isn't a text type that supports reading with a &lt;see cref=&quot;T:System.IO.TextReader&quot; /&gt;.">指定的列不是支持用 <see cref="T:System.IO.TextReader" /> 读取的文本类型。</exception>
      <returns vsli:raw="A text reader.">文本读取器。</returns>
    </member>
    <member name="M:System.Data.Common.DbDataReader.GetValue(System.Int32)">
      <summary vsli:raw="When overridden in a derived class, gets the value of the specified column as an instance of &lt;see cref=&quot;T:System.Object&quot; /&gt;.">在派生类中重写时，以 <see cref="T:System.Object" /> 实例的形式获取指定列的值。</summary>
      <param name="ordinal" vsli:raw="The zero-based column ordinal.">从零开始的列序号。</param>
      <exception cref="T:System.IndexOutOfRangeException" vsli:raw="The column index is out of range.">列索引超出范围。</exception>
      <returns vsli:raw="The value of the specified column.">指定列的值。</returns>
    </member>
    <member name="M:System.Data.Common.DbDataReader.GetValues(System.Object[])">
      <summary vsli:raw="When overridden in a derived class, populates an array of objects with the column values of the current row.">在派生类中重写时，使用当前行的列值来填充对象数组。</summary>
      <param name="values" vsli:raw="An array of &lt;see cref=&quot;T:System.Object&quot; /&gt; into which to copy the attribute columns.">要将属性列复制到的 <see cref="T:System.Object" /> 数组。</param>
      <returns vsli:raw="The number of instances of &lt;see cref=&quot;T:System.Object&quot; /&gt; in the array.">数组中 <see cref="T:System.Object" /> 的实例的数目。</returns>
    </member>
    <member name="M:System.Data.Common.DbDataReader.IsDBNull(System.Int32)">
      <summary vsli:raw="When overridden in a derived class, gets a value that indicates whether the column contains nonexistent or missing values.">在派生类中重写时，获取一个值，该值指示列中是否包含不存在或丢失的值。</summary>
      <param name="ordinal" vsli:raw="The zero-based column ordinal.">从零开始的列序号。</param>
      <exception cref="T:System.IndexOutOfRangeException" vsli:raw="The column index is out of range.">列索引超出范围。</exception>
      <returns vsli:raw="&lt;see langword=&quot;true&quot; /&gt; if the specified column is equivalent to &lt;see cref=&quot;T:System.DBNull&quot; /&gt;; otherwise, &lt;see langword=&quot;false&quot; /&gt;.">如果指定的列与 <see cref="T:System.DBNull" /> 等效，则为 <see langword="true" />；否则，为 <see langword="false" />。</returns>
    </member>
    <member name="M:System.Data.Common.DbDataReader.IsDBNullAsync(System.Int32)">
      <summary vsli:raw="Asynchronously gets a value that indicates whether the column contains non-existent or missing values.">异步获取一个值，该值指示列中是否包含不存在的或缺少的值。</summary>
      <param name="ordinal" vsli:raw="The zero-based column to be retrieved.">从零开始的要检索的列。</param>
      <exception cref="T:System.InvalidOperationException" vsli:raw="The connection was dropped or closed during the data retrieval.  &#xA;  &#xA;-or-&#xA;&#xA; The data reader is closed during the data retrieval.  &#xA;&#xA;-or-&#xA;&#xA; There is no data ready to be read (for example, the first &lt;see cref=&quot;M:System.Data.Common.DbDataReader.Read&quot; /&gt; hasn't been called, or returned false).  &#xA;&#xA;-or-&#xA;&#xA; Trying to read a previously read column in sequential mode.  &#xA;&#xA;-or-&#xA;&#xA; There was an asynchronous operation in progress. This applies to all Get* methods when running in sequential mode, as they could be called while reading a stream.">在数据检索期间删除或关闭连接。  
  
- 或 -

在数据检索期间关闭数据读取器。  

- 或 -

没有要读取的就绪数据 (例如，第一个 <see cref="M:System.Data.Common.DbDataReader.Read" /> 未被调用或返回错误)。  

- 或 -

按顺序模式尝试读取上一步骤中读取的列。  

- 或 -

没有正在进行的异步操作。 以顺序模式运行时，这适用于所有 Get* 方法，读取流时也可对其进行调用。</exception>
      <exception cref="T:System.IndexOutOfRangeException" vsli:raw="The column index is out of range.">列索引超出范围。</exception>
      <returns vsli:raw="A &lt;see cref=&quot;T:System.Threading.Tasks.Task`1&quot; /&gt; whose &lt;see cref=&quot;P:System.Threading.Tasks.Task`1.Result&quot; /&gt; property is &lt;see langword=&quot;true&quot; /&gt; if the specified column value is equivalent to &lt;see langword=&quot;DBNull&quot; /&gt; or &lt;see langword=&quot;false&quot; /&gt; if it is not.">一个 <see cref="T:System.Threading.Tasks.Task`1" />，如果指定的列值等于 <see langword="DBNull" />，则其 <see cref="P:System.Threading.Tasks.Task`1.Result" /> 属性为 <see langword="true" />，如果不等于，则为 <see langword="false" />。</returns>
    </member>
    <member name="M:System.Data.Common.DbDataReader.IsDBNullAsync(System.Int32,System.Threading.CancellationToken)">
      <summary vsli:raw="Asynchronously gets a value that indicates whether the column contains non-existent or missing values.">异步获取一个值，该值指示列中是否包含不存在的或缺少的值。</summary>
      <param name="ordinal" vsli:raw="The zero-based column to be retrieved.">从零开始的要检索的列。</param>
      <param name="cancellationToken" vsli:raw="A token to cancel the asynchronous operation.">用于取消异步操作的令牌。</param>
      <exception cref="T:System.InvalidOperationException" vsli:raw="The connection was dropped or closed during the data retrieval.  &#xA;  &#xA;-or-&#xA;&#xA; The data reader is closed during the data retrieval.  &#xA;&#xA;-or-&#xA;&#xA; There is no data ready to be read (for example, the first &lt;see cref=&quot;M:System.Data.Common.DbDataReader.Read&quot; /&gt; hasn't been called, or returned false).  &#xA;&#xA;-or-&#xA;&#xA; Trying to read a previously read column in sequential mode.  &#xA;&#xA;-or-&#xA;  &#xA; There was an asynchronous operation in progress. This applies to all Get* methods when running in sequential mode, as they could be called while reading a stream.">在数据检索期间删除或关闭连接。  
  
- 或 -

在数据检索期间关闭数据读取器。  

- 或 -

没有要读取的就绪数据 (例如，第一个 <see cref="M:System.Data.Common.DbDataReader.Read" /> 未被调用或返回错误)。  

- 或 -

按顺序模式尝试读取上一步骤中读取的列。  

- 或 - 
没有正在进行的异步操作。 以顺序模式运行时，这适用于所有 Get* 方法，读取流时也可对其进行调用。</exception>
      <exception cref="T:System.IndexOutOfRangeException" vsli:raw="The column index is out of range.">列索引超出范围。</exception>
      <returns vsli:raw="A &lt;see cref=&quot;T:System.Threading.Tasks.Task`1&quot; /&gt; whose &lt;see cref=&quot;P:System.Threading.Tasks.Task`1.Result&quot; /&gt; property is &lt;see langword=&quot;true&quot; /&gt; if the specified column value is equivalent to &lt;see langword=&quot;DBNull&quot; /&gt; or &lt;see langword=&quot;false&quot; /&gt; if it is not.">一个 <see cref="T:System.Threading.Tasks.Task`1" />，如果指定的列值等于 <see langword="DBNull" />，则其 <see cref="P:System.Threading.Tasks.Task`1.Result" /> 属性为 <see langword="true" />，如果不等于，则为 <see langword="false" />。</returns>
    </member>
    <member name="M:System.Data.Common.DbDataReader.NextResult">
      <summary vsli:raw="When overridden in a derived class, advances the reader to the next result when reading the results of a batch of statements.">在派生类中重写时，在读取一批语句的结果时，使读取器前进到下一个结果。</summary>
      <returns vsli:raw="&lt;see langword=&quot;true&quot; /&gt; if there are more result sets; otherwise, &lt;see langword=&quot;false&quot; /&gt;.">如果存在多个结果集，则为 <see langword="true" />；否则为 <see langword="false" />。</returns>
    </member>
    <member name="M:System.Data.Common.DbDataReader.NextResultAsync">
      <summary vsli:raw="Asynchronously advances the reader to the next result when reading the results of a batch of statements.">在读取一批语句的结果时，使读取器异步前进到下一个结果。</summary>
      <exception cref="T:System.Data.Common.DbException" vsli:raw="An error occurred while executing the command text.">执行命令文本时出现的一个错误。</exception>
      <returns vsli:raw="A task whose &lt;see cref=&quot;P:System.Threading.Tasks.Task`1.Result&quot; /&gt; property is &lt;see langword=&quot;true&quot; /&gt; if there are more result sets or &lt;see langword=&quot;false&quot; /&gt; if there aren't.">一个任务，如果有更多的结果集，则其 <see cref="P:System.Threading.Tasks.Task`1.Result" /> 属性为 <see langword="true" />，如果没有，则为 <see langword="false" />。</returns>
    </member>
    <member name="M:System.Data.Common.DbDataReader.NextResultAsync(System.Threading.CancellationToken)">
      <summary vsli:raw="Asynchronously advances the reader to the next result when reading the results of a batch of statements.">在读取一批语句的结果时，使读取器异步前进到下一个结果。</summary>
      <param name="cancellationToken" vsli:raw="The cancellation instruction.">取消指令。</param>
      <exception cref="T:System.Data.Common.DbException" vsli:raw="An error occurred while executing the command text.">执行命令文本时出现的一个错误。</exception>
      <returns vsli:raw="A &lt;see cref=&quot;T:System.Threading.Tasks.Task`1&quot; /&gt; whose &lt;see cref=&quot;P:System.Threading.Tasks.Task`1.Result&quot; /&gt; property is &lt;see langword=&quot;true&quot; /&gt; if there are more result sets or &lt;see langword=&quot;false&quot; /&gt; if there aren't.">一个 <see cref="T:System.Threading.Tasks.Task`1" />，如果有更多的结果集，则其 <see cref="P:System.Threading.Tasks.Task`1.Result" /> 属性为 <see langword="true" />，如果没有，则为 <see langword="false" />。</returns>
    </member>
    <member name="M:System.Data.Common.DbDataReader.Read">
      <summary vsli:raw="When overridden in a derived class, advances the reader to the next record in a result set.">当在派生类中重写时，将读取器前移至结果集中的下一条记录。</summary>
      <returns vsli:raw="&lt;see langword=&quot;true&quot; /&gt; if there are more rows; otherwise, &lt;see langword=&quot;false&quot; /&gt;.">如果存在更多行，则为 <see langword="true" />；否则为 <see langword="false" />。</returns>
    </member>
    <member name="M:System.Data.Common.DbDataReader.ReadAsync">
      <summary vsli:raw="Asynchronously advances the reader to the next record in a result set.">使读取器异步前进到结果集中的下一条记录。</summary>
      <exception cref="T:System.Data.Common.DbException" vsli:raw="An error occurred while executing the command text.">执行命令文本时出现的一个错误。</exception>
      <returns vsli:raw="A &lt;see cref=&quot;T:System.Threading.Tasks.Task`1&quot; /&gt; whose &lt;see cref=&quot;P:System.Threading.Tasks.Task`1.Result&quot; /&gt; property is &lt;see langword=&quot;true&quot; /&gt; if there are more rows or &lt;see langword=&quot;false&quot; /&gt; if there aren't.">一个 <see cref="T:System.Threading.Tasks.Task`1" />，如果有更多的行，则其 <see cref="P:System.Threading.Tasks.Task`1.Result" /> 属性为 <see langword="true" />，如果没有，则为 <see langword="false" />。</returns>
    </member>
    <member name="M:System.Data.Common.DbDataReader.ReadAsync(System.Threading.CancellationToken)">
      <summary vsli:raw="Asynchronously advances the reader to the next record in a result set.">使读取器异步前进到结果集中的下一条记录。</summary>
      <param name="cancellationToken" vsli:raw="The cancellation instruction.">取消指令。</param>
      <exception cref="T:System.Data.Common.DbException" vsli:raw="An error occurred while executing the command text.">执行命令文本时出现的一个错误。</exception>
      <returns vsli:raw="A &lt;see cref=&quot;T:System.Threading.Tasks.Task`1&quot; /&gt; whose &lt;see cref=&quot;P:System.Threading.Tasks.Task`1.Result&quot; /&gt; property is &lt;see langword=&quot;true&quot; /&gt; if there are more rows or &lt;see langword=&quot;false&quot; /&gt; if there aren't.">一个 <see cref="T:System.Threading.Tasks.Task`1" />，如果有更多的行，则其 <see cref="P:System.Threading.Tasks.Task`1.Result" /> 属性为 <see langword="true" />，如果没有，则为 <see langword="false" />。</returns>
    </member>
    <member name="M:System.Data.Common.DbDataReader.System#Data#IDataRecord#GetData(System.Int32)">
      <summary vsli:raw="For a description of this member, see &lt;see cref=&quot;M:System.Data.IDataRecord.GetData(System.Int32)&quot; /&gt;.">有关此成员的说明，请参见 <see cref="M:System.Data.IDataRecord.GetData(System.Int32)" />。</summary>
      <param name="ordinal" vsli:raw="The zero-based column ordinal.">从零开始的列序号。</param>
      <returns vsli:raw="An instance of &lt;see cref=&quot;T:System.Data.IDataReader&quot; /&gt; to be used when the field points to more remote structured data.">在字段指向更多的远程结构化数据时使用的 <see cref="T:System.Data.IDataReader" /> 的实例。</returns>
    </member>
    <member name="P:System.Data.Common.DbDataReader.Depth">
      <summary vsli:raw="Gets a value indicating the depth of nesting for the current row.">获取一个值，该值指示当前行的嵌套深度。</summary>
      <returns vsli:raw="The depth of nesting for the current row.">当前行的嵌套深度。</returns>
    </member>
    <member name="P:System.Data.Common.DbDataReader.FieldCount">
      <summary vsli:raw="When overridden in a derived class, gets the number of columns in the current row.">在派生类中重写时，获取当前行中的列数。</summary>
      <exception cref="T:System.NotSupportedException" vsli:raw="There is no current connection to an instance of SQL Server.">没有对 SQL Server 实例的当前连接。</exception>
      <returns vsli:raw="The number of columns in the current row.">当前行中的列数。</returns>
    </member>
    <member name="P:System.Data.Common.DbDataReader.HasRows">
      <summary vsli:raw="When overridden in a derived class, gets a value that indicates whether this &lt;see cref=&quot;T:System.Data.Common.DbDataReader&quot; /&gt; contains one or more rows.">在派生类中重写时，获取一个值，该值指示此 <see cref="T:System.Data.Common.DbDataReader" /> 是包含一行还是多行。</summary>
      <returns vsli:raw="&lt;see langword=&quot;true&quot; /&gt; if the &lt;see cref=&quot;T:System.Data.Common.DbDataReader&quot; /&gt; contains one or more rows; otherwise, &lt;see langword=&quot;false&quot; /&gt;.">如果 <see cref="T:System.Data.Common.DbDataReader" /> 包含一行或多行，则为 <see langword="true" />；否则，为 <see langword="false" />。</returns>
    </member>
    <member name="P:System.Data.Common.DbDataReader.IsClosed">
      <summary vsli:raw="When overridden in a derived class, gets a value indicating whether the &lt;see cref=&quot;T:System.Data.Common.DbDataReader&quot; /&gt; is closed.">在派生类中重写时，获取一个值，该值指示 <see cref="T:System.Data.Common.DbDataReader" /> 是否关闭。</summary>
      <exception cref="T:System.InvalidOperationException" vsli:raw="The &lt;see cref=&quot;T:System.Data.Common.DbDataReader&quot; /&gt; is closed.">
        <see cref="T:System.Data.Common.DbDataReader" /> 是关闭的。</exception>
      <returns vsli:raw="&lt;see langword=&quot;true&quot; /&gt; if the &lt;see cref=&quot;T:System.Data.Common.DbDataReader&quot; /&gt; is closed; otherwise, &lt;see langword=&quot;false&quot; /&gt;.">如果 <see cref="T:System.Data.Common.DbDataReader" /> 已关闭，则为 <see langword="true" />；否则为 <see langword="false" />。</returns>
    </member>
    <member name="P:System.Data.Common.DbDataReader.Item(System.Int32)">
      <summary vsli:raw="When overridden in a derived class, gets the value of the specified column as an instance of &lt;see cref=&quot;T:System.Object&quot; /&gt;.">在派生类中重写时，以 <see cref="T:System.Object" /> 实例的形式获取指定列的值。</summary>
      <param name="ordinal" vsli:raw="The zero-based column ordinal.">从零开始的列序号。</param>
      <exception cref="T:System.IndexOutOfRangeException" vsli:raw="The column index is out of range.">列索引超出范围。</exception>
      <returns vsli:raw="The value of the specified column.">指定列的值。</returns>
    </member>
    <member name="P:System.Data.Common.DbDataReader.Item(System.String)">
      <summary vsli:raw="When overridden in a derived class, gets the value of the specified column as an instance of &lt;see cref=&quot;T:System.Object&quot; /&gt;.">在派生类中重写时，以 <see cref="T:System.Object" /> 实例的形式获取指定列的值。</summary>
      <param name="name" vsli:raw="The name of the column.">列的名称。</param>
      <exception cref="T:System.IndexOutOfRangeException" vsli:raw="No column with the specified name was found.">未找到具有指定名称的列。</exception>
      <returns vsli:raw="The value of the specified column.">指定列的值。</returns>
    </member>
    <member name="P:System.Data.Common.DbDataReader.RecordsAffected">
      <summary vsli:raw="When overridden in a derived class, gets the number of rows changed, inserted, or deleted by execution of the SQL statement.">当在派生类中重写时，获取通过执行 SQL 语句而更改、插入或删除的行数。</summary>
      <returns vsli:raw="The number of rows changed, inserted, or deleted. -1 for SELECT statements; 0 if no rows were affected or the statement failed.">更改、插入或删除的行数。 对于 SELECT 语句为 -1；如果没影响任何行或该语句失败，则为 0。</returns>
    </member>
    <member name="P:System.Data.Common.DbDataReader.VisibleFieldCount">
      <summary vsli:raw="Gets the number of fields in the &lt;see cref=&quot;T:System.Data.Common.DbDataReader&quot; /&gt; that are not hidden.">获取 <see cref="T:System.Data.Common.DbDataReader" /> 中未隐藏的字段的数目。</summary>
      <returns vsli:raw="The number of fields that are not hidden.">未隐藏的字段的数目。</returns>
    </member>
    <member name="T:System.Data.Common.DbDataReaderExtensions">
      <summary vsli:raw="This class contains column schema extension methods for &lt;see cref=&quot;T:System.Data.Common.DbDataReader&quot; /&gt;.">此类包含用于 <see cref="T:System.Data.Common.DbDataReader" /> 的列架构扩展方法。</summary>
    </member>
    <member name="M:System.Data.Common.DbDataReaderExtensions.CanGetColumnSchema(System.Data.Common.DbDataReader)">
      <summary vsli:raw="Gets a value that indicates whether a &lt;see cref=&quot;T:System.Data.Common.DbDataReader&quot; /&gt; can get a column schema.">获取一个值，指示 <see cref="T:System.Data.Common.DbDataReader" /> 是否可以获取列架构。</summary>
      <param name="reader" vsli:raw="The &lt;see cref=&quot;T:System.Data.Common.DbDataReader&quot; /&gt; to be checked for column schema support.">要检查其是否支持列架构的 <see cref="T:System.Data.Common.DbDataReader" />。</param>
      <returns vsli:raw="&lt;see langword=&quot;true&quot; /&gt; if the &lt;see cref=&quot;T:System.Data.Common.DbDataReader&quot; /&gt; can get a column schema; otherwise, &lt;see langword=&quot;false&quot; /&gt;.">如果 <see cref="T:System.Data.Common.DbDataReader" /> 可以获取列架构，则为 <see langword="true" />；否则为 <see langword="false" />。</returns>
    </member>
    <member name="M:System.Data.Common.DbDataReaderExtensions.GetColumnSchema(System.Data.Common.DbDataReader)">
      <summary vsli:raw="Gets the column schema (&lt;see cref=&quot;T:System.Data.Common.DbColumn&quot; /&gt; collection) for a &lt;see cref=&quot;T:System.Data.Common.DbDataReader&quot; /&gt;.">获取 <see cref="T:System.Data.Common.DbDataReader" /> 的列架构（<see cref="T:System.Data.Common.DbColumn" /> 集合）。</summary>
      <param name="reader" vsli:raw="The &lt;see cref=&quot;T:System.Data.Common.DbDataReader&quot; /&gt; to return the column schema.">要返回列架构的 <see cref="T:System.Data.Common.DbDataReader" />。</param>
      <returns vsli:raw="The column schema (&lt;see cref=&quot;T:System.Data.Common.DbColumn&quot; /&gt; collection) for a &lt;see cref=&quot;T:System.Data.Common.DbDataReader&quot; /&gt;.">
        <see cref="T:System.Data.Common.DbDataReader" /> 的列架构（<see cref="T:System.Data.Common.DbColumn" /> 集合）。</returns>
    </member>
    <member name="T:System.Data.Common.DbDataRecord">
      <summary vsli:raw="Implements &lt;see cref=&quot;T:System.Data.IDataRecord&quot; /&gt; and &lt;see cref=&quot;T:System.ComponentModel.ICustomTypeDescriptor&quot; /&gt;, and provides data binding support for &lt;see cref=&quot;T:System.Data.Common.DbEnumerator&quot; /&gt;.">实现 <see cref="T:System.Data.IDataRecord" /> 和 <see cref="T:System.ComponentModel.ICustomTypeDescriptor" />，并为 <see cref="T:System.Data.Common.DbEnumerator" /> 提供数据绑定支持。</summary>
    </member>
    <member name="M:System.Data.Common.DbDataRecord.#ctor">
      <summary vsli:raw="Initializes a new instance of the &lt;see cref=&quot;T:System.Data.Common.DbDataRecord&quot; /&gt; class.">初始化 <see cref="T:System.Data.Common.DbDataRecord" /> 类的新实例。</summary>
    </member>
    <member name="M:System.Data.Common.DbDataRecord.GetBoolean(System.Int32)">
      <summary vsli:raw="Returns the value of the specified column as a Boolean.">以布尔值的形式返回指定列的值。</summary>
      <param name="i" vsli:raw="The column ordinal.">列序号。</param>
      <returns vsli:raw="&lt;see langword=&quot;true&quot; /&gt; if the Boolean is &lt;see langword=&quot;true&quot; /&gt;; otherwise &lt;see langword=&quot;false&quot; /&gt;.">如果布尔值为 <see langword="true" /> 则为 <see langword="true" />；否则为 <see langword="false" />。</returns>
    </member>
    <member name="M:System.Data.Common.DbDataRecord.GetByte(System.Int32)">
      <summary vsli:raw="Returns the value of the specified column as a byte.">以字节的形式返回指定列的值。</summary>
      <param name="i" vsli:raw="The column ordinal.">列序号。</param>
      <returns vsli:raw="The value of the specified column.">指定列的值。</returns>
    </member>
    <member name="M:System.Data.Common.DbDataRecord.GetBytes(System.Int32,System.Int64,System.Byte[],System.Int32,System.Int32)">
      <summary vsli:raw="Returns the value of the specified column as a byte array.">以字节数组的形式返回指定列的值。</summary>
      <param name="i" vsli:raw="The zero-based column ordinal.">从零开始的列序号。</param>
      <param name="dataIndex" vsli:raw="The index within the field from which to start the read operation.">字段中作为读取操作起始位置的索引。</param>
      <param name="buffer" vsli:raw="The buffer into which to read the stream of bytes.">要读入字节流的缓冲区。</param>
      <param name="bufferIndex" vsli:raw="The index for &lt;paramref name=&quot;buffer&quot; /&gt; to start the read operation.">开始读取操作的 <paramref name="buffer" /> 的索引。</param>
      <param name="length" vsli:raw="The number of bytes to read.">要读取的字节数。</param>
      <returns vsli:raw="The value of the specified column.">指定列的值。</returns>
    </member>
    <member name="M:System.Data.Common.DbDataRecord.GetChar(System.Int32)">
      <summary vsli:raw="Returns the value of the specified column as a character.">以字符的形式返回指定列的值。</summary>
      <param name="i" vsli:raw="The column ordinal.">列序号。</param>
      <returns vsli:raw="The value of the specified column.">指定列的值。</returns>
    </member>
    <member name="M:System.Data.Common.DbDataRecord.GetChars(System.Int32,System.Int64,System.Char[],System.Int32,System.Int32)">
      <summary vsli:raw="Returns the value of the specified column as a character array.">以字符数组的形式返回指定列的值。</summary>
      <param name="i" vsli:raw="Column ordinal.">列序号。</param>
      <param name="dataIndex" vsli:raw="Buffer to copy data into.">要将数据复制到其中的缓冲区。</param>
      <param name="buffer" vsli:raw="Maximum length to copy into the buffer.">复制到缓冲区的最大长度。</param>
      <param name="bufferIndex" vsli:raw="Point to start from within the buffer.">从缓冲区中开始的点。</param>
      <param name="length" vsli:raw="Point to start from within the source data.">从数据源中开始的点。</param>
      <returns vsli:raw="The value of the specified column.">指定列的值。</returns>
    </member>
    <member name="M:System.Data.Common.DbDataRecord.GetData(System.Int32)">
      <summary vsli:raw="Not currently supported.">目前尚不支持。</summary>
      <param name="i" vsli:raw="Not currently supported.">目前尚不支持。</param>
      <returns vsli:raw="Not currently supported.">目前尚不支持。</returns>
    </member>
    <member name="M:System.Data.Common.DbDataRecord.GetDataTypeName(System.Int32)">
      <summary vsli:raw="Returns the name of the back-end data type.">返回后端数据类型的名称。</summary>
      <param name="i" vsli:raw="The column ordinal.">列序号。</param>
      <returns vsli:raw="The name of the back-end data type.">后端数据类型的名称。</returns>
    </member>
    <member name="M:System.Data.Common.DbDataRecord.GetDateTime(System.Int32)">
      <summary vsli:raw="Returns the value of the specified column as a &lt;see cref=&quot;T:System.DateTime&quot; /&gt; object.">以 <see cref="T:System.DateTime" /> 对象的形式返回指定列的值。</summary>
      <param name="i" vsli:raw="The column ordinal.">列序号。</param>
      <returns vsli:raw="The value of the specified column.">指定列的值。</returns>
    </member>
    <member name="M:System.Data.Common.DbDataRecord.GetDbDataReader(System.Int32)">
      <summary vsli:raw="Returns a &lt;see cref=&quot;T:System.Data.Common.DbDataReader&quot; /&gt; object for the requested column ordinal that can be overridden with a provider-specific implementation.">返回被请求的列序号的 <see cref="T:System.Data.Common.DbDataReader" /> 对象，可以使用提供程序特定的实现对该对象进行重写。</summary>
      <param name="i" vsli:raw="The zero-based column ordinal.">从零开始的列序号。</param>
      <returns vsli:raw="A &lt;see cref=&quot;T:System.Data.Common.DbDataReader&quot; /&gt; object.">
        <see cref="T:System.Data.Common.DbDataReader" /> 对象。</returns>
    </member>
    <member name="M:System.Data.Common.DbDataRecord.GetDecimal(System.Int32)">
      <summary vsli:raw="Returns the value of the specified column as a &lt;see cref=&quot;T:System.Decimal&quot; /&gt; object.">以 <see cref="T:System.Decimal" /> 对象的形式返回指定列的值。</summary>
      <param name="i" vsli:raw="The column ordinal.">列序号。</param>
      <returns vsli:raw="The value of the specified column.">指定列的值。</returns>
    </member>
    <member name="M:System.Data.Common.DbDataRecord.GetDouble(System.Int32)">
      <summary vsli:raw="Returns the value of the specified column as a double-precision floating-point number.">以双精度浮点数字的形式返回指定列的值。</summary>
      <param name="i" vsli:raw="The column ordinal.">列序号。</param>
      <returns vsli:raw="The value of the specified column.">指定列的值。</returns>
    </member>
    <member name="M:System.Data.Common.DbDataRecord.GetFieldType(System.Int32)">
      <summary vsli:raw="Returns the &lt;see cref=&quot;T:System.Type&quot; /&gt; that is the data type of the object.">返回作为对象的数据类型的 <see cref="T:System.Type" />。</summary>
      <param name="i" vsli:raw="The column ordinal.">列序号。</param>
      <returns vsli:raw="The &lt;see cref=&quot;T:System.Type&quot; /&gt; that is the data type of the object.">作为对象的数据类型的 <see cref="T:System.Type" />。</returns>
    </member>
    <member name="M:System.Data.Common.DbDataRecord.GetFloat(System.Int32)">
      <summary vsli:raw="Returns the value of the specified column as a single-precision floating-point number.">以单精度浮点数字的形式返回指定列的值。</summary>
      <param name="i" vsli:raw="The column ordinal.">列序号。</param>
      <returns vsli:raw="The value of the specified column.">指定列的值。</returns>
    </member>
    <member name="M:System.Data.Common.DbDataRecord.GetGuid(System.Int32)">
      <summary vsli:raw="Returns the GUID value of the specified field.">返回指定字段的 GUID 值。</summary>
      <param name="i" vsli:raw="The index of the field to return.">要返回的字段的索引。</param>
      <exception cref="T:System.IndexOutOfRangeException" vsli:raw="The index passed was outside the range of 0 through &lt;see cref=&quot;P:System.Data.IDataRecord.FieldCount&quot; /&gt;.">传递的索引位于 0 至 <see cref="P:System.Data.IDataRecord.FieldCount" /> 的范围之外。</exception>
      <returns vsli:raw="The GUID value of the specified field.">指定字段的 GUID 值。</returns>
    </member>
    <member name="M:System.Data.Common.DbDataRecord.GetInt16(System.Int32)">
      <summary vsli:raw="Returns the value of the specified column as a 16-bit signed integer.">以 16 位带符号整数的形式返回指定列的值。</summary>
      <param name="i" vsli:raw="The column ordinal.">列序号。</param>
      <returns vsli:raw="The value of the specified column.">指定列的值。</returns>
    </member>
    <member name="M:System.Data.Common.DbDataRecord.GetInt32(System.Int32)">
      <summary vsli:raw="Returns the value of the specified column as a 32-bit signed integer.">以 32 位带符号整数的形式返回指定列的值。</summary>
      <param name="i" vsli:raw="The column ordinal.">列序号。</param>
      <returns vsli:raw="The value of the specified column.">指定列的值。</returns>
    </member>
    <member name="M:System.Data.Common.DbDataRecord.GetInt64(System.Int32)">
      <summary vsli:raw="Returns the value of the specified column as a 64-bit signed integer.">以 64 位带符号整数的形式返回指定列的值。</summary>
      <param name="i" vsli:raw="The column ordinal.">列序号。</param>
      <returns vsli:raw="The value of the specified column.">指定列的值。</returns>
    </member>
    <member name="M:System.Data.Common.DbDataRecord.GetName(System.Int32)">
      <summary vsli:raw="Returns the name of the specified column.">返回指定列的名称。</summary>
      <param name="i" vsli:raw="The column ordinal.">列序号。</param>
      <returns vsli:raw="The name of the specified column.">指定列的名称。</returns>
    </member>
    <member name="M:System.Data.Common.DbDataRecord.GetOrdinal(System.String)">
      <summary vsli:raw="Returns the column ordinal, given the name of the column.">在给定列名时返回列序号。</summary>
      <param name="name" vsli:raw="The name of the column.">列的名称。</param>
      <returns vsli:raw="The column ordinal.">列序号。</returns>
    </member>
    <member name="M:System.Data.Common.DbDataRecord.GetString(System.Int32)">
      <summary vsli:raw="Returns the value of the specified column as a string.">以字符串的形式返回指定列的值。</summary>
      <param name="i" vsli:raw="The column ordinal.">列序号。</param>
      <returns vsli:raw="The value of the specified column.">指定列的值。</returns>
    </member>
    <member name="M:System.Data.Common.DbDataRecord.GetValue(System.Int32)">
      <summary vsli:raw="Returns the value at the specified column in its native format.">以本机格式返回位于指定列的值。</summary>
      <param name="i" vsli:raw="The column ordinal.">列序号。</param>
      <returns vsli:raw="The value to return.">要返回的值。</returns>
    </member>
    <member name="M:System.Data.Common.DbDataRecord.GetValues(System.Object[])">
      <summary vsli:raw="Populates an array of objects with the column values of the current record.">使用当前记录的列值填充对象的数组。</summary>
      <param name="values" vsli:raw="An array of &lt;see cref=&quot;T:System.Object&quot; /&gt; to copy the attribute fields into.">要将属性字段复制到其中的 <see cref="T:System.Object" /> 数组。</param>
      <returns vsli:raw="The number of instances of &lt;see cref=&quot;T:System.Object&quot; /&gt; in the array.">数组中 <see cref="T:System.Object" /> 的实例的数目。</returns>
    </member>
    <member name="M:System.Data.Common.DbDataRecord.IsDBNull(System.Int32)">
      <summary vsli:raw="Used to indicate nonexistent values.">用于指示不存在的值。</summary>
      <param name="i" vsli:raw="The column ordinal.">列序号。</param>
      <returns vsli:raw="&lt;see langword=&quot;true&quot; /&gt; if the specified column is equivalent to &lt;see cref=&quot;T:System.DBNull&quot; /&gt;; otherwise &lt;see langword=&quot;false&quot; /&gt;.">如果指定的列等于 <see cref="T:System.DBNull" />，则为<see langword="true" />；否则为 <see langword="false" />。</returns>
    </member>
    <member name="M:System.Data.Common.DbDataRecord.System#ComponentModel#ICustomTypeDescriptor#GetAttributes">
      <summary vsli:raw="Returns a collection of custom attributes for this instance of a component.">返回此组件实例的自定义属性的集合。</summary>
      <returns vsli:raw="An &lt;see cref=&quot;T:System.ComponentModel.AttributeCollection&quot; /&gt; that contains the attributes for this object.">一个包含该对象的特性的 <see cref="T:System.ComponentModel.AttributeCollection" />。</returns>
    </member>
    <member name="M:System.Data.Common.DbDataRecord.System#ComponentModel#ICustomTypeDescriptor#GetClassName">
      <summary vsli:raw="Returns the class name of this instance of a component.">返回此组件实例的类名称。</summary>
      <returns vsli:raw="The class name of the object, or &lt;see langword=&quot;null&quot; /&gt; if the class does not have a name.">对象的类名称，如果该类没有名称，则为 <see langword="null" />。</returns>
    </member>
    <member name="M:System.Data.Common.DbDataRecord.System#ComponentModel#ICustomTypeDescriptor#GetComponentName">
      <summary vsli:raw="Returns the name of this instance of a component.">返回某个组件的此实例的名称。</summary>
      <returns vsli:raw="The name of the object, or &lt;see langword=&quot;null&quot; /&gt; if the object does not have a name.">对象的名称，如果该对象不具有名称，则为 <see langword="null" />。</returns>
    </member>
    <member name="M:System.Data.Common.DbDataRecord.System#ComponentModel#ICustomTypeDescriptor#GetConverter">
      <summary vsli:raw="Returns a type converter for this instance of a component.">返回此组件实例的类型转换器。</summary>
      <returns vsli:raw="A &lt;see cref=&quot;T:System.ComponentModel.TypeConverter&quot; /&gt; that is the converter for this object, or &lt;see langword=&quot;null&quot; /&gt; if there is no &lt;see cref=&quot;T:System.ComponentModel.TypeConverter&quot; /&gt; for this object.">作为此对象转换器的 <see cref="T:System.ComponentModel.TypeConverter" />，或为 <see langword="null" />（如果此对象不存在任何 <see cref="T:System.ComponentModel.TypeConverter" />）。</returns>
    </member>
    <member name="M:System.Data.Common.DbDataRecord.System#ComponentModel#ICustomTypeDescriptor#GetDefaultEvent">
      <summary vsli:raw="Returns the default event for this instance of a component.">返回某个组件的此实例的默认事件。</summary>
      <returns vsli:raw="An &lt;see cref=&quot;T:System.ComponentModel.EventDescriptor&quot; /&gt; that represents the default event for this object, or &lt;see langword=&quot;null&quot; /&gt; if this object does not have events.">表示此对象的默认事件的 <see cref="T:System.ComponentModel.EventDescriptor" /> ；如果该对象没有事件，则为 <see langword="null" /> 。</returns>
    </member>
    <member name="M:System.Data.Common.DbDataRecord.System#ComponentModel#ICustomTypeDescriptor#GetDefaultProperty">
      <summary vsli:raw="Returns the default property for this instance of a component.">返回此组件实例的默认属性。</summary>
      <returns vsli:raw="A &lt;see cref=&quot;T:System.ComponentModel.PropertyDescriptor&quot; /&gt; that represents the default property for this object, or &lt;see langword=&quot;null&quot; /&gt; if this object does not have properties.">表示此对象的默认属性的 <see cref="T:System.ComponentModel.PropertyDescriptor" />；如果该对象没有属性，则为 <see langword="null" />。</returns>
    </member>
    <member name="M:System.Data.Common.DbDataRecord.System#ComponentModel#ICustomTypeDescriptor#GetEditor(System.Type)">
      <summary vsli:raw="Returns an editor of the specified type for this instance of a component.">返回此组件实例的指定类型的编辑器。</summary>
      <param name="editorBaseType" vsli:raw="A &lt;see cref=&quot;T:System.Type&quot; /&gt; that represents the editor for this object.">表示该对象的编辑器的 <see cref="T:System.Type" />。</param>
      <returns vsli:raw="An &lt;see cref=&quot;T:System.Object&quot; /&gt; of the specified type that is the editor for this object, or &lt;see langword=&quot;null&quot; /&gt; if the editor cannot be found.">表示该对象编辑器的指定类型的 <see cref="T:System.Object" />；如果无法找到编辑器，则为 <see langword="null" />。</returns>
    </member>
    <member name="M:System.Data.Common.DbDataRecord.System#ComponentModel#ICustomTypeDescriptor#GetEvents">
      <summary vsli:raw="Returns the events for this instance of a component.">返回此组件实例的事件。</summary>
      <returns vsli:raw="An &lt;see cref=&quot;T:System.ComponentModel.EventDescriptorCollection&quot; /&gt; that represents the events for this component instance.">一个 <see cref="T:System.ComponentModel.EventDescriptorCollection" />，表示此组件实例的事件。</returns>
    </member>
    <member name="M:System.Data.Common.DbDataRecord.System#ComponentModel#ICustomTypeDescriptor#GetEvents(System.Attribute[])">
      <summary vsli:raw="Returns the events for this instance of a component using the specified attribute array as a filter.">使用指定的属性数组作为筛选器，返回此组件实例的事件。</summary>
      <param name="attributes" vsli:raw="An array of type &lt;see cref=&quot;T:System.Attribute&quot; /&gt; that is used as a filter.">用作筛选器的 <see cref="T:System.Attribute" /> 类型数组。</param>
      <returns vsli:raw="An &lt;see cref=&quot;T:System.ComponentModel.EventDescriptorCollection&quot; /&gt; that represents the filtered events for this component instance.">表示此组件实例的已筛选事件的 <see cref="T:System.ComponentModel.EventDescriptorCollection" />。</returns>
    </member>
    <member name="M:System.Data.Common.DbDataRecord.System#ComponentModel#ICustomTypeDescriptor#GetProperties">
      <summary vsli:raw="Returns the properties for this instance of a component.">返回此组件实例的属性。</summary>
      <returns vsli:raw="A &lt;see cref=&quot;T:System.ComponentModel.PropertyDescriptorCollection&quot; /&gt; that represents the properties for this component instance.">表示此组件实例的属性的 <see cref="T:System.ComponentModel.PropertyDescriptorCollection" />。</returns>
    </member>
    <member name="M:System.Data.Common.DbDataRecord.System#ComponentModel#ICustomTypeDescriptor#GetProperties(System.Attribute[])">
      <summary vsli:raw="Returns the properties for this instance of a component using the attribute array as a filter.">使用特性数组作为筛选器，返回此组件实例的属性。</summary>
      <param name="attributes" vsli:raw="An array of type &lt;see cref=&quot;T:System.Attribute&quot; /&gt; that is used as a filter.">用作筛选器的 <see cref="T:System.Attribute" /> 类型数组。</param>
      <returns vsli:raw="A &lt;see cref=&quot;T:System.ComponentModel.PropertyDescriptorCollection&quot; /&gt; that represents the filtered properties for this component instance.">一个 <see cref="T:System.ComponentModel.PropertyDescriptorCollection" />，它表示此组件实例的已筛选属性。</returns>
    </member>
    <member name="M:System.Data.Common.DbDataRecord.System#ComponentModel#ICustomTypeDescriptor#GetPropertyOwner(System.ComponentModel.PropertyDescriptor)">
      <summary vsli:raw="Returns an object that contains the property described by the specified property descriptor.">返回一个对象，该对象包含指定的属性描述符所描述的属性。</summary>
      <param name="pd" vsli:raw="A &lt;see cref=&quot;T:System.ComponentModel.PropertyDescriptor&quot; /&gt; that represents the property whose owner is to be found.">一个 <see cref="T:System.ComponentModel.PropertyDescriptor" />，表示要查找其所有者的属性。</param>
      <returns vsli:raw="An &lt;see cref=&quot;T:System.Object&quot; /&gt; that represents the owner of the specified property.">一个 <see cref="T:System.Object" />，表示指定属性的所有者。</returns>
    </member>
    <member name="P:System.Data.Common.DbDataRecord.FieldCount">
      <summary vsli:raw="Indicates the number of fields within the current record. This property is read-only.">指示当前记录中字段的数目。 此属性为只读。</summary>
      <exception cref="T:System.NotSupportedException" vsli:raw="Not connected to a data source to read from.">未连接到要从中读取的数据源。</exception>
      <returns vsli:raw="The number of fields within the current record.">当前记录中字段的数目。</returns>
    </member>
    <member name="P:System.Data.Common.DbDataRecord.Item(System.Int32)">
      <summary vsli:raw="Indicates the value at the specified column in its native format given the column ordinal. This property is read-only.">在给定列序号的情况下，指示位于指定列中采用本机格式的值。 此属性为只读。</summary>
      <param name="i" vsli:raw="The column ordinal.">列序号。</param>
      <returns vsli:raw="The value at the specified column in its native format.">位于指定列中采用本机格式的值。</returns>
    </member>
    <member name="P:System.Data.Common.DbDataRecord.Item(System.String)">
      <summary vsli:raw="Indicates the value at the specified column in its native format given the column name. This property is read-only.">在给定列名的情况下，指示位于指定列中采用本机格式的值。 此属性为只读。</summary>
      <param name="name" vsli:raw="The column name.">列名称。</param>
      <returns vsli:raw="The value at the specified column in its native format.">位于指定列中采用本机格式的值。</returns>
    </member>
    <member name="T:System.Data.Common.DbDataSourceEnumerator">
      <summary vsli:raw="Provides a mechanism for enumerating all available instances of database servers within the local network.">提供了一种枚举本地网络内的所有可用数据库服务器实例的机制。</summary>
    </member>
    <member name="M:System.Data.Common.DbDataSourceEnumerator.#ctor">
      <summary vsli:raw="Creates a new instance of the &lt;see cref=&quot;T:System.Data.Common.DbDataSourceEnumerator&quot; /&gt; class.">创建 <see cref="T:System.Data.Common.DbDataSourceEnumerator" /> 类的新实例。</summary>
    </member>
    <member name="M:System.Data.Common.DbDataSourceEnumerator.GetDataSources">
      <summary vsli:raw="Retrieves a &lt;see cref=&quot;T:System.Data.DataTable&quot; /&gt; containing information about all visible instances of the server represented by the strongly typed instance of this class.">检索一个 <see cref="T:System.Data.DataTable" />，它包含由该类的强类型实例所表示的服务器的所有可见实例的相关信息。</summary>
      <returns vsli:raw="A &lt;see cref=&quot;T:System.Data.DataTable&quot; /&gt; containing information about the visible instances of the associated data source.">一个 <see cref="T:System.Data.DataTable" />，它包含有关联数据源的可见实例的信息。</returns>
    </member>
    <member name="T:System.Data.Common.DbEnumerator">
      <summary vsli:raw="Exposes the &lt;see cref=&quot;M:System.Collections.IEnumerable.GetEnumerator&quot; /&gt; method, which supports a simple iteration over a collection by a .NET data provider.">公开 <see cref="M:System.Collections.IEnumerable.GetEnumerator" /> 方法，该方法支持 .NET Framework 数据提供程序对集合进行简单的迭代。</summary>
    </member>
    <member name="M:System.Data.Common.DbEnumerator.#ctor(System.Data.Common.DbDataReader)">
      <summary vsli:raw="Initializes a new instance of the &lt;see cref=&quot;T:System.Data.Common.DbEnumerator&quot; /&gt; class with the give n data reader.">使用给定的数据读取器初始化 <see cref="T:System.Data.Common.DbEnumerator" /> 类的新实例。</summary>
      <param name="reader" vsli:raw="The DataReader through which to iterate.">要对其进行循环访问的 DataReader。</param>
    </member>
    <member name="M:System.Data.Common.DbEnumerator.#ctor(System.Data.Common.DbDataReader,System.Boolean)">
      <summary vsli:raw="Initializes a new instance of the &lt;see cref=&quot;T:System.Data.Common.DbEnumerator&quot; /&gt; class using the specified reader and indicates whether to automatically close the reader after iterating through its data.">使用指定的读取器初始化 <see cref="T:System.Data.Common.DbEnumerator" /> 类的新实例，并表示在循环访问读取器的数据后是否将其自动关闭。</summary>
      <param name="reader" vsli:raw="The DataReader through which to iterate.">要对其进行循环访问的 DataReader。</param>
      <param name="closeReader" vsli:raw="&lt;see langword=&quot;true&quot; /&gt; to automatically close the DataReader after iterating through its data; otherwise, &lt;see langword=&quot;false&quot; /&gt;.">若要在循环访问 DataReader 的数据后将其自动关闭，则为 <see langword="true" />；否则为 <see langword="false" />。</param>
    </member>
    <member name="M:System.Data.Common.DbEnumerator.#ctor(System.Data.IDataReader)">
      <summary vsli:raw="Initializes a new instance of the &lt;see cref=&quot;T:System.Data.Common.DbEnumerator&quot; /&gt; class using the specified &lt;see langword=&quot;DataReader&quot; /&gt;.">使用指定的 <see cref="T:System.Data.Common.DbEnumerator" /> 初始化 <see langword="DataReader" /> 类的新实例。</summary>
      <param name="reader" vsli:raw="The &lt;see langword=&quot;DataReader&quot; /&gt; through which to iterate.">要通过其进行循环访问的 <see langword="DataReader" />。</param>
    </member>
    <member name="M:System.Data.Common.DbEnumerator.#ctor(System.Data.IDataReader,System.Boolean)">
      <summary vsli:raw="Initializes a new instance of the &lt;see cref=&quot;T:System.Data.Common.DbEnumerator&quot; /&gt; class using the specified &lt;see langword=&quot;DataReader&quot; /&gt;, and indicates whether to automatically close the &lt;see langword=&quot;DataReader&quot; /&gt; after iterating through its data.">使用指定的 <see langword="DataReader" /> 初始化 <see cref="T:System.Data.Common.DbEnumerator" /> 类的新实例，并指示在循环访问 <see langword="DataReader" /> 的数据后是否将其自动关闭。</summary>
      <param name="reader" vsli:raw="The &lt;see langword=&quot;DataReader&quot; /&gt; through which to iterate.">要通过其进行循环访问的 <see langword="DataReader" />。</param>
      <param name="closeReader" vsli:raw="&lt;see langword=&quot;true&quot; /&gt; to automatically close the &lt;see langword=&quot;DataReader&quot; /&gt; after iterating through its data; otherwise, &lt;see langword=&quot;false&quot; /&gt;.">若要在循环访问 <see langword="DataReader" /> 的数据后将其自动关闭，则为 <see langword="true" />；否则为 <see langword="false" />。</param>
    </member>
    <member name="M:System.Data.Common.DbEnumerator.MoveNext">
      <summary vsli:raw="Advances the enumerator to the next element of the collection.">将枚举数推进到集合的下一个元素。</summary>
      <exception cref="T:System.InvalidOperationException" vsli:raw="The collection was modified after the enumerator was created.">集合在枚举器创建后被修改。</exception>
      <returns vsli:raw="&lt;see langword=&quot;true&quot; /&gt; if the enumerator was successfully advanced to the next element; &lt;see langword=&quot;false&quot; /&gt; if the enumerator has passed the end of the collection.">如果枚举数已成功地推进到下一个元素，则为 <see langword="true" />；如果枚举数传递到集合的末尾，则为 <see langword="false" />。</returns>
    </member>
    <member name="M:System.Data.Common.DbEnumerator.Reset">
      <summary vsli:raw="Sets the enumerator to its initial position, which is before the first element in the collection.">将枚举数设置为其初始位置，该位置位于集合中第一个元素之前。</summary>
      <exception cref="T:System.InvalidOperationException" vsli:raw="The collection was modified after the enumerator was created.">集合在枚举器创建后被修改。</exception>
    </member>
    <member name="P:System.Data.Common.DbEnumerator.Current">
      <summary vsli:raw="Gets the current element in the collection.">获取集合中的当前元素。</summary>
      <exception cref="T:System.InvalidOperationException" vsli:raw="The enumerator is positioned before the first element of the collection or after the last element.">枚举器位于集合中第一个元素之前或最后一个元素之后。</exception>
      <returns vsli:raw="The current element in the collection.">集合中的当前元素。</returns>
    </member>
    <member name="T:System.Data.Common.DbException">
      <summary vsli:raw="The base class for all exceptions thrown on behalf of the data source.">代表数据源引发的所有异常的基类。</summary>
    </member>
    <member name="M:System.Data.Common.DbException.#ctor">
      <summary vsli:raw="Initializes a new instance of the &lt;see cref=&quot;T:System.Data.Common.DbException&quot; /&gt; class.">初始化 <see cref="T:System.Data.Common.DbException" /> 类的新实例。</summary>
    </member>
    <member name="M:System.Data.Common.DbException.#ctor(System.Runtime.Serialization.SerializationInfo,System.Runtime.Serialization.StreamingContext)">
      <summary vsli:raw="Initializes a new instance of the &lt;see cref=&quot;T:System.Data.Common.DbException&quot; /&gt; class with the specified serialization information and context.">用指定的序列化信息和上下文初始化 <see cref="T:System.Data.Common.DbException" /> 类的新实例。</summary>
      <param name="info" vsli:raw="The &lt;see cref=&quot;T:System.Runtime.Serialization.SerializationInfo&quot; /&gt; that holds the serialized object data about the exception being thrown.">包含有关所引发异常的序列化对象数据的 <see cref="T:System.Runtime.Serialization.SerializationInfo" />。</param>
      <param name="context" vsli:raw="The &lt;see cref=&quot;T:System.Runtime.Serialization.StreamingContext&quot; /&gt; that contains contextual information about the source or destination.">
        <see cref="T:System.Runtime.Serialization.StreamingContext" />，它包含关于源或目标的上下文信息。</param>
    </member>
    <member name="M:System.Data.Common.DbException.#ctor(System.String)">
      <summary vsli:raw="Initializes a new instance of the &lt;see cref=&quot;T:System.Data.Common.DbException&quot; /&gt; class with the specified error message.">使用指定的错误消息初始化 <see cref="T:System.Data.Common.DbException" /> 类的新实例。</summary>
      <param name="message" vsli:raw="The message to display for this exception.">为此异常显示的消息。</param>
    </member>
    <member name="M:System.Data.Common.DbException.#ctor(System.String,System.Exception)">
      <summary vsli:raw="Initializes a new instance of the &lt;see cref=&quot;T:System.Data.Common.DbException&quot; /&gt; class with the specified error message and a reference to the inner exception that is the cause of this exception.">使用指定的错误消息和对导致此异常的内部异常的引用来初始化 <see cref="T:System.Data.Common.DbException" /> 类的新实例。</summary>
      <param name="message" vsli:raw="The error message string.">错误消息字符串。</param>
      <param name="innerException" vsli:raw="The inner exception reference.">内部异常引用。</param>
    </member>
    <member name="M:System.Data.Common.DbException.#ctor(System.String,System.Int32)">
      <summary vsli:raw="Initializes a new instance of the &lt;see cref=&quot;T:System.Data.Common.DbException&quot; /&gt; class with the specified error message and error code.">使用指定的错误消息和错误代码初始化 <see cref="T:System.Data.Common.DbException" /> 类的新实例。</summary>
      <param name="message" vsli:raw="The error message that explains the reason for the exception.">解释异常原因的错误消息。</param>
      <param name="errorCode" vsli:raw="The error code for the exception.">异常的错误代码。</param>
    </member>
    <member name="P:System.Data.Common.DbException.IsTransient">
      <summary vsli:raw="Indicates whether the error represented by this &lt;see cref=&quot;T:System.Data.Common.DbException&quot; /&gt; could be a transient error, i.e. if retrying the triggering operation may succeed without any other change.">指示此 <see cref="T:System.Data.Common.DbException" /> 表示的错误是否可能是暂时性错误，即重试触发操作是否可以在不进行任何其他更改的情况下成功。</summary>
      <returns vsli:raw="&lt;see langword=&quot;true&quot; /&gt; if the error represented could be a transient error; &lt;see langword=&quot;false&quot; /&gt; otherwise.">
        <see langword="true" /> 如果表示的错误可能是暂时性错误，则为; <see langword="false" /> 否则为。</returns>
    </member>
    <member name="P:System.Data.Common.DbException.SqlState">
      <summary vsli:raw="&lt;para&gt; For database providers which support it, contains a standard SQL 5-character return code indicating the success or failure of the database operation. The first 2 characters represent the &lt;strong&gt;class&lt;/strong&gt; of the return code (e.g. error, success), while the last 3 characters represent the &lt;strong&gt;subclass&lt;/strong&gt;, allowing detection of error scenarios in a database-portable way.&lt;/para&gt;&lt;para&gt; For database providers which don't support it, or for inapplicable error scenarios, contains &lt;see langword=&quot;null&quot; /&gt;.&lt;/para&gt;">
        <para> 对于支持它的数据库提供程序，包含标准的 SQL 5 字符返回代码，该代码指示数据库操作是成功还是失败。 前 2 个字符表示返回代码的 <strong>类</strong>（例如错误、成功），而最后 3 个字符表示 <strong>子类</strong>，允许以数据库可移植的方式检测错误情况。</para>
        <para> 对于不支持它的数据库提供程序，或对于不适用的错误方案，包含 <see langword="null" />。</para>
      </summary>
      <returns vsli:raw="A standard SQL 5-character return code, or &lt;see langword=&quot;null&quot; /&gt;.">标准 SQL 5 个字符的返回代码，或 <see langword="null" /> 。</returns>
    </member>
    <member name="T:System.Data.Common.DbMetaDataCollectionNames">
      <summary vsli:raw="Provides a list of constants for the well-known MetaDataCollections: DataSourceInformation, DataTypes, MetaDataCollections, ReservedWords, and Restrictions.">提供已知 MetaDataCollections 的常量列表：DataSourceInformation、DataTypes、MetaDataCollections、ReservedWords 和 Restrictions。</summary>
    </member>
    <member name="F:System.Data.Common.DbMetaDataCollectionNames.DataSourceInformation">
      <summary vsli:raw="A constant for use with the &lt;see cref=&quot;M:System.Data.Common.DbConnection.GetSchema&quot; /&gt; method that represents the DataSourceInformation collection.">与表示 DataSourceInformation**** 集合的 <see cref="M:System.Data.Common.DbConnection.GetSchema" /> 方法一起使用的常量。</summary>
    </member>
    <member name="F:System.Data.Common.DbMetaDataCollectionNames.DataTypes">
      <summary vsli:raw="A constant for use with the &lt;see cref=&quot;M:System.Data.Common.DbConnection.GetSchema&quot; /&gt; method that represents the DataTypes collection.">与表示 DataTypes**** 集合的 <see cref="M:System.Data.Common.DbConnection.GetSchema" /> 方法一起使用的常量。</summary>
    </member>
    <member name="F:System.Data.Common.DbMetaDataCollectionNames.MetaDataCollections">
      <summary vsli:raw="A constant for use with the &lt;see cref=&quot;M:System.Data.Common.DbConnection.GetSchema&quot; /&gt; method that represents the MetaDataCollections collection.">与表示 MetaDataCollections**** 集合的 <see cref="M:System.Data.Common.DbConnection.GetSchema" /> 方法一起使用的常量。</summary>
    </member>
    <member name="F:System.Data.Common.DbMetaDataCollectionNames.ReservedWords">
      <summary vsli:raw="A constant for use with the &lt;see cref=&quot;M:System.Data.Common.DbConnection.GetSchema&quot; /&gt; method that represents the ReservedWords collection.">与表示 ReservedWords**** 集合的 <see cref="M:System.Data.Common.DbConnection.GetSchema" /> 方法一起使用的常量。</summary>
    </member>
    <member name="F:System.Data.Common.DbMetaDataCollectionNames.Restrictions">
      <summary vsli:raw="A constant for use with the &lt;see cref=&quot;M:System.Data.Common.DbConnection.GetSchema&quot; /&gt; method that represents the Restrictions collection.">与表示 Restrictions**** 集合的 <see cref="M:System.Data.Common.DbConnection.GetSchema" /> 方法一起使用的常量。</summary>
    </member>
    <member name="T:System.Data.Common.DbMetaDataColumnNames">
      <summary vsli:raw="Provides static values that are used for the column names in the MetaDataCollection objects contained in the &lt;see cref=&quot;T:System.Data.DataTable&quot; /&gt;. The &lt;see cref=&quot;T:System.Data.DataTable&quot; /&gt; is created by the GetSchema method.">提供静态值，这些值用于 <see cref="T:System.Data.DataTable" /> 中包含的 MetaDataCollection**** 对象的列名称。 <see cref="T:System.Data.DataTable" /> 由 GetSchema 方法创建****。</summary>
    </member>
    <member name="F:System.Data.Common.DbMetaDataColumnNames.CollectionName">
      <summary vsli:raw="Used by the GetSchema method to create the CollectionName column in the DataTypes collection.">由 GetSchema* 方法用来创建 DataTypes 集合中的 CollectionName* 列。</summary>
    </member>
    <member name="F:System.Data.Common.DbMetaDataColumnNames.ColumnSize">
      <summary vsli:raw="Used by the GetSchema method to create the ColumnSize column in the DataTypes collection.">由 GetSchema* 方法用来创建 DataTypes 集合中的 ColumnSize* 列。</summary>
    </member>
    <member name="F:System.Data.Common.DbMetaDataColumnNames.CompositeIdentifierSeparatorPattern">
      <summary vsli:raw="Used by the GetSchema method to create the CompositeIdentifierSeparatorPattern column in the DataSourceInformation collection.">由 GetSchema* 方法用来创建 DataSourceInformation 集合中的 CompositeIdentifierSeparatorPattern* 列。</summary>
    </member>
    <member name="F:System.Data.Common.DbMetaDataColumnNames.CreateFormat">
      <summary vsli:raw="Used by the GetSchema method to create the CreateFormat column in the DataTypes collection.">由 GetSchema* 方法用来创建 DataTypes 集合中的 CreateFormat* 列。</summary>
    </member>
    <member name="F:System.Data.Common.DbMetaDataColumnNames.CreateParameters">
      <summary vsli:raw="Used by the GetSchema method to create the CreateParameters column in the DataTypes collection.">由 GetSchema* 方法用来创建 DataTypes 集合中的 CreateParameters* 列。</summary>
    </member>
    <member name="F:System.Data.Common.DbMetaDataColumnNames.DataSourceProductName">
      <summary vsli:raw="Used by the GetSchema method to create the DataSourceProductName column in the DataSourceInformation collection.">由 GetSchema* 方法用来创建 DataSourceInformation 集合中的 DataSourceProductName* 列。</summary>
    </member>
    <member name="F:System.Data.Common.DbMetaDataColumnNames.DataSourceProductVersion">
      <summary vsli:raw="Used by the GetSchema method to create the DataSourceProductVersion column in the DataSourceInformation collection.">由 GetSchema* 方法用来创建 DataSourceInformation 集合中的 DataSourceProductVersion* 列。</summary>
    </member>
    <member name="F:System.Data.Common.DbMetaDataColumnNames.DataSourceProductVersionNormalized">
      <summary vsli:raw="Used by the GetSchema method to create the DataSourceProductVersionNormalized column in the DataSourceInformation collection.">由 GetSchema* 方法用来创建 DataSourceInformation 集合中的 DataSourceProductVersionNormalized* 列。</summary>
    </member>
    <member name="F:System.Data.Common.DbMetaDataColumnNames.DataType">
      <summary vsli:raw="Used by the GetSchema method to create the DataType column in the DataTypes collection.">由 GetSchema* 方法用来创建 DataTypes 集合中的 DataType* 列。</summary>
    </member>
    <member name="F:System.Data.Common.DbMetaDataColumnNames.GroupByBehavior">
      <summary vsli:raw="Used by the GetSchema method to create the GroupByBehavior column in the DataSourceInformation collection.">由 GetSchema* 方法用来创建 DataSourceInformation 集合中的 GroupByBehavior* 列。</summary>
    </member>
    <member name="F:System.Data.Common.DbMetaDataColumnNames.IdentifierCase">
      <summary vsli:raw="Used by the GetSchema method to create the IdentifierCase column in the DataSourceInformation collection.">由 GetSchema* 方法用来创建 DataSourceInformation 集合中的 IdentifierCase* 列。</summary>
    </member>
    <member name="F:System.Data.Common.DbMetaDataColumnNames.IdentifierPattern">
      <summary vsli:raw="Used by the GetSchema method to create the IdentifierPattern column in the DataSourceInformation collection.">由 GetSchema* 方法用来创建 DataSourceInformation 集合中的 IdentifierPattern* 列。</summary>
    </member>
    <member name="F:System.Data.Common.DbMetaDataColumnNames.IsAutoIncrementable">
      <summary vsli:raw="Used by the GetSchema method to create the IsAutoIncrementable column in the DataTypes collection.">由 GetSchema* 方法用来创建 DataTypes 集合中的 IsAutoIncrementable* 列。</summary>
    </member>
    <member name="F:System.Data.Common.DbMetaDataColumnNames.IsBestMatch">
      <summary vsli:raw="Used by the GetSchema method to create the IsBestMatch column in the DataTypes collection.">由 GetSchema* 方法用来创建 DataTypes 集合中的 IsBestMatch* 列。</summary>
    </member>
    <member name="F:System.Data.Common.DbMetaDataColumnNames.IsCaseSensitive">
      <summary vsli:raw="Used by the GetSchema method to create the IsCaseSensitive column in the DataTypes collection.">由 GetSchema* 方法用来创建 DataTypes 集合中的 IsCaseSensitive* 列。</summary>
    </member>
    <member name="F:System.Data.Common.DbMetaDataColumnNames.IsConcurrencyType">
      <summary vsli:raw="Used by the GetSchema method to create the IsConcurrencyType column in the DataTypes collection.">由 GetSchema* 方法用来创建 DataTypes 集合中的 IsConcurrencyType* 列。</summary>
    </member>
    <member name="F:System.Data.Common.DbMetaDataColumnNames.IsFixedLength">
      <summary vsli:raw="Used by the GetSchema method to create the IsFixedLength column in the DataTypes collection.">由 GetSchema* 方法用来创建 DataTypes 集合中的 IsFixedLength* 列。</summary>
    </member>
    <member name="F:System.Data.Common.DbMetaDataColumnNames.IsFixedPrecisionScale">
      <summary vsli:raw="Used by the GetSchema method to create the IsFixedPrecisionScale column in the DataTypes collection.">由 GetSchema* 方法用来创建 DataTypes 集合中的 IsFixedPrecisionScale* 列。</summary>
    </member>
    <member name="F:System.Data.Common.DbMetaDataColumnNames.IsLiteralSupported">
      <summary vsli:raw="Used by the GetSchema method to create the IsLiteralSupported column in the DataTypes collection.">由 GetSchema* 方法用来创建 DataTypes 集合中的 IsLiteralSupported* 列。</summary>
    </member>
    <member name="F:System.Data.Common.DbMetaDataColumnNames.IsLong">
      <summary vsli:raw="Used by the GetSchema method to create the IsLong column in the DataTypes collection.">由 GetSchema* 方法用来创建 DataTypes 集合中的 IsLong* 列。</summary>
    </member>
    <member name="F:System.Data.Common.DbMetaDataColumnNames.IsNullable">
      <summary vsli:raw="Used by the GetSchema method to create the IsNullable column in the DataTypes collection.">由 GetSchema* 方法用来创建 DataTypes 集合中的 IsNullable* 列。</summary>
    </member>
    <member name="F:System.Data.Common.DbMetaDataColumnNames.IsSearchable">
      <summary vsli:raw="Used by the GetSchema method to create the IsSearchable column in the DataTypes collection.">由 GetSchema* 方法用来创建 DataTypes 集合中的 IsSearchable* 列。</summary>
    </member>
    <member name="F:System.Data.Common.DbMetaDataColumnNames.IsSearchableWithLike">
      <summary vsli:raw="Used by the GetSchema method to create the IsSearchableWithLike column in the DataTypes collection.">由 GetSchema* 方法用来创建 DataTypes 集合中的 IsSearchableWithLike* 列。</summary>
    </member>
    <member name="F:System.Data.Common.DbMetaDataColumnNames.IsUnsigned">
      <summary vsli:raw="Used by the GetSchema method to create the IsUnsigned column in the DataTypes collection.">由 GetSchema* 方法用来创建 DataTypes 集合中的 IsUnsigned* 列。</summary>
    </member>
    <member name="F:System.Data.Common.DbMetaDataColumnNames.LiteralPrefix">
      <summary vsli:raw="Used by the GetSchema method to create the LiteralPrefix column in the DataTypes collection.">由 GetSchema* 方法用来创建 DataTypes 集合中的 LiteralPrefix* 列。</summary>
    </member>
    <member name="F:System.Data.Common.DbMetaDataColumnNames.LiteralSuffix">
      <summary vsli:raw="Used by the GetSchema method to create the LiteralSuffix column in the DataTypes collection.">由 GetSchema* 方法用来创建 DataTypes 集合中的 LiteralSuffix* 列。</summary>
    </member>
    <member name="F:System.Data.Common.DbMetaDataColumnNames.MaximumScale">
      <summary vsli:raw="Used by the GetSchema method to create the MaximumScale column in the DataTypes collection.">由 GetSchema* 方法用来创建 DataTypes 集合中的 MaximumScale* 列。</summary>
    </member>
    <member name="F:System.Data.Common.DbMetaDataColumnNames.MinimumScale">
      <summary vsli:raw="Used by the GetSchema method to create the MinimumScale column in the DataTypes collection.">由 GetSchema* 方法用来创建 DataTypes 集合中的 MinimumScale* 列。</summary>
    </member>
    <member name="F:System.Data.Common.DbMetaDataColumnNames.NumberOfIdentifierParts">
      <summary vsli:raw="Used by the GetSchema method to create the NumberOfIdentifierParts column in the MetaDataCollections collection.">由 GetSchema* 方法用来创建 MetaDataCollections 集合中的 NumberOfIdentifierParts* 列。</summary>
    </member>
    <member name="F:System.Data.Common.DbMetaDataColumnNames.NumberOfRestrictions">
      <summary vsli:raw="Used by the GetSchema method to create the NumberOfRestrictions column in the MetaDataCollections collection.">由 GetSchema* 方法用来创建 MetaDataCollections 集合中的 NumberOfRestrictions* 列。</summary>
    </member>
    <member name="F:System.Data.Common.DbMetaDataColumnNames.OrderByColumnsInSelect">
      <summary vsli:raw="Used by the GetSchema method to create the OrderByColumnsInSelect column in the DataSourceInformation collection.">由 GetSchema* 方法用来创建 DataSourceInformation 集合中的 OrderByColumnsInSelect* 列。</summary>
    </member>
    <member name="F:System.Data.Common.DbMetaDataColumnNames.ParameterMarkerFormat">
      <summary vsli:raw="Used by the GetSchema method to create the ParameterMarkerFormat column in the DataSourceInformation collection.">由 GetSchema* 方法用来创建 DataSourceInformation 集合中的 ParameterMarkerFormat* 列。</summary>
    </member>
    <member name="F:System.Data.Common.DbMetaDataColumnNames.ParameterMarkerPattern">
      <summary vsli:raw="Used by the GetSchema method to create the ParameterMarkerPattern column in the DataSourceInformation collection.">由 GetSchema* 方法用来创建 DataSourceInformation 集合中的 ParameterMarkerPattern* 列。</summary>
    </member>
    <member name="F:System.Data.Common.DbMetaDataColumnNames.ParameterNameMaxLength">
      <summary vsli:raw="Used by the GetSchema method to create the ParameterNameMaxLength column in the DataSourceInformation collection.">由 GetSchema* 方法用来创建 DataSourceInformation ParameterNameMaxLength* 列。</summary>
    </member>
    <member name="F:System.Data.Common.DbMetaDataColumnNames.ParameterNamePattern">
      <summary vsli:raw="Used by the GetSchema method to create the ParameterNamePattern column in the DataSourceInformation collection.">由 GetSchema* 方法用来创建 DataSourceInformation 集合中的 ParameterNamePattern* 列。</summary>
    </member>
    <member name="F:System.Data.Common.DbMetaDataColumnNames.ProviderDbType">
      <summary vsli:raw="Used by the GetSchema method to create the ProviderDbType column in the DataTypes collection.">由 GetSchema* 方法用来创建 DataTypes 集合中的 ProviderDbType* 列。</summary>
    </member>
    <member name="F:System.Data.Common.DbMetaDataColumnNames.QuotedIdentifierCase">
      <summary vsli:raw="Used by the GetSchema method to create the QuotedIdentifierCase column in the DataSourceInformation collection.">由 GetSchema* 方法用来创建 DataSourceInformation 集合中的 QuotedIdentifierCase* 列。</summary>
    </member>
    <member name="F:System.Data.Common.DbMetaDataColumnNames.QuotedIdentifierPattern">
      <summary vsli:raw="Used by the GetSchema method to create the QuotedIdentifierPattern column in the DataSourceInformation collection.">由 GetSchema* 方法用来创建 DataSourceInformation 集合中的 QuotedIdentifierPattern* 列。</summary>
    </member>
    <member name="F:System.Data.Common.DbMetaDataColumnNames.ReservedWord">
      <summary vsli:raw="Used by the GetSchema method to create the ReservedWord column in the ReservedWords collection.">由 GetSchema* 方法用来创建 ReservedWords 集合中的 ReservedWord* 列。</summary>
    </member>
    <member name="F:System.Data.Common.DbMetaDataColumnNames.StatementSeparatorPattern">
      <summary vsli:raw="Used by the GetSchema method to create the StatementSeparatorPattern column in the DataSourceInformation collection.">由 GetSchema* 方法用来创建 DataSourceInformation 集合中的 StatementSeparatorPattern* 列。</summary>
    </member>
    <member name="F:System.Data.Common.DbMetaDataColumnNames.StringLiteralPattern">
      <summary vsli:raw="Used by the GetSchema method to create the StringLiteralPattern column in the DataSourceInformation collection.">由 GetSchema* 方法用来创建 DataSourceInformation 集合中的 StringLiteralPattern* 列。</summary>
    </member>
    <member name="F:System.Data.Common.DbMetaDataColumnNames.SupportedJoinOperators">
      <summary vsli:raw="Used by the GetSchema method to create the SupportedJoinOperators column in the DataSourceInformation collection.">由 GetSchema* 方法用来创建 DataSourceInformation 集合中的 SupportedJoinOperators* 列。</summary>
    </member>
    <member name="F:System.Data.Common.DbMetaDataColumnNames.TypeName">
      <summary vsli:raw="Used by the GetSchema method to create the TypeName column in the DataTypes collection.">由 GetSchema* 方法用来创建 DataTypes 集合中的 TypeName* 列。</summary>
    </member>
    <member name="T:System.Data.Common.DbParameter">
      <summary vsli:raw="Represents a parameter to a &lt;see cref=&quot;T:System.Data.Common.DbCommand&quot; /&gt; and optionally, its mapping to a &lt;see cref=&quot;T:System.Data.DataSet&quot; /&gt; column. For more information on parameters, see Configuring Parameters and Parameter Data Types.">表示 <see cref="T:System.Data.Common.DbCommand" /> 的参数，还可以是它到 <see cref="T:System.Data.DataSet" /> 列的映射。 有关参数的详细信息，请参阅配置参数和参数数据类型。</summary>
    </member>
    <member name="M:System.Data.Common.DbParameter.#ctor">
      <summary vsli:raw="Initializes a new instance of the &lt;see cref=&quot;T:System.Data.Common.DbParameter&quot; /&gt; class.">初始化 <see cref="T:System.Data.Common.DbParameter" /> 类的新实例。</summary>
    </member>
    <member name="M:System.Data.Common.DbParameter.ResetDbType">
      <summary vsli:raw="Resets the DbType property to its original settings.">将 DbType**** 属性重置为其原始设置。</summary>
    </member>
    <member name="P:System.Data.Common.DbParameter.DbType">
      <summary vsli:raw="Gets or sets the &lt;see cref=&quot;T:System.Data.DbType&quot; /&gt; of the parameter.">获取或设置参数的 <see cref="T:System.Data.DbType" />。</summary>
      <exception cref="T:System.ArgumentException" vsli:raw="The property is not set to a valid &lt;see cref=&quot;T:System.Data.DbType&quot; /&gt;.">该属性未设置为有效的 <see cref="T:System.Data.DbType" />。</exception>
      <returns vsli:raw="One of the &lt;see cref=&quot;T:System.Data.DbType&quot; /&gt; values. The default is &lt;see cref=&quot;F:System.Data.DbType.String&quot; /&gt;.">
        <see cref="T:System.Data.DbType" /> 值之一。 默认值为 <see cref="F:System.Data.DbType.String" />。</returns>
    </member>
    <member name="P:System.Data.Common.DbParameter.Direction">
      <summary vsli:raw="Gets or sets a value that indicates whether the parameter is input-only, output-only, bidirectional, or a stored procedure return value parameter.">获取或设置一个值，该值指示参数是只可输入的参数、只可输出的参数、双向参数还是存储过程返回值参数。</summary>
      <exception cref="T:System.ArgumentException" vsli:raw="The property is not set to one of the valid &lt;see cref=&quot;T:System.Data.ParameterDirection&quot; /&gt; values.">该属性未设置为有效的 <see cref="T:System.Data.ParameterDirection" /> 值之一。</exception>
      <returns vsli:raw="One of the &lt;see cref=&quot;T:System.Data.ParameterDirection&quot; /&gt; values. The default is &lt;see langword=&quot;Input&quot; /&gt;.">
        <see cref="T:System.Data.ParameterDirection" /> 值之一。 默认值为 <see langword="Input" />。</returns>
    </member>
    <member name="P:System.Data.Common.DbParameter.IsNullable">
      <summary vsli:raw="Gets or sets a value that indicates whether the parameter accepts null values.">获取或设置一个值，该值指示参数是否接受 null 值。</summary>
      <returns vsli:raw="&lt;see langword=&quot;true&quot; /&gt; if null values are accepted; otherwise &lt;see langword=&quot;false&quot; /&gt;. The default is &lt;see langword=&quot;false&quot; /&gt;.">如果接受 null 值，则为 <see langword="true" />；否则为 <see langword="false" />。 默认值为 <see langword="false" />。</returns>
    </member>
    <member name="P:System.Data.Common.DbParameter.ParameterName">
      <summary vsli:raw="Gets or sets the name of the &lt;see cref=&quot;T:System.Data.Common.DbParameter&quot; /&gt;.">获取或设置 <see cref="T:System.Data.Common.DbParameter" /> 的名称。</summary>
      <returns vsli:raw="The name of the &lt;see cref=&quot;T:System.Data.Common.DbParameter&quot; /&gt;. The default is an empty string (&quot;&quot;).">
        <see cref="T:System.Data.Common.DbParameter" /> 的名称。 默认值为空字符串("")。</returns>
    </member>
    <member name="P:System.Data.Common.DbParameter.Precision">
      <summary vsli:raw="Gets or sets the maximum number of digits used to represent the &lt;see cref=&quot;P:System.Data.Common.DbParameter.Value&quot; /&gt; property.">获取或设置用于表示 <see cref="P:System.Data.Common.DbParameter.Value" /> 属性的最大位数。</summary>
      <returns vsli:raw="The maximum number of digits used to represent the &lt;see cref=&quot;P:System.Data.Common.DbParameter.Value&quot; /&gt; property.">用于表示 <see cref="P:System.Data.Common.DbParameter.Value" /> 属性的最大位数。</returns>
    </member>
    <member name="P:System.Data.Common.DbParameter.Scale">
      <summary vsli:raw="Gets or sets the number of decimal places to which &lt;see cref=&quot;P:System.Data.Common.DbParameter.Value&quot; /&gt; is resolved.">获取或设置所解析的 <see cref="P:System.Data.Common.DbParameter.Value" /> 的小数位数。</summary>
      <returns vsli:raw="The number of decimal places to which &lt;see cref=&quot;P:System.Data.Common.DbParameter.Value&quot; /&gt; is resolved.">对 <see cref="P:System.Data.Common.DbParameter.Value" /> 进行解析的小数位数。</returns>
    </member>
    <member name="P:System.Data.Common.DbParameter.Size">
      <summary vsli:raw="Gets or sets the maximum size, in bytes, of the data within the column.">获取或设置列中数据的最大大小（字节）。</summary>
      <returns vsli:raw="The maximum size, in bytes, of the data within the column. The default value is inferred from the parameter value.">列中数据的最大大小（字节）。 默认值将根据参数值进行推断。</returns>
    </member>
    <member name="P:System.Data.Common.DbParameter.SourceColumn">
      <summary vsli:raw="Gets or sets the name of the source column mapped to the &lt;see cref=&quot;T:System.Data.DataSet&quot; /&gt; and used for loading or returning the &lt;see cref=&quot;P:System.Data.Common.DbParameter.Value&quot; /&gt;.">获取或设置源列的名称，该源列映射到 <see cref="T:System.Data.DataSet" /> 并用于加载或返回 <see cref="P:System.Data.Common.DbParameter.Value" />。</summary>
      <returns vsli:raw="The name of the source column mapped to the &lt;see cref=&quot;T:System.Data.DataSet&quot; /&gt;. The default is an empty string.">映射到 <see cref="T:System.Data.DataSet" /> 的源列的名称。 默认值为一个空字符串。</returns>
    </member>
    <member name="P:System.Data.Common.DbParameter.SourceColumnNullMapping">
      <summary vsli:raw="Gets or sets a value which indicates whether the source column is nullable. This allows &lt;see cref=&quot;T:System.Data.Common.DbCommandBuilder&quot; /&gt; to correctly generate Update statements for nullable columns.">获取或设置一个值，该值指示源列是否可以为 null。 通过此操作，<see cref="T:System.Data.Common.DbCommandBuilder" /> 能够为可以为 null 的列正确地生成 Update 语句。</summary>
      <returns vsli:raw="&lt;see langword=&quot;true&quot; /&gt; if the source column is nullable; &lt;see langword=&quot;false&quot; /&gt; if it is not.">如果源列可以为 null，则为<see langword="true" /> ；否则为 <see langword="false" />。</returns>
    </member>
    <member name="P:System.Data.Common.DbParameter.SourceVersion">
      <summary vsli:raw="Gets or sets the &lt;see cref=&quot;T:System.Data.DataRowVersion&quot; /&gt; to use when you load &lt;see cref=&quot;P:System.Data.Common.DbParameter.Value&quot; /&gt;.">获取或设置在加载 <see cref="T:System.Data.DataRowVersion" /> 时使用的 <see cref="P:System.Data.Common.DbParameter.Value" />。</summary>
      <exception cref="T:System.ArgumentException" vsli:raw="The property is not set to one of the &lt;see cref=&quot;T:System.Data.DataRowVersion&quot; /&gt; values.">该属性未设置为 <see cref="T:System.Data.DataRowVersion" /> 值之一。</exception>
      <returns vsli:raw="One of the &lt;see cref=&quot;T:System.Data.DataRowVersion&quot; /&gt; values. The default is &lt;see langword=&quot;Current&quot; /&gt;.">
        <see cref="T:System.Data.DataRowVersion" /> 值之一。 默认值为 <see langword="Current" />。</returns>
    </member>
    <member name="P:System.Data.Common.DbParameter.System#Data#IDbDataParameter#Precision">
      <summary vsli:raw="Indicates the precision of numeric parameters.">指示数值参数的精度。</summary>
      <returns vsli:raw="The maximum number of digits used to represent the &lt;see langword=&quot;Value&quot; /&gt; property of a data provider &lt;see langword=&quot;Parameter&quot; /&gt; object. The default value is 0, which indicates that a data provider sets the precision for &lt;see langword=&quot;Value&quot; /&gt;.">用于表示数据提供程序 <see langword="Parameter" /> 对象的 <see langword="Value" /> 属性的最大位数。 默认值为 0，指示数据提供程序将设置 <see langword="Value" /> 的精度。</returns>
    </member>
    <member name="P:System.Data.Common.DbParameter.System#Data#IDbDataParameter#Scale">
      <summary vsli:raw="For a description of this member, see &lt;see cref=&quot;P:System.Data.IDbDataParameter.Scale&quot; /&gt;.">有关此成员的说明，请参见 <see cref="P:System.Data.IDbDataParameter.Scale" />。</summary>
      <returns vsli:raw="The number of decimal places to which &lt;see cref=&quot;P:System.Data.OleDb.OleDbParameter.Value&quot; /&gt; is resolved. The default is 0.">对 <see cref="P:System.Data.OleDb.OleDbParameter.Value" /> 进行解析的小数位数。 默认值为 0。</returns>
    </member>
    <member name="P:System.Data.Common.DbParameter.Value">
      <summary vsli:raw="Gets or sets the value of the parameter.">获取或设置参数的值。</summary>
      <returns vsli:raw="An &lt;see cref=&quot;T:System.Object&quot; /&gt; that is the value of the parameter. The default value is null.">充当参数值的 <see cref="T:System.Object" />。 默认值为 null。</returns>
    </member>
    <member name="T:System.Data.Common.DbParameterCollection">
      <summary vsli:raw="The base class for a collection of parameters relevant to a &lt;see cref=&quot;T:System.Data.Common.DbCommand&quot; /&gt;.">与 <see cref="T:System.Data.Common.DbCommand" /> 相关的参数集合的基类。</summary>
    </member>
    <member name="M:System.Data.Common.DbParameterCollection.#ctor">
      <summary vsli:raw="Initializes a new instance of the &lt;see cref=&quot;T:System.Data.Common.DbParameterCollection&quot; /&gt; class.">初始化 <see cref="T:System.Data.Common.DbParameterCollection" /> 类的新实例。</summary>
    </member>
    <member name="M:System.Data.Common.DbParameterCollection.Add(System.Object)">
      <summary vsli:raw="Adds the specified &lt;see cref=&quot;T:System.Data.Common.DbParameter&quot; /&gt; object to the &lt;see cref=&quot;T:System.Data.Common.DbParameterCollection&quot; /&gt;.">将指定的 <see cref="T:System.Data.Common.DbParameter" /> 对象添加到 <see cref="T:System.Data.Common.DbParameterCollection" /> 中。</summary>
      <param name="value" vsli:raw="The &lt;see cref=&quot;P:System.Data.Common.DbParameter.Value&quot; /&gt; of the &lt;see cref=&quot;T:System.Data.Common.DbParameter&quot; /&gt; to add to the collection.">要添加到集合中的 <see cref="T:System.Data.Common.DbParameter" /> 的 <see cref="P:System.Data.Common.DbParameter.Value" />。</param>
      <returns vsli:raw="The index of the &lt;see cref=&quot;T:System.Data.Common.DbParameter&quot; /&gt; object in the collection.">集合中的 <see cref="T:System.Data.Common.DbParameter" /> 对象的索引。</returns>
    </member>
    <member name="M:System.Data.Common.DbParameterCollection.AddRange(System.Array)">
      <summary vsli:raw="Adds an array of items with the specified values to the &lt;see cref=&quot;T:System.Data.Common.DbParameterCollection&quot; /&gt;.">将具有指定值的项的数组添加到 <see cref="T:System.Data.Common.DbParameterCollection" />。</summary>
      <param name="values" vsli:raw="An array of values of type &lt;see cref=&quot;T:System.Data.Common.DbParameter&quot; /&gt; to add to the collection.">要添加到集合的 <see cref="T:System.Data.Common.DbParameter" /> 类型的值的数组。</param>
    </member>
    <member name="M:System.Data.Common.DbParameterCollection.Clear">
      <summary vsli:raw="Removes all &lt;see cref=&quot;T:System.Data.Common.DbParameter&quot; /&gt; values from the &lt;see cref=&quot;T:System.Data.Common.DbParameterCollection&quot; /&gt;.">将所有 <see cref="T:System.Data.Common.DbParameter" /> 值从 <see cref="T:System.Data.Common.DbParameterCollection" /> 中移除。</summary>
    </member>
    <member name="M:System.Data.Common.DbParameterCollection.Contains(System.Object)">
      <summary vsli:raw="Indicates whether a &lt;see cref=&quot;T:System.Data.Common.DbParameter&quot; /&gt; with the specified &lt;see cref=&quot;P:System.Data.Common.DbParameter.Value&quot; /&gt; is contained in the collection.">指示集合中是否包含具有指定 <see cref="P:System.Data.Common.DbParameter.Value" /> 的 <see cref="T:System.Data.Common.DbParameter" />。</summary>
      <param name="value" vsli:raw="The &lt;see cref=&quot;P:System.Data.Common.DbParameter.Value&quot; /&gt; of the &lt;see cref=&quot;T:System.Data.Common.DbParameter&quot; /&gt; to look for in the collection.">要在集合中查找的 <see cref="T:System.Data.Common.DbParameter" /> 的 <see cref="P:System.Data.Common.DbParameter.Value" />。</param>
      <returns vsli:raw="&lt;see langword=&quot;true&quot; /&gt; if the &lt;see cref=&quot;T:System.Data.Common.DbParameter&quot; /&gt; is in the collection; otherwise &lt;see langword=&quot;false&quot; /&gt;.">如果 <see cref="T:System.Data.Common.DbParameter" /> 位于集合中，则为 <see langword="true" />；否则为 <see langword="false" />。</returns>
    </member>
    <member name="M:System.Data.Common.DbParameterCollection.Contains(System.String)">
      <summary vsli:raw="Indicates whether a &lt;see cref=&quot;T:System.Data.Common.DbParameter&quot; /&gt; with the specified name exists in the collection.">指示具有指定名称的 <see cref="T:System.Data.Common.DbParameter" /> 是否存在于集合中。</summary>
      <param name="value" vsli:raw="The name of the &lt;see cref=&quot;T:System.Data.Common.DbParameter&quot; /&gt; to look for in the collection.">要在集合中查找的 <see cref="T:System.Data.Common.DbParameter" /> 的名称。</param>
      <returns vsli:raw="&lt;see langword=&quot;true&quot; /&gt; if the &lt;see cref=&quot;T:System.Data.Common.DbParameter&quot; /&gt; is in the collection; otherwise &lt;see langword=&quot;false&quot; /&gt;.">如果 <see cref="T:System.Data.Common.DbParameter" /> 位于集合中，则为 <see langword="true" />；否则为 <see langword="false" />。</returns>
    </member>
    <member name="M:System.Data.Common.DbParameterCollection.CopyTo(System.Array,System.Int32)">
      <summary vsli:raw="Copies an array of items to the collection starting at the specified index.">将项的数组复制到从指定索引开始的集合。</summary>
      <param name="array" vsli:raw="The array of items to copy to the collection.">要复制到集合的项数组。</param>
      <param name="index" vsli:raw="The index in the collection to copy the items.">要复制项的集合中的索引。</param>
    </member>
    <member name="M:System.Data.Common.DbParameterCollection.GetEnumerator">
      <summary vsli:raw="Exposes the &lt;see cref=&quot;M:System.Collections.IEnumerable.GetEnumerator&quot; /&gt; method, which supports a simple iteration over a collection by a .NET data provider.">公开 <see cref="M:System.Collections.IEnumerable.GetEnumerator" /> 方法，该方法支持 .NET Framework 数据提供程序对集合进行简单的迭代。</summary>
      <returns vsli:raw="An &lt;see cref=&quot;T:System.Collections.IEnumerator&quot; /&gt; that can be used to iterate through the collection.">可用于循环访问集合的 <see cref="T:System.Collections.IEnumerator" />。</returns>
    </member>
    <member name="M:System.Data.Common.DbParameterCollection.GetParameter(System.Int32)">
      <summary vsli:raw="Returns the &lt;see cref=&quot;T:System.Data.Common.DbParameter&quot; /&gt; object at the specified index in the collection.">返回位于集合中指定索引处的 <see cref="T:System.Data.Common.DbParameter" /> 对象。</summary>
      <param name="index" vsli:raw="The index of the &lt;see cref=&quot;T:System.Data.Common.DbParameter&quot; /&gt; in the collection.">集合中 <see cref="T:System.Data.Common.DbParameter" /> 的索引。</param>
      <returns vsli:raw="The &lt;see cref=&quot;T:System.Data.Common.DbParameter&quot; /&gt; object at the specified index in the collection.">集合中指定索引处的 <see cref="T:System.Data.Common.DbParameter" /> 对象。</returns>
    </member>
    <member name="M:System.Data.Common.DbParameterCollection.GetParameter(System.String)">
      <summary vsli:raw="Returns &lt;see cref=&quot;T:System.Data.Common.DbParameter&quot; /&gt; the object with the specified name.">返回具有指定名称的 <see cref="T:System.Data.Common.DbParameter" /> 对象。</summary>
      <param name="parameterName" vsli:raw="The name of the &lt;see cref=&quot;T:System.Data.Common.DbParameter&quot; /&gt; in the collection.">集合中 <see cref="T:System.Data.Common.DbParameter" /> 的名称。</param>
      <returns vsli:raw="The &lt;see cref=&quot;T:System.Data.Common.DbParameter&quot; /&gt; the object with the specified name.">具有指定名称的 <see cref="T:System.Data.Common.DbParameter" /> 对象。</returns>
    </member>
    <member name="M:System.Data.Common.DbParameterCollection.IndexOf(System.Object)">
      <summary vsli:raw="Returns the index of the specified &lt;see cref=&quot;T:System.Data.Common.DbParameter&quot; /&gt; object.">返回指定的 <see cref="T:System.Data.Common.DbParameter" /> 对象的索引。</summary>
      <param name="value" vsli:raw="The &lt;see cref=&quot;T:System.Data.Common.DbParameter&quot; /&gt; object in the collection.">集合中的 <see cref="T:System.Data.Common.DbParameter" /> 对象。</param>
      <returns vsli:raw="The index of the specified &lt;see cref=&quot;T:System.Data.Common.DbParameter&quot; /&gt; object.">指定的 <see cref="T:System.Data.Common.DbParameter" /> 对象的索引。</returns>
    </member>
    <member name="M:System.Data.Common.DbParameterCollection.IndexOf(System.String)">
      <summary vsli:raw="Returns the index of the &lt;see cref=&quot;T:System.Data.Common.DbParameter&quot; /&gt; object with the specified name.">返回具有指定名称的 <see cref="T:System.Data.Common.DbParameter" /> 对象的索引。</summary>
      <param name="parameterName" vsli:raw="The name of the &lt;see cref=&quot;T:System.Data.Common.DbParameter&quot; /&gt; object in the collection.">集合中 <see cref="T:System.Data.Common.DbParameter" /> 对象的名称。</param>
      <returns vsli:raw="The index of the &lt;see cref=&quot;T:System.Data.Common.DbParameter&quot; /&gt; object with the specified name.">具有指定名称的 <see cref="T:System.Data.Common.DbParameter" /> 对象的索引。</returns>
    </member>
    <member name="M:System.Data.Common.DbParameterCollection.Insert(System.Int32,System.Object)">
      <summary vsli:raw="Inserts the specified index of the &lt;see cref=&quot;T:System.Data.Common.DbParameter&quot; /&gt; object with the specified name into the collection at the specified index.">将具有指定名称的 <see cref="T:System.Data.Common.DbParameter" /> 对象的指定索引插入指定索引处的集合中。</summary>
      <param name="index" vsli:raw="The index at which to insert the &lt;see cref=&quot;T:System.Data.Common.DbParameter&quot; /&gt; object.">插入 <see cref="T:System.Data.Common.DbParameter" /> 对象的索引位置。</param>
      <param name="value" vsli:raw="The &lt;see cref=&quot;T:System.Data.Common.DbParameter&quot; /&gt; object to insert into the collection.">要插入到集合中的 <see cref="T:System.Data.Common.DbParameter" /> 对象。</param>
    </member>
    <member name="M:System.Data.Common.DbParameterCollection.Remove(System.Object)">
      <summary vsli:raw="Removes the specified &lt;see cref=&quot;T:System.Data.Common.DbParameter&quot; /&gt; object from the collection.">从集合中移除指定的 <see cref="T:System.Data.Common.DbParameter" /> 对象。</summary>
      <param name="value" vsli:raw="The &lt;see cref=&quot;T:System.Data.Common.DbParameter&quot; /&gt; object to remove.">要移除的 <see cref="T:System.Data.Common.DbParameter" /> 对象。</param>
    </member>
    <member name="M:System.Data.Common.DbParameterCollection.RemoveAt(System.Int32)">
      <summary vsli:raw="Removes the &lt;see cref=&quot;T:System.Data.Common.DbParameter&quot; /&gt; object at the specified from the collection.">从集合中删除位于指定位置的 <see cref="T:System.Data.Common.DbParameter" /> 对象。</summary>
      <param name="index" vsli:raw="The index where the &lt;see cref=&quot;T:System.Data.Common.DbParameter&quot; /&gt; object is located.">
        <see cref="T:System.Data.Common.DbParameter" /> 对象所在的索引。</param>
    </member>
    <member name="M:System.Data.Common.DbParameterCollection.RemoveAt(System.String)">
      <summary vsli:raw="Removes the &lt;see cref=&quot;T:System.Data.Common.DbParameter&quot; /&gt; object with the specified name from the collection.">从集合中删除具有指定名称的 <see cref="T:System.Data.Common.DbParameter" /> 对象。</summary>
      <param name="parameterName" vsli:raw="The name of the &lt;see cref=&quot;T:System.Data.Common.DbParameter&quot; /&gt; object to remove.">要删除的 <see cref="T:System.Data.Common.DbParameter" /> 对象的名称。</param>
    </member>
    <member name="M:System.Data.Common.DbParameterCollection.SetParameter(System.Int32,System.Data.Common.DbParameter)">
      <summary vsli:raw="Sets the &lt;see cref=&quot;T:System.Data.Common.DbParameter&quot; /&gt; object at the specified index to a new value.">将指定索引处的 <see cref="T:System.Data.Common.DbParameter" /> 对象设置为新值。</summary>
      <param name="index" vsli:raw="The index where the &lt;see cref=&quot;T:System.Data.Common.DbParameter&quot; /&gt; object is located.">
        <see cref="T:System.Data.Common.DbParameter" /> 对象所在的索引。</param>
      <param name="value" vsli:raw="The new &lt;see cref=&quot;T:System.Data.Common.DbParameter&quot; /&gt; value.">新的 <see cref="T:System.Data.Common.DbParameter" /> 值。</param>
    </member>
    <member name="M:System.Data.Common.DbParameterCollection.SetParameter(System.String,System.Data.Common.DbParameter)">
      <summary vsli:raw="Sets the &lt;see cref=&quot;T:System.Data.Common.DbParameter&quot; /&gt; object with the specified name to a new value.">将具有指定名称的 <see cref="T:System.Data.Common.DbParameter" /> 对象设置为新值。</summary>
      <param name="parameterName" vsli:raw="The name of the &lt;see cref=&quot;T:System.Data.Common.DbParameter&quot; /&gt; object in the collection.">集合中 <see cref="T:System.Data.Common.DbParameter" /> 对象的名称。</param>
      <param name="value" vsli:raw="The new &lt;see cref=&quot;T:System.Data.Common.DbParameter&quot; /&gt; value.">新的 <see cref="T:System.Data.Common.DbParameter" /> 值。</param>
    </member>
    <member name="M:System.Data.Common.DbParameterCollection.System#Collections#IList#Add(System.Object)">
      <summary vsli:raw="For a description of this member, see &lt;see cref=&quot;M:System.Collections.IList.Add(System.Object)&quot; /&gt;.">有关此成员的说明，请参见 <see cref="M:System.Collections.IList.Add(System.Object)" />。</summary>
      <param name="value" vsli:raw="For a description of this member, see &lt;see cref=&quot;M:System.Collections.IList.Add(System.Object)&quot; /&gt;.">有关此成员的说明，请参见 <see cref="M:System.Collections.IList.Add(System.Object)" />。</param>
      <returns vsli:raw="For a description of this member, see &lt;see cref=&quot;M:System.Collections.IList.Add(System.Object)&quot; /&gt;.">有关此成员的说明，请参见 <see cref="M:System.Collections.IList.Add(System.Object)" />。</returns>
    </member>
    <member name="M:System.Data.Common.DbParameterCollection.System#Collections#IList#Contains(System.Object)">
      <summary vsli:raw="For a description of this member, see &lt;see cref=&quot;M:System.Collections.IList.Contains(System.Object)&quot; /&gt;.">有关此成员的说明，请参见 <see cref="M:System.Collections.IList.Contains(System.Object)" />。</summary>
      <param name="value" vsli:raw="For a description of this member, see &lt;see cref=&quot;M:System.Collections.IList.Contains(System.Object)&quot; /&gt;.">有关此成员的说明，请参见 <see cref="M:System.Collections.IList.Contains(System.Object)" />。</param>
      <returns vsli:raw="For a description of this member, see &lt;see cref=&quot;M:System.Collections.IList.Contains(System.Object)&quot; /&gt;.">有关此成员的说明，请参见 <see cref="M:System.Collections.IList.Contains(System.Object)" />。</returns>
    </member>
    <member name="M:System.Data.Common.DbParameterCollection.System#Collections#IList#IndexOf(System.Object)">
      <summary vsli:raw="For a description of this member, see &lt;see cref=&quot;M:System.Collections.IList.IndexOf(System.Object)&quot; /&gt;.">有关此成员的说明，请参见 <see cref="M:System.Collections.IList.IndexOf(System.Object)" />。</summary>
      <param name="value" vsli:raw="For a description of this member, see &lt;see cref=&quot;M:System.Collections.IList.IndexOf(System.Object)&quot; /&gt;.">有关此成员的说明，请参见 <see cref="M:System.Collections.IList.IndexOf(System.Object)" />。</param>
      <returns vsli:raw="For a description of this member, see &lt;see cref=&quot;M:System.Collections.IList.IndexOf(System.Object)&quot; /&gt;.">有关此成员的说明，请参见 <see cref="M:System.Collections.IList.IndexOf(System.Object)" />。</returns>
    </member>
    <member name="M:System.Data.Common.DbParameterCollection.System#Collections#IList#Insert(System.Int32,System.Object)">
      <summary vsli:raw="For a description of this member, see &lt;see cref=&quot;M:System.Collections.IList.Insert(System.Int32,System.Object)&quot; /&gt;.">有关此成员的说明，请参见 <see cref="M:System.Collections.IList.Insert(System.Int32,System.Object)" />。</summary>
      <param name="index" vsli:raw="For a description of this member, see &lt;see cref=&quot;M:System.Collections.IList.Insert(System.Int32,System.Object)&quot; /&gt;.">有关此成员的说明，请参见 <see cref="M:System.Collections.IList.Insert(System.Int32,System.Object)" />。</param>
      <param name="value" vsli:raw="For a description of this member, see &lt;see cref=&quot;M:System.Collections.IList.Insert(System.Int32,System.Object)&quot; /&gt;.">有关此成员的说明，请参见 <see cref="M:System.Collections.IList.Insert(System.Int32,System.Object)" />。</param>
    </member>
    <member name="M:System.Data.Common.DbParameterCollection.System#Collections#IList#Remove(System.Object)">
      <summary vsli:raw="For a description of this member, see &lt;see cref=&quot;M:System.Collections.IList.Remove(System.Object)&quot; /&gt;.">有关此成员的说明，请参见 <see cref="M:System.Collections.IList.Remove(System.Object)" />。</summary>
      <param name="value" vsli:raw="For a description of this member, see &lt;see cref=&quot;M:System.Collections.IList.Remove(System.Object)&quot; /&gt;.">有关此成员的说明，请参见 <see cref="M:System.Collections.IList.Remove(System.Object)" />。</param>
    </member>
    <member name="P:System.Data.Common.DbParameterCollection.Count">
      <summary vsli:raw="Specifies the number of items in the collection.">指定集合中项的数目。</summary>
      <returns vsli:raw="The number of items in the collection.">集合中项的数目。</returns>
    </member>
    <member name="P:System.Data.Common.DbParameterCollection.IsFixedSize">
      <summary vsli:raw="Specifies whether the collection is a fixed size.">指定集合是否为固定大小。</summary>
      <returns vsli:raw="&lt;see langword=&quot;true&quot; /&gt; if the collection is a fixed size; otherwise &lt;see langword=&quot;false&quot; /&gt;.">如果集合为固定大小，则为 <see langword="true" />；否则为 <see langword="false" />。</returns>
    </member>
    <member name="P:System.Data.Common.DbParameterCollection.IsReadOnly">
      <summary vsli:raw="Specifies whether the collection is read-only.">指定集合是否为只读。</summary>
      <returns vsli:raw="&lt;see langword=&quot;true&quot; /&gt; if the collection is read-only; otherwise &lt;see langword=&quot;false&quot; /&gt;.">如果该集合为只读，则为 <see langword="true" />；否则为 <see langword="false" />。</returns>
    </member>
    <member name="P:System.Data.Common.DbParameterCollection.IsSynchronized">
      <summary vsli:raw="Specifies whether the collection is synchronized.">指定是否同步集合。</summary>
      <returns vsli:raw="&lt;see langword=&quot;true&quot; /&gt; if the collection is synchronized; otherwise &lt;see langword=&quot;false&quot; /&gt;.">如果同步集合，则为 <see langword="true" />；否则为 <see langword="false" />。</returns>
    </member>
    <member name="P:System.Data.Common.DbParameterCollection.Item(System.Int32)">
      <summary vsli:raw="Gets or sets the &lt;see cref=&quot;T:System.Data.Common.DbParameter&quot; /&gt; at the specified index.">获取或设置指定索引处的 <see cref="T:System.Data.Common.DbParameter" />。</summary>
      <param name="index" vsli:raw="The zero-based index of the parameter.">参数的从零开始的索引。</param>
      <exception cref="T:System.IndexOutOfRangeException" vsli:raw="The specified index does not exist.">指定的索引不存在。</exception>
      <returns vsli:raw="The &lt;see cref=&quot;T:System.Data.Common.DbParameter&quot; /&gt; at the specified index.">指定索引处的 <see cref="T:System.Data.Common.DbParameter" />。</returns>
    </member>
    <member name="P:System.Data.Common.DbParameterCollection.Item(System.String)">
      <summary vsli:raw="Gets or sets the &lt;see cref=&quot;T:System.Data.Common.DbParameter&quot; /&gt; with the specified name.">获取或设置具有指定名称的 <see cref="T:System.Data.Common.DbParameter" />。</summary>
      <param name="parameterName" vsli:raw="The name of the &lt;see cref=&quot;T:System.Data.Common.DbParameter&quot; /&gt;.">参数的名称。</param>
      <exception cref="T:System.IndexOutOfRangeException" vsli:raw="The specified index does not exist.">指定的索引不存在。</exception>
      <returns vsli:raw="The &lt;see cref=&quot;T:System.Data.Common.DbParameter&quot; /&gt; with the specified name.">具有指定名称的 <see cref="T:System.Data.Common.DbParameter" />。</returns>
    </member>
    <member name="P:System.Data.Common.DbParameterCollection.SyncRoot">
      <summary vsli:raw="Specifies the &lt;see cref=&quot;T:System.Object&quot; /&gt; to be used to synchronize access to the collection.">指定将用于同步集合访问的 <see cref="T:System.Object" />。</summary>
      <returns vsli:raw="A &lt;see cref=&quot;T:System.Object&quot; /&gt; to be used to synchronize access to the &lt;see cref=&quot;T:System.Data.Common.DbParameterCollection&quot; /&gt;.">用于同步 <see cref="T:System.Data.Common.DbParameterCollection" /> 访问的 <see cref="T:System.Object" />。</returns>
    </member>
    <member name="P:System.Data.Common.DbParameterCollection.System#Collections#IList#Item(System.Int32)">
      <summary vsli:raw="Gets or sets the element at the specified index.">获取或设置指定索引处的元素。</summary>
      <param name="index" vsli:raw="The zero-based index of the element to get or set.">要获取或设置的元素的从零开始的索引。</param>
      <returns vsli:raw="The element at the specified index.">指定索引处的元素。</returns>
    </member>
    <member name="P:System.Data.Common.DbParameterCollection.System#Data#IDataParameterCollection#Item(System.String)">
      <summary vsli:raw="Gets or sets the parameter at the specified index.">获取或设置指定索引处的参数。</summary>
      <param name="parameterName" vsli:raw="The name of the parameter to retrieve.">要检索的参数的名称。</param>
      <returns vsli:raw="An &lt;see cref=&quot;T:System.Object&quot; /&gt; at the specified index.">指定的索引中的一个 <see cref="T:System.Object" />。</returns>
    </member>
    <member name="T:System.Data.Common.DbProviderFactories">
      <summary vsli:raw="Represents a set of static methods for creating one or more instances of &lt;see cref=&quot;T:System.Data.Common.DbProviderFactory&quot; /&gt; classes.">表示一组静态方法，这些方法用于创建 <see cref="T:System.Data.Common.DbProviderFactory" /> 类的一个或多个实例。</summary>
    </member>
    <member name="M:System.Data.Common.DbProviderFactories.GetFactory(System.Data.Common.DbConnection)">
      <summary vsli:raw="Returns an instance of a &lt;see cref=&quot;T:System.Data.Common.DbProviderFactory&quot; /&gt;.">返回 <see cref="T:System.Data.Common.DbProviderFactory" /> 的一个实例。</summary>
      <param name="connection" vsli:raw="The connection used.">要使用的连接。</param>
      <returns vsli:raw="An instance of a &lt;see cref=&quot;T:System.Data.Common.DbProviderFactory&quot; /&gt; for a specified connection.">指定连接的 <see cref="T:System.Data.Common.DbProviderFactory" /> 实例。</returns>
    </member>
    <member name="M:System.Data.Common.DbProviderFactories.GetFactory(System.Data.DataRow)">
      <summary vsli:raw="Returns an instance of a &lt;see cref=&quot;T:System.Data.Common.DbProviderFactory&quot; /&gt;.">返回 <see cref="T:System.Data.Common.DbProviderFactory" /> 的一个实例。</summary>
      <param name="providerRow" vsli:raw="&lt;see cref=&quot;T:System.Data.DataRow&quot; /&gt; containing the provider's configuration information.">
        <see cref="T:System.Data.DataRow" /> 包含提供程序的配置信息。</param>
      <returns vsli:raw="An instance of a &lt;see cref=&quot;T:System.Data.Common.DbProviderFactory&quot; /&gt; for a specified &lt;see cref=&quot;T:System.Data.DataRow&quot; /&gt;.">指定 <see cref="T:System.Data.Common.DbProviderFactory" /> 的 <see cref="T:System.Data.DataRow" /> 的一个实例。</returns>
    </member>
    <member name="M:System.Data.Common.DbProviderFactories.GetFactory(System.String)">
      <summary vsli:raw="Returns an instance of a &lt;see cref=&quot;T:System.Data.Common.DbProviderFactory&quot; /&gt;.">返回 <see cref="T:System.Data.Common.DbProviderFactory" /> 的一个实例。</summary>
      <param name="providerInvariantName" vsli:raw="Invariant name of a provider.">提供程序的固定名称。</param>
      <returns vsli:raw="An instance of a &lt;see cref=&quot;T:System.Data.Common.DbProviderFactory&quot; /&gt; for a specified provider name.">指定提供程序名称的 <see cref="T:System.Data.Common.DbProviderFactory" /> 的一个实例。</returns>
    </member>
    <member name="M:System.Data.Common.DbProviderFactories.GetFactoryClasses">
      <summary vsli:raw="Returns a &lt;see cref=&quot;T:System.Data.DataTable&quot; /&gt; that contains information about all installed providers that implement &lt;see cref=&quot;T:System.Data.Common.DbProviderFactory&quot; /&gt;.">返回一个 <see cref="T:System.Data.DataTable" />，其中包含有关实现 <see cref="T:System.Data.Common.DbProviderFactory" /> 的所有已安装提供程序的信息。</summary>
      <returns vsli:raw="A &lt;see cref=&quot;T:System.Data.DataTable&quot; /&gt; containing &lt;see cref=&quot;T:System.Data.DataRow&quot; /&gt; objects that contain the following data:  &#xA;  &#xA; &lt;list type=&quot;table&quot;&gt;&lt;listheader&gt;&lt;term&gt; Column ordinal&lt;/term&gt;&lt;description&gt; Column name&lt;/description&gt;&lt;description&gt; Description&lt;/description&gt;&lt;/listheader&gt;&lt;item&gt;&lt;term&gt; 0&lt;/term&gt;&lt;description&gt; Name&lt;/description&gt;&lt;description&gt; Human-readable name for the data provider.&lt;/description&gt;&lt;/item&gt;&lt;item&gt;&lt;term&gt; 1&lt;/term&gt;&lt;description&gt; Description&lt;/description&gt;&lt;description&gt; Human-readable description of the data provider.&lt;/description&gt;&lt;/item&gt;&lt;item&gt;&lt;term&gt; 2&lt;/term&gt;&lt;description&gt; InvariantName&lt;/description&gt;&lt;description&gt; Name that can be used programmatically to refer to the data provider.&lt;/description&gt;&lt;/item&gt;&lt;item&gt;&lt;term&gt; 3&lt;/term&gt;&lt;description&gt; AssemblyQualifiedName&lt;/description&gt;&lt;description&gt; Fully qualified name of the factory class, which contains enough information to instantiate the object.&lt;/description&gt;&lt;/item&gt;&lt;/list&gt;">一个包含 <see cref="T:System.Data.DataRow" /> 对象的 <see cref="T:System.Data.DataTable" />，这些对象具有以下数据： 
 <list type="table"><listheader><term> 列序号</term><description> 列名称</description><description> 描述</description></listheader><item><term> 0</term><description> Name</description><description> 数据提供程序的可识别名称。</description></item><item><term> 1</term><description> 描述</description><description> 数据提供程序的可识别描述。</description></item><item><term> 2</term><description> InvariantName</description><description> 可以以编程方式用于引用数据提供程序的名称。</description></item><item><term> 3</term><description> AssemblyQualifiedName</description><description> 工厂类的完全限定名，它包含用于实例化该对象的足够的信息。</description></item></list></returns>
    </member>
    <member name="M:System.Data.Common.DbProviderFactories.GetProviderInvariantNames">
      <summary vsli:raw="Returns the invariant provider names for all registered instances of &lt;see cref=&quot;T:System.Data.Common.DbProviderFactory&quot; /&gt;.">为 <see cref="T:System.Data.Common.DbProviderFactory" /> 的所有已注册的实例返回固定提供程序名称。</summary>
      <returns vsli:raw="The invariant provider names for all registered instances of &lt;see cref=&quot;T:System.Data.Common.DbProviderFactory&quot; /&gt;.">
        <see cref="T:System.Data.Common.DbProviderFactory" /> 的所有已注册实例的固定提供程序名称。</returns>
    </member>
    <member name="M:System.Data.Common.DbProviderFactories.RegisterFactory(System.String,System.Data.Common.DbProviderFactory)">
      <summary vsli:raw="Registers an instance of &lt;see cref=&quot;T:System.Data.Common.DbProviderFactory&quot; /&gt; under the specified invariant provider name.">使用指定的固定提供程序名称注册 <see cref="T:System.Data.Common.DbProviderFactory" /> 的实例。</summary>
      <param name="providerInvariantName" vsli:raw="The invariant provider name under which to register the provider.">用于注册提供程序的固定提供程序名称。</param>
      <param name="factory" vsli:raw="The instance of the provider factory to be registered.">要注册的提供程序工厂实例。</param>
    </member>
    <member name="M:System.Data.Common.DbProviderFactories.RegisterFactory(System.String,System.String)">
      <summary vsli:raw="Registers a &lt;see cref=&quot;T:System.Data.Common.DbProviderFactory&quot; /&gt; with the given assembly-qualified name under the specified invariant provider name.">使用按指定的固定提供程序名称给定的程序集限定名称注册 <see cref="T:System.Data.Common.DbProviderFactory" />。</summary>
      <param name="providerInvariantName" vsli:raw="The invariant provider name under which to register the provider.">用于注册提供程序的固定提供程序名称。</param>
      <param name="factoryTypeAssemblyQualifiedName" vsli:raw="The assembly-qualified name for a &lt;see cref=&quot;T:System.Data.Common.DbProviderFactory&quot; /&gt;.">
        <see cref="T:System.Data.Common.DbProviderFactory" /> 的程序集限定名称。</param>
    </member>
    <member name="M:System.Data.Common.DbProviderFactories.RegisterFactory(System.String,System.Type)">
      <summary vsli:raw="Registers a &lt;see cref=&quot;T:System.Data.Common.DbProviderFactory&quot; /&gt; with the given type under the specified invariant provider name.">使用按指定的固定提供程序名称给定的类型注册 <see cref="T:System.Data.Common.DbProviderFactory" />。</summary>
      <param name="providerInvariantName" vsli:raw="The invariant provider name under which to register the provider.">用于注册提供程序的固定提供程序名称。</param>
      <param name="providerFactoryClass" vsli:raw="The type representing a &lt;see cref=&quot;T:System.Data.Common.DbProviderFactory&quot; /&gt;.">表示 <see cref="T:System.Data.Common.DbProviderFactory" /> 的类型。</param>
    </member>
    <member name="M:System.Data.Common.DbProviderFactories.TryGetFactory(System.String,System.Data.Common.DbProviderFactory@)">
      <summary vsli:raw="Attempts to get the &lt;see cref=&quot;T:System.Data.Common.DbProviderFactory&quot; /&gt; registered under the specified invariant provider name.">尝试获取按指定的固定提供程序名称注册的 <see cref="T:System.Data.Common.DbProviderFactory" />。</summary>
      <param name="providerInvariantName" vsli:raw="The invariant provider name to look up.">要查找的固定提供程序名称。</param>
      <param name="factory" vsli:raw="When this method returns, contains the &lt;see cref=&quot;T:System.Data.Common.DbProviderFactory&quot; /&gt; associated with the specified invariant provider name, if the name is found; otherwise, &lt;see langword=&quot;null&quot; /&gt;. This parameter is passed uninitialized.">当此方法返回时，如果找到指定的固定提供程序名称，则包含与此名称关联的 <see cref="T:System.Data.Common.DbProviderFactory" />；否则为 <see langword="null" />。 此参数未经初始化即被传递。</param>
      <returns vsli:raw="&lt;see langword=&quot;true&quot; /&gt; if a provider is registered under the specified invariant provider name; otherwise, &lt;see langword=&quot;false&quot; /&gt;.">如果提供程序是使用指定的固定提供程序名称注册的，则为 <see langword="true" />；否则为 <see langword="false" />。</returns>
    </member>
    <member name="M:System.Data.Common.DbProviderFactories.UnregisterFactory(System.String)">
      <summary vsli:raw="Removes a &lt;see cref=&quot;T:System.Data.Common.DbProviderFactory&quot; /&gt; registration for the given provider invariant name.">删除给定提供程序固定名称的 <see cref="T:System.Data.Common.DbProviderFactory" /> 注册。</summary>
      <param name="providerInvariantName" vsli:raw="The invariant provider name of the registration to remove.">要删除的注册的固定提供程序名称。</param>
      <returns vsli:raw="&lt;see langword=&quot;true&quot; /&gt; if the registration is successfully found and removed; otherwise, &lt;see langword=&quot;false&quot; /&gt;. This method returns &lt;see langword=&quot;false&quot; /&gt; if a registration for &lt;paramref name=&quot;providerInvariantName&quot; /&gt; is not found.">如果成功找到并删除注册，则为 <see langword="true" />；否则为 <see langword="false" />。 如果没有找到 <paramref name="providerInvariantName" /> 的注册，此方法将返回 <see langword="false" />。</returns>
    </member>
    <member name="T:System.Data.Common.DbProviderFactory">
      <summary vsli:raw="Represents a set of methods for creating instances of a provider's implementation of the data source classes.">表示一组方法，这些方法用于创建提供程序对数据源类的实现的实例。</summary>
    </member>
    <member name="M:System.Data.Common.DbProviderFactory.#ctor">
      <summary vsli:raw="Initializes a new instance of the &lt;see cref=&quot;T:System.Data.Common.DbProviderFactory&quot; /&gt; class.">初始化 <see cref="T:System.Data.Common.DbProviderFactory" /> 类的新实例。</summary>
    </member>
    <member name="M:System.Data.Common.DbProviderFactory.CreateCommand">
      <summary vsli:raw="Returns a new instance of the provider's class that implements the &lt;see cref=&quot;T:System.Data.Common.DbCommand&quot; /&gt; class.">返回实现 <see cref="T:System.Data.Common.DbCommand" /> 类的提供程序类的一个新实例。</summary>
      <returns vsli:raw="A new instance of &lt;see cref=&quot;T:System.Data.Common.DbCommand&quot; /&gt;.">
        <see cref="T:System.Data.Common.DbCommand" /> 的新实例。</returns>
    </member>
    <member name="M:System.Data.Common.DbProviderFactory.CreateCommandBuilder">
      <summary vsli:raw="Returns a new instance of the provider's class that implements the &lt;see cref=&quot;T:System.Data.Common.DbCommandBuilder&quot; /&gt; class.">返回实现 <see cref="T:System.Data.Common.DbCommandBuilder" /> 类的提供程序类的一个新实例。</summary>
      <returns vsli:raw="A new instance of &lt;see cref=&quot;T:System.Data.Common.DbCommandBuilder&quot; /&gt;.">
        <see cref="T:System.Data.Common.DbCommandBuilder" /> 的新实例。</returns>
    </member>
    <member name="M:System.Data.Common.DbProviderFactory.CreateConnection">
      <summary vsli:raw="Returns a new instance of the provider's class that implements the &lt;see cref=&quot;T:System.Data.Common.DbConnection&quot; /&gt; class.">返回实现 <see cref="T:System.Data.Common.DbConnection" /> 类的提供程序类的一个新实例。</summary>
      <returns vsli:raw="A new instance of &lt;see cref=&quot;T:System.Data.Common.DbConnection&quot; /&gt;.">
        <see cref="T:System.Data.Common.DbConnection" /> 的新实例。</returns>
    </member>
    <member name="M:System.Data.Common.DbProviderFactory.CreateConnectionStringBuilder">
      <summary vsli:raw="Returns a new instance of the provider's class that implements the &lt;see cref=&quot;T:System.Data.Common.DbConnectionStringBuilder&quot; /&gt; class.">返回实现 <see cref="T:System.Data.Common.DbConnectionStringBuilder" /> 类的提供程序类的一个新实例。</summary>
      <returns vsli:raw="A new instance of &lt;see cref=&quot;T:System.Data.Common.DbConnectionStringBuilder&quot; /&gt;.">
        <see cref="T:System.Data.Common.DbConnectionStringBuilder" /> 的新实例。</returns>
    </member>
    <member name="M:System.Data.Common.DbProviderFactory.CreateDataAdapter">
      <summary vsli:raw="Returns a new instance of the provider's class that implements the &lt;see cref=&quot;T:System.Data.Common.DbDataAdapter&quot; /&gt; class.">返回实现 <see cref="T:System.Data.Common.DbDataAdapter" /> 类的提供程序类的一个新实例。</summary>
      <returns vsli:raw="A new instance of &lt;see cref=&quot;T:System.Data.Common.DbDataAdapter&quot; /&gt;.">
        <see cref="T:System.Data.Common.DbDataAdapter" /> 的新实例。</returns>
    </member>
    <member name="M:System.Data.Common.DbProviderFactory.CreateDataSourceEnumerator">
      <summary vsli:raw="Returns a new instance of the provider's class that implements the &lt;see cref=&quot;T:System.Data.Common.DbDataSourceEnumerator&quot; /&gt; class.">返回实现 <see cref="T:System.Data.Common.DbDataSourceEnumerator" /> 类的提供程序类的一个新实例。</summary>
      <returns vsli:raw="A new instance of &lt;see cref=&quot;T:System.Data.Common.DbDataSourceEnumerator&quot; /&gt;.">
        <see cref="T:System.Data.Common.DbDataSourceEnumerator" /> 的新实例。</returns>
    </member>
    <member name="M:System.Data.Common.DbProviderFactory.CreateParameter">
      <summary vsli:raw="Returns a new instance of the provider's class that implements the &lt;see cref=&quot;T:System.Data.Common.DbParameter&quot; /&gt; class.">返回实现 <see cref="T:System.Data.Common.DbParameter" /> 类的提供程序类的一个新实例。</summary>
      <returns vsli:raw="A new instance of &lt;see cref=&quot;T:System.Data.Common.DbParameter&quot; /&gt;.">
        <see cref="T:System.Data.Common.DbParameter" /> 的新实例。</returns>
    </member>
    <member name="P:System.Data.Common.DbProviderFactory.CanCreateCommandBuilder">
      <summary vsli:raw="Gets a value that indicates whether this &lt;see cref=&quot;T:System.Data.Common.DbProviderFactory&quot; /&gt; instance supports the &lt;see cref=&quot;T:System.Data.Common.DbCommandBuilder&quot; /&gt; class.">获取一个值，该值指示此 <see cref="T:System.Data.Common.DbProviderFactory" /> 是否支持 <see cref="T:System.Data.Common.DbCommandBuilder" /> 类。</summary>
      <returns vsli:raw="&lt;see langword=&quot;true&quot; /&gt; if this instance supports the &lt;see cref=&quot;T:System.Data.Common.DbCommandBuilder&quot; /&gt; class; otherwise, &lt;see langword=&quot;false&quot; /&gt;.">
        <see langword="true" /> 如果此实例支持 <see cref="T:System.Data.Common.DbCommandBuilder" /> 类，则为; 否则为 <see langword="false" /> 。</returns>
    </member>
    <member name="P:System.Data.Common.DbProviderFactory.CanCreateDataAdapter">
      <summary vsli:raw="Gets a value that indicates whether this &lt;see cref=&quot;T:System.Data.Common.DbProviderFactory&quot; /&gt; instance supports the &lt;see cref=&quot;T:System.Data.Common.DbDataAdapter&quot; /&gt; class.">获取一个值，该值指示此 <see cref="T:System.Data.Common.DbProviderFactory" /> 是否支持 <see cref="T:System.Data.Common.DbDataAdapter" /> 类。</summary>
      <returns vsli:raw="&lt;see langword=&quot;true&quot; /&gt; if the instance supports the &lt;see cref=&quot;T:System.Data.Common.DbDataAdapter&quot; /&gt; class; otherwise, &lt;see langword=&quot;false&quot; /&gt;.">
        <see langword="true" /> 如果该实例支持 <see cref="T:System.Data.Common.DbDataAdapter" /> 类，则为; 否则为 <see langword="false" /> 。</returns>
    </member>
    <member name="P:System.Data.Common.DbProviderFactory.CanCreateDataSourceEnumerator">
      <summary vsli:raw="Gets a value that indicates whether this &lt;see cref=&quot;T:System.Data.Common.DbProviderFactory&quot; /&gt; instance supports the &lt;see cref=&quot;T:System.Data.Common.DbDataSourceEnumerator&quot; /&gt; class.">获取一个值，该值指示此 <see cref="T:System.Data.Common.DbProviderFactory" /> 是否支持 <see cref="T:System.Data.Common.DbDataSourceEnumerator" /> 类。</summary>
      <returns vsli:raw="&lt;see langword=&quot;true&quot; /&gt; if the instance supports the &lt;see cref=&quot;T:System.Data.Common.DbDataSourceEnumerator&quot; /&gt; class; otherwise, &lt;see langword=&quot;false&quot; /&gt;.">
        <see langword="true" /> 如果该实例支持 <see cref="T:System.Data.Common.DbDataSourceEnumerator" /> 类，则为; 否则为 <see langword="false" /> 。</returns>
    </member>
    <member name="T:System.Data.Common.DbProviderSpecificTypePropertyAttribute">
      <summary vsli:raw="Identifies which provider-specific property in the strongly typed parameter classes is to be used when setting a provider-specific type.">标识在设置提供程序特定的类型时，使用强类型参数类中的哪个提供程序特定的属性。</summary>
    </member>
    <member name="M:System.Data.Common.DbProviderSpecificTypePropertyAttribute.#ctor(System.Boolean)">
      <summary vsli:raw="Initializes a new instance of the &lt;see cref=&quot;T:System.Data.Common.DbProviderSpecificTypePropertyAttribute&quot; /&gt; class.">初始化 <see cref="T:System.Data.Common.DbProviderSpecificTypePropertyAttribute" /> 类的新实例。</summary>
      <param name="isProviderSpecificTypeProperty" vsli:raw="Specifies whether this property is a provider-specific property.">指定该属性是否是提供程序特定的属性。</param>
    </member>
    <member name="P:System.Data.Common.DbProviderSpecificTypePropertyAttribute.IsProviderSpecificTypeProperty">
      <summary vsli:raw="Indicates whether the attributed property is a provider-specific type.">指示特性化属性是否为特定于提供程序的类型。</summary>
      <returns vsli:raw="&lt;see langword=&quot;true&quot; /&gt; if the property that this attribute is applied to is a provider-specific type property; otherwise &lt;see langword=&quot;false&quot; /&gt;.">如果此特性所应用的属性是特定于提供程序的类型属性，则为 <see langword="true" />；否则为 <see langword="false" />。</returns>
    </member>
    <member name="T:System.Data.Common.DbTransaction">
      <summary vsli:raw="Defines the core behavior of database transactions and provides a base class for database-specific transactions.">定义数据库事务的核心行为，并为数据库专用事务提供基类。</summary>
    </member>
    <member name="M:System.Data.Common.DbTransaction.#ctor">
      <summary vsli:raw="Initializes a new &lt;see cref=&quot;T:System.Data.Common.DbTransaction&quot; /&gt; object.">初始化新的 <see cref="T:System.Data.Common.DbTransaction" /> 对象。</summary>
    </member>
    <member name="M:System.Data.Common.DbTransaction.Commit">
      <summary vsli:raw="When overridden in a derived class, commits the database transaction.">在派生类中重写时，提交数据库事务。</summary>
    </member>
    <member name="M:System.Data.Common.DbTransaction.CommitAsync(System.Threading.CancellationToken)">
      <summary vsli:raw="Asynchronously commits the database transaction.">异步提交数据库事务。</summary>
      <param name="cancellationToken" vsli:raw="An optional token to cancel the asynchronous operation. The default value is &lt;see cref=&quot;P:System.Threading.CancellationToken.None&quot; /&gt;.">用于取消异步操作的可选令牌。 默认值为 <see cref="P:System.Threading.CancellationToken.None" />。</param>
      <returns vsli:raw="A &lt;see cref=&quot;T:System.Threading.Tasks.Task&quot; /&gt; representing the asynchronous operation.">表示异步操作的 <see cref="T:System.Threading.Tasks.Task" />。</returns>
    </member>
    <member name="M:System.Data.Common.DbTransaction.Dispose">
      <summary vsli:raw="Releases the unmanaged resources used by the &lt;see cref=&quot;T:System.Data.Common.DbTransaction&quot; /&gt;.">释放 <see cref="T:System.Data.Common.DbTransaction" /> 使用的非托管资源。</summary>
    </member>
    <member name="M:System.Data.Common.DbTransaction.Dispose(System.Boolean)">
      <summary vsli:raw="Releases the unmanaged resources used by the &lt;see cref=&quot;T:System.Data.Common.DbTransaction&quot; /&gt; and optionally releases the managed resources.">释放由 <see cref="T:System.Data.Common.DbTransaction" /> 占用的非托管资源，还可以另外再释放托管资源。</summary>
      <param name="disposing" vsli:raw="If &lt;see langword=&quot;true&quot; /&gt;, this method releases all resources held by any managed objects that this &lt;see cref=&quot;T:System.Data.Common.DbTransaction&quot; /&gt; references.">如果为 <see langword="true" />，此方法将释放由此 <see cref="T:System.Data.Common.DbTransaction" /> 引用的任何托管对象所保留的全部资源。</param>
    </member>
    <member name="M:System.Data.Common.DbTransaction.DisposeAsync">
      <summary vsli:raw="Asynchronously diposes the transaction object.">异步处置事务对象。</summary>
      <returns vsli:raw="A &lt;see cref=&quot;T:System.Threading.Tasks.ValueTask&quot; /&gt; representing the asynchronous operation.">表示异步操作的 <see cref="T:System.Threading.Tasks.ValueTask" />。</returns>
    </member>
    <member name="M:System.Data.Common.DbTransaction.Release(System.String)">
      <summary vsli:raw="Destroys a savepoint previously defined in the current transaction. This allows the system to reclaim some resources before the transaction ends.">销毁先前在当前事务中定义的保存点。 这允许系统在事务结束之前回收一些资源。</summary>
      <param name="savepointName" vsli:raw="The name of the savepoint to release.">要释放的保存点的名称。</param>
    </member>
    <member name="M:System.Data.Common.DbTransaction.ReleaseAsync(System.String,System.Threading.CancellationToken)">
      <summary vsli:raw="Destroys a savepoint previously defined in the current transaction. This allows the system to reclaim some resources before the transaction ends.">销毁先前在当前事务中定义的保存点。 这允许系统在事务结束之前回收一些资源。</summary>
      <param name="savepointName" vsli:raw="The name of the savepoint to release.">要释放的保存点的名称。</param>
      <param name="cancellationToken" vsli:raw="An optional token to cancel the asynchronous operation. The default value is &lt;see cref=&quot;P:System.Threading.CancellationToken.None&quot; /&gt;.">用于取消异步操作的可选令牌。 默认值为 <see cref="P:System.Threading.CancellationToken.None" />。</param>
      <returns vsli:raw="A &lt;see cref=&quot;T:System.Threading.Tasks.Task&quot; /&gt; representing the asynchronous operation.">表示异步操作的 <see cref="T:System.Threading.Tasks.Task" />。</returns>
    </member>
    <member name="M:System.Data.Common.DbTransaction.Rollback">
      <summary vsli:raw="When overridden in a derived class, rolls back a transaction from a pending state.">在派生类中重写时，从挂起状态回滚事务。</summary>
    </member>
    <member name="M:System.Data.Common.DbTransaction.Rollback(System.String)">
      <summary vsli:raw="Rolls back all commands that were executed after the specified savepoint was established.">回滚在建立指定保存点后执行的所有命令。</summary>
      <param name="savepointName" vsli:raw="The name of the savepoint to roll back to.">要回滚到的保存点的名称。</param>
    </member>
    <member name="M:System.Data.Common.DbTransaction.RollbackAsync(System.String,System.Threading.CancellationToken)">
      <summary vsli:raw="Rolls back all commands that were executed after the specified savepoint was established.">回滚在建立指定保存点后执行的所有命令。</summary>
      <param name="savepointName" vsli:raw="The name of the savepoint to roll back to.">要回滚到的保存点的名称。</param>
      <param name="cancellationToken" vsli:raw="An optional token to cancel the asynchronous operation. The default value is &lt;see cref=&quot;P:System.Threading.CancellationToken.None&quot; /&gt;.">用于取消异步操作的可选令牌。 默认值为 <see cref="P:System.Threading.CancellationToken.None" />。</param>
      <returns vsli:raw="A &lt;see cref=&quot;T:System.Threading.Tasks.Task&quot; /&gt; representing the asynchronous operation.">表示异步操作的 <see cref="T:System.Threading.Tasks.Task" />。</returns>
    </member>
    <member name="M:System.Data.Common.DbTransaction.RollbackAsync(System.Threading.CancellationToken)">
      <summary vsli:raw="Asynchronously rolls back a transaction from a pending state.">从挂起状态异步回滚事务。</summary>
      <param name="cancellationToken" vsli:raw="An optional token to cancel the asynchronous operation. The default value is &lt;see cref=&quot;P:System.Threading.CancellationToken.None&quot; /&gt;.">用于取消异步操作的可选令牌。 默认值为 <see cref="P:System.Threading.CancellationToken.None" />。</param>
      <returns vsli:raw="A task representing the asynchronous operation.">表示异步操作的任务。</returns>
    </member>
    <member name="M:System.Data.Common.DbTransaction.Save(System.String)">
      <summary vsli:raw="Creates a savepoint in the transaction. This allows all commands that are executed after the savepoint was established to be rolled back, restoring the transaction state to what it was at the time of the savepoint.">在事务中创建保存点。 这样，在建立保存点后执行的所有命令都将被回滚，并将事务状态还原到保存点时的状态。</summary>
      <param name="savepointName" vsli:raw="The name of the savepoint to be created.">要创建的保存点的名称。</param>
    </member>
    <member name="M:System.Data.Common.DbTransaction.SaveAsync(System.String,System.Threading.CancellationToken)">
      <summary vsli:raw="Creates a savepoint in the transaction. This allows all commands that are executed after the savepoint was established to be rolled back, restoring the transaction state to what it was at the time of the savepoint.">在事务中创建保存点。 这样，在建立保存点后执行的所有命令都将被回滚，并将事务状态还原到保存点时的状态。</summary>
      <param name="savepointName" vsli:raw="The name of the savepoint to be created.">要创建的保存点的名称。</param>
      <param name="cancellationToken" vsli:raw="An optional token to cancel the asynchronous operation. The default value is &lt;see cref=&quot;P:System.Threading.CancellationToken.None&quot; /&gt;.">用于取消异步操作的可选令牌。 默认值为 <see cref="P:System.Threading.CancellationToken.None" />。</param>
      <returns vsli:raw="A &lt;see cref=&quot;T:System.Threading.Tasks.Task&quot; /&gt; representing the asynchronous operation.">表示异步操作的 <see cref="T:System.Threading.Tasks.Task" />。</returns>
    </member>
    <member name="P:System.Data.Common.DbTransaction.Connection">
      <summary vsli:raw="Specifies the &lt;see cref=&quot;T:System.Data.Common.DbConnection&quot; /&gt; object associated with the transaction.">指定与该事务关联的 <see cref="T:System.Data.Common.DbConnection" /> 对象。</summary>
      <returns vsli:raw="The &lt;see cref=&quot;T:System.Data.Common.DbConnection&quot; /&gt; object associated with the transaction.">与事务关联的 <see cref="T:System.Data.Common.DbConnection" /> 对象。</returns>
    </member>
    <member name="P:System.Data.Common.DbTransaction.DbConnection">
      <summary vsli:raw="When overridden in a derived class, gets the &lt;see cref=&quot;T:System.Data.Common.DbConnection&quot; /&gt; object associated with the transaction.">在派生类中重写时，获取与事务关联的 <see cref="T:System.Data.Common.DbConnection" /> 对象。</summary>
      <returns vsli:raw="The &lt;see cref=&quot;T:System.Data.Common.DbConnection&quot; /&gt; object associated with the transaction.">与事务关联的 <see cref="T:System.Data.Common.DbConnection" /> 对象。</returns>
    </member>
    <member name="P:System.Data.Common.DbTransaction.IsolationLevel">
      <summary vsli:raw="When overridden in a derived class, gets the isolation level for this transaction.">在派生类中重写时，获取此事务的隔离级别。</summary>
      <returns vsli:raw="The isolation level for this transaction.">此事务的隔离级别。</returns>
    </member>
    <member name="P:System.Data.Common.DbTransaction.SupportsSavepoints">
      <summary vsli:raw="Gets a value that indicates whether this &lt;see cref=&quot;T:System.Data.Common.DbTransaction&quot; /&gt; instance supports database savepoints.&#xA;            If &lt;see langword=&quot;false&quot; /&gt;, the methods &lt;see cref=&quot;M:System.Data.Common.DbTransaction.SaveAsync(System.String,System.Threading.CancellationToken)&quot; /&gt;, &lt;see cref=&quot;M:System.Data.Common.DbTransaction.RollbackAsync(System.String,System.Threading.CancellationToken)&quot; /&gt; and &lt;see cref=&quot;M:System.Data.Common.DbTransaction.ReleaseAsync(System.String,System.Threading.CancellationToken)&quot; /&gt; as well as their synchronous counterparts are expected to throw &lt;see cref=&quot;T:System.NotSupportedException&quot; /&gt;.">获取一个值，该值指示此 <see cref="T:System.Data.Common.DbTransaction" /> 实例是否支持数据库保存点。
如果为 <see langword="false" />，则 <see cref="M:System.Data.Common.DbTransaction.SaveAsync(System.String,System.Threading.CancellationToken)" />、<see cref="M:System.Data.Common.DbTransaction.RollbackAsync(System.String,System.Threading.CancellationToken)" /> 和 <see cref="M:System.Data.Common.DbTransaction.ReleaseAsync(System.String,System.Threading.CancellationToken)" /> 方法及其同步对应项应引发 <see cref="T:System.NotSupportedException" />。</summary>
      <returns vsli:raw="&lt;see langword=&quot;true&quot; /&gt; if this &lt;see cref=&quot;T:System.Data.Common.DbTransaction&quot; /&gt; instance supports database savepoints; otherwise, &lt;see langword=&quot;false&quot; /&gt;.">
        <see langword="true" /> 如果此 <see cref="T:System.Data.Common.DbTransaction" /> 实例支持数据库保存点，则为; 否则为 <see langword="false" /> 。</returns>
    </member>
    <member name="P:System.Data.Common.DbTransaction.System#Data#IDbTransaction#Connection">
      <summary vsli:raw="Gets the &lt;see cref=&quot;T:System.Data.Common.DbConnection&quot; /&gt; object associated with the transaction, or a null reference if the transaction is no longer valid.">获取与事务关联的 <see cref="T:System.Data.Common.DbConnection" /> 对象，或空引用（如果该事务不再有效）。</summary>
      <returns vsli:raw="The &lt;see cref=&quot;T:System.Data.Common.DbConnection&quot; /&gt; object associated with the transaction.">与事务关联的 <see cref="T:System.Data.Common.DbConnection" /> 对象。</returns>
    </member>
    <member name="T:System.Data.Common.GroupByBehavior">
      <summary vsli:raw="Specifies the relationship between the columns in a GROUP BY clause and the non-aggregated columns in the select-list of a SELECT statement.">指定 GROUP BY 子句中的列与 SELECT 语句的选择列表中的非聚合列之间的关系。</summary>
    </member>
    <member name="F:System.Data.Common.GroupByBehavior.ExactMatch">
      <summary vsli:raw="The GROUP BY clause must contain all nonaggregated columns in the select list, and must not contain other columns not in the select list.">GROUP BY 子句必须包含选择列表中的所有非聚合列，而且不能包含不在选择列表中的其他列。</summary>
    </member>
    <member name="F:System.Data.Common.GroupByBehavior.MustContainAll">
      <summary vsli:raw="The GROUP BY clause must contain all nonaggregated columns in the select list, and can contain other columns not in the select list.">GROUP BY 子句必须包含选择列表中的所有非聚合列，而且可以包含不在选择列表中的其他列。</summary>
    </member>
    <member name="F:System.Data.Common.GroupByBehavior.NotSupported">
      <summary vsli:raw="The GROUP BY clause is not supported.">不支持 GROUP BY 子句。</summary>
    </member>
    <member name="F:System.Data.Common.GroupByBehavior.Unknown">
      <summary vsli:raw="The support for the GROUP BY clause is unknown.">对 GROUP BY 子句的支持尚不清楚。</summary>
    </member>
    <member name="F:System.Data.Common.GroupByBehavior.Unrelated">
      <summary vsli:raw="There is no relationship between the columns in the GROUP BY clause and the nonaggregated columns in the SELECT list. You may group by any column.">GROUP BY 子句中的列与 SELECT 列表中的非聚合列之间不存在关系。 可按任何列分组。</summary>
    </member>
    <member name="T:System.Data.Common.IDbColumnSchemaGenerator">
      <summary vsli:raw="Generates a column schema.">生成列架构。</summary>
    </member>
    <member name="M:System.Data.Common.IDbColumnSchemaGenerator.GetColumnSchema">
      <summary vsli:raw="Gets the column schema (&lt;see cref=&quot;T:System.Data.Common.DbColumn&quot; /&gt; collection).">获取列架构（<see cref="T:System.Data.Common.DbColumn" /> 集合）。</summary>
      <returns vsli:raw="The column schema (&lt;see cref=&quot;T:System.Data.Common.DbColumn&quot; /&gt; collection).">列架构（<see cref="T:System.Data.Common.DbColumn" /> 集合）。</returns>
    </member>
    <member name="T:System.Data.Common.IdentifierCase">
      <summary vsli:raw="Specifies how identifiers are treated by the data source when searching the system catalog.">指定在搜索系统目录时，数据源如何处理标识符。</summary>
    </member>
    <member name="F:System.Data.Common.IdentifierCase.Insensitive">
      <summary vsli:raw="The data source ignores identifier case when searching the system catalog. The identifiers &quot;ab&quot; and &quot;AB&quot; will match.">搜索系统目录时，数据源忽略标识符的大小写。 标识符“ab”和“AB”匹配。</summary>
    </member>
    <member name="F:System.Data.Common.IdentifierCase.Sensitive">
      <summary vsli:raw="The data source distinguishes identifier case when searching the system catalog. The identifiers &quot;ab&quot; and &quot;AB&quot; will not match.">搜索系统目录时，数据源区分标识符的大小写。 标识符“ab”和“AB”不匹配。</summary>
    </member>
    <member name="F:System.Data.Common.IdentifierCase.Unknown">
      <summary vsli:raw="The data source has ambiguous rules regarding identifier case and cannot discern this information.">数据源的标识符大小写规则不明确，无法识别此信息。</summary>
    </member>
    <member name="T:System.Data.Common.RowUpdatedEventArgs">
      <summary vsli:raw="Provides data for the &lt;see langword=&quot;RowUpdated&quot; /&gt; event of a .NET data provider.">为 .NET Framework 数据提供程序的 <see langword="RowUpdated" /> 事件提供数据。</summary>
    </member>
    <member name="M:System.Data.Common.RowUpdatedEventArgs.#ctor(System.Data.DataRow,System.Data.IDbCommand,System.Data.StatementType,System.Data.Common.DataTableMapping)">
      <summary vsli:raw="Initializes a new instance of the &lt;see cref=&quot;T:System.Data.Common.RowUpdatedEventArgs&quot; /&gt; class.">初始化 <see cref="T:System.Data.Common.RowUpdatedEventArgs" /> 类的新实例。</summary>
      <param name="dataRow" vsli:raw="The &lt;see cref=&quot;T:System.Data.DataRow&quot; /&gt; sent through an &lt;see cref=&quot;M:System.Data.Common.DbDataAdapter.Update(System.Data.DataSet)&quot; /&gt;.">通过 <see cref="M:System.Data.Common.DbDataAdapter.Update(System.Data.DataSet)" /> 发送 <see cref="T:System.Data.DataRow" />。</param>
      <param name="command" vsli:raw="The &lt;see cref=&quot;T:System.Data.IDbCommand&quot; /&gt; executed when &lt;see cref=&quot;M:System.Data.Common.DbDataAdapter.Update(System.Data.DataSet)&quot; /&gt; is called.">调用 <see cref="M:System.Data.Common.DbDataAdapter.Update(System.Data.DataSet)" /> 时执行的 <see cref="T:System.Data.IDbCommand" />。</param>
      <param name="statementType" vsli:raw="The type of SQL statement executed.">所执行的 SQL 语句类型。</param>
      <param name="tableMapping" vsli:raw="The &lt;see cref=&quot;T:System.Data.Common.DataTableMapping&quot; /&gt; sent through an &lt;see cref=&quot;M:System.Data.Common.DbDataAdapter.Update(System.Data.DataSet)&quot; /&gt;.">通过 <see cref="M:System.Data.Common.DbDataAdapter.Update(System.Data.DataSet)" /> 发送 <see cref="T:System.Data.Common.DataTableMapping" />。</param>
    </member>
    <member name="M:System.Data.Common.RowUpdatedEventArgs.CopyToRows(System.Data.DataRow[])">
      <summary vsli:raw="Copies references to the modified rows into the provided array.">将已修改的行的引用复制到提供的数组中。</summary>
      <param name="array" vsli:raw="The array of &lt;see cref=&quot;T:System.Data.DataRow&quot; /&gt; to copy into.">要复制到其中的 <see cref="T:System.Data.DataRow" /> 数组。</param>
    </member>
    <member name="M:System.Data.Common.RowUpdatedEventArgs.CopyToRows(System.Data.DataRow[],System.Int32)">
      <summary vsli:raw="Copies references to the modified rows into the provided array.">将已修改的行的引用复制到提供的数组中。</summary>
      <param name="array" vsli:raw="The array of &lt;see cref=&quot;T:System.Data.DataRow&quot; /&gt; to copy into.">要复制到其中的 <see cref="T:System.Data.DataRow" /> 数组。</param>
      <param name="arrayIndex" vsli:raw="The index in the array to start copying into.">要在数组中开始粘贴的位置的索引。</param>
    </member>
    <member name="P:System.Data.Common.RowUpdatedEventArgs.Command">
      <summary vsli:raw="Gets the &lt;see cref=&quot;T:System.Data.IDbCommand&quot; /&gt; executed when &lt;see cref=&quot;M:System.Data.Common.DbDataAdapter.Update(System.Data.DataSet)&quot; /&gt; is called.">调用 <see cref="M:System.Data.Common.DbDataAdapter.Update(System.Data.DataSet)" /> 时执行的 <see cref="T:System.Data.IDbCommand" />。</summary>
      <returns vsli:raw="The &lt;see cref=&quot;T:System.Data.IDbCommand&quot; /&gt; executed when &lt;see cref=&quot;M:System.Data.Common.DbDataAdapter.Update(System.Data.DataSet)&quot; /&gt; is called.">调用 <see cref="M:System.Data.Common.DbDataAdapter.Update(System.Data.DataSet)" /> 时执行的 <see cref="T:System.Data.IDbCommand" />。</returns>
    </member>
    <member name="P:System.Data.Common.RowUpdatedEventArgs.Errors">
      <summary vsli:raw="Gets any errors generated by the .NET data provider when the &lt;see cref=&quot;P:System.Data.Common.RowUpdatedEventArgs.Command&quot; /&gt; was executed.">获取当 <see cref="P:System.Data.Common.RowUpdatedEventArgs.Command" /> 执行时 .NET Framework 数据提供程序生成的任何错误。</summary>
      <returns vsli:raw="The errors generated by the .NET data provider when the &lt;see cref=&quot;P:System.Data.Common.RowUpdatedEventArgs.Command&quot; /&gt; was executed.">当 <see cref="P:System.Data.Common.RowUpdatedEventArgs.Command" /> 执行时 .NET Framework 数据提供程序生成的错误。</returns>
    </member>
    <member name="P:System.Data.Common.RowUpdatedEventArgs.RecordsAffected">
      <summary vsli:raw="Gets the number of rows changed, inserted, or deleted by execution of the SQL statement.">通过执行 SQL 语句获取更改、插入或删除的行数。</summary>
      <returns vsli:raw="The number of rows changed, inserted, or deleted; 0 if no rows were affected or the statement failed; and -1 for SELECT statements.">已更改、插入或删除的行数；如果没有受影响的行或语句失败，则为 0；对于 SELECT 语句为 -1。</returns>
    </member>
    <member name="P:System.Data.Common.RowUpdatedEventArgs.Row">
      <summary vsli:raw="Gets the &lt;see cref=&quot;T:System.Data.DataRow&quot; /&gt; sent through an &lt;see cref=&quot;M:System.Data.Common.DbDataAdapter.Update(System.Data.DataSet)&quot; /&gt;.">获取通过 <see cref="M:System.Data.Common.DbDataAdapter.Update(System.Data.DataSet)" /> 发送的 <see cref="T:System.Data.DataRow" />。</summary>
      <returns vsli:raw="The &lt;see cref=&quot;T:System.Data.DataRow&quot; /&gt; sent through an &lt;see cref=&quot;M:System.Data.Common.DbDataAdapter.Update(System.Data.DataSet)&quot; /&gt;.">通过 <see cref="M:System.Data.Common.DbDataAdapter.Update(System.Data.DataSet)" /> 发送 <see cref="T:System.Data.DataRow" />。</returns>
    </member>
    <member name="P:System.Data.Common.RowUpdatedEventArgs.RowCount">
      <summary vsli:raw="Gets the number of rows processed in a batch of updated records.">获取在一批更新记录中处理的行数。</summary>
      <returns vsli:raw="&lt;see langword=&quot;int&quot; /&gt; that specifies the number of row processed.">指定已处理的行数的 <see langword="int" />。</returns>
    </member>
    <member name="P:System.Data.Common.RowUpdatedEventArgs.StatementType">
      <summary vsli:raw="Gets the type of SQL statement executed.">获取所执行的 SQL 语句的类型。</summary>
      <returns vsli:raw="The type of SQL statement executed.">所执行的 SQL 语句类型。</returns>
    </member>
    <member name="P:System.Data.Common.RowUpdatedEventArgs.Status">
      <summary vsli:raw="Gets the &lt;see cref=&quot;T:System.Data.UpdateStatus&quot; /&gt; of the &lt;see cref=&quot;P:System.Data.Common.RowUpdatedEventArgs.Command&quot; /&gt; property.">获取 <see cref="P:System.Data.Common.RowUpdatedEventArgs.Command" /> 属性的 <see cref="T:System.Data.UpdateStatus" />。</summary>
      <returns vsli:raw="One of the &lt;see cref=&quot;T:System.Data.UpdateStatus&quot; /&gt; values. The default is &lt;see langword=&quot;Continue&quot; /&gt;.">
        <see cref="T:System.Data.UpdateStatus" /> 值之一。 默认值为 <see langword="Continue" />。</returns>
    </member>
    <member name="P:System.Data.Common.RowUpdatedEventArgs.TableMapping">
      <summary vsli:raw="Gets the &lt;see cref=&quot;T:System.Data.Common.DataTableMapping&quot; /&gt; sent through an &lt;see cref=&quot;M:System.Data.Common.DbDataAdapter.Update(System.Data.DataSet)&quot; /&gt;.">获取通过 <see cref="M:System.Data.Common.DbDataAdapter.Update(System.Data.DataSet)" /> 发送的 <see cref="T:System.Data.Common.DataTableMapping" />。</summary>
      <returns vsli:raw="The &lt;see cref=&quot;T:System.Data.Common.DataTableMapping&quot; /&gt; sent through an &lt;see cref=&quot;M:System.Data.Common.DbDataAdapter.Update(System.Data.DataSet)&quot; /&gt;.">通过 <see cref="M:System.Data.Common.DbDataAdapter.Update(System.Data.DataSet)" /> 发送 <see cref="T:System.Data.Common.DataTableMapping" />。</returns>
    </member>
    <member name="T:System.Data.Common.RowUpdatingEventArgs">
      <summary vsli:raw="Provides the data for the RowUpdating event of a .NET data provider.">为 .NET Framework 数据提供程序的 RowUpdating**** 事件提供数据。</summary>
    </member>
    <member name="M:System.Data.Common.RowUpdatingEventArgs.#ctor(System.Data.DataRow,System.Data.IDbCommand,System.Data.StatementType,System.Data.Common.DataTableMapping)">
      <summary vsli:raw="Initializes a new instance of the &lt;see cref=&quot;T:System.Data.Common.RowUpdatingEventArgs&quot; /&gt; class.">初始化 <see cref="T:System.Data.Common.RowUpdatingEventArgs" /> 类的新实例。</summary>
      <param name="dataRow" vsli:raw="The &lt;see cref=&quot;T:System.Data.DataRow&quot; /&gt; to &lt;see cref=&quot;M:System.Data.Common.DbDataAdapter.Update(System.Data.DataSet)&quot; /&gt;.">要进行 <see cref="T:System.Data.DataRow" /> 的 <see cref="M:System.Data.Common.DbDataAdapter.Update(System.Data.DataSet)" />。</param>
      <param name="command" vsli:raw="The &lt;see cref=&quot;T:System.Data.IDbCommand&quot; /&gt; to execute when &lt;see cref=&quot;M:System.Data.Common.DbDataAdapter.Update(System.Data.DataSet)&quot; /&gt; is called.">当调用 <see cref="T:System.Data.IDbCommand" /> 时执行的 <see cref="M:System.Data.Common.DbDataAdapter.Update(System.Data.DataSet)" />。</param>
      <param name="statementType" vsli:raw="The type of SQL statement to execute.">要执行的 SQL 语句的类型。</param>
      <param name="tableMapping" vsli:raw="The &lt;see cref=&quot;T:System.Data.Common.DataTableMapping&quot; /&gt; to send through an &lt;see cref=&quot;M:System.Data.Common.DbDataAdapter.Update(System.Data.DataSet)&quot; /&gt;.">要通过 <see cref="T:System.Data.Common.DataTableMapping" /> 发送的 <see cref="M:System.Data.Common.DbDataAdapter.Update(System.Data.DataSet)" />。</param>
    </member>
    <member name="P:System.Data.Common.RowUpdatingEventArgs.BaseCommand">
      <summary vsli:raw="Gets or sets the &lt;see cref=&quot;T:System.Data.IDbCommand&quot; /&gt; object for an instance of this class.">获取或设置此类的实例的 <see cref="T:System.Data.IDbCommand" /> 对象。</summary>
      <returns vsli:raw="The &lt;see cref=&quot;T:System.Data.IDbCommand&quot; /&gt; to execute during the &lt;see cref=&quot;M:System.Data.Common.DbDataAdapter.Update(System.Data.DataSet)&quot; /&gt;.">要在 <see cref="T:System.Data.IDbCommand" /> 过程中执行的 <see cref="M:System.Data.Common.DbDataAdapter.Update(System.Data.DataSet)" />。</returns>
    </member>
    <member name="P:System.Data.Common.RowUpdatingEventArgs.Command">
      <summary vsli:raw="Gets the &lt;see cref=&quot;T:System.Data.IDbCommand&quot; /&gt; to execute during the &lt;see cref=&quot;M:System.Data.Common.DbDataAdapter.Update(System.Data.DataSet)&quot; /&gt; operation.">获取要在 <see cref="T:System.Data.IDbCommand" /> 操作过程中执行的 <see cref="M:System.Data.Common.DbDataAdapter.Update(System.Data.DataSet)" />。</summary>
      <returns vsli:raw="The &lt;see cref=&quot;T:System.Data.IDbCommand&quot; /&gt; to execute during the &lt;see cref=&quot;M:System.Data.Common.DbDataAdapter.Update(System.Data.DataSet)&quot; /&gt;.">要在 <see cref="T:System.Data.IDbCommand" /> 过程中执行的 <see cref="M:System.Data.Common.DbDataAdapter.Update(System.Data.DataSet)" />。</returns>
    </member>
    <member name="P:System.Data.Common.RowUpdatingEventArgs.Errors">
      <summary vsli:raw="Gets any errors generated by the .NET data provider when the &lt;see cref=&quot;P:System.Data.Common.RowUpdatedEventArgs.Command&quot; /&gt; executes.">获取当 <see cref="P:System.Data.Common.RowUpdatedEventArgs.Command" /> 执行时 .NET Framework 数据提供程序生成的任何错误。</summary>
      <returns vsli:raw="The errors generated by the .NET data provider when the &lt;see cref=&quot;P:System.Data.Common.RowUpdatedEventArgs.Command&quot; /&gt; executes.">当 <see cref="P:System.Data.Common.RowUpdatedEventArgs.Command" /> 执行时 .NET Framework 数据提供程序生成的错误。</returns>
    </member>
    <member name="P:System.Data.Common.RowUpdatingEventArgs.Row">
      <summary vsli:raw="Gets the &lt;see cref=&quot;T:System.Data.DataRow&quot; /&gt; that will be sent to the server as part of an insert, update, or delete operation.">获取要作为插入、更新或删除操作的一部分发送到服务器的 <see cref="T:System.Data.DataRow" />。</summary>
      <returns vsli:raw="The &lt;see cref=&quot;T:System.Data.DataRow&quot; /&gt; to send through an &lt;see cref=&quot;M:System.Data.Common.DbDataAdapter.Update(System.Data.DataSet)&quot; /&gt;.">要通过 <see cref="T:System.Data.DataRow" /> 发送的 <see cref="M:System.Data.Common.DbDataAdapter.Update(System.Data.DataSet)" />。</returns>
    </member>
    <member name="P:System.Data.Common.RowUpdatingEventArgs.StatementType">
      <summary vsli:raw="Gets the type of SQL statement to execute.">获取要执行的 SQL 语句的类型。</summary>
      <returns vsli:raw="The type of SQL statement to execute.">要执行的 SQL 语句的类型。</returns>
    </member>
    <member name="P:System.Data.Common.RowUpdatingEventArgs.Status">
      <summary vsli:raw="Gets or sets the &lt;see cref=&quot;T:System.Data.UpdateStatus&quot; /&gt; of the &lt;see cref=&quot;P:System.Data.Common.RowUpdatedEventArgs.Command&quot; /&gt; property.">获取或设置 <see cref="T:System.Data.UpdateStatus" /> 属性的 <see cref="P:System.Data.Common.RowUpdatedEventArgs.Command" />。</summary>
      <returns vsli:raw="One of the &lt;see cref=&quot;T:System.Data.UpdateStatus&quot; /&gt; values. The default is &lt;see langword=&quot;Continue&quot; /&gt;.">
        <see cref="T:System.Data.UpdateStatus" /> 值之一。 默认值为 <see langword="Continue" />。</returns>
    </member>
    <member name="P:System.Data.Common.RowUpdatingEventArgs.TableMapping">
      <summary vsli:raw="Gets the &lt;see cref=&quot;T:System.Data.Common.DataTableMapping&quot; /&gt; to send through the &lt;see cref=&quot;M:System.Data.Common.DbDataAdapter.Update(System.Data.DataSet)&quot; /&gt;.">获取要通过 <see cref="T:System.Data.Common.DataTableMapping" /> 发送的 <see cref="M:System.Data.Common.DbDataAdapter.Update(System.Data.DataSet)" />。</summary>
      <returns vsli:raw="The &lt;see cref=&quot;T:System.Data.Common.DataTableMapping&quot; /&gt; to send through the &lt;see cref=&quot;M:System.Data.Common.DbDataAdapter.Update(System.Data.DataSet)&quot; /&gt;.">要通过 <see cref="T:System.Data.Common.DataTableMapping" /> 发送的 <see cref="M:System.Data.Common.DbDataAdapter.Update(System.Data.DataSet)" />。</returns>
    </member>
    <member name="T:System.Data.Common.SchemaTableColumn">
      <summary vsli:raw="Describes the column metadata of the schema for a database table.">描述数据库表的架构的列元数据。</summary>
    </member>
    <member name="F:System.Data.Common.SchemaTableColumn.AllowDBNull">
      <summary vsli:raw="Specifies whether value &lt;see langword=&quot;DBNull&quot; /&gt; is allowed.">指定是否允许值 <see langword="DBNull" />。</summary>
    </member>
    <member name="F:System.Data.Common.SchemaTableColumn.BaseColumnName">
      <summary vsli:raw="Specifies the name of the column in the schema table.">指定架构表中的列的名称。</summary>
    </member>
    <member name="F:System.Data.Common.SchemaTableColumn.BaseSchemaName">
      <summary vsli:raw="Specifies the name of the schema in the schema table.">指定架构表中的架构的名称。</summary>
    </member>
    <member name="F:System.Data.Common.SchemaTableColumn.BaseTableName">
      <summary vsli:raw="Specifies the name of the table in the schema table.">指定架构表中的表的名称。</summary>
    </member>
    <member name="F:System.Data.Common.SchemaTableColumn.ColumnName">
      <summary vsli:raw="Specifies the name of the column in the schema table.">指定架构表中的列的名称。</summary>
    </member>
    <member name="F:System.Data.Common.SchemaTableColumn.ColumnOrdinal">
      <summary vsli:raw="Specifies the ordinal of the column.">指定列的序号。</summary>
    </member>
    <member name="F:System.Data.Common.SchemaTableColumn.ColumnSize">
      <summary vsli:raw="Specifies the size of the column.">指定列的大小。</summary>
    </member>
    <member name="F:System.Data.Common.SchemaTableColumn.DataType">
      <summary vsli:raw="Specifies the type of data in the column.">指定列中数据的类型。</summary>
    </member>
    <member name="F:System.Data.Common.SchemaTableColumn.IsAliased">
      <summary vsli:raw="Specifies whether this column is aliased.">指定该列是否具有别名。</summary>
    </member>
    <member name="F:System.Data.Common.SchemaTableColumn.IsExpression">
      <summary vsli:raw="Specifies whether this column is an expression.">指定该列是否是一个表达式。</summary>
    </member>
    <member name="F:System.Data.Common.SchemaTableColumn.IsKey">
      <summary vsli:raw="Specifies whether this column is a key for the table.">指定该列是否是表的一个键。</summary>
    </member>
    <member name="F:System.Data.Common.SchemaTableColumn.IsLong">
      <summary vsli:raw="Specifies whether this column contains long data.">指定该列是否包含 long 型数据。</summary>
    </member>
    <member name="F:System.Data.Common.SchemaTableColumn.IsUnique">
      <summary vsli:raw="Specifies whether a unique constraint applies to this column.">指定是否有唯一的约束应用于此列。</summary>
    </member>
    <member name="F:System.Data.Common.SchemaTableColumn.NonVersionedProviderType">
      <summary vsli:raw="Specifies the non-versioned provider-specific data type of the column.">指定该列特定于无版本提供程序的数据类型。</summary>
    </member>
    <member name="F:System.Data.Common.SchemaTableColumn.NumericPrecision">
      <summary vsli:raw="Specifies the precision of the column data, if the data is numeric.">指定列数据的精度（如果是数值数据）。</summary>
    </member>
    <member name="F:System.Data.Common.SchemaTableColumn.NumericScale">
      <summary vsli:raw="Specifies the scale of the column data, if the data is numeric.">指定列数据的小数位数（如果是数值数据）。</summary>
    </member>
    <member name="F:System.Data.Common.SchemaTableColumn.ProviderType">
      <summary vsli:raw="Specifies the provider-specific data type of the column.">指定列的提供程序特定的数据类型。</summary>
    </member>
    <member name="T:System.Data.Common.SchemaTableOptionalColumn">
      <summary vsli:raw="Describes optional column metadata of the schema for a database table.">描述数据库表的架构的可选列元数据。</summary>
    </member>
    <member name="F:System.Data.Common.SchemaTableOptionalColumn.AutoIncrementSeed">
      <summary vsli:raw="Specifies the value at which the series for new identity columns is assigned.">指定新标识列的序列被分配的值。</summary>
    </member>
    <member name="F:System.Data.Common.SchemaTableOptionalColumn.AutoIncrementStep">
      <summary vsli:raw="Specifies the increment between values in the identity column.">指定标识列中的值之间的增量。</summary>
    </member>
    <member name="F:System.Data.Common.SchemaTableOptionalColumn.BaseCatalogName">
      <summary vsli:raw="The name of the catalog associated with the results of the latest query.">与最新的查询的结果相关联的目录的名称。</summary>
    </member>
    <member name="F:System.Data.Common.SchemaTableOptionalColumn.BaseColumnNamespace">
      <summary vsli:raw="The namespace of the column.">列的命名空间。</summary>
    </member>
    <member name="F:System.Data.Common.SchemaTableOptionalColumn.BaseServerName">
      <summary vsli:raw="The server name of the column.">列的服务器名。</summary>
    </member>
    <member name="F:System.Data.Common.SchemaTableOptionalColumn.BaseTableNamespace">
      <summary vsli:raw="The namespace for the table that contains the column.">包含列的表的命名空间。</summary>
    </member>
    <member name="F:System.Data.Common.SchemaTableOptionalColumn.ColumnMapping">
      <summary vsli:raw="Specifies the mapping for the column.">指定列的映射。</summary>
    </member>
    <member name="F:System.Data.Common.SchemaTableOptionalColumn.DefaultValue">
      <summary vsli:raw="The default value for the column.">列的默认值。</summary>
    </member>
    <member name="F:System.Data.Common.SchemaTableOptionalColumn.Expression">
      <summary vsli:raw="The expression used to compute the column.">用于计算该列的表达式。</summary>
    </member>
    <member name="F:System.Data.Common.SchemaTableOptionalColumn.IsAutoIncrement">
      <summary vsli:raw="Specifies whether the column values in the column are automatically incremented.">指定列中的列值是否自动递增。</summary>
    </member>
    <member name="F:System.Data.Common.SchemaTableOptionalColumn.IsHidden">
      <summary vsli:raw="Specifies whether this column is hidden.">指定该列是否是隐藏的。</summary>
    </member>
    <member name="F:System.Data.Common.SchemaTableOptionalColumn.IsReadOnly">
      <summary vsli:raw="Specifies whether this column is read-only.">指定该列是否是只读的。</summary>
    </member>
    <member name="F:System.Data.Common.SchemaTableOptionalColumn.IsRowVersion">
      <summary vsli:raw="Specifies whether this column contains row version information.">指定该列是否包含行版本信息。</summary>
    </member>
    <member name="F:System.Data.Common.SchemaTableOptionalColumn.ProviderSpecificDataType">
      <summary vsli:raw="Specifies the provider-specific data type of the column.">指定列的提供程序特定的数据类型。</summary>
    </member>
    <member name="T:System.Data.Common.SupportedJoinOperators">
      <summary vsli:raw="Specifies what types of Transact-SQL join statements are supported by the data source.">指定数据源支持何种类型的 Transact-SQL 联接语句。</summary>
    </member>
    <member name="F:System.Data.Common.SupportedJoinOperators.FullOuter">
      <summary vsli:raw="The data source supports full outer joins.">数据源支持完全外部联接。</summary>
    </member>
    <member name="F:System.Data.Common.SupportedJoinOperators.Inner">
      <summary vsli:raw="The data source supports inner joins.">数据源支持内部联接。</summary>
    </member>
    <member name="F:System.Data.Common.SupportedJoinOperators.LeftOuter">
      <summary vsli:raw="The data source supports left outer joins.">数据源支持左外部联接。</summary>
    </member>
    <member name="F:System.Data.Common.SupportedJoinOperators.None">
      <summary vsli:raw="The data source does not support join queries.">数据源不支持联接查询。</summary>
    </member>
    <member name="F:System.Data.Common.SupportedJoinOperators.RightOuter">
      <summary vsli:raw="The data source supports right outer joins.">数据源支持右外部联接。</summary>
    </member>
    <member name="T:System.Data.ConflictOption">
      <summary vsli:raw="Specifies how conflicting changes to the data source will be detected and resolved.">指定将如何检测和解决对数据源的相互冲突的更改。</summary>
    </member>
    <member name="F:System.Data.ConflictOption.CompareAllSearchableValues">
      <summary vsli:raw="Update and delete statements will include all searchable columns from the table in the WHERE clause. This is equivalent to specifying &lt;see langword=&quot;CompareAllValuesUpdate&quot; /&gt; | &lt;see langword=&quot;CompareAllValuesDelete&quot; /&gt;.">更新和删除语句将在 WHERE 子句中包含表中的所有可搜索列。 这等效于指定 <see langword="CompareAllValuesUpdate" /> | <see langword="CompareAllValuesDelete" />。</summary>
    </member>
    <member name="F:System.Data.ConflictOption.CompareRowVersion">
      <summary vsli:raw="If any Timestamp columns exist in the table, they are used in the WHERE clause for all generated update statements. This is equivalent to specifying &lt;see langword=&quot;CompareRowVersionUpdate&quot; /&gt; | &lt;see langword=&quot;CompareRowVersionDelete&quot; /&gt;.">如果表中存在任何 Timestamp 列，则这些列在 WHERE 子句中用于所有生成的更新语句。 这等效于指定 <see langword="CompareRowVersionUpdate" /> | <see langword="CompareRowVersionDelete" />。</summary>
    </member>
    <member name="F:System.Data.ConflictOption.OverwriteChanges">
      <summary vsli:raw="All update and delete statements include only &lt;see cref=&quot;P:System.Data.DataTable.PrimaryKey&quot; /&gt; columns in the WHERE clause. If no &lt;see cref=&quot;P:System.Data.DataTable.PrimaryKey&quot; /&gt; is defined, all searchable columns are included in the WHERE clause. This is equivalent to &lt;see langword=&quot;OverwriteChangesUpdate&quot; /&gt; | &lt;see langword=&quot;OverwriteChangesDelete&quot; /&gt;.">所有的更新和删除语句仅在 WHERE 子句中包含 <see cref="P:System.Data.DataTable.PrimaryKey" /> 列。 如果未定义 <see cref="P:System.Data.DataTable.PrimaryKey" />，则所有可搜索的列都包含在 WHERE 子句中。 这等效于 <see langword="OverwriteChangesUpdate" /> | <see langword="OverwriteChangesDelete" />。</summary>
    </member>
    <member name="T:System.Data.ConnectionState">
      <summary vsli:raw="Describes the current state of the connection to a data source.">描述与数据源连接的当前状态。</summary>
    </member>
    <member name="F:System.Data.ConnectionState.Broken">
      <summary vsli:raw="The connection to the data source is broken. This can occur only after the connection has been opened. A connection in this state may be closed and then re-opened. (This value is reserved for future versions of the product.)">与数据源的连接中断。 只有在连接打开之后才可能发生这种情况。 可以关闭处于这种状态的连接，然后重新打开。 （该值是为此产品的未来版本保留的。）</summary>
    </member>
    <member name="F:System.Data.ConnectionState.Closed">
      <summary vsli:raw="The connection is closed.">连接已关闭。</summary>
    </member>
    <member name="F:System.Data.ConnectionState.Connecting">
      <summary vsli:raw="The connection object is connecting to the data source.">连接对象正在与数据源连接。</summary>
    </member>
    <member name="F:System.Data.ConnectionState.Executing">
      <summary vsli:raw="The connection object is executing a command. (This value is reserved for future versions of the product.)">连接对象正在执行命令。 （该值是为此产品的未来版本保留的。）</summary>
    </member>
    <member name="F:System.Data.ConnectionState.Fetching">
      <summary vsli:raw="The connection object is retrieving data. (This value is reserved for future versions of the product.)">连接对象正在检索数据。 （该值是为此产品的未来版本保留的。）</summary>
    </member>
    <member name="F:System.Data.ConnectionState.Open">
      <summary vsli:raw="The connection is open.">连接处于打开状态。</summary>
    </member>
    <member name="T:System.Data.Constraint">
      <summary vsli:raw="Represents a constraint that can be enforced on one or more &lt;see cref=&quot;T:System.Data.DataColumn&quot; /&gt; objects.">表示可在一个或多个 <see cref="T:System.Data.DataColumn" /> 对象上强制执行的约束。</summary>
    </member>
    <member name="M:System.Data.Constraint.CheckStateForProperty">
      <summary vsli:raw="Gets the &lt;see cref=&quot;T:System.Data.DataSet&quot; /&gt; to which this constraint belongs.">获取此约束所属的 <see cref="T:System.Data.DataSet" />。</summary>
    </member>
    <member name="M:System.Data.Constraint.SetDataSet(System.Data.DataSet)">
      <summary vsli:raw="Sets the constraint's &lt;see cref=&quot;T:System.Data.DataSet&quot; /&gt;.">设置约束的 <see cref="T:System.Data.DataSet" />。</summary>
      <param name="dataSet" vsli:raw="The &lt;see cref=&quot;T:System.Data.DataSet&quot; /&gt; to which this constraint will belong.">此约束将属于的 <see cref="T:System.Data.DataSet" />。</param>
    </member>
    <member name="M:System.Data.Constraint.ToString">
      <summary vsli:raw="Gets the &lt;see cref=&quot;P:System.Data.Constraint.ConstraintName&quot; /&gt;, if there is one, as a string.">获取 <see cref="P:System.Data.Constraint.ConstraintName" />（如果存在）作为字符串。</summary>
      <returns vsli:raw="The string value of the &lt;see cref=&quot;P:System.Data.Constraint.ConstraintName&quot; /&gt;.">
        <see cref="P:System.Data.Constraint.ConstraintName" /> 的字符串值。</returns>
    </member>
    <member name="P:System.Data.Constraint._DataSet">
      <summary vsli:raw="Gets the &lt;see cref=&quot;T:System.Data.DataSet&quot; /&gt; to which this constraint belongs.">获取此约束所属的 <see cref="T:System.Data.DataSet" />。</summary>
      <returns vsli:raw="The &lt;see cref=&quot;T:System.Data.DataSet&quot; /&gt; to which the constraint belongs.">此约束所属的 <see cref="T:System.Data.DataSet" />。</returns>
    </member>
    <member name="P:System.Data.Constraint.ConstraintName">
      <summary vsli:raw="The name of a constraint in the &lt;see cref=&quot;T:System.Data.ConstraintCollection&quot; /&gt;.">
        <see cref="T:System.Data.ConstraintCollection" /> 中的约束的名称。</summary>
      <exception cref="T:System.ArgumentException" vsli:raw="The &lt;see cref=&quot;T:System.Data.Constraint&quot; /&gt; name is a null value or empty string.">
        <see cref="T:System.Data.Constraint" /> 名称是空值或空字符串。</exception>
      <exception cref="T:System.Data.DuplicateNameException" vsli:raw="The &lt;see cref=&quot;T:System.Data.ConstraintCollection&quot; /&gt; already contains a &lt;see cref=&quot;T:System.Data.Constraint&quot; /&gt; with the same name (The comparison is not case-sensitive.).">
        <see cref="T:System.Data.ConstraintCollection" /> 已经包含同名称的 <see cref="T:System.Data.Constraint" />（比较不区分大小写。）</exception>
      <returns vsli:raw="The name of the &lt;see cref=&quot;T:System.Data.Constraint&quot; /&gt;.">
        <see cref="T:System.Data.Constraint" /> 的名称。</returns>
    </member>
    <member name="P:System.Data.Constraint.ExtendedProperties">
      <summary vsli:raw="Gets the collection of user-defined constraint properties.">获取用户定义的约束属性的集合。</summary>
      <returns vsli:raw="A &lt;see cref=&quot;T:System.Data.PropertyCollection&quot; /&gt; of custom information.">自定义信息的 <see cref="T:System.Data.PropertyCollection" />。</returns>
    </member>
    <member name="P:System.Data.Constraint.Table">
      <summary vsli:raw="Gets the &lt;see cref=&quot;T:System.Data.DataTable&quot; /&gt; to which the constraint applies.">获取向其应用约束的 <see cref="T:System.Data.DataTable" />。</summary>
      <returns vsli:raw="A &lt;see cref=&quot;T:System.Data.DataTable&quot; /&gt; to which the constraint applies.">向其应用约束的 <see cref="T:System.Data.DataTable" />。</returns>
    </member>
    <member name="T:System.Data.ConstraintCollection">
      <summary vsli:raw="Represents a collection of constraints for a &lt;see cref=&quot;T:System.Data.DataTable&quot; /&gt;.">表示 <see cref="T:System.Data.DataTable" /> 的约束集合。</summary>
    </member>
    <member name="E:System.Data.ConstraintCollection.CollectionChanged">
      <summary vsli:raw="Occurs whenever the &lt;see cref=&quot;T:System.Data.ConstraintCollection&quot; /&gt; is changed because of &lt;see cref=&quot;T:System.Data.Constraint&quot; /&gt; objects being added or removed.">每当由于添加或移除 <see cref="T:System.Data.Constraint" /> 对象而更改 <see cref="T:System.Data.ConstraintCollection" /> 时发生。</summary>
    </member>
    <member name="M:System.Data.ConstraintCollection.Add(System.Data.Constraint)">
      <summary vsli:raw="Adds the specified &lt;see cref=&quot;T:System.Data.Constraint&quot; /&gt; object to the collection.">将指定的 <see cref="T:System.Data.Constraint" /> 对象添加到集合。</summary>
      <param name="constraint" vsli:raw="The &lt;see langword=&quot;Constraint&quot; /&gt; to add.">要添加的 <see langword="Constraint" />。</param>
      <exception cref="T:System.ArgumentNullException" vsli:raw="The &lt;paramref name=&quot;constraint&quot; /&gt; argument is null.">
        <paramref name="constraint" /> 参数为 null。</exception>
      <exception cref="T:System.ArgumentException" vsli:raw="The constraint already belongs to this collection, or belongs to another collection.">约束已属于此集合，或属于其他集合。</exception>
      <exception cref="T:System.Data.DuplicateNameException" vsli:raw="The collection already has a constraint with the same name. (The comparison is not case-sensitive.)">集合已具有相同名称的约束。 （该比较不区分大小写。）</exception>
    </member>
    <member name="M:System.Data.ConstraintCollection.Add(System.String,System.Data.DataColumn,System.Boolean)">
      <summary vsli:raw="Constructs a new &lt;see cref=&quot;T:System.Data.UniqueConstraint&quot; /&gt; with the specified name, &lt;see cref=&quot;T:System.Data.DataColumn&quot; /&gt;, and value that indicates whether the column is a primary key, and adds it to the collection.">使用指定名称、<see cref="T:System.Data.DataColumn" /> 和指示列是否为主键的值构造一个新 <see cref="T:System.Data.UniqueConstraint" />，并将其添加到集合中。</summary>
      <param name="name" vsli:raw="The name of the &lt;see langword=&quot;UniqueConstraint&quot; /&gt;.">
        <see langword="UniqueConstraint" /> 的名称。</param>
      <param name="column" vsli:raw="The &lt;see cref=&quot;T:System.Data.DataColumn&quot; /&gt; to which the constraint applies.">向其应用约束的 <see cref="T:System.Data.DataColumn" />。</param>
      <param name="primaryKey" vsli:raw="Specifies whether the column should be the primary key. If &lt;see langword=&quot;true&quot; /&gt;, the column will be a primary key column.">指定列是否应为主键。 如果为 <see langword="true" />，则该列将为主键列。</param>
      <exception cref="T:System.ArgumentException" vsli:raw="The constraint already belongs to this collection.  &#xA;  &#xA; -Or-  &#xA;  &#xA; The constraint belongs to another collection.">该约束已属于此集合。  
  
 -或者-  
  
 该约束属于另一集合。</exception>
      <exception cref="T:System.Data.DuplicateNameException" vsli:raw="The collection already has a constraint with the specified name. (The comparison is not case-sensitive.)">集合中已存在具有指定名称的约束。 （该比较不区分大小写。）</exception>
      <returns vsli:raw="A new &lt;see langword=&quot;UniqueConstraint&quot; /&gt;.">一个新的 <see langword="UniqueConstraint" />。</returns>
    </member>
    <member name="M:System.Data.ConstraintCollection.Add(System.String,System.Data.DataColumn,System.Data.DataColumn)">
      <summary vsli:raw="Constructs a new &lt;see cref=&quot;T:System.Data.ForeignKeyConstraint&quot; /&gt; with the specified name, parent column, and child column, and adds the constraint to the collection.">使用指定名称、父列和子列来构造新 <see cref="T:System.Data.ForeignKeyConstraint" />，并将此约束添加到集合。</summary>
      <param name="name" vsli:raw="The name of the &lt;see cref=&quot;T:System.Data.ForeignKeyConstraint&quot; /&gt;.">
        <see cref="T:System.Data.ForeignKeyConstraint" /> 的名称。</param>
      <param name="primaryKeyColumn" vsli:raw="The primary key, or parent, &lt;see cref=&quot;T:System.Data.DataColumn&quot; /&gt;.">主键或父级、<see cref="T:System.Data.DataColumn" />。</param>
      <param name="foreignKeyColumn" vsli:raw="The foreign key, or child, &lt;see cref=&quot;T:System.Data.DataColumn&quot; /&gt;.">外键或子级、<see cref="T:System.Data.DataColumn" />。</param>
      <returns vsli:raw="A new &lt;see langword=&quot;ForeignKeyConstraint&quot; /&gt;.">一个新的 <see langword="ForeignKeyConstraint" />。</returns>
    </member>
    <member name="M:System.Data.ConstraintCollection.Add(System.String,System.Data.DataColumn[],System.Boolean)">
      <summary vsli:raw="Constructs a new &lt;see cref=&quot;T:System.Data.UniqueConstraint&quot; /&gt; with the specified name, array of &lt;see cref=&quot;T:System.Data.DataColumn&quot; /&gt; objects, and value that indicates whether the column is a primary key, and adds it to the collection.">使用指定名称、<see cref="T:System.Data.DataColumn" /> 对象的数组和指示列是否为主键的值构造一个新 <see cref="T:System.Data.UniqueConstraint" />，并将其添加到集合中。</summary>
      <param name="name" vsli:raw="The name of the &lt;see cref=&quot;T:System.Data.UniqueConstraint&quot; /&gt;.">
        <see cref="T:System.Data.UniqueConstraint" /> 的名称。</param>
      <param name="columns" vsli:raw="An array of &lt;see cref=&quot;T:System.Data.DataColumn&quot; /&gt; objects to which the constraint applies.">对其应用约束的 <see cref="T:System.Data.DataColumn" /> 对象数组。</param>
      <param name="primaryKey" vsli:raw="Specifies whether the column should be the primary key. If &lt;see langword=&quot;true&quot; /&gt;, the column will be a primary key column.">指定列是否应为主键。 如果为 <see langword="true" />，则该列将为主键列。</param>
      <exception cref="T:System.ArgumentException" vsli:raw="The constraint already belongs to this collection.  &#xA;  &#xA; -Or-  &#xA;  &#xA; The constraint belongs to another collection.">该约束已属于此集合。  
  
 -或者-  
  
 该约束属于另一集合。</exception>
      <exception cref="T:System.Data.DuplicateNameException" vsli:raw="The collection already has a constraint with the specified name. (The comparison is not case-sensitive.)">集合中已存在具有指定名称的约束。 （该比较不区分大小写。）</exception>
      <returns vsli:raw="A new &lt;see langword=&quot;UniqueConstraint&quot; /&gt;.">一个新的 <see langword="UniqueConstraint" />。</returns>
    </member>
    <member name="M:System.Data.ConstraintCollection.Add(System.String,System.Data.DataColumn[],System.Data.DataColumn[])">
      <summary vsli:raw="Constructs a new &lt;see cref=&quot;T:System.Data.ForeignKeyConstraint&quot; /&gt;, with the specified arrays of parent columns and child columns, and adds the constraint to the collection.">使用指定的父列和子列数组，构造新的 <see cref="T:System.Data.ForeignKeyConstraint" />，并将该约束添加到集合。</summary>
      <param name="name" vsli:raw="The name of the &lt;see cref=&quot;T:System.Data.ForeignKeyConstraint&quot; /&gt;.">
        <see cref="T:System.Data.ForeignKeyConstraint" /> 的名称。</param>
      <param name="primaryKeyColumns" vsli:raw="An array of &lt;see cref=&quot;T:System.Data.DataColumn&quot; /&gt; objects that are the primary key, or parent, columns.">作为主键列或父列的 <see cref="T:System.Data.DataColumn" /> 对象数组。</param>
      <param name="foreignKeyColumns" vsli:raw="An array of &lt;see cref=&quot;T:System.Data.DataColumn&quot; /&gt; objects that are the foreign key, or child, columns.">作为外键列或子列的 <see cref="T:System.Data.DataColumn" /> 对象数组。</param>
      <returns vsli:raw="A new &lt;see langword=&quot;ForeignKeyConstraint&quot; /&gt;.">一个新的 <see langword="ForeignKeyConstraint" />。</returns>
    </member>
    <member name="M:System.Data.ConstraintCollection.AddRange(System.Data.Constraint[])">
      <summary vsli:raw="Copies the elements of the specified &lt;see cref=&quot;T:System.Data.ConstraintCollection&quot; /&gt; array to the end of the collection.">将指定的 <see cref="T:System.Data.ConstraintCollection" /> 数组的元素复制到集合末尾。</summary>
      <param name="constraints" vsli:raw="An array of &lt;see cref=&quot;T:System.Data.ConstraintCollection&quot; /&gt; objects to add to the collection.">要添加到集合中的 <see cref="T:System.Data.ConstraintCollection" /> 对象的数组。</param>
    </member>
    <member name="M:System.Data.ConstraintCollection.CanRemove(System.Data.Constraint)">
      <summary vsli:raw="Indicates whether a &lt;see cref=&quot;T:System.Data.Constraint&quot; /&gt; can be removed.">指示是否可移除 <see cref="T:System.Data.Constraint" />。</summary>
      <param name="constraint" vsli:raw="The &lt;see cref=&quot;T:System.Data.Constraint&quot; /&gt; to be tested for removal from the collection.">要对其进行测试以查看是否可从集合删除的 <see cref="T:System.Data.Constraint" />。</param>
      <returns vsli:raw="&lt;see langword=&quot;true&quot; /&gt; if the &lt;see cref=&quot;T:System.Data.Constraint&quot; /&gt; can be removed from collection; otherwise, &lt;see langword=&quot;false&quot; /&gt;.">如果可从集合中移除 <see cref="T:System.Data.Constraint" />，则为 <see langword="true" />；否则为 <see langword="false" />。</returns>
    </member>
    <member name="M:System.Data.ConstraintCollection.Clear">
      <summary vsli:raw="Clears the collection of any &lt;see cref=&quot;T:System.Data.Constraint&quot; /&gt; objects.">清除所有 <see cref="T:System.Data.Constraint" /> 对象的集合。</summary>
    </member>
    <member name="M:System.Data.ConstraintCollection.Contains(System.String)">
      <summary vsli:raw="Indicates whether the &lt;see cref=&quot;T:System.Data.Constraint&quot; /&gt; object specified by name exists in the collection.">指示集合中是否存在按名称指定的 <see cref="T:System.Data.Constraint" /> 对象。</summary>
      <param name="name" vsli:raw="The &lt;see cref=&quot;P:System.Data.Constraint.ConstraintName&quot; /&gt; of the constraint.">约束的 <see cref="P:System.Data.Constraint.ConstraintName" />。</param>
      <returns vsli:raw="&lt;see langword=&quot;true&quot; /&gt; if the collection contains the specified constraint; otherwise, &lt;see langword=&quot;false&quot; /&gt;.">如果集合包含指定的约束，则为 <see langword="true" />；否则为 <see langword="false" />。</returns>
    </member>
    <member name="M:System.Data.ConstraintCollection.CopyTo(System.Data.Constraint[],System.Int32)">
      <summary vsli:raw="Copies the collection objects to a one-dimensional &lt;see cref=&quot;T:System.Array&quot; /&gt; instance starting at the specified index.">从指定的索引处开始，将集合对象复制到一维 <see cref="T:System.Array" /> 实例中。</summary>
      <param name="array" vsli:raw="The one-dimensional &lt;see cref=&quot;T:System.Array&quot; /&gt; that is the destination of the values copied from the collection.">一维 <see cref="T:System.Array" />，它是从集合所复制值的目标位置。</param>
      <param name="index" vsli:raw="The index of the array at which to start inserting.">插入开始处的数组索引。</param>
    </member>
    <member name="M:System.Data.ConstraintCollection.IndexOf(System.Data.Constraint)">
      <summary vsli:raw="Gets the index of the specified &lt;see cref=&quot;T:System.Data.Constraint&quot; /&gt;.">获取指定 <see cref="T:System.Data.Constraint" /> 的索引。</summary>
      <param name="constraint" vsli:raw="The &lt;see cref=&quot;T:System.Data.Constraint&quot; /&gt; to search for.">要搜索的 <see cref="T:System.Data.Constraint" />。</param>
      <returns vsli:raw="The zero-based index of the &lt;see cref=&quot;T:System.Data.Constraint&quot; /&gt; if it is in the collection; otherwise, -1.">如果 <see cref="T:System.Data.Constraint" /> 在集合中，则为其从零开始的索引；否则为 -1。</returns>
    </member>
    <member name="M:System.Data.ConstraintCollection.IndexOf(System.String)">
      <summary vsli:raw="Gets the index of the &lt;see cref=&quot;T:System.Data.Constraint&quot; /&gt; specified by name.">获取按名称指定的 <see cref="T:System.Data.Constraint" /> 的索引。</summary>
      <param name="constraintName" vsli:raw="The name of the &lt;see cref=&quot;T:System.Data.Constraint&quot; /&gt;.">
        <see cref="T:System.Data.Constraint" /> 的名称。</param>
      <returns vsli:raw="The index of the &lt;see cref=&quot;T:System.Data.Constraint&quot; /&gt; if it is in the collection; otherwise, -1.">如果 <see cref="T:System.Data.Constraint" /> 在集合中，则为它的索引，否则为 -1。</returns>
    </member>
    <member name="M:System.Data.ConstraintCollection.Remove(System.Data.Constraint)">
      <summary vsli:raw="Removes the specified &lt;see cref=&quot;T:System.Data.Constraint&quot; /&gt; from the collection.">从集合中移除指定的 <see cref="T:System.Data.Constraint" />。</summary>
      <param name="constraint" vsli:raw="The &lt;see cref=&quot;T:System.Data.Constraint&quot; /&gt; to remove.">要移除的 <see cref="T:System.Data.Constraint" />。</param>
      <exception cref="T:System.ArgumentNullException" vsli:raw="The &lt;paramref name=&quot;constraint&quot; /&gt; argument is &lt;see langword=&quot;null&quot; /&gt;.">
        <paramref name="constraint" /> 参数为 <see langword="null" />。</exception>
      <exception cref="T:System.ArgumentException" vsli:raw="The constraint does not belong to the collection.">约束不属于该集合。</exception>
    </member>
    <member name="M:System.Data.ConstraintCollection.Remove(System.String)">
      <summary vsli:raw="Removes the &lt;see cref=&quot;T:System.Data.Constraint&quot; /&gt; object specified by name from the collection.">从集合中移除按名称指定的 <see cref="T:System.Data.Constraint" /> 对象。</summary>
      <param name="name" vsli:raw="The name of the &lt;see cref=&quot;T:System.Data.Constraint&quot; /&gt; to remove.">要删除的 <see cref="T:System.Data.Constraint" /> 的名称。</param>
    </member>
    <member name="M:System.Data.ConstraintCollection.RemoveAt(System.Int32)">
      <summary vsli:raw="Removes the &lt;see cref=&quot;T:System.Data.Constraint&quot; /&gt; object at the specified index from the collection.">从集合中的指定索引处删除 <see cref="T:System.Data.Constraint" /> 对象。</summary>
      <param name="index" vsli:raw="The index of the &lt;see cref=&quot;T:System.Data.Constraint&quot; /&gt; to remove.">要移除的 <see cref="T:System.Data.Constraint" /> 的索引。</param>
      <exception cref="T:System.IndexOutOfRangeException" vsli:raw="The collection does not have a constraint at this index.">该集合在此索引位置无约束。</exception>
    </member>
    <member name="P:System.Data.ConstraintCollection.Item(System.Int32)">
      <summary vsli:raw="Gets the &lt;see cref=&quot;T:System.Data.Constraint&quot; /&gt; from the collection at the specified index.">从集合中获取位于指定索引位置的 <see cref="T:System.Data.Constraint" />。</summary>
      <param name="index" vsli:raw="The index of the constraint to return.">要返回的约束的索引。</param>
      <exception cref="T:System.IndexOutOfRangeException" vsli:raw="The index value is greater than the number of items in the collection.">索引值大于集合中的项目数。</exception>
      <returns vsli:raw="The &lt;see cref=&quot;T:System.Data.Constraint&quot; /&gt; at the specified index.">指定索引处的 <see cref="T:System.Data.Constraint" />。</returns>
    </member>
    <member name="P:System.Data.ConstraintCollection.Item(System.String)">
      <summary vsli:raw="Gets the &lt;see cref=&quot;T:System.Data.Constraint&quot; /&gt; from the collection with the specified name.">从具有指定名称的集合中获取 <see cref="T:System.Data.Constraint" />。</summary>
      <param name="name" vsli:raw="The &lt;see cref=&quot;P:System.Data.Constraint.ConstraintName&quot; /&gt; of the constraint to return.">要返回的约束的 <see cref="P:System.Data.Constraint.ConstraintName" />。</param>
      <returns vsli:raw="The &lt;see cref=&quot;T:System.Data.Constraint&quot; /&gt; with the specified name; otherwise a null value if the &lt;see cref=&quot;T:System.Data.Constraint&quot; /&gt; does not exist.">具有指定名称的 <see cref="T:System.Data.Constraint" />；否则，如果 <see cref="T:System.Data.Constraint" /> 不存在，则为空值。</returns>
    </member>
    <member name="T:System.Data.ConstraintException">
      <summary vsli:raw="Represents the exception that is thrown when attempting an action that violates a constraint.">表示在尝试执行违反约束的操作时引发的异常。</summary>
    </member>
    <member name="M:System.Data.ConstraintException.#ctor">
      <summary vsli:raw="Initializes a new instance of the &lt;see cref=&quot;T:System.Data.ConstraintException&quot; /&gt; class. This is the parameterless constructor.">初始化 <see cref="T:System.Data.ConstraintException" /> 类的新实例。 这是无参数构造函数。</summary>
    </member>
    <member name="M:System.Data.ConstraintException.#ctor(System.Runtime.Serialization.SerializationInfo,System.Runtime.Serialization.StreamingContext)">
      <summary vsli:raw="Initializes a new instance of the &lt;see cref=&quot;T:System.Data.ConstraintException&quot; /&gt; class using the specified serialization and stream context.">使用指定的序列化和流上下文初始化 <see cref="T:System.Data.ConstraintException" /> 类的新实例。</summary>
      <param name="info" vsli:raw="The data necessary to serialize or deserialize an object.">将对象序列化或反序列化所必需的数据。</param>
      <param name="context" vsli:raw="Description of the source and destination of the specified serialized stream.">指定的序列化流的源和目标的说明。</param>
    </member>
    <member name="M:System.Data.ConstraintException.#ctor(System.String)">
      <summary vsli:raw="Initializes a new instance of the &lt;see cref=&quot;T:System.Data.ConstraintException&quot; /&gt; class with the specified string.">使用指定的字符串初始化 <see cref="T:System.Data.ConstraintException" /> 类的新实例。</summary>
      <param name="s" vsli:raw="The string to display when the exception is thrown.">引发异常时显示的字符串。</param>
    </member>
    <member name="M:System.Data.ConstraintException.#ctor(System.String,System.Exception)">
      <summary vsli:raw="Initializes a new instance of the &lt;see cref=&quot;T:System.Data.ConstraintException&quot; /&gt; class using the specified string and inner exception.">使用指定的字符串和内部异常初始化 <see cref="T:System.Data.ConstraintException" /> 类的新实例。</summary>
      <param name="message" vsli:raw="The string to display when the exception is thrown.">引发异常时显示的字符串。</param>
      <param name="innerException" vsli:raw="Gets the &lt;see langword=&quot;Exception&quot; /&gt; instance that caused the current exception.">获取导致当前异常的 <see langword="Exception" /> 实例。</param>
    </member>
    <member name="T:System.Data.DataColumn">
      <summary vsli:raw="Represents the schema of a column in a &lt;see cref=&quot;T:System.Data.DataTable&quot; /&gt;.">表示 <see cref="T:System.Data.DataTable" /> 中的列的架构。</summary>
    </member>
    <member name="M:System.Data.DataColumn.#ctor">
      <summary vsli:raw="Initializes a new instance of the &lt;see cref=&quot;T:System.Data.DataColumn&quot; /&gt; class as type string.">将 <see cref="T:System.Data.DataColumn" /> 类的新实例初始化为类型字符串。</summary>
    </member>
    <member name="M:System.Data.DataColumn.#ctor(System.String)">
      <summary vsli:raw="Initializes a new instance of the &lt;see cref=&quot;T:System.Data.DataColumn&quot; /&gt; class, as type string, using the specified column name.">使用指定的列名称将 <see cref="T:System.Data.DataColumn" /> 类的新实例初始化为类型字符串。</summary>
      <param name="columnName" vsli:raw="A string that represents the name of the column to be created. If set to &lt;see langword=&quot;null&quot; /&gt; or an empty string (&quot;&quot;), a default name will be specified when added to the columns collection.">一个字符串，它表示要创建的列的名称。 如果设置为 <see langword="null" /> 或空字符串 ("")，则当添加到列集合中时，将指定一个默认名称。</param>
    </member>
    <member name="M:System.Data.DataColumn.#ctor(System.String,System.Type)">
      <summary vsli:raw="Initializes a new instance of the &lt;see cref=&quot;T:System.Data.DataColumn&quot; /&gt; class using the specified column name and data type.">使用指定列名称和数据类型初始化 <see cref="T:System.Data.DataColumn" /> 类的新实例。</summary>
      <param name="columnName" vsli:raw="A string that represents the name of the column to be created. If set to &lt;see langword=&quot;null&quot; /&gt; or an empty string (&quot;&quot;), a default name will be specified when added to the columns collection.">一个字符串，它表示要创建的列的名称。 如果设置为 <see langword="null" /> 或空字符串 ("")，则当添加到列集合中时，将指定一个默认名称。</param>
      <param name="dataType" vsli:raw="A supported &lt;see cref=&quot;P:System.Data.DataColumn.DataType&quot; /&gt;.">支持的 <see cref="P:System.Data.DataColumn.DataType" />。</param>
      <exception cref="T:System.ArgumentNullException" vsli:raw="No &lt;paramref name=&quot;dataType&quot; /&gt; was specified.">未指定任何 <paramref name="dataType" />。</exception>
    </member>
    <member name="M:System.Data.DataColumn.#ctor(System.String,System.Type,System.String)">
      <summary vsli:raw="Initializes a new instance of the &lt;see cref=&quot;T:System.Data.DataColumn&quot; /&gt; class using the specified name, data type, and expression.">使用指定的名称、数据类型和表达式初始化 <see cref="T:System.Data.DataColumn" /> 类的新实例。</summary>
      <param name="columnName" vsli:raw="A string that represents the name of the column to be created. If set to &lt;see langword=&quot;null&quot; /&gt; or an empty string (&quot;&quot;), a default name will be specified when added to the columns collection.">一个字符串，它表示要创建的列的名称。 如果设置为 <see langword="null" /> 或空字符串 ("")，则当添加到列集合中时，将指定一个默认名称。</param>
      <param name="dataType" vsli:raw="A supported &lt;see cref=&quot;P:System.Data.DataColumn.DataType&quot; /&gt;.">支持的 <see cref="P:System.Data.DataColumn.DataType" />。</param>
      <param name="expr" vsli:raw="The expression used to create this column. For more information, see the &lt;see cref=&quot;P:System.Data.DataColumn.Expression&quot; /&gt; property.">用于创建该列的表达式。 有关更多信息，请参见 <see cref="P:System.Data.DataColumn.Expression" /> 属性。</param>
      <exception cref="T:System.ArgumentNullException" vsli:raw="No &lt;paramref name=&quot;dataType&quot; /&gt; was specified.">未指定任何 <paramref name="dataType" />。</exception>
    </member>
    <member name="M:System.Data.DataColumn.#ctor(System.String,System.Type,System.String,System.Data.MappingType)">
      <summary vsli:raw="Initializes a new instance of the &lt;see cref=&quot;T:System.Data.DataColumn&quot; /&gt; class using the specified name, data type, expression, and value that determines whether the column is an attribute.">使用指定名称、数据类型、表达式和确定列是否为特性的值，初始化 <see cref="T:System.Data.DataColumn" /> 类的新实例。</summary>
      <param name="columnName" vsli:raw="A string that represents the name of the column to be created. If set to &lt;see langword=&quot;null&quot; /&gt; or an empty string (&quot;&quot;), a default name will be specified when added to the columns collection.">一个字符串，它表示要创建的列的名称。 如果设置为 <see langword="null" /> 或空字符串 ("")，则当添加到列集合中时，将指定一个默认名称。</param>
      <param name="dataType" vsli:raw="A supported &lt;see cref=&quot;P:System.Data.DataColumn.DataType&quot; /&gt;.">支持的 <see cref="P:System.Data.DataColumn.DataType" />。</param>
      <param name="expr" vsli:raw="The expression used to create this column. For more information, see the &lt;see cref=&quot;P:System.Data.DataColumn.Expression&quot; /&gt; property.">用于创建该列的表达式。 有关更多信息，请参见 <see cref="P:System.Data.DataColumn.Expression" /> 属性。</param>
      <param name="type" vsli:raw="One of the &lt;see cref=&quot;T:System.Data.MappingType&quot; /&gt; values.">
        <see cref="T:System.Data.MappingType" /> 值之一。</param>
      <exception cref="T:System.ArgumentNullException" vsli:raw="No &lt;paramref name=&quot;dataType&quot; /&gt; was specified.">未指定任何 <paramref name="dataType" />。</exception>
    </member>
    <member name="M:System.Data.DataColumn.CheckNotAllowNull">
      <summary vsli:raw="This member supports .NET infrastructure and is not intended to be used directly from your code.">此成员支持 .NET Framework 结构，不能在代码中直接使用。</summary>
    </member>
    <member name="M:System.Data.DataColumn.CheckUnique">
      <summary vsli:raw="This member supports .NET infrastructure and is not intended to be used directly from your code.">此成员支持 .NET Framework 结构，不能在代码中直接使用。</summary>
    </member>
    <member name="M:System.Data.DataColumn.OnPropertyChanging(System.ComponentModel.PropertyChangedEventArgs)">
      <summary vsli:raw="This member supports .NET infrastructure and is not intended to be used directly from your code.">此成员支持 .NET Framework 结构，不能在代码中直接使用。</summary>
      <param name="pcevent" vsli:raw="Parameter reference.">参数引用。</param>
    </member>
    <member name="M:System.Data.DataColumn.RaisePropertyChanging(System.String)">
      <summary vsli:raw="This member supports .NET infrastructure and is not intended to be used directly from your code.">此成员支持 .NET Framework 结构，不能在代码中直接使用。</summary>
      <param name="name" vsli:raw="Parameter reference.">参数引用。</param>
    </member>
    <member name="M:System.Data.DataColumn.SetOrdinal(System.Int32)">
      <summary vsli:raw="Changes the ordinal or position of the &lt;see cref=&quot;T:System.Data.DataColumn&quot; /&gt; to the specified ordinal or position.">将 <see cref="T:System.Data.DataColumn" /> 的序号或位置更改为指定的序号或位置。</summary>
      <param name="ordinal" vsli:raw="The specified ordinal.">指定的序号。</param>
    </member>
    <member name="M:System.Data.DataColumn.ToString">
      <summary vsli:raw="Gets the &lt;see cref=&quot;P:System.Data.DataColumn.Expression&quot; /&gt; of the column, if one exists.">获取列的 <see cref="P:System.Data.DataColumn.Expression" />（如果存在的话）。</summary>
      <returns vsli:raw="The &lt;see cref=&quot;P:System.Data.DataColumn.Expression&quot; /&gt; value, if the property is set; otherwise, the &lt;see cref=&quot;P:System.Data.DataColumn.ColumnName&quot; /&gt; property.">如果设置了属性；则为 <see cref="P:System.Data.DataColumn.Expression" /> 的值；否则为 <see cref="P:System.Data.DataColumn.ColumnName" /> 的属性。</returns>
    </member>
    <member name="P:System.Data.DataColumn.AllowDBNull">
      <summary vsli:raw="Gets or sets a value that indicates whether null values are allowed in this column for rows that belong to the table.">获取或设置一个值，该值指示对于属于该表的行，此列中是否允许空值。</summary>
      <returns vsli:raw="&lt;see langword=&quot;true&quot; /&gt; if null values are allowed; otherwise, &lt;see langword=&quot;false&quot; /&gt;. The default is &lt;see langword=&quot;true&quot; /&gt;.">
        <see langword="true" /> 如果允许空值，则为;否则为 <see langword="false" /> 。 默认值为 <see langword="true" />。</returns>
    </member>
    <member name="P:System.Data.DataColumn.AutoIncrement">
      <summary vsli:raw="Gets or sets a value that indicates whether the column automatically increments the value of the column for new rows added to the table.">获取或设置一个值，该值指示对于添加到该表中的新行，列是否将列的值自动递增。</summary>
      <exception cref="T:System.ArgumentException" vsli:raw="The column is a computed column.">该列是计算所得的列。</exception>
      <returns vsli:raw="&lt;see langword=&quot;true&quot; /&gt; if the value of the column increments automatically; otherwise, &lt;see langword=&quot;false&quot; /&gt;. The default is &lt;see langword=&quot;false&quot; /&gt;.">如果列的值自动递增，则为 <see langword="true" />；否则为 <see langword="false" />。 默认值为 <see langword="false" />。</returns>
    </member>
    <member name="P:System.Data.DataColumn.AutoIncrementSeed">
      <summary vsli:raw="Gets or sets the starting value for a column that has its &lt;see cref=&quot;P:System.Data.DataColumn.AutoIncrement&quot; /&gt; property set to &lt;see langword=&quot;true&quot; /&gt;. The default is 0.">获取或设置其 <see cref="P:System.Data.DataColumn.AutoIncrement" /> 属性设置为 <see langword="true" /> 的列的起始值。 默认值为 0。</summary>
      <returns vsli:raw="The starting value for the &lt;see cref=&quot;P:System.Data.DataColumn.AutoIncrement&quot; /&gt; feature.">
        <see cref="P:System.Data.DataColumn.AutoIncrement" /> 功能的起始值。</returns>
    </member>
    <member name="P:System.Data.DataColumn.AutoIncrementStep">
      <summary vsli:raw="Gets or sets the increment used by a column with its &lt;see cref=&quot;P:System.Data.DataColumn.AutoIncrement&quot; /&gt; property set to &lt;see langword=&quot;true&quot; /&gt;.">获取或设置其 <see cref="P:System.Data.DataColumn.AutoIncrement" /> 属性设置为 <see langword="true" /> 的列使用的增量。</summary>
      <exception cref="T:System.ArgumentException" vsli:raw="The value set is zero.">设置的值为零。</exception>
      <returns vsli:raw="The number by which the value of the column is automatically incremented. The default is 1.">列的值自动递增的数值。 默认值为 1。</returns>
    </member>
    <member name="P:System.Data.DataColumn.Caption">
      <summary vsli:raw="Gets or sets the caption for the column.">获取或设置列的标题。</summary>
      <returns vsli:raw="The caption of the column. If not set, returns the &lt;see cref=&quot;P:System.Data.DataColumn.ColumnName&quot; /&gt; value.">列的标题。 如果没有设置，则返回 <see cref="P:System.Data.DataColumn.ColumnName" /> 的值。</returns>
    </member>
    <member name="P:System.Data.DataColumn.ColumnMapping">
      <summary vsli:raw="Gets or sets the &lt;see cref=&quot;T:System.Data.MappingType&quot; /&gt; of the column.">获取或设置列的 <see cref="T:System.Data.MappingType" />。</summary>
      <returns vsli:raw="One of the &lt;see cref=&quot;T:System.Data.MappingType&quot; /&gt; values.">
        <see cref="T:System.Data.MappingType" /> 值之一。</returns>
    </member>
    <member name="P:System.Data.DataColumn.ColumnName">
      <summary vsli:raw="Gets or sets the name of the column in the &lt;see cref=&quot;T:System.Data.DataColumnCollection&quot; /&gt;.">获取或设置 <see cref="T:System.Data.DataColumnCollection" /> 中的列的名称。</summary>
      <exception cref="T:System.ArgumentException" vsli:raw="The property is set to &lt;see langword=&quot;null&quot; /&gt; or an empty string and the column belongs to a collection.">属性设置为 <see langword="null" /> 或空字符串，且列属于一个集合。</exception>
      <exception cref="T:System.Data.DuplicateNameException" vsli:raw="A column with the same name already exists in the collection. The name comparison is not case sensitive.">集合中已经存在同名称的列。 名称比较不区分大小写。</exception>
      <returns vsli:raw="The name of the column.">列的名称。</returns>
    </member>
    <member name="P:System.Data.DataColumn.DataType">
      <summary vsli:raw="Gets or sets the type of data stored in the column.">获取或设置存储在列中的数据的类型。</summary>
      <exception cref="T:System.ArgumentException" vsli:raw="The column already has data stored.">列已经存储了数据。</exception>
      <returns vsli:raw="A &lt;see cref=&quot;T:System.Type&quot; /&gt; object that represents the column data type.">一个 <see cref="T:System.Type" /> 对象，它表示列数据类型。</returns>
    </member>
    <member name="P:System.Data.DataColumn.DateTimeMode">
      <summary vsli:raw="Gets or sets the &lt;see langword=&quot;DateTimeMode&quot; /&gt; for the column.">获取或设置列的 <see langword="DateTimeMode" />。</summary>
      <returns vsli:raw="The &lt;see cref=&quot;T:System.Data.DataSetDateTime&quot; /&gt; for the specified column.">所指定的列的 <see cref="T:System.Data.DataSetDateTime" />。</returns>
    </member>
    <member name="P:System.Data.DataColumn.DefaultValue">
      <summary vsli:raw="Gets or sets the default value for the column when you are creating new rows.">在创建新行时获取或设置列的默认值。</summary>
      <exception cref="T:System.InvalidCastException" vsli:raw="When you are adding a row, the default value is not an instance of the column's data type.">在添加行时，默认值不是列的数据类型的实例。</exception>
      <returns vsli:raw="A value appropriate to the column's &lt;see cref=&quot;P:System.Data.DataColumn.DataType&quot; /&gt;.">适合于列的 <see cref="P:System.Data.DataColumn.DataType" /> 的值。</returns>
    </member>
    <member name="P:System.Data.DataColumn.Expression">
      <summary vsli:raw="Gets or sets the expression used to filter rows, calculate the values in a column, or create an aggregate column.">获取或设置表达式，用于筛选行、计算列中的值或创建聚合列。</summary>
      <exception cref="T:System.ArgumentException" vsli:raw="The &lt;see cref=&quot;P:System.Data.DataColumn.AutoIncrement&quot; /&gt; or &lt;see cref=&quot;P:System.Data.DataColumn.Unique&quot; /&gt; property is set to &lt;see langword=&quot;true&quot; /&gt;.">将 <see cref="P:System.Data.DataColumn.AutoIncrement" /> 或 <see cref="P:System.Data.DataColumn.Unique" /> 属性设置为 <see langword="true" />。</exception>
      <exception cref="T:System.FormatException" vsli:raw="When you are using the CONVERT function, the expression evaluates to a string, but the string does not contain a representation that can be converted to the type parameter.">在使用 CONVERT 函数时，表达式的计算结果为一个字符串，但该字符串不包含可以转换成类型参数的表示形式。</exception>
      <exception cref="T:System.InvalidCastException" vsli:raw="When you are using the CONVERT function, the requested cast is not possible. See the Conversion function in the following section for detailed information about possible casts.">在使用 CONVERT 函数时，所请求的强制转换不可能完成。 有关可能的强制转换的详细信息，请参见下面一节中的 Conversion 函数。</exception>
      <exception cref="T:System.ArgumentOutOfRangeException" vsli:raw="When you use the SUBSTRING function, the start argument is out of range.  &#xA;  &#xA; -Or-  &#xA;  &#xA; When you use the SUBSTRING function, the length argument is out of range.">在使用 SUBSTRING 函数时，起始参数超出范围。  
  
 -或者-  
  
 在使用 SUBSTRING 函数时，长度参数超出范围。</exception>
      <exception cref="T:System.Exception" vsli:raw="When you use the LEN function or the TRIM function, the expression does not evaluate to a string. This includes expressions that evaluate to &lt;see cref=&quot;T:System.Char&quot; /&gt;.">在使用 LEN 函数或 TRIM 函数时，表达式的计算结果不是字符串。 这包括计算结果为 <see cref="T:System.Char" /> 的表达式。</exception>
      <returns vsli:raw="An expression to calculate the value of a column, or create an aggregate column. The return type of an expression is determined by the &lt;see cref=&quot;P:System.Data.DataColumn.DataType&quot; /&gt; of the column.">用来计算列的值，或创建聚合列的表达式。 表达式的返回类型由列的 <see cref="P:System.Data.DataColumn.DataType" /> 来确定。</returns>
    </member>
    <member name="P:System.Data.DataColumn.ExtendedProperties">
      <summary vsli:raw="Gets the collection of custom user information associated with a &lt;see cref=&quot;T:System.Data.DataColumn&quot; /&gt;.">获取与 <see cref="T:System.Data.DataColumn" /> 相关的自定义用户信息的集合。</summary>
      <returns vsli:raw="A &lt;see cref=&quot;T:System.Data.PropertyCollection&quot; /&gt; of custom information.">自定义信息的 <see cref="T:System.Data.PropertyCollection" />。</returns>
    </member>
    <member name="P:System.Data.DataColumn.MaxLength">
      <summary vsli:raw="Gets or sets the maximum length of a text column.">获取或设置文本列的最大长度。</summary>
      <returns vsli:raw="The maximum length of the column in characters. If the column has no maximum length, the value is -1 (default).">列的最大长度（以字符数表示）。 如果列没有最大长度，则值为-1 (默认) 。</returns>
    </member>
    <member name="P:System.Data.DataColumn.Namespace">
      <summary vsli:raw="Gets or sets the namespace of the &lt;see cref=&quot;T:System.Data.DataColumn&quot; /&gt;.">获取或设置 <see cref="T:System.Data.DataColumn" /> 的命名空间。</summary>
      <exception cref="T:System.ArgumentException" vsli:raw="The namespace already has data.">该命名空间已有数据。</exception>
      <returns vsli:raw="The namespace of the &lt;see cref=&quot;T:System.Data.DataColumn&quot; /&gt;.">
        <see cref="T:System.Data.DataColumn" /> 的命名空间。</returns>
    </member>
    <member name="P:System.Data.DataColumn.Ordinal">
      <summary vsli:raw="Gets the (zero-based) position of the column in the &lt;see cref=&quot;T:System.Data.DataColumnCollection&quot; /&gt; collection.">获取列在 <see cref="T:System.Data.DataColumnCollection" /> 集合中的位置（从零开始）。</summary>
      <returns vsli:raw="The position of the column. Gets -1 if the column is not a member of a collection.">列的位置。 如果列不是集合的成员，获取 -1。</returns>
    </member>
    <member name="P:System.Data.DataColumn.Prefix">
      <summary vsli:raw="Gets or sets an XML prefix that aliases the namespace of the &lt;see cref=&quot;T:System.Data.DataTable&quot; /&gt;.">获取或设置一个 XML 前缀，该前缀是 <see cref="T:System.Data.DataTable" /> 的命名空间的别名。</summary>
      <returns vsli:raw="The XML prefix for the &lt;see cref=&quot;T:System.Data.DataTable&quot; /&gt; namespace.">
        <see cref="T:System.Data.DataTable" /> 命名空间的 XML 前缀。</returns>
    </member>
    <member name="P:System.Data.DataColumn.ReadOnly">
      <summary vsli:raw="Gets or sets a value that indicates whether the column allows for changes as soon as a row has been added to the table.">获取或设置一个值，该值指示一旦向表中添加了行，列是否还允许更改。</summary>
      <exception cref="T:System.ArgumentException" vsli:raw="The property is set to &lt;see langword=&quot;false&quot; /&gt; on a computed column.">对于计算所得的列，此属性设置为 <see langword="false" />。</exception>
      <returns vsli:raw="&lt;see langword=&quot;true&quot; /&gt; if the column is read only; otherwise, &lt;see langword=&quot;false&quot; /&gt;. The default is &lt;see langword=&quot;false&quot; /&gt;.">如果列为只读，则为 <see langword="true" />；否则为 <see langword="false" />。 默认值为 <see langword="false" />。</returns>
    </member>
    <member name="P:System.Data.DataColumn.Table">
      <summary vsli:raw="Gets the &lt;see cref=&quot;T:System.Data.DataTable&quot; /&gt; to which the column belongs to.">获取列所属的 <see cref="T:System.Data.DataTable" />。</summary>
      <returns vsli:raw="The &lt;see cref=&quot;T:System.Data.DataTable&quot; /&gt; that the &lt;see cref=&quot;T:System.Data.DataColumn&quot; /&gt; belongs to.">
        <see cref="T:System.Data.DataTable" /> 所属的 <see cref="T:System.Data.DataColumn" />。</returns>
    </member>
    <member name="P:System.Data.DataColumn.Unique">
      <summary vsli:raw="Gets or sets a value that indicates whether the values in each row of the column must be unique.">获取或设置一个值，该值指示列的每一行中的值是否必须是唯一的。</summary>
      <exception cref="T:System.ArgumentException" vsli:raw="The column is a calculated column.">列是计算出的列。</exception>
      <returns vsli:raw="&lt;see langword=&quot;true&quot; /&gt; if the value must be unique; otherwise, &lt;see langword=&quot;false&quot; /&gt;. The default is &lt;see langword=&quot;false&quot; /&gt;.">如果值必须是唯一的，则为 <see langword="true" />；否则为 <see langword="false" />。 默认值为 <see langword="false" />。</returns>
    </member>
    <member name="T:System.Data.DataColumnChangeEventArgs">
      <summary vsli:raw="Provides data for the &lt;see cref=&quot;E:System.Data.DataTable.ColumnChanging&quot; /&gt; event.">为 <see cref="E:System.Data.DataTable.ColumnChanging" /> 事件提供数据。</summary>
    </member>
    <member name="M:System.Data.DataColumnChangeEventArgs.#ctor(System.Data.DataRow,System.Data.DataColumn,System.Object)">
      <summary vsli:raw="Initializes a new instance of the &lt;see cref=&quot;T:System.Data.DataColumnChangeEventArgs&quot; /&gt; class.">初始化 <see cref="T:System.Data.DataColumnChangeEventArgs" /> 类的新实例。</summary>
      <param name="row" vsli:raw="The &lt;see cref=&quot;T:System.Data.DataRow&quot; /&gt; of the column with the changing value.">带有可变值的列的 <see cref="T:System.Data.DataRow" />。</param>
      <param name="column" vsli:raw="The &lt;see cref=&quot;T:System.Data.DataColumn&quot; /&gt; with the changing value.">带有可变值的 <see cref="T:System.Data.DataColumn" />。</param>
      <param name="value" vsli:raw="The new value.">新值。</param>
    </member>
    <member name="P:System.Data.DataColumnChangeEventArgs.Column">
      <summary vsli:raw="Gets the &lt;see cref=&quot;T:System.Data.DataColumn&quot; /&gt; with a changing value.">获取带有可变值的 <see cref="T:System.Data.DataColumn" />。</summary>
      <returns vsli:raw="The &lt;see cref=&quot;T:System.Data.DataColumn&quot; /&gt; with a changing value.">带有可变值的 <see cref="T:System.Data.DataColumn" />。</returns>
    </member>
    <member name="P:System.Data.DataColumnChangeEventArgs.ProposedValue">
      <summary vsli:raw="Gets or sets the proposed new value for the column.">获取或设置列的建议新值。</summary>
      <returns vsli:raw="The proposed value, of type &lt;see cref=&quot;T:System.Object&quot; /&gt;.">建议的值，类型为 <see cref="T:System.Object" />。</returns>
    </member>
    <member name="P:System.Data.DataColumnChangeEventArgs.Row">
      <summary vsli:raw="Gets the &lt;see cref=&quot;T:System.Data.DataRow&quot; /&gt; of the column with a changing value.">获取带有可变值的列的 <see cref="T:System.Data.DataRow" />。</summary>
      <returns vsli:raw="The &lt;see cref=&quot;T:System.Data.DataRow&quot; /&gt; of the column with a changing value.">带有可变值的列的 <see cref="T:System.Data.DataRow" />。</returns>
    </member>
    <member name="T:System.Data.DataColumnChangeEventHandler">
      <summary vsli:raw="Represents the method that will handle the &lt;see cref=&quot;E:System.Data.DataTable.ColumnChanging&quot; /&gt; event.">表示用来处理 <see cref="E:System.Data.DataTable.ColumnChanging" /> 事件的方法。</summary>
      <param name="sender" vsli:raw="The source of the event.">事件源。</param>
      <param name="e" vsli:raw="A &lt;see cref=&quot;T:System.Data.DataColumnChangeEventArgs&quot; /&gt; that contains the event data.">包含事件数据的 <see cref="T:System.Data.DataColumnChangeEventArgs" />。</param>
    </member>
    <member name="T:System.Data.DataColumnCollection">
      <summary vsli:raw="Represents a collection of &lt;see cref=&quot;T:System.Data.DataColumn&quot; /&gt; objects for a &lt;see cref=&quot;T:System.Data.DataTable&quot; /&gt;.">表示 <see cref="T:System.Data.DataColumn" /> 的 <see cref="T:System.Data.DataTable" /> 对象的集合。</summary>
    </member>
    <member name="E:System.Data.DataColumnCollection.CollectionChanged">
      <summary vsli:raw="Occurs when the columns collection changes, either by adding or removing a column.">在由于添加或删除列而使列集合发生变化时发生。</summary>
    </member>
    <member name="M:System.Data.DataColumnCollection.Add">
      <summary vsli:raw="Creates and adds a &lt;see cref=&quot;T:System.Data.DataColumn&quot; /&gt; object to the &lt;see cref=&quot;T:System.Data.DataColumnCollection&quot; /&gt;.">创建 <see cref="T:System.Data.DataColumn" /> 对象并将其添加到 <see cref="T:System.Data.DataColumnCollection" /> 中。</summary>
      <returns vsli:raw="The newly created &lt;see cref=&quot;T:System.Data.DataColumn&quot; /&gt;.">新创建的 <see cref="T:System.Data.DataColumn" />。</returns>
    </member>
    <member name="M:System.Data.DataColumnCollection.Add(System.Data.DataColumn)">
      <summary vsli:raw="Creates and adds the specified &lt;see cref=&quot;T:System.Data.DataColumn&quot; /&gt; object to the &lt;see cref=&quot;T:System.Data.DataColumnCollection&quot; /&gt;.">创建指定的 <see cref="T:System.Data.DataColumn" /> 对象并将其添加到 <see cref="T:System.Data.DataColumnCollection" />。</summary>
      <param name="column" vsli:raw="The &lt;see cref=&quot;T:System.Data.DataColumn&quot; /&gt; to add.">要添加的 <see cref="T:System.Data.DataColumn" />。</param>
      <exception cref="T:System.ArgumentNullException" vsli:raw="The &lt;paramref name=&quot;column&quot; /&gt; parameter is &lt;see langword=&quot;null&quot; /&gt;.">
        <paramref name="column" /> 参数为 <see langword="null" />。</exception>
      <exception cref="T:System.ArgumentException" vsli:raw="The column already belongs to this collection, or to another collection.">该列已经属于此集合，或者属于另一个集合。</exception>
      <exception cref="T:System.Data.DuplicateNameException" vsli:raw="The collection already has a column with the specified name. (The comparison is not case-sensitive.)">集合中已存在具有指定名称的列。 （该比较不区分大小写。）</exception>
      <exception cref="T:System.Data.InvalidExpressionException" vsli:raw="The expression is invalid. See the &lt;see cref=&quot;P:System.Data.DataColumn.Expression&quot; /&gt; property for more information about how to create expressions.">表达式无效。 有关如何创建表达式的更多信息，请参见 <see cref="P:System.Data.DataColumn.Expression" /> 属性。</exception>
    </member>
    <member name="M:System.Data.DataColumnCollection.Add(System.String)">
      <summary vsli:raw="Creates and adds a &lt;see cref=&quot;T:System.Data.DataColumn&quot; /&gt; object that has the specified name to the &lt;see cref=&quot;T:System.Data.DataColumnCollection&quot; /&gt;.">创建一个具有指定名称的 <see cref="T:System.Data.DataColumn" /> 对象，并将其添加到 <see cref="T:System.Data.DataColumnCollection" /> 中。</summary>
      <param name="columnName" vsli:raw="The name of the column.">列的名称。</param>
      <exception cref="T:System.Data.DuplicateNameException" vsli:raw="The collection already has a column with the specified name. (The comparison is not case-sensitive.)">集合中已存在具有指定名称的列。 （该比较不区分大小写。）</exception>
      <returns vsli:raw="The newly created &lt;see cref=&quot;T:System.Data.DataColumn&quot; /&gt;.">新创建的 <see cref="T:System.Data.DataColumn" />。</returns>
    </member>
    <member name="M:System.Data.DataColumnCollection.Add(System.String,System.Type)">
      <summary vsli:raw="Creates and adds a &lt;see cref=&quot;T:System.Data.DataColumn&quot; /&gt; object that has the specified name and type to the &lt;see cref=&quot;T:System.Data.DataColumnCollection&quot; /&gt;.">创建一个具有指定名称和类型的 <see cref="T:System.Data.DataColumn" /> 对象，并将其添加到 <see cref="T:System.Data.DataColumnCollection" /> 中。</summary>
      <param name="columnName" vsli:raw="The &lt;see cref=&quot;P:System.Data.DataColumn.ColumnName&quot; /&gt; to use when you create the column.">要在创建列时使用的 <see cref="P:System.Data.DataColumn.ColumnName" />。</param>
      <param name="type" vsli:raw="The &lt;see cref=&quot;P:System.Data.DataColumn.DataType&quot; /&gt; of the new column.">新列的 <see cref="P:System.Data.DataColumn.DataType" />。</param>
      <exception cref="T:System.Data.DuplicateNameException" vsli:raw="The collection already has a column with the specified name. (The comparison is not case-sensitive.)">集合中已存在具有指定名称的列。 （该比较不区分大小写。）</exception>
      <exception cref="T:System.Data.InvalidExpressionException" vsli:raw="The expression is invalid. See the &lt;see cref=&quot;P:System.Data.DataColumn.Expression&quot; /&gt; property for more information about how to create expressions.">表达式无效。 有关如何创建表达式的更多信息，请参见 <see cref="P:System.Data.DataColumn.Expression" /> 属性。</exception>
      <returns vsli:raw="The newly created &lt;see cref=&quot;T:System.Data.DataColumn&quot; /&gt;.">新创建的 <see cref="T:System.Data.DataColumn" />。</returns>
    </member>
    <member name="M:System.Data.DataColumnCollection.Add(System.String,System.Type,System.String)">
      <summary vsli:raw="Creates and adds a &lt;see cref=&quot;T:System.Data.DataColumn&quot; /&gt; object that has the specified name, type, and expression to the &lt;see cref=&quot;T:System.Data.DataColumnCollection&quot; /&gt;.">创建一个具有指定名称、类型和表达式的 <see cref="T:System.Data.DataColumn" /> 对象，并将其添加到 <see cref="T:System.Data.DataColumnCollection" /> 中。</summary>
      <param name="columnName" vsli:raw="The name to use when you create the column.">要在创建列时使用的名称。</param>
      <param name="type" vsli:raw="The &lt;see cref=&quot;P:System.Data.DataColumn.DataType&quot; /&gt; of the new column.">新列的 <see cref="P:System.Data.DataColumn.DataType" />。</param>
      <param name="expression" vsli:raw="The expression to assign to the &lt;see cref=&quot;P:System.Data.DataColumn.Expression&quot; /&gt; property.">要分配给 <see cref="P:System.Data.DataColumn.Expression" /> 属性的表达式。</param>
      <exception cref="T:System.Data.DuplicateNameException" vsli:raw="The collection already has a column with the specified name. (The comparison is not case-sensitive.)">集合中已存在具有指定名称的列。 （该比较不区分大小写。）</exception>
      <exception cref="T:System.Data.InvalidExpressionException" vsli:raw="The expression is invalid. See the &lt;see cref=&quot;P:System.Data.DataColumn.Expression&quot; /&gt; property for more information about how to create expressions.">表达式无效。 有关如何创建表达式的更多信息，请参见 <see cref="P:System.Data.DataColumn.Expression" /> 属性。</exception>
      <returns vsli:raw="The newly created &lt;see cref=&quot;T:System.Data.DataColumn&quot; /&gt;.">新创建的 <see cref="T:System.Data.DataColumn" />。</returns>
    </member>
    <member name="M:System.Data.DataColumnCollection.AddRange(System.Data.DataColumn[])">
      <summary vsli:raw="Copies the elements of the specified &lt;see cref=&quot;T:System.Data.DataColumn&quot; /&gt; array to the end of the collection.">将指定的 <see cref="T:System.Data.DataColumn" /> 数组的元素复制到集合末尾。</summary>
      <param name="columns" vsli:raw="The array of &lt;see cref=&quot;T:System.Data.DataColumn&quot; /&gt; objects to add to the collection.">要添加到集合中的 <see cref="T:System.Data.DataColumn" /> 对象的数组。</param>
    </member>
    <member name="M:System.Data.DataColumnCollection.CanRemove(System.Data.DataColumn)">
      <summary vsli:raw="Checks whether a specific column can be removed from the collection.">检查是否可从集合中移除特定列。</summary>
      <param name="column" vsli:raw="A &lt;see cref=&quot;T:System.Data.DataColumn&quot; /&gt; in the collection.">集合中的 <see cref="T:System.Data.DataColumn" />。</param>
      <exception cref="T:System.ArgumentNullException" vsli:raw="The &lt;paramref name=&quot;column&quot; /&gt; parameter is null.">
        <paramref name="column" /> 参数为 null。</exception>
      <exception cref="T:System.ArgumentException" vsli:raw="The column does not belong to this collection.&#xA;        &#xA;-or-&#xA;&#xA;The column is part of a relationship.&#xA;&#xA;-or-&#xA;&#xA;Another column's expression depends on this column.">该列不属于此集合。
        
- 或 -

该列是关系的一部分。

- 或 -

另一个列的表达式取决于该列。</exception>
      <returns vsli:raw="&lt;see langword=&quot;true&quot; /&gt; if the column can be removed. &lt;see langword=&quot;false&quot; /&gt; if,  &#xA;  &#xA;-   The &lt;paramref name=&quot;column&quot; /&gt; parameter is &lt;see langword=&quot;null&quot; /&gt;.  &#xA;  &#xA;-   The column does not belong to this collection.  &#xA;  &#xA;-   The column is part of a relationship.  &#xA;  &#xA;-   Another column's expression depends on this column.">如果可移除该列，则为 <see langword="true" />。 <see langword="false" />，如果 
-   <paramref name="column" /> 参数为 <see langword="null" />。  
  
-   该列不属于此集合。  
  
-   该列是关系的一部分。  
  
-   另一个列的表达式取决于该列。</returns>
    </member>
    <member name="M:System.Data.DataColumnCollection.Clear">
      <summary vsli:raw="Clears the collection of any columns.">清除集合中的所有列。</summary>
    </member>
    <member name="M:System.Data.DataColumnCollection.Contains(System.String)">
      <summary vsli:raw="Checks whether the collection contains a column with the specified name.">检查集合是否包含具有指定名称的列。</summary>
      <param name="name" vsli:raw="The &lt;see cref=&quot;P:System.Data.DataColumn.ColumnName&quot; /&gt; of the column to look for.">要查找的列的 <see cref="P:System.Data.DataColumn.ColumnName" />。</param>
      <returns vsli:raw="&lt;see langword=&quot;true&quot; /&gt; if a column exists with this name; otherwise, &lt;see langword=&quot;false&quot; /&gt;.">如果存在此名称的列，则为 <see langword="true" />；否则为 <see langword="false" />。</returns>
    </member>
    <member name="M:System.Data.DataColumnCollection.CopyTo(System.Data.DataColumn[],System.Int32)">
      <summary vsli:raw="Copies the entire collection into an existing array, starting at a specified index within the array.">将整个集合复制到现有数组中，从该数组内的指定索引处开始复制。</summary>
      <param name="array" vsli:raw="An array of &lt;see cref=&quot;T:System.Data.DataColumn&quot; /&gt; objects to copy the collection into.">将集合复制到其中的 <see cref="T:System.Data.DataColumn" /> 对象的数组。</param>
      <param name="index" vsli:raw="The index to start from.">从其开始的索引。</param>
    </member>
    <member name="M:System.Data.DataColumnCollection.IndexOf(System.Data.DataColumn)">
      <summary vsli:raw="Gets the index of a column specified by name.">获取按名称指定的列的索引。</summary>
      <param name="column" vsli:raw="The name of the column to return.">要返回的列的名称。</param>
      <returns vsli:raw="The index of the column specified by &lt;paramref name=&quot;column&quot; /&gt; if it is found; otherwise, -1.">如果找到由 <paramref name="column" /> 指定的列的索引，则为这个索引；否则为 -1。</returns>
    </member>
    <member name="M:System.Data.DataColumnCollection.IndexOf(System.String)">
      <summary vsli:raw="Gets the index of the column with the specific name (the name is not case sensitive).">获取具有特定名称的列的索引（名称不区分大小写）。</summary>
      <param name="columnName" vsli:raw="The name of the column to find.">要查找的列的名称。</param>
      <returns vsli:raw="The zero-based index of the column with the specified name, or -1 if the column does not exist in the collection.">具有指定名称的列的从零开始的索引，或者如果集合中不存在该列，则为 -1。</returns>
    </member>
    <member name="M:System.Data.DataColumnCollection.Remove(System.Data.DataColumn)">
      <summary vsli:raw="Removes the specified &lt;see cref=&quot;T:System.Data.DataColumn&quot; /&gt; object from the collection.">从集合中移除指定的 <see cref="T:System.Data.DataColumn" /> 对象。</summary>
      <param name="column" vsli:raw="The &lt;see cref=&quot;T:System.Data.DataColumn&quot; /&gt; to remove.">要移除的 <see cref="T:System.Data.DataColumn" />。</param>
      <exception cref="T:System.ArgumentNullException" vsli:raw="The &lt;paramref name=&quot;column&quot; /&gt; parameter is &lt;see langword=&quot;null&quot; /&gt;.">
        <paramref name="column" /> 参数为 <see langword="null" />。</exception>
      <exception cref="T:System.ArgumentException" vsli:raw="The column does not belong to this collection.  &#xA;  &#xA; -Or-  &#xA;  &#xA; The column is part of a relationship.  &#xA;  &#xA; -Or-  &#xA;  &#xA; Another column's expression depends on this column.">该列不属于此集合。  
  
 -或者-  
  
 该列是关系的一部分。  
  
 -或者-  
  
 另一个列的表达式取决于该列。</exception>
    </member>
    <member name="M:System.Data.DataColumnCollection.Remove(System.String)">
      <summary vsli:raw="Removes the &lt;see cref=&quot;T:System.Data.DataColumn&quot; /&gt; object that has the specified name from the collection.">从集合中移除具有指定名称的 <see cref="T:System.Data.DataColumn" /> 对象。</summary>
      <param name="name" vsli:raw="The name of the column to remove.">要移除的列的名称。</param>
      <exception cref="T:System.ArgumentException" vsli:raw="The collection does not have a column with the specified name.">该集合中没有具有指定名称的列。</exception>
    </member>
    <member name="M:System.Data.DataColumnCollection.RemoveAt(System.Int32)">
      <summary vsli:raw="Removes the column at the specified index from the collection.">从集合中移除指定索引位置的列。</summary>
      <param name="index" vsli:raw="The index of the column to remove.">要移除的列的索引。</param>
      <exception cref="T:System.ArgumentException" vsli:raw="The collection does not have a column at the specified index.">该集合在指定的索引位置没有列。</exception>
    </member>
    <member name="P:System.Data.DataColumnCollection.Item(System.Int32)">
      <summary vsli:raw="Gets the &lt;see cref=&quot;T:System.Data.DataColumn&quot; /&gt; from the collection at the specified index.">从集合中获取位于指定索引位置的 <see cref="T:System.Data.DataColumn" />。</summary>
      <param name="index" vsli:raw="The zero-based index of the column to return.">要返回的列的从零开始的索引。</param>
      <exception cref="T:System.IndexOutOfRangeException" vsli:raw="The index value is greater than the number of items in the collection.">索引值大于集合中的项目数。</exception>
      <returns vsli:raw="The &lt;see cref=&quot;T:System.Data.DataColumn&quot; /&gt; at the specified index.">指定索引处的 <see cref="T:System.Data.DataColumn" />。</returns>
    </member>
    <member name="P:System.Data.DataColumnCollection.Item(System.String)">
      <summary vsli:raw="Gets the &lt;see cref=&quot;T:System.Data.DataColumn&quot; /&gt; from the collection with the specified name.">从具有指定名称的集合中获取 <see cref="T:System.Data.DataColumn" />。</summary>
      <param name="name" vsli:raw="The &lt;see cref=&quot;P:System.Data.DataColumn.ColumnName&quot; /&gt; of the column to return.">要返回的列的 <see cref="P:System.Data.DataColumn.ColumnName" />。</param>
      <returns vsli:raw="The &lt;see cref=&quot;T:System.Data.DataColumn&quot; /&gt; in the collection with the specified &lt;see cref=&quot;P:System.Data.DataColumn.ColumnName&quot; /&gt;; otherwise a null value if the &lt;see cref=&quot;T:System.Data.DataColumn&quot; /&gt; does not exist.">具有指定 <see cref="T:System.Data.DataColumn" /> 的集合中的 <see cref="P:System.Data.DataColumn.ColumnName" />，否则，如果 <see cref="T:System.Data.DataColumn" /> 不存在，则为空值。</returns>
    </member>
    <member name="T:System.Data.DataException">
      <summary vsli:raw="Represents the exception that is thrown when errors are generated using ADO.NET components.">表示使用 ADO.NET 组件发生错误时引发的异常。</summary>
    </member>
    <member name="M:System.Data.DataException.#ctor">
      <summary vsli:raw="Initializes a new instance of the &lt;see cref=&quot;T:System.Data.DataException&quot; /&gt; class. This is the parameterless constructor.">初始化 <see cref="T:System.Data.DataException" /> 类的新实例。 这是无参数构造函数。</summary>
    </member>
    <member name="M:System.Data.DataException.#ctor(System.Runtime.Serialization.SerializationInfo,System.Runtime.Serialization.StreamingContext)">
      <summary vsli:raw="Initializes a new instance of the &lt;see cref=&quot;T:System.Data.DataException&quot; /&gt; class with the specified serialization information and context.">用指定的序列化信息和上下文初始化 <see cref="T:System.Data.DataException" /> 类的新实例。</summary>
      <param name="info" vsli:raw="The data necessary to serialize or deserialize an object.">将对象序列化或反序列化所必需的数据。</param>
      <param name="context" vsli:raw="Description of the source and destination of the specified serialized stream.">指定的序列化流的源和目标的说明。</param>
    </member>
    <member name="M:System.Data.DataException.#ctor(System.String)">
      <summary vsli:raw="Initializes a new instance of the &lt;see cref=&quot;T:System.Data.DataException&quot; /&gt; class with the specified string.">使用指定的字符串初始化 <see cref="T:System.Data.DataException" /> 类的新实例。</summary>
      <param name="s" vsli:raw="The string to display when the exception is thrown.">引发异常时显示的字符串。</param>
    </member>
    <member name="M:System.Data.DataException.#ctor(System.String,System.Exception)">
      <summary vsli:raw="Initializes a new instance of the &lt;see cref=&quot;T:System.Data.DataException&quot; /&gt; class with the specified string and inner exception.">使用指定的字符串和内部异常初始化 <see cref="T:System.Data.DataException" /> 类的新实例。</summary>
      <param name="s" vsli:raw="The string to display when the exception is thrown.">引发异常时显示的字符串。</param>
      <param name="innerException" vsli:raw="A reference to an inner exception.">对内部异常的引用。</param>
    </member>
    <member name="T:System.Data.DataReaderExtensions">
      <summary vsli:raw="Provides extension methods for &lt;see cref=&quot;T:System.Data.Common.DbDataReader&quot; /&gt;.">为 <see cref="T:System.Data.Common.DbDataReader" /> 提供扩展方法。</summary>
    </member>
    <member name="M:System.Data.DataReaderExtensions.GetBoolean(System.Data.Common.DbDataReader,System.String)">
      <summary vsli:raw="Gets the value of the specified column as a Boolean.">获取指定列的布尔值形式的值。</summary>
      <param name="reader" vsli:raw="The data reader to get the column value from.">要从中获取列值的数据读取器。</param>
      <param name="name" vsli:raw="The name of the column.">列的名称。</param>
      <exception cref="T:System.IndexOutOfRangeException" vsli:raw="The name specified is not a valid column name.">指定的名称不是有效的列名。</exception>
      <exception cref="T:System.InvalidCastException" vsli:raw="The specified cast is not valid.">指定的强制转换无效。</exception>
      <returns vsli:raw="The value of the specified column.">指定列的值。</returns>
    </member>
    <member name="M:System.Data.DataReaderExtensions.GetByte(System.Data.Common.DbDataReader,System.String)">
      <summary vsli:raw="Gets the value of the specified column as a byte.">以字节的形式获取指定列的值。</summary>
      <param name="reader" vsli:raw="The data reader to get the column value from.">要从中获取列值的数据读取器。</param>
      <param name="name" vsli:raw="The name of the column.">列的名称。</param>
      <exception cref="T:System.IndexOutOfRangeException" vsli:raw="The name specified is not a valid column name.">指定的名称不是有效的列名。</exception>
      <exception cref="T:System.InvalidCastException" vsli:raw="The specified cast is not valid.">指定的强制转换无效。</exception>
      <returns vsli:raw="The value of the specified column.">指定列的值。</returns>
    </member>
    <member name="M:System.Data.DataReaderExtensions.GetBytes(System.Data.Common.DbDataReader,System.String,System.Int64,System.Byte[],System.Int32,System.Int32)">
      <summary vsli:raw="Reads a specified number of bytes from the specified column starting at a specified index and writes them to a buffer starting at a specified position in the buffer.">从指定列中指定索引处开始读取指定字节数，并将其写入缓冲区中从指定位置开始的缓冲区。</summary>
      <param name="reader" vsli:raw="The data reader to get the column value from.">要从中获取列值的数据读取器。</param>
      <param name="name" vsli:raw="The name of the column.">列的名称。</param>
      <param name="dataOffset" vsli:raw="The index within the row from which to begin the read operation.">行中作为读取操作起始位置的索引。</param>
      <param name="buffer" vsli:raw="The buffer into which to copy the data.">要将数据复制到的缓冲区。</param>
      <param name="bufferOffset" vsli:raw="The index with the buffer to which the data will be copied.">要将数据复制到的位置的缓冲区索引。</param>
      <param name="length" vsli:raw="The maximum number of characters to read.">最多读取的字符数。</param>
      <exception cref="T:System.IndexOutOfRangeException" vsli:raw="The name specified is not a valid column name.">指定的名称不是有效的列名。</exception>
      <exception cref="T:System.InvalidCastException" vsli:raw="The specified cast is not valid.">指定的强制转换无效。</exception>
      <returns vsli:raw="The actual number of bytes read.">读取的实际字节数。</returns>
    </member>
    <member name="M:System.Data.DataReaderExtensions.GetChar(System.Data.Common.DbDataReader,System.String)">
      <summary vsli:raw="Gets the value of the specified column as a single character.">作为单个字符获取指定列的值。</summary>
      <param name="reader" vsli:raw="The data reader to get the column value from.">要从中获取列值的数据读取器。</param>
      <param name="name" vsli:raw="The name of the column.">列的名称。</param>
      <exception cref="T:System.IndexOutOfRangeException" vsli:raw="The name specified is not a valid column name.">指定的名称不是有效的列名。</exception>
      <exception cref="T:System.InvalidCastException" vsli:raw="The specified cast is not valid.">指定的强制转换无效。</exception>
      <returns vsli:raw="The value of the specified column.">指定列的值。</returns>
    </member>
    <member name="M:System.Data.DataReaderExtensions.GetChars(System.Data.Common.DbDataReader,System.String,System.Int64,System.Char[],System.Int32,System.Int32)">
      <summary vsli:raw="Reads a specified number of characters from a specified column starting at a specified index, and writes them to a buffer starting at a specified position.">从指定列中指定索引处开始读取指定字符数，并将其写入从指定位置开始的缓冲区。</summary>
      <param name="reader" vsli:raw="The data reader to get the column value from.">要从中获取列值的数据读取器。</param>
      <param name="name" vsli:raw="The name of the column.">列的名称。</param>
      <param name="dataOffset" vsli:raw="The index within the row from which to begin the read operation.">行中作为读取操作起始位置的索引。</param>
      <param name="buffer" vsli:raw="The buffer into which to copy the data.">要将数据复制到的缓冲区。</param>
      <param name="bufferOffset" vsli:raw="The index with the buffer to which the data will be copied.">要将数据复制到的位置的缓冲区索引。</param>
      <param name="length" vsli:raw="The maximum number of characters to read.">最多读取的字符数。</param>
      <exception cref="T:System.IndexOutOfRangeException" vsli:raw="The name specified is not a valid column name.">指定的名称不是有效的列名。</exception>
      <returns vsli:raw="The actual number of characters read.">读取的实际字符数。</returns>
    </member>
    <member name="M:System.Data.DataReaderExtensions.GetData(System.Data.Common.DbDataReader,System.String)">
      <summary vsli:raw="Returns a nested data reader for the requested column.">返回所请求列的嵌套数据读取器。</summary>
      <param name="reader" vsli:raw="The data reader to get the column value from.">要从中获取列值的数据读取器。</param>
      <param name="name" vsli:raw="The name of the column.">列的名称。</param>
      <exception cref="T:System.IndexOutOfRangeException" vsli:raw="The name specified is not a valid column name.">指定的名称不是有效的列名。</exception>
      <returns vsli:raw="A data reader.">数据读取器。</returns>
    </member>
    <member name="M:System.Data.DataReaderExtensions.GetDataTypeName(System.Data.Common.DbDataReader,System.String)">
      <summary vsli:raw="Gets name of the data type of the specified column.">获取指定列的数据类型的名称。</summary>
      <param name="reader" vsli:raw="The data reader to get the column type name from.">要从中获取列类型名称的数据读取器。</param>
      <param name="name" vsli:raw="The name of the column.">列的名称。</param>
      <exception cref="T:System.IndexOutOfRangeException" vsli:raw="The name specified is not a valid column name.">指定的名称不是有效的列名。</exception>
      <returns vsli:raw="The name of the data type.">数据类型的名称。</returns>
    </member>
    <member name="M:System.Data.DataReaderExtensions.GetDateTime(System.Data.Common.DbDataReader,System.String)">
      <summary vsli:raw="Gets the value of the specified column as a &lt;see cref=&quot;T:System.DateTime&quot; /&gt; object.">以 <see cref="T:System.DateTime" /> 对象的形式获取指定列的值。</summary>
      <param name="reader" vsli:raw="The data reader to get the column value from.">要从中获取列值的数据读取器。</param>
      <param name="name" vsli:raw="The name of the column.">列的名称。</param>
      <exception cref="T:System.IndexOutOfRangeException" vsli:raw="The name specified is not a valid column name.">指定的名称不是有效的列名。</exception>
      <exception cref="T:System.InvalidCastException" vsli:raw="The specified cast is not valid.">指定的强制转换无效。</exception>
      <returns vsli:raw="The value of the specified column.">指定列的值。</returns>
    </member>
    <member name="M:System.Data.DataReaderExtensions.GetDecimal(System.Data.Common.DbDataReader,System.String)">
      <summary vsli:raw="Gets the value of the specified column as a &lt;see cref=&quot;T:System.Decimal&quot; /&gt;.">获取指定列的 <see cref="T:System.Decimal" /> 形式的值。</summary>
      <param name="reader" vsli:raw="The data reader to get the column value from.">要从中获取列值的数据读取器。</param>
      <param name="name" vsli:raw="The name of the column.">列的名称。</param>
      <exception cref="T:System.IndexOutOfRangeException" vsli:raw="The name specified is not a valid column name.">指定的名称不是有效的列名。</exception>
      <exception cref="T:System.InvalidCastException" vsli:raw="The specified cast is not valid.">指定的强制转换无效。</exception>
      <returns vsli:raw="The value of the specified column.">指定列的值。</returns>
    </member>
    <member name="M:System.Data.DataReaderExtensions.GetDouble(System.Data.Common.DbDataReader,System.String)">
      <summary vsli:raw="Gets the value of the specified column as a double-precision floating point number.">获取作为双精度浮点数的指定列的值。</summary>
      <param name="reader" vsli:raw="The data reader to get the column value from.">要从中获取列值的数据读取器。</param>
      <param name="name" vsli:raw="The name of the column.">列的名称。</param>
      <exception cref="T:System.InvalidCastException" vsli:raw="The specified cast is not valid.">指定的强制转换无效。</exception>
      <exception cref="T:System.IndexOutOfRangeException" vsli:raw="The name specified is not a valid column name.">指定的名称不是有效的列名。</exception>
      <returns vsli:raw="The value of the specified column.">指定列的值。</returns>
    </member>
    <member name="M:System.Data.DataReaderExtensions.GetFieldType(System.Data.Common.DbDataReader,System.String)">
      <summary vsli:raw="Gets the data type of the specified column.">获取指定列的数据类型。</summary>
      <param name="reader" vsli:raw="The data reader to get the field type from.">要从中获取字段类型的数据读取器。</param>
      <param name="name" vsli:raw="The name of the column.">列的名称。</param>
      <exception cref="T:System.IndexOutOfRangeException" vsli:raw="The name specified is not a valid column name.">指定的名称不是有效的列名。</exception>
      <exception cref="T:System.InvalidCastException" vsli:raw="The specified cast is not valid.">指定的强制转换无效。</exception>
      <returns vsli:raw="The data type of the specified column.">指定列的数据类型。</returns>
    </member>
    <member name="M:System.Data.DataReaderExtensions.GetFieldValue``1(System.Data.Common.DbDataReader,System.String)">
      <summary vsli:raw="Gets the value of the specified column as the requested type.">获取指定列的值作为请求的类型。</summary>
      <param name="reader" vsli:raw="The data reader to get the column value from.">要从中获取列值的数据读取器。</param>
      <param name="name" vsli:raw="The name of the column.">列的名称。</param>
      <typeparam name="T" vsli:raw="The type of the value to be returned.">要返回的值的类型。</typeparam>
      <exception cref="T:System.InvalidOperationException" vsli:raw="The connection was dropped or closed during data retrieval.  &#xA;&#xA;-or-&#xA;  &#xA; The data reader was closed during data retrieval.  &#xA;  &#xA;-or-&#xA;&#xA; There is no data ready to be read (for example, the first &lt;see cref=&quot;M:System.Data.Common.DbDataReader.Read&quot; /&gt; hasn't been called, or it returned &lt;see langword=&quot;false&quot; /&gt;).  &#xA;&#xA;-or-&#xA;&#xA; The reader tried to read a previously-read column in sequential mode.  &#xA;&#xA;-or-&#xA;&#xA; There was an asynchronous operation in progress. This applies to all Get* methods when running in sequential mode, as they could be called while reading a stream.">在数据检索期间删除或关闭连接。  

- 或 - 
在数据检索期间关闭数据读取器。  
  
- 或 -

没有可读取的数据（例如尚未调用第一个 <see cref="M:System.Data.Common.DbDataReader.Read" />，或调用返回了 <see langword="false" />）。  

- 或 -

读取器试图按顺序模式读取曾读取的列。  

- 或 -

没有正在进行的异步操作。 以顺序模式运行时，这适用于所有 Get* 方法，读取流时也可对其进行调用。</exception>
      <exception cref="T:System.IndexOutOfRangeException" vsli:raw="The name specified is not a valid column name.">指定的名称不是有效的列名。</exception>
      <exception cref="T:System.InvalidCastException" vsli:raw="The value returned by the database doesn't match or cannot be cast to &lt;typeparamref name=&quot;T&quot; /&gt;.">数据库返回的值不匹配或不能转换为 <typeparamref name="T" />。</exception>
      <returns vsli:raw="The value of the specified column.">指定列的值。</returns>
    </member>
    <member name="M:System.Data.DataReaderExtensions.GetFieldValueAsync``1(System.Data.Common.DbDataReader,System.String,System.Threading.CancellationToken)">
      <summary vsli:raw="Asynchronously gets the value of the specified column as the requested type.">异步获取指定列的值作为请求的类型。</summary>
      <param name="reader" vsli:raw="The data reader to get the column value from.">要从中获取列值的数据读取器。</param>
      <param name="name" vsli:raw="The name of the column.">列的名称。</param>
      <param name="cancellationToken" vsli:raw="An optional token to cancel the asynchronous operation.">用于取消异步操作的可选令牌。</param>
      <typeparam name="T" vsli:raw="The type of the value to be returned.">要返回的值的类型。</typeparam>
      <exception cref="T:System.InvalidOperationException" vsli:raw="The connection was dropped or closed during data retrieval.  &#xA;  &#xA;-or-&#xA;&#xA; The data reader was closed during the data retrieval.  &#xA;&#xA;-or-&#xA;&#xA; There is no data ready to be read (for example, the first &lt;see cref=&quot;M:System.Data.Common.DbDataReader.Read&quot; /&gt; hasn't been called, or it returned &lt;see langword=&quot;false&quot; /&gt;).&#xA;&#xA;-or-&#xA;&#xA; Tried to read a previously-read column in sequential mode.  &#xA;&#xA;-or-&#xA;&#xA; There was an asynchronous operation in progress. This applies to all Get_*_ methods when running in sequential mode, as they could be called while reading a stream.">在数据检索期间删除或关闭连接。  
  
- 或 -

在数据检索期间关闭数据读取器。  

- 或 -

没有可读取的数据（例如尚未调用第一个 <see cref="M:System.Data.Common.DbDataReader.Read" />，或调用返回了 <see langword="false" />）。

- 或 -

按顺序模式尝试读取上一步骤中读取的列。  

- 或 -

没有正在进行的异步操作。 以顺序模式运行时，这适用于所有 Get_*_ 方法，读取流时也可对其进行调用。</exception>
      <exception cref="T:System.IndexOutOfRangeException" vsli:raw="The name specified is not a valid column name.">指定的名称不是有效的列名。</exception>
      <exception cref="T:System.InvalidCastException" vsli:raw="The value returned by the database doesn't match or cannot be cast to &lt;typeparamref name=&quot;T&quot; /&gt;.">数据库返回的值不匹配或不能转换为 <typeparamref name="T" />。</exception>
      <returns vsli:raw="A task whose &lt;see cref=&quot;P:System.Threading.Tasks.Task`1.Result&quot; /&gt; contains the value of the specified column.">
        <see cref="P:System.Threading.Tasks.Task`1.Result" /> 包含指定列的值的任务。</returns>
    </member>
    <member name="M:System.Data.DataReaderExtensions.GetFloat(System.Data.Common.DbDataReader,System.String)">
      <summary vsli:raw="Gets the value of the specified column as a single-precision floating point number.">以单精度浮点数字的形式获取指定列的值。</summary>
      <param name="reader" vsli:raw="The data reader to get the column value from.">要从中获取列值的数据读取器。</param>
      <param name="name" vsli:raw="The name of the column.">列的名称。</param>
      <exception cref="T:System.IndexOutOfRangeException" vsli:raw="The name specified is not a valid column name.">指定的名称不是有效的列名。</exception>
      <exception cref="T:System.InvalidCastException" vsli:raw="The specified cast is not valid.">指定的强制转换无效。</exception>
      <returns vsli:raw="The value of the specified column.">指定列的值。</returns>
    </member>
    <member name="M:System.Data.DataReaderExtensions.GetGuid(System.Data.Common.DbDataReader,System.String)">
      <summary vsli:raw="Gets the value of the specified column as a globally unique identifier (GUID).">作为全局唯一标识符 (GUID) 获取指定列的值。</summary>
      <param name="reader" vsli:raw="The data reader to get the column value from.">要从中获取列值的数据读取器。</param>
      <param name="name" vsli:raw="The name of the column.">列的名称。</param>
      <exception cref="T:System.IndexOutOfRangeException" vsli:raw="The name specified is not a valid column name.">指定的名称不是有效的列名。</exception>
      <exception cref="T:System.InvalidCastException" vsli:raw="The specified cast is not valid.">指定的强制转换无效。</exception>
      <returns vsli:raw="The value of the specified column.">指定列的值。</returns>
    </member>
    <member name="M:System.Data.DataReaderExtensions.GetInt16(System.Data.Common.DbDataReader,System.String)">
      <summary vsli:raw="Gets the value of the specified column as a 16-bit signed integer.">获取指定列的 16 位有符号整数形式的值。</summary>
      <param name="reader" vsli:raw="The data reader to get the column value from.">要从中获取列值的数据读取器。</param>
      <param name="name" vsli:raw="The name of the column.">列的名称。</param>
      <exception cref="T:System.IndexOutOfRangeException" vsli:raw="The name specified is not a valid column name.">指定的名称不是有效的列名。</exception>
      <exception cref="T:System.InvalidCastException" vsli:raw="The specified cast is not valid.">指定的强制转换无效。</exception>
      <returns vsli:raw="The value of the specified column.">指定列的值。</returns>
    </member>
    <member name="M:System.Data.DataReaderExtensions.GetInt32(System.Data.Common.DbDataReader,System.String)">
      <summary vsli:raw="Gets the value of the specified column as a 32-bit signed integer.">获取指定列的 32 位带符号整数形式的值。</summary>
      <param name="reader" vsli:raw="The data reader to get the column value from.">要从中获取列值的数据读取器。</param>
      <param name="name" vsli:raw="The name of the column.">列的名称。</param>
      <exception cref="T:System.IndexOutOfRangeException" vsli:raw="The name specified is not a valid column name.">指定的名称不是有效的列名。</exception>
      <exception cref="T:System.InvalidCastException" vsli:raw="The specified cast is not valid.">指定的强制转换无效。</exception>
      <returns vsli:raw="The value of the specified column.">指定列的值。</returns>
    </member>
    <member name="M:System.Data.DataReaderExtensions.GetInt64(System.Data.Common.DbDataReader,System.String)">
      <summary vsli:raw="Gets the value of the specified column as a 64-bit signed integer.">以 64 位有符号整数的形式获取指定列的值。</summary>
      <param name="reader" vsli:raw="The data reader to get the column value from.">要从中获取列值的数据读取器。</param>
      <param name="name" vsli:raw="The name of the column.">列的名称。</param>
      <exception cref="T:System.IndexOutOfRangeException" vsli:raw="The name specified is not a valid column name.">指定的名称不是有效的列名。</exception>
      <exception cref="T:System.InvalidCastException" vsli:raw="The specified cast is not valid.">指定的强制转换无效。</exception>
      <returns vsli:raw="The value of the specified column.">指定列的值。</returns>
    </member>
    <member name="M:System.Data.DataReaderExtensions.GetProviderSpecificFieldType(System.Data.Common.DbDataReader,System.String)">
      <summary vsli:raw="Gets the provider-specific type of the specified column.">获取指定列的特定于提供程序的类型。</summary>
      <param name="reader" vsli:raw="The data reader to get the column value from.">要从中获取列值的数据读取器。</param>
      <param name="name" vsli:raw="The name of the column.">列的名称。</param>
      <exception cref="T:System.IndexOutOfRangeException" vsli:raw="The name specified is not a valid column name.">指定的名称不是有效的列名。</exception>
      <returns vsli:raw="A provider-specific .NET type.">特定于提供程序的 .NET 类型。</returns>
    </member>
    <member name="M:System.Data.DataReaderExtensions.GetProviderSpecificValue(System.Data.Common.DbDataReader,System.String)">
      <summary vsli:raw="Gets the value of the specified column as an instance of a provider-specific type.">以特定于提供程序的类型实例的形式获取指定列的值。</summary>
      <param name="reader" vsli:raw="The data reader to get the column value from.">要从中获取列值的数据读取器。</param>
      <param name="name" vsli:raw="The name of the column.">列的名称。</param>
      <exception cref="T:System.IndexOutOfRangeException" vsli:raw="The name specified is not a valid column name.">指定的名称不是有效的列名。</exception>
      <exception cref="T:System.InvalidCastException" vsli:raw="The specified cast is not valid.">指定的强制转换无效。</exception>
      <returns vsli:raw="The value of the specified column.">指定列的值。</returns>
    </member>
    <member name="M:System.Data.DataReaderExtensions.GetStream(System.Data.Common.DbDataReader,System.String)">
      <summary vsli:raw="Gets a stream to retrieve data from the specified column.">获取从指定列检索数据的流。</summary>
      <param name="reader" vsli:raw="The data reader to get the column value from.">要从中获取列值的数据读取器。</param>
      <param name="name" vsli:raw="The name of the column.">列的名称。</param>
      <exception cref="T:System.InvalidOperationException" vsli:raw="The connection was dropped or closed during the data retrieval.  &#xA;  &#xA;-or-&#xA;&#xA; The data reader is closed during the data retrieval.  &#xA;&#xA;-or-&#xA;&#xA; There is no data ready to be read (for example, the first &lt;see cref=&quot;M:System.Data.Common.DbDataReader.Read&quot; /&gt; hasn't been called, or returned false).  &#xA;&#xA;-or-&#xA;&#xA; The data reader tried to read a previously-read column in sequential mode.  &#xA;&#xA;-or-&#xA;&#xA; There was an asynchronous operation in progress. This applies to all Get* methods when running in sequential mode, as they could be called while reading a stream.">在数据检索期间删除或关闭连接。  
  
- 或 -

在数据检索期间关闭数据读取器。  

- 或 -

没有要读取的就绪数据 (例如，第一个 <see cref="M:System.Data.Common.DbDataReader.Read" /> 未被调用或返回错误)。  

- 或 -

数据读取器按顺序模式尝试读取上一步骤中读取的列。  

- 或 -

没有正在进行的异步操作。 以顺序模式运行时，这适用于所有 Get* 方法，读取流时也可对其进行调用。</exception>
      <exception cref="T:System.IndexOutOfRangeException" vsli:raw="The name specified is not a valid column name.">指定的名称不是有效的列名。</exception>
      <exception cref="T:System.InvalidCastException" vsli:raw="The specified column isn't a binary type that supports reading with a &lt;see cref=&quot;T:System.IO.Stream&quot; /&gt;.">指定的列不是支持用 <see cref="T:System.IO.Stream" /> 读取的二进制类型。</exception>
      <returns vsli:raw="A stream.">一个流。</returns>
    </member>
    <member name="M:System.Data.DataReaderExtensions.GetString(System.Data.Common.DbDataReader,System.String)">
      <summary vsli:raw="Gets the value of the specified column as an instance of &lt;see cref=&quot;T:System.String&quot; /&gt;.">以 <see cref="T:System.String" /> 实例的形式获取指定列的值。</summary>
      <param name="reader" vsli:raw="The data reader to get the column value from.">要从中获取列值的数据读取器。</param>
      <param name="name" vsli:raw="The name of the column.">列的名称。</param>
      <exception cref="T:System.IndexOutOfRangeException" vsli:raw="The name specified is not a valid column name.">指定的名称不是有效的列名。</exception>
      <exception cref="T:System.InvalidCastException" vsli:raw="The specified cast is not valid.">指定的强制转换无效。</exception>
      <returns vsli:raw="The value of the specified column.">指定列的值。</returns>
    </member>
    <member name="M:System.Data.DataReaderExtensions.GetTextReader(System.Data.Common.DbDataReader,System.String)">
      <summary vsli:raw="Gets a text reader to retrieve data from the column.">获取文本读取器以从列中检索数据。</summary>
      <param name="reader" vsli:raw="The data reader to get the column value from.">要从中获取列值的数据读取器。</param>
      <param name="name" vsli:raw="The name of the column.">列的名称。</param>
      <exception cref="T:System.InvalidOperationException" vsli:raw="The connection was dropped or closed during the data retrieval.  &#xA;  &#xA;-or-&#xA;&#xA; The data reader is closed during the data retrieval.  &#xA;&#xA;-or-&#xA;&#xA; There is no data ready to be read (for example, the first &lt;see cref=&quot;M:System.Data.Common.DbDataReader.Read&quot; /&gt; hasn't been called, or returned false).  &#xA;&#xA;-or-&#xA;&#xA; The data reader tried to read a previously-read column in sequential mode.  &#xA;&#xA;-or-&#xA;&#xA; There was an asynchronous operation in progress. This applies to all Get* methods when running in sequential mode, as they could be called while reading a stream.">在数据检索期间删除或关闭连接。  
  
- 或 -

在数据检索期间关闭数据读取器。  

- 或 -

没有要读取的就绪数据 (例如，第一个 <see cref="M:System.Data.Common.DbDataReader.Read" /> 未被调用或返回错误)。  

- 或 -

数据读取器按顺序模式尝试读取上一步骤中读取的列。  

- 或 -

没有正在进行的异步操作。 以顺序模式运行时，这适用于所有 Get* 方法，读取流时也可对其进行调用。</exception>
      <exception cref="T:System.IndexOutOfRangeException" vsli:raw="The name specified is not a valid column name.">指定的名称不是有效的列名。</exception>
      <exception cref="T:System.InvalidCastException" vsli:raw="The specified column isn't a text type that supports reading with a &lt;see cref=&quot;T:System.IO.TextReader&quot; /&gt;.">指定的列不是支持用 <see cref="T:System.IO.TextReader" /> 读取的文本类型。</exception>
      <returns vsli:raw="A text reader.">文本读取器。</returns>
    </member>
    <member name="M:System.Data.DataReaderExtensions.GetValue(System.Data.Common.DbDataReader,System.String)">
      <summary vsli:raw="Gets the value of the specified column as an instance of &lt;see cref=&quot;T:System.Object&quot; /&gt;.">以 <see cref="T:System.Object" /> 实例的形式获取指定列的值。</summary>
      <param name="reader" vsli:raw="The data reader to get the column value from.">要从中获取列值的数据读取器。</param>
      <param name="name" vsli:raw="The name of the column.">列的名称。</param>
      <exception cref="T:System.IndexOutOfRangeException" vsli:raw="The name specified is not a valid column name.">指定的名称不是有效的列名。</exception>
      <returns vsli:raw="The value of the specified column.">指定列的值。</returns>
    </member>
    <member name="M:System.Data.DataReaderExtensions.IsDBNull(System.Data.Common.DbDataReader,System.String)">
      <summary vsli:raw="Gets a value that indicates whether the column contains nonexistent or missing values.">获取一个值，该值指示列中是否包含不存在或丢失的值。</summary>
      <param name="reader" vsli:raw="The data reader to get the column value from.">要从中获取列值的数据读取器。</param>
      <param name="name" vsli:raw="The name of the column.">列的名称。</param>
      <exception cref="T:System.IndexOutOfRangeException" vsli:raw="The name specified is not a valid column name.">指定的名称不是有效的列名。</exception>
      <returns vsli:raw="&lt;see langword=&quot;true&quot; /&gt; if the specified column is equivalent to &lt;see cref=&quot;T:System.DBNull&quot; /&gt;; otherwise, &lt;see langword=&quot;false&quot; /&gt;.">如果指定的列与 <see cref="T:System.DBNull" /> 等效，则为 <see langword="true" />；否则，为 <see langword="false" />。</returns>
    </member>
    <member name="M:System.Data.DataReaderExtensions.IsDBNullAsync(System.Data.Common.DbDataReader,System.String,System.Threading.CancellationToken)">
      <summary vsli:raw="Asynchronously gets a value that indicates whether the column contains non-existent or missing values.">异步获取一个值，该值指示列中是否包含不存在的或缺少的值。</summary>
      <param name="reader" vsli:raw="The data reader to get the column value from.">要从中获取列值的数据读取器。</param>
      <param name="name" vsli:raw="The name of the column.">列的名称。</param>
      <param name="cancellationToken" vsli:raw="An optional token to cancel the asynchronous operation.">用于取消异步操作的可选令牌。</param>
      <exception cref="T:System.InvalidOperationException" vsli:raw="The connection was dropped or closed during the data retrieval.  &#xA;  &#xA;-or-&#xA;&#xA; The data reader is closed during the data retrieval.  &#xA;&#xA;-or-&#xA;&#xA; There is no data ready to be read (for example, the first &lt;see cref=&quot;M:System.Data.Common.DbDataReader.Read&quot; /&gt; hasn't been called, or returned false).  &#xA;&#xA;-or-&#xA;&#xA; Trying to read a previously read column in sequential mode.  &#xA;&#xA;-or-&#xA;  &#xA; There was an asynchronous operation in progress. This applies to all Get* methods when running in sequential mode, as they could be called while reading a stream.">在数据检索期间删除或关闭连接。  
  
- 或 -

在数据检索期间关闭数据读取器。  

- 或 -

没有要读取的就绪数据 (例如，第一个 <see cref="M:System.Data.Common.DbDataReader.Read" /> 未被调用或返回错误)。  

- 或 -

按顺序模式尝试读取上一步骤中读取的列。  

- 或 - 
没有正在进行的异步操作。 以顺序模式运行时，这适用于所有 Get* 方法，读取流时也可对其进行调用。</exception>
      <exception cref="T:System.IndexOutOfRangeException" vsli:raw="The name specified is not a valid column name.">指定的名称不是有效的列名。</exception>
      <returns vsli:raw="A &lt;see cref=&quot;T:System.Threading.Tasks.Task`1&quot; /&gt; whose &lt;see cref=&quot;P:System.Threading.Tasks.Task`1.Result&quot; /&gt; property is &lt;see langword=&quot;true&quot; /&gt; if the specified column value is equivalent to &lt;see langword=&quot;DBNull&quot; /&gt; or &lt;see langword=&quot;false&quot; /&gt; if it is not.">一个 <see cref="T:System.Threading.Tasks.Task`1" />，如果指定的列值等于 <see langword="DBNull" />，则其 <see cref="P:System.Threading.Tasks.Task`1.Result" /> 属性为 <see langword="true" />，如果不等于，则为 <see langword="false" />。</returns>
    </member>
    <member name="T:System.Data.DataRelation">
      <summary vsli:raw="Represents a parent/child relationship between two &lt;see cref=&quot;T:System.Data.DataTable&quot; /&gt; objects.">表示两个 <see cref="T:System.Data.DataTable" /> 对象之间的父/子关系。</summary>
    </member>
    <member name="M:System.Data.DataRelation.#ctor(System.String,System.Data.DataColumn,System.Data.DataColumn)">
      <summary vsli:raw="Initializes a new instance of the &lt;see cref=&quot;T:System.Data.DataRelation&quot; /&gt; class using the specified &lt;see cref=&quot;T:System.Data.DataRelation&quot; /&gt; name, and parent and child &lt;see cref=&quot;T:System.Data.DataColumn&quot; /&gt; objects.">使用指定的 <see cref="T:System.Data.DataRelation" /> 名称、父级和子级 <see cref="T:System.Data.DataColumn" /> 对象，初始化 <see cref="T:System.Data.DataRelation" /> 类的新实例。</summary>
      <param name="relationName" vsli:raw="The name of the &lt;see cref=&quot;T:System.Data.DataRelation&quot; /&gt;. If &lt;see langword=&quot;null&quot; /&gt; or an empty string (&quot;&quot;), a default name will be given when the created object is added to the &lt;see cref=&quot;T:System.Data.DataRelationCollection&quot; /&gt;.">
        <see cref="T:System.Data.DataRelation" /> 的名称。 如果为 <see langword="null" /> 或空字符串 ("")，则当创建的对象添加到 <see cref="T:System.Data.DataRelationCollection" /> 时，将提供一个默认名称。</param>
      <param name="parentColumn" vsli:raw="The parent &lt;see cref=&quot;T:System.Data.DataColumn&quot; /&gt; in the relationship.">关系中的父级 <see cref="T:System.Data.DataColumn" />。</param>
      <param name="childColumn" vsli:raw="The child &lt;see cref=&quot;T:System.Data.DataColumn&quot; /&gt; in the relationship.">关系中的子级 <see cref="T:System.Data.DataColumn" />。</param>
      <exception cref="T:System.ArgumentNullException" vsli:raw="One or both of the &lt;see cref=&quot;T:System.Data.DataColumn&quot; /&gt; objects contains &lt;see langword=&quot;null&quot; /&gt;.">一个或两个 <see cref="T:System.Data.DataColumn" /> 对象包含 <see langword="null" />。</exception>
      <exception cref="T:System.Data.InvalidConstraintException" vsli:raw="The columns have different data types  &#xA;  &#xA; -Or-  &#xA;  &#xA; The tables do not belong to the same &lt;see cref=&quot;T:System.Data.DataSet&quot; /&gt;.">列具有不同的数据类型 
-或者- 
表不属于同一个 <see cref="T:System.Data.DataSet" />。</exception>
    </member>
    <member name="M:System.Data.DataRelation.#ctor(System.String,System.Data.DataColumn,System.Data.DataColumn,System.Boolean)">
      <summary vsli:raw="Initializes a new instance of the &lt;see cref=&quot;T:System.Data.DataRelation&quot; /&gt; class using the specified name, parent and child &lt;see cref=&quot;T:System.Data.DataColumn&quot; /&gt; objects, and a value that indicates whether to create constraints.">使用指定名称、父级和子级 <see cref="T:System.Data.DataColumn" /> 对象以及指示是否创建约束的值，初始化 <see cref="T:System.Data.DataRelation" /> 类的新实例。</summary>
      <param name="relationName" vsli:raw="The name of the relation. If &lt;see langword=&quot;null&quot; /&gt; or an empty string (&quot;&quot;), a default name will be given when the created object is added to the &lt;see cref=&quot;T:System.Data.DataRelationCollection&quot; /&gt;.">关系的名称。 如果为 <see langword="null" /> 或空字符串 ("")，则当创建的对象添加到 <see cref="T:System.Data.DataRelationCollection" /> 时，将提供一个默认名称。</param>
      <param name="parentColumn" vsli:raw="The parent &lt;see cref=&quot;T:System.Data.DataColumn&quot; /&gt; in the relation.">关系中的父级 <see cref="T:System.Data.DataColumn" />。</param>
      <param name="childColumn" vsli:raw="The child &lt;see cref=&quot;T:System.Data.DataColumn&quot; /&gt; in the relation.">关系中的子级 <see cref="T:System.Data.DataColumn" />。</param>
      <param name="createConstraints" vsli:raw="A value that indicates whether constraints are created. &lt;see langword=&quot;true&quot; /&gt;, if constraints are created. Otherwise, &lt;see langword=&quot;false&quot; /&gt;.">一个指示是否创建约束的值。 如果要创建约束，则为 <see langword="true" />。 否则为 <see langword="false" />。</param>
      <exception cref="T:System.ArgumentNullException" vsli:raw="One or both of the &lt;see cref=&quot;T:System.Data.DataColumn&quot; /&gt; objects contains &lt;see langword=&quot;null&quot; /&gt;.">一个或两个 <see cref="T:System.Data.DataColumn" /> 对象包含 <see langword="null" />。</exception>
      <exception cref="T:System.Data.InvalidConstraintException" vsli:raw="The columns have different data types  &#xA;  &#xA; -Or-  &#xA;  &#xA; The tables do not belong to the same &lt;see cref=&quot;T:System.Data.DataSet&quot; /&gt;.">列具有不同的数据类型 
-或者- 
表不属于同一个 <see cref="T:System.Data.DataSet" />。</exception>
    </member>
    <member name="M:System.Data.DataRelation.#ctor(System.String,System.Data.DataColumn[],System.Data.DataColumn[])">
      <summary vsli:raw="Initializes a new instance of the &lt;see cref=&quot;T:System.Data.DataRelation&quot; /&gt; class using the specified &lt;see cref=&quot;T:System.Data.DataRelation&quot; /&gt; name and matched arrays of parent and child &lt;see cref=&quot;T:System.Data.DataColumn&quot; /&gt; objects.">使用指定的 <see cref="T:System.Data.DataRelation" /> 名称、父级和子级 <see cref="T:System.Data.DataColumn" /> 对象的匹配数组，初始化 <see cref="T:System.Data.DataRelation" /> 类的新实例。</summary>
      <param name="relationName" vsli:raw="The name of the relation. If &lt;see langword=&quot;null&quot; /&gt; or an empty string (&quot;&quot;), a default name will be given when the created object is added to the &lt;see cref=&quot;T:System.Data.DataRelationCollection&quot; /&gt;.">关系的名称。 如果为 <see langword="null" /> 或空字符串 ("")，则当创建的对象添加到 <see cref="T:System.Data.DataRelationCollection" /> 时，将提供一个默认名称。</param>
      <param name="parentColumns" vsli:raw="An array of parent &lt;see cref=&quot;T:System.Data.DataColumn&quot; /&gt; objects.">父级 <see cref="T:System.Data.DataColumn" /> 对象的数组。</param>
      <param name="childColumns" vsli:raw="An array of child &lt;see cref=&quot;T:System.Data.DataColumn&quot; /&gt; objects.">子级 <see cref="T:System.Data.DataColumn" /> 对象的数组。</param>
      <exception cref="T:System.ArgumentNullException" vsli:raw="One or both of the &lt;see cref=&quot;T:System.Data.DataColumn&quot; /&gt; objects contains &lt;see langword=&quot;null&quot; /&gt;.">一个或两个 <see cref="T:System.Data.DataColumn" /> 对象包含 <see langword="null" />。</exception>
      <exception cref="T:System.Data.InvalidConstraintException" vsli:raw="The &lt;see cref=&quot;T:System.Data.DataColumn&quot; /&gt; objects have different data types  &#xA;  &#xA; -Or-  &#xA;  &#xA; One or both of the arrays are not composed of distinct columns from the same table.  &#xA;  &#xA; -Or-  &#xA;  &#xA; The tables do not belong to the same &lt;see cref=&quot;T:System.Data.DataSet&quot; /&gt;.">
        <see cref="T:System.Data.DataColumn" /> 对象具有不同的数据类型 
-或者- 
一个或两个数组不由同一个表中的不同列构成。  
  
-或者- 
表不属于同一个 <see cref="T:System.Data.DataSet" />。</exception>
    </member>
    <member name="M:System.Data.DataRelation.#ctor(System.String,System.Data.DataColumn[],System.Data.DataColumn[],System.Boolean)">
      <summary vsli:raw="Initializes a new instance of the &lt;see cref=&quot;T:System.Data.DataRelation&quot; /&gt; class using the specified name, matched arrays of parent and child &lt;see cref=&quot;T:System.Data.DataColumn&quot; /&gt; objects, and value that indicates whether to create constraints.">使用指定的名称、父级和子级 <see cref="T:System.Data.DataColumn" /> 对象的匹配数组以及指示是否创建约束的值，初始化 <see cref="T:System.Data.DataRelation" /> 类的新实例。</summary>
      <param name="relationName" vsli:raw="The name of the relation. If &lt;see langword=&quot;null&quot; /&gt; or an empty string (&quot;&quot;), a default name will be given when the created object is added to the &lt;see cref=&quot;T:System.Data.DataRelationCollection&quot; /&gt;.">关系的名称。 如果为 <see langword="null" /> 或空字符串 ("")，则当创建的对象添加到 <see cref="T:System.Data.DataRelationCollection" /> 时，将提供一个默认名称。</param>
      <param name="parentColumns" vsli:raw="An array of parent &lt;see cref=&quot;T:System.Data.DataColumn&quot; /&gt; objects.">父级 <see cref="T:System.Data.DataColumn" /> 对象的数组。</param>
      <param name="childColumns" vsli:raw="An array of child &lt;see cref=&quot;T:System.Data.DataColumn&quot; /&gt; objects.">子级 <see cref="T:System.Data.DataColumn" /> 对象的数组。</param>
      <param name="createConstraints" vsli:raw="A value that indicates whether to create constraints. &lt;see langword=&quot;true&quot; /&gt;, if constraints are created. Otherwise, &lt;see langword=&quot;false&quot; /&gt;.">一个指示是否创建约束的值。 如果要创建约束，则为 <see langword="true" />。 否则为 <see langword="false" />。</param>
      <exception cref="T:System.ArgumentNullException" vsli:raw="One or both of the &lt;see cref=&quot;T:System.Data.DataColumn&quot; /&gt; objects is &lt;see langword=&quot;null&quot; /&gt;.">一个或两个 <see cref="T:System.Data.DataColumn" /> 对象为 <see langword="null" />。</exception>
      <exception cref="T:System.Data.InvalidConstraintException" vsli:raw="The columns have different data types  &#xA;  &#xA; -Or-  &#xA;  &#xA; The tables do not belong to the same &lt;see cref=&quot;T:System.Data.DataSet&quot; /&gt;.">列具有不同的数据类型 
-或者- 
表不属于同一个 <see cref="T:System.Data.DataSet" />。</exception>
    </member>
    <member name="M:System.Data.DataRelation.#ctor(System.String,System.String,System.String,System.String,System.String,System.String[],System.String[],System.Boolean)">
      <summary vsli:raw="This constructor is provided for design time support in the Visual Studio environment.">此构造函数在 Visual Studio 环境中提供设计时支持。</summary>
      <param name="relationName" vsli:raw="The name of the &lt;see cref=&quot;T:System.Data.DataRelation&quot; /&gt;. If &lt;see langword=&quot;null&quot; /&gt; or an empty string (&quot;&quot;), a default name will be given when the created object is added to the &lt;see cref=&quot;T:System.Data.DataRelationCollection&quot; /&gt;.">
        <see cref="T:System.Data.DataRelation" /> 的名称。 如果为 <see langword="null" /> 或空字符串 ("")，则当创建的对象添加到 <see cref="T:System.Data.DataRelationCollection" /> 时，将提供一个默认名称。</param>
      <param name="parentTableName" vsli:raw="The name of the &lt;see cref=&quot;T:System.Data.DataTable&quot; /&gt; that is the parent table of the relation.">作为关系的父表的 <see cref="T:System.Data.DataTable" /> 的名称。</param>
      <param name="parentTableNamespace" vsli:raw="The name of the parent table namespace.">父表命名空间的名称。</param>
      <param name="childTableName" vsli:raw="The name of the &lt;see cref=&quot;T:System.Data.DataTable&quot; /&gt; that is the child table of the relation.">作为关系的子表的 <see cref="T:System.Data.DataTable" /> 的名称。</param>
      <param name="childTableNamespace" vsli:raw="The name of the child table namespace.">子表命名空间的名称。</param>
      <param name="parentColumnNames" vsli:raw="An array of &lt;see cref=&quot;T:System.Data.DataColumn&quot; /&gt; object names in the parent &lt;see cref=&quot;T:System.Data.DataTable&quot; /&gt; of the relation.">关系的父级 <see cref="T:System.Data.DataTable" /> 中的 <see cref="T:System.Data.DataColumn" /> 对象名称的数组。</param>
      <param name="childColumnNames" vsli:raw="An array of &lt;see cref=&quot;T:System.Data.DataColumn&quot; /&gt; object names in the child &lt;see cref=&quot;T:System.Data.DataTable&quot; /&gt; of the relation.">关系的子级 <see cref="T:System.Data.DataColumn" /> 中的 <see cref="T:System.Data.DataTable" /> 对象名称的数组。</param>
      <param name="nested" vsli:raw="A value that indicates whether relationships are nested.">一个指示是否嵌套关系的值。</param>
    </member>
    <member name="M:System.Data.DataRelation.#ctor(System.String,System.String,System.String,System.String[],System.String[],System.Boolean)">
      <summary vsli:raw="This constructor is provided for design time support in the Visual Studio environment.">此构造函数在 Visual Studio 环境中提供设计时支持。</summary>
      <param name="relationName" vsli:raw="The name of the relation. If &lt;see langword=&quot;null&quot; /&gt; or an empty string (&quot;&quot;), a default name will be given when the created object is added to the &lt;see cref=&quot;T:System.Data.DataRelationCollection&quot; /&gt;.">关系的名称。 如果为 <see langword="null" /> 或空字符串 ("")，则当创建的对象添加到 <see cref="T:System.Data.DataRelationCollection" /> 时，将提供一个默认名称。</param>
      <param name="parentTableName" vsli:raw="The name of the &lt;see cref=&quot;T:System.Data.DataTable&quot; /&gt; that is the parent table of the relation.">作为关系的父表的 <see cref="T:System.Data.DataTable" /> 的名称。</param>
      <param name="childTableName" vsli:raw="The name of the &lt;see cref=&quot;T:System.Data.DataTable&quot; /&gt; that is the child table of the relation.">作为关系的子表的 <see cref="T:System.Data.DataTable" /> 的名称。</param>
      <param name="parentColumnNames" vsli:raw="An array of &lt;see cref=&quot;T:System.Data.DataColumn&quot; /&gt; object names in the parent &lt;see cref=&quot;T:System.Data.DataTable&quot; /&gt; of the relation.">关系的父级 <see cref="T:System.Data.DataTable" /> 中的 <see cref="T:System.Data.DataColumn" /> 对象名称的数组。</param>
      <param name="childColumnNames" vsli:raw="An array of &lt;see cref=&quot;T:System.Data.DataColumn&quot; /&gt; object names in the child &lt;see cref=&quot;T:System.Data.DataTable&quot; /&gt; of the relation.">关系的子级 <see cref="T:System.Data.DataColumn" /> 中的 <see cref="T:System.Data.DataTable" /> 对象名称的数组。</param>
      <param name="nested" vsli:raw="A value that indicates whether relationships are nested.">一个指示是否嵌套关系的值。</param>
    </member>
    <member name="M:System.Data.DataRelation.CheckStateForProperty">
      <summary vsli:raw="This method supports .NET infrastructure and is not intended to be used directly from your code.">此方法支持 .NET Framework 基础结构，但不适合直接在代码中使用。</summary>
      <exception cref="T:System.Data.DataException" vsli:raw="The parent and child tables belong to different &lt;see cref=&quot;T:System.Data.DataSet&quot; /&gt; objects.  &#xA;  &#xA; -Or-  &#xA;  &#xA; One or more pairs of parent and child &lt;see cref=&quot;T:System.Data.DataColumn&quot; /&gt; objects have mismatched data types.  &#xA;  &#xA; -Or-  &#xA;  &#xA; The parent and child &lt;see cref=&quot;T:System.Data.DataColumn&quot; /&gt; objects are identical.">父表和子表属于不同的 <see cref="T:System.Data.DataSet" /> 对象。  
  
-或者- 
一对或多对父级和子级 <see cref="T:System.Data.DataColumn" /> 对象具有不匹配的数据类型。  
  
-或者- 
父级和子级 <see cref="T:System.Data.DataColumn" /> 对象相同。</exception>
    </member>
    <member name="M:System.Data.DataRelation.OnPropertyChanging(System.ComponentModel.PropertyChangedEventArgs)">
      <summary vsli:raw="This member supports .NET infrastructure and is not intended to be used directly from your code.">此成员支持 .NET Framework 结构，不能在代码中直接使用。</summary>
      <param name="pcevent" vsli:raw="Parameter reference.">参数引用。</param>
    </member>
    <member name="M:System.Data.DataRelation.RaisePropertyChanging(System.String)">
      <summary vsli:raw="This member supports .NET infrastructure and is not intended to be used directly from your code.">此成员支持 .NET Framework 结构，不能在代码中直接使用。</summary>
      <param name="name" vsli:raw="Parameter reference.">参数引用。</param>
    </member>
    <member name="M:System.Data.DataRelation.ToString">
      <summary vsli:raw="Gets the &lt;see cref=&quot;P:System.Data.DataRelation.RelationName&quot; /&gt;, if one exists.">获取 <see cref="P:System.Data.DataRelation.RelationName" />（如果存在）。</summary>
      <returns vsli:raw="The value of the &lt;see cref=&quot;P:System.Data.DataRelation.RelationName&quot; /&gt; property.">
        <see cref="P:System.Data.DataRelation.RelationName" /> 属性的值。</returns>
    </member>
    <member name="P:System.Data.DataRelation.ChildColumns">
      <summary vsli:raw="Gets the child &lt;see cref=&quot;T:System.Data.DataColumn&quot; /&gt; objects of this relation.">获取此关系的子级 <see cref="T:System.Data.DataColumn" /> 对象。</summary>
      <returns vsli:raw="An array of &lt;see cref=&quot;T:System.Data.DataColumn&quot; /&gt; objects.">一个 <see cref="T:System.Data.DataColumn" /> 对象数组。</returns>
    </member>
    <member name="P:System.Data.DataRelation.ChildKeyConstraint">
      <summary vsli:raw="Gets the &lt;see cref=&quot;T:System.Data.ForeignKeyConstraint&quot; /&gt; for the relation.">获取关系的 <see cref="T:System.Data.ForeignKeyConstraint" />。</summary>
      <returns vsli:raw="A &lt;see langword=&quot;ForeignKeyConstraint&quot; /&gt;.">
        <see langword="ForeignKeyConstraint" />。</returns>
    </member>
    <member name="P:System.Data.DataRelation.ChildTable">
      <summary vsli:raw="Gets the child table of this relation.">获取此关系的子表。</summary>
      <returns vsli:raw="A &lt;see cref=&quot;T:System.Data.DataTable&quot; /&gt; that is the child table of the relation.">一个 <see cref="T:System.Data.DataTable" />，它是关系的子表。</returns>
    </member>
    <member name="P:System.Data.DataRelation.DataSet">
      <summary vsli:raw="Gets the &lt;see cref=&quot;T:System.Data.DataSet&quot; /&gt; to which the &lt;see cref=&quot;T:System.Data.DataRelation&quot; /&gt; belongs.">获取 <see cref="T:System.Data.DataRelation" /> 所属的 <see cref="T:System.Data.DataSet" />。</summary>
      <returns vsli:raw="A &lt;see cref=&quot;T:System.Data.DataSet&quot; /&gt; to which the &lt;see cref=&quot;T:System.Data.DataRelation&quot; /&gt; belongs.">
        <see cref="T:System.Data.DataSet" /> 所属的 <see cref="T:System.Data.DataRelation" />。</returns>
    </member>
    <member name="P:System.Data.DataRelation.ExtendedProperties">
      <summary vsli:raw="Gets the collection that stores customized properties.">获取存储自定义属性的集合。</summary>
      <returns vsli:raw="A &lt;see cref=&quot;T:System.Data.PropertyCollection&quot; /&gt; that contains customized properties.">一个包含自定义属性的 <see cref="T:System.Data.PropertyCollection" />。</returns>
    </member>
    <member name="P:System.Data.DataRelation.Nested">
      <summary vsli:raw="Gets or sets a value that indicates whether &lt;see cref=&quot;T:System.Data.DataRelation&quot; /&gt; objects are nested.">获取或设置一个指示是否嵌套 <see cref="T:System.Data.DataRelation" /> 对象的值。</summary>
      <returns vsli:raw="&lt;see langword=&quot;true&quot; /&gt;, if &lt;see cref=&quot;T:System.Data.DataRelation&quot; /&gt; objects are nested; otherwise, &lt;see langword=&quot;false&quot; /&gt;.">如果 <see cref="T:System.Data.DataRelation" /> 对象嵌套，则为 <see langword="true" />；否则为 <see langword="false" />。</returns>
    </member>
    <member name="P:System.Data.DataRelation.ParentColumns">
      <summary vsli:raw="Gets an array of &lt;see cref=&quot;T:System.Data.DataColumn&quot; /&gt; objects that are the parent columns of this &lt;see cref=&quot;T:System.Data.DataRelation&quot; /&gt;.">获取作为此 <see cref="T:System.Data.DataRelation" /> 的父列的 <see cref="T:System.Data.DataColumn" /> 对象的数组。</summary>
      <returns vsli:raw="An array of &lt;see cref=&quot;T:System.Data.DataColumn&quot; /&gt; objects that are the parent columns of this &lt;see cref=&quot;T:System.Data.DataRelation&quot; /&gt;.">作为此 <see cref="T:System.Data.DataColumn" /> 的父列 <see cref="T:System.Data.DataRelation" /> 对象的数组。</returns>
    </member>
    <member name="P:System.Data.DataRelation.ParentKeyConstraint">
      <summary vsli:raw="Gets the &lt;see cref=&quot;T:System.Data.UniqueConstraint&quot; /&gt; that guarantees that values in the parent column of a &lt;see cref=&quot;T:System.Data.DataRelation&quot; /&gt; are unique.">获取 <see cref="T:System.Data.UniqueConstraint" />，它确保 <see cref="T:System.Data.DataRelation" /> 的父列中的值是唯一的。</summary>
      <returns vsli:raw="A &lt;see cref=&quot;T:System.Data.UniqueConstraint&quot; /&gt; that makes sure that values in a parent column are unique.">一个 <see cref="T:System.Data.UniqueConstraint" />，它确保父列中的值是唯一的。</returns>
    </member>
    <member name="P:System.Data.DataRelation.ParentTable">
      <summary vsli:raw="Gets the parent &lt;see cref=&quot;T:System.Data.DataTable&quot; /&gt; of this &lt;see cref=&quot;T:System.Data.DataRelation&quot; /&gt;.">获取此 <see cref="T:System.Data.DataRelation" /> 的父级 <see cref="T:System.Data.DataTable" />。</summary>
      <returns vsli:raw="A &lt;see cref=&quot;T:System.Data.DataTable&quot; /&gt; that is the parent table of this relation.">一个 <see cref="T:System.Data.DataTable" />，它是此关系的父表。</returns>
    </member>
    <member name="P:System.Data.DataRelation.RelationName">
      <summary vsli:raw="Gets or sets the name used to retrieve a &lt;see cref=&quot;T:System.Data.DataRelation&quot; /&gt; from the &lt;see cref=&quot;T:System.Data.DataRelationCollection&quot; /&gt;.">获取或设置用于从 <see cref="T:System.Data.DataRelationCollection" /> 中检索 <see cref="T:System.Data.DataRelation" /> 的名称。</summary>
      <exception cref="T:System.ArgumentException" vsli:raw="&lt;see langword=&quot;null&quot; /&gt; or empty string (&quot;&quot;) was passed into a &lt;see cref=&quot;T:System.Data.DataColumn&quot; /&gt; that is a &lt;see cref=&quot;T:System.Data.DataRelation&quot; /&gt;.">将 <see langword="null" /> 或空字符串 ("") 传入作为 <see cref="T:System.Data.DataRelation" /> 的 <see cref="T:System.Data.DataColumn" />。</exception>
      <exception cref="T:System.Data.DuplicateNameException" vsli:raw="The &lt;see cref=&quot;T:System.Data.DataRelation&quot; /&gt; belongs to a collection that already contains a &lt;see cref=&quot;T:System.Data.DataRelation&quot; /&gt; with the same name.">
        <see cref="T:System.Data.DataRelation" /> 属于一个集合，该集合已经包含具有相同名称的 <see cref="T:System.Data.DataRelation" />。</exception>
      <returns vsli:raw="The name of the a &lt;see cref=&quot;T:System.Data.DataRelation&quot; /&gt;.">
        <see cref="T:System.Data.DataRelation" /> 的名称。</returns>
    </member>
    <member name="T:System.Data.DataRelationCollection">
      <summary vsli:raw="Represents the collection of &lt;see cref=&quot;T:System.Data.DataRelation&quot; /&gt; objects for this &lt;see cref=&quot;T:System.Data.DataSet&quot; /&gt;.">表示此 <see cref="T:System.Data.DataRelation" /> 的 <see cref="T:System.Data.DataSet" /> 对象的集合。</summary>
    </member>
    <member name="E:System.Data.DataRelationCollection.CollectionChanged">
      <summary vsli:raw="Occurs when the collection has changed.">在集合更改后发生。</summary>
    </member>
    <member name="M:System.Data.DataRelationCollection.#ctor">
      <summary vsli:raw="Initializes a new instance of the &lt;see cref=&quot;T:System.Data.DataRelationCollection&quot; /&gt; class.">初始化 <see cref="T:System.Data.DataRelationCollection" /> 类的新实例。</summary>
    </member>
    <member name="M:System.Data.DataRelationCollection.Add(System.Data.DataColumn,System.Data.DataColumn)">
      <summary vsli:raw="Creates a &lt;see cref=&quot;T:System.Data.DataRelation&quot; /&gt; with a specified parent and child column, and adds it to the collection.">用指定的父列和子列创建 <see cref="T:System.Data.DataRelation" />，并将其添加到集合中。</summary>
      <param name="parentColumn" vsli:raw="The parent column of the relation.">该关系的父列。</param>
      <param name="childColumn" vsli:raw="The child column of the relation.">该关系的子列。</param>
      <returns vsli:raw="The created relation.">创建的关系。</returns>
    </member>
    <member name="M:System.Data.DataRelationCollection.Add(System.Data.DataColumn[],System.Data.DataColumn[])">
      <summary vsli:raw="Creates a &lt;see cref=&quot;T:System.Data.DataRelation&quot; /&gt; with the specified parent and child columns, and adds it to the collection.">用指定的父列和子列创建 <see cref="T:System.Data.DataRelation" />，并将其添加到集合中。</summary>
      <param name="parentColumns" vsli:raw="The parent columns of the relation.">该关系的父列。</param>
      <param name="childColumns" vsli:raw="The child columns of the relation.">该关系的子列。</param>
      <exception cref="T:System.ArgumentNullException" vsli:raw="The &lt;paramref name=&quot;relation&quot; /&gt; argument is a null value.">
        <paramref name="relation" /> 参数为空值。</exception>
      <exception cref="T:System.ArgumentException" vsli:raw="The relation already belongs to this collection, or it belongs to another collection.">该关系已经属于此集合，或者它属于另一个集合。</exception>
      <exception cref="T:System.Data.DuplicateNameException" vsli:raw="The collection already has a relation with the same name. (The comparison is not case sensitive.)">集合中已存在同名关系。 （该比较不区分大小写。）</exception>
      <exception cref="T:System.Data.InvalidConstraintException" vsli:raw="The relation has entered an invalid state since it was created.">该关系在创建后进入了无效的状态。</exception>
      <returns vsli:raw="The created relation.">创建的关系。</returns>
    </member>
    <member name="M:System.Data.DataRelationCollection.Add(System.Data.DataRelation)">
      <summary vsli:raw="Adds a &lt;see cref=&quot;T:System.Data.DataRelation&quot; /&gt; to the &lt;see cref=&quot;T:System.Data.DataRelationCollection&quot; /&gt;.">向 <see cref="T:System.Data.DataRelation" /> 中添加一个 <see cref="T:System.Data.DataRelationCollection" />。</summary>
      <param name="relation" vsli:raw="The &lt;see langword=&quot;DataRelation&quot; /&gt; to add to the collection.">要添加到集合中的 <see langword="DataRelation" />。</param>
      <exception cref="T:System.ArgumentNullException" vsli:raw="The &lt;paramref name=&quot;relation&quot; /&gt; parameter is a null value.">
        <paramref name="relation" /> 参数为空值。</exception>
      <exception cref="T:System.ArgumentException" vsli:raw="The relation already belongs to this collection, or it belongs to another collection.">该关系已经属于此集合，或者它属于另一个集合。</exception>
      <exception cref="T:System.Data.DuplicateNameException" vsli:raw="The collection already has a relation with the specified name. (The comparison is not case sensitive.)">集合中已经存在具有指定名称的关系。 （该比较不区分大小写。）</exception>
      <exception cref="T:System.Data.InvalidConstraintException" vsli:raw="The relation has entered an invalid state since it was created.">该关系在创建后进入了无效的状态。</exception>
    </member>
    <member name="M:System.Data.DataRelationCollection.Add(System.String,System.Data.DataColumn,System.Data.DataColumn)">
      <summary vsli:raw="Creates a &lt;see cref=&quot;T:System.Data.DataRelation&quot; /&gt; with the specified name, and parent and child columns, and adds it to the collection.">用指定名称以及父列和子列创建 <see cref="T:System.Data.DataRelation" />，并将其添加到集合。</summary>
      <param name="name" vsli:raw="The name of the relation.">关系的名称。</param>
      <param name="parentColumn" vsli:raw="The parent column of the relation.">该关系的父列。</param>
      <param name="childColumn" vsli:raw="The child column of the relation.">该关系的子列。</param>
      <returns vsli:raw="The created relation.">创建的关系。</returns>
    </member>
    <member name="M:System.Data.DataRelationCollection.Add(System.String,System.Data.DataColumn,System.Data.DataColumn,System.Boolean)">
      <summary vsli:raw="Creates a &lt;see cref=&quot;T:System.Data.DataRelation&quot; /&gt; with the specified name, parent and child columns, with optional constraints according to the value of the &lt;paramref name=&quot;createConstraints&quot; /&gt; parameter, and adds it to the collection.">用指定的名称、父列和子列，以及根据 <paramref name="createConstraints" /> 参数的值而定的可选约束创建 <see cref="T:System.Data.DataRelation" />，并将其添加到集合中。</summary>
      <param name="name" vsli:raw="The name of the relation.">关系的名称。</param>
      <param name="parentColumn" vsli:raw="The parent column of the relation.">该关系的父列。</param>
      <param name="childColumn" vsli:raw="The child column of the relation.">该关系的子列。</param>
      <param name="createConstraints" vsli:raw="&lt;see langword=&quot;true&quot; /&gt; to create constraints; otherwise &lt;see langword=&quot;false&quot; /&gt;. (The default is &lt;see langword=&quot;true&quot; /&gt;).">如果创建约束，则为 <see langword="true" />；否则为 <see langword="false" />。 （默认值为 <see langword="true" />）。</param>
      <returns vsli:raw="The created relation.">创建的关系。</returns>
    </member>
    <member name="M:System.Data.DataRelationCollection.Add(System.String,System.Data.DataColumn[],System.Data.DataColumn[])">
      <summary vsli:raw="Creates a &lt;see cref=&quot;T:System.Data.DataRelation&quot; /&gt; with the specified name and arrays of parent and child columns, and adds it to the collection.">使用父列和子列数组创建一个具有指定名称的 <see cref="T:System.Data.DataRelation" />，并将其添加到集合中。</summary>
      <param name="name" vsli:raw="The name of the &lt;see langword=&quot;DataRelation&quot; /&gt; to create.">要创建的 <see langword="DataRelation" /> 的名称。</param>
      <param name="parentColumns" vsli:raw="An array of parent &lt;see cref=&quot;T:System.Data.DataColumn&quot; /&gt; objects.">父级 <see cref="T:System.Data.DataColumn" /> 对象的数组。</param>
      <param name="childColumns" vsli:raw="An array of child &lt;see langword=&quot;DataColumn&quot; /&gt; objects.">子级 <see langword="DataColumn" /> 对象的数组。</param>
      <exception cref="T:System.ArgumentNullException" vsli:raw="The relation name is a null value.">该关系名称为空值。</exception>
      <exception cref="T:System.ArgumentException" vsli:raw="The relation already belongs to this collection, or it belongs to another collection.">该关系已经属于此集合，或者它属于另一个集合。</exception>
      <exception cref="T:System.Data.DuplicateNameException" vsli:raw="The collection already has a relation with the same name. (The comparison is not case sensitive.)">集合中已存在同名关系。 （该比较不区分大小写。）</exception>
      <exception cref="T:System.Data.InvalidConstraintException" vsli:raw="The relation has entered an invalid state since it was created.">该关系在创建后进入了无效的状态。</exception>
      <returns vsli:raw="The created &lt;see langword=&quot;DataRelation&quot; /&gt;.">创建的 <see langword="DataRelation" />。</returns>
    </member>
    <member name="M:System.Data.DataRelationCollection.Add(System.String,System.Data.DataColumn[],System.Data.DataColumn[],System.Boolean)">
      <summary vsli:raw="Creates a &lt;see cref=&quot;T:System.Data.DataRelation&quot; /&gt; with the specified name, arrays of parent and child columns, and value specifying whether to create a constraint, and adds it to the collection.">用指定的名称、父列和子列的数组以及指定是否创建约束的值，创建 <see cref="T:System.Data.DataRelation" />，并将其添加到集合。</summary>
      <param name="name" vsli:raw="The name of the &lt;see langword=&quot;DataRelation&quot; /&gt; to create.">要创建的 <see langword="DataRelation" /> 的名称。</param>
      <param name="parentColumns" vsli:raw="An array of parent &lt;see cref=&quot;T:System.Data.DataColumn&quot; /&gt; objects.">父级 <see cref="T:System.Data.DataColumn" /> 对象的数组。</param>
      <param name="childColumns" vsli:raw="An array of child &lt;see langword=&quot;DataColumn&quot; /&gt; objects.">子级 <see langword="DataColumn" /> 对象的数组。</param>
      <param name="createConstraints" vsli:raw="&lt;see langword=&quot;true&quot; /&gt; to create a constraint; otherwise &lt;see langword=&quot;false&quot; /&gt;.">若要创建约束，则为 <see langword="true" />；否则为 <see langword="false" />。</param>
      <exception cref="T:System.ArgumentNullException" vsli:raw="The relation name is a null value.">该关系名称为空值。</exception>
      <exception cref="T:System.ArgumentException" vsli:raw="The relation already belongs to this collection, or it belongs to another collection.">该关系已经属于此集合，或者它属于另一个集合。</exception>
      <exception cref="T:System.Data.DuplicateNameException" vsli:raw="The collection already has a relation with the same name. (The comparison is not case sensitive.)">集合中已存在同名关系。 （该比较不区分大小写。）</exception>
      <exception cref="T:System.Data.InvalidConstraintException" vsli:raw="The relation has entered an invalid state since it was created.">该关系在创建后进入了无效的状态。</exception>
      <returns vsli:raw="The created relation.">创建的关系。</returns>
    </member>
    <member name="M:System.Data.DataRelationCollection.AddCore(System.Data.DataRelation)">
      <summary vsli:raw="Performs verification on the table.">对表执行验证。</summary>
      <param name="relation" vsli:raw="The relation to check.">要检查的关系。</param>
      <exception cref="T:System.ArgumentNullException" vsli:raw="The relation is null.">关系为空。</exception>
      <exception cref="T:System.ArgumentException" vsli:raw="The relation already belongs to this collection, or it belongs to another collection.">该关系已经属于此集合，或者它属于另一个集合。</exception>
      <exception cref="T:System.Data.DuplicateNameException" vsli:raw="The collection already has a relation with the same name. (The comparison is not case sensitive.)">集合中已存在同名关系。 （该比较不区分大小写。）</exception>
    </member>
    <member name="M:System.Data.DataRelationCollection.AddRange(System.Data.DataRelation[])">
      <summary vsli:raw="Copies the elements of the specified &lt;see cref=&quot;T:System.Data.DataRelation&quot; /&gt; array to the end of the collection.">将指定的 <see cref="T:System.Data.DataRelation" /> 数组的元素复制到集合末尾。</summary>
      <param name="relations" vsli:raw="The array of &lt;see cref=&quot;T:System.Data.DataRelation&quot; /&gt; objects to add to the collection.">要添加到集合中的 <see cref="T:System.Data.DataRelation" /> 对象的数组。</param>
    </member>
    <member name="M:System.Data.DataRelationCollection.CanRemove(System.Data.DataRelation)">
      <summary vsli:raw="Verifies whether the specified &lt;see cref=&quot;T:System.Data.DataRelation&quot; /&gt; can be removed from the collection.">验证是否可以将指定的 <see cref="T:System.Data.DataRelation" /> 从集合中移除。</summary>
      <param name="relation" vsli:raw="The relation to perform the check against.">要对其执行检查的关系。</param>
      <returns vsli:raw="&lt;see langword=&quot;true&quot; /&gt; if the &lt;see cref=&quot;T:System.Data.DataRelation&quot; /&gt; can be removed; otherwise, &lt;see langword=&quot;false&quot; /&gt;.">如果可以移除 <see cref="T:System.Data.DataRelation" />，则为 <see langword="true" />；否则为 <see langword="false" />。</returns>
    </member>
    <member name="M:System.Data.DataRelationCollection.Clear">
      <summary vsli:raw="Clears the collection of any relations.">清除集合的所有关系。</summary>
    </member>
    <member name="M:System.Data.DataRelationCollection.Contains(System.String)">
      <summary vsli:raw="Verifies whether a &lt;see cref=&quot;T:System.Data.DataRelation&quot; /&gt; with the specific name (case insensitive) exists in the collection.">验证集合中是否存在具有特定名称（不区分大小写）的 <see cref="T:System.Data.DataRelation" />。</summary>
      <param name="name" vsli:raw="The name of the relation to find.">要查找的关系的名称。</param>
      <returns vsli:raw="&lt;see langword=&quot;true&quot; /&gt;, if a relation with the specified name exists; otherwise &lt;see langword=&quot;false&quot; /&gt;.">如果存在具有指定名称的关系，则为 <see langword="true" />；否则为 <see langword="false" />。</returns>
    </member>
    <member name="M:System.Data.DataRelationCollection.CopyTo(System.Data.DataRelation[],System.Int32)">
      <summary vsli:raw="Copies the collection of &lt;see cref=&quot;T:System.Data.DataRelation&quot; /&gt; objects starting at the specified index.">从指定的索引开始复制 <see cref="T:System.Data.DataRelation" /> 对象的集合。</summary>
      <param name="array" vsli:raw="The array of &lt;see cref=&quot;T:System.Data.DataRelation&quot; /&gt; objects to copy the collection to.">该集合要复制到的 <see cref="T:System.Data.DataRelation" /> 对象的数组。</param>
      <param name="index" vsli:raw="The index to start from.">从其开始的索引。</param>
    </member>
    <member name="M:System.Data.DataRelationCollection.GetDataSet">
      <summary vsli:raw="This method supports the .NET infrastructure and is not intended to be used directly from your code.">此方法支持 .NET Framework 基础结构，但不适合直接在代码中使用。</summary>
      <returns vsli:raw="The referenced DataSet.">引用的数据集。</returns>
    </member>
    <member name="M:System.Data.DataRelationCollection.IndexOf(System.Data.DataRelation)">
      <summary vsli:raw="Gets the index of the specified &lt;see cref=&quot;T:System.Data.DataRelation&quot; /&gt; object.">获取指定 <see cref="T:System.Data.DataRelation" /> 对象的索引。</summary>
      <param name="relation" vsli:raw="The relation to search for.">要搜索的关系。</param>
      <returns vsli:raw="The 0-based index of the relation, or -1 if the relation is not found in the collection.">该关系的从 0 开始的索引；或者如果在该集合中找不到该关系，则为 -1。</returns>
    </member>
    <member name="M:System.Data.DataRelationCollection.IndexOf(System.String)">
      <summary vsli:raw="Gets the index of the &lt;see cref=&quot;T:System.Data.DataRelation&quot; /&gt; specified by name.">获取按名称指定的 <see cref="T:System.Data.DataRelation" /> 的索引。</summary>
      <param name="relationName" vsli:raw="The name of the relation to find.">要查找的关系的名称。</param>
      <returns vsli:raw="The zero-based index of the relation with the specified name, or -1 if the relation does not exist in the collection.">具有指定名称的关系的从零开始的索引；或者如果集合中不存在该关系，则为 -1。</returns>
    </member>
    <member name="M:System.Data.DataRelationCollection.OnCollectionChanged(System.ComponentModel.CollectionChangeEventArgs)">
      <summary vsli:raw="Raises the &lt;see cref=&quot;E:System.Data.DataRelationCollection.CollectionChanged&quot; /&gt; event.">引发 <see cref="E:System.Data.DataRelationCollection.CollectionChanged" /> 事件。</summary>
      <param name="ccevent" vsli:raw="A &lt;see cref=&quot;T:System.ComponentModel.CollectionChangeEventArgs&quot; /&gt; that contains the event data.">包含事件数据的 <see cref="T:System.ComponentModel.CollectionChangeEventArgs" />。</param>
    </member>
    <member name="M:System.Data.DataRelationCollection.OnCollectionChanging(System.ComponentModel.CollectionChangeEventArgs)">
      <summary vsli:raw="Raises the &lt;see cref=&quot;E:System.Data.DataRelationCollection.CollectionChanged&quot; /&gt; event.">引发 <see cref="E:System.Data.DataRelationCollection.CollectionChanged" /> 事件。</summary>
      <param name="ccevent" vsli:raw="A &lt;see cref=&quot;T:System.ComponentModel.CollectionChangeEventArgs&quot; /&gt; that contains the event data.">包含事件数据的 <see cref="T:System.ComponentModel.CollectionChangeEventArgs" />。</param>
    </member>
    <member name="M:System.Data.DataRelationCollection.Remove(System.Data.DataRelation)">
      <summary vsli:raw="Removes the specified relation from the collection.">从集合中移除指定的关系。</summary>
      <param name="relation" vsli:raw="The relation to remove.">要移除的关系。</param>
      <exception cref="T:System.ArgumentNullException" vsli:raw="The relation is a null value.">关系为空值。</exception>
      <exception cref="T:System.ArgumentException" vsli:raw="The relation does not belong to the collection.">关系不属于该集合。</exception>
    </member>
    <member name="M:System.Data.DataRelationCollection.Remove(System.String)">
      <summary vsli:raw="Removes the relation with the specified name from the collection.">从集合中移除具有指定名称的关系。</summary>
      <param name="name" vsli:raw="The name of the relation to remove.">要移除的关系的名称。</param>
      <exception cref="T:System.IndexOutOfRangeException" vsli:raw="The collection does not have a relation with the specified name.">该集合中没有具有指定名称的关系。</exception>
    </member>
    <member name="M:System.Data.DataRelationCollection.RemoveAt(System.Int32)">
      <summary vsli:raw="Removes the relation at the specified index from the collection.">从集合中移除指定索引位置的关系。</summary>
      <param name="index" vsli:raw="The index of the relation to remove.">要移除的关系的索引。</param>
      <exception cref="T:System.ArgumentException" vsli:raw="The collection does not have a relation at the specified index.">该集合在指定的索引位置没有关系。</exception>
    </member>
    <member name="M:System.Data.DataRelationCollection.RemoveCore(System.Data.DataRelation)">
      <summary vsli:raw="Performs a verification on the specified &lt;see cref=&quot;T:System.Data.DataRelation&quot; /&gt; object.">对指定 <see cref="T:System.Data.DataRelation" /> 对象执行验证。</summary>
      <param name="relation" vsli:raw="The &lt;see langword=&quot;DataRelation&quot; /&gt; object to verify.">要验证的 <see langword="DataRelation" /> 对象。</param>
      <exception cref="T:System.ArgumentNullException" vsli:raw="The collection does not have a relation at the specified index.">该集合在指定的索引位置没有关系。</exception>
      <exception cref="T:System.ArgumentException" vsli:raw="The specified relation does not belong to this collection, or it belongs to another collection.">指定的关系不属于此集合，或者它属于另一个集合。</exception>
    </member>
    <member name="P:System.Data.DataRelationCollection.Item(System.Int32)">
      <summary vsli:raw="Gets the &lt;see cref=&quot;T:System.Data.DataRelation&quot; /&gt; object at the specified index.">获取位于指定索引位置的 <see cref="T:System.Data.DataRelation" /> 对象。</summary>
      <param name="index" vsli:raw="The zero-based index to find.">要查找的从零开始的索引。</param>
      <exception cref="T:System.IndexOutOfRangeException" vsli:raw="The index value is greater than the number of items in the collection.">索引值大于集合中的项目数。</exception>
      <returns vsli:raw="The &lt;see cref=&quot;T:System.Data.DataRelation&quot; /&gt;, or a null value if the specified &lt;see cref=&quot;T:System.Data.DataRelation&quot; /&gt; does not exist.">
        <see cref="T:System.Data.DataRelation" />，或者如果指定的 <see cref="T:System.Data.DataRelation" /> 不存在，则为空值。</returns>
    </member>
    <member name="P:System.Data.DataRelationCollection.Item(System.String)">
      <summary vsli:raw="Gets the &lt;see cref=&quot;T:System.Data.DataRelation&quot; /&gt; object specified by name.">获取按名称指定的 <see cref="T:System.Data.DataRelation" /> 对象。</summary>
      <param name="name" vsli:raw="The name of the relation to find.">要查找的关系的名称。</param>
      <returns vsli:raw="The named &lt;see cref=&quot;T:System.Data.DataRelation&quot; /&gt;, or a null value if the specified &lt;see cref=&quot;T:System.Data.DataRelation&quot; /&gt; does not exist.">命名的 <see cref="T:System.Data.DataRelation" />，或者如果指定的 <see cref="T:System.Data.DataRelation" /> 不存在，则为空值。</returns>
    </member>
    <member name="T:System.Data.DataRow">
      <summary vsli:raw="Represents a row of data in a &lt;see cref=&quot;T:System.Data.DataTable&quot; /&gt;.">表示 <see cref="T:System.Data.DataTable" /> 中的一行数据。</summary>
    </member>
    <member name="M:System.Data.DataRow.#ctor(System.Data.DataRowBuilder)">
      <summary vsli:raw="Initializes a new instance of the DataRow class using the specified builder. Only for internal usage.">初始化 DataRow 的新实例。 从生成器中构造行。 仅限内部使用。</summary>
      <param name="builder" vsli:raw="The builder that contains the table and record for the new row.">生成器</param>
    </member>
    <member name="M:System.Data.DataRow.AcceptChanges">
      <summary vsli:raw="Commits all the changes made to this row since the last time &lt;see cref=&quot;M:System.Data.DataRow.AcceptChanges&quot; /&gt; was called.">提交自上次调用 <see cref="M:System.Data.DataRow.AcceptChanges" /> 以来对该行进行的所有更改。</summary>
      <exception cref="T:System.Data.RowNotInTableException" vsli:raw="The row does not belong to the table.">此行不属于该表。</exception>
    </member>
    <member name="M:System.Data.DataRow.BeginEdit">
      <summary vsli:raw="Starts an edit operation on a &lt;see cref=&quot;T:System.Data.DataRow&quot; /&gt; object.">对 <see cref="T:System.Data.DataRow" /> 对象启动编辑操作。</summary>
      <exception cref="T:System.Data.InRowChangingEventException" vsli:raw="The method was called inside the &lt;see cref=&quot;E:System.Data.DataTable.RowChanging&quot; /&gt; event.">已在 <see cref="E:System.Data.DataTable.RowChanging" /> 事件中调用该方法。</exception>
      <exception cref="T:System.Data.DeletedRowInaccessibleException" vsli:raw="The method was called upon a deleted row.">对已删除的行调用该方法。</exception>
    </member>
    <member name="M:System.Data.DataRow.CancelEdit">
      <summary vsli:raw="Cancels the current edit on the row.">取消当前对该行进行的编辑。</summary>
      <exception cref="T:System.Data.InRowChangingEventException" vsli:raw="The method was called inside the &lt;see cref=&quot;E:System.Data.DataTable.RowChanging&quot; /&gt; event.">已在 <see cref="E:System.Data.DataTable.RowChanging" /> 事件中调用该方法。</exception>
    </member>
    <member name="M:System.Data.DataRow.ClearErrors">
      <summary vsli:raw="Clears the errors for the row. This includes the &lt;see cref=&quot;P:System.Data.DataRow.RowError&quot; /&gt; and errors set with &lt;see cref=&quot;M:System.Data.DataRow.SetColumnError(System.Int32,System.String)&quot; /&gt;.">清除该行的错误。 这包括 <see cref="P:System.Data.DataRow.RowError" /> 和 <see cref="M:System.Data.DataRow.SetColumnError(System.Int32,System.String)" /> 的错误设置。</summary>
    </member>
    <member name="M:System.Data.DataRow.Delete">
      <summary vsli:raw="Deletes the &lt;see cref=&quot;T:System.Data.DataRow&quot; /&gt;.">删除 <see cref="T:System.Data.DataRow" />。</summary>
      <exception cref="T:System.Data.DeletedRowInaccessibleException" vsli:raw="The &lt;see cref=&quot;T:System.Data.DataRow&quot; /&gt; has already been deleted.">已删除 <see cref="T:System.Data.DataRow" />。</exception>
    </member>
    <member name="M:System.Data.DataRow.EndEdit">
      <summary vsli:raw="Ends the edit occurring on the row.">终止该行的编辑。</summary>
      <exception cref="T:System.Data.InRowChangingEventException" vsli:raw="The method was called inside the &lt;see cref=&quot;E:System.Data.DataTable.RowChanging&quot; /&gt; event.">已在 <see cref="E:System.Data.DataTable.RowChanging" /> 事件中调用该方法。</exception>
      <exception cref="T:System.Data.ConstraintException" vsli:raw="The edit broke a constraint.">该编辑操作破坏了约束。</exception>
      <exception cref="T:System.Data.ReadOnlyException" vsli:raw="The row belongs to the table and the edit tried to change the value of a read-only column.">此行属于该表，该编辑尝试更改只读列的值。</exception>
      <exception cref="T:System.Data.NoNullAllowedException" vsli:raw="The edit tried to put a null value into a column where &lt;see cref=&quot;P:System.Data.DataColumn.AllowDBNull&quot; /&gt; is false.">该编辑操作尝试将 null 值放在 <see cref="P:System.Data.DataColumn.AllowDBNull" /> 为 False 的列中。</exception>
    </member>
    <member name="M:System.Data.DataRow.GetChildRows(System.Data.DataRelation)">
      <summary vsli:raw="Gets the child rows of this &lt;see cref=&quot;T:System.Data.DataRow&quot; /&gt; using the specified &lt;see cref=&quot;T:System.Data.DataRelation&quot; /&gt;.">使用指定的 <see cref="T:System.Data.DataRelation" /> 获取此 <see cref="T:System.Data.DataRow" /> 的子行。</summary>
      <param name="relation" vsli:raw="The &lt;see cref=&quot;T:System.Data.DataRelation&quot; /&gt; to use.">要使用的 <see cref="T:System.Data.DataRelation" />。</param>
      <exception cref="T:System.ArgumentException" vsli:raw="The relation and row do not belong to the same table.">关系和行不属于同一个表。</exception>
      <exception cref="T:System.ArgumentNullException" vsli:raw="The relation is &lt;see langword=&quot;null&quot; /&gt;.">关系为 <see langword="null" />。</exception>
      <exception cref="T:System.Data.RowNotInTableException" vsli:raw="The row does not belong to the table.">此行不属于该表。</exception>
      <exception cref="T:System.Data.VersionNotFoundException" vsli:raw="The row does not have this version of data.">该行没有此版本的数据。</exception>
      <returns vsli:raw="An array of &lt;see cref=&quot;T:System.Data.DataRow&quot; /&gt; objects or an array of length zero.">一个 <see cref="T:System.Data.DataRow" /> 对象数组，或长度为零的数组。</returns>
    </member>
    <member name="M:System.Data.DataRow.GetChildRows(System.Data.DataRelation,System.Data.DataRowVersion)">
      <summary vsli:raw="Gets the child rows of a &lt;see cref=&quot;T:System.Data.DataRow&quot; /&gt; using the specified &lt;see cref=&quot;T:System.Data.DataRelation&quot; /&gt;, and &lt;see cref=&quot;T:System.Data.DataRowVersion&quot; /&gt;.">使用指定的 <see cref="T:System.Data.DataRelation" /> 和 <see cref="T:System.Data.DataRowVersion" /> 获取 <see cref="T:System.Data.DataRow" /> 的子行。</summary>
      <param name="relation" vsli:raw="The &lt;see cref=&quot;T:System.Data.DataRelation&quot; /&gt; to use.">要使用的 <see cref="T:System.Data.DataRelation" />。</param>
      <param name="version" vsli:raw="One of the &lt;see cref=&quot;T:System.Data.DataRowVersion&quot; /&gt; values specifying the version of the data to get. Possible values are &lt;see langword=&quot;Default&quot; /&gt;, &lt;see langword=&quot;Original&quot; /&gt;, &lt;see langword=&quot;Current&quot; /&gt;, and &lt;see langword=&quot;Proposed&quot; /&gt;.">
        <see cref="T:System.Data.DataRowVersion" /> 值之一，指定要获取的数据的版本。 可能值为 <see langword="Default" />、<see langword="Original" />、<see langword="Current" /> 和 <see langword="Proposed" />。</param>
      <exception cref="T:System.ArgumentException" vsli:raw="The relation and row do not belong to the same table.">关系和行不属于同一个表。</exception>
      <exception cref="T:System.ArgumentNullException" vsli:raw="The &lt;paramref name=&quot;relation&quot; /&gt; is &lt;see langword=&quot;null&quot; /&gt;.">
        <paramref name="relation" /> 为 <see langword="null" />。</exception>
      <exception cref="T:System.Data.RowNotInTableException" vsli:raw="The row does not belong to the table.">此行不属于该表。</exception>
      <exception cref="T:System.Data.VersionNotFoundException" vsli:raw="The row does not have the requested &lt;see cref=&quot;T:System.Data.DataRowVersion&quot; /&gt;.">该行没有请求的 <see cref="T:System.Data.DataRowVersion" />。</exception>
      <returns vsli:raw="An array of &lt;see cref=&quot;T:System.Data.DataRow&quot; /&gt; objects.">一个 <see cref="T:System.Data.DataRow" /> 对象数组。</returns>
    </member>
    <member name="M:System.Data.DataRow.GetChildRows(System.String)">
      <summary vsli:raw="Gets the child rows of a &lt;see cref=&quot;T:System.Data.DataRow&quot; /&gt; using the specified &lt;see cref=&quot;P:System.Data.DataRelation.RelationName&quot; /&gt; of a &lt;see cref=&quot;T:System.Data.DataRelation&quot; /&gt;.">使用 <see cref="T:System.Data.DataRelation" /> 的指定 <see cref="P:System.Data.DataRelation.RelationName" /> 获取 <see cref="T:System.Data.DataRow" /> 的子行。</summary>
      <param name="relationName" vsli:raw="The &lt;see cref=&quot;P:System.Data.DataRelation.RelationName&quot; /&gt; of the &lt;see cref=&quot;T:System.Data.DataRelation&quot; /&gt; to use.">要使用的 <see cref="T:System.Data.DataRelation" /> 的 <see cref="P:System.Data.DataRelation.RelationName" />。</param>
      <exception cref="T:System.ArgumentException" vsli:raw="The relation and row do not belong to the same table.">关系和行不属于同一个表。</exception>
      <exception cref="T:System.Data.RowNotInTableException" vsli:raw="The row does not belong to the table.">此行不属于该表。</exception>
      <returns vsli:raw="An array of &lt;see cref=&quot;T:System.Data.DataRow&quot; /&gt; objects or an array of length zero.">一个 <see cref="T:System.Data.DataRow" /> 对象数组，或长度为零的数组。</returns>
    </member>
    <member name="M:System.Data.DataRow.GetChildRows(System.String,System.Data.DataRowVersion)">
      <summary vsli:raw="Gets the child rows of a &lt;see cref=&quot;T:System.Data.DataRow&quot; /&gt; using the specified &lt;see cref=&quot;P:System.Data.DataRelation.RelationName&quot; /&gt; of a &lt;see cref=&quot;T:System.Data.DataRelation&quot; /&gt;, and &lt;see cref=&quot;T:System.Data.DataRowVersion&quot; /&gt;.">使用 <see cref="T:System.Data.DataRelation" /> 的指定 <see cref="P:System.Data.DataRelation.RelationName" /> 和 <see cref="T:System.Data.DataRowVersion" />获取 <see cref="T:System.Data.DataRow" /> 的子行。</summary>
      <param name="relationName" vsli:raw="The &lt;see cref=&quot;P:System.Data.DataRelation.RelationName&quot; /&gt; of the &lt;see cref=&quot;T:System.Data.DataRelation&quot; /&gt; to use.">要使用的 <see cref="T:System.Data.DataRelation" /> 的 <see cref="P:System.Data.DataRelation.RelationName" />。</param>
      <param name="version" vsli:raw="One of the &lt;see cref=&quot;T:System.Data.DataRowVersion&quot; /&gt; values specifying the version of the data to get. Possible values are &lt;see langword=&quot;Default&quot; /&gt;, &lt;see langword=&quot;Original&quot; /&gt;, &lt;see langword=&quot;Current&quot; /&gt;, and &lt;see langword=&quot;Proposed&quot; /&gt;.">
        <see cref="T:System.Data.DataRowVersion" /> 值之一，指定要获取的数据的版本。 可能值为 <see langword="Default" />、<see langword="Original" />、<see langword="Current" /> 和 <see langword="Proposed" />。</param>
      <exception cref="T:System.ArgumentException" vsli:raw="The relation and row do not belong to the same table.">关系和行不属于同一个表。</exception>
      <exception cref="T:System.ArgumentNullException" vsli:raw="The &lt;paramref name=&quot;relation&quot; /&gt; is &lt;see langword=&quot;null&quot; /&gt;.">
        <paramref name="relation" /> 为 <see langword="null" />。</exception>
      <exception cref="T:System.Data.RowNotInTableException" vsli:raw="The row does not belong to the table.">此行不属于该表。</exception>
      <exception cref="T:System.Data.VersionNotFoundException" vsli:raw="The row does not have the requested &lt;see cref=&quot;T:System.Data.DataRowVersion&quot; /&gt;.">该行没有请求的 <see cref="T:System.Data.DataRowVersion" />。</exception>
      <returns vsli:raw="An array of &lt;see cref=&quot;T:System.Data.DataRow&quot; /&gt; objects or an array of length zero.">一个 <see cref="T:System.Data.DataRow" /> 对象数组，或长度为零的数组。</returns>
    </member>
    <member name="M:System.Data.DataRow.GetColumnError(System.Data.DataColumn)">
      <summary vsli:raw="Gets the error description of the specified &lt;see cref=&quot;T:System.Data.DataColumn&quot; /&gt;.">获取指定 <see cref="T:System.Data.DataColumn" /> 的错误说明。</summary>
      <param name="column" vsli:raw="A &lt;see cref=&quot;T:System.Data.DataColumn&quot; /&gt;.">
        <see cref="T:System.Data.DataColumn" />。</param>
      <returns vsli:raw="The text of the error description.">错误说明的文本。</returns>
    </member>
    <member name="M:System.Data.DataRow.GetColumnError(System.Int32)">
      <summary vsli:raw="Gets the error description for the column specified by index.">获取由索引指定的列的错误说明。</summary>
      <param name="columnIndex" vsli:raw="The zero-based index of the column.">列的从零开始的索引。</param>
      <exception cref="T:System.IndexOutOfRangeException" vsli:raw="The &lt;paramref name=&quot;columnIndex&quot; /&gt; argument is out of range.">
        <paramref name="columnIndex" /> 参数超出范围。</exception>
      <returns vsli:raw="The text of the error description.">错误说明的文本。</returns>
    </member>
    <member name="M:System.Data.DataRow.GetColumnError(System.String)">
      <summary vsli:raw="Gets the error description for a column, specified by name.">获取由名称指定的列的错误说明。</summary>
      <param name="columnName" vsli:raw="The name of the column.">列的名称。</param>
      <returns vsli:raw="The text of the error description.">错误说明的文本。</returns>
    </member>
    <member name="M:System.Data.DataRow.GetColumnsInError">
      <summary vsli:raw="Gets an array of columns that have errors.">获取由包含错误的列组成的数组。</summary>
      <returns vsli:raw="An array of &lt;see cref=&quot;T:System.Data.DataColumn&quot; /&gt; objects that contain errors.">包含错误的 <see cref="T:System.Data.DataColumn" /> 对象组成的数组。</returns>
    </member>
    <member name="M:System.Data.DataRow.GetParentRow(System.Data.DataRelation)">
      <summary vsli:raw="Gets the parent row of a &lt;see cref=&quot;T:System.Data.DataRow&quot; /&gt; using the specified &lt;see cref=&quot;T:System.Data.DataRelation&quot; /&gt;.">使用指定的 <see cref="T:System.Data.DataRelation" /> 获取 <see cref="T:System.Data.DataRow" /> 的父行。</summary>
      <param name="relation" vsli:raw="The &lt;see cref=&quot;T:System.Data.DataRelation&quot; /&gt; to use.">要使用的 <see cref="T:System.Data.DataRelation" />。</param>
      <exception cref="T:System.ArgumentNullException" vsli:raw="The &lt;paramref name=&quot;relation&quot; /&gt; does not belong to the &lt;see cref=&quot;T:System.Data.DataTable&quot; /&gt;.  &#xA;  &#xA;-or-&#xA;&#xA; The row is &lt;see langword=&quot;null&quot; /&gt;.">
        <paramref name="relation" /> 不属于 <see cref="T:System.Data.DataTable" />。  
  
- 或 -

该行为 <see langword="null" />。</exception>
      <exception cref="T:System.Data.DataException" vsli:raw="A child row has multiple parents.">子行具有多个父行。</exception>
      <exception cref="T:System.Data.InvalidConstraintException" vsli:raw="This row does not belong to the child table of the &lt;see cref=&quot;T:System.Data.DataRelation&quot; /&gt; object.">此行不属于 <see cref="T:System.Data.DataRelation" /> 对象的子表。</exception>
      <exception cref="T:System.Data.RowNotInTableException" vsli:raw="The row does not belong to a table.">此行不属于表。</exception>
      <returns vsli:raw="The parent &lt;see cref=&quot;T:System.Data.DataRow&quot; /&gt; of the current row.">当前行的父 <see cref="T:System.Data.DataRow" />。</returns>
    </member>
    <member name="M:System.Data.DataRow.GetParentRow(System.Data.DataRelation,System.Data.DataRowVersion)">
      <summary vsli:raw="Gets the parent row of a &lt;see cref=&quot;T:System.Data.DataRow&quot; /&gt; using the specified &lt;see cref=&quot;T:System.Data.DataRelation&quot; /&gt;, and &lt;see cref=&quot;T:System.Data.DataRowVersion&quot; /&gt;.">使用指定的 <see cref="T:System.Data.DataRelation" /> 和 <see cref="T:System.Data.DataRowVersion" /> 获取 <see cref="T:System.Data.DataRow" /> 的父行。</summary>
      <param name="relation" vsli:raw="The &lt;see cref=&quot;T:System.Data.DataRelation&quot; /&gt; to use.">要使用的 <see cref="T:System.Data.DataRelation" />。</param>
      <param name="version" vsli:raw="One of the &lt;see cref=&quot;T:System.Data.DataRowVersion&quot; /&gt; values specifying the version of the data to get.">
        <see cref="T:System.Data.DataRowVersion" /> 值之一，指定要获取的数据的版本。</param>
      <exception cref="T:System.ArgumentNullException" vsli:raw="The row is &lt;see langword=&quot;null&quot; /&gt;.  &#xA;  &#xA;-or-&#xA;&#xA; The &lt;paramref name=&quot;relation&quot; /&gt; does not belong to this table's parent relations.">该行为 <see langword="null" />。  
  
- 或 -

<paramref name="relation" /> 不属于该表的父关系。</exception>
      <exception cref="T:System.Data.DataException" vsli:raw="A child row has multiple parents.">子行具有多个父行。</exception>
      <exception cref="T:System.Data.InvalidConstraintException" vsli:raw="The relation's child table is not the table the row belongs to.">此关系的子表不是该行所属的表。</exception>
      <exception cref="T:System.Data.RowNotInTableException" vsli:raw="The row does not belong to a table.">此行不属于表。</exception>
      <exception cref="T:System.Data.VersionNotFoundException" vsli:raw="The row does not have this version of data.">该行没有此版本的数据。</exception>
      <returns vsli:raw="The parent &lt;see cref=&quot;T:System.Data.DataRow&quot; /&gt; of the current row.">当前行的父 <see cref="T:System.Data.DataRow" />。</returns>
    </member>
    <member name="M:System.Data.DataRow.GetParentRow(System.String)">
      <summary vsli:raw="Gets the parent row of a &lt;see cref=&quot;T:System.Data.DataRow&quot; /&gt; using the specified &lt;see cref=&quot;P:System.Data.DataRelation.RelationName&quot; /&gt; of a &lt;see cref=&quot;T:System.Data.DataRelation&quot; /&gt;.">使用 <see cref="T:System.Data.DataRelation" /> 的指定 <see cref="P:System.Data.DataRelation.RelationName" /> 获取 <see cref="T:System.Data.DataRow" /> 的父行。</summary>
      <param name="relationName" vsli:raw="The &lt;see cref=&quot;P:System.Data.DataRelation.RelationName&quot; /&gt; of a &lt;see cref=&quot;T:System.Data.DataRelation&quot; /&gt;.">
        <see cref="T:System.Data.DataRelation" /> 的 <see cref="P:System.Data.DataRelation.RelationName" />。</param>
      <exception cref="T:System.ArgumentException" vsli:raw="The relation and row do not belong to the same table.">关系和行不属于同一个表。</exception>
      <exception cref="T:System.Data.DataException" vsli:raw="A child row has multiple parents.">子行具有多个父行。</exception>
      <exception cref="T:System.Data.RowNotInTableException" vsli:raw="The row does not belong to the table.">此行不属于该表。</exception>
      <returns vsli:raw="The parent &lt;see cref=&quot;T:System.Data.DataRow&quot; /&gt; of the current row.">当前行的父 <see cref="T:System.Data.DataRow" />。</returns>
    </member>
    <member name="M:System.Data.DataRow.GetParentRow(System.String,System.Data.DataRowVersion)">
      <summary vsli:raw="Gets the parent row of a &lt;see cref=&quot;T:System.Data.DataRow&quot; /&gt; using the specified &lt;see cref=&quot;P:System.Data.DataRelation.RelationName&quot; /&gt; of a &lt;see cref=&quot;T:System.Data.DataRelation&quot; /&gt;, and &lt;see cref=&quot;T:System.Data.DataRowVersion&quot; /&gt;.">使用 <see cref="T:System.Data.DataRelation" /> 的指定 <see cref="P:System.Data.DataRelation.RelationName" /> 和 <see cref="T:System.Data.DataRowVersion" /> 获取 <see cref="T:System.Data.DataRow" /> 的父行。</summary>
      <param name="relationName" vsli:raw="The &lt;see cref=&quot;P:System.Data.DataRelation.RelationName&quot; /&gt; of a &lt;see cref=&quot;T:System.Data.DataRelation&quot; /&gt;.">
        <see cref="T:System.Data.DataRelation" /> 的 <see cref="P:System.Data.DataRelation.RelationName" />。</param>
      <param name="version" vsli:raw="One of the &lt;see cref=&quot;T:System.Data.DataRowVersion&quot; /&gt; values.">
        <see cref="T:System.Data.DataRowVersion" /> 值之一。</param>
      <exception cref="T:System.ArgumentException" vsli:raw="The relation and row do not belong to the same table.">关系和行不属于同一个表。</exception>
      <exception cref="T:System.ArgumentNullException" vsli:raw="The &lt;paramref name=&quot;relation&quot; /&gt; is &lt;see langword=&quot;null&quot; /&gt;.">
        <paramref name="relation" /> 为 <see langword="null" />。</exception>
      <exception cref="T:System.Data.DataException" vsli:raw="A child row has multiple parents.">子行具有多个父行。</exception>
      <exception cref="T:System.Data.RowNotInTableException" vsli:raw="The row does not belong to the table.">此行不属于该表。</exception>
      <exception cref="T:System.Data.VersionNotFoundException" vsli:raw="The row does not have the requested &lt;see cref=&quot;T:System.Data.DataRowVersion&quot; /&gt;.">该行没有请求的 <see cref="T:System.Data.DataRowVersion" />。</exception>
      <returns vsli:raw="The parent &lt;see cref=&quot;T:System.Data.DataRow&quot; /&gt; of the current row.">当前行的父 <see cref="T:System.Data.DataRow" />。</returns>
    </member>
    <member name="M:System.Data.DataRow.GetParentRows(System.Data.DataRelation)">
      <summary vsli:raw="Gets the parent rows of a &lt;see cref=&quot;T:System.Data.DataRow&quot; /&gt; using the specified &lt;see cref=&quot;T:System.Data.DataRelation&quot; /&gt;.">使用指定的 <see cref="T:System.Data.DataRelation" /> 获取 <see cref="T:System.Data.DataRow" /> 的父行。</summary>
      <param name="relation" vsli:raw="The &lt;see cref=&quot;T:System.Data.DataRelation&quot; /&gt; to use.">要使用的 <see cref="T:System.Data.DataRelation" />。</param>
      <exception cref="T:System.ArgumentException" vsli:raw="The &lt;see cref=&quot;T:System.Data.DataRelation&quot; /&gt; does not belong to this row's &lt;see cref=&quot;T:System.Data.DataSet&quot; /&gt;.">
        <see cref="T:System.Data.DataRelation" /> 不属于此行的 <see cref="T:System.Data.DataSet" />。</exception>
      <exception cref="T:System.ArgumentNullException" vsli:raw="The row is &lt;see langword=&quot;null&quot; /&gt;.">该行为 <see langword="null" />。</exception>
      <exception cref="T:System.Data.InvalidConstraintException" vsli:raw="The relation's child table is not the table the row belongs to.">此关系的子表不是该行所属的表。</exception>
      <exception cref="T:System.Data.RowNotInTableException" vsli:raw="The row does not belong to a &lt;see cref=&quot;T:System.Data.DataTable&quot; /&gt;.">该行不属于 <see cref="T:System.Data.DataTable" />。</exception>
      <returns vsli:raw="An array of &lt;see cref=&quot;T:System.Data.DataRow&quot; /&gt; objects or an array of length zero.">一个 <see cref="T:System.Data.DataRow" /> 对象数组，或长度为零的数组。</returns>
    </member>
    <member name="M:System.Data.DataRow.GetParentRows(System.Data.DataRelation,System.Data.DataRowVersion)">
      <summary vsli:raw="Gets the parent rows of a &lt;see cref=&quot;T:System.Data.DataRow&quot; /&gt; using the specified &lt;see cref=&quot;T:System.Data.DataRelation&quot; /&gt;, and &lt;see cref=&quot;T:System.Data.DataRowVersion&quot; /&gt;.">使用指定的 <see cref="T:System.Data.DataRelation" /> 和 <see cref="T:System.Data.DataRowVersion" /> 获取 <see cref="T:System.Data.DataRow" /> 的父行。</summary>
      <param name="relation" vsli:raw="The &lt;see cref=&quot;T:System.Data.DataRelation&quot; /&gt; to use.">要使用的 <see cref="T:System.Data.DataRelation" />。</param>
      <param name="version" vsli:raw="One of the &lt;see cref=&quot;T:System.Data.DataRowVersion&quot; /&gt; values specifying the version of the data to get.">
        <see cref="T:System.Data.DataRowVersion" /> 值之一，指定要获取的数据的版本。</param>
      <exception cref="T:System.ArgumentException" vsli:raw="The &lt;see cref=&quot;T:System.Data.DataRelation&quot; /&gt; does not belong to this row's &lt;see cref=&quot;T:System.Data.DataSet&quot; /&gt;.">
        <see cref="T:System.Data.DataRelation" /> 不属于此行的 <see cref="T:System.Data.DataSet" />。</exception>
      <exception cref="T:System.ArgumentNullException" vsli:raw="The row is &lt;see langword=&quot;null&quot; /&gt;.">该行为 <see langword="null" />。</exception>
      <exception cref="T:System.Data.InvalidConstraintException" vsli:raw="The relation's child table is not the table the row belongs to.">此关系的子表不是该行所属的表。</exception>
      <exception cref="T:System.Data.RowNotInTableException" vsli:raw="The row does not belong to a &lt;see cref=&quot;T:System.Data.DataTable&quot; /&gt;.">该行不属于 <see cref="T:System.Data.DataTable" />。</exception>
      <exception cref="T:System.Data.VersionNotFoundException" vsli:raw="The row does not have the requested &lt;see cref=&quot;T:System.Data.DataRowVersion&quot; /&gt;.">该行没有请求的 <see cref="T:System.Data.DataRowVersion" />。</exception>
      <returns vsli:raw="An array of &lt;see cref=&quot;T:System.Data.DataRow&quot; /&gt; objects or an array of length zero.">一个 <see cref="T:System.Data.DataRow" /> 对象数组，或长度为零的数组。</returns>
    </member>
    <member name="M:System.Data.DataRow.GetParentRows(System.String)">
      <summary vsli:raw="Gets the parent rows of a &lt;see cref=&quot;T:System.Data.DataRow&quot; /&gt; using the specified &lt;see cref=&quot;P:System.Data.DataRelation.RelationName&quot; /&gt; of a &lt;see cref=&quot;T:System.Data.DataRelation&quot; /&gt;.">使用 <see cref="T:System.Data.DataRelation" /> 的指定 <see cref="P:System.Data.DataRelation.RelationName" /> 获取 <see cref="T:System.Data.DataRow" /> 的父行。</summary>
      <param name="relationName" vsli:raw="The &lt;see cref=&quot;P:System.Data.DataRelation.RelationName&quot; /&gt; of a &lt;see cref=&quot;T:System.Data.DataRelation&quot; /&gt;.">
        <see cref="T:System.Data.DataRelation" /> 的 <see cref="P:System.Data.DataRelation.RelationName" />。</param>
      <exception cref="T:System.ArgumentException" vsli:raw="The relation and row do not belong to the same table.">关系和行不属于同一个表。</exception>
      <exception cref="T:System.Data.RowNotInTableException" vsli:raw="The row does not belong to the table.">此行不属于该表。</exception>
      <returns vsli:raw="An array of &lt;see cref=&quot;T:System.Data.DataRow&quot; /&gt; objects or an array of length zero.">一个 <see cref="T:System.Data.DataRow" /> 对象数组，或长度为零的数组。</returns>
    </member>
    <member name="M:System.Data.DataRow.GetParentRows(System.String,System.Data.DataRowVersion)">
      <summary vsli:raw="Gets the parent rows of a &lt;see cref=&quot;T:System.Data.DataRow&quot; /&gt; using the specified &lt;see cref=&quot;P:System.Data.DataRelation.RelationName&quot; /&gt; of a &lt;see cref=&quot;T:System.Data.DataRelation&quot; /&gt;, and &lt;see cref=&quot;T:System.Data.DataRowVersion&quot; /&gt;.">使用 <see cref="T:System.Data.DataRelation" /> 的指定 <see cref="P:System.Data.DataRelation.RelationName" /> 和 <see cref="T:System.Data.DataRowVersion" /> 获取 <see cref="T:System.Data.DataRow" /> 的父行。</summary>
      <param name="relationName" vsli:raw="The &lt;see cref=&quot;P:System.Data.DataRelation.RelationName&quot; /&gt; of a &lt;see cref=&quot;T:System.Data.DataRelation&quot; /&gt;.">
        <see cref="T:System.Data.DataRelation" /> 的 <see cref="P:System.Data.DataRelation.RelationName" />。</param>
      <param name="version" vsli:raw="One of the &lt;see cref=&quot;T:System.Data.DataRowVersion&quot; /&gt; values specifying the version of the data to get. Possible values are &lt;see langword=&quot;Default&quot; /&gt;, &lt;see langword=&quot;Original&quot; /&gt;, &lt;see langword=&quot;Current&quot; /&gt;, and &lt;see langword=&quot;Proposed&quot; /&gt;.">
        <see cref="T:System.Data.DataRowVersion" /> 值之一，指定要获取的数据的版本。 可能值为 <see langword="Default" />、<see langword="Original" />、<see langword="Current" /> 和 <see langword="Proposed" />。</param>
      <exception cref="T:System.ArgumentException" vsli:raw="The relation and row do not belong to the same table.">关系和行不属于同一个表。</exception>
      <exception cref="T:System.ArgumentNullException" vsli:raw="The &lt;paramref name=&quot;relation&quot; /&gt; is &lt;see langword=&quot;null&quot; /&gt;.">
        <paramref name="relation" /> 为 <see langword="null" />。</exception>
      <exception cref="T:System.Data.RowNotInTableException" vsli:raw="The row does not belong to the table.">此行不属于该表。</exception>
      <exception cref="T:System.Data.VersionNotFoundException" vsli:raw="The row does not have the requested &lt;see cref=&quot;T:System.Data.DataRowVersion&quot; /&gt;.">该行没有请求的 <see cref="T:System.Data.DataRowVersion" />。</exception>
      <returns vsli:raw="An array of &lt;see cref=&quot;T:System.Data.DataRow&quot; /&gt; objects or an array of length zero.">一个 <see cref="T:System.Data.DataRow" /> 对象数组，或长度为零的数组。</returns>
    </member>
    <member name="M:System.Data.DataRow.HasVersion(System.Data.DataRowVersion)">
      <summary vsli:raw="Gets a value that indicates whether a specified version exists.">获取一个值，该值指示指定的版本是否存在。</summary>
      <param name="version" vsli:raw="One of the &lt;see cref=&quot;T:System.Data.DataRowVersion&quot; /&gt; values that specifies the row version.">
        <see cref="T:System.Data.DataRowVersion" /> 值之一，用于指定行版本。</param>
      <returns vsli:raw="&lt;see langword=&quot;true&quot; /&gt; if the version exists; otherwise, &lt;see langword=&quot;false&quot; /&gt;.">如果该版本存在，则为 <see langword="true" />；否则为 <see langword="false" />。</returns>
    </member>
    <member name="M:System.Data.DataRow.IsNull(System.Data.DataColumn)">
      <summary vsli:raw="Gets a value that indicates whether the specified &lt;see cref=&quot;T:System.Data.DataColumn&quot; /&gt; contains a null value.">获取一个值，该值指示指定的 <see cref="T:System.Data.DataColumn" /> 是否包含 null 值。</summary>
      <param name="column" vsli:raw="A &lt;see cref=&quot;T:System.Data.DataColumn&quot; /&gt;.">
        <see cref="T:System.Data.DataColumn" />。</param>
      <exception cref="T:System.ArgumentNullException" vsli:raw="&lt;paramref name=&quot;column&quot; /&gt; is &lt;see langword=&quot;null&quot; /&gt;.">
        <paramref name="column" /> 为 <see langword="null" />。</exception>
      <exception cref="T:System.Data.RowNotInTableException" vsli:raw="The row does not belong to the table.">此行不属于该表。</exception>
      <returns vsli:raw="&lt;see langword=&quot;true&quot; /&gt; if the column contains a null value; otherwise, &lt;see langword=&quot;false&quot; /&gt;.">如果该列包含 null 值，则为 <see langword="true" />；否则为 <see langword="false" />。</returns>
    </member>
    <member name="M:System.Data.DataRow.IsNull(System.Data.DataColumn,System.Data.DataRowVersion)">
      <summary vsli:raw="Gets a value that indicates whether the specified &lt;see cref=&quot;T:System.Data.DataColumn&quot; /&gt; and &lt;see cref=&quot;T:System.Data.DataRowVersion&quot; /&gt; contains a null value.">获取一个值，该值指示指定的 <see cref="T:System.Data.DataColumn" /> 和 <see cref="T:System.Data.DataRowVersion" /> 是否包含 null 值。</summary>
      <param name="column" vsli:raw="A &lt;see cref=&quot;T:System.Data.DataColumn&quot; /&gt;.">
        <see cref="T:System.Data.DataColumn" />。</param>
      <param name="version" vsli:raw="One of the &lt;see cref=&quot;T:System.Data.DataRowVersion&quot; /&gt; values that specifies the row version. Possible values are &lt;see langword=&quot;Default&quot; /&gt;, &lt;see langword=&quot;Original&quot; /&gt;, &lt;see langword=&quot;Current&quot; /&gt;, and &lt;see langword=&quot;Proposed&quot; /&gt;.">
        <see cref="T:System.Data.DataRowVersion" /> 值之一，用于指定行版本。 可能值为 <see langword="Default" />、<see langword="Original" />、<see langword="Current" /> 和 <see langword="Proposed" />。</param>
      <exception cref="T:System.ArgumentNullException" vsli:raw="&lt;paramref name=&quot;column&quot; /&gt; is &lt;see langword=&quot;null&quot; /&gt;.">
        <paramref name="column" /> 为 <see langword="null" />。</exception>
      <exception cref="T:System.Data.RowNotInTableException" vsli:raw="The row does not belong to the table.">此行不属于该表。</exception>
      <exception cref="T:System.Data.VersionNotFoundException" vsli:raw="The row does not have the requested &lt;paramref name=&quot;version&quot; /&gt;.">该行没有请求的 <paramref name="version" />。</exception>
      <returns vsli:raw="&lt;see langword=&quot;true&quot; /&gt; if the column contains a null value; otherwise, &lt;see langword=&quot;false&quot; /&gt;.">如果该列包含 null 值，则为 <see langword="true" />；否则为 <see langword="false" />。</returns>
    </member>
    <member name="M:System.Data.DataRow.IsNull(System.Int32)">
      <summary vsli:raw="Gets a value that indicates whether the column at the specified index contains a null value.">获取一个值，该值指示位于指定索引处的列是否包含 null 值。</summary>
      <param name="columnIndex" vsli:raw="The zero-based index of the column.">列的从零开始的索引。</param>
      <exception cref="T:System.IndexOutOfRangeException" vsli:raw="No column corresponds to the index specified by &lt;paramref name=&quot;columnIndex&quot; /&gt;.">没有列对应于 <paramref name="columnIndex" /> 指定的索引。</exception>
      <exception cref="T:System.Data.RowNotInTableException" vsli:raw="The row does not belong to the table.">此行不属于该表。</exception>
      <returns vsli:raw="&lt;see langword=&quot;true&quot; /&gt; if the column contains a null value; otherwise, &lt;see langword=&quot;false&quot; /&gt;.">如果该列包含 null 值，则为 <see langword="true" />；否则为 <see langword="false" />。</returns>
    </member>
    <member name="M:System.Data.DataRow.IsNull(System.String)">
      <summary vsli:raw="Gets a value that indicates whether the named column contains a null value.">获取一个值，该值指示指定的列是否包含 null 值。</summary>
      <param name="columnName" vsli:raw="The name of the column.">列的名称。</param>
      <exception cref="T:System.ArgumentException" vsli:raw="The column specified by &lt;paramref name=&quot;columnName&quot; /&gt; cannot be found.">找不到由 <paramref name="columnName" /> 指定的列。</exception>
      <exception cref="T:System.ArgumentNullException" vsli:raw="&lt;paramref name=&quot;columnName&quot; /&gt; is &lt;see langword=&quot;null&quot; /&gt;.">
        <paramref name="columnName" /> 为 <see langword="null" />。</exception>
      <exception cref="T:System.Data.RowNotInTableException" vsli:raw="The row does not belong to the table.">此行不属于该表。</exception>
      <returns vsli:raw="&lt;see langword=&quot;true&quot; /&gt; if the column contains a null value; otherwise, &lt;see langword=&quot;false&quot; /&gt;.">如果该列包含 null 值，则为 <see langword="true" />；否则为 <see langword="false" />。</returns>
    </member>
    <member name="M:System.Data.DataRow.RejectChanges">
      <summary vsli:raw="Rejects all changes made to the row since &lt;see cref=&quot;M:System.Data.DataRow.AcceptChanges&quot; /&gt; was last called.">拒绝自上次调用 <see cref="M:System.Data.DataRow.AcceptChanges" /> 以来进行的所有更改。</summary>
      <exception cref="T:System.Data.RowNotInTableException" vsli:raw="The row does not belong to the table.">此行不属于该表。</exception>
    </member>
    <member name="M:System.Data.DataRow.SetAdded">
      <summary vsli:raw="Changes the &lt;see cref=&quot;P:System.Data.DataRow.RowState&quot; /&gt; of a &lt;see cref=&quot;T:System.Data.DataRow&quot; /&gt; to &lt;see langword=&quot;Added&quot; /&gt;.">将 <see cref="T:System.Data.DataRow" /> 的 <see cref="P:System.Data.DataRow.RowState" /> 更改为 <see langword="Added" />。</summary>
    </member>
    <member name="M:System.Data.DataRow.SetColumnError(System.Data.DataColumn,System.String)">
      <summary vsli:raw="Sets the error description for a column specified as a &lt;see cref=&quot;T:System.Data.DataColumn&quot; /&gt;.">为指定为 <see cref="T:System.Data.DataColumn" /> 的列设置错误说明。</summary>
      <param name="column" vsli:raw="The &lt;see cref=&quot;T:System.Data.DataColumn&quot; /&gt; to set the error description for.">为其设置错误说明的 <see cref="T:System.Data.DataColumn" />。</param>
      <param name="error" vsli:raw="The error description.">错误说明。</param>
    </member>
    <member name="M:System.Data.DataRow.SetColumnError(System.Int32,System.String)">
      <summary vsli:raw="Sets the error description for a column specified by index.">为由索引指定的列设置错误说明。</summary>
      <param name="columnIndex" vsli:raw="The zero-based index of the column.">列的从零开始的索引。</param>
      <param name="error" vsli:raw="The error description.">错误说明。</param>
      <exception cref="T:System.IndexOutOfRangeException" vsli:raw="The &lt;paramref name=&quot;columnIndex&quot; /&gt; argument is out of range">
        <paramref name="columnIndex" /> 参数超出范围</exception>
    </member>
    <member name="M:System.Data.DataRow.SetColumnError(System.String,System.String)">
      <summary vsli:raw="Sets the error description for a column specified by name.">为由名称指定的列设置错误说明。</summary>
      <param name="columnName" vsli:raw="The name of the column.">列的名称。</param>
      <param name="error" vsli:raw="The error description.">错误说明。</param>
    </member>
    <member name="M:System.Data.DataRow.SetModified">
      <summary vsli:raw="Changes the &lt;see cref=&quot;P:System.Data.DataRow.RowState&quot; /&gt; of a &lt;see cref=&quot;T:System.Data.DataRow&quot; /&gt; to &lt;see langword=&quot;Modified&quot; /&gt;.">将 <see cref="T:System.Data.DataRow" /> 的 <see cref="P:System.Data.DataRow.RowState" /> 更改为 <see langword="Modified" />。</summary>
    </member>
    <member name="M:System.Data.DataRow.SetNull(System.Data.DataColumn)">
      <summary vsli:raw="Sets the value of the specified &lt;see cref=&quot;T:System.Data.DataColumn&quot; /&gt; to a null value.">将指定 <see cref="T:System.Data.DataColumn" /> 的值设置为 null 值。</summary>
      <param name="column" vsli:raw="A &lt;see cref=&quot;T:System.Data.DataColumn&quot; /&gt;.">
        <see cref="T:System.Data.DataColumn" />。</param>
    </member>
    <member name="M:System.Data.DataRow.SetParentRow(System.Data.DataRow)">
      <summary vsli:raw="Sets the parent row of a &lt;see cref=&quot;T:System.Data.DataRow&quot; /&gt; with specified new parent &lt;see cref=&quot;T:System.Data.DataRow&quot; /&gt;.">使用指定的新父 <see cref="T:System.Data.DataRow" /> 设置 <see cref="T:System.Data.DataRow" /> 的父行。</summary>
      <param name="parentRow" vsli:raw="The new parent &lt;see cref=&quot;T:System.Data.DataRow&quot; /&gt;.">新的父 <see cref="T:System.Data.DataRow" />。</param>
    </member>
    <member name="M:System.Data.DataRow.SetParentRow(System.Data.DataRow,System.Data.DataRelation)">
      <summary vsli:raw="Sets the parent row of a &lt;see cref=&quot;T:System.Data.DataRow&quot; /&gt; with specified new parent &lt;see cref=&quot;T:System.Data.DataRow&quot; /&gt; and &lt;see cref=&quot;T:System.Data.DataRelation&quot; /&gt;.">使用指定的新父 <see cref="T:System.Data.DataRow" /> 和 <see cref="T:System.Data.DataRelation" /> 设置 <see cref="T:System.Data.DataRow" /> 的父行。</summary>
      <param name="parentRow" vsli:raw="The new parent &lt;see cref=&quot;T:System.Data.DataRow&quot; /&gt;.">新的父 <see cref="T:System.Data.DataRow" />。</param>
      <param name="relation" vsli:raw="The relation &lt;see cref=&quot;T:System.Data.DataRelation&quot; /&gt; to use.">要使用的关系 <see cref="T:System.Data.DataRelation" />。</param>
      <exception cref="T:System.Data.RowNotInTableException" vsli:raw="One of the rows does not belong to a table">其中一行不属于表</exception>
      <exception cref="T:System.ArgumentNullException" vsli:raw="One of the rows is &lt;see langword=&quot;null&quot; /&gt;.">其中一行为 <see langword="null" />。</exception>
      <exception cref="T:System.ArgumentException" vsli:raw="The relation does not belong to the &lt;see cref=&quot;T:System.Data.DataRelationCollection&quot; /&gt; of the &lt;see cref=&quot;T:System.Data.DataSet&quot; /&gt; object.">该关系不属于 <see cref="T:System.Data.DataSet" /> 对象的 <see cref="T:System.Data.DataRelationCollection" />。</exception>
      <exception cref="T:System.Data.InvalidConstraintException" vsli:raw="The relation's child &lt;see cref=&quot;T:System.Data.DataTable&quot; /&gt; is not the table this row belongs to.">该关系的子级 <see cref="T:System.Data.DataTable" /> 不是此行所属的表。</exception>
    </member>
    <member name="P:System.Data.DataRow.HasErrors">
      <summary vsli:raw="Gets a value that indicates whether there are errors in a row.">获取一个值，该值指示某行是否包含错误。</summary>
      <returns vsli:raw="&lt;see langword=&quot;true&quot; /&gt; if the row contains an error; otherwise, &lt;see langword=&quot;false&quot; /&gt;.">如果该行包含错误，则为 <see langword="true" />；否则，为 <see langword="false" />。</returns>
    </member>
    <member name="P:System.Data.DataRow.Item(System.Data.DataColumn)">
      <summary vsli:raw="Gets or sets the data stored in the specified &lt;see cref=&quot;T:System.Data.DataColumn&quot; /&gt;.">获取或设置指定 <see cref="T:System.Data.DataColumn" /> 中存储的数据。</summary>
      <param name="column" vsli:raw="A &lt;see cref=&quot;T:System.Data.DataColumn&quot; /&gt; that contains the data.">一个包含数据的 <see cref="T:System.Data.DataColumn" />。</param>
      <exception cref="T:System.ArgumentException" vsli:raw="The column does not belong to this table.">该列不属于此表。</exception>
      <exception cref="T:System.ArgumentNullException" vsli:raw="The &lt;paramref name=&quot;column&quot; /&gt; is null.">
        <paramref name="column" /> 为 null。</exception>
      <exception cref="T:System.Data.DeletedRowInaccessibleException" vsli:raw="An attempt was made to set a value on a deleted row.">尝试对已删除的行设置值。</exception>
      <exception cref="T:System.InvalidCastException" vsli:raw="The data types of the value and the column do not match.">值与列的数据类型不匹配。</exception>
      <returns vsli:raw="An &lt;see cref=&quot;T:System.Object&quot; /&gt; that contains the data.">包该数据的 <see cref="T:System.Object" />。</returns>
    </member>
    <member name="P:System.Data.DataRow.Item(System.Data.DataColumn,System.Data.DataRowVersion)">
      <summary vsli:raw="Gets the specified version of data stored in the specified &lt;see cref=&quot;T:System.Data.DataColumn&quot; /&gt;.">获取指定 <see cref="T:System.Data.DataColumn" /> 中存储的数据的指定版本。</summary>
      <param name="column" vsli:raw="A &lt;see cref=&quot;T:System.Data.DataColumn&quot; /&gt; that contains information about the column.">
        <see cref="T:System.Data.DataColumn" />，包含有关该列的信息。</param>
      <param name="version" vsli:raw="One of the &lt;see cref=&quot;T:System.Data.DataRowVersion&quot; /&gt; values that specifies the row version that you want. Possible values are &lt;see langword=&quot;Default&quot; /&gt;, &lt;see langword=&quot;Original&quot; /&gt;, &lt;see langword=&quot;Current&quot; /&gt;, and &lt;see langword=&quot;Proposed&quot; /&gt;.">
        <see cref="T:System.Data.DataRowVersion" /> 值之一，用于指定需要的行版本。 可能值为 <see langword="Default" />、<see langword="Original" />、<see langword="Current" /> 和 <see langword="Proposed" />。</param>
      <exception cref="T:System.ArgumentException" vsli:raw="The column does not belong to the table.">该列不属于此表。</exception>
      <exception cref="T:System.ArgumentNullException" vsli:raw="The &lt;paramref name=&quot;column&quot; /&gt; argument contains null.">
        <paramref name="column" /> 参数包含 null。</exception>
      <exception cref="T:System.Data.VersionNotFoundException" vsli:raw="The row does not have this version of data.">该行没有此版本的数据。</exception>
      <returns vsli:raw="An &lt;see cref=&quot;T:System.Object&quot; /&gt; that contains the data.">包该数据的 <see cref="T:System.Object" />。</returns>
    </member>
    <member name="P:System.Data.DataRow.Item(System.Int32)">
      <summary vsli:raw="Gets or sets the data stored in the column specified by index.">获取或设置由索引指定的列中存储的数据。</summary>
      <param name="columnIndex" vsli:raw="The zero-based index of the column.">列的从零开始的索引。</param>
      <exception cref="T:System.Data.DeletedRowInaccessibleException" vsli:raw="Occurs when you try to set a value on a deleted row.">尝试对已删除的行设置值时发生。</exception>
      <exception cref="T:System.IndexOutOfRangeException" vsli:raw="The &lt;paramref name=&quot;columnIndex&quot; /&gt; argument is out of range.">
        <paramref name="columnIndex" /> 参数超出范围。</exception>
      <exception cref="T:System.InvalidCastException" vsli:raw="Occurs when you set the value and the new value's &lt;see cref=&quot;T:System.Type&quot; /&gt; does not match &lt;see cref=&quot;P:System.Data.DataColumn.DataType&quot; /&gt;.">设置值且新值的 <see cref="T:System.Type" /> 与 <see cref="P:System.Data.DataColumn.DataType" /> 不匹配时发生。</exception>
      <returns vsli:raw="An &lt;see cref=&quot;T:System.Object&quot; /&gt; that contains the data.">包该数据的 <see cref="T:System.Object" />。</returns>
    </member>
    <member name="P:System.Data.DataRow.Item(System.Int32,System.Data.DataRowVersion)">
      <summary vsli:raw="Gets the data stored in the column, specified by index and version of the data to retrieve.">获取由索引和要检索的数据版本指定的列中存储的数据。</summary>
      <param name="columnIndex" vsli:raw="The zero-based index of the column.">列的从零开始的索引。</param>
      <param name="version" vsli:raw="One of the &lt;see cref=&quot;T:System.Data.DataRowVersion&quot; /&gt; values that specifies the row version that you want. Possible values are &lt;see langword=&quot;Default&quot; /&gt;, &lt;see langword=&quot;Original&quot; /&gt;, &lt;see langword=&quot;Current&quot; /&gt;, and &lt;see langword=&quot;Proposed&quot; /&gt;.">
        <see cref="T:System.Data.DataRowVersion" /> 值之一，用于指定需要的行版本。 可能值为 <see langword="Default" />、<see langword="Original" />、<see langword="Current" /> 和 <see langword="Proposed" />。</param>
      <exception cref="T:System.IndexOutOfRangeException" vsli:raw="The &lt;paramref name=&quot;columnIndex&quot; /&gt; argument is out of range.">
        <paramref name="columnIndex" /> 参数超出范围。</exception>
      <exception cref="T:System.InvalidCastException" vsli:raw="The data types of the value and the column do not match.">值与列的数据类型不匹配。</exception>
      <exception cref="T:System.Data.VersionNotFoundException" vsli:raw="The row does not have this version of data.">该行没有此版本的数据。</exception>
      <exception cref="T:System.Data.DeletedRowInaccessibleException" vsli:raw="An attempt was made to set a value on a deleted row.">尝试对已删除的行设置值。</exception>
      <returns vsli:raw="An &lt;see cref=&quot;T:System.Object&quot; /&gt; that contains the data.">包该数据的 <see cref="T:System.Object" />。</returns>
    </member>
    <member name="P:System.Data.DataRow.Item(System.String)">
      <summary vsli:raw="Gets or sets the data stored in the column specified by name.">获取或设置由名称指定的列中存储的数据。</summary>
      <param name="columnName" vsli:raw="The name of the column.">列的名称。</param>
      <exception cref="T:System.ArgumentException" vsli:raw="The column specified by &lt;paramref name=&quot;columnName&quot; /&gt; cannot be found.">找不到由 <paramref name="columnName" /> 指定的列。</exception>
      <exception cref="T:System.Data.DeletedRowInaccessibleException" vsli:raw="Occurs when you try to set a value on a deleted row.">尝试对已删除的行设置值时发生。</exception>
      <exception cref="T:System.InvalidCastException" vsli:raw="Occurs when you set a value and its &lt;see cref=&quot;T:System.Type&quot; /&gt; does not match &lt;see cref=&quot;P:System.Data.DataColumn.DataType&quot; /&gt;.">设置值且该值的 <see cref="T:System.Type" /> 与 <see cref="P:System.Data.DataColumn.DataType" /> 不匹配时发生。</exception>
      <exception cref="T:System.Data.NoNullAllowedException" vsli:raw="Occurs when you try to insert a null value into a column where &lt;see cref=&quot;P:System.Data.DataColumn.AllowDBNull&quot; /&gt; is set to &lt;see langword=&quot;false&quot; /&gt;.">尝试在 <see cref="P:System.Data.DataColumn.AllowDBNull" /> 设置为 <see langword="false" /> 的列中插入 null 值时发生。</exception>
      <returns vsli:raw="An &lt;see cref=&quot;T:System.Object&quot; /&gt; that contains the data.">包该数据的 <see cref="T:System.Object" />。</returns>
    </member>
    <member name="P:System.Data.DataRow.Item(System.String,System.Data.DataRowVersion)">
      <summary vsli:raw="Gets the specified version of data stored in the named column.">获取指定列中存储的数据的指定版本。</summary>
      <param name="columnName" vsli:raw="The name of the column.">列的名称。</param>
      <param name="version" vsli:raw="One of the &lt;see cref=&quot;T:System.Data.DataRowVersion&quot; /&gt; values that specifies the row version that you want. Possible values are &lt;see langword=&quot;Default&quot; /&gt;, &lt;see langword=&quot;Original&quot; /&gt;, &lt;see langword=&quot;Current&quot; /&gt;, and &lt;see langword=&quot;Proposed&quot; /&gt;.">
        <see cref="T:System.Data.DataRowVersion" /> 值之一，用于指定需要的行版本。 可能值为 <see langword="Default" />、<see langword="Original" />、<see langword="Current" /> 和 <see langword="Proposed" />。</param>
      <exception cref="T:System.ArgumentException" vsli:raw="The column specified by &lt;paramref name=&quot;columnName&quot; /&gt; cannot be found.">找不到由 <paramref name="columnName" /> 指定的列。</exception>
      <exception cref="T:System.InvalidCastException" vsli:raw="The data types of the value and the column do not match.">值与列的数据类型不匹配。</exception>
      <exception cref="T:System.Data.VersionNotFoundException" vsli:raw="The row does not have this version of data.">该行没有此版本的数据。</exception>
      <exception cref="T:System.Data.DeletedRowInaccessibleException" vsli:raw="The row was deleted.">该行已删除。</exception>
      <returns vsli:raw="An &lt;see cref=&quot;T:System.Object&quot; /&gt; that contains the data.">包该数据的 <see cref="T:System.Object" />。</returns>
    </member>
    <member name="P:System.Data.DataRow.ItemArray">
      <summary vsli:raw="Gets or sets all the values for this row through an array.">通过数组获取或设置此行的所有值。</summary>
      <exception cref="T:System.ArgumentException" vsli:raw="The array is larger than the number of columns in the table.">该数组大于表中的列数。</exception>
      <exception cref="T:System.InvalidCastException" vsli:raw="A value in the array does not match its &lt;see cref=&quot;P:System.Data.DataColumn.DataType&quot; /&gt; in its respective &lt;see cref=&quot;T:System.Data.DataColumn&quot; /&gt;.">数组中的值与其相应的 <see cref="T:System.Data.DataColumn" /> 中的 <see cref="P:System.Data.DataColumn.DataType" /> 不匹配。</exception>
      <exception cref="T:System.Data.ConstraintException" vsli:raw="An edit broke a constraint.">编辑操作破坏了约束。</exception>
      <exception cref="T:System.Data.ReadOnlyException" vsli:raw="An edit tried to change the value of a read-only column.">编辑操作尝试更改只读列的值。</exception>
      <exception cref="T:System.Data.NoNullAllowedException" vsli:raw="An edit tried to put a null value in a column where &lt;see cref=&quot;P:System.Data.DataColumn.AllowDBNull&quot; /&gt; of the &lt;see cref=&quot;T:System.Data.DataColumn&quot; /&gt; object is &lt;see langword=&quot;false&quot; /&gt;.">编辑操作尝试将 null 值放在 <see cref="T:System.Data.DataColumn" /> 对象的 <see cref="P:System.Data.DataColumn.AllowDBNull" /> 为 <see langword="false" /> 的列中。</exception>
      <exception cref="T:System.Data.DeletedRowInaccessibleException" vsli:raw="The row has been deleted.">已删除该行。</exception>
      <returns vsli:raw="An array of type &lt;see cref=&quot;T:System.Object&quot; /&gt;.">
        <see cref="T:System.Object" /> 类型的数组。</returns>
    </member>
    <member name="P:System.Data.DataRow.RowError">
      <summary vsli:raw="Gets or sets the custom error description for a row.">获取或设置行的自定义错误说明。</summary>
      <returns vsli:raw="The text describing an error.">描述错误的文本。</returns>
    </member>
    <member name="P:System.Data.DataRow.RowState">
      <summary vsli:raw="Gets the current state of the row with regard to its relationship to the &lt;see cref=&quot;T:System.Data.DataRowCollection&quot; /&gt;.">获取与该行和 <see cref="T:System.Data.DataRowCollection" /> 的关系相关的当前状态。</summary>
      <returns vsli:raw="One of the &lt;see cref=&quot;T:System.Data.DataRowState&quot; /&gt; values.">
        <see cref="T:System.Data.DataRowState" /> 值之一。</returns>
    </member>
    <member name="P:System.Data.DataRow.Table">
      <summary vsli:raw="Gets the &lt;see cref=&quot;T:System.Data.DataTable&quot; /&gt; for which this row has a schema.">获取该行拥有其架构的 <see cref="T:System.Data.DataTable" />。</summary>
      <returns vsli:raw="The &lt;see cref=&quot;T:System.Data.DataTable&quot; /&gt; to which this row belongs.">该行所属的 <see cref="T:System.Data.DataTable" />。</returns>
    </member>
    <member name="T:System.Data.DataRowAction">
      <summary vsli:raw="Describes an action performed on a &lt;see cref=&quot;T:System.Data.DataRow&quot; /&gt;.">描述对 <see cref="T:System.Data.DataRow" /> 执行的操作。</summary>
    </member>
    <member name="F:System.Data.DataRowAction.Add">
      <summary vsli:raw="The row has been added to the table.">该行已添加到表中。</summary>
    </member>
    <member name="F:System.Data.DataRowAction.Change">
      <summary vsli:raw="The row has changed.">此行已更改。</summary>
    </member>
    <member name="F:System.Data.DataRowAction.ChangeCurrentAndOriginal">
      <summary vsli:raw="The original and the current versions of the row have been changed.">该行的原始版本和当前版本都已更改。</summary>
    </member>
    <member name="F:System.Data.DataRowAction.ChangeOriginal">
      <summary vsli:raw="The original version of the row has been changed.">该行的原始版本已更改。</summary>
    </member>
    <member name="F:System.Data.DataRowAction.Commit">
      <summary vsli:raw="The changes to the row have been committed.">已提交了对此行的更改。</summary>
    </member>
    <member name="F:System.Data.DataRowAction.Delete">
      <summary vsli:raw="The row was deleted from the table.">已从表中删除此行。</summary>
    </member>
    <member name="F:System.Data.DataRowAction.Nothing">
      <summary vsli:raw="The row has not changed.">此行尚未更改。</summary>
    </member>
    <member name="F:System.Data.DataRowAction.Rollback">
      <summary vsli:raw="The most recent change to the row has been rolled back.">对此行的最近更改已回滚。</summary>
    </member>
    <member name="T:System.Data.DataRowBuilder">
      <summary vsli:raw="The &lt;see langword=&quot;DataRowBuilder&quot; /&gt; type supports the .NET infrastructure and is not intended to be used directly from your code.">
        <see langword="DataRowBuilder" /> 类型支持 .NET Framework 基础结构，并且不应直接从代码中使用。</summary>
    </member>
    <member name="T:System.Data.DataRowChangeEventArgs">
      <summary vsli:raw="Provides data for the &lt;see cref=&quot;E:System.Data.DataTable.RowChanged&quot; /&gt;, &lt;see cref=&quot;E:System.Data.DataTable.RowChanging&quot; /&gt;, &lt;see cref=&quot;M:System.Data.DataTable.OnRowDeleting(System.Data.DataRowChangeEventArgs)&quot; /&gt;, and &lt;see cref=&quot;M:System.Data.DataTable.OnRowDeleted(System.Data.DataRowChangeEventArgs)&quot; /&gt; events.">为 <see cref="E:System.Data.DataTable.RowChanged" />、<see cref="E:System.Data.DataTable.RowChanging" />、<see cref="M:System.Data.DataTable.OnRowDeleting(System.Data.DataRowChangeEventArgs)" /> 和 <see cref="M:System.Data.DataTable.OnRowDeleted(System.Data.DataRowChangeEventArgs)" /> 事件提供数据。</summary>
    </member>
    <member name="M:System.Data.DataRowChangeEventArgs.#ctor(System.Data.DataRow,System.Data.DataRowAction)">
      <summary vsli:raw="Initializes a new instance of the &lt;see cref=&quot;T:System.Data.DataRowChangeEventArgs&quot; /&gt; class.">初始化 <see cref="T:System.Data.DataRowChangeEventArgs" /> 类的新实例。</summary>
      <param name="row" vsli:raw="The &lt;see cref=&quot;T:System.Data.DataRow&quot; /&gt; upon which an action is occurring.">正针对其发生操作的 <see cref="T:System.Data.DataRow" />。</param>
      <param name="action" vsli:raw="One of the &lt;see cref=&quot;T:System.Data.DataRowAction&quot; /&gt; values.">
        <see cref="T:System.Data.DataRowAction" /> 值之一。</param>
    </member>
    <member name="P:System.Data.DataRowChangeEventArgs.Action">
      <summary vsli:raw="Gets the action that has occurred on a &lt;see cref=&quot;T:System.Data.DataRow&quot; /&gt;.">获取针对 <see cref="T:System.Data.DataRow" /> 进行的操作。</summary>
      <returns vsli:raw="One of the &lt;see cref=&quot;T:System.Data.DataRowAction&quot; /&gt; values.">
        <see cref="T:System.Data.DataRowAction" /> 值之一。</returns>
    </member>
    <member name="P:System.Data.DataRowChangeEventArgs.Row">
      <summary vsli:raw="Gets the row upon which an action has occurred.">获取已针对其进行操作的行。</summary>
      <returns vsli:raw="The &lt;see cref=&quot;T:System.Data.DataRow&quot; /&gt; upon which an action has occurred.">已针对其发生操作的 <see cref="T:System.Data.DataRow" />。</returns>
    </member>
    <member name="T:System.Data.DataRowChangeEventHandler">
      <summary vsli:raw="Represents the method that will handle the &lt;see cref=&quot;E:System.Data.DataTable.RowChanging&quot; /&gt;, &lt;see cref=&quot;E:System.Data.DataTable.RowChanged&quot; /&gt;, &lt;see cref=&quot;E:System.Data.DataTable.RowDeleting&quot; /&gt;, and &lt;see cref=&quot;E:System.Data.DataTable.RowDeleted&quot; /&gt; events of a &lt;see cref=&quot;T:System.Data.DataTable&quot; /&gt;.">表示将处理 <see cref="E:System.Data.DataTable.RowChanging" /> 的 <see cref="E:System.Data.DataTable.RowChanged" />、<see cref="E:System.Data.DataTable.RowDeleting" />、<see cref="E:System.Data.DataTable.RowDeleted" /> 和 <see cref="T:System.Data.DataTable" /> 事件的方法。</summary>
      <param name="sender" vsli:raw="The source of the event.">事件源。</param>
      <param name="e" vsli:raw="A &lt;see cref=&quot;T:System.Data.DataRowChangeEventArgs&quot; /&gt; that contains the event data.">包含事件数据的 <see cref="T:System.Data.DataRowChangeEventArgs" />。</param>
    </member>
    <member name="T:System.Data.DataRowCollection">
      <summary vsli:raw="Represents a collection of rows for a &lt;see cref=&quot;T:System.Data.DataTable&quot; /&gt;.">表示 <see cref="T:System.Data.DataTable" /> 的行的集合。</summary>
    </member>
    <member name="M:System.Data.DataRowCollection.Add(System.Data.DataRow)">
      <summary vsli:raw="Adds the specified &lt;see cref=&quot;T:System.Data.DataRow&quot; /&gt; to the &lt;see cref=&quot;T:System.Data.DataRowCollection&quot; /&gt; object.">将指定的 <see cref="T:System.Data.DataRow" /> 添加到 <see cref="T:System.Data.DataRowCollection" /> 对象中。</summary>
      <param name="row" vsli:raw="The &lt;see cref=&quot;T:System.Data.DataRow&quot; /&gt; to add.">要添加的 <see cref="T:System.Data.DataRow" />。</param>
      <exception cref="T:System.ArgumentNullException" vsli:raw="The row is null.">该行为 null。</exception>
      <exception cref="T:System.ArgumentException" vsli:raw="The row either belongs to another table or already belongs to this table.">此行要么属于另一个表，要么已经属于此表。</exception>
      <exception cref="T:System.Data.ConstraintException" vsli:raw="The addition invalidates a constraint.">添加将使约束无效。</exception>
      <exception cref="T:System.Data.NoNullAllowedException" vsli:raw="The addition tries to put a null in a &lt;see cref=&quot;T:System.Data.DataColumn&quot; /&gt; where &lt;see cref=&quot;P:System.Data.DataColumn.AllowDBNull&quot; /&gt; is false.">添加尝试将 null 置于 <see cref="T:System.Data.DataColumn" /> 为 false 的 <see cref="P:System.Data.DataColumn.AllowDBNull" /> 中。</exception>
    </member>
    <member name="M:System.Data.DataRowCollection.Add(System.Object[])">
      <summary vsli:raw="Creates a row using specified values and adds it to the &lt;see cref=&quot;T:System.Data.DataRowCollection&quot; /&gt;.">创建使用指定值的行，并将其添加到 <see cref="T:System.Data.DataRowCollection" /> 中。</summary>
      <param name="values" vsli:raw="The array of values that are used to create the new row.">用于创建新行的值的数组。</param>
      <exception cref="T:System.ArgumentException" vsli:raw="The array is larger than the number of columns in the table.">该数组大于表中的列数。</exception>
      <exception cref="T:System.InvalidCastException" vsli:raw="A value does not match its respective column type.">值与其各自的列类型不匹配。</exception>
      <exception cref="T:System.Data.ConstraintException" vsli:raw="Adding the row invalidates a constraint.">添加行会使约束无效。</exception>
      <exception cref="T:System.Data.NoNullAllowedException" vsli:raw="Trying to put a null in a column where &lt;see cref=&quot;P:System.Data.DataColumn.AllowDBNull&quot; /&gt; is false.">尝试将空值放到 <see cref="P:System.Data.DataColumn.AllowDBNull" /> 为 false 的列中。</exception>
      <returns vsli:raw="The new row.">无。</returns>
    </member>
    <member name="M:System.Data.DataRowCollection.Clear">
      <summary vsli:raw="Clears the collection of all rows.">清除所有行的集合。</summary>
      <exception cref="T:System.Data.InvalidConstraintException" vsli:raw="A &lt;see cref=&quot;T:System.Data.ForeignKeyConstraint&quot; /&gt; is enforced on the &lt;see cref=&quot;T:System.Data.DataRowCollection&quot; /&gt;.">针对 <see cref="T:System.Data.ForeignKeyConstraint" /> 实施 <see cref="T:System.Data.DataRowCollection" />。</exception>
    </member>
    <member name="M:System.Data.DataRowCollection.Contains(System.Object)">
      <summary vsli:raw="Gets a value that indicates whether the primary key of any row in the collection contains the specified value.">获取一个值，该值指示集合中任何行的主键中是否包含指定的值。</summary>
      <param name="key" vsli:raw="The value of the primary key to test for.">要测试的主键的值。</param>
      <exception cref="T:System.Data.MissingPrimaryKeyException" vsli:raw="The table does not have a primary key.">该表没有主键。</exception>
      <returns vsli:raw="&lt;see langword=&quot;true&quot; /&gt; if the collection contains a &lt;see cref=&quot;T:System.Data.DataRow&quot; /&gt; with the specified primary key value; otherwise, &lt;see langword=&quot;false&quot; /&gt;.">如果集合中包含具有指定主键值的 <see cref="T:System.Data.DataRow" />，则为 <see langword="true" />；否则为 <see langword="false" />。</returns>
    </member>
    <member name="M:System.Data.DataRowCollection.Contains(System.Object[])">
      <summary vsli:raw="Gets a value that indicates whether the primary key columns of any row in the collection contain the values specified in the object array.">获取一个值，该值指示集合中任何行的主键列中是否包含在对象数组中指定的值。</summary>
      <param name="keys" vsli:raw="An array of primary key values to test for.">要测试的主键值的数组。</param>
      <exception cref="T:System.Data.MissingPrimaryKeyException" vsli:raw="The table does not have a primary key.">该表没有主键。</exception>
      <returns vsli:raw="&lt;see langword=&quot;true&quot; /&gt; if the &lt;see cref=&quot;T:System.Data.DataRowCollection&quot; /&gt; contains a &lt;see cref=&quot;T:System.Data.DataRow&quot; /&gt; with the specified key values; otherwise, &lt;see langword=&quot;false&quot; /&gt;.">如果 <see cref="T:System.Data.DataRowCollection" /> 中包含具有指定键值的 <see cref="T:System.Data.DataRow" />，则为 <see langword="true" />；否则为 <see langword="false" />。</returns>
    </member>
    <member name="M:System.Data.DataRowCollection.CopyTo(System.Array,System.Int32)">
      <summary vsli:raw="Copies all the &lt;see cref=&quot;T:System.Data.DataRow&quot; /&gt; objects from the collection into the given array, starting at the given destination array index.">将该集合中的所有 <see cref="T:System.Data.DataRow" /> 对象复制到起始位置为给定目标数组索引的给定数组中。</summary>
      <param name="ar" vsli:raw="The one-dimensional array that is the destination of the elements copied from the &lt;see langword=&quot;DataRowCollection&quot; /&gt;. The array must have zero-based indexing.">一维数组，它是从 <see langword="DataRowCollection" /> 中复制的元素的目标。 该数组的索引必须从零开始。</param>
      <param name="index" vsli:raw="The zero-based index in the array at which copying begins.">数组中开始复制的位置的索引（从零开始）。</param>
    </member>
    <member name="M:System.Data.DataRowCollection.CopyTo(System.Data.DataRow[],System.Int32)">
      <summary vsli:raw="Copies all the &lt;see cref=&quot;T:System.Data.DataRow&quot; /&gt; objects from the collection into the given array, starting at the given destination array index.">将该集合中的所有 <see cref="T:System.Data.DataRow" /> 对象复制到起始位置为给定目标数组索引的给定数组中。</summary>
      <param name="array" vsli:raw="The one-dimensional array that is the destination of the elements copied from the &lt;see langword=&quot;DataRowCollection&quot; /&gt;. The array must have zero-based indexing.">一维数组，它是从 <see langword="DataRowCollection" /> 中复制的元素的目标。 该数组的索引必须从零开始。</param>
      <param name="index" vsli:raw="The zero-based index in the array at which copying begins.">数组中开始复制的位置的索引（从零开始）。</param>
    </member>
    <member name="M:System.Data.DataRowCollection.Find(System.Object)">
      <summary vsli:raw="Gets the row specified by the primary key value.">获取由主键值指定的行。</summary>
      <param name="key" vsli:raw="The primary key value of the &lt;see cref=&quot;T:System.Data.DataRow&quot; /&gt; to find.">要查找的 <see cref="T:System.Data.DataRow" /> 的主键值。</param>
      <exception cref="T:System.Data.MissingPrimaryKeyException" vsli:raw="The table does not have a primary key.">该表没有主键。</exception>
      <returns vsli:raw="A &lt;see cref=&quot;T:System.Data.DataRow&quot; /&gt; that contains the primary key value specified; otherwise a null value if the primary key value does not exist in the &lt;see cref=&quot;T:System.Data.DataRowCollection&quot; /&gt;.">包含指定的主键值的 <see cref="T:System.Data.DataRow" />；否则为空值（如果 <see cref="T:System.Data.DataRowCollection" /> 中不存在主键值）。</returns>
    </member>
    <member name="M:System.Data.DataRowCollection.Find(System.Object[])">
      <summary vsli:raw="Gets the row that contains the specified primary key values.">获取包含指定的主键值的行。</summary>
      <param name="keys" vsli:raw="An array of primary key values to find. The type of the array is &lt;see langword=&quot;Object&quot; /&gt;.">要查找的主键值的数组。 数组的类型为 <see langword="Object" />。</param>
      <exception cref="T:System.IndexOutOfRangeException" vsli:raw="No row corresponds to that index value.">任何行都不与该索引值相对应。</exception>
      <exception cref="T:System.Data.MissingPrimaryKeyException" vsli:raw="The table does not have a primary key.">该表没有主键。</exception>
      <returns vsli:raw="A &lt;see cref=&quot;T:System.Data.DataRow&quot; /&gt; object that contains the primary key values specified; otherwise a null value if the primary key value does not exist in the &lt;see cref=&quot;T:System.Data.DataRowCollection&quot; /&gt;.">包含指定的主键值的 <see cref="T:System.Data.DataRow" /> 对象；如果 <see cref="T:System.Data.DataRowCollection" /> 中不存在主键值，则为 Null 值。</returns>
    </member>
    <member name="M:System.Data.DataRowCollection.GetEnumerator">
      <summary vsli:raw="Gets an &lt;see cref=&quot;T:System.Collections.IEnumerator&quot; /&gt; for this collection.">获取该集合的 <see cref="T:System.Collections.IEnumerator" />。</summary>
      <returns vsli:raw="An &lt;see cref=&quot;T:System.Collections.IEnumerator&quot; /&gt; for this collection.">该集合的 <see cref="T:System.Collections.IEnumerator" />。</returns>
    </member>
    <member name="M:System.Data.DataRowCollection.IndexOf(System.Data.DataRow)">
      <summary vsli:raw="Gets the index of the specified &lt;see cref=&quot;T:System.Data.DataRow&quot; /&gt; object.">获取指定 <see cref="T:System.Data.DataRow" /> 对象的索引。</summary>
      <param name="row" vsli:raw="The &lt;see langword=&quot;DataRow&quot; /&gt; to search for.">要搜索的 <see langword="DataRow" />。</param>
      <returns vsli:raw="The zero-based index of the row, or -1 if the row is not found in the collection.">该行从零开始的索引；如果在集合中未找到该行，则为 -1。</returns>
    </member>
    <member name="M:System.Data.DataRowCollection.InsertAt(System.Data.DataRow,System.Int32)">
      <summary vsli:raw="Inserts a new row into the collection at the specified location.">将新行插入到集合中的指定位置。</summary>
      <param name="row" vsli:raw="The &lt;see cref=&quot;T:System.Data.DataRow&quot; /&gt; to add.">要添加的 <see cref="T:System.Data.DataRow" />。</param>
      <param name="pos" vsli:raw="The (zero-based) location in the collection where you want to add the &lt;see langword=&quot;DataRow&quot; /&gt;.">您要添加该 <see langword="DataRow" /> 的集合的位置（位置从零开始）。</param>
      <exception cref="T:System.IndexOutOfRangeException" vsli:raw="The &lt;paramref name=&quot;pos&quot; /&gt; is less than 0.">
        <paramref name="pos" /> 小于 0。</exception>
    </member>
    <member name="M:System.Data.DataRowCollection.Remove(System.Data.DataRow)">
      <summary vsli:raw="Removes the specified &lt;see cref=&quot;T:System.Data.DataRow&quot; /&gt; from the collection.">从集合中移除指定的 <see cref="T:System.Data.DataRow" />。</summary>
      <param name="row" vsli:raw="The &lt;see cref=&quot;T:System.Data.DataRow&quot; /&gt; to remove.">要移除的 <see cref="T:System.Data.DataRow" />。</param>
    </member>
    <member name="M:System.Data.DataRowCollection.RemoveAt(System.Int32)">
      <summary vsli:raw="Removes the row at the specified index from the collection.">从集合中移除指定索引处的行。</summary>
      <param name="index" vsli:raw="The index of the row to remove.">要移除的行的索引。</param>
    </member>
    <member name="P:System.Data.DataRowCollection.Count">
      <summary vsli:raw="Gets the total number of &lt;see cref=&quot;T:System.Data.DataRow&quot; /&gt; objects in this collection.">获取该集合中 <see cref="T:System.Data.DataRow" /> 对象的总数。</summary>
      <returns vsli:raw="The total number of &lt;see cref=&quot;T:System.Data.DataRow&quot; /&gt; objects in this collection.">该集合中的 <see cref="T:System.Data.DataRow" /> 对象的总数。</returns>
    </member>
    <member name="P:System.Data.DataRowCollection.Item(System.Int32)">
      <summary vsli:raw="Gets the row at the specified index.">获取指定索引处的行。</summary>
      <param name="index" vsli:raw="The zero-based index of the row to return.">要返回的行的从零开始的索引。</param>
      <exception cref="T:System.IndexOutOfRangeException" vsli:raw="The index value is greater than the number of items in the collection.">索引值大于集合中的项目数。</exception>
      <returns vsli:raw="The specified &lt;see cref=&quot;T:System.Data.DataRow&quot; /&gt;.">指定的 <see cref="T:System.Data.DataRow" />。</returns>
    </member>
    <member name="T:System.Data.DataRowComparer">
      <summary vsli:raw="Returns a singleton instance of the &lt;see cref=&quot;T:System.Data.DataRowComparer`1&quot; /&gt; class.">返回 <see cref="T:System.Data.DataRowComparer`1" /> 类的单一实例。</summary>
    </member>
    <member name="P:System.Data.DataRowComparer.Default">
      <summary vsli:raw="Gets a singleton instance of &lt;see cref=&quot;T:System.Data.DataRowComparer`1&quot; /&gt;. This property is read-only.">获取 <see cref="T:System.Data.DataRowComparer`1" /> 的单一实例。 此属性是只读的。</summary>
      <returns vsli:raw="An instance of a &lt;see cref=&quot;T:System.Data.DataRowComparer`1&quot; /&gt;.">
        <see cref="T:System.Data.DataRowComparer`1" /> 的一个实例。</returns>
    </member>
    <member name="T:System.Data.DataRowComparer`1">
      <summary vsli:raw="Compares two &lt;see cref=&quot;T:System.Data.DataRow&quot; /&gt; objects for equivalence by using value-based comparison.">通过使用基于值的比较来比较两个 <see cref="T:System.Data.DataRow" /> 对象是否等值。</summary>
      <typeparam name="TRow" vsli:raw="The type of objects to be compared, typically &lt;see cref=&quot;T:System.Data.DataRow&quot; /&gt;.">要进行比较的对象的类型，通常为 <see cref="T:System.Data.DataRow" />。</typeparam>
    </member>
    <member name="M:System.Data.DataRowComparer`1.Equals(`0,`0)">
      <summary vsli:raw="Compares two &lt;see cref=&quot;T:System.Data.DataRow&quot; /&gt; objects by using a column-by-column, value-based comparison.">通过使用基于值的逐列比较来比较两个 <see cref="T:System.Data.DataRow" /> 对象。</summary>
      <param name="leftRow" vsli:raw="The first &lt;see cref=&quot;T:System.Data.DataRow&quot; /&gt; object to compare.">要比较的第一个 <see cref="T:System.Data.DataRow" /> 对象。</param>
      <param name="rightRow" vsli:raw="The second &lt;see cref=&quot;T:System.Data.DataRow&quot; /&gt; object to compare.">要比较的第二个 <see cref="T:System.Data.DataRow" /> 对象。</param>
      <exception cref="T:System.ArgumentNullException" vsli:raw="One or both of the source &lt;see cref=&quot;T:System.Data.DataRow&quot; /&gt; objects are &lt;see langword=&quot;null&quot; /&gt;.">两个源 <see cref="T:System.Data.DataRow" /> 对象之一或全部为 <see langword="null" />。</exception>
      <returns vsli:raw="&lt;see langword=&quot;true&quot; /&gt; if the two &lt;see cref=&quot;T:System.Data.DataRow&quot; /&gt; objects have ordered sets of column values that are equal; otherwise, &lt;see langword=&quot;false&quot; /&gt;.">如果两个 <see cref="T:System.Data.DataRow" /> 对象具有相等的列值有序集，则为 <see langword="true" />；否则为 <see langword="false" />。</returns>
    </member>
    <member name="M:System.Data.DataRowComparer`1.GetHashCode(`0)">
      <summary vsli:raw="Returns a hash code for the specified &lt;see cref=&quot;T:System.Data.DataRow&quot; /&gt; object.">返回指定 <see cref="T:System.Data.DataRow" /> 对象的哈希代码。</summary>
      <param name="row" vsli:raw="The &lt;see cref=&quot;T:System.Data.DataRow&quot; /&gt; to compute the hash code from.">要从中计算哈希代码的 <see cref="T:System.Data.DataRow" />。</param>
      <exception cref="T:System.ArgumentException" vsli:raw="The source &lt;see cref=&quot;T:System.Data.DataRow&quot; /&gt; objects does not belong to a &lt;see cref=&quot;T:System.Data.DataTable&quot; /&gt;.">源 <see cref="T:System.Data.DataRow" /> 对象不属于 <see cref="T:System.Data.DataTable" />。</exception>
      <exception cref="T:System.ArgumentNullException" vsli:raw="The source &lt;see cref=&quot;T:System.Data.DataRow&quot; /&gt; objects is &lt;see langword=&quot;null&quot; /&gt;.">源 <see cref="T:System.Data.DataRow" /> 对象为 <see langword="null" />。</exception>
      <returns vsli:raw="An &lt;see cref=&quot;T:System.Int32&quot; /&gt; value representing the hash code of the row.">表示该行的哈希代码的 <see cref="T:System.Int32" /> 值。</returns>
    </member>
    <member name="P:System.Data.DataRowComparer`1.Default">
      <summary vsli:raw="Gets a singleton instance of &lt;see cref=&quot;T:System.Data.DataRowComparer`1&quot; /&gt;. This property is read-only.">获取 <see cref="T:System.Data.DataRowComparer`1" /> 的单一实例。 此属性是只读的。</summary>
      <returns vsli:raw="An instance of a &lt;see cref=&quot;T:System.Data.DataRowComparer`1&quot; /&gt;.">
        <see cref="T:System.Data.DataRowComparer`1" /> 的一个实例。</returns>
    </member>
    <member name="T:System.Data.DataRowExtensions">
      <summary vsli:raw="Defines the extension methods to the &lt;see cref=&quot;T:System.Data.DataRow&quot; /&gt; class. This is a static class.">定义 <see cref="T:System.Data.DataRow" /> 类的扩展方法。 这是一个静态类。</summary>
    </member>
    <member name="M:System.Data.DataRowExtensions.Field``1(System.Data.DataRow,System.Data.DataColumn)">
      <summary vsli:raw="Provides strongly-typed access to each of the column values in the specified row. The &lt;see cref=&quot;M:System.Data.DataRowExtensions.Field``1(System.Data.DataRow,System.Data.DataColumn)&quot; /&gt; method also supports nullable types.">为指定行中的每个列值提供强类型访问。 <see cref="M:System.Data.DataRowExtensions.Field``1(System.Data.DataRow,System.Data.DataColumn)" /> 方法还支持可以为 null 的类型。</summary>
      <param name="row" vsli:raw="The input &lt;see cref=&quot;T:System.Data.DataRow&quot; /&gt;, which acts as the &lt;see langword=&quot;this&quot; /&gt; instance for the extension method.">输入 <see cref="T:System.Data.DataRow" />，作为扩展方法的 <see langword="this" /> 实例。</param>
      <param name="column" vsli:raw="The input &lt;see cref=&quot;T:System.Data.DataColumn&quot; /&gt; object that specifies the column to return the value of.">输入 <see cref="T:System.Data.DataColumn" /> 对象，该对象指定要返回其值的列。</param>
      <typeparam name="T" vsli:raw="A generic parameter that specifies the return type of the column.">指定列的返回类型的泛型形参。</typeparam>
      <exception cref="T:System.InvalidCastException" vsli:raw="The value type of the underlying column could not be cast to the type specified by the generic parameter, &lt;paramref name=&quot;T&quot; /&gt;.">基础列的值类型无法转换为泛型参数 <paramref name="T" /> 指定的类型。</exception>
      <exception cref="T:System.IndexOutOfRangeException" vsli:raw="The column specified by &lt;paramref name=&quot;column&quot; /&gt; does not occur in the &lt;see cref=&quot;T:System.Data.DataTable&quot; /&gt; that the &lt;see cref=&quot;T:System.Data.DataRow&quot; /&gt; is a part of.">
        <paramref name="column" /> 指定的列不会出现在包含 <see cref="T:System.Data.DataRow" /> 的 <see cref="T:System.Data.DataTable" /> 中。</exception>
      <exception cref="T:System.NullReferenceException" vsli:raw="A null value was assigned to a non-nullable type.">将“null”值赋给了不可为 null 的类型****。</exception>
      <returns vsli:raw="The value, of type &lt;paramref name=&quot;T&quot; /&gt;, of the &lt;see cref=&quot;T:System.Data.DataColumn&quot; /&gt; specified by &lt;paramref name=&quot;column&quot; /&gt;.">由 <paramref name="column" /> 指定的 <paramref name="T" /> 类型的 <see cref="T:System.Data.DataColumn" /> 值。</returns>
    </member>
    <member name="M:System.Data.DataRowExtensions.Field``1(System.Data.DataRow,System.Data.DataColumn,System.Data.DataRowVersion)">
      <summary vsli:raw="Provides strongly-typed access to each of the column values in the specified row. The &lt;see cref=&quot;M:System.Data.DataRowExtensions.Field``1(System.Data.DataRow,System.Data.DataColumn,System.Data.DataRowVersion)&quot; /&gt; method also supports nullable types.">为指定行中的每个列值提供强类型访问。 <see cref="M:System.Data.DataRowExtensions.Field``1(System.Data.DataRow,System.Data.DataColumn,System.Data.DataRowVersion)" /> 方法还支持可以为 null 的类型。</summary>
      <param name="row" vsli:raw="The input &lt;see cref=&quot;T:System.Data.DataRow&quot; /&gt;, which acts as the &lt;see langword=&quot;this&quot; /&gt; instance for the extension method.">输入 <see cref="T:System.Data.DataRow" />，作为扩展方法的 <see langword="this" /> 实例。</param>
      <param name="column" vsli:raw="The input &lt;see cref=&quot;T:System.Data.DataColumn&quot; /&gt; object that specifies the column to return the value of.">输入 <see cref="T:System.Data.DataColumn" /> 对象，该对象指定要返回其值的列。</param>
      <param name="version" vsli:raw="A &lt;see cref=&quot;T:System.Data.DataRowVersion&quot; /&gt; enumeration that specifies the version of the column value to return, such as &lt;see langword=&quot;Current&quot; /&gt; or &lt;see langword=&quot;Original&quot; /&gt; version.">
        <see cref="T:System.Data.DataRowVersion" /> 枚举，指定要返回的列值版本，如 <see langword="Current" /> 或 <see langword="Original" /> 版本。</param>
      <typeparam name="T" vsli:raw="A generic parameter that specifies the return type of the column.">指定列的返回类型的泛型形参。</typeparam>
      <exception cref="T:System.InvalidCastException" vsli:raw="The value type of the underlying column could not be cast to the type specified by the generic parameter, &lt;paramref name=&quot;T&quot; /&gt;.">基础列的值类型无法转换为泛型参数 <paramref name="T" /> 指定的类型。</exception>
      <exception cref="T:System.IndexOutOfRangeException" vsli:raw="The column specified by &lt;paramref name=&quot;column&quot; /&gt; does not exist in the &lt;see cref=&quot;T:System.Data.DataTable&quot; /&gt; that the &lt;see cref=&quot;T:System.Data.DataRow&quot; /&gt; is a part of.">
        <paramref name="column" /> 指定的列不存在于包含 <see cref="T:System.Data.DataRow" /> 的 <see cref="T:System.Data.DataTable" /> 中。</exception>
      <exception cref="T:System.NullReferenceException" vsli:raw="A null value was assigned to a non-nullable type.">将“null”值赋给了不可为 null 的类型****。</exception>
      <returns vsli:raw="The value, of type &lt;paramref name=&quot;T&quot; /&gt;, of the &lt;see cref=&quot;T:System.Data.DataColumn&quot; /&gt; specified by &lt;paramref name=&quot;column&quot; /&gt; and &lt;paramref name=&quot;version&quot; /&gt;.">由 <paramref name="column" /> 和 <paramref name="version" /> 指定的 <paramref name="T" /> 类型的 <see cref="T:System.Data.DataColumn" /> 值。</returns>
    </member>
    <member name="M:System.Data.DataRowExtensions.Field``1(System.Data.DataRow,System.Int32)">
      <summary vsli:raw="Provides strongly-typed access to each of the column values in the specified row. The &lt;see cref=&quot;M:System.Data.DataRowExtensions.Field``1(System.Data.DataRow,System.Int32)&quot; /&gt; method also supports nullable types.">为指定行中的每个列值提供强类型访问。 <see cref="M:System.Data.DataRowExtensions.Field``1(System.Data.DataRow,System.Int32)" /> 方法还支持可以为 null 的类型。</summary>
      <param name="row" vsli:raw="The input &lt;see cref=&quot;T:System.Data.DataRow&quot; /&gt;, which acts as the &lt;see langword=&quot;this&quot; /&gt; instance for the extension method.">输入 <see cref="T:System.Data.DataRow" />，作为扩展方法的 <see langword="this" /> 实例。</param>
      <param name="columnIndex" vsli:raw="The column index.">列索引。</param>
      <typeparam name="T" vsli:raw="A generic parameter that specifies the return type of the column.">指定列的返回类型的泛型形参。</typeparam>
      <exception cref="T:System.InvalidCastException" vsli:raw="The value type of the underlying column could not be cast to the type specified by the generic parameter, &lt;paramref name=&quot;T&quot; /&gt;.">基础列的值类型无法转换为泛型参数 <paramref name="T" /> 指定的类型。</exception>
      <exception cref="T:System.IndexOutOfRangeException" vsli:raw="The column specified by &lt;paramref name=&quot;ordinal&quot; /&gt; does not exist in the &lt;see cref=&quot;T:System.Data.DataTable&quot; /&gt; that the &lt;see cref=&quot;T:System.Data.DataRow&quot; /&gt; is a part of.">
        <paramref name="ordinal" /> 指定的列不存在于包含 <see cref="T:System.Data.DataRow" /> 的 <see cref="T:System.Data.DataTable" /> 中。</exception>
      <exception cref="T:System.NullReferenceException" vsli:raw="A null value was assigned to a non-nullable type.">将“null”值赋给了不可为 null 的类型****。</exception>
      <returns vsli:raw="The value, of type &lt;paramref name=&quot;T&quot; /&gt;, of the &lt;see cref=&quot;T:System.Data.DataColumn&quot; /&gt; specified by &lt;paramref name=&quot;columnIndex&quot; /&gt;.">由 <paramref name="columnIndex" /> 指定的 <paramref name="T" /> 类型的 <see cref="T:System.Data.DataColumn" /> 值。</returns>
    </member>
    <member name="M:System.Data.DataRowExtensions.Field``1(System.Data.DataRow,System.Int32,System.Data.DataRowVersion)">
      <summary vsli:raw="Provides strongly-typed access to each of the column values in the specified row. The &lt;see cref=&quot;M:System.Data.DataRowExtensions.Field``1(System.Data.DataRow,System.Int32,System.Data.DataRowVersion)&quot; /&gt; method also supports nullable types.">为指定行中的每个列值提供强类型访问。 <see cref="M:System.Data.DataRowExtensions.Field``1(System.Data.DataRow,System.Int32,System.Data.DataRowVersion)" /> 方法还支持可以为 null 的类型。</summary>
      <param name="row" vsli:raw="The input &lt;see cref=&quot;T:System.Data.DataRow&quot; /&gt;, which acts as the &lt;see langword=&quot;this&quot; /&gt; instance for the extension method.">输入 <see cref="T:System.Data.DataRow" />，作为扩展方法的 <see langword="this" /> 实例。</param>
      <param name="columnIndex" vsli:raw="The zero-based ordinal of the column to return the value of.">要返回其值的列的从零开始的序号。</param>
      <param name="version" vsli:raw="A &lt;see cref=&quot;T:System.Data.DataRowVersion&quot; /&gt; enumeration that specifies the version of the column value to return, such as &lt;see langword=&quot;Current&quot; /&gt; or &lt;see langword=&quot;Original&quot; /&gt; version.">
        <see cref="T:System.Data.DataRowVersion" /> 枚举，指定要返回的列值版本，如 <see langword="Current" /> 或 <see langword="Original" /> 版本。</param>
      <typeparam name="T" vsli:raw="A generic parameter that specifies the return type of the column.">指定列的返回类型的泛型形参。</typeparam>
      <exception cref="T:System.InvalidCastException" vsli:raw="The value type of the underlying column could not be cast to the type specified by the generic parameter, &lt;paramref name=&quot;T&quot; /&gt;.">基础列的值类型无法转换为泛型参数 <paramref name="T" /> 指定的类型。</exception>
      <exception cref="T:System.IndexOutOfRangeException" vsli:raw="The column specified by &lt;paramref name=&quot;ordinal&quot; /&gt; does not exist in the &lt;see cref=&quot;T:System.Data.DataTable&quot; /&gt; that the &lt;see cref=&quot;T:System.Data.DataRow&quot; /&gt; is a part of.">
        <paramref name="ordinal" /> 指定的列不存在于包含 <see cref="T:System.Data.DataRow" /> 的 <see cref="T:System.Data.DataTable" /> 中。</exception>
      <exception cref="T:System.NullReferenceException" vsli:raw="A null value was assigned to a non-nullable type.">将“null”值赋给了不可为 null 的类型****。</exception>
      <returns vsli:raw="The value, of type &lt;paramref name=&quot;T&quot; /&gt;, of the &lt;see cref=&quot;T:System.Data.DataColumn&quot; /&gt; specified by &lt;paramref name=&quot;ordinal&quot; /&gt; and &lt;paramref name=&quot;version&quot; /&gt;.">由 <paramref name="ordinal" /> 和 <paramref name="version" /> 指定的 <paramref name="T" /> 类型的 <see cref="T:System.Data.DataColumn" /> 值。</returns>
    </member>
    <member name="M:System.Data.DataRowExtensions.Field``1(System.Data.DataRow,System.String)">
      <summary vsli:raw="Provides strongly-typed access to each of the column values in the specified row. The &lt;see cref=&quot;M:System.Data.DataRowExtensions.Field``1(System.Data.DataRow,System.String)&quot; /&gt; method also supports nullable types.">为指定行中的每个列值提供强类型访问。 <see cref="M:System.Data.DataRowExtensions.Field``1(System.Data.DataRow,System.String)" /> 方法还支持可以为 null 的类型。</summary>
      <param name="row" vsli:raw="The input &lt;see cref=&quot;T:System.Data.DataRow&quot; /&gt;, which acts as the &lt;see langword=&quot;this&quot; /&gt; instance for the extension method.">输入 <see cref="T:System.Data.DataRow" />，作为扩展方法的 <see langword="this" /> 实例。</param>
      <param name="columnName" vsli:raw="The name of the column to return the value of.">要返回其值的列名称。</param>
      <typeparam name="T" vsli:raw="A generic parameter that specifies the return type of the column.">指定列的返回类型的泛型形参。</typeparam>
      <exception cref="T:System.InvalidCastException" vsli:raw="The value type of the underlying column could not be cast to the type specified by the generic parameter, &lt;paramref name=&quot;T&quot; /&gt;.">基础列的值类型无法转换为泛型参数 <paramref name="T" /> 指定的类型。</exception>
      <exception cref="T:System.IndexOutOfRangeException" vsli:raw="The column specified by &lt;paramref name=&quot;columnName&quot; /&gt; does not occur in the &lt;see cref=&quot;T:System.Data.DataTable&quot; /&gt; that the &lt;see cref=&quot;T:System.Data.DataRow&quot; /&gt; is a part of.">
        <paramref name="columnName" /> 指定的列不会出现在包含 <see cref="T:System.Data.DataRow" /> 的 <see cref="T:System.Data.DataTable" /> 中。</exception>
      <exception cref="T:System.NullReferenceException" vsli:raw="A &lt;see langword=&quot;null&quot; /&gt; value was assigned to a non-nullable type.">将 <see langword="null" /> 值分配给不可为 null 的类型。</exception>
      <returns vsli:raw="The value, of type &lt;paramref name=&quot;T&quot; /&gt;, of the &lt;see cref=&quot;T:System.Data.DataColumn&quot; /&gt; specified by &lt;paramref name=&quot;columnName&quot; /&gt;.">由 <paramref name="columnName" /> 指定的 <paramref name="T" /> 类型的 <see cref="T:System.Data.DataColumn" /> 值。</returns>
    </member>
    <member name="M:System.Data.DataRowExtensions.Field``1(System.Data.DataRow,System.String,System.Data.DataRowVersion)">
      <summary vsli:raw="Provides strongly-typed access to each of the column values in the specified row. The &lt;see cref=&quot;M:System.Data.DataRowExtensions.Field``1(System.Data.DataRow,System.String,System.Data.DataRowVersion)&quot; /&gt; method also supports nullable types.">为指定行中的每个列值提供强类型访问。 <see cref="M:System.Data.DataRowExtensions.Field``1(System.Data.DataRow,System.String,System.Data.DataRowVersion)" /> 方法还支持可以为 null 的类型。</summary>
      <param name="row" vsli:raw="The input &lt;see cref=&quot;T:System.Data.DataRow&quot; /&gt;, which acts as the &lt;see langword=&quot;this&quot; /&gt; instance for the extension method.">输入 <see cref="T:System.Data.DataRow" />，作为扩展方法的 <see langword="this" /> 实例。</param>
      <param name="columnName" vsli:raw="The name of the column to return the value of.">要返回其值的列名称。</param>
      <param name="version" vsli:raw="A &lt;see cref=&quot;T:System.Data.DataRowVersion&quot; /&gt; enumeration that specifies the version of the column value to return, such as &lt;see langword=&quot;Current&quot; /&gt; or &lt;see langword=&quot;Original&quot; /&gt; version.">
        <see cref="T:System.Data.DataRowVersion" /> 枚举，指定要返回的列值版本，如 <see langword="Current" /> 或 <see langword="Original" /> 版本。</param>
      <typeparam name="T" vsli:raw="A generic parameter that specifies the return type of the column.">指定列的返回类型的泛型形参。</typeparam>
      <exception cref="T:System.InvalidCastException" vsli:raw="The value type of the underlying column could not be cast to the type specified by the generic parameter, &lt;paramref name=&quot;T&quot; /&gt;.">基础列的值类型无法转换为泛型参数 <paramref name="T" /> 指定的类型。</exception>
      <exception cref="T:System.IndexOutOfRangeException" vsli:raw="The column specified by &lt;paramref name=&quot;columnName&quot; /&gt; does not exist in the &lt;see cref=&quot;T:System.Data.DataTable&quot; /&gt; that the &lt;see cref=&quot;T:System.Data.DataRow&quot; /&gt; is a part of.">
        <paramref name="columnName" /> 指定的列不存在于包含 <see cref="T:System.Data.DataRow" /> 的 <see cref="T:System.Data.DataTable" /> 中。</exception>
      <exception cref="T:System.NullReferenceException" vsli:raw="A null value was assigned to a non-nullable type.">将“null”值赋给了不可为 null 的类型****。</exception>
      <returns vsli:raw="The value, of type &lt;paramref name=&quot;T&quot; /&gt;, of the &lt;see cref=&quot;T:System.Data.DataColumn&quot; /&gt; specified by &lt;paramref name=&quot;columnName&quot; /&gt; and &lt;paramref name=&quot;version&quot; /&gt;.">由 <paramref name="columnName" /> 和 <paramref name="version" /> 指定的 <paramref name="T" /> 类型的 <see cref="T:System.Data.DataColumn" /> 值。</returns>
    </member>
    <member name="M:System.Data.DataRowExtensions.SetField``1(System.Data.DataRow,System.Data.DataColumn,``0)">
      <summary vsli:raw="Sets a new value for the specified column in the &lt;see cref=&quot;T:System.Data.DataRow&quot; /&gt;. The &lt;see cref=&quot;M:System.Data.DataRowExtensions.SetField``1(System.Data.DataRow,System.Data.DataColumn,``0)&quot; /&gt; method also supports nullable types.">为 <see cref="T:System.Data.DataRow" /> 中的指定列设置一个新值。 <see cref="M:System.Data.DataRowExtensions.SetField``1(System.Data.DataRow,System.Data.DataColumn,``0)" /> 方法还支持可以为 null 的类型。</summary>
      <param name="row" vsli:raw="The input &lt;see cref=&quot;T:System.Data.DataRow&quot; /&gt;, which acts as the &lt;see langword=&quot;this&quot; /&gt; instance for the extension method.">输入 <see cref="T:System.Data.DataRow" />，作为扩展方法的 <see langword="this" /> 实例。</param>
      <param name="column" vsli:raw="The input &lt;see cref=&quot;T:System.Data.DataColumn&quot; /&gt; specifies which row value to retrieve.">输入 <see cref="T:System.Data.DataColumn" /> 指定要检索的行值。</param>
      <param name="value" vsli:raw="The new row value for the specified column, of type &lt;paramref name=&quot;T&quot; /&gt;.">指定列的新行值，类型为 <paramref name="T" />。</param>
      <typeparam name="T" vsli:raw="A generic parameter that specifies the value type of the column.">指定列的值类型的泛型形参。</typeparam>
      <exception cref="T:System.ArgumentException" vsli:raw="The column specified by &lt;paramref name=&quot;column&quot; /&gt; cannot be found.">找不到由 <paramref name="column" /> 指定的列。</exception>
      <exception cref="T:System.ArgumentNullException" vsli:raw="The &lt;paramref name=&quot;column&quot; /&gt; is null.">
        <paramref name="column" /> 为“null”。</exception>
      <exception cref="T:System.Data.DeletedRowInaccessibleException" vsli:raw="Occurs when attempting to set a value on a deleted row.">尝试对已删除的行设置值时发生。</exception>
      <exception cref="T:System.InvalidCastException" vsli:raw="The value type of the underlying column could not be cast to the type specified by the generic parameter, &lt;paramref name=&quot;T&quot; /&gt;.">基础列的值类型无法转换为泛型参数 <paramref name="T" /> 指定的类型。</exception>
    </member>
    <member name="M:System.Data.DataRowExtensions.SetField``1(System.Data.DataRow,System.Int32,``0)">
      <summary vsli:raw="Sets a new value for the specified column in the &lt;see cref=&quot;T:System.Data.DataRow&quot; /&gt; the method is called on. The &lt;see cref=&quot;M:System.Data.DataRowExtensions.SetField``1(System.Data.DataRow,System.Int32,``0)&quot; /&gt; method also supports nullable types.">为在其上调用此方法的 <see cref="T:System.Data.DataRow" /> 中的指定列设置一个新值。 <see cref="M:System.Data.DataRowExtensions.SetField``1(System.Data.DataRow,System.Int32,``0)" /> 方法还支持可以为 null 的类型。</summary>
      <param name="row" vsli:raw="The input &lt;see cref=&quot;T:System.Data.DataRow&quot; /&gt;, which acts as the &lt;see langword=&quot;this&quot; /&gt; instance for the extension method.">输入 <see cref="T:System.Data.DataRow" />，作为扩展方法的 <see langword="this" /> 实例。</param>
      <param name="columnIndex" vsli:raw="The zero-based ordinal of the column to set the value of.">要设置其值的列的从零开始的序号。</param>
      <param name="value" vsli:raw="The new row value for the specified column, of type &lt;paramref name=&quot;T&quot; /&gt;.">指定列的新行值，类型为 <paramref name="T" />。</param>
      <typeparam name="T" vsli:raw="A generic parameter that specifies the value type of the column.">指定列的值类型的泛型形参。</typeparam>
      <exception cref="T:System.Data.DeletedRowInaccessibleException" vsli:raw="Occurs when attempting to set a value on a deleted row.">尝试对已删除的行设置值时发生。</exception>
      <exception cref="T:System.IndexOutOfRangeException" vsli:raw="The &lt;paramref name=&quot;ordinal&quot; /&gt; argument is out of range.">
        <paramref name="ordinal" /> 参数超出范围。</exception>
      <exception cref="T:System.InvalidCastException" vsli:raw="The value type of the underlying column could be not cast to the type specified by the generic parameter, &lt;paramref name=&quot;T&quot; /&gt;.">基础列的值类型无法转换为泛型参数 <paramref name="T" /> 指定的类型。</exception>
    </member>
    <member name="M:System.Data.DataRowExtensions.SetField``1(System.Data.DataRow,System.String,``0)">
      <summary vsli:raw="Sets a new value for the specified column in the &lt;see cref=&quot;T:System.Data.DataRow&quot; /&gt;. The &lt;see cref=&quot;M:System.Data.DataRowExtensions.SetField``1(System.Data.DataRow,System.String,``0)&quot; /&gt; method also supports nullable types.">为 <see cref="T:System.Data.DataRow" /> 中的指定列设置一个新值。 <see cref="M:System.Data.DataRowExtensions.SetField``1(System.Data.DataRow,System.String,``0)" /> 方法还支持可以为 null 的类型。</summary>
      <param name="row" vsli:raw="The input &lt;see cref=&quot;T:System.Data.DataRow&quot; /&gt;, which acts as the &lt;see langword=&quot;this&quot; /&gt; instance for the extension method.">输入 <see cref="T:System.Data.DataRow" />，作为扩展方法的 <see langword="this" /> 实例。</param>
      <param name="columnName" vsli:raw="The name of the column to set the value of.">要设置其值的列的名称。</param>
      <param name="value" vsli:raw="The new row value for the specified column, of type &lt;paramref name=&quot;T&quot; /&gt;.">指定列的新行值，类型为 <paramref name="T" />。</param>
      <typeparam name="T" vsli:raw="A generic parameter that specifies the value type of the column.">指定列的值类型的泛型形参。</typeparam>
      <exception cref="T:System.ArgumentException" vsli:raw="The column specified by &lt;paramref name=&quot;columnName&quot; /&gt; cannot be found.">找不到由 <paramref name="columnName" /> 指定的列。</exception>
      <exception cref="T:System.Data.DeletedRowInaccessibleException" vsli:raw="Occurs when attempting to set a value on a deleted row.">尝试对已删除的行设置值时发生。</exception>
      <exception cref="T:System.InvalidCastException" vsli:raw="The value type of the underlying column could not be cast to the type specified by the generic parameter, &lt;paramref name=&quot;T&quot; /&gt;.">基础列的值类型无法转换为泛型参数 <paramref name="T" /> 指定的类型。</exception>
    </member>
    <member name="T:System.Data.DataRowState">
      <summary vsli:raw="Gets the state of a &lt;see cref=&quot;T:System.Data.DataRow&quot; /&gt; object.">获取 <see cref="T:System.Data.DataRow" /> 对象的状态。</summary>
    </member>
    <member name="F:System.Data.DataRowState.Added">
      <summary vsli:raw="The row has been added to a &lt;see cref=&quot;T:System.Data.DataRowCollection&quot; /&gt;, and &lt;see cref=&quot;M:System.Data.DataRow.AcceptChanges&quot; /&gt; has not been called.">该行已添加到 <see cref="T:System.Data.DataRowCollection" /> 中，<see cref="M:System.Data.DataRow.AcceptChanges" /> 尚未调用。</summary>
    </member>
    <member name="F:System.Data.DataRowState.Deleted">
      <summary vsli:raw="The row was deleted using the &lt;see cref=&quot;M:System.Data.DataRow.Delete&quot; /&gt; method of the &lt;see cref=&quot;T:System.Data.DataRow&quot; /&gt;.">该行已通过 <see cref="M:System.Data.DataRow.Delete" /> 的 <see cref="T:System.Data.DataRow" /> 方法被删除。</summary>
    </member>
    <member name="F:System.Data.DataRowState.Detached">
      <summary vsli:raw="The row has been created but is not part of any &lt;see cref=&quot;T:System.Data.DataRowCollection&quot; /&gt;. A &lt;see cref=&quot;T:System.Data.DataRow&quot; /&gt; is in this state immediately after it has been created and before it is added to a collection, or if it has been removed from a collection.">已创建该行，但它不是任何 <see cref="T:System.Data.DataRowCollection" /> 的一部分。 <see cref="T:System.Data.DataRow" /> 在以下情况下立即处于此状态：创建之后添加到集合中之前；或从集合中移除之后。</summary>
    </member>
    <member name="F:System.Data.DataRowState.Modified">
      <summary vsli:raw="The row has been modified and &lt;see cref=&quot;M:System.Data.DataRow.AcceptChanges&quot; /&gt; has not been called.">该行已被修改，<see cref="M:System.Data.DataRow.AcceptChanges" /> 尚未调用。</summary>
    </member>
    <member name="F:System.Data.DataRowState.Unchanged">
      <summary vsli:raw="The row has not changed since &lt;see cref=&quot;M:System.Data.DataRow.AcceptChanges&quot; /&gt; was last called.">自上一次调用 <see cref="M:System.Data.DataRow.AcceptChanges" /> 之后，该行未更改。</summary>
    </member>
    <member name="T:System.Data.DataRowVersion">
      <summary vsli:raw="Describes the version of a &lt;see cref=&quot;T:System.Data.DataRow&quot; /&gt;.">介绍 <see cref="T:System.Data.DataRow" /> 的版本。</summary>
    </member>
    <member name="F:System.Data.DataRowVersion.Current">
      <summary vsli:raw="The row contains current values.">包含其当前值的行。</summary>
    </member>
    <member name="F:System.Data.DataRowVersion.Default">
      <summary vsli:raw="The default version of &lt;see cref=&quot;T:System.Data.DataRowState&quot; /&gt;. For a &lt;see langword=&quot;DataRowState&quot; /&gt; value of &lt;see langword=&quot;Added&quot; /&gt;, &lt;see langword=&quot;Modified&quot; /&gt; or &lt;see langword=&quot;Deleted&quot; /&gt;, the default version is &lt;see langword=&quot;Current&quot; /&gt;. For a &lt;see cref=&quot;T:System.Data.DataRowState&quot; /&gt; value of &lt;see langword=&quot;Detached&quot; /&gt;, the version is &lt;see langword=&quot;Proposed&quot; /&gt;.">
        <see cref="T:System.Data.DataRowState" /> 的默认版本。 对于 <see langword="Added" />、<see langword="Modified" /> 或 <see langword="Deleted" /> 的 <see langword="DataRowState" /> 值，默认的版本是 <see langword="Current" />。 对于 <see langword="Detached" /> 的 <see cref="T:System.Data.DataRowState" /> 值，版本是 <see langword="Proposed" />。</summary>
    </member>
    <member name="F:System.Data.DataRowVersion.Original">
      <summary vsli:raw="The row contains its original values.">包含其原始值的行。</summary>
    </member>
    <member name="F:System.Data.DataRowVersion.Proposed">
      <summary vsli:raw="The row contains a proposed value.">包含建议值的行。</summary>
    </member>
    <member name="T:System.Data.DataRowView">
      <summary vsli:raw="Represents a customized view of a &lt;see cref=&quot;T:System.Data.DataRow&quot; /&gt;.">表示 <see cref="T:System.Data.DataRow" /> 的自定义视图。</summary>
    </member>
    <member name="E:System.Data.DataRowView.PropertyChanged">
      <summary vsli:raw="Event that is raised when a &lt;see cref=&quot;T:System.Data.DataRowView&quot; /&gt; property is changed.">当 <see cref="T:System.Data.DataRowView" /> 属性发生更改时引发的事件。</summary>
    </member>
    <member name="M:System.Data.DataRowView.BeginEdit">
      <summary vsli:raw="Begins an edit procedure.">开始编辑过程。</summary>
    </member>
    <member name="M:System.Data.DataRowView.CancelEdit">
      <summary vsli:raw="Cancels an edit procedure.">取消编辑过程。</summary>
    </member>
    <member name="M:System.Data.DataRowView.CreateChildView(System.Data.DataRelation)">
      <summary vsli:raw="Returns a &lt;see cref=&quot;T:System.Data.DataView&quot; /&gt; for the child &lt;see cref=&quot;T:System.Data.DataTable&quot; /&gt; with the specified child &lt;see cref=&quot;T:System.Data.DataRelation&quot; /&gt;.">返回具有指定的子级 <see cref="T:System.Data.DataView" /> 的子级 <see cref="T:System.Data.DataTable" /> 的 <see cref="T:System.Data.DataRelation" />。</summary>
      <param name="relation" vsli:raw="The &lt;see cref=&quot;T:System.Data.DataRelation&quot; /&gt; object.">
        <see cref="T:System.Data.DataRelation" /> 对象。</param>
      <returns vsli:raw="a &lt;see cref=&quot;T:System.Data.DataView&quot; /&gt; for the child &lt;see cref=&quot;T:System.Data.DataTable&quot; /&gt;.">子级 <see cref="T:System.Data.DataView" /> 的 <see cref="T:System.Data.DataTable" />。</returns>
    </member>
    <member name="M:System.Data.DataRowView.CreateChildView(System.Data.DataRelation,System.Boolean)">
      <summary vsli:raw="Returns a &lt;see cref=&quot;T:System.Data.DataView&quot; /&gt; for the child &lt;see cref=&quot;T:System.Data.DataTable&quot; /&gt; with the specified &lt;see cref=&quot;T:System.Data.DataRelation&quot; /&gt; and parent.">返回具有指定的 <see cref="T:System.Data.DataRelation" /> 及父级的子级 <see cref="T:System.Data.DataTable" /> 的 <see cref="T:System.Data.DataView" />。</summary>
      <param name="relation" vsli:raw="The &lt;see cref=&quot;T:System.Data.DataRelation&quot; /&gt; object.">
        <see cref="T:System.Data.DataRelation" /> 对象。</param>
      <param name="followParent" vsli:raw="The parent object.">父 对象。</param>
      <exception cref="T:System.ArgumentException" vsli:raw="&lt;paramref name=&quot;relation&quot; /&gt; is &lt;see langword=&quot;null&quot; /&gt;.">
        <paramref name="relation" /> 为 <see langword="null" />。</exception>
      <returns vsli:raw="A &lt;see cref=&quot;T:System.Data.DataView&quot; /&gt; for the child &lt;see cref=&quot;T:System.Data.DataTable&quot; /&gt;.">子级 <see cref="T:System.Data.DataView" /> 的 <see cref="T:System.Data.DataTable" />。</returns>
    </member>
    <member name="M:System.Data.DataRowView.CreateChildView(System.String)">
      <summary vsli:raw="Returns a &lt;see cref=&quot;T:System.Data.DataView&quot; /&gt; for the child &lt;see cref=&quot;T:System.Data.DataTable&quot; /&gt; with the specified child &lt;see cref=&quot;T:System.Data.DataRelation&quot; /&gt; name.">返回具有指定的子级 <see cref="T:System.Data.DataView" /> 名称的子级 <see cref="T:System.Data.DataTable" /> 的 <see cref="T:System.Data.DataRelation" />。</summary>
      <param name="relationName" vsli:raw="A string containing the &lt;see cref=&quot;T:System.Data.DataRelation&quot; /&gt; name.">一个包含 <see cref="T:System.Data.DataRelation" /> 名称的字符串。</param>
      <returns vsli:raw="a &lt;see cref=&quot;T:System.Data.DataView&quot; /&gt; for the child &lt;see cref=&quot;T:System.Data.DataTable&quot; /&gt;.">子级 <see cref="T:System.Data.DataView" /> 的 <see cref="T:System.Data.DataTable" />。</returns>
    </member>
    <member name="M:System.Data.DataRowView.CreateChildView(System.String,System.Boolean)">
      <summary vsli:raw="Returns a &lt;see cref=&quot;T:System.Data.DataView&quot; /&gt; for the child &lt;see cref=&quot;T:System.Data.DataTable&quot; /&gt; with the specified &lt;see cref=&quot;T:System.Data.DataRelation&quot; /&gt; name and parent.">返回具有指定的 <see cref="T:System.Data.DataView" /> 及父级的子级 <see cref="T:System.Data.DataTable" /> 的 <see cref="T:System.Data.DataRelation" />。</summary>
      <param name="relationName" vsli:raw="A string containing the &lt;see cref=&quot;T:System.Data.DataRelation&quot; /&gt; name.">一个包含 <see cref="T:System.Data.DataRelation" /> 名称的字符串。</param>
      <param name="followParent" vsli:raw="&lt;see langword=&quot;true&quot; /&gt; to keep the created child view in sync with the parent; otherwise, &lt;see langword=&quot;false&quot; /&gt;.">要使创建的子视图与父级视图保持同步，则为 <see langword="true" />；否则，则为 <see langword="false" />。</param>
      <exception cref="T:System.ArgumentException" vsli:raw="&lt;paramref name=&quot;relation&quot; /&gt; is &lt;see langword=&quot;null&quot; /&gt;.">
        <paramref name="relation" /> 为 <see langword="null" />。</exception>
      <returns vsli:raw="a &lt;see cref=&quot;T:System.Data.DataView&quot; /&gt; for the child &lt;see cref=&quot;T:System.Data.DataTable&quot; /&gt;.">子级 <see cref="T:System.Data.DataView" /> 的 <see cref="T:System.Data.DataTable" />。</returns>
    </member>
    <member name="M:System.Data.DataRowView.Delete">
      <summary vsli:raw="Deletes a row.">删除行。</summary>
    </member>
    <member name="M:System.Data.DataRowView.EndEdit">
      <summary vsli:raw="Commits changes to the underlying &lt;see cref=&quot;T:System.Data.DataRow&quot; /&gt; and ends the editing session that was begun with &lt;see cref=&quot;M:System.Data.DataRowView.BeginEdit&quot; /&gt;.  Use &lt;see cref=&quot;M:System.Data.DataRowView.CancelEdit&quot; /&gt; to discard the changes made to the &lt;see cref=&quot;T:System.Data.DataRow&quot; /&gt;.">提交基础 <see cref="T:System.Data.DataRow" /> 的更改并结束使用 <see cref="M:System.Data.DataRowView.BeginEdit" />启动的编辑会话。  使用 <see cref="M:System.Data.DataRowView.CancelEdit" /> 放弃对 <see cref="T:System.Data.DataRow" /> 所做的更改。</summary>
    </member>
    <member name="M:System.Data.DataRowView.Equals(System.Object)">
      <summary vsli:raw="Gets a value indicating whether the current &lt;see cref=&quot;T:System.Data.DataRowView&quot; /&gt; is identical to the specified object.">获取一个值，该值指示当前的 <see cref="T:System.Data.DataRowView" /> 是否与指定对象相同。</summary>
      <param name="other" vsli:raw="An &lt;see cref=&quot;T:System.Object&quot; /&gt; to be compared.">要比较的 <see cref="T:System.Object" />。</param>
      <returns vsli:raw="&lt;see langword=&quot;true&quot; /&gt; if &lt;paramref name=&quot;object&quot; /&gt; is a &lt;see cref=&quot;T:System.Data.DataRowView&quot; /&gt; and it returns the same row as the current &lt;see cref=&quot;T:System.Data.DataRowView&quot; /&gt;; otherwise &lt;see langword=&quot;false&quot; /&gt;.">如果 <paramref name="object" /> 是 <see cref="T:System.Data.DataRowView" /> 且它返回与当前 <see cref="T:System.Data.DataRowView" /> 相同的行，则为 <see langword="true" />；否则为 <see langword="false" />。</returns>
    </member>
    <member name="M:System.Data.DataRowView.GetHashCode">
      <summary vsli:raw="Returns the hash code of the &lt;see cref=&quot;T:System.Data.DataRow&quot; /&gt; object.">返回 <see cref="T:System.Data.DataRow" /> 对象的哈希代码。</summary>
      <returns vsli:raw="A 32-bit signed integer hash code 1, which represents Boolean &lt;see langword=&quot;true&quot; /&gt; if the value of this instance is nonzero; otherwise the integer zero, which represents Boolean &lt;see langword=&quot;false&quot; /&gt;.">如果此实例的值不为零，则为 32 位有符号整数哈希代码 1，它表示布尔值 <see langword="true" />；否则为整数 0，它表示布尔值 <see langword="false" />。</returns>
    </member>
    <member name="M:System.Data.DataRowView.System#ComponentModel#ICustomTypeDescriptor#GetAttributes">
      <summary vsli:raw="Returns a collection of custom attributes for this instance of a component.">返回此组件实例的自定义属性的集合。</summary>
      <returns vsli:raw="An AttributeCollection containing the attributes for this object.">包含此对象的 AttributeCollection 特性。</returns>
    </member>
    <member name="M:System.Data.DataRowView.System#ComponentModel#ICustomTypeDescriptor#GetClassName">
      <summary vsli:raw="Returns the class name of this instance of a component.">返回此组件实例的类名称。</summary>
      <returns vsli:raw="The class name of this instance of a component.">此组件实例的类名。</returns>
    </member>
    <member name="M:System.Data.DataRowView.System#ComponentModel#ICustomTypeDescriptor#GetComponentName">
      <summary vsli:raw="Returns the name of this instance of a component.">返回某个组件的此实例的名称。</summary>
      <returns vsli:raw="The name of this instance of a component.">此组件实例的名称。</returns>
    </member>
    <member name="M:System.Data.DataRowView.System#ComponentModel#ICustomTypeDescriptor#GetConverter">
      <summary vsli:raw="Returns a type converter for this instance of a component.">返回此组件实例的类型转换器。</summary>
      <returns vsli:raw="The type converter for this instance of a component.">此组件实例的类型转换器。</returns>
    </member>
    <member name="M:System.Data.DataRowView.System#ComponentModel#ICustomTypeDescriptor#GetDefaultEvent">
      <summary vsli:raw="Returns the default event for this instance of a component.">返回某个组件的此实例的默认事件。</summary>
      <returns vsli:raw="The default event for this instance of a component.">此组件实例的默认事件。</returns>
    </member>
    <member name="M:System.Data.DataRowView.System#ComponentModel#ICustomTypeDescriptor#GetDefaultProperty">
      <summary vsli:raw="Returns the default property for this instance of a component.">返回此组件实例的默认属性。</summary>
      <returns vsli:raw="The default property for this instance of a component.">此组件实例的默认属性。</returns>
    </member>
    <member name="M:System.Data.DataRowView.System#ComponentModel#ICustomTypeDescriptor#GetEditor(System.Type)">
      <summary vsli:raw="Returns an editor of the specified type for this instance of a component.">返回此组件实例的指定类型的编辑器。</summary>
      <param name="editorBaseType" vsli:raw="A &lt;see cref=&quot;T:System.Type&quot; /&gt; that represents the editor for this object.">表示该对象的编辑器的 <see cref="T:System.Type" />。</param>
      <returns vsli:raw="An &lt;see cref=&quot;T:System.Object&quot; /&gt; of the specified type that is the editor for this object, or &lt;see langword=&quot;null&quot; /&gt; if the editor cannot be found.">表示该对象编辑器的指定类型的 <see cref="T:System.Object" />；如果无法找到编辑器，则为 <see langword="null" />。</returns>
    </member>
    <member name="M:System.Data.DataRowView.System#ComponentModel#ICustomTypeDescriptor#GetEvents">
      <summary vsli:raw="Returns the events for this instance of a component.">返回此组件实例的事件。</summary>
      <returns vsli:raw="The events for this instance of a component.">此组件实例的事件。</returns>
    </member>
    <member name="M:System.Data.DataRowView.System#ComponentModel#ICustomTypeDescriptor#GetEvents(System.Attribute[])">
      <summary vsli:raw="Returns the events for this instance of a component with specified attributes.">返回具有指定特性的此组件实例的事件。</summary>
      <param name="attributes" vsli:raw="The attributes.">特性</param>
      <returns vsli:raw="The events for this instance of a component.">此组件实例的事件。</returns>
    </member>
    <member name="M:System.Data.DataRowView.System#ComponentModel#ICustomTypeDescriptor#GetProperties">
      <summary vsli:raw="Returns the properties for this instance of a component.">返回此组件实例的属性。</summary>
      <returns vsli:raw="The properties for this instance of a component.">此组件实例的属性。</returns>
    </member>
    <member name="M:System.Data.DataRowView.System#ComponentModel#ICustomTypeDescriptor#GetProperties(System.Attribute[])">
      <summary vsli:raw="Returns the properties for this instance of a component with specified attributes.">返回具有指定特性的此组件实例的属性。</summary>
      <param name="attributes" vsli:raw="The attributes.">属性。</param>
      <returns vsli:raw="The properties for this instance of a component.">此组件实例的属性。</returns>
    </member>
    <member name="M:System.Data.DataRowView.System#ComponentModel#ICustomTypeDescriptor#GetPropertyOwner(System.ComponentModel.PropertyDescriptor)">
      <summary vsli:raw="Returns an object that contains the property described by the specified property descriptor.">返回一个对象，该对象包含指定的属性描述符所描述的属性。</summary>
      <param name="pd" vsli:raw="A &lt;see cref=&quot;T:System.ComponentModel.PropertyDescriptor&quot; /&gt; that represents the property whose owner is to be found.">一个 <see cref="T:System.ComponentModel.PropertyDescriptor" />，表示要查找其所有者的属性。</param>
      <returns vsli:raw="An &lt;see cref=&quot;T:System.Object&quot; /&gt; that represents the owner of the specified property.">一个 <see cref="T:System.Object" />，表示指定属性的所有者。</returns>
    </member>
    <member name="P:System.Data.DataRowView.DataView">
      <summary vsli:raw="Gets the &lt;see cref=&quot;T:System.Data.DataView&quot; /&gt; to which this row belongs.">获取该行所属的 <see cref="T:System.Data.DataView" />。</summary>
      <returns vsli:raw="The &lt;see langword=&quot;DataView&quot; /&gt; to which this row belongs.">该行所属的 <see langword="DataView" />。</returns>
    </member>
    <member name="P:System.Data.DataRowView.IsEdit">
      <summary vsli:raw="Indicates whether the row is in edit mode.">指示行是否处于编辑模式。</summary>
      <returns vsli:raw="&lt;see langword=&quot;true&quot; /&gt; if the row is in edit mode; otherwise &lt;see langword=&quot;false&quot; /&gt;.">如果行处于编辑模式，则为 <see langword="true" />；否则为 <see langword="false" />。</returns>
    </member>
    <member name="P:System.Data.DataRowView.IsNew">
      <summary vsli:raw="Indicates whether a &lt;see cref=&quot;T:System.Data.DataRowView&quot; /&gt; is new.">指示 <see cref="T:System.Data.DataRowView" /> 是否为新。</summary>
      <returns vsli:raw="&lt;see langword=&quot;true&quot; /&gt; if the row is new; otherwise &lt;see langword=&quot;false&quot; /&gt;.">如果是新行，则为 <see langword="true" />；否则为 <see langword="false" />。</returns>
    </member>
    <member name="P:System.Data.DataRowView.Item(System.Int32)">
      <summary vsli:raw="Gets or sets a value in a specified column.">获取或设置指定列中的值。</summary>
      <param name="ndx" vsli:raw="The column index.">列索引。</param>
      <exception cref="T:System.Data.DataException" vsli:raw="The &lt;see cref=&quot;P:System.Data.DataRowView.DataView&quot; /&gt; doesn't allow edits and &lt;see cref=&quot;T:System.Data.DataRowView&quot; /&gt; is not new.">
        <see cref="P:System.Data.DataRowView.DataView" /> 不允许编辑，<see cref="T:System.Data.DataRowView" /> 不是新项。</exception>
      <exception cref="T:System.IndexOutOfRangeException" vsli:raw="No column corresponds to that index value.">任何列都不与该索引值相对应。</exception>
      <returns vsli:raw="The value of the column.">列的值。</returns>
    </member>
    <member name="P:System.Data.DataRowView.Item(System.String)">
      <summary vsli:raw="Gets or sets a value in a specified column.">获取或设置指定列中的值。</summary>
      <param name="property" vsli:raw="String that contains the specified column.">包含指定列的字符串。</param>
      <exception cref="T:System.ArgumentException" vsli:raw="A column with the specified name or relation was not found.&#xA;        &#xA;-or-&#xA;&#xA;The &lt;see cref=&quot;P:System.Data.DataRowView.DataView&quot; /&gt; doesn't allow edits and &lt;see cref=&quot;T:System.Data.DataRowView&quot; /&gt; is not new.">找不到具有指定名称或关系的列。
        
- 或 -

<see cref="P:System.Data.DataRowView.DataView" /> 不允许编辑，<see cref="T:System.Data.DataRowView" /> 不是新项。</exception>
      <exception cref="T:System.Data.DataException" vsli:raw="Unmatched &lt;paramref name=&quot;property&quot; /&gt; when setting a value.">设置值时，<paramref name="property" /> 不匹配。</exception>
      <returns vsli:raw="The value of the column.">列的值。</returns>
    </member>
    <member name="P:System.Data.DataRowView.Row">
      <summary vsli:raw="Gets the &lt;see cref=&quot;T:System.Data.DataRow&quot; /&gt; being viewed.">获取正被查看的 <see cref="T:System.Data.DataRow" />。</summary>
      <returns vsli:raw="The &lt;see cref=&quot;T:System.Data.DataRow&quot; /&gt; being viewed by the &lt;see cref=&quot;T:System.Data.DataRowView&quot; /&gt;.">正被 <see cref="T:System.Data.DataRow" /> 查看的 <see cref="T:System.Data.DataRowView" />。</returns>
    </member>
    <member name="P:System.Data.DataRowView.RowVersion">
      <summary vsli:raw="Gets the current version description of the &lt;see cref=&quot;T:System.Data.DataRow&quot; /&gt;.">获取 <see cref="T:System.Data.DataRow" /> 的当前版本说明。</summary>
      <returns vsli:raw="One of the &lt;see cref=&quot;T:System.Data.DataRowVersion&quot; /&gt; values. Possible values for the &lt;see cref=&quot;P:System.Data.DataRowView.RowVersion&quot; /&gt; property are &lt;see langword=&quot;Default&quot; /&gt;, &lt;see langword=&quot;Original&quot; /&gt;, &lt;see langword=&quot;Current&quot; /&gt;, and &lt;see langword=&quot;Proposed&quot; /&gt;.">
        <see cref="T:System.Data.DataRowVersion" /> 值之一。 <see cref="P:System.Data.DataRowView.RowVersion" /> 属性的可能值有：<see langword="Default" />、<see langword="Original" />、<see langword="Current" /> 和 <see langword="Proposed" />。</returns>
    </member>
    <member name="P:System.Data.DataRowView.System#ComponentModel#IDataErrorInfo#Error">
      <summary vsli:raw="Gets a message that describes any validation errors for the object.">获取描述该对象的任何验证错误的消息。</summary>
      <returns vsli:raw="The validation error on the object.">对象上的验证错误。</returns>
    </member>
    <member name="P:System.Data.DataRowView.System#ComponentModel#IDataErrorInfo#Item(System.String)">
      <summary vsli:raw="Gets the error message for the property with the given name.">获取具有给定名称的属性的错误信息。</summary>
      <param name="colName" vsli:raw="The name of the property whose error message to get.">要获取其错误信息的属性的名称。</param>
      <returns vsli:raw="The error message for the property. The default is an empty string (&quot;&quot;).">该属性的错误信息。 默认值为空字符串("")。</returns>
    </member>
    <member name="T:System.Data.DataSet">
      <summary vsli:raw="Represents an in-memory cache of data.">表示数据的内存中缓存。</summary>
    </member>
    <member name="E:System.Data.DataSet.Initialized">
      <summary vsli:raw="Occurs after the &lt;see cref=&quot;T:System.Data.DataSet&quot; /&gt; is initialized.">初始化 <see cref="T:System.Data.DataSet" /> 后发生。</summary>
    </member>
    <member name="E:System.Data.DataSet.MergeFailed">
      <summary vsli:raw="Occurs when a target and source &lt;see cref=&quot;T:System.Data.DataRow&quot; /&gt; have the same primary key value, and &lt;see cref=&quot;P:System.Data.DataSet.EnforceConstraints&quot; /&gt; is set to true.">当目标和源 <see cref="T:System.Data.DataRow" /> 的主键值相同且 <see cref="P:System.Data.DataSet.EnforceConstraints" /> 设置为真时发生。</summary>
    </member>
    <member name="M:System.Data.DataSet.#ctor">
      <summary vsli:raw="Initializes a new instance of the &lt;see cref=&quot;T:System.Data.DataSet&quot; /&gt; class.">初始化 <see cref="T:System.Data.DataSet" /> 类的新实例。</summary>
    </member>
    <member name="M:System.Data.DataSet.#ctor(System.Runtime.Serialization.SerializationInfo,System.Runtime.Serialization.StreamingContext)">
      <summary vsli:raw="Initializes a new instance of the &lt;see cref=&quot;T:System.Data.DataSet&quot; /&gt; class with serialized data.">初始化具有给定序列化信息和上下文的 <see cref="T:System.Data.DataSet" /> 类的新实例。</summary>
      <param name="info" vsli:raw="The serialized data for the data set.">序列化或反序列化对象所需的数据。</param>
      <param name="context" vsli:raw="Contextual information about the serialized stream.">给定序列化流的源和目标。</param>
    </member>
    <member name="M:System.Data.DataSet.#ctor(System.Runtime.Serialization.SerializationInfo,System.Runtime.Serialization.StreamingContext,System.Boolean)">
      <summary vsli:raw="Initializes a new instance of the &lt;see cref=&quot;T:System.Data.DataSet&quot; /&gt; class with serialized data.">初始化 <see cref="T:System.Data.DataSet" /> 类的新实例。</summary>
      <param name="info" vsli:raw="The serialized data for the data set.">
        <see cref="T:System.Runtime.Serialization.SerializationInfo" /> 对象。</param>
      <param name="context" vsli:raw="Contextual information about the serialized stream.">
        <see cref="T:System.Runtime.Serialization.StreamingContext" /> 对象。</param>
      <param name="ConstructSchema" vsli:raw="">布尔值。</param>
    </member>
    <member name="M:System.Data.DataSet.#ctor(System.String)">
      <summary vsli:raw="Initializes a new instance of the &lt;see cref=&quot;T:System.Data.DataSet&quot; /&gt; class with the given name.">用给定名称初始化 <see cref="T:System.Data.DataSet" /> 类的新实例。</summary>
      <param name="dataSetName" vsli:raw="The name of the &lt;see cref=&quot;T:System.Data.DataSet&quot; /&gt;.">
        <see cref="T:System.Data.DataSet" /> 的名称。</param>
    </member>
    <member name="M:System.Data.DataSet.AcceptChanges">
      <summary vsli:raw="Commits all the changes made to this &lt;see cref=&quot;T:System.Data.DataSet&quot; /&gt; since it was loaded or since the last time &lt;see cref=&quot;M:System.Data.DataSet.AcceptChanges&quot; /&gt; was called.">提交自加载此 <see cref="T:System.Data.DataSet" /> 或上次调用 <see cref="M:System.Data.DataSet.AcceptChanges" /> 以来对其进行的所有更改。</summary>
    </member>
    <member name="M:System.Data.DataSet.BeginInit">
      <summary vsli:raw="Begins the initialization of a &lt;see cref=&quot;T:System.Data.DataSet&quot; /&gt; that is used on a form or used by another component. The initialization occurs at run time.">开始初始化在窗体上使用或由另一个组件使用的 <see cref="T:System.Data.DataSet" />。 初始化发生在运行时。</summary>
    </member>
    <member name="M:System.Data.DataSet.Clear">
      <summary vsli:raw="Clears the &lt;see cref=&quot;T:System.Data.DataSet&quot; /&gt; of any data by removing all rows in all tables.">通过移除所有表中的所有行来清除任何数据的 <see cref="T:System.Data.DataSet" />。</summary>
    </member>
    <member name="M:System.Data.DataSet.Clone">
      <summary vsli:raw="Copies the structure of the &lt;see cref=&quot;T:System.Data.DataSet&quot; /&gt;, including all &lt;see cref=&quot;T:System.Data.DataTable&quot; /&gt; schemas, relations, and constraints. Does not copy any data.">复制 <see cref="T:System.Data.DataSet" /> 的结构，包括所有 <see cref="T:System.Data.DataTable" /> 架构、关系和约束。 不要复制任何数据。</summary>
      <returns vsli:raw="A new &lt;see cref=&quot;T:System.Data.DataSet&quot; /&gt; with the same schema as the current &lt;see cref=&quot;T:System.Data.DataSet&quot; /&gt;, but none of the data.">新 <see cref="T:System.Data.DataSet" />，其架构与当前 <see cref="T:System.Data.DataSet" /> 的架构相同，但是不包含任何数据。</returns>
    </member>
    <member name="M:System.Data.DataSet.Copy">
      <summary vsli:raw="Copies both the structure and data for this &lt;see cref=&quot;T:System.Data.DataSet&quot; /&gt;.">复制该 <see cref="T:System.Data.DataSet" /> 的结构和数据。</summary>
      <returns vsli:raw="A new &lt;see cref=&quot;T:System.Data.DataSet&quot; /&gt; with the same structure (table schemas, relations, and constraints) and data as this &lt;see cref=&quot;T:System.Data.DataSet&quot; /&gt;.">新的 <see cref="T:System.Data.DataSet" />，具有与该 <see cref="T:System.Data.DataSet" /> 相同的结构（表架构、关系和约束）和数据。  
  
 <block subset="none" type="note"><para>  
 如果已创建这些类的子类，则副本也将属于相同的子类。</para></block></returns>
    </member>
    <member name="M:System.Data.DataSet.CreateDataReader">
      <summary vsli:raw="Returns a &lt;see cref=&quot;T:System.Data.DataTableReader&quot; /&gt; with one result set per &lt;see cref=&quot;T:System.Data.DataTable&quot; /&gt;, in the same sequence as the tables appear in the &lt;see cref=&quot;P:System.Data.DataSet.Tables&quot; /&gt; collection.">为每个 <see cref="T:System.Data.DataTableReader" /> 返回带有一个结果集的 <see cref="T:System.Data.DataTable" />，顺序与 <see cref="P:System.Data.DataSet.Tables" /> 集合中表的显示顺序相同。</summary>
      <returns vsli:raw="A &lt;see cref=&quot;T:System.Data.DataTableReader&quot; /&gt; containing one or more result sets, corresponding to the &lt;see cref=&quot;T:System.Data.DataTable&quot; /&gt; instances contained within the source &lt;see cref=&quot;T:System.Data.DataSet&quot; /&gt;.">包含一个或多个结果集的 <see cref="T:System.Data.DataTableReader" />，与源 <see cref="T:System.Data.DataTable" /> 中包含的 <see cref="T:System.Data.DataSet" /> 实例相对应。</returns>
    </member>
    <member name="M:System.Data.DataSet.CreateDataReader(System.Data.DataTable[])">
      <summary vsli:raw="Returns a &lt;see cref=&quot;T:System.Data.DataTableReader&quot; /&gt; with one result set per &lt;see cref=&quot;T:System.Data.DataTable&quot; /&gt;.">为每个 <see cref="T:System.Data.DataTableReader" /> 返回带有一个结果集的 <see cref="T:System.Data.DataTable" />。</summary>
      <param name="dataTables" vsli:raw="An array of DataTables providing the order of the result sets to be returned in the &lt;see cref=&quot;T:System.Data.DataTableReader&quot; /&gt;.">一个 DataTable 数组，它提供要在 <see cref="T:System.Data.DataTableReader" /> 中返回的结果集的顺序。</param>
      <returns vsli:raw="A &lt;see cref=&quot;T:System.Data.DataTableReader&quot; /&gt; containing one or more result sets, corresponding to the &lt;see cref=&quot;T:System.Data.DataTable&quot; /&gt; instances contained within the source &lt;see cref=&quot;T:System.Data.DataSet&quot; /&gt;. The returned result sets are in the order specified by the &lt;paramref name=&quot;dataTables&quot; /&gt; parameter.">包含一个或多个结果集的 <see cref="T:System.Data.DataTableReader" />，与源 <see cref="T:System.Data.DataTable" /> 中包含的 <see cref="T:System.Data.DataSet" /> 实例相对应。 返回的结果集按 <paramref name="dataTables" /> 参数所指定的顺序排列。</returns>
    </member>
    <member name="M:System.Data.DataSet.DetermineSchemaSerializationMode(System.Runtime.Serialization.SerializationInfo,System.Runtime.Serialization.StreamingContext)">
      <summary vsli:raw="Determines the &lt;see cref=&quot;P:System.Data.DataSet.SchemaSerializationMode&quot; /&gt; for a &lt;see cref=&quot;T:System.Data.DataSet&quot; /&gt;.">确定 <see cref="P:System.Data.DataSet.SchemaSerializationMode" /> 的 <see cref="T:System.Data.DataSet" />。</summary>
      <param name="info" vsli:raw="The &lt;see cref=&quot;T:System.Runtime.Serialization.SerializationInfo&quot; /&gt; that a &lt;see langword=&quot;DataSet&quot; /&gt;'s protected constructor &lt;see cref=&quot;M:System.Data.DataSet.#ctor(System.Runtime.Serialization.SerializationInfo,System.Runtime.Serialization.StreamingContext)&quot; /&gt; is invoked with during deserialization in remoting scenarios.">
        <see cref="T:System.Runtime.Serialization.SerializationInfo" />，在远程处理方案中进行反序列化期间将使用它调用 <see langword="DataSet" /> 的受保护构造函数 <see cref="M:System.Data.DataSet.#ctor(System.Runtime.Serialization.SerializationInfo,System.Runtime.Serialization.StreamingContext)" />。</param>
      <param name="context" vsli:raw="The &lt;see cref=&quot;T:System.Runtime.Serialization.StreamingContext&quot; /&gt; that a &lt;see langword=&quot;DataSet&quot; /&gt;'s protected constructor &lt;see cref=&quot;M:System.Data.DataSet.#ctor(System.Runtime.Serialization.SerializationInfo,System.Runtime.Serialization.StreamingContext)&quot; /&gt; is invoked with during deserialization in remoting scenarios.">
        <see cref="T:System.Runtime.Serialization.StreamingContext" />，在远程处理方案中进行反序列化期间将使用它调用 <see langword="DataSet" /> 的受保护构造函数 <see cref="M:System.Data.DataSet.#ctor(System.Runtime.Serialization.SerializationInfo,System.Runtime.Serialization.StreamingContext)" />。</param>
      <returns vsli:raw="An &lt;see cref=&quot;T:System.Data.SchemaSerializationMode&quot; /&gt; enumeration indicating whether schema information has been omitted from the payload.">一个 <see cref="T:System.Data.SchemaSerializationMode" /> 枚举，指示是否已从负载中忽略架构信息。</returns>
    </member>
    <member name="M:System.Data.DataSet.DetermineSchemaSerializationMode(System.Xml.XmlReader)">
      <summary vsli:raw="Determines the &lt;see cref=&quot;P:System.Data.DataSet.SchemaSerializationMode&quot; /&gt; for a &lt;see cref=&quot;T:System.Data.DataSet&quot; /&gt;.">确定 <see cref="P:System.Data.DataSet.SchemaSerializationMode" /> 的 <see cref="T:System.Data.DataSet" />。</summary>
      <param name="reader" vsli:raw="The &lt;see cref=&quot;T:System.Xml.XmlReader&quot; /&gt; instance that is passed during deserialization of the &lt;see cref=&quot;T:System.Data.DataSet&quot; /&gt;.">在对 <see cref="T:System.Xml.XmlReader" /> 进行反序列化期间传递的 <see cref="T:System.Data.DataSet" /> 实例。</param>
      <returns vsli:raw="An &lt;see cref=&quot;T:System.Data.SchemaSerializationMode&quot; /&gt; enumeration indicating whether schema information has been omitted from the payload.">一个 <see cref="T:System.Data.SchemaSerializationMode" /> 枚举，指示是否已从负载中忽略架构信息。</returns>
    </member>
    <member name="M:System.Data.DataSet.EndInit">
      <summary vsli:raw="Ends the initialization of a &lt;see cref=&quot;T:System.Data.DataSet&quot; /&gt; that is used on a form or used by another component. The initialization occurs at run time.">结束在窗体上使用或由另一个组件使用的 <see cref="T:System.Data.DataSet" /> 的初始化。 初始化发生在运行时。</summary>
    </member>
    <member name="M:System.Data.DataSet.GetChanges">
      <summary vsli:raw="Gets a copy of the &lt;see cref=&quot;T:System.Data.DataSet&quot; /&gt; that contains all changes made to it since it was loaded or since &lt;see cref=&quot;M:System.Data.DataSet.AcceptChanges&quot; /&gt; was last called.">获取 <see cref="T:System.Data.DataSet" /> 的副本，该副本包含自加载以来或自上次调用 <see cref="M:System.Data.DataSet.AcceptChanges" /> 以来对该数据集进行的所有更改。</summary>
      <returns vsli:raw="A copy of the changes from this &lt;see cref=&quot;T:System.Data.DataSet&quot; /&gt; that can have actions performed on it and later be merged back in using &lt;see cref=&quot;M:System.Data.DataSet.Merge(System.Data.DataSet)&quot; /&gt;. If no changed rows are found, the method returns &lt;see langword=&quot;null&quot; /&gt;.">此 <see cref="T:System.Data.DataSet" /> 中更改的副本，可以对该副本执行操作，然后可以使用 <see cref="M:System.Data.DataSet.Merge(System.Data.DataSet)" /> 将其合并回去。 如果未找到更改的行，则该方法将返回 <see langword="null" />。</returns>
    </member>
    <member name="M:System.Data.DataSet.GetChanges(System.Data.DataRowState)">
      <summary vsli:raw="Gets a copy of the &lt;see cref=&quot;T:System.Data.DataSet&quot; /&gt; containing all changes made to it since it was last loaded, or since &lt;see cref=&quot;M:System.Data.DataSet.AcceptChanges&quot; /&gt; was called, filtered by &lt;see cref=&quot;T:System.Data.DataRowState&quot; /&gt;.">获取由 <see cref="T:System.Data.DataRowState" /> 筛选的 <see cref="T:System.Data.DataSet" /> 的副本，该副本包含上次加载以来或调用 <see cref="M:System.Data.DataSet.AcceptChanges" /> 以来进行的所有更改。</summary>
      <param name="rowStates" vsli:raw="One of the &lt;see cref=&quot;T:System.Data.DataRowState&quot; /&gt; values.">
        <see cref="T:System.Data.DataRowState" /> 值之一。</param>
      <returns vsli:raw="A filtered copy of the &lt;see cref=&quot;T:System.Data.DataSet&quot; /&gt; that can have actions performed on it, and subsequently be merged back in using &lt;see cref=&quot;M:System.Data.DataSet.Merge(System.Data.DataSet)&quot; /&gt;. If no rows of the desired &lt;see cref=&quot;T:System.Data.DataRowState&quot; /&gt; are found, the method returns &lt;see langword=&quot;null&quot; /&gt;.">此 <see cref="T:System.Data.DataSet" /> 的筛选副本，可以对该副本执行操作，然后使用 <see cref="M:System.Data.DataSet.Merge(System.Data.DataSet)" /> 将其合并回数据集。 如果未找到所需 <see cref="T:System.Data.DataRowState" /> 的行，则该方法返回 <see langword="null" />。</returns>
    </member>
    <member name="M:System.Data.DataSet.GetDataSetSchema(System.Xml.Schema.XmlSchemaSet)">
      <summary vsli:raw="Gets a copy of &lt;see cref=&quot;T:System.Xml.Schema.XmlSchemaSet&quot; /&gt; for the DataSet.">获取数据集的 <see cref="T:System.Xml.Schema.XmlSchemaSet" /> 的副本。</summary>
      <param name="schemaSet" vsli:raw="The specified schema set.">指定的架构集。</param>
      <returns vsli:raw="A copy of &lt;see cref=&quot;T:System.Xml.Schema.XmlSchemaSet&quot; /&gt;.">
        <see cref="T:System.Xml.Schema.XmlSchemaSet" /> 的副本。</returns>
    </member>
    <member name="M:System.Data.DataSet.GetObjectData(System.Runtime.Serialization.SerializationInfo,System.Runtime.Serialization.StreamingContext)">
      <summary vsli:raw="Populates a serialization information object with the data needed to serialize the &lt;see cref=&quot;T:System.Data.DataSet&quot; /&gt;.">使用序列化 <see cref="T:System.Data.DataSet" /> 时所需的数据填充序列化信息对象。</summary>
      <param name="info" vsli:raw="A &lt;see cref=&quot;T:System.Runtime.Serialization.SerializationInfo&quot; /&gt; that holds the serialized data associated with the &lt;see cref=&quot;T:System.Data.DataSet&quot; /&gt;.">一个 <see cref="T:System.Runtime.Serialization.SerializationInfo" />，它保存与 <see cref="T:System.Data.DataSet" /> 关联的序列化数据。</param>
      <param name="context" vsli:raw="A &lt;see cref=&quot;T:System.Runtime.Serialization.StreamingContext&quot; /&gt; that contains the source and destination of the serialized stream associated with the &lt;see cref=&quot;T:System.Data.DataSet&quot; /&gt;.">一个 <see cref="T:System.Runtime.Serialization.StreamingContext" />，它包含与 <see cref="T:System.Data.DataSet" /> 关联的序列化流的源和目标。</param>
      <exception cref="T:System.ArgumentNullException" vsli:raw="The &lt;paramref name=&quot;info&quot; /&gt; parameter is &lt;see langword=&quot;null&quot; /&gt;.">
        <paramref name="info" /> 参数为 <see langword="null" />。</exception>
    </member>
    <member name="M:System.Data.DataSet.GetSchemaSerializable">
      <summary vsli:raw="Returns a serializable &lt;see cref=&quot;T:System.Xml.Schema.XmlSchema&quot; /&gt; instance.">返回一个可序列化的 <see cref="T:System.Xml.Schema.XmlSchema" /> 实例。</summary>
      <returns vsli:raw="The &lt;see cref=&quot;T:System.Xml.Schema.XmlSchema&quot; /&gt; instance.">
        <see cref="T:System.Xml.Schema.XmlSchema" /> 实例。</returns>
    </member>
    <member name="M:System.Data.DataSet.GetSerializationData(System.Runtime.Serialization.SerializationInfo,System.Runtime.Serialization.StreamingContext)">
      <summary vsli:raw="Deserializes the table data from the binary or XML stream.">从二进制或 XML 流反序列化表数据。</summary>
      <param name="info" vsli:raw="The &lt;see cref=&quot;T:System.Runtime.Serialization.SerializationInfo&quot; /&gt; instance.">
        <see cref="T:System.Runtime.Serialization.SerializationInfo" /> 实例。</param>
      <param name="context" vsli:raw="The streaming context.">流上下文。</param>
    </member>
    <member name="M:System.Data.DataSet.GetXml">
      <summary vsli:raw="Returns the XML representation of the data stored in the &lt;see cref=&quot;T:System.Data.DataSet&quot; /&gt;.">返回存储在 <see cref="T:System.Data.DataSet" /> 中的数据的 XML 表示形式。</summary>
      <returns vsli:raw="A string that is a representation of the data stored in the &lt;see cref=&quot;T:System.Data.DataSet&quot; /&gt;.">表示存储在 <see cref="T:System.Data.DataSet" /> 中的数据的字符串。</returns>
    </member>
    <member name="M:System.Data.DataSet.GetXmlSchema">
      <summary vsli:raw="Returns the XML Schema for the XML representation of the data stored in the &lt;see cref=&quot;T:System.Data.DataSet&quot; /&gt;.">返回存储在 <see cref="T:System.Data.DataSet" /> 中的数据的 XML 表示形式的 XML 架构。</summary>
      <returns vsli:raw="String that is the XML Schema for the XML representation of the data stored in the &lt;see cref=&quot;T:System.Data.DataSet&quot; /&gt;.">字符串，它是存储在 <see cref="T:System.Data.DataSet" /> 中的数据的 XML 表示形式的 XML 架构。</returns>
    </member>
    <member name="M:System.Data.DataSet.HasChanges">
      <summary vsli:raw="Gets a value indicating whether the &lt;see cref=&quot;T:System.Data.DataSet&quot; /&gt; has changes, including new, deleted, or modified rows.">获取一个值，该值指示 <see cref="T:System.Data.DataSet" /> 是否有更改，包括新增行、已删除的行或已修改的行。</summary>
      <returns vsli:raw="&lt;see langword=&quot;true&quot; /&gt; if the &lt;see cref=&quot;T:System.Data.DataSet&quot; /&gt; has changes; otherwise, &lt;see langword=&quot;false&quot; /&gt;.">如果 <see cref="T:System.Data.DataSet" /> 有更改，则返回 <see langword="true" />；否则，返回 <see langword="false" />。</returns>
    </member>
    <member name="M:System.Data.DataSet.HasChanges(System.Data.DataRowState)">
      <summary vsli:raw="Gets a value indicating whether the &lt;see cref=&quot;T:System.Data.DataSet&quot; /&gt; has changes, including new, deleted, or modified rows, filtered by &lt;see cref=&quot;T:System.Data.DataRowState&quot; /&gt;.">获取一个值，该值指示 <see cref="T:System.Data.DataSet" /> 是否有 <see cref="T:System.Data.DataRowState" /> 被筛选的更改，包括新增行、已删除的行或已修改的行。</summary>
      <param name="rowStates" vsli:raw="One of the &lt;see cref=&quot;T:System.Data.DataRowState&quot; /&gt; values.">
        <see cref="T:System.Data.DataRowState" /> 值之一。</param>
      <returns vsli:raw="&lt;see langword=&quot;true&quot; /&gt; if the &lt;see cref=&quot;T:System.Data.DataSet&quot; /&gt; has changes; otherwise, &lt;see langword=&quot;false&quot; /&gt;.">如果 <see cref="T:System.Data.DataSet" /> 有更改，则返回 <see langword="true" />；否则，返回 <see langword="false" />。</returns>
    </member>
    <member name="M:System.Data.DataSet.InferXmlSchema(System.IO.Stream,System.String[])">
      <summary vsli:raw="Applies the XML schema from the specified &lt;see cref=&quot;T:System.IO.Stream&quot; /&gt; to the &lt;see cref=&quot;T:System.Data.DataSet&quot; /&gt;.">将指定 <see cref="T:System.IO.Stream" /> 中的 XML 架构应用于 <see cref="T:System.Data.DataSet" />。</summary>
      <param name="stream" vsli:raw="The &lt;see langword=&quot;Stream&quot; /&gt; from which to read the schema.">将从其中读取该架构的 <see langword="Stream" />。</param>
      <param name="nsArray" vsli:raw="An array of namespace Uniform Resource Identifier (URI) strings to be excluded from schema inference.">要从架构推理中排除的命名空间统一资源标识符 (URI) 字符串的数组。</param>
    </member>
    <member name="M:System.Data.DataSet.InferXmlSchema(System.IO.TextReader,System.String[])">
      <summary vsli:raw="Applies the XML schema from the specified &lt;see cref=&quot;T:System.IO.TextReader&quot; /&gt; to the &lt;see cref=&quot;T:System.Data.DataSet&quot; /&gt;.">将指定 <see cref="T:System.IO.TextReader" /> 中的 XML 架构应用于 <see cref="T:System.Data.DataSet" />。</summary>
      <param name="reader" vsli:raw="The &lt;see langword=&quot;TextReader&quot; /&gt; from which to read the schema.">将从其中读取该架构的 <see langword="TextReader" />。</param>
      <param name="nsArray" vsli:raw="An array of namespace Uniform Resource Identifier (URI) strings to be excluded from schema inference.">要从架构推理中排除的命名空间统一资源标识符 (URI) 字符串的数组。</param>
    </member>
    <member name="M:System.Data.DataSet.InferXmlSchema(System.String,System.String[])">
      <summary vsli:raw="Applies the XML schema from the specified file to the &lt;see cref=&quot;T:System.Data.DataSet&quot; /&gt;.">将指定文件中的 XML 架构应用于 <see cref="T:System.Data.DataSet" />。</summary>
      <param name="fileName" vsli:raw="The name of the file (including the path) from which to read the schema.">从中读取架构的文件的名称（包括路径）。</param>
      <param name="nsArray" vsli:raw="An array of namespace Uniform Resource Identifier (URI) strings to be excluded from schema inference.">要从架构推理中排除的命名空间统一资源标识符 (URI) 字符串的数组。</param>
      <exception cref="T:System.Security.SecurityException" vsli:raw="&lt;see cref=&quot;T:System.Security.Permissions.FileIOPermission&quot; /&gt; is not set to &lt;see cref=&quot;F:System.Security.Permissions.FileIOPermissionAccess.Read&quot; /&gt;.">
        <see cref="T:System.Security.Permissions.FileIOPermission" /> 未设置为 <see cref="F:System.Security.Permissions.FileIOPermissionAccess.Read" />。</exception>
    </member>
    <member name="M:System.Data.DataSet.InferXmlSchema(System.Xml.XmlReader,System.String[])">
      <summary vsli:raw="Applies the XML schema from the specified &lt;see cref=&quot;T:System.Xml.XmlReader&quot; /&gt; to the &lt;see cref=&quot;T:System.Data.DataSet&quot; /&gt;.">将指定 <see cref="T:System.Xml.XmlReader" /> 中的 XML 架构应用于 <see cref="T:System.Data.DataSet" />。</summary>
      <param name="reader" vsli:raw="The &lt;see langword=&quot;XMLReader&quot; /&gt; from which to read the schema.">将从其中读取该架构的 <see langword="XMLReader" />。</param>
      <param name="nsArray" vsli:raw="An array of namespace Uniform Resource Identifier (URI) strings to be excluded from schema inference.">要从架构推理中排除的命名空间统一资源标识符 (URI) 字符串的数组。</param>
    </member>
    <member name="M:System.Data.DataSet.InitializeDerivedDataSet">
      <summary vsli:raw="Deserialize all of the tables data of the DataSet from the binary or XML stream.">从二进制或 XML 流反序列化数据集的所有表数据。</summary>
    </member>
    <member name="M:System.Data.DataSet.IsBinarySerialized(System.Runtime.Serialization.SerializationInfo,System.Runtime.Serialization.StreamingContext)">
      <summary vsli:raw="Inspects the format of the serialized representation of the &lt;see langword=&quot;DataSet&quot; /&gt;.">检查 <see langword="DataSet" /> 的序列化表示形式的格式。</summary>
      <param name="info" vsli:raw="The &lt;see cref=&quot;T:System.Runtime.Serialization.SerializationInfo&quot; /&gt; object.">
        <see cref="T:System.Runtime.Serialization.SerializationInfo" /> 对象。</param>
      <param name="context" vsli:raw="The &lt;see cref=&quot;T:System.Runtime.Serialization.StreamingContext&quot; /&gt; object.">
        <see cref="T:System.Runtime.Serialization.StreamingContext" /> 对象。</param>
      <returns vsli:raw="&lt;see langword=&quot;true&quot; /&gt; if the specified &lt;see cref=&quot;T:System.Runtime.Serialization.SerializationInfo&quot; /&gt; represents a &lt;see langword=&quot;DataSet&quot; /&gt; serialized in its binary format, &lt;see langword=&quot;false&quot; /&gt; otherwise.">如果指定的 <see cref="T:System.Runtime.Serialization.SerializationInfo" /> 表示以二进制格式序列化的 <see langword="true" />，则为 <see langword="DataSet" />；否则为 <see langword="false" />。</returns>
    </member>
    <member name="M:System.Data.DataSet.Load(System.Data.IDataReader,System.Data.LoadOption,System.Data.DataTable[])">
      <summary vsli:raw="Fills a &lt;see cref=&quot;T:System.Data.DataSet&quot; /&gt; with values from a data source using the supplied &lt;see cref=&quot;T:System.Data.IDataReader&quot; /&gt;, using an array of &lt;see cref=&quot;T:System.Data.DataTable&quot; /&gt; instances to supply the schema and namespace information.">使用提供的 <see cref="T:System.Data.DataSet" /> 以数据源的值填充 <see cref="T:System.Data.IDataReader" />，同时使用 <see cref="T:System.Data.DataTable" /> 实例的数组提供架构和命名空间信息。</summary>
      <param name="reader" vsli:raw="An &lt;see cref=&quot;T:System.Data.IDataReader&quot; /&gt; that provides one or more result sets.">提供一个或多个结果集的 <see cref="T:System.Data.IDataReader" />。</param>
      <param name="loadOption" vsli:raw="A value from the &lt;see cref=&quot;T:System.Data.LoadOption&quot; /&gt; enumeration that indicates how rows already in the &lt;see cref=&quot;T:System.Data.DataTable&quot; /&gt; instances within the &lt;see cref=&quot;T:System.Data.DataSet&quot; /&gt; will be combined with incoming rows that share the same primary key.">一个来自 <see cref="T:System.Data.LoadOption" /> 枚举的值，该值指示 <see cref="T:System.Data.DataTable" /> 中的 <see cref="T:System.Data.DataSet" /> 实例内已有的行如何与共享同一主键的传入行进行组合。</param>
      <param name="tables" vsli:raw="An array of &lt;see cref=&quot;T:System.Data.DataTable&quot; /&gt; instances, from which the &lt;see cref=&quot;M:System.Data.DataSet.Load(System.Data.IDataReader,System.Data.LoadOption,System.Data.DataTable[])&quot; /&gt; method retrieves name and namespace information. Each of these tables must be a member of the &lt;see cref=&quot;T:System.Data.DataTableCollection&quot; /&gt; contained by this &lt;see cref=&quot;T:System.Data.DataSet&quot; /&gt;.">
        <see cref="T:System.Data.DataTable" /> 实例的数组，<see cref="M:System.Data.DataSet.Load(System.Data.IDataReader,System.Data.LoadOption,System.Data.DataTable[])" /> 方法从该数组中检索名称和命名空间信息。 其中每个表都必须是此 <see cref="T:System.Data.DataTableCollection" /> 所包含的 <see cref="T:System.Data.DataSet" /> 的成员。</param>
    </member>
    <member name="M:System.Data.DataSet.Load(System.Data.IDataReader,System.Data.LoadOption,System.Data.FillErrorEventHandler,System.Data.DataTable[])">
      <summary vsli:raw="Fills a &lt;see cref=&quot;T:System.Data.DataSet&quot; /&gt; with values from a data source using the supplied &lt;see cref=&quot;T:System.Data.IDataReader&quot; /&gt;, using an array of &lt;see cref=&quot;T:System.Data.DataTable&quot; /&gt; instances to supply the schema and namespace information.">使用提供的 <see cref="T:System.Data.DataSet" /> 以数据源的值填充 <see cref="T:System.Data.IDataReader" />，同时使用 <see cref="T:System.Data.DataTable" /> 实例的数组提供架构和命名空间信息。</summary>
      <param name="reader" vsli:raw="An &lt;see cref=&quot;T:System.Data.IDataReader&quot; /&gt; that provides one or more result sets.">提供一个或多个结果集的 <see cref="T:System.Data.IDataReader" />。</param>
      <param name="loadOption" vsli:raw="A value from the &lt;see cref=&quot;T:System.Data.LoadOption&quot; /&gt; enumeration that indicates how rows already in the &lt;see cref=&quot;T:System.Data.DataTable&quot; /&gt; instances within the &lt;see cref=&quot;T:System.Data.DataSet&quot; /&gt; will be combined with incoming rows that share the same primary key.">一个来自 <see cref="T:System.Data.LoadOption" /> 枚举的值，该值指示 <see cref="T:System.Data.DataTable" /> 中的 <see cref="T:System.Data.DataSet" /> 实例内已有的行如何与共享同一主键的传入行进行组合。</param>
      <param name="errorHandler" vsli:raw="A &lt;see cref=&quot;T:System.Data.FillErrorEventHandler&quot; /&gt; delegate to call when an error occurs while loading data.">加载数据时出现错误的情况下要调用的 <see cref="T:System.Data.FillErrorEventHandler" /> 委托。</param>
      <param name="tables" vsli:raw="An array of &lt;see cref=&quot;T:System.Data.DataTable&quot; /&gt; instances, from which the &lt;see cref=&quot;M:System.Data.DataSet.Load(System.Data.IDataReader,System.Data.LoadOption,System.Data.FillErrorEventHandler,System.Data.DataTable[])&quot; /&gt; method retrieves name and namespace information.">
        <see cref="T:System.Data.DataTable" /> 实例的数组，<see cref="M:System.Data.DataSet.Load(System.Data.IDataReader,System.Data.LoadOption,System.Data.FillErrorEventHandler,System.Data.DataTable[])" /> 方法从该数组中检索名称和命名空间信息。</param>
    </member>
    <member name="M:System.Data.DataSet.Load(System.Data.IDataReader,System.Data.LoadOption,System.String[])">
      <summary vsli:raw="Fills a &lt;see cref=&quot;T:System.Data.DataSet&quot; /&gt; with values from a data source using the supplied &lt;see cref=&quot;T:System.Data.IDataReader&quot; /&gt;, using an array of strings to supply the names for the tables within the &lt;see langword=&quot;DataSet&quot; /&gt;.">使用所提供的 <see cref="T:System.Data.DataSet" />，并使用字符串数组为 <see langword="DataSet" /> 中的表提供名称，从而用来自数据源的值填充 <see cref="T:System.Data.IDataReader" />。</summary>
      <param name="reader" vsli:raw="An &lt;see cref=&quot;T:System.Data.IDataReader&quot; /&gt; that provides one or more result sets.">提供一个或多个结果集的 <see cref="T:System.Data.IDataReader" />。</param>
      <param name="loadOption" vsli:raw="A value from the &lt;see cref=&quot;T:System.Data.LoadOption&quot; /&gt; enumeration that indicates how rows already in the &lt;see cref=&quot;T:System.Data.DataTable&quot; /&gt; instances within the &lt;see langword=&quot;DataSet&quot; /&gt; will be combined with incoming rows that share the same primary key.">一个来自 <see cref="T:System.Data.LoadOption" /> 枚举的值，该值指示 <see cref="T:System.Data.DataTable" /> 中的 <see langword="DataSet" /> 实例内已有的行如何与共享同一主键的传入行进行组合。</param>
      <param name="tables" vsli:raw="An array of strings, from which the &lt;see langword=&quot;Load&quot; /&gt; method retrieves table name information.">字符串数组，<see langword="Load" /> 方法将从该数组中检索表名称信息。</param>
    </member>
    <member name="M:System.Data.DataSet.Merge(System.Data.DataRow[])">
      <summary vsli:raw="Merges an array of &lt;see cref=&quot;T:System.Data.DataRow&quot; /&gt; objects into the current &lt;see cref=&quot;T:System.Data.DataSet&quot; /&gt;.">将 <see cref="T:System.Data.DataRow" /> 对象数组合并到当前的 <see cref="T:System.Data.DataSet" /> 中。</summary>
      <param name="rows" vsli:raw="The array of &lt;see langword=&quot;DataRow&quot; /&gt; objects to be merged into the &lt;see langword=&quot;DataSet&quot; /&gt;.">要合并到 <see langword="DataRow" /> 中的 <see langword="DataSet" /> 对象数组。</param>
    </member>
    <member name="M:System.Data.DataSet.Merge(System.Data.DataRow[],System.Boolean,System.Data.MissingSchemaAction)">
      <summary vsli:raw="Merges an array of &lt;see cref=&quot;T:System.Data.DataRow&quot; /&gt; objects into the current &lt;see cref=&quot;T:System.Data.DataSet&quot; /&gt;, preserving or discarding changes in the &lt;see langword=&quot;DataSet&quot; /&gt; and handling an incompatible schema according to the given arguments.">将 <see cref="T:System.Data.DataRow" /> 对象数组合并到当前的 <see cref="T:System.Data.DataSet" /> 中，在此过程中，将根据给定的参数保留或放弃在 <see langword="DataSet" /> 中进行的更改并处理不兼容的架构。</summary>
      <param name="rows" vsli:raw="The array of &lt;see cref=&quot;T:System.Data.DataRow&quot; /&gt; objects to be merged into the &lt;see langword=&quot;DataSet&quot; /&gt;.">要合并到 <see cref="T:System.Data.DataRow" /> 中的 <see langword="DataSet" /> 对象数组。</param>
      <param name="preserveChanges" vsli:raw="&lt;see langword=&quot;true&quot; /&gt; to preserve changes in the &lt;see langword=&quot;DataSet&quot; /&gt;; otherwise, &lt;see langword=&quot;false&quot; /&gt;.">要保留 <see langword="DataSet" /> 中的更改，则返回 <see langword="true" />；否则，返回 <see langword="false" />。</param>
      <param name="missingSchemaAction" vsli:raw="One of the &lt;see cref=&quot;T:System.Data.MissingSchemaAction&quot; /&gt; values.">
        <see cref="T:System.Data.MissingSchemaAction" /> 值之一。</param>
    </member>
    <member name="M:System.Data.DataSet.Merge(System.Data.DataSet)">
      <summary vsli:raw="Merges a specified &lt;see cref=&quot;T:System.Data.DataSet&quot; /&gt; and its schema into the current &lt;see langword=&quot;DataSet&quot; /&gt;.">将指定的 <see cref="T:System.Data.DataSet" /> 及其架构合并到当前 <see langword="DataSet" /> 中。</summary>
      <param name="dataSet" vsli:raw="The &lt;see langword=&quot;DataSet&quot; /&gt; whose data and schema will be merged.">其数据和架构将被合并的 <see langword="DataSet" />。</param>
      <exception cref="T:System.Data.ConstraintException" vsli:raw="One or more constraints cannot be enabled.">无法启用一个或多个约束。</exception>
      <exception cref="T:System.ArgumentNullException" vsli:raw="The &lt;paramref name=&quot;dataSet&quot; /&gt; is &lt;see langword=&quot;null&quot; /&gt;.">
        <paramref name="dataSet" /> 为 <see langword="null" />。</exception>
    </member>
    <member name="M:System.Data.DataSet.Merge(System.Data.DataSet,System.Boolean)">
      <summary vsli:raw="Merges a specified &lt;see cref=&quot;T:System.Data.DataSet&quot; /&gt; and its schema into the current &lt;see langword=&quot;DataSet&quot; /&gt;, preserving or discarding any changes in this &lt;see langword=&quot;DataSet&quot; /&gt; according to the given argument.">将指定的 <see cref="T:System.Data.DataSet" /> 及其架构合并到当前 <see langword="DataSet" /> 中，在此过程中，将根据给定的参数保留或放弃在此 <see langword="DataSet" /> 中进行的任何更改。</summary>
      <param name="dataSet" vsli:raw="The &lt;see langword=&quot;DataSet&quot; /&gt; whose data and schema will be merged.">其数据和架构将被合并的 <see langword="DataSet" />。</param>
      <param name="preserveChanges" vsli:raw="&lt;see langword=&quot;true&quot; /&gt; to preserve changes in the current &lt;see langword=&quot;DataSet&quot; /&gt;; otherwise, &lt;see langword=&quot;false&quot; /&gt;.">要保留当前 <see langword="DataSet" /> 中的更改，则返回 <see langword="true" />；否则，返回 <see langword="false" />。</param>
    </member>
    <member name="M:System.Data.DataSet.Merge(System.Data.DataSet,System.Boolean,System.Data.MissingSchemaAction)">
      <summary vsli:raw="Merges a specified &lt;see cref=&quot;T:System.Data.DataSet&quot; /&gt; and its schema with the current &lt;see langword=&quot;DataSet&quot; /&gt;, preserving or discarding changes in the current &lt;see langword=&quot;DataSet&quot; /&gt; and handling an incompatible schema according to the given arguments.">将指定的 <see cref="T:System.Data.DataSet" /> 及其架构与当前的 <see langword="DataSet" /> 合并，在此过程中，将根据给定的参数保留或放弃在当前 <see langword="DataSet" /> 中的更改并处理不兼容的架构。</summary>
      <param name="dataSet" vsli:raw="The &lt;see langword=&quot;DataSet&quot; /&gt; whose data and schema will be merged.">其数据和架构将被合并的 <see langword="DataSet" />。</param>
      <param name="preserveChanges" vsli:raw="&lt;see langword=&quot;true&quot; /&gt; to preserve changes in the current &lt;see langword=&quot;DataSet&quot; /&gt;; otherwise, &lt;see langword=&quot;false&quot; /&gt;.">要保留当前 <see langword="DataSet" /> 中的更改，则返回 <see langword="true" />；否则，返回 <see langword="false" />。</param>
      <param name="missingSchemaAction" vsli:raw="One of the &lt;see cref=&quot;T:System.Data.MissingSchemaAction&quot; /&gt; values.">
        <see cref="T:System.Data.MissingSchemaAction" /> 值之一。</param>
      <exception cref="T:System.ArgumentNullException" vsli:raw="The &lt;paramref name=&quot;dataSet&quot; /&gt; is &lt;see langword=&quot;null&quot; /&gt;.">
        <paramref name="dataSet" /> 为 <see langword="null" />。</exception>
    </member>
    <member name="M:System.Data.DataSet.Merge(System.Data.DataTable)">
      <summary vsli:raw="Merges a specified &lt;see cref=&quot;T:System.Data.DataTable&quot; /&gt; and its schema into the current &lt;see cref=&quot;T:System.Data.DataSet&quot; /&gt;.">将指定的 <see cref="T:System.Data.DataTable" /> 及其架构合并到当前 <see cref="T:System.Data.DataSet" /> 中。</summary>
      <param name="table" vsli:raw="The &lt;see cref=&quot;T:System.Data.DataTable&quot; /&gt; whose data and schema will be merged.">其数据和架构将被合并的 <see cref="T:System.Data.DataTable" />。</param>
      <exception cref="T:System.ArgumentNullException" vsli:raw="The &lt;paramref name=&quot;table&quot; /&gt; is &lt;see langword=&quot;null&quot; /&gt;.">
        <paramref name="table" /> 为 <see langword="null" />。</exception>
    </member>
    <member name="M:System.Data.DataSet.Merge(System.Data.DataTable,System.Boolean,System.Data.MissingSchemaAction)">
      <summary vsli:raw="Merges a specified &lt;see cref=&quot;T:System.Data.DataTable&quot; /&gt; and its schema into the current &lt;see langword=&quot;DataSet&quot; /&gt;, preserving or discarding changes in the &lt;see langword=&quot;DataSet&quot; /&gt; and handling an incompatible schema according to the given arguments.">将指定的 <see cref="T:System.Data.DataTable" /> 及其架构合并到当前的 <see langword="DataSet" /> 中，在此过程中，将根据给定的参数保留或放弃在 <see langword="DataSet" /> 中进行的更改并处理不兼容的架构。</summary>
      <param name="table" vsli:raw="The &lt;see langword=&quot;DataTable&quot; /&gt; whose data and schema will be merged.">其数据和架构将被合并的 <see langword="DataTable" />。</param>
      <param name="preserveChanges" vsli:raw="One of the &lt;see cref=&quot;T:System.Data.MissingSchemaAction&quot; /&gt; values.">
        <see cref="T:System.Data.MissingSchemaAction" /> 值之一。</param>
      <param name="missingSchemaAction" vsli:raw="&lt;see langword=&quot;true&quot; /&gt; to preserve changes in the &lt;see langword=&quot;DataSet&quot; /&gt;; otherwise, &lt;see langword=&quot;false&quot; /&gt;.">要保留 <see langword="DataSet" /> 中的更改，则返回 <see langword="true" />；否则，返回 <see langword="false" />。</param>
      <exception cref="T:System.ArgumentNullException" vsli:raw="The &lt;paramref name=&quot;dataSet&quot; /&gt; is &lt;see langword=&quot;null&quot; /&gt;.">
        <paramref name="dataSet" /> 为 <see langword="null" />。</exception>
    </member>
    <member name="M:System.Data.DataSet.OnPropertyChanging(System.ComponentModel.PropertyChangedEventArgs)">
      <summary vsli:raw="Raises the &lt;see cref=&quot;M:System.Data.DataSet.OnPropertyChanging(System.ComponentModel.PropertyChangedEventArgs)&quot; /&gt; event.">引发 <see cref="M:System.Data.DataSet.OnPropertyChanging(System.ComponentModel.PropertyChangedEventArgs)" /> 事件。</summary>
      <param name="pcevent" vsli:raw="A &lt;see cref=&quot;T:System.ComponentModel.PropertyChangedEventArgs&quot; /&gt; that contains the event data.">包含事件数据的 <see cref="T:System.ComponentModel.PropertyChangedEventArgs" />。</param>
    </member>
    <member name="M:System.Data.DataSet.OnRemoveRelation(System.Data.DataRelation)">
      <summary vsli:raw="Occurs when a &lt;see cref=&quot;T:System.Data.DataRelation&quot; /&gt; object is removed from a &lt;see cref=&quot;T:System.Data.DataTable&quot; /&gt;.">当从 <see cref="T:System.Data.DataRelation" /> 中移除 <see cref="T:System.Data.DataTable" /> 对象时发生。</summary>
      <param name="relation" vsli:raw="The &lt;see cref=&quot;T:System.Data.DataRelation&quot; /&gt; being removed.">正在移除的 <see cref="T:System.Data.DataRelation" />。</param>
    </member>
    <member name="M:System.Data.DataSet.OnRemoveTable(System.Data.DataTable)">
      <summary vsli:raw="Occurs when a &lt;see cref=&quot;T:System.Data.DataTable&quot; /&gt; is removed from a &lt;see cref=&quot;T:System.Data.DataSet&quot; /&gt;.">当从 <see cref="T:System.Data.DataTable" /> 中移除 <see cref="T:System.Data.DataSet" /> 时发生。</summary>
      <param name="table" vsli:raw="The &lt;see cref=&quot;T:System.Data.DataTable&quot; /&gt; being removed.">正在移除的 <see cref="T:System.Data.DataTable" />。</param>
    </member>
    <member name="M:System.Data.DataSet.RaisePropertyChanging(System.String)">
      <summary vsli:raw="Sends a notification that the specified &lt;see cref=&quot;T:System.Data.DataSet&quot; /&gt; property is about to change.">发送指定的 <see cref="T:System.Data.DataSet" /> 属性将要更改的通知。</summary>
      <param name="name" vsli:raw="The name of the property that is about to change.">将要更改的属性的名称。</param>
    </member>
    <member name="M:System.Data.DataSet.ReadXml(System.IO.Stream)">
      <summary vsli:raw="Reads XML schema and data into the &lt;see cref=&quot;T:System.Data.DataSet&quot; /&gt; using the specified &lt;see cref=&quot;T:System.IO.Stream&quot; /&gt;.">使用指定的 <see cref="T:System.IO.Stream" /> 将 XML 架构和数据读入 <see cref="T:System.Data.DataSet" />。</summary>
      <param name="stream" vsli:raw="An object that derives from &lt;see cref=&quot;T:System.IO.Stream&quot; /&gt;.">从 <see cref="T:System.IO.Stream" /> 派生的对象。</param>
      <returns vsli:raw="The &lt;see cref=&quot;T:System.Data.XmlReadMode&quot; /&gt; used to read the data.">用于读取数据的 <see cref="T:System.Data.XmlReadMode" />。</returns>
    </member>
    <member name="M:System.Data.DataSet.ReadXml(System.IO.Stream,System.Data.XmlReadMode)">
      <summary vsli:raw="Reads XML schema and data into the &lt;see cref=&quot;T:System.Data.DataSet&quot; /&gt; using the specified &lt;see cref=&quot;T:System.IO.Stream&quot; /&gt; and &lt;see cref=&quot;T:System.Data.XmlReadMode&quot; /&gt;.">使用指定的 <see cref="T:System.Data.DataSet" /> 和 <see cref="T:System.IO.Stream" /> 将 XML 架构和数据读入 <see cref="T:System.Data.XmlReadMode" />。</summary>
      <param name="stream" vsli:raw="The &lt;see cref=&quot;T:System.IO.Stream&quot; /&gt; from which to read.">从中读取的 <see cref="T:System.IO.Stream" />。</param>
      <param name="mode" vsli:raw="One of the &lt;see cref=&quot;T:System.Data.XmlReadMode&quot; /&gt; values.">
        <see cref="T:System.Data.XmlReadMode" /> 值之一。</param>
      <returns vsli:raw="The &lt;see langword=&quot;XmlReadMode&quot; /&gt; used to read the data.">用于读取数据的 <see langword="XmlReadMode" />。</returns>
    </member>
    <member name="M:System.Data.DataSet.ReadXml(System.IO.TextReader)">
      <summary vsli:raw="Reads XML schema and data into the &lt;see cref=&quot;T:System.Data.DataSet&quot; /&gt; using the specified &lt;see cref=&quot;T:System.IO.TextReader&quot; /&gt;.">使用指定的 <see cref="T:System.IO.TextReader" /> 将 XML 架构和数据读入 <see cref="T:System.Data.DataSet" />。</summary>
      <param name="reader" vsli:raw="The &lt;see langword=&quot;TextReader&quot; /&gt; from which to read the schema and data.">从中读取架构和数据的 <see langword="TextReader" />。</param>
      <returns vsli:raw="The &lt;see cref=&quot;T:System.Data.XmlReadMode&quot; /&gt; used to read the data.">用于读取数据的 <see cref="T:System.Data.XmlReadMode" />。</returns>
    </member>
    <member name="M:System.Data.DataSet.ReadXml(System.IO.TextReader,System.Data.XmlReadMode)">
      <summary vsli:raw="Reads XML schema and data into the &lt;see cref=&quot;T:System.Data.DataSet&quot; /&gt; using the specified &lt;see cref=&quot;T:System.IO.TextReader&quot; /&gt; and &lt;see cref=&quot;T:System.Data.XmlReadMode&quot; /&gt;.">使用指定的 <see cref="T:System.Data.DataSet" /> 和 <see cref="T:System.IO.TextReader" /> 将 XML 架构和数据读入 <see cref="T:System.Data.XmlReadMode" />。</summary>
      <param name="reader" vsli:raw="The &lt;see cref=&quot;T:System.IO.TextReader&quot; /&gt; from which to read.">从中读取的 <see cref="T:System.IO.TextReader" />。</param>
      <param name="mode" vsli:raw="One of the &lt;see cref=&quot;T:System.Data.XmlReadMode&quot; /&gt; values.">
        <see cref="T:System.Data.XmlReadMode" /> 值之一。</param>
      <returns vsli:raw="The &lt;see langword=&quot;XmlReadMode&quot; /&gt; used to read the data.">用于读取数据的 <see langword="XmlReadMode" />。</returns>
    </member>
    <member name="M:System.Data.DataSet.ReadXml(System.String)">
      <summary vsli:raw="Reads XML schema and data into the &lt;see cref=&quot;T:System.Data.DataSet&quot; /&gt; using the specified file.">使用指定的文件将 XML 架构和数据读入 <see cref="T:System.Data.DataSet" />。</summary>
      <param name="fileName" vsli:raw="The filename (including the path) from which to read.">作为读取源的文件名（包括路径）。</param>
      <exception cref="T:System.Security.SecurityException" vsli:raw="&lt;see cref=&quot;T:System.Security.Permissions.FileIOPermission&quot; /&gt; is not set to &lt;see cref=&quot;F:System.Security.Permissions.FileIOPermissionAccess.Read&quot; /&gt;.">
        <see cref="T:System.Security.Permissions.FileIOPermission" /> 未设置为 <see cref="F:System.Security.Permissions.FileIOPermissionAccess.Read" />。</exception>
      <returns vsli:raw="The &lt;see langword=&quot;XmlReadMode&quot; /&gt; used to read the data.">用于读取数据的 <see langword="XmlReadMode" />。</returns>
    </member>
    <member name="M:System.Data.DataSet.ReadXml(System.String,System.Data.XmlReadMode)">
      <summary vsli:raw="Reads XML schema and data into the &lt;see cref=&quot;T:System.Data.DataSet&quot; /&gt; using the specified file and &lt;see cref=&quot;T:System.Data.XmlReadMode&quot; /&gt;.">使用指定的文件和 <see cref="T:System.Data.DataSet" /> 将 XML 架构和数据读入 <see cref="T:System.Data.XmlReadMode" />。</summary>
      <param name="fileName" vsli:raw="The filename (including the path) from which to read.">作为读取源的文件名（包括路径）。</param>
      <param name="mode" vsli:raw="One of the &lt;see cref=&quot;T:System.Data.XmlReadMode&quot; /&gt; values.">
        <see cref="T:System.Data.XmlReadMode" /> 值之一。</param>
      <exception cref="T:System.Security.SecurityException" vsli:raw="&lt;see cref=&quot;T:System.Security.Permissions.FileIOPermission&quot; /&gt; is not set to &lt;see cref=&quot;F:System.Security.Permissions.FileIOPermissionAccess.Read&quot; /&gt;.">
        <see cref="T:System.Security.Permissions.FileIOPermission" /> 未设置为 <see cref="F:System.Security.Permissions.FileIOPermissionAccess.Read" />。</exception>
      <returns vsli:raw="The &lt;see langword=&quot;XmlReadMode&quot; /&gt; used to read the data.">用于读取数据的 <see langword="XmlReadMode" />。</returns>
    </member>
    <member name="M:System.Data.DataSet.ReadXml(System.Xml.XmlReader)">
      <summary vsli:raw="Reads XML schema and data into the &lt;see cref=&quot;T:System.Data.DataSet&quot; /&gt; using the specified &lt;see cref=&quot;T:System.Xml.XmlReader&quot; /&gt;.">使用指定的 <see cref="T:System.Xml.XmlReader" /> 将 XML 架构和数据读入 <see cref="T:System.Data.DataSet" />。</summary>
      <param name="reader" vsli:raw="The &lt;see cref=&quot;T:System.Xml.XmlReader&quot; /&gt; from which to read.">从中读取的 <see cref="T:System.Xml.XmlReader" />。</param>
      <returns vsli:raw="The &lt;see langword=&quot;XmlReadMode&quot; /&gt; used to read the data.">用于读取数据的 <see langword="XmlReadMode" />。</returns>
    </member>
    <member name="M:System.Data.DataSet.ReadXml(System.Xml.XmlReader,System.Data.XmlReadMode)">
      <summary vsli:raw="Reads XML schema and data into the &lt;see cref=&quot;T:System.Data.DataSet&quot; /&gt; using the specified &lt;see cref=&quot;T:System.Xml.XmlReader&quot; /&gt; and &lt;see cref=&quot;T:System.Data.XmlReadMode&quot; /&gt;.">使用指定的 <see cref="T:System.Data.DataSet" /> 和 <see cref="T:System.Xml.XmlReader" /> 将 XML 架构和数据读入 <see cref="T:System.Data.XmlReadMode" />。</summary>
      <param name="reader" vsli:raw="The &lt;see cref=&quot;T:System.Xml.XmlReader&quot; /&gt; from which to read.">从中读取的 <see cref="T:System.Xml.XmlReader" />。</param>
      <param name="mode" vsli:raw="One of the &lt;see cref=&quot;T:System.Data.XmlReadMode&quot; /&gt; values.">
        <see cref="T:System.Data.XmlReadMode" /> 值之一。</param>
      <returns vsli:raw="The &lt;see langword=&quot;XmlReadMode&quot; /&gt; used to read the data.">用于读取数据的 <see langword="XmlReadMode" />。</returns>
    </member>
    <member name="M:System.Data.DataSet.ReadXmlSchema(System.IO.Stream)">
      <summary vsli:raw="Reads the XML schema from the specified &lt;see cref=&quot;T:System.IO.Stream&quot; /&gt; into the &lt;see cref=&quot;T:System.Data.DataSet&quot; /&gt;.">从指定的 <see cref="T:System.IO.Stream" /> 中将 XML 架构读入 <see cref="T:System.Data.DataSet" />。</summary>
      <param name="stream" vsli:raw="The &lt;see cref=&quot;T:System.IO.Stream&quot; /&gt; from which to read.">从中读取的 <see cref="T:System.IO.Stream" />。</param>
    </member>
    <member name="M:System.Data.DataSet.ReadXmlSchema(System.IO.TextReader)">
      <summary vsli:raw="Reads the XML schema from the specified &lt;see cref=&quot;T:System.IO.TextReader&quot; /&gt; into the &lt;see cref=&quot;T:System.Data.DataSet&quot; /&gt;.">从指定的 <see cref="T:System.IO.TextReader" /> 中将 XML 架构读入 <see cref="T:System.Data.DataSet" />。</summary>
      <param name="reader" vsli:raw="The &lt;see cref=&quot;T:System.IO.TextReader&quot; /&gt; from which to read.">从中读取的 <see cref="T:System.IO.TextReader" />。</param>
    </member>
    <member name="M:System.Data.DataSet.ReadXmlSchema(System.String)">
      <summary vsli:raw="Reads the XML schema from the specified file into the &lt;see cref=&quot;T:System.Data.DataSet&quot; /&gt;.">从指定的文件中将 XML 架构读入 <see cref="T:System.Data.DataSet" />。</summary>
      <param name="fileName" vsli:raw="The file name (including the path) from which to read.">从中读取的文件的名称（包括路径）。</param>
      <exception cref="T:System.Security.SecurityException" vsli:raw="&lt;see cref=&quot;T:System.Security.Permissions.FileIOPermission&quot; /&gt; is not set to &lt;see cref=&quot;F:System.Security.Permissions.FileIOPermissionAccess.Read&quot; /&gt;.">
        <see cref="T:System.Security.Permissions.FileIOPermission" /> 未设置为 <see cref="F:System.Security.Permissions.FileIOPermissionAccess.Read" />。</exception>
    </member>
    <member name="M:System.Data.DataSet.ReadXmlSchema(System.Xml.XmlReader)">
      <summary vsli:raw="Reads the XML schema from the specified &lt;see cref=&quot;T:System.Xml.XmlReader&quot; /&gt; into the &lt;see cref=&quot;T:System.Data.DataSet&quot; /&gt;.">从指定的 <see cref="T:System.Xml.XmlReader" /> 中将 XML 架构读入 <see cref="T:System.Data.DataSet" />。</summary>
      <param name="reader" vsli:raw="The &lt;see cref=&quot;T:System.Xml.XmlReader&quot; /&gt; from which to read.">从中读取的 <see cref="T:System.Xml.XmlReader" />。</param>
    </member>
    <member name="M:System.Data.DataSet.ReadXmlSerializable(System.Xml.XmlReader)">
      <summary vsli:raw="Ignores attributes and returns an empty DataSet.">忽略特性并返回一个空的数据集。</summary>
      <param name="reader" vsli:raw="The specified XML reader.">指定的 XML 读取器。</param>
    </member>
    <member name="M:System.Data.DataSet.RejectChanges">
      <summary vsli:raw="Rolls back all the changes made to the &lt;see cref=&quot;T:System.Data.DataSet&quot; /&gt; since it was created, or since the last time &lt;see cref=&quot;M:System.Data.DataSet.AcceptChanges&quot; /&gt; was called.">回滚自创建 <see cref="T:System.Data.DataSet" /> 以来或上次调用 <see cref="M:System.Data.DataSet.AcceptChanges" /> 以来对其进行的所有更改。</summary>
    </member>
    <member name="M:System.Data.DataSet.Reset">
      <summary vsli:raw="Clears all tables and removes all relations, foreign constraints, and tables from the &lt;see cref=&quot;T:System.Data.DataSet&quot; /&gt;. Subclasses should override &lt;see cref=&quot;M:System.Data.DataSet.Reset&quot; /&gt; to restore a &lt;see cref=&quot;T:System.Data.DataSet&quot; /&gt; to its original state.">清除所有表并从 <see cref="T:System.Data.DataSet" /> 中删除所有关系、外部约束和表。 子类应重写 <see cref="M:System.Data.DataSet.Reset" />，以便将 <see cref="T:System.Data.DataSet" /> 还原到其原始状态。</summary>
    </member>
    <member name="M:System.Data.DataSet.ShouldSerializeRelations">
      <summary vsli:raw="Gets a value indicating whether &lt;see cref=&quot;P:System.Data.DataSet.Relations&quot; /&gt; property should be persisted.">获取一个值，该值指示是否应该保持 <see cref="P:System.Data.DataSet.Relations" /> 属性。</summary>
      <returns vsli:raw="&lt;see langword=&quot;true&quot; /&gt; if the property value has been changed from its default; otherwise, &lt;see langword=&quot;false&quot; /&gt;.">如果已将属性值更改为其默认值之外的值，则为 <see langword="true" />；否则为 <see langword="false" />。</returns>
    </member>
    <member name="M:System.Data.DataSet.ShouldSerializeTables">
      <summary vsli:raw="Gets a value indicating whether &lt;see cref=&quot;P:System.Data.DataSet.Tables&quot; /&gt; property should be persisted.">获取一个值，该值指示是否应该保持 <see cref="P:System.Data.DataSet.Tables" /> 属性。</summary>
      <returns vsli:raw="&lt;see langword=&quot;true&quot; /&gt; if the property value has been changed from its default; otherwise, &lt;see langword=&quot;false&quot; /&gt;.">如果已将属性值更改为其默认值之外的值，则为 <see langword="true" />；否则为 <see langword="false" />。</returns>
    </member>
    <member name="M:System.Data.DataSet.System#ComponentModel#IListSource#GetList">
      <summary vsli:raw="For a description of this member, see &lt;see cref=&quot;M:System.ComponentModel.IListSource.GetList&quot; /&gt;.">有关此成员的说明，请参见 <see cref="M:System.ComponentModel.IListSource.GetList" />。</summary>
      <returns vsli:raw="For a description of this member, see &lt;see cref=&quot;M:System.ComponentModel.IListSource.GetList&quot; /&gt;.">有关此成员的说明，请参见 <see cref="M:System.ComponentModel.IListSource.GetList" />。</returns>
    </member>
    <member name="M:System.Data.DataSet.System#Xml#Serialization#IXmlSerializable#GetSchema">
      <summary vsli:raw="For a description of this member, see &lt;see cref=&quot;M:System.Xml.Serialization.IXmlSerializable.GetSchema&quot; /&gt;.">有关此成员的说明，请参见 <see cref="M:System.Xml.Serialization.IXmlSerializable.GetSchema" />。</summary>
      <returns vsli:raw="For a description of this member, see &lt;see cref=&quot;M:System.Xml.Serialization.IXmlSerializable.GetSchema&quot; /&gt;.">有关此成员的说明，请参见 <see cref="M:System.Xml.Serialization.IXmlSerializable.GetSchema" />。</returns>
    </member>
    <member name="M:System.Data.DataSet.System#Xml#Serialization#IXmlSerializable#ReadXml(System.Xml.XmlReader)">
      <summary vsli:raw="For a description of this member, see &lt;see cref=&quot;M:System.Xml.Serialization.IXmlSerializable.ReadXml(System.Xml.XmlReader)&quot; /&gt;.">有关此成员的说明，请参见 <see cref="M:System.Xml.Serialization.IXmlSerializable.ReadXml(System.Xml.XmlReader)" />。</summary>
      <param name="reader" vsli:raw="A &lt;see cref=&quot;T:System.Xml.XmlReader&quot; /&gt;.">
        <see cref="T:System.Xml.XmlReader" />。</param>
    </member>
    <member name="M:System.Data.DataSet.System#Xml#Serialization#IXmlSerializable#WriteXml(System.Xml.XmlWriter)">
      <summary vsli:raw="For a description of this member, see &lt;see cref=&quot;M:System.Xml.Serialization.IXmlSerializable.WriteXml(System.Xml.XmlWriter)&quot; /&gt;.">有关此成员的说明，请参见 <see cref="M:System.Xml.Serialization.IXmlSerializable.WriteXml(System.Xml.XmlWriter)" />。</summary>
      <param name="writer" vsli:raw="A &lt;see cref=&quot;T:System.Xml.XmlWriter&quot; /&gt;.">
        <see cref="T:System.Xml.XmlWriter" />。</param>
    </member>
    <member name="M:System.Data.DataSet.WriteXml(System.IO.Stream)">
      <summary vsli:raw="Writes the current data for the &lt;see cref=&quot;T:System.Data.DataSet&quot; /&gt; using the specified &lt;see cref=&quot;T:System.IO.Stream&quot; /&gt;.">使用指定的 <see cref="T:System.Data.DataSet" /> 为 <see cref="T:System.IO.Stream" /> 写当前数据。</summary>
      <param name="stream" vsli:raw="A &lt;see cref=&quot;T:System.IO.Stream&quot; /&gt; object used to write to a file.">用于写入文件的 <see cref="T:System.IO.Stream" /> 对象。</param>
    </member>
    <member name="M:System.Data.DataSet.WriteXml(System.IO.Stream,System.Data.XmlWriteMode)">
      <summary vsli:raw="Writes the current data, and optionally the schema, for the &lt;see cref=&quot;T:System.Data.DataSet&quot; /&gt; using the specified &lt;see cref=&quot;T:System.IO.Stream&quot; /&gt; and &lt;see cref=&quot;T:System.Data.XmlWriteMode&quot; /&gt;. To write the schema, set the value for the &lt;paramref name=&quot;mode&quot; /&gt; parameter to &lt;see langword=&quot;WriteSchema&quot; /&gt;.">使用指定的 <see cref="T:System.IO.Stream" /> 和 <see cref="T:System.Data.XmlWriteMode" /> 写入 <see cref="T:System.Data.DataSet" /> 的当前数据和架构（可选）。 若要写入架构，请将 <paramref name="mode" /> 参数的值设置为 <see langword="WriteSchema" />。</summary>
      <param name="stream" vsli:raw="A &lt;see cref=&quot;T:System.IO.Stream&quot; /&gt; object used to write to a file.">用于写入文件的 <see cref="T:System.IO.Stream" /> 对象。</param>
      <param name="mode" vsli:raw="One of the &lt;see cref=&quot;T:System.Data.XmlWriteMode&quot; /&gt; values.">
        <see cref="T:System.Data.XmlWriteMode" /> 值之一。</param>
    </member>
    <member name="M:System.Data.DataSet.WriteXml(System.IO.TextWriter)">
      <summary vsli:raw="Writes the current data for the &lt;see cref=&quot;T:System.Data.DataSet&quot; /&gt; using the specified &lt;see cref=&quot;T:System.IO.TextWriter&quot; /&gt;.">使用指定的 <see cref="T:System.Data.DataSet" /> 为 <see cref="T:System.IO.TextWriter" /> 写当前数据。</summary>
      <param name="writer" vsli:raw="The &lt;see cref=&quot;T:System.IO.TextWriter&quot; /&gt; object with which to write.">要进行写入的 <see cref="T:System.IO.TextWriter" /> 对象。</param>
    </member>
    <member name="M:System.Data.DataSet.WriteXml(System.IO.TextWriter,System.Data.XmlWriteMode)">
      <summary vsli:raw="Writes the current data, and optionally the schema, for the &lt;see cref=&quot;T:System.Data.DataSet&quot; /&gt; using the specified &lt;see cref=&quot;T:System.IO.TextWriter&quot; /&gt; and &lt;see cref=&quot;T:System.Data.XmlWriteMode&quot; /&gt;. To write the schema, set the value for the &lt;paramref name=&quot;mode&quot; /&gt; parameter to &lt;see langword=&quot;WriteSchema&quot; /&gt;.">使用指定的 <see cref="T:System.IO.TextWriter" /> 和 <see cref="T:System.Data.XmlWriteMode" /> 写入 <see cref="T:System.Data.DataSet" /> 的当前数据和架构（可选）。 若要写入架构，请将 <paramref name="mode" /> 参数的值设置为 <see langword="WriteSchema" />。</summary>
      <param name="writer" vsli:raw="A &lt;see cref=&quot;T:System.IO.TextWriter&quot; /&gt; object used to write the document.">
        <see cref="T:System.IO.TextWriter" /> 对象用于写文档。</param>
      <param name="mode" vsli:raw="One of the &lt;see cref=&quot;T:System.Data.XmlWriteMode&quot; /&gt; values.">
        <see cref="T:System.Data.XmlWriteMode" /> 值之一。</param>
    </member>
    <member name="M:System.Data.DataSet.WriteXml(System.String)">
      <summary vsli:raw="Writes the current data for the &lt;see cref=&quot;T:System.Data.DataSet&quot; /&gt; to the specified file.">将 <see cref="T:System.Data.DataSet" /> 的当前数据写入指定的文件。</summary>
      <param name="fileName" vsli:raw="The file name (including the path) to which to write.">要向其写入的文件的名称（包括路径）。</param>
      <exception cref="T:System.Security.SecurityException" vsli:raw="&lt;see cref=&quot;T:System.Security.Permissions.FileIOPermission&quot; /&gt; is not set to &lt;see cref=&quot;F:System.Security.Permissions.FileIOPermissionAccess.Write&quot; /&gt;.">
        <see cref="T:System.Security.Permissions.FileIOPermission" /> 未设置为 <see cref="F:System.Security.Permissions.FileIOPermissionAccess.Write" />。</exception>
    </member>
    <member name="M:System.Data.DataSet.WriteXml(System.String,System.Data.XmlWriteMode)">
      <summary vsli:raw="Writes the current data, and optionally the schema, for the &lt;see cref=&quot;T:System.Data.DataSet&quot; /&gt; to the specified file using the specified &lt;see cref=&quot;T:System.Data.XmlWriteMode&quot; /&gt;. To write the schema, set the value for the &lt;paramref name=&quot;mode&quot; /&gt; parameter to &lt;see langword=&quot;WriteSchema&quot; /&gt;.">使用指定的 <see cref="T:System.Data.XmlWriteMode" /> 将 <see cref="T:System.Data.DataSet" /> 的当前数据和架构（可选）写入指定的文件。 若要写入架构，请将 <paramref name="mode" /> 参数的值设置为 <see langword="WriteSchema" />。</summary>
      <param name="fileName" vsli:raw="The file name (including the path) to which to write.">要向其写入的文件的名称（包括路径）。</param>
      <param name="mode" vsli:raw="One of the &lt;see cref=&quot;T:System.Data.XmlWriteMode&quot; /&gt; values.">
        <see cref="T:System.Data.XmlWriteMode" /> 值之一。</param>
      <exception cref="T:System.Security.SecurityException" vsli:raw="&lt;see cref=&quot;T:System.Security.Permissions.FileIOPermission&quot; /&gt; is not set to &lt;see cref=&quot;F:System.Security.Permissions.FileIOPermissionAccess.Write&quot; /&gt;.">
        <see cref="T:System.Security.Permissions.FileIOPermission" /> 未设置为 <see cref="F:System.Security.Permissions.FileIOPermissionAccess.Write" />。</exception>
    </member>
    <member name="M:System.Data.DataSet.WriteXml(System.Xml.XmlWriter)">
      <summary vsli:raw="Writes the current data for the &lt;see cref=&quot;T:System.Data.DataSet&quot; /&gt; to the specified &lt;see cref=&quot;T:System.Xml.XmlWriter&quot; /&gt;.">将 <see cref="T:System.Data.DataSet" /> 的当前数据写入指定的 <see cref="T:System.Xml.XmlWriter" />。</summary>
      <param name="writer" vsli:raw="The &lt;see cref=&quot;T:System.Xml.XmlWriter&quot; /&gt; with which to write.">用于写入的 <see cref="T:System.Xml.XmlWriter" />。</param>
    </member>
    <member name="M:System.Data.DataSet.WriteXml(System.Xml.XmlWriter,System.Data.XmlWriteMode)">
      <summary vsli:raw="Writes the current data, and optionally the schema, for the &lt;see cref=&quot;T:System.Data.DataSet&quot; /&gt; using the specified &lt;see cref=&quot;T:System.Xml.XmlWriter&quot; /&gt; and &lt;see cref=&quot;T:System.Data.XmlWriteMode&quot; /&gt;. To write the schema, set the value for the &lt;paramref name=&quot;mode&quot; /&gt; parameter to &lt;see langword=&quot;WriteSchema&quot; /&gt;.">使用指定的 <see cref="T:System.Xml.XmlWriter" /> 和 <see cref="T:System.Data.XmlWriteMode" /> 写入 <see cref="T:System.Data.DataSet" /> 的当前数据和架构（可选）。 若要写入架构，请将 <paramref name="mode" /> 参数的值设置为 <see langword="WriteSchema" />。</summary>
      <param name="writer" vsli:raw="The &lt;see cref=&quot;T:System.Xml.XmlWriter&quot; /&gt; with which to write.">用于写入的 <see cref="T:System.Xml.XmlWriter" />。</param>
      <param name="mode" vsli:raw="One of the &lt;see cref=&quot;T:System.Data.XmlWriteMode&quot; /&gt; values.">
        <see cref="T:System.Data.XmlWriteMode" /> 值之一。</param>
    </member>
    <member name="M:System.Data.DataSet.WriteXmlSchema(System.IO.Stream)">
      <summary vsli:raw="Writes the &lt;see cref=&quot;T:System.Data.DataSet&quot; /&gt; structure as an XML schema to the specified &lt;see cref=&quot;T:System.IO.Stream&quot; /&gt; object.">将 <see cref="T:System.Data.DataSet" /> 结构作为 XML 架构写入指定的 <see cref="T:System.IO.Stream" /> 对象。</summary>
      <param name="stream" vsli:raw="A &lt;see cref=&quot;T:System.IO.Stream&quot; /&gt; object used to write to a file.">用于写入文件的 <see cref="T:System.IO.Stream" /> 对象。</param>
    </member>
    <member name="M:System.Data.DataSet.WriteXmlSchema(System.IO.Stream,System.Converter{System.Type,System.String})">
      <summary vsli:raw="Writes the &lt;see cref=&quot;T:System.Data.DataSet&quot; /&gt; structure as an XML schema to the specified &lt;see cref=&quot;T:System.IO.Stream&quot; /&gt; object.">将 <see cref="T:System.Data.DataSet" /> 结构作为 XML 架构写入指定的 <see cref="T:System.IO.Stream" /> 对象。</summary>
      <param name="stream" vsli:raw="A &lt;see cref=&quot;T:System.IO.Stream&quot; /&gt; object to write to.">要写入到的 <see cref="T:System.IO.Stream" /> 对象。</param>
      <param name="multipleTargetConverter" vsli:raw="A delegate used to convert &lt;see cref=&quot;T:System.Type&quot; /&gt; to string.">用于将 <see cref="T:System.Type" /> 转换为字符串的委托。</param>
    </member>
    <member name="M:System.Data.DataSet.WriteXmlSchema(System.IO.TextWriter)">
      <summary vsli:raw="Writes the &lt;see cref=&quot;T:System.Data.DataSet&quot; /&gt; structure as an XML schema to the specified &lt;see cref=&quot;T:System.IO.TextWriter&quot; /&gt; object.">将 <see cref="T:System.Data.DataSet" /> 结构作为 XML 架构写入指定的 <see cref="T:System.IO.TextWriter" /> 对象。</summary>
      <param name="writer" vsli:raw="The &lt;see cref=&quot;T:System.IO.TextWriter&quot; /&gt; object with which to write.">要进行写入的 <see cref="T:System.IO.TextWriter" /> 对象。</param>
    </member>
    <member name="M:System.Data.DataSet.WriteXmlSchema(System.IO.TextWriter,System.Converter{System.Type,System.String})">
      <summary vsli:raw="Writes the &lt;see cref=&quot;T:System.Data.DataSet&quot; /&gt; structure as an XML schema to the specified &lt;see cref=&quot;T:System.IO.TextWriter&quot; /&gt;.">将 <see cref="T:System.Data.DataSet" /> 结构作为一个 XML 架构写入指定的 <see cref="T:System.IO.TextWriter" />。</summary>
      <param name="writer" vsli:raw="A &lt;see cref=&quot;T:System.IO.TextWriter&quot; /&gt; object to write to.">要写入到的 <see cref="T:System.IO.TextWriter" /> 对象。</param>
      <param name="multipleTargetConverter" vsli:raw="A delegate used to convert &lt;see cref=&quot;T:System.Type&quot; /&gt; to string.">用于将 <see cref="T:System.Type" /> 转换为字符串的委托。</param>
    </member>
    <member name="M:System.Data.DataSet.WriteXmlSchema(System.String)">
      <summary vsli:raw="Writes the &lt;see cref=&quot;T:System.Data.DataSet&quot; /&gt; structure as an XML schema to a file.">将 XML 架构形式的 <see cref="T:System.Data.DataSet" /> 结构写入文件。</summary>
      <param name="fileName" vsli:raw="The file name (including the path) to which to write.">要向其写入的文件的名称（包括路径）。</param>
      <exception cref="T:System.Security.SecurityException" vsli:raw="&lt;see cref=&quot;T:System.Security.Permissions.FileIOPermission&quot; /&gt; is not set to &lt;see cref=&quot;F:System.Security.Permissions.FileIOPermissionAccess.Write&quot; /&gt;.">
        <see cref="T:System.Security.Permissions.FileIOPermission" /> 未设置为 <see cref="F:System.Security.Permissions.FileIOPermissionAccess.Write" />。</exception>
    </member>
    <member name="M:System.Data.DataSet.WriteXmlSchema(System.String,System.Converter{System.Type,System.String})">
      <summary vsli:raw="Writes the &lt;see cref=&quot;T:System.Data.DataSet&quot; /&gt; structure as an XML schema to a file.">将 XML 架构形式的 <see cref="T:System.Data.DataSet" /> 结构写入文件。</summary>
      <param name="fileName" vsli:raw="The name of the file to write to.">要写入的文件的名称。</param>
      <param name="multipleTargetConverter" vsli:raw="A delegate used to convert &lt;see cref=&quot;T:System.Type&quot; /&gt; to string.">用于将 <see cref="T:System.Type" /> 转换为字符串的委托。</param>
    </member>
    <member name="M:System.Data.DataSet.WriteXmlSchema(System.Xml.XmlWriter)">
      <summary vsli:raw="Writes the &lt;see cref=&quot;T:System.Data.DataSet&quot; /&gt; structure as an XML schema to an &lt;see cref=&quot;T:System.Xml.XmlWriter&quot; /&gt; object.">将 XML 架构形式的 <see cref="T:System.Data.DataSet" /> 结构写入 <see cref="T:System.Xml.XmlWriter" /> 对象。</summary>
      <param name="writer" vsli:raw="The &lt;see cref=&quot;T:System.Xml.XmlWriter&quot; /&gt; to write to.">要向其中进行写入的 <see cref="T:System.Xml.XmlWriter" />。</param>
    </member>
    <member name="M:System.Data.DataSet.WriteXmlSchema(System.Xml.XmlWriter,System.Converter{System.Type,System.String})">
      <summary vsli:raw="Writes the &lt;see cref=&quot;T:System.Data.DataSet&quot; /&gt; structure as an XML schema to the specified &lt;see cref=&quot;T:System.Xml.XmlWriter&quot; /&gt;.">将 <see cref="T:System.Data.DataSet" /> 结构作为一个 XML 架构写入指定的 <see cref="T:System.Xml.XmlWriter" />。</summary>
      <param name="writer" vsli:raw="A &lt;see cref=&quot;T:System.Xml.XmlWriter&quot; /&gt; object to write to.">要写入到的 <see cref="T:System.Xml.XmlWriter" /> 对象。</param>
      <param name="multipleTargetConverter" vsli:raw="A delegate used to convert &lt;see cref=&quot;T:System.Type&quot; /&gt; to string.">用于将 <see cref="T:System.Type" /> 转换为字符串的委托。</param>
    </member>
    <member name="P:System.Data.DataSet.CaseSensitive">
      <summary vsli:raw="Gets or sets a value indicating whether string comparisons within &lt;see cref=&quot;T:System.Data.DataTable&quot; /&gt; objects are case-sensitive.">获取或设置一个值，该值指示 <see cref="T:System.Data.DataTable" /> 对象中的字符串比较是否区分大小写。</summary>
      <returns vsli:raw="&lt;see langword=&quot;true&quot; /&gt; if string comparisons are case-sensitive; otherwise, &lt;see langword=&quot;false&quot; /&gt;. The default is &lt;see langword=&quot;false&quot; /&gt;.">
        <see langword="true" /> 如果字符串比较区分大小写，则为; 否则为。否则为 <see langword="false" /> 。 默认值为 <see langword="false" />。</returns>
    </member>
    <member name="P:System.Data.DataSet.DataSetName">
      <summary vsli:raw="Gets or sets the name of the current &lt;see cref=&quot;T:System.Data.DataSet&quot; /&gt;.">获取或设置当前 <see cref="T:System.Data.DataSet" /> 的名称。</summary>
      <returns vsli:raw="The name of the &lt;see cref=&quot;T:System.Data.DataSet&quot; /&gt;.">
        <see cref="T:System.Data.DataSet" /> 的名称。</returns>
    </member>
    <member name="P:System.Data.DataSet.DefaultViewManager">
      <summary vsli:raw="Gets a custom view of the data contained in the &lt;see cref=&quot;T:System.Data.DataSet&quot; /&gt; to allow filtering, searching, and navigating using a custom &lt;see cref=&quot;T:System.Data.DataViewManager&quot; /&gt;.">获取 <see cref="T:System.Data.DataSet" /> 所包含的数据的自定义视图，以允许使用自定义的 <see cref="T:System.Data.DataViewManager" /> 进行筛选、搜索和导航。</summary>
      <returns vsli:raw="A &lt;see cref=&quot;T:System.Data.DataViewManager&quot; /&gt; object.">
        <see cref="T:System.Data.DataViewManager" /> 对象。</returns>
    </member>
    <member name="P:System.Data.DataSet.EnforceConstraints">
      <summary vsli:raw="Gets or sets a value indicating whether constraint rules are followed when attempting any update operation.">获取或设置一个值，该值指示在尝试执行任何更新操作时是否遵循约束规则。</summary>
      <exception cref="T:System.Data.ConstraintException" vsli:raw="One or more constraints cannot be enforced.">无法实施一个或多个约束。</exception>
      <returns vsli:raw="&lt;see langword=&quot;true&quot; /&gt; if rules are enforced; otherwise, &lt;see langword=&quot;false&quot; /&gt;. The default is &lt;see langword=&quot;true&quot; /&gt;.">
        <see langword="true" /> 如果强制执行规则，则为;否则为 <see langword="false" /> 。 默认值为 <see langword="true" />。</returns>
    </member>
    <member name="P:System.Data.DataSet.ExtendedProperties">
      <summary vsli:raw="Gets the collection of customized user information associated with the &lt;see langword=&quot;DataSet&quot; /&gt;.">获取与 <see langword="DataSet" /> 相关的自定义用户信息的集合。</summary>
      <returns vsli:raw="A &lt;see cref=&quot;T:System.Data.PropertyCollection&quot; /&gt; with all custom user information.">包含所有自定义用户信息的 <see cref="T:System.Data.PropertyCollection" />。</returns>
    </member>
    <member name="P:System.Data.DataSet.HasErrors">
      <summary vsli:raw="Gets a value indicating whether there are errors in any of the &lt;see cref=&quot;T:System.Data.DataTable&quot; /&gt; objects within this &lt;see cref=&quot;T:System.Data.DataSet&quot; /&gt;.">获取一个值，指示在此 <see cref="T:System.Data.DataTable" /> 中的任何 <see cref="T:System.Data.DataSet" /> 对象中是否存在错误。</summary>
      <returns vsli:raw="&lt;see langword=&quot;true&quot; /&gt; if any table contains an error; otherwise, &lt;see langword=&quot;false&quot; /&gt;.">
        <see langword="true" /> 如果任何表包含错误，则为;否则为 <see langword="false" /> 。</returns>
    </member>
    <member name="P:System.Data.DataSet.IsInitialized">
      <summary vsli:raw="Gets a value that indicates whether the &lt;see cref=&quot;T:System.Data.DataSet&quot; /&gt; is initialized.">获取一个值，该值指示是否已初始化 <see cref="T:System.Data.DataSet" />。</summary>
      <returns vsli:raw="&lt;see langword=&quot;true&quot; /&gt; to indicate the component has completed initialization; otherwise, &lt;see langword=&quot;false&quot; /&gt;.">如果为 <see langword="true" />，说明组件已完成初始化；否则为 <see langword="false" />。</returns>
    </member>
    <member name="P:System.Data.DataSet.Locale">
      <summary vsli:raw="Gets or sets the locale information used to compare strings within the table.">获取或设置用于比较表中字符串的区域设置信息。</summary>
      <returns vsli:raw="A &lt;see cref=&quot;T:System.Globalization.CultureInfo&quot; /&gt; that contains data about the user's machine locale. The default is &lt;see langword=&quot;null&quot; /&gt;.">一个 <see cref="T:System.Globalization.CultureInfo" />，它包含有关用户计算机区域设置的数据。 默认值为 <see langword="null" />。</returns>
    </member>
    <member name="P:System.Data.DataSet.Namespace">
      <summary vsli:raw="Gets or sets the namespace of the &lt;see cref=&quot;T:System.Data.DataSet&quot; /&gt;.">获取或设置 <see cref="T:System.Data.DataSet" /> 的命名空间。</summary>
      <exception cref="T:System.ArgumentException" vsli:raw="The namespace already has data.">该命名空间已有数据。</exception>
      <returns vsli:raw="The namespace of the &lt;see cref=&quot;T:System.Data.DataSet&quot; /&gt;.">
        <see cref="T:System.Data.DataSet" /> 的命名空间。</returns>
    </member>
    <member name="P:System.Data.DataSet.Prefix">
      <summary vsli:raw="Gets or sets an XML prefix that aliases the namespace of the &lt;see cref=&quot;T:System.Data.DataSet&quot; /&gt;.">获取或设置一个 XML 前缀，该前缀是 <see cref="T:System.Data.DataSet" /> 的命名空间的别名。</summary>
      <returns vsli:raw="The XML prefix for the &lt;see cref=&quot;T:System.Data.DataSet&quot; /&gt; namespace.">
        <see cref="T:System.Data.DataSet" /> 命名空间的 XML 前缀。</returns>
    </member>
    <member name="P:System.Data.DataSet.Relations">
      <summary vsli:raw="Gets the collection of relations that link tables and allow navigation from parent tables to child tables.">获取用于将表链接起来并允许从父表浏览到子表的关系的集合。</summary>
      <returns vsli:raw="A &lt;see cref=&quot;T:System.Data.DataRelationCollection&quot; /&gt; that contains a collection of &lt;see cref=&quot;T:System.Data.DataRelation&quot; /&gt; objects. An empty collection is returned if no &lt;see cref=&quot;T:System.Data.DataRelation&quot; /&gt; objects exist.">一个包含 <see cref="T:System.Data.DataRelationCollection" /> 对象集合的 <see cref="T:System.Data.DataRelation" />。 如果 <see cref="T:System.Data.DataRelation" /> 对象不存在，将返回空集合。</returns>
    </member>
    <member name="P:System.Data.DataSet.RemotingFormat">
      <summary vsli:raw="Gets or sets the serialization format for the &lt;see cref=&quot;T:System.Data.DataSet&quot; /&gt; that's used during remoting.">为远程处理期间使用的 <see cref="T:System.Data.SerializationFormat" /> 获取或设置 <see cref="T:System.Data.DataSet" />。</summary>
      <returns vsli:raw="One of the enumeration values that specifies the serialization format.">
        <see cref="T:System.Data.SerializationFormat" /> 对象。</returns>
    </member>
    <member name="P:System.Data.DataSet.SchemaSerializationMode">
      <summary vsli:raw="Gets or sets a &lt;see cref=&quot;T:System.Data.SchemaSerializationMode&quot; /&gt; for a &lt;see cref=&quot;T:System.Data.DataSet&quot; /&gt;.">获取或设置 <see cref="T:System.Data.SchemaSerializationMode" /> 的 <see cref="T:System.Data.DataSet" />。</summary>
      <returns vsli:raw="A &lt;see cref=&quot;T:System.Data.SchemaSerializationMode&quot; /&gt; for a &lt;see cref=&quot;T:System.Data.DataSet&quot; /&gt;.">
        <see cref="T:System.Data.SchemaSerializationMode" /> 的 <see cref="T:System.Data.DataSet" />。</returns>
    </member>
    <member name="P:System.Data.DataSet.Site">
      <summary vsli:raw="Gets or sets an &lt;see cref=&quot;T:System.ComponentModel.ISite&quot; /&gt; for the &lt;see cref=&quot;T:System.Data.DataSet&quot; /&gt;.">获取或设置 <see cref="T:System.ComponentModel.ISite" /> 的 <see cref="T:System.Data.DataSet" />。</summary>
      <returns vsli:raw="An &lt;see cref=&quot;T:System.ComponentModel.ISite&quot; /&gt; for the &lt;see cref=&quot;T:System.Data.DataSet&quot; /&gt;.">
        <see cref="T:System.ComponentModel.ISite" /> 的一个 <see cref="T:System.Data.DataSet" />。</returns>
    </member>
    <member name="P:System.Data.DataSet.System#ComponentModel#IListSource#ContainsListCollection">
      <summary vsli:raw="For a description of this member, see &lt;see cref=&quot;P:System.ComponentModel.IListSource.ContainsListCollection&quot; /&gt;.">有关此成员的说明，请参见 <see cref="P:System.ComponentModel.IListSource.ContainsListCollection" />。</summary>
      <returns vsli:raw="For a description of this member, see &lt;see cref=&quot;P:System.ComponentModel.IListSource.ContainsListCollection&quot; /&gt;.">有关此成员的说明，请参见 <see cref="P:System.ComponentModel.IListSource.ContainsListCollection" />。</returns>
    </member>
    <member name="P:System.Data.DataSet.Tables">
      <summary vsli:raw="Gets the collection of tables contained in the &lt;see cref=&quot;T:System.Data.DataSet&quot; /&gt;.">获取包含在 <see cref="T:System.Data.DataSet" /> 中的表的集合。</summary>
      <returns vsli:raw="The &lt;see cref=&quot;T:System.Data.DataTableCollection&quot; /&gt; contained by this &lt;see cref=&quot;T:System.Data.DataSet&quot; /&gt;. An empty collection is returned if no &lt;see cref=&quot;T:System.Data.DataTable&quot; /&gt; objects exist.">此 <see cref="T:System.Data.DataTableCollection" /> 包含的 <see cref="T:System.Data.DataSet" />。 如果 <see cref="T:System.Data.DataTable" /> 对象不存在，将返回空集合。</returns>
    </member>
    <member name="T:System.Data.DataSetDateTime">
      <summary vsli:raw="Describes the serialization format for &lt;see cref=&quot;T:System.DateTime&quot; /&gt; columns in a &lt;see cref=&quot;T:System.Data.DataSet&quot; /&gt;.">介绍 <see cref="T:System.DateTime" /> 中 <see cref="T:System.Data.DataSet" /> 列的序列化格式。</summary>
    </member>
    <member name="F:System.Data.DataSetDateTime.Local">
      <summary vsli:raw="&lt;see langword=&quot;DateTime&quot; /&gt; is always stored in Local. If &lt;see cref=&quot;F:System.Data.DataSetDateTime.Utc&quot; /&gt; or &lt;see cref=&quot;F:System.Data.DataSetDateTime.Unspecified&quot; /&gt; is assigned to a column in this mode, it is first converted into Local. Serialization in this mode is always performed in Local. There is an offset during serialization.">
        <see langword="DateTime" /> 始终存储为 Local 格式。 如果将 <see cref="F:System.Data.DataSetDateTime.Utc" /> 或 <see cref="F:System.Data.DataSetDateTime.Unspecified" /> 分配给此模式的列，则首先要将其转换为 Local 格式。 通常以 Local 格式在此模式中执行序列化。 在序列化期间将产生偏移量。</summary>
    </member>
    <member name="F:System.Data.DataSetDateTime.Unspecified">
      <summary vsli:raw="&lt;see langword=&quot;DateTime&quot; /&gt; is always stored in Unspecified. If &lt;see cref=&quot;F:System.Data.DataSetDateTime.Local&quot; /&gt; or &lt;see cref=&quot;F:System.Data.DataSetDateTime.Utc&quot; /&gt; is assigned to a column in this mode, it is first converted into &lt;see cref=&quot;F:System.Data.DataSetDateTime.Unspecified&quot; /&gt;. Serialization in this mode does not cause an offset.">
        <see langword="DateTime" /> 始终存储为 Unspecified 格式。 如果将 <see cref="F:System.Data.DataSetDateTime.Local" /> 或 <see cref="F:System.Data.DataSetDateTime.Utc" /> 分配给此模式的列，则首先要将其转换为 <see cref="F:System.Data.DataSetDateTime.Unspecified" /> 格式。 在此模式中的序列化不会产生偏移量。</summary>
    </member>
    <member name="F:System.Data.DataSetDateTime.UnspecifiedLocal">
      <summary vsli:raw="&lt;see langword=&quot;DateTime&quot; /&gt; is stored in Unspecified. If &lt;see cref=&quot;F:System.Data.DataSetDateTime.Local&quot; /&gt; or &lt;see cref=&quot;F:System.Data.DataSetDateTime.Utc&quot; /&gt; is assigned to a column in this mode, it is first converted into &lt;see cref=&quot;F:System.Data.DataSetDateTime.Unspecified&quot; /&gt;. Serialization in this mode causes offset. This is the default behavior and is backward compatible. This option should be thought of as being Unspecified in storage but applying an offset that is similar to &lt;see cref=&quot;F:System.Data.DataSetDateTime.Local&quot; /&gt; during serialization.">
        <see langword="DateTime" /> 存储为 Unspecified 格式。 如果将 <see cref="F:System.Data.DataSetDateTime.Local" /> 或 <see cref="F:System.Data.DataSetDateTime.Utc" /> 分配给此模式的列，则首先要将其转换为 <see cref="F:System.Data.DataSetDateTime.Unspecified" /> 格式。 在此模式中的序列化将产生偏移量。 此为默认行为，可向后兼容。 应将此选项在存储区中视为 Unspecified 格式，而在序列化期间应用类似于 <see cref="F:System.Data.DataSetDateTime.Local" /> 的偏移量。</summary>
    </member>
    <member name="F:System.Data.DataSetDateTime.Utc">
      <summary vsli:raw="&lt;see langword=&quot;DateTime&quot; /&gt; is stored in Universal Coordinated Time (UTC). If &lt;see cref=&quot;F:System.Data.DataSetDateTime.Local&quot; /&gt; or &lt;see cref=&quot;F:System.Data.DataSetDateTime.Unspecified&quot; /&gt; is assigned to a column in this mode, it is first converted into &lt;see langword=&quot;Utc&quot; /&gt; format. Serialization in this mode is always performed in &lt;see langword=&quot;Utc&quot; /&gt;. There is no offset during serialization.">
        <see langword="DateTime" /> 存储为协调通用时间 (UTC) 格式。 如果将 <see cref="F:System.Data.DataSetDateTime.Local" /> 或 <see cref="F:System.Data.DataSetDateTime.Unspecified" /> 分配给此模式的列，则首先要将其转换为 <see langword="Utc" /> 格式。 通常以 <see langword="Utc" /> 格式在此模式中执行序列化。 序列化时不会产生偏移量。</summary>
    </member>
    <member name="T:System.Data.DataSysDescriptionAttribute">
      <summary vsli:raw="Marks a property, event, or extender with a description. Visual designers can display this description when referencing the member.">用说明来标记属性、事件或扩展程序。 可视化设计器在引用成员时可显示该说明。</summary>
    </member>
    <member name="M:System.Data.DataSysDescriptionAttribute.#ctor(System.String)">
      <summary vsli:raw="Initializes a new instance of the &lt;see cref=&quot;T:System.Data.DataSysDescriptionAttribute&quot; /&gt; class using the specified description string.">使用指定的说明字符串初始化 <see cref="T:System.Data.DataSysDescriptionAttribute" /> 类的新实例。</summary>
      <param name="description" vsli:raw="The description string.">说明字符串。</param>
    </member>
    <member name="P:System.Data.DataSysDescriptionAttribute.Description">
      <summary vsli:raw="Gets the text for the description.">获取说明的文本。</summary>
      <returns vsli:raw="The description string.">说明字符串。</returns>
    </member>
    <member name="T:System.Data.DataTable">
      <summary vsli:raw="Represents one table of in-memory data.">表示内存中数据的一个表。</summary>
    </member>
    <member name="E:System.Data.DataTable.ColumnChanged">
      <summary vsli:raw="Occurs after a value has been changed for the specified &lt;see cref=&quot;T:System.Data.DataColumn&quot; /&gt; in a &lt;see cref=&quot;T:System.Data.DataRow&quot; /&gt;.">更改 <see cref="T:System.Data.DataRow" /> 中指定的 <see cref="T:System.Data.DataColumn" /> 值之后发生。</summary>
    </member>
    <member name="E:System.Data.DataTable.ColumnChanging">
      <summary vsli:raw="Occurs when a value is being changed for the specified &lt;see cref=&quot;T:System.Data.DataColumn&quot; /&gt; in a &lt;see cref=&quot;T:System.Data.DataRow&quot; /&gt;.">更改 <see cref="T:System.Data.DataRow" /> 中指定的 <see cref="T:System.Data.DataColumn" /> 值时发生。</summary>
    </member>
    <member name="E:System.Data.DataTable.Initialized">
      <summary vsli:raw="Occurs after the &lt;see cref=&quot;T:System.Data.DataTable&quot; /&gt; is initialized.">初始化 <see cref="T:System.Data.DataTable" /> 后发生。</summary>
    </member>
    <member name="E:System.Data.DataTable.RowChanged">
      <summary vsli:raw="Occurs after a &lt;see cref=&quot;T:System.Data.DataRow&quot; /&gt; has been changed successfully.">在成功更改 <see cref="T:System.Data.DataRow" /> 后发生。</summary>
    </member>
    <member name="E:System.Data.DataTable.RowChanging">
      <summary vsli:raw="Occurs when a &lt;see cref=&quot;T:System.Data.DataRow&quot; /&gt; is changing.">在更改 <see cref="T:System.Data.DataRow" /> 时发生。</summary>
    </member>
    <member name="E:System.Data.DataTable.RowDeleted">
      <summary vsli:raw="Occurs after a row in the table has been deleted.">删除表中的行后发生。</summary>
    </member>
    <member name="E:System.Data.DataTable.RowDeleting">
      <summary vsli:raw="Occurs before a row in the table is about to be deleted.">要删除表中的行之前发生。</summary>
    </member>
    <member name="E:System.Data.DataTable.TableCleared">
      <summary vsli:raw="Occurs after a &lt;see cref=&quot;T:System.Data.DataTable&quot; /&gt; is cleared.">清除 <see cref="T:System.Data.DataTable" /> 后发生。</summary>
    </member>
    <member name="E:System.Data.DataTable.TableClearing">
      <summary vsli:raw="Occurs when a &lt;see cref=&quot;T:System.Data.DataTable&quot; /&gt; is cleared.">清除 <see cref="T:System.Data.DataTable" /> 时发生。</summary>
    </member>
    <member name="E:System.Data.DataTable.TableNewRow">
      <summary vsli:raw="Occurs when a new &lt;see cref=&quot;T:System.Data.DataRow&quot; /&gt; is inserted.">插入新的 <see cref="T:System.Data.DataRow" /> 时发生。</summary>
    </member>
    <member name="F:System.Data.DataTable.fInitInProgress">
      <summary vsli:raw="Checks whether initialization is in progress. The initialization occurs at run time.">检查是否正在进行初始化。 初始化发生在运行时。</summary>
    </member>
    <member name="M:System.Data.DataTable.#ctor">
      <summary vsli:raw="Initializes a new instance of the &lt;see cref=&quot;T:System.Data.DataTable&quot; /&gt; class with no arguments.">在不使用参数的情况下初始化 <see cref="T:System.Data.DataTable" /> 类的新实例。</summary>
    </member>
    <member name="M:System.Data.DataTable.#ctor(System.Runtime.Serialization.SerializationInfo,System.Runtime.Serialization.StreamingContext)">
      <summary vsli:raw="Initializes a new instance of the &lt;see cref=&quot;T:System.Data.DataTable&quot; /&gt; class with serialized data.">使用 <see cref="T:System.Runtime.Serialization.SerializationInfo" /> 和 <see cref="T:System.Runtime.Serialization.StreamingContext" /> 初始化 <see cref="T:System.Data.DataTable" /> 类的新实例。</summary>
      <param name="info" vsli:raw="The serialized data for the data set.">序列化或反序列化对象所需的数据。</param>
      <param name="context" vsli:raw="Contextual information about the serialized stream.">给定序列化流的源和目标。</param>
    </member>
    <member name="M:System.Data.DataTable.#ctor(System.String)">
      <summary vsli:raw="Initializes a new instance of the &lt;see cref=&quot;T:System.Data.DataTable&quot; /&gt; class with the specified table name.">使用指定的表名初始化 <see cref="T:System.Data.DataTable" /> 类的新实例。</summary>
      <param name="tableName" vsli:raw="The name to give the table. If &lt;paramref name=&quot;tableName&quot; /&gt; is &lt;see langword=&quot;null&quot; /&gt; or an empty string, a default name is given when added to the &lt;see cref=&quot;T:System.Data.DataTableCollection&quot; /&gt;.">要向表提供的名称。 如果 <paramref name="tableName" /> 为 <see langword="null" /> 或是空字符串，则在添加到 <see cref="T:System.Data.DataTableCollection" /> 中时指定默认名称。</param>
    </member>
    <member name="M:System.Data.DataTable.#ctor(System.String,System.String)">
      <summary vsli:raw="Initializes a new instance of the &lt;see cref=&quot;T:System.Data.DataTable&quot; /&gt; class using the specified table name and namespace.">使用指定的表名和命名空间初始化 <see cref="T:System.Data.DataTable" /> 类的新实例。</summary>
      <param name="tableName" vsli:raw="The name to give the table. If &lt;paramref name=&quot;tableName&quot; /&gt; is &lt;see langword=&quot;null&quot; /&gt; or an empty string, a default name is given when added to the &lt;see cref=&quot;T:System.Data.DataTableCollection&quot; /&gt;.">要向表提供的名称。 如果 <paramref name="tableName" /> 为 <see langword="null" /> 或是空字符串，则在添加到 <see cref="T:System.Data.DataTableCollection" /> 中时指定默认名称。</param>
      <param name="tableNamespace" vsli:raw="The namespace for the XML representation of the data stored in the &lt;see langword=&quot;DataTable&quot; /&gt;.">
        <see langword="DataTable" /> 中所存储数据的 XML 表示形式的命名空间。</param>
    </member>
    <member name="M:System.Data.DataTable.AcceptChanges">
      <summary vsli:raw="Commits all the changes made to this table since the last time &lt;see cref=&quot;M:System.Data.DataTable.AcceptChanges&quot; /&gt; was called.">提交自上次调用 <see cref="M:System.Data.DataTable.AcceptChanges" /> 以来对该表进行的所有更改。</summary>
    </member>
    <member name="M:System.Data.DataTable.BeginInit">
      <summary vsli:raw="Begins the initialization of a &lt;see cref=&quot;T:System.Data.DataTable&quot; /&gt; that is used on a form or used by another component. The initialization occurs at run time.">开始初始化在窗体上使用或由另一个组件使用的 <see cref="T:System.Data.DataTable" />。 初始化发生在运行时。</summary>
    </member>
    <member name="M:System.Data.DataTable.BeginLoadData">
      <summary vsli:raw="Turns off notifications, index maintenance, and constraints while loading data.">加载数据时，关闭通知、索引维护和约束。</summary>
    </member>
    <member name="M:System.Data.DataTable.Clear">
      <summary vsli:raw="Clears the &lt;see cref=&quot;T:System.Data.DataTable&quot; /&gt; of all data.">清除所有数据的 <see cref="T:System.Data.DataTable" />。</summary>
    </member>
    <member name="M:System.Data.DataTable.Clone">
      <summary vsli:raw="Clones the structure of the &lt;see cref=&quot;T:System.Data.DataTable&quot; /&gt;, including all &lt;see cref=&quot;T:System.Data.DataTable&quot; /&gt; schemas and constraints.">克隆 <see cref="T:System.Data.DataTable" /> 的结构，包括所有 <see cref="T:System.Data.DataTable" /> 架构和约束。</summary>
      <returns vsli:raw="A new &lt;see cref=&quot;T:System.Data.DataTable&quot; /&gt; with the same schema as the current &lt;see cref=&quot;T:System.Data.DataTable&quot; /&gt;.">新的 <see cref="T:System.Data.DataTable" />，与当前 <see cref="T:System.Data.DataTable" /> 具有相同架构。</returns>
    </member>
    <member name="M:System.Data.DataTable.Compute(System.String,System.String)">
      <summary vsli:raw="Computes the given expression on the current rows that pass the filter criteria.">计算用来传递筛选条件的当前行上的给定表达式。</summary>
      <param name="expression" vsli:raw="The expression to compute.">要计算的表达式。</param>
      <param name="filter" vsli:raw="The filter to limit the rows that evaluate in the expression.">用于限制表达式中计算的行的筛选器。</param>
      <returns vsli:raw="An &lt;see cref=&quot;T:System.Object&quot; /&gt;, set to the result of the computation. If the expression evaluates to null, the return value will be &lt;see cref=&quot;F:System.DBNull.Value&quot; /&gt;.">将 <see cref="T:System.Object" /> 设置为计算结果。 如果该表达式计算结果为 null，则返回值为 <see cref="F:System.DBNull.Value" />。</returns>
    </member>
    <member name="M:System.Data.DataTable.Copy">
      <summary vsli:raw="Copies both the structure and data for this &lt;see cref=&quot;T:System.Data.DataTable&quot; /&gt;.">复制该 <see cref="T:System.Data.DataTable" /> 的结构和数据。</summary>
      <returns vsli:raw="A new &lt;see cref=&quot;T:System.Data.DataTable&quot; /&gt; with the same structure (table schemas and constraints) and data as this &lt;see cref=&quot;T:System.Data.DataTable&quot; /&gt;.  &#xA;  &#xA; If these classes have been derived, the copy will also be of the same derived classes.  &#xA;  &#xA; &lt;see cref=&quot;M:System.Data.DataTable.Copy&quot; /&gt; creates a new &lt;see cref=&quot;T:System.Data.DataTable&quot; /&gt; with the same structure and data as the original &lt;see cref=&quot;T:System.Data.DataTable&quot; /&gt;. To copy the structure to a new &lt;see cref=&quot;T:System.Data.DataTable&quot; /&gt;, but not the data, use &lt;see cref=&quot;M:System.Data.DataTable.Clone&quot; /&gt;.">新的 <see cref="T:System.Data.DataTable" />，具有与该 <see cref="T:System.Data.DataTable" /> 相同的结构（表架构和约束）和数据。  
  
如果已派生这些类，则副本也是相同的派生类。  
  
 <see cref="M:System.Data.DataTable.Copy" /> 创建一个新 <see cref="T:System.Data.DataTable" />，后者与原始 <see cref="T:System.Data.DataTable" /> 具有相同的结构和数据。 要将结构复制到新的 <see cref="T:System.Data.DataTable" />，而不是复制到数据，请使用 <see cref="M:System.Data.DataTable.Clone" />。</returns>
    </member>
    <member name="M:System.Data.DataTable.CreateDataReader">
      <summary vsli:raw="Returns a &lt;see cref=&quot;T:System.Data.DataTableReader&quot; /&gt; corresponding to the data within this &lt;see cref=&quot;T:System.Data.DataTable&quot; /&gt;.">返回与此 <see cref="T:System.Data.DataTable" /> 内的数据对应的 <see cref="T:System.Data.DataTableReader" />。</summary>
      <returns vsli:raw="A &lt;see cref=&quot;T:System.Data.DataTableReader&quot; /&gt; containing one result set, corresponding to the source &lt;see cref=&quot;T:System.Data.DataTable&quot; /&gt; instance.">
        <see cref="T:System.Data.DataTableReader" /> 包含一个对应于源 <see cref="T:System.Data.DataTable" /> 实例的结果集。</returns>
    </member>
    <member name="M:System.Data.DataTable.CreateInstance">
      <summary vsli:raw="Creates a new instance of &lt;see cref=&quot;T:System.Data.DataTable&quot; /&gt;.">创建 <see cref="T:System.Data.DataTable" /> 的新实例。</summary>
      <returns vsli:raw="The new expression.">新表达式。</returns>
    </member>
    <member name="M:System.Data.DataTable.EndInit">
      <summary vsli:raw="Ends the initialization of a &lt;see cref=&quot;T:System.Data.DataTable&quot; /&gt; that is used on a form or used by another component. The initialization occurs at run time.">结束在窗体上使用或由另一个组件使用的 <see cref="T:System.Data.DataTable" /> 的初始化。 初始化发生在运行时。</summary>
    </member>
    <member name="M:System.Data.DataTable.EndLoadData">
      <summary vsli:raw="Turns on notifications, index maintenance, and constraints after loading data.">加载数据后，打开通知、索引维护和约束。</summary>
    </member>
    <member name="M:System.Data.DataTable.GetChanges">
      <summary vsli:raw="Gets a copy of the &lt;see cref=&quot;T:System.Data.DataTable&quot; /&gt; that contains all changes made to it since it was loaded or &lt;see cref=&quot;M:System.Data.DataTable.AcceptChanges&quot; /&gt; was last called.">获取 <see cref="T:System.Data.DataTable" /> 的副本，该副本包含自加载以来或自上次调用 <see cref="M:System.Data.DataTable.AcceptChanges" /> 以来进行的所有更改。</summary>
      <returns vsli:raw="A copy of the changes from this &lt;see cref=&quot;T:System.Data.DataTable&quot; /&gt;, or &lt;see langword=&quot;null&quot; /&gt; if no changes are found.">此 <see cref="T:System.Data.DataTable" /> 中的更改的副本，如果未发现更改，则为 <see langword="null" />。</returns>
    </member>
    <member name="M:System.Data.DataTable.GetChanges(System.Data.DataRowState)">
      <summary vsli:raw="Gets a copy of the &lt;see cref=&quot;T:System.Data.DataTable&quot; /&gt; containing all changes made to it since it was last loaded, or since &lt;see cref=&quot;M:System.Data.DataTable.AcceptChanges&quot; /&gt; was called, filtered by &lt;see cref=&quot;T:System.Data.DataRowState&quot; /&gt;.">获取由 <see cref="T:System.Data.DataRowState" /> 筛选的 <see cref="T:System.Data.DataTable" /> 的副本，该副本包含上次加载以来或调用 <see cref="M:System.Data.DataTable.AcceptChanges" /> 以来进行的所有更改。</summary>
      <param name="rowStates" vsli:raw="One of the &lt;see cref=&quot;T:System.Data.DataRowState&quot; /&gt; values.">
        <see cref="T:System.Data.DataRowState" /> 值之一。</param>
      <returns vsli:raw="A filtered copy of the &lt;see cref=&quot;T:System.Data.DataTable&quot; /&gt; that can have actions performed on it, and later be merged back in the &lt;see cref=&quot;T:System.Data.DataTable&quot; /&gt; using &lt;see cref=&quot;M:System.Data.DataSet.Merge(System.Data.DataSet)&quot; /&gt;. If no rows of the desired &lt;see cref=&quot;T:System.Data.DataRowState&quot; /&gt; are found, the method returns &lt;see langword=&quot;null&quot; /&gt;.">
        <see cref="T:System.Data.DataTable" /> 的筛选副本，可以对该副本执行操作，之后可以使用 <see cref="T:System.Data.DataTable" /> 将其合并回 <see cref="M:System.Data.DataSet.Merge(System.Data.DataSet)" />。 如果未找到所需 <see cref="T:System.Data.DataRowState" /> 的行，则该方法返回 <see langword="null" />。</returns>
    </member>
    <member name="M:System.Data.DataTable.GetDataTableSchema(System.Xml.Schema.XmlSchemaSet)">
      <summary vsli:raw="This method returns an &lt;see cref=&quot;T:System.Xml.Schema.XmlSchemaSet&quot; /&gt; instance containing the Web Services Description Language (WSDL) that describes the &lt;see cref=&quot;T:System.Data.DataTable&quot; /&gt; for Web Services.">该方法返回一个包含 Web Services 描述语言 (WSDL) 的 <see cref="T:System.Xml.Schema.XmlSchemaSet" /> 实例，该语言描述了用于 Web 服务的 <see cref="T:System.Data.DataTable" />。</summary>
      <param name="schemaSet" vsli:raw="An &lt;see cref=&quot;T:System.Xml.Schema.XmlSchemaSet&quot; /&gt; instance.">一个 <see cref="T:System.Xml.Schema.XmlSchemaSet" /> 实例。</param>
      <returns vsli:raw="The &lt;see cref=&quot;T:System.Xml.Schema.XmlSchemaSet&quot; /&gt; instance.">
        <see cref="T:System.Xml.Schema.XmlSchemaSet" /> 实例。</returns>
    </member>
    <member name="M:System.Data.DataTable.GetErrors">
      <summary vsli:raw="Gets an array of &lt;see cref=&quot;T:System.Data.DataRow&quot; /&gt; objects that contain errors.">获取包含错误的 <see cref="T:System.Data.DataRow" /> 对象数组。</summary>
      <returns vsli:raw="An array of &lt;see cref=&quot;T:System.Data.DataRow&quot; /&gt; objects that have errors.">包含错误的 <see cref="T:System.Data.DataRow" /> 对象数组。</returns>
    </member>
    <member name="M:System.Data.DataTable.GetObjectData(System.Runtime.Serialization.SerializationInfo,System.Runtime.Serialization.StreamingContext)">
      <summary vsli:raw="Populates a serialization information object with the data needed to serialize the &lt;see cref=&quot;T:System.Data.DataTable&quot; /&gt;.">使用序列化 <see cref="T:System.Data.DataTable" /> 时所需的数据填充序列化信息对象。</summary>
      <param name="info" vsli:raw="A &lt;see cref=&quot;T:System.Runtime.Serialization.SerializationInfo&quot; /&gt; object that holds the serialized data associated with the &lt;see cref=&quot;T:System.Data.DataTable&quot; /&gt;.">一个 <see cref="T:System.Runtime.Serialization.SerializationInfo" /> 对象，包含与 <see cref="T:System.Data.DataTable" /> 关联的序列化数据。</param>
      <param name="context" vsli:raw="A &lt;see cref=&quot;T:System.Runtime.Serialization.StreamingContext&quot; /&gt; object that contains the source and destination of the serialized stream associated with the &lt;see cref=&quot;T:System.Data.DataTable&quot; /&gt;.">一个 <see cref="T:System.Runtime.Serialization.StreamingContext" /> 对象，包含与 <see cref="T:System.Data.DataTable" /> 关联的序列化流的源和目标。</param>
      <exception cref="T:System.ArgumentNullException" vsli:raw="The &lt;paramref name=&quot;info&quot; /&gt; parameter is a null reference (&lt;see langword=&quot;Nothing&quot; /&gt; in Visual Basic).">
        <paramref name="info" /> 参数为 null 引用（在 Visual Basic 中为 <see langword="Nothing" />）。</exception>
    </member>
    <member name="M:System.Data.DataTable.GetRowType">
      <summary vsli:raw="Gets the row type.">获取行类型。</summary>
      <returns vsli:raw="The type of the &lt;see cref=&quot;T:System.Data.DataRow&quot; /&gt;.">
        <see cref="T:System.Data.DataRow" /> 的类型。</returns>
    </member>
    <member name="M:System.Data.DataTable.GetSchema">
      <summary vsli:raw="For a description of this member, see &lt;see cref=&quot;M:System.Xml.Serialization.IXmlSerializable.GetSchema&quot; /&gt;.">有关此成员的说明，请参见 <see cref="M:System.Xml.Serialization.IXmlSerializable.GetSchema" />。</summary>
      <returns vsli:raw="An &lt;see cref=&quot;T:System.Xml.Schema.XmlSchema&quot; /&gt; that describes the XML representation of the object that is produced by the &lt;see cref=&quot;M:System.Xml.Serialization.IXmlSerializable.WriteXml(System.Xml.XmlWriter)&quot; /&gt; method and consumed by the &lt;see cref=&quot;M:System.Xml.Serialization.IXmlSerializable.ReadXml(System.Xml.XmlReader)&quot; /&gt; method.">由 <see cref="T:System.Xml.Schema.XmlSchema" /> 方法生成并由 <see cref="M:System.Xml.Serialization.IXmlSerializable.WriteXml(System.Xml.XmlWriter)" /> 方法使用的对象的 XML 表示形式的 <see cref="M:System.Xml.Serialization.IXmlSerializable.ReadXml(System.Xml.XmlReader)" />。</returns>
    </member>
    <member name="M:System.Data.DataTable.ImportRow(System.Data.DataRow)">
      <summary vsli:raw="Copies a &lt;see cref=&quot;T:System.Data.DataRow&quot; /&gt; into a &lt;see cref=&quot;T:System.Data.DataTable&quot; /&gt;, preserving any property settings, as well as original and current values.">将 <see cref="T:System.Data.DataRow" /> 复制到 <see cref="T:System.Data.DataTable" /> 中，保留任何属性设置以及初始值和当前值。</summary>
      <param name="row" vsli:raw="The &lt;see cref=&quot;T:System.Data.DataRow&quot; /&gt; to be imported.">要导入的 <see cref="T:System.Data.DataRow" />。</param>
    </member>
    <member name="M:System.Data.DataTable.Load(System.Data.IDataReader)">
      <summary vsli:raw="Fills a &lt;see cref=&quot;T:System.Data.DataTable&quot; /&gt; with values from a data source using the supplied &lt;see cref=&quot;T:System.Data.IDataReader&quot; /&gt;. If the &lt;see cref=&quot;T:System.Data.DataTable&quot; /&gt; already contains rows, the incoming data from the data source is merged with the existing rows.">通过所提供的 <see cref="T:System.Data.IDataReader" />，用某个数据源的值填充 <see cref="T:System.Data.DataTable" />。 如果 <see cref="T:System.Data.DataTable" /> 已经包含行，则从数据源传入的数据与现有行合并。</summary>
      <param name="reader" vsli:raw="An &lt;see cref=&quot;T:System.Data.IDataReader&quot; /&gt; that provides a result set.">提供结果集的 <see cref="T:System.Data.IDataReader" />。</param>
    </member>
    <member name="M:System.Data.DataTable.Load(System.Data.IDataReader,System.Data.LoadOption)">
      <summary vsli:raw="Fills a &lt;see cref=&quot;T:System.Data.DataTable&quot; /&gt; with values from a data source using the supplied &lt;see cref=&quot;T:System.Data.IDataReader&quot; /&gt;. If the &lt;see langword=&quot;DataTable&quot; /&gt; already contains rows, the incoming data from the data source is merged with the existing rows according to the value of the &lt;paramref name=&quot;loadOption&quot; /&gt; parameter.">通过所提供的 <see cref="T:System.Data.IDataReader" />，用某个数据源的值填充 <see cref="T:System.Data.DataTable" />。 如果 <see langword="DataTable" /> 已包含行，则从数据源传入的数据根据 <paramref name="loadOption" /> 参数的值与现有行合并。</summary>
      <param name="reader" vsli:raw="An &lt;see cref=&quot;T:System.Data.IDataReader&quot; /&gt; that provides one or more result sets.">提供一个或多个结果集的 <see cref="T:System.Data.IDataReader" />。</param>
      <param name="loadOption" vsli:raw="A value from the &lt;see cref=&quot;T:System.Data.LoadOption&quot; /&gt; enumeration that indicates how rows already in the &lt;see cref=&quot;T:System.Data.DataTable&quot; /&gt; are combined with incoming rows that share the same primary key.">
        <see cref="T:System.Data.LoadOption" /> 枚举的值，指示 <see cref="T:System.Data.DataTable" /> 中已有的行如何与共享相同主键的传入行合并。</param>
    </member>
    <member name="M:System.Data.DataTable.Load(System.Data.IDataReader,System.Data.LoadOption,System.Data.FillErrorEventHandler)">
      <summary vsli:raw="Fills a &lt;see cref=&quot;T:System.Data.DataTable&quot; /&gt; with values from a data source using the supplied &lt;see cref=&quot;T:System.Data.IDataReader&quot; /&gt; using an error-handling delegate.">通过所提供的使用错误处理委托的 <see cref="T:System.Data.IDataReader" />，用某个数据源中的值填充 <see cref="T:System.Data.DataTable" />。</summary>
      <param name="reader" vsli:raw="A &lt;see cref=&quot;T:System.Data.IDataReader&quot; /&gt; that provides a result set.">提供结果集的 <see cref="T:System.Data.IDataReader" />。</param>
      <param name="loadOption" vsli:raw="A value from the &lt;see cref=&quot;T:System.Data.LoadOption&quot; /&gt; enumeration that indicates how rows already in the &lt;see cref=&quot;T:System.Data.DataTable&quot; /&gt; are combined with incoming rows that share the same primary key.">
        <see cref="T:System.Data.LoadOption" /> 枚举的值，指示 <see cref="T:System.Data.DataTable" /> 中已有的行如何与共享相同主键的传入行合并。</param>
      <param name="errorHandler" vsli:raw="A &lt;see cref=&quot;T:System.Data.FillErrorEventHandler&quot; /&gt; delegate to call when an error occurs while loading data.">加载数据时出现错误的情况下要调用的 <see cref="T:System.Data.FillErrorEventHandler" /> 委托。</param>
    </member>
    <member name="M:System.Data.DataTable.LoadDataRow(System.Object[],System.Boolean)">
      <summary vsli:raw="Finds and updates a specific row. If no matching row is found, a new row is created using the given values.">查找和更新特定行。 如果找不到任何匹配行，则使用给定值创建新行。</summary>
      <param name="values" vsli:raw="An array of values used to create the new row.">用于创建新行的值数组。</param>
      <param name="fAcceptChanges" vsli:raw="&lt;see langword=&quot;true&quot; /&gt; to accept changes; otherwise &lt;see langword=&quot;false&quot; /&gt;.">如果接受更改，则为 <see langword="true" />；否则为 <see langword="false" />。</param>
      <exception cref="T:System.ArgumentException" vsli:raw="The array is larger than the number of columns in the table.">该数组大于表中的列数。</exception>
      <exception cref="T:System.InvalidCastException" vsli:raw="A value doesn't match its respective column type.">值与其各自的列类型不匹配。</exception>
      <exception cref="T:System.Data.ConstraintException" vsli:raw="Adding the row invalidates a constraint.">添加行会使约束无效。</exception>
      <exception cref="T:System.Data.NoNullAllowedException" vsli:raw="Attempting to put a null in a column where &lt;see cref=&quot;P:System.Data.DataColumn.AllowDBNull&quot; /&gt; is false.">尝试将 null 值放到 <see cref="P:System.Data.DataColumn.AllowDBNull" /> 为 false 的列中。</exception>
      <returns vsli:raw="The new &lt;see cref=&quot;T:System.Data.DataRow&quot; /&gt;.">新的 <see cref="T:System.Data.DataRow" />。</returns>
    </member>
    <member name="M:System.Data.DataTable.LoadDataRow(System.Object[],System.Data.LoadOption)">
      <summary vsli:raw="Finds and updates a specific row. If no matching row is found, a new row is created using the given values.">查找和更新特定行。 如果找不到任何匹配行，则使用给定值创建新行。</summary>
      <param name="values" vsli:raw="An array of values used to create the new row.">用于创建新行的值数组。</param>
      <param name="loadOption" vsli:raw="Used to determine how the array values are applied to the corresponding values in an existing row.">用于确定数组值如何应用于现有行中的对应值。</param>
      <returns vsli:raw="The new &lt;see cref=&quot;T:System.Data.DataRow&quot; /&gt;.">新的 <see cref="T:System.Data.DataRow" />。</returns>
    </member>
    <member name="M:System.Data.DataTable.Merge(System.Data.DataTable)">
      <summary vsli:raw="Merge the specified &lt;see cref=&quot;T:System.Data.DataTable&quot; /&gt; with the current &lt;see cref=&quot;T:System.Data.DataTable&quot; /&gt;.">将指定的 <see cref="T:System.Data.DataTable" /> 与当前 <see cref="T:System.Data.DataTable" /> 合并。</summary>
      <param name="table" vsli:raw="The &lt;see cref=&quot;T:System.Data.DataTable&quot; /&gt; to be merged with the current &lt;see cref=&quot;T:System.Data.DataTable&quot; /&gt;.">要与当前 <see cref="T:System.Data.DataTable" /> 合并的 <see cref="T:System.Data.DataTable" />。</param>
    </member>
    <member name="M:System.Data.DataTable.Merge(System.Data.DataTable,System.Boolean)">
      <summary vsli:raw="Merge the specified &lt;see cref=&quot;T:System.Data.DataTable&quot; /&gt; with the current &lt;see langword=&quot;DataTable&quot; /&gt;, indicating whether to preserve changes in the current &lt;see langword=&quot;DataTable&quot; /&gt;.">将指定的 <see cref="T:System.Data.DataTable" /> 与当前 <see langword="DataTable" /> 合并，指示是否保留当前 <see langword="DataTable" /> 中的更改。</summary>
      <param name="table" vsli:raw="The &lt;see langword=&quot;DataTable&quot; /&gt; to be merged with the current &lt;see langword=&quot;DataTable&quot; /&gt;.">要与当前 <see langword="DataTable" /> 合并的 <see langword="DataTable" />。</param>
      <param name="preserveChanges" vsli:raw="&lt;see langword=&quot;true&quot; /&gt;, to preserve changes in the current &lt;see langword=&quot;DataTable&quot; /&gt;; otherwise &lt;see langword=&quot;false&quot; /&gt;.">如果保留当前 <see langword="DataTable" /> 中的更改，则为 <see langword="true" />；否则为 <see langword="false" />。</param>
    </member>
    <member name="M:System.Data.DataTable.Merge(System.Data.DataTable,System.Boolean,System.Data.MissingSchemaAction)">
      <summary vsli:raw="Merge the specified &lt;see cref=&quot;T:System.Data.DataTable&quot; /&gt; with the current &lt;see langword=&quot;DataTable&quot; /&gt;, indicating whether to preserve changes and how to handle missing schema in the current &lt;see langword=&quot;DataTable&quot; /&gt;.">将指定的 <see cref="T:System.Data.DataTable" /> 与当前 <see langword="DataTable" /> 合并，指示是否保留更改以及如何处理当前 <see langword="DataTable" /> 中缺失的架构。</summary>
      <param name="table" vsli:raw="The &lt;see cref=&quot;T:System.Data.DataTable&quot; /&gt; to be merged with the current &lt;see cref=&quot;T:System.Data.DataTable&quot; /&gt;.">要与当前 <see cref="T:System.Data.DataTable" /> 合并的 <see cref="T:System.Data.DataTable" />。</param>
      <param name="preserveChanges" vsli:raw="&lt;see langword=&quot;true&quot; /&gt;, to preserve changes in the current &lt;see cref=&quot;T:System.Data.DataTable&quot; /&gt;; otherwise &lt;see langword=&quot;false&quot; /&gt;.">如果保留当前 <see cref="T:System.Data.DataTable" /> 中的更改，则为 <see langword="true" />；否则为 <see langword="false" />。</param>
      <param name="missingSchemaAction" vsli:raw="One of the &lt;see cref=&quot;T:System.Data.MissingSchemaAction&quot; /&gt; values.">
        <see cref="T:System.Data.MissingSchemaAction" /> 值之一。</param>
    </member>
    <member name="M:System.Data.DataTable.NewRow">
      <summary vsli:raw="Creates a new &lt;see cref=&quot;T:System.Data.DataRow&quot; /&gt; with the same schema as the table.">创建与该表具有相同架构的新 <see cref="T:System.Data.DataRow" />。</summary>
      <returns vsli:raw="A &lt;see cref=&quot;T:System.Data.DataRow&quot; /&gt; with the same schema as the &lt;see cref=&quot;T:System.Data.DataTable&quot; /&gt;.">与 <see cref="T:System.Data.DataTable" /> 具有相同架构的 <see cref="T:System.Data.DataRow" />。</returns>
    </member>
    <member name="M:System.Data.DataTable.NewRowArray(System.Int32)">
      <summary vsli:raw="Returns an array of &lt;see cref=&quot;T:System.Data.DataRow&quot; /&gt;.">返回 <see cref="T:System.Data.DataRow" /> 的数组。</summary>
      <param name="size" vsli:raw="A &lt;see cref=&quot;T:System.Int32&quot; /&gt; value that describes the size of the array.">描述数组大小的 <see cref="T:System.Int32" /> 值。</param>
      <returns vsli:raw="The new array.">新数组。</returns>
    </member>
    <member name="M:System.Data.DataTable.NewRowFromBuilder(System.Data.DataRowBuilder)">
      <summary vsli:raw="Creates a new row from an existing row.">从现有行创建新行。</summary>
      <param name="builder" vsli:raw="A &lt;see cref=&quot;T:System.Data.DataRowBuilder&quot; /&gt; object.">
        <see cref="T:System.Data.DataRowBuilder" /> 对象。</param>
      <returns vsli:raw="A &lt;see cref=&quot;T:System.Data.DataRow&quot; /&gt; derived class.">
        <see cref="T:System.Data.DataRow" /> 派生类。</returns>
    </member>
    <member name="M:System.Data.DataTable.OnColumnChanged(System.Data.DataColumnChangeEventArgs)">
      <summary vsli:raw="Raises the &lt;see cref=&quot;E:System.Data.DataTable.ColumnChanged&quot; /&gt; event.">引发 <see cref="E:System.Data.DataTable.ColumnChanged" /> 事件。</summary>
      <param name="e" vsli:raw="A &lt;see cref=&quot;T:System.Data.DataColumnChangeEventArgs&quot; /&gt; that contains the event data.">包含事件数据的 <see cref="T:System.Data.DataColumnChangeEventArgs" />。</param>
    </member>
    <member name="M:System.Data.DataTable.OnColumnChanging(System.Data.DataColumnChangeEventArgs)">
      <summary vsli:raw="Raises the &lt;see cref=&quot;E:System.Data.DataTable.ColumnChanging&quot; /&gt; event.">引发 <see cref="E:System.Data.DataTable.ColumnChanging" /> 事件。</summary>
      <param name="e" vsli:raw="A &lt;see cref=&quot;T:System.Data.DataColumnChangeEventArgs&quot; /&gt; that contains the event data.">包含事件数据的 <see cref="T:System.Data.DataColumnChangeEventArgs" />。</param>
    </member>
    <member name="M:System.Data.DataTable.OnPropertyChanging(System.ComponentModel.PropertyChangedEventArgs)">
      <summary vsli:raw="Raises the &lt;see cref=&quot;E:System.ComponentModel.INotifyPropertyChanged.PropertyChanged&quot; /&gt; event.">引发 <see cref="E:System.ComponentModel.INotifyPropertyChanged.PropertyChanged" /> 事件。</summary>
      <param name="pcevent" vsli:raw="A &lt;see cref=&quot;T:System.ComponentModel.PropertyChangedEventArgs&quot; /&gt; that contains the event data.">包含事件数据的 <see cref="T:System.ComponentModel.PropertyChangedEventArgs" />。</param>
    </member>
    <member name="M:System.Data.DataTable.OnRemoveColumn(System.Data.DataColumn)">
      <summary vsli:raw="Notifies the &lt;see cref=&quot;T:System.Data.DataTable&quot; /&gt; that a &lt;see cref=&quot;T:System.Data.DataColumn&quot; /&gt; is being removed.">通知 <see cref="T:System.Data.DataTable" /> 正在移除 <see cref="T:System.Data.DataColumn" />。</summary>
      <param name="column" vsli:raw="The &lt;see cref=&quot;T:System.Data.DataColumn&quot; /&gt; being removed.">正在移除的 <see cref="T:System.Data.DataColumn" />。</param>
    </member>
    <member name="M:System.Data.DataTable.OnRowChanged(System.Data.DataRowChangeEventArgs)">
      <summary vsli:raw="Raises the &lt;see cref=&quot;E:System.Data.DataTable.RowChanged&quot; /&gt; event.">引发 <see cref="E:System.Data.DataTable.RowChanged" /> 事件。</summary>
      <param name="e" vsli:raw="A &lt;see cref=&quot;T:System.Data.DataRowChangeEventArgs&quot; /&gt; that contains the event data.">包含事件数据的 <see cref="T:System.Data.DataRowChangeEventArgs" />。</param>
    </member>
    <member name="M:System.Data.DataTable.OnRowChanging(System.Data.DataRowChangeEventArgs)">
      <summary vsli:raw="Raises the &lt;see cref=&quot;E:System.Data.DataTable.RowChanging&quot; /&gt; event.">引发 <see cref="E:System.Data.DataTable.RowChanging" /> 事件。</summary>
      <param name="e" vsli:raw="A &lt;see cref=&quot;T:System.Data.DataRowChangeEventArgs&quot; /&gt; that contains the event data.">包含事件数据的 <see cref="T:System.Data.DataRowChangeEventArgs" />。</param>
    </member>
    <member name="M:System.Data.DataTable.OnRowDeleted(System.Data.DataRowChangeEventArgs)">
      <summary vsli:raw="Raises the &lt;see cref=&quot;E:System.Data.DataTable.RowDeleted&quot; /&gt; event.">引发 <see cref="E:System.Data.DataTable.RowDeleted" /> 事件。</summary>
      <param name="e" vsli:raw="A &lt;see cref=&quot;T:System.Data.DataRowChangeEventArgs&quot; /&gt; that contains the event data.">包含事件数据的 <see cref="T:System.Data.DataRowChangeEventArgs" />。</param>
    </member>
    <member name="M:System.Data.DataTable.OnRowDeleting(System.Data.DataRowChangeEventArgs)">
      <summary vsli:raw="Raises the &lt;see cref=&quot;E:System.Data.DataTable.RowDeleting&quot; /&gt; event.">引发 <see cref="E:System.Data.DataTable.RowDeleting" /> 事件。</summary>
      <param name="e" vsli:raw="A &lt;see cref=&quot;T:System.Data.DataRowChangeEventArgs&quot; /&gt; that contains the event data.">包含事件数据的 <see cref="T:System.Data.DataRowChangeEventArgs" />。</param>
    </member>
    <member name="M:System.Data.DataTable.OnTableCleared(System.Data.DataTableClearEventArgs)">
      <summary vsli:raw="Raises the &lt;see cref=&quot;E:System.Data.DataTable.TableCleared&quot; /&gt; event.">引发 <see cref="E:System.Data.DataTable.TableCleared" /> 事件。</summary>
      <param name="e" vsli:raw="A &lt;see cref=&quot;T:System.Data.DataTableClearEventArgs&quot; /&gt; that contains the event data.">包含事件数据的 <see cref="T:System.Data.DataTableClearEventArgs" />。</param>
    </member>
    <member name="M:System.Data.DataTable.OnTableClearing(System.Data.DataTableClearEventArgs)">
      <summary vsli:raw="Raises the &lt;see cref=&quot;E:System.Data.DataTable.TableClearing&quot; /&gt; event.">引发 <see cref="E:System.Data.DataTable.TableClearing" /> 事件。</summary>
      <param name="e" vsli:raw="A &lt;see cref=&quot;T:System.Data.DataTableClearEventArgs&quot; /&gt; that contains the event data.">包含事件数据的 <see cref="T:System.Data.DataTableClearEventArgs" />。</param>
    </member>
    <member name="M:System.Data.DataTable.OnTableNewRow(System.Data.DataTableNewRowEventArgs)">
      <summary vsli:raw="Raises the &lt;see cref=&quot;E:System.Data.DataTable.TableNewRow&quot; /&gt; event.">引发 <see cref="E:System.Data.DataTable.TableNewRow" /> 事件。</summary>
      <param name="e" vsli:raw="A &lt;see cref=&quot;T:System.Data.DataTableNewRowEventArgs&quot; /&gt; that contains the event data.">包含事件数据的 <see cref="T:System.Data.DataTableNewRowEventArgs" />。</param>
    </member>
    <member name="M:System.Data.DataTable.ReadXml(System.IO.Stream)">
      <summary vsli:raw="Reads XML schema and data into the &lt;see cref=&quot;T:System.Data.DataTable&quot; /&gt; using the specified &lt;see cref=&quot;T:System.IO.Stream&quot; /&gt;.">使用指定的 <see cref="T:System.IO.Stream" /> 将 XML 架构和数据读入 <see cref="T:System.Data.DataTable" />。</summary>
      <param name="stream" vsli:raw="An object that derives from &lt;see cref=&quot;T:System.IO.Stream&quot; /&gt;.">从 <see cref="T:System.IO.Stream" /> 派生的对象</param>
      <returns vsli:raw="The &lt;see cref=&quot;T:System.Data.XmlReadMode&quot; /&gt; used to read the data.">用于读取数据的 <see cref="T:System.Data.XmlReadMode" />。</returns>
    </member>
    <member name="M:System.Data.DataTable.ReadXml(System.IO.TextReader)">
      <summary vsli:raw="Reads XML schema and data into the &lt;see cref=&quot;T:System.Data.DataTable&quot; /&gt; using the specified &lt;see cref=&quot;T:System.IO.TextReader&quot; /&gt;.">使用指定的 <see cref="T:System.IO.TextReader" /> 将 XML 架构和数据读入 <see cref="T:System.Data.DataTable" />。</summary>
      <param name="reader" vsli:raw="The &lt;see cref=&quot;T:System.IO.TextReader&quot; /&gt; that will be used to read the data.">将用于读取数据的 <see cref="T:System.IO.TextReader" />。</param>
      <returns vsli:raw="The &lt;see cref=&quot;T:System.Data.XmlReadMode&quot; /&gt; used to read the data.">用于读取数据的 <see cref="T:System.Data.XmlReadMode" />。</returns>
    </member>
    <member name="M:System.Data.DataTable.ReadXml(System.String)">
      <summary vsli:raw="Reads XML schema and data into the &lt;see cref=&quot;T:System.Data.DataTable&quot; /&gt; from the specified file.">从指定的文件将 XML 架构和数据读入 <see cref="T:System.Data.DataTable" />。</summary>
      <param name="fileName" vsli:raw="The name of the file from which to read the data.">从中读取数据的文件的名称。</param>
      <returns vsli:raw="The &lt;see cref=&quot;T:System.Data.XmlReadMode&quot; /&gt; used to read the data.">用于读取数据的 <see cref="T:System.Data.XmlReadMode" />。</returns>
    </member>
    <member name="M:System.Data.DataTable.ReadXml(System.Xml.XmlReader)">
      <summary vsli:raw="Reads XML Schema and Data into the &lt;see cref=&quot;T:System.Data.DataTable&quot; /&gt; using the specified &lt;see cref=&quot;T:System.Xml.XmlReader&quot; /&gt;.">使用指定的 <see cref="T:System.Xml.XmlReader" /> 将 XML 架构和数据读入 <see cref="T:System.Data.DataTable" />。</summary>
      <param name="reader" vsli:raw="The &lt;see cref=&quot;T:System.Xml.XmlReader&quot; /&gt; that will be used to read the data.">将用于读取数据的 <see cref="T:System.Xml.XmlReader" />。</param>
      <returns vsli:raw="The &lt;see cref=&quot;T:System.Data.XmlReadMode&quot; /&gt; used to read the data.">用于读取数据的 <see cref="T:System.Data.XmlReadMode" />。</returns>
    </member>
    <member name="M:System.Data.DataTable.ReadXmlSchema(System.IO.Stream)">
      <summary vsli:raw="Reads an XML schema into the &lt;see cref=&quot;T:System.Data.DataTable&quot; /&gt; using the specified stream.">使用指定的流将 XML 架构读入 <see cref="T:System.Data.DataTable" />。</summary>
      <param name="stream" vsli:raw="The stream used to read the schema.">用于读取架构的流。</param>
    </member>
    <member name="M:System.Data.DataTable.ReadXmlSchema(System.IO.TextReader)">
      <summary vsli:raw="Reads an XML schema into the &lt;see cref=&quot;T:System.Data.DataTable&quot; /&gt; using the specified &lt;see cref=&quot;T:System.IO.TextReader&quot; /&gt;.">使用指定的 <see cref="T:System.IO.TextReader" /> 将 XML 架构读入 <see cref="T:System.Data.DataTable" />。</summary>
      <param name="reader" vsli:raw="The &lt;see cref=&quot;T:System.IO.TextReader&quot; /&gt; used to read the schema information.">用于读取架构信息的 <see cref="T:System.IO.TextReader" />。</param>
    </member>
    <member name="M:System.Data.DataTable.ReadXmlSchema(System.String)">
      <summary vsli:raw="Reads an XML schema into the &lt;see cref=&quot;T:System.Data.DataTable&quot; /&gt; from the specified file.">从指定的文件将 XML 架构读入 <see cref="T:System.Data.DataTable" />。</summary>
      <param name="fileName" vsli:raw="The name of the file from which to read the schema information.">从中读取架构信息的文件的名称。</param>
    </member>
    <member name="M:System.Data.DataTable.ReadXmlSchema(System.Xml.XmlReader)">
      <summary vsli:raw="Reads an XML schema into the &lt;see cref=&quot;T:System.Data.DataTable&quot; /&gt; using the specified &lt;see cref=&quot;T:System.Xml.XmlReader&quot; /&gt;.">使用指定的 <see cref="T:System.Xml.XmlReader" /> 将 XML 架构读入 <see cref="T:System.Data.DataTable" />。</summary>
      <param name="reader" vsli:raw="The &lt;see cref=&quot;T:System.Xml.XmlReader&quot; /&gt; used to read the schema information.">用于读取架构信息的 <see cref="T:System.Xml.XmlReader" />。</param>
    </member>
    <member name="M:System.Data.DataTable.ReadXmlSerializable(System.Xml.XmlReader)">
      <summary vsli:raw="Reads from an XML stream.">从 XML 流中读取。</summary>
      <param name="reader" vsli:raw="A &lt;see cref=&quot;T:System.Xml.XmlReader&quot; /&gt; object.">
        <see cref="T:System.Xml.XmlReader" /> 对象。</param>
    </member>
    <member name="M:System.Data.DataTable.RejectChanges">
      <summary vsli:raw="Rolls back all changes that have been made to the table since it was loaded, or the last time &lt;see cref=&quot;M:System.Data.DataTable.AcceptChanges&quot; /&gt; was called.">回滚自该表加载以来或上次调用 <see cref="M:System.Data.DataTable.AcceptChanges" /> 以来对该表进行的所有更改。</summary>
    </member>
    <member name="M:System.Data.DataTable.Reset">
      <summary vsli:raw="Resets the &lt;see cref=&quot;T:System.Data.DataTable&quot; /&gt; to its original state. Reset removes all data, indexes, relations, and columns of the table. If a DataSet includes a DataTable, the table will still be part of the DataSet after the table is reset.">将 <see cref="T:System.Data.DataTable" /> 重置为其初始状态。 重置将移除表的所有数据、索引、关系和列。 如果数据集包含一个数据表，则在重置该表之后，它将仍是数据集的一部分。</summary>
    </member>
    <member name="M:System.Data.DataTable.Select">
      <summary vsli:raw="Gets an array of all &lt;see cref=&quot;T:System.Data.DataRow&quot; /&gt; objects.">获取由所有 <see cref="T:System.Data.DataRow" /> 对象组成的数组。</summary>
      <returns vsli:raw="An array of &lt;see cref=&quot;T:System.Data.DataRow&quot; /&gt; objects.">一个 <see cref="T:System.Data.DataRow" /> 对象数组。</returns>
    </member>
    <member name="M:System.Data.DataTable.Select(System.String)">
      <summary vsli:raw="Gets an array of all &lt;see cref=&quot;T:System.Data.DataRow&quot; /&gt; objects that match the filter criteria.">获取由与筛选条件匹配的所有 <see cref="T:System.Data.DataRow" /> 对象组成的数组。</summary>
      <param name="filterExpression" vsli:raw="The criteria to use to filter the rows. For examples on how to filter rows, see DataView RowFilter Syntax [C#].">用于筛选行的条件。 有关如何筛选行的示例，请参阅 DataView RowFilter 语法 [C#]。</param>
      <returns vsli:raw="An array of &lt;see cref=&quot;T:System.Data.DataRow&quot; /&gt; objects.">一个 <see cref="T:System.Data.DataRow" /> 对象数组。</returns>
    </member>
    <member name="M:System.Data.DataTable.Select(System.String,System.String)">
      <summary vsli:raw="Gets an array of all &lt;see cref=&quot;T:System.Data.DataRow&quot; /&gt; objects that match the filter criteria, in the specified sort order.">以指定排序顺序，获取由与筛选条件匹配的所有 <see cref="T:System.Data.DataRow" /> 对象组成的数组。</summary>
      <param name="filterExpression" vsli:raw="The criteria to use to filter the rows. For examples on how to filter rows, see DataView RowFilter Syntax [C#].">用于筛选行的条件。 有关如何筛选行的示例，请参阅 DataView RowFilter 语法 [C#]。</param>
      <param name="sort" vsli:raw="A string specifying the column and sort direction.">指定列和排序方向的字符串。</param>
      <returns vsli:raw="An array of &lt;see cref=&quot;T:System.Data.DataRow&quot; /&gt; objects matching the filter expression.">由与筛选条件匹配的 <see cref="T:System.Data.DataRow" /> 对象组成的数组。</returns>
    </member>
    <member name="M:System.Data.DataTable.Select(System.String,System.String,System.Data.DataViewRowState)">
      <summary vsli:raw="Gets an array of all &lt;see cref=&quot;T:System.Data.DataRow&quot; /&gt; objects that match the filter in the order of the sort that match the specified state.">以与指定状态匹配的排序顺序，获取由与筛选条件匹配的所有 <see cref="T:System.Data.DataRow" /> 对象组成的数组。</summary>
      <param name="filterExpression" vsli:raw="The criteria to use to filter the rows. For examples on how to filter rows, see DataView RowFilter Syntax [C#].">用于筛选行的条件。 有关如何筛选行的示例，请参阅 DataView RowFilter 语法 [C#]。</param>
      <param name="sort" vsli:raw="A string specifying the column and sort direction.">指定列和排序方向的字符串。</param>
      <param name="recordStates" vsli:raw="One of the &lt;see cref=&quot;T:System.Data.DataViewRowState&quot; /&gt; values.">
        <see cref="T:System.Data.DataViewRowState" /> 值之一。</param>
      <returns vsli:raw="An array of &lt;see cref=&quot;T:System.Data.DataRow&quot; /&gt; objects.">一个 <see cref="T:System.Data.DataRow" /> 对象数组。</returns>
    </member>
    <member name="M:System.Data.DataTable.System#ComponentModel#IListSource#GetList">
      <summary vsli:raw="For a description of this member, see &lt;see cref=&quot;M:System.ComponentModel.IListSource.GetList&quot; /&gt;.">有关此成员的说明，请参见 <see cref="M:System.ComponentModel.IListSource.GetList" />。</summary>
      <returns vsli:raw="An &lt;see cref=&quot;T:System.Collections.IList&quot; /&gt; that can be bound to a data source from the object.">对象中可以绑定到数据源的 <see cref="T:System.Collections.IList" />。</returns>
    </member>
    <member name="M:System.Data.DataTable.System#Xml#Serialization#IXmlSerializable#GetSchema">
      <summary vsli:raw="For a description of this member, see &lt;see cref=&quot;M:System.Xml.Serialization.IXmlSerializable.GetSchema&quot; /&gt;.">有关此成员的说明，请参见 <see cref="M:System.Xml.Serialization.IXmlSerializable.GetSchema" />。</summary>
      <returns vsli:raw="An &lt;see cref=&quot;T:System.Xml.Schema.XmlSchema&quot; /&gt; that describes the XML representation of the object that is produced by the &lt;see cref=&quot;M:System.Xml.Serialization.IXmlSerializable.WriteXml(System.Xml.XmlWriter)&quot; /&gt; method and consumed by the &lt;see cref=&quot;M:System.Xml.Serialization.IXmlSerializable.ReadXml(System.Xml.XmlReader)&quot; /&gt; method.">由 <see cref="T:System.Xml.Schema.XmlSchema" /> 方法生成并由 <see cref="M:System.Xml.Serialization.IXmlSerializable.WriteXml(System.Xml.XmlWriter)" /> 方法使用的对象的 XML 表示形式的 <see cref="M:System.Xml.Serialization.IXmlSerializable.ReadXml(System.Xml.XmlReader)" />。</returns>
    </member>
    <member name="M:System.Data.DataTable.System#Xml#Serialization#IXmlSerializable#ReadXml(System.Xml.XmlReader)">
      <summary vsli:raw="For a description of this member, see &lt;see cref=&quot;M:System.Xml.Serialization.IXmlSerializable.ReadXml(System.Xml.XmlReader)&quot; /&gt;.">有关此成员的说明，请参见 <see cref="M:System.Xml.Serialization.IXmlSerializable.ReadXml(System.Xml.XmlReader)" />。</summary>
      <param name="reader" vsli:raw="An XmlReader.">XmlReader。</param>
    </member>
    <member name="M:System.Data.DataTable.System#Xml#Serialization#IXmlSerializable#WriteXml(System.Xml.XmlWriter)">
      <summary vsli:raw="For a description of this member, see &lt;see cref=&quot;M:System.Xml.Serialization.IXmlSerializable.WriteXml(System.Xml.XmlWriter)&quot; /&gt;.">有关此成员的说明，请参见 <see cref="M:System.Xml.Serialization.IXmlSerializable.WriteXml(System.Xml.XmlWriter)" />。</summary>
      <param name="writer" vsli:raw="An XmlWriter.">XmlWriter。</param>
    </member>
    <member name="M:System.Data.DataTable.ToString">
      <summary vsli:raw="Gets the &lt;see cref=&quot;P:System.Data.DataTable.TableName&quot; /&gt; and &lt;see cref=&quot;P:System.Data.DataTable.DisplayExpression&quot; /&gt;, if there is one as a concatenated string.">获取 <see cref="P:System.Data.DataTable.TableName" /> 和 <see cref="P:System.Data.DataTable.DisplayExpression" />（如果有一个用作连接字符串）。</summary>
      <returns vsli:raw="A string consisting of the &lt;see cref=&quot;P:System.Data.DataTable.TableName&quot; /&gt; and the &lt;see cref=&quot;P:System.Data.DataTable.DisplayExpression&quot; /&gt; values.">一个由 <see cref="P:System.Data.DataTable.TableName" /> 和 <see cref="P:System.Data.DataTable.DisplayExpression" /> 值字符串。</returns>
    </member>
    <member name="M:System.Data.DataTable.WriteXml(System.IO.Stream)">
      <summary vsli:raw="Writes the current contents of the &lt;see cref=&quot;T:System.Data.DataTable&quot; /&gt; as XML using the specified &lt;see cref=&quot;T:System.IO.Stream&quot; /&gt;.">通过指定的 <see cref="T:System.IO.Stream" />，按 XML 形式编写 <see cref="T:System.Data.DataTable" /> 的当前内容。</summary>
      <param name="stream" vsli:raw="The stream to which the data will be written.">要向其写入数据的流。</param>
    </member>
    <member name="M:System.Data.DataTable.WriteXml(System.IO.Stream,System.Boolean)">
      <summary vsli:raw="Writes the current contents of the &lt;see cref=&quot;T:System.Data.DataTable&quot; /&gt; as XML using the specified &lt;see cref=&quot;T:System.IO.Stream&quot; /&gt;. To save the data for the table and all its descendants, set the &lt;paramref name=&quot;writeHierarchy&quot; /&gt; parameter to &lt;see langword=&quot;true&quot; /&gt;.">通过指定的 <see cref="T:System.IO.Stream" />，按 XML 形式编写 <see cref="T:System.Data.DataTable" /> 的当前内容。 若要保存该表及其所有子代的数据，请将 <paramref name="writeHierarchy" /> 参数设置为 <see langword="true" />。</summary>
      <param name="stream" vsli:raw="The stream to which the data will be written.">要向其写入数据的流。</param>
      <param name="writeHierarchy" vsli:raw="If &lt;see langword=&quot;true&quot; /&gt;, write the contents of the current table and all its descendants. If &lt;see langword=&quot;false&quot; /&gt; (the default value), write the data for the current table only.">如果为 <see langword="true" />，则写入当前表及其所有子代的内容。 如果为 <see langword="false" />（默认值），则只写入当前表的数据。</param>
    </member>
    <member name="M:System.Data.DataTable.WriteXml(System.IO.Stream,System.Data.XmlWriteMode)">
      <summary vsli:raw="Writes the current data, and optionally the schema, for the &lt;see cref=&quot;T:System.Data.DataTable&quot; /&gt; to the specified file using the specified &lt;see cref=&quot;T:System.Data.XmlWriteMode&quot; /&gt;. To write the schema, set the value for the &lt;paramref name=&quot;mode&quot; /&gt; parameter to &lt;see langword=&quot;WriteSchema&quot; /&gt;.">使用指定的 <see cref="T:System.Data.XmlWriteMode" /> 将 <see cref="T:System.Data.DataTable" /> 的当前数据和架构（可选）写入指定的文件。 若要写入架构，请将 <paramref name="mode" /> 参数的值设置为 <see langword="WriteSchema" />。</summary>
      <param name="stream" vsli:raw="The stream to which the data will be written.">要向其写入数据的流。</param>
      <param name="mode" vsli:raw="One of the &lt;see cref=&quot;T:System.Data.XmlWriteMode&quot; /&gt; values.">
        <see cref="T:System.Data.XmlWriteMode" /> 值之一。</param>
    </member>
    <member name="M:System.Data.DataTable.WriteXml(System.IO.Stream,System.Data.XmlWriteMode,System.Boolean)">
      <summary vsli:raw="Writes the current data, and optionally the schema, for the &lt;see cref=&quot;T:System.Data.DataTable&quot; /&gt; to the specified file using the specified &lt;see cref=&quot;T:System.Data.XmlWriteMode&quot; /&gt;. To write the schema, set the value for the &lt;paramref name=&quot;mode&quot; /&gt; parameter to &lt;see langword=&quot;WriteSchema&quot; /&gt;. To save the data for the table and all its descendants, set the &lt;paramref name=&quot;writeHierarchy&quot; /&gt; parameter to &lt;see langword=&quot;true&quot; /&gt;.">使用指定的 <see cref="T:System.Data.XmlWriteMode" /> 将 <see cref="T:System.Data.DataTable" /> 的当前数据和架构（可选）写入指定的文件。 若要写入架构，请将 <paramref name="mode" /> 参数的值设置为 <see langword="WriteSchema" />。 若要保存该表及其所有子代的数据，请将 <paramref name="writeHierarchy" /> 参数设置为 <see langword="true" />。</summary>
      <param name="stream" vsli:raw="The stream to which the data will be written.">要向其写入数据的流。</param>
      <param name="mode" vsli:raw="One of the &lt;see cref=&quot;T:System.Data.XmlWriteMode&quot; /&gt; values.">
        <see cref="T:System.Data.XmlWriteMode" /> 值之一。</param>
      <param name="writeHierarchy" vsli:raw="If &lt;see langword=&quot;true&quot; /&gt;, write the contents of the current table and all its descendants. If &lt;see langword=&quot;false&quot; /&gt; (the default value), write the data for the current table only.">如果为 <see langword="true" />，则写入当前表及其所有子代的内容。 如果为 <see langword="false" />（默认值），则只写入当前表的数据。</param>
    </member>
    <member name="M:System.Data.DataTable.WriteXml(System.IO.TextWriter)">
      <summary vsli:raw="Writes the current contents of the &lt;see cref=&quot;T:System.Data.DataTable&quot; /&gt; as XML using the specified &lt;see cref=&quot;T:System.IO.TextWriter&quot; /&gt;.">通过指定的 <see cref="T:System.IO.TextWriter" />，按 XML 形式编写 <see cref="T:System.Data.DataTable" /> 的当前内容。</summary>
      <param name="writer" vsli:raw="The &lt;see cref=&quot;T:System.IO.TextWriter&quot; /&gt; with which to write the content.">用于写入内容的 <see cref="T:System.IO.TextWriter" />。</param>
    </member>
    <member name="M:System.Data.DataTable.WriteXml(System.IO.TextWriter,System.Boolean)">
      <summary vsli:raw="Writes the current contents of the &lt;see cref=&quot;T:System.Data.DataTable&quot; /&gt; as XML using the specified &lt;see cref=&quot;T:System.IO.TextWriter&quot; /&gt;. To save the data for the table and all its descendants, set the &lt;paramref name=&quot;writeHierarchy&quot; /&gt; parameter to &lt;see langword=&quot;true&quot; /&gt;.">通过指定的 <see cref="T:System.IO.TextWriter" />，按 XML 形式编写 <see cref="T:System.Data.DataTable" /> 的当前内容。 若要保存该表及其所有子代的数据，请将 <paramref name="writeHierarchy" /> 参数设置为 <see langword="true" />。</summary>
      <param name="writer" vsli:raw="The &lt;see cref=&quot;T:System.IO.TextWriter&quot; /&gt; with which to write the content.">用于写入内容的 <see cref="T:System.IO.TextWriter" />。</param>
      <param name="writeHierarchy" vsli:raw="If &lt;see langword=&quot;true&quot; /&gt;, write the contents of the current table and all its descendants. If &lt;see langword=&quot;false&quot; /&gt; (the default value), write the data for the current table only.">如果为 <see langword="true" />，则写入当前表及其所有子代的内容。 如果为 <see langword="false" />（默认值），则只写入当前表的数据。</param>
    </member>
    <member name="M:System.Data.DataTable.WriteXml(System.IO.TextWriter,System.Data.XmlWriteMode)">
      <summary vsli:raw="Writes the current data, and optionally the schema, for the &lt;see cref=&quot;T:System.Data.DataTable&quot; /&gt; using the specified &lt;see cref=&quot;T:System.IO.TextWriter&quot; /&gt; and &lt;see cref=&quot;T:System.Data.XmlWriteMode&quot; /&gt;. To write the schema, set the value for the &lt;paramref name=&quot;mode&quot; /&gt; parameter to &lt;see langword=&quot;WriteSchema&quot; /&gt;.">使用指定的 <see cref="T:System.IO.TextWriter" /> 和 <see cref="T:System.Data.XmlWriteMode" /> 写入 <see cref="T:System.Data.DataTable" /> 的当前数据和架构（可选）。 若要写入架构，请将 <paramref name="mode" /> 参数的值设置为 <see langword="WriteSchema" />。</summary>
      <param name="writer" vsli:raw="The &lt;see cref=&quot;T:System.IO.TextWriter&quot; /&gt; used to write the document.">用于写入文档的 <see cref="T:System.IO.TextWriter" />。</param>
      <param name="mode" vsli:raw="One of the &lt;see cref=&quot;T:System.Data.XmlWriteMode&quot; /&gt; values.">
        <see cref="T:System.Data.XmlWriteMode" /> 值之一。</param>
    </member>
    <member name="M:System.Data.DataTable.WriteXml(System.IO.TextWriter,System.Data.XmlWriteMode,System.Boolean)">
      <summary vsli:raw="Writes the current data, and optionally the schema, for the &lt;see cref=&quot;T:System.Data.DataTable&quot; /&gt; using the specified &lt;see cref=&quot;T:System.IO.TextWriter&quot; /&gt; and &lt;see cref=&quot;T:System.Data.XmlWriteMode&quot; /&gt;. To write the schema, set the value for the &lt;paramref name=&quot;mode&quot; /&gt; parameter to &lt;see langword=&quot;WriteSchema&quot; /&gt;. To save the data for the table and all its descendants, set the &lt;paramref name=&quot;writeHierarchy&quot; /&gt; parameter to &lt;see langword=&quot;true&quot; /&gt;.">使用指定的 <see cref="T:System.IO.TextWriter" /> 和 <see cref="T:System.Data.XmlWriteMode" /> 写入 <see cref="T:System.Data.DataTable" /> 的当前数据和架构（可选）。 若要写入架构，请将 <paramref name="mode" /> 参数的值设置为 <see langword="WriteSchema" />。 若要保存该表及其所有子代的数据，请将 <paramref name="writeHierarchy" /> 参数设置为 <see langword="true" />。</summary>
      <param name="writer" vsli:raw="The &lt;see cref=&quot;T:System.IO.TextWriter&quot; /&gt; used to write the document.">用于写入文档的 <see cref="T:System.IO.TextWriter" />。</param>
      <param name="mode" vsli:raw="One of the &lt;see cref=&quot;T:System.Data.XmlWriteMode&quot; /&gt; values.">
        <see cref="T:System.Data.XmlWriteMode" /> 值之一。</param>
      <param name="writeHierarchy" vsli:raw="If &lt;see langword=&quot;true&quot; /&gt;, write the contents of the current table and all its descendants. If &lt;see langword=&quot;false&quot; /&gt; (the default value), write the data for the current table only.">如果为 <see langword="true" />，则写入当前表及其所有子代的内容。 如果为 <see langword="false" />（默认值），则只写入当前表的数据。</param>
    </member>
    <member name="M:System.Data.DataTable.WriteXml(System.String)">
      <summary vsli:raw="Writes the current contents of the &lt;see cref=&quot;T:System.Data.DataTable&quot; /&gt; as XML using the specified file.">使用指定的文件以 XML 形式写入 <see cref="T:System.Data.DataTable" /> 的当前内容。</summary>
      <param name="fileName" vsli:raw="The file to which to write the XML data.">要向其写入 XML 数据的文件。</param>
    </member>
    <member name="M:System.Data.DataTable.WriteXml(System.String,System.Boolean)">
      <summary vsli:raw="Writes the current contents of the &lt;see cref=&quot;T:System.Data.DataTable&quot; /&gt; as XML using the specified file. To save the data for the table and all its descendants, set the &lt;paramref name=&quot;writeHierarchy&quot; /&gt; parameter to &lt;see langword=&quot;true&quot; /&gt;.">使用指定的文件以 XML 形式写入 <see cref="T:System.Data.DataTable" /> 的当前内容。 若要保存该表及其所有子代的数据，请将 <paramref name="writeHierarchy" /> 参数设置为 <see langword="true" />。</summary>
      <param name="fileName" vsli:raw="The file to which to write the XML data.">要向其写入 XML 数据的文件。</param>
      <param name="writeHierarchy" vsli:raw="If &lt;see langword=&quot;true&quot; /&gt;, write the contents of the current table and all its descendants. If &lt;see langword=&quot;false&quot; /&gt; (the default value), write the data for the current table only.">如果为 <see langword="true" />，则写入当前表及其所有子代的内容。 如果为 <see langword="false" />（默认值），则只写入当前表的数据。</param>
    </member>
    <member name="M:System.Data.DataTable.WriteXml(System.String,System.Data.XmlWriteMode)">
      <summary vsli:raw="Writes the current data, and optionally the schema, for the &lt;see cref=&quot;T:System.Data.DataTable&quot; /&gt; using the specified file and &lt;see cref=&quot;T:System.Data.XmlWriteMode&quot; /&gt;. To write the schema, set the value for the &lt;paramref name=&quot;mode&quot; /&gt; parameter to &lt;see langword=&quot;WriteSchema&quot; /&gt;.">使用指定的文件和 <see cref="T:System.Data.XmlWriteMode" /> 写入 <see cref="T:System.Data.DataTable" /> 的当前数据和架构（可选）。 若要写入架构，请将 <paramref name="mode" /> 参数的值设置为 <see langword="WriteSchema" />。</summary>
      <param name="fileName" vsli:raw="The name of the file to which the data will be written.">将向其写入数据的文件名称。</param>
      <param name="mode" vsli:raw="One of the &lt;see cref=&quot;T:System.Data.XmlWriteMode&quot; /&gt; values.">
        <see cref="T:System.Data.XmlWriteMode" /> 值之一。</param>
    </member>
    <member name="M:System.Data.DataTable.WriteXml(System.String,System.Data.XmlWriteMode,System.Boolean)">
      <summary vsli:raw="Writes the current data, and optionally the schema, for the &lt;see cref=&quot;T:System.Data.DataTable&quot; /&gt; using the specified file and &lt;see cref=&quot;T:System.Data.XmlWriteMode&quot; /&gt;. To write the schema, set the value for the &lt;paramref name=&quot;mode&quot; /&gt; parameter to &lt;see langword=&quot;WriteSchema&quot; /&gt;. To save the data for the table and all its descendants, set the &lt;paramref name=&quot;writeHierarchy&quot; /&gt; parameter to &lt;see langword=&quot;true&quot; /&gt;.">使用指定的文件和 <see cref="T:System.Data.XmlWriteMode" /> 写入 <see cref="T:System.Data.DataTable" /> 的当前数据和架构（可选）。 若要写入架构，请将 <paramref name="mode" /> 参数的值设置为 <see langword="WriteSchema" />。 若要保存该表及其所有子代的数据，请将 <paramref name="writeHierarchy" /> 参数设置为 <see langword="true" />。</summary>
      <param name="fileName" vsli:raw="The name of the file to which the data will be written.">将向其写入数据的文件名称。</param>
      <param name="mode" vsli:raw="One of the &lt;see cref=&quot;T:System.Data.XmlWriteMode&quot; /&gt; values.">
        <see cref="T:System.Data.XmlWriteMode" /> 值之一。</param>
      <param name="writeHierarchy" vsli:raw="If &lt;see langword=&quot;true&quot; /&gt;, write the contents of the current table and all its descendants. If &lt;see langword=&quot;false&quot; /&gt; (the default value), write the data for the current table only.">如果为 <see langword="true" />，则写入当前表及其所有子代的内容。 如果为 <see langword="false" />（默认值），则只写入当前表的数据。</param>
    </member>
    <member name="M:System.Data.DataTable.WriteXml(System.Xml.XmlWriter)">
      <summary vsli:raw="Writes the current contents of the &lt;see cref=&quot;T:System.Data.DataTable&quot; /&gt; as XML using the specified &lt;see cref=&quot;T:System.Xml.XmlWriter&quot; /&gt;.">通过指定的 <see cref="T:System.Xml.XmlWriter" />，按 XML 形式编写 <see cref="T:System.Data.DataTable" /> 的当前内容。</summary>
      <param name="writer" vsli:raw="The &lt;see cref=&quot;T:System.Xml.XmlWriter&quot; /&gt; with which to write the contents.">用于写入内容的 <see cref="T:System.Xml.XmlWriter" />。</param>
    </member>
    <member name="M:System.Data.DataTable.WriteXml(System.Xml.XmlWriter,System.Boolean)">
      <summary vsli:raw="Writes the current contents of the &lt;see cref=&quot;T:System.Data.DataTable&quot; /&gt; as XML using the specified &lt;see cref=&quot;T:System.Xml.XmlWriter&quot; /&gt;.">通过指定的 <see cref="T:System.Xml.XmlWriter" />，按 XML 形式编写 <see cref="T:System.Data.DataTable" /> 的当前内容。</summary>
      <param name="writer" vsli:raw="The &lt;see cref=&quot;T:System.Xml.XmlWriter&quot; /&gt; with which to write the contents.">用于写入内容的 <see cref="T:System.Xml.XmlWriter" />。</param>
      <param name="writeHierarchy" vsli:raw="If &lt;see langword=&quot;true&quot; /&gt;, write the contents of the current table and all its descendants. If &lt;see langword=&quot;false&quot; /&gt; (the default value), write the data for the current table only.">如果为 <see langword="true" />，则写入当前表及其所有子代的内容。 如果为 <see langword="false" />（默认值），则只写入当前表的数据。</param>
    </member>
    <member name="M:System.Data.DataTable.WriteXml(System.Xml.XmlWriter,System.Data.XmlWriteMode)">
      <summary vsli:raw="Writes the current data, and optionally the schema, for the &lt;see cref=&quot;T:System.Data.DataTable&quot; /&gt; using the specified &lt;see cref=&quot;T:System.Xml.XmlWriter&quot; /&gt; and &lt;see cref=&quot;T:System.Data.XmlWriteMode&quot; /&gt;. To write the schema, set the value for the &lt;paramref name=&quot;mode&quot; /&gt; parameter to &lt;see langword=&quot;WriteSchema&quot; /&gt;.">使用指定的 <see cref="T:System.Xml.XmlWriter" /> 和 <see cref="T:System.Data.XmlWriteMode" /> 写入 <see cref="T:System.Data.DataTable" /> 的当前数据和架构（可选）。 若要写入架构，请将 <paramref name="mode" /> 参数的值设置为 <see langword="WriteSchema" />。</summary>
      <param name="writer" vsli:raw="The &lt;see cref=&quot;T:System.Xml.XmlWriter&quot; /&gt; used to write the document.">用于写入文档的 <see cref="T:System.Xml.XmlWriter" />。</param>
      <param name="mode" vsli:raw="One of the &lt;see cref=&quot;T:System.Data.XmlWriteMode&quot; /&gt; values.">
        <see cref="T:System.Data.XmlWriteMode" /> 值之一。</param>
    </member>
    <member name="M:System.Data.DataTable.WriteXml(System.Xml.XmlWriter,System.Data.XmlWriteMode,System.Boolean)">
      <summary vsli:raw="Writes the current data, and optionally the schema, for the &lt;see cref=&quot;T:System.Data.DataTable&quot; /&gt; using the specified &lt;see cref=&quot;T:System.Xml.XmlWriter&quot; /&gt; and &lt;see cref=&quot;T:System.Data.XmlWriteMode&quot; /&gt;. To write the schema, set the value for the &lt;paramref name=&quot;mode&quot; /&gt; parameter to &lt;see langword=&quot;WriteSchema&quot; /&gt;. To save the data for the table and all its descendants, set the &lt;paramref name=&quot;writeHierarchy&quot; /&gt; parameter to &lt;see langword=&quot;true&quot; /&gt;.">使用指定的 <see cref="T:System.Xml.XmlWriter" /> 和 <see cref="T:System.Data.XmlWriteMode" /> 写入 <see cref="T:System.Data.DataTable" /> 的当前数据和架构（可选）。 若要写入架构，请将 <paramref name="mode" /> 参数的值设置为 <see langword="WriteSchema" />。 若要保存该表及其所有子代的数据，请将 <paramref name="writeHierarchy" /> 参数设置为 <see langword="true" />。</summary>
      <param name="writer" vsli:raw="The &lt;see cref=&quot;T:System.Xml.XmlWriter&quot; /&gt; used to write the document.">用于写入文档的 <see cref="T:System.Xml.XmlWriter" />。</param>
      <param name="mode" vsli:raw="One of the &lt;see cref=&quot;T:System.Data.XmlWriteMode&quot; /&gt; values.">
        <see cref="T:System.Data.XmlWriteMode" /> 值之一。</param>
      <param name="writeHierarchy" vsli:raw="If &lt;see langword=&quot;true&quot; /&gt;, write the contents of the current table and all its descendants. If &lt;see langword=&quot;false&quot; /&gt; (the default value), write the data for the current table only.">如果为 <see langword="true" />，则写入当前表及其所有子代的内容。 如果为 <see langword="false" />（默认值），则只写入当前表的数据。</param>
    </member>
    <member name="M:System.Data.DataTable.WriteXmlSchema(System.IO.Stream)">
      <summary vsli:raw="Writes the current data structure of the &lt;see cref=&quot;T:System.Data.DataTable&quot; /&gt; as an XML schema to the specified stream.">以 XML 架构的形式将 <see cref="T:System.Data.DataTable" /> 的当前数据结构写入指定的流。</summary>
      <param name="stream" vsli:raw="The stream to which the XML schema will be written.">要向其写入 XML 架构的流。</param>
    </member>
    <member name="M:System.Data.DataTable.WriteXmlSchema(System.IO.Stream,System.Boolean)">
      <summary vsli:raw="Writes the current data structure of the &lt;see cref=&quot;T:System.Data.DataTable&quot; /&gt; as an XML schema to the specified stream. To save the schema for the table and all its descendants, set the &lt;paramref name=&quot;writeHierarchy&quot; /&gt; parameter to &lt;see langword=&quot;true&quot; /&gt;.">以 XML 架构的形式将 <see cref="T:System.Data.DataTable" /> 的当前数据结构写入指定的流。 若要保存该表及其所有子代的架构，请将 <paramref name="writeHierarchy" /> 参数设置为 <see langword="true" />。</summary>
      <param name="stream" vsli:raw="The stream to which the XML schema will be written.">要向其写入 XML 架构的流。</param>
      <param name="writeHierarchy" vsli:raw="If &lt;see langword=&quot;true&quot; /&gt;, write the schema of the current table and all its descendants. If &lt;see langword=&quot;false&quot; /&gt; (the default value), write the schema for the current table only.">如果为 <see langword="true" />，则写入当前表及其所有子代的架构。 如果为 <see langword="false" />（默认值），则只写入当前表的架构。</param>
    </member>
    <member name="M:System.Data.DataTable.WriteXmlSchema(System.IO.TextWriter)">
      <summary vsli:raw="Writes the current data structure of the &lt;see cref=&quot;T:System.Data.DataTable&quot; /&gt; as an XML schema using the specified &lt;see cref=&quot;T:System.IO.TextWriter&quot; /&gt;.">使用指定的 <see cref="T:System.IO.TextWriter" /> 以 XML 架构的形式写入 <see cref="T:System.Data.DataTable" /> 的当前数据结构。</summary>
      <param name="writer" vsli:raw="The &lt;see cref=&quot;T:System.IO.TextWriter&quot; /&gt; with which to write.">用于写入的 <see cref="T:System.IO.TextWriter" />。</param>
    </member>
    <member name="M:System.Data.DataTable.WriteXmlSchema(System.IO.TextWriter,System.Boolean)">
      <summary vsli:raw="Writes the current data structure of the &lt;see cref=&quot;T:System.Data.DataTable&quot; /&gt; as an XML schema using the specified &lt;see cref=&quot;T:System.IO.TextWriter&quot; /&gt;. To save the schema for the table and all its descendants, set the &lt;paramref name=&quot;writeHierarchy&quot; /&gt; parameter to &lt;see langword=&quot;true&quot; /&gt;.">使用指定的 <see cref="T:System.IO.TextWriter" /> 以 XML 架构的形式写入 <see cref="T:System.Data.DataTable" /> 的当前数据结构。 若要保存该表及其所有子代的架构，请将 <paramref name="writeHierarchy" /> 参数设置为 <see langword="true" />。</summary>
      <param name="writer" vsli:raw="The &lt;see cref=&quot;T:System.IO.TextWriter&quot; /&gt; with which to write.">用于写入的 <see cref="T:System.IO.TextWriter" />。</param>
      <param name="writeHierarchy" vsli:raw="If &lt;see langword=&quot;true&quot; /&gt;, write the schema of the current table and all its descendants. If &lt;see langword=&quot;false&quot; /&gt; (the default value), write the schema for the current table only.">如果为 <see langword="true" />，则写入当前表及其所有子代的架构。 如果为 <see langword="false" />（默认值），则只写入当前表的架构。</param>
    </member>
    <member name="M:System.Data.DataTable.WriteXmlSchema(System.String)">
      <summary vsli:raw="Writes the current data structure of the &lt;see cref=&quot;T:System.Data.DataTable&quot; /&gt; as an XML schema to the specified file.">以 XML 架构的形式将 <see cref="T:System.Data.DataTable" /> 的当前数据结构写入指定的文件。</summary>
      <param name="fileName" vsli:raw="The name of the file to use.">要使用的文件的名称。</param>
    </member>
    <member name="M:System.Data.DataTable.WriteXmlSchema(System.String,System.Boolean)">
      <summary vsli:raw="Writes the current data structure of the &lt;see cref=&quot;T:System.Data.DataTable&quot; /&gt; as an XML schema to the specified file. To save the schema for the table and all its descendants, set the &lt;paramref name=&quot;writeHierarchy&quot; /&gt; parameter to &lt;see langword=&quot;true&quot; /&gt;.">以 XML 架构的形式将 <see cref="T:System.Data.DataTable" /> 的当前数据结构写入指定的文件。 若要保存该表及其所有子代的架构，请将 <paramref name="writeHierarchy" /> 参数设置为 <see langword="true" />。</summary>
      <param name="fileName" vsli:raw="The name of the file to use.">要使用的文件的名称。</param>
      <param name="writeHierarchy" vsli:raw="If &lt;see langword=&quot;true&quot; /&gt;, write the schema of the current table and all its descendants. If &lt;see langword=&quot;false&quot; /&gt; (the default value), write the schema for the current table only.">如果为 <see langword="true" />，则写入当前表及其所有子代的架构。 如果为 <see langword="false" />（默认值），则只写入当前表的架构。</param>
    </member>
    <member name="M:System.Data.DataTable.WriteXmlSchema(System.Xml.XmlWriter)">
      <summary vsli:raw="Writes the current data structure of the &lt;see cref=&quot;T:System.Data.DataTable&quot; /&gt; as an XML schema using the specified &lt;see cref=&quot;T:System.Xml.XmlWriter&quot; /&gt;.">使用指定的 <see cref="T:System.Xml.XmlWriter" /> 以 XML 架构的形式写入 <see cref="T:System.Data.DataTable" /> 的当前数据结构。</summary>
      <param name="writer" vsli:raw="The &lt;see cref=&quot;T:System.Xml.XmlWriter&quot; /&gt; to use.">要使用的 <see cref="T:System.Xml.XmlWriter" />。</param>
    </member>
    <member name="M:System.Data.DataTable.WriteXmlSchema(System.Xml.XmlWriter,System.Boolean)">
      <summary vsli:raw="Writes the current data structure of the &lt;see cref=&quot;T:System.Data.DataTable&quot; /&gt; as an XML schema using the specified &lt;see cref=&quot;T:System.Xml.XmlWriter&quot; /&gt;. To save the schema for the table and all its descendants, set the &lt;paramref name=&quot;writeHierarchy&quot; /&gt; parameter to &lt;see langword=&quot;true&quot; /&gt;.">使用指定的 <see cref="T:System.Xml.XmlWriter" /> 以 XML 架构的形式写入 <see cref="T:System.Data.DataTable" /> 的当前数据结构。 若要保存该表及其所有子代的架构，请将 <paramref name="writeHierarchy" /> 参数设置为 <see langword="true" />。</summary>
      <param name="writer" vsli:raw="The &lt;see cref=&quot;T:System.Xml.XmlWriter&quot; /&gt; used to write the document.">用于写入文档的 <see cref="T:System.Xml.XmlWriter" />。</param>
      <param name="writeHierarchy" vsli:raw="If &lt;see langword=&quot;true&quot; /&gt;, write the schema of the current table and all its descendants. If &lt;see langword=&quot;false&quot; /&gt; (the default value), write the schema for the current table only.">如果为 <see langword="true" />，则写入当前表及其所有子代的架构。 如果为 <see langword="false" />（默认值），则只写入当前表的架构。</param>
    </member>
    <member name="P:System.Data.DataTable.CaseSensitive">
      <summary vsli:raw="Indicates whether string comparisons within the table are case-sensitive.">指示表中的字符串比较是否区分大小写。</summary>
      <returns vsli:raw="&lt;see langword=&quot;true&quot; /&gt; if the comparison is case-sensitive; otherwise &lt;see langword=&quot;false&quot; /&gt;. The default is set to the parent &lt;see cref=&quot;T:System.Data.DataSet&quot; /&gt; object's &lt;see cref=&quot;P:System.Data.DataSet.CaseSensitive&quot; /&gt; property, or &lt;see langword=&quot;false&quot; /&gt; if the &lt;see cref=&quot;T:System.Data.DataTable&quot; /&gt; was created independently of a &lt;see cref=&quot;T:System.Data.DataSet&quot; /&gt;.">如果比较区分大小写，则为 <see langword="true" />；否则为 <see langword="false" />。 默认值被设置为父级 <see cref="T:System.Data.DataSet" /> 对象的 <see cref="P:System.Data.DataSet.CaseSensitive" /> 属性；当 <see cref="T:System.Data.DataTable" /> 的创建独立于 <see cref="T:System.Data.DataSet" /> 时设置为 <see langword="false" />。</returns>
    </member>
    <member name="P:System.Data.DataTable.ChildRelations">
      <summary vsli:raw="Gets the collection of child relations for this &lt;see cref=&quot;T:System.Data.DataTable&quot; /&gt;.">获取此 <see cref="T:System.Data.DataTable" /> 的子关系的集合。</summary>
      <returns vsli:raw="A &lt;see cref=&quot;T:System.Data.DataRelationCollection&quot; /&gt; that contains the child relations for the table. An empty collection is returned if no &lt;see cref=&quot;T:System.Data.DataRelation&quot; /&gt; objects exist.">一个 <see cref="T:System.Data.DataRelationCollection" />，包含该表的子关系。 如果 <see cref="T:System.Data.DataRelation" /> 对象不存在，将返回空集合。</returns>
    </member>
    <member name="P:System.Data.DataTable.Columns">
      <summary vsli:raw="Gets the collection of columns that belong to this table.">获取属于该表的列的集合。</summary>
      <returns vsli:raw="A &lt;see cref=&quot;T:System.Data.DataColumnCollection&quot; /&gt; that contains the collection of &lt;see cref=&quot;T:System.Data.DataColumn&quot; /&gt; objects for the table. An empty collection is returned if no &lt;see cref=&quot;T:System.Data.DataColumn&quot; /&gt; objects exist.">一个 <see cref="T:System.Data.DataColumnCollection" />，包含该表的 <see cref="T:System.Data.DataColumn" /> 对象的集合。 如果 <see cref="T:System.Data.DataColumn" /> 对象不存在，将返回空集合。</returns>
    </member>
    <member name="P:System.Data.DataTable.Constraints">
      <summary vsli:raw="Gets the collection of constraints maintained by this table.">获取由该表维护的约束的集合。</summary>
      <returns vsli:raw="A &lt;see cref=&quot;T:System.Data.ConstraintCollection&quot; /&gt; that contains the collection of &lt;see cref=&quot;T:System.Data.Constraint&quot; /&gt; objects for the table. An empty collection is returned if no &lt;see cref=&quot;T:System.Data.Constraint&quot; /&gt; objects exist.">一个 <see cref="T:System.Data.ConstraintCollection" />，包含该表的 <see cref="T:System.Data.Constraint" /> 对象的集合。 如果 <see cref="T:System.Data.Constraint" /> 对象不存在，将返回空集合。</returns>
    </member>
    <member name="P:System.Data.DataTable.DataSet">
      <summary vsli:raw="Gets the &lt;see cref=&quot;T:System.Data.DataSet&quot; /&gt; to which this table belongs.">获取此表所属的 <see cref="T:System.Data.DataSet" />。</summary>
      <returns vsli:raw="The &lt;see cref=&quot;T:System.Data.DataSet&quot; /&gt; to which this table belongs.">此表所属的 <see cref="T:System.Data.DataSet" />。</returns>
    </member>
    <member name="P:System.Data.DataTable.DefaultView">
      <summary vsli:raw="Gets a customized view of the table that may include a filtered view, or a cursor position.">获取可能包含筛选视图或游标位置的表的自定义视图。</summary>
      <returns vsli:raw="The &lt;see cref=&quot;T:System.Data.DataView&quot; /&gt; associated with the &lt;see cref=&quot;T:System.Data.DataTable&quot; /&gt;.">与 <see cref="T:System.Data.DataView" /> 关联的 <see cref="T:System.Data.DataTable" />。</returns>
    </member>
    <member name="P:System.Data.DataTable.DisplayExpression">
      <summary vsli:raw="Gets or sets the expression that returns a value used to represent this table in the user interface. The &lt;see langword=&quot;DisplayExpression&quot; /&gt; property lets you display the name of this table in a user interface.">获取或设置一个表达式，该表达式返回的值用于在用户界面中表示此表。 <see langword="DisplayExpression" /> 属性用于在用户界面中显示此表名。</summary>
      <returns vsli:raw="A display string.">显示字符串。</returns>
    </member>
    <member name="P:System.Data.DataTable.ExtendedProperties">
      <summary vsli:raw="Gets the collection of customized user information.">获取自定义用户信息的集合。</summary>
      <returns vsli:raw="A &lt;see cref=&quot;T:System.Data.PropertyCollection&quot; /&gt; that contains custom user information.">包含自定义用户信息的 <see cref="T:System.Data.PropertyCollection" />。</returns>
    </member>
    <member name="P:System.Data.DataTable.HasErrors">
      <summary vsli:raw="Gets a value indicating whether there are errors in any of the rows in any of the tables of the &lt;see cref=&quot;T:System.Data.DataSet&quot; /&gt; to which the table belongs.">获取一个值，该值指示该表所属的 <see cref="T:System.Data.DataSet" /> 的任何表的任何行中是否有错误。</summary>
      <returns vsli:raw="&lt;see langword=&quot;true&quot; /&gt; if errors exist; otherwise &lt;see langword=&quot;false&quot; /&gt;.">如果有错误，则为 <see langword="true" />；否则为 <see langword="false" />。</returns>
    </member>
    <member name="P:System.Data.DataTable.IsInitialized">
      <summary vsli:raw="Gets a value that indicates whether the &lt;see cref=&quot;T:System.Data.DataTable&quot; /&gt; is initialized.">获取一个值，该值指示是否已初始化 <see cref="T:System.Data.DataTable" />。</summary>
      <returns vsli:raw="&lt;see langword=&quot;true&quot; /&gt; to indicate the component has completed initialization; otherwise &lt;see langword=&quot;false&quot; /&gt;.">
        <see langword="true" /> 表明组件已完成初始化；否则为 <see langword="false" />。</returns>
    </member>
    <member name="P:System.Data.DataTable.Locale">
      <summary vsli:raw="Gets or sets the locale information used to compare strings within the table.">获取或设置用于比较表中字符串的区域设置信息。</summary>
      <returns vsli:raw="A &lt;see cref=&quot;T:System.Globalization.CultureInfo&quot; /&gt; that contains data about the user's machine locale. The default is the &lt;see cref=&quot;T:System.Data.DataSet&quot; /&gt; object's &lt;see cref=&quot;T:System.Globalization.CultureInfo&quot; /&gt; (returned by the &lt;see cref=&quot;P:System.Data.DataSet.Locale&quot; /&gt; property) to which the &lt;see cref=&quot;T:System.Data.DataTable&quot; /&gt; belongs; if the table doesn't belong to a &lt;see cref=&quot;T:System.Data.DataSet&quot; /&gt;, the default is the current system &lt;see cref=&quot;T:System.Globalization.CultureInfo&quot; /&gt;.">一个 <see cref="T:System.Globalization.CultureInfo" />，它包含有关用户计算机区域设置的数据。 默认为 <see cref="T:System.Data.DataSet" /> 所属的 <see cref="T:System.Globalization.CultureInfo" /> 对象的 <see cref="P:System.Data.DataSet.Locale" />（由 <see cref="T:System.Data.DataTable" /> 属性返回）；如果该表不属于 <see cref="T:System.Data.DataSet" />，则默认为当前系统的 <see cref="T:System.Globalization.CultureInfo" />。</returns>
    </member>
    <member name="P:System.Data.DataTable.MinimumCapacity">
      <summary vsli:raw="Gets or sets the initial starting size for this table.">获取或设置该表最初的起始大小。</summary>
      <returns vsli:raw="The initial starting size in rows of this table. The default is 50.">该表中行的最初起始大小。 默认值为 50。</returns>
    </member>
    <member name="P:System.Data.DataTable.Namespace">
      <summary vsli:raw="Gets or sets the namespace for the XML representation of the data stored in the &lt;see cref=&quot;T:System.Data.DataTable&quot; /&gt;.">获取或设置 <see cref="T:System.Data.DataTable" /> 中所存储数据的 XML 表示形式的命名空间。</summary>
      <returns vsli:raw="The namespace of the &lt;see cref=&quot;T:System.Data.DataTable&quot; /&gt;.">
        <see cref="T:System.Data.DataTable" /> 的命名空间。</returns>
    </member>
    <member name="P:System.Data.DataTable.ParentRelations">
      <summary vsli:raw="Gets the collection of parent relations for this &lt;see cref=&quot;T:System.Data.DataTable&quot; /&gt;.">获取该 <see cref="T:System.Data.DataTable" /> 的父关系的集合。</summary>
      <returns vsli:raw="A &lt;see cref=&quot;T:System.Data.DataRelationCollection&quot; /&gt; that contains the parent relations for the table. An empty collection is returned if no &lt;see cref=&quot;T:System.Data.DataRelation&quot; /&gt; objects exist.">一个 <see cref="T:System.Data.DataRelationCollection" />，包含该表的父关系。 如果 <see cref="T:System.Data.DataRelation" /> 对象不存在，将返回空集合。</returns>
    </member>
    <member name="P:System.Data.DataTable.Prefix">
      <summary vsli:raw="Gets or sets the namespace for the XML representation of the data stored in the &lt;see cref=&quot;T:System.Data.DataTable&quot; /&gt;.">获取或设置 <see cref="T:System.Data.DataTable" /> 中所存储数据的 XML 表示形式的命名空间。</summary>
      <returns vsli:raw="The prefix of the &lt;see cref=&quot;T:System.Data.DataTable&quot; /&gt;.">
        <see cref="T:System.Data.DataTable" /> 的前缀。</returns>
    </member>
    <member name="P:System.Data.DataTable.PrimaryKey">
      <summary vsli:raw="Gets or sets an array of columns that function as primary keys for the data table.">获取或设置用作数据表主键的列数组。</summary>
      <exception cref="T:System.Data.DataException" vsli:raw="The key is a foreign key.">该键是外键。</exception>
      <returns vsli:raw="An array of &lt;see cref=&quot;T:System.Data.DataColumn&quot; /&gt; objects.">一个 <see cref="T:System.Data.DataColumn" /> 对象数组。</returns>
    </member>
    <member name="P:System.Data.DataTable.RemotingFormat">
      <summary vsli:raw="Gets or sets the serialization format.">获取或设置序列化格式。</summary>
      <returns vsli:raw="One of the enumeration values that specifies the serialization format.">指定 <see langword="Binary" /> 或 <see langword="Xml" /> 序列化的 <see cref="T:System.Data.SerializationFormat" /> 枚举。</returns>
    </member>
    <member name="P:System.Data.DataTable.Rows">
      <summary vsli:raw="Gets the collection of rows that belong to this table.">获取属于该表的行的集合。</summary>
      <returns vsli:raw="A &lt;see cref=&quot;T:System.Data.DataRowCollection&quot; /&gt; that contains &lt;see cref=&quot;T:System.Data.DataRow&quot; /&gt; objects.">包含 <see cref="T:System.Data.DataRowCollection" /> 对象的 <see cref="T:System.Data.DataRow" />；否则为 null 值（如果不存在任何 <see cref="T:System.Data.DataRow" /> 对象）。</returns>
    </member>
    <member name="P:System.Data.DataTable.Site">
      <summary vsli:raw="Gets or sets an &lt;see cref=&quot;T:System.ComponentModel.ISite&quot; /&gt; for the &lt;see cref=&quot;T:System.Data.DataTable&quot; /&gt;.">获取或设置 <see cref="T:System.ComponentModel.ISite" /> 的 <see cref="T:System.Data.DataTable" />。</summary>
      <returns vsli:raw="An &lt;see cref=&quot;T:System.ComponentModel.ISite&quot; /&gt; for the &lt;see cref=&quot;T:System.Data.DataTable&quot; /&gt;.">
        <see cref="T:System.ComponentModel.ISite" /> 的一个 <see cref="T:System.Data.DataTable" />。</returns>
    </member>
    <member name="P:System.Data.DataTable.System#ComponentModel#IListSource#ContainsListCollection">
      <summary vsli:raw="For a description of this member, see &lt;see cref=&quot;P:System.ComponentModel.IListSource.ContainsListCollection&quot; /&gt;.">有关此成员的说明，请参见 <see cref="P:System.ComponentModel.IListSource.ContainsListCollection" />。</summary>
      <returns vsli:raw="&lt;see langword=&quot;true&quot; /&gt; if the collection is a collection of &lt;see cref=&quot;T:System.Collections.IList&quot; /&gt; objects; otherwise, &lt;see langword=&quot;false&quot; /&gt;.">如果集合是 <see cref="T:System.Collections.IList" /> 对象集合，则为 <see langword="true" />；否则，为 <see langword="false" />。</returns>
    </member>
    <member name="P:System.Data.DataTable.TableName">
      <summary vsli:raw="Gets or sets the name of the &lt;see cref=&quot;T:System.Data.DataTable&quot; /&gt;.">获取或设置 <see cref="T:System.Data.DataTable" /> 的名称。</summary>
      <exception cref="T:System.ArgumentException" vsli:raw="&lt;see langword=&quot;null&quot; /&gt; or empty string (&quot;&quot;) is passed in and this table belongs to a collection.">传入 <see langword="null" /> 或空字符串 ("")，此表属于一个集合。</exception>
      <exception cref="T:System.Data.DuplicateNameException" vsli:raw="The table belongs to a collection that already has a table with the same name. (Comparison is case-sensitive).">该表属于一个集合，该集合已包含同名的表。 （比较区分大小写）。</exception>
      <returns vsli:raw="The name of the &lt;see cref=&quot;T:System.Data.DataTable&quot; /&gt;.">
        <see cref="T:System.Data.DataTable" /> 的名称。</returns>
    </member>
    <member name="T:System.Data.DataTableClearEventArgs">
      <summary vsli:raw="Provides data for the &lt;see cref=&quot;M:System.Data.DataTable.Clear&quot; /&gt; method.">为 <see cref="M:System.Data.DataTable.Clear" /> 方法提供数据。</summary>
    </member>
    <member name="M:System.Data.DataTableClearEventArgs.#ctor(System.Data.DataTable)">
      <summary vsli:raw="Initializes a new instance of the &lt;see cref=&quot;T:System.Data.DataTableClearEventArgs&quot; /&gt; class.">初始化 <see cref="T:System.Data.DataTableClearEventArgs" /> 类的新实例。</summary>
      <param name="dataTable" vsli:raw="The &lt;see cref=&quot;T:System.Data.DataTable&quot; /&gt; whose rows are being cleared.">
        <see cref="T:System.Data.DataTable" />，它的行正在被清除。</param>
    </member>
    <member name="P:System.Data.DataTableClearEventArgs.Table">
      <summary vsli:raw="Gets the table whose rows are being cleared.">获取正在清除其中的行的表。</summary>
      <returns vsli:raw="The &lt;see cref=&quot;T:System.Data.DataTable&quot; /&gt; whose rows are being cleared.">
        <see cref="T:System.Data.DataTable" />，它的行正在被清除。</returns>
    </member>
    <member name="P:System.Data.DataTableClearEventArgs.TableName">
      <summary vsli:raw="Gets the table name whose rows are being cleared.">获取正在清除其中的行的表的名称。</summary>
      <returns vsli:raw="A &lt;see cref=&quot;T:System.String&quot; /&gt; indicating the table name.">一个 <see cref="T:System.String" />，指示表的名称。</returns>
    </member>
    <member name="P:System.Data.DataTableClearEventArgs.TableNamespace">
      <summary vsli:raw="Gets the namespace of the table whose rows are being cleared.">获取其中的行正在被清除的表的命名空间。</summary>
      <returns vsli:raw="A &lt;see cref=&quot;T:System.String&quot; /&gt; indicating the namespace name.">一个 <see cref="T:System.String" />，指示命名空间名称。</returns>
    </member>
    <member name="T:System.Data.DataTableClearEventHandler">
      <summary vsli:raw="Represents the method that handles the &lt;see cref=&quot;M:System.Data.DataTable.Clear&quot; /&gt; method.">表示处理 <see cref="M:System.Data.DataTable.Clear" /> 方法的方法。</summary>
      <param name="sender" vsli:raw="The source of the event.">事件源。</param>
      <param name="e" vsli:raw="A &lt;see cref=&quot;T:System.Data.DataTableClearEventArgs&quot; /&gt; that contains the event data.">包含事件数据的 <see cref="T:System.Data.DataTableClearEventArgs" />。</param>
    </member>
    <member name="T:System.Data.DataTableCollection">
      <summary vsli:raw="Represents the collection of tables for the &lt;see cref=&quot;T:System.Data.DataSet&quot; /&gt;.">表示 <see cref="T:System.Data.DataSet" /> 的表的集合。</summary>
    </member>
    <member name="E:System.Data.DataTableCollection.CollectionChanged">
      <summary vsli:raw="Occurs after the &lt;see cref=&quot;T:System.Data.DataTableCollection&quot; /&gt; is changed because of &lt;see cref=&quot;T:System.Data.DataTable&quot; /&gt; objects being added or removed.">由于添加或移除 <see cref="T:System.Data.DataTableCollection" /> 对象而更改 <see cref="T:System.Data.DataTable" /> 之后发生。</summary>
    </member>
    <member name="E:System.Data.DataTableCollection.CollectionChanging">
      <summary vsli:raw="Occurs while the &lt;see cref=&quot;T:System.Data.DataTableCollection&quot; /&gt; is changing because of &lt;see cref=&quot;T:System.Data.DataTable&quot; /&gt; objects being added or removed.">由于添加或移除 <see cref="T:System.Data.DataTableCollection" /> 对象而更改 <see cref="T:System.Data.DataTable" /> 时发生。</summary>
    </member>
    <member name="M:System.Data.DataTableCollection.Add">
      <summary vsli:raw="Creates a new &lt;see cref=&quot;T:System.Data.DataTable&quot; /&gt; object by using a default name and adds it to the collection.">使用默认名称创建一个新的 <see cref="T:System.Data.DataTable" /> 对象，并将其添加到集合中。</summary>
      <returns vsli:raw="The newly created &lt;see cref=&quot;T:System.Data.DataTable&quot; /&gt;.">新创建的 <see cref="T:System.Data.DataTable" />。</returns>
    </member>
    <member name="M:System.Data.DataTableCollection.Add(System.Data.DataTable)">
      <summary vsli:raw="Adds the specified &lt;see langword=&quot;DataTable&quot; /&gt; to the collection.">将指定的 <see langword="DataTable" /> 添加到集合。</summary>
      <param name="table" vsli:raw="The &lt;see langword=&quot;DataTable&quot; /&gt; object to add.">要添加的 <see langword="DataTable" /> 对象。</param>
      <exception cref="T:System.ArgumentNullException" vsli:raw="The value specified for the table is &lt;see langword=&quot;null&quot; /&gt;.">为该表指定的值为 <see langword="null" />。</exception>
      <exception cref="T:System.ArgumentException" vsli:raw="The table already belongs to this collection, or belongs to another collection.">该表已经属于此集合，或者属于另一个集合。</exception>
      <exception cref="T:System.Data.DuplicateNameException" vsli:raw="A table in the collection has the same name. The comparison is not case sensitive.">集合中的某个表具有相同的名称。 该比较不区分大小写。</exception>
    </member>
    <member name="M:System.Data.DataTableCollection.Add(System.String)">
      <summary vsli:raw="Creates a &lt;see cref=&quot;T:System.Data.DataTable&quot; /&gt; object by using the specified name and adds it to the collection.">使用指定名称创建一个 <see cref="T:System.Data.DataTable" /> 对象，并将其添加到集合中。</summary>
      <param name="name" vsli:raw="The name to give the created &lt;see cref=&quot;T:System.Data.DataTable&quot; /&gt;.">要赋予已创建的 <see cref="T:System.Data.DataTable" /> 的名称。</param>
      <exception cref="T:System.Data.DuplicateNameException" vsli:raw="A table in the collection has the same name. (The comparison is not case sensitive.)">集合中的某个表具有相同的名称。 （该比较不区分大小写。）</exception>
      <returns vsli:raw="The newly created &lt;see cref=&quot;T:System.Data.DataTable&quot; /&gt;.">新创建的 <see cref="T:System.Data.DataTable" />。</returns>
    </member>
    <member name="M:System.Data.DataTableCollection.Add(System.String,System.String)">
      <summary vsli:raw="Creates a &lt;see cref=&quot;T:System.Data.DataTable&quot; /&gt; object by using the specified name and adds it to the collection.">使用指定名称创建一个 <see cref="T:System.Data.DataTable" /> 对象，并将其添加到集合中。</summary>
      <param name="name" vsli:raw="The name to give the created &lt;see cref=&quot;T:System.Data.DataTable&quot; /&gt;.">要赋予已创建的 <see cref="T:System.Data.DataTable" /> 的名称。</param>
      <param name="tableNamespace" vsli:raw="The namespace to give the created &lt;see cref=&quot;T:System.Data.DataTable&quot; /&gt;.">要为已创建的 <see cref="T:System.Data.DataTable" /> 提供的命名空间。</param>
      <exception cref="T:System.Data.DuplicateNameException" vsli:raw="A table in the collection has the same name. (The comparison is not case sensitive.)">集合中的某个表具有相同的名称。 （该比较不区分大小写。）</exception>
      <returns vsli:raw="The newly created &lt;see cref=&quot;T:System.Data.DataTable&quot; /&gt;.">新创建的 <see cref="T:System.Data.DataTable" />。</returns>
    </member>
    <member name="M:System.Data.DataTableCollection.AddRange(System.Data.DataTable[])">
      <summary vsli:raw="Copies the elements of the specified &lt;see cref=&quot;T:System.Data.DataTable&quot; /&gt; array to the end of the collection.">将指定的 <see cref="T:System.Data.DataTable" /> 数组的元素复制到集合末尾。</summary>
      <param name="tables" vsli:raw="The array of &lt;see cref=&quot;T:System.Data.DataTable&quot; /&gt; objects to add to the collection.">要添加到集合中的 <see cref="T:System.Data.DataTable" /> 对象的数组。</param>
    </member>
    <member name="M:System.Data.DataTableCollection.CanRemove(System.Data.DataTable)">
      <summary vsli:raw="Verifies whether the specified &lt;see cref=&quot;T:System.Data.DataTable&quot; /&gt; object can be removed from the collection.">验证是否可以将指定的 <see cref="T:System.Data.DataTable" /> 对象从集合中移除。</summary>
      <param name="table" vsli:raw="The &lt;see langword=&quot;DataTable&quot; /&gt; in the collection to perform the check against.">集合中要对其执行检查的 <see langword="DataTable" />。</param>
      <returns vsli:raw="&lt;see langword=&quot;true&quot; /&gt; if the table can be removed; otherwise &lt;see langword=&quot;false&quot; /&gt;.">如果该表可被移除，则为 <see langword="true" />；否则为 <see langword="false" />。</returns>
    </member>
    <member name="M:System.Data.DataTableCollection.Clear">
      <summary vsli:raw="Clears the collection of all &lt;see cref=&quot;T:System.Data.DataTable&quot; /&gt; objects.">清除所有 <see cref="T:System.Data.DataTable" /> 对象的集合。</summary>
    </member>
    <member name="M:System.Data.DataTableCollection.Contains(System.String)">
      <summary vsli:raw="Gets a value that indicates whether a &lt;see cref=&quot;T:System.Data.DataTable&quot; /&gt; object with the specified name exists in the collection.">获取一个值，该值指示集合中是否存在具有指定名称的 <see cref="T:System.Data.DataTable" /> 对象。</summary>
      <param name="name" vsli:raw="The name of the &lt;see cref=&quot;T:System.Data.DataTable&quot; /&gt; to find.">要查找的 <see cref="T:System.Data.DataTable" /> 的名称。</param>
      <returns vsli:raw="&lt;see langword=&quot;true&quot; /&gt; if the specified table exists; otherwise &lt;see langword=&quot;false&quot; /&gt;.">如果存在指定的表，则为 <see langword="true" />；否则为 <see langword="false" />。</returns>
    </member>
    <member name="M:System.Data.DataTableCollection.Contains(System.String,System.String)">
      <summary vsli:raw="Gets a value that indicates whether a &lt;see cref=&quot;T:System.Data.DataTable&quot; /&gt; object with the specified name and table namespace exists in the collection.">获取一个值，该值指示集合中是否存在具有指定名称和表命名空间的 <see cref="T:System.Data.DataTable" /> 对象。</summary>
      <param name="name" vsli:raw="The name of the &lt;see cref=&quot;T:System.Data.DataTable&quot; /&gt; to find.">要查找的 <see cref="T:System.Data.DataTable" /> 的名称。</param>
      <param name="tableNamespace" vsli:raw="The name of the &lt;see cref=&quot;T:System.Data.DataTable&quot; /&gt; namespace to look in.">作为查找范围的 <see cref="T:System.Data.DataTable" /> 命名空间的名称。</param>
      <returns vsli:raw="&lt;see langword=&quot;true&quot; /&gt; if the specified table exists; otherwise &lt;see langword=&quot;false&quot; /&gt;.">如果存在指定的表，则为 <see langword="true" />；否则为 <see langword="false" />。</returns>
    </member>
    <member name="M:System.Data.DataTableCollection.CopyTo(System.Data.DataTable[],System.Int32)">
      <summary vsli:raw="Copies all the elements of the current &lt;see cref=&quot;T:System.Data.DataTableCollection&quot; /&gt; to a one-dimensional &lt;see cref=&quot;T:System.Array&quot; /&gt;, starting at the specified destination array index.">将当前 <see cref="T:System.Data.DataTableCollection" /> 的所有元素复制到一维 <see cref="T:System.Array" />，从指定目标数组索引处开始。</summary>
      <param name="array" vsli:raw="The one-dimensional &lt;see cref=&quot;T:System.Array&quot; /&gt; to copy the current &lt;see cref=&quot;T:System.Data.DataTableCollection&quot; /&gt; object's elements into.">要将当前 <see cref="T:System.Data.DataTableCollection" /> 对象的元素复制到其中的一维 <see cref="T:System.Array" />。</param>
      <param name="index" vsli:raw="The destination &lt;see cref=&quot;T:System.Array&quot; /&gt; index to start copying into.">从其所在位置开始复制对象的目标 <see cref="T:System.Array" /> 索引。</param>
    </member>
    <member name="M:System.Data.DataTableCollection.IndexOf(System.Data.DataTable)">
      <summary vsli:raw="Gets the index of the specified &lt;see cref=&quot;T:System.Data.DataTable&quot; /&gt; object.">获取指定 <see cref="T:System.Data.DataTable" /> 对象的索引。</summary>
      <param name="table" vsli:raw="The &lt;see langword=&quot;DataTable&quot; /&gt; to search for.">要搜索的 <see langword="DataTable" />。</param>
      <returns vsli:raw="The zero-based index of the table, or -1 if the table is not found in the collection.">表从零开始的索引，如果在集合中未找到该表，则为 -1。</returns>
    </member>
    <member name="M:System.Data.DataTableCollection.IndexOf(System.String)">
      <summary vsli:raw="Gets the index in the collection of the &lt;see cref=&quot;T:System.Data.DataTable&quot; /&gt; object with the specified name.">获取具有指定名称的 <see cref="T:System.Data.DataTable" /> 对象的集合中的索引。</summary>
      <param name="tableName" vsli:raw="The name of the &lt;see langword=&quot;DataTable&quot; /&gt; object to look for.">要查找的 <see langword="DataTable" /> 对象的名称。</param>
      <returns vsli:raw="The zero-based index of the &lt;see langword=&quot;DataTable&quot; /&gt; with the specified name, or -1 if the table does not exist in the collection.">具有指定名称的 <see langword="DataTable" /> 的从零开始的索引；或者如果集合中不存在该表，则为 –1。  
  
 <block subset="none" type="note"><para>  
 当两个或两个以上的表同名，但是命名空间不同时，返回 -1。 如果在将表名只匹配到一个表时存在任何二义性，则该调用不会成功。</para></block></returns>
    </member>
    <member name="M:System.Data.DataTableCollection.IndexOf(System.String,System.String)">
      <summary vsli:raw="Gets the index in the collection of the specified &lt;see cref=&quot;T:System.Data.DataTable&quot; /&gt; object.">获取指定 <see cref="T:System.Data.DataTable" /> 对象的集合中的索引。</summary>
      <param name="tableName" vsli:raw="The name of the &lt;see cref=&quot;T:System.Data.DataTable&quot; /&gt; object to look for.">要查找的 <see cref="T:System.Data.DataTable" /> 对象的名称。</param>
      <param name="tableNamespace" vsli:raw="The name of the &lt;see cref=&quot;T:System.Data.DataTable&quot; /&gt; namespace to look in.">作为查找范围的 <see cref="T:System.Data.DataTable" /> 命名空间的名称。</param>
      <returns vsli:raw="The zero-based index of the &lt;see cref=&quot;T:System.Data.DataTable&quot; /&gt; with the specified name, or -1 if the table does not exist in the collection.">具有指定名称的 <see cref="T:System.Data.DataTable" /> 的从零开始的索引；或者如果集合中不存在该表，则为 –1。</returns>
    </member>
    <member name="M:System.Data.DataTableCollection.Remove(System.Data.DataTable)">
      <summary vsli:raw="Removes the specified &lt;see cref=&quot;T:System.Data.DataTable&quot; /&gt; object from the collection.">从集合中移除指定的 <see cref="T:System.Data.DataTable" /> 对象。</summary>
      <param name="table" vsli:raw="The &lt;see langword=&quot;DataTable&quot; /&gt; to remove.">要移除的 <see langword="DataTable" />。</param>
      <exception cref="T:System.ArgumentNullException" vsli:raw="The value specified for the table is &lt;see langword=&quot;null&quot; /&gt;.">为该表指定的值为 <see langword="null" />。</exception>
      <exception cref="T:System.ArgumentException" vsli:raw="The table does not belong to this collection.  &#xA;  &#xA; -or-  &#xA;  &#xA; The table is part of a relationship.">该表不属于此集合。  
  
 - 或 -  
  
 该表是关系的一部分。</exception>
    </member>
    <member name="M:System.Data.DataTableCollection.Remove(System.String)">
      <summary vsli:raw="Removes the &lt;see cref=&quot;T:System.Data.DataTable&quot; /&gt; object with the specified name from the collection.">从集合中删除具有指定名称的 <see cref="T:System.Data.DataTable" /> 对象。</summary>
      <param name="name" vsli:raw="The name of the &lt;see cref=&quot;T:System.Data.DataTable&quot; /&gt; object to remove.">要删除的 <see cref="T:System.Data.DataTable" /> 对象的名称。</param>
      <exception cref="T:System.ArgumentException" vsli:raw="The collection does not have a table with the specified name.">该集合不包含具有指定名称的表。</exception>
    </member>
    <member name="M:System.Data.DataTableCollection.Remove(System.String,System.String)">
      <summary vsli:raw="Removes the &lt;see cref=&quot;T:System.Data.DataTable&quot; /&gt; object with the specified name from the collection.">从集合中删除具有指定名称的 <see cref="T:System.Data.DataTable" /> 对象。</summary>
      <param name="name" vsli:raw="The name of the &lt;see cref=&quot;T:System.Data.DataTable&quot; /&gt; object to remove.">要删除的 <see cref="T:System.Data.DataTable" /> 对象的名称。</param>
      <param name="tableNamespace" vsli:raw="The name of the &lt;see cref=&quot;T:System.Data.DataTable&quot; /&gt; namespace to look in.">作为查找范围的 <see cref="T:System.Data.DataTable" /> 命名空间的名称。</param>
      <exception cref="T:System.ArgumentException" vsli:raw="The collection does not have a table with the specified name.">该集合不包含具有指定名称的表。</exception>
    </member>
    <member name="M:System.Data.DataTableCollection.RemoveAt(System.Int32)">
      <summary vsli:raw="Removes the &lt;see cref=&quot;T:System.Data.DataTable&quot; /&gt; object at the specified index from the collection.">从集合中的指定索引处删除 <see cref="T:System.Data.DataTable" /> 对象。</summary>
      <param name="index" vsli:raw="The index of the &lt;see langword=&quot;DataTable&quot; /&gt; to remove.">要移除的 <see langword="DataTable" /> 的索引。</param>
      <exception cref="T:System.ArgumentException" vsli:raw="The collection does not have a table at the specified index.">该集合在指定的索引位置没有表。</exception>
    </member>
    <member name="P:System.Data.DataTableCollection.Item(System.Int32)">
      <summary vsli:raw="Gets the &lt;see cref=&quot;T:System.Data.DataTable&quot; /&gt; object at the specified index.">获取位于指定索引位置的 <see cref="T:System.Data.DataTable" /> 对象。</summary>
      <param name="index" vsli:raw="The zero-based index of the &lt;see cref=&quot;T:System.Data.DataTable&quot; /&gt; to find.">要查找的 <see cref="T:System.Data.DataTable" /> 的从零开始的索引。</param>
      <exception cref="T:System.IndexOutOfRangeException" vsli:raw="The index value is greater than the number of items in the collection.">索引值大于集合中的项目数。</exception>
      <returns vsli:raw="A &lt;see cref=&quot;T:System.Data.DataTable&quot; /&gt; with the specified index; otherwise &lt;see langword=&quot;null&quot; /&gt; if the &lt;see cref=&quot;T:System.Data.DataTable&quot; /&gt; does not exist.">
        <see cref="T:System.Data.DataTable" />具有指定索引的; 否则，如果不存在，则为 <see langword="null" /><see cref="T:System.Data.DataTable" /> 。</returns>
    </member>
    <member name="P:System.Data.DataTableCollection.Item(System.String)">
      <summary vsli:raw="Gets the &lt;see cref=&quot;T:System.Data.DataTable&quot; /&gt; object with the specified name.">获取具有指定名称的 <see cref="T:System.Data.DataTable" /> 对象。</summary>
      <param name="name" vsli:raw="The name of the &lt;see langword=&quot;DataTable&quot; /&gt; to find.">要查找的 <see langword="DataTable" /> 的名称。</param>
      <returns vsli:raw="A &lt;see cref=&quot;T:System.Data.DataTable&quot; /&gt; with the specified name; otherwise &lt;see langword=&quot;null&quot; /&gt; if the &lt;see cref=&quot;T:System.Data.DataTable&quot; /&gt; does not exist.">具有指定名称的 <see cref="T:System.Data.DataTable" />；否则，如果 <see cref="T:System.Data.DataTable" /> 不存在，则为 <see langword="null" />。</returns>
    </member>
    <member name="P:System.Data.DataTableCollection.Item(System.String,System.String)">
      <summary vsli:raw="Gets the &lt;see cref=&quot;T:System.Data.DataTable&quot; /&gt; object with the specified name in the specified namespace.">获取指定命名空间中具有指定名称的 <see cref="T:System.Data.DataTable" /> 对象。</summary>
      <param name="name" vsli:raw="The name of the &lt;see langword=&quot;DataTable&quot; /&gt; to find.">要查找的 <see langword="DataTable" /> 的名称。</param>
      <param name="tableNamespace" vsli:raw="The name of the &lt;see cref=&quot;T:System.Data.DataTable&quot; /&gt; namespace to look in.">作为查找范围的 <see cref="T:System.Data.DataTable" /> 命名空间的名称。</param>
      <returns vsli:raw="A &lt;see cref=&quot;T:System.Data.DataTable&quot; /&gt; with the specified name; otherwise &lt;see langword=&quot;null&quot; /&gt; if the &lt;see cref=&quot;T:System.Data.DataTable&quot; /&gt; does not exist.">具有指定名称的 <see cref="T:System.Data.DataTable" />；否则，如果 <see cref="T:System.Data.DataTable" /> 不存在，则为 <see langword="null" />。</returns>
    </member>
    <member name="T:System.Data.DataTableExtensions">
      <summary vsli:raw="Defines the extension methods to the &lt;see cref=&quot;T:System.Data.DataTable&quot; /&gt; class. &lt;see cref=&quot;T:System.Data.DataTableExtensions&quot; /&gt; is a static class.">定义 <see cref="T:System.Data.DataTable" /> 类的扩展方法。 <see cref="T:System.Data.DataTableExtensions" /> 是一个静态类。</summary>
    </member>
    <member name="M:System.Data.DataTableExtensions.AsDataView(System.Data.DataTable)">
      <summary vsli:raw="Creates and returns a LINQ-enabled &lt;see cref=&quot;T:System.Data.DataView&quot; /&gt; object.">创建并返回支持 LINQ 的 <see cref="T:System.Data.DataView" /> 对象。</summary>
      <param name="table" vsli:raw="The source &lt;see cref=&quot;T:System.Data.DataTable&quot; /&gt; from which the LINQ-enabled &lt;see cref=&quot;T:System.Data.DataView&quot; /&gt; is created.">从中创建支持 LINQ 的 <see cref="T:System.Data.DataTable" /> 的源 <see cref="T:System.Data.DataView" />。</param>
      <returns vsli:raw="A LINQ-enabled &lt;see cref=&quot;T:System.Data.DataView&quot; /&gt; object.">支持 LINQ 的 <see cref="T:System.Data.DataView" /> 对象。</returns>
    </member>
    <member name="M:System.Data.DataTableExtensions.AsDataView``1(System.Data.EnumerableRowCollection{``0})">
      <summary vsli:raw="Creates and returns a LINQ-enabled &lt;see cref=&quot;T:System.Data.DataView&quot; /&gt; object representing the LINQ to DataSet query.">创建并返回一个支持 LINQ 的 <see cref="T:System.Data.DataView" /> 对象，该对象表示 LINQ to DataSet 查询。</summary>
      <param name="source" vsli:raw="The source LINQ to DataSet query from which the LINQ-enabled &lt;see cref=&quot;T:System.Data.DataView&quot; /&gt; is created.">从中创建支持 LINQ 的 <see cref="T:System.Data.DataView" /> 的源 LINQ to DataSet 查询。</param>
      <typeparam name="T" vsli:raw="The type of objects in the source sequence, typically &lt;see cref=&quot;T:System.Data.DataRow&quot; /&gt;.">源序列中的对象类型（通常为 <see cref="T:System.Data.DataRow" />）。</typeparam>
      <returns vsli:raw="A LINQ-enabled &lt;see cref=&quot;T:System.Data.DataView&quot; /&gt; object.">支持 LINQ 的 <see cref="T:System.Data.DataView" /> 对象。</returns>
    </member>
    <member name="M:System.Data.DataTableExtensions.AsEnumerable(System.Data.DataTable)">
      <summary vsli:raw="Returns an &lt;see cref=&quot;T:System.Collections.Generic.IEnumerable`1&quot; /&gt; object, where the generic parameter &lt;paramref name=&quot;T&quot; /&gt; is &lt;see cref=&quot;T:System.Data.DataRow&quot; /&gt;. This object can be used in a LINQ expression or method query.">返回一个 <see cref="T:System.Collections.Generic.IEnumerable`1" /> 对象，其泛型参数 <paramref name="T" /> 为 <see cref="T:System.Data.DataRow" />。 此对象可用在 LINQ 表达式或方法查询中。</summary>
      <param name="source" vsli:raw="The source &lt;see cref=&quot;T:System.Data.DataTable&quot; /&gt; to make enumerable.">可枚举的源 <see cref="T:System.Data.DataTable" />。</param>
      <exception cref="T:System.ArgumentNullException" vsli:raw="The source &lt;see cref=&quot;T:System.Data.DataTable&quot; /&gt; is &lt;see langword=&quot;null&quot; /&gt;.">源 <see cref="T:System.Data.DataTable" /> 为 <see langword="null" />。</exception>
      <returns vsli:raw="An &lt;see cref=&quot;T:System.Collections.Generic.IEnumerable`1&quot; /&gt; object, where the generic parameter &lt;paramref name=&quot;T&quot; /&gt; is &lt;see cref=&quot;T:System.Data.DataRow&quot; /&gt;.">一个 <see cref="T:System.Collections.Generic.IEnumerable`1" /> 对象，其泛型参数 <paramref name="T" /> 为 <see cref="T:System.Data.DataRow" />。</returns>
    </member>
    <member name="M:System.Data.DataTableExtensions.CopyToDataTable``1(System.Collections.Generic.IEnumerable{``0})">
      <summary vsli:raw="Returns a &lt;see cref=&quot;T:System.Data.DataTable&quot; /&gt; that contains copies of the &lt;see cref=&quot;T:System.Data.DataRow&quot; /&gt; objects, given an input &lt;see cref=&quot;T:System.Collections.Generic.IEnumerable`1&quot; /&gt; object where the generic parameter &lt;paramref name=&quot;T&quot; /&gt; is &lt;see cref=&quot;T:System.Data.DataRow&quot; /&gt;.">在给定其泛型参数 <paramref name="T" /> 为 <see cref="T:System.Data.DataTable" /> 的输入 <see cref="T:System.Data.DataRow" /> 对象的情况下，返回包含 <see cref="T:System.Collections.Generic.IEnumerable`1" /> 对象副本的 <see cref="T:System.Data.DataRow" />。</summary>
      <param name="source" vsli:raw="The source &lt;see cref=&quot;T:System.Collections.Generic.IEnumerable`1&quot; /&gt; sequence.">源 <see cref="T:System.Collections.Generic.IEnumerable`1" /> 序列。</param>
      <typeparam name="T" vsli:raw="The type of objects in the source sequence, typically &lt;see cref=&quot;T:System.Data.DataRow&quot; /&gt;.">源序列中的对象类型（通常为 <see cref="T:System.Data.DataRow" />）。</typeparam>
      <exception cref="T:System.ArgumentNullException" vsli:raw="The source &lt;see cref=&quot;T:System.Collections.Generic.IEnumerable`1&quot; /&gt; sequence is &lt;see langword=&quot;null&quot; /&gt; and a new table cannot be created.">源 <see cref="T:System.Collections.Generic.IEnumerable`1" /> 序列为 <see langword="null" />，因此无法创建新表。</exception>
      <exception cref="T:System.InvalidOperationException" vsli:raw="A &lt;see cref=&quot;T:System.Data.DataRow&quot; /&gt; in the source sequence has a state of &lt;see cref=&quot;F:System.Data.DataRowState.Deleted&quot; /&gt;.  &#xA;  &#xA; The source sequence does not contain any &lt;see cref=&quot;T:System.Data.DataRow&quot; /&gt; objects.  &#xA;  &#xA; A &lt;see cref=&quot;T:System.Data.DataRow&quot; /&gt; in the source sequence is &lt;see langword=&quot;null&quot; /&gt;.">源序列中的 <see cref="T:System.Data.DataRow" /> 的状态为 <see cref="F:System.Data.DataRowState.Deleted" />。  
  
源序列不包含任何 <see cref="T:System.Data.DataRow" /> 对象。  
  
源序列中的 <see cref="T:System.Data.DataRow" /> 为 <see langword="null" />。</exception>
      <returns vsli:raw="A &lt;see cref=&quot;T:System.Data.DataTable&quot; /&gt; that contains the input sequence as the type of &lt;see cref=&quot;T:System.Data.DataRow&quot; /&gt; objects.">一个 <see cref="T:System.Data.DataTable" />，其中包含作为 <see cref="T:System.Data.DataRow" /> 对象的类型的输入序列。</returns>
    </member>
    <member name="M:System.Data.DataTableExtensions.CopyToDataTable``1(System.Collections.Generic.IEnumerable{``0},System.Data.DataTable,System.Data.LoadOption)">
      <summary vsli:raw="Copies &lt;see cref=&quot;T:System.Data.DataRow&quot; /&gt; objects to the specified &lt;see cref=&quot;T:System.Data.DataTable&quot; /&gt;, given an input &lt;see cref=&quot;T:System.Collections.Generic.IEnumerable`1&quot; /&gt; object where the generic parameter &lt;paramref name=&quot;T&quot; /&gt; is &lt;see cref=&quot;T:System.Data.DataRow&quot; /&gt;.">在给定其泛型参数 <paramref name="T" /> 为 <see cref="T:System.Data.DataRow" /> 的输入 <see cref="T:System.Data.DataTable" /> 对象的情况下，将 <see cref="T:System.Collections.Generic.IEnumerable`1" /> 对象复制到指定的 <see cref="T:System.Data.DataRow" />。</summary>
      <param name="source" vsli:raw="The source &lt;see cref=&quot;T:System.Collections.Generic.IEnumerable`1&quot; /&gt; sequence.">源 <see cref="T:System.Collections.Generic.IEnumerable`1" /> 序列。</param>
      <param name="table" vsli:raw="The destination &lt;see cref=&quot;T:System.Data.DataTable&quot; /&gt;.">目标 <see cref="T:System.Data.DataTable" />。</param>
      <param name="options" vsli:raw="A &lt;see cref=&quot;T:System.Data.LoadOption&quot; /&gt; enumeration that specifies the &lt;see cref=&quot;T:System.Data.DataTable&quot; /&gt; load options.">
        <see cref="T:System.Data.LoadOption" /> 枚举，用于指定 <see cref="T:System.Data.DataTable" /> 加载选项。</param>
      <typeparam name="T" vsli:raw="The type of objects in the source sequence, typically &lt;see cref=&quot;T:System.Data.DataRow&quot; /&gt;.">源序列中的对象类型（通常为 <see cref="T:System.Data.DataRow" />）。</typeparam>
      <exception cref="T:System.ArgumentException" vsli:raw="The copied &lt;see cref=&quot;T:System.Data.DataRow&quot; /&gt; objects do not fit the schema of the destination &lt;see cref=&quot;T:System.Data.DataTable&quot; /&gt;.">复制的 <see cref="T:System.Data.DataRow" /> 对象不符合目标 <see cref="T:System.Data.DataTable" /> 的架构。</exception>
      <exception cref="T:System.ArgumentNullException" vsli:raw="The source &lt;see cref=&quot;T:System.Collections.Generic.IEnumerable`1&quot; /&gt; sequence is &lt;see langword=&quot;null&quot; /&gt; or the destination &lt;see cref=&quot;T:System.Data.DataTable&quot; /&gt; is &lt;see langword=&quot;null&quot; /&gt;.">源 <see cref="T:System.Collections.Generic.IEnumerable`1" /> 序列为 <see langword="null" />，或者目标 <see cref="T:System.Data.DataTable" /> 为 <see langword="null" />。</exception>
      <exception cref="T:System.InvalidOperationException" vsli:raw="A &lt;see cref=&quot;T:System.Data.DataRow&quot; /&gt; in the source sequence has a state of &lt;see cref=&quot;F:System.Data.DataRowState.Deleted&quot; /&gt;.  &#xA;  &#xA; The source sequence does not contain any &lt;see cref=&quot;T:System.Data.DataRow&quot; /&gt; objects.  &#xA;  &#xA; A &lt;see cref=&quot;T:System.Data.DataRow&quot; /&gt; in the source sequence is &lt;see langword=&quot;null&quot; /&gt;.">源序列中的 <see cref="T:System.Data.DataRow" /> 的状态为 <see cref="F:System.Data.DataRowState.Deleted" />。  
  
源序列不包含任何 <see cref="T:System.Data.DataRow" /> 对象。  
  
源序列中的 <see cref="T:System.Data.DataRow" /> 为 <see langword="null" />。</exception>
    </member>
    <member name="M:System.Data.DataTableExtensions.CopyToDataTable``1(System.Collections.Generic.IEnumerable{``0},System.Data.DataTable,System.Data.LoadOption,System.Data.FillErrorEventHandler)">
      <summary vsli:raw="Copies &lt;see cref=&quot;T:System.Data.DataRow&quot; /&gt; objects to the specified &lt;see cref=&quot;T:System.Data.DataTable&quot; /&gt;, given an input &lt;see cref=&quot;T:System.Collections.Generic.IEnumerable`1&quot; /&gt; object where the generic parameter &lt;paramref name=&quot;T&quot; /&gt; is &lt;see cref=&quot;T:System.Data.DataRow&quot; /&gt;.">在给定其泛型参数 <paramref name="T" /> 为 <see cref="T:System.Data.DataRow" /> 的输入 <see cref="T:System.Data.DataTable" /> 对象的情况下，将 <see cref="T:System.Collections.Generic.IEnumerable`1" /> 对象复制到指定的 <see cref="T:System.Data.DataRow" />。</summary>
      <param name="source" vsli:raw="The source &lt;see cref=&quot;T:System.Collections.Generic.IEnumerable`1&quot; /&gt; sequence.">源 <see cref="T:System.Collections.Generic.IEnumerable`1" /> 序列。</param>
      <param name="table" vsli:raw="The destination &lt;see cref=&quot;T:System.Data.DataTable&quot; /&gt;.">目标 <see cref="T:System.Data.DataTable" />。</param>
      <param name="options" vsli:raw="A &lt;see cref=&quot;T:System.Data.LoadOption&quot; /&gt; enumeration that specifies the &lt;see cref=&quot;T:System.Data.DataTable&quot; /&gt; load options.">
        <see cref="T:System.Data.LoadOption" /> 枚举，用于指定 <see cref="T:System.Data.DataTable" /> 加载选项。</param>
      <param name="errorHandler" vsli:raw="A &lt;see cref=&quot;T:System.Data.FillErrorEventHandler&quot; /&gt; delegate that represents the method that will handle an error.">
        <see cref="T:System.Data.FillErrorEventHandler" /> 委托，表示将处理错误的方法。</param>
      <typeparam name="T" vsli:raw="The type of objects in the source sequence, typically &lt;see cref=&quot;T:System.Data.DataRow&quot; /&gt;.">源序列中的对象类型（通常为 <see cref="T:System.Data.DataRow" />）。</typeparam>
      <exception cref="T:System.ArgumentException" vsli:raw="The copied &lt;see cref=&quot;T:System.Data.DataRow&quot; /&gt; objects do not fit the schema of the destination &lt;see cref=&quot;T:System.Data.DataTable&quot; /&gt;.">复制的 <see cref="T:System.Data.DataRow" /> 对象不符合目标 <see cref="T:System.Data.DataTable" /> 的架构。</exception>
      <exception cref="T:System.ArgumentNullException" vsli:raw="The source &lt;see cref=&quot;T:System.Collections.Generic.IEnumerable`1&quot; /&gt; sequence is &lt;see langword=&quot;null&quot; /&gt; or the destination &lt;see cref=&quot;T:System.Data.DataTable&quot; /&gt; is &lt;see langword=&quot;null&quot; /&gt;.">源 <see cref="T:System.Collections.Generic.IEnumerable`1" /> 序列为 <see langword="null" />，或者目标 <see cref="T:System.Data.DataTable" /> 为 <see langword="null" />。</exception>
      <exception cref="T:System.InvalidOperationException" vsli:raw="A &lt;see cref=&quot;T:System.Data.DataRow&quot; /&gt; in the source sequence has a state of &lt;see cref=&quot;F:System.Data.DataRowState.Deleted&quot; /&gt;.  &#xA;  &#xA; -or-  &#xA;  &#xA; The source sequence does not contain any &lt;see cref=&quot;T:System.Data.DataRow&quot; /&gt; objects.  &#xA;  &#xA; -or-  &#xA;  &#xA; A &lt;see cref=&quot;T:System.Data.DataRow&quot; /&gt; in the source sequence is &lt;see langword=&quot;null&quot; /&gt;.">源序列中的 <see cref="T:System.Data.DataRow" /> 的状态为 <see cref="F:System.Data.DataRowState.Deleted" />。  
  
- 或 - 
源序列不包含任何 <see cref="T:System.Data.DataRow" /> 对象。  
  
- 或 - 
源序列中的 <see cref="T:System.Data.DataRow" /> 为 <see langword="null" />。</exception>
    </member>
    <member name="T:System.Data.DataTableNewRowEventArgs">
      <summary vsli:raw="Provides data for the &lt;see cref=&quot;M:System.Data.DataTable.NewRow&quot; /&gt; method.">为 <see cref="M:System.Data.DataTable.NewRow" /> 方法提供数据。</summary>
    </member>
    <member name="M:System.Data.DataTableNewRowEventArgs.#ctor(System.Data.DataRow)">
      <summary vsli:raw="Initializes a new instance of &lt;see cref=&quot;T:System.Data.DataTableNewRowEventArgs&quot; /&gt;.">初始化 <see cref="T:System.Data.DataTableNewRowEventArgs" /> 的新实例。</summary>
      <param name="dataRow" vsli:raw="The &lt;see cref=&quot;T:System.Data.DataRow&quot; /&gt; being added.">正被添加的 <see cref="T:System.Data.DataRow" />。</param>
    </member>
    <member name="P:System.Data.DataTableNewRowEventArgs.Row">
      <summary vsli:raw="Gets the row that is being added.">获取正被添加的行。</summary>
      <returns vsli:raw="The &lt;see cref=&quot;T:System.Data.DataRow&quot; /&gt; that is being added.">正被添加的 <see cref="T:System.Data.DataRow" />。</returns>
    </member>
    <member name="T:System.Data.DataTableNewRowEventHandler">
      <summary vsli:raw="Represents the method that handles the &lt;see cref=&quot;M:System.Data.DataTable.NewRow&quot; /&gt; method.">表示处理 <see cref="M:System.Data.DataTable.NewRow" /> 方法的方法。</summary>
      <param name="sender" vsli:raw="The source of the event.">事件源。</param>
      <param name="e" vsli:raw="A &lt;see cref=&quot;T:System.Data.DataTableNewRowEventArgs&quot; /&gt; that contains the event data.">包含事件数据的 <see cref="T:System.Data.DataTableNewRowEventArgs" />。</param>
    </member>
    <member name="T:System.Data.DataTableReader">
      <summary vsli:raw="The &lt;see cref=&quot;T:System.Data.DataTableReader&quot; /&gt; obtains the contents of one or more &lt;see cref=&quot;T:System.Data.DataTable&quot; /&gt; objects in the form of one or more read-only, forward-only result sets.">
        <see cref="T:System.Data.DataTableReader" /> 以一个或多个只读、只进结果集的形式获取一个或多个 <see cref="T:System.Data.DataTable" /> 对象的内容。</summary>
    </member>
    <member name="M:System.Data.DataTableReader.#ctor(System.Data.DataTable)">
      <summary vsli:raw="Initializes a new instance of the &lt;see cref=&quot;T:System.Data.DataTableReader&quot; /&gt; class by using data from the supplied &lt;see cref=&quot;T:System.Data.DataTable&quot; /&gt;.">通过使用提供的 <see cref="T:System.Data.DataTableReader" /> 中的数据初始化 <see cref="T:System.Data.DataTable" /> 类的新实例。</summary>
      <param name="dataTable" vsli:raw="The &lt;see cref=&quot;T:System.Data.DataTable&quot; /&gt; from which the new &lt;see cref=&quot;T:System.Data.DataTableReader&quot; /&gt; obtains its result set.">新的 <see cref="T:System.Data.DataTable" /> 从中获取其结果集的 <see cref="T:System.Data.DataTableReader" />。</param>
    </member>
    <member name="M:System.Data.DataTableReader.#ctor(System.Data.DataTable[])">
      <summary vsli:raw="Initializes a new instance of the &lt;see cref=&quot;T:System.Data.DataTableReader&quot; /&gt; class using the supplied array of &lt;see cref=&quot;T:System.Data.DataTable&quot; /&gt; objects.">使用提供的 <see cref="T:System.Data.DataTableReader" /> 对象的数组初始化 <see cref="T:System.Data.DataTable" /> 类的新实例。</summary>
      <param name="dataTables" vsli:raw="The array of &lt;see cref=&quot;T:System.Data.DataTable&quot; /&gt; objects that supplies the results for the new &lt;see cref=&quot;T:System.Data.DataTableReader&quot; /&gt; object.">用于为新的 <see cref="T:System.Data.DataTable" /> 对象提供结果的 <see cref="T:System.Data.DataTableReader" /> 对象数组。</param>
    </member>
    <member name="M:System.Data.DataTableReader.Close">
      <summary vsli:raw="Closes the current &lt;see cref=&quot;T:System.Data.DataTableReader&quot; /&gt;.">关闭当前的 <see cref="T:System.Data.DataTableReader" />。</summary>
    </member>
    <member name="M:System.Data.DataTableReader.GetBoolean(System.Int32)">
      <summary vsli:raw="Gets the value of the specified column as a &lt;see cref=&quot;T:System.Boolean&quot; /&gt;.">获取指定列的 <see cref="T:System.Boolean" /> 形式的值。</summary>
      <param name="ordinal" vsli:raw="The zero-based column ordinal.">从零开始的列序号。</param>
      <exception cref="T:System.ArgumentOutOfRangeException" vsli:raw="The index passed was outside the range of 0 to &lt;see cref=&quot;P:System.Data.DataTableReader.FieldCount&quot; /&gt; - 1.">传递的索引超出了 0 到 <see cref="P:System.Data.DataTableReader.FieldCount" /> -1 的范围。</exception>
      <exception cref="T:System.Data.DeletedRowInaccessibleException" vsli:raw="An attempt was made to retrieve data from a deleted row.">尝试从已删除的行中检索数据。</exception>
      <exception cref="T:System.InvalidOperationException" vsli:raw="An attempt was made to read or access a column in a closed &lt;see cref=&quot;T:System.Data.DataTableReader&quot; /&gt;.">尝试读取或访问已关闭的 <see cref="T:System.Data.DataTableReader" /> 中的列。</exception>
      <exception cref="T:System.InvalidCastException" vsli:raw="The specified column does not contain a &lt;see langword=&quot;Boolean&quot; /&gt;.">指定的列不包含 <see langword="Boolean" />。</exception>
      <returns vsli:raw="The value of the specified column.">指定列的值。</returns>
    </member>
    <member name="M:System.Data.DataTableReader.GetByte(System.Int32)">
      <summary vsli:raw="Gets the value of the specified column as a byte.">以字节的形式获取指定列的值。</summary>
      <param name="ordinal" vsli:raw="The zero-based column ordinal.">从零开始的列序号。</param>
      <exception cref="T:System.ArgumentOutOfRangeException" vsli:raw="The index passed was outside the range of 0 to &lt;see cref=&quot;P:System.Data.DataTableReader.FieldCount&quot; /&gt; - 1.">传递的索引超出了 0 到 <see cref="P:System.Data.DataTableReader.FieldCount" /> -1 的范围。</exception>
      <exception cref="T:System.Data.DeletedRowInaccessibleException" vsli:raw="An attempt was made to retrieve data from a deleted row.">尝试从已删除的行中检索数据。</exception>
      <exception cref="T:System.InvalidOperationException" vsli:raw="An attempt was made to read or access a column in a closed &lt;see langword=&quot;DataTableReader&quot; /&gt;.">尝试读取或访问已关闭的 <see langword="DataTableReader" /> 中的列。</exception>
      <exception cref="T:System.InvalidCastException" vsli:raw="The specified column does not contain a byte.">指定的列不包含字节。</exception>
      <returns vsli:raw="The value of the specified column.">指定列的值。</returns>
    </member>
    <member name="M:System.Data.DataTableReader.GetBytes(System.Int32,System.Int64,System.Byte[],System.Int32,System.Int32)">
      <summary vsli:raw="Reads a stream of bytes starting at the specified column offset into the buffer as an array starting at the specified buffer offset.">将从指定列偏移量开始的字节流作为从指定缓冲区偏移量开始的数组读入缓冲区中。</summary>
      <param name="ordinal" vsli:raw="The zero-based column ordinal.">从零开始的列序号。</param>
      <param name="dataIndex" vsli:raw="The index within the field from which to start the read operation.">字段中作为读取操作起始位置的索引。</param>
      <param name="buffer" vsli:raw="The buffer into which to read the stream of bytes.">要读入字节流的缓冲区。</param>
      <param name="bufferIndex" vsli:raw="The index within the buffer at which to start placing the data.">缓冲区中的索引，从该索引处开始放置数据。</param>
      <param name="length" vsli:raw="The maximum length to copy into the buffer.">复制到缓冲区中的最大长度。</param>
      <exception cref="T:System.ArgumentOutOfRangeException" vsli:raw="The index passed was outside the range of 0 to &lt;see cref=&quot;P:System.Data.DataTableReader.FieldCount&quot; /&gt; - 1.">传递的索引超出了 0 到 <see cref="P:System.Data.DataTableReader.FieldCount" /> -1 的范围。</exception>
      <exception cref="T:System.Data.DeletedRowInaccessibleException" vsli:raw="An attempt was made to retrieve data from a deleted row.">尝试从已删除的行中检索数据。</exception>
      <exception cref="T:System.InvalidOperationException" vsli:raw="An attempt was made to read or access a column in a closed &lt;see langword=&quot;DataTableReader&quot; /&gt;.">尝试读取或访问已关闭的 <see langword="DataTableReader" /> 中的列。</exception>
      <exception cref="T:System.InvalidCastException" vsli:raw="The specified column does not contain a byte array.">指定的列不包含字节数组。</exception>
      <returns vsli:raw="The actual number of bytes read.">读取的实际字节数。</returns>
    </member>
    <member name="M:System.Data.DataTableReader.GetChar(System.Int32)">
      <summary vsli:raw="Gets the value of the specified column as a character.">获取指定列的字符形式的值。</summary>
      <param name="ordinal" vsli:raw="The zero-based column ordinal.">从零开始的列序号。</param>
      <exception cref="T:System.ArgumentOutOfRangeException" vsli:raw="The index passed was outside the range of 0 to &lt;see cref=&quot;P:System.Data.DataTableReader.FieldCount&quot; /&gt; - 1.">传递的索引超出了 0 到 <see cref="P:System.Data.DataTableReader.FieldCount" /> -1 的范围。</exception>
      <exception cref="T:System.Data.DeletedRowInaccessibleException" vsli:raw="An attempt was made to retrieve data from a deleted row.">尝试从已删除的行中检索数据。</exception>
      <exception cref="T:System.InvalidOperationException" vsli:raw="An attempt was made to read or access a column in a closed &lt;see langword=&quot;DataTableReader&quot; /&gt;.">尝试读取或访问已关闭的 <see langword="DataTableReader" /> 中的列。</exception>
      <exception cref="T:System.InvalidCastException" vsli:raw="The specified field does not contain a character.">指定的字段不包含字符。</exception>
      <returns vsli:raw="The value of the column.">列的值。</returns>
    </member>
    <member name="M:System.Data.DataTableReader.GetChars(System.Int32,System.Int64,System.Char[],System.Int32,System.Int32)">
      <summary vsli:raw="Returns the value of the specified column as a character array.">以字符数组的形式返回指定列的值。</summary>
      <param name="ordinal" vsli:raw="The zero-based column ordinal.">从零开始的列序号。</param>
      <param name="dataIndex" vsli:raw="The index within the field from which to start the read operation.">字段中作为读取操作起始位置的索引。</param>
      <param name="buffer" vsli:raw="The buffer into which to read the stream of chars.">要读入字节流的缓冲区。</param>
      <param name="bufferIndex" vsli:raw="The index within the buffer at which to start placing the data.">缓冲区中的索引，从该索引处开始放置数据。</param>
      <param name="length" vsli:raw="The maximum length to copy into the buffer.">复制到缓冲区中的最大长度。</param>
      <exception cref="T:System.ArgumentOutOfRangeException" vsli:raw="The index passed was outside the range of 0 to &lt;see cref=&quot;P:System.Data.DataTableReader.FieldCount&quot; /&gt; - 1.">传递的索引超出了 0 到 <see cref="P:System.Data.DataTableReader.FieldCount" /> -1 的范围。</exception>
      <exception cref="T:System.Data.DeletedRowInaccessibleException" vsli:raw="An attempt was made to retrieve data from a deleted row.">尝试从已删除的行中检索数据。</exception>
      <exception cref="T:System.InvalidOperationException" vsli:raw="An attempt was made to read or access a column in a closed &lt;see langword=&quot;DataTableReader&quot; /&gt;.">尝试读取或访问已关闭的 <see langword="DataTableReader" /> 中的列。</exception>
      <exception cref="T:System.InvalidCastException" vsli:raw="The specified column does not contain a character array.">指定的列不包含字符数组。</exception>
      <returns vsli:raw="The actual number of characters read.">读取的实际字符数。</returns>
    </member>
    <member name="M:System.Data.DataTableReader.GetDataTypeName(System.Int32)">
      <summary vsli:raw="Gets a string representing the data type of the specified column.">获取一个表示指定列的数据类型的字符串。</summary>
      <param name="ordinal" vsli:raw="The zero-based column ordinal.">从零开始的列序号。</param>
      <exception cref="T:System.ArgumentOutOfRangeException" vsli:raw="The index passed was outside the range of 0 to &lt;see cref=&quot;P:System.Data.DataTableReader.FieldCount&quot; /&gt; - 1.">传递的索引超出了 0 到 <see cref="P:System.Data.DataTableReader.FieldCount" /> -1 的范围。</exception>
      <exception cref="T:System.InvalidOperationException" vsli:raw="An attempt was made to read or access a column in a closed &lt;see cref=&quot;T:System.Data.DataTableReader&quot; /&gt;.">尝试读取或访问已关闭的 <see cref="T:System.Data.DataTableReader" /> 中的列。</exception>
      <returns vsli:raw="A string representing the column's data type.">一个表示列的数据类型的字符串。</returns>
    </member>
    <member name="M:System.Data.DataTableReader.GetDateTime(System.Int32)">
      <summary vsli:raw="Gets the value of the specified column as a &lt;see cref=&quot;T:System.DateTime&quot; /&gt; object.">以 <see cref="T:System.DateTime" /> 对象的形式获取指定列的值。</summary>
      <param name="ordinal" vsli:raw="The zero-based column ordinal.">从零开始的列序号。</param>
      <exception cref="T:System.ArgumentOutOfRangeException" vsli:raw="The index passed was outside the range of 0 to &lt;see cref=&quot;P:System.Data.DataTableReader.FieldCount&quot; /&gt; - 1.">传递的索引超出了 0 到 <see cref="P:System.Data.DataTableReader.FieldCount" /> -1 的范围。</exception>
      <exception cref="T:System.Data.DeletedRowInaccessibleException" vsli:raw="An attempt was made to retrieve data from a deleted row.">尝试从已删除的行中检索数据。</exception>
      <exception cref="T:System.InvalidOperationException" vsli:raw="An attempt was made to read or access a column in a closed &lt;see langword=&quot;DataTableReader&quot; /&gt;.">尝试读取或访问已关闭的 <see langword="DataTableReader" /> 中的列。</exception>
      <exception cref="T:System.InvalidCastException" vsli:raw="The specified column does not contain a DateTime value.">指定的列不包含 DateTime 值。</exception>
      <returns vsli:raw="The value of the specified column.">指定列的值。</returns>
    </member>
    <member name="M:System.Data.DataTableReader.GetDecimal(System.Int32)">
      <summary vsli:raw="Gets the value of the specified column as a &lt;see cref=&quot;T:System.Decimal&quot; /&gt;.">获取指定列的 <see cref="T:System.Decimal" /> 形式的值。</summary>
      <param name="ordinal" vsli:raw="The zero-based column ordinal.">从零开始的列序号。</param>
      <exception cref="T:System.ArgumentOutOfRangeException" vsli:raw="The index passed was outside the range of 0 to &lt;see cref=&quot;P:System.Data.DataTableReader.FieldCount&quot; /&gt; - 1.">传递的索引超出了 0 到 <see cref="P:System.Data.DataTableReader.FieldCount" /> -1 的范围。</exception>
      <exception cref="T:System.Data.DeletedRowInaccessibleException" vsli:raw="An attempt was made to retrieve data from a deleted row.">尝试从已删除的行中检索数据。</exception>
      <exception cref="T:System.InvalidOperationException" vsli:raw="An attempt was made to read or access a column in a closed &lt;see langword=&quot;DataTableReader&quot; /&gt;.">尝试读取或访问已关闭的 <see langword="DataTableReader" /> 中的列。</exception>
      <exception cref="T:System.InvalidCastException" vsli:raw="The specified column does not contain a &lt;see langword=&quot;Decimal&quot; /&gt; value.">指定的列不包含 <see langword="Decimal" /> 值。</exception>
      <returns vsli:raw="The value of the specified column.">指定列的值。</returns>
    </member>
    <member name="M:System.Data.DataTableReader.GetDouble(System.Int32)">
      <summary vsli:raw="Gets the value of the column as a double-precision floating point number.">获取双精度浮点数形式的列值。</summary>
      <param name="ordinal" vsli:raw="The zero-based ordinal of the column.">从零开始的列序号。</param>
      <exception cref="T:System.ArgumentOutOfRangeException" vsli:raw="The index passed was outside the range of 0 to &lt;see cref=&quot;P:System.Data.DataTableReader.FieldCount&quot; /&gt; - 1.">传递的索引超出了 0 到 <see cref="P:System.Data.DataTableReader.FieldCount" /> -1 的范围。</exception>
      <exception cref="T:System.Data.DeletedRowInaccessibleException" vsli:raw="An attempt was made to retrieve data from a deleted row.">尝试从已删除的行中检索数据。</exception>
      <exception cref="T:System.InvalidOperationException" vsli:raw="An attempt was made to read or access a column in a closed &lt;see langword=&quot;DataTableReader&quot; /&gt;.">尝试读取或访问已关闭的 <see langword="DataTableReader" /> 中的列。</exception>
      <exception cref="T:System.InvalidCastException" vsli:raw="The specified column does not contain a double-precision floating point number.">指定的列不包含双精度浮点数。</exception>
      <returns vsli:raw="The value of the specified column.">指定列的值。</returns>
    </member>
    <member name="M:System.Data.DataTableReader.GetEnumerator">
      <summary vsli:raw="Returns an enumerator that can be used to iterate through the item collection.">返回一个可用于循环访问项集合的枚举数。</summary>
      <exception cref="T:System.InvalidOperationException" vsli:raw="An attempt was made to read or access a column in a closed &lt;see cref=&quot;T:System.Data.DataTableReader&quot; /&gt;.">尝试读取或访问已关闭的 <see cref="T:System.Data.DataTableReader" /> 中的列。</exception>
      <returns vsli:raw="An &lt;see cref=&quot;T:System.Collections.IEnumerator&quot; /&gt; object that represents the item collection.">一个 <see cref="T:System.Collections.IEnumerator" /> 对象，它代表项集合。</returns>
    </member>
    <member name="M:System.Data.DataTableReader.GetFieldType(System.Int32)">
      <summary vsli:raw="Gets the &lt;see cref=&quot;T:System.Type&quot; /&gt; that is the data type of the object.">获取作为对象的数据类型的 <see cref="T:System.Type" />。</summary>
      <param name="ordinal" vsli:raw="The zero-based column ordinal.">从零开始的列序号。</param>
      <exception cref="T:System.ArgumentOutOfRangeException" vsli:raw="The index passed was outside the range of 0 to &lt;see cref=&quot;P:System.Data.DataTableReader.FieldCount&quot; /&gt; - 1.">传递的索引超出了 0 到 <see cref="P:System.Data.DataTableReader.FieldCount" /> -1 的范围。</exception>
      <exception cref="T:System.InvalidOperationException" vsli:raw="An attempt was made to read or access a column in a closed &lt;see cref=&quot;T:System.Data.DataTableReader&quot; /&gt; .">尝试读取或访问已关闭 <see cref="T:System.Data.DataTableReader" /> 中的列。</exception>
      <returns vsli:raw="The &lt;see cref=&quot;T:System.Type&quot; /&gt; that is the data type of the object.">作为对象的数据类型的 <see cref="T:System.Type" />。</returns>
    </member>
    <member name="M:System.Data.DataTableReader.GetFloat(System.Int32)">
      <summary vsli:raw="Gets the value of the specified column as a single-precision floating point number.">以单精度浮点数字的形式获取指定列的值。</summary>
      <param name="ordinal" vsli:raw="The zero-based column ordinal.">从零开始的列序号。</param>
      <exception cref="T:System.ArgumentOutOfRangeException" vsli:raw="The index passed was outside the range of 0 to &lt;see cref=&quot;P:System.Data.DataTableReader.FieldCount&quot; /&gt; - 1.">传递的索引超出了 0 到 <see cref="P:System.Data.DataTableReader.FieldCount" /> -1 的范围。</exception>
      <exception cref="T:System.Data.DeletedRowInaccessibleException" vsli:raw="An attempt was made to retrieve data from a deleted row.">尝试从已删除的行中检索数据。</exception>
      <exception cref="T:System.InvalidOperationException" vsli:raw="An attempt was made to read or access a column in a closed &lt;see cref=&quot;T:System.Data.DataTableReader&quot; /&gt;.">尝试读取或访问已关闭的 <see cref="T:System.Data.DataTableReader" /> 中的列。</exception>
      <exception cref="T:System.InvalidCastException" vsli:raw="The specified column does not contain a single-precision floating point number.">指定的列不包含单精度浮点数。</exception>
      <returns vsli:raw="The value of the column.">列的值。</returns>
    </member>
    <member name="M:System.Data.DataTableReader.GetGuid(System.Int32)">
      <summary vsli:raw="Gets the value of the specified column as a globally-unique identifier (GUID).">以全局唯一标识符 (GUID) 的形式获取指定列的值。</summary>
      <param name="ordinal" vsli:raw="The zero-based column ordinal.">从零开始的列序号。</param>
      <exception cref="T:System.ArgumentOutOfRangeException" vsli:raw="The index passed was outside the range of 0 to &lt;see cref=&quot;P:System.Data.DataTableReader.FieldCount&quot; /&gt; - 1.">传递的索引超出了 0 到 <see cref="P:System.Data.DataTableReader.FieldCount" /> -1 的范围。</exception>
      <exception cref="T:System.Data.DeletedRowInaccessibleException" vsli:raw="An attempt was made to retrieve data from a deleted row.">尝试从已删除的行中检索数据。</exception>
      <exception cref="T:System.InvalidOperationException" vsli:raw="An attempt was made to read or access a column in a closed &lt;see cref=&quot;T:System.Data.DataTableReader&quot; /&gt;.">尝试读取或访问已关闭的 <see cref="T:System.Data.DataTableReader" /> 中的列。</exception>
      <exception cref="T:System.InvalidCastException" vsli:raw="The specified column does not contain a GUID.">指定的列不包含 GUID。</exception>
      <returns vsli:raw="The value of the specified column.">指定列的值。</returns>
    </member>
    <member name="M:System.Data.DataTableReader.GetInt16(System.Int32)">
      <summary vsli:raw="Gets the value of the specified column as a 16-bit signed integer.">获取指定列的 16 位有符号整数形式的值。</summary>
      <param name="ordinal" vsli:raw="The zero-based column ordinal.">从零开始的列序号</param>
      <exception cref="T:System.ArgumentOutOfRangeException" vsli:raw="The index passed was outside the range of 0 to &lt;see cref=&quot;P:System.Data.DataTableReader.FieldCount&quot; /&gt; - 1.">传递的索引超出了 0 到 <see cref="P:System.Data.DataTableReader.FieldCount" /> -1 的范围。</exception>
      <exception cref="T:System.Data.DeletedRowInaccessibleException" vsli:raw="An attempt was made to retrieve data from a deleted row.">尝试从已删除的行中检索数据。</exception>
      <exception cref="T:System.InvalidOperationException" vsli:raw="An attempt was made to read or access a column in a closed &lt;see cref=&quot;T:System.Data.DataTableReader&quot; /&gt;.">尝试读取或访问已关闭的 <see cref="T:System.Data.DataTableReader" /> 中的列。</exception>
      <exception cref="T:System.InvalidCastException" vsli:raw="The specified column does not contain a 16-bit signed integer.">指定的列不包含 16 位带符号整数。</exception>
      <returns vsli:raw="The value of the specified column.">指定列的值。</returns>
    </member>
    <member name="M:System.Data.DataTableReader.GetInt32(System.Int32)">
      <summary vsli:raw="Gets the value of the specified column as a 32-bit signed integer.">获取指定列的 32 位带符号整数形式的值。</summary>
      <param name="ordinal" vsli:raw="The zero-based column ordinal.">从零开始的列序号</param>
      <exception cref="T:System.ArgumentOutOfRangeException" vsli:raw="The index passed was outside the range of 0 to &lt;see cref=&quot;P:System.Data.DataTableReader.FieldCount&quot; /&gt; - 1.">传递的索引超出了 0 到 <see cref="P:System.Data.DataTableReader.FieldCount" /> -1 的范围。</exception>
      <exception cref="T:System.Data.DeletedRowInaccessibleException" vsli:raw="An attempt was made to retrieve data from a deleted row.">尝试从已删除的行中检索数据。</exception>
      <exception cref="T:System.InvalidOperationException" vsli:raw="An attempt was made to read or access a column in a closed &lt;see cref=&quot;T:System.Data.DataTableReader&quot; /&gt; .">尝试读取或访问已关闭 <see cref="T:System.Data.DataTableReader" /> 中的列。</exception>
      <exception cref="T:System.InvalidCastException" vsli:raw="The specified column does not contain a 32-bit signed integer value.">指定的列不包含 32 位带符号整数值。</exception>
      <returns vsli:raw="The value of the specified column.">指定列的值。</returns>
    </member>
    <member name="M:System.Data.DataTableReader.GetInt64(System.Int32)">
      <summary vsli:raw="Gets the value of the specified column as a 64-bit signed integer.">以 64 位有符号整数的形式获取指定列的值。</summary>
      <param name="ordinal" vsli:raw="The zero-based column ordinal.">从零开始的列序号</param>
      <exception cref="T:System.ArgumentOutOfRangeException" vsli:raw="The index passed was outside the range of 0 to &lt;see cref=&quot;P:System.Data.DataTableReader.FieldCount&quot; /&gt; - 1.">传递的索引超出了 0 到 <see cref="P:System.Data.DataTableReader.FieldCount" /> -1 的范围。</exception>
      <exception cref="T:System.Data.DeletedRowInaccessibleException" vsli:raw="An attempt was made to retrieve data from a deleted row.">尝试从已删除的行中检索数据。</exception>
      <exception cref="T:System.InvalidOperationException" vsli:raw="An attempt was made to read or access a column in a closed &lt;see cref=&quot;T:System.Data.DataTableReader&quot; /&gt; .">尝试读取或访问已关闭 <see cref="T:System.Data.DataTableReader" /> 中的列。</exception>
      <exception cref="T:System.InvalidCastException" vsli:raw="The specified column does not contain a 64-bit signed integer value.">指定的列不包含 64 位带符号整数值。</exception>
      <returns vsli:raw="The value of the specified column.">指定列的值。</returns>
    </member>
    <member name="M:System.Data.DataTableReader.GetName(System.Int32)">
      <summary vsli:raw="Gets the value of the specified column as a &lt;see cref=&quot;T:System.String&quot; /&gt;.">获取指定列的 <see cref="T:System.String" /> 形式的值。</summary>
      <param name="ordinal" vsli:raw="The zero-based column ordinal.">从零开始的列序号</param>
      <exception cref="T:System.ArgumentOutOfRangeException" vsli:raw="The index passed was outside the range of 0 to &lt;see cref=&quot;P:System.Data.DataTableReader.FieldCount&quot; /&gt; - 1.">传递的索引超出了 0 到 <see cref="P:System.Data.DataTableReader.FieldCount" /> -1 的范围。</exception>
      <exception cref="T:System.InvalidOperationException" vsli:raw="An attempt was made to read or access a column in a closed &lt;see cref=&quot;T:System.Data.DataTableReader&quot; /&gt;.">尝试读取或访问已关闭的 <see cref="T:System.Data.DataTableReader" /> 中的列。</exception>
      <returns vsli:raw="The name of the specified column.">指定列的名称。</returns>
    </member>
    <member name="M:System.Data.DataTableReader.GetOrdinal(System.String)">
      <summary vsli:raw="Gets the column ordinal, given the name of the column.">在给定列名时获取相应的列序号。</summary>
      <param name="name" vsli:raw="The name of the column.">列的名称。</param>
      <exception cref="T:System.InvalidOperationException" vsli:raw="An attempt was made to read or access a column in a closed &lt;see cref=&quot;T:System.Data.DataTableReader&quot; /&gt;.">尝试读取或访问已关闭的 <see cref="T:System.Data.DataTableReader" /> 中的列。</exception>
      <exception cref="T:System.ArgumentException" vsli:raw="The name specified is not a valid column name.">指定的名称不是有效的列名。</exception>
      <returns vsli:raw="The zero-based column ordinal.">从零开始的列序号。</returns>
    </member>
    <member name="M:System.Data.DataTableReader.GetProviderSpecificFieldType(System.Int32)">
      <summary vsli:raw="Gets the type of the specified column in provider-specific format.">获取指定列特定于提供程序的格式的类型。</summary>
      <param name="ordinal" vsli:raw="The zero-based column ordinal.">从零开始的列序号。</param>
      <exception cref="T:System.ArgumentOutOfRangeException" vsli:raw="The index passed was outside the range of 0 to &lt;see cref=&quot;P:System.Data.DataTableReader.FieldCount&quot; /&gt; - 1.">传递的索引超出了 0 到 <see cref="P:System.Data.DataTableReader.FieldCount" /> -1 的范围。</exception>
      <exception cref="T:System.InvalidOperationException" vsli:raw="An attempt was made to read or access a column in a closed &lt;see cref=&quot;T:System.Data.DataTableReader&quot; /&gt;.">尝试读取或访问已关闭的 <see cref="T:System.Data.DataTableReader" /> 中的列。</exception>
      <returns vsli:raw="The &lt;see cref=&quot;T:System.Type&quot; /&gt; that is the data type of the object.">作为对象的数据类型的 <see cref="T:System.Type" />。</returns>
    </member>
    <member name="M:System.Data.DataTableReader.GetProviderSpecificValue(System.Int32)">
      <summary vsli:raw="Gets the value of the specified column in provider-specific format.">获取指定列特定于提供程序的格式的值。</summary>
      <param name="ordinal" vsli:raw="The zero-based number of the column whose value is retrieved.">值被检索的列的从零开始的编号。</param>
      <exception cref="T:System.ArgumentOutOfRangeException" vsli:raw="The index passed was outside the range of 0 to &lt;see cref=&quot;P:System.Data.DataTableReader.FieldCount&quot; /&gt; - 1.">传递的索引超出了 0 到 <see cref="P:System.Data.DataTableReader.FieldCount" /> -1 的范围。</exception>
      <exception cref="T:System.Data.DeletedRowInaccessibleException" vsli:raw="An attempt was made to retrieve data from a deleted row.">尝试从已删除的行中检索数据。</exception>
      <exception cref="T:System.InvalidOperationException" vsli:raw="An attempt was made to read or access a column in a closed &lt;see cref=&quot;T:System.Data.DataTableReader&quot; /&gt;">尝试读取或访问已关闭 <see cref="T:System.Data.DataTableReader" /> 中的列</exception>
      <returns vsli:raw="The value of the specified column in provider-specific format.">指定列特定于提供程序的格式的值。</returns>
    </member>
    <member name="M:System.Data.DataTableReader.GetProviderSpecificValues(System.Object[])">
      <summary vsli:raw="Fills the supplied array with provider-specific type information for all the columns in the &lt;see cref=&quot;T:System.Data.DataTableReader&quot; /&gt;.">使用 <see cref="T:System.Data.DataTableReader" /> 中所有列的特定于提供程序的类型信息填充提供的数组。</summary>
      <param name="values" vsli:raw="An array of objects to be filled in with type information for the columns in the &lt;see cref=&quot;T:System.Data.DataTableReader&quot; /&gt;.">要使用 <see cref="T:System.Data.DataTableReader" /> 中列的类型信息填充的对象数组。</param>
      <exception cref="T:System.Data.DeletedRowInaccessibleException" vsli:raw="An attempt was made to retrieve data from a deleted row.">尝试从已删除的行中检索数据。</exception>
      <exception cref="T:System.InvalidOperationException" vsli:raw="An attempt was made to read or access a column in a closed &lt;see cref=&quot;T:System.Data.DataTableReader&quot; /&gt;.">尝试读取或访问已关闭的 <see cref="T:System.Data.DataTableReader" /> 中的列。</exception>
      <returns vsli:raw="The number of column values copied into the array.">复制到数组中的列值个数。</returns>
    </member>
    <member name="M:System.Data.DataTableReader.GetSchemaTable">
      <summary vsli:raw="Returns a &lt;see cref=&quot;T:System.Data.DataTable&quot; /&gt; that describes the column metadata of the &lt;see cref=&quot;T:System.Data.DataTableReader&quot; /&gt;.">返回一个 <see cref="T:System.Data.DataTable" />，它描述 <see cref="T:System.Data.DataTableReader" /> 的列元数据。</summary>
      <exception cref="T:System.InvalidOperationException" vsli:raw="The &lt;see cref=&quot;T:System.Data.DataTableReader&quot; /&gt; is closed.">
        <see cref="T:System.Data.DataTableReader" /> 是关闭的。</exception>
      <returns vsli:raw="A &lt;see cref=&quot;T:System.Data.DataTable&quot; /&gt; that describes the column metadata.">一个描述列元数据的 <see cref="T:System.Data.DataTable" />。</returns>
    </member>
    <member name="M:System.Data.DataTableReader.GetString(System.Int32)">
      <summary vsli:raw="Gets the value of the specified column as a string.">获取指定列的字符串形式的值。</summary>
      <param name="ordinal" vsli:raw="The zero-based column ordinal.">从零开始的列序号</param>
      <exception cref="T:System.ArgumentOutOfRangeException" vsli:raw="The index passed was outside the range of 0 to &lt;see cref=&quot;P:System.Data.DataTableReader.FieldCount&quot; /&gt; - 1.">传递的索引超出了 0 到 <see cref="P:System.Data.DataTableReader.FieldCount" /> -1 的范围。</exception>
      <exception cref="T:System.Data.DeletedRowInaccessibleException" vsli:raw="An attempt was made to retrieve data from a deleted row.">尝试从已删除的行中检索数据。</exception>
      <exception cref="T:System.InvalidOperationException" vsli:raw="An attempt was made to read or access a column in a closed &lt;see cref=&quot;T:System.Data.DataTableReader&quot; /&gt;.">尝试读取或访问已关闭的 <see cref="T:System.Data.DataTableReader" /> 中的列。</exception>
      <exception cref="T:System.InvalidCastException" vsli:raw="The specified column does not contain a string.">指定的列不包含字符串。</exception>
      <returns vsli:raw="The value of the specified column.">指定列的值。</returns>
    </member>
    <member name="M:System.Data.DataTableReader.GetValue(System.Int32)">
      <summary vsli:raw="Gets the value of the specified column in its native format.">获取指定列以本机格式表示的值。</summary>
      <param name="ordinal" vsli:raw="The zero-based column ordinal.">从零开始的列序号</param>
      <exception cref="T:System.ArgumentOutOfRangeException" vsli:raw="The index passed was outside the range of 0 to &lt;see cref=&quot;P:System.Data.DataTableReader.FieldCount&quot; /&gt; - 1.">传递的索引超出了 0 到 <see cref="P:System.Data.DataTableReader.FieldCount" /> -1 的范围。</exception>
      <exception cref="T:System.Data.DeletedRowInaccessibleException" vsli:raw="An attempt was made to retrieve data from a deleted row.">尝试从已删除的行中检索数据。</exception>
      <exception cref="T:System.InvalidOperationException" vsli:raw="An attempt was made to read or access columns in a closed &lt;see cref=&quot;T:System.Data.DataTableReader&quot; /&gt; .">尝试读取或访问关闭的 <see cref="T:System.Data.DataTableReader" /> 中的列。</exception>
      <returns vsli:raw="The value of the specified column. This method returns &lt;see langword=&quot;DBNull&quot; /&gt; for null columns.">指定列的值。 此方法为 null 列返回 <see langword="DBNull" />。</returns>
    </member>
    <member name="M:System.Data.DataTableReader.GetValues(System.Object[])">
      <summary vsli:raw="Populates an array of objects with the column values of the current row.">使用当前行的列值来填充对象数组。</summary>
      <param name="values" vsli:raw="An array of &lt;see cref=&quot;T:System.Object&quot; /&gt; into which to copy the column values from the &lt;see cref=&quot;T:System.Data.DataTableReader&quot; /&gt;.">要将 <see cref="T:System.Object" /> 中的列值复制到其中的 <see cref="T:System.Data.DataTableReader" /> 数组。</param>
      <exception cref="T:System.ArgumentOutOfRangeException" vsli:raw="The index passed was outside the range of 0 to &lt;see cref=&quot;P:System.Data.DataTableReader.FieldCount&quot; /&gt; - 1.">传递的索引超出了 0 到 <see cref="P:System.Data.DataTableReader.FieldCount" /> -1 的范围。</exception>
      <exception cref="T:System.Data.DeletedRowInaccessibleException" vsli:raw="An attempt was made to retrieve data from a deleted row.">尝试从已删除的行中检索数据。</exception>
      <exception cref="T:System.InvalidOperationException" vsli:raw="An attempt was made to read or access a column in a closed &lt;see cref=&quot;T:System.Data.DataTableReader&quot; /&gt; .">尝试读取或访问已关闭 <see cref="T:System.Data.DataTableReader" /> 中的列。</exception>
      <returns vsli:raw="The number of column values copied into the array.">复制到数组中的列值个数。</returns>
    </member>
    <member name="M:System.Data.DataTableReader.IsDBNull(System.Int32)">
      <summary vsli:raw="Gets a value that indicates whether the column contains non-existent or missing values.">获取一个值，该值指示列中是否包含不存在的或缺少的值。</summary>
      <param name="ordinal" vsli:raw="The zero-based column ordinal.">从零开始的列序号</param>
      <exception cref="T:System.ArgumentOutOfRangeException" vsli:raw="The index passed was outside the range of 0 to &lt;see cref=&quot;P:System.Data.DataTableReader.FieldCount&quot; /&gt; - 1.">传递的索引超出了 0 到 <see cref="P:System.Data.DataTableReader.FieldCount" /> -1 的范围。</exception>
      <exception cref="T:System.Data.DeletedRowInaccessibleException" vsli:raw="An attempt was made to retrieve data from a deleted row.">尝试从已删除的行中检索数据。</exception>
      <exception cref="T:System.InvalidOperationException" vsli:raw="An attempt was made to read or access a column in a closed &lt;see cref=&quot;T:System.Data.DataTableReader&quot; /&gt; .">尝试读取或访问已关闭 <see cref="T:System.Data.DataTableReader" /> 中的列。</exception>
      <returns vsli:raw="&lt;see langword=&quot;true&quot; /&gt; if the specified column value is equivalent to &lt;see cref=&quot;T:System.DBNull&quot; /&gt;; otherwise, &lt;see langword=&quot;false&quot; /&gt;.">如果指定的列值与 <see cref="T:System.DBNull" /> 等效，则为 <see langword="true" />；否则为 <see langword="false" />。</returns>
    </member>
    <member name="M:System.Data.DataTableReader.NextResult">
      <summary vsli:raw="Advances the &lt;see cref=&quot;T:System.Data.DataTableReader&quot; /&gt; to the next result set, if any.">使 <see cref="T:System.Data.DataTableReader" /> 前进到下一个结果集（如果有）。</summary>
      <exception cref="T:System.InvalidOperationException" vsli:raw="An attempt was made to navigate within a closed &lt;see cref=&quot;T:System.Data.DataTableReader&quot; /&gt;.">尝试在已关闭的 <see cref="T:System.Data.DataTableReader" /> 中进行导航。</exception>
      <returns vsli:raw="&lt;see langword=&quot;true&quot; /&gt; if there was another result set; otherwise &lt;see langword=&quot;false&quot; /&gt;.">如果有另一个结果集，则为 <see langword="true" />；否则为 <see langword="false" />。</returns>
    </member>
    <member name="M:System.Data.DataTableReader.Read">
      <summary vsli:raw="Advances the &lt;see cref=&quot;T:System.Data.DataTableReader&quot; /&gt; to the next record.">让 <see cref="T:System.Data.DataTableReader" /> 前进到下一条记录。</summary>
      <exception cref="T:System.InvalidOperationException" vsli:raw="An attempt was made to read or access a column in a closed &lt;see cref=&quot;T:System.Data.DataTableReader&quot; /&gt; .">尝试读取或访问已关闭 <see cref="T:System.Data.DataTableReader" /> 中的列。</exception>
      <returns vsli:raw="&lt;see langword=&quot;true&quot; /&gt; if there was another row to read; otherwise &lt;see langword=&quot;false&quot; /&gt;.">如果有另一行要读取，则为 <see langword="true" />；否则为 <see langword="false" />。</returns>
    </member>
    <member name="P:System.Data.DataTableReader.Depth">
      <summary vsli:raw="The depth of nesting for the current row of the &lt;see cref=&quot;T:System.Data.DataTableReader&quot; /&gt;.">
        <see cref="T:System.Data.DataTableReader" /> 的当前行的嵌套深度。</summary>
      <returns vsli:raw="The depth of nesting for the current row; always zero.">当前行的嵌套深度；始终为零。</returns>
    </member>
    <member name="P:System.Data.DataTableReader.FieldCount">
      <summary vsli:raw="Returns the number of columns in the current row.">返回当前行中的列数。</summary>
      <exception cref="T:System.InvalidOperationException" vsli:raw="An attempt was made to retrieve the field count in a closed &lt;see cref=&quot;T:System.Data.DataTableReader&quot; /&gt;.">尝试在关闭的 <see cref="T:System.Data.DataTableReader" /> 中检索字段计数。</exception>
      <returns vsli:raw="When not positioned in a valid result set, 0; otherwise the number of columns in the current row.">如果未定位在有效的结果集中，则为 0；否则为当前行中的列数。</returns>
    </member>
    <member name="P:System.Data.DataTableReader.HasRows">
      <summary vsli:raw="Gets a value that indicates whether the &lt;see cref=&quot;T:System.Data.DataTableReader&quot; /&gt; contains one or more rows.">获取一个值，该值指示 <see cref="T:System.Data.DataTableReader" /> 是否包含一行还是多行。</summary>
      <exception cref="T:System.InvalidOperationException" vsli:raw="An attempt was made to retrieve information about a closed &lt;see cref=&quot;T:System.Data.DataTableReader&quot; /&gt;.">尝试检索有关已关闭的 <see cref="T:System.Data.DataTableReader" /> 的信息。</exception>
      <returns vsli:raw="&lt;see langword=&quot;true&quot; /&gt; if the &lt;see cref=&quot;T:System.Data.DataTableReader&quot; /&gt; contains one or more rows; otherwise &lt;see langword=&quot;false&quot; /&gt;.">如果 <see cref="T:System.Data.DataTableReader" /> 包含一行或多行，则为 <see langword="true" />；否则为 <see langword="false" />。</returns>
    </member>
    <member name="P:System.Data.DataTableReader.IsClosed">
      <summary vsli:raw="Gets a value that indicates whether the &lt;see cref=&quot;T:System.Data.DataTableReader&quot; /&gt; is closed.">获取一个值，该值指示 <see cref="T:System.Data.DataTableReader" /> 是否已关闭。</summary>
      <returns vsli:raw="&lt;see langword=&quot;true&quot; /&gt; if the &lt;see cref=&quot;T:System.Data.DataTableReader&quot; /&gt; is closed; otherwise, &lt;see langword=&quot;false&quot; /&gt;.">如果 <see cref="T:System.Data.DataTableReader" /> 已关闭，则为 <see langword="true" />；否则为 <see langword="false" />。</returns>
    </member>
    <member name="P:System.Data.DataTableReader.Item(System.Int32)">
      <summary vsli:raw="Gets the value of the specified column in its native format given the column ordinal.">在给定列序号的情况下，获取指定列的以本机格式表示的值。</summary>
      <param name="ordinal" vsli:raw="The zero-based column ordinal.">从零开始的列序号。</param>
      <exception cref="T:System.IndexOutOfRangeException" vsli:raw="The index passed was outside the range of 0 to &lt;see cref=&quot;P:System.Data.DataTableReader.FieldCount&quot; /&gt; - 1.">传递的索引超出了 0 到 <see cref="P:System.Data.DataTableReader.FieldCount" /> -1 的范围。</exception>
      <returns vsli:raw="The value of the specified column in its native format.">以本机格式表示的指定列的值。</returns>
    </member>
    <member name="P:System.Data.DataTableReader.Item(System.String)">
      <summary vsli:raw="Gets the value of the specified column in its native format given the column name.">在给定列名称的情况下，获取指定列的以本机格式表示的值。</summary>
      <param name="name" vsli:raw="The name of the column.">列的名称。</param>
      <exception cref="T:System.ArgumentException" vsli:raw="The name specified is not a valid column name.">指定的名称不是有效的列名。</exception>
      <exception cref="T:System.Data.DeletedRowInaccessibleException" vsli:raw="An attempt was made to retrieve data from a deleted row.">尝试从已删除的行中检索数据。</exception>
      <exception cref="T:System.InvalidOperationException" vsli:raw="An attempt was made to read or access a column in a closed &lt;see cref=&quot;T:System.Data.DataTableReader&quot; /&gt;.">尝试读取或访问已关闭的 <see cref="T:System.Data.DataTableReader" /> 中的列。</exception>
      <returns vsli:raw="The value of the specified column in its native format.">以本机格式表示的指定列的值。</returns>
    </member>
    <member name="P:System.Data.DataTableReader.RecordsAffected">
      <summary vsli:raw="Gets the number of rows inserted, changed, or deleted by execution of the SQL statement.">通过执行 SQL 语句获取插入、更改或删除的行数。</summary>
      <returns vsli:raw="The &lt;see cref=&quot;T:System.Data.DataTableReader&quot; /&gt; does not support this property and always returns 0.">
        <see cref="T:System.Data.DataTableReader" /> 不支持此属性，并且始终返回 0。</returns>
    </member>
    <member name="T:System.Data.DataView">
      <summary vsli:raw="Represents a databindable, customized view of a &lt;see cref=&quot;T:System.Data.DataTable&quot; /&gt; for sorting, filtering, searching, editing, and navigation. The &lt;see cref=&quot;T:System.Data.DataView&quot; /&gt; does not store data, but instead represents a connected view of its corresponding &lt;see cref=&quot;T:System.Data.DataTable&quot; /&gt;. Changes to the &lt;see cref=&quot;T:System.Data.DataView&quot; /&gt;'s data will affect the &lt;see cref=&quot;T:System.Data.DataTable&quot; /&gt;. Changes to the &lt;see cref=&quot;T:System.Data.DataTable&quot; /&gt;'s data will affect all &lt;see cref=&quot;T:System.Data.DataView&quot; /&gt;s associated with it.">代表 <see cref="T:System.Data.DataTable" /> 的可绑定数据的自定义视图，它用于排序、筛选、搜索、编辑和导航。 <see cref="T:System.Data.DataView" /> 不存储数据，而改为表示对应的 <see cref="T:System.Data.DataTable" /> 的连接视图。 更改 <see cref="T:System.Data.DataView" /> 的数据会影响 <see cref="T:System.Data.DataTable" />。 更改 <see cref="T:System.Data.DataTable" /> 的数据将影响与之关联的所有 <see cref="T:System.Data.DataView" />。</summary>
    </member>
    <member name="E:System.Data.DataView.Initialized">
      <summary vsli:raw="Occurs when initialization of the &lt;see cref=&quot;T:System.Data.DataView&quot; /&gt; is completed.">
        <see cref="T:System.Data.DataView" /> 的初始化完成时发生。</summary>
    </member>
    <member name="E:System.Data.DataView.ListChanged">
      <summary vsli:raw="Occurs when the list managed by the &lt;see cref=&quot;T:System.Data.DataView&quot; /&gt; changes.">更改由 <see cref="T:System.Data.DataView" /> 管理的列表时发生。</summary>
    </member>
    <member name="M:System.Data.DataView.#ctor">
      <summary vsli:raw="Initializes a new instance of the &lt;see cref=&quot;T:System.Data.DataView&quot; /&gt; class.">初始化 <see cref="T:System.Data.DataView" /> 类的新实例。</summary>
    </member>
    <member name="M:System.Data.DataView.#ctor(System.Data.DataTable)">
      <summary vsli:raw="Initializes a new instance of the &lt;see cref=&quot;T:System.Data.DataView&quot; /&gt; class with the specified &lt;see cref=&quot;T:System.Data.DataTable&quot; /&gt;.">使用指定的 <see cref="T:System.Data.DataView" /> 初始化 <see cref="T:System.Data.DataTable" /> 类的新实例。</summary>
      <param name="table" vsli:raw="A &lt;see cref=&quot;T:System.Data.DataTable&quot; /&gt; to add to the &lt;see cref=&quot;T:System.Data.DataView&quot; /&gt;.">要添加到 <see cref="T:System.Data.DataView" /> 中的 <see cref="T:System.Data.DataTable" />。</param>
    </member>
    <member name="M:System.Data.DataView.#ctor(System.Data.DataTable,System.String,System.String,System.Data.DataViewRowState)">
      <summary vsli:raw="Initializes a new instance of the &lt;see cref=&quot;T:System.Data.DataView&quot; /&gt; class with the specified &lt;see cref=&quot;T:System.Data.DataTable&quot; /&gt;, &lt;see cref=&quot;P:System.Data.DataView.RowFilter&quot; /&gt;, &lt;see cref=&quot;P:System.Data.DataView.Sort&quot; /&gt;, and &lt;see cref=&quot;T:System.Data.DataViewRowState&quot; /&gt;.">使用指定的 <see cref="T:System.Data.DataTable" />、<see cref="P:System.Data.DataView.RowFilter" />、<see cref="P:System.Data.DataView.Sort" /> 和 <see cref="T:System.Data.DataViewRowState" /> 初始化 <see cref="T:System.Data.DataView" /> 类的新实例。</summary>
      <param name="table" vsli:raw="A &lt;see cref=&quot;T:System.Data.DataTable&quot; /&gt; to add to the &lt;see cref=&quot;T:System.Data.DataView&quot; /&gt;.">要添加到 <see cref="T:System.Data.DataView" /> 中的 <see cref="T:System.Data.DataTable" />。</param>
      <param name="RowFilter" vsli:raw="A &lt;see cref=&quot;P:System.Data.DataView.RowFilter&quot; /&gt; to apply to the &lt;see cref=&quot;T:System.Data.DataView&quot; /&gt;.">要应用于 <see cref="T:System.Data.DataView" /> 的 <see cref="P:System.Data.DataView.RowFilter" />。</param>
      <param name="Sort" vsli:raw="A &lt;see cref=&quot;P:System.Data.DataView.Sort&quot; /&gt; to apply to the &lt;see cref=&quot;T:System.Data.DataView&quot; /&gt;.">要应用于 <see cref="T:System.Data.DataView" /> 的 <see cref="P:System.Data.DataView.Sort" />。</param>
      <param name="RowState" vsli:raw="A &lt;see cref=&quot;T:System.Data.DataViewRowState&quot; /&gt; to apply to the &lt;see cref=&quot;T:System.Data.DataView&quot; /&gt;.">要应用于 <see cref="T:System.Data.DataView" /> 的 <see cref="T:System.Data.DataViewRowState" />。</param>
    </member>
    <member name="M:System.Data.DataView.AddNew">
      <summary vsli:raw="Adds a new row to the &lt;see cref=&quot;T:System.Data.DataView&quot; /&gt;.">在 <see cref="T:System.Data.DataView" /> 中添加新行。</summary>
      <returns vsli:raw="A new &lt;see cref=&quot;T:System.Data.DataRowView&quot; /&gt; object.">一个新 <see cref="T:System.Data.DataRowView" /> 对象。</returns>
    </member>
    <member name="M:System.Data.DataView.BeginInit">
      <summary vsli:raw="Starts the initialization of a &lt;see cref=&quot;T:System.Data.DataView&quot; /&gt; that is used on a form or used by another component. The initialization occurs at runtime.">开始初始化在窗体上使用或由另一个组件使用的 <see cref="T:System.Data.DataView" />。 此初始化在运行时发生。</summary>
    </member>
    <member name="M:System.Data.DataView.Close">
      <summary vsli:raw="Closes the &lt;see cref=&quot;T:System.Data.DataView&quot; /&gt;.">关闭 <see cref="T:System.Data.DataView" />。</summary>
    </member>
    <member name="M:System.Data.DataView.ColumnCollectionChanged(System.Object,System.ComponentModel.CollectionChangeEventArgs)">
      <summary vsli:raw="Occurs after a &lt;see cref=&quot;T:System.Data.DataColumnCollection&quot; /&gt; has been changed successfully.">在成功更改 <see cref="T:System.Data.DataColumnCollection" /> 后发生。</summary>
      <param name="sender" vsli:raw="The source of the event.">事件源。</param>
      <param name="e" vsli:raw="A &lt;see cref=&quot;T:System.ComponentModel.ListChangedEventArgs&quot; /&gt; that contains the event data.">包含事件数据的 <see cref="T:System.ComponentModel.ListChangedEventArgs" />。</param>
    </member>
    <member name="M:System.Data.DataView.CopyTo(System.Array,System.Int32)">
      <summary vsli:raw="Copies items into an array. Only for Web Forms Interfaces.">将项复制到数组中。 仅适用于 Web 窗体界面。</summary>
      <param name="array" vsli:raw="array to copy into.">要复制到的数组。</param>
      <param name="index" vsli:raw="index to start at.">从其开始的索引。</param>
    </member>
    <member name="M:System.Data.DataView.Delete(System.Int32)">
      <summary vsli:raw="Deletes a row at the specified index.">删除指定索引处的行。</summary>
      <param name="index" vsli:raw="The index of the row to delete.">要删除行的索引。</param>
    </member>
    <member name="M:System.Data.DataView.Dispose(System.Boolean)">
      <summary vsli:raw="Disposes of the resources (other than memory) used by the &lt;see cref=&quot;T:System.Data.DataView&quot; /&gt; object.">释放由 <see cref="T:System.Data.DataView" /> 对象使用的资源（内存除外）。</summary>
      <param name="disposing" vsli:raw="&lt;see langword=&quot;true&quot; /&gt; to release both managed and unmanaged resources; &lt;see langword=&quot;false&quot; /&gt; to release only unmanaged resources.">若要释放托管资源和非托管资源，则为 <see langword="true" />；若仅释放非托管资源，则为 <see langword="false" />。</param>
    </member>
    <member name="M:System.Data.DataView.EndInit">
      <summary vsli:raw="Ends the initialization of a &lt;see cref=&quot;T:System.Data.DataView&quot; /&gt; that is used on a form or used by another component. The initialization occurs at runtime.">结束在窗体上使用或由另一个组件使用的 <see cref="T:System.Data.DataView" /> 的初始化。 此初始化在运行时发生。</summary>
    </member>
    <member name="M:System.Data.DataView.Equals(System.Data.DataView)">
      <summary vsli:raw="Determines whether the specified &lt;see cref=&quot;T:System.Data.DataView&quot; /&gt; instances are considered equal.">确定指定的 <see cref="T:System.Data.DataView" /> 实例是否可视为相等的实例。</summary>
      <param name="view" vsli:raw="The &lt;see cref=&quot;T:System.Data.DataView&quot; /&gt; to be compared.">要比较的 <see cref="T:System.Data.DataView" />。</param>
      <returns vsli:raw="&lt;see langword=&quot;true&quot; /&gt; if the two &lt;see cref=&quot;T:System.Data.DataView&quot; /&gt; instances are equal; otherwise, &lt;see langword=&quot;false&quot; /&gt;.">如果这两个 <see cref="T:System.Data.DataView" /> 实例相等，则为 <see langword="true" />；否则为 <see langword="false" />。</returns>
    </member>
    <member name="M:System.Data.DataView.Find(System.Object)">
      <summary vsli:raw="Finds a row in the &lt;see cref=&quot;T:System.Data.DataView&quot; /&gt; by the specified sort key value.">根据指定的排序键值在 <see cref="T:System.Data.DataView" /> 中查找行。</summary>
      <param name="key" vsli:raw="The object to search for.">要搜索的对象。</param>
      <returns vsli:raw="The index of the row in the &lt;see cref=&quot;T:System.Data.DataView&quot; /&gt; that contains the sort key value specified; otherwise -1 if the sort key value does not exist.">包含指定排序关键字值的 <see cref="T:System.Data.DataView" /> 中的行的索引；否则为 -1（如果不存在排序关键字值）。</returns>
    </member>
    <member name="M:System.Data.DataView.Find(System.Object[])">
      <summary vsli:raw="Finds a row in the &lt;see cref=&quot;T:System.Data.DataView&quot; /&gt; by the specified sort key values.">根据指定的排序键值在 <see cref="T:System.Data.DataView" /> 中查找行。</summary>
      <param name="key" vsli:raw="An array of values, typed as &lt;see cref=&quot;T:System.Object&quot; /&gt;.">类型为 <see cref="T:System.Object" /> 的值的数组。</param>
      <returns vsli:raw="The index of the position of the first row in the &lt;see cref=&quot;T:System.Data.DataView&quot; /&gt; that matches the sort key values specified; otherwise -1 if there are no matching sort key values.">
        <see cref="T:System.Data.DataView" /> 中与指定的排序键值匹配的第一个行的位置索引；如果没有匹配的排序键值，则为 -1。</returns>
    </member>
    <member name="M:System.Data.DataView.FindRows(System.Object)">
      <summary vsli:raw="Returns an array of &lt;see cref=&quot;T:System.Data.DataRowView&quot; /&gt; objects whose columns match the specified sort key value.">返回其列与指定的排序键值匹配的 <see cref="T:System.Data.DataRowView" /> 对象数组。</summary>
      <param name="key" vsli:raw="The column value, typed as &lt;see cref=&quot;T:System.Object&quot; /&gt;, to search for.">要搜索的列值，为 <see cref="T:System.Object" /> 类型。</param>
      <returns vsli:raw="An array of &lt;see langword=&quot;DataRowView&quot; /&gt; objects whose columns match the specified sort key value; or, if no rows contain the specified sort key values, an empty &lt;see langword=&quot;DataRowView&quot; /&gt; array.">
        <see langword="DataRowView" /> 对象数组，其列与指定的排序键值匹配；或者，如果任何行都不包含指定的排序键值，则为空的 <see langword="DataRowView" /> 数组。</returns>
    </member>
    <member name="M:System.Data.DataView.FindRows(System.Object[])">
      <summary vsli:raw="Returns an array of &lt;see cref=&quot;T:System.Data.DataRowView&quot; /&gt; objects whose columns match the specified sort key value.">返回其列与指定的排序键值匹配的 <see cref="T:System.Data.DataRowView" /> 对象数组。</summary>
      <param name="key" vsli:raw="An array of column values, typed as &lt;see cref=&quot;T:System.Object&quot; /&gt;, to search for.">要搜索的列值数组，其类型为 <see cref="T:System.Object" />。</param>
      <returns vsli:raw="An array of &lt;see langword=&quot;DataRowView&quot; /&gt; objects whose columns match the specified sort key value; or, if no rows contain the specified sort key values, an empty &lt;see langword=&quot;DataRowView&quot; /&gt; array.">
        <see langword="DataRowView" /> 对象数组，其列与指定的排序键值匹配；或者，如果任何行都不包含指定的排序键值，则为空的 <see langword="DataRowView" /> 数组。</returns>
    </member>
    <member name="M:System.Data.DataView.GetEnumerator">
      <summary vsli:raw="Gets an enumerator for this &lt;see cref=&quot;T:System.Data.DataView&quot; /&gt;.">获取此 <see cref="T:System.Data.DataView" /> 的枚举器。</summary>
      <returns vsli:raw="An &lt;see cref=&quot;T:System.Collections.IEnumerator&quot; /&gt; for navigating through the list.">用于浏览列表的 <see cref="T:System.Collections.IEnumerator" />。</returns>
    </member>
    <member name="M:System.Data.DataView.IndexListChanged(System.Object,System.ComponentModel.ListChangedEventArgs)">
      <summary vsli:raw="Occurs after a &lt;see cref=&quot;T:System.Data.DataView&quot; /&gt; has been changed successfully.">在成功更改 <see cref="T:System.Data.DataView" /> 后发生。</summary>
      <param name="sender" vsli:raw="The source of the event.">事件源。</param>
      <param name="e" vsli:raw="A &lt;see cref=&quot;T:System.ComponentModel.ListChangedEventArgs&quot; /&gt; that contains the event data.">包含事件数据的 <see cref="T:System.ComponentModel.ListChangedEventArgs" />。</param>
    </member>
    <member name="M:System.Data.DataView.OnListChanged(System.ComponentModel.ListChangedEventArgs)">
      <summary vsli:raw="Raises the &lt;see cref=&quot;E:System.Data.DataView.ListChanged&quot; /&gt; event.">引发 <see cref="E:System.Data.DataView.ListChanged" /> 事件。</summary>
      <param name="e" vsli:raw="A &lt;see cref=&quot;T:System.ComponentModel.ListChangedEventArgs&quot; /&gt; that contains the event data.">包含事件数据的 <see cref="T:System.ComponentModel.ListChangedEventArgs" />。</param>
    </member>
    <member name="M:System.Data.DataView.Open">
      <summary vsli:raw="Opens a &lt;see cref=&quot;T:System.Data.DataView&quot; /&gt;.">打开 <see cref="T:System.Data.DataView" />。</summary>
    </member>
    <member name="M:System.Data.DataView.Reset">
      <summary vsli:raw="Reserved for internal use only.">保留以仅供内部使用。</summary>
    </member>
    <member name="M:System.Data.DataView.System#Collections#IList#Add(System.Object)">
      <summary vsli:raw="For a description of this member, see &lt;see cref=&quot;M:System.Collections.IList.Add(System.Object)&quot; /&gt;.">有关此成员的说明，请参见 <see cref="M:System.Collections.IList.Add(System.Object)" />。</summary>
      <param name="value" vsli:raw="An &lt;see cref=&quot;T:System.Object&quot; /&gt; value.">一个 <see cref="T:System.Object" /> 值。</param>
      <returns vsli:raw="For a description of this member, see &lt;see cref=&quot;M:System.Collections.IList.Add(System.Object)&quot; /&gt;.">有关此成员的说明，请参见 <see cref="M:System.Collections.IList.Add(System.Object)" />。</returns>
    </member>
    <member name="M:System.Data.DataView.System#Collections#IList#Clear">
      <summary vsli:raw="For a description of this member, see &lt;see cref=&quot;M:System.Collections.IList.Clear&quot; /&gt;.">有关此成员的说明，请参见 <see cref="M:System.Collections.IList.Clear" />。</summary>
    </member>
    <member name="M:System.Data.DataView.System#Collections#IList#Contains(System.Object)">
      <summary vsli:raw="For a description of this member, see &lt;see cref=&quot;M:System.Collections.IList.Contains(System.Object)&quot; /&gt;.">有关此成员的说明，请参见 <see cref="M:System.Collections.IList.Contains(System.Object)" />。</summary>
      <param name="value" vsli:raw="An &lt;see cref=&quot;T:System.Object&quot; /&gt; value.">一个 <see cref="T:System.Object" /> 值。</param>
      <returns vsli:raw="For a description of this member, see &lt;see cref=&quot;M:System.Collections.IList.Contains(System.Object)&quot; /&gt;.">有关此成员的说明，请参见 <see cref="M:System.Collections.IList.Contains(System.Object)" />。</returns>
    </member>
    <member name="M:System.Data.DataView.System#Collections#IList#IndexOf(System.Object)">
      <summary vsli:raw="For a description of this member, see &lt;see cref=&quot;M:System.Collections.IList.IndexOf(System.Object)&quot; /&gt;.">有关此成员的说明，请参见 <see cref="M:System.Collections.IList.IndexOf(System.Object)" />。</summary>
      <param name="value" vsli:raw="An &lt;see cref=&quot;T:System.Object&quot; /&gt; value.">一个 <see cref="T:System.Object" /> 值。</param>
      <returns vsli:raw="For a description of this member, see &lt;see cref=&quot;M:System.Collections.IList.IndexOf(System.Object)&quot; /&gt;.">有关此成员的说明，请参见 <see cref="M:System.Collections.IList.IndexOf(System.Object)" />。</returns>
    </member>
    <member name="M:System.Data.DataView.System#Collections#IList#Insert(System.Int32,System.Object)">
      <summary vsli:raw="For a description of this member, see &lt;see cref=&quot;M:System.Collections.IList.Insert(System.Int32,System.Object)&quot; /&gt;.">有关此成员的说明，请参见 <see cref="M:System.Collections.IList.Insert(System.Int32,System.Object)" />。</summary>
      <param name="index" vsli:raw="An &lt;see cref=&quot;T:System.Int32&quot; /&gt; value.">一个 <see cref="T:System.Int32" /> 值。</param>
      <param name="value" vsli:raw="An &lt;see cref=&quot;T:System.Object&quot; /&gt; value to be inserted.">要插入的 <see cref="T:System.Object" /> 值。</param>
    </member>
    <member name="M:System.Data.DataView.System#Collections#IList#Remove(System.Object)">
      <summary vsli:raw="For a description of this member, see &lt;see cref=&quot;M:System.Collections.IList.Remove(System.Object)&quot; /&gt;.">有关此成员的说明，请参见 <see cref="M:System.Collections.IList.Remove(System.Object)" />。</summary>
      <param name="value" vsli:raw="An &lt;see cref=&quot;T:System.Object&quot; /&gt; value.">一个 <see cref="T:System.Object" /> 值。</param>
    </member>
    <member name="M:System.Data.DataView.System#Collections#IList#RemoveAt(System.Int32)">
      <summary vsli:raw="For a description of this member, see &lt;see cref=&quot;M:System.Collections.IList.RemoveAt(System.Int32)&quot; /&gt;.">有关此成员的说明，请参见 <see cref="M:System.Collections.IList.RemoveAt(System.Int32)" />。</summary>
      <param name="index" vsli:raw="An &lt;see cref=&quot;T:System.Int32&quot; /&gt; value.">一个 <see cref="T:System.Int32" /> 值。</param>
    </member>
    <member name="M:System.Data.DataView.System#ComponentModel#IBindingList#AddIndex(System.ComponentModel.PropertyDescriptor)">
      <summary vsli:raw="For a description of this member, see &lt;see cref=&quot;M:System.ComponentModel.IBindingList.AddIndex(System.ComponentModel.PropertyDescriptor)&quot; /&gt;.">有关此成员的说明，请参见 <see cref="M:System.ComponentModel.IBindingList.AddIndex(System.ComponentModel.PropertyDescriptor)" />。</summary>
      <param name="property" vsli:raw="A &lt;see cref=&quot;T:System.ComponentModel.PropertyDescriptor&quot; /&gt; object.">
        <see cref="T:System.ComponentModel.PropertyDescriptor" /> 对象。</param>
    </member>
    <member name="M:System.Data.DataView.System#ComponentModel#IBindingList#AddNew">
      <summary vsli:raw="For a description of this member, see &lt;see cref=&quot;M:System.ComponentModel.IBindingList.AddNew&quot; /&gt;.">有关此成员的说明，请参见 <see cref="M:System.ComponentModel.IBindingList.AddNew" />。</summary>
      <returns vsli:raw="The item added to the list.">添加到列表的项。</returns>
    </member>
    <member name="M:System.Data.DataView.System#ComponentModel#IBindingList#ApplySort(System.ComponentModel.PropertyDescriptor,System.ComponentModel.ListSortDirection)">
      <summary vsli:raw="For a description of this member, see &lt;see cref=&quot;M:System.ComponentModel.IBindingList.ApplySort(System.ComponentModel.PropertyDescriptor,System.ComponentModel.ListSortDirection)&quot; /&gt;.">有关此成员的说明，请参见 <see cref="M:System.ComponentModel.IBindingList.ApplySort(System.ComponentModel.PropertyDescriptor,System.ComponentModel.ListSortDirection)" />。</summary>
      <param name="property" vsli:raw="A &lt;see cref=&quot;T:System.ComponentModel.PropertyDescriptor&quot; /&gt; object.">
        <see cref="T:System.ComponentModel.PropertyDescriptor" /> 对象。</param>
      <param name="direction" vsli:raw="A &lt;see cref=&quot;T:System.ComponentModel.ListSortDirection&quot; /&gt; object.">
        <see cref="T:System.ComponentModel.ListSortDirection" /> 对象。</param>
    </member>
    <member name="M:System.Data.DataView.System#ComponentModel#IBindingList#Find(System.ComponentModel.PropertyDescriptor,System.Object)">
      <summary vsli:raw="For a description of this member, see &lt;see cref=&quot;M:System.ComponentModel.IBindingList.Find(System.ComponentModel.PropertyDescriptor,System.Object)&quot; /&gt;.">有关此成员的说明，请参见 <see cref="M:System.ComponentModel.IBindingList.Find(System.ComponentModel.PropertyDescriptor,System.Object)" />。</summary>
      <param name="property" vsli:raw="A &lt;see cref=&quot;T:System.ComponentModel.PropertyDescriptor&quot; /&gt; object.">
        <see cref="T:System.ComponentModel.PropertyDescriptor" /> 对象。</param>
      <param name="key" vsli:raw="An &lt;see cref=&quot;T:System.Object&quot; /&gt; value.">一个 <see cref="T:System.Object" /> 值。</param>
      <returns vsli:raw="For a description of this member, see &lt;see cref=&quot;M:System.ComponentModel.IBindingList.Find(System.ComponentModel.PropertyDescriptor,System.Object)&quot; /&gt;.">有关此成员的说明，请参见 <see cref="M:System.ComponentModel.IBindingList.Find(System.ComponentModel.PropertyDescriptor,System.Object)" />。</returns>
    </member>
    <member name="M:System.Data.DataView.System#ComponentModel#IBindingList#RemoveIndex(System.ComponentModel.PropertyDescriptor)">
      <summary vsli:raw="For a description of this member, see &lt;see cref=&quot;M:System.ComponentModel.IBindingList.RemoveIndex(System.ComponentModel.PropertyDescriptor)&quot; /&gt;.">有关此成员的说明，请参见 <see cref="M:System.ComponentModel.IBindingList.RemoveIndex(System.ComponentModel.PropertyDescriptor)" />。</summary>
      <param name="property" vsli:raw="A &lt;see cref=&quot;T:System.ComponentModel.PropertyDescriptor&quot; /&gt; object.">
        <see cref="T:System.ComponentModel.PropertyDescriptor" /> 对象。</param>
    </member>
    <member name="M:System.Data.DataView.System#ComponentModel#IBindingList#RemoveSort">
      <summary vsli:raw="For a description of this member, see &lt;see cref=&quot;M:System.ComponentModel.IBindingList.RemoveSort&quot; /&gt;.">有关此成员的说明，请参见 <see cref="M:System.ComponentModel.IBindingList.RemoveSort" />。</summary>
    </member>
    <member name="M:System.Data.DataView.System#ComponentModel#IBindingListView#ApplySort(System.ComponentModel.ListSortDescriptionCollection)">
      <summary vsli:raw="For a description of this member, see &lt;see cref=&quot;M:System.ComponentModel.IBindingListView.ApplySort(System.ComponentModel.ListSortDescriptionCollection)&quot; /&gt;.">有关此成员的说明，请参见 <see cref="M:System.ComponentModel.IBindingListView.ApplySort(System.ComponentModel.ListSortDescriptionCollection)" />。</summary>
      <param name="sorts" vsli:raw="A &lt;see cref=&quot;T:System.ComponentModel.ListSortDescriptionCollection&quot; /&gt; object.">
        <see cref="T:System.ComponentModel.ListSortDescriptionCollection" /> 对象。</param>
    </member>
    <member name="M:System.Data.DataView.System#ComponentModel#IBindingListView#RemoveFilter">
      <summary vsli:raw="For a description of this member, see &lt;see cref=&quot;M:System.ComponentModel.IBindingListView.RemoveFilter&quot; /&gt;.">有关此成员的说明，请参见 <see cref="M:System.ComponentModel.IBindingListView.RemoveFilter" />。</summary>
    </member>
    <member name="M:System.Data.DataView.System#ComponentModel#ITypedList#GetItemProperties(System.ComponentModel.PropertyDescriptor[])">
      <summary vsli:raw="For a description of this member, see &lt;see cref=&quot;M:System.ComponentModel.ITypedList.GetItemProperties(System.ComponentModel.PropertyDescriptor[])&quot; /&gt;.">有关此成员的说明，请参见 <see cref="M:System.ComponentModel.ITypedList.GetItemProperties(System.ComponentModel.PropertyDescriptor[])" />。</summary>
      <param name="listAccessors" vsli:raw="An array of &lt;see cref=&quot;T:System.ComponentModel.PropertyDescriptor&quot; /&gt; objects to find in the collection as bindable. This can be &lt;see langword=&quot;null&quot; /&gt;.">要在组合中查找的可绑定的 <see cref="T:System.ComponentModel.PropertyDescriptor" /> 对象的数组。 它可以是 <see langword="null" />。</param>
      <returns vsli:raw="The &lt;see cref=&quot;T:System.ComponentModel.PropertyDescriptorCollection&quot; /&gt; that represents the properties on each item used to bind data.">
        <see cref="T:System.ComponentModel.PropertyDescriptorCollection" />，其表示每一项上用于绑定数据的属性。</returns>
    </member>
    <member name="M:System.Data.DataView.System#ComponentModel#ITypedList#GetListName(System.ComponentModel.PropertyDescriptor[])">
      <summary vsli:raw="For a description of this member, see &lt;see cref=&quot;M:System.ComponentModel.ITypedList.GetListName(System.ComponentModel.PropertyDescriptor[])&quot; /&gt;.">有关此成员的说明，请参见 <see cref="M:System.ComponentModel.ITypedList.GetListName(System.ComponentModel.PropertyDescriptor[])" />。</summary>
      <param name="listAccessors" vsli:raw="An array of &lt;see cref=&quot;T:System.ComponentModel.PropertyDescriptor&quot; /&gt; objects.">一个 <see cref="T:System.ComponentModel.PropertyDescriptor" /> 对象数组。</param>
      <returns vsli:raw="For a description of this member, see &lt;see cref=&quot;M:System.ComponentModel.ITypedList.GetListName(System.ComponentModel.PropertyDescriptor[])&quot; /&gt;.">有关此成员的说明，请参见 <see cref="M:System.ComponentModel.ITypedList.GetListName(System.ComponentModel.PropertyDescriptor[])" />。</returns>
    </member>
    <member name="M:System.Data.DataView.ToTable">
      <summary vsli:raw="Creates and returns a new &lt;see cref=&quot;T:System.Data.DataTable&quot; /&gt; based on rows in an existing &lt;see cref=&quot;T:System.Data.DataView&quot; /&gt;.">基于现有的 <see cref="T:System.Data.DataView" /> 中的行，创建并返回一个新的 <see cref="T:System.Data.DataTable" />。</summary>
      <returns vsli:raw="A new &lt;see cref=&quot;T:System.Data.DataTable&quot; /&gt; instance that contains the requested rows and columns.">一个新 <see cref="T:System.Data.DataTable" /> 实例，其中包含请求的行和列。</returns>
    </member>
    <member name="M:System.Data.DataView.ToTable(System.Boolean,System.String[])">
      <summary vsli:raw="Creates and returns a new &lt;see cref=&quot;T:System.Data.DataTable&quot; /&gt; based on rows in an existing &lt;see cref=&quot;T:System.Data.DataView&quot; /&gt;.">基于现有的 <see cref="T:System.Data.DataView" /> 中的行，创建并返回一个新的 <see cref="T:System.Data.DataTable" />。</summary>
      <param name="distinct" vsli:raw="If &lt;see langword=&quot;true&quot; /&gt;, the returned &lt;see cref=&quot;T:System.Data.DataTable&quot; /&gt; contains rows that have distinct values for all its columns. The default value is &lt;see langword=&quot;false&quot; /&gt;.">如果为 <see langword="true" />，则返回的 <see cref="T:System.Data.DataTable" /> 包含具有与其所有列不同的值的行。 默认值是 <see langword="false" />。</param>
      <param name="columnNames" vsli:raw="A string array that contains a list of the column names to be included in the returned &lt;see cref=&quot;T:System.Data.DataTable&quot; /&gt;. The &lt;see cref=&quot;T:System.Data.DataTable&quot; /&gt; contains the specified columns in the order they appear within this array.">一个字符串数组，其中的一个列名称列表将包括在返回的 <see cref="T:System.Data.DataTable" /> 中。 <see cref="T:System.Data.DataTable" /> 包含指定的列，这些列按其在该数组中显示的顺序排列。</param>
      <returns vsli:raw="A new &lt;see cref=&quot;T:System.Data.DataTable&quot; /&gt; instance that contains the requested rows and columns.">一个新 <see cref="T:System.Data.DataTable" /> 实例，其中包含请求的行和列。</returns>
    </member>
    <member name="M:System.Data.DataView.ToTable(System.String)">
      <summary vsli:raw="Creates and returns a new &lt;see cref=&quot;T:System.Data.DataTable&quot; /&gt; based on rows in an existing &lt;see cref=&quot;T:System.Data.DataView&quot; /&gt;.">基于现有的 <see cref="T:System.Data.DataView" /> 中的行，创建并返回一个新的 <see cref="T:System.Data.DataTable" />。</summary>
      <param name="tableName" vsli:raw="The name of the returned &lt;see cref=&quot;T:System.Data.DataTable&quot; /&gt;.">返回的 <see cref="T:System.Data.DataTable" /> 的名称。</param>
      <returns vsli:raw="A new &lt;see cref=&quot;T:System.Data.DataTable&quot; /&gt; instance that contains the requested rows and columns.">一个新 <see cref="T:System.Data.DataTable" /> 实例，其中包含请求的行和列。</returns>
    </member>
    <member name="M:System.Data.DataView.ToTable(System.String,System.Boolean,System.String[])">
      <summary vsli:raw="Creates and returns a new &lt;see cref=&quot;T:System.Data.DataTable&quot; /&gt; based on rows in an existing &lt;see cref=&quot;T:System.Data.DataView&quot; /&gt;.">基于现有的 <see cref="T:System.Data.DataView" /> 中的行，创建并返回一个新的 <see cref="T:System.Data.DataTable" />。</summary>
      <param name="tableName" vsli:raw="The name of the returned &lt;see cref=&quot;T:System.Data.DataTable&quot; /&gt;.">返回的 <see cref="T:System.Data.DataTable" /> 的名称。</param>
      <param name="distinct" vsli:raw="If &lt;see langword=&quot;true&quot; /&gt;, the returned &lt;see cref=&quot;T:System.Data.DataTable&quot; /&gt; contains rows that have distinct values for all its columns. The default value is &lt;see langword=&quot;false&quot; /&gt;.">如果为 <see langword="true" />，则返回的 <see cref="T:System.Data.DataTable" /> 包含具有与其所有列不同的值的行。 默认值是 <see langword="false" />。</param>
      <param name="columnNames" vsli:raw="A string array that contains a list of the column names to be included in the returned &lt;see cref=&quot;T:System.Data.DataTable&quot; /&gt;. The &lt;see langword=&quot;DataTable&quot; /&gt; contains the specified columns in the order they appear within this array.">一个字符串数组，其中的一个列名称列表将包括在返回的 <see cref="T:System.Data.DataTable" /> 中。 <see langword="DataTable" /> 包含指定的列，这些列按其在该数组中显示的顺序排列。</param>
      <returns vsli:raw="A new &lt;see cref=&quot;T:System.Data.DataTable&quot; /&gt; instance that contains the requested rows and columns.">一个新 <see cref="T:System.Data.DataTable" /> 实例，其中包含请求的行和列。</returns>
    </member>
    <member name="M:System.Data.DataView.UpdateIndex">
      <summary vsli:raw="Reserved for internal use only.">保留以仅供内部使用。</summary>
    </member>
    <member name="M:System.Data.DataView.UpdateIndex(System.Boolean)">
      <summary vsli:raw="Reserved for internal use only.">保留以仅供内部使用。</summary>
      <param name="force" vsli:raw="Reserved for internal use only.">保留以仅供内部使用。</param>
    </member>
    <member name="P:System.Data.DataView.AllowDelete">
      <summary vsli:raw="Gets or sets a value that indicates whether deletes are allowed.">获取或设置一个值，该值指示是否允许删除。</summary>
      <returns vsli:raw="&lt;see langword=&quot;true&quot; /&gt;, if deletes are allowed; otherwise, &lt;see langword=&quot;false&quot; /&gt;.">如果允许删除，则为 <see langword="true" />；否则为 <see langword="false" />。</returns>
    </member>
    <member name="P:System.Data.DataView.AllowEdit">
      <summary vsli:raw="Gets or sets a value that indicates whether edits are allowed.">获取或设置一个值，该值指示是否允许编辑。</summary>
      <returns vsli:raw="&lt;see langword=&quot;true&quot; /&gt;, if edits are allowed; otherwise, &lt;see langword=&quot;false&quot; /&gt;.">如果允许编辑，则为 <see langword="true" />；否则为 <see langword="false" />。</returns>
    </member>
    <member name="P:System.Data.DataView.AllowNew">
      <summary vsli:raw="Gets or sets a value that indicates whether the new rows can be added by using the &lt;see cref=&quot;M:System.Data.DataView.AddNew&quot; /&gt; method.">获取或设置一个值，该值指示是否可以通过使用 <see cref="M:System.Data.DataView.AddNew" /> 方法添加新行。</summary>
      <returns vsli:raw="&lt;see langword=&quot;true&quot; /&gt;, if new rows can be added; otherwise, &lt;see langword=&quot;false&quot; /&gt;.">如果可以添加新行，则为 <see langword="true" />；否则为 <see langword="false" />。</returns>
    </member>
    <member name="P:System.Data.DataView.ApplyDefaultSort">
      <summary vsli:raw="Gets or sets a value that indicates whether to use the default sort. The default sort is (ascending) by all primary keys as specified by &lt;see cref=&quot;P:System.Data.DataTable.PrimaryKey&quot; /&gt;.">获取或设置一个值，该值指示是否使用默认排序。 默认排序是通过 <see cref="P:System.Data.DataTable.PrimaryKey" /> 指定的所有主键进行排序（升序）。</summary>
      <returns vsli:raw="&lt;see langword=&quot;true&quot; /&gt;, if the default sort is used; otherwise, &lt;see langword=&quot;false&quot; /&gt;.">如果使用默认排序，则为 <see langword="true" />；否则为 <see langword="false" />。</returns>
    </member>
    <member name="P:System.Data.DataView.Count">
      <summary vsli:raw="Gets the number of records in the &lt;see cref=&quot;T:System.Data.DataView&quot; /&gt; after &lt;see cref=&quot;P:System.Data.DataView.RowFilter&quot; /&gt; and &lt;see cref=&quot;P:System.Data.DataView.RowStateFilter&quot; /&gt; have been applied.">在应用 <see cref="P:System.Data.DataView.RowFilter" /> 和 <see cref="P:System.Data.DataView.RowStateFilter" /> 之后，获取 <see cref="T:System.Data.DataView" /> 中的记录数。</summary>
      <returns vsli:raw="The number of records in the &lt;see cref=&quot;T:System.Data.DataView&quot; /&gt;.">
        <see cref="T:System.Data.DataView" /> 中的记录数。</returns>
    </member>
    <member name="P:System.Data.DataView.DataViewManager">
      <summary vsli:raw="Gets the &lt;see cref=&quot;T:System.Data.DataViewManager&quot; /&gt; associated with this view.">获取与此视图关联的 <see cref="T:System.Data.DataViewManager" />。</summary>
      <returns vsli:raw="The &lt;see langword=&quot;DataViewManager&quot; /&gt; that created this view. If this is the default &lt;see cref=&quot;T:System.Data.DataView&quot; /&gt; for a &lt;see cref=&quot;T:System.Data.DataTable&quot; /&gt;, the &lt;see langword=&quot;DataViewManager&quot; /&gt; property returns the default &lt;see langword=&quot;DataViewManager&quot; /&gt; for the &lt;see langword=&quot;DataSet&quot; /&gt;. Otherwise, if the &lt;see langword=&quot;DataView&quot; /&gt; was created without a &lt;see langword=&quot;DataViewManager&quot; /&gt;, this property is &lt;see langword=&quot;null&quot; /&gt;.">创建了此视图的 <see langword="DataViewManager" />。 如果这是 <see cref="T:System.Data.DataTable" /> 的默认 <see cref="T:System.Data.DataView" />，那么 <see langword="DataViewManager" /> 属性将返回 <see langword="DataSet" /> 的默认 <see langword="DataViewManager" />。 否则，如果在没有 <see langword="DataViewManager" /> 的情况下创建了 <see langword="DataView" />，那么此属性为 <see langword="null" />。</returns>
    </member>
    <member name="P:System.Data.DataView.IsInitialized">
      <summary vsli:raw="Gets a value that indicates whether the component is initialized.">获取一个值，该值指示组件是否已初始化。</summary>
      <returns vsli:raw="&lt;see langword=&quot;true&quot; /&gt; to indicate the component has completed initialization; otherwise, &lt;see langword=&quot;false&quot; /&gt;.">如果为 <see langword="true" />，说明组件已完成初始化；否则为 <see langword="false" />。</returns>
    </member>
    <member name="P:System.Data.DataView.IsOpen">
      <summary vsli:raw="Gets a value that indicates whether the data source is currently open and projecting views of data on the &lt;see cref=&quot;T:System.Data.DataTable&quot; /&gt;.">获取一个值，该值指示数据源当前是否打开并投影 <see cref="T:System.Data.DataTable" /> 上的数据视图。</summary>
      <returns vsli:raw="&lt;see langword=&quot;true&quot; /&gt;, if the source is open; otherwise, &lt;see langword=&quot;false&quot; /&gt;.">如果源打开，则为 <see langword="true" />；否则为 <see langword="false" />。</returns>
    </member>
    <member name="P:System.Data.DataView.Item(System.Int32)">
      <summary vsli:raw="Gets a row of data from a specified table.">从指定的表中获取数据行。</summary>
      <param name="recordIndex" vsli:raw="The index of a record in the &lt;see cref=&quot;T:System.Data.DataTable&quot; /&gt;.">
        <see cref="T:System.Data.DataTable" /> 中的记录的索引。</param>
      <returns vsli:raw="A &lt;see cref=&quot;T:System.Data.DataRowView&quot; /&gt; of the row that you want.">所需的行的 <see cref="T:System.Data.DataRowView" />。</returns>
    </member>
    <member name="P:System.Data.DataView.RowFilter">
      <summary vsli:raw="Gets or sets the expression used to filter which rows are viewed in the &lt;see cref=&quot;T:System.Data.DataView&quot; /&gt;.">获取或设置用于筛选在 <see cref="T:System.Data.DataView" /> 中查看哪些行的表达式。</summary>
      <returns vsli:raw="A string that specifies how rows are to be filtered.">用于指定行的筛选方式的字符串。</returns>
    </member>
    <member name="P:System.Data.DataView.RowStateFilter">
      <summary vsli:raw="Gets or sets the row state filter used in the &lt;see cref=&quot;T:System.Data.DataView&quot; /&gt;.">获取或设置用于 <see cref="T:System.Data.DataView" /> 中的行状态筛选器。</summary>
      <returns vsli:raw="One of the &lt;see cref=&quot;T:System.Data.DataViewRowState&quot; /&gt; values.">
        <see cref="T:System.Data.DataViewRowState" /> 值之一。</returns>
    </member>
    <member name="P:System.Data.DataView.Sort">
      <summary vsli:raw="Gets or sets the sort column or columns, and sort order for the &lt;see cref=&quot;T:System.Data.DataView&quot; /&gt;.">获取或设置 <see cref="T:System.Data.DataView" /> 的一个或多个排序列和排序顺序。</summary>
      <returns vsli:raw="A string that contains the column name followed by &quot;ASC&quot; (ascending) or &quot;DESC&quot; (descending). Columns are sorted ascending by default. Multiple columns can be separated by commas.">一个字符串，该字符串包含后跟“ASC”（升序）或"DESC"（降序）的列名。 默认情况下，列按升序排序。 可以用逗号分隔多个列。</returns>
    </member>
    <member name="P:System.Data.DataView.System#Collections#ICollection#IsSynchronized">
      <summary vsli:raw="For a description of this member, see &lt;see cref=&quot;P:System.Collections.ICollection.IsSynchronized&quot; /&gt;.">有关此成员的说明，请参见 <see cref="P:System.Collections.ICollection.IsSynchronized" />。</summary>
      <returns vsli:raw="For a description of this member, see &lt;see cref=&quot;P:System.Collections.ICollection.IsSynchronized&quot; /&gt;.">有关此成员的说明，请参见 <see cref="P:System.Collections.ICollection.IsSynchronized" />。</returns>
    </member>
    <member name="P:System.Data.DataView.System#Collections#ICollection#SyncRoot">
      <summary vsli:raw="For a description of this member, see &lt;see cref=&quot;P:System.Collections.ICollection.SyncRoot&quot; /&gt;.">有关此成员的说明，请参见 <see cref="P:System.Collections.ICollection.SyncRoot" />。</summary>
      <returns vsli:raw="For a description of this member, see &lt;see cref=&quot;P:System.Collections.ICollection.SyncRoot&quot; /&gt;.">有关此成员的说明，请参见 <see cref="P:System.Collections.ICollection.SyncRoot" />。</returns>
    </member>
    <member name="P:System.Data.DataView.System#Collections#IList#IsFixedSize">
      <summary vsli:raw="For a description of this member, see &lt;see cref=&quot;P:System.Collections.IList.IsFixedSize&quot; /&gt;.">有关此成员的说明，请参见 <see cref="P:System.Collections.IList.IsFixedSize" />。</summary>
      <returns vsli:raw="For a description of this member, see &lt;see cref=&quot;P:System.Collections.IList.IsFixedSize&quot; /&gt;.">有关此成员的说明，请参见 <see cref="P:System.Collections.IList.IsFixedSize" />。</returns>
    </member>
    <member name="P:System.Data.DataView.System#Collections#IList#IsReadOnly">
      <summary vsli:raw="For a description of this member, see &lt;see cref=&quot;P:System.Collections.IList.IsReadOnly&quot; /&gt;.">有关此成员的说明，请参见 <see cref="P:System.Collections.IList.IsReadOnly" />。</summary>
      <returns vsli:raw="For a description of this member, see &lt;see cref=&quot;P:System.Collections.IList.IsReadOnly&quot; /&gt;.">有关此成员的说明，请参见 <see cref="P:System.Collections.IList.IsReadOnly" />。</returns>
    </member>
    <member name="P:System.Data.DataView.System#Collections#IList#Item(System.Int32)">
      <summary vsli:raw="For a description of this member, see &lt;see cref=&quot;P:System.Collections.IList.Item(System.Int32)&quot; /&gt;.">有关此成员的说明，请参见 <see cref="P:System.Collections.IList.Item(System.Int32)" />。</summary>
      <param name="recordIndex" vsli:raw="An &lt;see cref=&quot;T:System.Int32&quot; /&gt; value.">一个 <see cref="T:System.Int32" /> 值。</param>
      <returns vsli:raw="For a description of this member, see &lt;see cref=&quot;P:System.Collections.IList.Item(System.Int32)&quot; /&gt;.">有关此成员的说明，请参见 <see cref="P:System.Collections.IList.Item(System.Int32)" />。</returns>
    </member>
    <member name="P:System.Data.DataView.System#ComponentModel#IBindingList#AllowEdit">
      <summary vsli:raw="For a description of this member, see &lt;see cref=&quot;P:System.ComponentModel.IBindingList.AllowEdit&quot; /&gt;.">有关此成员的说明，请参见 <see cref="P:System.ComponentModel.IBindingList.AllowEdit" />。</summary>
      <returns vsli:raw="For a description of this member, see &lt;see cref=&quot;P:System.ComponentModel.IBindingList.AllowEdit&quot; /&gt;.">有关此成员的说明，请参见 <see cref="P:System.ComponentModel.IBindingList.AllowEdit" />。</returns>
    </member>
    <member name="P:System.Data.DataView.System#ComponentModel#IBindingList#AllowNew">
      <summary vsli:raw="For a description of this member, see &lt;see cref=&quot;P:System.ComponentModel.IBindingList.AllowNew&quot; /&gt;.">有关此成员的说明，请参见 <see cref="P:System.ComponentModel.IBindingList.AllowNew" />。</summary>
      <returns vsli:raw="For a description of this member, see &lt;see cref=&quot;P:System.ComponentModel.IBindingList.AllowNew&quot; /&gt;.">有关此成员的说明，请参见 <see cref="P:System.ComponentModel.IBindingList.AllowNew" />。</returns>
    </member>
    <member name="P:System.Data.DataView.System#ComponentModel#IBindingList#AllowRemove">
      <summary vsli:raw="For a description of this member, see &lt;see cref=&quot;P:System.ComponentModel.IBindingList.AllowRemove&quot; /&gt;.">有关此成员的说明，请参见 <see cref="P:System.ComponentModel.IBindingList.AllowRemove" />。</summary>
      <returns vsli:raw="For a description of this member, see &lt;see cref=&quot;P:System.ComponentModel.IBindingList.AllowRemove&quot; /&gt;.">有关此成员的说明，请参见 <see cref="P:System.ComponentModel.IBindingList.AllowRemove" />。</returns>
    </member>
    <member name="P:System.Data.DataView.System#ComponentModel#IBindingList#IsSorted">
      <summary vsli:raw="For a description of this member, see &lt;see cref=&quot;P:System.ComponentModel.IBindingList.IsSorted&quot; /&gt;.">有关此成员的说明，请参见 <see cref="P:System.ComponentModel.IBindingList.IsSorted" />。</summary>
      <returns vsli:raw="For a description of this member, see &lt;see cref=&quot;P:System.ComponentModel.IBindingList.IsSorted&quot; /&gt;.">有关此成员的说明，请参见 <see cref="P:System.ComponentModel.IBindingList.IsSorted" />。</returns>
    </member>
    <member name="P:System.Data.DataView.System#ComponentModel#IBindingList#SortDirection">
      <summary vsli:raw="For a description of this member, see &lt;see cref=&quot;P:System.ComponentModel.IBindingList.SortDirection&quot; /&gt;.">有关此成员的说明，请参见 <see cref="P:System.ComponentModel.IBindingList.SortDirection" />。</summary>
      <returns vsli:raw="For a description of this member, see &lt;see cref=&quot;P:System.ComponentModel.IBindingList.SortDirection&quot; /&gt;.">有关此成员的说明，请参见 <see cref="P:System.ComponentModel.IBindingList.SortDirection" />。</returns>
    </member>
    <member name="P:System.Data.DataView.System#ComponentModel#IBindingList#SortProperty">
      <summary vsli:raw="For a description of this member, see &lt;see cref=&quot;P:System.ComponentModel.IBindingList.SortProperty&quot; /&gt;.">有关此成员的说明，请参见 <see cref="P:System.ComponentModel.IBindingList.SortProperty" />。</summary>
      <returns vsli:raw="For a description of this member, see &lt;see cref=&quot;P:System.ComponentModel.IBindingList.SortProperty&quot; /&gt;.">有关此成员的说明，请参见 <see cref="P:System.ComponentModel.IBindingList.SortProperty" />。</returns>
    </member>
    <member name="P:System.Data.DataView.System#ComponentModel#IBindingList#SupportsChangeNotification">
      <summary vsli:raw="For a description of this member, see &lt;see cref=&quot;P:System.ComponentModel.IBindingList.SupportsChangeNotification&quot; /&gt;.">有关此成员的说明，请参见 <see cref="P:System.ComponentModel.IBindingList.SupportsChangeNotification" />。</summary>
      <returns vsli:raw="For a description of this member, see &lt;see cref=&quot;P:System.ComponentModel.IBindingList.SupportsChangeNotification&quot; /&gt;.">有关此成员的说明，请参见 <see cref="P:System.ComponentModel.IBindingList.SupportsChangeNotification" />。</returns>
    </member>
    <member name="P:System.Data.DataView.System#ComponentModel#IBindingList#SupportsSearching">
      <summary vsli:raw="For a description of this member, see &lt;see cref=&quot;P:System.ComponentModel.IBindingList.SupportsSearching&quot; /&gt;.">有关此成员的说明，请参见 <see cref="P:System.ComponentModel.IBindingList.SupportsSearching" />。</summary>
      <returns vsli:raw="For a description of this member, see &lt;see cref=&quot;P:System.ComponentModel.IBindingList.SupportsSearching&quot; /&gt;.">有关此成员的说明，请参见 <see cref="P:System.ComponentModel.IBindingList.SupportsSearching" />。</returns>
    </member>
    <member name="P:System.Data.DataView.System#ComponentModel#IBindingList#SupportsSorting">
      <summary vsli:raw="For a description of this member, see &lt;see cref=&quot;P:System.ComponentModel.IBindingList.SupportsSorting&quot; /&gt;.">有关此成员的说明，请参见 <see cref="P:System.ComponentModel.IBindingList.SupportsSorting" />。</summary>
      <returns vsli:raw="For a description of this member, see &lt;see cref=&quot;P:System.ComponentModel.IBindingList.SupportsSorting&quot; /&gt;.">有关此成员的说明，请参见 <see cref="P:System.ComponentModel.IBindingList.SupportsSorting" />。</returns>
    </member>
    <member name="P:System.Data.DataView.System#ComponentModel#IBindingListView#Filter">
      <summary vsli:raw="For a description of this member, see &lt;see cref=&quot;P:System.ComponentModel.IBindingListView.Filter&quot; /&gt;.">有关此成员的说明，请参见 <see cref="P:System.ComponentModel.IBindingListView.Filter" />。</summary>
      <returns vsli:raw="For a description of this member, see &lt;see cref=&quot;P:System.ComponentModel.IBindingListView.Filter&quot; /&gt;.">有关此成员的说明，请参见 <see cref="P:System.ComponentModel.IBindingListView.Filter" />。</returns>
    </member>
    <member name="P:System.Data.DataView.System#ComponentModel#IBindingListView#SortDescriptions">
      <summary vsli:raw="For a description of this member, see &lt;see cref=&quot;P:System.ComponentModel.IBindingListView.SortDescriptions&quot; /&gt;.">有关此成员的说明，请参见 <see cref="P:System.ComponentModel.IBindingListView.SortDescriptions" />。</summary>
      <returns vsli:raw="For a description of this member, see &lt;see cref=&quot;P:System.ComponentModel.IBindingListView.SortDescriptions&quot; /&gt;.">有关此成员的说明，请参见 <see cref="P:System.ComponentModel.IBindingListView.SortDescriptions" />。</returns>
    </member>
    <member name="P:System.Data.DataView.System#ComponentModel#IBindingListView#SupportsAdvancedSorting">
      <summary vsli:raw="For a description of this member, see &lt;see cref=&quot;P:System.ComponentModel.IBindingListView.SupportsAdvancedSorting&quot; /&gt;.">有关此成员的说明，请参见 <see cref="P:System.ComponentModel.IBindingListView.SupportsAdvancedSorting" />。</summary>
      <returns vsli:raw="For a description of this member, see &lt;see cref=&quot;P:System.ComponentModel.IBindingListView.SupportsAdvancedSorting&quot; /&gt;.">有关此成员的说明，请参见 <see cref="P:System.ComponentModel.IBindingListView.SupportsAdvancedSorting" />。</returns>
    </member>
    <member name="P:System.Data.DataView.System#ComponentModel#IBindingListView#SupportsFiltering">
      <summary vsli:raw="For a description of this member, see &lt;see cref=&quot;P:System.ComponentModel.IBindingListView.SupportsFiltering&quot; /&gt;.">有关此成员的说明，请参见 <see cref="P:System.ComponentModel.IBindingListView.SupportsFiltering" />。</summary>
      <returns vsli:raw="For a description of this member, see &lt;see cref=&quot;P:System.ComponentModel.IBindingListView.SupportsFiltering&quot; /&gt;.">有关此成员的说明，请参见 <see cref="P:System.ComponentModel.IBindingListView.SupportsFiltering" />。</returns>
    </member>
    <member name="P:System.Data.DataView.Table">
      <summary vsli:raw="Gets or sets the source &lt;see cref=&quot;T:System.Data.DataTable&quot; /&gt;.">获取或设置源 <see cref="T:System.Data.DataTable" />。</summary>
      <returns vsli:raw="A &lt;see cref=&quot;T:System.Data.DataTable&quot; /&gt; that provides the data for this view.">为此视图提供数据的 <see cref="T:System.Data.DataTable" />。</returns>
    </member>
    <member name="T:System.Data.DataViewManager">
      <summary vsli:raw="Contains a default &lt;see cref=&quot;T:System.Data.DataViewSettingCollection&quot; /&gt; for each &lt;see cref=&quot;T:System.Data.DataTable&quot; /&gt; in a &lt;see cref=&quot;T:System.Data.DataSet&quot; /&gt;.">在 <see cref="T:System.Data.DataSet" /> 中包含每个 <see cref="T:System.Data.DataTable" /> 的默认 <see cref="T:System.Data.DataViewSettingCollection" />。</summary>
    </member>
    <member name="E:System.Data.DataViewManager.ListChanged">
      <summary vsli:raw="Occurs after a row is added to or deleted from a &lt;see cref=&quot;T:System.Data.DataView&quot; /&gt;.">在将行添加到 <see cref="T:System.Data.DataView" /> 或从中删除行之后发生。</summary>
    </member>
    <member name="M:System.Data.DataViewManager.#ctor">
      <summary vsli:raw="Initializes a new instance of the &lt;see cref=&quot;T:System.Data.DataViewManager&quot; /&gt; class.">初始化 <see cref="T:System.Data.DataViewManager" /> 类的新实例。</summary>
    </member>
    <member name="M:System.Data.DataViewManager.#ctor(System.Data.DataSet)">
      <summary vsli:raw="Initializes a new instance of the &lt;see cref=&quot;T:System.Data.DataViewManager&quot; /&gt; class for the specified &lt;see cref=&quot;T:System.Data.DataSet&quot; /&gt;.">为指定的 <see cref="T:System.Data.DataSet" /> 初始化 <see cref="T:System.Data.DataViewManager" /> 类的新实例。</summary>
      <param name="dataSet" vsli:raw="The name of the &lt;see cref=&quot;T:System.Data.DataSet&quot; /&gt; to use.">要使用的 <see cref="T:System.Data.DataSet" /> 的名称。</param>
    </member>
    <member name="M:System.Data.DataViewManager.CreateDataView(System.Data.DataTable)">
      <summary vsli:raw="Creates a &lt;see cref=&quot;T:System.Data.DataView&quot; /&gt; for the specified &lt;see cref=&quot;T:System.Data.DataTable&quot; /&gt;.">为指定的 <see cref="T:System.Data.DataTable" /> 创建 <see cref="T:System.Data.DataView" />。</summary>
      <param name="table" vsli:raw="The name of the &lt;see cref=&quot;T:System.Data.DataTable&quot; /&gt; to use in the &lt;see cref=&quot;T:System.Data.DataView&quot; /&gt;.">要在 <see cref="T:System.Data.DataView" /> 中使用的 <see cref="T:System.Data.DataTable" /> 的名称。</param>
      <returns vsli:raw="A &lt;see cref=&quot;T:System.Data.DataView&quot; /&gt; object.">
        <see cref="T:System.Data.DataView" /> 对象。</returns>
    </member>
    <member name="M:System.Data.DataViewManager.OnListChanged(System.ComponentModel.ListChangedEventArgs)">
      <summary vsli:raw="Raises the &lt;see cref=&quot;E:System.Data.DataViewManager.ListChanged&quot; /&gt; event.">引发 <see cref="E:System.Data.DataViewManager.ListChanged" /> 事件。</summary>
      <param name="e" vsli:raw="A &lt;see cref=&quot;T:System.ComponentModel.ListChangedEventArgs&quot; /&gt; that contains the event data.">包含事件数据的 <see cref="T:System.ComponentModel.ListChangedEventArgs" />。</param>
    </member>
    <member name="M:System.Data.DataViewManager.RelationCollectionChanged(System.Object,System.ComponentModel.CollectionChangeEventArgs)">
      <summary vsli:raw="Raises a &lt;see cref=&quot;E:System.Data.DataRelationCollection.CollectionChanged&quot; /&gt; event when a &lt;see cref=&quot;T:System.Data.DataRelation&quot; /&gt; is added to or removed from the &lt;see cref=&quot;T:System.Data.DataRelationCollection&quot; /&gt;.">在 <see cref="T:System.Data.DataRelationCollection" /> 中添加或移除 <see cref="T:System.Data.DataRelation" /> 时引发 <see cref="E:System.Data.DataRelationCollection.CollectionChanged" /> 事件。</summary>
      <param name="sender" vsli:raw="The source of the event.">事件源。</param>
      <param name="e" vsli:raw="A &lt;see cref=&quot;T:System.ComponentModel.CollectionChangeEventArgs&quot; /&gt; that contains the event data.">包含事件数据的 <see cref="T:System.ComponentModel.CollectionChangeEventArgs" />。</param>
    </member>
    <member name="M:System.Data.DataViewManager.System#Collections#ICollection#CopyTo(System.Array,System.Int32)">
      <summary vsli:raw="Copies the elements of the &lt;see cref=&quot;T:System.Collections.ICollection&quot; /&gt; to an &lt;see cref=&quot;T:System.Array&quot; /&gt;, starting at a particular &lt;see cref=&quot;T:System.Array&quot; /&gt; index.">从特定的 <see cref="T:System.Collections.ICollection" /> 索引开始，将 <see cref="T:System.Array" /> 的元素复制到一个 <see cref="T:System.Array" /> 中。</summary>
      <param name="array" vsli:raw="The one-dimensional &lt;see cref=&quot;T:System.Array&quot; /&gt; that is the destination of the elements copied from &lt;see cref=&quot;T:System.Collections.ICollection&quot; /&gt;. The &lt;see cref=&quot;T:System.Array&quot; /&gt; must have zero-based indexing.">一维 <see cref="T:System.Array" />，它是从 <see cref="T:System.Collections.ICollection" /> 复制的元素的目标。 <see cref="T:System.Array" /> 必须具有从零开始的索引。</param>
      <param name="index" vsli:raw="The zero-based index in &lt;paramref name=&quot;array&quot; /&gt; at which copying begins.">
        <paramref name="array" /> 中从零开始的索引，从此处开始复制。</param>
    </member>
    <member name="M:System.Data.DataViewManager.System#Collections#IEnumerable#GetEnumerator">
      <summary vsli:raw="For a description of this member, see &lt;see cref=&quot;M:System.Collections.IEnumerable.GetEnumerator&quot; /&gt;.">有关此成员的说明，请参见 <see cref="M:System.Collections.IEnumerable.GetEnumerator" />。</summary>
      <returns vsli:raw="For a description of this member, see &lt;see cref=&quot;M:System.Collections.IEnumerable.GetEnumerator&quot; /&gt;.">有关此成员的说明，请参见 <see cref="M:System.Collections.IEnumerable.GetEnumerator" />。</returns>
    </member>
    <member name="M:System.Data.DataViewManager.System#Collections#IList#Add(System.Object)">
      <summary vsli:raw="Adds an item to the &lt;see cref=&quot;T:System.Collections.IList&quot; /&gt;.">将某项添加到 <see cref="T:System.Collections.IList" /> 中。</summary>
      <param name="value" vsli:raw="The &lt;see cref=&quot;T:System.Object&quot; /&gt; to add to the &lt;see cref=&quot;T:System.Collections.IList&quot; /&gt;.">要添加到 <see cref="T:System.Object" /> 的 <see cref="T:System.Collections.IList" />。</param>
      <returns vsli:raw="The position into which the new element was inserted.">新元素的插入位置。</returns>
    </member>
    <member name="M:System.Data.DataViewManager.System#Collections#IList#Clear">
      <summary vsli:raw="For a description of this member, see &lt;see cref=&quot;M:System.Collections.IList.Clear&quot; /&gt;.">有关此成员的说明，请参见 <see cref="M:System.Collections.IList.Clear" />。</summary>
    </member>
    <member name="M:System.Data.DataViewManager.System#Collections#IList#Contains(System.Object)">
      <summary vsli:raw="Determines whether the &lt;see cref=&quot;T:System.Collections.IList&quot; /&gt; contains a specific value.">确定 <see cref="T:System.Collections.IList" /> 是否包含特定值。</summary>
      <param name="value" vsli:raw="The &lt;see cref=&quot;T:System.Object&quot; /&gt; to locate in the &lt;see cref=&quot;T:System.Collections.IList&quot; /&gt;.">要在 <see cref="T:System.Object" /> 中定位的 <see cref="T:System.Collections.IList" />。</param>
      <returns vsli:raw="&lt;see langword=&quot;true&quot; /&gt; if the &lt;see cref=&quot;T:System.Object&quot; /&gt; is found in the &lt;see cref=&quot;T:System.Collections.IList&quot; /&gt;; otherwise, &lt;see langword=&quot;false&quot; /&gt;.">如果在 <see cref="T:System.Collections.IList" /> 中找到了 <see cref="T:System.Object" />，则为 <see langword="true" />；否则为 <see langword="false" />。</returns>
    </member>
    <member name="M:System.Data.DataViewManager.System#Collections#IList#IndexOf(System.Object)">
      <summary vsli:raw="Determines the index of a specific item in the &lt;see cref=&quot;T:System.Collections.IList&quot; /&gt;.">确定 <see cref="T:System.Collections.IList" /> 中特定项的索引。</summary>
      <param name="value" vsli:raw="The &lt;see cref=&quot;T:System.Object&quot; /&gt; to locate in the &lt;see cref=&quot;T:System.Collections.IList&quot; /&gt;.">要在 <see cref="T:System.Object" /> 中定位的 <see cref="T:System.Collections.IList" />。</param>
      <returns vsli:raw="The index of &lt;paramref name=&quot;value&quot; /&gt; if found in the list; otherwise, -1.">如果在列表中找到，则为 <paramref name="value" /> 的索引；否则为 -1。</returns>
    </member>
    <member name="M:System.Data.DataViewManager.System#Collections#IList#Insert(System.Int32,System.Object)">
      <summary vsli:raw="Inserts an item to the &lt;see cref=&quot;T:System.Collections.IList&quot; /&gt; at the specified index.">在 <see cref="T:System.Collections.IList" /> 中的指定索引处插入一个项。</summary>
      <param name="index" vsli:raw="The zero-based index at which &lt;paramref name=&quot;value&quot; /&gt; should be inserted.">应插入 <paramref name="value" /> 的从零开始的索引。</param>
      <param name="value" vsli:raw="The &lt;see cref=&quot;T:System.Object&quot; /&gt; to insert into the &lt;see cref=&quot;T:System.Collections.IList&quot; /&gt;.">要插入到 <see cref="T:System.Collections.IList" /> 的 <see cref="T:System.Object" />。</param>
    </member>
    <member name="M:System.Data.DataViewManager.System#Collections#IList#Remove(System.Object)">
      <summary vsli:raw="Removes the first occurrence of a specific object from the &lt;see cref=&quot;T:System.Collections.IList&quot; /&gt;.">从 <see cref="T:System.Collections.IList" /> 中移除特定对象的第一个匹配项。</summary>
      <param name="value" vsli:raw="The &lt;see cref=&quot;T:System.Object&quot; /&gt; to remove from the &lt;see cref=&quot;T:System.Collections.IList&quot; /&gt;.">要从 <see cref="T:System.Object" /> 移除的 <see cref="T:System.Collections.IList" />。</param>
    </member>
    <member name="M:System.Data.DataViewManager.System#Collections#IList#RemoveAt(System.Int32)">
      <summary vsli:raw="Removes the &lt;see cref=&quot;T:System.Collections.IList&quot; /&gt; item at the specified index.">移除位于指定索引处的 <see cref="T:System.Collections.IList" /> 项。</summary>
      <param name="index" vsli:raw="The zero-based index of the item to remove.">要移除的项的从零开始的索引。</param>
    </member>
    <member name="M:System.Data.DataViewManager.System#ComponentModel#IBindingList#AddIndex(System.ComponentModel.PropertyDescriptor)">
      <summary vsli:raw="Adds the &lt;see cref=&quot;T:System.ComponentModel.PropertyDescriptor&quot; /&gt; to the indexes used for searching.">将 <see cref="T:System.ComponentModel.PropertyDescriptor" /> 添加到用于搜索的索引。</summary>
      <param name="property" vsli:raw="The &lt;see cref=&quot;T:System.ComponentModel.PropertyDescriptor&quot; /&gt; to add to the indexes used for searching.">将 <see cref="T:System.ComponentModel.PropertyDescriptor" /> 添加到用于搜索的索引。</param>
    </member>
    <member name="M:System.Data.DataViewManager.System#ComponentModel#IBindingList#AddNew">
      <summary vsli:raw="For a description of this member, see &lt;see cref=&quot;M:System.ComponentModel.IBindingList.AddNew&quot; /&gt;.">有关此成员的说明，请参见 <see cref="M:System.ComponentModel.IBindingList.AddNew" />。</summary>
      <returns vsli:raw="For a description of this member, see &lt;see cref=&quot;M:System.ComponentModel.IBindingList.AddNew&quot; /&gt;.">有关此成员的说明，请参见 <see cref="M:System.ComponentModel.IBindingList.AddNew" />。</returns>
    </member>
    <member name="M:System.Data.DataViewManager.System#ComponentModel#IBindingList#ApplySort(System.ComponentModel.PropertyDescriptor,System.ComponentModel.ListSortDirection)">
      <summary vsli:raw="Sorts the list based on a &lt;see cref=&quot;T:System.ComponentModel.PropertyDescriptor&quot; /&gt; and a &lt;see cref=&quot;T:System.ComponentModel.ListSortDirection&quot; /&gt;.">根据 <see cref="T:System.ComponentModel.PropertyDescriptor" /> 和 <see cref="T:System.ComponentModel.ListSortDirection" /> 对列表进行排序。</summary>
      <param name="property" vsli:raw="The &lt;see cref=&quot;T:System.ComponentModel.PropertyDescriptor&quot; /&gt; to sort by.">以其为根据进行排序的 <see cref="T:System.ComponentModel.PropertyDescriptor" />。</param>
      <param name="direction" vsli:raw="One of the &lt;see cref=&quot;T:System.ComponentModel.ListSortDirection&quot; /&gt; values.">
        <see cref="T:System.ComponentModel.ListSortDirection" /> 值之一。</param>
    </member>
    <member name="M:System.Data.DataViewManager.System#ComponentModel#IBindingList#Find(System.ComponentModel.PropertyDescriptor,System.Object)">
      <summary vsli:raw="Returns the index of the row that has the given &lt;see cref=&quot;T:System.ComponentModel.PropertyDescriptor&quot; /&gt;.">返回具有给定 <see cref="T:System.ComponentModel.PropertyDescriptor" /> 的行的索引。</summary>
      <param name="property" vsli:raw="The &lt;see cref=&quot;T:System.ComponentModel.PropertyDescriptor&quot; /&gt; to search on.">要对其进行搜索的 <see cref="T:System.ComponentModel.PropertyDescriptor" />。</param>
      <param name="key" vsli:raw="The value of the property parameter to search for.">要搜索的属性参数的值。</param>
      <returns vsli:raw="The index of the row that has the given &lt;see cref=&quot;T:System.ComponentModel.PropertyDescriptor&quot; /&gt;.">具有给定 <see cref="T:System.ComponentModel.PropertyDescriptor" /> 的行的索引。</returns>
    </member>
    <member name="M:System.Data.DataViewManager.System#ComponentModel#IBindingList#RemoveIndex(System.ComponentModel.PropertyDescriptor)">
      <summary vsli:raw="Removes the &lt;see cref=&quot;T:System.ComponentModel.PropertyDescriptor&quot; /&gt; from the indexes used for searching.">将 <see cref="T:System.ComponentModel.PropertyDescriptor" /> 从用于搜索的索引中移除。</summary>
      <param name="property" vsli:raw="The &lt;see cref=&quot;T:System.ComponentModel.PropertyDescriptor&quot; /&gt; to remove from the indexes used for searching.">要从用于搜索的索引中移除的 <see cref="T:System.ComponentModel.PropertyDescriptor" />。</param>
    </member>
    <member name="M:System.Data.DataViewManager.System#ComponentModel#IBindingList#RemoveSort">
      <summary vsli:raw="Removes any sort applied using &lt;see cref=&quot;M:System.ComponentModel.IBindingList.ApplySort(System.ComponentModel.PropertyDescriptor,System.ComponentModel.ListSortDirection)&quot; /&gt;.">使用 <see cref="M:System.ComponentModel.IBindingList.ApplySort(System.ComponentModel.PropertyDescriptor,System.ComponentModel.ListSortDirection)" /> 移除任何已应用的排序。</summary>
    </member>
    <member name="M:System.Data.DataViewManager.System#ComponentModel#ITypedList#GetItemProperties(System.ComponentModel.PropertyDescriptor[])">
      <summary vsli:raw="Returns the &lt;see cref=&quot;T:System.ComponentModel.PropertyDescriptorCollection&quot; /&gt; that represents the properties on each item used to bind data.">返回 <see cref="T:System.ComponentModel.PropertyDescriptorCollection" />，其表示每一项上用于绑定数据的属性。</summary>
      <param name="listAccessors" vsli:raw="An array of &lt;see cref=&quot;T:System.ComponentModel.PropertyDescriptor&quot; /&gt; objects to find in the collection as bindable. This can be &lt;see langword=&quot;null&quot; /&gt;.">要在组合中查找的可绑定的 <see cref="T:System.ComponentModel.PropertyDescriptor" /> 对象的数组。 它可以是 <see langword="null" />。</param>
      <returns vsli:raw="The &lt;see cref=&quot;T:System.ComponentModel.PropertyDescriptorCollection&quot; /&gt; that represents the properties on each item used to bind data.">
        <see cref="T:System.ComponentModel.PropertyDescriptorCollection" />，其表示每一项上用于绑定数据的属性。</returns>
    </member>
    <member name="M:System.Data.DataViewManager.System#ComponentModel#ITypedList#GetListName(System.ComponentModel.PropertyDescriptor[])">
      <summary vsli:raw="Returns the name of the list.">返回列表名称。</summary>
      <param name="listAccessors" vsli:raw="An array of &lt;see cref=&quot;T:System.ComponentModel.PropertyDescriptor&quot; /&gt; objects, for which the list name is returned. This can be &lt;see langword=&quot;null&quot; /&gt;.">为其返回列表名称的 <see cref="T:System.ComponentModel.PropertyDescriptor" /> 对象的数组。 它可以是 <see langword="null" />。</param>
      <returns vsli:raw="The name of the list.">列表名称。</returns>
    </member>
    <member name="M:System.Data.DataViewManager.TableCollectionChanged(System.Object,System.ComponentModel.CollectionChangeEventArgs)">
      <summary vsli:raw="Raises a &lt;see cref=&quot;E:System.Data.DataTableCollection.CollectionChanged&quot; /&gt; event when a &lt;see cref=&quot;T:System.Data.DataTable&quot; /&gt; is added to or removed from the &lt;see cref=&quot;T:System.Data.DataTableCollection&quot; /&gt;.">在 <see cref="T:System.Data.DataTableCollection" /> 中添加或移除 <see cref="T:System.Data.DataTable" /> 时引发 <see cref="E:System.Data.DataTableCollection.CollectionChanged" /> 事件。</summary>
      <param name="sender" vsli:raw="The source of the event.">事件源。</param>
      <param name="e" vsli:raw="A &lt;see cref=&quot;T:System.ComponentModel.CollectionChangeEventArgs&quot; /&gt; that contains the event data.">包含事件数据的 <see cref="T:System.ComponentModel.CollectionChangeEventArgs" />。</param>
    </member>
    <member name="P:System.Data.DataViewManager.DataSet">
      <summary vsli:raw="Gets or sets the &lt;see cref=&quot;T:System.Data.DataSet&quot; /&gt; to use with the &lt;see cref=&quot;T:System.Data.DataViewManager&quot; /&gt;.">获取或设置要与 <see cref="T:System.Data.DataViewManager" /> 一起使用的 <see cref="T:System.Data.DataSet" />。</summary>
      <returns vsli:raw="The &lt;see cref=&quot;T:System.Data.DataSet&quot; /&gt; to use.">要使用的 <see cref="T:System.Data.DataSet" />。</returns>
    </member>
    <member name="P:System.Data.DataViewManager.DataViewSettingCollectionString">
      <summary vsli:raw="Gets or sets a value that is used for code persistence.">获取或设置用于代码持久性的值。</summary>
      <returns vsli:raw="A value that is used for code persistence.">一个用于代码持久性的值。</returns>
    </member>
    <member name="P:System.Data.DataViewManager.DataViewSettings">
      <summary vsli:raw="Gets the &lt;see cref=&quot;T:System.Data.DataViewSettingCollection&quot; /&gt; for each &lt;see cref=&quot;T:System.Data.DataTable&quot; /&gt; in the &lt;see cref=&quot;T:System.Data.DataSet&quot; /&gt;.">获取 <see cref="T:System.Data.DataSet" /> 中每个 <see cref="T:System.Data.DataTable" /> 的 <see cref="T:System.Data.DataViewSettingCollection" />。</summary>
      <returns vsli:raw="A &lt;see cref=&quot;T:System.Data.DataViewSettingCollection&quot; /&gt; for each &lt;see langword=&quot;DataTable&quot; /&gt;.">每个 <see langword="DataTable" /> 的 <see cref="T:System.Data.DataViewSettingCollection" />。</returns>
    </member>
    <member name="P:System.Data.DataViewManager.System#Collections#ICollection#Count">
      <summary vsli:raw="For a description of this member, see &lt;see cref=&quot;P:System.Collections.ICollection.Count&quot; /&gt;.">有关此成员的说明，请参见 <see cref="P:System.Collections.ICollection.Count" />。</summary>
      <returns vsli:raw="For a description of this member, see &lt;see cref=&quot;P:System.Collections.ICollection.Count&quot; /&gt;.">有关此成员的说明，请参见 <see cref="P:System.Collections.ICollection.Count" />。</returns>
    </member>
    <member name="P:System.Data.DataViewManager.System#Collections#ICollection#IsSynchronized">
      <summary vsli:raw="For a description of this member, see &lt;see cref=&quot;P:System.Collections.ICollection.IsSynchronized&quot; /&gt;.">有关此成员的说明，请参见 <see cref="P:System.Collections.ICollection.IsSynchronized" />。</summary>
      <returns vsli:raw="&lt;see langword=&quot;true&quot; /&gt; if access to the &lt;see cref=&quot;T:System.Collections.ICollection&quot; /&gt; is synchronized (thread safe); otherwise, &lt;see langword=&quot;false&quot; /&gt;.">如果对 <see langword="true" /> 的访问是同步的（线程安全），则为 <see cref="T:System.Collections.ICollection" />；否则为 <see langword="false" />。</returns>
    </member>
    <member name="P:System.Data.DataViewManager.System#Collections#ICollection#SyncRoot">
      <summary vsli:raw="For a description of this member, see &lt;see cref=&quot;P:System.Collections.ICollection.SyncRoot&quot; /&gt;.">有关此成员的说明，请参见 <see cref="P:System.Collections.ICollection.SyncRoot" />。</summary>
      <returns vsli:raw="An object that can be used to synchronize access to the &lt;see cref=&quot;T:System.Collections.ICollection&quot; /&gt;.">用于同步对 <see cref="T:System.Collections.ICollection" /> 的访问的对象。</returns>
    </member>
    <member name="P:System.Data.DataViewManager.System#Collections#IList#IsFixedSize">
      <summary vsli:raw="For a description of this member, see &lt;see cref=&quot;P:System.Collections.IList.IsFixedSize&quot; /&gt;.">有关此成员的说明，请参见 <see cref="P:System.Collections.IList.IsFixedSize" />。</summary>
      <returns vsli:raw="&lt;see langword=&quot;true&quot; /&gt; if the &lt;see cref=&quot;T:System.Collections.IList&quot; /&gt; has a fixed size; otherwise, &lt;see langword=&quot;false&quot; /&gt;.">如果 <see langword="true" /> 具有固定大小，则为 <see cref="T:System.Collections.IList" />；否则为 <see langword="false" />。</returns>
    </member>
    <member name="P:System.Data.DataViewManager.System#Collections#IList#IsReadOnly">
      <summary vsli:raw="For a description of this member, see &lt;see cref=&quot;P:System.Collections.IList.IsReadOnly&quot; /&gt;.">有关此成员的说明，请参见 <see cref="P:System.Collections.IList.IsReadOnly" />。</summary>
      <returns vsli:raw="For a description of this member, see &lt;see cref=&quot;P:System.Collections.IList.IsReadOnly&quot; /&gt;.">有关此成员的说明，请参见 <see cref="P:System.Collections.IList.IsReadOnly" />。</returns>
    </member>
    <member name="P:System.Data.DataViewManager.System#Collections#IList#Item(System.Int32)">
      <summary vsli:raw="Gets or sets the element at the specified index.">获取或设置指定索引处的元素。</summary>
      <param name="index" vsli:raw="The zero-based index of the element to get or set.">要获取或设置的元素的从零开始的索引。</param>
      <returns vsli:raw="The element at the specified index.">指定索引处的元素。</returns>
    </member>
    <member name="P:System.Data.DataViewManager.System#ComponentModel#IBindingList#AllowEdit">
      <summary vsli:raw="For a description of this member, see &lt;see cref=&quot;P:System.ComponentModel.IBindingList.AllowEdit&quot; /&gt;.">有关此成员的说明，请参见 <see cref="P:System.ComponentModel.IBindingList.AllowEdit" />。</summary>
      <returns vsli:raw="For a description of this member, see &lt;see cref=&quot;P:System.ComponentModel.IBindingList.AllowEdit&quot; /&gt;.">有关此成员的说明，请参见 <see cref="P:System.ComponentModel.IBindingList.AllowEdit" />。</returns>
    </member>
    <member name="P:System.Data.DataViewManager.System#ComponentModel#IBindingList#AllowNew">
      <summary vsli:raw="For a description of this member, see &lt;see cref=&quot;P:System.ComponentModel.IBindingList.AllowNew&quot; /&gt;.">有关此成员的说明，请参见 <see cref="P:System.ComponentModel.IBindingList.AllowNew" />。</summary>
      <returns vsli:raw="For a description of this member, see &lt;see cref=&quot;P:System.ComponentModel.IBindingList.AllowNew&quot; /&gt;.">有关此成员的说明，请参见 <see cref="P:System.ComponentModel.IBindingList.AllowNew" />。</returns>
    </member>
    <member name="P:System.Data.DataViewManager.System#ComponentModel#IBindingList#AllowRemove">
      <summary vsli:raw="For a description of this member, see &lt;see cref=&quot;P:System.ComponentModel.IBindingList.AllowRemove&quot; /&gt;.">有关此成员的说明，请参见 <see cref="P:System.ComponentModel.IBindingList.AllowRemove" />。</summary>
      <returns vsli:raw="For a description of this member, see &lt;see cref=&quot;P:System.ComponentModel.IBindingList.AllowRemove&quot; /&gt;.">有关此成员的说明，请参见 <see cref="P:System.ComponentModel.IBindingList.AllowRemove" />。</returns>
    </member>
    <member name="P:System.Data.DataViewManager.System#ComponentModel#IBindingList#IsSorted">
      <summary vsli:raw="For a description of this member, see &lt;see cref=&quot;P:System.ComponentModel.IBindingList.IsSorted&quot; /&gt;.">有关此成员的说明，请参见 <see cref="P:System.ComponentModel.IBindingList.IsSorted" />。</summary>
      <returns vsli:raw="For a description of this member, see &lt;see cref=&quot;P:System.ComponentModel.IBindingList.IsSorted&quot; /&gt;.">有关此成员的说明，请参见 <see cref="P:System.ComponentModel.IBindingList.IsSorted" />。</returns>
    </member>
    <member name="P:System.Data.DataViewManager.System#ComponentModel#IBindingList#SortDirection">
      <summary vsli:raw="For a description of this member, see &lt;see cref=&quot;P:System.ComponentModel.IBindingList.SortDirection&quot; /&gt;.">有关此成员的说明，请参见 <see cref="P:System.ComponentModel.IBindingList.SortDirection" />。</summary>
      <returns vsli:raw="For a description of this member, see &lt;see cref=&quot;P:System.ComponentModel.IBindingList.SortDirection&quot; /&gt;.">有关此成员的说明，请参见 <see cref="P:System.ComponentModel.IBindingList.SortDirection" />。</returns>
    </member>
    <member name="P:System.Data.DataViewManager.System#ComponentModel#IBindingList#SortProperty">
      <summary vsli:raw="For a description of this member, see &lt;see cref=&quot;P:System.ComponentModel.IBindingList.SortProperty&quot; /&gt;.">有关此成员的说明，请参见 <see cref="P:System.ComponentModel.IBindingList.SortProperty" />。</summary>
      <returns vsli:raw="For a description of this member, see &lt;see cref=&quot;P:System.ComponentModel.IBindingList.SortProperty&quot; /&gt;.">有关此成员的说明，请参见 <see cref="P:System.ComponentModel.IBindingList.SortProperty" />。</returns>
    </member>
    <member name="P:System.Data.DataViewManager.System#ComponentModel#IBindingList#SupportsChangeNotification">
      <summary vsli:raw="For a description of this member, see &lt;see cref=&quot;P:System.ComponentModel.IBindingList.SupportsChangeNotification&quot; /&gt;.">有关此成员的说明，请参见 <see cref="P:System.ComponentModel.IBindingList.SupportsChangeNotification" />。</summary>
      <returns vsli:raw="For a description of this member, see &lt;see cref=&quot;P:System.ComponentModel.IBindingList.SupportsChangeNotification&quot; /&gt;.">有关此成员的说明，请参见 <see cref="P:System.ComponentModel.IBindingList.SupportsChangeNotification" />。</returns>
    </member>
    <member name="P:System.Data.DataViewManager.System#ComponentModel#IBindingList#SupportsSearching">
      <summary vsli:raw="For a description of this member, see &lt;see cref=&quot;P:System.ComponentModel.IBindingList.SupportsSearching&quot; /&gt;.">有关此成员的说明，请参见 <see cref="P:System.ComponentModel.IBindingList.SupportsSearching" />。</summary>
      <returns vsli:raw="For a description of this member, see &lt;see cref=&quot;P:System.ComponentModel.IBindingList.SupportsSearching&quot; /&gt;.">有关此成员的说明，请参见 <see cref="P:System.ComponentModel.IBindingList.SupportsSearching" />。</returns>
    </member>
    <member name="P:System.Data.DataViewManager.System#ComponentModel#IBindingList#SupportsSorting">
      <summary vsli:raw="For a description of this member, see &lt;see cref=&quot;P:System.ComponentModel.IBindingList.SupportsSorting&quot; /&gt;.">有关此成员的说明，请参见 <see cref="P:System.ComponentModel.IBindingList.SupportsSorting" />。</summary>
      <returns vsli:raw="For a description of this member, see &lt;see cref=&quot;P:System.ComponentModel.IBindingList.SupportsSorting&quot; /&gt;.">有关此成员的说明，请参见 <see cref="P:System.ComponentModel.IBindingList.SupportsSorting" />。</returns>
    </member>
    <member name="T:System.Data.DataViewRowState">
      <summary vsli:raw="Describes the version of data in a &lt;see cref=&quot;T:System.Data.DataRow&quot; /&gt;.">描述 <see cref="T:System.Data.DataRow" /> 中的数据版本。</summary>
    </member>
    <member name="F:System.Data.DataViewRowState.Added">
      <summary vsli:raw="A new row.">新行。</summary>
    </member>
    <member name="F:System.Data.DataViewRowState.CurrentRows">
      <summary vsli:raw="Current rows including unchanged, new, and modified rows. By default, &lt;see cref=&quot;T:System.Data.DataViewRowState&quot; /&gt; is set to CurrentRows.">当前行包括未更改的行、新行和已修改的行。 默认情况下，<see cref="T:System.Data.DataViewRowState" /> 设置为 CurrentRows。</summary>
    </member>
    <member name="F:System.Data.DataViewRowState.Deleted">
      <summary vsli:raw="A deleted row.">已删除的行。</summary>
    </member>
    <member name="F:System.Data.DataViewRowState.ModifiedCurrent">
      <summary vsli:raw="A current version of original data that has been modified (see &lt;see langword=&quot;ModifiedOriginal&quot; /&gt;).">已修改的原始数据的当前版本（请参阅 <see langword="ModifiedOriginal" />）。</summary>
    </member>
    <member name="F:System.Data.DataViewRowState.ModifiedOriginal">
      <summary vsli:raw="The original version of the data that was modified. (Although the data has since been modified, it is available as &lt;see langword=&quot;ModifiedCurrent&quot; /&gt;).">已修改数据的原始版本。 （尽管已修改此数据，它仍作为 <see langword="ModifiedCurrent" /> 可用）。</summary>
    </member>
    <member name="F:System.Data.DataViewRowState.None">
      <summary vsli:raw="None.">无。</summary>
    </member>
    <member name="F:System.Data.DataViewRowState.OriginalRows">
      <summary vsli:raw="Original rows including unchanged and deleted rows.">原始行包括未更改的行和已删除的行。</summary>
    </member>
    <member name="F:System.Data.DataViewRowState.Unchanged">
      <summary vsli:raw="An unchanged row.">未更改的行。</summary>
    </member>
    <member name="T:System.Data.DataViewSetting">
      <summary vsli:raw="Represents the default settings for &lt;see cref=&quot;P:System.Data.DataView.ApplyDefaultSort&quot; /&gt;, &lt;see cref=&quot;P:System.Data.DataView.DataViewManager&quot; /&gt;, &lt;see cref=&quot;P:System.Data.DataView.RowFilter&quot; /&gt;, &lt;see cref=&quot;P:System.Data.DataView.RowStateFilter&quot; /&gt;, &lt;see cref=&quot;P:System.Data.DataView.Sort&quot; /&gt;, and &lt;see cref=&quot;P:System.Data.DataView.Table&quot; /&gt; for DataViews created from the &lt;see cref=&quot;T:System.Data.DataViewManager&quot; /&gt;.">表示从 <see cref="P:System.Data.DataView.ApplyDefaultSort" /> 创建的 DataView 的 <see cref="P:System.Data.DataView.DataViewManager" />、<see cref="P:System.Data.DataView.RowFilter" />、<see cref="P:System.Data.DataView.RowStateFilter" />、<see cref="P:System.Data.DataView.Sort" />、<see cref="P:System.Data.DataView.Table" /> 和 <see cref="T:System.Data.DataViewManager" /> 的默认设置。</summary>
    </member>
    <member name="P:System.Data.DataViewSetting.ApplyDefaultSort">
      <summary vsli:raw="Gets or sets a value indicating whether to use the default sort.">获取或设置一个值，该值指示是否使用默认排序。</summary>
      <returns vsli:raw="&lt;see langword=&quot;true&quot; /&gt; if the default sort is used; otherwise &lt;see langword=&quot;false&quot; /&gt;.">如果使用默认排序方式，则为 <see langword="true" />；否则为 <see langword="false" />。</returns>
    </member>
    <member name="P:System.Data.DataViewSetting.DataViewManager">
      <summary vsli:raw="Gets the &lt;see cref=&quot;T:System.Data.DataViewManager&quot; /&gt; that contains this &lt;see cref=&quot;T:System.Data.DataViewSetting&quot; /&gt;.">获取包含此 <see cref="T:System.Data.DataViewManager" /> 的 <see cref="T:System.Data.DataViewSetting" />。</summary>
      <returns vsli:raw="A &lt;see cref=&quot;T:System.Data.DataViewManager&quot; /&gt; object.">
        <see cref="T:System.Data.DataViewManager" /> 对象。</returns>
    </member>
    <member name="P:System.Data.DataViewSetting.RowFilter">
      <summary vsli:raw="Gets or sets the filter to apply in the &lt;see cref=&quot;T:System.Data.DataView&quot; /&gt;. See &lt;see cref=&quot;P:System.Data.DataView.RowFilter&quot; /&gt; for a code sample using RowFilter.">获取或设置应用于 <see cref="T:System.Data.DataView" /> 中的筛选器。 有关使用 RowFilter 的代码示例，请参见 <see cref="P:System.Data.DataView.RowFilter" />。</summary>
      <returns vsli:raw="A string that contains the filter to apply.">包含要应用的筛选器的字符串。</returns>
    </member>
    <member name="P:System.Data.DataViewSetting.RowStateFilter">
      <summary vsli:raw="Gets or sets a value indicating whether to display Current, Deleted, Modified Current, ModifiedOriginal, New, Original, Unchanged, or no rows in the &lt;see cref=&quot;T:System.Data.DataView&quot; /&gt;.">获取或设置一个值，该值指示在 <see cref="T:System.Data.DataView" /> 中是显示 Current、Deleted、Modified Current、ModifiedOriginal、New、Original、Unchanged 还是不显示任何行。</summary>
      <returns vsli:raw="A value that indicates which rows to display.">一个指示要显示哪些行的值。</returns>
    </member>
    <member name="P:System.Data.DataViewSetting.Sort">
      <summary vsli:raw="Gets or sets a value indicating the sort to apply in the &lt;see cref=&quot;T:System.Data.DataView&quot; /&gt;.">获取或设置一个值，该值指示要应用于 <see cref="T:System.Data.DataView" /> 中的排序。</summary>
      <returns vsli:raw="The sort to apply in the &lt;see cref=&quot;T:System.Data.DataView&quot; /&gt;.">要应用于 <see cref="T:System.Data.DataView" /> 中的排序。</returns>
    </member>
    <member name="P:System.Data.DataViewSetting.Table">
      <summary vsli:raw="Gets the &lt;see cref=&quot;T:System.Data.DataTable&quot; /&gt; to which the &lt;see cref=&quot;T:System.Data.DataViewSetting&quot; /&gt; properties apply.">获取要应用 <see cref="T:System.Data.DataTable" /> 属性的 <see cref="T:System.Data.DataViewSetting" />。</summary>
      <returns vsli:raw="A &lt;see cref=&quot;T:System.Data.DataTable&quot; /&gt; object.">
        <see cref="T:System.Data.DataTable" /> 对象。</returns>
    </member>
    <member name="T:System.Data.DataViewSettingCollection">
      <summary vsli:raw="Contains a read-only collection of &lt;see cref=&quot;T:System.Data.DataViewSetting&quot; /&gt; objects for each &lt;see cref=&quot;T:System.Data.DataTable&quot; /&gt; in a &lt;see cref=&quot;T:System.Data.DataSet&quot; /&gt;.">包含 <see cref="T:System.Data.DataViewSetting" /> 中每个 <see cref="T:System.Data.DataTable" /> 的 <see cref="T:System.Data.DataSet" /> 对象的只读集合。</summary>
    </member>
    <member name="M:System.Data.DataViewSettingCollection.CopyTo(System.Array,System.Int32)">
      <summary vsli:raw="Copies the collection objects to a one-dimensional &lt;see cref=&quot;T:System.Array&quot; /&gt; instance starting at the specified index.">从指定的索引处开始，将集合对象复制到一维 <see cref="T:System.Array" /> 实例中。</summary>
      <param name="ar" vsli:raw="The one-dimensional &lt;see cref=&quot;T:System.Array&quot; /&gt; that is the destination of the values copied from the collection.">一维 <see cref="T:System.Array" />，它是从集合所复制值的目标位置。</param>
      <param name="index" vsli:raw="The index of the array at which to start inserting.">插入开始处的数组索引。</param>
    </member>
    <member name="M:System.Data.DataViewSettingCollection.CopyTo(System.Data.DataViewSetting[],System.Int32)">
      <summary vsli:raw="Copies the collection objects to a one-dimensional &lt;see cref=&quot;T:System.Array&quot; /&gt; instance starting at the specified index.">从指定的索引处开始，将集合对象复制到一维 <see cref="T:System.Array" /> 实例中。</summary>
      <param name="ar" vsli:raw="The one-dimensional &lt;see cref=&quot;T:System.Array&quot; /&gt; that is the destination of the values copied from the collection.">一维 <see cref="T:System.Array" />，它是从集合所复制值的目标位置。</param>
      <param name="index" vsli:raw="The index of the array at which to start inserting.">插入开始处的数组索引。</param>
    </member>
    <member name="M:System.Data.DataViewSettingCollection.GetEnumerator">
      <summary vsli:raw="Gets an &lt;see cref=&quot;T:System.Collections.IEnumerator&quot; /&gt; for the collection.">获取集合的 <see cref="T:System.Collections.IEnumerator" />。</summary>
      <returns vsli:raw="An &lt;see cref=&quot;T:System.Collections.IEnumerator&quot; /&gt; object.">一个 <see cref="T:System.Collections.IEnumerator" /> 对象。</returns>
    </member>
    <member name="P:System.Data.DataViewSettingCollection.Count">
      <summary vsli:raw="Gets the number of &lt;see cref=&quot;T:System.Data.DataViewSetting&quot; /&gt; objects in the &lt;see cref=&quot;T:System.Data.DataViewSettingCollection&quot; /&gt;.">获取 <see cref="T:System.Data.DataViewSetting" /> 中 <see cref="T:System.Data.DataViewSettingCollection" /> 对象的数目。</summary>
      <returns vsli:raw="The number of &lt;see cref=&quot;T:System.Data.DataViewSetting&quot; /&gt; objects in the collection.">集合中 <see cref="T:System.Data.DataViewSetting" /> 对象的数目。</returns>
    </member>
    <member name="P:System.Data.DataViewSettingCollection.IsReadOnly">
      <summary vsli:raw="Gets a value that indicates whether the &lt;see cref=&quot;T:System.Data.DataViewSettingCollection&quot; /&gt; is read-only.">获取一个值，该值指示 <see cref="T:System.Data.DataViewSettingCollection" /> 是否为只读。</summary>
      <returns vsli:raw="Always returns &lt;see langword=&quot;true&quot; /&gt; to indicate the collection is read-only.">始终返回 <see langword="true" /> 以指示集合为只读。</returns>
    </member>
    <member name="P:System.Data.DataViewSettingCollection.IsSynchronized">
      <summary vsli:raw="Gets a value that indicates whether access to the &lt;see cref=&quot;T:System.Data.DataViewSettingCollection&quot; /&gt; is synchronized (thread-safe).">获取一个值，该值指示是否同步对 <see cref="T:System.Data.DataViewSettingCollection" /> 的访问（线程安全）。</summary>
      <returns vsli:raw="This property is always &lt;see langword=&quot;false&quot; /&gt;, unless overridden by a derived class.">如果不被派生类重写，该属性总是为 <see langword="false" />。</returns>
    </member>
    <member name="P:System.Data.DataViewSettingCollection.Item(System.Data.DataTable)">
      <summary vsli:raw="Gets the &lt;see cref=&quot;T:System.Data.DataViewSetting&quot; /&gt; objects of the specified &lt;see cref=&quot;T:System.Data.DataTable&quot; /&gt; from the collection.">获取集合中指定 <see cref="T:System.Data.DataViewSetting" /> 的 <see cref="T:System.Data.DataTable" /> 对象。</summary>
      <param name="table" vsli:raw="The &lt;see cref=&quot;T:System.Data.DataTable&quot; /&gt; to find.">要查找的 <see cref="T:System.Data.DataTable" />。</param>
      <returns vsli:raw="A collection of &lt;see cref=&quot;T:System.Data.DataViewSetting&quot; /&gt; objects.">
        <see cref="T:System.Data.DataViewSetting" /> 对象的集合。</returns>
    </member>
    <member name="P:System.Data.DataViewSettingCollection.Item(System.Int32)">
      <summary vsli:raw="Gets the &lt;see cref=&quot;T:System.Data.DataViewSetting&quot; /&gt; objects of the &lt;see cref=&quot;T:System.Data.DataTable&quot; /&gt; specified by its index.">获取 <see cref="T:System.Data.DataViewSetting" /> 的 <see cref="T:System.Data.DataTable" /> 对象（由其索引指定）。</summary>
      <param name="index" vsli:raw="The zero-based index of the &lt;see cref=&quot;T:System.Data.DataTable&quot; /&gt; to find.">要查找的 <see cref="T:System.Data.DataTable" /> 的从零开始的索引。</param>
      <returns vsli:raw="A collection of &lt;see cref=&quot;T:System.Data.DataViewSetting&quot; /&gt; objects.">
        <see cref="T:System.Data.DataViewSetting" /> 对象的集合。</returns>
    </member>
    <member name="P:System.Data.DataViewSettingCollection.Item(System.String)">
      <summary vsli:raw="Gets the &lt;see cref=&quot;T:System.Data.DataViewSetting&quot; /&gt; of the &lt;see cref=&quot;T:System.Data.DataTable&quot; /&gt; specified by its name.">获取 <see cref="T:System.Data.DataViewSetting" /> 的 <see cref="T:System.Data.DataTable" />（由其名称指定）。</summary>
      <param name="tableName" vsli:raw="The name of the &lt;see cref=&quot;T:System.Data.DataTable&quot; /&gt; to find.">要查找的 <see cref="T:System.Data.DataTable" /> 的名称。</param>
      <returns vsli:raw="A collection of &lt;see cref=&quot;T:System.Data.DataViewSetting&quot; /&gt; objects.">
        <see cref="T:System.Data.DataViewSetting" /> 对象的集合。</returns>
    </member>
    <member name="P:System.Data.DataViewSettingCollection.SyncRoot">
      <summary vsli:raw="Gets an object that can be used to synchronize access to the &lt;see cref=&quot;T:System.Data.DataViewSettingCollection&quot; /&gt;.">获取可用于同步对 <see cref="T:System.Data.DataViewSettingCollection" /> 的访问的对象。</summary>
      <returns vsli:raw="An object that can be used to synchronize access to the &lt;see cref=&quot;T:System.Data.DataViewSettingCollection&quot; /&gt;.">用于同步对 <see cref="T:System.Data.DataViewSettingCollection" /> 的访问的对象。</returns>
    </member>
    <member name="T:System.Data.DBConcurrencyException">
      <summary vsli:raw="The exception that is thrown by the &lt;see cref=&quot;T:System.Data.Common.DataAdapter&quot; /&gt; during an insert, update, or delete operation if the number of rows affected equals zero.">在插入、更新或删除操作过程中当受影响的行数等于零时由 <see cref="T:System.Data.Common.DataAdapter" /> 引发的异常。</summary>
    </member>
    <member name="M:System.Data.DBConcurrencyException.#ctor">
      <summary vsli:raw="Initializes a new instance of the &lt;see cref=&quot;T:System.Data.DBConcurrencyException&quot; /&gt; class.">初始化 <see cref="T:System.Data.DBConcurrencyException" /> 类的新实例。</summary>
    </member>
    <member name="M:System.Data.DBConcurrencyException.#ctor(System.String)">
      <summary vsli:raw="Initializes a new instance of the &lt;see cref=&quot;T:System.Data.DBConcurrencyException&quot; /&gt; class.">初始化 <see cref="T:System.Data.DBConcurrencyException" /> 类的新实例。</summary>
      <param name="message" vsli:raw="The text string describing the details of the exception.">文本字符串，它描述有关异常的详细信息。</param>
    </member>
    <member name="M:System.Data.DBConcurrencyException.#ctor(System.String,System.Exception)">
      <summary vsli:raw="Initializes a new instance of the &lt;see cref=&quot;T:System.Data.DBConcurrencyException&quot; /&gt; class.">初始化 <see cref="T:System.Data.DBConcurrencyException" /> 类的新实例。</summary>
      <param name="message" vsli:raw="The text string describing the details of the exception.">文本字符串，它描述有关异常的详细信息。</param>
      <param name="inner" vsli:raw="A reference to an inner exception.">对内部异常的引用。</param>
    </member>
    <member name="M:System.Data.DBConcurrencyException.#ctor(System.String,System.Exception,System.Data.DataRow[])">
      <summary vsli:raw="Initializes a new instance of the &lt;see cref=&quot;T:System.Data.DBConcurrencyException&quot; /&gt; class.">初始化 <see cref="T:System.Data.DBConcurrencyException" /> 类的新实例。</summary>
      <param name="message" vsli:raw="The error message that explains the reason for this exception.">说明发生此异常的原因的错误消息。</param>
      <param name="inner" vsli:raw="The exception that is the cause of the current exception, or a null reference (&lt;see langword=&quot;Nothing&quot; /&gt; in Visual Basic) if no inner exception is specified.">导致当前异常的异常；如果未指定内部异常，则是一个 null 引用（在 Visual Basic 中为 <see langword="Nothing" />）。</param>
      <param name="dataRows" vsli:raw="An array containing the &lt;see cref=&quot;T:System.Data.DataRow&quot; /&gt; objects whose update failure generated this exception.">一个数组，其中包含因更新失败而导致生成此异常的 <see cref="T:System.Data.DataRow" /> 对象。</param>
    </member>
    <member name="M:System.Data.DBConcurrencyException.CopyToRows(System.Data.DataRow[])">
      <summary vsli:raw="Copies the &lt;see cref=&quot;T:System.Data.DataRow&quot; /&gt; objects whose update failure generated this exception, to the specified array of &lt;see cref=&quot;T:System.Data.DataRow&quot; /&gt; objects.">将因更新失败而导致生成此异常的 <see cref="T:System.Data.DataRow" /> 对象复制到指定的 <see cref="T:System.Data.DataRow" /> 对象数组。</summary>
      <param name="array" vsli:raw="The one-dimensional array of &lt;see cref=&quot;T:System.Data.DataRow&quot; /&gt; objects to copy the &lt;see cref=&quot;T:System.Data.DataRow&quot; /&gt; objects into.">要向其中复制 <see cref="T:System.Data.DataRow" /> 对象的一维的 <see cref="T:System.Data.DataRow" /> 对象数组。</param>
    </member>
    <member name="M:System.Data.DBConcurrencyException.CopyToRows(System.Data.DataRow[],System.Int32)">
      <summary vsli:raw="Copies the &lt;see cref=&quot;T:System.Data.DataRow&quot; /&gt; objects whose update failure generated this exception, to the specified array of &lt;see cref=&quot;T:System.Data.DataRow&quot; /&gt; objects, starting at the specified destination array index.">将因更新失败而导致生成此异常的 <see cref="T:System.Data.DataRow" /> 对象复制到指定的 <see cref="T:System.Data.DataRow" /> 对象数组（从指定的目标数组索引开始）。</summary>
      <param name="array" vsli:raw="The one-dimensional array of &lt;see cref=&quot;T:System.Data.DataRow&quot; /&gt; objects to copy the &lt;see cref=&quot;T:System.Data.DataRow&quot; /&gt; objects into.">要向其中复制 <see cref="T:System.Data.DataRow" /> 对象的一维的 <see cref="T:System.Data.DataRow" /> 对象数组。</param>
      <param name="arrayIndex" vsli:raw="The destination array index to start copying into.">从其所在位置开始复制对象的目标数组索引。</param>
    </member>
    <member name="M:System.Data.DBConcurrencyException.GetObjectData(System.Runtime.Serialization.SerializationInfo,System.Runtime.Serialization.StreamingContext)">
      <summary vsli:raw="Populates the specified serialization information object with the data needed to serialize the &lt;see cref=&quot;T:System.Data.DBConcurrencyException&quot; /&gt;.">使用序列化 <see cref="T:System.Data.DBConcurrencyException" /> 所需的数据填充指定的序列化信息对象。</summary>
      <param name="info" vsli:raw="A &lt;see cref=&quot;T:System.Runtime.Serialization.SerializationInfo&quot; /&gt; that holds the serialized data associated with the &lt;see cref=&quot;T:System.Data.DBConcurrencyException&quot; /&gt;.">一个 <see cref="T:System.Runtime.Serialization.SerializationInfo" />，它保存与 <see cref="T:System.Data.DBConcurrencyException" /> 关联的序列化数据。</param>
      <param name="context" vsli:raw="A &lt;see cref=&quot;T:System.Runtime.Serialization.StreamingContext&quot; /&gt; that contains the source and destination of the serialized stream associated with the &lt;see cref=&quot;T:System.Data.DBConcurrencyException&quot; /&gt;.">一个 <see cref="T:System.Runtime.Serialization.StreamingContext" />，它包含与 <see cref="T:System.Data.DBConcurrencyException" /> 关联的序列化流的源和目标。</param>
      <exception cref="T:System.ArgumentNullException" vsli:raw="The &lt;paramref name=&quot;info&quot; /&gt; parameter is a null reference (&lt;see langword=&quot;Nothing&quot; /&gt; in Visual Basic).">
        <paramref name="info" /> 参数为 null 引用（在 Visual Basic 中为 <see langword="Nothing" />）。</exception>
    </member>
    <member name="P:System.Data.DBConcurrencyException.Row">
      <summary vsli:raw="Gets or sets the value of the &lt;see cref=&quot;T:System.Data.DataRow&quot; /&gt; that generated the &lt;see cref=&quot;T:System.Data.DBConcurrencyException&quot; /&gt;.">获取或设置生成 <see cref="T:System.Data.DataRow" /> 的 <see cref="T:System.Data.DBConcurrencyException" /> 的值。</summary>
      <returns vsli:raw="The value of the &lt;see cref=&quot;T:System.Data.DataRow&quot; /&gt;.">
        <see cref="T:System.Data.DataRow" /> 的值。</returns>
    </member>
    <member name="P:System.Data.DBConcurrencyException.RowCount">
      <summary vsli:raw="Gets the number of rows whose update failed, generating this exception.">获取更新失败（因而生成此异常）的行数。</summary>
      <returns vsli:raw="An integer containing a count of the number of rows whose update failed.">一个整数，其中包含表示更新失败的行数的计数。</returns>
    </member>
    <member name="T:System.Data.DbType">
      <summary vsli:raw="Specifies the data type of a field, a property, or a &lt;see langword=&quot;Parameter&quot; /&gt; object of a .NET data provider.">指定 .NET Framework 数据提供程序的字段、属性或 <see langword="Parameter" /> 对象的数据类型。</summary>
    </member>
    <member name="F:System.Data.DbType.AnsiString">
      <summary vsli:raw="A variable-length stream of non-Unicode characters ranging between 1 and 8,000 characters.">非 Unicode 字符的可变长度流，范围在 1 到 8,000 个字符之间。</summary>
    </member>
    <member name="F:System.Data.DbType.AnsiStringFixedLength">
      <summary vsli:raw="A fixed-length stream of non-Unicode characters.">非 Unicode 字符的固定长度流。</summary>
    </member>
    <member name="F:System.Data.DbType.Binary">
      <summary vsli:raw="A variable-length stream of binary data ranging between 1 and 8,000 bytes.">二进制数据的可变长度流，范围在 1 到 8,000 个字节之间。</summary>
    </member>
    <member name="F:System.Data.DbType.Boolean">
      <summary vsli:raw="A simple type representing Boolean values of &lt;see langword=&quot;true&quot; /&gt; or &lt;see langword=&quot;false&quot; /&gt;.">简单类型，表示 <see langword="true" /> 或 <see langword="false" /> 的布尔值。</summary>
    </member>
    <member name="F:System.Data.DbType.Byte">
      <summary vsli:raw="An 8-bit unsigned integer ranging in value from 0 to 255.">一个 8 位无符号整数，范围在 0 到 255 之间。</summary>
    </member>
    <member name="F:System.Data.DbType.Currency">
      <summary vsli:raw="A currency value ranging from -2 63 (or -922,337,203,685,477.5808) to 2 63 -1 (or +922,337,203,685,477.5807) with an accuracy to a ten-thousandth of a currency unit.">货币值，范围在 2 63（即 -922,337,203,685,477.5808）到 2 63 -1（即 +922,337,203,685,477.5807）之间，精度为千分之十个货币单位。</summary>
    </member>
    <member name="F:System.Data.DbType.Date">
      <summary vsli:raw="A type representing a date value.">表示日期值的类型。</summary>
    </member>
    <member name="F:System.Data.DbType.DateTime">
      <summary vsli:raw="A type representing a date and time value.">表示一个日期和时间值的类型。</summary>
    </member>
    <member name="F:System.Data.DbType.DateTime2">
      <summary vsli:raw="Date and time data. Date value range is from January 1,1 AD through December 31, 9999 AD. Time value range is 00:00:00 through 23:59:59.9999999 with an accuracy of 100 nanoseconds.">日期和时间数据。 日期值范围从公元 1 年 1 月 1 日到公元 9999 年 12 月 31 日。 时间值范围从 00:00:00 到 23:59:59.9999999，精度为 100 毫微秒。</summary>
    </member>
    <member name="F:System.Data.DbType.DateTimeOffset">
      <summary vsli:raw="Date and time data with time zone awareness. Date value range is from January 1,1 AD through December 31, 9999 AD. Time value range is 00:00:00 through 23:59:59.9999999 with an accuracy of 100 nanoseconds. Time zone value range is -14:00 through +14:00.">显示时区的日期和时间数据。 日期值范围从公元 1 年 1 月 1 日到公元 9999 年 12 月 31 日。 时间值范围从 00:00:00 到 23:59:59.9999999，精度为 100 毫微秒。 时区值范围从 -14:00 到 +14:00。</summary>
    </member>
    <member name="F:System.Data.DbType.Decimal">
      <summary vsli:raw="A simple type representing values ranging from 1.0 x 10 -28 to approximately 7.9 x 10 28 with 28-29 significant digits.">简单类型，表示从 1.0 x 10 -28 到大约 7.9 x 10 28 且有效位数为 28 到 29 位的值。</summary>
    </member>
    <member name="F:System.Data.DbType.Double">
      <summary vsli:raw="A floating point type representing values ranging from approximately 5.0 x 10 -324 to 1.7 x 10 308 with a precision of 15-16 digits.">浮点型，表示从大约 5.0 x 10 -324 到 1.7 x 10 308 且精度为 15 到 16 位的值。</summary>
    </member>
    <member name="F:System.Data.DbType.Guid">
      <summary vsli:raw="A globally unique identifier (or GUID).">全局唯一标识符（或 GUID）。</summary>
    </member>
    <member name="F:System.Data.DbType.Int16">
      <summary vsli:raw="An integral type representing signed 16-bit integers with values between -32768 and 32767.">整型，表示值介于 -32768 到 32767 之间的有符号 16 位整数。</summary>
    </member>
    <member name="F:System.Data.DbType.Int32">
      <summary vsli:raw="An integral type representing signed 32-bit integers with values between -2147483648 and 2147483647.">整型，表示值介于 -2147483648 到 2147483647 之间的 32 位有符号整数。</summary>
    </member>
    <member name="F:System.Data.DbType.Int64">
      <summary vsli:raw="An integral type representing signed 64-bit integers with values between -9223372036854775808 and 9223372036854775807.">整型，表示值介于-9223372036854775808 和 9223372036854775807 之间的 64 位有符号整数。</summary>
    </member>
    <member name="F:System.Data.DbType.Object">
      <summary vsli:raw="A general type representing any reference or value type not explicitly represented by another &lt;see langword=&quot;DbType&quot; /&gt; value.">常规类型，表示任何没有由其他 <see langword="DbType" /> 值显式表示的引用或值类型。</summary>
    </member>
    <member name="F:System.Data.DbType.SByte">
      <summary vsli:raw="An integral type representing signed 8-bit integers with values between -128 and 127.">整型，表示值介于 -128 到 127 之间的 8 位有符号整数。</summary>
    </member>
    <member name="F:System.Data.DbType.Single">
      <summary vsli:raw="A floating point type representing values ranging from approximately 1.5 x 10 -45 to 3.4 x 10 38 with a precision of 7 digits.">浮点型，表示从大约 1.5 x 10 -45 到 3.4 x 10 38 且精度为 7 位的值。</summary>
    </member>
    <member name="F:System.Data.DbType.String">
      <summary vsli:raw="A type representing Unicode character strings.">表示 Unicode 字符串的类型。</summary>
    </member>
    <member name="F:System.Data.DbType.StringFixedLength">
      <summary vsli:raw="A fixed-length string of Unicode characters.">Unicode 字符的定长串。</summary>
    </member>
    <member name="F:System.Data.DbType.Time">
      <summary vsli:raw="A type representing a SQL Server &lt;see langword=&quot;DateTime&quot; /&gt; value. If you want to use a SQL Server &lt;see langword=&quot;time&quot; /&gt; value, use &lt;see cref=&quot;F:System.Data.SqlDbType.Time&quot; /&gt;.">一个表示 SQL Server <see langword="DateTime" /> 值的类型。 如果要使用 SQL Server <see langword="time" /> 值，请使用 <see cref="F:System.Data.SqlDbType.Time" />。</summary>
    </member>
    <member name="F:System.Data.DbType.UInt16">
      <summary vsli:raw="An integral type representing unsigned 16-bit integers with values between 0 and 65535.">整型，表示值介于 0 到 65535 之间的 16 位无符号整数。</summary>
    </member>
    <member name="F:System.Data.DbType.UInt32">
      <summary vsli:raw="An integral type representing unsigned 32-bit integers with values between 0 and 4294967295.">整型，表示值介于 0 到 4294967295 之间的 32 位无符号整数。</summary>
    </member>
    <member name="F:System.Data.DbType.UInt64">
      <summary vsli:raw="An integral type representing unsigned 64-bit integers with values between 0 and 18446744073709551615.">整型，表示值介于 0 到 18446744073709551615 之间的 64 位无符号整数。</summary>
    </member>
    <member name="F:System.Data.DbType.VarNumeric">
      <summary vsli:raw="A variable-length numeric value.">变长数值。</summary>
    </member>
    <member name="F:System.Data.DbType.Xml">
      <summary vsli:raw="A parsed representation of an XML document or fragment.">XML 文档或片段的分析表示。</summary>
    </member>
    <member name="T:System.Data.DeletedRowInaccessibleException">
      <summary vsli:raw="Represents the exception that is thrown when an action is tried on a &lt;see cref=&quot;T:System.Data.DataRow&quot; /&gt; that has been deleted.">表示尝试在已删除的 <see cref="T:System.Data.DataRow" /> 上执行操作时引发的异常。</summary>
    </member>
    <member name="M:System.Data.DeletedRowInaccessibleException.#ctor">
      <summary vsli:raw="Initializes a new instance of the &lt;see cref=&quot;T:System.Data.DeletedRowInaccessibleException&quot; /&gt; class.">初始化 <see cref="T:System.Data.DeletedRowInaccessibleException" /> 类的新实例。</summary>
    </member>
    <member name="M:System.Data.DeletedRowInaccessibleException.#ctor(System.Runtime.Serialization.SerializationInfo,System.Runtime.Serialization.StreamingContext)">
      <summary vsli:raw="Initializes a new instance of the &lt;see cref=&quot;T:System.Data.DeletedRowInaccessibleException&quot; /&gt; class with serialization information.">使用序列化信息初始化 <see cref="T:System.Data.DeletedRowInaccessibleException" /> 类的新实例。</summary>
      <param name="info" vsli:raw="The data that is required to serialize or deserialize an object.">序列化或反序列化对象时所需的数据。</param>
      <param name="context" vsli:raw="Description of the source and destination of the specified serialized stream.">指定的序列化流的源和目标的说明。</param>
    </member>
    <member name="M:System.Data.DeletedRowInaccessibleException.#ctor(System.String)">
      <summary vsli:raw="Initializes a new instance of the &lt;see cref=&quot;T:System.Data.DeletedRowInaccessibleException&quot; /&gt; class with the specified string.">使用指定的字符串初始化 <see cref="T:System.Data.DeletedRowInaccessibleException" /> 类的新实例。</summary>
      <param name="s" vsli:raw="The string to display when the exception is thrown.">引发异常时显示的字符串。</param>
    </member>
    <member name="M:System.Data.DeletedRowInaccessibleException.#ctor(System.String,System.Exception)">
      <summary vsli:raw="Initializes a new instance of the &lt;see cref=&quot;T:System.Data.DeletedRowInaccessibleException&quot; /&gt; class with a specified error message and a reference to the inner exception that is the cause of this exception.">使用指定的错误消息和对作为此异常原因的内部异常的引用来初始化 <see cref="T:System.Data.DeletedRowInaccessibleException" /> 类的新实例。</summary>
      <param name="message" vsli:raw="The error message that explains the reason for the exception.">解释异常原因的错误消息。</param>
      <param name="innerException" vsli:raw="The exception that is the cause of the current exception, or a null reference (&lt;see langword=&quot;Nothing&quot; /&gt; in Visual Basic) if no inner exception is specified.">导致当前异常的异常；如果未指定内部异常，则是一个 null 引用（在 Visual Basic 中为 <see langword="Nothing" />）。</param>
    </member>
    <member name="T:System.Data.DuplicateNameException">
      <summary vsli:raw="Represents the exception that is thrown when a duplicate database object name is encountered during an add operation in a &lt;see cref=&quot;T:System.Data.DataSet&quot; /&gt; -related object.">表示在 <see cref="T:System.Data.DataSet" /> — 相关对象添加操作的过程中，遇到重复的数据库对象名称时引发的异常。</summary>
    </member>
    <member name="M:System.Data.DuplicateNameException.#ctor">
      <summary vsli:raw="Initializes a new instance of the &lt;see cref=&quot;T:System.Data.DuplicateNameException&quot; /&gt; class.">初始化 <see cref="T:System.Data.DuplicateNameException" /> 类的新实例。</summary>
    </member>
    <member name="M:System.Data.DuplicateNameException.#ctor(System.Runtime.Serialization.SerializationInfo,System.Runtime.Serialization.StreamingContext)">
      <summary vsli:raw="Initializes a new instance of the &lt;see cref=&quot;T:System.Data.DuplicateNameException&quot; /&gt; class with serialization information.">使用序列化信息初始化 <see cref="T:System.Data.DuplicateNameException" /> 类的新实例。</summary>
      <param name="info" vsli:raw="The data that is required to serialize or deserialize an object.">序列化或反序列化对象时所需的数据。</param>
      <param name="context" vsli:raw="Description of the source and destination of the specified serialized stream.">指定的序列化流的源和目标的说明。</param>
    </member>
    <member name="M:System.Data.DuplicateNameException.#ctor(System.String)">
      <summary vsli:raw="Initializes a new instance of the &lt;see cref=&quot;T:System.Data.DuplicateNameException&quot; /&gt; class with the specified string.">使用指定的字符串初始化 <see cref="T:System.Data.DuplicateNameException" /> 类的新实例。</summary>
      <param name="s" vsli:raw="The string to display when the exception is thrown.">引发异常时显示的字符串。</param>
    </member>
    <member name="M:System.Data.DuplicateNameException.#ctor(System.String,System.Exception)">
      <summary vsli:raw="Initializes a new instance of the &lt;see cref=&quot;T:System.Data.DuplicateNameException&quot; /&gt; class with the specified string and exception.">使用指定的字符串和异常初始化 <see cref="T:System.Data.DuplicateNameException" /> 类的新实例。</summary>
      <param name="message" vsli:raw="The error message that explains the reason for the exception.">解释异常原因的错误消息。</param>
      <param name="innerException" vsli:raw="The exception that is the cause of the current exception, or a null reference (&lt;see langword=&quot;Nothing&quot; /&gt; in Visual Basic) if no inner exception is specified.">导致当前异常的异常；如果未指定内部异常，则是一个 null 引用（在 Visual Basic 中为 <see langword="Nothing" />）。</param>
    </member>
    <member name="T:System.Data.EnumerableRowCollection">
      <summary vsli:raw="Represents a collection of &lt;see cref=&quot;T:System.Data.DataRow&quot; /&gt; objects returned from a LINQ to DataSet query. This API supports the .NET infrastructure and is not intended to be used directly from your code.">表示从 LINQ to DataSet 查询返回的 <see cref="T:System.Data.DataRow" /> 对象的集合。 此 API 支持 .NET Framework 基础结构，但不应在代码中直接使用。</summary>
    </member>
    <member name="M:System.Data.EnumerableRowCollection.System#Collections#IEnumerable#GetEnumerator">
      <summary vsli:raw="Returns an enumerator for the collection of &lt;see cref=&quot;T:System.Data.DataRow&quot; /&gt; objects. This API supports the .NET infrastructure and is not intended to be used directly from your code.">返回 <see cref="T:System.Data.DataRow" /> 对象集合的枚举数。 此 API 支持 .NET Framework 基础结构，但不应在代码中直接使用。</summary>
      <returns vsli:raw="An &lt;see cref=&quot;T:System.Collections.IEnumerator&quot; /&gt; that can be used to traverse the collection of &lt;see cref=&quot;T:System.Data.DataRow&quot; /&gt; objects.">一个可用于遍历 <see cref="T:System.Collections.IEnumerator" /> 对象的集合的 <see cref="T:System.Data.DataRow" />。</returns>
    </member>
    <member name="T:System.Data.EnumerableRowCollection`1">
      <summary vsli:raw="Represents a collection of &lt;see cref=&quot;T:System.Data.DataRow&quot; /&gt; objects returned from a query.">表示从查询返回的 <see cref="T:System.Data.DataRow" /> 对象的集合。</summary>
      <typeparam name="TRow" vsli:raw="The type of objects in the source sequence, typically &lt;see cref=&quot;T:System.Data.DataRow&quot; /&gt;.">源序列中的对象类型（通常为 <see cref="T:System.Data.DataRow" />）。</typeparam>
    </member>
    <member name="M:System.Data.EnumerableRowCollection`1.GetEnumerator">
      <summary vsli:raw="Returns an enumerator for the collection of contained row objects.">返回包含的行对象集合的枚举数。</summary>
      <returns vsli:raw="A strongly-typed &lt;see cref=&quot;T:System.Collections.Generic.IEnumerator`1&quot; /&gt; that can be used to traverse the collection of &lt;paramref name=&quot;TRow&quot; /&gt; objects.">一个强类型 <see cref="T:System.Collections.Generic.IEnumerator`1" />，可用于遍历 <paramref name="TRow" /> 对象的集合。</returns>
    </member>
    <member name="M:System.Data.EnumerableRowCollection`1.System#Collections#IEnumerable#GetEnumerator">
      <summary vsli:raw="Returns an enumerator for the collection of &lt;see cref=&quot;T:System.Data.DataRow&quot; /&gt; objects.">返回 <see cref="T:System.Data.DataRow" /> 对象集合的枚举数。</summary>
      <returns vsli:raw="An &lt;see cref=&quot;T:System.Collections.IEnumerator&quot; /&gt; that can be used to traverse the collection of &lt;see cref=&quot;T:System.Data.DataRow&quot; /&gt; objects.">一个可用于遍历 <see cref="T:System.Collections.IEnumerator" /> 对象的集合的 <see cref="T:System.Data.DataRow" />。</returns>
    </member>
    <member name="T:System.Data.EnumerableRowCollectionExtensions">
      <summary vsli:raw="Contains the extension methods for the data row collection classes.">包含数据行集合类的扩展方法。</summary>
    </member>
    <member name="M:System.Data.EnumerableRowCollectionExtensions.Cast``1(System.Data.EnumerableRowCollection)">
      <summary vsli:raw="Converts the elements of an &lt;see cref=&quot;T:System.Data.EnumerableRowCollection&quot; /&gt; to the specified type.">将 <see cref="T:System.Data.EnumerableRowCollection" /> 的元素转换为指定的类型。</summary>
      <param name="source" vsli:raw="The &lt;see cref=&quot;T:System.Data.EnumerableRowCollection&quot; /&gt; that contains the elements to be converted.">包含要转换的元素的 <see cref="T:System.Data.EnumerableRowCollection" />。</param>
      <typeparam name="TResult" vsli:raw="The type to convert the elements of source to.">源中的元素要转换成的类型。</typeparam>
      <exception cref="T:System.ArgumentNullException" vsli:raw="&lt;paramref name=&quot;source&quot; /&gt; is &lt;see langword=&quot;null&quot; /&gt;.">
        <paramref name="source" /> 为 <see langword="null" />。</exception>
      <exception cref="T:System.InvalidCastException" vsli:raw="An element in the sequence cannot be cast to type &lt;paramref name=&quot;TResult&quot; /&gt;.">序列中的元素不能强制转换为 <paramref name="TResult" /> 类型。</exception>
      <returns vsli:raw="An &lt;see cref=&quot;T:System.Data.EnumerableRowCollection&quot; /&gt; that contains each element of the source sequence converted to the specified type.">一个 <see cref="T:System.Data.EnumerableRowCollection" />，其中包含已转换为指定类型的源序列的每个元素。</returns>
    </member>
    <member name="M:System.Data.EnumerableRowCollectionExtensions.OrderBy``2(System.Data.EnumerableRowCollection{``0},System.Func{``0,``1})">
      <summary vsli:raw="Sorts the rows of a &lt;see cref=&quot;T:System.Data.EnumerableRowCollection&quot; /&gt; in ascending order according to the specified key.">按指定键升序排序 <see cref="T:System.Data.EnumerableRowCollection" /> 的行。</summary>
      <param name="source" vsli:raw="An &lt;see cref=&quot;T:System.Data.EnumerableRowCollection&quot; /&gt; containing the &lt;see cref=&quot;T:System.Data.DataRow&quot; /&gt; elements to be ordered.">包含要排序的 <see cref="T:System.Data.EnumerableRowCollection" /> 元素的 <see cref="T:System.Data.DataRow" />。</param>
      <param name="keySelector" vsli:raw="A function to extract a key from an element.">用于从元素中提取键的函数。</param>
      <typeparam name="TRow" vsli:raw="The type of the row elements in &lt;paramref name=&quot;source&quot; /&gt;, typically &lt;see cref=&quot;T:System.Data.DataRow&quot; /&gt;.">
        <paramref name="source" /> 中行元素的类型，通常为 <see cref="T:System.Data.DataRow" />。</typeparam>
      <typeparam name="TKey" vsli:raw="The type of the key returned by &lt;paramref name=&quot;keySelector&quot; /&gt;.">
        <paramref name="keySelector" /> 返回的键的类型。</typeparam>
      <returns vsli:raw="An &lt;see cref=&quot;T:System.Data.OrderedEnumerableRowCollection`1&quot; /&gt; whose elements are sorted by the specified key.">一个 <see cref="T:System.Data.OrderedEnumerableRowCollection`1" />，其元素按指定键排序。</returns>
    </member>
    <member name="M:System.Data.EnumerableRowCollectionExtensions.OrderBy``2(System.Data.EnumerableRowCollection{``0},System.Func{``0,``1},System.Collections.Generic.IComparer{``1})">
      <summary vsli:raw="Sorts the rows of a &lt;see cref=&quot;T:System.Data.EnumerableRowCollection&quot; /&gt; in ascending order according to the specified key and comparer.">按指定键和比较器升序排序 <see cref="T:System.Data.EnumerableRowCollection" /> 的行。</summary>
      <param name="source" vsli:raw="An &lt;see cref=&quot;T:System.Data.EnumerableRowCollection&quot; /&gt; containing the &lt;see cref=&quot;T:System.Data.DataRow&quot; /&gt; elements to be ordered.">包含要排序的 <see cref="T:System.Data.EnumerableRowCollection" /> 元素的 <see cref="T:System.Data.DataRow" />。</param>
      <param name="keySelector" vsli:raw="A function to extract a key from an element.">用于从元素中提取键的函数。</param>
      <param name="comparer" vsli:raw="An &lt;see cref=&quot;T:System.Collections.Generic.IComparer`1&quot; /&gt; to compare keys.">用于比较键的 <see cref="T:System.Collections.Generic.IComparer`1" />。</param>
      <typeparam name="TRow" vsli:raw="The type of the row elements in &lt;paramref name=&quot;source&quot; /&gt;, typically &lt;see cref=&quot;T:System.Data.DataRow&quot; /&gt;.">
        <paramref name="source" /> 中行元素的类型，通常为 <see cref="T:System.Data.DataRow" />。</typeparam>
      <typeparam name="TKey" vsli:raw="The type of the key returned by &lt;paramref name=&quot;keySelector&quot; /&gt;.">
        <paramref name="keySelector" /> 返回的键的类型。</typeparam>
      <returns vsli:raw="An &lt;see cref=&quot;T:System.Data.OrderedEnumerableRowCollection`1&quot; /&gt; whose elements are sorted by the specified key and comparer.">一个 <see cref="T:System.Data.OrderedEnumerableRowCollection`1" />，其元素按指定键和比较器排序。</returns>
    </member>
    <member name="M:System.Data.EnumerableRowCollectionExtensions.OrderByDescending``2(System.Data.EnumerableRowCollection{``0},System.Func{``0,``1})">
      <summary vsli:raw="Sorts the rows of a &lt;see cref=&quot;T:System.Data.EnumerableRowCollection&quot; /&gt; in descending order according to the specified key.">按指定键降序排序 <see cref="T:System.Data.EnumerableRowCollection" /> 的行。</summary>
      <param name="source" vsli:raw="An &lt;see cref=&quot;T:System.Data.EnumerableRowCollection&quot; /&gt; containing the &lt;see cref=&quot;T:System.Data.DataRow&quot; /&gt; elements to be ordered.">包含要排序的 <see cref="T:System.Data.EnumerableRowCollection" /> 元素的 <see cref="T:System.Data.DataRow" />。</param>
      <param name="keySelector" vsli:raw="A function to extract a key from an element.">用于从元素中提取键的函数。</param>
      <typeparam name="TRow" vsli:raw="The type of the row elements in &lt;paramref name=&quot;source&quot; /&gt;, typically &lt;see cref=&quot;T:System.Data.DataRow&quot; /&gt;.">
        <paramref name="source" /> 中行元素的类型，通常为 <see cref="T:System.Data.DataRow" />。</typeparam>
      <typeparam name="TKey" vsli:raw="The type of the key returned by &lt;paramref name=&quot;keySelector&quot; /&gt;.">
        <paramref name="keySelector" /> 返回的键的类型。</typeparam>
      <returns vsli:raw="An &lt;see cref=&quot;T:System.Data.OrderedEnumerableRowCollection`1&quot; /&gt; whose elements are sorted by the specified key.">一个 <see cref="T:System.Data.OrderedEnumerableRowCollection`1" />，其元素按指定键排序。</returns>
    </member>
    <member name="M:System.Data.EnumerableRowCollectionExtensions.OrderByDescending``2(System.Data.EnumerableRowCollection{``0},System.Func{``0,``1},System.Collections.Generic.IComparer{``1})">
      <summary vsli:raw="Sorts the rows of a &lt;see cref=&quot;T:System.Data.EnumerableRowCollection&quot; /&gt; in descending order according to the specified key and comparer.">按指定键和比较器降序排序 <see cref="T:System.Data.EnumerableRowCollection" /> 的行。</summary>
      <param name="source" vsli:raw="An &lt;see cref=&quot;T:System.Data.EnumerableRowCollection&quot; /&gt; containing the &lt;see cref=&quot;T:System.Data.DataRow&quot; /&gt; elements to be ordered.">包含要排序的 <see cref="T:System.Data.EnumerableRowCollection" /> 元素的 <see cref="T:System.Data.DataRow" />。</param>
      <param name="keySelector" vsli:raw="A function to extract a key from an element.">用于从元素中提取键的函数。</param>
      <param name="comparer" vsli:raw="An &lt;see cref=&quot;T:System.Collections.Generic.IComparer`1&quot; /&gt; to compare keys.">用于比较键的 <see cref="T:System.Collections.Generic.IComparer`1" />。</param>
      <typeparam name="TRow" vsli:raw="The type of the row elements in &lt;paramref name=&quot;source&quot; /&gt;, typically &lt;see cref=&quot;T:System.Data.DataRow&quot; /&gt;.">
        <paramref name="source" /> 中行元素的类型，通常为 <see cref="T:System.Data.DataRow" />。</typeparam>
      <typeparam name="TKey" vsli:raw="The type of the key returned by &lt;paramref name=&quot;keySelector&quot; /&gt;.">
        <paramref name="keySelector" /> 返回的键的类型。</typeparam>
      <returns vsli:raw="An &lt;see cref=&quot;T:System.Data.OrderedEnumerableRowCollection`1&quot; /&gt; whose elements are sorted by the specified key and comparer.">一个 <see cref="T:System.Data.OrderedEnumerableRowCollection`1" />，其元素按指定键和比较器排序。</returns>
    </member>
    <member name="M:System.Data.EnumerableRowCollectionExtensions.Select``2(System.Data.EnumerableRowCollection{``0},System.Func{``0,``1})">
      <summary vsli:raw="Projects each element of an &lt;see cref=&quot;T:System.Data.EnumerableRowCollection`1&quot; /&gt; into a new form.">将 <see cref="T:System.Data.EnumerableRowCollection`1" /> 中的每个元素投影到新窗体。</summary>
      <param name="source" vsli:raw="An &lt;see cref=&quot;T:System.Data.EnumerableRowCollection`1&quot; /&gt; containing the &lt;see cref=&quot;T:System.Data.DataRow&quot; /&gt; elements to invoke a transform function upon.">一个 <see cref="T:System.Data.EnumerableRowCollection`1" />，其中包含要对其调用转换函数的 <see cref="T:System.Data.DataRow" /> 元素。</param>
      <param name="selector" vsli:raw="A transform function to apply to each element.">应用于每个元素的转换函数。</param>
      <typeparam name="TRow" vsli:raw="The type of the row elements in &lt;paramref name=&quot;source&quot; /&gt;, typically &lt;see cref=&quot;T:System.Data.DataRow&quot; /&gt;.">
        <paramref name="source" /> 中行元素的类型，通常为 <see cref="T:System.Data.DataRow" />。</typeparam>
      <typeparam name="S" vsli:raw="The type that &lt;paramref name=&quot;TRow&quot; /&gt; will be transformed into.">
        <paramref name="TRow" /> 将转换成的类型。</typeparam>
      <returns vsli:raw="An &lt;see cref=&quot;T:System.Data.EnumerableRowCollection`1&quot; /&gt; whose elements are the result of invoking the transform function on each element of &lt;paramref name=&quot;source&quot; /&gt;.">一个 <see cref="T:System.Data.EnumerableRowCollection`1" />，其元素是对 <paramref name="source" /> 的每个元素调用转换函数得到的结果。</returns>
    </member>
    <member name="M:System.Data.EnumerableRowCollectionExtensions.ThenBy``2(System.Data.OrderedEnumerableRowCollection{``0},System.Func{``0,``1})">
      <summary vsli:raw="Performs a secondary ordering of the rows of a &lt;see cref=&quot;T:System.Data.EnumerableRowCollection&quot; /&gt; in ascending order according to the specified key.">根据指定键按升序对 <see cref="T:System.Data.EnumerableRowCollection" /> 的行进行次要排序。</summary>
      <param name="source" vsli:raw="An &lt;see cref=&quot;T:System.Data.EnumerableRowCollection&quot; /&gt; containing the &lt;see cref=&quot;T:System.Data.DataRow&quot; /&gt; elements to be ordered.">包含要排序的 <see cref="T:System.Data.EnumerableRowCollection" /> 元素的 <see cref="T:System.Data.DataRow" />。</param>
      <param name="keySelector" vsli:raw="A function to extract a key from an element.">用于从元素中提取键的函数。</param>
      <typeparam name="TRow" vsli:raw="The type of the row elements in &lt;paramref name=&quot;source&quot; /&gt;, typically &lt;see cref=&quot;T:System.Data.DataRow&quot; /&gt;.">
        <paramref name="source" /> 中行元素的类型，通常为 <see cref="T:System.Data.DataRow" />。</typeparam>
      <typeparam name="TKey" vsli:raw="The type of the key returned by &lt;paramref name=&quot;keySelector&quot; /&gt;.">
        <paramref name="keySelector" /> 返回的键的类型。</typeparam>
      <returns vsli:raw="An &lt;see cref=&quot;T:System.Data.OrderedEnumerableRowCollection`1&quot; /&gt; whose elements are sorted by the specified key.">一个 <see cref="T:System.Data.OrderedEnumerableRowCollection`1" />，其元素按指定键排序。</returns>
    </member>
    <member name="M:System.Data.EnumerableRowCollectionExtensions.ThenBy``2(System.Data.OrderedEnumerableRowCollection{``0},System.Func{``0,``1},System.Collections.Generic.IComparer{``1})">
      <summary vsli:raw="Performs a secondary ordering of the rows of a &lt;see cref=&quot;T:System.Data.EnumerableRowCollection&quot; /&gt; in ascending order according to the specified key and comparer.">根据指定键和比较器按升序对 <see cref="T:System.Data.EnumerableRowCollection" /> 的行进行次要排序。</summary>
      <param name="source" vsli:raw="An &lt;see cref=&quot;T:System.Data.EnumerableRowCollection&quot; /&gt; containing the &lt;see cref=&quot;T:System.Data.DataRow&quot; /&gt; elements to be ordered.">包含要排序的 <see cref="T:System.Data.EnumerableRowCollection" /> 元素的 <see cref="T:System.Data.DataRow" />。</param>
      <param name="keySelector" vsli:raw="A function to extract a key from an element.">用于从元素中提取键的函数。</param>
      <param name="comparer" vsli:raw="An &lt;see cref=&quot;T:System.Collections.Generic.IComparer`1&quot; /&gt; to compare keys.">用于比较键的 <see cref="T:System.Collections.Generic.IComparer`1" />。</param>
      <typeparam name="TRow" vsli:raw="The type of the row elements in &lt;paramref name=&quot;source&quot; /&gt;, typically &lt;see cref=&quot;T:System.Data.DataRow&quot; /&gt;.">
        <paramref name="source" /> 中行元素的类型，通常为 <see cref="T:System.Data.DataRow" />。</typeparam>
      <typeparam name="TKey" vsli:raw="The type of the key returned by &lt;paramref name=&quot;keySelector&quot; /&gt;.">
        <paramref name="keySelector" /> 返回的键的类型。</typeparam>
      <returns vsli:raw="An &lt;see cref=&quot;T:System.Data.OrderedEnumerableRowCollection`1&quot; /&gt; whose elements are sorted by the specified key and comparer.">一个 <see cref="T:System.Data.OrderedEnumerableRowCollection`1" />，其元素按指定键和比较器排序。</returns>
    </member>
    <member name="M:System.Data.EnumerableRowCollectionExtensions.ThenByDescending``2(System.Data.OrderedEnumerableRowCollection{``0},System.Func{``0,``1})">
      <summary vsli:raw="Performs a secondary ordering of the rows of a &lt;see cref=&quot;T:System.Data.EnumerableRowCollection&quot; /&gt; in descending order according to the specified key.">根据指定键按降序对 <see cref="T:System.Data.EnumerableRowCollection" /> 的行进行次要排序。</summary>
      <param name="source" vsli:raw="An &lt;see cref=&quot;T:System.Data.EnumerableRowCollection&quot; /&gt; containing the &lt;see cref=&quot;T:System.Data.DataRow&quot; /&gt; elements to be ordered.">包含要排序的 <see cref="T:System.Data.EnumerableRowCollection" /> 元素的 <see cref="T:System.Data.DataRow" />。</param>
      <param name="keySelector" vsli:raw="A function to extract a key from an element.">用于从元素中提取键的函数。</param>
      <typeparam name="TRow" vsli:raw="The type of the row elements in &lt;paramref name=&quot;source&quot; /&gt;, typically &lt;see cref=&quot;T:System.Data.DataRow&quot; /&gt;.">
        <paramref name="source" /> 中行元素的类型，通常为 <see cref="T:System.Data.DataRow" />。</typeparam>
      <typeparam name="TKey" vsli:raw="The type of the key returned by &lt;paramref name=&quot;keySelector&quot; /&gt;.">
        <paramref name="keySelector" /> 返回的键的类型。</typeparam>
      <returns vsli:raw="An &lt;see cref=&quot;T:System.Data.OrderedEnumerableRowCollection`1&quot; /&gt; whose elements are sorted by the specified key.">一个 <see cref="T:System.Data.OrderedEnumerableRowCollection`1" />，其元素按指定键排序。</returns>
    </member>
    <member name="M:System.Data.EnumerableRowCollectionExtensions.ThenByDescending``2(System.Data.OrderedEnumerableRowCollection{``0},System.Func{``0,``1},System.Collections.Generic.IComparer{``1})">
      <summary vsli:raw="Performs a secondary ordering of the rows of a &lt;see cref=&quot;T:System.Data.EnumerableRowCollection&quot; /&gt; in descending order according to the specified key and comparer.">根据指定键和比较器按降序对 <see cref="T:System.Data.EnumerableRowCollection" /> 的行进行次要排序。</summary>
      <param name="source" vsli:raw="An &lt;see cref=&quot;T:System.Data.EnumerableRowCollection&quot; /&gt; containing the &lt;see cref=&quot;T:System.Data.DataRow&quot; /&gt; elements to be ordered.">包含要排序的 <see cref="T:System.Data.EnumerableRowCollection" /> 元素的 <see cref="T:System.Data.DataRow" />。</param>
      <param name="keySelector" vsli:raw="A function to extract a key from an element.">用于从元素中提取键的函数。</param>
      <param name="comparer" vsli:raw="An &lt;see cref=&quot;T:System.Collections.Generic.IComparer`1&quot; /&gt; to compare keys.">用于比较键的 <see cref="T:System.Collections.Generic.IComparer`1" />。</param>
      <typeparam name="TRow" vsli:raw="The type of the row elements in &lt;paramref name=&quot;source&quot; /&gt;, typically &lt;see cref=&quot;T:System.Data.DataRow&quot; /&gt;.">
        <paramref name="source" /> 中行元素的类型，通常为 <see cref="T:System.Data.DataRow" />。</typeparam>
      <typeparam name="TKey" vsli:raw="The type of the key returned by &lt;paramref name=&quot;keySelector&quot; /&gt;.">
        <paramref name="keySelector" /> 返回的键的类型。</typeparam>
      <returns vsli:raw="An &lt;see cref=&quot;T:System.Data.OrderedEnumerableRowCollection`1&quot; /&gt; whose elements are sorted by the specified key and comparer.">一个 <see cref="T:System.Data.OrderedEnumerableRowCollection`1" />，其元素按指定键和比较器排序。</returns>
    </member>
    <member name="M:System.Data.EnumerableRowCollectionExtensions.Where``1(System.Data.EnumerableRowCollection{``0},System.Func{``0,System.Boolean})">
      <summary vsli:raw="Filters a sequence of rows based on the specified predicate.">按指定谓词筛选行序列。</summary>
      <param name="source" vsli:raw="An &lt;see cref=&quot;T:System.Data.EnumerableRowCollection&quot; /&gt; containing the &lt;see cref=&quot;T:System.Data.DataRow&quot; /&gt; elements to filter.">包含要筛选的 <see cref="T:System.Data.EnumerableRowCollection" /> 元素的 <see cref="T:System.Data.DataRow" />。</param>
      <param name="predicate" vsli:raw="A function to test each element for a condition.">用于测试每个元素是否满足条件的函数。</param>
      <typeparam name="TRow" vsli:raw="The type of the row elements in &lt;paramref name=&quot;source&quot; /&gt;, typically &lt;see cref=&quot;T:System.Data.DataRow&quot; /&gt;.">
        <paramref name="source" /> 中行元素的类型，通常为 <see cref="T:System.Data.DataRow" />。</typeparam>
      <returns vsli:raw="An &lt;see cref=&quot;T:System.Data.OrderedEnumerableRowCollection`1&quot; /&gt; that contains rows from the input sequence that satisfy the condition.">一个 <see cref="T:System.Data.OrderedEnumerableRowCollection`1" />，其中包含输入序列中满足该条件的行。</returns>
    </member>
    <member name="T:System.Data.EvaluateException">
      <summary vsli:raw="Represents the exception that is thrown when the &lt;see cref=&quot;P:System.Data.DataColumn.Expression&quot; /&gt; property of a &lt;see cref=&quot;T:System.Data.DataColumn&quot; /&gt; cannot be evaluated.">表示无法计算 <see cref="T:System.Data.DataColumn" /> 的 <see cref="P:System.Data.DataColumn.Expression" /> 属性时引发的异常。</summary>
    </member>
    <member name="M:System.Data.EvaluateException.#ctor">
      <summary vsli:raw="Initializes a new instance of the &lt;see cref=&quot;T:System.Data.EvaluateException&quot; /&gt; class.">初始化 <see cref="T:System.Data.EvaluateException" /> 类的新实例。</summary>
    </member>
    <member name="M:System.Data.EvaluateException.#ctor(System.Runtime.Serialization.SerializationInfo,System.Runtime.Serialization.StreamingContext)">
      <summary vsli:raw="Initializes a new instance of the &lt;see cref=&quot;T:System.Data.EvaluateException&quot; /&gt; class with the &lt;see cref=&quot;T:System.Runtime.Serialization.SerializationInfo&quot; /&gt; and the &lt;see cref=&quot;T:System.Runtime.Serialization.StreamingContext&quot; /&gt;.">使用 <see cref="T:System.Runtime.Serialization.SerializationInfo" /> 和 <see cref="T:System.Runtime.Serialization.StreamingContext" /> 初始化 <see cref="T:System.Data.EvaluateException" /> 类的新实例。</summary>
      <param name="info" vsli:raw="The data needed to serialize or deserialize an object.">序列化或反序列化对象所需的数据。</param>
      <param name="context" vsli:raw="The source and destination of a particular serialized stream.">特定序列化流的源和目标。</param>
    </member>
    <member name="M:System.Data.EvaluateException.#ctor(System.String)">
      <summary vsli:raw="Initializes a new instance of the &lt;see cref=&quot;T:System.Data.EvaluateException&quot; /&gt; class with the specified string.">使用指定的字符串初始化 <see cref="T:System.Data.EvaluateException" /> 类的新实例。</summary>
      <param name="s" vsli:raw="The string to display when the exception is thrown.">引发异常时显示的字符串。</param>
    </member>
    <member name="M:System.Data.EvaluateException.#ctor(System.String,System.Exception)">
      <summary vsli:raw="Initializes a new instance of the &lt;see cref=&quot;T:System.Data.EvaluateException&quot; /&gt; class with a specified error message and a reference to the inner exception that is the cause of this exception.">使用指定的错误消息和对作为此异常原因的内部异常的引用来初始化 <see cref="T:System.Data.EvaluateException" /> 类的新实例。</summary>
      <param name="message" vsli:raw="The error message that explains the reason for the exception.">解释异常原因的错误消息。</param>
      <param name="innerException" vsli:raw="The exception that is the cause of the current exception, or a null reference (&lt;see langword=&quot;Nothing&quot; /&gt; in Visual Basic) if no inner exception is specified.">导致当前异常的异常；如果未指定内部异常，则是一个 null 引用（在 Visual Basic 中为 <see langword="Nothing" />）。</param>
    </member>
    <member name="T:System.Data.FillErrorEventArgs">
      <summary vsli:raw="Provides data for the &lt;see cref=&quot;E:System.Data.Common.DataAdapter.FillError&quot; /&gt; event of a &lt;see cref=&quot;T:System.Data.Common.DbDataAdapter&quot; /&gt;.">为 <see cref="T:System.Data.Common.DbDataAdapter" /> 的 <see cref="E:System.Data.Common.DataAdapter.FillError" /> 事件提供数据。</summary>
    </member>
    <member name="M:System.Data.FillErrorEventArgs.#ctor(System.Data.DataTable,System.Object[])">
      <summary vsli:raw="Initializes a new instance of the &lt;see cref=&quot;T:System.Data.FillErrorEventArgs&quot; /&gt; class.">初始化 <see cref="T:System.Data.FillErrorEventArgs" /> 类的新实例。</summary>
      <param name="dataTable" vsli:raw="The &lt;see cref=&quot;T:System.Data.DataTable&quot; /&gt; being updated.">正在更新的 <see cref="T:System.Data.DataTable" />。</param>
      <param name="values" vsli:raw="The values for the row being updated.">正在更新的行的值。</param>
    </member>
    <member name="P:System.Data.FillErrorEventArgs.Continue">
      <summary vsli:raw="Gets or sets a value indicating whether to continue the fill operation despite the error.">获取或设置一个值，指示是否继续执行填充操作而不考虑该错误。</summary>
      <returns vsli:raw="&lt;see langword=&quot;true&quot; /&gt; if the fill operation should continue; otherwise, &lt;see langword=&quot;false&quot; /&gt;.">如果应该继续执行填充操作，则 <see langword="true" />；否则为 <see langword="false" />。</returns>
    </member>
    <member name="P:System.Data.FillErrorEventArgs.DataTable">
      <summary vsli:raw="Gets the &lt;see cref=&quot;T:System.Data.DataTable&quot; /&gt; being updated when the error occurred.">获取发生错误时正在更新的 <see cref="T:System.Data.DataTable" />。</summary>
      <returns vsli:raw="The &lt;see cref=&quot;T:System.Data.DataTable&quot; /&gt; being updated.">正在更新的 <see cref="T:System.Data.DataTable" />。</returns>
    </member>
    <member name="P:System.Data.FillErrorEventArgs.Errors">
      <summary vsli:raw="Gets the errors being handled.">获取正在处理的错误。</summary>
      <returns vsli:raw="The errors being handled.">正在处理的错误。</returns>
    </member>
    <member name="P:System.Data.FillErrorEventArgs.Values">
      <summary vsli:raw="Gets the values for the row being updated when the error occurred.">获取发生错误时正在更新的行的值。</summary>
      <returns vsli:raw="The values for the row being updated.">正在更新的行的值。</returns>
    </member>
    <member name="T:System.Data.FillErrorEventHandler">
      <summary vsli:raw="Represents the method that will handle the &lt;see cref=&quot;E:System.Data.Common.DataAdapter.FillError&quot; /&gt; event.">表示用来处理 <see cref="E:System.Data.Common.DataAdapter.FillError" /> 事件的方法。</summary>
      <param name="sender" vsli:raw="The source of the event.">事件源。</param>
      <param name="e" vsli:raw="The &lt;see cref=&quot;T:System.Data.FillErrorEventArgs&quot; /&gt; that contains the event data.">包含事件数据的 <see cref="T:System.Data.FillErrorEventArgs" />。</param>
    </member>
    <member name="T:System.Data.ForeignKeyConstraint">
      <summary vsli:raw="Represents an action restriction enforced on a set of columns in a primary key/foreign key relationship when a value or row is either deleted or updated.">表示删除或更新某个值或行时，对主键/外键关系中一组列强制进行的操作限制。</summary>
    </member>
    <member name="M:System.Data.ForeignKeyConstraint.#ctor(System.Data.DataColumn,System.Data.DataColumn)">
      <summary vsli:raw="Initializes a new instance of the &lt;see cref=&quot;T:System.Data.ForeignKeyConstraint&quot; /&gt; class with the specified parent and child &lt;see cref=&quot;T:System.Data.DataColumn&quot; /&gt; objects.">使用指定的父级和子级 <see cref="T:System.Data.ForeignKeyConstraint" /> 对象初始化 <see cref="T:System.Data.DataColumn" /> 类的新实例。</summary>
      <param name="parentColumn" vsli:raw="The parent &lt;see cref=&quot;T:System.Data.DataColumn&quot; /&gt; in the constraint.">约束中的父级 <see cref="T:System.Data.DataColumn" />。</param>
      <param name="childColumn" vsli:raw="The child &lt;see cref=&quot;T:System.Data.DataColumn&quot; /&gt; in the constraint.">约束中的子级 <see cref="T:System.Data.DataColumn" />。</param>
      <exception cref="T:System.ArgumentNullException" vsli:raw="One or both of the columns is &lt;see langword=&quot;null&quot; /&gt;.">其中一列是或两列都是 <see langword="null" />。</exception>
      <exception cref="T:System.Data.InvalidConstraintException" vsli:raw="The columns have different data types.  &#xA;  &#xA; -Or -  &#xA;  &#xA; The tables don't belong to the same &lt;see cref=&quot;T:System.Data.DataSet&quot; /&gt;.">列具有不同的数据类型。  
  
- 或 - 
表不属于同一 <see cref="T:System.Data.DataSet" />。</exception>
    </member>
    <member name="M:System.Data.ForeignKeyConstraint.#ctor(System.Data.DataColumn[],System.Data.DataColumn[])">
      <summary vsli:raw="Initializes a new instance of the &lt;see cref=&quot;T:System.Data.ForeignKeyConstraint&quot; /&gt; class with the specified arrays of parent and child &lt;see cref=&quot;T:System.Data.DataColumn&quot; /&gt; objects.">使用指定的父级和子级 <see cref="T:System.Data.ForeignKeyConstraint" /> 对象的数组，初始化 <see cref="T:System.Data.DataColumn" /> 类的新实例。</summary>
      <param name="parentColumns" vsli:raw="An array of parent &lt;see cref=&quot;T:System.Data.DataColumn&quot; /&gt; in the constraint.">约束中的父级 <see cref="T:System.Data.DataColumn" /> 的数组。</param>
      <param name="childColumns" vsli:raw="An array of child &lt;see cref=&quot;T:System.Data.DataColumn&quot; /&gt; in the constraint.">约束中的子级 <see cref="T:System.Data.DataColumn" /> 的数组。</param>
      <exception cref="T:System.ArgumentNullException" vsli:raw="One or both of the columns is &lt;see langword=&quot;null&quot; /&gt;.">其中一列是或两列都是 <see langword="null" />。</exception>
      <exception cref="T:System.Data.InvalidConstraintException" vsli:raw="The columns have different data types.  &#xA;  &#xA; -Or -  &#xA;  &#xA; The tables don't belong to the same &lt;see cref=&quot;T:System.Data.DataSet&quot; /&gt;.">列具有不同的数据类型。  
  
- 或 - 
表不属于同一 <see cref="T:System.Data.DataSet" />。</exception>
    </member>
    <member name="M:System.Data.ForeignKeyConstraint.#ctor(System.String,System.Data.DataColumn,System.Data.DataColumn)">
      <summary vsli:raw="Initializes a new instance of the &lt;see cref=&quot;T:System.Data.ForeignKeyConstraint&quot; /&gt; class with the specified name, parent and child &lt;see cref=&quot;T:System.Data.DataColumn&quot; /&gt; objects.">使用指定的名称、父级和子级 <see cref="T:System.Data.ForeignKeyConstraint" /> 对象初始化 <see cref="T:System.Data.DataColumn" /> 类的新实例。</summary>
      <param name="constraintName" vsli:raw="The name of the constraint.">约束的名称。</param>
      <param name="parentColumn" vsli:raw="The parent &lt;see cref=&quot;T:System.Data.DataColumn&quot; /&gt; in the constraint.">约束中的父级 <see cref="T:System.Data.DataColumn" />。</param>
      <param name="childColumn" vsli:raw="The child &lt;see cref=&quot;T:System.Data.DataColumn&quot; /&gt; in the constraint.">约束中的子级 <see cref="T:System.Data.DataColumn" />。</param>
      <exception cref="T:System.ArgumentNullException" vsli:raw="One or both of the columns is &lt;see langword=&quot;null&quot; /&gt;.">其中一列是或两列都是 <see langword="null" />。</exception>
      <exception cref="T:System.Data.InvalidConstraintException" vsli:raw="The columns have different data types.  &#xA;  &#xA; -Or -  &#xA;  &#xA; The tables don't belong to the same &lt;see cref=&quot;T:System.Data.DataSet&quot; /&gt;.">列具有不同的数据类型。  
  
- 或 - 
表不属于同一 <see cref="T:System.Data.DataSet" />。</exception>
    </member>
    <member name="M:System.Data.ForeignKeyConstraint.#ctor(System.String,System.Data.DataColumn[],System.Data.DataColumn[])">
      <summary vsli:raw="Initializes a new instance of the &lt;see cref=&quot;T:System.Data.ForeignKeyConstraint&quot; /&gt; class with the specified name, and arrays of parent and child &lt;see cref=&quot;T:System.Data.DataColumn&quot; /&gt; objects.">使用指定的名称、父级和子级 <see cref="T:System.Data.ForeignKeyConstraint" /> 对象的数组初始化 <see cref="T:System.Data.DataColumn" /> 类的新实例。</summary>
      <param name="constraintName" vsli:raw="The name of the &lt;see cref=&quot;T:System.Data.ForeignKeyConstraint&quot; /&gt;. If &lt;see langword=&quot;null&quot; /&gt; or empty string, a default name will be given when added to the constraints collection.">
        <see cref="T:System.Data.ForeignKeyConstraint" /> 的名称。 当添加到约束集合中时，如果是 <see langword="null" /> 或空字符串，则给出默认名称。</param>
      <param name="parentColumns" vsli:raw="An array of parent &lt;see cref=&quot;T:System.Data.DataColumn&quot; /&gt; in the constraint.">约束中的父级 <see cref="T:System.Data.DataColumn" /> 的数组。</param>
      <param name="childColumns" vsli:raw="An array of child &lt;see cref=&quot;T:System.Data.DataColumn&quot; /&gt; in the constraint.">约束中的子级 <see cref="T:System.Data.DataColumn" /> 的数组。</param>
      <exception cref="T:System.ArgumentNullException" vsli:raw="One or both of the columns is &lt;see langword=&quot;null&quot; /&gt;.">其中一列是或两列都是 <see langword="null" />。</exception>
      <exception cref="T:System.Data.InvalidConstraintException" vsli:raw="The columns have different data types.  &#xA;  &#xA; -Or -  &#xA;  &#xA; The tables don't belong to the same &lt;see cref=&quot;T:System.Data.DataSet&quot; /&gt;.">列具有不同的数据类型。  
  
- 或 - 
表不属于同一 <see cref="T:System.Data.DataSet" />。</exception>
    </member>
    <member name="M:System.Data.ForeignKeyConstraint.#ctor(System.String,System.String,System.String,System.String[],System.String[],System.Data.AcceptRejectRule,System.Data.Rule,System.Data.Rule)">
      <summary vsli:raw="This constructor is provided for design time support in the Visual Studio  environment. &lt;see cref=&quot;T:System.Data.ForeignKeyConstraint&quot; /&gt; objects created by using this constructor must then be added to the collection via &lt;see cref=&quot;M:System.Data.ConstraintCollection.AddRange(System.Data.Constraint[])&quot; /&gt;. Tables and columns with the specified names must exist at the time the method is called, or if &lt;see cref=&quot;M:System.Data.DataTable.BeginInit&quot; /&gt; has been called prior to calling this constructor, the tables and columns with the specified names must exist at the time that &lt;see cref=&quot;M:System.Data.DataTable.EndInit&quot; /&gt; is called.">此构造函数在 Visual Studio 环境中提供设计时支持。 因此，使用此构造函数创建的 <see cref="T:System.Data.ForeignKeyConstraint" /> 对象必须通过 <see cref="M:System.Data.ConstraintCollection.AddRange(System.Data.Constraint[])" /> 添加到集合中。 当调用该方法时，必须存在具有指定名称的表和列，或者如果在调用该构造函数之前已经调用了 <see cref="M:System.Data.DataTable.BeginInit" />，则在调用 <see cref="M:System.Data.DataTable.EndInit" /> 时，必须存在具有指定名称的表和列。</summary>
      <param name="constraintName" vsli:raw="The name of the constraint.">约束的名称。</param>
      <param name="parentTableName" vsli:raw="The name of the parent &lt;see cref=&quot;T:System.Data.DataTable&quot; /&gt; that contains parent &lt;see cref=&quot;T:System.Data.DataColumn&quot; /&gt; objects in the constraint.">在约束中包含父级 <see cref="T:System.Data.DataTable" /> 对象的父级 <see cref="T:System.Data.DataColumn" /> 的名称。</param>
      <param name="parentTableNamespace" vsli:raw="The name of the &lt;see cref=&quot;P:System.Data.DataTable.Namespace&quot; /&gt;.">
        <see cref="P:System.Data.DataTable.Namespace" /> 的名称。</param>
      <param name="parentColumnNames" vsli:raw="An array of the names of parent &lt;see cref=&quot;T:System.Data.DataColumn&quot; /&gt; objects in the constraint.">约束中父级 <see cref="T:System.Data.DataColumn" /> 对象名称的数组。</param>
      <param name="childColumnNames" vsli:raw="An array of the names of child &lt;see cref=&quot;T:System.Data.DataColumn&quot; /&gt; objects in the constraint.">约束中子级 <see cref="T:System.Data.DataColumn" /> 对象名称的数组。</param>
      <param name="acceptRejectRule" vsli:raw="One of the &lt;see cref=&quot;T:System.Data.AcceptRejectRule&quot; /&gt; values. Possible values include &lt;see langword=&quot;None&quot; /&gt;, &lt;see langword=&quot;Cascade&quot; /&gt;, and &lt;see langword=&quot;Default&quot; /&gt;.">
        <see cref="T:System.Data.AcceptRejectRule" /> 值之一。 可能的值包括 <see langword="None" />、<see langword="Cascade" /> 和 <see langword="Default" />。</param>
      <param name="deleteRule" vsli:raw="One of the &lt;see cref=&quot;T:System.Data.Rule&quot; /&gt; values to use when a row is deleted. The default is &lt;see langword=&quot;Cascade&quot; /&gt;. Possible values include: &lt;see langword=&quot;None&quot; /&gt;, &lt;see langword=&quot;Cascade&quot; /&gt;, &lt;see langword=&quot;SetNull&quot; /&gt;, &lt;see langword=&quot;SetDefault&quot; /&gt;, and &lt;see langword=&quot;Default&quot; /&gt;.">当删除某行时要使用 <see cref="T:System.Data.Rule" /> 值之一。 默认值为 <see langword="Cascade" />。 可能的值包括：<see langword="None" />、<see langword="Cascade" />、<see langword="SetNull" />、<see langword="SetDefault" /> 和 <see langword="Default" />。</param>
      <param name="updateRule" vsli:raw="One of the &lt;see cref=&quot;T:System.Data.Rule&quot; /&gt; values to use when a row is updated. The default is &lt;see langword=&quot;Cascade&quot; /&gt;. Possible values include: &lt;see langword=&quot;None&quot; /&gt;, &lt;see langword=&quot;Cascade&quot; /&gt;, &lt;see langword=&quot;SetNull&quot; /&gt;, &lt;see langword=&quot;SetDefault&quot; /&gt;, and &lt;see langword=&quot;Default&quot; /&gt;.">当某一行被更新时，要使用 <see cref="T:System.Data.Rule" /> 值之一。 默认值为 <see langword="Cascade" />。 可能的值包括：<see langword="None" />、<see langword="Cascade" />、<see langword="SetNull" />、<see langword="SetDefault" /> 和 <see langword="Default" />。</param>
      <exception cref="T:System.ArgumentNullException" vsli:raw="One or both of the columns is &lt;see langword=&quot;null&quot; /&gt;.">其中一列是或两列都是 <see langword="null" />。</exception>
      <exception cref="T:System.Data.InvalidConstraintException" vsli:raw="The columns have different data types.  &#xA;  &#xA; -Or -  &#xA;  &#xA; The tables don't belong to the same &lt;see cref=&quot;T:System.Data.DataSet&quot; /&gt;.">列具有不同的数据类型。  
  
- 或 - 
表不属于同一 <see cref="T:System.Data.DataSet" />。</exception>
    </member>
    <member name="M:System.Data.ForeignKeyConstraint.#ctor(System.String,System.String,System.String[],System.String[],System.Data.AcceptRejectRule,System.Data.Rule,System.Data.Rule)">
      <summary vsli:raw="This constructor is provided for design time support in the Visual Studio  environment. &lt;see cref=&quot;T:System.Data.ForeignKeyConstraint&quot; /&gt; objects created by using this constructor must then be added to the collection via &lt;see cref=&quot;M:System.Data.ConstraintCollection.AddRange(System.Data.Constraint[])&quot; /&gt;. Tables and columns with the specified names must exist at the time the method is called, or if &lt;see cref=&quot;M:System.Data.DataTable.BeginInit&quot; /&gt; has been called prior to calling this constructor, the tables and columns with the specified names must exist at the time that &lt;see cref=&quot;M:System.Data.DataTable.EndInit&quot; /&gt; is called.">此构造函数在 Visual Studio 环境中提供设计时支持。 因此，使用此构造函数创建的 <see cref="T:System.Data.ForeignKeyConstraint" /> 对象必须通过 <see cref="M:System.Data.ConstraintCollection.AddRange(System.Data.Constraint[])" /> 添加到集合中。 当调用该方法时，必须存在具有指定名称的表和列，或者如果在调用该构造函数之前已经调用了 <see cref="M:System.Data.DataTable.BeginInit" />，则在调用 <see cref="M:System.Data.DataTable.EndInit" /> 时，必须存在具有指定名称的表和列。</summary>
      <param name="constraintName" vsli:raw="The name of the constraint.">约束的名称。</param>
      <param name="parentTableName" vsli:raw="The name of the parent &lt;see cref=&quot;T:System.Data.DataTable&quot; /&gt; that contains parent &lt;see cref=&quot;T:System.Data.DataColumn&quot; /&gt; objects in the constraint.">在约束中包含父级 <see cref="T:System.Data.DataTable" /> 对象的父级 <see cref="T:System.Data.DataColumn" /> 的名称。</param>
      <param name="parentColumnNames" vsli:raw="An array of the names of parent &lt;see cref=&quot;T:System.Data.DataColumn&quot; /&gt; objects in the constraint.">约束中父级 <see cref="T:System.Data.DataColumn" /> 对象名称的数组。</param>
      <param name="childColumnNames" vsli:raw="An array of the names of child &lt;see cref=&quot;T:System.Data.DataColumn&quot; /&gt; objects in the constraint.">约束中子级 <see cref="T:System.Data.DataColumn" /> 对象名称的数组。</param>
      <param name="acceptRejectRule" vsli:raw="One of the &lt;see cref=&quot;T:System.Data.AcceptRejectRule&quot; /&gt; values. Possible values include &lt;see langword=&quot;None&quot; /&gt;, &lt;see langword=&quot;Cascade&quot; /&gt;, and &lt;see langword=&quot;Default&quot; /&gt;.">
        <see cref="T:System.Data.AcceptRejectRule" /> 值之一。 可能的值包括 <see langword="None" />、<see langword="Cascade" /> 和 <see langword="Default" />。</param>
      <param name="deleteRule" vsli:raw="One of the &lt;see cref=&quot;T:System.Data.Rule&quot; /&gt; values to use when a row is deleted. The default is &lt;see langword=&quot;Cascade&quot; /&gt;. Possible values include: &lt;see langword=&quot;None&quot; /&gt;, &lt;see langword=&quot;Cascade&quot; /&gt;, &lt;see langword=&quot;SetNull&quot; /&gt;, &lt;see langword=&quot;SetDefault&quot; /&gt;, and &lt;see langword=&quot;Default&quot; /&gt;.">当删除某行时要使用 <see cref="T:System.Data.Rule" /> 值之一。 默认值为 <see langword="Cascade" />。 可能的值包括：<see langword="None" />、<see langword="Cascade" />、<see langword="SetNull" />、<see langword="SetDefault" /> 和 <see langword="Default" />。</param>
      <param name="updateRule" vsli:raw="One of the &lt;see cref=&quot;T:System.Data.Rule&quot; /&gt; values to use when a row is updated. The default is &lt;see langword=&quot;Cascade&quot; /&gt;. Possible values include: &lt;see langword=&quot;None&quot; /&gt;, &lt;see langword=&quot;Cascade&quot; /&gt;, &lt;see langword=&quot;SetNull&quot; /&gt;, &lt;see langword=&quot;SetDefault&quot; /&gt;, and &lt;see langword=&quot;Default&quot; /&gt;.">当某一行被更新时，要使用 <see cref="T:System.Data.Rule" /> 值之一。 默认值为 <see langword="Cascade" />。 可能的值包括：<see langword="None" />、<see langword="Cascade" />、<see langword="SetNull" />、<see langword="SetDefault" /> 和 <see langword="Default" />。</param>
      <exception cref="T:System.ArgumentNullException" vsli:raw="One or both of the columns is &lt;see langword=&quot;null&quot; /&gt;.">其中一列是或两列都是 <see langword="null" />。</exception>
      <exception cref="T:System.Data.InvalidConstraintException" vsli:raw="The columns have different data types.  &#xA;  &#xA; -Or -  &#xA;  &#xA; The tables don't belong to the same &lt;see cref=&quot;T:System.Data.DataSet&quot; /&gt;.">列具有不同的数据类型。  
  
- 或 - 
表不属于同一 <see cref="T:System.Data.DataSet" />。</exception>
    </member>
    <member name="M:System.Data.ForeignKeyConstraint.Equals(System.Object)">
      <summary vsli:raw="Gets a value indicating whether the current &lt;see cref=&quot;T:System.Data.ForeignKeyConstraint&quot; /&gt; is identical to the specified object.">获取一个值，该值指示当前的 <see cref="T:System.Data.ForeignKeyConstraint" /> 是否与指定对象相同。</summary>
      <param name="key" vsli:raw="The object to which this &lt;see cref=&quot;T:System.Data.ForeignKeyConstraint&quot; /&gt; is compared. Two &lt;see cref=&quot;T:System.Data.ForeignKeyConstraint&quot; /&gt; are equal if they constrain the same columns.">此 <see cref="T:System.Data.ForeignKeyConstraint" /> 将与之比较的对象。 如果两个 <see cref="T:System.Data.ForeignKeyConstraint" /> 约束相同的列，则它们相等。</param>
      <returns vsli:raw="&lt;see langword=&quot;true&quot; /&gt;, if the objects are identical; otherwise, &lt;see langword=&quot;false&quot; /&gt;.">如果对象相同，则为 <see langword="true" />；否则为 <see langword="false" />。</returns>
    </member>
    <member name="M:System.Data.ForeignKeyConstraint.GetHashCode">
      <summary vsli:raw="Gets the hash code of this instance of the &lt;see cref=&quot;T:System.Data.ForeignKeyConstraint&quot; /&gt; object.">获取 <see cref="T:System.Data.ForeignKeyConstraint" /> 对象的此实例的哈希代码。</summary>
      <returns vsli:raw="A 32-bit signed integer hash code.">32 位有符号整数哈希代码。</returns>
    </member>
    <member name="P:System.Data.ForeignKeyConstraint.AcceptRejectRule">
      <summary vsli:raw="Indicates the action that should take place across this constraint when &lt;see cref=&quot;M:System.Data.DataTable.AcceptChanges&quot; /&gt; is invoked.">指示调用 <see cref="M:System.Data.DataTable.AcceptChanges" /> 时，通过该约束应发生的操作。</summary>
      <returns vsli:raw="One of the &lt;see cref=&quot;T:System.Data.AcceptRejectRule&quot; /&gt; values. Possible values include &lt;see langword=&quot;None&quot; /&gt;, and &lt;see langword=&quot;Cascade&quot; /&gt;. The default is &lt;see langword=&quot;None&quot; /&gt;.">
        <see cref="T:System.Data.AcceptRejectRule" /> 值之一。 可能的值包括 <see langword="None" /> 和 <see langword="Cascade" />。 默认值为 <see langword="None" />。</returns>
    </member>
    <member name="P:System.Data.ForeignKeyConstraint.Columns">
      <summary vsli:raw="Gets the child columns of this constraint.">获取该约束的子列。</summary>
      <returns vsli:raw="An array of &lt;see cref=&quot;T:System.Data.DataColumn&quot; /&gt; objects that are the child columns of the constraint.">作为约束子列的 <see cref="T:System.Data.DataColumn" /> 对象的数组。</returns>
    </member>
    <member name="P:System.Data.ForeignKeyConstraint.DeleteRule">
      <summary vsli:raw="Gets or sets the action that occurs across this constraint when a row is deleted.">获取或设置当删除某一行时通过该约束发生的操作。</summary>
      <returns vsli:raw="One of the &lt;see cref=&quot;T:System.Data.Rule&quot; /&gt; values. The default is &lt;see langword=&quot;Cascade&quot; /&gt;.">
        <see cref="T:System.Data.Rule" /> 值之一。 默认值为 <see langword="Cascade" />。</returns>
    </member>
    <member name="P:System.Data.ForeignKeyConstraint.RelatedColumns">
      <summary vsli:raw="The parent columns of this constraint.">该约束的父列。</summary>
      <returns vsli:raw="An array of &lt;see cref=&quot;T:System.Data.DataColumn&quot; /&gt; objects that are the parent columns of the constraint.">作为约束父列的 <see cref="T:System.Data.DataColumn" /> 对象的数组。</returns>
    </member>
    <member name="P:System.Data.ForeignKeyConstraint.RelatedTable">
      <summary vsli:raw="Gets the parent table of this constraint.">获取该约束的父表。</summary>
      <returns vsli:raw="The parent &lt;see cref=&quot;T:System.Data.DataTable&quot; /&gt; of this constraint.">该约束的父级 <see cref="T:System.Data.DataTable" />。</returns>
    </member>
    <member name="P:System.Data.ForeignKeyConstraint.Table">
      <summary vsli:raw="Gets the child table of this constraint.">获取该约束的子表。</summary>
      <returns vsli:raw="A &lt;see cref=&quot;T:System.Data.DataTable&quot; /&gt; that is the child table in the constraint.">作为该约束中子表的 <see cref="T:System.Data.DataTable" />。</returns>
    </member>
    <member name="P:System.Data.ForeignKeyConstraint.UpdateRule">
      <summary vsli:raw="Gets or sets the action that occurs across this constraint on when a row is updated.">获取或设置当更新某一行时通过该约束发生的操作。</summary>
      <returns vsli:raw="One of the &lt;see cref=&quot;T:System.Data.Rule&quot; /&gt; values. The default is &lt;see langword=&quot;Cascade&quot; /&gt;.">
        <see cref="T:System.Data.Rule" /> 值之一。 默认值为 <see langword="Cascade" />。</returns>
    </member>
    <member name="T:System.Data.IColumnMapping">
      <summary vsli:raw="Associates a data source column with a &lt;see cref=&quot;T:System.Data.DataSet&quot; /&gt; column, and is implemented by the &lt;see cref=&quot;T:System.Data.Common.DataColumnMapping&quot; /&gt; class, which is used in common by .NET data providers.">将数据源列与 <see cref="T:System.Data.DataSet" /> 列关联起来，并由 <see cref="T:System.Data.Common.DataColumnMapping" /> 类实现，这是 .NET Framework 数据提供程序通常使用的方法。</summary>
    </member>
    <member name="P:System.Data.IColumnMapping.DataSetColumn">
      <summary vsli:raw="Gets or sets the name of the column within the &lt;see cref=&quot;T:System.Data.DataSet&quot; /&gt; to map to.">获取或设置 <see cref="T:System.Data.DataSet" /> 中要映射到的列的名称。</summary>
      <returns vsli:raw="The name of the column within the &lt;see cref=&quot;T:System.Data.DataSet&quot; /&gt; to map to. The name is not case sensitive.">
        <see cref="T:System.Data.DataSet" /> 中要映射到的列的名称。 该名称不区分大小写。</returns>
    </member>
    <member name="P:System.Data.IColumnMapping.SourceColumn">
      <summary vsli:raw="Gets or sets the name of the column within the data source to map from. The name is case-sensitive.">获取或设置数据源中从其映射的列的名称。 该名称区分大小写。</summary>
      <returns vsli:raw="The case-sensitive name of the column in the data source.">数据源中列的区分大小写的名称。</returns>
    </member>
    <member name="T:System.Data.IColumnMappingCollection">
      <summary vsli:raw="Contains a collection of DataColumnMapping objects, and is implemented by the &lt;see cref=&quot;T:System.Data.Common.DataColumnMappingCollection&quot; /&gt;, which is used in common by .NET data providers.">包含一个 DataColumnMapping 对象的集合，并由 <see cref="T:System.Data.Common.DataColumnMappingCollection" /> 实现，这是由 .NET Framework 数据提供程序通常使用的方法。</summary>
    </member>
    <member name="M:System.Data.IColumnMappingCollection.Add(System.String,System.String)">
      <summary vsli:raw="Adds a ColumnMapping object to the ColumnMapping collection using the source column and &lt;see cref=&quot;T:System.Data.DataSet&quot; /&gt; column names.">使用源列和 <see cref="T:System.Data.DataSet" /> 列名，将 ColumnMapping 对象添加到 ColumnMapping 集合中。</summary>
      <param name="sourceColumnName" vsli:raw="The case-sensitive name of the source column.">源列的区分大小写的名称。</param>
      <param name="dataSetColumnName" vsli:raw="The name of the &lt;see cref=&quot;T:System.Data.DataSet&quot; /&gt; column.">
        <see cref="T:System.Data.DataSet" /> 列的名称。</param>
      <returns vsli:raw="The ColumnMapping object that was added to the collection.">已添加到集合中的 ColumnMapping 对象。</returns>
    </member>
    <member name="M:System.Data.IColumnMappingCollection.Contains(System.String)">
      <summary vsli:raw="Gets a value indicating whether the &lt;see cref=&quot;T:System.Data.Common.DataColumnMappingCollection&quot; /&gt; contains a &lt;see cref=&quot;T:System.Data.Common.DataColumnMapping&quot; /&gt; object with the specified source column name.">获取一个值，该值指示 <see cref="T:System.Data.Common.DataColumnMappingCollection" /> 是否包含具有指定源列名称的 <see cref="T:System.Data.Common.DataColumnMapping" /> 对象。</summary>
      <param name="sourceColumnName" vsli:raw="The case-sensitive name of the source column.">源列的区分大小写的名称。</param>
      <returns vsli:raw="&lt;see langword=&quot;true&quot; /&gt; if a &lt;see cref=&quot;T:System.Data.Common.DataColumnMapping&quot; /&gt; object with the specified source column name exists, otherwise &lt;see langword=&quot;false&quot; /&gt;.">如果具有指定源列名称的 <see cref="T:System.Data.Common.DataColumnMapping" /> 对象存在，则为 <see langword="true" />；否则为 <see langword="false" />。</returns>
    </member>
    <member name="M:System.Data.IColumnMappingCollection.GetByDataSetColumn(System.String)">
      <summary vsli:raw="Gets the ColumnMapping object with the specified &lt;see cref=&quot;T:System.Data.DataSet&quot; /&gt; column name.">获取具有指定 <see cref="T:System.Data.DataSet" /> 列名的 ColumnMapping 对象。</summary>
      <param name="dataSetColumnName" vsli:raw="The name of the &lt;see cref=&quot;T:System.Data.DataSet&quot; /&gt; column within the collection.">集合中 <see cref="T:System.Data.DataSet" /> 列的名称。</param>
      <returns vsli:raw="The ColumnMapping object with the specified &lt;see langword=&quot;DataSet&quot; /&gt; column name.">具有指定 <see langword="DataSet" /> 列名的 ColumnMapping 对象。</returns>
    </member>
    <member name="M:System.Data.IColumnMappingCollection.IndexOf(System.String)">
      <summary vsli:raw="Gets the location of the &lt;see cref=&quot;T:System.Data.Common.DataColumnMapping&quot; /&gt; object with the specified source column name. The name is case-sensitive.">获取具有指定源列名称的 <see cref="T:System.Data.Common.DataColumnMapping" /> 对象的位置。 该名称区分大小写。</summary>
      <param name="sourceColumnName" vsli:raw="The case-sensitive name of the source column.">源列的区分大小写的名称。</param>
      <returns vsli:raw="The zero-based location of the &lt;see langword=&quot;DataColumnMapping&quot; /&gt; object with the specified source column name.">具有指定源列名称的 <see langword="DataColumnMapping" /> 对象的从零开始的位置。</returns>
    </member>
    <member name="M:System.Data.IColumnMappingCollection.RemoveAt(System.String)">
      <summary vsli:raw="Removes the &lt;see cref=&quot;T:System.Data.IColumnMapping&quot; /&gt; object with the specified &lt;see cref=&quot;P:System.Data.IColumnMapping.SourceColumn&quot; /&gt; name from the collection.">从集合中移除具有指定 <see cref="P:System.Data.IColumnMapping.SourceColumn" /> 名称的 <see cref="T:System.Data.IColumnMapping" /> 对象。</summary>
      <param name="sourceColumnName" vsli:raw="The case-sensitive &lt;see langword=&quot;SourceColumn&quot; /&gt; name.">区分大小写的 <see langword="SourceColumn" /> 名称。</param>
      <exception cref="T:System.IndexOutOfRangeException" vsli:raw="A &lt;see cref=&quot;T:System.Data.Common.DataColumnMapping&quot; /&gt; object does not exist with the specified &lt;see langword=&quot;SourceColumn&quot; /&gt; name.">带有指定的 <see langword="SourceColumn" /> 名称的 <see cref="T:System.Data.Common.DataColumnMapping" /> 对象不存在</exception>
    </member>
    <member name="P:System.Data.IColumnMappingCollection.Item(System.String)">
      <summary vsli:raw="Gets or sets the &lt;see cref=&quot;T:System.Data.IColumnMapping&quot; /&gt; object with the specified &lt;see langword=&quot;SourceColumn&quot; /&gt; name.">获取或设置具有指定 <see langword="SourceColumn" /> 名称的 <see cref="T:System.Data.IColumnMapping" /> 对象。</summary>
      <param name="index" vsli:raw="The &lt;see langword=&quot;SourceColumn&quot; /&gt; name of the &lt;see langword=&quot;IColumnMapping&quot; /&gt; object to find.">要查找的 <see langword="SourceColumn" /> 对象的 <see langword="IColumnMapping" /> 名称。</param>
      <returns vsli:raw="The &lt;see langword=&quot;IColumnMapping&quot; /&gt; object with the specified &lt;see langword=&quot;SourceColumn&quot; /&gt; name.">具有指定 <see langword="IColumnMapping" /> 名称的 <see langword="SourceColumn" /> 对象。</returns>
    </member>
    <member name="T:System.Data.IDataAdapter">
      <summary vsli:raw="Allows an object to implement a DataAdapter, and represents a set of methods and mapping action-related properties that are used to fill and update a &lt;see cref=&quot;T:System.Data.DataSet&quot; /&gt; and update a data source.  &#xA;  &#xA; &lt;see cref=&quot;T:System.Data.IDbDataAdapter&quot; /&gt; instances are for data sources that are (or resemble) relational databases with textual commands (like Transact-SQL), while &lt;see cref=&quot;T:System.Data.IDataAdapter&quot; /&gt; instances could can use any type of data source.">允许对象实现 DataAdapter，并且表示一组用于填充和更新 <see cref="T:System.Data.DataSet" /> 及数据源的方法以及与映射操作有关的属性。  
  
 <see cref="T:System.Data.IDbDataAdapter" /> 实例针对作为（或类似于）具有文字命令（如 Transact-SQL）的关系数据库的数据源，而 <see cref="T:System.Data.IDataAdapter" /> 实例可使用任何类型的数据源。</summary>
    </member>
    <member name="M:System.Data.IDataAdapter.Fill(System.Data.DataSet)">
      <summary vsli:raw="Adds or updates rows in the &lt;see cref=&quot;T:System.Data.DataSet&quot; /&gt; to match those in the data source using the &lt;see cref=&quot;T:System.Data.DataSet&quot; /&gt; name, and creates a &lt;see cref=&quot;T:System.Data.DataTable&quot; /&gt; named &quot;Table&quot;.">添加或更新 <see cref="T:System.Data.DataSet" /> 中的行以匹配使用 <see cref="T:System.Data.DataSet" /> 名称的数据源中的行，并创建一个名为“Table”的 <see cref="T:System.Data.DataTable" />。</summary>
      <param name="dataSet" vsli:raw="A &lt;see cref=&quot;T:System.Data.DataSet&quot; /&gt; to fill with records and, if necessary, schema.">要用记录和架构（如果必要）填充的 <see cref="T:System.Data.DataSet" />。</param>
      <returns vsli:raw="The number of rows successfully added to or refreshed in the &lt;see cref=&quot;T:System.Data.DataSet&quot; /&gt;. This does not include rows affected by statements that do not return rows.">已在 <see cref="T:System.Data.DataSet" /> 中成功添加或刷新的行数。 这不包括受不返回行的语句影响的行。</returns>
    </member>
    <member name="M:System.Data.IDataAdapter.FillSchema(System.Data.DataSet,System.Data.SchemaType)">
      <summary vsli:raw="Adds a &lt;see cref=&quot;T:System.Data.DataTable&quot; /&gt; named &quot;Table&quot; to the specified &lt;see cref=&quot;T:System.Data.DataSet&quot; /&gt; and configures the schema to match that in the data source based on the specified &lt;see cref=&quot;T:System.Data.SchemaType&quot; /&gt;.">将名为“Table”的 <see cref="T:System.Data.DataTable" /> 添加到指定的 <see cref="T:System.Data.DataSet" />，并根据指定的 <see cref="T:System.Data.SchemaType" /> 配置架构以匹配数据源中的架构。</summary>
      <param name="dataSet" vsli:raw="The &lt;see cref=&quot;T:System.Data.DataSet&quot; /&gt; to be filled with the schema from the data source.">要用数据源中的架构填充的 <see cref="T:System.Data.DataSet" />。</param>
      <param name="schemaType" vsli:raw="One of the &lt;see cref=&quot;T:System.Data.SchemaType&quot; /&gt; values.">
        <see cref="T:System.Data.SchemaType" /> 值之一。</param>
      <returns vsli:raw="An array of &lt;see cref=&quot;T:System.Data.DataTable&quot; /&gt; objects that contain schema information returned from the data source.">
        <see cref="T:System.Data.DataTable" /> 对象的数组，这些对象包含从数据源返回的架构信息。</returns>
    </member>
    <member name="M:System.Data.IDataAdapter.GetFillParameters">
      <summary vsli:raw="Gets the parameters set by the user when executing an SQL SELECT statement.">获取当执行 SQL SELECT 语句时由用户设置的参数。</summary>
      <returns vsli:raw="An array of &lt;see cref=&quot;T:System.Data.IDataParameter&quot; /&gt; objects that contains the parameters set by the user.">
        <see cref="T:System.Data.IDataParameter" /> 对象的数组，这些对象包含由用户设置的参数。</returns>
    </member>
    <member name="M:System.Data.IDataAdapter.Update(System.Data.DataSet)">
      <summary vsli:raw="Calls the respective INSERT, UPDATE, or DELETE statements for each inserted, updated, or deleted row in the specified &lt;see cref=&quot;T:System.Data.DataSet&quot; /&gt; from a &lt;see cref=&quot;T:System.Data.DataTable&quot; /&gt; named &quot;Table&quot;.">从名为“Table”的 <see cref="T:System.Data.DataSet" /> 为指定的 <see cref="T:System.Data.DataTable" /> 中每个已插入、已更新或已删除的行调用相应的 INSERT、UPDATE 或 DELETE 语句。</summary>
      <param name="dataSet" vsli:raw="The &lt;see cref=&quot;T:System.Data.DataSet&quot; /&gt; used to update the data source.">用于更新数据源的 <see cref="T:System.Data.DataSet" />。</param>
      <exception cref="T:System.Data.DBConcurrencyException" vsli:raw="An attempt to execute an INSERT, UPDATE, or DELETE statement resulted in zero records affected.">尝试执行 INSERT、UPDATE 或 DELETE 语句，但没有记录受到影响。</exception>
      <returns vsli:raw="The number of rows successfully updated from the &lt;see cref=&quot;T:System.Data.DataSet&quot; /&gt;.">
        <see cref="T:System.Data.DataSet" /> 中成功更新的行数。</returns>
    </member>
    <member name="P:System.Data.IDataAdapter.MissingMappingAction">
      <summary vsli:raw="Indicates or specifies whether unmapped source tables or columns are passed with their source names in order to be filtered or to raise an error.">指示或指定是否将未映射的源表或列与其源名一起传递以便筛选或引发错误。</summary>
      <exception cref="T:System.ArgumentException" vsli:raw="The value set is not one of the &lt;see cref=&quot;T:System.Data.MissingMappingAction&quot; /&gt; values.">设置的值不是 <see cref="T:System.Data.MissingMappingAction" /> 值之一。</exception>
      <returns vsli:raw="One of the &lt;see cref=&quot;T:System.Data.MissingMappingAction&quot; /&gt; values. The default is &lt;see langword=&quot;Passthrough&quot; /&gt;.">
        <see cref="T:System.Data.MissingMappingAction" /> 值之一。 默认值为 <see langword="Passthrough" />。</returns>
    </member>
    <member name="P:System.Data.IDataAdapter.MissingSchemaAction">
      <summary vsli:raw="Indicates or specifies whether missing source tables, columns, and their relationships are added to the dataset schema, ignored, or cause an error to be raised.">指示或指定是否将丢失的源表、列及其关系添加到数据集架构中，是否忽略它们或者它们是否会引发错误。</summary>
      <exception cref="T:System.ArgumentException" vsli:raw="The value set is not one of the &lt;see cref=&quot;T:System.Data.MissingSchemaAction&quot; /&gt; values.">设置的值不是 <see cref="T:System.Data.MissingSchemaAction" /> 值之一。</exception>
      <returns vsli:raw="One of the &lt;see cref=&quot;T:System.Data.MissingSchemaAction&quot; /&gt; values. The default is &lt;see langword=&quot;Add&quot; /&gt;.">
        <see cref="T:System.Data.MissingSchemaAction" /> 值之一。 默认值为 <see langword="Add" />。</returns>
    </member>
    <member name="P:System.Data.IDataAdapter.TableMappings">
      <summary vsli:raw="Gets a collection that indicates how a source table is mapped to a dataset table.">指示如何将源表映射到数据集表。</summary>
      <returns vsli:raw="A collection that provides the primary mapping between the returned records and the &lt;see cref=&quot;T:System.Data.DataSet&quot; /&gt;. The default value is an empty collection.">一个集合，它提供返回记录和 <see cref="T:System.Data.DataSet" /> 之间的主映射。 默认值为空集合。</returns>
    </member>
    <member name="T:System.Data.IDataParameter">
      <summary vsli:raw="Represents a parameter to a Command object, and optionally, its mapping to &lt;see cref=&quot;T:System.Data.DataSet&quot; /&gt; columns; and is implemented by .NET data providers that access data sources.">表示 Command 对象的参数，也可以表示其到 <see cref="T:System.Data.DataSet" /> 列的映射；并由访问数据源的 .NET Framework 数据提供程序实现。</summary>
    </member>
    <member name="P:System.Data.IDataParameter.DbType">
      <summary vsli:raw="Gets or sets the &lt;see cref=&quot;T:System.Data.DbType&quot; /&gt; of the parameter.">获取或设置参数的 <see cref="T:System.Data.DbType" />。</summary>
      <exception cref="T:System.ArgumentOutOfRangeException" vsli:raw="The property was not set to a valid &lt;see cref=&quot;T:System.Data.DbType&quot; /&gt;.">该属性未设置为有效的 <see cref="T:System.Data.DbType" />。</exception>
      <returns vsli:raw="One of the &lt;see cref=&quot;T:System.Data.DbType&quot; /&gt; values. The default is &lt;see cref=&quot;F:System.Data.DbType.String&quot; /&gt;.">
        <see cref="T:System.Data.DbType" /> 值之一。 默认值为 <see cref="F:System.Data.DbType.String" />。</returns>
    </member>
    <member name="P:System.Data.IDataParameter.Direction">
      <summary vsli:raw="Gets or sets a value indicating whether the parameter is input-only, output-only, bidirectional, or a stored procedure return value parameter.">获取或设置一个值，该值指示参数是只可输入的参数、只可输出的参数、双向参数还是存储过程返回值参数。</summary>
      <exception cref="T:System.ArgumentException" vsli:raw="The property was not set to one of the valid &lt;see cref=&quot;T:System.Data.ParameterDirection&quot; /&gt; values.">属性未设置为有效的 <see cref="T:System.Data.ParameterDirection" /> 值之一。</exception>
      <returns vsli:raw="One of the &lt;see cref=&quot;T:System.Data.ParameterDirection&quot; /&gt; values. The default is &lt;see langword=&quot;Input&quot; /&gt;.">
        <see cref="T:System.Data.ParameterDirection" /> 值之一。 默认值为 <see langword="Input" />。</returns>
    </member>
    <member name="P:System.Data.IDataParameter.IsNullable">
      <summary vsli:raw="Gets a value indicating whether the parameter accepts null values.">获取一个值，该值指示参数是否接受 null 值。</summary>
      <returns vsli:raw="&lt;see langword=&quot;true&quot; /&gt; if null values are accepted; otherwise, &lt;see langword=&quot;false&quot; /&gt;. The default is &lt;see langword=&quot;false&quot; /&gt;.">如果接受 null 值，则为 <see langword="true" />；否则为 <see langword="false" />。 默认值为 <see langword="false" />。</returns>
    </member>
    <member name="P:System.Data.IDataParameter.ParameterName">
      <summary vsli:raw="Gets or sets the name of the &lt;see cref=&quot;T:System.Data.IDataParameter&quot; /&gt;.">获取或设置 <see cref="T:System.Data.IDataParameter" /> 的名称。</summary>
      <returns vsli:raw="The name of the &lt;see cref=&quot;T:System.Data.IDataParameter&quot; /&gt;. The default is an empty string.">
        <see cref="T:System.Data.IDataParameter" /> 的名称。 默认值为一个空字符串。</returns>
    </member>
    <member name="P:System.Data.IDataParameter.SourceColumn">
      <summary vsli:raw="Gets or sets the name of the source column that is mapped to the &lt;see cref=&quot;T:System.Data.DataSet&quot; /&gt; and used for loading or returning the &lt;see cref=&quot;P:System.Data.IDataParameter.Value&quot; /&gt;.">获取或设置映射到 <see cref="T:System.Data.DataSet" /> 并且用于加载或返回 <see cref="P:System.Data.IDataParameter.Value" /> 的源列的名称。</summary>
      <returns vsli:raw="The name of the source column that is mapped to the &lt;see cref=&quot;T:System.Data.DataSet&quot; /&gt;. The default is an empty string.">映射到 <see cref="T:System.Data.DataSet" /> 的源列的名称。 默认值为一个空字符串。</returns>
    </member>
    <member name="P:System.Data.IDataParameter.SourceVersion">
      <summary vsli:raw="Gets or sets the &lt;see cref=&quot;T:System.Data.DataRowVersion&quot; /&gt; to use when loading &lt;see cref=&quot;P:System.Data.IDataParameter.Value&quot; /&gt;.">获取或设置要在加载 <see cref="P:System.Data.IDataParameter.Value" /> 时使用的 <see cref="T:System.Data.DataRowVersion" />。</summary>
      <exception cref="T:System.ArgumentException" vsli:raw="The property was not set one of the &lt;see cref=&quot;T:System.Data.DataRowVersion&quot; /&gt; values.">属性未设置为 <see cref="T:System.Data.DataRowVersion" /> 值之一。</exception>
      <returns vsli:raw="One of the &lt;see cref=&quot;T:System.Data.DataRowVersion&quot; /&gt; values. The default is &lt;see langword=&quot;Current&quot; /&gt;.">
        <see cref="T:System.Data.DataRowVersion" /> 值之一。 默认值为 <see langword="Current" />。</returns>
    </member>
    <member name="P:System.Data.IDataParameter.Value">
      <summary vsli:raw="Gets or sets the value of the parameter.">获取或设置参数的值。</summary>
      <returns vsli:raw="An &lt;see cref=&quot;T:System.Object&quot; /&gt; that is the value of the parameter. The default value is null.">充当参数值的 <see cref="T:System.Object" />。 默认值为 null。</returns>
    </member>
    <member name="T:System.Data.IDataParameterCollection">
      <summary vsli:raw="Collects all parameters relevant to a Command object and their mappings to &lt;see cref=&quot;T:System.Data.DataSet&quot; /&gt; columns, and is implemented by .NET data providers that access data sources.">收集与 Command 对象相关的所有参数以及这些参数到 <see cref="T:System.Data.DataSet" /> 列的映射，并由访问数据源的 .NET Framework 数据提供程序实现。</summary>
    </member>
    <member name="M:System.Data.IDataParameterCollection.Contains(System.String)">
      <summary vsli:raw="Gets a value indicating whether a parameter in the collection has the specified name.">获取一个值，该值指示集合中的参数是否具有指定的名称。</summary>
      <param name="parameterName" vsli:raw="The name of the parameter.">参数的名称。</param>
      <returns vsli:raw="&lt;see langword=&quot;true&quot; /&gt; if the collection contains the parameter; otherwise, &lt;see langword=&quot;false&quot; /&gt;.">如果集合包含该参数，则为 <see langword="true" />；否则为 <see langword="false" />。</returns>
    </member>
    <member name="M:System.Data.IDataParameterCollection.IndexOf(System.String)">
      <summary vsli:raw="Gets the location of the &lt;see cref=&quot;T:System.Data.IDataParameter&quot; /&gt; within the collection.">在集合中获取 <see cref="T:System.Data.IDataParameter" /> 的位置。</summary>
      <param name="parameterName" vsli:raw="The name of the parameter.">参数的名称。</param>
      <returns vsli:raw="The zero-based location of the &lt;see cref=&quot;T:System.Data.IDataParameter&quot; /&gt; within the collection.">集合中 <see cref="T:System.Data.IDataParameter" /> 从零开始的位置。</returns>
    </member>
    <member name="M:System.Data.IDataParameterCollection.RemoveAt(System.String)">
      <summary vsli:raw="Removes the &lt;see cref=&quot;T:System.Data.IDataParameter&quot; /&gt; from the collection.">从集合中移除 <see cref="T:System.Data.IDataParameter" />。</summary>
      <param name="parameterName" vsli:raw="The name of the parameter.">参数的名称。</param>
    </member>
    <member name="P:System.Data.IDataParameterCollection.Item(System.String)">
      <summary vsli:raw="Gets or sets the parameter at the specified index.">获取或设置指定索引处的参数。</summary>
      <param name="parameterName" vsli:raw="The name of the parameter to retrieve.">要检索的参数的名称。</param>
      <returns vsli:raw="An &lt;see cref=&quot;T:System.Object&quot; /&gt; at the specified index.">指定的索引中的一个 <see cref="T:System.Object" />。</returns>
    </member>
    <member name="T:System.Data.IDataReader">
      <summary vsli:raw="Provides a means of reading one or more forward-only streams of result sets obtained by executing a command at a data source, and is implemented by .NET data providers that access relational databases.">提供一种读取结果集（通过对数据源执行命令获取）的一个或多个只进流的方法，并由访问关系数据库的.NET Framework 数据提供程序实现。</summary>
    </member>
    <member name="M:System.Data.IDataReader.Close">
      <summary vsli:raw="Closes the &lt;see cref=&quot;T:System.Data.IDataReader&quot; /&gt; Object.">关闭 <see cref="T:System.Data.IDataReader" /> 对象。</summary>
    </member>
    <member name="M:System.Data.IDataReader.GetSchemaTable">
      <summary vsli:raw="Returns a &lt;see cref=&quot;T:System.Data.DataTable&quot; /&gt; that describes the column metadata of the &lt;see cref=&quot;T:System.Data.IDataReader&quot; /&gt;.&#xA;&#xA;Returns &lt;see langword=&quot;null&quot; /&gt; if the executed command returned no resultset, or after &lt;see cref=&quot;M:System.Data.IDataReader.NextResult&quot; /&gt; returns &lt;see langword=&quot;false&quot; /&gt;.">返回一个 <see cref="T:System.Data.DataTable" />，它描述 <see cref="T:System.Data.IDataReader" /> 的列元数据。</summary>
      <exception cref="T:System.InvalidOperationException" vsli:raw="The &lt;see cref=&quot;T:System.Data.IDataReader&quot; /&gt; is closed.">
        <see cref="T:System.Data.IDataReader" /> 是关闭的。</exception>
      <returns vsli:raw="A &lt;see cref=&quot;T:System.Data.DataTable&quot; /&gt; that describes the column metadata.">一个描述列元数据的 <see cref="T:System.Data.DataTable" />。</returns>
    </member>
    <member name="M:System.Data.IDataReader.NextResult">
      <summary vsli:raw="Advances the data reader to the next result, when reading the results of batch SQL statements.">在读取一批 SQL 语句的结果时，使数据读取器前进到下一个结果。</summary>
      <returns vsli:raw="&lt;see langword=&quot;true&quot; /&gt; if there are more rows; otherwise, &lt;see langword=&quot;false&quot; /&gt;.">如果存在更多行，则为 <see langword="true" />；否则为 <see langword="false" />。</returns>
    </member>
    <member name="M:System.Data.IDataReader.Read">
      <summary vsli:raw="Advances the &lt;see cref=&quot;T:System.Data.IDataReader&quot; /&gt; to the next record.">让 <see cref="T:System.Data.IDataReader" /> 前进到下一条记录。</summary>
      <returns vsli:raw="&lt;see langword=&quot;true&quot; /&gt; if there are more rows; otherwise, &lt;see langword=&quot;false&quot; /&gt;.">如果存在更多行，则为 <see langword="true" />；否则为 <see langword="false" />。</returns>
    </member>
    <member name="P:System.Data.IDataReader.Depth">
      <summary vsli:raw="Gets a value indicating the depth of nesting for the current row.">获取一个值，该值指示当前行的嵌套深度。</summary>
      <returns vsli:raw="The level of nesting.">嵌套的级别。</returns>
    </member>
    <member name="P:System.Data.IDataReader.IsClosed">
      <summary vsli:raw="Gets a value indicating whether the data reader is closed.">获取一个值，该值指示数据读取器是否已关闭。</summary>
      <returns vsli:raw="&lt;see langword=&quot;true&quot; /&gt; if the data reader is closed; otherwise, &lt;see langword=&quot;false&quot; /&gt;.">如果数据读取器已关闭，则为 <see langword="true" />；否则为 <see langword="false" />。</returns>
    </member>
    <member name="P:System.Data.IDataReader.RecordsAffected">
      <summary vsli:raw="Gets the number of rows changed, inserted, or deleted by execution of the SQL statement.">通过执行 SQL 语句获取更改、插入或删除的行数。</summary>
      <returns vsli:raw="The number of rows changed, inserted, or deleted; 0 if no rows were affected or the statement failed; and -1 for SELECT statements.">已更改、插入或删除的行数；如果没有受影响的行或语句失败，则为 0；对于 SELECT 语句为 -1。</returns>
    </member>
    <member name="T:System.Data.IDataRecord">
      <summary vsli:raw="Provides access to the column values within each row for a &lt;see langword=&quot;DataReader&quot; /&gt;, and is implemented by .NET data providers that access relational databases.">为 <see langword="DataReader" /> 提供对每行中的列值的访问权限，并由访问关系数据库的.NET Framework 数据提供程序实现。</summary>
    </member>
    <member name="M:System.Data.IDataRecord.GetBoolean(System.Int32)">
      <summary vsli:raw="Gets the value of the specified column as a Boolean.">获取指定列的布尔值形式的值。</summary>
      <param name="i" vsli:raw="The zero-based column ordinal.">从零开始的列序号。</param>
      <exception cref="T:System.IndexOutOfRangeException" vsli:raw="The index passed was outside the range of 0 through &lt;see cref=&quot;P:System.Data.IDataRecord.FieldCount&quot; /&gt;.">传递的索引位于 0 至 <see cref="P:System.Data.IDataRecord.FieldCount" /> 的范围之外。</exception>
      <returns vsli:raw="The value of the column.">列的值。</returns>
    </member>
    <member name="M:System.Data.IDataRecord.GetByte(System.Int32)">
      <summary vsli:raw="Gets the 8-bit unsigned integer value of the specified column.">获取指定列的 8 位无符号整数值。</summary>
      <param name="i" vsli:raw="The zero-based column ordinal.">从零开始的列序号。</param>
      <exception cref="T:System.IndexOutOfRangeException" vsli:raw="The index passed was outside the range of 0 through &lt;see cref=&quot;P:System.Data.IDataRecord.FieldCount&quot; /&gt;.">传递的索引位于 0 至 <see cref="P:System.Data.IDataRecord.FieldCount" /> 的范围之外。</exception>
      <returns vsli:raw="The 8-bit unsigned integer value of the specified column.">指定列的 8 位无符号整数值。</returns>
    </member>
    <member name="M:System.Data.IDataRecord.GetBytes(System.Int32,System.Int64,System.Byte[],System.Int32,System.Int32)">
      <summary vsli:raw="Reads a stream of bytes from the specified column offset into the buffer as an array, starting at the given buffer offset.">将字节流从指定列偏移量读入到缓冲区中，将其作为从给定缓冲区偏移量开始的数组。</summary>
      <param name="i" vsli:raw="The zero-based column ordinal.">从零开始的列序号。</param>
      <param name="fieldOffset" vsli:raw="The index within the field from which to start the read operation.">字段中作为读取操作起始位置的索引。</param>
      <param name="buffer" vsli:raw="The buffer into which to read the stream of bytes.">要读入字节流的缓冲区。</param>
      <param name="bufferoffset" vsli:raw="The index for &lt;paramref name=&quot;buffer&quot; /&gt; to start the read operation.">开始读取操作的 <paramref name="buffer" /> 的索引。</param>
      <param name="length" vsli:raw="The number of bytes to read.">要读取的字节数。</param>
      <exception cref="T:System.IndexOutOfRangeException" vsli:raw="The index passed was outside the range of 0 through &lt;see cref=&quot;P:System.Data.IDataRecord.FieldCount&quot; /&gt;.">传递的索引位于 0 至 <see cref="P:System.Data.IDataRecord.FieldCount" /> 的范围之外。</exception>
      <returns vsli:raw="The actual number of bytes read.">读取的实际字节数。</returns>
    </member>
    <member name="M:System.Data.IDataRecord.GetChar(System.Int32)">
      <summary vsli:raw="Gets the character value of the specified column.">获取指定列的字符值。</summary>
      <param name="i" vsli:raw="The zero-based column ordinal.">从零开始的列序号。</param>
      <exception cref="T:System.IndexOutOfRangeException" vsli:raw="The index passed was outside the range of 0 through &lt;see cref=&quot;P:System.Data.IDataRecord.FieldCount&quot; /&gt;.">传递的索引位于 0 至 <see cref="P:System.Data.IDataRecord.FieldCount" /> 的范围之外。</exception>
      <returns vsli:raw="The character value of the specified column.">指定列的字符值。</returns>
    </member>
    <member name="M:System.Data.IDataRecord.GetChars(System.Int32,System.Int64,System.Char[],System.Int32,System.Int32)">
      <summary vsli:raw="Reads a stream of characters from the specified column offset into the buffer as an array, starting at the given buffer offset.">将字符流从指定列偏移量读入到缓冲区中，将其作为从给定缓冲区偏移量开始的数组。</summary>
      <param name="i" vsli:raw="The zero-based column ordinal.">从零开始的列序号。</param>
      <param name="fieldoffset" vsli:raw="The index within the row from which to start the read operation.">行中作为读取操作起始位置的索引。</param>
      <param name="buffer" vsli:raw="The buffer into which to read the stream of bytes.">要读入字节流的缓冲区。</param>
      <param name="bufferoffset" vsli:raw="The index for &lt;paramref name=&quot;buffer&quot; /&gt; to start the read operation.">开始读取操作的 <paramref name="buffer" /> 的索引。</param>
      <param name="length" vsli:raw="The number of bytes to read.">要读取的字节数。</param>
      <exception cref="T:System.IndexOutOfRangeException" vsli:raw="The index passed was outside the range of 0 through &lt;see cref=&quot;P:System.Data.IDataRecord.FieldCount&quot; /&gt;.">传递的索引位于 0 至 <see cref="P:System.Data.IDataRecord.FieldCount" /> 的范围之外。</exception>
      <returns vsli:raw="The actual number of characters read.">读取的实际字符数。</returns>
    </member>
    <member name="M:System.Data.IDataRecord.GetData(System.Int32)">
      <summary vsli:raw="Returns an &lt;see cref=&quot;T:System.Data.IDataReader&quot; /&gt; for the specified column ordinal.">返回指定列序号的 <see cref="T:System.Data.IDataReader" />。</summary>
      <param name="i" vsli:raw="The index of the field to find.">要查找的字段的索引。</param>
      <exception cref="T:System.IndexOutOfRangeException" vsli:raw="The index passed was outside the range of 0 through &lt;see cref=&quot;P:System.Data.IDataRecord.FieldCount&quot; /&gt;.">传递的索引位于 0 至 <see cref="P:System.Data.IDataRecord.FieldCount" /> 的范围之外。</exception>
      <returns vsli:raw="The &lt;see cref=&quot;T:System.Data.IDataReader&quot; /&gt; for the specified column ordinal.">指定列序号的 <see cref="T:System.Data.IDataReader" />。</returns>
    </member>
    <member name="M:System.Data.IDataRecord.GetDataTypeName(System.Int32)">
      <summary vsli:raw="Gets the data type information for the specified field.">获取指定字段的数据类型信息。</summary>
      <param name="i" vsli:raw="The index of the field to find.">要查找的字段的索引。</param>
      <exception cref="T:System.IndexOutOfRangeException" vsli:raw="The index passed was outside the range of 0 through &lt;see cref=&quot;P:System.Data.IDataRecord.FieldCount&quot; /&gt;.">传递的索引位于 0 至 <see cref="P:System.Data.IDataRecord.FieldCount" /> 的范围之外。</exception>
      <returns vsli:raw="The data type information for the specified field.">指定字段的数据类型信息。</returns>
    </member>
    <member name="M:System.Data.IDataRecord.GetDateTime(System.Int32)">
      <summary vsli:raw="Gets the date and time data value of the specified field.">获取指定字段的日期和时间数据值。</summary>
      <param name="i" vsli:raw="The index of the field to find.">要查找的字段的索引。</param>
      <exception cref="T:System.IndexOutOfRangeException" vsli:raw="The index passed was outside the range of 0 through &lt;see cref=&quot;P:System.Data.IDataRecord.FieldCount&quot; /&gt;.">传递的索引位于 0 至 <see cref="P:System.Data.IDataRecord.FieldCount" /> 的范围之外。</exception>
      <returns vsli:raw="The date and time data value of the specified field.">指定字段的日期和时间数据值。</returns>
    </member>
    <member name="M:System.Data.IDataRecord.GetDecimal(System.Int32)">
      <summary vsli:raw="Gets the fixed-position numeric value of the specified field.">获取指定字段的固定位置数值。</summary>
      <param name="i" vsli:raw="The index of the field to find.">要查找的字段的索引。</param>
      <exception cref="T:System.IndexOutOfRangeException" vsli:raw="The index passed was outside the range of 0 through &lt;see cref=&quot;P:System.Data.IDataRecord.FieldCount&quot; /&gt;.">传递的索引位于 0 至 <see cref="P:System.Data.IDataRecord.FieldCount" /> 的范围之外。</exception>
      <returns vsli:raw="The fixed-position numeric value of the specified field.">指定字段的固定位置数值。</returns>
    </member>
    <member name="M:System.Data.IDataRecord.GetDouble(System.Int32)">
      <summary vsli:raw="Gets the double-precision floating point number of the specified field.">获取指定字段的双精度浮点数。</summary>
      <param name="i" vsli:raw="The index of the field to find.">要查找的字段的索引。</param>
      <exception cref="T:System.IndexOutOfRangeException" vsli:raw="The index passed was outside the range of 0 through &lt;see cref=&quot;P:System.Data.IDataRecord.FieldCount&quot; /&gt;.">传递的索引位于 0 至 <see cref="P:System.Data.IDataRecord.FieldCount" /> 的范围之外。</exception>
      <returns vsli:raw="The double-precision floating point number of the specified field.">指定字段的双精度浮点数。</returns>
    </member>
    <member name="M:System.Data.IDataRecord.GetFieldType(System.Int32)">
      <summary vsli:raw="Gets the &lt;see cref=&quot;T:System.Type&quot; /&gt; information corresponding to the type of &lt;see cref=&quot;T:System.Object&quot; /&gt; that would be returned from &lt;see cref=&quot;M:System.Data.IDataRecord.GetValue(System.Int32)&quot; /&gt;.">获取对应于会从 <see cref="M:System.Data.IDataRecord.GetValue(System.Int32)" /> 返回的 <see cref="T:System.Object" /> 类型的 <see cref="T:System.Type" /> 信息。</summary>
      <param name="i" vsli:raw="The index of the field to find.">要查找的字段的索引。</param>
      <exception cref="T:System.IndexOutOfRangeException" vsli:raw="The index passed was outside the range of 0 through &lt;see cref=&quot;P:System.Data.IDataRecord.FieldCount&quot; /&gt;.">传递的索引位于 0 至 <see cref="P:System.Data.IDataRecord.FieldCount" /> 的范围之外。</exception>
      <returns vsli:raw="The &lt;see cref=&quot;T:System.Type&quot; /&gt; information corresponding to the type of &lt;see cref=&quot;T:System.Object&quot; /&gt; that would be returned from &lt;see cref=&quot;M:System.Data.IDataRecord.GetValue(System.Int32)&quot; /&gt;.">对应于会从 <see cref="M:System.Data.IDataRecord.GetValue(System.Int32)" /> 返回的 <see cref="T:System.Object" /> 类型的 <see cref="T:System.Type" /> 信息。</returns>
    </member>
    <member name="M:System.Data.IDataRecord.GetFloat(System.Int32)">
      <summary vsli:raw="Gets the single-precision floating point number of the specified field.">获取指定字段的单精度浮点数。</summary>
      <param name="i" vsli:raw="The index of the field to find.">要查找的字段的索引。</param>
      <exception cref="T:System.IndexOutOfRangeException" vsli:raw="The index passed was outside the range of 0 through &lt;see cref=&quot;P:System.Data.IDataRecord.FieldCount&quot; /&gt;.">传递的索引位于 0 至 <see cref="P:System.Data.IDataRecord.FieldCount" /> 的范围之外。</exception>
      <returns vsli:raw="The single-precision floating point number of the specified field.">指定字段的单精度浮点数。</returns>
    </member>
    <member name="M:System.Data.IDataRecord.GetGuid(System.Int32)">
      <summary vsli:raw="Returns the GUID value of the specified field.">返回指定字段的 GUID 值。</summary>
      <param name="i" vsli:raw="The index of the field to find.">要查找的字段的索引。</param>
      <exception cref="T:System.IndexOutOfRangeException" vsli:raw="The index passed was outside the range of 0 through &lt;see cref=&quot;P:System.Data.IDataRecord.FieldCount&quot; /&gt;.">传递的索引位于 0 至 <see cref="P:System.Data.IDataRecord.FieldCount" /> 的范围之外。</exception>
      <returns vsli:raw="The GUID value of the specified field.">指定字段的 GUID 值。</returns>
    </member>
    <member name="M:System.Data.IDataRecord.GetInt16(System.Int32)">
      <summary vsli:raw="Gets the 16-bit signed integer value of the specified field.">获取指定字段的 16 位带符号整数值。</summary>
      <param name="i" vsli:raw="The index of the field to find.">要查找的字段的索引。</param>
      <exception cref="T:System.IndexOutOfRangeException" vsli:raw="The index passed was outside the range of 0 through &lt;see cref=&quot;P:System.Data.IDataRecord.FieldCount&quot; /&gt;.">传递的索引位于 0 至 <see cref="P:System.Data.IDataRecord.FieldCount" /> 的范围之外。</exception>
      <returns vsli:raw="The 16-bit signed integer value of the specified field.">指定字段的 16 位带符号整数值。</returns>
    </member>
    <member name="M:System.Data.IDataRecord.GetInt32(System.Int32)">
      <summary vsli:raw="Gets the 32-bit signed integer value of the specified field.">获取指定字段的 32 位带符号整数值。</summary>
      <param name="i" vsli:raw="The index of the field to find.">要查找的字段的索引。</param>
      <exception cref="T:System.IndexOutOfRangeException" vsli:raw="The index passed was outside the range of 0 through &lt;see cref=&quot;P:System.Data.IDataRecord.FieldCount&quot; /&gt;.">传递的索引位于 0 至 <see cref="P:System.Data.IDataRecord.FieldCount" /> 的范围之外。</exception>
      <returns vsli:raw="The 32-bit signed integer value of the specified field.">指定字段的 32 位带符号整数值。</returns>
    </member>
    <member name="M:System.Data.IDataRecord.GetInt64(System.Int32)">
      <summary vsli:raw="Gets the 64-bit signed integer value of the specified field.">获取指定字段的 64 位带符号整数值。</summary>
      <param name="i" vsli:raw="The index of the field to find.">要查找的字段的索引。</param>
      <exception cref="T:System.IndexOutOfRangeException" vsli:raw="The index passed was outside the range of 0 through &lt;see cref=&quot;P:System.Data.IDataRecord.FieldCount&quot; /&gt;.">传递的索引位于 0 至 <see cref="P:System.Data.IDataRecord.FieldCount" /> 的范围之外。</exception>
      <returns vsli:raw="The 64-bit signed integer value of the specified field.">指定字段的 64 位带符号整数值。</returns>
    </member>
    <member name="M:System.Data.IDataRecord.GetName(System.Int32)">
      <summary vsli:raw="Gets the name for the field to find.">获取要查找的字段的名称。</summary>
      <param name="i" vsli:raw="The index of the field to find.">要查找的字段的索引。</param>
      <exception cref="T:System.IndexOutOfRangeException" vsli:raw="The index passed was outside the range of 0 through &lt;see cref=&quot;P:System.Data.IDataRecord.FieldCount&quot; /&gt;.">传递的索引位于 0 至 <see cref="P:System.Data.IDataRecord.FieldCount" /> 的范围之外。</exception>
      <returns vsli:raw="The name of the field or the empty string (&quot;&quot;), if there is no value to return.">字段的名称，如果没有要返回的值，则为空字符串 ("")。</returns>
    </member>
    <member name="M:System.Data.IDataRecord.GetOrdinal(System.String)">
      <summary vsli:raw="Return the index of the named field.">返回已命名字段的索引。</summary>
      <param name="name" vsli:raw="The name of the field to find.">要查找的字段的名称。</param>
      <returns vsli:raw="The index of the named field.">已命名字段的索引。</returns>
    </member>
    <member name="M:System.Data.IDataRecord.GetString(System.Int32)">
      <summary vsli:raw="Gets the string value of the specified field.">获取指定字段的字符串值。</summary>
      <param name="i" vsli:raw="The index of the field to find.">要查找的字段的索引。</param>
      <exception cref="T:System.IndexOutOfRangeException" vsli:raw="The index passed was outside the range of 0 through &lt;see cref=&quot;P:System.Data.IDataRecord.FieldCount&quot; /&gt;.">传递的索引位于 0 至 <see cref="P:System.Data.IDataRecord.FieldCount" /> 的范围之外。</exception>
      <returns vsli:raw="The string value of the specified field.">指定字段的字符串值。</returns>
    </member>
    <member name="M:System.Data.IDataRecord.GetValue(System.Int32)">
      <summary vsli:raw="Return the value of the specified field.">返回指定字段的值。</summary>
      <param name="i" vsli:raw="The index of the field to find.">要查找的字段的索引。</param>
      <exception cref="T:System.IndexOutOfRangeException" vsli:raw="The index passed was outside the range of 0 through &lt;see cref=&quot;P:System.Data.IDataRecord.FieldCount&quot; /&gt;.">传递的索引位于 0 至 <see cref="P:System.Data.IDataRecord.FieldCount" /> 的范围之外。</exception>
      <returns vsli:raw="The &lt;see cref=&quot;T:System.Object&quot; /&gt; which will contain the field value upon return.">返回时将包含字段值的 <see cref="T:System.Object" />。</returns>
    </member>
    <member name="M:System.Data.IDataRecord.GetValues(System.Object[])">
      <summary vsli:raw="Populates an array of objects with the column values of the current record.">使用当前记录的列值填充对象的数组。</summary>
      <param name="values" vsli:raw="An array of &lt;see cref=&quot;T:System.Object&quot; /&gt; to copy the attribute fields into.">要将属性字段复制到其中的 <see cref="T:System.Object" /> 数组。</param>
      <returns vsli:raw="The number of instances of &lt;see cref=&quot;T:System.Object&quot; /&gt; in the array.">数组中 <see cref="T:System.Object" /> 的实例的数目。</returns>
    </member>
    <member name="M:System.Data.IDataRecord.IsDBNull(System.Int32)">
      <summary vsli:raw="Return whether the specified field is set to null.">返回指定字段是否设置为 null。</summary>
      <param name="i" vsli:raw="The index of the field to find.">要查找的字段的索引。</param>
      <exception cref="T:System.IndexOutOfRangeException" vsli:raw="The index passed was outside the range of 0 through &lt;see cref=&quot;P:System.Data.IDataRecord.FieldCount&quot; /&gt;.">传递的索引位于 0 至 <see cref="P:System.Data.IDataRecord.FieldCount" /> 的范围之外。</exception>
      <returns vsli:raw="&lt;see langword=&quot;true&quot; /&gt; if the specified field is set to null; otherwise, &lt;see langword=&quot;false&quot; /&gt;.">如果指定的字段设置为 null，则为 <see langword="true" />；否则为 <see langword="false" />。</returns>
    </member>
    <member name="P:System.Data.IDataRecord.FieldCount">
      <summary vsli:raw="Gets the number of columns in the current row.">获取当前行中的列数。</summary>
      <returns vsli:raw="When not positioned in a valid recordset, 0; otherwise, the number of columns in the current record. The default is -1.">如果未位于有效的记录集中，则为 0；否则为当前记录中的列数。 默认值为 -1。</returns>
    </member>
    <member name="P:System.Data.IDataRecord.Item(System.Int32)">
      <summary vsli:raw="Gets the column located at the specified index.">获取位于指定索引处的列。</summary>
      <param name="i" vsli:raw="The zero-based index of the column to get.">要获取的列的从零开始的索引。</param>
      <exception cref="T:System.IndexOutOfRangeException" vsli:raw="The index passed was outside the range of 0 through &lt;see cref=&quot;P:System.Data.IDataRecord.FieldCount&quot; /&gt;.">传递的索引位于 0 至 <see cref="P:System.Data.IDataRecord.FieldCount" /> 的范围之外。</exception>
      <returns vsli:raw="The column located at the specified index as an &lt;see cref=&quot;T:System.Object&quot; /&gt;.">位于作为 <see cref="T:System.Object" /> 指定索引处的列。</returns>
    </member>
    <member name="P:System.Data.IDataRecord.Item(System.String)">
      <summary vsli:raw="Gets the column with the specified name.">获取具有指定名称的列。</summary>
      <param name="name" vsli:raw="The name of the column to find.">要查找的列的名称。</param>
      <exception cref="T:System.IndexOutOfRangeException" vsli:raw="No column with the specified name was found.">未找到具有指定名称的列。</exception>
      <returns vsli:raw="The column with the specified name as an &lt;see cref=&quot;T:System.Object&quot; /&gt;.">具有指定名称、作为 <see cref="T:System.Object" /> 的列。</returns>
    </member>
    <member name="T:System.Data.IDbCommand">
      <summary vsli:raw="Represents an SQL statement that is executed while connected to a data source, and is implemented by .NET data providers that access relational databases.">表示连接到数据源时执行的 SQL 语句，并由访问关系数据库的 .NET Framework 数据提供程序实现。</summary>
    </member>
    <member name="M:System.Data.IDbCommand.Cancel">
      <summary vsli:raw="Attempts to cancels the execution of an &lt;see cref=&quot;T:System.Data.IDbCommand&quot; /&gt;.">尝试取消执行 <see cref="T:System.Data.IDbCommand" />。</summary>
    </member>
    <member name="M:System.Data.IDbCommand.CreateParameter">
      <summary vsli:raw="Creates a new instance of an &lt;see cref=&quot;T:System.Data.IDbDataParameter&quot; /&gt; object.">创建 <see cref="T:System.Data.IDbDataParameter" /> 对象的新实例。</summary>
      <returns vsli:raw="An &lt;see langword=&quot;IDbDataParameter&quot; /&gt; object.">一个 <see langword="IDbDataParameter" /> 对象。</returns>
    </member>
    <member name="M:System.Data.IDbCommand.ExecuteNonQuery">
      <summary vsli:raw="Executes an SQL statement against the &lt;see langword=&quot;Connection&quot; /&gt; object of a .NET data provider, and returns the number of rows affected.">对 .NET Framework 数据提供程序的 <see langword="Connection" /> 对象执行 SQL 语句，并返回受影响的行数。</summary>
      <exception cref="T:System.InvalidOperationException" vsli:raw="The connection does not exist.  &#xA;  &#xA; -or-  &#xA;  &#xA; The connection is not open.">连接不存在。  
  
 - 或 -  
  
 连接未打开。</exception>
      <returns vsli:raw="The number of rows affected.">受影响的行数。</returns>
    </member>
    <member name="M:System.Data.IDbCommand.ExecuteReader">
      <summary vsli:raw="Executes the &lt;see cref=&quot;P:System.Data.IDbCommand.CommandText&quot; /&gt; against the &lt;see cref=&quot;P:System.Data.IDbCommand.Connection&quot; /&gt; and builds an &lt;see cref=&quot;T:System.Data.IDataReader&quot; /&gt;.">对 <see cref="P:System.Data.IDbCommand.Connection" /> 执行 <see cref="P:System.Data.IDbCommand.CommandText" /> 并生成 <see cref="T:System.Data.IDataReader" />。</summary>
      <returns vsli:raw="An &lt;see cref=&quot;T:System.Data.IDataReader&quot; /&gt; object.">一个 <see cref="T:System.Data.IDataReader" /> 对象。</returns>
    </member>
    <member name="M:System.Data.IDbCommand.ExecuteReader(System.Data.CommandBehavior)">
      <summary vsli:raw="Executes the &lt;see cref=&quot;P:System.Data.IDbCommand.CommandText&quot; /&gt; against the &lt;see cref=&quot;P:System.Data.IDbCommand.Connection&quot; /&gt;, and builds an &lt;see cref=&quot;T:System.Data.IDataReader&quot; /&gt; using one of the &lt;see cref=&quot;T:System.Data.CommandBehavior&quot; /&gt; values.">对 <see cref="P:System.Data.IDbCommand.Connection" /> 执行 <see cref="P:System.Data.IDbCommand.CommandText" />，并使用 <see cref="T:System.Data.CommandBehavior" /> 值之一生成 <see cref="T:System.Data.IDataReader" />。</summary>
      <param name="behavior" vsli:raw="One of the &lt;see cref=&quot;T:System.Data.CommandBehavior&quot; /&gt; values.">
        <see cref="T:System.Data.CommandBehavior" /> 值之一。</param>
      <returns vsli:raw="An &lt;see cref=&quot;T:System.Data.IDataReader&quot; /&gt; object.">一个 <see cref="T:System.Data.IDataReader" /> 对象。</returns>
    </member>
    <member name="M:System.Data.IDbCommand.ExecuteScalar">
      <summary vsli:raw="Executes the query, and returns the first column of the first row in the resultset returned by the query. Extra columns or rows are ignored.">执行查询，并返回由查询返回的结果集中第一行的第一列。 忽略其他列或行。</summary>
      <returns vsli:raw="The first column of the first row in the resultset.">结果集中第一行的第一列。</returns>
    </member>
    <member name="M:System.Data.IDbCommand.Prepare">
      <summary vsli:raw="Creates a prepared (or compiled) version of the command on the data source.">在数据源上创建准备就绪（或已编译）的命令版本。</summary>
      <exception cref="T:System.InvalidOperationException" vsli:raw="The &lt;see cref=&quot;P:System.Data.OleDb.OleDbCommand.Connection&quot; /&gt; is not set.  &#xA;  &#xA; -or-  &#xA;  &#xA; The &lt;see cref=&quot;P:System.Data.OleDb.OleDbCommand.Connection&quot; /&gt; is not &lt;see cref=&quot;M:System.Data.OleDb.OleDbConnection.Open&quot; /&gt;.">未设置 <see cref="P:System.Data.OleDb.OleDbCommand.Connection" />。  
  
- 或 - 
<see cref="P:System.Data.OleDb.OleDbCommand.Connection" /> 不为 <see cref="M:System.Data.OleDb.OleDbConnection.Open" />。</exception>
    </member>
    <member name="P:System.Data.IDbCommand.CommandText">
      <summary vsli:raw="Gets or sets the text command to run against the data source.">获取或设置对数据源运行的文本命令。</summary>
      <returns vsli:raw="The text command to execute. The default value is an empty string (&quot;&quot;).">要执行的文本命令。 默认值为空字符串 ("")。</returns>
    </member>
    <member name="P:System.Data.IDbCommand.CommandTimeout">
      <summary vsli:raw="Gets or sets the wait time (in seconds) before terminating the attempt to execute a command and generating an error.">获取或设置在终止尝试执行命令并生成错误之前的等待时间（以秒为单位）。</summary>
      <exception cref="T:System.ArgumentException" vsli:raw="The property value assigned is less than 0.">分配的属性值小于 0。</exception>
      <returns vsli:raw="The time (in seconds) to wait for the command to execute. The default value is 30 seconds.">等待命令执行的时间（秒）。 默认值为 30 秒。</returns>
    </member>
    <member name="P:System.Data.IDbCommand.CommandType">
      <summary vsli:raw="Indicates or specifies how the &lt;see cref=&quot;P:System.Data.IDbCommand.CommandText&quot; /&gt; property is interpreted.">指示或指定解释 <see cref="P:System.Data.IDbCommand.CommandText" /> 属性的方式。</summary>
      <returns vsli:raw="One of the &lt;see cref=&quot;T:System.Data.CommandType&quot; /&gt; values. The default is &lt;see langword=&quot;Text&quot; /&gt;.">
        <see cref="T:System.Data.CommandType" /> 值之一。 默认值为 <see langword="Text" />。</returns>
    </member>
    <member name="P:System.Data.IDbCommand.Connection">
      <summary vsli:raw="Gets or sets the &lt;see cref=&quot;T:System.Data.IDbConnection&quot; /&gt; used by this instance of the &lt;see cref=&quot;T:System.Data.IDbCommand&quot; /&gt;.">获取或设置 <see cref="T:System.Data.IDbCommand" /> 的此实例使用的 <see cref="T:System.Data.IDbConnection" />。</summary>
      <returns vsli:raw="The connection to the data source.">与数据源的连接。</returns>
    </member>
    <member name="P:System.Data.IDbCommand.Parameters">
      <summary vsli:raw="Gets the &lt;see cref=&quot;T:System.Data.IDataParameterCollection&quot; /&gt;.">获取 <see cref="T:System.Data.IDataParameterCollection" />。</summary>
      <returns vsli:raw="The parameters of the SQL statement or stored procedure.">SQL 语句或存储过程的参数。</returns>
    </member>
    <member name="P:System.Data.IDbCommand.Transaction">
      <summary vsli:raw="Gets or sets the transaction within which the &lt;see langword=&quot;Command&quot; /&gt; object of a .NET data provider executes.">获取或设置要在其中执行 .NET Framework 数据提供程序的 <see langword="Command" /> 对象的事务。</summary>
      <returns vsli:raw="the &lt;see langword=&quot;Command&quot; /&gt; object of a .NET Framework data provider executes. The default value is &lt;see langword=&quot;null&quot; /&gt;.">.NET Framework 数据提供程序的 <see langword="Command" /> 对象执行。 默认值是 <see langword="null" />。</returns>
    </member>
    <member name="P:System.Data.IDbCommand.UpdatedRowSource">
      <summary vsli:raw="Gets or sets how command results are applied to the &lt;see cref=&quot;T:System.Data.DataRow&quot; /&gt; when used by the &lt;see cref=&quot;M:System.Data.IDataAdapter.Update(System.Data.DataSet)&quot; /&gt; method of a &lt;see cref=&quot;T:System.Data.Common.DbDataAdapter&quot; /&gt;.">获取或设置命令结果在由 <see cref="T:System.Data.Common.DbDataAdapter" /> 的 <see cref="M:System.Data.IDataAdapter.Update(System.Data.DataSet)" /> 方法使用时应用于 <see cref="T:System.Data.DataRow" /> 的方式。</summary>
      <exception cref="T:System.ArgumentException" vsli:raw="The value entered was not one of the &lt;see cref=&quot;T:System.Data.UpdateRowSource&quot; /&gt; values.">输入的值不是 <see cref="T:System.Data.UpdateRowSource" /> 值之一。</exception>
      <returns vsli:raw="One of the &lt;see cref=&quot;T:System.Data.UpdateRowSource&quot; /&gt; values. The default is &lt;see langword=&quot;Both&quot; /&gt; unless the command is automatically generated. Then the default is &lt;see langword=&quot;None&quot; /&gt;.">
        <see cref="T:System.Data.UpdateRowSource" /> 值之一。 除非自动生成该命令，否则默认值为 <see langword="Both" />。 如果自动生成该命令，默认值为 <see langword="None" />。</returns>
    </member>
    <member name="T:System.Data.IDbConnection">
      <summary vsli:raw="Represents an open connection to a data source, and is implemented by .NET data providers that access relational databases.">表示一个与数据源的开放连接，并由访问关系数据库的 .NET Framework 数据提供程序实现。</summary>
    </member>
    <member name="M:System.Data.IDbConnection.BeginTransaction">
      <summary vsli:raw="Begins a database transaction.">开始一项数据库事务。</summary>
      <returns vsli:raw="An object representing the new transaction.">表示新事务的对象。</returns>
    </member>
    <member name="M:System.Data.IDbConnection.BeginTransaction(System.Data.IsolationLevel)">
      <summary vsli:raw="Begins a database transaction with the specified &lt;see cref=&quot;T:System.Data.IsolationLevel&quot; /&gt; value.">以指定的 <see cref="T:System.Data.IsolationLevel" /> 值开始数据库事务。</summary>
      <param name="il" vsli:raw="One of the &lt;see cref=&quot;T:System.Data.IsolationLevel&quot; /&gt; values.">
        <see cref="T:System.Data.IsolationLevel" /> 值之一。</param>
      <returns vsli:raw="An object representing the new transaction.">表示新事务的对象。</returns>
    </member>
    <member name="M:System.Data.IDbConnection.ChangeDatabase(System.String)">
      <summary vsli:raw="Changes the current database for an open &lt;see langword=&quot;Connection&quot; /&gt; object.">更改已打开的 <see langword="Connection" /> 对象的当前数据库。</summary>
      <param name="databaseName" vsli:raw="The name of the database to use in place of the current database.">要代替当前数据库使用的数据库名称。</param>
    </member>
    <member name="M:System.Data.IDbConnection.Close">
      <summary vsli:raw="Closes the connection to the database.">关闭与数据库之间的连接。</summary>
    </member>
    <member name="M:System.Data.IDbConnection.CreateCommand">
      <summary vsli:raw="Creates and returns a Command object associated with the connection.">创建并返回一个与连接关联的命令对象。</summary>
      <returns vsli:raw="A Command object associated with the connection.">与连接关联的命令对象。</returns>
    </member>
    <member name="M:System.Data.IDbConnection.Open">
      <summary vsli:raw="Opens a database connection with the settings specified by the &lt;see langword=&quot;ConnectionString&quot; /&gt; property of the provider-specific Connection object.">打开具有指定设置（由特定于提供程序的 Connection 对象的 <see langword="ConnectionString" /> 属性所指定）的数据库连接。</summary>
    </member>
    <member name="P:System.Data.IDbConnection.ConnectionString">
      <summary vsli:raw="Gets or sets the string used to open a database.">获取或设置用于打数据库的字符串。</summary>
      <returns vsli:raw="A string containing connection settings.">包含连接设置的字符串。</returns>
    </member>
    <member name="P:System.Data.IDbConnection.ConnectionTimeout">
      <summary vsli:raw="Gets the time to wait (in seconds) while trying to establish a connection before terminating the attempt and generating an error.">获取在尝试建立连接时终止尝试并生成错误之前所等待的时间（以秒为单位）。</summary>
      <returns vsli:raw="The time (in seconds) to wait for a connection to open. The default value is 15 seconds.">等待连接打开所需的时间（以秒为单位）。 默认值为 15 秒。</returns>
    </member>
    <member name="P:System.Data.IDbConnection.Database">
      <summary vsli:raw="Gets the name of the current database or the database to be used after a connection is opened.">获取当前数据库的名称或打开连接后要使用的数据库的名称。</summary>
      <returns vsli:raw="The name of the current database or the name of the database to be used once a connection is open. The default value is an empty string.">当前数据库的名称或打开连接后要使用的数据库的名称。 默认值为一个空字符串。</returns>
    </member>
    <member name="P:System.Data.IDbConnection.State">
      <summary vsli:raw="Gets the current state of the connection.">获取连接的当前状态。</summary>
      <returns vsli:raw="One of the &lt;see cref=&quot;T:System.Data.ConnectionState&quot; /&gt; values.">
        <see cref="T:System.Data.ConnectionState" /> 值之一。</returns>
    </member>
    <member name="T:System.Data.IDbDataAdapter">
      <summary vsli:raw="Represents a set of command-related properties that are used to fill the &lt;see cref=&quot;T:System.Data.DataSet&quot; /&gt; and update a data source, and is implemented by .NET data providers that access relational databases.">表示一组与命令有关的属性，用于填充 <see cref="T:System.Data.DataSet" /> 和更新数据源，由访问关系数据库的 .NET Framework 数据提供程序实现。</summary>
    </member>
    <member name="P:System.Data.IDbDataAdapter.DeleteCommand">
      <summary vsli:raw="Gets or sets an SQL statement for deleting records from the data set.">获取或设置用于从数据集中删除记录的 SQL 语句。</summary>
      <returns vsli:raw="An &lt;see cref=&quot;T:System.Data.IDbCommand&quot; /&gt; used during &lt;see cref=&quot;M:System.Data.Common.DbDataAdapter.Update(System.Data.DataSet)&quot; /&gt; to delete records in the data source for deleted rows in the data set.">
        <see cref="T:System.Data.IDbCommand" /> 过程中使用的 <see cref="M:System.Data.Common.DbDataAdapter.Update(System.Data.DataSet)" />，它针对数据集中已删除的行删除数据源中的记录。</returns>
    </member>
    <member name="P:System.Data.IDbDataAdapter.InsertCommand">
      <summary vsli:raw="Gets or sets an SQL statement used to insert new records into the data source.">获取或设置用于将新记录插入到数据源中的 SQL 语句。</summary>
      <returns vsli:raw="An &lt;see cref=&quot;T:System.Data.IDbCommand&quot; /&gt; used during &lt;see cref=&quot;M:System.Data.Common.DbDataAdapter.Update(System.Data.DataSet)&quot; /&gt; to insert records in the data source for new rows in the data set.">在 <see cref="T:System.Data.IDbCommand" /> 过程中使用的 <see cref="M:System.Data.Common.DbDataAdapter.Update(System.Data.DataSet)" />，它针对数据集中的新行将记录插入到数据源。</returns>
    </member>
    <member name="P:System.Data.IDbDataAdapter.SelectCommand">
      <summary vsli:raw="Gets or sets an SQL statement used to select records in the data source.">获取或设置用于在数据源中选择记录的 SQL 语句。</summary>
      <returns vsli:raw="An &lt;see cref=&quot;T:System.Data.IDbCommand&quot; /&gt; that is used during &lt;see cref=&quot;M:System.Data.Common.DbDataAdapter.Update(System.Data.DataSet)&quot; /&gt; to select records from data source for placement in the data set.">在 <see cref="T:System.Data.IDbCommand" /> 过程中使用的 <see cref="M:System.Data.Common.DbDataAdapter.Update(System.Data.DataSet)" />，它从数据源中选择记录以便放入数据集中。</returns>
    </member>
    <member name="P:System.Data.IDbDataAdapter.UpdateCommand">
      <summary vsli:raw="Gets or sets an SQL statement used to update records in the data source.">获取或设置用于更新数据源中的记录的 SQL 语句。</summary>
      <returns vsli:raw="An &lt;see cref=&quot;T:System.Data.IDbCommand&quot; /&gt; used during &lt;see cref=&quot;M:System.Data.Common.DbDataAdapter.Update(System.Data.DataSet)&quot; /&gt; to update records in the data source for modified rows in the data set.">在 <see cref="T:System.Data.IDbCommand" /> 过程中使用的 <see cref="M:System.Data.Common.DbDataAdapter.Update(System.Data.DataSet)" />，它针对数据集中已修改的行更新数据源中的记录。</returns>
    </member>
    <member name="T:System.Data.IDbDataParameter">
      <summary vsli:raw="Used by the Visual Basic .NET Data Designers to represent a parameter to a Command object, and optionally, its mapping to &lt;see cref=&quot;T:System.Data.DataSet&quot; /&gt; columns.">由 Visual Basic.NET 数据设计器使用，用于表示命令对象的参数和（可选）该参数到 <see cref="T:System.Data.DataSet" /> 列的映射。</summary>
    </member>
    <member name="P:System.Data.IDbDataParameter.Precision">
      <summary vsli:raw="Indicates the precision of numeric parameters.">指示数值参数的精度。</summary>
      <returns vsli:raw="The maximum number of digits used to represent the Value property of a data provider Parameter object. The default value is 0, which indicates that a data provider sets the precision for Value.">用于表示数据提供程序 Parameter 对象的 Value 属性的最大位数。 默认值为 0，指示数据提供程序将设置 Value 的精度。</returns>
    </member>
    <member name="P:System.Data.IDbDataParameter.Scale">
      <summary vsli:raw="Indicates the scale of numeric parameters.">指示数值参数的比例。</summary>
      <returns vsli:raw="The number of decimal places to which &lt;see cref=&quot;P:System.Data.OleDb.OleDbParameter.Value&quot; /&gt; is resolved. The default is 0.">对 <see cref="P:System.Data.OleDb.OleDbParameter.Value" /> 进行解析的小数位数。 默认值为 0。</returns>
    </member>
    <member name="P:System.Data.IDbDataParameter.Size">
      <summary vsli:raw="The size of the parameter.">参数的大小。</summary>
      <returns vsli:raw="The maximum size, in bytes, of the data within the column. The default value is inferred from the parameter value.">列中数据的最大大小（字节）。 默认值将根据参数值进行推断。</returns>
    </member>
    <member name="T:System.Data.IDbTransaction">
      <summary vsli:raw="Represents a transaction to be performed at a data source, and is implemented by .NET data providers that access relational databases.">表示要在数据源上执行的事务，并由访问关系数据库的 .NET Framework 数据提供程序实现。</summary>
    </member>
    <member name="M:System.Data.IDbTransaction.Commit">
      <summary vsli:raw="Commits the database transaction.">提交数据库事务。</summary>
      <exception cref="T:System.Exception" vsli:raw="An error occurred while trying to commit the transaction.">在尝试提交事务时出错。</exception>
      <exception cref="T:System.InvalidOperationException" vsli:raw="The transaction has already been committed or rolled back.  &#xA;  &#xA; -or-  &#xA;  &#xA; The connection is broken.">已提交或回滚事务。  
  
 - 或 -  
  
 连接已断开。</exception>
    </member>
    <member name="M:System.Data.IDbTransaction.Rollback">
      <summary vsli:raw="Rolls back a transaction from a pending state.">从挂起状态回滚事务。</summary>
      <exception cref="T:System.Exception" vsli:raw="An error occurred while trying to commit the transaction.">在尝试提交事务时出错。</exception>
      <exception cref="T:System.InvalidOperationException" vsli:raw="The transaction has already been committed or rolled back.  &#xA;  &#xA; -or-  &#xA;  &#xA; The connection is broken.">已提交或回滚事务。  
  
 - 或 -  
  
 连接已断开。</exception>
    </member>
    <member name="P:System.Data.IDbTransaction.Connection">
      <summary vsli:raw="Specifies the Connection object to associate with the transaction.">指定要与事务关联的 Connection 对象。</summary>
      <returns vsli:raw="The Connection object to associate with the transaction.">要与事务关联的 Connection 对象。</returns>
    </member>
    <member name="P:System.Data.IDbTransaction.IsolationLevel">
      <summary vsli:raw="Specifies the &lt;see cref=&quot;T:System.Data.IsolationLevel&quot; /&gt; for this transaction.">为该事务指定 <see cref="T:System.Data.IsolationLevel" />。</summary>
      <returns vsli:raw="The &lt;see cref=&quot;T:System.Data.IsolationLevel&quot; /&gt; for this transaction. The default is &lt;see langword=&quot;ReadCommitted&quot; /&gt;.">该事务的 <see cref="T:System.Data.IsolationLevel" />。 默认值为 <see langword="ReadCommitted" />。</returns>
    </member>
    <member name="T:System.Data.InRowChangingEventException">
      <summary vsli:raw="Represents the exception that is thrown when you call the &lt;see cref=&quot;M:System.Data.DataRow.EndEdit&quot; /&gt; method within the &lt;see cref=&quot;E:System.Data.DataTable.RowChanging&quot; /&gt; event.">表示在 <see cref="M:System.Data.DataRow.EndEdit" /> 事件中调用 <see cref="E:System.Data.DataTable.RowChanging" /> 方法时引发的异常。</summary>
    </member>
    <member name="M:System.Data.InRowChangingEventException.#ctor">
      <summary vsli:raw="Initializes a new instance of the &lt;see cref=&quot;T:System.Data.InRowChangingEventException&quot; /&gt; class.">初始化 <see cref="T:System.Data.InRowChangingEventException" /> 类的新实例。</summary>
    </member>
    <member name="M:System.Data.InRowChangingEventException.#ctor(System.Runtime.Serialization.SerializationInfo,System.Runtime.Serialization.StreamingContext)">
      <summary vsli:raw="Initializes a new instance of the &lt;see cref=&quot;T:System.Data.InRowChangingEventException&quot; /&gt; class with serialization information.">使用序列化信息初始化 <see cref="T:System.Data.InRowChangingEventException" /> 类的新实例。</summary>
      <param name="info" vsli:raw="The data that is required to serialize or deserialize an object.">序列化或反序列化对象时所需的数据。</param>
      <param name="context" vsli:raw="Description of the source and destination of the specified serialized stream.">指定的序列化流的源和目标的说明。</param>
    </member>
    <member name="M:System.Data.InRowChangingEventException.#ctor(System.String)">
      <summary vsli:raw="Initializes a new instance of the &lt;see cref=&quot;T:System.Data.InRowChangingEventException&quot; /&gt; class with the specified string.">使用指定的字符串初始化 <see cref="T:System.Data.InRowChangingEventException" /> 类的新实例。</summary>
      <param name="s" vsli:raw="The string to display when the exception is thrown.">引发异常时显示的字符串。</param>
    </member>
    <member name="M:System.Data.InRowChangingEventException.#ctor(System.String,System.Exception)">
      <summary vsli:raw="Initializes a new instance of the &lt;see cref=&quot;T:System.Data.InRowChangingEventException&quot; /&gt; class with a specified error message and a reference to the inner exception that is the cause of this exception.">使用指定的错误消息和对作为此异常原因的内部异常的引用来初始化 <see cref="T:System.Data.InRowChangingEventException" /> 类的新实例。</summary>
      <param name="message" vsli:raw="The error message that explains the reason for the exception.">解释异常原因的错误消息。</param>
      <param name="innerException" vsli:raw="The exception that is the cause of the current exception, or a null reference (&lt;see langword=&quot;Nothing&quot; /&gt; in Visual Basic) if no inner exception is specified.">导致当前异常的异常；如果未指定内部异常，则是一个 null 引用（在 Visual Basic 中为 <see langword="Nothing" />）。</param>
    </member>
    <member name="T:System.Data.InternalDataCollectionBase">
      <summary vsli:raw="Provides the base functionality for creating collections.">提供用于创建集合的基本功能。</summary>
    </member>
    <member name="M:System.Data.InternalDataCollectionBase.#ctor">
      <summary vsli:raw="Initializes a new instance of the &lt;see cref=&quot;T:System.Data.InternalDataCollectionBase&quot; /&gt; class.">初始化 <see cref="T:System.Data.InternalDataCollectionBase" /> 类的新实例。</summary>
    </member>
    <member name="M:System.Data.InternalDataCollectionBase.CopyTo(System.Array,System.Int32)">
      <summary vsli:raw="Copies all the elements of the current &lt;see cref=&quot;T:System.Data.InternalDataCollectionBase&quot; /&gt; to a one-dimensional &lt;see cref=&quot;T:System.Array&quot; /&gt;, starting at the specified &lt;see cref=&quot;T:System.Data.InternalDataCollectionBase&quot; /&gt; index.">将当前 <see cref="T:System.Data.InternalDataCollectionBase" /> 的所有元素复制到一维 <see cref="T:System.Array" />，从指定的 <see cref="T:System.Data.InternalDataCollectionBase" /> 索引开始。</summary>
      <param name="ar" vsli:raw="The one-dimensional &lt;see cref=&quot;T:System.Array&quot; /&gt; to copy the current &lt;see cref=&quot;T:System.Data.InternalDataCollectionBase&quot; /&gt; object's elements into.">要将当前 <see cref="T:System.Data.InternalDataCollectionBase" /> 对象的元素复制到其中的一维 <see cref="T:System.Array" />。</param>
      <param name="index" vsli:raw="The destination &lt;see cref=&quot;T:System.Array&quot; /&gt; index to start copying into.">从其所在位置开始复制对象的目标 <see cref="T:System.Array" /> 索引。</param>
    </member>
    <member name="M:System.Data.InternalDataCollectionBase.GetEnumerator">
      <summary vsli:raw="Gets an &lt;see cref=&quot;T:System.Collections.IEnumerator&quot; /&gt; for the collection.">获取集合的 <see cref="T:System.Collections.IEnumerator" />。</summary>
      <returns vsli:raw="An &lt;see cref=&quot;T:System.Collections.IEnumerator&quot; /&gt; for the collection.">集合的 <see cref="T:System.Collections.IEnumerator" />。</returns>
    </member>
    <member name="P:System.Data.InternalDataCollectionBase.Count">
      <summary vsli:raw="Gets the total number of elements in a collection.">获取集合中的元素总数。</summary>
      <returns vsli:raw="The total number of elements in a collection.">集合中的元素的总数。</returns>
    </member>
    <member name="P:System.Data.InternalDataCollectionBase.IsReadOnly">
      <summary vsli:raw="Gets a value that indicates whether the &lt;see cref=&quot;T:System.Data.InternalDataCollectionBase&quot; /&gt; is read-only.">获取一个值，该值指示 <see cref="T:System.Data.InternalDataCollectionBase" /> 是否为只读。</summary>
      <returns vsli:raw="&lt;see langword=&quot;true&quot; /&gt; if the collection is read-only; otherwise, &lt;see langword=&quot;false&quot; /&gt;. The default is &lt;see langword=&quot;false&quot; /&gt;.">如果该集合为只读，则为 <see langword="true" />；否则为 <see langword="false" />。 默认值为 <see langword="false" />。</returns>
    </member>
    <member name="P:System.Data.InternalDataCollectionBase.IsSynchronized">
      <summary vsli:raw="Gets a value that indicates whether the &lt;see cref=&quot;T:System.Data.InternalDataCollectionBase&quot; /&gt; is synchronized.">获取一个值，该值指示 <see cref="T:System.Data.InternalDataCollectionBase" /> 是否已同步。</summary>
      <returns vsli:raw="&lt;see langword=&quot;true&quot; /&gt; if the collection is synchronized; otherwise, &lt;see langword=&quot;false&quot; /&gt;. The default is &lt;see langword=&quot;false&quot; /&gt;.">如果同步集合，则为 <see langword="true" />；否则为 <see langword="false" />。 默认值为 <see langword="false" />。</returns>
    </member>
    <member name="P:System.Data.InternalDataCollectionBase.List">
      <summary vsli:raw="Gets the items of the collection as a list.">获取作为列表的集合的项。</summary>
      <returns vsli:raw="An &lt;see cref=&quot;T:System.Collections.ArrayList&quot; /&gt; that contains the collection.">包含集合的 <see cref="T:System.Collections.ArrayList" />。</returns>
    </member>
    <member name="P:System.Data.InternalDataCollectionBase.SyncRoot">
      <summary vsli:raw="Gets an object that can be used to synchronize the collection.">获取可用于同步集合的对象。</summary>
      <returns vsli:raw="The &lt;see cref=&quot;T:System.Object&quot; /&gt; used to synchronize the collection.">用于同步集合的 <see cref="T:System.Object" />。</returns>
    </member>
    <member name="T:System.Data.InvalidConstraintException">
      <summary vsli:raw="Represents the exception that is thrown when incorrectly trying to create or access a relation.">表示在不正确地尝试创建或访问关系时引发的异常。</summary>
    </member>
    <member name="M:System.Data.InvalidConstraintException.#ctor">
      <summary vsli:raw="Initializes a new instance of the &lt;see cref=&quot;T:System.Data.InvalidConstraintException&quot; /&gt; class.">初始化 <see cref="T:System.Data.InvalidConstraintException" /> 类的新实例。</summary>
    </member>
    <member name="M:System.Data.InvalidConstraintException.#ctor(System.Runtime.Serialization.SerializationInfo,System.Runtime.Serialization.StreamingContext)">
      <summary vsli:raw="Initializes a new instance of the &lt;see cref=&quot;T:System.Data.InvalidConstraintException&quot; /&gt; class with serialization information.">使用序列化信息初始化 <see cref="T:System.Data.InvalidConstraintException" /> 类的新实例。</summary>
      <param name="info" vsli:raw="The data that is required to serialize or deserialize an object.">序列化或反序列化对象时所需的数据。</param>
      <param name="context" vsli:raw="Description of the source and destination of the specified serialized stream.">指定的序列化流的源和目标的说明。</param>
    </member>
    <member name="M:System.Data.InvalidConstraintException.#ctor(System.String)">
      <summary vsli:raw="Initializes a new instance of the &lt;see cref=&quot;T:System.Data.InvalidConstraintException&quot; /&gt; class with the specified string.">使用指定的字符串初始化 <see cref="T:System.Data.InvalidConstraintException" /> 类的新实例。</summary>
      <param name="s" vsli:raw="The string to display when the exception is thrown.">引发异常时显示的字符串。</param>
    </member>
    <member name="M:System.Data.InvalidConstraintException.#ctor(System.String,System.Exception)">
      <summary vsli:raw="Initializes a new instance of the &lt;see cref=&quot;T:System.Data.InvalidConstraintException&quot; /&gt; class with a specified error message and a reference to the inner exception that is the cause of this exception.">使用指定的错误消息和对作为此异常原因的内部异常的引用来初始化 <see cref="T:System.Data.InvalidConstraintException" /> 类的新实例。</summary>
      <param name="message" vsli:raw="The error message that explains the reason for the exception.">解释异常原因的错误消息。</param>
      <param name="innerException" vsli:raw="The exception that is the cause of the current exception, or a null reference (&lt;see langword=&quot;Nothing&quot; /&gt; in Visual Basic) if no inner exception is specified.">导致当前异常的异常；如果未指定内部异常，则是一个 null 引用（在 Visual Basic 中为 <see langword="Nothing" />）。</param>
    </member>
    <member name="T:System.Data.InvalidExpressionException">
      <summary vsli:raw="Represents the exception that is thrown when you try to add a &lt;see cref=&quot;T:System.Data.DataColumn&quot; /&gt; that contains an invalid &lt;see cref=&quot;P:System.Data.DataColumn.Expression&quot; /&gt; to a &lt;see cref=&quot;T:System.Data.DataColumnCollection&quot; /&gt;.">表示在尝试将包含无效 <see cref="T:System.Data.DataColumn" /> 的 <see cref="P:System.Data.DataColumn.Expression" /> 添加到 <see cref="T:System.Data.DataColumnCollection" /> 中时引发的异常。</summary>
    </member>
    <member name="M:System.Data.InvalidExpressionException.#ctor">
      <summary vsli:raw="Initializes a new instance of the &lt;see cref=&quot;T:System.Data.InvalidExpressionException&quot; /&gt; class.">初始化 <see cref="T:System.Data.InvalidExpressionException" /> 类的新实例。</summary>
    </member>
    <member name="M:System.Data.InvalidExpressionException.#ctor(System.Runtime.Serialization.SerializationInfo,System.Runtime.Serialization.StreamingContext)">
      <summary vsli:raw="Initializes a new instance of the &lt;see cref=&quot;T:System.Data.InvalidExpressionException&quot; /&gt; class with the &lt;see cref=&quot;T:System.Runtime.Serialization.SerializationInfo&quot; /&gt; and the &lt;see cref=&quot;T:System.Runtime.Serialization.StreamingContext&quot; /&gt;.">使用 <see cref="T:System.Runtime.Serialization.SerializationInfo" /> 和 <see cref="T:System.Runtime.Serialization.StreamingContext" /> 初始化 <see cref="T:System.Data.InvalidExpressionException" /> 类的新实例。</summary>
      <param name="info" vsli:raw="The data needed to serialize or deserialize an object.">序列化或反序列化对象所需的数据。</param>
      <param name="context" vsli:raw="The source and destination of a given serialized stream.">给定序列化流的源和目标。</param>
    </member>
    <member name="M:System.Data.InvalidExpressionException.#ctor(System.String)">
      <summary vsli:raw="Initializes a new instance of the &lt;see cref=&quot;T:System.Data.InvalidExpressionException&quot; /&gt; class with the specified string.">使用指定的字符串初始化 <see cref="T:System.Data.InvalidExpressionException" /> 类的新实例。</summary>
      <param name="s" vsli:raw="The string to display when the exception is thrown.">引发异常时显示的字符串。</param>
    </member>
    <member name="M:System.Data.InvalidExpressionException.#ctor(System.String,System.Exception)">
      <summary vsli:raw="Initializes a new instance of the &lt;see cref=&quot;T:System.Data.InvalidExpressionException&quot; /&gt; class with a specified error message and a reference to the inner exception that is the cause of this exception.">使用指定的错误消息和对作为此异常原因的内部异常的引用来初始化 <see cref="T:System.Data.InvalidExpressionException" /> 类的新实例。</summary>
      <param name="message" vsli:raw="The error message that explains the reason for the exception.">解释异常原因的错误消息。</param>
      <param name="innerException" vsli:raw="The exception that is the cause of the current exception, or a null reference (&lt;see langword=&quot;Nothing&quot; /&gt; in Visual Basic) if no inner exception is specified.">导致当前异常的异常；如果未指定内部异常，则是一个 null 引用（在 Visual Basic 中为 <see langword="Nothing" />）。</param>
    </member>
    <member name="T:System.Data.IsolationLevel">
      <summary vsli:raw="Specifies the transaction locking behavior for the connection.">指定连接的事务锁定行为。</summary>
    </member>
    <member name="F:System.Data.IsolationLevel.Chaos">
      <summary vsli:raw="The pending changes from more highly isolated transactions cannot be overwritten.">无法覆盖隔离级别更高的事务中的挂起的更改。</summary>
    </member>
    <member name="F:System.Data.IsolationLevel.ReadCommitted">
      <summary vsli:raw="Shared locks are held while the data is being read to avoid dirty reads, but the data can be changed before the end of the transaction, resulting in non-repeatable reads or phantom data.">在正在读取数据时保持共享锁，以避免脏读，但是在事务结束之前可以更改数据，从而导致不可重复的读取或幻像数据。</summary>
    </member>
    <member name="F:System.Data.IsolationLevel.ReadUncommitted">
      <summary vsli:raw="A dirty read is possible, meaning that no shared locks are issued and no exclusive locks are honored.">可以进行脏读，意思是说，不发布共享锁，也不接受独占锁。</summary>
    </member>
    <member name="F:System.Data.IsolationLevel.RepeatableRead">
      <summary vsli:raw="Locks are placed on all data that is used in a query, preventing other users from updating the data. Prevents non-repeatable reads but phantom rows are still possible.">在查询中使用的所有数据上放置锁，以防止其他用户更新这些数据。 防止不可重复的读取，但是仍可以有幻像行。</summary>
    </member>
    <member name="F:System.Data.IsolationLevel.Serializable">
      <summary vsli:raw="A range lock is placed on the &lt;see cref=&quot;T:System.Data.DataSet&quot; /&gt;, preventing other users from updating or inserting rows into the dataset until the transaction is complete.">在 <see cref="T:System.Data.DataSet" /> 上放置范围锁，以防止在事务完成之前由其他用户更新行或向数据集中插入行。</summary>
    </member>
    <member name="F:System.Data.IsolationLevel.Snapshot">
      <summary vsli:raw="Reduces blocking by storing a version of data that one application can read while another is modifying the same data. Indicates that from one transaction you cannot see changes made in other transactions, even if you requery.">通过在一个应用程序正在修改数据时存储另一个应用程序可以读取的相同数据版本来减少阻止。 表示您无法从一个事务中看到在其他事务中进行的更改，即便重新查询也是如此。</summary>
    </member>
    <member name="F:System.Data.IsolationLevel.Unspecified">
      <summary vsli:raw="A different isolation level than the one specified is being used, but the level cannot be determined.">正在使用与指定隔离级别不同的隔离级别，但是无法确定该级别。</summary>
    </member>
    <member name="T:System.Data.ITableMapping">
      <summary vsli:raw="Associates a source table with a table in a &lt;see cref=&quot;T:System.Data.DataSet&quot; /&gt;, and is implemented by the &lt;see cref=&quot;T:System.Data.Common.DataTableMapping&quot; /&gt; class, which is used in common by .NET data providers.">将源表与 <see cref="T:System.Data.DataSet" /> 中的表关联，并由 <see cref="T:System.Data.Common.DataTableMapping" /> 类实现，该类由 .NET Framework 数据提供程序共同使用。</summary>
    </member>
    <member name="P:System.Data.ITableMapping.ColumnMappings">
      <summary vsli:raw="Gets the derived &lt;see cref=&quot;T:System.Data.Common.DataColumnMappingCollection&quot; /&gt; for the &lt;see cref=&quot;T:System.Data.DataTable&quot; /&gt;.">获取 <see cref="T:System.Data.DataTable" /> 的派生 <see cref="T:System.Data.Common.DataColumnMappingCollection" />。</summary>
      <returns vsli:raw="A collection of data column mappings.">数据列映射集合。</returns>
    </member>
    <member name="P:System.Data.ITableMapping.DataSetTable">
      <summary vsli:raw="Gets or sets the case-insensitive name of the table within the &lt;see cref=&quot;T:System.Data.DataSet&quot; /&gt;.">获取或设置 <see cref="T:System.Data.DataSet" /> 中不区分大小写的表名。</summary>
      <returns vsli:raw="The case-insensitive name of the table within the &lt;see cref=&quot;T:System.Data.DataSet&quot; /&gt;.">
        <see cref="T:System.Data.DataSet" /> 内的表的不区分大小写的名称。</returns>
    </member>
    <member name="P:System.Data.ITableMapping.SourceTable">
      <summary vsli:raw="Gets or sets the case-sensitive name of the source table.">获取或设置区分大小写的源表名称。</summary>
      <returns vsli:raw="The case-sensitive name of the source table.">区分大小写的源表名称。</returns>
    </member>
    <member name="T:System.Data.ITableMappingCollection">
      <summary vsli:raw="Contains a collection of TableMapping objects, and is implemented by the &lt;see cref=&quot;T:System.Data.Common.DataTableMappingCollection&quot; /&gt;, which is used in common by .NET data providers.">包含 TableMapping 对象的集合，并由 <see cref="T:System.Data.Common.DataTableMappingCollection" />（通常由 .NET Framework 数据提供程序共同使用）实现。</summary>
    </member>
    <member name="M:System.Data.ITableMappingCollection.Add(System.String,System.String)">
      <summary vsli:raw="Adds a table mapping to the collection.">向集合添加表映射。</summary>
      <param name="sourceTableName" vsli:raw="The case-sensitive name of the source table.">区分大小写的源表名称。</param>
      <param name="dataSetTableName" vsli:raw="The name of the &lt;see cref=&quot;T:System.Data.DataSet&quot; /&gt; table.">
        <see cref="T:System.Data.DataSet" /> 表的名称。</param>
      <returns vsli:raw="A reference to the newly-mapped &lt;see cref=&quot;T:System.Data.ITableMapping&quot; /&gt; object.">对新映射的 <see cref="T:System.Data.ITableMapping" /> 对象的引用。</returns>
    </member>
    <member name="M:System.Data.ITableMappingCollection.Contains(System.String)">
      <summary vsli:raw="Gets a value indicating whether the collection contains a table mapping with the specified source table name.">获取一个值，该值指示集合是否包含具有指定源表名称的表映射。</summary>
      <param name="sourceTableName" vsli:raw="The case-sensitive name of the source table.">区分大小写的源表名称。</param>
      <returns vsli:raw="&lt;see langword=&quot;true&quot; /&gt; if a table mapping with the specified source table name exists, otherwise &lt;see langword=&quot;false&quot; /&gt;.">如果存在具有指定源表名称的表映射，则为 <see langword="true" />；否则为 <see langword="false" />。</returns>
    </member>
    <member name="M:System.Data.ITableMappingCollection.GetByDataSetTable(System.String)">
      <summary vsli:raw="Gets the TableMapping object with the specified &lt;see cref=&quot;T:System.Data.DataSet&quot; /&gt; table name.">获取具有指定的 <see cref="T:System.Data.DataSet" /> 表名的 TableMapping 对象。</summary>
      <param name="dataSetTableName" vsli:raw="The name of the &lt;see langword=&quot;DataSet&quot; /&gt; table within the collection.">集合中表 <see langword="DataSet" /> 的名称。</param>
      <returns vsli:raw="The TableMapping object with the specified &lt;see langword=&quot;DataSet&quot; /&gt; table name.">具有指定的 <see langword="DataSet" /> 表名的 TableMapping 对象。</returns>
    </member>
    <member name="M:System.Data.ITableMappingCollection.IndexOf(System.String)">
      <summary vsli:raw="Gets the location of the &lt;see cref=&quot;T:System.Data.ITableMapping&quot; /&gt; object within the collection.">获取 <see cref="T:System.Data.ITableMapping" /> 对象在集合内的位置。</summary>
      <param name="sourceTableName" vsli:raw="The case-sensitive name of the source table.">区分大小写的源表名称。</param>
      <returns vsli:raw="The zero-based location of the &lt;see cref=&quot;T:System.Data.ITableMapping&quot; /&gt; object within the collection.">集合中 <see cref="T:System.Data.ITableMapping" /> 对象的从零开始的位置。</returns>
    </member>
    <member name="M:System.Data.ITableMappingCollection.RemoveAt(System.String)">
      <summary vsli:raw="Removes the &lt;see cref=&quot;T:System.Data.ITableMapping&quot; /&gt; object with the specified &lt;see cref=&quot;P:System.Data.ITableMapping.SourceTable&quot; /&gt; name from the collection.">从集合中移除具有指定 <see cref="P:System.Data.ITableMapping.SourceTable" /> 名称的 <see cref="T:System.Data.ITableMapping" /> 对象。</summary>
      <param name="sourceTableName" vsli:raw="The case-sensitive name of the &lt;see langword=&quot;SourceTable&quot; /&gt;.">区分大小写的 <see langword="SourceTable" /> 名称。</param>
    </member>
    <member name="P:System.Data.ITableMappingCollection.Item(System.String)">
      <summary vsli:raw="Gets or sets the instance of &lt;see cref=&quot;T:System.Data.ITableMapping&quot; /&gt; with the specified &lt;see cref=&quot;P:System.Data.ITableMapping.SourceTable&quot; /&gt; name.">获取或设置具有指定 <see cref="P:System.Data.ITableMapping.SourceTable" /> 名称的 <see cref="T:System.Data.ITableMapping" /> 的实例。</summary>
      <param name="index" vsli:raw="The &lt;see langword=&quot;SourceTable&quot; /&gt; name of the &lt;see cref=&quot;T:System.Data.ITableMapping&quot; /&gt;.">
        <see cref="T:System.Data.ITableMapping" /> 的 <see langword="SourceTable" /> 名称。</param>
      <returns vsli:raw="The instance of &lt;see cref=&quot;T:System.Data.ITableMapping&quot; /&gt; with the specified &lt;see langword=&quot;SourceTable&quot; /&gt; name.">具有指定的 <see langword="SourceTable" /> 名称的 <see cref="T:System.Data.ITableMapping" /> 的实例。</returns>
    </member>
    <member name="T:System.Data.KeyRestrictionBehavior">
      <summary vsli:raw="Identifies a list of connection string parameters identified by the &lt;see langword=&quot;KeyRestrictions&quot; /&gt; property that are either allowed or not allowed.">标识由 <see langword="KeyRestrictions" /> 属性标识的连接字符串参数的列表，这些参数或者是被允许的，或者是不被允许的。</summary>
    </member>
    <member name="F:System.Data.KeyRestrictionBehavior.AllowOnly">
      <summary vsli:raw="Default. Identifies the only additional connection string parameters that are allowed.">默认。 标识唯一允许的其他连接字符串参数。</summary>
    </member>
    <member name="F:System.Data.KeyRestrictionBehavior.PreventUsage">
      <summary vsli:raw="Identifies additional connection string parameters that are not allowed.">标识不允许的其他连接字符串参数。</summary>
    </member>
    <member name="T:System.Data.LoadOption">
      <summary vsli:raw="Controls how the values from the data source will be applied to existing rows when using the &lt;see cref=&quot;Overload:System.Data.DataTable.Load&quot; /&gt; or &lt;see cref=&quot;Overload:System.Data.DataSet.Load&quot; /&gt; method.">当使用 <see cref="Overload:System.Data.DataTable.Load" /> 或 <see cref="Overload:System.Data.DataSet.Load" /> 方法时控制数据源中的值如何应用至现有行。</summary>
    </member>
    <member name="F:System.Data.LoadOption.OverwriteChanges">
      <summary vsli:raw="The incoming values for this row will be written to both the current value and the original value versions of the data for each column.">传入此行的值将同时写入每列数据的当前值和原始值版本。</summary>
    </member>
    <member name="F:System.Data.LoadOption.PreserveChanges">
      <summary vsli:raw="The incoming values for this row will be written to the original value version of each column. The current version of the data in each column will not be changed.  This is the default.">传入此行的值将写入每列数据的原始值版本。 每列数据的当前版本不变化。  这是默认设置。</summary>
    </member>
    <member name="F:System.Data.LoadOption.Upsert">
      <summary vsli:raw="The incoming values for this row will be written to the current version of each column. The original version of each column's data will not be changed.">传入此行的值将写入每列数据的当前版本。 每列数据的原始版本不变化。</summary>
    </member>
    <member name="T:System.Data.MappingType">
      <summary vsli:raw="Specifies how a &lt;see cref=&quot;T:System.Data.DataColumn&quot; /&gt; is mapped.">指定如何映射 <see cref="T:System.Data.DataColumn" />。</summary>
    </member>
    <member name="F:System.Data.MappingType.Attribute">
      <summary vsli:raw="The column is mapped to an XML attribute.">将列映射到 XML 特性。</summary>
    </member>
    <member name="F:System.Data.MappingType.Element">
      <summary vsli:raw="The column is mapped to an XML element.">将列映射到 XML 元素。</summary>
    </member>
    <member name="F:System.Data.MappingType.Hidden">
      <summary vsli:raw="The column is mapped to an internal structure.">将列映射到内部结构。</summary>
    </member>
    <member name="F:System.Data.MappingType.SimpleContent">
      <summary vsli:raw="The column is mapped to an &lt;see cref=&quot;T:System.Xml.XmlText&quot; /&gt; node.">将列映射到 <see cref="T:System.Xml.XmlText" /> 节点。</summary>
    </member>
    <member name="T:System.Data.MergeFailedEventArgs">
      <summary vsli:raw="Occurs when a target and source &lt;see langword=&quot;DataRow&quot; /&gt; have the same primary key value, and the &lt;see cref=&quot;P:System.Data.DataSet.EnforceConstraints&quot; /&gt; property is set to true.">在目标和源 <see langword="DataRow" /> 具有相同的主键值，且将 <see cref="P:System.Data.DataSet.EnforceConstraints" /> 属性设置为“真”时发生。</summary>
    </member>
    <member name="M:System.Data.MergeFailedEventArgs.#ctor(System.Data.DataTable,System.String)">
      <summary vsli:raw="Initializes a new instance of the &lt;see cref=&quot;T:System.Data.MergeFailedEventArgs&quot; /&gt; class with the &lt;see cref=&quot;T:System.Data.DataTable&quot; /&gt; and a description of the merge conflict.">使用 <see cref="T:System.Data.MergeFailedEventArgs" /> 和合并冲突说明来初始化 <see cref="T:System.Data.DataTable" /> 类的新实例。</summary>
      <param name="table" vsli:raw="The &lt;see cref=&quot;T:System.Data.DataTable&quot; /&gt; object.">
        <see cref="T:System.Data.DataTable" /> 对象。</param>
      <param name="conflict" vsli:raw="A description of the merge conflict.">合并冲突的说明。</param>
    </member>
    <member name="P:System.Data.MergeFailedEventArgs.Conflict">
      <summary vsli:raw="Returns a description of the merge conflict.">返回合并冲突的说明。</summary>
      <returns vsli:raw="A description of the merge conflict.">合并冲突的说明。</returns>
    </member>
    <member name="P:System.Data.MergeFailedEventArgs.Table">
      <summary vsli:raw="Returns the &lt;see cref=&quot;T:System.Data.DataTable&quot; /&gt; object.">返回 <see cref="T:System.Data.DataTable" /> 对象。</summary>
      <returns vsli:raw="The &lt;see cref=&quot;T:System.Data.DataTable&quot; /&gt; object.">
        <see cref="T:System.Data.DataTable" /> 对象。</returns>
    </member>
    <member name="T:System.Data.MergeFailedEventHandler">
      <summary vsli:raw="Represents the method that will handle the &lt;see cref=&quot;E:System.Data.DataSet.MergeFailed&quot; /&gt; event.">表示用来处理 <see cref="E:System.Data.DataSet.MergeFailed" /> 事件的方法。</summary>
      <param name="sender" vsli:raw="The source of the event.">事件源。</param>
      <param name="e" vsli:raw="The data for the event.">事件的数据。</param>
    </member>
    <member name="T:System.Data.MissingMappingAction">
      <summary vsli:raw="Determines the action that occurs when a mapping is missing from a source table or a source column.">确定源表或源列中缺少映射时发生的操作。</summary>
    </member>
    <member name="F:System.Data.MissingMappingAction.Error">
      <summary vsli:raw="An &lt;see cref=&quot;T:System.InvalidOperationException&quot; /&gt; is generated if the specified column mapping is missing.">如果缺少指定的列映射，则生成 <see cref="T:System.InvalidOperationException" />。</summary>
    </member>
    <member name="F:System.Data.MissingMappingAction.Ignore">
      <summary vsli:raw="The column or table not having a mapping is ignored. Returns &lt;see langword=&quot;null&quot; /&gt;.">忽略没有映射的列或表。 返回 <see langword="null" />。</summary>
    </member>
    <member name="F:System.Data.MissingMappingAction.Passthrough">
      <summary vsli:raw="The source column or source table is created and added to the &lt;see cref=&quot;T:System.Data.DataSet&quot; /&gt; using its original name.">创建源列或源表，并使用其原始名称将其添加到 <see cref="T:System.Data.DataSet" />。</summary>
    </member>
    <member name="T:System.Data.MissingPrimaryKeyException">
      <summary vsli:raw="Represents the exception that is thrown when you try to access a row in a table that has no primary key.">表示在尝试访问没有主键的表中的行时引发的异常。</summary>
    </member>
    <member name="M:System.Data.MissingPrimaryKeyException.#ctor">
      <summary vsli:raw="Initializes a new instance of the &lt;see cref=&quot;T:System.Data.MissingPrimaryKeyException&quot; /&gt; class.">初始化 <see cref="T:System.Data.MissingPrimaryKeyException" /> 类的新实例。</summary>
    </member>
    <member name="M:System.Data.MissingPrimaryKeyException.#ctor(System.Runtime.Serialization.SerializationInfo,System.Runtime.Serialization.StreamingContext)">
      <summary vsli:raw="Initializes a new instance of the &lt;see cref=&quot;T:System.Data.MissingPrimaryKeyException&quot; /&gt; class with serialization information.">使用序列化信息初始化 <see cref="T:System.Data.MissingPrimaryKeyException" /> 类的新实例。</summary>
      <param name="info" vsli:raw="The data that is required to serialize or deserialize an object.">序列化或反序列化对象时所需的数据。</param>
      <param name="context" vsli:raw="A description of the source and destination of the specified serialized stream.">指定序列化流的源和目的地的说明。</param>
    </member>
    <member name="M:System.Data.MissingPrimaryKeyException.#ctor(System.String)">
      <summary vsli:raw="Initializes a new instance of the &lt;see cref=&quot;T:System.Data.MissingPrimaryKeyException&quot; /&gt; class with the specified string.">使用指定的字符串初始化 <see cref="T:System.Data.MissingPrimaryKeyException" /> 类的新实例。</summary>
      <param name="s" vsli:raw="The string to display when the exception is thrown.">引发异常时显示的字符串。</param>
    </member>
    <member name="M:System.Data.MissingPrimaryKeyException.#ctor(System.String,System.Exception)">
      <summary vsli:raw="Initializes a new instance of the &lt;see cref=&quot;T:System.Data.MissingPrimaryKeyException&quot; /&gt; class with a specified error message and a reference to the inner exception that is the cause of this exception.">使用指定的错误消息和对作为此异常原因的内部异常的引用来初始化 <see cref="T:System.Data.MissingPrimaryKeyException" /> 类的新实例。</summary>
      <param name="message" vsli:raw="The error message that explains the reason for the exception.">解释异常原因的错误消息。</param>
      <param name="innerException" vsli:raw="The exception that is the cause of the current exception, or a null reference (&lt;see langword=&quot;Nothing&quot; /&gt; in Visual Basic) if no inner exception is specified.">导致当前异常的异常；如果未指定内部异常，则是一个 null 引用（在 Visual Basic 中为 <see langword="Nothing" />）。</param>
    </member>
    <member name="T:System.Data.MissingSchemaAction">
      <summary vsli:raw="Specifies the action to take when adding data to the &lt;see cref=&quot;T:System.Data.DataSet&quot; /&gt; and the required &lt;see cref=&quot;T:System.Data.DataTable&quot; /&gt; or &lt;see cref=&quot;T:System.Data.DataColumn&quot; /&gt; is missing.">指定在将数据添加到 <see cref="T:System.Data.DataSet" /> 而缺少要求的 <see cref="T:System.Data.DataTable" /> 或 <see cref="T:System.Data.DataColumn" /> 时要采取的操作。</summary>
    </member>
    <member name="F:System.Data.MissingSchemaAction.Add">
      <summary vsli:raw="Adds the necessary columns to complete the schema.">添加必需的列以完成架构。</summary>
    </member>
    <member name="F:System.Data.MissingSchemaAction.AddWithKey">
      <summary vsli:raw="&lt;para&gt;Adds the necessary columns and primary key information to complete the schema. For more information about how primary key information is added to a &lt;see cref=&quot;T:System.Data.DataTable&quot; /&gt;, see &lt;see cref=&quot;M:System.Data.IDataAdapter.FillSchema(System.Data.DataSet,System.Data.SchemaType)&quot; /&gt;.&lt;/para&gt;&lt;para&gt;To function properly with the .NET Framework Data Provider for OLE DB, &lt;see langword=&quot;AddWithKey&quot; /&gt; requires that the native OLE DB provider obtains necessary primary key information by setting the DBPROP_UNIQUEROWS property, and then determines which columns are primary key columns by examining DBCOLUMN_KEYCOLUMN in the IColumnsRowset. As an alternative, the user may explicitly set the primary key constraints on each &lt;see cref=&quot;T:System.Data.DataTable&quot; /&gt;. This ensures that incoming records that match existing records are updated instead of appended. When using &lt;see langword=&quot;AddWithKey&quot; /&gt;, the .NET Framework Data Provider for SQL Server appends a FOR BROWSE clause to the statement being executed. The user should be aware of potential side effects, such as interference with the use of SET FMTONLY ON statements. For more information, see SET FMTONLY (Transact-SQL).&lt;/para&gt;">添加必需的列和主键信息以完成架构。 有关如何将主键信息添加到 <see cref="T:System.Data.DataTable" /> 的更多信息，请参见 <see cref="M:System.Data.IDataAdapter.FillSchema(System.Data.DataSet,System.Data.SchemaType)" />。为与用于 OLE DB 的 .NET Framework 数据提供程序一起正确运行，<see langword="AddWithKey" /> 要求本机 OLE DB 提供程序通过设置 DBPROP_UNIQUEROWS 属性获得必需的主键信息，然后通过检查 IColumnsRowset 中的 DBCOLUMN_KEYCOLUMN 确定哪些列是主键列。 作为一种备选方法，用户可以在每个 <see cref="T:System.Data.DataTable" /> 上显式设置主键约束。 这将确保对与现有记录匹配的传入记录进行更新，而不是追加。 当使用 <see langword="AddWithKey" /> 时，用于 SQL Server 的 .NET Framework 数据提供程序将 FOR BROWSE 子句追加到正在执行的语句。 用户应该注意潜在的副作用，例如对 SET FMTONLY ON 语句的使用产生的干扰。 有关详细信息，请参阅 SET FMTONLY (Transact-SQL)。</summary>
    </member>
    <member name="F:System.Data.MissingSchemaAction.Error">
      <summary vsli:raw="An &lt;see cref=&quot;T:System.InvalidOperationException&quot; /&gt; is generated if the specified column mapping is missing.">如果缺少指定的列映射，则生成 <see cref="T:System.InvalidOperationException" />。</summary>
    </member>
    <member name="F:System.Data.MissingSchemaAction.Ignore">
      <summary vsli:raw="Ignores the extra columns.">忽略额外列。</summary>
    </member>
    <member name="T:System.Data.NoNullAllowedException">
      <summary vsli:raw="Represents the exception that is thrown when you try to insert a null value into a column where &lt;see cref=&quot;P:System.Data.DataColumn.AllowDBNull&quot; /&gt; is set to &lt;see langword=&quot;false&quot; /&gt;.">表示在尝试将 NULL 值插入 <see cref="P:System.Data.DataColumn.AllowDBNull" /> 设置为 <see langword="false" /> 的列中时引发的异常。</summary>
    </member>
    <member name="M:System.Data.NoNullAllowedException.#ctor">
      <summary vsli:raw="Initializes a new instance of the &lt;see cref=&quot;T:System.Data.NoNullAllowedException&quot; /&gt; class.">初始化 <see cref="T:System.Data.NoNullAllowedException" /> 类的新实例。</summary>
    </member>
    <member name="M:System.Data.NoNullAllowedException.#ctor(System.Runtime.Serialization.SerializationInfo,System.Runtime.Serialization.StreamingContext)">
      <summary vsli:raw="Initializes a new instance of the &lt;see cref=&quot;T:System.Data.NoNullAllowedException&quot; /&gt; class with serialization information.">使用序列化信息初始化 <see cref="T:System.Data.NoNullAllowedException" /> 类的新实例。</summary>
      <param name="info" vsli:raw="The data that is required to serialize or deserialize an object.">序列化或反序列化对象时所需的数据。</param>
      <param name="context" vsli:raw="Description of the source and destination of the specified serialized stream.">指定的序列化流的源和目标的说明。</param>
    </member>
    <member name="M:System.Data.NoNullAllowedException.#ctor(System.String)">
      <summary vsli:raw="Initializes a new instance of the &lt;see cref=&quot;T:System.Data.NoNullAllowedException&quot; /&gt; class with the specified string.">使用指定的字符串初始化 <see cref="T:System.Data.NoNullAllowedException" /> 类的新实例。</summary>
      <param name="s" vsli:raw="The string to display when the exception is thrown.">引发异常时显示的字符串。</param>
    </member>
    <member name="M:System.Data.NoNullAllowedException.#ctor(System.String,System.Exception)">
      <summary vsli:raw="Initializes a new instance of the &lt;see cref=&quot;T:System.Data.NoNullAllowedException&quot; /&gt; class with a specified error message and a reference to the inner exception that is the cause of this exception.">使用指定的错误消息和对作为此异常原因的内部异常的引用来初始化 <see cref="T:System.Data.NoNullAllowedException" /> 类的新实例。</summary>
      <param name="message" vsli:raw="The error message that explains the reason for the exception.">解释异常原因的错误消息。</param>
      <param name="innerException" vsli:raw="The exception that is the cause of the current exception, or a null reference (&lt;see langword=&quot;Nothing&quot; /&gt; in Visual Basic) if no inner exception is specified.">导致当前异常的异常；如果未指定内部异常，则是一个 null 引用（在 Visual Basic 中为 <see langword="Nothing" />）。</param>
    </member>
    <member name="T:System.Data.OrderedEnumerableRowCollection`1">
      <summary vsli:raw="Represents a collection of ordered &lt;see cref=&quot;T:System.Data.DataRow&quot; /&gt; objects returned from a query.">表示从查询返回的有序 <see cref="T:System.Data.DataRow" /> 对象的集合。</summary>
      <typeparam name="TRow" vsli:raw="The type of objects in the source sequence, typically &lt;see cref=&quot;T:System.Data.DataRow&quot; /&gt;.">源序列中的对象类型（通常为 <see cref="T:System.Data.DataRow" />）。</typeparam>
    </member>
    <member name="T:System.Data.ParameterDirection">
      <summary vsli:raw="Specifies the type of a parameter within a query relative to the &lt;see cref=&quot;T:System.Data.DataSet&quot; /&gt;.">指定查询内的有关 <see cref="T:System.Data.DataSet" /> 的参数的类型。</summary>
    </member>
    <member name="F:System.Data.ParameterDirection.Input">
      <summary vsli:raw="The parameter is an input parameter.">该参数为输入参数。</summary>
    </member>
    <member name="F:System.Data.ParameterDirection.InputOutput">
      <summary vsli:raw="The parameter is capable of both input and output.">参数既能输入，也能输出。</summary>
    </member>
    <member name="F:System.Data.ParameterDirection.Output">
      <summary vsli:raw="The parameter is an output parameter.">该参数为输出参数。</summary>
    </member>
    <member name="F:System.Data.ParameterDirection.ReturnValue">
      <summary vsli:raw="The parameter represents a return value from an operation such as a stored procedure, built-in function, or user-defined function.">该参数表示从某操作（如存储过程、内置函数或用户定义的函数）返回的值。</summary>
    </member>
    <member name="T:System.Data.PropertyCollection">
      <summary vsli:raw="Represents a collection of properties that can be added to &lt;see cref=&quot;T:System.Data.DataColumn&quot; /&gt;, &lt;see cref=&quot;T:System.Data.DataSet&quot; /&gt;, or &lt;see cref=&quot;T:System.Data.DataTable&quot; /&gt;.">表示可以添加到 <see cref="T:System.Data.DataColumn" />、<see cref="T:System.Data.DataSet" /> 或 <see cref="T:System.Data.DataTable" /> 的属性集合。</summary>
    </member>
    <member name="M:System.Data.PropertyCollection.#ctor">
      <summary vsli:raw="Initializes a new instance of the &lt;see cref=&quot;T:System.Data.PropertyCollection&quot; /&gt; class.">初始化 <see cref="T:System.Data.PropertyCollection" /> 类的新实例。</summary>
    </member>
    <member name="M:System.Data.PropertyCollection.#ctor(System.Runtime.Serialization.SerializationInfo,System.Runtime.Serialization.StreamingContext)">
      <summary vsli:raw="Initializes a new instance of the &lt;see cref=&quot;T:System.Data.PropertyCollection&quot; /&gt; class.">初始化 <see cref="T:System.Data.PropertyCollection" /> 类的新实例。</summary>
      <param name="info" vsli:raw="The data needed to serialize or deserialize an object.">序列化或反序列化对象所需的数据。</param>
      <param name="context" vsli:raw="The source and destination of a given serialized stream.">给定序列化流的源和目标。</param>
    </member>
    <member name="M:System.Data.PropertyCollection.Clone">
      <summary vsli:raw="Creates a shallow copy of the &lt;see cref=&quot;T:System.Data.PropertyCollection&quot; /&gt; object.">创建 <see cref="T:System.Data.PropertyCollection" /> 对象的卷影副本。</summary>
      <returns vsli:raw="Returns &lt;see cref=&quot;T:System.Object&quot; /&gt;, a shallow copy of the &lt;see cref=&quot;T:System.Data.PropertyCollection&quot; /&gt; object.">返回 <see cref="T:System.Object" />，它是 <see cref="T:System.Data.PropertyCollection" /> 对象的浅表副本。</returns>
    </member>
    <member name="T:System.Data.ReadOnlyException">
      <summary vsli:raw="Represents the exception that is thrown when you try to change the value of a read-only column.">表示在尝试更改只读列的值时引发的异常。</summary>
    </member>
    <member name="M:System.Data.ReadOnlyException.#ctor">
      <summary vsli:raw="Initializes a new instance of the &lt;see cref=&quot;T:System.Data.ReadOnlyException&quot; /&gt; class.">初始化 <see cref="T:System.Data.ReadOnlyException" /> 类的新实例。</summary>
    </member>
    <member name="M:System.Data.ReadOnlyException.#ctor(System.Runtime.Serialization.SerializationInfo,System.Runtime.Serialization.StreamingContext)">
      <summary vsli:raw="Initializes a new instance of the &lt;see cref=&quot;T:System.Data.ReadOnlyException&quot; /&gt; class with serialization information.">使用序列化信息初始化 <see cref="T:System.Data.ReadOnlyException" /> 类的新实例。</summary>
      <param name="info" vsli:raw="The data that is required to serialize or deserialize an object.">序列化或反序列化对象时所需的数据。</param>
      <param name="context" vsli:raw="Description of the source and destination of the specified serialized stream.">指定的序列化流的源和目标的说明。</param>
    </member>
    <member name="M:System.Data.ReadOnlyException.#ctor(System.String)">
      <summary vsli:raw="Initializes a new instance of the &lt;see cref=&quot;T:System.Data.ReadOnlyException&quot; /&gt; class with the specified string.">使用指定的字符串初始化 <see cref="T:System.Data.ReadOnlyException" /> 类的新实例。</summary>
      <param name="s" vsli:raw="The string to display when the exception is thrown.">引发异常时显示的字符串。</param>
    </member>
    <member name="M:System.Data.ReadOnlyException.#ctor(System.String,System.Exception)">
      <summary vsli:raw="Initializes a new instance of the &lt;see cref=&quot;T:System.Data.ReadOnlyException&quot; /&gt; class with a specified error message and a reference to the inner exception that is the cause of this exception.">使用指定的错误消息和对作为此异常原因的内部异常的引用来初始化 <see cref="T:System.Data.ReadOnlyException" /> 类的新实例。</summary>
      <param name="message" vsli:raw="The error message that explains the reason for the exception.">解释异常原因的错误消息。</param>
      <param name="innerException" vsli:raw="The exception that is the cause of the current exception, or a null reference (&lt;see langword=&quot;Nothing&quot; /&gt; in Visual Basic) if no inner exception is specified.">导致当前异常的异常；如果未指定内部异常，则是一个 null 引用（在 Visual Basic 中为 <see langword="Nothing" />）。</param>
    </member>
    <member name="T:System.Data.RowNotInTableException">
      <summary vsli:raw="Represents the exception that is thrown when you try to perform an operation on a &lt;see cref=&quot;T:System.Data.DataRow&quot; /&gt; that is not in a &lt;see cref=&quot;T:System.Data.DataTable&quot; /&gt;.">表示尝试在不位于 <see cref="T:System.Data.DataRow" /> 中的 <see cref="T:System.Data.DataTable" /> 上执行操作时引发的异常。</summary>
    </member>
    <member name="M:System.Data.RowNotInTableException.#ctor">
      <summary vsli:raw="Initializes a new instance of the &lt;see cref=&quot;T:System.Data.RowNotInTableException&quot; /&gt; class.">初始化 <see cref="T:System.Data.RowNotInTableException" /> 类的新实例。</summary>
    </member>
    <member name="M:System.Data.RowNotInTableException.#ctor(System.Runtime.Serialization.SerializationInfo,System.Runtime.Serialization.StreamingContext)">
      <summary vsli:raw="Initializes a new instance of the &lt;see cref=&quot;T:System.Data.RowNotInTableException&quot; /&gt; class with serialization information.">使用序列化信息初始化 <see cref="T:System.Data.RowNotInTableException" /> 类的新实例。</summary>
      <param name="info" vsli:raw="The data that is required to serialize or deserialize an object.">序列化或反序列化对象时所需的数据。</param>
      <param name="context" vsli:raw="Description of the source and destination of the specified serialized stream.">指定的序列化流的源和目标的说明。</param>
    </member>
    <member name="M:System.Data.RowNotInTableException.#ctor(System.String)">
      <summary vsli:raw="Initializes a new instance of the &lt;see cref=&quot;T:System.Data.RowNotInTableException&quot; /&gt; class with the specified string.">使用指定的字符串初始化 <see cref="T:System.Data.RowNotInTableException" /> 类的新实例。</summary>
      <param name="s" vsli:raw="The string to display when the exception is thrown.">引发异常时显示的字符串。</param>
    </member>
    <member name="M:System.Data.RowNotInTableException.#ctor(System.String,System.Exception)">
      <summary vsli:raw="Initializes a new instance of the &lt;see cref=&quot;T:System.Data.RowNotInTableException&quot; /&gt; class with a specified error message and a reference to the inner exception that is the cause of this exception.">使用指定的错误消息和对作为此异常原因的内部异常的引用来初始化 <see cref="T:System.Data.RowNotInTableException" /> 类的新实例。</summary>
      <param name="message" vsli:raw="The error message that explains the reason for the exception.">解释异常原因的错误消息。</param>
      <param name="innerException" vsli:raw="The exception that is the cause of the current exception, or a null reference (&lt;see langword=&quot;Nothing&quot; /&gt; in Visual Basic) if no inner exception is specified.">导致当前异常的异常；如果未指定内部异常，则是一个 null 引用（在 Visual Basic 中为 <see langword="Nothing" />）。</param>
    </member>
    <member name="T:System.Data.Rule">
      <summary vsli:raw="Indicates the action that occurs when a &lt;see cref=&quot;T:System.Data.ForeignKeyConstraint&quot; /&gt; is enforced.">指示强制执行 <see cref="T:System.Data.ForeignKeyConstraint" /> 时发生的操作。</summary>
    </member>
    <member name="F:System.Data.Rule.Cascade">
      <summary vsli:raw="Delete or update related rows. This is the default.">删除或更新相关的行。 这是默认设置。</summary>
    </member>
    <member name="F:System.Data.Rule.None">
      <summary vsli:raw="No action taken on related rows.">不对相关的行采取任何操作。</summary>
    </member>
    <member name="F:System.Data.Rule.SetDefault">
      <summary vsli:raw="Set values in related rows to the value contained in the &lt;see cref=&quot;P:System.Data.DataColumn.DefaultValue&quot; /&gt; property.">将相关的行中的值设置为 <see cref="P:System.Data.DataColumn.DefaultValue" /> 属性中包含的值。</summary>
    </member>
    <member name="F:System.Data.Rule.SetNull">
      <summary vsli:raw="Set values in related rows to &lt;see langword=&quot;DBNull&quot; /&gt;.">将相关的行中的值设置为 <see langword="DBNull" />。</summary>
    </member>
    <member name="T:System.Data.SchemaSerializationMode">
      <summary vsli:raw="Indicates the schema serialization mode for a typed &lt;see cref=&quot;T:System.Data.DataSet&quot; /&gt;.">指示类型化 <see cref="T:System.Data.DataSet" /> 的架构序列化模式。</summary>
    </member>
    <member name="F:System.Data.SchemaSerializationMode.ExcludeSchema">
      <summary vsli:raw="Skips schema serialization for a typed &lt;see cref=&quot;T:System.Data.DataSet&quot; /&gt;.">跳过类型化 <see cref="T:System.Data.DataSet" /> 的架构序列化。</summary>
    </member>
    <member name="F:System.Data.SchemaSerializationMode.IncludeSchema">
      <summary vsli:raw="Includes schema serialization for a typed &lt;see cref=&quot;T:System.Data.DataSet&quot; /&gt;. The default.">包括类型化 <see cref="T:System.Data.DataSet" /> 的架构序列化。 默认值。</summary>
    </member>
    <member name="T:System.Data.SchemaType">
      <summary vsli:raw="Specifies how to handle existing schema mappings when performing a &lt;see cref=&quot;M:System.Data.Common.DataAdapter.FillSchema(System.Data.DataSet,System.Data.SchemaType)&quot; /&gt; operation.">指定在执行 <see cref="M:System.Data.Common.DataAdapter.FillSchema(System.Data.DataSet,System.Data.SchemaType)" /> 操作时如何处理现有的架构映射。</summary>
    </member>
    <member name="F:System.Data.SchemaType.Mapped">
      <summary vsli:raw="Apply any existing table mappings to the incoming schema. Configure the &lt;see cref=&quot;T:System.Data.DataSet&quot; /&gt; with the transformed schema.">将任何现有的表映射应用到传入架构。 用转换的架构配置 <see cref="T:System.Data.DataSet" />。</summary>
    </member>
    <member name="F:System.Data.SchemaType.Source">
      <summary vsli:raw="Ignore any table mappings on the DataAdapter. Configure the &lt;see cref=&quot;T:System.Data.DataSet&quot; /&gt; using the incoming schema without applying any transformations.">忽略 DataAdapter 上的任何表映射。 使用传入架构配置 <see cref="T:System.Data.DataSet" />，而不应用任何转换。</summary>
    </member>
    <member name="T:System.Data.SerializationFormat">
      <summary vsli:raw="Determines the serialization format for a &lt;see cref=&quot;T:System.Data.DataSet&quot; /&gt;.">确定 <see cref="T:System.Data.DataSet" /> 的序列化格式。</summary>
    </member>
    <member name="F:System.Data.SerializationFormat.Binary">
      <summary vsli:raw="Serialize as binary content. Available in ADO.NET 2.0 and later versions only. This field is obsolete starting in .NET 7.">作为二进制内容序列化。 仅可在 ADO.NET 2.0 中使用。</summary>
    </member>
    <member name="F:System.Data.SerializationFormat.Xml">
      <summary vsli:raw="Serialize as XML content. The default.">作为 XML 内容序列化。 默认值。</summary>
    </member>
    <member name="T:System.Data.SqlDbType">
      <summary vsli:raw="Specifies SQL Server-specific data type of a field, property, for use in a &lt;see cref=&quot;T:System.Data.SqlClient.SqlParameter&quot; /&gt;.">指定要用于 <see cref="T:System.Data.SqlClient.SqlParameter" /> 中的字段和属性的 SQL Server 特定的数据类型。</summary>
    </member>
    <member name="F:System.Data.SqlDbType.BigInt">
      <summary vsli:raw="&lt;see cref=&quot;T:System.Int64&quot; /&gt;. A 64-bit signed integer.">
        <see cref="T:System.Int64" />。 64 位带符号整数。</summary>
    </member>
    <member name="F:System.Data.SqlDbType.Binary">
      <summary vsli:raw="&lt;see cref=&quot;T:System.Array&quot; /&gt; of type &lt;see cref=&quot;T:System.Byte&quot; /&gt;. A fixed-length stream of binary data ranging between 1 and 8,000 bytes.">
        <see cref="T:System.Array" />类型<see cref="T:System.Byte" />。 二进制数据的固定长度流，范围在 1 到 8,000 个字节之间。</summary>
    </member>
    <member name="F:System.Data.SqlDbType.Bit">
      <summary vsli:raw="&lt;see cref=&quot;T:System.Boolean&quot; /&gt;. An unsigned numeric value that can be 0, 1, or &lt;see langword=&quot;null&quot; /&gt;.">
        <see cref="T:System.Boolean" />。 无符号数值，可为 0、1 或 <see langword="null" />。</summary>
    </member>
    <member name="F:System.Data.SqlDbType.Char">
      <summary vsli:raw="&lt;see cref=&quot;T:System.String&quot; /&gt;. A fixed-length stream of non-Unicode characters ranging between 1 and 8,000 characters.">
        <see cref="T:System.String" />。 非 Unicode 字符的固定长度流，范围在 1 到 8,000 个字符之间。</summary>
    </member>
    <member name="F:System.Data.SqlDbType.Date">
      <summary vsli:raw="Date data ranging in value from January 1,1 AD through December 31, 9999 AD.">日期数据，值范围从公元 1 年 1 月 1 日到公元 9999 年 12 月 31 日。</summary>
    </member>
    <member name="F:System.Data.SqlDbType.DateTime">
      <summary vsli:raw="&lt;see cref=&quot;T:System.DateTime&quot; /&gt;. Date and time data ranging in value from January 1, 1753 to December 31, 9999 to an accuracy of 3.33 milliseconds.">
        <see cref="T:System.DateTime" />。 日期和时间数据，值范围从 1753 年 1 月 1 日到 9999 年 12 月 31 日，精度为 3.33 毫秒。</summary>
    </member>
    <member name="F:System.Data.SqlDbType.DateTime2">
      <summary vsli:raw="Date and time data. Date value range is from January 1,1 AD through December 31, 9999 AD. Time value range is 00:00:00 through 23:59:59.9999999 with an accuracy of 100 nanoseconds.">日期和时间数据。 日期值范围从公元 1 年 1 月 1 日到公元 9999 年 12 月 31 日。 时间值范围从 00:00:00 到 23:59:59.9999999，精度为 100 毫微秒。</summary>
    </member>
    <member name="F:System.Data.SqlDbType.DateTimeOffset">
      <summary vsli:raw="Date and time data with time zone awareness. Date value range is from January 1,1 AD through December 31, 9999 AD. Time value range is 00:00:00 through 23:59:59.9999999 with an accuracy of 100 nanoseconds. Time zone value range is -14:00 through +14:00.">显示时区的日期和时间数据。 日期值范围从公元 1 年 1 月 1 日到公元 9999 年 12 月 31 日。 时间值范围从 00:00:00 到 23:59:59.9999999，精度为 100 毫微秒。 时区值范围从 -14:00 到 +14:00。</summary>
    </member>
    <member name="F:System.Data.SqlDbType.Decimal">
      <summary vsli:raw="&lt;see cref=&quot;T:System.Decimal&quot; /&gt;. A fixed precision and scale numeric value between -10 38 -1 and 10 38 -1.">
        <see cref="T:System.Decimal" />。 固定精度和小数位数数值，在 -10 38 -1 和 10 38 -1 之间。</summary>
    </member>
    <member name="F:System.Data.SqlDbType.Float">
      <summary vsli:raw="&lt;see cref=&quot;T:System.Double&quot; /&gt;. A floating point number within the range of -1.79E +308 through 1.79E +308.">
        <see cref="T:System.Double" />。 浮点数在 -1.79E +308 到 1.79E +308 的范围内。</summary>
    </member>
    <member name="F:System.Data.SqlDbType.Image">
      <summary vsli:raw="&lt;see cref=&quot;T:System.Array&quot; /&gt; of type &lt;see cref=&quot;T:System.Byte&quot; /&gt;. A variable-length stream of binary data ranging from 0 to 2 31 -1 (or 2,147,483,647) bytes.">
        <see cref="T:System.Array" />类型<see cref="T:System.Byte" />。 二进制数据的可变长度流，范围在 0 到 2 31 -1（即 2,147,483,647）字节之间。</summary>
    </member>
    <member name="F:System.Data.SqlDbType.Int">
      <summary vsli:raw="&lt;see cref=&quot;T:System.Int32&quot; /&gt;. A 32-bit signed integer.">
        <see cref="T:System.Int32" />。 32 位带符号整数。</summary>
    </member>
    <member name="F:System.Data.SqlDbType.Money">
      <summary vsli:raw="&lt;see cref=&quot;T:System.Decimal&quot; /&gt;. A currency value ranging from -2 63 (or -9,223,372,036,854,775,808) to 2 63 -1 (or +9,223,372,036,854,775,807) with an accuracy to a ten-thousandth of a currency unit.">
        <see cref="T:System.Decimal" />。 货币值，范围在 -2 63（即 -922,337,203,685,477.5808）到 2 63 -1（即 +922,337,203,685,477.5807）之间，精度为千分之十个货币单位。</summary>
    </member>
    <member name="F:System.Data.SqlDbType.NChar">
      <summary vsli:raw="&lt;see cref=&quot;T:System.String&quot; /&gt;. A fixed-length stream of Unicode characters ranging between 1 and 4,000 characters.">
        <see cref="T:System.String" />。 Unicode 字符的固定长度流，范围在 1 到 4,000 个字符之间。</summary>
    </member>
    <member name="F:System.Data.SqlDbType.NText">
      <summary vsli:raw="&lt;see cref=&quot;T:System.String&quot; /&gt;. A variable-length stream of Unicode data with a maximum length of 2 30 - 1 (or 1,073,741,823) characters.">
        <see cref="T:System.String" />。 Unicode 数据的可变长度流，最大长度为 2 30 - 1（即 1,073,741,823）个字符。</summary>
    </member>
    <member name="F:System.Data.SqlDbType.NVarChar">
      <summary vsli:raw="&lt;see cref=&quot;T:System.String&quot; /&gt;. A variable-length stream of Unicode characters ranging between 1 and 4,000 characters. Implicit conversion fails if the string is greater than 4,000 characters. Explicitly set the object when working with strings longer than 4,000 characters. Use &lt;see cref=&quot;F:System.Data.SqlDbType.NVarChar&quot; /&gt; when the database column is &lt;see langword=&quot;nvarchar(max)&quot; /&gt;.">
        <see cref="T:System.String" />。 Unicode 字符的可变长度流，范围在 1 到 4,000 个字符之间。 如果字符串大于 4,000 个字符，则隐式转换将失败。 使用长度超过 4,000 个字符的字符串时，请显式设置对象。 当数据库列为 <see langword="nvarchar(max)" /> 时，使用 <see cref="F:System.Data.SqlDbType.NVarChar" />。</summary>
    </member>
    <member name="F:System.Data.SqlDbType.Real">
      <summary vsli:raw="&lt;see cref=&quot;T:System.Single&quot; /&gt;. A floating point number within the range of -3.40E +38 through 3.40E +38.">
        <see cref="T:System.Single" />。 -3.40E +38 到 3.40E +38 范围内的浮点数。</summary>
    </member>
    <member name="F:System.Data.SqlDbType.SmallDateTime">
      <summary vsli:raw="&lt;see cref=&quot;T:System.DateTime&quot; /&gt;. Date and time data ranging in value from January 1, 1900 to June 6, 2079 to an accuracy of one minute.">
        <see cref="T:System.DateTime" />。 日期和时间数据，值范围从 1900 年 1 月 1 日到 2079 年 6 月 6 日，精度为 1 分钟。</summary>
    </member>
    <member name="F:System.Data.SqlDbType.SmallInt">
      <summary vsli:raw="&lt;see cref=&quot;T:System.Int16&quot; /&gt;. A 16-bit signed integer.">
        <see cref="T:System.Int16" />。 16 位带符号整数。</summary>
    </member>
    <member name="F:System.Data.SqlDbType.SmallMoney">
      <summary vsli:raw="&lt;see cref=&quot;T:System.Decimal&quot; /&gt;. A currency value ranging from -214,748.3648 to +214,748.3647 with an accuracy to a ten-thousandth of a currency unit.">
        <see cref="T:System.Decimal" />。 货币值，范围在 -214,748.3648 到 +214,748.3647 之间，精度为千分之十个货币单位。</summary>
    </member>
    <member name="F:System.Data.SqlDbType.Structured">
      <summary vsli:raw="A special data type for specifying structured data contained in table-valued parameters.">一种特殊数据类型，用于指定表值参数中包含的构造数据。</summary>
    </member>
    <member name="F:System.Data.SqlDbType.Text">
      <summary vsli:raw="&lt;see cref=&quot;T:System.String&quot; /&gt;. A variable-length stream of non-Unicode data with a maximum length of 2 31 -1 (or 2,147,483,647) characters.">
        <see cref="T:System.String" />。 非 Unicode 数据的可变长度流，最大长度为 2 31 -1（即 2,147,483,647）个字符。</summary>
    </member>
    <member name="F:System.Data.SqlDbType.Time">
      <summary vsli:raw="Time data based on a 24-hour clock. Time value range is 00:00:00 through 23:59:59.9999999 with an accuracy of 100 nanoseconds. Corresponds to a SQL Server &lt;see langword=&quot;time&quot; /&gt; value.">基于 24 小时制的时间数据。 时间值范围从 00:00:00 到 23:59:59.9999999，精度为 100 毫微秒。 对应于 SQL Server <see langword="time" /> 值。</summary>
    </member>
    <member name="F:System.Data.SqlDbType.Timestamp">
      <summary vsli:raw="&lt;see cref=&quot;T:System.Array&quot; /&gt; of type &lt;see cref=&quot;T:System.Byte&quot; /&gt;. Automatically generated binary numbers, which are guaranteed to be unique within a database. &lt;see langword=&quot;timestamp&quot; /&gt; is used typically as a mechanism for version-stamping table rows. The storage size is 8 bytes.">
        <see cref="T:System.Array" />类型<see cref="T:System.Byte" />。 自动生成的二进制数字，保证在数据库中是唯一的。 通常将 <see langword="timestamp" /> 用作版本标记表行的机制。 存储大小为 8 个字节。</summary>
    </member>
    <member name="F:System.Data.SqlDbType.TinyInt">
      <summary vsli:raw="&lt;see cref=&quot;T:System.Byte&quot; /&gt;. An 8-bit unsigned integer.">
        <see cref="T:System.Byte" />。 8 位无符号整数。</summary>
    </member>
    <member name="F:System.Data.SqlDbType.Udt">
      <summary vsli:raw="A SQL Server user-defined type (UDT).">SQL Server 用户定义类型 (UDT)。</summary>
    </member>
    <member name="F:System.Data.SqlDbType.UniqueIdentifier">
      <summary vsli:raw="&lt;see cref=&quot;T:System.Guid&quot; /&gt;. A globally unique identifier (or GUID).">
        <see cref="T:System.Guid" />。 全局唯一标识符（或 GUID）。</summary>
    </member>
    <member name="F:System.Data.SqlDbType.VarBinary">
      <summary vsli:raw="&lt;see cref=&quot;T:System.Array&quot; /&gt; of type &lt;see cref=&quot;T:System.Byte&quot; /&gt;. A variable-length stream of binary data ranging between 1 and 8,000 bytes. Implicit conversion fails if the byte array is greater than 8,000 bytes. Explicitly set the object when working with byte arrays larger than 8,000 bytes.">
        <see cref="T:System.Array" />类型<see cref="T:System.Byte" />。 二进制数据的可变长度流，范围在 1 到 8,000 个字节之间。 如果字节数组大于 8,000 个字节，则隐式转换将失败。 使用大于 8000 个字节的字节数组时，请显式设置对象。</summary>
    </member>
    <member name="F:System.Data.SqlDbType.VarChar">
      <summary vsli:raw="&lt;see cref=&quot;T:System.String&quot; /&gt;. A variable-length stream of non-Unicode characters ranging between 1 and 8,000 characters. Use &lt;see cref=&quot;F:System.Data.SqlDbType.VarChar&quot; /&gt; when the database column is &lt;see langword=&quot;varchar(max)&quot; /&gt;.">
        <see cref="T:System.String" />。 非 Unicode 字符的可变长度流，范围在 1 到 8,000 个字符之间。 当数据库列为 <see langword="varchar(max)" /> 时，使用 <see cref="F:System.Data.SqlDbType.VarChar" />。</summary>
    </member>
    <member name="F:System.Data.SqlDbType.Variant">
      <summary vsli:raw="&lt;see cref=&quot;T:System.Object&quot; /&gt;. A special data type that can contain numeric, string, binary, or date data as well as the SQL Server values Empty and Null, which is assumed if no other type is declared.">
        <see cref="T:System.Object" />。 特殊数据类型，可以包含数值、字符串、二进制或日期数据，以及 SQL Server 值 Empty 和 Null，后两个值在未声明其他类型的情况下采用。</summary>
    </member>
    <member name="F:System.Data.SqlDbType.Xml">
      <summary vsli:raw="An XML value. Obtain the XML as a string using the &lt;see cref=&quot;M:System.Data.SqlClient.SqlDataReader.GetValue(System.Int32)&quot; /&gt; method or &lt;see cref=&quot;P:System.Data.SqlTypes.SqlXml.Value&quot; /&gt; property, or as an &lt;see cref=&quot;T:System.Xml.XmlReader&quot; /&gt; by calling the &lt;see cref=&quot;M:System.Data.SqlTypes.SqlXml.CreateReader&quot; /&gt; method.">XML 值。 使用 <see cref="M:System.Data.SqlClient.SqlDataReader.GetValue(System.Int32)" /> 方法或 <see cref="P:System.Data.SqlTypes.SqlXml.Value" /> 属性获取字符串形式的 XML，或通过调用 <see cref="M:System.Data.SqlTypes.SqlXml.CreateReader" /> 方法获取 <see cref="T:System.Xml.XmlReader" /> 形式的 XML。</summary>
    </member>
    <member name="T:System.Data.SqlTypes.INullable">
      <summary vsli:raw="All the &lt;see cref=&quot;N:System.Data.SqlTypes&quot; /&gt; objects and structures implement the &lt;see langword=&quot;INullable&quot; /&gt; interface.">所有 <see cref="N:System.Data.SqlTypes" /> 对象和结构均实现 <see langword="INullable" /> 接口。</summary>
    </member>
    <member name="P:System.Data.SqlTypes.INullable.IsNull">
      <summary vsli:raw="Indicates whether a structure is null. This property is read-only.">指示结构是否为 null。 此属性为只读。</summary>
      <returns vsli:raw="&lt;see cref=&quot;T:System.Data.SqlTypes.SqlBoolean&quot; /&gt;&lt;see langword=&quot;true&quot; /&gt; if the value of this object is null. Otherwise, &lt;see langword=&quot;false&quot; /&gt;.">
        <see cref="T:System.Data.SqlTypes.SqlBoolean" />
        <see langword="true" /> 如果此对象的值为 null。 否则为 <see langword="false" />。</returns>
    </member>
    <member name="T:System.Data.SqlTypes.SqlAlreadyFilledException">
      <summary vsli:raw="The &lt;see cref=&quot;T:System.Data.SqlTypes.SqlAlreadyFilledException&quot; /&gt; class is not intended for use as a stand-alone component, but as a class from which other classes derive standard functionality.">
        <see cref="T:System.Data.SqlTypes.SqlAlreadyFilledException" /> 类不用作独立组件，而是用作其他类从中派生标准功能的类。</summary>
    </member>
    <member name="M:System.Data.SqlTypes.SqlAlreadyFilledException.#ctor">
      <summary vsli:raw="Initializes a new instance of the &lt;see cref=&quot;T:System.Data.SqlTypes.SqlAlreadyFilledException&quot; /&gt; class.">初始化 <see cref="T:System.Data.SqlTypes.SqlAlreadyFilledException" /> 类的新实例。</summary>
    </member>
    <member name="M:System.Data.SqlTypes.SqlAlreadyFilledException.#ctor(System.String)">
      <summary vsli:raw="Initializes a new instance of the &lt;see cref=&quot;T:System.Data.SqlTypes.SqlAlreadyFilledException&quot; /&gt; class.">初始化 <see cref="T:System.Data.SqlTypes.SqlAlreadyFilledException" /> 类的新实例。</summary>
      <param name="message" vsli:raw="The string to display when the exception is thrown.">引发异常时显示的字符串。</param>
    </member>
    <member name="M:System.Data.SqlTypes.SqlAlreadyFilledException.#ctor(System.String,System.Exception)">
      <summary vsli:raw="Initializes a new instance of the &lt;see cref=&quot;T:System.Data.SqlTypes.SqlAlreadyFilledException&quot; /&gt; class.">初始化 <see cref="T:System.Data.SqlTypes.SqlAlreadyFilledException" /> 类的新实例。</summary>
      <param name="message" vsli:raw="The string to display when the exception is thrown.">引发异常时显示的字符串。</param>
      <param name="e" vsli:raw="A reference to an inner exception.">对内部异常的引用。</param>
    </member>
    <member name="T:System.Data.SqlTypes.SqlBinary">
      <summary vsli:raw="Represents a variable-length stream of binary data to be stored in or retrieved from a database.">表示要存储在数据库中或从数据库中检索的二进制数据的可变长度流。</summary>
    </member>
    <member name="F:System.Data.SqlTypes.SqlBinary.Null">
      <summary vsli:raw="Represents a &lt;see cref=&quot;T:System.DBNull&quot; /&gt; that can be assigned to this instance of the &lt;see cref=&quot;T:System.Data.SqlTypes.SqlBinary&quot; /&gt; structure.">表示可指派给 <see cref="T:System.DBNull" /> 结构的此实例的 <see cref="T:System.Data.SqlTypes.SqlBinary" />。</summary>
    </member>
    <member name="M:System.Data.SqlTypes.SqlBinary.#ctor(System.Byte[])">
      <summary vsli:raw="Initializes a new instance of the &lt;see cref=&quot;T:System.Data.SqlTypes.SqlBinary&quot; /&gt; structure, setting the &lt;see cref=&quot;P:System.Data.SqlTypes.SqlBinary.Value&quot; /&gt; property to the contents of the supplied byte array.">初始化 <see cref="T:System.Data.SqlTypes.SqlBinary" /> 结构的新实例，将 <see cref="P:System.Data.SqlTypes.SqlBinary.Value" /> 属性设置为已提供的字节数组的内容。</summary>
      <param name="value" vsli:raw="The byte array to be stored or retrieved.">要存储或检索的字节数组。</param>
    </member>
    <member name="M:System.Data.SqlTypes.SqlBinary.Add(System.Data.SqlTypes.SqlBinary,System.Data.SqlTypes.SqlBinary)">
      <summary vsli:raw="Concatenates two specified &lt;see cref=&quot;T:System.Data.SqlTypes.SqlBinary&quot; /&gt; values to create a new &lt;see cref=&quot;T:System.Data.SqlTypes.SqlBinary&quot; /&gt; structure.">串联两个指定的 <see cref="T:System.Data.SqlTypes.SqlBinary" /> 值以创建一个新的 <see cref="T:System.Data.SqlTypes.SqlBinary" /> 结构。</summary>
      <param name="x" vsli:raw="A &lt;see cref=&quot;T:System.Data.SqlTypes.SqlBinary&quot; /&gt;.">
        <see cref="T:System.Data.SqlTypes.SqlBinary" />。</param>
      <param name="y" vsli:raw="A &lt;see cref=&quot;T:System.Data.SqlTypes.SqlBinary&quot; /&gt;.">
        <see cref="T:System.Data.SqlTypes.SqlBinary" />。</param>
      <returns vsli:raw="A &lt;see cref=&quot;T:System.Data.SqlTypes.SqlBinary&quot; /&gt; that is the concatenated value of x and y.">一个 <see cref="T:System.Data.SqlTypes.SqlBinary" />，为 x 和 y 的串联值。</returns>
    </member>
    <member name="M:System.Data.SqlTypes.SqlBinary.CompareTo(System.Data.SqlTypes.SqlBinary)">
      <summary vsli:raw="Compares this &lt;see cref=&quot;T:System.Data.SqlTypes.SqlBinary&quot; /&gt; object to the supplied &lt;see cref=&quot;T:System.Data.SqlTypes.SqlBinary&quot; /&gt; object and returns an indication of their relative values.">将此 <see cref="T:System.Data.SqlTypes.SqlBinary" /> 对象与所提供的 <see cref="T:System.Data.SqlTypes.SqlBinary" /> 对象进行比较，并返回其相对值的指示值。</summary>
      <param name="value" vsli:raw="The &lt;see cref=&quot;T:System.Data.SqlTypes.SqlBinary&quot; /&gt; object to be compared to this &lt;see cref=&quot;T:System.Data.SqlTypes.SqlBinary&quot; /&gt; structure.">要与此 <see cref="T:System.Data.SqlTypes.SqlBinary" /> 对象进行比较的 <see cref="T:System.Data.SqlTypes.SqlBinary" /> 对象。</param>
      <returns vsli:raw="A signed number that indicates the relative values of this &lt;see cref=&quot;T:System.Data.SqlTypes.SqlBinary&quot; /&gt; structure and the object.  &#xA;  &#xA; &lt;list type=&quot;table&quot;&gt;&lt;listheader&gt;&lt;term&gt; Return value&lt;/term&gt;&lt;description&gt; Condition&lt;/description&gt;&lt;/listheader&gt;&lt;item&gt;&lt;term&gt; Less than zero&lt;/term&gt;&lt;description&gt; The value of this &lt;see cref=&quot;T:System.Data.SqlTypes.SqlBinary&quot; /&gt; object is less than the object.&lt;/description&gt;&lt;/item&gt;&lt;item&gt;&lt;term&gt; Zero&lt;/term&gt;&lt;description&gt; This &lt;see cref=&quot;T:System.Data.SqlTypes.SqlBinary&quot; /&gt; object is the same as object.&lt;/description&gt;&lt;/item&gt;&lt;item&gt;&lt;term&gt; Greater than zero&lt;/term&gt;&lt;description&gt; This &lt;see cref=&quot;T:System.Data.SqlTypes.SqlBinary&quot; /&gt; object is greater than object, or the object is a null reference.&lt;/description&gt;&lt;/item&gt;&lt;/list&gt;">有符号的数，指示此 <see cref="T:System.Data.SqlTypes.SqlBinary" /> 结构和对象的相对值。  
  
 <list type="table"><listheader><term> 返回值</term><description> 条件</description></listheader><item><term> 小于零</term><description> 此 <see cref="T:System.Data.SqlTypes.SqlBinary" /> 对象的值小于该对象。</description></item><item><term> 零</term><description> 此 <see cref="T:System.Data.SqlTypes.SqlBinary" /> 对象与对象相同。</description></item><item><term> 大于零</term><description> 此 <see cref="T:System.Data.SqlTypes.SqlBinary" /> 对象大于对象，或者该对象为空引用。</description></item></list></returns>
    </member>
    <member name="M:System.Data.SqlTypes.SqlBinary.CompareTo(System.Object)">
      <summary vsli:raw="Compares this &lt;see cref=&quot;T:System.Data.SqlTypes.SqlBinary&quot; /&gt; object to the supplied object and returns an indication of their relative values.">将此 <see cref="T:System.Data.SqlTypes.SqlBinary" /> 对象与所提供的对象进行比较，并返回其相对值的指示值。</summary>
      <param name="value" vsli:raw="The object to be compared to this &lt;see cref=&quot;T:System.Data.SqlTypes.SqlBinary&quot; /&gt; structure.">要与此 <see cref="T:System.Data.SqlTypes.SqlBinary" /> 结构比较的对象。</param>
      <returns vsli:raw="A signed number that indicates the relative values of this &lt;see cref=&quot;T:System.Data.SqlTypes.SqlBinary&quot; /&gt; structure and the object.  &#xA;  &#xA; &lt;list type=&quot;table&quot;&gt;&lt;listheader&gt;&lt;term&gt; Return value&lt;/term&gt;&lt;description&gt; Condition&lt;/description&gt;&lt;/listheader&gt;&lt;item&gt;&lt;term&gt; Less than zero&lt;/term&gt;&lt;description&gt; The value of this &lt;see cref=&quot;T:System.Data.SqlTypes.SqlBinary&quot; /&gt; object is less than the object.&lt;/description&gt;&lt;/item&gt;&lt;item&gt;&lt;term&gt; Zero&lt;/term&gt;&lt;description&gt; This &lt;see cref=&quot;T:System.Data.SqlTypes.SqlBinary&quot; /&gt; object is the same as object.&lt;/description&gt;&lt;/item&gt;&lt;item&gt;&lt;term&gt; Greater than zero&lt;/term&gt;&lt;description&gt; This &lt;see cref=&quot;T:System.Data.SqlTypes.SqlBinary&quot; /&gt; object is greater than object, or the object is a null reference.&lt;/description&gt;&lt;/item&gt;&lt;/list&gt;">有符号的数，指示此 <see cref="T:System.Data.SqlTypes.SqlBinary" /> 结构和对象的相对值。  
  
 <list type="table"><listheader><term> 返回值</term><description> 条件</description></listheader><item><term> 小于零</term><description> 此 <see cref="T:System.Data.SqlTypes.SqlBinary" /> 对象的值小于该对象。</description></item><item><term> 零</term><description> 此 <see cref="T:System.Data.SqlTypes.SqlBinary" /> 对象与对象相同。</description></item><item><term> 大于零</term><description> 此 <see cref="T:System.Data.SqlTypes.SqlBinary" /> 对象大于对象，或者该对象为空引用。</description></item></list></returns>
    </member>
    <member name="M:System.Data.SqlTypes.SqlBinary.Concat(System.Data.SqlTypes.SqlBinary,System.Data.SqlTypes.SqlBinary)">
      <summary vsli:raw="Concatenates two &lt;see cref=&quot;T:System.Data.SqlTypes.SqlBinary&quot; /&gt; structures to create a new &lt;see cref=&quot;T:System.Data.SqlTypes.SqlBinary&quot; /&gt; structure.">串联两个 <see cref="T:System.Data.SqlTypes.SqlBinary" /> 结构以创建一个新 <see cref="T:System.Data.SqlTypes.SqlBinary" /> 结构。</summary>
      <param name="x" vsli:raw="A &lt;see cref=&quot;T:System.Data.SqlTypes.SqlBinary&quot; /&gt; structure.">
        <see cref="T:System.Data.SqlTypes.SqlBinary" /> 结构。</param>
      <param name="y" vsli:raw="A &lt;see cref=&quot;T:System.Data.SqlTypes.SqlBinary&quot; /&gt; structure.">
        <see cref="T:System.Data.SqlTypes.SqlBinary" /> 结构。</param>
      <returns vsli:raw="The concatenated values of the &lt;paramref name=&quot;x&quot; /&gt; and &lt;paramref name=&quot;y&quot; /&gt; parameters.">
        <paramref name="x" /> 和 <paramref name="y" /> 参数的串联值。</returns>
    </member>
    <member name="M:System.Data.SqlTypes.SqlBinary.Equals(System.Data.SqlTypes.SqlBinary,System.Data.SqlTypes.SqlBinary)">
      <summary vsli:raw="Compares two &lt;see cref=&quot;T:System.Data.SqlTypes.SqlBinary&quot; /&gt; structures to determine whether they are equal.">比较两个 <see cref="T:System.Data.SqlTypes.SqlBinary" /> 结构以确定它们是否相等。</summary>
      <param name="x" vsli:raw="A &lt;see cref=&quot;T:System.Data.SqlTypes.SqlBinary&quot; /&gt; structure.">
        <see cref="T:System.Data.SqlTypes.SqlBinary" /> 结构。</param>
      <param name="y" vsli:raw="A &lt;see cref=&quot;T:System.Data.SqlTypes.SqlBinary&quot; /&gt; structure.">
        <see cref="T:System.Data.SqlTypes.SqlBinary" /> 结构。</param>
      <returns vsli:raw="&lt;see langword=&quot;true&quot; /&gt; if the two values are equal. Otherwise, &lt;see langword=&quot;false&quot; /&gt;. If either instance is null, then the &lt;see langword=&quot;SqlBinary&quot; /&gt; will be null.">如果两个值相等，则为 <see langword="true" />。 否则为 <see langword="false" />。 如果任一实例为 null，则 <see langword="SqlBinary" /> 将为 null。</returns>
    </member>
    <member name="M:System.Data.SqlTypes.SqlBinary.Equals(System.Object)">
      <summary vsli:raw="Compares the supplied object parameter to the &lt;see cref=&quot;P:System.Data.SqlTypes.SqlBinary.Value&quot; /&gt; property of the &lt;see cref=&quot;T:System.Data.SqlTypes.SqlBinary&quot; /&gt; object.">将提供的对象参数与 <see cref="P:System.Data.SqlTypes.SqlBinary.Value" /> 对象的 <see cref="T:System.Data.SqlTypes.SqlBinary" /> 属性进行比较。</summary>
      <param name="value" vsli:raw="The object to be compared.">要比较的对象。</param>
      <returns vsli:raw="&lt;see langword=&quot;true&quot; /&gt; if object is an instance of &lt;see cref=&quot;T:System.Data.SqlTypes.SqlBinary&quot; /&gt; and the two are equal; otherwise &lt;see langword=&quot;false&quot; /&gt;.">如果对象是 <see cref="T:System.Data.SqlTypes.SqlBinary" /> 的实例并且两者相等，则为 <see langword="true" />；否则为 <see langword="false" />。</returns>
    </member>
    <member name="M:System.Data.SqlTypes.SqlBinary.GetHashCode">
      <summary vsli:raw="Returns the hash code for this &lt;see cref=&quot;T:System.Data.SqlTypes.SqlBinary&quot; /&gt; structure.">返回此 <see cref="T:System.Data.SqlTypes.SqlBinary" /> 结构的哈希代码。</summary>
      <returns vsli:raw="A 32-bit signed integer hash code.">32 位有符号整数哈希代码。</returns>
    </member>
    <member name="M:System.Data.SqlTypes.SqlBinary.GetXsdType(System.Xml.Schema.XmlSchemaSet)">
      <summary vsli:raw="Returns the XML Schema definition language (XSD) of the specified &lt;see cref=&quot;T:System.Xml.Schema.XmlSchemaSet&quot; /&gt;.">返回指定的 <see cref="T:System.Xml.Schema.XmlSchemaSet" /> 的 XML 架构定义语言 (XSD)。</summary>
      <param name="schemaSet" vsli:raw="An &lt;see cref=&quot;T:System.Xml.Schema.XmlSchemaSet&quot; /&gt;.">
        <see cref="T:System.Xml.Schema.XmlSchemaSet" />。</param>
      <returns vsli:raw="A &lt;see langword=&quot;string&quot; /&gt; that indicates the XSD of the specified &lt;see cref=&quot;T:System.Xml.Schema.XmlSchemaSet&quot; /&gt;.">一个指示指定的 <see cref="T:System.Xml.Schema.XmlSchemaSet" /> 的 XSD 的 <see langword="string" />。</returns>
    </member>
    <member name="M:System.Data.SqlTypes.SqlBinary.GreaterThan(System.Data.SqlTypes.SqlBinary,System.Data.SqlTypes.SqlBinary)">
      <summary vsli:raw="Compares two &lt;see cref=&quot;T:System.Data.SqlTypes.SqlBinary&quot; /&gt; structures to determine whether the first is greater than the second.">对两个 <see cref="T:System.Data.SqlTypes.SqlBinary" /> 结构进行比较，以确定第一个结构是否大于第二个结构。</summary>
      <param name="x" vsli:raw="A &lt;see cref=&quot;T:System.Data.SqlTypes.SqlBinary&quot; /&gt; structure.">
        <see cref="T:System.Data.SqlTypes.SqlBinary" /> 结构。</param>
      <param name="y" vsli:raw="A &lt;see cref=&quot;T:System.Data.SqlTypes.SqlBinary&quot; /&gt; structure.">
        <see cref="T:System.Data.SqlTypes.SqlBinary" /> 结构。</param>
      <returns vsli:raw="A &lt;see cref=&quot;T:System.Data.SqlTypes.SqlBoolean&quot; /&gt; that is &lt;see cref=&quot;F:System.Data.SqlTypes.SqlBoolean.True&quot; /&gt; if the first instance is greater than the second instance. Otherwise &lt;see cref=&quot;F:System.Data.SqlTypes.SqlBoolean.False&quot; /&gt;. If either instance of &lt;see cref=&quot;T:System.Data.SqlTypes.SqlBinary&quot; /&gt; is null, the &lt;see cref=&quot;P:System.Data.SqlTypes.SqlBoolean.Value&quot; /&gt; of the &lt;see cref=&quot;T:System.Data.SqlTypes.SqlBoolean&quot; /&gt; will be &lt;see cref=&quot;F:System.Data.SqlTypes.SqlBoolean.Null&quot; /&gt;.">一个 <see cref="T:System.Data.SqlTypes.SqlBoolean" />，如果第一个实例大于第二个实例，则它为 <see cref="F:System.Data.SqlTypes.SqlBoolean.True" />。 否则为 <see cref="F:System.Data.SqlTypes.SqlBoolean.False" />。 如果 <see cref="T:System.Data.SqlTypes.SqlBinary" /> 的任一实例为空，则 <see cref="P:System.Data.SqlTypes.SqlBoolean.Value" /> 的 <see cref="T:System.Data.SqlTypes.SqlBoolean" /> 将为 <see cref="F:System.Data.SqlTypes.SqlBoolean.Null" />。</returns>
    </member>
    <member name="M:System.Data.SqlTypes.SqlBinary.GreaterThanOrEqual(System.Data.SqlTypes.SqlBinary,System.Data.SqlTypes.SqlBinary)">
      <summary vsli:raw="Compares two &lt;see cref=&quot;T:System.Data.SqlTypes.SqlBinary&quot; /&gt; structures to determine whether the first is greater than or equal to the second.">对两个 <see cref="T:System.Data.SqlTypes.SqlBinary" /> 结构进行比较，以确定第一个结构是否大于或等于第二个结构。</summary>
      <param name="x" vsli:raw="A &lt;see cref=&quot;T:System.Data.SqlTypes.SqlBinary&quot; /&gt; structure.">
        <see cref="T:System.Data.SqlTypes.SqlBinary" /> 结构。</param>
      <param name="y" vsli:raw="A &lt;see cref=&quot;T:System.Data.SqlTypes.SqlBinary&quot; /&gt; structure.">
        <see cref="T:System.Data.SqlTypes.SqlBinary" /> 结构。</param>
      <returns vsli:raw="A &lt;see cref=&quot;T:System.Data.SqlTypes.SqlBoolean&quot; /&gt; that is &lt;see cref=&quot;F:System.Data.SqlTypes.SqlBoolean.True&quot; /&gt; if the first instance is greater than or equal to the second instance. Otherwise &lt;see cref=&quot;F:System.Data.SqlTypes.SqlBoolean.False&quot; /&gt;. If either instance of &lt;see cref=&quot;T:System.Data.SqlTypes.SqlBinary&quot; /&gt; is null, the &lt;see cref=&quot;P:System.Data.SqlTypes.SqlBoolean.Value&quot; /&gt; of the &lt;see cref=&quot;T:System.Data.SqlTypes.SqlBoolean&quot; /&gt; will be &lt;see cref=&quot;F:System.Data.SqlTypes.SqlBoolean.Null&quot; /&gt;.">一个 <see cref="T:System.Data.SqlTypes.SqlBoolean" />，如果第一个实例大于或等于第二个实例，则为 <see cref="F:System.Data.SqlTypes.SqlBoolean.True" />。 否则为 <see cref="F:System.Data.SqlTypes.SqlBoolean.False" />。 如果 <see cref="T:System.Data.SqlTypes.SqlBinary" /> 的任一实例为空，则 <see cref="P:System.Data.SqlTypes.SqlBoolean.Value" /> 的 <see cref="T:System.Data.SqlTypes.SqlBoolean" /> 将为 <see cref="F:System.Data.SqlTypes.SqlBoolean.Null" />。</returns>
    </member>
    <member name="M:System.Data.SqlTypes.SqlBinary.LessThan(System.Data.SqlTypes.SqlBinary,System.Data.SqlTypes.SqlBinary)">
      <summary vsli:raw="Compares two &lt;see cref=&quot;T:System.Data.SqlTypes.SqlBinary&quot; /&gt; structures to determine whether the first is less than the second.">对两个 <see cref="T:System.Data.SqlTypes.SqlBinary" /> 结构进行比较，以确定第一个结构是否小于第二个结构。</summary>
      <param name="x" vsli:raw="A &lt;see cref=&quot;T:System.Data.SqlTypes.SqlBinary&quot; /&gt; structure.">
        <see cref="T:System.Data.SqlTypes.SqlBinary" /> 结构。</param>
      <param name="y" vsli:raw="A &lt;see cref=&quot;T:System.Data.SqlTypes.SqlBinary&quot; /&gt; structure.">
        <see cref="T:System.Data.SqlTypes.SqlBinary" /> 结构。</param>
      <returns vsli:raw="A &lt;see cref=&quot;T:System.Data.SqlTypes.SqlBoolean&quot; /&gt; that is &lt;see cref=&quot;F:System.Data.SqlTypes.SqlBoolean.True&quot; /&gt; if the first instance is less than the second instance. Otherwise &lt;see cref=&quot;F:System.Data.SqlTypes.SqlBoolean.False&quot; /&gt;. If either instance of &lt;see cref=&quot;T:System.Data.SqlTypes.SqlBinary&quot; /&gt; is null, the &lt;see cref=&quot;P:System.Data.SqlTypes.SqlBoolean.Value&quot; /&gt; of the &lt;see cref=&quot;T:System.Data.SqlTypes.SqlBoolean&quot; /&gt; will be &lt;see cref=&quot;F:System.Data.SqlTypes.SqlBoolean.Null&quot; /&gt;.">一个 <see cref="T:System.Data.SqlTypes.SqlBoolean" />，如果第一个实例小于第二个实例，则它为 <see cref="F:System.Data.SqlTypes.SqlBoolean.True" />。 否则为 <see cref="F:System.Data.SqlTypes.SqlBoolean.False" />。 如果 <see cref="T:System.Data.SqlTypes.SqlBinary" /> 的任一实例为空，则 <see cref="P:System.Data.SqlTypes.SqlBoolean.Value" /> 的 <see cref="T:System.Data.SqlTypes.SqlBoolean" /> 将为 <see cref="F:System.Data.SqlTypes.SqlBoolean.Null" />。</returns>
    </member>
    <member name="M:System.Data.SqlTypes.SqlBinary.LessThanOrEqual(System.Data.SqlTypes.SqlBinary,System.Data.SqlTypes.SqlBinary)">
      <summary vsli:raw="Compares two &lt;see cref=&quot;T:System.Data.SqlTypes.SqlBinary&quot; /&gt; structures to determine whether the first is less than or equal to the second.">对两个 <see cref="T:System.Data.SqlTypes.SqlBinary" /> 结构进行比较，以确定第一个结构是否小于或等于第二个结构。</summary>
      <param name="x" vsli:raw="A &lt;see cref=&quot;T:System.Data.SqlTypes.SqlBinary&quot; /&gt; structure.">
        <see cref="T:System.Data.SqlTypes.SqlBinary" /> 结构。</param>
      <param name="y" vsli:raw="A &lt;see cref=&quot;T:System.Data.SqlTypes.SqlBinary&quot; /&gt; structure.">
        <see cref="T:System.Data.SqlTypes.SqlBinary" /> 结构。</param>
      <returns vsli:raw="A &lt;see cref=&quot;T:System.Data.SqlTypes.SqlBoolean&quot; /&gt; that is &lt;see cref=&quot;F:System.Data.SqlTypes.SqlBoolean.True&quot; /&gt; if the first instance is less than or equal to the second instance. Otherwise &lt;see cref=&quot;F:System.Data.SqlTypes.SqlBoolean.False&quot; /&gt;. If either instance of &lt;see cref=&quot;T:System.Data.SqlTypes.SqlBinary&quot; /&gt; is null, the &lt;see cref=&quot;P:System.Data.SqlTypes.SqlBoolean.Value&quot; /&gt; of the &lt;see cref=&quot;T:System.Data.SqlTypes.SqlBoolean&quot; /&gt; will be &lt;see cref=&quot;F:System.Data.SqlTypes.SqlBoolean.Null&quot; /&gt;.">一个 <see cref="T:System.Data.SqlTypes.SqlBoolean" />，如果第一个实例小于或等于第二个实例，则它为 <see cref="F:System.Data.SqlTypes.SqlBoolean.True" />。 否则为 <see cref="F:System.Data.SqlTypes.SqlBoolean.False" />。 如果 <see cref="T:System.Data.SqlTypes.SqlBinary" /> 的任一实例为空，则 <see cref="P:System.Data.SqlTypes.SqlBoolean.Value" /> 的 <see cref="T:System.Data.SqlTypes.SqlBoolean" /> 将为 <see cref="F:System.Data.SqlTypes.SqlBoolean.Null" />。</returns>
    </member>
    <member name="M:System.Data.SqlTypes.SqlBinary.NotEquals(System.Data.SqlTypes.SqlBinary,System.Data.SqlTypes.SqlBinary)">
      <summary vsli:raw="Compares two &lt;see cref=&quot;T:System.Data.SqlTypes.SqlBinary&quot; /&gt; structures to determine whether they are not equal.">比较两个 <see cref="T:System.Data.SqlTypes.SqlBinary" /> 结构以确定它们是否不相等。</summary>
      <param name="x" vsli:raw="A &lt;see cref=&quot;T:System.Data.SqlTypes.SqlBinary&quot; /&gt; structure.">
        <see cref="T:System.Data.SqlTypes.SqlBinary" /> 结构。</param>
      <param name="y" vsli:raw="A &lt;see cref=&quot;T:System.Data.SqlTypes.SqlBinary&quot; /&gt; structure.">
        <see cref="T:System.Data.SqlTypes.SqlBinary" /> 结构。</param>
      <returns vsli:raw="A &lt;see cref=&quot;T:System.Data.SqlTypes.SqlBoolean&quot; /&gt; that is &lt;see cref=&quot;F:System.Data.SqlTypes.SqlBoolean.True&quot; /&gt; if the two instances are not equal or &lt;see cref=&quot;F:System.Data.SqlTypes.SqlBoolean.False&quot; /&gt; if the two instances are equal. If either instance of &lt;see cref=&quot;T:System.Data.SqlTypes.SqlBinary&quot; /&gt; is null, the &lt;see cref=&quot;P:System.Data.SqlTypes.SqlBoolean.Value&quot; /&gt; of the &lt;see cref=&quot;T:System.Data.SqlTypes.SqlBoolean&quot; /&gt; will be &lt;see cref=&quot;F:System.Data.SqlTypes.SqlBoolean.Null&quot; /&gt;.">一个 <see cref="T:System.Data.SqlTypes.SqlBoolean" />，它在两个实例不等时为 <see cref="F:System.Data.SqlTypes.SqlBoolean.True" />，在两个实例相等时为 <see cref="F:System.Data.SqlTypes.SqlBoolean.False" />。 如果 <see cref="T:System.Data.SqlTypes.SqlBinary" /> 的任一实例为空，则 <see cref="P:System.Data.SqlTypes.SqlBoolean.Value" /> 的 <see cref="T:System.Data.SqlTypes.SqlBoolean" /> 将为 <see cref="F:System.Data.SqlTypes.SqlBoolean.Null" />。</returns>
    </member>
    <member name="M:System.Data.SqlTypes.SqlBinary.op_Addition(System.Data.SqlTypes.SqlBinary,System.Data.SqlTypes.SqlBinary)">
      <summary vsli:raw="Concatenates the two &lt;see cref=&quot;T:System.Data.SqlTypes.SqlBinary&quot; /&gt; parameters to create a new &lt;see cref=&quot;T:System.Data.SqlTypes.SqlBinary&quot; /&gt; structure.">串连两个 <see cref="T:System.Data.SqlTypes.SqlBinary" /> 参数以创建一个新 <see cref="T:System.Data.SqlTypes.SqlBinary" /> 结构。</summary>
      <param name="x" vsli:raw="A &lt;see cref=&quot;T:System.Data.SqlTypes.SqlBinary&quot; /&gt; object.">
        <see cref="T:System.Data.SqlTypes.SqlBinary" /> 对象。</param>
      <param name="y" vsli:raw="A &lt;see cref=&quot;T:System.Data.SqlTypes.SqlBinary&quot; /&gt; object.">
        <see cref="T:System.Data.SqlTypes.SqlBinary" /> 对象。</param>
      <returns vsli:raw="The concatenated values of the &lt;paramref name=&quot;x&quot; /&gt; and &lt;paramref name=&quot;y&quot; /&gt; parameters.">
        <paramref name="x" /> 和 <paramref name="y" /> 参数的串联值。</returns>
    </member>
    <member name="M:System.Data.SqlTypes.SqlBinary.op_Equality(System.Data.SqlTypes.SqlBinary,System.Data.SqlTypes.SqlBinary)">
      <summary vsli:raw="Compares two &lt;see cref=&quot;T:System.Data.SqlTypes.SqlBinary&quot; /&gt; structures to determine whether they are equal.">比较两个 <see cref="T:System.Data.SqlTypes.SqlBinary" /> 结构以确定它们是否相等。</summary>
      <param name="x" vsli:raw="A &lt;see cref=&quot;T:System.Data.SqlTypes.SqlBinary&quot; /&gt; object.">
        <see cref="T:System.Data.SqlTypes.SqlBinary" /> 对象。</param>
      <param name="y" vsli:raw="A &lt;see cref=&quot;T:System.Data.SqlTypes.SqlBinary&quot; /&gt; object.">
        <see cref="T:System.Data.SqlTypes.SqlBinary" /> 对象。</param>
      <returns vsli:raw="A &lt;see cref=&quot;T:System.Data.SqlTypes.SqlBoolean&quot; /&gt; that is &lt;see cref=&quot;F:System.Data.SqlTypes.SqlBoolean.True&quot; /&gt; if the two instances are equal or &lt;see cref=&quot;F:System.Data.SqlTypes.SqlBoolean.False&quot; /&gt; if the two instances are not equal. If either instance of &lt;see cref=&quot;T:System.Data.SqlTypes.SqlBinary&quot; /&gt; is null, the &lt;see cref=&quot;P:System.Data.SqlTypes.SqlBoolean.Value&quot; /&gt; of the &lt;see cref=&quot;T:System.Data.SqlTypes.SqlBoolean&quot; /&gt; will be &lt;see cref=&quot;F:System.Data.SqlTypes.SqlBoolean.Null&quot; /&gt;.">一个 <see cref="T:System.Data.SqlTypes.SqlBoolean" />，它在两个实例相等时为 <see cref="F:System.Data.SqlTypes.SqlBoolean.True" />，在两个实例不等时为 <see cref="F:System.Data.SqlTypes.SqlBoolean.False" />。 如果 <see cref="T:System.Data.SqlTypes.SqlBinary" /> 的任一实例为空，则 <see cref="P:System.Data.SqlTypes.SqlBoolean.Value" /> 的 <see cref="T:System.Data.SqlTypes.SqlBoolean" /> 将为 <see cref="F:System.Data.SqlTypes.SqlBoolean.Null" />。</returns>
    </member>
    <member name="M:System.Data.SqlTypes.SqlBinary.op_Explicit(System.Data.SqlTypes.SqlBinary)~System.Byte[]">
      <summary vsli:raw="Converts a &lt;see cref=&quot;T:System.Data.SqlTypes.SqlBinary&quot; /&gt; structure to a &lt;see cref=&quot;T:System.Byte&quot; /&gt; array.">将 <see cref="T:System.Data.SqlTypes.SqlBinary" /> 结构转换为 <see cref="T:System.Byte" /> 数组。</summary>
      <param name="x" vsli:raw="The &lt;see cref=&quot;T:System.Data.SqlTypes.SqlBinary&quot; /&gt; structure to be converted.">要转换的 <see cref="T:System.Data.SqlTypes.SqlBinary" /> 结构。</param>
      <returns vsli:raw="A &lt;see cref=&quot;T:System.Byte&quot; /&gt; array.">
        <see cref="T:System.Byte" /> 数组。</returns>
    </member>
    <member name="M:System.Data.SqlTypes.SqlBinary.op_Explicit(System.Data.SqlTypes.SqlGuid)~System.Data.SqlTypes.SqlBinary">
      <summary vsli:raw="Converts a &lt;see cref=&quot;T:System.Data.SqlTypes.SqlGuid&quot; /&gt; structure to a &lt;see cref=&quot;T:System.Data.SqlTypes.SqlBinary&quot; /&gt; structure.">将 <see cref="T:System.Data.SqlTypes.SqlGuid" /> 结构转换为 <see cref="T:System.Data.SqlTypes.SqlBinary" /> 结构。</summary>
      <param name="x" vsli:raw="The &lt;see cref=&quot;T:System.Data.SqlTypes.SqlGuid&quot; /&gt; structure to be converted.">要转换的 <see cref="T:System.Data.SqlTypes.SqlGuid" /> 结构。</param>
      <returns vsli:raw="The &lt;see cref=&quot;T:System.Data.SqlTypes.SqlGuid&quot; /&gt; structure to be converted.">要转换的 <see cref="T:System.Data.SqlTypes.SqlGuid" /> 结构。</returns>
    </member>
    <member name="M:System.Data.SqlTypes.SqlBinary.op_GreaterThan(System.Data.SqlTypes.SqlBinary,System.Data.SqlTypes.SqlBinary)">
      <summary vsli:raw="Compares two &lt;see cref=&quot;T:System.Data.SqlTypes.SqlBinary&quot; /&gt; structures to determine whether the first is greater than the second.">对两个 <see cref="T:System.Data.SqlTypes.SqlBinary" /> 结构进行比较，以确定第一个结构是否大于第二个结构。</summary>
      <param name="x" vsli:raw="A &lt;see cref=&quot;T:System.Data.SqlTypes.SqlBinary&quot; /&gt; object.">
        <see cref="T:System.Data.SqlTypes.SqlBinary" /> 对象。</param>
      <param name="y" vsli:raw="A &lt;see cref=&quot;T:System.Data.SqlTypes.SqlBinary&quot; /&gt; object.">
        <see cref="T:System.Data.SqlTypes.SqlBinary" /> 对象。</param>
      <returns vsli:raw="A &lt;see cref=&quot;T:System.Data.SqlTypes.SqlBoolean&quot; /&gt; that is &lt;see cref=&quot;F:System.Data.SqlTypes.SqlBoolean.True&quot; /&gt; if the first instance is greater than the second instance. Otherwise &lt;see cref=&quot;F:System.Data.SqlTypes.SqlBoolean.False&quot; /&gt;. If either instance of &lt;see cref=&quot;T:System.Data.SqlTypes.SqlBinary&quot; /&gt; is null, the &lt;see cref=&quot;P:System.Data.SqlTypes.SqlBoolean.Value&quot; /&gt; of the &lt;see cref=&quot;T:System.Data.SqlTypes.SqlBoolean&quot; /&gt; will be &lt;see cref=&quot;F:System.Data.SqlTypes.SqlBoolean.Null&quot; /&gt;.">一个 <see cref="T:System.Data.SqlTypes.SqlBoolean" />，如果第一个实例大于第二个实例，则它为 <see cref="F:System.Data.SqlTypes.SqlBoolean.True" />。 否则为 <see cref="F:System.Data.SqlTypes.SqlBoolean.False" />。 如果 <see cref="T:System.Data.SqlTypes.SqlBinary" /> 的任一实例为空，则 <see cref="P:System.Data.SqlTypes.SqlBoolean.Value" /> 的 <see cref="T:System.Data.SqlTypes.SqlBoolean" /> 将为 <see cref="F:System.Data.SqlTypes.SqlBoolean.Null" />。</returns>
    </member>
    <member name="M:System.Data.SqlTypes.SqlBinary.op_GreaterThanOrEqual(System.Data.SqlTypes.SqlBinary,System.Data.SqlTypes.SqlBinary)">
      <summary vsli:raw="Compares two &lt;see cref=&quot;T:System.Data.SqlTypes.SqlBinary&quot; /&gt; structures to determine whether the first is greater than or equal to the second.">对两个 <see cref="T:System.Data.SqlTypes.SqlBinary" /> 结构进行比较，以确定第一个结构是否大于或等于第二个结构。</summary>
      <param name="x" vsli:raw="A &lt;see cref=&quot;T:System.Data.SqlTypes.SqlBinary&quot; /&gt; object.">
        <see cref="T:System.Data.SqlTypes.SqlBinary" /> 对象。</param>
      <param name="y" vsli:raw="A &lt;see cref=&quot;T:System.Data.SqlTypes.SqlBinary&quot; /&gt; object.">
        <see cref="T:System.Data.SqlTypes.SqlBinary" /> 对象。</param>
      <returns vsli:raw="A &lt;see cref=&quot;T:System.Data.SqlTypes.SqlBoolean&quot; /&gt; that is &lt;see cref=&quot;F:System.Data.SqlTypes.SqlBoolean.True&quot; /&gt; if the first instance is greater than or equal to the second instance. Otherwise &lt;see cref=&quot;F:System.Data.SqlTypes.SqlBoolean.False&quot; /&gt;. If either instance of &lt;see cref=&quot;T:System.Data.SqlTypes.SqlBinary&quot; /&gt; is null, the &lt;see cref=&quot;P:System.Data.SqlTypes.SqlBoolean.Value&quot; /&gt; of the &lt;see cref=&quot;T:System.Data.SqlTypes.SqlBoolean&quot; /&gt; will be &lt;see cref=&quot;F:System.Data.SqlTypes.SqlBoolean.Null&quot; /&gt;.">一个 <see cref="T:System.Data.SqlTypes.SqlBoolean" />，如果第一个实例大于或等于第二个实例，则为 <see cref="F:System.Data.SqlTypes.SqlBoolean.True" />。 否则为 <see cref="F:System.Data.SqlTypes.SqlBoolean.False" />。 如果 <see cref="T:System.Data.SqlTypes.SqlBinary" /> 的任一实例为空，则 <see cref="P:System.Data.SqlTypes.SqlBoolean.Value" /> 的 <see cref="T:System.Data.SqlTypes.SqlBoolean" /> 将为 <see cref="F:System.Data.SqlTypes.SqlBoolean.Null" />。</returns>
    </member>
    <member name="M:System.Data.SqlTypes.SqlBinary.op_Implicit(System.Byte[])~System.Data.SqlTypes.SqlBinary">
      <summary vsli:raw="Converts an array of bytes to a &lt;see cref=&quot;T:System.Data.SqlTypes.SqlBinary&quot; /&gt; structure.">将字节数组转换为 <see cref="T:System.Data.SqlTypes.SqlBinary" /> 结构。</summary>
      <param name="x" vsli:raw="The array of bytes to be converted.">要转换的字节数组。</param>
      <returns vsli:raw="A &lt;see cref=&quot;T:System.Data.SqlTypes.SqlBinary&quot; /&gt; structure that represents the converted array of bytes.">一个 <see cref="T:System.Data.SqlTypes.SqlBinary" /> 结构，它表示已转换的字节数组。</returns>
    </member>
    <member name="M:System.Data.SqlTypes.SqlBinary.op_Inequality(System.Data.SqlTypes.SqlBinary,System.Data.SqlTypes.SqlBinary)">
      <summary vsli:raw="Compares two &lt;see cref=&quot;T:System.Data.SqlTypes.SqlBinary&quot; /&gt; structures to determine whether they are not equal.">比较两个 <see cref="T:System.Data.SqlTypes.SqlBinary" /> 结构以确定它们是否不相等。</summary>
      <param name="x" vsli:raw="A &lt;see cref=&quot;T:System.Data.SqlTypes.SqlBinary&quot; /&gt; object.">
        <see cref="T:System.Data.SqlTypes.SqlBinary" /> 对象。</param>
      <param name="y" vsli:raw="A &lt;see cref=&quot;T:System.Data.SqlTypes.SqlBinary&quot; /&gt; object.">
        <see cref="T:System.Data.SqlTypes.SqlBinary" /> 对象。</param>
      <returns vsli:raw="A &lt;see cref=&quot;T:System.Data.SqlTypes.SqlBoolean&quot; /&gt; that is &lt;see cref=&quot;F:System.Data.SqlTypes.SqlBoolean.True&quot; /&gt; if the two instances are not equal or &lt;see cref=&quot;F:System.Data.SqlTypes.SqlBoolean.False&quot; /&gt; if the two instances are equal. If either instance of &lt;see cref=&quot;T:System.Data.SqlTypes.SqlBinary&quot; /&gt; is null, the &lt;see cref=&quot;P:System.Data.SqlTypes.SqlBoolean.Value&quot; /&gt; of the &lt;see cref=&quot;T:System.Data.SqlTypes.SqlBoolean&quot; /&gt; will be &lt;see cref=&quot;F:System.Data.SqlTypes.SqlBoolean.Null&quot; /&gt;.">一个 <see cref="T:System.Data.SqlTypes.SqlBoolean" />，它在两个实例不等时为 <see cref="F:System.Data.SqlTypes.SqlBoolean.True" />，在两个实例相等时为 <see cref="F:System.Data.SqlTypes.SqlBoolean.False" />。 如果 <see cref="T:System.Data.SqlTypes.SqlBinary" /> 的任一实例为空，则 <see cref="P:System.Data.SqlTypes.SqlBoolean.Value" /> 的 <see cref="T:System.Data.SqlTypes.SqlBoolean" /> 将为 <see cref="F:System.Data.SqlTypes.SqlBoolean.Null" />。</returns>
    </member>
    <member name="M:System.Data.SqlTypes.SqlBinary.op_LessThan(System.Data.SqlTypes.SqlBinary,System.Data.SqlTypes.SqlBinary)">
      <summary vsli:raw="Compares two &lt;see cref=&quot;T:System.Data.SqlTypes.SqlBinary&quot; /&gt; structures to determine whether the first is less than the second.">对两个 <see cref="T:System.Data.SqlTypes.SqlBinary" /> 结构进行比较，以确定第一个结构是否小于第二个结构。</summary>
      <param name="x" vsli:raw="A &lt;see cref=&quot;T:System.Data.SqlTypes.SqlBinary&quot; /&gt; object.">
        <see cref="T:System.Data.SqlTypes.SqlBinary" /> 对象。</param>
      <param name="y" vsli:raw="A &lt;see cref=&quot;T:System.Data.SqlTypes.SqlBinary&quot; /&gt; object.">
        <see cref="T:System.Data.SqlTypes.SqlBinary" /> 对象。</param>
      <returns vsli:raw="A &lt;see cref=&quot;T:System.Data.SqlTypes.SqlBoolean&quot; /&gt; that is &lt;see cref=&quot;F:System.Data.SqlTypes.SqlBoolean.True&quot; /&gt; if the first instance is less than the second instance. Otherwise &lt;see cref=&quot;F:System.Data.SqlTypes.SqlBoolean.False&quot; /&gt;. If either instance of &lt;see cref=&quot;T:System.Data.SqlTypes.SqlBinary&quot; /&gt; is null, the &lt;see cref=&quot;P:System.Data.SqlTypes.SqlBoolean.Value&quot; /&gt; of the &lt;see cref=&quot;T:System.Data.SqlTypes.SqlBoolean&quot; /&gt; will be &lt;see cref=&quot;F:System.Data.SqlTypes.SqlBoolean.Null&quot; /&gt;.">一个 <see cref="T:System.Data.SqlTypes.SqlBoolean" />，如果第一个实例小于第二个实例，则它为 <see cref="F:System.Data.SqlTypes.SqlBoolean.True" />。 否则为 <see cref="F:System.Data.SqlTypes.SqlBoolean.False" />。 如果 <see cref="T:System.Data.SqlTypes.SqlBinary" /> 的任一实例为空，则 <see cref="P:System.Data.SqlTypes.SqlBoolean.Value" /> 的 <see cref="T:System.Data.SqlTypes.SqlBoolean" /> 将为 <see cref="F:System.Data.SqlTypes.SqlBoolean.Null" />。</returns>
    </member>
    <member name="M:System.Data.SqlTypes.SqlBinary.op_LessThanOrEqual(System.Data.SqlTypes.SqlBinary,System.Data.SqlTypes.SqlBinary)">
      <summary vsli:raw="Compares two &lt;see cref=&quot;T:System.Data.SqlTypes.SqlBinary&quot; /&gt; structures to determine whether the first is less than or equal to the second.">对两个 <see cref="T:System.Data.SqlTypes.SqlBinary" /> 结构进行比较，以确定第一个结构是否小于或等于第二个结构。</summary>
      <param name="x" vsli:raw="A &lt;see cref=&quot;T:System.Data.SqlTypes.SqlBinary&quot; /&gt; object.">
        <see cref="T:System.Data.SqlTypes.SqlBinary" /> 对象。</param>
      <param name="y" vsli:raw="A &lt;see cref=&quot;T:System.Data.SqlTypes.SqlBinary&quot; /&gt; object.">
        <see cref="T:System.Data.SqlTypes.SqlBinary" /> 对象。</param>
      <returns vsli:raw="A &lt;see cref=&quot;T:System.Data.SqlTypes.SqlBoolean&quot; /&gt; that is &lt;see cref=&quot;F:System.Data.SqlTypes.SqlBoolean.True&quot; /&gt; if the first instance is less than or equal to the second instance. Otherwise &lt;see cref=&quot;F:System.Data.SqlTypes.SqlBoolean.False&quot; /&gt;. If either instance of &lt;see cref=&quot;T:System.Data.SqlTypes.SqlBinary&quot; /&gt; is null, the &lt;see cref=&quot;P:System.Data.SqlTypes.SqlBoolean.Value&quot; /&gt; of the &lt;see cref=&quot;T:System.Data.SqlTypes.SqlBoolean&quot; /&gt; will be &lt;see cref=&quot;F:System.Data.SqlTypes.SqlBoolean.Null&quot; /&gt;.">一个 <see cref="T:System.Data.SqlTypes.SqlBoolean" />，如果第一个实例小于或等于第二个实例，则它为 <see cref="F:System.Data.SqlTypes.SqlBoolean.True" />。 否则为 <see cref="F:System.Data.SqlTypes.SqlBoolean.False" />。 如果 <see cref="T:System.Data.SqlTypes.SqlBinary" /> 的任一实例为空，则 <see cref="P:System.Data.SqlTypes.SqlBoolean.Value" /> 的 <see cref="T:System.Data.SqlTypes.SqlBoolean" /> 将为 <see cref="F:System.Data.SqlTypes.SqlBoolean.Null" />。</returns>
    </member>
    <member name="M:System.Data.SqlTypes.SqlBinary.System#Xml#Serialization#IXmlSerializable#GetSchema">
      <summary vsli:raw="For a description of this member, see &lt;see cref=&quot;M:System.Xml.Serialization.IXmlSerializable.GetSchema&quot; /&gt;.">有关此成员的说明，请参见 <see cref="M:System.Xml.Serialization.IXmlSerializable.GetSchema" />。</summary>
      <returns vsli:raw="An &lt;see cref=&quot;T:System.Xml.Schema.XmlSchema&quot; /&gt; instance.">一个 <see cref="T:System.Xml.Schema.XmlSchema" /> 实例。</returns>
    </member>
    <member name="M:System.Data.SqlTypes.SqlBinary.System#Xml#Serialization#IXmlSerializable#ReadXml(System.Xml.XmlReader)">
      <summary vsli:raw="For a description of this member, see &lt;see cref=&quot;M:System.Xml.Serialization.IXmlSerializable.ReadXml(System.Xml.XmlReader)&quot; /&gt;.">有关此成员的说明，请参见 <see cref="M:System.Xml.Serialization.IXmlSerializable.ReadXml(System.Xml.XmlReader)" />。</summary>
      <param name="reader" vsli:raw="A &lt;see cref=&quot;T:System.Xml.XmlReader&quot; /&gt;.">
        <see cref="T:System.Xml.XmlReader" />。</param>
    </member>
    <member name="M:System.Data.SqlTypes.SqlBinary.System#Xml#Serialization#IXmlSerializable#WriteXml(System.Xml.XmlWriter)">
      <summary vsli:raw="For a description of this member, see &lt;see cref=&quot;M:System.Xml.Serialization.IXmlSerializable.WriteXml(System.Xml.XmlWriter)&quot; /&gt;.">有关此成员的说明，请参见 <see cref="M:System.Xml.Serialization.IXmlSerializable.WriteXml(System.Xml.XmlWriter)" />。</summary>
      <param name="writer" vsli:raw="A &lt;see cref=&quot;T:System.Xml.XmlWriter&quot; /&gt;.">
        <see cref="T:System.Xml.XmlWriter" />。</param>
    </member>
    <member name="M:System.Data.SqlTypes.SqlBinary.ToSqlGuid">
      <summary vsli:raw="Converts this instance of &lt;see cref=&quot;T:System.Data.SqlTypes.SqlBinary&quot; /&gt; to &lt;see cref=&quot;T:System.Data.SqlTypes.SqlGuid&quot; /&gt;.">将 <see cref="T:System.Data.SqlTypes.SqlBinary" /> 的此实例转换为 <see cref="T:System.Data.SqlTypes.SqlGuid" />。</summary>
      <returns vsli:raw="A &lt;see cref=&quot;T:System.Data.SqlTypes.SqlGuid&quot; /&gt; structure.">
        <see cref="T:System.Data.SqlTypes.SqlGuid" /> 结构。</returns>
    </member>
    <member name="M:System.Data.SqlTypes.SqlBinary.ToString">
      <summary vsli:raw="Converts this &lt;see cref=&quot;T:System.Data.SqlTypes.SqlBinary&quot; /&gt; object to a string.">将此 <see cref="T:System.Data.SqlTypes.SqlBinary" /> 对象转换为字符串。</summary>
      <returns vsli:raw="A string that contains the &lt;see cref=&quot;P:System.Data.SqlTypes.SqlBinary.Value&quot; /&gt; of the &lt;see cref=&quot;T:System.Data.SqlTypes.SqlBinary&quot; /&gt;. If the &lt;see cref=&quot;P:System.Data.SqlTypes.SqlBinary.Value&quot; /&gt; is null the string will contain &quot;null&quot;.">一个包含 <see cref="P:System.Data.SqlTypes.SqlBinary.Value" /> 的 <see cref="T:System.Data.SqlTypes.SqlBinary" /> 的字符串。 如果 <see cref="P:System.Data.SqlTypes.SqlBinary.Value" /> 为 null，字符串将包含“null”。</returns>
    </member>
    <member name="P:System.Data.SqlTypes.SqlBinary.IsNull">
      <summary vsli:raw="Indicates whether this &lt;see cref=&quot;T:System.Data.SqlTypes.SqlBinary&quot; /&gt; structure is null. This property is read-only.">指示此 <see cref="T:System.Data.SqlTypes.SqlBinary" /> 结构是否为 null。 此属性为只读。</summary>
      <returns vsli:raw="&lt;see langword=&quot;true&quot; /&gt; if &lt;see langword=&quot;null&quot; /&gt;; otherwise, &lt;see langword=&quot;false&quot; /&gt;.">如果是 <see langword="null" />，则为 <see langword="true" />；否则为 <see langword="false" />。</returns>
    </member>
    <member name="P:System.Data.SqlTypes.SqlBinary.Item(System.Int32)">
      <summary vsli:raw="Gets the single byte from the &lt;see cref=&quot;P:System.Data.SqlTypes.SqlBinary.Value&quot; /&gt; property located at the position indicated by the integer parameter, &lt;paramref name=&quot;index&quot; /&gt;. If &lt;paramref name=&quot;index&quot; /&gt; indicates a position beyond the end of the byte array, a &lt;see cref=&quot;T:System.Data.SqlTypes.SqlNullValueException&quot; /&gt; will be raised. This property is read-only.">从 <see cref="P:System.Data.SqlTypes.SqlBinary.Value" /> 属性获取单字节，该属性位于整数参数 <paramref name="index" /> 指示的位置。 如果 <paramref name="index" /> 指示位置位于字节数组的结尾以外，将引发 <see cref="T:System.Data.SqlTypes.SqlNullValueException" />。 此属性为只读。</summary>
      <param name="index" vsli:raw="The position of the byte to be retrieved.">要检索的字节的位置。</param>
      <exception cref="T:System.Data.SqlTypes.SqlNullValueException" vsli:raw="The property is read when the &lt;see cref=&quot;P:System.Data.SqlTypes.SqlBinary.Value&quot; /&gt; property contains &lt;see cref=&quot;F:System.Data.SqlTypes.SqlBinary.Null&quot; /&gt;  &#xA;  &#xA;-or-&#xA;  &#xA; The &lt;paramref name=&quot;index&quot; /&gt; parameter indicates a position beyond the length of the byte array as indicated by the &lt;see cref=&quot;P:System.Data.SqlTypes.SqlBinary.Length&quot; /&gt; property.">当 <see cref="P:System.Data.SqlTypes.SqlBinary.Value" /> 属性包含 <see cref="F:System.Data.SqlTypes.SqlBinary.Null" /> 时，读取该属性。  
  
- 或 - 
<paramref name="index" /> 参数指示超过字节数组长度（由 <see cref="P:System.Data.SqlTypes.SqlBinary.Length" /> 属性指示）的位置。</exception>
      <returns vsli:raw="The byte located at the position indicated by the integer parameter.">位于整数参数指示的位置的字节。</returns>
    </member>
    <member name="P:System.Data.SqlTypes.SqlBinary.Length">
      <summary vsli:raw="Gets the length in bytes of the &lt;see cref=&quot;P:System.Data.SqlTypes.SqlBinary.Value&quot; /&gt; property. This property is read-only.">获取 <see cref="P:System.Data.SqlTypes.SqlBinary.Value" /> 属性的长度（以字节为单位）。 此属性为只读。</summary>
      <exception cref="T:System.Data.SqlTypes.SqlNullValueException" vsli:raw="The &lt;see cref=&quot;P:System.Data.SqlTypes.SqlBinary.Length&quot; /&gt; property is read when the &lt;see cref=&quot;P:System.Data.SqlTypes.SqlBinary.Value&quot; /&gt; property contains &lt;see cref=&quot;F:System.Data.SqlTypes.SqlBinary.Null&quot; /&gt;.">当 <see cref="P:System.Data.SqlTypes.SqlBinary.Length" /> 属性包含 <see cref="P:System.Data.SqlTypes.SqlBinary.Value" /> 时，读取 <see cref="F:System.Data.SqlTypes.SqlBinary.Null" /> 属性。</exception>
      <returns vsli:raw="The length of the binary data in the &lt;see cref=&quot;P:System.Data.SqlTypes.SqlBinary.Value&quot; /&gt; property.">
        <see cref="P:System.Data.SqlTypes.SqlBinary.Value" /> 属性中的二进制数据的长度。</returns>
    </member>
    <member name="P:System.Data.SqlTypes.SqlBinary.Value">
      <summary vsli:raw="Gets the value of the &lt;see cref=&quot;T:System.Data.SqlTypes.SqlBinary&quot; /&gt; structure. This property is read-only.">获取 <see cref="T:System.Data.SqlTypes.SqlBinary" /> 结构的值。 此属性是只读的。</summary>
      <exception cref="T:System.Data.SqlTypes.SqlNullValueException" vsli:raw="The &lt;see cref=&quot;P:System.Data.SqlTypes.SqlBinary.Value&quot; /&gt; property is read when the property contains &lt;see cref=&quot;F:System.Data.SqlTypes.SqlBinary.Null&quot; /&gt;.">当属性包含 <see cref="P:System.Data.SqlTypes.SqlBinary.Value" /> 时，读取 <see cref="F:System.Data.SqlTypes.SqlBinary.Null" /> 属性。</exception>
      <returns vsli:raw="The value of the &lt;see cref=&quot;T:System.Data.SqlTypes.SqlBinary&quot; /&gt; structure.">
        <see cref="T:System.Data.SqlTypes.SqlBinary" /> 结构的值。</returns>
    </member>
    <member name="T:System.Data.SqlTypes.SqlBoolean">
      <summary vsli:raw="Represents an integer value that is either 1 or 0 to be stored in or retrieved from a database.">表示要存储在数据库中或者从数据库中检索的整数值，为 1 或 0。</summary>
    </member>
    <member name="F:System.Data.SqlTypes.SqlBoolean.False">
      <summary vsli:raw="Represents a false value that can be assigned to the &lt;see cref=&quot;P:System.Data.SqlTypes.SqlBoolean.Value&quot; /&gt; property of an instance of the &lt;see cref=&quot;T:System.Data.SqlTypes.SqlBoolean&quot; /&gt; structure.">表示可分配给 <see cref="P:System.Data.SqlTypes.SqlBoolean.Value" /> 结构实例的 <see cref="T:System.Data.SqlTypes.SqlBoolean" /> 属性的“假”值。</summary>
    </member>
    <member name="F:System.Data.SqlTypes.SqlBoolean.Null">
      <summary vsli:raw="Represents &lt;see cref=&quot;T:System.DBNull&quot; /&gt; that can be assigned to this instance of the &lt;see cref=&quot;T:System.Data.SqlTypes.SqlBoolean&quot; /&gt; structure.">表示可指派给 <see cref="T:System.DBNull" /> 结构的此实例的 <see cref="T:System.Data.SqlTypes.SqlBoolean" />。</summary>
    </member>
    <member name="F:System.Data.SqlTypes.SqlBoolean.One">
      <summary vsli:raw="Represents a one value that can be assigned to the &lt;see cref=&quot;P:System.Data.SqlTypes.SqlBoolean.ByteValue&quot; /&gt; property of an instance of the &lt;see cref=&quot;T:System.Data.SqlTypes.SqlBoolean&quot; /&gt; structure.">表示可分配给 <see cref="P:System.Data.SqlTypes.SqlBoolean.ByteValue" /> 结构的 <see cref="T:System.Data.SqlTypes.SqlBoolean" /> 属性的 1 值。</summary>
    </member>
    <member name="F:System.Data.SqlTypes.SqlBoolean.True">
      <summary vsli:raw="Represents a true value that can be assigned to the &lt;see cref=&quot;P:System.Data.SqlTypes.SqlBoolean.Value&quot; /&gt; property of an instance of the &lt;see cref=&quot;T:System.Data.SqlTypes.SqlBoolean&quot; /&gt; structure.">表示可分配给 <see cref="P:System.Data.SqlTypes.SqlBoolean.Value" /> 结构实例的 <see cref="T:System.Data.SqlTypes.SqlBoolean" /> 属性的“真”值。</summary>
    </member>
    <member name="F:System.Data.SqlTypes.SqlBoolean.Zero">
      <summary vsli:raw="Represents a zero value that can be assigned to the &lt;see cref=&quot;P:System.Data.SqlTypes.SqlBoolean.ByteValue&quot; /&gt; property of an instance of the &lt;see cref=&quot;T:System.Data.SqlTypes.SqlBoolean&quot; /&gt; structure.">表示可分配给 <see cref="P:System.Data.SqlTypes.SqlBoolean.ByteValue" /> 结构实例的 <see cref="T:System.Data.SqlTypes.SqlBoolean" /> 属性的零值。</summary>
    </member>
    <member name="M:System.Data.SqlTypes.SqlBoolean.#ctor(System.Boolean)">
      <summary vsli:raw="Initializes a new instance of the &lt;see cref=&quot;T:System.Data.SqlTypes.SqlBoolean&quot; /&gt; structure using the supplied Boolean value.">使用提供的布尔值初始化 <see cref="T:System.Data.SqlTypes.SqlBoolean" /> 结构的新实例。</summary>
      <param name="value" vsli:raw="The value for the new &lt;see cref=&quot;T:System.Data.SqlTypes.SqlBoolean&quot; /&gt; structure; either &lt;see langword=&quot;true&quot; /&gt; or &lt;see langword=&quot;false&quot; /&gt;.">新 <see cref="T:System.Data.SqlTypes.SqlBoolean" /> 结构的值，为 <see langword="true" /> 或 <see langword="false" />。</param>
    </member>
    <member name="M:System.Data.SqlTypes.SqlBoolean.#ctor(System.Int32)">
      <summary vsli:raw="Initializes a new instance of the &lt;see cref=&quot;T:System.Data.SqlTypes.SqlBoolean&quot; /&gt; structure using the specified integer value.">使用指定的整数值初始化 <see cref="T:System.Data.SqlTypes.SqlBoolean" /> 结构的新实例。</summary>
      <param name="value" vsli:raw="The integer whose value is to be used for the new &lt;see cref=&quot;T:System.Data.SqlTypes.SqlBoolean&quot; /&gt; structure.">其值用于新 <see cref="T:System.Data.SqlTypes.SqlBoolean" /> 结构的整数。</param>
    </member>
    <member name="M:System.Data.SqlTypes.SqlBoolean.And(System.Data.SqlTypes.SqlBoolean,System.Data.SqlTypes.SqlBoolean)">
      <summary vsli:raw="Computes the bitwise AND operation of two specified &lt;see cref=&quot;T:System.Data.SqlTypes.SqlBoolean&quot; /&gt; structures.">对两个指定的 <see cref="T:System.Data.SqlTypes.SqlBoolean" /> 结构执行按位 AND 运算。</summary>
      <param name="x" vsli:raw="A &lt;see cref=&quot;T:System.Data.SqlTypes.SqlBoolean&quot; /&gt; structure.">
        <see cref="T:System.Data.SqlTypes.SqlBoolean" /> 结构。</param>
      <param name="y" vsli:raw="A &lt;see cref=&quot;T:System.Data.SqlTypes.SqlBoolean&quot; /&gt; structure.">
        <see cref="T:System.Data.SqlTypes.SqlBoolean" /> 结构。</param>
      <returns vsli:raw="The result of the logical AND operation.">逻辑 AND 运算的结果。</returns>
    </member>
    <member name="M:System.Data.SqlTypes.SqlBoolean.CompareTo(System.Data.SqlTypes.SqlBoolean)">
      <summary vsli:raw="Compares this &lt;see cref=&quot;T:System.Data.SqlTypes.SqlBoolean&quot; /&gt; object to the supplied &lt;see cref=&quot;T:System.Data.SqlTypes.SqlBoolean&quot; /&gt; object and returns an indication of their relative values.">将此 <see cref="T:System.Data.SqlTypes.SqlBoolean" /> 对象与所提供的 <see cref="T:System.Data.SqlTypes.SqlBoolean" /> 对象进行比较，并返回其相对值的指示值。</summary>
      <param name="value" vsli:raw="A &lt;see cref=&quot;T:System.Data.SqlTypes.SqlBoolean&quot; /&gt;&lt;see cref=&quot;T:System.Data.SqlTypes.SqlBoolean&quot; /&gt; object to compare, or a null reference (&lt;see langword=&quot;Nothing&quot; /&gt; in Visual Basic).">要比较的 <see cref="T:System.Data.SqlTypes.SqlBoolean" /><see cref="T:System.Data.SqlTypes.SqlBoolean" /> 对象，或空引用（在 Visual Basic 中为 <see langword="Nothing" />）。</param>
      <returns vsli:raw="A signed number that indicates the relative values of the instance and value.  &#xA;  &#xA; &lt;list type=&quot;table&quot;&gt;&lt;listheader&gt;&lt;term&gt; Value&lt;/term&gt;&lt;description&gt; Description&lt;/description&gt;&lt;/listheader&gt;&lt;item&gt;&lt;term&gt; A negative integer&lt;/term&gt;&lt;description&gt; This instance is less than &lt;paramref name=&quot;value&quot; /&gt;.&lt;/description&gt;&lt;/item&gt;&lt;item&gt;&lt;term&gt; Zero&lt;/term&gt;&lt;description&gt; This instance is equal to &lt;paramref name=&quot;value&quot; /&gt;.&lt;/description&gt;&lt;/item&gt;&lt;item&gt;&lt;term&gt; A positive integer&lt;/term&gt;&lt;description&gt; This instance is greater than &lt;paramref name=&quot;value&quot; /&gt;, or &lt;paramref name=&quot;value&quot; /&gt; is a null reference (&lt;see langword=&quot;Nothing&quot; /&gt; in Visual Basic).&lt;/description&gt;&lt;/item&gt;&lt;/list&gt;">有符号数，指示实例和值的相对值。  
  
 <list type="table"><listheader><term> 值</term><description> 说明</description></listheader><item><term> 负整数</term><description> 此实例小于 <paramref name="value" />。</description></item><item><term> 零</term><description> 此实例等于 <paramref name="value" />。</description></item><item><term> 正整数</term><description> 此实例大于 <paramref name="value" /> ，或 <paramref name="value" /> (Visual Basic) 中为空引用 <see langword="Nothing" /> 。</description></item></list></returns>
    </member>
    <member name="M:System.Data.SqlTypes.SqlBoolean.CompareTo(System.Object)">
      <summary vsli:raw="Compares this &lt;see cref=&quot;T:System.Data.SqlTypes.SqlBoolean&quot; /&gt; structure to a specified object and returns an indication of their relative values.">将此 <see cref="T:System.Data.SqlTypes.SqlBoolean" /> 结构与指定对象进行比较，并返回它们的相对值指示。</summary>
      <param name="value" vsli:raw="An object to compare, or a null reference (&lt;see langword=&quot;Nothing&quot; /&gt; in Visual Basic).">要比较的对象，或 null 引用（在 Visual Basic 中为 <see langword="Nothing" />）。</param>
      <returns vsli:raw="A signed number that indicates the relative values of the instance and value.  &#xA;  &#xA; &lt;list type=&quot;table&quot;&gt;&lt;listheader&gt;&lt;term&gt; Value&lt;/term&gt;&lt;description&gt; Description&lt;/description&gt;&lt;/listheader&gt;&lt;item&gt;&lt;term&gt; A negative integer&lt;/term&gt;&lt;description&gt; This instance is less than &lt;paramref name=&quot;value&quot; /&gt;.&lt;/description&gt;&lt;/item&gt;&lt;item&gt;&lt;term&gt; Zero&lt;/term&gt;&lt;description&gt; This instance is equal to &lt;paramref name=&quot;value&quot; /&gt;.&lt;/description&gt;&lt;/item&gt;&lt;item&gt;&lt;term&gt; A positive integer&lt;/term&gt;&lt;description&gt; This instance is greater than &lt;paramref name=&quot;value&quot; /&gt;, or &lt;paramref name=&quot;value&quot; /&gt; is a null reference (&lt;see langword=&quot;Nothing&quot; /&gt; in Visual Basic).&lt;/description&gt;&lt;/item&gt;&lt;/list&gt;">有符号数，指示实例和值的相对值。  
  
 <list type="table"><listheader><term> 值</term><description> 说明</description></listheader><item><term> 负整数</term><description> 此实例小于 <paramref name="value" />。</description></item><item><term> 零</term><description> 此实例等于 <paramref name="value" />。</description></item><item><term> 正整数</term><description> 此实例大于 <paramref name="value" /> ，或 <paramref name="value" /> (Visual Basic) 中为空引用 <see langword="Nothing" /> 。</description></item></list></returns>
    </member>
    <member name="M:System.Data.SqlTypes.SqlBoolean.Equals(System.Data.SqlTypes.SqlBoolean,System.Data.SqlTypes.SqlBoolean)">
      <summary vsli:raw="Compares two &lt;see cref=&quot;T:System.Data.SqlTypes.SqlBoolean&quot; /&gt; structures to determine whether they are equal.">比较两个 <see cref="T:System.Data.SqlTypes.SqlBoolean" /> 结构以确定它们是否相等。</summary>
      <param name="x" vsli:raw="A &lt;see cref=&quot;T:System.Data.SqlTypes.SqlBoolean&quot; /&gt; structure.">
        <see cref="T:System.Data.SqlTypes.SqlBoolean" /> 结构。</param>
      <param name="y" vsli:raw="A &lt;see cref=&quot;T:System.Data.SqlTypes.SqlBoolean&quot; /&gt; structure.">
        <see cref="T:System.Data.SqlTypes.SqlBoolean" /> 结构。</param>
      <returns vsli:raw="&lt;see cref=&quot;F:System.Data.SqlTypes.SqlBoolean.True&quot; /&gt; if the two instances are equal or &lt;see cref=&quot;F:System.Data.SqlTypes.SqlBoolean.False&quot; /&gt; if the two instances are not equal. If either instance of &lt;see cref=&quot;T:System.Data.SqlTypes.SqlBoolean&quot; /&gt; is null, the &lt;see cref=&quot;P:System.Data.SqlTypes.SqlBoolean.Value&quot; /&gt; of the &lt;see cref=&quot;T:System.Data.SqlTypes.SqlBoolean&quot; /&gt; will be &lt;see cref=&quot;F:System.Data.SqlTypes.SqlBoolean.Null&quot; /&gt;.">如果两个实例相等，则返回 <see cref="F:System.Data.SqlTypes.SqlBoolean.True" />；如果两个实例不相等，则返回 <see cref="F:System.Data.SqlTypes.SqlBoolean.False" />。 如果 <see cref="T:System.Data.SqlTypes.SqlBoolean" /> 的任一实例为空，则 <see cref="P:System.Data.SqlTypes.SqlBoolean.Value" /> 的 <see cref="T:System.Data.SqlTypes.SqlBoolean" /> 将为 <see cref="F:System.Data.SqlTypes.SqlBoolean.Null" />。</returns>
    </member>
    <member name="M:System.Data.SqlTypes.SqlBoolean.Equals(System.Object)">
      <summary vsli:raw="Compares the supplied object parameter to the &lt;see cref=&quot;T:System.Data.SqlTypes.SqlBoolean&quot; /&gt;.">将提供的对象参数与 <see cref="T:System.Data.SqlTypes.SqlBoolean" /> 比较。</summary>
      <param name="value" vsli:raw="The object to be compared.">要比较的对象。</param>
      <returns vsli:raw="&lt;see langword=&quot;true&quot; /&gt; if object is an instance of &lt;see cref=&quot;T:System.Data.SqlTypes.SqlBoolean&quot; /&gt; and the two are equal; otherwise, &lt;see langword=&quot;false&quot; /&gt;.">如果对象是 <see cref="T:System.Data.SqlTypes.SqlBoolean" /> 的实例并且两者相等，则为 <see langword="true" />；否则为 <see langword="false" />。</returns>
    </member>
    <member name="M:System.Data.SqlTypes.SqlBoolean.GetHashCode">
      <summary vsli:raw="Returns the hash code for this instance.">返回此实例的哈希代码。</summary>
      <returns vsli:raw="A 32-bit signed integer hash code.">32 位有符号整数哈希代码。</returns>
    </member>
    <member name="M:System.Data.SqlTypes.SqlBoolean.GetXsdType(System.Xml.Schema.XmlSchemaSet)">
      <summary vsli:raw="Returns the XML Schema definition language (XSD) of the specified &lt;see cref=&quot;T:System.Xml.Schema.XmlSchemaSet&quot; /&gt;.">返回指定的 <see cref="T:System.Xml.Schema.XmlSchemaSet" /> 的 XML 架构定义语言 (XSD)。</summary>
      <param name="schemaSet" vsli:raw="A &lt;see cref=&quot;T:System.Xml.Schema.XmlSchemaSet&quot; /&gt;.">
        <see cref="T:System.Xml.Schema.XmlSchemaSet" />。</param>
      <returns vsli:raw="A &lt;see langword=&quot;string&quot; /&gt; value that indicates the XSD of the specified &lt;see cref=&quot;T:System.Xml.Schema.XmlSchemaSet&quot; /&gt;.">指示指定的 <see cref="T:System.Xml.Schema.XmlSchemaSet" /> 的 XSD 的 <see langword="string" /> 值。</returns>
    </member>
    <member name="M:System.Data.SqlTypes.SqlBoolean.GreaterThan(System.Data.SqlTypes.SqlBoolean,System.Data.SqlTypes.SqlBoolean)">
      <summary vsli:raw="Compares two instances of &lt;see cref=&quot;T:System.Data.SqlTypes.SqlBoolean&quot; /&gt; to determine whether the first is greater than the second.">对 <see cref="T:System.Data.SqlTypes.SqlBoolean" /> 的两个实例进行比较，以确定第一个实例是否大于第二个实例。</summary>
      <param name="x" vsli:raw="A &lt;see cref=&quot;T:System.Data.SqlTypes.SqlBoolean&quot; /&gt; structure.">
        <see cref="T:System.Data.SqlTypes.SqlBoolean" /> 结构。</param>
      <param name="y" vsli:raw="A &lt;see cref=&quot;T:System.Data.SqlTypes.SqlBoolean&quot; /&gt; structure.">
        <see cref="T:System.Data.SqlTypes.SqlBoolean" /> 结构。</param>
      <returns vsli:raw="&lt;see cref=&quot;F:System.Data.SqlTypes.SqlBoolean.True&quot; /&gt; if the first instance is greater than the second instance; otherwise, &lt;see cref=&quot;F:System.Data.SqlTypes.SqlBoolean.False&quot; /&gt;.">如果第一个实例大于第二个实例，则返回 <see cref="F:System.Data.SqlTypes.SqlBoolean.True" />；否则，返回 <see cref="F:System.Data.SqlTypes.SqlBoolean.False" />。</returns>
    </member>
    <member name="M:System.Data.SqlTypes.SqlBoolean.GreaterThanOrEquals(System.Data.SqlTypes.SqlBoolean,System.Data.SqlTypes.SqlBoolean)">
      <summary vsli:raw="Compares two instances of &lt;see cref=&quot;T:System.Data.SqlTypes.SqlBoolean&quot; /&gt; to determine whether the first is greater than or equal to the second.">对 <see cref="T:System.Data.SqlTypes.SqlBoolean" /> 的两个实例进行比较，以确定第一个实例是否大于或等于第二个实例。</summary>
      <param name="x" vsli:raw="A &lt;see cref=&quot;T:System.Data.SqlTypes.SqlBoolean&quot; /&gt; structure.">
        <see cref="T:System.Data.SqlTypes.SqlBoolean" /> 结构。</param>
      <param name="y" vsli:raw="A &lt;see cref=&quot;T:System.Data.SqlTypes.SqlBoolean&quot; /&gt; structure.">
        <see cref="T:System.Data.SqlTypes.SqlBoolean" /> 结构。</param>
      <returns vsli:raw="&lt;see cref=&quot;F:System.Data.SqlTypes.SqlBoolean.True&quot; /&gt; if the first instance is greater than or equal to the second instance; otherwise, &lt;see langword=&quot;false&quot; /&gt;.">如果第一个实例大于或等于第二个实例，则返回 <see cref="F:System.Data.SqlTypes.SqlBoolean.True" />；否则，返回 <see langword="false" />。</returns>
    </member>
    <member name="M:System.Data.SqlTypes.SqlBoolean.LessThan(System.Data.SqlTypes.SqlBoolean,System.Data.SqlTypes.SqlBoolean)">
      <summary vsli:raw="Compares two instances of &lt;see cref=&quot;T:System.Data.SqlTypes.SqlBoolean&quot; /&gt; to determine whether the first is less than the second.">对 <see cref="T:System.Data.SqlTypes.SqlBoolean" /> 的两个实例进行比较，以确定第一个实例是否小于第二个实例。</summary>
      <param name="x" vsli:raw="A &lt;see cref=&quot;T:System.Data.SqlTypes.SqlBoolean&quot; /&gt; structure.">
        <see cref="T:System.Data.SqlTypes.SqlBoolean" /> 结构。</param>
      <param name="y" vsli:raw="A &lt;see cref=&quot;T:System.Data.SqlTypes.SqlBoolean&quot; /&gt; structure.">
        <see cref="T:System.Data.SqlTypes.SqlBoolean" /> 结构。</param>
      <returns vsli:raw="&lt;see cref=&quot;F:System.Data.SqlTypes.SqlBoolean.True&quot; /&gt; if the first instance is less than the second instance; otherwise, &lt;see cref=&quot;F:System.Data.SqlTypes.SqlBoolean.False&quot; /&gt;.">如果第一个实例小于第二个实例，则返回 <see cref="F:System.Data.SqlTypes.SqlBoolean.True" />；否则，返回 <see cref="F:System.Data.SqlTypes.SqlBoolean.False" />。</returns>
    </member>
    <member name="M:System.Data.SqlTypes.SqlBoolean.LessThanOrEquals(System.Data.SqlTypes.SqlBoolean,System.Data.SqlTypes.SqlBoolean)">
      <summary vsli:raw="Compares two instances of &lt;see cref=&quot;T:System.Data.SqlTypes.SqlBoolean&quot; /&gt; to determine whether the first is less than or equal to the second.">对 <see cref="T:System.Data.SqlTypes.SqlBoolean" /> 的两个实例进行比较，以确定第一个实例是否小于或等于第二个实例。</summary>
      <param name="x" vsli:raw="A &lt;see cref=&quot;T:System.Data.SqlTypes.SqlBoolean&quot; /&gt; structure.">
        <see cref="T:System.Data.SqlTypes.SqlBoolean" /> 结构。</param>
      <param name="y" vsli:raw="A &lt;see cref=&quot;T:System.Data.SqlTypes.SqlBoolean&quot; /&gt; structure.">
        <see cref="T:System.Data.SqlTypes.SqlBoolean" /> 结构。</param>
      <returns vsli:raw="&lt;see cref=&quot;F:System.Data.SqlTypes.SqlBoolean.True&quot; /&gt; if the first instance is less than or equal to the second instance; otherwise, &lt;see cref=&quot;F:System.Data.SqlTypes.SqlBoolean.False&quot; /&gt;.">如果第一个实例小于或等于第二个实例，则返回 <see cref="F:System.Data.SqlTypes.SqlBoolean.True" />；否则，返回 <see cref="F:System.Data.SqlTypes.SqlBoolean.False" />。</returns>
    </member>
    <member name="M:System.Data.SqlTypes.SqlBoolean.NotEquals(System.Data.SqlTypes.SqlBoolean,System.Data.SqlTypes.SqlBoolean)">
      <summary vsli:raw="Compares two instances of &lt;see cref=&quot;T:System.Data.SqlTypes.SqlBoolean&quot; /&gt; for equality.">比较 <see cref="T:System.Data.SqlTypes.SqlBoolean" /> 的两个实例是否相等。</summary>
      <param name="x" vsli:raw="A &lt;see cref=&quot;T:System.Data.SqlTypes.SqlBoolean&quot; /&gt; structure.">
        <see cref="T:System.Data.SqlTypes.SqlBoolean" /> 结构。</param>
      <param name="y" vsli:raw="A &lt;see cref=&quot;T:System.Data.SqlTypes.SqlBoolean&quot; /&gt; structure.">
        <see cref="T:System.Data.SqlTypes.SqlBoolean" /> 结构。</param>
      <returns vsli:raw="&lt;see cref=&quot;F:System.Data.SqlTypes.SqlBoolean.True&quot; /&gt; if the two instances are not equal or &lt;see cref=&quot;F:System.Data.SqlTypes.SqlBoolean.False&quot; /&gt; if the two instances are equal. If either instance of &lt;see cref=&quot;T:System.Data.SqlTypes.SqlBoolean&quot; /&gt; is null, the &lt;see cref=&quot;P:System.Data.SqlTypes.SqlBoolean.Value&quot; /&gt; of the &lt;see cref=&quot;T:System.Data.SqlTypes.SqlBoolean&quot; /&gt; will be &lt;see cref=&quot;F:System.Data.SqlTypes.SqlBoolean.Null&quot; /&gt;.">如果两个实例不相等，则返回 <see cref="F:System.Data.SqlTypes.SqlBoolean.True" />；如果两个实例相等，则返回 <see cref="F:System.Data.SqlTypes.SqlBoolean.False" />。 如果 <see cref="T:System.Data.SqlTypes.SqlBoolean" /> 的任一实例为空，则 <see cref="P:System.Data.SqlTypes.SqlBoolean.Value" /> 的 <see cref="T:System.Data.SqlTypes.SqlBoolean" /> 将为 <see cref="F:System.Data.SqlTypes.SqlBoolean.Null" />。</returns>
    </member>
    <member name="M:System.Data.SqlTypes.SqlBoolean.OnesComplement(System.Data.SqlTypes.SqlBoolean)">
      <summary vsli:raw="Performs a one's complement operation on the supplied &lt;see cref=&quot;T:System.Data.SqlTypes.SqlBoolean&quot; /&gt; structures.">对提供的 <see cref="T:System.Data.SqlTypes.SqlBoolean" /> 结构执行 1 的求补运算。</summary>
      <param name="x" vsli:raw="A &lt;see cref=&quot;T:System.Data.SqlTypes.SqlBoolean&quot; /&gt; structure.">
        <see cref="T:System.Data.SqlTypes.SqlBoolean" /> 结构。</param>
      <returns vsli:raw="The one's complement of the supplied &lt;see cref=&quot;T:System.Data.SqlTypes.SqlBoolean&quot; /&gt;.">所提供的 <see cref="T:System.Data.SqlTypes.SqlBoolean" /> 的 one 的补码。</returns>
    </member>
    <member name="M:System.Data.SqlTypes.SqlBoolean.op_BitwiseAnd(System.Data.SqlTypes.SqlBoolean,System.Data.SqlTypes.SqlBoolean)">
      <summary vsli:raw="Computes the bitwise AND operation of two specified &lt;see cref=&quot;T:System.Data.SqlTypes.SqlBoolean&quot; /&gt; structures.">对两个指定的 <see cref="T:System.Data.SqlTypes.SqlBoolean" /> 结构执行按位 AND 运算。</summary>
      <param name="x" vsli:raw="A &lt;see cref=&quot;T:System.Data.SqlTypes.SqlBoolean&quot; /&gt; structure.">
        <see cref="T:System.Data.SqlTypes.SqlBoolean" /> 结构。</param>
      <param name="y" vsli:raw="A &lt;see cref=&quot;T:System.Data.SqlTypes.SqlBoolean&quot; /&gt; structure.">
        <see cref="T:System.Data.SqlTypes.SqlBoolean" /> 结构。</param>
      <returns vsli:raw="The result of the logical AND operation.">逻辑 AND 运算的结果。</returns>
    </member>
    <member name="M:System.Data.SqlTypes.SqlBoolean.op_BitwiseOr(System.Data.SqlTypes.SqlBoolean,System.Data.SqlTypes.SqlBoolean)">
      <summary vsli:raw="Computes the bitwise OR of its operands.">对其操作数执行按位“或”运算。</summary>
      <param name="x" vsli:raw="A &lt;see cref=&quot;T:System.Data.SqlTypes.SqlBoolean&quot; /&gt; structure.">
        <see cref="T:System.Data.SqlTypes.SqlBoolean" /> 结构。</param>
      <param name="y" vsli:raw="A &lt;see cref=&quot;T:System.Data.SqlTypes.SqlBoolean&quot; /&gt; structure.">
        <see cref="T:System.Data.SqlTypes.SqlBoolean" /> 结构。</param>
      <returns vsli:raw="The results of the logical OR operation.">逻辑 OR 运算的结果。</returns>
    </member>
    <member name="M:System.Data.SqlTypes.SqlBoolean.op_Equality(System.Data.SqlTypes.SqlBoolean,System.Data.SqlTypes.SqlBoolean)">
      <summary vsli:raw="Compares two instances of &lt;see cref=&quot;T:System.Data.SqlTypes.SqlBoolean&quot; /&gt; for equality.">比较 <see cref="T:System.Data.SqlTypes.SqlBoolean" /> 的两个实例是否相等。</summary>
      <param name="x" vsli:raw="A &lt;see cref=&quot;T:System.Data.SqlTypes.SqlBoolean&quot; /&gt;.">
        <see cref="T:System.Data.SqlTypes.SqlBoolean" />。</param>
      <param name="y" vsli:raw="A &lt;see cref=&quot;T:System.Data.SqlTypes.SqlBoolean&quot; /&gt;.">
        <see cref="T:System.Data.SqlTypes.SqlBoolean" />。</param>
      <returns vsli:raw="&lt;see cref=&quot;F:System.Data.SqlTypes.SqlBoolean.True&quot; /&gt; if the two instances are equal or &lt;see cref=&quot;F:System.Data.SqlTypes.SqlBoolean.False&quot; /&gt; if the two instances are not equal. If either instance of &lt;see cref=&quot;T:System.Data.SqlTypes.SqlBoolean&quot; /&gt; is null, the &lt;see cref=&quot;P:System.Data.SqlTypes.SqlBoolean.Value&quot; /&gt; of the &lt;see cref=&quot;T:System.Data.SqlTypes.SqlBoolean&quot; /&gt; will be &lt;see cref=&quot;F:System.Data.SqlTypes.SqlBoolean.Null&quot; /&gt;.">如果两个实例相等，则返回 <see cref="F:System.Data.SqlTypes.SqlBoolean.True" />；如果两个实例不相等，则返回 <see cref="F:System.Data.SqlTypes.SqlBoolean.False" />。 如果 <see cref="T:System.Data.SqlTypes.SqlBoolean" /> 的任一实例为空，则 <see cref="P:System.Data.SqlTypes.SqlBoolean.Value" /> 的 <see cref="T:System.Data.SqlTypes.SqlBoolean" /> 将为 <see cref="F:System.Data.SqlTypes.SqlBoolean.Null" />。</returns>
    </member>
    <member name="M:System.Data.SqlTypes.SqlBoolean.op_ExclusiveOr(System.Data.SqlTypes.SqlBoolean,System.Data.SqlTypes.SqlBoolean)">
      <summary vsli:raw="Performs a bitwise exclusive-OR (XOR) operation on the supplied parameters.">对提供的参数执行按位“异或”(XOR) 运算。</summary>
      <param name="x" vsli:raw="A &lt;see cref=&quot;T:System.Data.SqlTypes.SqlBoolean&quot; /&gt; structure.">
        <see cref="T:System.Data.SqlTypes.SqlBoolean" /> 结构。</param>
      <param name="y" vsli:raw="A &lt;see cref=&quot;T:System.Data.SqlTypes.SqlBoolean&quot; /&gt; structure.">
        <see cref="T:System.Data.SqlTypes.SqlBoolean" /> 结构。</param>
      <returns vsli:raw="The result of the logical XOR operation.">逻辑 XOR 运算的结果。</returns>
    </member>
    <member name="M:System.Data.SqlTypes.SqlBoolean.op_Explicit(System.Data.SqlTypes.SqlBoolean)~System.Boolean">
      <summary vsli:raw="Converts a &lt;see cref=&quot;T:System.Data.SqlTypes.SqlBoolean&quot; /&gt; to a Boolean.">将 <see cref="T:System.Data.SqlTypes.SqlBoolean" /> 转换为布尔值。</summary>
      <param name="x" vsli:raw="A &lt;see cref=&quot;T:System.Data.SqlTypes.SqlBoolean&quot; /&gt; to convert.">要转换的 <see cref="T:System.Data.SqlTypes.SqlBoolean" />。</param>
      <returns vsli:raw="A Boolean set to the &lt;see cref=&quot;P:System.Data.SqlTypes.SqlBoolean.Value&quot; /&gt; of the &lt;see cref=&quot;T:System.Data.SqlTypes.SqlBoolean&quot; /&gt;.">设置为 <see cref="P:System.Data.SqlTypes.SqlBoolean.Value" /> 的 <see cref="T:System.Data.SqlTypes.SqlBoolean" /> 的布尔值。</returns>
    </member>
    <member name="M:System.Data.SqlTypes.SqlBoolean.op_Explicit(System.Data.SqlTypes.SqlByte)~System.Data.SqlTypes.SqlBoolean">
      <summary vsli:raw="Converts the &lt;see cref=&quot;T:System.Data.SqlTypes.SqlByte&quot; /&gt; parameter to a &lt;see cref=&quot;T:System.Data.SqlTypes.SqlBoolean&quot; /&gt; structure.">将 <see cref="T:System.Data.SqlTypes.SqlByte" /> 参数转换为 <see cref="T:System.Data.SqlTypes.SqlBoolean" /> 结构。</summary>
      <param name="x" vsli:raw="A &lt;see cref=&quot;T:System.Data.SqlTypes.SqlByte&quot; /&gt; to be converted to a &lt;see cref=&quot;T:System.Data.SqlTypes.SqlBoolean&quot; /&gt; structure.">要转换为 <see cref="T:System.Data.SqlTypes.SqlByte" /> 结构的 <see cref="T:System.Data.SqlTypes.SqlBoolean" />。</param>
      <returns vsli:raw="A new &lt;see cref=&quot;T:System.Data.SqlTypes.SqlBoolean&quot; /&gt; structure whose value equals the &lt;see cref=&quot;P:System.Data.SqlTypes.SqlByte.Value&quot; /&gt; of the &lt;see cref=&quot;T:System.Data.SqlTypes.SqlByte&quot; /&gt; parameter.">一个新 <see cref="T:System.Data.SqlTypes.SqlBoolean" /> 结构，它的值等于 <see cref="P:System.Data.SqlTypes.SqlByte.Value" /> 参数的 <see cref="T:System.Data.SqlTypes.SqlByte" />。</returns>
    </member>
    <member name="M:System.Data.SqlTypes.SqlBoolean.op_Explicit(System.Data.SqlTypes.SqlDecimal)~System.Data.SqlTypes.SqlBoolean">
      <summary vsli:raw="Converts the &lt;see cref=&quot;T:System.Data.SqlTypes.SqlDecimal&quot; /&gt; parameter to a &lt;see cref=&quot;T:System.Data.SqlTypes.SqlBoolean&quot; /&gt; structure.">将 <see cref="T:System.Data.SqlTypes.SqlDecimal" /> 参数转换为 <see cref="T:System.Data.SqlTypes.SqlBoolean" /> 结构。</summary>
      <param name="x" vsli:raw="A &lt;see cref=&quot;T:System.Data.SqlTypes.SqlDecimal&quot; /&gt; to be converted to a &lt;see cref=&quot;T:System.Data.SqlTypes.SqlBoolean&quot; /&gt; structure.">要转换为 <see cref="T:System.Data.SqlTypes.SqlDecimal" /> 结构的 <see cref="T:System.Data.SqlTypes.SqlBoolean" />。</param>
      <returns vsli:raw="A new &lt;see cref=&quot;T:System.Data.SqlTypes.SqlByte&quot; /&gt; structure whose value equals the &lt;see cref=&quot;P:System.Data.SqlTypes.SqlDecimal.Value&quot; /&gt; property of the &lt;see cref=&quot;T:System.Data.SqlTypes.SqlDecimal&quot; /&gt; parameter.">新的 <see cref="T:System.Data.SqlTypes.SqlByte" /> 结构，它的值等于 <see cref="P:System.Data.SqlTypes.SqlDecimal.Value" /> 参数的 <see cref="T:System.Data.SqlTypes.SqlDecimal" /> 属性。</returns>
    </member>
    <member name="M:System.Data.SqlTypes.SqlBoolean.op_Explicit(System.Data.SqlTypes.SqlDouble)~System.Data.SqlTypes.SqlBoolean">
      <summary vsli:raw="Converts the &lt;see cref=&quot;T:System.Data.SqlTypes.SqlDouble&quot; /&gt; parameter to a &lt;see cref=&quot;T:System.Data.SqlTypes.SqlBoolean&quot; /&gt; structure.">将 <see cref="T:System.Data.SqlTypes.SqlDouble" /> 参数转换为 <see cref="T:System.Data.SqlTypes.SqlBoolean" /> 结构。</summary>
      <param name="x" vsli:raw="A &lt;see cref=&quot;T:System.Data.SqlTypes.SqlDouble&quot; /&gt; to be converted to a &lt;see cref=&quot;T:System.Data.SqlTypes.SqlBoolean&quot; /&gt; structure.">要转换为 <see cref="T:System.Data.SqlTypes.SqlDouble" /> 结构的 <see cref="T:System.Data.SqlTypes.SqlBoolean" />。</param>
      <returns vsli:raw="A new &lt;see cref=&quot;T:System.Data.SqlTypes.SqlBoolean&quot; /&gt; structure whose value equals the &lt;see cref=&quot;P:System.Data.SqlTypes.SqlDouble.Value&quot; /&gt; property of the &lt;see cref=&quot;T:System.Data.SqlTypes.SqlDouble&quot; /&gt; parameter.">新的 <see cref="T:System.Data.SqlTypes.SqlBoolean" /> 结构，它的值等于 <see cref="P:System.Data.SqlTypes.SqlDouble.Value" /> 参数的 <see cref="T:System.Data.SqlTypes.SqlDouble" /> 属性。</returns>
    </member>
    <member name="M:System.Data.SqlTypes.SqlBoolean.op_Explicit(System.Data.SqlTypes.SqlInt16)~System.Data.SqlTypes.SqlBoolean">
      <summary vsli:raw="Converts the &lt;see cref=&quot;T:System.Data.SqlTypes.SqlInt16&quot; /&gt; parameter to a &lt;see cref=&quot;T:System.Data.SqlTypes.SqlBoolean&quot; /&gt; structure.">将 <see cref="T:System.Data.SqlTypes.SqlInt16" /> 参数转换为 <see cref="T:System.Data.SqlTypes.SqlBoolean" /> 结构。</summary>
      <param name="x" vsli:raw="A &lt;see cref=&quot;T:System.Data.SqlTypes.SqlInt16&quot; /&gt; to be converted to a &lt;see cref=&quot;T:System.Data.SqlTypes.SqlBoolean&quot; /&gt; structure.">要转换为 <see cref="T:System.Data.SqlTypes.SqlInt16" /> 结构的 <see cref="T:System.Data.SqlTypes.SqlBoolean" />。</param>
      <returns vsli:raw="A new &lt;see cref=&quot;T:System.Data.SqlTypes.SqlBoolean&quot; /&gt; structure whose value equals the &lt;see cref=&quot;P:System.Data.SqlTypes.SqlInt16.Value&quot; /&gt; property of the &lt;see cref=&quot;T:System.Data.SqlTypes.SqlInt16&quot; /&gt; parameter.">新的 <see cref="T:System.Data.SqlTypes.SqlBoolean" /> 结构，它的值等于 <see cref="P:System.Data.SqlTypes.SqlInt16.Value" /> 参数的 <see cref="T:System.Data.SqlTypes.SqlInt16" /> 属性。</returns>
    </member>
    <member name="M:System.Data.SqlTypes.SqlBoolean.op_Explicit(System.Data.SqlTypes.SqlInt32)~System.Data.SqlTypes.SqlBoolean">
      <summary vsli:raw="Converts the &lt;see cref=&quot;T:System.Data.SqlTypes.SqlInt32&quot; /&gt; parameter to a &lt;see cref=&quot;T:System.Data.SqlTypes.SqlBoolean&quot; /&gt; structure.">将 <see cref="T:System.Data.SqlTypes.SqlInt32" /> 参数转换为 <see cref="T:System.Data.SqlTypes.SqlBoolean" /> 结构。</summary>
      <param name="x" vsli:raw="A &lt;see cref=&quot;T:System.Data.SqlTypes.SqlInt32&quot; /&gt; to be converted to a &lt;see cref=&quot;T:System.Data.SqlTypes.SqlBoolean&quot; /&gt; structure.">要转换为 <see cref="T:System.Data.SqlTypes.SqlInt32" /> 结构的 <see cref="T:System.Data.SqlTypes.SqlBoolean" />。</param>
      <returns vsli:raw="A new &lt;see cref=&quot;T:System.Data.SqlTypes.SqlBoolean&quot; /&gt; structure whose value equals the &lt;see cref=&quot;P:System.Data.SqlTypes.SqlInt32.Value&quot; /&gt; property of the &lt;see cref=&quot;T:System.Data.SqlTypes.SqlInt32&quot; /&gt; parameter.">新的 <see cref="T:System.Data.SqlTypes.SqlBoolean" /> 结构，它的值等于 <see cref="P:System.Data.SqlTypes.SqlInt32.Value" /> 参数的 <see cref="T:System.Data.SqlTypes.SqlInt32" /> 属性。</returns>
    </member>
    <member name="M:System.Data.SqlTypes.SqlBoolean.op_Explicit(System.Data.SqlTypes.SqlInt64)~System.Data.SqlTypes.SqlBoolean">
      <summary vsli:raw="Converts the &lt;see cref=&quot;T:System.Data.SqlTypes.SqlInt64&quot; /&gt; parameter to a &lt;see cref=&quot;T:System.Data.SqlTypes.SqlBoolean&quot; /&gt; structure.">将 <see cref="T:System.Data.SqlTypes.SqlInt64" /> 参数转换为 <see cref="T:System.Data.SqlTypes.SqlBoolean" /> 结构。</summary>
      <param name="x" vsli:raw="A &lt;see cref=&quot;T:System.Data.SqlTypes.SqlInt64&quot; /&gt; to be converted to a &lt;see cref=&quot;T:System.Data.SqlTypes.SqlBoolean&quot; /&gt; structure.">要转换为 <see cref="T:System.Data.SqlTypes.SqlInt64" /> 结构的 <see cref="T:System.Data.SqlTypes.SqlBoolean" />。</param>
      <returns vsli:raw="A new &lt;see cref=&quot;T:System.Data.SqlTypes.SqlBoolean&quot; /&gt; structure whose value equals the &lt;see cref=&quot;P:System.Data.SqlTypes.SqlInt64.Value&quot; /&gt; property of the &lt;see cref=&quot;T:System.Data.SqlTypes.SqlInt64&quot; /&gt; parameter.">新的 <see cref="T:System.Data.SqlTypes.SqlBoolean" /> 结构，它的值等于 <see cref="P:System.Data.SqlTypes.SqlInt64.Value" /> 参数的 <see cref="T:System.Data.SqlTypes.SqlInt64" /> 属性。</returns>
    </member>
    <member name="M:System.Data.SqlTypes.SqlBoolean.op_Explicit(System.Data.SqlTypes.SqlMoney)~System.Data.SqlTypes.SqlBoolean">
      <summary vsli:raw="Converts the &lt;see cref=&quot;T:System.Data.SqlTypes.SqlMoney&quot; /&gt; parameter to a &lt;see cref=&quot;T:System.Data.SqlTypes.SqlBoolean&quot; /&gt; structure.">将 <see cref="T:System.Data.SqlTypes.SqlMoney" /> 参数转换为 <see cref="T:System.Data.SqlTypes.SqlBoolean" /> 结构。</summary>
      <param name="x" vsli:raw="A &lt;see cref=&quot;T:System.Data.SqlTypes.SqlMoney&quot; /&gt; to be converted to a &lt;see cref=&quot;T:System.Data.SqlTypes.SqlBoolean&quot; /&gt; structure.">要转换为 <see cref="T:System.Data.SqlTypes.SqlMoney" /> 结构的 <see cref="T:System.Data.SqlTypes.SqlBoolean" />。</param>
      <returns vsli:raw="A new &lt;see cref=&quot;T:System.Data.SqlTypes.SqlByte&quot; /&gt; structure whose value equals the &lt;see cref=&quot;P:System.Data.SqlTypes.SqlMoney.Value&quot; /&gt; property of the &lt;see cref=&quot;T:System.Data.SqlTypes.SqlMoney&quot; /&gt; parameter.">新的 <see cref="T:System.Data.SqlTypes.SqlByte" /> 结构，它的值等于 <see cref="P:System.Data.SqlTypes.SqlMoney.Value" /> 参数的 <see cref="T:System.Data.SqlTypes.SqlMoney" /> 属性。</returns>
    </member>
    <member name="M:System.Data.SqlTypes.SqlBoolean.op_Explicit(System.Data.SqlTypes.SqlSingle)~System.Data.SqlTypes.SqlBoolean">
      <summary vsli:raw="Converts the &lt;see cref=&quot;T:System.Data.SqlTypes.SqlSingle&quot; /&gt; parameter to a &lt;see cref=&quot;T:System.Data.SqlTypes.SqlBoolean&quot; /&gt; structure.">将 <see cref="T:System.Data.SqlTypes.SqlSingle" /> 参数转换为 <see cref="T:System.Data.SqlTypes.SqlBoolean" /> 结构。</summary>
      <param name="x" vsli:raw="A &lt;see cref=&quot;T:System.Data.SqlTypes.SqlSingle&quot; /&gt; to be converted to a &lt;see cref=&quot;T:System.Data.SqlTypes.SqlBoolean&quot; /&gt; structure.">要转换为 <see cref="T:System.Data.SqlTypes.SqlSingle" /> 结构的 <see cref="T:System.Data.SqlTypes.SqlBoolean" />。</param>
      <returns vsli:raw="A new &lt;see cref=&quot;T:System.Data.SqlTypes.SqlBoolean&quot; /&gt; structure whose value equals the &lt;see cref=&quot;P:System.Data.SqlTypes.SqlSingle.Value&quot; /&gt; property of the &lt;see cref=&quot;T:System.Data.SqlTypes.SqlSingle&quot; /&gt; parameter.">新的 <see cref="T:System.Data.SqlTypes.SqlBoolean" /> 结构，它的值等于 <see cref="P:System.Data.SqlTypes.SqlSingle.Value" /> 参数的 <see cref="T:System.Data.SqlTypes.SqlSingle" /> 属性。</returns>
    </member>
    <member name="M:System.Data.SqlTypes.SqlBoolean.op_Explicit(System.Data.SqlTypes.SqlString)~System.Data.SqlTypes.SqlBoolean">
      <summary vsli:raw="Converts the &lt;see cref=&quot;T:System.Data.SqlTypes.SqlString&quot; /&gt; parameter to a &lt;see cref=&quot;T:System.Data.SqlTypes.SqlBoolean&quot; /&gt; structure.">将 <see cref="T:System.Data.SqlTypes.SqlString" /> 参数转换为 <see cref="T:System.Data.SqlTypes.SqlBoolean" /> 结构。</summary>
      <param name="x" vsli:raw="A &lt;see cref=&quot;T:System.Data.SqlTypes.SqlString&quot; /&gt; to be converted to a &lt;see cref=&quot;T:System.Data.SqlTypes.SqlBoolean&quot; /&gt; structure.">要转换为 <see cref="T:System.Data.SqlTypes.SqlString" /> 结构的 <see cref="T:System.Data.SqlTypes.SqlBoolean" />。</param>
      <returns vsli:raw="A new &lt;see cref=&quot;T:System.Data.SqlTypes.SqlByte&quot; /&gt; structure whose value equals the &lt;see cref=&quot;P:System.Data.SqlTypes.SqlBoolean.Value&quot; /&gt; property of the &lt;see cref=&quot;T:System.Data.SqlTypes.SqlBoolean&quot; /&gt; parameter.">新的 <see cref="T:System.Data.SqlTypes.SqlByte" /> 结构，它的值等于 <see cref="P:System.Data.SqlTypes.SqlBoolean.Value" /> 参数的 <see cref="T:System.Data.SqlTypes.SqlBoolean" /> 属性。</returns>
    </member>
    <member name="M:System.Data.SqlTypes.SqlBoolean.op_False(System.Data.SqlTypes.SqlBoolean)">
      <summary vsli:raw="The false operator can be used to test the &lt;see cref=&quot;P:System.Data.SqlTypes.SqlBoolean.Value&quot; /&gt; of the &lt;see cref=&quot;T:System.Data.SqlTypes.SqlBoolean&quot; /&gt; to determine whether it is false.">可以使用“假”运算符来测试 <see cref="P:System.Data.SqlTypes.SqlBoolean.Value" /> 的 <see cref="T:System.Data.SqlTypes.SqlBoolean" /> 以确定它是否为“假”。</summary>
      <param name="x" vsli:raw="The &lt;see cref=&quot;T:System.Data.SqlTypes.SqlBoolean&quot; /&gt; structure to be tested.">要测试的 <see cref="T:System.Data.SqlTypes.SqlBoolean" /> 结构。</param>
      <returns vsli:raw="&lt;see langword=&quot;true&quot; /&gt; if the supplied parameter is &lt;see cref=&quot;T:System.Data.SqlTypes.SqlBoolean&quot; /&gt; is &lt;see langword=&quot;false&quot; /&gt;; otherwise, &lt;see langword=&quot;false&quot; /&gt;.">如果所提供的参数 <see cref="T:System.Data.SqlTypes.SqlBoolean" /> 为 <see langword="false" />，则返回 <see langword="true" />；否则，返回 <see langword="false" />。</returns>
    </member>
    <member name="M:System.Data.SqlTypes.SqlBoolean.op_GreaterThan(System.Data.SqlTypes.SqlBoolean,System.Data.SqlTypes.SqlBoolean)">
      <summary vsli:raw="Compares two &lt;see cref=&quot;T:System.Data.SqlTypes.SqlBoolean&quot; /&gt; structures to determine whether the first is greater than the second.">对两个 <see cref="T:System.Data.SqlTypes.SqlBoolean" /> 结构进行比较，以确定第一个结构是否大于第二个结构。</summary>
      <param name="x" vsli:raw="A &lt;see cref=&quot;T:System.Data.SqlTypes.SqlBoolean&quot; /&gt; object.">
        <see cref="T:System.Data.SqlTypes.SqlBoolean" /> 对象。</param>
      <param name="y" vsli:raw="A &lt;see cref=&quot;T:System.Data.SqlTypes.SqlBoolean&quot; /&gt; object.">
        <see cref="T:System.Data.SqlTypes.SqlBoolean" /> 对象。</param>
      <returns vsli:raw="&lt;see cref=&quot;F:System.Data.SqlTypes.SqlBoolean.True&quot; /&gt; if the first instance is greater than the second instance; otherwise, &lt;see cref=&quot;F:System.Data.SqlTypes.SqlBoolean.False&quot; /&gt;.">如果第一个实例大于第二个实例，则返回 <see cref="F:System.Data.SqlTypes.SqlBoolean.True" />；否则，返回 <see cref="F:System.Data.SqlTypes.SqlBoolean.False" />。</returns>
    </member>
    <member name="M:System.Data.SqlTypes.SqlBoolean.op_GreaterThanOrEqual(System.Data.SqlTypes.SqlBoolean,System.Data.SqlTypes.SqlBoolean)">
      <summary vsli:raw="Compares two &lt;see cref=&quot;T:System.Data.SqlTypes.SqlBoolean&quot; /&gt; structures to determine whether the first is greater than or equal to the second.">对两个 <see cref="T:System.Data.SqlTypes.SqlBoolean" /> 结构进行比较，以确定第一个结构是否大于或等于第二个结构。</summary>
      <param name="x" vsli:raw="A &lt;see cref=&quot;T:System.Data.SqlTypes.SqlBoolean&quot; /&gt; structure.">
        <see cref="T:System.Data.SqlTypes.SqlBoolean" /> 结构。</param>
      <param name="y" vsli:raw="A &lt;see cref=&quot;T:System.Data.SqlTypes.SqlBoolean&quot; /&gt; structure.">
        <see cref="T:System.Data.SqlTypes.SqlBoolean" /> 结构。</param>
      <returns vsli:raw="&lt;see cref=&quot;F:System.Data.SqlTypes.SqlBoolean.True&quot; /&gt; if the first instance is greater than or equal to the second instance; otherwise, &lt;see langword=&quot;false&quot; /&gt;.">如果第一个实例大于或等于第二个实例，则返回 <see cref="F:System.Data.SqlTypes.SqlBoolean.True" />；否则，返回 <see langword="false" />。</returns>
    </member>
    <member name="M:System.Data.SqlTypes.SqlBoolean.op_Implicit(System.Boolean)~System.Data.SqlTypes.SqlBoolean">
      <summary vsli:raw="Converts the supplied byte value to a &lt;see cref=&quot;T:System.Data.SqlTypes.SqlBoolean&quot; /&gt;.">将提供的字节值转换为 <see cref="T:System.Data.SqlTypes.SqlBoolean" />。</summary>
      <param name="x" vsli:raw="A byte value to be converted to &lt;see cref=&quot;T:System.Data.SqlTypes.SqlBoolean&quot; /&gt;.">要转换为 <see cref="T:System.Data.SqlTypes.SqlBoolean" /> 的字节值。</param>
      <returns vsli:raw="A &lt;see cref=&quot;T:System.Data.SqlTypes.SqlBoolean&quot; /&gt; value that contains 0 or 1.">包含 0 或 1 的 <see cref="T:System.Data.SqlTypes.SqlBoolean" /> 值。</returns>
    </member>
    <member name="M:System.Data.SqlTypes.SqlBoolean.op_Inequality(System.Data.SqlTypes.SqlBoolean,System.Data.SqlTypes.SqlBoolean)">
      <summary vsli:raw="Compares two instances of &lt;see cref=&quot;T:System.Data.SqlTypes.SqlBoolean&quot; /&gt; to determine whether they are not equal.">对 <see cref="T:System.Data.SqlTypes.SqlBoolean" /> 的两个实例进行比较，以确定它们是否不相等。</summary>
      <param name="x" vsli:raw="A &lt;see cref=&quot;T:System.Data.SqlTypes.SqlBoolean&quot; /&gt;.">
        <see cref="T:System.Data.SqlTypes.SqlBoolean" />。</param>
      <param name="y" vsli:raw="A &lt;see cref=&quot;T:System.Data.SqlTypes.SqlBoolean&quot; /&gt;.">
        <see cref="T:System.Data.SqlTypes.SqlBoolean" />。</param>
      <returns vsli:raw="&lt;see cref=&quot;F:System.Data.SqlTypes.SqlBoolean.True&quot; /&gt; if the two instances are not equal or &lt;see cref=&quot;F:System.Data.SqlTypes.SqlBoolean.False&quot; /&gt; if the two instances are equal. If either instance of &lt;see cref=&quot;T:System.Data.SqlTypes.SqlBoolean&quot; /&gt; is null, the &lt;see cref=&quot;P:System.Data.SqlTypes.SqlBoolean.Value&quot; /&gt; of the &lt;see cref=&quot;T:System.Data.SqlTypes.SqlBoolean&quot; /&gt; will be &lt;see cref=&quot;F:System.Data.SqlTypes.SqlBoolean.Null&quot; /&gt;.">如果两个实例不相等，则返回 <see cref="F:System.Data.SqlTypes.SqlBoolean.True" />；如果两个实例相等，则返回 <see cref="F:System.Data.SqlTypes.SqlBoolean.False" />。 如果 <see cref="T:System.Data.SqlTypes.SqlBoolean" /> 的任一实例为空，则 <see cref="P:System.Data.SqlTypes.SqlBoolean.Value" /> 的 <see cref="T:System.Data.SqlTypes.SqlBoolean" /> 将为 <see cref="F:System.Data.SqlTypes.SqlBoolean.Null" />。</returns>
    </member>
    <member name="M:System.Data.SqlTypes.SqlBoolean.op_LessThan(System.Data.SqlTypes.SqlBoolean,System.Data.SqlTypes.SqlBoolean)">
      <summary vsli:raw="Compares two instances of &lt;see cref=&quot;T:System.Data.SqlTypes.SqlBoolean&quot; /&gt; to determine whether the first is less than the second.">对 <see cref="T:System.Data.SqlTypes.SqlBoolean" /> 的两个实例进行比较，以确定第一个实例是否小于第二个实例。</summary>
      <param name="x" vsli:raw="A &lt;see cref=&quot;T:System.Data.SqlTypes.SqlBoolean&quot; /&gt; structure.">
        <see cref="T:System.Data.SqlTypes.SqlBoolean" /> 结构。</param>
      <param name="y" vsli:raw="A &lt;see cref=&quot;T:System.Data.SqlTypes.SqlBoolean&quot; /&gt; structure.">
        <see cref="T:System.Data.SqlTypes.SqlBoolean" /> 结构。</param>
      <returns vsli:raw="&lt;see cref=&quot;F:System.Data.SqlTypes.SqlBoolean.True&quot; /&gt; if the first instance is less than the second instance; otherwise, &lt;see langword=&quot;false&quot; /&gt;.">如果第一个实例小于第二个实例，则返回 <see cref="F:System.Data.SqlTypes.SqlBoolean.True" />；否则，返回 <see langword="false" />。</returns>
    </member>
    <member name="M:System.Data.SqlTypes.SqlBoolean.op_LessThanOrEqual(System.Data.SqlTypes.SqlBoolean,System.Data.SqlTypes.SqlBoolean)">
      <summary vsli:raw="Compares two instances of &lt;see cref=&quot;T:System.Data.SqlTypes.SqlBoolean&quot; /&gt; to determine whether the first is less than or equal to the second.">对 <see cref="T:System.Data.SqlTypes.SqlBoolean" /> 的两个实例进行比较，以确定第一个实例是否小于或等于第二个实例。</summary>
      <param name="x" vsli:raw="A &lt;see cref=&quot;T:System.Data.SqlTypes.SqlBoolean&quot; /&gt; structure.">
        <see cref="T:System.Data.SqlTypes.SqlBoolean" /> 结构。</param>
      <param name="y" vsli:raw="A &lt;see cref=&quot;T:System.Data.SqlTypes.SqlBoolean&quot; /&gt; structure.">
        <see cref="T:System.Data.SqlTypes.SqlBoolean" /> 结构。</param>
      <returns vsli:raw="&lt;see cref=&quot;F:System.Data.SqlTypes.SqlBoolean.True&quot; /&gt; if the first instance is less than or equal to the second instance; otherwise, &lt;see langword=&quot;false&quot; /&gt;.">如果第一个实例小于或等于第二个实例，则返回 <see cref="F:System.Data.SqlTypes.SqlBoolean.True" />；否则，返回 <see langword="false" />。</returns>
    </member>
    <member name="M:System.Data.SqlTypes.SqlBoolean.op_LogicalNot(System.Data.SqlTypes.SqlBoolean)">
      <summary vsli:raw="Performs a NOT operation on a &lt;see cref=&quot;T:System.Data.SqlTypes.SqlBoolean&quot; /&gt;.">对 <see cref="T:System.Data.SqlTypes.SqlBoolean" /> 执行 NOT 运算。</summary>
      <param name="x" vsli:raw="The &lt;see cref=&quot;T:System.Data.SqlTypes.SqlBoolean&quot; /&gt; on which the NOT operation will be performed.">将要对其执行 NOT 运算的 <see cref="T:System.Data.SqlTypes.SqlBoolean" />。</param>
      <returns vsli:raw="A &lt;see cref=&quot;T:System.Data.SqlTypes.SqlBoolean&quot; /&gt; with the &lt;see cref=&quot;P:System.Data.SqlTypes.SqlBoolean.Value&quot; /&gt;&lt;see cref=&quot;F:System.Data.SqlTypes.SqlBoolean.True&quot; /&gt; if argument was true, &lt;see cref=&quot;F:System.Data.SqlTypes.SqlBoolean.Null&quot; /&gt; if argument was null, and &lt;see cref=&quot;F:System.Data.SqlTypes.SqlBoolean.False&quot; /&gt; otherwise.">一个 <see cref="T:System.Data.SqlTypes.SqlBoolean" />，如果参数为 true，则其 <see cref="P:System.Data.SqlTypes.SqlBoolean.Value" /> 为 <see cref="F:System.Data.SqlTypes.SqlBoolean.True" />；如果参数为 NULL，则为 <see cref="F:System.Data.SqlTypes.SqlBoolean.Null" />；其他情况为 <see cref="F:System.Data.SqlTypes.SqlBoolean.False" />。</returns>
    </member>
    <member name="M:System.Data.SqlTypes.SqlBoolean.op_OnesComplement(System.Data.SqlTypes.SqlBoolean)">
      <summary vsli:raw="Performs a one's complement operation on the supplied &lt;see cref=&quot;T:System.Data.SqlTypes.SqlBoolean&quot; /&gt; structures.">对提供的 <see cref="T:System.Data.SqlTypes.SqlBoolean" /> 结构执行 1 的求补运算。</summary>
      <param name="x" vsli:raw="A &lt;see cref=&quot;T:System.Data.SqlTypes.SqlBoolean&quot; /&gt; structure.">
        <see cref="T:System.Data.SqlTypes.SqlBoolean" /> 结构。</param>
      <returns vsli:raw="The one's complement of the supplied &lt;see cref=&quot;T:System.Data.SqlTypes.SqlBoolean&quot; /&gt;.">所提供的 <see cref="T:System.Data.SqlTypes.SqlBoolean" /> 的 one 的补码。</returns>
    </member>
    <member name="M:System.Data.SqlTypes.SqlBoolean.op_True(System.Data.SqlTypes.SqlBoolean)">
      <summary vsli:raw="The true operator can be used to test the &lt;see cref=&quot;P:System.Data.SqlTypes.SqlBoolean.Value&quot; /&gt; of the &lt;see cref=&quot;T:System.Data.SqlTypes.SqlBoolean&quot; /&gt; to determine whether it is true.">可以使用“真”运算符来测试 <see cref="P:System.Data.SqlTypes.SqlBoolean.Value" /> 的 <see cref="T:System.Data.SqlTypes.SqlBoolean" /> 以确定它是否为真。</summary>
      <param name="x" vsli:raw="The &lt;see cref=&quot;T:System.Data.SqlTypes.SqlBoolean&quot; /&gt; structure to be tested.">要测试的 <see cref="T:System.Data.SqlTypes.SqlBoolean" /> 结构。</param>
      <returns vsli:raw="&lt;see langword=&quot;true&quot; /&gt; if the supplied parameter is &lt;see cref=&quot;T:System.Data.SqlTypes.SqlBoolean&quot; /&gt; is &lt;see langword=&quot;true&quot; /&gt;; otherwise, &lt;see langword=&quot;false&quot; /&gt;.">如果所提供的参数 <see cref="T:System.Data.SqlTypes.SqlBoolean" /> 为 <see langword="true" />，则返回 <see langword="true" />；否则，返回 <see langword="false" />。</returns>
    </member>
    <member name="M:System.Data.SqlTypes.SqlBoolean.Or(System.Data.SqlTypes.SqlBoolean,System.Data.SqlTypes.SqlBoolean)">
      <summary vsli:raw="Performs a bitwise OR operation on the two specified &lt;see cref=&quot;T:System.Data.SqlTypes.SqlBoolean&quot; /&gt; structures.">对两个指定的 <see cref="T:System.Data.SqlTypes.SqlBoolean" /> 结构执行按位“或”运算。</summary>
      <param name="x" vsli:raw="A &lt;see cref=&quot;T:System.Data.SqlTypes.SqlBoolean&quot; /&gt; structure.">
        <see cref="T:System.Data.SqlTypes.SqlBoolean" /> 结构。</param>
      <param name="y" vsli:raw="A &lt;see cref=&quot;T:System.Data.SqlTypes.SqlBoolean&quot; /&gt; structure.">
        <see cref="T:System.Data.SqlTypes.SqlBoolean" /> 结构。</param>
      <returns vsli:raw="A new &lt;see cref=&quot;T:System.Data.SqlTypes.SqlBoolean&quot; /&gt; structure whose Value is the result of the bitwise OR operation.">新的 <see cref="T:System.Data.SqlTypes.SqlBoolean" /> 结构，其“值”是按位“或”运算的结果。</returns>
    </member>
    <member name="M:System.Data.SqlTypes.SqlBoolean.Parse(System.String)">
      <summary vsli:raw="Converts the specified &lt;see cref=&quot;T:System.String&quot; /&gt; representation of a logical value to its &lt;see cref=&quot;T:System.Data.SqlTypes.SqlBoolean&quot; /&gt; equivalent.">将逻辑值的指定 <see cref="T:System.String" /> 表示形式转换为它的等效 <see cref="T:System.Data.SqlTypes.SqlBoolean" />。</summary>
      <param name="s" vsli:raw="The &lt;see cref=&quot;T:System.String&quot; /&gt; to be converted.">要转换的 <see cref="T:System.String" />。</param>
      <returns vsli:raw="A &lt;see cref=&quot;T:System.Data.SqlTypes.SqlBoolean&quot; /&gt; structure that contains the parsed value.">一个 <see cref="T:System.Data.SqlTypes.SqlBoolean" /> 结构，包含已分析的值。</returns>
    </member>
    <member name="M:System.Data.SqlTypes.SqlBoolean.System#Xml#Serialization#IXmlSerializable#GetSchema">
      <summary vsli:raw="This member supports the .NET Framework infrastructure and is not intended to be used directly from your code.">此成员支持 .NET Framework 结构，不能在代码中直接使用。</summary>
      <returns vsli:raw="An &lt;see langword=&quot;XmlSchema&quot; /&gt;.">
        <see langword="XmlSchema" />。</returns>
    </member>
    <member name="M:System.Data.SqlTypes.SqlBoolean.System#Xml#Serialization#IXmlSerializable#ReadXml(System.Xml.XmlReader)">
      <summary vsli:raw="This member supports the .NET Framework infrastructure and is not intended to be used directly from your code.">此成员支持 .NET Framework 结构，不能在代码中直接使用。</summary>
      <param name="reader" vsli:raw="&lt;see langword=&quot;XmlReader&quot; /&gt;">
        <see langword="XmlReader" />
      </param>
    </member>
    <member name="M:System.Data.SqlTypes.SqlBoolean.System#Xml#Serialization#IXmlSerializable#WriteXml(System.Xml.XmlWriter)">
      <summary vsli:raw="This member supports the .NET Framework infrastructure and is not intended to be used directly from your code.">此成员支持 .NET Framework 结构，不能在代码中直接使用。</summary>
      <param name="writer" vsli:raw="&lt;see langword=&quot;XmlWriter&quot; /&gt;">
        <see langword="XmlWriter" />
      </param>
    </member>
    <member name="M:System.Data.SqlTypes.SqlBoolean.ToSqlByte">
      <summary vsli:raw="Converts this &lt;see cref=&quot;T:System.Data.SqlTypes.SqlBoolean&quot; /&gt; structure to &lt;see cref=&quot;T:System.Data.SqlTypes.SqlByte&quot; /&gt;.">将此 <see cref="T:System.Data.SqlTypes.SqlBoolean" /> 结构转换为 <see cref="T:System.Data.SqlTypes.SqlByte" />。</summary>
      <returns vsli:raw="A new &lt;see cref=&quot;T:System.Data.SqlTypes.SqlByte&quot; /&gt; structure whose value is 1 or 0. If the &lt;see cref=&quot;T:System.Data.SqlTypes.SqlBoolean&quot; /&gt; structure's value equals &lt;see langword=&quot;true&quot; /&gt;, the new &lt;see cref=&quot;T:System.Data.SqlTypes.SqlByte&quot; /&gt; structure's value is 1. Otherwise, the new &lt;see cref=&quot;T:System.Data.SqlTypes.SqlByte&quot; /&gt; structure's value is 0.">新的 <see cref="T:System.Data.SqlTypes.SqlByte" /> 结构，其值为 1 或 0。 如果 <see cref="T:System.Data.SqlTypes.SqlBoolean" /> 结构的值等于 <see langword="true" />，则新 <see cref="T:System.Data.SqlTypes.SqlByte" /> 结构的值为 1。 否则，新的 <see cref="T:System.Data.SqlTypes.SqlByte" /> 结构的值为 0。</returns>
    </member>
    <member name="M:System.Data.SqlTypes.SqlBoolean.ToSqlDecimal">
      <summary vsli:raw="Converts this &lt;see cref=&quot;T:System.Data.SqlTypes.SqlBoolean&quot; /&gt; structure to &lt;see cref=&quot;T:System.Data.SqlTypes.SqlDecimal&quot; /&gt;.">将此 <see cref="T:System.Data.SqlTypes.SqlBoolean" /> 结构转换为 <see cref="T:System.Data.SqlTypes.SqlDecimal" />。</summary>
      <returns vsli:raw="A new &lt;see cref=&quot;T:System.Data.SqlTypes.SqlDecimal&quot; /&gt; structure whose value is 1 or 0. If the &lt;see cref=&quot;T:System.Data.SqlTypes.SqlBoolean&quot; /&gt; structure's value equals &lt;see langword=&quot;true&quot; /&gt; then the new &lt;see cref=&quot;T:System.Data.SqlTypes.SqlDecimal&quot; /&gt; structure's value is 1. Otherwise, the new &lt;see cref=&quot;T:System.Data.SqlTypes.SqlDecimal&quot; /&gt; structure's value is 0.">新的 <see cref="T:System.Data.SqlTypes.SqlDecimal" /> 结构，其值为 1 或 0。 如果 <see cref="T:System.Data.SqlTypes.SqlBoolean" /> 结构的值等于 <see langword="true" />，则新 <see cref="T:System.Data.SqlTypes.SqlDecimal" /> 结构的值为 1。 否则，新的 <see cref="T:System.Data.SqlTypes.SqlDecimal" /> 结构的值为 0。</returns>
    </member>
    <member name="M:System.Data.SqlTypes.SqlBoolean.ToSqlDouble">
      <summary vsli:raw="Converts this &lt;see cref=&quot;T:System.Data.SqlTypes.SqlBoolean&quot; /&gt; structure to &lt;see cref=&quot;T:System.Data.SqlTypes.SqlDouble&quot; /&gt;.">将此 <see cref="T:System.Data.SqlTypes.SqlBoolean" /> 结构转换为 <see cref="T:System.Data.SqlTypes.SqlDouble" />。</summary>
      <returns vsli:raw="A new &lt;see cref=&quot;T:System.Data.SqlTypes.SqlDouble&quot; /&gt; structure whose value is 1 or 0. If the &lt;see cref=&quot;T:System.Data.SqlTypes.SqlBoolean&quot; /&gt; structure's value equals &lt;see langword=&quot;true&quot; /&gt; then the new &lt;see cref=&quot;T:System.Data.SqlTypes.SqlDouble&quot; /&gt; structure's value is 1. Otherwise, the new &lt;see cref=&quot;T:System.Data.SqlTypes.SqlDouble&quot; /&gt; structure's value is 0.">新的 <see cref="T:System.Data.SqlTypes.SqlDouble" /> 结构，其值为 1 或 0。 如果 <see cref="T:System.Data.SqlTypes.SqlBoolean" /> 结构的值等于 <see langword="true" />，则新 <see cref="T:System.Data.SqlTypes.SqlDouble" /> 结构的值为 1。 否则，新的 <see cref="T:System.Data.SqlTypes.SqlDouble" /> 结构的值为 0。</returns>
    </member>
    <member name="M:System.Data.SqlTypes.SqlBoolean.ToSqlInt16">
      <summary vsli:raw="Converts this &lt;see cref=&quot;T:System.Data.SqlTypes.SqlBoolean&quot; /&gt; structure to &lt;see cref=&quot;T:System.Data.SqlTypes.SqlInt16&quot; /&gt;.">将此 <see cref="T:System.Data.SqlTypes.SqlBoolean" /> 结构转换为 <see cref="T:System.Data.SqlTypes.SqlInt16" />。</summary>
      <returns vsli:raw="A new &lt;see langword=&quot;SqlInt16&quot; /&gt; structure whose value is 1 or 0. If the &lt;see cref=&quot;T:System.Data.SqlTypes.SqlBoolean&quot; /&gt; structure's value equals &lt;see langword=&quot;true&quot; /&gt; then the new &lt;see cref=&quot;T:System.Data.SqlTypes.SqlInt16&quot; /&gt; structure's value is 1. Otherwise, the new &lt;see langword=&quot;SqlInt16&quot; /&gt; structure's value is 0.">新的 <see langword="SqlInt16" /> 结构，其值为 1 或 0。 如果 <see cref="T:System.Data.SqlTypes.SqlBoolean" /> 结构的值等于 <see langword="true" />，则新 <see cref="T:System.Data.SqlTypes.SqlInt16" /> 结构的值为 1。 否则，新的 <see langword="SqlInt16" /> 结构的值为 0。</returns>
    </member>
    <member name="M:System.Data.SqlTypes.SqlBoolean.ToSqlInt32">
      <summary vsli:raw="Converts this &lt;see cref=&quot;T:System.Data.SqlTypes.SqlBoolean&quot; /&gt; structure to &lt;see cref=&quot;T:System.Data.SqlTypes.SqlInt32&quot; /&gt;.">将此 <see cref="T:System.Data.SqlTypes.SqlBoolean" /> 结构转换为 <see cref="T:System.Data.SqlTypes.SqlInt32" />。</summary>
      <returns vsli:raw="A new &lt;see langword=&quot;SqlInt32&quot; /&gt; structure whose value is 1 or 0. If the &lt;see cref=&quot;T:System.Data.SqlTypes.SqlBoolean&quot; /&gt; structure's value equals &lt;see langword=&quot;true&quot; /&gt;, the new &lt;see cref=&quot;T:System.Data.SqlTypes.SqlInt32&quot; /&gt; structure's value is 1. Otherwise, the new &lt;see langword=&quot;SqlInt32&quot; /&gt; structure's value is 0.">新的 <see langword="SqlInt32" /> 结构，其值为 1 或 0。 如果 <see cref="T:System.Data.SqlTypes.SqlBoolean" /> 结构的值等于 <see langword="true" />，则新 <see cref="T:System.Data.SqlTypes.SqlInt32" /> 结构的值为 1。 否则，新的 <see langword="SqlInt32" /> 结构的值为 0。</returns>
    </member>
    <member name="M:System.Data.SqlTypes.SqlBoolean.ToSqlInt64">
      <summary vsli:raw="Converts this &lt;see cref=&quot;T:System.Data.SqlTypes.SqlBoolean&quot; /&gt; structure to &lt;see cref=&quot;T:System.Data.SqlTypes.SqlInt64&quot; /&gt;.">将此 <see cref="T:System.Data.SqlTypes.SqlBoolean" /> 结构转换为 <see cref="T:System.Data.SqlTypes.SqlInt64" />。</summary>
      <returns vsli:raw="A new &lt;see langword=&quot;SqlInt64&quot; /&gt; structure whose value is 1 or 0. If the &lt;see cref=&quot;T:System.Data.SqlTypes.SqlBoolean&quot; /&gt; structure's value equals &lt;see langword=&quot;true&quot; /&gt;, the new &lt;see cref=&quot;T:System.Data.SqlTypes.SqlInt64&quot; /&gt; structure's value is 1. Otherwise, the new &lt;see langword=&quot;SqlInt64&quot; /&gt; structure's value is 0.">新的 <see langword="SqlInt64" /> 结构，其值为 1 或 0。 如果 <see cref="T:System.Data.SqlTypes.SqlBoolean" /> 结构的值等于 <see langword="true" />，则新 <see cref="T:System.Data.SqlTypes.SqlInt64" /> 结构的值为 1。 否则，新的 <see langword="SqlInt64" /> 结构的值为 0。</returns>
    </member>
    <member name="M:System.Data.SqlTypes.SqlBoolean.ToSqlMoney">
      <summary vsli:raw="Converts this &lt;see cref=&quot;T:System.Data.SqlTypes.SqlBoolean&quot; /&gt; structure to &lt;see cref=&quot;T:System.Data.SqlTypes.SqlMoney&quot; /&gt;.">将此 <see cref="T:System.Data.SqlTypes.SqlBoolean" /> 结构转换为 <see cref="T:System.Data.SqlTypes.SqlMoney" />。</summary>
      <returns vsli:raw="A new &lt;see cref=&quot;T:System.Data.SqlTypes.SqlMoney&quot; /&gt; structure whose value is 1 or 0. If the &lt;see cref=&quot;T:System.Data.SqlTypes.SqlBoolean&quot; /&gt; structure's value equals &lt;see langword=&quot;true&quot; /&gt;, the new &lt;see cref=&quot;T:System.Data.SqlTypes.SqlMoney&quot; /&gt; value is 1. If the &lt;see cref=&quot;T:System.Data.SqlTypes.SqlBoolean&quot; /&gt; structure's value equals &lt;see langword=&quot;false&quot; /&gt;, the new &lt;see cref=&quot;T:System.Data.SqlTypes.SqlMoney&quot; /&gt; value is 0. If &lt;see cref=&quot;T:System.Data.SqlTypes.SqlBoolean&quot; /&gt; structure's value is neither 1 nor 0, the new &lt;see cref=&quot;T:System.Data.SqlTypes.SqlMoney&quot; /&gt; value is &lt;see cref=&quot;F:System.Data.SqlTypes.SqlMoney.Null&quot; /&gt;.">新的 <see cref="T:System.Data.SqlTypes.SqlMoney" /> 结构，其值为 1 或 0。 如果 <see cref="T:System.Data.SqlTypes.SqlBoolean" /> 结构的值为 <see langword="true" />，则新 <see cref="T:System.Data.SqlTypes.SqlMoney" /> 值为 1。 如果 <see cref="T:System.Data.SqlTypes.SqlBoolean" /> 结构的值等于 <see langword="false" />，则新 <see cref="T:System.Data.SqlTypes.SqlMoney" /> 值为 0。 如果 <see cref="T:System.Data.SqlTypes.SqlBoolean" /> 结构的值既不是 1 也不是 0，则新的 <see cref="T:System.Data.SqlTypes.SqlMoney" /> 值为 <see cref="F:System.Data.SqlTypes.SqlMoney.Null" />。</returns>
    </member>
    <member name="M:System.Data.SqlTypes.SqlBoolean.ToSqlSingle">
      <summary vsli:raw="Converts this &lt;see cref=&quot;T:System.Data.SqlTypes.SqlBoolean&quot; /&gt; structure to &lt;see cref=&quot;T:System.Data.SqlTypes.SqlSingle&quot; /&gt;.">将此 <see cref="T:System.Data.SqlTypes.SqlBoolean" /> 结构转换为 <see cref="T:System.Data.SqlTypes.SqlSingle" />。</summary>
      <returns vsli:raw="A new &lt;see cref=&quot;T:System.Data.SqlTypes.SqlSingle&quot; /&gt; structure whose value is 1 or 0.  &#xA;  &#xA; If the &lt;see cref=&quot;T:System.Data.SqlTypes.SqlBoolean&quot; /&gt; structure's value equals true, the new &lt;see cref=&quot;T:System.Data.SqlTypes.SqlSingle&quot; /&gt; structure's value is 1; otherwise the new &lt;see cref=&quot;T:System.Data.SqlTypes.SqlSingle&quot; /&gt; structure's value is 0.">新的 <see cref="T:System.Data.SqlTypes.SqlSingle" /> 结构，其值为 1 或 0。  
  
如果 <see cref="T:System.Data.SqlTypes.SqlBoolean" /> 结构的值等于 true，则新的 <see cref="T:System.Data.SqlTypes.SqlSingle" /> 结构的值为 1；否则新的 <see cref="T:System.Data.SqlTypes.SqlSingle" /> 结构的值为 0。</returns>
    </member>
    <member name="M:System.Data.SqlTypes.SqlBoolean.ToSqlString">
      <summary vsli:raw="Converts this &lt;see cref=&quot;T:System.Data.SqlTypes.SqlBoolean&quot; /&gt; structure to &lt;see cref=&quot;T:System.Data.SqlTypes.SqlString&quot; /&gt;.">将此 <see cref="T:System.Data.SqlTypes.SqlBoolean" /> 结构转换为 <see cref="T:System.Data.SqlTypes.SqlString" />。</summary>
      <returns vsli:raw="A new &lt;see cref=&quot;T:System.Data.SqlTypes.SqlString&quot; /&gt; structure whose value is 1 or 0. If the &lt;see cref=&quot;T:System.Data.SqlTypes.SqlBoolean&quot; /&gt; structure's value equals &lt;see langword=&quot;true&quot; /&gt; then &lt;see cref=&quot;T:System.Data.SqlTypes.SqlString&quot; /&gt; structure's value is 1. Otherwise, the new &lt;see cref=&quot;T:System.Data.SqlTypes.SqlString&quot; /&gt; structure's value is 0.">新的 <see cref="T:System.Data.SqlTypes.SqlString" /> 结构，其值为 1 或 0。 如果 <see cref="T:System.Data.SqlTypes.SqlBoolean" /> 结构的值等于 <see langword="true" />，那么 <see cref="T:System.Data.SqlTypes.SqlString" /> 结构的值为 1。 否则，新的 <see cref="T:System.Data.SqlTypes.SqlString" /> 结构的值为 0。</returns>
    </member>
    <member name="M:System.Data.SqlTypes.SqlBoolean.ToString">
      <summary vsli:raw="Converts this &lt;see cref=&quot;T:System.Data.SqlTypes.SqlBoolean&quot; /&gt; structure to a string.">将此 <see cref="T:System.Data.SqlTypes.SqlBoolean" /> 结构转换为字符串。</summary>
      <returns vsli:raw="A string that contains the value of the &lt;see cref=&quot;T:System.Data.SqlTypes.SqlBoolean&quot; /&gt;. If the value is null, the string will contain &quot;null&quot;.">一个字符串，它包含 <see cref="T:System.Data.SqlTypes.SqlBoolean" /> 的值。 如果值为 null，字符串将包含“null”。</returns>
    </member>
    <member name="M:System.Data.SqlTypes.SqlBoolean.Xor(System.Data.SqlTypes.SqlBoolean,System.Data.SqlTypes.SqlBoolean)">
      <summary vsli:raw="Performs a bitwise exclusive-OR operation on the supplied parameters.">对提供的参数执行按位“异或”运算。</summary>
      <param name="x" vsli:raw="A &lt;see cref=&quot;T:System.Data.SqlTypes.SqlBoolean&quot; /&gt; structure.">
        <see cref="T:System.Data.SqlTypes.SqlBoolean" /> 结构。</param>
      <param name="y" vsli:raw="A &lt;see cref=&quot;T:System.Data.SqlTypes.SqlBoolean&quot; /&gt; structure.">
        <see cref="T:System.Data.SqlTypes.SqlBoolean" /> 结构。</param>
      <returns vsli:raw="The result of the logical XOR operation.">逻辑 XOR 运算的结果。</returns>
    </member>
    <member name="P:System.Data.SqlTypes.SqlBoolean.ByteValue">
      <summary vsli:raw="Gets the value of the &lt;see cref=&quot;T:System.Data.SqlTypes.SqlBoolean&quot; /&gt; structure as a byte.">获取 <see cref="T:System.Data.SqlTypes.SqlBoolean" /> 结构的以字节表示的值。</summary>
      <returns vsli:raw="A byte representing the value of the &lt;see cref=&quot;T:System.Data.SqlTypes.SqlBoolean&quot; /&gt; structure.">表示 <see cref="T:System.Data.SqlTypes.SqlBoolean" /> 结构的值的字节。</returns>
    </member>
    <member name="P:System.Data.SqlTypes.SqlBoolean.IsFalse">
      <summary vsli:raw="Indicates whether the current &lt;see cref=&quot;P:System.Data.SqlTypes.SqlBoolean.Value&quot; /&gt; is &lt;see cref=&quot;F:System.Data.SqlTypes.SqlBoolean.False&quot; /&gt;.">指示当前 <see cref="P:System.Data.SqlTypes.SqlBoolean.Value" /> 是否为 <see cref="F:System.Data.SqlTypes.SqlBoolean.False" />。</summary>
      <returns vsli:raw="&lt;see langword=&quot;true&quot; /&gt; if &lt;see langword=&quot;Value&quot; /&gt; is &lt;see langword=&quot;False&quot; /&gt;; otherwise, &lt;see langword=&quot;false&quot; /&gt;.">如果 <see langword="true" /> 为 <see langword="Value" />，则为 <see langword="False" />；否则为 <see langword="false" />。</returns>
    </member>
    <member name="P:System.Data.SqlTypes.SqlBoolean.IsNull">
      <summary vsli:raw="Indicates whether this &lt;see cref=&quot;T:System.Data.SqlTypes.SqlBoolean&quot; /&gt; structure is null.">指示此 <see cref="T:System.Data.SqlTypes.SqlBoolean" /> 结构是否为 null。</summary>
      <returns vsli:raw="&lt;see langword=&quot;true&quot; /&gt; if the &lt;see cref=&quot;T:System.Data.SqlTypes.SqlBoolean&quot; /&gt; structure is null; otherwise, &lt;see langword=&quot;false&quot; /&gt;.">
        <see langword="true" /> 如果 <see cref="T:System.Data.SqlTypes.SqlBoolean" /> 结构为 null，则为; 否则为 <see langword="false" /> 。</returns>
    </member>
    <member name="P:System.Data.SqlTypes.SqlBoolean.IsTrue">
      <summary vsli:raw="Gets a value that indicates whether the current &lt;see cref=&quot;P:System.Data.SqlTypes.SqlBoolean.Value&quot; /&gt; is &lt;see cref=&quot;F:System.Data.SqlTypes.SqlBoolean.True&quot; /&gt;.">获取一个值，该值指示当前 <see cref="P:System.Data.SqlTypes.SqlBoolean.Value" /> 是否为 <see cref="F:System.Data.SqlTypes.SqlBoolean.True" />。</summary>
      <returns vsli:raw="&lt;see langword=&quot;true&quot; /&gt; if &lt;see langword=&quot;Value&quot; /&gt; is &lt;see langword=&quot;true&quot; /&gt;; otherwise, &lt;see langword=&quot;false&quot; /&gt;.">如果 <see langword="true" /> 为 <see langword="Value" />，则为 <see langword="true" />；否则为 <see langword="false" />。</returns>
    </member>
    <member name="P:System.Data.SqlTypes.SqlBoolean.Value">
      <summary vsli:raw="Gets the &lt;see cref=&quot;T:System.Data.SqlTypes.SqlBoolean&quot; /&gt; structure's value. This property is read-only.">获取 <see cref="T:System.Data.SqlTypes.SqlBoolean" /> 结构的值。 此属性为只读。</summary>
      <exception cref="T:System.Data.SqlTypes.SqlNullValueException" vsli:raw="The property is set to null.">该属性设置为 null。</exception>
      <returns vsli:raw="&lt;see langword=&quot;true&quot; /&gt; if the &lt;see cref=&quot;T:System.Data.SqlTypes.SqlBoolean&quot; /&gt; is &lt;see cref=&quot;F:System.Data.SqlTypes.SqlBoolean.True&quot; /&gt;; otherwise, &lt;see langword=&quot;false&quot; /&gt;.">如果 <see cref="T:System.Data.SqlTypes.SqlBoolean" /> 为 <see cref="F:System.Data.SqlTypes.SqlBoolean.True" />，则为 <see langword="true" />；否则为 <see langword="false" />。</returns>
    </member>
    <member name="T:System.Data.SqlTypes.SqlByte">
      <summary vsli:raw="Represents an 8-bit unsigned integer, in the range of 0 through 255, to be stored in or retrieved from a database.">表示要存储在数据库中或从数据库中检索的 8 位无符号整数，此整数在 0 到 255 范围内。</summary>
    </member>
    <member name="F:System.Data.SqlTypes.SqlByte.MaxValue">
      <summary vsli:raw="A constant representing the largest possible value of a &lt;see cref=&quot;T:System.Data.SqlTypes.SqlByte&quot; /&gt;.">一个常数，它表示 <see cref="T:System.Data.SqlTypes.SqlByte" /> 的最大可能值。</summary>
    </member>
    <member name="F:System.Data.SqlTypes.SqlByte.MinValue">
      <summary vsli:raw="A constant representing the smallest possible value of a &lt;see cref=&quot;T:System.Data.SqlTypes.SqlByte&quot; /&gt;.">一个常数，它表示 <see cref="T:System.Data.SqlTypes.SqlByte" /> 的最小可能值。</summary>
    </member>
    <member name="F:System.Data.SqlTypes.SqlByte.Null">
      <summary vsli:raw="Represents a &lt;see cref=&quot;T:System.DBNull&quot; /&gt; that can be assigned to this instance of the &lt;see cref=&quot;T:System.Data.SqlTypes.SqlByte&quot; /&gt; structure.">表示可指派给 <see cref="T:System.DBNull" /> 结构的此实例的 <see cref="T:System.Data.SqlTypes.SqlByte" />。</summary>
    </member>
    <member name="F:System.Data.SqlTypes.SqlByte.Zero">
      <summary vsli:raw="Represents a zero value that can be assigned to the &lt;see cref=&quot;P:System.Data.SqlTypes.SqlByte.Value&quot; /&gt; property of an instance of the &lt;see cref=&quot;T:System.Data.SqlTypes.SqlByte&quot; /&gt; structure.">表示可分配给 <see cref="P:System.Data.SqlTypes.SqlByte.Value" /> 结构实例的 <see cref="T:System.Data.SqlTypes.SqlByte" /> 属性的零值。</summary>
    </member>
    <member name="M:System.Data.SqlTypes.SqlByte.#ctor(System.Byte)">
      <summary vsli:raw="Initializes a new instance of the &lt;see cref=&quot;T:System.Data.SqlTypes.SqlByte&quot; /&gt; structure using the specified byte value.">使用指定的字节值初始化 <see cref="T:System.Data.SqlTypes.SqlByte" /> 结构的新实例。</summary>
      <param name="value" vsli:raw="A byte value to be stored in the &lt;see cref=&quot;P:System.Data.SqlTypes.SqlByte.Value&quot; /&gt; property of the new &lt;see cref=&quot;T:System.Data.SqlTypes.SqlByte&quot; /&gt; structure.">要存储在新 <see cref="P:System.Data.SqlTypes.SqlByte.Value" /> 结构的 <see cref="T:System.Data.SqlTypes.SqlByte" /> 属性中的字节值。</param>
    </member>
    <member name="M:System.Data.SqlTypes.SqlByte.Add(System.Data.SqlTypes.SqlByte,System.Data.SqlTypes.SqlByte)">
      <summary vsli:raw="Computes the sum of the two specified &lt;see cref=&quot;T:System.Data.SqlTypes.SqlByte&quot; /&gt; structures.">计算两个指定的 <see cref="T:System.Data.SqlTypes.SqlByte" /> 结构的和。</summary>
      <param name="x" vsli:raw="A &lt;see cref=&quot;T:System.Data.SqlTypes.SqlByte&quot; /&gt; structure.">
        <see cref="T:System.Data.SqlTypes.SqlByte" /> 结构。</param>
      <param name="y" vsli:raw="A &lt;see cref=&quot;T:System.Data.SqlTypes.SqlByte&quot; /&gt; structure.">
        <see cref="T:System.Data.SqlTypes.SqlByte" /> 结构。</param>
      <returns vsli:raw="A &lt;see cref=&quot;T:System.Data.SqlTypes.SqlByte&quot; /&gt; structure whose &lt;see langword=&quot;Value&quot; /&gt; property contains the results of the addition.">一个 <see cref="T:System.Data.SqlTypes.SqlByte" /> 结构，它的 <see langword="Value" /> 属性包含加法运算的结果。</returns>
    </member>
    <member name="M:System.Data.SqlTypes.SqlByte.BitwiseAnd(System.Data.SqlTypes.SqlByte,System.Data.SqlTypes.SqlByte)">
      <summary vsli:raw="Computes the bitwise AND of its &lt;see cref=&quot;T:System.Data.SqlTypes.SqlByte&quot; /&gt; operands.">对其 <see cref="T:System.Data.SqlTypes.SqlByte" /> 操作数执行按位 AND 运算。</summary>
      <param name="x" vsli:raw="A &lt;see cref=&quot;T:System.Data.SqlTypes.SqlByte&quot; /&gt; structure.">
        <see cref="T:System.Data.SqlTypes.SqlByte" /> 结构。</param>
      <param name="y" vsli:raw="A &lt;see cref=&quot;T:System.Data.SqlTypes.SqlByte&quot; /&gt; structure.">
        <see cref="T:System.Data.SqlTypes.SqlByte" /> 结构。</param>
      <returns vsli:raw="The results of the bitwise AND operation.">按位 AND 运算的结果。</returns>
    </member>
    <member name="M:System.Data.SqlTypes.SqlByte.BitwiseOr(System.Data.SqlTypes.SqlByte,System.Data.SqlTypes.SqlByte)">
      <summary vsli:raw="Computes the bitwise OR of its two &lt;see cref=&quot;T:System.Data.SqlTypes.SqlByte&quot; /&gt; operands.">对其两个 <see cref="T:System.Data.SqlTypes.SqlByte" /> 操作数执行按位“或”计算。</summary>
      <param name="x" vsli:raw="A &lt;see cref=&quot;T:System.Data.SqlTypes.SqlByte&quot; /&gt; structure.">
        <see cref="T:System.Data.SqlTypes.SqlByte" /> 结构。</param>
      <param name="y" vsli:raw="A &lt;see cref=&quot;T:System.Data.SqlTypes.SqlByte&quot; /&gt; structure.">
        <see cref="T:System.Data.SqlTypes.SqlByte" /> 结构。</param>
      <returns vsli:raw="The results of the bitwise OR operation.">按位“或”运算的结果。</returns>
    </member>
    <member name="M:System.Data.SqlTypes.SqlByte.CompareTo(System.Data.SqlTypes.SqlByte)">
      <summary vsli:raw="Compares this instance to the supplied &lt;see cref=&quot;T:System.Data.SqlTypes.SqlByte&quot; /&gt; object and returns an indication of their relative values.">将此实例与所提供的 <see cref="T:System.Data.SqlTypes.SqlByte" /> 对象进行比较，并返回其相对值的指示值。</summary>
      <param name="value" vsli:raw="The &lt;see cref=&quot;T:System.Data.SqlTypes.SqlByte&quot; /&gt; object to be compared.">要比较的 <see cref="T:System.Data.SqlTypes.SqlByte" /> 对象。</param>
      <returns vsli:raw="A signed number that indicates the relative values of the instance and the object.  &#xA;  &#xA; &lt;list type=&quot;table&quot;&gt;&lt;listheader&gt;&lt;term&gt; Return Value&lt;/term&gt;&lt;description&gt; Condition&lt;/description&gt;&lt;/listheader&gt;&lt;item&gt;&lt;term&gt; Less than zero&lt;/term&gt;&lt;description&gt; This instance is less than the object.&lt;/description&gt;&lt;/item&gt;&lt;item&gt;&lt;term&gt; Zero&lt;/term&gt;&lt;description&gt; This instance is the same as the object.&lt;/description&gt;&lt;/item&gt;&lt;item&gt;&lt;term&gt; Greater than zero&lt;/term&gt;&lt;description&gt; This instance is greater than the object  &#xA;  &#xA; -or-  &#xA;  &#xA; The object is a null reference (&lt;see langword=&quot;Nothing&quot; /&gt; in Visual Basic)&lt;/description&gt;&lt;/item&gt;&lt;/list&gt;">一个有符号的数字，它指示该实例和对象的相对值。  
  
 <list type="table"><listheader><term> 返回值</term><description> 条件</description></listheader><item><term> 小于零</term><description> 此实例小于该对象。</description></item><item><term> 零</term><description> 此实例等于该对象。</description></item><item><term> 大于零</term><description> 此实例大于该对象 
- 或 - 
该对象是空引用（在 Visual Basic 中为 <see langword="Nothing" />）</description></item></list></returns>
    </member>
    <member name="M:System.Data.SqlTypes.SqlByte.CompareTo(System.Object)">
      <summary vsli:raw="Compares this instance to the supplied &lt;see cref=&quot;T:System.Object&quot; /&gt; and returns an indication of their relative values.">将此实例与所提供的 <see cref="T:System.Object" /> 进行比较，并返回二者相对值的指示值。</summary>
      <param name="value" vsli:raw="The &lt;see cref=&quot;T:System.Object&quot; /&gt; to be compared.">要比较的 <see cref="T:System.Object" />。</param>
      <returns vsli:raw="A signed number that indicates the relative values of the instance and the object.  &#xA;  &#xA; &lt;list type=&quot;table&quot;&gt;&lt;listheader&gt;&lt;term&gt; Return Value&lt;/term&gt;&lt;description&gt; Condition&lt;/description&gt;&lt;/listheader&gt;&lt;item&gt;&lt;term&gt; Less than zero&lt;/term&gt;&lt;description&gt; This instance is less than the object.&lt;/description&gt;&lt;/item&gt;&lt;item&gt;&lt;term&gt; Zero&lt;/term&gt;&lt;description&gt; This instance is the same as the object.&lt;/description&gt;&lt;/item&gt;&lt;item&gt;&lt;term&gt; Greater than zero&lt;/term&gt;&lt;description&gt; This instance is greater than the object  &#xA;  &#xA; -or-  &#xA;  &#xA; The object is a null reference (&lt;see langword=&quot;Nothing&quot; /&gt; in Visual Basic)&lt;/description&gt;&lt;/item&gt;&lt;/list&gt;">一个有符号的数字，它指示该实例和对象的相对值。  
  
 <list type="table"><listheader><term> 返回值</term><description> 条件</description></listheader><item><term> 小于零</term><description> 此实例小于该对象。</description></item><item><term> 零</term><description> 此实例等于该对象。</description></item><item><term> 大于零</term><description> 此实例大于该对象 
- 或 - 
该对象是空引用（在 Visual Basic 中为 <see langword="Nothing" />）</description></item></list></returns>
    </member>
    <member name="M:System.Data.SqlTypes.SqlByte.Divide(System.Data.SqlTypes.SqlByte,System.Data.SqlTypes.SqlByte)">
      <summary vsli:raw="Divides its first &lt;see cref=&quot;T:System.Data.SqlTypes.SqlByte&quot; /&gt; operand by its second.">将其第一个 <see cref="T:System.Data.SqlTypes.SqlByte" /> 操作数除以其第二个操作数。</summary>
      <param name="x" vsli:raw="A &lt;see cref=&quot;T:System.Data.SqlTypes.SqlByte&quot; /&gt; structure.">
        <see cref="T:System.Data.SqlTypes.SqlByte" /> 结构。</param>
      <param name="y" vsli:raw="A &lt;see cref=&quot;T:System.Data.SqlTypes.SqlByte&quot; /&gt; structure.">
        <see cref="T:System.Data.SqlTypes.SqlByte" /> 结构。</param>
      <returns vsli:raw="A new &lt;see cref=&quot;T:System.Data.SqlTypes.SqlByte&quot; /&gt; structure whose &lt;see cref=&quot;P:System.Data.SqlTypes.SqlByte.Value&quot; /&gt; property contains the results of the division.">新的 <see cref="T:System.Data.SqlTypes.SqlByte" /> 结构，它的 <see cref="P:System.Data.SqlTypes.SqlByte.Value" /> 属性包含除法运算的结果。</returns>
    </member>
    <member name="M:System.Data.SqlTypes.SqlByte.Equals(System.Data.SqlTypes.SqlByte,System.Data.SqlTypes.SqlByte)">
      <summary vsli:raw="Performs a logical comparison of two &lt;see cref=&quot;T:System.Data.SqlTypes.SqlByte&quot; /&gt; structures to determine whether they are equal.">对两个 <see cref="T:System.Data.SqlTypes.SqlByte" /> 结构执行逻辑比较，以确定它们是否相等。</summary>
      <param name="x" vsli:raw="A &lt;see cref=&quot;T:System.Data.SqlTypes.SqlByte&quot; /&gt; structure.">
        <see cref="T:System.Data.SqlTypes.SqlByte" /> 结构。</param>
      <param name="y" vsli:raw="A &lt;see cref=&quot;T:System.Data.SqlTypes.SqlByte&quot; /&gt; structure.">
        <see cref="T:System.Data.SqlTypes.SqlByte" /> 结构。</param>
      <returns vsli:raw="&lt;see langword=&quot;true&quot; /&gt; if the two values are equal. Otherwise, &lt;see langword=&quot;false&quot; /&gt;. If either instance is null, then the &lt;see langword=&quot;SqlByte&quot; /&gt; will be null.">如果两个值相等，则为 <see langword="true" />。 否则为 <see langword="false" />。 如果任一实例为 null，则 <see langword="SqlByte" /> 将为 null。</returns>
    </member>
    <member name="M:System.Data.SqlTypes.SqlByte.Equals(System.Object)">
      <summary vsli:raw="Compares the supplied &lt;see cref=&quot;T:System.Object&quot; /&gt; parameter to the &lt;see cref=&quot;P:System.Data.SqlTypes.SqlByte.Value&quot; /&gt; property of the &lt;see cref=&quot;T:System.Data.SqlTypes.SqlByte&quot; /&gt; object.">将提供的 <see cref="T:System.Object" /> 参数与 <see cref="P:System.Data.SqlTypes.SqlByte.Value" /> 对象的 <see cref="T:System.Data.SqlTypes.SqlByte" /> 属性进行比较。</summary>
      <param name="value" vsli:raw="The &lt;see cref=&quot;T:System.Object&quot; /&gt; to be compared.">要比较的 <see cref="T:System.Object" />。</param>
      <returns vsli:raw="&lt;see langword=&quot;true&quot; /&gt; if object is an instance of &lt;see cref=&quot;T:System.Data.SqlTypes.SqlByte&quot; /&gt; and the two are equal; otherwise &lt;see langword=&quot;false&quot; /&gt;.">如果对象是 <see cref="T:System.Data.SqlTypes.SqlByte" /> 的实例并且两者相等，则为 <see langword="true" />；否则为 <see langword="false" />。</returns>
    </member>
    <member name="M:System.Data.SqlTypes.SqlByte.GetHashCode">
      <summary vsli:raw="Returns the hash code for this instance.">返回此实例的哈希代码。</summary>
      <returns vsli:raw="A 32-bit signed integer hash code.">32 位有符号整数哈希代码。</returns>
    </member>
    <member name="M:System.Data.SqlTypes.SqlByte.GetXsdType(System.Xml.Schema.XmlSchemaSet)">
      <summary vsli:raw="Returns the XML Schema definition language (XSD) of the specified &lt;see cref=&quot;T:System.Xml.Schema.XmlSchemaSet&quot; /&gt;.">返回指定的 <see cref="T:System.Xml.Schema.XmlSchemaSet" /> 的 XML 架构定义语言 (XSD)。</summary>
      <param name="schemaSet" vsli:raw="A &lt;see cref=&quot;T:System.Xml.Schema.XmlSchemaSet&quot; /&gt;.">
        <see cref="T:System.Xml.Schema.XmlSchemaSet" />。</param>
      <returns vsli:raw="A &lt;see langword=&quot;string&quot; /&gt; value that indicates the XSD of the specified &lt;see cref=&quot;T:System.Xml.Schema.XmlSchemaSet&quot; /&gt;.">指示指定的 <see cref="T:System.Xml.Schema.XmlSchemaSet" /> 的 XSD 的 <see langword="string" /> 值。</returns>
    </member>
    <member name="M:System.Data.SqlTypes.SqlByte.GreaterThan(System.Data.SqlTypes.SqlByte,System.Data.SqlTypes.SqlByte)">
      <summary vsli:raw="Compares two instances of &lt;see cref=&quot;T:System.Data.SqlTypes.SqlByte&quot; /&gt; to determine whether the first is greater than the second.">对 <see cref="T:System.Data.SqlTypes.SqlByte" /> 的两个实例进行比较，以确定第一个实例是否大于第二个实例。</summary>
      <param name="x" vsli:raw="A &lt;see cref=&quot;T:System.Data.SqlTypes.SqlByte&quot; /&gt; structure.">
        <see cref="T:System.Data.SqlTypes.SqlByte" /> 结构。</param>
      <param name="y" vsli:raw="A &lt;see cref=&quot;T:System.Data.SqlTypes.SqlByte&quot; /&gt; structure.">
        <see cref="T:System.Data.SqlTypes.SqlByte" /> 结构。</param>
      <returns vsli:raw="A &lt;see cref=&quot;T:System.Data.SqlTypes.SqlBoolean&quot; /&gt; that is &lt;see cref=&quot;F:System.Data.SqlTypes.SqlBoolean.True&quot; /&gt; if the first instance is greater than the second instance. Otherwise, &lt;see cref=&quot;F:System.Data.SqlTypes.SqlBoolean.False&quot; /&gt;. If either instance of &lt;see cref=&quot;T:System.Data.SqlTypes.SqlByte&quot; /&gt; is null, the &lt;see cref=&quot;P:System.Data.SqlTypes.SqlBoolean.Value&quot; /&gt; of the &lt;see cref=&quot;T:System.Data.SqlTypes.SqlBoolean&quot; /&gt; will be &lt;see cref=&quot;F:System.Data.SqlTypes.SqlBoolean.Null&quot; /&gt;.">一个 <see cref="T:System.Data.SqlTypes.SqlBoolean" />，如果第一个实例大于第二个实例，则它为 <see cref="F:System.Data.SqlTypes.SqlBoolean.True" />。 否则为 <see cref="F:System.Data.SqlTypes.SqlBoolean.False" />。 如果 <see cref="T:System.Data.SqlTypes.SqlByte" /> 的任一实例为空，则 <see cref="P:System.Data.SqlTypes.SqlBoolean.Value" /> 的 <see cref="T:System.Data.SqlTypes.SqlBoolean" /> 将为 <see cref="F:System.Data.SqlTypes.SqlBoolean.Null" />。</returns>
    </member>
    <member name="M:System.Data.SqlTypes.SqlByte.GreaterThanOrEqual(System.Data.SqlTypes.SqlByte,System.Data.SqlTypes.SqlByte)">
      <summary vsli:raw="Compares two &lt;see cref=&quot;T:System.Data.SqlTypes.SqlByte&quot; /&gt; structures to determine whether the first is greater than or equal to the second.">对两个 <see cref="T:System.Data.SqlTypes.SqlByte" /> 结构进行比较，以确定第一个结构是否大于或等于第二个结构。</summary>
      <param name="x" vsli:raw="A &lt;see cref=&quot;T:System.Data.SqlTypes.SqlByte&quot; /&gt; structure.">
        <see cref="T:System.Data.SqlTypes.SqlByte" /> 结构。</param>
      <param name="y" vsli:raw="A &lt;see cref=&quot;T:System.Data.SqlTypes.SqlByte&quot; /&gt; structure.">
        <see cref="T:System.Data.SqlTypes.SqlByte" /> 结构。</param>
      <returns vsli:raw="A &lt;see cref=&quot;T:System.Data.SqlTypes.SqlBoolean&quot; /&gt; that is &lt;see cref=&quot;F:System.Data.SqlTypes.SqlBoolean.True&quot; /&gt; if the first instance is greater than or equal to the second instance. Otherwise, &lt;see cref=&quot;F:System.Data.SqlTypes.SqlBoolean.False&quot; /&gt;. If either instance of &lt;see cref=&quot;T:System.Data.SqlTypes.SqlByte&quot; /&gt; is null, the &lt;see cref=&quot;P:System.Data.SqlTypes.SqlBoolean.Value&quot; /&gt; of the &lt;see cref=&quot;T:System.Data.SqlTypes.SqlBoolean&quot; /&gt; will be &lt;see cref=&quot;F:System.Data.SqlTypes.SqlBoolean.Null&quot; /&gt;.">一个 <see cref="T:System.Data.SqlTypes.SqlBoolean" />，如果第一个实例大于或等于第二个实例，则为 <see cref="F:System.Data.SqlTypes.SqlBoolean.True" />。 否则为 <see cref="F:System.Data.SqlTypes.SqlBoolean.False" />。 如果 <see cref="T:System.Data.SqlTypes.SqlByte" /> 的任一实例为空，则 <see cref="P:System.Data.SqlTypes.SqlBoolean.Value" /> 的 <see cref="T:System.Data.SqlTypes.SqlBoolean" /> 将为 <see cref="F:System.Data.SqlTypes.SqlBoolean.Null" />。</returns>
    </member>
    <member name="M:System.Data.SqlTypes.SqlByte.LessThan(System.Data.SqlTypes.SqlByte,System.Data.SqlTypes.SqlByte)">
      <summary vsli:raw="Compares two instances of &lt;see cref=&quot;T:System.Data.SqlTypes.SqlByte&quot; /&gt; to determine whether the first is less than the second.">对 <see cref="T:System.Data.SqlTypes.SqlByte" /> 的两个实例进行比较，以确定第一个实例是否小于第二个实例。</summary>
      <param name="x" vsli:raw="A &lt;see cref=&quot;T:System.Data.SqlTypes.SqlByte&quot; /&gt; structure.">
        <see cref="T:System.Data.SqlTypes.SqlByte" /> 结构。</param>
      <param name="y" vsli:raw="A &lt;see cref=&quot;T:System.Data.SqlTypes.SqlByte&quot; /&gt; structure.">
        <see cref="T:System.Data.SqlTypes.SqlByte" /> 结构。</param>
      <returns vsli:raw="A &lt;see cref=&quot;T:System.Data.SqlTypes.SqlBoolean&quot; /&gt; that is &lt;see cref=&quot;F:System.Data.SqlTypes.SqlBoolean.True&quot; /&gt; if the first instance is less than the second instance. Otherwise, &lt;see cref=&quot;F:System.Data.SqlTypes.SqlBoolean.False&quot; /&gt;. If either instance of &lt;see cref=&quot;T:System.Data.SqlTypes.SqlByte&quot; /&gt; is null, the &lt;see cref=&quot;P:System.Data.SqlTypes.SqlBoolean.Value&quot; /&gt; of the &lt;see cref=&quot;T:System.Data.SqlTypes.SqlBoolean&quot; /&gt; will be &lt;see cref=&quot;F:System.Data.SqlTypes.SqlBoolean.Null&quot; /&gt;.">一个 <see cref="T:System.Data.SqlTypes.SqlBoolean" />，如果第一个实例小于第二个实例，则它为 <see cref="F:System.Data.SqlTypes.SqlBoolean.True" />。 否则为 <see cref="F:System.Data.SqlTypes.SqlBoolean.False" />。 如果 <see cref="T:System.Data.SqlTypes.SqlByte" /> 的任一实例为空，则 <see cref="P:System.Data.SqlTypes.SqlBoolean.Value" /> 的 <see cref="T:System.Data.SqlTypes.SqlBoolean" /> 将为 <see cref="F:System.Data.SqlTypes.SqlBoolean.Null" />。</returns>
    </member>
    <member name="M:System.Data.SqlTypes.SqlByte.LessThanOrEqual(System.Data.SqlTypes.SqlByte,System.Data.SqlTypes.SqlByte)">
      <summary vsli:raw="Compares two instances of &lt;see cref=&quot;T:System.Data.SqlTypes.SqlByte&quot; /&gt; to determine whether the first is less than or equal to the second.">对 <see cref="T:System.Data.SqlTypes.SqlByte" /> 的两个实例进行比较，以确定第一个实例是否小于或等于第二个实例。</summary>
      <param name="x" vsli:raw="A &lt;see cref=&quot;T:System.Data.SqlTypes.SqlByte&quot; /&gt; structure.">
        <see cref="T:System.Data.SqlTypes.SqlByte" /> 结构。</param>
      <param name="y" vsli:raw="A &lt;see cref=&quot;T:System.Data.SqlTypes.SqlByte&quot; /&gt; structure.">
        <see cref="T:System.Data.SqlTypes.SqlByte" /> 结构。</param>
      <returns vsli:raw="A &lt;see cref=&quot;T:System.Data.SqlTypes.SqlBoolean&quot; /&gt; that is &lt;see cref=&quot;F:System.Data.SqlTypes.SqlBoolean.True&quot; /&gt; if the first instance is less than or equal to the second instance. Otherwise, &lt;see cref=&quot;F:System.Data.SqlTypes.SqlBoolean.False&quot; /&gt;. If either instance of &lt;see cref=&quot;T:System.Data.SqlTypes.SqlByte&quot; /&gt; is null, the &lt;see cref=&quot;P:System.Data.SqlTypes.SqlBoolean.Value&quot; /&gt; of the &lt;see cref=&quot;T:System.Data.SqlTypes.SqlBoolean&quot; /&gt; will be &lt;see cref=&quot;F:System.Data.SqlTypes.SqlBoolean.Null&quot; /&gt;.">一个 <see cref="T:System.Data.SqlTypes.SqlBoolean" />，如果第一个实例小于或等于第二个实例，则它为 <see cref="F:System.Data.SqlTypes.SqlBoolean.True" />。 否则为 <see cref="F:System.Data.SqlTypes.SqlBoolean.False" />。 如果 <see cref="T:System.Data.SqlTypes.SqlByte" /> 的任一实例为空，则 <see cref="P:System.Data.SqlTypes.SqlBoolean.Value" /> 的 <see cref="T:System.Data.SqlTypes.SqlBoolean" /> 将为 <see cref="F:System.Data.SqlTypes.SqlBoolean.Null" />。</returns>
    </member>
    <member name="M:System.Data.SqlTypes.SqlByte.Mod(System.Data.SqlTypes.SqlByte,System.Data.SqlTypes.SqlByte)">
      <summary vsli:raw="Computes the remainder after dividing its first &lt;see cref=&quot;T:System.Data.SqlTypes.SqlByte&quot; /&gt; operand by its second.">计算将其第一个 <see cref="T:System.Data.SqlTypes.SqlByte" /> 操作数除以第二个操作数后所得的余数。</summary>
      <param name="x" vsli:raw="A &lt;see cref=&quot;T:System.Data.SqlTypes.SqlByte&quot; /&gt; structure.">
        <see cref="T:System.Data.SqlTypes.SqlByte" /> 结构。</param>
      <param name="y" vsli:raw="A &lt;see cref=&quot;T:System.Data.SqlTypes.SqlByte&quot; /&gt; structure.">
        <see cref="T:System.Data.SqlTypes.SqlByte" /> 结构。</param>
      <returns vsli:raw="A &lt;see cref=&quot;T:System.Data.SqlTypes.SqlByte&quot; /&gt; structure whose &lt;see cref=&quot;P:System.Data.SqlTypes.SqlByte.Value&quot; /&gt; contains the remainder.">一个 <see cref="T:System.Data.SqlTypes.SqlByte" /> 结构，它的 <see cref="P:System.Data.SqlTypes.SqlByte.Value" /> 包含该余数。</returns>
    </member>
    <member name="M:System.Data.SqlTypes.SqlByte.Modulus(System.Data.SqlTypes.SqlByte,System.Data.SqlTypes.SqlByte)">
      <summary vsli:raw="Divides two &lt;see cref=&quot;T:System.Data.SqlTypes.SqlByte&quot; /&gt; values and returns the remainder.">将两个 <see cref="T:System.Data.SqlTypes.SqlByte" /> 值相除，并返回余数。</summary>
      <param name="x" vsli:raw="A &lt;see cref=&quot;T:System.Data.SqlTypes.SqlByte&quot; /&gt;.">
        <see cref="T:System.Data.SqlTypes.SqlByte" />。</param>
      <param name="y" vsli:raw="A &lt;see cref=&quot;T:System.Data.SqlTypes.SqlByte&quot; /&gt;.">
        <see cref="T:System.Data.SqlTypes.SqlByte" />。</param>
      <returns vsli:raw="The remainder left after division is performed on &lt;paramref name=&quot;x&quot; /&gt; and &lt;paramref name=&quot;y&quot; /&gt;.">对 <paramref name="x" /> 和 <paramref name="y" /> 执行除法运算后得到的余数。</returns>
    </member>
    <member name="M:System.Data.SqlTypes.SqlByte.Multiply(System.Data.SqlTypes.SqlByte,System.Data.SqlTypes.SqlByte)">
      <summary vsli:raw="Computes the product of the two &lt;see cref=&quot;T:System.Data.SqlTypes.SqlByte&quot; /&gt; operands.">计算两个 <see cref="T:System.Data.SqlTypes.SqlByte" /> 操作数的乘积。</summary>
      <param name="x" vsli:raw="A &lt;see cref=&quot;T:System.Data.SqlTypes.SqlByte&quot; /&gt; structure.">
        <see cref="T:System.Data.SqlTypes.SqlByte" /> 结构。</param>
      <param name="y" vsli:raw="A &lt;see cref=&quot;T:System.Data.SqlTypes.SqlByte&quot; /&gt; structure.">
        <see cref="T:System.Data.SqlTypes.SqlByte" /> 结构。</param>
      <returns vsli:raw="A new &lt;see cref=&quot;T:System.Data.SqlTypes.SqlByte&quot; /&gt; structure whose &lt;see cref=&quot;P:System.Data.SqlTypes.SqlByte.Value&quot; /&gt; property contains the product of the multiplication.">一个新的 <see cref="T:System.Data.SqlTypes.SqlByte" /> 结构，它的 <see cref="P:System.Data.SqlTypes.SqlByte.Value" /> 属性包含该乘法运算的乘积。</returns>
    </member>
    <member name="M:System.Data.SqlTypes.SqlByte.NotEquals(System.Data.SqlTypes.SqlByte,System.Data.SqlTypes.SqlByte)">
      <summary vsli:raw="Compares two instances of &lt;see cref=&quot;T:System.Data.SqlTypes.SqlByte&quot; /&gt; to determine whether they are not equal.">对 <see cref="T:System.Data.SqlTypes.SqlByte" /> 的两个实例进行比较，以确定它们是否不相等。</summary>
      <param name="x" vsli:raw="A &lt;see cref=&quot;T:System.Data.SqlTypes.SqlByte&quot; /&gt; structure.">
        <see cref="T:System.Data.SqlTypes.SqlByte" /> 结构。</param>
      <param name="y" vsli:raw="A &lt;see cref=&quot;T:System.Data.SqlTypes.SqlByte&quot; /&gt; structure.">
        <see cref="T:System.Data.SqlTypes.SqlByte" /> 结构。</param>
      <returns vsli:raw="A &lt;see cref=&quot;T:System.Data.SqlTypes.SqlBoolean&quot; /&gt; that is &lt;see cref=&quot;F:System.Data.SqlTypes.SqlBoolean.True&quot; /&gt; if the two instances are not equal or &lt;see cref=&quot;F:System.Data.SqlTypes.SqlBoolean.False&quot; /&gt; if the two instances are equal. If either instance of &lt;see cref=&quot;T:System.Data.SqlTypes.SqlByte&quot; /&gt; is null, the &lt;see cref=&quot;P:System.Data.SqlTypes.SqlBoolean.Value&quot; /&gt; of the &lt;see cref=&quot;T:System.Data.SqlTypes.SqlBoolean&quot; /&gt; will be &lt;see cref=&quot;F:System.Data.SqlTypes.SqlBoolean.Null&quot; /&gt;.">一个 <see cref="T:System.Data.SqlTypes.SqlBoolean" />，它在两个实例不等时为 <see cref="F:System.Data.SqlTypes.SqlBoolean.True" />，在两个实例相等时为 <see cref="F:System.Data.SqlTypes.SqlBoolean.False" />。 如果 <see cref="T:System.Data.SqlTypes.SqlByte" /> 的任一实例为空，则 <see cref="P:System.Data.SqlTypes.SqlBoolean.Value" /> 的 <see cref="T:System.Data.SqlTypes.SqlBoolean" /> 将为 <see cref="F:System.Data.SqlTypes.SqlBoolean.Null" />。</returns>
    </member>
    <member name="M:System.Data.SqlTypes.SqlByte.OnesComplement(System.Data.SqlTypes.SqlByte)">
      <summary vsli:raw="The ones complement operator performs a bitwise one's complement operation on its &lt;see cref=&quot;T:System.Data.SqlTypes.SqlByte&quot; /&gt; operand.">二进制反码运算符对其 <see cref="T:System.Data.SqlTypes.SqlByte" /> 操作数执行按位二进制反码运算。</summary>
      <param name="x" vsli:raw="A &lt;see cref=&quot;T:System.Data.SqlTypes.SqlByte&quot; /&gt; structure.">
        <see cref="T:System.Data.SqlTypes.SqlByte" /> 结构。</param>
      <returns vsli:raw="A &lt;see cref=&quot;T:System.Data.SqlTypes.SqlByte&quot; /&gt; structure whose &lt;see cref=&quot;P:System.Data.SqlTypes.SqlByte.Value&quot; /&gt; property contains the ones complement of the &lt;see cref=&quot;T:System.Data.SqlTypes.SqlByte&quot; /&gt; parameter.">一个 <see cref="T:System.Data.SqlTypes.SqlByte" /> 结构，它的 <see cref="P:System.Data.SqlTypes.SqlByte.Value" /> 属性包含 <see cref="T:System.Data.SqlTypes.SqlByte" /> 参数的二进制反码。</returns>
    </member>
    <member name="M:System.Data.SqlTypes.SqlByte.op_Addition(System.Data.SqlTypes.SqlByte,System.Data.SqlTypes.SqlByte)">
      <summary vsli:raw="Computes the sum of the two specified &lt;see cref=&quot;T:System.Data.SqlTypes.SqlByte&quot; /&gt; structures.">计算两个指定的 <see cref="T:System.Data.SqlTypes.SqlByte" /> 结构的和。</summary>
      <param name="x" vsli:raw="A &lt;see cref=&quot;T:System.Data.SqlTypes.SqlByte&quot; /&gt; structure.">
        <see cref="T:System.Data.SqlTypes.SqlByte" /> 结构。</param>
      <param name="y" vsli:raw="A &lt;see cref=&quot;T:System.Data.SqlTypes.SqlByte&quot; /&gt; structure.">
        <see cref="T:System.Data.SqlTypes.SqlByte" /> 结构。</param>
      <returns vsli:raw="A &lt;see cref=&quot;T:System.Data.SqlTypes.SqlByte&quot; /&gt; whose &lt;see cref=&quot;P:System.Data.SqlTypes.SqlByte.Value&quot; /&gt; property contains the sum of the two operands.">一个 <see cref="T:System.Data.SqlTypes.SqlByte" /> 结构，它的 <see cref="P:System.Data.SqlTypes.SqlByte.Value" /> 属性包含两个操作数的和。</returns>
    </member>
    <member name="M:System.Data.SqlTypes.SqlByte.op_BitwiseAnd(System.Data.SqlTypes.SqlByte,System.Data.SqlTypes.SqlByte)">
      <summary vsli:raw="Computes the bitwise AND of its &lt;see cref=&quot;T:System.Data.SqlTypes.SqlByte&quot; /&gt; operands.">对其 <see cref="T:System.Data.SqlTypes.SqlByte" /> 操作数执行按位 AND 运算。</summary>
      <param name="x" vsli:raw="A &lt;see cref=&quot;T:System.Data.SqlTypes.SqlByte&quot; /&gt; structure.">
        <see cref="T:System.Data.SqlTypes.SqlByte" /> 结构。</param>
      <param name="y" vsli:raw="A &lt;see cref=&quot;T:System.Data.SqlTypes.SqlByte&quot; /&gt; structure.">
        <see cref="T:System.Data.SqlTypes.SqlByte" /> 结构。</param>
      <returns vsli:raw="The results of the bitwise AND operation.">按位 AND 运算的结果。</returns>
    </member>
    <member name="M:System.Data.SqlTypes.SqlByte.op_BitwiseOr(System.Data.SqlTypes.SqlByte,System.Data.SqlTypes.SqlByte)">
      <summary vsli:raw="Computes the bitwise OR of its two &lt;see cref=&quot;T:System.Data.SqlTypes.SqlByte&quot; /&gt; operands.">对其两个 <see cref="T:System.Data.SqlTypes.SqlByte" /> 操作数执行按位“或”计算。</summary>
      <param name="x" vsli:raw="A &lt;see cref=&quot;T:System.Data.SqlTypes.SqlByte&quot; /&gt; structure.">
        <see cref="T:System.Data.SqlTypes.SqlByte" /> 结构。</param>
      <param name="y" vsli:raw="A &lt;see cref=&quot;T:System.Data.SqlTypes.SqlByte&quot; /&gt; structure.">
        <see cref="T:System.Data.SqlTypes.SqlByte" /> 结构。</param>
      <returns vsli:raw="The results of the bitwise OR operation.">按位“或”运算的结果。</returns>
    </member>
    <member name="M:System.Data.SqlTypes.SqlByte.op_Division(System.Data.SqlTypes.SqlByte,System.Data.SqlTypes.SqlByte)">
      <summary vsli:raw="Divides its first &lt;see cref=&quot;T:System.Data.SqlTypes.SqlByte&quot; /&gt; operand by its second.">将其第一个 <see cref="T:System.Data.SqlTypes.SqlByte" /> 操作数除以其第二个操作数。</summary>
      <param name="x" vsli:raw="A &lt;see cref=&quot;T:System.Data.SqlTypes.SqlByte&quot; /&gt; structure.">
        <see cref="T:System.Data.SqlTypes.SqlByte" /> 结构。</param>
      <param name="y" vsli:raw="A &lt;see cref=&quot;T:System.Data.SqlTypes.SqlByte&quot; /&gt; structure.">
        <see cref="T:System.Data.SqlTypes.SqlByte" /> 结构。</param>
      <returns vsli:raw="A new &lt;see cref=&quot;T:System.Data.SqlTypes.SqlByte&quot; /&gt; structure whose &lt;see cref=&quot;P:System.Data.SqlTypes.SqlByte.Value&quot; /&gt; property contains the results of the division.">新的 <see cref="T:System.Data.SqlTypes.SqlByte" /> 结构，它的 <see cref="P:System.Data.SqlTypes.SqlByte.Value" /> 属性包含除法运算的结果。</returns>
    </member>
    <member name="M:System.Data.SqlTypes.SqlByte.op_Equality(System.Data.SqlTypes.SqlByte,System.Data.SqlTypes.SqlByte)">
      <summary vsli:raw="Performs a logical comparison of two &lt;see cref=&quot;T:System.Data.SqlTypes.SqlByte&quot; /&gt; structures to determine whether they are equal.">对两个 <see cref="T:System.Data.SqlTypes.SqlByte" /> 结构执行逻辑比较，以确定它们是否相等。</summary>
      <param name="x" vsli:raw="A &lt;see cref=&quot;T:System.Data.SqlTypes.SqlByte&quot; /&gt; structure.">
        <see cref="T:System.Data.SqlTypes.SqlByte" /> 结构。</param>
      <param name="y" vsli:raw="A &lt;see cref=&quot;T:System.Data.SqlTypes.SqlByte&quot; /&gt; structure.">
        <see cref="T:System.Data.SqlTypes.SqlByte" /> 结构。</param>
      <returns vsli:raw="A &lt;see cref=&quot;T:System.Data.SqlTypes.SqlBoolean&quot; /&gt; that is &lt;see cref=&quot;F:System.Data.SqlTypes.SqlBoolean.True&quot; /&gt; if the two instances are equal or &lt;see cref=&quot;F:System.Data.SqlTypes.SqlBoolean.False&quot; /&gt; if the two instances are not equal. If either instance of &lt;see cref=&quot;T:System.Data.SqlTypes.SqlByte&quot; /&gt; is null, the &lt;see cref=&quot;P:System.Data.SqlTypes.SqlBoolean.Value&quot; /&gt; of the &lt;see cref=&quot;T:System.Data.SqlTypes.SqlBoolean&quot; /&gt; will be &lt;see cref=&quot;F:System.Data.SqlTypes.SqlBoolean.Null&quot; /&gt;.">一个 <see cref="T:System.Data.SqlTypes.SqlBoolean" />，它在两个实例相等时为 <see cref="F:System.Data.SqlTypes.SqlBoolean.True" />，在两个实例不等时为 <see cref="F:System.Data.SqlTypes.SqlBoolean.False" />。 如果 <see cref="T:System.Data.SqlTypes.SqlByte" /> 的任一实例为空，则 <see cref="P:System.Data.SqlTypes.SqlBoolean.Value" /> 的 <see cref="T:System.Data.SqlTypes.SqlBoolean" /> 将为 <see cref="F:System.Data.SqlTypes.SqlBoolean.Null" />。</returns>
    </member>
    <member name="M:System.Data.SqlTypes.SqlByte.op_ExclusiveOr(System.Data.SqlTypes.SqlByte,System.Data.SqlTypes.SqlByte)">
      <summary vsli:raw="Performs a bitwise exclusive-OR operation on the supplied parameters.">对提供的参数执行按位“异或”运算。</summary>
      <param name="x" vsli:raw="A &lt;see cref=&quot;T:System.Data.SqlTypes.SqlByte&quot; /&gt; structure.">
        <see cref="T:System.Data.SqlTypes.SqlByte" /> 结构。</param>
      <param name="y" vsli:raw="A &lt;see cref=&quot;T:System.Data.SqlTypes.SqlByte&quot; /&gt; structure.">
        <see cref="T:System.Data.SqlTypes.SqlByte" /> 结构。</param>
      <returns vsli:raw="The results of the bitwise XOR operation.">按位“异或”运算的结果。</returns>
    </member>
    <member name="M:System.Data.SqlTypes.SqlByte.op_Explicit(System.Data.SqlTypes.SqlBoolean)~System.Data.SqlTypes.SqlByte">
      <summary vsli:raw="Converts the &lt;see cref=&quot;T:System.Data.SqlTypes.SqlBoolean&quot; /&gt; parameter to a &lt;see cref=&quot;T:System.Data.SqlTypes.SqlByte&quot; /&gt;.">将 <see cref="T:System.Data.SqlTypes.SqlBoolean" /> 参数转换为 <see cref="T:System.Data.SqlTypes.SqlByte" />。</summary>
      <param name="x" vsli:raw="The &lt;see cref=&quot;T:System.Data.SqlTypes.SqlBoolean&quot; /&gt; parameter to be converted to a &lt;see cref=&quot;T:System.Data.SqlTypes.SqlByte&quot; /&gt;.">要转换为 <see cref="T:System.Data.SqlTypes.SqlBoolean" /> 的 <see cref="T:System.Data.SqlTypes.SqlByte" /> 参数。</param>
      <returns vsli:raw="A &lt;see cref=&quot;T:System.Data.SqlTypes.SqlByte&quot; /&gt; whose &lt;see cref=&quot;P:System.Data.SqlTypes.SqlByte.Value&quot; /&gt; property equals the &lt;see cref=&quot;P:System.Data.SqlTypes.SqlBoolean.ByteValue&quot; /&gt; of the supplied &lt;see cref=&quot;T:System.Data.SqlTypes.SqlBoolean&quot; /&gt; parameter.">一个 <see cref="T:System.Data.SqlTypes.SqlByte" />，它的 <see cref="P:System.Data.SqlTypes.SqlByte.Value" /> 属性等于提供的 <see cref="P:System.Data.SqlTypes.SqlBoolean.ByteValue" /> 参数的 <see cref="T:System.Data.SqlTypes.SqlBoolean" />。</returns>
    </member>
    <member name="M:System.Data.SqlTypes.SqlByte.op_Explicit(System.Data.SqlTypes.SqlByte)~System.Byte">
      <summary vsli:raw="Converts the supplied &lt;see cref=&quot;T:System.Data.SqlTypes.SqlByte&quot; /&gt; structure to a byte.">将提供的 <see cref="T:System.Data.SqlTypes.SqlByte" /> 结构转换为字节。</summary>
      <param name="x" vsli:raw="The &lt;see cref=&quot;T:System.Data.SqlTypes.SqlByte&quot; /&gt; structure to be converted to a byte.">要转换为字节的 <see cref="T:System.Data.SqlTypes.SqlByte" /> 结构。</param>
      <returns vsli:raw="A byte whose value equals the &lt;see cref=&quot;P:System.Data.SqlTypes.SqlByte.Value&quot; /&gt; property of the &lt;see cref=&quot;T:System.Data.SqlTypes.SqlByte&quot; /&gt; parameter.">一个字节，其值等于 <see cref="P:System.Data.SqlTypes.SqlByte.Value" /> 参数的 <see cref="T:System.Data.SqlTypes.SqlByte" /> 属性。</returns>
    </member>
    <member name="M:System.Data.SqlTypes.SqlByte.op_Explicit(System.Data.SqlTypes.SqlDecimal)~System.Data.SqlTypes.SqlByte">
      <summary vsli:raw="Converts the supplied &lt;see cref=&quot;T:System.Data.SqlTypes.SqlDecimal&quot; /&gt; to &lt;see cref=&quot;T:System.Data.SqlTypes.SqlByte&quot; /&gt;.">将提供的 <see cref="T:System.Data.SqlTypes.SqlDecimal" /> 转换为 <see cref="T:System.Data.SqlTypes.SqlByte" />。</summary>
      <param name="x" vsli:raw="A &lt;see cref=&quot;T:System.Data.SqlTypes.SqlDecimal&quot; /&gt; structure.">
        <see cref="T:System.Data.SqlTypes.SqlDecimal" /> 结构。</param>
      <returns vsli:raw="A &lt;see cref=&quot;T:System.Data.SqlTypes.SqlByte&quot; /&gt; structure whose &lt;see cref=&quot;P:System.Data.SqlTypes.SqlByte.Value&quot; /&gt; property is equal to the &lt;see cref=&quot;P:System.Data.SqlTypes.SqlDecimal.Value&quot; /&gt; of the &lt;see cref=&quot;T:System.Data.SqlTypes.SqlDecimal&quot; /&gt; parameter.">一个 <see cref="T:System.Data.SqlTypes.SqlByte" /> 结构，它的 <see cref="P:System.Data.SqlTypes.SqlByte.Value" /> 属性等于 <see cref="P:System.Data.SqlTypes.SqlDecimal.Value" /> 参数的 <see cref="T:System.Data.SqlTypes.SqlDecimal" />。</returns>
    </member>
    <member name="M:System.Data.SqlTypes.SqlByte.op_Explicit(System.Data.SqlTypes.SqlDouble)~System.Data.SqlTypes.SqlByte">
      <summary vsli:raw="Converts the supplied &lt;see cref=&quot;T:System.Data.SqlTypes.SqlDouble&quot; /&gt; to &lt;see cref=&quot;T:System.Data.SqlTypes.SqlByte&quot; /&gt;.">将提供的 <see cref="T:System.Data.SqlTypes.SqlDouble" /> 转换为 <see cref="T:System.Data.SqlTypes.SqlByte" />。</summary>
      <param name="x" vsli:raw="A &lt;see cref=&quot;T:System.Data.SqlTypes.SqlDouble&quot; /&gt; structure.">
        <see cref="T:System.Data.SqlTypes.SqlDouble" /> 结构。</param>
      <returns vsli:raw="A &lt;see cref=&quot;T:System.Data.SqlTypes.SqlByte&quot; /&gt; structure whose &lt;see cref=&quot;P:System.Data.SqlTypes.SqlByte.Value&quot; /&gt; property is equal to the &lt;see cref=&quot;P:System.Data.SqlTypes.SqlDouble.Value&quot; /&gt; of the &lt;see cref=&quot;T:System.Data.SqlTypes.SqlDouble&quot; /&gt; parameter.">一个 <see cref="T:System.Data.SqlTypes.SqlByte" /> 结构，它的 <see cref="P:System.Data.SqlTypes.SqlByte.Value" /> 属性等于 <see cref="P:System.Data.SqlTypes.SqlDouble.Value" /> 参数的 <see cref="T:System.Data.SqlTypes.SqlDouble" />。</returns>
    </member>
    <member name="M:System.Data.SqlTypes.SqlByte.op_Explicit(System.Data.SqlTypes.SqlInt16)~System.Data.SqlTypes.SqlByte">
      <summary vsli:raw="Converts the &lt;see cref=&quot;T:System.Data.SqlTypes.SqlInt16&quot; /&gt; parameter to a &lt;see cref=&quot;T:System.Data.SqlTypes.SqlByte&quot; /&gt;.">将 <see cref="T:System.Data.SqlTypes.SqlInt16" /> 参数转换为 <see cref="T:System.Data.SqlTypes.SqlByte" />。</summary>
      <param name="x" vsli:raw="A &lt;see cref=&quot;T:System.Data.SqlTypes.SqlInt16&quot; /&gt; structure.">
        <see cref="T:System.Data.SqlTypes.SqlInt16" /> 结构。</param>
      <returns vsli:raw="A &lt;see cref=&quot;T:System.Data.SqlTypes.SqlByte&quot; /&gt; structure whose &lt;see cref=&quot;P:System.Data.SqlTypes.SqlByte.Value&quot; /&gt; property is equal to the &lt;see cref=&quot;P:System.Data.SqlTypes.SqlInt16.Value&quot; /&gt; of the &lt;see cref=&quot;T:System.Data.SqlTypes.SqlInt16&quot; /&gt; parameter.">一个 <see cref="T:System.Data.SqlTypes.SqlByte" /> 结构，它的 <see cref="P:System.Data.SqlTypes.SqlByte.Value" /> 属性等于 <see cref="P:System.Data.SqlTypes.SqlInt16.Value" /> 参数的 <see cref="T:System.Data.SqlTypes.SqlInt16" />。</returns>
    </member>
    <member name="M:System.Data.SqlTypes.SqlByte.op_Explicit(System.Data.SqlTypes.SqlInt32)~System.Data.SqlTypes.SqlByte">
      <summary vsli:raw="Converts the supplied &lt;see cref=&quot;T:System.Data.SqlTypes.SqlInt32&quot; /&gt; to &lt;see cref=&quot;T:System.Data.SqlTypes.SqlByte&quot; /&gt;.">将提供的 <see cref="T:System.Data.SqlTypes.SqlInt32" /> 转换为 <see cref="T:System.Data.SqlTypes.SqlByte" />。</summary>
      <param name="x" vsli:raw="A &lt;see cref=&quot;T:System.Data.SqlTypes.SqlInt32&quot; /&gt; structure.">
        <see cref="T:System.Data.SqlTypes.SqlInt32" /> 结构。</param>
      <returns vsli:raw="A &lt;see cref=&quot;T:System.Data.SqlTypes.SqlByte&quot; /&gt; structure whose &lt;see cref=&quot;P:System.Data.SqlTypes.SqlByte.Value&quot; /&gt; property is equal to the &lt;see cref=&quot;P:System.Data.SqlTypes.SqlInt32.Value&quot; /&gt; of the &lt;see cref=&quot;T:System.Data.SqlTypes.SqlInt32&quot; /&gt; parameter.">一个 <see cref="T:System.Data.SqlTypes.SqlByte" /> 结构，它的 <see cref="P:System.Data.SqlTypes.SqlByte.Value" /> 属性等于 <see cref="P:System.Data.SqlTypes.SqlInt32.Value" /> 参数的 <see cref="T:System.Data.SqlTypes.SqlInt32" />。</returns>
    </member>
    <member name="M:System.Data.SqlTypes.SqlByte.op_Explicit(System.Data.SqlTypes.SqlInt64)~System.Data.SqlTypes.SqlByte">
      <summary vsli:raw="Converts the supplied &lt;see cref=&quot;T:System.Data.SqlTypes.SqlInt64&quot; /&gt; to &lt;see cref=&quot;T:System.Data.SqlTypes.SqlByte&quot; /&gt;.">将提供的 <see cref="T:System.Data.SqlTypes.SqlInt64" /> 转换为 <see cref="T:System.Data.SqlTypes.SqlByte" />。</summary>
      <param name="x" vsli:raw="A &lt;see cref=&quot;T:System.Data.SqlTypes.SqlInt64&quot; /&gt; structure.">
        <see cref="T:System.Data.SqlTypes.SqlInt64" /> 结构。</param>
      <returns vsli:raw="A &lt;see cref=&quot;T:System.Data.SqlTypes.SqlByte&quot; /&gt; structure whose &lt;see cref=&quot;P:System.Data.SqlTypes.SqlByte.Value&quot; /&gt; property is equal to the &lt;see cref=&quot;P:System.Data.SqlTypes.SqlInt64.Value&quot; /&gt; of the &lt;see langword=&quot;SqlInt64&quot; /&gt; parameter.">一个 <see cref="T:System.Data.SqlTypes.SqlByte" /> 结构，它的 <see cref="P:System.Data.SqlTypes.SqlByte.Value" /> 属性等于 <see cref="P:System.Data.SqlTypes.SqlInt64.Value" /> 参数的 <see langword="SqlInt64" />。</returns>
    </member>
    <member name="M:System.Data.SqlTypes.SqlByte.op_Explicit(System.Data.SqlTypes.SqlMoney)~System.Data.SqlTypes.SqlByte">
      <summary vsli:raw="Converts the &lt;see cref=&quot;T:System.Data.SqlTypes.SqlMoney&quot; /&gt; parameter to a &lt;see cref=&quot;T:System.Data.SqlTypes.SqlByte&quot; /&gt;.">将 <see cref="T:System.Data.SqlTypes.SqlMoney" /> 参数转换为 <see cref="T:System.Data.SqlTypes.SqlByte" />。</summary>
      <param name="x" vsli:raw="A &lt;see langword=&quot;SqlMoney&quot; /&gt; structure.">
        <see langword="SqlMoney" /> 结构。</param>
      <returns vsli:raw="A &lt;see cref=&quot;T:System.Data.SqlTypes.SqlByte&quot; /&gt; structure whose &lt;see cref=&quot;P:System.Data.SqlTypes.SqlByte.Value&quot; /&gt; property is equal to the &lt;see cref=&quot;P:System.Data.SqlTypes.SqlMoney.Value&quot; /&gt; of the &lt;see cref=&quot;T:System.Data.SqlTypes.SqlMoney&quot; /&gt; parameter.">一个 <see cref="T:System.Data.SqlTypes.SqlByte" /> 结构，它的 <see cref="P:System.Data.SqlTypes.SqlByte.Value" /> 属性等于 <see cref="P:System.Data.SqlTypes.SqlMoney.Value" /> 参数的 <see cref="T:System.Data.SqlTypes.SqlMoney" />。</returns>
    </member>
    <member name="M:System.Data.SqlTypes.SqlByte.op_Explicit(System.Data.SqlTypes.SqlSingle)~System.Data.SqlTypes.SqlByte">
      <summary vsli:raw="Converts the supplied &lt;see cref=&quot;T:System.Data.SqlTypes.SqlSingle&quot; /&gt; structure to &lt;see cref=&quot;T:System.Data.SqlTypes.SqlByte&quot; /&gt;.">将提供的 <see cref="T:System.Data.SqlTypes.SqlSingle" /> 结构转换为 <see cref="T:System.Data.SqlTypes.SqlByte" />。</summary>
      <param name="x" vsli:raw="A &lt;see cref=&quot;T:System.Data.SqlTypes.SqlSingle&quot; /&gt; structure.">
        <see cref="T:System.Data.SqlTypes.SqlSingle" /> 结构。</param>
      <returns vsli:raw="A &lt;see cref=&quot;T:System.Data.SqlTypes.SqlByte&quot; /&gt; structure whose &lt;see cref=&quot;P:System.Data.SqlTypes.SqlByte.Value&quot; /&gt; property is equal to the &lt;see cref=&quot;P:System.Data.SqlTypes.SqlSingle.Value&quot; /&gt; of the &lt;see cref=&quot;T:System.Data.SqlTypes.SqlSingle&quot; /&gt; parameter.">一个 <see cref="T:System.Data.SqlTypes.SqlByte" /> 结构，它的 <see cref="P:System.Data.SqlTypes.SqlByte.Value" /> 属性等于 <see cref="P:System.Data.SqlTypes.SqlSingle.Value" /> 参数的 <see cref="T:System.Data.SqlTypes.SqlSingle" />。</returns>
    </member>
    <member name="M:System.Data.SqlTypes.SqlByte.op_Explicit(System.Data.SqlTypes.SqlString)~System.Data.SqlTypes.SqlByte">
      <summary vsli:raw="Converts the supplied &lt;see cref=&quot;T:System.Data.SqlTypes.SqlString&quot; /&gt; to &lt;see cref=&quot;T:System.Data.SqlTypes.SqlByte&quot; /&gt;.">将提供的 <see cref="T:System.Data.SqlTypes.SqlString" /> 转换为 <see cref="T:System.Data.SqlTypes.SqlByte" />。</summary>
      <param name="x" vsli:raw="An instance of the &lt;see langword=&quot;SqlString&quot; /&gt; class.">
        <see langword="SqlString" /> 类的实例。</param>
      <returns vsli:raw="A &lt;see cref=&quot;T:System.Data.SqlTypes.SqlByte&quot; /&gt; structure whose &lt;see cref=&quot;P:System.Data.SqlTypes.SqlByte.Value&quot; /&gt; property is equal to the numeric value represented by the &lt;see cref=&quot;T:System.Data.SqlTypes.SqlString&quot; /&gt;.">一个 <see cref="T:System.Data.SqlTypes.SqlByte" /> 结构，其 <see cref="P:System.Data.SqlTypes.SqlByte.Value" /> 属性等于 <see cref="T:System.Data.SqlTypes.SqlString" /> 表示的数值。</returns>
    </member>
    <member name="M:System.Data.SqlTypes.SqlByte.op_GreaterThan(System.Data.SqlTypes.SqlByte,System.Data.SqlTypes.SqlByte)">
      <summary vsli:raw="Compares two instances of &lt;see cref=&quot;T:System.Data.SqlTypes.SqlByte&quot; /&gt; to determine whether the first is greater than the second.">对 <see cref="T:System.Data.SqlTypes.SqlByte" /> 的两个实例进行比较，以确定第一个实例是否大于第二个实例。</summary>
      <param name="x" vsli:raw="A &lt;see cref=&quot;T:System.Data.SqlTypes.SqlByte&quot; /&gt; structure.">
        <see cref="T:System.Data.SqlTypes.SqlByte" /> 结构。</param>
      <param name="y" vsli:raw="A &lt;see cref=&quot;T:System.Data.SqlTypes.SqlByte&quot; /&gt; structure.">
        <see cref="T:System.Data.SqlTypes.SqlByte" /> 结构。</param>
      <returns vsli:raw="A &lt;see cref=&quot;T:System.Data.SqlTypes.SqlBoolean&quot; /&gt; that is &lt;see cref=&quot;F:System.Data.SqlTypes.SqlBoolean.True&quot; /&gt; if the first instance is greater than the second instance. Otherwise, &lt;see cref=&quot;F:System.Data.SqlTypes.SqlBoolean.False&quot; /&gt;. If either instance of &lt;see cref=&quot;T:System.Data.SqlTypes.SqlByte&quot; /&gt; is null, the &lt;see cref=&quot;P:System.Data.SqlTypes.SqlBoolean.Value&quot; /&gt; of the &lt;see cref=&quot;T:System.Data.SqlTypes.SqlBoolean&quot; /&gt; will be &lt;see cref=&quot;F:System.Data.SqlTypes.SqlBoolean.Null&quot; /&gt;.">一个 <see cref="T:System.Data.SqlTypes.SqlBoolean" />，如果第一个实例大于第二个实例，则它为 <see cref="F:System.Data.SqlTypes.SqlBoolean.True" />。 否则为 <see cref="F:System.Data.SqlTypes.SqlBoolean.False" />。 如果 <see cref="T:System.Data.SqlTypes.SqlByte" /> 的任一实例为空，则 <see cref="P:System.Data.SqlTypes.SqlBoolean.Value" /> 的 <see cref="T:System.Data.SqlTypes.SqlBoolean" /> 将为 <see cref="F:System.Data.SqlTypes.SqlBoolean.Null" />。</returns>
    </member>
    <member name="M:System.Data.SqlTypes.SqlByte.op_GreaterThanOrEqual(System.Data.SqlTypes.SqlByte,System.Data.SqlTypes.SqlByte)">
      <summary vsli:raw="Compares two instances of &lt;see cref=&quot;T:System.Data.SqlTypes.SqlByte&quot; /&gt; to determine whether the first is greater than or equal to the second.">对 <see cref="T:System.Data.SqlTypes.SqlByte" /> 的两个实例进行比较，以确定第一个实例是否大于或等于第二个实例。</summary>
      <param name="x" vsli:raw="A &lt;see cref=&quot;T:System.Data.SqlTypes.SqlByte&quot; /&gt; structure.">
        <see cref="T:System.Data.SqlTypes.SqlByte" /> 结构。</param>
      <param name="y" vsli:raw="A &lt;see cref=&quot;T:System.Data.SqlTypes.SqlByte&quot; /&gt; structure.">
        <see cref="T:System.Data.SqlTypes.SqlByte" /> 结构。</param>
      <returns vsli:raw="A &lt;see cref=&quot;T:System.Data.SqlTypes.SqlBoolean&quot; /&gt; that is &lt;see cref=&quot;F:System.Data.SqlTypes.SqlBoolean.True&quot; /&gt; if the first instance is greater than or equal to the second instance. Otherwise, &lt;see cref=&quot;F:System.Data.SqlTypes.SqlBoolean.False&quot; /&gt;. If either instance of &lt;see cref=&quot;T:System.Data.SqlTypes.SqlByte&quot; /&gt; is null, the &lt;see cref=&quot;P:System.Data.SqlTypes.SqlBoolean.Value&quot; /&gt; of the &lt;see langword=&quot;SqlBoolean&quot; /&gt; will be &lt;see cref=&quot;F:System.Data.SqlTypes.SqlBoolean.Null&quot; /&gt;.">一个 <see cref="T:System.Data.SqlTypes.SqlBoolean" />，如果第一个实例大于或等于第二个实例，则为 <see cref="F:System.Data.SqlTypes.SqlBoolean.True" />。 否则为 <see cref="F:System.Data.SqlTypes.SqlBoolean.False" />。 如果 <see cref="T:System.Data.SqlTypes.SqlByte" /> 的任一实例为空，则 <see cref="P:System.Data.SqlTypes.SqlBoolean.Value" /> 的 <see langword="SqlBoolean" /> 将为 <see cref="F:System.Data.SqlTypes.SqlBoolean.Null" />。</returns>
    </member>
    <member name="M:System.Data.SqlTypes.SqlByte.op_Implicit(System.Byte)~System.Data.SqlTypes.SqlByte">
      <summary vsli:raw="Converts the supplied byte value to a &lt;see cref=&quot;T:System.Data.SqlTypes.SqlByte&quot; /&gt;.">将提供的字节值转换为 <see cref="T:System.Data.SqlTypes.SqlByte" />。</summary>
      <param name="x" vsli:raw="A byte value to be converted to &lt;see cref=&quot;T:System.Data.SqlTypes.SqlByte&quot; /&gt;.">要转换为 <see cref="T:System.Data.SqlTypes.SqlByte" /> 的字节值。</param>
      <returns vsli:raw="A &lt;see cref=&quot;T:System.Data.SqlTypes.SqlByte&quot; /&gt; structure whose &lt;see cref=&quot;P:System.Data.SqlTypes.SqlByte.Value&quot; /&gt; property is equal to the supplied parameter.">一个 <see cref="T:System.Data.SqlTypes.SqlByte" /> 结构，其 <see cref="P:System.Data.SqlTypes.SqlByte.Value" /> 属性等于提供的参数。</returns>
    </member>
    <member name="M:System.Data.SqlTypes.SqlByte.op_Inequality(System.Data.SqlTypes.SqlByte,System.Data.SqlTypes.SqlByte)">
      <summary vsli:raw="Compares two instances of &lt;see cref=&quot;T:System.Data.SqlTypes.SqlByte&quot; /&gt; to determine whether they are not equal.">对 <see cref="T:System.Data.SqlTypes.SqlByte" /> 的两个实例进行比较，以确定它们是否不相等。</summary>
      <param name="x" vsli:raw="A &lt;see cref=&quot;T:System.Data.SqlTypes.SqlByte&quot; /&gt; structure.">
        <see cref="T:System.Data.SqlTypes.SqlByte" /> 结构。</param>
      <param name="y" vsli:raw="A &lt;see cref=&quot;T:System.Data.SqlTypes.SqlByte&quot; /&gt; structure.">
        <see cref="T:System.Data.SqlTypes.SqlByte" /> 结构。</param>
      <returns vsli:raw="A &lt;see cref=&quot;T:System.Data.SqlTypes.SqlBoolean&quot; /&gt; that is &lt;see cref=&quot;F:System.Data.SqlTypes.SqlBoolean.True&quot; /&gt; if the two instances are not equal or &lt;see cref=&quot;F:System.Data.SqlTypes.SqlBoolean.False&quot; /&gt; if the two instances are equal. If either instance of &lt;see cref=&quot;T:System.Data.SqlTypes.SqlByte&quot; /&gt; is null, the &lt;see cref=&quot;P:System.Data.SqlTypes.SqlBoolean.Value&quot; /&gt; of the &lt;see cref=&quot;T:System.Data.SqlTypes.SqlBoolean&quot; /&gt; will be &lt;see cref=&quot;F:System.Data.SqlTypes.SqlBoolean.Null&quot; /&gt;.">一个 <see cref="T:System.Data.SqlTypes.SqlBoolean" />，它在两个实例不等时为 <see cref="F:System.Data.SqlTypes.SqlBoolean.True" />，在两个实例相等时为 <see cref="F:System.Data.SqlTypes.SqlBoolean.False" />。 如果 <see cref="T:System.Data.SqlTypes.SqlByte" /> 的任一实例为空，则 <see cref="P:System.Data.SqlTypes.SqlBoolean.Value" /> 的 <see cref="T:System.Data.SqlTypes.SqlBoolean" /> 将为 <see cref="F:System.Data.SqlTypes.SqlBoolean.Null" />。</returns>
    </member>
    <member name="M:System.Data.SqlTypes.SqlByte.op_LessThan(System.Data.SqlTypes.SqlByte,System.Data.SqlTypes.SqlByte)">
      <summary vsli:raw="Compares two instances of &lt;see cref=&quot;T:System.Data.SqlTypes.SqlByte&quot; /&gt; to determine whether the first is less than the second.">对 <see cref="T:System.Data.SqlTypes.SqlByte" /> 的两个实例进行比较，以确定第一个实例是否小于第二个实例。</summary>
      <param name="x" vsli:raw="A &lt;see cref=&quot;T:System.Data.SqlTypes.SqlByte&quot; /&gt; structure.">
        <see cref="T:System.Data.SqlTypes.SqlByte" /> 结构。</param>
      <param name="y" vsli:raw="A &lt;see cref=&quot;T:System.Data.SqlTypes.SqlByte&quot; /&gt; structure.">
        <see cref="T:System.Data.SqlTypes.SqlByte" /> 结构。</param>
      <returns vsli:raw="A &lt;see cref=&quot;T:System.Data.SqlTypes.SqlBoolean&quot; /&gt; that is &lt;see cref=&quot;F:System.Data.SqlTypes.SqlBoolean.True&quot; /&gt; if the first instance is less than the second instance. Otherwise, &lt;see cref=&quot;F:System.Data.SqlTypes.SqlBoolean.False&quot; /&gt;. If either instance of &lt;see cref=&quot;T:System.Data.SqlTypes.SqlByte&quot; /&gt; is null, the &lt;see cref=&quot;P:System.Data.SqlTypes.SqlBoolean.Value&quot; /&gt; of the &lt;see cref=&quot;T:System.Data.SqlTypes.SqlBoolean&quot; /&gt; will be &lt;see cref=&quot;F:System.Data.SqlTypes.SqlBoolean.Null&quot; /&gt;.">一个 <see cref="T:System.Data.SqlTypes.SqlBoolean" />，如果第一个实例小于第二个实例，则它为 <see cref="F:System.Data.SqlTypes.SqlBoolean.True" />。 否则为 <see cref="F:System.Data.SqlTypes.SqlBoolean.False" />。 如果 <see cref="T:System.Data.SqlTypes.SqlByte" /> 的任一实例为空，则 <see cref="P:System.Data.SqlTypes.SqlBoolean.Value" /> 的 <see cref="T:System.Data.SqlTypes.SqlBoolean" /> 将为 <see cref="F:System.Data.SqlTypes.SqlBoolean.Null" />。</returns>
    </member>
    <member name="M:System.Data.SqlTypes.SqlByte.op_LessThanOrEqual(System.Data.SqlTypes.SqlByte,System.Data.SqlTypes.SqlByte)">
      <summary vsli:raw="Compares two instances of &lt;see cref=&quot;T:System.Data.SqlTypes.SqlByte&quot; /&gt; to determine whether the first is less than or equal to the second.">对 <see cref="T:System.Data.SqlTypes.SqlByte" /> 的两个实例进行比较，以确定第一个实例是否小于或等于第二个实例。</summary>
      <param name="x" vsli:raw="A &lt;see cref=&quot;T:System.Data.SqlTypes.SqlByte&quot; /&gt; structure.">
        <see cref="T:System.Data.SqlTypes.SqlByte" /> 结构。</param>
      <param name="y" vsli:raw="A &lt;see cref=&quot;T:System.Data.SqlTypes.SqlByte&quot; /&gt; structure.">
        <see cref="T:System.Data.SqlTypes.SqlByte" /> 结构。</param>
      <returns vsli:raw="A &lt;see cref=&quot;T:System.Data.SqlTypes.SqlBoolean&quot; /&gt; that is &lt;see cref=&quot;F:System.Data.SqlTypes.SqlBoolean.True&quot; /&gt; if the first instance is less than or equal to the second instance. Otherwise, &lt;see cref=&quot;F:System.Data.SqlTypes.SqlBoolean.False&quot; /&gt;. If either instance of &lt;see cref=&quot;T:System.Data.SqlTypes.SqlByte&quot; /&gt; is null, the &lt;see cref=&quot;P:System.Data.SqlTypes.SqlBoolean.Value&quot; /&gt; of the &lt;see cref=&quot;T:System.Data.SqlTypes.SqlBoolean&quot; /&gt; will be &lt;see cref=&quot;F:System.Data.SqlTypes.SqlBoolean.Null&quot; /&gt;.">一个 <see cref="T:System.Data.SqlTypes.SqlBoolean" />，如果第一个实例小于或等于第二个实例，则它为 <see cref="F:System.Data.SqlTypes.SqlBoolean.True" />。 否则为 <see cref="F:System.Data.SqlTypes.SqlBoolean.False" />。 如果 <see cref="T:System.Data.SqlTypes.SqlByte" /> 的任一实例为空，则 <see cref="P:System.Data.SqlTypes.SqlBoolean.Value" /> 的 <see cref="T:System.Data.SqlTypes.SqlBoolean" /> 将为 <see cref="F:System.Data.SqlTypes.SqlBoolean.Null" />。</returns>
    </member>
    <member name="M:System.Data.SqlTypes.SqlByte.op_Modulus(System.Data.SqlTypes.SqlByte,System.Data.SqlTypes.SqlByte)">
      <summary vsli:raw="Computes the remainder after dividing its first &lt;see cref=&quot;T:System.Data.SqlTypes.SqlByte&quot; /&gt; operand by its second.">计算将其第一个 <see cref="T:System.Data.SqlTypes.SqlByte" /> 操作数除以第二个操作数后所得的余数。</summary>
      <param name="x" vsli:raw="A &lt;see cref=&quot;T:System.Data.SqlTypes.SqlByte&quot; /&gt; structure.">
        <see cref="T:System.Data.SqlTypes.SqlByte" /> 结构。</param>
      <param name="y" vsli:raw="A &lt;see cref=&quot;T:System.Data.SqlTypes.SqlByte&quot; /&gt; structure.">
        <see cref="T:System.Data.SqlTypes.SqlByte" /> 结构。</param>
      <returns vsli:raw="A &lt;see cref=&quot;T:System.Data.SqlTypes.SqlByte&quot; /&gt; structure whose &lt;see cref=&quot;P:System.Data.SqlTypes.SqlByte.Value&quot; /&gt; contains the remainder.">一个 <see cref="T:System.Data.SqlTypes.SqlByte" /> 结构，它的 <see cref="P:System.Data.SqlTypes.SqlByte.Value" /> 包含该余数。</returns>
    </member>
    <member name="M:System.Data.SqlTypes.SqlByte.op_Multiply(System.Data.SqlTypes.SqlByte,System.Data.SqlTypes.SqlByte)">
      <summary vsli:raw="Computes the product of the two &lt;see cref=&quot;T:System.Data.SqlTypes.SqlByte&quot; /&gt; operands.">计算两个 <see cref="T:System.Data.SqlTypes.SqlByte" /> 操作数的乘积。</summary>
      <param name="x" vsli:raw="A &lt;see cref=&quot;T:System.Data.SqlTypes.SqlByte&quot; /&gt; structure.">
        <see cref="T:System.Data.SqlTypes.SqlByte" /> 结构。</param>
      <param name="y" vsli:raw="A &lt;see cref=&quot;T:System.Data.SqlTypes.SqlByte&quot; /&gt; structure.">
        <see cref="T:System.Data.SqlTypes.SqlByte" /> 结构。</param>
      <returns vsli:raw="A new &lt;see cref=&quot;T:System.Data.SqlTypes.SqlByte&quot; /&gt; structure whose &lt;see cref=&quot;P:System.Data.SqlTypes.SqlByte.Value&quot; /&gt; property contains the product of the multiplication.">一个新的 <see cref="T:System.Data.SqlTypes.SqlByte" /> 结构，它的 <see cref="P:System.Data.SqlTypes.SqlByte.Value" /> 属性包含该乘法运算的乘积。</returns>
    </member>
    <member name="M:System.Data.SqlTypes.SqlByte.op_OnesComplement(System.Data.SqlTypes.SqlByte)">
      <summary vsli:raw="The ones complement operator performs a bitwise one's complement operation on its &lt;see cref=&quot;T:System.Data.SqlTypes.SqlByte&quot; /&gt; operand.">二进制反码运算符对其 <see cref="T:System.Data.SqlTypes.SqlByte" /> 操作数执行按位二进制反码运算。</summary>
      <param name="x" vsli:raw="A &lt;see cref=&quot;T:System.Data.SqlTypes.SqlByte&quot; /&gt; structure.">
        <see cref="T:System.Data.SqlTypes.SqlByte" /> 结构。</param>
      <returns vsli:raw="A &lt;see cref=&quot;T:System.Data.SqlTypes.SqlByte&quot; /&gt; structure whose &lt;see cref=&quot;P:System.Data.SqlTypes.SqlByte.Value&quot; /&gt; property contains the ones complement of the &lt;see cref=&quot;T:System.Data.SqlTypes.SqlByte&quot; /&gt; parameter.">一个 <see cref="T:System.Data.SqlTypes.SqlByte" /> 结构，它的 <see cref="P:System.Data.SqlTypes.SqlByte.Value" /> 属性包含 <see cref="T:System.Data.SqlTypes.SqlByte" /> 参数的二进制反码。</returns>
    </member>
    <member name="M:System.Data.SqlTypes.SqlByte.op_Subtraction(System.Data.SqlTypes.SqlByte,System.Data.SqlTypes.SqlByte)">
      <summary vsli:raw="Subtracts the second &lt;see cref=&quot;T:System.Data.SqlTypes.SqlByte&quot; /&gt; operand from the first.">从第一个 <see cref="T:System.Data.SqlTypes.SqlByte" /> 操作数中减去第二个操作数。</summary>
      <param name="x" vsli:raw="A &lt;see cref=&quot;T:System.Data.SqlTypes.SqlByte&quot; /&gt; structure.">
        <see cref="T:System.Data.SqlTypes.SqlByte" /> 结构。</param>
      <param name="y" vsli:raw="A &lt;see cref=&quot;T:System.Data.SqlTypes.SqlByte&quot; /&gt; structure.">
        <see cref="T:System.Data.SqlTypes.SqlByte" /> 结构。</param>
      <returns vsli:raw="The results of subtracting the second &lt;see cref=&quot;T:System.Data.SqlTypes.SqlByte&quot; /&gt; operand from the first.">从第一个 <see cref="T:System.Data.SqlTypes.SqlByte" /> 操作数中减去第二个操作数所得的结果。</returns>
    </member>
    <member name="M:System.Data.SqlTypes.SqlByte.Parse(System.String)">
      <summary vsli:raw="Converts the &lt;see cref=&quot;T:System.String&quot; /&gt; representation of a number to its 8-bit unsigned integer equivalent.">将数字的 <see cref="T:System.String" /> 表示形式转换为它的等效 8 位无符号整数。</summary>
      <param name="s" vsli:raw="The &lt;see langword=&quot;String&quot; /&gt; to be parsed.">要分析的 <see langword="String" />。</param>
      <returns vsli:raw="A &lt;see cref=&quot;T:System.Data.SqlTypes.SqlByte&quot; /&gt; structure that contains the 8-bit number represented by the &lt;see langword=&quot;String&quot; /&gt; parameter.">一个 <see cref="T:System.Data.SqlTypes.SqlByte" /> 结构，包含 <see langword="String" /> 参数表示的 8 位数字。</returns>
    </member>
    <member name="M:System.Data.SqlTypes.SqlByte.Subtract(System.Data.SqlTypes.SqlByte,System.Data.SqlTypes.SqlByte)">
      <summary vsli:raw="Subtracts the second &lt;see cref=&quot;T:System.Data.SqlTypes.SqlByte&quot; /&gt; operand from the first.">从第一个 <see cref="T:System.Data.SqlTypes.SqlByte" /> 操作数中减去第二个操作数。</summary>
      <param name="x" vsli:raw="A &lt;see cref=&quot;T:System.Data.SqlTypes.SqlByte&quot; /&gt; structure.">
        <see cref="T:System.Data.SqlTypes.SqlByte" /> 结构。</param>
      <param name="y" vsli:raw="A &lt;see cref=&quot;T:System.Data.SqlTypes.SqlByte&quot; /&gt; structure.">
        <see cref="T:System.Data.SqlTypes.SqlByte" /> 结构。</param>
      <returns vsli:raw="The results of subtracting the second &lt;see cref=&quot;T:System.Data.SqlTypes.SqlByte&quot; /&gt; operand from the first.">从第一个 <see cref="T:System.Data.SqlTypes.SqlByte" /> 操作数中减去第二个操作数所得的结果。</returns>
    </member>
    <member name="M:System.Data.SqlTypes.SqlByte.System#Xml#Serialization#IXmlSerializable#GetSchema">
      <summary vsli:raw="This member supports the .NET Framework infrastructure and is not intended to be used directly from your code.">此成员支持 .NET Framework 结构，不能在代码中直接使用。</summary>
      <returns vsli:raw="An &lt;see langword=&quot;XmlSchema&quot; /&gt;.">
        <see langword="XmlSchema" />。</returns>
    </member>
    <member name="M:System.Data.SqlTypes.SqlByte.System#Xml#Serialization#IXmlSerializable#ReadXml(System.Xml.XmlReader)">
      <summary vsli:raw="This member supports the .NET Framework infrastructure and is not intended to be used directly from your code.">此成员支持 .NET Framework 结构，不能在代码中直接使用。</summary>
      <param name="reader" vsli:raw="&lt;see langword=&quot;XmlReader&quot; /&gt;">
        <see langword="XmlReader" />
      </param>
    </member>
    <member name="M:System.Data.SqlTypes.SqlByte.System#Xml#Serialization#IXmlSerializable#WriteXml(System.Xml.XmlWriter)">
      <summary vsli:raw="This member supports the .NET Framework infrastructure and is not intended to be used directly from your code.">此成员支持 .NET Framework 结构，不能在代码中直接使用。</summary>
      <param name="writer" vsli:raw="&lt;see langword=&quot;XmlWriter&quot; /&gt;">
        <see langword="XmlWriter" />
      </param>
    </member>
    <member name="M:System.Data.SqlTypes.SqlByte.ToSqlBoolean">
      <summary vsli:raw="Converts this &lt;see cref=&quot;T:System.Data.SqlTypes.SqlByte&quot; /&gt; structure to &lt;see cref=&quot;T:System.Data.SqlTypes.SqlBoolean&quot; /&gt;.">将此 <see cref="T:System.Data.SqlTypes.SqlByte" /> 结构转换为 <see cref="T:System.Data.SqlTypes.SqlBoolean" />。</summary>
      <returns vsli:raw="&lt;see langword=&quot;true&quot; /&gt; if the &lt;see cref=&quot;P:System.Data.SqlTypes.SqlByte.Value&quot; /&gt; is non-zero; &lt;see langword=&quot;false&quot; /&gt; if zero; otherwise Null.">如果 <see cref="P:System.Data.SqlTypes.SqlByte.Value" /> 不是零，则为 <see langword="true" />；如果为零，则为 <see langword="false" />；否则为 Null。</returns>
    </member>
    <member name="M:System.Data.SqlTypes.SqlByte.ToSqlDecimal">
      <summary vsli:raw="Converts this &lt;see cref=&quot;T:System.Data.SqlTypes.SqlByte&quot; /&gt; structure to &lt;see cref=&quot;T:System.Data.SqlTypes.SqlDecimal&quot; /&gt;.">将此 <see cref="T:System.Data.SqlTypes.SqlByte" /> 结构转换为 <see cref="T:System.Data.SqlTypes.SqlDecimal" />。</summary>
      <returns vsli:raw="A &lt;see langword=&quot;SqlDecimal&quot; /&gt; structure whose &lt;see cref=&quot;P:System.Data.SqlTypes.SqlDecimal.Value&quot; /&gt; equals the &lt;see cref=&quot;P:System.Data.SqlTypes.SqlByte.Value&quot; /&gt; of this &lt;see cref=&quot;T:System.Data.SqlTypes.SqlByte&quot; /&gt; structure.">一个 <see langword="SqlDecimal" /> 结构，其 <see cref="P:System.Data.SqlTypes.SqlDecimal.Value" /> 等于此 <see cref="T:System.Data.SqlTypes.SqlByte" /> 结构的 <see cref="P:System.Data.SqlTypes.SqlByte.Value" />。</returns>
    </member>
    <member name="M:System.Data.SqlTypes.SqlByte.ToSqlDouble">
      <summary vsli:raw="Converts this &lt;see cref=&quot;T:System.Data.SqlTypes.SqlByte&quot; /&gt; structure to &lt;see cref=&quot;T:System.Data.SqlTypes.SqlDouble&quot; /&gt;.">将此 <see cref="T:System.Data.SqlTypes.SqlByte" /> 结构转换为 <see cref="T:System.Data.SqlTypes.SqlDouble" />。</summary>
      <returns vsli:raw="A &lt;see langword=&quot;SqlDouble&quot; /&gt; structure with the same value as this &lt;see cref=&quot;T:System.Data.SqlTypes.SqlByte&quot; /&gt;.">与此 <see cref="T:System.Data.SqlTypes.SqlByte" /> 具有相同值的 <see langword="SqlDouble" /> 结构。</returns>
    </member>
    <member name="M:System.Data.SqlTypes.SqlByte.ToSqlInt16">
      <summary vsli:raw="Converts this &lt;see cref=&quot;T:System.Data.SqlTypes.SqlByte&quot; /&gt; structure to &lt;see cref=&quot;T:System.Data.SqlTypes.SqlInt16&quot; /&gt;.">将此 <see cref="T:System.Data.SqlTypes.SqlByte" /> 结构转换为 <see cref="T:System.Data.SqlTypes.SqlInt16" />。</summary>
      <returns vsli:raw="A &lt;see langword=&quot;SqlInt16&quot; /&gt; structure with the same value as this &lt;see cref=&quot;T:System.Data.SqlTypes.SqlByte&quot; /&gt;.">与此 <see cref="T:System.Data.SqlTypes.SqlByte" /> 具有相同值的 <see langword="SqlInt16" /> 结构。</returns>
    </member>
    <member name="M:System.Data.SqlTypes.SqlByte.ToSqlInt32">
      <summary vsli:raw="Converts this &lt;see cref=&quot;T:System.Data.SqlTypes.SqlByte&quot; /&gt; to &lt;see cref=&quot;T:System.Data.SqlTypes.SqlInt32&quot; /&gt;.">将此 <see cref="T:System.Data.SqlTypes.SqlByte" /> 转换为 <see cref="T:System.Data.SqlTypes.SqlInt32" />。</summary>
      <returns vsli:raw="A &lt;see langword=&quot;SqlInt32&quot; /&gt; structure with the same value as this &lt;see cref=&quot;T:System.Data.SqlTypes.SqlByte&quot; /&gt;.">与此 <see cref="T:System.Data.SqlTypes.SqlByte" /> 具有相同值的 <see langword="SqlInt32" /> 结构。</returns>
    </member>
    <member name="M:System.Data.SqlTypes.SqlByte.ToSqlInt64">
      <summary vsli:raw="Converts this &lt;see cref=&quot;T:System.Data.SqlTypes.SqlByte&quot; /&gt; structure to &lt;see cref=&quot;T:System.Data.SqlTypes.SqlInt64&quot; /&gt;.">将此 <see cref="T:System.Data.SqlTypes.SqlByte" /> 结构转换为 <see cref="T:System.Data.SqlTypes.SqlInt64" />。</summary>
      <returns vsli:raw="A &lt;see langword=&quot;SqlInt64&quot; /&gt; structure who &lt;see cref=&quot;P:System.Data.SqlTypes.SqlInt64.Value&quot; /&gt; equals the &lt;see cref=&quot;P:System.Data.SqlTypes.SqlByte.Value&quot; /&gt; of this &lt;see cref=&quot;T:System.Data.SqlTypes.SqlByte&quot; /&gt;.">一个 <see langword="SqlInt64" /> 结构，它的 <see cref="P:System.Data.SqlTypes.SqlInt64.Value" /> 等于此 <see cref="P:System.Data.SqlTypes.SqlByte.Value" /> 结构的 <see cref="T:System.Data.SqlTypes.SqlByte" />。</returns>
    </member>
    <member name="M:System.Data.SqlTypes.SqlByte.ToSqlMoney">
      <summary vsli:raw="Converts this &lt;see cref=&quot;T:System.Data.SqlTypes.SqlByte&quot; /&gt; structure to &lt;see cref=&quot;T:System.Data.SqlTypes.SqlMoney&quot; /&gt;.">将此 <see cref="T:System.Data.SqlTypes.SqlByte" /> 结构转换为 <see cref="T:System.Data.SqlTypes.SqlMoney" />。</summary>
      <returns vsli:raw="A &lt;see langword=&quot;SqlMoney&quot; /&gt; structure whose &lt;see cref=&quot;P:System.Data.SqlTypes.SqlMoney.Value&quot; /&gt; equals the &lt;see cref=&quot;P:System.Data.SqlTypes.SqlByte.Value&quot; /&gt; of this &lt;see cref=&quot;T:System.Data.SqlTypes.SqlByte&quot; /&gt; structure.">一个 <see langword="SqlMoney" /> 结构，其 <see cref="P:System.Data.SqlTypes.SqlMoney.Value" /> 等于此 <see cref="T:System.Data.SqlTypes.SqlByte" /> 结构的 <see cref="P:System.Data.SqlTypes.SqlByte.Value" />。</returns>
    </member>
    <member name="M:System.Data.SqlTypes.SqlByte.ToSqlSingle">
      <summary vsli:raw="Converts this &lt;see cref=&quot;T:System.Data.SqlTypes.SqlByte&quot; /&gt; structure to &lt;see cref=&quot;T:System.Data.SqlTypes.SqlSingle&quot; /&gt;.">将此 <see cref="T:System.Data.SqlTypes.SqlByte" /> 结构转换为 <see cref="T:System.Data.SqlTypes.SqlSingle" />。</summary>
      <returns vsli:raw="A &lt;see langword=&quot;SqlSingle&quot; /&gt; structure that has the same &lt;see cref=&quot;P:System.Data.SqlTypes.SqlSingle.Value&quot; /&gt; as this &lt;see cref=&quot;T:System.Data.SqlTypes.SqlByte&quot; /&gt; structure.">一个 <see langword="SqlSingle" /> 结构，它与此 <see cref="P:System.Data.SqlTypes.SqlSingle.Value" /> 结构具有相同的 <see cref="T:System.Data.SqlTypes.SqlByte" />。</returns>
    </member>
    <member name="M:System.Data.SqlTypes.SqlByte.ToSqlString">
      <summary vsli:raw="Converts this instance of &lt;see cref=&quot;T:System.Data.SqlTypes.SqlByte&quot; /&gt; to &lt;see cref=&quot;T:System.Data.SqlTypes.SqlString&quot; /&gt;.">将 <see cref="T:System.Data.SqlTypes.SqlByte" /> 的此实例转换为 <see cref="T:System.Data.SqlTypes.SqlString" />。</summary>
      <returns vsli:raw="A &lt;see langword=&quot;SqlString&quot; /&gt; that contains the string representation of the &lt;see cref=&quot;T:System.Data.SqlTypes.SqlByte&quot; /&gt; structure's &lt;see cref=&quot;P:System.Data.SqlTypes.SqlByte.Value&quot; /&gt;.">一个 <see langword="SqlString" />，包含 <see cref="T:System.Data.SqlTypes.SqlByte" /> 结构的 <see cref="P:System.Data.SqlTypes.SqlByte.Value" /> 的字符串表示形式。</returns>
    </member>
    <member name="M:System.Data.SqlTypes.SqlByte.ToString">
      <summary vsli:raw="Converts this &lt;see cref=&quot;T:System.Data.SqlTypes.SqlByte&quot; /&gt; structure to a &lt;see cref=&quot;T:System.String&quot; /&gt;.">将此 <see cref="T:System.Data.SqlTypes.SqlByte" /> 结构转换为 <see cref="T:System.String" />。</summary>
      <returns vsli:raw="A string that contains the &lt;see cref=&quot;P:System.Data.SqlTypes.SqlByte.Value&quot; /&gt; of the &lt;see cref=&quot;T:System.Data.SqlTypes.SqlByte&quot; /&gt;. If the &lt;see langword=&quot;Value&quot; /&gt; is null, the &lt;see langword=&quot;String&quot; /&gt; will be a null string.">一个包含 <see cref="P:System.Data.SqlTypes.SqlByte.Value" /> 的 <see cref="T:System.Data.SqlTypes.SqlByte" /> 的字符串。 如果 <see langword="Value" /> 为空，<see langword="String" /> 将为空字符串。</returns>
    </member>
    <member name="M:System.Data.SqlTypes.SqlByte.Xor(System.Data.SqlTypes.SqlByte,System.Data.SqlTypes.SqlByte)">
      <summary vsli:raw="Performs a bitwise exclusive-OR operation on the supplied parameters.">对提供的参数执行按位“异或”运算。</summary>
      <param name="x" vsli:raw="A &lt;see cref=&quot;T:System.Data.SqlTypes.SqlByte&quot; /&gt; structure.">
        <see cref="T:System.Data.SqlTypes.SqlByte" /> 结构。</param>
      <param name="y" vsli:raw="A &lt;see cref=&quot;T:System.Data.SqlTypes.SqlByte&quot; /&gt; structure.">
        <see cref="T:System.Data.SqlTypes.SqlByte" /> 结构。</param>
      <returns vsli:raw="The results of the XOR operation.">该 XOR 运算的结果。</returns>
    </member>
    <member name="P:System.Data.SqlTypes.SqlByte.IsNull">
      <summary vsli:raw="Gets a Boolean value that indicates whether this &lt;see cref=&quot;T:System.Data.SqlTypes.SqlByte&quot; /&gt; structure is null.">获取一个布尔值，该值指示此 <see cref="T:System.Data.SqlTypes.SqlByte" /> 结构是否为 null。</summary>
      <returns vsli:raw="&lt;see langword=&quot;true&quot; /&gt; if null. Otherwise, &lt;see langword=&quot;false&quot; /&gt;.">如果为 null，则返回 <see langword="true" />。 否则为 <see langword="false" />。</returns>
    </member>
    <member name="P:System.Data.SqlTypes.SqlByte.Value">
      <summary vsli:raw="Gets the value of the &lt;see cref=&quot;T:System.Data.SqlTypes.SqlByte&quot; /&gt; structure. This property is read-only.">获取 <see cref="T:System.Data.SqlTypes.SqlByte" /> 结构的值。 此属性是只读的。</summary>
      <returns vsli:raw="The value of the &lt;see cref=&quot;T:System.Data.SqlTypes.SqlByte&quot; /&gt; structure.">
        <see cref="T:System.Data.SqlTypes.SqlByte" /> 结构的值。</returns>
    </member>
    <member name="T:System.Data.SqlTypes.SqlBytes">
      <summary vsli:raw="Represents a mutable reference type that wraps either a &lt;see cref=&quot;P:System.Data.SqlTypes.SqlBytes.Buffer&quot; /&gt; or a &lt;see cref=&quot;P:System.Data.SqlTypes.SqlBytes.Stream&quot; /&gt;.">表示包装 <see cref="P:System.Data.SqlTypes.SqlBytes.Buffer" /> 或 <see cref="P:System.Data.SqlTypes.SqlBytes.Stream" /> 的可变引用类型。</summary>
    </member>
    <member name="M:System.Data.SqlTypes.SqlBytes.#ctor">
      <summary vsli:raw="Initializes a new instance of the &lt;see cref=&quot;T:System.Data.SqlTypes.SqlBytes&quot; /&gt; class.">初始化 <see cref="T:System.Data.SqlTypes.SqlBytes" /> 类的新实例。</summary>
    </member>
    <member name="M:System.Data.SqlTypes.SqlBytes.#ctor(System.Byte[])">
      <summary vsli:raw="Initializes a new instance of the &lt;see cref=&quot;T:System.Data.SqlTypes.SqlBytes&quot; /&gt; class based on the specified byte array.">根据指定的字节数组初始化 <see cref="T:System.Data.SqlTypes.SqlBytes" /> 类的新实例。</summary>
      <param name="buffer" vsli:raw="The array of unsigned bytes.">无符号字节的数组。</param>
    </member>
    <member name="M:System.Data.SqlTypes.SqlBytes.#ctor(System.Data.SqlTypes.SqlBinary)">
      <summary vsli:raw="Initializes a new instance of the &lt;see cref=&quot;T:System.Data.SqlTypes.SqlBytes&quot; /&gt; class based on the specified &lt;see cref=&quot;T:System.Data.SqlTypes.SqlBinary&quot; /&gt; value.">根据指定的 <see cref="T:System.Data.SqlTypes.SqlBytes" /> 值初始化 <see cref="T:System.Data.SqlTypes.SqlBinary" /> 类的新实例。</summary>
      <param name="value" vsli:raw="A &lt;see cref=&quot;T:System.Data.SqlTypes.SqlBinary&quot; /&gt; value.">一个 <see cref="T:System.Data.SqlTypes.SqlBinary" /> 值。</param>
    </member>
    <member name="M:System.Data.SqlTypes.SqlBytes.#ctor(System.IO.Stream)">
      <summary vsli:raw="Initializes a new instance of the &lt;see cref=&quot;T:System.Data.SqlTypes.SqlBytes&quot; /&gt; class based on the specified &lt;see cref=&quot;T:System.IO.Stream&quot; /&gt; value.">根据指定的 <see cref="T:System.Data.SqlTypes.SqlBytes" /> 值初始化 <see cref="T:System.IO.Stream" /> 类的新实例。</summary>
      <param name="s" vsli:raw="A &lt;see cref=&quot;T:System.IO.Stream&quot; /&gt;.">
        <see cref="T:System.IO.Stream" />。</param>
    </member>
    <member name="M:System.Data.SqlTypes.SqlBytes.GetXsdType(System.Xml.Schema.XmlSchemaSet)">
      <summary vsli:raw="Returns the XML Schema definition language (XSD) of the specified &lt;see cref=&quot;T:System.Xml.Schema.XmlSchemaSet&quot; /&gt;.">返回指定的 <see cref="T:System.Xml.Schema.XmlSchemaSet" /> 的 XML 架构定义语言 (XSD)。</summary>
      <param name="schemaSet" vsli:raw="A &lt;see cref=&quot;T:System.Xml.Schema.XmlSchemaSet&quot; /&gt;.">
        <see cref="T:System.Xml.Schema.XmlSchemaSet" />。</param>
      <returns vsli:raw="A &lt;see langword=&quot;string&quot; /&gt; that indicates the XSD of the specified &lt;see langword=&quot;XmlSchemaSet&quot; /&gt;.">一个指示指定的 <see langword="XmlSchemaSet" /> 的 XSD 的 <see langword="string" />。</returns>
    </member>
    <member name="M:System.Data.SqlTypes.SqlBytes.op_Explicit(System.Data.SqlTypes.SqlBinary)~System.Data.SqlTypes.SqlBytes">
      <summary vsli:raw="Converts a &lt;see cref=&quot;T:System.Data.SqlTypes.SqlBinary&quot; /&gt; structure to a &lt;see cref=&quot;T:System.Data.SqlTypes.SqlBytes&quot; /&gt; structure.">将 <see cref="T:System.Data.SqlTypes.SqlBinary" /> 结构转换为 <see cref="T:System.Data.SqlTypes.SqlBytes" /> 结构。</summary>
      <param name="value" vsli:raw="The &lt;see cref=&quot;T:System.Data.SqlTypes.SqlBinary&quot; /&gt; structure to be converted.">要转换的 <see cref="T:System.Data.SqlTypes.SqlBinary" /> 结构。</param>
      <returns vsli:raw="A &lt;see cref=&quot;T:System.Data.SqlTypes.SqlBytes&quot; /&gt; structure.">
        <see cref="T:System.Data.SqlTypes.SqlBytes" /> 结构。</returns>
    </member>
    <member name="M:System.Data.SqlTypes.SqlBytes.op_Explicit(System.Data.SqlTypes.SqlBytes)~System.Data.SqlTypes.SqlBinary">
      <summary vsli:raw="Converts a &lt;see cref=&quot;T:System.Data.SqlTypes.SqlBytes&quot; /&gt; structure to a &lt;see cref=&quot;T:System.Data.SqlTypes.SqlBinary&quot; /&gt; structure.">将 <see cref="T:System.Data.SqlTypes.SqlBytes" /> 结构转换为 <see cref="T:System.Data.SqlTypes.SqlBinary" /> 结构。</summary>
      <param name="value" vsli:raw="The &lt;see cref=&quot;T:System.Data.SqlTypes.SqlBytes&quot; /&gt; structure to be converted.">要转换的 <see cref="T:System.Data.SqlTypes.SqlBytes" /> 结构。</param>
      <returns vsli:raw="A &lt;see cref=&quot;T:System.Data.SqlTypes.SqlBinary&quot; /&gt; structure.">
        <see cref="T:System.Data.SqlTypes.SqlBinary" /> 结构。</returns>
    </member>
    <member name="M:System.Data.SqlTypes.SqlBytes.Read(System.Int64,System.Byte[],System.Int32,System.Int32)">
      <summary vsli:raw="Copies bytes from this &lt;see cref=&quot;T:System.Data.SqlTypes.SqlBytes&quot; /&gt; instance to the passed-in buffer and returns the number of copied bytes.">将此 <see cref="T:System.Data.SqlTypes.SqlBytes" /> 实例中的字节复制到传入缓冲区中并返回复制的字节数。</summary>
      <param name="offset" vsli:raw="An &lt;see cref=&quot;T:System.Int64&quot; /&gt; long value offset into the value that is contained in the &lt;see cref=&quot;T:System.Data.SqlTypes.SqlBytes&quot; /&gt; instance.">
        <see cref="T:System.Int64" /> 实例中包含的值的 <see cref="T:System.Data.SqlTypes.SqlBytes" /> 长值偏移量。</param>
      <param name="buffer" vsli:raw="The byte array buffer to copy into.">要在其中执行“复制到”操作的字节数组缓冲区。</param>
      <param name="offsetInBuffer" vsli:raw="An &lt;see cref=&quot;T:System.Int32&quot; /&gt; integer offset into the buffer to start copying into.">缓冲区中的一个 <see cref="T:System.Int32" /> 整数偏移量，以启动“复制到”操作。</param>
      <param name="count" vsli:raw="An &lt;see cref=&quot;T:System.Int32&quot; /&gt; integer representing the number of bytes to copy.">一个 <see cref="T:System.Int32" /> 整数，表示要复制的字节数。</param>
      <returns vsli:raw="An &lt;see cref=&quot;T:System.Int64&quot; /&gt; long value representing the number of copied bytes.">一个 <see cref="T:System.Int64" /> 长值，表示已复制的字节数。</returns>
    </member>
    <member name="M:System.Data.SqlTypes.SqlBytes.SetLength(System.Int64)">
      <summary vsli:raw="Sets the length of this &lt;see cref=&quot;T:System.Data.SqlTypes.SqlBytes&quot; /&gt; instance.">设置此 <see cref="T:System.Data.SqlTypes.SqlBytes" /> 实例的长度。</summary>
      <param name="value" vsli:raw="The &lt;see cref=&quot;T:System.Int64&quot; /&gt; long value representing the length.">表示长度的 <see cref="T:System.Int64" /> 长值。</param>
    </member>
    <member name="M:System.Data.SqlTypes.SqlBytes.SetNull">
      <summary vsli:raw="Sets this &lt;see cref=&quot;T:System.Data.SqlTypes.SqlBytes&quot; /&gt; instance to null.">将此 <see cref="T:System.Data.SqlTypes.SqlBytes" /> 实例设置为 null。</summary>
    </member>
    <member name="M:System.Data.SqlTypes.SqlBytes.System#Runtime#Serialization#ISerializable#GetObjectData(System.Runtime.Serialization.SerializationInfo,System.Runtime.Serialization.StreamingContext)">
      <summary vsli:raw="Gets serialization information with all the data needed to reinstantiate this &lt;see cref=&quot;T:System.Data.SqlTypes.SqlBytes&quot; /&gt; instance.">获取序列化信息以及包含重新实例化此 <see cref="T:System.Data.SqlTypes.SqlBytes" /> 实例所需的所有数据。</summary>
      <param name="info" vsli:raw="The object to be populated with serialization information.">用序列化信息填充的对象。</param>
      <param name="context" vsli:raw="The destination context of the serialization.">序列化的目标上下文。</param>
    </member>
    <member name="M:System.Data.SqlTypes.SqlBytes.System#Xml#Serialization#IXmlSerializable#GetSchema">
      <summary vsli:raw="This member supports the .NET Framework infrastructure and is not intended to be used directly from your code.">此成员支持 .NET Framework 结构，不能在代码中直接使用。</summary>
      <returns vsli:raw="This member supports the .NET Framework infrastructure and is not intended to be used directly from your code.">此成员支持 .NET Framework 结构，不能在代码中直接使用。</returns>
    </member>
    <member name="M:System.Data.SqlTypes.SqlBytes.System#Xml#Serialization#IXmlSerializable#ReadXml(System.Xml.XmlReader)">
      <summary vsli:raw="This member supports the .NET Framework infrastructure and is not intended to be used directly from your code.">此成员支持 .NET Framework 结构，不能在代码中直接使用。</summary>
      <param name="r" vsli:raw="&lt;see langword=&quot;XmlReader&quot; /&gt;">
        <see langword="XmlReader" />
      </param>
    </member>
    <member name="M:System.Data.SqlTypes.SqlBytes.System#Xml#Serialization#IXmlSerializable#WriteXml(System.Xml.XmlWriter)">
      <summary vsli:raw="This member supports the .NET Framework infrastructure and is not intended to be used directly from your code.">此成员支持 .NET Framework 结构，不能在代码中直接使用。</summary>
      <param name="writer" vsli:raw="&lt;see langword=&quot;XmlWriter&quot; /&gt;">
        <see langword="XmlWriter" />
      </param>
    </member>
    <member name="M:System.Data.SqlTypes.SqlBytes.ToSqlBinary">
      <summary vsli:raw="Constructs and returns a &lt;see cref=&quot;T:System.Data.SqlTypes.SqlBinary&quot; /&gt; from this &lt;see cref=&quot;T:System.Data.SqlTypes.SqlBytes&quot; /&gt; instance.">从此 <see cref="T:System.Data.SqlTypes.SqlBinary" /> 实例构造和返回一个 <see cref="T:System.Data.SqlTypes.SqlBytes" />。</summary>
      <returns vsli:raw="A &lt;see cref=&quot;T:System.Data.SqlTypes.SqlBinary&quot; /&gt; from this instance.">来自此实例的 <see cref="T:System.Data.SqlTypes.SqlBinary" />。</returns>
    </member>
    <member name="M:System.Data.SqlTypes.SqlBytes.Write(System.Int64,System.Byte[],System.Int32,System.Int32)">
      <summary vsli:raw="Copies bytes from the passed-in buffer to this &lt;see cref=&quot;T:System.Data.SqlTypes.SqlBytes&quot; /&gt; instance.">将传入缓冲区中的字节复制到此 <see cref="T:System.Data.SqlTypes.SqlBytes" /> 实例中。</summary>
      <param name="offset" vsli:raw="An &lt;see cref=&quot;T:System.Int64&quot; /&gt; long value offset into the value that is contained in the &lt;see cref=&quot;T:System.Data.SqlTypes.SqlBytes&quot; /&gt; instance.">
        <see cref="T:System.Int64" /> 实例中包含的值的 <see cref="T:System.Data.SqlTypes.SqlBytes" /> 长值偏移量。</param>
      <param name="buffer" vsli:raw="The byte array buffer to copy into.">要在其中执行“复制到”操作的字节数组缓冲区。</param>
      <param name="offsetInBuffer" vsli:raw="An &lt;see cref=&quot;T:System.Int32&quot; /&gt; integer offset into the buffer to start copying into.">缓冲区中的一个 <see cref="T:System.Int32" /> 整数偏移量，以启动“复制到”操作。</param>
      <param name="count" vsli:raw="An &lt;see cref=&quot;T:System.Int32&quot; /&gt; integer representing the number of bytes to copy.">一个 <see cref="T:System.Int32" /> 整数，表示要复制的字节数。</param>
    </member>
    <member name="P:System.Data.SqlTypes.SqlBytes.Buffer">
      <summary vsli:raw="Returns a reference to the internal buffer.">返回一个对内部缓冲区的引用。</summary>
      <returns vsli:raw="A reference to the internal buffer. For &lt;see cref=&quot;T:System.Data.SqlTypes.SqlBytes&quot; /&gt; instances created on top of unmanaged pointers, it returns a managed copy of the internal buffer.">对内部缓冲区的引用。 对于在非托管指针上创建的 <see cref="T:System.Data.SqlTypes.SqlBytes" /> 实例，将返回内部缓冲区的托管副本。</returns>
    </member>
    <member name="P:System.Data.SqlTypes.SqlBytes.IsNull">
      <summary vsli:raw="Gets a Boolean value that indicates whether this &lt;see cref=&quot;T:System.Data.SqlTypes.SqlBytes&quot; /&gt; is null.">获取一个布尔值，该值指示此 <see cref="T:System.Data.SqlTypes.SqlBytes" /> 是否为 null。</summary>
      <returns vsli:raw="&lt;see langword=&quot;true&quot; /&gt; if the &lt;see cref=&quot;T:System.Data.SqlTypes.SqlBytes&quot; /&gt; is null, &lt;see langword=&quot;false&quot; /&gt; otherwise.">如果 <see cref="T:System.Data.SqlTypes.SqlBytes" /> 为 null，则为 <see langword="true" />；否则为 <see langword="false" />。</returns>
    </member>
    <member name="P:System.Data.SqlTypes.SqlBytes.Item(System.Int64)">
      <summary vsli:raw="Gets or sets the &lt;see cref=&quot;T:System.Data.SqlTypes.SqlBytes&quot; /&gt; instance at the specified index.">获取或设置指定索引处的 <see cref="T:System.Data.SqlTypes.SqlBytes" /> 实例。</summary>
      <param name="offset" vsli:raw="A &lt;see cref=&quot;T:System.Int64&quot; /&gt; value.">一个 <see cref="T:System.Int64" /> 值。</param>
      <returns vsli:raw="A &lt;see cref=&quot;T:System.Byte&quot; /&gt; value.">一个 <see cref="T:System.Byte" /> 值。</returns>
    </member>
    <member name="P:System.Data.SqlTypes.SqlBytes.Length">
      <summary vsli:raw="Gets the length of the value that is contained in the &lt;see cref=&quot;T:System.Data.SqlTypes.SqlBytes&quot; /&gt; instance.">获取 <see cref="T:System.Data.SqlTypes.SqlBytes" /> 实例中包含的值的长度。</summary>
      <returns vsli:raw="A &lt;see cref=&quot;T:System.Int64&quot; /&gt; value representing the length of the value that is contained in the &lt;see cref=&quot;T:System.Data.SqlTypes.SqlBytes&quot; /&gt; instance.  &#xA;  &#xA; Returns -1 if no buffer is available to the instance or if the value is null.  &#xA;  &#xA; Returns a &lt;see cref=&quot;P:System.IO.Stream.Length&quot; /&gt; for a stream-wrapped instance.">一个 <see cref="T:System.Int64" /> 值，表示 <see cref="T:System.Data.SqlTypes.SqlBytes" /> 实例中包含的值的长度。  
  
如果没有可由实例使用的缓冲区，或者如果该值为 null，则返回 -1。  
  
返回流包装实例的 <see cref="P:System.IO.Stream.Length" />。</returns>
    </member>
    <member name="P:System.Data.SqlTypes.SqlBytes.MaxLength">
      <summary vsli:raw="Gets the maximum length of the value of the internal buffer of this &lt;see cref=&quot;T:System.Data.SqlTypes.SqlBytes&quot; /&gt;.">获取此 <see cref="T:System.Data.SqlTypes.SqlBytes" /> 的内部缓冲区的值的最大长度。</summary>
      <returns vsli:raw="A long representing the maximum length of the value of the internal buffer. Returns -1 for a stream-wrapped &lt;see cref=&quot;T:System.Data.SqlTypes.SqlBytes&quot; /&gt;.">一个长值，表示内部缓冲区的值的最大长度。 对于流包装的 <see cref="T:System.Data.SqlTypes.SqlBytes" />，将返回 -1。</returns>
    </member>
    <member name="P:System.Data.SqlTypes.SqlBytes.Null">
      <summary vsli:raw="Gets a null instance of this &lt;see cref=&quot;T:System.Data.SqlTypes.SqlBytes&quot; /&gt;.">获取此 <see cref="T:System.Data.SqlTypes.SqlBytes" /> 的 null 实例。</summary>
      <returns vsli:raw="An instance whose &lt;see cref=&quot;P:System.Data.SqlTypes.SqlBytes.IsNull&quot; /&gt; property returns &lt;see langword=&quot;true&quot; /&gt;.">其 <see cref="P:System.Data.SqlTypes.SqlBytes.IsNull" /> 属性返回的实例 <see langword="true" /> 。</returns>
    </member>
    <member name="P:System.Data.SqlTypes.SqlBytes.Storage">
      <summary vsli:raw="Returns information about the storage state of this &lt;see cref=&quot;T:System.Data.SqlTypes.SqlBytes&quot; /&gt; instance.">返回有关此 <see cref="T:System.Data.SqlTypes.SqlBytes" /> 实例的存储状态的信息。</summary>
      <returns vsli:raw="A &lt;see cref=&quot;T:System.Data.SqlTypes.StorageState&quot; /&gt; enumeration.">一个 <see cref="T:System.Data.SqlTypes.StorageState" /> 枚举。</returns>
    </member>
    <member name="P:System.Data.SqlTypes.SqlBytes.Stream">
      <summary vsli:raw="Gets or sets the data of this &lt;see cref=&quot;T:System.Data.SqlTypes.SqlBytes&quot; /&gt; as a stream.">将此 <see cref="T:System.Data.SqlTypes.SqlBytes" /> 的数据作为流进行获取或设置。</summary>
      <returns vsli:raw="The stream that contains the SqlBytes data.">包含 SqlBytes 数据的流。</returns>
    </member>
    <member name="P:System.Data.SqlTypes.SqlBytes.Value">
      <summary vsli:raw="Returns a managed copy of the value held by this &lt;see cref=&quot;T:System.Data.SqlTypes.SqlBytes&quot; /&gt;.">返回此 <see cref="T:System.Data.SqlTypes.SqlBytes" /> 保存的值的托管副本。</summary>
      <returns vsli:raw="The value of this &lt;see cref=&quot;T:System.Data.SqlTypes.SqlBytes&quot; /&gt; as an array of bytes.">此 <see cref="T:System.Data.SqlTypes.SqlBytes" /> 的值，为字节数组。</returns>
    </member>
    <member name="T:System.Data.SqlTypes.SqlChars">
      <summary vsli:raw="&lt;see cref=&quot;T:System.Data.SqlTypes.SqlChars&quot; /&gt; is a mutable reference type that wraps a &lt;see cref=&quot;T:System.Char&quot; /&gt; array or a &lt;see cref=&quot;T:System.Data.SqlTypes.SqlString&quot; /&gt; instance.">
        <see cref="T:System.Data.SqlTypes.SqlChars" /> 是一个可变引用类型，可包装 <see cref="T:System.Char" /> 数组或 <see cref="T:System.Data.SqlTypes.SqlString" /> 实例。</summary>
    </member>
    <member name="M:System.Data.SqlTypes.SqlChars.#ctor">
      <summary vsli:raw="Initializes a new instance of the &lt;see cref=&quot;T:System.Data.SqlTypes.SqlChars&quot; /&gt; class.">初始化 <see cref="T:System.Data.SqlTypes.SqlChars" /> 类的新实例。</summary>
    </member>
    <member name="M:System.Data.SqlTypes.SqlChars.#ctor(System.Char[])">
      <summary vsli:raw="Initializes a new instance of the &lt;see cref=&quot;T:System.Data.SqlTypes.SqlChars&quot; /&gt; class based on the specified character array.">根据指定的字符数组初始化 <see cref="T:System.Data.SqlTypes.SqlChars" /> 类的新实例。</summary>
      <param name="buffer" vsli:raw="A &lt;see cref=&quot;T:System.Char&quot; /&gt; array.">
        <see cref="T:System.Char" /> 数组。</param>
    </member>
    <member name="M:System.Data.SqlTypes.SqlChars.#ctor(System.Data.SqlTypes.SqlString)">
      <summary vsli:raw="Initializes a new instance of the &lt;see cref=&quot;T:System.Data.SqlTypes.SqlChars&quot; /&gt; class based on the specified &lt;see cref=&quot;T:System.Data.SqlTypes.SqlString&quot; /&gt; value.">根据指定的 <see cref="T:System.Data.SqlTypes.SqlChars" /> 值初始化 <see cref="T:System.Data.SqlTypes.SqlString" /> 类的新实例。</summary>
      <param name="value" vsli:raw="A &lt;see cref=&quot;T:System.Data.SqlTypes.SqlString&quot; /&gt;.">
        <see cref="T:System.Data.SqlTypes.SqlString" />。</param>
    </member>
    <member name="M:System.Data.SqlTypes.SqlChars.GetXsdType(System.Xml.Schema.XmlSchemaSet)">
      <summary vsli:raw="Returns the XML Schema definition language (XSD) of the specified &lt;see cref=&quot;T:System.Xml.Schema.XmlSchemaSet&quot; /&gt;.">返回指定的 <see cref="T:System.Xml.Schema.XmlSchemaSet" /> 的 XML 架构定义语言 (XSD)。</summary>
      <param name="schemaSet" vsli:raw="A &lt;see cref=&quot;T:System.Xml.Schema.XmlSchemaSet&quot; /&gt;.">
        <see cref="T:System.Xml.Schema.XmlSchemaSet" />。</param>
      <returns vsli:raw="A &lt;see langword=&quot;string&quot; /&gt; value that indicates the XSD of the specified &lt;see cref=&quot;T:System.Xml.Schema.XmlSchemaSet&quot; /&gt;.">指示指定的 <see cref="T:System.Xml.Schema.XmlSchemaSet" /> 的 XSD 的 <see langword="string" /> 值。</returns>
    </member>
    <member name="M:System.Data.SqlTypes.SqlChars.op_Explicit(System.Data.SqlTypes.SqlChars)~System.Data.SqlTypes.SqlString">
      <summary vsli:raw="Converts a &lt;see cref=&quot;T:System.Data.SqlTypes.SqlChars&quot; /&gt; structure to a &lt;see cref=&quot;T:System.Data.SqlTypes.SqlString&quot; /&gt; structure.">将 <see cref="T:System.Data.SqlTypes.SqlChars" /> 结构转换为 <see cref="T:System.Data.SqlTypes.SqlString" /> 结构。</summary>
      <param name="value" vsli:raw="The &lt;see cref=&quot;T:System.Data.SqlTypes.SqlChars&quot; /&gt; structure to be converted.">要转换的 <see cref="T:System.Data.SqlTypes.SqlChars" /> 结构。</param>
      <returns vsli:raw="A &lt;see cref=&quot;T:System.Data.SqlTypes.SqlString&quot; /&gt; structure.">
        <see cref="T:System.Data.SqlTypes.SqlString" /> 结构。</returns>
    </member>
    <member name="M:System.Data.SqlTypes.SqlChars.op_Explicit(System.Data.SqlTypes.SqlString)~System.Data.SqlTypes.SqlChars">
      <summary vsli:raw="Converts a &lt;see cref=&quot;T:System.Data.SqlTypes.SqlString&quot; /&gt; structure to a &lt;see cref=&quot;T:System.Data.SqlTypes.SqlChars&quot; /&gt; structure.">将 <see cref="T:System.Data.SqlTypes.SqlString" /> 结构转换为 <see cref="T:System.Data.SqlTypes.SqlChars" /> 结构。</summary>
      <param name="value" vsli:raw="The &lt;see cref=&quot;T:System.Data.SqlTypes.SqlString&quot; /&gt; structure to be converted.">要转换的 <see cref="T:System.Data.SqlTypes.SqlString" /> 结构。</param>
      <returns vsli:raw="A &lt;see cref=&quot;T:System.Data.SqlTypes.SqlChars&quot; /&gt; structure.">
        <see cref="T:System.Data.SqlTypes.SqlChars" /> 结构。</returns>
    </member>
    <member name="M:System.Data.SqlTypes.SqlChars.Read(System.Int64,System.Char[],System.Int32,System.Int32)">
      <summary vsli:raw="Copies characters from this &lt;see cref=&quot;T:System.Data.SqlTypes.SqlChars&quot; /&gt; instance to the passed-in buffer and returns the number of copied characters.">将此 <see cref="T:System.Data.SqlTypes.SqlChars" /> 实例中的字符复制到传入缓冲区中，并返回复制的字符数。</summary>
      <param name="offset" vsli:raw="An &lt;see cref=&quot;T:System.Int64&quot; /&gt;&lt;see langword=&quot;long&quot; /&gt; value offset into the value that is contained in the &lt;see cref=&quot;T:System.Data.SqlTypes.SqlChars&quot; /&gt; instance.">
        <see cref="T:System.Data.SqlTypes.SqlChars" /> 实例中所含值的 <see cref="T:System.Int64" /><see langword="long" /> 值偏移量。</param>
      <param name="buffer" vsli:raw="The character array buffer to copy into.">向其复制的字符数组缓冲区。</param>
      <param name="offsetInBuffer" vsli:raw="An &lt;see cref=&quot;T:System.Int32&quot; /&gt; integer offset into the buffer to start copying into.">缓冲区中的一个 <see cref="T:System.Int32" /> 整数偏移量，以启动“复制到”操作。</param>
      <param name="count" vsli:raw="An &lt;see cref=&quot;T:System.Int32&quot; /&gt; integer value representing the number of characters to copy.">一个 <see cref="T:System.Int32" /> 整数值，表示要复制的字符数。</param>
      <returns vsli:raw="An &lt;see cref=&quot;T:System.Int64&quot; /&gt;&lt;see langword=&quot;long&quot; /&gt; value representing the number of copied bytes.">表示已复制字节数的 <see cref="T:System.Int64" /><see langword="long" /> 值。</returns>
    </member>
    <member name="M:System.Data.SqlTypes.SqlChars.SetLength(System.Int64)">
      <summary vsli:raw="Sets the length of this &lt;see cref=&quot;T:System.Data.SqlTypes.SqlChars&quot; /&gt; instance.">设置此 <see cref="T:System.Data.SqlTypes.SqlChars" /> 实例的长度。</summary>
      <param name="value" vsli:raw="The &lt;see cref=&quot;T:System.Int64&quot; /&gt;&lt;see langword=&quot;long&quot; /&gt; value representing the length.">表示长度的 <see cref="T:System.Int64" /><see langword="long" /> 值。</param>
    </member>
    <member name="M:System.Data.SqlTypes.SqlChars.SetNull">
      <summary vsli:raw="Sets this &lt;see cref=&quot;T:System.Data.SqlTypes.SqlChars&quot; /&gt; instance to null.">将此 <see cref="T:System.Data.SqlTypes.SqlChars" /> 实例设置为 null。</summary>
    </member>
    <member name="M:System.Data.SqlTypes.SqlChars.System#Runtime#Serialization#ISerializable#GetObjectData(System.Runtime.Serialization.SerializationInfo,System.Runtime.Serialization.StreamingContext)">
      <summary vsli:raw="Gets serialization information with all the data needed to reinstantiate this &lt;see cref=&quot;T:System.Data.SqlTypes.SqlChars&quot; /&gt; instance.">获取序列化信息以及包含重新实例化此 <see cref="T:System.Data.SqlTypes.SqlChars" /> 实例所需的所有数据。</summary>
      <param name="info" vsli:raw="The object to be populated with serialization information.">用序列化信息填充的对象。</param>
      <param name="context" vsli:raw="The destination context of the serialization.">序列化的目标上下文。</param>
    </member>
    <member name="M:System.Data.SqlTypes.SqlChars.System#Xml#Serialization#IXmlSerializable#GetSchema">
      <summary vsli:raw="This member supports the .NET Framework infrastructure and is not intended to be used directly from your code.">此成员支持 .NET Framework 结构，不能在代码中直接使用。</summary>
      <returns vsli:raw="This member supports the .NET Framework infrastructure and is not intended to be used directly from your code.">此成员支持 .NET Framework 结构，不能在代码中直接使用。</returns>
    </member>
    <member name="M:System.Data.SqlTypes.SqlChars.System#Xml#Serialization#IXmlSerializable#ReadXml(System.Xml.XmlReader)">
      <summary vsli:raw="This member supports the .NET Framework infrastructure and is not intended to be used directly from your code.">此成员支持 .NET Framework 结构，不能在代码中直接使用。</summary>
      <param name="r" vsli:raw="&lt;see langword=&quot;XmlReader&quot; /&gt;">
        <see langword="XmlReader" />
      </param>
    </member>
    <member name="M:System.Data.SqlTypes.SqlChars.System#Xml#Serialization#IXmlSerializable#WriteXml(System.Xml.XmlWriter)">
      <summary vsli:raw="This member supports the .NET Framework infrastructure and is not intended to be used directly from your code.">此成员支持 .NET Framework 结构，不能在代码中直接使用。</summary>
      <param name="writer" vsli:raw="&lt;see langword=&quot;XmlWriter&quot; /&gt;">
        <see langword="XmlWriter" />
      </param>
    </member>
    <member name="M:System.Data.SqlTypes.SqlChars.ToSqlString">
      <summary vsli:raw="Converts this &lt;see cref=&quot;T:System.Data.SqlTypes.SqlChars&quot; /&gt; instance to its equivalent &lt;see cref=&quot;T:System.Data.SqlTypes.SqlString&quot; /&gt; representation.">将此 <see cref="T:System.Data.SqlTypes.SqlChars" /> 实例转换为其等效的 <see cref="T:System.Data.SqlTypes.SqlString" /> 表示形式。</summary>
      <returns vsli:raw="A &lt;see cref=&quot;T:System.Data.SqlTypes.SqlString&quot; /&gt; representation of this type.">此类的 <see cref="T:System.Data.SqlTypes.SqlString" /> 表示形式。</returns>
    </member>
    <member name="M:System.Data.SqlTypes.SqlChars.Write(System.Int64,System.Char[],System.Int32,System.Int32)">
      <summary vsli:raw="Copies characters from the passed-in buffer to this &lt;see cref=&quot;T:System.Data.SqlTypes.SqlChars&quot; /&gt; instance.">将传入缓冲区中的字符复制到此 <see cref="T:System.Data.SqlTypes.SqlChars" /> 实例中。</summary>
      <param name="offset" vsli:raw="A &lt;see langword=&quot;long&quot; /&gt; value offset into the value that is contained in the &lt;see cref=&quot;T:System.Data.SqlTypes.SqlChars&quot; /&gt; instance.">
        <see cref="T:System.Data.SqlTypes.SqlChars" /> 实例中所含值的 <see langword="long" /> 值偏移量。</param>
      <param name="buffer" vsli:raw="The character array buffer to copy into.">向其复制的字符数组缓冲区。</param>
      <param name="offsetInBuffer" vsli:raw="An &lt;see cref=&quot;T:System.Int32&quot; /&gt; integer offset into the buffer to start copying into.">缓冲区中的一个 <see cref="T:System.Int32" /> 整数偏移量，以启动“复制到”操作。</param>
      <param name="count" vsli:raw="An &lt;see cref=&quot;T:System.Int32&quot; /&gt; integer representing the number of characters to copy.">一个 <see cref="T:System.Int32" /> 整数，表示要复制的字符数。</param>
    </member>
    <member name="P:System.Data.SqlTypes.SqlChars.Buffer">
      <summary vsli:raw="Returns a reference to the internal buffer.">返回一个对内部缓冲区的引用。</summary>
      <returns vsli:raw="A reference to the internal buffer. For &lt;see cref=&quot;T:System.Data.SqlTypes.SqlChars&quot; /&gt; instances created on top of unmanaged pointers, it returns a managed copy of the internal buffer.">对内部缓冲区的引用。 对于在非托管指针上创建的 <see cref="T:System.Data.SqlTypes.SqlChars" /> 实例，将返回内部缓冲区的托管副本。</returns>
    </member>
    <member name="P:System.Data.SqlTypes.SqlChars.IsNull">
      <summary vsli:raw="Gets a Boolean value that indicates whether this &lt;see cref=&quot;T:System.Data.SqlTypes.SqlChars&quot; /&gt; is null.">获取一个布尔值，该值指示此 <see cref="T:System.Data.SqlTypes.SqlChars" /> 是否为 null。</summary>
      <returns vsli:raw="&lt;see langword=&quot;true&quot; /&gt; if the &lt;see cref=&quot;T:System.Data.SqlTypes.SqlChars&quot; /&gt; is null. Otherwise, &lt;see langword=&quot;false&quot; /&gt;.">如果 <see cref="T:System.Data.SqlTypes.SqlChars" /> 为 null，则返回 <see langword="true" />。 否则为 <see langword="false" />。</returns>
    </member>
    <member name="P:System.Data.SqlTypes.SqlChars.Item(System.Int64)">
      <summary vsli:raw="Gets or sets the &lt;see cref=&quot;T:System.Data.SqlTypes.SqlChars&quot; /&gt; instance at the specified index.">获取或设置指定索引处的 <see cref="T:System.Data.SqlTypes.SqlChars" /> 实例。</summary>
      <param name="offset" vsli:raw="An &lt;see cref=&quot;T:System.Int64&quot; /&gt; value.">一个 <see cref="T:System.Int64" /> 值。</param>
      <returns vsli:raw="A &lt;see cref=&quot;T:System.Char&quot; /&gt; value.">一个 <see cref="T:System.Char" /> 值。</returns>
    </member>
    <member name="P:System.Data.SqlTypes.SqlChars.Length">
      <summary vsli:raw="Gets the length of the value that is contained in the &lt;see cref=&quot;T:System.Data.SqlTypes.SqlChars&quot; /&gt; instance.">获取 <see cref="T:System.Data.SqlTypes.SqlChars" /> 实例中包含的值的长度。</summary>
      <returns vsli:raw="A &lt;see cref=&quot;T:System.Int64&quot; /&gt; value that indicates the length in characters of the value that is contained in the &lt;see cref=&quot;T:System.Data.SqlTypes.SqlChars&quot; /&gt; instance.  &#xA;  &#xA; Returns -1 if no buffer is available to the instance, or if the value is null.  &#xA;  &#xA; Returns a &lt;see cref=&quot;P:System.IO.Stream.Length&quot; /&gt; for a stream-wrapped instance.">一个 <see cref="T:System.Int64" /> 值，指示 <see cref="T:System.Data.SqlTypes.SqlChars" /> 实例中包含的值的长度（以字符为单位）。  
  
如果没有可由该实例使用的缓冲区，或者该值为 null，则返回 -1。  
  
返回流包装实例的 <see cref="P:System.IO.Stream.Length" />。</returns>
    </member>
    <member name="P:System.Data.SqlTypes.SqlChars.MaxLength">
      <summary vsli:raw="Gets the maximum length in two-byte characters of the value the internal buffer can hold.">获取内部缓冲区可保存的值的最大长度（以双字节字符为单位）。</summary>
      <returns vsli:raw="An &lt;see cref=&quot;T:System.Int64&quot; /&gt; value representing the maximum length in two-byte characters of the value of the internal buffer.  &#xA;  &#xA; Returns -1 for a stream-wrapped &lt;see cref=&quot;T:System.Data.SqlTypes.SqlChars&quot; /&gt;.">一个 <see cref="T:System.Int64" /> 值，表示内部缓冲区的值的最大长度（以双字节为单位）。  
  
对于流包装的 <see cref="T:System.Data.SqlTypes.SqlChars" />，将返回 -1。</returns>
    </member>
    <member name="P:System.Data.SqlTypes.SqlChars.Null">
      <summary vsli:raw="Returns a null instance of this &lt;see cref=&quot;T:System.Data.SqlTypes.SqlChars&quot; /&gt;.">返回此 <see cref="T:System.Data.SqlTypes.SqlChars" /> 的 null 实例。</summary>
      <returns vsli:raw="An instance whose &lt;see cref=&quot;P:System.Data.SqlTypes.SqlChars.IsNull&quot; /&gt; property returns &lt;see langword=&quot;true&quot; /&gt;. For more information, see Handling Null Values.">其 <see cref="P:System.Data.SqlTypes.SqlChars.IsNull" /> 属性返回的实例 <see langword="true" /> 。 有关详细信息，请参阅 处理 Null 值。</returns>
    </member>
    <member name="P:System.Data.SqlTypes.SqlChars.Storage">
      <summary vsli:raw="Returns information about the storage state of this &lt;see cref=&quot;T:System.Data.SqlTypes.SqlChars&quot; /&gt; instance.">返回有关此 <see cref="T:System.Data.SqlTypes.SqlChars" /> 实例的存储状态的信息。</summary>
      <returns vsli:raw="A &lt;see cref=&quot;T:System.Data.SqlTypes.StorageState&quot; /&gt; enumeration.">一个 <see cref="T:System.Data.SqlTypes.StorageState" /> 枚举。</returns>
    </member>
    <member name="P:System.Data.SqlTypes.SqlChars.Value">
      <summary vsli:raw="Returns a managed copy of the value held by this &lt;see cref=&quot;T:System.Data.SqlTypes.SqlChars&quot; /&gt;.">返回此 <see cref="T:System.Data.SqlTypes.SqlChars" /> 保存的值的托管副本。</summary>
      <returns vsli:raw="The value of this &lt;see cref=&quot;T:System.Data.SqlTypes.SqlChars&quot; /&gt; as an array of characters.">此 <see cref="T:System.Data.SqlTypes.SqlChars" /> 的值，为字符数组。</returns>
    </member>
    <member name="T:System.Data.SqlTypes.SqlCompareOptions">
      <summary vsli:raw="Specifies the compare option values for a &lt;see cref=&quot;T:System.Data.SqlTypes.SqlString&quot; /&gt; structure.">为 <see cref="T:System.Data.SqlTypes.SqlString" /> 结构指定比较选项值。</summary>
    </member>
    <member name="F:System.Data.SqlTypes.SqlCompareOptions.BinarySort">
      <summary vsli:raw="Specifies that sorts should be based on a characters numeric value instead of its alphabetical value.">指定排序应基于字符数值（而非其字母值）。</summary>
    </member>
    <member name="F:System.Data.SqlTypes.SqlCompareOptions.BinarySort2">
      <summary vsli:raw="Performs a binary sort.">执行二进制排序。</summary>
    </member>
    <member name="F:System.Data.SqlTypes.SqlCompareOptions.IgnoreCase">
      <summary vsli:raw="Specifies that &lt;see cref=&quot;T:System.Data.SqlTypes.SqlString&quot; /&gt; comparisons must ignore case.">指定 <see cref="T:System.Data.SqlTypes.SqlString" /> 比较必须忽略大小写。</summary>
    </member>
    <member name="F:System.Data.SqlTypes.SqlCompareOptions.IgnoreKanaType">
      <summary vsli:raw="Specifies that &lt;see cref=&quot;T:System.Data.SqlTypes.SqlString&quot; /&gt; comparisons must ignore the Kana type. Kana type refers to Japanese hiragana and katakana characters that represent phonetic sounds in the Japanese language. Hiragana is used for native Japanese expressions and words, while katakana is used for words borrowed from other languages, such as &quot;computer&quot; or &quot;Internet&quot;. A phonetic sound can be expressed in both hiragana and katakana. If this value is selected, the hiragana character for one sound is considered equal to the katakana character for the same sound.">指定 <see cref="T:System.Data.SqlTypes.SqlString" /> 比较必须忽略假名类型。 假名类型是指日语平假名和片假名字符，它们表示日语中的语音。 平假名用于表示日语自有的短语和字词，而片假名用于表示从其他语言借用的字词，如“computer”或“Internet”。 语音既可以用平假名也可以用片假名表示。 如果选择该值，则认为一个语音的平假名字符等于同一语音的片假名字符。</summary>
    </member>
    <member name="F:System.Data.SqlTypes.SqlCompareOptions.IgnoreNonSpace">
      <summary vsli:raw="Specifies that &lt;see cref=&quot;T:System.Data.SqlTypes.SqlString&quot; /&gt; comparisons must ignore nonspace combining characters, such as diacritics. The Unicode Standard defines combining characters as characters that are combined with base characters to produce a new character. Non-space combining characters do not use character space by themselves when rendered. For more information about non-space combining characters, see the Unicode Standard at https://www.unicode.org.">指定 <see cref="T:System.Data.SqlTypes.SqlString" /> 比较必须忽略非空格组合字符，比如音调符号。 Unicode 标准将组合字符定义为与基字符组合起来产生新字符的字符。 非空格组合字符在呈现时本身不占用字符空间。 有关非空格组合字符的更多信息，请参阅 https://www.unicode.org 上的 Unicode 标准。</summary>
    </member>
    <member name="F:System.Data.SqlTypes.SqlCompareOptions.IgnoreWidth">
      <summary vsli:raw="Specifies that &lt;see cref=&quot;T:System.Data.SqlTypes.SqlString&quot; /&gt; comparisons must ignore the character width. For example, Japanese katakana characters can be written as full-width or half-width and, if this value is selected, the katakana characters written as full-width are considered equal to the same characters written in half-width.">指定 <see cref="T:System.Data.SqlTypes.SqlString" /> 比较必须忽略字符宽度。 例如，日语片假名字符可以写为全角或半角形式；如果选择该值，则认为写为全角形式的片假名字符等于写为半角形式的同一字符。</summary>
    </member>
    <member name="F:System.Data.SqlTypes.SqlCompareOptions.None">
      <summary vsli:raw="Specifies the default option settings for &lt;see cref=&quot;T:System.Data.SqlTypes.SqlString&quot; /&gt; comparisons.">为 <see cref="T:System.Data.SqlTypes.SqlString" /> 比较指定默认选项设置。</summary>
    </member>
    <member name="T:System.Data.SqlTypes.SqlDateTime">
      <summary vsli:raw="Represents the date and time data ranging in value from January 1, 1753 to December 31, 9999 to an accuracy of 3.33 milliseconds to be stored in or retrieved from a database. The &lt;see cref=&quot;T:System.Data.SqlTypes.SqlDateTime&quot; /&gt; structure has a different underlying data structure from its corresponding .NET type, &lt;see cref=&quot;T:System.DateTime&quot; /&gt;, which can represent any time between 12:00:00 AM 1/1/0001 and 11:59:59 PM 12/31/9999, to the accuracy of 100 nanoseconds. &lt;see cref=&quot;T:System.Data.SqlTypes.SqlDateTime&quot; /&gt; actually stores the relative difference to 00:00:00 AM 1/1/1900. Therefore, a conversion from &quot;00:00:00 AM 1/1/1900&quot; to an integer will return 0.">表示要存储在数据库中或从数据库中检索的日期和时间数据，值范围介于 1753 年 1 月 1 日到 9999 年 12 月 31 日之间，精度为 3.33 毫秒。 <see cref="T:System.Data.SqlTypes.SqlDateTime" /> 结构具有与其相应的 .NET Framework 类型 <see cref="T:System.DateTime" /> 不同的基础数据类型，该结构可以表示 12:00:00 AM 1/1/0001 和 11:59:59 PM 12/31/9999 之间的任何时间，精度可达到 100 毫微秒。 <see cref="T:System.Data.SqlTypes.SqlDateTime" /> 实际上存储的是相对于 00:00:00 AM 1/1/1900 的差值。 因此，将“00:00:00 AM 1/1/1900”转换为整数将返回 0。</summary>
    </member>
    <member name="F:System.Data.SqlTypes.SqlDateTime.MaxValue">
      <summary vsli:raw="Represents the maximum valid date value for a &lt;see cref=&quot;T:System.Data.SqlTypes.SqlDateTime&quot; /&gt; structure.">表示 <see cref="T:System.Data.SqlTypes.SqlDateTime" /> 结构的最大有效日期值。</summary>
    </member>
    <member name="F:System.Data.SqlTypes.SqlDateTime.MinValue">
      <summary vsli:raw="Represents the minimum valid date value for a &lt;see cref=&quot;T:System.Data.SqlTypes.SqlDateTime&quot; /&gt; structure.">表示 <see cref="T:System.Data.SqlTypes.SqlDateTime" /> 结构的最小有效日期值。</summary>
    </member>
    <member name="F:System.Data.SqlTypes.SqlDateTime.Null">
      <summary vsli:raw="Represents a &lt;see cref=&quot;T:System.DBNull&quot; /&gt; that can be assigned to this instance of the &lt;see cref=&quot;T:System.Data.SqlTypes.SqlDateTime&quot; /&gt; structure.">表示可指派给 <see cref="T:System.DBNull" /> 结构的此实例的 <see cref="T:System.Data.SqlTypes.SqlDateTime" />。</summary>
    </member>
    <member name="F:System.Data.SqlTypes.SqlDateTime.SQLTicksPerHour">
      <summary vsli:raw="A constant whose value is the number of ticks equivalent to one hour.">值为等效于 1 小时的刻度数的常数。</summary>
    </member>
    <member name="F:System.Data.SqlTypes.SqlDateTime.SQLTicksPerMinute">
      <summary vsli:raw="A constant whose value is the number of ticks equivalent to one minute.">值为等效于 1 分钟的刻度数的常数。</summary>
    </member>
    <member name="F:System.Data.SqlTypes.SqlDateTime.SQLTicksPerSecond">
      <summary vsli:raw="A constant whose value is the number of ticks equivalent to one second.">值为等效于 1 秒的刻度数的常数。</summary>
    </member>
    <member name="M:System.Data.SqlTypes.SqlDateTime.#ctor(System.DateTime)">
      <summary vsli:raw="Initializes a new instance of the &lt;see cref=&quot;T:System.Data.SqlTypes.SqlDateTime&quot; /&gt; structure using the specified &lt;see cref=&quot;T:System.DateTime&quot; /&gt; value.">使用指定的 <see cref="T:System.DateTime" /> 值初始化 <see cref="T:System.Data.SqlTypes.SqlDateTime" /> 结构的新实例。</summary>
      <param name="value" vsli:raw="A &lt;see langword=&quot;DateTime&quot; /&gt; structure.">
        <see langword="DateTime" /> 结构。</param>
    </member>
    <member name="M:System.Data.SqlTypes.SqlDateTime.#ctor(System.Int32,System.Int32)">
      <summary vsli:raw="Initializes a new instance of the &lt;see cref=&quot;T:System.Data.SqlTypes.SqlDateTime&quot; /&gt; structure using the supplied parameters.">使用提供的参数初始化 <see cref="T:System.Data.SqlTypes.SqlDateTime" /> 结构的新实例。</summary>
      <param name="dayTicks" vsli:raw="An integer value that represents the date as ticks.">将日期表示为刻度数的整数值。</param>
      <param name="timeTicks" vsli:raw="An integer value that represents the time as ticks.">将时间表示为刻度数的整数值。</param>
    </member>
    <member name="M:System.Data.SqlTypes.SqlDateTime.#ctor(System.Int32,System.Int32,System.Int32)">
      <summary vsli:raw="Initializes a new instance of the &lt;see cref=&quot;T:System.Data.SqlTypes.SqlDateTime&quot; /&gt; structure using the supplied parameters to initialize the year, month, day.">通过使用提供的参数初始化年、月、日，来初始化 <see cref="T:System.Data.SqlTypes.SqlDateTime" /> 结构的新实例。</summary>
      <param name="year" vsli:raw="An integer representing the year of the of the new &lt;see cref=&quot;T:System.Data.SqlTypes.SqlDateTime&quot; /&gt; structure.">一个整数，它表示新 <see cref="T:System.Data.SqlTypes.SqlDateTime" /> 结构的年份值。</param>
      <param name="month" vsli:raw="An integer value representing the month of the new &lt;see cref=&quot;T:System.Data.SqlTypes.SqlDateTime&quot; /&gt; structure.">一个整数值，它表示新 <see cref="T:System.Data.SqlTypes.SqlDateTime" /> 结构的月份值。</param>
      <param name="day" vsli:raw="An integer value representing the day number of the new &lt;see cref=&quot;T:System.Data.SqlTypes.SqlDateTime&quot; /&gt; structure.">一个整数值，它表示新 <see cref="T:System.Data.SqlTypes.SqlDateTime" /> 结构的日值。</param>
    </member>
    <member name="M:System.Data.SqlTypes.SqlDateTime.#ctor(System.Int32,System.Int32,System.Int32,System.Int32,System.Int32,System.Int32)">
      <summary vsli:raw="Initializes a new instance of the &lt;see cref=&quot;T:System.Data.SqlTypes.SqlDateTime&quot; /&gt; structure using the supplied parameters to initialize the year, month, day, hour, minute, and second of the new structure.">通过使用所提供的参数初始化新结构的年、月、日、小时、分钟和秒，来初始化 <see cref="T:System.Data.SqlTypes.SqlDateTime" /> 结构的新实例。</summary>
      <param name="year" vsli:raw="An integer value representing the year of the new &lt;see cref=&quot;T:System.Data.SqlTypes.SqlDateTime&quot; /&gt; structure.">一个整数值，它表示新 <see cref="T:System.Data.SqlTypes.SqlDateTime" /> 结构的年份值。</param>
      <param name="month" vsli:raw="An integer value representing the month of the new &lt;see cref=&quot;T:System.Data.SqlTypes.SqlDateTime&quot; /&gt; structure.">一个整数值，它表示新 <see cref="T:System.Data.SqlTypes.SqlDateTime" /> 结构的月份值。</param>
      <param name="day" vsli:raw="An integer value representing the day of the month of the new &lt;see cref=&quot;T:System.Data.SqlTypes.SqlDateTime&quot; /&gt; structure.">一个整数值，它表示新 <see cref="T:System.Data.SqlTypes.SqlDateTime" /> 结构中月份的第几天的值。</param>
      <param name="hour" vsli:raw="An integer value representing the hour of the new &lt;see cref=&quot;T:System.Data.SqlTypes.SqlDateTime&quot; /&gt; structure.">一个整数值，它表示新 <see cref="T:System.Data.SqlTypes.SqlDateTime" /> 结构的小时值。</param>
      <param name="minute" vsli:raw="An integer value representing the minute of the new &lt;see cref=&quot;T:System.Data.SqlTypes.SqlDateTime&quot; /&gt; structure.">一个整数值，它表示新 <see cref="T:System.Data.SqlTypes.SqlDateTime" /> 结构的分钟值。</param>
      <param name="second" vsli:raw="An integer value representing the second of the new &lt;see cref=&quot;T:System.Data.SqlTypes.SqlDateTime&quot; /&gt; structure.">一个整数值，它表示新 <see cref="T:System.Data.SqlTypes.SqlDateTime" /> 结构的秒钟值。</param>
    </member>
    <member name="M:System.Data.SqlTypes.SqlDateTime.#ctor(System.Int32,System.Int32,System.Int32,System.Int32,System.Int32,System.Int32,System.Double)">
      <summary vsli:raw="Initializes a new instance of the &lt;see cref=&quot;T:System.Data.SqlTypes.SqlDateTime&quot; /&gt; structure using the supplied parameters to initialize the year, month, day, hour, minute, second, and millisecond of the new structure.">通过使用所提供的参数初始化新结构的年、月、日、小时、分钟、秒和毫秒，来初始化 <see cref="T:System.Data.SqlTypes.SqlDateTime" /> 结构的新实例。</summary>
      <param name="year" vsli:raw="An integer value representing the year of the new &lt;see cref=&quot;T:System.Data.SqlTypes.SqlDateTime&quot; /&gt; structure.">一个整数值，它表示新 <see cref="T:System.Data.SqlTypes.SqlDateTime" /> 结构的年份值。</param>
      <param name="month" vsli:raw="An integer value representing the month of the new &lt;see cref=&quot;T:System.Data.SqlTypes.SqlDateTime&quot; /&gt; structure.">一个整数值，它表示新 <see cref="T:System.Data.SqlTypes.SqlDateTime" /> 结构的月份值。</param>
      <param name="day" vsli:raw="An integer value representing the day of the month of the new &lt;see cref=&quot;T:System.Data.SqlTypes.SqlDateTime&quot; /&gt; structure.">一个整数值，它表示新 <see cref="T:System.Data.SqlTypes.SqlDateTime" /> 结构中月份的第几天的值。</param>
      <param name="hour" vsli:raw="An integer value representing the hour of the new &lt;see cref=&quot;T:System.Data.SqlTypes.SqlDateTime&quot; /&gt; structure.">一个整数值，它表示新 <see cref="T:System.Data.SqlTypes.SqlDateTime" /> 结构的小时值。</param>
      <param name="minute" vsli:raw="An integer value representing the minute of the new &lt;see cref=&quot;T:System.Data.SqlTypes.SqlDateTime&quot; /&gt; structure.">一个整数值，它表示新 <see cref="T:System.Data.SqlTypes.SqlDateTime" /> 结构的分钟值。</param>
      <param name="second" vsli:raw="An integer value representing the second of the new &lt;see cref=&quot;T:System.Data.SqlTypes.SqlDateTime&quot; /&gt; structure.">一个整数值，它表示新 <see cref="T:System.Data.SqlTypes.SqlDateTime" /> 结构的秒钟值。</param>
      <param name="millisecond" vsli:raw="An double value representing the millisecond of the new &lt;see cref=&quot;T:System.Data.SqlTypes.SqlDateTime&quot; /&gt; structure.">一个双精度型值，表示新 <see cref="T:System.Data.SqlTypes.SqlDateTime" /> 结构的毫秒值。</param>
    </member>
    <member name="M:System.Data.SqlTypes.SqlDateTime.#ctor(System.Int32,System.Int32,System.Int32,System.Int32,System.Int32,System.Int32,System.Int32)">
      <summary vsli:raw="Initializes a new instance of the &lt;see cref=&quot;T:System.Data.SqlTypes.SqlDateTime&quot; /&gt; structure using the supplied parameters to initialize the year, month, day, hour, minute, second, and microsecond of the new structure.">通过使用所提供的参数初始化新结构的年、月、日、小时、分钟、秒和毫秒，来初始化 <see cref="T:System.Data.SqlTypes.SqlDateTime" /> 结构的新实例。</summary>
      <param name="year" vsli:raw="An integer value representing the year of the new &lt;see cref=&quot;T:System.Data.SqlTypes.SqlDateTime&quot; /&gt; structure.">一个整数值，它表示新 <see cref="T:System.Data.SqlTypes.SqlDateTime" /> 结构的年份值。</param>
      <param name="month" vsli:raw="An integer value representing the month of the new &lt;see cref=&quot;T:System.Data.SqlTypes.SqlDateTime&quot; /&gt; structure.">一个整数值，它表示新 <see cref="T:System.Data.SqlTypes.SqlDateTime" /> 结构的月份值。</param>
      <param name="day" vsli:raw="An integer value representing the day of the new &lt;see cref=&quot;T:System.Data.SqlTypes.SqlDateTime&quot; /&gt; structure.">一个整数值，它表示新 <see cref="T:System.Data.SqlTypes.SqlDateTime" /> 结构的日值。</param>
      <param name="hour" vsli:raw="An integer value representing the hour of the new &lt;see cref=&quot;T:System.Data.SqlTypes.SqlDateTime&quot; /&gt; structure.">一个整数值，它表示新 <see cref="T:System.Data.SqlTypes.SqlDateTime" /> 结构的小时值。</param>
      <param name="minute" vsli:raw="An integer value representing the minute of the new &lt;see cref=&quot;T:System.Data.SqlTypes.SqlDateTime&quot; /&gt; structure.">一个整数值，它表示新 <see cref="T:System.Data.SqlTypes.SqlDateTime" /> 结构的分钟值。</param>
      <param name="second" vsli:raw="An integer value representing the second of the new &lt;see cref=&quot;T:System.Data.SqlTypes.SqlDateTime&quot; /&gt; structure.">一个整数值，它表示新 <see cref="T:System.Data.SqlTypes.SqlDateTime" /> 结构的秒钟值。</param>
      <param name="bilisecond" vsli:raw="An integer value representing the microsecond (thousandths of a millisecond) of the new &lt;see cref=&quot;T:System.Data.SqlTypes.SqlDateTime&quot; /&gt; structure.">一个整数值，它表示新 <see cref="T:System.Data.SqlTypes.SqlDateTime" /> 结构的毫秒（千分之一毫秒）。</param>
    </member>
    <member name="M:System.Data.SqlTypes.SqlDateTime.Add(System.Data.SqlTypes.SqlDateTime,System.TimeSpan)">
      <summary vsli:raw="Adds a &lt;see cref=&quot;T:System.Data.SqlTypes.SqlDateTime&quot; /&gt; to the specified &lt;see langword=&quot;TimeSpan&quot; /&gt;.">向指定的 <see cref="T:System.Data.SqlTypes.SqlDateTime" /> 添加一个 <see langword="TimeSpan" />。</summary>
      <param name="x" vsli:raw="A &lt;see cref=&quot;T:System.Data.SqlTypes.SqlDateTime&quot; /&gt; value.">一个 <see cref="T:System.Data.SqlTypes.SqlDateTime" /> 值。</param>
      <param name="t" vsli:raw="A &lt;see langword=&quot;Timespan&quot; /&gt; value.">一个 <see langword="Timespan" /> 值。</param>
      <returns vsli:raw="A &lt;see cref=&quot;T:System.Data.SqlTypes.SqlDateTime&quot; /&gt; value.">一个 <see cref="T:System.Data.SqlTypes.SqlDateTime" /> 值。</returns>
    </member>
    <member name="M:System.Data.SqlTypes.SqlDateTime.CompareTo(System.Data.SqlTypes.SqlDateTime)">
      <summary vsli:raw="Compares this &lt;see cref=&quot;T:System.Data.SqlTypes.SqlDateTime&quot; /&gt; structure to the supplied &lt;see cref=&quot;T:System.Data.SqlTypes.SqlDateTime&quot; /&gt; structure and returns an indication of their relative values.">将此 <see cref="T:System.Data.SqlTypes.SqlDateTime" /> 结构与提供的 <see cref="T:System.Data.SqlTypes.SqlDateTime" /> 结构进行比较，并返回其相对值的指示值。</summary>
      <param name="value" vsli:raw="The &lt;see cref=&quot;T:System.Data.SqlTypes.SqlDateTime&quot; /&gt; structure to be compared.">要比较的 <see cref="T:System.Data.SqlTypes.SqlDateTime" /> 结构。</param>
      <returns vsli:raw="A signed number that indicates the relative values of the instance and the object.  &#xA;  &#xA; &lt;list type=&quot;table&quot;&gt;&lt;listheader&gt;&lt;term&gt; Return value&lt;/term&gt;&lt;description&gt; Condition&lt;/description&gt;&lt;/listheader&gt;&lt;item&gt;&lt;term&gt; Less than zero&lt;/term&gt;&lt;description&gt; This instance is less than &lt;see cref=&quot;T:System.Data.SqlTypes.SqlDateTime&quot; /&gt;.&lt;/description&gt;&lt;/item&gt;&lt;item&gt;&lt;term&gt; Zero&lt;/term&gt;&lt;description&gt; This instance is the same as &lt;see cref=&quot;T:System.Data.SqlTypes.SqlDateTime&quot; /&gt;.&lt;/description&gt;&lt;/item&gt;&lt;item&gt;&lt;term&gt; Greater than zero&lt;/term&gt;&lt;description&gt; This instance is greater than &lt;see cref=&quot;T:System.Data.SqlTypes.SqlDateTime&quot; /&gt;  &#xA;  &#xA; -or-  &#xA;  &#xA; &lt;see cref=&quot;T:System.Data.SqlTypes.SqlDateTime&quot; /&gt; is a null reference (&lt;see langword=&quot;Nothing&quot; /&gt; in Visual Basic)&lt;/description&gt;&lt;/item&gt;&lt;/list&gt;">一个有符号的数字，它指示该实例和对象的相对值。  
  
 <list type="table"><listheader><term> 返回值</term><description> 条件</description></listheader><item><term> 小于零</term><description> 此实例小于 <see cref="T:System.Data.SqlTypes.SqlDateTime" />。</description></item><item><term> 零</term><description> 此实例与 <see cref="T:System.Data.SqlTypes.SqlDateTime" /> 相同。</description></item><item><term> 大于零</term><description> 此实例大于 <see cref="T:System.Data.SqlTypes.SqlDateTime" />。  
  
- 或 - 
 <see cref="T:System.Data.SqlTypes.SqlDateTime" /> 为空引用（在 Visual Basic 中为 <see langword="Nothing" />）</description></item></list></returns>
    </member>
    <member name="M:System.Data.SqlTypes.SqlDateTime.CompareTo(System.Object)">
      <summary vsli:raw="Compares this &lt;see cref=&quot;T:System.Data.SqlTypes.SqlDateTime&quot; /&gt; structure to the supplied &lt;see cref=&quot;T:System.Object&quot; /&gt; and returns an indication of their relative values.">将此 <see cref="T:System.Data.SqlTypes.SqlDateTime" /> 结构与提供的 <see cref="T:System.Object" /> 进行比较，并返回其相对值的指示值。</summary>
      <param name="value" vsli:raw="The &lt;see cref=&quot;T:System.Object&quot; /&gt; to be compared.">要比较的 <see cref="T:System.Object" />。</param>
      <returns vsli:raw="A signed number that indicates the relative values of the instance and the object.  &#xA;  &#xA; &lt;list type=&quot;table&quot;&gt;&lt;listheader&gt;&lt;term&gt; Return value&lt;/term&gt;&lt;description&gt; Condition&lt;/description&gt;&lt;/listheader&gt;&lt;item&gt;&lt;term&gt; Less than zero&lt;/term&gt;&lt;description&gt; This instance is less than the object.&lt;/description&gt;&lt;/item&gt;&lt;item&gt;&lt;term&gt; Zero&lt;/term&gt;&lt;description&gt; This instance is the same as the object.&lt;/description&gt;&lt;/item&gt;&lt;item&gt;&lt;term&gt; Greater than zero&lt;/term&gt;&lt;description&gt; This instance is greater than the object  &#xA;  &#xA; -or-  &#xA;  &#xA; The object is a null reference (&lt;see langword=&quot;Nothing&quot; /&gt; as Visual Basic).&lt;/description&gt;&lt;/item&gt;&lt;/list&gt;">一个有符号的数字，它指示该实例和对象的相对值。  
  
 <list type="table"><listheader><term> 返回值</term><description> 条件</description></listheader><item><term> 小于零</term><description> 此实例小于该对象。</description></item><item><term> 零</term><description> 此实例等于该对象。</description></item><item><term> 大于零</term><description> 此实例大于该对象 
- 或 - 
该对象是 null 引用（在 Visual Basic 中为 <see langword="Nothing" />）。</description></item></list></returns>
    </member>
    <member name="M:System.Data.SqlTypes.SqlDateTime.Equals(System.Data.SqlTypes.SqlDateTime,System.Data.SqlTypes.SqlDateTime)">
      <summary vsli:raw="Performs a logical comparison of two &lt;see cref=&quot;T:System.Data.SqlTypes.SqlDateTime&quot; /&gt; structures to determine whether they are equal.">对两个 <see cref="T:System.Data.SqlTypes.SqlDateTime" /> 结构执行逻辑比较，以确定它们是否相等。</summary>
      <param name="x" vsli:raw="A &lt;see cref=&quot;T:System.Data.SqlTypes.SqlDateTime&quot; /&gt; structure.">
        <see cref="T:System.Data.SqlTypes.SqlDateTime" /> 结构。</param>
      <param name="y" vsli:raw="A &lt;see cref=&quot;T:System.Data.SqlTypes.SqlDateTime&quot; /&gt; structure.">
        <see cref="T:System.Data.SqlTypes.SqlDateTime" /> 结构。</param>
      <returns vsli:raw="&lt;see langword=&quot;true&quot; /&gt; if the two values are equal. Otherwise, &lt;see langword=&quot;false&quot; /&gt;.">如果两个值相等，则为 <see langword="true" />。 否则为 <see langword="false" />。</returns>
    </member>
    <member name="M:System.Data.SqlTypes.SqlDateTime.Equals(System.Object)">
      <summary vsli:raw="Compares the supplied object parameter to the &lt;see cref=&quot;P:System.Data.SqlTypes.SqlDateTime.Value&quot; /&gt; property of the &lt;see cref=&quot;T:System.Data.SqlTypes.SqlDateTime&quot; /&gt; object.">将提供的对象参数与 <see cref="P:System.Data.SqlTypes.SqlDateTime.Value" /> 对象的 <see cref="T:System.Data.SqlTypes.SqlDateTime" /> 属性进行比较。</summary>
      <param name="value" vsli:raw="The object to be compared.">要比较的对象。</param>
      <returns vsli:raw="&lt;see langword=&quot;true&quot; /&gt; if the object is an instance of &lt;see cref=&quot;T:System.Data.SqlTypes.SqlDateTime&quot; /&gt; and the two are equal; otherwise &lt;see langword=&quot;false&quot; /&gt;.">如果对象是 <see cref="T:System.Data.SqlTypes.SqlDateTime" /> 的实例并且两者相等，则为 <see langword="true" />；否则为 <see langword="false" />。</returns>
    </member>
    <member name="M:System.Data.SqlTypes.SqlDateTime.GetHashCode">
      <summary vsli:raw="Gets the hash code for this instance.">获取此实例的哈希代码。</summary>
      <returns vsli:raw="A 32-bit signed integer hash code.">32 位有符号整数哈希代码。</returns>
    </member>
    <member name="M:System.Data.SqlTypes.SqlDateTime.GetXsdType(System.Xml.Schema.XmlSchemaSet)">
      <summary vsli:raw="Returns the XML Schema definition language (XSD) of the specified &lt;see cref=&quot;T:System.Xml.Schema.XmlSchemaSet&quot; /&gt;.">返回指定的 <see cref="T:System.Xml.Schema.XmlSchemaSet" /> 的 XML 架构定义语言 (XSD)。</summary>
      <param name="schemaSet" vsli:raw="A &lt;see cref=&quot;T:System.Xml.Schema.XmlSchemaSet&quot; /&gt;.">
        <see cref="T:System.Xml.Schema.XmlSchemaSet" />。</param>
      <returns vsli:raw="A &lt;see langword=&quot;string&quot; /&gt; value that indicates the XSD of the specified &lt;see cref=&quot;T:System.Xml.Schema.XmlSchemaSet&quot; /&gt;.">指示指定的 <see cref="T:System.Xml.Schema.XmlSchemaSet" /> 的 XSD 的 <see langword="string" /> 值。</returns>
    </member>
    <member name="M:System.Data.SqlTypes.SqlDateTime.GreaterThan(System.Data.SqlTypes.SqlDateTime,System.Data.SqlTypes.SqlDateTime)">
      <summary vsli:raw="Compares two instances of &lt;see cref=&quot;T:System.Data.SqlTypes.SqlDateTime&quot; /&gt; to determine whether the first is greater than the second.">对 <see cref="T:System.Data.SqlTypes.SqlDateTime" /> 的两个实例进行比较，以确定第一个实例是否大于第二个实例。</summary>
      <param name="x" vsli:raw="A &lt;see cref=&quot;T:System.Data.SqlTypes.SqlDateTime&quot; /&gt; structure.">
        <see cref="T:System.Data.SqlTypes.SqlDateTime" /> 结构。</param>
      <param name="y" vsli:raw="A &lt;see cref=&quot;T:System.Data.SqlTypes.SqlDateTime&quot; /&gt; structure.">
        <see cref="T:System.Data.SqlTypes.SqlDateTime" /> 结构。</param>
      <returns vsli:raw="A &lt;see cref=&quot;T:System.Data.SqlTypes.SqlBoolean&quot; /&gt; that is &lt;see cref=&quot;F:System.Data.SqlTypes.SqlBoolean.True&quot; /&gt; if the first instance is greater than the second instance. Otherwise, &lt;see cref=&quot;F:System.Data.SqlTypes.SqlBoolean.False&quot; /&gt;. If either instance of &lt;see cref=&quot;T:System.Data.SqlTypes.SqlDateTime&quot; /&gt; is null, the &lt;see cref=&quot;P:System.Data.SqlTypes.SqlBoolean.Value&quot; /&gt; of the &lt;see cref=&quot;T:System.Data.SqlTypes.SqlBoolean&quot; /&gt; will be &lt;see cref=&quot;F:System.Data.SqlTypes.SqlBoolean.Null&quot; /&gt;.">一个 <see cref="T:System.Data.SqlTypes.SqlBoolean" />，如果第一个实例大于第二个实例，则它为 <see cref="F:System.Data.SqlTypes.SqlBoolean.True" />。 否则为 <see cref="F:System.Data.SqlTypes.SqlBoolean.False" />。 如果 <see cref="T:System.Data.SqlTypes.SqlDateTime" /> 的任一实例为空，则 <see cref="P:System.Data.SqlTypes.SqlBoolean.Value" /> 的 <see cref="T:System.Data.SqlTypes.SqlBoolean" /> 将为 <see cref="F:System.Data.SqlTypes.SqlBoolean.Null" />。</returns>
    </member>
    <member name="M:System.Data.SqlTypes.SqlDateTime.GreaterThanOrEqual(System.Data.SqlTypes.SqlDateTime,System.Data.SqlTypes.SqlDateTime)">
      <summary vsli:raw="Compares two instances of &lt;see cref=&quot;T:System.Data.SqlTypes.SqlDateTime&quot; /&gt; to determine whether the first is greater than or equal to the second.">对 <see cref="T:System.Data.SqlTypes.SqlDateTime" /> 的两个实例进行比较，以确定第一个实例是否大于或等于第二个实例。</summary>
      <param name="x" vsli:raw="A &lt;see cref=&quot;T:System.Data.SqlTypes.SqlDateTime&quot; /&gt; structure.">
        <see cref="T:System.Data.SqlTypes.SqlDateTime" /> 结构。</param>
      <param name="y" vsli:raw="A &lt;see cref=&quot;T:System.Data.SqlTypes.SqlDateTime&quot; /&gt; structure.">
        <see cref="T:System.Data.SqlTypes.SqlDateTime" /> 结构。</param>
      <returns vsli:raw="A &lt;see cref=&quot;T:System.Data.SqlTypes.SqlBoolean&quot; /&gt; that is &lt;see cref=&quot;F:System.Data.SqlTypes.SqlBoolean.True&quot; /&gt; if the first instance is greater than or equal to the second instance. Otherwise, &lt;see cref=&quot;F:System.Data.SqlTypes.SqlBoolean.False&quot; /&gt;. If either instance of &lt;see cref=&quot;T:System.Data.SqlTypes.SqlDateTime&quot; /&gt; is null, the &lt;see cref=&quot;P:System.Data.SqlTypes.SqlBoolean.Value&quot; /&gt; of the &lt;see cref=&quot;T:System.Data.SqlTypes.SqlBoolean&quot; /&gt; will be &lt;see cref=&quot;F:System.Data.SqlTypes.SqlBoolean.Null&quot; /&gt;.">一个 <see cref="T:System.Data.SqlTypes.SqlBoolean" />，如果第一个实例大于或等于第二个实例，则为 <see cref="F:System.Data.SqlTypes.SqlBoolean.True" />。 否则为 <see cref="F:System.Data.SqlTypes.SqlBoolean.False" />。 如果 <see cref="T:System.Data.SqlTypes.SqlDateTime" /> 的任一实例为空，则 <see cref="P:System.Data.SqlTypes.SqlBoolean.Value" /> 的 <see cref="T:System.Data.SqlTypes.SqlBoolean" /> 将为 <see cref="F:System.Data.SqlTypes.SqlBoolean.Null" />。</returns>
    </member>
    <member name="M:System.Data.SqlTypes.SqlDateTime.LessThan(System.Data.SqlTypes.SqlDateTime,System.Data.SqlTypes.SqlDateTime)">
      <summary vsli:raw="Compares two instances of &lt;see cref=&quot;T:System.Data.SqlTypes.SqlDateTime&quot; /&gt; to determine whether the first is less than the second.">对 <see cref="T:System.Data.SqlTypes.SqlDateTime" /> 的两个实例进行比较，以确定第一个实例是否小于第二个实例。</summary>
      <param name="x" vsli:raw="A &lt;see cref=&quot;T:System.Data.SqlTypes.SqlDateTime&quot; /&gt; structure.">
        <see cref="T:System.Data.SqlTypes.SqlDateTime" /> 结构。</param>
      <param name="y" vsli:raw="A &lt;see cref=&quot;T:System.Data.SqlTypes.SqlDateTime&quot; /&gt; structure.">
        <see cref="T:System.Data.SqlTypes.SqlDateTime" /> 结构。</param>
      <returns vsli:raw="A &lt;see cref=&quot;T:System.Data.SqlTypes.SqlBoolean&quot; /&gt; that is &lt;see cref=&quot;F:System.Data.SqlTypes.SqlBoolean.True&quot; /&gt; if the first instance is less than the second instance. Otherwise, &lt;see cref=&quot;F:System.Data.SqlTypes.SqlBoolean.False&quot; /&gt;. If either instance of &lt;see cref=&quot;T:System.Data.SqlTypes.SqlDateTime&quot; /&gt; is null, the &lt;see cref=&quot;P:System.Data.SqlTypes.SqlBoolean.Value&quot; /&gt; of the &lt;see cref=&quot;T:System.Data.SqlTypes.SqlBoolean&quot; /&gt; will be &lt;see cref=&quot;F:System.Data.SqlTypes.SqlBoolean.Null&quot; /&gt;.">一个 <see cref="T:System.Data.SqlTypes.SqlBoolean" />，如果第一个实例小于第二个实例，则它为 <see cref="F:System.Data.SqlTypes.SqlBoolean.True" />。 否则为 <see cref="F:System.Data.SqlTypes.SqlBoolean.False" />。 如果 <see cref="T:System.Data.SqlTypes.SqlDateTime" /> 的任一实例为空，则 <see cref="P:System.Data.SqlTypes.SqlBoolean.Value" /> 的 <see cref="T:System.Data.SqlTypes.SqlBoolean" /> 将为 <see cref="F:System.Data.SqlTypes.SqlBoolean.Null" />。</returns>
    </member>
    <member name="M:System.Data.SqlTypes.SqlDateTime.LessThanOrEqual(System.Data.SqlTypes.SqlDateTime,System.Data.SqlTypes.SqlDateTime)">
      <summary vsli:raw="Compares two instances of &lt;see cref=&quot;T:System.Data.SqlTypes.SqlDateTime&quot; /&gt; to determine whether the first is less than or equal to the second.">对 <see cref="T:System.Data.SqlTypes.SqlDateTime" /> 的两个实例进行比较，以确定第一个实例是否小于或等于第二个实例。</summary>
      <param name="x" vsli:raw="A &lt;see cref=&quot;T:System.Data.SqlTypes.SqlDateTime&quot; /&gt; structure.">
        <see cref="T:System.Data.SqlTypes.SqlDateTime" /> 结构。</param>
      <param name="y" vsli:raw="A &lt;see cref=&quot;T:System.Data.SqlTypes.SqlDateTime&quot; /&gt; structure.">
        <see cref="T:System.Data.SqlTypes.SqlDateTime" /> 结构。</param>
      <returns vsli:raw="A &lt;see cref=&quot;T:System.Data.SqlTypes.SqlBoolean&quot; /&gt; that is &lt;see cref=&quot;F:System.Data.SqlTypes.SqlBoolean.True&quot; /&gt; if the first instance is less than or equal to the second instance. Otherwise, &lt;see cref=&quot;F:System.Data.SqlTypes.SqlBoolean.False&quot; /&gt;. If either instance of &lt;see cref=&quot;T:System.Data.SqlTypes.SqlDateTime&quot; /&gt; is null, the &lt;see cref=&quot;P:System.Data.SqlTypes.SqlBoolean.Value&quot; /&gt; of the &lt;see cref=&quot;T:System.Data.SqlTypes.SqlBoolean&quot; /&gt; will be &lt;see cref=&quot;F:System.Data.SqlTypes.SqlBoolean.Null&quot; /&gt;.">一个 <see cref="T:System.Data.SqlTypes.SqlBoolean" />，如果第一个实例小于或等于第二个实例，则它为 <see cref="F:System.Data.SqlTypes.SqlBoolean.True" />。 否则为 <see cref="F:System.Data.SqlTypes.SqlBoolean.False" />。 如果 <see cref="T:System.Data.SqlTypes.SqlDateTime" /> 的任一实例为空，则 <see cref="P:System.Data.SqlTypes.SqlBoolean.Value" /> 的 <see cref="T:System.Data.SqlTypes.SqlBoolean" /> 将为 <see cref="F:System.Data.SqlTypes.SqlBoolean.Null" />。</returns>
    </member>
    <member name="M:System.Data.SqlTypes.SqlDateTime.NotEquals(System.Data.SqlTypes.SqlDateTime,System.Data.SqlTypes.SqlDateTime)">
      <summary vsli:raw="Performs a logical comparison of two instances of &lt;see cref=&quot;T:System.Data.SqlTypes.SqlDateTime&quot; /&gt; to determine whether they are not equal.">对 <see cref="T:System.Data.SqlTypes.SqlDateTime" /> 的两个实例执行逻辑比较，确定它们是否相等。</summary>
      <param name="x" vsli:raw="A &lt;see cref=&quot;T:System.Data.SqlTypes.SqlDateTime&quot; /&gt; structure.">
        <see cref="T:System.Data.SqlTypes.SqlDateTime" /> 结构。</param>
      <param name="y" vsli:raw="A &lt;see cref=&quot;T:System.Data.SqlTypes.SqlDateTime&quot; /&gt; structure.">
        <see cref="T:System.Data.SqlTypes.SqlDateTime" /> 结构。</param>
      <returns vsli:raw="A &lt;see cref=&quot;T:System.Data.SqlTypes.SqlBoolean&quot; /&gt; that is &lt;see cref=&quot;F:System.Data.SqlTypes.SqlBoolean.True&quot; /&gt; if the two instances are not equal or &lt;see cref=&quot;F:System.Data.SqlTypes.SqlBoolean.False&quot; /&gt; if the two instances are equal. If either instance of &lt;see cref=&quot;T:System.Data.SqlTypes.SqlDateTime&quot; /&gt; is null, the &lt;see cref=&quot;P:System.Data.SqlTypes.SqlBoolean.Value&quot; /&gt; of the &lt;see cref=&quot;T:System.Data.SqlTypes.SqlBoolean&quot; /&gt; will be &lt;see cref=&quot;F:System.Data.SqlTypes.SqlBoolean.Null&quot; /&gt;.">一个 <see cref="T:System.Data.SqlTypes.SqlBoolean" />，它在两个实例不等时为 <see cref="F:System.Data.SqlTypes.SqlBoolean.True" />，在两个实例相等时为 <see cref="F:System.Data.SqlTypes.SqlBoolean.False" />。 如果 <see cref="T:System.Data.SqlTypes.SqlDateTime" /> 的任一实例为空，则 <see cref="P:System.Data.SqlTypes.SqlBoolean.Value" /> 的 <see cref="T:System.Data.SqlTypes.SqlBoolean" /> 将为 <see cref="F:System.Data.SqlTypes.SqlBoolean.Null" />。</returns>
    </member>
    <member name="M:System.Data.SqlTypes.SqlDateTime.op_Addition(System.Data.SqlTypes.SqlDateTime,System.TimeSpan)">
      <summary vsli:raw="Adds the period of time indicated by the supplied &lt;see cref=&quot;T:System.TimeSpan&quot; /&gt; parameter, &lt;paramref name=&quot;t&quot; /&gt;, to the supplied &lt;see cref=&quot;T:System.Data.SqlTypes.SqlDateTime&quot; /&gt; structure.">将提供的 <see cref="T:System.TimeSpan" /> 参数 <paramref name="t" /> 指示的一段时间添加到提供的 <see cref="T:System.Data.SqlTypes.SqlDateTime" /> 结构中。</summary>
      <param name="x" vsli:raw="A &lt;see cref=&quot;T:System.Data.SqlTypes.SqlDateTime&quot; /&gt; structure.">
        <see cref="T:System.Data.SqlTypes.SqlDateTime" /> 结构。</param>
      <param name="t" vsli:raw="A &lt;see cref=&quot;T:System.TimeSpan&quot; /&gt; structure.">
        <see cref="T:System.TimeSpan" /> 结构。</param>
      <returns vsli:raw="A new &lt;see cref=&quot;T:System.Data.SqlTypes.SqlDateTime&quot; /&gt;. If either argument is &lt;see cref=&quot;F:System.Data.SqlTypes.SqlDateTime.Null&quot; /&gt;, the new &lt;see cref=&quot;P:System.Data.SqlTypes.SqlDateTime.Value&quot; /&gt; is &lt;see cref=&quot;F:System.Data.SqlTypes.SqlDateTime.Null&quot; /&gt;.">一个新的 <see cref="T:System.Data.SqlTypes.SqlDateTime" />。 如果任一参数为 <see cref="F:System.Data.SqlTypes.SqlDateTime.Null" />，则新的 <see cref="P:System.Data.SqlTypes.SqlDateTime.Value" /> 将是 <see cref="F:System.Data.SqlTypes.SqlDateTime.Null" />。</returns>
    </member>
    <member name="M:System.Data.SqlTypes.SqlDateTime.op_Equality(System.Data.SqlTypes.SqlDateTime,System.Data.SqlTypes.SqlDateTime)">
      <summary vsli:raw="Performs a logical comparison of two &lt;see cref=&quot;T:System.Data.SqlTypes.SqlDateTime&quot; /&gt; structures to determine whether they are equal.">对两个 <see cref="T:System.Data.SqlTypes.SqlDateTime" /> 结构执行逻辑比较，以确定它们是否相等。</summary>
      <param name="x" vsli:raw="A &lt;see cref=&quot;T:System.Data.SqlTypes.SqlDateTime&quot; /&gt; structure.">
        <see cref="T:System.Data.SqlTypes.SqlDateTime" /> 结构。</param>
      <param name="y" vsli:raw="A &lt;see cref=&quot;T:System.Data.SqlTypes.SqlDateTime&quot; /&gt; structure.">
        <see cref="T:System.Data.SqlTypes.SqlDateTime" /> 结构。</param>
      <returns vsli:raw="&lt;see langword=&quot;true&quot; /&gt; if the two values are equal. Otherwise, &lt;see langword=&quot;false&quot; /&gt;.">如果两个值相等，则为 <see langword="true" />。 否则为 <see langword="false" />。</returns>
    </member>
    <member name="M:System.Data.SqlTypes.SqlDateTime.op_Explicit(System.Data.SqlTypes.SqlDateTime)~System.DateTime">
      <summary vsli:raw="Converts the &lt;see cref=&quot;T:System.Data.SqlTypes.SqlDateTime&quot; /&gt; structure to a &lt;see cref=&quot;T:System.DateTime&quot; /&gt; structure.">将 <see cref="T:System.Data.SqlTypes.SqlDateTime" /> 结构转换为 <see cref="T:System.DateTime" /> 结构。</summary>
      <param name="x" vsli:raw="A &lt;see cref=&quot;T:System.Data.SqlTypes.SqlDateTime&quot; /&gt; structure.">
        <see cref="T:System.Data.SqlTypes.SqlDateTime" /> 结构。</param>
      <returns vsli:raw="A &lt;see cref=&quot;T:System.DateTime&quot; /&gt; object whose &lt;see cref=&quot;P:System.DateTime.Date&quot; /&gt; and &lt;see cref=&quot;P:System.DateTime.TimeOfDay&quot; /&gt; properties contain the same date and time values as the &lt;see cref=&quot;P:System.Data.SqlTypes.SqlDateTime.Value&quot; /&gt; property of the supplied &lt;see cref=&quot;T:System.Data.SqlTypes.SqlDateTime&quot; /&gt; structure.">一个 <see cref="T:System.DateTime" /> 对象，其 <see cref="P:System.DateTime.Date" /> 和 <see cref="P:System.DateTime.TimeOfDay" /> 属性与提供的 <see cref="P:System.Data.SqlTypes.SqlDateTime.Value" /> 结构的 <see cref="T:System.Data.SqlTypes.SqlDateTime" /> 属性包含相同的日期和时间值。</returns>
    </member>
    <member name="M:System.Data.SqlTypes.SqlDateTime.op_Explicit(System.Data.SqlTypes.SqlString)~System.Data.SqlTypes.SqlDateTime">
      <summary vsli:raw="Converts the &lt;see cref=&quot;T:System.Data.SqlTypes.SqlString&quot; /&gt; parameter to a &lt;see cref=&quot;T:System.Data.SqlTypes.SqlDateTime&quot; /&gt;.">将 <see cref="T:System.Data.SqlTypes.SqlString" /> 参数转换为 <see cref="T:System.Data.SqlTypes.SqlDateTime" />。</summary>
      <param name="x" vsli:raw="A &lt;see cref=&quot;T:System.Data.SqlTypes.SqlString&quot; /&gt;.">
        <see cref="T:System.Data.SqlTypes.SqlString" />。</param>
      <returns vsli:raw="A &lt;see cref=&quot;T:System.Data.SqlTypes.SqlDateTime&quot; /&gt; structure whose &lt;see cref=&quot;P:System.Data.SqlTypes.SqlDateTime.Value&quot; /&gt; is equal to the date and time represented by the &lt;see cref=&quot;T:System.Data.SqlTypes.SqlString&quot; /&gt; parameter. If the &lt;see cref=&quot;T:System.Data.SqlTypes.SqlString&quot; /&gt; is null, the &lt;see langword=&quot;Value&quot; /&gt; of the newly created &lt;see cref=&quot;T:System.Data.SqlTypes.SqlDateTime&quot; /&gt; structure will be null.">一个 <see cref="T:System.Data.SqlTypes.SqlDateTime" /> 结构，其 <see cref="P:System.Data.SqlTypes.SqlDateTime.Value" /> 等于 <see cref="T:System.Data.SqlTypes.SqlString" /> 参数表示的日期和时间。 如果 <see cref="T:System.Data.SqlTypes.SqlString" /> 为 null，则新创建的 <see cref="T:System.Data.SqlTypes.SqlDateTime" /> 结构的 <see langword="Value" /> 将为 Null。</returns>
    </member>
    <member name="M:System.Data.SqlTypes.SqlDateTime.op_GreaterThan(System.Data.SqlTypes.SqlDateTime,System.Data.SqlTypes.SqlDateTime)">
      <summary vsli:raw="Compares two instances of &lt;see cref=&quot;T:System.Data.SqlTypes.SqlDateTime&quot; /&gt; to determine whether the first is greater than the second.">对 <see cref="T:System.Data.SqlTypes.SqlDateTime" /> 的两个实例进行比较，以确定第一个实例是否大于第二个实例。</summary>
      <param name="x" vsli:raw="A &lt;see cref=&quot;T:System.Data.SqlTypes.SqlDateTime&quot; /&gt; structure.">
        <see cref="T:System.Data.SqlTypes.SqlDateTime" /> 结构。</param>
      <param name="y" vsli:raw="A &lt;see cref=&quot;T:System.Data.SqlTypes.SqlDateTime&quot; /&gt; structure.">
        <see cref="T:System.Data.SqlTypes.SqlDateTime" /> 结构。</param>
      <returns vsli:raw="A &lt;see cref=&quot;T:System.Data.SqlTypes.SqlBoolean&quot; /&gt; that is &lt;see cref=&quot;F:System.Data.SqlTypes.SqlBoolean.True&quot; /&gt; if the first instance is greater than the second instance. Otherwise, &lt;see cref=&quot;F:System.Data.SqlTypes.SqlBoolean.False&quot; /&gt;. If either instance of &lt;see cref=&quot;T:System.Data.SqlTypes.SqlBoolean&quot; /&gt; is null, the &lt;see cref=&quot;P:System.Data.SqlTypes.SqlBoolean.Value&quot; /&gt; of the &lt;see cref=&quot;T:System.Data.SqlTypes.SqlBoolean&quot; /&gt; will be &lt;see cref=&quot;F:System.Data.SqlTypes.SqlBoolean.Null&quot; /&gt;.">一个 <see cref="T:System.Data.SqlTypes.SqlBoolean" />，如果第一个实例大于第二个实例，则它为 <see cref="F:System.Data.SqlTypes.SqlBoolean.True" />。 否则为 <see cref="F:System.Data.SqlTypes.SqlBoolean.False" />。 如果 <see cref="T:System.Data.SqlTypes.SqlBoolean" /> 的任一实例为空，则 <see cref="P:System.Data.SqlTypes.SqlBoolean.Value" /> 的 <see cref="T:System.Data.SqlTypes.SqlBoolean" /> 将为 <see cref="F:System.Data.SqlTypes.SqlBoolean.Null" />。</returns>
    </member>
    <member name="M:System.Data.SqlTypes.SqlDateTime.op_GreaterThanOrEqual(System.Data.SqlTypes.SqlDateTime,System.Data.SqlTypes.SqlDateTime)">
      <summary vsli:raw="Compares two instances of &lt;see cref=&quot;T:System.Data.SqlTypes.SqlDateTime&quot; /&gt; to determine whether the first is greater than or equal to the second.">对 <see cref="T:System.Data.SqlTypes.SqlDateTime" /> 的两个实例进行比较，以确定第一个实例是否大于或等于第二个实例。</summary>
      <param name="x" vsli:raw="A &lt;see cref=&quot;T:System.Data.SqlTypes.SqlDateTime&quot; /&gt; structure.">
        <see cref="T:System.Data.SqlTypes.SqlDateTime" /> 结构。</param>
      <param name="y" vsli:raw="A &lt;see cref=&quot;T:System.Data.SqlTypes.SqlDateTime&quot; /&gt; structure.">
        <see cref="T:System.Data.SqlTypes.SqlDateTime" /> 结构。</param>
      <returns vsli:raw="A &lt;see cref=&quot;T:System.Data.SqlTypes.SqlBoolean&quot; /&gt; that is &lt;see cref=&quot;F:System.Data.SqlTypes.SqlBoolean.True&quot; /&gt; if the first instance is greater than or equal to the second instance. Otherwise, &lt;see cref=&quot;F:System.Data.SqlTypes.SqlBoolean.False&quot; /&gt;. If either instance of &lt;see cref=&quot;T:System.Data.SqlTypes.SqlDateTime&quot; /&gt; is null, the &lt;see cref=&quot;P:System.Data.SqlTypes.SqlBoolean.Value&quot; /&gt; of the &lt;see cref=&quot;T:System.Data.SqlTypes.SqlBoolean&quot; /&gt; will be &lt;see cref=&quot;F:System.Data.SqlTypes.SqlBoolean.Null&quot; /&gt;.">一个 <see cref="T:System.Data.SqlTypes.SqlBoolean" />，如果第一个实例大于或等于第二个实例，则为 <see cref="F:System.Data.SqlTypes.SqlBoolean.True" />。 否则为 <see cref="F:System.Data.SqlTypes.SqlBoolean.False" />。 如果 <see cref="T:System.Data.SqlTypes.SqlDateTime" /> 的任一实例为空，则 <see cref="P:System.Data.SqlTypes.SqlBoolean.Value" /> 的 <see cref="T:System.Data.SqlTypes.SqlBoolean" /> 将为 <see cref="F:System.Data.SqlTypes.SqlBoolean.Null" />。</returns>
    </member>
    <member name="M:System.Data.SqlTypes.SqlDateTime.op_Implicit(System.DateTime)~System.Data.SqlTypes.SqlDateTime">
      <summary vsli:raw="Converts a &lt;see cref=&quot;T:System.DateTime&quot; /&gt; structure to a &lt;see cref=&quot;T:System.Data.SqlTypes.SqlDateTime&quot; /&gt; structure.">将 <see cref="T:System.DateTime" /> 结构转换为 <see cref="T:System.Data.SqlTypes.SqlDateTime" /> 结构。</summary>
      <param name="value" vsli:raw="A &lt;see langword=&quot;DateTime&quot; /&gt; structure.">
        <see langword="DateTime" /> 结构。</param>
      <returns vsli:raw="A &lt;see cref=&quot;T:System.Data.SqlTypes.SqlDateTime&quot; /&gt; structure whose &lt;see cref=&quot;P:System.Data.SqlTypes.SqlDateTime.Value&quot; /&gt; is equal to the combined &lt;see cref=&quot;P:System.DateTime.Date&quot; /&gt; and &lt;see cref=&quot;P:System.DateTime.TimeOfDay&quot; /&gt; properties of the supplied &lt;see cref=&quot;T:System.DateTime&quot; /&gt; structure.">一个 <see cref="T:System.Data.SqlTypes.SqlDateTime" /> 结构，其 <see cref="P:System.Data.SqlTypes.SqlDateTime.Value" /> 等于提供的 <see cref="P:System.DateTime.Date" /> 结构的 <see cref="P:System.DateTime.TimeOfDay" /> 和 <see cref="T:System.DateTime" /> 属性的组合。</returns>
    </member>
    <member name="M:System.Data.SqlTypes.SqlDateTime.op_Inequality(System.Data.SqlTypes.SqlDateTime,System.Data.SqlTypes.SqlDateTime)">
      <summary vsli:raw="Performs a logical comparison of two instances of &lt;see cref=&quot;T:System.Data.SqlTypes.SqlDateTime&quot; /&gt; to determine whether they are not equal.">对 <see cref="T:System.Data.SqlTypes.SqlDateTime" /> 的两个实例执行逻辑比较，确定它们是否相等。</summary>
      <param name="x" vsli:raw="A &lt;see cref=&quot;T:System.Data.SqlTypes.SqlDateTime&quot; /&gt; structure.">
        <see cref="T:System.Data.SqlTypes.SqlDateTime" /> 结构。</param>
      <param name="y" vsli:raw="A &lt;see cref=&quot;T:System.Data.SqlTypes.SqlDateTime&quot; /&gt; structure.">
        <see cref="T:System.Data.SqlTypes.SqlDateTime" /> 结构。</param>
      <returns vsli:raw="A &lt;see cref=&quot;T:System.Data.SqlTypes.SqlBoolean&quot; /&gt; that is &lt;see cref=&quot;F:System.Data.SqlTypes.SqlBoolean.True&quot; /&gt; if the two instances are not equal or &lt;see cref=&quot;F:System.Data.SqlTypes.SqlBoolean.False&quot; /&gt; if the two instances are equal. If either instance of &lt;see cref=&quot;T:System.Data.SqlTypes.SqlDateTime&quot; /&gt; is null, the &lt;see cref=&quot;P:System.Data.SqlTypes.SqlBoolean.Value&quot; /&gt; of the &lt;see cref=&quot;T:System.Data.SqlTypes.SqlBoolean&quot; /&gt; will be &lt;see cref=&quot;F:System.Data.SqlTypes.SqlBoolean.Null&quot; /&gt;.">一个 <see cref="T:System.Data.SqlTypes.SqlBoolean" />，它在两个实例不等时为 <see cref="F:System.Data.SqlTypes.SqlBoolean.True" />，在两个实例相等时为 <see cref="F:System.Data.SqlTypes.SqlBoolean.False" />。 如果 <see cref="T:System.Data.SqlTypes.SqlDateTime" /> 的任一实例为空，则 <see cref="P:System.Data.SqlTypes.SqlBoolean.Value" /> 的 <see cref="T:System.Data.SqlTypes.SqlBoolean" /> 将为 <see cref="F:System.Data.SqlTypes.SqlBoolean.Null" />。</returns>
    </member>
    <member name="M:System.Data.SqlTypes.SqlDateTime.op_LessThan(System.Data.SqlTypes.SqlDateTime,System.Data.SqlTypes.SqlDateTime)">
      <summary vsli:raw="Compares two instances of &lt;see cref=&quot;T:System.Data.SqlTypes.SqlDateTime&quot; /&gt; to determine whether the first is less than the second.">对 <see cref="T:System.Data.SqlTypes.SqlDateTime" /> 的两个实例进行比较，以确定第一个实例是否小于第二个实例。</summary>
      <param name="x" vsli:raw="A &lt;see cref=&quot;T:System.Data.SqlTypes.SqlDateTime&quot; /&gt; structure.">
        <see cref="T:System.Data.SqlTypes.SqlDateTime" /> 结构。</param>
      <param name="y" vsli:raw="A &lt;see cref=&quot;T:System.Data.SqlTypes.SqlDateTime&quot; /&gt; structure.">
        <see cref="T:System.Data.SqlTypes.SqlDateTime" /> 结构。</param>
      <returns vsli:raw="A &lt;see cref=&quot;T:System.Data.SqlTypes.SqlBoolean&quot; /&gt; that is &lt;see cref=&quot;F:System.Data.SqlTypes.SqlBoolean.True&quot; /&gt; if the first instance is less than the second instance. Otherwise, &lt;see cref=&quot;F:System.Data.SqlTypes.SqlBoolean.False&quot; /&gt;. If either instance of &lt;see cref=&quot;T:System.Data.SqlTypes.SqlDateTime&quot; /&gt; is null, the &lt;see cref=&quot;P:System.Data.SqlTypes.SqlBoolean.Value&quot; /&gt; of the &lt;see cref=&quot;T:System.Data.SqlTypes.SqlBoolean&quot; /&gt; will be &lt;see cref=&quot;F:System.Data.SqlTypes.SqlBoolean.Null&quot; /&gt;.">一个 <see cref="T:System.Data.SqlTypes.SqlBoolean" />，如果第一个实例小于第二个实例，则它为 <see cref="F:System.Data.SqlTypes.SqlBoolean.True" />。 否则为 <see cref="F:System.Data.SqlTypes.SqlBoolean.False" />。 如果 <see cref="T:System.Data.SqlTypes.SqlDateTime" /> 的任一实例为空，则 <see cref="P:System.Data.SqlTypes.SqlBoolean.Value" /> 的 <see cref="T:System.Data.SqlTypes.SqlBoolean" /> 将为 <see cref="F:System.Data.SqlTypes.SqlBoolean.Null" />。</returns>
    </member>
    <member name="M:System.Data.SqlTypes.SqlDateTime.op_LessThanOrEqual(System.Data.SqlTypes.SqlDateTime,System.Data.SqlTypes.SqlDateTime)">
      <summary vsli:raw="Compares two instances of &lt;see cref=&quot;T:System.Data.SqlTypes.SqlDateTime&quot; /&gt; to determine whether the first is less than or equal to the second.">对 <see cref="T:System.Data.SqlTypes.SqlDateTime" /> 的两个实例进行比较，以确定第一个实例是否小于或等于第二个实例。</summary>
      <param name="x" vsli:raw="A &lt;see cref=&quot;T:System.Data.SqlTypes.SqlDateTime&quot; /&gt; structure.">
        <see cref="T:System.Data.SqlTypes.SqlDateTime" /> 结构。</param>
      <param name="y" vsli:raw="A &lt;see cref=&quot;T:System.Data.SqlTypes.SqlDateTime&quot; /&gt; structure.">
        <see cref="T:System.Data.SqlTypes.SqlDateTime" /> 结构。</param>
      <returns vsli:raw="A &lt;see cref=&quot;T:System.Data.SqlTypes.SqlBoolean&quot; /&gt; that is &lt;see cref=&quot;F:System.Data.SqlTypes.SqlBoolean.True&quot; /&gt; if the first instance is less than or equal to the second instance. Otherwise, &lt;see cref=&quot;F:System.Data.SqlTypes.SqlBoolean.False&quot; /&gt;. If either instance of &lt;see cref=&quot;T:System.Data.SqlTypes.SqlDateTime&quot; /&gt; is null, the &lt;see cref=&quot;P:System.Data.SqlTypes.SqlBoolean.Value&quot; /&gt; of the &lt;see cref=&quot;T:System.Data.SqlTypes.SqlBoolean&quot; /&gt; will be &lt;see cref=&quot;F:System.Data.SqlTypes.SqlBoolean.Null&quot; /&gt;.">一个 <see cref="T:System.Data.SqlTypes.SqlBoolean" />，如果第一个实例小于或等于第二个实例，则它为 <see cref="F:System.Data.SqlTypes.SqlBoolean.True" />。 否则为 <see cref="F:System.Data.SqlTypes.SqlBoolean.False" />。 如果 <see cref="T:System.Data.SqlTypes.SqlDateTime" /> 的任一实例为空，则 <see cref="P:System.Data.SqlTypes.SqlBoolean.Value" /> 的 <see cref="T:System.Data.SqlTypes.SqlBoolean" /> 将为 <see cref="F:System.Data.SqlTypes.SqlBoolean.Null" />。</returns>
    </member>
    <member name="M:System.Data.SqlTypes.SqlDateTime.op_Subtraction(System.Data.SqlTypes.SqlDateTime,System.TimeSpan)">
      <summary vsli:raw="Subtracts the supplied &lt;see cref=&quot;T:System.TimeSpan&quot; /&gt; structure, &lt;paramref name=&quot;t&quot; /&gt;, from the supplied &lt;see cref=&quot;T:System.Data.SqlTypes.SqlDateTime&quot; /&gt; structure.">从提供的 <see cref="T:System.TimeSpan" /> 结构中减去提供的 <see cref="T:System.Data.SqlTypes.SqlDateTime" /> 结构 <paramref name="t" />。</summary>
      <param name="x" vsli:raw="A &lt;see cref=&quot;T:System.Data.SqlTypes.SqlDateTime&quot; /&gt; structure.">
        <see cref="T:System.Data.SqlTypes.SqlDateTime" /> 结构。</param>
      <param name="t" vsli:raw="A &lt;see cref=&quot;T:System.TimeSpan&quot; /&gt; structure.">
        <see cref="T:System.TimeSpan" /> 结构。</param>
      <returns vsli:raw="A &lt;see cref=&quot;T:System.Data.SqlTypes.SqlDateTime&quot; /&gt; structure representing the results of the subtraction.">一个 <see cref="T:System.Data.SqlTypes.SqlDateTime" /> 结构，它表示该减法运算的结果。</returns>
    </member>
    <member name="M:System.Data.SqlTypes.SqlDateTime.Parse(System.String)">
      <summary vsli:raw="Converts the specified &lt;see cref=&quot;T:System.String&quot; /&gt; representation of a date and time to its &lt;see cref=&quot;T:System.Data.SqlTypes.SqlDateTime&quot; /&gt; equivalent.">将日期和时间的指定的 <see cref="T:System.String" /> 表示形式转换为其等效的 <see cref="T:System.Data.SqlTypes.SqlDateTime" /> 形式。</summary>
      <param name="s" vsli:raw="The &lt;see langword=&quot;string&quot; /&gt; to be parsed.">要分析的 <see langword="string" />。</param>
      <returns vsli:raw="A &lt;see cref=&quot;T:System.Data.SqlTypes.SqlDateTime&quot; /&gt; structure equal to the date and time represented by the specified &lt;see langword=&quot;string&quot; /&gt;.">一个 <see cref="T:System.Data.SqlTypes.SqlDateTime" /> 结构，它等于指定的 <see langword="string" /> 表示的日期和时间。</returns>
    </member>
    <member name="M:System.Data.SqlTypes.SqlDateTime.Subtract(System.Data.SqlTypes.SqlDateTime,System.TimeSpan)">
      <summary vsli:raw="Subtracts the specified &lt;see langword=&quot;Timespan&quot; /&gt; from this &lt;see cref=&quot;T:System.Data.SqlTypes.SqlDateTime&quot; /&gt; instance.">从此 <see cref="T:System.Data.SqlTypes.SqlDateTime" /> 实例中减去指定的 <see langword="Timespan" />。</summary>
      <param name="x" vsli:raw="A &lt;see cref=&quot;T:System.Data.SqlTypes.SqlDateTime&quot; /&gt; value.">一个 <see cref="T:System.Data.SqlTypes.SqlDateTime" /> 值。</param>
      <param name="t" vsli:raw="A &lt;see langword=&quot;Timespan&quot; /&gt; value.">一个 <see langword="Timespan" /> 值。</param>
      <returns vsli:raw="A &lt;see cref=&quot;T:System.Data.SqlTypes.SqlDateTime&quot; /&gt; value.">一个 <see cref="T:System.Data.SqlTypes.SqlDateTime" /> 值。</returns>
    </member>
    <member name="M:System.Data.SqlTypes.SqlDateTime.System#Xml#Serialization#IXmlSerializable#GetSchema">
      <summary vsli:raw="This member supports the .NET Framework infrastructure and is not intended to be used directly from your code.">此成员支持 .NET Framework 结构，不能在代码中直接使用。</summary>
      <returns vsli:raw="An &lt;see langword=&quot;XmlSchema&quot; /&gt;.">
        <see langword="XmlSchema" />。</returns>
    </member>
    <member name="M:System.Data.SqlTypes.SqlDateTime.System#Xml#Serialization#IXmlSerializable#ReadXml(System.Xml.XmlReader)">
      <summary vsli:raw="This member supports the .NET Framework infrastructure and is not intended to be used directly from your code.">此成员支持 .NET Framework 结构，不能在代码中直接使用。</summary>
      <param name="reader" vsli:raw="&lt;see langword=&quot;XmlReader&quot; /&gt;">
        <see langword="XmlReader" />
      </param>
    </member>
    <member name="M:System.Data.SqlTypes.SqlDateTime.System#Xml#Serialization#IXmlSerializable#WriteXml(System.Xml.XmlWriter)">
      <summary vsli:raw="This member supports the .NET Framework infrastructure and is not intended to be used directly from your code.">此成员支持 .NET Framework 结构，不能在代码中直接使用。</summary>
      <param name="writer" vsli:raw="&lt;see langword=&quot;XmlWriter&quot; /&gt;">
        <see langword="XmlWriter" />
      </param>
    </member>
    <member name="M:System.Data.SqlTypes.SqlDateTime.ToSqlString">
      <summary vsli:raw="Converts this &lt;see cref=&quot;T:System.Data.SqlTypes.SqlDateTime&quot; /&gt; structure to &lt;see cref=&quot;T:System.Data.SqlTypes.SqlString&quot; /&gt;.">将此 <see cref="T:System.Data.SqlTypes.SqlDateTime" /> 结构转换为 <see cref="T:System.Data.SqlTypes.SqlString" />。</summary>
      <returns vsli:raw="A &lt;see langword=&quot;SqlString&quot; /&gt; structure whose value is a string representing the date and time that is contained in this &lt;see cref=&quot;T:System.Data.SqlTypes.SqlDateTime&quot; /&gt; structure.">一个 <see langword="SqlString" /> 结构，其值是表示此 <see cref="T:System.Data.SqlTypes.SqlDateTime" /> 结构中包含的日期和时间的字符串。</returns>
    </member>
    <member name="M:System.Data.SqlTypes.SqlDateTime.ToString">
      <summary vsli:raw="Converts this &lt;see cref=&quot;T:System.Data.SqlTypes.SqlDateTime&quot; /&gt; structure to a &lt;see cref=&quot;T:System.String&quot; /&gt;.">将此 <see cref="T:System.Data.SqlTypes.SqlDateTime" /> 结构转换为 <see cref="T:System.String" />。</summary>
      <returns vsli:raw="A &lt;see langword=&quot;String&quot; /&gt; representing the &lt;see cref=&quot;P:System.Data.SqlTypes.SqlDateTime.Value&quot; /&gt; property of this &lt;see cref=&quot;T:System.Data.SqlTypes.SqlDateTime&quot; /&gt; structure.">一个 <see langword="String" />，它表示此 <see cref="P:System.Data.SqlTypes.SqlDateTime.Value" /> 结构的 <see cref="T:System.Data.SqlTypes.SqlDateTime" /> 属性。</returns>
    </member>
    <member name="P:System.Data.SqlTypes.SqlDateTime.DayTicks">
      <summary vsli:raw="Gets the number of ticks representing the date of this &lt;see cref=&quot;T:System.Data.SqlTypes.SqlDateTime&quot; /&gt; structure.">获取刻度数，它表示此 <see cref="T:System.Data.SqlTypes.SqlDateTime" /> 结构的日期。</summary>
      <exception cref="T:System.Data.SqlTypes.SqlNullValueException" vsli:raw="The exception that is thrown when the &lt;see langword=&quot;Value&quot; /&gt; property of a &lt;see cref=&quot;N:System.Data.SqlTypes&quot; /&gt; structure is set to null.">当 <see langword="Value" /> 结构的 <see cref="N:System.Data.SqlTypes" /> 属性设置为 null 时所引发的异常。</exception>
      <returns vsli:raw="The number of ticks representing the date that is contained in the &lt;see cref=&quot;P:System.Data.SqlTypes.SqlDateTime.Value&quot; /&gt; property of this &lt;see cref=&quot;T:System.Data.SqlTypes.SqlDateTime&quot; /&gt; structure.">刻度数，表示此 <see cref="P:System.Data.SqlTypes.SqlDateTime.Value" /> 结构的 <see cref="T:System.Data.SqlTypes.SqlDateTime" /> 属性中包含的日期。</returns>
    </member>
    <member name="P:System.Data.SqlTypes.SqlDateTime.IsNull">
      <summary vsli:raw="Indicates whether this &lt;see cref=&quot;T:System.Data.SqlTypes.SqlDateTime&quot; /&gt; structure is null.">指示此 <see cref="T:System.Data.SqlTypes.SqlDateTime" /> 结构是否为 null。</summary>
      <returns vsli:raw="&lt;see langword=&quot;true&quot; /&gt; if null. Otherwise, &lt;see langword=&quot;false&quot; /&gt;.">如果为 null，则返回 <see langword="true" />。 否则为 <see langword="false" />。</returns>
    </member>
    <member name="P:System.Data.SqlTypes.SqlDateTime.TimeTicks">
      <summary vsli:raw="Gets the number of ticks representing the time of this &lt;see cref=&quot;T:System.Data.SqlTypes.SqlDateTime&quot; /&gt; structure.">获取表示此 <see cref="T:System.Data.SqlTypes.SqlDateTime" /> 结构的时间的刻度数。</summary>
      <returns vsli:raw="The number of ticks representing the time of this &lt;see cref=&quot;T:System.Data.SqlTypes.SqlDateTime&quot; /&gt; structure.">表示此 <see cref="T:System.Data.SqlTypes.SqlDateTime" /> 结构的时间的刻度数。</returns>
    </member>
    <member name="P:System.Data.SqlTypes.SqlDateTime.Value">
      <summary vsli:raw="Gets the value of the &lt;see cref=&quot;T:System.Data.SqlTypes.SqlDateTime&quot; /&gt; structure. This property is read-only.">获取 <see cref="T:System.Data.SqlTypes.SqlDateTime" /> 结构的值。 此属性是只读的。</summary>
      <exception cref="T:System.Data.SqlTypes.SqlNullValueException" vsli:raw="The exception that is thrown when the &lt;see langword=&quot;Value&quot; /&gt; property of a &lt;see cref=&quot;N:System.Data.SqlTypes&quot; /&gt; structure is set to null.">当 <see langword="Value" /> 结构的 <see cref="N:System.Data.SqlTypes" /> 属性设置为 null 时所引发的异常。</exception>
      <returns vsli:raw="The value of this &lt;see cref=&quot;T:System.Data.SqlTypes.SqlDateTime&quot; /&gt; structure.">此 <see cref="T:System.Data.SqlTypes.SqlDateTime" /> 结构的值。</returns>
    </member>
    <member name="T:System.Data.SqlTypes.SqlDecimal">
      <summary vsli:raw="Represents a numeric value between - 10^38 +1 and 10^38 - 1, with fixed precision and scale.">表示具有固定精度和小数位数的数值，该数值介于 - 10^38 +1 和 10^38 - 1 之间。</summary>
    </member>
    <member name="F:System.Data.SqlTypes.SqlDecimal.MaxPrecision">
      <summary vsli:raw="A constant representing the largest possible value for the &lt;see cref=&quot;P:System.Data.SqlTypes.SqlDecimal.Precision&quot; /&gt; property.">一个常数，它表示 <see cref="P:System.Data.SqlTypes.SqlDecimal.Precision" /> 属性的可能的最大值。</summary>
    </member>
    <member name="F:System.Data.SqlTypes.SqlDecimal.MaxScale">
      <summary vsli:raw="A constant representing the maximum value for the &lt;see cref=&quot;P:System.Data.SqlTypes.SqlDecimal.Scale&quot; /&gt; property.">一个常数，它表示 <see cref="P:System.Data.SqlTypes.SqlDecimal.Scale" /> 属性的最大值。</summary>
    </member>
    <member name="F:System.Data.SqlTypes.SqlDecimal.MaxValue">
      <summary vsli:raw="A constant representing the maximum value of a &lt;see cref=&quot;T:System.Data.SqlTypes.SqlDecimal&quot; /&gt; structure.">一个常数，它表示 <see cref="T:System.Data.SqlTypes.SqlDecimal" /> 结构的最大值。</summary>
    </member>
    <member name="F:System.Data.SqlTypes.SqlDecimal.MinValue">
      <summary vsli:raw="A constant representing the minimum value for a &lt;see cref=&quot;T:System.Data.SqlTypes.SqlDecimal&quot; /&gt; structure.">一个常数，它表示 <see cref="T:System.Data.SqlTypes.SqlDecimal" /> 结构的最小值。</summary>
    </member>
    <member name="F:System.Data.SqlTypes.SqlDecimal.Null">
      <summary vsli:raw="Represents a &lt;see cref=&quot;T:System.DBNull&quot; /&gt; that can be assigned to this instance of the &lt;see cref=&quot;T:System.Data.SqlTypes.SqlDecimal&quot; /&gt; class.">表示可指派给 <see cref="T:System.DBNull" /> 类的此实例的 <see cref="T:System.Data.SqlTypes.SqlDecimal" />。</summary>
    </member>
    <member name="M:System.Data.SqlTypes.SqlDecimal.#ctor(System.Byte,System.Byte,System.Boolean,System.Int32,System.Int32,System.Int32,System.Int32)">
      <summary vsli:raw="Initializes a new instance of the &lt;see cref=&quot;T:System.Data.SqlTypes.SqlDecimal&quot; /&gt; structure using the supplied parameters.">使用提供的参数初始化 <see cref="T:System.Data.SqlTypes.SqlDecimal" /> 结构的新实例。</summary>
      <param name="bPrecision" vsli:raw="The maximum number of digits that can be used to represent the &lt;see cref=&quot;P:System.Data.SqlTypes.SqlDecimal.Value&quot; /&gt; property of the new &lt;see cref=&quot;T:System.Data.SqlTypes.SqlDecimal&quot; /&gt; structure.">可用来表示新 <see cref="P:System.Data.SqlTypes.SqlDecimal.Value" /> 结构的 <see cref="T:System.Data.SqlTypes.SqlDecimal" /> 属性的最大位数。</param>
      <param name="bScale" vsli:raw="The number of decimal places to which the &lt;see cref=&quot;P:System.Data.SqlTypes.SqlDecimal.Value&quot; /&gt; property will be resolved for the new &lt;see cref=&quot;T:System.Data.SqlTypes.SqlDecimal&quot; /&gt; structure.">新 <see cref="P:System.Data.SqlTypes.SqlDecimal.Value" /> 结构的 <see cref="T:System.Data.SqlTypes.SqlDecimal" /> 属性将解析为的小数位数。</param>
      <param name="fPositive" vsli:raw="A Boolean value that indicates whether the new &lt;see cref=&quot;T:System.Data.SqlTypes.SqlDecimal&quot; /&gt; structure represents a positive or negative number.">一个布尔值，它指示新的 <see cref="T:System.Data.SqlTypes.SqlDecimal" /> 结构是表示正数还是负数。</param>
      <param name="data1" vsli:raw="An 32-bit unsigned integer which will be combined with data2, data3, and data4 to make up the 128-bit unsigned integer that represents the new &lt;see cref=&quot;T:System.Data.SqlTypes.SqlDecimal&quot; /&gt; structures value.">一个 32 位无符号整数，它将与 data2、data3 和 data4 结合，以组成一个 128 位无符号整数，该整数表示新 <see cref="T:System.Data.SqlTypes.SqlDecimal" /> 结构值。</param>
      <param name="data2" vsli:raw="An 32-bit unsigned integer which will be combined with data1, data3, and data4 to make up the 128-bit unsigned integer that represents the new &lt;see cref=&quot;T:System.Data.SqlTypes.SqlDecimal&quot; /&gt; structures value.">一个 32 位无符号整数，它将与 data1、data3 和 data4 结合，以组成一个 128 位无符号整数，该整数表示新 <see cref="T:System.Data.SqlTypes.SqlDecimal" /> 结构值。</param>
      <param name="data3" vsli:raw="An 32-bit unsigned integer which will be combined with data1, data2, and data4 to make up the 128-bit unsigned integer that represents the new &lt;see cref=&quot;T:System.Data.SqlTypes.SqlDecimal&quot; /&gt; structures value.">一个 32 位无符号整数，它将与 data1、data2 和 data4 结合，以组成一个 128 位无符号整数，该整数表示新 <see cref="T:System.Data.SqlTypes.SqlDecimal" /> 结构值。</param>
      <param name="data4" vsli:raw="An 32-bit unsigned integer which will be combined with data1, data2, and data3 to make up the 128-bit unsigned integer that represents the new &lt;see cref=&quot;T:System.Data.SqlTypes.SqlDecimal&quot; /&gt; structures value.">一个 32 位无符号整数，它将与 data1、data2 和 data3 结合，以组成一个 128 位无符号整数，该整数表示新 <see cref="T:System.Data.SqlTypes.SqlDecimal" /> 结构值。</param>
    </member>
    <member name="M:System.Data.SqlTypes.SqlDecimal.#ctor(System.Byte,System.Byte,System.Boolean,System.Int32[])">
      <summary vsli:raw="Initializes a new instance of the &lt;see cref=&quot;T:System.Data.SqlTypes.SqlDecimal&quot; /&gt; structure using the supplied parameters.">使用提供的参数初始化 <see cref="T:System.Data.SqlTypes.SqlDecimal" /> 结构的新实例。</summary>
      <param name="bPrecision" vsli:raw="The maximum number of digits that can be used to represent the &lt;see cref=&quot;P:System.Data.SqlTypes.SqlDecimal.Value&quot; /&gt; property of the new &lt;see cref=&quot;T:System.Data.SqlTypes.SqlDecimal&quot; /&gt; structure.">可用来表示新 <see cref="P:System.Data.SqlTypes.SqlDecimal.Value" /> 结构的 <see cref="T:System.Data.SqlTypes.SqlDecimal" /> 属性的最大位数。</param>
      <param name="bScale" vsli:raw="The number of decimal places to which the &lt;see cref=&quot;P:System.Data.SqlTypes.SqlDecimal.Value&quot; /&gt; property will be resolved for the new &lt;see cref=&quot;T:System.Data.SqlTypes.SqlDecimal&quot; /&gt; structure.">新 <see cref="P:System.Data.SqlTypes.SqlDecimal.Value" /> 结构的 <see cref="T:System.Data.SqlTypes.SqlDecimal" /> 属性将解析为的小数位数。</param>
      <param name="fPositive" vsli:raw="A Boolean value that indicates whether the new &lt;see cref=&quot;T:System.Data.SqlTypes.SqlDecimal&quot; /&gt; structure represents a positive or negative number.">一个布尔值，它指示新的 <see cref="T:System.Data.SqlTypes.SqlDecimal" /> 结构是表示正数还是负数。</param>
      <param name="bits" vsli:raw="The 128-bit unsigned integer that provides the value of the new &lt;see cref=&quot;T:System.Data.SqlTypes.SqlDecimal&quot; /&gt;.">128 位无符号整数，提供新 <see cref="T:System.Data.SqlTypes.SqlDecimal" /> 的值。</param>
    </member>
    <member name="M:System.Data.SqlTypes.SqlDecimal.#ctor(System.Decimal)">
      <summary vsli:raw="Initializes a new instance of the &lt;see cref=&quot;T:System.Data.SqlTypes.SqlDecimal&quot; /&gt; structure using the supplied &lt;see cref=&quot;T:System.Decimal&quot; /&gt; value.">使用提供的 <see cref="T:System.Data.SqlTypes.SqlDecimal" /> 值初始化 <see cref="T:System.Decimal" /> 结构的新实例。</summary>
      <param name="value" vsli:raw="The &lt;see cref=&quot;T:System.Decimal&quot; /&gt; value to be stored as a &lt;see cref=&quot;T:System.Data.SqlTypes.SqlDecimal&quot; /&gt; structure.">要作为 <see cref="T:System.Decimal" /> 结构存储的 <see cref="T:System.Data.SqlTypes.SqlDecimal" /> 值。</param>
    </member>
    <member name="M:System.Data.SqlTypes.SqlDecimal.#ctor(System.Double)">
      <summary vsli:raw="Initializes a new instance of the &lt;see cref=&quot;T:System.Data.SqlTypes.SqlDecimal&quot; /&gt; structure using the supplied double parameter.">使用提供的 double 类型的参数初始化 <see cref="T:System.Data.SqlTypes.SqlDecimal" /> 结构的新实例。</summary>
      <param name="dVal" vsli:raw="A double, representing the value for the new &lt;see cref=&quot;T:System.Data.SqlTypes.SqlDecimal&quot; /&gt; structure.">一个双精度型值，它表示新 <see cref="T:System.Data.SqlTypes.SqlDecimal" /> 结构的值。</param>
    </member>
    <member name="M:System.Data.SqlTypes.SqlDecimal.#ctor(System.Int32)">
      <summary vsli:raw="Initializes a new instance of the &lt;see cref=&quot;T:System.Data.SqlTypes.SqlDecimal&quot; /&gt; structure using the supplied integer value.">使用提供的整数值初始化 <see cref="T:System.Data.SqlTypes.SqlDecimal" /> 结构的新实例。</summary>
      <param name="value" vsli:raw="The supplied integer value which will the used as the value of the new &lt;see cref=&quot;T:System.Data.SqlTypes.SqlDecimal&quot; /&gt; structure.">提供的整数值，它将用作新 <see cref="T:System.Data.SqlTypes.SqlDecimal" /> 结构的值。</param>
    </member>
    <member name="M:System.Data.SqlTypes.SqlDecimal.#ctor(System.Int64)">
      <summary vsli:raw="Initializes a new instance of the &lt;see cref=&quot;T:System.Data.SqlTypes.SqlDecimal&quot; /&gt; structure using the supplied long integer value.">使用提供的长整数值初始化 <see cref="T:System.Data.SqlTypes.SqlDecimal" /> 结构的新实例。</summary>
      <param name="value" vsli:raw="The supplied long integer value which will the used as the value of the new &lt;see cref=&quot;T:System.Data.SqlTypes.SqlDecimal&quot; /&gt; structure.">提供的长整型值，它将用作新 <see cref="T:System.Data.SqlTypes.SqlDecimal" /> 结构的值。</param>
    </member>
    <member name="M:System.Data.SqlTypes.SqlDecimal.Abs(System.Data.SqlTypes.SqlDecimal)">
      <summary vsli:raw="The Abs method gets the absolute value of the &lt;see cref=&quot;T:System.Data.SqlTypes.SqlDecimal&quot; /&gt; parameter.">Abs 方法获取 <see cref="T:System.Data.SqlTypes.SqlDecimal" /> 参数的绝对值。</summary>
      <param name="n" vsli:raw="A &lt;see cref=&quot;T:System.Data.SqlTypes.SqlDecimal&quot; /&gt; structure.">
        <see cref="T:System.Data.SqlTypes.SqlDecimal" /> 结构。</param>
      <returns vsli:raw="A &lt;see cref=&quot;T:System.Data.SqlTypes.SqlDecimal&quot; /&gt; structure whose &lt;see cref=&quot;P:System.Data.SqlTypes.SqlDecimal.Value&quot; /&gt; property contains the unsigned number representing the absolute value of the &lt;see cref=&quot;T:System.Data.SqlTypes.SqlDecimal&quot; /&gt; parameter.">一个 <see cref="T:System.Data.SqlTypes.SqlDecimal" /> 结构，其 <see cref="P:System.Data.SqlTypes.SqlDecimal.Value" /> 属性包含表示 <see cref="T:System.Data.SqlTypes.SqlDecimal" /> 参数的绝对值的无符号数字。</returns>
    </member>
    <member name="M:System.Data.SqlTypes.SqlDecimal.Add(System.Data.SqlTypes.SqlDecimal,System.Data.SqlTypes.SqlDecimal)">
      <summary vsli:raw="Calculates the sum of the two &lt;see cref=&quot;T:System.Data.SqlTypes.SqlDecimal&quot; /&gt; operators.">计算两个 <see cref="T:System.Data.SqlTypes.SqlDecimal" /> 操作数的和。</summary>
      <param name="x" vsli:raw="A &lt;see cref=&quot;T:System.Data.SqlTypes.SqlDecimal&quot; /&gt; structure.">
        <see cref="T:System.Data.SqlTypes.SqlDecimal" /> 结构。</param>
      <param name="y" vsli:raw="A &lt;see cref=&quot;T:System.Data.SqlTypes.SqlDecimal&quot; /&gt; structure.">
        <see cref="T:System.Data.SqlTypes.SqlDecimal" /> 结构。</param>
      <returns vsli:raw="A new &lt;see cref=&quot;T:System.Data.SqlTypes.SqlDecimal&quot; /&gt; structure whose &lt;see cref=&quot;P:System.Data.SqlTypes.SqlDecimal.Value&quot; /&gt; property contains the sum.">一个新的 <see cref="T:System.Data.SqlTypes.SqlDecimal" /> 结构，它的 <see cref="P:System.Data.SqlTypes.SqlDecimal.Value" /> 属性包含该和。</returns>
    </member>
    <member name="M:System.Data.SqlTypes.SqlDecimal.AdjustScale(System.Data.SqlTypes.SqlDecimal,System.Int32,System.Boolean)">
      <summary vsli:raw="The scale of the &lt;see cref=&quot;T:System.Data.SqlTypes.SqlDecimal&quot; /&gt; operand will be adjusted to the number of digits indicated by the digits parameter. Depending on the value of the fRound parameter, the value will either be rounded to the appropriate number of digits or truncated.">将 <see cref="T:System.Data.SqlTypes.SqlDecimal" /> 操作数的小数位数调整为位数参数指示的位数。 取决于 fRound 参数的值，该值将舍入到适当的位数或者截断。</summary>
      <param name="n" vsli:raw="The &lt;see cref=&quot;T:System.Data.SqlTypes.SqlDecimal&quot; /&gt; structure to be adjusted.">要调整的 <see cref="T:System.Data.SqlTypes.SqlDecimal" /> 结构。</param>
      <param name="digits" vsli:raw="The number of digits in the adjusted structure.">已调整的结构的位数。</param>
      <param name="fRound" vsli:raw="If this parameter is &lt;see langword=&quot;true&quot; /&gt;, the new Value will be rounded, if &lt;see langword=&quot;false&quot; /&gt;, the value will be truncated.">如果此参数是 <see langword="true" />，将舍入新值，如果为 <see langword="false" />，将截断该值。</param>
      <returns vsli:raw="A new &lt;see cref=&quot;T:System.Data.SqlTypes.SqlDecimal&quot; /&gt; structure whose &lt;see cref=&quot;P:System.Data.SqlTypes.SqlDecimal.Value&quot; /&gt; property contains the adjusted number.">一个新的 <see cref="T:System.Data.SqlTypes.SqlDecimal" /> 结构，它的 <see cref="P:System.Data.SqlTypes.SqlDecimal.Value" /> 属性包含调整后的数字。</returns>
    </member>
    <member name="M:System.Data.SqlTypes.SqlDecimal.Ceiling(System.Data.SqlTypes.SqlDecimal)">
      <summary vsli:raw="Returns the smallest whole number greater than or equal to the specified &lt;see cref=&quot;T:System.Data.SqlTypes.SqlDecimal&quot; /&gt; structure.">返回大于或等于指定 <see cref="T:System.Data.SqlTypes.SqlDecimal" /> 结构的最小整数。</summary>
      <param name="n" vsli:raw="The &lt;see cref=&quot;T:System.Data.SqlTypes.SqlDecimal&quot; /&gt; structure for which the ceiling value is to be calculated.">
        <see cref="T:System.Data.SqlTypes.SqlDecimal" /> 结构，将要计算其最大值。</param>
      <returns vsli:raw="A &lt;see cref=&quot;T:System.Data.SqlTypes.SqlDecimal&quot; /&gt; representing the smallest whole number greater than or equal to the specified &lt;see cref=&quot;T:System.Data.SqlTypes.SqlDecimal&quot; /&gt; structure.">一个 <see cref="T:System.Data.SqlTypes.SqlDecimal" />，表示大于或等于指定的 <see cref="T:System.Data.SqlTypes.SqlDecimal" /> 结构的最小整数。</returns>
    </member>
    <member name="M:System.Data.SqlTypes.SqlDecimal.CompareTo(System.Data.SqlTypes.SqlDecimal)">
      <summary vsli:raw="Compares this &lt;see cref=&quot;T:System.Data.SqlTypes.SqlDecimal&quot; /&gt; instance to the supplied &lt;see cref=&quot;T:System.Data.SqlTypes.SqlDecimal&quot; /&gt; object and returns an indication of their relative values.">将此 <see cref="T:System.Data.SqlTypes.SqlDecimal" /> 实例与所提供的 <see cref="T:System.Data.SqlTypes.SqlDecimal" /> 对象进行比较，并返回其相对值的指示值。</summary>
      <param name="value" vsli:raw="The &lt;see cref=&quot;T:System.Data.SqlTypes.SqlDecimal&quot; /&gt; to be compared.">要比较的 <see cref="T:System.Data.SqlTypes.SqlDecimal" />。</param>
      <returns vsli:raw="A signed number that indicates the relative values of the instance and the object.  &#xA;  &#xA; &lt;list type=&quot;table&quot;&gt;&lt;listheader&gt;&lt;term&gt; Return value&lt;/term&gt;&lt;description&gt; Condition&lt;/description&gt;&lt;/listheader&gt;&lt;item&gt;&lt;term&gt; Less than zero&lt;/term&gt;&lt;description&gt; This instance is less than the object.&lt;/description&gt;&lt;/item&gt;&lt;item&gt;&lt;term&gt; Zero&lt;/term&gt;&lt;description&gt; This instance is the same as the object.&lt;/description&gt;&lt;/item&gt;&lt;item&gt;&lt;term&gt; Greater than zero&lt;/term&gt;&lt;description&gt; This instance is greater than the object  &#xA;  &#xA; -or-  &#xA;  &#xA; The object is a null reference (&lt;see langword=&quot;Nothing&quot; /&gt; in Visual Basic)&lt;/description&gt;&lt;/item&gt;&lt;/list&gt;">一个有符号的数字，它指示该实例和对象的相对值。  
  
 <list type="table"><listheader><term> 返回值</term><description> 条件</description></listheader><item><term> 小于零</term><description> 此实例小于该对象。</description></item><item><term> 零</term><description> 此实例等于该对象。</description></item><item><term> 大于零</term><description> 此实例大于该对象 
- 或 - 
该对象是空引用（在 Visual Basic 中为 <see langword="Nothing" />）</description></item></list></returns>
    </member>
    <member name="M:System.Data.SqlTypes.SqlDecimal.CompareTo(System.Object)">
      <summary vsli:raw="Compares this &lt;see cref=&quot;T:System.Data.SqlTypes.SqlDecimal&quot; /&gt; instance to the supplied &lt;see cref=&quot;T:System.Object&quot; /&gt; and returns an indication of their relative values.">将此 <see cref="T:System.Data.SqlTypes.SqlDecimal" /> 实例与所提供的 <see cref="T:System.Object" /> 进行比较，并返回二者相对值的指示值。</summary>
      <param name="value" vsli:raw="The &lt;see cref=&quot;T:System.Object&quot; /&gt; to be compared.">要比较的 <see cref="T:System.Object" />。</param>
      <returns vsli:raw="A signed number that indicates the relative values of the instance and the object.  &#xA;  &#xA; &lt;list type=&quot;table&quot;&gt;&lt;listheader&gt;&lt;term&gt; Return Value&lt;/term&gt;&lt;description&gt; Condition&lt;/description&gt;&lt;/listheader&gt;&lt;item&gt;&lt;term&gt; Less than zero&lt;/term&gt;&lt;description&gt; This instance is less than the object.&lt;/description&gt;&lt;/item&gt;&lt;item&gt;&lt;term&gt; Zero&lt;/term&gt;&lt;description&gt; This instance is the same as the object.&lt;/description&gt;&lt;/item&gt;&lt;item&gt;&lt;term&gt; Greater than zero&lt;/term&gt;&lt;description&gt; This instance is greater than the object  &#xA;  &#xA; -or-  &#xA;  &#xA; The object is a null reference (&lt;see langword=&quot;Nothing&quot; /&gt; in Visual Basic)&lt;/description&gt;&lt;/item&gt;&lt;/list&gt;">一个有符号的数字，它指示该实例和对象的相对值。  
  
 <list type="table"><listheader><term> 返回值</term><description> 条件</description></listheader><item><term> 小于零</term><description> 此实例小于该对象。</description></item><item><term> 零</term><description> 此实例等于该对象。</description></item><item><term> 大于零</term><description> 此实例大于该对象 
- 或 - 
该对象是空引用（在 Visual Basic 中为 <see langword="Nothing" />）</description></item></list></returns>
    </member>
    <member name="M:System.Data.SqlTypes.SqlDecimal.ConvertToPrecScale(System.Data.SqlTypes.SqlDecimal,System.Int32,System.Int32)">
      <summary vsli:raw="Adjusts the value of the &lt;see cref=&quot;T:System.Data.SqlTypes.SqlDecimal&quot; /&gt; operand to the indicated precision and scale.">将 <see cref="T:System.Data.SqlTypes.SqlDecimal" /> 操作数的值调整为指定精度和小数位数。</summary>
      <param name="n" vsli:raw="The &lt;see cref=&quot;T:System.Data.SqlTypes.SqlDecimal&quot; /&gt; structure whose value is to be adjusted.">将要调整其值的 <see cref="T:System.Data.SqlTypes.SqlDecimal" /> 结构。</param>
      <param name="precision" vsli:raw="The precision for the new &lt;see cref=&quot;T:System.Data.SqlTypes.SqlDecimal&quot; /&gt; structure.">新 <see cref="T:System.Data.SqlTypes.SqlDecimal" /> 结构的精度。</param>
      <param name="scale" vsli:raw="The scale for the new &lt;see cref=&quot;T:System.Data.SqlTypes.SqlDecimal&quot; /&gt; structure.">新 <see cref="T:System.Data.SqlTypes.SqlDecimal" /> 结构的小数位数。</param>
      <returns vsli:raw="A new &lt;see cref=&quot;T:System.Data.SqlTypes.SqlDecimal&quot; /&gt; structure whose Value has been adjusted to the precision and scale indicated in the parameters.">一个新 <see cref="T:System.Data.SqlTypes.SqlDecimal" /> 结构，其值已经调整为参数中指定的精度和小数位数。</returns>
    </member>
    <member name="M:System.Data.SqlTypes.SqlDecimal.Divide(System.Data.SqlTypes.SqlDecimal,System.Data.SqlTypes.SqlDecimal)">
      <summary vsli:raw="The division operator calculates the results of dividing the first &lt;see cref=&quot;T:System.Data.SqlTypes.SqlDecimal&quot; /&gt; operand by the second.">该除法运算符计算将第一个 <see cref="T:System.Data.SqlTypes.SqlDecimal" /> 操作数除以第二个操作数所得的结果。</summary>
      <param name="x" vsli:raw="A &lt;see cref=&quot;T:System.Data.SqlTypes.SqlDecimal&quot; /&gt; structure.">
        <see cref="T:System.Data.SqlTypes.SqlDecimal" /> 结构。</param>
      <param name="y" vsli:raw="A &lt;see cref=&quot;T:System.Data.SqlTypes.SqlDecimal&quot; /&gt; structure.">
        <see cref="T:System.Data.SqlTypes.SqlDecimal" /> 结构。</param>
      <returns vsli:raw="A new &lt;see cref=&quot;T:System.Data.SqlTypes.SqlDecimal&quot; /&gt; structure whose &lt;see cref=&quot;P:System.Data.SqlTypes.SqlDecimal.Value&quot; /&gt; property contains the results of the division.">新的 <see cref="T:System.Data.SqlTypes.SqlDecimal" /> 结构，它的 <see cref="P:System.Data.SqlTypes.SqlDecimal.Value" /> 属性包含除法运算的结果。</returns>
    </member>
    <member name="M:System.Data.SqlTypes.SqlDecimal.Equals(System.Data.SqlTypes.SqlDecimal,System.Data.SqlTypes.SqlDecimal)">
      <summary vsli:raw="Performs a logical comparison of the two &lt;see cref=&quot;T:System.Data.SqlTypes.SqlDecimal&quot; /&gt; operands to determine whether they are equal.">对两个 <see cref="T:System.Data.SqlTypes.SqlDecimal" /> 操作数执行逻辑比较，以确定它们是否相等。</summary>
      <param name="x" vsli:raw="A &lt;see cref=&quot;T:System.Data.SqlTypes.SqlDecimal&quot; /&gt; structure.">
        <see cref="T:System.Data.SqlTypes.SqlDecimal" /> 结构。</param>
      <param name="y" vsli:raw="A &lt;see cref=&quot;T:System.Data.SqlTypes.SqlDecimal&quot; /&gt; structure.">
        <see cref="T:System.Data.SqlTypes.SqlDecimal" /> 结构。</param>
      <returns vsli:raw="&lt;see langword=&quot;true&quot; /&gt; if the two values are equal. Otherwise, &lt;see langword=&quot;false&quot; /&gt;. If either instance is null, the value of the &lt;see langword=&quot;SqlDecimal&quot; /&gt; will be null.">如果两个值相等，则为 <see langword="true" />。 否则为 <see langword="false" />。 如果任一实例为 null，则 <see langword="SqlDecimal" /> 的值将为 null。</returns>
    </member>
    <member name="M:System.Data.SqlTypes.SqlDecimal.Equals(System.Object)">
      <summary vsli:raw="Compares the supplied &lt;see cref=&quot;T:System.Object&quot; /&gt; parameter to the &lt;see cref=&quot;P:System.Data.SqlTypes.SqlDecimal.Value&quot; /&gt; property of the &lt;see cref=&quot;T:System.Data.SqlTypes.SqlDecimal&quot; /&gt; instance.">将提供的 <see cref="T:System.Object" /> 参数与 <see cref="P:System.Data.SqlTypes.SqlDecimal.Value" /> 实例的 <see cref="T:System.Data.SqlTypes.SqlDecimal" /> 属性进行比较。</summary>
      <param name="value" vsli:raw="The &lt;see cref=&quot;T:System.Object&quot; /&gt; to be compared.">要比较的 <see cref="T:System.Object" />。</param>
      <returns vsli:raw="&lt;see langword=&quot;true&quot; /&gt; if object is an instance of &lt;see cref=&quot;T:System.Data.SqlTypes.SqlDecimal&quot; /&gt; and the two are equal. Otherwise, &lt;see langword=&quot;false&quot; /&gt;.">如果对象是 <see cref="T:System.Data.SqlTypes.SqlDecimal" /> 的实例并且两者相等，则为 <see langword="true" />。 否则为 <see langword="false" />。</returns>
    </member>
    <member name="M:System.Data.SqlTypes.SqlDecimal.Floor(System.Data.SqlTypes.SqlDecimal)">
      <summary vsli:raw="Rounds a specified &lt;see cref=&quot;T:System.Data.SqlTypes.SqlDecimal&quot; /&gt; number to the next lower whole number.">将指定 <see cref="T:System.Data.SqlTypes.SqlDecimal" /> 数字舍入为下一个较小的整数。</summary>
      <param name="n" vsli:raw="The &lt;see cref=&quot;T:System.Data.SqlTypes.SqlDecimal&quot; /&gt; structure for which the floor value is to be calculated.">
        <see cref="T:System.Data.SqlTypes.SqlDecimal" /> 结构，将要计算其最小值。</param>
      <returns vsli:raw="A &lt;see cref=&quot;T:System.Data.SqlTypes.SqlDecimal&quot; /&gt; structure that contains the whole number part of this &lt;see cref=&quot;T:System.Data.SqlTypes.SqlDecimal&quot; /&gt; structure.">一个 <see cref="T:System.Data.SqlTypes.SqlDecimal" /> 结构，其中包含此 <see cref="T:System.Data.SqlTypes.SqlDecimal" /> 结构的整数部分。</returns>
    </member>
    <member name="M:System.Data.SqlTypes.SqlDecimal.GetHashCode">
      <summary vsli:raw="Returns the hash code for this instance.">返回此实例的哈希代码。</summary>
      <returns vsli:raw="A 32-bit signed integer hash code.">32 位有符号整数哈希代码。</returns>
    </member>
    <member name="M:System.Data.SqlTypes.SqlDecimal.GetXsdType(System.Xml.Schema.XmlSchemaSet)">
      <summary vsli:raw="Returns the XML Schema definition language (XSD) of the specified &lt;see cref=&quot;T:System.Xml.Schema.XmlSchemaSet&quot; /&gt;.">返回指定的 <see cref="T:System.Xml.Schema.XmlSchemaSet" /> 的 XML 架构定义语言 (XSD)。</summary>
      <param name="schemaSet" vsli:raw="A &lt;see cref=&quot;T:System.Xml.Schema.XmlSchemaSet&quot; /&gt;.">
        <see cref="T:System.Xml.Schema.XmlSchemaSet" />。</param>
      <returns vsli:raw="A &lt;see langword=&quot;string&quot; /&gt; value that indicates the XSD of the specified &lt;see cref=&quot;T:System.Xml.Schema.XmlSchemaSet&quot; /&gt;.">指示指定的 <see cref="T:System.Xml.Schema.XmlSchemaSet" /> 的 XSD 的 <see langword="string" /> 值。</returns>
    </member>
    <member name="M:System.Data.SqlTypes.SqlDecimal.GreaterThan(System.Data.SqlTypes.SqlDecimal,System.Data.SqlTypes.SqlDecimal)">
      <summary vsli:raw="Performs a logical comparison of two &lt;see cref=&quot;T:System.Data.SqlTypes.SqlDecimal&quot; /&gt; structures to determine whether the first is greater than the second.">对两个 <see cref="T:System.Data.SqlTypes.SqlDecimal" /> 结构执行逻辑比较，以确定第一个结构是否大于第二个结构。</summary>
      <param name="x" vsli:raw="A &lt;see cref=&quot;T:System.Data.SqlTypes.SqlDecimal&quot; /&gt; structure.">
        <see cref="T:System.Data.SqlTypes.SqlDecimal" /> 结构。</param>
      <param name="y" vsli:raw="A &lt;see cref=&quot;T:System.Data.SqlTypes.SqlDecimal&quot; /&gt; structure.">
        <see cref="T:System.Data.SqlTypes.SqlDecimal" /> 结构。</param>
      <returns vsli:raw="A &lt;see cref=&quot;T:System.Data.SqlTypes.SqlBoolean&quot; /&gt; that is &lt;see cref=&quot;F:System.Data.SqlTypes.SqlBoolean.True&quot; /&gt; if the first instance is less than the second instance. Otherwise, &lt;see cref=&quot;F:System.Data.SqlTypes.SqlBoolean.False&quot; /&gt;. If either instance of &lt;see cref=&quot;T:System.Data.SqlTypes.SqlDecimal&quot; /&gt; is null, the &lt;see cref=&quot;P:System.Data.SqlTypes.SqlBoolean.Value&quot; /&gt; of the &lt;see cref=&quot;T:System.Data.SqlTypes.SqlBoolean&quot; /&gt; will be &lt;see cref=&quot;F:System.Data.SqlTypes.SqlBoolean.Null&quot; /&gt;.">一个 <see cref="T:System.Data.SqlTypes.SqlBoolean" />，如果第一个实例小于第二个实例，则它为 <see cref="F:System.Data.SqlTypes.SqlBoolean.True" />。 否则为 <see cref="F:System.Data.SqlTypes.SqlBoolean.False" />。 如果 <see cref="T:System.Data.SqlTypes.SqlDecimal" /> 的任一实例为空，则 <see cref="P:System.Data.SqlTypes.SqlBoolean.Value" /> 的 <see cref="T:System.Data.SqlTypes.SqlBoolean" /> 将为 <see cref="F:System.Data.SqlTypes.SqlBoolean.Null" />。</returns>
    </member>
    <member name="M:System.Data.SqlTypes.SqlDecimal.GreaterThanOrEqual(System.Data.SqlTypes.SqlDecimal,System.Data.SqlTypes.SqlDecimal)">
      <summary vsli:raw="Performs a logical comparison of the two &lt;see cref=&quot;T:System.Data.SqlTypes.SqlDecimal&quot; /&gt; parameters to determine whether the first is greater than or equal to the second.">对两个 <see cref="T:System.Data.SqlTypes.SqlDecimal" /> 参数执行逻辑比较，以确定第一个参数是否大于或等于第二个参数。</summary>
      <param name="x" vsli:raw="A &lt;see cref=&quot;T:System.Data.SqlTypes.SqlDecimal&quot; /&gt; structure.">
        <see cref="T:System.Data.SqlTypes.SqlDecimal" /> 结构。</param>
      <param name="y" vsli:raw="A &lt;see cref=&quot;T:System.Data.SqlTypes.SqlDecimal&quot; /&gt; structure.">
        <see cref="T:System.Data.SqlTypes.SqlDecimal" /> 结构。</param>
      <returns vsli:raw="A &lt;see cref=&quot;T:System.Data.SqlTypes.SqlBoolean&quot; /&gt; that is &lt;see cref=&quot;F:System.Data.SqlTypes.SqlBoolean.True&quot; /&gt; if the first instance is greater than or equal to the second instance. Otherwise, &lt;see cref=&quot;F:System.Data.SqlTypes.SqlBoolean.False&quot; /&gt;. If either instance of &lt;see cref=&quot;T:System.Data.SqlTypes.SqlDecimal&quot; /&gt; is null, the &lt;see cref=&quot;P:System.Data.SqlTypes.SqlBoolean.Value&quot; /&gt; of the &lt;see cref=&quot;T:System.Data.SqlTypes.SqlBoolean&quot; /&gt; will be &lt;see cref=&quot;F:System.Data.SqlTypes.SqlBoolean.Null&quot; /&gt;.">一个 <see cref="T:System.Data.SqlTypes.SqlBoolean" />，如果第一个实例大于或等于第二个实例，则为 <see cref="F:System.Data.SqlTypes.SqlBoolean.True" />。 否则为 <see cref="F:System.Data.SqlTypes.SqlBoolean.False" />。 如果 <see cref="T:System.Data.SqlTypes.SqlDecimal" /> 的任一实例为空，则 <see cref="P:System.Data.SqlTypes.SqlBoolean.Value" /> 的 <see cref="T:System.Data.SqlTypes.SqlBoolean" /> 将为 <see cref="F:System.Data.SqlTypes.SqlBoolean.Null" />。</returns>
    </member>
    <member name="M:System.Data.SqlTypes.SqlDecimal.LessThan(System.Data.SqlTypes.SqlDecimal,System.Data.SqlTypes.SqlDecimal)">
      <summary vsli:raw="Performs a logical comparison of two &lt;see cref=&quot;T:System.Data.SqlTypes.SqlDecimal&quot; /&gt; structures to determine whether the first is less than the second.">对两个 <see cref="T:System.Data.SqlTypes.SqlDecimal" /> 结构执行逻辑比较，以确定第一个结构是否小于第二个结构。</summary>
      <param name="x" vsli:raw="A &lt;see cref=&quot;T:System.Data.SqlTypes.SqlDecimal&quot; /&gt; structure.">
        <see cref="T:System.Data.SqlTypes.SqlDecimal" /> 结构。</param>
      <param name="y" vsli:raw="A &lt;see cref=&quot;T:System.Data.SqlTypes.SqlDecimal&quot; /&gt; structure.">
        <see cref="T:System.Data.SqlTypes.SqlDecimal" /> 结构。</param>
      <returns vsli:raw="A &lt;see cref=&quot;T:System.Data.SqlTypes.SqlBoolean&quot; /&gt; that is &lt;see cref=&quot;F:System.Data.SqlTypes.SqlBoolean.True&quot; /&gt; if the first instance is less than the second instance. Otherwise, &lt;see cref=&quot;F:System.Data.SqlTypes.SqlBoolean.False&quot; /&gt;. If either instance of &lt;see cref=&quot;T:System.Data.SqlTypes.SqlDecimal&quot; /&gt; is null, the &lt;see cref=&quot;P:System.Data.SqlTypes.SqlBoolean.Value&quot; /&gt; of the &lt;see cref=&quot;T:System.Data.SqlTypes.SqlBoolean&quot; /&gt; will be &lt;see cref=&quot;F:System.Data.SqlTypes.SqlBoolean.Null&quot; /&gt;.">一个 <see cref="T:System.Data.SqlTypes.SqlBoolean" />，如果第一个实例小于第二个实例，则它为 <see cref="F:System.Data.SqlTypes.SqlBoolean.True" />。 否则为 <see cref="F:System.Data.SqlTypes.SqlBoolean.False" />。 如果 <see cref="T:System.Data.SqlTypes.SqlDecimal" /> 的任一实例为空，则 <see cref="P:System.Data.SqlTypes.SqlBoolean.Value" /> 的 <see cref="T:System.Data.SqlTypes.SqlBoolean" /> 将为 <see cref="F:System.Data.SqlTypes.SqlBoolean.Null" />。</returns>
    </member>
    <member name="M:System.Data.SqlTypes.SqlDecimal.LessThanOrEqual(System.Data.SqlTypes.SqlDecimal,System.Data.SqlTypes.SqlDecimal)">
      <summary vsli:raw="Performs a logical comparison of the two &lt;see cref=&quot;T:System.Data.SqlTypes.SqlDecimal&quot; /&gt; parameters to determine whether the first is less than or equal to the second.">对两个 <see cref="T:System.Data.SqlTypes.SqlDecimal" /> 参数执行逻辑比较，以确定第一个参数是否小于或等于第二个参数。</summary>
      <param name="x" vsli:raw="A &lt;see cref=&quot;T:System.Data.SqlTypes.SqlDecimal&quot; /&gt; structure.">
        <see cref="T:System.Data.SqlTypes.SqlDecimal" /> 结构。</param>
      <param name="y" vsli:raw="A &lt;see cref=&quot;T:System.Data.SqlTypes.SqlDecimal&quot; /&gt; structure.">
        <see cref="T:System.Data.SqlTypes.SqlDecimal" /> 结构。</param>
      <returns vsli:raw="A &lt;see cref=&quot;T:System.Data.SqlTypes.SqlBoolean&quot; /&gt; that is &lt;see cref=&quot;F:System.Data.SqlTypes.SqlBoolean.True&quot; /&gt; if the first instance is less than or equal to the second instance. Otherwise, &lt;see cref=&quot;F:System.Data.SqlTypes.SqlBoolean.False&quot; /&gt;. If either instance of &lt;see cref=&quot;T:System.Data.SqlTypes.SqlDecimal&quot; /&gt; is null, the &lt;see cref=&quot;P:System.Data.SqlTypes.SqlBoolean.Value&quot; /&gt; of the &lt;see cref=&quot;T:System.Data.SqlTypes.SqlBoolean&quot; /&gt; will be &lt;see cref=&quot;F:System.Data.SqlTypes.SqlBoolean.Null&quot; /&gt;.">一个 <see cref="T:System.Data.SqlTypes.SqlBoolean" />，如果第一个实例小于或等于第二个实例，则它为 <see cref="F:System.Data.SqlTypes.SqlBoolean.True" />。 否则为 <see cref="F:System.Data.SqlTypes.SqlBoolean.False" />。 如果 <see cref="T:System.Data.SqlTypes.SqlDecimal" /> 的任一实例为空，则 <see cref="P:System.Data.SqlTypes.SqlBoolean.Value" /> 的 <see cref="T:System.Data.SqlTypes.SqlBoolean" /> 将为 <see cref="F:System.Data.SqlTypes.SqlBoolean.Null" />。</returns>
    </member>
    <member name="M:System.Data.SqlTypes.SqlDecimal.Multiply(System.Data.SqlTypes.SqlDecimal,System.Data.SqlTypes.SqlDecimal)">
      <summary vsli:raw="The multiplication operator computes the product of the two &lt;see cref=&quot;T:System.Data.SqlTypes.SqlDecimal&quot; /&gt; parameters.">该乘法运算符计算两个 <see cref="T:System.Data.SqlTypes.SqlDecimal" /> 参数的乘积。</summary>
      <param name="x" vsli:raw="A &lt;see cref=&quot;T:System.Data.SqlTypes.SqlDecimal&quot; /&gt; structure.">
        <see cref="T:System.Data.SqlTypes.SqlDecimal" /> 结构。</param>
      <param name="y" vsli:raw="A &lt;see cref=&quot;T:System.Data.SqlTypes.SqlDecimal&quot; /&gt; structure.">
        <see cref="T:System.Data.SqlTypes.SqlDecimal" /> 结构。</param>
      <returns vsli:raw="A new &lt;see cref=&quot;T:System.Data.SqlTypes.SqlDecimal&quot; /&gt; structure whose &lt;see cref=&quot;P:System.Data.SqlTypes.SqlDecimal.Value&quot; /&gt; property contains the product of the multiplication.">一个新的 <see cref="T:System.Data.SqlTypes.SqlDecimal" /> 结构，它的 <see cref="P:System.Data.SqlTypes.SqlDecimal.Value" /> 属性包含该乘法运算的乘积。</returns>
    </member>
    <member name="M:System.Data.SqlTypes.SqlDecimal.NotEquals(System.Data.SqlTypes.SqlDecimal,System.Data.SqlTypes.SqlDecimal)">
      <summary vsli:raw="Performs a logical comparison of the two &lt;see cref=&quot;T:System.Data.SqlTypes.SqlDecimal&quot; /&gt; parameters to determine whether they are not equal.">对两个 <see cref="T:System.Data.SqlTypes.SqlDecimal" /> 参数执行逻辑比较，确定它们是否不相等。</summary>
      <param name="x" vsli:raw="A &lt;see cref=&quot;T:System.Data.SqlTypes.SqlDecimal&quot; /&gt; structure.">
        <see cref="T:System.Data.SqlTypes.SqlDecimal" /> 结构。</param>
      <param name="y" vsli:raw="A &lt;see cref=&quot;T:System.Data.SqlTypes.SqlDecimal&quot; /&gt; structure.">
        <see cref="T:System.Data.SqlTypes.SqlDecimal" /> 结构。</param>
      <returns vsli:raw="A &lt;see cref=&quot;T:System.Data.SqlTypes.SqlBoolean&quot; /&gt; that is &lt;see cref=&quot;F:System.Data.SqlTypes.SqlBoolean.True&quot; /&gt; if the two instances are not equal or &lt;see cref=&quot;F:System.Data.SqlTypes.SqlBoolean.False&quot; /&gt; if the two instances are equal. If either instance of &lt;see cref=&quot;T:System.Data.SqlTypes.SqlDecimal&quot; /&gt; is null, the &lt;see cref=&quot;P:System.Data.SqlTypes.SqlBoolean.Value&quot; /&gt; of the &lt;see cref=&quot;T:System.Data.SqlTypes.SqlBoolean&quot; /&gt; will be &lt;see cref=&quot;F:System.Data.SqlTypes.SqlBoolean.Null&quot; /&gt;.">一个 <see cref="T:System.Data.SqlTypes.SqlBoolean" />，它在两个实例不等时为 <see cref="F:System.Data.SqlTypes.SqlBoolean.True" />，在两个实例相等时为 <see cref="F:System.Data.SqlTypes.SqlBoolean.False" />。 如果 <see cref="T:System.Data.SqlTypes.SqlDecimal" /> 的任一实例为空，则 <see cref="P:System.Data.SqlTypes.SqlBoolean.Value" /> 的 <see cref="T:System.Data.SqlTypes.SqlBoolean" /> 将为 <see cref="F:System.Data.SqlTypes.SqlBoolean.Null" />。</returns>
    </member>
    <member name="M:System.Data.SqlTypes.SqlDecimal.op_Addition(System.Data.SqlTypes.SqlDecimal,System.Data.SqlTypes.SqlDecimal)">
      <summary vsli:raw="Calculates the sum of the two &lt;see cref=&quot;T:System.Data.SqlTypes.SqlDecimal&quot; /&gt; operators.">计算两个 <see cref="T:System.Data.SqlTypes.SqlDecimal" /> 操作数的和。</summary>
      <param name="x" vsli:raw="A &lt;see cref=&quot;T:System.Data.SqlTypes.SqlDecimal&quot; /&gt; structure.">
        <see cref="T:System.Data.SqlTypes.SqlDecimal" /> 结构。</param>
      <param name="y" vsli:raw="A &lt;see cref=&quot;T:System.Data.SqlTypes.SqlDecimal&quot; /&gt; structure.">
        <see cref="T:System.Data.SqlTypes.SqlDecimal" /> 结构。</param>
      <returns vsli:raw="A new &lt;see cref=&quot;T:System.Data.SqlTypes.SqlDecimal&quot; /&gt; structure whose &lt;see cref=&quot;P:System.Data.SqlTypes.SqlDecimal.Value&quot; /&gt; property contains the sum.">一个新的 <see cref="T:System.Data.SqlTypes.SqlDecimal" /> 结构，它的 <see cref="P:System.Data.SqlTypes.SqlDecimal.Value" /> 属性包含该和。</returns>
    </member>
    <member name="M:System.Data.SqlTypes.SqlDecimal.op_Division(System.Data.SqlTypes.SqlDecimal,System.Data.SqlTypes.SqlDecimal)">
      <summary vsli:raw="The division operator calculates the results of dividing the first &lt;see cref=&quot;T:System.Data.SqlTypes.SqlDecimal&quot; /&gt; operand by the second.">该除法运算符计算将第一个 <see cref="T:System.Data.SqlTypes.SqlDecimal" /> 操作数除以第二个操作数所得的结果。</summary>
      <param name="x" vsli:raw="A &lt;see cref=&quot;T:System.Data.SqlTypes.SqlDecimal&quot; /&gt; structure.">
        <see cref="T:System.Data.SqlTypes.SqlDecimal" /> 结构。</param>
      <param name="y" vsli:raw="A &lt;see cref=&quot;T:System.Data.SqlTypes.SqlDecimal&quot; /&gt; structure.">
        <see cref="T:System.Data.SqlTypes.SqlDecimal" /> 结构。</param>
      <returns vsli:raw="A new &lt;see cref=&quot;T:System.Data.SqlTypes.SqlDecimal&quot; /&gt; structure whose &lt;see cref=&quot;P:System.Data.SqlTypes.SqlDecimal.Value&quot; /&gt; property contains the results of the division.">新的 <see cref="T:System.Data.SqlTypes.SqlDecimal" /> 结构，它的 <see cref="P:System.Data.SqlTypes.SqlDecimal.Value" /> 属性包含除法运算的结果。</returns>
    </member>
    <member name="M:System.Data.SqlTypes.SqlDecimal.op_Equality(System.Data.SqlTypes.SqlDecimal,System.Data.SqlTypes.SqlDecimal)">
      <summary vsli:raw="Performs a logical comparison of the two &lt;see cref=&quot;T:System.Data.SqlTypes.SqlDecimal&quot; /&gt; operands to determine whether they are equal.">对两个 <see cref="T:System.Data.SqlTypes.SqlDecimal" /> 操作数执行逻辑比较，以确定它们是否相等。</summary>
      <param name="x" vsli:raw="A &lt;see cref=&quot;T:System.Data.SqlTypes.SqlDecimal&quot; /&gt; structure.">
        <see cref="T:System.Data.SqlTypes.SqlDecimal" /> 结构。</param>
      <param name="y" vsli:raw="A &lt;see cref=&quot;T:System.Data.SqlTypes.SqlDecimal&quot; /&gt; structure.">
        <see cref="T:System.Data.SqlTypes.SqlDecimal" /> 结构。</param>
      <returns vsli:raw="A &lt;see cref=&quot;T:System.Data.SqlTypes.SqlBoolean&quot; /&gt; that is &lt;see cref=&quot;F:System.Data.SqlTypes.SqlBoolean.True&quot; /&gt; if the two instances are equal or &lt;see cref=&quot;F:System.Data.SqlTypes.SqlBoolean.False&quot; /&gt; if the two instances are not equal. If either instance of &lt;see cref=&quot;T:System.Data.SqlTypes.SqlDecimal&quot; /&gt; is null, the &lt;see cref=&quot;P:System.Data.SqlTypes.SqlBoolean.Value&quot; /&gt; of the &lt;see cref=&quot;T:System.Data.SqlTypes.SqlBoolean&quot; /&gt; will be &lt;see cref=&quot;F:System.Data.SqlTypes.SqlBoolean.Null&quot; /&gt;.">一个 <see cref="T:System.Data.SqlTypes.SqlBoolean" />，它在两个实例相等时为 <see cref="F:System.Data.SqlTypes.SqlBoolean.True" />，在两个实例不等时为 <see cref="F:System.Data.SqlTypes.SqlBoolean.False" />。 如果 <see cref="T:System.Data.SqlTypes.SqlDecimal" /> 的任一实例为空，则 <see cref="P:System.Data.SqlTypes.SqlBoolean.Value" /> 的 <see cref="T:System.Data.SqlTypes.SqlBoolean" /> 将为 <see cref="F:System.Data.SqlTypes.SqlBoolean.Null" />。</returns>
    </member>
    <member name="M:System.Data.SqlTypes.SqlDecimal.op_Explicit(System.Data.SqlTypes.SqlBoolean)~System.Data.SqlTypes.SqlDecimal">
      <summary vsli:raw="Converts the supplied &lt;see cref=&quot;T:System.Data.SqlTypes.SqlBoolean&quot; /&gt; structure to &lt;see cref=&quot;T:System.Data.SqlTypes.SqlDecimal&quot; /&gt;.">将提供的 <see cref="T:System.Data.SqlTypes.SqlBoolean" /> 结构转换为 <see cref="T:System.Data.SqlTypes.SqlDecimal" />。</summary>
      <param name="x" vsli:raw="The &lt;see cref=&quot;T:System.Data.SqlTypes.SqlBoolean&quot; /&gt; structure to be converted.">要转换的 <see cref="T:System.Data.SqlTypes.SqlBoolean" /> 结构。</param>
      <returns vsli:raw="A new &lt;see cref=&quot;T:System.Data.SqlTypes.SqlDecimal&quot; /&gt; structure whose &lt;see cref=&quot;P:System.Data.SqlTypes.SqlDecimal.Value&quot; /&gt; is equal to the &lt;see cref=&quot;P:System.Data.SqlTypes.SqlBoolean.ByteValue&quot; /&gt; of the &lt;see cref=&quot;T:System.Data.SqlTypes.SqlBoolean&quot; /&gt; parameter.">一个新的 <see cref="T:System.Data.SqlTypes.SqlDecimal" /> 结构，它的 <see cref="P:System.Data.SqlTypes.SqlDecimal.Value" /> 等于 <see cref="P:System.Data.SqlTypes.SqlBoolean.ByteValue" /> 参数的 <see cref="T:System.Data.SqlTypes.SqlBoolean" />。</returns>
    </member>
    <member name="M:System.Data.SqlTypes.SqlDecimal.op_Explicit(System.Data.SqlTypes.SqlDecimal)~System.Decimal">
      <summary vsli:raw="Converts the &lt;see cref=&quot;T:System.Data.SqlTypes.SqlDecimal&quot; /&gt; parameter to &lt;see cref=&quot;T:System.Decimal&quot; /&gt;.">将 <see cref="T:System.Data.SqlTypes.SqlDecimal" /> 参数转换为 <see cref="T:System.Decimal" />。</summary>
      <param name="x" vsli:raw="The &lt;see cref=&quot;T:System.Data.SqlTypes.SqlDecimal&quot; /&gt; structure to be converted.">要转换的 <see cref="T:System.Data.SqlTypes.SqlDecimal" /> 结构。</param>
      <returns vsli:raw="A new &lt;see langword=&quot;Decimal&quot; /&gt; structure whose value equals the &lt;see cref=&quot;P:System.Data.SqlTypes.SqlDecimal.Value&quot; /&gt; of the &lt;see cref=&quot;T:System.Data.SqlTypes.SqlDecimal&quot; /&gt; parameter.">一个新 <see langword="Decimal" /> 结构，它的值等于 <see cref="P:System.Data.SqlTypes.SqlDecimal.Value" /> 参数的 <see cref="T:System.Data.SqlTypes.SqlDecimal" />。</returns>
    </member>
    <member name="M:System.Data.SqlTypes.SqlDecimal.op_Explicit(System.Data.SqlTypes.SqlDouble)~System.Data.SqlTypes.SqlDecimal">
      <summary vsli:raw="Converts the supplied &lt;see cref=&quot;T:System.Data.SqlTypes.SqlDouble&quot; /&gt; structure to &lt;see cref=&quot;T:System.Data.SqlTypes.SqlDecimal&quot; /&gt;.">将提供的 <see cref="T:System.Data.SqlTypes.SqlDouble" /> 结构转换为 <see cref="T:System.Data.SqlTypes.SqlDecimal" />。</summary>
      <param name="x" vsli:raw="The &lt;see cref=&quot;T:System.Data.SqlTypes.SqlDouble&quot; /&gt; structure to be converted.">要转换的 <see cref="T:System.Data.SqlTypes.SqlDouble" /> 结构。</param>
      <returns vsli:raw="A new &lt;see cref=&quot;T:System.Data.SqlTypes.SqlDecimal&quot; /&gt; structure whose &lt;see cref=&quot;P:System.Data.SqlTypes.SqlDecimal.Value&quot; /&gt; equals the &lt;see cref=&quot;P:System.Data.SqlTypes.SqlDouble.Value&quot; /&gt; of the &lt;see cref=&quot;T:System.Data.SqlTypes.SqlDouble&quot; /&gt; parameter.">一个新的 <see cref="T:System.Data.SqlTypes.SqlDecimal" /> 结构，它的 <see cref="P:System.Data.SqlTypes.SqlDecimal.Value" /> 等于 <see cref="P:System.Data.SqlTypes.SqlDouble.Value" /> 参数的 <see cref="T:System.Data.SqlTypes.SqlDouble" />。</returns>
    </member>
    <member name="M:System.Data.SqlTypes.SqlDecimal.op_Explicit(System.Data.SqlTypes.SqlSingle)~System.Data.SqlTypes.SqlDecimal">
      <summary vsli:raw="Converts the supplied &lt;see cref=&quot;T:System.Data.SqlTypes.SqlSingle&quot; /&gt; structure to &lt;see cref=&quot;T:System.Data.SqlTypes.SqlDecimal&quot; /&gt;.">将提供的 <see cref="T:System.Data.SqlTypes.SqlSingle" /> 结构转换为 <see cref="T:System.Data.SqlTypes.SqlDecimal" />。</summary>
      <param name="x" vsli:raw="The &lt;see cref=&quot;T:System.Data.SqlTypes.SqlSingle&quot; /&gt; structure to be converted.">要转换的 <see cref="T:System.Data.SqlTypes.SqlSingle" /> 结构。</param>
      <returns vsli:raw="A new &lt;see cref=&quot;T:System.Data.SqlTypes.SqlDecimal&quot; /&gt; structure whose &lt;see cref=&quot;P:System.Data.SqlTypes.SqlDecimal.Value&quot; /&gt; property equals the &lt;see cref=&quot;P:System.Data.SqlTypes.SqlSingle.Value&quot; /&gt; of the &lt;see cref=&quot;T:System.Data.SqlTypes.SqlSingle&quot; /&gt; parameter.">一个新的 <see cref="T:System.Data.SqlTypes.SqlDecimal" /> 结构，它的 <see cref="P:System.Data.SqlTypes.SqlDecimal.Value" /> 属性等于 <see cref="P:System.Data.SqlTypes.SqlSingle.Value" /> 参数的 <see cref="T:System.Data.SqlTypes.SqlSingle" />。</returns>
    </member>
    <member name="M:System.Data.SqlTypes.SqlDecimal.op_Explicit(System.Data.SqlTypes.SqlString)~System.Data.SqlTypes.SqlDecimal">
      <summary vsli:raw="Converts the supplied &lt;see cref=&quot;T:System.Data.SqlTypes.SqlString&quot; /&gt; parameter to &lt;see cref=&quot;T:System.Data.SqlTypes.SqlDecimal&quot; /&gt;.">将提供的 <see cref="T:System.Data.SqlTypes.SqlString" /> 参数转换为 <see cref="T:System.Data.SqlTypes.SqlDecimal" />。</summary>
      <param name="x" vsli:raw="The &lt;see cref=&quot;T:System.Data.SqlTypes.SqlString&quot; /&gt; object to be converted.">要转换的 <see cref="T:System.Data.SqlTypes.SqlString" /> 对象。</param>
      <returns vsli:raw="A new &lt;see cref=&quot;T:System.Data.SqlTypes.SqlDecimal&quot; /&gt; structure whose &lt;see cref=&quot;P:System.Data.SqlTypes.SqlDecimal.Value&quot; /&gt; equals the value represented by the &lt;see cref=&quot;T:System.Data.SqlTypes.SqlString&quot; /&gt; parameter.">一个新的 <see cref="T:System.Data.SqlTypes.SqlDecimal" /> 结构，其 <see cref="P:System.Data.SqlTypes.SqlDecimal.Value" /> 等于 <see cref="T:System.Data.SqlTypes.SqlString" /> 参数表示的值。</returns>
    </member>
    <member name="M:System.Data.SqlTypes.SqlDecimal.op_Explicit(System.Double)~System.Data.SqlTypes.SqlDecimal">
      <summary vsli:raw="Converts the &lt;see cref=&quot;T:System.Double&quot; /&gt; parameter to &lt;see cref=&quot;T:System.Data.SqlTypes.SqlDecimal&quot; /&gt;.">将 <see cref="T:System.Double" /> 参数转换为 <see cref="T:System.Data.SqlTypes.SqlDecimal" />。</summary>
      <param name="x" vsli:raw="The &lt;see cref=&quot;T:System.Double&quot; /&gt; structure to be converted.">要转换的 <see cref="T:System.Double" /> 结构。</param>
      <returns vsli:raw="A new &lt;see cref=&quot;T:System.Data.SqlTypes.SqlDecimal&quot; /&gt; structure whose value equals the value of the &lt;see cref=&quot;T:System.Double&quot; /&gt; parameter.">一个新 <see cref="T:System.Data.SqlTypes.SqlDecimal" /> 结构，它的值等于 <see cref="T:System.Double" /> 参数的值。</returns>
    </member>
    <member name="M:System.Data.SqlTypes.SqlDecimal.op_GreaterThan(System.Data.SqlTypes.SqlDecimal,System.Data.SqlTypes.SqlDecimal)">
      <summary vsli:raw="Performs a logical comparison of two &lt;see cref=&quot;T:System.Data.SqlTypes.SqlDecimal&quot; /&gt; structures to determine whether the first is greater than the second.">对两个 <see cref="T:System.Data.SqlTypes.SqlDecimal" /> 结构执行逻辑比较，以确定第一个结构是否大于第二个结构。</summary>
      <param name="x" vsli:raw="A &lt;see cref=&quot;T:System.Data.SqlTypes.SqlDecimal&quot; /&gt; structure.">
        <see cref="T:System.Data.SqlTypes.SqlDecimal" /> 结构。</param>
      <param name="y" vsli:raw="A &lt;see cref=&quot;T:System.Data.SqlTypes.SqlDecimal&quot; /&gt; structure.">
        <see cref="T:System.Data.SqlTypes.SqlDecimal" /> 结构。</param>
      <returns vsli:raw="A &lt;see cref=&quot;T:System.Data.SqlTypes.SqlBoolean&quot; /&gt; that is &lt;see cref=&quot;F:System.Data.SqlTypes.SqlBoolean.True&quot; /&gt; if the first instance is less than the second instance. Otherwise, &lt;see cref=&quot;F:System.Data.SqlTypes.SqlBoolean.False&quot; /&gt;. If either instance of &lt;see cref=&quot;T:System.Data.SqlTypes.SqlDecimal&quot; /&gt; is null, the &lt;see cref=&quot;P:System.Data.SqlTypes.SqlBoolean.Value&quot; /&gt; of the &lt;see cref=&quot;T:System.Data.SqlTypes.SqlBoolean&quot; /&gt; will be &lt;see cref=&quot;F:System.Data.SqlTypes.SqlBoolean.Null&quot; /&gt;.">一个 <see cref="T:System.Data.SqlTypes.SqlBoolean" />，如果第一个实例小于第二个实例，则它为 <see cref="F:System.Data.SqlTypes.SqlBoolean.True" />。 否则为 <see cref="F:System.Data.SqlTypes.SqlBoolean.False" />。 如果 <see cref="T:System.Data.SqlTypes.SqlDecimal" /> 的任一实例为空，则 <see cref="P:System.Data.SqlTypes.SqlBoolean.Value" /> 的 <see cref="T:System.Data.SqlTypes.SqlBoolean" /> 将为 <see cref="F:System.Data.SqlTypes.SqlBoolean.Null" />。</returns>
    </member>
    <member name="M:System.Data.SqlTypes.SqlDecimal.op_GreaterThanOrEqual(System.Data.SqlTypes.SqlDecimal,System.Data.SqlTypes.SqlDecimal)">
      <summary vsli:raw="Performs a logical comparison of the two &lt;see cref=&quot;T:System.Data.SqlTypes.SqlDecimal&quot; /&gt; parameters to determine whether the first is greater than or equal to the second.">对两个 <see cref="T:System.Data.SqlTypes.SqlDecimal" /> 参数执行逻辑比较，以确定第一个参数是否大于或等于第二个参数。</summary>
      <param name="x" vsli:raw="A &lt;see cref=&quot;T:System.Data.SqlTypes.SqlDecimal&quot; /&gt; structure.">
        <see cref="T:System.Data.SqlTypes.SqlDecimal" /> 结构。</param>
      <param name="y" vsli:raw="A &lt;see cref=&quot;T:System.Data.SqlTypes.SqlDecimal&quot; /&gt; structure.">
        <see cref="T:System.Data.SqlTypes.SqlDecimal" /> 结构。</param>
      <returns vsli:raw="A &lt;see cref=&quot;T:System.Data.SqlTypes.SqlBoolean&quot; /&gt; that is &lt;see cref=&quot;F:System.Data.SqlTypes.SqlBoolean.True&quot; /&gt; if the first instance is greater than or equal to the second instance. Otherwise, &lt;see cref=&quot;F:System.Data.SqlTypes.SqlBoolean.False&quot; /&gt;. If either instance of &lt;see cref=&quot;T:System.Data.SqlTypes.SqlDecimal&quot; /&gt; is null, the &lt;see cref=&quot;P:System.Data.SqlTypes.SqlBoolean.Value&quot; /&gt; of the &lt;see cref=&quot;T:System.Data.SqlTypes.SqlBoolean&quot; /&gt; will be &lt;see cref=&quot;F:System.Data.SqlTypes.SqlBoolean.Null&quot; /&gt;.">一个 <see cref="T:System.Data.SqlTypes.SqlBoolean" />，如果第一个实例大于或等于第二个实例，则为 <see cref="F:System.Data.SqlTypes.SqlBoolean.True" />。 否则为 <see cref="F:System.Data.SqlTypes.SqlBoolean.False" />。 如果 <see cref="T:System.Data.SqlTypes.SqlDecimal" /> 的任一实例为空，则 <see cref="P:System.Data.SqlTypes.SqlBoolean.Value" /> 的 <see cref="T:System.Data.SqlTypes.SqlBoolean" /> 将为 <see cref="F:System.Data.SqlTypes.SqlBoolean.Null" />。</returns>
    </member>
    <member name="M:System.Data.SqlTypes.SqlDecimal.op_Implicit(System.Data.SqlTypes.SqlByte)~System.Data.SqlTypes.SqlDecimal">
      <summary vsli:raw="Converts the supplied &lt;see cref=&quot;T:System.Data.SqlTypes.SqlByte&quot; /&gt; structure to &lt;see cref=&quot;T:System.Data.SqlTypes.SqlDecimal&quot; /&gt;.">将提供的 <see cref="T:System.Data.SqlTypes.SqlByte" /> 结构转换为 <see cref="T:System.Data.SqlTypes.SqlDecimal" />。</summary>
      <param name="x" vsli:raw="The &lt;see cref=&quot;T:System.Data.SqlTypes.SqlByte&quot; /&gt; structure to be converted.">要转换的 <see cref="T:System.Data.SqlTypes.SqlByte" /> 结构。</param>
      <returns vsli:raw="A new &lt;see cref=&quot;T:System.Data.SqlTypes.SqlDecimal&quot; /&gt; structure whose &lt;see cref=&quot;P:System.Data.SqlTypes.SqlDecimal.Value&quot; /&gt; property equals the &lt;see cref=&quot;P:System.Data.SqlTypes.SqlByte.Value&quot; /&gt; property of the &lt;see cref=&quot;T:System.Data.SqlTypes.SqlByte&quot; /&gt; parameter.">一个新的 <see cref="T:System.Data.SqlTypes.SqlDecimal" /> 结构，它的 <see cref="P:System.Data.SqlTypes.SqlDecimal.Value" /> 属性等于 <see cref="P:System.Data.SqlTypes.SqlByte.Value" /> 参数的 <see cref="T:System.Data.SqlTypes.SqlByte" /> 属性。</returns>
    </member>
    <member name="M:System.Data.SqlTypes.SqlDecimal.op_Implicit(System.Data.SqlTypes.SqlInt16)~System.Data.SqlTypes.SqlDecimal">
      <summary vsli:raw="Converts the supplied &lt;see cref=&quot;T:System.Data.SqlTypes.SqlInt16&quot; /&gt; structure to &lt;see cref=&quot;T:System.Data.SqlTypes.SqlDecimal&quot; /&gt;.">将提供的 <see cref="T:System.Data.SqlTypes.SqlInt16" /> 结构转换为 <see cref="T:System.Data.SqlTypes.SqlDecimal" />。</summary>
      <param name="x" vsli:raw="The &lt;see cref=&quot;T:System.Data.SqlTypes.SqlInt16&quot; /&gt; structure to be converted.">要转换的 <see cref="T:System.Data.SqlTypes.SqlInt16" /> 结构。</param>
      <returns vsli:raw="A new &lt;see cref=&quot;T:System.Data.SqlTypes.SqlDecimal&quot; /&gt; structure whose &lt;see cref=&quot;P:System.Data.SqlTypes.SqlDecimal.Value&quot; /&gt; property equals the &lt;see cref=&quot;P:System.Data.SqlTypes.SqlInt16.Value&quot; /&gt; property of the &lt;see cref=&quot;T:System.Data.SqlTypes.SqlInt16&quot; /&gt; parameter.">一个新的 <see cref="T:System.Data.SqlTypes.SqlDecimal" /> 结构，它的 <see cref="P:System.Data.SqlTypes.SqlDecimal.Value" /> 属性等于 <see cref="P:System.Data.SqlTypes.SqlInt16.Value" /> 参数的 <see cref="T:System.Data.SqlTypes.SqlInt16" /> 属性。</returns>
    </member>
    <member name="M:System.Data.SqlTypes.SqlDecimal.op_Implicit(System.Data.SqlTypes.SqlInt32)~System.Data.SqlTypes.SqlDecimal">
      <summary vsli:raw="Converts the supplied &lt;see cref=&quot;T:System.Data.SqlTypes.SqlInt32&quot; /&gt; structure to &lt;see cref=&quot;T:System.Data.SqlTypes.SqlDecimal&quot; /&gt;.">将提供的 <see cref="T:System.Data.SqlTypes.SqlInt32" /> 结构转换为 <see cref="T:System.Data.SqlTypes.SqlDecimal" />。</summary>
      <param name="x" vsli:raw="The &lt;see cref=&quot;T:System.Data.SqlTypes.SqlInt32&quot; /&gt; structure to be converted.">要转换的 <see cref="T:System.Data.SqlTypes.SqlInt32" /> 结构。</param>
      <returns vsli:raw="A new &lt;see cref=&quot;T:System.Data.SqlTypes.SqlDecimal&quot; /&gt; structure whose &lt;see cref=&quot;P:System.Data.SqlTypes.SqlDecimal.Value&quot; /&gt; property is equal to the &lt;see cref=&quot;P:System.Data.SqlTypes.SqlDecimal.Value&quot; /&gt; property of the &lt;see cref=&quot;T:System.Data.SqlTypes.SqlInt32&quot; /&gt; parameter.">一个新的 <see cref="T:System.Data.SqlTypes.SqlDecimal" /> 结构，它的 <see cref="P:System.Data.SqlTypes.SqlDecimal.Value" /> 属性等于 <see cref="P:System.Data.SqlTypes.SqlDecimal.Value" /> 参数的 <see cref="T:System.Data.SqlTypes.SqlInt32" /> 属性。</returns>
    </member>
    <member name="M:System.Data.SqlTypes.SqlDecimal.op_Implicit(System.Data.SqlTypes.SqlInt64)~System.Data.SqlTypes.SqlDecimal">
      <summary vsli:raw="Converts the supplied &lt;see cref=&quot;T:System.Data.SqlTypes.SqlInt64&quot; /&gt; structure to SqlDecimal.">将提供的 <see cref="T:System.Data.SqlTypes.SqlInt64" /> 结构转换为 SqlDecimal。</summary>
      <param name="x" vsli:raw="The &lt;see cref=&quot;T:System.Data.SqlTypes.SqlInt64&quot; /&gt; structure to be converted.">要转换的 <see cref="T:System.Data.SqlTypes.SqlInt64" /> 结构。</param>
      <returns vsli:raw="A new &lt;see cref=&quot;T:System.Data.SqlTypes.SqlDecimal&quot; /&gt; structure whose &lt;see cref=&quot;P:System.Data.SqlTypes.SqlDecimal.Value&quot; /&gt; equals the &lt;see cref=&quot;P:System.Data.SqlTypes.SqlInt64.Value&quot; /&gt; of the &lt;see cref=&quot;T:System.Data.SqlTypes.SqlInt64&quot; /&gt; parameter.">一个新的 <see cref="T:System.Data.SqlTypes.SqlDecimal" /> 结构，它的 <see cref="P:System.Data.SqlTypes.SqlDecimal.Value" /> 等于 <see cref="P:System.Data.SqlTypes.SqlInt64.Value" /> 参数的 <see cref="T:System.Data.SqlTypes.SqlInt64" />。</returns>
    </member>
    <member name="M:System.Data.SqlTypes.SqlDecimal.op_Implicit(System.Data.SqlTypes.SqlMoney)~System.Data.SqlTypes.SqlDecimal">
      <summary vsli:raw="Converts the &lt;see cref=&quot;T:System.Data.SqlTypes.SqlMoney&quot; /&gt; operand to &lt;see cref=&quot;T:System.Data.SqlTypes.SqlDecimal&quot; /&gt;.">将 <see cref="T:System.Data.SqlTypes.SqlMoney" /> 操作数转换为 <see cref="T:System.Data.SqlTypes.SqlDecimal" />。</summary>
      <param name="x" vsli:raw="The &lt;see cref=&quot;T:System.Data.SqlTypes.SqlMoney&quot; /&gt; structure to be converted.">要转换的 <see cref="T:System.Data.SqlTypes.SqlMoney" /> 结构。</param>
      <returns vsli:raw="A new &lt;see cref=&quot;T:System.Data.SqlTypes.SqlDecimal&quot; /&gt; structure whose &lt;see cref=&quot;P:System.Data.SqlTypes.SqlDecimal.Value&quot; /&gt; equals the &lt;see cref=&quot;P:System.Data.SqlTypes.SqlMoney.Value&quot; /&gt; of the &lt;see cref=&quot;T:System.Data.SqlTypes.SqlMoney&quot; /&gt; parameter.">一个新的 <see cref="T:System.Data.SqlTypes.SqlDecimal" /> 结构，它的 <see cref="P:System.Data.SqlTypes.SqlDecimal.Value" /> 等于 <see cref="P:System.Data.SqlTypes.SqlMoney.Value" /> 参数的 <see cref="T:System.Data.SqlTypes.SqlMoney" />。</returns>
    </member>
    <member name="M:System.Data.SqlTypes.SqlDecimal.op_Implicit(System.Decimal)~System.Data.SqlTypes.SqlDecimal">
      <summary vsli:raw="Converts the &lt;see cref=&quot;T:System.Decimal&quot; /&gt; value to &lt;see cref=&quot;T:System.Data.SqlTypes.SqlDecimal&quot; /&gt;.">将 <see cref="T:System.Decimal" /> 值转换为 <see cref="T:System.Data.SqlTypes.SqlDecimal" />。</summary>
      <param name="x" vsli:raw="The &lt;see cref=&quot;T:System.Decimal&quot; /&gt; value to be converted.">要转换的 <see cref="T:System.Decimal" /> 值。</param>
      <returns vsli:raw="A new &lt;see cref=&quot;T:System.Data.SqlTypes.SqlDecimal&quot; /&gt; structure whose &lt;see cref=&quot;P:System.Data.SqlTypes.SqlDecimal.Value&quot; /&gt; property equals the value of the &lt;see langword=&quot;Decimal&quot; /&gt; parameter.">新的 <see cref="T:System.Data.SqlTypes.SqlDecimal" /> 结构，它的 <see cref="P:System.Data.SqlTypes.SqlDecimal.Value" /> 属性等于 <see langword="Decimal" /> 参数的值。</returns>
    </member>
    <member name="M:System.Data.SqlTypes.SqlDecimal.op_Implicit(System.Int64)~System.Data.SqlTypes.SqlDecimal">
      <summary vsli:raw="Converts the supplied &lt;see cref=&quot;T:System.Int64&quot; /&gt; structure to &lt;see cref=&quot;T:System.Data.SqlTypes.SqlDecimal&quot; /&gt;.">将提供的 <see cref="T:System.Int64" /> 结构转换为 <see cref="T:System.Data.SqlTypes.SqlDecimal" />。</summary>
      <param name="x" vsli:raw="The &lt;see cref=&quot;T:System.Int64&quot; /&gt; structure to be converted.">要转换的 <see cref="T:System.Int64" /> 结构。</param>
      <returns vsli:raw="A new &lt;see cref=&quot;T:System.Data.SqlTypes.SqlDecimal&quot; /&gt; structure whose &lt;see cref=&quot;P:System.Data.SqlTypes.SqlDecimal.Value&quot; /&gt; property equals the value of the &lt;see cref=&quot;T:System.Int64&quot; /&gt; parameter.">新的 <see cref="T:System.Data.SqlTypes.SqlDecimal" /> 结构，它的 <see cref="P:System.Data.SqlTypes.SqlDecimal.Value" /> 属性等于 <see cref="T:System.Int64" /> 参数的值。</returns>
    </member>
    <member name="M:System.Data.SqlTypes.SqlDecimal.op_Inequality(System.Data.SqlTypes.SqlDecimal,System.Data.SqlTypes.SqlDecimal)">
      <summary vsli:raw="Performs a logical comparison of the two &lt;see cref=&quot;T:System.Data.SqlTypes.SqlDecimal&quot; /&gt; parameters to determine whether they are not equal.">对两个 <see cref="T:System.Data.SqlTypes.SqlDecimal" /> 参数执行逻辑比较，确定它们是否不相等。</summary>
      <param name="x" vsli:raw="A &lt;see cref=&quot;T:System.Data.SqlTypes.SqlDecimal&quot; /&gt; structure.">
        <see cref="T:System.Data.SqlTypes.SqlDecimal" /> 结构。</param>
      <param name="y" vsli:raw="A &lt;see cref=&quot;T:System.Data.SqlTypes.SqlDecimal&quot; /&gt; structure.">
        <see cref="T:System.Data.SqlTypes.SqlDecimal" /> 结构。</param>
      <returns vsli:raw="A &lt;see cref=&quot;T:System.Data.SqlTypes.SqlBoolean&quot; /&gt; that is &lt;see cref=&quot;F:System.Data.SqlTypes.SqlBoolean.True&quot; /&gt; if the two instances are not equal or &lt;see cref=&quot;F:System.Data.SqlTypes.SqlBoolean.False&quot; /&gt; if the two instances are equal. If either instance of &lt;see cref=&quot;T:System.Data.SqlTypes.SqlDecimal&quot; /&gt; is null, the &lt;see cref=&quot;P:System.Data.SqlTypes.SqlBoolean.Value&quot; /&gt; of the &lt;see cref=&quot;T:System.Data.SqlTypes.SqlBoolean&quot; /&gt; will be &lt;see cref=&quot;F:System.Data.SqlTypes.SqlBoolean.Null&quot; /&gt;.">一个 <see cref="T:System.Data.SqlTypes.SqlBoolean" />，它在两个实例不等时为 <see cref="F:System.Data.SqlTypes.SqlBoolean.True" />，在两个实例相等时为 <see cref="F:System.Data.SqlTypes.SqlBoolean.False" />。 如果 <see cref="T:System.Data.SqlTypes.SqlDecimal" /> 的任一实例为空，则 <see cref="P:System.Data.SqlTypes.SqlBoolean.Value" /> 的 <see cref="T:System.Data.SqlTypes.SqlBoolean" /> 将为 <see cref="F:System.Data.SqlTypes.SqlBoolean.Null" />。</returns>
    </member>
    <member name="M:System.Data.SqlTypes.SqlDecimal.op_LessThan(System.Data.SqlTypes.SqlDecimal,System.Data.SqlTypes.SqlDecimal)">
      <summary vsli:raw="Performs a logical comparison of two &lt;see cref=&quot;T:System.Data.SqlTypes.SqlDecimal&quot; /&gt; structures to determine whether the first is less than the second.">对两个 <see cref="T:System.Data.SqlTypes.SqlDecimal" /> 结构执行逻辑比较，以确定第一个结构是否小于第二个结构。</summary>
      <param name="x" vsli:raw="A &lt;see cref=&quot;T:System.Data.SqlTypes.SqlDecimal&quot; /&gt; structure.">
        <see cref="T:System.Data.SqlTypes.SqlDecimal" /> 结构。</param>
      <param name="y" vsli:raw="A &lt;see cref=&quot;T:System.Data.SqlTypes.SqlDecimal&quot; /&gt; structure.">
        <see cref="T:System.Data.SqlTypes.SqlDecimal" /> 结构。</param>
      <returns vsli:raw="A &lt;see cref=&quot;T:System.Data.SqlTypes.SqlBoolean&quot; /&gt; that is &lt;see cref=&quot;F:System.Data.SqlTypes.SqlBoolean.True&quot; /&gt; if the first instance is less than the second instance. Otherwise, &lt;see cref=&quot;F:System.Data.SqlTypes.SqlBoolean.False&quot; /&gt;. If either instance of &lt;see cref=&quot;T:System.Data.SqlTypes.SqlDecimal&quot; /&gt; is null, the &lt;see cref=&quot;P:System.Data.SqlTypes.SqlBoolean.Value&quot; /&gt; of the &lt;see cref=&quot;T:System.Data.SqlTypes.SqlBoolean&quot; /&gt; will be &lt;see cref=&quot;F:System.Data.SqlTypes.SqlBoolean.Null&quot; /&gt;.">一个 <see cref="T:System.Data.SqlTypes.SqlBoolean" />，如果第一个实例小于第二个实例，则它为 <see cref="F:System.Data.SqlTypes.SqlBoolean.True" />。 否则为 <see cref="F:System.Data.SqlTypes.SqlBoolean.False" />。 如果 <see cref="T:System.Data.SqlTypes.SqlDecimal" /> 的任一实例为空，则 <see cref="P:System.Data.SqlTypes.SqlBoolean.Value" /> 的 <see cref="T:System.Data.SqlTypes.SqlBoolean" /> 将为 <see cref="F:System.Data.SqlTypes.SqlBoolean.Null" />。</returns>
    </member>
    <member name="M:System.Data.SqlTypes.SqlDecimal.op_LessThanOrEqual(System.Data.SqlTypes.SqlDecimal,System.Data.SqlTypes.SqlDecimal)">
      <summary vsli:raw="Performs a logical comparison of the two &lt;see cref=&quot;T:System.Data.SqlTypes.SqlDecimal&quot; /&gt; parameters to determine whether the first is less than or equal to the second.">对两个 <see cref="T:System.Data.SqlTypes.SqlDecimal" /> 参数执行逻辑比较，以确定第一个参数是否小于或等于第二个参数。</summary>
      <param name="x" vsli:raw="A &lt;see cref=&quot;T:System.Data.SqlTypes.SqlDecimal&quot; /&gt; structure.">
        <see cref="T:System.Data.SqlTypes.SqlDecimal" /> 结构。</param>
      <param name="y" vsli:raw="A &lt;see cref=&quot;T:System.Data.SqlTypes.SqlDecimal&quot; /&gt; structure.">
        <see cref="T:System.Data.SqlTypes.SqlDecimal" /> 结构。</param>
      <returns vsli:raw="A &lt;see cref=&quot;T:System.Data.SqlTypes.SqlBoolean&quot; /&gt; that is &lt;see cref=&quot;F:System.Data.SqlTypes.SqlBoolean.True&quot; /&gt; if the first instance is less than or equal to the second instance. Otherwise, &lt;see cref=&quot;F:System.Data.SqlTypes.SqlBoolean.False&quot; /&gt;. If either instance of &lt;see cref=&quot;T:System.Data.SqlTypes.SqlDecimal&quot; /&gt; is null, the &lt;see cref=&quot;P:System.Data.SqlTypes.SqlBoolean.Value&quot; /&gt; of the &lt;see cref=&quot;T:System.Data.SqlTypes.SqlBoolean&quot; /&gt; will be &lt;see cref=&quot;F:System.Data.SqlTypes.SqlBoolean.Null&quot; /&gt;.">一个 <see cref="T:System.Data.SqlTypes.SqlBoolean" />，如果第一个实例小于或等于第二个实例，则它为 <see cref="F:System.Data.SqlTypes.SqlBoolean.True" />。 否则为 <see cref="F:System.Data.SqlTypes.SqlBoolean.False" />。 如果 <see cref="T:System.Data.SqlTypes.SqlDecimal" /> 的任一实例为空，则 <see cref="P:System.Data.SqlTypes.SqlBoolean.Value" /> 的 <see cref="T:System.Data.SqlTypes.SqlBoolean" /> 将为 <see cref="F:System.Data.SqlTypes.SqlBoolean.Null" />。</returns>
    </member>
    <member name="M:System.Data.SqlTypes.SqlDecimal.op_Multiply(System.Data.SqlTypes.SqlDecimal,System.Data.SqlTypes.SqlDecimal)">
      <summary vsli:raw="The multiplication operator computes the product of the two &lt;see cref=&quot;T:System.Data.SqlTypes.SqlDecimal&quot; /&gt; parameters.">该乘法运算符计算两个 <see cref="T:System.Data.SqlTypes.SqlDecimal" /> 参数的乘积。</summary>
      <param name="x" vsli:raw="A &lt;see cref=&quot;T:System.Data.SqlTypes.SqlDecimal&quot; /&gt; structure.">
        <see cref="T:System.Data.SqlTypes.SqlDecimal" /> 结构。</param>
      <param name="y" vsli:raw="A &lt;see cref=&quot;T:System.Data.SqlTypes.SqlDecimal&quot; /&gt; structure.">
        <see cref="T:System.Data.SqlTypes.SqlDecimal" /> 结构。</param>
      <returns vsli:raw="A new &lt;see cref=&quot;T:System.Data.SqlTypes.SqlDecimal&quot; /&gt; structure whose &lt;see cref=&quot;P:System.Data.SqlTypes.SqlDecimal.Value&quot; /&gt; property contains the product of the multiplication.">一个新的 <see cref="T:System.Data.SqlTypes.SqlDecimal" /> 结构，它的 <see cref="P:System.Data.SqlTypes.SqlDecimal.Value" /> 属性包含该乘法运算的乘积。</returns>
    </member>
    <member name="M:System.Data.SqlTypes.SqlDecimal.op_Subtraction(System.Data.SqlTypes.SqlDecimal,System.Data.SqlTypes.SqlDecimal)">
      <summary vsli:raw="Calculates the results of subtracting the second &lt;see cref=&quot;T:System.Data.SqlTypes.SqlDecimal&quot; /&gt; operand from the first.">计算从第一个 <see cref="T:System.Data.SqlTypes.SqlDecimal" /> 操作数中减去第二个操作数所得的结果。</summary>
      <param name="x" vsli:raw="A &lt;see cref=&quot;T:System.Data.SqlTypes.SqlDecimal&quot; /&gt; structure.">
        <see cref="T:System.Data.SqlTypes.SqlDecimal" /> 结构。</param>
      <param name="y" vsli:raw="A &lt;see cref=&quot;T:System.Data.SqlTypes.SqlDecimal&quot; /&gt; structure.">
        <see cref="T:System.Data.SqlTypes.SqlDecimal" /> 结构。</param>
      <returns vsli:raw="A new &lt;see cref=&quot;T:System.Data.SqlTypes.SqlDecimal&quot; /&gt; structure whose Value property contains the results of the subtraction.">一个新的 <see cref="T:System.Data.SqlTypes.SqlDecimal" /> 结构，它的“值”属性包含该减法运算的结果。</returns>
    </member>
    <member name="M:System.Data.SqlTypes.SqlDecimal.op_UnaryNegation(System.Data.SqlTypes.SqlDecimal)">
      <summary vsli:raw="The unary minus operator negates the &lt;see cref=&quot;T:System.Data.SqlTypes.SqlDecimal&quot; /&gt; parameter.">一元负运算符对 <see cref="T:System.Data.SqlTypes.SqlDecimal" /> 参数求反。</summary>
      <param name="x" vsli:raw="The &lt;see cref=&quot;T:System.Data.SqlTypes.SqlDecimal&quot; /&gt; structure to be negated.">需求反的 <see cref="T:System.Data.SqlTypes.SqlDecimal" /> 结构。</param>
      <returns vsli:raw="A new &lt;see cref=&quot;T:System.Data.SqlTypes.SqlDecimal&quot; /&gt; structure whose value contains the results of the negation.">一个新的 <see cref="T:System.Data.SqlTypes.SqlDecimal" /> 结构，其值包含求反的结果。</returns>
    </member>
    <member name="M:System.Data.SqlTypes.SqlDecimal.Parse(System.String)">
      <summary vsli:raw="Converts the &lt;see cref=&quot;T:System.String&quot; /&gt; representation of a number to its &lt;see cref=&quot;T:System.Data.SqlTypes.SqlDecimal&quot; /&gt; equivalent.">将数字的 <see cref="T:System.String" /> 表示形式转换为其等效的 <see cref="T:System.Data.SqlTypes.SqlDecimal" /> 形式。</summary>
      <param name="s" vsli:raw="The &lt;see langword=&quot;String&quot; /&gt; to be parsed.">要分析的 <see langword="String" />。</param>
      <returns vsli:raw="A &lt;see cref=&quot;T:System.Data.SqlTypes.SqlDecimal&quot; /&gt; equivalent to the value that is contained in the specified &lt;see cref=&quot;T:System.String&quot; /&gt;.">一个 <see cref="T:System.Data.SqlTypes.SqlDecimal" />，它与指定的 <see cref="T:System.String" /> 中包含的值等效。</returns>
    </member>
    <member name="M:System.Data.SqlTypes.SqlDecimal.Power(System.Data.SqlTypes.SqlDecimal,System.Double)">
      <summary vsli:raw="Raises the value of the specified &lt;see cref=&quot;T:System.Data.SqlTypes.SqlDecimal&quot; /&gt; structure to the specified exponential power.">将指定的 <see cref="T:System.Data.SqlTypes.SqlDecimal" /> 结构的值乘到指定的幂。</summary>
      <param name="n" vsli:raw="The &lt;see cref=&quot;T:System.Data.SqlTypes.SqlDecimal&quot; /&gt; structure to be raised to a power.">要乘幂的 <see cref="T:System.Data.SqlTypes.SqlDecimal" /> 结构。</param>
      <param name="exp" vsli:raw="A double value that indicates the power to which the number should be raised.">一个 double 类型值，指示数字应乘到的幂。</param>
      <returns vsli:raw="A &lt;see cref=&quot;T:System.Data.SqlTypes.SqlDecimal&quot; /&gt; structure that contains the results.">一个包含结果的 <see cref="T:System.Data.SqlTypes.SqlDecimal" /> 结构。</returns>
    </member>
    <member name="M:System.Data.SqlTypes.SqlDecimal.Round(System.Data.SqlTypes.SqlDecimal,System.Int32)">
      <summary vsli:raw="Gets the number nearest the specified &lt;see cref=&quot;T:System.Data.SqlTypes.SqlDecimal&quot; /&gt; structure's value with the specified precision.">以指定精度获取与指定 <see cref="T:System.Data.SqlTypes.SqlDecimal" /> 结构的值最接近的数字。</summary>
      <param name="n" vsli:raw="The &lt;see cref=&quot;T:System.Data.SqlTypes.SqlDecimal&quot; /&gt; structure to be rounded.">要舍入的 <see cref="T:System.Data.SqlTypes.SqlDecimal" /> 结构。</param>
      <param name="position" vsli:raw="The number of significant fractional digits (precision) in the return value.">返回值中的有效小数位数（精度）。</param>
      <returns vsli:raw="A &lt;see cref=&quot;T:System.Data.SqlTypes.SqlDecimal&quot; /&gt; structure that contains the results of the rounding operation.">一个 <see cref="T:System.Data.SqlTypes.SqlDecimal" /> 结构，其中包含该舍入运算的结果。</returns>
    </member>
    <member name="M:System.Data.SqlTypes.SqlDecimal.Sign(System.Data.SqlTypes.SqlDecimal)">
      <summary vsli:raw="Gets a value that indicates the sign of a &lt;see cref=&quot;T:System.Data.SqlTypes.SqlDecimal&quot; /&gt; structure's &lt;see cref=&quot;P:System.Data.SqlTypes.SqlDecimal.Value&quot; /&gt; property.">获取一个值，该值指示 <see cref="T:System.Data.SqlTypes.SqlDecimal" /> 结构的 <see cref="P:System.Data.SqlTypes.SqlDecimal.Value" /> 属性的符号。</summary>
      <param name="n" vsli:raw="The &lt;see cref=&quot;T:System.Data.SqlTypes.SqlDecimal&quot; /&gt; structure whose sign is to be evaluated.">要计算其符号的 <see cref="T:System.Data.SqlTypes.SqlDecimal" /> 结构。</param>
      <returns vsli:raw="A number that indicates the sign of the &lt;see cref=&quot;T:System.Data.SqlTypes.SqlDecimal&quot; /&gt; structure.">一个指示 <see cref="T:System.Data.SqlTypes.SqlDecimal" /> 结构的符号的数字。</returns>
    </member>
    <member name="M:System.Data.SqlTypes.SqlDecimal.Subtract(System.Data.SqlTypes.SqlDecimal,System.Data.SqlTypes.SqlDecimal)">
      <summary vsli:raw="Calculates the results of subtracting the second &lt;see cref=&quot;T:System.Data.SqlTypes.SqlDecimal&quot; /&gt; operand from the first.">计算从第一个 <see cref="T:System.Data.SqlTypes.SqlDecimal" /> 操作数中减去第二个操作数所得的结果。</summary>
      <param name="x" vsli:raw="A &lt;see cref=&quot;T:System.Data.SqlTypes.SqlDecimal&quot; /&gt; structure.">
        <see cref="T:System.Data.SqlTypes.SqlDecimal" /> 结构。</param>
      <param name="y" vsli:raw="A &lt;see cref=&quot;T:System.Data.SqlTypes.SqlDecimal&quot; /&gt; structure.">
        <see cref="T:System.Data.SqlTypes.SqlDecimal" /> 结构。</param>
      <returns vsli:raw="A new &lt;see cref=&quot;T:System.Data.SqlTypes.SqlDecimal&quot; /&gt; structure whose Value property contains the results of the subtraction.">一个新的 <see cref="T:System.Data.SqlTypes.SqlDecimal" /> 结构，它的“值”属性包含该减法运算的结果。</returns>
    </member>
    <member name="M:System.Data.SqlTypes.SqlDecimal.System#Xml#Serialization#IXmlSerializable#GetSchema">
      <summary vsli:raw="This member supports the .NET Framework infrastructure and is not intended to be used directly from your code.">此成员支持 .NET Framework 结构，不能在代码中直接使用。</summary>
      <returns vsli:raw="An &lt;see langword=&quot;XmlSchema&quot; /&gt;.">
        <see langword="XmlSchema" />。</returns>
    </member>
    <member name="M:System.Data.SqlTypes.SqlDecimal.System#Xml#Serialization#IXmlSerializable#ReadXml(System.Xml.XmlReader)">
      <summary vsli:raw="This member supports the .NET Framework infrastructure and is not intended to be used directly from your code.">此成员支持 .NET Framework 结构，不能在代码中直接使用。</summary>
      <param name="reader" vsli:raw="&lt;see langword=&quot;XmlReader&quot; /&gt;">
        <see langword="XmlReader" />
      </param>
    </member>
    <member name="M:System.Data.SqlTypes.SqlDecimal.System#Xml#Serialization#IXmlSerializable#WriteXml(System.Xml.XmlWriter)">
      <summary vsli:raw="This member supports the .NET Framework infrastructure and is not intended to be used directly from your code.">此成员支持 .NET Framework 结构，不能在代码中直接使用。</summary>
      <param name="writer" vsli:raw="&lt;see langword=&quot;XmlWriter&quot; /&gt;">
        <see langword="XmlWriter" />
      </param>
    </member>
    <member name="M:System.Data.SqlTypes.SqlDecimal.ToDouble">
      <summary vsli:raw="Returns the a double equal to the contents of the &lt;see cref=&quot;P:System.Data.SqlTypes.SqlDecimal.Value&quot; /&gt; property of this instance.">返回等于此实例的 <see cref="P:System.Data.SqlTypes.SqlDecimal.Value" /> 属性的内容的双精度型值。</summary>
      <returns vsli:raw="The decimal representation of the &lt;see cref=&quot;P:System.Data.SqlTypes.SqlDecimal.Value&quot; /&gt; property.">
        <see cref="P:System.Data.SqlTypes.SqlDecimal.Value" /> 属性的小数表示形式。</returns>
    </member>
    <member name="M:System.Data.SqlTypes.SqlDecimal.ToSqlBoolean">
      <summary vsli:raw="Converts this &lt;see cref=&quot;T:System.Data.SqlTypes.SqlDecimal&quot; /&gt; structure to &lt;see cref=&quot;T:System.Data.SqlTypes.SqlBoolean&quot; /&gt;.">将此 <see cref="T:System.Data.SqlTypes.SqlDecimal" /> 结构转换为 <see cref="T:System.Data.SqlTypes.SqlBoolean" />。</summary>
      <returns vsli:raw="&lt;see langword=&quot;true&quot; /&gt; if the &lt;see cref=&quot;P:System.Data.SqlTypes.SqlDecimal.Value&quot; /&gt; is non-zero; &lt;see langword=&quot;false&quot; /&gt; if zero; otherwise Null.">如果 <see cref="P:System.Data.SqlTypes.SqlDecimal.Value" /> 不是零，则为 <see langword="true" />；如果为零，则为 <see langword="false" />；否则为 Null。</returns>
    </member>
    <member name="M:System.Data.SqlTypes.SqlDecimal.ToSqlByte">
      <summary vsli:raw="Converts this &lt;see cref=&quot;T:System.Data.SqlTypes.SqlDecimal&quot; /&gt; structure to &lt;see cref=&quot;T:System.Data.SqlTypes.SqlByte&quot; /&gt;.">将此 <see cref="T:System.Data.SqlTypes.SqlDecimal" /> 结构转换为 <see cref="T:System.Data.SqlTypes.SqlByte" />。</summary>
      <returns vsli:raw="A &lt;see cref=&quot;T:System.Data.SqlTypes.SqlByte&quot; /&gt; structure whose &lt;see langword=&quot;Value&quot; /&gt; equals the &lt;see langword=&quot;Value&quot; /&gt; of this &lt;see cref=&quot;T:System.Data.SqlTypes.SqlDecimal&quot; /&gt; structure. If the &lt;see cref=&quot;T:System.Data.SqlTypes.SqlDecimal&quot; /&gt; structure's Value is &lt;see langword=&quot;true&quot; /&gt;, the &lt;see cref=&quot;T:System.Data.SqlTypes.SqlByte&quot; /&gt; structure's &lt;see langword=&quot;Value&quot; /&gt; will be 1. Otherwise, the &lt;see cref=&quot;T:System.Data.SqlTypes.SqlByte&quot; /&gt; structure's &lt;see langword=&quot;Value&quot; /&gt; will be 0.">一个 <see cref="T:System.Data.SqlTypes.SqlByte" /> 结构，其 <see langword="Value" /> 等于此 <see cref="T:System.Data.SqlTypes.SqlDecimal" /> 结构的 <see langword="Value" />。 如果 <see cref="T:System.Data.SqlTypes.SqlDecimal" /> 结构的值为 <see langword="true" />，则 <see cref="T:System.Data.SqlTypes.SqlByte" /> 结构的 <see langword="Value" /> 将为 1。 否则，<see cref="T:System.Data.SqlTypes.SqlByte" /> 结构的 <see langword="Value" /> 将为 0。</returns>
    </member>
    <member name="M:System.Data.SqlTypes.SqlDecimal.ToSqlDouble">
      <summary vsli:raw="Converts this &lt;see cref=&quot;T:System.Data.SqlTypes.SqlDecimal&quot; /&gt; structure to &lt;see cref=&quot;T:System.Data.SqlTypes.SqlDouble&quot; /&gt;.">将此 <see cref="T:System.Data.SqlTypes.SqlDecimal" /> 结构转换为 <see cref="T:System.Data.SqlTypes.SqlDouble" />。</summary>
      <returns vsli:raw="A &lt;see cref=&quot;T:System.Data.SqlTypes.SqlDouble&quot; /&gt; structure with the same value as this instance of &lt;see cref=&quot;T:System.Data.SqlTypes.SqlDecimal&quot; /&gt;.">一个 <see cref="T:System.Data.SqlTypes.SqlDouble" /> 结构，其值与此 <see cref="T:System.Data.SqlTypes.SqlDecimal" /> 实例的值相同。</returns>
    </member>
    <member name="M:System.Data.SqlTypes.SqlDecimal.ToSqlInt16">
      <summary vsli:raw="Converts this &lt;see cref=&quot;T:System.Data.SqlTypes.SqlDecimal&quot; /&gt; structure to &lt;see cref=&quot;T:System.Data.SqlTypes.SqlInt16&quot; /&gt;.">将此 <see cref="T:System.Data.SqlTypes.SqlDecimal" /> 结构转换为 <see cref="T:System.Data.SqlTypes.SqlInt16" />。</summary>
      <returns vsli:raw="A &lt;see cref=&quot;T:System.Data.SqlTypes.SqlInt16&quot; /&gt; structure with the same value as this instance of &lt;see cref=&quot;T:System.Data.SqlTypes.SqlDecimal&quot; /&gt;.">一个 <see cref="T:System.Data.SqlTypes.SqlInt16" /> 结构，其值与此 <see cref="T:System.Data.SqlTypes.SqlDecimal" /> 实例的值相同。</returns>
    </member>
    <member name="M:System.Data.SqlTypes.SqlDecimal.ToSqlInt32">
      <summary vsli:raw="Converts this &lt;see cref=&quot;T:System.Data.SqlTypes.SqlDecimal&quot; /&gt; structure to &lt;see cref=&quot;T:System.Data.SqlTypes.SqlInt32&quot; /&gt;.">将此 <see cref="T:System.Data.SqlTypes.SqlDecimal" /> 结构转换为 <see cref="T:System.Data.SqlTypes.SqlInt32" />。</summary>
      <returns vsli:raw="A &lt;see cref=&quot;T:System.Data.SqlTypes.SqlInt32&quot; /&gt; structure with the same value as this instance of &lt;see cref=&quot;T:System.Data.SqlTypes.SqlDecimal&quot; /&gt;.">一个 <see cref="T:System.Data.SqlTypes.SqlInt32" /> 结构，其值与此 <see cref="T:System.Data.SqlTypes.SqlDecimal" /> 实例的值相同。</returns>
    </member>
    <member name="M:System.Data.SqlTypes.SqlDecimal.ToSqlInt64">
      <summary vsli:raw="Converts this &lt;see cref=&quot;T:System.Data.SqlTypes.SqlDecimal&quot; /&gt; structure to &lt;see cref=&quot;T:System.Data.SqlTypes.SqlInt64&quot; /&gt;.">将此 <see cref="T:System.Data.SqlTypes.SqlDecimal" /> 结构转换为 <see cref="T:System.Data.SqlTypes.SqlInt64" />。</summary>
      <returns vsli:raw="A &lt;see cref=&quot;T:System.Data.SqlTypes.SqlInt64&quot; /&gt; structure with the same value as this instance of &lt;see cref=&quot;T:System.Data.SqlTypes.SqlDecimal&quot; /&gt;.">一个 <see cref="T:System.Data.SqlTypes.SqlInt64" /> 结构，其值与此 <see cref="T:System.Data.SqlTypes.SqlDecimal" /> 实例的值相同。</returns>
    </member>
    <member name="M:System.Data.SqlTypes.SqlDecimal.ToSqlMoney">
      <summary vsli:raw="Converts this &lt;see cref=&quot;T:System.Data.SqlTypes.SqlDecimal&quot; /&gt; structure to &lt;see cref=&quot;T:System.Data.SqlTypes.SqlMoney&quot; /&gt;.">将此 <see cref="T:System.Data.SqlTypes.SqlDecimal" /> 结构转换为 <see cref="T:System.Data.SqlTypes.SqlMoney" />。</summary>
      <returns vsli:raw="A &lt;see cref=&quot;T:System.Data.SqlTypes.SqlMoney&quot; /&gt; structure with the same value as this instance of &lt;see cref=&quot;T:System.Data.SqlTypes.SqlDecimal&quot; /&gt;.">一个 <see cref="T:System.Data.SqlTypes.SqlMoney" /> 结构，其值与此 <see cref="T:System.Data.SqlTypes.SqlDecimal" /> 实例的值相同。</returns>
    </member>
    <member name="M:System.Data.SqlTypes.SqlDecimal.ToSqlSingle">
      <summary vsli:raw="Converts this &lt;see cref=&quot;T:System.Data.SqlTypes.SqlDecimal&quot; /&gt; structure to &lt;see cref=&quot;T:System.Data.SqlTypes.SqlSingle&quot; /&gt;.">将此 <see cref="T:System.Data.SqlTypes.SqlDecimal" /> 结构转换为 <see cref="T:System.Data.SqlTypes.SqlSingle" />。</summary>
      <returns vsli:raw="A &lt;see cref=&quot;T:System.Data.SqlTypes.SqlSingle&quot; /&gt; structure with the same value as this instance of &lt;see cref=&quot;T:System.Data.SqlTypes.SqlDecimal&quot; /&gt;.">一个 <see cref="T:System.Data.SqlTypes.SqlSingle" /> 结构，其值与此 <see cref="T:System.Data.SqlTypes.SqlDecimal" /> 实例的值相同。</returns>
    </member>
    <member name="M:System.Data.SqlTypes.SqlDecimal.ToSqlString">
      <summary vsli:raw="Converts this &lt;see cref=&quot;T:System.Data.SqlTypes.SqlDecimal&quot; /&gt; structure to &lt;see cref=&quot;T:System.Data.SqlTypes.SqlString&quot; /&gt;.">将此 <see cref="T:System.Data.SqlTypes.SqlDecimal" /> 结构转换为 <see cref="T:System.Data.SqlTypes.SqlString" />。</summary>
      <returns vsli:raw="A &lt;see cref=&quot;T:System.Data.SqlTypes.SqlString&quot; /&gt; structure whose value is a string representing the value contained in this &lt;see cref=&quot;T:System.Data.SqlTypes.SqlDecimal&quot; /&gt; structure.">一个 <see cref="T:System.Data.SqlTypes.SqlString" /> 结构，它的值是一个表示此 <see cref="T:System.Data.SqlTypes.SqlDecimal" /> 结构中包含的值的字符串。</returns>
    </member>
    <member name="M:System.Data.SqlTypes.SqlDecimal.ToString">
      <summary vsli:raw="Converts this &lt;see cref=&quot;T:System.Data.SqlTypes.SqlDecimal&quot; /&gt; structure to &lt;see cref=&quot;T:System.String&quot; /&gt;.">将此 <see cref="T:System.Data.SqlTypes.SqlDecimal" /> 结构转换为 <see cref="T:System.String" />。</summary>
      <returns vsli:raw="A new &lt;see cref=&quot;T:System.String&quot; /&gt; object that contains the string representation of the &lt;see cref=&quot;T:System.Data.SqlTypes.SqlDecimal&quot; /&gt; structure's &lt;see cref=&quot;P:System.Data.SqlTypes.SqlDecimal.Value&quot; /&gt; property.">一个新的 <see cref="T:System.String" /> 对象，其中包含 <see cref="T:System.Data.SqlTypes.SqlDecimal" /> 结构的 <see cref="P:System.Data.SqlTypes.SqlDecimal.Value" /> 属性的字符串表示形式。</returns>
    </member>
    <member name="M:System.Data.SqlTypes.SqlDecimal.Truncate(System.Data.SqlTypes.SqlDecimal,System.Int32)">
      <summary vsli:raw="Truncates the specified &lt;see cref=&quot;T:System.Data.SqlTypes.SqlDecimal&quot; /&gt; structure's value to the that you want position.">将指定 <see cref="T:System.Data.SqlTypes.SqlDecimal" /> 结构的值截断到希望的位置。</summary>
      <param name="n" vsli:raw="The &lt;see cref=&quot;T:System.Data.SqlTypes.SqlDecimal&quot; /&gt; structure to be truncated.">要截断的 <see cref="T:System.Data.SqlTypes.SqlDecimal" /> 结构。</param>
      <param name="position" vsli:raw="The decimal position to which the number will be truncated.">数字将要截断到的小数位置。</param>
      <returns vsli:raw="Supply a negative value for the &lt;paramref name=&quot;position&quot; /&gt; parameter in order to truncate the value to the corresponding position to the left of the decimal point.">为 <paramref name="position" /> 参数提供一个负值，以便将该值截断到小数点左侧对应的位置。</returns>
    </member>
    <member name="P:System.Data.SqlTypes.SqlDecimal.BinData">
      <summary vsli:raw="Gets the binary representation of the value of this &lt;see cref=&quot;T:System.Data.SqlTypes.SqlDecimal&quot; /&gt; structure as an array of bytes.">以字节数组形式获取此 <see cref="T:System.Data.SqlTypes.SqlDecimal" /> 结构的值的二进制表示形式。</summary>
      <returns vsli:raw="An array of bytes that contains the binary representation of the &lt;see cref=&quot;T:System.Data.SqlTypes.SqlDecimal&quot; /&gt; structure's value.">一个字节数组，其中包含 <see cref="T:System.Data.SqlTypes.SqlDecimal" /> 结构的值的二进制表示形式。</returns>
    </member>
    <member name="P:System.Data.SqlTypes.SqlDecimal.Data">
      <summary vsli:raw="Gets the binary representation of this &lt;see cref=&quot;T:System.Data.SqlTypes.SqlDecimal&quot; /&gt; structure as an array of integers.">以整数数组形式获取此 <see cref="T:System.Data.SqlTypes.SqlDecimal" /> 结构的二进制表示形式。</summary>
      <returns vsli:raw="An array of integers that contains the binary representation of this &lt;see cref=&quot;T:System.Data.SqlTypes.SqlDecimal&quot; /&gt; structure.">一个整数数组，其中包含此 <see cref="T:System.Data.SqlTypes.SqlDecimal" /> 结构的二进制表示形式。</returns>
    </member>
    <member name="P:System.Data.SqlTypes.SqlDecimal.IsNull">
      <summary vsli:raw="Indicates whether this &lt;see cref=&quot;T:System.Data.SqlTypes.SqlDecimal&quot; /&gt; structure is null.">指示此 <see cref="T:System.Data.SqlTypes.SqlDecimal" /> 结构是否为 null。</summary>
      <returns vsli:raw="&lt;see langword=&quot;true&quot; /&gt; if this &lt;see cref=&quot;T:System.Data.SqlTypes.SqlDecimal&quot; /&gt; structure is null. Otherwise, &lt;see langword=&quot;false&quot; /&gt;.">如果此 <see cref="T:System.Data.SqlTypes.SqlDecimal" /> 结构为 null，则为 <see langword="true" />。 否则为 <see langword="false" />。</returns>
    </member>
    <member name="P:System.Data.SqlTypes.SqlDecimal.IsPositive">
      <summary vsli:raw="Indicates whether the &lt;see cref=&quot;P:System.Data.SqlTypes.SqlDecimal.Value&quot; /&gt; of this &lt;see cref=&quot;T:System.Data.SqlTypes.SqlDecimal&quot; /&gt; structure is greater than zero.">指示此 <see cref="P:System.Data.SqlTypes.SqlDecimal.Value" /> 结构的 <see cref="T:System.Data.SqlTypes.SqlDecimal" /> 是否大于零。</summary>
      <returns vsli:raw="&lt;see langword=&quot;true&quot; /&gt; if the &lt;see cref=&quot;P:System.Data.SqlTypes.SqlDecimal.Value&quot; /&gt; is assigned to null. Otherwise, &lt;see langword=&quot;false&quot; /&gt;.">如果将 Null 赋给了 <see cref="P:System.Data.SqlTypes.SqlDecimal.Value" />，则为 <see langword="true" />。 否则为 <see langword="false" />。</returns>
    </member>
    <member name="P:System.Data.SqlTypes.SqlDecimal.Precision">
      <summary vsli:raw="Gets the maximum number of digits used to represent the &lt;see cref=&quot;P:System.Data.SqlTypes.SqlDecimal.Value&quot; /&gt; property.">获取用于表示 <see cref="P:System.Data.SqlTypes.SqlDecimal.Value" /> 属性的最大位数。</summary>
      <returns vsli:raw="The maximum number of digits used to represent the &lt;see langword=&quot;Value&quot; /&gt; of this &lt;see cref=&quot;T:System.Data.SqlTypes.SqlDecimal&quot; /&gt; structure.">用于表示此 <see cref="T:System.Data.SqlTypes.SqlDecimal" /> 结构的 <see langword="Value" /> 的最大位数。</returns>
    </member>
    <member name="P:System.Data.SqlTypes.SqlDecimal.Scale">
      <summary vsli:raw="Gets the number of decimal places to which &lt;see cref=&quot;P:System.Data.SqlTypes.SqlDecimal.Value&quot; /&gt; is resolved.">获取 <see cref="P:System.Data.SqlTypes.SqlDecimal.Value" /> 解析为的小数位数。</summary>
      <returns vsli:raw="The number of decimal places to which the &lt;see langword=&quot;Value&quot; /&gt; property is resolved.">
        <see langword="Value" /> 属性解析后的小数位数。</returns>
    </member>
    <member name="P:System.Data.SqlTypes.SqlDecimal.Value">
      <summary vsli:raw="Gets the value of the &lt;see cref=&quot;T:System.Data.SqlTypes.SqlDecimal&quot; /&gt; structure. This property is read-only.">获取 <see cref="T:System.Data.SqlTypes.SqlDecimal" /> 结构的值。 此属性是只读的。</summary>
      <returns vsli:raw="A number in the range -79,228,162,514,264,337,593,543,950,335 through 79,228,162,514,162,514,264,337,593,543,950,335.">介于 -79,228,162,514,264,337,593,543,950,335 到 79,228,162,514,162,514,264,337,593,543,950,335 之间的数字。</returns>
    </member>
    <member name="T:System.Data.SqlTypes.SqlDouble">
      <summary vsli:raw="Represents a floating-point number within the range of -1.79E +308 through 1.79E +308 to be stored in or retrieved from a database.">表示要存储在数据库中或从数据库中检索的浮点数字，该数字介于 -1.79E+308 到 1.79E+308 的范围内。</summary>
    </member>
    <member name="F:System.Data.SqlTypes.SqlDouble.MaxValue">
      <summary vsli:raw="A constant representing the maximum value for a &lt;see cref=&quot;T:System.Data.SqlTypes.SqlDouble&quot; /&gt; structure.">一个常数，表示 <see cref="T:System.Data.SqlTypes.SqlDouble" /> 结构的最大值。</summary>
    </member>
    <member name="F:System.Data.SqlTypes.SqlDouble.MinValue">
      <summary vsli:raw="A constant representing the minimum possible value of &lt;see cref=&quot;T:System.Data.SqlTypes.SqlDouble&quot; /&gt;.">表示 <see cref="T:System.Data.SqlTypes.SqlDouble" /> 的最小可能值的常数。</summary>
    </member>
    <member name="F:System.Data.SqlTypes.SqlDouble.Null">
      <summary vsli:raw="Represents a &lt;see cref=&quot;T:System.DBNull&quot; /&gt; that can be assigned to this instance of the &lt;see cref=&quot;T:System.Data.SqlTypes.SqlDouble&quot; /&gt; structure.">表示可指派给 <see cref="T:System.DBNull" /> 结构的此实例的 <see cref="T:System.Data.SqlTypes.SqlDouble" />。</summary>
    </member>
    <member name="F:System.Data.SqlTypes.SqlDouble.Zero">
      <summary vsli:raw="Represents a zero value that can be assigned to the &lt;see cref=&quot;P:System.Data.SqlTypes.SqlDouble.Value&quot; /&gt; property of an instance of the &lt;see cref=&quot;T:System.Data.SqlTypes.SqlDouble&quot; /&gt; structure.">表示可分配给 <see cref="P:System.Data.SqlTypes.SqlDouble.Value" /> 结构实例的 <see cref="T:System.Data.SqlTypes.SqlDouble" /> 属性的零值。</summary>
    </member>
    <member name="M:System.Data.SqlTypes.SqlDouble.#ctor(System.Double)">
      <summary vsli:raw="Initializes a new instance of the &lt;see cref=&quot;T:System.Data.SqlTypes.SqlDouble&quot; /&gt; structure using the supplied double parameter to set the new &lt;see cref=&quot;T:System.Data.SqlTypes.SqlDouble&quot; /&gt; structure's &lt;see cref=&quot;P:System.Data.SqlTypes.SqlDouble.Value&quot; /&gt; property.">通过使用提供的双精度型参数设置新 <see cref="T:System.Data.SqlTypes.SqlDouble" /> 结构的 <see cref="T:System.Data.SqlTypes.SqlDouble" /> 属性，从而初始化 <see cref="P:System.Data.SqlTypes.SqlDouble.Value" /> 结构的新实例。</summary>
      <param name="value" vsli:raw="A double whose value will be used for the new &lt;see cref=&quot;T:System.Data.SqlTypes.SqlDouble&quot; /&gt;.">一个双精度型值，其值用于新 <see cref="T:System.Data.SqlTypes.SqlDouble" />。</param>
    </member>
    <member name="M:System.Data.SqlTypes.SqlDouble.Add(System.Data.SqlTypes.SqlDouble,System.Data.SqlTypes.SqlDouble)">
      <summary vsli:raw="The addition operator computes the sum of the two &lt;see cref=&quot;T:System.Data.SqlTypes.SqlDouble&quot; /&gt; operands.">该加法运算符计算两个 <see cref="T:System.Data.SqlTypes.SqlDouble" /> 操作数的和。</summary>
      <param name="x" vsli:raw="A &lt;see cref=&quot;T:System.Data.SqlTypes.SqlDouble&quot; /&gt; structure.">
        <see cref="T:System.Data.SqlTypes.SqlDouble" /> 结构。</param>
      <param name="y" vsli:raw="A &lt;see cref=&quot;T:System.Data.SqlTypes.SqlDouble&quot; /&gt; structure.">
        <see cref="T:System.Data.SqlTypes.SqlDouble" /> 结构。</param>
      <returns vsli:raw="The sum of the two &lt;see cref=&quot;T:System.Data.SqlTypes.SqlDouble&quot; /&gt; operands.">两个 <see cref="T:System.Data.SqlTypes.SqlDouble" /> 操作数的和。</returns>
    </member>
    <member name="M:System.Data.SqlTypes.SqlDouble.CompareTo(System.Data.SqlTypes.SqlDouble)">
      <summary vsli:raw="Compares this &lt;see cref=&quot;T:System.Data.SqlTypes.SqlDouble&quot; /&gt; instance to the supplied &lt;see cref=&quot;T:System.Data.SqlTypes.SqlDouble&quot; /&gt; and returns an indication of their relative values.">将此 <see cref="T:System.Data.SqlTypes.SqlDouble" /> 实例与所提供的 <see cref="T:System.Data.SqlTypes.SqlDouble" /> 进行比较，并返回二者相对值的指示值。</summary>
      <param name="value" vsli:raw="The &lt;see cref=&quot;T:System.Data.SqlTypes.SqlDouble&quot; /&gt; to be compared.">要比较的 <see cref="T:System.Data.SqlTypes.SqlDouble" />。</param>
      <returns vsli:raw="A signed number that indicates the relative values of the instance and the object.  &#xA;  &#xA; &lt;list type=&quot;table&quot;&gt;&lt;listheader&gt;&lt;term&gt; Return value&lt;/term&gt;&lt;description&gt; Condition&lt;/description&gt;&lt;/listheader&gt;&lt;item&gt;&lt;term&gt; Less than zero&lt;/term&gt;&lt;description&gt; This instance is less than the object.&lt;/description&gt;&lt;/item&gt;&lt;item&gt;&lt;term&gt; Zero&lt;/term&gt;&lt;description&gt; This instance is the same as the object.&lt;/description&gt;&lt;/item&gt;&lt;item&gt;&lt;term&gt; Greater than zero&lt;/term&gt;&lt;description&gt; This instance is greater than the object  &#xA;  &#xA; -or-  &#xA;  &#xA; The object is a null reference (&lt;see langword=&quot;Nothing&quot; /&gt; in Visual Basic)&lt;/description&gt;&lt;/item&gt;&lt;/list&gt;">一个有符号的数字，它指示该实例和对象的相对值。  
  
 <list type="table"><listheader><term> 返回值</term><description> 条件</description></listheader><item><term> 小于零</term><description> 此实例小于该对象。</description></item><item><term> 零</term><description> 此实例等于该对象。</description></item><item><term> 大于零</term><description> 此实例大于该对象 
- 或 - 
该对象是空引用（在 Visual Basic 中为 <see langword="Nothing" />）</description></item></list></returns>
    </member>
    <member name="M:System.Data.SqlTypes.SqlDouble.CompareTo(System.Object)">
      <summary vsli:raw="Compares this &lt;see cref=&quot;T:System.Data.SqlTypes.SqlDouble&quot; /&gt; instance to the supplied &lt;see cref=&quot;T:System.Object&quot; /&gt; and returns an indication of their relative values.">将此 <see cref="T:System.Data.SqlTypes.SqlDouble" /> 实例与所提供的 <see cref="T:System.Object" /> 进行比较，并返回二者相对值的指示值。</summary>
      <param name="value" vsli:raw="The &lt;see cref=&quot;T:System.Object&quot; /&gt; to compare.">要比较的 <see cref="T:System.Object" />。</param>
      <returns vsli:raw="A signed number that indicates the relative values of the instance and the object.  &#xA;  &#xA; &lt;list type=&quot;table&quot;&gt;&lt;listheader&gt;&lt;term&gt; Return value&lt;/term&gt;&lt;description&gt; Condition&lt;/description&gt;&lt;/listheader&gt;&lt;item&gt;&lt;term&gt; Less than zero&lt;/term&gt;&lt;description&gt; This instance is less than the object.&lt;/description&gt;&lt;/item&gt;&lt;item&gt;&lt;term&gt; Zero&lt;/term&gt;&lt;description&gt; This instance is the same as the object.&lt;/description&gt;&lt;/item&gt;&lt;item&gt;&lt;term&gt; Greater than zero&lt;/term&gt;&lt;description&gt; This instance is greater than the object  &#xA;  &#xA; -or-  &#xA;  &#xA; The object is a null reference (&lt;see langword=&quot;Nothing&quot; /&gt; in Visual Basic).&lt;/description&gt;&lt;/item&gt;&lt;/list&gt;">一个有符号的数字，它指示该实例和对象的相对值。  
  
 <list type="table"><listheader><term> 返回值</term><description> 条件</description></listheader><item><term> 小于零</term><description> 此实例小于该对象。</description></item><item><term> 零</term><description> 此实例等于该对象。</description></item><item><term> 大于零</term><description> 此实例大于该对象 
- 或 - 
该对象是空引用（在 Visual Basic 中为 <see langword="Nothing" />）。</description></item></list></returns>
    </member>
    <member name="M:System.Data.SqlTypes.SqlDouble.Divide(System.Data.SqlTypes.SqlDouble,System.Data.SqlTypes.SqlDouble)">
      <summary vsli:raw="The division operator divides the first &lt;see cref=&quot;T:System.Data.SqlTypes.SqlDouble&quot; /&gt; operand by the second.">该除法运算符将第一个 <see cref="T:System.Data.SqlTypes.SqlDouble" /> 操作数除以第二个操作数。</summary>
      <param name="x" vsli:raw="A &lt;see cref=&quot;T:System.Data.SqlTypes.SqlDouble&quot; /&gt; structure.">
        <see cref="T:System.Data.SqlTypes.SqlDouble" /> 结构。</param>
      <param name="y" vsli:raw="A &lt;see cref=&quot;T:System.Data.SqlTypes.SqlDouble&quot; /&gt; structure.">
        <see cref="T:System.Data.SqlTypes.SqlDouble" /> 结构。</param>
      <returns vsli:raw="A &lt;see cref=&quot;T:System.Data.SqlTypes.SqlDouble&quot; /&gt; structure that contains the results of the division operation.">一个 <see cref="T:System.Data.SqlTypes.SqlDouble" /> 结构，它包含该除法运算的结果。</returns>
    </member>
    <member name="M:System.Data.SqlTypes.SqlDouble.Equals(System.Data.SqlTypes.SqlDouble,System.Data.SqlTypes.SqlDouble)">
      <summary vsli:raw="Performs a logical comparison on two instances of &lt;see cref=&quot;T:System.Data.SqlTypes.SqlDouble&quot; /&gt; to determine whether they are equal.">对 <see cref="T:System.Data.SqlTypes.SqlDouble" /> 的两个实例执行逻辑比较，以确定它们是否相等。</summary>
      <param name="x" vsli:raw="A &lt;see cref=&quot;T:System.Data.SqlTypes.SqlDouble&quot; /&gt; structure.">
        <see cref="T:System.Data.SqlTypes.SqlDouble" /> 结构。</param>
      <param name="y" vsli:raw="A &lt;see cref=&quot;T:System.Data.SqlTypes.SqlDouble&quot; /&gt; structure.">
        <see cref="T:System.Data.SqlTypes.SqlDouble" /> 结构。</param>
      <returns vsli:raw="&lt;see langword=&quot;true&quot; /&gt; if the two values are equal. Otherwise, &lt;see langword=&quot;false&quot; /&gt;.">如果两个值相等，则为 <see langword="true" />。 否则为 <see langword="false" />。</returns>
    </member>
    <member name="M:System.Data.SqlTypes.SqlDouble.Equals(System.Object)">
      <summary vsli:raw="Compares the supplied object parameter to the &lt;see cref=&quot;P:System.Data.SqlTypes.SqlDateTime.Value&quot; /&gt; property of the &lt;see cref=&quot;T:System.Data.SqlTypes.SqlDouble&quot; /&gt; object.">将提供的对象参数与 <see cref="P:System.Data.SqlTypes.SqlDateTime.Value" /> 对象的 <see cref="T:System.Data.SqlTypes.SqlDouble" /> 属性进行比较。</summary>
      <param name="value" vsli:raw="The object to be compared.">要比较的对象。</param>
      <returns vsli:raw="&lt;see langword=&quot;true&quot; /&gt; if the two values are equal. Otherwise, &lt;see langword=&quot;false&quot; /&gt;.">如果两个值相等，则为 <see langword="true" />。 否则为 <see langword="false" />。</returns>
    </member>
    <member name="M:System.Data.SqlTypes.SqlDouble.GetHashCode">
      <summary vsli:raw="Returns the hash code for this &lt;see cref=&quot;T:System.Data.SqlTypes.SqlDouble&quot; /&gt; structure.">返回此 <see cref="T:System.Data.SqlTypes.SqlDouble" /> 结构的哈希代码。</summary>
      <returns vsli:raw="A 32-bit signed integer hash code.">32 位有符号整数哈希代码。</returns>
    </member>
    <member name="M:System.Data.SqlTypes.SqlDouble.GetXsdType(System.Xml.Schema.XmlSchemaSet)">
      <summary vsli:raw="Returns the XML Schema definition language (XSD) of the specified &lt;see cref=&quot;T:System.Xml.Schema.XmlSchemaSet&quot; /&gt;.">返回指定的 <see cref="T:System.Xml.Schema.XmlSchemaSet" /> 的 XML 架构定义语言 (XSD)。</summary>
      <param name="schemaSet" vsli:raw="An &lt;see cref=&quot;T:System.Xml.Schema.XmlSchemaSet&quot; /&gt;.">
        <see cref="T:System.Xml.Schema.XmlSchemaSet" />。</param>
      <returns vsli:raw="A &lt;see langword=&quot;string&quot; /&gt; value that indicates the XSD of the specified &lt;see cref=&quot;T:System.Xml.Schema.XmlSchemaSet&quot; /&gt;.">指示指定的 <see cref="T:System.Xml.Schema.XmlSchemaSet" /> 的 XSD 的 <see langword="string" /> 值。</returns>
    </member>
    <member name="M:System.Data.SqlTypes.SqlDouble.GreaterThan(System.Data.SqlTypes.SqlDouble,System.Data.SqlTypes.SqlDouble)">
      <summary vsli:raw="Compares two instances of &lt;see cref=&quot;T:System.Data.SqlTypes.SqlDouble&quot; /&gt; to determine whether the first is greater than the second.">对 <see cref="T:System.Data.SqlTypes.SqlDouble" /> 的两个实例进行比较，以确定第一个实例是否大于第二个实例。</summary>
      <param name="x" vsli:raw="A &lt;see cref=&quot;T:System.Data.SqlTypes.SqlDouble&quot; /&gt; structure.">
        <see cref="T:System.Data.SqlTypes.SqlDouble" /> 结构。</param>
      <param name="y" vsli:raw="A &lt;see cref=&quot;T:System.Data.SqlTypes.SqlDouble&quot; /&gt; structure.">
        <see cref="T:System.Data.SqlTypes.SqlDouble" /> 结构。</param>
      <returns vsli:raw="A &lt;see cref=&quot;T:System.Data.SqlTypes.SqlBoolean&quot; /&gt; that is &lt;see cref=&quot;F:System.Data.SqlTypes.SqlBoolean.True&quot; /&gt; if the first instance is greater than the second instance. Otherwise, &lt;see cref=&quot;F:System.Data.SqlTypes.SqlBoolean.False&quot; /&gt;. If either instance of &lt;see cref=&quot;T:System.Data.SqlTypes.SqlDouble&quot; /&gt; is null, the &lt;see cref=&quot;P:System.Data.SqlTypes.SqlBoolean.Value&quot; /&gt; of the &lt;see cref=&quot;T:System.Data.SqlTypes.SqlBoolean&quot; /&gt; will be &lt;see cref=&quot;F:System.Data.SqlTypes.SqlBoolean.Null&quot; /&gt;.">一个 <see cref="T:System.Data.SqlTypes.SqlBoolean" />，如果第一个实例大于第二个实例，则它为 <see cref="F:System.Data.SqlTypes.SqlBoolean.True" />。 否则为 <see cref="F:System.Data.SqlTypes.SqlBoolean.False" />。 如果 <see cref="T:System.Data.SqlTypes.SqlDouble" /> 的任一实例为空，则 <see cref="P:System.Data.SqlTypes.SqlBoolean.Value" /> 的 <see cref="T:System.Data.SqlTypes.SqlBoolean" /> 将为 <see cref="F:System.Data.SqlTypes.SqlBoolean.Null" />。</returns>
    </member>
    <member name="M:System.Data.SqlTypes.SqlDouble.GreaterThanOrEqual(System.Data.SqlTypes.SqlDouble,System.Data.SqlTypes.SqlDouble)">
      <summary vsli:raw="Compares two instances of &lt;see cref=&quot;T:System.Data.SqlTypes.SqlDouble&quot; /&gt; to determine whether the first is greater than or equal to the second.">对 <see cref="T:System.Data.SqlTypes.SqlDouble" /> 的两个实例进行比较，以确定第一个实例是否大于或等于第二个实例。</summary>
      <param name="x" vsli:raw="A &lt;see cref=&quot;T:System.Data.SqlTypes.SqlDouble&quot; /&gt; structure.">
        <see cref="T:System.Data.SqlTypes.SqlDouble" /> 结构。</param>
      <param name="y" vsli:raw="A &lt;see cref=&quot;T:System.Data.SqlTypes.SqlDouble&quot; /&gt; structure.">
        <see cref="T:System.Data.SqlTypes.SqlDouble" /> 结构。</param>
      <returns vsli:raw="A &lt;see cref=&quot;T:System.Data.SqlTypes.SqlBoolean&quot; /&gt; that is &lt;see cref=&quot;F:System.Data.SqlTypes.SqlBoolean.True&quot; /&gt; if the first instance is greater than or equal to the second instance. Otherwise, &lt;see cref=&quot;F:System.Data.SqlTypes.SqlBoolean.False&quot; /&gt;. If either instance of &lt;see cref=&quot;T:System.Data.SqlTypes.SqlDouble&quot; /&gt; is null, the &lt;see cref=&quot;P:System.Data.SqlTypes.SqlBoolean.Value&quot; /&gt; of the &lt;see cref=&quot;T:System.Data.SqlTypes.SqlBoolean&quot; /&gt; will be &lt;see cref=&quot;F:System.Data.SqlTypes.SqlBoolean.Null&quot; /&gt;.">一个 <see cref="T:System.Data.SqlTypes.SqlBoolean" />，如果第一个实例大于或等于第二个实例，则为 <see cref="F:System.Data.SqlTypes.SqlBoolean.True" />。 否则为 <see cref="F:System.Data.SqlTypes.SqlBoolean.False" />。 如果 <see cref="T:System.Data.SqlTypes.SqlDouble" /> 的任一实例为空，则 <see cref="P:System.Data.SqlTypes.SqlBoolean.Value" /> 的 <see cref="T:System.Data.SqlTypes.SqlBoolean" /> 将为 <see cref="F:System.Data.SqlTypes.SqlBoolean.Null" />。</returns>
    </member>
    <member name="M:System.Data.SqlTypes.SqlDouble.LessThan(System.Data.SqlTypes.SqlDouble,System.Data.SqlTypes.SqlDouble)">
      <summary vsli:raw="Compares two instances of &lt;see cref=&quot;T:System.Data.SqlTypes.SqlDouble&quot; /&gt; to determine whether the first is less than the second.">对 <see cref="T:System.Data.SqlTypes.SqlDouble" /> 的两个实例进行比较，以确定第一个实例是否小于第二个实例。</summary>
      <param name="x" vsli:raw="A &lt;see cref=&quot;T:System.Data.SqlTypes.SqlDouble&quot; /&gt; structure.">
        <see cref="T:System.Data.SqlTypes.SqlDouble" /> 结构。</param>
      <param name="y" vsli:raw="A &lt;see cref=&quot;T:System.Data.SqlTypes.SqlDouble&quot; /&gt; structure.">
        <see cref="T:System.Data.SqlTypes.SqlDouble" /> 结构。</param>
      <returns vsli:raw="A &lt;see cref=&quot;T:System.Data.SqlTypes.SqlBoolean&quot; /&gt; that is &lt;see cref=&quot;F:System.Data.SqlTypes.SqlBoolean.True&quot; /&gt; if the first instance is less than the second instance. Otherwise, &lt;see cref=&quot;F:System.Data.SqlTypes.SqlBoolean.False&quot; /&gt;. If either instance of &lt;see cref=&quot;T:System.Data.SqlTypes.SqlDouble&quot; /&gt; is null, the &lt;see cref=&quot;P:System.Data.SqlTypes.SqlBoolean.Value&quot; /&gt; of the &lt;see cref=&quot;T:System.Data.SqlTypes.SqlBoolean&quot; /&gt; will be &lt;see cref=&quot;F:System.Data.SqlTypes.SqlBoolean.Null&quot; /&gt;.">一个 <see cref="T:System.Data.SqlTypes.SqlBoolean" />，如果第一个实例小于第二个实例，则它为 <see cref="F:System.Data.SqlTypes.SqlBoolean.True" />。 否则为 <see cref="F:System.Data.SqlTypes.SqlBoolean.False" />。 如果 <see cref="T:System.Data.SqlTypes.SqlDouble" /> 的任一实例为空，则 <see cref="P:System.Data.SqlTypes.SqlBoolean.Value" /> 的 <see cref="T:System.Data.SqlTypes.SqlBoolean" /> 将为 <see cref="F:System.Data.SqlTypes.SqlBoolean.Null" />。</returns>
    </member>
    <member name="M:System.Data.SqlTypes.SqlDouble.LessThanOrEqual(System.Data.SqlTypes.SqlDouble,System.Data.SqlTypes.SqlDouble)">
      <summary vsli:raw="Compares two instances of &lt;see cref=&quot;T:System.Data.SqlTypes.SqlDouble&quot; /&gt; to determine whether the first is less than or equal to the second.">对 <see cref="T:System.Data.SqlTypes.SqlDouble" /> 的两个实例进行比较，以确定第一个实例是否小于或等于第二个实例。</summary>
      <param name="x" vsli:raw="A &lt;see cref=&quot;T:System.Data.SqlTypes.SqlDouble&quot; /&gt; structure.">
        <see cref="T:System.Data.SqlTypes.SqlDouble" /> 结构。</param>
      <param name="y" vsli:raw="A &lt;see cref=&quot;T:System.Data.SqlTypes.SqlDouble&quot; /&gt; structure.">
        <see cref="T:System.Data.SqlTypes.SqlDouble" /> 结构。</param>
      <returns vsli:raw="A &lt;see cref=&quot;T:System.Data.SqlTypes.SqlBoolean&quot; /&gt; that is &lt;see cref=&quot;F:System.Data.SqlTypes.SqlBoolean.True&quot; /&gt; if the first instance is less than or equal to the second instance. Otherwise, &lt;see cref=&quot;F:System.Data.SqlTypes.SqlBoolean.False&quot; /&gt;. If either instance of &lt;see cref=&quot;T:System.Data.SqlTypes.SqlDouble&quot; /&gt; is null, the &lt;see cref=&quot;P:System.Data.SqlTypes.SqlBoolean.Value&quot; /&gt; of the &lt;see cref=&quot;T:System.Data.SqlTypes.SqlBoolean&quot; /&gt; will be &lt;see cref=&quot;F:System.Data.SqlTypes.SqlBoolean.Null&quot; /&gt;.">一个 <see cref="T:System.Data.SqlTypes.SqlBoolean" />，如果第一个实例小于或等于第二个实例，则它为 <see cref="F:System.Data.SqlTypes.SqlBoolean.True" />。 否则为 <see cref="F:System.Data.SqlTypes.SqlBoolean.False" />。 如果 <see cref="T:System.Data.SqlTypes.SqlDouble" /> 的任一实例为空，则 <see cref="P:System.Data.SqlTypes.SqlBoolean.Value" /> 的 <see cref="T:System.Data.SqlTypes.SqlBoolean" /> 将为 <see cref="F:System.Data.SqlTypes.SqlBoolean.Null" />。</returns>
    </member>
    <member name="M:System.Data.SqlTypes.SqlDouble.Multiply(System.Data.SqlTypes.SqlDouble,System.Data.SqlTypes.SqlDouble)">
      <summary vsli:raw="The multiplication operator computes the product of the two &lt;see cref=&quot;T:System.Data.SqlTypes.SqlDouble&quot; /&gt; operands.">该乘法运算符计算两个 <see cref="T:System.Data.SqlTypes.SqlDouble" /> 操作数的乘积。</summary>
      <param name="x" vsli:raw="A &lt;see cref=&quot;T:System.Data.SqlTypes.SqlDouble&quot; /&gt; structure.">
        <see cref="T:System.Data.SqlTypes.SqlDouble" /> 结构。</param>
      <param name="y" vsli:raw="A &lt;see cref=&quot;T:System.Data.SqlTypes.SqlDouble&quot; /&gt; structure.">
        <see cref="T:System.Data.SqlTypes.SqlDouble" /> 结构。</param>
      <returns vsli:raw="The product of the two &lt;see cref=&quot;T:System.Data.SqlTypes.SqlDouble&quot; /&gt; operands.">两个 <see cref="T:System.Data.SqlTypes.SqlDouble" /> 操作数的乘积。</returns>
    </member>
    <member name="M:System.Data.SqlTypes.SqlDouble.NotEquals(System.Data.SqlTypes.SqlDouble,System.Data.SqlTypes.SqlDouble)">
      <summary vsli:raw="Compares two instances of &lt;see cref=&quot;T:System.Data.SqlTypes.SqlDouble&quot; /&gt; to determine whether they are notequal.">对 <see cref="T:System.Data.SqlTypes.SqlDouble" /> 的两个实例进行比较，以确定它们是否不等。</summary>
      <param name="x" vsli:raw="A &lt;see cref=&quot;T:System.Data.SqlTypes.SqlDouble&quot; /&gt; structure.">
        <see cref="T:System.Data.SqlTypes.SqlDouble" /> 结构。</param>
      <param name="y" vsli:raw="A &lt;see cref=&quot;T:System.Data.SqlTypes.SqlDouble&quot; /&gt; structure.">
        <see cref="T:System.Data.SqlTypes.SqlDouble" /> 结构。</param>
      <returns vsli:raw="A &lt;see cref=&quot;T:System.Data.SqlTypes.SqlBoolean&quot; /&gt; that is &lt;see cref=&quot;F:System.Data.SqlTypes.SqlBoolean.True&quot; /&gt; if the two instances are not equal or &lt;see cref=&quot;F:System.Data.SqlTypes.SqlBoolean.False&quot; /&gt; if the two instances are equal. If either instance of &lt;see cref=&quot;T:System.Data.SqlTypes.SqlDouble&quot; /&gt; is null, the &lt;see cref=&quot;P:System.Data.SqlTypes.SqlBoolean.Value&quot; /&gt; of the &lt;see cref=&quot;T:System.Data.SqlTypes.SqlBoolean&quot; /&gt; will be &lt;see cref=&quot;F:System.Data.SqlTypes.SqlBoolean.Null&quot; /&gt;.">一个 <see cref="T:System.Data.SqlTypes.SqlBoolean" />，它在两个实例不等时为 <see cref="F:System.Data.SqlTypes.SqlBoolean.True" />，在两个实例相等时为 <see cref="F:System.Data.SqlTypes.SqlBoolean.False" />。 如果 <see cref="T:System.Data.SqlTypes.SqlDouble" /> 的任一实例为空，则 <see cref="P:System.Data.SqlTypes.SqlBoolean.Value" /> 的 <see cref="T:System.Data.SqlTypes.SqlBoolean" /> 将为 <see cref="F:System.Data.SqlTypes.SqlBoolean.Null" />。</returns>
    </member>
    <member name="M:System.Data.SqlTypes.SqlDouble.op_Addition(System.Data.SqlTypes.SqlDouble,System.Data.SqlTypes.SqlDouble)">
      <summary vsli:raw="The addition operator computes the sum of the two &lt;see cref=&quot;T:System.Data.SqlTypes.SqlDouble&quot; /&gt; operands.">该加法运算符计算两个 <see cref="T:System.Data.SqlTypes.SqlDouble" /> 操作数的和。</summary>
      <param name="x" vsli:raw="A &lt;see cref=&quot;T:System.Data.SqlTypes.SqlDouble&quot; /&gt; structure.">
        <see cref="T:System.Data.SqlTypes.SqlDouble" /> 结构。</param>
      <param name="y" vsli:raw="A &lt;see cref=&quot;T:System.Data.SqlTypes.SqlDouble&quot; /&gt; structure.">
        <see cref="T:System.Data.SqlTypes.SqlDouble" /> 结构。</param>
      <returns vsli:raw="The sum of the two &lt;see cref=&quot;T:System.Data.SqlTypes.SqlDouble&quot; /&gt; operands.">两个 <see cref="T:System.Data.SqlTypes.SqlDouble" /> 操作数的和。</returns>
    </member>
    <member name="M:System.Data.SqlTypes.SqlDouble.op_Division(System.Data.SqlTypes.SqlDouble,System.Data.SqlTypes.SqlDouble)">
      <summary vsli:raw="The division operator divides the first &lt;see cref=&quot;T:System.Data.SqlTypes.SqlDouble&quot; /&gt; operand by the second.">该除法运算符将第一个 <see cref="T:System.Data.SqlTypes.SqlDouble" /> 操作数除以第二个操作数。</summary>
      <param name="x" vsli:raw="A &lt;see cref=&quot;T:System.Data.SqlTypes.SqlDouble&quot; /&gt; structure.">
        <see cref="T:System.Data.SqlTypes.SqlDouble" /> 结构。</param>
      <param name="y" vsli:raw="A &lt;see cref=&quot;T:System.Data.SqlTypes.SqlDouble&quot; /&gt; structure.">
        <see cref="T:System.Data.SqlTypes.SqlDouble" /> 结构。</param>
      <returns vsli:raw="A &lt;see cref=&quot;T:System.Data.SqlTypes.SqlDouble&quot; /&gt; structure that contains the results of the division operation.">一个 <see cref="T:System.Data.SqlTypes.SqlDouble" /> 结构，它包含该除法运算的结果。</returns>
    </member>
    <member name="M:System.Data.SqlTypes.SqlDouble.op_Equality(System.Data.SqlTypes.SqlDouble,System.Data.SqlTypes.SqlDouble)">
      <summary vsli:raw="Performs a logical comparison on two instances of &lt;see cref=&quot;T:System.Data.SqlTypes.SqlDouble&quot; /&gt; to determine whether they are equal.">对 <see cref="T:System.Data.SqlTypes.SqlDouble" /> 的两个实例执行逻辑比较，以确定它们是否相等。</summary>
      <param name="x" vsli:raw="A &lt;see cref=&quot;T:System.Data.SqlTypes.SqlDouble&quot; /&gt; structure.">
        <see cref="T:System.Data.SqlTypes.SqlDouble" /> 结构。</param>
      <param name="y" vsli:raw="A &lt;see cref=&quot;T:System.Data.SqlTypes.SqlDouble&quot; /&gt; structure.">
        <see cref="T:System.Data.SqlTypes.SqlDouble" /> 结构。</param>
      <returns vsli:raw="&lt;see langword=&quot;true&quot; /&gt; if the two values are equal. Otherwise, &lt;see langword=&quot;false&quot; /&gt;.">如果两个值相等，则为 <see langword="true" />。 否则为 <see langword="false" />。</returns>
    </member>
    <member name="M:System.Data.SqlTypes.SqlDouble.op_Explicit(System.Data.SqlTypes.SqlBoolean)~System.Data.SqlTypes.SqlDouble">
      <summary vsli:raw="Converts the supplied &lt;see cref=&quot;T:System.Data.SqlTypes.SqlBoolean&quot; /&gt; parameter to &lt;see cref=&quot;T:System.Data.SqlTypes.SqlDouble&quot; /&gt;.">将提供的 <see cref="T:System.Data.SqlTypes.SqlBoolean" /> 参数转换为 <see cref="T:System.Data.SqlTypes.SqlDouble" />。</summary>
      <param name="x" vsli:raw="The &lt;see cref=&quot;T:System.Data.SqlTypes.SqlBoolean&quot; /&gt; to be converted.">要转换的 <see cref="T:System.Data.SqlTypes.SqlBoolean" />。</param>
      <returns vsli:raw="A new &lt;see cref=&quot;T:System.Data.SqlTypes.SqlDouble&quot; /&gt; structure whose &lt;see cref=&quot;P:System.Data.SqlTypes.SqlDouble.Value&quot; /&gt; is either 0 or 1, depending on the &lt;see cref=&quot;P:System.Data.SqlTypes.SqlBoolean.ByteValue&quot; /&gt; property of the &lt;see cref=&quot;T:System.Data.SqlTypes.SqlBoolean&quot; /&gt; parameter. If the &lt;see cref=&quot;T:System.Data.SqlTypes.SqlBoolean&quot; /&gt; is &lt;see cref=&quot;F:System.Data.SqlTypes.SqlBoolean.Null&quot; /&gt;, the &lt;see cref=&quot;T:System.Data.SqlTypes.SqlDouble&quot; /&gt; structure will be &lt;see cref=&quot;F:System.Data.SqlTypes.SqlDouble.Null&quot; /&gt;.">一个新 <see cref="T:System.Data.SqlTypes.SqlDouble" /> 结构，其 <see cref="P:System.Data.SqlTypes.SqlDouble.Value" /> 为 0 或 1，取决于 <see cref="P:System.Data.SqlTypes.SqlBoolean.ByteValue" /> 参数的 <see cref="T:System.Data.SqlTypes.SqlBoolean" /> 属性。 如果 <see cref="T:System.Data.SqlTypes.SqlBoolean" /> 为 <see cref="F:System.Data.SqlTypes.SqlBoolean.Null" />，则 <see cref="T:System.Data.SqlTypes.SqlDouble" /> 结构将为 <see cref="F:System.Data.SqlTypes.SqlDouble.Null" />。</returns>
    </member>
    <member name="M:System.Data.SqlTypes.SqlDouble.op_Explicit(System.Data.SqlTypes.SqlDouble)~System.Double">
      <summary vsli:raw="Converts the supplied &lt;see cref=&quot;T:System.Data.SqlTypes.SqlDouble&quot; /&gt; structure to double.">将提供的 <see cref="T:System.Data.SqlTypes.SqlDouble" /> 结构转换为双精度型值。</summary>
      <param name="x" vsli:raw="A &lt;see cref=&quot;T:System.Data.SqlTypes.SqlDouble&quot; /&gt; structure.">
        <see cref="T:System.Data.SqlTypes.SqlDouble" /> 结构。</param>
      <returns vsli:raw="A double equivalent to the specified &lt;see cref=&quot;T:System.Data.SqlTypes.SqlDouble&quot; /&gt; structure's value.">等效于指定的 <see cref="T:System.Data.SqlTypes.SqlDouble" /> 结构的值的双精度型值。</returns>
    </member>
    <member name="M:System.Data.SqlTypes.SqlDouble.op_Explicit(System.Data.SqlTypes.SqlString)~System.Data.SqlTypes.SqlDouble">
      <summary vsli:raw="Converts the supplied &lt;see cref=&quot;T:System.Data.SqlTypes.SqlString&quot; /&gt; parameter to &lt;see cref=&quot;T:System.Data.SqlTypes.SqlDouble&quot; /&gt;.">将提供的 <see cref="T:System.Data.SqlTypes.SqlString" /> 参数转换为 <see cref="T:System.Data.SqlTypes.SqlDouble" />。</summary>
      <param name="x" vsli:raw="A &lt;see cref=&quot;T:System.Data.SqlTypes.SqlString&quot; /&gt; object.">
        <see cref="T:System.Data.SqlTypes.SqlString" /> 对象。</param>
      <returns vsli:raw="A new &lt;see cref=&quot;T:System.Data.SqlTypes.SqlDouble&quot; /&gt; whose &lt;see cref=&quot;P:System.Data.SqlTypes.SqlDouble.Value&quot; /&gt; is equal to the value of the number represented by the &lt;see cref=&quot;T:System.Data.SqlTypes.SqlString&quot; /&gt;. If the &lt;see cref=&quot;T:System.Data.SqlTypes.SqlString&quot; /&gt; is &lt;see cref=&quot;F:System.Data.SqlTypes.SqlString.Null&quot; /&gt;, the &lt;see cref=&quot;T:System.Data.SqlTypes.SqlDouble&quot; /&gt; structure will be &lt;see cref=&quot;F:System.Data.SqlTypes.SqlDouble.Null&quot; /&gt;.">一个新的 <see cref="T:System.Data.SqlTypes.SqlDouble" />，其 <see cref="P:System.Data.SqlTypes.SqlDouble.Value" /> 等于 <see cref="T:System.Data.SqlTypes.SqlString" /> 表示的数值。 如果 <see cref="T:System.Data.SqlTypes.SqlString" /> 为 <see cref="F:System.Data.SqlTypes.SqlString.Null" />，则 <see cref="T:System.Data.SqlTypes.SqlDouble" /> 结构将为 <see cref="F:System.Data.SqlTypes.SqlDouble.Null" />。</returns>
    </member>
    <member name="M:System.Data.SqlTypes.SqlDouble.op_GreaterThan(System.Data.SqlTypes.SqlDouble,System.Data.SqlTypes.SqlDouble)">
      <summary vsli:raw="Compares two instances of &lt;see cref=&quot;T:System.Data.SqlTypes.SqlDouble&quot; /&gt; to determine whether the first is greater than the second.">对 <see cref="T:System.Data.SqlTypes.SqlDouble" /> 的两个实例进行比较，以确定第一个实例是否大于第二个实例。</summary>
      <param name="x" vsli:raw="A &lt;see cref=&quot;T:System.Data.SqlTypes.SqlDouble&quot; /&gt; structure.">
        <see cref="T:System.Data.SqlTypes.SqlDouble" /> 结构。</param>
      <param name="y" vsli:raw="A &lt;see cref=&quot;T:System.Data.SqlTypes.SqlDouble&quot; /&gt; structure.">
        <see cref="T:System.Data.SqlTypes.SqlDouble" /> 结构。</param>
      <returns vsli:raw="A &lt;see cref=&quot;T:System.Data.SqlTypes.SqlBoolean&quot; /&gt; that is &lt;see cref=&quot;F:System.Data.SqlTypes.SqlBoolean.True&quot; /&gt; if the first instance is greater than the second instance. Otherwise, &lt;see cref=&quot;F:System.Data.SqlTypes.SqlBoolean.False&quot; /&gt;. If either instance of &lt;see cref=&quot;T:System.Data.SqlTypes.SqlDouble&quot; /&gt; is null, the &lt;see cref=&quot;P:System.Data.SqlTypes.SqlBoolean.Value&quot; /&gt; of the &lt;see cref=&quot;T:System.Data.SqlTypes.SqlBoolean&quot; /&gt; will be &lt;see cref=&quot;F:System.Data.SqlTypes.SqlBoolean.Null&quot; /&gt;.">一个 <see cref="T:System.Data.SqlTypes.SqlBoolean" />，如果第一个实例大于第二个实例，则它为 <see cref="F:System.Data.SqlTypes.SqlBoolean.True" />。 否则为 <see cref="F:System.Data.SqlTypes.SqlBoolean.False" />。 如果 <see cref="T:System.Data.SqlTypes.SqlDouble" /> 的任一实例为空，则 <see cref="P:System.Data.SqlTypes.SqlBoolean.Value" /> 的 <see cref="T:System.Data.SqlTypes.SqlBoolean" /> 将为 <see cref="F:System.Data.SqlTypes.SqlBoolean.Null" />。</returns>
    </member>
    <member name="M:System.Data.SqlTypes.SqlDouble.op_GreaterThanOrEqual(System.Data.SqlTypes.SqlDouble,System.Data.SqlTypes.SqlDouble)">
      <summary vsli:raw="Compares two instances of &lt;see cref=&quot;T:System.Data.SqlTypes.SqlDouble&quot; /&gt; to determine whether the first is greater than or equal to the second.">对 <see cref="T:System.Data.SqlTypes.SqlDouble" /> 的两个实例进行比较，以确定第一个实例是否大于或等于第二个实例。</summary>
      <param name="x" vsli:raw="A &lt;see cref=&quot;T:System.Data.SqlTypes.SqlDouble&quot; /&gt; structure.">
        <see cref="T:System.Data.SqlTypes.SqlDouble" /> 结构。</param>
      <param name="y" vsli:raw="A &lt;see cref=&quot;T:System.Data.SqlTypes.SqlDouble&quot; /&gt; structure.">
        <see cref="T:System.Data.SqlTypes.SqlDouble" /> 结构。</param>
      <returns vsli:raw="A &lt;see cref=&quot;T:System.Data.SqlTypes.SqlBoolean&quot; /&gt; that is &lt;see cref=&quot;F:System.Data.SqlTypes.SqlBoolean.True&quot; /&gt; if the first instance is greater than or equal to the second instance. Otherwise, &lt;see cref=&quot;F:System.Data.SqlTypes.SqlBoolean.False&quot; /&gt;. If either instance of &lt;see cref=&quot;T:System.Data.SqlTypes.SqlDouble&quot; /&gt; is null, the &lt;see cref=&quot;P:System.Data.SqlTypes.SqlBoolean.Value&quot; /&gt; of the &lt;see cref=&quot;T:System.Data.SqlTypes.SqlBoolean&quot; /&gt; will be &lt;see cref=&quot;F:System.Data.SqlTypes.SqlBoolean.Null&quot; /&gt;.">一个 <see cref="T:System.Data.SqlTypes.SqlBoolean" />，如果第一个实例大于或等于第二个实例，则为 <see cref="F:System.Data.SqlTypes.SqlBoolean.True" />。 否则为 <see cref="F:System.Data.SqlTypes.SqlBoolean.False" />。 如果 <see cref="T:System.Data.SqlTypes.SqlDouble" /> 的任一实例为空，则 <see cref="P:System.Data.SqlTypes.SqlBoolean.Value" /> 的 <see cref="T:System.Data.SqlTypes.SqlBoolean" /> 将为 <see cref="F:System.Data.SqlTypes.SqlBoolean.Null" />。</returns>
    </member>
    <member name="M:System.Data.SqlTypes.SqlDouble.op_Implicit(System.Data.SqlTypes.SqlByte)~System.Data.SqlTypes.SqlDouble">
      <summary vsli:raw="Converts the supplied &lt;see cref=&quot;T:System.Data.SqlTypes.SqlByte&quot; /&gt; parameter to &lt;see cref=&quot;T:System.Data.SqlTypes.SqlDouble&quot; /&gt;.">将提供的 <see cref="T:System.Data.SqlTypes.SqlByte" /> 参数转换为 <see cref="T:System.Data.SqlTypes.SqlDouble" />。</summary>
      <param name="x" vsli:raw="A &lt;see cref=&quot;T:System.Data.SqlTypes.SqlDouble&quot; /&gt; structure.">
        <see cref="T:System.Data.SqlTypes.SqlDouble" /> 结构。</param>
      <returns vsli:raw="A &lt;see cref=&quot;T:System.Data.SqlTypes.SqlDouble&quot; /&gt; structure whose &lt;see cref=&quot;P:System.Data.SqlTypes.SqlDouble.Value&quot; /&gt; is equal to the &lt;see cref=&quot;P:System.Data.SqlTypes.SqlByte.Value&quot; /&gt; of the &lt;see cref=&quot;T:System.Data.SqlTypes.SqlByte&quot; /&gt; parameter. If the &lt;see cref=&quot;T:System.Data.SqlTypes.SqlByte&quot; /&gt; is &lt;see cref=&quot;F:System.Data.SqlTypes.SqlByte.Null&quot; /&gt;, the &lt;see cref=&quot;T:System.Data.SqlTypes.SqlDouble&quot; /&gt; structure will be &lt;see cref=&quot;F:System.Data.SqlTypes.SqlDouble.Null&quot; /&gt;.">一个 <see cref="T:System.Data.SqlTypes.SqlDouble" /> 结构，它的 <see cref="P:System.Data.SqlTypes.SqlDouble.Value" /> 等于 <see cref="P:System.Data.SqlTypes.SqlByte.Value" /> 参数的 <see cref="T:System.Data.SqlTypes.SqlByte" />。 如果 <see cref="T:System.Data.SqlTypes.SqlByte" /> 为 <see cref="F:System.Data.SqlTypes.SqlByte.Null" />，则 <see cref="T:System.Data.SqlTypes.SqlDouble" /> 结构将为 <see cref="F:System.Data.SqlTypes.SqlDouble.Null" />。</returns>
    </member>
    <member name="M:System.Data.SqlTypes.SqlDouble.op_Implicit(System.Data.SqlTypes.SqlDecimal)~System.Data.SqlTypes.SqlDouble">
      <summary vsli:raw="Converts the supplied &lt;see cref=&quot;T:System.Data.SqlTypes.SqlDecimal&quot; /&gt; parameter to &lt;see cref=&quot;T:System.Data.SqlTypes.SqlDouble&quot; /&gt;.">将提供的 <see cref="T:System.Data.SqlTypes.SqlDecimal" /> 参数转换为 <see cref="T:System.Data.SqlTypes.SqlDouble" />。</summary>
      <param name="x" vsli:raw="A &lt;see cref=&quot;T:System.Data.SqlTypes.SqlDecimal&quot; /&gt; structure.">
        <see cref="T:System.Data.SqlTypes.SqlDecimal" /> 结构。</param>
      <returns vsli:raw="A new &lt;see cref=&quot;T:System.Data.SqlTypes.SqlDouble&quot; /&gt; structure whose &lt;see cref=&quot;P:System.Data.SqlTypes.SqlDouble.Value&quot; /&gt; is equal to the &lt;see cref=&quot;P:System.Data.SqlTypes.SqlDecimal.Value&quot; /&gt; of the &lt;see cref=&quot;T:System.Data.SqlTypes.SqlDecimal&quot; /&gt; parameter. If the &lt;see cref=&quot;T:System.Data.SqlTypes.SqlDecimal&quot; /&gt; is &lt;see cref=&quot;F:System.Data.SqlTypes.SqlDecimal.Null&quot; /&gt;, the &lt;see cref=&quot;T:System.Data.SqlTypes.SqlDouble&quot; /&gt; structure will be &lt;see cref=&quot;F:System.Data.SqlTypes.SqlDouble.Null&quot; /&gt;.">一个新的 <see cref="T:System.Data.SqlTypes.SqlDouble" /> 结构，它的 <see cref="P:System.Data.SqlTypes.SqlDouble.Value" /> 等于 <see cref="P:System.Data.SqlTypes.SqlDecimal.Value" /> 参数的 <see cref="T:System.Data.SqlTypes.SqlDecimal" />。 如果 <see cref="T:System.Data.SqlTypes.SqlDecimal" /> 为 <see cref="F:System.Data.SqlTypes.SqlDecimal.Null" />，则 <see cref="T:System.Data.SqlTypes.SqlDouble" /> 结构将为 <see cref="F:System.Data.SqlTypes.SqlDouble.Null" />。</returns>
    </member>
    <member name="M:System.Data.SqlTypes.SqlDouble.op_Implicit(System.Data.SqlTypes.SqlInt16)~System.Data.SqlTypes.SqlDouble">
      <summary vsli:raw="Converts the supplied &lt;see cref=&quot;T:System.Data.SqlTypes.SqlInt16&quot; /&gt; parameter to &lt;see cref=&quot;T:System.Data.SqlTypes.SqlDouble&quot; /&gt;.">将提供的 <see cref="T:System.Data.SqlTypes.SqlInt16" /> 参数转换为 <see cref="T:System.Data.SqlTypes.SqlDouble" />。</summary>
      <param name="x" vsli:raw="A &lt;see cref=&quot;T:System.Data.SqlTypes.SqlInt16&quot; /&gt; structure.">
        <see cref="T:System.Data.SqlTypes.SqlInt16" /> 结构。</param>
      <returns vsli:raw="A new &lt;see cref=&quot;T:System.Data.SqlTypes.SqlDouble&quot; /&gt; structure whose &lt;see cref=&quot;P:System.Data.SqlTypes.SqlDouble.Value&quot; /&gt; is equal to the &lt;see cref=&quot;P:System.Data.SqlTypes.SqlInt16.Value&quot; /&gt; of the &lt;see cref=&quot;T:System.Data.SqlTypes.SqlInt16&quot; /&gt; parameter. If the &lt;see cref=&quot;T:System.Data.SqlTypes.SqlInt16&quot; /&gt; is &lt;see cref=&quot;F:System.Data.SqlTypes.SqlInt16.Null&quot; /&gt;, the &lt;see cref=&quot;T:System.Data.SqlTypes.SqlDouble&quot; /&gt; structure will be &lt;see cref=&quot;F:System.Data.SqlTypes.SqlDouble.Null&quot; /&gt;.">一个新的 <see cref="T:System.Data.SqlTypes.SqlDouble" /> 结构，它的 <see cref="P:System.Data.SqlTypes.SqlDouble.Value" /> 等于 <see cref="P:System.Data.SqlTypes.SqlInt16.Value" /> 参数的 <see cref="T:System.Data.SqlTypes.SqlInt16" />。 如果 <see cref="T:System.Data.SqlTypes.SqlInt16" /> 为 <see cref="F:System.Data.SqlTypes.SqlInt16.Null" />，则 <see cref="T:System.Data.SqlTypes.SqlDouble" /> 结构将为 <see cref="F:System.Data.SqlTypes.SqlDouble.Null" />。</returns>
    </member>
    <member name="M:System.Data.SqlTypes.SqlDouble.op_Implicit(System.Data.SqlTypes.SqlInt32)~System.Data.SqlTypes.SqlDouble">
      <summary vsli:raw="Converts the supplied &lt;see cref=&quot;T:System.Data.SqlTypes.SqlInt32&quot; /&gt; parameter to &lt;see cref=&quot;T:System.Data.SqlTypes.SqlDouble&quot; /&gt;.">将提供的 <see cref="T:System.Data.SqlTypes.SqlInt32" /> 参数转换为 <see cref="T:System.Data.SqlTypes.SqlDouble" />。</summary>
      <param name="x" vsli:raw="A &lt;see cref=&quot;T:System.Data.SqlTypes.SqlInt32&quot; /&gt; structure.">
        <see cref="T:System.Data.SqlTypes.SqlInt32" /> 结构。</param>
      <returns vsli:raw="A new &lt;see cref=&quot;T:System.Data.SqlTypes.SqlDouble&quot; /&gt; whose &lt;see cref=&quot;P:System.Data.SqlTypes.SqlDouble.Value&quot; /&gt; is equal to the &lt;see cref=&quot;P:System.Data.SqlTypes.SqlInt32.Value&quot; /&gt; of the &lt;see cref=&quot;T:System.Data.SqlTypes.SqlInt32&quot; /&gt; parameter. If the &lt;see cref=&quot;T:System.Data.SqlTypes.SqlInt32&quot; /&gt; is &lt;see cref=&quot;F:System.Data.SqlTypes.SqlInt32.Null&quot; /&gt;, the &lt;see cref=&quot;T:System.Data.SqlTypes.SqlDouble&quot; /&gt; structure will be &lt;see cref=&quot;F:System.Data.SqlTypes.SqlDouble.Null&quot; /&gt;.">一个新的 <see cref="T:System.Data.SqlTypes.SqlDouble" />，它的 <see cref="P:System.Data.SqlTypes.SqlDouble.Value" /> 等于 <see cref="P:System.Data.SqlTypes.SqlInt32.Value" /> 参数的 <see cref="T:System.Data.SqlTypes.SqlInt32" />。 如果 <see cref="T:System.Data.SqlTypes.SqlInt32" /> 为 <see cref="F:System.Data.SqlTypes.SqlInt32.Null" />，则 <see cref="T:System.Data.SqlTypes.SqlDouble" /> 结构将为 <see cref="F:System.Data.SqlTypes.SqlDouble.Null" />。</returns>
    </member>
    <member name="M:System.Data.SqlTypes.SqlDouble.op_Implicit(System.Data.SqlTypes.SqlInt64)~System.Data.SqlTypes.SqlDouble">
      <summary vsli:raw="Converts the supplied &lt;see cref=&quot;T:System.Data.SqlTypes.SqlInt64&quot; /&gt; parameter to &lt;see cref=&quot;T:System.Data.SqlTypes.SqlDouble&quot; /&gt;.">将提供的 <see cref="T:System.Data.SqlTypes.SqlInt64" /> 参数转换为 <see cref="T:System.Data.SqlTypes.SqlDouble" />。</summary>
      <param name="x" vsli:raw="A &lt;see cref=&quot;T:System.Data.SqlTypes.SqlInt64&quot; /&gt; structure.">
        <see cref="T:System.Data.SqlTypes.SqlInt64" /> 结构。</param>
      <returns vsli:raw="A new &lt;see cref=&quot;T:System.Data.SqlTypes.SqlDouble&quot; /&gt; whose &lt;see cref=&quot;P:System.Data.SqlTypes.SqlDouble.Value&quot; /&gt; is equal to the &lt;see cref=&quot;P:System.Data.SqlTypes.SqlInt64.Value&quot; /&gt; of the &lt;see cref=&quot;T:System.Data.SqlTypes.SqlInt64&quot; /&gt; parameter. If the &lt;see cref=&quot;T:System.Data.SqlTypes.SqlInt64&quot; /&gt; is &lt;see cref=&quot;F:System.Data.SqlTypes.SqlInt64.Null&quot; /&gt;, the &lt;see cref=&quot;T:System.Data.SqlTypes.SqlDouble&quot; /&gt; structure will be &lt;see cref=&quot;F:System.Data.SqlTypes.SqlDouble.Null&quot; /&gt;.">一个新的 <see cref="T:System.Data.SqlTypes.SqlDouble" />，它的 <see cref="P:System.Data.SqlTypes.SqlDouble.Value" /> 等于 <see cref="P:System.Data.SqlTypes.SqlInt64.Value" /> 参数的 <see cref="T:System.Data.SqlTypes.SqlInt64" />。 如果 <see cref="T:System.Data.SqlTypes.SqlInt64" /> 为 <see cref="F:System.Data.SqlTypes.SqlInt64.Null" />，则 <see cref="T:System.Data.SqlTypes.SqlDouble" /> 结构将为 <see cref="F:System.Data.SqlTypes.SqlDouble.Null" />。</returns>
    </member>
    <member name="M:System.Data.SqlTypes.SqlDouble.op_Implicit(System.Data.SqlTypes.SqlMoney)~System.Data.SqlTypes.SqlDouble">
      <summary vsli:raw="Converts the supplied &lt;see cref=&quot;T:System.Data.SqlTypes.SqlMoney&quot; /&gt; parameter to &lt;see cref=&quot;T:System.Data.SqlTypes.SqlDouble&quot; /&gt;.">将提供的 <see cref="T:System.Data.SqlTypes.SqlMoney" /> 参数转换为 <see cref="T:System.Data.SqlTypes.SqlDouble" />。</summary>
      <param name="x" vsli:raw="A &lt;see cref=&quot;T:System.Data.SqlTypes.SqlMoney&quot; /&gt; structure.">
        <see cref="T:System.Data.SqlTypes.SqlMoney" /> 结构。</param>
      <returns vsli:raw="A new &lt;see cref=&quot;T:System.Data.SqlTypes.SqlDouble&quot; /&gt; whose &lt;see cref=&quot;P:System.Data.SqlTypes.SqlDouble.Value&quot; /&gt; is equal to the &lt;see cref=&quot;P:System.Data.SqlTypes.SqlMoney.Value&quot; /&gt; of the &lt;see cref=&quot;T:System.Data.SqlTypes.SqlMoney&quot; /&gt; parameter. If the &lt;see cref=&quot;T:System.Data.SqlTypes.SqlMoney&quot; /&gt; is &lt;see cref=&quot;F:System.Data.SqlTypes.SqlMoney.Null&quot; /&gt;, the &lt;see cref=&quot;T:System.Data.SqlTypes.SqlDouble&quot; /&gt; structure will be &lt;see cref=&quot;F:System.Data.SqlTypes.SqlDouble.Null&quot; /&gt;.">一个新的 <see cref="T:System.Data.SqlTypes.SqlDouble" />，它的 <see cref="P:System.Data.SqlTypes.SqlDouble.Value" /> 等于 <see cref="P:System.Data.SqlTypes.SqlMoney.Value" /> 参数的 <see cref="T:System.Data.SqlTypes.SqlMoney" />。 如果 <see cref="T:System.Data.SqlTypes.SqlMoney" /> 为 <see cref="F:System.Data.SqlTypes.SqlMoney.Null" />，则 <see cref="T:System.Data.SqlTypes.SqlDouble" /> 结构将为 <see cref="F:System.Data.SqlTypes.SqlDouble.Null" />。</returns>
    </member>
    <member name="M:System.Data.SqlTypes.SqlDouble.op_Implicit(System.Data.SqlTypes.SqlSingle)~System.Data.SqlTypes.SqlDouble">
      <summary vsli:raw="Converts the supplied &lt;see cref=&quot;T:System.Data.SqlTypes.SqlSingle&quot; /&gt; parameter to &lt;see cref=&quot;T:System.Data.SqlTypes.SqlDouble&quot; /&gt;.">将提供的 <see cref="T:System.Data.SqlTypes.SqlSingle" /> 参数转换为 <see cref="T:System.Data.SqlTypes.SqlDouble" />。</summary>
      <param name="x" vsli:raw="A &lt;see cref=&quot;T:System.Data.SqlTypes.SqlSingle&quot; /&gt; structure.">
        <see cref="T:System.Data.SqlTypes.SqlSingle" /> 结构。</param>
      <returns vsli:raw="A new &lt;see cref=&quot;T:System.Data.SqlTypes.SqlDouble&quot; /&gt; structure whose &lt;see cref=&quot;P:System.Data.SqlTypes.SqlDouble.Value&quot; /&gt; is equal to the &lt;see cref=&quot;P:System.Data.SqlTypes.SqlSingle.Value&quot; /&gt; of the &lt;see cref=&quot;T:System.Data.SqlTypes.SqlSingle&quot; /&gt; parameter. If the &lt;see cref=&quot;T:System.Data.SqlTypes.SqlSingle&quot; /&gt; is &lt;see cref=&quot;F:System.Data.SqlTypes.SqlSingle.Null&quot; /&gt;, the &lt;see cref=&quot;T:System.Data.SqlTypes.SqlDouble&quot; /&gt; structure will be &lt;see cref=&quot;F:System.Data.SqlTypes.SqlDouble.Null&quot; /&gt;.">一个新的 <see cref="T:System.Data.SqlTypes.SqlDouble" /> 结构，它的 <see cref="P:System.Data.SqlTypes.SqlDouble.Value" /> 等于 <see cref="P:System.Data.SqlTypes.SqlSingle.Value" /> 参数的 <see cref="T:System.Data.SqlTypes.SqlSingle" />。 如果 <see cref="T:System.Data.SqlTypes.SqlSingle" /> 为 <see cref="F:System.Data.SqlTypes.SqlSingle.Null" />，则 <see cref="T:System.Data.SqlTypes.SqlDouble" /> 结构将为 <see cref="F:System.Data.SqlTypes.SqlDouble.Null" />。</returns>
    </member>
    <member name="M:System.Data.SqlTypes.SqlDouble.op_Implicit(System.Double)~System.Data.SqlTypes.SqlDouble">
      <summary vsli:raw="Converts the supplied double value to a &lt;see cref=&quot;T:System.Data.SqlTypes.SqlDouble&quot; /&gt;.">将提供的字节值转换为 <see cref="T:System.Data.SqlTypes.SqlDouble" />。</summary>
      <param name="x" vsli:raw="The double value to convert.">要转换的双精度型值。</param>
      <returns vsli:raw="A &lt;see cref=&quot;T:System.Data.SqlTypes.SqlDouble&quot; /&gt; with the same value as the specified double parameter.">与指定双精度型参数具有相同值的 <see cref="T:System.Data.SqlTypes.SqlDouble" />。</returns>
    </member>
    <member name="M:System.Data.SqlTypes.SqlDouble.op_Inequality(System.Data.SqlTypes.SqlDouble,System.Data.SqlTypes.SqlDouble)">
      <summary vsli:raw="Compares two instances of &lt;see cref=&quot;T:System.Data.SqlTypes.SqlDouble&quot; /&gt; to determine whether they are not equal.">对 <see cref="T:System.Data.SqlTypes.SqlDouble" /> 的两个实例进行比较，以确定它们是否不相等。</summary>
      <param name="x" vsli:raw="A &lt;see cref=&quot;T:System.Data.SqlTypes.SqlDouble&quot; /&gt; structure.">
        <see cref="T:System.Data.SqlTypes.SqlDouble" /> 结构。</param>
      <param name="y" vsli:raw="A &lt;see cref=&quot;T:System.Data.SqlTypes.SqlDouble&quot; /&gt; structure.">
        <see cref="T:System.Data.SqlTypes.SqlDouble" /> 结构。</param>
      <returns vsli:raw="A &lt;see cref=&quot;T:System.Data.SqlTypes.SqlBoolean&quot; /&gt; that is &lt;see cref=&quot;F:System.Data.SqlTypes.SqlBoolean.True&quot; /&gt; if the two instances are not equal or &lt;see cref=&quot;F:System.Data.SqlTypes.SqlBoolean.False&quot; /&gt; if the two instances are equal. If either instance of &lt;see cref=&quot;T:System.Data.SqlTypes.SqlDouble&quot; /&gt; is null, the &lt;see cref=&quot;P:System.Data.SqlTypes.SqlBoolean.Value&quot; /&gt; of the &lt;see cref=&quot;T:System.Data.SqlTypes.SqlBoolean&quot; /&gt; will be &lt;see cref=&quot;F:System.Data.SqlTypes.SqlBoolean.Null&quot; /&gt;.">一个 <see cref="T:System.Data.SqlTypes.SqlBoolean" />，它在两个实例不等时为 <see cref="F:System.Data.SqlTypes.SqlBoolean.True" />，在两个实例相等时为 <see cref="F:System.Data.SqlTypes.SqlBoolean.False" />。 如果 <see cref="T:System.Data.SqlTypes.SqlDouble" /> 的任一实例为空，则 <see cref="P:System.Data.SqlTypes.SqlBoolean.Value" /> 的 <see cref="T:System.Data.SqlTypes.SqlBoolean" /> 将为 <see cref="F:System.Data.SqlTypes.SqlBoolean.Null" />。</returns>
    </member>
    <member name="M:System.Data.SqlTypes.SqlDouble.op_LessThan(System.Data.SqlTypes.SqlDouble,System.Data.SqlTypes.SqlDouble)">
      <summary vsli:raw="Compares two instances of &lt;see cref=&quot;T:System.Data.SqlTypes.SqlDouble&quot; /&gt; to determine whether the first is less than the second.">对 <see cref="T:System.Data.SqlTypes.SqlDouble" /> 的两个实例进行比较，以确定第一个实例是否小于第二个实例。</summary>
      <param name="x" vsli:raw="A &lt;see cref=&quot;T:System.Data.SqlTypes.SqlDouble&quot; /&gt; structure.">
        <see cref="T:System.Data.SqlTypes.SqlDouble" /> 结构。</param>
      <param name="y" vsli:raw="A &lt;see cref=&quot;T:System.Data.SqlTypes.SqlDouble&quot; /&gt; structure.">
        <see cref="T:System.Data.SqlTypes.SqlDouble" /> 结构。</param>
      <returns vsli:raw="A &lt;see cref=&quot;T:System.Data.SqlTypes.SqlBoolean&quot; /&gt; that is &lt;see cref=&quot;F:System.Data.SqlTypes.SqlBoolean.True&quot; /&gt; if the first instance is less than the second instance. Otherwise, &lt;see cref=&quot;F:System.Data.SqlTypes.SqlBoolean.False&quot; /&gt;. If either instance of &lt;see cref=&quot;T:System.Data.SqlTypes.SqlDouble&quot; /&gt; is null, the &lt;see cref=&quot;P:System.Data.SqlTypes.SqlBoolean.Value&quot; /&gt; of the &lt;see cref=&quot;T:System.Data.SqlTypes.SqlBoolean&quot; /&gt; will be &lt;see cref=&quot;F:System.Data.SqlTypes.SqlBoolean.Null&quot; /&gt;.">一个 <see cref="T:System.Data.SqlTypes.SqlBoolean" />，如果第一个实例小于第二个实例，则它为 <see cref="F:System.Data.SqlTypes.SqlBoolean.True" />。 否则为 <see cref="F:System.Data.SqlTypes.SqlBoolean.False" />。 如果 <see cref="T:System.Data.SqlTypes.SqlDouble" /> 的任一实例为空，则 <see cref="P:System.Data.SqlTypes.SqlBoolean.Value" /> 的 <see cref="T:System.Data.SqlTypes.SqlBoolean" /> 将为 <see cref="F:System.Data.SqlTypes.SqlBoolean.Null" />。</returns>
    </member>
    <member name="M:System.Data.SqlTypes.SqlDouble.op_LessThanOrEqual(System.Data.SqlTypes.SqlDouble,System.Data.SqlTypes.SqlDouble)">
      <summary vsli:raw="Compares two instances of &lt;see cref=&quot;T:System.Data.SqlTypes.SqlDouble&quot; /&gt; to determine whether the first is less than or equal to the second.">对 <see cref="T:System.Data.SqlTypes.SqlDouble" /> 的两个实例进行比较，以确定第一个实例是否小于或等于第二个实例。</summary>
      <param name="x" vsli:raw="A &lt;see cref=&quot;T:System.Data.SqlTypes.SqlDouble&quot; /&gt; structure.">
        <see cref="T:System.Data.SqlTypes.SqlDouble" /> 结构。</param>
      <param name="y" vsli:raw="A &lt;see cref=&quot;T:System.Data.SqlTypes.SqlDouble&quot; /&gt; structure.">
        <see cref="T:System.Data.SqlTypes.SqlDouble" /> 结构。</param>
      <returns vsli:raw="A &lt;see cref=&quot;T:System.Data.SqlTypes.SqlBoolean&quot; /&gt; that is &lt;see cref=&quot;F:System.Data.SqlTypes.SqlBoolean.True&quot; /&gt; if the first instance is less than or equal to the second instance. Otherwise, &lt;see cref=&quot;F:System.Data.SqlTypes.SqlBoolean.False&quot; /&gt;. If either instance of &lt;see cref=&quot;T:System.Data.SqlTypes.SqlDouble&quot; /&gt; is null, the &lt;see cref=&quot;P:System.Data.SqlTypes.SqlBoolean.Value&quot; /&gt; of the &lt;see cref=&quot;T:System.Data.SqlTypes.SqlBoolean&quot; /&gt; will be &lt;see cref=&quot;F:System.Data.SqlTypes.SqlBoolean.Null&quot; /&gt;.">一个 <see cref="T:System.Data.SqlTypes.SqlBoolean" />，如果第一个实例小于或等于第二个实例，则它为 <see cref="F:System.Data.SqlTypes.SqlBoolean.True" />。 否则为 <see cref="F:System.Data.SqlTypes.SqlBoolean.False" />。 如果 <see cref="T:System.Data.SqlTypes.SqlDouble" /> 的任一实例为空，则 <see cref="P:System.Data.SqlTypes.SqlBoolean.Value" /> 的 <see cref="T:System.Data.SqlTypes.SqlBoolean" /> 将为 <see cref="F:System.Data.SqlTypes.SqlBoolean.Null" />。</returns>
    </member>
    <member name="M:System.Data.SqlTypes.SqlDouble.op_Multiply(System.Data.SqlTypes.SqlDouble,System.Data.SqlTypes.SqlDouble)">
      <summary vsli:raw="The multiplication operator computes the product of the two &lt;see cref=&quot;T:System.Data.SqlTypes.SqlDouble&quot; /&gt; operands.">该乘法运算符计算两个 <see cref="T:System.Data.SqlTypes.SqlDouble" /> 操作数的乘积。</summary>
      <param name="x" vsli:raw="A &lt;see cref=&quot;T:System.Data.SqlTypes.SqlDouble&quot; /&gt; structure.">
        <see cref="T:System.Data.SqlTypes.SqlDouble" /> 结构。</param>
      <param name="y" vsli:raw="A &lt;see cref=&quot;T:System.Data.SqlTypes.SqlDouble&quot; /&gt; structure.">
        <see cref="T:System.Data.SqlTypes.SqlDouble" /> 结构。</param>
      <returns vsli:raw="The product of the two &lt;see cref=&quot;T:System.Data.SqlTypes.SqlDouble&quot; /&gt; operands.">两个 <see cref="T:System.Data.SqlTypes.SqlDouble" /> 操作数的乘积。</returns>
    </member>
    <member name="M:System.Data.SqlTypes.SqlDouble.op_Subtraction(System.Data.SqlTypes.SqlDouble,System.Data.SqlTypes.SqlDouble)">
      <summary vsli:raw="The subtraction operator the second &lt;see cref=&quot;T:System.Data.SqlTypes.SqlDouble&quot; /&gt; operand from the first.">该减法运算符从第一个 <see cref="T:System.Data.SqlTypes.SqlDouble" /> 操作数中减去第二个操作数。</summary>
      <param name="x" vsli:raw="A &lt;see cref=&quot;T:System.Data.SqlTypes.SqlDouble&quot; /&gt; structure.">
        <see cref="T:System.Data.SqlTypes.SqlDouble" /> 结构。</param>
      <param name="y" vsli:raw="A &lt;see cref=&quot;T:System.Data.SqlTypes.SqlDouble&quot; /&gt; structure.">
        <see cref="T:System.Data.SqlTypes.SqlDouble" /> 结构。</param>
      <returns vsli:raw="The results of the subtraction operation.">该减法运算的结果。</returns>
    </member>
    <member name="M:System.Data.SqlTypes.SqlDouble.op_UnaryNegation(System.Data.SqlTypes.SqlDouble)">
      <summary vsli:raw="Returns the negated value of the specified &lt;see cref=&quot;T:System.Data.SqlTypes.SqlDouble&quot; /&gt; structure.">返回指定 <see cref="T:System.Data.SqlTypes.SqlDouble" /> 结构的求反值。</summary>
      <param name="x" vsli:raw="A &lt;see cref=&quot;T:System.Data.SqlTypes.SqlDouble&quot; /&gt; structure.">
        <see cref="T:System.Data.SqlTypes.SqlDouble" /> 结构。</param>
      <returns vsli:raw="A &lt;see cref=&quot;T:System.Data.SqlTypes.SqlDouble&quot; /&gt; structure that contains the negated value.">一个 <see cref="T:System.Data.SqlTypes.SqlDouble" /> 结构，包含求反的值。</returns>
    </member>
    <member name="M:System.Data.SqlTypes.SqlDouble.Parse(System.String)">
      <summary vsli:raw="Converts the &lt;see cref=&quot;T:System.String&quot; /&gt; representation of a number to its double-precision floating point number equivalent.">将数字的 <see cref="T:System.String" /> 表示形式转换为它的等效双精度浮点数字。</summary>
      <param name="s" vsli:raw="The &lt;see langword=&quot;String&quot; /&gt; to be parsed.">要分析的 <see langword="String" />。</param>
      <returns vsli:raw="A &lt;see cref=&quot;T:System.Data.SqlTypes.SqlDouble&quot; /&gt; that contains the value represented by the &lt;see langword=&quot;String&quot; /&gt;.">一个 <see cref="T:System.Data.SqlTypes.SqlDouble" />，包含 <see langword="String" /> 所表示的值。</returns>
    </member>
    <member name="M:System.Data.SqlTypes.SqlDouble.Subtract(System.Data.SqlTypes.SqlDouble,System.Data.SqlTypes.SqlDouble)">
      <summary vsli:raw="The subtraction operator the second &lt;see cref=&quot;T:System.Data.SqlTypes.SqlDouble&quot; /&gt; operand from the first.">该减法运算符从第一个 <see cref="T:System.Data.SqlTypes.SqlDouble" /> 操作数中减去第二个操作数。</summary>
      <param name="x" vsli:raw="A &lt;see cref=&quot;T:System.Data.SqlTypes.SqlDouble&quot; /&gt; structure.">
        <see cref="T:System.Data.SqlTypes.SqlDouble" /> 结构。</param>
      <param name="y" vsli:raw="A &lt;see cref=&quot;T:System.Data.SqlTypes.SqlDouble&quot; /&gt; structure.">
        <see cref="T:System.Data.SqlTypes.SqlDouble" /> 结构。</param>
      <returns vsli:raw="The results of the subtraction operation.">该减法运算的结果。</returns>
    </member>
    <member name="M:System.Data.SqlTypes.SqlDouble.System#Xml#Serialization#IXmlSerializable#GetSchema">
      <summary vsli:raw="This member supports the .NET Framework infrastructure and is not intended to be used directly from your code.">此成员支持 .NET Framework 结构，不能在代码中直接使用。</summary>
      <returns vsli:raw="An XML schema consumed by .NET Framework.">.NET 框架所使用的 XML 架构。</returns>
    </member>
    <member name="M:System.Data.SqlTypes.SqlDouble.System#Xml#Serialization#IXmlSerializable#ReadXml(System.Xml.XmlReader)">
      <summary vsli:raw="This member supports the .NET Framework infrastructure and is not intended to be used directly from your code.">此成员支持 .NET Framework 结构，不能在代码中直接使用。</summary>
      <param name="reader" vsli:raw="A &lt;see cref=&quot;T:System.Xml.XmlReader&quot; /&gt;.">
        <see cref="T:System.Xml.XmlReader" />。</param>
    </member>
    <member name="M:System.Data.SqlTypes.SqlDouble.System#Xml#Serialization#IXmlSerializable#WriteXml(System.Xml.XmlWriter)">
      <summary vsli:raw="This member supports the .NET Framework infrastructure and is not intended to be used directly from your code.">此成员支持 .NET Framework 结构，不能在代码中直接使用。</summary>
      <param name="writer" vsli:raw="A &lt;see cref=&quot;T:System.Xml.XmlWriter&quot; /&gt;.">
        <see cref="T:System.Xml.XmlWriter" />。</param>
    </member>
    <member name="M:System.Data.SqlTypes.SqlDouble.ToSqlBoolean">
      <summary vsli:raw="Converts this &lt;see cref=&quot;T:System.Data.SqlTypes.SqlDouble&quot; /&gt; structure to &lt;see cref=&quot;T:System.Data.SqlTypes.SqlBoolean&quot; /&gt;.">将此 <see cref="T:System.Data.SqlTypes.SqlDouble" /> 结构转换为 <see cref="T:System.Data.SqlTypes.SqlBoolean" />。</summary>
      <returns vsli:raw="A &lt;see langword=&quot;SqlBoolean&quot; /&gt; structure whose &lt;see cref=&quot;P:System.Data.SqlTypes.SqlBoolean.Value&quot; /&gt; will be &lt;see cref=&quot;F:System.Data.SqlTypes.SqlBoolean.True&quot; /&gt; if the &lt;see cref=&quot;T:System.Data.SqlTypes.SqlDouble&quot; /&gt; structure's &lt;see cref=&quot;P:System.Data.SqlTypes.SqlDouble.Value&quot; /&gt; is non-zero, &lt;see cref=&quot;F:System.Data.SqlTypes.SqlBoolean.False&quot; /&gt; if the &lt;see cref=&quot;T:System.Data.SqlTypes.SqlDouble&quot; /&gt; is zero and &lt;see cref=&quot;F:System.Data.SqlTypes.SqlBoolean.Null&quot; /&gt; if the &lt;see cref=&quot;T:System.Data.SqlTypes.SqlDouble&quot; /&gt; structure is &lt;see cref=&quot;F:System.Data.SqlTypes.SqlDouble.Null&quot; /&gt;.">一个 <see langword="SqlBoolean" /> 结构，如果 <see cref="T:System.Data.SqlTypes.SqlDouble" /> 结构的 <see cref="P:System.Data.SqlTypes.SqlDouble.Value" /> 为非零，其 <see cref="P:System.Data.SqlTypes.SqlBoolean.Value" /> 将是 <see cref="F:System.Data.SqlTypes.SqlBoolean.True" />；如果 <see cref="T:System.Data.SqlTypes.SqlDouble" /> 为零，则为 <see cref="F:System.Data.SqlTypes.SqlBoolean.False" />；如果 <see cref="T:System.Data.SqlTypes.SqlDouble" /> 结构为 <see cref="F:System.Data.SqlTypes.SqlDouble.Null" />，则为 <see cref="F:System.Data.SqlTypes.SqlBoolean.Null" />。</returns>
    </member>
    <member name="M:System.Data.SqlTypes.SqlDouble.ToSqlByte">
      <summary vsli:raw="Converts this &lt;see cref=&quot;T:System.Data.SqlTypes.SqlDouble&quot; /&gt; structure to &lt;see cref=&quot;T:System.Data.SqlTypes.SqlByte&quot; /&gt;.">将此 <see cref="T:System.Data.SqlTypes.SqlDouble" /> 结构转换为 <see cref="T:System.Data.SqlTypes.SqlByte" />。</summary>
      <returns vsli:raw="A &lt;see langword=&quot;SqlByte&quot; /&gt; structure whose &lt;see langword=&quot;Value&quot; /&gt; equals the &lt;see langword=&quot;Value&quot; /&gt; of this &lt;see cref=&quot;T:System.Data.SqlTypes.SqlDouble&quot; /&gt; structure.">一个 <see langword="SqlByte" /> 结构，其 <see langword="Value" /> 等于此 <see cref="T:System.Data.SqlTypes.SqlDouble" /> 结构的 <see langword="Value" />。</returns>
    </member>
    <member name="M:System.Data.SqlTypes.SqlDouble.ToSqlDecimal">
      <summary vsli:raw="Converts this &lt;see cref=&quot;T:System.Data.SqlTypes.SqlDouble&quot; /&gt; structure to &lt;see cref=&quot;T:System.Data.SqlTypes.SqlDecimal&quot; /&gt;.">将此 <see cref="T:System.Data.SqlTypes.SqlDouble" /> 结构转换为 <see cref="T:System.Data.SqlTypes.SqlDecimal" />。</summary>
      <returns vsli:raw="A new &lt;see langword=&quot;SqlDecimal&quot; /&gt; structure whose converted value equals the rounded value of this &lt;see langword=&quot;SqlDouble&quot; /&gt;.">一个新的 <see langword="SqlDecimal" /> 结构，其转换后的值等于此 <see langword="SqlDouble" /> 的舍入值。</returns>
    </member>
    <member name="M:System.Data.SqlTypes.SqlDouble.ToSqlInt16">
      <summary vsli:raw="Converts this &lt;see cref=&quot;T:System.Data.SqlTypes.SqlDouble&quot; /&gt; structure to &lt;see cref=&quot;T:System.Data.SqlTypes.SqlInt16&quot; /&gt;.">将此 <see cref="T:System.Data.SqlTypes.SqlDouble" /> 结构转换为 <see cref="T:System.Data.SqlTypes.SqlInt16" />。</summary>
      <returns vsli:raw="A new &lt;see cref=&quot;T:System.Data.SqlTypes.SqlInt16&quot; /&gt; structure whose &lt;see langword=&quot;Value&quot; /&gt; equals the integer part of the &lt;see cref=&quot;T:System.Data.SqlTypes.SqlDouble&quot; /&gt; structure's value.">一个新的 <see cref="T:System.Data.SqlTypes.SqlInt16" /> 结构，其 <see langword="Value" /> 等于 <see cref="T:System.Data.SqlTypes.SqlDouble" /> 结构值的整数部分。</returns>
    </member>
    <member name="M:System.Data.SqlTypes.SqlDouble.ToSqlInt32">
      <summary vsli:raw="Converts this &lt;see cref=&quot;T:System.Data.SqlTypes.SqlDouble&quot; /&gt; structure to &lt;see cref=&quot;T:System.Data.SqlTypes.SqlInt32&quot; /&gt;.">将此 <see cref="T:System.Data.SqlTypes.SqlDouble" /> 结构转换为 <see cref="T:System.Data.SqlTypes.SqlInt32" />。</summary>
      <returns vsli:raw="A new &lt;see cref=&quot;T:System.Data.SqlTypes.SqlInt32&quot; /&gt; structure whose &lt;see langword=&quot;Value&quot; /&gt; equals the integer part of the &lt;see cref=&quot;T:System.Data.SqlTypes.SqlDouble&quot; /&gt; structure's value.">一个新的 <see cref="T:System.Data.SqlTypes.SqlInt32" /> 结构，其 <see langword="Value" /> 等于 <see cref="T:System.Data.SqlTypes.SqlDouble" /> 结构值的整数部分。</returns>
    </member>
    <member name="M:System.Data.SqlTypes.SqlDouble.ToSqlInt64">
      <summary vsli:raw="Converts this &lt;see cref=&quot;T:System.Data.SqlTypes.SqlDouble&quot; /&gt; structure to &lt;see cref=&quot;T:System.Data.SqlTypes.SqlInt64&quot; /&gt;.">将此 <see cref="T:System.Data.SqlTypes.SqlDouble" /> 结构转换为 <see cref="T:System.Data.SqlTypes.SqlInt64" />。</summary>
      <returns vsli:raw="A new &lt;see cref=&quot;T:System.Data.SqlTypes.SqlInt64&quot; /&gt; structure whose &lt;see langword=&quot;Value&quot; /&gt; equals the integer part of the &lt;see cref=&quot;T:System.Data.SqlTypes.SqlDouble&quot; /&gt; structure's value.">一个新的 <see cref="T:System.Data.SqlTypes.SqlInt64" /> 结构，其 <see langword="Value" /> 等于 <see cref="T:System.Data.SqlTypes.SqlDouble" /> 结构值的整数部分。</returns>
    </member>
    <member name="M:System.Data.SqlTypes.SqlDouble.ToSqlMoney">
      <summary vsli:raw="Converts this &lt;see cref=&quot;T:System.Data.SqlTypes.SqlDouble&quot; /&gt; structure to &lt;see cref=&quot;T:System.Data.SqlTypes.SqlMoney&quot; /&gt;.">将此 <see cref="T:System.Data.SqlTypes.SqlDouble" /> 结构转换为 <see cref="T:System.Data.SqlTypes.SqlMoney" />。</summary>
      <returns vsli:raw="A new &lt;see langword=&quot;SqlMoney&quot; /&gt; structure whose &lt;see cref=&quot;P:System.Data.SqlTypes.SqlMoney.Value&quot; /&gt; is equal to the value of this &lt;see cref=&quot;T:System.Data.SqlTypes.SqlDouble&quot; /&gt;.">一个新的 <see langword="SqlMoney" /> 结构，其 <see cref="P:System.Data.SqlTypes.SqlMoney.Value" /> 等于此 <see cref="T:System.Data.SqlTypes.SqlDouble" /> 的值。</returns>
    </member>
    <member name="M:System.Data.SqlTypes.SqlDouble.ToSqlSingle">
      <summary vsli:raw="Converts this &lt;see cref=&quot;T:System.Data.SqlTypes.SqlDouble&quot; /&gt; structure to &lt;see cref=&quot;T:System.Data.SqlTypes.SqlSingle&quot; /&gt;.">将此 <see cref="T:System.Data.SqlTypes.SqlDouble" /> 结构转换为 <see cref="T:System.Data.SqlTypes.SqlSingle" />。</summary>
      <returns vsli:raw="A new &lt;see langword=&quot;SqlSingle&quot; /&gt; structure whose &lt;see cref=&quot;P:System.Data.SqlTypes.SqlSingle.Value&quot; /&gt; is equal to the &lt;see cref=&quot;P:System.Data.SqlTypes.SqlDouble.Value&quot; /&gt; of this &lt;see cref=&quot;T:System.Data.SqlTypes.SqlDouble&quot; /&gt;.">一个新的 <see langword="SqlSingle" /> 结构，其 <see cref="P:System.Data.SqlTypes.SqlSingle.Value" /> 等于此 <see cref="P:System.Data.SqlTypes.SqlDouble.Value" /> 的 <see cref="T:System.Data.SqlTypes.SqlDouble" />。</returns>
    </member>
    <member name="M:System.Data.SqlTypes.SqlDouble.ToSqlString">
      <summary vsli:raw="Converts this &lt;see cref=&quot;T:System.Data.SqlTypes.SqlDouble&quot; /&gt; structure to &lt;see cref=&quot;T:System.Data.SqlTypes.SqlString&quot; /&gt;.">将此 <see cref="T:System.Data.SqlTypes.SqlDouble" /> 结构转换为 <see cref="T:System.Data.SqlTypes.SqlString" />。</summary>
      <returns vsli:raw="A &lt;see langword=&quot;SqlString&quot; /&gt; representing the &lt;see cref=&quot;P:System.Data.SqlTypes.SqlDouble.Value&quot; /&gt; of this &lt;see cref=&quot;T:System.Data.SqlTypes.SqlDouble&quot; /&gt;.">一个 <see langword="SqlString" />，表示此 <see cref="P:System.Data.SqlTypes.SqlDouble.Value" /> 的 <see cref="T:System.Data.SqlTypes.SqlDouble" />。</returns>
    </member>
    <member name="M:System.Data.SqlTypes.SqlDouble.ToString">
      <summary vsli:raw="Converts this &lt;see cref=&quot;T:System.Data.SqlTypes.SqlDouble&quot; /&gt; structure to a string.">将此 <see cref="T:System.Data.SqlTypes.SqlDouble" /> 结构转换为字符串。</summary>
      <returns vsli:raw="A string representing the &lt;see cref=&quot;P:System.Data.SqlTypes.SqlDouble.Value&quot; /&gt; of this &lt;see cref=&quot;T:System.Data.SqlTypes.SqlDouble&quot; /&gt;.">表示此 <see cref="P:System.Data.SqlTypes.SqlDouble.Value" /> 的 <see cref="T:System.Data.SqlTypes.SqlDouble" /> 的字符串。</returns>
    </member>
    <member name="P:System.Data.SqlTypes.SqlDouble.IsNull">
      <summary vsli:raw="Returns a Boolean value that indicates whether this &lt;see cref=&quot;T:System.Data.SqlTypes.SqlDouble&quot; /&gt; instance is null.">返回一个布尔值，该值指示此 <see cref="T:System.Data.SqlTypes.SqlDouble" /> 实例是否为 null。</summary>
      <returns vsli:raw="&lt;see langword=&quot;true&quot; /&gt; if &lt;see cref=&quot;P:System.Data.SqlTypes.SqlDouble.Value&quot; /&gt; is null. Otherwise, &lt;see langword=&quot;false&quot; /&gt;.">如果 <see langword="true" /> 为 null，则为 <see cref="P:System.Data.SqlTypes.SqlDouble.Value" />。 否则为 <see langword="false" />。</returns>
    </member>
    <member name="P:System.Data.SqlTypes.SqlDouble.Value">
      <summary vsli:raw="Gets the value of the &lt;see cref=&quot;T:System.Data.SqlTypes.SqlDouble&quot; /&gt; structure. This property is read-only.">获取 <see cref="T:System.Data.SqlTypes.SqlDouble" /> 结构的值。 此属性是只读的。</summary>
      <returns vsli:raw="The value of the &lt;see cref=&quot;T:System.Data.SqlTypes.SqlDouble&quot; /&gt; structure.">
        <see cref="T:System.Data.SqlTypes.SqlDouble" /> 结构的值。</returns>
    </member>
    <member name="T:System.Data.SqlTypes.SqlGuid">
      <summary vsli:raw="Represents a GUID to be stored in or retrieved from a database.">表示要存储在数据库中或要从数据库中检索的 GUID。</summary>
    </member>
    <member name="F:System.Data.SqlTypes.SqlGuid.Null">
      <summary vsli:raw="Represents a &lt;see cref=&quot;T:System.DBNull&quot; /&gt; that can be assigned to this instance of the &lt;see cref=&quot;T:System.Data.SqlTypes.SqlGuid&quot; /&gt; structure.">表示可指派给 <see cref="T:System.DBNull" /> 结构的此实例的 <see cref="T:System.Data.SqlTypes.SqlGuid" />。</summary>
    </member>
    <member name="M:System.Data.SqlTypes.SqlGuid.#ctor(System.Byte[])">
      <summary vsli:raw="Initializes a new instance of the &lt;see cref=&quot;T:System.Data.SqlTypes.SqlGuid&quot; /&gt; structure using the supplied byte array parameter.">使用提供的字节数组参数初始化 <see cref="T:System.Data.SqlTypes.SqlGuid" /> 结构的新实例。</summary>
      <param name="value" vsli:raw="A byte array.">一个字节数组。</param>
    </member>
    <member name="M:System.Data.SqlTypes.SqlGuid.#ctor(System.Guid)">
      <summary vsli:raw="Initializes a new instance of the &lt;see cref=&quot;T:System.Data.SqlTypes.SqlGuid&quot; /&gt; structure using the specified &lt;see cref=&quot;T:System.Guid&quot; /&gt; parameter.">使用指定的 <see cref="T:System.Data.SqlTypes.SqlGuid" /> 参数初始化 <see cref="T:System.Guid" /> 结构的新实例。</summary>
      <param name="g" vsli:raw="A &lt;see cref=&quot;T:System.Guid&quot; /&gt;.">一个 <see cref="T:System.Guid" /></param>
    </member>
    <member name="M:System.Data.SqlTypes.SqlGuid.#ctor(System.Int32,System.Int16,System.Int16,System.Byte,System.Byte,System.Byte,System.Byte,System.Byte,System.Byte,System.Byte,System.Byte)">
      <summary vsli:raw="Initializes a new instance of the &lt;see cref=&quot;T:System.Data.SqlTypes.SqlGuid&quot; /&gt; structure using the specified values.">使用指定的值初始化 <see cref="T:System.Data.SqlTypes.SqlGuid" /> 结构的新实例。</summary>
      <param name="a" vsli:raw="The first four bytes of the &lt;see cref=&quot;T:System.Data.SqlTypes.SqlGuid&quot; /&gt;.">
        <see cref="T:System.Data.SqlTypes.SqlGuid" /> 的开头四个字节。</param>
      <param name="b" vsli:raw="The next two bytes of the &lt;see cref=&quot;T:System.Data.SqlTypes.SqlGuid&quot; /&gt;.">
        <see cref="T:System.Data.SqlTypes.SqlGuid" /> 的下两个字节。</param>
      <param name="c" vsli:raw="The next two bytes of the &lt;see cref=&quot;T:System.Data.SqlTypes.SqlGuid&quot; /&gt;.">
        <see cref="T:System.Data.SqlTypes.SqlGuid" /> 的下两个字节。</param>
      <param name="d" vsli:raw="The next byte of the &lt;see cref=&quot;T:System.Data.SqlTypes.SqlGuid&quot; /&gt;.">
        <see cref="T:System.Data.SqlTypes.SqlGuid" /> 的下一个字节。</param>
      <param name="e" vsli:raw="The next byte of the &lt;see cref=&quot;T:System.Data.SqlTypes.SqlGuid&quot; /&gt;.">
        <see cref="T:System.Data.SqlTypes.SqlGuid" /> 的下一个字节。</param>
      <param name="f" vsli:raw="The next byte of the &lt;see cref=&quot;T:System.Data.SqlTypes.SqlGuid&quot; /&gt;.">
        <see cref="T:System.Data.SqlTypes.SqlGuid" /> 的下一个字节。</param>
      <param name="g" vsli:raw="The next byte of the &lt;see cref=&quot;T:System.Data.SqlTypes.SqlGuid&quot; /&gt;.">
        <see cref="T:System.Data.SqlTypes.SqlGuid" /> 的下一个字节。</param>
      <param name="h" vsli:raw="The next byte of the &lt;see cref=&quot;T:System.Data.SqlTypes.SqlGuid&quot; /&gt;.">
        <see cref="T:System.Data.SqlTypes.SqlGuid" /> 的下一个字节。</param>
      <param name="i" vsli:raw="The next byte of the &lt;see cref=&quot;T:System.Data.SqlTypes.SqlGuid&quot; /&gt;.">
        <see cref="T:System.Data.SqlTypes.SqlGuid" /> 的下一个字节。</param>
      <param name="j" vsli:raw="The next byte of the &lt;see cref=&quot;T:System.Data.SqlTypes.SqlGuid&quot; /&gt;.">
        <see cref="T:System.Data.SqlTypes.SqlGuid" /> 的下一个字节。</param>
      <param name="k" vsli:raw="The next byte of the &lt;see cref=&quot;T:System.Data.SqlTypes.SqlGuid&quot; /&gt;.">
        <see cref="T:System.Data.SqlTypes.SqlGuid" /> 的下一个字节。</param>
    </member>
    <member name="M:System.Data.SqlTypes.SqlGuid.#ctor(System.String)">
      <summary vsli:raw="Initializes a new instance of the &lt;see cref=&quot;T:System.Data.SqlTypes.SqlGuid&quot; /&gt; structure using the specified &lt;see cref=&quot;T:System.String&quot; /&gt; parameter.">使用指定的 <see cref="T:System.Data.SqlTypes.SqlGuid" /> 参数初始化 <see cref="T:System.String" /> 结构的新实例。</summary>
      <param name="s" vsli:raw="A &lt;see cref=&quot;T:System.String&quot; /&gt; object.">
        <see cref="T:System.String" /> 对象。</param>
    </member>
    <member name="M:System.Data.SqlTypes.SqlGuid.CompareTo(System.Data.SqlTypes.SqlGuid)">
      <summary vsli:raw="Compares this &lt;see cref=&quot;T:System.Data.SqlTypes.SqlGuid&quot; /&gt; structure to the supplied &lt;see cref=&quot;T:System.Data.SqlTypes.SqlGuid&quot; /&gt; and returns an indication of their relative values. Compares more than the last 6 bytes, but treats the last 6 bytes as the most significant ones in comparisons.">将此 <see cref="T:System.Data.SqlTypes.SqlGuid" /> 结构与提供的 <see cref="T:System.Data.SqlTypes.SqlGuid" /> 进行比较，并返回其相对值的指示值。 不仅仅是比较最后 6 个字节，但会将最后 6 个字节视为比较中最重要的字节。</summary>
      <param name="value" vsli:raw="The &lt;see cref=&quot;T:System.Data.SqlTypes.SqlGuid&quot; /&gt; to be compared.">要比较的 <see cref="T:System.Data.SqlTypes.SqlGuid" />。</param>
      <returns vsli:raw="A signed number that indicates the relative values of the instance and the object.  &#xA;  &#xA; &lt;list type=&quot;table&quot;&gt;&lt;listheader&gt;&lt;term&gt; Return Value&lt;/term&gt;&lt;description&gt; Condition&lt;/description&gt;&lt;/listheader&gt;&lt;item&gt;&lt;term&gt; Less than zero&lt;/term&gt;&lt;description&gt; This instance is less than object.&lt;/description&gt;&lt;/item&gt;&lt;item&gt;&lt;term&gt; Zero&lt;/term&gt;&lt;description&gt; This instance is the same as object.&lt;/description&gt;&lt;/item&gt;&lt;item&gt;&lt;term&gt; Greater than zero&lt;/term&gt;&lt;description&gt; This instance is greater than object  &#xA;  &#xA; -or-  &#xA;  &#xA; object is a null reference (&lt;see langword=&quot;Nothing&quot; /&gt;).&lt;/description&gt;&lt;/item&gt;&lt;/list&gt;">一个有符号的数字，它指示该实例和对象的相对值。  
  
 <list type="table"><listheader><term> 返回值</term><description> 条件</description></listheader><item><term> 小于零</term><description> 此实例小于对象。</description></item><item><term> 零</term><description> 此实例等于对象。</description></item><item><term> 大于零</term><description> 此实例大于对象 
- 或 - 
对象是 null 引用 (<see langword="Nothing" />)。</description></item></list></returns>
    </member>
    <member name="M:System.Data.SqlTypes.SqlGuid.CompareTo(System.Object)">
      <summary vsli:raw="Compares this &lt;see cref=&quot;T:System.Data.SqlTypes.SqlGuid&quot; /&gt; structure to the supplied object and returns an indication of their relative values. Compares more than the last 6 bytes, but treats the last 6 bytes as the most significant ones in comparisons.">将此 <see cref="T:System.Data.SqlTypes.SqlGuid" /> 结构与所提供的对象进行比较，并返回其相对值的指示。 不仅仅是比较最后 6 个字节，但会将最后 6 个字节视为比较中最重要的字节。</summary>
      <param name="value" vsli:raw="The &lt;see cref=&quot;T:System.Object&quot; /&gt; to be compared.">要比较的 <see cref="T:System.Object" />。</param>
      <returns vsli:raw="A signed number that indicates the relative values of the instance and the object.  &#xA;  &#xA; &lt;list type=&quot;table&quot;&gt;&lt;listheader&gt;&lt;term&gt; Return Value&lt;/term&gt;&lt;description&gt; Condition&lt;/description&gt;&lt;/listheader&gt;&lt;item&gt;&lt;term&gt; Less than zero&lt;/term&gt;&lt;description&gt; This instance is less than object.&lt;/description&gt;&lt;/item&gt;&lt;item&gt;&lt;term&gt; Zero&lt;/term&gt;&lt;description&gt; This instance is the same as object.&lt;/description&gt;&lt;/item&gt;&lt;item&gt;&lt;term&gt; Greater than zero&lt;/term&gt;&lt;description&gt; This instance is greater than object  &#xA;  &#xA; -or-  &#xA;  &#xA; object is a null reference (&lt;see langword=&quot;Nothing&quot; /&gt;)&lt;/description&gt;&lt;/item&gt;&lt;/list&gt;">一个有符号的数字，它指示该实例和对象的相对值。  
  
 <list type="table"><listheader><term> 返回值</term><description> 条件</description></listheader><item><term> 小于零</term><description> 此实例小于对象。</description></item><item><term> 零</term><description> 此实例等于对象。</description></item><item><term> 大于零</term><description> 此实例大于对象 
- 或 - 
对象是 null 引用 (<see langword="Nothing" />)</description></item></list></returns>
    </member>
    <member name="M:System.Data.SqlTypes.SqlGuid.Equals(System.Data.SqlTypes.SqlGuid,System.Data.SqlTypes.SqlGuid)">
      <summary vsli:raw="Performs a logical comparison of two &lt;see cref=&quot;T:System.Data.SqlTypes.SqlGuid&quot; /&gt; structures to determine whether they are equal.">对两个 <see cref="T:System.Data.SqlTypes.SqlGuid" /> 结构执行逻辑比较，以确定它们是否相等。</summary>
      <param name="x" vsli:raw="A &lt;see cref=&quot;T:System.Data.SqlTypes.SqlGuid&quot; /&gt; structure.">
        <see cref="T:System.Data.SqlTypes.SqlGuid" /> 结构。</param>
      <param name="y" vsli:raw="A &lt;see cref=&quot;T:System.Data.SqlTypes.SqlGuid&quot; /&gt; structure.">
        <see cref="T:System.Data.SqlTypes.SqlGuid" /> 结构。</param>
      <returns vsli:raw="&lt;see langword=&quot;true&quot; /&gt; if the two values are equal. Otherwise, &lt;see langword=&quot;false&quot; /&gt;. If either instance is null, then the &lt;see langword=&quot;SqlGuid&quot; /&gt; will be null.">如果两个值相等，则为 <see langword="true" />。 否则为 <see langword="false" />。 如果任一实例为 null，则 <see langword="SqlGuid" /> 将为 null。</returns>
    </member>
    <member name="M:System.Data.SqlTypes.SqlGuid.Equals(System.Object)">
      <summary vsli:raw="Compares the supplied object parameter to the &lt;see cref=&quot;P:System.Data.SqlTypes.SqlGuid.Value&quot; /&gt; property of the &lt;see cref=&quot;T:System.Data.SqlTypes.SqlGuid&quot; /&gt; object.">将提供的对象参数与 <see cref="P:System.Data.SqlTypes.SqlGuid.Value" /> 对象的 <see cref="T:System.Data.SqlTypes.SqlGuid" /> 属性进行比较。</summary>
      <param name="value" vsli:raw="The object to be compared.">要比较的对象。</param>
      <returns vsli:raw="&lt;see langword=&quot;true&quot; /&gt; if object is an instance of &lt;see cref=&quot;T:System.Data.SqlTypes.SqlGuid&quot; /&gt; and the two are equal; otherwise &lt;see langword=&quot;false&quot; /&gt;.">如果对象是 <see cref="T:System.Data.SqlTypes.SqlGuid" /> 的实例并且两者相等，则为 <see langword="true" />；否则为 <see langword="false" />。</returns>
    </member>
    <member name="M:System.Data.SqlTypes.SqlGuid.GetHashCode">
      <summary vsli:raw="Returns the hash code of this &lt;see cref=&quot;T:System.Data.SqlTypes.SqlGuid&quot; /&gt; structure.">返回此 <see cref="T:System.Data.SqlTypes.SqlGuid" /> 结构的哈希代码。</summary>
      <returns vsli:raw="A 32-bit signed integer hash code.">32 位有符号整数哈希代码。</returns>
    </member>
    <member name="M:System.Data.SqlTypes.SqlGuid.GetXsdType(System.Xml.Schema.XmlSchemaSet)">
      <summary vsli:raw="Returns the XML Schema definition language (XSD) of the specified &lt;see cref=&quot;T:System.Xml.Schema.XmlSchemaSet&quot; /&gt;.">返回指定的 <see cref="T:System.Xml.Schema.XmlSchemaSet" /> 的 XML 架构定义语言 (XSD)。</summary>
      <param name="schemaSet" vsli:raw="A &lt;see cref=&quot;T:System.Xml.Schema.XmlSchemaSet&quot; /&gt;.">
        <see cref="T:System.Xml.Schema.XmlSchemaSet" />。</param>
      <returns vsli:raw="A &lt;see langword=&quot;string&quot; /&gt; value that indicates the XSD of the specified &lt;see cref=&quot;T:System.Xml.Schema.XmlSchemaSet&quot; /&gt;.">指示指定的 <see cref="T:System.Xml.Schema.XmlSchemaSet" /> 的 XSD 的 <see langword="string" /> 值。</returns>
    </member>
    <member name="M:System.Data.SqlTypes.SqlGuid.GreaterThan(System.Data.SqlTypes.SqlGuid,System.Data.SqlTypes.SqlGuid)">
      <summary vsli:raw="Compares two instances of &lt;see cref=&quot;T:System.Data.SqlTypes.SqlGuid&quot; /&gt; to determine whether the first is greater than the second.">对 <see cref="T:System.Data.SqlTypes.SqlGuid" /> 的两个实例进行比较，以确定第一个实例是否大于第二个实例。</summary>
      <param name="x" vsli:raw="A &lt;see cref=&quot;T:System.Data.SqlTypes.SqlGuid&quot; /&gt; structure.">
        <see cref="T:System.Data.SqlTypes.SqlGuid" /> 结构。</param>
      <param name="y" vsli:raw="A &lt;see cref=&quot;T:System.Data.SqlTypes.SqlGuid&quot; /&gt; structure.">
        <see cref="T:System.Data.SqlTypes.SqlGuid" /> 结构。</param>
      <returns vsli:raw="A &lt;see cref=&quot;T:System.Data.SqlTypes.SqlBoolean&quot; /&gt; that is &lt;see cref=&quot;F:System.Data.SqlTypes.SqlBoolean.True&quot; /&gt; if the first instance is greater than the second instance. Otherwise, &lt;see cref=&quot;F:System.Data.SqlTypes.SqlBoolean.False&quot; /&gt;. If either instance of &lt;see cref=&quot;T:System.Data.SqlTypes.SqlGuid&quot; /&gt; is null, the &lt;see cref=&quot;P:System.Data.SqlTypes.SqlBoolean.Value&quot; /&gt; of the &lt;see cref=&quot;T:System.Data.SqlTypes.SqlBoolean&quot; /&gt; will be &lt;see cref=&quot;F:System.Data.SqlTypes.SqlBoolean.Null&quot; /&gt;.">一个 <see cref="T:System.Data.SqlTypes.SqlBoolean" />，如果第一个实例大于第二个实例，则它为 <see cref="F:System.Data.SqlTypes.SqlBoolean.True" />。 否则为 <see cref="F:System.Data.SqlTypes.SqlBoolean.False" />。 如果 <see cref="T:System.Data.SqlTypes.SqlGuid" /> 的任一实例为空，则 <see cref="P:System.Data.SqlTypes.SqlBoolean.Value" /> 的 <see cref="T:System.Data.SqlTypes.SqlBoolean" /> 将为 <see cref="F:System.Data.SqlTypes.SqlBoolean.Null" />。</returns>
    </member>
    <member name="M:System.Data.SqlTypes.SqlGuid.GreaterThanOrEqual(System.Data.SqlTypes.SqlGuid,System.Data.SqlTypes.SqlGuid)">
      <summary vsli:raw="Compares two instances of &lt;see cref=&quot;T:System.Data.SqlTypes.SqlGuid&quot; /&gt; to determine whether the first is greater than or equal to the second.">对 <see cref="T:System.Data.SqlTypes.SqlGuid" /> 的两个实例进行比较，以确定第一个实例是否大于或等于第二个实例。</summary>
      <param name="x" vsli:raw="A &lt;see cref=&quot;T:System.Data.SqlTypes.SqlGuid&quot; /&gt; structure.">
        <see cref="T:System.Data.SqlTypes.SqlGuid" /> 结构。</param>
      <param name="y" vsli:raw="A &lt;see cref=&quot;T:System.Data.SqlTypes.SqlGuid&quot; /&gt; structure.">
        <see cref="T:System.Data.SqlTypes.SqlGuid" /> 结构。</param>
      <returns vsli:raw="A &lt;see cref=&quot;T:System.Data.SqlTypes.SqlBoolean&quot; /&gt; that is &lt;see cref=&quot;F:System.Data.SqlTypes.SqlBoolean.True&quot; /&gt; if the first instance is greater than or equal to the second instance. Otherwise, &lt;see cref=&quot;F:System.Data.SqlTypes.SqlBoolean.False&quot; /&gt;. If either instance of &lt;see cref=&quot;T:System.Data.SqlTypes.SqlGuid&quot; /&gt; is null, the &lt;see cref=&quot;P:System.Data.SqlTypes.SqlBoolean.Value&quot; /&gt; of the &lt;see cref=&quot;T:System.Data.SqlTypes.SqlBoolean&quot; /&gt; will be &lt;see cref=&quot;F:System.Data.SqlTypes.SqlBoolean.Null&quot; /&gt;.">一个 <see cref="T:System.Data.SqlTypes.SqlBoolean" />，如果第一个实例大于或等于第二个实例，则为 <see cref="F:System.Data.SqlTypes.SqlBoolean.True" />。 否则为 <see cref="F:System.Data.SqlTypes.SqlBoolean.False" />。 如果 <see cref="T:System.Data.SqlTypes.SqlGuid" /> 的任一实例为空，则 <see cref="P:System.Data.SqlTypes.SqlBoolean.Value" /> 的 <see cref="T:System.Data.SqlTypes.SqlBoolean" /> 将为 <see cref="F:System.Data.SqlTypes.SqlBoolean.Null" />。</returns>
    </member>
    <member name="M:System.Data.SqlTypes.SqlGuid.LessThan(System.Data.SqlTypes.SqlGuid,System.Data.SqlTypes.SqlGuid)">
      <summary vsli:raw="Compares two instances of &lt;see cref=&quot;T:System.Data.SqlTypes.SqlGuid&quot; /&gt; to determine whether the first is less than the second.">对 <see cref="T:System.Data.SqlTypes.SqlGuid" /> 的两个实例进行比较，以确定第一个实例是否小于第二个实例。</summary>
      <param name="x" vsli:raw="A &lt;see cref=&quot;T:System.Data.SqlTypes.SqlGuid&quot; /&gt; structure.">
        <see cref="T:System.Data.SqlTypes.SqlGuid" /> 结构。</param>
      <param name="y" vsli:raw="A &lt;see cref=&quot;T:System.Data.SqlTypes.SqlGuid&quot; /&gt; structure.">
        <see cref="T:System.Data.SqlTypes.SqlGuid" /> 结构。</param>
      <returns vsli:raw="A &lt;see cref=&quot;T:System.Data.SqlTypes.SqlBoolean&quot; /&gt; that is &lt;see cref=&quot;F:System.Data.SqlTypes.SqlBoolean.True&quot; /&gt; if the first instance is less than the second instance. Otherwise, &lt;see cref=&quot;F:System.Data.SqlTypes.SqlBoolean.False&quot; /&gt;. If either instance of &lt;see cref=&quot;T:System.Data.SqlTypes.SqlGuid&quot; /&gt; is null, the &lt;see cref=&quot;P:System.Data.SqlTypes.SqlBoolean.Value&quot; /&gt; of the &lt;see cref=&quot;T:System.Data.SqlTypes.SqlBoolean&quot; /&gt; will be &lt;see cref=&quot;F:System.Data.SqlTypes.SqlBoolean.Null&quot; /&gt;.">一个 <see cref="T:System.Data.SqlTypes.SqlBoolean" />，如果第一个实例小于第二个实例，则它为 <see cref="F:System.Data.SqlTypes.SqlBoolean.True" />。 否则为 <see cref="F:System.Data.SqlTypes.SqlBoolean.False" />。 如果 <see cref="T:System.Data.SqlTypes.SqlGuid" /> 的任一实例为空，则 <see cref="P:System.Data.SqlTypes.SqlBoolean.Value" /> 的 <see cref="T:System.Data.SqlTypes.SqlBoolean" /> 将为 <see cref="F:System.Data.SqlTypes.SqlBoolean.Null" />。</returns>
    </member>
    <member name="M:System.Data.SqlTypes.SqlGuid.LessThanOrEqual(System.Data.SqlTypes.SqlGuid,System.Data.SqlTypes.SqlGuid)">
      <summary vsli:raw="Compares two instances of &lt;see cref=&quot;T:System.Data.SqlTypes.SqlGuid&quot; /&gt; to determine whether the first is less than or equal to the second.">对 <see cref="T:System.Data.SqlTypes.SqlGuid" /> 的两个实例进行比较，以确定第一个实例是否小于或等于第二个实例。</summary>
      <param name="x" vsli:raw="A &lt;see cref=&quot;T:System.Data.SqlTypes.SqlGuid&quot; /&gt; structure.">
        <see cref="T:System.Data.SqlTypes.SqlGuid" /> 结构。</param>
      <param name="y" vsli:raw="A &lt;see cref=&quot;T:System.Data.SqlTypes.SqlGuid&quot; /&gt; structure.">
        <see cref="T:System.Data.SqlTypes.SqlGuid" /> 结构。</param>
      <returns vsli:raw="A &lt;see cref=&quot;T:System.Data.SqlTypes.SqlBoolean&quot; /&gt; that is &lt;see cref=&quot;F:System.Data.SqlTypes.SqlBoolean.True&quot; /&gt; if the first instance is less than or equal to the second instance. Otherwise, &lt;see cref=&quot;F:System.Data.SqlTypes.SqlBoolean.False&quot; /&gt;. If either instance of &lt;see cref=&quot;T:System.Data.SqlTypes.SqlGuid&quot; /&gt; is null, the &lt;see cref=&quot;P:System.Data.SqlTypes.SqlBoolean.Value&quot; /&gt; of the &lt;see cref=&quot;T:System.Data.SqlTypes.SqlBoolean&quot; /&gt; will be &lt;see cref=&quot;F:System.Data.SqlTypes.SqlBoolean.Null&quot; /&gt;.">一个 <see cref="T:System.Data.SqlTypes.SqlBoolean" />，如果第一个实例小于或等于第二个实例，则它为 <see cref="F:System.Data.SqlTypes.SqlBoolean.True" />。 否则为 <see cref="F:System.Data.SqlTypes.SqlBoolean.False" />。 如果 <see cref="T:System.Data.SqlTypes.SqlGuid" /> 的任一实例为空，则 <see cref="P:System.Data.SqlTypes.SqlBoolean.Value" /> 的 <see cref="T:System.Data.SqlTypes.SqlBoolean" /> 将为 <see cref="F:System.Data.SqlTypes.SqlBoolean.Null" />。</returns>
    </member>
    <member name="M:System.Data.SqlTypes.SqlGuid.NotEquals(System.Data.SqlTypes.SqlGuid,System.Data.SqlTypes.SqlGuid)">
      <summary vsli:raw="Performs a logical comparison on two &lt;see cref=&quot;T:System.Data.SqlTypes.SqlGuid&quot; /&gt; structures to determine whether they are not equal.">对两个 <see cref="T:System.Data.SqlTypes.SqlGuid" /> 结构执行逻辑比较，以确定它们是否相等。</summary>
      <param name="x" vsli:raw="A &lt;see cref=&quot;T:System.Data.SqlTypes.SqlGuid&quot; /&gt; structure.">
        <see cref="T:System.Data.SqlTypes.SqlGuid" /> 结构。</param>
      <param name="y" vsli:raw="A &lt;see cref=&quot;T:System.Data.SqlTypes.SqlGuid&quot; /&gt; structure.">
        <see cref="T:System.Data.SqlTypes.SqlGuid" /> 结构。</param>
      <returns vsli:raw="A &lt;see cref=&quot;T:System.Data.SqlTypes.SqlBoolean&quot; /&gt; that is &lt;see cref=&quot;F:System.Data.SqlTypes.SqlBoolean.True&quot; /&gt; if the two instances are not equal or &lt;see cref=&quot;F:System.Data.SqlTypes.SqlBoolean.False&quot; /&gt; if the two instances are equal. If either instance of &lt;see cref=&quot;T:System.Data.SqlTypes.SqlGuid&quot; /&gt; is null, the &lt;see cref=&quot;P:System.Data.SqlTypes.SqlBoolean.Value&quot; /&gt; of the &lt;see cref=&quot;T:System.Data.SqlTypes.SqlBoolean&quot; /&gt; will be &lt;see cref=&quot;F:System.Data.SqlTypes.SqlBoolean.Null&quot; /&gt;.">一个 <see cref="T:System.Data.SqlTypes.SqlBoolean" />，它在两个实例不等时为 <see cref="F:System.Data.SqlTypes.SqlBoolean.True" />，在两个实例相等时为 <see cref="F:System.Data.SqlTypes.SqlBoolean.False" />。 如果 <see cref="T:System.Data.SqlTypes.SqlGuid" /> 的任一实例为空，则 <see cref="P:System.Data.SqlTypes.SqlBoolean.Value" /> 的 <see cref="T:System.Data.SqlTypes.SqlBoolean" /> 将为 <see cref="F:System.Data.SqlTypes.SqlBoolean.Null" />。</returns>
    </member>
    <member name="M:System.Data.SqlTypes.SqlGuid.op_Equality(System.Data.SqlTypes.SqlGuid,System.Data.SqlTypes.SqlGuid)">
      <summary vsli:raw="Performs a logical comparison of two &lt;see cref=&quot;T:System.Data.SqlTypes.SqlGuid&quot; /&gt; structures to determine whether they are equal.">对两个 <see cref="T:System.Data.SqlTypes.SqlGuid" /> 结构执行逻辑比较，以确定它们是否相等。</summary>
      <param name="x" vsli:raw="A &lt;see cref=&quot;T:System.Data.SqlTypes.SqlGuid&quot; /&gt; structure.">
        <see cref="T:System.Data.SqlTypes.SqlGuid" /> 结构。</param>
      <param name="y" vsli:raw="A &lt;see cref=&quot;T:System.Data.SqlTypes.SqlGuid&quot; /&gt; structure.">
        <see cref="T:System.Data.SqlTypes.SqlGuid" /> 结构。</param>
      <returns vsli:raw="A &lt;see cref=&quot;T:System.Data.SqlTypes.SqlBoolean&quot; /&gt; that is &lt;see cref=&quot;F:System.Data.SqlTypes.SqlBoolean.True&quot; /&gt; if the two instances are equal or &lt;see cref=&quot;F:System.Data.SqlTypes.SqlBoolean.False&quot; /&gt; if the two instances are not equal. If either instance of &lt;see cref=&quot;T:System.Data.SqlTypes.SqlGuid&quot; /&gt; is null, the &lt;see cref=&quot;P:System.Data.SqlTypes.SqlBoolean.Value&quot; /&gt; of the &lt;see cref=&quot;T:System.Data.SqlTypes.SqlBoolean&quot; /&gt; will be &lt;see cref=&quot;F:System.Data.SqlTypes.SqlBoolean.Null&quot; /&gt;.">一个 <see cref="T:System.Data.SqlTypes.SqlBoolean" />，它在两个实例相等时为 <see cref="F:System.Data.SqlTypes.SqlBoolean.True" />，在两个实例不等时为 <see cref="F:System.Data.SqlTypes.SqlBoolean.False" />。 如果 <see cref="T:System.Data.SqlTypes.SqlGuid" /> 的任一实例为空，则 <see cref="P:System.Data.SqlTypes.SqlBoolean.Value" /> 的 <see cref="T:System.Data.SqlTypes.SqlBoolean" /> 将为 <see cref="F:System.Data.SqlTypes.SqlBoolean.Null" />。</returns>
    </member>
    <member name="M:System.Data.SqlTypes.SqlGuid.op_Explicit(System.Data.SqlTypes.SqlBinary)~System.Data.SqlTypes.SqlGuid">
      <summary vsli:raw="Converts the &lt;see cref=&quot;T:System.Data.SqlTypes.SqlBinary&quot; /&gt; parameter to &lt;see cref=&quot;T:System.Data.SqlTypes.SqlGuid&quot; /&gt;.">将 <see cref="T:System.Data.SqlTypes.SqlBinary" /> 参数转换为 <see cref="T:System.Data.SqlTypes.SqlGuid" />。</summary>
      <param name="x" vsli:raw="A &lt;see langword=&quot;SqlBinary&quot; /&gt; object.">
        <see langword="SqlBinary" /> 对象。</param>
      <returns vsli:raw="A new &lt;see cref=&quot;T:System.Data.SqlTypes.SqlGuid&quot; /&gt; whose &lt;see cref=&quot;P:System.Data.SqlTypes.SqlGuid.Value&quot; /&gt; is equal to the &lt;see cref=&quot;P:System.Data.SqlTypes.SqlBinary.Value&quot; /&gt; of the &lt;see cref=&quot;T:System.Data.SqlTypes.SqlBinary&quot; /&gt; parameter.">一个新的 <see cref="T:System.Data.SqlTypes.SqlGuid" />，它的 <see cref="P:System.Data.SqlTypes.SqlGuid.Value" /> 等于 <see cref="P:System.Data.SqlTypes.SqlBinary.Value" /> 参数的 <see cref="T:System.Data.SqlTypes.SqlBinary" />。</returns>
    </member>
    <member name="M:System.Data.SqlTypes.SqlGuid.op_Explicit(System.Data.SqlTypes.SqlGuid)~System.Guid">
      <summary vsli:raw="Converts the supplied &lt;see cref=&quot;T:System.Data.SqlTypes.SqlGuid&quot; /&gt; parameter to &lt;see cref=&quot;T:System.Guid&quot; /&gt;.">将提供的 <see cref="T:System.Data.SqlTypes.SqlGuid" /> 参数转换为 <see cref="T:System.Guid" />。</summary>
      <param name="x" vsli:raw="A &lt;see cref=&quot;T:System.Data.SqlTypes.SqlGuid&quot; /&gt; structure.">
        <see cref="T:System.Data.SqlTypes.SqlGuid" /> 结构。</param>
      <returns vsli:raw="A new &lt;see cref=&quot;T:System.Guid&quot; /&gt; equal to the &lt;see cref=&quot;P:System.Data.SqlTypes.SqlGuid.Value&quot; /&gt; of the &lt;see cref=&quot;T:System.Data.SqlTypes.SqlGuid&quot; /&gt;.">一个新 <see cref="T:System.Guid" />，它等于 <see cref="P:System.Data.SqlTypes.SqlGuid.Value" /> 的 <see cref="T:System.Data.SqlTypes.SqlGuid" />。</returns>
    </member>
    <member name="M:System.Data.SqlTypes.SqlGuid.op_Explicit(System.Data.SqlTypes.SqlString)~System.Data.SqlTypes.SqlGuid">
      <summary vsli:raw="Converts the specified &lt;see cref=&quot;T:System.Data.SqlTypes.SqlString&quot; /&gt; structure to &lt;see cref=&quot;T:System.Data.SqlTypes.SqlGuid&quot; /&gt;.">将指定的 <see cref="T:System.Data.SqlTypes.SqlString" /> 结构转换为 <see cref="T:System.Data.SqlTypes.SqlGuid" />。</summary>
      <param name="x" vsli:raw="A &lt;see cref=&quot;T:System.Data.SqlTypes.SqlString&quot; /&gt; object.">
        <see cref="T:System.Data.SqlTypes.SqlString" /> 对象。</param>
      <returns vsli:raw="A &lt;see cref=&quot;T:System.Data.SqlTypes.SqlGuid&quot; /&gt; whose &lt;see cref=&quot;P:System.Data.SqlTypes.SqlGuid.Value&quot; /&gt; equals the value represented by the &lt;see cref=&quot;T:System.Data.SqlTypes.SqlString&quot; /&gt; parameter.">一个 <see cref="T:System.Data.SqlTypes.SqlGuid" />，其 <see cref="P:System.Data.SqlTypes.SqlGuid.Value" /> 等于 <see cref="T:System.Data.SqlTypes.SqlString" /> 参数表示的值。</returns>
    </member>
    <member name="M:System.Data.SqlTypes.SqlGuid.op_GreaterThan(System.Data.SqlTypes.SqlGuid,System.Data.SqlTypes.SqlGuid)">
      <summary vsli:raw="Compares two instances of &lt;see cref=&quot;T:System.Data.SqlTypes.SqlGuid&quot; /&gt; to determine whether the first is greater than the second.">对 <see cref="T:System.Data.SqlTypes.SqlGuid" /> 的两个实例进行比较，以确定第一个实例是否大于第二个实例。</summary>
      <param name="x" vsli:raw="A &lt;see cref=&quot;T:System.Data.SqlTypes.SqlGuid&quot; /&gt; structure.">
        <see cref="T:System.Data.SqlTypes.SqlGuid" /> 结构。</param>
      <param name="y" vsli:raw="A &lt;see cref=&quot;T:System.Data.SqlTypes.SqlGuid&quot; /&gt; structure.">
        <see cref="T:System.Data.SqlTypes.SqlGuid" /> 结构。</param>
      <returns vsli:raw="A &lt;see cref=&quot;T:System.Data.SqlTypes.SqlBoolean&quot; /&gt; that is &lt;see cref=&quot;F:System.Data.SqlTypes.SqlBoolean.True&quot; /&gt; if the first instance is greater than the second instance. Otherwise, &lt;see cref=&quot;F:System.Data.SqlTypes.SqlBoolean.False&quot; /&gt;. If either instance of &lt;see cref=&quot;T:System.Data.SqlTypes.SqlGuid&quot; /&gt; is null, the &lt;see cref=&quot;P:System.Data.SqlTypes.SqlBoolean.Value&quot; /&gt; of the &lt;see cref=&quot;T:System.Data.SqlTypes.SqlBoolean&quot; /&gt; will be &lt;see cref=&quot;F:System.Data.SqlTypes.SqlBoolean.Null&quot; /&gt;.">一个 <see cref="T:System.Data.SqlTypes.SqlBoolean" />，如果第一个实例大于第二个实例，则它为 <see cref="F:System.Data.SqlTypes.SqlBoolean.True" />。 否则为 <see cref="F:System.Data.SqlTypes.SqlBoolean.False" />。 如果 <see cref="T:System.Data.SqlTypes.SqlGuid" /> 的任一实例为空，则 <see cref="P:System.Data.SqlTypes.SqlBoolean.Value" /> 的 <see cref="T:System.Data.SqlTypes.SqlBoolean" /> 将为 <see cref="F:System.Data.SqlTypes.SqlBoolean.Null" />。</returns>
    </member>
    <member name="M:System.Data.SqlTypes.SqlGuid.op_GreaterThanOrEqual(System.Data.SqlTypes.SqlGuid,System.Data.SqlTypes.SqlGuid)">
      <summary vsli:raw="Compares two instances of &lt;see cref=&quot;T:System.Data.SqlTypes.SqlGuid&quot; /&gt; to determine whether the first is greater than or equal to the second.">对 <see cref="T:System.Data.SqlTypes.SqlGuid" /> 的两个实例进行比较，以确定第一个实例是否大于或等于第二个实例。</summary>
      <param name="x" vsli:raw="A &lt;see cref=&quot;T:System.Data.SqlTypes.SqlGuid&quot; /&gt; structure.">
        <see cref="T:System.Data.SqlTypes.SqlGuid" /> 结构。</param>
      <param name="y" vsli:raw="A &lt;see cref=&quot;T:System.Data.SqlTypes.SqlGuid&quot; /&gt; structure.">
        <see cref="T:System.Data.SqlTypes.SqlGuid" /> 结构。</param>
      <returns vsli:raw="A &lt;see cref=&quot;T:System.Data.SqlTypes.SqlBoolean&quot; /&gt; that is &lt;see cref=&quot;F:System.Data.SqlTypes.SqlBoolean.True&quot; /&gt; if the first instance is greater than or equal to the second instance. Otherwise, &lt;see cref=&quot;F:System.Data.SqlTypes.SqlBoolean.False&quot; /&gt;. If either instance of &lt;see cref=&quot;T:System.Data.SqlTypes.SqlGuid&quot; /&gt; is null, the &lt;see cref=&quot;P:System.Data.SqlTypes.SqlBoolean.Value&quot; /&gt; of the &lt;see cref=&quot;T:System.Data.SqlTypes.SqlBoolean&quot; /&gt; will be &lt;see cref=&quot;F:System.Data.SqlTypes.SqlBoolean.Null&quot; /&gt;.">一个 <see cref="T:System.Data.SqlTypes.SqlBoolean" />，如果第一个实例大于或等于第二个实例，则为 <see cref="F:System.Data.SqlTypes.SqlBoolean.True" />。 否则为 <see cref="F:System.Data.SqlTypes.SqlBoolean.False" />。 如果 <see cref="T:System.Data.SqlTypes.SqlGuid" /> 的任一实例为空，则 <see cref="P:System.Data.SqlTypes.SqlBoolean.Value" /> 的 <see cref="T:System.Data.SqlTypes.SqlBoolean" /> 将为 <see cref="F:System.Data.SqlTypes.SqlBoolean.Null" />。</returns>
    </member>
    <member name="M:System.Data.SqlTypes.SqlGuid.op_Implicit(System.Guid)~System.Data.SqlTypes.SqlGuid">
      <summary vsli:raw="Converts the supplied &lt;see cref=&quot;T:System.Guid&quot; /&gt; parameter to &lt;see cref=&quot;T:System.Data.SqlTypes.SqlGuid&quot; /&gt;.">将提供的 <see cref="T:System.Guid" /> 参数转换为 <see cref="T:System.Data.SqlTypes.SqlGuid" />。</summary>
      <param name="x" vsli:raw="A &lt;see cref=&quot;T:System.Guid&quot; /&gt;.">
        <see cref="T:System.Guid" />。</param>
      <returns vsli:raw="A new &lt;see cref=&quot;T:System.Data.SqlTypes.SqlGuid&quot; /&gt; whose &lt;see cref=&quot;P:System.Data.SqlTypes.SqlGuid.Value&quot; /&gt; is equal to the &lt;see cref=&quot;T:System.Guid&quot; /&gt; parameter.">一个新 <see cref="T:System.Data.SqlTypes.SqlGuid" />，其 <see cref="P:System.Data.SqlTypes.SqlGuid.Value" /> 等于 <see cref="T:System.Guid" /> 参数。</returns>
    </member>
    <member name="M:System.Data.SqlTypes.SqlGuid.op_Inequality(System.Data.SqlTypes.SqlGuid,System.Data.SqlTypes.SqlGuid)">
      <summary vsli:raw="Performs a logical comparison on two &lt;see cref=&quot;T:System.Data.SqlTypes.SqlGuid&quot; /&gt; structures to determine whether they are not equal.">对两个 <see cref="T:System.Data.SqlTypes.SqlGuid" /> 结构执行逻辑比较，以确定它们是否相等。</summary>
      <param name="x" vsli:raw="A &lt;see cref=&quot;T:System.Data.SqlTypes.SqlGuid&quot; /&gt; structure.">
        <see cref="T:System.Data.SqlTypes.SqlGuid" /> 结构。</param>
      <param name="y" vsli:raw="A &lt;see cref=&quot;T:System.Data.SqlTypes.SqlGuid&quot; /&gt; structure.">
        <see cref="T:System.Data.SqlTypes.SqlGuid" /> 结构。</param>
      <returns vsli:raw="A &lt;see cref=&quot;T:System.Data.SqlTypes.SqlBoolean&quot; /&gt; that is &lt;see cref=&quot;F:System.Data.SqlTypes.SqlBoolean.True&quot; /&gt; if the two instances are not equal or &lt;see cref=&quot;F:System.Data.SqlTypes.SqlBoolean.False&quot; /&gt; if the two instances are equal. If either instance of &lt;see cref=&quot;T:System.Data.SqlTypes.SqlGuid&quot; /&gt; is null, the &lt;see cref=&quot;P:System.Data.SqlTypes.SqlBoolean.Value&quot; /&gt; of the &lt;see cref=&quot;T:System.Data.SqlTypes.SqlBoolean&quot; /&gt; will be &lt;see cref=&quot;F:System.Data.SqlTypes.SqlBoolean.Null&quot; /&gt;.">一个 <see cref="T:System.Data.SqlTypes.SqlBoolean" />，它在两个实例不等时为 <see cref="F:System.Data.SqlTypes.SqlBoolean.True" />，在两个实例相等时为 <see cref="F:System.Data.SqlTypes.SqlBoolean.False" />。 如果 <see cref="T:System.Data.SqlTypes.SqlGuid" /> 的任一实例为空，则 <see cref="P:System.Data.SqlTypes.SqlBoolean.Value" /> 的 <see cref="T:System.Data.SqlTypes.SqlBoolean" /> 将为 <see cref="F:System.Data.SqlTypes.SqlBoolean.Null" />。</returns>
    </member>
    <member name="M:System.Data.SqlTypes.SqlGuid.op_LessThan(System.Data.SqlTypes.SqlGuid,System.Data.SqlTypes.SqlGuid)">
      <summary vsli:raw="Compares two instances of &lt;see cref=&quot;T:System.Data.SqlTypes.SqlGuid&quot; /&gt; to determine whether the first is less than the second.">对 <see cref="T:System.Data.SqlTypes.SqlGuid" /> 的两个实例进行比较，以确定第一个实例是否小于第二个实例。</summary>
      <param name="x" vsli:raw="A &lt;see cref=&quot;T:System.Data.SqlTypes.SqlGuid&quot; /&gt; structure.">
        <see cref="T:System.Data.SqlTypes.SqlGuid" /> 结构。</param>
      <param name="y" vsli:raw="A &lt;see cref=&quot;T:System.Data.SqlTypes.SqlGuid&quot; /&gt; structure.">
        <see cref="T:System.Data.SqlTypes.SqlGuid" /> 结构。</param>
      <returns vsli:raw="A &lt;see cref=&quot;T:System.Data.SqlTypes.SqlBoolean&quot; /&gt; that is &lt;see cref=&quot;F:System.Data.SqlTypes.SqlBoolean.True&quot; /&gt; if the first instance is less than the second instance. Otherwise, &lt;see cref=&quot;F:System.Data.SqlTypes.SqlBoolean.False&quot; /&gt;. If either instance of &lt;see cref=&quot;T:System.Data.SqlTypes.SqlGuid&quot; /&gt; is null, the &lt;see cref=&quot;P:System.Data.SqlTypes.SqlBoolean.Value&quot; /&gt; of the &lt;see cref=&quot;T:System.Data.SqlTypes.SqlBoolean&quot; /&gt; will be &lt;see cref=&quot;F:System.Data.SqlTypes.SqlBoolean.Null&quot; /&gt;.">一个 <see cref="T:System.Data.SqlTypes.SqlBoolean" />，如果第一个实例小于第二个实例，则它为 <see cref="F:System.Data.SqlTypes.SqlBoolean.True" />。 否则为 <see cref="F:System.Data.SqlTypes.SqlBoolean.False" />。 如果 <see cref="T:System.Data.SqlTypes.SqlGuid" /> 的任一实例为空，则 <see cref="P:System.Data.SqlTypes.SqlBoolean.Value" /> 的 <see cref="T:System.Data.SqlTypes.SqlBoolean" /> 将为 <see cref="F:System.Data.SqlTypes.SqlBoolean.Null" />。</returns>
    </member>
    <member name="M:System.Data.SqlTypes.SqlGuid.op_LessThanOrEqual(System.Data.SqlTypes.SqlGuid,System.Data.SqlTypes.SqlGuid)">
      <summary vsli:raw="Compares two instances of &lt;see cref=&quot;T:System.Data.SqlTypes.SqlGuid&quot; /&gt; to determine whether the first is less than or equal to the second.">对 <see cref="T:System.Data.SqlTypes.SqlGuid" /> 的两个实例进行比较，以确定第一个实例是否小于或等于第二个实例。</summary>
      <param name="x" vsli:raw="A &lt;see cref=&quot;T:System.Data.SqlTypes.SqlGuid&quot; /&gt; structure.">
        <see cref="T:System.Data.SqlTypes.SqlGuid" /> 结构。</param>
      <param name="y" vsli:raw="A &lt;see cref=&quot;T:System.Data.SqlTypes.SqlGuid&quot; /&gt; structure.">
        <see cref="T:System.Data.SqlTypes.SqlGuid" /> 结构。</param>
      <returns vsli:raw="A &lt;see cref=&quot;T:System.Data.SqlTypes.SqlBoolean&quot; /&gt; that is &lt;see cref=&quot;F:System.Data.SqlTypes.SqlBoolean.True&quot; /&gt; if the first instance is less than or equal to the second instance. Otherwise, &lt;see cref=&quot;F:System.Data.SqlTypes.SqlBoolean.False&quot; /&gt;. If either instance of &lt;see cref=&quot;T:System.Data.SqlTypes.SqlGuid&quot; /&gt; is null, the &lt;see cref=&quot;P:System.Data.SqlTypes.SqlBoolean.Value&quot; /&gt; of the &lt;see cref=&quot;T:System.Data.SqlTypes.SqlBoolean&quot; /&gt; will be &lt;see cref=&quot;F:System.Data.SqlTypes.SqlBoolean.Null&quot; /&gt;.">一个 <see cref="T:System.Data.SqlTypes.SqlBoolean" />，如果第一个实例小于或等于第二个实例，则它为 <see cref="F:System.Data.SqlTypes.SqlBoolean.True" />。 否则为 <see cref="F:System.Data.SqlTypes.SqlBoolean.False" />。 如果 <see cref="T:System.Data.SqlTypes.SqlGuid" /> 的任一实例为空，则 <see cref="P:System.Data.SqlTypes.SqlBoolean.Value" /> 的 <see cref="T:System.Data.SqlTypes.SqlBoolean" /> 将为 <see cref="F:System.Data.SqlTypes.SqlBoolean.Null" />。</returns>
    </member>
    <member name="M:System.Data.SqlTypes.SqlGuid.Parse(System.String)">
      <summary vsli:raw="Converts the specified &lt;see cref=&quot;T:System.String&quot; /&gt; structure to &lt;see cref=&quot;T:System.Data.SqlTypes.SqlGuid&quot; /&gt;.">将指定的 <see cref="T:System.String" /> 结构转换为 <see cref="T:System.Data.SqlTypes.SqlGuid" />。</summary>
      <param name="s" vsli:raw="The &lt;see langword=&quot;String&quot; /&gt; to be parsed.">要分析的 <see langword="String" />。</param>
      <returns vsli:raw="A &lt;see cref=&quot;T:System.Data.SqlTypes.SqlGuid&quot; /&gt; equivalent to the value that is contained in the specified &lt;see cref=&quot;T:System.String&quot; /&gt;.">一个 <see cref="T:System.Data.SqlTypes.SqlGuid" />，它与指定的 <see cref="T:System.String" /> 中包含的值等效。</returns>
    </member>
    <member name="M:System.Data.SqlTypes.SqlGuid.System#Xml#Serialization#IXmlSerializable#GetSchema">
      <summary vsli:raw="This member supports the .NET Framework infrastructure and is not intended to be used directly from your code.">此成员支持 .NET Framework 结构，不能在代码中直接使用。</summary>
      <returns vsli:raw="An &lt;see langword=&quot;XmlSchema&quot; /&gt;.">
        <see langword="XmlSchema" />。</returns>
    </member>
    <member name="M:System.Data.SqlTypes.SqlGuid.System#Xml#Serialization#IXmlSerializable#ReadXml(System.Xml.XmlReader)">
      <summary vsli:raw="This member supports the .NET Framework infrastructure and is not intended to be used directly from your code.">此成员支持 .NET Framework 结构，不能在代码中直接使用。</summary>
      <param name="reader" vsli:raw="&lt;see langword=&quot;XmlReader&quot; /&gt;">
        <see langword="XmlReader" />
      </param>
    </member>
    <member name="M:System.Data.SqlTypes.SqlGuid.System#Xml#Serialization#IXmlSerializable#WriteXml(System.Xml.XmlWriter)">
      <summary vsli:raw="This member supports the .NET Framework infrastructure and is not intended to be used directly from your code.">此成员支持 .NET Framework 结构，不能在代码中直接使用。</summary>
      <param name="writer" vsli:raw="&lt;see langword=&quot;XmlWriter&quot; /&gt;">
        <see langword="XmlWriter" />
      </param>
    </member>
    <member name="M:System.Data.SqlTypes.SqlGuid.ToByteArray">
      <summary vsli:raw="Converts this &lt;see cref=&quot;T:System.Data.SqlTypes.SqlGuid&quot; /&gt; structure to a byte array.">将此 <see cref="T:System.Data.SqlTypes.SqlGuid" /> 结构转换为字节数组。</summary>
      <returns vsli:raw="An array of bytes representing the &lt;see cref=&quot;P:System.Data.SqlTypes.SqlGuid.Value&quot; /&gt; of this &lt;see cref=&quot;T:System.Data.SqlTypes.SqlGuid&quot; /&gt; structure.">一个字节数组，表示此 <see cref="P:System.Data.SqlTypes.SqlGuid.Value" /> 结构的 <see cref="T:System.Data.SqlTypes.SqlGuid" />。</returns>
    </member>
    <member name="M:System.Data.SqlTypes.SqlGuid.ToSqlBinary">
      <summary vsli:raw="Converts this &lt;see cref=&quot;T:System.Data.SqlTypes.SqlGuid&quot; /&gt; structure to &lt;see cref=&quot;T:System.Data.SqlTypes.SqlBinary&quot; /&gt;.">将此 <see cref="T:System.Data.SqlTypes.SqlGuid" /> 结构转换为 <see cref="T:System.Data.SqlTypes.SqlBinary" />。</summary>
      <returns vsli:raw="A &lt;see langword=&quot;SqlBinary&quot; /&gt; structure that contains the bytes in the &lt;see cref=&quot;T:System.Data.SqlTypes.SqlGuid&quot; /&gt; structure.">一个 <see langword="SqlBinary" /> 结构，包含 <see cref="T:System.Data.SqlTypes.SqlGuid" /> 结构中的字节。</returns>
    </member>
    <member name="M:System.Data.SqlTypes.SqlGuid.ToSqlString">
      <summary vsli:raw="Converts this &lt;see cref=&quot;T:System.Data.SqlTypes.SqlGuid&quot; /&gt; structure to &lt;see cref=&quot;T:System.Data.SqlTypes.SqlString&quot; /&gt;.">将此 <see cref="T:System.Data.SqlTypes.SqlGuid" /> 结构转换为 <see cref="T:System.Data.SqlTypes.SqlString" />。</summary>
      <returns vsli:raw="A &lt;see cref=&quot;T:System.Data.SqlTypes.SqlString&quot; /&gt; structure that contains the string representation of the &lt;see cref=&quot;T:System.Data.SqlTypes.SqlGuid&quot; /&gt; structure.">一个 <see cref="T:System.Data.SqlTypes.SqlString" /> 结构，包含 <see cref="T:System.Data.SqlTypes.SqlGuid" /> 结构的字符串表示形式。</returns>
    </member>
    <member name="M:System.Data.SqlTypes.SqlGuid.ToString">
      <summary vsli:raw="Converts this &lt;see cref=&quot;T:System.Data.SqlTypes.SqlGuid&quot; /&gt; structure to a &lt;see cref=&quot;T:System.String&quot; /&gt;.">将此 <see cref="T:System.Data.SqlTypes.SqlGuid" /> 结构转换为 <see cref="T:System.String" />。</summary>
      <returns vsli:raw="A &lt;see cref=&quot;T:System.String&quot; /&gt; that contains the string representation of the &lt;see cref=&quot;T:System.Data.SqlTypes.SqlGuid&quot; /&gt; structure.">一个 <see cref="T:System.String" /> 结构，包含 <see cref="T:System.Data.SqlTypes.SqlGuid" /> 结构的字符串表示形式。</returns>
    </member>
    <member name="P:System.Data.SqlTypes.SqlGuid.IsNull">
      <summary vsli:raw="Gets a Boolean value that indicates whether this &lt;see cref=&quot;T:System.Data.SqlTypes.SqlGuid&quot; /&gt; structure is null.">获取一个布尔值，该值指示此 <see cref="T:System.Data.SqlTypes.SqlGuid" /> 结构是否为 null。</summary>
      <returns vsli:raw="&lt;see langword=&quot;true&quot; /&gt; if &lt;see langword=&quot;null&quot; /&gt;. Otherwise, &lt;see langword=&quot;false&quot; /&gt;.">如果 <see langword="null" />，则为 <see langword="true" />。 否则为 <see langword="false" />。</returns>
    </member>
    <member name="P:System.Data.SqlTypes.SqlGuid.Value">
      <summary vsli:raw="Gets the value of the &lt;see cref=&quot;T:System.Data.SqlTypes.SqlGuid&quot; /&gt; structure. This property is read-only.">获取 <see cref="T:System.Data.SqlTypes.SqlGuid" /> 结构的值。 此属性是只读的。</summary>
      <returns vsli:raw="A &lt;see cref=&quot;T:System.Guid&quot; /&gt; structure.">
        <see cref="T:System.Guid" /> 结构。</returns>
    </member>
    <member name="T:System.Data.SqlTypes.SqlInt16">
      <summary vsli:raw="Represents a 16-bit signed integer to be stored in or retrieved from a database.">表示要在数据库中存储或检索的 16 位有符号整数。</summary>
    </member>
    <member name="F:System.Data.SqlTypes.SqlInt16.MaxValue">
      <summary vsli:raw="A constant representing the largest possible value of a &lt;see cref=&quot;T:System.Data.SqlTypes.SqlInt16&quot; /&gt;.">一个常数，它表示 <see cref="T:System.Data.SqlTypes.SqlInt16" /> 的最大可能值。</summary>
    </member>
    <member name="F:System.Data.SqlTypes.SqlInt16.MinValue">
      <summary vsli:raw="A constant representing the smallest possible value of a &lt;see cref=&quot;T:System.Data.SqlTypes.SqlInt16&quot; /&gt;.">一个常数，它表示 <see cref="T:System.Data.SqlTypes.SqlInt16" /> 的最小可能值。</summary>
    </member>
    <member name="F:System.Data.SqlTypes.SqlInt16.Null">
      <summary vsli:raw="Represents a &lt;see cref=&quot;T:System.DBNull&quot; /&gt; that can be assigned to this instance of the &lt;see cref=&quot;T:System.Data.SqlTypes.SqlInt16&quot; /&gt; structure.">表示可指派给 <see cref="T:System.DBNull" /> 结构的此实例的 <see cref="T:System.Data.SqlTypes.SqlInt16" />。</summary>
    </member>
    <member name="F:System.Data.SqlTypes.SqlInt16.Zero">
      <summary vsli:raw="Represents a zero value that can be assigned to the &lt;see cref=&quot;P:System.Data.SqlTypes.SqlInt16.Value&quot; /&gt; property of an instance of the &lt;see cref=&quot;T:System.Data.SqlTypes.SqlInt16&quot; /&gt; structure.">表示可分配给 <see cref="P:System.Data.SqlTypes.SqlInt16.Value" /> 结构实例的 <see cref="T:System.Data.SqlTypes.SqlInt16" /> 属性的零值。</summary>
    </member>
    <member name="M:System.Data.SqlTypes.SqlInt16.#ctor(System.Int16)">
      <summary vsli:raw="Initializes a new instance of the &lt;see cref=&quot;T:System.Data.SqlTypes.SqlInt16&quot; /&gt; structure using the supplied short integer parameter.">使用提供的短整型参数初始化 <see cref="T:System.Data.SqlTypes.SqlInt16" /> 结构的新实例。</summary>
      <param name="value" vsli:raw="A short integer.">短整型。</param>
    </member>
    <member name="M:System.Data.SqlTypes.SqlInt16.Add(System.Data.SqlTypes.SqlInt16,System.Data.SqlTypes.SqlInt16)">
      <summary vsli:raw="Computes the sum of the two &lt;see cref=&quot;T:System.Data.SqlTypes.SqlInt16&quot; /&gt; operands.">计算两个 <see cref="T:System.Data.SqlTypes.SqlInt16" /> 操作数的和。</summary>
      <param name="x" vsli:raw="A &lt;see cref=&quot;T:System.Data.SqlTypes.SqlInt16&quot; /&gt; structure.">
        <see cref="T:System.Data.SqlTypes.SqlInt16" /> 结构。</param>
      <param name="y" vsli:raw="A &lt;see cref=&quot;T:System.Data.SqlTypes.SqlInt16&quot; /&gt; structure.">
        <see cref="T:System.Data.SqlTypes.SqlInt16" /> 结构。</param>
      <returns vsli:raw="A &lt;see cref=&quot;T:System.Data.SqlTypes.SqlInt16&quot; /&gt; structure whose &lt;see cref=&quot;P:System.Data.SqlTypes.SqlInt16.Value&quot; /&gt; property contains the sum of the two &lt;see cref=&quot;T:System.Data.SqlTypes.SqlInt16&quot; /&gt; operands.">一个 <see cref="T:System.Data.SqlTypes.SqlInt16" /> 结构，它的 <see cref="P:System.Data.SqlTypes.SqlInt16.Value" /> 属性包含两个 <see cref="T:System.Data.SqlTypes.SqlInt16" /> 操作数的和。</returns>
    </member>
    <member name="M:System.Data.SqlTypes.SqlInt16.BitwiseAnd(System.Data.SqlTypes.SqlInt16,System.Data.SqlTypes.SqlInt16)">
      <summary vsli:raw="Computes the bitwise AND of its &lt;see cref=&quot;T:System.Data.SqlTypes.SqlInt16&quot; /&gt; operands.">对其 <see cref="T:System.Data.SqlTypes.SqlInt16" /> 操作数执行按位 AND 运算。</summary>
      <param name="x" vsli:raw="A &lt;see cref=&quot;T:System.Data.SqlTypes.SqlInt16&quot; /&gt; structure.">
        <see cref="T:System.Data.SqlTypes.SqlInt16" /> 结构。</param>
      <param name="y" vsli:raw="A &lt;see cref=&quot;T:System.Data.SqlTypes.SqlInt16&quot; /&gt; structure.">
        <see cref="T:System.Data.SqlTypes.SqlInt16" /> 结构。</param>
      <returns vsli:raw="A &lt;see cref=&quot;T:System.Data.SqlTypes.SqlInt16&quot; /&gt; structure whose &lt;see cref=&quot;P:System.Data.SqlTypes.SqlInt16.Value&quot; /&gt; property contains the results of the bitwise AND.">一个 <see cref="T:System.Data.SqlTypes.SqlInt16" /> 结构，它的 <see cref="P:System.Data.SqlTypes.SqlInt16.Value" /> 属性包含按位 AND 运算的结果。</returns>
    </member>
    <member name="M:System.Data.SqlTypes.SqlInt16.BitwiseOr(System.Data.SqlTypes.SqlInt16,System.Data.SqlTypes.SqlInt16)">
      <summary vsli:raw="Computes the bitwise OR of its two &lt;see cref=&quot;T:System.Data.SqlTypes.SqlInt16&quot; /&gt; operands.">对其两个 <see cref="T:System.Data.SqlTypes.SqlInt16" /> 操作数执行按位“或”计算。</summary>
      <param name="x" vsli:raw="A &lt;see cref=&quot;T:System.Data.SqlTypes.SqlInt16&quot; /&gt; structure.">
        <see cref="T:System.Data.SqlTypes.SqlInt16" /> 结构。</param>
      <param name="y" vsli:raw="A &lt;see cref=&quot;T:System.Data.SqlTypes.SqlInt16&quot; /&gt; structure.">
        <see cref="T:System.Data.SqlTypes.SqlInt16" /> 结构。</param>
      <returns vsli:raw="A &lt;see cref=&quot;T:System.Data.SqlTypes.SqlInt16&quot; /&gt; structure whose &lt;see cref=&quot;P:System.Data.SqlTypes.SqlInt16.Value&quot; /&gt; property contains the results of the bitwise OR.">一个 <see cref="T:System.Data.SqlTypes.SqlInt16" /> 结构，它的 <see cref="P:System.Data.SqlTypes.SqlInt16.Value" /> 属性包含按位“或”运算的结果。</returns>
    </member>
    <member name="M:System.Data.SqlTypes.SqlInt16.CompareTo(System.Data.SqlTypes.SqlInt16)">
      <summary vsli:raw="Compares this &lt;see cref=&quot;T:System.Data.SqlTypes.SqlInt16&quot; /&gt; instance to the supplied &lt;see cref=&quot;T:System.Data.SqlTypes.SqlInt16&quot; /&gt; and returns an indication of their relative values.">将此 <see cref="T:System.Data.SqlTypes.SqlInt16" /> 实例与所提供的 <see cref="T:System.Data.SqlTypes.SqlInt16" /> 进行比较，并返回二者相对值的指示值。</summary>
      <param name="value" vsli:raw="The &lt;see cref=&quot;T:System.Data.SqlTypes.SqlInt16&quot; /&gt; to be compared.">要比较的 <see cref="T:System.Data.SqlTypes.SqlInt16" />。</param>
      <returns vsli:raw="A signed number that indicates the relative values of the instance and the object.  &#xA;  &#xA; &lt;list type=&quot;table&quot;&gt;&lt;listheader&gt;&lt;term&gt; Return value&lt;/term&gt;&lt;description&gt; Condition&lt;/description&gt;&lt;/listheader&gt;&lt;item&gt;&lt;term&gt; Less than zero&lt;/term&gt;&lt;description&gt; This instance is less than the object.&lt;/description&gt;&lt;/item&gt;&lt;item&gt;&lt;term&gt; Zero&lt;/term&gt;&lt;description&gt; This instance is the same as the object.&lt;/description&gt;&lt;/item&gt;&lt;item&gt;&lt;term&gt; Greater than zero&lt;/term&gt;&lt;description&gt; This instance is greater than the object, or the object is a null reference (&lt;see langword=&quot;Nothing&quot; /&gt; in Visual Basic)&lt;/description&gt;&lt;/item&gt;&lt;/list&gt;">一个有符号的数字，它指示该实例和对象的相对值。  
  
 <list type="table"><listheader><term> 返回值</term><description> 条件</description></listheader><item><term> 小于零</term><description> 此实例小于该对象。</description></item><item><term> 零</term><description> 此实例等于该对象。</description></item><item><term> 大于零</term><description> 此实例大于该对象，或者该对象为空引用（Visual Basic 中为 <see langword="Nothing" />）</description></item></list></returns>
    </member>
    <member name="M:System.Data.SqlTypes.SqlInt16.CompareTo(System.Object)">
      <summary vsli:raw="Compares this &lt;see cref=&quot;T:System.Data.SqlTypes.SqlInt16&quot; /&gt; instance to the supplied &lt;see cref=&quot;T:System.Object&quot; /&gt; and returns an indication of their relative values.">将此 <see cref="T:System.Data.SqlTypes.SqlInt16" /> 实例与所提供的 <see cref="T:System.Object" /> 进行比较，并返回二者相对值的指示值。</summary>
      <param name="value" vsli:raw="The &lt;see cref=&quot;T:System.Object&quot; /&gt; to be compared.">要比较的 <see cref="T:System.Object" />。</param>
      <returns vsli:raw="A signed number that indicates the relative values of the instance and the object.  &#xA;  &#xA; &lt;list type=&quot;table&quot;&gt;&lt;listheader&gt;&lt;term&gt; Return value&lt;/term&gt;&lt;description&gt; Condition&lt;/description&gt;&lt;/listheader&gt;&lt;item&gt;&lt;term&gt; Less than zero&lt;/term&gt;&lt;description&gt; This instance is less than the object.&lt;/description&gt;&lt;/item&gt;&lt;item&gt;&lt;term&gt; Zero&lt;/term&gt;&lt;description&gt; This instance is the same as the object.&lt;/description&gt;&lt;/item&gt;&lt;item&gt;&lt;term&gt; Greater than zero&lt;/term&gt;&lt;description&gt; This instance is greater than the object  &#xA;  &#xA; -or-  &#xA;  &#xA; object is a null reference (&lt;see langword=&quot;Nothing&quot; /&gt; in Visual Basic)&lt;/description&gt;&lt;/item&gt;&lt;/list&gt;">一个有符号的数字，它指示该实例和对象的相对值。  
  
 <list type="table"><listheader><term> 返回值</term><description> 条件</description></listheader><item><term> 小于零</term><description> 此实例小于该对象。</description></item><item><term> 零</term><description> 此实例等于该对象。</description></item><item><term> 大于零</term><description> 此实例大于该对象 
- 或 - 
对象为 null 引用（在 Visual Basic 中为 <see langword="Nothing" />）</description></item></list></returns>
    </member>
    <member name="M:System.Data.SqlTypes.SqlInt16.Divide(System.Data.SqlTypes.SqlInt16,System.Data.SqlTypes.SqlInt16)">
      <summary vsli:raw="Divides the first &lt;see cref=&quot;T:System.Data.SqlTypes.SqlInt16&quot; /&gt; operand by the second.">将第一个 <see cref="T:System.Data.SqlTypes.SqlInt16" /> 操作数除以第二个操作数。</summary>
      <param name="x" vsli:raw="A &lt;see cref=&quot;T:System.Data.SqlTypes.SqlInt16&quot; /&gt; structure.">
        <see cref="T:System.Data.SqlTypes.SqlInt16" /> 结构。</param>
      <param name="y" vsli:raw="A &lt;see cref=&quot;T:System.Data.SqlTypes.SqlInt16&quot; /&gt; structure.">
        <see cref="T:System.Data.SqlTypes.SqlInt16" /> 结构。</param>
      <returns vsli:raw="A &lt;see cref=&quot;T:System.Data.SqlTypes.SqlInt16&quot; /&gt; whose &lt;see cref=&quot;P:System.Data.SqlTypes.SqlInt16.Value&quot; /&gt; property contains the results of the division.">一个 <see cref="T:System.Data.SqlTypes.SqlInt16" />，它的 <see cref="P:System.Data.SqlTypes.SqlInt16.Value" /> 属性包含该除法运算的结果。</returns>
    </member>
    <member name="M:System.Data.SqlTypes.SqlInt16.Equals(System.Data.SqlTypes.SqlInt16,System.Data.SqlTypes.SqlInt16)">
      <summary vsli:raw="Performs a logical comparison of two &lt;see cref=&quot;T:System.Data.SqlTypes.SqlInt16&quot; /&gt; structures to determine whether they are equal.">对两个 <see cref="T:System.Data.SqlTypes.SqlInt16" /> 结构执行逻辑比较，以确定它们是否相等。</summary>
      <param name="x" vsli:raw="A &lt;see cref=&quot;T:System.Data.SqlTypes.SqlInt16&quot; /&gt; structure.">
        <see cref="T:System.Data.SqlTypes.SqlInt16" /> 结构。</param>
      <param name="y" vsli:raw="A &lt;see cref=&quot;T:System.Data.SqlTypes.SqlInt16&quot; /&gt; structure.">
        <see cref="T:System.Data.SqlTypes.SqlInt16" /> 结构。</param>
      <returns vsli:raw="&lt;see langword=&quot;true&quot; /&gt; if the two values are equal. Otherwise, &lt;see langword=&quot;false&quot; /&gt;. If either instance is null, then the &lt;see langword=&quot;SqlInt16&quot; /&gt; will be null.">如果两个值相等，则为 <see langword="true" />。 否则为 <see langword="false" />。 如果任一实例为 null，则 <see langword="SqlInt16" /> 将为 null。</returns>
    </member>
    <member name="M:System.Data.SqlTypes.SqlInt16.Equals(System.Object)">
      <summary vsli:raw="Compares the specified object to the &lt;see cref=&quot;P:System.Data.SqlTypes.SqlInt16.Value&quot; /&gt; property of the &lt;see cref=&quot;T:System.Data.SqlTypes.SqlInt16&quot; /&gt; object.">将指定对象与 <see cref="P:System.Data.SqlTypes.SqlInt16.Value" /> 对象的 <see cref="T:System.Data.SqlTypes.SqlInt16" /> 属性进行比较。</summary>
      <param name="value" vsli:raw="The object to be compared.">要比较的对象。</param>
      <returns vsli:raw="&lt;see langword=&quot;true&quot; /&gt; if object is an instance of &lt;see cref=&quot;T:System.Data.SqlTypes.SqlInt16&quot; /&gt; and the two are equal; otherwise &lt;see langword=&quot;false&quot; /&gt;.">如果对象是 <see cref="T:System.Data.SqlTypes.SqlInt16" /> 的实例并且两者相等，则为 <see langword="true" />；否则为 <see langword="false" />。</returns>
    </member>
    <member name="M:System.Data.SqlTypes.SqlInt16.GetHashCode">
      <summary vsli:raw="Returns the hash code for this instance.">返回此实例的哈希代码。</summary>
      <returns vsli:raw="A 32-bit signed integer hash code.">32 位有符号整数哈希代码。</returns>
    </member>
    <member name="M:System.Data.SqlTypes.SqlInt16.GetXsdType(System.Xml.Schema.XmlSchemaSet)">
      <summary vsli:raw="Returns the XML Schema definition language (XSD) of the specified &lt;see cref=&quot;T:System.Xml.Schema.XmlSchemaSet&quot; /&gt;.">返回指定的 <see cref="T:System.Xml.Schema.XmlSchemaSet" /> 的 XML 架构定义语言 (XSD)。</summary>
      <param name="schemaSet" vsli:raw="An &lt;see cref=&quot;T:System.Xml.Schema.XmlSchemaSet&quot; /&gt;.">
        <see cref="T:System.Xml.Schema.XmlSchemaSet" />。</param>
      <returns vsli:raw="A &lt;see cref=&quot;T:System.String&quot; /&gt; value that indicates the XSD of the specified &lt;see cref=&quot;T:System.Xml.Schema.XmlSchemaSet&quot; /&gt;.">指示指定的 <see cref="T:System.Xml.Schema.XmlSchemaSet" /> 的 XSD 的 <see cref="T:System.String" /> 值。</returns>
    </member>
    <member name="M:System.Data.SqlTypes.SqlInt16.GreaterThan(System.Data.SqlTypes.SqlInt16,System.Data.SqlTypes.SqlInt16)">
      <summary vsli:raw="Compares two instances of &lt;see cref=&quot;T:System.Data.SqlTypes.SqlInt16&quot; /&gt; to determine whether the first is greater than the second.">对 <see cref="T:System.Data.SqlTypes.SqlInt16" /> 的两个实例进行比较，以确定第一个实例是否大于第二个实例。</summary>
      <param name="x" vsli:raw="A &lt;see cref=&quot;T:System.Data.SqlTypes.SqlInt16&quot; /&gt; structure.">
        <see cref="T:System.Data.SqlTypes.SqlInt16" /> 结构。</param>
      <param name="y" vsli:raw="A &lt;see cref=&quot;T:System.Data.SqlTypes.SqlInt16&quot; /&gt; structure.">
        <see cref="T:System.Data.SqlTypes.SqlInt16" /> 结构。</param>
      <returns vsli:raw="A &lt;see cref=&quot;T:System.Data.SqlTypes.SqlBoolean&quot; /&gt; that is &lt;see cref=&quot;F:System.Data.SqlTypes.SqlBoolean.True&quot; /&gt; if the first instance is greater than the second instance. Otherwise, &lt;see cref=&quot;F:System.Data.SqlTypes.SqlBoolean.False&quot; /&gt;. If either instance of &lt;see cref=&quot;T:System.Data.SqlTypes.SqlInt16&quot; /&gt; is null, the &lt;see cref=&quot;P:System.Data.SqlTypes.SqlBoolean.Value&quot; /&gt; of the &lt;see cref=&quot;T:System.Data.SqlTypes.SqlBoolean&quot; /&gt; will be &lt;see cref=&quot;F:System.Data.SqlTypes.SqlBoolean.Null&quot; /&gt;.">一个 <see cref="T:System.Data.SqlTypes.SqlBoolean" />，如果第一个实例大于第二个实例，则它为 <see cref="F:System.Data.SqlTypes.SqlBoolean.True" />。 否则为 <see cref="F:System.Data.SqlTypes.SqlBoolean.False" />。 如果 <see cref="T:System.Data.SqlTypes.SqlInt16" /> 的任一实例为空，则 <see cref="P:System.Data.SqlTypes.SqlBoolean.Value" /> 的 <see cref="T:System.Data.SqlTypes.SqlBoolean" /> 将为 <see cref="F:System.Data.SqlTypes.SqlBoolean.Null" />。</returns>
    </member>
    <member name="M:System.Data.SqlTypes.SqlInt16.GreaterThanOrEqual(System.Data.SqlTypes.SqlInt16,System.Data.SqlTypes.SqlInt16)">
      <summary vsli:raw="Compares two &lt;see cref=&quot;T:System.Data.SqlTypes.SqlInt16&quot; /&gt; structures to determine whether the first is greater than or equal to the second.">对两个 <see cref="T:System.Data.SqlTypes.SqlInt16" /> 结构进行比较，以确定第一个结构是否大于或等于第二个结构。</summary>
      <param name="x" vsli:raw="A &lt;see cref=&quot;T:System.Data.SqlTypes.SqlInt16&quot; /&gt; structure.">
        <see cref="T:System.Data.SqlTypes.SqlInt16" /> 结构。</param>
      <param name="y" vsli:raw="A &lt;see cref=&quot;T:System.Data.SqlTypes.SqlInt16&quot; /&gt; structure.">
        <see cref="T:System.Data.SqlTypes.SqlInt16" /> 结构。</param>
      <returns vsli:raw="A &lt;see cref=&quot;T:System.Data.SqlTypes.SqlBoolean&quot; /&gt; that is &lt;see cref=&quot;F:System.Data.SqlTypes.SqlBoolean.True&quot; /&gt; if the first instance is greater than or equal to the second instance. Otherwise, &lt;see cref=&quot;F:System.Data.SqlTypes.SqlBoolean.False&quot; /&gt;. If either instance of &lt;see cref=&quot;T:System.Data.SqlTypes.SqlInt16&quot; /&gt; is null, the &lt;see cref=&quot;P:System.Data.SqlTypes.SqlBoolean.Value&quot; /&gt; of the &lt;see cref=&quot;T:System.Data.SqlTypes.SqlBoolean&quot; /&gt; will be &lt;see cref=&quot;F:System.Data.SqlTypes.SqlBoolean.Null&quot; /&gt;.">一个 <see cref="T:System.Data.SqlTypes.SqlBoolean" />，如果第一个实例大于或等于第二个实例，则为 <see cref="F:System.Data.SqlTypes.SqlBoolean.True" />。 否则为 <see cref="F:System.Data.SqlTypes.SqlBoolean.False" />。 如果 <see cref="T:System.Data.SqlTypes.SqlInt16" /> 的任一实例为空，则 <see cref="P:System.Data.SqlTypes.SqlBoolean.Value" /> 的 <see cref="T:System.Data.SqlTypes.SqlBoolean" /> 将为 <see cref="F:System.Data.SqlTypes.SqlBoolean.Null" />。</returns>
    </member>
    <member name="M:System.Data.SqlTypes.SqlInt16.LessThan(System.Data.SqlTypes.SqlInt16,System.Data.SqlTypes.SqlInt16)">
      <summary vsli:raw="Compares two instances of &lt;see cref=&quot;T:System.Data.SqlTypes.SqlInt16&quot; /&gt; to determine whether the first is less than the second.">对 <see cref="T:System.Data.SqlTypes.SqlInt16" /> 的两个实例进行比较，以确定第一个实例是否小于第二个实例。</summary>
      <param name="x" vsli:raw="A &lt;see cref=&quot;T:System.Data.SqlTypes.SqlInt16&quot; /&gt; structure.">
        <see cref="T:System.Data.SqlTypes.SqlInt16" /> 结构。</param>
      <param name="y" vsli:raw="A &lt;see cref=&quot;T:System.Data.SqlTypes.SqlInt16&quot; /&gt; structure.">
        <see cref="T:System.Data.SqlTypes.SqlInt16" /> 结构。</param>
      <returns vsli:raw="A &lt;see cref=&quot;T:System.Data.SqlTypes.SqlBoolean&quot; /&gt; that is &lt;see cref=&quot;F:System.Data.SqlTypes.SqlBoolean.True&quot; /&gt; if the first instance is less than the second instance. Otherwise, &lt;see cref=&quot;F:System.Data.SqlTypes.SqlBoolean.False&quot; /&gt;. If either instance of &lt;see cref=&quot;T:System.Data.SqlTypes.SqlInt16&quot; /&gt; is null, the &lt;see cref=&quot;P:System.Data.SqlTypes.SqlBoolean.Value&quot; /&gt; of the &lt;see cref=&quot;T:System.Data.SqlTypes.SqlBoolean&quot; /&gt; will be &lt;see cref=&quot;F:System.Data.SqlTypes.SqlBoolean.Null&quot; /&gt;.">一个 <see cref="T:System.Data.SqlTypes.SqlBoolean" />，如果第一个实例小于第二个实例，则它为 <see cref="F:System.Data.SqlTypes.SqlBoolean.True" />。 否则为 <see cref="F:System.Data.SqlTypes.SqlBoolean.False" />。 如果 <see cref="T:System.Data.SqlTypes.SqlInt16" /> 的任一实例为空，则 <see cref="P:System.Data.SqlTypes.SqlBoolean.Value" /> 的 <see cref="T:System.Data.SqlTypes.SqlBoolean" /> 将为 <see cref="F:System.Data.SqlTypes.SqlBoolean.Null" />。</returns>
    </member>
    <member name="M:System.Data.SqlTypes.SqlInt16.LessThanOrEqual(System.Data.SqlTypes.SqlInt16,System.Data.SqlTypes.SqlInt16)">
      <summary vsli:raw="Compares two &lt;see cref=&quot;T:System.Data.SqlTypes.SqlInt16&quot; /&gt; structures to determine whether the first is less than or equal to the second.">对两个 <see cref="T:System.Data.SqlTypes.SqlInt16" /> 结构进行比较，以确定第一个结构是否小于或等于第二个结构。</summary>
      <param name="x" vsli:raw="A &lt;see cref=&quot;T:System.Data.SqlTypes.SqlInt16&quot; /&gt; structure.">
        <see cref="T:System.Data.SqlTypes.SqlInt16" /> 结构。</param>
      <param name="y" vsli:raw="A &lt;see cref=&quot;T:System.Data.SqlTypes.SqlInt16&quot; /&gt; structure.">
        <see cref="T:System.Data.SqlTypes.SqlInt16" /> 结构。</param>
      <returns vsli:raw="A &lt;see cref=&quot;T:System.Data.SqlTypes.SqlBoolean&quot; /&gt; that is &lt;see cref=&quot;F:System.Data.SqlTypes.SqlBoolean.True&quot; /&gt; if the first instance is less than or equal to the second instance. Otherwise, &lt;see cref=&quot;F:System.Data.SqlTypes.SqlBoolean.False&quot; /&gt;. If either instance of &lt;see cref=&quot;T:System.Data.SqlTypes.SqlInt16&quot; /&gt; is null, the &lt;see cref=&quot;P:System.Data.SqlTypes.SqlBoolean.Value&quot; /&gt; of the &lt;see cref=&quot;T:System.Data.SqlTypes.SqlBoolean&quot; /&gt; will be &lt;see cref=&quot;F:System.Data.SqlTypes.SqlBoolean.Null&quot; /&gt;.">一个 <see cref="T:System.Data.SqlTypes.SqlBoolean" />，如果第一个实例小于或等于第二个实例，则它为 <see cref="F:System.Data.SqlTypes.SqlBoolean.True" />。 否则为 <see cref="F:System.Data.SqlTypes.SqlBoolean.False" />。 如果 <see cref="T:System.Data.SqlTypes.SqlInt16" /> 的任一实例为空，则 <see cref="P:System.Data.SqlTypes.SqlBoolean.Value" /> 的 <see cref="T:System.Data.SqlTypes.SqlBoolean" /> 将为 <see cref="F:System.Data.SqlTypes.SqlBoolean.Null" />。</returns>
    </member>
    <member name="M:System.Data.SqlTypes.SqlInt16.Mod(System.Data.SqlTypes.SqlInt16,System.Data.SqlTypes.SqlInt16)">
      <summary vsli:raw="Computes the remainder after dividing its first &lt;see cref=&quot;T:System.Data.SqlTypes.SqlInt16&quot; /&gt; operand by its second.">计算将其第一个 <see cref="T:System.Data.SqlTypes.SqlInt16" /> 操作数除以第二个操作数后所得的余数。</summary>
      <param name="x" vsli:raw="A &lt;see cref=&quot;T:System.Data.SqlTypes.SqlInt16&quot; /&gt; structure.">
        <see cref="T:System.Data.SqlTypes.SqlInt16" /> 结构。</param>
      <param name="y" vsli:raw="A &lt;see cref=&quot;T:System.Data.SqlTypes.SqlInt16&quot; /&gt; structure.">
        <see cref="T:System.Data.SqlTypes.SqlInt16" /> 结构。</param>
      <returns vsli:raw="A &lt;see cref=&quot;T:System.Data.SqlTypes.SqlInt16&quot; /&gt; structure whose &lt;see cref=&quot;P:System.Data.SqlTypes.SqlInt16.Value&quot; /&gt; contains the remainder.">一个 <see cref="T:System.Data.SqlTypes.SqlInt16" /> 结构，它的 <see cref="P:System.Data.SqlTypes.SqlInt16.Value" /> 包含该余数。</returns>
    </member>
    <member name="M:System.Data.SqlTypes.SqlInt16.Modulus(System.Data.SqlTypes.SqlInt16,System.Data.SqlTypes.SqlInt16)">
      <summary vsli:raw="Divides two &lt;see cref=&quot;T:System.Data.SqlTypes.SqlInt16&quot; /&gt; values and returns the remainder.">将两个 <see cref="T:System.Data.SqlTypes.SqlInt16" /> 值相除，并返回余数。</summary>
      <param name="x" vsli:raw="A &lt;see cref=&quot;T:System.Data.SqlTypes.SqlInt16&quot; /&gt; value.">一个 <see cref="T:System.Data.SqlTypes.SqlInt16" /> 值。</param>
      <param name="y" vsli:raw="A &lt;see cref=&quot;T:System.Data.SqlTypes.SqlInt16&quot; /&gt; value.">一个 <see cref="T:System.Data.SqlTypes.SqlInt16" /> 值。</param>
      <returns vsli:raw="The remainder left after division is performed on &lt;paramref name=&quot;x&quot; /&gt; and &lt;paramref name=&quot;y&quot; /&gt;.">对 <paramref name="x" /> 和 <paramref name="y" /> 执行除法运算后得到的余数。</returns>
    </member>
    <member name="M:System.Data.SqlTypes.SqlInt16.Multiply(System.Data.SqlTypes.SqlInt16,System.Data.SqlTypes.SqlInt16)">
      <summary vsli:raw="Computes the product of the two &lt;see cref=&quot;T:System.Data.SqlTypes.SqlInt16&quot; /&gt; parameters.">计算两个 <see cref="T:System.Data.SqlTypes.SqlInt16" /> 参数的乘积。</summary>
      <param name="x" vsli:raw="A &lt;see cref=&quot;T:System.Data.SqlTypes.SqlInt16&quot; /&gt; structure.">
        <see cref="T:System.Data.SqlTypes.SqlInt16" /> 结构。</param>
      <param name="y" vsli:raw="A &lt;see cref=&quot;T:System.Data.SqlTypes.SqlInt16&quot; /&gt; structure.">
        <see cref="T:System.Data.SqlTypes.SqlInt16" /> 结构。</param>
      <returns vsli:raw="A &lt;see cref=&quot;T:System.Data.SqlTypes.SqlInt16&quot; /&gt; structure whose &lt;see cref=&quot;P:System.Data.SqlTypes.SqlInt16.Value&quot; /&gt; contains the product of the two parameters.">一个 <see cref="T:System.Data.SqlTypes.SqlInt16" /> 结构，它的 <see cref="P:System.Data.SqlTypes.SqlInt16.Value" /> 包含两个参数的乘积。</returns>
    </member>
    <member name="M:System.Data.SqlTypes.SqlInt16.NotEquals(System.Data.SqlTypes.SqlInt16,System.Data.SqlTypes.SqlInt16)">
      <summary vsli:raw="Performs a logical comparison of two &lt;see cref=&quot;T:System.Data.SqlTypes.SqlInt16&quot; /&gt; structures to determine whether they are not equal.">对两个 <see cref="T:System.Data.SqlTypes.SqlInt16" /> 结构执行逻辑比较，以确定它们是否相等。</summary>
      <param name="x" vsli:raw="A &lt;see cref=&quot;T:System.Data.SqlTypes.SqlInt16&quot; /&gt; structure.">
        <see cref="T:System.Data.SqlTypes.SqlInt16" /> 结构。</param>
      <param name="y" vsli:raw="A &lt;see cref=&quot;T:System.Data.SqlTypes.SqlInt16&quot; /&gt; structure.">
        <see cref="T:System.Data.SqlTypes.SqlInt16" /> 结构。</param>
      <returns vsli:raw="A &lt;see cref=&quot;T:System.Data.SqlTypes.SqlBoolean&quot; /&gt; that is &lt;see cref=&quot;F:System.Data.SqlTypes.SqlBoolean.True&quot; /&gt; if the two instances are not equal or &lt;see cref=&quot;F:System.Data.SqlTypes.SqlBoolean.False&quot; /&gt; if the two instances are equal. If either instance of &lt;see cref=&quot;T:System.Data.SqlTypes.SqlInt16&quot; /&gt; is null, the &lt;see cref=&quot;P:System.Data.SqlTypes.SqlBoolean.Value&quot; /&gt; of the &lt;see cref=&quot;T:System.Data.SqlTypes.SqlBoolean&quot; /&gt; will be &lt;see cref=&quot;F:System.Data.SqlTypes.SqlBoolean.Null&quot; /&gt;.">一个 <see cref="T:System.Data.SqlTypes.SqlBoolean" />，它在两个实例不等时为 <see cref="F:System.Data.SqlTypes.SqlBoolean.True" />，在两个实例相等时为 <see cref="F:System.Data.SqlTypes.SqlBoolean.False" />。 如果 <see cref="T:System.Data.SqlTypes.SqlInt16" /> 的任一实例为空，则 <see cref="P:System.Data.SqlTypes.SqlBoolean.Value" /> 的 <see cref="T:System.Data.SqlTypes.SqlBoolean" /> 将为 <see cref="F:System.Data.SqlTypes.SqlBoolean.Null" />。</returns>
    </member>
    <member name="M:System.Data.SqlTypes.SqlInt16.OnesComplement(System.Data.SqlTypes.SqlInt16)">
      <summary vsli:raw="The ~ operator performs a bitwise one's complement operation on its &lt;see cref=&quot;T:System.Data.SqlTypes.SqlByte&quot; /&gt; operand.">~ 运算符对它的 <see cref="T:System.Data.SqlTypes.SqlByte" /> 操作数执行按位二进制反码运算。</summary>
      <param name="x" vsli:raw="A &lt;see cref=&quot;T:System.Data.SqlTypes.SqlInt16&quot; /&gt; structure.">
        <see cref="T:System.Data.SqlTypes.SqlInt16" /> 结构。</param>
      <returns vsli:raw="A &lt;see cref=&quot;T:System.Data.SqlTypes.SqlInt16&quot; /&gt; structure whose &lt;see cref=&quot;P:System.Data.SqlTypes.SqlInt16.Value&quot; /&gt; property contains the complement of the specified &lt;see cref=&quot;T:System.Data.SqlTypes.SqlInt16&quot; /&gt; structure.">一个 <see cref="T:System.Data.SqlTypes.SqlInt16" /> 结构，它的 <see cref="P:System.Data.SqlTypes.SqlInt16.Value" /> 属性包含指定 <see cref="T:System.Data.SqlTypes.SqlInt16" /> 结构的二进制反码。</returns>
    </member>
    <member name="M:System.Data.SqlTypes.SqlInt16.op_Addition(System.Data.SqlTypes.SqlInt16,System.Data.SqlTypes.SqlInt16)">
      <summary vsli:raw="Computes the sum of the two &lt;see cref=&quot;T:System.Data.SqlTypes.SqlInt16&quot; /&gt; operands.">计算两个 <see cref="T:System.Data.SqlTypes.SqlInt16" /> 操作数的和。</summary>
      <param name="x" vsli:raw="A &lt;see cref=&quot;T:System.Data.SqlTypes.SqlInt16&quot; /&gt; structure.">
        <see cref="T:System.Data.SqlTypes.SqlInt16" /> 结构。</param>
      <param name="y" vsli:raw="A &lt;see cref=&quot;T:System.Data.SqlTypes.SqlInt16&quot; /&gt; structure.">
        <see cref="T:System.Data.SqlTypes.SqlInt16" /> 结构。</param>
      <returns vsli:raw="A &lt;see cref=&quot;T:System.Data.SqlTypes.SqlInt16&quot; /&gt; structure whose &lt;see cref=&quot;P:System.Data.SqlTypes.SqlInt16.Value&quot; /&gt; property contains the sum of the two &lt;see cref=&quot;T:System.Data.SqlTypes.SqlInt16&quot; /&gt; operands.">一个 <see cref="T:System.Data.SqlTypes.SqlInt16" /> 结构，它的 <see cref="P:System.Data.SqlTypes.SqlInt16.Value" /> 属性包含两个 <see cref="T:System.Data.SqlTypes.SqlInt16" /> 操作数的和。</returns>
    </member>
    <member name="M:System.Data.SqlTypes.SqlInt16.op_BitwiseAnd(System.Data.SqlTypes.SqlInt16,System.Data.SqlTypes.SqlInt16)">
      <summary vsli:raw="Computes the bitwise AND of its &lt;see cref=&quot;T:System.Data.SqlTypes.SqlInt16&quot; /&gt; operands.">对其 <see cref="T:System.Data.SqlTypes.SqlInt16" /> 操作数执行按位 AND 运算。</summary>
      <param name="x" vsli:raw="A &lt;see cref=&quot;T:System.Data.SqlTypes.SqlInt16&quot; /&gt; structure.">
        <see cref="T:System.Data.SqlTypes.SqlInt16" /> 结构。</param>
      <param name="y" vsli:raw="A &lt;see cref=&quot;T:System.Data.SqlTypes.SqlInt16&quot; /&gt; structure.">
        <see cref="T:System.Data.SqlTypes.SqlInt16" /> 结构。</param>
      <returns vsli:raw="A &lt;see cref=&quot;T:System.Data.SqlTypes.SqlInt16&quot; /&gt; structure whose &lt;see cref=&quot;P:System.Data.SqlTypes.SqlInt16.Value&quot; /&gt; property contains the results of the bitwise AND.">一个 <see cref="T:System.Data.SqlTypes.SqlInt16" /> 结构，它的 <see cref="P:System.Data.SqlTypes.SqlInt16.Value" /> 属性包含按位 AND 运算的结果。</returns>
    </member>
    <member name="M:System.Data.SqlTypes.SqlInt16.op_BitwiseOr(System.Data.SqlTypes.SqlInt16,System.Data.SqlTypes.SqlInt16)">
      <summary vsli:raw="Computes the bitwise OR of its two &lt;see cref=&quot;T:System.Data.SqlTypes.SqlInt16&quot; /&gt; operands.">对其两个 <see cref="T:System.Data.SqlTypes.SqlInt16" /> 操作数执行按位“或”计算。</summary>
      <param name="x" vsli:raw="A &lt;see cref=&quot;T:System.Data.SqlTypes.SqlInt16&quot; /&gt; structure.">
        <see cref="T:System.Data.SqlTypes.SqlInt16" /> 结构。</param>
      <param name="y" vsli:raw="A &lt;see cref=&quot;T:System.Data.SqlTypes.SqlInt16&quot; /&gt; structure.">
        <see cref="T:System.Data.SqlTypes.SqlInt16" /> 结构。</param>
      <returns vsli:raw="A &lt;see cref=&quot;T:System.Data.SqlTypes.SqlInt16&quot; /&gt; structure whose &lt;see cref=&quot;P:System.Data.SqlTypes.SqlInt16.Value&quot; /&gt; property contains the results of the bitwise OR.">一个 <see cref="T:System.Data.SqlTypes.SqlInt16" /> 结构，它的 <see cref="P:System.Data.SqlTypes.SqlInt16.Value" /> 属性包含按位“或”运算的结果。</returns>
    </member>
    <member name="M:System.Data.SqlTypes.SqlInt16.op_Division(System.Data.SqlTypes.SqlInt16,System.Data.SqlTypes.SqlInt16)">
      <summary vsli:raw="Divides the first &lt;see cref=&quot;T:System.Data.SqlTypes.SqlInt16&quot; /&gt; operand by the second.">将第一个 <see cref="T:System.Data.SqlTypes.SqlInt16" /> 操作数除以第二个操作数。</summary>
      <param name="x" vsli:raw="A &lt;see cref=&quot;T:System.Data.SqlTypes.SqlInt16&quot; /&gt; structure.">
        <see cref="T:System.Data.SqlTypes.SqlInt16" /> 结构。</param>
      <param name="y" vsli:raw="A &lt;see cref=&quot;T:System.Data.SqlTypes.SqlInt16&quot; /&gt; structure.">
        <see cref="T:System.Data.SqlTypes.SqlInt16" /> 结构。</param>
      <returns vsli:raw="A &lt;see cref=&quot;T:System.Data.SqlTypes.SqlInt16&quot; /&gt; whose &lt;see cref=&quot;P:System.Data.SqlTypes.SqlInt16.Value&quot; /&gt; property contains the results of the division.">一个 <see cref="T:System.Data.SqlTypes.SqlInt16" />，它的 <see cref="P:System.Data.SqlTypes.SqlInt16.Value" /> 属性包含该除法运算的结果。</returns>
    </member>
    <member name="M:System.Data.SqlTypes.SqlInt16.op_Equality(System.Data.SqlTypes.SqlInt16,System.Data.SqlTypes.SqlInt16)">
      <summary vsli:raw="Performs a logical comparison of two &lt;see cref=&quot;T:System.Data.SqlTypes.SqlInt16&quot; /&gt; structures to determine whether they are equal.">对两个 <see cref="T:System.Data.SqlTypes.SqlInt16" /> 结构执行逻辑比较，以确定它们是否相等。</summary>
      <param name="x" vsli:raw="A &lt;see cref=&quot;T:System.Data.SqlTypes.SqlInt16&quot; /&gt; structure.">
        <see cref="T:System.Data.SqlTypes.SqlInt16" /> 结构。</param>
      <param name="y" vsli:raw="A &lt;see cref=&quot;T:System.Data.SqlTypes.SqlInt16&quot; /&gt; structure.">
        <see cref="T:System.Data.SqlTypes.SqlInt16" /> 结构。</param>
      <returns vsli:raw="A &lt;see cref=&quot;T:System.Data.SqlTypes.SqlBoolean&quot; /&gt; that is &lt;see cref=&quot;F:System.Data.SqlTypes.SqlBoolean.True&quot; /&gt; if the two instances are equal or &lt;see cref=&quot;F:System.Data.SqlTypes.SqlBoolean.False&quot; /&gt; if the two instances are not equal. If either instance of &lt;see cref=&quot;T:System.Data.SqlTypes.SqlInt16&quot; /&gt; is null, the &lt;see cref=&quot;P:System.Data.SqlTypes.SqlBoolean.Value&quot; /&gt; of the &lt;see cref=&quot;T:System.Data.SqlTypes.SqlBoolean&quot; /&gt; will be &lt;see cref=&quot;F:System.Data.SqlTypes.SqlBoolean.Null&quot; /&gt;.">一个 <see cref="T:System.Data.SqlTypes.SqlBoolean" />，它在两个实例相等时为 <see cref="F:System.Data.SqlTypes.SqlBoolean.True" />，在两个实例不等时为 <see cref="F:System.Data.SqlTypes.SqlBoolean.False" />。 如果 <see cref="T:System.Data.SqlTypes.SqlInt16" /> 的任一实例为空，则 <see cref="P:System.Data.SqlTypes.SqlBoolean.Value" /> 的 <see cref="T:System.Data.SqlTypes.SqlBoolean" /> 将为 <see cref="F:System.Data.SqlTypes.SqlBoolean.Null" />。</returns>
    </member>
    <member name="M:System.Data.SqlTypes.SqlInt16.op_ExclusiveOr(System.Data.SqlTypes.SqlInt16,System.Data.SqlTypes.SqlInt16)">
      <summary vsli:raw="Performs a bitwise exclusive-OR operation on the supplied parameters.">对提供的参数执行按位“异或”运算。</summary>
      <param name="x" vsli:raw="A &lt;see cref=&quot;T:System.Data.SqlTypes.SqlInt16&quot; /&gt; structure.">
        <see cref="T:System.Data.SqlTypes.SqlInt16" /> 结构。</param>
      <param name="y" vsli:raw="A &lt;see cref=&quot;T:System.Data.SqlTypes.SqlInt16&quot; /&gt; structure.">
        <see cref="T:System.Data.SqlTypes.SqlInt16" /> 结构。</param>
      <returns vsli:raw="A &lt;see cref=&quot;T:System.Data.SqlTypes.SqlInt16&quot; /&gt; structure whose &lt;see cref=&quot;P:System.Data.SqlTypes.SqlInt16.Value&quot; /&gt; property contains the results of the bitwise XOR.">一个 <see cref="T:System.Data.SqlTypes.SqlInt16" /> 结构，它的 <see cref="P:System.Data.SqlTypes.SqlInt16.Value" /> 属性包含按位“异或”运算的结果。</returns>
    </member>
    <member name="M:System.Data.SqlTypes.SqlInt16.op_Explicit(System.Data.SqlTypes.SqlBoolean)~System.Data.SqlTypes.SqlInt16">
      <summary vsli:raw="Converts the supplied &lt;see cref=&quot;T:System.Data.SqlTypes.SqlBoolean&quot; /&gt; structure to &lt;see cref=&quot;T:System.Data.SqlTypes.SqlInt16&quot; /&gt;.">将提供的 <see cref="T:System.Data.SqlTypes.SqlBoolean" /> 结构转换为 <see cref="T:System.Data.SqlTypes.SqlInt16" />。</summary>
      <param name="x" vsli:raw="A &lt;see cref=&quot;T:System.Data.SqlTypes.SqlBoolean&quot; /&gt; structure.">
        <see cref="T:System.Data.SqlTypes.SqlBoolean" /> 结构。</param>
      <returns vsli:raw="A new &lt;see cref=&quot;T:System.Data.SqlTypes.SqlInt16&quot; /&gt; structure whose &lt;see cref=&quot;P:System.Data.SqlTypes.SqlInt16.Value&quot; /&gt; property is equal to the &lt;see cref=&quot;P:System.Data.SqlTypes.SqlBoolean.ByteValue&quot; /&gt; property of the &lt;see cref=&quot;T:System.Data.SqlTypes.SqlBoolean&quot; /&gt; parameter.">一个新的 <see cref="T:System.Data.SqlTypes.SqlInt16" /> 结构，它的 <see cref="P:System.Data.SqlTypes.SqlInt16.Value" /> 属性等于 <see cref="P:System.Data.SqlTypes.SqlBoolean.ByteValue" /> 参数的 <see cref="T:System.Data.SqlTypes.SqlBoolean" /> 属性。</returns>
    </member>
    <member name="M:System.Data.SqlTypes.SqlInt16.op_Explicit(System.Data.SqlTypes.SqlDecimal)~System.Data.SqlTypes.SqlInt16">
      <summary vsli:raw="Converts the supplied &lt;see cref=&quot;T:System.Data.SqlTypes.SqlDecimal&quot; /&gt; structure to &lt;see cref=&quot;T:System.Data.SqlTypes.SqlInt16&quot; /&gt;.">将提供的 <see cref="T:System.Data.SqlTypes.SqlDecimal" /> 结构转换为 <see cref="T:System.Data.SqlTypes.SqlInt16" />。</summary>
      <param name="x" vsli:raw="A &lt;see cref=&quot;T:System.Data.SqlTypes.SqlDecimal&quot; /&gt; structure.">
        <see cref="T:System.Data.SqlTypes.SqlDecimal" /> 结构。</param>
      <returns vsli:raw="A new &lt;see cref=&quot;T:System.Data.SqlTypes.SqlInt16&quot; /&gt; structure whose &lt;see cref=&quot;P:System.Data.SqlTypes.SqlInt16.Value&quot; /&gt; property is equal to the &lt;see cref=&quot;P:System.Data.SqlTypes.SqlDecimal.Value&quot; /&gt; property of the &lt;see cref=&quot;T:System.Data.SqlTypes.SqlDecimal&quot; /&gt; parameter.">一个新的 <see cref="T:System.Data.SqlTypes.SqlInt16" /> 结构，它的 <see cref="P:System.Data.SqlTypes.SqlInt16.Value" /> 属性等于 <see cref="P:System.Data.SqlTypes.SqlDecimal.Value" /> 参数的 <see cref="T:System.Data.SqlTypes.SqlDecimal" /> 属性。</returns>
    </member>
    <member name="M:System.Data.SqlTypes.SqlInt16.op_Explicit(System.Data.SqlTypes.SqlDouble)~System.Data.SqlTypes.SqlInt16">
      <summary vsli:raw="Converts the supplied &lt;see cref=&quot;T:System.Data.SqlTypes.SqlDouble&quot; /&gt; structure to &lt;see cref=&quot;T:System.Data.SqlTypes.SqlInt16&quot; /&gt;.">将提供的 <see cref="T:System.Data.SqlTypes.SqlDouble" /> 结构转换为 <see cref="T:System.Data.SqlTypes.SqlInt16" />。</summary>
      <param name="x" vsli:raw="A &lt;see cref=&quot;T:System.Data.SqlTypes.SqlDouble&quot; /&gt; structure.">
        <see cref="T:System.Data.SqlTypes.SqlDouble" /> 结构。</param>
      <returns vsli:raw="A new &lt;see cref=&quot;T:System.Data.SqlTypes.SqlInt16&quot; /&gt; structure whose &lt;see cref=&quot;P:System.Data.SqlTypes.SqlInt16.Value&quot; /&gt; property is equal to the integer part of the &lt;see cref=&quot;T:System.Data.SqlTypes.SqlDouble&quot; /&gt; parameter.">一个新的 <see cref="T:System.Data.SqlTypes.SqlInt16" /> 结构，其 <see cref="P:System.Data.SqlTypes.SqlInt16.Value" /> 属性等于 <see cref="T:System.Data.SqlTypes.SqlDouble" /> 参数的整数部分。</returns>
    </member>
    <member name="M:System.Data.SqlTypes.SqlInt16.op_Explicit(System.Data.SqlTypes.SqlInt16)~System.Int16">
      <summary vsli:raw="Converts the supplied &lt;see cref=&quot;T:System.Data.SqlTypes.SqlInt16&quot; /&gt; structure to a short integer.">将提供的 <see cref="T:System.Data.SqlTypes.SqlInt16" /> 结构转换为短整型。</summary>
      <param name="x" vsli:raw="A &lt;see cref=&quot;T:System.Data.SqlTypes.SqlInt16&quot; /&gt; structure.">
        <see cref="T:System.Data.SqlTypes.SqlInt16" /> 结构。</param>
      <returns vsli:raw="A short integer whose value is the Value of the &lt;see cref=&quot;T:System.Data.SqlTypes.SqlInt16&quot; /&gt; parameter.">短整型，其值等于 <see cref="T:System.Data.SqlTypes.SqlInt16" /> 参数的值。</returns>
    </member>
    <member name="M:System.Data.SqlTypes.SqlInt16.op_Explicit(System.Data.SqlTypes.SqlInt32)~System.Data.SqlTypes.SqlInt16">
      <summary vsli:raw="Converts the supplied &lt;see cref=&quot;T:System.Data.SqlTypes.SqlInt32&quot; /&gt; structure to &lt;see cref=&quot;T:System.Data.SqlTypes.SqlInt16&quot; /&gt;.">将提供的 <see cref="T:System.Data.SqlTypes.SqlInt32" /> 结构转换为 <see cref="T:System.Data.SqlTypes.SqlInt16" />。</summary>
      <param name="x" vsli:raw="A &lt;see cref=&quot;T:System.Data.SqlTypes.SqlInt32&quot; /&gt; structure.">
        <see cref="T:System.Data.SqlTypes.SqlInt32" /> 结构。</param>
      <returns vsli:raw="A new &lt;see cref=&quot;T:System.Data.SqlTypes.SqlInt16&quot; /&gt; structure whose &lt;see cref=&quot;P:System.Data.SqlTypes.SqlInt16.Value&quot; /&gt; property is equal to the &lt;see cref=&quot;P:System.Data.SqlTypes.SqlInt32.Value&quot; /&gt; of the supplied &lt;see cref=&quot;T:System.Data.SqlTypes.SqlInt32&quot; /&gt; parameter.">一个新的 <see cref="T:System.Data.SqlTypes.SqlInt16" /> 结构，它的 <see cref="P:System.Data.SqlTypes.SqlInt16.Value" /> 属性等于提供的 <see cref="P:System.Data.SqlTypes.SqlInt32.Value" /> 参数的 <see cref="T:System.Data.SqlTypes.SqlInt32" />。</returns>
    </member>
    <member name="M:System.Data.SqlTypes.SqlInt16.op_Explicit(System.Data.SqlTypes.SqlInt64)~System.Data.SqlTypes.SqlInt16">
      <summary vsli:raw="Converts the supplied &lt;see cref=&quot;T:System.Data.SqlTypes.SqlInt64&quot; /&gt; structure to &lt;see cref=&quot;T:System.Data.SqlTypes.SqlInt16&quot; /&gt;.">将提供的 <see cref="T:System.Data.SqlTypes.SqlInt64" /> 结构转换为 <see cref="T:System.Data.SqlTypes.SqlInt16" />。</summary>
      <param name="x" vsli:raw="A &lt;see cref=&quot;T:System.Data.SqlTypes.SqlInt64&quot; /&gt; structure.">
        <see cref="T:System.Data.SqlTypes.SqlInt64" /> 结构。</param>
      <returns vsli:raw="A new &lt;see cref=&quot;T:System.Data.SqlTypes.SqlInt16&quot; /&gt; structure whose &lt;see cref=&quot;P:System.Data.SqlTypes.SqlInt16.Value&quot; /&gt; property is equal to the &lt;see cref=&quot;P:System.Data.SqlTypes.SqlInt64.Value&quot; /&gt; of the &lt;see cref=&quot;T:System.Data.SqlTypes.SqlInt64&quot; /&gt; parameter.">新的 <see cref="T:System.Data.SqlTypes.SqlInt16" /> 结构，它的 <see cref="P:System.Data.SqlTypes.SqlInt16.Value" /> 属性等于 <see cref="P:System.Data.SqlTypes.SqlInt64.Value" /> 参数的 <see cref="T:System.Data.SqlTypes.SqlInt64" />。</returns>
    </member>
    <member name="M:System.Data.SqlTypes.SqlInt16.op_Explicit(System.Data.SqlTypes.SqlMoney)~System.Data.SqlTypes.SqlInt16">
      <summary vsli:raw="Converts the supplied &lt;see cref=&quot;T:System.Data.SqlTypes.SqlMoney&quot; /&gt; structure to &lt;see cref=&quot;T:System.Data.SqlTypes.SqlInt16&quot; /&gt;.">将提供的 <see cref="T:System.Data.SqlTypes.SqlMoney" /> 结构转换为 <see cref="T:System.Data.SqlTypes.SqlInt16" />。</summary>
      <param name="x" vsli:raw="A &lt;see cref=&quot;T:System.Data.SqlTypes.SqlMoney&quot; /&gt; structure.">
        <see cref="T:System.Data.SqlTypes.SqlMoney" /> 结构。</param>
      <returns vsli:raw="A new &lt;see cref=&quot;T:System.Data.SqlTypes.SqlInt16&quot; /&gt; structure whose &lt;see cref=&quot;P:System.Data.SqlTypes.SqlInt16.Value&quot; /&gt; property is equal to the &lt;see cref=&quot;P:System.Data.SqlTypes.SqlMoney.Value&quot; /&gt; property of the &lt;see cref=&quot;T:System.Data.SqlTypes.SqlMoney&quot; /&gt; parameter.">一个新的 <see cref="T:System.Data.SqlTypes.SqlInt16" /> 结构，它的 <see cref="P:System.Data.SqlTypes.SqlInt16.Value" /> 属性等于 <see cref="P:System.Data.SqlTypes.SqlMoney.Value" /> 参数的 <see cref="T:System.Data.SqlTypes.SqlMoney" /> 属性。</returns>
    </member>
    <member name="M:System.Data.SqlTypes.SqlInt16.op_Explicit(System.Data.SqlTypes.SqlSingle)~System.Data.SqlTypes.SqlInt16">
      <summary vsli:raw="Converts the supplied &lt;see cref=&quot;T:System.Data.SqlTypes.SqlSingle&quot; /&gt; structure to &lt;see cref=&quot;T:System.Data.SqlTypes.SqlInt16&quot; /&gt;.">将提供的 <see cref="T:System.Data.SqlTypes.SqlSingle" /> 结构转换为 <see cref="T:System.Data.SqlTypes.SqlInt16" />。</summary>
      <param name="x" vsli:raw="A &lt;see cref=&quot;T:System.Data.SqlTypes.SqlSingle&quot; /&gt; structure.">
        <see cref="T:System.Data.SqlTypes.SqlSingle" /> 结构。</param>
      <returns vsli:raw="A new &lt;see cref=&quot;T:System.Data.SqlTypes.SqlInt16&quot; /&gt; structure whose &lt;see cref=&quot;P:System.Data.SqlTypes.SqlInt16.Value&quot; /&gt; property is equal to the integer part of the &lt;see cref=&quot;T:System.Data.SqlTypes.SqlSingle&quot; /&gt; parameter.">一个新的 <see cref="T:System.Data.SqlTypes.SqlInt16" /> 结构，其 <see cref="P:System.Data.SqlTypes.SqlInt16.Value" /> 属性等于 <see cref="T:System.Data.SqlTypes.SqlSingle" /> 参数的整数部分。</returns>
    </member>
    <member name="M:System.Data.SqlTypes.SqlInt16.op_Explicit(System.Data.SqlTypes.SqlString)~System.Data.SqlTypes.SqlInt16">
      <summary vsli:raw="Converts the supplied &lt;see cref=&quot;T:System.Data.SqlTypes.SqlString&quot; /&gt; object to &lt;see cref=&quot;T:System.Data.SqlTypes.SqlInt16&quot; /&gt;.">将提供的 <see cref="T:System.Data.SqlTypes.SqlString" /> 对象转换为 <see cref="T:System.Data.SqlTypes.SqlInt16" />。</summary>
      <param name="x" vsli:raw="A &lt;see cref=&quot;T:System.Data.SqlTypes.SqlString&quot; /&gt; object.">
        <see cref="T:System.Data.SqlTypes.SqlString" /> 对象。</param>
      <returns vsli:raw="A new &lt;see cref=&quot;T:System.Data.SqlTypes.SqlInt16&quot; /&gt; structure whose &lt;see cref=&quot;P:System.Data.SqlTypes.SqlInt16.Value&quot; /&gt; property is equal to the value represented by the &lt;see cref=&quot;T:System.Data.SqlTypes.SqlString&quot; /&gt; object parameter.">一个新的 <see cref="T:System.Data.SqlTypes.SqlInt16" /> 结构，它的 <see cref="P:System.Data.SqlTypes.SqlInt16.Value" /> 属性等于 <see cref="T:System.Data.SqlTypes.SqlString" /> 对象参数表示的值。</returns>
    </member>
    <member name="M:System.Data.SqlTypes.SqlInt16.op_GreaterThan(System.Data.SqlTypes.SqlInt16,System.Data.SqlTypes.SqlInt16)">
      <summary vsli:raw="Compares two instances of &lt;see cref=&quot;T:System.Data.SqlTypes.SqlInt16&quot; /&gt; to determine whether the first is greater than the second.">对 <see cref="T:System.Data.SqlTypes.SqlInt16" /> 的两个实例进行比较，以确定第一个实例是否大于第二个实例。</summary>
      <param name="x" vsli:raw="A &lt;see cref=&quot;T:System.Data.SqlTypes.SqlInt16&quot; /&gt; structure.">
        <see cref="T:System.Data.SqlTypes.SqlInt16" /> 结构。</param>
      <param name="y" vsli:raw="A &lt;see cref=&quot;T:System.Data.SqlTypes.SqlInt16&quot; /&gt; structure.">
        <see cref="T:System.Data.SqlTypes.SqlInt16" /> 结构。</param>
      <returns vsli:raw="A &lt;see cref=&quot;T:System.Data.SqlTypes.SqlBoolean&quot; /&gt; that is &lt;see cref=&quot;F:System.Data.SqlTypes.SqlBoolean.True&quot; /&gt; if the first instance is greater than the second instance. Otherwise, &lt;see cref=&quot;F:System.Data.SqlTypes.SqlBoolean.False&quot; /&gt;. If either instance of &lt;see cref=&quot;T:System.Data.SqlTypes.SqlInt16&quot; /&gt; is null, the &lt;see cref=&quot;P:System.Data.SqlTypes.SqlBoolean.Value&quot; /&gt; of the &lt;see cref=&quot;T:System.Data.SqlTypes.SqlBoolean&quot; /&gt; will be &lt;see cref=&quot;F:System.Data.SqlTypes.SqlBoolean.Null&quot; /&gt;.">一个 <see cref="T:System.Data.SqlTypes.SqlBoolean" />，如果第一个实例大于第二个实例，则它为 <see cref="F:System.Data.SqlTypes.SqlBoolean.True" />。 否则为 <see cref="F:System.Data.SqlTypes.SqlBoolean.False" />。 如果 <see cref="T:System.Data.SqlTypes.SqlInt16" /> 的任一实例为空，则 <see cref="P:System.Data.SqlTypes.SqlBoolean.Value" /> 的 <see cref="T:System.Data.SqlTypes.SqlBoolean" /> 将为 <see cref="F:System.Data.SqlTypes.SqlBoolean.Null" />。</returns>
    </member>
    <member name="M:System.Data.SqlTypes.SqlInt16.op_GreaterThanOrEqual(System.Data.SqlTypes.SqlInt16,System.Data.SqlTypes.SqlInt16)">
      <summary vsli:raw="Compares two &lt;see cref=&quot;T:System.Data.SqlTypes.SqlInt16&quot; /&gt; structures to determine whether the first is greater than or equal to the second.">对两个 <see cref="T:System.Data.SqlTypes.SqlInt16" /> 结构进行比较，以确定第一个结构是否大于或等于第二个结构。</summary>
      <param name="x" vsli:raw="A &lt;see cref=&quot;T:System.Data.SqlTypes.SqlInt16&quot; /&gt; structure.">
        <see cref="T:System.Data.SqlTypes.SqlInt16" /> 结构。</param>
      <param name="y" vsli:raw="A &lt;see cref=&quot;T:System.Data.SqlTypes.SqlInt16&quot; /&gt; structure.">
        <see cref="T:System.Data.SqlTypes.SqlInt16" /> 结构。</param>
      <returns vsli:raw="A &lt;see cref=&quot;T:System.Data.SqlTypes.SqlBoolean&quot; /&gt; that is &lt;see cref=&quot;F:System.Data.SqlTypes.SqlBoolean.True&quot; /&gt; if the first instance is greater than or equal to the second instance. Otherwise, &lt;see cref=&quot;F:System.Data.SqlTypes.SqlBoolean.False&quot; /&gt;. If either instance of &lt;see cref=&quot;T:System.Data.SqlTypes.SqlInt16&quot; /&gt; is null, the &lt;see cref=&quot;P:System.Data.SqlTypes.SqlBoolean.Value&quot; /&gt; of the &lt;see cref=&quot;T:System.Data.SqlTypes.SqlBoolean&quot; /&gt; will be &lt;see cref=&quot;F:System.Data.SqlTypes.SqlBoolean.Null&quot; /&gt;.">一个 <see cref="T:System.Data.SqlTypes.SqlBoolean" />，如果第一个实例大于或等于第二个实例，则为 <see cref="F:System.Data.SqlTypes.SqlBoolean.True" />。 否则为 <see cref="F:System.Data.SqlTypes.SqlBoolean.False" />。 如果 <see cref="T:System.Data.SqlTypes.SqlInt16" /> 的任一实例为空，则 <see cref="P:System.Data.SqlTypes.SqlBoolean.Value" /> 的 <see cref="T:System.Data.SqlTypes.SqlBoolean" /> 将为 <see cref="F:System.Data.SqlTypes.SqlBoolean.Null" />。</returns>
    </member>
    <member name="M:System.Data.SqlTypes.SqlInt16.op_Implicit(System.Data.SqlTypes.SqlByte)~System.Data.SqlTypes.SqlInt16">
      <summary vsli:raw="Converts the supplied &lt;see cref=&quot;T:System.Data.SqlTypes.SqlByte&quot; /&gt; structure to &lt;see cref=&quot;T:System.Data.SqlTypes.SqlInt16&quot; /&gt;.">将提供的 <see cref="T:System.Data.SqlTypes.SqlByte" /> 结构转换为 <see cref="T:System.Data.SqlTypes.SqlInt16" />。</summary>
      <param name="x" vsli:raw="A &lt;see cref=&quot;T:System.Data.SqlTypes.SqlByte&quot; /&gt; structure.">
        <see cref="T:System.Data.SqlTypes.SqlByte" /> 结构。</param>
      <returns vsli:raw="A new &lt;see cref=&quot;T:System.Data.SqlTypes.SqlInt16&quot; /&gt; structure whose &lt;see cref=&quot;P:System.Data.SqlTypes.SqlInt16.Value&quot; /&gt; property is equal to the &lt;see cref=&quot;P:System.Data.SqlTypes.SqlByte.Value&quot; /&gt; property of the &lt;see cref=&quot;T:System.Data.SqlTypes.SqlByte&quot; /&gt; parameter.">一个新的 <see cref="T:System.Data.SqlTypes.SqlInt16" /> 结构，它的 <see cref="P:System.Data.SqlTypes.SqlInt16.Value" /> 属性等于 <see cref="P:System.Data.SqlTypes.SqlByte.Value" /> 参数的 <see cref="T:System.Data.SqlTypes.SqlByte" /> 属性。</returns>
    </member>
    <member name="M:System.Data.SqlTypes.SqlInt16.op_Implicit(System.Int16)~System.Data.SqlTypes.SqlInt16">
      <summary vsli:raw="Converts the supplied short integer to &lt;see cref=&quot;T:System.Data.SqlTypes.SqlInt16&quot; /&gt;.">将提供的短整型转换为 <see cref="T:System.Data.SqlTypes.SqlInt16" />。</summary>
      <param name="x" vsli:raw="A short integer value.">短整型值。</param>
      <returns vsli:raw="A &lt;see cref=&quot;T:System.Data.SqlTypes.SqlInt16&quot; /&gt; structure with the same value as the specified short integer.">与指定的短整型具有相同值的 <see cref="T:System.Data.SqlTypes.SqlInt16" /> 结构。</returns>
    </member>
    <member name="M:System.Data.SqlTypes.SqlInt16.op_Inequality(System.Data.SqlTypes.SqlInt16,System.Data.SqlTypes.SqlInt16)">
      <summary vsli:raw="Performs a logical comparison of two &lt;see cref=&quot;T:System.Data.SqlTypes.SqlInt16&quot; /&gt; structures to determine whether they are not equal.">对两个 <see cref="T:System.Data.SqlTypes.SqlInt16" /> 结构执行逻辑比较，以确定它们是否相等。</summary>
      <param name="x" vsli:raw="A &lt;see cref=&quot;T:System.Data.SqlTypes.SqlInt16&quot; /&gt; structure.">
        <see cref="T:System.Data.SqlTypes.SqlInt16" /> 结构。</param>
      <param name="y" vsli:raw="A &lt;see cref=&quot;T:System.Data.SqlTypes.SqlInt16&quot; /&gt; structure.">
        <see cref="T:System.Data.SqlTypes.SqlInt16" /> 结构。</param>
      <returns vsli:raw="A &lt;see cref=&quot;T:System.Data.SqlTypes.SqlBoolean&quot; /&gt; that is &lt;see cref=&quot;F:System.Data.SqlTypes.SqlBoolean.True&quot; /&gt; if the two instances are not equal or &lt;see cref=&quot;F:System.Data.SqlTypes.SqlBoolean.False&quot; /&gt; if the two instances are equal. If either instance of &lt;see cref=&quot;T:System.Data.SqlTypes.SqlInt16&quot; /&gt; is null, the &lt;see cref=&quot;P:System.Data.SqlTypes.SqlBoolean.Value&quot; /&gt; of the &lt;see cref=&quot;T:System.Data.SqlTypes.SqlBoolean&quot; /&gt; will be &lt;see cref=&quot;F:System.Data.SqlTypes.SqlBoolean.Null&quot; /&gt;.">一个 <see cref="T:System.Data.SqlTypes.SqlBoolean" />，它在两个实例不等时为 <see cref="F:System.Data.SqlTypes.SqlBoolean.True" />，在两个实例相等时为 <see cref="F:System.Data.SqlTypes.SqlBoolean.False" />。 如果 <see cref="T:System.Data.SqlTypes.SqlInt16" /> 的任一实例为空，则 <see cref="P:System.Data.SqlTypes.SqlBoolean.Value" /> 的 <see cref="T:System.Data.SqlTypes.SqlBoolean" /> 将为 <see cref="F:System.Data.SqlTypes.SqlBoolean.Null" />。</returns>
    </member>
    <member name="M:System.Data.SqlTypes.SqlInt16.op_LessThan(System.Data.SqlTypes.SqlInt16,System.Data.SqlTypes.SqlInt16)">
      <summary vsli:raw="Compares two instances of &lt;see cref=&quot;T:System.Data.SqlTypes.SqlInt16&quot; /&gt; to determine whether the first is less than the second.">对 <see cref="T:System.Data.SqlTypes.SqlInt16" /> 的两个实例进行比较，以确定第一个实例是否小于第二个实例。</summary>
      <param name="x" vsli:raw="A &lt;see cref=&quot;T:System.Data.SqlTypes.SqlInt16&quot; /&gt; structure.">
        <see cref="T:System.Data.SqlTypes.SqlInt16" /> 结构。</param>
      <param name="y" vsli:raw="A &lt;see cref=&quot;T:System.Data.SqlTypes.SqlInt16&quot; /&gt; structure.">
        <see cref="T:System.Data.SqlTypes.SqlInt16" /> 结构。</param>
      <returns vsli:raw="A &lt;see cref=&quot;T:System.Data.SqlTypes.SqlBoolean&quot; /&gt; that is &lt;see cref=&quot;F:System.Data.SqlTypes.SqlBoolean.True&quot; /&gt; if the first instance is less than the second instance. Otherwise, &lt;see cref=&quot;F:System.Data.SqlTypes.SqlBoolean.False&quot; /&gt;. If either instance of &lt;see cref=&quot;T:System.Data.SqlTypes.SqlInt16&quot; /&gt; is null, the &lt;see cref=&quot;P:System.Data.SqlTypes.SqlBoolean.Value&quot; /&gt; of the &lt;see cref=&quot;T:System.Data.SqlTypes.SqlBoolean&quot; /&gt; will be &lt;see cref=&quot;F:System.Data.SqlTypes.SqlBoolean.Null&quot; /&gt;.">一个 <see cref="T:System.Data.SqlTypes.SqlBoolean" />，如果第一个实例小于第二个实例，则它为 <see cref="F:System.Data.SqlTypes.SqlBoolean.True" />。 否则为 <see cref="F:System.Data.SqlTypes.SqlBoolean.False" />。 如果 <see cref="T:System.Data.SqlTypes.SqlInt16" /> 的任一实例为空，则 <see cref="P:System.Data.SqlTypes.SqlBoolean.Value" /> 的 <see cref="T:System.Data.SqlTypes.SqlBoolean" /> 将为 <see cref="F:System.Data.SqlTypes.SqlBoolean.Null" />。</returns>
    </member>
    <member name="M:System.Data.SqlTypes.SqlInt16.op_LessThanOrEqual(System.Data.SqlTypes.SqlInt16,System.Data.SqlTypes.SqlInt16)">
      <summary vsli:raw="Compares two &lt;see cref=&quot;T:System.Data.SqlTypes.SqlInt16&quot; /&gt; structures to determine whether the first is less than or equal to the second.">对两个 <see cref="T:System.Data.SqlTypes.SqlInt16" /> 结构进行比较，以确定第一个结构是否小于或等于第二个结构。</summary>
      <param name="x" vsli:raw="A &lt;see cref=&quot;T:System.Data.SqlTypes.SqlInt16&quot; /&gt; structure.">
        <see cref="T:System.Data.SqlTypes.SqlInt16" /> 结构。</param>
      <param name="y" vsli:raw="A &lt;see cref=&quot;T:System.Data.SqlTypes.SqlInt16&quot; /&gt; structure.">
        <see cref="T:System.Data.SqlTypes.SqlInt16" /> 结构。</param>
      <returns vsli:raw="A &lt;see cref=&quot;T:System.Data.SqlTypes.SqlBoolean&quot; /&gt; that is &lt;see cref=&quot;F:System.Data.SqlTypes.SqlBoolean.True&quot; /&gt; if the first instance is less than or equal to the second instance. Otherwise, &lt;see cref=&quot;F:System.Data.SqlTypes.SqlBoolean.False&quot; /&gt;. If either instance of &lt;see cref=&quot;T:System.Data.SqlTypes.SqlInt16&quot; /&gt; is null, the &lt;see cref=&quot;P:System.Data.SqlTypes.SqlBoolean.Value&quot; /&gt; of the &lt;see cref=&quot;T:System.Data.SqlTypes.SqlBoolean&quot; /&gt; will be &lt;see cref=&quot;F:System.Data.SqlTypes.SqlBoolean.Null&quot; /&gt;.">一个 <see cref="T:System.Data.SqlTypes.SqlBoolean" />，如果第一个实例小于或等于第二个实例，则它为 <see cref="F:System.Data.SqlTypes.SqlBoolean.True" />。 否则为 <see cref="F:System.Data.SqlTypes.SqlBoolean.False" />。 如果 <see cref="T:System.Data.SqlTypes.SqlInt16" /> 的任一实例为空，则 <see cref="P:System.Data.SqlTypes.SqlBoolean.Value" /> 的 <see cref="T:System.Data.SqlTypes.SqlBoolean" /> 将为 <see cref="F:System.Data.SqlTypes.SqlBoolean.Null" />。</returns>
    </member>
    <member name="M:System.Data.SqlTypes.SqlInt16.op_Modulus(System.Data.SqlTypes.SqlInt16,System.Data.SqlTypes.SqlInt16)">
      <summary vsli:raw="Computes the remainder after dividing its first &lt;see cref=&quot;T:System.Data.SqlTypes.SqlInt16&quot; /&gt; operand by its second.">计算将其第一个 <see cref="T:System.Data.SqlTypes.SqlInt16" /> 操作数除以第二个操作数后所得的余数。</summary>
      <param name="x" vsli:raw="A &lt;see cref=&quot;T:System.Data.SqlTypes.SqlInt16&quot; /&gt; structure.">
        <see cref="T:System.Data.SqlTypes.SqlInt16" /> 结构。</param>
      <param name="y" vsli:raw="A &lt;see cref=&quot;T:System.Data.SqlTypes.SqlInt16&quot; /&gt; structure.">
        <see cref="T:System.Data.SqlTypes.SqlInt16" /> 结构。</param>
      <returns vsli:raw="A &lt;see cref=&quot;T:System.Data.SqlTypes.SqlInt16&quot; /&gt; structure whose &lt;see cref=&quot;P:System.Data.SqlTypes.SqlInt16.Value&quot; /&gt; contains the remainder.">一个 <see cref="T:System.Data.SqlTypes.SqlInt16" /> 结构，它的 <see cref="P:System.Data.SqlTypes.SqlInt16.Value" /> 包含该余数。</returns>
    </member>
    <member name="M:System.Data.SqlTypes.SqlInt16.op_Multiply(System.Data.SqlTypes.SqlInt16,System.Data.SqlTypes.SqlInt16)">
      <summary vsli:raw="Computes the product of the two &lt;see cref=&quot;T:System.Data.SqlTypes.SqlInt16&quot; /&gt; parameters.">计算两个 <see cref="T:System.Data.SqlTypes.SqlInt16" /> 参数的乘积。</summary>
      <param name="x" vsli:raw="A &lt;see cref=&quot;T:System.Data.SqlTypes.SqlInt16&quot; /&gt; structure.">
        <see cref="T:System.Data.SqlTypes.SqlInt16" /> 结构。</param>
      <param name="y" vsli:raw="A &lt;see cref=&quot;T:System.Data.SqlTypes.SqlInt16&quot; /&gt; structure.">
        <see cref="T:System.Data.SqlTypes.SqlInt16" /> 结构。</param>
      <returns vsli:raw="A &lt;see cref=&quot;T:System.Data.SqlTypes.SqlInt16&quot; /&gt; structure whose &lt;see cref=&quot;P:System.Data.SqlTypes.SqlInt16.Value&quot; /&gt; contains the product of the two parameters.">一个 <see cref="T:System.Data.SqlTypes.SqlInt16" /> 结构，它的 <see cref="P:System.Data.SqlTypes.SqlInt16.Value" /> 包含两个参数的乘积。</returns>
    </member>
    <member name="M:System.Data.SqlTypes.SqlInt16.op_OnesComplement(System.Data.SqlTypes.SqlInt16)">
      <summary vsli:raw="The ~ operator performs a bitwise one's complement operation on its &lt;see cref=&quot;T:System.Data.SqlTypes.SqlByte&quot; /&gt; operand.">~ 运算符对它的 <see cref="T:System.Data.SqlTypes.SqlByte" /> 操作数执行按位二进制反码运算。</summary>
      <param name="x" vsli:raw="A &lt;see cref=&quot;T:System.Data.SqlTypes.SqlInt16&quot; /&gt; structure.">
        <see cref="T:System.Data.SqlTypes.SqlInt16" /> 结构。</param>
      <returns vsli:raw="A &lt;see cref=&quot;T:System.Data.SqlTypes.SqlInt16&quot; /&gt; structure whose &lt;see cref=&quot;P:System.Data.SqlTypes.SqlInt16.Value&quot; /&gt; property contains the complement of the specified &lt;see cref=&quot;T:System.Data.SqlTypes.SqlInt16&quot; /&gt; structure.">一个 <see cref="T:System.Data.SqlTypes.SqlInt16" /> 结构，它的 <see cref="P:System.Data.SqlTypes.SqlInt16.Value" /> 属性包含指定 <see cref="T:System.Data.SqlTypes.SqlInt16" /> 结构的二进制反码。</returns>
    </member>
    <member name="M:System.Data.SqlTypes.SqlInt16.op_Subtraction(System.Data.SqlTypes.SqlInt16,System.Data.SqlTypes.SqlInt16)">
      <summary vsli:raw="Subtracts the second &lt;see cref=&quot;T:System.Data.SqlTypes.SqlInt16&quot; /&gt; parameter from the first.">从第一个 <see cref="T:System.Data.SqlTypes.SqlInt16" /> 参数中减去第二个参数。</summary>
      <param name="x" vsli:raw="A &lt;see cref=&quot;T:System.Data.SqlTypes.SqlInt16&quot; /&gt; structure.">
        <see cref="T:System.Data.SqlTypes.SqlInt16" /> 结构。</param>
      <param name="y" vsli:raw="A &lt;see cref=&quot;T:System.Data.SqlTypes.SqlInt16&quot; /&gt; structure.">
        <see cref="T:System.Data.SqlTypes.SqlInt16" /> 结构。</param>
      <returns vsli:raw="A &lt;see cref=&quot;T:System.Data.SqlTypes.SqlInt16&quot; /&gt; structure whose &lt;see cref=&quot;P:System.Data.SqlTypes.SqlInt16.Value&quot; /&gt; property contains the results of the subtraction.">一个 <see cref="T:System.Data.SqlTypes.SqlInt16" /> 结构，它的 <see cref="P:System.Data.SqlTypes.SqlInt16.Value" /> 属性包含该减法运算的结果。</returns>
    </member>
    <member name="M:System.Data.SqlTypes.SqlInt16.op_UnaryNegation(System.Data.SqlTypes.SqlInt16)">
      <summary vsli:raw="The unary minus operator negates the &lt;see cref=&quot;P:System.Data.SqlTypes.SqlInt16.Value&quot; /&gt; of the &lt;see cref=&quot;T:System.Data.SqlTypes.SqlInt16&quot; /&gt; operand.">一元负运算符对 <see cref="P:System.Data.SqlTypes.SqlInt16.Value" /> 操作数的 <see cref="T:System.Data.SqlTypes.SqlInt16" /> 求反。</summary>
      <param name="x" vsli:raw="A &lt;see cref=&quot;T:System.Data.SqlTypes.SqlInt16&quot; /&gt; structure.">
        <see cref="T:System.Data.SqlTypes.SqlInt16" /> 结构。</param>
      <returns vsli:raw="A &lt;see cref=&quot;T:System.Data.SqlTypes.SqlInt16&quot; /&gt; structure that contains the negated value.">一个 <see cref="T:System.Data.SqlTypes.SqlInt16" /> 结构，包含求反的值。</returns>
    </member>
    <member name="M:System.Data.SqlTypes.SqlInt16.Parse(System.String)">
      <summary vsli:raw="Converts the &lt;see cref=&quot;T:System.String&quot; /&gt; representation of a number to its 16-bit signed integer equivalent.">将数字的 <see cref="T:System.String" /> 表示形式转换为它的等效 16 位有符号整数。</summary>
      <param name="s" vsli:raw="The &lt;see langword=&quot;String&quot; /&gt; to be parsed.">要分析的 <see langword="String" />。</param>
      <returns vsli:raw="A 16-bit signed integer equivalent to the value that is contained in the specified &lt;see cref=&quot;T:System.String&quot; /&gt;.">一个 16 位有符号整数，它等效于指定的 <see cref="T:System.String" /> 中包含的值。</returns>
    </member>
    <member name="M:System.Data.SqlTypes.SqlInt16.Subtract(System.Data.SqlTypes.SqlInt16,System.Data.SqlTypes.SqlInt16)">
      <summary vsli:raw="Subtracts the second &lt;see cref=&quot;T:System.Data.SqlTypes.SqlInt16&quot; /&gt; parameter from the first.">从第一个 <see cref="T:System.Data.SqlTypes.SqlInt16" /> 参数中减去第二个参数。</summary>
      <param name="x" vsli:raw="A &lt;see cref=&quot;T:System.Data.SqlTypes.SqlInt16&quot; /&gt; structure.">
        <see cref="T:System.Data.SqlTypes.SqlInt16" /> 结构。</param>
      <param name="y" vsli:raw="A &lt;see cref=&quot;T:System.Data.SqlTypes.SqlInt16&quot; /&gt; structure.">
        <see cref="T:System.Data.SqlTypes.SqlInt16" /> 结构。</param>
      <returns vsli:raw="A &lt;see cref=&quot;T:System.Data.SqlTypes.SqlInt16&quot; /&gt; structure whose &lt;see cref=&quot;P:System.Data.SqlTypes.SqlInt16.Value&quot; /&gt; property contains the results of the subtraction.">一个 <see cref="T:System.Data.SqlTypes.SqlInt16" /> 结构，它的 <see cref="P:System.Data.SqlTypes.SqlInt16.Value" /> 属性包含该减法运算的结果。</returns>
    </member>
    <member name="M:System.Data.SqlTypes.SqlInt16.System#Xml#Serialization#IXmlSerializable#GetSchema">
      <summary vsli:raw="This member supports the .NET Framework infrastructure and is not intended to be used directly from your code.">此成员支持 .NET Framework 结构，不能在代码中直接使用。</summary>
      <returns vsli:raw="An XML schema consumed by .NET Framework.">.NET 框架所使用的 XML 架构。</returns>
    </member>
    <member name="M:System.Data.SqlTypes.SqlInt16.System#Xml#Serialization#IXmlSerializable#ReadXml(System.Xml.XmlReader)">
      <summary vsli:raw="This member supports the .NET Framework infrastructure and is not intended to be used directly from your code.">此成员支持 .NET Framework 结构，不能在代码中直接使用。</summary>
      <param name="reader" vsli:raw="&lt;see langword=&quot;XmlReader&quot; /&gt;">
        <see langword="XmlReader" />
      </param>
    </member>
    <member name="M:System.Data.SqlTypes.SqlInt16.System#Xml#Serialization#IXmlSerializable#WriteXml(System.Xml.XmlWriter)">
      <summary vsli:raw="This member supports the .NET Framework infrastructure and is not intended to be used directly from your code.">此成员支持 .NET Framework 结构，不能在代码中直接使用。</summary>
      <param name="writer" vsli:raw="&lt;see langword=&quot;XmlWriter&quot; /&gt;">
        <see langword="XmlWriter" />
      </param>
    </member>
    <member name="M:System.Data.SqlTypes.SqlInt16.ToSqlBoolean">
      <summary vsli:raw="Converts this &lt;see cref=&quot;T:System.Data.SqlTypes.SqlInt16&quot; /&gt; structure to &lt;see cref=&quot;T:System.Data.SqlTypes.SqlBoolean&quot; /&gt;.">将此 <see cref="T:System.Data.SqlTypes.SqlInt16" /> 结构转换为 <see cref="T:System.Data.SqlTypes.SqlBoolean" />。</summary>
      <returns vsli:raw="&lt;see langword=&quot;true&quot; /&gt; if the &lt;see cref=&quot;P:System.Data.SqlTypes.SqlInt16.Value&quot; /&gt; is non-zero; &lt;see langword=&quot;false&quot; /&gt; if zero; otherwise Null.">如果 <see cref="P:System.Data.SqlTypes.SqlInt16.Value" /> 不是零，则为 <see langword="true" />；如果为零，则为 <see langword="false" />；否则为 Null。</returns>
    </member>
    <member name="M:System.Data.SqlTypes.SqlInt16.ToSqlByte">
      <summary vsli:raw="Converts this &lt;see cref=&quot;T:System.Data.SqlTypes.SqlInt16&quot; /&gt; structure to &lt;see cref=&quot;T:System.Data.SqlTypes.SqlByte&quot; /&gt;.">将此 <see cref="T:System.Data.SqlTypes.SqlInt16" /> 结构转换为 <see cref="T:System.Data.SqlTypes.SqlByte" />。</summary>
      <returns vsli:raw="A &lt;see cref=&quot;T:System.Data.SqlTypes.SqlByte&quot; /&gt; structure whose &lt;see cref=&quot;P:System.Data.SqlTypes.SqlInt16.Value&quot; /&gt; equals the &lt;see cref=&quot;P:System.Data.SqlTypes.SqlInt16.Value&quot; /&gt; of this &lt;see cref=&quot;T:System.Data.SqlTypes.SqlInt16&quot; /&gt; structure. If the value of the &lt;see cref=&quot;T:System.Data.SqlTypes.SqlInt16&quot; /&gt; is less than 0 or greater than 255, an &lt;see cref=&quot;T:System.OverflowException&quot; /&gt; occurs.">一个 <see cref="T:System.Data.SqlTypes.SqlByte" /> 结构，其 <see cref="P:System.Data.SqlTypes.SqlInt16.Value" /> 等于此 <see cref="T:System.Data.SqlTypes.SqlInt16" /> 结构的 <see cref="P:System.Data.SqlTypes.SqlInt16.Value" />。 如果 <see cref="T:System.Data.SqlTypes.SqlInt16" /> 的值小于 0 或大于 255，则将发生 <see cref="T:System.OverflowException" />。</returns>
    </member>
    <member name="M:System.Data.SqlTypes.SqlInt16.ToSqlDecimal">
      <summary vsli:raw="Converts this &lt;see cref=&quot;T:System.Data.SqlTypes.SqlInt16&quot; /&gt; structure to &lt;see cref=&quot;T:System.Data.SqlTypes.SqlDecimal&quot; /&gt;.">将此 <see cref="T:System.Data.SqlTypes.SqlInt16" /> 结构转换为 <see cref="T:System.Data.SqlTypes.SqlDecimal" />。</summary>
      <returns vsli:raw="A new &lt;see cref=&quot;T:System.Data.SqlTypes.SqlDecimal&quot; /&gt; structure whose &lt;see langword=&quot;Value&quot; /&gt; equals the value of this &lt;see cref=&quot;T:System.Data.SqlTypes.SqlInt16&quot; /&gt; structure.">一个新 <see cref="T:System.Data.SqlTypes.SqlDecimal" /> 结构，其 <see langword="Value" /> 等于此 <see cref="T:System.Data.SqlTypes.SqlInt16" /> 结构的值。</returns>
    </member>
    <member name="M:System.Data.SqlTypes.SqlInt16.ToSqlDouble">
      <summary vsli:raw="Converts this &lt;see cref=&quot;T:System.Data.SqlTypes.SqlInt16&quot; /&gt; structure to &lt;see cref=&quot;T:System.Data.SqlTypes.SqlDouble&quot; /&gt;.">将此 <see cref="T:System.Data.SqlTypes.SqlInt16" /> 结构转换为 <see cref="T:System.Data.SqlTypes.SqlDouble" />。</summary>
      <returns vsli:raw="A new &lt;see cref=&quot;T:System.Data.SqlTypes.SqlDouble&quot; /&gt; structure whose &lt;see langword=&quot;Value&quot; /&gt; equals the value of this &lt;see cref=&quot;T:System.Data.SqlTypes.SqlInt16&quot; /&gt; structure.">一个新 <see cref="T:System.Data.SqlTypes.SqlDouble" /> 结构，其 <see langword="Value" /> 等于此 <see cref="T:System.Data.SqlTypes.SqlInt16" /> 结构的值。</returns>
    </member>
    <member name="M:System.Data.SqlTypes.SqlInt16.ToSqlInt32">
      <summary vsli:raw="Converts this &lt;see cref=&quot;T:System.Data.SqlTypes.SqlInt16&quot; /&gt; structure to &lt;see cref=&quot;T:System.Data.SqlTypes.SqlInt32&quot; /&gt;.">将此 <see cref="T:System.Data.SqlTypes.SqlInt16" /> 结构转换为 <see cref="T:System.Data.SqlTypes.SqlInt32" />。</summary>
      <returns vsli:raw="A new &lt;see cref=&quot;T:System.Data.SqlTypes.SqlInt32&quot; /&gt; structure whose &lt;see langword=&quot;Value&quot; /&gt; equals the value of this &lt;see cref=&quot;T:System.Data.SqlTypes.SqlInt16&quot; /&gt; structure.">一个新 <see cref="T:System.Data.SqlTypes.SqlInt32" /> 结构，其 <see langword="Value" /> 等于此 <see cref="T:System.Data.SqlTypes.SqlInt16" /> 结构的值。</returns>
    </member>
    <member name="M:System.Data.SqlTypes.SqlInt16.ToSqlInt64">
      <summary vsli:raw="Converts this &lt;see cref=&quot;T:System.Data.SqlTypes.SqlInt16&quot; /&gt; structure to &lt;see cref=&quot;T:System.Data.SqlTypes.SqlInt64&quot; /&gt;.">将此 <see cref="T:System.Data.SqlTypes.SqlInt16" /> 结构转换为 <see cref="T:System.Data.SqlTypes.SqlInt64" />。</summary>
      <returns vsli:raw="A new &lt;see cref=&quot;T:System.Data.SqlTypes.SqlInt64&quot; /&gt; structure whose &lt;see langword=&quot;Value&quot; /&gt; equals the value of this &lt;see cref=&quot;T:System.Data.SqlTypes.SqlInt16&quot; /&gt; structure.">一个新 <see cref="T:System.Data.SqlTypes.SqlInt64" /> 结构，其 <see langword="Value" /> 等于此 <see cref="T:System.Data.SqlTypes.SqlInt16" /> 结构的值。</returns>
    </member>
    <member name="M:System.Data.SqlTypes.SqlInt16.ToSqlMoney">
      <summary vsli:raw="Converts this &lt;see cref=&quot;T:System.Data.SqlTypes.SqlInt16&quot; /&gt; structure to &lt;see cref=&quot;T:System.Data.SqlTypes.SqlMoney&quot; /&gt;.">将此 <see cref="T:System.Data.SqlTypes.SqlInt16" /> 结构转换为 <see cref="T:System.Data.SqlTypes.SqlMoney" />。</summary>
      <returns vsli:raw="A new &lt;see cref=&quot;T:System.Data.SqlTypes.SqlMoney&quot; /&gt; structure whose &lt;see langword=&quot;Value&quot; /&gt; equals the value of this &lt;see cref=&quot;T:System.Data.SqlTypes.SqlInt16&quot; /&gt; structure.">一个新 <see cref="T:System.Data.SqlTypes.SqlMoney" /> 结构，其 <see langword="Value" /> 等于此 <see cref="T:System.Data.SqlTypes.SqlInt16" /> 结构的值。</returns>
    </member>
    <member name="M:System.Data.SqlTypes.SqlInt16.ToSqlSingle">
      <summary vsli:raw="Converts this &lt;see cref=&quot;T:System.Data.SqlTypes.SqlInt16&quot; /&gt; structure to &lt;see cref=&quot;T:System.Data.SqlTypes.SqlSingle&quot; /&gt;.">将此 <see cref="T:System.Data.SqlTypes.SqlInt16" /> 结构转换为 <see cref="T:System.Data.SqlTypes.SqlSingle" />。</summary>
      <returns vsli:raw="A new &lt;see cref=&quot;T:System.Data.SqlTypes.SqlSingle&quot; /&gt; structure whose &lt;see langword=&quot;Value&quot; /&gt; equals the value of this &lt;see cref=&quot;T:System.Data.SqlTypes.SqlInt16&quot; /&gt; structure.">一个新 <see cref="T:System.Data.SqlTypes.SqlSingle" /> 结构，其 <see langword="Value" /> 等于此 <see cref="T:System.Data.SqlTypes.SqlInt16" /> 结构的值。</returns>
    </member>
    <member name="M:System.Data.SqlTypes.SqlInt16.ToSqlString">
      <summary vsli:raw="Converts this &lt;see cref=&quot;T:System.Data.SqlTypes.SqlInt16&quot; /&gt; structure to &lt;see cref=&quot;T:System.Data.SqlTypes.SqlString&quot; /&gt;.">将此 <see cref="T:System.Data.SqlTypes.SqlInt16" /> 结构转换为 <see cref="T:System.Data.SqlTypes.SqlString" />。</summary>
      <returns vsli:raw="A &lt;see cref=&quot;T:System.Data.SqlTypes.SqlString&quot; /&gt; representing the &lt;see cref=&quot;P:System.Data.SqlTypes.SqlInt16.Value&quot; /&gt; of this instance of &lt;see cref=&quot;T:System.Data.SqlTypes.SqlInt16&quot; /&gt;.">
        <see cref="T:System.Data.SqlTypes.SqlString" /> 表示 <see cref="P:System.Data.SqlTypes.SqlInt16.Value" /> 的此实例的 <see cref="T:System.Data.SqlTypes.SqlInt16" />。</returns>
    </member>
    <member name="M:System.Data.SqlTypes.SqlInt16.ToString">
      <summary vsli:raw="Converts a &lt;see cref=&quot;T:System.Data.SqlTypes.SqlInt16&quot; /&gt; structure to &lt;see cref=&quot;T:System.String&quot; /&gt;.">将 <see cref="T:System.Data.SqlTypes.SqlInt16" /> 结构转换为 <see cref="T:System.String" />。</summary>
      <returns vsli:raw="A &lt;see cref=&quot;T:System.String&quot; /&gt; object representing the &lt;see cref=&quot;P:System.Data.SqlTypes.SqlInt16.Value&quot; /&gt; of this instance of &lt;see cref=&quot;T:System.Data.SqlTypes.SqlInt16&quot; /&gt;.">一个 <see cref="T:System.String" /> 对象，它表示 <see cref="P:System.Data.SqlTypes.SqlInt16.Value" /> 的此实例的 <see cref="T:System.Data.SqlTypes.SqlInt16" />。</returns>
    </member>
    <member name="M:System.Data.SqlTypes.SqlInt16.Xor(System.Data.SqlTypes.SqlInt16,System.Data.SqlTypes.SqlInt16)">
      <summary vsli:raw="Performs a bitwise exclusive-OR operation on the supplied parameters.">对提供的参数执行按位“异或”运算。</summary>
      <param name="x" vsli:raw="A &lt;see cref=&quot;T:System.Data.SqlTypes.SqlInt16&quot; /&gt; structure.">
        <see cref="T:System.Data.SqlTypes.SqlInt16" /> 结构。</param>
      <param name="y" vsli:raw="A &lt;see cref=&quot;T:System.Data.SqlTypes.SqlInt16&quot; /&gt; structure.">
        <see cref="T:System.Data.SqlTypes.SqlInt16" /> 结构。</param>
      <returns vsli:raw="A &lt;see cref=&quot;T:System.Data.SqlTypes.SqlInt16&quot; /&gt; structure that contains the results of the XOR operation.">一个 <see cref="T:System.Data.SqlTypes.SqlInt16" /> 结构，它包含该“异或”运算的结果。</returns>
    </member>
    <member name="P:System.Data.SqlTypes.SqlInt16.IsNull">
      <summary vsli:raw="Indicates whether this &lt;see cref=&quot;T:System.Data.SqlTypes.SqlInt16&quot; /&gt; structure is null.">指示此 <see cref="T:System.Data.SqlTypes.SqlInt16" /> 结构是否为 null。</summary>
      <returns vsli:raw="&lt;see langword=&quot;true&quot; /&gt; if null. Otherwise, &lt;see langword=&quot;false&quot; /&gt;. For more information, see Handling Null Values.">如果为 null，则返回 <see langword="true" />。 否则为 <see langword="false" />。 有关详细信息，请参阅 处理 Null 值。</returns>
    </member>
    <member name="P:System.Data.SqlTypes.SqlInt16.Value">
      <summary vsli:raw="Gets the value of this instance of &lt;see cref=&quot;T:System.Data.SqlTypes.SqlInt16&quot; /&gt; structure. This property is read-only.">获取 <see cref="T:System.Data.SqlTypes.SqlInt16" /> 结构的此实例的值。 此属性为只读。</summary>
      <returns vsli:raw="A short integer representing the value of this &lt;see cref=&quot;T:System.Data.SqlTypes.SqlInt16&quot; /&gt; structure.">表示此 <see cref="T:System.Data.SqlTypes.SqlInt16" /> 结构的值的短整型。</returns>
    </member>
    <member name="T:System.Data.SqlTypes.SqlInt32">
      <summary vsli:raw="Represents a 32-bit signed integer to be stored in or retrieved from a database.">表示要在数据库中存储或检索的 32 位有符号整数。</summary>
    </member>
    <member name="F:System.Data.SqlTypes.SqlInt32.MaxValue">
      <summary vsli:raw="A constant representing the largest possible value of a &lt;see cref=&quot;T:System.Data.SqlTypes.SqlInt32&quot; /&gt;.">一个常数，它表示 <see cref="T:System.Data.SqlTypes.SqlInt32" /> 的最大可能值。</summary>
    </member>
    <member name="F:System.Data.SqlTypes.SqlInt32.MinValue">
      <summary vsli:raw="A constant representing the smallest possible value of a &lt;see cref=&quot;T:System.Data.SqlTypes.SqlInt32&quot; /&gt;.">一个常数，它表示 <see cref="T:System.Data.SqlTypes.SqlInt32" /> 的最小可能值。</summary>
    </member>
    <member name="F:System.Data.SqlTypes.SqlInt32.Null">
      <summary vsli:raw="Represents a &lt;see cref=&quot;T:System.DBNull&quot; /&gt; that can be assigned to this instance of the &lt;see cref=&quot;T:System.Data.SqlTypes.SqlInt32&quot; /&gt; class.">表示可指派给 <see cref="T:System.DBNull" /> 类的此实例的 <see cref="T:System.Data.SqlTypes.SqlInt32" />。</summary>
    </member>
    <member name="F:System.Data.SqlTypes.SqlInt32.Zero">
      <summary vsli:raw="Represents a zero value that can be assigned to the &lt;see cref=&quot;P:System.Data.SqlTypes.SqlInt32.Value&quot; /&gt; property of an instance of the &lt;see cref=&quot;T:System.Data.SqlTypes.SqlInt32&quot; /&gt; structure.">表示可分配给 <see cref="P:System.Data.SqlTypes.SqlInt32.Value" /> 结构实例的 <see cref="T:System.Data.SqlTypes.SqlInt32" /> 属性的零值。</summary>
    </member>
    <member name="M:System.Data.SqlTypes.SqlInt32.#ctor(System.Int32)">
      <summary vsli:raw="Initializes a new instance of the &lt;see cref=&quot;T:System.Data.SqlTypes.SqlInt32&quot; /&gt; structure using the supplied integer value.">使用提供的整数值初始化 <see cref="T:System.Data.SqlTypes.SqlInt32" /> 结构的新实例。</summary>
      <param name="value" vsli:raw="The integer to be converted.">要转换的整数。</param>
    </member>
    <member name="M:System.Data.SqlTypes.SqlInt32.Add(System.Data.SqlTypes.SqlInt32,System.Data.SqlTypes.SqlInt32)">
      <summary vsli:raw="Computes the sum of the two specified &lt;see cref=&quot;T:System.Data.SqlTypes.SqlInt32&quot; /&gt; structures.">计算两个指定的 <see cref="T:System.Data.SqlTypes.SqlInt32" /> 结构的和。</summary>
      <param name="x" vsli:raw="A &lt;see cref=&quot;T:System.Data.SqlTypes.SqlInt32&quot; /&gt; structure.">
        <see cref="T:System.Data.SqlTypes.SqlInt32" /> 结构。</param>
      <param name="y" vsli:raw="A &lt;see cref=&quot;T:System.Data.SqlTypes.SqlInt32&quot; /&gt; structure.">
        <see cref="T:System.Data.SqlTypes.SqlInt32" /> 结构。</param>
      <returns vsli:raw="A &lt;see cref=&quot;T:System.Data.SqlTypes.SqlInt32&quot; /&gt; structure whose &lt;see cref=&quot;P:System.Data.SqlTypes.SqlInt32.Value&quot; /&gt; property contains the sum of the specified &lt;see cref=&quot;T:System.Data.SqlTypes.SqlInt32&quot; /&gt; structures.">一个 <see cref="T:System.Data.SqlTypes.SqlInt32" /> 结构，它的 <see cref="P:System.Data.SqlTypes.SqlInt32.Value" /> 属性包含指定 <see cref="T:System.Data.SqlTypes.SqlInt32" /> 结构的和。</returns>
    </member>
    <member name="M:System.Data.SqlTypes.SqlInt32.BitwiseAnd(System.Data.SqlTypes.SqlInt32,System.Data.SqlTypes.SqlInt32)">
      <summary vsli:raw="Computes the bitwise AND of its &lt;see cref=&quot;T:System.Data.SqlTypes.SqlInt32&quot; /&gt; operands.">对其 <see cref="T:System.Data.SqlTypes.SqlInt32" /> 操作数执行按位 AND 运算。</summary>
      <param name="x" vsli:raw="A &lt;see cref=&quot;T:System.Data.SqlTypes.SqlInt32&quot; /&gt; structure.">
        <see cref="T:System.Data.SqlTypes.SqlInt32" /> 结构。</param>
      <param name="y" vsli:raw="A &lt;see cref=&quot;T:System.Data.SqlTypes.SqlInt32&quot; /&gt; structure.">
        <see cref="T:System.Data.SqlTypes.SqlInt32" /> 结构。</param>
      <returns vsli:raw="A &lt;see cref=&quot;T:System.Data.SqlTypes.SqlInt32&quot; /&gt; structure that contains the results of the bitwise AND operation.">一个 <see cref="T:System.Data.SqlTypes.SqlInt32" /> 结构，它包含按位“与”运算的结果。</returns>
    </member>
    <member name="M:System.Data.SqlTypes.SqlInt32.BitwiseOr(System.Data.SqlTypes.SqlInt32,System.Data.SqlTypes.SqlInt32)">
      <summary vsli:raw="Computes the bitwise OR of the specified &lt;see cref=&quot;T:System.Data.SqlTypes.SqlInt32&quot; /&gt; structures.">对指定的 <see cref="T:System.Data.SqlTypes.SqlInt32" /> 结构执行按位“或”运算。</summary>
      <param name="x" vsli:raw="A &lt;see cref=&quot;T:System.Data.SqlTypes.SqlInt32&quot; /&gt; structure.">
        <see cref="T:System.Data.SqlTypes.SqlInt32" /> 结构。</param>
      <param name="y" vsli:raw="A &lt;see cref=&quot;T:System.Data.SqlTypes.SqlInt32&quot; /&gt; structure.">
        <see cref="T:System.Data.SqlTypes.SqlInt32" /> 结构。</param>
      <returns vsli:raw="A &lt;see cref=&quot;T:System.Data.SqlTypes.SqlInt32&quot; /&gt; structure that contains the results of the bitwise OR operation.">一个 <see cref="T:System.Data.SqlTypes.SqlInt32" /> 结构，它包含按位“或”运算的结果。</returns>
    </member>
    <member name="M:System.Data.SqlTypes.SqlInt32.CompareTo(System.Data.SqlTypes.SqlInt32)">
      <summary vsli:raw="Compares this &lt;see cref=&quot;T:System.Data.SqlTypes.SqlInt32&quot; /&gt; instance to the supplied &lt;see cref=&quot;T:System.Data.SqlTypes.SqlInt32&quot; /&gt; and returns an indication of their relative values.">将此 <see cref="T:System.Data.SqlTypes.SqlInt32" /> 实例与所提供的 <see cref="T:System.Data.SqlTypes.SqlInt32" /> 进行比较，并返回二者相对值的指示值。</summary>
      <param name="value" vsli:raw="The &lt;see cref=&quot;T:System.Data.SqlTypes.SqlInt32&quot; /&gt; to be compared.">要比较的 <see cref="T:System.Data.SqlTypes.SqlInt32" />。</param>
      <returns vsli:raw="A signed number that indicates the relative values of the instance and the object.  &#xA;  &#xA; &lt;list type=&quot;table&quot;&gt;&lt;listheader&gt;&lt;term&gt; Return value&lt;/term&gt;&lt;description&gt; Condition&lt;/description&gt;&lt;/listheader&gt;&lt;item&gt;&lt;term&gt; Less than zero&lt;/term&gt;&lt;description&gt; This instance is less than the object.&lt;/description&gt;&lt;/item&gt;&lt;item&gt;&lt;term&gt; Zero&lt;/term&gt;&lt;description&gt; This instance is the same as the object.&lt;/description&gt;&lt;/item&gt;&lt;item&gt;&lt;term&gt; Greater than zero&lt;/term&gt;&lt;description&gt; This instance is greater than the object  &#xA;  &#xA; -or-  &#xA;  &#xA; The object is a null reference (&lt;see langword=&quot;Nothing&quot; /&gt; in Visual Basic)&lt;/description&gt;&lt;/item&gt;&lt;/list&gt;">一个有符号的数字，它指示该实例和对象的相对值。  
  
 <list type="table"><listheader><term> 返回值</term><description> 条件</description></listheader><item><term> 小于零</term><description> 此实例小于该对象。</description></item><item><term> 零</term><description> 此实例等于该对象。</description></item><item><term> 大于零</term><description> 此实例大于该对象 
- 或 - 
该对象是空引用（在 Visual Basic 中为 <see langword="Nothing" />）</description></item></list></returns>
    </member>
    <member name="M:System.Data.SqlTypes.SqlInt32.CompareTo(System.Object)">
      <summary vsli:raw="Compares this &lt;see cref=&quot;T:System.Data.SqlTypes.SqlInt32&quot; /&gt; instance to the supplied &lt;see cref=&quot;T:System.Object&quot; /&gt; and returns an indication of their relative values.">将此 <see cref="T:System.Data.SqlTypes.SqlInt32" /> 实例与所提供的 <see cref="T:System.Object" /> 进行比较，并返回二者相对值的指示值。</summary>
      <param name="value" vsli:raw="The &lt;see cref=&quot;T:System.Object&quot; /&gt; to be compared.">要比较的 <see cref="T:System.Object" />。</param>
      <returns vsli:raw="A signed number that indicates the relative values of the instance and the object.  &#xA;  &#xA; &lt;list type=&quot;table&quot;&gt;&lt;listheader&gt;&lt;term&gt; Return value&lt;/term&gt;&lt;description&gt; Condition&lt;/description&gt;&lt;/listheader&gt;&lt;item&gt;&lt;term&gt; Less than zero&lt;/term&gt;&lt;description&gt; This instance is less than the object.&lt;/description&gt;&lt;/item&gt;&lt;item&gt;&lt;term&gt; Zero&lt;/term&gt;&lt;description&gt; This instance is the same as the object.&lt;/description&gt;&lt;/item&gt;&lt;item&gt;&lt;term&gt; Greater than zero&lt;/term&gt;&lt;description&gt; This instance is greater than the object  &#xA;  &#xA; -or-  &#xA;  &#xA; The object is a null reference (&lt;see langword=&quot;Nothing&quot; /&gt; in Visual Basic).&lt;/description&gt;&lt;/item&gt;&lt;/list&gt;">一个有符号的数字，它指示该实例和对象的相对值。  
  
 <list type="table"><listheader><term> 返回值</term><description> 条件</description></listheader><item><term> 小于零</term><description> 此实例小于该对象。</description></item><item><term> 零</term><description> 此实例等于该对象。</description></item><item><term> 大于零</term><description> 此实例大于该对象 
- 或 - 
该对象是空引用（在 Visual Basic 中为 <see langword="Nothing" />）。</description></item></list></returns>
    </member>
    <member name="M:System.Data.SqlTypes.SqlInt32.Divide(System.Data.SqlTypes.SqlInt32,System.Data.SqlTypes.SqlInt32)">
      <summary vsli:raw="Divides the first &lt;see cref=&quot;T:System.Data.SqlTypes.SqlInt32&quot; /&gt; parameter from the second.">将第一个 <see cref="T:System.Data.SqlTypes.SqlInt32" /> 参数除以第二个参数。</summary>
      <param name="x" vsli:raw="A &lt;see cref=&quot;T:System.Data.SqlTypes.SqlInt32&quot; /&gt; structure.">
        <see cref="T:System.Data.SqlTypes.SqlInt32" /> 结构。</param>
      <param name="y" vsli:raw="A &lt;see cref=&quot;T:System.Data.SqlTypes.SqlInt32&quot; /&gt; structure.">
        <see cref="T:System.Data.SqlTypes.SqlInt32" /> 结构。</param>
      <returns vsli:raw="A &lt;see cref=&quot;T:System.Data.SqlTypes.SqlInt32&quot; /&gt; whose &lt;see cref=&quot;P:System.Data.SqlTypes.SqlInt32.Value&quot; /&gt; property contains the results of the division.">一个 <see cref="T:System.Data.SqlTypes.SqlInt32" />，它的 <see cref="P:System.Data.SqlTypes.SqlInt32.Value" /> 属性包含该除法运算的结果。</returns>
    </member>
    <member name="M:System.Data.SqlTypes.SqlInt32.Equals(System.Data.SqlTypes.SqlInt32,System.Data.SqlTypes.SqlInt32)">
      <summary vsli:raw="Performs a logical comparison of the two &lt;see cref=&quot;T:System.Data.SqlTypes.SqlInt32&quot; /&gt; parameters to determine whether they are equal.">对两个 <see cref="T:System.Data.SqlTypes.SqlInt32" /> 参数执行逻辑比较，以确定它们是否相等。</summary>
      <param name="x" vsli:raw="A &lt;see cref=&quot;T:System.Data.SqlTypes.SqlInt32&quot; /&gt; structure.">
        <see cref="T:System.Data.SqlTypes.SqlInt32" /> 结构。</param>
      <param name="y" vsli:raw="A &lt;see cref=&quot;T:System.Data.SqlTypes.SqlInt32&quot; /&gt; structure.">
        <see cref="T:System.Data.SqlTypes.SqlInt32" /> 结构。</param>
      <returns vsli:raw="&lt;see langword=&quot;true&quot; /&gt; if the two values are equal. Otherwise, &lt;see langword=&quot;false&quot; /&gt;. If either instance is null, then the &lt;see langword=&quot;SqlInt32&quot; /&gt; will be null.">如果两个值相等，则为 <see langword="true" />。 否则为 <see langword="false" />。 如果任一实例为 null，则 <see langword="SqlInt32" /> 将为 null。</returns>
    </member>
    <member name="M:System.Data.SqlTypes.SqlInt32.Equals(System.Object)">
      <summary vsli:raw="Compares the supplied object parameter to the &lt;see cref=&quot;P:System.Data.SqlTypes.SqlInt32.Value&quot; /&gt; property of the &lt;see cref=&quot;T:System.Data.SqlTypes.SqlInt32&quot; /&gt; object.">将提供的对象参数与 <see cref="P:System.Data.SqlTypes.SqlInt32.Value" /> 对象的 <see cref="T:System.Data.SqlTypes.SqlInt32" /> 属性进行比较。</summary>
      <param name="value" vsli:raw="The object to be compared.">要比较的对象。</param>
      <returns vsli:raw="&lt;see langword=&quot;true&quot; /&gt; if object is an instance of &lt;see cref=&quot;T:System.Data.SqlTypes.SqlInt32&quot; /&gt; and the two are equal; otherwise &lt;see langword=&quot;false&quot; /&gt;.">如果对象是 <see cref="T:System.Data.SqlTypes.SqlInt32" /> 的实例并且两者相等，则为 <see langword="true" />；否则为 <see langword="false" />。</returns>
    </member>
    <member name="M:System.Data.SqlTypes.SqlInt32.GetHashCode">
      <summary vsli:raw="Returns the hash code for this instance.">返回此实例的哈希代码。</summary>
      <returns vsli:raw="A 32-bit signed integer hash code.">32 位有符号整数哈希代码。</returns>
    </member>
    <member name="M:System.Data.SqlTypes.SqlInt32.GetXsdType(System.Xml.Schema.XmlSchemaSet)">
      <summary vsli:raw="Returns the XML Schema definition language (XSD) of the specified &lt;see cref=&quot;T:System.Xml.Schema.XmlSchemaSet&quot; /&gt;.">返回指定的 <see cref="T:System.Xml.Schema.XmlSchemaSet" /> 的 XML 架构定义语言 (XSD)。</summary>
      <param name="schemaSet" vsli:raw="An &lt;see cref=&quot;T:System.Xml.Schema.XmlSchemaSet&quot; /&gt;.">
        <see cref="T:System.Xml.Schema.XmlSchemaSet" />。</param>
      <returns vsli:raw="A &lt;see langword=&quot;string&quot; /&gt; value that indicates the XSD of the specified &lt;see cref=&quot;T:System.Xml.Schema.XmlSchemaSet&quot; /&gt;.">指示指定的 <see cref="T:System.Xml.Schema.XmlSchemaSet" /> 的 XSD 的 <see langword="string" /> 值。</returns>
    </member>
    <member name="M:System.Data.SqlTypes.SqlInt32.GreaterThan(System.Data.SqlTypes.SqlInt32,System.Data.SqlTypes.SqlInt32)">
      <summary vsli:raw="Compares the two &lt;see cref=&quot;T:System.Data.SqlTypes.SqlInt32&quot; /&gt; parameters to determine whether the first is greater than the second.">对两个 <see cref="T:System.Data.SqlTypes.SqlInt32" /> 参数进行比较，以确定第一个参数是否大于第二个参数。</summary>
      <param name="x" vsli:raw="A &lt;see cref=&quot;T:System.Data.SqlTypes.SqlInt32&quot; /&gt; structure.">
        <see cref="T:System.Data.SqlTypes.SqlInt32" /> 结构。</param>
      <param name="y" vsli:raw="A &lt;see cref=&quot;T:System.Data.SqlTypes.SqlInt32&quot; /&gt; structure.">
        <see cref="T:System.Data.SqlTypes.SqlInt32" /> 结构。</param>
      <returns vsli:raw="A &lt;see cref=&quot;T:System.Data.SqlTypes.SqlBoolean&quot; /&gt; that is &lt;see cref=&quot;F:System.Data.SqlTypes.SqlBoolean.True&quot; /&gt; if the first instance is greater than the second instance. Otherwise, &lt;see cref=&quot;F:System.Data.SqlTypes.SqlBoolean.False&quot; /&gt;. If either instance of &lt;see cref=&quot;T:System.Data.SqlTypes.SqlInt32&quot; /&gt; is null, the &lt;see cref=&quot;P:System.Data.SqlTypes.SqlBoolean.Value&quot; /&gt; of the &lt;see cref=&quot;T:System.Data.SqlTypes.SqlBoolean&quot; /&gt; will be &lt;see cref=&quot;F:System.Data.SqlTypes.SqlBoolean.Null&quot; /&gt;.">一个 <see cref="T:System.Data.SqlTypes.SqlBoolean" />，如果第一个实例大于第二个实例，则它为 <see cref="F:System.Data.SqlTypes.SqlBoolean.True" />。 否则为 <see cref="F:System.Data.SqlTypes.SqlBoolean.False" />。 如果 <see cref="T:System.Data.SqlTypes.SqlInt32" /> 的任一实例为空，则 <see cref="P:System.Data.SqlTypes.SqlBoolean.Value" /> 的 <see cref="T:System.Data.SqlTypes.SqlBoolean" /> 将为 <see cref="F:System.Data.SqlTypes.SqlBoolean.Null" />。</returns>
    </member>
    <member name="M:System.Data.SqlTypes.SqlInt32.GreaterThanOrEqual(System.Data.SqlTypes.SqlInt32,System.Data.SqlTypes.SqlInt32)">
      <summary vsli:raw="Compares the two &lt;see cref=&quot;T:System.Data.SqlTypes.SqlInt32&quot; /&gt; parameters to determine whether the first is greater than or equal to the second.">对两个 <see cref="T:System.Data.SqlTypes.SqlInt32" /> 参数进行比较，以确定第一个参数是否大于或等于第二个参数。</summary>
      <param name="x" vsli:raw="A &lt;see cref=&quot;T:System.Data.SqlTypes.SqlInt32&quot; /&gt; structure.">
        <see cref="T:System.Data.SqlTypes.SqlInt32" /> 结构。</param>
      <param name="y" vsli:raw="A &lt;see cref=&quot;T:System.Data.SqlTypes.SqlInt32&quot; /&gt; structure.">
        <see cref="T:System.Data.SqlTypes.SqlInt32" /> 结构。</param>
      <returns vsli:raw="A &lt;see cref=&quot;T:System.Data.SqlTypes.SqlBoolean&quot; /&gt; that is &lt;see cref=&quot;F:System.Data.SqlTypes.SqlBoolean.True&quot; /&gt; if the first instance is greater than or equal to the second instance. Otherwise, &lt;see cref=&quot;F:System.Data.SqlTypes.SqlBoolean.False&quot; /&gt;. If either instance of &lt;see cref=&quot;T:System.Data.SqlTypes.SqlInt32&quot; /&gt; is null, the &lt;see cref=&quot;P:System.Data.SqlTypes.SqlBoolean.Value&quot; /&gt; of the &lt;see cref=&quot;T:System.Data.SqlTypes.SqlBoolean&quot; /&gt; will be &lt;see cref=&quot;F:System.Data.SqlTypes.SqlBoolean.Null&quot; /&gt;.">一个 <see cref="T:System.Data.SqlTypes.SqlBoolean" />，如果第一个实例大于或等于第二个实例，则为 <see cref="F:System.Data.SqlTypes.SqlBoolean.True" />。 否则为 <see cref="F:System.Data.SqlTypes.SqlBoolean.False" />。 如果 <see cref="T:System.Data.SqlTypes.SqlInt32" /> 的任一实例为空，则 <see cref="P:System.Data.SqlTypes.SqlBoolean.Value" /> 的 <see cref="T:System.Data.SqlTypes.SqlBoolean" /> 将为 <see cref="F:System.Data.SqlTypes.SqlBoolean.Null" />。</returns>
    </member>
    <member name="M:System.Data.SqlTypes.SqlInt32.LessThan(System.Data.SqlTypes.SqlInt32,System.Data.SqlTypes.SqlInt32)">
      <summary vsli:raw="Compares the two &lt;see cref=&quot;T:System.Data.SqlTypes.SqlInt32&quot; /&gt; parameters to determine whether the first is less than the second.">对两个 <see cref="T:System.Data.SqlTypes.SqlInt32" /> 参数进行比较，以确定第一个参数是否小于第二个参数。</summary>
      <param name="x" vsli:raw="A &lt;see cref=&quot;T:System.Data.SqlTypes.SqlInt32&quot; /&gt; structure.">
        <see cref="T:System.Data.SqlTypes.SqlInt32" /> 结构。</param>
      <param name="y" vsli:raw="A &lt;see cref=&quot;T:System.Data.SqlTypes.SqlInt32&quot; /&gt; structure.">
        <see cref="T:System.Data.SqlTypes.SqlInt32" /> 结构。</param>
      <returns vsli:raw="A &lt;see cref=&quot;T:System.Data.SqlTypes.SqlBoolean&quot; /&gt; that is &lt;see cref=&quot;F:System.Data.SqlTypes.SqlBoolean.True&quot; /&gt; if the first instance is less than the second instance. Otherwise, &lt;see cref=&quot;F:System.Data.SqlTypes.SqlBoolean.False&quot; /&gt;. If either instance of &lt;see cref=&quot;T:System.Data.SqlTypes.SqlInt32&quot; /&gt; is null, the &lt;see cref=&quot;P:System.Data.SqlTypes.SqlBoolean.Value&quot; /&gt; of the &lt;see cref=&quot;T:System.Data.SqlTypes.SqlBoolean&quot; /&gt; will be &lt;see cref=&quot;F:System.Data.SqlTypes.SqlBoolean.Null&quot; /&gt;.">一个 <see cref="T:System.Data.SqlTypes.SqlBoolean" />，如果第一个实例小于第二个实例，则它为 <see cref="F:System.Data.SqlTypes.SqlBoolean.True" />。 否则为 <see cref="F:System.Data.SqlTypes.SqlBoolean.False" />。 如果 <see cref="T:System.Data.SqlTypes.SqlInt32" /> 的任一实例为空，则 <see cref="P:System.Data.SqlTypes.SqlBoolean.Value" /> 的 <see cref="T:System.Data.SqlTypes.SqlBoolean" /> 将为 <see cref="F:System.Data.SqlTypes.SqlBoolean.Null" />。</returns>
    </member>
    <member name="M:System.Data.SqlTypes.SqlInt32.LessThanOrEqual(System.Data.SqlTypes.SqlInt32,System.Data.SqlTypes.SqlInt32)">
      <summary vsli:raw="Compares the two &lt;see cref=&quot;T:System.Data.SqlTypes.SqlInt32&quot; /&gt; parameters to determine whether the first is less than or equal to the second.">对两个 <see cref="T:System.Data.SqlTypes.SqlInt32" /> 参数进行比较，以确定第一个参数是否小于或等于第二个参数。</summary>
      <param name="x" vsli:raw="A &lt;see cref=&quot;T:System.Data.SqlTypes.SqlInt32&quot; /&gt; structure.">
        <see cref="T:System.Data.SqlTypes.SqlInt32" /> 结构。</param>
      <param name="y" vsli:raw="A &lt;see cref=&quot;T:System.Data.SqlTypes.SqlInt32&quot; /&gt; structure.">
        <see cref="T:System.Data.SqlTypes.SqlInt32" /> 结构。</param>
      <returns vsli:raw="A &lt;see cref=&quot;T:System.Data.SqlTypes.SqlBoolean&quot; /&gt; that is &lt;see cref=&quot;F:System.Data.SqlTypes.SqlBoolean.True&quot; /&gt; if the first instance is less than or equal to the second instance. Otherwise, &lt;see cref=&quot;F:System.Data.SqlTypes.SqlBoolean.False&quot; /&gt;. If either instance of &lt;see cref=&quot;T:System.Data.SqlTypes.SqlInt32&quot; /&gt; is null, the &lt;see cref=&quot;P:System.Data.SqlTypes.SqlBoolean.Value&quot; /&gt; of the &lt;see cref=&quot;T:System.Data.SqlTypes.SqlBoolean&quot; /&gt; will be &lt;see cref=&quot;F:System.Data.SqlTypes.SqlBoolean.Null&quot; /&gt;.">一个 <see cref="T:System.Data.SqlTypes.SqlBoolean" />，如果第一个实例小于或等于第二个实例，则它为 <see cref="F:System.Data.SqlTypes.SqlBoolean.True" />。 否则为 <see cref="F:System.Data.SqlTypes.SqlBoolean.False" />。 如果 <see cref="T:System.Data.SqlTypes.SqlInt32" /> 的任一实例为空，则 <see cref="P:System.Data.SqlTypes.SqlBoolean.Value" /> 的 <see cref="T:System.Data.SqlTypes.SqlBoolean" /> 将为 <see cref="F:System.Data.SqlTypes.SqlBoolean.Null" />。</returns>
    </member>
    <member name="M:System.Data.SqlTypes.SqlInt32.Mod(System.Data.SqlTypes.SqlInt32,System.Data.SqlTypes.SqlInt32)">
      <summary vsli:raw="Computes the remainder after dividing the first &lt;see cref=&quot;T:System.Data.SqlTypes.SqlInt32&quot; /&gt; parameter by the second.">计算将第一个 <see cref="T:System.Data.SqlTypes.SqlInt32" /> 参数除以第二个参数后所得的余数。</summary>
      <param name="x" vsli:raw="A &lt;see cref=&quot;T:System.Data.SqlTypes.SqlInt32&quot; /&gt; structure.">
        <see cref="T:System.Data.SqlTypes.SqlInt32" /> 结构。</param>
      <param name="y" vsli:raw="A &lt;see cref=&quot;T:System.Data.SqlTypes.SqlInt32&quot; /&gt; structure.">
        <see cref="T:System.Data.SqlTypes.SqlInt32" /> 结构。</param>
      <returns vsli:raw="A &lt;see cref=&quot;T:System.Data.SqlTypes.SqlInt32&quot; /&gt; structure whose &lt;see cref=&quot;P:System.Data.SqlTypes.SqlInt32.Value&quot; /&gt; contains the remainder.">一个 <see cref="T:System.Data.SqlTypes.SqlInt32" /> 结构，它的 <see cref="P:System.Data.SqlTypes.SqlInt32.Value" /> 包含该余数。</returns>
    </member>
    <member name="M:System.Data.SqlTypes.SqlInt32.Modulus(System.Data.SqlTypes.SqlInt32,System.Data.SqlTypes.SqlInt32)">
      <summary vsli:raw="Divides two &lt;see cref=&quot;T:System.Data.SqlTypes.SqlInt32&quot; /&gt; values and returns the remainder.">将两个 <see cref="T:System.Data.SqlTypes.SqlInt32" /> 值相除，并返回余数。</summary>
      <param name="x" vsli:raw="A &lt;see cref=&quot;T:System.Data.SqlTypes.SqlInt32&quot; /&gt; value.">一个 <see cref="T:System.Data.SqlTypes.SqlInt32" /> 值。</param>
      <param name="y" vsli:raw="A &lt;see cref=&quot;T:System.Data.SqlTypes.SqlInt32&quot; /&gt; value.">一个 <see cref="T:System.Data.SqlTypes.SqlInt32" /> 值。</param>
      <returns vsli:raw="The remainder left after division is performed on &lt;paramref name=&quot;x&quot; /&gt; and &lt;paramref name=&quot;y&quot; /&gt;.">对 <paramref name="x" /> 和 <paramref name="y" /> 执行除法运算后得到的余数。</returns>
    </member>
    <member name="M:System.Data.SqlTypes.SqlInt32.Multiply(System.Data.SqlTypes.SqlInt32,System.Data.SqlTypes.SqlInt32)">
      <summary vsli:raw="Computes the product of the two &lt;see cref=&quot;T:System.Data.SqlTypes.SqlInt32&quot; /&gt; parameters.">计算两个 <see cref="T:System.Data.SqlTypes.SqlInt32" /> 参数的乘积。</summary>
      <param name="x" vsli:raw="A &lt;see cref=&quot;T:System.Data.SqlTypes.SqlInt32&quot; /&gt; structure.">
        <see cref="T:System.Data.SqlTypes.SqlInt32" /> 结构。</param>
      <param name="y" vsli:raw="A &lt;see cref=&quot;T:System.Data.SqlTypes.SqlInt32&quot; /&gt; structure.">
        <see cref="T:System.Data.SqlTypes.SqlInt32" /> 结构。</param>
      <returns vsli:raw="A &lt;see cref=&quot;T:System.Data.SqlTypes.SqlInt32&quot; /&gt; structure whose &lt;see cref=&quot;P:System.Data.SqlTypes.SqlInt32.Value&quot; /&gt; contains the product of the two parameters.">一个 <see cref="T:System.Data.SqlTypes.SqlInt32" /> 结构，它的 <see cref="P:System.Data.SqlTypes.SqlInt32.Value" /> 包含两个参数的乘积。</returns>
    </member>
    <member name="M:System.Data.SqlTypes.SqlInt32.NotEquals(System.Data.SqlTypes.SqlInt32,System.Data.SqlTypes.SqlInt32)">
      <summary vsli:raw="Performs a logical comparison of the two &lt;see cref=&quot;T:System.Data.SqlTypes.SqlInt32&quot; /&gt; parameters to determine whether they are not equal.">对两个 <see cref="T:System.Data.SqlTypes.SqlInt32" /> 参数执行逻辑比较，确定它们是否不相等。</summary>
      <param name="x" vsli:raw="A &lt;see cref=&quot;T:System.Data.SqlTypes.SqlInt32&quot; /&gt; structure.">
        <see cref="T:System.Data.SqlTypes.SqlInt32" /> 结构。</param>
      <param name="y" vsli:raw="A &lt;see cref=&quot;T:System.Data.SqlTypes.SqlInt32&quot; /&gt; structure.">
        <see cref="T:System.Data.SqlTypes.SqlInt32" /> 结构。</param>
      <returns vsli:raw="A &lt;see cref=&quot;T:System.Data.SqlTypes.SqlBoolean&quot; /&gt; that is &lt;see cref=&quot;F:System.Data.SqlTypes.SqlBoolean.True&quot; /&gt; if the two instances are not equal or &lt;see cref=&quot;F:System.Data.SqlTypes.SqlBoolean.False&quot; /&gt; if the two instances are equal. If either instance of &lt;see cref=&quot;T:System.Data.SqlTypes.SqlInt32&quot; /&gt; is null, the &lt;see cref=&quot;P:System.Data.SqlTypes.SqlBoolean.Value&quot; /&gt; of the &lt;see cref=&quot;T:System.Data.SqlTypes.SqlBoolean&quot; /&gt; will be &lt;see cref=&quot;F:System.Data.SqlTypes.SqlBoolean.Null&quot; /&gt;.">一个 <see cref="T:System.Data.SqlTypes.SqlBoolean" />，它在两个实例不等时为 <see cref="F:System.Data.SqlTypes.SqlBoolean.True" />，在两个实例相等时为 <see cref="F:System.Data.SqlTypes.SqlBoolean.False" />。 如果 <see cref="T:System.Data.SqlTypes.SqlInt32" /> 的任一实例为空，则 <see cref="P:System.Data.SqlTypes.SqlBoolean.Value" /> 的 <see cref="T:System.Data.SqlTypes.SqlBoolean" /> 将为 <see cref="F:System.Data.SqlTypes.SqlBoolean.Null" />。</returns>
    </member>
    <member name="M:System.Data.SqlTypes.SqlInt32.OnesComplement(System.Data.SqlTypes.SqlInt32)">
      <summary vsli:raw="Performs a bitwise one's complement operation on the specified &lt;see cref=&quot;T:System.Data.SqlTypes.SqlInt32&quot; /&gt; structure.">对指定的 <see cref="T:System.Data.SqlTypes.SqlInt32" /> 结构执行按位二进制反码运算。</summary>
      <param name="x" vsli:raw="A &lt;see cref=&quot;T:System.Data.SqlTypes.SqlInt32&quot; /&gt; structure.">
        <see cref="T:System.Data.SqlTypes.SqlInt32" /> 结构。</param>
      <returns vsli:raw="A &lt;see cref=&quot;T:System.Data.SqlTypes.SqlInt32&quot; /&gt; structure that contains the results of the one's complement operation.">一个 <see cref="T:System.Data.SqlTypes.SqlInt32" /> 结构，它包含二进制求补运算的结果。</returns>
    </member>
    <member name="M:System.Data.SqlTypes.SqlInt32.op_Addition(System.Data.SqlTypes.SqlInt32,System.Data.SqlTypes.SqlInt32)">
      <summary vsli:raw="Computes the sum of the two specified &lt;see cref=&quot;T:System.Data.SqlTypes.SqlInt32&quot; /&gt; structures.">计算两个指定的 <see cref="T:System.Data.SqlTypes.SqlInt32" /> 结构的和。</summary>
      <param name="x" vsli:raw="A &lt;see cref=&quot;T:System.Data.SqlTypes.SqlInt32&quot; /&gt; structure.">
        <see cref="T:System.Data.SqlTypes.SqlInt32" /> 结构。</param>
      <param name="y" vsli:raw="A &lt;see cref=&quot;T:System.Data.SqlTypes.SqlInt32&quot; /&gt; structure.">
        <see cref="T:System.Data.SqlTypes.SqlInt32" /> 结构。</param>
      <returns vsli:raw="A &lt;see cref=&quot;T:System.Data.SqlTypes.SqlInt32&quot; /&gt; structure whose &lt;see cref=&quot;P:System.Data.SqlTypes.SqlInt32.Value&quot; /&gt; property contains the sum of the specified &lt;see cref=&quot;T:System.Data.SqlTypes.SqlInt32&quot; /&gt; structures.">一个 <see cref="T:System.Data.SqlTypes.SqlInt32" /> 结构，它的 <see cref="P:System.Data.SqlTypes.SqlInt32.Value" /> 属性包含指定 <see cref="T:System.Data.SqlTypes.SqlInt32" /> 结构的和。</returns>
    </member>
    <member name="M:System.Data.SqlTypes.SqlInt32.op_BitwiseAnd(System.Data.SqlTypes.SqlInt32,System.Data.SqlTypes.SqlInt32)">
      <summary vsli:raw="Computes the bitwise AND of its &lt;see cref=&quot;T:System.Data.SqlTypes.SqlInt32&quot; /&gt; operands.">对其 <see cref="T:System.Data.SqlTypes.SqlInt32" /> 操作数执行按位 AND 运算。</summary>
      <param name="x" vsli:raw="A &lt;see cref=&quot;T:System.Data.SqlTypes.SqlInt32&quot; /&gt; structure.">
        <see cref="T:System.Data.SqlTypes.SqlInt32" /> 结构。</param>
      <param name="y" vsli:raw="A &lt;see cref=&quot;T:System.Data.SqlTypes.SqlInt32&quot; /&gt; structure.">
        <see cref="T:System.Data.SqlTypes.SqlInt32" /> 结构。</param>
      <returns vsli:raw="A &lt;see cref=&quot;T:System.Data.SqlTypes.SqlInt32&quot; /&gt; structure that contains the results of the bitwise AND operation.">一个 <see cref="T:System.Data.SqlTypes.SqlInt32" /> 结构，它包含按位“与”运算的结果。</returns>
    </member>
    <member name="M:System.Data.SqlTypes.SqlInt32.op_BitwiseOr(System.Data.SqlTypes.SqlInt32,System.Data.SqlTypes.SqlInt32)">
      <summary vsli:raw="Computes the bitwise OR of the specified &lt;see cref=&quot;T:System.Data.SqlTypes.SqlInt32&quot; /&gt; structures.">对指定的 <see cref="T:System.Data.SqlTypes.SqlInt32" /> 结构执行按位“或”运算。</summary>
      <param name="x" vsli:raw="A &lt;see cref=&quot;T:System.Data.SqlTypes.SqlInt32&quot; /&gt; structure.">
        <see cref="T:System.Data.SqlTypes.SqlInt32" /> 结构。</param>
      <param name="y" vsli:raw="A &lt;see cref=&quot;T:System.Data.SqlTypes.SqlInt32&quot; /&gt; structure.">
        <see cref="T:System.Data.SqlTypes.SqlInt32" /> 结构。</param>
      <returns vsli:raw="A &lt;see cref=&quot;T:System.Data.SqlTypes.SqlInt32&quot; /&gt; structure that contains the results of the bitwise OR operation.">一个 <see cref="T:System.Data.SqlTypes.SqlInt32" /> 结构，它包含按位“或”运算的结果。</returns>
    </member>
    <member name="M:System.Data.SqlTypes.SqlInt32.op_Division(System.Data.SqlTypes.SqlInt32,System.Data.SqlTypes.SqlInt32)">
      <summary vsli:raw="Divides the first &lt;see cref=&quot;T:System.Data.SqlTypes.SqlInt32&quot; /&gt; parameter from the second.">将第一个 <see cref="T:System.Data.SqlTypes.SqlInt32" /> 参数除以第二个参数。</summary>
      <param name="x" vsli:raw="A &lt;see cref=&quot;T:System.Data.SqlTypes.SqlInt32&quot; /&gt; structure.">
        <see cref="T:System.Data.SqlTypes.SqlInt32" /> 结构。</param>
      <param name="y" vsli:raw="A &lt;see cref=&quot;T:System.Data.SqlTypes.SqlInt32&quot; /&gt; structure.">
        <see cref="T:System.Data.SqlTypes.SqlInt32" /> 结构。</param>
      <returns vsli:raw="A &lt;see cref=&quot;T:System.Data.SqlTypes.SqlInt32&quot; /&gt; whose &lt;see cref=&quot;P:System.Data.SqlTypes.SqlInt32.Value&quot; /&gt; property contains the results of the division.">一个 <see cref="T:System.Data.SqlTypes.SqlInt32" />，它的 <see cref="P:System.Data.SqlTypes.SqlInt32.Value" /> 属性包含该除法运算的结果。</returns>
    </member>
    <member name="M:System.Data.SqlTypes.SqlInt32.op_Equality(System.Data.SqlTypes.SqlInt32,System.Data.SqlTypes.SqlInt32)">
      <summary vsli:raw="Performs a logical comparison of the two &lt;see cref=&quot;T:System.Data.SqlTypes.SqlInt32&quot; /&gt; parameters to determine whether they are equal.">对两个 <see cref="T:System.Data.SqlTypes.SqlInt32" /> 参数执行逻辑比较，以确定它们是否相等。</summary>
      <param name="x" vsli:raw="A &lt;see cref=&quot;T:System.Data.SqlTypes.SqlInt32&quot; /&gt; structure.">
        <see cref="T:System.Data.SqlTypes.SqlInt32" /> 结构。</param>
      <param name="y" vsli:raw="A &lt;see cref=&quot;T:System.Data.SqlTypes.SqlInt32&quot; /&gt; structure.">
        <see cref="T:System.Data.SqlTypes.SqlInt32" /> 结构。</param>
      <returns vsli:raw="A &lt;see cref=&quot;T:System.Data.SqlTypes.SqlBoolean&quot; /&gt; that is &lt;see cref=&quot;F:System.Data.SqlTypes.SqlBoolean.True&quot; /&gt; if the two instances are equal or &lt;see cref=&quot;F:System.Data.SqlTypes.SqlBoolean.False&quot; /&gt; if the two instances are not equal. If either instance of &lt;see cref=&quot;T:System.Data.SqlTypes.SqlInt32&quot; /&gt; is null, the &lt;see cref=&quot;P:System.Data.SqlTypes.SqlBoolean.Value&quot; /&gt; of the &lt;see cref=&quot;T:System.Data.SqlTypes.SqlBoolean&quot; /&gt; will be &lt;see cref=&quot;F:System.Data.SqlTypes.SqlBoolean.Null&quot; /&gt;.">一个 <see cref="T:System.Data.SqlTypes.SqlBoolean" />，它在两个实例相等时为 <see cref="F:System.Data.SqlTypes.SqlBoolean.True" />，在两个实例不等时为 <see cref="F:System.Data.SqlTypes.SqlBoolean.False" />。 如果 <see cref="T:System.Data.SqlTypes.SqlInt32" /> 的任一实例为空，则 <see cref="P:System.Data.SqlTypes.SqlBoolean.Value" /> 的 <see cref="T:System.Data.SqlTypes.SqlBoolean" /> 将为 <see cref="F:System.Data.SqlTypes.SqlBoolean.Null" />。</returns>
    </member>
    <member name="M:System.Data.SqlTypes.SqlInt32.op_ExclusiveOr(System.Data.SqlTypes.SqlInt32,System.Data.SqlTypes.SqlInt32)">
      <summary vsli:raw="Performs a bitwise exclusive-OR operation on the specified &lt;see cref=&quot;T:System.Data.SqlTypes.SqlInt32&quot; /&gt; structures.">对指定的 <see cref="T:System.Data.SqlTypes.SqlInt32" /> 结构执行按位“异或”运算。</summary>
      <param name="x" vsli:raw="A &lt;see cref=&quot;T:System.Data.SqlTypes.SqlInt32&quot; /&gt; structure.">
        <see cref="T:System.Data.SqlTypes.SqlInt32" /> 结构。</param>
      <param name="y" vsli:raw="A &lt;see cref=&quot;T:System.Data.SqlTypes.SqlInt32&quot; /&gt; structure.">
        <see cref="T:System.Data.SqlTypes.SqlInt32" /> 结构。</param>
      <returns vsli:raw="A &lt;see cref=&quot;T:System.Data.SqlTypes.SqlInt32&quot; /&gt; structure that contains the results of the bitwise XOR operation.">一个 <see cref="T:System.Data.SqlTypes.SqlInt32" /> 结构，它包含按位“异或”运算的结果。</returns>
    </member>
    <member name="M:System.Data.SqlTypes.SqlInt32.op_Explicit(System.Data.SqlTypes.SqlBoolean)~System.Data.SqlTypes.SqlInt32">
      <summary vsli:raw="Converts the supplied &lt;see cref=&quot;T:System.Data.SqlTypes.SqlBoolean&quot; /&gt; to &lt;see cref=&quot;T:System.Data.SqlTypes.SqlInt32&quot; /&gt;.">将提供的 <see cref="T:System.Data.SqlTypes.SqlBoolean" /> 转换为 <see cref="T:System.Data.SqlTypes.SqlInt32" />。</summary>
      <param name="x" vsli:raw="A &lt;see cref=&quot;T:System.Data.SqlTypes.SqlBoolean&quot; /&gt; structure.">
        <see cref="T:System.Data.SqlTypes.SqlBoolean" /> 结构。</param>
      <returns vsli:raw="A new &lt;see cref=&quot;T:System.Data.SqlTypes.SqlInt32&quot; /&gt; structure whose &lt;see cref=&quot;P:System.Data.SqlTypes.SqlInt32.Value&quot; /&gt; property is equal to the &lt;see cref=&quot;P:System.Data.SqlTypes.SqlBoolean.ByteValue&quot; /&gt; property of the &lt;see cref=&quot;T:System.Data.SqlTypes.SqlBoolean&quot; /&gt; parameter.">一个新的 <see cref="T:System.Data.SqlTypes.SqlInt32" /> 结构，它的 <see cref="P:System.Data.SqlTypes.SqlInt32.Value" /> 属性等于 <see cref="P:System.Data.SqlTypes.SqlBoolean.ByteValue" /> 参数的 <see cref="T:System.Data.SqlTypes.SqlBoolean" /> 属性。</returns>
    </member>
    <member name="M:System.Data.SqlTypes.SqlInt32.op_Explicit(System.Data.SqlTypes.SqlDecimal)~System.Data.SqlTypes.SqlInt32">
      <summary vsli:raw="Converts the supplied &lt;see cref=&quot;T:System.Data.SqlTypes.SqlDecimal&quot; /&gt; structure to &lt;see cref=&quot;T:System.Data.SqlTypes.SqlInt32&quot; /&gt;.">将提供的 <see cref="T:System.Data.SqlTypes.SqlDecimal" /> 结构转换为 <see cref="T:System.Data.SqlTypes.SqlInt32" />。</summary>
      <param name="x" vsli:raw="A &lt;see cref=&quot;T:System.Data.SqlTypes.SqlDecimal&quot; /&gt; structure.">
        <see cref="T:System.Data.SqlTypes.SqlDecimal" /> 结构。</param>
      <returns vsli:raw="A new &lt;see cref=&quot;T:System.Data.SqlTypes.SqlInt32&quot; /&gt; structure whose &lt;see cref=&quot;P:System.Data.SqlTypes.SqlInt32.Value&quot; /&gt; property equals the &lt;see cref=&quot;P:System.Data.SqlTypes.SqlDecimal.Value&quot; /&gt; property of the &lt;see cref=&quot;T:System.Data.SqlTypes.SqlDecimal&quot; /&gt; parameter.">一个新的 <see cref="T:System.Data.SqlTypes.SqlInt32" /> 结构，它的 <see cref="P:System.Data.SqlTypes.SqlInt32.Value" /> 属性等于 <see cref="P:System.Data.SqlTypes.SqlDecimal.Value" /> 参数的 <see cref="T:System.Data.SqlTypes.SqlDecimal" /> 属性。</returns>
    </member>
    <member name="M:System.Data.SqlTypes.SqlInt32.op_Explicit(System.Data.SqlTypes.SqlDouble)~System.Data.SqlTypes.SqlInt32">
      <summary vsli:raw="Converts the supplied &lt;see cref=&quot;T:System.Data.SqlTypes.SqlDouble&quot; /&gt; to &lt;see cref=&quot;T:System.Data.SqlTypes.SqlInt32&quot; /&gt;.">将提供的 <see cref="T:System.Data.SqlTypes.SqlDouble" /> 转换为 <see cref="T:System.Data.SqlTypes.SqlInt32" />。</summary>
      <param name="x" vsli:raw="A &lt;see cref=&quot;T:System.Data.SqlTypes.SqlDouble&quot; /&gt; structure.">
        <see cref="T:System.Data.SqlTypes.SqlDouble" /> 结构。</param>
      <returns vsli:raw="A new &lt;see cref=&quot;T:System.Data.SqlTypes.SqlInt32&quot; /&gt; structure whose &lt;see cref=&quot;P:System.Data.SqlTypes.SqlInt32.Value&quot; /&gt; property equals the integer part of the &lt;see cref=&quot;T:System.Data.SqlTypes.SqlDouble&quot; /&gt; parameter.">一个新的 <see cref="T:System.Data.SqlTypes.SqlInt32" /> 结构，它的 <see cref="P:System.Data.SqlTypes.SqlInt32.Value" /> 属性等于 <see cref="T:System.Data.SqlTypes.SqlDouble" /> 参数的整数部分。</returns>
    </member>
    <member name="M:System.Data.SqlTypes.SqlInt32.op_Explicit(System.Data.SqlTypes.SqlInt32)~System.Int32">
      <summary vsli:raw="Converts the supplied &lt;see cref=&quot;T:System.Data.SqlTypes.SqlInt32&quot; /&gt; structure to an integer.">将提供的 <see cref="T:System.Data.SqlTypes.SqlInt32" /> 结构转换为整数。</summary>
      <param name="x" vsli:raw="A &lt;see cref=&quot;T:System.Data.SqlTypes.SqlInt32&quot; /&gt; structure.">
        <see cref="T:System.Data.SqlTypes.SqlInt32" /> 结构。</param>
      <returns vsli:raw="The converted integer value.">已转换的整数值。</returns>
    </member>
    <member name="M:System.Data.SqlTypes.SqlInt32.op_Explicit(System.Data.SqlTypes.SqlInt64)~System.Data.SqlTypes.SqlInt32">
      <summary vsli:raw="Converts the supplied &lt;see cref=&quot;T:System.Data.SqlTypes.SqlInt64&quot; /&gt; to &lt;see cref=&quot;T:System.Data.SqlTypes.SqlInt32&quot; /&gt;.">将提供的 <see cref="T:System.Data.SqlTypes.SqlInt64" /> 转换为 <see cref="T:System.Data.SqlTypes.SqlInt32" />。</summary>
      <param name="x" vsli:raw="A &lt;see cref=&quot;T:System.Data.SqlTypes.SqlInt64&quot; /&gt; structure.">
        <see cref="T:System.Data.SqlTypes.SqlInt64" /> 结构。</param>
      <returns vsli:raw="A new &lt;see cref=&quot;T:System.Data.SqlTypes.SqlInt32&quot; /&gt; structure whose &lt;see cref=&quot;P:System.Data.SqlTypes.SqlInt32.Value&quot; /&gt; property equals the &lt;see cref=&quot;P:System.Data.SqlTypes.SqlInt64.Value&quot; /&gt; property of the &lt;see langword=&quot;SqlInt64&quot; /&gt; parameter.">一个新的 <see cref="T:System.Data.SqlTypes.SqlInt32" /> 结构，它的 <see cref="P:System.Data.SqlTypes.SqlInt32.Value" /> 属性等于 <see cref="P:System.Data.SqlTypes.SqlInt64.Value" /> 参数的 <see langword="SqlInt64" /> 属性。</returns>
    </member>
    <member name="M:System.Data.SqlTypes.SqlInt32.op_Explicit(System.Data.SqlTypes.SqlMoney)~System.Data.SqlTypes.SqlInt32">
      <summary vsli:raw="Converts the supplied &lt;see cref=&quot;T:System.Data.SqlTypes.SqlMoney&quot; /&gt; structure to &lt;see cref=&quot;T:System.Data.SqlTypes.SqlInt32&quot; /&gt;.">将提供的 <see cref="T:System.Data.SqlTypes.SqlMoney" /> 结构转换为 <see cref="T:System.Data.SqlTypes.SqlInt32" />。</summary>
      <param name="x" vsli:raw="A &lt;see cref=&quot;T:System.Data.SqlTypes.SqlMoney&quot; /&gt; structure.">
        <see cref="T:System.Data.SqlTypes.SqlMoney" /> 结构。</param>
      <returns vsli:raw="A new &lt;see cref=&quot;T:System.Data.SqlTypes.SqlInt32&quot; /&gt; structure whose &lt;see cref=&quot;P:System.Data.SqlTypes.SqlInt32.Value&quot; /&gt; property equals the &lt;see cref=&quot;P:System.Data.SqlTypes.SqlMoney.Value&quot; /&gt; property of the &lt;see cref=&quot;T:System.Data.SqlTypes.SqlMoney&quot; /&gt; parameter.">一个新的 <see cref="T:System.Data.SqlTypes.SqlInt32" /> 结构，它的 <see cref="P:System.Data.SqlTypes.SqlInt32.Value" /> 属性等于 <see cref="P:System.Data.SqlTypes.SqlMoney.Value" /> 参数的 <see cref="T:System.Data.SqlTypes.SqlMoney" /> 属性。</returns>
    </member>
    <member name="M:System.Data.SqlTypes.SqlInt32.op_Explicit(System.Data.SqlTypes.SqlSingle)~System.Data.SqlTypes.SqlInt32">
      <summary vsli:raw="Converts the supplied &lt;see cref=&quot;T:System.Data.SqlTypes.SqlSingle&quot; /&gt; to &lt;see cref=&quot;T:System.Data.SqlTypes.SqlInt32&quot; /&gt;.">将提供的 <see cref="T:System.Data.SqlTypes.SqlSingle" /> 转换为 <see cref="T:System.Data.SqlTypes.SqlInt32" />。</summary>
      <param name="x" vsli:raw="A &lt;see cref=&quot;T:System.Data.SqlTypes.SqlSingle&quot; /&gt; structure.">
        <see cref="T:System.Data.SqlTypes.SqlSingle" /> 结构。</param>
      <returns vsli:raw="A new &lt;see cref=&quot;T:System.Data.SqlTypes.SqlInt32&quot; /&gt; structure whose &lt;see cref=&quot;P:System.Data.SqlTypes.SqlInt32.Value&quot; /&gt; property equals the integer part of the &lt;see cref=&quot;T:System.Data.SqlTypes.SqlSingle&quot; /&gt; parameter.">一个新的 <see cref="T:System.Data.SqlTypes.SqlInt32" /> 结构，它的 <see cref="P:System.Data.SqlTypes.SqlInt32.Value" /> 属性等于 <see cref="T:System.Data.SqlTypes.SqlSingle" /> 参数的整数部分。</returns>
    </member>
    <member name="M:System.Data.SqlTypes.SqlInt32.op_Explicit(System.Data.SqlTypes.SqlString)~System.Data.SqlTypes.SqlInt32">
      <summary vsli:raw="Converts the supplied &lt;see cref=&quot;T:System.Data.SqlTypes.SqlString&quot; /&gt; object to &lt;see cref=&quot;T:System.Data.SqlTypes.SqlInt32&quot; /&gt;.">将提供的 <see cref="T:System.Data.SqlTypes.SqlString" /> 对象转换为 <see cref="T:System.Data.SqlTypes.SqlInt32" />。</summary>
      <param name="x" vsli:raw="A &lt;see cref=&quot;T:System.Data.SqlTypes.SqlString&quot; /&gt; object.">
        <see cref="T:System.Data.SqlTypes.SqlString" /> 对象。</param>
      <returns vsli:raw="A new &lt;see cref=&quot;T:System.Data.SqlTypes.SqlInt32&quot; /&gt; structure whose &lt;see cref=&quot;P:System.Data.SqlTypes.SqlInt32.Value&quot; /&gt; property equals the value represented by the &lt;see cref=&quot;T:System.Data.SqlTypes.SqlString&quot; /&gt; parameter.">一个新的 <see cref="T:System.Data.SqlTypes.SqlInt32" /> 结构，它的 <see cref="P:System.Data.SqlTypes.SqlInt32.Value" /> 属性等于 <see cref="T:System.Data.SqlTypes.SqlString" /> 参数表示的值。</returns>
    </member>
    <member name="M:System.Data.SqlTypes.SqlInt32.op_GreaterThan(System.Data.SqlTypes.SqlInt32,System.Data.SqlTypes.SqlInt32)">
      <summary vsli:raw="Compares the two &lt;see cref=&quot;T:System.Data.SqlTypes.SqlInt32&quot; /&gt; parameters to determine whether the first is greater than the second.">对两个 <see cref="T:System.Data.SqlTypes.SqlInt32" /> 参数进行比较，以确定第一个参数是否大于第二个参数。</summary>
      <param name="x" vsli:raw="A &lt;see cref=&quot;T:System.Data.SqlTypes.SqlInt32&quot; /&gt; structure.">
        <see cref="T:System.Data.SqlTypes.SqlInt32" /> 结构。</param>
      <param name="y" vsli:raw="A &lt;see cref=&quot;T:System.Data.SqlTypes.SqlInt32&quot; /&gt; structure.">
        <see cref="T:System.Data.SqlTypes.SqlInt32" /> 结构。</param>
      <returns vsli:raw="A &lt;see cref=&quot;T:System.Data.SqlTypes.SqlBoolean&quot; /&gt; that is &lt;see cref=&quot;F:System.Data.SqlTypes.SqlBoolean.True&quot; /&gt; if the first instance is greater than the second instance. Otherwise, &lt;see cref=&quot;F:System.Data.SqlTypes.SqlBoolean.False&quot; /&gt;. If either instance of &lt;see cref=&quot;T:System.Data.SqlTypes.SqlInt32&quot; /&gt; is null, the &lt;see cref=&quot;P:System.Data.SqlTypes.SqlBoolean.Value&quot; /&gt; of the &lt;see cref=&quot;T:System.Data.SqlTypes.SqlBoolean&quot; /&gt; will be &lt;see cref=&quot;F:System.Data.SqlTypes.SqlBoolean.Null&quot; /&gt;.">一个 <see cref="T:System.Data.SqlTypes.SqlBoolean" />，如果第一个实例大于第二个实例，则它为 <see cref="F:System.Data.SqlTypes.SqlBoolean.True" />。 否则为 <see cref="F:System.Data.SqlTypes.SqlBoolean.False" />。 如果 <see cref="T:System.Data.SqlTypes.SqlInt32" /> 的任一实例为空，则 <see cref="P:System.Data.SqlTypes.SqlBoolean.Value" /> 的 <see cref="T:System.Data.SqlTypes.SqlBoolean" /> 将为 <see cref="F:System.Data.SqlTypes.SqlBoolean.Null" />。</returns>
    </member>
    <member name="M:System.Data.SqlTypes.SqlInt32.op_GreaterThanOrEqual(System.Data.SqlTypes.SqlInt32,System.Data.SqlTypes.SqlInt32)">
      <summary vsli:raw="Compares the two &lt;see cref=&quot;T:System.Data.SqlTypes.SqlInt32&quot; /&gt; parameters to determine whether the first is greater than or equal to the second.">对两个 <see cref="T:System.Data.SqlTypes.SqlInt32" /> 参数进行比较，以确定第一个参数是否大于或等于第二个参数。</summary>
      <param name="x" vsli:raw="A &lt;see cref=&quot;T:System.Data.SqlTypes.SqlInt32&quot; /&gt; structure.">
        <see cref="T:System.Data.SqlTypes.SqlInt32" /> 结构。</param>
      <param name="y" vsli:raw="A &lt;see cref=&quot;T:System.Data.SqlTypes.SqlInt32&quot; /&gt; structure.">
        <see cref="T:System.Data.SqlTypes.SqlInt32" /> 结构。</param>
      <returns vsli:raw="A &lt;see cref=&quot;T:System.Data.SqlTypes.SqlBoolean&quot; /&gt; that is &lt;see cref=&quot;F:System.Data.SqlTypes.SqlBoolean.True&quot; /&gt; if the first instance is greater than or equal to the second instance. Otherwise, &lt;see cref=&quot;F:System.Data.SqlTypes.SqlBoolean.False&quot; /&gt;. If either instance of &lt;see cref=&quot;T:System.Data.SqlTypes.SqlInt32&quot; /&gt; is null, the &lt;see cref=&quot;P:System.Data.SqlTypes.SqlBoolean.Value&quot; /&gt; of the &lt;see cref=&quot;T:System.Data.SqlTypes.SqlBoolean&quot; /&gt; will be &lt;see cref=&quot;F:System.Data.SqlTypes.SqlBoolean.Null&quot; /&gt;.">一个 <see cref="T:System.Data.SqlTypes.SqlBoolean" />，如果第一个实例大于或等于第二个实例，则为 <see cref="F:System.Data.SqlTypes.SqlBoolean.True" />。 否则为 <see cref="F:System.Data.SqlTypes.SqlBoolean.False" />。 如果 <see cref="T:System.Data.SqlTypes.SqlInt32" /> 的任一实例为空，则 <see cref="P:System.Data.SqlTypes.SqlBoolean.Value" /> 的 <see cref="T:System.Data.SqlTypes.SqlBoolean" /> 将为 <see cref="F:System.Data.SqlTypes.SqlBoolean.Null" />。</returns>
    </member>
    <member name="M:System.Data.SqlTypes.SqlInt32.op_Implicit(System.Data.SqlTypes.SqlByte)~System.Data.SqlTypes.SqlInt32">
      <summary vsli:raw="Converts the supplied &lt;see cref=&quot;T:System.Data.SqlTypes.SqlByte&quot; /&gt; property to &lt;see cref=&quot;T:System.Data.SqlTypes.SqlInt32&quot; /&gt;.">将提供的 <see cref="T:System.Data.SqlTypes.SqlByte" /> 属性转换为 <see cref="T:System.Data.SqlTypes.SqlInt32" />。</summary>
      <param name="x" vsli:raw="A &lt;see cref=&quot;T:System.Data.SqlTypes.SqlByte&quot; /&gt; structure.">
        <see cref="T:System.Data.SqlTypes.SqlByte" /> 结构。</param>
      <returns vsli:raw="A new &lt;see cref=&quot;T:System.Data.SqlTypes.SqlInt32&quot; /&gt; structure whose &lt;see cref=&quot;P:System.Data.SqlTypes.SqlInt32.Value&quot; /&gt; property equals the &lt;see cref=&quot;P:System.Data.SqlTypes.SqlByte.Value&quot; /&gt; property of the &lt;see cref=&quot;T:System.Data.SqlTypes.SqlByte&quot; /&gt; parameter.">一个新的 <see cref="T:System.Data.SqlTypes.SqlInt32" /> 结构，它的 <see cref="P:System.Data.SqlTypes.SqlInt32.Value" /> 属性等于 <see cref="P:System.Data.SqlTypes.SqlByte.Value" /> 参数的 <see cref="T:System.Data.SqlTypes.SqlByte" /> 属性。</returns>
    </member>
    <member name="M:System.Data.SqlTypes.SqlInt32.op_Implicit(System.Data.SqlTypes.SqlInt16)~System.Data.SqlTypes.SqlInt32">
      <summary vsli:raw="Converts the supplied &lt;see cref=&quot;T:System.Data.SqlTypes.SqlInt16&quot; /&gt; to &lt;see cref=&quot;T:System.Data.SqlTypes.SqlInt32&quot; /&gt;.">将提供的 <see cref="T:System.Data.SqlTypes.SqlInt16" /> 转换为 <see cref="T:System.Data.SqlTypes.SqlInt32" />。</summary>
      <param name="x" vsli:raw="A &lt;see cref=&quot;T:System.Data.SqlTypes.SqlInt16&quot; /&gt; structure.">
        <see cref="T:System.Data.SqlTypes.SqlInt16" /> 结构。</param>
      <returns vsli:raw="A new &lt;see cref=&quot;T:System.Data.SqlTypes.SqlInt32&quot; /&gt; structure whose &lt;see cref=&quot;P:System.Data.SqlTypes.SqlInt32.Value&quot; /&gt; property equals the &lt;see cref=&quot;P:System.Data.SqlTypes.SqlInt16.Value&quot; /&gt; property of the &lt;see cref=&quot;T:System.Data.SqlTypes.SqlInt16&quot; /&gt; parameter.">一个新的 <see cref="T:System.Data.SqlTypes.SqlInt32" /> 结构，它的 <see cref="P:System.Data.SqlTypes.SqlInt32.Value" /> 属性等于 <see cref="P:System.Data.SqlTypes.SqlInt16.Value" /> 参数的 <see cref="T:System.Data.SqlTypes.SqlInt16" /> 属性。</returns>
    </member>
    <member name="M:System.Data.SqlTypes.SqlInt32.op_Implicit(System.Int32)~System.Data.SqlTypes.SqlInt32">
      <summary vsli:raw="Converts the supplied integer to &lt;see cref=&quot;T:System.Data.SqlTypes.SqlInt32&quot; /&gt;.">将提供的 <see cref="T:System.Data.SqlTypes.SqlInt32" /> 转换为整数。</summary>
      <param name="x" vsli:raw="An integer value.">一个整数值。</param>
      <returns vsli:raw="A new &lt;see cref=&quot;T:System.Data.SqlTypes.SqlInt32&quot; /&gt; structure whose Value property is equal to the integer parameter.">一个新的 <see cref="T:System.Data.SqlTypes.SqlInt32" /> 结构，其 Value 属性等于整数参数。</returns>
    </member>
    <member name="M:System.Data.SqlTypes.SqlInt32.op_Inequality(System.Data.SqlTypes.SqlInt32,System.Data.SqlTypes.SqlInt32)">
      <summary vsli:raw="Performs a logical comparison of the two &lt;see cref=&quot;T:System.Data.SqlTypes.SqlInt32&quot; /&gt; parameters to determine whether they are not equal.">对两个 <see cref="T:System.Data.SqlTypes.SqlInt32" /> 参数执行逻辑比较，确定它们是否不相等。</summary>
      <param name="x" vsli:raw="A &lt;see cref=&quot;T:System.Data.SqlTypes.SqlInt32&quot; /&gt; structure.">
        <see cref="T:System.Data.SqlTypes.SqlInt32" /> 结构。</param>
      <param name="y" vsli:raw="A &lt;see cref=&quot;T:System.Data.SqlTypes.SqlInt32&quot; /&gt; structure.">
        <see cref="T:System.Data.SqlTypes.SqlInt32" /> 结构。</param>
      <returns vsli:raw="A &lt;see cref=&quot;T:System.Data.SqlTypes.SqlBoolean&quot; /&gt; that is &lt;see cref=&quot;F:System.Data.SqlTypes.SqlBoolean.True&quot; /&gt; if the two instances are not equal or &lt;see cref=&quot;F:System.Data.SqlTypes.SqlBoolean.False&quot; /&gt; if the two instances are equal. If either instance of &lt;see cref=&quot;T:System.Data.SqlTypes.SqlInt32&quot; /&gt; is null, the &lt;see cref=&quot;P:System.Data.SqlTypes.SqlBoolean.Value&quot; /&gt; of the &lt;see cref=&quot;T:System.Data.SqlTypes.SqlBoolean&quot; /&gt; will be &lt;see cref=&quot;F:System.Data.SqlTypes.SqlBoolean.Null&quot; /&gt;.">一个 <see cref="T:System.Data.SqlTypes.SqlBoolean" />，它在两个实例不等时为 <see cref="F:System.Data.SqlTypes.SqlBoolean.True" />，在两个实例相等时为 <see cref="F:System.Data.SqlTypes.SqlBoolean.False" />。 如果 <see cref="T:System.Data.SqlTypes.SqlInt32" /> 的任一实例为空，则 <see cref="P:System.Data.SqlTypes.SqlBoolean.Value" /> 的 <see cref="T:System.Data.SqlTypes.SqlBoolean" /> 将为 <see cref="F:System.Data.SqlTypes.SqlBoolean.Null" />。</returns>
    </member>
    <member name="M:System.Data.SqlTypes.SqlInt32.op_LessThan(System.Data.SqlTypes.SqlInt32,System.Data.SqlTypes.SqlInt32)">
      <summary vsli:raw="Compares the two &lt;see cref=&quot;T:System.Data.SqlTypes.SqlInt32&quot; /&gt; parameters to determine whether the first is less than the second.">对两个 <see cref="T:System.Data.SqlTypes.SqlInt32" /> 参数进行比较，以确定第一个参数是否小于第二个参数。</summary>
      <param name="x" vsli:raw="A &lt;see cref=&quot;T:System.Data.SqlTypes.SqlInt32&quot; /&gt; structure.">
        <see cref="T:System.Data.SqlTypes.SqlInt32" /> 结构。</param>
      <param name="y" vsli:raw="A &lt;see cref=&quot;T:System.Data.SqlTypes.SqlInt32&quot; /&gt; structure.">
        <see cref="T:System.Data.SqlTypes.SqlInt32" /> 结构。</param>
      <returns vsli:raw="A &lt;see cref=&quot;T:System.Data.SqlTypes.SqlBoolean&quot; /&gt; that is &lt;see cref=&quot;F:System.Data.SqlTypes.SqlBoolean.True&quot; /&gt; if the first instance is less than the second instance. Otherwise, &lt;see cref=&quot;F:System.Data.SqlTypes.SqlBoolean.False&quot; /&gt;. If either instance of &lt;see cref=&quot;T:System.Data.SqlTypes.SqlInt32&quot; /&gt; is null, the &lt;see cref=&quot;P:System.Data.SqlTypes.SqlBoolean.Value&quot; /&gt; of the &lt;see cref=&quot;T:System.Data.SqlTypes.SqlBoolean&quot; /&gt; will be &lt;see cref=&quot;F:System.Data.SqlTypes.SqlBoolean.Null&quot; /&gt;.">一个 <see cref="T:System.Data.SqlTypes.SqlBoolean" />，如果第一个实例小于第二个实例，则它为 <see cref="F:System.Data.SqlTypes.SqlBoolean.True" />。 否则为 <see cref="F:System.Data.SqlTypes.SqlBoolean.False" />。 如果 <see cref="T:System.Data.SqlTypes.SqlInt32" /> 的任一实例为空，则 <see cref="P:System.Data.SqlTypes.SqlBoolean.Value" /> 的 <see cref="T:System.Data.SqlTypes.SqlBoolean" /> 将为 <see cref="F:System.Data.SqlTypes.SqlBoolean.Null" />。</returns>
    </member>
    <member name="M:System.Data.SqlTypes.SqlInt32.op_LessThanOrEqual(System.Data.SqlTypes.SqlInt32,System.Data.SqlTypes.SqlInt32)">
      <summary vsli:raw="Compares the two &lt;see cref=&quot;T:System.Data.SqlTypes.SqlInt32&quot; /&gt; parameters to determine whether the first is less than or equal to the second.">对两个 <see cref="T:System.Data.SqlTypes.SqlInt32" /> 参数进行比较，以确定第一个参数是否小于或等于第二个参数。</summary>
      <param name="x" vsli:raw="A &lt;see cref=&quot;T:System.Data.SqlTypes.SqlInt32&quot; /&gt; structure.">
        <see cref="T:System.Data.SqlTypes.SqlInt32" /> 结构。</param>
      <param name="y" vsli:raw="A &lt;see cref=&quot;T:System.Data.SqlTypes.SqlInt32&quot; /&gt; structure.">
        <see cref="T:System.Data.SqlTypes.SqlInt32" /> 结构。</param>
      <returns vsli:raw="A &lt;see cref=&quot;T:System.Data.SqlTypes.SqlBoolean&quot; /&gt; that is &lt;see cref=&quot;F:System.Data.SqlTypes.SqlBoolean.True&quot; /&gt; if the first instance is less than or equal to the second instance. Otherwise, &lt;see cref=&quot;F:System.Data.SqlTypes.SqlBoolean.False&quot; /&gt;. If either instance of &lt;see cref=&quot;T:System.Data.SqlTypes.SqlInt32&quot; /&gt; is null, the &lt;see cref=&quot;P:System.Data.SqlTypes.SqlBoolean.Value&quot; /&gt; of the &lt;see cref=&quot;T:System.Data.SqlTypes.SqlBoolean&quot; /&gt; will be &lt;see cref=&quot;F:System.Data.SqlTypes.SqlBoolean.Null&quot; /&gt;.">一个 <see cref="T:System.Data.SqlTypes.SqlBoolean" />，如果第一个实例小于或等于第二个实例，则它为 <see cref="F:System.Data.SqlTypes.SqlBoolean.True" />。 否则为 <see cref="F:System.Data.SqlTypes.SqlBoolean.False" />。 如果 <see cref="T:System.Data.SqlTypes.SqlInt32" /> 的任一实例为空，则 <see cref="P:System.Data.SqlTypes.SqlBoolean.Value" /> 的 <see cref="T:System.Data.SqlTypes.SqlBoolean" /> 将为 <see cref="F:System.Data.SqlTypes.SqlBoolean.Null" />。</returns>
    </member>
    <member name="M:System.Data.SqlTypes.SqlInt32.op_Modulus(System.Data.SqlTypes.SqlInt32,System.Data.SqlTypes.SqlInt32)">
      <summary vsli:raw="Computes the remainder after dividing the first &lt;see cref=&quot;T:System.Data.SqlTypes.SqlInt32&quot; /&gt; parameter by the second.">计算将第一个 <see cref="T:System.Data.SqlTypes.SqlInt32" /> 参数除以第二个参数后所得的余数。</summary>
      <param name="x" vsli:raw="A &lt;see cref=&quot;T:System.Data.SqlTypes.SqlInt32&quot; /&gt; structure.">
        <see cref="T:System.Data.SqlTypes.SqlInt32" /> 结构。</param>
      <param name="y" vsli:raw="A &lt;see cref=&quot;T:System.Data.SqlTypes.SqlInt32&quot; /&gt; structure.">
        <see cref="T:System.Data.SqlTypes.SqlInt32" /> 结构。</param>
      <returns vsli:raw="A &lt;see cref=&quot;T:System.Data.SqlTypes.SqlInt32&quot; /&gt; structure whose &lt;see cref=&quot;P:System.Data.SqlTypes.SqlInt32.Value&quot; /&gt; contains the remainder.">一个 <see cref="T:System.Data.SqlTypes.SqlInt32" /> 结构，它的 <see cref="P:System.Data.SqlTypes.SqlInt32.Value" /> 包含该余数。</returns>
    </member>
    <member name="M:System.Data.SqlTypes.SqlInt32.op_Multiply(System.Data.SqlTypes.SqlInt32,System.Data.SqlTypes.SqlInt32)">
      <summary vsli:raw="Computes the product of the two &lt;see cref=&quot;T:System.Data.SqlTypes.SqlInt32&quot; /&gt; parameters.">计算两个 <see cref="T:System.Data.SqlTypes.SqlInt32" /> 参数的乘积。</summary>
      <param name="x" vsli:raw="A &lt;see cref=&quot;T:System.Data.SqlTypes.SqlInt32&quot; /&gt; structure.">
        <see cref="T:System.Data.SqlTypes.SqlInt32" /> 结构。</param>
      <param name="y" vsli:raw="A &lt;see cref=&quot;T:System.Data.SqlTypes.SqlInt32&quot; /&gt; structure.">
        <see cref="T:System.Data.SqlTypes.SqlInt32" /> 结构。</param>
      <returns vsli:raw="A &lt;see cref=&quot;T:System.Data.SqlTypes.SqlInt32&quot; /&gt; structure whose &lt;see cref=&quot;P:System.Data.SqlTypes.SqlInt32.Value&quot; /&gt; contains the product of the two parameters.">一个 <see cref="T:System.Data.SqlTypes.SqlInt32" /> 结构，它的 <see cref="P:System.Data.SqlTypes.SqlInt32.Value" /> 包含两个参数的乘积。</returns>
    </member>
    <member name="M:System.Data.SqlTypes.SqlInt32.op_OnesComplement(System.Data.SqlTypes.SqlInt32)">
      <summary vsli:raw="Performs a bitwise one's complement operation on the specified &lt;see cref=&quot;T:System.Data.SqlTypes.SqlInt32&quot; /&gt; structure.">对指定的 <see cref="T:System.Data.SqlTypes.SqlInt32" /> 结构执行按位二进制反码运算。</summary>
      <param name="x" vsli:raw="A &lt;see cref=&quot;T:System.Data.SqlTypes.SqlInt32&quot; /&gt; structure.">
        <see cref="T:System.Data.SqlTypes.SqlInt32" /> 结构。</param>
      <returns vsli:raw="A &lt;see cref=&quot;T:System.Data.SqlTypes.SqlInt32&quot; /&gt; structure that contains the results of the one's complement operation.">一个 <see cref="T:System.Data.SqlTypes.SqlInt32" /> 结构，它包含二进制求补运算的结果。</returns>
    </member>
    <member name="M:System.Data.SqlTypes.SqlInt32.op_Subtraction(System.Data.SqlTypes.SqlInt32,System.Data.SqlTypes.SqlInt32)">
      <summary vsli:raw="Subtracts the second &lt;see cref=&quot;T:System.Data.SqlTypes.SqlInt32&quot; /&gt; parameter from the first.">从第一个 <see cref="T:System.Data.SqlTypes.SqlInt32" /> 参数中减去第二个参数。</summary>
      <param name="x" vsli:raw="A &lt;see cref=&quot;T:System.Data.SqlTypes.SqlInt32&quot; /&gt; structure.">
        <see cref="T:System.Data.SqlTypes.SqlInt32" /> 结构。</param>
      <param name="y" vsli:raw="A &lt;see cref=&quot;T:System.Data.SqlTypes.SqlInt32&quot; /&gt; structure.">
        <see cref="T:System.Data.SqlTypes.SqlInt32" /> 结构。</param>
      <returns vsli:raw="A &lt;see cref=&quot;T:System.Data.SqlTypes.SqlInt32&quot; /&gt; structure whose &lt;see cref=&quot;P:System.Data.SqlTypes.SqlInt32.Value&quot; /&gt; property contains the results of the subtraction.">一个 <see cref="T:System.Data.SqlTypes.SqlInt32" /> 结构，它的 <see cref="P:System.Data.SqlTypes.SqlInt32.Value" /> 属性包含该减法运算的结果。</returns>
    </member>
    <member name="M:System.Data.SqlTypes.SqlInt32.op_UnaryNegation(System.Data.SqlTypes.SqlInt32)">
      <summary vsli:raw="Negates the &lt;see cref=&quot;P:System.Data.SqlTypes.SqlInt32.Value&quot; /&gt; of the &lt;see cref=&quot;T:System.Data.SqlTypes.SqlInt32&quot; /&gt; operand.">对 <see cref="P:System.Data.SqlTypes.SqlInt32.Value" /> 操作数的 <see cref="T:System.Data.SqlTypes.SqlInt32" /> 求反。</summary>
      <param name="x" vsli:raw="A &lt;see cref=&quot;T:System.Data.SqlTypes.SqlInt32&quot; /&gt; structure.">
        <see cref="T:System.Data.SqlTypes.SqlInt32" /> 结构。</param>
      <returns vsli:raw="A &lt;see cref=&quot;T:System.Data.SqlTypes.SqlInt32&quot; /&gt; structure that contains the negated value.">一个 <see cref="T:System.Data.SqlTypes.SqlInt32" /> 结构，包含求反的值。</returns>
    </member>
    <member name="M:System.Data.SqlTypes.SqlInt32.Parse(System.String)">
      <summary vsli:raw="Converts the &lt;see cref=&quot;T:System.String&quot; /&gt; representation of a number to its 32-bit signed integer equivalent.">将数字的 <see cref="T:System.String" /> 表示形式转换为它的等效 32 位有符号整数。</summary>
      <param name="s" vsli:raw="The &lt;see cref=&quot;T:System.String&quot; /&gt; to be parsed.">要分析的 <see cref="T:System.String" />。</param>
      <returns vsli:raw="A 32-bit signed integer equivalent to the value that is contained in the specified &lt;see cref=&quot;T:System.String&quot; /&gt;.">一个 32 位有符号整数，它等效于指定的 <see cref="T:System.String" /> 中包含的值。</returns>
    </member>
    <member name="M:System.Data.SqlTypes.SqlInt32.Subtract(System.Data.SqlTypes.SqlInt32,System.Data.SqlTypes.SqlInt32)">
      <summary vsli:raw="Subtracts the second &lt;see cref=&quot;T:System.Data.SqlTypes.SqlInt32&quot; /&gt; parameter from the first.">从第一个 <see cref="T:System.Data.SqlTypes.SqlInt32" /> 参数中减去第二个参数。</summary>
      <param name="x" vsli:raw="A &lt;see cref=&quot;T:System.Data.SqlTypes.SqlInt32&quot; /&gt; structure.">
        <see cref="T:System.Data.SqlTypes.SqlInt32" /> 结构。</param>
      <param name="y" vsli:raw="A &lt;see cref=&quot;T:System.Data.SqlTypes.SqlInt32&quot; /&gt; structure.">
        <see cref="T:System.Data.SqlTypes.SqlInt32" /> 结构。</param>
      <returns vsli:raw="A &lt;see cref=&quot;T:System.Data.SqlTypes.SqlInt32&quot; /&gt; structure whose &lt;see cref=&quot;P:System.Data.SqlTypes.SqlInt32.Value&quot; /&gt; property contains the results of the subtraction.">一个 <see cref="T:System.Data.SqlTypes.SqlInt32" /> 结构，它的 <see cref="P:System.Data.SqlTypes.SqlInt32.Value" /> 属性包含该减法运算的结果。</returns>
    </member>
    <member name="M:System.Data.SqlTypes.SqlInt32.System#Xml#Serialization#IXmlSerializable#GetSchema">
      <summary vsli:raw="This member supports the .NET Framework infrastructure and is not intended to be used directly from your code.">此成员支持 .NET Framework 结构，不能在代码中直接使用。</summary>
      <returns vsli:raw="An &lt;see langword=&quot;XmlSchema&quot; /&gt;.">
        <see langword="XmlSchema" />。</returns>
    </member>
    <member name="M:System.Data.SqlTypes.SqlInt32.System#Xml#Serialization#IXmlSerializable#ReadXml(System.Xml.XmlReader)">
      <summary vsli:raw="This member supports the .NET Framework infrastructure and is not intended to be used directly from your code.">此成员支持 .NET Framework 结构，不能在代码中直接使用。</summary>
      <param name="reader" vsli:raw="&lt;see langword=&quot;XmlReader&quot; /&gt;">
        <see langword="XmlReader" />
      </param>
    </member>
    <member name="M:System.Data.SqlTypes.SqlInt32.System#Xml#Serialization#IXmlSerializable#WriteXml(System.Xml.XmlWriter)">
      <summary vsli:raw="This member supports the .NET Framework infrastructure and is not intended to be used directly from your code.">此成员支持 .NET Framework 结构，不能在代码中直接使用。</summary>
      <param name="writer" vsli:raw="&lt;see langword=&quot;XmlWriter&quot; /&gt;">
        <see langword="XmlWriter" />
      </param>
    </member>
    <member name="M:System.Data.SqlTypes.SqlInt32.ToSqlBoolean">
      <summary vsli:raw="Converts this &lt;see cref=&quot;T:System.Data.SqlTypes.SqlInt32&quot; /&gt; structure to &lt;see cref=&quot;T:System.Data.SqlTypes.SqlBoolean&quot; /&gt;.">将此 <see cref="T:System.Data.SqlTypes.SqlInt32" /> 结构转换为 <see cref="T:System.Data.SqlTypes.SqlBoolean" />。</summary>
      <returns vsli:raw="&lt;see langword=&quot;true&quot; /&gt; if the &lt;see cref=&quot;P:System.Data.SqlTypes.SqlInt32.Value&quot; /&gt; is non-zero; &lt;see langword=&quot;false&quot; /&gt; if zero; otherwise Null.">如果 <see cref="P:System.Data.SqlTypes.SqlInt32.Value" /> 不是零，则为 <see langword="true" />；如果为零，则为 <see langword="false" />；否则为 Null。</returns>
    </member>
    <member name="M:System.Data.SqlTypes.SqlInt32.ToSqlByte">
      <summary vsli:raw="Converts this &lt;see cref=&quot;T:System.Data.SqlTypes.SqlInt32&quot; /&gt; structure to &lt;see cref=&quot;T:System.Data.SqlTypes.SqlByte&quot; /&gt;.">将此 <see cref="T:System.Data.SqlTypes.SqlInt32" /> 结构转换为 <see cref="T:System.Data.SqlTypes.SqlByte" />。</summary>
      <returns vsli:raw="A &lt;see cref=&quot;T:System.Data.SqlTypes.SqlByte&quot; /&gt; structure whose &lt;see langword=&quot;Value&quot; /&gt; equals the &lt;see langword=&quot;Value&quot; /&gt; of this &lt;see cref=&quot;T:System.Data.SqlTypes.SqlInt32&quot; /&gt; structure. If the value of the &lt;see langword=&quot;SqlInt32&quot; /&gt; is less than 0 or greater than 255, an &lt;see cref=&quot;T:System.OverflowException&quot; /&gt; occurs.">一个 <see cref="T:System.Data.SqlTypes.SqlByte" /> 结构，其 <see langword="Value" /> 等于此 <see cref="T:System.Data.SqlTypes.SqlInt32" /> 结构的 <see langword="Value" />。 如果 <see langword="SqlInt32" /> 的值小于 0 或大于 255，则将发生 <see cref="T:System.OverflowException" />。</returns>
    </member>
    <member name="M:System.Data.SqlTypes.SqlInt32.ToSqlDecimal">
      <summary vsli:raw="Converts this &lt;see cref=&quot;T:System.Data.SqlTypes.SqlInt32&quot; /&gt; structure to &lt;see cref=&quot;T:System.Data.SqlTypes.SqlDecimal&quot; /&gt;.">将此 <see cref="T:System.Data.SqlTypes.SqlInt32" /> 结构转换为 <see cref="T:System.Data.SqlTypes.SqlDecimal" />。</summary>
      <returns vsli:raw="A new &lt;see cref=&quot;T:System.Data.SqlTypes.SqlDecimal&quot; /&gt; structure equal to the value of this &lt;see cref=&quot;T:System.Data.SqlTypes.SqlInt32&quot; /&gt;.">新的 <see cref="T:System.Data.SqlTypes.SqlDecimal" /> 结构等于此 <see cref="T:System.Data.SqlTypes.SqlInt32" /> 的值。</returns>
    </member>
    <member name="M:System.Data.SqlTypes.SqlInt32.ToSqlDouble">
      <summary vsli:raw="Converts this &lt;see cref=&quot;T:System.Data.SqlTypes.SqlInt32&quot; /&gt; structure to &lt;see cref=&quot;T:System.Data.SqlTypes.SqlDouble&quot; /&gt;.">将此 <see cref="T:System.Data.SqlTypes.SqlInt32" /> 结构转换为 <see cref="T:System.Data.SqlTypes.SqlDouble" />。</summary>
      <returns vsli:raw="A new &lt;see cref=&quot;T:System.Data.SqlTypes.SqlDouble&quot; /&gt; structure equal to the value of this &lt;see cref=&quot;T:System.Data.SqlTypes.SqlInt32&quot; /&gt;.">新的 <see cref="T:System.Data.SqlTypes.SqlDouble" /> 结构等于此 <see cref="T:System.Data.SqlTypes.SqlInt32" /> 的值。</returns>
    </member>
    <member name="M:System.Data.SqlTypes.SqlInt32.ToSqlInt16">
      <summary vsli:raw="Converts this &lt;see cref=&quot;T:System.Data.SqlTypes.SqlInt32&quot; /&gt; structure to &lt;see cref=&quot;T:System.Data.SqlTypes.SqlInt16&quot; /&gt;.">将此 <see cref="T:System.Data.SqlTypes.SqlInt32" /> 结构转换为 <see cref="T:System.Data.SqlTypes.SqlInt16" />。</summary>
      <returns vsli:raw="A new &lt;see cref=&quot;T:System.Data.SqlTypes.SqlInt16&quot; /&gt; structure equal to the value of this &lt;see cref=&quot;T:System.Data.SqlTypes.SqlInt32&quot; /&gt;.">新的 <see cref="T:System.Data.SqlTypes.SqlInt16" /> 结构等于此 <see cref="T:System.Data.SqlTypes.SqlInt32" /> 的值。</returns>
    </member>
    <member name="M:System.Data.SqlTypes.SqlInt32.ToSqlInt64">
      <summary vsli:raw="Converts this &lt;see cref=&quot;T:System.Data.SqlTypes.SqlInt32&quot; /&gt; structure to &lt;see cref=&quot;T:System.Data.SqlTypes.SqlInt64&quot; /&gt;.">将此 <see cref="T:System.Data.SqlTypes.SqlInt32" /> 结构转换为 <see cref="T:System.Data.SqlTypes.SqlInt64" />。</summary>
      <returns vsli:raw="A new &lt;see cref=&quot;T:System.Data.SqlTypes.SqlInt64&quot; /&gt; structure equal to the value of this &lt;see cref=&quot;T:System.Data.SqlTypes.SqlInt32&quot; /&gt;.">新的 <see cref="T:System.Data.SqlTypes.SqlInt64" /> 结构等于此 <see cref="T:System.Data.SqlTypes.SqlInt32" /> 的值。</returns>
    </member>
    <member name="M:System.Data.SqlTypes.SqlInt32.ToSqlMoney">
      <summary vsli:raw="Converts this &lt;see cref=&quot;T:System.Data.SqlTypes.SqlInt32&quot; /&gt; structure to &lt;see cref=&quot;T:System.Data.SqlTypes.SqlMoney&quot; /&gt;.">将此 <see cref="T:System.Data.SqlTypes.SqlInt32" /> 结构转换为 <see cref="T:System.Data.SqlTypes.SqlMoney" />。</summary>
      <returns vsli:raw="A new &lt;see cref=&quot;T:System.Data.SqlTypes.SqlMoney&quot; /&gt; structure equal to the value of this &lt;see cref=&quot;T:System.Data.SqlTypes.SqlInt32&quot; /&gt;.">新的 <see cref="T:System.Data.SqlTypes.SqlMoney" /> 结构等于此 <see cref="T:System.Data.SqlTypes.SqlInt32" /> 的值。</returns>
    </member>
    <member name="M:System.Data.SqlTypes.SqlInt32.ToSqlSingle">
      <summary vsli:raw="Converts this &lt;see cref=&quot;T:System.Data.SqlTypes.SqlInt32&quot; /&gt; structure to &lt;see cref=&quot;T:System.Data.SqlTypes.SqlSingle&quot; /&gt;.">将此 <see cref="T:System.Data.SqlTypes.SqlInt32" /> 结构转换为 <see cref="T:System.Data.SqlTypes.SqlSingle" />。</summary>
      <returns vsli:raw="A new &lt;see cref=&quot;T:System.Data.SqlTypes.SqlSingle&quot; /&gt; structure equal to the value of this &lt;see cref=&quot;T:System.Data.SqlTypes.SqlInt32&quot; /&gt;.">新的 <see cref="T:System.Data.SqlTypes.SqlSingle" /> 结构等于此 <see cref="T:System.Data.SqlTypes.SqlInt32" /> 的值。</returns>
    </member>
    <member name="M:System.Data.SqlTypes.SqlInt32.ToSqlString">
      <summary vsli:raw="Converts this &lt;see cref=&quot;T:System.Data.SqlTypes.SqlInt32&quot; /&gt; structure to &lt;see cref=&quot;T:System.Data.SqlTypes.SqlString&quot; /&gt;.">将此 <see cref="T:System.Data.SqlTypes.SqlInt32" /> 结构转换为 <see cref="T:System.Data.SqlTypes.SqlString" />。</summary>
      <returns vsli:raw="A new &lt;see cref=&quot;T:System.Data.SqlTypes.SqlString&quot; /&gt; structure equal to the value of this &lt;see cref=&quot;T:System.Data.SqlTypes.SqlInt32&quot; /&gt;.">新的 <see cref="T:System.Data.SqlTypes.SqlString" /> 结构等于此 <see cref="T:System.Data.SqlTypes.SqlInt32" /> 的值。</returns>
    </member>
    <member name="M:System.Data.SqlTypes.SqlInt32.ToString">
      <summary vsli:raw="Converts a &lt;see cref=&quot;T:System.Data.SqlTypes.SqlInt32&quot; /&gt; structure to a &lt;see cref=&quot;T:System.String&quot; /&gt;.">将 <see cref="T:System.Data.SqlTypes.SqlInt32" /> 结构转换为 <see cref="T:System.String" />。</summary>
      <returns vsli:raw="A &lt;see cref=&quot;T:System.String&quot; /&gt; structure equal to the value of this &lt;see cref=&quot;T:System.Data.SqlTypes.SqlInt32&quot; /&gt;.">
        <see cref="T:System.String" /> 结构等于此 <see cref="T:System.Data.SqlTypes.SqlInt32" /> 的值。</returns>
    </member>
    <member name="M:System.Data.SqlTypes.SqlInt32.Xor(System.Data.SqlTypes.SqlInt32,System.Data.SqlTypes.SqlInt32)">
      <summary vsli:raw="Performs a bitwise exclusive-OR operation on the specified &lt;see cref=&quot;T:System.Data.SqlTypes.SqlInt32&quot; /&gt; structures.">对指定的 <see cref="T:System.Data.SqlTypes.SqlInt32" /> 结构执行按位“异或”运算。</summary>
      <param name="x" vsli:raw="A &lt;see cref=&quot;T:System.Data.SqlTypes.SqlInt32&quot; /&gt; structure.">
        <see cref="T:System.Data.SqlTypes.SqlInt32" /> 结构。</param>
      <param name="y" vsli:raw="A &lt;see cref=&quot;T:System.Data.SqlTypes.SqlInt32&quot; /&gt; structure.">
        <see cref="T:System.Data.SqlTypes.SqlInt32" /> 结构。</param>
      <returns vsli:raw="A &lt;see cref=&quot;T:System.Data.SqlTypes.SqlInt32&quot; /&gt; structure that contains the results of the bitwise XOR operation.">一个 <see cref="T:System.Data.SqlTypes.SqlInt32" /> 结构，它包含按位“异或”运算的结果。</returns>
    </member>
    <member name="P:System.Data.SqlTypes.SqlInt32.IsNull">
      <summary vsli:raw="Indicates whether this &lt;see cref=&quot;T:System.Data.SqlTypes.SqlInt32&quot; /&gt; structure is null.">指示此 <see cref="T:System.Data.SqlTypes.SqlInt32" /> 结构是否为 null。</summary>
      <returns vsli:raw="This property is &lt;see langword=&quot;true&quot; /&gt; if &lt;see cref=&quot;P:System.Data.SqlTypes.SqlInt32.Value&quot; /&gt; is null. Otherwise, &lt;see langword=&quot;false&quot; /&gt;.">如果 <see cref="P:System.Data.SqlTypes.SqlInt32.Value" /> 为 Null，则此属性为 <see langword="true" />。 否则为 <see langword="false" />。</returns>
    </member>
    <member name="P:System.Data.SqlTypes.SqlInt32.Value">
      <summary vsli:raw="Gets the value of this &lt;see cref=&quot;T:System.Data.SqlTypes.SqlInt32&quot; /&gt; structure. This property is read-only.">获取此 <see cref="T:System.Data.SqlTypes.SqlInt32" /> 结构的值。 此属性为只读。</summary>
      <exception cref="T:System.Data.SqlTypes.SqlNullValueException" vsli:raw="The property contains &lt;see cref=&quot;F:System.Data.SqlTypes.SqlInt32.Null&quot; /&gt;.">此属性包含 <see cref="F:System.Data.SqlTypes.SqlInt32.Null" />。</exception>
      <returns vsli:raw="An integer representing the value of this &lt;see cref=&quot;T:System.Data.SqlTypes.SqlInt32&quot; /&gt; structure.">表示此 <see cref="T:System.Data.SqlTypes.SqlInt32" /> 结构的值的整数。</returns>
    </member>
    <member name="T:System.Data.SqlTypes.SqlInt64">
      <summary vsli:raw="Represents a 64-bit signed integer to be stored in or retrieved from a database.">表示要在数据库中存储或检索的 64 位有符号整数。</summary>
    </member>
    <member name="F:System.Data.SqlTypes.SqlInt64.MaxValue">
      <summary vsli:raw="A constant representing the largest possible value for a &lt;see cref=&quot;T:System.Data.SqlTypes.SqlInt64&quot; /&gt; structure.">一个常数，表示 <see cref="T:System.Data.SqlTypes.SqlInt64" /> 结构的可能的最大值。</summary>
    </member>
    <member name="F:System.Data.SqlTypes.SqlInt64.MinValue">
      <summary vsli:raw="A constant representing the smallest possible value for a &lt;see cref=&quot;T:System.Data.SqlTypes.SqlInt64&quot; /&gt; structure.">一个常数，表示 <see cref="T:System.Data.SqlTypes.SqlInt64" /> 结构的可能的最小值。</summary>
    </member>
    <member name="F:System.Data.SqlTypes.SqlInt64.Null">
      <summary vsli:raw="Represents a &lt;see cref=&quot;T:System.DBNull&quot; /&gt; that can be assigned to this instance of the &lt;see cref=&quot;T:System.Data.SqlTypes.SqlInt64&quot; /&gt; structure.">表示可指派给 <see cref="T:System.DBNull" /> 结构的此实例的 <see cref="T:System.Data.SqlTypes.SqlInt64" />。</summary>
    </member>
    <member name="F:System.Data.SqlTypes.SqlInt64.Zero">
      <summary vsli:raw="Represents a zero value that can be assigned to the &lt;see cref=&quot;P:System.Data.SqlTypes.SqlInt64.Value&quot; /&gt; property of an instance of the &lt;see cref=&quot;T:System.Data.SqlTypes.SqlInt64&quot; /&gt; structure.">表示可分配给 <see cref="P:System.Data.SqlTypes.SqlInt64.Value" /> 结构实例的 <see cref="T:System.Data.SqlTypes.SqlInt64" /> 属性的零值。</summary>
    </member>
    <member name="M:System.Data.SqlTypes.SqlInt64.#ctor(System.Int64)">
      <summary vsli:raw="Initializes a new instance of the &lt;see cref=&quot;T:System.Data.SqlTypes.SqlInt64&quot; /&gt; structure using the supplied long integer.">使用提供的长整型初始化 <see cref="T:System.Data.SqlTypes.SqlInt64" /> 结构的新实例。</summary>
      <param name="value" vsli:raw="A long integer.">长整型。</param>
    </member>
    <member name="M:System.Data.SqlTypes.SqlInt64.Add(System.Data.SqlTypes.SqlInt64,System.Data.SqlTypes.SqlInt64)">
      <summary vsli:raw="Computes the sum of the two &lt;see cref=&quot;T:System.Data.SqlTypes.SqlInt64&quot; /&gt; parameters.">计算两个 <see cref="T:System.Data.SqlTypes.SqlInt64" /> 参数的和。</summary>
      <param name="x" vsli:raw="A &lt;see cref=&quot;T:System.Data.SqlTypes.SqlInt64&quot; /&gt; structure.">
        <see cref="T:System.Data.SqlTypes.SqlInt64" /> 结构。</param>
      <param name="y" vsli:raw="A &lt;see cref=&quot;T:System.Data.SqlTypes.SqlInt64&quot; /&gt; structure.">
        <see cref="T:System.Data.SqlTypes.SqlInt64" /> 结构。</param>
      <returns vsli:raw="A new &lt;see cref=&quot;T:System.Data.SqlTypes.SqlInt64&quot; /&gt; structure whose &lt;see cref=&quot;P:System.Data.SqlTypes.SqlInt64.Value&quot; /&gt; is equal to the sum of the two &lt;see cref=&quot;T:System.Data.SqlTypes.SqlInt64&quot; /&gt; parameters.">一个新的 <see cref="T:System.Data.SqlTypes.SqlInt64" /> 结构，它的 <see cref="P:System.Data.SqlTypes.SqlInt64.Value" /> 等于两个 <see cref="T:System.Data.SqlTypes.SqlInt64" /> 参数的和。</returns>
    </member>
    <member name="M:System.Data.SqlTypes.SqlInt64.BitwiseAnd(System.Data.SqlTypes.SqlInt64,System.Data.SqlTypes.SqlInt64)">
      <summary vsli:raw="Computes the bitwise AND of its &lt;see cref=&quot;T:System.Data.SqlTypes.SqlInt64&quot; /&gt; operands.">对其 <see cref="T:System.Data.SqlTypes.SqlInt64" /> 操作数执行按位 AND 运算。</summary>
      <param name="x" vsli:raw="A &lt;see cref=&quot;T:System.Data.SqlTypes.SqlInt64&quot; /&gt; structure.">
        <see cref="T:System.Data.SqlTypes.SqlInt64" /> 结构。</param>
      <param name="y" vsli:raw="A &lt;see cref=&quot;T:System.Data.SqlTypes.SqlInt64&quot; /&gt; structure.">
        <see cref="T:System.Data.SqlTypes.SqlInt64" /> 结构。</param>
      <returns vsli:raw="A &lt;see cref=&quot;T:System.Data.SqlTypes.SqlInt64&quot; /&gt; structure that contains the results of the bitwise AND operation.">一个 <see cref="T:System.Data.SqlTypes.SqlInt64" /> 结构，它包含按位“与”运算的结果。</returns>
    </member>
    <member name="M:System.Data.SqlTypes.SqlInt64.BitwiseOr(System.Data.SqlTypes.SqlInt64,System.Data.SqlTypes.SqlInt64)">
      <summary vsli:raw="Computes the bitwise OR of its two &lt;see cref=&quot;T:System.Data.SqlTypes.SqlInt64&quot; /&gt; operands.">对其两个 <see cref="T:System.Data.SqlTypes.SqlInt64" /> 操作数执行按位“或”计算。</summary>
      <param name="x" vsli:raw="A &lt;see cref=&quot;T:System.Data.SqlTypes.SqlInt64&quot; /&gt; structure.">
        <see cref="T:System.Data.SqlTypes.SqlInt64" /> 结构。</param>
      <param name="y" vsli:raw="A &lt;see cref=&quot;T:System.Data.SqlTypes.SqlInt64&quot; /&gt; structure.">
        <see cref="T:System.Data.SqlTypes.SqlInt64" /> 结构。</param>
      <returns vsli:raw="A &lt;see cref=&quot;T:System.Data.SqlTypes.SqlInt64&quot; /&gt; structure that contains the results of the bitwise OR operation.">一个 <see cref="T:System.Data.SqlTypes.SqlInt64" /> 结构，它包含按位“或”运算的结果。</returns>
    </member>
    <member name="M:System.Data.SqlTypes.SqlInt64.CompareTo(System.Data.SqlTypes.SqlInt64)">
      <summary vsli:raw="Compares this &lt;see cref=&quot;T:System.Data.SqlTypes.SqlInt64&quot; /&gt; instance to the supplied &lt;see cref=&quot;T:System.Data.SqlTypes.SqlInt64&quot; /&gt; and returns an indication of their relative values.">将此 <see cref="T:System.Data.SqlTypes.SqlInt64" /> 实例与所提供的 <see cref="T:System.Data.SqlTypes.SqlInt64" /> 进行比较，并返回二者相对值的指示值。</summary>
      <param name="value" vsli:raw="The &lt;see cref=&quot;T:System.Data.SqlTypes.SqlInt64&quot; /&gt; to be compared.">要比较的 <see cref="T:System.Data.SqlTypes.SqlInt64" />。</param>
      <returns vsli:raw="A signed number that indicates the relative values of the instance and the object.  &#xA;  &#xA; &lt;list type=&quot;table&quot;&gt;&lt;listheader&gt;&lt;term&gt; Return value&lt;/term&gt;&lt;description&gt; Condition&lt;/description&gt;&lt;/listheader&gt;&lt;item&gt;&lt;term&gt; Less than zero&lt;/term&gt;&lt;description&gt; This instance is less than the object.&lt;/description&gt;&lt;/item&gt;&lt;item&gt;&lt;term&gt; Zero&lt;/term&gt;&lt;description&gt; This instance is the same as the object.&lt;/description&gt;&lt;/item&gt;&lt;item&gt;&lt;term&gt; Greater than zero&lt;/term&gt;&lt;description&gt; This instance is greater than the object  &#xA;  &#xA; -or-  &#xA;  &#xA; The object is a null reference (&lt;see langword=&quot;Nothing&quot; /&gt; in Visual Basic).&lt;/description&gt;&lt;/item&gt;&lt;/list&gt;">一个有符号的数字，它指示该实例和对象的相对值。  
  
 <list type="table"><listheader><term> 返回值</term><description> 条件</description></listheader><item><term> 小于零</term><description> 此实例小于该对象。</description></item><item><term> 零</term><description> 此实例等于该对象。</description></item><item><term> 大于零</term><description> 此实例大于该对象 
- 或 - 
该对象是空引用（在 Visual Basic 中为 <see langword="Nothing" />）。</description></item></list></returns>
    </member>
    <member name="M:System.Data.SqlTypes.SqlInt64.CompareTo(System.Object)">
      <summary vsli:raw="Compares this &lt;see cref=&quot;T:System.Data.SqlTypes.SqlInt64&quot; /&gt; instance to the supplied &lt;see cref=&quot;T:System.Object&quot; /&gt; and returns an indication of their relative values.">将此 <see cref="T:System.Data.SqlTypes.SqlInt64" /> 实例与所提供的 <see cref="T:System.Object" /> 进行比较，并返回二者相对值的指示值。</summary>
      <param name="value" vsli:raw="The &lt;see cref=&quot;T:System.Object&quot; /&gt; to be compared.">要比较的 <see cref="T:System.Object" />。</param>
      <returns vsli:raw="A signed number that indicates the relative values of the instance and the object.  &#xA;  &#xA; &lt;list type=&quot;table&quot;&gt;&lt;listheader&gt;&lt;term&gt; Return value&lt;/term&gt;&lt;description&gt; Condition&lt;/description&gt;&lt;/listheader&gt;&lt;item&gt;&lt;term&gt; Less than zero&lt;/term&gt;&lt;description&gt; This instance is less than the object.&lt;/description&gt;&lt;/item&gt;&lt;item&gt;&lt;term&gt; Zero&lt;/term&gt;&lt;description&gt; This instance is the same as the object.&lt;/description&gt;&lt;/item&gt;&lt;item&gt;&lt;term&gt; Greater than zero&lt;/term&gt;&lt;description&gt; This instance is greater than the object  &#xA;  &#xA; -or-  &#xA;  &#xA; The object is a null reference (&lt;see langword=&quot;Nothing&quot; /&gt; in Visual Basic).&lt;/description&gt;&lt;/item&gt;&lt;/list&gt;">一个有符号的数字，它指示该实例和对象的相对值。  
  
 <list type="table"><listheader><term> 返回值</term><description> 条件</description></listheader><item><term> 小于零</term><description> 此实例小于该对象。</description></item><item><term> 零</term><description> 此实例等于该对象。</description></item><item><term> 大于零</term><description> 此实例大于该对象 
- 或 - 
该对象是空引用（在 Visual Basic 中为 <see langword="Nothing" />）。</description></item></list></returns>
    </member>
    <member name="M:System.Data.SqlTypes.SqlInt64.Divide(System.Data.SqlTypes.SqlInt64,System.Data.SqlTypes.SqlInt64)">
      <summary vsli:raw="Divides the first &lt;see cref=&quot;T:System.Data.SqlTypes.SqlInt64&quot; /&gt; parameter by the second.">将第一个 <see cref="T:System.Data.SqlTypes.SqlInt64" /> 参数除以第二个参数。</summary>
      <param name="x" vsli:raw="A &lt;see cref=&quot;T:System.Data.SqlTypes.SqlInt64&quot; /&gt; structure.">
        <see cref="T:System.Data.SqlTypes.SqlInt64" /> 结构。</param>
      <param name="y" vsli:raw="A &lt;see cref=&quot;T:System.Data.SqlTypes.SqlInt64&quot; /&gt; structure.">
        <see cref="T:System.Data.SqlTypes.SqlInt64" /> 结构。</param>
      <returns vsli:raw="A new &lt;see cref=&quot;T:System.Data.SqlTypes.SqlInt64&quot; /&gt; structure whose &lt;see cref=&quot;P:System.Data.SqlTypes.SqlInt64.Value&quot; /&gt; property contains the results of the division operation.">一个新的 <see cref="T:System.Data.SqlTypes.SqlInt64" /> 结构，它的 <see cref="P:System.Data.SqlTypes.SqlInt64.Value" /> 属性包含该除法运算的结果。</returns>
    </member>
    <member name="M:System.Data.SqlTypes.SqlInt64.Equals(System.Data.SqlTypes.SqlInt64,System.Data.SqlTypes.SqlInt64)">
      <summary vsli:raw="Performs a logical comparison of the two &lt;see cref=&quot;T:System.Data.SqlTypes.SqlInt64&quot; /&gt; parameters to determine whether they are equal.">对两个 <see cref="T:System.Data.SqlTypes.SqlInt64" /> 参数执行逻辑比较，以确定它们是否相等。</summary>
      <param name="x" vsli:raw="A &lt;see cref=&quot;T:System.Data.SqlTypes.SqlInt64&quot; /&gt; structure.">
        <see cref="T:System.Data.SqlTypes.SqlInt64" /> 结构。</param>
      <param name="y" vsli:raw="A &lt;see cref=&quot;T:System.Data.SqlTypes.SqlInt64&quot; /&gt; structure.">
        <see cref="T:System.Data.SqlTypes.SqlInt64" /> 结构。</param>
      <returns vsli:raw="&lt;see langword=&quot;true&quot; /&gt; if the two values are equal. Otherwise, &lt;see langword=&quot;false&quot; /&gt;. If either instance is null, then the &lt;see langword=&quot;SqlInt64&quot; /&gt; will be null.">如果两个值相等，则为 <see langword="true" />。 否则为 <see langword="false" />。 如果任一实例为 null，则 <see langword="SqlInt64" /> 将为 null。</returns>
    </member>
    <member name="M:System.Data.SqlTypes.SqlInt64.Equals(System.Object)">
      <summary vsli:raw="Compares the supplied object parameter to the &lt;see cref=&quot;P:System.Data.SqlTypes.SqlInt64.Value&quot; /&gt; property of the &lt;see cref=&quot;T:System.Data.SqlTypes.SqlInt64&quot; /&gt; object.">将提供的对象参数与 <see cref="P:System.Data.SqlTypes.SqlInt64.Value" /> 对象的 <see cref="T:System.Data.SqlTypes.SqlInt64" /> 属性进行比较。</summary>
      <param name="value" vsli:raw="The object to be compared.">要比较的对象。</param>
      <returns vsli:raw="&lt;see langword=&quot;true&quot; /&gt; if object is an instance of &lt;see cref=&quot;T:System.Data.SqlTypes.SqlInt64&quot; /&gt; and the two are equal; otherwise &lt;see langword=&quot;false&quot; /&gt;.">如果对象是 <see cref="T:System.Data.SqlTypes.SqlInt64" /> 的实例并且两者相等，则为 <see langword="true" />；否则为 <see langword="false" />。</returns>
    </member>
    <member name="M:System.Data.SqlTypes.SqlInt64.GetHashCode">
      <summary vsli:raw="Returns the hash code for this instance.">返回此实例的哈希代码。</summary>
      <returns vsli:raw="A 32-bit signed integer hash code.">32 位有符号整数哈希代码。</returns>
    </member>
    <member name="M:System.Data.SqlTypes.SqlInt64.GetXsdType(System.Xml.Schema.XmlSchemaSet)">
      <summary vsli:raw="Returns the XML Schema definition language (XSD) of the specified &lt;see cref=&quot;T:System.Xml.Schema.XmlSchemaSet&quot; /&gt;.">返回指定的 <see cref="T:System.Xml.Schema.XmlSchemaSet" /> 的 XML 架构定义语言 (XSD)。</summary>
      <param name="schemaSet" vsli:raw="An &lt;see cref=&quot;T:System.Xml.Schema.XmlSchemaSet&quot; /&gt;.">
        <see cref="T:System.Xml.Schema.XmlSchemaSet" />。</param>
      <returns vsli:raw="A &lt;see langword=&quot;string&quot; /&gt; that indicates the XSD of the specified &lt;see cref=&quot;T:System.Xml.Schema.XmlSchemaSet&quot; /&gt;.">一个指示指定的 <see cref="T:System.Xml.Schema.XmlSchemaSet" /> 的 XSD 的 <see langword="string" />。</returns>
    </member>
    <member name="M:System.Data.SqlTypes.SqlInt64.GreaterThan(System.Data.SqlTypes.SqlInt64,System.Data.SqlTypes.SqlInt64)">
      <summary vsli:raw="Performs a logical comparison of the two &lt;see cref=&quot;T:System.Data.SqlTypes.SqlInt64&quot; /&gt; parameters to determine whether the first is greater than the second.">对两个 <see cref="T:System.Data.SqlTypes.SqlInt64" /> 参数执行逻辑比较，以确定第一个参数是否大于第二个参数。</summary>
      <param name="x" vsli:raw="A &lt;see cref=&quot;T:System.Data.SqlTypes.SqlInt64&quot; /&gt; structure.">
        <see cref="T:System.Data.SqlTypes.SqlInt64" /> 结构。</param>
      <param name="y" vsli:raw="A &lt;see cref=&quot;T:System.Data.SqlTypes.SqlInt64&quot; /&gt; structure.">
        <see cref="T:System.Data.SqlTypes.SqlInt64" /> 结构。</param>
      <returns vsli:raw="A &lt;see cref=&quot;T:System.Data.SqlTypes.SqlBoolean&quot; /&gt; that is &lt;see cref=&quot;F:System.Data.SqlTypes.SqlBoolean.True&quot; /&gt; if the first instance is greater than the second instance. Otherwise, &lt;see cref=&quot;F:System.Data.SqlTypes.SqlBoolean.False&quot; /&gt;. If either instance of &lt;see cref=&quot;T:System.Data.SqlTypes.SqlInt64&quot; /&gt; is null, the &lt;see cref=&quot;P:System.Data.SqlTypes.SqlBoolean.Value&quot; /&gt; of the &lt;see cref=&quot;T:System.Data.SqlTypes.SqlBoolean&quot; /&gt; will be &lt;see cref=&quot;F:System.Data.SqlTypes.SqlBoolean.Null&quot; /&gt;.">一个 <see cref="T:System.Data.SqlTypes.SqlBoolean" />，如果第一个实例大于第二个实例，则它为 <see cref="F:System.Data.SqlTypes.SqlBoolean.True" />。 否则为 <see cref="F:System.Data.SqlTypes.SqlBoolean.False" />。 如果 <see cref="T:System.Data.SqlTypes.SqlInt64" /> 的任一实例为空，则 <see cref="P:System.Data.SqlTypes.SqlBoolean.Value" /> 的 <see cref="T:System.Data.SqlTypes.SqlBoolean" /> 将为 <see cref="F:System.Data.SqlTypes.SqlBoolean.Null" />。</returns>
    </member>
    <member name="M:System.Data.SqlTypes.SqlInt64.GreaterThanOrEqual(System.Data.SqlTypes.SqlInt64,System.Data.SqlTypes.SqlInt64)">
      <summary vsli:raw="Performs a logical comparison of the two &lt;see cref=&quot;T:System.Data.SqlTypes.SqlInt64&quot; /&gt; parameters to determine whether the first is greater than or equal to the second.">对两个 <see cref="T:System.Data.SqlTypes.SqlInt64" /> 参数执行逻辑比较，以确定第一个参数是否大于或等于第二个参数。</summary>
      <param name="x" vsli:raw="A &lt;see cref=&quot;T:System.Data.SqlTypes.SqlInt64&quot; /&gt; structure.">
        <see cref="T:System.Data.SqlTypes.SqlInt64" /> 结构。</param>
      <param name="y" vsli:raw="A &lt;see cref=&quot;T:System.Data.SqlTypes.SqlInt64&quot; /&gt; structure.">
        <see cref="T:System.Data.SqlTypes.SqlInt64" /> 结构。</param>
      <returns vsli:raw="A &lt;see cref=&quot;T:System.Data.SqlTypes.SqlBoolean&quot; /&gt; that is &lt;see cref=&quot;F:System.Data.SqlTypes.SqlBoolean.True&quot; /&gt; if the first instance is greater than or equal to the second instance. Otherwise, &lt;see cref=&quot;F:System.Data.SqlTypes.SqlBoolean.False&quot; /&gt;. If either instance of &lt;see cref=&quot;T:System.Data.SqlTypes.SqlInt64&quot; /&gt; is null, the &lt;see cref=&quot;P:System.Data.SqlTypes.SqlBoolean.Value&quot; /&gt; of the &lt;see cref=&quot;T:System.Data.SqlTypes.SqlBoolean&quot; /&gt; will be &lt;see cref=&quot;F:System.Data.SqlTypes.SqlBoolean.Null&quot; /&gt;.">一个 <see cref="T:System.Data.SqlTypes.SqlBoolean" />，如果第一个实例大于或等于第二个实例，则为 <see cref="F:System.Data.SqlTypes.SqlBoolean.True" />。 否则为 <see cref="F:System.Data.SqlTypes.SqlBoolean.False" />。 如果 <see cref="T:System.Data.SqlTypes.SqlInt64" /> 的任一实例为空，则 <see cref="P:System.Data.SqlTypes.SqlBoolean.Value" /> 的 <see cref="T:System.Data.SqlTypes.SqlBoolean" /> 将为 <see cref="F:System.Data.SqlTypes.SqlBoolean.Null" />。</returns>
    </member>
    <member name="M:System.Data.SqlTypes.SqlInt64.LessThan(System.Data.SqlTypes.SqlInt64,System.Data.SqlTypes.SqlInt64)">
      <summary vsli:raw="Performs a logical comparison on the two &lt;see cref=&quot;T:System.Data.SqlTypes.SqlInt64&quot; /&gt; parameters to determine whether the first is less than the second.">对两个 <see cref="T:System.Data.SqlTypes.SqlInt64" /> 参数执行逻辑比较，以确定第一个参数是否小于第二个参数。</summary>
      <param name="x" vsli:raw="A &lt;see cref=&quot;T:System.Data.SqlTypes.SqlInt64&quot; /&gt; structure.">
        <see cref="T:System.Data.SqlTypes.SqlInt64" /> 结构。</param>
      <param name="y" vsli:raw="A &lt;see cref=&quot;T:System.Data.SqlTypes.SqlInt64&quot; /&gt; structure.">
        <see cref="T:System.Data.SqlTypes.SqlInt64" /> 结构。</param>
      <returns vsli:raw="A &lt;see cref=&quot;T:System.Data.SqlTypes.SqlBoolean&quot; /&gt; that is &lt;see cref=&quot;F:System.Data.SqlTypes.SqlBoolean.True&quot; /&gt; if the first instance is less than the second instance. Otherwise, &lt;see cref=&quot;F:System.Data.SqlTypes.SqlBoolean.False&quot; /&gt;. If either instance of &lt;see cref=&quot;T:System.Data.SqlTypes.SqlInt64&quot; /&gt; is null, the &lt;see cref=&quot;P:System.Data.SqlTypes.SqlBoolean.Value&quot; /&gt; of the &lt;see cref=&quot;T:System.Data.SqlTypes.SqlBoolean&quot; /&gt; will be &lt;see cref=&quot;F:System.Data.SqlTypes.SqlBoolean.Null&quot; /&gt;.">一个 <see cref="T:System.Data.SqlTypes.SqlBoolean" />，如果第一个实例小于第二个实例，则它为 <see cref="F:System.Data.SqlTypes.SqlBoolean.True" />。 否则为 <see cref="F:System.Data.SqlTypes.SqlBoolean.False" />。 如果 <see cref="T:System.Data.SqlTypes.SqlInt64" /> 的任一实例为空，则 <see cref="P:System.Data.SqlTypes.SqlBoolean.Value" /> 的 <see cref="T:System.Data.SqlTypes.SqlBoolean" /> 将为 <see cref="F:System.Data.SqlTypes.SqlBoolean.Null" />。</returns>
    </member>
    <member name="M:System.Data.SqlTypes.SqlInt64.LessThanOrEqual(System.Data.SqlTypes.SqlInt64,System.Data.SqlTypes.SqlInt64)">
      <summary vsli:raw="Performs a logical comparison on the two &lt;see cref=&quot;T:System.Data.SqlTypes.SqlInt64&quot; /&gt; parameters to determine whether the first is less than or equal to the second.">对两个 <see cref="T:System.Data.SqlTypes.SqlInt64" /> 参数执行逻辑比较，以确定第一个参数是否小于或等于第二个参数。</summary>
      <param name="x" vsli:raw="A &lt;see cref=&quot;T:System.Data.SqlTypes.SqlInt64&quot; /&gt; structure.">
        <see cref="T:System.Data.SqlTypes.SqlInt64" /> 结构。</param>
      <param name="y" vsli:raw="A &lt;see cref=&quot;T:System.Data.SqlTypes.SqlInt64&quot; /&gt; structure.">
        <see cref="T:System.Data.SqlTypes.SqlInt64" /> 结构。</param>
      <returns vsli:raw="A &lt;see cref=&quot;T:System.Data.SqlTypes.SqlBoolean&quot; /&gt; that is &lt;see cref=&quot;F:System.Data.SqlTypes.SqlBoolean.True&quot; /&gt; if the first instance is less than or equal to the second instance. Otherwise, &lt;see cref=&quot;F:System.Data.SqlTypes.SqlBoolean.False&quot; /&gt;. If either instance of &lt;see cref=&quot;T:System.Data.SqlTypes.SqlInt64&quot; /&gt; is null, the &lt;see cref=&quot;P:System.Data.SqlTypes.SqlBoolean.Value&quot; /&gt; of the &lt;see cref=&quot;T:System.Data.SqlTypes.SqlBoolean&quot; /&gt; will be &lt;see cref=&quot;F:System.Data.SqlTypes.SqlBoolean.Null&quot; /&gt;.">一个 <see cref="T:System.Data.SqlTypes.SqlBoolean" />，如果第一个实例小于或等于第二个实例，则它为 <see cref="F:System.Data.SqlTypes.SqlBoolean.True" />。 否则为 <see cref="F:System.Data.SqlTypes.SqlBoolean.False" />。 如果 <see cref="T:System.Data.SqlTypes.SqlInt64" /> 的任一实例为空，则 <see cref="P:System.Data.SqlTypes.SqlBoolean.Value" /> 的 <see cref="T:System.Data.SqlTypes.SqlBoolean" /> 将为 <see cref="F:System.Data.SqlTypes.SqlBoolean.Null" />。</returns>
    </member>
    <member name="M:System.Data.SqlTypes.SqlInt64.Mod(System.Data.SqlTypes.SqlInt64,System.Data.SqlTypes.SqlInt64)">
      <summary vsli:raw="Computes the remainder after dividing the first &lt;see cref=&quot;T:System.Data.SqlTypes.SqlInt64&quot; /&gt; parameter by the second.">计算将第一个 <see cref="T:System.Data.SqlTypes.SqlInt64" /> 参数除以第二个参数后所得的余数。</summary>
      <param name="x" vsli:raw="A &lt;see cref=&quot;T:System.Data.SqlTypes.SqlInt64&quot; /&gt; structure.">
        <see cref="T:System.Data.SqlTypes.SqlInt64" /> 结构。</param>
      <param name="y" vsli:raw="A &lt;see cref=&quot;T:System.Data.SqlTypes.SqlInt64&quot; /&gt; structure.">
        <see cref="T:System.Data.SqlTypes.SqlInt64" /> 结构。</param>
      <returns vsli:raw="A new &lt;see cref=&quot;T:System.Data.SqlTypes.SqlInt64&quot; /&gt; structure whose &lt;see cref=&quot;P:System.Data.SqlTypes.SqlInt64.Value&quot; /&gt; property contains the remainder.">一个新的 <see cref="T:System.Data.SqlTypes.SqlInt64" /> 结构，它的 <see cref="P:System.Data.SqlTypes.SqlInt64.Value" /> 属性包含该余数。</returns>
    </member>
    <member name="M:System.Data.SqlTypes.SqlInt64.Modulus(System.Data.SqlTypes.SqlInt64,System.Data.SqlTypes.SqlInt64)">
      <summary vsli:raw="Divides two &lt;see cref=&quot;T:System.Data.SqlTypes.SqlInt64&quot; /&gt; values and returns the remainder.">将两个 <see cref="T:System.Data.SqlTypes.SqlInt64" /> 值相除，并返回余数。</summary>
      <param name="x" vsli:raw="A &lt;see cref=&quot;T:System.Data.SqlTypes.SqlInt64&quot; /&gt; value.">一个 <see cref="T:System.Data.SqlTypes.SqlInt64" /> 值。</param>
      <param name="y" vsli:raw="A &lt;see cref=&quot;T:System.Data.SqlTypes.SqlInt64&quot; /&gt; value.">一个 <see cref="T:System.Data.SqlTypes.SqlInt64" /> 值。</param>
      <returns vsli:raw="The remainder left after division is performed on &lt;paramref name=&quot;x&quot; /&gt; and &lt;paramref name=&quot;y&quot; /&gt;.">对 <paramref name="x" /> 和 <paramref name="y" /> 执行除法运算后得到的余数。</returns>
    </member>
    <member name="M:System.Data.SqlTypes.SqlInt64.Multiply(System.Data.SqlTypes.SqlInt64,System.Data.SqlTypes.SqlInt64)">
      <summary vsli:raw="Computes the product of the two &lt;see cref=&quot;T:System.Data.SqlTypes.SqlInt64&quot; /&gt; parameters.">计算两个 <see cref="T:System.Data.SqlTypes.SqlInt64" /> 参数的乘积。</summary>
      <param name="x" vsli:raw="A &lt;see cref=&quot;T:System.Data.SqlTypes.SqlInt64&quot; /&gt; structure.">
        <see cref="T:System.Data.SqlTypes.SqlInt64" /> 结构。</param>
      <param name="y" vsli:raw="A &lt;see cref=&quot;T:System.Data.SqlTypes.SqlInt64&quot; /&gt; structure.">
        <see cref="T:System.Data.SqlTypes.SqlInt64" /> 结构。</param>
      <returns vsli:raw="A new &lt;see cref=&quot;T:System.Data.SqlTypes.SqlInt64&quot; /&gt; structure whose &lt;see cref=&quot;P:System.Data.SqlTypes.SqlInt64.Value&quot; /&gt; is equal to the product of the two &lt;see cref=&quot;T:System.Data.SqlTypes.SqlInt64&quot; /&gt; parameters.">一个新的 <see cref="T:System.Data.SqlTypes.SqlInt64" /> 结构，它的 <see cref="P:System.Data.SqlTypes.SqlInt64.Value" /> 等于两个 <see cref="T:System.Data.SqlTypes.SqlInt64" /> 参数的乘积。</returns>
    </member>
    <member name="M:System.Data.SqlTypes.SqlInt64.NotEquals(System.Data.SqlTypes.SqlInt64,System.Data.SqlTypes.SqlInt64)">
      <summary vsli:raw="Performs a logical comparison on the two SqlInt64 parameters to determine whether they are not equal.">对两个 SqlInt64 参数执行逻辑比较，以确定它们是否相等。</summary>
      <param name="x" vsli:raw="A &lt;see cref=&quot;T:System.Data.SqlTypes.SqlInt64&quot; /&gt; structure.">
        <see cref="T:System.Data.SqlTypes.SqlInt64" /> 结构。</param>
      <param name="y" vsli:raw="A &lt;see cref=&quot;T:System.Data.SqlTypes.SqlInt64&quot; /&gt; structure.">
        <see cref="T:System.Data.SqlTypes.SqlInt64" /> 结构。</param>
      <returns vsli:raw="A &lt;see cref=&quot;T:System.Data.SqlTypes.SqlBoolean&quot; /&gt; that is &lt;see cref=&quot;F:System.Data.SqlTypes.SqlBoolean.True&quot; /&gt; if the two instances are not equal or &lt;see cref=&quot;F:System.Data.SqlTypes.SqlBoolean.False&quot; /&gt; if the two instances are equal. If either instance of &lt;see cref=&quot;T:System.Data.SqlTypes.SqlInt64&quot; /&gt; is null, the &lt;see cref=&quot;P:System.Data.SqlTypes.SqlBoolean.Value&quot; /&gt; of the &lt;see cref=&quot;T:System.Data.SqlTypes.SqlBoolean&quot; /&gt; will be &lt;see cref=&quot;F:System.Data.SqlTypes.SqlBoolean.Null&quot; /&gt;.">一个 <see cref="T:System.Data.SqlTypes.SqlBoolean" />，它在两个实例不等时为 <see cref="F:System.Data.SqlTypes.SqlBoolean.True" />，在两个实例相等时为 <see cref="F:System.Data.SqlTypes.SqlBoolean.False" />。 如果 <see cref="T:System.Data.SqlTypes.SqlInt64" /> 的任一实例为空，则 <see cref="P:System.Data.SqlTypes.SqlBoolean.Value" /> 的 <see cref="T:System.Data.SqlTypes.SqlBoolean" /> 将为 <see cref="F:System.Data.SqlTypes.SqlBoolean.Null" />。</returns>
    </member>
    <member name="M:System.Data.SqlTypes.SqlInt64.OnesComplement(System.Data.SqlTypes.SqlInt64)">
      <summary vsli:raw="Performs a bitwise one's complement operation on its &lt;see cref=&quot;T:System.Data.SqlTypes.SqlInt64&quot; /&gt; operand.">对它的 <see cref="T:System.Data.SqlTypes.SqlInt64" /> 操作数执行按位二进制反码运算。</summary>
      <param name="x" vsli:raw="A &lt;see cref=&quot;T:System.Data.SqlTypes.SqlInt64&quot; /&gt; structure.">
        <see cref="T:System.Data.SqlTypes.SqlInt64" /> 结构。</param>
      <returns vsli:raw="A new &lt;see cref=&quot;T:System.Data.SqlTypes.SqlInt64&quot; /&gt; structure whose &lt;see cref=&quot;P:System.Data.SqlTypes.SqlInt64.Value&quot; /&gt; is equal to the ones complement of the &lt;see cref=&quot;T:System.Data.SqlTypes.SqlInt64&quot; /&gt; parameter.">新的 <see cref="T:System.Data.SqlTypes.SqlInt64" /> 结构，它的 <see cref="P:System.Data.SqlTypes.SqlInt64.Value" /> 等于 <see cref="T:System.Data.SqlTypes.SqlInt64" /> 参数的二进制反码。</returns>
    </member>
    <member name="M:System.Data.SqlTypes.SqlInt64.op_Addition(System.Data.SqlTypes.SqlInt64,System.Data.SqlTypes.SqlInt64)">
      <summary vsli:raw="Computes the sum of the two &lt;see cref=&quot;T:System.Data.SqlTypes.SqlInt64&quot; /&gt; parameters.">计算两个 <see cref="T:System.Data.SqlTypes.SqlInt64" /> 参数的和。</summary>
      <param name="x" vsli:raw="A &lt;see cref=&quot;T:System.Data.SqlTypes.SqlInt64&quot; /&gt; structure.">
        <see cref="T:System.Data.SqlTypes.SqlInt64" /> 结构。</param>
      <param name="y" vsli:raw="A &lt;see cref=&quot;T:System.Data.SqlTypes.SqlInt64&quot; /&gt; structure.">
        <see cref="T:System.Data.SqlTypes.SqlInt64" /> 结构。</param>
      <returns vsli:raw="A new &lt;see cref=&quot;T:System.Data.SqlTypes.SqlInt64&quot; /&gt; structure whose &lt;see cref=&quot;P:System.Data.SqlTypes.SqlInt64.Value&quot; /&gt; is equal to the sum of the two &lt;see cref=&quot;T:System.Data.SqlTypes.SqlInt64&quot; /&gt; parameters.">一个新的 <see cref="T:System.Data.SqlTypes.SqlInt64" /> 结构，它的 <see cref="P:System.Data.SqlTypes.SqlInt64.Value" /> 等于两个 <see cref="T:System.Data.SqlTypes.SqlInt64" /> 参数的和。</returns>
    </member>
    <member name="M:System.Data.SqlTypes.SqlInt64.op_BitwiseAnd(System.Data.SqlTypes.SqlInt64,System.Data.SqlTypes.SqlInt64)">
      <summary vsli:raw="Computes the bitwise AND of its &lt;see cref=&quot;T:System.Data.SqlTypes.SqlInt64&quot; /&gt; operands.">对其 <see cref="T:System.Data.SqlTypes.SqlInt64" /> 操作数执行按位 AND 运算。</summary>
      <param name="x" vsli:raw="A &lt;see cref=&quot;T:System.Data.SqlTypes.SqlInt64&quot; /&gt; structure.">
        <see cref="T:System.Data.SqlTypes.SqlInt64" /> 结构。</param>
      <param name="y" vsli:raw="A &lt;see cref=&quot;T:System.Data.SqlTypes.SqlInt64&quot; /&gt; structure.">
        <see cref="T:System.Data.SqlTypes.SqlInt64" /> 结构。</param>
      <returns vsli:raw="A &lt;see cref=&quot;T:System.Data.SqlTypes.SqlInt64&quot; /&gt; structure that contains the results of the bitwise AND operation.">一个 <see cref="T:System.Data.SqlTypes.SqlInt64" /> 结构，它包含按位“与”运算的结果。</returns>
    </member>
    <member name="M:System.Data.SqlTypes.SqlInt64.op_BitwiseOr(System.Data.SqlTypes.SqlInt64,System.Data.SqlTypes.SqlInt64)">
      <summary vsli:raw="Computes the bitwise OR of its two &lt;see cref=&quot;T:System.Data.SqlTypes.SqlInt64&quot; /&gt; operands.">对其两个 <see cref="T:System.Data.SqlTypes.SqlInt64" /> 操作数执行按位“或”计算。</summary>
      <param name="x" vsli:raw="A &lt;see cref=&quot;T:System.Data.SqlTypes.SqlInt64&quot; /&gt; structure.">
        <see cref="T:System.Data.SqlTypes.SqlInt64" /> 结构。</param>
      <param name="y" vsli:raw="A &lt;see cref=&quot;T:System.Data.SqlTypes.SqlInt64&quot; /&gt; structure.">
        <see cref="T:System.Data.SqlTypes.SqlInt64" /> 结构。</param>
      <returns vsli:raw="A &lt;see cref=&quot;T:System.Data.SqlTypes.SqlInt64&quot; /&gt; structure that contains the results of the bitwise OR operation.">一个 <see cref="T:System.Data.SqlTypes.SqlInt64" /> 结构，它包含按位“或”运算的结果。</returns>
    </member>
    <member name="M:System.Data.SqlTypes.SqlInt64.op_Division(System.Data.SqlTypes.SqlInt64,System.Data.SqlTypes.SqlInt64)">
      <summary vsli:raw="Divides the first &lt;see cref=&quot;T:System.Data.SqlTypes.SqlInt64&quot; /&gt; parameter by the second.">将第一个 <see cref="T:System.Data.SqlTypes.SqlInt64" /> 参数除以第二个参数。</summary>
      <param name="x" vsli:raw="A &lt;see cref=&quot;T:System.Data.SqlTypes.SqlInt64&quot; /&gt; structure.">
        <see cref="T:System.Data.SqlTypes.SqlInt64" /> 结构。</param>
      <param name="y" vsli:raw="A &lt;see cref=&quot;T:System.Data.SqlTypes.SqlInt64&quot; /&gt; structure.">
        <see cref="T:System.Data.SqlTypes.SqlInt64" /> 结构。</param>
      <returns vsli:raw="A new &lt;see cref=&quot;T:System.Data.SqlTypes.SqlInt64&quot; /&gt; structure whose &lt;see cref=&quot;P:System.Data.SqlTypes.SqlInt64.Value&quot; /&gt; property contains the results of the division operation.">一个新的 <see cref="T:System.Data.SqlTypes.SqlInt64" /> 结构，它的 <see cref="P:System.Data.SqlTypes.SqlInt64.Value" /> 属性包含该除法运算的结果。</returns>
    </member>
    <member name="M:System.Data.SqlTypes.SqlInt64.op_Equality(System.Data.SqlTypes.SqlInt64,System.Data.SqlTypes.SqlInt64)">
      <summary vsli:raw="Performs a logical comparison of the two &lt;see cref=&quot;T:System.Data.SqlTypes.SqlInt64&quot; /&gt; parameters to determine whether they are equal.">对两个 <see cref="T:System.Data.SqlTypes.SqlInt64" /> 参数执行逻辑比较，以确定它们是否相等。</summary>
      <param name="x" vsli:raw="A &lt;see cref=&quot;T:System.Data.SqlTypes.SqlInt64&quot; /&gt; structure.">
        <see cref="T:System.Data.SqlTypes.SqlInt64" /> 结构。</param>
      <param name="y" vsli:raw="A &lt;see cref=&quot;T:System.Data.SqlTypes.SqlInt64&quot; /&gt; structure.">
        <see cref="T:System.Data.SqlTypes.SqlInt64" /> 结构。</param>
      <returns vsli:raw="A &lt;see cref=&quot;T:System.Data.SqlTypes.SqlBoolean&quot; /&gt; that is &lt;see cref=&quot;F:System.Data.SqlTypes.SqlBoolean.True&quot; /&gt; if the two instances are equal or &lt;see cref=&quot;F:System.Data.SqlTypes.SqlBoolean.False&quot; /&gt; if the two instances are not equal. If either instance of &lt;see cref=&quot;T:System.Data.SqlTypes.SqlInt64&quot; /&gt; is null, the &lt;see cref=&quot;P:System.Data.SqlTypes.SqlBoolean.Value&quot; /&gt; of the &lt;see cref=&quot;T:System.Data.SqlTypes.SqlBoolean&quot; /&gt; will be &lt;see cref=&quot;F:System.Data.SqlTypes.SqlBoolean.Null&quot; /&gt;.">一个 <see cref="T:System.Data.SqlTypes.SqlBoolean" />，它在两个实例相等时为 <see cref="F:System.Data.SqlTypes.SqlBoolean.True" />，在两个实例不等时为 <see cref="F:System.Data.SqlTypes.SqlBoolean.False" />。 如果 <see cref="T:System.Data.SqlTypes.SqlInt64" /> 的任一实例为空，则 <see cref="P:System.Data.SqlTypes.SqlBoolean.Value" /> 的 <see cref="T:System.Data.SqlTypes.SqlBoolean" /> 将为 <see cref="F:System.Data.SqlTypes.SqlBoolean.Null" />。</returns>
    </member>
    <member name="M:System.Data.SqlTypes.SqlInt64.op_ExclusiveOr(System.Data.SqlTypes.SqlInt64,System.Data.SqlTypes.SqlInt64)">
      <summary vsli:raw="Performs a bitwise exclusive-OR operation on the supplied parameters.">对提供的参数执行按位“异或”运算。</summary>
      <param name="x" vsli:raw="A &lt;see cref=&quot;T:System.Data.SqlTypes.SqlInt64&quot; /&gt; structure.">
        <see cref="T:System.Data.SqlTypes.SqlInt64" /> 结构。</param>
      <param name="y" vsli:raw="A &lt;see cref=&quot;T:System.Data.SqlTypes.SqlInt64&quot; /&gt; structure.">
        <see cref="T:System.Data.SqlTypes.SqlInt64" /> 结构。</param>
      <returns vsli:raw="A &lt;see cref=&quot;T:System.Data.SqlTypes.SqlInt64&quot; /&gt; structure that contains the results of the bitwise XOR operation.">一个 <see cref="T:System.Data.SqlTypes.SqlInt64" /> 结构，它包含按位“异或”运算的结果。</returns>
    </member>
    <member name="M:System.Data.SqlTypes.SqlInt64.op_Explicit(System.Data.SqlTypes.SqlBoolean)~System.Data.SqlTypes.SqlInt64">
      <summary vsli:raw="Converts the supplied &lt;see cref=&quot;T:System.Data.SqlTypes.SqlBoolean&quot; /&gt; parameter to &lt;see cref=&quot;T:System.Data.SqlTypes.SqlInt64&quot; /&gt;.">将提供的 <see cref="T:System.Data.SqlTypes.SqlBoolean" /> 参数转换为 <see cref="T:System.Data.SqlTypes.SqlInt64" />。</summary>
      <param name="x" vsli:raw="The &lt;see cref=&quot;T:System.Data.SqlTypes.SqlBoolean&quot; /&gt; structure to be converted.">要转换的 <see cref="T:System.Data.SqlTypes.SqlBoolean" /> 结构。</param>
      <returns vsli:raw="A new &lt;see cref=&quot;T:System.Data.SqlTypes.SqlInt64&quot; /&gt; structure whose &lt;see cref=&quot;P:System.Data.SqlTypes.SqlInt64.Value&quot; /&gt; property is equal to the &lt;see cref=&quot;P:System.Data.SqlTypes.SqlBoolean.ByteValue&quot; /&gt; of the &lt;see cref=&quot;T:System.Data.SqlTypes.SqlBoolean&quot; /&gt; parameter.">新的 <see cref="T:System.Data.SqlTypes.SqlInt64" /> 结构，它的 <see cref="P:System.Data.SqlTypes.SqlInt64.Value" /> 属性等于 <see cref="P:System.Data.SqlTypes.SqlBoolean.ByteValue" /> 参数的 <see cref="T:System.Data.SqlTypes.SqlBoolean" />。</returns>
    </member>
    <member name="M:System.Data.SqlTypes.SqlInt64.op_Explicit(System.Data.SqlTypes.SqlDecimal)~System.Data.SqlTypes.SqlInt64">
      <summary vsli:raw="Converts the supplied &lt;see cref=&quot;T:System.Data.SqlTypes.SqlDecimal&quot; /&gt; parameter to &lt;see cref=&quot;T:System.Data.SqlTypes.SqlInt64&quot; /&gt;.">将提供的 <see cref="T:System.Data.SqlTypes.SqlDecimal" /> 参数转换为 <see cref="T:System.Data.SqlTypes.SqlInt64" />。</summary>
      <param name="x" vsli:raw="The &lt;see cref=&quot;T:System.Data.SqlTypes.SqlDecimal&quot; /&gt; structure to be converted.">要转换的 <see cref="T:System.Data.SqlTypes.SqlDecimal" /> 结构。</param>
      <returns vsli:raw="A new &lt;see cref=&quot;T:System.Data.SqlTypes.SqlInt64&quot; /&gt; structure whose &lt;see cref=&quot;P:System.Data.SqlTypes.SqlInt64.Value&quot; /&gt; is equal to the integer part of the &lt;see cref=&quot;T:System.Data.SqlTypes.SqlDecimal&quot; /&gt; parameter.">一个新的 <see cref="T:System.Data.SqlTypes.SqlInt64" /> 结构，其 <see cref="P:System.Data.SqlTypes.SqlInt64.Value" /> 等于 <see cref="T:System.Data.SqlTypes.SqlDecimal" /> 参数的整数部分。</returns>
    </member>
    <member name="M:System.Data.SqlTypes.SqlInt64.op_Explicit(System.Data.SqlTypes.SqlDouble)~System.Data.SqlTypes.SqlInt64">
      <summary vsli:raw="Converts the supplied &lt;see cref=&quot;T:System.Data.SqlTypes.SqlDouble&quot; /&gt; structure to &lt;see cref=&quot;T:System.Data.SqlTypes.SqlInt64&quot; /&gt;.">将提供的 <see cref="T:System.Data.SqlTypes.SqlDouble" /> 结构转换为 <see cref="T:System.Data.SqlTypes.SqlInt64" />。</summary>
      <param name="x" vsli:raw="The &lt;see cref=&quot;T:System.Data.SqlTypes.SqlDouble&quot; /&gt; structure to be converted.">要转换的 <see cref="T:System.Data.SqlTypes.SqlDouble" /> 结构。</param>
      <returns vsli:raw="A new &lt;see cref=&quot;T:System.Data.SqlTypes.SqlInt64&quot; /&gt; structure whose &lt;see cref=&quot;P:System.Data.SqlTypes.SqlInt64.Value&quot; /&gt; property equals the integer part of the &lt;see cref=&quot;T:System.Data.SqlTypes.SqlDouble&quot; /&gt; parameter.">一个新的 <see cref="T:System.Data.SqlTypes.SqlInt64" /> 结构，它的 <see cref="P:System.Data.SqlTypes.SqlInt64.Value" /> 属性等于 <see cref="T:System.Data.SqlTypes.SqlDouble" /> 参数的整数部分。</returns>
    </member>
    <member name="M:System.Data.SqlTypes.SqlInt64.op_Explicit(System.Data.SqlTypes.SqlInt64)~System.Int64">
      <summary vsli:raw="Converts the &lt;see cref=&quot;T:System.Data.SqlTypes.SqlInt64&quot; /&gt; parameter to long.">将 <see cref="T:System.Data.SqlTypes.SqlInt64" /> 参数转换为长值。</summary>
      <param name="x" vsli:raw="A &lt;see cref=&quot;T:System.Data.SqlTypes.SqlInt64&quot; /&gt; structure.">
        <see cref="T:System.Data.SqlTypes.SqlInt64" /> 结构。</param>
      <returns vsli:raw="A new long value equal to the &lt;see cref=&quot;P:System.Data.SqlTypes.SqlInt64.Value&quot; /&gt; of the &lt;see cref=&quot;T:System.Data.SqlTypes.SqlInt64&quot; /&gt;.">一个新长值，它等于 <see cref="P:System.Data.SqlTypes.SqlInt64.Value" /> 的 <see cref="T:System.Data.SqlTypes.SqlInt64" />。</returns>
    </member>
    <member name="M:System.Data.SqlTypes.SqlInt64.op_Explicit(System.Data.SqlTypes.SqlMoney)~System.Data.SqlTypes.SqlInt64">
      <summary vsli:raw="Converts the supplied &lt;see cref=&quot;T:System.Data.SqlTypes.SqlMoney&quot; /&gt; parameter to &lt;see cref=&quot;T:System.Data.SqlTypes.SqlInt64&quot; /&gt;.">将提供的 <see cref="T:System.Data.SqlTypes.SqlMoney" /> 参数转换为 <see cref="T:System.Data.SqlTypes.SqlInt64" />。</summary>
      <param name="x" vsli:raw="The &lt;see cref=&quot;T:System.Data.SqlTypes.SqlMoney&quot; /&gt; structure to be converted.">要转换的 <see cref="T:System.Data.SqlTypes.SqlMoney" /> 结构。</param>
      <returns vsli:raw="A new &lt;see cref=&quot;T:System.Data.SqlTypes.SqlInt64&quot; /&gt; structure whose &lt;see cref=&quot;P:System.Data.SqlTypes.SqlInt64.Value&quot; /&gt; property equals the integer part of the &lt;see cref=&quot;T:System.Data.SqlTypes.SqlMoney&quot; /&gt; parameter.">一个新的 <see cref="T:System.Data.SqlTypes.SqlInt64" /> 结构，它的 <see cref="P:System.Data.SqlTypes.SqlInt64.Value" /> 属性等于 <see cref="T:System.Data.SqlTypes.SqlMoney" /> 参数的整数部分。</returns>
    </member>
    <member name="M:System.Data.SqlTypes.SqlInt64.op_Explicit(System.Data.SqlTypes.SqlSingle)~System.Data.SqlTypes.SqlInt64">
      <summary vsli:raw="Converts the supplied &lt;see cref=&quot;T:System.Data.SqlTypes.SqlSingle&quot; /&gt; parameter to &lt;see cref=&quot;T:System.Data.SqlTypes.SqlInt64&quot; /&gt;.">将提供的 <see cref="T:System.Data.SqlTypes.SqlSingle" /> 参数转换为 <see cref="T:System.Data.SqlTypes.SqlInt64" />。</summary>
      <param name="x" vsli:raw="The &lt;see cref=&quot;T:System.Data.SqlTypes.SqlSingle&quot; /&gt; structure to be converted.">要转换的 <see cref="T:System.Data.SqlTypes.SqlSingle" /> 结构。</param>
      <returns vsli:raw="A new &lt;see cref=&quot;T:System.Data.SqlTypes.SqlInt64&quot; /&gt; structure whose &lt;see cref=&quot;P:System.Data.SqlTypes.SqlInt64.Value&quot; /&gt; property contains the integer part of the &lt;see cref=&quot;T:System.Data.SqlTypes.SqlSingle&quot; /&gt; parameter.">一个新的 <see cref="T:System.Data.SqlTypes.SqlInt64" /> 结构，其 <see cref="P:System.Data.SqlTypes.SqlInt64.Value" /> 属性包含 <see cref="T:System.Data.SqlTypes.SqlSingle" /> 参数的整数部分。</returns>
    </member>
    <member name="M:System.Data.SqlTypes.SqlInt64.op_Explicit(System.Data.SqlTypes.SqlString)~System.Data.SqlTypes.SqlInt64">
      <summary vsli:raw="Converts the supplied &lt;see cref=&quot;T:System.Data.SqlTypes.SqlString&quot; /&gt; parameter to &lt;see cref=&quot;T:System.Data.SqlTypes.SqlInt64&quot; /&gt;.">将提供的 <see cref="T:System.Data.SqlTypes.SqlString" /> 参数转换为 <see cref="T:System.Data.SqlTypes.SqlInt64" />。</summary>
      <param name="x" vsli:raw="The &lt;see cref=&quot;T:System.Data.SqlTypes.SqlString&quot; /&gt; object to be converted.">要转换的 <see cref="T:System.Data.SqlTypes.SqlString" /> 对象。</param>
      <returns vsli:raw="A new &lt;see cref=&quot;T:System.Data.SqlTypes.SqlInt64&quot; /&gt; whose &lt;see cref=&quot;P:System.Data.SqlTypes.SqlInt64.Value&quot; /&gt; is equal to the value represented by the &lt;see cref=&quot;T:System.Data.SqlTypes.SqlString&quot; /&gt; parameter.">一个新的 <see cref="T:System.Data.SqlTypes.SqlInt64" />，它的 <see cref="P:System.Data.SqlTypes.SqlInt64.Value" /> 等于 <see cref="T:System.Data.SqlTypes.SqlString" /> 参数表示的值。</returns>
    </member>
    <member name="M:System.Data.SqlTypes.SqlInt64.op_GreaterThan(System.Data.SqlTypes.SqlInt64,System.Data.SqlTypes.SqlInt64)">
      <summary vsli:raw="Performs a logical comparison of the two &lt;see cref=&quot;T:System.Data.SqlTypes.SqlInt64&quot; /&gt; parameters to determine whether the first is greater than the second.">对两个 <see cref="T:System.Data.SqlTypes.SqlInt64" /> 参数执行逻辑比较，以确定第一个参数是否大于第二个参数。</summary>
      <param name="x" vsli:raw="A &lt;see cref=&quot;T:System.Data.SqlTypes.SqlInt64&quot; /&gt; structure.">
        <see cref="T:System.Data.SqlTypes.SqlInt64" /> 结构。</param>
      <param name="y" vsli:raw="A &lt;see cref=&quot;T:System.Data.SqlTypes.SqlInt64&quot; /&gt; structure.">
        <see cref="T:System.Data.SqlTypes.SqlInt64" /> 结构。</param>
      <returns vsli:raw="A &lt;see cref=&quot;T:System.Data.SqlTypes.SqlBoolean&quot; /&gt; that is &lt;see cref=&quot;F:System.Data.SqlTypes.SqlBoolean.True&quot; /&gt; if the first instance is greater than the second instance. Otherwise, &lt;see cref=&quot;F:System.Data.SqlTypes.SqlBoolean.False&quot; /&gt;. If either instance of &lt;see cref=&quot;T:System.Data.SqlTypes.SqlInt64&quot; /&gt; is null, the &lt;see cref=&quot;P:System.Data.SqlTypes.SqlBoolean.Value&quot; /&gt; of the &lt;see cref=&quot;T:System.Data.SqlTypes.SqlBoolean&quot; /&gt; will be &lt;see cref=&quot;F:System.Data.SqlTypes.SqlBoolean.Null&quot; /&gt;.">一个 <see cref="T:System.Data.SqlTypes.SqlBoolean" />，如果第一个实例大于第二个实例，则它为 <see cref="F:System.Data.SqlTypes.SqlBoolean.True" />。 否则为 <see cref="F:System.Data.SqlTypes.SqlBoolean.False" />。 如果 <see cref="T:System.Data.SqlTypes.SqlInt64" /> 的任一实例为空，则 <see cref="P:System.Data.SqlTypes.SqlBoolean.Value" /> 的 <see cref="T:System.Data.SqlTypes.SqlBoolean" /> 将为 <see cref="F:System.Data.SqlTypes.SqlBoolean.Null" />。</returns>
    </member>
    <member name="M:System.Data.SqlTypes.SqlInt64.op_GreaterThanOrEqual(System.Data.SqlTypes.SqlInt64,System.Data.SqlTypes.SqlInt64)">
      <summary vsli:raw="Performs a logical comparison of the two &lt;see cref=&quot;T:System.Data.SqlTypes.SqlInt64&quot; /&gt; parameters to determine whether the first is greater than or equal to the second.">对两个 <see cref="T:System.Data.SqlTypes.SqlInt64" /> 参数执行逻辑比较，以确定第一个参数是否大于或等于第二个参数。</summary>
      <param name="x" vsli:raw="A &lt;see cref=&quot;T:System.Data.SqlTypes.SqlInt64&quot; /&gt; structure.">
        <see cref="T:System.Data.SqlTypes.SqlInt64" /> 结构。</param>
      <param name="y" vsli:raw="A &lt;see cref=&quot;T:System.Data.SqlTypes.SqlInt64&quot; /&gt; structure.">
        <see cref="T:System.Data.SqlTypes.SqlInt64" /> 结构。</param>
      <returns vsli:raw="A &lt;see cref=&quot;T:System.Data.SqlTypes.SqlBoolean&quot; /&gt; that is &lt;see cref=&quot;F:System.Data.SqlTypes.SqlBoolean.True&quot; /&gt; if the first instance is greater than or equal to the second instance. Otherwise, &lt;see cref=&quot;F:System.Data.SqlTypes.SqlBoolean.False&quot; /&gt;. If either instance of &lt;see cref=&quot;T:System.Data.SqlTypes.SqlInt64&quot; /&gt; is null, the &lt;see cref=&quot;P:System.Data.SqlTypes.SqlBoolean.Value&quot; /&gt; of the &lt;see cref=&quot;T:System.Data.SqlTypes.SqlBoolean&quot; /&gt; will be &lt;see cref=&quot;F:System.Data.SqlTypes.SqlBoolean.Null&quot; /&gt;.">一个 <see cref="T:System.Data.SqlTypes.SqlBoolean" />，如果第一个实例大于或等于第二个实例，则为 <see cref="F:System.Data.SqlTypes.SqlBoolean.True" />。 否则为 <see cref="F:System.Data.SqlTypes.SqlBoolean.False" />。 如果 <see cref="T:System.Data.SqlTypes.SqlInt64" /> 的任一实例为空，则 <see cref="P:System.Data.SqlTypes.SqlBoolean.Value" /> 的 <see cref="T:System.Data.SqlTypes.SqlBoolean" /> 将为 <see cref="F:System.Data.SqlTypes.SqlBoolean.Null" />。</returns>
    </member>
    <member name="M:System.Data.SqlTypes.SqlInt64.op_Implicit(System.Data.SqlTypes.SqlByte)~System.Data.SqlTypes.SqlInt64">
      <summary vsli:raw="Converts the supplied &lt;see cref=&quot;T:System.Data.SqlTypes.SqlByte&quot; /&gt; parameter to &lt;see cref=&quot;T:System.Data.SqlTypes.SqlInt64&quot; /&gt;.">将提供的 <see cref="T:System.Data.SqlTypes.SqlByte" /> 参数转换为 <see cref="T:System.Data.SqlTypes.SqlInt64" />。</summary>
      <param name="x" vsli:raw="The &lt;see cref=&quot;T:System.Data.SqlTypes.SqlByte&quot; /&gt; structure to be converted.">要转换的 <see cref="T:System.Data.SqlTypes.SqlByte" /> 结构。</param>
      <returns vsli:raw="A new &lt;see cref=&quot;T:System.Data.SqlTypes.SqlInt64&quot; /&gt; structure whose &lt;see cref=&quot;P:System.Data.SqlTypes.SqlInt64.Value&quot; /&gt; property equals the &lt;see cref=&quot;P:System.Data.SqlTypes.SqlByte.Value&quot; /&gt; property of the &lt;see cref=&quot;T:System.Data.SqlTypes.SqlByte&quot; /&gt; parameter.">一个新的 <see cref="T:System.Data.SqlTypes.SqlInt64" /> 结构，它的 <see cref="P:System.Data.SqlTypes.SqlInt64.Value" /> 属性等于 <see cref="P:System.Data.SqlTypes.SqlByte.Value" /> 参数的 <see cref="T:System.Data.SqlTypes.SqlByte" /> 属性。</returns>
    </member>
    <member name="M:System.Data.SqlTypes.SqlInt64.op_Implicit(System.Data.SqlTypes.SqlInt16)~System.Data.SqlTypes.SqlInt64">
      <summary vsli:raw="Converts the supplied &lt;see cref=&quot;T:System.Data.SqlTypes.SqlInt16&quot; /&gt; parameter to &lt;see cref=&quot;T:System.Data.SqlTypes.SqlInt64&quot; /&gt;.">将提供的 <see cref="T:System.Data.SqlTypes.SqlInt16" /> 参数转换为 <see cref="T:System.Data.SqlTypes.SqlInt64" />。</summary>
      <param name="x" vsli:raw="The &lt;see cref=&quot;T:System.Data.SqlTypes.SqlInt16&quot; /&gt; structure to be converted.">要转换的 <see cref="T:System.Data.SqlTypes.SqlInt16" /> 结构。</param>
      <returns vsli:raw="A new &lt;see cref=&quot;T:System.Data.SqlTypes.SqlInt64&quot; /&gt; structure whose &lt;see cref=&quot;P:System.Data.SqlTypes.SqlInt64.Value&quot; /&gt; property equals the &lt;see cref=&quot;P:System.Data.SqlTypes.SqlInt16.Value&quot; /&gt; property of the &lt;see cref=&quot;T:System.Data.SqlTypes.SqlInt16&quot; /&gt; parameter.">一个新的 <see cref="T:System.Data.SqlTypes.SqlInt64" /> 结构，它的 <see cref="P:System.Data.SqlTypes.SqlInt64.Value" /> 属性等于 <see cref="P:System.Data.SqlTypes.SqlInt16.Value" /> 参数的 <see cref="T:System.Data.SqlTypes.SqlInt16" /> 属性。</returns>
    </member>
    <member name="M:System.Data.SqlTypes.SqlInt64.op_Implicit(System.Data.SqlTypes.SqlInt32)~System.Data.SqlTypes.SqlInt64">
      <summary vsli:raw="Converts the supplied &lt;see cref=&quot;T:System.Data.SqlTypes.SqlInt32&quot; /&gt; parameter to &lt;see cref=&quot;T:System.Data.SqlTypes.SqlInt64&quot; /&gt;.">将提供的 <see cref="T:System.Data.SqlTypes.SqlInt32" /> 参数转换为 <see cref="T:System.Data.SqlTypes.SqlInt64" />。</summary>
      <param name="x" vsli:raw="The &lt;see cref=&quot;T:System.Data.SqlTypes.SqlInt32&quot; /&gt; structure to be converted.">要转换的 <see cref="T:System.Data.SqlTypes.SqlInt32" /> 结构。</param>
      <returns vsli:raw="A new &lt;see cref=&quot;T:System.Data.SqlTypes.SqlInt64&quot; /&gt; structure whose &lt;see cref=&quot;P:System.Data.SqlTypes.SqlInt64.Value&quot; /&gt; property equals the &lt;see cref=&quot;P:System.Data.SqlTypes.SqlInt32.Value&quot; /&gt; property of the &lt;see cref=&quot;T:System.Data.SqlTypes.SqlInt32&quot; /&gt; parameter.">一个新的 <see cref="T:System.Data.SqlTypes.SqlInt64" /> 结构，它的 <see cref="P:System.Data.SqlTypes.SqlInt64.Value" /> 属性等于 <see cref="P:System.Data.SqlTypes.SqlInt32.Value" /> 参数的 <see cref="T:System.Data.SqlTypes.SqlInt32" /> 属性。</returns>
    </member>
    <member name="M:System.Data.SqlTypes.SqlInt64.op_Implicit(System.Int64)~System.Data.SqlTypes.SqlInt64">
      <summary vsli:raw="Converts the long parameter to &lt;see cref=&quot;T:System.Data.SqlTypes.SqlInt64&quot; /&gt;.">将长参数转换为 <see cref="T:System.Data.SqlTypes.SqlInt64" />。</summary>
      <param name="x" vsli:raw="A long integer value.">长整型值。</param>
      <returns vsli:raw="A new &lt;see cref=&quot;T:System.Data.SqlTypes.SqlInt64&quot; /&gt; structure whose &lt;see cref=&quot;P:System.Data.SqlTypes.SqlInt64.Value&quot; /&gt; equals the value of the long parameter.">一个新的 <see cref="T:System.Data.SqlTypes.SqlInt64" /> 结构，它的 <see cref="P:System.Data.SqlTypes.SqlInt64.Value" /> 等于长参数的值。</returns>
    </member>
    <member name="M:System.Data.SqlTypes.SqlInt64.op_Inequality(System.Data.SqlTypes.SqlInt64,System.Data.SqlTypes.SqlInt64)">
      <summary vsli:raw="Performs a logical comparison on the two SqlInt64 parameters to determine whether they are not equal.">对两个 SqlInt64 参数执行逻辑比较，以确定它们是否相等。</summary>
      <param name="x" vsli:raw="A &lt;see cref=&quot;T:System.Data.SqlTypes.SqlInt64&quot; /&gt; structure.">
        <see cref="T:System.Data.SqlTypes.SqlInt64" /> 结构。</param>
      <param name="y" vsli:raw="A &lt;see cref=&quot;T:System.Data.SqlTypes.SqlInt64&quot; /&gt; structure.">
        <see cref="T:System.Data.SqlTypes.SqlInt64" /> 结构。</param>
      <returns vsli:raw="A &lt;see cref=&quot;T:System.Data.SqlTypes.SqlBoolean&quot; /&gt; that is &lt;see cref=&quot;F:System.Data.SqlTypes.SqlBoolean.True&quot; /&gt; if the two instances are not equal or &lt;see cref=&quot;F:System.Data.SqlTypes.SqlBoolean.False&quot; /&gt; if the two instances are equal. If either instance of &lt;see cref=&quot;T:System.Data.SqlTypes.SqlInt64&quot; /&gt; is null, the &lt;see cref=&quot;P:System.Data.SqlTypes.SqlBoolean.Value&quot; /&gt; of the &lt;see cref=&quot;T:System.Data.SqlTypes.SqlBoolean&quot; /&gt; will be &lt;see cref=&quot;F:System.Data.SqlTypes.SqlBoolean.Null&quot; /&gt;.">一个 <see cref="T:System.Data.SqlTypes.SqlBoolean" />，它在两个实例不等时为 <see cref="F:System.Data.SqlTypes.SqlBoolean.True" />，在两个实例相等时为 <see cref="F:System.Data.SqlTypes.SqlBoolean.False" />。 如果 <see cref="T:System.Data.SqlTypes.SqlInt64" /> 的任一实例为空，则 <see cref="P:System.Data.SqlTypes.SqlBoolean.Value" /> 的 <see cref="T:System.Data.SqlTypes.SqlBoolean" /> 将为 <see cref="F:System.Data.SqlTypes.SqlBoolean.Null" />。</returns>
    </member>
    <member name="M:System.Data.SqlTypes.SqlInt64.op_LessThan(System.Data.SqlTypes.SqlInt64,System.Data.SqlTypes.SqlInt64)">
      <summary vsli:raw="Performs a logical comparison on the two &lt;see cref=&quot;T:System.Data.SqlTypes.SqlInt64&quot; /&gt; parameters to determine whether the first is less than the second.">对两个 <see cref="T:System.Data.SqlTypes.SqlInt64" /> 参数执行逻辑比较，以确定第一个参数是否小于第二个参数。</summary>
      <param name="x" vsli:raw="A &lt;see cref=&quot;T:System.Data.SqlTypes.SqlInt64&quot; /&gt; structure.">
        <see cref="T:System.Data.SqlTypes.SqlInt64" /> 结构。</param>
      <param name="y" vsli:raw="A &lt;see cref=&quot;T:System.Data.SqlTypes.SqlInt64&quot; /&gt; structure.">
        <see cref="T:System.Data.SqlTypes.SqlInt64" /> 结构。</param>
      <returns vsli:raw="A &lt;see cref=&quot;T:System.Data.SqlTypes.SqlBoolean&quot; /&gt; that is &lt;see cref=&quot;F:System.Data.SqlTypes.SqlBoolean.True&quot; /&gt; if the first instance is less than the second instance. Otherwise, &lt;see cref=&quot;F:System.Data.SqlTypes.SqlBoolean.False&quot; /&gt;. If either instance of &lt;see cref=&quot;T:System.Data.SqlTypes.SqlInt64&quot; /&gt; is null, the &lt;see cref=&quot;P:System.Data.SqlTypes.SqlBoolean.Value&quot; /&gt; of the &lt;see cref=&quot;T:System.Data.SqlTypes.SqlBoolean&quot; /&gt; will be &lt;see cref=&quot;F:System.Data.SqlTypes.SqlBoolean.Null&quot; /&gt;.">一个 <see cref="T:System.Data.SqlTypes.SqlBoolean" />，如果第一个实例小于第二个实例，则它为 <see cref="F:System.Data.SqlTypes.SqlBoolean.True" />。 否则为 <see cref="F:System.Data.SqlTypes.SqlBoolean.False" />。 如果 <see cref="T:System.Data.SqlTypes.SqlInt64" /> 的任一实例为空，则 <see cref="P:System.Data.SqlTypes.SqlBoolean.Value" /> 的 <see cref="T:System.Data.SqlTypes.SqlBoolean" /> 将为 <see cref="F:System.Data.SqlTypes.SqlBoolean.Null" />。</returns>
    </member>
    <member name="M:System.Data.SqlTypes.SqlInt64.op_LessThanOrEqual(System.Data.SqlTypes.SqlInt64,System.Data.SqlTypes.SqlInt64)">
      <summary vsli:raw="Performs a logical comparison on the two &lt;see cref=&quot;T:System.Data.SqlTypes.SqlInt64&quot; /&gt; parameters to determine whether the first is less than or equal to the second.">对两个 <see cref="T:System.Data.SqlTypes.SqlInt64" /> 参数执行逻辑比较，以确定第一个参数是否小于或等于第二个参数。</summary>
      <param name="x" vsli:raw="A &lt;see cref=&quot;T:System.Data.SqlTypes.SqlInt64&quot; /&gt; structure.">
        <see cref="T:System.Data.SqlTypes.SqlInt64" /> 结构。</param>
      <param name="y" vsli:raw="A &lt;see cref=&quot;T:System.Data.SqlTypes.SqlInt64&quot; /&gt; structure.">
        <see cref="T:System.Data.SqlTypes.SqlInt64" /> 结构。</param>
      <returns vsli:raw="A &lt;see cref=&quot;T:System.Data.SqlTypes.SqlBoolean&quot; /&gt; that is &lt;see cref=&quot;F:System.Data.SqlTypes.SqlBoolean.True&quot; /&gt; if the first instance is less than or equal to the second instance. Otherwise, &lt;see cref=&quot;F:System.Data.SqlTypes.SqlBoolean.False&quot; /&gt;. If either instance of &lt;see cref=&quot;T:System.Data.SqlTypes.SqlInt64&quot; /&gt; is null, the &lt;see cref=&quot;P:System.Data.SqlTypes.SqlBoolean.Value&quot; /&gt; of the &lt;see cref=&quot;T:System.Data.SqlTypes.SqlBoolean&quot; /&gt; will be &lt;see cref=&quot;F:System.Data.SqlTypes.SqlBoolean.Null&quot; /&gt;.">一个 <see cref="T:System.Data.SqlTypes.SqlBoolean" />，如果第一个实例小于或等于第二个实例，则它为 <see cref="F:System.Data.SqlTypes.SqlBoolean.True" />。 否则为 <see cref="F:System.Data.SqlTypes.SqlBoolean.False" />。 如果 <see cref="T:System.Data.SqlTypes.SqlInt64" /> 的任一实例为空，则 <see cref="P:System.Data.SqlTypes.SqlBoolean.Value" /> 的 <see cref="T:System.Data.SqlTypes.SqlBoolean" /> 将为 <see cref="F:System.Data.SqlTypes.SqlBoolean.Null" />。</returns>
    </member>
    <member name="M:System.Data.SqlTypes.SqlInt64.op_Modulus(System.Data.SqlTypes.SqlInt64,System.Data.SqlTypes.SqlInt64)">
      <summary vsli:raw="Computes the remainder after dividing the first &lt;see cref=&quot;T:System.Data.SqlTypes.SqlInt64&quot; /&gt; parameter by the second.">计算将第一个 <see cref="T:System.Data.SqlTypes.SqlInt64" /> 参数除以第二个参数后所得的余数。</summary>
      <param name="x" vsli:raw="A &lt;see cref=&quot;T:System.Data.SqlTypes.SqlInt64&quot; /&gt; structure.">
        <see cref="T:System.Data.SqlTypes.SqlInt64" /> 结构。</param>
      <param name="y" vsli:raw="A &lt;see cref=&quot;T:System.Data.SqlTypes.SqlInt64&quot; /&gt; structure.">
        <see cref="T:System.Data.SqlTypes.SqlInt64" /> 结构。</param>
      <returns vsli:raw="A new &lt;see cref=&quot;T:System.Data.SqlTypes.SqlInt64&quot; /&gt; structure whose &lt;see cref=&quot;P:System.Data.SqlTypes.SqlInt64.Value&quot; /&gt; property contains the remainder.">一个新的 <see cref="T:System.Data.SqlTypes.SqlInt64" /> 结构，它的 <see cref="P:System.Data.SqlTypes.SqlInt64.Value" /> 属性包含该余数。</returns>
    </member>
    <member name="M:System.Data.SqlTypes.SqlInt64.op_Multiply(System.Data.SqlTypes.SqlInt64,System.Data.SqlTypes.SqlInt64)">
      <summary vsli:raw="Computes the product of the two &lt;see cref=&quot;T:System.Data.SqlTypes.SqlInt64&quot; /&gt; parameters.">计算两个 <see cref="T:System.Data.SqlTypes.SqlInt64" /> 参数的乘积。</summary>
      <param name="x" vsli:raw="A &lt;see cref=&quot;T:System.Data.SqlTypes.SqlInt64&quot; /&gt; structure.">
        <see cref="T:System.Data.SqlTypes.SqlInt64" /> 结构。</param>
      <param name="y" vsli:raw="A &lt;see cref=&quot;T:System.Data.SqlTypes.SqlInt64&quot; /&gt; structure.">
        <see cref="T:System.Data.SqlTypes.SqlInt64" /> 结构。</param>
      <returns vsli:raw="A new &lt;see cref=&quot;T:System.Data.SqlTypes.SqlInt64&quot; /&gt; structure whose &lt;see cref=&quot;P:System.Data.SqlTypes.SqlInt64.Value&quot; /&gt; is equal to the product of the two &lt;see cref=&quot;T:System.Data.SqlTypes.SqlInt64&quot; /&gt; parameters.">一个新的 <see cref="T:System.Data.SqlTypes.SqlInt64" /> 结构，它的 <see cref="P:System.Data.SqlTypes.SqlInt64.Value" /> 等于两个 <see cref="T:System.Data.SqlTypes.SqlInt64" /> 参数的乘积。</returns>
    </member>
    <member name="M:System.Data.SqlTypes.SqlInt64.op_OnesComplement(System.Data.SqlTypes.SqlInt64)">
      <summary vsli:raw="Performs a bitwise one's complement operation on its &lt;see cref=&quot;T:System.Data.SqlTypes.SqlInt64&quot; /&gt; operand.">对它的 <see cref="T:System.Data.SqlTypes.SqlInt64" /> 操作数执行按位二进制反码运算。</summary>
      <param name="x" vsli:raw="A &lt;see cref=&quot;T:System.Data.SqlTypes.SqlInt64&quot; /&gt; structure.">
        <see cref="T:System.Data.SqlTypes.SqlInt64" /> 结构。</param>
      <returns vsli:raw="A new &lt;see cref=&quot;T:System.Data.SqlTypes.SqlInt64&quot; /&gt; structure whose &lt;see cref=&quot;P:System.Data.SqlTypes.SqlInt64.Value&quot; /&gt; is equal to the ones complement of the &lt;see cref=&quot;T:System.Data.SqlTypes.SqlInt64&quot; /&gt; parameter.">新的 <see cref="T:System.Data.SqlTypes.SqlInt64" /> 结构，它的 <see cref="P:System.Data.SqlTypes.SqlInt64.Value" /> 等于 <see cref="T:System.Data.SqlTypes.SqlInt64" /> 参数的二进制反码。</returns>
    </member>
    <member name="M:System.Data.SqlTypes.SqlInt64.op_Subtraction(System.Data.SqlTypes.SqlInt64,System.Data.SqlTypes.SqlInt64)">
      <summary vsli:raw="Subtracts the second &lt;see cref=&quot;T:System.Data.SqlTypes.SqlInt64&quot; /&gt; parameter from the first.">从第一个 <see cref="T:System.Data.SqlTypes.SqlInt64" /> 参数中减去第二个参数。</summary>
      <param name="x" vsli:raw="A &lt;see cref=&quot;T:System.Data.SqlTypes.SqlInt64&quot; /&gt; structure.">
        <see cref="T:System.Data.SqlTypes.SqlInt64" /> 结构。</param>
      <param name="y" vsli:raw="A &lt;see cref=&quot;T:System.Data.SqlTypes.SqlInt64&quot; /&gt; structure.">
        <see cref="T:System.Data.SqlTypes.SqlInt64" /> 结构。</param>
      <returns vsli:raw="A new &lt;see cref=&quot;T:System.Data.SqlTypes.SqlInt64&quot; /&gt; structure whose &lt;see cref=&quot;P:System.Data.SqlTypes.SqlInt64.Value&quot; /&gt; property equals the results of the subtraction operation.">一个新的 <see cref="T:System.Data.SqlTypes.SqlInt64" /> 结构，它的 <see cref="P:System.Data.SqlTypes.SqlInt64.Value" /> 属性等于该减法运算的结果。</returns>
    </member>
    <member name="M:System.Data.SqlTypes.SqlInt64.op_UnaryNegation(System.Data.SqlTypes.SqlInt64)">
      <summary vsli:raw="The unary minus operator negates the &lt;see cref=&quot;P:System.Data.SqlTypes.SqlInt64.Value&quot; /&gt; of the &lt;see cref=&quot;T:System.Data.SqlTypes.SqlInt64&quot; /&gt; operand.">一元负运算符对 <see cref="P:System.Data.SqlTypes.SqlInt64.Value" /> 操作数的 <see cref="T:System.Data.SqlTypes.SqlInt64" /> 求反。</summary>
      <param name="x" vsli:raw="A &lt;see cref=&quot;T:System.Data.SqlTypes.SqlInt64&quot; /&gt; structure.">
        <see cref="T:System.Data.SqlTypes.SqlInt64" /> 结构。</param>
      <returns vsli:raw="A &lt;see cref=&quot;T:System.Data.SqlTypes.SqlInt64&quot; /&gt; structure whose &lt;see cref=&quot;P:System.Data.SqlTypes.SqlInt64.Value&quot; /&gt; is equal to the negated &lt;see cref=&quot;P:System.Data.SqlTypes.SqlInt64.Value&quot; /&gt; of the &lt;see cref=&quot;T:System.Data.SqlTypes.SqlInt64&quot; /&gt; parameter.">一个 <see cref="T:System.Data.SqlTypes.SqlInt64" /> 结构，它的 <see cref="P:System.Data.SqlTypes.SqlInt64.Value" /> 等于 <see cref="P:System.Data.SqlTypes.SqlInt64.Value" /> 参数的求反 <see cref="T:System.Data.SqlTypes.SqlInt64" />。</returns>
    </member>
    <member name="M:System.Data.SqlTypes.SqlInt64.Parse(System.String)">
      <summary vsli:raw="Converts the &lt;see cref=&quot;T:System.String&quot; /&gt; representation of a number to its 64-bit signed integer equivalent.">将数字的 <see cref="T:System.String" /> 表示形式转换为它的等效 64 位有符号整数。</summary>
      <param name="s" vsli:raw="The &lt;see cref=&quot;T:System.String&quot; /&gt; to be parsed.">要分析的 <see cref="T:System.String" />。</param>
      <returns vsli:raw="A 64-bit signed integer equivalent to the value that is contained in the specified &lt;see cref=&quot;T:System.String&quot; /&gt;.">一个 64 位有符号整数，它等效于指定的 <see cref="T:System.String" /> 中包含的值。</returns>
    </member>
    <member name="M:System.Data.SqlTypes.SqlInt64.Subtract(System.Data.SqlTypes.SqlInt64,System.Data.SqlTypes.SqlInt64)">
      <summary vsli:raw="Subtracts the second &lt;see cref=&quot;T:System.Data.SqlTypes.SqlInt64&quot; /&gt; parameter from the first.">从第一个 <see cref="T:System.Data.SqlTypes.SqlInt64" /> 参数中减去第二个参数。</summary>
      <param name="x" vsli:raw="A &lt;see cref=&quot;T:System.Data.SqlTypes.SqlInt64&quot; /&gt; structure.">
        <see cref="T:System.Data.SqlTypes.SqlInt64" /> 结构。</param>
      <param name="y" vsli:raw="A &lt;see cref=&quot;T:System.Data.SqlTypes.SqlInt64&quot; /&gt; structure.">
        <see cref="T:System.Data.SqlTypes.SqlInt64" /> 结构。</param>
      <returns vsli:raw="A new &lt;see cref=&quot;T:System.Data.SqlTypes.SqlInt64&quot; /&gt; structure whose &lt;see cref=&quot;P:System.Data.SqlTypes.SqlInt64.Value&quot; /&gt; property equals the results of the subtraction operation.">一个新的 <see cref="T:System.Data.SqlTypes.SqlInt64" /> 结构，它的 <see cref="P:System.Data.SqlTypes.SqlInt64.Value" /> 属性等于该减法运算的结果。</returns>
    </member>
    <member name="M:System.Data.SqlTypes.SqlInt64.System#Xml#Serialization#IXmlSerializable#GetSchema">
      <summary vsli:raw="This member supports the .NET Framework infrastructure and is not intended to be used directly from your code.">此成员支持 .NET Framework 结构，不能在代码中直接使用。</summary>
      <returns vsli:raw="An &lt;see langword=&quot;XmlSchema&quot; /&gt;.">
        <see langword="XmlSchema" />。</returns>
    </member>
    <member name="M:System.Data.SqlTypes.SqlInt64.System#Xml#Serialization#IXmlSerializable#ReadXml(System.Xml.XmlReader)">
      <summary vsli:raw="This member supports the .NET Framework infrastructure and is not intended to be used directly from your code.">此成员支持 .NET Framework 结构，不能在代码中直接使用。</summary>
      <param name="reader" vsli:raw="&lt;see langword=&quot;XmlReader&quot; /&gt;">
        <see langword="XmlReader" />
      </param>
    </member>
    <member name="M:System.Data.SqlTypes.SqlInt64.System#Xml#Serialization#IXmlSerializable#WriteXml(System.Xml.XmlWriter)">
      <summary vsli:raw="This member supports the .NET Framework infrastructure and is not intended to be used directly from your code.">此成员支持 .NET Framework 结构，不能在代码中直接使用。</summary>
      <param name="writer" vsli:raw="&lt;see langword=&quot;XmlWriter&quot; /&gt;">
        <see langword="XmlWriter" />
      </param>
    </member>
    <member name="M:System.Data.SqlTypes.SqlInt64.ToSqlBoolean">
      <summary vsli:raw="Converts this &lt;see cref=&quot;T:System.Data.SqlTypes.SqlInt64&quot; /&gt; structure to &lt;see cref=&quot;T:System.Data.SqlTypes.SqlBoolean&quot; /&gt;.">将此 <see cref="T:System.Data.SqlTypes.SqlInt64" /> 结构转换为 <see cref="T:System.Data.SqlTypes.SqlBoolean" />。</summary>
      <returns vsli:raw="&lt;see langword=&quot;true&quot; /&gt; if the &lt;see cref=&quot;P:System.Data.SqlTypes.SqlInt64.Value&quot; /&gt; is non-zero; &lt;see langword=&quot;false&quot; /&gt; if zero; otherwise Null.">如果 <see cref="P:System.Data.SqlTypes.SqlInt64.Value" /> 不是零，则为 <see langword="true" />；如果为零，则为 <see langword="false" />；否则为 Null。</returns>
    </member>
    <member name="M:System.Data.SqlTypes.SqlInt64.ToSqlByte">
      <summary vsli:raw="Converts this &lt;see cref=&quot;T:System.Data.SqlTypes.SqlInt64&quot; /&gt; structure to &lt;see cref=&quot;T:System.Data.SqlTypes.SqlByte&quot; /&gt;.">将此 <see cref="T:System.Data.SqlTypes.SqlInt64" /> 结构转换为 <see cref="T:System.Data.SqlTypes.SqlByte" />。</summary>
      <returns vsli:raw="A &lt;see cref=&quot;T:System.Data.SqlTypes.SqlByte&quot; /&gt; structure whose &lt;see langword=&quot;Value&quot; /&gt; equals the &lt;see langword=&quot;Value&quot; /&gt; of this &lt;see cref=&quot;T:System.Data.SqlTypes.SqlInt64&quot; /&gt; structure.">一个 <see cref="T:System.Data.SqlTypes.SqlByte" /> 结构，其 <see langword="Value" /> 等于此 <see cref="T:System.Data.SqlTypes.SqlInt64" /> 结构的 <see langword="Value" />。</returns>
    </member>
    <member name="M:System.Data.SqlTypes.SqlInt64.ToSqlDecimal">
      <summary vsli:raw="Converts this &lt;see cref=&quot;T:System.Data.SqlTypes.SqlInt64&quot; /&gt; structure to &lt;see cref=&quot;T:System.Data.SqlTypes.SqlDecimal&quot; /&gt;.">将此 <see cref="T:System.Data.SqlTypes.SqlInt64" /> 结构转换为 <see cref="T:System.Data.SqlTypes.SqlDecimal" />。</summary>
      <returns vsli:raw="A new &lt;see cref=&quot;T:System.Data.SqlTypes.SqlDecimal&quot; /&gt; equal to the value of this &lt;see cref=&quot;T:System.Data.SqlTypes.SqlInt64&quot; /&gt;.">新的 <see cref="T:System.Data.SqlTypes.SqlDecimal" /> 等于此 <see cref="T:System.Data.SqlTypes.SqlInt64" /> 的值。</returns>
    </member>
    <member name="M:System.Data.SqlTypes.SqlInt64.ToSqlDouble">
      <summary vsli:raw="Converts this &lt;see cref=&quot;T:System.Data.SqlTypes.SqlInt64&quot; /&gt; structure to &lt;see cref=&quot;T:System.Data.SqlTypes.SqlDouble&quot; /&gt;.">将此 <see cref="T:System.Data.SqlTypes.SqlInt64" /> 结构转换为 <see cref="T:System.Data.SqlTypes.SqlDouble" />。</summary>
      <returns vsli:raw="A new &lt;see cref=&quot;T:System.Data.SqlTypes.SqlDouble&quot; /&gt; equal to the value of this &lt;see cref=&quot;T:System.Data.SqlTypes.SqlInt64&quot; /&gt;.">新的 <see cref="T:System.Data.SqlTypes.SqlDouble" /> 等于此 <see cref="T:System.Data.SqlTypes.SqlInt64" /> 的值。</returns>
    </member>
    <member name="M:System.Data.SqlTypes.SqlInt64.ToSqlInt16">
      <summary vsli:raw="Converts this &lt;see cref=&quot;T:System.Data.SqlTypes.SqlInt64&quot; /&gt; structure to &lt;see cref=&quot;T:System.Data.SqlTypes.SqlInt16&quot; /&gt;.">将此 <see cref="T:System.Data.SqlTypes.SqlInt64" /> 结构转换为 <see cref="T:System.Data.SqlTypes.SqlInt16" />。</summary>
      <returns vsli:raw="A new &lt;see cref=&quot;T:System.Data.SqlTypes.SqlInt16&quot; /&gt; equal to the value of this &lt;see cref=&quot;T:System.Data.SqlTypes.SqlInt64&quot; /&gt;.">新的 <see cref="T:System.Data.SqlTypes.SqlInt16" /> 等于此 <see cref="T:System.Data.SqlTypes.SqlInt64" /> 的值。</returns>
    </member>
    <member name="M:System.Data.SqlTypes.SqlInt64.ToSqlInt32">
      <summary vsli:raw="Converts this &lt;see cref=&quot;T:System.Data.SqlTypes.SqlInt64&quot; /&gt; structure to &lt;see cref=&quot;T:System.Data.SqlTypes.SqlInt32&quot; /&gt;.">将此 <see cref="T:System.Data.SqlTypes.SqlInt64" /> 结构转换为 <see cref="T:System.Data.SqlTypes.SqlInt32" />。</summary>
      <returns vsli:raw="A new &lt;see cref=&quot;T:System.Data.SqlTypes.SqlInt64&quot; /&gt; equal to the value of this &lt;see cref=&quot;T:System.Data.SqlTypes.SqlInt64&quot; /&gt;.">新的 <see cref="T:System.Data.SqlTypes.SqlInt64" /> 等于此 <see cref="T:System.Data.SqlTypes.SqlInt64" /> 的值。</returns>
    </member>
    <member name="M:System.Data.SqlTypes.SqlInt64.ToSqlMoney">
      <summary vsli:raw="Converts this &lt;see cref=&quot;T:System.Data.SqlTypes.SqlInt64&quot; /&gt; structure to &lt;see cref=&quot;T:System.Data.SqlTypes.SqlMoney&quot; /&gt;.">将此 <see cref="T:System.Data.SqlTypes.SqlInt64" /> 结构转换为 <see cref="T:System.Data.SqlTypes.SqlMoney" />。</summary>
      <returns vsli:raw="A new &lt;see cref=&quot;T:System.Data.SqlTypes.SqlMoney&quot; /&gt; equal to the value of this &lt;see cref=&quot;T:System.Data.SqlTypes.SqlInt64&quot; /&gt;.">新的 <see cref="T:System.Data.SqlTypes.SqlMoney" /> 等于此 <see cref="T:System.Data.SqlTypes.SqlInt64" /> 的值。</returns>
    </member>
    <member name="M:System.Data.SqlTypes.SqlInt64.ToSqlSingle">
      <summary vsli:raw="Converts this &lt;see cref=&quot;T:System.Data.SqlTypes.SqlInt64&quot; /&gt; structure to &lt;see cref=&quot;T:System.Data.SqlTypes.SqlSingle&quot; /&gt;.">将此 <see cref="T:System.Data.SqlTypes.SqlInt64" /> 结构转换为 <see cref="T:System.Data.SqlTypes.SqlSingle" />。</summary>
      <returns vsli:raw="A new &lt;see cref=&quot;T:System.Data.SqlTypes.SqlSingle&quot; /&gt; equal to the value of this &lt;see cref=&quot;T:System.Data.SqlTypes.SqlInt64&quot; /&gt;.">新的 <see cref="T:System.Data.SqlTypes.SqlSingle" /> 等于此 <see cref="T:System.Data.SqlTypes.SqlInt64" /> 的值。</returns>
    </member>
    <member name="M:System.Data.SqlTypes.SqlInt64.ToSqlString">
      <summary vsli:raw="Converts this &lt;see cref=&quot;T:System.Data.SqlTypes.SqlInt64&quot; /&gt; structure to &lt;see cref=&quot;T:System.Data.SqlTypes.SqlString&quot; /&gt;.">将此 <see cref="T:System.Data.SqlTypes.SqlInt64" /> 结构转换为 <see cref="T:System.Data.SqlTypes.SqlString" />。</summary>
      <returns vsli:raw="A &lt;see cref=&quot;T:System.Data.SqlTypes.SqlString&quot; /&gt; representing the value of this &lt;see cref=&quot;T:System.Data.SqlTypes.SqlInt64&quot; /&gt;.">一个 <see cref="T:System.Data.SqlTypes.SqlString" />，表示此 <see cref="T:System.Data.SqlTypes.SqlInt64" /> 的值。</returns>
    </member>
    <member name="M:System.Data.SqlTypes.SqlInt64.ToString">
      <summary vsli:raw="Converts this instance of &lt;see cref=&quot;T:System.Data.SqlTypes.SqlInt64&quot; /&gt; to &lt;see cref=&quot;T:System.String&quot; /&gt;.">将 <see cref="T:System.Data.SqlTypes.SqlInt64" /> 的此实例转换为 <see cref="T:System.String" />。</summary>
      <returns vsli:raw="A &lt;see cref=&quot;T:System.String&quot; /&gt; representing the value of this &lt;see cref=&quot;T:System.Data.SqlTypes.SqlInt64&quot; /&gt;.">一个 <see cref="T:System.String" />，表示此 <see cref="T:System.Data.SqlTypes.SqlInt64" /> 的值。</returns>
    </member>
    <member name="M:System.Data.SqlTypes.SqlInt64.Xor(System.Data.SqlTypes.SqlInt64,System.Data.SqlTypes.SqlInt64)">
      <summary vsli:raw="Performs a bitwise exclusive-OR operation on the supplied parameters.">对提供的参数执行按位“异或”运算。</summary>
      <param name="x" vsli:raw="A &lt;see cref=&quot;T:System.Data.SqlTypes.SqlInt64&quot; /&gt; structure.">
        <see cref="T:System.Data.SqlTypes.SqlInt64" /> 结构。</param>
      <param name="y" vsli:raw="A &lt;see cref=&quot;T:System.Data.SqlTypes.SqlInt64&quot; /&gt; structure.">
        <see cref="T:System.Data.SqlTypes.SqlInt64" /> 结构。</param>
      <returns vsli:raw="A &lt;see cref=&quot;T:System.Data.SqlTypes.SqlInt64&quot; /&gt; structure that contains the results of the bitwise XOR operation.">一个 <see cref="T:System.Data.SqlTypes.SqlInt64" /> 结构，它包含按位“异或”运算的结果。</returns>
    </member>
    <member name="P:System.Data.SqlTypes.SqlInt64.IsNull">
      <summary vsli:raw="Gets a Boolean value that indicates whether this &lt;see cref=&quot;T:System.Data.SqlTypes.SqlInt64&quot; /&gt; structure is null.">获取一个布尔值，该值指示此 <see cref="T:System.Data.SqlTypes.SqlInt64" /> 结构是否为 null。</summary>
      <returns vsli:raw="&lt;see langword=&quot;true&quot; /&gt; if null. Otherwise, &lt;see langword=&quot;false&quot; /&gt;.">如果为 null，则返回 <see langword="true" />。 否则为 <see langword="false" />。</returns>
    </member>
    <member name="P:System.Data.SqlTypes.SqlInt64.Value">
      <summary vsli:raw="Gets the value of this &lt;see cref=&quot;T:System.Data.SqlTypes.SqlInt64&quot; /&gt; structure. This property is read-only.">获取此 <see cref="T:System.Data.SqlTypes.SqlInt64" /> 结构的值。 此属性为只读。</summary>
      <returns vsli:raw="A long integer representing the value of this &lt;see cref=&quot;T:System.Data.SqlTypes.SqlInt64&quot; /&gt; structure.">一个长整型，表示此 <see cref="T:System.Data.SqlTypes.SqlInt64" /> 结构的值。</returns>
    </member>
    <member name="T:System.Data.SqlTypes.SqlMoney">
      <summary vsli:raw="Represents a currency value ranging from -2 63 (or -922,337,203,685,477.5808) to 2 63 -1 (or +922,337,203,685,477.5807) with an accuracy to a ten-thousandth of currency unit to be stored in or retrieved from a database.">表示要存储在数据库中或要从数据库中检索的货币值，范围介于 -2 63 （或 -922,337,203,685,477.5808） to 2 63 -1 （或 +922,337,203,685,477.5807）之间，精度为千分之十货币单位。</summary>
    </member>
    <member name="F:System.Data.SqlTypes.SqlMoney.MaxValue">
      <summary vsli:raw="Represents the maximum value that can be assigned to the &lt;see cref=&quot;P:System.Data.SqlTypes.SqlMoney.Value&quot; /&gt; property of an instance of the &lt;see cref=&quot;T:System.Data.SqlTypes.SqlMoney&quot; /&gt; class.">表示可分配给 <see cref="P:System.Data.SqlTypes.SqlMoney.Value" /> 类实例的 <see cref="T:System.Data.SqlTypes.SqlMoney" /> 属性的最大值。</summary>
    </member>
    <member name="F:System.Data.SqlTypes.SqlMoney.MinValue">
      <summary vsli:raw="Represents the minimum value that can be assigned to &lt;see cref=&quot;P:System.Data.SqlTypes.SqlMoney.Value&quot; /&gt; property of an instance of the &lt;see cref=&quot;T:System.Data.SqlTypes.SqlMoney&quot; /&gt; class.">表示可分配给 <see cref="P:System.Data.SqlTypes.SqlMoney.Value" /> 类实例的 <see cref="T:System.Data.SqlTypes.SqlMoney" /> 属性的最小值。</summary>
    </member>
    <member name="F:System.Data.SqlTypes.SqlMoney.Null">
      <summary vsli:raw="Represents a &lt;see cref=&quot;T:System.DBNull&quot; /&gt; that can be assigned to this instance of the &lt;see cref=&quot;T:System.Data.SqlTypes.SqlMoney&quot; /&gt; class.">表示可指派给 <see cref="T:System.DBNull" /> 类的此实例的 <see cref="T:System.Data.SqlTypes.SqlMoney" />。</summary>
    </member>
    <member name="F:System.Data.SqlTypes.SqlMoney.Zero">
      <summary vsli:raw="Represents the zero value that can be assigned to the &lt;see cref=&quot;P:System.Data.SqlTypes.SqlMoney.Value&quot; /&gt; property of an instance of the &lt;see cref=&quot;T:System.Data.SqlTypes.SqlMoney&quot; /&gt; class.">表示可分配给 <see cref="P:System.Data.SqlTypes.SqlMoney.Value" /> 类实例的 <see cref="T:System.Data.SqlTypes.SqlMoney" /> 属性的零值。</summary>
    </member>
    <member name="M:System.Data.SqlTypes.SqlMoney.#ctor(System.Decimal)">
      <summary vsli:raw="Initializes a new instance of the &lt;see cref=&quot;T:System.Data.SqlTypes.SqlMoney&quot; /&gt; class with the specified &lt;see cref=&quot;T:System.Decimal&quot; /&gt; value.">使用指定的 <see cref="T:System.Decimal" /> 值初始化 <see cref="T:System.Data.SqlTypes.SqlMoney" /> 类的新实例。</summary>
      <param name="value" vsli:raw="The monetary value to initialize.">要初始化的货币值。</param>
    </member>
    <member name="M:System.Data.SqlTypes.SqlMoney.#ctor(System.Double)">
      <summary vsli:raw="Initializes a new instance of the &lt;see cref=&quot;T:System.Data.SqlTypes.SqlMoney&quot; /&gt; class with specified double value.">使用指定的双精度型值初始化 <see cref="T:System.Data.SqlTypes.SqlMoney" /> 类的新实例。</summary>
      <param name="value" vsli:raw="The monetary value to initialize.">要初始化的货币值。</param>
    </member>
    <member name="M:System.Data.SqlTypes.SqlMoney.#ctor(System.Int32)">
      <summary vsli:raw="Initializes a new instance of the &lt;see cref=&quot;T:System.Data.SqlTypes.SqlMoney&quot; /&gt; class with the specified integer value.">用指定的整数值初始化 <see cref="T:System.Data.SqlTypes.SqlMoney" /> 类的新实例。</summary>
      <param name="value" vsli:raw="The monetary value to initialize.">要初始化的货币值。</param>
    </member>
    <member name="M:System.Data.SqlTypes.SqlMoney.#ctor(System.Int64)">
      <summary vsli:raw="Initializes a new instance of the &lt;see cref=&quot;T:System.Data.SqlTypes.SqlMoney&quot; /&gt; class with the specified long integer value.">使用指定的长整型值初始化 <see cref="T:System.Data.SqlTypes.SqlMoney" /> 类的新实例。</summary>
      <param name="value" vsli:raw="The monetary value to initialize.">要初始化的货币值。</param>
    </member>
    <member name="M:System.Data.SqlTypes.SqlMoney.Add(System.Data.SqlTypes.SqlMoney,System.Data.SqlTypes.SqlMoney)">
      <summary vsli:raw="Calculates the sum of the two &lt;see cref=&quot;T:System.Data.SqlTypes.SqlMoney&quot; /&gt; parameters.">计算两个 <see cref="T:System.Data.SqlTypes.SqlMoney" /> 参数的和。</summary>
      <param name="x" vsli:raw="A &lt;see cref=&quot;T:System.Data.SqlTypes.SqlMoney&quot; /&gt; structure.">
        <see cref="T:System.Data.SqlTypes.SqlMoney" /> 结构。</param>
      <param name="y" vsli:raw="A &lt;see cref=&quot;T:System.Data.SqlTypes.SqlMoney&quot; /&gt; structure.">
        <see cref="T:System.Data.SqlTypes.SqlMoney" /> 结构。</param>
      <returns vsli:raw="A new &lt;see cref=&quot;T:System.Data.SqlTypes.SqlMoney&quot; /&gt; structure whose &lt;see cref=&quot;P:System.Data.SqlTypes.SqlMoney.Value&quot; /&gt; contains the sum of the two &lt;see cref=&quot;T:System.Data.SqlTypes.SqlMoney&quot; /&gt; parameters.">一个新的 <see cref="T:System.Data.SqlTypes.SqlMoney" /> 结构，它的 <see cref="P:System.Data.SqlTypes.SqlMoney.Value" /> 包含两个 <see cref="T:System.Data.SqlTypes.SqlMoney" /> 参数的和。</returns>
    </member>
    <member name="M:System.Data.SqlTypes.SqlMoney.CompareTo(System.Data.SqlTypes.SqlMoney)">
      <summary vsli:raw="Compares this &lt;see cref=&quot;T:System.Data.SqlTypes.SqlMoney&quot; /&gt; instance to the supplied &lt;see cref=&quot;T:System.Data.SqlTypes.SqlMoney&quot; /&gt; and returns an indication of their relative values.">将此 <see cref="T:System.Data.SqlTypes.SqlMoney" /> 实例与所提供的 <see cref="T:System.Data.SqlTypes.SqlMoney" /> 进行比较，并返回二者相对值的指示值。</summary>
      <param name="value" vsli:raw="The &lt;see cref=&quot;T:System.Data.SqlTypes.SqlMoney&quot; /&gt; to be compared.">要比较的 <see cref="T:System.Data.SqlTypes.SqlMoney" />。</param>
      <returns vsli:raw="A signed number that indicates the relative values of the instance and the object.  &#xA;  &#xA; &lt;list type=&quot;table&quot;&gt;&lt;listheader&gt;&lt;term&gt; Return value&lt;/term&gt;&lt;description&gt; Condition&lt;/description&gt;&lt;/listheader&gt;&lt;item&gt;&lt;term&gt; Less than zero&lt;/term&gt;&lt;description&gt; This instance is less than the object.&lt;/description&gt;&lt;/item&gt;&lt;item&gt;&lt;term&gt; Zero&lt;/term&gt;&lt;description&gt; This instance is the same as the object.&lt;/description&gt;&lt;/item&gt;&lt;item&gt;&lt;term&gt; Greater than zero&lt;/term&gt;&lt;description&gt; This instance is greater than the object  &#xA;  &#xA; -or-  &#xA;  &#xA; The object is a null reference (&lt;see langword=&quot;Nothing&quot; /&gt; in Visual Basic)&lt;/description&gt;&lt;/item&gt;&lt;/list&gt;">一个有符号的数字，它指示该实例和对象的相对值。  
  
 <list type="table"><listheader><term> 返回值</term><description> 条件</description></listheader><item><term> 小于零</term><description> 此实例小于该对象。</description></item><item><term> 零</term><description> 此实例等于该对象。</description></item><item><term> 大于零</term><description> 此实例大于该对象 
- 或 - 
该对象是空引用（在 Visual Basic 中为 <see langword="Nothing" />）</description></item></list></returns>
    </member>
    <member name="M:System.Data.SqlTypes.SqlMoney.CompareTo(System.Object)">
      <summary vsli:raw="Compares this &lt;see cref=&quot;T:System.Data.SqlTypes.SqlMoney&quot; /&gt; instance to the supplied &lt;see cref=&quot;T:System.Object&quot; /&gt; and returns an indication of their relative values.">将此 <see cref="T:System.Data.SqlTypes.SqlMoney" /> 实例与所提供的 <see cref="T:System.Object" /> 进行比较，并返回二者相对值的指示值。</summary>
      <param name="value" vsli:raw="The &lt;see cref=&quot;T:System.Object&quot; /&gt; to be compared.">要比较的 <see cref="T:System.Object" />。</param>
      <returns vsli:raw="A signed number that indicates the relative values of the instance and the object.  &#xA;  &#xA; &lt;list type=&quot;table&quot;&gt;&lt;listheader&gt;&lt;term&gt; Return value&lt;/term&gt;&lt;description&gt; Condition&lt;/description&gt;&lt;/listheader&gt;&lt;item&gt;&lt;term&gt; Less than zero&lt;/term&gt;&lt;description&gt; This instance is less than the object.&lt;/description&gt;&lt;/item&gt;&lt;item&gt;&lt;term&gt; Zero&lt;/term&gt;&lt;description&gt; This instance is the same as the object.&lt;/description&gt;&lt;/item&gt;&lt;item&gt;&lt;term&gt; Greater than zero&lt;/term&gt;&lt;description&gt; This instance is greater than the object  &#xA;  &#xA; -or-  &#xA;  &#xA; The object is a null reference (&lt;see langword=&quot;Nothing&quot; /&gt; in Visual Basic)&lt;/description&gt;&lt;/item&gt;&lt;/list&gt;">一个有符号的数字，它指示该实例和对象的相对值。  
  
 <list type="table"><listheader><term> 返回值</term><description> 条件</description></listheader><item><term> 小于零</term><description> 此实例小于该对象。</description></item><item><term> 零</term><description> 此实例等于该对象。</description></item><item><term> 大于零</term><description> 此实例大于该对象 
- 或 - 
该对象是空引用（在 Visual Basic 中为 <see langword="Nothing" />）</description></item></list></returns>
    </member>
    <member name="M:System.Data.SqlTypes.SqlMoney.Divide(System.Data.SqlTypes.SqlMoney,System.Data.SqlTypes.SqlMoney)">
      <summary vsli:raw="The division operator divides the first &lt;see cref=&quot;T:System.Data.SqlTypes.SqlMoney&quot; /&gt; parameter by the second.">除法运算符将第一个 <see cref="T:System.Data.SqlTypes.SqlMoney" /> 参数除以第二个参数。</summary>
      <param name="x" vsli:raw="A &lt;see cref=&quot;T:System.Data.SqlTypes.SqlMoney&quot; /&gt; structure.">
        <see cref="T:System.Data.SqlTypes.SqlMoney" /> 结构。</param>
      <param name="y" vsli:raw="A &lt;see cref=&quot;T:System.Data.SqlTypes.SqlMoney&quot; /&gt; structure.">
        <see cref="T:System.Data.SqlTypes.SqlMoney" /> 结构。</param>
      <returns vsli:raw="A new &lt;see cref=&quot;T:System.Data.SqlTypes.SqlMoney&quot; /&gt; structure whose &lt;see cref=&quot;P:System.Data.SqlTypes.SqlMoney.Value&quot; /&gt; contains the results of the division.">一个新的 <see cref="T:System.Data.SqlTypes.SqlMoney" /> 结构，它的 <see cref="P:System.Data.SqlTypes.SqlMoney.Value" /> 包含该除法运算的结果。</returns>
    </member>
    <member name="M:System.Data.SqlTypes.SqlMoney.Equals(System.Data.SqlTypes.SqlMoney,System.Data.SqlTypes.SqlMoney)">
      <summary vsli:raw="Performs a logical comparison of the two &lt;see cref=&quot;T:System.Data.SqlTypes.SqlMoney&quot; /&gt; parameters to determine whether they are equal.">对两个 <see cref="T:System.Data.SqlTypes.SqlMoney" /> 参数执行逻辑比较，以确定它们是否相等。</summary>
      <param name="x" vsli:raw="A &lt;see cref=&quot;T:System.Data.SqlTypes.SqlMoney&quot; /&gt; structure.">
        <see cref="T:System.Data.SqlTypes.SqlMoney" /> 结构。</param>
      <param name="y" vsli:raw="A &lt;see cref=&quot;T:System.Data.SqlTypes.SqlMoney&quot; /&gt; structure.">
        <see cref="T:System.Data.SqlTypes.SqlMoney" /> 结构。</param>
      <returns vsli:raw="&lt;see langword=&quot;true&quot; /&gt; if the two values are equal. Otherwise, &lt;see langword=&quot;false&quot; /&gt;. If either instance is null, then the &lt;see langword=&quot;SqlMoney&quot; /&gt; will be null.">如果两个值相等，则为 <see langword="true" />。 否则为 <see langword="false" />。 如果任一实例为 null，则 <see langword="SqlMoney" /> 将为 null。</returns>
    </member>
    <member name="M:System.Data.SqlTypes.SqlMoney.Equals(System.Object)">
      <summary vsli:raw="Compares the supplied object parameter to the &lt;see cref=&quot;P:System.Data.SqlTypes.SqlMoney.Value&quot; /&gt; property of the &lt;see cref=&quot;T:System.Data.SqlTypes.SqlMoney&quot; /&gt; object.">将提供的对象参数与 <see cref="P:System.Data.SqlTypes.SqlMoney.Value" /> 对象的 <see cref="T:System.Data.SqlTypes.SqlMoney" /> 属性进行比较。</summary>
      <param name="value" vsli:raw="The object to be compared.">要比较的对象。</param>
      <returns vsli:raw="&lt;see langword=&quot;true&quot; /&gt; if the object is an instance of &lt;see cref=&quot;T:System.Data.SqlTypes.SqlMoney&quot; /&gt; and the two are equal; otherwise, &lt;see langword=&quot;false&quot; /&gt;.">如果对象是 <see cref="T:System.Data.SqlTypes.SqlMoney" /> 的实例并且两者相等，则返回 <see langword="true" />；否则，返回 <see langword="false" />。</returns>
    </member>
    <member name="M:System.Data.SqlTypes.SqlMoney.GetHashCode">
      <summary vsli:raw="Gets the hash code for this instance.">获取此实例的哈希代码。</summary>
      <returns vsli:raw="A 32-bit signed integer hash code.">32 位有符号整数哈希代码。</returns>
    </member>
    <member name="M:System.Data.SqlTypes.SqlMoney.GetXsdType(System.Xml.Schema.XmlSchemaSet)">
      <summary vsli:raw="Returns the XML Schema definition language (XSD) of the specified &lt;see cref=&quot;T:System.Xml.Schema.XmlSchemaSet&quot; /&gt;.">返回指定的 <see cref="T:System.Xml.Schema.XmlSchemaSet" /> 的 XML 架构定义语言 (XSD)。</summary>
      <param name="schemaSet" vsli:raw="An &lt;see cref=&quot;T:System.Xml.Schema.XmlSchemaSet&quot; /&gt;.">
        <see cref="T:System.Xml.Schema.XmlSchemaSet" />。</param>
      <returns vsli:raw="A &lt;see langword=&quot;string&quot; /&gt; that indicates the XSD of the specified &lt;see cref=&quot;T:System.Xml.Schema.XmlSchemaSet&quot; /&gt;.">一个指示指定的 <see cref="T:System.Xml.Schema.XmlSchemaSet" /> 的 XSD 的 <see langword="string" />。</returns>
    </member>
    <member name="M:System.Data.SqlTypes.SqlMoney.GreaterThan(System.Data.SqlTypes.SqlMoney,System.Data.SqlTypes.SqlMoney)">
      <summary vsli:raw="Performs a logical comparison of the two &lt;see cref=&quot;T:System.Data.SqlTypes.SqlMoney&quot; /&gt; parameters to determine whether the first is greater than the second.">对两个 <see cref="T:System.Data.SqlTypes.SqlMoney" /> 参数执行逻辑比较，以确定第一个参数是否大于第二个参数。</summary>
      <param name="x" vsli:raw="A &lt;see cref=&quot;T:System.Data.SqlTypes.SqlMoney&quot; /&gt; structure.">
        <see cref="T:System.Data.SqlTypes.SqlMoney" /> 结构。</param>
      <param name="y" vsli:raw="A &lt;see cref=&quot;T:System.Data.SqlTypes.SqlMoney&quot; /&gt; structure.">
        <see cref="T:System.Data.SqlTypes.SqlMoney" /> 结构。</param>
      <returns vsli:raw="A &lt;see cref=&quot;T:System.Data.SqlTypes.SqlBoolean&quot; /&gt; that is &lt;see cref=&quot;F:System.Data.SqlTypes.SqlBoolean.True&quot; /&gt; if the first instance is greater than the second instance. Otherwise, &lt;see cref=&quot;F:System.Data.SqlTypes.SqlBoolean.False&quot; /&gt;. If either instance of &lt;see cref=&quot;T:System.Data.SqlTypes.SqlMoney&quot; /&gt; is null, the &lt;see cref=&quot;P:System.Data.SqlTypes.SqlBoolean.Value&quot; /&gt; of the &lt;see cref=&quot;T:System.Data.SqlTypes.SqlBoolean&quot; /&gt; will be &lt;see cref=&quot;F:System.Data.SqlTypes.SqlBoolean.Null&quot; /&gt;.">一个 <see cref="T:System.Data.SqlTypes.SqlBoolean" />，如果第一个实例大于第二个实例，则它为 <see cref="F:System.Data.SqlTypes.SqlBoolean.True" />。 否则为 <see cref="F:System.Data.SqlTypes.SqlBoolean.False" />。 如果 <see cref="T:System.Data.SqlTypes.SqlMoney" /> 的任一实例为空，则 <see cref="P:System.Data.SqlTypes.SqlBoolean.Value" /> 的 <see cref="T:System.Data.SqlTypes.SqlBoolean" /> 将为 <see cref="F:System.Data.SqlTypes.SqlBoolean.Null" />。</returns>
    </member>
    <member name="M:System.Data.SqlTypes.SqlMoney.GreaterThanOrEqual(System.Data.SqlTypes.SqlMoney,System.Data.SqlTypes.SqlMoney)">
      <summary vsli:raw="Performs a logical comparison of the two &lt;see cref=&quot;T:System.Data.SqlTypes.SqlMoney&quot; /&gt; parameters to determine whether the first is greater than or equal to the second.">对两个 <see cref="T:System.Data.SqlTypes.SqlMoney" /> 参数执行逻辑比较，以确定第一个参数是否大于或等于第二个参数。</summary>
      <param name="x" vsli:raw="A &lt;see cref=&quot;T:System.Data.SqlTypes.SqlMoney&quot; /&gt; structure.">
        <see cref="T:System.Data.SqlTypes.SqlMoney" /> 结构。</param>
      <param name="y" vsli:raw="A &lt;see cref=&quot;T:System.Data.SqlTypes.SqlMoney&quot; /&gt; structure.">
        <see cref="T:System.Data.SqlTypes.SqlMoney" /> 结构。</param>
      <returns vsli:raw="A &lt;see cref=&quot;T:System.Data.SqlTypes.SqlBoolean&quot; /&gt; that is &lt;see cref=&quot;F:System.Data.SqlTypes.SqlBoolean.True&quot; /&gt; if the first instance is greater than or equal to the second instance. Otherwise, &lt;see cref=&quot;F:System.Data.SqlTypes.SqlBoolean.False&quot; /&gt;. If either instance of &lt;see cref=&quot;T:System.Data.SqlTypes.SqlMoney&quot; /&gt; is null, the &lt;see cref=&quot;P:System.Data.SqlTypes.SqlBoolean.Value&quot; /&gt; of the &lt;see cref=&quot;T:System.Data.SqlTypes.SqlBoolean&quot; /&gt; will be &lt;see cref=&quot;F:System.Data.SqlTypes.SqlBoolean.Null&quot; /&gt;.">一个 <see cref="T:System.Data.SqlTypes.SqlBoolean" />，如果第一个实例大于或等于第二个实例，则为 <see cref="F:System.Data.SqlTypes.SqlBoolean.True" />。 否则为 <see cref="F:System.Data.SqlTypes.SqlBoolean.False" />。 如果 <see cref="T:System.Data.SqlTypes.SqlMoney" /> 的任一实例为空，则 <see cref="P:System.Data.SqlTypes.SqlBoolean.Value" /> 的 <see cref="T:System.Data.SqlTypes.SqlBoolean" /> 将为 <see cref="F:System.Data.SqlTypes.SqlBoolean.Null" />。</returns>
    </member>
    <member name="M:System.Data.SqlTypes.SqlMoney.LessThan(System.Data.SqlTypes.SqlMoney,System.Data.SqlTypes.SqlMoney)">
      <summary vsli:raw="Performs a logical comparison of the two &lt;see cref=&quot;T:System.Data.SqlTypes.SqlMoney&quot; /&gt; parameters to determine whether the first is less than the second.">对两个 <see cref="T:System.Data.SqlTypes.SqlMoney" /> 参数执行逻辑比较，以确定第一个参数是否小于第二个参数。</summary>
      <param name="x" vsli:raw="A &lt;see cref=&quot;T:System.Data.SqlTypes.SqlMoney&quot; /&gt; structure.">
        <see cref="T:System.Data.SqlTypes.SqlMoney" /> 结构。</param>
      <param name="y" vsli:raw="A &lt;see cref=&quot;T:System.Data.SqlTypes.SqlMoney&quot; /&gt; structure.">
        <see cref="T:System.Data.SqlTypes.SqlMoney" /> 结构。</param>
      <returns vsli:raw="A &lt;see cref=&quot;T:System.Data.SqlTypes.SqlBoolean&quot; /&gt; that is &lt;see cref=&quot;F:System.Data.SqlTypes.SqlBoolean.True&quot; /&gt; if the first instance is less than the second instance. Otherwise, &lt;see cref=&quot;F:System.Data.SqlTypes.SqlBoolean.False&quot; /&gt;. If either instance of &lt;see cref=&quot;T:System.Data.SqlTypes.SqlMoney&quot; /&gt; is null, the &lt;see cref=&quot;P:System.Data.SqlTypes.SqlBoolean.Value&quot; /&gt; of the &lt;see cref=&quot;T:System.Data.SqlTypes.SqlBoolean&quot; /&gt; will be &lt;see cref=&quot;F:System.Data.SqlTypes.SqlBoolean.Null&quot; /&gt;.">一个 <see cref="T:System.Data.SqlTypes.SqlBoolean" />，如果第一个实例小于第二个实例，则它为 <see cref="F:System.Data.SqlTypes.SqlBoolean.True" />。 否则为 <see cref="F:System.Data.SqlTypes.SqlBoolean.False" />。 如果 <see cref="T:System.Data.SqlTypes.SqlMoney" /> 的任一实例为空，则 <see cref="P:System.Data.SqlTypes.SqlBoolean.Value" /> 的 <see cref="T:System.Data.SqlTypes.SqlBoolean" /> 将为 <see cref="F:System.Data.SqlTypes.SqlBoolean.Null" />。</returns>
    </member>
    <member name="M:System.Data.SqlTypes.SqlMoney.LessThanOrEqual(System.Data.SqlTypes.SqlMoney,System.Data.SqlTypes.SqlMoney)">
      <summary vsli:raw="Performs a logical comparison of the two &lt;see cref=&quot;T:System.Data.SqlTypes.SqlMoney&quot; /&gt; parameters to determine whether the first is less than or equal to the second.">对两个 <see cref="T:System.Data.SqlTypes.SqlMoney" /> 参数执行逻辑比较，以确定第一个参数是否小于或等于第二个参数。</summary>
      <param name="x" vsli:raw="A &lt;see cref=&quot;T:System.Data.SqlTypes.SqlMoney&quot; /&gt; structure.">
        <see cref="T:System.Data.SqlTypes.SqlMoney" /> 结构。</param>
      <param name="y" vsli:raw="A &lt;see cref=&quot;T:System.Data.SqlTypes.SqlMoney&quot; /&gt; structure.">
        <see cref="T:System.Data.SqlTypes.SqlMoney" /> 结构。</param>
      <returns vsli:raw="A &lt;see cref=&quot;T:System.Data.SqlTypes.SqlBoolean&quot; /&gt; that is &lt;see cref=&quot;F:System.Data.SqlTypes.SqlBoolean.True&quot; /&gt; if the first instance is less than or equal to the second instance. Otherwise, &lt;see cref=&quot;F:System.Data.SqlTypes.SqlBoolean.False&quot; /&gt;. If either instance of &lt;see cref=&quot;T:System.Data.SqlTypes.SqlMoney&quot; /&gt; is null, the &lt;see cref=&quot;P:System.Data.SqlTypes.SqlBoolean.Value&quot; /&gt; of the &lt;see cref=&quot;T:System.Data.SqlTypes.SqlBoolean&quot; /&gt; will be &lt;see cref=&quot;F:System.Data.SqlTypes.SqlBoolean.Null&quot; /&gt;.">一个 <see cref="T:System.Data.SqlTypes.SqlBoolean" />，如果第一个实例小于或等于第二个实例，则它为 <see cref="F:System.Data.SqlTypes.SqlBoolean.True" />。 否则为 <see cref="F:System.Data.SqlTypes.SqlBoolean.False" />。 如果 <see cref="T:System.Data.SqlTypes.SqlMoney" /> 的任一实例为空，则 <see cref="P:System.Data.SqlTypes.SqlBoolean.Value" /> 的 <see cref="T:System.Data.SqlTypes.SqlBoolean" /> 将为 <see cref="F:System.Data.SqlTypes.SqlBoolean.Null" />。</returns>
    </member>
    <member name="M:System.Data.SqlTypes.SqlMoney.Multiply(System.Data.SqlTypes.SqlMoney,System.Data.SqlTypes.SqlMoney)">
      <summary vsli:raw="The multiplication operator calculates the product of the two &lt;see cref=&quot;T:System.Data.SqlTypes.SqlMoney&quot; /&gt; parameters.">乘法运算符计算两个 <see cref="T:System.Data.SqlTypes.SqlMoney" /> 参数的乘积。</summary>
      <param name="x" vsli:raw="A &lt;see cref=&quot;T:System.Data.SqlTypes.SqlMoney&quot; /&gt; structure.">
        <see cref="T:System.Data.SqlTypes.SqlMoney" /> 结构。</param>
      <param name="y" vsli:raw="A &lt;see cref=&quot;T:System.Data.SqlTypes.SqlMoney&quot; /&gt; structure.">
        <see cref="T:System.Data.SqlTypes.SqlMoney" /> 结构。</param>
      <returns vsli:raw="A new &lt;see cref=&quot;T:System.Data.SqlTypes.SqlMoney&quot; /&gt; structure whose &lt;see cref=&quot;P:System.Data.SqlTypes.SqlMoney.Value&quot; /&gt; contains the product of the multiplication.">一个新的 <see cref="T:System.Data.SqlTypes.SqlMoney" /> 结构，它的 <see cref="P:System.Data.SqlTypes.SqlMoney.Value" /> 包含该乘法运算的结果。</returns>
    </member>
    <member name="M:System.Data.SqlTypes.SqlMoney.NotEquals(System.Data.SqlTypes.SqlMoney,System.Data.SqlTypes.SqlMoney)">
      <summary vsli:raw="Performs a logical comparison of the two &lt;see cref=&quot;T:System.Data.SqlTypes.SqlMoney&quot; /&gt; parameters to determine whether they are not equal.">对两个 <see cref="T:System.Data.SqlTypes.SqlMoney" /> 参数执行逻辑比较，确定它们是否不相等。</summary>
      <param name="x" vsli:raw="A &lt;see cref=&quot;T:System.Data.SqlTypes.SqlMoney&quot; /&gt; structure.">
        <see cref="T:System.Data.SqlTypes.SqlMoney" /> 结构。</param>
      <param name="y" vsli:raw="A &lt;see cref=&quot;T:System.Data.SqlTypes.SqlMoney&quot; /&gt; structure.">
        <see cref="T:System.Data.SqlTypes.SqlMoney" /> 结构。</param>
      <returns vsli:raw="A &lt;see cref=&quot;T:System.Data.SqlTypes.SqlBoolean&quot; /&gt; that is &lt;see cref=&quot;F:System.Data.SqlTypes.SqlBoolean.True&quot; /&gt; if the two instances are not equal or &lt;see cref=&quot;F:System.Data.SqlTypes.SqlBoolean.False&quot; /&gt; if the two instances are equal. If either instance of &lt;see cref=&quot;T:System.Data.SqlTypes.SqlMoney&quot; /&gt; is null, the &lt;see cref=&quot;P:System.Data.SqlTypes.SqlBoolean.Value&quot; /&gt; of the &lt;see cref=&quot;T:System.Data.SqlTypes.SqlBoolean&quot; /&gt; will be &lt;see cref=&quot;F:System.Data.SqlTypes.SqlBoolean.Null&quot; /&gt;.">一个 <see cref="T:System.Data.SqlTypes.SqlBoolean" />，它在两个实例不等时为 <see cref="F:System.Data.SqlTypes.SqlBoolean.True" />，在两个实例相等时为 <see cref="F:System.Data.SqlTypes.SqlBoolean.False" />。 如果 <see cref="T:System.Data.SqlTypes.SqlMoney" /> 的任一实例为空，则 <see cref="P:System.Data.SqlTypes.SqlBoolean.Value" /> 的 <see cref="T:System.Data.SqlTypes.SqlBoolean" /> 将为 <see cref="F:System.Data.SqlTypes.SqlBoolean.Null" />。</returns>
    </member>
    <member name="M:System.Data.SqlTypes.SqlMoney.op_Addition(System.Data.SqlTypes.SqlMoney,System.Data.SqlTypes.SqlMoney)">
      <summary vsli:raw="Calculates the sum of the two &lt;see cref=&quot;T:System.Data.SqlTypes.SqlMoney&quot; /&gt; parameters.">计算两个 <see cref="T:System.Data.SqlTypes.SqlMoney" /> 参数的和。</summary>
      <param name="x" vsli:raw="A &lt;see cref=&quot;T:System.Data.SqlTypes.SqlMoney&quot; /&gt; structure.">
        <see cref="T:System.Data.SqlTypes.SqlMoney" /> 结构。</param>
      <param name="y" vsli:raw="A &lt;see cref=&quot;T:System.Data.SqlTypes.SqlMoney&quot; /&gt; structure.">
        <see cref="T:System.Data.SqlTypes.SqlMoney" /> 结构。</param>
      <returns vsli:raw="A new &lt;see cref=&quot;T:System.Data.SqlTypes.SqlMoney&quot; /&gt; structure whose &lt;see cref=&quot;P:System.Data.SqlTypes.SqlMoney.Value&quot; /&gt; contains the sum of the two &lt;see cref=&quot;T:System.Data.SqlTypes.SqlMoney&quot; /&gt; parameters.">一个新的 <see cref="T:System.Data.SqlTypes.SqlMoney" /> 结构，它的 <see cref="P:System.Data.SqlTypes.SqlMoney.Value" /> 包含两个 <see cref="T:System.Data.SqlTypes.SqlMoney" /> 参数的和。</returns>
    </member>
    <member name="M:System.Data.SqlTypes.SqlMoney.op_Division(System.Data.SqlTypes.SqlMoney,System.Data.SqlTypes.SqlMoney)">
      <summary vsli:raw="The division operator divides the first &lt;see cref=&quot;T:System.Data.SqlTypes.SqlMoney&quot; /&gt; parameter by the second.">除法运算符将第一个 <see cref="T:System.Data.SqlTypes.SqlMoney" /> 参数除以第二个参数。</summary>
      <param name="x" vsli:raw="A &lt;see cref=&quot;T:System.Data.SqlTypes.SqlMoney&quot; /&gt; structure.">
        <see cref="T:System.Data.SqlTypes.SqlMoney" /> 结构。</param>
      <param name="y" vsli:raw="A &lt;see cref=&quot;T:System.Data.SqlTypes.SqlMoney&quot; /&gt; structure.">
        <see cref="T:System.Data.SqlTypes.SqlMoney" /> 结构。</param>
      <returns vsli:raw="A new &lt;see cref=&quot;T:System.Data.SqlTypes.SqlMoney&quot; /&gt; structure whose &lt;see cref=&quot;P:System.Data.SqlTypes.SqlMoney.Value&quot; /&gt; contains the results of the division.">一个新的 <see cref="T:System.Data.SqlTypes.SqlMoney" /> 结构，它的 <see cref="P:System.Data.SqlTypes.SqlMoney.Value" /> 包含该除法运算的结果。</returns>
    </member>
    <member name="M:System.Data.SqlTypes.SqlMoney.op_Equality(System.Data.SqlTypes.SqlMoney,System.Data.SqlTypes.SqlMoney)">
      <summary vsli:raw="Performs a logical comparison of the two &lt;see cref=&quot;T:System.Data.SqlTypes.SqlMoney&quot; /&gt; parameters to determine whether they are equal.">对两个 <see cref="T:System.Data.SqlTypes.SqlMoney" /> 参数执行逻辑比较，以确定它们是否相等。</summary>
      <param name="x" vsli:raw="A &lt;see cref=&quot;T:System.Data.SqlTypes.SqlMoney&quot; /&gt; structure.">
        <see cref="T:System.Data.SqlTypes.SqlMoney" /> 结构。</param>
      <param name="y" vsli:raw="A &lt;see cref=&quot;T:System.Data.SqlTypes.SqlMoney&quot; /&gt; structure.">
        <see cref="T:System.Data.SqlTypes.SqlMoney" /> 结构。</param>
      <returns vsli:raw="A &lt;see cref=&quot;T:System.Data.SqlTypes.SqlBoolean&quot; /&gt; that is &lt;see cref=&quot;F:System.Data.SqlTypes.SqlBoolean.True&quot; /&gt; if the two instances are equal or &lt;see cref=&quot;F:System.Data.SqlTypes.SqlBoolean.False&quot; /&gt; if the two instances are not equal. If either instance of &lt;see cref=&quot;T:System.Data.SqlTypes.SqlMoney&quot; /&gt; is null, the &lt;see cref=&quot;P:System.Data.SqlTypes.SqlBoolean.Value&quot; /&gt; of the &lt;see cref=&quot;T:System.Data.SqlTypes.SqlBoolean&quot; /&gt; will be &lt;see cref=&quot;F:System.Data.SqlTypes.SqlBoolean.Null&quot; /&gt;.">一个 <see cref="T:System.Data.SqlTypes.SqlBoolean" />，它在两个实例相等时为 <see cref="F:System.Data.SqlTypes.SqlBoolean.True" />，在两个实例不等时为 <see cref="F:System.Data.SqlTypes.SqlBoolean.False" />。 如果 <see cref="T:System.Data.SqlTypes.SqlMoney" /> 的任一实例为空，则 <see cref="P:System.Data.SqlTypes.SqlBoolean.Value" /> 的 <see cref="T:System.Data.SqlTypes.SqlBoolean" /> 将为 <see cref="F:System.Data.SqlTypes.SqlBoolean.Null" />。</returns>
    </member>
    <member name="M:System.Data.SqlTypes.SqlMoney.op_Explicit(System.Data.SqlTypes.SqlBoolean)~System.Data.SqlTypes.SqlMoney">
      <summary vsli:raw="This implicit operator converts the supplied &lt;see cref=&quot;T:System.Data.SqlTypes.SqlBoolean&quot; /&gt; parameter to &lt;see cref=&quot;T:System.Data.SqlTypes.SqlMoney&quot; /&gt;.">此隐式运算符可将所提供的 <see cref="T:System.Data.SqlTypes.SqlBoolean" /> 参数转换为 <see cref="T:System.Data.SqlTypes.SqlMoney" />。</summary>
      <param name="x" vsli:raw="The &lt;see cref=&quot;T:System.Data.SqlTypes.SqlBoolean&quot; /&gt; structure to be converted.">要转换的 <see cref="T:System.Data.SqlTypes.SqlBoolean" /> 结构。</param>
      <returns vsli:raw="A new &lt;see cref=&quot;T:System.Data.SqlTypes.SqlMoney&quot; /&gt; structure whose &lt;see cref=&quot;P:System.Data.SqlTypes.SqlMoney.Value&quot; /&gt; property equals the &lt;see cref=&quot;P:System.Data.SqlTypes.SqlBoolean.ByteValue&quot; /&gt; property of the &lt;see cref=&quot;T:System.Data.SqlTypes.SqlBoolean&quot; /&gt; parameter.">一个新的 <see cref="T:System.Data.SqlTypes.SqlMoney" /> 结构，它的 <see cref="P:System.Data.SqlTypes.SqlMoney.Value" /> 属性等于 <see cref="P:System.Data.SqlTypes.SqlBoolean.ByteValue" /> 参数的 <see cref="T:System.Data.SqlTypes.SqlBoolean" /> 属性。</returns>
    </member>
    <member name="M:System.Data.SqlTypes.SqlMoney.op_Explicit(System.Data.SqlTypes.SqlDecimal)~System.Data.SqlTypes.SqlMoney">
      <summary vsli:raw="This operator converts the supplied &lt;see cref=&quot;T:System.Data.SqlTypes.SqlDecimal&quot; /&gt; parameter to &lt;see cref=&quot;T:System.Data.SqlTypes.SqlMoney&quot; /&gt;.">此运算符将提供的 <see cref="T:System.Data.SqlTypes.SqlDecimal" /> 参数转换为 <see cref="T:System.Data.SqlTypes.SqlMoney" />。</summary>
      <param name="x" vsli:raw="The &lt;see cref=&quot;T:System.Data.SqlTypes.SqlDecimal&quot; /&gt; structure to be converted.">要转换的 <see cref="T:System.Data.SqlTypes.SqlDecimal" /> 结构。</param>
      <returns vsli:raw="A new &lt;see cref=&quot;T:System.Data.SqlTypes.SqlMoney&quot; /&gt; structure whose &lt;see cref=&quot;P:System.Data.SqlTypes.SqlMoney.Value&quot; /&gt; property equals the &lt;see cref=&quot;P:System.Data.SqlTypes.SqlDecimal.Value&quot; /&gt; of the &lt;see cref=&quot;T:System.Data.SqlTypes.SqlDecimal&quot; /&gt; parameter.">一个新的 <see cref="T:System.Data.SqlTypes.SqlMoney" /> 结构，它的 <see cref="P:System.Data.SqlTypes.SqlMoney.Value" /> 属性等于 <see cref="P:System.Data.SqlTypes.SqlDecimal.Value" /> 参数的 <see cref="T:System.Data.SqlTypes.SqlDecimal" />。</returns>
    </member>
    <member name="M:System.Data.SqlTypes.SqlMoney.op_Explicit(System.Data.SqlTypes.SqlDouble)~System.Data.SqlTypes.SqlMoney">
      <summary vsli:raw="This operator converts the supplied &lt;see cref=&quot;T:System.Data.SqlTypes.SqlDouble&quot; /&gt; parameter to &lt;see cref=&quot;T:System.Data.SqlTypes.SqlMoney&quot; /&gt;.">此运算符将提供的 <see cref="T:System.Data.SqlTypes.SqlDouble" /> 参数转换为 <see cref="T:System.Data.SqlTypes.SqlMoney" />。</summary>
      <param name="x" vsli:raw="The &lt;see cref=&quot;T:System.Data.SqlTypes.SqlDouble&quot; /&gt; structure to be converted.">要转换的 <see cref="T:System.Data.SqlTypes.SqlDouble" /> 结构。</param>
      <returns vsli:raw="A new &lt;see cref=&quot;T:System.Data.SqlTypes.SqlMoney&quot; /&gt; structure whose &lt;see cref=&quot;P:System.Data.SqlTypes.SqlMoney.Value&quot; /&gt; property equals the &lt;see cref=&quot;P:System.Data.SqlTypes.SqlDouble.Value&quot; /&gt; of the &lt;see cref=&quot;T:System.Data.SqlTypes.SqlDouble&quot; /&gt; parameter.">一个新的 <see cref="T:System.Data.SqlTypes.SqlMoney" /> 结构，它的 <see cref="P:System.Data.SqlTypes.SqlMoney.Value" /> 属性等于 <see cref="P:System.Data.SqlTypes.SqlDouble.Value" /> 参数的 <see cref="T:System.Data.SqlTypes.SqlDouble" />。</returns>
    </member>
    <member name="M:System.Data.SqlTypes.SqlMoney.op_Explicit(System.Data.SqlTypes.SqlMoney)~System.Decimal">
      <summary vsli:raw="Converts the specified &lt;see cref=&quot;T:System.Data.SqlTypes.SqlMoney&quot; /&gt; structure to &lt;see cref=&quot;T:System.Decimal&quot; /&gt;.">将指定的 <see cref="T:System.Data.SqlTypes.SqlMoney" /> 结构转换为 <see cref="T:System.Decimal" />。</summary>
      <param name="x" vsli:raw="A &lt;see cref=&quot;T:System.Data.SqlTypes.SqlMoney&quot; /&gt; structure.">
        <see cref="T:System.Data.SqlTypes.SqlMoney" /> 结构。</param>
      <returns vsli:raw="A new &lt;see cref=&quot;T:System.Decimal&quot; /&gt; structure whose value equals the &lt;see cref=&quot;P:System.Data.SqlTypes.SqlMoney.Value&quot; /&gt; of the &lt;see cref=&quot;T:System.Data.SqlTypes.SqlMoney&quot; /&gt; parameter.">一个新 <see cref="T:System.Decimal" /> 结构，它的值等于 <see cref="P:System.Data.SqlTypes.SqlMoney.Value" /> 参数的 <see cref="T:System.Data.SqlTypes.SqlMoney" />。</returns>
    </member>
    <member name="M:System.Data.SqlTypes.SqlMoney.op_Explicit(System.Data.SqlTypes.SqlSingle)~System.Data.SqlTypes.SqlMoney">
      <summary vsli:raw="This operator converts the supplied &lt;see cref=&quot;T:System.Data.SqlTypes.SqlSingle&quot; /&gt; parameter to &lt;see cref=&quot;T:System.Data.SqlTypes.SqlMoney&quot; /&gt;.">此运算符将提供的 <see cref="T:System.Data.SqlTypes.SqlSingle" /> 参数转换为 <see cref="T:System.Data.SqlTypes.SqlMoney" />。</summary>
      <param name="x" vsli:raw="The &lt;see cref=&quot;T:System.Data.SqlTypes.SqlSingle&quot; /&gt; structure to be converted.">要转换的 <see cref="T:System.Data.SqlTypes.SqlSingle" /> 结构。</param>
      <returns vsli:raw="A new &lt;see cref=&quot;T:System.Data.SqlTypes.SqlMoney&quot; /&gt; structure whose &lt;see cref=&quot;P:System.Data.SqlTypes.SqlMoney.Value&quot; /&gt; property equals the &lt;see cref=&quot;P:System.Data.SqlTypes.SqlSingle.Value&quot; /&gt; of the &lt;see cref=&quot;T:System.Data.SqlTypes.SqlSingle&quot; /&gt; parameter.">一个新的 <see cref="T:System.Data.SqlTypes.SqlMoney" /> 结构，它的 <see cref="P:System.Data.SqlTypes.SqlMoney.Value" /> 属性等于 <see cref="P:System.Data.SqlTypes.SqlSingle.Value" /> 参数的 <see cref="T:System.Data.SqlTypes.SqlSingle" />。</returns>
    </member>
    <member name="M:System.Data.SqlTypes.SqlMoney.op_Explicit(System.Data.SqlTypes.SqlString)~System.Data.SqlTypes.SqlMoney">
      <summary vsli:raw="This operator converts the &lt;see cref=&quot;T:System.Data.SqlTypes.SqlString&quot; /&gt; parameter to &lt;see cref=&quot;T:System.Data.SqlTypes.SqlMoney&quot; /&gt;.">此运算符将 <see cref="T:System.Data.SqlTypes.SqlString" /> 参数转换为 <see cref="T:System.Data.SqlTypes.SqlMoney" />。</summary>
      <param name="x" vsli:raw="The &lt;see cref=&quot;T:System.Data.SqlTypes.SqlString&quot; /&gt; object to be converted.">要转换的 <see cref="T:System.Data.SqlTypes.SqlString" /> 对象。</param>
      <returns vsli:raw="A new &lt;see cref=&quot;T:System.Data.SqlTypes.SqlMoney&quot; /&gt; structure whose &lt;see cref=&quot;P:System.Data.SqlTypes.SqlMoney.Value&quot; /&gt; property equals the value represented by the &lt;see cref=&quot;T:System.Data.SqlTypes.SqlString&quot; /&gt; parameter.">一个新的 <see cref="T:System.Data.SqlTypes.SqlMoney" /> 结构，它的 <see cref="P:System.Data.SqlTypes.SqlMoney.Value" /> 属性等于 <see cref="T:System.Data.SqlTypes.SqlString" /> 参数表示的值。</returns>
    </member>
    <member name="M:System.Data.SqlTypes.SqlMoney.op_Explicit(System.Double)~System.Data.SqlTypes.SqlMoney">
      <summary vsli:raw="This implicit operator converts the supplied &lt;see cref=&quot;T:System.Data.SqlTypes.SqlDouble&quot; /&gt; parameter to &lt;see cref=&quot;T:System.Data.SqlTypes.SqlMoney&quot; /&gt;.">此隐式运算符可将所提供的 <see cref="T:System.Data.SqlTypes.SqlDouble" /> 参数转换为 <see cref="T:System.Data.SqlTypes.SqlMoney" />。</summary>
      <param name="x" vsli:raw="The &lt;see cref=&quot;T:System.Data.SqlTypes.SqlDouble&quot; /&gt; structure to be converted.">要转换的 <see cref="T:System.Data.SqlTypes.SqlDouble" /> 结构。</param>
      <returns vsli:raw="A new &lt;see cref=&quot;T:System.Data.SqlTypes.SqlMoney&quot; /&gt; structure whose &lt;see cref=&quot;P:System.Data.SqlTypes.SqlMoney.Value&quot; /&gt; property equals the &lt;see cref=&quot;P:System.Data.SqlTypes.SqlBoolean.ByteValue&quot; /&gt; property of the &lt;see cref=&quot;T:System.Data.SqlTypes.SqlDouble&quot; /&gt; parameter.">一个新的 <see cref="T:System.Data.SqlTypes.SqlMoney" /> 结构，它的 <see cref="P:System.Data.SqlTypes.SqlMoney.Value" /> 属性等于 <see cref="P:System.Data.SqlTypes.SqlBoolean.ByteValue" /> 参数的 <see cref="T:System.Data.SqlTypes.SqlDouble" /> 属性。</returns>
    </member>
    <member name="M:System.Data.SqlTypes.SqlMoney.op_GreaterThan(System.Data.SqlTypes.SqlMoney,System.Data.SqlTypes.SqlMoney)">
      <summary vsli:raw="Performs a logical comparison of the two &lt;see cref=&quot;T:System.Data.SqlTypes.SqlMoney&quot; /&gt; parameters to determine whether the first is greater than the second.">对两个 <see cref="T:System.Data.SqlTypes.SqlMoney" /> 参数执行逻辑比较，以确定第一个参数是否大于第二个参数。</summary>
      <param name="x" vsli:raw="A &lt;see cref=&quot;T:System.Data.SqlTypes.SqlMoney&quot; /&gt; structure.">
        <see cref="T:System.Data.SqlTypes.SqlMoney" /> 结构。</param>
      <param name="y" vsli:raw="A &lt;see cref=&quot;T:System.Data.SqlTypes.SqlMoney&quot; /&gt; structure.">
        <see cref="T:System.Data.SqlTypes.SqlMoney" /> 结构。</param>
      <returns vsli:raw="A &lt;see cref=&quot;T:System.Data.SqlTypes.SqlBoolean&quot; /&gt; that is &lt;see cref=&quot;F:System.Data.SqlTypes.SqlBoolean.True&quot; /&gt; if the first instance is greater than the second instance. Otherwise, &lt;see cref=&quot;F:System.Data.SqlTypes.SqlBoolean.False&quot; /&gt;. If either instance of &lt;see cref=&quot;T:System.Data.SqlTypes.SqlMoney&quot; /&gt; is null, the &lt;see cref=&quot;P:System.Data.SqlTypes.SqlBoolean.Value&quot; /&gt; of the &lt;see cref=&quot;T:System.Data.SqlTypes.SqlBoolean&quot; /&gt; will be &lt;see cref=&quot;F:System.Data.SqlTypes.SqlBoolean.Null&quot; /&gt;.">一个 <see cref="T:System.Data.SqlTypes.SqlBoolean" />，如果第一个实例大于第二个实例，则它为 <see cref="F:System.Data.SqlTypes.SqlBoolean.True" />。 否则为 <see cref="F:System.Data.SqlTypes.SqlBoolean.False" />。 如果 <see cref="T:System.Data.SqlTypes.SqlMoney" /> 的任一实例为空，则 <see cref="P:System.Data.SqlTypes.SqlBoolean.Value" /> 的 <see cref="T:System.Data.SqlTypes.SqlBoolean" /> 将为 <see cref="F:System.Data.SqlTypes.SqlBoolean.Null" />。</returns>
    </member>
    <member name="M:System.Data.SqlTypes.SqlMoney.op_GreaterThanOrEqual(System.Data.SqlTypes.SqlMoney,System.Data.SqlTypes.SqlMoney)">
      <summary vsli:raw="Performs a logical comparison of the two &lt;see cref=&quot;T:System.Data.SqlTypes.SqlMoney&quot; /&gt; parameters to determine whether the first is greater than or equal to the second.">对两个 <see cref="T:System.Data.SqlTypes.SqlMoney" /> 参数执行逻辑比较，以确定第一个参数是否大于或等于第二个参数。</summary>
      <param name="x" vsli:raw="A &lt;see cref=&quot;T:System.Data.SqlTypes.SqlMoney&quot; /&gt; structure.">
        <see cref="T:System.Data.SqlTypes.SqlMoney" /> 结构。</param>
      <param name="y" vsli:raw="A &lt;see cref=&quot;T:System.Data.SqlTypes.SqlMoney&quot; /&gt; structure.">
        <see cref="T:System.Data.SqlTypes.SqlMoney" /> 结构。</param>
      <returns vsli:raw="A &lt;see cref=&quot;T:System.Data.SqlTypes.SqlBoolean&quot; /&gt; that is &lt;see cref=&quot;F:System.Data.SqlTypes.SqlBoolean.True&quot; /&gt; if the first instance is greater than or equal to the second instance. Otherwise, &lt;see cref=&quot;F:System.Data.SqlTypes.SqlBoolean.False&quot; /&gt;. If either instance of &lt;see cref=&quot;T:System.Data.SqlTypes.SqlMoney&quot; /&gt; is null, the &lt;see cref=&quot;P:System.Data.SqlTypes.SqlBoolean.Value&quot; /&gt; of the &lt;see cref=&quot;T:System.Data.SqlTypes.SqlBoolean&quot; /&gt; will be &lt;see cref=&quot;F:System.Data.SqlTypes.SqlBoolean.Null&quot; /&gt;.">一个 <see cref="T:System.Data.SqlTypes.SqlBoolean" />，如果第一个实例大于或等于第二个实例，则为 <see cref="F:System.Data.SqlTypes.SqlBoolean.True" />。 否则为 <see cref="F:System.Data.SqlTypes.SqlBoolean.False" />。 如果 <see cref="T:System.Data.SqlTypes.SqlMoney" /> 的任一实例为空，则 <see cref="P:System.Data.SqlTypes.SqlBoolean.Value" /> 的 <see cref="T:System.Data.SqlTypes.SqlBoolean" /> 将为 <see cref="F:System.Data.SqlTypes.SqlBoolean.Null" />。</returns>
    </member>
    <member name="M:System.Data.SqlTypes.SqlMoney.op_Implicit(System.Data.SqlTypes.SqlByte)~System.Data.SqlTypes.SqlMoney">
      <summary vsli:raw="This implicit operator converts the supplied &lt;see cref=&quot;T:System.Data.SqlTypes.SqlByte&quot; /&gt; parameter to &lt;see cref=&quot;T:System.Data.SqlTypes.SqlMoney&quot; /&gt;.">此隐式运算符可将所提供的 <see cref="T:System.Data.SqlTypes.SqlByte" /> 参数转换为 <see cref="T:System.Data.SqlTypes.SqlMoney" />。</summary>
      <param name="x" vsli:raw="The &lt;see cref=&quot;T:System.Data.SqlTypes.SqlByte&quot; /&gt; structure to be converted.">要转换的 <see cref="T:System.Data.SqlTypes.SqlByte" /> 结构。</param>
      <returns vsli:raw="A new &lt;see cref=&quot;T:System.Data.SqlTypes.SqlMoney&quot; /&gt; structure whose &lt;see cref=&quot;P:System.Data.SqlTypes.SqlMoney.Value&quot; /&gt; property is equal to the &lt;see cref=&quot;P:System.Data.SqlTypes.SqlByte.Value&quot; /&gt; of the &lt;see cref=&quot;T:System.Data.SqlTypes.SqlByte&quot; /&gt; parameter.">新的 <see cref="T:System.Data.SqlTypes.SqlMoney" /> 结构，它的 <see cref="P:System.Data.SqlTypes.SqlMoney.Value" /> 属性等于 <see cref="P:System.Data.SqlTypes.SqlByte.Value" /> 参数的 <see cref="T:System.Data.SqlTypes.SqlByte" />。</returns>
    </member>
    <member name="M:System.Data.SqlTypes.SqlMoney.op_Implicit(System.Data.SqlTypes.SqlInt16)~System.Data.SqlTypes.SqlMoney">
      <summary vsli:raw="This implicit operator converts the supplied &lt;see cref=&quot;T:System.Data.SqlTypes.SqlInt16&quot; /&gt; parameter to &lt;see cref=&quot;T:System.Data.SqlTypes.SqlMoney&quot; /&gt;.">此隐式运算符可将所提供的 <see cref="T:System.Data.SqlTypes.SqlInt16" /> 参数转换为 <see cref="T:System.Data.SqlTypes.SqlMoney" />。</summary>
      <param name="x" vsli:raw="The &lt;see cref=&quot;T:System.Data.SqlTypes.SqlInt16&quot; /&gt; structure to be converted.">要转换的 <see cref="T:System.Data.SqlTypes.SqlInt16" /> 结构。</param>
      <returns vsli:raw="A new &lt;see cref=&quot;T:System.Data.SqlTypes.SqlMoney&quot; /&gt; structure whose &lt;see cref=&quot;P:System.Data.SqlTypes.SqlMoney.Value&quot; /&gt; property equals the &lt;see cref=&quot;P:System.Data.SqlTypes.SqlInt16.Value&quot; /&gt; of the &lt;see cref=&quot;T:System.Data.SqlTypes.SqlInt16&quot; /&gt; parameter.">一个新的 <see cref="T:System.Data.SqlTypes.SqlMoney" /> 结构，它的 <see cref="P:System.Data.SqlTypes.SqlMoney.Value" /> 属性等于 <see cref="P:System.Data.SqlTypes.SqlInt16.Value" /> 参数的 <see cref="T:System.Data.SqlTypes.SqlInt16" />。</returns>
    </member>
    <member name="M:System.Data.SqlTypes.SqlMoney.op_Implicit(System.Data.SqlTypes.SqlInt32)~System.Data.SqlTypes.SqlMoney">
      <summary vsli:raw="This implicit operator converts the supplied &lt;see cref=&quot;T:System.Data.SqlTypes.SqlInt32&quot; /&gt; parameter to &lt;see cref=&quot;T:System.Data.SqlTypes.SqlMoney&quot; /&gt;.">此隐式运算符可将所提供的 <see cref="T:System.Data.SqlTypes.SqlInt32" /> 参数转换为 <see cref="T:System.Data.SqlTypes.SqlMoney" />。</summary>
      <param name="x" vsli:raw="The &lt;see cref=&quot;T:System.Data.SqlTypes.SqlInt32&quot; /&gt; structure to be converted.">要转换的 <see cref="T:System.Data.SqlTypes.SqlInt32" /> 结构。</param>
      <returns vsli:raw="A new &lt;see cref=&quot;T:System.Data.SqlTypes.SqlMoney&quot; /&gt; structure whose &lt;see cref=&quot;P:System.Data.SqlTypes.SqlMoney.Value&quot; /&gt; property equals the &lt;see cref=&quot;P:System.Data.SqlTypes.SqlInt32.Value&quot; /&gt; of the &lt;see cref=&quot;T:System.Data.SqlTypes.SqlInt32&quot; /&gt; parameter.">一个新的 <see cref="T:System.Data.SqlTypes.SqlMoney" /> 结构，它的 <see cref="P:System.Data.SqlTypes.SqlMoney.Value" /> 属性等于 <see cref="P:System.Data.SqlTypes.SqlInt32.Value" /> 参数的 <see cref="T:System.Data.SqlTypes.SqlInt32" />。</returns>
    </member>
    <member name="M:System.Data.SqlTypes.SqlMoney.op_Implicit(System.Data.SqlTypes.SqlInt64)~System.Data.SqlTypes.SqlMoney">
      <summary vsli:raw="This implicit operator converts the supplied &lt;see cref=&quot;T:System.Data.SqlTypes.SqlInt64&quot; /&gt; parameter to &lt;see cref=&quot;T:System.Data.SqlTypes.SqlMoney&quot; /&gt;.">此隐式运算符可将所提供的 <see cref="T:System.Data.SqlTypes.SqlInt64" /> 参数转换为 <see cref="T:System.Data.SqlTypes.SqlMoney" />。</summary>
      <param name="x" vsli:raw="The &lt;see cref=&quot;T:System.Data.SqlTypes.SqlInt64&quot; /&gt; structure to be converted.">要转换的 <see cref="T:System.Data.SqlTypes.SqlInt64" /> 结构。</param>
      <returns vsli:raw="A new &lt;see cref=&quot;T:System.Data.SqlTypes.SqlMoney&quot; /&gt; structure whose &lt;see cref=&quot;P:System.Data.SqlTypes.SqlMoney.Value&quot; /&gt; property equals the &lt;see cref=&quot;P:System.Data.SqlTypes.SqlInt64.Value&quot; /&gt; of the &lt;see cref=&quot;T:System.Data.SqlTypes.SqlInt64&quot; /&gt; parameter.">一个新的 <see cref="T:System.Data.SqlTypes.SqlMoney" /> 结构，它的 <see cref="P:System.Data.SqlTypes.SqlMoney.Value" /> 属性等于 <see cref="P:System.Data.SqlTypes.SqlInt64.Value" /> 参数的 <see cref="T:System.Data.SqlTypes.SqlInt64" />。</returns>
    </member>
    <member name="M:System.Data.SqlTypes.SqlMoney.op_Implicit(System.Decimal)~System.Data.SqlTypes.SqlMoney">
      <summary vsli:raw="Converts the &lt;see cref=&quot;T:System.Decimal&quot; /&gt; parameter to &lt;see cref=&quot;T:System.Data.SqlTypes.SqlMoney&quot; /&gt;.">将 <see cref="T:System.Decimal" /> 参数转换为 <see cref="T:System.Data.SqlTypes.SqlMoney" />。</summary>
      <param name="x" vsli:raw="The &lt;see cref=&quot;T:System.Decimal&quot; /&gt; value to be converted.">要转换的 <see cref="T:System.Decimal" /> 值。</param>
      <returns vsli:raw="A new &lt;see cref=&quot;T:System.Data.SqlTypes.SqlMoney&quot; /&gt; structure whose &lt;see cref=&quot;P:System.Data.SqlTypes.SqlMoney.Value&quot; /&gt; equals the value of the &lt;see cref=&quot;T:System.Decimal&quot; /&gt; parameter.">一个新的 <see cref="T:System.Data.SqlTypes.SqlMoney" /> 结构，它的 <see cref="P:System.Data.SqlTypes.SqlMoney.Value" /> 等于 <see cref="T:System.Decimal" /> 参数的值。</returns>
    </member>
    <member name="M:System.Data.SqlTypes.SqlMoney.op_Implicit(System.Int64)~System.Data.SqlTypes.SqlMoney">
      <summary vsli:raw="This implicit operator converts the supplied &lt;see cref=&quot;T:System.Int64&quot; /&gt; parameter to &lt;see cref=&quot;T:System.Data.SqlTypes.SqlMoney&quot; /&gt;.">此隐式运算符可将所提供的 <see cref="T:System.Int64" /> 参数转换为 <see cref="T:System.Data.SqlTypes.SqlMoney" />。</summary>
      <param name="x" vsli:raw="The &lt;see cref=&quot;T:System.Int64&quot; /&gt; structure to be converted.">要转换的 <see cref="T:System.Int64" /> 结构。</param>
      <returns vsli:raw="A new &lt;see cref=&quot;T:System.Data.SqlTypes.SqlMoney&quot; /&gt; structure whose &lt;see cref=&quot;P:System.Data.SqlTypes.SqlMoney.Value&quot; /&gt; property is equal to the value of the &lt;see cref=&quot;T:System.Int64&quot; /&gt; parameter.">新的 <see cref="T:System.Data.SqlTypes.SqlMoney" /> 结构，它的 <see cref="P:System.Data.SqlTypes.SqlMoney.Value" /> 属性等于 <see cref="T:System.Int64" /> 参数的值。</returns>
    </member>
    <member name="M:System.Data.SqlTypes.SqlMoney.op_Inequality(System.Data.SqlTypes.SqlMoney,System.Data.SqlTypes.SqlMoney)">
      <summary vsli:raw="Performs a logical comparison of the two &lt;see cref=&quot;T:System.Data.SqlTypes.SqlMoney&quot; /&gt; parameters to determine whether they are not equal.">对两个 <see cref="T:System.Data.SqlTypes.SqlMoney" /> 参数执行逻辑比较，确定它们是否不相等。</summary>
      <param name="x" vsli:raw="A &lt;see cref=&quot;T:System.Data.SqlTypes.SqlMoney&quot; /&gt; structure.">
        <see cref="T:System.Data.SqlTypes.SqlMoney" /> 结构。</param>
      <param name="y" vsli:raw="A &lt;see cref=&quot;T:System.Data.SqlTypes.SqlMoney&quot; /&gt; structure.">
        <see cref="T:System.Data.SqlTypes.SqlMoney" /> 结构。</param>
      <returns vsli:raw="A &lt;see cref=&quot;T:System.Data.SqlTypes.SqlBoolean&quot; /&gt; that is &lt;see cref=&quot;F:System.Data.SqlTypes.SqlBoolean.True&quot; /&gt; if the two instances are not equal or &lt;see cref=&quot;F:System.Data.SqlTypes.SqlBoolean.False&quot; /&gt; if the two instances are equal. If either instance of &lt;see cref=&quot;T:System.Data.SqlTypes.SqlMoney&quot; /&gt; is null, the &lt;see cref=&quot;P:System.Data.SqlTypes.SqlBoolean.Value&quot; /&gt; of the &lt;see cref=&quot;T:System.Data.SqlTypes.SqlBoolean&quot; /&gt; will be &lt;see cref=&quot;F:System.Data.SqlTypes.SqlBoolean.Null&quot; /&gt;.">一个 <see cref="T:System.Data.SqlTypes.SqlBoolean" />，它在两个实例不等时为 <see cref="F:System.Data.SqlTypes.SqlBoolean.True" />，在两个实例相等时为 <see cref="F:System.Data.SqlTypes.SqlBoolean.False" />。 如果 <see cref="T:System.Data.SqlTypes.SqlMoney" /> 的任一实例为空，则 <see cref="P:System.Data.SqlTypes.SqlBoolean.Value" /> 的 <see cref="T:System.Data.SqlTypes.SqlBoolean" /> 将为 <see cref="F:System.Data.SqlTypes.SqlBoolean.Null" />。</returns>
    </member>
    <member name="M:System.Data.SqlTypes.SqlMoney.op_LessThan(System.Data.SqlTypes.SqlMoney,System.Data.SqlTypes.SqlMoney)">
      <summary vsli:raw="Performs a logical comparison of the two &lt;see cref=&quot;T:System.Data.SqlTypes.SqlMoney&quot; /&gt; parameters to determine whether the first is less than the second.">对两个 <see cref="T:System.Data.SqlTypes.SqlMoney" /> 参数执行逻辑比较，以确定第一个参数是否小于第二个参数。</summary>
      <param name="x" vsli:raw="A &lt;see cref=&quot;T:System.Data.SqlTypes.SqlMoney&quot; /&gt; structure.">
        <see cref="T:System.Data.SqlTypes.SqlMoney" /> 结构。</param>
      <param name="y" vsli:raw="A &lt;see cref=&quot;T:System.Data.SqlTypes.SqlMoney&quot; /&gt; structure.">
        <see cref="T:System.Data.SqlTypes.SqlMoney" /> 结构。</param>
      <returns vsli:raw="A &lt;see cref=&quot;T:System.Data.SqlTypes.SqlBoolean&quot; /&gt; that is &lt;see cref=&quot;F:System.Data.SqlTypes.SqlBoolean.True&quot; /&gt; if the first instance is less than the second instance. Otherwise, &lt;see cref=&quot;F:System.Data.SqlTypes.SqlBoolean.False&quot; /&gt;. If either instance of &lt;see cref=&quot;T:System.Data.SqlTypes.SqlMoney&quot; /&gt; is null, the &lt;see cref=&quot;P:System.Data.SqlTypes.SqlBoolean.Value&quot; /&gt; of the &lt;see cref=&quot;T:System.Data.SqlTypes.SqlBoolean&quot; /&gt; will be &lt;see cref=&quot;F:System.Data.SqlTypes.SqlBoolean.Null&quot; /&gt;.">一个 <see cref="T:System.Data.SqlTypes.SqlBoolean" />，如果第一个实例小于第二个实例，则它为 <see cref="F:System.Data.SqlTypes.SqlBoolean.True" />。 否则为 <see cref="F:System.Data.SqlTypes.SqlBoolean.False" />。 如果 <see cref="T:System.Data.SqlTypes.SqlMoney" /> 的任一实例为空，则 <see cref="P:System.Data.SqlTypes.SqlBoolean.Value" /> 的 <see cref="T:System.Data.SqlTypes.SqlBoolean" /> 将为 <see cref="F:System.Data.SqlTypes.SqlBoolean.Null" />。</returns>
    </member>
    <member name="M:System.Data.SqlTypes.SqlMoney.op_LessThanOrEqual(System.Data.SqlTypes.SqlMoney,System.Data.SqlTypes.SqlMoney)">
      <summary vsli:raw="Performs a logical comparison of the two &lt;see cref=&quot;T:System.Data.SqlTypes.SqlMoney&quot; /&gt; parameters to determine whether the first is less than or equal to the second.">对两个 <see cref="T:System.Data.SqlTypes.SqlMoney" /> 参数执行逻辑比较，以确定第一个参数是否小于或等于第二个参数。</summary>
      <param name="x" vsli:raw="A &lt;see cref=&quot;T:System.Data.SqlTypes.SqlMoney&quot; /&gt; structure.">
        <see cref="T:System.Data.SqlTypes.SqlMoney" /> 结构。</param>
      <param name="y" vsli:raw="A &lt;see cref=&quot;T:System.Data.SqlTypes.SqlMoney&quot; /&gt; structure.">
        <see cref="T:System.Data.SqlTypes.SqlMoney" /> 结构。</param>
      <returns vsli:raw="A &lt;see cref=&quot;T:System.Data.SqlTypes.SqlBoolean&quot; /&gt; that is &lt;see cref=&quot;F:System.Data.SqlTypes.SqlBoolean.True&quot; /&gt; if the first instance is less than or equal to the second instance. Otherwise, &lt;see cref=&quot;F:System.Data.SqlTypes.SqlBoolean.False&quot; /&gt;. If either instance of &lt;see cref=&quot;T:System.Data.SqlTypes.SqlMoney&quot; /&gt; is null, the &lt;see cref=&quot;P:System.Data.SqlTypes.SqlBoolean.Value&quot; /&gt; of the &lt;see cref=&quot;T:System.Data.SqlTypes.SqlBoolean&quot; /&gt; will be &lt;see cref=&quot;F:System.Data.SqlTypes.SqlBoolean.Null&quot; /&gt;.">一个 <see cref="T:System.Data.SqlTypes.SqlBoolean" />，如果第一个实例小于或等于第二个实例，则它为 <see cref="F:System.Data.SqlTypes.SqlBoolean.True" />。 否则为 <see cref="F:System.Data.SqlTypes.SqlBoolean.False" />。 如果 <see cref="T:System.Data.SqlTypes.SqlMoney" /> 的任一实例为空，则 <see cref="P:System.Data.SqlTypes.SqlBoolean.Value" /> 的 <see cref="T:System.Data.SqlTypes.SqlBoolean" /> 将为 <see cref="F:System.Data.SqlTypes.SqlBoolean.Null" />。</returns>
    </member>
    <member name="M:System.Data.SqlTypes.SqlMoney.op_Multiply(System.Data.SqlTypes.SqlMoney,System.Data.SqlTypes.SqlMoney)">
      <summary vsli:raw="The multiplication operator calculates the product of the two &lt;see cref=&quot;T:System.Data.SqlTypes.SqlMoney&quot; /&gt; parameters.">乘法运算符计算两个 <see cref="T:System.Data.SqlTypes.SqlMoney" /> 参数的乘积。</summary>
      <param name="x" vsli:raw="A &lt;see cref=&quot;T:System.Data.SqlTypes.SqlMoney&quot; /&gt; structure.">
        <see cref="T:System.Data.SqlTypes.SqlMoney" /> 结构。</param>
      <param name="y" vsli:raw="A &lt;see cref=&quot;T:System.Data.SqlTypes.SqlMoney&quot; /&gt; structure.">
        <see cref="T:System.Data.SqlTypes.SqlMoney" /> 结构。</param>
      <returns vsli:raw="A new &lt;see cref=&quot;T:System.Data.SqlTypes.SqlMoney&quot; /&gt; structure whose &lt;see cref=&quot;P:System.Data.SqlTypes.SqlMoney.Value&quot; /&gt; contains the product of the multiplication.">一个新的 <see cref="T:System.Data.SqlTypes.SqlMoney" /> 结构，它的 <see cref="P:System.Data.SqlTypes.SqlMoney.Value" /> 包含该乘法运算的结果。</returns>
    </member>
    <member name="M:System.Data.SqlTypes.SqlMoney.op_Subtraction(System.Data.SqlTypes.SqlMoney,System.Data.SqlTypes.SqlMoney)">
      <summary vsli:raw="The subtraction operator subtracts the second &lt;see cref=&quot;T:System.Data.SqlTypes.SqlMoney&quot; /&gt; parameter from the first.">该减法运算符从第一个 <see cref="T:System.Data.SqlTypes.SqlMoney" /> 参数中减去第二个参数。</summary>
      <param name="x" vsli:raw="A &lt;see cref=&quot;T:System.Data.SqlTypes.SqlMoney&quot; /&gt; structure.">
        <see cref="T:System.Data.SqlTypes.SqlMoney" /> 结构。</param>
      <param name="y" vsli:raw="A &lt;see cref=&quot;T:System.Data.SqlTypes.SqlMoney&quot; /&gt; structure.">
        <see cref="T:System.Data.SqlTypes.SqlMoney" /> 结构。</param>
      <returns vsli:raw="A new &lt;see cref=&quot;T:System.Data.SqlTypes.SqlMoney&quot; /&gt; structure that contains the results of the subtraction.">一个新的 <see cref="T:System.Data.SqlTypes.SqlMoney" /> 结构，它包含该减法运算的结果。</returns>
    </member>
    <member name="M:System.Data.SqlTypes.SqlMoney.op_UnaryNegation(System.Data.SqlTypes.SqlMoney)">
      <summary vsli:raw="The unary minus operator negates the &lt;see cref=&quot;T:System.Data.SqlTypes.SqlMoney&quot; /&gt; parameter.">一元负运算符对 <see cref="T:System.Data.SqlTypes.SqlMoney" /> 参数求反。</summary>
      <param name="x" vsli:raw="The &lt;see cref=&quot;T:System.Data.SqlTypes.SqlMoney&quot; /&gt; structure to be negated.">需求反的 <see cref="T:System.Data.SqlTypes.SqlMoney" /> 结构。</param>
      <returns vsli:raw="A &lt;see cref=&quot;T:System.Data.SqlTypes.SqlMoney&quot; /&gt; structure whose &lt;see cref=&quot;P:System.Data.SqlTypes.SqlMoney.Value&quot; /&gt; contains the results of the negation.">一个 <see cref="T:System.Data.SqlTypes.SqlMoney" /> 结构，它的 <see cref="P:System.Data.SqlTypes.SqlMoney.Value" /> 包含求反的结果。</returns>
    </member>
    <member name="M:System.Data.SqlTypes.SqlMoney.Parse(System.String)">
      <summary vsli:raw="Converts the &lt;see cref=&quot;T:System.String&quot; /&gt; representation of a number to its &lt;see cref=&quot;T:System.Data.SqlTypes.SqlMoney&quot; /&gt; equivalent.">将数字的 <see cref="T:System.String" /> 表示形式转换为其等效的 <see cref="T:System.Data.SqlTypes.SqlMoney" /> 形式。</summary>
      <param name="s" vsli:raw="The &lt;see langword=&quot;String&quot; /&gt; to be parsed.">要分析的 <see langword="String" />。</param>
      <returns vsli:raw="A &lt;see cref=&quot;T:System.Data.SqlTypes.SqlMoney&quot; /&gt; equivalent to the value that is contained in the specified &lt;see cref=&quot;T:System.String&quot; /&gt;.">一个 <see cref="T:System.Data.SqlTypes.SqlMoney" />，它与指定的 <see cref="T:System.String" /> 中包含的值等效。</returns>
    </member>
    <member name="M:System.Data.SqlTypes.SqlMoney.Subtract(System.Data.SqlTypes.SqlMoney,System.Data.SqlTypes.SqlMoney)">
      <summary vsli:raw="The subtraction operator subtracts the second &lt;see cref=&quot;T:System.Data.SqlTypes.SqlMoney&quot; /&gt; parameter from the first.">该减法运算符从第一个 <see cref="T:System.Data.SqlTypes.SqlMoney" /> 参数中减去第二个参数。</summary>
      <param name="x" vsli:raw="A &lt;see cref=&quot;T:System.Data.SqlTypes.SqlMoney&quot; /&gt; structure.">
        <see cref="T:System.Data.SqlTypes.SqlMoney" /> 结构。</param>
      <param name="y" vsli:raw="A &lt;see cref=&quot;T:System.Data.SqlTypes.SqlMoney&quot; /&gt; structure.">
        <see cref="T:System.Data.SqlTypes.SqlMoney" /> 结构。</param>
      <returns vsli:raw="A new &lt;see cref=&quot;T:System.Data.SqlTypes.SqlMoney&quot; /&gt; structure that contains the results of the subtraction.">一个新的 <see cref="T:System.Data.SqlTypes.SqlMoney" /> 结构，它包含该减法运算的结果。</returns>
    </member>
    <member name="M:System.Data.SqlTypes.SqlMoney.System#Xml#Serialization#IXmlSerializable#GetSchema">
      <summary vsli:raw="This member supports the .NET Framework infrastructure and is not intended to be used directly from your code.">此成员支持 .NET Framework 结构，不能在代码中直接使用。</summary>
      <returns vsli:raw="An &lt;see langword=&quot;XmlSchema&quot; /&gt;.">
        <see langword="XmlSchema" />。</returns>
    </member>
    <member name="M:System.Data.SqlTypes.SqlMoney.System#Xml#Serialization#IXmlSerializable#ReadXml(System.Xml.XmlReader)">
      <summary vsli:raw="This member supports the .NET Framework infrastructure and is not intended to be used directly from your code.">此成员支持 .NET Framework 结构，不能在代码中直接使用。</summary>
      <param name="reader" vsli:raw="&lt;see langword=&quot;XmlReader&quot; /&gt;">
        <see langword="XmlReader" />
      </param>
    </member>
    <member name="M:System.Data.SqlTypes.SqlMoney.System#Xml#Serialization#IXmlSerializable#WriteXml(System.Xml.XmlWriter)">
      <summary vsli:raw="This member supports the .NET Framework infrastructure and is not intended to be used directly from your code.">此成员支持 .NET Framework 结构，不能在代码中直接使用。</summary>
      <param name="writer" vsli:raw="&lt;see langword=&quot;XmlWriter&quot; /&gt;">
        <see langword="XmlWriter" />
      </param>
    </member>
    <member name="M:System.Data.SqlTypes.SqlMoney.ToDecimal">
      <summary vsli:raw="Converts the Value of this instance of &lt;see cref=&quot;T:System.Data.SqlTypes.SqlMoney&quot; /&gt; as a &lt;see cref=&quot;T:System.Decimal&quot; /&gt; structure.">将 <see cref="T:System.Data.SqlTypes.SqlMoney" /> 的此实例的值转换为 <see cref="T:System.Decimal" /> 结构。</summary>
      <returns vsli:raw="A &lt;see cref=&quot;T:System.Decimal&quot; /&gt; structure whose value equals the &lt;see cref=&quot;P:System.Data.SqlTypes.SqlMoney.Value&quot; /&gt; property of this &lt;see cref=&quot;T:System.Data.SqlTypes.SqlMoney&quot; /&gt; structure.">一个 <see cref="T:System.Decimal" /> 结构，它的值等于此 <see cref="P:System.Data.SqlTypes.SqlMoney.Value" /> 结构的 <see cref="T:System.Data.SqlTypes.SqlMoney" /> 属性。</returns>
    </member>
    <member name="M:System.Data.SqlTypes.SqlMoney.ToDouble">
      <summary vsli:raw="Converts this &lt;see cref=&quot;T:System.Data.SqlTypes.SqlMoney&quot; /&gt; structure to a &lt;see cref=&quot;T:System.Double&quot; /&gt;.">将此 <see cref="T:System.Data.SqlTypes.SqlMoney" /> 结构转换为 <see cref="T:System.Double" />。</summary>
      <returns vsli:raw="A double with a value equal to this &lt;see cref=&quot;T:System.Data.SqlTypes.SqlMoney&quot; /&gt; structure.">一个双精度型，它的值等于此 <see cref="T:System.Data.SqlTypes.SqlMoney" /> 结构。</returns>
    </member>
    <member name="M:System.Data.SqlTypes.SqlMoney.ToInt32">
      <summary vsli:raw="Converts this &lt;see cref=&quot;T:System.Data.SqlTypes.SqlMoney&quot; /&gt; structure to an &lt;see cref=&quot;T:System.Int32&quot; /&gt;.">将此 <see cref="T:System.Data.SqlTypes.SqlMoney" /> 结构转换为 <see cref="T:System.Int32" />。</summary>
      <returns vsli:raw="A 32-bit integer whose value equals the integer part of this &lt;see cref=&quot;T:System.Data.SqlTypes.SqlMoney&quot; /&gt; structure.">一个 32 位整数，其值等于此 <see cref="T:System.Data.SqlTypes.SqlMoney" /> 结构的整数部分。</returns>
    </member>
    <member name="M:System.Data.SqlTypes.SqlMoney.ToInt64">
      <summary vsli:raw="Converts the Value of this &lt;see cref=&quot;T:System.Data.SqlTypes.SqlMoney&quot; /&gt; structure to an &lt;see cref=&quot;T:System.Int64&quot; /&gt;.">将此 <see cref="T:System.Data.SqlTypes.SqlMoney" /> 结构的值转换为 <see cref="T:System.Int64" />。</summary>
      <returns vsli:raw="A 64-bit integer whose value equals the integer part of this &lt;see cref=&quot;T:System.Data.SqlTypes.SqlMoney&quot; /&gt; structure.">一个 64 位整数，其值等于此 <see cref="T:System.Data.SqlTypes.SqlMoney" /> 结构的整数部分。</returns>
    </member>
    <member name="M:System.Data.SqlTypes.SqlMoney.ToSqlBoolean">
      <summary vsli:raw="Converts this &lt;see cref=&quot;T:System.Data.SqlTypes.SqlMoney&quot; /&gt; structure to &lt;see cref=&quot;T:System.Data.SqlTypes.SqlBoolean&quot; /&gt;.">将此 <see cref="T:System.Data.SqlTypes.SqlMoney" /> 结构转换为 <see cref="T:System.Data.SqlTypes.SqlBoolean" />。</summary>
      <returns vsli:raw="A &lt;see cref=&quot;T:System.Data.SqlTypes.SqlBoolean&quot; /&gt; structure. If the value of the &lt;see cref=&quot;T:System.Data.SqlTypes.SqlMoney&quot; /&gt; structure is zero, the &lt;see cref=&quot;T:System.Data.SqlTypes.SqlBoolean&quot; /&gt; structure's value will be &lt;see cref=&quot;F:System.Data.SqlTypes.SqlBoolean.False&quot; /&gt;. Otherwise, &lt;see cref=&quot;F:System.Data.SqlTypes.SqlBoolean.True&quot; /&gt;.">
        <see cref="T:System.Data.SqlTypes.SqlBoolean" /> 结构。 如果 <see cref="T:System.Data.SqlTypes.SqlMoney" /> 结构的值为零，则 <see cref="T:System.Data.SqlTypes.SqlBoolean" /> 结构的值将为 <see cref="F:System.Data.SqlTypes.SqlBoolean.False" />。 否则为 <see cref="F:System.Data.SqlTypes.SqlBoolean.True" />。</returns>
    </member>
    <member name="M:System.Data.SqlTypes.SqlMoney.ToSqlByte">
      <summary vsli:raw="Converts this &lt;see cref=&quot;T:System.Data.SqlTypes.SqlMoney&quot; /&gt; structure to &lt;see cref=&quot;T:System.Data.SqlTypes.SqlByte&quot; /&gt;.">将此 <see cref="T:System.Data.SqlTypes.SqlMoney" /> 结构转换为 <see cref="T:System.Data.SqlTypes.SqlByte" />。</summary>
      <returns vsli:raw="A &lt;see cref=&quot;T:System.Data.SqlTypes.SqlByte&quot; /&gt; equal to the value of this &lt;see cref=&quot;T:System.Data.SqlTypes.SqlMoney&quot; /&gt;.">
        <see cref="T:System.Data.SqlTypes.SqlByte" /> 等于此 <see cref="T:System.Data.SqlTypes.SqlMoney" /> 的值。</returns>
    </member>
    <member name="M:System.Data.SqlTypes.SqlMoney.ToSqlDecimal">
      <summary vsli:raw="Converts this &lt;see cref=&quot;T:System.Data.SqlTypes.SqlMoney&quot; /&gt; structure to &lt;see cref=&quot;T:System.Data.SqlTypes.SqlDecimal&quot; /&gt;.">将此 <see cref="T:System.Data.SqlTypes.SqlMoney" /> 结构转换为 <see cref="T:System.Data.SqlTypes.SqlDecimal" />。</summary>
      <returns vsli:raw="A new &lt;see cref=&quot;T:System.Data.SqlTypes.SqlDecimal&quot; /&gt; equal to the value of this &lt;see cref=&quot;T:System.Data.SqlTypes.SqlMoney&quot; /&gt;.">新的 <see cref="T:System.Data.SqlTypes.SqlDecimal" /> 等于此 <see cref="T:System.Data.SqlTypes.SqlMoney" /> 的值。</returns>
    </member>
    <member name="M:System.Data.SqlTypes.SqlMoney.ToSqlDouble">
      <summary vsli:raw="Converts this &lt;see cref=&quot;T:System.Data.SqlTypes.SqlMoney&quot; /&gt; structure to &lt;see cref=&quot;T:System.Data.SqlTypes.SqlDouble&quot; /&gt;.">将此 <see cref="T:System.Data.SqlTypes.SqlMoney" /> 结构转换为 <see cref="T:System.Data.SqlTypes.SqlDouble" />。</summary>
      <returns vsli:raw="A new &lt;see cref=&quot;T:System.Data.SqlTypes.SqlDouble&quot; /&gt; equal to the value of this &lt;see cref=&quot;T:System.Data.SqlTypes.SqlMoney&quot; /&gt;.">新的 <see cref="T:System.Data.SqlTypes.SqlDouble" /> 等于此 <see cref="T:System.Data.SqlTypes.SqlMoney" /> 的值。</returns>
    </member>
    <member name="M:System.Data.SqlTypes.SqlMoney.ToSqlInt16">
      <summary vsli:raw="Converts this &lt;see cref=&quot;T:System.Data.SqlTypes.SqlMoney&quot; /&gt; structure to &lt;see cref=&quot;T:System.Data.SqlTypes.SqlInt16&quot; /&gt;.">将此 <see cref="T:System.Data.SqlTypes.SqlMoney" /> 结构转换为 <see cref="T:System.Data.SqlTypes.SqlInt16" />。</summary>
      <returns vsli:raw="A new &lt;see cref=&quot;T:System.Data.SqlTypes.SqlInt16&quot; /&gt; equal to the value of this &lt;see cref=&quot;T:System.Data.SqlTypes.SqlMoney&quot; /&gt;.">新的 <see cref="T:System.Data.SqlTypes.SqlInt16" /> 等于此 <see cref="T:System.Data.SqlTypes.SqlMoney" /> 的值。</returns>
    </member>
    <member name="M:System.Data.SqlTypes.SqlMoney.ToSqlInt32">
      <summary vsli:raw="Converts this &lt;see cref=&quot;T:System.Data.SqlTypes.SqlMoney&quot; /&gt; structure to &lt;see cref=&quot;T:System.Data.SqlTypes.SqlInt32&quot; /&gt;.">将此 <see cref="T:System.Data.SqlTypes.SqlMoney" /> 结构转换为 <see cref="T:System.Data.SqlTypes.SqlInt32" />。</summary>
      <returns vsli:raw="A new &lt;see cref=&quot;T:System.Data.SqlTypes.SqlInt32&quot; /&gt; equal to the value of this &lt;see cref=&quot;T:System.Data.SqlTypes.SqlMoney&quot; /&gt;.">新的 <see cref="T:System.Data.SqlTypes.SqlInt32" /> 等于此 <see cref="T:System.Data.SqlTypes.SqlMoney" /> 的值。</returns>
    </member>
    <member name="M:System.Data.SqlTypes.SqlMoney.ToSqlInt64">
      <summary vsli:raw="Converts this &lt;see cref=&quot;T:System.Data.SqlTypes.SqlMoney&quot; /&gt; structure to &lt;see cref=&quot;T:System.Data.SqlTypes.SqlInt64&quot; /&gt;.">将此 <see cref="T:System.Data.SqlTypes.SqlMoney" /> 结构转换为 <see cref="T:System.Data.SqlTypes.SqlInt64" />。</summary>
      <returns vsli:raw="A new &lt;see cref=&quot;T:System.Data.SqlTypes.SqlInt64&quot; /&gt; equal to the value of this &lt;see cref=&quot;T:System.Data.SqlTypes.SqlMoney&quot; /&gt;.">新的 <see cref="T:System.Data.SqlTypes.SqlInt64" /> 等于此 <see cref="T:System.Data.SqlTypes.SqlMoney" /> 的值。</returns>
    </member>
    <member name="M:System.Data.SqlTypes.SqlMoney.ToSqlSingle">
      <summary vsli:raw="Converts this &lt;see cref=&quot;T:System.Data.SqlTypes.SqlMoney&quot; /&gt; structure to &lt;see cref=&quot;T:System.Data.SqlTypes.SqlSingle&quot; /&gt;.">将此 <see cref="T:System.Data.SqlTypes.SqlMoney" /> 结构转换为 <see cref="T:System.Data.SqlTypes.SqlSingle" />。</summary>
      <returns vsli:raw="A new &lt;see cref=&quot;T:System.Data.SqlTypes.SqlSingle&quot; /&gt; equal to the value of this &lt;see cref=&quot;T:System.Data.SqlTypes.SqlMoney&quot; /&gt;.">新的 <see cref="T:System.Data.SqlTypes.SqlSingle" /> 等于此 <see cref="T:System.Data.SqlTypes.SqlMoney" /> 的值。</returns>
    </member>
    <member name="M:System.Data.SqlTypes.SqlMoney.ToSqlString">
      <summary vsli:raw="Converts this &lt;see cref=&quot;T:System.Data.SqlTypes.SqlMoney&quot; /&gt; structure to &lt;see cref=&quot;T:System.Data.SqlTypes.SqlString&quot; /&gt;.">将此 <see cref="T:System.Data.SqlTypes.SqlMoney" /> 结构转换为 <see cref="T:System.Data.SqlTypes.SqlString" />。</summary>
      <returns vsli:raw="A &lt;see cref=&quot;T:System.Data.SqlTypes.SqlString&quot; /&gt; structure whose value is a string representing the value of this &lt;see cref=&quot;T:System.Data.SqlTypes.SqlMoney&quot; /&gt;.">一个 <see cref="T:System.Data.SqlTypes.SqlString" /> 结构，它的值是一个表示此 <see cref="T:System.Data.SqlTypes.SqlMoney" /> 的值的字符串。</returns>
    </member>
    <member name="M:System.Data.SqlTypes.SqlMoney.ToString">
      <summary vsli:raw="Converts this instance of &lt;see cref=&quot;T:System.Data.SqlTypes.SqlMoney&quot; /&gt; to string.">将 <see cref="T:System.Data.SqlTypes.SqlMoney" /> 的此实例转换为字符串。</summary>
      <returns vsli:raw="A string whose value is the string representation of the value of this &lt;see cref=&quot;T:System.Data.SqlTypes.SqlMoney&quot; /&gt;.">一个字符串，它的值是此 <see cref="T:System.Data.SqlTypes.SqlMoney" /> 的值的字符串表示形式。</returns>
    </member>
    <member name="P:System.Data.SqlTypes.SqlMoney.IsNull">
      <summary vsli:raw="Returns a Boolean value that indicates whether this &lt;see cref=&quot;T:System.Data.SqlTypes.SqlMoney&quot; /&gt; structure is null.">返回一个布尔值，该值指示此 <see cref="T:System.Data.SqlTypes.SqlMoney" /> 结构是否为 null。</summary>
      <returns vsli:raw="&lt;see langword=&quot;true&quot; /&gt; if null. Otherwise, &lt;see langword=&quot;false&quot; /&gt;.">如果为 null，则返回 <see langword="true" />。 否则为 <see langword="false" />。</returns>
    </member>
    <member name="P:System.Data.SqlTypes.SqlMoney.Value">
      <summary vsli:raw="Gets the monetary value of an instance of the &lt;see cref=&quot;T:System.Data.SqlTypes.SqlMoney&quot; /&gt; structure. This property is read-only.">获取 <see cref="T:System.Data.SqlTypes.SqlMoney" /> 结构的实例的货币值。 此属性为只读。</summary>
      <exception cref="T:System.Data.SqlTypes.SqlNullValueException" vsli:raw="The property is set to null.">该属性设置为 null。</exception>
      <returns vsli:raw="The monetary value of an instance of the &lt;see cref=&quot;T:System.Data.SqlTypes.SqlMoney&quot; /&gt; structure.">
        <see cref="T:System.Data.SqlTypes.SqlMoney" /> 结构的实例的货币值。</returns>
    </member>
    <member name="T:System.Data.SqlTypes.SqlNotFilledException">
      <summary vsli:raw="The &lt;see cref=&quot;T:System.Data.SqlTypes.SqlNotFilledException&quot; /&gt; class is not intended for use as a stand-alone component, but as a class from which other classes derive standard functionality.">
        <see cref="T:System.Data.SqlTypes.SqlNotFilledException" /> 类不用作独立组件，而是用作其他类从中派生标准功能的类。</summary>
    </member>
    <member name="M:System.Data.SqlTypes.SqlNotFilledException.#ctor">
      <summary vsli:raw="Initializes a new instance of the &lt;see cref=&quot;T:System.Data.SqlTypes.SqlNotFilledException&quot; /&gt; class.">初始化 <see cref="T:System.Data.SqlTypes.SqlNotFilledException" /> 类的新实例。</summary>
    </member>
    <member name="M:System.Data.SqlTypes.SqlNotFilledException.#ctor(System.String)">
      <summary vsli:raw="Initializes a new instance of the &lt;see cref=&quot;T:System.Data.SqlTypes.SqlNotFilledException&quot; /&gt; class.">初始化 <see cref="T:System.Data.SqlTypes.SqlNotFilledException" /> 类的新实例。</summary>
      <param name="message" vsli:raw="The string to display when the exception is thrown.">引发异常时显示的字符串。</param>
    </member>
    <member name="M:System.Data.SqlTypes.SqlNotFilledException.#ctor(System.String,System.Exception)">
      <summary vsli:raw="Initializes a new instance of the &lt;see cref=&quot;T:System.Data.SqlTypes.SqlNotFilledException&quot; /&gt; class.">初始化 <see cref="T:System.Data.SqlTypes.SqlNotFilledException" /> 类的新实例。</summary>
      <param name="message" vsli:raw="The string to display when the exception is thrown.">引发异常时显示的字符串。</param>
      <param name="e" vsli:raw="A reference to an inner exception.">对内部异常的引用。</param>
    </member>
    <member name="T:System.Data.SqlTypes.SqlNullValueException">
      <summary vsli:raw="The exception that is thrown when the &lt;see langword=&quot;Value&quot; /&gt; property of a &lt;see cref=&quot;N:System.Data.SqlTypes&quot; /&gt; structure is set to null.">当 <see langword="Value" /> 结构的 <see cref="N:System.Data.SqlTypes" /> 属性设置为 null 时所引发的异常。</summary>
    </member>
    <member name="M:System.Data.SqlTypes.SqlNullValueException.#ctor">
      <summary vsli:raw="Initializes a new instance of the &lt;see cref=&quot;T:System.Data.SqlTypes.SqlNullValueException&quot; /&gt; class with a system-supplied message that describes the error.">使用说明错误的系统提供的消息初始化 <see cref="T:System.Data.SqlTypes.SqlNullValueException" /> 类的新实例。</summary>
    </member>
    <member name="M:System.Data.SqlTypes.SqlNullValueException.#ctor(System.String)">
      <summary vsli:raw="Initializes a new instance of the &lt;see cref=&quot;T:System.Data.SqlTypes.SqlNullValueException&quot; /&gt; class with a specified message that describes the error.">使用说明错误的指定消息初始化 <see cref="T:System.Data.SqlTypes.SqlNullValueException" /> 类的新实例。</summary>
      <param name="message" vsli:raw="The message that describes the exception. The caller of this constructor is required to ensure that this string has been localized for the current system culture.">描述该异常的消息。 此构造函数的调用方需要确保此字符串已针对当前系统区域性进行了本地化。</param>
    </member>
    <member name="M:System.Data.SqlTypes.SqlNullValueException.#ctor(System.String,System.Exception)">
      <summary vsli:raw="Initializes a new instance of the &lt;see cref=&quot;T:System.Data.SqlTypes.SqlNullValueException&quot; /&gt; class with a specified error message and a reference to the inner exception that is the cause of this exception.">使用指定的错误消息和对作为此异常原因的内部异常的引用来初始化 <see cref="T:System.Data.SqlTypes.SqlNullValueException" /> 类的新实例。</summary>
      <param name="message" vsli:raw="The message that describes the exception. The caller of this constructor is required to ensure that this string has been localized for the current system culture.">描述该异常的消息。 此构造函数的调用方需要确保此字符串已针对当前系统区域性进行了本地化。</param>
      <param name="e" vsli:raw="The exception that is the cause of the current exception. If the &lt;c&gt;innerException&lt;/c&gt; parameter is not &lt;see langword=&quot;null&quot; /&gt;, the current exception is raised in a &lt;see langword=&quot;catch&quot; /&gt; block that handles the inner exception.">导致当前异常的异常。 如果 <c>innerException</c> 参数不为 <see langword="null" />，则当前异常会在处理内部异常的 <see langword="catch" /> 块中引发。</param>
    </member>
    <member name="T:System.Data.SqlTypes.SqlSingle">
      <summary vsli:raw="Represents a floating point number within the range of -3.40E +38 through 3.40E +38 to be stored in or retrieved from a database.">表示要存储在数据库中或从数据库中检索的浮点数，范围在 -3.40E+38 到 3.40E+38 之间。</summary>
    </member>
    <member name="F:System.Data.SqlTypes.SqlSingle.MaxValue">
      <summary vsli:raw="Represents the maximum value that can be assigned to the &lt;see cref=&quot;P:System.Data.SqlTypes.SqlSingle.Value&quot; /&gt; property of an instance of the &lt;see cref=&quot;T:System.Data.SqlTypes.SqlSingle&quot; /&gt; class.">表示可分配给 <see cref="P:System.Data.SqlTypes.SqlSingle.Value" /> 类实例的 <see cref="T:System.Data.SqlTypes.SqlSingle" /> 属性的最大值。</summary>
    </member>
    <member name="F:System.Data.SqlTypes.SqlSingle.MinValue">
      <summary vsli:raw="Represents the minimum value that can be assigned to &lt;see cref=&quot;P:System.Data.SqlTypes.SqlSingle.Value&quot; /&gt; property of an instance of the &lt;see cref=&quot;T:System.Data.SqlTypes.SqlSingle&quot; /&gt; class.">表示可分配给 <see cref="P:System.Data.SqlTypes.SqlSingle.Value" /> 类实例的 <see cref="T:System.Data.SqlTypes.SqlSingle" /> 属性的最小值。</summary>
    </member>
    <member name="F:System.Data.SqlTypes.SqlSingle.Null">
      <summary vsli:raw="Represents a &lt;see cref=&quot;T:System.DBNull&quot; /&gt; that can be assigned to this instance of the &lt;see cref=&quot;T:System.Data.SqlTypes.SqlSingle&quot; /&gt; structure.">表示可指派给 <see cref="T:System.DBNull" /> 结构的此实例的 <see cref="T:System.Data.SqlTypes.SqlSingle" />。</summary>
    </member>
    <member name="F:System.Data.SqlTypes.SqlSingle.Zero">
      <summary vsli:raw="Represents the zero value that can be assigned to the &lt;see cref=&quot;P:System.Data.SqlTypes.SqlSingle.Value&quot; /&gt; property of an instance of the &lt;see cref=&quot;T:System.Data.SqlTypes.SqlSingle&quot; /&gt; class.">表示可分配给 <see cref="P:System.Data.SqlTypes.SqlSingle.Value" /> 类实例的 <see cref="T:System.Data.SqlTypes.SqlSingle" /> 属性的零值。</summary>
    </member>
    <member name="M:System.Data.SqlTypes.SqlSingle.#ctor(System.Double)">
      <summary vsli:raw="Initializes a new instance of the &lt;see cref=&quot;T:System.Data.SqlTypes.SqlSingle&quot; /&gt; structure using the supplied double parameter.">使用提供的 double 类型的参数初始化 <see cref="T:System.Data.SqlTypes.SqlSingle" /> 结构的新实例。</summary>
      <param name="value" vsli:raw="A double value which will be used as the &lt;see cref=&quot;P:System.Data.SqlTypes.SqlSingle.Value&quot; /&gt; of the new &lt;see cref=&quot;T:System.Data.SqlTypes.SqlSingle&quot; /&gt; structure.">一个双精度型值，它将用作新 <see cref="P:System.Data.SqlTypes.SqlSingle.Value" /> 结构的 <see cref="T:System.Data.SqlTypes.SqlSingle" />。</param>
    </member>
    <member name="M:System.Data.SqlTypes.SqlSingle.#ctor(System.Single)">
      <summary vsli:raw="Initializes a new instance of the &lt;see cref=&quot;T:System.Data.SqlTypes.SqlSingle&quot; /&gt; structure.">初始化 <see cref="T:System.Data.SqlTypes.SqlSingle" /> 结构的新实例。</summary>
      <param name="value" vsli:raw="A floating point number which will be used as the &lt;see cref=&quot;P:System.Data.SqlTypes.SqlSingle.Value&quot; /&gt; of the new &lt;see cref=&quot;T:System.Data.SqlTypes.SqlSingle&quot; /&gt; structure.">一个浮点数，它将用作新 <see cref="P:System.Data.SqlTypes.SqlSingle.Value" /> 结构的 <see cref="T:System.Data.SqlTypes.SqlSingle" />。</param>
    </member>
    <member name="M:System.Data.SqlTypes.SqlSingle.Add(System.Data.SqlTypes.SqlSingle,System.Data.SqlTypes.SqlSingle)">
      <summary vsli:raw="Computes the sum of the two specified &lt;see cref=&quot;T:System.Data.SqlTypes.SqlSingle&quot; /&gt; structures.">计算两个指定的 <see cref="T:System.Data.SqlTypes.SqlSingle" /> 结构的和。</summary>
      <param name="x" vsli:raw="A &lt;see cref=&quot;T:System.Data.SqlTypes.SqlSingle&quot; /&gt; structure.">
        <see cref="T:System.Data.SqlTypes.SqlSingle" /> 结构。</param>
      <param name="y" vsli:raw="A &lt;see cref=&quot;T:System.Data.SqlTypes.SqlSingle&quot; /&gt; structure.">
        <see cref="T:System.Data.SqlTypes.SqlSingle" /> 结构。</param>
      <returns vsli:raw="A &lt;see cref=&quot;T:System.Data.SqlTypes.SqlSingle&quot; /&gt; structure that contains the sum of the two specified &lt;see cref=&quot;T:System.Data.SqlTypes.SqlSingle&quot; /&gt; structures.">一个 <see cref="T:System.Data.SqlTypes.SqlSingle" /> 结构，包含两个指定 <see cref="T:System.Data.SqlTypes.SqlSingle" /> 结构的和。</returns>
    </member>
    <member name="M:System.Data.SqlTypes.SqlSingle.CompareTo(System.Data.SqlTypes.SqlSingle)">
      <summary vsli:raw="Compares this &lt;see cref=&quot;T:System.Data.SqlTypes.SqlSingle&quot; /&gt; instance to the supplied &lt;see cref=&quot;T:System.Data.SqlTypes.SqlSingle&quot; /&gt; and returns an indication of their relative values.">将此 <see cref="T:System.Data.SqlTypes.SqlSingle" /> 实例与所提供的 <see cref="T:System.Data.SqlTypes.SqlSingle" /> 进行比较，并返回二者相对值的指示值。</summary>
      <param name="value" vsli:raw="The &lt;see cref=&quot;T:System.Data.SqlTypes.SqlSingle&quot; /&gt; to be compared.">要比较的 <see cref="T:System.Data.SqlTypes.SqlSingle" />。</param>
      <returns vsli:raw="A signed number that indicates the relative values of the instance and the object.  &#xA;  &#xA; &lt;list type=&quot;table&quot;&gt;&lt;listheader&gt;&lt;term&gt; Return Value&lt;/term&gt;&lt;description&gt; Condition&lt;/description&gt;&lt;/listheader&gt;&lt;item&gt;&lt;term&gt; Less than zero&lt;/term&gt;&lt;description&gt; This instance is less than the object.&lt;/description&gt;&lt;/item&gt;&lt;item&gt;&lt;term&gt; Zero&lt;/term&gt;&lt;description&gt; This instance is the same as the object.&lt;/description&gt;&lt;/item&gt;&lt;item&gt;&lt;term&gt; Greater than zero&lt;/term&gt;&lt;description&gt; This instance is greater than the object  &#xA;  &#xA; -or-  &#xA;  &#xA; The object is a null reference (&lt;see langword=&quot;Nothing&quot; /&gt; in Visual Basic)&lt;/description&gt;&lt;/item&gt;&lt;/list&gt;">一个有符号的数字，它指示该实例和对象的相对值。  
  
 <list type="table"><listheader><term> 返回值</term><description> 条件</description></listheader><item><term> 小于零</term><description> 此实例小于该对象。</description></item><item><term> 零</term><description> 此实例等于该对象。</description></item><item><term> 大于零</term><description> 此实例大于该对象 
- 或 - 
该对象是空引用（在 Visual Basic 中为 <see langword="Nothing" />）</description></item></list></returns>
    </member>
    <member name="M:System.Data.SqlTypes.SqlSingle.CompareTo(System.Object)">
      <summary vsli:raw="Compares this &lt;see cref=&quot;T:System.Data.SqlTypes.SqlSingle&quot; /&gt; instance to the supplied &lt;see cref=&quot;T:System.Object&quot; /&gt; and returns an indication of their relative values.">将此 <see cref="T:System.Data.SqlTypes.SqlSingle" /> 实例与所提供的 <see cref="T:System.Object" /> 进行比较，并返回二者相对值的指示值。</summary>
      <param name="value" vsli:raw="The &lt;see cref=&quot;T:System.Object&quot; /&gt; to be compared.">要比较的 <see cref="T:System.Object" />。</param>
      <returns vsli:raw="A signed number that indicates the relative values of the instance and the object.  &#xA;  &#xA; &lt;list type=&quot;table&quot;&gt;&lt;listheader&gt;&lt;term&gt; Return value&lt;/term&gt;&lt;description&gt; Condition&lt;/description&gt;&lt;/listheader&gt;&lt;item&gt;&lt;term&gt; Less than zero&lt;/term&gt;&lt;description&gt; This instance is less than the object.&lt;/description&gt;&lt;/item&gt;&lt;item&gt;&lt;term&gt; Zero&lt;/term&gt;&lt;description&gt; This instance is the same as the object.&lt;/description&gt;&lt;/item&gt;&lt;item&gt;&lt;term&gt; Greater than zero&lt;/term&gt;&lt;description&gt; This instance is greater than the object  &#xA;  &#xA; -or-  &#xA;  &#xA; The object is a null reference (&lt;see langword=&quot;Nothing&quot; /&gt; in Visual Basic)&lt;/description&gt;&lt;/item&gt;&lt;/list&gt;">一个有符号的数字，它指示该实例和对象的相对值。  
  
 <list type="table"><listheader><term> 返回值</term><description> 条件</description></listheader><item><term> 小于零</term><description> 此实例小于该对象。</description></item><item><term> 零</term><description> 此实例等于该对象。</description></item><item><term> 大于零</term><description> 此实例大于该对象 
- 或 - 
该对象是空引用（在 Visual Basic 中为 <see langword="Nothing" />）</description></item></list></returns>
    </member>
    <member name="M:System.Data.SqlTypes.SqlSingle.Divide(System.Data.SqlTypes.SqlSingle,System.Data.SqlTypes.SqlSingle)">
      <summary vsli:raw="Divides the first &lt;see cref=&quot;T:System.Data.SqlTypes.SqlSingle&quot; /&gt; structure by the second.">将第一个 <see cref="T:System.Data.SqlTypes.SqlSingle" /> 结构除以第二个结构。</summary>
      <param name="x" vsli:raw="A &lt;see cref=&quot;T:System.Data.SqlTypes.SqlSingle&quot; /&gt; structure.">
        <see cref="T:System.Data.SqlTypes.SqlSingle" /> 结构。</param>
      <param name="y" vsli:raw="A &lt;see cref=&quot;T:System.Data.SqlTypes.SqlSingle&quot; /&gt; structure.">
        <see cref="T:System.Data.SqlTypes.SqlSingle" /> 结构。</param>
      <returns vsli:raw="A &lt;see langword=&quot;SqlInt64&quot; /&gt; structure that contains the results of the division.">一个 <see langword="SqlInt64" /> 结构，包含该除法运算的结果。</returns>
    </member>
    <member name="M:System.Data.SqlTypes.SqlSingle.Equals(System.Data.SqlTypes.SqlSingle,System.Data.SqlTypes.SqlSingle)">
      <summary vsli:raw="Performs a logical comparison of the two &lt;see cref=&quot;T:System.Data.SqlTypes.SqlSingle&quot; /&gt; parameters to determine whether they are equal.">对两个 <see cref="T:System.Data.SqlTypes.SqlSingle" /> 参数执行逻辑比较，以确定它们是否相等。</summary>
      <param name="x" vsli:raw="A &lt;see cref=&quot;T:System.Data.SqlTypes.SqlSingle&quot; /&gt; structure.">
        <see cref="T:System.Data.SqlTypes.SqlSingle" /> 结构。</param>
      <param name="y" vsli:raw="A &lt;see cref=&quot;T:System.Data.SqlTypes.SqlSingle&quot; /&gt; structure.">
        <see cref="T:System.Data.SqlTypes.SqlSingle" /> 结构。</param>
      <returns vsli:raw="&lt;see langword=&quot;true&quot; /&gt; if the two values are equal. Otherwise, &lt;see langword=&quot;false&quot; /&gt;. If either instance is null, then the &lt;see langword=&quot;SqlSingle&quot; /&gt; will be null.">如果两个值相等，则为 <see langword="true" />。 否则为 <see langword="false" />。 如果任一实例为 null，则 <see langword="SqlSingle" /> 将为 null。</returns>
    </member>
    <member name="M:System.Data.SqlTypes.SqlSingle.Equals(System.Object)">
      <summary vsli:raw="Compares the supplied object parameter to the &lt;see cref=&quot;P:System.Data.SqlTypes.SqlSingle.Value&quot; /&gt; property of the &lt;see cref=&quot;T:System.Data.SqlTypes.SqlSingle&quot; /&gt; object.">将提供的对象参数与 <see cref="P:System.Data.SqlTypes.SqlSingle.Value" /> 对象的 <see cref="T:System.Data.SqlTypes.SqlSingle" /> 属性进行比较。</summary>
      <param name="value" vsli:raw="The object to be compared.">要比较的对象。</param>
      <returns vsli:raw="&lt;see langword=&quot;true&quot; /&gt; if the object is an instance of &lt;see cref=&quot;T:System.Data.SqlTypes.SqlSingle&quot; /&gt; and the two are equal. Otherwise, &lt;see langword=&quot;false&quot; /&gt;.">如果对象是 <see cref="T:System.Data.SqlTypes.SqlSingle" /> 的实例并且两者相等，则为 <see langword="true" />。 否则为 <see langword="false" />。</returns>
    </member>
    <member name="M:System.Data.SqlTypes.SqlSingle.GetHashCode">
      <summary vsli:raw="Gets the hash code for this instance.">获取此实例的哈希代码。</summary>
      <returns vsli:raw="A 32-bit signed integer hash code.">32 位有符号整数哈希代码。</returns>
    </member>
    <member name="M:System.Data.SqlTypes.SqlSingle.GetXsdType(System.Xml.Schema.XmlSchemaSet)">
      <summary vsli:raw="Returns the XML Schema definition language (XSD) of the specified &lt;see cref=&quot;T:System.Xml.Schema.XmlSchemaSet&quot; /&gt;.">返回指定的 <see cref="T:System.Xml.Schema.XmlSchemaSet" /> 的 XML 架构定义语言 (XSD)。</summary>
      <param name="schemaSet" vsli:raw="A &lt;see cref=&quot;T:System.Xml.Schema.XmlSchemaSet&quot; /&gt;.">
        <see cref="T:System.Xml.Schema.XmlSchemaSet" />。</param>
      <returns vsli:raw="A &lt;see langword=&quot;string&quot; /&gt; value that indicates the XSD of the specified &lt;see cref=&quot;T:System.Xml.Schema.XmlSchemaSet&quot; /&gt;.">指示指定的 <see cref="T:System.Xml.Schema.XmlSchemaSet" /> 的 XSD 的 <see langword="string" /> 值。</returns>
    </member>
    <member name="M:System.Data.SqlTypes.SqlSingle.GreaterThan(System.Data.SqlTypes.SqlSingle,System.Data.SqlTypes.SqlSingle)">
      <summary vsli:raw="Performs a logical comparison of the two &lt;see cref=&quot;T:System.Data.SqlTypes.SqlSingle&quot; /&gt; operands to determine whether the first is greater than the second.">对两个 <see cref="T:System.Data.SqlTypes.SqlSingle" /> 操作数执行逻辑比较，以确定第一个操作数是否大于第二个操作数。</summary>
      <param name="x" vsli:raw="A &lt;see cref=&quot;T:System.Data.SqlTypes.SqlSingle&quot; /&gt; structure.">
        <see cref="T:System.Data.SqlTypes.SqlSingle" /> 结构。</param>
      <param name="y" vsli:raw="A &lt;see cref=&quot;T:System.Data.SqlTypes.SqlSingle&quot; /&gt; structure.">
        <see cref="T:System.Data.SqlTypes.SqlSingle" /> 结构。</param>
      <returns vsli:raw="A &lt;see cref=&quot;T:System.Data.SqlTypes.SqlBoolean&quot; /&gt; that is &lt;see cref=&quot;F:System.Data.SqlTypes.SqlBoolean.True&quot; /&gt; if the first instance is greater than the second instance. Otherwise, &lt;see cref=&quot;F:System.Data.SqlTypes.SqlBoolean.False&quot; /&gt;. If either instance of &lt;see cref=&quot;T:System.Data.SqlTypes.SqlSingle&quot; /&gt; is null, the &lt;see cref=&quot;P:System.Data.SqlTypes.SqlBoolean.Value&quot; /&gt; of the &lt;see cref=&quot;T:System.Data.SqlTypes.SqlBoolean&quot; /&gt; will be &lt;see cref=&quot;F:System.Data.SqlTypes.SqlBoolean.Null&quot; /&gt;.">一个 <see cref="T:System.Data.SqlTypes.SqlBoolean" />，如果第一个实例大于第二个实例，则它为 <see cref="F:System.Data.SqlTypes.SqlBoolean.True" />。 否则为 <see cref="F:System.Data.SqlTypes.SqlBoolean.False" />。 如果 <see cref="T:System.Data.SqlTypes.SqlSingle" /> 的任一实例为空，则 <see cref="P:System.Data.SqlTypes.SqlBoolean.Value" /> 的 <see cref="T:System.Data.SqlTypes.SqlBoolean" /> 将为 <see cref="F:System.Data.SqlTypes.SqlBoolean.Null" />。</returns>
    </member>
    <member name="M:System.Data.SqlTypes.SqlSingle.GreaterThanOrEqual(System.Data.SqlTypes.SqlSingle,System.Data.SqlTypes.SqlSingle)">
      <summary vsli:raw="Performs a logical comparison of two &lt;see cref=&quot;T:System.Data.SqlTypes.SqlSingle&quot; /&gt; structures to determine whether the first is greater than or equal to the second.">对两个 <see cref="T:System.Data.SqlTypes.SqlSingle" /> 结构执行逻辑比较，以确定第一个结构是否大于或等于第二个结构。</summary>
      <param name="x" vsli:raw="A &lt;see cref=&quot;T:System.Data.SqlTypes.SqlSingle&quot; /&gt; structure.">
        <see cref="T:System.Data.SqlTypes.SqlSingle" /> 结构。</param>
      <param name="y" vsli:raw="A &lt;see cref=&quot;T:System.Data.SqlTypes.SqlSingle&quot; /&gt; structure.">
        <see cref="T:System.Data.SqlTypes.SqlSingle" /> 结构。</param>
      <returns vsli:raw="A &lt;see cref=&quot;T:System.Data.SqlTypes.SqlBoolean&quot; /&gt; that is &lt;see cref=&quot;F:System.Data.SqlTypes.SqlBoolean.True&quot; /&gt; if the first instance is greater than or equal to the second instance. Otherwise, &lt;see cref=&quot;F:System.Data.SqlTypes.SqlBoolean.False&quot; /&gt;. If either instance of &lt;see cref=&quot;T:System.Data.SqlTypes.SqlSingle&quot; /&gt; is null, the &lt;see cref=&quot;P:System.Data.SqlTypes.SqlBoolean.Value&quot; /&gt; of the &lt;see cref=&quot;T:System.Data.SqlTypes.SqlBoolean&quot; /&gt; will be &lt;see cref=&quot;F:System.Data.SqlTypes.SqlBoolean.Null&quot; /&gt;.">一个 <see cref="T:System.Data.SqlTypes.SqlBoolean" />，如果第一个实例大于或等于第二个实例，则为 <see cref="F:System.Data.SqlTypes.SqlBoolean.True" />。 否则为 <see cref="F:System.Data.SqlTypes.SqlBoolean.False" />。 如果 <see cref="T:System.Data.SqlTypes.SqlSingle" /> 的任一实例为空，则 <see cref="P:System.Data.SqlTypes.SqlBoolean.Value" /> 的 <see cref="T:System.Data.SqlTypes.SqlBoolean" /> 将为 <see cref="F:System.Data.SqlTypes.SqlBoolean.Null" />。</returns>
    </member>
    <member name="M:System.Data.SqlTypes.SqlSingle.LessThan(System.Data.SqlTypes.SqlSingle,System.Data.SqlTypes.SqlSingle)">
      <summary vsli:raw="Performs a logical comparison of the two &lt;see cref=&quot;T:System.Data.SqlTypes.SqlSingle&quot; /&gt; parameters to determine whether the first is less than the second.">对两个 <see cref="T:System.Data.SqlTypes.SqlSingle" /> 参数执行逻辑比较，以确定第一个参数是否小于第二个参数。</summary>
      <param name="x" vsli:raw="A &lt;see cref=&quot;T:System.Data.SqlTypes.SqlSingle&quot; /&gt; structure.">
        <see cref="T:System.Data.SqlTypes.SqlSingle" /> 结构。</param>
      <param name="y" vsli:raw="A &lt;see cref=&quot;T:System.Data.SqlTypes.SqlSingle&quot; /&gt; structure.">
        <see cref="T:System.Data.SqlTypes.SqlSingle" /> 结构。</param>
      <returns vsli:raw="A &lt;see cref=&quot;T:System.Data.SqlTypes.SqlBoolean&quot; /&gt; that is &lt;see cref=&quot;F:System.Data.SqlTypes.SqlBoolean.True&quot; /&gt; if the first instance is less than the second instance. Otherwise, &lt;see cref=&quot;F:System.Data.SqlTypes.SqlBoolean.False&quot; /&gt;. If either instance of &lt;see cref=&quot;T:System.Data.SqlTypes.SqlSingle&quot; /&gt; is null, the &lt;see cref=&quot;P:System.Data.SqlTypes.SqlBoolean.Value&quot; /&gt; of the &lt;see cref=&quot;T:System.Data.SqlTypes.SqlBoolean&quot; /&gt; will be &lt;see cref=&quot;F:System.Data.SqlTypes.SqlBoolean.Null&quot; /&gt;.">一个 <see cref="T:System.Data.SqlTypes.SqlBoolean" />，如果第一个实例小于第二个实例，则它为 <see cref="F:System.Data.SqlTypes.SqlBoolean.True" />。 否则为 <see cref="F:System.Data.SqlTypes.SqlBoolean.False" />。 如果 <see cref="T:System.Data.SqlTypes.SqlSingle" /> 的任一实例为空，则 <see cref="P:System.Data.SqlTypes.SqlBoolean.Value" /> 的 <see cref="T:System.Data.SqlTypes.SqlBoolean" /> 将为 <see cref="F:System.Data.SqlTypes.SqlBoolean.Null" />。</returns>
    </member>
    <member name="M:System.Data.SqlTypes.SqlSingle.LessThanOrEqual(System.Data.SqlTypes.SqlSingle,System.Data.SqlTypes.SqlSingle)">
      <summary vsli:raw="Performs a logical comparison of the two &lt;see cref=&quot;T:System.Data.SqlTypes.SqlSingle&quot; /&gt; parameters to determine whether the first is less than or equal to the second.">对两个 <see cref="T:System.Data.SqlTypes.SqlSingle" /> 参数执行逻辑比较，以确定第一个参数是否小于或等于第二个参数。</summary>
      <param name="x" vsli:raw="A &lt;see cref=&quot;T:System.Data.SqlTypes.SqlSingle&quot; /&gt; structure.">
        <see cref="T:System.Data.SqlTypes.SqlSingle" /> 结构。</param>
      <param name="y" vsli:raw="A &lt;see cref=&quot;T:System.Data.SqlTypes.SqlSingle&quot; /&gt; structure.">
        <see cref="T:System.Data.SqlTypes.SqlSingle" /> 结构。</param>
      <returns vsli:raw="A &lt;see cref=&quot;T:System.Data.SqlTypes.SqlBoolean&quot; /&gt; that is &lt;see cref=&quot;F:System.Data.SqlTypes.SqlBoolean.True&quot; /&gt; if the first instance is less than or equal to the second instance. Otherwise, &lt;see cref=&quot;F:System.Data.SqlTypes.SqlBoolean.False&quot; /&gt;. If either instance of &lt;see cref=&quot;T:System.Data.SqlTypes.SqlSingle&quot; /&gt; is null, the &lt;see cref=&quot;P:System.Data.SqlTypes.SqlBoolean.Value&quot; /&gt; of the &lt;see cref=&quot;T:System.Data.SqlTypes.SqlBoolean&quot; /&gt; will be &lt;see cref=&quot;F:System.Data.SqlTypes.SqlBoolean.Null&quot; /&gt;.">一个 <see cref="T:System.Data.SqlTypes.SqlBoolean" />，如果第一个实例小于或等于第二个实例，则它为 <see cref="F:System.Data.SqlTypes.SqlBoolean.True" />。 否则为 <see cref="F:System.Data.SqlTypes.SqlBoolean.False" />。 如果 <see cref="T:System.Data.SqlTypes.SqlSingle" /> 的任一实例为空，则 <see cref="P:System.Data.SqlTypes.SqlBoolean.Value" /> 的 <see cref="T:System.Data.SqlTypes.SqlBoolean" /> 将为 <see cref="F:System.Data.SqlTypes.SqlBoolean.Null" />。</returns>
    </member>
    <member name="M:System.Data.SqlTypes.SqlSingle.Multiply(System.Data.SqlTypes.SqlSingle,System.Data.SqlTypes.SqlSingle)">
      <summary vsli:raw="Computes the product of the two specified &lt;see cref=&quot;T:System.Data.SqlTypes.SqlSingle&quot; /&gt; structures.">计算两个指定 <see cref="T:System.Data.SqlTypes.SqlSingle" /> 结构的乘积。</summary>
      <param name="x" vsli:raw="A &lt;see cref=&quot;T:System.Data.SqlTypes.SqlSingle&quot; /&gt; structure.">
        <see cref="T:System.Data.SqlTypes.SqlSingle" /> 结构。</param>
      <param name="y" vsli:raw="A &lt;see cref=&quot;T:System.Data.SqlTypes.SqlSingle&quot; /&gt; structure.">
        <see cref="T:System.Data.SqlTypes.SqlSingle" /> 结构。</param>
      <returns vsli:raw="A &lt;see cref=&quot;T:System.Data.SqlTypes.SqlSingle&quot; /&gt; structure that contains the product of the multiplication.">一个 <see cref="T:System.Data.SqlTypes.SqlSingle" /> 结构，包含该乘法运算的乘积。</returns>
    </member>
    <member name="M:System.Data.SqlTypes.SqlSingle.NotEquals(System.Data.SqlTypes.SqlSingle,System.Data.SqlTypes.SqlSingle)">
      <summary vsli:raw="Performs a logical comparison of the two &lt;see cref=&quot;T:System.Data.SqlTypes.SqlSingle&quot; /&gt; parameters to determine whether they are not equal.">对两个 <see cref="T:System.Data.SqlTypes.SqlSingle" /> 参数执行逻辑比较，确定它们是否不相等。</summary>
      <param name="x" vsli:raw="A &lt;see cref=&quot;T:System.Data.SqlTypes.SqlSingle&quot; /&gt; structure.">
        <see cref="T:System.Data.SqlTypes.SqlSingle" /> 结构。</param>
      <param name="y" vsli:raw="A &lt;see cref=&quot;T:System.Data.SqlTypes.SqlSingle&quot; /&gt; structure.">
        <see cref="T:System.Data.SqlTypes.SqlSingle" /> 结构。</param>
      <returns vsli:raw="A &lt;see cref=&quot;T:System.Data.SqlTypes.SqlBoolean&quot; /&gt; that is &lt;see cref=&quot;F:System.Data.SqlTypes.SqlBoolean.True&quot; /&gt; if the two instances are not equal or &lt;see cref=&quot;F:System.Data.SqlTypes.SqlBoolean.False&quot; /&gt; if the two instances are equal. If either instance of &lt;see cref=&quot;T:System.Data.SqlTypes.SqlSingle&quot; /&gt; is null, the &lt;see cref=&quot;P:System.Data.SqlTypes.SqlBoolean.Value&quot; /&gt; of the &lt;see cref=&quot;T:System.Data.SqlTypes.SqlBoolean&quot; /&gt; will be &lt;see cref=&quot;F:System.Data.SqlTypes.SqlBoolean.Null&quot; /&gt;.">一个 <see cref="T:System.Data.SqlTypes.SqlBoolean" />，它在两个实例不等时为 <see cref="F:System.Data.SqlTypes.SqlBoolean.True" />，在两个实例相等时为 <see cref="F:System.Data.SqlTypes.SqlBoolean.False" />。 如果 <see cref="T:System.Data.SqlTypes.SqlSingle" /> 的任一实例为空，则 <see cref="P:System.Data.SqlTypes.SqlBoolean.Value" /> 的 <see cref="T:System.Data.SqlTypes.SqlBoolean" /> 将为 <see cref="F:System.Data.SqlTypes.SqlBoolean.Null" />。</returns>
    </member>
    <member name="M:System.Data.SqlTypes.SqlSingle.op_Addition(System.Data.SqlTypes.SqlSingle,System.Data.SqlTypes.SqlSingle)">
      <summary vsli:raw="Computes the sum of the two specified &lt;see cref=&quot;T:System.Data.SqlTypes.SqlSingle&quot; /&gt; structures.">计算两个指定的 <see cref="T:System.Data.SqlTypes.SqlSingle" /> 结构的和。</summary>
      <param name="x" vsli:raw="A &lt;see cref=&quot;T:System.Data.SqlTypes.SqlSingle&quot; /&gt; structure.">
        <see cref="T:System.Data.SqlTypes.SqlSingle" /> 结构。</param>
      <param name="y" vsli:raw="A &lt;see cref=&quot;T:System.Data.SqlTypes.SqlSingle&quot; /&gt; structure.">
        <see cref="T:System.Data.SqlTypes.SqlSingle" /> 结构。</param>
      <returns vsli:raw="A &lt;see cref=&quot;T:System.Data.SqlTypes.SqlSingle&quot; /&gt; structure that contains the sum of the two specified &lt;see cref=&quot;T:System.Data.SqlTypes.SqlSingle&quot; /&gt; structures.">一个 <see cref="T:System.Data.SqlTypes.SqlSingle" /> 结构，包含两个指定 <see cref="T:System.Data.SqlTypes.SqlSingle" /> 结构的和。</returns>
    </member>
    <member name="M:System.Data.SqlTypes.SqlSingle.op_Division(System.Data.SqlTypes.SqlSingle,System.Data.SqlTypes.SqlSingle)">
      <summary vsli:raw="Divides the first &lt;see cref=&quot;T:System.Data.SqlTypes.SqlSingle&quot; /&gt; structure by the second.">将第一个 <see cref="T:System.Data.SqlTypes.SqlSingle" /> 结构除以第二个结构。</summary>
      <param name="x" vsli:raw="A &lt;see cref=&quot;T:System.Data.SqlTypes.SqlSingle&quot; /&gt; structure.">
        <see cref="T:System.Data.SqlTypes.SqlSingle" /> 结构。</param>
      <param name="y" vsli:raw="A &lt;see cref=&quot;T:System.Data.SqlTypes.SqlSingle&quot; /&gt; structure.">
        <see cref="T:System.Data.SqlTypes.SqlSingle" /> 结构。</param>
      <returns vsli:raw="A &lt;see cref=&quot;T:System.Data.SqlTypes.SqlSingle&quot; /&gt; structure that contains the results of the division.">一个 <see cref="T:System.Data.SqlTypes.SqlSingle" /> 结构，包含该除法运算的结果。</returns>
    </member>
    <member name="M:System.Data.SqlTypes.SqlSingle.op_Equality(System.Data.SqlTypes.SqlSingle,System.Data.SqlTypes.SqlSingle)">
      <summary vsli:raw="Performs a logical comparison of the two SqlSingle parameters to determine whether they are equal.">对两个 SqlSingle 参数执行逻辑比较，以确定它们是否相等。</summary>
      <param name="x" vsli:raw="A &lt;see cref=&quot;T:System.Data.SqlTypes.SqlSingle&quot; /&gt; structure.">
        <see cref="T:System.Data.SqlTypes.SqlSingle" /> 结构。</param>
      <param name="y" vsli:raw="A &lt;see cref=&quot;T:System.Data.SqlTypes.SqlSingle&quot; /&gt; structure.">
        <see cref="T:System.Data.SqlTypes.SqlSingle" /> 结构。</param>
      <returns vsli:raw="A &lt;see cref=&quot;T:System.Data.SqlTypes.SqlBoolean&quot; /&gt; that is &lt;see cref=&quot;F:System.Data.SqlTypes.SqlBoolean.True&quot; /&gt; if the two instances are equal or &lt;see cref=&quot;F:System.Data.SqlTypes.SqlBoolean.False&quot; /&gt; if the two instances are not equal. If either instance of &lt;see cref=&quot;T:System.Data.SqlTypes.SqlSingle&quot; /&gt; is null, the &lt;see cref=&quot;P:System.Data.SqlTypes.SqlBoolean.Value&quot; /&gt; of the &lt;see cref=&quot;T:System.Data.SqlTypes.SqlBoolean&quot; /&gt; will be &lt;see cref=&quot;F:System.Data.SqlTypes.SqlBoolean.Null&quot; /&gt;.">一个 <see cref="T:System.Data.SqlTypes.SqlBoolean" />，它在两个实例相等时为 <see cref="F:System.Data.SqlTypes.SqlBoolean.True" />，在两个实例不等时为 <see cref="F:System.Data.SqlTypes.SqlBoolean.False" />。 如果 <see cref="T:System.Data.SqlTypes.SqlSingle" /> 的任一实例为空，则 <see cref="P:System.Data.SqlTypes.SqlBoolean.Value" /> 的 <see cref="T:System.Data.SqlTypes.SqlBoolean" /> 将为 <see cref="F:System.Data.SqlTypes.SqlBoolean.Null" />。</returns>
    </member>
    <member name="M:System.Data.SqlTypes.SqlSingle.op_Explicit(System.Data.SqlTypes.SqlBoolean)~System.Data.SqlTypes.SqlSingle">
      <summary vsli:raw="This implicit operator converts the supplied &lt;see cref=&quot;T:System.Data.SqlTypes.SqlBoolean&quot; /&gt; to &lt;see cref=&quot;T:System.Data.SqlTypes.SqlSingle&quot; /&gt;.">此隐式运算符将提供的 <see cref="T:System.Data.SqlTypes.SqlBoolean" /> 转换为 <see cref="T:System.Data.SqlTypes.SqlSingle" />。</summary>
      <param name="x" vsli:raw="The &lt;see cref=&quot;T:System.Data.SqlTypes.SqlBoolean&quot; /&gt; structure to be converted.">要转换的 <see cref="T:System.Data.SqlTypes.SqlBoolean" /> 结构。</param>
      <returns vsli:raw="A new &lt;see cref=&quot;T:System.Data.SqlTypes.SqlSingle&quot; /&gt; structure whose &lt;see cref=&quot;P:System.Data.SqlTypes.SqlSingle.Value&quot; /&gt; is equal to the &lt;see cref=&quot;P:System.Data.SqlTypes.SqlBoolean.ByteValue&quot; /&gt; of the &lt;see cref=&quot;T:System.Data.SqlTypes.SqlBoolean&quot; /&gt; parameter.">一个新的 <see cref="T:System.Data.SqlTypes.SqlSingle" /> 结构，它的 <see cref="P:System.Data.SqlTypes.SqlSingle.Value" /> 等于 <see cref="P:System.Data.SqlTypes.SqlBoolean.ByteValue" /> 参数的 <see cref="T:System.Data.SqlTypes.SqlBoolean" />。</returns>
    </member>
    <member name="M:System.Data.SqlTypes.SqlSingle.op_Explicit(System.Data.SqlTypes.SqlDouble)~System.Data.SqlTypes.SqlSingle">
      <summary vsli:raw="Converts the supplied &lt;see cref=&quot;T:System.Data.SqlTypes.SqlDouble&quot; /&gt; parameter to &lt;see cref=&quot;T:System.Data.SqlTypes.SqlSingle&quot; /&gt;.">将提供的 <see cref="T:System.Data.SqlTypes.SqlDouble" /> 参数转换为 <see cref="T:System.Data.SqlTypes.SqlSingle" />。</summary>
      <param name="x" vsli:raw="The &lt;see cref=&quot;T:System.Data.SqlTypes.SqlDouble&quot; /&gt; parameter to be converted.">要转换的 <see cref="T:System.Data.SqlTypes.SqlDouble" /> 参数。</param>
      <returns vsli:raw="A new &lt;see cref=&quot;T:System.Data.SqlTypes.SqlSingle&quot; /&gt; structure whose &lt;see cref=&quot;P:System.Data.SqlTypes.SqlSingle.Value&quot; /&gt; is equal to the &lt;see cref=&quot;P:System.Data.SqlTypes.SqlDouble.Value&quot; /&gt; of the &lt;see cref=&quot;T:System.Data.SqlTypes.SqlDouble&quot; /&gt; parameter.">一个新的 <see cref="T:System.Data.SqlTypes.SqlSingle" /> 结构，它的 <see cref="P:System.Data.SqlTypes.SqlSingle.Value" /> 等于 <see cref="P:System.Data.SqlTypes.SqlDouble.Value" /> 参数的 <see cref="T:System.Data.SqlTypes.SqlDouble" />。</returns>
    </member>
    <member name="M:System.Data.SqlTypes.SqlSingle.op_Explicit(System.Data.SqlTypes.SqlSingle)~System.Single">
      <summary vsli:raw="Converts the specified &lt;see cref=&quot;T:System.Data.SqlTypes.SqlSingle&quot; /&gt; structure to float.">将指定的 <see cref="T:System.Data.SqlTypes.SqlSingle" /> 结构转换为浮点型。</summary>
      <param name="x" vsli:raw="The &lt;see cref=&quot;T:System.Data.SqlTypes.SqlSingle&quot; /&gt; value to be converted to float.">要转换为浮点型的 <see cref="T:System.Data.SqlTypes.SqlSingle" /> 值。</param>
      <returns vsli:raw="A float that contains the value of the &lt;see cref=&quot;T:System.Data.SqlTypes.SqlSingle&quot; /&gt; structure.">一个 float 类型值，包含 <see cref="T:System.Data.SqlTypes.SqlSingle" /> 结构的值。</returns>
    </member>
    <member name="M:System.Data.SqlTypes.SqlSingle.op_Explicit(System.Data.SqlTypes.SqlString)~System.Data.SqlTypes.SqlSingle">
      <summary vsli:raw="Converts the supplied &lt;see cref=&quot;T:System.Data.SqlTypes.SqlString&quot; /&gt; parameter to &lt;see cref=&quot;T:System.Data.SqlTypes.SqlSingle&quot; /&gt;.">将提供的 <see cref="T:System.Data.SqlTypes.SqlString" /> 参数转换为 <see cref="T:System.Data.SqlTypes.SqlSingle" />。</summary>
      <param name="x" vsli:raw="The &lt;see cref=&quot;T:System.Data.SqlTypes.SqlString&quot; /&gt; object to be converted.">要转换的 <see cref="T:System.Data.SqlTypes.SqlString" /> 对象。</param>
      <returns vsli:raw="A new &lt;see cref=&quot;T:System.Data.SqlTypes.SqlSingle&quot; /&gt; structure whose &lt;see cref=&quot;P:System.Data.SqlTypes.SqlSingle.Value&quot; /&gt; is equal to the value represented by the &lt;see cref=&quot;T:System.Data.SqlTypes.SqlString&quot; /&gt; parameter.">一个新的 <see cref="T:System.Data.SqlTypes.SqlSingle" /> 结构，它的 <see cref="P:System.Data.SqlTypes.SqlSingle.Value" /> 等于 <see cref="T:System.Data.SqlTypes.SqlString" /> 参数表示的值。</returns>
    </member>
    <member name="M:System.Data.SqlTypes.SqlSingle.op_GreaterThan(System.Data.SqlTypes.SqlSingle,System.Data.SqlTypes.SqlSingle)">
      <summary vsli:raw="Performs a logical comparison of the two &lt;see cref=&quot;T:System.Data.SqlTypes.SqlSingle&quot; /&gt; operands to determine whether the first is greater than the second.">对两个 <see cref="T:System.Data.SqlTypes.SqlSingle" /> 操作数执行逻辑比较，以确定第一个操作数是否大于第二个操作数。</summary>
      <param name="x" vsli:raw="A &lt;see cref=&quot;T:System.Data.SqlTypes.SqlSingle&quot; /&gt; structure.">
        <see cref="T:System.Data.SqlTypes.SqlSingle" /> 结构。</param>
      <param name="y" vsli:raw="A &lt;see cref=&quot;T:System.Data.SqlTypes.SqlSingle&quot; /&gt; structure.">
        <see cref="T:System.Data.SqlTypes.SqlSingle" /> 结构。</param>
      <returns vsli:raw="A &lt;see cref=&quot;T:System.Data.SqlTypes.SqlBoolean&quot; /&gt; that is &lt;see cref=&quot;F:System.Data.SqlTypes.SqlBoolean.True&quot; /&gt; if the first instance is greater than the second instance. Otherwise, &lt;see cref=&quot;F:System.Data.SqlTypes.SqlBoolean.False&quot; /&gt;. If either instance of &lt;see cref=&quot;T:System.Data.SqlTypes.SqlSingle&quot; /&gt; is null, the &lt;see cref=&quot;P:System.Data.SqlTypes.SqlBoolean.Value&quot; /&gt; of the &lt;see cref=&quot;T:System.Data.SqlTypes.SqlBoolean&quot; /&gt; will be &lt;see cref=&quot;F:System.Data.SqlTypes.SqlBoolean.Null&quot; /&gt;.">一个 <see cref="T:System.Data.SqlTypes.SqlBoolean" />，如果第一个实例大于第二个实例，则它为 <see cref="F:System.Data.SqlTypes.SqlBoolean.True" />。 否则为 <see cref="F:System.Data.SqlTypes.SqlBoolean.False" />。 如果 <see cref="T:System.Data.SqlTypes.SqlSingle" /> 的任一实例为空，则 <see cref="P:System.Data.SqlTypes.SqlBoolean.Value" /> 的 <see cref="T:System.Data.SqlTypes.SqlBoolean" /> 将为 <see cref="F:System.Data.SqlTypes.SqlBoolean.Null" />。</returns>
    </member>
    <member name="M:System.Data.SqlTypes.SqlSingle.op_GreaterThanOrEqual(System.Data.SqlTypes.SqlSingle,System.Data.SqlTypes.SqlSingle)">
      <summary vsli:raw="Performs a logical comparison of two &lt;see cref=&quot;T:System.Data.SqlTypes.SqlSingle&quot; /&gt; structures to determine whether the first is greater than or equal to the second.">对两个 <see cref="T:System.Data.SqlTypes.SqlSingle" /> 结构执行逻辑比较，以确定第一个结构是否大于或等于第二个结构。</summary>
      <param name="x" vsli:raw="A &lt;see cref=&quot;T:System.Data.SqlTypes.SqlSingle&quot; /&gt; structure.">
        <see cref="T:System.Data.SqlTypes.SqlSingle" /> 结构。</param>
      <param name="y" vsli:raw="A &lt;see cref=&quot;T:System.Data.SqlTypes.SqlSingle&quot; /&gt; structure.">
        <see cref="T:System.Data.SqlTypes.SqlSingle" /> 结构。</param>
      <returns vsli:raw="A &lt;see cref=&quot;T:System.Data.SqlTypes.SqlBoolean&quot; /&gt; that is &lt;see cref=&quot;F:System.Data.SqlTypes.SqlBoolean.True&quot; /&gt; if the first instance is greater than or equal to the second instance. Otherwise, &lt;see cref=&quot;F:System.Data.SqlTypes.SqlBoolean.False&quot; /&gt;. If either instance of &lt;see cref=&quot;T:System.Data.SqlTypes.SqlSingle&quot; /&gt; is null, the &lt;see cref=&quot;P:System.Data.SqlTypes.SqlBoolean.Value&quot; /&gt; of the &lt;see cref=&quot;T:System.Data.SqlTypes.SqlBoolean&quot; /&gt; will be &lt;see cref=&quot;F:System.Data.SqlTypes.SqlBoolean.Null&quot; /&gt;.">一个 <see cref="T:System.Data.SqlTypes.SqlBoolean" />，如果第一个实例大于或等于第二个实例，则为 <see cref="F:System.Data.SqlTypes.SqlBoolean.True" />。 否则为 <see cref="F:System.Data.SqlTypes.SqlBoolean.False" />。 如果 <see cref="T:System.Data.SqlTypes.SqlSingle" /> 的任一实例为空，则 <see cref="P:System.Data.SqlTypes.SqlBoolean.Value" /> 的 <see cref="T:System.Data.SqlTypes.SqlBoolean" /> 将为 <see cref="F:System.Data.SqlTypes.SqlBoolean.Null" />。</returns>
    </member>
    <member name="M:System.Data.SqlTypes.SqlSingle.op_Implicit(System.Data.SqlTypes.SqlByte)~System.Data.SqlTypes.SqlSingle">
      <summary vsli:raw="This implicit operator converts the &lt;see cref=&quot;T:System.Data.SqlTypes.SqlByte&quot; /&gt; parameter to &lt;see cref=&quot;T:System.Data.SqlTypes.SqlSingle&quot; /&gt;.">此隐式运算符将 <see cref="T:System.Data.SqlTypes.SqlByte" /> 参数转换为 <see cref="T:System.Data.SqlTypes.SqlSingle" />。</summary>
      <param name="x" vsli:raw="The &lt;see cref=&quot;T:System.Data.SqlTypes.SqlByte&quot; /&gt; to be converted.">要转换的 <see cref="T:System.Data.SqlTypes.SqlByte" />。</param>
      <returns vsli:raw="A new &lt;see cref=&quot;T:System.Data.SqlTypes.SqlSingle&quot; /&gt; structure whose &lt;see cref=&quot;P:System.Data.SqlTypes.SqlSingle.Value&quot; /&gt; property equals the &lt;see cref=&quot;P:System.Data.SqlTypes.SqlByte.Value&quot; /&gt; of the &lt;see cref=&quot;T:System.Data.SqlTypes.SqlByte&quot; /&gt; parameter.">一个新的 <see cref="T:System.Data.SqlTypes.SqlSingle" /> 结构，它的 <see cref="P:System.Data.SqlTypes.SqlSingle.Value" /> 属性等于 <see cref="P:System.Data.SqlTypes.SqlByte.Value" /> 参数的 <see cref="T:System.Data.SqlTypes.SqlByte" />。</returns>
    </member>
    <member name="M:System.Data.SqlTypes.SqlSingle.op_Implicit(System.Data.SqlTypes.SqlDecimal)~System.Data.SqlTypes.SqlSingle">
      <summary vsli:raw="Converts the supplied &lt;see cref=&quot;T:System.Data.SqlTypes.SqlDecimal&quot; /&gt; parameter to &lt;see cref=&quot;T:System.Data.SqlTypes.SqlSingle&quot; /&gt;.">将提供的 <see cref="T:System.Data.SqlTypes.SqlDecimal" /> 参数转换为 <see cref="T:System.Data.SqlTypes.SqlSingle" />。</summary>
      <param name="x" vsli:raw="The &lt;see cref=&quot;T:System.Data.SqlTypes.SqlDecimal&quot; /&gt; structure to be converted.">要转换的 <see cref="T:System.Data.SqlTypes.SqlDecimal" /> 结构。</param>
      <returns vsli:raw="A new &lt;see cref=&quot;T:System.Data.SqlTypes.SqlSingle&quot; /&gt; structure whose &lt;see cref=&quot;P:System.Data.SqlTypes.SqlSingle.Value&quot; /&gt; is equal to the &lt;see cref=&quot;P:System.Data.SqlTypes.SqlDecimal.Value&quot; /&gt; of the &lt;see cref=&quot;T:System.Data.SqlTypes.SqlDecimal&quot; /&gt; parameter.">一个新的 <see cref="T:System.Data.SqlTypes.SqlSingle" /> 结构，它的 <see cref="P:System.Data.SqlTypes.SqlSingle.Value" /> 等于 <see cref="P:System.Data.SqlTypes.SqlDecimal.Value" /> 参数的 <see cref="T:System.Data.SqlTypes.SqlDecimal" />。</returns>
    </member>
    <member name="M:System.Data.SqlTypes.SqlSingle.op_Implicit(System.Data.SqlTypes.SqlInt16)~System.Data.SqlTypes.SqlSingle">
      <summary vsli:raw="Converts the supplied &lt;see cref=&quot;T:System.Data.SqlTypes.SqlInt16&quot; /&gt; parameter to &lt;see cref=&quot;T:System.Data.SqlTypes.SqlSingle&quot; /&gt;.">将提供的 <see cref="T:System.Data.SqlTypes.SqlInt16" /> 参数转换为 <see cref="T:System.Data.SqlTypes.SqlSingle" />。</summary>
      <param name="x" vsli:raw="The &lt;see cref=&quot;T:System.Data.SqlTypes.SqlInt16&quot; /&gt; structure to be converted.">要转换的 <see cref="T:System.Data.SqlTypes.SqlInt16" /> 结构。</param>
      <returns vsli:raw="A new &lt;see cref=&quot;T:System.Data.SqlTypes.SqlSingle&quot; /&gt; structure whose &lt;see cref=&quot;P:System.Data.SqlTypes.SqlSingle.Value&quot; /&gt; is equal to the &lt;see cref=&quot;P:System.Data.SqlTypes.SqlInt16.Value&quot; /&gt; of the &lt;see cref=&quot;T:System.Data.SqlTypes.SqlInt16&quot; /&gt; parameter.">一个新的 <see cref="T:System.Data.SqlTypes.SqlSingle" /> 结构，它的 <see cref="P:System.Data.SqlTypes.SqlSingle.Value" /> 等于 <see cref="P:System.Data.SqlTypes.SqlInt16.Value" /> 参数的 <see cref="T:System.Data.SqlTypes.SqlInt16" />。</returns>
    </member>
    <member name="M:System.Data.SqlTypes.SqlSingle.op_Implicit(System.Data.SqlTypes.SqlInt32)~System.Data.SqlTypes.SqlSingle">
      <summary vsli:raw="Converts the supplied &lt;see cref=&quot;T:System.Data.SqlTypes.SqlInt32&quot; /&gt; structure to &lt;see cref=&quot;T:System.Data.SqlTypes.SqlSingle&quot; /&gt;.">将提供的 <see cref="T:System.Data.SqlTypes.SqlInt32" /> 结构转换为 <see cref="T:System.Data.SqlTypes.SqlSingle" />。</summary>
      <param name="x" vsli:raw="The &lt;see cref=&quot;T:System.Data.SqlTypes.SqlInt32&quot; /&gt; structure to be converted.">要转换的 <see cref="T:System.Data.SqlTypes.SqlInt32" /> 结构。</param>
      <returns vsli:raw="A new &lt;see cref=&quot;T:System.Data.SqlTypes.SqlSingle&quot; /&gt; structure whose &lt;see cref=&quot;P:System.Data.SqlTypes.SqlSingle.Value&quot; /&gt; is equal to the &lt;see cref=&quot;P:System.Data.SqlTypes.SqlInt32.Value&quot; /&gt; of the &lt;see cref=&quot;T:System.Data.SqlTypes.SqlInt32&quot; /&gt; parameter.">一个新的 <see cref="T:System.Data.SqlTypes.SqlSingle" /> 结构，它的 <see cref="P:System.Data.SqlTypes.SqlSingle.Value" /> 等于 <see cref="P:System.Data.SqlTypes.SqlInt32.Value" /> 参数的 <see cref="T:System.Data.SqlTypes.SqlInt32" />。</returns>
    </member>
    <member name="M:System.Data.SqlTypes.SqlSingle.op_Implicit(System.Data.SqlTypes.SqlInt64)~System.Data.SqlTypes.SqlSingle">
      <summary vsli:raw="Converts the supplied &lt;see cref=&quot;T:System.Data.SqlTypes.SqlInt64&quot; /&gt; parameter to &lt;see cref=&quot;T:System.Data.SqlTypes.SqlSingle&quot; /&gt;.">将提供的 <see cref="T:System.Data.SqlTypes.SqlInt64" /> 参数转换为 <see cref="T:System.Data.SqlTypes.SqlSingle" />。</summary>
      <param name="x" vsli:raw="The &lt;see cref=&quot;T:System.Data.SqlTypes.SqlInt64&quot; /&gt; structure to be converted.">要转换的 <see cref="T:System.Data.SqlTypes.SqlInt64" /> 结构。</param>
      <returns vsli:raw="A new &lt;see cref=&quot;T:System.Data.SqlTypes.SqlSingle&quot; /&gt; structure whose &lt;see cref=&quot;P:System.Data.SqlTypes.SqlSingle.Value&quot; /&gt; is equal to the &lt;see cref=&quot;P:System.Data.SqlTypes.SqlInt64.Value&quot; /&gt; of the &lt;see cref=&quot;T:System.Data.SqlTypes.SqlInt64&quot; /&gt; parameter.">一个新的 <see cref="T:System.Data.SqlTypes.SqlSingle" /> 结构，它的 <see cref="P:System.Data.SqlTypes.SqlSingle.Value" /> 等于 <see cref="P:System.Data.SqlTypes.SqlInt64.Value" /> 参数的 <see cref="T:System.Data.SqlTypes.SqlInt64" />。</returns>
    </member>
    <member name="M:System.Data.SqlTypes.SqlSingle.op_Implicit(System.Data.SqlTypes.SqlMoney)~System.Data.SqlTypes.SqlSingle">
      <summary vsli:raw="Converts the supplied &lt;see cref=&quot;T:System.Data.SqlTypes.SqlMoney&quot; /&gt; structure to &lt;see cref=&quot;T:System.Data.SqlTypes.SqlSingle&quot; /&gt;.">将提供的 <see cref="T:System.Data.SqlTypes.SqlMoney" /> 结构转换为 <see cref="T:System.Data.SqlTypes.SqlSingle" />。</summary>
      <param name="x" vsli:raw="The &lt;see cref=&quot;T:System.Data.SqlTypes.SqlMoney&quot; /&gt; structure to be converted.">要转换的 <see cref="T:System.Data.SqlTypes.SqlMoney" /> 结构。</param>
      <returns vsli:raw="A new &lt;see cref=&quot;T:System.Data.SqlTypes.SqlSingle&quot; /&gt; structure whose &lt;see cref=&quot;P:System.Data.SqlTypes.SqlSingle.Value&quot; /&gt; is equal to the &lt;see cref=&quot;P:System.Data.SqlTypes.SqlMoney.Value&quot; /&gt; of the &lt;see cref=&quot;T:System.Data.SqlTypes.SqlMoney&quot; /&gt; parameter.">一个新的 <see cref="T:System.Data.SqlTypes.SqlSingle" /> 结构，它的 <see cref="P:System.Data.SqlTypes.SqlSingle.Value" /> 等于 <see cref="P:System.Data.SqlTypes.SqlMoney.Value" /> 参数的 <see cref="T:System.Data.SqlTypes.SqlMoney" />。</returns>
    </member>
    <member name="M:System.Data.SqlTypes.SqlSingle.op_Implicit(System.Single)~System.Data.SqlTypes.SqlSingle">
      <summary vsli:raw="Converts the specified floating point value to &lt;see cref=&quot;T:System.Data.SqlTypes.SqlSingle&quot; /&gt;.">将指定的浮点值转换为 <see cref="T:System.Data.SqlTypes.SqlSingle" />。</summary>
      <param name="x" vsli:raw="The float value to be converted to &lt;see cref=&quot;T:System.Data.SqlTypes.SqlSingle&quot; /&gt;.">要转换为 <see cref="T:System.Data.SqlTypes.SqlSingle" /> 的浮点值。</param>
      <returns vsli:raw="A &lt;see cref=&quot;T:System.Data.SqlTypes.SqlSingle&quot; /&gt; structure that contains the value of the specified float.">一个 <see cref="T:System.Data.SqlTypes.SqlSingle" /> 结构，包含指定浮点型的值。</returns>
    </member>
    <member name="M:System.Data.SqlTypes.SqlSingle.op_Inequality(System.Data.SqlTypes.SqlSingle,System.Data.SqlTypes.SqlSingle)">
      <summary vsli:raw="Performs a logical comparison of the two &lt;see cref=&quot;T:System.Data.SqlTypes.SqlSingle&quot; /&gt; parameters to determine whether they are not equal.">对两个 <see cref="T:System.Data.SqlTypes.SqlSingle" /> 参数执行逻辑比较，确定它们是否不相等。</summary>
      <param name="x" vsli:raw="A &lt;see cref=&quot;T:System.Data.SqlTypes.SqlSingle&quot; /&gt; structure.">
        <see cref="T:System.Data.SqlTypes.SqlSingle" /> 结构。</param>
      <param name="y" vsli:raw="A &lt;see cref=&quot;T:System.Data.SqlTypes.SqlSingle&quot; /&gt; structure.">
        <see cref="T:System.Data.SqlTypes.SqlSingle" /> 结构。</param>
      <returns vsli:raw="A &lt;see cref=&quot;T:System.Data.SqlTypes.SqlBoolean&quot; /&gt; that is &lt;see cref=&quot;F:System.Data.SqlTypes.SqlBoolean.True&quot; /&gt; if the two instances are not equal or &lt;see cref=&quot;F:System.Data.SqlTypes.SqlBoolean.False&quot; /&gt; if the two instances are equal. If either instance of &lt;see cref=&quot;T:System.Data.SqlTypes.SqlSingle&quot; /&gt; is null, the &lt;see cref=&quot;P:System.Data.SqlTypes.SqlBoolean.Value&quot; /&gt; of the &lt;see cref=&quot;T:System.Data.SqlTypes.SqlBoolean&quot; /&gt; will be &lt;see cref=&quot;F:System.Data.SqlTypes.SqlBoolean.Null&quot; /&gt;.">一个 <see cref="T:System.Data.SqlTypes.SqlBoolean" />，它在两个实例不等时为 <see cref="F:System.Data.SqlTypes.SqlBoolean.True" />，在两个实例相等时为 <see cref="F:System.Data.SqlTypes.SqlBoolean.False" />。 如果 <see cref="T:System.Data.SqlTypes.SqlSingle" /> 的任一实例为空，则 <see cref="P:System.Data.SqlTypes.SqlBoolean.Value" /> 的 <see cref="T:System.Data.SqlTypes.SqlBoolean" /> 将为 <see cref="F:System.Data.SqlTypes.SqlBoolean.Null" />。</returns>
    </member>
    <member name="M:System.Data.SqlTypes.SqlSingle.op_LessThan(System.Data.SqlTypes.SqlSingle,System.Data.SqlTypes.SqlSingle)">
      <summary vsli:raw="Performs a logical comparison of the two &lt;see cref=&quot;T:System.Data.SqlTypes.SqlSingle&quot; /&gt; parameters to determine whether the first is less than the second.">对两个 <see cref="T:System.Data.SqlTypes.SqlSingle" /> 参数执行逻辑比较，以确定第一个参数是否小于第二个参数。</summary>
      <param name="x" vsli:raw="A &lt;see cref=&quot;T:System.Data.SqlTypes.SqlSingle&quot; /&gt; structure.">
        <see cref="T:System.Data.SqlTypes.SqlSingle" /> 结构。</param>
      <param name="y" vsli:raw="A &lt;see cref=&quot;T:System.Data.SqlTypes.SqlSingle&quot; /&gt; structure.">
        <see cref="T:System.Data.SqlTypes.SqlSingle" /> 结构。</param>
      <returns vsli:raw="A &lt;see cref=&quot;T:System.Data.SqlTypes.SqlBoolean&quot; /&gt; that is &lt;see cref=&quot;F:System.Data.SqlTypes.SqlBoolean.True&quot; /&gt; if the first instance is less than the second instance. Otherwise, &lt;see cref=&quot;F:System.Data.SqlTypes.SqlBoolean.False&quot; /&gt;. If either instance of &lt;see cref=&quot;T:System.Data.SqlTypes.SqlSingle&quot; /&gt; is null, the &lt;see cref=&quot;P:System.Data.SqlTypes.SqlBoolean.Value&quot; /&gt; of the &lt;see cref=&quot;T:System.Data.SqlTypes.SqlBoolean&quot; /&gt; will be &lt;see cref=&quot;F:System.Data.SqlTypes.SqlBoolean.Null&quot; /&gt;.">一个 <see cref="T:System.Data.SqlTypes.SqlBoolean" />，如果第一个实例小于第二个实例，则它为 <see cref="F:System.Data.SqlTypes.SqlBoolean.True" />。 否则为 <see cref="F:System.Data.SqlTypes.SqlBoolean.False" />。 如果 <see cref="T:System.Data.SqlTypes.SqlSingle" /> 的任一实例为空，则 <see cref="P:System.Data.SqlTypes.SqlBoolean.Value" /> 的 <see cref="T:System.Data.SqlTypes.SqlBoolean" /> 将为 <see cref="F:System.Data.SqlTypes.SqlBoolean.Null" />。</returns>
    </member>
    <member name="M:System.Data.SqlTypes.SqlSingle.op_LessThanOrEqual(System.Data.SqlTypes.SqlSingle,System.Data.SqlTypes.SqlSingle)">
      <summary vsli:raw="Performs a logical comparison of the two &lt;see cref=&quot;T:System.Data.SqlTypes.SqlSingle&quot; /&gt; parameters to determine whether the first is less than or equal to the second.">对两个 <see cref="T:System.Data.SqlTypes.SqlSingle" /> 参数执行逻辑比较，以确定第一个参数是否小于或等于第二个参数。</summary>
      <param name="x" vsli:raw="A &lt;see cref=&quot;T:System.Data.SqlTypes.SqlSingle&quot; /&gt; structure.">
        <see cref="T:System.Data.SqlTypes.SqlSingle" /> 结构。</param>
      <param name="y" vsli:raw="A &lt;see cref=&quot;T:System.Data.SqlTypes.SqlSingle&quot; /&gt; structure.">
        <see cref="T:System.Data.SqlTypes.SqlSingle" /> 结构。</param>
      <returns vsli:raw="A &lt;see cref=&quot;T:System.Data.SqlTypes.SqlBoolean&quot; /&gt; that is &lt;see cref=&quot;F:System.Data.SqlTypes.SqlBoolean.True&quot; /&gt; if the first instance is less than or equal to the second instance. Otherwise, &lt;see cref=&quot;F:System.Data.SqlTypes.SqlBoolean.False&quot; /&gt;. If either instance of &lt;see cref=&quot;T:System.Data.SqlTypes.SqlSingle&quot; /&gt; is null, the &lt;see cref=&quot;P:System.Data.SqlTypes.SqlBoolean.Value&quot; /&gt; of the &lt;see cref=&quot;T:System.Data.SqlTypes.SqlBoolean&quot; /&gt; will be &lt;see cref=&quot;F:System.Data.SqlTypes.SqlBoolean.Null&quot; /&gt;.">一个 <see cref="T:System.Data.SqlTypes.SqlBoolean" />，如果第一个实例小于或等于第二个实例，则它为 <see cref="F:System.Data.SqlTypes.SqlBoolean.True" />。 否则为 <see cref="F:System.Data.SqlTypes.SqlBoolean.False" />。 如果 <see cref="T:System.Data.SqlTypes.SqlSingle" /> 的任一实例为空，则 <see cref="P:System.Data.SqlTypes.SqlBoolean.Value" /> 的 <see cref="T:System.Data.SqlTypes.SqlBoolean" /> 将为 <see cref="F:System.Data.SqlTypes.SqlBoolean.Null" />。</returns>
    </member>
    <member name="M:System.Data.SqlTypes.SqlSingle.op_Multiply(System.Data.SqlTypes.SqlSingle,System.Data.SqlTypes.SqlSingle)">
      <summary vsli:raw="Computes the product of the two specified &lt;see cref=&quot;T:System.Data.SqlTypes.SqlSingle&quot; /&gt; structures.">计算两个指定 <see cref="T:System.Data.SqlTypes.SqlSingle" /> 结构的乘积。</summary>
      <param name="x" vsli:raw="A &lt;see cref=&quot;T:System.Data.SqlTypes.SqlSingle&quot; /&gt; structure.">
        <see cref="T:System.Data.SqlTypes.SqlSingle" /> 结构。</param>
      <param name="y" vsli:raw="A &lt;see cref=&quot;T:System.Data.SqlTypes.SqlSingle&quot; /&gt; structure.">
        <see cref="T:System.Data.SqlTypes.SqlSingle" /> 结构。</param>
      <returns vsli:raw="A &lt;see cref=&quot;T:System.Data.SqlTypes.SqlSingle&quot; /&gt; structure that contains the product of the multiplication.">一个 <see cref="T:System.Data.SqlTypes.SqlSingle" /> 结构，包含该乘法运算的乘积。</returns>
    </member>
    <member name="M:System.Data.SqlTypes.SqlSingle.op_Subtraction(System.Data.SqlTypes.SqlSingle,System.Data.SqlTypes.SqlSingle)">
      <summary vsli:raw="Subtracts the second &lt;see cref=&quot;T:System.Data.SqlTypes.SqlSingle&quot; /&gt; structure from the first.">从第一个 <see cref="T:System.Data.SqlTypes.SqlSingle" /> 结构中减去第二个结构。</summary>
      <param name="x" vsli:raw="A &lt;see cref=&quot;T:System.Data.SqlTypes.SqlSingle&quot; /&gt; structure.">
        <see cref="T:System.Data.SqlTypes.SqlSingle" /> 结构。</param>
      <param name="y" vsli:raw="A &lt;see cref=&quot;T:System.Data.SqlTypes.SqlSingle&quot; /&gt; structure.">
        <see cref="T:System.Data.SqlTypes.SqlSingle" /> 结构。</param>
      <returns vsli:raw="A &lt;see cref=&quot;T:System.Data.SqlTypes.SqlSingle&quot; /&gt; structure that contains the results of the subtraction.">一个 <see cref="T:System.Data.SqlTypes.SqlSingle" /> 结构，包含该减法运算的结果。</returns>
    </member>
    <member name="M:System.Data.SqlTypes.SqlSingle.op_UnaryNegation(System.Data.SqlTypes.SqlSingle)">
      <summary vsli:raw="Negates the &lt;see cref=&quot;P:System.Data.SqlTypes.SqlSingle.Value&quot; /&gt; of the specified &lt;see cref=&quot;T:System.Data.SqlTypes.SqlSingle&quot; /&gt; structure.">对指定 <see cref="P:System.Data.SqlTypes.SqlSingle.Value" /> 结构的 <see cref="T:System.Data.SqlTypes.SqlSingle" /> 求反。</summary>
      <param name="x" vsli:raw="A &lt;see cref=&quot;T:System.Data.SqlTypes.SqlSingle&quot; /&gt; structure.">
        <see cref="T:System.Data.SqlTypes.SqlSingle" /> 结构。</param>
      <returns vsli:raw="A &lt;see cref=&quot;T:System.Data.SqlTypes.SqlSingle&quot; /&gt; structure that contains the negated value.">一个 <see cref="T:System.Data.SqlTypes.SqlSingle" /> 结构，包含求反的值。</returns>
    </member>
    <member name="M:System.Data.SqlTypes.SqlSingle.Parse(System.String)">
      <summary vsli:raw="Converts the specified &lt;see cref=&quot;T:System.String&quot; /&gt; to a &lt;see cref=&quot;T:System.Data.SqlTypes.SqlSingle&quot; /&gt; structure.">将指定 <see cref="T:System.String" /> 转换为 <see cref="T:System.Data.SqlTypes.SqlSingle" /> 结构。</summary>
      <param name="s" vsli:raw="The &lt;see cref=&quot;T:System.String&quot; /&gt; to be parsed.">要分析的 <see cref="T:System.String" />。</param>
      <returns vsli:raw="A &lt;see cref=&quot;T:System.Data.SqlTypes.SqlSingle&quot; /&gt; equivalent to the value that is contained in the specified &lt;see cref=&quot;T:System.String&quot; /&gt;.">一个 <see cref="T:System.Data.SqlTypes.SqlSingle" />，它与指定的 <see cref="T:System.String" /> 中包含的值等效。</returns>
    </member>
    <member name="M:System.Data.SqlTypes.SqlSingle.Subtract(System.Data.SqlTypes.SqlSingle,System.Data.SqlTypes.SqlSingle)">
      <summary vsli:raw="Subtracts the second &lt;see cref=&quot;T:System.Data.SqlTypes.SqlSingle&quot; /&gt; structure from the first.">从第一个 <see cref="T:System.Data.SqlTypes.SqlSingle" /> 结构中减去第二个结构。</summary>
      <param name="x" vsli:raw="A &lt;see cref=&quot;T:System.Data.SqlTypes.SqlSingle&quot; /&gt; structure.">
        <see cref="T:System.Data.SqlTypes.SqlSingle" /> 结构。</param>
      <param name="y" vsli:raw="A &lt;see cref=&quot;T:System.Data.SqlTypes.SqlSingle&quot; /&gt; structure.">
        <see cref="T:System.Data.SqlTypes.SqlSingle" /> 结构。</param>
      <returns vsli:raw="A &lt;see cref=&quot;T:System.Data.SqlTypes.SqlSingle&quot; /&gt; structure that contains the results of the subtraction.">一个 <see cref="T:System.Data.SqlTypes.SqlSingle" /> 结构，包含该减法运算的结果。</returns>
    </member>
    <member name="M:System.Data.SqlTypes.SqlSingle.System#Xml#Serialization#IXmlSerializable#GetSchema">
      <summary vsli:raw="This member supports the .NET Framework infrastructure and is not intended to be used directly from your code.">此成员支持 .NET Framework 结构，不能在代码中直接使用。</summary>
      <returns vsli:raw="An &lt;see langword=&quot;XmlSchema&quot; /&gt;.">
        <see langword="XmlSchema" />。</returns>
    </member>
    <member name="M:System.Data.SqlTypes.SqlSingle.System#Xml#Serialization#IXmlSerializable#ReadXml(System.Xml.XmlReader)">
      <summary vsli:raw="This member supports the .NET Framework infrastructure and is not intended to be used directly from your code.">此成员支持 .NET Framework 结构，不能在代码中直接使用。</summary>
      <param name="reader" vsli:raw="&lt;see langword=&quot;XmlReader&quot; /&gt;">
        <see langword="XmlReader" />
      </param>
    </member>
    <member name="M:System.Data.SqlTypes.SqlSingle.System#Xml#Serialization#IXmlSerializable#WriteXml(System.Xml.XmlWriter)">
      <summary vsli:raw="This member supports the .NET Framework infrastructure and is not intended to be used directly from your code.">此成员支持 .NET Framework 结构，不能在代码中直接使用。</summary>
      <param name="writer" vsli:raw="&lt;see langword=&quot;XmlWriter&quot; /&gt;">
        <see langword="XmlWriter" />
      </param>
    </member>
    <member name="M:System.Data.SqlTypes.SqlSingle.ToSqlBoolean">
      <summary vsli:raw="Converts this &lt;see cref=&quot;T:System.Data.SqlTypes.SqlSingle&quot; /&gt; structure to &lt;see cref=&quot;T:System.Data.SqlTypes.SqlBoolean&quot; /&gt;.">将此 <see cref="T:System.Data.SqlTypes.SqlSingle" /> 结构转换为 <see cref="T:System.Data.SqlTypes.SqlBoolean" />。</summary>
      <returns vsli:raw="&lt;see langword=&quot;true&quot; /&gt; if the &lt;see cref=&quot;P:System.Data.SqlTypes.SqlSingle.Value&quot; /&gt; is non-zero; &lt;see langword=&quot;false&quot; /&gt; if zero; otherwise Null.">如果 <see cref="P:System.Data.SqlTypes.SqlSingle.Value" /> 不是零，则为 <see langword="true" />；如果为零，则为 <see langword="false" />；否则为 Null。</returns>
    </member>
    <member name="M:System.Data.SqlTypes.SqlSingle.ToSqlByte">
      <summary vsli:raw="Converts this &lt;see cref=&quot;T:System.Data.SqlTypes.SqlSingle&quot; /&gt; structure to &lt;see cref=&quot;T:System.Data.SqlTypes.SqlByte&quot; /&gt;.">将此 <see cref="T:System.Data.SqlTypes.SqlSingle" /> 结构转换为 <see cref="T:System.Data.SqlTypes.SqlByte" />。</summary>
      <returns vsli:raw="A &lt;see cref=&quot;T:System.Data.SqlTypes.SqlByte&quot; /&gt; structure whose &lt;see langword=&quot;Value&quot; /&gt; equals the &lt;see langword=&quot;Value&quot; /&gt; of this &lt;see cref=&quot;T:System.Data.SqlTypes.SqlSingle&quot; /&gt; structure. If the &lt;see cref=&quot;T:System.Data.SqlTypes.SqlSingle&quot; /&gt; structure's Value is &lt;see langword=&quot;true&quot; /&gt;, the &lt;see cref=&quot;T:System.Data.SqlTypes.SqlByte&quot; /&gt; structure's &lt;see langword=&quot;Value&quot; /&gt; will be 1. Otherwise, the &lt;see cref=&quot;T:System.Data.SqlTypes.SqlByte&quot; /&gt; structure's &lt;see langword=&quot;Value&quot; /&gt; will be 0.">一个 <see cref="T:System.Data.SqlTypes.SqlByte" /> 结构，其 <see langword="Value" /> 等于此 <see cref="T:System.Data.SqlTypes.SqlSingle" /> 结构的 <see langword="Value" />。 如果 <see cref="T:System.Data.SqlTypes.SqlSingle" /> 结构的值为 <see langword="true" />，则 <see cref="T:System.Data.SqlTypes.SqlByte" /> 结构的 <see langword="Value" /> 将为 1。 否则，<see cref="T:System.Data.SqlTypes.SqlByte" /> 结构的 <see langword="Value" /> 将为 0。</returns>
    </member>
    <member name="M:System.Data.SqlTypes.SqlSingle.ToSqlDecimal">
      <summary vsli:raw="Converts this &lt;see cref=&quot;T:System.Data.SqlTypes.SqlSingle&quot; /&gt; structure to &lt;see cref=&quot;T:System.Data.SqlTypes.SqlDecimal&quot; /&gt;.">将此 <see cref="T:System.Data.SqlTypes.SqlSingle" /> 结构转换为 <see cref="T:System.Data.SqlTypes.SqlDecimal" />。</summary>
      <returns vsli:raw="A new &lt;see langword=&quot;SqlDecimal&quot; /&gt; equal to the value of this &lt;see cref=&quot;T:System.Data.SqlTypes.SqlSingle&quot; /&gt;.">新的 <see langword="SqlDecimal" /> 等于此 <see cref="T:System.Data.SqlTypes.SqlSingle" /> 的值。</returns>
    </member>
    <member name="M:System.Data.SqlTypes.SqlSingle.ToSqlDouble">
      <summary vsli:raw="Converts this &lt;see cref=&quot;T:System.Data.SqlTypes.SqlSingle&quot; /&gt; structure to &lt;see cref=&quot;T:System.Data.SqlTypes.SqlDouble&quot; /&gt;.">将此 <see cref="T:System.Data.SqlTypes.SqlSingle" /> 结构转换为 <see cref="T:System.Data.SqlTypes.SqlDouble" />。</summary>
      <returns vsli:raw="A new &lt;see langword=&quot;SqlDouble&quot; /&gt; equal to the value of this &lt;see cref=&quot;T:System.Data.SqlTypes.SqlSingle&quot; /&gt;.">新的 <see langword="SqlDouble" /> 等于此 <see cref="T:System.Data.SqlTypes.SqlSingle" /> 的值。</returns>
    </member>
    <member name="M:System.Data.SqlTypes.SqlSingle.ToSqlInt16">
      <summary vsli:raw="Converts this &lt;see cref=&quot;T:System.Data.SqlTypes.SqlSingle&quot; /&gt; structure to &lt;see cref=&quot;T:System.Data.SqlTypes.SqlInt16&quot; /&gt;.">将此 <see cref="T:System.Data.SqlTypes.SqlSingle" /> 结构转换为 <see cref="T:System.Data.SqlTypes.SqlInt16" />。</summary>
      <returns vsli:raw="A new &lt;see langword=&quot;SqlInt16&quot; /&gt; equal to the value of this &lt;see cref=&quot;T:System.Data.SqlTypes.SqlSingle&quot; /&gt;.">新的 <see langword="SqlInt16" /> 等于此 <see cref="T:System.Data.SqlTypes.SqlSingle" /> 的值。</returns>
    </member>
    <member name="M:System.Data.SqlTypes.SqlSingle.ToSqlInt32">
      <summary vsli:raw="Converts this &lt;see cref=&quot;T:System.Data.SqlTypes.SqlSingle&quot; /&gt; structure to &lt;see cref=&quot;T:System.Data.SqlTypes.SqlInt32&quot; /&gt;.">将此 <see cref="T:System.Data.SqlTypes.SqlSingle" /> 结构转换为 <see cref="T:System.Data.SqlTypes.SqlInt32" />。</summary>
      <returns vsli:raw="A new &lt;see cref=&quot;T:System.Data.SqlTypes.SqlInt32&quot; /&gt; equal to the value of this &lt;see cref=&quot;T:System.Data.SqlTypes.SqlSingle&quot; /&gt;.">新的 <see cref="T:System.Data.SqlTypes.SqlInt32" /> 等于此 <see cref="T:System.Data.SqlTypes.SqlSingle" /> 的值。</returns>
    </member>
    <member name="M:System.Data.SqlTypes.SqlSingle.ToSqlInt64">
      <summary vsli:raw="Converts this &lt;see cref=&quot;T:System.Data.SqlTypes.SqlSingle&quot; /&gt; structure to &lt;see cref=&quot;T:System.Data.SqlTypes.SqlInt64&quot; /&gt;.">将此 <see cref="T:System.Data.SqlTypes.SqlSingle" /> 结构转换为 <see cref="T:System.Data.SqlTypes.SqlInt64" />。</summary>
      <returns vsli:raw="A new &lt;see cref=&quot;T:System.Data.SqlTypes.SqlInt64&quot; /&gt; equal to the value of this &lt;see cref=&quot;T:System.Data.SqlTypes.SqlSingle&quot; /&gt;.">新的 <see cref="T:System.Data.SqlTypes.SqlInt64" /> 等于此 <see cref="T:System.Data.SqlTypes.SqlSingle" /> 的值。</returns>
    </member>
    <member name="M:System.Data.SqlTypes.SqlSingle.ToSqlMoney">
      <summary vsli:raw="Converts this &lt;see cref=&quot;T:System.Data.SqlTypes.SqlSingle&quot; /&gt; structure to &lt;see cref=&quot;T:System.Data.SqlTypes.SqlMoney&quot; /&gt;.">将此 <see cref="T:System.Data.SqlTypes.SqlSingle" /> 结构转换为 <see cref="T:System.Data.SqlTypes.SqlMoney" />。</summary>
      <returns vsli:raw="A &lt;see cref=&quot;T:System.Data.SqlTypes.SqlMoney&quot; /&gt; equal to the value of this &lt;see cref=&quot;T:System.Data.SqlTypes.SqlSingle&quot; /&gt;.">
        <see cref="T:System.Data.SqlTypes.SqlMoney" /> 等于此 <see cref="T:System.Data.SqlTypes.SqlSingle" /> 的值。</returns>
    </member>
    <member name="M:System.Data.SqlTypes.SqlSingle.ToSqlString">
      <summary vsli:raw="Converts this &lt;see cref=&quot;T:System.Data.SqlTypes.SqlSingle&quot; /&gt; structure to &lt;see cref=&quot;T:System.Data.SqlTypes.SqlString&quot; /&gt;.">将此 <see cref="T:System.Data.SqlTypes.SqlSingle" /> 结构转换为 <see cref="T:System.Data.SqlTypes.SqlString" />。</summary>
      <returns vsli:raw="A &lt;see cref=&quot;T:System.Data.SqlTypes.SqlString&quot; /&gt; representing the value of this &lt;see cref=&quot;T:System.Data.SqlTypes.SqlSingle&quot; /&gt;.">一个 <see cref="T:System.Data.SqlTypes.SqlString" />，表示此 <see cref="T:System.Data.SqlTypes.SqlSingle" /> 的值。</returns>
    </member>
    <member name="M:System.Data.SqlTypes.SqlSingle.ToString">
      <summary vsli:raw="Converts this &lt;see cref=&quot;T:System.Data.SqlTypes.SqlSingle&quot; /&gt; structure to &lt;see cref=&quot;T:System.String&quot; /&gt;.">将此 <see cref="T:System.Data.SqlTypes.SqlSingle" /> 结构转换为 <see cref="T:System.String" />。</summary>
      <returns vsli:raw="A &lt;see langword=&quot;String&quot; /&gt; object representing the value of this &lt;see cref=&quot;T:System.Data.SqlTypes.SqlSingle&quot; /&gt;.">一个表示此 <see cref="T:System.Data.SqlTypes.SqlSingle" /> 的值的 <see langword="String" /> 对象。</returns>
    </member>
    <member name="P:System.Data.SqlTypes.SqlSingle.IsNull">
      <summary vsli:raw="Indicates whether this &lt;see cref=&quot;T:System.Data.SqlTypes.SqlSingle&quot; /&gt; structure is null.">指示此 <see cref="T:System.Data.SqlTypes.SqlSingle" /> 结构是否为 null。</summary>
      <returns vsli:raw="&lt;see langword=&quot;true&quot; /&gt; if null. Otherwise, &lt;see langword=&quot;false&quot; /&gt;.">如果为 null，则返回 <see langword="true" />。 否则为 <see langword="false" />。</returns>
    </member>
    <member name="P:System.Data.SqlTypes.SqlSingle.Value">
      <summary vsli:raw="Gets the value of this &lt;see cref=&quot;T:System.Data.SqlTypes.SqlSingle&quot; /&gt; structure. This property is read-only.">获取此 <see cref="T:System.Data.SqlTypes.SqlSingle" /> 结构的值。 此属性为只读。</summary>
      <returns vsli:raw="A floating point value in the range -3.40E+38 through 3.40E+38.">一个浮点值，介于 -3.40E+38 到 3.40E+38 的范围内。</returns>
    </member>
    <member name="T:System.Data.SqlTypes.SqlString">
      <summary vsli:raw="Represents a variable-length stream of characters to be stored in or retrieved from the database. &lt;see cref=&quot;T:System.Data.SqlTypes.SqlString&quot; /&gt; has a different underlying data structure from its corresponding .NET &lt;see cref=&quot;T:System.String&quot; /&gt; data type.">表示要存储在数据库中或从数据库中检索的字符的可变长度流。 <see cref="T:System.Data.SqlTypes.SqlString" /> 具有与其相应的 .NET Framework <see cref="T:System.String" /> 数据类型不同的基础数据结构。</summary>
    </member>
    <member name="F:System.Data.SqlTypes.SqlString.BinarySort">
      <summary vsli:raw="Specifies that sorts should be based on a characters numeric value instead of its alphabetical value.">指定排序应基于字符数值（而非其字母值）。</summary>
    </member>
    <member name="F:System.Data.SqlTypes.SqlString.BinarySort2">
      <summary vsli:raw="Specifies that sorts should be based on a character's numeric value instead of its alphabetical value.">指定排序应基于字符数值（而非其字母值）。</summary>
    </member>
    <member name="F:System.Data.SqlTypes.SqlString.IgnoreCase">
      <summary vsli:raw="Specifies that &lt;see cref=&quot;T:System.Data.SqlTypes.SqlString&quot; /&gt; comparisons should ignore case.">指定 <see cref="T:System.Data.SqlTypes.SqlString" /> 比较应忽略大小写。</summary>
    </member>
    <member name="F:System.Data.SqlTypes.SqlString.IgnoreKanaType">
      <summary vsli:raw="Specifies that the string comparison must ignore the Kana type.">指定字符串比较必须忽略假名类型。</summary>
    </member>
    <member name="F:System.Data.SqlTypes.SqlString.IgnoreNonSpace">
      <summary vsli:raw="Specifies that the string comparison must ignore non-space combining characters, such as diacritics.">指定字符串比较必须忽略非空格组合字符，比如音调符号。</summary>
    </member>
    <member name="F:System.Data.SqlTypes.SqlString.IgnoreWidth">
      <summary vsli:raw="Specifies that the string comparison must ignore the character width.">指定字符串比较必须忽略字符宽度。</summary>
    </member>
    <member name="F:System.Data.SqlTypes.SqlString.Null">
      <summary vsli:raw="Represents a &lt;see cref=&quot;T:System.DBNull&quot; /&gt; that can be assigned to this instance of the &lt;see cref=&quot;T:System.Data.SqlTypes.SqlString&quot; /&gt; structure.">表示可指派给 <see cref="T:System.DBNull" /> 结构的此实例的 <see cref="T:System.Data.SqlTypes.SqlString" />。</summary>
    </member>
    <member name="M:System.Data.SqlTypes.SqlString.#ctor(System.Int32,System.Data.SqlTypes.SqlCompareOptions,System.Byte[])">
      <summary vsli:raw="Initializes a new instance of the &lt;see cref=&quot;T:System.Data.SqlTypes.SqlString&quot; /&gt; structure using the specified locale id, compare options, and data.">使用指定的区域设置 ID、比较选项和数据，初始化 <see cref="T:System.Data.SqlTypes.SqlString" /> 结构的新实例。</summary>
      <param name="lcid" vsli:raw="Specifies the geographical locale and language for the new &lt;see cref=&quot;T:System.Data.SqlTypes.SqlString&quot; /&gt; structure.">指定新 <see cref="T:System.Data.SqlTypes.SqlString" /> 结构的地理区域设置和语言。</param>
      <param name="compareOptions" vsli:raw="Specifies the compare options for the new &lt;see cref=&quot;T:System.Data.SqlTypes.SqlString&quot; /&gt; structure.">指定新 <see cref="T:System.Data.SqlTypes.SqlString" /> 结构的比较选项。</param>
      <param name="data" vsli:raw="The data array to store.">要存储的数据数组。</param>
    </member>
    <member name="M:System.Data.SqlTypes.SqlString.#ctor(System.Int32,System.Data.SqlTypes.SqlCompareOptions,System.Byte[],System.Boolean)">
      <summary vsli:raw="Initializes a new instance of the &lt;see cref=&quot;T:System.Data.SqlTypes.SqlString&quot; /&gt; class.">初始化 <see cref="T:System.Data.SqlTypes.SqlString" /> 类的新实例。</summary>
      <param name="lcid" vsli:raw="Specifies the geographical locale and language for the new &lt;see cref=&quot;T:System.Data.SqlTypes.SqlString&quot; /&gt; structure.">指定新 <see cref="T:System.Data.SqlTypes.SqlString" /> 结构的地理区域设置和语言。</param>
      <param name="compareOptions" vsli:raw="Specifies the compare options for the new &lt;see cref=&quot;T:System.Data.SqlTypes.SqlString&quot; /&gt; structure.">指定新 <see cref="T:System.Data.SqlTypes.SqlString" /> 结构的比较选项。</param>
      <param name="data" vsli:raw="The data array to store.">要存储的数据数组。</param>
      <param name="fUnicode" vsli:raw="&lt;see langword=&quot;true&quot; /&gt; if Unicode encoded. Otherwise, &lt;see langword=&quot;false&quot; /&gt;.">如果是 Unicode 编码，则为 <see langword="true" />。 否则为 <see langword="false" />。</param>
    </member>
    <member name="M:System.Data.SqlTypes.SqlString.#ctor(System.Int32,System.Data.SqlTypes.SqlCompareOptions,System.Byte[],System.Int32,System.Int32)">
      <summary vsli:raw="Initializes a new instance of the &lt;see cref=&quot;T:System.Data.SqlTypes.SqlString&quot; /&gt; class.">初始化 <see cref="T:System.Data.SqlTypes.SqlString" /> 类的新实例。</summary>
      <param name="lcid" vsli:raw="Specifies the geographical locale and language for the new &lt;see cref=&quot;T:System.Data.SqlTypes.SqlString&quot; /&gt; structure.">指定新 <see cref="T:System.Data.SqlTypes.SqlString" /> 结构的地理区域设置和语言。</param>
      <param name="compareOptions" vsli:raw="Specifies the compare options for the new &lt;see cref=&quot;T:System.Data.SqlTypes.SqlString&quot; /&gt; structure.">指定新 <see cref="T:System.Data.SqlTypes.SqlString" /> 结构的比较选项。</param>
      <param name="data" vsli:raw="The data array to store.">要存储的数据数组。</param>
      <param name="index" vsli:raw="The starting index within the array.">数组中的起始索引。</param>
      <param name="count" vsli:raw="The number of characters from index to copy.">要从索引复制的字符数。</param>
    </member>
    <member name="M:System.Data.SqlTypes.SqlString.#ctor(System.Int32,System.Data.SqlTypes.SqlCompareOptions,System.Byte[],System.Int32,System.Int32,System.Boolean)">
      <summary vsli:raw="Initializes a new instance of the &lt;see cref=&quot;T:System.Data.SqlTypes.SqlString&quot; /&gt; class.">初始化 <see cref="T:System.Data.SqlTypes.SqlString" /> 类的新实例。</summary>
      <param name="lcid" vsli:raw="Specifies the geographical locale and language for the new &lt;see cref=&quot;T:System.Data.SqlTypes.SqlString&quot; /&gt; structure.">指定新 <see cref="T:System.Data.SqlTypes.SqlString" /> 结构的地理区域设置和语言。</param>
      <param name="compareOptions" vsli:raw="Specifies the compare options for the new &lt;see cref=&quot;T:System.Data.SqlTypes.SqlString&quot; /&gt; structure.">指定新 <see cref="T:System.Data.SqlTypes.SqlString" /> 结构的比较选项。</param>
      <param name="data" vsli:raw="The data array to store.">要存储的数据数组。</param>
      <param name="index" vsli:raw="The starting index within the array.">数组中的起始索引。</param>
      <param name="count" vsli:raw="The number of characters from index to copy.">要从索引复制的字符数。</param>
      <param name="fUnicode" vsli:raw="&lt;see langword=&quot;true&quot; /&gt; if Unicode encoded. Otherwise, &lt;see langword=&quot;false&quot; /&gt;.">如果是 Unicode 编码，则为 <see langword="true" />。 否则为 <see langword="false" />。</param>
    </member>
    <member name="M:System.Data.SqlTypes.SqlString.#ctor(System.String)">
      <summary vsli:raw="Initializes a new instance of the &lt;see cref=&quot;T:System.Data.SqlTypes.SqlString&quot; /&gt; structure using the specified string.">使用指定的字符串初始化 <see cref="T:System.Data.SqlTypes.SqlString" /> 结构的新实例。</summary>
      <param name="data" vsli:raw="The string to store.">要存储的字符串。</param>
    </member>
    <member name="M:System.Data.SqlTypes.SqlString.#ctor(System.String,System.Int32)">
      <summary vsli:raw="Initializes a new instance of the &lt;see cref=&quot;T:System.Data.SqlTypes.SqlString&quot; /&gt; structure using the specified string and locale id values.">使用指定的字符串和区域设置 ID 值，初始化 <see cref="T:System.Data.SqlTypes.SqlString" /> 结构的新实例。</summary>
      <param name="data" vsli:raw="The string to store.">要存储的字符串。</param>
      <param name="lcid" vsli:raw="Specifies the geographical locale and language for the new &lt;see cref=&quot;T:System.Data.SqlTypes.SqlString&quot; /&gt; structure.">指定新 <see cref="T:System.Data.SqlTypes.SqlString" /> 结构的地理区域设置和语言。</param>
    </member>
    <member name="M:System.Data.SqlTypes.SqlString.#ctor(System.String,System.Int32,System.Data.SqlTypes.SqlCompareOptions)">
      <summary vsli:raw="Initializes a new instance of the &lt;see cref=&quot;T:System.Data.SqlTypes.SqlString&quot; /&gt; structure using the specified string, locale id, and compare option values.">使用指定字符串、区域设置 ID 和比较选项值，初始化 <see cref="T:System.Data.SqlTypes.SqlString" /> 结构的新实例。</summary>
      <param name="data" vsli:raw="The string to store.">要存储的字符串。</param>
      <param name="lcid" vsli:raw="Specifies the geographical locale and language for the new &lt;see cref=&quot;T:System.Data.SqlTypes.SqlString&quot; /&gt; structure.">指定新 <see cref="T:System.Data.SqlTypes.SqlString" /> 结构的地理区域设置和语言。</param>
      <param name="compareOptions" vsli:raw="Specifies the compare options for the new &lt;see cref=&quot;T:System.Data.SqlTypes.SqlString&quot; /&gt; structure.">指定新 <see cref="T:System.Data.SqlTypes.SqlString" /> 结构的比较选项。</param>
    </member>
    <member name="M:System.Data.SqlTypes.SqlString.Add(System.Data.SqlTypes.SqlString,System.Data.SqlTypes.SqlString)">
      <summary vsli:raw="Concatenates two specified &lt;see cref=&quot;T:System.Data.SqlTypes.SqlString&quot; /&gt; values to create a new &lt;see cref=&quot;T:System.Data.SqlTypes.SqlString&quot; /&gt; structure.">串联两个指定的 <see cref="T:System.Data.SqlTypes.SqlString" /> 值以创建一个新的 <see cref="T:System.Data.SqlTypes.SqlString" /> 结构。</summary>
      <param name="x" vsli:raw="A &lt;see cref=&quot;T:System.Data.SqlTypes.SqlString&quot; /&gt;.">
        <see cref="T:System.Data.SqlTypes.SqlString" />。</param>
      <param name="y" vsli:raw="A &lt;see cref=&quot;T:System.Data.SqlTypes.SqlString&quot; /&gt;.">
        <see cref="T:System.Data.SqlTypes.SqlString" />。</param>
      <returns vsli:raw="A &lt;see cref=&quot;T:System.Data.SqlTypes.SqlString&quot; /&gt; that is the concatenated value of &lt;paramref name=&quot;x&quot; /&gt; and &lt;paramref name=&quot;y&quot; /&gt;.">一个 <see cref="T:System.Data.SqlTypes.SqlString" />，它是 <paramref name="x" /> 与 <paramref name="y" /> 的串联值。</returns>
    </member>
    <member name="M:System.Data.SqlTypes.SqlString.Clone">
      <summary vsli:raw="Creates a copy of this &lt;see cref=&quot;T:System.Data.SqlTypes.SqlString&quot; /&gt; object.">创建此 <see cref="T:System.Data.SqlTypes.SqlString" /> 对象的一个副本。</summary>
      <returns vsli:raw="A new &lt;see cref=&quot;T:System.Data.SqlTypes.SqlString&quot; /&gt; object in which all property values are the same as the original.">一个新的 <see cref="T:System.Data.SqlTypes.SqlString" /> 对象，其中所有的属性值都与原始值相同。</returns>
    </member>
    <member name="M:System.Data.SqlTypes.SqlString.CompareOptionsFromSqlCompareOptions(System.Data.SqlTypes.SqlCompareOptions)">
      <summary vsli:raw="Gets the &lt;see cref=&quot;T:System.Globalization.CompareOptions&quot; /&gt; enumeration equivalent of the specified &lt;see cref=&quot;T:System.Data.SqlTypes.SqlCompareOptions&quot; /&gt; value.">获取与指定 <see cref="T:System.Globalization.CompareOptions" /> 值等效的 <see cref="T:System.Data.SqlTypes.SqlCompareOptions" /> 枚举。</summary>
      <param name="compareOptions" vsli:raw="A &lt;see cref=&quot;T:System.Data.SqlTypes.SqlCompareOptions&quot; /&gt; value that describes the comparison options for this &lt;see cref=&quot;T:System.Data.SqlTypes.SqlString&quot; /&gt; structure.">一个 <see cref="T:System.Data.SqlTypes.SqlCompareOptions" /> 值，该值描述此 <see cref="T:System.Data.SqlTypes.SqlString" /> 结构的比较选项。</param>
      <returns vsli:raw="A &lt;see langword=&quot;CompareOptions&quot; /&gt; value that corresponds to the &lt;see langword=&quot;SqlCompareOptions&quot; /&gt; for this &lt;see cref=&quot;T:System.Data.SqlTypes.SqlString&quot; /&gt; structure.">一个 <see langword="CompareOptions" /> 值，该值对应于此 <see cref="T:System.Data.SqlTypes.SqlString" /> 结构的 <see langword="SqlCompareOptions" />。</returns>
    </member>
    <member name="M:System.Data.SqlTypes.SqlString.CompareTo(System.Data.SqlTypes.SqlString)">
      <summary vsli:raw="Compares this &lt;see cref=&quot;T:System.Data.SqlTypes.SqlString&quot; /&gt; instance to the supplied &lt;see cref=&quot;T:System.Data.SqlTypes.SqlString&quot; /&gt; and returns an indication of their relative values.">将此 <see cref="T:System.Data.SqlTypes.SqlString" /> 实例与所提供的 <see cref="T:System.Data.SqlTypes.SqlString" /> 进行比较，并返回二者相对值的指示值。</summary>
      <param name="value" vsli:raw="The &lt;see cref=&quot;T:System.Data.SqlTypes.SqlString&quot; /&gt; to be compared.">要比较的 <see cref="T:System.Data.SqlTypes.SqlString" />。</param>
      <returns vsli:raw="A signed number that indicates the relative values of the instance and the object.  &#xA;  &#xA; &lt;list type=&quot;table&quot;&gt;&lt;listheader&gt;&lt;term&gt; Return value&lt;/term&gt;&lt;description&gt; Condition&lt;/description&gt;&lt;/listheader&gt;&lt;item&gt;&lt;term&gt; Less than zero&lt;/term&gt;&lt;description&gt; This instance is less than the object.&lt;/description&gt;&lt;/item&gt;&lt;item&gt;&lt;term&gt; Zero&lt;/term&gt;&lt;description&gt; This instance is the same as the object.&lt;/description&gt;&lt;/item&gt;&lt;item&gt;&lt;term&gt; Greater than zero&lt;/term&gt;&lt;description&gt; This instance is greater than the object  &#xA;  &#xA; -or-  &#xA;  &#xA; The object is a null reference (&lt;see langword=&quot;Nothing&quot; /&gt; in Visual Basic).&lt;/description&gt;&lt;/item&gt;&lt;/list&gt;">一个有符号的数字，它指示该实例和对象的相对值。  
  
 <list type="table"><listheader><term> 返回值</term><description> 条件</description></listheader><item><term> 小于零</term><description> 此实例小于该对象。</description></item><item><term> 零</term><description> 此实例等于该对象。</description></item><item><term> 大于零</term><description> 此实例大于该对象 
- 或 - 
该对象是空引用（在 Visual Basic 中为 <see langword="Nothing" />）。</description></item></list></returns>
    </member>
    <member name="M:System.Data.SqlTypes.SqlString.CompareTo(System.Object)">
      <summary vsli:raw="Compares this &lt;see cref=&quot;T:System.Data.SqlTypes.SqlString&quot; /&gt; object to the supplied &lt;see cref=&quot;T:System.Object&quot; /&gt; and returns an indication of their relative values.">将此 <see cref="T:System.Data.SqlTypes.SqlString" /> 对象与所提供的 <see cref="T:System.Object" /> 进行比较，并返回其相对值的指示值。</summary>
      <param name="value" vsli:raw="The &lt;see cref=&quot;T:System.Object&quot; /&gt; to be compared.">要比较的 <see cref="T:System.Object" />。</param>
      <returns vsli:raw="A signed number that indicates the relative values of the instance and the object.  &#xA;  &#xA; &lt;list type=&quot;table&quot;&gt;&lt;listheader&gt;&lt;term&gt; Return Value&lt;/term&gt;&lt;description&gt; Condition&lt;/description&gt;&lt;/listheader&gt;&lt;item&gt;&lt;term&gt; Less than zero&lt;/term&gt;&lt;description&gt; This instance is less than the object.&lt;/description&gt;&lt;/item&gt;&lt;item&gt;&lt;term&gt; Zero&lt;/term&gt;&lt;description&gt; This instance is the same as the object.&lt;/description&gt;&lt;/item&gt;&lt;item&gt;&lt;term&gt; Greater than zero&lt;/term&gt;&lt;description&gt; This instance is greater than the object  &#xA;  &#xA; -or-  &#xA;  &#xA; The object is a null reference (&lt;see langword=&quot;Nothing&quot; /&gt; in Visual Basic)&lt;/description&gt;&lt;/item&gt;&lt;/list&gt;">一个有符号的数字，它指示该实例和对象的相对值。  
  
 <list type="table"><listheader><term> 返回值</term><description> 条件</description></listheader><item><term> 小于零</term><description> 此实例小于该对象。</description></item><item><term> 零</term><description> 此实例等于该对象。</description></item><item><term> 大于零</term><description> 此实例大于该对象 
- 或 - 
该对象是空引用（在 Visual Basic 中为 <see langword="Nothing" />）</description></item></list></returns>
    </member>
    <member name="M:System.Data.SqlTypes.SqlString.Concat(System.Data.SqlTypes.SqlString,System.Data.SqlTypes.SqlString)">
      <summary vsli:raw="Concatenates the two specified &lt;see cref=&quot;T:System.Data.SqlTypes.SqlString&quot; /&gt; structures.">串连两个指定的 <see cref="T:System.Data.SqlTypes.SqlString" /> 结构。</summary>
      <param name="x" vsli:raw="A &lt;see cref=&quot;T:System.Data.SqlTypes.SqlString&quot; /&gt;.">
        <see cref="T:System.Data.SqlTypes.SqlString" />。</param>
      <param name="y" vsli:raw="A &lt;see cref=&quot;T:System.Data.SqlTypes.SqlString&quot; /&gt;.">
        <see cref="T:System.Data.SqlTypes.SqlString" />。</param>
      <returns vsli:raw="A &lt;see cref=&quot;T:System.Data.SqlTypes.SqlString&quot; /&gt; that contains the newly concatenated value representing the contents of the two &lt;see cref=&quot;T:System.Data.SqlTypes.SqlString&quot; /&gt; parameters.">一个 <see cref="T:System.Data.SqlTypes.SqlString" />，它包含表示两个 <see cref="T:System.Data.SqlTypes.SqlString" /> 参数内容的新串联的值。</returns>
    </member>
    <member name="M:System.Data.SqlTypes.SqlString.Equals(System.Data.SqlTypes.SqlString,System.Data.SqlTypes.SqlString)">
      <summary vsli:raw="Performs a logical comparison of the two &lt;see cref=&quot;T:System.Data.SqlTypes.SqlString&quot; /&gt; operands to determine whether they are equal.">对两个 <see cref="T:System.Data.SqlTypes.SqlString" /> 操作数执行逻辑比较，以确定它们是否相等。</summary>
      <param name="x" vsli:raw="A &lt;see cref=&quot;T:System.Data.SqlTypes.SqlString&quot; /&gt;.">
        <see cref="T:System.Data.SqlTypes.SqlString" />。</param>
      <param name="y" vsli:raw="A &lt;see cref=&quot;T:System.Data.SqlTypes.SqlString&quot; /&gt;.">
        <see cref="T:System.Data.SqlTypes.SqlString" />。</param>
      <returns vsli:raw="&lt;see langword=&quot;true&quot; /&gt; if the two values are equal. Otherwise, &lt;see langword=&quot;false&quot; /&gt;. If either instance is null, then the &lt;see langword=&quot;SqlString&quot; /&gt; will be null.">如果两个值相等，则为 <see langword="true" />。 否则为 <see langword="false" />。 如果任一实例为 null，则 <see langword="SqlString" /> 将为 null。</returns>
    </member>
    <member name="M:System.Data.SqlTypes.SqlString.Equals(System.Object)">
      <summary vsli:raw="Compares the supplied object parameter to the &lt;see cref=&quot;P:System.Data.SqlTypes.SqlString.Value&quot; /&gt; property of the &lt;see cref=&quot;T:System.Data.SqlTypes.SqlString&quot; /&gt; object.">将提供的对象参数与 <see cref="P:System.Data.SqlTypes.SqlString.Value" /> 对象的 <see cref="T:System.Data.SqlTypes.SqlString" /> 属性进行比较。</summary>
      <param name="value" vsli:raw="The object to be compared.">要比较的对象。</param>
      <returns vsli:raw="&lt;see langword=&quot;true&quot; /&gt; if the object is an instance of &lt;see cref=&quot;T:System.Data.SqlTypes.SqlString&quot; /&gt; and the two are equal; otherwise, &lt;see langword=&quot;false&quot; /&gt;.">如果对象是 <see cref="T:System.Data.SqlTypes.SqlString" /> 的实例并且两者相等，则返回 <see langword="true" />；否则，返回 <see langword="false" />。</returns>
    </member>
    <member name="M:System.Data.SqlTypes.SqlString.GetHashCode">
      <summary vsli:raw="Gets the hash code for this instance.">获取此实例的哈希代码。</summary>
      <returns vsli:raw="A 32-bit signed integer hash code.">32 位有符号整数哈希代码。</returns>
    </member>
    <member name="M:System.Data.SqlTypes.SqlString.GetNonUnicodeBytes">
      <summary vsli:raw="Gets an array of bytes, that contains the contents of the &lt;see cref=&quot;T:System.Data.SqlTypes.SqlString&quot; /&gt; in ANSI format.">获取字节的数组，其中包含 <see cref="T:System.Data.SqlTypes.SqlString" /> ANSI 格式的内容。</summary>
      <returns vsli:raw="An byte array, that contains the contents of the &lt;see cref=&quot;T:System.Data.SqlTypes.SqlString&quot; /&gt; in ANSI format.">一个字节数组，包含 <see cref="T:System.Data.SqlTypes.SqlString" /> ANSI 格式的内容。</returns>
    </member>
    <member name="M:System.Data.SqlTypes.SqlString.GetUnicodeBytes">
      <summary vsli:raw="Gets an array of bytes, that contains the contents of the &lt;see cref=&quot;T:System.Data.SqlTypes.SqlString&quot; /&gt; in Unicode format.">获取字节的数组，其中包含 <see cref="T:System.Data.SqlTypes.SqlString" /> Unicode 格式的内容。</summary>
      <returns vsli:raw="An byte array, that contains the contents of the &lt;see cref=&quot;T:System.Data.SqlTypes.SqlString&quot; /&gt; in Unicode format.">一个字节数组，包含 <see cref="T:System.Data.SqlTypes.SqlString" /> Unicode 格式的内容。</returns>
    </member>
    <member name="M:System.Data.SqlTypes.SqlString.GetXsdType(System.Xml.Schema.XmlSchemaSet)">
      <summary vsli:raw="Returns the XML Schema definition language (XSD) of the specified &lt;see cref=&quot;T:System.Xml.Schema.XmlSchemaSet&quot; /&gt;.">返回指定的 <see cref="T:System.Xml.Schema.XmlSchemaSet" /> 的 XML 架构定义语言 (XSD)。</summary>
      <param name="schemaSet" vsli:raw="A &lt;see cref=&quot;T:System.Xml.Schema.XmlSchemaSet&quot; /&gt;.">
        <see cref="T:System.Xml.Schema.XmlSchemaSet" />。</param>
      <returns vsli:raw="A &lt;see langword=&quot;string&quot; /&gt; value that indicates the XSD of the specified &lt;see cref=&quot;T:System.Xml.Schema.XmlSchemaSet&quot; /&gt;.">指示指定的 <see cref="T:System.Xml.Schema.XmlSchemaSet" /> 的 XSD 的 <see langword="string" /> 值。</returns>
    </member>
    <member name="M:System.Data.SqlTypes.SqlString.GreaterThan(System.Data.SqlTypes.SqlString,System.Data.SqlTypes.SqlString)">
      <summary vsli:raw="Performs a logical comparison of the two &lt;see cref=&quot;T:System.Data.SqlTypes.SqlString&quot; /&gt; operands to determine whether the first is greater than the second.">对两个 <see cref="T:System.Data.SqlTypes.SqlString" /> 操作数执行逻辑比较，以确定第一个操作数是否大于第二个操作数。</summary>
      <param name="x" vsli:raw="A &lt;see cref=&quot;T:System.Data.SqlTypes.SqlString&quot; /&gt;.">
        <see cref="T:System.Data.SqlTypes.SqlString" />。</param>
      <param name="y" vsli:raw="A &lt;see cref=&quot;T:System.Data.SqlTypes.SqlString&quot; /&gt;.">
        <see cref="T:System.Data.SqlTypes.SqlString" />。</param>
      <returns vsli:raw="A &lt;see cref=&quot;T:System.Data.SqlTypes.SqlBoolean&quot; /&gt; that is &lt;see cref=&quot;F:System.Data.SqlTypes.SqlBoolean.True&quot; /&gt; if the first instance is greater than the second instance. Otherwise, &lt;see cref=&quot;F:System.Data.SqlTypes.SqlBoolean.False&quot; /&gt;. If either instance of &lt;see cref=&quot;T:System.Data.SqlTypes.SqlString&quot; /&gt; is null, the &lt;see cref=&quot;P:System.Data.SqlTypes.SqlBoolean.Value&quot; /&gt; of the &lt;see cref=&quot;T:System.Data.SqlTypes.SqlBoolean&quot; /&gt; will be &lt;see cref=&quot;F:System.Data.SqlTypes.SqlBoolean.Null&quot; /&gt;.">一个 <see cref="T:System.Data.SqlTypes.SqlBoolean" />，如果第一个实例大于第二个实例，则它为 <see cref="F:System.Data.SqlTypes.SqlBoolean.True" />。 否则为 <see cref="F:System.Data.SqlTypes.SqlBoolean.False" />。 如果 <see cref="T:System.Data.SqlTypes.SqlString" /> 的任一实例为空，则 <see cref="P:System.Data.SqlTypes.SqlBoolean.Value" /> 的 <see cref="T:System.Data.SqlTypes.SqlBoolean" /> 将为 <see cref="F:System.Data.SqlTypes.SqlBoolean.Null" />。</returns>
    </member>
    <member name="M:System.Data.SqlTypes.SqlString.GreaterThanOrEqual(System.Data.SqlTypes.SqlString,System.Data.SqlTypes.SqlString)">
      <summary vsli:raw="Performs a logical comparison of the two &lt;see cref=&quot;T:System.Data.SqlTypes.SqlString&quot; /&gt; operands to determine whether the first is greater than or equal to the second.">对两个 <see cref="T:System.Data.SqlTypes.SqlString" /> 操作数执行逻辑比较，以确定第一个操作数是否大于或等于第二个操作数。</summary>
      <param name="x" vsli:raw="A &lt;see cref=&quot;T:System.Data.SqlTypes.SqlString&quot; /&gt;.">
        <see cref="T:System.Data.SqlTypes.SqlString" />。</param>
      <param name="y" vsli:raw="A &lt;see cref=&quot;T:System.Data.SqlTypes.SqlString&quot; /&gt;.">
        <see cref="T:System.Data.SqlTypes.SqlString" />。</param>
      <returns vsli:raw="A &lt;see cref=&quot;T:System.Data.SqlTypes.SqlBoolean&quot; /&gt; that is &lt;see cref=&quot;F:System.Data.SqlTypes.SqlBoolean.True&quot; /&gt; if the first instance is greater than or equal to the second instance. Otherwise, &lt;see cref=&quot;F:System.Data.SqlTypes.SqlBoolean.False&quot; /&gt;. If either instance of &lt;see cref=&quot;T:System.Data.SqlTypes.SqlString&quot; /&gt; is null, the &lt;see cref=&quot;P:System.Data.SqlTypes.SqlBoolean.Value&quot; /&gt; of the &lt;see cref=&quot;T:System.Data.SqlTypes.SqlBoolean&quot; /&gt; will be &lt;see cref=&quot;F:System.Data.SqlTypes.SqlBoolean.Null&quot; /&gt;.">一个 <see cref="T:System.Data.SqlTypes.SqlBoolean" />，如果第一个实例大于或等于第二个实例，则为 <see cref="F:System.Data.SqlTypes.SqlBoolean.True" />。 否则为 <see cref="F:System.Data.SqlTypes.SqlBoolean.False" />。 如果 <see cref="T:System.Data.SqlTypes.SqlString" /> 的任一实例为空，则 <see cref="P:System.Data.SqlTypes.SqlBoolean.Value" /> 的 <see cref="T:System.Data.SqlTypes.SqlBoolean" /> 将为 <see cref="F:System.Data.SqlTypes.SqlBoolean.Null" />。</returns>
    </member>
    <member name="M:System.Data.SqlTypes.SqlString.LessThan(System.Data.SqlTypes.SqlString,System.Data.SqlTypes.SqlString)">
      <summary vsli:raw="Performs a logical comparison of the two &lt;see cref=&quot;T:System.Data.SqlTypes.SqlString&quot; /&gt; operands to determine whether the first is less than the second.">对两个 <see cref="T:System.Data.SqlTypes.SqlString" /> 操作数执行逻辑比较，以确定第一个操作数是否小于第二个操作数。</summary>
      <param name="x" vsli:raw="A &lt;see cref=&quot;T:System.Data.SqlTypes.SqlString&quot; /&gt;.">
        <see cref="T:System.Data.SqlTypes.SqlString" />。</param>
      <param name="y" vsli:raw="A &lt;see cref=&quot;T:System.Data.SqlTypes.SqlString&quot; /&gt;.">
        <see cref="T:System.Data.SqlTypes.SqlString" />。</param>
      <returns vsli:raw="A &lt;see cref=&quot;T:System.Data.SqlTypes.SqlBoolean&quot; /&gt; that is &lt;see cref=&quot;F:System.Data.SqlTypes.SqlBoolean.True&quot; /&gt; if the first instance is less than the second instance. Otherwise, &lt;see cref=&quot;F:System.Data.SqlTypes.SqlBoolean.False&quot; /&gt;. If either instance of &lt;see cref=&quot;T:System.Data.SqlTypes.SqlString&quot; /&gt; is null, the &lt;see cref=&quot;P:System.Data.SqlTypes.SqlBoolean.Value&quot; /&gt; of the &lt;see cref=&quot;T:System.Data.SqlTypes.SqlBoolean&quot; /&gt; will be &lt;see cref=&quot;F:System.Data.SqlTypes.SqlBoolean.Null&quot; /&gt;.">一个 <see cref="T:System.Data.SqlTypes.SqlBoolean" />，如果第一个实例小于第二个实例，则它为 <see cref="F:System.Data.SqlTypes.SqlBoolean.True" />。 否则为 <see cref="F:System.Data.SqlTypes.SqlBoolean.False" />。 如果 <see cref="T:System.Data.SqlTypes.SqlString" /> 的任一实例为空，则 <see cref="P:System.Data.SqlTypes.SqlBoolean.Value" /> 的 <see cref="T:System.Data.SqlTypes.SqlBoolean" /> 将为 <see cref="F:System.Data.SqlTypes.SqlBoolean.Null" />。</returns>
    </member>
    <member name="M:System.Data.SqlTypes.SqlString.LessThanOrEqual(System.Data.SqlTypes.SqlString,System.Data.SqlTypes.SqlString)">
      <summary vsli:raw="Performs a logical comparison of the two &lt;see cref=&quot;T:System.Data.SqlTypes.SqlString&quot; /&gt; operands to determine whether the first is less than or equal to the second.">对两个 <see cref="T:System.Data.SqlTypes.SqlString" /> 操作数执行逻辑比较，以确定第一个操作数是否小于或等于第二个操作数。</summary>
      <param name="x" vsli:raw="A &lt;see cref=&quot;T:System.Data.SqlTypes.SqlString&quot; /&gt;.">
        <see cref="T:System.Data.SqlTypes.SqlString" />。</param>
      <param name="y" vsli:raw="A &lt;see cref=&quot;T:System.Data.SqlTypes.SqlString&quot; /&gt;.">
        <see cref="T:System.Data.SqlTypes.SqlString" />。</param>
      <returns vsli:raw="A &lt;see cref=&quot;T:System.Data.SqlTypes.SqlBoolean&quot; /&gt; that is &lt;see cref=&quot;F:System.Data.SqlTypes.SqlBoolean.True&quot; /&gt; if the first instance is less than or equal to the second instance. Otherwise, &lt;see cref=&quot;F:System.Data.SqlTypes.SqlBoolean.False&quot; /&gt;. If either instance of &lt;see cref=&quot;T:System.Data.SqlTypes.SqlString&quot; /&gt; is null, the &lt;see cref=&quot;P:System.Data.SqlTypes.SqlBoolean.Value&quot; /&gt; of the &lt;see cref=&quot;T:System.Data.SqlTypes.SqlBoolean&quot; /&gt; will be &lt;see cref=&quot;F:System.Data.SqlTypes.SqlBoolean.Null&quot; /&gt;.">一个 <see cref="T:System.Data.SqlTypes.SqlBoolean" />，如果第一个实例小于或等于第二个实例，则它为 <see cref="F:System.Data.SqlTypes.SqlBoolean.True" />。 否则为 <see cref="F:System.Data.SqlTypes.SqlBoolean.False" />。 如果 <see cref="T:System.Data.SqlTypes.SqlString" /> 的任一实例为空，则 <see cref="P:System.Data.SqlTypes.SqlBoolean.Value" /> 的 <see cref="T:System.Data.SqlTypes.SqlBoolean" /> 将为 <see cref="F:System.Data.SqlTypes.SqlBoolean.Null" />。</returns>
    </member>
    <member name="M:System.Data.SqlTypes.SqlString.NotEquals(System.Data.SqlTypes.SqlString,System.Data.SqlTypes.SqlString)">
      <summary vsli:raw="Performs a logical comparison of the two &lt;see cref=&quot;T:System.Data.SqlTypes.SqlString&quot; /&gt; operands to determine whether they are not equal.">对两个 <see cref="T:System.Data.SqlTypes.SqlString" /> 操作数执行逻辑比较，以确定它们是否不相等。</summary>
      <param name="x" vsli:raw="A &lt;see cref=&quot;T:System.Data.SqlTypes.SqlString&quot; /&gt;.">
        <see cref="T:System.Data.SqlTypes.SqlString" />。</param>
      <param name="y" vsli:raw="A &lt;see cref=&quot;T:System.Data.SqlTypes.SqlString&quot; /&gt;.">
        <see cref="T:System.Data.SqlTypes.SqlString" />。</param>
      <returns vsli:raw="A &lt;see cref=&quot;T:System.Data.SqlTypes.SqlBoolean&quot; /&gt; that is &lt;see cref=&quot;F:System.Data.SqlTypes.SqlBoolean.True&quot; /&gt; if the two instances are not equal or &lt;see cref=&quot;F:System.Data.SqlTypes.SqlBoolean.False&quot; /&gt; if the two instances are equal. If either instance of &lt;see cref=&quot;T:System.Data.SqlTypes.SqlString&quot; /&gt; is null, the &lt;see cref=&quot;P:System.Data.SqlTypes.SqlBoolean.Value&quot; /&gt; of the &lt;see cref=&quot;T:System.Data.SqlTypes.SqlBoolean&quot; /&gt; will be &lt;see cref=&quot;F:System.Data.SqlTypes.SqlBoolean.Null&quot; /&gt;.">一个 <see cref="T:System.Data.SqlTypes.SqlBoolean" />，它在两个实例不等时为 <see cref="F:System.Data.SqlTypes.SqlBoolean.True" />，在两个实例相等时为 <see cref="F:System.Data.SqlTypes.SqlBoolean.False" />。 如果 <see cref="T:System.Data.SqlTypes.SqlString" /> 的任一实例为空，则 <see cref="P:System.Data.SqlTypes.SqlBoolean.Value" /> 的 <see cref="T:System.Data.SqlTypes.SqlBoolean" /> 将为 <see cref="F:System.Data.SqlTypes.SqlBoolean.Null" />。</returns>
    </member>
    <member name="M:System.Data.SqlTypes.SqlString.op_Addition(System.Data.SqlTypes.SqlString,System.Data.SqlTypes.SqlString)">
      <summary vsli:raw="Concatenates the two specified &lt;see cref=&quot;T:System.Data.SqlTypes.SqlString&quot; /&gt; structures.">串连两个指定的 <see cref="T:System.Data.SqlTypes.SqlString" /> 结构。</summary>
      <param name="x" vsli:raw="A &lt;see cref=&quot;T:System.Data.SqlTypes.SqlString&quot; /&gt;.">
        <see cref="T:System.Data.SqlTypes.SqlString" />。</param>
      <param name="y" vsli:raw="A &lt;see cref=&quot;T:System.Data.SqlTypes.SqlString&quot; /&gt;.">
        <see cref="T:System.Data.SqlTypes.SqlString" />。</param>
      <returns vsli:raw="A &lt;see cref=&quot;T:System.Data.SqlTypes.SqlString&quot; /&gt; that contains the newly concatenated value representing the contents of the two &lt;see cref=&quot;T:System.Data.SqlTypes.SqlString&quot; /&gt; parameters.">一个 <see cref="T:System.Data.SqlTypes.SqlString" />，它包含表示两个 <see cref="T:System.Data.SqlTypes.SqlString" /> 参数内容的新串联的值。</returns>
    </member>
    <member name="M:System.Data.SqlTypes.SqlString.op_Equality(System.Data.SqlTypes.SqlString,System.Data.SqlTypes.SqlString)">
      <summary vsli:raw="Performs a logical comparison of the two &lt;see cref=&quot;T:System.Data.SqlTypes.SqlString&quot; /&gt; operands to determine whether they are equal.">对两个 <see cref="T:System.Data.SqlTypes.SqlString" /> 操作数执行逻辑比较，以确定它们是否相等。</summary>
      <param name="x" vsli:raw="A &lt;see cref=&quot;T:System.Data.SqlTypes.SqlString&quot; /&gt;.">
        <see cref="T:System.Data.SqlTypes.SqlString" />。</param>
      <param name="y" vsli:raw="A &lt;see cref=&quot;T:System.Data.SqlTypes.SqlString&quot; /&gt;.">
        <see cref="T:System.Data.SqlTypes.SqlString" />。</param>
      <returns vsli:raw="A &lt;see cref=&quot;T:System.Data.SqlTypes.SqlBoolean&quot; /&gt; that is &lt;see cref=&quot;F:System.Data.SqlTypes.SqlBoolean.True&quot; /&gt; if the two instances are equal or &lt;see cref=&quot;F:System.Data.SqlTypes.SqlBoolean.False&quot; /&gt; if the two instances are not equal. If either instance of &lt;see cref=&quot;T:System.Data.SqlTypes.SqlString&quot; /&gt; is null, the &lt;see cref=&quot;P:System.Data.SqlTypes.SqlBoolean.Value&quot; /&gt; of the &lt;see cref=&quot;T:System.Data.SqlTypes.SqlBoolean&quot; /&gt; will be &lt;see cref=&quot;F:System.Data.SqlTypes.SqlBoolean.Null&quot; /&gt;.">一个 <see cref="T:System.Data.SqlTypes.SqlBoolean" />，它在两个实例相等时为 <see cref="F:System.Data.SqlTypes.SqlBoolean.True" />，在两个实例不等时为 <see cref="F:System.Data.SqlTypes.SqlBoolean.False" />。 如果 <see cref="T:System.Data.SqlTypes.SqlString" /> 的任一实例为空，则 <see cref="P:System.Data.SqlTypes.SqlBoolean.Value" /> 的 <see cref="T:System.Data.SqlTypes.SqlBoolean" /> 将为 <see cref="F:System.Data.SqlTypes.SqlBoolean.Null" />。</returns>
    </member>
    <member name="M:System.Data.SqlTypes.SqlString.op_Explicit(System.Data.SqlTypes.SqlBoolean)~System.Data.SqlTypes.SqlString">
      <summary vsli:raw="Converts the specified &lt;see cref=&quot;T:System.Data.SqlTypes.SqlBoolean&quot; /&gt; structure to &lt;see cref=&quot;T:System.Data.SqlTypes.SqlString&quot; /&gt;.">将指定的 <see cref="T:System.Data.SqlTypes.SqlBoolean" /> 结构转换为 <see cref="T:System.Data.SqlTypes.SqlString" />。</summary>
      <param name="x" vsli:raw="The &lt;see cref=&quot;T:System.Data.SqlTypes.SqlBoolean&quot; /&gt; structure to be converted.">要转换的 <see cref="T:System.Data.SqlTypes.SqlBoolean" /> 结构。</param>
      <returns vsli:raw="A new &lt;see cref=&quot;T:System.Data.SqlTypes.SqlString&quot; /&gt; that contains the string representation of the &lt;see cref=&quot;T:System.Data.SqlTypes.SqlBoolean&quot; /&gt; parameter.">一个新的 <see cref="T:System.Data.SqlTypes.SqlString" />，包含 <see cref="T:System.Data.SqlTypes.SqlBoolean" /> 参数的字符串表示形式。</returns>
    </member>
    <member name="M:System.Data.SqlTypes.SqlString.op_Explicit(System.Data.SqlTypes.SqlByte)~System.Data.SqlTypes.SqlString">
      <summary vsli:raw="Converts the specified &lt;see cref=&quot;T:System.Data.SqlTypes.SqlByte&quot; /&gt; structure to &lt;see cref=&quot;T:System.Data.SqlTypes.SqlString&quot; /&gt;.">将指定的 <see cref="T:System.Data.SqlTypes.SqlByte" /> 结构转换为 <see cref="T:System.Data.SqlTypes.SqlString" />。</summary>
      <param name="x" vsli:raw="The &lt;see cref=&quot;T:System.Data.SqlTypes.SqlByte&quot; /&gt; structure to be converted.">要转换的 <see cref="T:System.Data.SqlTypes.SqlByte" /> 结构。</param>
      <returns vsli:raw="A new &lt;see cref=&quot;T:System.Data.SqlTypes.SqlString&quot; /&gt; object that contains the string representation of the &lt;see cref=&quot;T:System.Data.SqlTypes.SqlByte&quot; /&gt; parameter.">一个新的 <see cref="T:System.Data.SqlTypes.SqlString" /> 对象，包含 <see cref="T:System.Data.SqlTypes.SqlByte" /> 参数的字符串表示形式。</returns>
    </member>
    <member name="M:System.Data.SqlTypes.SqlString.op_Explicit(System.Data.SqlTypes.SqlDateTime)~System.Data.SqlTypes.SqlString">
      <summary vsli:raw="Converts the specified &lt;see cref=&quot;T:System.Data.SqlTypes.SqlDateTime&quot; /&gt; parameter to &lt;see cref=&quot;T:System.Data.SqlTypes.SqlString&quot; /&gt;.">将指定的 <see cref="T:System.Data.SqlTypes.SqlDateTime" /> 参数转换为 <see cref="T:System.Data.SqlTypes.SqlString" />。</summary>
      <param name="x" vsli:raw="The &lt;see cref=&quot;T:System.Data.SqlTypes.SqlDateTime&quot; /&gt; structure to be converted.">要转换的 <see cref="T:System.Data.SqlTypes.SqlDateTime" /> 结构。</param>
      <returns vsli:raw="A new &lt;see cref=&quot;T:System.Data.SqlTypes.SqlString&quot; /&gt; that contains the string representation of the &lt;see cref=&quot;T:System.Data.SqlTypes.SqlDateTime&quot; /&gt; parameter.">一个新的 <see cref="T:System.Data.SqlTypes.SqlString" />，包含 <see cref="T:System.Data.SqlTypes.SqlDateTime" /> 参数的字符串表示形式。</returns>
    </member>
    <member name="M:System.Data.SqlTypes.SqlString.op_Explicit(System.Data.SqlTypes.SqlDecimal)~System.Data.SqlTypes.SqlString">
      <summary vsli:raw="Converts the specified &lt;see cref=&quot;T:System.Data.SqlTypes.SqlDecimal&quot; /&gt; parameter to &lt;see cref=&quot;T:System.Data.SqlTypes.SqlString&quot; /&gt;.">将指定的 <see cref="T:System.Data.SqlTypes.SqlDecimal" /> 参数转换为 <see cref="T:System.Data.SqlTypes.SqlString" />。</summary>
      <param name="x" vsli:raw="The &lt;see langword=&quot;SqlDecimal&quot; /&gt; structure to be converted.">要转换的 <see langword="SqlDecimal" /> 结构。</param>
      <returns vsli:raw="A new &lt;see cref=&quot;T:System.Data.SqlTypes.SqlString&quot; /&gt; that contains the string representation of the &lt;see langword=&quot;SqlDecimal&quot; /&gt; parameter.">一个新的 <see cref="T:System.Data.SqlTypes.SqlString" />，包含 <see langword="SqlDecimal" /> 参数的字符串表示形式。</returns>
    </member>
    <member name="M:System.Data.SqlTypes.SqlString.op_Explicit(System.Data.SqlTypes.SqlDouble)~System.Data.SqlTypes.SqlString">
      <summary vsli:raw="Converts the specified &lt;see cref=&quot;T:System.Data.SqlTypes.SqlDouble&quot; /&gt; parameter to &lt;see cref=&quot;T:System.Data.SqlTypes.SqlString&quot; /&gt;.">将指定的 <see cref="T:System.Data.SqlTypes.SqlDouble" /> 参数转换为 <see cref="T:System.Data.SqlTypes.SqlString" />。</summary>
      <param name="x" vsli:raw="The &lt;see cref=&quot;T:System.Data.SqlTypes.SqlDouble&quot; /&gt; structure to be converted.">要转换的 <see cref="T:System.Data.SqlTypes.SqlDouble" /> 结构。</param>
      <returns vsli:raw="A new &lt;see cref=&quot;T:System.Data.SqlTypes.SqlString&quot; /&gt; that contains the string representation of the &lt;see cref=&quot;T:System.Data.SqlTypes.SqlDouble&quot; /&gt; parameter.">一个新的 <see cref="T:System.Data.SqlTypes.SqlString" />，包含 <see cref="T:System.Data.SqlTypes.SqlDouble" /> 参数的字符串表示形式。</returns>
    </member>
    <member name="M:System.Data.SqlTypes.SqlString.op_Explicit(System.Data.SqlTypes.SqlGuid)~System.Data.SqlTypes.SqlString">
      <summary vsli:raw="Converts the specified &lt;see cref=&quot;T:System.Data.SqlTypes.SqlGuid&quot; /&gt; parameter to &lt;see cref=&quot;T:System.Data.SqlTypes.SqlString&quot; /&gt;.">将指定的 <see cref="T:System.Data.SqlTypes.SqlGuid" /> 参数转换为 <see cref="T:System.Data.SqlTypes.SqlString" />。</summary>
      <param name="x" vsli:raw="The &lt;see cref=&quot;T:System.Data.SqlTypes.SqlGuid&quot; /&gt; structure to be converted.">要转换的 <see cref="T:System.Data.SqlTypes.SqlGuid" /> 结构。</param>
      <returns vsli:raw="A &lt;see cref=&quot;T:System.Data.SqlTypes.SqlString&quot; /&gt; whose value is the string representation of the specified &lt;see cref=&quot;T:System.Data.SqlTypes.SqlGuid&quot; /&gt;.">一个 <see cref="T:System.Data.SqlTypes.SqlString" />，它的值是指定的 <see cref="T:System.Data.SqlTypes.SqlGuid" /> 的字符串表示形式。</returns>
    </member>
    <member name="M:System.Data.SqlTypes.SqlString.op_Explicit(System.Data.SqlTypes.SqlInt16)~System.Data.SqlTypes.SqlString">
      <summary vsli:raw="Converts the specified &lt;see cref=&quot;T:System.Data.SqlTypes.SqlInt16&quot; /&gt; parameter to &lt;see cref=&quot;T:System.Data.SqlTypes.SqlString&quot; /&gt;.">将指定的 <see cref="T:System.Data.SqlTypes.SqlInt16" /> 参数转换为 <see cref="T:System.Data.SqlTypes.SqlString" />。</summary>
      <param name="x" vsli:raw="The &lt;see cref=&quot;T:System.Data.SqlTypes.SqlInt16&quot; /&gt; structure to be converted.">要转换的 <see cref="T:System.Data.SqlTypes.SqlInt16" /> 结构。</param>
      <returns vsli:raw="A new &lt;see cref=&quot;T:System.Data.SqlTypes.SqlString&quot; /&gt; object that contains the string representation of the &lt;see cref=&quot;T:System.Data.SqlTypes.SqlInt16&quot; /&gt; parameter.">一个新的 <see cref="T:System.Data.SqlTypes.SqlString" /> 对象，包含 <see cref="T:System.Data.SqlTypes.SqlInt16" /> 参数的字符串表示形式。</returns>
    </member>
    <member name="M:System.Data.SqlTypes.SqlString.op_Explicit(System.Data.SqlTypes.SqlInt32)~System.Data.SqlTypes.SqlString">
      <summary vsli:raw="Converts the specified &lt;see cref=&quot;T:System.Data.SqlTypes.SqlInt32&quot; /&gt; parameter to &lt;see cref=&quot;T:System.Data.SqlTypes.SqlString&quot; /&gt;.">将指定的 <see cref="T:System.Data.SqlTypes.SqlInt32" /> 参数转换为 <see cref="T:System.Data.SqlTypes.SqlString" />。</summary>
      <param name="x" vsli:raw="The SqlInt32 structure to be converted.">要转换的 SqlInt32 结构。</param>
      <returns vsli:raw="A new &lt;see cref=&quot;T:System.Data.SqlTypes.SqlString&quot; /&gt; object that contains the string representation of the &lt;see cref=&quot;T:System.Data.SqlTypes.SqlInt32&quot; /&gt; parameter.">一个新的 <see cref="T:System.Data.SqlTypes.SqlString" /> 对象，包含 <see cref="T:System.Data.SqlTypes.SqlInt32" /> 参数的字符串表示形式。</returns>
    </member>
    <member name="M:System.Data.SqlTypes.SqlString.op_Explicit(System.Data.SqlTypes.SqlInt64)~System.Data.SqlTypes.SqlString">
      <summary vsli:raw="Converts the specified &lt;see cref=&quot;T:System.Data.SqlTypes.SqlInt64&quot; /&gt; parameter to &lt;see cref=&quot;T:System.Data.SqlTypes.SqlString&quot; /&gt;.">将指定的 <see cref="T:System.Data.SqlTypes.SqlInt64" /> 参数转换为 <see cref="T:System.Data.SqlTypes.SqlString" />。</summary>
      <param name="x" vsli:raw="The &lt;see cref=&quot;T:System.Data.SqlTypes.SqlInt64&quot; /&gt; structure to be converted.">要转换的 <see cref="T:System.Data.SqlTypes.SqlInt64" /> 结构。</param>
      <returns vsli:raw="A new &lt;see cref=&quot;T:System.Data.SqlTypes.SqlString&quot; /&gt; object that contains the string representation of the &lt;see cref=&quot;T:System.Data.SqlTypes.SqlInt64&quot; /&gt; parameter.">一个新的 <see cref="T:System.Data.SqlTypes.SqlString" /> 对象，包含 <see cref="T:System.Data.SqlTypes.SqlInt64" /> 参数的字符串表示形式。</returns>
    </member>
    <member name="M:System.Data.SqlTypes.SqlString.op_Explicit(System.Data.SqlTypes.SqlMoney)~System.Data.SqlTypes.SqlString">
      <summary vsli:raw="Converts the specified &lt;see cref=&quot;T:System.Data.SqlTypes.SqlMoney&quot; /&gt; parameter to &lt;see cref=&quot;T:System.Data.SqlTypes.SqlString&quot; /&gt;.">将指定的 <see cref="T:System.Data.SqlTypes.SqlMoney" /> 参数转换为 <see cref="T:System.Data.SqlTypes.SqlString" />。</summary>
      <param name="x" vsli:raw="The &lt;see cref=&quot;T:System.Data.SqlTypes.SqlMoney&quot; /&gt; structure to be converted.">要转换的 <see cref="T:System.Data.SqlTypes.SqlMoney" /> 结构。</param>
      <returns vsli:raw="A new &lt;see cref=&quot;T:System.Data.SqlTypes.SqlString&quot; /&gt; that contains the string representation of the &lt;see cref=&quot;T:System.Data.SqlTypes.SqlMoney&quot; /&gt; parameter.">一个新的 <see cref="T:System.Data.SqlTypes.SqlString" />，包含 <see cref="T:System.Data.SqlTypes.SqlMoney" /> 参数的字符串表示形式。</returns>
    </member>
    <member name="M:System.Data.SqlTypes.SqlString.op_Explicit(System.Data.SqlTypes.SqlSingle)~System.Data.SqlTypes.SqlString">
      <summary vsli:raw="Converts the specified &lt;see cref=&quot;T:System.Data.SqlTypes.SqlSingle&quot; /&gt; parameter to &lt;see cref=&quot;T:System.Data.SqlTypes.SqlString&quot; /&gt;.">将指定的 <see cref="T:System.Data.SqlTypes.SqlSingle" /> 参数转换为 <see cref="T:System.Data.SqlTypes.SqlString" />。</summary>
      <param name="x" vsli:raw="The &lt;see cref=&quot;T:System.Data.SqlTypes.SqlSingle&quot; /&gt; structure to be converted.">要转换的 <see cref="T:System.Data.SqlTypes.SqlSingle" /> 结构。</param>
      <returns vsli:raw="A new &lt;see cref=&quot;T:System.Data.SqlTypes.SqlString&quot; /&gt; that contains the string representation of the &lt;see cref=&quot;T:System.Data.SqlTypes.SqlSingle&quot; /&gt; parameter.">一个新的 <see cref="T:System.Data.SqlTypes.SqlString" />，包含 <see cref="T:System.Data.SqlTypes.SqlSingle" /> 参数的字符串表示形式。</returns>
    </member>
    <member name="M:System.Data.SqlTypes.SqlString.op_Explicit(System.Data.SqlTypes.SqlString)~System.String">
      <summary vsli:raw="Converts a &lt;see cref=&quot;T:System.Data.SqlTypes.SqlString&quot; /&gt; to a &lt;see cref=&quot;T:System.String&quot; /&gt;.">将 <see cref="T:System.Data.SqlTypes.SqlString" /> 转换为 <see cref="T:System.String" />。</summary>
      <param name="x" vsli:raw="The &lt;see cref=&quot;T:System.Data.SqlTypes.SqlString&quot; /&gt; to be converted.">要转换的 <see cref="T:System.Data.SqlTypes.SqlString" />。</param>
      <returns vsli:raw="A &lt;see langword=&quot;String&quot; /&gt;, whose contents are the same as the &lt;see cref=&quot;P:System.Data.SqlTypes.SqlString.Value&quot; /&gt; property of the &lt;see cref=&quot;T:System.Data.SqlTypes.SqlString&quot; /&gt; parameter.">一个 <see langword="String" />，它的内容与 <see cref="T:System.Data.SqlTypes.SqlString" /> 参数的 <see cref="P:System.Data.SqlTypes.SqlString.Value" /> 属性相同。</returns>
    </member>
    <member name="M:System.Data.SqlTypes.SqlString.op_GreaterThan(System.Data.SqlTypes.SqlString,System.Data.SqlTypes.SqlString)">
      <summary vsli:raw="Performs a logical comparison of the two &lt;see cref=&quot;T:System.Data.SqlTypes.SqlString&quot; /&gt; operands to determine whether the first is greater than the second.">对两个 <see cref="T:System.Data.SqlTypes.SqlString" /> 操作数执行逻辑比较，以确定第一个操作数是否大于第二个操作数。</summary>
      <param name="x" vsli:raw="A &lt;see cref=&quot;T:System.Data.SqlTypes.SqlString&quot; /&gt;.">
        <see cref="T:System.Data.SqlTypes.SqlString" />。</param>
      <param name="y" vsli:raw="A &lt;see cref=&quot;T:System.Data.SqlTypes.SqlString&quot; /&gt;.">
        <see cref="T:System.Data.SqlTypes.SqlString" />。</param>
      <returns vsli:raw="A &lt;see cref=&quot;T:System.Data.SqlTypes.SqlBoolean&quot; /&gt; that is &lt;see cref=&quot;F:System.Data.SqlTypes.SqlBoolean.True&quot; /&gt; if the first instance is greater than the second instance. Otherwise, &lt;see cref=&quot;F:System.Data.SqlTypes.SqlBoolean.False&quot; /&gt;. If either instance of &lt;see cref=&quot;T:System.Data.SqlTypes.SqlString&quot; /&gt; is null, the &lt;see cref=&quot;P:System.Data.SqlTypes.SqlBoolean.Value&quot; /&gt; of the &lt;see cref=&quot;T:System.Data.SqlTypes.SqlBoolean&quot; /&gt; will be &lt;see cref=&quot;F:System.Data.SqlTypes.SqlBoolean.Null&quot; /&gt;.">一个 <see cref="T:System.Data.SqlTypes.SqlBoolean" />，如果第一个实例大于第二个实例，则它为 <see cref="F:System.Data.SqlTypes.SqlBoolean.True" />。 否则为 <see cref="F:System.Data.SqlTypes.SqlBoolean.False" />。 如果 <see cref="T:System.Data.SqlTypes.SqlString" /> 的任一实例为空，则 <see cref="P:System.Data.SqlTypes.SqlBoolean.Value" /> 的 <see cref="T:System.Data.SqlTypes.SqlBoolean" /> 将为 <see cref="F:System.Data.SqlTypes.SqlBoolean.Null" />。</returns>
    </member>
    <member name="M:System.Data.SqlTypes.SqlString.op_GreaterThanOrEqual(System.Data.SqlTypes.SqlString,System.Data.SqlTypes.SqlString)">
      <summary vsli:raw="Performs a logical comparison of the two &lt;see cref=&quot;T:System.Data.SqlTypes.SqlString&quot; /&gt; operands to determine whether the first is greater than or equal to the second.">对两个 <see cref="T:System.Data.SqlTypes.SqlString" /> 操作数执行逻辑比较，以确定第一个操作数是否大于或等于第二个操作数。</summary>
      <param name="x" vsli:raw="A &lt;see cref=&quot;T:System.Data.SqlTypes.SqlString&quot; /&gt;.">
        <see cref="T:System.Data.SqlTypes.SqlString" />。</param>
      <param name="y" vsli:raw="A &lt;see cref=&quot;T:System.Data.SqlTypes.SqlString&quot; /&gt;.">
        <see cref="T:System.Data.SqlTypes.SqlString" />。</param>
      <returns vsli:raw="A &lt;see cref=&quot;T:System.Data.SqlTypes.SqlBoolean&quot; /&gt; that is &lt;see cref=&quot;F:System.Data.SqlTypes.SqlBoolean.True&quot; /&gt; if the first instance is greater than or equal to the second instance. Otherwise, &lt;see cref=&quot;F:System.Data.SqlTypes.SqlBoolean.False&quot; /&gt;. If either instance of &lt;see cref=&quot;T:System.Data.SqlTypes.SqlString&quot; /&gt; is null, the &lt;see cref=&quot;P:System.Data.SqlTypes.SqlBoolean.Value&quot; /&gt; of the &lt;see cref=&quot;T:System.Data.SqlTypes.SqlBoolean&quot; /&gt; will be &lt;see cref=&quot;F:System.Data.SqlTypes.SqlBoolean.Null&quot; /&gt;.">一个 <see cref="T:System.Data.SqlTypes.SqlBoolean" />，如果第一个实例大于或等于第二个实例，则为 <see cref="F:System.Data.SqlTypes.SqlBoolean.True" />。 否则为 <see cref="F:System.Data.SqlTypes.SqlBoolean.False" />。 如果 <see cref="T:System.Data.SqlTypes.SqlString" /> 的任一实例为空，则 <see cref="P:System.Data.SqlTypes.SqlBoolean.Value" /> 的 <see cref="T:System.Data.SqlTypes.SqlBoolean" /> 将为 <see cref="F:System.Data.SqlTypes.SqlBoolean.Null" />。</returns>
    </member>
    <member name="M:System.Data.SqlTypes.SqlString.op_Implicit(System.String)~System.Data.SqlTypes.SqlString">
      <summary vsli:raw="Converts the &lt;see cref=&quot;T:System.String&quot; /&gt; parameter to a &lt;see cref=&quot;T:System.Data.SqlTypes.SqlString&quot; /&gt;.">将 <see cref="T:System.String" /> 参数转换为 <see cref="T:System.Data.SqlTypes.SqlString" />。</summary>
      <param name="x" vsli:raw="The &lt;see cref=&quot;T:System.String&quot; /&gt; to be converted.">要转换的 <see cref="T:System.String" />。</param>
      <returns vsli:raw="A &lt;see cref=&quot;T:System.Data.SqlTypes.SqlString&quot; /&gt; that contains the value of the specified &lt;see langword=&quot;String&quot; /&gt;.">一个 <see cref="T:System.Data.SqlTypes.SqlString" />，包含指定的 <see langword="String" /> 的值。</returns>
    </member>
    <member name="M:System.Data.SqlTypes.SqlString.op_Inequality(System.Data.SqlTypes.SqlString,System.Data.SqlTypes.SqlString)">
      <summary vsli:raw="Performs a logical comparison of the two &lt;see cref=&quot;T:System.Data.SqlTypes.SqlString&quot; /&gt; operands to determine whether they are not equal.">对两个 <see cref="T:System.Data.SqlTypes.SqlString" /> 操作数执行逻辑比较，以确定它们是否不相等。</summary>
      <param name="x" vsli:raw="A &lt;see cref=&quot;T:System.Data.SqlTypes.SqlString&quot; /&gt;.">
        <see cref="T:System.Data.SqlTypes.SqlString" />。</param>
      <param name="y" vsli:raw="A &lt;see cref=&quot;T:System.Data.SqlTypes.SqlString&quot; /&gt;.">
        <see cref="T:System.Data.SqlTypes.SqlString" />。</param>
      <returns vsli:raw="A &lt;see cref=&quot;T:System.Data.SqlTypes.SqlBoolean&quot; /&gt; that is &lt;see cref=&quot;F:System.Data.SqlTypes.SqlBoolean.True&quot; /&gt; if the two instances are not equal or &lt;see cref=&quot;F:System.Data.SqlTypes.SqlBoolean.False&quot; /&gt; if the two instances are equal. If either instance of &lt;see cref=&quot;T:System.Data.SqlTypes.SqlString&quot; /&gt; is null, the &lt;see cref=&quot;P:System.Data.SqlTypes.SqlBoolean.Value&quot; /&gt; of the &lt;see cref=&quot;T:System.Data.SqlTypes.SqlBoolean&quot; /&gt; will be &lt;see cref=&quot;F:System.Data.SqlTypes.SqlBoolean.Null&quot; /&gt;.">一个 <see cref="T:System.Data.SqlTypes.SqlBoolean" />，它在两个实例不等时为 <see cref="F:System.Data.SqlTypes.SqlBoolean.True" />，在两个实例相等时为 <see cref="F:System.Data.SqlTypes.SqlBoolean.False" />。 如果 <see cref="T:System.Data.SqlTypes.SqlString" /> 的任一实例为空，则 <see cref="P:System.Data.SqlTypes.SqlBoolean.Value" /> 的 <see cref="T:System.Data.SqlTypes.SqlBoolean" /> 将为 <see cref="F:System.Data.SqlTypes.SqlBoolean.Null" />。</returns>
    </member>
    <member name="M:System.Data.SqlTypes.SqlString.op_LessThan(System.Data.SqlTypes.SqlString,System.Data.SqlTypes.SqlString)">
      <summary vsli:raw="Performs a logical comparison of the two &lt;see cref=&quot;T:System.Data.SqlTypes.SqlString&quot; /&gt; operands to determine whether the first is less than the second.">对两个 <see cref="T:System.Data.SqlTypes.SqlString" /> 操作数执行逻辑比较，以确定第一个操作数是否小于第二个操作数。</summary>
      <param name="x" vsli:raw="A &lt;see cref=&quot;T:System.Data.SqlTypes.SqlString&quot; /&gt;.">
        <see cref="T:System.Data.SqlTypes.SqlString" />。</param>
      <param name="y" vsli:raw="A &lt;see cref=&quot;T:System.Data.SqlTypes.SqlString&quot; /&gt;.">
        <see cref="T:System.Data.SqlTypes.SqlString" />。</param>
      <returns vsli:raw="A &lt;see cref=&quot;T:System.Data.SqlTypes.SqlBoolean&quot; /&gt; that is &lt;see cref=&quot;F:System.Data.SqlTypes.SqlBoolean.True&quot; /&gt; if the first instance is less than the second instance. Otherwise, &lt;see cref=&quot;F:System.Data.SqlTypes.SqlBoolean.False&quot; /&gt;. If either instance of &lt;see cref=&quot;T:System.Data.SqlTypes.SqlString&quot; /&gt; is null, the &lt;see cref=&quot;P:System.Data.SqlTypes.SqlBoolean.Value&quot; /&gt; of the &lt;see cref=&quot;T:System.Data.SqlTypes.SqlBoolean&quot; /&gt; will be &lt;see cref=&quot;F:System.Data.SqlTypes.SqlBoolean.Null&quot; /&gt;.">一个 <see cref="T:System.Data.SqlTypes.SqlBoolean" />，如果第一个实例小于第二个实例，则它为 <see cref="F:System.Data.SqlTypes.SqlBoolean.True" />。 否则为 <see cref="F:System.Data.SqlTypes.SqlBoolean.False" />。 如果 <see cref="T:System.Data.SqlTypes.SqlString" /> 的任一实例为空，则 <see cref="P:System.Data.SqlTypes.SqlBoolean.Value" /> 的 <see cref="T:System.Data.SqlTypes.SqlBoolean" /> 将为 <see cref="F:System.Data.SqlTypes.SqlBoolean.Null" />。</returns>
    </member>
    <member name="M:System.Data.SqlTypes.SqlString.op_LessThanOrEqual(System.Data.SqlTypes.SqlString,System.Data.SqlTypes.SqlString)">
      <summary vsli:raw="Performs a logical comparison of the two &lt;see cref=&quot;T:System.Data.SqlTypes.SqlString&quot; /&gt; operands to determine whether the first is less than or equal to the second.">对两个 <see cref="T:System.Data.SqlTypes.SqlString" /> 操作数执行逻辑比较，以确定第一个操作数是否小于或等于第二个操作数。</summary>
      <param name="x" vsli:raw="A &lt;see cref=&quot;T:System.Data.SqlTypes.SqlString&quot; /&gt;.">
        <see cref="T:System.Data.SqlTypes.SqlString" />。</param>
      <param name="y" vsli:raw="A &lt;see cref=&quot;T:System.Data.SqlTypes.SqlString&quot; /&gt;.">
        <see cref="T:System.Data.SqlTypes.SqlString" />。</param>
      <returns vsli:raw="A &lt;see cref=&quot;T:System.Data.SqlTypes.SqlBoolean&quot; /&gt; that is &lt;see cref=&quot;F:System.Data.SqlTypes.SqlBoolean.True&quot; /&gt; if the first instance is less than or equal to the second instance. Otherwise, &lt;see cref=&quot;F:System.Data.SqlTypes.SqlBoolean.False&quot; /&gt;. If either instance of &lt;see cref=&quot;T:System.Data.SqlTypes.SqlString&quot; /&gt; is null, the &lt;see cref=&quot;P:System.Data.SqlTypes.SqlBoolean.Value&quot; /&gt; of the &lt;see cref=&quot;T:System.Data.SqlTypes.SqlBoolean&quot; /&gt; will be &lt;see cref=&quot;F:System.Data.SqlTypes.SqlBoolean.Null&quot; /&gt;.">一个 <see cref="T:System.Data.SqlTypes.SqlBoolean" />，如果第一个实例小于或等于第二个实例，则它为 <see cref="F:System.Data.SqlTypes.SqlBoolean.True" />。 否则为 <see cref="F:System.Data.SqlTypes.SqlBoolean.False" />。 如果 <see cref="T:System.Data.SqlTypes.SqlString" /> 的任一实例为空，则 <see cref="P:System.Data.SqlTypes.SqlBoolean.Value" /> 的 <see cref="T:System.Data.SqlTypes.SqlBoolean" /> 将为 <see cref="F:System.Data.SqlTypes.SqlBoolean.Null" />。</returns>
    </member>
    <member name="M:System.Data.SqlTypes.SqlString.System#Xml#Serialization#IXmlSerializable#GetSchema">
      <summary vsli:raw="This member supports the .NET Framework infrastructure and is not intended to be used directly from your code.">此成员支持 .NET Framework 结构，不能在代码中直接使用。</summary>
      <returns vsli:raw="An &lt;see langword=&quot;XmlSchema&quot; /&gt;.">
        <see langword="XmlSchema" />。</returns>
    </member>
    <member name="M:System.Data.SqlTypes.SqlString.System#Xml#Serialization#IXmlSerializable#ReadXml(System.Xml.XmlReader)">
      <summary vsli:raw="This member supports the .NET Framework infrastructure and is not intended to be used directly from your code.">此成员支持 .NET Framework 结构，不能在代码中直接使用。</summary>
      <param name="reader" vsli:raw="&lt;see langword=&quot;XmlReader&quot; /&gt;">
        <see langword="XmlReader" />
      </param>
    </member>
    <member name="M:System.Data.SqlTypes.SqlString.System#Xml#Serialization#IXmlSerializable#WriteXml(System.Xml.XmlWriter)">
      <summary vsli:raw="This member supports the .NET Framework infrastructure and is not intended to be used directly from your code.">此成员支持 .NET Framework 结构，不能在代码中直接使用。</summary>
      <param name="writer" vsli:raw="&lt;see langword=&quot;XmlWriter&quot; /&gt;">
        <see langword="XmlWriter" />
      </param>
    </member>
    <member name="M:System.Data.SqlTypes.SqlString.ToSqlBoolean">
      <summary vsli:raw="Converts this &lt;see cref=&quot;T:System.Data.SqlTypes.SqlString&quot; /&gt; structure to &lt;see cref=&quot;T:System.Data.SqlTypes.SqlBoolean&quot; /&gt;.">将此 <see cref="T:System.Data.SqlTypes.SqlString" /> 结构转换为 <see cref="T:System.Data.SqlTypes.SqlBoolean" />。</summary>
      <returns vsli:raw="&lt;see langword=&quot;true&quot; /&gt; if the &lt;see cref=&quot;P:System.Data.SqlTypes.SqlString.Value&quot; /&gt; is non-zero; &lt;see langword=&quot;false&quot; /&gt; if zero; otherwise Null.">如果 <see cref="P:System.Data.SqlTypes.SqlString.Value" /> 不是零，则为 <see langword="true" />；如果为零，则为 <see langword="false" />；否则为 Null。</returns>
    </member>
    <member name="M:System.Data.SqlTypes.SqlString.ToSqlByte">
      <summary vsli:raw="Converts this &lt;see cref=&quot;T:System.Data.SqlTypes.SqlString&quot; /&gt; structure to &lt;see cref=&quot;T:System.Data.SqlTypes.SqlByte&quot; /&gt;.">将此 <see cref="T:System.Data.SqlTypes.SqlString" /> 结构转换为 <see cref="T:System.Data.SqlTypes.SqlByte" />。</summary>
      <returns vsli:raw="A new &lt;see langword=&quot;SqlByte&quot; /&gt; structure whose &lt;see cref=&quot;P:System.Data.SqlTypes.SqlByte.Value&quot; /&gt; equals the number represented by this &lt;see cref=&quot;T:System.Data.SqlTypes.SqlString&quot; /&gt; structure.">一个新的 <see langword="SqlByte" /> 结构，它的 <see cref="P:System.Data.SqlTypes.SqlByte.Value" /> 等于此 <see cref="T:System.Data.SqlTypes.SqlString" /> 结构所表示的数字。</returns>
    </member>
    <member name="M:System.Data.SqlTypes.SqlString.ToSqlDateTime">
      <summary vsli:raw="Converts this &lt;see cref=&quot;T:System.Data.SqlTypes.SqlString&quot; /&gt; structure to &lt;see cref=&quot;T:System.Data.SqlTypes.SqlDateTime&quot; /&gt;.">将此 <see cref="T:System.Data.SqlTypes.SqlString" /> 结构转换为 <see cref="T:System.Data.SqlTypes.SqlDateTime" />。</summary>
      <returns vsli:raw="A new &lt;see langword=&quot;SqlDateTime&quot; /&gt; structure that contains the date value represented by this &lt;see cref=&quot;T:System.Data.SqlTypes.SqlString&quot; /&gt;.">一个新的 <see langword="SqlDateTime" /> 结构，其中包含此 <see cref="T:System.Data.SqlTypes.SqlString" /> 所表示的日期值。</returns>
    </member>
    <member name="M:System.Data.SqlTypes.SqlString.ToSqlDecimal">
      <summary vsli:raw="Converts this &lt;see cref=&quot;T:System.Data.SqlTypes.SqlString&quot; /&gt; structure to &lt;see cref=&quot;T:System.Data.SqlTypes.SqlDecimal&quot; /&gt;.">将此 <see cref="T:System.Data.SqlTypes.SqlString" /> 结构转换为 <see cref="T:System.Data.SqlTypes.SqlDecimal" />。</summary>
      <returns vsli:raw="A new &lt;see cref=&quot;T:System.Data.SqlTypes.SqlDecimal&quot; /&gt; that contains the value of this &lt;see cref=&quot;T:System.Data.SqlTypes.SqlString&quot; /&gt;.">一个新的 <see cref="T:System.Data.SqlTypes.SqlDecimal" />，其中包含此 <see cref="T:System.Data.SqlTypes.SqlString" /> 的值。</returns>
    </member>
    <member name="M:System.Data.SqlTypes.SqlString.ToSqlDouble">
      <summary vsli:raw="Converts this &lt;see cref=&quot;T:System.Data.SqlTypes.SqlString&quot; /&gt; structure to &lt;see cref=&quot;T:System.Data.SqlTypes.SqlDouble&quot; /&gt;.">将此 <see cref="T:System.Data.SqlTypes.SqlString" /> 结构转换为 <see cref="T:System.Data.SqlTypes.SqlDouble" />。</summary>
      <returns vsli:raw="A new &lt;see cref=&quot;T:System.Data.SqlTypes.SqlDouble&quot; /&gt; that is equal to the numeric value of this &lt;see cref=&quot;T:System.Data.SqlTypes.SqlString&quot; /&gt;.">一个新的 <see cref="T:System.Data.SqlTypes.SqlDouble" />，它等于此 <see cref="T:System.Data.SqlTypes.SqlString" /> 的数值。</returns>
    </member>
    <member name="M:System.Data.SqlTypes.SqlString.ToSqlGuid">
      <summary vsli:raw="Converts this &lt;see cref=&quot;T:System.Data.SqlTypes.SqlString&quot; /&gt; structure to &lt;see cref=&quot;T:System.Data.SqlTypes.SqlGuid&quot; /&gt;.">将此 <see cref="T:System.Data.SqlTypes.SqlString" /> 结构转换为 <see cref="T:System.Data.SqlTypes.SqlGuid" />。</summary>
      <returns vsli:raw="A new &lt;see cref=&quot;T:System.Data.SqlTypes.SqlGuid&quot; /&gt; structure whose &lt;see cref=&quot;P:System.Data.SqlTypes.SqlGuid.Value&quot; /&gt; is the &lt;see langword=&quot;Guid&quot; /&gt; represented by this &lt;see cref=&quot;T:System.Data.SqlTypes.SqlString&quot; /&gt; structure.">一个新的 <see cref="T:System.Data.SqlTypes.SqlGuid" /> 结构，其 <see cref="P:System.Data.SqlTypes.SqlGuid.Value" /> 是此 <see cref="T:System.Data.SqlTypes.SqlString" /> 结构所表示的 <see langword="Guid" />。</returns>
    </member>
    <member name="M:System.Data.SqlTypes.SqlString.ToSqlInt16">
      <summary vsli:raw="Converts this &lt;see cref=&quot;T:System.Data.SqlTypes.SqlString&quot; /&gt; structure to &lt;see cref=&quot;T:System.Data.SqlTypes.SqlInt16&quot; /&gt;.">将此 <see cref="T:System.Data.SqlTypes.SqlString" /> 结构转换为 <see cref="T:System.Data.SqlTypes.SqlInt16" />。</summary>
      <returns vsli:raw="A new &lt;see cref=&quot;T:System.Data.SqlTypes.SqlInt16&quot; /&gt; that is equal to the numeric value of this &lt;see cref=&quot;T:System.Data.SqlTypes.SqlString&quot; /&gt;.">一个新的 <see cref="T:System.Data.SqlTypes.SqlInt16" />，它等于此 <see cref="T:System.Data.SqlTypes.SqlString" /> 的数值。</returns>
    </member>
    <member name="M:System.Data.SqlTypes.SqlString.ToSqlInt32">
      <summary vsli:raw="Converts this &lt;see cref=&quot;T:System.Data.SqlTypes.SqlString&quot; /&gt; structure to &lt;see cref=&quot;T:System.Data.SqlTypes.SqlInt32&quot; /&gt;.">将此 <see cref="T:System.Data.SqlTypes.SqlString" /> 结构转换为 <see cref="T:System.Data.SqlTypes.SqlInt32" />。</summary>
      <returns vsli:raw="A new &lt;see cref=&quot;T:System.Data.SqlTypes.SqlInt32&quot; /&gt; that is equal to the numeric value of this &lt;see cref=&quot;T:System.Data.SqlTypes.SqlString&quot; /&gt;.">一个新的 <see cref="T:System.Data.SqlTypes.SqlInt32" />，它等于此 <see cref="T:System.Data.SqlTypes.SqlString" /> 的数值。</returns>
    </member>
    <member name="M:System.Data.SqlTypes.SqlString.ToSqlInt64">
      <summary vsli:raw="Converts this &lt;see cref=&quot;T:System.Data.SqlTypes.SqlString&quot; /&gt; structure to &lt;see cref=&quot;T:System.Data.SqlTypes.SqlInt64&quot; /&gt;.">将此 <see cref="T:System.Data.SqlTypes.SqlString" /> 结构转换为 <see cref="T:System.Data.SqlTypes.SqlInt64" />。</summary>
      <returns vsli:raw="A new &lt;see cref=&quot;T:System.Data.SqlTypes.SqlInt64&quot; /&gt; that is equal to the numeric value of this &lt;see cref=&quot;T:System.Data.SqlTypes.SqlString&quot; /&gt;.">一个新的 <see cref="T:System.Data.SqlTypes.SqlInt64" />，它等于此 <see cref="T:System.Data.SqlTypes.SqlString" /> 的数值。</returns>
    </member>
    <member name="M:System.Data.SqlTypes.SqlString.ToSqlMoney">
      <summary vsli:raw="Converts this &lt;see cref=&quot;T:System.Data.SqlTypes.SqlString&quot; /&gt; structure to &lt;see cref=&quot;T:System.Data.SqlTypes.SqlMoney&quot; /&gt;.">将此 <see cref="T:System.Data.SqlTypes.SqlString" /> 结构转换为 <see cref="T:System.Data.SqlTypes.SqlMoney" />。</summary>
      <returns vsli:raw="A new &lt;see cref=&quot;T:System.Data.SqlTypes.SqlMoney&quot; /&gt; that is equal to the numeric value of this &lt;see cref=&quot;T:System.Data.SqlTypes.SqlString&quot; /&gt;.">一个新的 <see cref="T:System.Data.SqlTypes.SqlMoney" />，它等于此 <see cref="T:System.Data.SqlTypes.SqlString" /> 的数值。</returns>
    </member>
    <member name="M:System.Data.SqlTypes.SqlString.ToSqlSingle">
      <summary vsli:raw="Converts this &lt;see cref=&quot;T:System.Data.SqlTypes.SqlString&quot; /&gt; structure to &lt;see cref=&quot;T:System.Data.SqlTypes.SqlSingle&quot; /&gt;.">将此 <see cref="T:System.Data.SqlTypes.SqlString" /> 结构转换为 <see cref="T:System.Data.SqlTypes.SqlSingle" />。</summary>
      <returns vsli:raw="A new &lt;see cref=&quot;T:System.Data.SqlTypes.SqlSingle&quot; /&gt; that is equal to the numeric value of this &lt;see cref=&quot;T:System.Data.SqlTypes.SqlString&quot; /&gt;.">一个新的 <see cref="T:System.Data.SqlTypes.SqlSingle" />，它等于此 <see cref="T:System.Data.SqlTypes.SqlString" /> 的数值。</returns>
    </member>
    <member name="M:System.Data.SqlTypes.SqlString.ToString">
      <summary vsli:raw="Converts a &lt;see cref=&quot;T:System.Data.SqlTypes.SqlString&quot; /&gt; object to a &lt;see cref=&quot;T:System.String&quot; /&gt;.">将 <see cref="T:System.Data.SqlTypes.SqlString" /> 对象转换为 <see cref="T:System.String" />。</summary>
      <returns vsli:raw="A &lt;see cref=&quot;T:System.String&quot; /&gt; with the same value as this &lt;see cref=&quot;T:System.Data.SqlTypes.SqlString&quot; /&gt; structure.">与此 <see cref="T:System.String" /> 结构具有相同值的 <see cref="T:System.Data.SqlTypes.SqlString" />。</returns>
    </member>
    <member name="P:System.Data.SqlTypes.SqlString.CompareInfo">
      <summary vsli:raw="Gets the &lt;see cref=&quot;T:System.Globalization.CompareInfo&quot; /&gt; object that defines how string comparisons should be performed for this &lt;see cref=&quot;T:System.Data.SqlTypes.SqlString&quot; /&gt; structure.">获取 <see cref="T:System.Globalization.CompareInfo" /> 对象，该对象定义如何对此 <see cref="T:System.Data.SqlTypes.SqlString" /> 结构执行字符串比较。</summary>
      <returns vsli:raw="A &lt;see langword=&quot;CompareInfo&quot; /&gt; object that defines string comparison for this &lt;see cref=&quot;T:System.Data.SqlTypes.SqlString&quot; /&gt; structure.">一个 <see langword="CompareInfo" /> 对象，该对象定义此 <see cref="T:System.Data.SqlTypes.SqlString" /> 结构的字符串比较。</returns>
    </member>
    <member name="P:System.Data.SqlTypes.SqlString.CultureInfo">
      <summary vsli:raw="Gets the &lt;see cref=&quot;T:System.Globalization.CultureInfo&quot; /&gt; structure that represents information about the culture of this &lt;see cref=&quot;T:System.Data.SqlTypes.SqlString&quot; /&gt; object.">获取 <see cref="T:System.Globalization.CultureInfo" /> 结构，它表示有关此 <see cref="T:System.Data.SqlTypes.SqlString" /> 对象的区域性信息。</summary>
      <returns vsli:raw="A &lt;see cref=&quot;T:System.Globalization.CultureInfo&quot; /&gt; structure that describes information about the culture of this SqlString structure including the names of the culture, the writing system, and the calendar used, and also access to culture-specific objects that provide methods for common operations, such as formatting dates and sorting strings.">一个 <see cref="T:System.Globalization.CultureInfo" /> 结构，描述有关此 SqlString 结构的区域性的信息，包括区域性的名称、书写体系和使用的日历，还包括对特定于区域性对象的访问，这些对象提供常规运算的方法，例如格式化日期和排序字符串。</returns>
    </member>
    <member name="P:System.Data.SqlTypes.SqlString.IsNull">
      <summary vsli:raw="Indicates whether this &lt;see cref=&quot;T:System.Data.SqlTypes.SqlString&quot; /&gt; structure is null.">指示此 <see cref="T:System.Data.SqlTypes.SqlString" /> 结构是否为 null。</summary>
      <returns vsli:raw="&lt;see langword=&quot;true&quot; /&gt; if &lt;see cref=&quot;P:System.Data.SqlTypes.SqlString.Value&quot; /&gt; is &lt;see cref=&quot;F:System.Data.SqlTypes.SqlString.Null&quot; /&gt;. Otherwise, &lt;see langword=&quot;false&quot; /&gt;.">如果 <see cref="P:System.Data.SqlTypes.SqlString.Value" /> 为 <see cref="F:System.Data.SqlTypes.SqlString.Null" />，则返回 <see langword="true" />。 否则为 <see langword="false" />。</returns>
    </member>
    <member name="P:System.Data.SqlTypes.SqlString.LCID">
      <summary vsli:raw="Specifies the geographical locale and language for the &lt;see cref=&quot;T:System.Data.SqlTypes.SqlString&quot; /&gt; structure.">指定 <see cref="T:System.Data.SqlTypes.SqlString" /> 结构的地理区域设置和语言。</summary>
      <returns vsli:raw="The locale id for the string stored in the &lt;see cref=&quot;P:System.Data.SqlTypes.SqlString.Value&quot; /&gt; property.">存储在 <see cref="P:System.Data.SqlTypes.SqlString.Value" /> 属性中的字符串的区域设置 ID。</returns>
    </member>
    <member name="P:System.Data.SqlTypes.SqlString.SqlCompareOptions">
      <summary vsli:raw="A combination of one or more of the &lt;see cref=&quot;T:System.Data.SqlTypes.SqlCompareOptions&quot; /&gt; enumeration values that represent the way in which this &lt;see cref=&quot;T:System.Data.SqlTypes.SqlString&quot; /&gt; should be compared to other &lt;see cref=&quot;T:System.Data.SqlTypes.SqlString&quot; /&gt; structures.">一个或多个 <see cref="T:System.Data.SqlTypes.SqlCompareOptions" /> 枚举值的组合，它们表示此 <see cref="T:System.Data.SqlTypes.SqlString" /> 与其他 <see cref="T:System.Data.SqlTypes.SqlString" /> 结构的比较方式。</summary>
      <returns vsli:raw="A value specifying how this &lt;see cref=&quot;T:System.Data.SqlTypes.SqlString&quot; /&gt; should be compared to other &lt;see cref=&quot;T:System.Data.SqlTypes.SqlString&quot; /&gt; structures.">一个值，它指定如何将此 <see cref="T:System.Data.SqlTypes.SqlString" /> 与其他 <see cref="T:System.Data.SqlTypes.SqlString" /> 结构进行比较。</returns>
    </member>
    <member name="P:System.Data.SqlTypes.SqlString.Value">
      <summary vsli:raw="Gets the string that is stored in this &lt;see cref=&quot;T:System.Data.SqlTypes.SqlString&quot; /&gt; structure. This property is read-only.">获取存储在此 <see cref="T:System.Data.SqlTypes.SqlString" /> 结构中的字符串。 此属性为只读。</summary>
      <exception cref="T:System.Data.SqlTypes.SqlNullValueException" vsli:raw="The value of the string is &lt;see cref=&quot;F:System.Data.SqlTypes.SqlString.Null&quot; /&gt;.">字符串的值是 <see cref="F:System.Data.SqlTypes.SqlString.Null" />。</exception>
      <returns vsli:raw="The string that is stored.">存储的字符串。</returns>
    </member>
    <member name="T:System.Data.SqlTypes.SqlTruncateException">
      <summary vsli:raw="The exception that is thrown when you set a value into a &lt;see cref=&quot;N:System.Data.SqlTypes&quot; /&gt; structure would truncate that value.">在将值设置到 <see cref="N:System.Data.SqlTypes" /> 结构中会截断该值时引发的异常。</summary>
    </member>
    <member name="M:System.Data.SqlTypes.SqlTruncateException.#ctor">
      <summary vsli:raw="Initializes a new instance of the &lt;see cref=&quot;T:System.Data.SqlTypes.SqlTruncateException&quot; /&gt; class.">初始化 <see cref="T:System.Data.SqlTypes.SqlTruncateException" /> 类的新实例。</summary>
    </member>
    <member name="M:System.Data.SqlTypes.SqlTruncateException.#ctor(System.String)">
      <summary vsli:raw="Initializes a new instance of the &lt;see cref=&quot;T:System.Data.SqlTypes.SqlTruncateException&quot; /&gt; class with a specified error message.">用指定的错误消息初始化 <see cref="T:System.Data.SqlTypes.SqlTruncateException" /> 类的新实例。</summary>
      <param name="message" vsli:raw="The error message that explains the reason for the exception.">解释异常原因的错误消息。</param>
    </member>
    <member name="M:System.Data.SqlTypes.SqlTruncateException.#ctor(System.String,System.Exception)">
      <summary vsli:raw="Initializes a new instance of the &lt;see cref=&quot;T:System.Data.SqlTypes.SqlTruncateException&quot; /&gt; class with a specified error message and a reference to the &lt;see cref=&quot;T:System.Exception&quot; /&gt;.">使用指定的错误消息和对 <see cref="T:System.Data.SqlTypes.SqlTruncateException" /> 的引用来初始化 <see cref="T:System.Exception" /> 类的新实例。</summary>
      <param name="message" vsli:raw="The error message that explains the reason for the exception.">解释异常原因的错误消息。</param>
      <param name="e" vsli:raw="A reference to an inner &lt;see cref=&quot;T:System.Exception&quot; /&gt;.">对内部 <see cref="T:System.Exception" /> 的引用。</param>
    </member>
    <member name="T:System.Data.SqlTypes.SqlTypeException">
      <summary vsli:raw="The base exception class for the &lt;see cref=&quot;N:System.Data.SqlTypes&quot; /&gt;.">
        <see cref="N:System.Data.SqlTypes" /> 的基异常类。</summary>
    </member>
    <member name="M:System.Data.SqlTypes.SqlTypeException.#ctor">
      <summary vsli:raw="Initializes a new instance of the &lt;see cref=&quot;T:System.Data.SqlTypes.SqlTypeException&quot; /&gt; class.">初始化 <see cref="T:System.Data.SqlTypes.SqlTypeException" /> 类的新实例。</summary>
    </member>
    <member name="M:System.Data.SqlTypes.SqlTypeException.#ctor(System.Runtime.Serialization.SerializationInfo,System.Runtime.Serialization.StreamingContext)">
      <summary vsli:raw="Initializes a new instance of the &lt;see cref=&quot;T:System.Data.SqlTypes.SqlTypeException&quot; /&gt; class with serialized data.">用序列化数据初始化 <see cref="T:System.Data.SqlTypes.SqlTypeException" /> 类的新实例。</summary>
      <param name="si" vsli:raw="The object that holds the serialized object data.">承载序列化对象数据的对象。</param>
      <param name="sc" vsli:raw="The contextual information about the source or destination.">关于来源和目标的上下文信息</param>
    </member>
    <member name="M:System.Data.SqlTypes.SqlTypeException.#ctor(System.String)">
      <summary vsli:raw="Initializes a new instance of the &lt;see cref=&quot;T:System.Data.SqlTypes.SqlTypeException&quot; /&gt; class with a specified error message.">用指定的错误消息初始化 <see cref="T:System.Data.SqlTypes.SqlTypeException" /> 类的新实例。</summary>
      <param name="message" vsli:raw="The error message that explains the reason for the exception.">解释异常原因的错误消息。</param>
    </member>
    <member name="M:System.Data.SqlTypes.SqlTypeException.#ctor(System.String,System.Exception)">
      <summary vsli:raw="Initializes a new instance of the &lt;see cref=&quot;T:System.Data.SqlTypes.SqlTypeException&quot; /&gt; class with a specified error message and a reference to the inner exception that is the cause of this exception.">使用指定的错误消息和对作为此异常原因的内部异常的引用来初始化 <see cref="T:System.Data.SqlTypes.SqlTypeException" /> 类的新实例。</summary>
      <param name="message" vsli:raw="The message that describes the exception. The caller of this constructor is required to ensure that this string has been localized for the current system culture.">描述该异常的消息。 此构造函数的调用方需要确保此字符串已针对当前系统区域性进行了本地化。</param>
      <param name="e" vsli:raw="The exception that is the cause of the current exception. If the &lt;c&gt;innerException&lt;/c&gt; parameter is not &lt;see langword=&quot;null&quot; /&gt;, the current exception is raised in a &lt;see langword=&quot;catch&quot; /&gt; block that handles the inner exception.">导致当前异常的异常。 如果 <c>innerException</c> 参数不为 <see langword="null" />，则当前异常会在处理内部异常的 <see langword="catch" /> 块中引发。</param>
    </member>
    <member name="T:System.Data.SqlTypes.SqlXml">
      <summary vsli:raw="Represents XML data stored in or retrieved from a server.">表示存储在服务器中的或从服务器中检索的 XML 数据。</summary>
    </member>
    <member name="M:System.Data.SqlTypes.SqlXml.#ctor">
      <summary vsli:raw="Creates a new &lt;see cref=&quot;T:System.Data.SqlTypes.SqlXml&quot; /&gt; instance.">创建一个新的 <see cref="T:System.Data.SqlTypes.SqlXml" /> 实例。</summary>
    </member>
    <member name="M:System.Data.SqlTypes.SqlXml.#ctor(System.IO.Stream)">
      <summary vsli:raw="Creates a new &lt;see cref=&quot;T:System.Data.SqlTypes.SqlXml&quot; /&gt; instance, supplying the XML value from the supplied &lt;see cref=&quot;T:System.IO.Stream&quot; /&gt;-derived instance.">创建一个新的 <see cref="T:System.Data.SqlTypes.SqlXml" /> 实例，以提供来自所提供的 <see cref="T:System.IO.Stream" /> 派生实例中的 XML 值。</summary>
      <param name="value" vsli:raw="A &lt;see cref=&quot;T:System.IO.Stream&quot; /&gt;-derived instance (such as &lt;see cref=&quot;T:System.IO.FileStream&quot; /&gt;) from which to load the &lt;see cref=&quot;T:System.Data.SqlTypes.SqlXml&quot; /&gt; instance's Xml content.">一个 <see cref="T:System.IO.Stream" /> 派生实例（如 <see cref="T:System.IO.FileStream" />），要从该实例加载 <see cref="T:System.Data.SqlTypes.SqlXml" /> 实例的 XML 内容。</param>
    </member>
    <member name="M:System.Data.SqlTypes.SqlXml.#ctor(System.Xml.XmlReader)">
      <summary vsli:raw="Creates a new &lt;see cref=&quot;T:System.Data.SqlTypes.SqlXml&quot; /&gt; instance and associates it with the content of the supplied &lt;see cref=&quot;T:System.Xml.XmlReader&quot; /&gt;.">创建一个新的 <see cref="T:System.Data.SqlTypes.SqlXml" /> 实例，并将其与提供的 <see cref="T:System.Xml.XmlReader" /> 的内容关联起来。</summary>
      <param name="value" vsli:raw="An &lt;see cref=&quot;T:System.Xml.XmlReader&quot; /&gt;-derived class instance to be used as the value of the new &lt;see cref=&quot;T:System.Data.SqlTypes.SqlXml&quot; /&gt; instance.">一个要用作新 <see cref="T:System.Xml.XmlReader" /> 实例的值的 <see cref="T:System.Data.SqlTypes.SqlXml" /> 派生类实例。</param>
    </member>
    <member name="M:System.Data.SqlTypes.SqlXml.CreateReader">
      <summary vsli:raw="Gets the value of the XML content of this &lt;see cref=&quot;T:System.Data.SqlTypes.SqlXml&quot; /&gt; as a &lt;see cref=&quot;T:System.Xml.XmlReader&quot; /&gt;.">作为 <see cref="T:System.Data.SqlTypes.SqlXml" /> 来获取此 <see cref="T:System.Xml.XmlReader" /> 的 XML 内容的值。</summary>
      <exception cref="T:System.Data.SqlTypes.SqlNullValueException" vsli:raw="Attempt was made to access this property on a null instance of &lt;see cref=&quot;T:System.Data.SqlTypes.SqlXml&quot; /&gt;.">曾尝试访问 <see cref="T:System.Data.SqlTypes.SqlXml" /> 的 null 实例上的此属性。</exception>
      <returns vsli:raw="A &lt;see cref=&quot;T:System.Xml.XmlReader&quot; /&gt;-derived instance that contains the XML content. The actual type may vary (for example, the return value might be &lt;see cref=&quot;T:System.Xml.XmlTextReader&quot; /&gt;) depending on how the information is represented internally, on the server.">一个包含 XML 内容的 <see cref="T:System.Xml.XmlReader" /> 派生实例。 根据信息的内部表示方式，服务器上的实际类型会有所不同（例如，返回值可能为 <see cref="T:System.Xml.XmlTextReader" />）。</returns>
    </member>
    <member name="M:System.Data.SqlTypes.SqlXml.GetXsdType(System.Xml.Schema.XmlSchemaSet)">
      <summary vsli:raw="Returns the XML Schema definition language (XSD) of the specified &lt;see cref=&quot;T:System.Xml.Schema.XmlSchemaSet&quot; /&gt;.">返回指定的 <see cref="T:System.Xml.Schema.XmlSchemaSet" /> 的 XML 架构定义语言 (XSD)。</summary>
      <param name="schemaSet" vsli:raw="An &lt;see cref=&quot;T:System.Xml.Schema.XmlSchemaSet&quot; /&gt;.">
        <see cref="T:System.Xml.Schema.XmlSchemaSet" />。</param>
      <returns vsli:raw="A string that indicates the XSD of the specified &lt;see cref=&quot;T:System.Xml.Schema.XmlSchemaSet&quot; /&gt;.">一个指示指定的 <see cref="T:System.Xml.Schema.XmlSchemaSet" /> 的 XSD 的字符串。</returns>
    </member>
    <member name="M:System.Data.SqlTypes.SqlXml.System#Xml#Serialization#IXmlSerializable#GetSchema">
      <summary vsli:raw="For a description of this member, see &lt;see cref=&quot;M:System.Xml.Serialization.IXmlSerializable.GetSchema&quot; /&gt;.">有关此成员的说明，请参见 <see cref="M:System.Xml.Serialization.IXmlSerializable.GetSchema" />。</summary>
      <returns vsli:raw="An &lt;see cref=&quot;T:System.Xml.Schema.XmlSchema&quot; /&gt; that describes the XML representation of the object that is produced by the &lt;see cref=&quot;M:System.Xml.Serialization.IXmlSerializable.WriteXml(System.Xml.XmlWriter)&quot; /&gt; method and consumed by the &lt;see cref=&quot;M:System.Xml.Serialization.IXmlSerializable.ReadXml(System.Xml.XmlReader)&quot; /&gt; method.">由 <see cref="T:System.Xml.Schema.XmlSchema" /> 方法生成并由 <see cref="M:System.Xml.Serialization.IXmlSerializable.WriteXml(System.Xml.XmlWriter)" /> 方法使用的对象的 XML 表示形式的 <see cref="M:System.Xml.Serialization.IXmlSerializable.ReadXml(System.Xml.XmlReader)" />。</returns>
    </member>
    <member name="M:System.Data.SqlTypes.SqlXml.System#Xml#Serialization#IXmlSerializable#ReadXml(System.Xml.XmlReader)">
      <summary vsli:raw="For a description of this member, see &lt;see cref=&quot;M:System.Xml.Serialization.IXmlSerializable.ReadXml(System.Xml.XmlReader)&quot; /&gt;.">有关此成员的说明，请参见 <see cref="M:System.Xml.Serialization.IXmlSerializable.ReadXml(System.Xml.XmlReader)" />。</summary>
      <param name="r" vsli:raw="An XmlReader.">XmlReader。</param>
    </member>
    <member name="M:System.Data.SqlTypes.SqlXml.System#Xml#Serialization#IXmlSerializable#WriteXml(System.Xml.XmlWriter)">
      <summary vsli:raw="For a description of this member, see &lt;see cref=&quot;M:System.Xml.Serialization.IXmlSerializable.WriteXml(System.Xml.XmlWriter)&quot; /&gt;.">有关此成员的说明，请参见 <see cref="M:System.Xml.Serialization.IXmlSerializable.WriteXml(System.Xml.XmlWriter)" />。</summary>
      <param name="writer" vsli:raw="The &lt;see cref=&quot;T:System.Xml.XmlWriter&quot; /&gt; stream to which the object is serialized.">一个 XmlWriter</param>
    </member>
    <member name="P:System.Data.SqlTypes.SqlXml.IsNull">
      <summary vsli:raw="Indicates whether this instance represents a null &lt;see cref=&quot;T:System.Data.SqlTypes.SqlXml&quot; /&gt; value.">指示此实例是否表示一个 null <see cref="T:System.Data.SqlTypes.SqlXml" /> 值。</summary>
      <returns vsli:raw="&lt;see langword=&quot;true&quot; /&gt; if &lt;see langword=&quot;Value&quot; /&gt; is null. Otherwise, &lt;see langword=&quot;false&quot; /&gt;.">如果 <see langword="true" /> 为 null，则为 <see langword="Value" />。 否则为 <see langword="false" />。</returns>
    </member>
    <member name="P:System.Data.SqlTypes.SqlXml.Null">
      <summary vsli:raw="Represents a null instance of the &lt;see cref=&quot;T:System.Data.SqlTypes.SqlXml&quot; /&gt; type.">表示 <see cref="T:System.Data.SqlTypes.SqlXml" /> 类型的 null 实例。</summary>
      <returns vsli:raw="A null instance of the &lt;see cref=&quot;T:System.Data.SqlTypes.SqlXml&quot; /&gt; type.">一个 <see cref="T:System.Data.SqlTypes.SqlXml" /> 类型的 null 实例。</returns>
    </member>
    <member name="P:System.Data.SqlTypes.SqlXml.Value">
      <summary vsli:raw="Gets the string representation of the XML content of this &lt;see cref=&quot;T:System.Data.SqlTypes.SqlXml&quot; /&gt; instance.">获取此 <see cref="T:System.Data.SqlTypes.SqlXml" /> 实例的 XML 内容的字符串表示形式。</summary>
      <returns vsli:raw="The string representation of the XML content.">XML 内容的字符串表示形式。</returns>
    </member>
    <member name="T:System.Data.SqlTypes.StorageState">
      <summary vsli:raw="The &lt;see cref=&quot;T:System.Data.SqlTypes.StorageState&quot; /&gt; enumeration is not intended for use as a stand-alone component, but as an enumeration from which other classes derive standard functionality.">
        <see cref="T:System.Data.SqlTypes.StorageState" /> 枚举不用作独立组件，而是用作其他类从中派生标准功能的枚举。</summary>
    </member>
    <member name="F:System.Data.SqlTypes.StorageState.Buffer">
      <summary vsli:raw="Buffer size.">缓冲区大小。</summary>
    </member>
    <member name="F:System.Data.SqlTypes.StorageState.Stream">
      <summary vsli:raw="Stream.">流。</summary>
    </member>
    <member name="F:System.Data.SqlTypes.StorageState.UnmanagedBuffer">
      <summary vsli:raw="Unmanaged buffer.">非托管缓冲区。</summary>
    </member>
    <member name="T:System.Data.StateChangeEventArgs">
      <summary vsli:raw="Provides data for the state change event of a .NET data provider.">提供 .NET Framework 数据提供程序的状态更改事件数据。</summary>
    </member>
    <member name="M:System.Data.StateChangeEventArgs.#ctor(System.Data.ConnectionState,System.Data.ConnectionState)">
      <summary vsli:raw="Initializes a new instance of the &lt;see cref=&quot;T:System.Data.StateChangeEventArgs&quot; /&gt; class, when given the original state and the current state of the object.">在给定对象的原始状态和当前状态的情况下，初始化 <see cref="T:System.Data.StateChangeEventArgs" /> 类的新实例。</summary>
      <param name="originalState" vsli:raw="One of the &lt;see cref=&quot;T:System.Data.ConnectionState&quot; /&gt; values.">
        <see cref="T:System.Data.ConnectionState" /> 值之一。</param>
      <param name="currentState" vsli:raw="One of the &lt;see cref=&quot;T:System.Data.ConnectionState&quot; /&gt; values.">
        <see cref="T:System.Data.ConnectionState" /> 值之一。</param>
    </member>
    <member name="P:System.Data.StateChangeEventArgs.CurrentState">
      <summary vsli:raw="Gets the new state of the connection. The connection object will be in the new state already when the event is fired.">获取连接的新状态。 在激发该事件时，连接对象将处于新状态。</summary>
      <returns vsli:raw="One of the &lt;see cref=&quot;T:System.Data.ConnectionState&quot; /&gt; values.">
        <see cref="T:System.Data.ConnectionState" /> 值之一。</returns>
    </member>
    <member name="P:System.Data.StateChangeEventArgs.OriginalState">
      <summary vsli:raw="Gets the original state of the connection.">获取连接的原始状态。</summary>
      <returns vsli:raw="One of the &lt;see cref=&quot;T:System.Data.ConnectionState&quot; /&gt; values.">
        <see cref="T:System.Data.ConnectionState" /> 值之一。</returns>
    </member>
    <member name="T:System.Data.StateChangeEventHandler">
      <summary vsli:raw="Represents the method that will handle the &lt;see cref=&quot;E:System.Data.Common.DbConnection.StateChange&quot; /&gt; event.">表示用来处理 <see cref="E:System.Data.Common.DbConnection.StateChange" /> 事件的方法。</summary>
      <param name="sender" vsli:raw="The source of the event.">事件源。</param>
      <param name="e" vsli:raw="The &lt;see cref=&quot;T:System.Data.StateChangeEventArgs&quot; /&gt; that contains the event data.">包含事件数据的 <see cref="T:System.Data.StateChangeEventArgs" />。</param>
    </member>
    <member name="T:System.Data.StatementCompletedEventArgs">
      <summary vsli:raw="Provides additional information for the &lt;see cref=&quot;E:System.Data.SqlClient.SqlCommand.StatementCompleted&quot; /&gt; event.">为 <see cref="E:System.Data.SqlClient.SqlCommand.StatementCompleted" /> 事件提供附加信息。</summary>
    </member>
    <member name="M:System.Data.StatementCompletedEventArgs.#ctor(System.Int32)">
      <summary vsli:raw="Creates a new instance of the &lt;see cref=&quot;T:System.Data.StatementCompletedEventArgs&quot; /&gt; class.">创建 <see cref="T:System.Data.StatementCompletedEventArgs" /> 类的新实例。</summary>
      <param name="recordCount" vsli:raw="Indicates the number of rows affected by the statement that caused the &lt;see cref=&quot;E:System.Data.SqlClient.SqlCommand.StatementCompleted&quot; /&gt; event to occur.">指示受导致 <see cref="E:System.Data.SqlClient.SqlCommand.StatementCompleted" /> 事件发生的语句影响的行数。</param>
    </member>
    <member name="P:System.Data.StatementCompletedEventArgs.RecordCount">
      <summary vsli:raw="Indicates the number of rows affected by the statement that caused the &lt;see cref=&quot;E:System.Data.SqlClient.SqlCommand.StatementCompleted&quot; /&gt; event to occur.">指示受导致 <see cref="E:System.Data.SqlClient.SqlCommand.StatementCompleted" /> 事件发生的语句影响的行数。</summary>
      <returns vsli:raw="The number of rows affected.">受影响的行数。</returns>
    </member>
    <member name="T:System.Data.StatementCompletedEventHandler">
      <summary vsli:raw="The delegate type for the event handlers of the &lt;see cref=&quot;E:System.Data.SqlClient.SqlCommand.StatementCompleted&quot; /&gt; event.">
        <see cref="E:System.Data.SqlClient.SqlCommand.StatementCompleted" /> 事件的事件处理程序的委托类型。</summary>
      <param name="sender" vsli:raw="The source of the event.">事件源。</param>
      <param name="e" vsli:raw="The data for the event.">事件的数据。</param>
    </member>
    <member name="T:System.Data.StatementType">
      <summary vsli:raw="Specifies the type of SQL query to be used by the &lt;see cref=&quot;T:System.Data.OleDb.OleDbRowUpdatedEventArgs&quot; /&gt;, &lt;see cref=&quot;T:System.Data.OleDb.OleDbRowUpdatingEventArgs&quot; /&gt;, &lt;see cref=&quot;T:System.Data.SqlClient.SqlRowUpdatedEventArgs&quot; /&gt;, or &lt;see cref=&quot;T:System.Data.SqlClient.SqlRowUpdatingEventArgs&quot; /&gt; class.">指定由 <see cref="T:System.Data.OleDb.OleDbRowUpdatedEventArgs" />、<see cref="T:System.Data.OleDb.OleDbRowUpdatingEventArgs" />、<see cref="T:System.Data.SqlClient.SqlRowUpdatedEventArgs" /> 或 <see cref="T:System.Data.SqlClient.SqlRowUpdatingEventArgs" /> 类使用的 SQL 查询的类型。</summary>
    </member>
    <member name="F:System.Data.StatementType.Batch">
      <summary vsli:raw="A SQL query that is a batch statement.">SQL 查询，它是批处理语句。</summary>
    </member>
    <member name="F:System.Data.StatementType.Delete">
      <summary vsli:raw="An SQL query that is a DELETE statement.">SQL 查询，它是 DELETE 语句。</summary>
    </member>
    <member name="F:System.Data.StatementType.Insert">
      <summary vsli:raw="An SQL query that is an INSERT statement.">SQL 查询，它是 INSERT 语句。</summary>
    </member>
    <member name="F:System.Data.StatementType.Select">
      <summary vsli:raw="An SQL query that is a SELECT statement.">SQL 查询，它是 SELECT 语句。</summary>
    </member>
    <member name="F:System.Data.StatementType.Update">
      <summary vsli:raw="An SQL query that is an UPDATE statement.">SQL 查询，它是 UPDATE 语句。</summary>
    </member>
    <member name="T:System.Data.StrongTypingException">
      <summary vsli:raw="The exception that is thrown by a strongly typed &lt;see cref=&quot;T:System.Data.DataSet&quot; /&gt; when the user accesses a &lt;see langword=&quot;DBNull&quot; /&gt; value.">在用户访问 <see langword="DBNull" /> 值时，强类型 <see cref="T:System.Data.DataSet" /> 引发的异常。</summary>
    </member>
    <member name="M:System.Data.StrongTypingException.#ctor">
      <summary vsli:raw="Initializes a new instance of the &lt;see cref=&quot;T:System.Data.StrongTypingException&quot; /&gt; class.">初始化 <see cref="T:System.Data.StrongTypingException" /> 类的新实例。</summary>
    </member>
    <member name="M:System.Data.StrongTypingException.#ctor(System.Runtime.Serialization.SerializationInfo,System.Runtime.Serialization.StreamingContext)">
      <summary vsli:raw="Initializes a new instance of the &lt;see cref=&quot;T:System.Data.StrongTypingException&quot; /&gt; class using the specified serialization information and streaming context.">使用指定的序列化信息和流上下文初始化 <see cref="T:System.Data.StrongTypingException" /> 类的新实例。</summary>
      <param name="info" vsli:raw="A &lt;see cref=&quot;T:System.Runtime.Serialization.SerializationInfo&quot; /&gt; object.">
        <see cref="T:System.Runtime.Serialization.SerializationInfo" /> 对象。</param>
      <param name="context" vsli:raw="A &lt;see cref=&quot;T:System.Runtime.Serialization.StreamingContext&quot; /&gt; structure.">
        <see cref="T:System.Runtime.Serialization.StreamingContext" /> 结构。</param>
    </member>
    <member name="M:System.Data.StrongTypingException.#ctor(System.String)">
      <summary vsli:raw="Initializes a new instance of the &lt;see cref=&quot;T:System.Data.StrongTypingException&quot; /&gt; class with the specified string.">使用指定的字符串初始化 <see cref="T:System.Data.StrongTypingException" /> 类的新实例。</summary>
      <param name="message" vsli:raw="The string to display when the exception is thrown.">引发异常时显示的字符串。</param>
    </member>
    <member name="M:System.Data.StrongTypingException.#ctor(System.String,System.Exception)">
      <summary vsli:raw="Initializes a new instance of the &lt;see cref=&quot;T:System.Data.StrongTypingException&quot; /&gt; class with the specified string and inner exception.">使用指定的字符串和内部异常初始化 <see cref="T:System.Data.StrongTypingException" /> 类的新实例。</summary>
      <param name="s" vsli:raw="The string to display when the exception is thrown.">引发异常时显示的字符串。</param>
      <param name="innerException" vsli:raw="A reference to an inner exception.">对内部异常的引用。</param>
    </member>
    <member name="T:System.Data.SyntaxErrorException">
      <summary vsli:raw="Represents the exception that is thrown when the &lt;see cref=&quot;P:System.Data.DataColumn.Expression&quot; /&gt; property of a &lt;see cref=&quot;T:System.Data.DataColumn&quot; /&gt; contains a syntax error.">表示当 <see cref="T:System.Data.DataColumn" /> 的 <see cref="P:System.Data.DataColumn.Expression" /> 属性包含语法错误时引发的异常。</summary>
    </member>
    <member name="M:System.Data.SyntaxErrorException.#ctor">
      <summary vsli:raw="Initializes a new instance of the &lt;see cref=&quot;T:System.Data.SyntaxErrorException&quot; /&gt; class.">初始化 <see cref="T:System.Data.SyntaxErrorException" /> 类的新实例。</summary>
    </member>
    <member name="M:System.Data.SyntaxErrorException.#ctor(System.Runtime.Serialization.SerializationInfo,System.Runtime.Serialization.StreamingContext)">
      <summary vsli:raw="Initializes a new instance of the &lt;see cref=&quot;T:System.Data.SyntaxErrorException&quot; /&gt; class with the &lt;see cref=&quot;T:System.Runtime.Serialization.SerializationInfo&quot; /&gt; and the &lt;see cref=&quot;T:System.Runtime.Serialization.StreamingContext&quot; /&gt;.">使用 <see cref="T:System.Runtime.Serialization.SerializationInfo" /> 和 <see cref="T:System.Runtime.Serialization.StreamingContext" /> 初始化 <see cref="T:System.Data.SyntaxErrorException" /> 类的新实例。</summary>
      <param name="info" vsli:raw="The data needed to serialize or deserialize an object.">序列化或反序列化对象所需的数据。</param>
      <param name="context" vsli:raw="The source and destination of a specific serialized stream.">特定序列化流的源和目标。</param>
    </member>
    <member name="M:System.Data.SyntaxErrorException.#ctor(System.String)">
      <summary vsli:raw="Initializes a new instance of the &lt;see cref=&quot;T:System.Data.SyntaxErrorException&quot; /&gt; class with the specified string.">使用指定的字符串初始化 <see cref="T:System.Data.SyntaxErrorException" /> 类的新实例。</summary>
      <param name="s" vsli:raw="The string to display when the exception is thrown.">引发异常时显示的字符串。</param>
    </member>
    <member name="M:System.Data.SyntaxErrorException.#ctor(System.String,System.Exception)">
      <summary vsli:raw="Initializes a new instance of the &lt;see cref=&quot;T:System.Data.SyntaxErrorException&quot; /&gt; class with a specified error message and a reference to the inner exception that is the cause of this exception.">使用指定的错误消息和对作为此异常原因的内部异常的引用来初始化 <see cref="T:System.Data.SyntaxErrorException" /> 类的新实例。</summary>
      <param name="message" vsli:raw="The error message that explains the reason for the exception.">解释异常原因的错误消息。</param>
      <param name="innerException" vsli:raw="The exception that is the cause of the current exception, or a null reference (&lt;see langword=&quot;Nothing&quot; /&gt; in Visual Basic) if no inner exception is specified.">导致当前异常的异常；如果未指定内部异常，则是一个 null 引用（在 Visual Basic 中为 <see langword="Nothing" />）。</param>
    </member>
    <member name="T:System.Data.TypedTableBase`1">
      <summary vsli:raw="This type is used as a base class for typed-&lt;see cref=&quot;T:System.Data.DataTable&quot; /&gt; object generation by Visual Studio and the XSD.exe .NET Framework tool, and is not intended to be used directly from your code.">Visual Studio 和 XSD.exe .NET Framework 工具将此类型用作特型 <see cref="T:System.Data.DataTable" /> 对象生成的基类，并且不能直接从代码中使用此类型。</summary>
      <typeparam name="T" vsli:raw="The type of objects in the source sequence represented by the table, typically &lt;see cref=&quot;T:System.Data.DataRow&quot; /&gt;.">源序列中由表格表示的对象的类型（通常为 <see cref="T:System.Data.DataRow" />）。</typeparam>
    </member>
    <member name="M:System.Data.TypedTableBase`1.#ctor">
      <summary vsli:raw="Initializes a new &lt;see cref=&quot;T:System.Data.TypedTableBase`1&quot; /&gt;. This method supports typed-&lt;see cref=&quot;T:System.Data.DataTable&quot; /&gt; object generation by Visual Studio and the XSD.exe .NET Framework tool. This type is not intended to be used directly from your code.">初始化新的 <see cref="T:System.Data.TypedTableBase`1" />。 此方法支持通过 Visual Studio 和 XSD.exe .NET Framework 工具生成类型化 <see cref="T:System.Data.DataTable" /> 对象。 不应直接从代码中使用此类型。</summary>
    </member>
    <member name="M:System.Data.TypedTableBase`1.#ctor(System.Runtime.Serialization.SerializationInfo,System.Runtime.Serialization.StreamingContext)">
      <summary vsli:raw="Initializes a new &lt;see cref=&quot;T:System.Data.TypedTableBase`1&quot; /&gt;. This method supports typed-&lt;see cref=&quot;T:System.Data.DataTable&quot; /&gt; object generation by Visual Studio and the XSD.exe .NET Framework tool. This method is not intended to be used directly from your code.">初始化新的 <see cref="T:System.Data.TypedTableBase`1" />。 此方法支持通过 Visual Studio 和 XSD.exe .NET Framework 工具生成类型化 <see cref="T:System.Data.DataTable" /> 对象。 此方法不能直接在代码中使用。</summary>
      <param name="info" vsli:raw="A &lt;see cref=&quot;T:System.Runtime.Serialization.SerializationInfo&quot; /&gt; that contains data to construct the object.">
        <see cref="T:System.Runtime.Serialization.SerializationInfo" />，包含用于构造对象的数据。</param>
      <param name="context" vsli:raw="The streaming context for the object being deserialized.">要进行反序列化的对象的流式处理上下文。</param>
    </member>
    <member name="M:System.Data.TypedTableBase`1.Cast``1">
      <summary vsli:raw="Converts the elements of an &lt;see cref=&quot;T:System.Data.TypedTableBase`1&quot; /&gt; to the specified type. This method supports typed &lt;see cref=&quot;T:System.Data.DataTable&quot; /&gt; object generation by Visual Studio and the XSD.exe .NET Framework tool. This method is not intended to be used directly from your code.">将 <see cref="T:System.Data.TypedTableBase`1" /> 的元素转换为指定的类型。 此方法支持通过 Visual Studio 和 XSD.exe .NET Framework 工具生成类型化 <see cref="T:System.Data.DataTable" /> 对象。 此方法不能直接在代码中使用。</summary>
      <typeparam name="TResult" vsli:raw="The type to convert the elements to.">元素要转换为的类型。</typeparam>
      <returns vsli:raw="An &lt;see cref=&quot;T:System.Data.EnumerableRowCollection&quot; /&gt; that contains each element of the source sequence converted to the specified type.">一个 <see cref="T:System.Data.EnumerableRowCollection" />，其中包含已转换为指定类型的源序列的每个元素。</returns>
    </member>
    <member name="M:System.Data.TypedTableBase`1.GetEnumerator">
      <summary vsli:raw="Returns an enumerator for the typed-&lt;see cref=&quot;T:System.Data.DataRow&quot; /&gt;. This method supports typed-&lt;see cref=&quot;T:System.Data.DataTable&quot; /&gt; object generation by Visual Studio and the XSD.exe .NET Framework tool. This method is not intended to be used directly from your code.">返回类型化 <see cref="T:System.Data.DataRow" /> 的枚举数。 此方法支持通过 Visual Studio 和 XSD.exe .NET Framework 工具生成类型化 <see cref="T:System.Data.DataTable" /> 对象。 此方法不能直接在代码中使用。</summary>
      <returns vsli:raw="An object that implements the &lt;see cref=&quot;T:System.Collections.Generic.IEnumerator`1&quot; /&gt; interface.">一个实现 <see cref="T:System.Collections.Generic.IEnumerator`1" /> 接口的对象。</returns>
    </member>
    <member name="M:System.Data.TypedTableBase`1.System#Collections#IEnumerable#GetEnumerator">
      <summary vsli:raw="Returns an enumerator for the typed-&lt;see cref=&quot;T:System.Data.DataRow&quot; /&gt;. This method supports typed-&lt;see cref=&quot;T:System.Data.DataTable&quot; /&gt; object generation by Visual Studio and the XSD.exe .NET Framework tool. This method is not intended to be used directly from your code.">返回类型化 <see cref="T:System.Data.DataRow" /> 的枚举数。 此方法支持通过 Visual Studio 和 XSD.exe .NET Framework 工具生成类型化 <see cref="T:System.Data.DataTable" /> 对象。 此方法不能直接在代码中使用。</summary>
      <returns vsli:raw="An object that implements the &lt;see cref=&quot;T:System.Collections.Generic.IEnumerator`1&quot; /&gt; interface.">一个实现 <see cref="T:System.Collections.Generic.IEnumerator`1" /> 接口的对象。</returns>
    </member>
    <member name="T:System.Data.TypedTableBaseExtensions">
      <summary vsli:raw="Contains the extension methods for the &lt;see cref=&quot;T:System.Data.TypedTableBase`1&quot; /&gt; class.">包含 <see cref="T:System.Data.TypedTableBase`1" /> 类的扩展方法。</summary>
    </member>
    <member name="M:System.Data.TypedTableBaseExtensions.AsEnumerable``1(System.Data.TypedTableBase{``0})">
      <summary vsli:raw="Enumerates the data row elements of the &lt;see cref=&quot;T:System.Data.TypedTableBase`1&quot; /&gt; and returns an &lt;see cref=&quot;T:System.Data.EnumerableRowCollection`1&quot; /&gt; object, where the generic parameter &lt;paramref name=&quot;T&quot; /&gt; is &lt;see cref=&quot;T:System.Data.DataRow&quot; /&gt;. This object can be used in a LINQ expression or method query.">枚举 <see cref="T:System.Data.TypedTableBase`1" /> 的数据行元素并返回一个 <see cref="T:System.Data.EnumerableRowCollection`1" /> 对象，其中泛型参数 <paramref name="T" /> 为 <see cref="T:System.Data.DataRow" />。 此对象可用在 LINQ 表达式或方法查询中。</summary>
      <param name="source" vsli:raw="The source &lt;see cref=&quot;T:System.Data.TypedTableBase`1&quot; /&gt; to make enumerable.">可枚举的源 <see cref="T:System.Data.TypedTableBase`1" />。</param>
      <typeparam name="TRow" vsli:raw="The type to convert the elements of the source to.">源中的元素要转换成的类型。</typeparam>
      <returns vsli:raw="An &lt;see cref=&quot;T:System.Data.EnumerableRowCollection`1&quot; /&gt; object, where the generic parameter &lt;paramref name=&quot;T&quot; /&gt; is &lt;see cref=&quot;T:System.Data.DataRow&quot; /&gt;.">一个 <see cref="T:System.Data.EnumerableRowCollection`1" /> 对象，其泛型参数 <paramref name="T" /> 为 <see cref="T:System.Data.DataRow" />。</returns>
    </member>
    <member name="M:System.Data.TypedTableBaseExtensions.ElementAtOrDefault``1(System.Data.TypedTableBase{``0},System.Int32)">
      <summary vsli:raw="Returns the element at a specified row in a sequence or a default value if the row is out of range.">返回序列中指定行处的元素；如果行超出范围，则返回默认值。</summary>
      <param name="source" vsli:raw="An enumerable object to return an element from.">要从中返回元素的可枚举对象。</param>
      <param name="index" vsli:raw="The zero-based index of the element to retrieve.">要检索的从零开始的元素索引。</param>
      <typeparam name="TRow" vsli:raw="The type of the elements or the row.">数组或行的类型。</typeparam>
      <returns vsli:raw="The element at a specified row in a sequence.">序列中指定行处的元素。</returns>
    </member>
    <member name="M:System.Data.TypedTableBaseExtensions.OrderBy``2(System.Data.TypedTableBase{``0},System.Func{``0,``1})">
      <summary vsli:raw="Sorts the rows of a &lt;see cref=&quot;T:System.Data.TypedTableBase`1&quot; /&gt; in ascending order according to the specified key.">按指定键升序排序 <see cref="T:System.Data.TypedTableBase`1" /> 的行。</summary>
      <param name="source" vsli:raw="A &lt;see cref=&quot;T:System.Data.TypedTableBase`1&quot; /&gt; that contains the &lt;see cref=&quot;T:System.Data.DataRow&quot; /&gt; elements to be ordered.">一个 <see cref="T:System.Data.TypedTableBase`1" />，其中包含要排序的 <see cref="T:System.Data.DataRow" /> 元素。</param>
      <param name="keySelector" vsli:raw="A function to extract a key from an element.">用于从元素中提取键的函数。</param>
      <typeparam name="TRow" vsli:raw="The type of the row elements in &lt;paramref name=&quot;source&quot; /&gt;, typically &lt;see cref=&quot;T:System.Data.DataRow&quot; /&gt;.">
        <paramref name="source" /> 中行元素的类型，通常为 <see cref="T:System.Data.DataRow" />。</typeparam>
      <typeparam name="TKey" vsli:raw="The type of the key returned by &lt;paramref name=&quot;keySelector&quot; /&gt;.">
        <paramref name="keySelector" /> 返回的键的类型。</typeparam>
      <returns vsli:raw="An &lt;see cref=&quot;T:System.Data.OrderedEnumerableRowCollection`1&quot; /&gt; whose elements are sorted by the specified key.">一个 <see cref="T:System.Data.OrderedEnumerableRowCollection`1" />，其元素按指定键排序。</returns>
    </member>
    <member name="M:System.Data.TypedTableBaseExtensions.OrderBy``2(System.Data.TypedTableBase{``0},System.Func{``0,``1},System.Collections.Generic.IComparer{``1})">
      <summary vsli:raw="Sorts the rows of a &lt;see cref=&quot;T:System.Data.TypedTableBase`1&quot; /&gt; in ascending order according to the specified key and comparer.">按指定键和比较器升序排序 <see cref="T:System.Data.TypedTableBase`1" /> 的行。</summary>
      <param name="source" vsli:raw="A &lt;see cref=&quot;T:System.Data.TypedTableBase`1&quot; /&gt; that contains the &lt;see cref=&quot;T:System.Data.DataRow&quot; /&gt; elements to be ordered.">一个 <see cref="T:System.Data.TypedTableBase`1" />，其中包含要排序的 <see cref="T:System.Data.DataRow" /> 元素。</param>
      <param name="keySelector" vsli:raw="A function to extract a key from an element.">用于从元素中提取键的函数。</param>
      <param name="comparer" vsli:raw="An &lt;see cref=&quot;T:System.Collections.Generic.IComparer`1&quot; /&gt; to compare keys.">用于比较键的 <see cref="T:System.Collections.Generic.IComparer`1" />。</param>
      <typeparam name="TRow" vsli:raw="The type of the row elements in &lt;paramref name=&quot;source&quot; /&gt;, typically &lt;see cref=&quot;T:System.Data.DataRow&quot; /&gt;.">
        <paramref name="source" /> 中行元素的类型，通常为 <see cref="T:System.Data.DataRow" />。</typeparam>
      <typeparam name="TKey" vsli:raw="The type of the key returned by &lt;paramref name=&quot;keySelector&quot; /&gt;.">
        <paramref name="keySelector" /> 返回的键的类型。</typeparam>
      <returns vsli:raw="An &lt;see cref=&quot;T:System.Data.OrderedEnumerableRowCollection`1&quot; /&gt; whose elements are sorted by the specified key and comparer.">一个 <see cref="T:System.Data.OrderedEnumerableRowCollection`1" />，其元素按指定键和比较器排序。</returns>
    </member>
    <member name="M:System.Data.TypedTableBaseExtensions.OrderByDescending``2(System.Data.TypedTableBase{``0},System.Func{``0,``1})">
      <summary vsli:raw="Sorts the rows of a &lt;see cref=&quot;T:System.Data.TypedTableBase`1&quot; /&gt; in descending order according to the specified key.">按指定键降序排序 <see cref="T:System.Data.TypedTableBase`1" /> 的行。</summary>
      <param name="source" vsli:raw="A &lt;see cref=&quot;T:System.Data.TypedTableBase`1&quot; /&gt; that contains the &lt;see cref=&quot;T:System.Data.DataRow&quot; /&gt; elements to be ordered.">一个 <see cref="T:System.Data.TypedTableBase`1" />，其中包含要排序的 <see cref="T:System.Data.DataRow" /> 元素。</param>
      <param name="keySelector" vsli:raw="A function to extract a key from an element.">用于从元素中提取键的函数。</param>
      <typeparam name="TRow" vsli:raw="The type of the row elements in &lt;paramref name=&quot;source&quot; /&gt;, typically &lt;see cref=&quot;T:System.Data.DataRow&quot; /&gt;.">
        <paramref name="source" /> 中行元素的类型，通常为 <see cref="T:System.Data.DataRow" />。</typeparam>
      <typeparam name="TKey" vsli:raw="The type of the key returned by &lt;paramref name=&quot;keySelector&quot; /&gt;.">
        <paramref name="keySelector" /> 返回的键的类型。</typeparam>
      <returns vsli:raw="An &lt;see cref=&quot;T:System.Data.OrderedEnumerableRowCollection`1&quot; /&gt; whose elements are sorted by the specified key.">一个 <see cref="T:System.Data.OrderedEnumerableRowCollection`1" />，其元素按指定键排序。</returns>
    </member>
    <member name="M:System.Data.TypedTableBaseExtensions.OrderByDescending``2(System.Data.TypedTableBase{``0},System.Func{``0,``1},System.Collections.Generic.IComparer{``1})">
      <summary vsli:raw="Sorts the rows of a &lt;see cref=&quot;T:System.Data.TypedTableBase`1&quot; /&gt; in descending order according to the specified key and comparer.">按指定键和比较器降序排序 <see cref="T:System.Data.TypedTableBase`1" /> 的行。</summary>
      <param name="source" vsli:raw="A &lt;see cref=&quot;T:System.Data.TypedTableBase`1&quot; /&gt; that contains the &lt;see cref=&quot;T:System.Data.DataRow&quot; /&gt; elements to be ordered.">一个 <see cref="T:System.Data.TypedTableBase`1" />，其中包含要排序的 <see cref="T:System.Data.DataRow" /> 元素。</param>
      <param name="keySelector" vsli:raw="A function to extract a key from an element.">用于从元素中提取键的函数。</param>
      <param name="comparer" vsli:raw="An &lt;see cref=&quot;T:System.Collections.Generic.IComparer`1&quot; /&gt; to compare keys.">用于比较键的 <see cref="T:System.Collections.Generic.IComparer`1" />。</param>
      <typeparam name="TRow" vsli:raw="The type of the row elements in &lt;paramref name=&quot;source&quot; /&gt;, typically &lt;see cref=&quot;T:System.Data.DataRow&quot; /&gt;.">
        <paramref name="source" /> 中行元素的类型，通常为 <see cref="T:System.Data.DataRow" />。</typeparam>
      <typeparam name="TKey" vsli:raw="The type of the key returned by &lt;paramref name=&quot;keySelector&quot; /&gt;.">
        <paramref name="keySelector" /> 返回的键的类型。</typeparam>
      <returns vsli:raw="An &lt;see cref=&quot;T:System.Data.OrderedEnumerableRowCollection`1&quot; /&gt; whose elements are sorted by the specified key and comparer.">一个 <see cref="T:System.Data.OrderedEnumerableRowCollection`1" />，其元素按指定键和比较器排序。</returns>
    </member>
    <member name="M:System.Data.TypedTableBaseExtensions.Select``2(System.Data.TypedTableBase{``0},System.Func{``0,``1})">
      <summary vsli:raw="Projects each element of a &lt;see cref=&quot;T:System.Data.TypedTableBase`1&quot; /&gt; into a new form.">将 <see cref="T:System.Data.TypedTableBase`1" /> 中的每个元素投影到新窗体。</summary>
      <param name="source" vsli:raw="A &lt;see cref=&quot;T:System.Data.TypedTableBase`1&quot; /&gt; that contains the &lt;see cref=&quot;T:System.Data.DataRow&quot; /&gt; elements to invoke a transformation function upon.">一个 <see cref="T:System.Data.TypedTableBase`1" />，其中包含要对其调用转换函数的 <see cref="T:System.Data.DataRow" /> 元素。</param>
      <param name="selector" vsli:raw="A transformation function to apply to each element.">要应用于每个元素的转换函数。</param>
      <typeparam name="TRow" vsli:raw="The type of the row elements in &lt;paramref name=&quot;source&quot; /&gt;, &lt;see cref=&quot;T:System.Data.DataRow&quot; /&gt;.">
        <paramref name="source" /> 中行元素的类型 <see cref="T:System.Data.DataRow" />。</typeparam>
      <typeparam name="S" vsli:raw="" />
      <returns vsli:raw="An &lt;see cref=&quot;T:System.Data.EnumerableRowCollection`1&quot; /&gt; whose elements are the result of invoking the transformation function on each element of &lt;paramref name=&quot;source&quot; /&gt;.">一个 <see cref="T:System.Data.EnumerableRowCollection`1" />，其元素是对 <paramref name="source" /> 的每个元素调用转换函数的结果。</returns>
    </member>
    <member name="M:System.Data.TypedTableBaseExtensions.Where``1(System.Data.TypedTableBase{``0},System.Func{``0,System.Boolean})">
      <summary vsli:raw="Filters a sequence of rows based on the specified predicate.">按指定谓词筛选行序列。</summary>
      <param name="source" vsli:raw="A &lt;see cref=&quot;T:System.Data.TypedTableBase`1&quot; /&gt; that contains the &lt;see cref=&quot;T:System.Data.DataRow&quot; /&gt; elements to filter.">一个 <see cref="T:System.Data.TypedTableBase`1" />，其中包含要筛选的 <see cref="T:System.Data.DataRow" /> 元素。</param>
      <param name="predicate" vsli:raw="A function to test each element for a condition.">用于测试每个元素是否满足条件的函数。</param>
      <typeparam name="TRow" vsli:raw="The type of the row elements in &lt;paramref name=&quot;source&quot; /&gt;, &lt;see cref=&quot;T:System.Data.DataRow&quot; /&gt;.">
        <paramref name="source" /> 中行元素的类型 <see cref="T:System.Data.DataRow" />。</typeparam>
      <returns vsli:raw="An &lt;see cref=&quot;T:System.Data.OrderedEnumerableRowCollection`1&quot; /&gt; that contains rows from the input sequence that satisfy the condition.">一个 <see cref="T:System.Data.OrderedEnumerableRowCollection`1" />，其中包含输入序列中满足该条件的行。</returns>
    </member>
    <member name="T:System.Data.UniqueConstraint">
      <summary vsli:raw="Represents a restriction on a set of columns in which all values must be unique.">表示对一组列的限制，列中的所有值必须是唯一的。</summary>
    </member>
    <member name="M:System.Data.UniqueConstraint.#ctor(System.Data.DataColumn)">
      <summary vsli:raw="Initializes a new instance of the &lt;see cref=&quot;T:System.Data.UniqueConstraint&quot; /&gt; class with the specified &lt;see cref=&quot;T:System.Data.DataColumn&quot; /&gt;.">使用指定的 <see cref="T:System.Data.UniqueConstraint" /> 初始化 <see cref="T:System.Data.DataColumn" /> 类的新实例。</summary>
      <param name="column" vsli:raw="The &lt;see cref=&quot;T:System.Data.DataColumn&quot; /&gt; to constrain.">要约束的 <see cref="T:System.Data.DataColumn" />。</param>
    </member>
    <member name="M:System.Data.UniqueConstraint.#ctor(System.Data.DataColumn,System.Boolean)">
      <summary vsli:raw="Initializes a new instance of the &lt;see cref=&quot;T:System.Data.UniqueConstraint&quot; /&gt; class with the &lt;see cref=&quot;T:System.Data.DataColumn&quot; /&gt; to constrain, and a value specifying whether the constraint is a primary key.">用要约束的 <see cref="T:System.Data.UniqueConstraint" /> 和指定约束是否为主键的值，初始化 <see cref="T:System.Data.DataColumn" /> 类的新实例。</summary>
      <param name="column" vsli:raw="The &lt;see cref=&quot;T:System.Data.DataColumn&quot; /&gt; to constrain.">要约束的 <see cref="T:System.Data.DataColumn" />。</param>
      <param name="isPrimaryKey" vsli:raw="&lt;see langword=&quot;true&quot; /&gt; to indicate that the constraint is a primary key; otherwise, &lt;see langword=&quot;false&quot; /&gt;.">若要指示约束是主键，则为 <see langword="true" />；否则为 <see langword="false" />。</param>
    </member>
    <member name="M:System.Data.UniqueConstraint.#ctor(System.Data.DataColumn[])">
      <summary vsli:raw="Initializes a new instance of the &lt;see cref=&quot;T:System.Data.UniqueConstraint&quot; /&gt; class with the given array of &lt;see cref=&quot;T:System.Data.DataColumn&quot; /&gt; objects.">用给定的 <see cref="T:System.Data.UniqueConstraint" /> 对象的数组初始化 <see cref="T:System.Data.DataColumn" /> 类的新实例。</summary>
      <param name="columns" vsli:raw="The array of &lt;see cref=&quot;T:System.Data.DataColumn&quot; /&gt; objects to constrain.">要约束的 <see cref="T:System.Data.DataColumn" /> 对象的数组。</param>
    </member>
    <member name="M:System.Data.UniqueConstraint.#ctor(System.Data.DataColumn[],System.Boolean)">
      <summary vsli:raw="Initializes a new instance of the &lt;see cref=&quot;T:System.Data.UniqueConstraint&quot; /&gt; class with an array of &lt;see cref=&quot;T:System.Data.DataColumn&quot; /&gt; objects to constrain, and a value specifying whether the constraint is a primary key.">用要约束的 <see cref="T:System.Data.UniqueConstraint" /> 对象的数组和指定约束是否为主键的值，初始化 <see cref="T:System.Data.DataColumn" /> 类的新实例。</summary>
      <param name="columns" vsli:raw="An array of &lt;see cref=&quot;T:System.Data.DataColumn&quot; /&gt; objects to constrain.">要约束的 <see cref="T:System.Data.DataColumn" /> 对象的数组。</param>
      <param name="isPrimaryKey" vsli:raw="&lt;see langword=&quot;true&quot; /&gt; to indicate that the constraint is a primary key; otherwise, &lt;see langword=&quot;false&quot; /&gt;.">若要指示约束是主键，则为 <see langword="true" />；否则为 <see langword="false" />。</param>
    </member>
    <member name="M:System.Data.UniqueConstraint.#ctor(System.String,System.Data.DataColumn)">
      <summary vsli:raw="Initializes a new instance of the &lt;see cref=&quot;T:System.Data.UniqueConstraint&quot; /&gt; class with the specified name and &lt;see cref=&quot;T:System.Data.DataColumn&quot; /&gt;.">使用指定的名称和 <see cref="T:System.Data.UniqueConstraint" /> 初始化 <see cref="T:System.Data.DataColumn" /> 类的新实例。</summary>
      <param name="name" vsli:raw="The name of the constraint.">约束的名称。</param>
      <param name="column" vsli:raw="The &lt;see cref=&quot;T:System.Data.DataColumn&quot; /&gt; to constrain.">要约束的 <see cref="T:System.Data.DataColumn" />。</param>
    </member>
    <member name="M:System.Data.UniqueConstraint.#ctor(System.String,System.Data.DataColumn,System.Boolean)">
      <summary vsli:raw="Initializes a new instance of the &lt;see cref=&quot;T:System.Data.UniqueConstraint&quot; /&gt; class with the specified name, the &lt;see cref=&quot;T:System.Data.DataColumn&quot; /&gt; to constrain, and a value specifying whether the constraint is a primary key.">用指定名称、要约束的 <see cref="T:System.Data.UniqueConstraint" /> 和指定约束是否为主键的值，初始化 <see cref="T:System.Data.DataColumn" /> 类的新实例。</summary>
      <param name="name" vsli:raw="The name of the constraint.">约束的名称。</param>
      <param name="column" vsli:raw="The &lt;see cref=&quot;T:System.Data.DataColumn&quot; /&gt; to constrain.">要约束的 <see cref="T:System.Data.DataColumn" />。</param>
      <param name="isPrimaryKey" vsli:raw="&lt;see langword=&quot;true&quot; /&gt; to indicate that the constraint is a primary key; otherwise, &lt;see langword=&quot;false&quot; /&gt;.">若要指示约束是主键，则为 <see langword="true" />；否则为 <see langword="false" />。</param>
    </member>
    <member name="M:System.Data.UniqueConstraint.#ctor(System.String,System.Data.DataColumn[])">
      <summary vsli:raw="Initializes a new instance of the &lt;see cref=&quot;T:System.Data.UniqueConstraint&quot; /&gt; class with the specified name and array of &lt;see cref=&quot;T:System.Data.DataColumn&quot; /&gt; objects.">用指定的名称和 <see cref="T:System.Data.UniqueConstraint" /> 对象的数组初始化 <see cref="T:System.Data.DataColumn" /> 类的新实例。</summary>
      <param name="name" vsli:raw="The name of the constraint.">约束的名称。</param>
      <param name="columns" vsli:raw="The array of &lt;see cref=&quot;T:System.Data.DataColumn&quot; /&gt; objects to constrain.">要约束的 <see cref="T:System.Data.DataColumn" /> 对象的数组。</param>
    </member>
    <member name="M:System.Data.UniqueConstraint.#ctor(System.String,System.Data.DataColumn[],System.Boolean)">
      <summary vsli:raw="Initializes a new instance of the &lt;see cref=&quot;T:System.Data.UniqueConstraint&quot; /&gt; class with the specified name, an array of &lt;see cref=&quot;T:System.Data.DataColumn&quot; /&gt; objects to constrain, and a value specifying whether the constraint is a primary key.">用指定名称、要约束的 <see cref="T:System.Data.UniqueConstraint" /> 对象的数组和指定约束是否为主键的值，初始化 <see cref="T:System.Data.DataColumn" /> 类的新实例。</summary>
      <param name="name" vsli:raw="The name of the constraint.">约束的名称。</param>
      <param name="columns" vsli:raw="An array of &lt;see cref=&quot;T:System.Data.DataColumn&quot; /&gt; objects to constrain.">要约束的 <see cref="T:System.Data.DataColumn" /> 对象的数组。</param>
      <param name="isPrimaryKey" vsli:raw="&lt;see langword=&quot;true&quot; /&gt; to indicate that the constraint is a primary key; otherwise, &lt;see langword=&quot;false&quot; /&gt;.">若要指示约束是主键，则为 <see langword="true" />；否则为 <see langword="false" />。</param>
    </member>
    <member name="M:System.Data.UniqueConstraint.#ctor(System.String,System.String[],System.Boolean)">
      <summary vsli:raw="Initializes a new instance of the &lt;see cref=&quot;T:System.Data.UniqueConstraint&quot; /&gt; class with the specified name, an array of &lt;see cref=&quot;T:System.Data.DataColumn&quot; /&gt; objects to constrain, and a value specifying whether the constraint is a primary key.">用指定名称、要约束的 <see cref="T:System.Data.UniqueConstraint" /> 对象的数组和指定约束是否为主键的值，初始化 <see cref="T:System.Data.DataColumn" /> 类的新实例。</summary>
      <param name="name" vsli:raw="The name of the constraint.">约束的名称。</param>
      <param name="columnNames" vsli:raw="An array of &lt;see cref=&quot;T:System.Data.DataColumn&quot; /&gt; objects to constrain.">要约束的 <see cref="T:System.Data.DataColumn" /> 对象的数组。</param>
      <param name="isPrimaryKey" vsli:raw="&lt;see langword=&quot;true&quot; /&gt; to indicate that the constraint is a primary key; otherwise, &lt;see langword=&quot;false&quot; /&gt;.">若要指示约束是主键，则为 <see langword="true" />；否则为 <see langword="false" />。</param>
    </member>
    <member name="M:System.Data.UniqueConstraint.Equals(System.Object)">
      <summary vsli:raw="Compares this constraint to a second to determine if both are identical.">将此约束与第二个约束比较以确定两个约束是否相同。</summary>
      <param name="key2" vsli:raw="The object to which this &lt;see cref=&quot;T:System.Data.UniqueConstraint&quot; /&gt; is compared.">此 <see cref="T:System.Data.UniqueConstraint" /> 将与之比较的对象。</param>
      <returns vsli:raw="&lt;see langword=&quot;true&quot; /&gt;, if the constraints are equal; otherwise, &lt;see langword=&quot;false&quot; /&gt;.">如果约束相同，则为 <see langword="true" />；否则为 <see langword="false" />。</returns>
    </member>
    <member name="M:System.Data.UniqueConstraint.GetHashCode">
      <summary vsli:raw="Gets the hash code of this instance of the &lt;see cref=&quot;T:System.Data.UniqueConstraint&quot; /&gt; object.">获取 <see cref="T:System.Data.UniqueConstraint" /> 对象的此实例的哈希代码。</summary>
      <returns vsli:raw="A 32-bit signed integer hash code.">32 位有符号整数哈希代码。</returns>
    </member>
    <member name="P:System.Data.UniqueConstraint.Columns">
      <summary vsli:raw="Gets the array of columns that this constraint affects.">获取此约束影响的列的数组。</summary>
      <returns vsli:raw="An array of &lt;see cref=&quot;T:System.Data.DataColumn&quot; /&gt; objects.">一个 <see cref="T:System.Data.DataColumn" /> 对象数组。</returns>
    </member>
    <member name="P:System.Data.UniqueConstraint.IsPrimaryKey">
      <summary vsli:raw="Gets a value indicating whether or not the constraint is on a primary key.">获取一个值，该值指示约束是否在主键上。</summary>
      <returns vsli:raw="&lt;see langword=&quot;true&quot; /&gt;, if the constraint is on a primary key; otherwise, &lt;see langword=&quot;false&quot; /&gt;.">如果约束在主键上，则为 <see langword="true" />；否则为 <see langword="false" />。</returns>
    </member>
    <member name="P:System.Data.UniqueConstraint.Table">
      <summary vsli:raw="Gets the table to which this constraint belongs.">获取此约束所属的表。</summary>
      <returns vsli:raw="The &lt;see cref=&quot;T:System.Data.DataTable&quot; /&gt; to which the constraint belongs.">此约束所属的 <see cref="T:System.Data.DataTable" />。</returns>
    </member>
    <member name="T:System.Data.UpdateRowSource">
      <summary vsli:raw="Specifies how query command results are applied to the row being updated.">指定如何将查询命令结果应用于正在更新的行。</summary>
    </member>
    <member name="F:System.Data.UpdateRowSource.Both">
      <summary vsli:raw="Both the output parameters and the first returned row are mapped to the changed row in the &lt;see cref=&quot;T:System.Data.DataSet&quot; /&gt;.">将输出参数和第一个返回行都映射到 <see cref="T:System.Data.DataSet" /> 中的已更改的行。</summary>
    </member>
    <member name="F:System.Data.UpdateRowSource.FirstReturnedRecord">
      <summary vsli:raw="The data in the first returned row is mapped to the changed row in the &lt;see cref=&quot;T:System.Data.DataSet&quot; /&gt;.">将第一个返回行中的数据映射到 <see cref="T:System.Data.DataSet" /> 中的已更改的行。</summary>
    </member>
    <member name="F:System.Data.UpdateRowSource.None">
      <summary vsli:raw="Any returned parameters or rows are ignored.">忽略任何返回的参数或行。</summary>
    </member>
    <member name="F:System.Data.UpdateRowSource.OutputParameters">
      <summary vsli:raw="Output parameters are mapped to the changed row in the &lt;see cref=&quot;T:System.Data.DataSet&quot; /&gt;.">将输出参数映射到 <see cref="T:System.Data.DataSet" /> 中的已更改的行。</summary>
    </member>
    <member name="T:System.Data.UpdateStatus">
      <summary vsli:raw="Specifies the action to take with regard to the current and remaining rows during an &lt;see cref=&quot;M:System.Data.Common.DbDataAdapter.Update(System.Data.DataSet)&quot; /&gt;.">指定在 <see cref="M:System.Data.Common.DbDataAdapter.Update(System.Data.DataSet)" /> 期间对当前行和其余行采取的操作。</summary>
    </member>
    <member name="F:System.Data.UpdateStatus.Continue">
      <summary vsli:raw="The &lt;see cref=&quot;T:System.Data.Common.DataAdapter&quot; /&gt; is to continue processing rows.">
        <see cref="T:System.Data.Common.DataAdapter" /> 应继续处理行。</summary>
    </member>
    <member name="F:System.Data.UpdateStatus.ErrorsOccurred">
      <summary vsli:raw="The event handler reports that the update should be treated as an error.">事件处理程序报告：应将更新作为错误对待。</summary>
    </member>
    <member name="F:System.Data.UpdateStatus.SkipAllRemainingRows">
      <summary vsli:raw="The current row and all remaining rows are not to be updated.">将不更新当前行和所有其余行。</summary>
    </member>
    <member name="F:System.Data.UpdateStatus.SkipCurrentRow">
      <summary vsli:raw="The current row is not to be updated.">将不更新当前行。</summary>
    </member>
    <member name="T:System.Data.VersionNotFoundException">
      <summary vsli:raw="Represents the exception that is thrown when you try to return a version of a &lt;see cref=&quot;T:System.Data.DataRow&quot; /&gt; that has been deleted.">表示尝试返回已删除的 <see cref="T:System.Data.DataRow" /> 版本时引发的异常。</summary>
    </member>
    <member name="M:System.Data.VersionNotFoundException.#ctor">
      <summary vsli:raw="Initializes a new instance of the &lt;see cref=&quot;T:System.Data.VersionNotFoundException&quot; /&gt; class.">初始化 <see cref="T:System.Data.VersionNotFoundException" /> 类的新实例。</summary>
    </member>
    <member name="M:System.Data.VersionNotFoundException.#ctor(System.Runtime.Serialization.SerializationInfo,System.Runtime.Serialization.StreamingContext)">
      <summary vsli:raw="Initializes a new instance of the &lt;see cref=&quot;T:System.Data.VersionNotFoundException&quot; /&gt; class with serialization information.">使用序列化信息初始化 <see cref="T:System.Data.VersionNotFoundException" /> 类的新实例。</summary>
      <param name="info" vsli:raw="The data that is required to serialize or deserialize an object.">序列化或反序列化对象时所需的数据。</param>
      <param name="context" vsli:raw="Description of the source and destination of the specified serialized stream.">指定的序列化流的源和目标的说明。</param>
    </member>
    <member name="M:System.Data.VersionNotFoundException.#ctor(System.String)">
      <summary vsli:raw="Initializes a new instance of the &lt;see cref=&quot;T:System.Data.VersionNotFoundException&quot; /&gt; class with the specified string.">使用指定的字符串初始化 <see cref="T:System.Data.VersionNotFoundException" /> 类的新实例。</summary>
      <param name="s" vsli:raw="The string to display when the exception is thrown.">引发异常时显示的字符串。</param>
    </member>
    <member name="M:System.Data.VersionNotFoundException.#ctor(System.String,System.Exception)">
      <summary vsli:raw="Initializes a new instance of the &lt;see cref=&quot;T:System.Data.VersionNotFoundException&quot; /&gt; class with a specified error message and a reference to the inner exception that is the cause of this exception.">使用指定的错误消息和对作为此异常原因的内部异常的引用来初始化 <see cref="T:System.Data.VersionNotFoundException" /> 类的新实例。</summary>
      <param name="message" vsli:raw="The error message that explains the reason for the exception.">解释异常原因的错误消息。</param>
      <param name="innerException" vsli:raw="The exception that is the cause of the current exception, or a null reference (&lt;see langword=&quot;Nothing&quot; /&gt; in Visual Basic) if no inner exception is specified.">导致当前异常的异常；如果未指定内部异常，则是一个 null 引用（在 Visual Basic 中为 <see langword="Nothing" />）。</param>
    </member>
    <member name="T:System.Data.XmlReadMode">
      <summary vsli:raw="Specifies how to read XML data and a relational schema into a &lt;see cref=&quot;T:System.Data.DataSet&quot; /&gt;.">指定如何将 XML 数据和关系架构读入 <see cref="T:System.Data.DataSet" />。</summary>
    </member>
    <member name="F:System.Data.XmlReadMode.Auto">
      <summary vsli:raw="The default read mode.">默认的读取模式。</summary>
    </member>
    <member name="F:System.Data.XmlReadMode.DiffGram">
      <summary vsli:raw="Reads a DiffGram, applying changes from the DiffGram to the &lt;see cref=&quot;T:System.Data.DataSet&quot; /&gt;. The semantics are identical to those of a &lt;see cref=&quot;M:System.Data.DataSet.Merge(System.Data.DataSet)&quot; /&gt; operation. As with the &lt;see cref=&quot;M:System.Data.DataSet.Merge(System.Data.DataSet)&quot; /&gt; operation, &lt;see cref=&quot;P:System.Data.DataRow.RowState&quot; /&gt; values are preserved. Input to &lt;see cref=&quot;M:System.Data.DataSet.ReadXml(System.Xml.XmlReader)&quot; /&gt; with DiffGrams should only be obtained using the output from &lt;see cref=&quot;M:System.Data.DataSet.WriteXml(System.IO.Stream)&quot; /&gt; as a DiffGram.&#xA;        &#xA;The target &lt;see cref=&quot;T:System.Data.DataSet&quot; /&gt; must have the same schema as the &lt;see cref=&quot;T:System.Data.DataSet&quot; /&gt; on which &lt;see cref=&quot;Overload:System.Data.DataSet.WriteXml&quot; /&gt; as DiffGram is called. Otherwise the DiffGram merge operation fails and an exception is thrown.">读取 DiffGram，将 DiffGram 中的更改应用到 <see cref="T:System.Data.DataSet" />。 语义与 <see cref="M:System.Data.DataSet.Merge(System.Data.DataSet)" /> 操作的语义相同。 与 <see cref="M:System.Data.DataSet.Merge(System.Data.DataSet)" /> 操作一样，保留 <see cref="P:System.Data.DataRow.RowState" /> 值。 对 <see cref="M:System.Data.DataSet.ReadXml(System.Xml.XmlReader)" /> 的 DiffGram 输入只能使用 <see cref="M:System.Data.DataSet.WriteXml(System.IO.Stream)" /> 中的 DiffGram 输出来获得。
        
目标 <see cref="T:System.Data.DataSet" /> 必须与在其中将 <see cref="Overload:System.Data.DataSet.WriteXml" /> 作为 DiffGram 调用的 <see cref="T:System.Data.DataSet" /> 具有相同架构。 否则，DiffGram 合并操作会失败并引发异常。</summary>
    </member>
    <member name="F:System.Data.XmlReadMode.Fragment">
      <summary vsli:raw="Reads XML fragments, such as those generated by executing FOR XML queries, against an instance of SQL Server. When &lt;see cref=&quot;T:System.Data.XmlReadMode&quot; /&gt; is set to &lt;see langword=&quot;Fragment&quot; /&gt;, the default namespace is read as the inline schema.">针对 SQL Server 的实例读取 XML 片段（例如，通过执行 FOR XML 查询生成的 XML 片段）。 当 <see cref="T:System.Data.XmlReadMode" /> 设置为 <see langword="Fragment" /> 时，将默认命名空间作为内联架构读取。</summary>
    </member>
    <member name="F:System.Data.XmlReadMode.IgnoreSchema">
      <summary vsli:raw="Ignores any inline schema and reads data into the existing &lt;see cref=&quot;T:System.Data.DataSet&quot; /&gt; schema. If any data does not match the existing schema, it is discarded (including data from differing namespaces defined for the &lt;see cref=&quot;T:System.Data.DataSet&quot; /&gt;). If the data is a DiffGram, &lt;see langword=&quot;IgnoreSchema&quot; /&gt; has the same functionality as &lt;see langword=&quot;DiffGram&quot; /&gt;.">忽略任何内联架构并将数据读入现有的 <see cref="T:System.Data.DataSet" /> 架构。 如果任何数据与现有架构不匹配，就会丢弃这些数据（包括为 <see cref="T:System.Data.DataSet" /> 定义的不同命名空间中的数据）。 如果数据是 DiffGram，<see langword="IgnoreSchema" /> 与 <see langword="DiffGram" /> 具有相同的功能。</summary>
    </member>
    <member name="F:System.Data.XmlReadMode.InferSchema">
      <summary vsli:raw="Ignores any inline schema, infers schema from the data and loads the data. If the &lt;see cref=&quot;T:System.Data.DataSet&quot; /&gt; already contains a schema, the current schema is extended by adding new tables or adding columns to existing tables. An exception is thrown if the inferred table already exists but with a different namespace, or if any of the inferred columns conflict with existing columns.">忽略任何内联架构，从数据推断出架构并加载数据。 如果 <see cref="T:System.Data.DataSet" /> 已包含架构，通过添加新表或将列添加到现有表来扩展当前架构。 如果推断表已经存在，但命名空间不同，或者任何推断列与现有列冲突，则会引发异常。</summary>
    </member>
    <member name="F:System.Data.XmlReadMode.InferTypedSchema">
      <summary vsli:raw="Ignores any inline schema, infers a strongly typed schema from the data, and loads the data. If the type cannot be inferred from the data, it is interpreted as string data. If the &lt;see cref=&quot;T:System.Data.DataSet&quot; /&gt; already contains a schema, the current schema is extended, either by adding new tables or by adding columns to existing tables. An exception is thrown if the inferred table already exists but with a different namespace, or if any of the inferred columns conflict with existing columns.">忽略任何内联架构，从数据推断出强类型架构并加载数据。 如果无法从数据中推断出类型，则将其解释为字符串数据。 如果 <see cref="T:System.Data.DataSet" /> 已包含架构，则通过添加新表或向现有表添加列来扩展当前架构。 如果推断表已经存在，但命名空间不同，或者任何推断列与现有列冲突，则会引发异常。</summary>
    </member>
    <member name="F:System.Data.XmlReadMode.ReadSchema">
      <summary vsli:raw="Reads any inline schema and loads the data. If the &lt;see cref=&quot;T:System.Data.DataSet&quot; /&gt; already contains schema, new tables may be added to the schema, but an exception is thrown if any tables in the inline schema already exist in the &lt;see cref=&quot;T:System.Data.DataSet&quot; /&gt;.">读取任何内联架构并加载数据。 如果 <see cref="T:System.Data.DataSet" /> 已包含架构，则可将新表添加到架构中，但是如果内联架构中的任何表在 <see cref="T:System.Data.DataSet" /> 中已经存在，则会引发异常。</summary>
    </member>
    <member name="T:System.Data.XmlWriteMode">
      <summary vsli:raw="Specifies how to write XML data and a relational schema from a &lt;see cref=&quot;T:System.Data.DataSet&quot; /&gt;.">指定如何从 <see cref="T:System.Data.DataSet" /> 写入 XML 数据和关系架构。</summary>
    </member>
    <member name="F:System.Data.XmlWriteMode.DiffGram">
      <summary vsli:raw="Writes the entire &lt;see cref=&quot;T:System.Data.DataSet&quot; /&gt; as a DiffGram, including original and current values. To generate a DiffGram containing only changed values, call &lt;see cref=&quot;M:System.Data.DataSet.GetChanges&quot; /&gt;, and then call &lt;see cref=&quot;M:System.Data.DataSet.WriteXml(System.IO.Stream)&quot; /&gt; as a DiffGram on the returned &lt;see cref=&quot;T:System.Data.DataSet&quot; /&gt;.">以 DiffGram 形式编写整个 <see cref="T:System.Data.DataSet" />，包括原始值和当前值。 若要生成只包含已更改的值的 DiffGram，请调用 <see cref="M:System.Data.DataSet.GetChanges" />，然后在返回的 <see cref="M:System.Data.DataSet.WriteXml(System.IO.Stream)" /> 上作为 DiffGram 调用 <see cref="T:System.Data.DataSet" />。</summary>
    </member>
    <member name="F:System.Data.XmlWriteMode.IgnoreSchema">
      <summary vsli:raw="Writes the current contents of the &lt;see cref=&quot;T:System.Data.DataSet&quot; /&gt; as XML data, without an XSD schema. If no data is loaded into the &lt;see cref=&quot;T:System.Data.DataSet&quot; /&gt;, nothing is written.">以 XML 数据形式写入 <see cref="T:System.Data.DataSet" /> 的当前内容，不带 XSD 架构。 如果无数据加载到 <see cref="T:System.Data.DataSet" /> 中，则不写入任何内容。</summary>
    </member>
    <member name="F:System.Data.XmlWriteMode.WriteSchema">
      <summary vsli:raw="Writes the current contents of the &lt;see cref=&quot;T:System.Data.DataSet&quot; /&gt; as XML data with the relational structure as inline XSD schema. If the &lt;see cref=&quot;T:System.Data.DataSet&quot; /&gt; has only a schema with no data, only the inline schema is written. If the &lt;see cref=&quot;T:System.Data.DataSet&quot; /&gt; does not have a current schema, nothing is written.">以 XML 数据形式写入 <see cref="T:System.Data.DataSet" /> 的当前内容，以关系结构作为内联 XSD 架构。 如果 <see cref="T:System.Data.DataSet" /> 只有架构而无数据，那么只写入内联架构。 如果 <see cref="T:System.Data.DataSet" /> 没有当前架构，则不写入任何内容。</summary>
    </member>
    <member name="T:System.Xml.XmlDataDocument">
      <summary vsli:raw="Allows structured data to be stored, retrieved, and manipulated through a relational &lt;see cref=&quot;T:System.Data.DataSet&quot; /&gt;.">允许通过相关的 <see cref="T:System.Data.DataSet" /> 存储、检索和操作结构化数据。</summary>
    </member>
    <member name="M:System.Xml.XmlDataDocument.#ctor">
      <summary vsli:raw="Initializes a new instance of the &lt;see cref=&quot;T:System.Xml.XmlDataDocument&quot; /&gt; class.">初始化 <see cref="T:System.Xml.XmlDataDocument" /> 类的新实例。</summary>
    </member>
    <member name="M:System.Xml.XmlDataDocument.#ctor(System.Data.DataSet)">
      <summary vsli:raw="Initializes a new instance of the &lt;see cref=&quot;T:System.Xml.XmlDataDocument&quot; /&gt; class with the specified &lt;see cref=&quot;T:System.Data.DataSet&quot; /&gt;.">使用指定的 <see cref="T:System.Xml.XmlDataDocument" /> 初始化 <see cref="T:System.Data.DataSet" /> 类的新实例。</summary>
      <param name="dataset" vsli:raw="The &lt;see langword=&quot;DataSet&quot; /&gt; to load into &lt;see langword=&quot;XmlDataDocument&quot; /&gt;.">要加载到 <see langword="DataSet" /> 的 <see langword="XmlDataDocument" />。</param>
    </member>
    <member name="M:System.Xml.XmlDataDocument.CloneNode(System.Boolean)">
      <summary vsli:raw="Creates a duplicate of the current node.">创建当前节点的副本。</summary>
      <param name="deep" vsli:raw="&lt;see langword=&quot;true&quot; /&gt; to recursively clone the subtree under the specified node; &lt;see langword=&quot;false&quot; /&gt; to clone only the node itself.">若要递归地克隆指定节点下的子树，则为 <see langword="true" />；若仅克隆节点本身，则为 <see langword="false" />。</param>
      <returns vsli:raw="The cloned node.">克隆的节点。</returns>
    </member>
    <member name="M:System.Xml.XmlDataDocument.CreateElement(System.String,System.String,System.String)">
      <summary vsli:raw="Creates an element with the specified &lt;see cref=&quot;P:System.Xml.XmlNode.Prefix&quot; /&gt;, &lt;see cref=&quot;P:System.Xml.XmlDocument.LocalName&quot; /&gt; , and &lt;see cref=&quot;P:System.Xml.XmlNode.NamespaceURI&quot; /&gt;.">创建具有指定 <see cref="P:System.Xml.XmlNode.Prefix" />、<see cref="P:System.Xml.XmlDocument.LocalName" /> 和 <see cref="P:System.Xml.XmlNode.NamespaceURI" /> 的元素。</summary>
      <param name="prefix" vsli:raw="The prefix of the new element. If String.Empty or &lt;see langword=&quot;null&quot; /&gt;, there is no prefix.">新元素的前缀。 如果为 String.Empty 或 <see langword="null" />，则没有前缀。</param>
      <param name="localName" vsli:raw="The local name of the new element.">新元素的本地名称。</param>
      <param name="namespaceURI" vsli:raw="The namespace Uniform Resource Identifier (URI) of the new element. If String.Empty or &lt;see langword=&quot;null&quot; /&gt;, there is no namespaceURI.">新元素的命名空间统一资源标识符 (URI)。 如果为 String.Empty 或 <see langword="null" />，则没有 namespaceURI。</param>
      <returns vsli:raw="A new &lt;see cref=&quot;T:System.Xml.XmlElement&quot; /&gt;.">一个新的 <see cref="T:System.Xml.XmlElement" />。</returns>
    </member>
    <member name="M:System.Xml.XmlDataDocument.CreateEntityReference(System.String)">
      <summary vsli:raw="Creates an &lt;see cref=&quot;T:System.Xml.XmlEntityReference&quot; /&gt; with the specified name.">创建具有指定名称的 <see cref="T:System.Xml.XmlEntityReference" />。</summary>
      <param name="name" vsli:raw="The name of the entity reference.">实体引用的名称。</param>
      <exception cref="T:System.NotSupportedException" vsli:raw="Calling this method.">调用此方法。</exception>
      <returns vsli:raw="An &lt;see cref=&quot;T:System.Xml.XmlEntityReference&quot; /&gt; with the specified name.">具有指定名称的 <see cref="T:System.Xml.XmlEntityReference" />。</returns>
    </member>
    <member name="M:System.Xml.XmlDataDocument.CreateNavigator(System.Xml.XmlNode)">
      <summary vsli:raw="Creates a new &lt;see cref=&quot;T:System.Xml.XPath.XPathNavigator&quot; /&gt; object for navigating this document. The &lt;see langword=&quot;XPathNavigator&quot; /&gt; is positioned on the node specified in the &lt;paramref name=&quot;node&quot; /&gt; parameter.">创建一个用于导航此文档的新 <see cref="T:System.Xml.XPath.XPathNavigator" /> 对象。 <see langword="XPathNavigator" /> 定位在 <paramref name="node" /> 参数中指定的节点上。</summary>
      <param name="node" vsli:raw="The &lt;see cref=&quot;T:System.Xml.XmlNode&quot; /&gt; you want the navigator initially positioned on.">希望导航器最初定位在的 <see cref="T:System.Xml.XmlNode" />。</param>
      <returns vsli:raw="An &lt;see langword=&quot;XPathNavigator&quot; /&gt; used to navigate the document.">用于文档导航的 <see langword="XPathNavigator" />。</returns>
    </member>
    <member name="M:System.Xml.XmlDataDocument.GetElementById(System.String)">
      <summary vsli:raw="Gets the &lt;see cref=&quot;T:System.Xml.XmlElement&quot; /&gt; with the specified ID. This method is not supported by the &lt;see cref=&quot;T:System.Xml.XmlDataDocument&quot; /&gt; class. Calling this method throws an exception.">获取具有指定 ID 的 <see cref="T:System.Xml.XmlElement" />。 <see cref="T:System.Xml.XmlDataDocument" /> 类不支持该方法。 调用此方法将引发异常。</summary>
      <param name="elemId" vsli:raw="The attribute ID to match.">要匹配的属性 ID。</param>
      <exception cref="T:System.NotSupportedException" vsli:raw="Calling this method.">调用此方法。</exception>
      <returns vsli:raw="An &lt;see cref=&quot;T:System.Xml.XmlElement&quot; /&gt; with the specified ID.">具有指定 ID 的 <see cref="T:System.Xml.XmlElement" />。</returns>
    </member>
    <member name="M:System.Xml.XmlDataDocument.GetElementFromRow(System.Data.DataRow)">
      <summary vsli:raw="Retrieves the &lt;see cref=&quot;T:System.Xml.XmlElement&quot; /&gt; associated with the specified &lt;see cref=&quot;T:System.Data.DataRow&quot; /&gt;.">检索与指定 <see cref="T:System.Xml.XmlElement" /> 关联的 <see cref="T:System.Data.DataRow" />。</summary>
      <param name="r" vsli:raw="The &lt;see langword=&quot;DataRow&quot; /&gt; whose associated &lt;see langword=&quot;XmlElement&quot; /&gt; you want to retrieve.">想要检索其关联 <see langword="DataRow" /> 的 <see langword="XmlElement" />。</param>
      <returns vsli:raw="The &lt;see langword=&quot;XmlElement&quot; /&gt; containing a representation of the specified &lt;see langword=&quot;DataRow&quot; /&gt;.">包含指定 <see langword="XmlElement" /> 的表示形式的 <see langword="DataRow" />。</returns>
    </member>
    <member name="M:System.Xml.XmlDataDocument.GetElementsByTagName(System.String)">
      <summary vsli:raw="Returns an &lt;see cref=&quot;T:System.Xml.XmlNodeList&quot; /&gt; containing a list of all descendant elements that match the specified &lt;see cref=&quot;P:System.Xml.XmlDocument.Name&quot; /&gt;.">返回一个 <see cref="T:System.Xml.XmlNodeList" />，它包含与指定 <see cref="P:System.Xml.XmlDocument.Name" /> 匹配的所有子代元素的列表。</summary>
      <param name="name" vsli:raw="The qualified name to match. It is matched against the &lt;see cref=&quot;P:System.Xml.XmlDocument.Name&quot; /&gt; property of the matching node. The special value &quot;*&quot; matches all tags.">要匹配的限定名称。 它针对匹配节点的 <see cref="P:System.Xml.XmlDocument.Name" /> 属性进行匹配。 特殊值“*”匹配所有标记。</param>
      <returns vsli:raw="An &lt;see cref=&quot;T:System.Xml.XmlNodeList&quot; /&gt; containing a list of all matching nodes.">
        <see cref="T:System.Xml.XmlNodeList" />，包含所有匹配节点的列表。</returns>
    </member>
    <member name="M:System.Xml.XmlDataDocument.GetRowFromElement(System.Xml.XmlElement)">
      <summary vsli:raw="Retrieves the &lt;see cref=&quot;T:System.Data.DataRow&quot; /&gt; associated with the specified &lt;see cref=&quot;T:System.Xml.XmlElement&quot; /&gt;.">检索与指定 <see cref="T:System.Data.DataRow" /> 关联的 <see cref="T:System.Xml.XmlElement" />。</summary>
      <param name="e" vsli:raw="The &lt;see langword=&quot;XmlElement&quot; /&gt; whose associated &lt;see langword=&quot;DataRow&quot; /&gt; you want to retrieve.">想要检索其关联 <see langword="XmlElement" /> 的 <see langword="DataRow" />。</param>
      <returns vsli:raw="The &lt;see langword=&quot;DataRow&quot; /&gt; containing a representation of the &lt;see langword=&quot;XmlElement&quot; /&gt;; &lt;see langword=&quot;null&quot; /&gt; if there is no &lt;see langword=&quot;DataRow&quot; /&gt; associated with the &lt;see langword=&quot;XmlElement&quot; /&gt;.">包含 <see langword="DataRow" /> 的表示形式的 <see langword="XmlElement" />；如果没有与 <see langword="null" /> 关联的 <see langword="DataRow" />，则为 <see langword="XmlElement" />。</returns>
    </member>
    <member name="M:System.Xml.XmlDataDocument.Load(System.IO.Stream)">
      <summary vsli:raw="Loads the &lt;see langword=&quot;XmlDataDocument&quot; /&gt; from the specified stream.">从指定的流加载 <see langword="XmlDataDocument" />。</summary>
      <param name="inStream" vsli:raw="The stream containing the XML document to load.">包含要加载的 XML 文档的流。</param>
    </member>
    <member name="M:System.Xml.XmlDataDocument.Load(System.IO.TextReader)">
      <summary vsli:raw="Loads the &lt;see langword=&quot;XmlDataDocument&quot; /&gt; from the specified &lt;see cref=&quot;T:System.IO.TextReader&quot; /&gt;.">从指定的 <see cref="T:System.IO.TextReader" /> 加载 <see langword="XmlDataDocument" />。</summary>
      <param name="txtReader" vsli:raw="The &lt;see langword=&quot;TextReader&quot; /&gt; used to feed the XML data into the document.">用于将 XML 数据输送到文档中的 <see langword="TextReader" />。</param>
    </member>
    <member name="M:System.Xml.XmlDataDocument.Load(System.String)">
      <summary vsli:raw="Loads the &lt;see langword=&quot;XmlDataDocument&quot; /&gt; using the specified URL.">使用指定的 URL 加载 <see langword="XmlDataDocument" />。</summary>
      <param name="filename" vsli:raw="The URL of the file containing the XML document to load.">文件的 URL，该文件包含要加载的 XML 文档。</param>
    </member>
    <member name="M:System.Xml.XmlDataDocument.Load(System.Xml.XmlReader)">
      <summary vsli:raw="Loads the &lt;see langword=&quot;XmlDataDocument&quot; /&gt; from the specified &lt;see cref=&quot;T:System.Xml.XmlReader&quot; /&gt;.">从指定的 <see cref="T:System.Xml.XmlReader" /> 加载 <see langword="XmlDataDocument" />。</summary>
      <param name="reader" vsli:raw="The &lt;see langword=&quot;XmlReader&quot; /&gt; containing the XML document to load.">包含要加载的 XML 文档的 <see langword="XmlReader" />。</param>
      <exception cref="T:System.NotSupportedException" vsli:raw="The XML being loaded contains entity references, and the reader cannot resolve entities.">正在加载的 XML 包含实体引用，而该读取器不能解析实体。</exception>
    </member>
    <member name="P:System.Xml.XmlDataDocument.DataSet">
      <summary vsli:raw="Gets a &lt;see cref=&quot;T:System.Data.DataSet&quot; /&gt; that provides a relational representation of the data in the &lt;see langword=&quot;XmlDataDocument&quot; /&gt;.">获取 <see cref="T:System.Data.DataSet" />，该数据集提供 <see langword="XmlDataDocument" /> 中数据的关系表示形式。</summary>
      <returns vsli:raw="A &lt;see langword=&quot;DataSet&quot; /&gt; that can be used to access the data in the &lt;see langword=&quot;XmlDataDocument&quot; /&gt; using a relational model.">
        <see langword="DataSet" />，该数据集可用于访问使用关系模型的 <see langword="XmlDataDocument" /> 中的数据。</returns>
    </member>
  </members>
</doc>