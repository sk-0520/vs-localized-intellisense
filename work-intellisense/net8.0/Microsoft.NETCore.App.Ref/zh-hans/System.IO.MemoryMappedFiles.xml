<?xml version="1.0" encoding="utf-8"?>
<doc xmlns:vsli="https://github.com/sk-0520/vs-localized-intellisense/tree/master/schema/2024">
  <assembly>
    <name>System.IO.MemoryMappedFiles</name>
  </assembly>
  <members>
    <member name="T:Microsoft.Win32.SafeHandles.SafeMemoryMappedFileHandle">
      <summary vsli:raw="Provides a safe handle that represents a memory-mapped file for sequential access.">提供了一个表示顺序访问的内存映射文件的安全句柄。</summary>
    </member>
    <member name="P:Microsoft.Win32.SafeHandles.SafeMemoryMappedFileHandle.IsInvalid">
      <summary vsli:raw="Gets a value that indicates whether the handle is invalid.">获取一个值，该值指示句柄是否无效。</summary>
      <returns vsli:raw="&lt;see langword=&quot;true&quot; /&gt; if the handle is not valid; otherwise, &lt;see langword=&quot;false&quot; /&gt;.">如果句柄无效，则为 <see langword="true" />；否则为 <see langword="false" />。</returns>
    </member>
    <member name="T:Microsoft.Win32.SafeHandles.SafeMemoryMappedViewHandle">
      <summary vsli:raw="Provides a safe handle that represents a view of a block of unmanaged memory for random access.">提供一个表示用于随机访问的非托管内存块的视图的安全句柄。</summary>
    </member>
    <member name="T:System.IO.MemoryMappedFiles.MemoryMappedFile">
      <summary vsli:raw="Represents a memory-mapped file.">表示内存映射文件。</summary>
    </member>
    <member name="M:System.IO.MemoryMappedFiles.MemoryMappedFile.CreateFromFile(System.IO.FileStream,System.String,System.Int64,System.IO.MemoryMappedFiles.MemoryMappedFileAccess,System.IO.HandleInheritability,System.Boolean)">
      <summary vsli:raw="Creates a memory-mapped file from an existing file with the specified access mode, name, inheritability, and capacity.">从现有文件创建一个具有指定的访问模式、名称、继承性和容量的内存映射文件。</summary>
      <param name="fileStream" vsli:raw="The file stream of the existing file.">现有文件的文件流。</param>
      <param name="mapName" vsli:raw="A name to assign to the memory-mapped file, or &lt;see langword=&quot;null&quot; /&gt; for a &lt;see cref=&quot;T:System.IO.MemoryMappedFiles.MemoryMappedFile&quot; /&gt; that you do not intend to share across processes.">要分配给内存映射文件的名称，或用于你不打算在进程中共享的 <see cref="T:System.IO.MemoryMappedFiles.MemoryMappedFile" /> 的 <see langword="null" />。</param>
      <param name="capacity" vsli:raw="The maximum size, in bytes, to allocate to the memory-mapped file. Specify 0 to set the capacity to the size of &lt;c&gt;filestream&lt;/c&gt;.">要分配给内存映射文件的最大大小（以字节为单位）。 指定 0，以将容量设置为 <c>filestream</c> 的大小。</param>
      <param name="access" vsli:raw="One of the enumeration values that specifies the type of access allowed to the memory-mapped file.  &#xA;  &#xA; This parameter can't be set to &lt;see cref=&quot;F:System.IO.MemoryMappedFiles.MemoryMappedFileAccess.Write&quot; /&gt;.">指定内存映射文件允许的访问类型的枚举值之一。  
  
不能将此参数设置为 <see cref="F:System.IO.MemoryMappedFiles.MemoryMappedFileAccess.Write" />。</param>
      <param name="inheritability" vsli:raw="One of the enumeration values that specifies whether a handle to the memory-mapped file can be inherited by a child process. The default is &lt;see cref=&quot;F:System.IO.HandleInheritability.None&quot; /&gt;.">指定内存映射文件的句柄能否由子进程继承的枚举值之一。 默认值为 <see cref="F:System.IO.HandleInheritability.None" />。</param>
      <param name="leaveOpen" vsli:raw="A value that indicates whether to close the source file stream when the &lt;see cref=&quot;T:System.IO.MemoryMappedFiles.MemoryMappedFile&quot; /&gt; is disposed.">一个值，该值指示释放 <see cref="T:System.IO.MemoryMappedFiles.MemoryMappedFile" /> 后是否要关闭源文件流。</param>
      <exception cref="T:System.ArgumentException" vsli:raw="&lt;paramref name=&quot;mapName&quot; /&gt; is &lt;see langword=&quot;null&quot; /&gt; or an empty string.  &#xA;  &#xA; -or-  &#xA;  &#xA; &lt;paramref name=&quot;capacity&quot; /&gt; and the length of the file are zero.  &#xA;  &#xA; -or-  &#xA;  &#xA; &lt;paramref name=&quot;access&quot; /&gt; is set to &lt;see cref=&quot;F:System.IO.MemoryMappedFiles.MemoryMappedFileAccess.Write&quot; /&gt; or &lt;see cref=&quot;F:System.IO.MemoryMappedFiles.MemoryMappedFileAccess.Write&quot; /&gt; enumeration value, which is not allowed.  &#xA;  &#xA; -or-  &#xA;  &#xA; &lt;paramref name=&quot;access&quot; /&gt; is set to &lt;see cref=&quot;F:System.IO.MemoryMappedFiles.MemoryMappedFileAccess.Read&quot; /&gt; and &lt;paramref name=&quot;capacity&quot; /&gt; is larger than the length of &lt;see langword=&quot;filestream&quot; /&gt;.">
        <paramref name="mapName" /> 为 <see langword="null" /> 或空字符串。  
  
- 或 - 
 <paramref name="capacity" /> 和文件长度为零。  
  
- 或 - 
 <paramref name="access" /> 设置为 <see cref="F:System.IO.MemoryMappedFiles.MemoryMappedFileAccess.Write" /> 或 <see cref="F:System.IO.MemoryMappedFiles.MemoryMappedFileAccess.Write" /> 枚举值，这是不允许的。  
  
- 或 - 
 <paramref name="access" /> 设置为 <see cref="F:System.IO.MemoryMappedFiles.MemoryMappedFileAccess.Read" />，<paramref name="capacity" /> 大于 <see langword="filestream" /> 的长度。</exception>
      <exception cref="T:System.ArgumentNullException" vsli:raw="&lt;paramref name=&quot;fileStream&quot; /&gt; is &lt;see langword=&quot;null&quot; /&gt;.">
        <paramref name="fileStream" /> 为 <see langword="null" />。</exception>
      <exception cref="T:System.ArgumentOutOfRangeException" vsli:raw="&lt;paramref name=&quot;capacity&quot; /&gt; is less than zero.  &#xA;  &#xA; -or-  &#xA;  &#xA; &lt;paramref name=&quot;capacity&quot; /&gt; is less than the file size.  &#xA;  &#xA; -or-  &#xA;  &#xA; &lt;paramref name=&quot;access&quot; /&gt; is not a valid &lt;see cref=&quot;T:System.IO.MemoryMappedFiles.MemoryMappedFileAccess&quot; /&gt; enumeration value.  &#xA;  &#xA; -or-  &#xA;  &#xA; &lt;paramref name=&quot;inheritability&quot; /&gt; is not a valid &lt;see cref=&quot;T:System.IO.HandleInheritability&quot; /&gt; enumeration value.">
        <paramref name="capacity" /> 小于零。  
  
- 或 - 
 <paramref name="capacity" /> 小于文件大小。  
  
- 或 - 
 <paramref name="access" /> 不是有效的 <see cref="T:System.IO.MemoryMappedFiles.MemoryMappedFileAccess" /> 枚举值。  
  
- 或 - 
 <paramref name="inheritability" /> 不是有效的 <see cref="T:System.IO.HandleInheritability" /> 枚举值。</exception>
      <returns vsli:raw="A memory-mapped file that has the specified characteristics.">具有指定特征的内存映射文件。</returns>
    </member>
    <member name="M:System.IO.MemoryMappedFiles.MemoryMappedFile.CreateFromFile(System.String)">
      <summary vsli:raw="Creates a memory-mapped file from a file on disk.">基于磁盘上的文件创建一个内存映射文件。</summary>
      <param name="path" vsli:raw="The path to file to map.">要映射的文件的路径。</param>
      <exception cref="T:System.ArgumentException" vsli:raw="&lt;paramref name=&quot;path&quot; /&gt; is an empty string, contains only white space, or has one or more invalid characters, as defined by the &lt;see cref=&quot;M:System.IO.Path.GetInvalidFileNameChars&quot; /&gt; method.  &#xA;  &#xA; -or-  &#xA;  &#xA; &lt;paramref name=&quot;path&quot; /&gt; refers to an invalid device.">
        <paramref name="path" /> 为空字符串，只包含空格，或者包含 <see cref="M:System.IO.Path.GetInvalidFileNameChars" /> 方法定义的一个或多个无效字符。  
  
- 或 - 
 <paramref name="path" /> 引用无效的设备。</exception>
      <exception cref="T:System.ArgumentNullException" vsli:raw="&lt;paramref name=&quot;path&quot; /&gt; is &lt;see langword=&quot;null&quot; /&gt;.">
        <paramref name="path" /> 为 <see langword="null" />。</exception>
      <exception cref="T:System.IO.IOException" vsli:raw="An I/O error occurred.">出现 I/O 错误。</exception>
      <exception cref="T:System.IO.PathTooLongException" vsli:raw="&lt;paramref name=&quot;path&quot; /&gt; exceeds the maximum length defined by the operating system.">
        <paramref name="path" /> 超过了操作系统定义的最大长度。</exception>
      <exception cref="T:System.Security.SecurityException" vsli:raw="The caller does not have the required permissions for the file.">调用方没有该文件的所需权限。</exception>
      <returns vsli:raw="A memory-mapped file.">内存映射文件。</returns>
    </member>
    <member name="M:System.IO.MemoryMappedFiles.MemoryMappedFile.CreateFromFile(System.String,System.IO.FileMode)">
      <summary vsli:raw="Creates a memory-mapped file that has the specified access mode from a file on disk.">基于磁盘上的文件创建一个具有指定访问模式的内存映射文件。</summary>
      <param name="path" vsli:raw="The path to the file to map.">要映射的文件的路径。</param>
      <param name="mode" vsli:raw="Access mode; must be &lt;see cref=&quot;F:System.IO.FileMode.Open&quot; /&gt;.">访问模式；必须为 <see cref="F:System.IO.FileMode.Open" />。</param>
      <exception cref="T:System.ArgumentException" vsli:raw="&lt;paramref name=&quot;path&quot; /&gt; is an empty string, contains only white space, or has one or more invalid characters, as defined by the &lt;see cref=&quot;M:System.IO.Path.GetInvalidFileNameChars&quot; /&gt; method.  &#xA;  &#xA; -or-  &#xA;  &#xA; &lt;paramref name=&quot;path&quot; /&gt; refers to an invalid device.  &#xA;  &#xA; -or-  &#xA;  &#xA; &lt;paramref name=&quot;mode&quot; /&gt; is &lt;see cref=&quot;F:System.IO.FileMode.Append&quot; /&gt;.">
        <paramref name="path" /> 为空字符串，只包含空格，或者包含 <see cref="M:System.IO.Path.GetInvalidFileNameChars" /> 方法定义的一个或多个无效字符。  
  
- 或 - 
 <paramref name="path" /> 引用无效的设备。  
  
- 或 - 
 <paramref name="mode" /> 为 <see cref="F:System.IO.FileMode.Append" />。</exception>
      <exception cref="T:System.ArgumentNullException" vsli:raw="&lt;paramref name=&quot;path&quot; /&gt; is &lt;see langword=&quot;null&quot; /&gt;.">
        <paramref name="path" /> 为 <see langword="null" />。</exception>
      <exception cref="T:System.IO.IOException" vsli:raw="&lt;paramref name=&quot;mode&quot; /&gt; is &lt;see cref=&quot;F:System.IO.FileMode.Create&quot; /&gt;, &lt;see cref=&quot;F:System.IO.FileMode.CreateNew&quot; /&gt;, or &lt;see cref=&quot;F:System.IO.FileMode.Truncate&quot; /&gt;.  &#xA;  &#xA; -or-  &#xA;  &#xA; &lt;paramref name=&quot;mode&quot; /&gt; is &lt;see cref=&quot;F:System.IO.FileMode.OpenOrCreate&quot; /&gt; and the file on disk does not exist.  &#xA;  &#xA; -or-  &#xA;  &#xA; An I/O error occurred.">
        <paramref name="mode" /> 为 <see cref="F:System.IO.FileMode.Create" />、<see cref="F:System.IO.FileMode.CreateNew" /> 或 <see cref="F:System.IO.FileMode.Truncate" />。  
  
- 或 - 
 <paramref name="mode" /> 为 <see cref="F:System.IO.FileMode.OpenOrCreate" /> 且磁盘上的文件不存在。  
  
- 或 - 
出现 I/O 错误。</exception>
      <exception cref="T:System.IO.PathTooLongException" vsli:raw="&lt;paramref name=&quot;path&quot; /&gt; exceeds the maximum length defined by the operating system.">
        <paramref name="path" /> 超过了操作系统定义的最大长度。</exception>
      <exception cref="T:System.Security.SecurityException" vsli:raw="The caller does not have the required permissions for the file.">调用方没有该文件的所需权限。</exception>
      <returns vsli:raw="A memory-mapped file that has the specified access mode.">具有指定访问模式的内存映射文件。</returns>
    </member>
    <member name="M:System.IO.MemoryMappedFiles.MemoryMappedFile.CreateFromFile(System.String,System.IO.FileMode,System.String)">
      <summary vsli:raw="Creates a memory-mapped file that has the specified access mode and name from a file on disk.">基于磁盘上的文件创建一个具有指定访问模式和名称的内存映射文件。</summary>
      <param name="path" vsli:raw="The path to the file to map.">要映射的文件的路径。</param>
      <param name="mode" vsli:raw="Access mode; must be &lt;see cref=&quot;F:System.IO.FileMode.Open&quot; /&gt;.">访问模式；必须为 <see cref="F:System.IO.FileMode.Open" />。</param>
      <param name="mapName" vsli:raw="A name to assign to the memory-mapped file, or &lt;see langword=&quot;null&quot; /&gt; for a &lt;see cref=&quot;T:System.IO.MemoryMappedFiles.MemoryMappedFile&quot; /&gt; that you do not intend to share across processes.">要分配给内存映射文件的名称，或用于你不打算在进程中共享的 <see cref="T:System.IO.MemoryMappedFiles.MemoryMappedFile" /> 的 <see langword="null" />。</param>
      <exception cref="T:System.ArgumentException" vsli:raw="&lt;paramref name=&quot;path&quot; /&gt; is an empty string, contains only white space, or has one or more invalid characters, as defined by the &lt;see cref=&quot;M:System.IO.Path.GetInvalidFileNameChars&quot; /&gt; method.  &#xA;  &#xA; -or-  &#xA;  &#xA; &lt;paramref name=&quot;path&quot; /&gt; refers to an invalid device.  &#xA;  &#xA; -or-  &#xA;  &#xA; &lt;paramref name=&quot;mapName&quot; /&gt; is an empty string.  &#xA;  &#xA; -or-  &#xA;  &#xA; &lt;paramref name=&quot;mode&quot; /&gt; is &lt;see cref=&quot;F:System.IO.FileMode.Append&quot; /&gt;.">
        <paramref name="path" /> 为空字符串，只包含空格，或者包含 <see cref="M:System.IO.Path.GetInvalidFileNameChars" /> 方法定义的一个或多个无效字符。  
  
- 或 - 
 <paramref name="path" /> 引用无效的设备。  
  
- 或 - 
 <paramref name="mapName" /> 是一个空字符串。  
  
- 或 - 
 <paramref name="mode" /> 为 <see cref="F:System.IO.FileMode.Append" />。</exception>
      <exception cref="T:System.ArgumentNullException" vsli:raw="&lt;paramref name=&quot;path&quot; /&gt; is &lt;see langword=&quot;null&quot; /&gt;.">
        <paramref name="path" /> 为 <see langword="null" />。</exception>
      <exception cref="T:System.IO.IOException" vsli:raw="&lt;paramref name=&quot;mode&quot; /&gt; is &lt;see cref=&quot;F:System.IO.FileMode.Create&quot; /&gt;, &lt;see cref=&quot;F:System.IO.FileMode.CreateNew&quot; /&gt;, or &lt;see cref=&quot;F:System.IO.FileMode.Truncate&quot; /&gt;.  &#xA;  &#xA; -or-  &#xA;  &#xA; &lt;paramref name=&quot;mode&quot; /&gt; is &lt;see cref=&quot;F:System.IO.FileMode.OpenOrCreate&quot; /&gt; and the file on disk does not exist.  &#xA;  &#xA; -or-  &#xA;  &#xA; An I/O error occurred.">
        <paramref name="mode" /> 为 <see cref="F:System.IO.FileMode.Create" />、<see cref="F:System.IO.FileMode.CreateNew" /> 或 <see cref="F:System.IO.FileMode.Truncate" />。  
  
- 或 - 
 <paramref name="mode" /> 为 <see cref="F:System.IO.FileMode.OpenOrCreate" /> 且磁盘上的文件不存在。  
  
- 或 - 
出现 I/O 错误。</exception>
      <exception cref="T:System.IO.PathTooLongException" vsli:raw="&lt;paramref name=&quot;path&quot; /&gt; exceeds the maximum length defined by the operating system.">
        <paramref name="path" /> 超过了操作系统定义的最大长度。</exception>
      <exception cref="T:System.Security.SecurityException" vsli:raw="The caller does not have the required permissions for the file.">调用方没有该文件的所需权限。</exception>
      <returns vsli:raw="A memory-mapped file that has the specified name and access mode.">具有指定名称和访问模式的内存映射文件。</returns>
    </member>
    <member name="M:System.IO.MemoryMappedFiles.MemoryMappedFile.CreateFromFile(System.String,System.IO.FileMode,System.String,System.Int64)">
      <summary vsli:raw="Creates a memory-mapped file that has the specified access mode, name, and capacity from a file on disk.">基于磁盘上的文件创建一个具有指定访问模式、名称和容量的内存映射文件。</summary>
      <param name="path" vsli:raw="The path to the file to map.">要映射的文件的路径。</param>
      <param name="mode" vsli:raw="Access mode; can be any of the &lt;see cref=&quot;T:System.IO.FileMode&quot; /&gt; enumeration values except &lt;see cref=&quot;F:System.IO.FileMode.Append&quot; /&gt;.">访问模式；除 <see cref="T:System.IO.FileMode" /> 外，可以是任意 <see cref="F:System.IO.FileMode.Append" /> 枚举值。</param>
      <param name="mapName" vsli:raw="A name to assign to the memory-mapped file, or &lt;see langword=&quot;null&quot; /&gt; for a &lt;see cref=&quot;T:System.IO.MemoryMappedFiles.MemoryMappedFile&quot; /&gt; that you do not intend to share across processes.">要分配给内存映射文件的名称，或用于你不打算在进程中共享的 <see cref="T:System.IO.MemoryMappedFiles.MemoryMappedFile" /> 的 <see langword="null" />。</param>
      <param name="capacity" vsli:raw="The maximum size, in bytes, to allocate to the memory-mapped file. Specify 0 to set the capacity to the size of the file on disk.">要分配给内存映射文件的最大大小（以字节为单位）。 指定 0，以将容量设置为磁盘上文件的大小。</param>
      <exception cref="T:System.ArgumentException" vsli:raw="&lt;paramref name=&quot;path&quot; /&gt; is an empty string, contains only white space, or has one or more invalid characters, as defined by the &lt;see cref=&quot;M:System.IO.Path.GetInvalidFileNameChars&quot; /&gt; method.  &#xA;  &#xA; -or-  &#xA;  &#xA; &lt;paramref name=&quot;path&quot; /&gt; refers to an invalid device.  &#xA;  &#xA; -or-  &#xA;  &#xA; &lt;paramref name=&quot;mapName&quot; /&gt; is an empty string.  &#xA;  &#xA; -or-  &#xA;  &#xA; &lt;paramref name=&quot;mode&quot; /&gt; is &lt;see cref=&quot;F:System.IO.FileMode.Append&quot; /&gt;.">
        <paramref name="path" /> 为空字符串，只包含空格，或者包含 <see cref="M:System.IO.Path.GetInvalidFileNameChars" /> 方法定义的一个或多个无效字符。  
  
- 或 - 
 <paramref name="path" /> 引用无效的设备。  
  
- 或 - 
 <paramref name="mapName" /> 是一个空字符串。  
  
- 或 - 
 <paramref name="mode" /> 为 <see cref="F:System.IO.FileMode.Append" />。</exception>
      <exception cref="T:System.ArgumentNullException" vsli:raw="&lt;paramref name=&quot;path&quot; /&gt; is &lt;see langword=&quot;null&quot; /&gt;.">
        <paramref name="path" /> 为 <see langword="null" />。</exception>
      <exception cref="T:System.ArgumentOutOfRangeException" vsli:raw="&lt;paramref name=&quot;capacity&quot; /&gt; is greater than the size of the logical address space.  &#xA;  &#xA; -or-  &#xA;  &#xA; &lt;paramref name=&quot;capacity&quot; /&gt; is less than zero.  &#xA;  &#xA; -or-  &#xA;  &#xA; &lt;paramref name=&quot;capacity&quot; /&gt; is less than the file size (but not zero).  &#xA;  &#xA; -or-  &#xA;  &#xA; &lt;paramref name=&quot;capacity&quot; /&gt; is zero, and the size of the file on disk is also zero.">
        <paramref name="capacity" /> 大于逻辑地址空间的大小。  
  
- 或 - 
 <paramref name="capacity" /> 小于零。  
  
- 或 - 
 <paramref name="capacity" /> 小于文件大小（但不为零）。  
  
- 或 - 
 <paramref name="capacity" /> 为零，且在磁盘上文件的大小也为零。</exception>
      <exception cref="T:System.IO.IOException" vsli:raw="An I/O error occurred.">出现 I/O 错误。</exception>
      <exception cref="T:System.IO.PathTooLongException" vsli:raw="&lt;paramref name=&quot;path&quot; /&gt; exceeds the maximum length defined by the operating system.">
        <paramref name="path" /> 超过了操作系统定义的最大长度。</exception>
      <exception cref="T:System.Security.SecurityException" vsli:raw="The caller does not have the required permissions for the file.">调用方没有该文件的所需权限。</exception>
      <returns vsli:raw="A memory-mapped file that has the specified characteristics.">具有指定特征的内存映射文件。</returns>
    </member>
    <member name="M:System.IO.MemoryMappedFiles.MemoryMappedFile.CreateFromFile(System.String,System.IO.FileMode,System.String,System.Int64,System.IO.MemoryMappedFiles.MemoryMappedFileAccess)">
      <summary vsli:raw="Creates a memory-mapped file that has the specified access mode, name, capacity, and access type from a file on disk.">基于磁盘上的文件创建一个具有指定访问模式、名称、容量和访问类型的内存映射文件。</summary>
      <param name="path" vsli:raw="The path to the file to map.">要映射的文件的路径。</param>
      <param name="mode" vsli:raw="Access mode; can be any of the &lt;see cref=&quot;T:System.IO.FileMode&quot; /&gt; enumeration values except &lt;see cref=&quot;F:System.IO.FileMode.Append&quot; /&gt;.">访问模式；除 <see cref="T:System.IO.FileMode" /> 外，可以是任意 <see cref="F:System.IO.FileMode.Append" /> 枚举值。</param>
      <param name="mapName" vsli:raw="A name to assign to the memory-mapped file, or &lt;see langword=&quot;null&quot; /&gt; for a &lt;see cref=&quot;T:System.IO.MemoryMappedFiles.MemoryMappedFile&quot; /&gt; that you do not intend to share across processes.">要分配给内存映射文件的名称，或用于你不打算在进程中共享的 <see cref="T:System.IO.MemoryMappedFiles.MemoryMappedFile" /> 的 <see langword="null" />。</param>
      <param name="capacity" vsli:raw="The maximum size, in bytes, to allocate to the memory-mapped file. Specify 0 to set the capacity to the size of the file on disk.">要分配给内存映射文件的最大大小（以字节为单位）。 指定 0，以将容量设置为磁盘上文件的大小。</param>
      <param name="access" vsli:raw="One of the enumeration values that specifies the type of access allowed to the memory-mapped file.">指定内存映射文件允许的访问类型的枚举值之一。</param>
      <exception cref="T:System.ArgumentException" vsli:raw="&lt;paramref name=&quot;mapName&quot; /&gt; is an empty string.  &#xA;  &#xA; -or-  &#xA;  &#xA; &lt;paramref name=&quot;access&quot; /&gt; is not an allowed value.  &#xA;  &#xA; -or-  &#xA;  &#xA; &lt;paramref name=&quot;path&quot; /&gt; specifies an empty file.  &#xA;  &#xA; -or-  &#xA;  &#xA; &lt;paramref name=&quot;access&quot; /&gt; is specified as &lt;see cref=&quot;F:System.IO.MemoryMappedFiles.MemoryMappedFileAccess.Read&quot; /&gt; and capacity is greater than the size of the file indicated by &lt;paramref name=&quot;path&quot; /&gt;.  &#xA;  &#xA; -or-  &#xA;  &#xA; &lt;paramref name=&quot;mode&quot; /&gt; is &lt;see cref=&quot;F:System.IO.FileMode.Append&quot; /&gt;.">
        <paramref name="mapName" /> 是一个空字符串。  
  
- 或 - 
 <paramref name="access" /> 不是一个允许的值。  
  
- 或 - 
 <paramref name="path" /> 指定空的文件。  
  
- 或 - 
 <paramref name="access" /> 指定为 <see cref="F:System.IO.MemoryMappedFiles.MemoryMappedFileAccess.Read" />，容量大于 <paramref name="path" /> 所指示文件的大小。  
  
- 或 - 
 <paramref name="mode" /> 为 <see cref="F:System.IO.FileMode.Append" />。</exception>
      <exception cref="T:System.ArgumentNullException" vsli:raw="&lt;paramref name=&quot;path&quot; /&gt; is &lt;see langword=&quot;null&quot; /&gt;.">
        <paramref name="path" /> 为 <see langword="null" />。</exception>
      <exception cref="T:System.ArgumentOutOfRangeException" vsli:raw="&lt;paramref name=&quot;capacity&quot; /&gt; is greater than the size of the logical address space.  &#xA;  &#xA; -or-  &#xA;  &#xA; &lt;paramref name=&quot;capacity&quot; /&gt; is less than zero.  &#xA;  &#xA; -or-  &#xA;  &#xA; &lt;paramref name=&quot;capacity&quot; /&gt; is less than the file size (but not zero).  &#xA;  &#xA; -or-  &#xA;  &#xA; &lt;paramref name=&quot;capacity&quot; /&gt; is zero, and the size of the file on disk is also zero.  &#xA;  &#xA; -or-  &#xA;  &#xA; &lt;paramref name=&quot;access&quot; /&gt; is not a defined &lt;see cref=&quot;T:System.IO.MemoryMappedFiles.MemoryMappedFileAccess&quot; /&gt; value.  &#xA;  &#xA; -or-  &#xA;  &#xA; The size of the file indicated by &lt;paramref name=&quot;path&quot; /&gt; is greater than &lt;paramref name=&quot;capacity&quot; /&gt;.">
        <paramref name="capacity" /> 大于逻辑地址空间的大小。  
  
- 或 - 
 <paramref name="capacity" /> 小于零。  
  
- 或 - 
 <paramref name="capacity" /> 小于文件大小（但不为零）。  
  
- 或 - 
 <paramref name="capacity" /> 为零，且在磁盘上文件的大小也为零。  
  
- 或 - 
 <paramref name="access" /> 不是定义的 <see cref="T:System.IO.MemoryMappedFiles.MemoryMappedFileAccess" /> 值。  
  
- 或 - 
<paramref name="path" /> 指示的文件大小大于 <paramref name="capacity" />。</exception>
      <exception cref="T:System.IO.IOException" vsli:raw="-or-  &#xA;  &#xA; An I/O error occurred.">- 或 -  
  
 出现 I/O 错误。</exception>
      <exception cref="T:System.IO.PathTooLongException" vsli:raw="&lt;paramref name=&quot;path&quot; /&gt; exceeds the maximum length defined by the operating system.">
        <paramref name="path" /> 超过了操作系统定义的最大长度。</exception>
      <exception cref="T:System.Security.SecurityException" vsli:raw="The caller does not have the required permissions for the file.">调用方没有该文件的所需权限。</exception>
      <returns vsli:raw="A memory-mapped file that has the specified characteristics.">具有指定特征的内存映射文件。</returns>
    </member>
    <member name="M:System.IO.MemoryMappedFiles.MemoryMappedFile.CreateNew(System.String,System.Int64)">
      <summary vsli:raw="Creates a memory-mapped file that has the specified capacity in system memory.">在系统内存中创建一个具有指定容量的内存映射文件。</summary>
      <param name="mapName" vsli:raw="A name to assign to the memory-mapped file, or &lt;see langword=&quot;null&quot; /&gt; for a &lt;see cref=&quot;T:System.IO.MemoryMappedFiles.MemoryMappedFile&quot; /&gt; that you do not intend to share across processes.">要分配给内存映射文件的名称，或用于你不打算在进程中共享的 <see cref="T:System.IO.MemoryMappedFiles.MemoryMappedFile" /> 的 <see langword="null" />。</param>
      <param name="capacity" vsli:raw="The maximum size, in bytes, to allocate to the memory-mapped file.">要分配给内存映射文件的最大大小（以字节为单位）。</param>
      <exception cref="T:System.ArgumentException" vsli:raw="&lt;paramref name=&quot;mapName&quot; /&gt; is an empty string.">
        <paramref name="mapName" /> 是一个空字符串。</exception>
      <exception cref="T:System.ArgumentOutOfRangeException" vsli:raw="&lt;paramref name=&quot;capacity&quot; /&gt; is less than or equal to zero.">
        <paramref name="capacity" /> 小于或等于零。</exception>
      <exception cref="T:System.PlatformNotSupportedException" vsli:raw=".NET Core and .NET 5+ only: Calls to the &lt;c&gt;CreateNew&lt;/c&gt; method with a named memory mapped file (that is, a non-null &lt;paramref name=&quot;mapName&quot; /&gt;) are supported on Windows operating systems only.">仅适用于 .NET Core：使用已命名的内存映射文件 <c>调用方法 (即，在</c><paramref name="mapName" /> Windows 操作系统上仅支持非 null) 。</exception>
      <returns vsli:raw="A memory-mapped file that has the specified name and capacity.">具有指定名称和容量的内存映射文件。</returns>
    </member>
    <member name="M:System.IO.MemoryMappedFiles.MemoryMappedFile.CreateNew(System.String,System.Int64,System.IO.MemoryMappedFiles.MemoryMappedFileAccess)">
      <summary vsli:raw="Creates a memory-mapped file that has the specified capacity and access type in system memory.">在系统内存中创建一个具有指定容量和访问类型的内存映射文件。</summary>
      <param name="mapName" vsli:raw="A name to assign to the memory-mapped file, or &lt;see langword=&quot;null&quot; /&gt; for a &lt;see cref=&quot;T:System.IO.MemoryMappedFiles.MemoryMappedFile&quot; /&gt; that you do not intend to share across processes.">要分配给内存映射文件的名称，或用于你不打算在进程中共享的 <see cref="T:System.IO.MemoryMappedFiles.MemoryMappedFile" /> 的 <see langword="null" />。</param>
      <param name="capacity" vsli:raw="The maximum size, in bytes, to allocate to the memory-mapped file.">要分配给内存映射文件的最大大小（以字节为单位）。</param>
      <param name="access" vsli:raw="One of the enumeration values that specifies the type of access allowed to the memory-mapped file. The default is &lt;see cref=&quot;F:System.IO.MemoryMappedFiles.MemoryMappedFileAccess.ReadWrite&quot; /&gt;.">指定内存映射文件允许的访问类型的枚举值之一。 默认值为 <see cref="F:System.IO.MemoryMappedFiles.MemoryMappedFileAccess.ReadWrite" />。</param>
      <exception cref="T:System.ArgumentException" vsli:raw="&lt;paramref name=&quot;mapName&quot; /&gt; is an empty string.  &#xA;  &#xA; -or-  &#xA;  &#xA; &lt;paramref name=&quot;access&quot; /&gt; is set to write-only with the &lt;see cref=&quot;F:System.IO.MemoryMappedFiles.MemoryMappedFileAccess.Write&quot; /&gt; enumeration value.">
        <paramref name="mapName" /> 是一个空字符串。  
  
- 或 - 
 通过 <see cref="F:System.IO.MemoryMappedFiles.MemoryMappedFileAccess.Write" /> 枚举值将 <paramref name="access" /> 设置为只写。</exception>
      <exception cref="T:System.ArgumentOutOfRangeException" vsli:raw="&lt;paramref name=&quot;capacity&quot; /&gt; is less than or equal to zero.  &#xA;  &#xA; -or-  &#xA;  &#xA; &lt;paramref name=&quot;access&quot; /&gt; is not a valid &lt;see cref=&quot;T:System.IO.MemoryMappedFiles.MemoryMappedFileAccess&quot; /&gt; enumeration value.">
        <paramref name="capacity" /> 小于或等于零。  
  
- 或 - 
 <paramref name="access" /> 不是有效的 <see cref="T:System.IO.MemoryMappedFiles.MemoryMappedFileAccess" /> 枚举值。</exception>
      <exception cref="T:System.PlatformNotSupportedException" vsli:raw=".NET Core and .NET 5+ only: Calls to the &lt;c&gt;CreateNew&lt;/c&gt; method with a named memory mapped file (that is, a non-null &lt;paramref name=&quot;mapName&quot; /&gt;) are supported on Windows operating systems only.">仅适用于 .NET Core：使用已命名的内存映射文件 <c>调用方法 (即，在</c><paramref name="mapName" /> Windows 操作系统上仅支持非 null) 。</exception>
      <returns vsli:raw="A memory-mapped file that has the specified characteristics.">具有指定特征的内存映射文件。</returns>
    </member>
    <member name="M:System.IO.MemoryMappedFiles.MemoryMappedFile.CreateNew(System.String,System.Int64,System.IO.MemoryMappedFiles.MemoryMappedFileAccess,System.IO.MemoryMappedFiles.MemoryMappedFileOptions,System.IO.HandleInheritability)">
      <summary vsli:raw="Creates a memory-mapped file that has the specified name, capacity, access type, memory allocation options and inheritability.">创建一个具有指定名称、容量、访问类型、内存分配选项和继承性的内存映射文件。</summary>
      <param name="mapName" vsli:raw="A name to assign to the memory-mapped file, or &lt;see langword=&quot;null&quot; /&gt; for a &lt;see cref=&quot;T:System.IO.MemoryMappedFiles.MemoryMappedFile&quot; /&gt; that you do not intend to share across processes.">要分配给内存映射文件的名称，或用于你不打算在进程中共享的 <see cref="T:System.IO.MemoryMappedFiles.MemoryMappedFile" /> 的 <see langword="null" />。</param>
      <param name="capacity" vsli:raw="The maximum size, in bytes, to allocate to the memory-mapped file.">要分配给内存映射文件的最大大小（以字节为单位）。</param>
      <param name="access" vsli:raw="One of the enumeration values that specifies the type of access allowed to the memory-mapped file. The default is &lt;see cref=&quot;F:System.IO.MemoryMappedFiles.MemoryMappedFileAccess.ReadWrite&quot; /&gt;.">指定内存映射文件允许的访问类型的枚举值之一。 默认值为 <see cref="F:System.IO.MemoryMappedFiles.MemoryMappedFileAccess.ReadWrite" />。</param>
      <param name="options" vsli:raw="A bitwise combination of enumeration values that specifies memory allocation options for the memory-mapped file.">枚举值的按位组合，用于为内存映射文件指定内存分配选项。</param>
      <param name="inheritability" vsli:raw="A value that specifies whether a handle to the memory-mapped file can be inherited by a child process. The default is &lt;see cref=&quot;F:System.IO.HandleInheritability.None&quot; /&gt;.">一个值，该值指定内存映射文件的句柄能否由子进程继承。 默认值为 <see cref="F:System.IO.HandleInheritability.None" />。</param>
      <exception cref="T:System.ArgumentException" vsli:raw="&lt;paramref name=&quot;mapName&quot; /&gt; is an empty string.  &#xA;  &#xA; -or-  &#xA;  &#xA; &lt;paramref name=&quot;access&quot; /&gt; is set to write-only with the &lt;see cref=&quot;F:System.IO.MemoryMappedFiles.MemoryMappedFileAccess.Write&quot; /&gt; enumeration value.">
        <paramref name="mapName" /> 是一个空字符串。  
  
- 或 - 
 通过 <see cref="F:System.IO.MemoryMappedFiles.MemoryMappedFileAccess.Write" /> 枚举值将 <paramref name="access" /> 设置为只写。</exception>
      <exception cref="T:System.ArgumentOutOfRangeException" vsli:raw="&lt;paramref name=&quot;capacity&quot; /&gt; is less than or equal to zero.  &#xA;  &#xA; -or-  &#xA;  &#xA; &lt;paramref name=&quot;access&quot; /&gt; is not a valid &lt;see cref=&quot;T:System.IO.MemoryMappedFiles.MemoryMappedFileAccess&quot; /&gt; enumeration value.  &#xA;  &#xA; -or-  &#xA;  &#xA; &lt;paramref name=&quot;inheritability&quot; /&gt; is not a valid &lt;see cref=&quot;T:System.IO.HandleInheritability&quot; /&gt; value.">
        <paramref name="capacity" /> 小于或等于零。  
  
- 或 - 
 <paramref name="access" /> 不是有效的 <see cref="T:System.IO.MemoryMappedFiles.MemoryMappedFileAccess" /> 枚举值。  
  
- 或 - 
 <paramref name="inheritability" /> 不是有效的 <see cref="T:System.IO.HandleInheritability" /> 值。</exception>
      <exception cref="T:System.PlatformNotSupportedException" vsli:raw=".NET Core and .NET 5+ only: Calls to the &lt;c&gt;CreateNew&lt;/c&gt; method with a named memory mapped file (that is, a non-null &lt;paramref name=&quot;mapName&quot; /&gt;) are supported on Windows operating systems only.">仅适用于 .NET Core：使用已命名的内存映射文件 <c>调用方法 (即，在</c><paramref name="mapName" /> Windows 操作系统上仅支持非 null) 。</exception>
      <returns vsli:raw="A memory-mapped file that has the specified characteristics.">具有指定特征的内存映射文件。</returns>
    </member>
    <member name="M:System.IO.MemoryMappedFiles.MemoryMappedFile.CreateOrOpen(System.String,System.Int64)">
      <summary vsli:raw="Creates or opens a memory-mapped file that has the specified name and capacity in system memory.">在系统内存中创建或打开具有指定名称和容量的内存映射文件。</summary>
      <param name="mapName" vsli:raw="The name of the memory-mapped file.">内存映射文件的名称。</param>
      <param name="capacity" vsli:raw="The maximum size, in bytes, to allocate to the memory-mapped file.">要分配给内存映射文件的最大大小（以字节为单位）。</param>
      <exception cref="T:System.ArgumentException" vsli:raw="&lt;paramref name=&quot;mapName&quot; /&gt; is an empty string.">
        <paramref name="mapName" /> 是一个空字符串。</exception>
      <exception cref="T:System.ArgumentOutOfRangeException" vsli:raw="&lt;paramref name=&quot;capacity&quot; /&gt; is greater than the size of the logical address space.  &#xA;  &#xA; -or-  &#xA;  &#xA; &lt;paramref name=&quot;capacity&quot; /&gt; is less than or equal to zero.">
        <paramref name="capacity" /> 大于逻辑地址空间的大小。  
  
- 或 - 
 <paramref name="capacity" /> 小于或等于零。</exception>
      <returns vsli:raw="A memory-mapped file that has the specified name and size.">具有指定名称和大小的内存映射文件。</returns>
    </member>
    <member name="M:System.IO.MemoryMappedFiles.MemoryMappedFile.CreateOrOpen(System.String,System.Int64,System.IO.MemoryMappedFiles.MemoryMappedFileAccess)">
      <summary vsli:raw="Creates or opens a memory-mapped file that has the specified name, capacity and access type in system memory.">在系统内存中创建或打开具有指定名称、容量和访问类型的内存映射文件。</summary>
      <param name="mapName" vsli:raw="The name of the memory-mapped file.">内存映射文件的名称。</param>
      <param name="capacity" vsli:raw="The maximum size, in bytes, to allocate to the memory-mapped file.">要分配给内存映射文件的最大大小（以字节为单位）。</param>
      <param name="access" vsli:raw="One of the enumeration values that specifies the type of access allowed to the memory-mapped file. The default is &lt;see cref=&quot;F:System.IO.MemoryMappedFiles.MemoryMappedFileAccess.ReadWrite&quot; /&gt;.">指定内存映射文件允许的访问类型的枚举值之一。 默认值为 <see cref="F:System.IO.MemoryMappedFiles.MemoryMappedFileAccess.ReadWrite" />。</param>
      <exception cref="T:System.ArgumentNullException" vsli:raw="&lt;paramref name=&quot;mapName&quot; /&gt; is &lt;see langword=&quot;null&quot; /&gt;.">
        <paramref name="mapName" /> 为 <see langword="null" />。</exception>
      <exception cref="T:System.ArgumentException" vsli:raw="&lt;paramref name=&quot;mapName&quot; /&gt; is an empty string.  &#xA;  &#xA; -or-  &#xA;  &#xA; &lt;paramref name=&quot;access&quot; /&gt; is set to write-only with the &lt;see cref=&quot;F:System.IO.MemoryMappedFiles.MemoryMappedFileAccess.Write&quot; /&gt; enumeration value.">
        <paramref name="mapName" /> 是一个空字符串。  
  
- 或 - 
 通过 <see cref="F:System.IO.MemoryMappedFiles.MemoryMappedFileAccess.Write" /> 枚举值将 <paramref name="access" /> 设置为只写。</exception>
      <exception cref="T:System.ArgumentOutOfRangeException" vsli:raw="&lt;paramref name=&quot;capacity&quot; /&gt; is greater than the size of the logical address space.  &#xA;  &#xA; -or-  &#xA;  &#xA; &lt;paramref name=&quot;capacity&quot; /&gt; is less than or equal to zero.  &#xA;  &#xA; -or-  &#xA;  &#xA; &lt;paramref name=&quot;access&quot; /&gt; is not a valid &lt;see cref=&quot;T:System.IO.MemoryMappedFiles.MemoryMappedFileAccess&quot; /&gt; enumeration value.">
        <paramref name="capacity" /> 大于逻辑地址空间的大小。  
  
- 或 - 
 <paramref name="capacity" /> 小于或等于零。  
  
- 或 - 
 <paramref name="access" /> 不是有效的 <see cref="T:System.IO.MemoryMappedFiles.MemoryMappedFileAccess" /> 枚举值。</exception>
      <exception cref="T:System.UnauthorizedAccessException" vsli:raw="The operating system denied the specified access to the file; for example, access is set to &lt;see cref=&quot;F:System.IO.MemoryMappedFiles.MemoryMappedFileAccess.Write&quot; /&gt; or &lt;see cref=&quot;F:System.IO.MemoryMappedFiles.MemoryMappedFileAccess.ReadWrite&quot; /&gt;, but the file or directory is read-only.">操作系统不允许对文件的指定访问；例如，访问权限设置为 <see cref="F:System.IO.MemoryMappedFiles.MemoryMappedFileAccess.Write" /> 或 <see cref="F:System.IO.MemoryMappedFiles.MemoryMappedFileAccess.ReadWrite" />，但文件或目录为只读。</exception>
      <returns vsli:raw="A memory-mapped file that has the specified characteristics.">具有指定特征的内存映射文件。</returns>
    </member>
    <member name="M:System.IO.MemoryMappedFiles.MemoryMappedFile.CreateOrOpen(System.String,System.Int64,System.IO.MemoryMappedFiles.MemoryMappedFileAccess,System.IO.MemoryMappedFiles.MemoryMappedFileOptions,System.IO.HandleInheritability)">
      <summary vsli:raw="Creates a new empty memory mapped file or opens an existing memory mapped file if one exists with the same name. If opening an existing file, the capacity, options, and memory arguments will be ignored.">创建一个新的空内存映射文件或打开一个现有的内存映射文件（如果存在同名的内存映射文件）。 如果打开现有的文件，则会忽略容量、选项和内存参数。</summary>
      <param name="mapName" vsli:raw="The name of the memory-mapped file.">内存映射文件的名称。</param>
      <param name="capacity" vsli:raw="The maximum size, in bytes, to allocate to the memory-mapped file.">要分配给内存映射文件的最大大小（以字节为单位）。</param>
      <param name="access" vsli:raw="One of the enumeration values that specifies the type of access allowed to the memory-mapped file. The default is &lt;see cref=&quot;F:System.IO.MemoryMappedFiles.MemoryMappedFileAccess.ReadWrite&quot; /&gt;.">指定内存映射文件允许的访问类型的枚举值之一。 默认值为 <see cref="F:System.IO.MemoryMappedFiles.MemoryMappedFileAccess.ReadWrite" />。</param>
      <param name="options" vsli:raw="A bitwise combination of values that indicate the memory allocation options to apply to the file.">值的按位组合，它指示要应用到文件的内存分配选项。</param>
      <param name="inheritability" vsli:raw="A value that specifies whether a handle to the memory-mapped file can be inherited by a child process. The default is &lt;see cref=&quot;F:System.IO.HandleInheritability.None&quot; /&gt;.">一个值，该值指定内存映射文件的句柄能否由子进程继承。 默认值为 <see cref="F:System.IO.HandleInheritability.None" />。</param>
      <exception cref="T:System.ArgumentNullException" vsli:raw="&lt;paramref name=&quot;mapName&quot; /&gt; is &lt;see langword=&quot;null&quot; /&gt;.">
        <paramref name="mapName" /> 为 <see langword="null" />。</exception>
      <exception cref="T:System.ArgumentException" vsli:raw="&lt;paramref name=&quot;mapName&quot; /&gt; is an empty string.  &#xA;  &#xA; -or-  &#xA;  &#xA; &lt;paramref name=&quot;access&quot; /&gt; is set to write-only with the &lt;see cref=&quot;F:System.IO.MemoryMappedFiles.MemoryMappedFileAccess.Write&quot; /&gt; enumeration value.">
        <paramref name="mapName" /> 是一个空字符串。  
  
- 或 - 
 通过 <see cref="F:System.IO.MemoryMappedFiles.MemoryMappedFileAccess.Write" /> 枚举值将 <paramref name="access" /> 设置为只写。</exception>
      <exception cref="T:System.ArgumentOutOfRangeException" vsli:raw="&lt;paramref name=&quot;capacity&quot; /&gt; is greater than the size of the logical address space.  &#xA;  &#xA; -or-  &#xA;  &#xA; &lt;paramref name=&quot;capacity&quot; /&gt; is less than or equal to zero.  &#xA;  &#xA; -or-  &#xA;  &#xA; &lt;paramref name=&quot;access&quot; /&gt; is not a valid &lt;see cref=&quot;T:System.IO.MemoryMappedFiles.MemoryMappedFileAccess&quot; /&gt; enumeration value.  &#xA;  &#xA; -or-  &#xA;  &#xA; &lt;paramref name=&quot;inheritability&quot; /&gt; is not a valid &lt;see cref=&quot;T:System.IO.HandleInheritability&quot; /&gt; enumeration value.">
        <paramref name="capacity" /> 大于逻辑地址空间的大小。  
  
- 或 - 
 <paramref name="capacity" /> 小于或等于零。  
  
- 或 - 
 <paramref name="access" /> 不是有效的 <see cref="T:System.IO.MemoryMappedFiles.MemoryMappedFileAccess" /> 枚举值。  
  
- 或 - 
 <paramref name="inheritability" /> 不是有效的 <see cref="T:System.IO.HandleInheritability" /> 枚举值。</exception>
      <exception cref="T:System.UnauthorizedAccessException" vsli:raw="The operating system denied the specified access to the file; for example, access is set to &lt;see cref=&quot;F:System.IO.MemoryMappedFiles.MemoryMappedFileAccess.Write&quot; /&gt; or &lt;see cref=&quot;F:System.IO.MemoryMappedFiles.MemoryMappedFileAccess.ReadWrite&quot; /&gt;, but the file or directory is read-only.">操作系统不允许对文件的指定访问；例如，访问权限设置为 <see cref="F:System.IO.MemoryMappedFiles.MemoryMappedFileAccess.Write" /> 或 <see cref="F:System.IO.MemoryMappedFiles.MemoryMappedFileAccess.ReadWrite" />，但文件或目录为只读。</exception>
      <returns vsli:raw="A memory-mapped file that has the specified characteristics.">具有指定特征的内存映射文件。</returns>
    </member>
    <member name="M:System.IO.MemoryMappedFiles.MemoryMappedFile.CreateViewAccessor">
      <summary vsli:raw="Creates a &lt;see cref=&quot;T:System.IO.MemoryMappedFiles.MemoryMappedViewAccessor&quot; /&gt; that maps to a view of the memory-mapped file.">创建映射到内存映射文件视图的 <see cref="T:System.IO.MemoryMappedFiles.MemoryMappedViewAccessor" />。</summary>
      <exception cref="T:System.UnauthorizedAccessException" vsli:raw="Access to the memory-mapped file is unauthorized.">对内存映射文件的访问控制未获授权。</exception>
      <returns vsli:raw="A randomly accessible block of memory.">可随机访问的内存块。</returns>
    </member>
    <member name="M:System.IO.MemoryMappedFiles.MemoryMappedFile.CreateViewAccessor(System.Int64,System.Int64)">
      <summary vsli:raw="Creates a &lt;see cref=&quot;T:System.IO.MemoryMappedFiles.MemoryMappedViewAccessor&quot; /&gt; that maps to a view of the memory-mapped file, and that has the specified offset and size.">创建一个 <see cref="T:System.IO.MemoryMappedFiles.MemoryMappedViewAccessor" />，它映射到内存映射文件的视图并具有指定的偏移和大小。</summary>
      <param name="offset" vsli:raw="The byte at which to start the view.">启动此视图的字节位置。</param>
      <param name="size" vsli:raw="The size of the view. Specify 0 (zero) to create a view that starts at &lt;paramref name=&quot;offset&quot; /&gt; and ends approximately at the end of the memory-mapped file.">视图的大小。 指定 0（零）可创建从 <paramref name="offset" /> 开始，大约在内存映射文件结尾处结束的视图。</param>
      <exception cref="T:System.ArgumentOutOfRangeException" vsli:raw="&lt;paramref name=&quot;offset&quot; /&gt; or &lt;paramref name=&quot;size&quot; /&gt; is a negative value.  &#xA;  &#xA; -or-  &#xA;  &#xA; &lt;paramref name=&quot;size&quot; /&gt; is greater than the logical address space.">
        <paramref name="offset" /> 或 <paramref name="size" /> 是负值。  
  
- 或 - 
 <paramref name="size" /> 大于逻辑地址空间。</exception>
      <exception cref="T:System.UnauthorizedAccessException" vsli:raw="Access to the memory-mapped file is unauthorized.">对内存映射文件的访问控制未获授权。</exception>
      <exception cref="T:System.IO.IOException" vsli:raw="An I/O error occurred.">出现 I/O 错误。</exception>
      <returns vsli:raw="A randomly accessible block of memory.">可随机访问的内存块。</returns>
    </member>
    <member name="M:System.IO.MemoryMappedFiles.MemoryMappedFile.CreateViewAccessor(System.Int64,System.Int64,System.IO.MemoryMappedFiles.MemoryMappedFileAccess)">
      <summary vsli:raw="Creates a &lt;see cref=&quot;T:System.IO.MemoryMappedFiles.MemoryMappedViewAccessor&quot; /&gt; that maps to a view of the memory-mapped file, and that has the specified offset, size, and access restrictions.">创建一个 <see cref="T:System.IO.MemoryMappedFiles.MemoryMappedViewAccessor" />，它映射到内存映射文件的视图并具有指定的偏移、大小和访问限制。</summary>
      <param name="offset" vsli:raw="The byte at which to start the view.">启动此视图的字节位置。</param>
      <param name="size" vsli:raw="The size of the view. Specify 0 (zero) to create a view that starts at &lt;paramref name=&quot;offset&quot; /&gt; and ends approximately at the end of the memory-mapped file.">视图的大小。 指定 0（零）可创建从 <paramref name="offset" /> 开始，大约在内存映射文件结尾处结束的视图。</param>
      <param name="access" vsli:raw="One of the enumeration values that specifies the type of access allowed to the memory-mapped file. The default is &lt;see cref=&quot;F:System.IO.MemoryMappedFiles.MemoryMappedFileAccess.ReadWrite&quot; /&gt;.">指定内存映射文件允许的访问类型的枚举值之一。 默认值为 <see cref="F:System.IO.MemoryMappedFiles.MemoryMappedFileAccess.ReadWrite" />。</param>
      <exception cref="T:System.ArgumentOutOfRangeException" vsli:raw="&lt;paramref name=&quot;offset&quot; /&gt; or &lt;paramref name=&quot;size&quot; /&gt; is a negative value.  &#xA;  &#xA; -or-  &#xA;  &#xA; &lt;paramref name=&quot;size&quot; /&gt; is greater than the logical address space.">
        <paramref name="offset" /> 或 <paramref name="size" /> 是负值。  
  
- 或 - 
 <paramref name="size" /> 大于逻辑地址空间。</exception>
      <exception cref="T:System.UnauthorizedAccessException" vsli:raw="&lt;paramref name=&quot;access&quot; /&gt; is invalid for the memory-mapped file.">
        <paramref name="access" /> 对于内存映射文件无效。</exception>
      <exception cref="T:System.IO.IOException" vsli:raw="An I/O error occurred.">出现 I/O 错误。</exception>
      <returns vsli:raw="A randomly accessible block of memory.">可随机访问的内存块。</returns>
    </member>
    <member name="M:System.IO.MemoryMappedFiles.MemoryMappedFile.CreateViewStream">
      <summary vsli:raw="Creates a stream that maps to a view of the memory-mapped file.">创建映射到内存映射文件视图的流。</summary>
      <exception cref="T:System.UnauthorizedAccessException" vsli:raw="Access to the memory-mapped file is unauthorized.">对内存映射文件的访问控制未获授权。</exception>
      <returns vsli:raw="A stream of memory.">内存流。</returns>
    </member>
    <member name="M:System.IO.MemoryMappedFiles.MemoryMappedFile.CreateViewStream(System.Int64,System.Int64)">
      <summary vsli:raw="Creates a stream that maps to a view of the memory-mapped file, and that has the specified offset and size.">创建一个流，它映射到内存映射文件的视图并具有指定的偏移和大小。</summary>
      <param name="offset" vsli:raw="The byte at which to start the view.">启动此视图的字节位置。</param>
      <param name="size" vsli:raw="The size of the view. Specify 0 (zero) to create a view that starts at &lt;paramref name=&quot;offset&quot; /&gt; and ends approximately at the end of the memory-mapped file.">视图的大小。 指定 0（零）可创建从 <paramref name="offset" /> 开始，大约在内存映射文件结尾处结束的视图。</param>
      <exception cref="T:System.ArgumentOutOfRangeException" vsli:raw="&lt;paramref name=&quot;offset&quot; /&gt; or &lt;paramref name=&quot;size&quot; /&gt; is a negative value.  &#xA;  &#xA; -or-  &#xA;  &#xA; &lt;paramref name=&quot;size&quot; /&gt; is greater than the logical address space.">
        <paramref name="offset" /> 或 <paramref name="size" /> 是负值。  
  
- 或 - 
 <paramref name="size" /> 大于逻辑地址空间。</exception>
      <exception cref="T:System.UnauthorizedAccessException" vsli:raw="Access to the memory-mapped file is unauthorized.">对内存映射文件的访问控制未获授权。</exception>
      <exception cref="T:System.IO.IOException" vsli:raw="&lt;paramref name=&quot;size&quot; /&gt; is greater than the total virtual memory.">
        <paramref name="size" /> 大于总虚拟内存。</exception>
      <returns vsli:raw="A stream of memory that has the specified offset and size.">具有指定偏移和大小的内存流。</returns>
    </member>
    <member name="M:System.IO.MemoryMappedFiles.MemoryMappedFile.CreateViewStream(System.Int64,System.Int64,System.IO.MemoryMappedFiles.MemoryMappedFileAccess)">
      <summary vsli:raw="Creates a stream that maps to a view of the memory-mapped file, and that has the specified offset, size, and access type.">创建一个流，它映射到内存映射文件的视图，并具有指定的偏移、大小和访问类型。</summary>
      <param name="offset" vsli:raw="The byte at which to start the view.">启动此视图的字节位置。</param>
      <param name="size" vsli:raw="The size of the view. Specify 0 (zero) to create a view that starts at &lt;paramref name=&quot;offset&quot; /&gt; and ends approximately at the end of the memory-mapped file.">视图的大小。 指定 0（零）可创建从 <paramref name="offset" /> 开始，大约在内存映射文件结尾处结束的视图。</param>
      <param name="access" vsli:raw="One of the enumeration values that specifies the type of access allowed to the memory-mapped file. The default is &lt;see cref=&quot;F:System.IO.MemoryMappedFiles.MemoryMappedFileAccess.ReadWrite&quot; /&gt;.">指定内存映射文件允许的访问类型的枚举值之一。 默认值为 <see cref="F:System.IO.MemoryMappedFiles.MemoryMappedFileAccess.ReadWrite" />。</param>
      <exception cref="T:System.ArgumentOutOfRangeException" vsli:raw="&lt;paramref name=&quot;offset&quot; /&gt; or &lt;paramref name=&quot;size&quot; /&gt; is a negative value.  &#xA;  &#xA; -or-  &#xA;  &#xA; &lt;paramref name=&quot;size&quot; /&gt; is greater than the logical address space.  &#xA;  &#xA; -or-  &#xA;  &#xA; &lt;paramref name=&quot;access&quot; /&gt; is not a valid &lt;see cref=&quot;T:System.IO.MemoryMappedFiles.MemoryMappedFileAccess&quot; /&gt; enumeration value.">
        <paramref name="offset" /> 或 <paramref name="size" /> 是负值。  
  
- 或 - 
 <paramref name="size" /> 大于逻辑地址空间。  
  
- 或 - 
 <paramref name="access" /> 不是有效的 <see cref="T:System.IO.MemoryMappedFiles.MemoryMappedFileAccess" /> 枚举值。</exception>
      <exception cref="T:System.UnauthorizedAccessException" vsli:raw="&lt;paramref name=&quot;access&quot; /&gt; is invalid for the memory-mapped file.">
        <paramref name="access" /> 对于内存映射文件无效。</exception>
      <exception cref="T:System.IO.IOException" vsli:raw="&lt;paramref name=&quot;size&quot; /&gt; is greater than the total virtual memory.  &#xA;  &#xA; -or-  &#xA;  &#xA; &lt;paramref name=&quot;access&quot; /&gt; is invalid for the memory-mapped file.">
        <paramref name="size" /> 大于总虚拟内存。  
  
- 或 - 
 <paramref name="access" /> 对于内存映射文件无效。</exception>
      <returns vsli:raw="A stream of memory that has the specified characteristics.">具有指定特征的内存流。</returns>
    </member>
    <member name="M:System.IO.MemoryMappedFiles.MemoryMappedFile.Dispose">
      <summary vsli:raw="Releases all resources used by the &lt;see cref=&quot;T:System.IO.MemoryMappedFiles.MemoryMappedFile&quot; /&gt;.">释放由 <see cref="T:System.IO.MemoryMappedFiles.MemoryMappedFile" /> 使用的所有资源。</summary>
    </member>
    <member name="M:System.IO.MemoryMappedFiles.MemoryMappedFile.Dispose(System.Boolean)">
      <summary vsli:raw="Releases the unmanaged resources used by the &lt;see cref=&quot;T:System.IO.MemoryMappedFiles.MemoryMappedFile&quot; /&gt; and optionally releases the managed resources.">释放由 <see cref="T:System.IO.MemoryMappedFiles.MemoryMappedFile" /> 占用的非托管资源，还可以另外再释放托管资源。</summary>
      <param name="disposing" vsli:raw="&lt;see langword=&quot;true&quot; /&gt; to release both managed and unmanaged resources; &lt;see langword=&quot;false&quot; /&gt; to release only unmanaged resources.">若要释放托管资源和非托管资源，则为 <see langword="true" />；若仅释放非托管资源，则为 <see langword="false" />。</param>
    </member>
    <member name="M:System.IO.MemoryMappedFiles.MemoryMappedFile.OpenExisting(System.String)">
      <summary vsli:raw="Opens an existing memory-mapped file that has the specified name in system memory.">在系统内存中打开一个具有指定名称的现有内存映射文件。</summary>
      <param name="mapName" vsli:raw="The name of the memory-mapped file.">内存映射文件的名称。</param>
      <exception cref="T:System.ArgumentNullException" vsli:raw="&lt;paramref name=&quot;mapName&quot; /&gt; is &lt;see langword=&quot;null&quot; /&gt;.">
        <paramref name="mapName" /> 为 <see langword="null" />。</exception>
      <exception cref="T:System.ArgumentException" vsli:raw="&lt;paramref name=&quot;mapName&quot; /&gt; is an empty string.">
        <paramref name="mapName" /> 是一个空字符串。</exception>
      <exception cref="T:System.IO.FileNotFoundException" vsli:raw="The file specified for &lt;paramref name=&quot;mapName&quot; /&gt; does not exist.">为 <paramref name="mapName" /> 指定的文件不存在。</exception>
      <returns vsli:raw="A memory-mapped file that has the specified name.">具有指定名称的内存映射文件。</returns>
    </member>
    <member name="M:System.IO.MemoryMappedFiles.MemoryMappedFile.OpenExisting(System.String,System.IO.MemoryMappedFiles.MemoryMappedFileRights)">
      <summary vsli:raw="Opens an existing memory-mapped file that has the specified name and access rights in system memory.">在系统内存中打开一个具有指定名称和访问权限的现有内存映射文件。</summary>
      <param name="mapName" vsli:raw="The name of the memory-mapped file to open.">要打开的内存映射文件的名称。</param>
      <param name="desiredAccessRights" vsli:raw="One of the enumeration values that specifies the access rights to apply to the memory-mapped file.">指定要应用于内存映射文件的访问权限的枚举值之一。</param>
      <exception cref="T:System.ArgumentNullException" vsli:raw="&lt;paramref name=&quot;mapName&quot; /&gt; is &lt;see langword=&quot;null&quot; /&gt;.">
        <paramref name="mapName" /> 为 <see langword="null" />。</exception>
      <exception cref="T:System.ArgumentException" vsli:raw="&lt;paramref name=&quot;mapName&quot; /&gt; is an empty string.">
        <paramref name="mapName" /> 是一个空字符串。</exception>
      <exception cref="T:System.ArgumentOutOfRangeException" vsli:raw="&lt;paramref name=&quot;desiredAccessRights&quot; /&gt; is not a valid &lt;see cref=&quot;T:System.IO.MemoryMappedFiles.MemoryMappedFileRights&quot; /&gt; enumeration value.">
        <paramref name="desiredAccessRights" /> 不是有效的 <see cref="T:System.IO.MemoryMappedFiles.MemoryMappedFileRights" /> 枚举值。</exception>
      <exception cref="T:System.IO.FileNotFoundException" vsli:raw="The file specified for &lt;paramref name=&quot;mapName&quot; /&gt; does not exist.">为 <paramref name="mapName" /> 指定的文件不存在。</exception>
      <returns vsli:raw="A memory-mapped file that has the specified characteristics.">具有指定特征的内存映射文件。</returns>
    </member>
    <member name="M:System.IO.MemoryMappedFiles.MemoryMappedFile.OpenExisting(System.String,System.IO.MemoryMappedFiles.MemoryMappedFileRights,System.IO.HandleInheritability)">
      <summary vsli:raw="Opens an existing memory-mapped file that has the specified name, access rights, and inheritability in system memory.">在系统内存中打开一个具有指定名称、访问权限和继承性的现有内存映射文件。</summary>
      <param name="mapName" vsli:raw="The name of the memory-mapped file to open.">要打开的内存映射文件的名称。</param>
      <param name="desiredAccessRights" vsli:raw="One of the enumeration values that specifies the access rights to apply to the memory-mapped file.">指定要应用于内存映射文件的访问权限的枚举值之一。</param>
      <param name="inheritability" vsli:raw="One of the enumeration values that specifies whether a handle to the memory-mapped file can be inherited by a child process. The default is &lt;see cref=&quot;F:System.IO.HandleInheritability.None&quot; /&gt;.">指定内存映射文件的句柄能否由子进程继承的枚举值之一。 默认值为 <see cref="F:System.IO.HandleInheritability.None" />。</param>
      <exception cref="T:System.ArgumentNullException" vsli:raw="&lt;paramref name=&quot;mapName&quot; /&gt; is &lt;see langword=&quot;null&quot; /&gt;.">
        <paramref name="mapName" /> 为 <see langword="null" />。</exception>
      <exception cref="T:System.ArgumentException" vsli:raw="&lt;paramref name=&quot;mapName&quot; /&gt; is an empty string.">
        <paramref name="mapName" /> 是一个空字符串。</exception>
      <exception cref="T:System.ArgumentOutOfRangeException" vsli:raw="&lt;paramref name=&quot;desiredAccessRights&quot; /&gt; is not a valid &lt;see cref=&quot;T:System.IO.MemoryMappedFiles.MemoryMappedFileRights&quot; /&gt; enumeration value.  &#xA;  &#xA; -or-  &#xA;  &#xA; &lt;paramref name=&quot;inheritability&quot; /&gt; is not a valid &lt;see cref=&quot;T:System.IO.HandleInheritability&quot; /&gt; enumeration value.">
        <paramref name="desiredAccessRights" /> 不是有效的 <see cref="T:System.IO.MemoryMappedFiles.MemoryMappedFileRights" /> 枚举值。  
  
- 或 - 
 <paramref name="inheritability" /> 不是有效的 <see cref="T:System.IO.HandleInheritability" /> 枚举值。</exception>
      <exception cref="T:System.UnauthorizedAccessException" vsli:raw="The requested access is invalid for the memory-mapped file.">请求的访问对于内存映射文件无效。</exception>
      <exception cref="T:System.IO.FileNotFoundException" vsli:raw="The file specified for &lt;paramref name=&quot;mapName&quot; /&gt; does not exist.">为 <paramref name="mapName" /> 指定的文件不存在。</exception>
      <returns vsli:raw="A memory-mapped file that has the specified characteristics.">具有指定特征的内存映射文件。</returns>
    </member>
    <member name="P:System.IO.MemoryMappedFiles.MemoryMappedFile.SafeMemoryMappedFileHandle">
      <summary vsli:raw="Gets the file handle of a memory-mapped file.">获取内存映射文件的文件句柄。</summary>
      <returns vsli:raw="The handle to the memory-mapped file.">内存映射文件的句柄。</returns>
    </member>
    <member name="T:System.IO.MemoryMappedFiles.MemoryMappedFileAccess">
      <summary vsli:raw="Specifies access capabilities and restrictions for a memory-mapped file or view.">指定内存映射文件或视图的访问功能和限制。</summary>
    </member>
    <member name="F:System.IO.MemoryMappedFiles.MemoryMappedFileAccess.CopyOnWrite">
      <summary vsli:raw="Read and write access to the file, with the restriction that any write operations will not be seen by other processes.">对文件的读写访问权限，限制条件是其他进程不会看到任何写入操作。</summary>
    </member>
    <member name="F:System.IO.MemoryMappedFiles.MemoryMappedFileAccess.Read">
      <summary vsli:raw="Read-only access to the file.">对文件的只读访问权限。</summary>
    </member>
    <member name="F:System.IO.MemoryMappedFiles.MemoryMappedFileAccess.ReadExecute">
      <summary vsli:raw="Read access to the file that can store and run executable code.">对可以存储和运行可执行代码的文件的读取访问权限。</summary>
    </member>
    <member name="F:System.IO.MemoryMappedFiles.MemoryMappedFileAccess.ReadWrite">
      <summary vsli:raw="Read and write access to the file.">对文件的读写访问权限。</summary>
    </member>
    <member name="F:System.IO.MemoryMappedFiles.MemoryMappedFileAccess.ReadWriteExecute">
      <summary vsli:raw="Read and write access to the file that can store and run executable code.">对可以存储和运行可执行代码的文件的读写访问权限。</summary>
    </member>
    <member name="F:System.IO.MemoryMappedFiles.MemoryMappedFileAccess.Write">
      <summary vsli:raw="Write-only access to file.">对文件的只写访问权限。</summary>
    </member>
    <member name="T:System.IO.MemoryMappedFiles.MemoryMappedFileOptions">
      <summary vsli:raw="Provides memory allocation options for memory-mapped files.">为内存映射文件提供内存分配选项。</summary>
    </member>
    <member name="F:System.IO.MemoryMappedFiles.MemoryMappedFileOptions.DelayAllocatePages">
      <summary vsli:raw="Memory allocation is delayed until a view is created with either the &lt;see cref=&quot;M:System.IO.MemoryMappedFiles.MemoryMappedFile.CreateViewAccessor&quot; /&gt; or &lt;see cref=&quot;M:System.IO.MemoryMappedFiles.MemoryMappedFile.CreateViewStream&quot; /&gt; method.">在使用 <see cref="M:System.IO.MemoryMappedFiles.MemoryMappedFile.CreateViewAccessor" /> 或 <see cref="M:System.IO.MemoryMappedFiles.MemoryMappedFile.CreateViewStream" /> 方法创建视图之前，将延迟内存分配。</summary>
    </member>
    <member name="F:System.IO.MemoryMappedFiles.MemoryMappedFileOptions.None">
      <summary vsli:raw="No memory allocation options are applied.">未应用内存分配选项。</summary>
    </member>
    <member name="T:System.IO.MemoryMappedFiles.MemoryMappedFileRights">
      <summary vsli:raw="Specifies access rights to a memory-mapped file that is not associated with a file on disk.">指定与磁盘上的文件不相关联的内存映射文件的访问权限。</summary>
    </member>
    <member name="F:System.IO.MemoryMappedFiles.MemoryMappedFileRights.AccessSystemSecurity">
      <summary vsli:raw="The right to get or set permissions on a file.">获取或设置文件权限的权限。</summary>
    </member>
    <member name="F:System.IO.MemoryMappedFiles.MemoryMappedFileRights.ChangePermissions">
      <summary vsli:raw="The right to change the security and audit rules associated with a file.">更改与文件关联的安全和审核规则的权限。</summary>
    </member>
    <member name="F:System.IO.MemoryMappedFiles.MemoryMappedFileRights.CopyOnWrite">
      <summary vsli:raw="The right to read and write to a file with the restriction that write operations will not be seen by other processes.">读取和写入文件的权限，其限制条件是其他进程不会看到写入操作。</summary>
    </member>
    <member name="F:System.IO.MemoryMappedFiles.MemoryMappedFileRights.Delete">
      <summary vsli:raw="The right to delete a file.">删除文件的权限。</summary>
    </member>
    <member name="F:System.IO.MemoryMappedFiles.MemoryMappedFileRights.Execute">
      <summary vsli:raw="The right to run an application file.">运行应用程序文件的权限。</summary>
    </member>
    <member name="F:System.IO.MemoryMappedFiles.MemoryMappedFileRights.FullControl">
      <summary vsli:raw="The right to exert full control over a file, and to modify access control and audit rules. This value represents the right to do anything with a file and is the combination of all rights in this enumeration.">对文件进行完全控制，以及修改访问控制和审核规则的权限。 此值表示允许对文件进行任何操作的权限，并且它是此枚举中的所有权限的组合。</summary>
    </member>
    <member name="F:System.IO.MemoryMappedFiles.MemoryMappedFileRights.Read">
      <summary vsli:raw="The right to open and copy a file as read-only.">以只读方式打开和复制文件的权限。</summary>
    </member>
    <member name="F:System.IO.MemoryMappedFiles.MemoryMappedFileRights.ReadExecute">
      <summary vsli:raw="The right to open and copy a folder or file as read-only, and to run application files. This right includes the &lt;see cref=&quot;F:System.IO.MemoryMappedFiles.MemoryMappedFileRights.Read&quot; /&gt; right and the &lt;see cref=&quot;F:System.IO.MemoryMappedFiles.MemoryMappedFileRights.Execute&quot; /&gt; right.">以只读方式打开和复制文件夹或文件的权限，以及运行应用程序文件的权限。 此权限包括 <see cref="F:System.IO.MemoryMappedFiles.MemoryMappedFileRights.Read" /> 权限和 <see cref="F:System.IO.MemoryMappedFiles.MemoryMappedFileRights.Execute" /> 权限。</summary>
    </member>
    <member name="F:System.IO.MemoryMappedFiles.MemoryMappedFileRights.ReadPermissions">
      <summary vsli:raw="The right to open and copy access and audit rules from a file. This does not include the right to read data, file system attributes, or extended file system attributes.">从文件中打开并复制访问和审核规则的权限。 这不包括读取数据、文件系统属性或扩展文件系统属性的权限。</summary>
    </member>
    <member name="F:System.IO.MemoryMappedFiles.MemoryMappedFileRights.ReadWrite">
      <summary vsli:raw="The right to open and copy a file, and the right to add data to a file or remove data from a file.">打开和复制文件的权限，以及向文件添加数据或从文件中移除数据的权限。</summary>
    </member>
    <member name="F:System.IO.MemoryMappedFiles.MemoryMappedFileRights.ReadWriteExecute">
      <summary vsli:raw="The right to open and copy a file, the right to add data to a file or remove data from a file, and the right to run an application file.">打开和复制文件的权限、向文件添加数据或从文件中移除数据的权限，以及运行应用程序文件的权限。</summary>
    </member>
    <member name="F:System.IO.MemoryMappedFiles.MemoryMappedFileRights.TakeOwnership">
      <summary vsli:raw="The right to change the owner of a file.">更改文件所有者的权限。</summary>
    </member>
    <member name="F:System.IO.MemoryMappedFiles.MemoryMappedFileRights.Write">
      <summary vsli:raw="The right to add data to a file or remove data from a file.">向文件添加数据或从文件中移除数据的权限。</summary>
    </member>
    <member name="T:System.IO.MemoryMappedFiles.MemoryMappedViewAccessor">
      <summary vsli:raw="Represents a randomly accessed view of a memory-mapped file.">表示随机访问的内存映射文件视图。</summary>
    </member>
    <member name="M:System.IO.MemoryMappedFiles.MemoryMappedViewAccessor.Flush">
      <summary vsli:raw="Clears all buffers for this view and causes any buffered data to be written to the underlying file.">清除此视图的所有缓冲区，使得所有缓冲的数据都被写入到基础文件。</summary>
      <exception cref="T:System.ObjectDisposedException" vsli:raw="Methods were called after the accessor was closed.">在访问器关闭后调用方法。</exception>
    </member>
    <member name="P:System.IO.MemoryMappedFiles.MemoryMappedViewAccessor.PointerOffset">
      <summary vsli:raw="Gets the number of bytes by which the starting position of this view is offset from the beginning of the memory-mapped file.">获取此视图的开始位置相对于内存映射文件的开头进行偏移的字节数。</summary>
      <exception cref="T:System.InvalidOperationException" vsli:raw="The object from which this instance was created is &lt;see langword=&quot;null&quot; /&gt;.">从中创建此实例的对象为 <see langword="null" />。</exception>
      <returns vsli:raw="The number of bytes between the starting position of this view and the beginning of the memory-mapped file.">此视图的开始位置和内存映射文件的开始位置之间的字节数。</returns>
    </member>
    <member name="P:System.IO.MemoryMappedFiles.MemoryMappedViewAccessor.SafeMemoryMappedViewHandle">
      <summary vsli:raw="Gets a handle to the view of a memory-mapped file.">获取内存映射文件的视图的句柄。</summary>
      <returns vsli:raw="A wrapper for the operating system's handle to the view of the file.">文件视图的操作系统句柄的包装器。</returns>
    </member>
    <member name="T:System.IO.MemoryMappedFiles.MemoryMappedViewStream">
      <summary vsli:raw="Represents a view of a memory-mapped file as a sequentially accessed stream.">将内存映射文件的视图表示为按顺序访问的流。</summary>
    </member>
    <member name="M:System.IO.MemoryMappedFiles.MemoryMappedViewStream.Flush">
      <summary vsli:raw="Clears all buffers for this stream and causes any buffered data to be written to the underlying file.">清除此流的所有缓冲区，使得所有缓冲的数据都被写入到基础文件。</summary>
    </member>
    <member name="M:System.IO.MemoryMappedFiles.MemoryMappedViewStream.SetLength(System.Int64)">
      <summary vsli:raw="Sets the length of the current stream.">设置当前流的长度。</summary>
      <param name="value" vsli:raw="The desired length of the current stream in bytes.">所需的当前流的长度（以字节表示）。</param>
      <exception cref="T:System.NotSupportedException" vsli:raw="This method is not supported.">不支持此方法。</exception>
    </member>
    <member name="P:System.IO.MemoryMappedFiles.MemoryMappedViewStream.PointerOffset">
      <summary vsli:raw="Gets the number of bytes by which the starting position of this view is offset from the beginning of the memory-mapped file.">获取此视图的开始位置相对于内存映射文件的开头进行偏移的字节数。</summary>
      <exception cref="T:System.InvalidOperationException" vsli:raw="The object from which this instance was created is &lt;see langword=&quot;null&quot; /&gt;.">从中创建此实例的对象为 <see langword="null" />。</exception>
      <returns vsli:raw="The number of bytes between the starting position of this view and the beginning of the memory-mapped file.">此视图的开始位置和内存映射文件的开始位置之间的字节数。</returns>
    </member>
    <member name="P:System.IO.MemoryMappedFiles.MemoryMappedViewStream.SafeMemoryMappedViewHandle">
      <summary vsli:raw="Gets a handle to the view of a memory-mapped file.">获取内存映射文件的视图的句柄。</summary>
      <returns vsli:raw="A wrapper for the operating system's handle to the view of the file.">文件视图的操作系统句柄的包装器。</returns>
    </member>
  </members>
</doc>