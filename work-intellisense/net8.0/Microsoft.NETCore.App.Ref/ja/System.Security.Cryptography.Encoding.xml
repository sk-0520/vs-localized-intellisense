<?xml version="1.0" encoding="utf-8"?>
<doc>
  <assembly>
    <name>System.Security.Cryptography.Encoding</name>
  </assembly>
  <members>
    <member name="T:System.Security.Cryptography.AsnEncodedData">
      <summary>ASN.1 (Abstract Syntax Notation One) でエンコードされたデータを表します。</summary>
    </member>
    <member name="M:System.Security.Cryptography.AsnEncodedData.#ctor">
      <summary>
        <see cref="T:System.Security.Cryptography.AsnEncodedData" /> クラスの新しいインスタンスを初期化します。</summary>
    </member>
    <member name="M:System.Security.Cryptography.AsnEncodedData.#ctor(System.Byte[])">
      <summary>バイト配列を使用して、<see cref="T:System.Security.Cryptography.AsnEncodedData" /> クラスの新しいインスタンスを初期化します。</summary>
      <param name="rawData">ASN.1 (Abstract Syntax Notation One) でエンコードされたデータを格納するバイト配列。</param>
    </member>
    <member name="M:System.Security.Cryptography.AsnEncodedData.#ctor(System.ReadOnlySpan{System.Byte})">
      <summary>既存のエンコードされたデータを使用して、<see cref="T:System.Security.Cryptography.AsnEncodedData" /> クラスの新しいインスタンスを初期化します。</summary>
      <param name="rawData">ASN.1 (Abstract Syntax Notation One) でエンコードされたデータ。</param>
    </member>
    <member name="M:System.Security.Cryptography.AsnEncodedData.#ctor(System.Security.Cryptography.AsnEncodedData)">
      <summary>
        <see cref="T:System.Security.Cryptography.AsnEncodedData" /> クラスの新しいインスタンスを、<see cref="T:System.Security.Cryptography.AsnEncodedData" /> クラスのインスタンスを使用して初期化します。</summary>
      <param name="asnEncodedData">
        <see cref="T:System.Security.Cryptography.AsnEncodedData" /> クラスのインスタンス。</param>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="asnEncodedData" /> が <see langword="null" />です。</exception>
    </member>
    <member name="M:System.Security.Cryptography.AsnEncodedData.#ctor(System.Security.Cryptography.Oid,System.Byte[])">
      <summary>
        <see cref="T:System.Security.Cryptography.AsnEncodedData" /> オブジェクトとバイト配列を使用して、<see cref="T:System.Security.Cryptography.Oid" /> クラスの新しいインスタンスを初期化します。</summary>
      <param name="oid">
        <see cref="T:System.Security.Cryptography.Oid" /> オブジェクト。</param>
      <param name="rawData">ASN.1 (Abstract Syntax Notation One) でエンコードされたデータを格納するバイト配列。</param>
    </member>
    <member name="M:System.Security.Cryptography.AsnEncodedData.#ctor(System.Security.Cryptography.Oid,System.ReadOnlySpan{System.Byte})">
      <summary>オブジェクト識別子 (OID) と既存のエンコードされたデータを使用して、<see cref="T:System.Security.Cryptography.AsnEncodedData" /> クラスの新しいインスタンスを初期化します。</summary>
      <param name="oid">このデータのオブジェクト識別子。</param>
      <param name="rawData">ASN.1 (Abstract Syntax Notation One) でエンコードされたデータ。</param>
    </member>
    <member name="M:System.Security.Cryptography.AsnEncodedData.#ctor(System.String,System.Byte[])">
      <summary>バイト配列を使用して、<see cref="T:System.Security.Cryptography.AsnEncodedData" /> クラスの新しいインスタンスを初期化します。</summary>
      <param name="oid">
        <see cref="T:System.Security.Cryptography.Oid" /> 情報を表す文字列。</param>
      <param name="rawData">ASN.1 (Abstract Syntax Notation One) でエンコードされたデータを格納するバイト配列。</param>
    </member>
    <member name="M:System.Security.Cryptography.AsnEncodedData.#ctor(System.String,System.ReadOnlySpan{System.Byte})">
      <summary>オブジェクト識別子 (OID) と既存のエンコードされたデータを使用して、<see cref="T:System.Security.Cryptography.AsnEncodedData" /> クラスの新しいインスタンスを初期化します。</summary>
      <param name="oid">このデータのオブジェクト識別子。</param>
      <param name="rawData">ASN.1 (Abstract Syntax Notation One) でエンコードされたデータ。</param>
    </member>
    <member name="M:System.Security.Cryptography.AsnEncodedData.CopyFrom(System.Security.Cryptography.AsnEncodedData)">
      <summary>
        <see cref="T:System.Security.Cryptography.AsnEncodedData" /> オブジェクトの情報をコピーします。</summary>
      <param name="asnEncodedData">新しいオブジェクトの基となる <see cref="T:System.Security.Cryptography.AsnEncodedData" /> オブジェクト。</param>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="asnEncodedData" /> が <see langword="null" />です。</exception>
    </member>
    <member name="M:System.Security.Cryptography.AsnEncodedData.Format(System.Boolean)">
      <summary>ASN.1 (Abstract Syntax Notation One) でエンコードされたデータを、文字列として書式設定して返します。</summary>
      <param name="multiLine">戻り値の文字列にキャリッジ リターンを含める場合は <see langword="true" /> を、それ以外の場合は <see langword="false" /> を指定します。</param>
      <returns>ASN.1 (Abstract Syntax Notation One) でエンコードされたデータを表す、書式設定された文字列。</returns>
    </member>
    <member name="P:System.Security.Cryptography.AsnEncodedData.Oid">
      <summary>
        <see cref="T:System.Security.Cryptography.Oid" /> オブジェクトの <see cref="T:System.Security.Cryptography.AsnEncodedData" /> 値を取得または設定します。</summary>
      <returns>
        <see cref="T:System.Security.Cryptography.Oid" /> オブジェクト。</returns>
    </member>
    <member name="P:System.Security.Cryptography.AsnEncodedData.RawData">
      <summary>ASN.1 (Abstract Syntax Notation One) でエンコードされたデータをバイト配列表現で取得または設定します。</summary>
      <exception cref="T:System.ArgumentNullException">値が <see langword="null" /> です。</exception>
      <returns>ASN.1 (Abstract Syntax Notation One) でエンコードされたデータを表すバイト配列。</returns>
    </member>
    <member name="T:System.Security.Cryptography.AsnEncodedDataCollection">
      <summary>
        <see cref="T:System.Security.Cryptography.AsnEncodedData" /> オブジェクトのコレクションを表します。 このクラスは継承できません。</summary>
    </member>
    <member name="M:System.Security.Cryptography.AsnEncodedDataCollection.#ctor">
      <summary>
        <see cref="T:System.Security.Cryptography.AsnEncodedDataCollection" /> クラスの新しいインスタンスを初期化します。</summary>
    </member>
    <member name="M:System.Security.Cryptography.AsnEncodedDataCollection.#ctor(System.Security.Cryptography.AsnEncodedData)">
      <summary>
        <see cref="T:System.Security.Cryptography.AsnEncodedDataCollection" /> クラスの新しいインスタンスを初期化し、コレクションに <see cref="T:System.Security.Cryptography.AsnEncodedData" /> オブジェクトを追加します。</summary>
      <param name="asnEncodedData">コレクションに追加する <see cref="T:System.Security.Cryptography.AsnEncodedData" /> オブジェクト。</param>
    </member>
    <member name="M:System.Security.Cryptography.AsnEncodedDataCollection.Add(System.Security.Cryptography.AsnEncodedData)">
      <summary>
        <see cref="T:System.Security.Cryptography.AsnEncodedData" /> オブジェクトを <see cref="T:System.Security.Cryptography.AsnEncodedDataCollection" /> オブジェクトに追加します。</summary>
      <param name="asnEncodedData">コレクションに追加する <see cref="T:System.Security.Cryptography.AsnEncodedData" /> オブジェクト。</param>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="asnEncodedData" /> が <see langword="null" />です。</exception>
      <exception cref="T:System.Security.Cryptography.CryptographicException">OID がいずれも <see langword="null" /> でなく、OID が一致しません。

- または -

OID の 1 つが <see langword="null" /> であり、OID が一致しません。</exception>
      <returns>追加した <see cref="T:System.Security.Cryptography.AsnEncodedData" /> オブジェクトのインデックス。</returns>
    </member>
    <member name="M:System.Security.Cryptography.AsnEncodedDataCollection.CopyTo(System.Security.Cryptography.AsnEncodedData[],System.Int32)">
      <summary>
        <see cref="T:System.Security.Cryptography.AsnEncodedDataCollection" /> オブジェクトを配列にコピーします。</summary>
      <param name="array">
        <see cref="T:System.Security.Cryptography.AsnEncodedDataCollection" /> オブジェクトのコピー先の配列。</param>
      <param name="index">コピー操作を開始する場所。</param>
    </member>
    <member name="M:System.Security.Cryptography.AsnEncodedDataCollection.GetEnumerator">
      <summary>
        <see cref="T:System.Security.Cryptography.AsnEncodedDataCollection" /> オブジェクトの移動に使用できる <see cref="T:System.Security.Cryptography.AsnEncodedDataEnumerator" /> オブジェクトを返します。</summary>
      <returns>
        <see cref="T:System.Security.Cryptography.AsnEncodedDataEnumerator" /> オブジェクト。</returns>
    </member>
    <member name="M:System.Security.Cryptography.AsnEncodedDataCollection.Remove(System.Security.Cryptography.AsnEncodedData)">
      <summary>
        <see cref="T:System.Security.Cryptography.AsnEncodedData" /> オブジェクトから <see cref="T:System.Security.Cryptography.AsnEncodedDataCollection" /> オブジェクトを削除します。</summary>
      <param name="asnEncodedData">削除する <see cref="T:System.Security.Cryptography.AsnEncodedData" /> オブジェクト。</param>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="asnEncodedData" /> が <see langword="null" />です。</exception>
    </member>
    <member name="M:System.Security.Cryptography.AsnEncodedDataCollection.System#Collections#ICollection#CopyTo(System.Array,System.Int32)">
      <summary>
        <see cref="T:System.Security.Cryptography.AsnEncodedDataCollection" /> オブジェクトを配列にコピーします。</summary>
      <param name="array">
        <see cref="T:System.Security.Cryptography.AsnEncodedDataCollection" /> オブジェクトのコピー先の配列。</param>
      <param name="index">コピー操作を開始する場所。</param>
      <exception cref="T:System.ArgumentException">
        <paramref name="array" />は、このメソッドではサポートされていない多次元配列です。

- または - 
<paramref name="index" /> の長さが無効です。</exception>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="array" /> が <see langword="null" />です。</exception>
      <exception cref="T:System.ArgumentOutOfRangeException">
        <paramref name="index" /> の長さが範囲外です。</exception>
    </member>
    <member name="M:System.Security.Cryptography.AsnEncodedDataCollection.System#Collections#IEnumerable#GetEnumerator">
      <summary>
        <see cref="T:System.Security.Cryptography.AsnEncodedDataCollection" /> オブジェクトの移動に使用できる <see cref="T:System.Security.Cryptography.AsnEncodedDataEnumerator" /> オブジェクトを返します。</summary>
      <returns>コレクションの移動に使用できる <see cref="T:System.Security.Cryptography.AsnEncodedDataEnumerator" /> オブジェクト。</returns>
    </member>
    <member name="P:System.Security.Cryptography.AsnEncodedDataCollection.Count">
      <summary>このコレクション内の <see cref="T:System.Security.Cryptography.AsnEncodedData" /> オブジェクトの数を取得します。</summary>
      <returns>
        <see cref="T:System.Security.Cryptography.AsnEncodedData" /> オブジェクトの数です。</returns>
    </member>
    <member name="P:System.Security.Cryptography.AsnEncodedDataCollection.IsSynchronized">
      <summary>
        <see cref="T:System.Security.Cryptography.AsnEncodedDataCollection" /> オブジェクトへのアクセスがスレッド セーフである かどうかを示す値を取得します。</summary>
      <returns>常に <see langword="false" />。</returns>
    </member>
    <member name="P:System.Security.Cryptography.AsnEncodedDataCollection.Item(System.Int32)">
      <summary>
        <see cref="T:System.Security.Cryptography.AsnEncodedDataCollection" /> オブジェクトから <see cref="T:System.Security.Cryptography.AsnEncodedData" /> オブジェクトを取得します。</summary>
      <param name="index">コレクションにおける現在の位置。</param>
      <returns>
        <see cref="T:System.Security.Cryptography.AsnEncodedData" /> オブジェクト。</returns>
    </member>
    <member name="P:System.Security.Cryptography.AsnEncodedDataCollection.SyncRoot">
      <summary>
        <see cref="T:System.Security.Cryptography.AsnEncodedDataCollection" /> オブジェクトへのアクセスを同期するために使用できるオブジェクトを取得します。</summary>
      <returns>
        <see cref="T:System.Security.Cryptography.AsnEncodedDataCollection" /> オブジェクトへのアクセスを同期するために使用されるオブジェクト。</returns>
    </member>
    <member name="T:System.Security.Cryptography.AsnEncodedDataEnumerator">
      <summary>
        <see cref="T:System.Security.Cryptography.AsnEncodedDataCollection" /> オブジェクトを介してナビゲートできるようにします。 このクラスは継承できません。</summary>
    </member>
    <member name="M:System.Security.Cryptography.AsnEncodedDataEnumerator.MoveNext">
      <summary>
        <see cref="T:System.Security.Cryptography.AsnEncodedData" /> オブジェクト内の次の <see cref="T:System.Security.Cryptography.AsnEncodedDataCollection" /> オブジェクトに進みます。</summary>
      <exception cref="T:System.InvalidOperationException">コレクションは、列挙子の作成後に変更されました。</exception>
      <returns>列挙子が次の要素に正常に進んだ場合は <see langword="true" />。列挙子がコレクションの末尾を越えた場合は <see langword="false" />。</returns>
    </member>
    <member name="M:System.Security.Cryptography.AsnEncodedDataEnumerator.Reset">
      <summary>列挙子を初期位置に設定します。</summary>
      <exception cref="T:System.InvalidOperationException">コレクションは、列挙子の作成後に変更されました。</exception>
    </member>
    <member name="P:System.Security.Cryptography.AsnEncodedDataEnumerator.Current">
      <summary>
        <see cref="T:System.Security.Cryptography.AsnEncodedData" /> オブジェクト内の現在の <see cref="T:System.Security.Cryptography.AsnEncodedDataCollection" /> オブジェクトを取得します。</summary>
      <returns>コレクション内にある現在の <see cref="T:System.Security.Cryptography.AsnEncodedData" /> オブジェクトです。</returns>
    </member>
    <member name="P:System.Security.Cryptography.AsnEncodedDataEnumerator.System#Collections#IEnumerator#Current">
      <summary>
        <see cref="T:System.Security.Cryptography.AsnEncodedData" /> オブジェクト内の現在の <see cref="T:System.Security.Cryptography.AsnEncodedDataCollection" /> オブジェクトを取得します。</summary>
      <returns>現在の <see cref="T:System.Security.Cryptography.AsnEncodedData" /> オブジェクト。</returns>
    </member>
    <member name="T:System.Security.Cryptography.FromBase64Transform">
      <summary>base 64 から <see cref="T:System.Security.Cryptography.CryptoStream" /> を変換します。</summary>
    </member>
    <member name="M:System.Security.Cryptography.FromBase64Transform.#ctor">
      <summary>
        <see cref="T:System.Security.Cryptography.FromBase64Transform" /> クラスの新しいインスタンスを初期化します。</summary>
    </member>
    <member name="M:System.Security.Cryptography.FromBase64Transform.#ctor(System.Security.Cryptography.FromBase64TransformMode)">
      <summary>変換モードを指定して、<see cref="T:System.Security.Cryptography.FromBase64Transform" /> クラスの新しいインスタンスを初期化します。</summary>
      <param name="whitespaces">
        <see cref="T:System.Security.Cryptography.FromBase64Transform" /> 値のいずれか 1 つ。</param>
    </member>
    <member name="M:System.Security.Cryptography.FromBase64Transform.Clear">
      <summary>
        <see cref="T:System.Security.Cryptography.FromBase64Transform" /> によって使用されているすべてのリソースを解放します。</summary>
    </member>
    <member name="M:System.Security.Cryptography.FromBase64Transform.Dispose">
      <summary>
        <see cref="T:System.Security.Cryptography.FromBase64Transform" /> クラスの現在のインスタンスによって使用されているすべてのリソースを解放します。</summary>
    </member>
    <member name="M:System.Security.Cryptography.FromBase64Transform.Dispose(System.Boolean)">
      <summary>
        <see cref="T:System.Security.Cryptography.FromBase64Transform" /> によって使用されているアンマネージド リソースを解放し、オプションでマネージド リソースも解放します。</summary>
      <param name="disposing">マネージド リソースとアンマネージド リソースの両方を解放する場合は <see langword="true" />。アンマネージド リソースだけを解放する場合は <see langword="false" />。</param>
    </member>
    <member name="M:System.Security.Cryptography.FromBase64Transform.Finalize">
      <summary>
        <see cref="T:System.Security.Cryptography.FromBase64Transform" /> で使用されるアンマネージ リソースを解放します。</summary>
    </member>
    <member name="M:System.Security.Cryptography.FromBase64Transform.TransformBlock(System.Byte[],System.Int32,System.Int32,System.Byte[],System.Int32)">
      <summary>入力バイト配列の指定した領域を base 64 から変換し、その結果を出力バイト配列の指定した領域にコピーします。</summary>
      <param name="inputBuffer">base 64 から変換する入力。</param>
      <param name="inputOffset">入力バイト配列内のデータの使用開始位置を示すオフセット。</param>
      <param name="inputCount">データとして使用する入力バイト配列内のバイト数。</param>
      <param name="outputBuffer">結果を書き込む先の出力。</param>
      <param name="outputOffset">データの書き込みの開始位置を示す出力バイト配列内のオフセット。</param>
      <exception cref="T:System.ObjectDisposedException">現在の <see cref="T:System.Security.Cryptography.FromBase64Transform" /> オブジェクトは既に破棄されています。</exception>
      <exception cref="T:System.ArgumentException">
        <paramref name="inputCount" /> が無効な値を使用しています。  
  
- または - 
 <paramref name="inputBuffer" /> のオフセットの長さが無効です。</exception>
      <exception cref="T:System.ArgumentOutOfRangeException">
        <paramref name="inputOffset" /> が範囲外です。 このパラメーターには、負数以外を指定する必要があります。</exception>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="inputBuffer" /> が <see langword="null" />です。</exception>
      <returns>書き込むバイト数。</returns>
    </member>
    <member name="M:System.Security.Cryptography.FromBase64Transform.TransformFinalBlock(System.Byte[],System.Int32,System.Int32)">
      <summary>指定したバイト配列の指定した領域を base 64 から変換します。</summary>
      <param name="inputBuffer">base 64 から変換する入力。</param>
      <param name="inputOffset">バイト配列内のデータの使用開始位置を示すオフセット。</param>
      <param name="inputCount">バイト配列内でデータとして使用されるバイトの数。</param>
      <exception cref="T:System.ObjectDisposedException">現在の <see cref="T:System.Security.Cryptography.FromBase64Transform" /> オブジェクトは既に破棄されています。</exception>
      <exception cref="T:System.ArgumentException">
        <paramref name="inputBuffer" /> のオフセットの長さが無効です。  
  
- または - 
 <paramref name="inputCount" /> の値が無効です。</exception>
      <exception cref="T:System.ArgumentOutOfRangeException">
        <paramref name="inputOffset" /> が範囲外です。 このパラメーターには、負数以外を指定する必要があります。</exception>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="inputBuffer" /> が <see langword="null" />です。</exception>
      <returns>計算された変換後のデータ。</returns>
    </member>
    <member name="P:System.Security.Cryptography.FromBase64Transform.CanReuseTransform">
      <summary>現在の変換を再利用できるかどうかを示す値を取得します。</summary>
      <returns>常に <see langword="true" />。</returns>
    </member>
    <member name="P:System.Security.Cryptography.FromBase64Transform.CanTransformMultipleBlocks">
      <summary>複数のブロックを変換できるかどうかを示す値を取得します。</summary>
      <returns>常に <see langword="false" />。</returns>
    </member>
    <member name="P:System.Security.Cryptography.FromBase64Transform.InputBlockSize">
      <summary>入力ブロック サイズを取得します。</summary>
      <returns>入力データ ブロックのサイズ (バイト単位)。</returns>
    </member>
    <member name="P:System.Security.Cryptography.FromBase64Transform.OutputBlockSize">
      <summary>出力ブロック サイズを取得します。</summary>
      <returns>出力データ ブロックのサイズ (バイト単位)。</returns>
    </member>
    <member name="T:System.Security.Cryptography.FromBase64TransformMode">
      <summary>base 64 変換で空白を無視するかどうかを指定します。</summary>
    </member>
    <member name="F:System.Security.Cryptography.FromBase64TransformMode.DoNotIgnoreWhiteSpaces">
      <summary>空白は無視されません。</summary>
    </member>
    <member name="F:System.Security.Cryptography.FromBase64TransformMode.IgnoreWhiteSpaces">
      <summary>空白は無視されます。</summary>
    </member>
    <member name="T:System.Security.Cryptography.Oid">
      <summary>暗号オブジェクトの識別子を表します。 このクラスは継承できません。</summary>
    </member>
    <member name="M:System.Security.Cryptography.Oid.#ctor">
      <summary>
        <see cref="T:System.Security.Cryptography.Oid" /> クラスの新しいインスタンスを初期化します。</summary>
    </member>
    <member name="M:System.Security.Cryptography.Oid.#ctor(System.Security.Cryptography.Oid)">
      <summary>指定した <see cref="T:System.Security.Cryptography.Oid" /> オブジェクトを使用して、<see cref="T:System.Security.Cryptography.Oid" /> クラスの新しいインスタンスを初期化します。</summary>
      <param name="oid">新しいオブジェクト識別子を作成するために使用されるオブジェクト識別子情報。</param>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="oid" /> が <see langword="null" />です。</exception>
    </member>
    <member name="M:System.Security.Cryptography.Oid.#ctor(System.String)">
      <summary>
        <see cref="T:System.Security.Cryptography.Oid" /> オブジェクトの文字列値を使用して、<see cref="T:System.Security.Cryptography.Oid" /> クラスの新しいインスタンスを初期化します。</summary>
      <param name="oid">オブジェクト識別子。</param>
    </member>
    <member name="M:System.Security.Cryptography.Oid.#ctor(System.String,System.String)">
      <summary>値と表示名を指定して、<see cref="T:System.Security.Cryptography.Oid" /> クラスの新しいインスタンスを初期化します。</summary>
      <param name="value">識別子のドット形式の数字。</param>
      <param name="friendlyName">識別子のフレンドリ名。</param>
    </member>
    <member name="M:System.Security.Cryptography.Oid.FromFriendlyName(System.String,System.Security.Cryptography.OidGroup)">
      <summary>指定したグループを検索することにより、OID 表示名から <see cref="T:System.Security.Cryptography.Oid" /> オブジェクトを作成します。</summary>
      <param name="friendlyName">識別子のフレンドリ名。</param>
      <param name="group">検索するグループ。</param>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="friendlyName" /> が <see langword="null" />です。</exception>
      <exception cref="T:System.Security.Cryptography.CryptographicException">OID が見つかりませんでした。</exception>
      <returns>指定された OID を表すオブジェクト。</returns>
    </member>
    <member name="M:System.Security.Cryptography.Oid.FromOidValue(System.String,System.Security.Cryptography.OidGroup)">
      <summary>指定した OID 値とグループを使用して <see cref="T:System.Security.Cryptography.Oid" /> オブジェクトを作成します。</summary>
      <param name="oidValue">OID の値。</param>
      <param name="group">検索するグループ。</param>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="oidValue" /> が <see langword="null" />です。</exception>
      <exception cref="T:System.Security.Cryptography.CryptographicException">OID 値の表示名が見つかりませんでした。</exception>
      <returns>
        <see cref="T:System.Security.Cryptography.Oid" /> オブジェクトの新しいインスタンス。</returns>
    </member>
    <member name="P:System.Security.Cryptography.Oid.FriendlyName">
      <summary>識別子の表示名を取得または設定します。</summary>
      <exception cref="T:System.PlatformNotSupportedException">.NET 5.0 以降: 値を設定しようとしましたが、値が既に設定されています。</exception>
      <returns>識別子のフレンドリ名。</returns>
    </member>
    <member name="P:System.Security.Cryptography.Oid.Value">
      <summary>識別子を示すドット区切りの数値を取得または設定します。</summary>
      <exception cref="T:System.PlatformNotSupportedException">.NET 5.0 以降: 値を設定しようとしましたが、値が既に設定されています。</exception>
      <returns>識別子のドット形式の数字。</returns>
    </member>
    <member name="T:System.Security.Cryptography.OidCollection">
      <summary>
        <see cref="T:System.Security.Cryptography.Oid" /> オブジェクトのコレクションを表します。 このクラスは継承できません。</summary>
    </member>
    <member name="M:System.Security.Cryptography.OidCollection.#ctor">
      <summary>
        <see cref="T:System.Security.Cryptography.OidCollection" /> クラスの新しいインスタンスを初期化します。</summary>
    </member>
    <member name="M:System.Security.Cryptography.OidCollection.Add(System.Security.Cryptography.Oid)">
      <summary>
        <see cref="T:System.Security.Cryptography.Oid" /> オブジェクトを <see cref="T:System.Security.Cryptography.OidCollection" /> オブジェクトに追加します。</summary>
      <param name="oid">コレクションに追加する <see cref="T:System.Security.Cryptography.Oid" /> オブジェクト。</param>
      <returns>追加した <see cref="T:System.Security.Cryptography.Oid" /> オブジェクトのインデックス。</returns>
    </member>
    <member name="M:System.Security.Cryptography.OidCollection.CopyTo(System.Security.Cryptography.Oid[],System.Int32)">
      <summary>
        <see cref="T:System.Security.Cryptography.OidCollection" /> オブジェクトを配列にコピーします。</summary>
      <param name="array">
        <see cref="T:System.Security.Cryptography.OidCollection" /> オブジェクトのコピー先の配列。</param>
      <param name="index">コピー操作を開始する場所。</param>
    </member>
    <member name="M:System.Security.Cryptography.OidCollection.GetEnumerator">
      <summary>
        <see cref="T:System.Security.Cryptography.OidCollection" /> オブジェクトの移動に使用できる <see cref="T:System.Security.Cryptography.OidEnumerator" /> オブジェクトを返します。</summary>
      <returns>
        <see cref="T:System.Security.Cryptography.OidEnumerator" /> オブジェクト。</returns>
    </member>
    <member name="M:System.Security.Cryptography.OidCollection.System#Collections#ICollection#CopyTo(System.Array,System.Int32)">
      <summary>
        <see cref="T:System.Security.Cryptography.OidCollection" /> オブジェクトを配列にコピーします。</summary>
      <param name="array">
        <see cref="T:System.Security.Cryptography.OidCollection" /> オブジェクトのコピー先の配列。</param>
      <param name="index">コピー操作を開始する場所。</param>
      <exception cref="T:System.ArgumentException">
        <paramref name="array" /> を多次元配列にすることはできません。  
  
- または - 
<paramref name="array" /> の長さは無効なオフセットの長さです。</exception>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="array" /> が <see langword="null" />です。</exception>
      <exception cref="T:System.ArgumentOutOfRangeException">
        <paramref name="index" /> の値は範囲外です。</exception>
    </member>
    <member name="M:System.Security.Cryptography.OidCollection.System#Collections#IEnumerable#GetEnumerator">
      <summary>
        <see cref="T:System.Security.Cryptography.OidCollection" /> オブジェクトの移動に使用できる <see cref="T:System.Security.Cryptography.OidEnumerator" /> オブジェクトを返します。</summary>
      <returns>コレクションの移動に使用できる <see cref="T:System.Security.Cryptography.OidEnumerator" /> オブジェクト。</returns>
    </member>
    <member name="P:System.Security.Cryptography.OidCollection.Count">
      <summary>このコレクション内の <see cref="T:System.Security.Cryptography.Oid" /> オブジェクトの数を取得します。</summary>
      <returns>このコレクション内の <see cref="T:System.Security.Cryptography.Oid" /> オブジェクトの数。</returns>
    </member>
    <member name="P:System.Security.Cryptography.OidCollection.IsSynchronized">
      <summary>
        <see cref="T:System.Security.Cryptography.OidCollection" /> オブジェクトへのアクセスがスレッド セーフである かどうかを示す値を取得します。</summary>
      <returns>常に <see langword="false" />。</returns>
    </member>
    <member name="P:System.Security.Cryptography.OidCollection.Item(System.Int32)">
      <summary>
        <see cref="T:System.Security.Cryptography.OidCollection" /> オブジェクトから <see cref="T:System.Security.Cryptography.Oid" /> オブジェクトを取得します。</summary>
      <param name="index">コレクション内での <see cref="T:System.Security.Cryptography.Oid" /> オブジェクトの場所です。</param>
      <returns>
        <see cref="T:System.Security.Cryptography.Oid" /> オブジェクト。</returns>
    </member>
    <member name="P:System.Security.Cryptography.OidCollection.Item(System.String)">
      <summary>
        <see cref="P:System.Security.Cryptography.Oid.Value" /> プロパティの値または <see cref="T:System.Security.Cryptography.OidCollection" /> プロジェクトの指定された文字列の値に一致する <see cref="P:System.Security.Cryptography.Oid.FriendlyName" /> プロパティの値を含む最初の <see cref="T:System.Security.Cryptography.Oid" /> オブジェクトを取得します。</summary>
      <param name="oid">
        <see cref="P:System.Security.Cryptography.Oid.Value" /> プロパティまたは <see cref="P:System.Security.Cryptography.Oid.FriendlyName" /> プロパティを表す文字列です。</param>
      <returns>
        <see cref="T:System.Security.Cryptography.Oid" /> オブジェクト。</returns>
    </member>
    <member name="P:System.Security.Cryptography.OidCollection.SyncRoot">
      <summary>
        <see cref="T:System.Security.Cryptography.OidCollection" /> オブジェクトへのアクセスを同期するために使用できるオブジェクトを取得します。</summary>
      <returns>
        <see cref="T:System.Security.Cryptography.OidCollection" /> オブジェクトへのアクセスを同期するために使用できるオブジェクト。</returns>
    </member>
    <member name="T:System.Security.Cryptography.OidEnumerator">
      <summary>
        <see cref="T:System.Security.Cryptography.OidCollection" /> オブジェクトを介してナビゲートできるようにします。 このクラスは継承できません。</summary>
    </member>
    <member name="M:System.Security.Cryptography.OidEnumerator.MoveNext">
      <summary>
        <see cref="T:System.Security.Cryptography.Oid" /> オブジェクト内の次の <see cref="T:System.Security.Cryptography.OidCollection" /> オブジェクトに進みます。</summary>
      <exception cref="T:System.InvalidOperationException">コレクションは、列挙子の作成後に変更されました。</exception>
      <returns>列挙子が次の要素に正常に進んだ場合は <see langword="true" />。列挙子がコレクションの末尾を越えた場合は <see langword="false" />。</returns>
    </member>
    <member name="M:System.Security.Cryptography.OidEnumerator.Reset">
      <summary>列挙子を初期位置に設定します。</summary>
      <exception cref="T:System.InvalidOperationException">コレクションは、列挙子の作成後に変更されました。</exception>
    </member>
    <member name="P:System.Security.Cryptography.OidEnumerator.Current">
      <summary>
        <see cref="T:System.Security.Cryptography.Oid" /> オブジェクト内の現在の <see cref="T:System.Security.Cryptography.OidCollection" /> オブジェクトを取得します。</summary>
      <returns>コレクション内にある現在の <see cref="T:System.Security.Cryptography.Oid" /> オブジェクトです。</returns>
    </member>
    <member name="P:System.Security.Cryptography.OidEnumerator.System#Collections#IEnumerator#Current">
      <summary>
        <see cref="T:System.Security.Cryptography.Oid" /> オブジェクト内の現在の <see cref="T:System.Security.Cryptography.OidCollection" /> オブジェクトを取得します。</summary>
      <returns>現在の <see cref="T:System.Security.Cryptography.Oid" /> オブジェクト。</returns>
    </member>
    <member name="T:System.Security.Cryptography.OidGroup">
      <summary>Windows 暗号オブジェクト識別子 (OID) グループを識別します。</summary>
    </member>
    <member name="F:System.Security.Cryptography.OidGroup.All">
      <summary>すべてのグループ。</summary>
    </member>
    <member name="F:System.Security.Cryptography.OidGroup.Attribute">
      <summary>CRYPT_RDN_ATTR_OID_GROUP_ID によって表される Windows グループ。</summary>
    </member>
    <member name="F:System.Security.Cryptography.OidGroup.EncryptionAlgorithm">
      <summary>CRYPT_ENCRYPT_ALG_OID_GROUP_ID によって表される Windows グループ。</summary>
    </member>
    <member name="F:System.Security.Cryptography.OidGroup.EnhancedKeyUsage">
      <summary>CRYPT_ENHKEY_USAGE_OID_GROUP_ID によって表される Windows グループ。</summary>
    </member>
    <member name="F:System.Security.Cryptography.OidGroup.ExtensionOrAttribute">
      <summary>CRYPT_EXT_OR_ATTR_OID_GROUP_ID によって表される Windows グループ。</summary>
    </member>
    <member name="F:System.Security.Cryptography.OidGroup.HashAlgorithm">
      <summary>CRYPT_HASH_ALG_OID_GROUP_ID によって表される Windows グループ。</summary>
    </member>
    <member name="F:System.Security.Cryptography.OidGroup.KeyDerivationFunction">
      <summary>CRYPT_KDF_OID_GROUP_ID によって表される Windows グループ。</summary>
    </member>
    <member name="F:System.Security.Cryptography.OidGroup.Policy">
      <summary>CRYPT_POLICY_OID_GROUP_ID によって表される Windows グループ。</summary>
    </member>
    <member name="F:System.Security.Cryptography.OidGroup.PublicKeyAlgorithm">
      <summary>CRYPT_PUBKEY_ALG_OID_GROUP_ID によって表される Windows グループ。</summary>
    </member>
    <member name="F:System.Security.Cryptography.OidGroup.SignatureAlgorithm">
      <summary>CRYPT_SIGN_ALG_OID_GROUP_ID によって表される Windows グループ。</summary>
    </member>
    <member name="F:System.Security.Cryptography.OidGroup.Template">
      <summary>CRYPT_TEMPLATE_OID_GROUP_ID によって表される Windows グループ。</summary>
    </member>
    <member name="T:System.Security.Cryptography.PemEncoding">
      <summary>PEM (プライバシー強化メール) テキスト エンコーディングの IETF RFC 7468 サブセットの読み取りと書き込みを行うためのメソッドを提供します。
このクラスは継承できません。</summary>
    </member>
    <member name="M:System.Security.Cryptography.PemEncoding.Find(System.ReadOnlySpan{System.Char})">
      <summary>PEM でエンコードされた最初のデータを検索します。</summary>
      <param name="pemData">PEM でエンコードされたデータが含まれるテキスト。</param>
      <exception cref="T:System.ArgumentException">
        <paramref name="pemData" /> には、適切な形式で PEM でエンコードされた値は含まれません。</exception>
      <returns>エンコードされたデータの場所、ラベル、およびデータの場所を指定する値。</returns>
    </member>
    <member name="M:System.Security.Cryptography.PemEncoding.GetEncodedSize(System.Int32,System.Int32)">
      <summary>ラベルとバイナリ データの長さを指定して、PEM でエンコードされた値の長さを文字数で指定します。</summary>
      <param name="labelLength">ラベルの長さ (文字数)。</param>
      <param name="dataLength">データの長さ (バイト単位)。</param>
      <exception cref="T:System.ArgumentOutOfRangeException">
        <paramref name="labelLength" /> は負の値です。

- または -

<paramref name="dataLength" /> は負の値です。

- または -

<paramref name="labelLength" /> は、ラベルの可能な最大長を超えています。

- または -

<paramref name="dataLength" /> は、エンコードされたデータの可能な最大長を超えています。</exception>
      <exception cref="T:System.ArgumentException">PEM でエンコードされた値の長さが、<see cref="F:System.Int32.MaxValue" /> を超えています。</exception>
      <returns>エンコードされた PEM の文字数。</returns>
    </member>
    <member name="M:System.Security.Cryptography.PemEncoding.TryFind(System.ReadOnlySpan{System.Char},System.Security.Cryptography.PemFields@)">
      <summary>PEM でエンコードされた最初のデータの検索を試みます。</summary>
      <param name="pemData">PEM でエンコードされたデータが含まれるテキスト。</param>
      <param name="fields">このメソッドが戻るときに、エンコードされたデータの場所、ラベル、およびデータの場所を指定する値が含まれます。または、PEM でエンコードされたデータが見つからない場合は、それらの場所を空として指定する値が含まれます。

          このパラメーターは初期化前として処理されます。</param>
      <returns>PEM でエンコードされたデータが見つかった場合は <see langword="true" />、それ以外の場合は <see langword="false" />。</returns>
    </member>
    <member name="M:System.Security.Cryptography.PemEncoding.TryWrite(System.ReadOnlySpan{System.Char},System.ReadOnlySpan{System.Byte},System.Span{System.Char},System.Int32@)">
      <summary>指定されたデータとラベルを PEM でエンコードされたデータとして、指定されたバッファーに書き込むことを試みます。</summary>
      <param name="label">書き込むラベル。</param>
      <param name="data">書き込むデータ。</param>
      <param name="destination">PEM でエンコードされたテキストを受け取るバッファー。</param>
      <param name="charsWritten">このメソッドが戻るときに、このパラメーターには、<paramref name="destination" /> に書き込まれた文字数が含まれます。 このパラメーターは初期化前として処理されます。</param>
      <exception cref="T:System.ArgumentOutOfRangeException">
        <paramref name="label" /> は、ラベルの可能な最大長を超えています。

- または -

<paramref name="data" /> は、エンコードされたデータの可能な最大長を超えています。</exception>
      <exception cref="T:System.ArgumentException">PEM でエンコードした結果として得られたテキストが <see cref="F:System.Int32.MaxValue" /> を超えています。

- または -

<paramref name="label" /> に無効な文字が含まれています。</exception>
      <returns>
        <paramref name="destination" /> が、PEM でエンコードされたテキストを含めるのに十分な大きさである場合は <see langword="true" />、それ以外の場合は <see langword="false" />。</returns>
    </member>
    <member name="M:System.Security.Cryptography.PemEncoding.Write(System.ReadOnlySpan{System.Char},System.ReadOnlySpan{System.Byte})">
      <summary>指定されたラベルとデータを使用して、エンコードされた PEM を作成します。</summary>
      <param name="label">エンコードするラベル。</param>
      <param name="data">エンコードするデータ。</param>
      <exception cref="T:System.ArgumentOutOfRangeException">
        <paramref name="label" /> は、ラベルの可能な最大長を超えています。

- または -

<paramref name="data" /> は、エンコードされたデータの可能な最大長を超えています。</exception>
      <exception cref="T:System.ArgumentException">PEM でエンコードした結果として得られたテキストが <see cref="F:System.Int32.MaxValue" /> を超えています。

- または -

<paramref name="label" /> に無効な文字が含まれています。</exception>
      <returns>エンコードされた PEM の文字配列。</returns>
    </member>
    <member name="T:System.Security.Cryptography.PemFields">
      <summary>PEM データの場所に関する情報が含まれています。</summary>
    </member>
    <member name="P:System.Security.Cryptography.PemFields.Base64Data">
      <summary>PEM 内部の Base-64 データの場所を取得します。</summary>
    </member>
    <member name="P:System.Security.Cryptography.PemFields.DecodedDataLength">
      <summary>デコードされた Base-64 データのサイズをバイト単位で取得します。</summary>
    </member>
    <member name="P:System.Security.Cryptography.PemFields.Label">
      <summary>ラベルの場所を取得します。</summary>
    </member>
    <member name="P:System.Security.Cryptography.PemFields.Location">
      <summary>周囲のカプセル化境界を含め、PEM でエンコードされたテキストの場所を取得します。</summary>
    </member>
    <member name="T:System.Security.Cryptography.ToBase64Transform">
      <summary>
        <see cref="T:System.Security.Cryptography.CryptoStream" /> を base 64 に変換します。</summary>
    </member>
    <member name="M:System.Security.Cryptography.ToBase64Transform.#ctor">
      <summary>
        <see cref="T:System.Security.Cryptography.ToBase64Transform" /> クラスの新しいインスタンスを初期化します。</summary>
    </member>
    <member name="M:System.Security.Cryptography.ToBase64Transform.Clear">
      <summary>
        <see cref="T:System.Security.Cryptography.ToBase64Transform" /> によって使用されているすべてのリソースを解放します。</summary>
    </member>
    <member name="M:System.Security.Cryptography.ToBase64Transform.Dispose">
      <summary>
        <see cref="T:System.Security.Cryptography.ToBase64Transform" /> クラスの現在のインスタンスによって使用されているすべてのリソースを解放します。</summary>
    </member>
    <member name="M:System.Security.Cryptography.ToBase64Transform.Dispose(System.Boolean)">
      <summary>
        <see cref="T:System.Security.Cryptography.ToBase64Transform" /> によって使用されているアンマネージド リソースを解放し、オプションでマネージド リソースも解放します。</summary>
      <param name="disposing">マネージド リソースとアンマネージド リソースの両方を解放する場合は <see langword="true" />。アンマネージド リソースだけを解放する場合は <see langword="false" />。</param>
    </member>
    <member name="M:System.Security.Cryptography.ToBase64Transform.Finalize">
      <summary>
        <see cref="T:System.Security.Cryptography.ToBase64Transform" /> で使用されるアンマネージ リソースを解放します。</summary>
    </member>
    <member name="M:System.Security.Cryptography.ToBase64Transform.TransformBlock(System.Byte[],System.Int32,System.Int32,System.Byte[],System.Int32)">
      <summary>入力バイト配列の指定した領域を base 64 に変換し、その結果を出力バイト配列の指定した領域にコピーします。</summary>
      <param name="inputBuffer">base 64 に変換する入力。</param>
      <param name="inputOffset">入力バイト配列内のデータの使用開始位置を示すオフセット。</param>
      <param name="inputCount">データとして使用する入力バイト配列内のバイト数。</param>
      <param name="outputBuffer">結果を書き込む先の出力。</param>
      <param name="outputOffset">データの書き込みの開始位置を示す出力バイト配列内のオフセット。</param>
      <exception cref="T:System.ObjectDisposedException">現在の <see cref="T:System.Security.Cryptography.ToBase64Transform" /> オブジェクトは既に破棄されています。</exception>
      <exception cref="T:System.Security.Cryptography.CryptographicException">データ サイズが有効ではありません。</exception>
      <exception cref="T:System.ArgumentException">
        <paramref name="inputBuffer" /> パラメーターに無効なオフセット長が含まれています。  
  
- または - 
<paramref name="inputCount" /> パラメーターに正しくない値が含まれています。</exception>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="inputBuffer" /> パラメーターが <see langword="null" /> です。</exception>
      <exception cref="T:System.ArgumentOutOfRangeException">
        <paramref name="inputBuffer" /> パラメーターには、負でない数が必要です。</exception>
      <returns>書き込むバイト数。</returns>
    </member>
    <member name="M:System.Security.Cryptography.ToBase64Transform.TransformFinalBlock(System.Byte[],System.Int32,System.Int32)">
      <summary>指定したバイト配列の指定した領域を base 64 に変換します。</summary>
      <param name="inputBuffer">base 64 に変換する入力。</param>
      <param name="inputOffset">バイト配列内のデータの使用開始位置を示すオフセット。</param>
      <param name="inputCount">バイト配列内でデータとして使用されるバイトの数。</param>
      <exception cref="T:System.ObjectDisposedException">現在の <see cref="T:System.Security.Cryptography.ToBase64Transform" /> オブジェクトは既に破棄されています。</exception>
      <exception cref="T:System.ArgumentException">
        <paramref name="inputBuffer" /> パラメーターに無効なオフセット長が含まれています。  
  
- または - 
<paramref name="inputCount" /> パラメーターに正しくない値が含まれています。</exception>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="inputBuffer" /> パラメーターが <see langword="null" /> です。</exception>
      <exception cref="T:System.ArgumentOutOfRangeException">
        <paramref name="inputBuffer" /> パラメーターには、負でない数が必要です。</exception>
      <returns>計算された変換後の base 64。</returns>
    </member>
    <member name="P:System.Security.Cryptography.ToBase64Transform.CanReuseTransform">
      <summary>現在の変換を再利用できるかどうかを示す値を取得します。</summary>
      <returns>常に <see langword="true" />。</returns>
    </member>
    <member name="P:System.Security.Cryptography.ToBase64Transform.CanTransformMultipleBlocks">
      <summary>複数のブロックを変換できるかどうかを示す値を取得します。</summary>
      <returns>常に <see langword="false" />。</returns>
    </member>
    <member name="P:System.Security.Cryptography.ToBase64Transform.InputBlockSize">
      <summary>入力ブロック サイズを取得します。</summary>
      <returns>入力データ ブロックのサイズ (バイト単位)。</returns>
    </member>
    <member name="P:System.Security.Cryptography.ToBase64Transform.OutputBlockSize">
      <summary>出力ブロック サイズを取得します。</summary>
      <returns>出力データ ブロックのサイズ (バイト単位)。</returns>
    </member>
  </members>
</doc>