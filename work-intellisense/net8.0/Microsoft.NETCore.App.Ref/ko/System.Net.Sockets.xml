<?xml version="1.0" encoding="utf-8"?>
<doc xmlns:vsli="https://github.com/sk-0520/vs-localized-intellisense/tree/master/schema/2024">
  <assembly>
    <name>System.Net.Sockets</name>
  </assembly>
  <members>
    <member name="T:System.Net.Sockets.IOControlCode">
      <summary vsli:raw="Specifies the IO control codes supported by the &lt;see cref=&quot;M:System.Net.Sockets.Socket.IOControl(System.Int32,System.Byte[],System.Byte[])&quot; /&gt; method.">
        <see cref="M:System.Net.Sockets.Socket.IOControl(System.Int32,System.Byte[],System.Byte[])" /> 메서드에서 지원되는 IO 컨트롤 코드를 지정합니다.</summary>
    </member>
    <member name="F:System.Net.Sockets.IOControlCode.AbsorbRouterAlert">
      <summary vsli:raw="This value is equal to the Winsock 2 SIO_ABSORB_RTRALERT constant.">이 값은 Winsock 2 SIO_ABSORB_RTRALERT 상수와 같습니다.</summary>
    </member>
    <member name="F:System.Net.Sockets.IOControlCode.AddMulticastGroupOnInterface">
      <summary vsli:raw="Join a multicast group using an interface identified by its index. This value is equal to the Winsock 2 SIO_INDEX_ADD_MCAST constant.">인덱스로 식별된 인터페이스를 사용하여 멀티캐스트 그룹을 추가합니다. 이 값은 Winsock 2 SIO_INDEX_ADD_MCAST 상수와 같습니다.</summary>
    </member>
    <member name="F:System.Net.Sockets.IOControlCode.AddressListChange">
      <summary vsli:raw="Enable receiving notification when the list of local interfaces for the socket's protocol family changes. This value is equal to the Winsock 2 SIO_ADDRESS_LIST_CHANGE constant.">소켓의 프로토콜 패밀리에 대한 로컬 인터페이스 목록이 변경될 때 알림을 받을 수 있도록 설정합니다. 이 값은 Winsock 2 SIO_ADDRESS_LIST_CHANGE 상수와 같습니다.</summary>
    </member>
    <member name="F:System.Net.Sockets.IOControlCode.AddressListQuery">
      <summary vsli:raw="Return the list of local interfaces that the socket can bind to. This value is equal to the Winsock 2 SIO_ADDRESS_LIST_QUERY constant.">소켓이 바인딩될 수 있는 로컬 인터페이스의 목록을 반환합니다. 이 값은 Winsock 2 SIO_ADDRESS_LIST_QUERY 상수와 같습니다.</summary>
    </member>
    <member name="F:System.Net.Sockets.IOControlCode.AddressListSort">
      <summary vsli:raw="Sort the structure returned by the &lt;see cref=&quot;F:System.Net.Sockets.IOControlCode.AddressListQuery&quot; /&gt; field and add scope ID information for IPv6 addresses. This control code is supported on Windows XP and later operating systems. This value is equal to the Winsock 2 SIO_ADDRESS_LIST_SORT constant.">
        <see cref="F:System.Net.Sockets.IOControlCode.AddressListQuery" /> 필드에서 반환되는 구조체를 정렬하고 IPv6 주소에 대한 범위 ID 정보를 추가합니다. 이 컨트롤 코드는 Windows XP 이상의 운영 체제에서 지원합니다. 이 값은 Winsock 2 SIO_ADDRESS_LIST_SORT 상수와 같습니다.</summary>
    </member>
    <member name="F:System.Net.Sockets.IOControlCode.AssociateHandle">
      <summary vsli:raw="Associate this socket with the specified handle of a companion interface. Refer to the appropriate  protocol-specific annex in the Winsock 2 reference or documentation for the particular companion interface for additional details. It is recommended that the Component Object Model (COM) be used instead of this IOCTL to discover and track other interfaces that might be supported by a socket. This control code is present for backward compatibility with systems where COM is not available or cannot be used for some other reason. This value is equal to the Winsock 2 SIO_ASSOCIATE_HANDLE constant.">이 소켓을 관련 인터페이스의 지정된 핸들과 연결합니다. 자세한 내용은 특정 관련 인터페이스에 대한 Winsock 2 참조 또는 설명서에서 해당 프로토콜 관련 부록을 참조하십시오. 소켓에서 지원할 수 있는 다른 인터페이스를 검색하고 추적하려면 이 IOCTL 대신 COM(Component Object Model)을 사용하는 것이 좋습니다. 이 컨트롤 코드는 COM이 사용되지 않거나 다른 이유로 COM을 사용할 수 없는 이전 버전 시스템과의 호환성을 위해 제공됩니다. 이 값은 Winsock 2 SIO_ASSOCIATE_HANDLE 상수와 같습니다.</summary>
    </member>
    <member name="F:System.Net.Sockets.IOControlCode.AsyncIO">
      <summary vsli:raw="Enable notification for when data is waiting to be received. This value is equal to the Winsock 2 FIOASYNC constant.">데이터가 수신 대기 중일 때 알림을 사용합니다. 이 값은 Winsock 2 FIOASYNC 상수와 같습니다.</summary>
    </member>
    <member name="F:System.Net.Sockets.IOControlCode.BindToInterface">
      <summary vsli:raw="Bind the socket to a specified interface index. This value is equal to the Winsock 2 SIO_INDEX_BIND constant.">소켓을 지정된 인터페이스 인덱스에 바인딩합니다. 이 값은 Winsock 2 SIO_INDEX_BIND 상수와 같습니다.</summary>
    </member>
    <member name="F:System.Net.Sockets.IOControlCode.DataToRead">
      <summary vsli:raw="Return the number of bytes available for reading. This value is equal to the Winsock 2 FIONREAD constant.">읽을 수 있는 바이트 수를 반환합니다. 이 값은 Winsock 2 FIONREAD 상수와 같습니다.</summary>
    </member>
    <member name="F:System.Net.Sockets.IOControlCode.DeleteMulticastGroupFromInterface">
      <summary vsli:raw="Remove the socket from a multicast group. This value is equal to the Winsock 2 SIO_INDEX_ADD_MCAST constant.">멀티캐스트 그룹에서 소켓을 제거합니다. 이 값은 Winsock 2 SIO_INDEX_ADD_MCAST 상수와 같습니다.</summary>
    </member>
    <member name="F:System.Net.Sockets.IOControlCode.EnableCircularQueuing">
      <summary vsli:raw="Replace the oldest queued datagram with an incoming datagram when the incoming message queues are full. This value is equal to the Winsock 2 SIO_ENABLE_CIRCULAR_QUEUEING constant.">들어오는 메시지 큐가 가득 차면 큐에 있는 가장 오래된 데이터그램을 들어오는 데이터그램으로 바꿉니다. 이 값은 Winsock 2 SIO_ENABLE_CIRCULAR_QUEUEING 상수와 같습니다.</summary>
    </member>
    <member name="F:System.Net.Sockets.IOControlCode.Flush">
      <summary vsli:raw="Discard the contents of the sending queue. This value is equal to the Winsock 2 SIO_FLUSH constant.">보내는 큐의 내용을 삭제합니다. 이 값은 Winsock 2 SIO_FLUSH 상수와 같습니다.</summary>
    </member>
    <member name="F:System.Net.Sockets.IOControlCode.GetBroadcastAddress">
      <summary vsli:raw="Return a SOCKADDR structure that contains the broadcast address for the address family of the current socket. The returned address can be used with the &lt;see cref=&quot;Overload:System.Net.Sockets.Socket.SendTo&quot; /&gt; method. This value is equal to the Winsock 2 SIO_GET_BROADCAST_ADDRESS constant. This value can be used on User Datagram Protocol (UDP) sockets only.">현재 소켓의 주소 패밀리에 대한 브로드캐스트 주소가 들어 있는 SOCKADDR 구조체를 반환합니다. 반환된 주소는 <see cref="Overload:System.Net.Sockets.Socket.SendTo" /> 메서드와 함께 사용할 수 있습니다. 이 값은 Winsock 2 SIO_GET_BROADCAST_ADDRESS 상수와 같습니다. 이 값은 UDP(User Datagram Protocol) 소켓에서만 사용할 수 있습니다.</summary>
    </member>
    <member name="F:System.Net.Sockets.IOControlCode.GetExtensionFunctionPointer">
      <summary vsli:raw="Obtain provider-specific functions that are not part of the Winsock specification. Functions are specified using their provider-assigned GUID. This value is equal to the Winsock 2 SIO_GET_EXTENSION_FUNCTION_POINTER constant.">Winsock 사양에 포함되지 않은 공급자별 함수를 가져옵니다. 함수는 해당 공급자에 할당된 GUID를 사용하여 지정됩니다. 이 값은 Winsock 2 SIO_GET_EXTENSION_FUNCTION_POINTER 상수와 같습니다.</summary>
    </member>
    <member name="F:System.Net.Sockets.IOControlCode.GetGroupQos">
      <summary vsli:raw="Return the Quality of Service (QOS) attributes for the socket group. This value is reserved for future use, and is equal to the Winsock 2 SIO_GET_GROUP_QOS constant.">소켓 그룹의 QOS(서비스 품질) 특성을 반환합니다. 이 값은 나중에 사용할 수 있도록 예약되어 있으며 Winsock 2 SIO_GET_GROUP_QOS 상수와 같습니다.</summary>
    </member>
    <member name="F:System.Net.Sockets.IOControlCode.GetQos">
      <summary vsli:raw="Retrieve the QOS structure associated with the socket. This value is equal to the Winsock 2 SIO_GET_QOS constant.">소켓과 관련된 QOS 구조체를 검색합니다. 이 컨트롤 코드는 QOS를 사용할 수 있는 전송 수단을 제공하는 플랫폼(Windows Me, Windows 2000 이상)에서만 지원합니다. 이 값은 Winsock 2 SIO_GET_QOS 상수와 같습니다.</summary>
    </member>
    <member name="F:System.Net.Sockets.IOControlCode.KeepAliveValues">
      <summary vsli:raw="Control sending TCP keep-alive packets and the interval at which they are sent. For additional information, see RFC 1122 section 4.2.3.6. This value is equal to the Winsock 2 SIO_KEEPALIVE_VALS constant.">TCP Keep-alive 패킷 보내기와 이 패킷을 보낼 간격을 제어합니다. 자세한 내용은 RFC 1122 4.2.3.6절을 참조하십시오. 이 값은 Winsock 2 SIO_KEEPALIVE_VALS 상수와 같습니다.</summary>
    </member>
    <member name="F:System.Net.Sockets.IOControlCode.LimitBroadcasts">
      <summary vsli:raw="This value is equal to the Winsock 2 SIO_LIMIT_BROADCASTS constant.">이 값은 Winsock 2 SIO_LIMIT_BROADCASTS 상수와 같습니다.</summary>
    </member>
    <member name="F:System.Net.Sockets.IOControlCode.MulticastInterface">
      <summary vsli:raw="Set the interface used for outgoing multicast packets. The interface is identified by its index.  This value is equal to the Winsock 2 SIO_INDEX_MCASTIF constant.">나가는 멀티캐스트 패킷에 사용되는 인터페이스를 설정합니다. 이 인터페이스는 인덱스로 식별됩니다.  이 값은 Winsock 2 SIO_INDEX_MCASTIF 상수와 같습니다.</summary>
    </member>
    <member name="F:System.Net.Sockets.IOControlCode.MulticastScope">
      <summary vsli:raw="Control the number of times a multicast packet can be forwarded by a router, also known as the Time to Live (TTL), or hop count. This value is equal to the Winsock 2 SIO_MULTICAST_SCOPE constant.">라우터에서 멀티캐스트 패킷을 전달할 수 있는 횟수, 즉 TTL(Time-to-Live) 또는 홉 수를 제어합니다. 이 값은 Winsock 2 SIO_MULTICAST_SCOPE 상수와 같습니다.</summary>
    </member>
    <member name="F:System.Net.Sockets.IOControlCode.MultipointLoopback">
      <summary vsli:raw="Control whether multicast data sent by the socket appears as incoming data in the sockets receive queue. This value is equal to the Winsock 2 SIO_MULTIPOINT_LOOPBACK constant.">소켓에서 보낸 멀티캐스트 데이터가 소켓 수신 큐에서 들어오는 데이터로 나타나는지 여부를 제어합니다. 이 값은 Winsock 2 SIO_MULTIPOINT_LOOPBACK 상수와 같습니다.</summary>
    </member>
    <member name="F:System.Net.Sockets.IOControlCode.NamespaceChange">
      <summary vsli:raw="Control whether the socket receives notification when a namespace query becomes invalid. This control code is supported on Windows XP and later operating systems. This value is equal to the Winsock 2 SIO_NSP_NOTIFY_CHANGE constant.">네임스페이스 쿼리가 잘못되었을 때 소켓에서 알림을 받을지 여부를 제어합니다. 이 컨트롤 코드는 Windows XP 이상의 운영 체제에서 지원합니다. 이 값은 Winsock 2 SIO_NSP_NOTIFY_CHANGE 상수와 같습니다.</summary>
    </member>
    <member name="F:System.Net.Sockets.IOControlCode.NonBlockingIO">
      <summary vsli:raw="Control the blocking behavior of the socket. If the argument specified with this control code is zero, the socket is placed in blocking mode. If the argument is nonzero, the socket is placed in nonblocking mode. This value is equal to the Winsock 2 FIONBIO constant.">소켓의 블로킹 동작을 제어합니다. 이 컨트롤 코드로 지정된 인수가 0이면 소켓이 블로킹 모드로 설정됩니다. 인수가 0이 아니면 소켓이 비블로킹 모드로 설정됩니다. 이 값은 Winsock 2 FIONBIO 상수와 같습니다.</summary>
    </member>
    <member name="F:System.Net.Sockets.IOControlCode.OobDataRead">
      <summary vsli:raw="Return information about out-of-band data waiting to be received. When using this control code on stream sockets, the return value indicates the number of bytes available.">수신 대기 중인 out-of-band 데이터에 대한 정보를 반환합니다. 스트림 소켓에서 이 컨트롤 코드를 사용할 경우 반환 값은 사용 가능한 바이트 수를 나타냅니다.</summary>
    </member>
    <member name="F:System.Net.Sockets.IOControlCode.QueryTargetPnpHandle">
      <summary vsli:raw="Retrieve the underlying provider's SOCKET handle. This handle can be used to receive plug-and-play event notification. This value is equal to the Winsock 2 SIO_QUERY_TARGET_PNP_HANDLE constant.">내부 공급자의 SOCKET 핸들을 검색합니다. 이 핸들은 플러그 앤 플레이 이벤트 알림을 받는 데 사용할 수 있습니다. 이 값은 Winsock 2 SIO_QUERY_TARGET_PNP_HANDLE 상수와 같습니다.</summary>
    </member>
    <member name="F:System.Net.Sockets.IOControlCode.ReceiveAll">
      <summary vsli:raw="Enable receiving all IPv4 packets on the network. The socket must have address family &lt;see cref=&quot;F:System.Net.Sockets.AddressFamily.InterNetwork&quot; /&gt;, the socket type must be &lt;see cref=&quot;F:System.Net.Sockets.SocketType.Raw&quot; /&gt;, and the protocol type must be &lt;see cref=&quot;F:System.Net.Sockets.ProtocolType.IP&quot; /&gt;. The current user must belong to the Administrators group on the local computer, and the socket must be bound to a specific port. This value is equal to the Winsock 2 SIO_RCVALL constant.">네트워크에서 모든 IPv4 패킷을 받을 수 있도록 설정합니다. 소켓에는 주소 패밀리 <see cref="F:System.Net.Sockets.AddressFamily.InterNetwork" />가 있어야 하고, 소켓 형식은 <see cref="F:System.Net.Sockets.SocketType.Raw" />여야 하며, 프로토콜 형식은 <see cref="F:System.Net.Sockets.ProtocolType.IP" />여야 합니다. 현재 사용자는 로컬 컴퓨터의 관리자 그룹에 속해 있어야 하며 소켓은 특정 포트에 바인딩되어야 합니다. 이 값은 Winsock 2 SIO_RCVALL 상수와 같습니다.</summary>
    </member>
    <member name="F:System.Net.Sockets.IOControlCode.ReceiveAllIgmpMulticast">
      <summary vsli:raw="Enable receiving all Internet Group Management Protocol (IGMP) packets on the network. The socket must have address family &lt;see cref=&quot;F:System.Net.Sockets.AddressFamily.InterNetwork&quot; /&gt;, the socket type must be &lt;see cref=&quot;F:System.Net.Sockets.SocketType.Raw&quot; /&gt;, and the protocol type must be &lt;see cref=&quot;F:System.Net.Sockets.ProtocolType.Igmp&quot; /&gt;. The current user must belong to the Administrators group on the local computer, and the socket must be bound to a specific port. This value is equal to the Winsock 2 SIO_RCVALL_IGMPMCAST constant.">네트워크에서 모든 IGMP(Internet Group Management Protocol) 패킷을 받을 수 있도록 설정합니다. 소켓에는 주소 패밀리 <see cref="F:System.Net.Sockets.AddressFamily.InterNetwork" />가 있어야 하고, 소켓 형식은 <see cref="F:System.Net.Sockets.SocketType.Raw" />여야 하며, 프로토콜 형식은 <see cref="F:System.Net.Sockets.ProtocolType.Igmp" />여야 합니다. 현재 사용자는 로컬 컴퓨터의 관리자 그룹에 속해 있어야 하며 소켓은 특정 포트에 바인딩되어야 합니다. 이 값은 Winsock 2 SIO_RCVALL_IGMPMCAST 상수와 같습니다.</summary>
    </member>
    <member name="F:System.Net.Sockets.IOControlCode.ReceiveAllMulticast">
      <summary vsli:raw="Enable receiving all multicast IPv4 packets on the network. These are packets with destination addresses in the range 224.0.0.0 through 239.255.255.255. The socket must have address family &lt;see cref=&quot;F:System.Net.Sockets.AddressFamily.InterNetwork&quot; /&gt;, the socket type must be &lt;see cref=&quot;F:System.Net.Sockets.SocketType.Raw&quot; /&gt;, and the protocol type must be &lt;see cref=&quot;F:System.Net.Sockets.ProtocolType.Udp&quot; /&gt;. The current user must belong to the Administrators group on the local computer, and the socket must be bound to a specific port. This value is equal to the Winsock 2 SIO_RCVALL_MCAST constant.">네트워크에서 모든 멀티캐스트 IPv4 패킷을 받을 수 있도록 설정합니다. 멀티캐스트 패킷은 대상 주소 범위가 224.0.0.0부터 239.255.255.255까지인 패킷입니다. 소켓에는 주소 패밀리 <see cref="F:System.Net.Sockets.AddressFamily.InterNetwork" />가 있어야 하고, 소켓 형식은 <see cref="F:System.Net.Sockets.SocketType.Raw" />여야 하며, 프로토콜 형식은 <see cref="F:System.Net.Sockets.ProtocolType.Udp" />여야 합니다. 현재 사용자는 로컬 컴퓨터의 관리자 그룹에 속해 있어야 하며 소켓은 특정 포트에 바인딩되어야 합니다. 이 값은 Winsock 2 SIO_RCVALL_MCAST 상수와 같습니다.</summary>
    </member>
    <member name="F:System.Net.Sockets.IOControlCode.RoutingInterfaceChange">
      <summary vsli:raw="Enable receiving notification when the local interface used to access a remote endpoint changes. This value is equal to the Winsock 2 SIO_ROUTING_INTERFACE_CHANGE constant.">원격 엔드포인트에 액세스하는 데 사용되는 로컬 인터페이스가 변경될 때 알림을 받을 수 있도록 설정합니다. 이 값은 Winsock 2 SIO_ROUTING_INTERFACE_CHANGE 상수와 같습니다.</summary>
    </member>
    <member name="F:System.Net.Sockets.IOControlCode.RoutingInterfaceQuery">
      <summary vsli:raw="Return the interface addresses that can be used to connect to the specified remote address. This value is equal to the Winsock 2 SIO_ROUTING_INTERFACE_QUERY constant.">지정된 원격 주소에 연결하는 데 사용할 수 있는 인터페이스 주소를 반환합니다. 이 값은 Winsock 2 SIO_ROUTING_INTERFACE_QUERY 상수와 같습니다.</summary>
    </member>
    <member name="F:System.Net.Sockets.IOControlCode.SetGroupQos">
      <summary vsli:raw="Set the Quality of Service (QOS) attributes for the socket group. This value is reserved for future use and is equal to the Winsock 2 SIO_SET_GROUP_QOS constant.">소켓 그룹의 QOS(서비스 품질) 특성을 설정합니다. 이 값은 나중에 사용할 수 있도록 예약되어 있으며 Winsock 2 SIO_SET_GROUP_QOS 상수와 같습니다.</summary>
    </member>
    <member name="F:System.Net.Sockets.IOControlCode.SetQos">
      <summary vsli:raw="Set the Quality of Service (QOS) attributes for the socket. QOS defines the bandwidth requirements for the socket. This value is equal to the Winsock 2 SIO_SET_QOS constant.">소켓의 QOS(서비스 품질) 특성을 설정합니다. QOS는 소켓에 대한 대역폭 요구 사항을 정의합니다. 이 값은 Winsock 2 SIO_SET_QOS 상수와 같습니다.</summary>
    </member>
    <member name="F:System.Net.Sockets.IOControlCode.TranslateHandle">
      <summary vsli:raw="Return a handle for the socket that is valid in the context of a companion interface. This value is equal to the Winsock 2 SIO_TRANSLATE_HANDLE constant.">관련 인터페이스의 컨텍스트에서 유효한 소켓의 핸들을 반환합니다. 이 값은 Winsock 2 SIO_TRANSLATE_HANDLE 상수와 같습니다.</summary>
    </member>
    <member name="F:System.Net.Sockets.IOControlCode.UnicastInterface">
      <summary vsli:raw="Set the interface used for outgoing unicast packets. This value is equal to the Winsock 2 SIO_UCAST_IF constant.">나가는 유니캐스트 패킷에 사용되는 인터페이스를 설정합니다. 이 값은 Winsock 2 SIO_UCAST_IF 상수와 같습니다.</summary>
    </member>
    <member name="T:System.Net.Sockets.IPPacketInformation">
      <summary vsli:raw="Presents the packet information from a call to &lt;see cref=&quot;M:System.Net.Sockets.Socket.ReceiveMessageFrom(System.Byte[],System.Int32,System.Int32,System.Net.Sockets.SocketFlags@,System.Net.EndPoint@,System.Net.Sockets.IPPacketInformation@)&quot; /&gt; or &lt;see cref=&quot;M:System.Net.Sockets.Socket.EndReceiveMessageFrom(System.IAsyncResult,System.Net.Sockets.SocketFlags@,System.Net.EndPoint@,System.Net.Sockets.IPPacketInformation@)&quot; /&gt;.">
        <see cref="M:System.Net.Sockets.Socket.ReceiveMessageFrom(System.Byte[],System.Int32,System.Int32,System.Net.Sockets.SocketFlags@,System.Net.EndPoint@,System.Net.Sockets.IPPacketInformation@)" /> 또는 <see cref="M:System.Net.Sockets.Socket.EndReceiveMessageFrom(System.IAsyncResult,System.Net.Sockets.SocketFlags@,System.Net.EndPoint@,System.Net.Sockets.IPPacketInformation@)" />을 호출하여 받은 패킷 정보를 나타냅니다.</summary>
    </member>
    <member name="M:System.Net.Sockets.IPPacketInformation.Equals(System.Object)">
      <summary vsli:raw="Returns a value that indicates whether this instance is equal to a specified object.">@FSHO2@이 인스턴스가 지정한 개체와 같은지를 나타내는 값을 반환합니다.</summary>
      <param name="comparand" vsli:raw="The object to compare with this instance.">이 인스턴스와 비교할 개체입니다.</param>
      <returns vsli:raw="&lt;see langword=&quot;true&quot; /&gt; if &lt;paramref name=&quot;comparand&quot; /&gt; is an instance of &lt;see cref=&quot;T:System.Net.Sockets.IPPacketInformation&quot; /&gt; and equals the value of the instance; otherwise, &lt;see langword=&quot;false&quot; /&gt;.">
        <paramref name="comparand" />가 <see cref="T:System.Net.Sockets.IPPacketInformation" />의 인스턴스이고 해당 인스턴스의 값과 같으면 <see langword="true" />이고, 그렇지 않으면 <see langword="false" />입니다.</returns>
    </member>
    <member name="M:System.Net.Sockets.IPPacketInformation.GetHashCode">
      <summary vsli:raw="Returns the hash code for this instance.">이 인스턴스의 해시 코드를 반환합니다.</summary>
      <returns vsli:raw="An Int32 hash code.">Int32 해시 코드입니다.</returns>
    </member>
    <member name="M:System.Net.Sockets.IPPacketInformation.op_Equality(System.Net.Sockets.IPPacketInformation,System.Net.Sockets.IPPacketInformation)">
      <summary vsli:raw="Tests whether two specified &lt;see cref=&quot;T:System.Net.Sockets.IPPacketInformation&quot; /&gt; instances are equivalent.">지정된 두 <see cref="T:System.Net.Sockets.IPPacketInformation" /> 인스턴스가 같은지 여부를 테스트합니다.</summary>
      <param name="packetInformation1" vsli:raw="The &lt;see cref=&quot;T:System.Net.Sockets.IPPacketInformation&quot; /&gt; instance that is to the left of the equality operator.">같음 연산자의 왼쪽에 있는 <see cref="T:System.Net.Sockets.IPPacketInformation" /> 인스턴스입니다.</param>
      <param name="packetInformation2" vsli:raw="The &lt;see cref=&quot;T:System.Net.Sockets.IPPacketInformation&quot; /&gt; instance that is to the right of the equality operator.">같음 연산자의 오른쪽에 있는 <see cref="T:System.Net.Sockets.IPPacketInformation" /> 인스턴스입니다.</param>
      <returns vsli:raw="&lt;see langword=&quot;true&quot; /&gt; if &lt;paramref name=&quot;packetInformation1&quot; /&gt; and &lt;paramref name=&quot;packetInformation2&quot; /&gt; are equal; otherwise, &lt;see langword=&quot;false&quot; /&gt;.">
        <paramref name="packetInformation1" />과 <paramref name="packetInformation2" />가 같으면 <see langword="true" />이고, 그렇지 않으면 <see langword="false" />입니다.</returns>
    </member>
    <member name="M:System.Net.Sockets.IPPacketInformation.op_Inequality(System.Net.Sockets.IPPacketInformation,System.Net.Sockets.IPPacketInformation)">
      <summary vsli:raw="Tests whether two specified &lt;see cref=&quot;T:System.Net.Sockets.IPPacketInformation&quot; /&gt; instances are not equal.">지정된 두 <see cref="T:System.Net.Sockets.IPPacketInformation" /> 인스턴스가 서로 다른지 여부를 테스트합니다.</summary>
      <param name="packetInformation1" vsli:raw="The &lt;see cref=&quot;T:System.Net.Sockets.IPPacketInformation&quot; /&gt; instance that is to the left of the inequality operator.">같지 않음 연산자의 왼쪽에 있는 <see cref="T:System.Net.Sockets.IPPacketInformation" /> 인스턴스입니다.</param>
      <param name="packetInformation2" vsli:raw="The &lt;see cref=&quot;T:System.Net.Sockets.IPPacketInformation&quot; /&gt; instance that is to the right of the inequality operator.">같지 않음 연산자의 오른쪽에 있는 <see cref="T:System.Net.Sockets.IPPacketInformation" /> 인스턴스입니다.</param>
      <returns vsli:raw="&lt;see langword=&quot;true&quot; /&gt; if &lt;paramref name=&quot;packetInformation1&quot; /&gt; and &lt;paramref name=&quot;packetInformation2&quot; /&gt; are unequal; otherwise, &lt;see langword=&quot;false&quot; /&gt;.">
        <paramref name="packetInformation1" />와 <paramref name="packetInformation2" />가 다르면 <see langword="true" />이고,다르지 않으면 <see langword="false" />입니다.</returns>
    </member>
    <member name="P:System.Net.Sockets.IPPacketInformation.Address">
      <summary vsli:raw="Gets the origin information of the packet that was received as a result of calling the &lt;see cref=&quot;M:System.Net.Sockets.Socket.ReceiveMessageFrom(System.Byte[],System.Int32,System.Int32,System.Net.Sockets.SocketFlags@,System.Net.EndPoint@,System.Net.Sockets.IPPacketInformation@)&quot; /&gt; method or &lt;see cref=&quot;M:System.Net.Sockets.Socket.EndReceiveMessageFrom(System.IAsyncResult,System.Net.Sockets.SocketFlags@,System.Net.EndPoint@,System.Net.Sockets.IPPacketInformation@)&quot; /&gt; method.">
        <see cref="M:System.Net.Sockets.Socket.ReceiveMessageFrom(System.Byte[],System.Int32,System.Int32,System.Net.Sockets.SocketFlags@,System.Net.EndPoint@,System.Net.Sockets.IPPacketInformation@)" /> 메서드나 <see cref="M:System.Net.Sockets.Socket.EndReceiveMessageFrom(System.IAsyncResult,System.Net.Sockets.SocketFlags@,System.Net.EndPoint@,System.Net.Sockets.IPPacketInformation@)" /> 메서드를 호출한 결과로 받은 패킷의 원본 정보를 가져옵니다.</summary>
      <returns vsli:raw="An &lt;see cref=&quot;T:System.Net.IPAddress&quot; /&gt; that indicates the origin information of the packet that was received as a result of calling the &lt;see cref=&quot;M:System.Net.Sockets.Socket.ReceiveMessageFrom(System.Byte[],System.Int32,System.Int32,System.Net.Sockets.SocketFlags@,System.Net.EndPoint@,System.Net.Sockets.IPPacketInformation@)&quot; /&gt; method or &lt;see cref=&quot;M:System.Net.Sockets.Socket.EndReceiveMessageFrom(System.IAsyncResult,System.Net.Sockets.SocketFlags@,System.Net.EndPoint@,System.Net.Sockets.IPPacketInformation@)&quot; /&gt; method. For packets that were sent from a unicast address, the &lt;see cref=&quot;P:System.Net.Sockets.IPPacketInformation.Address&quot; /&gt; property will return the &lt;see cref=&quot;T:System.Net.IPAddress&quot; /&gt; of the sender; for multicast or broadcast packets, the &lt;see cref=&quot;P:System.Net.Sockets.IPPacketInformation.Address&quot; /&gt; property will return the multicast or broadcast &lt;see cref=&quot;T:System.Net.IPAddress&quot; /&gt;.">
        <see cref="T:System.Net.IPAddress" /> 메서드나 <see cref="M:System.Net.Sockets.Socket.ReceiveMessageFrom(System.Byte[],System.Int32,System.Int32,System.Net.Sockets.SocketFlags@,System.Net.EndPoint@,System.Net.Sockets.IPPacketInformation@)" /> 메서드를 호출한 결과로 받은 패킷의 원본 정보를 나타내는 <see cref="M:System.Net.Sockets.Socket.EndReceiveMessageFrom(System.IAsyncResult,System.Net.Sockets.SocketFlags@,System.Net.EndPoint@,System.Net.Sockets.IPPacketInformation@)" />입니다. 유니캐스트 주소에서 보낸 패킷의 경우 <see cref="P:System.Net.Sockets.IPPacketInformation.Address" /> 속성은 송신자의 <see cref="T:System.Net.IPAddress" />를 반환하고, 멀티캐스트 또는 브로드캐스트 패킷의 경우 <see cref="P:System.Net.Sockets.IPPacketInformation.Address" /> 속성은 멀티캐스트 또는 브로드캐스트 <see cref="T:System.Net.IPAddress" />를 반환합니다.</returns>
    </member>
    <member name="P:System.Net.Sockets.IPPacketInformation.Interface">
      <summary vsli:raw="Gets the network interface information that is associated with a call to &lt;see cref=&quot;M:System.Net.Sockets.Socket.ReceiveMessageFrom(System.Byte[],System.Int32,System.Int32,System.Net.Sockets.SocketFlags@,System.Net.EndPoint@,System.Net.Sockets.IPPacketInformation@)&quot; /&gt; or &lt;see cref=&quot;M:System.Net.Sockets.Socket.EndReceiveMessageFrom(System.IAsyncResult,System.Net.Sockets.SocketFlags@,System.Net.EndPoint@,System.Net.Sockets.IPPacketInformation@)&quot; /&gt;.">
        <see cref="M:System.Net.Sockets.Socket.ReceiveMessageFrom(System.Byte[],System.Int32,System.Int32,System.Net.Sockets.SocketFlags@,System.Net.EndPoint@,System.Net.Sockets.IPPacketInformation@)" /> 또는 <see cref="M:System.Net.Sockets.Socket.EndReceiveMessageFrom(System.IAsyncResult,System.Net.Sockets.SocketFlags@,System.Net.EndPoint@,System.Net.Sockets.IPPacketInformation@)" /> 호출과 관련된 네트워크 인터페이스 정보를 가져옵니다.</summary>
      <returns vsli:raw="An &lt;see cref=&quot;T:System.Int32&quot; /&gt; value, which represents the index of the network interface. You can use this index with &lt;see cref=&quot;M:System.Net.NetworkInformation.NetworkInterface.GetAllNetworkInterfaces&quot; /&gt; to get more information about the relevant interface.">네트워크 인터페이스의 인덱스를 나타내는 <see cref="T:System.Int32" /> 값입니다. <see cref="M:System.Net.NetworkInformation.NetworkInterface.GetAllNetworkInterfaces" />에 이 인덱스를 사용하면 관련 인터페이스에 대해 더 많은 정보를 가져올 수 있습니다.</returns>
    </member>
    <member name="T:System.Net.Sockets.IPProtectionLevel">
      <summary vsli:raw="A value that enables restriction of an IPv6 socket to a specified scope, such as addresses with the same link local or site local prefix.">링크 로컬 또는 사이트 로컬 접두사가 동일한 주소와 같이 지정된 범위에 IPv6 소켓 제한을 설정하는 값입니다.</summary>
    </member>
    <member name="F:System.Net.Sockets.IPProtectionLevel.EdgeRestricted">
      <summary vsli:raw="The IP protection level is edge restricted. This value would be used by applications designed to operate across the Internet. This setting does not allow Network Address Translation (NAT) traversal using the Windows Teredo implementation. These applications may bypass IPv4 firewalls, so applications must be hardened against Internet attacks directed at the opened port. On Windows Server 2003 and Windows XP, the default value for the IP Protection level on a socket is edge restricted.">IP 보호 수준이 경계 제한됨입니다. 이 값은 인터넷을 통해 작동하도록 디자인된 애플리케이션에서 사용됩니다. 이 설정은 Windows Teredo 구현을 사용하는 NAT(Network Address Translation) 통과를 허용하지 않습니다. 이러한 애플리케이션에서는 IPv4 방화벽이 무시될 수 있으므로 열린 포트로 향하는 인터넷 공격을 막기 위해 애플리케이션의 보안 기능을 강화해야 합니다. Windows Server 2003 및 Windows XP에서는 소켓에 대한 IP 보호 수준이 기본적으로 경계 제한됨으로 설정됩니다.</summary>
    </member>
    <member name="F:System.Net.Sockets.IPProtectionLevel.Restricted">
      <summary vsli:raw="The IP protection level is restricted. This value would be used by intranet applications that do not implement Internet scenarios. These applications are generally not tested or hardened against Internet-style attacks. This setting will limit the received traffic to link-local only.">IP 보호 수준이 제한됨입니다. 이 값은 인터넷 시나리오를 구현하지 않는 인트라넷 애플리케이션에서 사용됩니다. 일반적으로 이러한 애플리케이션은 인터넷형 공격에 대해 테스트되거나 보안이 강화되어 있지 않습니다. 이 설정은 링크 로컬에서만 트래픽을 받도록 제한합니다.</summary>
    </member>
    <member name="F:System.Net.Sockets.IPProtectionLevel.Unrestricted">
      <summary vsli:raw="The IP protection level is unrestricted. This value would be used by applications designed to operate across the Internet, including applications taking advantage of IPv6 NAT traversal capabilities built into Windows (Teredo, for example). These applications may bypass IPv4 firewalls, so applications must be hardened against Internet attacks directed at the opened port. On Windows Server 2008 R2 and Windows Vista, the default value for the IP Protection level on a socket is unrestricted.">IP 보호 수준이 제한하지 않음입니다. 이 값은 Windows에 구축된 IPv6 NAT 통과 기능(예: Teredo)을 이용하는 애플리케이션을 비롯하여 인터넷을 통해 작동하도록 디자인된 애플리케이션에서 사용됩니다. 이러한 애플리케이션에서는 IPv4 방화벽이 무시될 수 있으므로 열린 포트로 향하는 인터넷 공격을 막기 위해 애플리케이션의 보안 기능을 강화해야 합니다. Windows Server 2008 R2 및 Windows Vista에서는 소켓에 대한 IP 보호 수준이 기본적으로 제한되지 않음으로 설정됩니다.</summary>
    </member>
    <member name="F:System.Net.Sockets.IPProtectionLevel.Unspecified">
      <summary vsli:raw="The IP protection level is unspecified. On Windows 7 and Windows Server 2008 R2, the default value for the IP Protection level on a socket is unspecified.">IP 보호 수준이 지정되지 않음입니다. Windows 7 및 Windows Server 2008 R2에서는 소켓에 대한 IP 보호 수준이 기본적으로 지정되지 않음으로 설정됩니다.</summary>
    </member>
    <member name="T:System.Net.Sockets.IPv6MulticastOption">
      <summary vsli:raw="Contains option values for joining an IPv6 multicast group.">IPv6 멀티캐스트 그룹에 추가하기 위한 옵션 값이 포함됩니다.</summary>
    </member>
    <member name="M:System.Net.Sockets.IPv6MulticastOption.#ctor(System.Net.IPAddress)">
      <summary vsli:raw="Initializes a new version of the &lt;see cref=&quot;T:System.Net.Sockets.IPv6MulticastOption&quot; /&gt; class for the specified IP multicast group.">지정된 IP 멀티캐스트 그룹에 대한 <see cref="T:System.Net.Sockets.IPv6MulticastOption" /> 클래스의 새 버전을 초기화합니다.</summary>
      <param name="group" vsli:raw="The &lt;see cref=&quot;T:System.Net.IPAddress&quot; /&gt; of the multicast group.">멀티캐스트 그룹의 <see cref="T:System.Net.IPAddress" />입니다.</param>
      <exception cref="T:System.ArgumentNullException" vsli:raw="&lt;paramref name=&quot;group&quot; /&gt; is &lt;see langword=&quot;null&quot; /&gt;.">
        <paramref name="group" />이(가) <see langword="null" />인 경우</exception>
    </member>
    <member name="M:System.Net.Sockets.IPv6MulticastOption.#ctor(System.Net.IPAddress,System.Int64)">
      <summary vsli:raw="Initializes a new instance of the &lt;see cref=&quot;T:System.Net.Sockets.IPv6MulticastOption&quot; /&gt; class with the specified IP multicast group and the local interface address.">지정된 IP 멀티캐스트 그룹 및 로컬 인터페이스 주소를 사용하여 <see cref="T:System.Net.Sockets.IPv6MulticastOption" /> 클래스의 새 인스턴스를 초기화합니다.</summary>
      <param name="group" vsli:raw="The group &lt;see cref=&quot;T:System.Net.IPAddress&quot; /&gt;.">
        <see cref="T:System.Net.IPAddress" /> 그룹입니다.</param>
      <param name="ifindex" vsli:raw="The local interface address.">로컬 인터페이스 주소입니다.</param>
      <exception cref="T:System.ArgumentOutOfRangeException" vsli:raw="&lt;paramref name=&quot;ifindex&quot; /&gt; is less than 0.  &#xA;  &#xA; -or-  &#xA;  &#xA; &lt;paramref name=&quot;ifindex&quot; /&gt; is greater than 0x00000000FFFFFFFF.">
        <paramref name="ifindex" /> 가 0보다 작습니다.  
  
또는 
 <paramref name="ifindex" />가 0x00000000FFFFFFFF보다 큰 경우</exception>
      <exception cref="T:System.ArgumentNullException" vsli:raw="&lt;paramref name=&quot;group&quot; /&gt; is &lt;see langword=&quot;null&quot; /&gt;.">
        <paramref name="group" />이(가) <see langword="null" />인 경우</exception>
    </member>
    <member name="P:System.Net.Sockets.IPv6MulticastOption.Group">
      <summary vsli:raw="Gets or sets the IP address of a multicast group.">멀티캐스트 그룹의 IP 주소를 가져오거나 설정합니다.</summary>
      <exception cref="T:System.ArgumentNullException" vsli:raw="&lt;paramref name=&quot;group&quot; /&gt; is &lt;see langword=&quot;null&quot; /&gt;.">
        <paramref name="group" />이(가) <see langword="null" />인 경우</exception>
      <returns vsli:raw="An &lt;see cref=&quot;T:System.Net.IPAddress&quot; /&gt; that contains the Internet address of a multicast group.">멀티캐스트 그룹의 인터넷 주소가 들어 있는 <see cref="T:System.Net.IPAddress" />입니다.</returns>
    </member>
    <member name="P:System.Net.Sockets.IPv6MulticastOption.InterfaceIndex">
      <summary vsli:raw="Gets or sets the interface index that is associated with a multicast group.">멀티캐스트 그룹과 관련된 인터페이스 인덱스를 가져오거나 설정합니다.</summary>
      <exception cref="T:System.ArgumentOutOfRangeException" vsli:raw="The value that is specified for a set operation is less than 0 or greater than 0x00000000FFFFFFFF.">set 작업에 지정된 값이 0보다 작거나 0x00000000FFFFFFFF보다 큰 경우</exception>
      <returns vsli:raw="A &lt;see cref=&quot;T:System.UInt64&quot; /&gt; value that specifies the address of the interface.">인터페이스의 주소를 지정하는 <see cref="T:System.UInt64" /> 값입니다.</returns>
    </member>
    <member name="T:System.Net.Sockets.LingerOption">
      <summary vsli:raw="Specifies whether a &lt;see cref=&quot;T:System.Net.Sockets.Socket&quot; /&gt; will remain connected after a call to the &lt;see cref=&quot;M:System.Net.Sockets.Socket.Close&quot; /&gt; or &lt;see cref=&quot;M:System.Net.Sockets.TcpClient.Close&quot; /&gt; methods and the length of time it will remain connected, if data remains to be sent.">데이터가 전송 대기 상태일 때 <see cref="T:System.Net.Sockets.Socket" /> 또는 <see cref="M:System.Net.Sockets.Socket.Close" /> 메서드를 호출한 후 <see cref="M:System.Net.Sockets.TcpClient.Close" />이 연결 상태로 유지될지 여부와 연결 상태로 유지될 시간을 지정합니다.</summary>
    </member>
    <member name="M:System.Net.Sockets.LingerOption.#ctor(System.Boolean,System.Int32)">
      <summary vsli:raw="Initializes a new instance of the &lt;see cref=&quot;T:System.Net.Sockets.LingerOption&quot; /&gt; class.">
        <see cref="T:System.Net.Sockets.LingerOption" /> 클래스의 새 인스턴스를 초기화합니다.</summary>
      <param name="enable" vsli:raw="&lt;see langword=&quot;true&quot; /&gt; to remain connected after the &lt;see cref=&quot;M:System.Net.Sockets.Socket.Close&quot; /&gt; method is called; otherwise, &lt;see langword=&quot;false&quot; /&gt;.">
        <see cref="M:System.Net.Sockets.Socket.Close" /> 메서드를 호출한 후 연결 상태를 유지하려면 <see langword="true" />이고, 그렇지 않으면 <see langword="false" />입니다.</param>
      <param name="seconds" vsli:raw="The number of seconds to remain connected after the &lt;see cref=&quot;M:System.Net.Sockets.Socket.Close&quot; /&gt; method is called.">
        <see cref="M:System.Net.Sockets.Socket.Close" /> 메서드를 호출한 후 연결 상태를 유지하는 시간(초)입니다.</param>
    </member>
    <member name="P:System.Net.Sockets.LingerOption.Enabled">
      <summary vsli:raw="Gets or sets a value that indicates whether to linger after the &lt;see cref=&quot;T:System.Net.Sockets.Socket&quot; /&gt; is closed.">
        <see cref="T:System.Net.Sockets.Socket" />이 닫힌 후 링거할지 여부를 나타내는 값을 가져오거나 설정합니다.</summary>
      <returns vsli:raw="&lt;see langword=&quot;true&quot; /&gt; if the &lt;see cref=&quot;T:System.Net.Sockets.Socket&quot; /&gt; should linger after &lt;see cref=&quot;M:System.Net.Sockets.Socket.Close&quot; /&gt; is called; otherwise, &lt;see langword=&quot;false&quot; /&gt;.">
        <see cref="T:System.Net.Sockets.Socket" />를 호출한 후 <see cref="M:System.Net.Sockets.Socket.Close" />이 링거되면 <see langword="true" />이고, 그렇지 않으면 <see langword="false" />입니다.</returns>
    </member>
    <member name="P:System.Net.Sockets.LingerOption.LingerTime">
      <summary vsli:raw="Gets or sets the amount of time to remain connected after calling the &lt;see cref=&quot;M:System.Net.Sockets.Socket.Close&quot; /&gt; method if data remains to be sent.">데이터가 전송 대기 상태인 경우 <see cref="M:System.Net.Sockets.Socket.Close" /> 메서드를 호출한 후 연결 상태를 유지할 시간을 가져오거나 설정합니다.</summary>
      <returns vsli:raw="The amount of time, in seconds, to remain connected after calling &lt;see cref=&quot;M:System.Net.Sockets.Socket.Close&quot; /&gt;.">
        <see cref="M:System.Net.Sockets.Socket.Close" />를 호출한 후 연결 상태를 유지하는 시간(초)입니다.</returns>
    </member>
    <member name="T:System.Net.Sockets.MulticastOption">
      <summary vsli:raw="Contains &lt;see cref=&quot;T:System.Net.IPAddress&quot; /&gt; values used to join and drop multicast groups.">멀티캐스트 그룹을 추가하거나 삭제하는 데 사용되는 <see cref="T:System.Net.IPAddress" /> 값이 들어 있습니다.</summary>
    </member>
    <member name="M:System.Net.Sockets.MulticastOption.#ctor(System.Net.IPAddress)">
      <summary vsli:raw="Initializes a new version of the &lt;see cref=&quot;T:System.Net.Sockets.MulticastOption&quot; /&gt; class for the specified IP multicast group.">지정된 IP 멀티캐스트 그룹에 대한 <see cref="T:System.Net.Sockets.MulticastOption" /> 클래스의 새 버전을 초기화합니다.</summary>
      <param name="group" vsli:raw="The IP address of the multicast group.">멀티캐스트 그룹의 IP 주소입니다.</param>
      <exception cref="T:System.ArgumentNullException" vsli:raw="&lt;paramref name=&quot;group&quot; /&gt; is &lt;see langword=&quot;null&quot; /&gt;.">
        <paramref name="group" />이(가) <see langword="null" />인 경우</exception>
    </member>
    <member name="M:System.Net.Sockets.MulticastOption.#ctor(System.Net.IPAddress,System.Int32)">
      <summary vsli:raw="Initializes a new instance of the &lt;see cref=&quot;T:System.Net.Sockets.MulticastOption&quot; /&gt; class with the specified IP multicast group address and interface index.">지정된 IP 멀티캐스트 그룹 주소 및 인터페이스 인덱스를 사용하여 <see cref="T:System.Net.Sockets.MulticastOption" /> 클래스의 새 인스턴스를 초기화합니다.</summary>
      <param name="group" vsli:raw="The IP address of the multicast group.">멀티캐스트 그룹의 IP 주소입니다.</param>
      <param name="interfaceIndex" vsli:raw="The index of the interface that's used to send and receive multicast packets.">멀티캐스트 패킷을 보내고 받는 데 사용되는 인터페이스의 인덱스입니다.</param>
    </member>
    <member name="M:System.Net.Sockets.MulticastOption.#ctor(System.Net.IPAddress,System.Net.IPAddress)">
      <summary vsli:raw="Initializes a new instance of the &lt;see cref=&quot;T:System.Net.Sockets.MulticastOption&quot; /&gt; class with the specified IP multicast group address and local IP address associated with a network interface.">지정된 IP 멀티캐스트 그룹 주소 및 네트워크 인터페이스와 관련된 로컬 IP 주소를 사용하여 <see cref="T:System.Net.Sockets.MulticastOption" /> 클래스의 새 인스턴스를 초기화합니다.</summary>
      <param name="group" vsli:raw="The group IP address.">그룹 IP 주소입니다.</param>
      <param name="mcint" vsli:raw="The local IP address.">로컬 IP 주소입니다.</param>
      <exception cref="T:System.ArgumentNullException" vsli:raw="&lt;paramref name=&quot;group&quot; /&gt; is &lt;see langword=&quot;null&quot; /&gt;.  &#xA;  &#xA; -or-  &#xA;  &#xA; &lt;paramref name=&quot;mcint&quot; /&gt; is &lt;see langword=&quot;null&quot; /&gt;.">
        <paramref name="group" />이(가) <see langword="null" />인 경우  
  
또는 
 <paramref name="mcint" />이(가) <see langword="null" />인 경우</exception>
    </member>
    <member name="P:System.Net.Sockets.MulticastOption.Group">
      <summary vsli:raw="Gets or sets the IP address of a multicast group.">멀티캐스트 그룹의 IP 주소를 가져오거나 설정합니다.</summary>
      <exception cref="T:System.ArgumentNullException" vsli:raw="&#xA;          .NET 5 and later versions: &lt;paramref name=&quot;group&quot; /&gt; is &lt;see langword=&quot;null&quot; /&gt;.">.NET 5.0 이상 버전: <paramref name="group" />은 <see langword="null" />입니다.</exception>
      <returns vsli:raw="The IP address of a multicast group.">멀티 캐스트 그룹의 IP 주소입니다.</returns>
    </member>
    <member name="P:System.Net.Sockets.MulticastOption.InterfaceIndex">
      <summary vsli:raw="Gets or sets the index of the interface that's used to send and receive multicast packets.">멀티캐스트 패킷을 보내고 받는 데 사용되는 인터페이스의 인덱스를 가져오거나 설정합니다.</summary>
      <returns vsli:raw="The index of a &lt;see cref=&quot;T:System.Net.NetworkInformation.NetworkInterface&quot; /&gt; array element.">
        <see cref="T:System.Net.NetworkInformation.NetworkInterface" />배열 요소의 인덱스입니다.</returns>
    </member>
    <member name="P:System.Net.Sockets.MulticastOption.LocalAddress">
      <summary vsli:raw="Gets or sets the local address associated with a multicast group.">멀티캐스트 그룹과 관련된 로컬 주소를 가져오거나 설정합니다.</summary>
      <returns vsli:raw="The local address associated with a multicast group.">멀티 캐스트 그룹과 연결 된 로컬 주소입니다.</returns>
    </member>
    <member name="T:System.Net.Sockets.NetworkStream">
      <summary vsli:raw="Provides the underlying stream of data for network access.">네트워크 액세스를 위한 데이터의 기본 스트림을 제공합니다.</summary>
    </member>
    <member name="M:System.Net.Sockets.NetworkStream.#ctor(System.Net.Sockets.Socket)">
      <summary vsli:raw="Creates a new instance of the &lt;see cref=&quot;T:System.Net.Sockets.NetworkStream&quot; /&gt; class for the specified &lt;see cref=&quot;T:System.Net.Sockets.Socket&quot; /&gt;.">지정된 <see cref="T:System.Net.Sockets.NetworkStream" />에 대한 <see cref="T:System.Net.Sockets.Socket" /> 클래스의 새 인스턴스를 만듭니다.</summary>
      <param name="socket" vsli:raw="The &lt;see cref=&quot;T:System.Net.Sockets.Socket&quot; /&gt; that the &lt;see cref=&quot;T:System.Net.Sockets.NetworkStream&quot; /&gt; will use to send and receive data.">
        <see cref="T:System.Net.Sockets.Socket" />에서 데이터를 보내고 받는 데 사용할 <see cref="T:System.Net.Sockets.NetworkStream" />입니다.</param>
      <exception cref="T:System.ArgumentNullException" vsli:raw="The &lt;paramref name=&quot;socket&quot; /&gt; parameter is &lt;see langword=&quot;null&quot; /&gt;.">
        <paramref name="socket" /> 매개 변수가 <see langword="null" />인 경우</exception>
      <exception cref="T:System.IO.IOException" vsli:raw="The &lt;paramref name=&quot;socket&quot; /&gt; parameter is not connected.  &#xA;  &#xA; -or-  &#xA;  &#xA; The &lt;see cref=&quot;P:System.Net.Sockets.Socket.SocketType&quot; /&gt; property of the &lt;paramref name=&quot;socket&quot; /&gt; parameter is not &lt;see cref=&quot;F:System.Net.Sockets.SocketType.Stream&quot; /&gt;.  &#xA;  &#xA; -or-  &#xA;  &#xA; The &lt;paramref name=&quot;socket&quot; /&gt; parameter is in a nonblocking state.">
        <paramref name="socket" /> 매개 변수가 연결되지 않은 경우  
  
또는 
<paramref name="socket" /> 매개 변수의 <see cref="P:System.Net.Sockets.Socket.SocketType" /> 속성이 <see cref="F:System.Net.Sockets.SocketType.Stream" />이 아닌 경우  
  
또는 
<paramref name="socket" /> 매개 변수가 비블로킹 상태인 경우</exception>
    </member>
    <member name="M:System.Net.Sockets.NetworkStream.#ctor(System.Net.Sockets.Socket,System.Boolean)">
      <summary vsli:raw="Initializes a new instance of the &lt;see cref=&quot;T:System.Net.Sockets.NetworkStream&quot; /&gt; class for the specified &lt;see cref=&quot;T:System.Net.Sockets.Socket&quot; /&gt; with the specified &lt;see cref=&quot;T:System.Net.Sockets.Socket&quot; /&gt; ownership.">지정된 <see cref="T:System.Net.Sockets.NetworkStream" /> 소유권을 사용하여 지정된 <see cref="T:System.Net.Sockets.Socket" />에 대한 <see cref="T:System.Net.Sockets.Socket" /> 클래스의 새 인스턴스를 초기화합니다.</summary>
      <param name="socket" vsli:raw="The &lt;see cref=&quot;T:System.Net.Sockets.Socket&quot; /&gt; that the &lt;see cref=&quot;T:System.Net.Sockets.NetworkStream&quot; /&gt; will use to send and receive data.">
        <see cref="T:System.Net.Sockets.Socket" />에서 데이터를 보내고 받는 데 사용할 <see cref="T:System.Net.Sockets.NetworkStream" />입니다.</param>
      <param name="ownsSocket" vsli:raw="Set to &lt;see langword=&quot;true&quot; /&gt; to indicate that the &lt;see cref=&quot;T:System.Net.Sockets.NetworkStream&quot; /&gt; will take ownership of the &lt;see cref=&quot;T:System.Net.Sockets.Socket&quot; /&gt;; otherwise, &lt;see langword=&quot;false&quot; /&gt;.">
        <see cref="T:System.Net.Sockets.NetworkStream" />이 <see cref="T:System.Net.Sockets.Socket" />을 소유하도록 나타내려면 <see langword="true" />로 설정하고, 그렇지 않으면 <see langword="false" />로 설정합니다.</param>
      <exception cref="T:System.ArgumentNullException" vsli:raw="The &lt;paramref name=&quot;socket&quot; /&gt; parameter is &lt;see langword=&quot;null&quot; /&gt;.">
        <paramref name="socket" /> 매개 변수가 <see langword="null" />인 경우</exception>
      <exception cref="T:System.IO.IOException" vsli:raw="The &lt;paramref name=&quot;socket&quot; /&gt; parameter is not connected.  &#xA;  &#xA; -or-  &#xA;  &#xA; the value of the &lt;see cref=&quot;P:System.Net.Sockets.Socket.SocketType&quot; /&gt; property of the &lt;paramref name=&quot;socket&quot; /&gt; parameter is not &lt;see cref=&quot;F:System.Net.Sockets.SocketType.Stream&quot; /&gt;.  &#xA;  &#xA; -or-  &#xA;  &#xA; the &lt;paramref name=&quot;socket&quot; /&gt; parameter is in a nonblocking state.">
        <paramref name="socket" /> 매개 변수가 연결되지 않은 경우  
  
또는 
<paramref name="socket" /> 매개 변수의 <see cref="P:System.Net.Sockets.Socket.SocketType" /> 속성 값이 <see cref="F:System.Net.Sockets.SocketType.Stream" />이 아닌 경우  
  
또는 
<paramref name="socket" /> 매개 변수가 비블로킹 상태인 경우</exception>
    </member>
    <member name="M:System.Net.Sockets.NetworkStream.#ctor(System.Net.Sockets.Socket,System.IO.FileAccess)">
      <summary vsli:raw="Creates a new instance of the &lt;see cref=&quot;T:System.Net.Sockets.NetworkStream&quot; /&gt; class for the specified &lt;see cref=&quot;T:System.Net.Sockets.Socket&quot; /&gt; with the specified access rights.">지정된 액세스 권한을 사용하여 지정된 <see cref="T:System.Net.Sockets.NetworkStream" />에 대한 <see cref="T:System.Net.Sockets.Socket" /> 클래스의 새 인스턴스를 만듭니다.</summary>
      <param name="socket" vsli:raw="The &lt;see cref=&quot;T:System.Net.Sockets.Socket&quot; /&gt; that the &lt;see cref=&quot;T:System.Net.Sockets.NetworkStream&quot; /&gt; will use to send and receive data.">
        <see cref="T:System.Net.Sockets.Socket" />에서 데이터를 보내고 받는 데 사용할 <see cref="T:System.Net.Sockets.NetworkStream" />입니다.</param>
      <param name="access" vsli:raw="A bitwise combination of the &lt;see cref=&quot;T:System.IO.FileAccess&quot; /&gt; values that specify the type of access given to the &lt;see cref=&quot;T:System.Net.Sockets.NetworkStream&quot; /&gt; over the provided &lt;see cref=&quot;T:System.Net.Sockets.Socket&quot; /&gt;.">제공된 <see cref="T:System.IO.FileAccess" />을 통해 <see cref="T:System.Net.Sockets.NetworkStream" />에 부여되는 액세스 권한 유형을 지정하는 <see cref="T:System.Net.Sockets.Socket" /> 값의 비트 조합입니다.</param>
      <exception cref="T:System.ArgumentNullException" vsli:raw="The &lt;paramref name=&quot;socket&quot; /&gt; parameter is &lt;see langword=&quot;null&quot; /&gt;.">
        <paramref name="socket" /> 매개 변수가 <see langword="null" />인 경우</exception>
      <exception cref="T:System.IO.IOException" vsli:raw="The &lt;paramref name=&quot;socket&quot; /&gt; parameter is not connected.  &#xA;  &#xA; -or-  &#xA;  &#xA; the &lt;see cref=&quot;P:System.Net.Sockets.Socket.SocketType&quot; /&gt; property of the &lt;paramref name=&quot;socket&quot; /&gt; parameter is not &lt;see cref=&quot;F:System.Net.Sockets.SocketType.Stream&quot; /&gt;.  &#xA;  &#xA; -or-  &#xA;  &#xA; the &lt;paramref name=&quot;socket&quot; /&gt; parameter is in a nonblocking state.">
        <paramref name="socket" /> 매개 변수가 연결되지 않은 경우  
  
또는 
<paramref name="socket" /> 매개 변수의 <see cref="P:System.Net.Sockets.Socket.SocketType" /> 속성이 <see cref="F:System.Net.Sockets.SocketType.Stream" />이 아닌 경우  
  
또는 
<paramref name="socket" /> 매개 변수가 비블로킹 상태인 경우</exception>
    </member>
    <member name="M:System.Net.Sockets.NetworkStream.#ctor(System.Net.Sockets.Socket,System.IO.FileAccess,System.Boolean)">
      <summary vsli:raw="Creates a new instance of the &lt;see cref=&quot;T:System.Net.Sockets.NetworkStream&quot; /&gt; class for the specified &lt;see cref=&quot;T:System.Net.Sockets.Socket&quot; /&gt; with the specified access rights and the specified &lt;see cref=&quot;T:System.Net.Sockets.Socket&quot; /&gt; ownership.">지정된 액세스 권한과 지정된 <see cref="T:System.Net.Sockets.NetworkStream" /> 소유권을 사용하여 지정된 <see cref="T:System.Net.Sockets.Socket" />에 대한 <see cref="T:System.Net.Sockets.Socket" /> 클래스의 새 인스턴스를 만듭니다.</summary>
      <param name="socket" vsli:raw="The &lt;see cref=&quot;T:System.Net.Sockets.Socket&quot; /&gt; that the &lt;see cref=&quot;T:System.Net.Sockets.NetworkStream&quot; /&gt; will use to send and receive data.">
        <see cref="T:System.Net.Sockets.Socket" />에서 데이터를 보내고 받는 데 사용할 <see cref="T:System.Net.Sockets.NetworkStream" />입니다.</param>
      <param name="access" vsli:raw="A bitwise combination of the &lt;see cref=&quot;T:System.IO.FileAccess&quot; /&gt; values that specifies the type of access given to the &lt;see cref=&quot;T:System.Net.Sockets.NetworkStream&quot; /&gt; over the provided &lt;see cref=&quot;T:System.Net.Sockets.Socket&quot; /&gt;.">
        <see cref="T:System.IO.FileAccess" /> 값의 비트 조합으로, 제공된 <see cref="T:System.Net.Sockets.NetworkStream" />에 대해 <see cref="T:System.Net.Sockets.Socket" />에 부여된 액세스 권한 유형을 지정합니다.</param>
      <param name="ownsSocket" vsli:raw="Set to &lt;see langword=&quot;true&quot; /&gt; to indicate that the &lt;see cref=&quot;T:System.Net.Sockets.NetworkStream&quot; /&gt; will take ownership of the &lt;see cref=&quot;T:System.Net.Sockets.Socket&quot; /&gt;; otherwise, &lt;see langword=&quot;false&quot; /&gt;.">
        <see cref="T:System.Net.Sockets.NetworkStream" />이 <see cref="T:System.Net.Sockets.Socket" />을 소유하도록 나타내려면 <see langword="true" />로 설정하고, 그렇지 않으면 <see langword="false" />로 설정합니다.</param>
      <exception cref="T:System.ArgumentNullException" vsli:raw="The &lt;paramref name=&quot;socket&quot; /&gt; parameter is &lt;see langword=&quot;null&quot; /&gt;.">
        <paramref name="socket" /> 매개 변수가 <see langword="null" />인 경우</exception>
      <exception cref="T:System.IO.IOException" vsli:raw="The &lt;paramref name=&quot;socket&quot; /&gt; parameter is not connected.  &#xA;  &#xA; -or-  &#xA;  &#xA; The &lt;see cref=&quot;P:System.Net.Sockets.Socket.SocketType&quot; /&gt; property of the &lt;paramref name=&quot;socket&quot; /&gt; parameter is not &lt;see cref=&quot;F:System.Net.Sockets.SocketType.Stream&quot; /&gt;.  &#xA;  &#xA; -or-  &#xA;  &#xA; The &lt;paramref name=&quot;socket&quot; /&gt; parameter is in a nonblocking state.">
        <paramref name="socket" /> 매개 변수가 연결되지 않은 경우  
  
또는 
<paramref name="socket" /> 매개 변수의 <see cref="P:System.Net.Sockets.Socket.SocketType" /> 속성이 <see cref="F:System.Net.Sockets.SocketType.Stream" />이 아닌 경우  
  
또는 
<paramref name="socket" /> 매개 변수가 비블로킹 상태인 경우</exception>
    </member>
    <member name="M:System.Net.Sockets.NetworkStream.BeginRead(System.Byte[],System.Int32,System.Int32,System.AsyncCallback,System.Object)">
      <summary vsli:raw="Begins an asynchronous read from the &lt;see cref=&quot;T:System.Net.Sockets.NetworkStream&quot; /&gt;.">
        <see cref="T:System.Net.Sockets.NetworkStream" />에서 비동기 읽기를 시작합니다.</summary>
      <param name="buffer" vsli:raw="An array of type &lt;see cref=&quot;T:System.Byte&quot; /&gt; that is the location in memory to store data read from the &lt;see cref=&quot;T:System.Net.Sockets.NetworkStream&quot; /&gt;.">
        <see cref="T:System.Byte" />에서 읽은 데이터를 저장하기 위한 메모리 내의 위치에 해당하는 <see cref="T:System.Net.Sockets.NetworkStream" /> 형식의 배열입니다.</param>
      <param name="offset" vsli:raw="The location in &lt;paramref name=&quot;buffer&quot; /&gt; to begin storing the data.">데이터를 저장하기 시작하는 <paramref name="buffer" /> 내의 위치입니다.</param>
      <param name="size">
        <see cref="T:System.Net.Sockets.NetworkStream" />에서 읽을 바이트 수입니다.</param>
      <param name="callback" vsli:raw="The &lt;see cref=&quot;T:System.AsyncCallback&quot; /&gt; delegate that is executed when &lt;see cref=&quot;M:System.Net.Sockets.NetworkStream.BeginRead(System.Byte[],System.Int32,System.Int32,System.AsyncCallback,System.Object)&quot; /&gt; completes.">
        <see cref="T:System.AsyncCallback" />가 완료될 때 실행되는 <see cref="M:System.Net.Sockets.NetworkStream.BeginRead(System.Byte[],System.Int32,System.Int32,System.AsyncCallback,System.Object)" /> 대리자입니다.</param>
      <param name="state" vsli:raw="An object that contains any additional user-defined data.">추가 사용자 정의 데이터가 들어 있는 개체입니다.</param>
      <exception cref="T:System.ArgumentNullException" vsli:raw="The &lt;paramref name=&quot;buffer&quot; /&gt; parameter is &lt;see langword=&quot;null&quot; /&gt;.">
        <paramref name="buffer" /> 매개 변수가 <see langword="null" />인 경우</exception>
      <exception cref="T:System.ArgumentOutOfRangeException" vsli:raw="The &lt;paramref name=&quot;offset&quot; /&gt; parameter is less than 0.  &#xA;  &#xA; -or-  &#xA;  &#xA; The &lt;paramref name=&quot;offset&quot; /&gt; parameter is greater than the length of the &lt;paramref name=&quot;buffer&quot; /&gt; paramater.  &#xA;  &#xA; -or-  &#xA;  &#xA; The &lt;paramref name=&quot;size&quot; /&gt; is less than 0.  &#xA;  &#xA; -or-  &#xA;  &#xA; The &lt;paramref name=&quot;size&quot; /&gt; is greater than the length of &lt;paramref name=&quot;buffer&quot; /&gt; minus the value of the &lt;paramref name=&quot;offset&quot; /&gt; parameter.">
        <paramref name="offset" /> 매개 변수가 0보다 작은 경우  
  
또는 
<paramref name="offset" /> 매개 변수가 <paramref name="buffer" /> 매개 변수의 길이보다 큰 경우  
  
또는 
<paramref name="size" />가 0보다 작은 경우  
  
또는 
<paramref name="size" />가 <paramref name="buffer" />의 길이에서 <paramref name="offset" /> 매개 변수의 값을 뺀 값보다 큰 경우</exception>
      <exception cref="T:System.IO.IOException" vsli:raw="The underlying &lt;see cref=&quot;T:System.Net.Sockets.Socket&quot; /&gt; is closed.  &#xA;  &#xA; -or-  &#xA;  &#xA; There was a failure while reading from the network.  &#xA;  &#xA; -or-  &#xA;  &#xA; An error occurred when accessing the socket.">내부 <see cref="T:System.Net.Sockets.Socket" />이 닫힌 경우  
  
또는 
네트워크에서 읽는 동안 오류가 발생한 경우  
  
또는 
소켓에 액세스할 때 오류가 발생했습니다.</exception>
      <exception cref="T:System.ObjectDisposedException" vsli:raw="The &lt;see cref=&quot;T:System.Net.Sockets.NetworkStream&quot; /&gt; is closed.">
        <see cref="T:System.Net.Sockets.NetworkStream" />가 닫혔습니다.</exception>
      <returns vsli:raw="An &lt;see cref=&quot;T:System.IAsyncResult&quot; /&gt; that represents the asynchronous call.">비동기 호출을 나타내는 <see cref="T:System.IAsyncResult" />입니다.</returns>
    </member>
    <member name="M:System.Net.Sockets.NetworkStream.BeginWrite(System.Byte[],System.Int32,System.Int32,System.AsyncCallback,System.Object)">
      <summary vsli:raw="Begins an asynchronous write to a stream.">스트림에 비동기 쓰기를 시작합니다.</summary>
      <param name="buffer" vsli:raw="An array of type &lt;see cref=&quot;T:System.Byte&quot; /&gt; that contains the data to write to the &lt;see cref=&quot;T:System.Net.Sockets.NetworkStream&quot; /&gt;.">
        <see cref="T:System.Byte" />에 쓸 데이터를 포함하는 <see cref="T:System.Net.Sockets.NetworkStream" /> 형식의 배열입니다.</param>
      <param name="offset" vsli:raw="The location in &lt;paramref name=&quot;buffer&quot; /&gt; to begin sending the data.">데이터를 보내기 시작하는 <paramref name="buffer" /> 내의 위치입니다.</param>
      <param name="size">
        <see cref="T:System.Net.Sockets.NetworkStream" />에 쓸 바이트 수입니다.</param>
      <param name="callback" vsli:raw="The &lt;see cref=&quot;T:System.AsyncCallback&quot; /&gt; delegate that is executed when &lt;see cref=&quot;M:System.Net.Sockets.NetworkStream.BeginWrite(System.Byte[],System.Int32,System.Int32,System.AsyncCallback,System.Object)&quot; /&gt; completes.">
        <see cref="T:System.AsyncCallback" />가 완료될 때 실행되는 <see cref="M:System.Net.Sockets.NetworkStream.BeginWrite(System.Byte[],System.Int32,System.Int32,System.AsyncCallback,System.Object)" /> 대리자입니다.</param>
      <param name="state" vsli:raw="An object that contains any additional user-defined data.">추가 사용자 정의 데이터가 들어 있는 개체입니다.</param>
      <exception cref="T:System.ArgumentNullException" vsli:raw="The &lt;paramref name=&quot;buffer&quot; /&gt; parameter is &lt;see langword=&quot;null&quot; /&gt;.">
        <paramref name="buffer" /> 매개 변수가 <see langword="null" />인 경우</exception>
      <exception cref="T:System.ArgumentOutOfRangeException" vsli:raw="The &lt;paramref name=&quot;offset&quot; /&gt; parameter is less than 0.  &#xA;  &#xA; -or-  &#xA;  &#xA; The &lt;paramref name=&quot;offset&quot; /&gt; parameter is greater than the length of &lt;paramref name=&quot;buffer&quot; /&gt;.  &#xA;  &#xA; -or-  &#xA;  &#xA; The &lt;paramref name=&quot;size&quot; /&gt; parameter is less than 0.  &#xA;  &#xA; -or-  &#xA;  &#xA; The &lt;paramref name=&quot;size&quot; /&gt; parameter is greater than the length of &lt;paramref name=&quot;buffer&quot; /&gt; minus the value of the &lt;paramref name=&quot;offset&quot; /&gt; parameter.">
        <paramref name="offset" /> 매개 변수가 0보다 작은 경우  
  
또는 
<paramref name="offset" /> 매개 변수가 <paramref name="buffer" />의 길이보다 큰 경우  
  
또는 
<paramref name="size" /> 매개 변수가 0보다 작은 경우  
  
또는 
<paramref name="size" /> 매개 변수가 <paramref name="buffer" />의 길이에서 <paramref name="offset" /> 매개 변수의 값을 뺀 값보다 큰 경우</exception>
      <exception cref="T:System.IO.IOException" vsli:raw="The underlying &lt;see cref=&quot;T:System.Net.Sockets.Socket&quot; /&gt; is closed.  &#xA;  &#xA; -or-  &#xA;  &#xA; There was a failure while writing to the network.  &#xA;  &#xA; -or-  &#xA;  &#xA; An error occurred when accessing the socket.">내부 <see cref="T:System.Net.Sockets.Socket" />이 닫힌 경우  
  
또는 
네트워크에 쓰는 동안 오류가 발생한 경우  
  
또는 
소켓에 액세스할 때 오류가 발생했습니다.</exception>
      <exception cref="T:System.ObjectDisposedException" vsli:raw="The &lt;see cref=&quot;T:System.Net.Sockets.NetworkStream&quot; /&gt; is closed.">
        <see cref="T:System.Net.Sockets.NetworkStream" />가 닫혔습니다.</exception>
      <returns vsli:raw="An &lt;see cref=&quot;T:System.IAsyncResult&quot; /&gt; that represents the asynchronous call.">비동기 호출을 나타내는 <see cref="T:System.IAsyncResult" />입니다.</returns>
    </member>
    <member name="M:System.Net.Sockets.NetworkStream.Close(System.Int32)">
      <summary vsli:raw="Closes the &lt;see cref=&quot;T:System.Net.Sockets.NetworkStream&quot; /&gt; after waiting the specified time to allow data to be sent.">데이터를 보낼 수 있도록 지정된 시간 동안 기다린 후에 <see cref="T:System.Net.Sockets.NetworkStream" />을 닫습니다.</summary>
      <param name="timeout" vsli:raw="A 32-bit signed integer that specifies the number of milliseconds to wait to send any remaining data before closing.">닫기 전까지 남은 데이터를 보내기 위한 대기 시간(밀리초)을 지정하는 부호 있는 32비트 정수입니다.</param>
      <exception cref="T:System.ArgumentOutOfRangeException" vsli:raw="The &lt;paramref name=&quot;timeout&quot; /&gt; parameter is less than -1.">
        <paramref name="timeout" /> 매개 변수가 -1보다 작습니다.</exception>
    </member>
    <member name="M:System.Net.Sockets.NetworkStream.Dispose(System.Boolean)">
      <summary vsli:raw="Releases the unmanaged resources used by the &lt;see cref=&quot;T:System.Net.Sockets.NetworkStream&quot; /&gt; and optionally releases the managed resources.">
        <see cref="T:System.Net.Sockets.NetworkStream" />에서 사용하는 관리되지 않는 리소스를 해제하고, 관리되는 리소스를 선택적으로 해제할 수 있습니다.</summary>
      <param name="disposing" vsli:raw="&lt;see langword=&quot;true&quot; /&gt; to release both managed and unmanaged resources; &lt;see langword=&quot;false&quot; /&gt; to release only unmanaged resources.">관리되는 리소스와 관리되지 않는 리소스를 모두 해제하려면 <see langword="true" />로 설정하고, 관리되지 않는 리소스만 해제하려면 <see langword="false" />로 설정합니다.</param>
    </member>
    <member name="M:System.Net.Sockets.NetworkStream.EndRead(System.IAsyncResult)">
      <summary vsli:raw="Handles the end of an asynchronous read.">비동기 읽기의 끝을 처리합니다.</summary>
      <param name="asyncResult" vsli:raw="An &lt;see cref=&quot;T:System.IAsyncResult&quot; /&gt; that represents an asynchronous call.">비동기 호출을 나타내는 <see cref="T:System.IAsyncResult" />입니다.</param>
      <exception cref="T:System.ArgumentException" vsli:raw="The &lt;paramref name=&quot;asyncResult&quot; /&gt; parameter is &lt;see langword=&quot;null&quot; /&gt;.">
        <paramref name="asyncResult" /> 매개 변수가 <see langword="null" />인 경우</exception>
      <exception cref="T:System.IO.IOException" vsli:raw="The underlying &lt;see cref=&quot;T:System.Net.Sockets.Socket&quot; /&gt; is closed.  &#xA;  &#xA; -or-  &#xA;  &#xA; An error occurred when accessing the socket.">내부 <see cref="T:System.Net.Sockets.Socket" />이 닫힌 경우  
  
또는 
소켓에 액세스할 때 오류가 발생했습니다.</exception>
      <exception cref="T:System.ObjectDisposedException" vsli:raw="The &lt;see cref=&quot;T:System.Net.Sockets.NetworkStream&quot; /&gt; is closed.">
        <see cref="T:System.Net.Sockets.NetworkStream" />가 닫혔습니다.</exception>
      <returns vsli:raw="The number of bytes read from the &lt;see cref=&quot;T:System.Net.Sockets.NetworkStream&quot; /&gt;.">
        <see cref="T:System.Net.Sockets.NetworkStream" />에서 읽은 바이트 수입니다.</returns>
    </member>
    <member name="M:System.Net.Sockets.NetworkStream.EndWrite(System.IAsyncResult)">
      <summary vsli:raw="Handles the end of an asynchronous write.">비동기 쓰기의 끝을 처리합니다.</summary>
      <param name="asyncResult" vsli:raw="The &lt;see cref=&quot;T:System.IAsyncResult&quot; /&gt; that represents the asynchronous call.">비동기 호출을 나타내는 <see cref="T:System.IAsyncResult" />입니다.</param>
      <exception cref="T:System.ArgumentNullException" vsli:raw="The &lt;paramref name=&quot;asyncResult&quot; /&gt; parameter is &lt;see langword=&quot;null&quot; /&gt;.">
        <paramref name="asyncResult" /> 매개 변수가 <see langword="null" />인 경우</exception>
      <exception cref="T:System.IO.IOException" vsli:raw="The underlying &lt;see cref=&quot;T:System.Net.Sockets.Socket&quot; /&gt; is closed.  &#xA;  &#xA; -or-  &#xA;  &#xA; An error occurred while writing to the network.  &#xA;  &#xA; -or-  &#xA;  &#xA; An error occurred when accessing the socket.">내부 <see cref="T:System.Net.Sockets.Socket" />이 닫힌 경우  
  
또는 
네트워크에 쓰는 동안 오류가 발생한 경우  
  
또는 
소켓에 액세스할 때 오류가 발생했습니다.</exception>
      <exception cref="T:System.ObjectDisposedException" vsli:raw="The &lt;see cref=&quot;T:System.Net.Sockets.NetworkStream&quot; /&gt; is closed.">
        <see cref="T:System.Net.Sockets.NetworkStream" />가 닫혔습니다.</exception>
    </member>
    <member name="M:System.Net.Sockets.NetworkStream.Finalize">
      <summary vsli:raw="Releases all resources used by the &lt;see cref=&quot;T:System.Net.Sockets.NetworkStream&quot; /&gt;.">
        <see cref="T:System.Net.Sockets.NetworkStream" />에서 사용하는 모든 리소스를 해제합니다.</summary>
    </member>
    <member name="M:System.Net.Sockets.NetworkStream.Flush">
      <summary vsli:raw="Flushes data from the stream. This method is reserved for future use.">스트림에서 데이터를 플러시합니다. 이 메서드는 나중에 사용하도록 예약됩니다.</summary>
    </member>
    <member name="M:System.Net.Sockets.NetworkStream.FlushAsync(System.Threading.CancellationToken)">
      <summary vsli:raw="Flushes data from the stream as an asynchronous operation.">스트림에서 데이터를 비동기 작업으로 플러시합니다.</summary>
      <param name="cancellationToken" vsli:raw="A cancellation token used to propagate notification that this  operation should be canceled.">이 작업을 취소해야 한다는 알림을 전파하는 데 사용되는 취소 토큰입니다.</param>
      <returns vsli:raw="The task object representing the asynchronous operation.">비동기 작업(operation)을 나타내는 작업(task) 개체입니다.</returns>
    </member>
    <member name="M:System.Net.Sockets.NetworkStream.Read(System.Byte[],System.Int32,System.Int32)">
      <summary vsli:raw="Reads data from the &lt;see cref=&quot;T:System.Net.Sockets.NetworkStream&quot; /&gt; and stores it to a byte array.">
        <see cref="T:System.Net.Sockets.NetworkStream" />에서 데이터를 읽고 바이트 배열에 저장합니다.</summary>
      <param name="buffer" vsli:raw="An array of type &lt;see cref=&quot;T:System.Byte&quot; /&gt; that is the location in memory to store data read from the &lt;see cref=&quot;T:System.Net.Sockets.NetworkStream&quot; /&gt;.">
        <see cref="T:System.Byte" />에서 읽은 데이터를 저장하기 위한 메모리 내의 위치에 해당하는 <see cref="T:System.Net.Sockets.NetworkStream" /> 형식의 배열입니다.</param>
      <param name="offset" vsli:raw="The location in &lt;paramref name=&quot;buffer&quot; /&gt; to begin storing the data to.">데이터를 저장하기 시작하는 <paramref name="buffer" /> 내의 위치입니다.</param>
      <param name="size">
        <see cref="T:System.Net.Sockets.NetworkStream" />에서 읽을 바이트 수입니다.</param>
      <exception cref="T:System.ArgumentNullException" vsli:raw="&lt;paramref name=&quot;buffer&quot; /&gt; is &lt;see langword=&quot;null&quot; /&gt;.">
        <paramref name="buffer" />이(가) <see langword="null" />인 경우</exception>
      <exception cref="T:System.ArgumentOutOfRangeException" vsli:raw="&lt;paramref name=&quot;offset&quot; /&gt; is less than 0.  &#xA;  &#xA; -or-  &#xA;  &#xA; &lt;paramref name=&quot;offset&quot; /&gt; is greater than the length of &lt;paramref name=&quot;buffer&quot; /&gt;.  &#xA;  &#xA; -or-  &#xA;  &#xA; &lt;paramref name=&quot;size&quot; /&gt; is less than 0.  &#xA;  &#xA; -or-  &#xA;  &#xA; &lt;paramref name=&quot;size&quot; /&gt; is greater than the length of &lt;paramref name=&quot;buffer&quot; /&gt; minus &lt;paramref name=&quot;offset&quot; /&gt;.">
        <paramref name="offset" /> 가 0보다 작습니다.  
  
또는 
 <paramref name="offset" />이 <paramref name="buffer" />의 길이보다 큽니다.  
  
또는 
 <paramref name="size" /> 가 0보다 작습니다.  
  
또는 
 <paramref name="size" />가 <paramref name="buffer" />의 길이에서 <paramref name="offset" />를 뺀 값보다 큰 경우</exception>
      <exception cref="T:System.InvalidOperationException" vsli:raw="The &lt;see cref=&quot;T:System.Net.Sockets.NetworkStream&quot; /&gt; does not support reading.">
        <see cref="T:System.Net.Sockets.NetworkStream" />이 읽기를 지원하지 않습니다.</exception>
      <exception cref="T:System.IO.IOException" vsli:raw="An error occurred when accessing the socket.&#xA;&#xA;-or-&#xA;&#xA;There is a failure reading from the network.">소켓에 액세스할 때 오류가 발생했습니다.

또는

네트워크에서 읽는 동안 오류가 발생한 경우</exception>
      <exception cref="T:System.ObjectDisposedException" vsli:raw="The &lt;see cref=&quot;T:System.Net.Sockets.NetworkStream&quot; /&gt; is closed.">
        <see cref="T:System.Net.Sockets.NetworkStream" />가 닫혔습니다.</exception>
      <returns vsli:raw="The number of bytes read from the &lt;see cref=&quot;T:System.Net.Sockets.NetworkStream&quot; /&gt;.">
        <see cref="T:System.Net.Sockets.NetworkStream" />에서 읽은 바이트 수입니다.</returns>
    </member>
    <member name="M:System.Net.Sockets.NetworkStream.Read(System.Span{System.Byte})">
      <summary vsli:raw="Reads data from the &lt;see cref=&quot;T:System.Net.Sockets.NetworkStream&quot; /&gt; and stores it to a span of bytes in memory.">
        <see cref="T:System.Net.Sockets.NetworkStream" />에서 데이터를 읽고 메모리의 바이트 범위에 저장합니다.</summary>
      <param name="buffer" vsli:raw="A region of memory to store data read from the &lt;see cref=&quot;T:System.Net.Sockets.NetworkStream&quot; /&gt;.">
        <see cref="T:System.Net.Sockets.NetworkStream" />에서 읽은 데이터를 저장할 메모리 영역입니다.</param>
      <exception cref="T:System.InvalidOperationException" vsli:raw="The &lt;see cref=&quot;T:System.Net.Sockets.NetworkStream&quot; /&gt; does not support reading.">
        <see cref="T:System.Net.Sockets.NetworkStream" />이 읽기를 지원하지 않습니다.</exception>
      <exception cref="T:System.IO.IOException" vsli:raw="An error occurred when accessing the socket.&#xA;&#xA;-or-&#xA;&#xA;There is a failure reading from the network.">소켓에 액세스할 때 오류가 발생했습니다.

또는

네트워크에서 읽는 동안 오류가 발생한 경우</exception>
      <exception cref="T:System.ObjectDisposedException" vsli:raw="The &lt;see cref=&quot;T:System.Net.Sockets.NetworkStream&quot; /&gt; is closed.">
        <see cref="T:System.Net.Sockets.NetworkStream" />가 닫혔습니다.</exception>
      <returns vsli:raw="The number of bytes read from the &lt;see cref=&quot;T:System.Net.Sockets.NetworkStream&quot; /&gt;.">
        <see cref="T:System.Net.Sockets.NetworkStream" />에서 읽은 바이트 수입니다.</returns>
    </member>
    <member name="M:System.Net.Sockets.NetworkStream.ReadAsync(System.Byte[],System.Int32,System.Int32,System.Threading.CancellationToken)">
      <summary vsli:raw="Reads data from the &lt;see cref=&quot;T:System.Net.Sockets.NetworkStream&quot; /&gt; and stores it to a specified range of a byte array as an asynchronous operation.">
        <see cref="T:System.Net.Sockets.NetworkStream" />에서 데이터를 읽고 비동기 작업으로 지정된 범위의 바이트 배열에 저장합니다.</summary>
      <param name="buffer" vsli:raw="The buffer to write the data into.">데이터를 쓸 버퍼입니다.</param>
      <param name="offset" vsli:raw="The location in &lt;paramref name=&quot;buffer&quot; /&gt; to begin storing the data to.">데이터를 저장하기 시작하는 <paramref name="buffer" /> 내의 위치입니다.</param>
      <param name="size">
        <see cref="T:System.Net.Sockets.NetworkStream" />에서 읽을 바이트 수입니다.</param>
      <param name="cancellationToken" vsli:raw="The token to monitor for cancellation requests.">취소 요청을 모니터링할 토큰입니다.</param>
      <exception cref="T:System.InvalidOperationException" vsli:raw="The &lt;see cref=&quot;T:System.Net.Sockets.NetworkStream&quot; /&gt; does not support reading.">
        <see cref="T:System.Net.Sockets.NetworkStream" />이 읽기를 지원하지 않습니다.</exception>
      <exception cref="T:System.IO.IOException" vsli:raw="An error occurred when accessing the socket.&#xA;&#xA;-or-&#xA;&#xA;There is a failure reading from the network.">소켓에 액세스할 때 오류가 발생했습니다.

또는

네트워크에서 읽는 동안 오류가 발생한 경우</exception>
      <exception cref="T:System.ObjectDisposedException" vsli:raw="The &lt;see cref=&quot;T:System.Net.Sockets.NetworkStream&quot; /&gt; is closed.">
        <see cref="T:System.Net.Sockets.NetworkStream" />가 닫혔습니다.</exception>
      <returns vsli:raw="A task that represents the asynchronous read operation. The value of its &lt;see cref=&quot;P:System.Threading.Tasks.Task`1.Result&quot; /&gt; property contains the total number of bytes read into &lt;paramref name=&quot;buffer&quot; /&gt;.">비동기 읽기 작업을 나타내는 작업입니다. 해당 <see cref="P:System.Threading.Tasks.Task`1.Result" /> 속성의 값에는 <paramref name="buffer" /> 안으로 읽은 총 바이트 수가 포함됩니다.</returns>
    </member>
    <member name="M:System.Net.Sockets.NetworkStream.ReadAsync(System.Memory{System.Byte},System.Threading.CancellationToken)">
      <summary vsli:raw="Reads data from the &lt;see cref=&quot;T:System.Net.Sockets.NetworkStream&quot; /&gt; and stores it in a byte memory range as an asynchronous operation.">
        <see cref="T:System.Net.Sockets.NetworkStream" />에서 데이터를 읽고 비동기 작업으로 바이트 메모리 범위에 저장합니다.</summary>
      <param name="buffer" vsli:raw="The buffer to write the data to.">데이터를 쓸 버퍼입니다.</param>
      <param name="cancellationToken" vsli:raw="The token to monitor for cancellation requests.">취소 요청을 모니터링할 토큰입니다.</param>
      <exception cref="T:System.InvalidOperationException" vsli:raw="The &lt;see cref=&quot;T:System.Net.Sockets.NetworkStream&quot; /&gt; does not support reading.">
        <see cref="T:System.Net.Sockets.NetworkStream" />이 읽기를 지원하지 않습니다.</exception>
      <exception cref="T:System.IO.IOException" vsli:raw="An error occurred when accessing the socket.&#xA;&#xA;-or-&#xA;&#xA;There is a failure reading from the network.">소켓에 액세스할 때 오류가 발생했습니다.

또는

네트워크에서 읽는 동안 오류가 발생한 경우</exception>
      <exception cref="T:System.ObjectDisposedException" vsli:raw="The &lt;see cref=&quot;T:System.Net.Sockets.NetworkStream&quot; /&gt; is closed.">
        <see cref="T:System.Net.Sockets.NetworkStream" />가 닫혔습니다.</exception>
      <returns vsli:raw="A &lt;see cref=&quot;T:System.Threading.Tasks.ValueTask`1&quot; /&gt; that represents the asynchronous read operation. The value of its &lt;see cref=&quot;P:System.Threading.Tasks.ValueTask`1.Result&quot; /&gt; property contains the total number of bytes read into &lt;paramref name=&quot;buffer&quot; /&gt;.">비동기 읽기 작업을 나타내는 <see cref="T:System.Threading.Tasks.ValueTask`1" />입니다. 해당 <see cref="P:System.Threading.Tasks.ValueTask`1.Result" /> 속성의 값에는 <paramref name="buffer" /> 안으로 읽은 총 바이트 수가 포함됩니다.</returns>
    </member>
    <member name="M:System.Net.Sockets.NetworkStream.ReadByte">
      <summary vsli:raw="Reads a byte from the &lt;see cref=&quot;T:System.Net.Sockets.NetworkStream&quot; /&gt; and advances the position within the stream by one byte, or returns -1 if at the end of the stream.">
        <see cref="T:System.Net.Sockets.NetworkStream" />에서 바이트를 읽고 스트림 내 위치를 한 바이트씩 앞으로 이동하거나 스트림 끝일 경우 -1을 반환합니다.</summary>
      <exception cref="T:System.InvalidOperationException" vsli:raw="The &lt;see cref=&quot;T:System.Net.Sockets.NetworkStream&quot; /&gt; does not support reading.">
        <see cref="T:System.Net.Sockets.NetworkStream" />이 읽기를 지원하지 않습니다.</exception>
      <exception cref="T:System.IO.IOException" vsli:raw="An error occurred when accessing the socket.&#xA;&#xA;-or-&#xA;&#xA;There is a failure reading from the network.">소켓에 액세스할 때 오류가 발생했습니다.

또는

네트워크에서 읽는 동안 오류가 발생한 경우</exception>
      <exception cref="T:System.ObjectDisposedException" vsli:raw="The &lt;see cref=&quot;T:System.Net.Sockets.NetworkStream&quot; /&gt; is closed.">
        <see cref="T:System.Net.Sockets.NetworkStream" />가 닫혔습니다.</exception>
      <returns vsli:raw="The unsigned byte cast to an &lt;see cref=&quot;T:System.Int32&quot; /&gt;, or -1 if at the end of the stream.">
        <see cref="T:System.Int32" />로 캐스팅된 부호 없는 바이트이거나 스트림의 끝에 있는 경우 -1입니다.</returns>
    </member>
    <member name="M:System.Net.Sockets.NetworkStream.Seek(System.Int64,System.IO.SeekOrigin)">
      <summary vsli:raw="Sets the current position of the stream to the given value. This method is not currently supported and always throws a &lt;see cref=&quot;T:System.NotSupportedException&quot; /&gt;.">스트림의 현재 위치를 주어진 값으로 설정합니다. 이 메서드는 현재 지원되지 않으며 항상 <see cref="T:System.NotSupportedException" />을 throw합니다.</summary>
      <param name="offset" vsli:raw="This parameter is not used.">이 매개 변수는 사용되지 않습니다.</param>
      <param name="origin" vsli:raw="This parameter is not used.">이 매개 변수는 사용되지 않습니다.</param>
      <exception cref="T:System.NotSupportedException" vsli:raw="Any use of this property.">이 속성을 사용한 경우</exception>
      <returns vsli:raw="The position in the stream.">스트림 내의 위치입니다.</returns>
    </member>
    <member name="M:System.Net.Sockets.NetworkStream.SetLength(System.Int64)">
      <summary vsli:raw="Sets the length of the stream. This method always throws a &lt;see cref=&quot;T:System.NotSupportedException&quot; /&gt;.">스트림의 길이를 설정합니다. 이 메서드는 항상 <see cref="T:System.NotSupportedException" />을 throw합니다.</summary>
      <param name="value" vsli:raw="This parameter is not used.">이 매개 변수는 사용되지 않습니다.</param>
      <exception cref="T:System.NotSupportedException" vsli:raw="Any use of this property.">이 속성을 사용한 경우</exception>
    </member>
    <member name="M:System.Net.Sockets.NetworkStream.Write(System.Byte[],System.Int32,System.Int32)">
      <summary vsli:raw="Writes data to the &lt;see cref=&quot;T:System.Net.Sockets.NetworkStream&quot; /&gt; from a specified range of a byte array.">지정된 범위의 바이트 배열에서 <see cref="T:System.Net.Sockets.NetworkStream" />에 데이터를 씁니다.</summary>
      <param name="buffer" vsli:raw="An array of type &lt;see cref=&quot;T:System.Byte&quot; /&gt; that contains the data to write to the &lt;see cref=&quot;T:System.Net.Sockets.NetworkStream&quot; /&gt;.">
        <see cref="T:System.Byte" />에 쓸 데이터를 포함하는 <see cref="T:System.Net.Sockets.NetworkStream" /> 형식의 배열입니다.</param>
      <param name="offset" vsli:raw="The location in &lt;paramref name=&quot;buffer&quot; /&gt; from which to start writing data.">데이터를 쓰기 시작할 <paramref name="buffer" /> 내의 위치입니다.</param>
      <param name="size">
        <see cref="T:System.Net.Sockets.NetworkStream" />에 쓸 바이트 수입니다.</param>
      <exception cref="T:System.ArgumentNullException" vsli:raw="The &lt;paramref name=&quot;buffer&quot; /&gt; parameter is &lt;see langword=&quot;null&quot; /&gt;.">
        <paramref name="buffer" /> 매개 변수가 <see langword="null" />인 경우</exception>
      <exception cref="T:System.ArgumentOutOfRangeException" vsli:raw="The &lt;paramref name=&quot;offset&quot; /&gt; parameter is less than 0.  &#xA;  &#xA; -or-  &#xA;  &#xA; The &lt;paramref name=&quot;offset&quot; /&gt; parameter is greater than the length of &lt;paramref name=&quot;buffer&quot; /&gt;.  &#xA;  &#xA; -or-  &#xA;  &#xA; The &lt;paramref name=&quot;size&quot; /&gt; parameter is less than 0.  &#xA;  &#xA; -or-  &#xA;  &#xA; The &lt;paramref name=&quot;size&quot; /&gt; parameter is greater than the length of &lt;paramref name=&quot;buffer&quot; /&gt; minus the value of the &lt;paramref name=&quot;offset&quot; /&gt; parameter.">
        <paramref name="offset" /> 매개 변수가 0보다 작은 경우  
  
또는 
<paramref name="offset" /> 매개 변수가 <paramref name="buffer" />의 길이보다 큰 경우  
  
또는 
<paramref name="size" /> 매개 변수가 0보다 작은 경우  
  
또는 
<paramref name="size" /> 매개 변수가 <paramref name="buffer" />의 길이에서 <paramref name="offset" /> 매개 변수의 값을 뺀 값보다 큰 경우</exception>
      <exception cref="T:System.InvalidOperationException" vsli:raw="The &lt;see cref=&quot;T:System.Net.Sockets.NetworkStream&quot; /&gt; does not support writing.">
        <see cref="T:System.Net.Sockets.NetworkStream" />에서 쓰기를 지원하지 않습니다.</exception>
      <exception cref="T:System.IO.IOException" vsli:raw="An error occurred when accessing the socket.&#xA;&#xA;-or-&#xA;&#xA;There was a failure while writing to the network.">소켓에 액세스할 때 오류가 발생했습니다.

또는

네트워크에 쓰는 동안 오류가 발생한 경우</exception>
      <exception cref="T:System.ObjectDisposedException" vsli:raw="The &lt;see cref=&quot;T:System.Net.Sockets.NetworkStream&quot; /&gt; is closed.">
        <see cref="T:System.Net.Sockets.NetworkStream" />가 닫혔습니다.</exception>
    </member>
    <member name="M:System.Net.Sockets.NetworkStream.Write(System.ReadOnlySpan{System.Byte})">
      <summary vsli:raw="Writes data to the &lt;see cref=&quot;T:System.Net.Sockets.NetworkStream&quot; /&gt;  from a read-only byte span.">읽기 전용 바이트 범위에서 <see cref="T:System.Net.Sockets.NetworkStream" />에 데이터를 씁니다.</summary>
      <param name="buffer" vsli:raw="The data to write to the &lt;see cref=&quot;T:System.Net.Sockets.NetworkStream&quot; /&gt;.">
        <see cref="T:System.Net.Sockets.NetworkStream" />에 쓸 데이터입니다.</param>
      <exception cref="T:System.InvalidOperationException" vsli:raw="The &lt;see cref=&quot;T:System.Net.Sockets.NetworkStream&quot; /&gt; does not support writing.">
        <see cref="T:System.Net.Sockets.NetworkStream" />에서 쓰기를 지원하지 않습니다.</exception>
      <exception cref="T:System.IO.IOException" vsli:raw="An error occurred when accessing the socket.&#xA;&#xA;-or-&#xA;&#xA;There was a failure while writing to the network.">소켓에 액세스할 때 오류가 발생했습니다.

또는

네트워크에 쓰는 동안 오류가 발생한 경우</exception>
      <exception cref="T:System.ObjectDisposedException" vsli:raw="The &lt;see cref=&quot;T:System.Net.Sockets.NetworkStream&quot; /&gt; is closed.">
        <see cref="T:System.Net.Sockets.NetworkStream" />가 닫혔습니다.</exception>
    </member>
    <member name="M:System.Net.Sockets.NetworkStream.WriteAsync(System.Byte[],System.Int32,System.Int32,System.Threading.CancellationToken)">
      <summary vsli:raw="Writes data to the &lt;see cref=&quot;T:System.Net.Sockets.NetworkStream&quot; /&gt; from the specified range of a byte array as an asynchronous operation.">지정된 범위의 바이트 배열에서 비동기 작업으로 <see cref="T:System.Net.Sockets.NetworkStream" />에 데이터를 씁니다.</summary>
      <param name="buffer" vsli:raw="A byte array that contains the data to write to the &lt;see cref=&quot;T:System.Net.Sockets.NetworkStream&quot; /&gt;.">
        <see cref="T:System.Net.Sockets.NetworkStream" />에 쓸 데이터를 포함하는 바이트 배열입니다.</param>
      <param name="offset" vsli:raw="The location in &lt;paramref name=&quot;buffer&quot; /&gt; from which to start writing data.">데이터를 쓰기 시작할 <paramref name="buffer" /> 내의 위치입니다.</param>
      <param name="size">
        <see cref="T:System.Net.Sockets.NetworkStream" />에 쓸 바이트 수입니다.</param>
      <param name="cancellationToken" vsli:raw="The token to monitor for cancellation requests.">취소 요청을 모니터링할 토큰입니다.</param>
      <exception cref="T:System.ArgumentNullException" vsli:raw="The &lt;paramref name=&quot;buffer&quot; /&gt; parameter is &lt;see langword=&quot;null&quot; /&gt;.">
        <paramref name="buffer" /> 매개 변수가 <see langword="null" />인 경우</exception>
      <exception cref="T:System.ArgumentOutOfRangeException" vsli:raw="The &lt;paramref name=&quot;offset&quot; /&gt; parameter is less than 0.  &#xA;  &#xA; -or-  &#xA;  &#xA; The &lt;paramref name=&quot;offset&quot; /&gt; parameter is greater than the length of &lt;paramref name=&quot;buffer&quot; /&gt;.  &#xA;  &#xA; -or-  &#xA;  &#xA; The &lt;paramref name=&quot;size&quot; /&gt; parameter is less than 0.  &#xA;  &#xA; -or-  &#xA;  &#xA; The &lt;paramref name=&quot;size&quot; /&gt; parameter is greater than the length of &lt;paramref name=&quot;buffer&quot; /&gt; minus the value of the &lt;paramref name=&quot;offset&quot; /&gt; parameter.">
        <paramref name="offset" /> 매개 변수가 0보다 작은 경우  
  
또는 
<paramref name="offset" /> 매개 변수가 <paramref name="buffer" />의 길이보다 큰 경우  
  
또는 
<paramref name="size" /> 매개 변수가 0보다 작은 경우  
  
또는 
<paramref name="size" /> 매개 변수가 <paramref name="buffer" />의 길이에서 <paramref name="offset" /> 매개 변수의 값을 뺀 값보다 큰 경우</exception>
      <exception cref="T:System.InvalidOperationException" vsli:raw="The &lt;see cref=&quot;T:System.Net.Sockets.NetworkStream&quot; /&gt; does not support writing.">
        <see cref="T:System.Net.Sockets.NetworkStream" />에서 쓰기를 지원하지 않습니다.</exception>
      <exception cref="T:System.IO.IOException" vsli:raw="There was a failure while writing to the network.  &#xA;  &#xA; -or-  &#xA;  &#xA; An error occurred when accessing the socket.">네트워크에 쓰는 동안 오류가 발생한 경우  
  
 또는  
  
 소켓에 액세스할 때 오류가 발생했습니다.</exception>
      <exception cref="T:System.ObjectDisposedException" vsli:raw="The &lt;see cref=&quot;T:System.Net.Sockets.NetworkStream&quot; /&gt; is closed.">
        <see cref="T:System.Net.Sockets.NetworkStream" />가 닫혔습니다.</exception>
      <returns vsli:raw="A task that represents the asynchronous write operation.">비동기 쓰기 작업을 나타내는 작업입니다.</returns>
    </member>
    <member name="M:System.Net.Sockets.NetworkStream.WriteAsync(System.ReadOnlyMemory{System.Byte},System.Threading.CancellationToken)">
      <summary vsli:raw="Writes data to the &lt;see cref=&quot;T:System.Net.Sockets.NetworkStream&quot; /&gt; from a read-only memory byte memory range as an asynchronous operation.">읽기 전용 메모리 바이트 메모리 범위에서 비동기 작업으로 <see cref="T:System.Net.Sockets.NetworkStream" />에 데이터를 씁니다.</summary>
      <param name="buffer" vsli:raw="A region of memory that contains the data to write to the &lt;see cref=&quot;T:System.Net.Sockets.NetworkStream&quot; /&gt;.">
        <see cref="T:System.Net.Sockets.NetworkStream" />에 쓸 데이터를 포함하는 메모리 영역입니다.</param>
      <param name="cancellationToken" vsli:raw="The token to monitor for cancellation requests.">취소 요청을 모니터링할 토큰입니다.</param>
      <exception cref="T:System.InvalidOperationException" vsli:raw="The &lt;see cref=&quot;T:System.Net.Sockets.NetworkStream&quot; /&gt; does not support writing.">
        <see cref="T:System.Net.Sockets.NetworkStream" />에서 쓰기를 지원하지 않습니다.</exception>
      <exception cref="T:System.IO.IOException" vsli:raw="An error occurred when accessing the socket.&#xA;&#xA;-or-&#xA;&#xA;There was a failure while writing to the network.">소켓에 액세스할 때 오류가 발생했습니다.

또는

네트워크에 쓰는 동안 오류가 발생한 경우</exception>
      <exception cref="T:System.ObjectDisposedException" vsli:raw="The &lt;see cref=&quot;T:System.Net.Sockets.NetworkStream&quot; /&gt; is closed.">
        <see cref="T:System.Net.Sockets.NetworkStream" />가 닫혔습니다.</exception>
      <returns vsli:raw="A task that represents the asynchronous write operation.">비동기 쓰기 작업을 나타내는 작업입니다.</returns>
    </member>
    <member name="M:System.Net.Sockets.NetworkStream.WriteByte(System.Byte)">
      <summary vsli:raw="Writes a byte to the current position in the &lt;see cref=&quot;T:System.Net.Sockets.NetworkStream&quot; /&gt; and advances the position within the stream by one byte.">
        <see cref="T:System.Net.Sockets.NetworkStream" />의 현재 위치에 바이트를 쓰고 스트림 내 위치를 1바이트씩 앞으로 이동합니다.</summary>
      <param name="value" vsli:raw="The byte to write to the stream.">스트림에 쓸 바이트입니다.</param>
      <exception cref="T:System.InvalidOperationException" vsli:raw="The &lt;see cref=&quot;T:System.Net.Sockets.NetworkStream&quot; /&gt; does not support writing.">
        <see cref="T:System.Net.Sockets.NetworkStream" />에서 쓰기를 지원하지 않습니다.</exception>
      <exception cref="T:System.IO.IOException" vsli:raw="An error occurred when accessing the socket.&#xA;&#xA;-or-&#xA;&#xA;There was a failure while writing to the network.">소켓에 액세스할 때 오류가 발생했습니다.

또는

네트워크에 쓰는 동안 오류가 발생한 경우</exception>
      <exception cref="T:System.ObjectDisposedException" vsli:raw="The &lt;see cref=&quot;T:System.Net.Sockets.NetworkStream&quot; /&gt; is closed.">
        <see cref="T:System.Net.Sockets.NetworkStream" />가 닫혔습니다.</exception>
    </member>
    <member name="P:System.Net.Sockets.NetworkStream.CanRead">
      <summary vsli:raw="Gets a value that indicates whether the &lt;see cref=&quot;T:System.Net.Sockets.NetworkStream&quot; /&gt; supports reading.">
        <see cref="T:System.Net.Sockets.NetworkStream" />이 읽기를 지원하는지 여부를 나타내는 값을 가져옵니다.</summary>
      <returns vsli:raw="&lt;see langword=&quot;true&quot; /&gt; if data can be read from the stream; otherwise, &lt;see langword=&quot;false&quot; /&gt;. The default value is &lt;see langword=&quot;true&quot; /&gt;.">스트림에서 데이터를 읽을 수 있으면 <see langword="true" />이고, 그렇지 않으면 <see langword="false" />입니다. 기본값은 <see langword="true" />입니다.</returns>
    </member>
    <member name="P:System.Net.Sockets.NetworkStream.CanSeek">
      <summary vsli:raw="Gets a value that indicates whether the stream supports seeking. This property is not currently supported. This property always returns &lt;see langword=&quot;false&quot; /&gt;.">스트림이 검색을 지원하는지 여부를 나타내는 값을 가져옵니다. 현재 이 속성이 지원되지 않는 경우 이 속성은 항상 <see langword="false" />를 반환합니다.</summary>
      <returns vsli:raw="&lt;see langword=&quot;false&quot; /&gt; in all cases to indicate that &lt;see cref=&quot;T:System.Net.Sockets.NetworkStream&quot; /&gt; cannot seek a specific location in the stream.">
        <see cref="T:System.Net.Sockets.NetworkStream" />이 스트림에서 특정 위치를 검색할 수 없음을 나타내기 위해 항상<see langword="false" />입니다.</returns>
    </member>
    <member name="P:System.Net.Sockets.NetworkStream.CanTimeout">
      <summary vsli:raw="Indicates whether timeout properties are usable for &lt;see cref=&quot;T:System.Net.Sockets.NetworkStream&quot; /&gt;.">
        <see cref="T:System.Net.Sockets.NetworkStream" />에 제한 시간 속성을 사용할 수 있는지 여부를 나타냅니다.</summary>
      <returns vsli:raw="&lt;see langword=&quot;true&quot; /&gt; in all cases.">모든 경우에 <see langword="true" />입니다.</returns>
    </member>
    <member name="P:System.Net.Sockets.NetworkStream.CanWrite">
      <summary vsli:raw="Gets a value that indicates whether the &lt;see cref=&quot;T:System.Net.Sockets.NetworkStream&quot; /&gt; supports writing.">
        <see cref="T:System.Net.Sockets.NetworkStream" />이 쓰기를 지원하는지 여부를 나타내는 값을 가져옵니다.</summary>
      <returns vsli:raw="&lt;see langword=&quot;true&quot; /&gt; if data can be written to the &lt;see cref=&quot;T:System.Net.Sockets.NetworkStream&quot; /&gt;; otherwise, &lt;see langword=&quot;false&quot; /&gt;. The default value is &lt;see langword=&quot;true&quot; /&gt;.">
        <see cref="T:System.Net.Sockets.NetworkStream" />에 데이터를 쓸 수 있으면 <see langword="true" />이고, 그렇지 않으면 <see langword="false" />입니다. 기본값은 <see langword="true" />입니다.</returns>
    </member>
    <member name="P:System.Net.Sockets.NetworkStream.DataAvailable">
      <summary vsli:raw="Gets a value that indicates whether data is available on the &lt;see cref=&quot;T:System.Net.Sockets.NetworkStream&quot; /&gt; to be immediately read.">
        <see cref="T:System.Net.Sockets.NetworkStream" />의 데이터를 읽을 수 있는지 여부를 나타내는 값을 가져옵니다.</summary>
      <exception cref="T:System.ObjectDisposedException" vsli:raw="The &lt;see cref=&quot;T:System.Net.Sockets.NetworkStream&quot; /&gt; is closed.">
        <see cref="T:System.Net.Sockets.NetworkStream" />가 닫혔습니다.</exception>
      <exception cref="T:System.IO.IOException" vsli:raw="The underlying &lt;see cref=&quot;T:System.Net.Sockets.Socket&quot; /&gt; is closed.">내부 <see cref="T:System.Net.Sockets.Socket" />이 닫힌 경우</exception>
      <exception cref="T:System.Net.Sockets.SocketException" vsli:raw="Use the &lt;see cref=&quot;P:System.Net.Sockets.SocketException.ErrorCode&quot; /&gt; property to obtain the specific error code and refer to the Windows Sockets version 2 API error code documentation for a detailed description of the error.">
        <see cref="P:System.Net.Sockets.SocketException.ErrorCode" /> 속성을 사용하여 특정 오류 코드를 가져온 다음, Windows 소켓 버전 2 API 오류 코드 설명서에서 오류에 대한 자세한 설명을 참조하세요.</exception>
      <returns vsli:raw="&lt;see langword=&quot;true&quot; /&gt; if data is available on the stream to be read; otherwise, &lt;see langword=&quot;false&quot; /&gt;.">읽을 스트림에서 데이터를 사용할 수 있으면 <see langword="true" />이고, 그렇지 않으면 <see langword="false" />입니다.</returns>
    </member>
    <member name="P:System.Net.Sockets.NetworkStream.Length">
      <summary vsli:raw="Gets the length of the data available on the stream. This property is not currently supported and always throws a &lt;see cref=&quot;T:System.NotSupportedException&quot; /&gt;.">스트림에서 사용할 수 있는 데이터의 길이를 가져옵니다. 이 속성은 현재 지원되지 않으며 항상 <see cref="T:System.NotSupportedException" />을 throw합니다.</summary>
      <exception cref="T:System.NotSupportedException" vsli:raw="Any use of this property.">이 속성을 사용한 경우</exception>
      <returns vsli:raw="The length of the data available on the stream.">스트림에서 사용 가능한 데이터의 길이입니다.</returns>
    </member>
    <member name="P:System.Net.Sockets.NetworkStream.Position">
      <summary vsli:raw="Gets or sets the current position in the stream. This property is not currently supported and always throws a &lt;see cref=&quot;T:System.NotSupportedException&quot; /&gt;.">스트림 내의 현재 위치를 가져오거나 설정합니다. 이 속성은 현재 지원되지 않으며 항상 <see cref="T:System.NotSupportedException" />을 throw합니다.</summary>
      <exception cref="T:System.NotSupportedException" vsli:raw="Any use of this property.">이 속성을 사용한 경우</exception>
      <returns vsli:raw="The current position in the stream.">스트림 내의 현재 위치입니다.</returns>
    </member>
    <member name="P:System.Net.Sockets.NetworkStream.Readable">
      <summary vsli:raw="Gets or sets a value that indicates whether the &lt;see cref=&quot;T:System.Net.Sockets.NetworkStream&quot; /&gt; can be read.">
        <see cref="T:System.Net.Sockets.NetworkStream" />을 읽을 수 있는지 여부를 나타내는 값을 가져오거나 설정합니다.</summary>
      <returns vsli:raw="&lt;see langword=&quot;true&quot; /&gt; to indicate that the &lt;see cref=&quot;T:System.Net.Sockets.NetworkStream&quot; /&gt; can be read; otherwise, &lt;see langword=&quot;false&quot; /&gt;. The default value is &lt;see langword=&quot;true&quot; /&gt;.">
        <see cref="T:System.Net.Sockets.NetworkStream" />을 읽을 수 있으면 <see langword="true" />이고, 그렇지 않으면 <see langword="false" />입니다. 기본값은 <see langword="true" />입니다.</returns>
    </member>
    <member name="P:System.Net.Sockets.NetworkStream.ReadTimeout">
      <summary vsli:raw="Gets or sets the amount of time that a read operation blocks waiting for data.">데이터를 기다리는 중 읽기 작업이 차단되는 시간을 가져오거나 설정합니다.</summary>
      <exception cref="T:System.ArgumentOutOfRangeException" vsli:raw="The value specified is less than or equal to zero and is not &lt;see cref=&quot;F:System.Threading.Timeout.Infinite&quot; /&gt;.">지정한 값이 0보다 작거나 같고 <see cref="F:System.Threading.Timeout.Infinite" />가 아닌 경우</exception>
      <returns vsli:raw="A &lt;see cref=&quot;T:System.Int32&quot; /&gt; that specifies the amount of time, in milliseconds, that will elapse before a read operation fails. The default value, &lt;see cref=&quot;F:System.Threading.Timeout.Infinite&quot; /&gt;, specifies that the read operation does not time out.">읽기 작업의 제한 시간(밀리초)을 지정하는 <see cref="T:System.Int32" />입니다. 이 시간이 경과하면 읽기 작업이 실패합니다. 기본값인 <see cref="F:System.Threading.Timeout.Infinite" />는 읽기 작업에 제한 시간이 없음을 나타냅니다.</returns>
    </member>
    <member name="P:System.Net.Sockets.NetworkStream.Socket">
      <summary vsli:raw="Gets the underlying &lt;see cref=&quot;T:System.Net.Sockets.Socket&quot; /&gt;.">내부 <see cref="T:System.Net.Sockets.Socket" />를 가져옵니다.</summary>
      <returns vsli:raw="A &lt;see cref=&quot;T:System.Net.Sockets.Socket&quot; /&gt; that represents the underlying network connection.">내부 네트워크 연결을 나타내는 <see cref="T:System.Net.Sockets.Socket" />입니다.</returns>
    </member>
    <member name="P:System.Net.Sockets.NetworkStream.Writeable">
      <summary vsli:raw="Gets a value that indicates whether the &lt;see cref=&quot;T:System.Net.Sockets.NetworkStream&quot; /&gt; is writable.">
        <see cref="T:System.Net.Sockets.NetworkStream" />이 쓰기 가능한지 여부를 나타내는 값을 가져옵니다.</summary>
      <returns vsli:raw="&lt;see langword=&quot;true&quot; /&gt; if data can be written to the stream; otherwise, &lt;see langword=&quot;false&quot; /&gt;. The default value is &lt;see langword=&quot;true&quot; /&gt;.">스트림에 데이터를 쓸 수 있으면 <see langword="true" />이고, 그렇지 않으면 <see langword="false" />입니다. 기본값은 <see langword="true" />입니다.</returns>
    </member>
    <member name="P:System.Net.Sockets.NetworkStream.WriteTimeout">
      <summary vsli:raw="Gets or sets the amount of time that a write operation blocks waiting for data.">데이터를 기다리는 중 쓰기 작업이 차단되는 시간을 가져오거나 설정합니다.</summary>
      <exception cref="T:System.ArgumentOutOfRangeException" vsli:raw="The value specified is less than or equal to zero and is not &lt;see cref=&quot;F:System.Threading.Timeout.Infinite&quot; /&gt;.">지정한 값이 0보다 작거나 같고 <see cref="F:System.Threading.Timeout.Infinite" />가 아닌 경우</exception>
      <returns vsli:raw="A &lt;see cref=&quot;T:System.Int32&quot; /&gt; that specifies the amount of time, in milliseconds, that will elapse before a write operation fails. The default value, &lt;see cref=&quot;F:System.Threading.Timeout.Infinite&quot; /&gt;, specifies that the write operation does not time out.">쓰기 작업의 제한 시간(밀리초)을 지정하는 <see cref="T:System.Int32" />입니다. 이 시간이 경과하면 쓰기 작업이 실패합니다. 기본값인 <see cref="F:System.Threading.Timeout.Infinite" />는 쓰기 작업에 제한 시간이 없음을 나타냅니다.</returns>
    </member>
    <member name="T:System.Net.Sockets.ProtocolFamily">
      <summary vsli:raw="Specifies the type of protocol that an instance of the &lt;see cref=&quot;T:System.Net.Sockets.Socket&quot; /&gt; class can use.">
        <see cref="T:System.Net.Sockets.Socket" /> 클래스의 인스턴스가 사용할 수 있는 프로토콜의 종류를 지정합니다.</summary>
    </member>
    <member name="F:System.Net.Sockets.ProtocolFamily.AppleTalk">
      <summary vsli:raw="AppleTalk protocol.">AppleTalk 프로토콜입니다.</summary>
    </member>
    <member name="F:System.Net.Sockets.ProtocolFamily.Atm">
      <summary vsli:raw="Native ATM services protocol.">Native ATM 서비스 프로토콜입니다.</summary>
    </member>
    <member name="F:System.Net.Sockets.ProtocolFamily.Banyan">
      <summary vsli:raw="Banyan protocol.">Banyan 프로토콜입니다.</summary>
    </member>
    <member name="F:System.Net.Sockets.ProtocolFamily.Ccitt">
      <summary vsli:raw="CCITT protocol, such as X.25.">X.25와 같은 CCITT 프로토콜입니다.</summary>
    </member>
    <member name="F:System.Net.Sockets.ProtocolFamily.Chaos">
      <summary vsli:raw="MIT CHAOS protocol.">MIT CHAOS 프로토콜입니다.</summary>
    </member>
    <member name="F:System.Net.Sockets.ProtocolFamily.Cluster">
      <summary vsli:raw="Microsoft Cluster products protocol.">Microsoft Cluster 제품 프로토콜입니다.</summary>
    </member>
    <member name="F:System.Net.Sockets.ProtocolFamily.ControllerAreaNetwork">
      <summary vsli:raw="Controller Area Network protocol.">컨트롤러 영역 네트워크 프로토콜입니다.</summary>
    </member>
    <member name="F:System.Net.Sockets.ProtocolFamily.DataKit">
      <summary vsli:raw="DataKit protocol.">DataKit 프로토콜입니다.</summary>
    </member>
    <member name="F:System.Net.Sockets.ProtocolFamily.DataLink">
      <summary vsli:raw="Direct data link protocol.">직접 데이터 연결 프로토콜입니다.</summary>
    </member>
    <member name="F:System.Net.Sockets.ProtocolFamily.DecNet">
      <summary vsli:raw="DECNet protocol.">DECNet 프로토콜입니다.</summary>
    </member>
    <member name="F:System.Net.Sockets.ProtocolFamily.Ecma">
      <summary vsli:raw="European Computer Manufacturers Association (ECMA) protocol.">ECMA(European Computer Manufacturers Association) 프로토콜입니다.</summary>
    </member>
    <member name="F:System.Net.Sockets.ProtocolFamily.FireFox">
      <summary vsli:raw="FireFox protocol.">FireFox 프로토콜입니다.</summary>
    </member>
    <member name="F:System.Net.Sockets.ProtocolFamily.HyperChannel">
      <summary vsli:raw="NSC HyperChannel protocol.">NSC HyperChannel 프로토콜입니다.</summary>
    </member>
    <member name="F:System.Net.Sockets.ProtocolFamily.Ieee12844">
      <summary vsli:raw="IEEE 1284.4 workgroup protocol.">IEEE 1284.4 작업 그룹 프로토콜입니다.</summary>
    </member>
    <member name="F:System.Net.Sockets.ProtocolFamily.ImpLink">
      <summary vsli:raw="ARPANET IMP protocol.">ARPANET IMP 프로토콜입니다.</summary>
    </member>
    <member name="F:System.Net.Sockets.ProtocolFamily.InterNetwork">
      <summary vsli:raw="IP version 4 protocol.">IP 버전 4 프로토콜입니다.</summary>
    </member>
    <member name="F:System.Net.Sockets.ProtocolFamily.InterNetworkV6">
      <summary vsli:raw="IP version 6 protocol.">IP 버전 6 프로토콜입니다.</summary>
    </member>
    <member name="F:System.Net.Sockets.ProtocolFamily.Ipx">
      <summary vsli:raw="IPX or SPX protocol.">IPX 또는 SPX 프로토콜입니다.</summary>
    </member>
    <member name="F:System.Net.Sockets.ProtocolFamily.Irda">
      <summary vsli:raw="IrDA protocol.">IrDA 프로토콜입니다.</summary>
    </member>
    <member name="F:System.Net.Sockets.ProtocolFamily.Iso">
      <summary vsli:raw="ISO protocol.">ISO 프로토콜입니다.</summary>
    </member>
    <member name="F:System.Net.Sockets.ProtocolFamily.Lat">
      <summary vsli:raw="LAT protocol.">LAT 프로토콜입니다.</summary>
    </member>
    <member name="F:System.Net.Sockets.ProtocolFamily.Max">
      <summary vsli:raw="MAX protocol.">MAX 프로토콜입니다.</summary>
    </member>
    <member name="F:System.Net.Sockets.ProtocolFamily.NetBios">
      <summary vsli:raw="NetBIOS protocol.">NetBIOS 프로토콜입니다.</summary>
    </member>
    <member name="F:System.Net.Sockets.ProtocolFamily.NetworkDesigners">
      <summary vsli:raw="Network Designers OSI gateway enabled protocol.">Network Designers OSI 게이트웨이 사용 프로토콜입니다.</summary>
    </member>
    <member name="F:System.Net.Sockets.ProtocolFamily.NS">
      <summary vsli:raw="Xerox NS protocol.">Xerox NS 프로토콜입니다.</summary>
    </member>
    <member name="F:System.Net.Sockets.ProtocolFamily.Osi">
      <summary vsli:raw="OSI protocol.">OSI 프로토콜입니다.</summary>
    </member>
    <member name="F:System.Net.Sockets.ProtocolFamily.Packet">
      <summary vsli:raw="Low-level Packet protocol.">하위 수준 패킷 프로토콜입니다.</summary>
    </member>
    <member name="F:System.Net.Sockets.ProtocolFamily.Pup">
      <summary vsli:raw="PUP protocol.">PUP 프로토콜입니다.</summary>
    </member>
    <member name="F:System.Net.Sockets.ProtocolFamily.Sna">
      <summary vsli:raw="IBM SNA protocol.">IBM SNA 프로토콜입니다.</summary>
    </member>
    <member name="F:System.Net.Sockets.ProtocolFamily.Unix">
      <summary vsli:raw="Unix local to host protocol.">호스트에 대한 Unix 로컬 프로토콜입니다.</summary>
    </member>
    <member name="F:System.Net.Sockets.ProtocolFamily.Unknown">
      <summary vsli:raw="Unknown protocol.">알 수 없는 프로토콜입니다.</summary>
    </member>
    <member name="F:System.Net.Sockets.ProtocolFamily.Unspecified">
      <summary vsli:raw="Unspecified protocol.">지정되지 않은 프로토콜입니다.</summary>
    </member>
    <member name="F:System.Net.Sockets.ProtocolFamily.VoiceView">
      <summary vsli:raw="VoiceView protocol.">VoiceView 프로토콜입니다.</summary>
    </member>
    <member name="T:System.Net.Sockets.ProtocolType">
      <summary vsli:raw="Specifies the protocols that the &lt;see cref=&quot;T:System.Net.Sockets.Socket&quot; /&gt; class supports.">
        <see cref="T:System.Net.Sockets.Socket" /> 클래스가 지원하는 프로토콜을 지정합니다.</summary>
    </member>
    <member name="F:System.Net.Sockets.ProtocolType.Ggp">
      <summary vsli:raw="Gateway To Gateway Protocol.">Gateway To Gateway 프로토콜입니다.</summary>
    </member>
    <member name="F:System.Net.Sockets.ProtocolType.Icmp">
      <summary vsli:raw="Internet Control Message Protocol.">Internet Control Message 프로토콜입니다.</summary>
    </member>
    <member name="F:System.Net.Sockets.ProtocolType.IcmpV6">
      <summary vsli:raw="Internet Control Message Protocol for IPv6.">IPv6용 Internet Control Message Protocol입니다.</summary>
    </member>
    <member name="F:System.Net.Sockets.ProtocolType.Idp">
      <summary vsli:raw="Internet Datagram Protocol.">Internet Datagram 프로토콜입니다.</summary>
    </member>
    <member name="F:System.Net.Sockets.ProtocolType.Igmp">
      <summary vsli:raw="Internet Group Management Protocol.">Internet Group Management 프로토콜입니다.</summary>
    </member>
    <member name="F:System.Net.Sockets.ProtocolType.IP">
      <summary vsli:raw="Internet Protocol.">인터넷 프로토콜입니다.</summary>
    </member>
    <member name="F:System.Net.Sockets.ProtocolType.IPSecAuthenticationHeader">
      <summary vsli:raw="IPv6 Authentication header. For details, see RFC 2292 section 2.2.1, available at https://www.ietf.org.">IPv6 Authentication 헤더입니다. 자세한 내용은 https://www.ietf.org에서 사용할 수 있는 RFC 2292 섹션 2.2.1을 참조하세요.</summary>
    </member>
    <member name="F:System.Net.Sockets.ProtocolType.IPSecEncapsulatingSecurityPayload">
      <summary vsli:raw="IPv6 Encapsulating Security Payload header.">IPv6 Encapsulating Security Payload 헤더입니다.</summary>
    </member>
    <member name="F:System.Net.Sockets.ProtocolType.IPv4">
      <summary vsli:raw="Internet Protocol version 4.">인터넷 프로토콜 버전 4입니다.</summary>
    </member>
    <member name="F:System.Net.Sockets.ProtocolType.IPv6">
      <summary vsli:raw="Internet Protocol version 6 (IPv6).">IPv6(인터넷 프로토콜 버전 6)입니다.</summary>
    </member>
    <member name="F:System.Net.Sockets.ProtocolType.IPv6DestinationOptions">
      <summary vsli:raw="IPv6 Destination Options header.">IPv6 Destination Options 헤더입니다.</summary>
    </member>
    <member name="F:System.Net.Sockets.ProtocolType.IPv6FragmentHeader">
      <summary vsli:raw="IPv6 Fragment header.">IPv6 Fragment 헤더입니다.</summary>
    </member>
    <member name="F:System.Net.Sockets.ProtocolType.IPv6HopByHopOptions">
      <summary vsli:raw="IPv6 Hop by Hop Options header.">IPv6 Hop-by-Hop Options 헤더입니다.</summary>
    </member>
    <member name="F:System.Net.Sockets.ProtocolType.IPv6NoNextHeader">
      <summary vsli:raw="IPv6 No next header.">IPv6 No Next 헤더입니다.</summary>
    </member>
    <member name="F:System.Net.Sockets.ProtocolType.IPv6RoutingHeader">
      <summary vsli:raw="IPv6 Routing header.">IPv6 Routing 헤더입니다.</summary>
    </member>
    <member name="F:System.Net.Sockets.ProtocolType.Ipx">
      <summary vsli:raw="Internet Packet Exchange Protocol.">Internet Packet Exchange 프로토콜입니다.</summary>
    </member>
    <member name="F:System.Net.Sockets.ProtocolType.ND">
      <summary vsli:raw="Net Disk Protocol (unofficial).">Net Disk 프로토콜(비공식)입니다.</summary>
    </member>
    <member name="F:System.Net.Sockets.ProtocolType.Pup">
      <summary vsli:raw="PARC Universal Packet Protocol.">PARC Universal Packet 프로토콜입니다.</summary>
    </member>
    <member name="F:System.Net.Sockets.ProtocolType.Raw">
      <summary vsli:raw="Raw IP packet protocol.">Raw IP Packet 프로토콜입니다.</summary>
    </member>
    <member name="F:System.Net.Sockets.ProtocolType.Spx">
      <summary vsli:raw="Sequenced Packet Exchange protocol.">Sequenced Packet Exchange 프로토콜입니다.</summary>
    </member>
    <member name="F:System.Net.Sockets.ProtocolType.SpxII">
      <summary vsli:raw="Sequenced Packet Exchange version 2 protocol.">Sequenced Packet Exchange 버전 2 프로토콜입니다.</summary>
    </member>
    <member name="F:System.Net.Sockets.ProtocolType.Tcp">
      <summary vsli:raw="Transmission Control Protocol.">Transmission Control 프로토콜입니다.</summary>
    </member>
    <member name="F:System.Net.Sockets.ProtocolType.Udp">
      <summary vsli:raw="User Datagram Protocol.">User Datagram 프로토콜입니다.</summary>
    </member>
    <member name="F:System.Net.Sockets.ProtocolType.Unknown">
      <summary vsli:raw="Unknown protocol.">알 수 없는 프로토콜입니다.</summary>
    </member>
    <member name="F:System.Net.Sockets.ProtocolType.Unspecified">
      <summary vsli:raw="Unspecified protocol.">지정되지 않은 프로토콜입니다.</summary>
    </member>
    <member name="T:System.Net.Sockets.SafeSocketHandle">
      <summary vsli:raw="Represents a wrapper class for a socket handle.">소켓 핸들의 래퍼 클래스를 나타냅니다.</summary>
    </member>
    <member name="M:System.Net.Sockets.SafeSocketHandle.#ctor(System.IntPtr,System.Boolean)">
      <summary vsli:raw="Initializes a new instance of the &lt;see cref=&quot;T:System.Net.Sockets.SafeSocketHandle&quot; /&gt; class.">
        <see cref="T:System.Net.Sockets.SafeSocketHandle" /> 클래스의 새 인스턴스를 초기화합니다.</summary>
      <param name="preexistingHandle" vsli:raw="The pre-existing handle to use.">사용할 기존 핸들입니다.</param>
      <param name="ownsHandle" vsli:raw="&lt;see langword=&quot;true&quot; /&gt; to reliably release the handle during the finalization phase; &lt;see langword=&quot;false&quot; /&gt; to prevent reliable release (not recommended).">종료 단계에서 안정적으로 핸들을 해제하려면<see langword="true" /> 이고, 안정적으로 해제되지 않게 하려면 <see langword="false" /> 입니다(권장되지 않음).</param>
    </member>
    <member name="T:System.Net.Sockets.SelectMode">
      <summary vsli:raw="Defines the polling modes for the &lt;see cref=&quot;M:System.Net.Sockets.Socket.Poll(System.Int32,System.Net.Sockets.SelectMode)&quot; /&gt; method.">
        <see cref="M:System.Net.Sockets.Socket.Poll(System.Int32,System.Net.Sockets.SelectMode)" /> 메서드에 대한 폴링 모드를 정의합니다.</summary>
    </member>
    <member name="F:System.Net.Sockets.SelectMode.SelectError">
      <summary vsli:raw="Error status mode.">오류 상태 모드입니다.</summary>
    </member>
    <member name="F:System.Net.Sockets.SelectMode.SelectRead">
      <summary vsli:raw="Read status mode.">읽기 상태 모드입니다.</summary>
    </member>
    <member name="F:System.Net.Sockets.SelectMode.SelectWrite">
      <summary vsli:raw="Write status mode.">쓰기 상태 모드입니다.</summary>
    </member>
    <member name="T:System.Net.Sockets.SendPacketsElement">
      <summary vsli:raw="Represents an element in a &lt;see cref=&quot;T:System.Net.Sockets.SendPacketsElement&quot; /&gt; array.">
        <see cref="T:System.Net.Sockets.SendPacketsElement" /> 배열의 요소를 나타냅니다.</summary>
    </member>
    <member name="M:System.Net.Sockets.SendPacketsElement.#ctor(System.Byte[])">
      <summary vsli:raw="Initializes a new instance of the &lt;see cref=&quot;T:System.Net.Sockets.SendPacketsElement&quot; /&gt; class using the specified buffer.">지정된 버퍼를 사용하여 <see cref="T:System.Net.Sockets.SendPacketsElement" /> 클래스의 새 인스턴스를 초기화합니다.</summary>
      <param name="buffer" vsli:raw="A byte array of data to send using the &lt;see cref=&quot;M:System.Net.Sockets.Socket.SendPacketsAsync(System.Net.Sockets.SocketAsyncEventArgs)&quot; /&gt; method.">
        <see cref="M:System.Net.Sockets.Socket.SendPacketsAsync(System.Net.Sockets.SocketAsyncEventArgs)" /> 메서드를 사용하여 보낼 데이터의 바이트 배열입니다.</param>
      <exception cref="T:System.ArgumentNullException" vsli:raw="The &lt;paramref name=&quot;buffer&quot; /&gt; parameter cannot be null.">
        <paramref name="buffer" /> 매개 변수가 null인 경우</exception>
    </member>
    <member name="M:System.Net.Sockets.SendPacketsElement.#ctor(System.Byte[],System.Int32,System.Int32)">
      <summary vsli:raw="Initializes a new instance of the &lt;see cref=&quot;T:System.Net.Sockets.SendPacketsElement&quot; /&gt; class using the specified range of the buffer.">지정된 범위의 버퍼를 사용하여 <see cref="T:System.Net.Sockets.SendPacketsElement" /> 클래스의 새로운 인스턴스를 초기화합니다.</summary>
      <param name="buffer" vsli:raw="A byte array of data to send using the &lt;see cref=&quot;M:System.Net.Sockets.Socket.SendPacketsAsync(System.Net.Sockets.SocketAsyncEventArgs)&quot; /&gt; method.">
        <see cref="M:System.Net.Sockets.Socket.SendPacketsAsync(System.Net.Sockets.SocketAsyncEventArgs)" /> 메서드를 사용하여 보낼 데이터의 바이트 배열입니다.</param>
      <param name="offset" vsli:raw="The offset, in bytes, from the beginning of the &lt;paramref name=&quot;buffer&quot; /&gt; to the location in the &lt;paramref name=&quot;buffer&quot; /&gt; to start sending the data specified in the &lt;paramref name=&quot;buffer&quot; /&gt; parameter.">
        <paramref name="buffer" />의 시작 부분부터 <paramref name="buffer" />에서 <paramref name="buffer" /> 매개 변수에 지정된 데이터를 보내기 시작하는 위치까지의 오프셋(바이트)입니다.</param>
      <param name="count" vsli:raw="The number of bytes to send starting from the &lt;paramref name=&quot;offset&quot; /&gt; parameter. If &lt;paramref name=&quot;count&quot; /&gt; is zero, no bytes are sent.">
        <paramref name="offset" /> 매개 변수에서 시작하여 보낼 바이트 수입니다. <paramref name="count" />가 0이면 바이트가 전송되지 않습니다.</param>
      <exception cref="T:System.ArgumentNullException" vsli:raw="The &lt;paramref name=&quot;buffer&quot; /&gt; parameter cannot be null.">
        <paramref name="buffer" /> 매개 변수가 null인 경우</exception>
      <exception cref="T:System.ArgumentOutOfRangeException" vsli:raw="The &lt;paramref name=&quot;offset&quot; /&gt; and &lt;paramref name=&quot;count&quot; /&gt; parameters must be greater than or equal to zero.  &#xA;  &#xA; The &lt;paramref name=&quot;offset&quot; /&gt; and &lt;paramref name=&quot;count&quot; /&gt; must be less than the size of the buffer.">
        <paramref name="offset" /> 및 <paramref name="count" /> 매개 변수가 0보다 작은 경우  
  
<paramref name="offset" /> 및 <paramref name="count" />가 버퍼 크기보다 크거나 같은 경우</exception>
    </member>
    <member name="M:System.Net.Sockets.SendPacketsElement.#ctor(System.Byte[],System.Int32,System.Int32,System.Boolean)">
      <summary vsli:raw="Initializes a new instance of the &lt;see cref=&quot;T:System.Net.Sockets.SendPacketsElement&quot; /&gt; class using the specified range of the buffer with an option to combine this element with the next element in a single send request from the sockets layer to the transport.">소켓 레이어에서 전송 레이어로 전달되는 단일 보내기 요청에서 이 요소를 다음 요소와 결합하는 옵션과 함께 지정된 범위의 버퍼를 사용하여 <see cref="T:System.Net.Sockets.SendPacketsElement" /> 클래스의 새 인스턴스를 초기화합니다.</summary>
      <param name="buffer" vsli:raw="A byte array of data to send using the &lt;see cref=&quot;M:System.Net.Sockets.Socket.SendPacketsAsync(System.Net.Sockets.SocketAsyncEventArgs)&quot; /&gt; method.">
        <see cref="M:System.Net.Sockets.Socket.SendPacketsAsync(System.Net.Sockets.SocketAsyncEventArgs)" /> 메서드를 사용하여 보낼 데이터의 바이트 배열입니다.</param>
      <param name="offset" vsli:raw="The offset, in bytes, from the beginning of the &lt;paramref name=&quot;buffer&quot; /&gt; to the location in the &lt;paramref name=&quot;buffer&quot; /&gt; to start sending the data specified in the &lt;paramref name=&quot;buffer&quot; /&gt; parameter.">
        <paramref name="buffer" />의 시작 부분부터 <paramref name="buffer" />에서 <paramref name="buffer" /> 매개 변수에 지정된 데이터를 보내기 시작하는 위치까지의 오프셋(바이트)입니다.</param>
      <param name="count" vsli:raw="The number bytes to send starting from the &lt;paramref name=&quot;offset&quot; /&gt; parameter. If &lt;paramref name=&quot;count&quot; /&gt; is zero, no bytes are sent.">
        <paramref name="offset" /> 매개 변수에서 시작하여 보낼 바이트 수입니다. <paramref name="count" />가 0이면 바이트가 전송되지 않습니다.</param>
      <param name="endOfPacket" vsli:raw="A Boolean value that specifies that this element should not be combined with the next element in a single send request from the sockets layer to the transport. This flag is used for granular control of the content of each message on a datagram or message-oriented socket.">소켓 계층에서 전송 계층으로 전달되는 단일 보내기 요청에서 이 요소를 다음 요소와 결합하지 않도록 지정하는 부울 값입니다. 이 플래그는 데이터그램 또는 메시지 지향 소켓에서 각 메시지의 콘텐츠를 세밀하게 제어하는 데 사용됩니다.</param>
      <exception cref="T:System.ArgumentNullException" vsli:raw="The &lt;paramref name=&quot;buffer&quot; /&gt; parameter cannot be null.">
        <paramref name="buffer" /> 매개 변수가 null인 경우</exception>
      <exception cref="T:System.ArgumentOutOfRangeException" vsli:raw="The &lt;paramref name=&quot;offset&quot; /&gt; and &lt;paramref name=&quot;count&quot; /&gt; parameters must be greater than or equal to zero.  &#xA;  &#xA; The &lt;paramref name=&quot;offset&quot; /&gt; and &lt;paramref name=&quot;count&quot; /&gt; must be less than the size of the buffer.">
        <paramref name="offset" /> 및 <paramref name="count" /> 매개 변수가 0보다 작은 경우  
  
<paramref name="offset" /> 및 <paramref name="count" />가 버퍼 크기보다 크거나 같은 경우</exception>
    </member>
    <member name="M:System.Net.Sockets.SendPacketsElement.#ctor(System.IO.FileStream)">
      <summary vsli:raw="Initializes a new instance of the &lt;see cref=&quot;T:System.Net.Sockets.SendPacketsElement&quot; /&gt; class using the specified &lt;see cref=&quot;T:System.IO.FileStream&quot; /&gt; object.">지정된 <see cref="T:System.IO.FileStream" /> 개체를 사용하여 <see cref="T:System.Net.Sockets.SendPacketsElement" /> 클래스의 새 인스턴스를 초기화합니다.</summary>
      <param name="fileStream" vsli:raw="The file to be transmitted using the &lt;see cref=&quot;M:System.Net.Sockets.Socket.SendPacketsAsync(System.Net.Sockets.SocketAsyncEventArgs)&quot; /&gt; method.">
        <see cref="M:System.Net.Sockets.Socket.SendPacketsAsync(System.Net.Sockets.SocketAsyncEventArgs)" /> 메서드를 사용하여 전송할 파일입니다.</param>
      <exception cref="T:System.ArgumentException" vsli:raw="&lt;paramref name=&quot;fileStream&quot; /&gt; is not open for asynchronous reading and writing.">
        <paramref name="fileStream" />은 비동기 읽기 및 쓰기용으로 열려 있지 않습니다.</exception>
      <exception cref="T:System.ArgumentNullException" vsli:raw="&lt;paramref name=&quot;fileStream&quot; /&gt; cannot be null.">
        <paramref name="fileStream" />이 null인 경우</exception>
    </member>
    <member name="M:System.Net.Sockets.SendPacketsElement.#ctor(System.IO.FileStream,System.Int64,System.Int32)">
      <summary vsli:raw="Initializes a new instance of the &lt;see cref=&quot;T:System.Net.Sockets.SendPacketsElement&quot; /&gt; class using the specified range of a &lt;see cref=&quot;T:System.IO.FileStream&quot; /&gt; object.">지정된 범위의 <see cref="T:System.IO.FileStream" /> 개체를 사용하여 <see cref="T:System.Net.Sockets.SendPacketsElement" /> 클래스의 새 인스턴스를 초기화합니다.</summary>
      <param name="fileStream" vsli:raw="The file to be transmitted using the &lt;see cref=&quot;M:System.Net.Sockets.Socket.SendPacketsAsync(System.Net.Sockets.SocketAsyncEventArgs)&quot; /&gt; method.">
        <see cref="M:System.Net.Sockets.Socket.SendPacketsAsync(System.Net.Sockets.SocketAsyncEventArgs)" /> 메서드를 사용하여 전송할 파일입니다.</param>
      <param name="offset" vsli:raw="The offset, in bytes, from the beginning of the file to the location in the file to start sending the bytes in the file.">파일의 시작 부분부터 파일의 바이트를 보내기 시작하는 파일의 위치까지의 오프셋(바이트)입니다.</param>
      <param name="count" vsli:raw="The number of bytes to send starting from the &lt;paramref name=&quot;offset&quot; /&gt;. If &lt;paramref name=&quot;count&quot; /&gt; is zero, the entire file is sent.">
        <paramref name="offset" /> 매개 변수부터 시작하여 보낼 바이트 수입니다. <paramref name="count" />가 0이면 전체 파일이 전송됩니다.</param>
      <exception cref="T:System.ArgumentException" vsli:raw="The &lt;paramref name=&quot;fileStream&quot; /&gt; parameter must have been opened for asynchronous reading and writing.">비동기 읽기 및 쓰기를 위해 <paramref name="fileStream" /> 매개 변수를 열어야 합니다.</exception>
      <exception cref="T:System.ArgumentNullException" vsli:raw="The &lt;paramref name=&quot;fileStream&quot; /&gt; parameter cannot be &lt;see langword=&quot;null&quot; /&gt;.">
        <paramref name="fileStream" /> 매개 변수는 <see langword="null" />일 수 없습니다.</exception>
      <exception cref="T:System.ArgumentOutOfRangeException" vsli:raw="The &lt;paramref name=&quot;offset&quot; /&gt; and &lt;paramref name=&quot;count&quot; /&gt; parameters must be greater than or equal to zero.">
        <paramref name="offset" /> 및 <paramref name="count" /> 매개 변수가 0보다 작은 경우</exception>
    </member>
    <member name="M:System.Net.Sockets.SendPacketsElement.#ctor(System.IO.FileStream,System.Int64,System.Int32,System.Boolean)">
      <summary vsli:raw="Initializes a new instance of the &lt;see cref=&quot;T:System.Net.Sockets.SendPacketsElement&quot; /&gt; class using the specified range of a &lt;see cref=&quot;T:System.IO.FileStream&quot; /&gt; object with an option to combine this element with the next element in a single send request from the sockets layer to the transport.">소켓 레이어에서 전송 레이어로 전달되는 단일 보내기 요청에서 이 요소를 다음 요소와 결합하는 옵션과 함께 지정된 범위의 <see cref="T:System.IO.FileStream" /> 개체를 사용하여 <see cref="T:System.Net.Sockets.SendPacketsElement" /> 클래스의 새 인스턴스를 초기화합니다.</summary>
      <param name="fileStream" vsli:raw="The file to be transmitted using the &lt;see cref=&quot;M:System.Net.Sockets.Socket.SendPacketsAsync(System.Net.Sockets.SocketAsyncEventArgs)&quot; /&gt; method.">
        <see cref="M:System.Net.Sockets.Socket.SendPacketsAsync(System.Net.Sockets.SocketAsyncEventArgs)" /> 메서드를 사용하여 전송할 파일입니다.</param>
      <param name="offset" vsli:raw="TThe offset, in bytes, from the beginning of the file to the location in the file to start sending the bytes in the file.">파일의 시작 부분부터 파일의 바이트를 보내기 시작하는 파일의 위치까지의 오프셋(바이트)입니다.</param>
      <param name="count" vsli:raw="The number of bytes to send starting from the offset parameter. If count is zero, the entire file is sent.">오프셋 매개 변수에서 시작하여 보낼 바이트 수입니다. count가 0이면 전체 파일이 전송됩니다.</param>
      <param name="endOfPacket" vsli:raw="Specifies that this element should not be combined with the next element in a single send request from the sockets layer to the transport. This flag is used for granular control of the content of each message on a datagram or message-oriented socket.">소켓 레이어에서 전송 레이어로 전달되는 단일 보내기 요청에서 이 요소를 다음 요소와 결합하지 않도록 지정합니다. 이 플래그는 데이터그램 또는 메시지 지향 소켓에서 각 메시지의 콘텐츠를 세밀하게 제어하는 데 사용됩니다.</param>
      <exception cref="T:System.ArgumentException" vsli:raw="The &lt;paramref name=&quot;fileStream&quot; /&gt; parameter must have been opened for asynchronous reading and writing.">비동기 읽기 및 쓰기를 위해 <paramref name="fileStream" /> 매개 변수를 열어야 합니다.</exception>
      <exception cref="T:System.ArgumentNullException" vsli:raw="The &lt;paramref name=&quot;fileStream&quot; /&gt; parameter cannot be &lt;see langword=&quot;null&quot; /&gt;.">
        <paramref name="fileStream" /> 매개 변수는 <see langword="null" />일 수 없습니다.</exception>
      <exception cref="T:System.ArgumentOutOfRangeException" vsli:raw="The &lt;paramref name=&quot;offset&quot; /&gt; and &lt;paramref name=&quot;count&quot; /&gt; parameters must be greater than or equal to zero.">
        <paramref name="offset" /> 및 <paramref name="count" /> 매개 변수가 0보다 작은 경우</exception>
    </member>
    <member name="M:System.Net.Sockets.SendPacketsElement.#ctor(System.String)">
      <summary vsli:raw="Initializes a new instance of the &lt;see cref=&quot;T:System.Net.Sockets.SendPacketsElement&quot; /&gt; class using the specified file.">지정된 파일을 사용하여 <see cref="T:System.Net.Sockets.SendPacketsElement" /> 클래스의 새 인스턴스를 초기화합니다.</summary>
      <param name="filepath" vsli:raw="The filename of the file to be transmitted using the &lt;see cref=&quot;M:System.Net.Sockets.Socket.SendPacketsAsync(System.Net.Sockets.SocketAsyncEventArgs)&quot; /&gt; method.">
        <see cref="M:System.Net.Sockets.Socket.SendPacketsAsync(System.Net.Sockets.SocketAsyncEventArgs)" /> 메서드를 사용하여 전송할 파일의 이름입니다.</param>
      <exception cref="T:System.ArgumentNullException" vsli:raw="The &lt;paramref name=&quot;filepath&quot; /&gt; parameter cannot be null.">
        <paramref name="filepath" /> 매개 변수가 null인 경우</exception>
    </member>
    <member name="M:System.Net.Sockets.SendPacketsElement.#ctor(System.String,System.Int32,System.Int32)">
      <summary vsli:raw="Initializes a new instance of the &lt;see cref=&quot;T:System.Net.Sockets.SendPacketsElement&quot; /&gt; class using the specified range of the file.">지정된 범위의 파일을 사용하여 <see cref="T:System.Net.Sockets.SendPacketsElement" /> 클래스의 새로운 인스턴스를 초기화합니다.</summary>
      <param name="filepath" vsli:raw="The filename of the file to be transmitted using the &lt;see cref=&quot;M:System.Net.Sockets.Socket.SendPacketsAsync(System.Net.Sockets.SocketAsyncEventArgs)&quot; /&gt; method.">
        <see cref="M:System.Net.Sockets.Socket.SendPacketsAsync(System.Net.Sockets.SocketAsyncEventArgs)" /> 메서드를 사용하여 전송할 파일의 이름입니다.</param>
      <param name="offset" vsli:raw="The offset, in bytes, from the beginning of the file to the location in the file to start sending the file specified in the &lt;paramref name=&quot;filepath&quot; /&gt; parameter.">파일의 시작 부분부터 파일에서 <paramref name="filepath" /> 매개 변수에 지정된 파일을 보내기 시작하는 위치까지의 오프셋(바이트)입니다.</param>
      <param name="count" vsli:raw="The number of bytes to send starting from the &lt;paramref name=&quot;offset&quot; /&gt; parameter. If &lt;paramref name=&quot;count&quot; /&gt; is zero, the entire file is sent.">
        <paramref name="offset" /> 매개 변수에서 시작하여 보낼 바이트 수입니다. <paramref name="count" />가 0이면 전체 파일이 전송됩니다.</param>
      <exception cref="T:System.ArgumentNullException" vsli:raw="The &lt;paramref name=&quot;filepath&quot; /&gt; parameter cannot be null.">
        <paramref name="filepath" /> 매개 변수가 null인 경우</exception>
      <exception cref="T:System.ArgumentOutOfRangeException" vsli:raw="The &lt;paramref name=&quot;offset&quot; /&gt; and &lt;paramref name=&quot;count&quot; /&gt; parameters must be greater than or equal to zero.">
        <paramref name="offset" /> 및 <paramref name="count" /> 매개 변수가 0보다 작은 경우</exception>
    </member>
    <member name="M:System.Net.Sockets.SendPacketsElement.#ctor(System.String,System.Int32,System.Int32,System.Boolean)">
      <summary vsli:raw="Initializes a new instance of the &lt;see cref=&quot;T:System.Net.Sockets.SendPacketsElement&quot; /&gt; class using the specified range of the file with an option to combine this element with the next element in a single send request from the sockets layer to the transport.">소켓 레이어에서 전송 레이어로 전달되는 단일 보내기 요청에서 이 요소를 다음 요소와 결합하는 옵션과 함께 지정된 범위의 파일을 사용하여 <see cref="T:System.Net.Sockets.SendPacketsElement" /> 클래스의 새 인스턴스를 초기화합니다.</summary>
      <param name="filepath" vsli:raw="The filename of the file to be transmitted using the &lt;see cref=&quot;M:System.Net.Sockets.Socket.SendPacketsAsync(System.Net.Sockets.SocketAsyncEventArgs)&quot; /&gt; method.">
        <see cref="M:System.Net.Sockets.Socket.SendPacketsAsync(System.Net.Sockets.SocketAsyncEventArgs)" /> 메서드를 사용하여 전송할 파일의 이름입니다.</param>
      <param name="offset" vsli:raw="The offset, in bytes, from the beginning of the file to the location in the file to start sending the file specified in the &lt;paramref name=&quot;filepath&quot; /&gt; parameter.">파일의 시작 부분부터 파일에서 <paramref name="filepath" /> 매개 변수에 지정된 파일을 보내기 시작하는 위치까지의 오프셋(바이트)입니다.</param>
      <param name="count" vsli:raw="The number of bytes to send starting from the &lt;paramref name=&quot;offset&quot; /&gt; parameter. If &lt;paramref name=&quot;count&quot; /&gt; is zero, the entire file is sent.">
        <paramref name="offset" /> 매개 변수에서 시작하여 보낼 바이트 수입니다. <paramref name="count" />가 0이면 전체 파일이 전송됩니다.</param>
      <param name="endOfPacket" vsli:raw="A Boolean value that specifies that this element should not be combined with the next element in a single send request from the sockets layer to the transport. This flag is used for granular control of the content of each message on a datagram or message-oriented socket.">소켓 계층에서 전송 계층으로 전달되는 단일 보내기 요청에서 이 요소를 다음 요소와 결합하지 않도록 지정하는 부울 값입니다. 이 플래그는 데이터그램 또는 메시지 지향 소켓에서 각 메시지의 콘텐츠를 세밀하게 제어하는 데 사용됩니다.</param>
      <exception cref="T:System.ArgumentNullException" vsli:raw="The &lt;paramref name=&quot;filepath&quot; /&gt; parameter cannot be null.">
        <paramref name="filepath" /> 매개 변수가 null인 경우</exception>
      <exception cref="T:System.ArgumentOutOfRangeException" vsli:raw="The &lt;paramref name=&quot;offset&quot; /&gt; and &lt;paramref name=&quot;count&quot; /&gt; parameters must be greater than or equal to zero.">
        <paramref name="offset" /> 및 <paramref name="count" /> 매개 변수가 0보다 작은 경우</exception>
    </member>
    <member name="M:System.Net.Sockets.SendPacketsElement.#ctor(System.String,System.Int64,System.Int32)">
      <summary vsli:raw="Initializes a new instance of the &lt;see cref=&quot;T:System.Net.Sockets.SendPacketsElement&quot; /&gt; class using the specified range of the file.">지정된 범위의 파일을 사용하여 <see cref="T:System.Net.Sockets.SendPacketsElement" /> 클래스의 새로운 인스턴스를 초기화합니다.</summary>
      <param name="filepath" vsli:raw="The filename of the file to be transmitted using the &lt;see cref=&quot;M:System.Net.Sockets.Socket.SendPacketsAsync(System.Net.Sockets.SocketAsyncEventArgs)&quot; /&gt; method.">
        <see cref="M:System.Net.Sockets.Socket.SendPacketsAsync(System.Net.Sockets.SocketAsyncEventArgs)" /> 메서드를 사용하여 전송할 파일의 이름입니다.</param>
      <param name="offset" vsli:raw="The offset, in bytes, from the beginning of the file to the location in the file to start sending the file specified in the &lt;paramref name=&quot;filepath&quot; /&gt; parameter.">파일의 시작 부분부터 파일에서 <paramref name="filepath" /> 매개 변수에 지정된 파일을 보내기 시작하는 위치까지의 오프셋(바이트)입니다.</param>
      <param name="count" vsli:raw="The number of bytes to send starting from the &lt;paramref name=&quot;offset&quot; /&gt;. If &lt;paramref name=&quot;count&quot; /&gt; is zero, the entire file is sent.">
        <paramref name="offset" /> 매개 변수부터 시작하여 보낼 바이트 수입니다. <paramref name="count" />가 0이면 전체 파일이 전송됩니다.</param>
      <exception cref="T:System.ArgumentNullException" vsli:raw="The &lt;paramref name=&quot;filepath&quot; /&gt; parameter cannot be &lt;see langword=&quot;null&quot; /&gt;.">
        <paramref name="filepath" /> 매개 변수는 <see langword="null" />일 수 없습니다.</exception>
      <exception cref="T:System.ArgumentOutOfRangeException" vsli:raw="The &lt;paramref name=&quot;offset&quot; /&gt; and &lt;paramref name=&quot;count&quot; /&gt; parameters must be greater than or equal to zero.">
        <paramref name="offset" /> 및 <paramref name="count" /> 매개 변수가 0보다 작은 경우</exception>
    </member>
    <member name="M:System.Net.Sockets.SendPacketsElement.#ctor(System.String,System.Int64,System.Int32,System.Boolean)">
      <summary vsli:raw="Initializes a new instance of the &lt;see cref=&quot;T:System.Net.Sockets.SendPacketsElement&quot; /&gt; class using the specified range of the file with an option to combine this element with the next element in a single send request from the sockets layer to the transport.">소켓 레이어에서 전송 레이어로 전달되는 단일 보내기 요청에서 이 요소를 다음 요소와 결합하는 옵션과 함께 지정된 범위의 파일을 사용하여 <see cref="T:System.Net.Sockets.SendPacketsElement" /> 클래스의 새 인스턴스를 초기화합니다.</summary>
      <param name="filepath" vsli:raw="The filename of the file to be transmitted using the &lt;see cref=&quot;M:System.Net.Sockets.Socket.SendPacketsAsync(System.Net.Sockets.SocketAsyncEventArgs)&quot; /&gt; method.">
        <see cref="M:System.Net.Sockets.Socket.SendPacketsAsync(System.Net.Sockets.SocketAsyncEventArgs)" /> 메서드를 사용하여 전송할 파일의 이름입니다.</param>
      <param name="offset" vsli:raw="The offset, in bytes, from the beginning of the file to the location in the file to start sending the file specified in the &lt;paramref name=&quot;filepath&quot; /&gt; parameter.">파일의 시작 부분부터 파일에서 <paramref name="filepath" /> 매개 변수에 지정된 파일을 보내기 시작하는 위치까지의 오프셋(바이트)입니다.</param>
      <param name="count" vsli:raw="The number of bytes to send starting from the &lt;paramref name=&quot;offset&quot; /&gt; parameter. If &lt;paramref name=&quot;count&quot; /&gt; is zero, the entire file is sent.">
        <paramref name="offset" /> 매개 변수에서 시작하여 보낼 바이트 수입니다. <paramref name="count" />가 0이면 전체 파일이 전송됩니다.</param>
      <param name="endOfPacket" vsli:raw="Specifies that this element should not be combined with the next element in a single send request from the sockets layer to the transport. This flag is used for granular control of the content of each message on a datagram or message-oriented socket.">소켓 레이어에서 전송 레이어로 전달되는 단일 보내기 요청에서 이 요소를 다음 요소와 결합하지 않도록 지정합니다. 이 플래그는 데이터그램 또는 메시지 지향 소켓에서 각 메시지의 콘텐츠를 세밀하게 제어하는 데 사용됩니다.</param>
      <exception cref="T:System.ArgumentNullException" vsli:raw="The &lt;paramref name=&quot;filepath&quot; /&gt; parameter cannot be &lt;see langword=&quot;null&quot; /&gt;.">
        <paramref name="filepath" /> 매개 변수는 <see langword="null" />일 수 없습니다.</exception>
      <exception cref="T:System.ArgumentOutOfRangeException" vsli:raw="The &lt;paramref name=&quot;offset&quot; /&gt; and &lt;paramref name=&quot;count&quot; /&gt; parameters must be greater than or equal to zero.">
        <paramref name="offset" /> 및 <paramref name="count" /> 매개 변수가 0보다 작은 경우</exception>
    </member>
    <member name="P:System.Net.Sockets.SendPacketsElement.Buffer">
      <summary vsli:raw="Gets the buffer to be sent if the &lt;see cref=&quot;T:System.Net.Sockets.SendPacketsElement&quot; /&gt; object was initialized with a &lt;paramref name=&quot;buffer&quot; /&gt; parameter.">
        <paramref name="buffer" /> 매개 변수를 사용하여 <see cref="T:System.Net.Sockets.SendPacketsElement" /> 개체를 초기화하는 경우 보낼 버퍼를 가져옵니다.</summary>
      <returns vsli:raw="The byte buffer to send if the &lt;see cref=&quot;T:System.Net.Sockets.SendPacketsElement&quot; /&gt; object was initialized with a &lt;paramref name=&quot;buffer&quot; /&gt; parameter.">매개 변수를 사용 하 여 개체를 초기화 한 경우 보낼 바이트 버퍼 <see cref="T:System.Net.Sockets.SendPacketsElement" /><paramref name="buffer" /> 입니다.</returns>
    </member>
    <member name="P:System.Net.Sockets.SendPacketsElement.Count">
      <summary vsli:raw="Gets the count of bytes to be sent.">보낼 바이트 수를 가져옵니다.</summary>
      <returns vsli:raw="The count of bytes to send if the &lt;see cref=&quot;T:System.Net.Sockets.SendPacketsElement&quot; /&gt; class was initialized with a &lt;paramref name=&quot;count&quot; /&gt; parameter.">
        <paramref name="count" /> 매개 변수를 사용하여 <see cref="T:System.Net.Sockets.SendPacketsElement" /> 클래스를 초기화하는 경우 보낼 바이트 수입니다.</returns>
    </member>
    <member name="P:System.Net.Sockets.SendPacketsElement.EndOfPacket">
      <summary vsli:raw="Gets a Boolean value that indicates if this element should not be combined with the next element in a single send request from the sockets layer to the transport.">소켓 계층에서 전송 계층으로 전달되는 단일 보내기 요청에서 이 요소를 다음 요소와 결합하지 않는지 여부를 나타내는 부울 값을 가져옵니다.</summary>
      <returns vsli:raw="A Boolean value that indicates if this element should not be combined with the next element in a single send request.">단일 보내기 요청에서 이 요소를 다음 요소와 결합하지 않는지 여부를 나타내는 부울 값입니다.</returns>
    </member>
    <member name="P:System.Net.Sockets.SendPacketsElement.FilePath">
      <summary vsli:raw="Gets the filename of the file to send if the &lt;see cref=&quot;T:System.Net.Sockets.SendPacketsElement&quot; /&gt; object was initialized with a &lt;paramref name=&quot;filepath&quot; /&gt; parameter.">
        <paramref name="filepath" /> 매개 변수를 사용하여 <see cref="T:System.Net.Sockets.SendPacketsElement" /> 개체를 초기화하는 경우 보낼 파일의 이름을 가져옵니다.</summary>
      <returns vsli:raw="The filename of the file to send if the &lt;see cref=&quot;T:System.Net.Sockets.SendPacketsElement&quot; /&gt; object was initialized with a &lt;paramref name=&quot;filepath&quot; /&gt; parameter.">
        <see cref="T:System.Net.Sockets.SendPacketsElement" />매개 변수를 사용 하 여 개체를 초기화 하는 경우 보낼 파일의 파일 이름입니다 <paramref name="filepath" /> .</returns>
    </member>
    <member name="P:System.Net.Sockets.SendPacketsElement.FileStream">
      <summary vsli:raw="Gets the object representation of the file to send if the &lt;see cref=&quot;T:System.Net.Sockets.SendPacketsElement&quot; /&gt; object was initialized with a &lt;see cref=&quot;T:System.IO.FileStream&quot; /&gt; parameter.">
        <see cref="T:System.IO.FileStream" /> 매개 변수를 사용하여 <see cref="T:System.Net.Sockets.SendPacketsElement" /> 개체를 초기화하는 경우 보낼 파일의 개체 표현을 가져옵니다.</summary>
      <returns vsli:raw="An object representation of the file to send if the &lt;see cref=&quot;T:System.Net.Sockets.SendPacketsElement&quot; /&gt; object was initialized with a &lt;see cref=&quot;T:System.IO.FileStream&quot; /&gt; parameter.">매개 변수를 사용 하 여 개체를 초기화 하는 경우 보낼 파일의 개체 표현 <see cref="T:System.Net.Sockets.SendPacketsElement" /><see cref="T:System.IO.FileStream" /> 입니다.</returns>
    </member>
    <member name="P:System.Net.Sockets.SendPacketsElement.Offset">
      <summary vsli:raw="Gets the offset, in bytes, from the beginning of the data buffer or file to the location in the buffer or file to start sending the data.">데이터 버퍼 또는 파일의 시작 부분부터 버퍼 또는 파일에서 데이터를 보내기 시작하는 위치까지의 오프셋(바이트)을 가져옵니다.</summary>
      <returns vsli:raw="The offset, in bytes, from the beginning of the data buffer or file to the location in the buffer or file to start sending the data.">데이터 버퍼 또는 파일의 시작 부분부터 버퍼 또는 파일에서 데이터를 보내기 시작하는 위치까지의 오프셋(바이트)입니다.</returns>
    </member>
    <member name="P:System.Net.Sockets.SendPacketsElement.OffsetLong">
      <summary vsli:raw="Gets the offset, in bytes, from the beginning of the data buffer or file to the location in the buffer or file to start sending the data.">데이터 버퍼 또는 파일의 시작 부분부터 버퍼 또는 파일에서 데이터를 보내기 시작하는 위치까지의 오프셋(바이트)을 가져옵니다.</summary>
      <returns vsli:raw="The offset, in bytes, from the beginning of the data buffer or file to the location in the buffer or file to start sending the data.">데이터 버퍼 또는 파일의 시작 부분부터 버퍼 또는 파일에서 데이터를 보내기 시작하는 위치까지의 오프셋(바이트)입니다.</returns>
    </member>
    <member name="T:System.Net.Sockets.Socket">
      <summary vsli:raw="Implements the Berkeley sockets interface.">Berkeley 소켓 인터페이스를 구현합니다.</summary>
    </member>
    <member name="M:System.Net.Sockets.Socket.#ctor(System.Net.Sockets.AddressFamily,System.Net.Sockets.SocketType,System.Net.Sockets.ProtocolType)">
      <summary vsli:raw="Initializes a new instance of the &lt;see cref=&quot;T:System.Net.Sockets.Socket&quot; /&gt; class using the specified address family, socket type and protocol.">지정된 주소 패밀리, 소켓 종류 및 프로토콜을 사용하여 <see cref="T:System.Net.Sockets.Socket" /> 클래스의 새 인스턴스를 초기화합니다.</summary>
      <param name="addressFamily" vsli:raw="One of the &lt;see cref=&quot;T:System.Net.Sockets.AddressFamily&quot; /&gt; values.">
        <see cref="T:System.Net.Sockets.AddressFamily" /> 값 중 하나입니다.</param>
      <param name="socketType" vsli:raw="One of the &lt;see cref=&quot;T:System.Net.Sockets.SocketType&quot; /&gt; values.">
        <see cref="T:System.Net.Sockets.SocketType" /> 값 중 하나입니다.</param>
      <param name="protocolType" vsli:raw="One of the &lt;see cref=&quot;T:System.Net.Sockets.ProtocolType&quot; /&gt; values.">
        <see cref="T:System.Net.Sockets.ProtocolType" /> 값 중 하나입니다.</param>
      <exception cref="T:System.Net.Sockets.SocketException" vsli:raw="The combination of &lt;paramref name=&quot;addressFamily&quot; /&gt;, &lt;paramref name=&quot;socketType&quot; /&gt;, and &lt;paramref name=&quot;protocolType&quot; /&gt; results in an invalid socket.">
        <paramref name="addressFamily" />, <paramref name="socketType" /> 및 <paramref name="protocolType" />을 조합했을 때 소켓이 잘못된 경우</exception>
    </member>
    <member name="M:System.Net.Sockets.Socket.#ctor(System.Net.Sockets.SafeSocketHandle)">
      <summary vsli:raw="Initializes a new instance of the &lt;see cref=&quot;T:System.Net.Sockets.Socket&quot; /&gt; class for the specified socket handle.">지정된 소켓 핸들에 대한 <see cref="T:System.Net.Sockets.Socket" /> 클래스의 새 인스턴스를 초기화합니다.</summary>
      <param name="handle" vsli:raw="The socket handle for the socket that the &lt;see cref=&quot;T:System.Net.Sockets.Socket&quot; /&gt; object will encapsulate.">
        <see cref="T:System.Net.Sockets.Socket" /> 개체가 캡슐화할 소켓의 소켓 핸들입니다.</param>
      <exception cref="T:System.ArgumentNullException" vsli:raw="&lt;paramref name=&quot;handle&quot; /&gt; is &lt;see langword=&quot;null&quot; /&gt;.">
        <paramref name="handle" />이(가) <see langword="null" />인 경우</exception>
      <exception cref="T:System.ArgumentException" vsli:raw="&lt;paramref name=&quot;handle&quot; /&gt; is invalid.">
        <paramref name="handle" />이 잘못되었습니다.</exception>
      <exception cref="T:System.Net.Sockets.SocketException" vsli:raw="&lt;paramref name=&quot;handle&quot; /&gt; is not a socket or information about the socket could not be accessed.">
        <paramref name="handle" />이 소켓이 아니거나 소켓 정보에 액세스할 수 없습니다.</exception>
    </member>
    <member name="M:System.Net.Sockets.Socket.#ctor(System.Net.Sockets.SocketInformation)">
      <summary vsli:raw="Initializes a new instance of the &lt;see cref=&quot;T:System.Net.Sockets.Socket&quot; /&gt; class using the specified value returned from &lt;see cref=&quot;M:System.Net.Sockets.Socket.DuplicateAndClose(System.Int32)&quot; /&gt;.">
        <see cref="T:System.Net.Sockets.Socket" />에서 반환된 특정 값을 사용하여 <see cref="M:System.Net.Sockets.Socket.DuplicateAndClose(System.Int32)" /> 클래스의 새 인스턴스를 초기화합니다.</summary>
      <param name="socketInformation" vsli:raw="The socket information returned by &lt;see cref=&quot;M:System.Net.Sockets.Socket.DuplicateAndClose(System.Int32)&quot; /&gt;.">
        <see cref="M:System.Net.Sockets.Socket.DuplicateAndClose(System.Int32)" />에서 반환된 소켓 정보입니다.</param>
    </member>
    <member name="M:System.Net.Sockets.Socket.#ctor(System.Net.Sockets.SocketType,System.Net.Sockets.ProtocolType)">
      <summary vsli:raw="Initializes a new instance of the &lt;see cref=&quot;T:System.Net.Sockets.Socket&quot; /&gt; class using the specified socket type and protocol. If the operating system supports IPv6, this constructor creates a dual-mode socket; otherwise, it creates an IPv4 socket.">지정된 소켓 종류 및 프로토콜을 사용하여 <see cref="T:System.Net.Sockets.Socket" /> 클래스의 새 인스턴스를 초기화합니다.</summary>
      <param name="socketType" vsli:raw="One of the &lt;see cref=&quot;T:System.Net.Sockets.SocketType&quot; /&gt; values.">
        <see cref="T:System.Net.Sockets.SocketType" /> 값 중 하나입니다.</param>
      <param name="protocolType" vsli:raw="One of the &lt;see cref=&quot;T:System.Net.Sockets.ProtocolType&quot; /&gt; values.">
        <see cref="T:System.Net.Sockets.ProtocolType" /> 값 중 하나입니다.</param>
      <exception cref="T:System.Net.Sockets.SocketException" vsli:raw="The combination of  &lt;paramref name=&quot;socketType&quot; /&gt; and &lt;paramref name=&quot;protocolType&quot; /&gt; results in an invalid socket.">
        <paramref name="socketType" />과 <paramref name="protocolType" />을 조합했을 때 소켓이 잘못된 경우</exception>
    </member>
    <member name="M:System.Net.Sockets.Socket.Accept">
      <summary vsli:raw="Creates a new &lt;see cref=&quot;T:System.Net.Sockets.Socket&quot; /&gt; for a newly created connection.">새로 만든 연결에 대한 새 <see cref="T:System.Net.Sockets.Socket" />을 만듭니다.</summary>
      <exception cref="T:System.Net.Sockets.SocketException" vsli:raw="An error occurred when attempting to access the socket.">소켓에 액세스하는 동안 오류가 발생했습니다.</exception>
      <exception cref="T:System.ObjectDisposedException" vsli:raw="The &lt;see cref=&quot;T:System.Net.Sockets.Socket&quot; /&gt; has been closed.">
        <see cref="T:System.Net.Sockets.Socket" />이 닫혔습니다.</exception>
      <exception cref="T:System.InvalidOperationException" vsli:raw="The accepting socket is not listening for connections. You must call &lt;see cref=&quot;M:System.Net.Sockets.Socket.Bind(System.Net.EndPoint)&quot; /&gt; and &lt;see cref=&quot;M:System.Net.Sockets.Socket.Listen(System.Int32)&quot; /&gt; before calling &lt;see cref=&quot;M:System.Net.Sockets.Socket.Accept&quot; /&gt;.">받아들이는 소켓이 연결을 수신하지 않는 경우. <see cref="M:System.Net.Sockets.Socket.Bind(System.Net.EndPoint)" />를 호출하기 전에 <see cref="M:System.Net.Sockets.Socket.Listen(System.Int32)" /> 및 <see cref="M:System.Net.Sockets.Socket.Accept" />을 호출해야 합니다.</exception>
      <returns vsli:raw="A &lt;see cref=&quot;T:System.Net.Sockets.Socket&quot; /&gt; for a newly created connection.">새로 만든 연결에 대한 <see cref="T:System.Net.Sockets.Socket" />입니다.</returns>
    </member>
    <member name="M:System.Net.Sockets.Socket.AcceptAsync(System.Net.Sockets.SocketAsyncEventArgs)">
      <summary vsli:raw="Begins an asynchronous operation to accept an incoming connection attempt.">들어오는 연결 시도를 받아들이는 비동기 작업을 시작합니다.</summary>
      <param name="e" vsli:raw="The &lt;see cref=&quot;T:System.Net.Sockets.SocketAsyncEventArgs&quot; /&gt; object to use for this asynchronous socket operation.">이 비동기 소켓 작업에 사용할 <see cref="T:System.Net.Sockets.SocketAsyncEventArgs" /> 개체입니다.</param>
      <exception cref="T:System.ArgumentException" vsli:raw="An argument is not valid. This exception occurs if the buffer provided is not large enough. The buffer must be at least 2 * (sizeof(SOCKADDR_STORAGE + 16) bytes.&#xA;&#xA; This exception also occurs if multiple buffers are specified, the &lt;see cref=&quot;P:System.Net.Sockets.SocketAsyncEventArgs.BufferList&quot; /&gt; property is not null.">인수가 잘못된 경우. 제공된 버퍼의 크기가 너무 작으면 이 예외가 발생합니다. 버퍼의 크기는 최소한 2 * (sizeof(SOCKADDR_STORAGE + 16)바이트 이상이어야 합니다.  
  
버퍼를 여러 개 지정하고 <see cref="P:System.Net.Sockets.SocketAsyncEventArgs.BufferList" /> 속성이 null이 아닌 경우에도 이 예외가 발생합니다.</exception>
      <exception cref="T:System.ArgumentOutOfRangeException" vsli:raw="An argument is out of range. The exception occurs if the &lt;see cref=&quot;P:System.Net.Sockets.SocketAsyncEventArgs.Count&quot; /&gt; is less than 0.">인수가 범위를 벗어난 경우. <see cref="P:System.Net.Sockets.SocketAsyncEventArgs.Count" />가 0보다 작으면 이 예외가 발생합니다.</exception>
      <exception cref="T:System.InvalidOperationException" vsli:raw="An invalid operation was requested. This exception occurs if the accepting &lt;see cref=&quot;T:System.Net.Sockets.Socket&quot; /&gt; is not listening for connections or the accepted socket is bound.&#xA;&#xA; You must call the &lt;see cref=&quot;M:System.Net.Sockets.Socket.Bind(System.Net.EndPoint)&quot; /&gt; and &lt;see cref=&quot;M:System.Net.Sockets.Socket.Listen(System.Int32)&quot; /&gt; method before calling the &lt;see cref=&quot;M:System.Net.Sockets.Socket.AcceptAsync(System.Net.Sockets.SocketAsyncEventArgs)&quot; /&gt; method.&#xA;&#xA; This exception also occurs if the socket is already connected or a socket operation was already in progress using the specified &lt;paramref name=&quot;e&quot; /&gt; parameter.">잘못된 작업이 요청된 경우. 받아들이는 <see cref="T:System.Net.Sockets.Socket" />이 연결을 수신 대기하지 않거나 받아들인 소켓이 바인딩되어 있으면 이 예외가 발생합니다.  
  
<see cref="M:System.Net.Sockets.Socket.Bind(System.Net.EndPoint)" /> 메서드를 호출하기 전에 <see cref="M:System.Net.Sockets.Socket.Listen(System.Int32)" /> 및 <see cref="M:System.Net.Sockets.Socket.AcceptAsync(System.Net.Sockets.SocketAsyncEventArgs)" /> 메서드를 호출해야 합니다.  
  
소켓이 이미 연결되어 있거나 지정된 <paramref name="e" /> 매개 변수를 사용하여 소켓 작업이 이미 진행 중인 경우에도 이 예외가 발생합니다.</exception>
      <exception cref="T:System.Net.Sockets.SocketException" vsli:raw="An error occurred when attempting to access the socket.">소켓에 액세스하는 동안 오류가 발생했습니다.</exception>
      <exception cref="T:System.NotSupportedException">이 메서드에 Windows XP 이상이 필요한 경우.</exception>
      <exception cref="T:System.ObjectDisposedException" vsli:raw="The &lt;see cref=&quot;T:System.Net.Sockets.Socket&quot; /&gt; has been closed.">
        <see cref="T:System.Net.Sockets.Socket" />이 닫혔습니다.</exception>
      <returns vsli:raw="&lt;see langword=&quot;true&quot; /&gt; if the I/O operation is pending. The &lt;see cref=&quot;E:System.Net.Sockets.SocketAsyncEventArgs.Completed&quot; /&gt; event on the &lt;paramref name=&quot;e&quot; /&gt; parameter will be raised upon completion of the operation.&#xA;&#xA; &lt;see langword=&quot;false&quot; /&gt; if the I/O operation completed synchronously. The &lt;see cref=&quot;E:System.Net.Sockets.SocketAsyncEventArgs.Completed&quot; /&gt; event on the &lt;paramref name=&quot;e&quot; /&gt; parameter will not be raised and the &lt;paramref name=&quot;e&quot; /&gt; object passed as a parameter may be examined immediately after the method call returns to retrieve the result of the operation.">I/O 작업이 보류 중인 경우 <see langword="true" />입니다. 작업이 완료되면 <paramref name="e" /> 매개 변수에 대한 <see cref="E:System.Net.Sockets.SocketAsyncEventArgs.Completed" /> 이벤트가 발생합니다.  
  
 I/O 작업이 동기적으로 완료된 경우 <see langword="false" />입니다. 이 경우에는 <paramref name="e" /> 매개 변수에서 <see cref="E:System.Net.Sockets.SocketAsyncEventArgs.Completed" /> 이벤트가 발생하지 않으며, 메서드 호출이 반환된 직후 매개 변수로 전달된 <paramref name="e" /> 개체를 검사하여 작업 결과를 검색할 수 있습니다.</returns>
    </member>
    <member name="M:System.Net.Sockets.Socket.BeginAccept(System.AsyncCallback,System.Object)">
      <summary vsli:raw="Begins an asynchronous operation to accept an incoming connection attempt.">들어오는 연결 시도를 받아들이는 비동기 작업을 시작합니다.</summary>
      <param name="callback" vsli:raw="The &lt;see cref=&quot;T:System.AsyncCallback&quot; /&gt; delegate.">
        <see cref="T:System.AsyncCallback" /> 대리자입니다.</param>
      <param name="state" vsli:raw="An object that contains state information for this request.">이 요청에 대한 상태 정보를 포함하는 개체입니다.</param>
      <exception cref="T:System.ObjectDisposedException" vsli:raw="The &lt;see cref=&quot;T:System.Net.Sockets.Socket&quot; /&gt; object has been closed.">
        <see cref="T:System.Net.Sockets.Socket" /> 개체가 닫힌 경우</exception>
      <exception cref="T:System.NotSupportedException" vsli:raw="Windows NT is required for this method.">이 메서드에는 Windows NT가 필요합니다.</exception>
      <exception cref="T:System.InvalidOperationException" vsli:raw="The accepting socket is not listening for connections. You must call &lt;see cref=&quot;M:System.Net.Sockets.Socket.Bind(System.Net.EndPoint)&quot; /&gt; and &lt;see cref=&quot;M:System.Net.Sockets.Socket.Listen(System.Int32)&quot; /&gt; before calling &lt;see cref=&quot;M:System.Net.Sockets.Socket.BeginAccept(System.AsyncCallback,System.Object)&quot; /&gt;.&#xA;&#xA; -or-&#xA;&#xA; The accepted socket is bound.">받아들이는 소켓이 연결을 수신하지 않는 경우. <see cref="M:System.Net.Sockets.Socket.Bind(System.Net.EndPoint)" />를 호출하기 전에 <see cref="M:System.Net.Sockets.Socket.Listen(System.Int32)" /> 및 <see cref="M:System.Net.Sockets.Socket.BeginAccept(System.AsyncCallback,System.Object)" />을 호출해야 합니다.  
  
또는 
받아들여진 소켓이 바인딩된 경우</exception>
      <exception cref="T:System.ArgumentOutOfRangeException" vsli:raw="&lt;paramref name=&quot;receiveSize&quot; /&gt; is less than 0.">
        <paramref name="receiveSize" />가 0보다 작은 경우.</exception>
      <exception cref="T:System.Net.Sockets.SocketException" vsli:raw=".NET Framework and .NET 5 and earlier only: An error occurred when attempting to access the socket.">소켓에 액세스하는 동안 오류가 발생했습니다.</exception>
      <returns vsli:raw="An &lt;see cref=&quot;T:System.IAsyncResult&quot; /&gt; that references the asynchronous &lt;see cref=&quot;T:System.Net.Sockets.Socket&quot; /&gt; creation.">비동기 <see cref="T:System.IAsyncResult" /> 생성을 참조하는 <see cref="T:System.Net.Sockets.Socket" />입니다.</returns>
    </member>
    <member name="M:System.Net.Sockets.Socket.BeginAccept(System.Int32,System.AsyncCallback,System.Object)">
      <summary vsli:raw="Begins an asynchronous operation to accept an incoming connection attempt and receives the first block of data sent by the client application.">들어오는 연결 시도를 받아들이는 비동기 작업을 시작하고 클라이언트 애플리케이션에서 보낸 데이터의 첫 번째 블록을 받습니다.</summary>
      <param name="receiveSize" vsli:raw="The number of bytes to accept from the sender.">송신자로부터 받아들일 바이트 수입니다.</param>
      <param name="callback" vsli:raw="The &lt;see cref=&quot;T:System.AsyncCallback&quot; /&gt; delegate.">
        <see cref="T:System.AsyncCallback" /> 대리자입니다.</param>
      <param name="state" vsli:raw="An object that contains state information for this request.">이 요청에 대한 상태 정보를 포함하는 개체입니다.</param>
      <exception cref="T:System.ObjectDisposedException" vsli:raw="The &lt;see cref=&quot;T:System.Net.Sockets.Socket&quot; /&gt; object has been closed.">
        <see cref="T:System.Net.Sockets.Socket" /> 개체가 닫힌 경우</exception>
      <exception cref="T:System.NotSupportedException" vsli:raw="Windows NT is required for this method.">이 메서드에는 Windows NT가 필요합니다.</exception>
      <exception cref="T:System.InvalidOperationException" vsli:raw="The accepting socket is not listening for connections. You must call &lt;see cref=&quot;M:System.Net.Sockets.Socket.Bind(System.Net.EndPoint)&quot; /&gt; and &lt;see cref=&quot;M:System.Net.Sockets.Socket.Listen(System.Int32)&quot; /&gt; before calling &lt;see cref=&quot;M:System.Net.Sockets.Socket.BeginAccept(System.AsyncCallback,System.Object)&quot; /&gt;.&#xA;&#xA; -or-&#xA;&#xA; The accepted socket is bound.">받아들이는 소켓이 연결을 수신하지 않는 경우. <see cref="M:System.Net.Sockets.Socket.Bind(System.Net.EndPoint)" />를 호출하기 전에 <see cref="M:System.Net.Sockets.Socket.Listen(System.Int32)" /> 및 <see cref="M:System.Net.Sockets.Socket.BeginAccept(System.AsyncCallback,System.Object)" />을 호출해야 합니다.  
  
또는 
받아들여진 소켓이 바인딩된 경우</exception>
      <exception cref="T:System.ArgumentOutOfRangeException" vsli:raw="&lt;paramref name=&quot;receiveSize&quot; /&gt; is less than 0.">
        <paramref name="receiveSize" />가 0보다 작은 경우.</exception>
      <exception cref="T:System.Net.Sockets.SocketException" vsli:raw=".NET Framework and .NET 5 and earlier only: An error occurred when attempting to access the socket.">소켓에 액세스하는 동안 오류가 발생했습니다.</exception>
      <returns vsli:raw="An &lt;see cref=&quot;T:System.IAsyncResult&quot; /&gt; that references the asynchronous &lt;see cref=&quot;T:System.Net.Sockets.Socket&quot; /&gt; creation.">비동기 <see cref="T:System.IAsyncResult" /> 생성을 참조하는 <see cref="T:System.Net.Sockets.Socket" />입니다.</returns>
    </member>
    <member name="M:System.Net.Sockets.Socket.BeginAccept(System.Net.Sockets.Socket,System.Int32,System.AsyncCallback,System.Object)">
      <summary vsli:raw="Begins an asynchronous operation to accept an incoming connection attempt from a specified socket and receives the first block of data sent by the client application.">지정된 소켓에서 들어오는 연결 시도를 받아들이는 비동기 작업을 시작하고 클라이언트 애플리케이션에서 보낸 데이터의 첫 번째 블록을 받습니다.</summary>
      <param name="acceptSocket" vsli:raw="The accepted &lt;see cref=&quot;T:System.Net.Sockets.Socket&quot; /&gt; object. This value may be &lt;see langword=&quot;null&quot; /&gt;.">허용되는 <see cref="T:System.Net.Sockets.Socket" /> 개체입니다. 이 값은 <see langword="null" />일 수 있습니다.</param>
      <param name="receiveSize" vsli:raw="The maximum number of bytes to receive.">받을 최대 바이트 수입니다.</param>
      <param name="callback" vsli:raw="The &lt;see cref=&quot;T:System.AsyncCallback&quot; /&gt; delegate.">
        <see cref="T:System.AsyncCallback" /> 대리자입니다.</param>
      <param name="state" vsli:raw="An object that contains state information for this request.">이 요청에 대한 상태 정보를 포함하는 개체입니다.</param>
      <exception cref="T:System.ObjectDisposedException" vsli:raw="The &lt;see cref=&quot;T:System.Net.Sockets.Socket&quot; /&gt; object has been closed.">
        <see cref="T:System.Net.Sockets.Socket" /> 개체가 닫힌 경우</exception>
      <exception cref="T:System.NotSupportedException" vsli:raw="Windows NT is required for this method.">이 메서드에는 Windows NT가 필요합니다.</exception>
      <exception cref="T:System.InvalidOperationException" vsli:raw="The accepting socket is not listening for connections. You must call &lt;see cref=&quot;M:System.Net.Sockets.Socket.Bind(System.Net.EndPoint)&quot; /&gt; and &lt;see cref=&quot;M:System.Net.Sockets.Socket.Listen(System.Int32)&quot; /&gt; before calling &lt;see cref=&quot;M:System.Net.Sockets.Socket.BeginAccept(System.AsyncCallback,System.Object)&quot; /&gt;.&#xA;&#xA; -or-&#xA;&#xA; The accepted socket is bound.">받아들이는 소켓이 연결을 수신하지 않는 경우. <see cref="M:System.Net.Sockets.Socket.Bind(System.Net.EndPoint)" />를 호출하기 전에 <see cref="M:System.Net.Sockets.Socket.Listen(System.Int32)" /> 및 <see cref="M:System.Net.Sockets.Socket.BeginAccept(System.AsyncCallback,System.Object)" />을 호출해야 합니다.  
  
또는 
받아들여진 소켓이 바인딩된 경우</exception>
      <exception cref="T:System.ArgumentOutOfRangeException" vsli:raw="&lt;paramref name=&quot;receiveSize&quot; /&gt; is less than 0.">
        <paramref name="receiveSize" />가 0보다 작은 경우.</exception>
      <exception cref="T:System.Net.Sockets.SocketException" vsli:raw=".NET Framework and .NET 5 and earlier only: An error occurred when attempting to access the socket.">소켓에 액세스하는 동안 오류가 발생했습니다.</exception>
      <returns vsli:raw="An &lt;see cref=&quot;T:System.IAsyncResult&quot; /&gt; object that references the asynchronous &lt;see cref=&quot;T:System.Net.Sockets.Socket&quot; /&gt; object creation.">비동기 <see cref="T:System.IAsyncResult" /> 개체 생성을 참조하는 <see cref="T:System.Net.Sockets.Socket" /> 개체입니다.</returns>
    </member>
    <member name="M:System.Net.Sockets.Socket.BeginConnect(System.Net.EndPoint,System.AsyncCallback,System.Object)">
      <summary vsli:raw="Begins an asynchronous request for a remote host connection.">원격 호스트 연결에 대한 비동기 요청을 시작합니다.</summary>
      <param name="remoteEP" vsli:raw="An &lt;see cref=&quot;T:System.Net.EndPoint&quot; /&gt; that represents the remote host.">원격 호스트를 나타내는 <see cref="T:System.Net.EndPoint" />입니다.</param>
      <param name="callback" vsli:raw="The &lt;see cref=&quot;T:System.AsyncCallback&quot; /&gt; delegate.">
        <see cref="T:System.AsyncCallback" /> 대리자입니다.</param>
      <param name="state" vsli:raw="An object that contains state information for this request.">이 요청에 대한 상태 정보를 포함하는 개체입니다.</param>
      <exception cref="T:System.ArgumentNullException" vsli:raw="&lt;paramref name=&quot;remoteEP&quot; /&gt; is &lt;see langword=&quot;null&quot; /&gt;.">
        <paramref name="remoteEP" />이(가) <see langword="null" />인 경우</exception>
      <exception cref="T:System.Net.Sockets.SocketException" vsli:raw=".NET Framework and .NET 5 and earlier only: An error occurred when attempting to access the socket.">소켓에 액세스하는 동안 오류가 발생했습니다.</exception>
      <exception cref="T:System.ObjectDisposedException" vsli:raw="The &lt;see cref=&quot;T:System.Net.Sockets.Socket&quot; /&gt; has been closed.">
        <see cref="T:System.Net.Sockets.Socket" />이 닫혔습니다.</exception>
      <exception cref="T:System.Security.SecurityException" vsli:raw="A caller higher in the call stack does not have permission for the requested operation.">호출 스택의 상위 호출자에게 요청된 작업을 수행할 권한이 없는 경우</exception>
      <exception cref="T:System.InvalidOperationException" vsli:raw="The &lt;see cref=&quot;T:System.Net.Sockets.Socket&quot; /&gt; has been placed in a listening state by calling &lt;see cref=&quot;M:System.Net.Sockets.Socket.Listen(System.Int32)&quot; /&gt;, or an asynchronous operation is already in progress.">
        <see cref="T:System.Net.Sockets.Socket" />이 <see cref="M:System.Net.Sockets.Socket.Listen(System.Int32)" />을 호출하여 수신 상태에 배치되었거나 비동기 작업이 이미 진행 중입니다.</exception>
      <returns vsli:raw="An &lt;see cref=&quot;T:System.IAsyncResult&quot; /&gt; that references the asynchronous connection.">비동기 연결을 참조하는 <see cref="T:System.IAsyncResult" />입니다.</returns>
    </member>
    <member name="M:System.Net.Sockets.Socket.BeginConnect(System.Net.IPAddress,System.Int32,System.AsyncCallback,System.Object)">
      <summary vsli:raw="Begins an asynchronous request for a remote host connection. The host is specified by an &lt;see cref=&quot;T:System.Net.IPAddress&quot; /&gt; and a port number.">원격 호스트 연결에 대한 비동기 요청을 시작합니다. 호스트는 <see cref="T:System.Net.IPAddress" />와 포트 번호로 지정됩니다.</summary>
      <param name="address" vsli:raw="The &lt;see cref=&quot;T:System.Net.IPAddress&quot; /&gt; of the remote host.">원격 호스트의 <see cref="T:System.Net.IPAddress" />입니다.</param>
      <param name="port" vsli:raw="The port number of the remote host.">원격 호스트의 포트 번호입니다.</param>
      <param name="requestCallback" vsli:raw="An &lt;see cref=&quot;T:System.AsyncCallback&quot; /&gt; delegate that references the method to invoke when the connect operation is complete.">연결 작업이 완료되었을 때 호출할 메서드를 참조하는 <see cref="T:System.AsyncCallback" /> 대리자입니다.</param>
      <param name="state" vsli:raw="A user-defined object that contains information about the connect operation. This object is passed to the &lt;paramref name=&quot;requestCallback&quot; /&gt; delegate when the operation is complete.">연결 작업에 대한 정보가 들어 있는 사용자 정의 개체입니다. 이 개체는 작업이 완료되면 <paramref name="requestCallback" /> 대리자에게 전달됩니다.</param>
      <exception cref="T:System.ArgumentNullException" vsli:raw="&lt;paramref name=&quot;address&quot; /&gt; is &lt;see langword=&quot;null&quot; /&gt;.">
        <paramref name="address" />이(가) <see langword="null" />인 경우</exception>
      <exception cref="T:System.Net.Sockets.SocketException" vsli:raw=".NET Framework and .NET 5 and earlier only: An error occurred when attempting to access the socket.">소켓에 액세스하는 동안 오류가 발생했습니다.</exception>
      <exception cref="T:System.ObjectDisposedException" vsli:raw="The &lt;see cref=&quot;T:System.Net.Sockets.Socket&quot; /&gt; has been closed.">
        <see cref="T:System.Net.Sockets.Socket" />이 닫혔습니다.</exception>
      <exception cref="T:System.NotSupportedException" vsli:raw="The &lt;see cref=&quot;T:System.Net.Sockets.Socket&quot; /&gt; is not in the socket family.">
        <see cref="T:System.Net.Sockets.Socket" />이 소켓 패밀리에 없는 경우</exception>
      <exception cref="T:System.ArgumentOutOfRangeException" vsli:raw="The port number is not valid.">포트 번호가 잘못된 경우</exception>
      <exception cref="T:System.ArgumentException" vsli:raw="The length of &lt;paramref name=&quot;address&quot; /&gt; is zero.">
        <paramref name="address" />의 길이가 0입니다.</exception>
      <exception cref="T:System.InvalidOperationException" vsli:raw="The &lt;see cref=&quot;T:System.Net.Sockets.Socket&quot; /&gt; has been placed in a listening state by calling &lt;see cref=&quot;M:System.Net.Sockets.Socket.Listen(System.Int32)&quot; /&gt;, or an asynchronous operation is already in progress.">
        <see cref="T:System.Net.Sockets.Socket" />이 <see cref="M:System.Net.Sockets.Socket.Listen(System.Int32)" />을 호출하여 수신 상태에 배치되었거나 비동기 작업이 이미 진행 중입니다.</exception>
      <returns vsli:raw="An &lt;see cref=&quot;T:System.IAsyncResult&quot; /&gt; that references the asynchronous connection.">비동기 연결을 참조하는 <see cref="T:System.IAsyncResult" />입니다.</returns>
    </member>
    <member name="M:System.Net.Sockets.Socket.BeginConnect(System.Net.IPAddress[],System.Int32,System.AsyncCallback,System.Object)">
      <summary vsli:raw="Begins an asynchronous request for a remote host connection. The host is specified by an &lt;see cref=&quot;T:System.Net.IPAddress&quot; /&gt; array and a port number.">원격 호스트 연결에 대한 비동기 요청을 시작합니다. 호스트는 <see cref="T:System.Net.IPAddress" /> 배열과 포트 번호로 지정됩니다.</summary>
      <param name="addresses" vsli:raw="At least one &lt;see cref=&quot;T:System.Net.IPAddress&quot; /&gt;, designating the remote host.">원격 호스트를 지정하는 하나 이상의 <see cref="T:System.Net.IPAddress" />입니다.</param>
      <param name="port" vsli:raw="The port number of the remote host.">원격 호스트의 포트 번호입니다.</param>
      <param name="requestCallback" vsli:raw="An &lt;see cref=&quot;T:System.AsyncCallback&quot; /&gt; delegate that references the method to invoke when the connect operation is complete.">연결 작업이 완료되었을 때 호출할 메서드를 참조하는 <see cref="T:System.AsyncCallback" /> 대리자입니다.</param>
      <param name="state" vsli:raw="A user-defined object that contains information about the connect operation. This object is passed to the &lt;paramref name=&quot;requestCallback&quot; /&gt; delegate when the operation is complete.">연결 작업에 대한 정보가 들어 있는 사용자 정의 개체입니다. 이 개체는 작업이 완료되면 <paramref name="requestCallback" /> 대리자에게 전달됩니다.</param>
      <exception cref="T:System.ArgumentNullException" vsli:raw="&lt;paramref name=&quot;addresses&quot; /&gt; is &lt;see langword=&quot;null&quot; /&gt;.">
        <paramref name="addresses" />이(가) <see langword="null" />인 경우</exception>
      <exception cref="T:System.Net.Sockets.SocketException" vsli:raw=".NET Framework and .NET 5 and earlier only: An error occurred when attempting to access the socket.">소켓에 액세스하는 동안 오류가 발생했습니다.</exception>
      <exception cref="T:System.ObjectDisposedException" vsli:raw="The &lt;see cref=&quot;T:System.Net.Sockets.Socket&quot; /&gt; has been closed.">
        <see cref="T:System.Net.Sockets.Socket" />이 닫혔습니다.</exception>
      <exception cref="T:System.NotSupportedException" vsli:raw="This method is valid for sockets that use &lt;see cref=&quot;F:System.Net.Sockets.AddressFamily.InterNetwork&quot; /&gt; or &lt;see cref=&quot;F:System.Net.Sockets.AddressFamily.InterNetworkV6&quot; /&gt;.">이 메서드는 <see cref="F:System.Net.Sockets.AddressFamily.InterNetwork" /> 또는 <see cref="F:System.Net.Sockets.AddressFamily.InterNetworkV6" />를 사용하는 소켓에 유효합니다.</exception>
      <exception cref="T:System.ArgumentOutOfRangeException" vsli:raw="The port number is not valid.">포트 번호가 잘못된 경우</exception>
      <exception cref="T:System.ArgumentException" vsli:raw="The length of &lt;paramref name=&quot;address&quot; /&gt; is zero.">
        <paramref name="address" />의 길이가 0입니다.</exception>
      <exception cref="T:System.InvalidOperationException" vsli:raw="The &lt;see cref=&quot;T:System.Net.Sockets.Socket&quot; /&gt; has been placed in a listening state by calling &lt;see cref=&quot;M:System.Net.Sockets.Socket.Listen(System.Int32)&quot; /&gt;, or an asynchronous operation is already in progress.">
        <see cref="T:System.Net.Sockets.Socket" />이 <see cref="M:System.Net.Sockets.Socket.Listen(System.Int32)" />을 호출하여 수신 상태에 배치되었거나 비동기 작업이 이미 진행 중입니다.</exception>
      <returns vsli:raw="An &lt;see cref=&quot;T:System.IAsyncResult&quot; /&gt; that references the asynchronous connections.">비동기 연결을 참조하는 <see cref="T:System.IAsyncResult" />입니다.</returns>
    </member>
    <member name="M:System.Net.Sockets.Socket.BeginConnect(System.String,System.Int32,System.AsyncCallback,System.Object)">
      <summary vsli:raw="Begins an asynchronous request for a remote host connection. The host is specified by a host name and a port number.">원격 호스트 연결에 대한 비동기 요청을 시작합니다. 호스트는 호스트 이름과 포트 번호로 지정됩니다.</summary>
      <param name="host" vsli:raw="The name of the remote host.">원격 호스트의 이름입니다.</param>
      <param name="port" vsli:raw="The port number of the remote host.">원격 호스트의 포트 번호입니다.</param>
      <param name="requestCallback" vsli:raw="An &lt;see cref=&quot;T:System.AsyncCallback&quot; /&gt; delegate that references the method to invoke when the connect operation is complete.">연결 작업이 완료되었을 때 호출할 메서드를 참조하는 <see cref="T:System.AsyncCallback" /> 대리자입니다.</param>
      <param name="state" vsli:raw="A user-defined object that contains information about the connect operation. This object is passed to the &lt;paramref name=&quot;requestCallback&quot; /&gt; delegate when the operation is complete.">연결 작업에 대한 정보가 들어 있는 사용자 정의 개체입니다. 이 개체는 작업이 완료되면 <paramref name="requestCallback" /> 대리자에게 전달됩니다.</param>
      <exception cref="T:System.ArgumentNullException" vsli:raw="&lt;paramref name=&quot;host&quot; /&gt; is &lt;see langword=&quot;null&quot; /&gt;.">
        <paramref name="host" />이(가) <see langword="null" />인 경우</exception>
      <exception cref="T:System.ObjectDisposedException" vsli:raw="The &lt;see cref=&quot;T:System.Net.Sockets.Socket&quot; /&gt; has been closed.">
        <see cref="T:System.Net.Sockets.Socket" />이 닫혔습니다.</exception>
      <exception cref="T:System.NotSupportedException" vsli:raw="This method is valid for sockets in the &lt;see cref=&quot;F:System.Net.Sockets.AddressFamily.InterNetwork&quot; /&gt; or &lt;see cref=&quot;F:System.Net.Sockets.AddressFamily.InterNetworkV6&quot; /&gt; families.">이 메서드는 <see cref="F:System.Net.Sockets.AddressFamily.InterNetwork" /> 또는 <see cref="F:System.Net.Sockets.AddressFamily.InterNetworkV6" /> 제품군의 소켓에 유효합니다.</exception>
      <exception cref="T:System.ArgumentOutOfRangeException" vsli:raw="The port number is not valid.">포트 번호가 잘못된 경우</exception>
      <exception cref="T:System.InvalidOperationException" vsli:raw="The &lt;see cref=&quot;T:System.Net.Sockets.Socket&quot; /&gt; has been placed in a listening state by calling &lt;see cref=&quot;M:System.Net.Sockets.Socket.Listen(System.Int32)&quot; /&gt;, or an asynchronous operation is already in progress.">
        <see cref="T:System.Net.Sockets.Socket" />이 <see cref="M:System.Net.Sockets.Socket.Listen(System.Int32)" />을 호출하여 수신 상태에 배치되었거나 비동기 작업이 이미 진행 중입니다.</exception>
      <returns vsli:raw="An &lt;see cref=&quot;T:System.IAsyncResult&quot; /&gt; that references the asynchronous connection.">비동기 연결을 참조하는 <see cref="T:System.IAsyncResult" />입니다.</returns>
    </member>
    <member name="M:System.Net.Sockets.Socket.BeginDisconnect(System.Boolean,System.AsyncCallback,System.Object)">
      <summary vsli:raw="Begins an asynchronous request to disconnect from a remote endpoint.">원격 엔드포인트와의 연결을 끊는 비동기 요청을 시작합니다.</summary>
      <param name="reuseSocket" vsli:raw="&lt;see langword=&quot;true&quot; /&gt; if this socket can be reused after the connection is closed; otherwise, &lt;see langword=&quot;false&quot; /&gt;.">연결을 닫은 다음 이 소켓을 다시 사용할 수 있으면 <see langword="true" />이고, 그렇지 않으면 <see langword="false" />입니다.</param>
      <param name="callback" vsli:raw="The &lt;see cref=&quot;T:System.AsyncCallback&quot; /&gt; delegate.">
        <see cref="T:System.AsyncCallback" /> 대리자입니다.</param>
      <param name="state" vsli:raw="An object that contains state information for this request.">이 요청에 대한 상태 정보를 포함하는 개체입니다.</param>
      <exception cref="T:System.ObjectDisposedException" vsli:raw="The &lt;see cref=&quot;T:System.Net.Sockets.Socket&quot; /&gt; object has been closed.">
        <see cref="T:System.Net.Sockets.Socket" /> 개체가 닫힌 경우</exception>
      <exception cref="T:System.Net.Sockets.SocketException" vsli:raw=".NET Framework and .NET 5 and earlier only: An error occurred when attempting to access the socket.">소켓에 액세스하는 동안 오류가 발생했습니다.</exception>
      <returns vsli:raw="An &lt;see cref=&quot;T:System.IAsyncResult&quot; /&gt; object that references the asynchronous operation.">비동기 작업을 참조하는 <see cref="T:System.IAsyncResult" /> 개체입니다.</returns>
    </member>
    <member name="M:System.Net.Sockets.Socket.BeginReceive(System.Byte[],System.Int32,System.Int32,System.Net.Sockets.SocketFlags,System.AsyncCallback,System.Object)">
      <summary vsli:raw="Begins to asynchronously receive data from a connected &lt;see cref=&quot;T:System.Net.Sockets.Socket&quot; /&gt;.">연결된 <see cref="T:System.Net.Sockets.Socket" />에서 데이터를 비동기적으로 받기 시작합니다.</summary>
      <param name="buffer" vsli:raw="An array of type &lt;see cref=&quot;T:System.Byte&quot; /&gt; that is the storage location for the received data.">수신된 데이터에 대한 스토리지 위치인 <see cref="T:System.Byte" /> 형식의 배열입니다.</param>
      <param name="offset" vsli:raw="The zero-based position in the &lt;paramref name=&quot;buffer&quot; /&gt; parameter at which to store the received data.">받은 데이터를 저장하기 위한 <paramref name="buffer" /> 매개 변수의 위치(0부터 시작)입니다.</param>
      <param name="size" vsli:raw="The number of bytes to receive.">수신 바이트 수입니다.</param>
      <param name="socketFlags" vsli:raw="A bitwise combination of the &lt;see cref=&quot;T:System.Net.Sockets.SocketFlags&quot; /&gt; values.">
        <see cref="T:System.Net.Sockets.SocketFlags" /> 값의 비트 조합입니다.</param>
      <param name="callback" vsli:raw="An &lt;see cref=&quot;T:System.AsyncCallback&quot; /&gt; delegate that references the method to invoke when the operation is complete.">작업이 완료되었을 때 호출할 메서드를 참조하는 <see cref="T:System.AsyncCallback" /> 대리자입니다.</param>
      <param name="state" vsli:raw="A user-defined object that contains information about the receive operation. This object is passed to the &lt;see cref=&quot;M:System.Net.Sockets.Socket.EndReceive(System.IAsyncResult)&quot; /&gt; delegate when the operation is complete.">수신 작업에 대한 정보가 들어 있는 사용자 정의 개체입니다. 이 개체는 작업이 완료되면 <see cref="M:System.Net.Sockets.Socket.EndReceive(System.IAsyncResult)" /> 대리자에게 전달됩니다.</param>
      <exception cref="T:System.ArgumentNullException" vsli:raw="&lt;paramref name=&quot;buffer&quot; /&gt; is &lt;see langword=&quot;null&quot; /&gt;.">
        <paramref name="buffer" />이(가) <see langword="null" />인 경우</exception>
      <exception cref="T:System.Net.Sockets.SocketException" vsli:raw=".NET Framework and .NET 5 and earlier only: An error occurred when attempting to access the socket.">소켓에 액세스하는 동안 오류가 발생했습니다.</exception>
      <exception cref="T:System.ObjectDisposedException" vsli:raw="&lt;see cref=&quot;T:System.Net.Sockets.Socket&quot; /&gt; has been closed.">
        <see cref="T:System.Net.Sockets.Socket" />이 닫힌 경우</exception>
      <exception cref="T:System.ArgumentOutOfRangeException" vsli:raw="&lt;paramref name=&quot;offset&quot; /&gt; is less than 0.&#xA;&#xA; -or-&#xA;&#xA; &lt;paramref name=&quot;offset&quot; /&gt; is greater than the length of &lt;paramref name=&quot;buffer&quot; /&gt;.&#xA;&#xA; -or-&#xA;&#xA; &lt;paramref name=&quot;size&quot; /&gt; is less than 0.&#xA;&#xA; -or-&#xA;&#xA; &lt;paramref name=&quot;size&quot; /&gt; is greater than the length of &lt;paramref name=&quot;buffer&quot; /&gt; minus the value of the &lt;paramref name=&quot;offset&quot; /&gt; parameter.">
        <paramref name="offset" />가 0보다 작은 경우.  
  
또는 
 <paramref name="offset" />이 <paramref name="buffer" />의 길이보다 큽니다.  
  
또는 
 <paramref name="size" />가 0보다 작은 경우.  
  
또는 
 <paramref name="size" />가 <paramref name="buffer" />의 길이에서 <paramref name="offset" /> 매개 변수 값을 뺀 크기보다 큰 경우</exception>
      <returns vsli:raw="An &lt;see cref=&quot;T:System.IAsyncResult&quot; /&gt; that references the asynchronous read.">비동기 읽기를 참조하는 <see cref="T:System.IAsyncResult" />입니다.</returns>
    </member>
    <member name="M:System.Net.Sockets.Socket.BeginReceive(System.Byte[],System.Int32,System.Int32,System.Net.Sockets.SocketFlags,System.Net.Sockets.SocketError@,System.AsyncCallback,System.Object)">
      <summary vsli:raw="Begins to asynchronously receive data from a connected &lt;see cref=&quot;T:System.Net.Sockets.Socket&quot; /&gt;.">연결된 <see cref="T:System.Net.Sockets.Socket" />에서 데이터를 비동기적으로 받기 시작합니다.</summary>
      <param name="buffer" vsli:raw="An array of type &lt;see cref=&quot;T:System.Byte&quot; /&gt; that is the storage location for the received data.">받는 데이터에 대한 스토리지 위치인 <see cref="T:System.Byte" /> 형식의 배열입니다.</param>
      <param name="offset" vsli:raw="The location in &lt;paramref name=&quot;buffer&quot; /&gt; to store the received data.">받을 데이터를 저장할 <paramref name="buffer" /> 내의 위치입니다.</param>
      <param name="size" vsli:raw="The number of bytes to receive.">수신 바이트 수입니다.</param>
      <param name="socketFlags" vsli:raw="A bitwise combination of the &lt;see cref=&quot;T:System.Net.Sockets.SocketFlags&quot; /&gt; values.">
        <see cref="T:System.Net.Sockets.SocketFlags" /> 값의 비트 조합입니다.</param>
      <param name="errorCode" vsli:raw="A &lt;see cref=&quot;T:System.Net.Sockets.SocketError&quot; /&gt; object that stores the socket error.">소켓 오류를 저장하는 <see cref="T:System.Net.Sockets.SocketError" /> 개체입니다.</param>
      <param name="callback" vsli:raw="An &lt;see cref=&quot;T:System.AsyncCallback&quot; /&gt; delegate that references the method to invoke when the operation is complete.">작업이 완료되었을 때 호출할 메서드를 참조하는 <see cref="T:System.AsyncCallback" /> 대리자입니다.</param>
      <param name="state" vsli:raw="A user-defined object that contains information about the receive operation. This object is passed to the &lt;see cref=&quot;M:System.Net.Sockets.Socket.EndReceive(System.IAsyncResult)&quot; /&gt; delegate when the operation is complete.">수신 작업에 대한 정보가 들어 있는 사용자 정의 개체입니다. 이 개체는 작업이 완료되면 <see cref="M:System.Net.Sockets.Socket.EndReceive(System.IAsyncResult)" /> 대리자에게 전달됩니다.</param>
      <exception cref="T:System.ArgumentNullException" vsli:raw="&lt;paramref name=&quot;buffer&quot; /&gt; is &lt;see langword=&quot;null&quot; /&gt;.">
        <paramref name="buffer" />이(가) <see langword="null" />인 경우</exception>
      <exception cref="T:System.Net.Sockets.SocketException" vsli:raw=".NET Framework and .NET 5 and earlier only: An error occurred when attempting to access the socket.">소켓에 액세스하는 동안 오류가 발생했습니다.</exception>
      <exception cref="T:System.ObjectDisposedException" vsli:raw="&lt;see cref=&quot;T:System.Net.Sockets.Socket&quot; /&gt; has been closed.">
        <see cref="T:System.Net.Sockets.Socket" />이 닫힌 경우</exception>
      <exception cref="T:System.ArgumentOutOfRangeException" vsli:raw="&lt;paramref name=&quot;offset&quot; /&gt; is less than 0.&#xA;&#xA; -or-&#xA;&#xA; &lt;paramref name=&quot;offset&quot; /&gt; is greater than the length of &lt;paramref name=&quot;buffer&quot; /&gt;.&#xA;&#xA; -or-&#xA;&#xA; &lt;paramref name=&quot;size&quot; /&gt; is less than 0.&#xA;&#xA; -or-&#xA;&#xA; &lt;paramref name=&quot;size&quot; /&gt; is greater than the length of &lt;paramref name=&quot;buffer&quot; /&gt; minus the value of the &lt;paramref name=&quot;offset&quot; /&gt; parameter.">
        <paramref name="offset" />가 0보다 작은 경우.  
  
또는 
 <paramref name="offset" />이 <paramref name="buffer" />의 길이보다 큽니다.  
  
또는 
 <paramref name="size" />가 0보다 작은 경우.  
  
또는 
 <paramref name="size" />가 <paramref name="buffer" />의 길이에서 <paramref name="offset" /> 매개 변수 값을 뺀 크기보다 큰 경우</exception>
      <returns vsli:raw="An &lt;see cref=&quot;T:System.IAsyncResult&quot; /&gt; that references the asynchronous read.">비동기 읽기를 참조하는 <see cref="T:System.IAsyncResult" />입니다.</returns>
    </member>
    <member name="M:System.Net.Sockets.Socket.BeginReceive(System.Collections.Generic.IList{System.ArraySegment{System.Byte}},System.Net.Sockets.SocketFlags,System.AsyncCallback,System.Object)">
      <summary vsli:raw="Begins to asynchronously receive data from a connected &lt;see cref=&quot;T:System.Net.Sockets.Socket&quot; /&gt;.">연결된 <see cref="T:System.Net.Sockets.Socket" />에서 데이터를 비동기적으로 받기 시작합니다.</summary>
      <param name="buffers" vsli:raw="An array of type &lt;see cref=&quot;T:System.Byte&quot; /&gt; that is the storage location for the received data.">수신된 데이터에 대한 스토리지 위치인 <see cref="T:System.Byte" /> 형식의 배열입니다.</param>
      <param name="socketFlags" vsli:raw="A bitwise combination of the &lt;see cref=&quot;T:System.Net.Sockets.SocketFlags&quot; /&gt; values.">
        <see cref="T:System.Net.Sockets.SocketFlags" /> 값의 비트 조합입니다.</param>
      <param name="callback" vsli:raw="An &lt;see cref=&quot;T:System.AsyncCallback&quot; /&gt; delegate that references the method to invoke when the operation is complete.">작업이 완료되었을 때 호출할 메서드를 참조하는 <see cref="T:System.AsyncCallback" /> 대리자입니다.</param>
      <param name="state" vsli:raw="A user-defined object that contains information about the receive operation. This object is passed to the &lt;see cref=&quot;M:System.Net.Sockets.Socket.EndReceive(System.IAsyncResult)&quot; /&gt; delegate when the operation is complete.">수신 작업에 대한 정보가 들어 있는 사용자 정의 개체입니다. 이 개체는 작업이 완료되면 <see cref="M:System.Net.Sockets.Socket.EndReceive(System.IAsyncResult)" /> 대리자에게 전달됩니다.</param>
      <exception cref="T:System.ArgumentNullException" vsli:raw="&lt;paramref name=&quot;buffer&quot; /&gt; is &lt;see langword=&quot;null&quot; /&gt;.">
        <paramref name="buffer" />이(가) <see langword="null" />인 경우</exception>
      <exception cref="T:System.Net.Sockets.SocketException" vsli:raw=".NET Framework and .NET 5 and earlier only: An error occurred when attempting to access the socket.">소켓에 액세스하는 동안 오류가 발생했습니다.</exception>
      <exception cref="T:System.ObjectDisposedException" vsli:raw="&lt;see cref=&quot;T:System.Net.Sockets.Socket&quot; /&gt; has been closed.">
        <see cref="T:System.Net.Sockets.Socket" />이 닫힌 경우</exception>
      <returns vsli:raw="An &lt;see cref=&quot;T:System.IAsyncResult&quot; /&gt; that references the asynchronous read.">비동기 읽기를 참조하는 <see cref="T:System.IAsyncResult" />입니다.</returns>
    </member>
    <member name="M:System.Net.Sockets.Socket.BeginReceive(System.Collections.Generic.IList{System.ArraySegment{System.Byte}},System.Net.Sockets.SocketFlags,System.Net.Sockets.SocketError@,System.AsyncCallback,System.Object)">
      <summary vsli:raw="Begins to asynchronously receive data from a connected &lt;see cref=&quot;T:System.Net.Sockets.Socket&quot; /&gt;.">연결된 <see cref="T:System.Net.Sockets.Socket" />에서 데이터를 비동기적으로 받기 시작합니다.</summary>
      <param name="buffers" vsli:raw="An array of type &lt;see cref=&quot;T:System.Byte&quot; /&gt; that is the storage location for the received data.">수신된 데이터에 대한 스토리지 위치인 <see cref="T:System.Byte" /> 형식의 배열입니다.</param>
      <param name="socketFlags" vsli:raw="A bitwise combination of the &lt;see cref=&quot;T:System.Net.Sockets.SocketFlags&quot; /&gt; values.">
        <see cref="T:System.Net.Sockets.SocketFlags" /> 값의 비트 조합입니다.</param>
      <param name="errorCode" vsli:raw="A &lt;see cref=&quot;T:System.Net.Sockets.SocketError&quot; /&gt; object that stores the socket error.">소켓 오류를 저장하는 <see cref="T:System.Net.Sockets.SocketError" /> 개체입니다.</param>
      <param name="callback" vsli:raw="An &lt;see cref=&quot;T:System.AsyncCallback&quot; /&gt; delegate that references the method to invoke when the operation is complete.">작업이 완료되었을 때 호출할 메서드를 참조하는 <see cref="T:System.AsyncCallback" /> 대리자입니다.</param>
      <param name="state" vsli:raw="A user-defined object that contains information about the receive operation. This object is passed to the &lt;see cref=&quot;M:System.Net.Sockets.Socket.EndReceive(System.IAsyncResult)&quot; /&gt; delegate when the operation is complete.">수신 작업에 대한 정보가 들어 있는 사용자 정의 개체입니다. 이 개체는 작업이 완료되면 <see cref="M:System.Net.Sockets.Socket.EndReceive(System.IAsyncResult)" /> 대리자에게 전달됩니다.</param>
      <exception cref="T:System.ArgumentNullException" vsli:raw="&lt;paramref name=&quot;buffer&quot; /&gt; is &lt;see langword=&quot;null&quot; /&gt;.">
        <paramref name="buffer" />이(가) <see langword="null" />인 경우</exception>
      <exception cref="T:System.Net.Sockets.SocketException" vsli:raw=".NET Framework and .NET 5 and earlier only: An error occurred when attempting to access the socket.">소켓에 액세스하는 동안 오류가 발생했습니다.</exception>
      <exception cref="T:System.ObjectDisposedException" vsli:raw="&lt;see cref=&quot;T:System.Net.Sockets.Socket&quot; /&gt; has been closed.">
        <see cref="T:System.Net.Sockets.Socket" />이 닫힌 경우</exception>
      <returns vsli:raw="An &lt;see cref=&quot;T:System.IAsyncResult&quot; /&gt; that references the asynchronous read.">비동기 읽기를 참조하는 <see cref="T:System.IAsyncResult" />입니다.</returns>
    </member>
    <member name="M:System.Net.Sockets.Socket.BeginReceiveFrom(System.Byte[],System.Int32,System.Int32,System.Net.Sockets.SocketFlags,System.Net.EndPoint@,System.AsyncCallback,System.Object)">
      <summary vsli:raw="Begins to asynchronously receive data from a specified network device.">지정된 네트워크 디바이스에서 비동기적으로 데이터를 받기 시작합니다.</summary>
      <param name="buffer" vsli:raw="An array of type &lt;see cref=&quot;T:System.Byte&quot; /&gt; that is the storage location for the received data.">수신된 데이터에 대한 스토리지 위치인 <see cref="T:System.Byte" /> 형식의 배열입니다.</param>
      <param name="offset" vsli:raw="The zero-based position in the &lt;paramref name=&quot;buffer&quot; /&gt; parameter at which to store the data.">데이터를 저장하기 위한 <paramref name="buffer" /> 매개 변수의 위치(0부터 시작)입니다.</param>
      <param name="size" vsli:raw="The number of bytes to receive.">수신 바이트 수입니다.</param>
      <param name="socketFlags" vsli:raw="A bitwise combination of the &lt;see cref=&quot;T:System.Net.Sockets.SocketFlags&quot; /&gt; values.">
        <see cref="T:System.Net.Sockets.SocketFlags" /> 값의 비트 조합입니다.</param>
      <param name="remoteEP" vsli:raw="A reference to an &lt;see cref=&quot;T:System.Net.EndPoint&quot; /&gt; of the same type as the endpoint of the remote host to be updated on synchronous receive.">데이터의 소스를 나타내는 <see cref="T:System.Net.EndPoint" />입니다.</param>
      <param name="callback" vsli:raw="The &lt;see cref=&quot;T:System.AsyncCallback&quot; /&gt; delegate.">
        <see cref="T:System.AsyncCallback" /> 대리자입니다.</param>
      <param name="state" vsli:raw="An object that contains state information for this request.">이 요청에 대한 상태 정보를 포함하는 개체입니다.</param>
      <exception cref="T:System.ArgumentNullException" vsli:raw="&lt;paramref name=&quot;buffer&quot; /&gt; is &lt;see langword=&quot;null&quot; /&gt;.&#xA;&#xA; -or-&#xA;&#xA; &lt;paramref name=&quot;remoteEP&quot; /&gt; is &lt;see langword=&quot;null&quot; /&gt;.">
        <paramref name="buffer" />이(가) <see langword="null" />인 경우  
  
또는 
 <paramref name="remoteEP" />이(가) <see langword="null" />인 경우</exception>
      <exception cref="T:System.Net.Sockets.SocketException" vsli:raw=".NET Framework and .NET 5 and earlier only: An error occurred when attempting to access the socket.">소켓에 액세스하는 동안 오류가 발생했습니다.</exception>
      <exception cref="T:System.ArgumentOutOfRangeException" vsli:raw="&lt;paramref name=&quot;offset&quot; /&gt; is less than 0.&#xA;&#xA; -or-&#xA;&#xA; &lt;paramref name=&quot;offset&quot; /&gt; is greater than the length of &lt;paramref name=&quot;buffer&quot; /&gt;.&#xA;&#xA; -or-&#xA;&#xA; &lt;paramref name=&quot;size&quot; /&gt; is less than 0.&#xA;&#xA; -or-&#xA;&#xA; &lt;paramref name=&quot;size&quot; /&gt; is greater than the length of &lt;paramref name=&quot;buffer&quot; /&gt; minus the value of the &lt;paramref name=&quot;offset&quot; /&gt; parameter.">
        <paramref name="offset" />가 0보다 작은 경우.  
  
또는 
 <paramref name="offset" />이 <paramref name="buffer" />의 길이보다 큽니다.  
  
또는 
 <paramref name="size" />가 0보다 작은 경우.  
  
또는 
 <paramref name="size" /> 가 <paramref name="buffer" /> 의 길이에서 <paramref name="offset" /> 매개 변수 값을 뺀 크기보다 큰 경우</exception>
      <exception cref="T:System.ObjectDisposedException" vsli:raw="The &lt;see cref=&quot;T:System.Net.Sockets.Socket&quot; /&gt; has been closed.">
        <see cref="T:System.Net.Sockets.Socket" />이 닫혔습니다.</exception>
      <exception cref="T:System.Security.SecurityException" vsli:raw="A caller higher in the call stack does not have permission for the requested operation.">호출 스택의 상위 호출자에게 요청된 작업을 수행할 권한이 없는 경우</exception>
      <returns vsli:raw="An &lt;see cref=&quot;T:System.IAsyncResult&quot; /&gt; that references the asynchronous read.">비동기 읽기를 참조하는 <see cref="T:System.IAsyncResult" />입니다.</returns>
    </member>
    <member name="M:System.Net.Sockets.Socket.BeginReceiveMessageFrom(System.Byte[],System.Int32,System.Int32,System.Net.Sockets.SocketFlags,System.Net.EndPoint@,System.AsyncCallback,System.Object)">
      <summary vsli:raw="Begins to asynchronously receive the specified number of bytes of data into the specified location of the data buffer, using the specified &lt;see cref=&quot;T:System.Net.Sockets.SocketFlags&quot; /&gt;, and stores the endpoint and packet information.">비동기적으로 지정된 <see cref="T:System.Net.Sockets.SocketFlags" />를 사용하여 데이터 버퍼의 특정 위치로 지정된 바이트 수의 데이터를 받고 엔드포인트 및 패킷 정보를 저장하기 시작합니다.</summary>
      <param name="buffer" vsli:raw="An array of type &lt;see cref=&quot;T:System.Byte&quot; /&gt; that is the storage location for the received data.">수신된 데이터에 대한 스토리지 위치인 <see cref="T:System.Byte" /> 형식의 배열입니다.</param>
      <param name="offset" vsli:raw="The zero-based position in the &lt;paramref name=&quot;buffer&quot; /&gt; parameter at which to store the data.">데이터를 저장하기 위한 <paramref name="buffer" /> 매개 변수의 위치(0부터 시작)입니다.</param>
      <param name="size" vsli:raw="The number of bytes to receive.">수신 바이트 수입니다.</param>
      <param name="socketFlags" vsli:raw="A bitwise combination of the &lt;see cref=&quot;T:System.Net.Sockets.SocketFlags&quot; /&gt; values.">
        <see cref="T:System.Net.Sockets.SocketFlags" /> 값의 비트 조합입니다.</param>
      <param name="remoteEP" vsli:raw="A reference to an &lt;see cref=&quot;T:System.Net.EndPoint&quot; /&gt; of the same type as the endpoint of the remote host to be updated on synchronous receive.">데이터의 소스를 나타내는 <see cref="T:System.Net.EndPoint" />입니다.</param>
      <param name="callback" vsli:raw="The &lt;see cref=&quot;T:System.AsyncCallback&quot; /&gt; delegate.">
        <see cref="T:System.AsyncCallback" /> 대리자입니다.</param>
      <param name="state" vsli:raw="An object that contains state information for this request.">이 요청에 대한 상태 정보를 포함하는 개체입니다.</param>
      <exception cref="T:System.ArgumentNullException" vsli:raw="&lt;paramref name=&quot;buffer&quot; /&gt; is &lt;see langword=&quot;null&quot; /&gt;.&#xA;&#xA; -or-&#xA;&#xA; &lt;paramref name=&quot;remoteEP&quot; /&gt; is &lt;see langword=&quot;null&quot; /&gt;.">
        <paramref name="buffer" />이(가) <see langword="null" />인 경우  
  
또는 
 <paramref name="remoteEP" />이(가) <see langword="null" />인 경우</exception>
      <exception cref="T:System.Net.Sockets.SocketException" vsli:raw=".NET Framework and .NET 5 and earlier only: An error occurred when attempting to access the socket.">소켓에 액세스하는 동안 오류가 발생했습니다.</exception>
      <exception cref="T:System.ArgumentOutOfRangeException" vsli:raw="&lt;paramref name=&quot;offset&quot; /&gt; is less than 0.&#xA;&#xA; -or-&#xA;&#xA; &lt;paramref name=&quot;offset&quot; /&gt; is greater than the length of &lt;paramref name=&quot;buffer&quot; /&gt;.&#xA;&#xA; -or-&#xA;&#xA; &lt;paramref name=&quot;size&quot; /&gt; is less than 0.&#xA;&#xA; -or-&#xA;&#xA; &lt;paramref name=&quot;size&quot; /&gt; is greater than the length of &lt;paramref name=&quot;buffer&quot; /&gt; minus the value of the &lt;paramref name=&quot;offset&quot; /&gt; parameter.">
        <paramref name="offset" />가 0보다 작은 경우.  
  
또는 
 <paramref name="offset" />이 <paramref name="buffer" />의 길이보다 큽니다.  
  
또는 
 <paramref name="size" />가 0보다 작은 경우.  
  
또는 
 <paramref name="size" /> 가 <paramref name="buffer" /> 의 길이에서 <paramref name="offset" /> 매개 변수 값을 뺀 크기보다 큰 경우</exception>
      <exception cref="T:System.ObjectDisposedException" vsli:raw="The &lt;see cref=&quot;T:System.Net.Sockets.Socket&quot; /&gt; has been closed.">
        <see cref="T:System.Net.Sockets.Socket" />이 닫혔습니다.</exception>
      <returns vsli:raw="An &lt;see cref=&quot;T:System.IAsyncResult&quot; /&gt; that references the asynchronous read.">비동기 읽기를 참조하는 <see cref="T:System.IAsyncResult" />입니다.</returns>
    </member>
    <member name="M:System.Net.Sockets.Socket.BeginSend(System.Byte[],System.Int32,System.Int32,System.Net.Sockets.SocketFlags,System.AsyncCallback,System.Object)">
      <summary vsli:raw="Sends data asynchronously to a connected &lt;see cref=&quot;T:System.Net.Sockets.Socket&quot; /&gt;.">연결된 <see cref="T:System.Net.Sockets.Socket" />에 데이터를 비동기적으로 보냅니다.</summary>
      <param name="buffer" vsli:raw="An array of type &lt;see cref=&quot;T:System.Byte&quot; /&gt; that contains the data to send.">보낼 데이터를 포함하는 <see cref="T:System.Byte" /> 형식의 배열입니다.</param>
      <param name="offset" vsli:raw="The zero-based position in the &lt;paramref name=&quot;buffer&quot; /&gt; parameter at which to begin sending data.">데이터 보내기를 시작하기 위한 <paramref name="buffer" /> 매개 변수의 위치(0부터 시작)입니다.</param>
      <param name="size" vsli:raw="The number of bytes to send.">보낼 바이트 수입니다.</param>
      <param name="socketFlags" vsli:raw="A bitwise combination of the &lt;see cref=&quot;T:System.Net.Sockets.SocketFlags&quot; /&gt; values.">
        <see cref="T:System.Net.Sockets.SocketFlags" /> 값의 비트 조합입니다.</param>
      <param name="callback" vsli:raw="The &lt;see cref=&quot;T:System.AsyncCallback&quot; /&gt; delegate.">
        <see cref="T:System.AsyncCallback" /> 대리자입니다.</param>
      <param name="state" vsli:raw="An object that contains state information for this request.">이 요청에 대한 상태 정보를 포함하는 개체입니다.</param>
      <exception cref="T:System.ArgumentNullException" vsli:raw="&lt;paramref name=&quot;buffer&quot; /&gt; is &lt;see langword=&quot;null&quot; /&gt;.">
        <paramref name="buffer" />이(가) <see langword="null" />인 경우</exception>
      <exception cref="T:System.Net.Sockets.SocketException" vsli:raw=".NET Framework and .NET 5 and earlier only: An error occurred when attempting to access the socket. See remarks section below.">소켓에 액세스하는 동안 오류가 발생했습니다. 아래의 설명 부분을 참조하십시오.</exception>
      <exception cref="T:System.ArgumentOutOfRangeException" vsli:raw="&lt;paramref name=&quot;offset&quot; /&gt; is less than 0.&#xA;&#xA; -or-&#xA;&#xA; &lt;paramref name=&quot;offset&quot; /&gt; is less than the length of &lt;paramref name=&quot;buffer&quot; /&gt;.&#xA;&#xA; -or-&#xA;&#xA; &lt;paramref name=&quot;size&quot; /&gt; is less than 0.&#xA;&#xA; -or-&#xA;&#xA; &lt;paramref name=&quot;size&quot; /&gt; is greater than the length of &lt;paramref name=&quot;buffer&quot; /&gt; minus the value of the &lt;paramref name=&quot;offset&quot; /&gt; parameter.">
        <paramref name="offset" />가 0보다 작은 경우.  
  
또는 
 <paramref name="offset" />이 <paramref name="buffer" />의 길이보다 작은 경우  
  
또는 
 <paramref name="size" />가 0보다 작은 경우.  
  
또는 
 <paramref name="size" /> 가 <paramref name="buffer" /> 의 길이에서 <paramref name="offset" /> 매개 변수 값을 뺀 크기보다 큰 경우</exception>
      <exception cref="T:System.ObjectDisposedException" vsli:raw="The &lt;see cref=&quot;T:System.Net.Sockets.Socket&quot; /&gt; has been closed.">
        <see cref="T:System.Net.Sockets.Socket" />이 닫혔습니다.</exception>
      <returns vsli:raw="An &lt;see cref=&quot;T:System.IAsyncResult&quot; /&gt; that references the asynchronous send.">비동기 보내기를 참조하는 <see cref="T:System.IAsyncResult" />입니다.</returns>
    </member>
    <member name="M:System.Net.Sockets.Socket.BeginSend(System.Byte[],System.Int32,System.Int32,System.Net.Sockets.SocketFlags,System.Net.Sockets.SocketError@,System.AsyncCallback,System.Object)">
      <summary vsli:raw="Sends data asynchronously to a connected &lt;see cref=&quot;T:System.Net.Sockets.Socket&quot; /&gt;.">연결된 <see cref="T:System.Net.Sockets.Socket" />에 데이터를 비동기적으로 보냅니다.</summary>
      <param name="buffer" vsli:raw="An array of type &lt;see cref=&quot;T:System.Byte&quot; /&gt; that contains the data to send.">보낼 데이터를 포함하는 <see cref="T:System.Byte" /> 형식의 배열입니다.</param>
      <param name="offset" vsli:raw="The zero-based position in the &lt;paramref name=&quot;buffer&quot; /&gt; parameter at which to begin sending data.">데이터 보내기를 시작하기 위한 <paramref name="buffer" /> 매개 변수의 위치(0부터 시작)입니다.</param>
      <param name="size" vsli:raw="The number of bytes to send.">보낼 바이트 수입니다.</param>
      <param name="socketFlags" vsli:raw="A bitwise combination of the &lt;see cref=&quot;T:System.Net.Sockets.SocketFlags&quot; /&gt; values.">
        <see cref="T:System.Net.Sockets.SocketFlags" /> 값의 비트 조합입니다.</param>
      <param name="errorCode" vsli:raw="A &lt;see cref=&quot;T:System.Net.Sockets.SocketError&quot; /&gt; object that stores the socket error.">소켓 오류를 저장하는 <see cref="T:System.Net.Sockets.SocketError" /> 개체입니다.</param>
      <param name="callback" vsli:raw="The &lt;see cref=&quot;T:System.AsyncCallback&quot; /&gt; delegate.">
        <see cref="T:System.AsyncCallback" /> 대리자입니다.</param>
      <param name="state" vsli:raw="An object that contains state information for this request.">이 요청에 대한 상태 정보를 포함하는 개체입니다.</param>
      <exception cref="T:System.ArgumentNullException" vsli:raw="&lt;paramref name=&quot;buffer&quot; /&gt; is &lt;see langword=&quot;null&quot; /&gt;.">
        <paramref name="buffer" />이(가) <see langword="null" />인 경우</exception>
      <exception cref="T:System.Net.Sockets.SocketException" vsli:raw=".NET Framework and .NET 5 and earlier only: An error occurred when attempting to access the socket. See remarks section below.">소켓에 액세스하는 동안 오류가 발생했습니다. 아래의 설명 부분을 참조하십시오.</exception>
      <exception cref="T:System.ArgumentOutOfRangeException" vsli:raw="&lt;paramref name=&quot;offset&quot; /&gt; is less than 0.&#xA;&#xA; -or-&#xA;&#xA; &lt;paramref name=&quot;offset&quot; /&gt; is less than the length of &lt;paramref name=&quot;buffer&quot; /&gt;.&#xA;&#xA; -or-&#xA;&#xA; &lt;paramref name=&quot;size&quot; /&gt; is less than 0.&#xA;&#xA; -or-&#xA;&#xA; &lt;paramref name=&quot;size&quot; /&gt; is greater than the length of &lt;paramref name=&quot;buffer&quot; /&gt; minus the value of the &lt;paramref name=&quot;offset&quot; /&gt; parameter.">
        <paramref name="offset" />가 0보다 작은 경우.  
  
또는 
 <paramref name="offset" />이 <paramref name="buffer" />의 길이보다 작은 경우  
  
또는 
 <paramref name="size" />가 0보다 작은 경우.  
  
또는 
 <paramref name="size" /> 가 <paramref name="buffer" /> 의 길이에서 <paramref name="offset" /> 매개 변수 값을 뺀 크기보다 큰 경우</exception>
      <exception cref="T:System.ObjectDisposedException" vsli:raw="The &lt;see cref=&quot;T:System.Net.Sockets.Socket&quot; /&gt; has been closed.">
        <see cref="T:System.Net.Sockets.Socket" />이 닫혔습니다.</exception>
      <returns vsli:raw="An &lt;see cref=&quot;T:System.IAsyncResult&quot; /&gt; that references the asynchronous send.">비동기 보내기를 참조하는 <see cref="T:System.IAsyncResult" />입니다.</returns>
    </member>
    <member name="M:System.Net.Sockets.Socket.BeginSend(System.Collections.Generic.IList{System.ArraySegment{System.Byte}},System.Net.Sockets.SocketFlags,System.AsyncCallback,System.Object)">
      <summary vsli:raw="Sends data asynchronously to a connected &lt;see cref=&quot;T:System.Net.Sockets.Socket&quot; /&gt;.">연결된 <see cref="T:System.Net.Sockets.Socket" />에 데이터를 비동기적으로 보냅니다.</summary>
      <param name="buffers" vsli:raw="An array of type &lt;see cref=&quot;T:System.Byte&quot; /&gt; that contains the data to send.">보낼 데이터를 포함하는 <see cref="T:System.Byte" /> 형식의 배열입니다.</param>
      <param name="socketFlags" vsli:raw="A bitwise combination of the &lt;see cref=&quot;T:System.Net.Sockets.SocketFlags&quot; /&gt; values.">
        <see cref="T:System.Net.Sockets.SocketFlags" /> 값의 비트 조합입니다.</param>
      <param name="callback" vsli:raw="The &lt;see cref=&quot;T:System.AsyncCallback&quot; /&gt; delegate.">
        <see cref="T:System.AsyncCallback" /> 대리자입니다.</param>
      <param name="state" vsli:raw="An object that contains state information for this request.">이 요청에 대한 상태 정보를 포함하는 개체입니다.</param>
      <exception cref="T:System.ArgumentNullException" vsli:raw="&lt;paramref name=&quot;buffers&quot; /&gt; is &lt;see langword=&quot;null&quot; /&gt;.">
        <paramref name="buffers" />이(가) <see langword="null" />인 경우</exception>
      <exception cref="T:System.ArgumentException" vsli:raw="&lt;paramref name=&quot;buffers&quot; /&gt; is empty.">
        <paramref name="buffers" />가 비어 있는 경우</exception>
      <exception cref="T:System.Net.Sockets.SocketException" vsli:raw=".NET Framework and .NET 5 and earlier only: An error occurred when attempting to access the socket. See remarks section below.">소켓에 액세스하는 동안 오류가 발생했습니다. 아래의 설명 부분을 참조하십시오.</exception>
      <exception cref="T:System.ObjectDisposedException" vsli:raw="The &lt;see cref=&quot;T:System.Net.Sockets.Socket&quot; /&gt; has been closed.">
        <see cref="T:System.Net.Sockets.Socket" />이 닫혔습니다.</exception>
      <returns vsli:raw="An &lt;see cref=&quot;T:System.IAsyncResult&quot; /&gt; that references the asynchronous send.">비동기 보내기를 참조하는 <see cref="T:System.IAsyncResult" />입니다.</returns>
    </member>
    <member name="M:System.Net.Sockets.Socket.BeginSend(System.Collections.Generic.IList{System.ArraySegment{System.Byte}},System.Net.Sockets.SocketFlags,System.Net.Sockets.SocketError@,System.AsyncCallback,System.Object)">
      <summary vsli:raw="Sends data asynchronously to a connected &lt;see cref=&quot;T:System.Net.Sockets.Socket&quot; /&gt;.">연결된 <see cref="T:System.Net.Sockets.Socket" />에 데이터를 비동기적으로 보냅니다.</summary>
      <param name="buffers" vsli:raw="An array of type &lt;see cref=&quot;T:System.Byte&quot; /&gt; that contains the data to send.">보낼 데이터를 포함하는 <see cref="T:System.Byte" /> 형식의 배열입니다.</param>
      <param name="socketFlags" vsli:raw="A bitwise combination of the &lt;see cref=&quot;T:System.Net.Sockets.SocketFlags&quot; /&gt; values.">
        <see cref="T:System.Net.Sockets.SocketFlags" /> 값의 비트 조합입니다.</param>
      <param name="errorCode" vsli:raw="A &lt;see cref=&quot;T:System.Net.Sockets.SocketError&quot; /&gt; object that stores the socket error.">소켓 오류를 저장하는 <see cref="T:System.Net.Sockets.SocketError" /> 개체입니다.</param>
      <param name="callback" vsli:raw="The &lt;see cref=&quot;T:System.AsyncCallback&quot; /&gt; delegate.">
        <see cref="T:System.AsyncCallback" /> 대리자입니다.</param>
      <param name="state" vsli:raw="An object that contains state information for this request.">이 요청에 대한 상태 정보를 포함하는 개체입니다.</param>
      <exception cref="T:System.ArgumentNullException" vsli:raw="&lt;paramref name=&quot;buffers&quot; /&gt; is &lt;see langword=&quot;null&quot; /&gt;.">
        <paramref name="buffers" />이(가) <see langword="null" />인 경우</exception>
      <exception cref="T:System.ArgumentException" vsli:raw="&lt;paramref name=&quot;buffers&quot; /&gt; is empty.">
        <paramref name="buffers" />가 비어 있는 경우</exception>
      <exception cref="T:System.Net.Sockets.SocketException" vsli:raw=".NET Framework and .NET 5 and earlier only: An error occurred when attempting to access the socket. See remarks section below.">소켓에 액세스하는 동안 오류가 발생했습니다. 아래의 설명 부분을 참조하십시오.</exception>
      <exception cref="T:System.ObjectDisposedException" vsli:raw="The &lt;see cref=&quot;T:System.Net.Sockets.Socket&quot; /&gt; has been closed.">
        <see cref="T:System.Net.Sockets.Socket" />이 닫혔습니다.</exception>
      <returns vsli:raw="An &lt;see cref=&quot;T:System.IAsyncResult&quot; /&gt; that references the asynchronous send.">비동기 보내기를 참조하는 <see cref="T:System.IAsyncResult" />입니다.</returns>
    </member>
    <member name="M:System.Net.Sockets.Socket.BeginSendFile(System.String,System.AsyncCallback,System.Object)">
      <summary vsli:raw="Sends the file &lt;paramref name=&quot;fileName&quot; /&gt; to a connected &lt;see cref=&quot;T:System.Net.Sockets.Socket&quot; /&gt; object using the &lt;see cref=&quot;F:System.Net.Sockets.TransmitFileOptions.UseDefaultWorkerThread&quot; /&gt; flag.">
        <see cref="T:System.Net.Sockets.Socket" /> 플래그를 사용하여 <paramref name="fileName" /> 파일을 연결된 <see cref="F:System.Net.Sockets.TransmitFileOptions.UseDefaultWorkerThread" /> 개체에 보냅니다.</summary>
      <param name="fileName" vsli:raw="A string that contains the path and name of the file to send. This parameter can be &lt;see langword=&quot;null&quot; /&gt;.">보낼 파일의 경로 및 이름이 들어 있는 문자열입니다. 이 매개 변수는 <see langword="null" />일 수 있습니다.</param>
      <param name="callback" vsli:raw="The &lt;see cref=&quot;T:System.AsyncCallback&quot; /&gt; delegate.">
        <see cref="T:System.AsyncCallback" /> 대리자입니다.</param>
      <param name="state" vsli:raw="An object that contains state information for this request.">이 요청에 대한 상태 정보를 포함하는 개체입니다.</param>
      <exception cref="T:System.ObjectDisposedException" vsli:raw="The &lt;see cref=&quot;T:System.Net.Sockets.Socket&quot; /&gt; object has been closed.">
        <see cref="T:System.Net.Sockets.Socket" /> 개체가 닫힌 경우</exception>
      <exception cref="T:System.NotSupportedException" vsli:raw="The socket is not connected to a remote host.">소켓이 원격 호스트에 연결되지 않은 경우</exception>
      <exception cref="T:System.IO.FileNotFoundException" vsli:raw="The file &lt;paramref name=&quot;fileName&quot; /&gt; was not found.">
        <paramref name="fileName" /> 파일을 찾을 수 없는 경우</exception>
      <exception cref="T:System.Net.Sockets.SocketException" vsli:raw=".NET Framework and .NET 5 and earlier only: An error occurred when attempting to access the socket. See remarks section below.">소켓에 액세스하는 동안 오류가 발생했습니다. 아래의 설명 부분을 참조하십시오.</exception>
      <returns vsli:raw="An &lt;see cref=&quot;T:System.IAsyncResult&quot; /&gt; object that represents the asynchronous send.">비동기 보내기를 나타내는 <see cref="T:System.IAsyncResult" /> 개체입니다.</returns>
    </member>
    <member name="M:System.Net.Sockets.Socket.BeginSendFile(System.String,System.Byte[],System.Byte[],System.Net.Sockets.TransmitFileOptions,System.AsyncCallback,System.Object)">
      <summary vsli:raw="Sends a file and buffers of data asynchronously to a connected &lt;see cref=&quot;T:System.Net.Sockets.Socket&quot; /&gt; object.">파일 및 데이터 버퍼를 연결된 <see cref="T:System.Net.Sockets.Socket" /> 개체에 비동기적으로 보냅니다.</summary>
      <param name="fileName" vsli:raw="A string that contains the path and name of the file to be sent. This parameter can be &lt;see langword=&quot;null&quot; /&gt;.">보낼 파일의 경로 및 이름이 들어 있는 문자열입니다. 이 매개 변수는 <see langword="null" />일 수 있습니다.</param>
      <param name="preBuffer" vsli:raw="The data to be sent before the file is sent. This parameter can be &lt;see langword=&quot;null&quot; /&gt;.">파일이 전송되기 전에 전송할 데이터를 포함하는 <see cref="T:System.Byte" /> 배열입니다. 이 매개 변수는 <see langword="null" />일 수 있습니다.</param>
      <param name="postBuffer" vsli:raw="The data to be sent after the file is sent. This parameter can be &lt;see langword=&quot;null&quot; /&gt;.">파일이 전송된 후에 전송할 데이터를 포함하는 <see cref="T:System.Byte" /> 배열입니다. 이 매개 변수는 <see langword="null" />일 수 있습니다.</param>
      <param name="flags" vsli:raw="A bitwise combination of the enumeration values.">
        <see cref="T:System.Net.Sockets.TransmitFileOptions" /> 값의 비트 조합입니다.</param>
      <param name="callback" vsli:raw="An &lt;see cref=&quot;T:System.AsyncCallback&quot; /&gt; delegate to be invoked when this operation completes. This parameter can be &lt;see langword=&quot;null&quot; /&gt;.">이 작업이 완료되면 호출될 <see cref="T:System.AsyncCallback" /> 대리자입니다. 이 매개 변수는 <see langword="null" />일 수 있습니다.</param>
      <param name="state" vsli:raw="A user-defined object that contains state information for this request. This parameter can be &lt;see langword=&quot;null&quot; /&gt;.">이 요청에 대한 상태 정보가 들어 있는 사용자 정의 개체입니다. 이 매개 변수는 <see langword="null" />일 수 있습니다.</param>
      <exception cref="T:System.ObjectDisposedException" vsli:raw="The &lt;see cref=&quot;T:System.Net.Sockets.Socket&quot; /&gt; object has been closed.">
        <see cref="T:System.Net.Sockets.Socket" /> 개체가 닫힌 경우</exception>
      <exception cref="T:System.Net.Sockets.SocketException" vsli:raw=".NET Framework and .NET 5 and earlier only: An error occurred when attempting to access the socket. See remarks section below.">소켓에 액세스하는 동안 오류가 발생했습니다. 아래의 설명 부분을 참조하십시오.</exception>
      <exception cref="T:System.NotSupportedException" vsli:raw="The operating system is not Windows NT or later.&#xA;&#xA;-or-&#xA;&#xA; The socket is not connected to a remote host.">운영 체제가 Windows NT 이상이 아닌 경우  
  
또는
  
 소켓이 원격 호스트에 연결되지 않은 경우</exception>
      <exception cref="T:System.IO.FileNotFoundException" vsli:raw="The file &lt;paramref name=&quot;fileName&quot; /&gt; was not found.">
        <paramref name="fileName" /> 파일을 찾을 수 없는 경우</exception>
      <returns vsli:raw="An &lt;see cref=&quot;T:System.IAsyncResult&quot; /&gt; object that represents the asynchronous operation.">비동기 작업을 나타내는 <see cref="T:System.IAsyncResult" /> 개체입니다.</returns>
    </member>
    <member name="M:System.Net.Sockets.Socket.BeginSendTo(System.Byte[],System.Int32,System.Int32,System.Net.Sockets.SocketFlags,System.Net.EndPoint,System.AsyncCallback,System.Object)">
      <summary vsli:raw="Sends data asynchronously to a specific remote host.">특정 원격 호스트에 데이터를 비동기적으로 보냅니다.</summary>
      <param name="buffer" vsli:raw="An array of type &lt;see cref=&quot;T:System.Byte&quot; /&gt; that contains the data to send.">보낼 데이터를 포함하는 <see cref="T:System.Byte" /> 형식의 배열입니다.</param>
      <param name="offset" vsli:raw="The zero-based position in &lt;paramref name=&quot;buffer&quot; /&gt; at which to begin sending data.">데이터 보내기를 시작할 <paramref name="buffer" />의 위치(0부터 시작)입니다.</param>
      <param name="size" vsli:raw="The number of bytes to send.">보낼 바이트 수입니다.</param>
      <param name="socketFlags" vsli:raw="A bitwise combination of the &lt;see cref=&quot;T:System.Net.Sockets.SocketFlags&quot; /&gt; values.">
        <see cref="T:System.Net.Sockets.SocketFlags" /> 값의 비트 조합입니다.</param>
      <param name="remoteEP" vsli:raw="An &lt;see cref=&quot;T:System.Net.EndPoint&quot; /&gt; that represents the remote device.">원격 디바이스를 나타내는 <see cref="T:System.Net.EndPoint" />입니다.</param>
      <param name="callback" vsli:raw="The &lt;see cref=&quot;T:System.AsyncCallback&quot; /&gt; delegate.">
        <see cref="T:System.AsyncCallback" /> 대리자입니다.</param>
      <param name="state" vsli:raw="An object that contains state information for this request.">이 요청에 대한 상태 정보를 포함하는 개체입니다.</param>
      <exception cref="T:System.ArgumentNullException" vsli:raw="&lt;paramref name=&quot;buffer&quot; /&gt; is &lt;see langword=&quot;null&quot; /&gt;.&#xA;&#xA; -or-&#xA;&#xA; &lt;paramref name=&quot;remoteEP&quot; /&gt; is &lt;see langword=&quot;null&quot; /&gt;.">
        <paramref name="buffer" />이(가) <see langword="null" />인 경우  
  
또는 
 <paramref name="remoteEP" />이(가) <see langword="null" />인 경우</exception>
      <exception cref="T:System.Net.Sockets.SocketException" vsli:raw=".NET Framework and .NET 5 and earlier only: An error occurred when attempting to access the socket.">소켓에 액세스하는 동안 오류가 발생했습니다.</exception>
      <exception cref="T:System.ArgumentOutOfRangeException" vsli:raw="&lt;paramref name=&quot;offset&quot; /&gt; is less than 0.&#xA;&#xA; -or-&#xA;&#xA; &lt;paramref name=&quot;offset&quot; /&gt; is greater than the length of &lt;paramref name=&quot;buffer&quot; /&gt;.&#xA;&#xA; -or-&#xA;&#xA; &lt;paramref name=&quot;size&quot; /&gt; is less than 0.&#xA;&#xA; -or-&#xA;&#xA; &lt;paramref name=&quot;size&quot; /&gt; is greater than the length of &lt;paramref name=&quot;buffer&quot; /&gt; minus the value of the &lt;paramref name=&quot;offset&quot; /&gt; parameter.">
        <paramref name="offset" />가 0보다 작은 경우.  
  
또는 
 <paramref name="offset" />이 <paramref name="buffer" />의 길이보다 큽니다.  
  
또는 
 <paramref name="size" />가 0보다 작은 경우.  
  
또는 
 <paramref name="size" /> 가 <paramref name="buffer" /> 의 길이에서 <paramref name="offset" /> 매개 변수 값을 뺀 크기보다 큰 경우</exception>
      <exception cref="T:System.ObjectDisposedException" vsli:raw="The &lt;see cref=&quot;T:System.Net.Sockets.Socket&quot; /&gt; has been closed.">
        <see cref="T:System.Net.Sockets.Socket" />이 닫혔습니다.</exception>
      <exception cref="T:System.Security.SecurityException" vsli:raw="A caller higher in the call stack does not have permission for the requested operation.">호출 스택의 상위 호출자에게 요청된 작업을 수행할 권한이 없는 경우</exception>
      <returns vsli:raw="An &lt;see cref=&quot;T:System.IAsyncResult&quot; /&gt; that references the asynchronous send.">비동기 보내기를 참조하는 <see cref="T:System.IAsyncResult" />입니다.</returns>
    </member>
    <member name="M:System.Net.Sockets.Socket.Bind(System.Net.EndPoint)">
      <summary vsli:raw="Associates a &lt;see cref=&quot;T:System.Net.Sockets.Socket&quot; /&gt; with a local endpoint.">
        <see cref="T:System.Net.Sockets.Socket" />을 로컬 엔드포인트와 연결합니다.</summary>
      <param name="localEP" vsli:raw="The local &lt;see cref=&quot;T:System.Net.EndPoint&quot; /&gt; to associate with the &lt;see cref=&quot;T:System.Net.Sockets.Socket&quot; /&gt;.">
        <see cref="T:System.Net.EndPoint" />과 연결된 로컬 <see cref="T:System.Net.Sockets.Socket" />입니다.</param>
      <exception cref="T:System.ArgumentNullException" vsli:raw="&lt;paramref name=&quot;localEP&quot; /&gt; is &lt;see langword=&quot;null&quot; /&gt;.">
        <paramref name="localEP" />이(가) <see langword="null" />인 경우</exception>
      <exception cref="T:System.Net.Sockets.SocketException" vsli:raw="An error occurred when attempting to access the socket.">소켓에 액세스하는 동안 오류가 발생했습니다.</exception>
      <exception cref="T:System.ObjectDisposedException" vsli:raw="The &lt;see cref=&quot;T:System.Net.Sockets.Socket&quot; /&gt; has been closed.">
        <see cref="T:System.Net.Sockets.Socket" />이 닫혔습니다.</exception>
      <exception cref="T:System.Security.SecurityException" vsli:raw="A caller higher in the call stack does not have permission for the requested operation.">호출 스택의 상위 호출자에게 요청된 작업을 수행할 권한이 없는 경우</exception>
    </member>
    <member name="M:System.Net.Sockets.Socket.CancelConnectAsync(System.Net.Sockets.SocketAsyncEventArgs)">
      <summary vsli:raw="Cancels an asynchronous request for a remote host connection.">원격 호스트 연결에 대한 비동기 요청을 취소합니다.</summary>
      <param name="e" vsli:raw="The &lt;see cref=&quot;T:System.Net.Sockets.SocketAsyncEventArgs&quot; /&gt; object used to request the connection to the remote host by calling one of the &lt;see cref=&quot;M:System.Net.Sockets.Socket.ConnectAsync(System.Net.Sockets.SocketType,System.Net.Sockets.ProtocolType,System.Net.Sockets.SocketAsyncEventArgs)&quot; /&gt; methods.">
        <see cref="T:System.Net.Sockets.SocketAsyncEventArgs" /> 메서드 중 하나를 호출하여 원격 호스트에 대한 연결을 요청하는 데 사용되는 <see cref="M:System.Net.Sockets.Socket.ConnectAsync(System.Net.Sockets.SocketType,System.Net.Sockets.ProtocolType,System.Net.Sockets.SocketAsyncEventArgs)" /> 개체입니다.</param>
      <exception cref="T:System.ArgumentNullException" vsli:raw="The &lt;paramref name=&quot;e&quot; /&gt; parameter cannot be null and the &lt;see cref=&quot;P:System.Net.Sockets.SocketAsyncEventArgs.RemoteEndPoint&quot; /&gt; cannot be null.">
        <paramref name="e" /> 매개 변수가 null일 수 없으며, <see cref="P:System.Net.Sockets.SocketAsyncEventArgs.RemoteEndPoint" />도 null일 수 없습니다.</exception>
      <exception cref="T:System.Net.Sockets.SocketException" vsli:raw="An error occurred when attempting to access the socket.">소켓에 액세스하는 동안 오류가 발생했습니다.</exception>
      <exception cref="T:System.ObjectDisposedException" vsli:raw="The &lt;see cref=&quot;T:System.Net.Sockets.Socket&quot; /&gt; has been closed.">
        <see cref="T:System.Net.Sockets.Socket" />이 닫혔습니다.</exception>
      <exception cref="T:System.Security.SecurityException" vsli:raw="A caller higher in the call stack does not have permission for the requested operation.">호출 스택의 상위 호출자에게 요청된 작업을 수행할 권한이 없는 경우</exception>
    </member>
    <member name="M:System.Net.Sockets.Socket.Close">
      <summary vsli:raw="Closes the &lt;see cref=&quot;T:System.Net.Sockets.Socket&quot; /&gt; connection and releases all associated resources.">
        <see cref="T:System.Net.Sockets.Socket" /> 연결을 닫고 연결된 리소스를 모두 해제합니다.</summary>
    </member>
    <member name="M:System.Net.Sockets.Socket.Close(System.Int32)">
      <summary vsli:raw="Closes the &lt;see cref=&quot;T:System.Net.Sockets.Socket&quot; /&gt; connection and releases all associated resources with a specified timeout to allow queued data to be sent.">
        <see cref="T:System.Net.Sockets.Socket" /> 연결을 닫고 지정된 시간 제한의 모든 관련 리소스를 해제하여 대기 중인 데이터가 전송될 수 있도록 합니다.</summary>
      <param name="timeout" vsli:raw="Wait up to &lt;paramref name=&quot;timeout&quot; /&gt; milliseconds to send any remaining data, then close the socket.">나머지 데이터가 전송될 때까지 <paramref name="timeout" />초까지 기다린 후 소켓을 닫습니다.</param>
    </member>
    <member name="M:System.Net.Sockets.Socket.Connect(System.Net.EndPoint)">
      <summary vsli:raw="Establishes a connection to a remote host.">원격 호스트에 대한 연결을 설정합니다.</summary>
      <param name="remoteEP" vsli:raw="An &lt;see cref=&quot;T:System.Net.EndPoint&quot; /&gt; that represents the remote device.">원격 디바이스를 나타내는 <see cref="T:System.Net.EndPoint" />입니다.</param>
      <exception cref="T:System.ArgumentNullException" vsli:raw="&lt;paramref name=&quot;remoteEP&quot; /&gt; is &lt;see langword=&quot;null&quot; /&gt;.">
        <paramref name="remoteEP" />이(가) <see langword="null" />인 경우</exception>
      <exception cref="T:System.Net.Sockets.SocketException" vsli:raw="An error occurred when attempting to access the socket.">소켓에 액세스하는 동안 오류가 발생했습니다.</exception>
      <exception cref="T:System.ObjectDisposedException" vsli:raw="The &lt;see cref=&quot;T:System.Net.Sockets.Socket&quot; /&gt; has been closed.">
        <see cref="T:System.Net.Sockets.Socket" />이 닫혔습니다.</exception>
      <exception cref="T:System.Security.SecurityException" vsli:raw="A caller higher in the call stack does not have permission for the requested operation.">호출 스택의 상위 호출자에게 요청된 작업을 수행할 권한이 없는 경우</exception>
      <exception cref="T:System.InvalidOperationException" vsli:raw="The &lt;see cref=&quot;T:System.Net.Sockets.Socket&quot; /&gt; has been placed in a listening state by calling &lt;see cref=&quot;M:System.Net.Sockets.Socket.Listen(System.Int32)&quot; /&gt;.">
        <see cref="T:System.Net.Sockets.Socket" />이 <see cref="M:System.Net.Sockets.Socket.Listen(System.Int32)" />을 호출하여 수신 상태에 배치되었습니다.</exception>
    </member>
    <member name="M:System.Net.Sockets.Socket.Connect(System.Net.IPAddress,System.Int32)">
      <summary vsli:raw="Establishes a connection to a remote host. The host is specified by an IP address and a port number.">원격 호스트에 대한 연결을 설정합니다. 호스트는 IP 주소와 포트 번호로 지정됩니다.</summary>
      <param name="address" vsli:raw="The IP address of the remote host.">원격 호스트의 IP 주소입니다.</param>
      <param name="port" vsli:raw="The port number of the remote host.">원격 호스트의 포트 번호입니다.</param>
      <exception cref="T:System.ArgumentNullException" vsli:raw="&lt;paramref name=&quot;address&quot; /&gt; is &lt;see langword=&quot;null&quot; /&gt;.">
        <paramref name="address" />이(가) <see langword="null" />인 경우</exception>
      <exception cref="T:System.ArgumentOutOfRangeException" vsli:raw="The port number is not valid.">포트 번호가 잘못된 경우</exception>
      <exception cref="T:System.Net.Sockets.SocketException" vsli:raw="An error occurred when attempting to access the socket.">소켓에 액세스하는 동안 오류가 발생했습니다.</exception>
      <exception cref="T:System.ObjectDisposedException" vsli:raw="The &lt;see cref=&quot;T:System.Net.Sockets.Socket&quot; /&gt; has been closed.">
        <see cref="T:System.Net.Sockets.Socket" />이 닫혔습니다.</exception>
      <exception cref="T:System.NotSupportedException" vsli:raw="This method is valid for sockets in the &lt;see cref=&quot;F:System.Net.Sockets.AddressFamily.InterNetwork&quot; /&gt; or &lt;see cref=&quot;F:System.Net.Sockets.AddressFamily.InterNetworkV6&quot; /&gt; families.">이 메서드는 <see cref="F:System.Net.Sockets.AddressFamily.InterNetwork" /> 또는 <see cref="F:System.Net.Sockets.AddressFamily.InterNetworkV6" /> 제품군의 소켓에 유효합니다.</exception>
      <exception cref="T:System.ArgumentException" vsli:raw="The length of &lt;paramref name=&quot;address&quot; /&gt; is zero.">
        <paramref name="address" />의 길이가 0입니다.</exception>
      <exception cref="T:System.InvalidOperationException" vsli:raw="The &lt;see cref=&quot;T:System.Net.Sockets.Socket&quot; /&gt; has been placed in a listening state by calling &lt;see cref=&quot;M:System.Net.Sockets.Socket.Listen(System.Int32)&quot; /&gt;.">
        <see cref="T:System.Net.Sockets.Socket" />이 <see cref="M:System.Net.Sockets.Socket.Listen(System.Int32)" />을 호출하여 수신 상태에 배치되었습니다.</exception>
    </member>
    <member name="M:System.Net.Sockets.Socket.Connect(System.Net.IPAddress[],System.Int32)">
      <summary vsli:raw="Establishes a connection to a remote host. The host is specified by an array of IP addresses and a port number.">원격 호스트에 대한 연결을 설정합니다. 호스트는 IP 주소의 배열과 포트 번호로 지정됩니다.</summary>
      <param name="addresses" vsli:raw="The IP addresses of the remote host.">원격 호스트의 IP 주소입니다.</param>
      <param name="port" vsli:raw="The port number of the remote host.">원격 호스트의 포트 번호입니다.</param>
      <exception cref="T:System.ArgumentNullException" vsli:raw="&lt;paramref name=&quot;addresses&quot; /&gt; is &lt;see langword=&quot;null&quot; /&gt;.">
        <paramref name="addresses" />이(가) <see langword="null" />인 경우</exception>
      <exception cref="T:System.ArgumentOutOfRangeException" vsli:raw="The port number is not valid.">포트 번호가 잘못된 경우</exception>
      <exception cref="T:System.Net.Sockets.SocketException" vsli:raw="An error occurred when attempting to access the socket.">소켓에 액세스하는 동안 오류가 발생했습니다.</exception>
      <exception cref="T:System.ObjectDisposedException" vsli:raw="The &lt;see cref=&quot;T:System.Net.Sockets.Socket&quot; /&gt; has been closed.">
        <see cref="T:System.Net.Sockets.Socket" />이 닫혔습니다.</exception>
      <exception cref="T:System.NotSupportedException" vsli:raw="The socket is not in the &lt;see cref=&quot;F:System.Net.Sockets.AddressFamily.InterNetwork&quot; /&gt; or &lt;see cref=&quot;F:System.Net.Sockets.AddressFamily.InterNetworkV6&quot; /&gt; families.">이 메서드는 <see cref="F:System.Net.Sockets.AddressFamily.InterNetwork" /> 또는 <see cref="F:System.Net.Sockets.AddressFamily.InterNetworkV6" /> 제품군의 소켓에 유효합니다.</exception>
      <exception cref="T:System.ArgumentException" vsli:raw="The length of &lt;paramref name=&quot;address&quot; /&gt; is zero.">
        <paramref name="address" />의 길이가 0입니다.</exception>
      <exception cref="T:System.InvalidOperationException" vsli:raw="The &lt;see cref=&quot;T:System.Net.Sockets.Socket&quot; /&gt; has been placed in a listening state by calling &lt;see cref=&quot;M:System.Net.Sockets.Socket.Listen(System.Int32)&quot; /&gt;.">
        <see cref="T:System.Net.Sockets.Socket" />이 <see cref="M:System.Net.Sockets.Socket.Listen(System.Int32)" />을 호출하여 수신 상태에 배치되었습니다.</exception>
    </member>
    <member name="M:System.Net.Sockets.Socket.Connect(System.String,System.Int32)">
      <summary vsli:raw="Establishes a connection to a remote host. The host is specified by a host name and a port number.">원격 호스트에 대한 연결을 설정합니다. 호스트는 호스트 이름과 포트 번호로 지정됩니다.</summary>
      <param name="host" vsli:raw="The name of the remote host.">원격 호스트의 이름입니다.</param>
      <param name="port" vsli:raw="The port number of the remote host.">원격 호스트의 포트 번호입니다.</param>
      <exception cref="T:System.ArgumentNullException" vsli:raw="&lt;paramref name=&quot;host&quot; /&gt; is &lt;see langword=&quot;null&quot; /&gt;.">
        <paramref name="host" />이(가) <see langword="null" />인 경우</exception>
      <exception cref="T:System.ArgumentOutOfRangeException" vsli:raw="The port number is not valid.">포트 번호가 잘못된 경우</exception>
      <exception cref="T:System.Net.Sockets.SocketException" vsli:raw="An error occurred when attempting to access the socket.">소켓에 액세스하는 동안 오류가 발생했습니다.</exception>
      <exception cref="T:System.ObjectDisposedException" vsli:raw="The &lt;see cref=&quot;T:System.Net.Sockets.Socket&quot; /&gt; has been closed.">
        <see cref="T:System.Net.Sockets.Socket" />이 닫혔습니다.</exception>
      <exception cref="T:System.NotSupportedException" vsli:raw="The socket is not in the &lt;see cref=&quot;F:System.Net.Sockets.AddressFamily.InterNetwork&quot; /&gt; or &lt;see cref=&quot;F:System.Net.Sockets.AddressFamily.InterNetworkV6&quot; /&gt; families.">이 메서드는 <see cref="F:System.Net.Sockets.AddressFamily.InterNetwork" /> 또는 <see cref="F:System.Net.Sockets.AddressFamily.InterNetworkV6" /> 제품군의 소켓에 유효합니다.</exception>
      <exception cref="T:System.InvalidOperationException" vsli:raw="The &lt;see cref=&quot;T:System.Net.Sockets.Socket&quot; /&gt; has been placed in a listening state by calling &lt;see cref=&quot;M:System.Net.Sockets.Socket.Listen(System.Int32)&quot; /&gt;.">
        <see cref="T:System.Net.Sockets.Socket" />이 <see cref="M:System.Net.Sockets.Socket.Listen(System.Int32)" />을 호출하여 수신 상태에 배치되었습니다.</exception>
    </member>
    <member name="M:System.Net.Sockets.Socket.ConnectAsync(System.Net.Sockets.SocketAsyncEventArgs)">
      <summary vsli:raw="Begins an asynchronous request for a connection to a remote host.">원격 호스트 연결에 대한 비동기 요청을 시작합니다.</summary>
      <param name="e" vsli:raw="The &lt;see cref=&quot;T:System.Net.Sockets.SocketAsyncEventArgs&quot; /&gt; object to use for this asynchronous socket operation.">이 비동기 소켓 작업에 사용할 <see cref="T:System.Net.Sockets.SocketAsyncEventArgs" /> 개체입니다.</param>
      <exception cref="T:System.ArgumentException" vsli:raw="An argument is not valid. This exception occurs if multiple buffers are specified, the &lt;see cref=&quot;P:System.Net.Sockets.SocketAsyncEventArgs.BufferList&quot; /&gt; property is not null.">인수가 잘못된 경우. 버퍼를 여러 개 지정하고 <see cref="P:System.Net.Sockets.SocketAsyncEventArgs.BufferList" /> 속성이 null이 아니면 이 예외가 발생합니다.</exception>
      <exception cref="T:System.ArgumentNullException" vsli:raw="The &lt;paramref name=&quot;e&quot; /&gt; parameter cannot be null and the &lt;see cref=&quot;P:System.Net.Sockets.SocketAsyncEventArgs.RemoteEndPoint&quot; /&gt; cannot be null.">
        <paramref name="e" /> 매개 변수가 null일 수 없으며, <see cref="P:System.Net.Sockets.SocketAsyncEventArgs.RemoteEndPoint" />도 null일 수 없습니다.</exception>
      <exception cref="T:System.InvalidOperationException" vsli:raw="The &lt;see cref=&quot;T:System.Net.Sockets.Socket&quot; /&gt; is listening or a socket operation was already in progress using the &lt;see cref=&quot;T:System.Net.Sockets.SocketAsyncEventArgs&quot; /&gt; object specified in the &lt;paramref name=&quot;e&quot; /&gt; parameter.">
        <see cref="T:System.Net.Sockets.Socket" />이 수신 대기 중이거나 <paramref name="e" /> 매개 변수에 지정된 <see cref="T:System.Net.Sockets.SocketAsyncEventArgs" /> 개체를 사용하여 소켓 작업이 이미 진행 중입니다.</exception>
      <exception cref="T:System.Net.Sockets.SocketException" vsli:raw="An error occurred when attempting to access the socket.">소켓에 액세스하는 동안 오류가 발생했습니다.</exception>
      <exception cref="T:System.NotSupportedException" vsli:raw="The local endpoint and the &lt;see cref=&quot;P:System.Net.Sockets.SocketAsyncEventArgs.RemoteEndPoint&quot; /&gt; are not the same address family.">이 메서드에 Windows XP 이상이 필요한 경우. 로컬 엔드포인트와 <see cref="P:System.Net.Sockets.SocketAsyncEventArgs.RemoteEndPoint" />가 같은 주소 패밀리에 포함되지 않은 경우에도 이 예외가 발생합니다.</exception>
      <exception cref="T:System.ObjectDisposedException" vsli:raw="The &lt;see cref=&quot;T:System.Net.Sockets.Socket&quot; /&gt; has been closed.">
        <see cref="T:System.Net.Sockets.Socket" />이 닫혔습니다.</exception>
      <exception cref="T:System.Security.SecurityException" vsli:raw="A caller higher in the call stack does not have permission for the requested operation.">호출 스택의 상위 호출자에게 요청된 작업을 수행할 권한이 없는 경우</exception>
      <returns vsli:raw="&lt;see langword=&quot;true&quot; /&gt; if the I/O operation is pending. The &lt;see cref=&quot;E:System.Net.Sockets.SocketAsyncEventArgs.Completed&quot; /&gt; event on the &lt;paramref name=&quot;e&quot; /&gt; parameter will be raised upon completion of the operation.&#xA;&#xA; &lt;see langword=&quot;false&quot; /&gt; if the I/O operation completed synchronously. In this case, The &lt;see cref=&quot;E:System.Net.Sockets.SocketAsyncEventArgs.Completed&quot; /&gt; event on the &lt;paramref name=&quot;e&quot; /&gt; parameter will not be raised and the &lt;paramref name=&quot;e&quot; /&gt; object passed as a parameter may be examined immediately after the method call returns to retrieve the result of the operation.">I/O 작업이 보류 중인 경우 <see langword="true" />입니다. 작업이 완료되면 <paramref name="e" /> 매개 변수에 대한 <see cref="E:System.Net.Sockets.SocketAsyncEventArgs.Completed" /> 이벤트가 발생합니다.  
  
 I/O 작업이 동기적으로 완료된 경우 <see langword="false" />입니다. 이 경우에는 <paramref name="e" /> 매개 변수에서 <see cref="E:System.Net.Sockets.SocketAsyncEventArgs.Completed" /> 이벤트가 발생하지 않으며, 메서드 호출이 반환된 직후 매개 변수로 전달된 <paramref name="e" /> 개체를 검사하여 작업 결과를 검색할 수 있습니다.</returns>
    </member>
    <member name="M:System.Net.Sockets.Socket.ConnectAsync(System.Net.Sockets.SocketType,System.Net.Sockets.ProtocolType,System.Net.Sockets.SocketAsyncEventArgs)">
      <summary vsli:raw="Begins an asynchronous request for a connection to a remote host.">원격 호스트 연결에 대한 비동기 요청을 시작합니다.</summary>
      <param name="socketType" vsli:raw="One of the &lt;see cref=&quot;T:System.Net.Sockets.SocketType&quot; /&gt; values.">
        <see cref="T:System.Net.Sockets.SocketType" /> 값 중 하나입니다.</param>
      <param name="protocolType" vsli:raw="One of the &lt;see cref=&quot;T:System.Net.Sockets.ProtocolType&quot; /&gt; values.">
        <see cref="T:System.Net.Sockets.ProtocolType" /> 값 중 하나입니다.</param>
      <param name="e" vsli:raw="The &lt;see cref=&quot;T:System.Net.Sockets.SocketAsyncEventArgs&quot; /&gt; object to use for this asynchronous socket operation.">이 비동기 소켓 작업에 사용할 <see cref="T:System.Net.Sockets.SocketAsyncEventArgs" /> 개체입니다.</param>
      <exception cref="T:System.ArgumentException" vsli:raw="An argument is not valid. This exception occurs if multiple buffers are specified, the &lt;see cref=&quot;P:System.Net.Sockets.SocketAsyncEventArgs.BufferList&quot; /&gt; property is not null.">인수가 잘못된 경우. 버퍼를 여러 개 지정하고 <see cref="P:System.Net.Sockets.SocketAsyncEventArgs.BufferList" /> 속성이 null이 아니면 이 예외가 발생합니다.</exception>
      <exception cref="T:System.ArgumentNullException" vsli:raw="The &lt;paramref name=&quot;e&quot; /&gt; parameter cannot be null and the &lt;see cref=&quot;P:System.Net.Sockets.SocketAsyncEventArgs.RemoteEndPoint&quot; /&gt; cannot be null.">
        <paramref name="e" /> 매개 변수가 null일 수 없으며, <see cref="P:System.Net.Sockets.SocketAsyncEventArgs.RemoteEndPoint" />도 null일 수 없습니다.</exception>
      <exception cref="T:System.InvalidOperationException" vsli:raw="The &lt;see cref=&quot;T:System.Net.Sockets.Socket&quot; /&gt; is listening or a socket operation was already in progress using the &lt;see cref=&quot;T:System.Net.Sockets.SocketAsyncEventArgs&quot; /&gt; object specified in the &lt;paramref name=&quot;e&quot; /&gt; parameter.">
        <see cref="T:System.Net.Sockets.Socket" />이 수신 대기 중이거나 <paramref name="e" /> 매개 변수에 지정된 <see cref="T:System.Net.Sockets.SocketAsyncEventArgs" /> 개체를 사용하여 소켓 작업이 이미 진행 중입니다.</exception>
      <exception cref="T:System.Net.Sockets.SocketException" vsli:raw="An error occurred when attempting to access the socket.">소켓에 액세스하는 동안 오류가 발생했습니다.</exception>
      <exception cref="T:System.NotSupportedException" vsli:raw="The local endpoint and the &lt;see cref=&quot;P:System.Net.Sockets.SocketAsyncEventArgs.RemoteEndPoint&quot; /&gt; are not the same address family.">이 메서드에 Windows XP 이상이 필요한 경우. 로컬 엔드포인트와 <see cref="P:System.Net.Sockets.SocketAsyncEventArgs.RemoteEndPoint" />가 같은 주소 패밀리에 포함되지 않은 경우에도 이 예외가 발생합니다.</exception>
      <exception cref="T:System.ObjectDisposedException" vsli:raw="The &lt;see cref=&quot;T:System.Net.Sockets.Socket&quot; /&gt; has been closed.">
        <see cref="T:System.Net.Sockets.Socket" />이 닫혔습니다.</exception>
      <exception cref="T:System.Security.SecurityException" vsli:raw="A caller higher in the call stack does not have permission for the requested operation.">호출 스택의 상위 호출자에게 요청된 작업을 수행할 권한이 없는 경우</exception>
      <returns vsli:raw="&lt;see langword=&quot;true&quot; /&gt; if the I/O operation is pending. The &lt;see cref=&quot;E:System.Net.Sockets.SocketAsyncEventArgs.Completed&quot; /&gt; event on the &lt;paramref name=&quot;e&quot; /&gt; parameter will be raised upon completion of the operation.&#xA;&#xA; &lt;see langword=&quot;false&quot; /&gt; if the I/O operation completed synchronously. In this case, The &lt;see cref=&quot;E:System.Net.Sockets.SocketAsyncEventArgs.Completed&quot; /&gt; event on the &lt;paramref name=&quot;e&quot; /&gt; parameter will not be raised and the &lt;paramref name=&quot;e&quot; /&gt; object passed as a parameter may be examined immediately after the method call returns to retrieve the result of the operation.">I/O 작업이 보류 중인 경우 <see langword="true" />입니다. 작업이 완료되면 <paramref name="e" /> 매개 변수에 대한 <see cref="E:System.Net.Sockets.SocketAsyncEventArgs.Completed" /> 이벤트가 발생합니다.  
  
 I/O 작업이 동기적으로 완료된 경우 <see langword="false" />입니다. 이 경우에는 <paramref name="e" /> 매개 변수에서 <see cref="E:System.Net.Sockets.SocketAsyncEventArgs.Completed" /> 이벤트가 발생하지 않으며, 메서드 호출이 반환된 직후 매개 변수로 전달된 <paramref name="e" /> 개체를 검사하여 작업 결과를 검색할 수 있습니다.</returns>
    </member>
    <member name="M:System.Net.Sockets.Socket.Disconnect(System.Boolean)">
      <summary vsli:raw="Closes the socket connection and allows reuse of the socket.">소켓 연결을 닫고 소켓을 다시 사용할 수 있도록 합니다.</summary>
      <param name="reuseSocket" vsli:raw="&lt;see langword=&quot;true&quot; /&gt; if this socket can be reused after the current connection is closed; otherwise, &lt;see langword=&quot;false&quot; /&gt;.">현재 연결을 닫은 다음 이 소켓을 다시 사용할 수 있으면 <see langword="true" />이고, 그렇지 않으면 <see langword="false" />입니다.</param>
      <exception cref="T:System.ObjectDisposedException" vsli:raw="The &lt;see cref=&quot;T:System.Net.Sockets.Socket&quot; /&gt; object has been closed.">
        <see cref="T:System.Net.Sockets.Socket" /> 개체가 닫힌 경우</exception>
      <exception cref="T:System.Net.Sockets.SocketException" vsli:raw="An error occurred when attempting to access the socket.">소켓에 액세스하는 동안 오류가 발생했습니다.</exception>
    </member>
    <member name="M:System.Net.Sockets.Socket.DisconnectAsync(System.Net.Sockets.SocketAsyncEventArgs)">
      <summary vsli:raw="Begins an asynchronous request to disconnect from a remote endpoint.">원격 엔드포인트와의 연결을 끊는 비동기 요청을 시작합니다.</summary>
      <param name="e" vsli:raw="The &lt;see cref=&quot;T:System.Net.Sockets.SocketAsyncEventArgs&quot; /&gt; object to use for this asynchronous socket operation.">이 비동기 소켓 작업에 사용할 <see cref="T:System.Net.Sockets.SocketAsyncEventArgs" /> 개체입니다.</param>
      <exception cref="T:System.ArgumentNullException" vsli:raw="The &lt;paramref name=&quot;e&quot; /&gt; parameter cannot be null.">
        <paramref name="e" /> 매개 변수가 null인 경우</exception>
      <exception cref="T:System.InvalidOperationException" vsli:raw="A socket operation was already in progress using the &lt;see cref=&quot;T:System.Net.Sockets.SocketAsyncEventArgs&quot; /&gt; object specified in the &lt;paramref name=&quot;e&quot; /&gt; parameter.">
        <paramref name="e" /> 매개 변수에 지정된 <see cref="T:System.Net.Sockets.SocketAsyncEventArgs" /> 개체를 사용하여 소켓 작업이 이미 진행 중인 경우</exception>
      <exception cref="T:System.NotSupportedException">이 메서드에 Windows XP 이상이 필요한 경우.</exception>
      <exception cref="T:System.ObjectDisposedException" vsli:raw="The &lt;see cref=&quot;T:System.Net.Sockets.Socket&quot; /&gt; has been closed.">
        <see cref="T:System.Net.Sockets.Socket" />이 닫혔습니다.</exception>
      <exception cref="T:System.Net.Sockets.SocketException" vsli:raw="An error occurred when attempting to access the socket.">소켓에 액세스하는 동안 오류가 발생했습니다.</exception>
      <returns vsli:raw="&lt;see langword=&quot;true&quot; /&gt; if the I/O operation is pending. The &lt;see cref=&quot;E:System.Net.Sockets.SocketAsyncEventArgs.Completed&quot; /&gt; event on the &lt;paramref name=&quot;e&quot; /&gt; parameter will be raised upon completion of the operation.&#xA;&#xA; &lt;see langword=&quot;false&quot; /&gt; if the I/O operation completed synchronously. In this case, The &lt;see cref=&quot;E:System.Net.Sockets.SocketAsyncEventArgs.Completed&quot; /&gt; event on the &lt;paramref name=&quot;e&quot; /&gt; parameter will not be raised and the &lt;paramref name=&quot;e&quot; /&gt; object passed as a parameter may be examined immediately after the method call returns to retrieve the result of the operation.">I/O 작업이 보류 중인 경우 <see langword="true" />입니다. 작업이 완료되면 <paramref name="e" /> 매개 변수에 대한 <see cref="E:System.Net.Sockets.SocketAsyncEventArgs.Completed" /> 이벤트가 발생합니다.  
  
 I/O 작업이 동기적으로 완료된 경우 <see langword="false" />입니다. 이 경우에는 <paramref name="e" /> 매개 변수에서 <see cref="E:System.Net.Sockets.SocketAsyncEventArgs.Completed" /> 이벤트가 발생하지 않으며, 메서드 호출이 반환된 직후 매개 변수로 전달된 <paramref name="e" /> 개체를 검사하여 작업 결과를 검색할 수 있습니다.</returns>
    </member>
    <member name="M:System.Net.Sockets.Socket.Dispose">
      <summary vsli:raw="Releases all resources used by the current instance of the &lt;see cref=&quot;T:System.Net.Sockets.Socket&quot; /&gt; class.">
        <see cref="T:System.Net.Sockets.Socket" /> 클래스의 현재 인스턴스에서 사용하는 모든 리소스를 해제합니다.</summary>
    </member>
    <member name="M:System.Net.Sockets.Socket.Dispose(System.Boolean)">
      <summary vsli:raw="Releases the unmanaged resources used by the &lt;see cref=&quot;T:System.Net.Sockets.Socket&quot; /&gt;, and optionally disposes of the managed resources.">
        <see cref="T:System.Net.Sockets.Socket" />에서 사용하는 관리되지 않는 리소스를 해제하고, 관리되는 리소스를 선택적으로 삭제할 수 있습니다.</summary>
      <param name="disposing" vsli:raw="&lt;see langword=&quot;true&quot; /&gt; to release both managed and unmanaged resources; &lt;see langword=&quot;false&quot; /&gt; to releases only unmanaged resources.">관리되는 리소스와 관리되지 않는 리소스를 모두 해제하려면 <see langword="true" />, 관리되지 않는 리소스만 해제하려면 <see langword="false" />입니다.</param>
    </member>
    <member name="M:System.Net.Sockets.Socket.DuplicateAndClose(System.Int32)">
      <summary vsli:raw="Duplicates the socket reference for the target process, and closes the socket for this process.">대상 프로세스에 대한 소켓 참조를 복제하고 이 프로세스의 소켓을 닫습니다.</summary>
      <param name="targetProcessId" vsli:raw="The ID of the target process where a duplicate of the socket reference is created.">소켓 참조의 복제본을 만드는 대상 프로세스의 ID입니다.</param>
      <exception cref="T:System.Net.Sockets.SocketException" vsli:raw="&lt;paramref name=&quot;targetProcessID&quot; /&gt; is not a valid process id.&#xA;&#xA;-or-&#xA;&#xA;Duplication of the socket reference failed.">
        <paramref name="targetProcessID" />가 잘못된 프로세스 ID인 경우 
또는 
소켓 참조를 복제하지 못한 경우</exception>
      <returns vsli:raw="The socket reference to be passed to the target process.">대상 프로세스에 전달될 소켓 참조입니다.</returns>
    </member>
    <member name="M:System.Net.Sockets.Socket.EndAccept(System.Byte[]@,System.IAsyncResult)">
      <summary vsli:raw="Asynchronously accepts an incoming connection attempt and creates a new &lt;see cref=&quot;T:System.Net.Sockets.Socket&quot; /&gt; object to handle remote host communication. This method returns a buffer that contains the initial data transferred.">들어오는 연결 시도를 비동기적으로 받아들이고 원격 호스트 통신을 처리할 새 <see cref="T:System.Net.Sockets.Socket" /> 개체를 만듭니다. 이 메서드는 전송된 초기 데이터가 들어 있는 버퍼를 반환합니다.</summary>
      <param name="buffer" vsli:raw="An array of type &lt;see cref=&quot;T:System.Byte&quot; /&gt; that contains the bytes transferred.">전송된 바이트가 들어 있는 <see cref="T:System.Byte" /> 형식의 배열입니다.</param>
      <param name="asyncResult" vsli:raw="An &lt;see cref=&quot;T:System.IAsyncResult&quot; /&gt; object that stores state information for this asynchronous operation as well as any user defined data.">이 비동기 작업에 대한 상태 정보와 모든 사용자 정의 데이터를 저장하는 <see cref="T:System.IAsyncResult" /> 개체입니다.</param>
      <exception cref="T:System.NotSupportedException" vsli:raw="Windows NT is required for this method.">이 메서드에는 Windows NT가 필요합니다.</exception>
      <exception cref="T:System.ObjectDisposedException" vsli:raw=".NET Framework, .NET Core, and .NET 5-6 only: The &lt;see cref=&quot;T:System.Net.Sockets.Socket&quot; /&gt; has been closed.">
        <see cref="T:System.Net.Sockets.Socket" /> 개체가 닫힌 경우</exception>
      <exception cref="T:System.ArgumentNullException" vsli:raw="&lt;paramref name=&quot;asyncResult&quot; /&gt; is empty.">
        <paramref name="asyncResult" />가 비어 있는 경우</exception>
      <exception cref="T:System.ArgumentException" vsli:raw="&lt;paramref name=&quot;asyncResult&quot; /&gt; was not created by a call to &lt;see cref=&quot;M:System.Net.Sockets.Socket.BeginAccept(System.AsyncCallback,System.Object)&quot; /&gt;.">
        <see cref="M:System.Net.Sockets.Socket.BeginAccept(System.AsyncCallback,System.Object)" />를 호출했지만 <paramref name="asyncResult" />가 만들어지지 않은 경우</exception>
      <exception cref="T:System.InvalidOperationException" vsli:raw="&lt;see cref=&quot;M:System.Net.Sockets.Socket.EndAccept(System.IAsyncResult)&quot; /&gt; method was previously called.">
        <see cref="M:System.Net.Sockets.Socket.EndAccept(System.IAsyncResult)" /> 메서드가 이미 호출된 경우</exception>
      <exception cref="T:System.Net.Sockets.SocketException" vsli:raw="An error occurred when attempting to access the socket.&#xA;&#xA;-or-&#xA;&#xA;.NET 7+ only: The &lt;see cref=&quot;T:System.Net.Sockets.Socket&quot; /&gt; has been closed.">
        <see cref="T:System.Net.Sockets.Socket" />에 액세스하려고 시도하는 동안 오류가 발생했습니다.</exception>
      <returns vsli:raw="A &lt;see cref=&quot;T:System.Net.Sockets.Socket&quot; /&gt; object to handle communication with the remote host.">원격 호스트와의 통신을 처리할 <see cref="T:System.Net.Sockets.Socket" /> 개체입니다.</returns>
    </member>
    <member name="M:System.Net.Sockets.Socket.EndAccept(System.Byte[]@,System.Int32@,System.IAsyncResult)">
      <summary vsli:raw="Asynchronously accepts an incoming connection attempt and creates a new &lt;see cref=&quot;T:System.Net.Sockets.Socket&quot; /&gt; object to handle remote host communication. This method returns a buffer that contains the initial data and the number of bytes transferred.">들어오는 연결 시도를 비동기적으로 받아들이고 원격 호스트 통신을 처리할 새 <see cref="T:System.Net.Sockets.Socket" /> 개체를 만듭니다. 이 메서드는 전송된 초기 데이터와 바이트 수가 들어 있는 버퍼를 반환합니다.</summary>
      <param name="buffer" vsli:raw="An array of type &lt;see cref=&quot;T:System.Byte&quot; /&gt; that contains the bytes transferred.">전송된 바이트가 들어 있는 <see cref="T:System.Byte" /> 형식의 배열입니다.</param>
      <param name="bytesTransferred" vsli:raw="The number of bytes transferred.">전송된 바이트 수 입니다.</param>
      <param name="asyncResult" vsli:raw="An &lt;see cref=&quot;T:System.IAsyncResult&quot; /&gt; object that stores state information for this asynchronous operation as well as any user defined data.">이 비동기 작업에 대한 상태 정보와 모든 사용자 정의 데이터를 저장하는 <see cref="T:System.IAsyncResult" /> 개체입니다.</param>
      <exception cref="T:System.NotSupportedException" vsli:raw="Windows NT is required for this method.">이 메서드에는 Windows NT가 필요합니다.</exception>
      <exception cref="T:System.ObjectDisposedException" vsli:raw=".NET Framework, .NET Core, and .NET 5-6 only: The &lt;see cref=&quot;T:System.Net.Sockets.Socket&quot; /&gt; has been closed.">
        <see cref="T:System.Net.Sockets.Socket" /> 개체가 닫힌 경우</exception>
      <exception cref="T:System.ArgumentNullException" vsli:raw="&lt;paramref name=&quot;asyncResult&quot; /&gt; is empty.">
        <paramref name="asyncResult" />가 비어 있는 경우</exception>
      <exception cref="T:System.ArgumentException" vsli:raw="&lt;paramref name=&quot;asyncResult&quot; /&gt; was not created by a call to &lt;see cref=&quot;M:System.Net.Sockets.Socket.BeginAccept(System.AsyncCallback,System.Object)&quot; /&gt;.">
        <see cref="M:System.Net.Sockets.Socket.BeginAccept(System.AsyncCallback,System.Object)" />를 호출했지만 <paramref name="asyncResult" />가 만들어지지 않은 경우</exception>
      <exception cref="T:System.InvalidOperationException" vsli:raw="&lt;see cref=&quot;M:System.Net.Sockets.Socket.EndAccept(System.IAsyncResult)&quot; /&gt; method was previously called.">
        <see cref="M:System.Net.Sockets.Socket.EndAccept(System.IAsyncResult)" /> 메서드가 이미 호출된 경우</exception>
      <exception cref="T:System.Net.Sockets.SocketException" vsli:raw="An error occurred when attempting to access the socket.&#xA;&#xA;-or-&#xA;&#xA;.NET 7+ only: The &lt;see cref=&quot;T:System.Net.Sockets.Socket&quot; /&gt; has been closed.">
        <see cref="T:System.Net.Sockets.Socket" />에 액세스하려고 시도하는 동안 오류가 발생한 경우.</exception>
      <returns vsli:raw="A &lt;see cref=&quot;T:System.Net.Sockets.Socket&quot; /&gt; object to handle communication with the remote host.">원격 호스트와의 통신을 처리할 <see cref="T:System.Net.Sockets.Socket" /> 개체입니다.</returns>
    </member>
    <member name="M:System.Net.Sockets.Socket.EndAccept(System.IAsyncResult)">
      <summary vsli:raw="Asynchronously accepts an incoming connection attempt and creates a new &lt;see cref=&quot;T:System.Net.Sockets.Socket&quot; /&gt; to handle remote host communication.">들어오는 연결 시도를 비동기적으로 받아들이고 원격 호스트 통신을 처리할 새로운 <see cref="T:System.Net.Sockets.Socket" />을 만듭니다.</summary>
      <param name="asyncResult" vsli:raw="An &lt;see cref=&quot;T:System.IAsyncResult&quot; /&gt; that stores state information for this asynchronous operation as well as any user defined data.">모든 사용자 정의 데이터뿐만 아니라 이 비동기 작업에 대한 상태 정보도 저장하는 <see cref="T:System.IAsyncResult" />입니다.</param>
      <exception cref="T:System.ArgumentNullException" vsli:raw="&lt;paramref name=&quot;asyncResult&quot; /&gt; is &lt;see langword=&quot;null&quot; /&gt;.">
        <paramref name="asyncResult" />이(가) <see langword="null" />인 경우</exception>
      <exception cref="T:System.ArgumentException" vsli:raw="&lt;paramref name=&quot;asyncResult&quot; /&gt; was not created by a call to &lt;see cref=&quot;M:System.Net.Sockets.Socket.BeginAccept(System.AsyncCallback,System.Object)&quot; /&gt;.">
        <see cref="M:System.Net.Sockets.Socket.BeginAccept(System.AsyncCallback,System.Object)" />를 호출했지만 <paramref name="asyncResult" />가 만들어지지 않은 경우</exception>
      <exception cref="T:System.Net.Sockets.SocketException" vsli:raw="An error occurred when attempting to access the socket.&#xA;&#xA;-or-&#xA;&#xA;.NET 7+ only: The &lt;see cref=&quot;T:System.Net.Sockets.Socket&quot; /&gt; has been closed.">소켓에 액세스하는 동안 오류가 발생했습니다. 자세한 내용은 설명 부분을 참조하세요.</exception>
      <exception cref="T:System.ObjectDisposedException" vsli:raw=".NET Framework, .NET Core, and .NET 5-6 only: The &lt;see cref=&quot;T:System.Net.Sockets.Socket&quot; /&gt; has been closed.">
        <see cref="T:System.Net.Sockets.Socket" />이 닫혔습니다.</exception>
      <exception cref="T:System.InvalidOperationException" vsli:raw="&lt;see cref=&quot;M:System.Net.Sockets.Socket.EndAccept(System.IAsyncResult)&quot; /&gt; method was previously called.">
        <see cref="M:System.Net.Sockets.Socket.EndAccept(System.IAsyncResult)" /> 메서드가 이미 호출된 경우</exception>
      <exception cref="T:System.NotSupportedException" vsli:raw="Windows NT is required for this method.">이 메서드에는 Windows NT가 필요합니다.</exception>
      <returns vsli:raw="A &lt;see cref=&quot;T:System.Net.Sockets.Socket&quot; /&gt; to handle communication with the remote host.">원격 호스트와의 통신을 처리할 <see cref="T:System.Net.Sockets.Socket" />입니다.</returns>
    </member>
    <member name="M:System.Net.Sockets.Socket.EndConnect(System.IAsyncResult)">
      <summary vsli:raw="Ends a pending asynchronous connection request.">보류 중인 비동기 연결 요청을 끝냅니다.</summary>
      <param name="asyncResult" vsli:raw="An &lt;see cref=&quot;T:System.IAsyncResult&quot; /&gt; that stores state information and any user defined data for this asynchronous operation.">이 비동기 작업에 대한 상태 정보 및 사용자 정의 데이터를 저장하는 <see cref="T:System.IAsyncResult" />입니다.</param>
      <exception cref="T:System.ArgumentNullException" vsli:raw="&lt;paramref name=&quot;asyncResult&quot; /&gt; is &lt;see langword=&quot;null&quot; /&gt;.">
        <paramref name="asyncResult" />이(가) <see langword="null" />인 경우</exception>
      <exception cref="T:System.ArgumentException" vsli:raw="&lt;paramref name=&quot;asyncResult&quot; /&gt; was not returned by a call to the &lt;see cref=&quot;M:System.Net.Sockets.Socket.BeginConnect(System.Net.EndPoint,System.AsyncCallback,System.Object)&quot; /&gt; method.">
        <see cref="M:System.Net.Sockets.Socket.BeginConnect(System.Net.EndPoint,System.AsyncCallback,System.Object)" /> 메서드를 호출했지만 <paramref name="asyncResult" />가 반환되지 않은 경우</exception>
      <exception cref="T:System.InvalidOperationException" vsli:raw="&lt;see cref=&quot;M:System.Net.Sockets.Socket.EndConnect(System.IAsyncResult)&quot; /&gt; was previously called for the asynchronous connection.">
        <see cref="M:System.Net.Sockets.Socket.EndConnect(System.IAsyncResult)" />가 비동기 연결을 위해 이미 호출된 경우</exception>
      <exception cref="T:System.Net.Sockets.SocketException" vsli:raw="An error occurred when attempting to access the socket.&#xA;&#xA;-or-&#xA;&#xA;.NET 7+ only: The &lt;see cref=&quot;T:System.Net.Sockets.Socket&quot; /&gt; has been closed.">소켓에 액세스하는 동안 오류가 발생했습니다.</exception>
      <exception cref="T:System.ObjectDisposedException" vsli:raw=".NET Framework, .NET Core, and .NET 5-6 only: The &lt;see cref=&quot;T:System.Net.Sockets.Socket&quot; /&gt; has been closed.">
        <see cref="T:System.Net.Sockets.Socket" />이 닫혔습니다.</exception>
    </member>
    <member name="M:System.Net.Sockets.Socket.EndDisconnect(System.IAsyncResult)">
      <summary vsli:raw="Ends a pending asynchronous disconnect request.">보류 중인 비동기 연결 끊기 요청을 끝냅니다.</summary>
      <param name="asyncResult" vsli:raw="An &lt;see cref=&quot;T:System.IAsyncResult&quot; /&gt; object that stores state information and any user-defined data for this asynchronous operation.">이 비동기 작업에 대한 상태 정보와 사용자 정의 데이터를 저장하는 <see cref="T:System.IAsyncResult" /> 개체입니다.</param>
      <exception cref="T:System.ObjectDisposedException" vsli:raw=".NET Framework, .NET Core, and .NET 5-6 only: The &lt;see cref=&quot;T:System.Net.Sockets.Socket&quot; /&gt; has been closed.">
        <see cref="T:System.Net.Sockets.Socket" /> 개체가 닫힌 경우</exception>
      <exception cref="T:System.ArgumentNullException" vsli:raw="&lt;paramref name=&quot;asyncResult&quot; /&gt; is &lt;see langword=&quot;null&quot; /&gt;.">
        <paramref name="asyncResult" />이(가) <see langword="null" />인 경우</exception>
      <exception cref="T:System.ArgumentException" vsli:raw="&lt;paramref name=&quot;asyncResult&quot; /&gt; was not returned by a call to the &lt;see cref=&quot;M:System.Net.Sockets.Socket.BeginDisconnect(System.Boolean,System.AsyncCallback,System.Object)&quot; /&gt; method.">
        <see cref="M:System.Net.Sockets.Socket.BeginDisconnect(System.Boolean,System.AsyncCallback,System.Object)" /> 메서드를 호출했지만 <paramref name="asyncResult" />가 반환되지 않은 경우</exception>
      <exception cref="T:System.InvalidOperationException" vsli:raw="&lt;see cref=&quot;M:System.Net.Sockets.Socket.EndDisconnect(System.IAsyncResult)&quot; /&gt; was previously called for the asynchronous connection.">
        <see cref="M:System.Net.Sockets.Socket.EndDisconnect(System.IAsyncResult)" />가 비동기 연결을 위해 이미 호출된 경우</exception>
      <exception cref="T:System.Net.Sockets.SocketException" vsli:raw="An error occurred when attempting to access the socket.&#xA;&#xA;-or-&#xA;&#xA;.NET 7+ only: The &lt;see cref=&quot;T:System.Net.Sockets.Socket&quot; /&gt; has been closed.">소켓에 액세스하는 동안 오류가 발생했습니다.</exception>
      <exception cref="T:System.Net.WebException" vsli:raw="The disconnect request has timed out.">연결 끊기 요청 시간이 초과된 경우</exception>
    </member>
    <member name="M:System.Net.Sockets.Socket.EndReceive(System.IAsyncResult)">
      <summary vsli:raw="Ends a pending asynchronous read.">보류 중인 비동기 읽기를 끝냅니다.</summary>
      <param name="asyncResult" vsli:raw="An &lt;see cref=&quot;T:System.IAsyncResult&quot; /&gt; that stores state information and any user defined data for this asynchronous operation.">이 비동기 작업에 대한 상태 정보 및 사용자 정의 데이터를 저장하는 <see cref="T:System.IAsyncResult" />입니다.</param>
      <exception cref="T:System.ArgumentNullException" vsli:raw="&lt;paramref name=&quot;asyncResult&quot; /&gt; is &lt;see langword=&quot;null&quot; /&gt;.">
        <paramref name="asyncResult" />이(가) <see langword="null" />인 경우</exception>
      <exception cref="T:System.ArgumentException" vsli:raw="&lt;paramref name=&quot;asyncResult&quot; /&gt; was not returned by a call to the &lt;see cref=&quot;M:System.Net.Sockets.Socket.BeginReceive(System.Byte[],System.Int32,System.Int32,System.Net.Sockets.SocketFlags,System.AsyncCallback,System.Object)&quot; /&gt; method.">
        <see cref="M:System.Net.Sockets.Socket.BeginReceive(System.Byte[],System.Int32,System.Int32,System.Net.Sockets.SocketFlags,System.AsyncCallback,System.Object)" /> 메서드를 호출했지만 <paramref name="asyncResult" />가 반환되지 않은 경우</exception>
      <exception cref="T:System.InvalidOperationException" vsli:raw="&lt;see cref=&quot;M:System.Net.Sockets.Socket.EndReceive(System.IAsyncResult)&quot; /&gt; was previously called for the asynchronous read.">
        <see cref="M:System.Net.Sockets.Socket.EndReceive(System.IAsyncResult)" />가 비동기 읽기를 위해 이미 호출된 경우</exception>
      <exception cref="T:System.Net.Sockets.SocketException" vsli:raw="An error occurred when attempting to access the socket.&#xA;&#xA;-or-&#xA;&#xA;.NET 7+ only: The &lt;see cref=&quot;T:System.Net.Sockets.Socket&quot; /&gt; has been closed.">소켓에 액세스하는 동안 오류가 발생했습니다.</exception>
      <exception cref="T:System.ObjectDisposedException" vsli:raw=".NET Framework, .NET Core, and .NET 5-6 only: The &lt;see cref=&quot;T:System.Net.Sockets.Socket&quot; /&gt; has been closed.">
        <see cref="T:System.Net.Sockets.Socket" />이 닫혔습니다.</exception>
      <returns vsli:raw="The number of bytes received.">받은 바이트 수입니다.</returns>
    </member>
    <member name="M:System.Net.Sockets.Socket.EndReceive(System.IAsyncResult,System.Net.Sockets.SocketError@)">
      <summary vsli:raw="Ends a pending asynchronous read.">보류 중인 비동기 읽기를 끝냅니다.</summary>
      <param name="asyncResult" vsli:raw="An &lt;see cref=&quot;T:System.IAsyncResult&quot; /&gt; that stores state information and any user defined data for this asynchronous operation.">이 비동기 작업에 대한 상태 정보 및 사용자 정의 데이터를 저장하는 <see cref="T:System.IAsyncResult" />입니다.</param>
      <param name="errorCode" vsli:raw="A &lt;see cref=&quot;T:System.Net.Sockets.SocketError&quot; /&gt; object that stores the socket error.">소켓 오류를 저장하는 <see cref="T:System.Net.Sockets.SocketError" /> 개체입니다.</param>
      <exception cref="T:System.ArgumentNullException" vsli:raw="&lt;paramref name=&quot;asyncResult&quot; /&gt; is &lt;see langword=&quot;null&quot; /&gt;.">
        <paramref name="asyncResult" />이(가) <see langword="null" />인 경우</exception>
      <exception cref="T:System.ArgumentException" vsli:raw="&lt;paramref name=&quot;asyncResult&quot; /&gt; was not returned by a call to the &lt;see cref=&quot;M:System.Net.Sockets.Socket.BeginReceive(System.Byte[],System.Int32,System.Int32,System.Net.Sockets.SocketFlags,System.AsyncCallback,System.Object)&quot; /&gt; method.">
        <see cref="M:System.Net.Sockets.Socket.BeginReceive(System.Byte[],System.Int32,System.Int32,System.Net.Sockets.SocketFlags,System.AsyncCallback,System.Object)" /> 메서드를 호출했지만 <paramref name="asyncResult" />가 반환되지 않은 경우</exception>
      <exception cref="T:System.InvalidOperationException" vsli:raw="&lt;see cref=&quot;M:System.Net.Sockets.Socket.EndReceive(System.IAsyncResult)&quot; /&gt; was previously called for the asynchronous read.">
        <see cref="M:System.Net.Sockets.Socket.EndReceive(System.IAsyncResult)" />가 비동기 읽기를 위해 이미 호출된 경우</exception>
      <exception cref="T:System.Net.Sockets.SocketException" vsli:raw="An error occurred when attempting to access the socket.&#xA;&#xA;-or-&#xA;&#xA;.NET 7+ only: The &lt;see cref=&quot;T:System.Net.Sockets.Socket&quot; /&gt; has been closed.">소켓에 액세스하는 동안 오류가 발생했습니다.</exception>
      <exception cref="T:System.ObjectDisposedException" vsli:raw=".NET Framework, .NET Core, and .NET 5-6 only: The &lt;see cref=&quot;T:System.Net.Sockets.Socket&quot; /&gt; has been closed.">
        <see cref="T:System.Net.Sockets.Socket" />이 닫혔습니다.</exception>
      <returns vsli:raw="The number of bytes received.">받은 바이트 수입니다.</returns>
    </member>
    <member name="M:System.Net.Sockets.Socket.EndReceiveFrom(System.IAsyncResult,System.Net.EndPoint@)">
      <summary vsli:raw="Ends a pending asynchronous read from a specific endpoint.">특정 엔드포인트에서 보류 중인 비동기 읽기를 끝냅니다.</summary>
      <param name="asyncResult" vsli:raw="An &lt;see cref=&quot;T:System.IAsyncResult&quot; /&gt; that stores state information and any user defined data for this asynchronous operation.">이 비동기 작업에 대한 상태 정보 및 사용자 정의 데이터를 저장하는 <see cref="T:System.IAsyncResult" />입니다.</param>
      <param name="endPoint" vsli:raw="The source &lt;see cref=&quot;T:System.Net.EndPoint&quot; /&gt;.">소스 <see cref="T:System.Net.EndPoint" />입니다.</param>
      <exception cref="T:System.ArgumentNullException" vsli:raw="&lt;paramref name=&quot;asyncResult&quot; /&gt; is &lt;see langword=&quot;null&quot; /&gt;.">
        <paramref name="asyncResult" />이(가) <see langword="null" />인 경우</exception>
      <exception cref="T:System.ArgumentException" vsli:raw="&lt;paramref name=&quot;asyncResult&quot; /&gt; was not returned by a call to the &lt;see cref=&quot;M:System.Net.Sockets.Socket.BeginReceiveFrom(System.Byte[],System.Int32,System.Int32,System.Net.Sockets.SocketFlags,System.Net.EndPoint@,System.AsyncCallback,System.Object)&quot; /&gt; method.">
        <see cref="M:System.Net.Sockets.Socket.BeginReceiveFrom(System.Byte[],System.Int32,System.Int32,System.Net.Sockets.SocketFlags,System.Net.EndPoint@,System.AsyncCallback,System.Object)" /> 메서드를 호출했지만 <paramref name="asyncResult" />가 반환되지 않은 경우</exception>
      <exception cref="T:System.InvalidOperationException" vsli:raw="&lt;see cref=&quot;M:System.Net.Sockets.Socket.EndReceiveFrom(System.IAsyncResult,System.Net.EndPoint@)&quot; /&gt; was previously called for the asynchronous read.">
        <see cref="M:System.Net.Sockets.Socket.EndReceiveFrom(System.IAsyncResult,System.Net.EndPoint@)" />가 비동기 읽기를 위해 이미 호출된 경우</exception>
      <exception cref="T:System.Net.Sockets.SocketException" vsli:raw="An error occurred when attempting to access the socket.&#xA;&#xA;-or-&#xA;&#xA;.NET 7+ only: The &lt;see cref=&quot;T:System.Net.Sockets.Socket&quot; /&gt; has been closed.">소켓에 액세스하는 동안 오류가 발생했습니다.</exception>
      <exception cref="T:System.ObjectDisposedException" vsli:raw=".NET Framework, .NET Core, and .NET 5-6 only: The &lt;see cref=&quot;T:System.Net.Sockets.Socket&quot; /&gt; has been closed.">
        <see cref="T:System.Net.Sockets.Socket" />이 닫혔습니다.</exception>
      <returns vsli:raw="If successful, the number of bytes received. If unsuccessful, returns 0.">성공할 경우 받은 바이트 수입니다. 실패하면 0을 반환합니다.</returns>
    </member>
    <member name="M:System.Net.Sockets.Socket.EndReceiveMessageFrom(System.IAsyncResult,System.Net.Sockets.SocketFlags@,System.Net.EndPoint@,System.Net.Sockets.IPPacketInformation@)">
      <summary vsli:raw="Ends a pending asynchronous read from a specific endpoint. This method also reveals more information about the packet than &lt;see cref=&quot;M:System.Net.Sockets.Socket.EndReceiveFrom(System.IAsyncResult,System.Net.EndPoint@)&quot; /&gt;.">특정 엔드포인트에서 보류 중인 비동기 읽기를 끝냅니다. 또한 이 메서드는 패킷에 대해 <see cref="M:System.Net.Sockets.Socket.EndReceiveFrom(System.IAsyncResult,System.Net.EndPoint@)" />이 제공하는 것보다 많은 정보를 제공합니다.</summary>
      <param name="asyncResult" vsli:raw="An &lt;see cref=&quot;T:System.IAsyncResult&quot; /&gt; that stores state information and any user defined data for this asynchronous operation.">이 비동기 작업에 대한 상태 정보 및 사용자 정의 데이터를 저장하는 <see cref="T:System.IAsyncResult" />입니다.</param>
      <param name="socketFlags" vsli:raw="A bitwise combination of the &lt;see cref=&quot;T:System.Net.Sockets.SocketFlags&quot; /&gt; values for the received packet.">받은 패킷에 대한 <see cref="T:System.Net.Sockets.SocketFlags" /> 값의 비트 조합입니다.</param>
      <param name="endPoint" vsli:raw="The source &lt;see cref=&quot;T:System.Net.EndPoint&quot; /&gt;.">소스 <see cref="T:System.Net.EndPoint" />입니다.</param>
      <param name="ipPacketInformation" vsli:raw="The &lt;see cref=&quot;T:System.Net.IPAddress&quot; /&gt; and interface of the received packet.">받은 패킷의 <see cref="T:System.Net.IPAddress" /> 및 인터페이스입니다.</param>
      <exception cref="T:System.ArgumentNullException" vsli:raw="&lt;paramref name=&quot;asyncResult&quot; /&gt; is &lt;see langword=&quot;null&quot; /&gt;&#xA;&#xA; -or-&#xA;&#xA; &lt;paramref name=&quot;endPoint&quot; /&gt; is &lt;see langword=&quot;null&quot; /&gt;.">
        <paramref name="asyncResult" />가 <see langword="null" />인 경우  
  
또는 
 <paramref name="endPoint" />이(가) <see langword="null" />인 경우</exception>
      <exception cref="T:System.ArgumentException" vsli:raw="&lt;paramref name=&quot;asyncResult&quot; /&gt; was not returned by a call to the &lt;see cref=&quot;M:System.Net.Sockets.Socket.BeginReceiveMessageFrom(System.Byte[],System.Int32,System.Int32,System.Net.Sockets.SocketFlags,System.Net.EndPoint@,System.AsyncCallback,System.Object)&quot; /&gt; method.">
        <see cref="M:System.Net.Sockets.Socket.BeginReceiveMessageFrom(System.Byte[],System.Int32,System.Int32,System.Net.Sockets.SocketFlags,System.Net.EndPoint@,System.AsyncCallback,System.Object)" /> 메서드를 호출했지만 <paramref name="asyncResult" />가 반환되지 않은 경우</exception>
      <exception cref="T:System.InvalidOperationException" vsli:raw="&lt;see cref=&quot;M:System.Net.Sockets.Socket.EndReceiveMessageFrom(System.IAsyncResult,System.Net.Sockets.SocketFlags@,System.Net.EndPoint@,System.Net.Sockets.IPPacketInformation@)&quot; /&gt; was previously called for the asynchronous read.">
        <see cref="M:System.Net.Sockets.Socket.EndReceiveMessageFrom(System.IAsyncResult,System.Net.Sockets.SocketFlags@,System.Net.EndPoint@,System.Net.Sockets.IPPacketInformation@)" />가 비동기 읽기를 위해 이미 호출된 경우</exception>
      <exception cref="T:System.Net.Sockets.SocketException" vsli:raw="An error occurred when attempting to access the socket.&#xA;&#xA;-or-&#xA;&#xA;.NET 7+ only: The &lt;see cref=&quot;T:System.Net.Sockets.Socket&quot; /&gt; has been closed.">소켓에 액세스하는 동안 오류가 발생했습니다.</exception>
      <exception cref="T:System.ObjectDisposedException" vsli:raw=".NET Framework, .NET Core, and .NET 5-6 only: The &lt;see cref=&quot;T:System.Net.Sockets.Socket&quot; /&gt; has been closed.">
        <see cref="T:System.Net.Sockets.Socket" />이 닫혔습니다.</exception>
      <returns vsli:raw="If successful, the number of bytes received. If unsuccessful, returns 0.">성공할 경우 받은 바이트 수입니다. 실패하면 0을 반환합니다.</returns>
    </member>
    <member name="M:System.Net.Sockets.Socket.EndSend(System.IAsyncResult)">
      <summary vsli:raw="Ends a pending asynchronous send.">보류 중인 비동기 보내기를 끝냅니다.</summary>
      <param name="asyncResult" vsli:raw="An &lt;see cref=&quot;T:System.IAsyncResult&quot; /&gt; that stores state information for this asynchronous operation.">이 비동기 작업에 대한 상태 정보를 저장하는 <see cref="T:System.IAsyncResult" />입니다.</param>
      <exception cref="T:System.ArgumentNullException" vsli:raw="&lt;paramref name=&quot;asyncResult&quot; /&gt; is &lt;see langword=&quot;null&quot; /&gt;.">
        <paramref name="asyncResult" />이(가) <see langword="null" />인 경우</exception>
      <exception cref="T:System.ArgumentException" vsli:raw="&lt;paramref name=&quot;asyncResult&quot; /&gt; was not returned by a call to the &lt;see cref=&quot;M:System.Net.Sockets.Socket.BeginSend(System.Byte[],System.Int32,System.Int32,System.Net.Sockets.SocketFlags,System.AsyncCallback,System.Object)&quot; /&gt; method.">
        <see cref="M:System.Net.Sockets.Socket.BeginSend(System.Byte[],System.Int32,System.Int32,System.Net.Sockets.SocketFlags,System.AsyncCallback,System.Object)" /> 메서드를 호출했지만 <paramref name="asyncResult" />가 반환되지 않은 경우</exception>
      <exception cref="T:System.InvalidOperationException" vsli:raw="&lt;see cref=&quot;M:System.Net.Sockets.Socket.EndSend(System.IAsyncResult)&quot; /&gt; was previously called for the asynchronous send.">
        <see cref="M:System.Net.Sockets.Socket.EndSend(System.IAsyncResult)" />가 비동기 보내기를 위해 이미 호출된 경우</exception>
      <exception cref="T:System.Net.Sockets.SocketException" vsli:raw="An error occurred when attempting to access the socket.&#xA;&#xA;-or-&#xA;&#xA;.NET 7+ only: The &lt;see cref=&quot;T:System.Net.Sockets.Socket&quot; /&gt; has been closed.">소켓에 액세스하는 동안 오류가 발생했습니다.</exception>
      <exception cref="T:System.ObjectDisposedException" vsli:raw=".NET Framework, .NET Core, and .NET 5-6 only: The &lt;see cref=&quot;T:System.Net.Sockets.Socket&quot; /&gt; has been closed.">
        <see cref="T:System.Net.Sockets.Socket" />이 닫혔습니다.</exception>
      <returns vsli:raw="If successful, the number of bytes sent to the &lt;see cref=&quot;T:System.Net.Sockets.Socket&quot; /&gt;; otherwise, an invalid &lt;see cref=&quot;T:System.Net.Sockets.Socket&quot; /&gt; error.">성공적이면 <see cref="T:System.Net.Sockets.Socket" />에 보낸 바이트 수이고, 그렇지 않으면 잘못된 <see cref="T:System.Net.Sockets.Socket" /> 오류입니다.</returns>
    </member>
    <member name="M:System.Net.Sockets.Socket.EndSend(System.IAsyncResult,System.Net.Sockets.SocketError@)">
      <summary vsli:raw="Ends a pending asynchronous send.">보류 중인 비동기 보내기를 끝냅니다.</summary>
      <param name="asyncResult" vsli:raw="An &lt;see cref=&quot;T:System.IAsyncResult&quot; /&gt; that stores state information for this asynchronous operation.">이 비동기 작업에 대한 상태 정보를 저장하는 <see cref="T:System.IAsyncResult" />입니다.</param>
      <param name="errorCode" vsli:raw="A &lt;see cref=&quot;T:System.Net.Sockets.SocketError&quot; /&gt; object that stores the socket error.">소켓 오류를 저장하는 <see cref="T:System.Net.Sockets.SocketError" /> 개체입니다.</param>
      <exception cref="T:System.ArgumentNullException" vsli:raw="&lt;paramref name=&quot;asyncResult&quot; /&gt; is &lt;see langword=&quot;null&quot; /&gt;.">
        <paramref name="asyncResult" />이(가) <see langword="null" />인 경우</exception>
      <exception cref="T:System.ArgumentException" vsli:raw="&lt;paramref name=&quot;asyncResult&quot; /&gt; was not returned by a call to the &lt;see cref=&quot;M:System.Net.Sockets.Socket.BeginSend(System.Byte[],System.Int32,System.Int32,System.Net.Sockets.SocketFlags,System.AsyncCallback,System.Object)&quot; /&gt; method.">
        <see cref="M:System.Net.Sockets.Socket.BeginSend(System.Byte[],System.Int32,System.Int32,System.Net.Sockets.SocketFlags,System.AsyncCallback,System.Object)" /> 메서드를 호출했지만 <paramref name="asyncResult" />가 반환되지 않은 경우</exception>
      <exception cref="T:System.InvalidOperationException" vsli:raw="&lt;see cref=&quot;M:System.Net.Sockets.Socket.EndSend(System.IAsyncResult)&quot; /&gt; was previously called for the asynchronous send.">
        <see cref="M:System.Net.Sockets.Socket.EndSend(System.IAsyncResult)" />가 비동기 보내기를 위해 이미 호출된 경우</exception>
      <exception cref="T:System.Net.Sockets.SocketException" vsli:raw="An error occurred when attempting to access the socket.&#xA;&#xA;-or-&#xA;&#xA;.NET 7+ only: The &lt;see cref=&quot;T:System.Net.Sockets.Socket&quot; /&gt; has been closed.">소켓에 액세스하는 동안 오류가 발생했습니다.</exception>
      <exception cref="T:System.ObjectDisposedException" vsli:raw=".NET Framework, .NET Core, and .NET 5-6 only: The &lt;see cref=&quot;T:System.Net.Sockets.Socket&quot; /&gt; has been closed.">
        <see cref="T:System.Net.Sockets.Socket" />이 닫혔습니다.</exception>
      <returns vsli:raw="If successful, the number of bytes sent to the &lt;see cref=&quot;T:System.Net.Sockets.Socket&quot; /&gt;; otherwise, an invalid &lt;see cref=&quot;T:System.Net.Sockets.Socket&quot; /&gt; error.">성공적이면 <see cref="T:System.Net.Sockets.Socket" />에 보낸 바이트 수이고, 그렇지 않으면 잘못된 <see cref="T:System.Net.Sockets.Socket" /> 오류입니다.</returns>
    </member>
    <member name="M:System.Net.Sockets.Socket.EndSendFile(System.IAsyncResult)">
      <summary vsli:raw="Ends a pending asynchronous send of a file.">보류 중인 비동기 파일 보내기를 끝냅니다.</summary>
      <param name="asyncResult" vsli:raw="An &lt;see cref=&quot;T:System.IAsyncResult&quot; /&gt; object that stores state information for this asynchronous operation.">이 비동기 작업에 대한 상태 정보를 저장하는 <see cref="T:System.IAsyncResult" /> 개체입니다.</param>
      <exception cref="T:System.NotSupportedException" vsli:raw="Windows NT is required for this method.">이 메서드에는 Windows NT가 필요합니다.</exception>
      <exception cref="T:System.ObjectDisposedException" vsli:raw=".NET Framework, .NET Core, and .NET 5-6 only: The &lt;see cref=&quot;T:System.Net.Sockets.Socket&quot; /&gt; has been closed.">
        <see cref="T:System.Net.Sockets.Socket" /> 개체가 닫힌 경우</exception>
      <exception cref="T:System.ArgumentNullException" vsli:raw="&lt;paramref name=&quot;asyncResult&quot; /&gt; is empty.">
        <paramref name="asyncResult" />가 비어 있는 경우</exception>
      <exception cref="T:System.ArgumentException" vsli:raw="&lt;paramref name=&quot;asyncResult&quot; /&gt; was not returned by a call to the &lt;see cref=&quot;M:System.Net.Sockets.Socket.BeginSendFile(System.String,System.AsyncCallback,System.Object)&quot; /&gt; method.">
        <see cref="M:System.Net.Sockets.Socket.BeginSendFile(System.String,System.AsyncCallback,System.Object)" /> 메서드를 호출했지만 <paramref name="asyncResult" />가 반환되지 않은 경우</exception>
      <exception cref="T:System.InvalidOperationException" vsli:raw="&lt;see cref=&quot;M:System.Net.Sockets.Socket.EndSendFile(System.IAsyncResult)&quot; /&gt; was previously called for the asynchronous &lt;see cref=&quot;M:System.Net.Sockets.Socket.BeginSendFile(System.String,System.AsyncCallback,System.Object)&quot; /&gt;.">
        <see cref="M:System.Net.Sockets.Socket.EndSendFile(System.IAsyncResult)" />이 비동기 <see cref="M:System.Net.Sockets.Socket.BeginSendFile(System.String,System.AsyncCallback,System.Object)" />을 위해 이미 호출된 경우</exception>
      <exception cref="T:System.Net.Sockets.SocketException" vsli:raw="An error occurred when attempting to access the socket.&#xA;&#xA;-or-&#xA;&#xA;.NET 7+ only: The &lt;see cref=&quot;T:System.Net.Sockets.Socket&quot; /&gt; has been closed.">소켓에 액세스하는 동안 오류가 발생했습니다. 아래의 설명 부분을 참조하십시오.</exception>
    </member>
    <member name="M:System.Net.Sockets.Socket.EndSendTo(System.IAsyncResult)">
      <summary vsli:raw="Ends a pending asynchronous send to a specific location.">특정 위치로의 보류 중인 비동기 보내기를 끝냅니다.</summary>
      <param name="asyncResult" vsli:raw="An &lt;see cref=&quot;T:System.IAsyncResult&quot; /&gt; that stores state information and any user defined data for this asynchronous operation.">이 비동기 작업에 대한 상태 정보 및 사용자 정의 데이터를 저장하는 <see cref="T:System.IAsyncResult" />입니다.</param>
      <exception cref="T:System.ArgumentNullException" vsli:raw="&lt;paramref name=&quot;asyncResult&quot; /&gt; is &lt;see langword=&quot;null&quot; /&gt;.">
        <paramref name="asyncResult" />이(가) <see langword="null" />인 경우</exception>
      <exception cref="T:System.ArgumentException" vsli:raw="&lt;paramref name=&quot;asyncResult&quot; /&gt; was not returned by a call to the &lt;see cref=&quot;M:System.Net.Sockets.Socket.BeginSendTo(System.Byte[],System.Int32,System.Int32,System.Net.Sockets.SocketFlags,System.Net.EndPoint,System.AsyncCallback,System.Object)&quot; /&gt; method.">
        <see cref="M:System.Net.Sockets.Socket.BeginSendTo(System.Byte[],System.Int32,System.Int32,System.Net.Sockets.SocketFlags,System.Net.EndPoint,System.AsyncCallback,System.Object)" /> 메서드를 호출했지만 <paramref name="asyncResult" />가 반환되지 않은 경우</exception>
      <exception cref="T:System.InvalidOperationException" vsli:raw="&lt;see cref=&quot;M:System.Net.Sockets.Socket.EndSendTo(System.IAsyncResult)&quot; /&gt; was previously called for the asynchronous send.">
        <see cref="M:System.Net.Sockets.Socket.EndSendTo(System.IAsyncResult)" />가 비동기 보내기를 위해 이미 호출된 경우</exception>
      <exception cref="T:System.Net.Sockets.SocketException" vsli:raw="An error occurred when attempting to access the socket.&#xA;&#xA;-or-&#xA;&#xA;.NET 7+ only: The &lt;see cref=&quot;T:System.Net.Sockets.Socket&quot; /&gt; has been closed.">소켓에 액세스하는 동안 오류가 발생했습니다.</exception>
      <exception cref="T:System.ObjectDisposedException" vsli:raw=".NET Framework, .NET Core, and .NET 5-6 only: The &lt;see cref=&quot;T:System.Net.Sockets.Socket&quot; /&gt; has been closed.">
        <see cref="T:System.Net.Sockets.Socket" />이 닫혔습니다.</exception>
      <returns vsli:raw="If successful, the number of bytes sent; otherwise, an invalid &lt;see cref=&quot;T:System.Net.Sockets.Socket&quot; /&gt; error.">성공적이면 보낸 바이트 수이고, 그렇지 않으면 잘못된 <see cref="T:System.Net.Sockets.Socket" /> 오류입니다.</returns>
    </member>
    <member name="M:System.Net.Sockets.Socket.Finalize">
      <summary vsli:raw="Frees resources used by the &lt;see cref=&quot;T:System.Net.Sockets.Socket&quot; /&gt; class.">
        <see cref="T:System.Net.Sockets.Socket" /> 클래스에서 사용한 리소스를 해제합니다.</summary>
    </member>
    <member name="M:System.Net.Sockets.Socket.GetRawSocketOption(System.Int32,System.Int32,System.Span{System.Byte})">
      <summary vsli:raw="Gets a socket option value using platform-specific level and name identifiers.">플랫폼별 수준 및 이름 식별자를 사용하여 소켓 옵션 값을 가져옵니다.</summary>
      <param name="optionLevel" vsli:raw="The platform-defined option level.">플랫폼 정의 옵션 수준입니다.</param>
      <param name="optionName" vsli:raw="The platform-defined option name.">플랫폼 정의 옵션 이름입니다.</param>
      <param name="optionValue" vsli:raw="The span into which the retrieved option value should be stored.">검색된 옵션 값을 저장해야 하는 범위입니다.</param>
      <exception cref="T:System.ObjectDisposedException" vsli:raw="The &lt;see cref=&quot;T:System.Net.Sockets.Socket&quot; /&gt; has been closed.">
        <see cref="T:System.Net.Sockets.Socket" />이 닫혔습니다.</exception>
      <exception cref="T:System.Net.Sockets.SocketException" vsli:raw="An error occurred when attempting to access the socket.">소켓에 액세스하는 동안 오류가 발생했습니다.</exception>
      <returns vsli:raw="The number of bytes written into &lt;paramref name=&quot;optionValue&quot; /&gt; for a successfully retrieved value.">성공적으로 검색된 값에 대해 <paramref name="optionValue" />에 쓴 바이트 수입니다.</returns>
    </member>
    <member name="M:System.Net.Sockets.Socket.GetSocketOption(System.Net.Sockets.SocketOptionLevel,System.Net.Sockets.SocketOptionName)">
      <summary vsli:raw="Returns the value of a specified &lt;see cref=&quot;T:System.Net.Sockets.Socket&quot; /&gt; option, represented as an object.">개체로 나타내는 지정된 <see cref="T:System.Net.Sockets.Socket" /> 옵션 값을 반환합니다.</summary>
      <param name="optionLevel" vsli:raw="One of the &lt;see cref=&quot;T:System.Net.Sockets.SocketOptionLevel&quot; /&gt; values.">
        <see cref="T:System.Net.Sockets.SocketOptionLevel" /> 값 중 하나입니다.</param>
      <param name="optionName" vsli:raw="One of the &lt;see cref=&quot;T:System.Net.Sockets.SocketOptionName&quot; /&gt; values.">
        <see cref="T:System.Net.Sockets.SocketOptionName" /> 값 중 하나입니다.</param>
      <exception cref="T:System.Net.Sockets.SocketException" vsli:raw="An error occurred when attempting to access the socket.&#xA;&#xA; -or-&#xA;&#xA; &lt;paramref name=&quot;optionName&quot; /&gt; was set to the unsupported value &lt;see cref=&quot;F:System.Net.Sockets.SocketOptionName.MaxConnections&quot; /&gt;.">소켓에 액세스하는 동안 오류가 발생했습니다.  
  
또는 
 <paramref name="optionName" />이 지원되지 않는 값인 <see cref="F:System.Net.Sockets.SocketOptionName.MaxConnections" />로 설정된 경우</exception>
      <exception cref="T:System.ObjectDisposedException" vsli:raw="The &lt;see cref=&quot;T:System.Net.Sockets.Socket&quot; /&gt; has been closed.">
        <see cref="T:System.Net.Sockets.Socket" />이 닫혔습니다.</exception>
      <returns vsli:raw="An object that represents the value of the option. When the &lt;paramref name=&quot;optionName&quot; /&gt; parameter is set to &lt;see cref=&quot;F:System.Net.Sockets.SocketOptionName.Linger&quot; /&gt; the return value is an instance of the &lt;see cref=&quot;T:System.Net.Sockets.LingerOption&quot; /&gt; class. When &lt;paramref name=&quot;optionName&quot; /&gt; is set to &lt;see cref=&quot;F:System.Net.Sockets.SocketOptionName.AddMembership&quot; /&gt; or &lt;see cref=&quot;F:System.Net.Sockets.SocketOptionName.DropMembership&quot; /&gt;, the return value is an instance of the &lt;see cref=&quot;T:System.Net.Sockets.MulticastOption&quot; /&gt; class. When &lt;paramref name=&quot;optionName&quot; /&gt; is any other value, the return value is an integer.">옵션 값을 나타내는 개체입니다. <paramref name="optionName" /> 매개 변수가 <see cref="F:System.Net.Sockets.SocketOptionName.Linger" />로 설정되면 반환 값은 <see cref="T:System.Net.Sockets.LingerOption" /> 클래스의 인스턴스입니다. <paramref name="optionName" />이 <see cref="F:System.Net.Sockets.SocketOptionName.AddMembership" />이나 <see cref="F:System.Net.Sockets.SocketOptionName.DropMembership" />으로 설정되면 반환 값은 <see cref="T:System.Net.Sockets.MulticastOption" /> 클래스의 인스턴스입니다. <paramref name="optionName" />이 다른 값이면 반환 값은 정수입니다.</returns>
    </member>
    <member name="M:System.Net.Sockets.Socket.GetSocketOption(System.Net.Sockets.SocketOptionLevel,System.Net.Sockets.SocketOptionName,System.Byte[])">
      <summary vsli:raw="Returns the specified &lt;see cref=&quot;T:System.Net.Sockets.Socket&quot; /&gt; option setting, represented as a byte array.">바이트 배열로 나타내는 지정된 <see cref="T:System.Net.Sockets.Socket" /> 옵션 설정을 반환합니다.</summary>
      <param name="optionLevel" vsli:raw="One of the &lt;see cref=&quot;T:System.Net.Sockets.SocketOptionLevel&quot; /&gt; values.">
        <see cref="T:System.Net.Sockets.SocketOptionLevel" /> 값 중 하나입니다.</param>
      <param name="optionName" vsli:raw="One of the &lt;see cref=&quot;T:System.Net.Sockets.SocketOptionName&quot; /&gt; values.">
        <see cref="T:System.Net.Sockets.SocketOptionName" /> 값 중 하나입니다.</param>
      <param name="optionValue" vsli:raw="An array of type &lt;see cref=&quot;T:System.Byte&quot; /&gt; that is to receive the option setting.">해당 옵션 설정을 받을 <see cref="T:System.Byte" /> 형식의 배열입니다.</param>
      <exception cref="T:System.Net.Sockets.SocketException" vsli:raw="An error occurred when attempting to access the socket.&#xA;&#xA;-or-&#xA;&#xA; In .NET Compact Framework applications, the Windows CE default buffer space is set to 32768 bytes. You can change the per socket buffer space by calling &lt;see cref=&quot;Overload:System.Net.Sockets.Socket.SetSocketOption&quot; /&gt;.">소켓에 액세스하는 동안 오류가 발생했습니다.  
  
또는 
.NET Compact Framework 애플리케이션에서 Windows CE 기본 버퍼 공간을 32768바이트로 설정한 경우. <see cref="Overload:System.Net.Sockets.Socket.SetSocketOption" />을 호출하여 소켓당 버퍼 공간을 변경할 수 있습니다.</exception>
      <exception cref="T:System.ObjectDisposedException" vsli:raw="The &lt;see cref=&quot;T:System.Net.Sockets.Socket&quot; /&gt; has been closed.">
        <see cref="T:System.Net.Sockets.Socket" />이 닫혔습니다.</exception>
    </member>
    <member name="M:System.Net.Sockets.Socket.GetSocketOption(System.Net.Sockets.SocketOptionLevel,System.Net.Sockets.SocketOptionName,System.Int32)">
      <summary vsli:raw="Returns the value of the specified &lt;see cref=&quot;T:System.Net.Sockets.Socket&quot; /&gt; option in an array.">배열의 지정된 <see cref="T:System.Net.Sockets.Socket" /> 옵션 값을 반환합니다.</summary>
      <param name="optionLevel" vsli:raw="One of the &lt;see cref=&quot;T:System.Net.Sockets.SocketOptionLevel&quot; /&gt; values.">
        <see cref="T:System.Net.Sockets.SocketOptionLevel" /> 값 중 하나입니다.</param>
      <param name="optionName" vsli:raw="One of the &lt;see cref=&quot;T:System.Net.Sockets.SocketOptionName&quot; /&gt; values.">
        <see cref="T:System.Net.Sockets.SocketOptionName" /> 값 중 하나입니다.</param>
      <param name="optionLength" vsli:raw="The length, in bytes, of the expected return value.">예상되는 반환 값의 길이(바이트)입니다.</param>
      <exception cref="T:System.Net.Sockets.SocketException" vsli:raw="An error occurred when attempting to access the socket.&#xA;&#xA;-or-&#xA;&#xA; In .NET Compact Framework applications, the Windows CE default buffer space is set to 32768 bytes. You can change the per socket buffer space by calling &lt;see cref=&quot;Overload:System.Net.Sockets.Socket.SetSocketOption&quot; /&gt;.">소켓에 액세스하는 동안 오류가 발생했습니다.  
  
또는 
.NET Compact Framework 애플리케이션에서 Windows CE 기본 버퍼 공간을 32768바이트로 설정한 경우. <see cref="Overload:System.Net.Sockets.Socket.SetSocketOption" />을 호출하여 소켓당 버퍼 공간을 변경할 수 있습니다.</exception>
      <exception cref="T:System.ObjectDisposedException" vsli:raw="The &lt;see cref=&quot;T:System.Net.Sockets.Socket&quot; /&gt; has been closed.">
        <see cref="T:System.Net.Sockets.Socket" />이 닫혔습니다.</exception>
      <returns vsli:raw="An array of type &lt;see cref=&quot;T:System.Byte&quot; /&gt; that contains the value of the socket option.">소켓 옵션의 값을 포함하는 <see cref="T:System.Byte" /> 형식의 배열입니다.</returns>
    </member>
    <member name="M:System.Net.Sockets.Socket.IOControl(System.Int32,System.Byte[],System.Byte[])">
      <summary vsli:raw="Sets low-level operating modes for the &lt;see cref=&quot;T:System.Net.Sockets.Socket&quot; /&gt; using numerical control codes.">숫자 컨트롤 코드를 사용하여 <see cref="T:System.Net.Sockets.Socket" />의 하위 수준 운영 모드를 설정합니다.</summary>
      <param name="ioControlCode" vsli:raw="An &lt;see cref=&quot;T:System.Int32&quot; /&gt; value that specifies the control code of the operation to perform.">수행할 작업의 컨트롤 코드를 지정하는 <see cref="T:System.Int32" /> 값입니다.</param>
      <param name="optionInValue" vsli:raw="A &lt;see cref=&quot;T:System.Byte&quot; /&gt; array that contains the input data required by the operation.">작업에 필요한 입력 데이터가 들어 있는 <see cref="T:System.Byte" /> 배열입니다.</param>
      <param name="optionOutValue" vsli:raw="A &lt;see cref=&quot;T:System.Byte&quot; /&gt; array that contains the output data returned by the operation.">작업에서 반환된 출력 데이터가 들어 있는 <see cref="T:System.Byte" /> 배열입니다.</param>
      <exception cref="T:System.Net.Sockets.SocketException" vsli:raw="An error occurred when attempting to access the socket.">소켓에 액세스하는 동안 오류가 발생했습니다.</exception>
      <exception cref="T:System.ObjectDisposedException" vsli:raw="The &lt;see cref=&quot;T:System.Net.Sockets.Socket&quot; /&gt; has been closed.">
        <see cref="T:System.Net.Sockets.Socket" />이 닫혔습니다.</exception>
      <exception cref="T:System.InvalidOperationException" vsli:raw="An attempt was made to change the blocking mode without using the &lt;see cref=&quot;P:System.Net.Sockets.Socket.Blocking&quot; /&gt; property.">
        <see cref="P:System.Net.Sockets.Socket.Blocking" /> 속성을 사용하지 않고 블로킹 모드를 변경하려고 한 경우</exception>
      <exception cref="T:System.Security.SecurityException" vsli:raw="A caller in the call stack does not have the required permissions.">호출 스택에 있는 호출자에게 필요한 권한이 없는 경우</exception>
      <returns vsli:raw="The number of bytes in the &lt;paramref name=&quot;optionOutValue&quot; /&gt; parameter.">
        <paramref name="optionOutValue" /> 매개 변수의 바이트 수입니다.</returns>
    </member>
    <member name="M:System.Net.Sockets.Socket.IOControl(System.Net.Sockets.IOControlCode,System.Byte[],System.Byte[])">
      <summary vsli:raw="Sets low-level operating modes for the &lt;see cref=&quot;T:System.Net.Sockets.Socket&quot; /&gt; using the &lt;see cref=&quot;T:System.Net.Sockets.IOControlCode&quot; /&gt; enumeration to specify control codes.">
        <see cref="T:System.Net.Sockets.Socket" /> 열거형으로 컨트롤 코드를 지정하여 <see cref="T:System.Net.Sockets.IOControlCode" />의 하위 수준 운영 모드를 설정합니다.</summary>
      <param name="ioControlCode" vsli:raw="A &lt;see cref=&quot;T:System.Net.Sockets.IOControlCode&quot; /&gt; value that specifies the control code of the operation to perform.">수행할 작업의 컨트롤 코드를 지정하는 <see cref="T:System.Net.Sockets.IOControlCode" /> 값입니다.</param>
      <param name="optionInValue" vsli:raw="An array of type &lt;see cref=&quot;T:System.Byte&quot; /&gt; that contains the input data required by the operation.">해당 작업에 필요한 입력 데이터를 포함하는 <see cref="T:System.Byte" /> 형식의 배열입니다.</param>
      <param name="optionOutValue" vsli:raw="An array of type &lt;see cref=&quot;T:System.Byte&quot; /&gt; that contains the output data returned by the operation.">해당 작업에서 반환된 출력 데이터를 포함하는 <see cref="T:System.Byte" /> 형식의 배열입니다.</param>
      <exception cref="T:System.Net.Sockets.SocketException" vsli:raw="An error occurred when attempting to access the socket.">소켓에 액세스하는 동안 오류가 발생했습니다.</exception>
      <exception cref="T:System.ObjectDisposedException" vsli:raw="The &lt;see cref=&quot;T:System.Net.Sockets.Socket&quot; /&gt; has been closed.">
        <see cref="T:System.Net.Sockets.Socket" />이 닫혔습니다.</exception>
      <exception cref="T:System.InvalidOperationException" vsli:raw="An attempt was made to change the blocking mode without using the &lt;see cref=&quot;P:System.Net.Sockets.Socket.Blocking&quot; /&gt; property.">
        <see cref="P:System.Net.Sockets.Socket.Blocking" /> 속성을 사용하지 않고 블로킹 모드를 변경하려고 한 경우</exception>
      <returns vsli:raw="The number of bytes in the &lt;paramref name=&quot;optionOutValue&quot; /&gt; parameter.">
        <paramref name="optionOutValue" /> 매개 변수의 바이트 수입니다.</returns>
    </member>
    <member name="M:System.Net.Sockets.Socket.Listen">
      <summary vsli:raw="Places a &lt;see cref=&quot;T:System.Net.Sockets.Socket&quot; /&gt; in a listening state.">
        <see cref="T:System.Net.Sockets.Socket" />을 수신 상태로 둡니다.</summary>
    </member>
    <member name="M:System.Net.Sockets.Socket.Listen(System.Int32)">
      <summary vsli:raw="Places a &lt;see cref=&quot;T:System.Net.Sockets.Socket&quot; /&gt; in a listening state.">
        <see cref="T:System.Net.Sockets.Socket" />을 수신 상태로 둡니다.</summary>
      <param name="backlog" vsli:raw="The maximum length of the pending connections queue.">보류 중인 연결 큐의 최대 길이입니다.</param>
      <exception cref="T:System.Net.Sockets.SocketException" vsli:raw="An error occurred when attempting to access the socket.">소켓에 액세스하는 동안 오류가 발생했습니다.</exception>
      <exception cref="T:System.ObjectDisposedException" vsli:raw="The &lt;see cref=&quot;T:System.Net.Sockets.Socket&quot; /&gt; has been closed.">
        <see cref="T:System.Net.Sockets.Socket" />이 닫혔습니다.</exception>
    </member>
    <member name="M:System.Net.Sockets.Socket.Poll(System.Int32,System.Net.Sockets.SelectMode)">
      <summary vsli:raw="Determines the status of the &lt;see cref=&quot;T:System.Net.Sockets.Socket&quot; /&gt;.">
        <see cref="T:System.Net.Sockets.Socket" />의 상태를 결정합니다.</summary>
      <param name="microSeconds" vsli:raw="The time to wait for a response, in microseconds.">응답을 기다릴 시간(마이크로초)입니다.</param>
      <param name="mode" vsli:raw="One of the &lt;see cref=&quot;T:System.Net.Sockets.SelectMode&quot; /&gt; values.">
        <see cref="T:System.Net.Sockets.SelectMode" /> 값 중 하나입니다.</param>
      <exception cref="T:System.NotSupportedException" vsli:raw="The &lt;paramref name=&quot;mode&quot; /&gt; parameter is not one of the &lt;see cref=&quot;T:System.Net.Sockets.SelectMode&quot; /&gt; values.">
        <paramref name="mode" /> 매개 변수가 <see cref="T:System.Net.Sockets.SelectMode" /> 값이 아닌 경우</exception>
      <exception cref="T:System.Net.Sockets.SocketException" vsli:raw="An error occurred when attempting to access the socket. See remarks below.">소켓에 액세스하는 동안 오류가 발생했습니다. 아래 설명 부분을 참조하세요.</exception>
      <exception cref="T:System.ObjectDisposedException" vsli:raw="The &lt;see cref=&quot;T:System.Net.Sockets.Socket&quot; /&gt; has been closed.">
        <see cref="T:System.Net.Sockets.Socket" />이 닫혔습니다.</exception>
      <returns vsli:raw="The status of the &lt;see cref=&quot;T:System.Net.Sockets.Socket&quot; /&gt; based on the polling mode value passed in the &lt;paramref name=&quot;mode&quot; /&gt; parameter.&#xA;          &lt;ul&gt;&lt;li&gt;For &lt;see cref=&quot;F:System.Net.Sockets.SelectMode.SelectRead&quot; /&gt;, it returns &lt;see langword=&quot;true&quot; /&gt; if &lt;see cref=&quot;M:System.Net.Sockets.Socket.Listen&quot; /&gt; has been called and a connection is pending, if data is available for reading, or if the connection has been closed, reset, or terminated.&lt;/li&gt;&lt;li&gt;For &lt;see cref=&quot;F:System.Net.Sockets.SelectMode.SelectWrite&quot; /&gt;, it returns &lt;see langword=&quot;true&quot; /&gt; if processing a &lt;see cref=&quot;Overload:System.Net.Sockets.Socket.Connect&quot; /&gt; and the connection has succeeded or if data can be sent.&lt;/li&gt;&lt;li&gt;For &lt;see cref=&quot;F:System.Net.Sockets.SelectMode.SelectError&quot; /&gt;, it returns &lt;see langword=&quot;true&quot; /&gt; if processing a &lt;see cref=&quot;Overload:System.Net.Sockets.Socket.Connect&quot; /&gt; that does not block and the connection has failed, or if &lt;see cref=&quot;F:System.Net.Sockets.SocketOptionName.OutOfBandInline&quot; /&gt; is not set and out-of-band data is available.&lt;/li&gt;&lt;li&gt;Otherwise, it returns &lt;see langword=&quot;false&quot; /&gt;.&lt;/li&gt;&lt;/ul&gt;">
        <paramref name="mode" /> 매개 변수에 전달된 폴링 모드 값에 따른 <see cref="T:System.Net.Sockets.Socket" />의 상태입니다.  
  
 <list type="table"><listheader><term> 모드</term><description> 반환 값</description></listheader><item><term><see cref="F:System.Net.Sockets.SelectMode.SelectRead" /></term><description><see cref="M:System.Net.Sockets.Socket.Listen(System.Int32)" />이 호출되었고 연결이 보류 중이면 <see langword="true" />를 반환합니다. 
또는 
 데이터를 읽을 수 있으면 <see langword="true" />를 반환합니다. 
또는 
 연결을 닫았거나, 다시 설정하였거나, 종료하였으면 <see langword="true" />를 반환합니다. 
그렇지 않으면 <see langword="false" />를 반환합니다.</description></item><item><term><see cref="F:System.Net.Sockets.SelectMode.SelectWrite" /></term><description><see cref="M:System.Net.Sockets.Socket.Connect(System.Net.EndPoint)" />가 처리 중이고 연결에 성공했으면 <see langword="true" />를 반환합니다. 
또는 
 데이터를 보낼 수 있으면 <see langword="true" />를 반환합니다. 
그렇지 않으면 <see langword="false" />를 반환합니다.</description></item><item><term><see cref="F:System.Net.Sockets.SelectMode.SelectError" /></term><description>차단되지 않는 <see cref="M:System.Net.Sockets.Socket.Connect(System.Net.EndPoint)" />가 처리 중이고 연결에 실패했으면 <see langword="true" />를 반환합니다. 
또는 
 <see cref="F:System.Net.Sockets.SocketOptionName.OutOfBandInline" />이 설정되어 있지 않고 out-of-band 데이터를 사용할 수 있으면 <see langword="true" />를 반환합니다. 
그렇지 않으면 <see langword="false" />를 반환합니다.</description></item></list></returns>
    </member>
    <member name="M:System.Net.Sockets.Socket.Receive(System.Byte[])">
      <summary vsli:raw="Receives data from a bound &lt;see cref=&quot;T:System.Net.Sockets.Socket&quot; /&gt; into a receive buffer.">수신 버퍼에 바인딩된 <see cref="T:System.Net.Sockets.Socket" />의 데이터를 받습니다.</summary>
      <param name="buffer" vsli:raw="An array of type &lt;see cref=&quot;T:System.Byte&quot; /&gt; that is the storage location for the received data.">수신된 데이터에 대한 스토리지 위치인 <see cref="T:System.Byte" /> 형식의 배열입니다.</param>
      <exception cref="T:System.ArgumentNullException" vsli:raw="&lt;paramref name=&quot;buffer&quot; /&gt; is &lt;see langword=&quot;null&quot; /&gt;.">
        <paramref name="buffer" />이(가) <see langword="null" />인 경우</exception>
      <exception cref="T:System.Net.Sockets.SocketException" vsli:raw="An error occurred when attempting to access the socket.">소켓에 액세스하는 동안 오류가 발생했습니다.</exception>
      <exception cref="T:System.ObjectDisposedException" vsli:raw="The &lt;see cref=&quot;T:System.Net.Sockets.Socket&quot; /&gt; has been closed.">
        <see cref="T:System.Net.Sockets.Socket" />이 닫혔습니다.</exception>
      <exception cref="T:System.Security.SecurityException" vsli:raw="A caller in the call stack does not have the required permissions.">호출 스택에 있는 호출자에게 필요한 권한이 없는 경우</exception>
      <returns vsli:raw="The number of bytes received.">받은 바이트 수입니다.</returns>
    </member>
    <member name="M:System.Net.Sockets.Socket.Receive(System.Byte[],System.Int32,System.Int32,System.Net.Sockets.SocketFlags)">
      <summary vsli:raw="Receives the specified number of bytes from a bound &lt;see cref=&quot;T:System.Net.Sockets.Socket&quot; /&gt; into the specified offset position of the receive buffer, using the specified &lt;see cref=&quot;T:System.Net.Sockets.SocketFlags&quot; /&gt;.">지정된 <see cref="T:System.Net.Sockets.Socket" />를 사용하여 수신 버퍼의 특정 오프셋 위치에 바인딩된 <see cref="T:System.Net.Sockets.SocketFlags" />의 원하는 바이트 수를 받습니다.</summary>
      <param name="buffer" vsli:raw="An array of type &lt;see cref=&quot;T:System.Byte&quot; /&gt; that is the storage location for received data.">수신된 데이터의 스토리지 위치에 해당하는 형식 <see cref="T:System.Byte" />의 배열입니다.</param>
      <param name="offset" vsli:raw="The location in &lt;paramref name=&quot;buffer&quot; /&gt; to store the received data.">받을 데이터를 저장할 <paramref name="buffer" /> 내의 위치입니다.</param>
      <param name="size" vsli:raw="The number of bytes to receive.">수신 바이트 수입니다.</param>
      <param name="socketFlags" vsli:raw="A bitwise combination of the &lt;see cref=&quot;T:System.Net.Sockets.SocketFlags&quot; /&gt; values.">
        <see cref="T:System.Net.Sockets.SocketFlags" /> 값의 비트 조합입니다.</param>
      <exception cref="T:System.ArgumentNullException" vsli:raw="&lt;paramref name=&quot;buffer&quot; /&gt; is &lt;see langword=&quot;null&quot; /&gt;.">
        <paramref name="buffer" />이(가) <see langword="null" />인 경우</exception>
      <exception cref="T:System.ArgumentOutOfRangeException" vsli:raw="&lt;paramref name=&quot;offset&quot; /&gt; is less than 0.&#xA;&#xA; -or-&#xA;&#xA; &lt;paramref name=&quot;offset&quot; /&gt; is greater than the length of &lt;paramref name=&quot;buffer&quot; /&gt;.&#xA;&#xA; -or-&#xA;&#xA; &lt;paramref name=&quot;size&quot; /&gt; is less than 0.&#xA;&#xA; -or-&#xA;&#xA; &lt;paramref name=&quot;size&quot; /&gt; is greater than the length of &lt;paramref name=&quot;buffer&quot; /&gt; minus the value of the &lt;paramref name=&quot;offset&quot; /&gt; parameter.">
        <paramref name="offset" />가 0보다 작은 경우.  
  
또는 
 <paramref name="offset" />이 <paramref name="buffer" />의 길이보다 큽니다.  
  
또는 
 <paramref name="size" />가 0보다 작은 경우.  
  
또는 
 <paramref name="size" />가 <paramref name="buffer" />의 길이에서 <paramref name="offset" /> 매개 변수 값을 뺀 크기보다 큰 경우</exception>
      <exception cref="T:System.Net.Sockets.SocketException" vsli:raw="&lt;paramref name=&quot;socketFlags&quot; /&gt; is not a valid combination of values.&#xA;&#xA; -or-&#xA;&#xA; The &lt;see cref=&quot;P:System.Net.Sockets.Socket.LocalEndPoint&quot; /&gt; property was not set.&#xA;&#xA; -or-&#xA;&#xA; An operating system error occurs while accessing the &lt;see cref=&quot;T:System.Net.Sockets.Socket&quot; /&gt;.">
        <paramref name="socketFlags" />가 값의 유효한 조합이 아닌 경우  
  
또는 
<see cref="P:System.Net.Sockets.Socket.LocalEndPoint" /> 속성이 설정되지 않은 경우  
  
또는 
<see cref="T:System.Net.Sockets.Socket" />에 액세스하는 동안 운영 체제 오류가 발생한 경우</exception>
      <exception cref="T:System.ObjectDisposedException" vsli:raw="The &lt;see cref=&quot;T:System.Net.Sockets.Socket&quot; /&gt; has been closed.">
        <see cref="T:System.Net.Sockets.Socket" />이 닫혔습니다.</exception>
      <exception cref="T:System.Security.SecurityException" vsli:raw="A caller in the call stack does not have the required permissions.">호출 스택에 있는 호출자에게 필요한 권한이 없는 경우</exception>
      <returns vsli:raw="The number of bytes received.">받은 바이트 수입니다.</returns>
    </member>
    <member name="M:System.Net.Sockets.Socket.Receive(System.Byte[],System.Int32,System.Int32,System.Net.Sockets.SocketFlags,System.Net.Sockets.SocketError@)">
      <summary vsli:raw="Receives data from a bound &lt;see cref=&quot;T:System.Net.Sockets.Socket&quot; /&gt; into a receive buffer, using the specified &lt;see cref=&quot;T:System.Net.Sockets.SocketFlags&quot; /&gt;.">지정된 <see cref="T:System.Net.Sockets.Socket" />를 사용하여 수신 버퍼에 바인딩된 <see cref="T:System.Net.Sockets.SocketFlags" />의 데이터를 받습니다.</summary>
      <param name="buffer" vsli:raw="An array of type &lt;see cref=&quot;T:System.Byte&quot; /&gt; that is the storage location for the received data.">수신된 데이터에 대한 스토리지 위치인 <see cref="T:System.Byte" /> 형식의 배열입니다.</param>
      <param name="offset" vsli:raw="The position in the &lt;paramref name=&quot;buffer&quot; /&gt; parameter to store the received data.">수신된 데이터를 저장할 <paramref name="buffer" /> 매개 변수의 위치입니다.</param>
      <param name="size" vsli:raw="The number of bytes to receive.">수신 바이트 수입니다.</param>
      <param name="socketFlags" vsli:raw="A bitwise combination of the &lt;see cref=&quot;T:System.Net.Sockets.SocketFlags&quot; /&gt; values.">
        <see cref="T:System.Net.Sockets.SocketFlags" /> 값의 비트 조합입니다.</param>
      <param name="errorCode" vsli:raw="A &lt;see cref=&quot;T:System.Net.Sockets.SocketError&quot; /&gt; object that stores the socket error.">소켓 오류를 저장하는 <see cref="T:System.Net.Sockets.SocketError" /> 개체입니다.</param>
      <exception cref="T:System.ArgumentNullException" vsli:raw="&lt;paramref name=&quot;buffer&quot; /&gt; is &lt;see langword=&quot;null&quot; /&gt;.">
        <paramref name="buffer" />이(가) <see langword="null" />인 경우</exception>
      <exception cref="T:System.ArgumentOutOfRangeException" vsli:raw="&lt;paramref name=&quot;offset&quot; /&gt; is less than 0.&#xA;&#xA; -or-&#xA;&#xA; &lt;paramref name=&quot;offset&quot; /&gt; is greater than the length of &lt;paramref name=&quot;buffer&quot; /&gt;.&#xA;&#xA; -or-&#xA;&#xA; &lt;paramref name=&quot;size&quot; /&gt; is less than 0.&#xA;&#xA; -or-&#xA;&#xA; &lt;paramref name=&quot;size&quot; /&gt; is greater than the length of &lt;paramref name=&quot;buffer&quot; /&gt; minus the value of the &lt;paramref name=&quot;offset&quot; /&gt; parameter.">
        <paramref name="offset" />가 0보다 작은 경우.  
  
또는 
 <paramref name="offset" />이 <paramref name="buffer" />의 길이보다 큽니다.  
  
또는 
 <paramref name="size" />가 0보다 작은 경우.  
  
또는 
 <paramref name="size" />가 <paramref name="buffer" />의 길이에서 <paramref name="offset" /> 매개 변수 값을 뺀 크기보다 큰 경우</exception>
      <exception cref="T:System.Net.Sockets.SocketException">
        <paramref name="socketFlags" />가 값의 유효한 조합이 아닌 경우  
  
또는 
<see cref="P:System.Net.Sockets.Socket.LocalEndPoint" /> 속성이 설정되어 있지 않은 경우  
  
또는 
<see cref="T:System.Net.Sockets.Socket" />에 액세스하는 동안 운영 체제 오류가 발생한 경우</exception>
      <exception cref="T:System.ObjectDisposedException" vsli:raw="The &lt;see cref=&quot;T:System.Net.Sockets.Socket&quot; /&gt; has been closed.">
        <see cref="T:System.Net.Sockets.Socket" />이 닫혔습니다.</exception>
      <exception cref="T:System.Security.SecurityException" vsli:raw="A caller in the call stack does not have the required permissions.">호출 스택에 있는 호출자에게 필요한 권한이 없는 경우</exception>
      <returns vsli:raw="The number of bytes received.">받은 바이트 수입니다.</returns>
    </member>
    <member name="M:System.Net.Sockets.Socket.Receive(System.Byte[],System.Int32,System.Net.Sockets.SocketFlags)">
      <summary vsli:raw="Receives the specified number of bytes of data from a bound &lt;see cref=&quot;T:System.Net.Sockets.Socket&quot; /&gt; into a receive buffer, using the specified &lt;see cref=&quot;T:System.Net.Sockets.SocketFlags&quot; /&gt;.">지정된 <see cref="T:System.Net.Sockets.Socket" />를 사용하여 수신 버퍼에 바인딩된 <see cref="T:System.Net.Sockets.SocketFlags" />에서 원하는 바이트 수의 데이터를 받습니다.</summary>
      <param name="buffer" vsli:raw="An array of type &lt;see cref=&quot;T:System.Byte&quot; /&gt; that is the storage location for the received data.">수신된 데이터에 대한 스토리지 위치인 <see cref="T:System.Byte" /> 형식의 배열입니다.</param>
      <param name="size" vsli:raw="The number of bytes to receive.">수신 바이트 수입니다.</param>
      <param name="socketFlags" vsli:raw="A bitwise combination of the &lt;see cref=&quot;T:System.Net.Sockets.SocketFlags&quot; /&gt; values.">
        <see cref="T:System.Net.Sockets.SocketFlags" /> 값의 비트 조합입니다.</param>
      <exception cref="T:System.ArgumentNullException" vsli:raw="&lt;paramref name=&quot;buffer&quot; /&gt; is &lt;see langword=&quot;null&quot; /&gt;.">
        <paramref name="buffer" />이(가) <see langword="null" />인 경우</exception>
      <exception cref="T:System.ArgumentOutOfRangeException" vsli:raw="&lt;paramref name=&quot;size&quot; /&gt; exceeds the size of &lt;paramref name=&quot;buffer&quot; /&gt;.">
        <paramref name="size" />가 <paramref name="buffer" />의 크기를 초과한 경우</exception>
      <exception cref="T:System.Net.Sockets.SocketException" vsli:raw="An error occurred when attempting to access the socket.">소켓에 액세스하는 동안 오류가 발생했습니다.</exception>
      <exception cref="T:System.ObjectDisposedException" vsli:raw="The &lt;see cref=&quot;T:System.Net.Sockets.Socket&quot; /&gt; has been closed.">
        <see cref="T:System.Net.Sockets.Socket" />이 닫혔습니다.</exception>
      <exception cref="T:System.Security.SecurityException" vsli:raw="A caller in the call stack does not have the required permissions.">호출 스택에 있는 호출자에게 필요한 권한이 없는 경우</exception>
      <returns vsli:raw="The number of bytes received.">받은 바이트 수입니다.</returns>
    </member>
    <member name="M:System.Net.Sockets.Socket.Receive(System.Byte[],System.Net.Sockets.SocketFlags)">
      <summary vsli:raw="Receives data from a bound &lt;see cref=&quot;T:System.Net.Sockets.Socket&quot; /&gt; into a receive buffer, using the specified &lt;see cref=&quot;T:System.Net.Sockets.SocketFlags&quot; /&gt;.">지정된 <see cref="T:System.Net.Sockets.Socket" />를 사용하여 수신 버퍼에 바인딩된 <see cref="T:System.Net.Sockets.SocketFlags" />의 데이터를 받습니다.</summary>
      <param name="buffer" vsli:raw="An array of type &lt;see cref=&quot;T:System.Byte&quot; /&gt; that is the storage location for the received data.">수신된 데이터에 대한 스토리지 위치인 <see cref="T:System.Byte" /> 형식의 배열입니다.</param>
      <param name="socketFlags" vsli:raw="A bitwise combination of the &lt;see cref=&quot;T:System.Net.Sockets.SocketFlags&quot; /&gt; values.">
        <see cref="T:System.Net.Sockets.SocketFlags" /> 값의 비트 조합입니다.</param>
      <exception cref="T:System.ArgumentNullException" vsli:raw="&lt;paramref name=&quot;buffer&quot; /&gt; is &lt;see langword=&quot;null&quot; /&gt;.">
        <paramref name="buffer" />이(가) <see langword="null" />인 경우</exception>
      <exception cref="T:System.Net.Sockets.SocketException" vsli:raw="An error occurred when attempting to access the socket.">소켓에 액세스하는 동안 오류가 발생했습니다.</exception>
      <exception cref="T:System.ObjectDisposedException" vsli:raw="The &lt;see cref=&quot;T:System.Net.Sockets.Socket&quot; /&gt; has been closed.">
        <see cref="T:System.Net.Sockets.Socket" />이 닫혔습니다.</exception>
      <exception cref="T:System.Security.SecurityException" vsli:raw="A caller in the call stack does not have the required permissions.">호출 스택에 있는 호출자에게 필요한 권한이 없는 경우</exception>
      <returns vsli:raw="The number of bytes received.">받은 바이트 수입니다.</returns>
    </member>
    <member name="M:System.Net.Sockets.Socket.Receive(System.Collections.Generic.IList{System.ArraySegment{System.Byte}})">
      <summary vsli:raw="Receives data from a bound &lt;see cref=&quot;T:System.Net.Sockets.Socket&quot; /&gt; into the list of receive buffers.">바인딩된 <see cref="T:System.Net.Sockets.Socket" />의 데이터를 받아 수신 버퍼 목록에 넣습니다.</summary>
      <param name="buffers" vsli:raw="A list of &lt;see cref=&quot;T:System.ArraySegment`1&quot; /&gt;s of type &lt;see cref=&quot;T:System.Byte&quot; /&gt; that contains the received data.">받은 데이터를 포함하는 <see cref="T:System.ArraySegment`1" /> 형식의 <see cref="T:System.Byte" /> 목록입니다.</param>
      <exception cref="T:System.ArgumentNullException" vsli:raw="The &lt;paramref name=&quot;buffer&quot; /&gt; parameter is &lt;see langword=&quot;null&quot; /&gt;.">
        <paramref name="buffer" /> 매개 변수가 <see langword="null" />인 경우</exception>
      <exception cref="T:System.Net.Sockets.SocketException" vsli:raw="An error occurred while attempting to access the socket.">소켓에 액세스하려고 시도하는 동안 오류가 발생한 경우.</exception>
      <exception cref="T:System.ObjectDisposedException" vsli:raw="The &lt;see cref=&quot;T:System.Net.Sockets.Socket&quot; /&gt; has been closed.">
        <see cref="T:System.Net.Sockets.Socket" />이 닫혔습니다.</exception>
      <returns vsli:raw="The number of bytes received.">받은 바이트 수입니다.</returns>
    </member>
    <member name="M:System.Net.Sockets.Socket.Receive(System.Collections.Generic.IList{System.ArraySegment{System.Byte}},System.Net.Sockets.SocketFlags)">
      <summary vsli:raw="Receives data from a bound &lt;see cref=&quot;T:System.Net.Sockets.Socket&quot; /&gt; into the list of receive buffers, using the specified &lt;see cref=&quot;T:System.Net.Sockets.SocketFlags&quot; /&gt;.">지정된 <see cref="T:System.Net.Sockets.Socket" />를 사용하여 바인딩된 <see cref="T:System.Net.Sockets.SocketFlags" />의 데이터를 받아 수신 버퍼 목록에 넣습니다.</summary>
      <param name="buffers" vsli:raw="A list of &lt;see cref=&quot;T:System.ArraySegment`1&quot; /&gt;s of type &lt;see cref=&quot;T:System.Byte&quot; /&gt; that contains the received data.">받은 데이터를 포함하는 <see cref="T:System.ArraySegment`1" /> 형식의 <see cref="T:System.Byte" /> 목록입니다.</param>
      <param name="socketFlags" vsli:raw="A bitwise combination of the &lt;see cref=&quot;T:System.Net.Sockets.SocketFlags&quot; /&gt; values.">
        <see cref="T:System.Net.Sockets.SocketFlags" /> 값의 비트 조합입니다.</param>
      <exception cref="T:System.ArgumentNullException" vsli:raw="&lt;paramref name=&quot;buffers&quot; /&gt; is &lt;see langword=&quot;null&quot; /&gt;.&#xA;&#xA; -or-&#xA;&#xA; &lt;paramref name=&quot;buffers&quot; /&gt;.Count is zero.">
        <paramref name="buffers" />이(가) <see langword="null" />인 경우  
  
또는 
 <paramref name="buffers" /> 수가 0인 경우</exception>
      <exception cref="T:System.Net.Sockets.SocketException" vsli:raw="An error occurred while attempting to access the socket.">소켓에 액세스하려고 시도하는 동안 오류가 발생한 경우.</exception>
      <exception cref="T:System.ObjectDisposedException" vsli:raw="The &lt;see cref=&quot;T:System.Net.Sockets.Socket&quot; /&gt; has been closed.">
        <see cref="T:System.Net.Sockets.Socket" />이 닫혔습니다.</exception>
      <returns vsli:raw="The number of bytes received.">받은 바이트 수입니다.</returns>
    </member>
    <member name="M:System.Net.Sockets.Socket.Receive(System.Collections.Generic.IList{System.ArraySegment{System.Byte}},System.Net.Sockets.SocketFlags,System.Net.Sockets.SocketError@)">
      <summary vsli:raw="Receives data from a bound &lt;see cref=&quot;T:System.Net.Sockets.Socket&quot; /&gt; into the list of receive buffers, using the specified &lt;see cref=&quot;T:System.Net.Sockets.SocketFlags&quot; /&gt;.">지정된 <see cref="T:System.Net.Sockets.Socket" />를 사용하여 바인딩된 <see cref="T:System.Net.Sockets.SocketFlags" />의 데이터를 받아 수신 버퍼 목록에 넣습니다.</summary>
      <param name="buffers" vsli:raw="A list of &lt;see cref=&quot;T:System.ArraySegment`1&quot; /&gt;s of type &lt;see cref=&quot;T:System.Byte&quot; /&gt; that contains the received data.">받은 데이터를 포함하는 <see cref="T:System.ArraySegment`1" /> 형식의 <see cref="T:System.Byte" /> 목록입니다.</param>
      <param name="socketFlags" vsli:raw="A bitwise combination of the &lt;see cref=&quot;T:System.Net.Sockets.SocketFlags&quot; /&gt; values.">
        <see cref="T:System.Net.Sockets.SocketFlags" /> 값의 비트 조합입니다.</param>
      <param name="errorCode" vsli:raw="A &lt;see cref=&quot;T:System.Net.Sockets.SocketError&quot; /&gt; object that stores the socket error.">소켓 오류를 저장하는 <see cref="T:System.Net.Sockets.SocketError" /> 개체입니다.</param>
      <exception cref="T:System.ArgumentNullException" vsli:raw="&lt;paramref name=&quot;buffers&quot; /&gt; is &lt;see langword=&quot;null&quot; /&gt;.&#xA;&#xA; -or-&#xA;&#xA; &lt;paramref name=&quot;buffers&quot; /&gt;.Count is zero.">
        <paramref name="buffers" />이(가) <see langword="null" />인 경우  
  
또는 
 <paramref name="buffers" /> 수가 0인 경우</exception>
      <exception cref="T:System.Net.Sockets.SocketException" vsli:raw="An error occurred while attempting to access the socket.">소켓에 액세스하려고 시도하는 동안 오류가 발생한 경우.</exception>
      <exception cref="T:System.ObjectDisposedException" vsli:raw="The &lt;see cref=&quot;T:System.Net.Sockets.Socket&quot; /&gt; has been closed.">
        <see cref="T:System.Net.Sockets.Socket" />이 닫혔습니다.</exception>
      <returns vsli:raw="The number of bytes received.">받은 바이트 수입니다.</returns>
    </member>
    <member name="M:System.Net.Sockets.Socket.Receive(System.Span{System.Byte})">
      <summary vsli:raw="Receives data from a bound &lt;see cref=&quot;T:System.Net.Sockets.Socket&quot; /&gt; into a receive buffer.">수신 버퍼에 바인딩된 <see cref="T:System.Net.Sockets.Socket" />의 데이터를 받습니다.</summary>
      <param name="buffer" vsli:raw="A span of bytes that is the storage location for the received data.">받는 데이터에 대한 스토리지 위치인 바이트의 범위입니다.</param>
      <exception cref="T:System.Net.Sockets.SocketException" vsli:raw="An error occurred when attempting to access the socket.">소켓에 액세스하는 동안 오류가 발생했습니다.</exception>
      <exception cref="T:System.ObjectDisposedException" vsli:raw="The &lt;see cref=&quot;T:System.Net.Sockets.Socket&quot; /&gt; has been closed.">
        <see cref="T:System.Net.Sockets.Socket" />이 닫혔습니다.</exception>
      <exception cref="T:System.Security.SecurityException" vsli:raw="A caller in the call stack does not have the required permissions.">호출 스택에 있는 호출자에게 필요한 권한이 없는 경우</exception>
      <returns vsli:raw="The number of bytes received.">받은 바이트 수입니다.</returns>
    </member>
    <member name="M:System.Net.Sockets.Socket.Receive(System.Span{System.Byte},System.Net.Sockets.SocketFlags)">
      <summary vsli:raw="Receives data from a bound &lt;see cref=&quot;T:System.Net.Sockets.Socket&quot; /&gt; into a receive buffer, using the specified &lt;see cref=&quot;T:System.Net.Sockets.SocketFlags&quot; /&gt;.">지정된 <see cref="T:System.Net.Sockets.Socket" />를 사용하여 수신 버퍼에 바인딩된 <see cref="T:System.Net.Sockets.SocketFlags" />의 데이터를 받습니다.</summary>
      <param name="buffer" vsli:raw="A span of bytes that is the storage location for the received data.">받는 데이터에 대한 스토리지 위치인 바이트의 범위입니다.</param>
      <param name="socketFlags" vsli:raw="A bitwise combination of the enumeration values that specifies send and receive behaviors.">보내기 및 받기 동작을 지정하는 열거형 값의 비트 조합입니다.</param>
      <exception cref="T:System.Net.Sockets.SocketException" vsli:raw="An error occurred when attempting to access the socket.">소켓에 액세스하는 동안 오류가 발생했습니다.</exception>
      <exception cref="T:System.ObjectDisposedException" vsli:raw="The &lt;see cref=&quot;T:System.Net.Sockets.Socket&quot; /&gt; has been closed.">
        <see cref="T:System.Net.Sockets.Socket" />이 닫혔습니다.</exception>
      <exception cref="T:System.Security.SecurityException" vsli:raw="A caller in the call stack does not have the required permissions.">호출 스택에 있는 호출자에게 필요한 권한이 없는 경우</exception>
      <returns vsli:raw="The number of bytes received.">받은 바이트 수입니다.</returns>
    </member>
    <member name="M:System.Net.Sockets.Socket.Receive(System.Span{System.Byte},System.Net.Sockets.SocketFlags,System.Net.Sockets.SocketError@)">
      <summary vsli:raw="Receives data from a bound &lt;see cref=&quot;T:System.Net.Sockets.Socket&quot; /&gt; into a receive buffer, using the specified &lt;see cref=&quot;T:System.Net.Sockets.SocketFlags&quot; /&gt;.">지정된 <see cref="T:System.Net.Sockets.Socket" />를 사용하여 수신 버퍼에 바인딩된 <see cref="T:System.Net.Sockets.SocketFlags" />의 데이터를 받습니다.</summary>
      <param name="buffer" vsli:raw="A span of bytes that is the storage location for the received data.">받는 데이터에 대한 스토리지 위치인 바이트의 범위입니다.</param>
      <param name="socketFlags" vsli:raw="A bitwise combination of the enumeration values that specifies send and receive behaviors.">보내기 및 받기 동작을 지정하는 열거형 값의 비트 조합입니다.</param>
      <param name="errorCode" vsli:raw="When this method returns, contains one of the enumeration values that defines error codes for the socket.">이 메서드가 반환될 때 소켓에 대한 오류 코드를 정의하는 열거형 값 중 하나를 포함합니다.</param>
      <exception cref="T:System.Net.Sockets.SocketException" vsli:raw="An error occurred when attempting to access the socket.">소켓에 액세스하는 동안 오류가 발생했습니다.</exception>
      <exception cref="T:System.ObjectDisposedException" vsli:raw="The &lt;see cref=&quot;T:System.Net.Sockets.Socket&quot; /&gt; has been closed.">
        <see cref="T:System.Net.Sockets.Socket" />이 닫혔습니다.</exception>
      <exception cref="T:System.Security.SecurityException" vsli:raw="A caller in the call stack does not have the required permissions.">호출 스택에 있는 호출자에게 필요한 권한이 없는 경우</exception>
      <returns vsli:raw="The number of bytes received.">받은 바이트 수입니다.</returns>
    </member>
    <member name="M:System.Net.Sockets.Socket.ReceiveAsync(System.Net.Sockets.SocketAsyncEventArgs)">
      <summary vsli:raw="Begins an asynchronous request to receive data from a connected &lt;see cref=&quot;T:System.Net.Sockets.Socket&quot; /&gt; object.">연결된 <see cref="T:System.Net.Sockets.Socket" /> 개체에서 데이터를 받기 위해 비동기 요청을 시작합니다.</summary>
      <param name="e" vsli:raw="The &lt;see cref=&quot;T:System.Net.Sockets.SocketAsyncEventArgs&quot; /&gt; object to use for this asynchronous socket operation.">이 비동기 소켓 작업에 사용할 <see cref="T:System.Net.Sockets.SocketAsyncEventArgs" /> 개체입니다.</param>
      <exception cref="T:System.ArgumentException" vsli:raw="An argument was invalid. The &lt;see cref=&quot;P:System.Net.Sockets.SocketAsyncEventArgs.Buffer&quot; /&gt; or &lt;see cref=&quot;P:System.Net.Sockets.SocketAsyncEventArgs.BufferList&quot; /&gt; properties on the &lt;paramref name=&quot;e&quot; /&gt; parameter must reference valid buffers. One or the other of these properties may be set, but not both at the same time.">인수가 잘못된 경우. <paramref name="e" /> 매개 변수의 <see cref="P:System.Net.Sockets.SocketAsyncEventArgs.Buffer" /> 또는 <see cref="P:System.Net.Sockets.SocketAsyncEventArgs.BufferList" /> 속성이 올바른 버퍼를 참조하지 않는 경우. 이러한 속성 중 하나를 설정할 수 있지만 두 속성을 동시에 설정할 수는 없습니다.</exception>
      <exception cref="T:System.InvalidOperationException" vsli:raw="A socket operation was already in progress using the &lt;see cref=&quot;T:System.Net.Sockets.SocketAsyncEventArgs&quot; /&gt; object specified in the &lt;paramref name=&quot;e&quot; /&gt; parameter.">
        <paramref name="e" /> 매개 변수에 지정된 <see cref="T:System.Net.Sockets.SocketAsyncEventArgs" /> 개체를 사용하여 소켓 작업이 이미 진행 중인 경우</exception>
      <exception cref="T:System.NotSupportedException">이 메서드에 Windows XP 이상이 필요한 경우.</exception>
      <exception cref="T:System.ObjectDisposedException" vsli:raw="The &lt;see cref=&quot;T:System.Net.Sockets.Socket&quot; /&gt; has been closed.">
        <see cref="T:System.Net.Sockets.Socket" />이 닫혔습니다.</exception>
      <exception cref="T:System.Net.Sockets.SocketException" vsli:raw="An error occurred when attempting to access the socket.">소켓에 액세스하는 동안 오류가 발생했습니다.</exception>
      <returns vsli:raw="&lt;see langword=&quot;true&quot; /&gt; if the I/O operation is pending. The &lt;see cref=&quot;E:System.Net.Sockets.SocketAsyncEventArgs.Completed&quot; /&gt; event on the &lt;paramref name=&quot;e&quot; /&gt; parameter will be raised upon completion of the operation.&#xA;&#xA; &lt;see langword=&quot;false&quot; /&gt; if the I/O operation completed synchronously. In this case, The &lt;see cref=&quot;E:System.Net.Sockets.SocketAsyncEventArgs.Completed&quot; /&gt; event on the &lt;paramref name=&quot;e&quot; /&gt; parameter will not be raised and the &lt;paramref name=&quot;e&quot; /&gt; object passed as a parameter may be examined immediately after the method call returns to retrieve the result of the operation.">I/O 작업이 보류 중인 경우 <see langword="true" />입니다. 작업이 완료되면 <paramref name="e" /> 매개 변수에 대한 <see cref="E:System.Net.Sockets.SocketAsyncEventArgs.Completed" /> 이벤트가 발생합니다.  
  
 I/O 작업이 동기적으로 완료된 경우 <see langword="false" />입니다. 이 경우에는 <paramref name="e" /> 매개 변수에서 <see cref="E:System.Net.Sockets.SocketAsyncEventArgs.Completed" /> 이벤트가 발생하지 않으며, 메서드 호출이 반환된 직후 매개 변수로 전달된 <paramref name="e" /> 개체를 검사하여 작업 결과를 검색할 수 있습니다.</returns>
    </member>
    <member name="M:System.Net.Sockets.Socket.ReceiveFrom(System.Byte[],System.Int32,System.Int32,System.Net.Sockets.SocketFlags,System.Net.EndPoint@)">
      <summary vsli:raw="Receives the specified number of bytes of data into the specified location of the data buffer, using the specified &lt;see cref=&quot;T:System.Net.Sockets.SocketFlags&quot; /&gt;, and stores the endpoint.">지정된 <see cref="T:System.Net.Sockets.SocketFlags" />를 사용하여 데이터 버퍼의 지정된 위치에 지정된 바이트 수의 데이터를 수신하고 엔드포인트를 저장합니다.</summary>
      <param name="buffer" vsli:raw="An array of type &lt;see cref=&quot;T:System.Byte&quot; /&gt; that is the storage location for received data.">수신된 데이터의 스토리지 위치에 해당하는 형식 <see cref="T:System.Byte" />의 배열입니다.</param>
      <param name="offset" vsli:raw="The position in the &lt;paramref name=&quot;buffer&quot; /&gt; parameter to store the received data.">수신된 데이터를 저장할 <paramref name="buffer" /> 매개 변수의 위치입니다.</param>
      <param name="size" vsli:raw="The number of bytes to receive.">수신 바이트 수입니다.</param>
      <param name="socketFlags" vsli:raw="A bitwise combination of the &lt;see cref=&quot;T:System.Net.Sockets.SocketFlags&quot; /&gt; values.">
        <see cref="T:System.Net.Sockets.SocketFlags" /> 값의 비트 조합입니다.</param>
      <param name="remoteEP" vsli:raw="A reference to an &lt;see cref=&quot;T:System.Net.EndPoint&quot; /&gt; of the same type as the endpoint of the remote host to be updated on successful receive.">원격 서버를 나타내며 참조에 의해 전달되는 <see cref="T:System.Net.EndPoint" />입니다.</param>
      <exception cref="T:System.ArgumentNullException" vsli:raw="&lt;paramref name=&quot;buffer&quot; /&gt; is &lt;see langword=&quot;null&quot; /&gt;.&#xA;&#xA; -or-&#xA;&#xA; &lt;paramref name=&quot;remoteEP&quot; /&gt; is &lt;see langword=&quot;null&quot; /&gt;.">
        <paramref name="buffer" />이(가) <see langword="null" />인 경우  
  
또는 
 <paramref name="remoteEP" />이(가) <see langword="null" />인 경우</exception>
      <exception cref="T:System.ArgumentOutOfRangeException" vsli:raw="&lt;paramref name=&quot;offset&quot; /&gt; is less than 0.&#xA;&#xA; -or-&#xA;&#xA; &lt;paramref name=&quot;offset&quot; /&gt; is greater than the length of &lt;paramref name=&quot;buffer&quot; /&gt;.&#xA;&#xA; -or-&#xA;&#xA; &lt;paramref name=&quot;size&quot; /&gt; is less than 0.&#xA;&#xA; -or-&#xA;&#xA; &lt;paramref name=&quot;size&quot; /&gt; is greater than the length of the &lt;paramref name=&quot;buffer&quot; /&gt; minus the value of the offset parameter.">
        <paramref name="offset" />가 0보다 작은 경우.  
  
또는 
 <paramref name="offset" />이 <paramref name="buffer" />의 길이보다 큽니다.  
  
또는 
 <paramref name="size" />가 0보다 작은 경우.  
  
또는 
 <paramref name="size" />가 <paramref name="buffer" />의 길이에서 오프셋 매개 변수 값을 뺀 크기보다 큰 경우</exception>
      <exception cref="T:System.Net.Sockets.SocketException" vsli:raw="&lt;paramref name=&quot;socketFlags&quot; /&gt; is not a valid combination of values.&#xA;&#xA; -or-&#xA;&#xA; The &lt;see cref=&quot;P:System.Net.Sockets.Socket.LocalEndPoint&quot; /&gt; property was not set.&#xA;&#xA; -or-&#xA;&#xA; An error occurred when attempting to access the socket.">
        <paramref name="socketFlags" />가 값의 유효한 조합이 아닙니다.  
  
또는 
<see cref="P:System.Net.Sockets.Socket.LocalEndPoint" /> 속성이 설정되지 않은 경우  
  
또는 
소켓에 액세스하는 동안 오류가 발생했습니다.</exception>
      <exception cref="T:System.ObjectDisposedException" vsli:raw="The &lt;see cref=&quot;T:System.Net.Sockets.Socket&quot; /&gt; has been closed.">
        <see cref="T:System.Net.Sockets.Socket" />이 닫혔습니다.</exception>
      <returns vsli:raw="The number of bytes received.">받은 바이트 수입니다.</returns>
    </member>
    <member name="M:System.Net.Sockets.Socket.ReceiveFrom(System.Byte[],System.Int32,System.Net.Sockets.SocketFlags,System.Net.EndPoint@)">
      <summary vsli:raw="Receives the specified number of bytes into the data buffer, using the specified &lt;see cref=&quot;T:System.Net.Sockets.SocketFlags&quot; /&gt;, and stores the endpoint.">지정된 <see cref="T:System.Net.Sockets.SocketFlags" />를 사용하여 데이터 버퍼에 원하는 바이트 수를 받고 엔드포인트를 저장합니다.</summary>
      <param name="buffer" vsli:raw="An array of type &lt;see cref=&quot;T:System.Byte&quot; /&gt; that is the storage location for received data.">수신된 데이터의 스토리지 위치에 해당하는 형식 <see cref="T:System.Byte" />의 배열입니다.</param>
      <param name="size" vsli:raw="The number of bytes to receive.">수신 바이트 수입니다.</param>
      <param name="socketFlags" vsli:raw="A bitwise combination of the &lt;see cref=&quot;T:System.Net.Sockets.SocketFlags&quot; /&gt; values.">
        <see cref="T:System.Net.Sockets.SocketFlags" /> 값의 비트 조합입니다.</param>
      <param name="remoteEP" vsli:raw="A reference to an &lt;see cref=&quot;T:System.Net.EndPoint&quot; /&gt; of the same type as the endpoint of the remote host to be updated on successful receive.">원격 서버를 나타내며 참조에 의해 전달되는 <see cref="T:System.Net.EndPoint" />입니다.</param>
      <exception cref="T:System.ArgumentNullException" vsli:raw="&lt;paramref name=&quot;buffer&quot; /&gt; is &lt;see langword=&quot;null&quot; /&gt;.&#xA;&#xA; -or-&#xA;&#xA; &lt;paramref name=&quot;remoteEP&quot; /&gt; is &lt;see langword=&quot;null&quot; /&gt;.">
        <paramref name="buffer" />이(가) <see langword="null" />인 경우  
  
또는 
 <paramref name="remoteEP" />이(가) <see langword="null" />인 경우</exception>
      <exception cref="T:System.ArgumentOutOfRangeException" vsli:raw="&lt;paramref name=&quot;size&quot; /&gt; is less than 0.&#xA;&#xA; -or-&#xA;&#xA; &lt;paramref name=&quot;size&quot; /&gt; is greater than the length of &lt;paramref name=&quot;buffer&quot; /&gt;.">
        <paramref name="size" />가 0보다 작은 경우.  
  
또는 
 <paramref name="size" />이 <paramref name="buffer" />의 길이보다 큽니다.</exception>
      <exception cref="T:System.Net.Sockets.SocketException" vsli:raw="&lt;paramref name=&quot;socketFlags&quot; /&gt; is not a valid combination of values.&#xA;&#xA; -or-&#xA;&#xA; The &lt;see cref=&quot;P:System.Net.Sockets.Socket.LocalEndPoint&quot; /&gt; property was not set.&#xA;&#xA; -or-&#xA;&#xA; An operating system error occurs while accessing the &lt;see cref=&quot;T:System.Net.Sockets.Socket&quot; /&gt;.">
        <paramref name="socketFlags" />가 값의 유효한 조합이 아닌 경우  
  
또는 
<see cref="P:System.Net.Sockets.Socket.LocalEndPoint" /> 속성이 설정되지 않은 경우  
  
또는 
<see cref="T:System.Net.Sockets.Socket" />에 액세스하는 동안 운영 체제 오류가 발생한 경우</exception>
      <exception cref="T:System.ObjectDisposedException" vsli:raw="The &lt;see cref=&quot;T:System.Net.Sockets.Socket&quot; /&gt; has been closed.">
        <see cref="T:System.Net.Sockets.Socket" />이 닫혔습니다.</exception>
      <exception cref="T:System.Security.SecurityException" vsli:raw="A caller in the call stack does not have the required permissions.">호출 스택에 있는 호출자에게 필요한 권한이 없는 경우</exception>
      <returns vsli:raw="The number of bytes received.">받은 바이트 수입니다.</returns>
    </member>
    <member name="M:System.Net.Sockets.Socket.ReceiveFrom(System.Byte[],System.Net.EndPoint@)">
      <summary vsli:raw="Receives a datagram into the data buffer and stores the endpoint.">데이터 버퍼에 데이터그램을 받고 엔드포인트를 저장합니다.</summary>
      <param name="buffer" vsli:raw="An array of type &lt;see cref=&quot;T:System.Byte&quot; /&gt; that is the storage location for received data.">수신된 데이터의 스토리지 위치에 해당하는 형식 <see cref="T:System.Byte" />의 배열입니다.</param>
      <param name="remoteEP" vsli:raw="A reference to an &lt;see cref=&quot;T:System.Net.EndPoint&quot; /&gt; of the same type as the endpoint of the remote host to be updated on successful receive.">원격 서버를 나타내며 참조에 의해 전달되는 <see cref="T:System.Net.EndPoint" />입니다.</param>
      <exception cref="T:System.ArgumentNullException" vsli:raw="&lt;paramref name=&quot;buffer&quot; /&gt; is &lt;see langword=&quot;null&quot; /&gt;.&#xA;&#xA; -or-&#xA;&#xA; &lt;paramref name=&quot;remoteEP&quot; /&gt; is &lt;see langword=&quot;null&quot; /&gt;.">
        <paramref name="buffer" />이(가) <see langword="null" />인 경우  
  
또는 
 <paramref name="remoteEP" />이(가) <see langword="null" />인 경우</exception>
      <exception cref="T:System.Net.Sockets.SocketException" vsli:raw="An error occurred when attempting to access the socket.">소켓에 액세스하는 동안 오류가 발생했습니다.</exception>
      <exception cref="T:System.ObjectDisposedException" vsli:raw="The &lt;see cref=&quot;T:System.Net.Sockets.Socket&quot; /&gt; has been closed.">
        <see cref="T:System.Net.Sockets.Socket" />이 닫혔습니다.</exception>
      <exception cref="T:System.Security.SecurityException" vsli:raw="A caller in the call stack does not have the required permissions.">호출 스택에 있는 호출자에게 필요한 권한이 없는 경우</exception>
      <returns vsli:raw="The number of bytes received.">받은 바이트 수입니다.</returns>
    </member>
    <member name="M:System.Net.Sockets.Socket.ReceiveFrom(System.Byte[],System.Net.Sockets.SocketFlags,System.Net.EndPoint@)">
      <summary vsli:raw="Receives a datagram into the data buffer, using the specified &lt;see cref=&quot;T:System.Net.Sockets.SocketFlags&quot; /&gt;, and stores the endpoint.">지정된 <see cref="T:System.Net.Sockets.SocketFlags" />를 사용하여 데이터 버퍼에 데이터그램을 받고 엔드포인트를 저장합니다.</summary>
      <param name="buffer" vsli:raw="An array of type &lt;see cref=&quot;T:System.Byte&quot; /&gt; that is the storage location for the received data.">수신된 데이터에 대한 스토리지 위치인 <see cref="T:System.Byte" /> 형식의 배열입니다.</param>
      <param name="socketFlags" vsli:raw="A bitwise combination of the &lt;see cref=&quot;T:System.Net.Sockets.SocketFlags&quot; /&gt; values.">
        <see cref="T:System.Net.Sockets.SocketFlags" /> 값의 비트 조합입니다.</param>
      <param name="remoteEP" vsli:raw="A reference to an &lt;see cref=&quot;T:System.Net.EndPoint&quot; /&gt; of the same type as the endpoint of the remote host to be updated on successful receive.">원격 서버를 나타내며 참조에 의해 전달되는 <see cref="T:System.Net.EndPoint" />입니다.</param>
      <exception cref="T:System.ArgumentNullException" vsli:raw="&lt;paramref name=&quot;buffer&quot; /&gt; is &lt;see langword=&quot;null&quot; /&gt;.&#xA;&#xA; -or-&#xA;&#xA; &lt;paramref name=&quot;remoteEP&quot; /&gt; is &lt;see langword=&quot;null&quot; /&gt;.">
        <paramref name="buffer" />이(가) <see langword="null" />인 경우  
  
또는 
 <paramref name="remoteEP" />이(가) <see langword="null" />인 경우</exception>
      <exception cref="T:System.Net.Sockets.SocketException" vsli:raw="An error occurred when attempting to access the socket.">소켓에 액세스하는 동안 오류가 발생했습니다.</exception>
      <exception cref="T:System.ObjectDisposedException" vsli:raw="The &lt;see cref=&quot;T:System.Net.Sockets.Socket&quot; /&gt; has been closed.">
        <see cref="T:System.Net.Sockets.Socket" />이 닫혔습니다.</exception>
      <exception cref="T:System.Security.SecurityException" vsli:raw="A caller in the call stack does not have the required permissions.">호출 스택에 있는 호출자에게 필요한 권한이 없는 경우</exception>
      <returns vsli:raw="The number of bytes received.">받은 바이트 수입니다.</returns>
    </member>
    <member name="M:System.Net.Sockets.Socket.ReceiveFromAsync(System.Net.Sockets.SocketAsyncEventArgs)">
      <summary vsli:raw="Begins to asynchronously receive data from a specified network device.">지정된 네트워크 디바이스에서 비동기적으로 데이터를 받기 시작합니다.</summary>
      <param name="e" vsli:raw="The &lt;see cref=&quot;T:System.Net.Sockets.SocketAsyncEventArgs&quot; /&gt; object to use for this asynchronous socket operation.">이 비동기 소켓 작업에 사용할 <see cref="T:System.Net.Sockets.SocketAsyncEventArgs" /> 개체입니다.</param>
      <exception cref="T:System.ArgumentNullException" vsli:raw="The &lt;see cref=&quot;P:System.Net.Sockets.SocketAsyncEventArgs.RemoteEndPoint&quot; /&gt; cannot be null.">
        <see cref="P:System.Net.Sockets.SocketAsyncEventArgs.RemoteEndPoint" />가 null인 경우</exception>
      <exception cref="T:System.InvalidOperationException" vsli:raw="A socket operation was already in progress using the &lt;see cref=&quot;T:System.Net.Sockets.SocketAsyncEventArgs&quot; /&gt; object specified in the &lt;paramref name=&quot;e&quot; /&gt; parameter.">
        <paramref name="e" /> 매개 변수에 지정된 <see cref="T:System.Net.Sockets.SocketAsyncEventArgs" /> 개체를 사용하여 소켓 작업이 이미 진행 중인 경우</exception>
      <exception cref="T:System.NotSupportedException">이 메서드에 Windows XP 이상이 필요한 경우.</exception>
      <exception cref="T:System.ObjectDisposedException" vsli:raw="The &lt;see cref=&quot;T:System.Net.Sockets.Socket&quot; /&gt; has been closed.">
        <see cref="T:System.Net.Sockets.Socket" />이 닫혔습니다.</exception>
      <exception cref="T:System.Net.Sockets.SocketException" vsli:raw="An error occurred when attempting to access the socket.">소켓에 액세스하는 동안 오류가 발생했습니다.</exception>
      <returns vsli:raw="&lt;see langword=&quot;true&quot; /&gt; if the I/O operation is pending. The &lt;see cref=&quot;E:System.Net.Sockets.SocketAsyncEventArgs.Completed&quot; /&gt; event on the &lt;paramref name=&quot;e&quot; /&gt; parameter will be raised upon completion of the operation.&#xA;&#xA; &lt;see langword=&quot;false&quot; /&gt; if the I/O operation completed synchronously. In this case, The &lt;see cref=&quot;E:System.Net.Sockets.SocketAsyncEventArgs.Completed&quot; /&gt; event on the &lt;paramref name=&quot;e&quot; /&gt; parameter will not be raised and the &lt;paramref name=&quot;e&quot; /&gt; object passed as a parameter may be examined immediately after the method call returns to retrieve the result of the operation.">I/O 작업이 보류 중인 경우 <see langword="true" />입니다. 작업이 완료되면 <paramref name="e" /> 매개 변수에 대한 <see cref="E:System.Net.Sockets.SocketAsyncEventArgs.Completed" /> 이벤트가 발생합니다.  
  
 I/O 작업이 동기적으로 완료된 경우 <see langword="false" />입니다. 이 경우에는 <paramref name="e" /> 매개 변수에서 <see cref="E:System.Net.Sockets.SocketAsyncEventArgs.Completed" /> 이벤트가 발생하지 않으며, 메서드 호출이 반환된 직후 매개 변수로 전달된 <paramref name="e" /> 개체를 검사하여 작업 결과를 검색할 수 있습니다.</returns>
    </member>
    <member name="M:System.Net.Sockets.Socket.ReceiveMessageFrom(System.Byte[],System.Int32,System.Int32,System.Net.Sockets.SocketFlags@,System.Net.EndPoint@,System.Net.Sockets.IPPacketInformation@)">
      <summary vsli:raw="Receives the specified number of bytes of data into the specified location of the data buffer, using the specified &lt;see cref=&quot;T:System.Net.Sockets.SocketFlags&quot; /&gt;, and stores the endpoint and packet information.">지정된 <see cref="T:System.Net.Sockets.SocketFlags" />를 사용하여 데이터 버퍼의 지정된 위치에 지정된 바이트 수의 데이터를 수신하고 엔드포인트 및 패킷 정보를 저장합니다.</summary>
      <param name="buffer" vsli:raw="An array of type &lt;see cref=&quot;T:System.Byte&quot; /&gt; that is the storage location for received data.">수신된 데이터의 스토리지 위치에 해당하는 형식 <see cref="T:System.Byte" />의 배열입니다.</param>
      <param name="offset" vsli:raw="The position in the &lt;paramref name=&quot;buffer&quot; /&gt; parameter to store the received data.">수신된 데이터를 저장할 <paramref name="buffer" /> 매개 변수의 위치입니다.</param>
      <param name="size" vsli:raw="The number of bytes to receive.">수신 바이트 수입니다.</param>
      <param name="socketFlags" vsli:raw="A bitwise combination of the &lt;see cref=&quot;T:System.Net.Sockets.SocketFlags&quot; /&gt; values.">
        <see cref="T:System.Net.Sockets.SocketFlags" /> 값의 비트 조합입니다.</param>
      <param name="remoteEP" vsli:raw="A reference to an &lt;see cref=&quot;T:System.Net.EndPoint&quot; /&gt; of the same type as the endpoint of the remote host to be updated on successful receive.">원격 서버를 나타내며 참조에 의해 전달되는 <see cref="T:System.Net.EndPoint" />입니다.</param>
      <param name="ipPacketInformation" vsli:raw="An &lt;see cref=&quot;T:System.Net.Sockets.IPPacketInformation&quot; /&gt; holding address and interface information.">
        <see cref="T:System.Net.Sockets.IPPacketInformation" /> 보유 주소 및 인터페이스 정보입니다.</param>
      <exception cref="T:System.ArgumentNullException" vsli:raw="&lt;paramref name=&quot;buffer&quot; /&gt; is &lt;see langword=&quot;null&quot; /&gt;.&#xA;&#xA; -or-&#xA;&#xA; &lt;paramref name=&quot;remoteEP&quot; /&gt; is &lt;see langword=&quot;null&quot; /&gt;.">
        <paramref name="buffer" />이(가) <see langword="null" />인 경우  
  
또는 
 <paramref name="remoteEP" />이(가) <see langword="null" />인 경우</exception>
      <exception cref="T:System.ArgumentOutOfRangeException" vsli:raw="&lt;paramref name=&quot;offset&quot; /&gt; is less than 0.&#xA;&#xA; -or-&#xA;&#xA; &lt;paramref name=&quot;offset&quot; /&gt; is greater than the length of &lt;paramref name=&quot;buffer&quot; /&gt;.&#xA;&#xA; -or-&#xA;&#xA; &lt;paramref name=&quot;size&quot; /&gt; is less than 0.&#xA;&#xA; -or-&#xA;&#xA; &lt;paramref name=&quot;size&quot; /&gt; is greater than the length of the &lt;paramref name=&quot;buffer&quot; /&gt; minus the value of the offset parameter.">
        <paramref name="offset" />가 0보다 작은 경우.  
  
또는 
 <paramref name="offset" />이 <paramref name="buffer" />의 길이보다 큽니다.  
  
또는 
 <paramref name="size" />가 0보다 작은 경우.  
  
또는 
 <paramref name="size" />가 <paramref name="buffer" />의 길이에서 오프셋 매개 변수 값을 뺀 크기보다 큰 경우</exception>
      <exception cref="T:System.Net.Sockets.SocketException" vsli:raw="&lt;paramref name=&quot;socketFlags&quot; /&gt; is not a valid combination of values.&#xA;&#xA; -or-&#xA;&#xA; The &lt;see cref=&quot;P:System.Net.Sockets.Socket.LocalEndPoint&quot; /&gt; property was not set.&#xA;&#xA; -or-&#xA;&#xA; The .NET Framework is running on an AMD 64-bit processor.&#xA;&#xA; -or-&#xA;&#xA; An error occurred when attempting to access the socket.">
        <paramref name="socketFlags" />가 값의 유효한 조합이 아닙니다.  
  
또는 
<see cref="P:System.Net.Sockets.Socket.LocalEndPoint" /> 속성이 설정되지 않은 경우  
  
또는 
.NET Framework가 AMD 64비트 프로세서에서 실행 중인 경우  
  
또는 
소켓에 액세스하는 동안 오류가 발생했습니다.</exception>
      <exception cref="T:System.ObjectDisposedException" vsli:raw="The &lt;see cref=&quot;T:System.Net.Sockets.Socket&quot; /&gt; has been closed.">
        <see cref="T:System.Net.Sockets.Socket" />이 닫혔습니다.</exception>
      <returns vsli:raw="The number of bytes received.">받은 바이트 수입니다.</returns>
    </member>
    <member name="M:System.Net.Sockets.Socket.ReceiveMessageFromAsync(System.Net.Sockets.SocketAsyncEventArgs)">
      <summary vsli:raw="Begins to asynchronously receive the specified number of bytes of data into the specified location in the data buffer, using the specified &lt;see cref=&quot;P:System.Net.Sockets.SocketAsyncEventArgs.SocketFlags&quot; /&gt;, and stores the endpoint and packet information.">지정된 <see cref="P:System.Net.Sockets.SocketAsyncEventArgs.SocketFlags" />를 사용하여 원하는 바이트 수의 데이터를 데이터 버퍼의 특정 위치로 받는 비동기 작업을 시작하고 엔드포인트 및 패킷 정보를 저장합니다.</summary>
      <param name="e" vsli:raw="The &lt;see cref=&quot;T:System.Net.Sockets.SocketAsyncEventArgs&quot; /&gt; object to use for this asynchronous socket operation.">이 비동기 소켓 작업에 사용할 <see cref="T:System.Net.Sockets.SocketAsyncEventArgs" /> 개체입니다.</param>
      <exception cref="T:System.ArgumentNullException" vsli:raw="The &lt;see cref=&quot;P:System.Net.Sockets.SocketAsyncEventArgs.RemoteEndPoint&quot; /&gt; cannot be null.">
        <see cref="P:System.Net.Sockets.SocketAsyncEventArgs.RemoteEndPoint" />가 null인 경우</exception>
      <exception cref="T:System.NotSupportedException">이 메서드에 Windows XP 이상이 필요한 경우.</exception>
      <exception cref="T:System.ObjectDisposedException" vsli:raw="The &lt;see cref=&quot;T:System.Net.Sockets.Socket&quot; /&gt; has been closed.">
        <see cref="T:System.Net.Sockets.Socket" />이 닫혔습니다.</exception>
      <exception cref="T:System.Net.Sockets.SocketException" vsli:raw="An error occurred when attempting to access the socket.">소켓에 액세스하는 동안 오류가 발생했습니다.</exception>
      <returns vsli:raw="&lt;see langword=&quot;true&quot; /&gt; if the I/O operation is pending. The &lt;see cref=&quot;E:System.Net.Sockets.SocketAsyncEventArgs.Completed&quot; /&gt; event on the &lt;paramref name=&quot;e&quot; /&gt; parameter will be raised upon completion of the operation.&#xA;&#xA; &lt;see langword=&quot;false&quot; /&gt; if the I/O operation completed synchronously. In this case, The &lt;see cref=&quot;E:System.Net.Sockets.SocketAsyncEventArgs.Completed&quot; /&gt; event on the &lt;paramref name=&quot;e&quot; /&gt; parameter will not be raised and the &lt;paramref name=&quot;e&quot; /&gt; object passed as a parameter may be examined immediately after the method call returns to retrieve the result of the operation.">I/O 작업이 보류 중인 경우 <see langword="true" />입니다. 작업이 완료되면 <paramref name="e" /> 매개 변수에 대한 <see cref="E:System.Net.Sockets.SocketAsyncEventArgs.Completed" /> 이벤트가 발생합니다.  
  
 I/O 작업이 동기적으로 완료된 경우 <see langword="false" />입니다. 이 경우에는 <paramref name="e" /> 매개 변수에서 <see cref="E:System.Net.Sockets.SocketAsyncEventArgs.Completed" /> 이벤트가 발생하지 않으며, 메서드 호출이 반환된 직후 매개 변수로 전달된 <paramref name="e" /> 개체를 검사하여 작업 결과를 검색할 수 있습니다.</returns>
    </member>
    <member name="M:System.Net.Sockets.Socket.Select(System.Collections.IList,System.Collections.IList,System.Collections.IList,System.Int32)">
      <summary vsli:raw="Determines the status of one or more sockets.">하나 이상의 소켓 상태를 확인합니다.</summary>
      <param name="checkRead" vsli:raw="An &lt;see cref=&quot;T:System.Collections.IList&quot; /&gt; of &lt;see cref=&quot;T:System.Net.Sockets.Socket&quot; /&gt; instances to check for readability.">가독성을 확인할 <see cref="T:System.Net.Sockets.Socket" /> 인스턴스의 <see cref="T:System.Collections.IList" />입니다.</param>
      <param name="checkWrite" vsli:raw="An &lt;see cref=&quot;T:System.Collections.IList&quot; /&gt; of &lt;see cref=&quot;T:System.Net.Sockets.Socket&quot; /&gt; instances to check for writability.">쓰기 가능성을 확인할 <see cref="T:System.Net.Sockets.Socket" /> 인스턴스의 <see cref="T:System.Collections.IList" />입니다.</param>
      <param name="checkError" vsli:raw="An &lt;see cref=&quot;T:System.Collections.IList&quot; /&gt; of &lt;see cref=&quot;T:System.Net.Sockets.Socket&quot; /&gt; instances to check for errors.">오류를 확인할 <see cref="T:System.Net.Sockets.Socket" /> 인스턴스의 <see cref="T:System.Collections.IList" />입니다.</param>
      <param name="microSeconds" vsli:raw="The time-out value, in microseconds. A -1 value indicates an infinite time-out.">시간 제한 값(마이크로초)입니다. 값 -1은 시간 제한이 없음을 나타냅니다.</param>
      <exception cref="T:System.ArgumentNullException" vsli:raw="The &lt;paramref name=&quot;checkRead&quot; /&gt; parameter is &lt;see langword=&quot;null&quot; /&gt; or empty.&#xA;&#xA; -and-&#xA;&#xA; The &lt;paramref name=&quot;checkWrite&quot; /&gt; parameter is &lt;see langword=&quot;null&quot; /&gt; or empty&#xA;&#xA; -and-&#xA;&#xA; The &lt;paramref name=&quot;checkError&quot; /&gt; parameter is &lt;see langword=&quot;null&quot; /&gt; or empty.">
        <paramref name="checkRead" /> 매개 변수가 <see langword="null" />이거나 비어 있는 경우  
  
및 
<paramref name="checkWrite" /> 매개 변수가 <see langword="null" />이거나 비어 있는 경우 
및 
<paramref name="checkError" /> 매개 변수가 <see langword="null" />이거나 비어 있는 경우</exception>
      <exception cref="T:System.Net.Sockets.SocketException" vsli:raw="An error occurred when attempting to access the socket.">소켓에 액세스하는 동안 오류가 발생했습니다.</exception>
      <exception cref="T:System.ObjectDisposedException" vsli:raw=".NET 5 and later: One or more sockets are disposed.">.NET 5.0 이상: 하나 이상의 소켓이 삭제됩니다.</exception>
    </member>
    <member name="M:System.Net.Sockets.Socket.Send(System.Byte[])">
      <summary vsli:raw="Sends data to a connected &lt;see cref=&quot;T:System.Net.Sockets.Socket&quot; /&gt;.">연결된 <see cref="T:System.Net.Sockets.Socket" />에 데이터를 보냅니다.</summary>
      <param name="buffer" vsli:raw="An array of type &lt;see cref=&quot;T:System.Byte&quot; /&gt; that contains the data to be sent.">전송할 데이터를 포함하는 형식 <see cref="T:System.Byte" />의 배열입니다.</param>
      <exception cref="T:System.ArgumentNullException" vsli:raw="&lt;paramref name=&quot;buffer&quot; /&gt; is &lt;see langword=&quot;null&quot; /&gt;.">
        <paramref name="buffer" />이(가) <see langword="null" />인 경우</exception>
      <exception cref="T:System.Net.Sockets.SocketException" vsli:raw="An error occurred when attempting to access the socket.">소켓에 액세스하는 동안 오류가 발생했습니다.</exception>
      <exception cref="T:System.ObjectDisposedException" vsli:raw="The &lt;see cref=&quot;T:System.Net.Sockets.Socket&quot; /&gt; has been closed.">
        <see cref="T:System.Net.Sockets.Socket" />이 닫혔습니다.</exception>
      <returns vsli:raw="The number of bytes sent to the &lt;see cref=&quot;T:System.Net.Sockets.Socket&quot; /&gt;.">
        <see cref="T:System.Net.Sockets.Socket" />에 보낸 바이트 수입니다.</returns>
    </member>
    <member name="M:System.Net.Sockets.Socket.Send(System.Byte[],System.Int32,System.Int32,System.Net.Sockets.SocketFlags)">
      <summary vsli:raw="Sends the specified number of bytes of data to a connected &lt;see cref=&quot;T:System.Net.Sockets.Socket&quot; /&gt;, starting at the specified offset, and using the specified &lt;see cref=&quot;T:System.Net.Sockets.SocketFlags&quot; /&gt;.">지정된 오프셋에서 시작하고 지정된 <see cref="T:System.Net.Sockets.SocketFlags" />를 사용하여 지정된 바이트 수의 데이터를 연결된 <see cref="T:System.Net.Sockets.Socket" />으로 전송합니다.</summary>
      <param name="buffer" vsli:raw="An array of type &lt;see cref=&quot;T:System.Byte&quot; /&gt; that contains the data to be sent.">전송할 데이터를 포함하는 형식 <see cref="T:System.Byte" />의 배열입니다.</param>
      <param name="offset" vsli:raw="The position in the data buffer at which to begin sending data.">데이터 보내기를 시작할 데이터 버퍼의 위치입니다.</param>
      <param name="size" vsli:raw="The number of bytes to send.">보낼 바이트 수입니다.</param>
      <param name="socketFlags" vsli:raw="A bitwise combination of the &lt;see cref=&quot;T:System.Net.Sockets.SocketFlags&quot; /&gt; values.">
        <see cref="T:System.Net.Sockets.SocketFlags" /> 값의 비트 조합입니다.</param>
      <exception cref="T:System.ArgumentNullException" vsli:raw="&lt;paramref name=&quot;buffer&quot; /&gt; is &lt;see langword=&quot;null&quot; /&gt;.">
        <paramref name="buffer" />이(가) <see langword="null" />인 경우</exception>
      <exception cref="T:System.ArgumentOutOfRangeException" vsli:raw="&lt;paramref name=&quot;offset&quot; /&gt; is less than 0.&#xA;&#xA; -or-&#xA;&#xA; &lt;paramref name=&quot;offset&quot; /&gt; is greater than the length of &lt;paramref name=&quot;buffer&quot; /&gt;.&#xA;&#xA; -or-&#xA;&#xA; &lt;paramref name=&quot;size&quot; /&gt; is less than 0.&#xA;&#xA; -or-&#xA;&#xA; &lt;paramref name=&quot;size&quot; /&gt; is greater than the length of &lt;paramref name=&quot;buffer&quot; /&gt; minus the value of the &lt;paramref name=&quot;offset&quot; /&gt; parameter.">
        <paramref name="offset" />가 0보다 작은 경우.  
  
또는 
 <paramref name="offset" />이 <paramref name="buffer" />의 길이보다 큽니다.  
  
또는 
 <paramref name="size" />가 0보다 작은 경우.  
  
또는 
 <paramref name="size" />가 <paramref name="buffer" />의 길이에서 <paramref name="offset" /> 매개 변수 값을 뺀 크기보다 큰 경우</exception>
      <exception cref="T:System.Net.Sockets.SocketException" vsli:raw="&lt;paramref name=&quot;socketFlags&quot; /&gt; is not a valid combination of values.&#xA;&#xA; -or-&#xA;&#xA; An operating system error occurs while accessing the &lt;see cref=&quot;T:System.Net.Sockets.Socket&quot; /&gt;.">
        <paramref name="socketFlags" />가 값의 유효한 조합이 아닌 경우  
  
또는 
<see cref="T:System.Net.Sockets.Socket" />에 액세스하는 동안 운영 체제 오류가 발생한 경우</exception>
      <exception cref="T:System.ObjectDisposedException" vsli:raw="The &lt;see cref=&quot;T:System.Net.Sockets.Socket&quot; /&gt; has been closed.">
        <see cref="T:System.Net.Sockets.Socket" />이 닫혔습니다.</exception>
      <returns vsli:raw="The number of bytes sent to the &lt;see cref=&quot;T:System.Net.Sockets.Socket&quot; /&gt;.">
        <see cref="T:System.Net.Sockets.Socket" />에 보낸 바이트 수입니다.</returns>
    </member>
    <member name="M:System.Net.Sockets.Socket.Send(System.Byte[],System.Int32,System.Int32,System.Net.Sockets.SocketFlags,System.Net.Sockets.SocketError@)">
      <summary vsli:raw="Sends the specified number of bytes of data to a connected &lt;see cref=&quot;T:System.Net.Sockets.Socket&quot; /&gt;, starting at the specified offset, and using the specified &lt;see cref=&quot;T:System.Net.Sockets.SocketFlags&quot; /&gt;.">지정된 <see cref="T:System.Net.Sockets.Socket" />를 사용하여 지정된 오프셋부터 원하는 바이트 수의 데이터를 연결된 <see cref="T:System.Net.Sockets.SocketFlags" />에 보냅니다.</summary>
      <param name="buffer" vsli:raw="An array of type &lt;see cref=&quot;T:System.Byte&quot; /&gt; that contains the data to be sent.">전송할 데이터를 포함하는 형식 <see cref="T:System.Byte" />의 배열입니다.</param>
      <param name="offset" vsli:raw="The position in the data buffer at which to begin sending data.">데이터 보내기를 시작할 데이터 버퍼의 위치입니다.</param>
      <param name="size" vsli:raw="The number of bytes to send.">보낼 바이트 수입니다.</param>
      <param name="socketFlags" vsli:raw="A bitwise combination of the &lt;see cref=&quot;T:System.Net.Sockets.SocketFlags&quot; /&gt; values.">
        <see cref="T:System.Net.Sockets.SocketFlags" /> 값의 비트 조합입니다.</param>
      <param name="errorCode" vsli:raw="A &lt;see cref=&quot;T:System.Net.Sockets.SocketError&quot; /&gt; object that stores the socket error.">소켓 오류를 저장하는 <see cref="T:System.Net.Sockets.SocketError" /> 개체입니다.</param>
      <exception cref="T:System.ArgumentNullException" vsli:raw="&lt;paramref name=&quot;buffer&quot; /&gt; is &lt;see langword=&quot;null&quot; /&gt;.">
        <paramref name="buffer" />이(가) <see langword="null" />인 경우</exception>
      <exception cref="T:System.ArgumentOutOfRangeException" vsli:raw="&lt;paramref name=&quot;offset&quot; /&gt; is less than 0.&#xA;&#xA; -or-&#xA;&#xA; &lt;paramref name=&quot;offset&quot; /&gt; is greater than the length of &lt;paramref name=&quot;buffer&quot; /&gt;.&#xA;&#xA; -or-&#xA;&#xA; &lt;paramref name=&quot;size&quot; /&gt; is less than 0.&#xA;&#xA; -or-&#xA;&#xA; &lt;paramref name=&quot;size&quot; /&gt; is greater than the length of &lt;paramref name=&quot;buffer&quot; /&gt; minus the value of the &lt;paramref name=&quot;offset&quot; /&gt; parameter.">
        <paramref name="offset" />가 0보다 작은 경우.  
  
또는 
 <paramref name="offset" />이 <paramref name="buffer" />의 길이보다 큽니다.  
  
또는 
 <paramref name="size" />가 0보다 작은 경우.  
  
또는 
 <paramref name="size" />가 <paramref name="buffer" />의 길이에서 <paramref name="offset" /> 매개 변수 값을 뺀 크기보다 큰 경우</exception>
      <exception cref="T:System.Net.Sockets.SocketException" vsli:raw="&lt;paramref name=&quot;socketFlags&quot; /&gt; is not a valid combination of values.&#xA;&#xA; -or-&#xA;&#xA; An operating system error occurs while accessing the &lt;see cref=&quot;T:System.Net.Sockets.Socket&quot; /&gt;.">
        <paramref name="socketFlags" />가 값의 유효한 조합이 아닌 경우  
  
또는 
<see cref="T:System.Net.Sockets.Socket" />에 액세스하는 동안 운영 체제 오류가 발생한 경우</exception>
      <exception cref="T:System.ObjectDisposedException" vsli:raw="The &lt;see cref=&quot;T:System.Net.Sockets.Socket&quot; /&gt; has been closed.">
        <see cref="T:System.Net.Sockets.Socket" />이 닫혔습니다.</exception>
      <returns vsli:raw="The number of bytes sent to the &lt;see cref=&quot;T:System.Net.Sockets.Socket&quot; /&gt;.">
        <see cref="T:System.Net.Sockets.Socket" />에 보낸 바이트 수입니다.</returns>
    </member>
    <member name="M:System.Net.Sockets.Socket.Send(System.Byte[],System.Int32,System.Net.Sockets.SocketFlags)">
      <summary vsli:raw="Sends the specified number of bytes of data to a connected &lt;see cref=&quot;T:System.Net.Sockets.Socket&quot; /&gt;, using the specified &lt;see cref=&quot;T:System.Net.Sockets.SocketFlags&quot; /&gt;.">지정된 <see cref="T:System.Net.Sockets.Socket" />를 사용하여 원하는 바이트 수의 데이터를 연결된 <see cref="T:System.Net.Sockets.SocketFlags" />에 보냅니다.</summary>
      <param name="buffer" vsli:raw="An array of type &lt;see cref=&quot;T:System.Byte&quot; /&gt; that contains the data to be sent.">전송할 데이터를 포함하는 형식 <see cref="T:System.Byte" />의 배열입니다.</param>
      <param name="size" vsli:raw="The number of bytes to send.">보낼 바이트 수입니다.</param>
      <param name="socketFlags" vsli:raw="A bitwise combination of the &lt;see cref=&quot;T:System.Net.Sockets.SocketFlags&quot; /&gt; values.">
        <see cref="T:System.Net.Sockets.SocketFlags" /> 값의 비트 조합입니다.</param>
      <exception cref="T:System.ArgumentNullException" vsli:raw="&lt;paramref name=&quot;buffer&quot; /&gt; is &lt;see langword=&quot;null&quot; /&gt;.">
        <paramref name="buffer" />이(가) <see langword="null" />인 경우</exception>
      <exception cref="T:System.ArgumentOutOfRangeException" vsli:raw="&lt;paramref name=&quot;size&quot; /&gt; is less than 0 or exceeds the size of the buffer.">
        <paramref name="size" />가 0보다 작거나 버퍼 크기를 초과하는 경우</exception>
      <exception cref="T:System.Net.Sockets.SocketException" vsli:raw="&lt;paramref name=&quot;socketFlags&quot; /&gt; is not a valid combination of values.&#xA;&#xA; -or-&#xA;&#xA; An operating system error occurs while accessing the socket.">
        <paramref name="socketFlags" />가 값의 유효한 조합이 아닌 경우  
  
또는 
소켓에 액세스하는 동안 운영 체제 오류가 발생한 경우.</exception>
      <exception cref="T:System.ObjectDisposedException" vsli:raw="The &lt;see cref=&quot;T:System.Net.Sockets.Socket&quot; /&gt; has been closed.">
        <see cref="T:System.Net.Sockets.Socket" />이 닫혔습니다.</exception>
      <returns vsli:raw="The number of bytes sent to the &lt;see cref=&quot;T:System.Net.Sockets.Socket&quot; /&gt;.">
        <see cref="T:System.Net.Sockets.Socket" />에 보낸 바이트 수입니다.</returns>
    </member>
    <member name="M:System.Net.Sockets.Socket.Send(System.Byte[],System.Net.Sockets.SocketFlags)">
      <summary vsli:raw="Sends data to a connected &lt;see cref=&quot;T:System.Net.Sockets.Socket&quot; /&gt; using the specified &lt;see cref=&quot;T:System.Net.Sockets.SocketFlags&quot; /&gt;.">지정된 <see cref="T:System.Net.Sockets.Socket" />를 사용하여 데이터를 연결된 <see cref="T:System.Net.Sockets.SocketFlags" />에 보냅니다.</summary>
      <param name="buffer" vsli:raw="An array of type &lt;see cref=&quot;T:System.Byte&quot; /&gt; that contains the data to be sent.">전송할 데이터를 포함하는 형식 <see cref="T:System.Byte" />의 배열입니다.</param>
      <param name="socketFlags" vsli:raw="A bitwise combination of the &lt;see cref=&quot;T:System.Net.Sockets.SocketFlags&quot; /&gt; values.">
        <see cref="T:System.Net.Sockets.SocketFlags" /> 값의 비트 조합입니다.</param>
      <exception cref="T:System.ArgumentNullException" vsli:raw="&lt;paramref name=&quot;buffer&quot; /&gt; is &lt;see langword=&quot;null&quot; /&gt;.">
        <paramref name="buffer" />이(가) <see langword="null" />인 경우</exception>
      <exception cref="T:System.Net.Sockets.SocketException" vsli:raw="An error occurred when attempting to access the socket.">소켓에 액세스하는 동안 오류가 발생했습니다.</exception>
      <exception cref="T:System.ObjectDisposedException" vsli:raw="The &lt;see cref=&quot;T:System.Net.Sockets.Socket&quot; /&gt; has been closed.">
        <see cref="T:System.Net.Sockets.Socket" />이 닫혔습니다.</exception>
      <returns vsli:raw="The number of bytes sent to the &lt;see cref=&quot;T:System.Net.Sockets.Socket&quot; /&gt;.">
        <see cref="T:System.Net.Sockets.Socket" />에 보낸 바이트 수입니다.</returns>
    </member>
    <member name="M:System.Net.Sockets.Socket.Send(System.Collections.Generic.IList{System.ArraySegment{System.Byte}})">
      <summary vsli:raw="Sends the set of buffers in the list to a connected &lt;see cref=&quot;T:System.Net.Sockets.Socket&quot; /&gt;.">목록에 있는 버퍼 집합을 연결된 <see cref="T:System.Net.Sockets.Socket" />으로 보냅니다.</summary>
      <param name="buffers" vsli:raw="A list of &lt;see cref=&quot;T:System.ArraySegment`1&quot; /&gt;s of type &lt;see cref=&quot;T:System.Byte&quot; /&gt; that contains the data to be sent.">보낼 데이터가 들어 있는 <see cref="T:System.ArraySegment`1" /> 형식의 <see cref="T:System.Byte" /> 목록입니다.</param>
      <exception cref="T:System.ArgumentNullException" vsli:raw="&lt;paramref name=&quot;buffers&quot; /&gt; is &lt;see langword=&quot;null&quot; /&gt;.">
        <paramref name="buffers" />이(가) <see langword="null" />인 경우</exception>
      <exception cref="T:System.ArgumentException" vsli:raw="&lt;paramref name=&quot;buffers&quot; /&gt; is empty.">
        <paramref name="buffers" />가 비어 있는 경우</exception>
      <exception cref="T:System.Net.Sockets.SocketException" vsli:raw="An error occurred when attempting to access the socket. See remarks section below.">소켓에 액세스하는 동안 오류가 발생했습니다. 아래의 설명 부분을 참조하십시오.</exception>
      <exception cref="T:System.ObjectDisposedException" vsli:raw="The &lt;see cref=&quot;T:System.Net.Sockets.Socket&quot; /&gt; has been closed.">
        <see cref="T:System.Net.Sockets.Socket" />이 닫혔습니다.</exception>
      <returns vsli:raw="The number of bytes sent to the &lt;see cref=&quot;T:System.Net.Sockets.Socket&quot; /&gt;.">
        <see cref="T:System.Net.Sockets.Socket" />에 보낸 바이트 수입니다.</returns>
    </member>
    <member name="M:System.Net.Sockets.Socket.Send(System.Collections.Generic.IList{System.ArraySegment{System.Byte}},System.Net.Sockets.SocketFlags)">
      <summary vsli:raw="Sends the set of buffers in the list to a connected &lt;see cref=&quot;T:System.Net.Sockets.Socket&quot; /&gt;, using the specified &lt;see cref=&quot;T:System.Net.Sockets.SocketFlags&quot; /&gt;.">지정된 <see cref="T:System.Net.Sockets.Socket" />를 사용하여 목록에 있는 버퍼 집합을 연결된 <see cref="T:System.Net.Sockets.SocketFlags" />으로 보냅니다.</summary>
      <param name="buffers" vsli:raw="A list of &lt;see cref=&quot;T:System.ArraySegment`1&quot; /&gt;s of type &lt;see cref=&quot;T:System.Byte&quot; /&gt; that contains the data to be sent.">보낼 데이터가 들어 있는 <see cref="T:System.ArraySegment`1" /> 형식의 <see cref="T:System.Byte" /> 목록입니다.</param>
      <param name="socketFlags" vsli:raw="A bitwise combination of the &lt;see cref=&quot;T:System.Net.Sockets.SocketFlags&quot; /&gt; values.">
        <see cref="T:System.Net.Sockets.SocketFlags" /> 값의 비트 조합입니다.</param>
      <exception cref="T:System.ArgumentNullException" vsli:raw="&lt;paramref name=&quot;buffers&quot; /&gt; is &lt;see langword=&quot;null&quot; /&gt;.">
        <paramref name="buffers" />이(가) <see langword="null" />인 경우</exception>
      <exception cref="T:System.ArgumentException" vsli:raw="&lt;paramref name=&quot;buffers&quot; /&gt; is empty.">
        <paramref name="buffers" />가 비어 있는 경우</exception>
      <exception cref="T:System.Net.Sockets.SocketException" vsli:raw="An error occurred when attempting to access the socket.">소켓에 액세스하는 동안 오류가 발생했습니다.</exception>
      <exception cref="T:System.ObjectDisposedException" vsli:raw="The &lt;see cref=&quot;T:System.Net.Sockets.Socket&quot; /&gt; has been closed.">
        <see cref="T:System.Net.Sockets.Socket" />이 닫혔습니다.</exception>
      <returns vsli:raw="The number of bytes sent to the &lt;see cref=&quot;T:System.Net.Sockets.Socket&quot; /&gt;.">
        <see cref="T:System.Net.Sockets.Socket" />에 보낸 바이트 수입니다.</returns>
    </member>
    <member name="M:System.Net.Sockets.Socket.Send(System.Collections.Generic.IList{System.ArraySegment{System.Byte}},System.Net.Sockets.SocketFlags,System.Net.Sockets.SocketError@)">
      <summary vsli:raw="Sends the set of buffers in the list to a connected &lt;see cref=&quot;T:System.Net.Sockets.Socket&quot; /&gt;, using the specified &lt;see cref=&quot;T:System.Net.Sockets.SocketFlags&quot; /&gt;.">지정된 <see cref="T:System.Net.Sockets.Socket" />를 사용하여 목록에 있는 버퍼 집합을 연결된 <see cref="T:System.Net.Sockets.SocketFlags" />으로 보냅니다.</summary>
      <param name="buffers" vsli:raw="A list of &lt;see cref=&quot;T:System.ArraySegment`1&quot; /&gt;s of type &lt;see cref=&quot;T:System.Byte&quot; /&gt; that contains the data to be sent.">보낼 데이터가 들어 있는 <see cref="T:System.ArraySegment`1" /> 형식의 <see cref="T:System.Byte" /> 목록입니다.</param>
      <param name="socketFlags" vsli:raw="A bitwise combination of the &lt;see cref=&quot;T:System.Net.Sockets.SocketFlags&quot; /&gt; values.">
        <see cref="T:System.Net.Sockets.SocketFlags" /> 값의 비트 조합입니다.</param>
      <param name="errorCode" vsli:raw="A &lt;see cref=&quot;T:System.Net.Sockets.SocketError&quot; /&gt; object that stores the socket error.">소켓 오류를 저장하는 <see cref="T:System.Net.Sockets.SocketError" /> 개체입니다.</param>
      <exception cref="T:System.ArgumentNullException" vsli:raw="&lt;paramref name=&quot;buffers&quot; /&gt; is &lt;see langword=&quot;null&quot; /&gt;.">
        <paramref name="buffers" />이(가) <see langword="null" />인 경우</exception>
      <exception cref="T:System.ArgumentException" vsli:raw="&lt;paramref name=&quot;buffers&quot; /&gt; is empty.">
        <paramref name="buffers" />가 비어 있는 경우</exception>
      <exception cref="T:System.Net.Sockets.SocketException" vsli:raw="An error occurred when attempting to access the socket.">소켓에 액세스하는 동안 오류가 발생했습니다.</exception>
      <exception cref="T:System.ObjectDisposedException" vsli:raw="The &lt;see cref=&quot;T:System.Net.Sockets.Socket&quot; /&gt; has been closed.">
        <see cref="T:System.Net.Sockets.Socket" />이 닫혔습니다.</exception>
      <returns vsli:raw="The number of bytes sent to the &lt;see cref=&quot;T:System.Net.Sockets.Socket&quot; /&gt;.">
        <see cref="T:System.Net.Sockets.Socket" />에 보낸 바이트 수입니다.</returns>
    </member>
    <member name="M:System.Net.Sockets.Socket.Send(System.ReadOnlySpan{System.Byte})">
      <summary vsli:raw="Sends data to a connected &lt;see cref=&quot;T:System.Net.Sockets.Socket&quot; /&gt;.">연결된 <see cref="T:System.Net.Sockets.Socket" />에 데이터를 보냅니다.</summary>
      <param name="buffer" vsli:raw="A span of bytes that contains the data to be sent.">보낼 데이터가 들어 있는 바이트의 범위입니다.</param>
      <exception cref="T:System.Net.Sockets.SocketException" vsli:raw="An error occurred when attempting to access the socket.">소켓에 액세스하는 동안 오류가 발생했습니다.</exception>
      <exception cref="T:System.ObjectDisposedException" vsli:raw="The &lt;see cref=&quot;T:System.Net.Sockets.Socket&quot; /&gt; has been closed.">
        <see cref="T:System.Net.Sockets.Socket" />이 닫혔습니다.</exception>
      <returns vsli:raw="The number of bytes sent to the &lt;see cref=&quot;T:System.Net.Sockets.Socket&quot; /&gt;.">
        <see cref="T:System.Net.Sockets.Socket" />에 보낸 바이트 수입니다.</returns>
    </member>
    <member name="M:System.Net.Sockets.Socket.Send(System.ReadOnlySpan{System.Byte},System.Net.Sockets.SocketFlags)">
      <summary vsli:raw="Sends data to a connected &lt;see cref=&quot;T:System.Net.Sockets.Socket&quot; /&gt; using the specified &lt;see cref=&quot;T:System.Net.Sockets.SocketFlags&quot; /&gt;.">지정된 <see cref="T:System.Net.Sockets.Socket" />를 사용하여 데이터를 연결된 <see cref="T:System.Net.Sockets.SocketFlags" />에 보냅니다.</summary>
      <param name="buffer" vsli:raw="A span of bytes that contains the data to be sent.">보낼 데이터가 들어 있는 바이트의 범위입니다.</param>
      <param name="socketFlags" vsli:raw="A bitwise combination of the enumeration values that specifies send and receive behaviors.">보내기 및 받기 동작을 지정하는 열거형 값의 비트 조합입니다.</param>
      <exception cref="T:System.Net.Sockets.SocketException" vsli:raw="An error occurred when attempting to access the socket.">소켓에 액세스하는 동안 오류가 발생했습니다.</exception>
      <exception cref="T:System.ObjectDisposedException" vsli:raw="The &lt;see cref=&quot;T:System.Net.Sockets.Socket&quot; /&gt; has been closed.">
        <see cref="T:System.Net.Sockets.Socket" />이 닫혔습니다.</exception>
      <returns vsli:raw="The number of bytes sent to the &lt;see cref=&quot;T:System.Net.Sockets.Socket&quot; /&gt;.">
        <see cref="T:System.Net.Sockets.Socket" />에 보낸 바이트 수입니다.</returns>
    </member>
    <member name="M:System.Net.Sockets.Socket.Send(System.ReadOnlySpan{System.Byte},System.Net.Sockets.SocketFlags,System.Net.Sockets.SocketError@)">
      <summary vsli:raw="Sends data to a connected &lt;see cref=&quot;T:System.Net.Sockets.Socket&quot; /&gt; using the specified &lt;see cref=&quot;T:System.Net.Sockets.SocketFlags&quot; /&gt;.">지정된 <see cref="T:System.Net.Sockets.Socket" />를 사용하여 데이터를 연결된 <see cref="T:System.Net.Sockets.SocketFlags" />에 보냅니다.</summary>
      <param name="buffer" vsli:raw="A span of bytes that contains the data to be sent.">보낼 데이터가 들어 있는 바이트의 범위입니다.</param>
      <param name="socketFlags" vsli:raw="A bitwise combination of the enumeration values that specifies send and receive behaviors.">보내기 및 받기 동작을 지정하는 열거형 값의 비트 조합입니다.</param>
      <param name="errorCode" vsli:raw="When this method returns, contains one of the enumeration values that defines error codes for the socket.">이 메서드가 반환될 때 소켓에 대한 오류 코드를 정의하는 열거형 값 중 하나를 포함합니다.</param>
      <exception cref="T:System.Net.Sockets.SocketException" vsli:raw="An error occurred when attempting to access the socket.">소켓에 액세스하는 동안 오류가 발생했습니다.</exception>
      <exception cref="T:System.ObjectDisposedException" vsli:raw="The &lt;see cref=&quot;T:System.Net.Sockets.Socket&quot; /&gt; has been closed.">
        <see cref="T:System.Net.Sockets.Socket" />이 닫혔습니다.</exception>
      <returns vsli:raw="The number of bytes sent to the &lt;see cref=&quot;T:System.Net.Sockets.Socket&quot; /&gt;.">
        <see cref="T:System.Net.Sockets.Socket" />에 보낸 바이트 수입니다.</returns>
    </member>
    <member name="M:System.Net.Sockets.Socket.SendAsync(System.Net.Sockets.SocketAsyncEventArgs)">
      <summary vsli:raw="Sends data asynchronously to a connected &lt;see cref=&quot;T:System.Net.Sockets.Socket&quot; /&gt; object.">데이터를 연결된 <see cref="T:System.Net.Sockets.Socket" /> 개체에 비동기적으로 보냅니다.</summary>
      <param name="e" vsli:raw="The &lt;see cref=&quot;T:System.Net.Sockets.SocketAsyncEventArgs&quot; /&gt; object to use for this asynchronous socket operation.">이 비동기 소켓 작업에 사용할 <see cref="T:System.Net.Sockets.SocketAsyncEventArgs" /> 개체입니다.</param>
      <exception cref="T:System.ArgumentException" vsli:raw="The &lt;see cref=&quot;P:System.Net.Sockets.SocketAsyncEventArgs.Buffer&quot; /&gt; or &lt;see cref=&quot;P:System.Net.Sockets.SocketAsyncEventArgs.BufferList&quot; /&gt; properties on the &lt;paramref name=&quot;e&quot; /&gt; parameter must reference valid buffers. One or the other of these properties may be set, but not both at the same time.">
        <paramref name="e" /> 매개 변수의 <see cref="P:System.Net.Sockets.SocketAsyncEventArgs.Buffer" /> 또는 <see cref="P:System.Net.Sockets.SocketAsyncEventArgs.BufferList" /> 속성이 올바른 버퍼를 참조하지 않는 경우. 이러한 속성 중 하나를 설정할 수 있지만 두 속성을 동시에 설정할 수는 없습니다.</exception>
      <exception cref="T:System.InvalidOperationException" vsli:raw="A socket operation was already in progress using the &lt;see cref=&quot;T:System.Net.Sockets.SocketAsyncEventArgs&quot; /&gt; object specified in the &lt;paramref name=&quot;e&quot; /&gt; parameter.">
        <paramref name="e" /> 매개 변수에 지정된 <see cref="T:System.Net.Sockets.SocketAsyncEventArgs" /> 개체를 사용하여 소켓 작업이 이미 진행 중인 경우</exception>
      <exception cref="T:System.NotSupportedException">이 메서드에 Windows XP 이상이 필요한 경우.</exception>
      <exception cref="T:System.ObjectDisposedException" vsli:raw="The &lt;see cref=&quot;T:System.Net.Sockets.Socket&quot; /&gt; has been closed.">
        <see cref="T:System.Net.Sockets.Socket" />이 닫혔습니다.</exception>
      <exception cref="T:System.Net.Sockets.SocketException" vsli:raw="The &lt;see cref=&quot;T:System.Net.Sockets.Socket&quot; /&gt; is not yet connected or was not obtained via an &lt;see cref=&quot;M:System.Net.Sockets.Socket.Accept&quot; /&gt;, &lt;see cref=&quot;M:System.Net.Sockets.Socket.AcceptAsync(System.Net.Sockets.SocketAsyncEventArgs)&quot; /&gt;,or &lt;see cref=&quot;Overload:System.Net.Sockets.Socket.BeginAccept&quot; /&gt;, method.">
        <see cref="T:System.Net.Sockets.Socket" />이 아직 연결되지 않았거나 <see cref="M:System.Net.Sockets.Socket.Accept" />, <see cref="M:System.Net.Sockets.Socket.AcceptAsync(System.Net.Sockets.SocketAsyncEventArgs)" /> 또는 <see cref="Overload:System.Net.Sockets.Socket.BeginAccept" /> 메서드를 통해 소켓을 가져오지 못한 경우</exception>
      <returns vsli:raw="&lt;see langword=&quot;true&quot; /&gt; if the I/O operation is pending. The &lt;see cref=&quot;E:System.Net.Sockets.SocketAsyncEventArgs.Completed&quot; /&gt; event on the &lt;paramref name=&quot;e&quot; /&gt; parameter will be raised upon completion of the operation.&#xA;&#xA; &lt;see langword=&quot;false&quot; /&gt; if the I/O operation completed synchronously. In this case, The &lt;see cref=&quot;E:System.Net.Sockets.SocketAsyncEventArgs.Completed&quot; /&gt; event on the &lt;paramref name=&quot;e&quot; /&gt; parameter will not be raised and the &lt;paramref name=&quot;e&quot; /&gt; object passed as a parameter may be examined immediately after the method call returns to retrieve the result of the operation.">I/O 작업이 보류 중인 경우 <see langword="true" />입니다. 작업이 완료되면 <paramref name="e" /> 매개 변수에 대한 <see cref="E:System.Net.Sockets.SocketAsyncEventArgs.Completed" /> 이벤트가 발생합니다.  
  
 I/O 작업이 동기적으로 완료된 경우 <see langword="false" />입니다. 이 경우에는 <paramref name="e" /> 매개 변수에서 <see cref="E:System.Net.Sockets.SocketAsyncEventArgs.Completed" /> 이벤트가 발생하지 않으며, 메서드 호출이 반환된 직후 매개 변수로 전달된 <paramref name="e" /> 개체를 검사하여 작업 결과를 검색할 수 있습니다.</returns>
    </member>
    <member name="M:System.Net.Sockets.Socket.SendFile(System.String)">
      <summary vsli:raw="Sends the file &lt;paramref name=&quot;fileName&quot; /&gt; to a connected &lt;see cref=&quot;T:System.Net.Sockets.Socket&quot; /&gt; object with the &lt;see cref=&quot;F:System.Net.Sockets.TransmitFileOptions.UseDefaultWorkerThread&quot; /&gt; transmit flag.">
        <see cref="T:System.Net.Sockets.Socket" /> 전송 플래그를 사용하여 <paramref name="fileName" /> 파일을 연결된 <see cref="F:System.Net.Sockets.TransmitFileOptions.UseDefaultWorkerThread" /> 개체에 보냅니다.</summary>
      <param name="fileName" vsli:raw="A &lt;see cref=&quot;T:System.String&quot; /&gt; that contains the path and name of the file to be sent. This parameter can be &lt;see langword=&quot;null&quot; /&gt;.">전송할 파일의 경로 및 이름을 포함하는 <see cref="T:System.String" />입니다. 이 매개 변수는 <see langword="null" />일 수 있습니다.</param>
      <exception cref="T:System.NotSupportedException" vsli:raw="The socket is not connected to a remote host.">소켓이 원격 호스트에 연결되지 않은 경우</exception>
      <exception cref="T:System.ObjectDisposedException" vsli:raw="The &lt;see cref=&quot;T:System.Net.Sockets.Socket&quot; /&gt; object has been closed.">
        <see cref="T:System.Net.Sockets.Socket" /> 개체가 닫힌 경우</exception>
      <exception cref="T:System.InvalidOperationException" vsli:raw="The &lt;see cref=&quot;T:System.Net.Sockets.Socket&quot; /&gt; object is not in blocking mode and cannot accept this synchronous call.">
        <see cref="T:System.Net.Sockets.Socket" /> 개체가 차단 모드가 아니며 이 동기 호출을 수락할 수 없는 경우</exception>
      <exception cref="T:System.IO.FileNotFoundException" vsli:raw="The file &lt;paramref name=&quot;fileName&quot; /&gt; was not found.">
        <paramref name="fileName" /> 파일을 찾을 수 없는 경우</exception>
      <exception cref="T:System.Net.Sockets.SocketException" vsli:raw="An error occurred when attempting to access the socket.">소켓에 액세스하는 동안 오류가 발생했습니다.</exception>
    </member>
    <member name="M:System.Net.Sockets.Socket.SendFile(System.String,System.Byte[],System.Byte[],System.Net.Sockets.TransmitFileOptions)">
      <summary vsli:raw="Sends the file &lt;paramref name=&quot;fileName&quot; /&gt; and buffers of data to a connected &lt;see cref=&quot;T:System.Net.Sockets.Socket&quot; /&gt; object using the specified &lt;see cref=&quot;T:System.Net.Sockets.TransmitFileOptions&quot; /&gt; value.">지정된 <see cref="T:System.Net.Sockets.TransmitFileOptions" /> 값을 사용하여 연결된 <see cref="T:System.Net.Sockets.Socket" /> 개체에 파일 <paramref name="fileName" /> 및 데이터 버퍼를 전송합니다.</summary>
      <param name="fileName" vsli:raw="The path and name of the file to be sent. This parameter can be &lt;see langword=&quot;null&quot; /&gt;.">전송할 파일의 경로 및 이름을 포함하는 <see cref="T:System.String" />입니다. 이 매개 변수는 <see langword="null" />일 수 있습니다.</param>
      <param name="preBuffer" vsli:raw="The data to be sent before the file is sent. This parameter can be &lt;see langword=&quot;null&quot; /&gt;.">파일이 전송되기 전에 전송할 데이터를 포함하는 <see cref="T:System.Byte" /> 배열입니다. 이 매개 변수는 <see langword="null" />일 수 있습니다.</param>
      <param name="postBuffer" vsli:raw="The data to be sent after the file is sent. This parameter can be &lt;see langword=&quot;null&quot; /&gt;.">파일이 전송된 후에 전송할 데이터를 포함하는 <see cref="T:System.Byte" /> 배열입니다. 이 매개 변수는 <see langword="null" />일 수 있습니다.</param>
      <param name="flags" vsli:raw="A bitwise combination of the enumeration values that specifies how the file is transferred.">하나 이상의 <see cref="T:System.Net.Sockets.TransmitFileOptions" /> 값입니다.</param>
      <exception cref="T:System.NotSupportedException" vsli:raw="The operating system is not Windows NT or later.&#xA;&#xA;-or-&#xA;&#xA; The socket is not connected to a remote host.">운영 체제가 Windows NT 이상이 아닌 경우  
  
또는
  
 소켓이 원격 호스트에 연결되지 않은 경우</exception>
      <exception cref="T:System.ObjectDisposedException" vsli:raw="The &lt;see cref=&quot;T:System.Net.Sockets.Socket&quot; /&gt; object has been closed.">
        <see cref="T:System.Net.Sockets.Socket" /> 개체가 닫힌 경우</exception>
      <exception cref="T:System.InvalidOperationException" vsli:raw="The &lt;see cref=&quot;T:System.Net.Sockets.Socket&quot; /&gt; object is not in blocking mode and cannot accept this synchronous call.">
        <see cref="T:System.Net.Sockets.Socket" /> 개체가 차단 모드가 아니며 이 동기 호출을 수락할 수 없는 경우</exception>
      <exception cref="T:System.IO.FileNotFoundException" vsli:raw="The file &lt;paramref name=&quot;fileName&quot; /&gt; was not found.">
        <paramref name="fileName" /> 파일을 찾을 수 없는 경우</exception>
      <exception cref="T:System.Net.Sockets.SocketException" vsli:raw="An error occurred when attempting to access the socket.">소켓에 액세스하는 동안 오류가 발생했습니다.</exception>
    </member>
    <member name="M:System.Net.Sockets.Socket.SendPacketsAsync(System.Net.Sockets.SocketAsyncEventArgs)">
      <summary vsli:raw="Sends a collection of files or in memory data buffers asynchronously to a connected &lt;see cref=&quot;T:System.Net.Sockets.Socket&quot; /&gt; object.">파일 컬렉션 또는 메모리 내 데이터 버퍼를 연결된 <see cref="T:System.Net.Sockets.Socket" /> 개체에 비동기적으로 보냅니다.</summary>
      <param name="e" vsli:raw="The &lt;see cref=&quot;T:System.Net.Sockets.SocketAsyncEventArgs&quot; /&gt; object to use for this asynchronous socket operation.">이 비동기 소켓 작업에 사용할 <see cref="T:System.Net.Sockets.SocketAsyncEventArgs" /> 개체입니다.</param>
      <exception cref="T:System.IO.FileNotFoundException" vsli:raw="The file specified in the &lt;see cref=&quot;P:System.Net.Sockets.SendPacketsElement.FilePath&quot; /&gt; property was not found.">
        <see cref="P:System.Net.Sockets.SendPacketsElement.FilePath" /> 속성에 지정된 파일을 찾을 수 없는 경우</exception>
      <exception cref="T:System.InvalidOperationException" vsli:raw="A socket operation was already in progress using the &lt;see cref=&quot;T:System.Net.Sockets.SocketAsyncEventArgs&quot; /&gt; object specified in the &lt;paramref name=&quot;e&quot; /&gt; parameter.">
        <paramref name="e" /> 매개 변수에 지정된 <see cref="T:System.Net.Sockets.SocketAsyncEventArgs" /> 개체를 사용하여 소켓 작업이 이미 진행 중인 경우</exception>
      <exception cref="T:System.NotSupportedException" vsli:raw="The &lt;see cref=&quot;T:System.Net.Sockets.Socket&quot; /&gt; is not connected to a remote host.">이 메서드에 Windows XP 이상이 필요한 경우. <see cref="T:System.Net.Sockets.Socket" />이 원격 호스트에 연결되어 있지 않은 경우에도 이 예외가 발생합니다.</exception>
      <exception cref="T:System.ObjectDisposedException" vsli:raw="The &lt;see cref=&quot;T:System.Net.Sockets.Socket&quot; /&gt; has been closed.">
        <see cref="T:System.Net.Sockets.Socket" />이 닫혔습니다.</exception>
      <exception cref="T:System.Net.Sockets.SocketException" vsli:raw="A connectionless &lt;see cref=&quot;T:System.Net.Sockets.Socket&quot; /&gt; is being used and the file being sent exceeds the maximum packet size of the underlying transport.">연결 없는 <see cref="T:System.Net.Sockets.Socket" />이 사용되고 있고 보내는 파일이 내부 전송의 최대 패킷 크기를 초과하는 경우</exception>
      <returns vsli:raw="&lt;see langword=&quot;true&quot; /&gt; if the I/O operation is pending. The &lt;see cref=&quot;E:System.Net.Sockets.SocketAsyncEventArgs.Completed&quot; /&gt; event on the &lt;paramref name=&quot;e&quot; /&gt; parameter will be raised upon completion of the operation.&#xA;&#xA; &lt;see langword=&quot;false&quot; /&gt; if the I/O operation completed synchronously. In this case, The &lt;see cref=&quot;E:System.Net.Sockets.SocketAsyncEventArgs.Completed&quot; /&gt; event on the &lt;paramref name=&quot;e&quot; /&gt; parameter will not be raised and the &lt;paramref name=&quot;e&quot; /&gt; object passed as a parameter may be examined immediately after the method call returns to retrieve the result of the operation.">I/O 작업이 보류 중인 경우 <see langword="true" />입니다. 작업이 완료되면 <paramref name="e" /> 매개 변수에 대한 <see cref="E:System.Net.Sockets.SocketAsyncEventArgs.Completed" /> 이벤트가 발생합니다.  
  
 I/O 작업이 동기적으로 완료된 경우 <see langword="false" />입니다. 이 경우에는 <paramref name="e" /> 매개 변수에서 <see cref="E:System.Net.Sockets.SocketAsyncEventArgs.Completed" /> 이벤트가 발생하지 않으며, 메서드 호출이 반환된 직후 매개 변수로 전달된 <paramref name="e" /> 개체를 검사하여 작업 결과를 검색할 수 있습니다.</returns>
    </member>
    <member name="M:System.Net.Sockets.Socket.SendTo(System.Byte[],System.Int32,System.Int32,System.Net.Sockets.SocketFlags,System.Net.EndPoint)">
      <summary vsli:raw="Sends the specified number of bytes of data to the specified endpoint, starting at the specified location in the buffer, and using the specified &lt;see cref=&quot;T:System.Net.Sockets.SocketFlags&quot; /&gt;.">버퍼의 지정된 위치에서 시작하여 특정 <see cref="T:System.Net.Sockets.SocketFlags" />를 통해 원하는 바이트 수의 데이터를 지정된 엔드포인트로 보냅니다.</summary>
      <param name="buffer" vsli:raw="An array of type &lt;see cref=&quot;T:System.Byte&quot; /&gt; that contains the data to be sent.">전송할 데이터를 포함하는 형식 <see cref="T:System.Byte" />의 배열입니다.</param>
      <param name="offset" vsli:raw="The position in the data buffer at which to begin sending data.">데이터 보내기를 시작할 데이터 버퍼의 위치입니다.</param>
      <param name="size" vsli:raw="The number of bytes to send.">보낼 바이트 수입니다.</param>
      <param name="socketFlags" vsli:raw="A bitwise combination of the &lt;see cref=&quot;T:System.Net.Sockets.SocketFlags&quot; /&gt; values.">
        <see cref="T:System.Net.Sockets.SocketFlags" /> 값의 비트 조합입니다.</param>
      <param name="remoteEP" vsli:raw="The &lt;see cref=&quot;T:System.Net.EndPoint&quot; /&gt; that represents the destination location for the data.">해당 데이터의 대상 위치를 나타내는 <see cref="T:System.Net.EndPoint" />입니다.</param>
      <exception cref="T:System.ArgumentNullException" vsli:raw="&lt;paramref name=&quot;buffer&quot; /&gt; is &lt;see langword=&quot;null&quot; /&gt;.&#xA;&#xA; -or-&#xA;&#xA; &lt;paramref name=&quot;remoteEP&quot; /&gt; is &lt;see langword=&quot;null&quot; /&gt;.">
        <paramref name="buffer" />이(가) <see langword="null" />인 경우  
  
또는 
 <paramref name="remoteEP" />이(가) <see langword="null" />인 경우</exception>
      <exception cref="T:System.ArgumentOutOfRangeException" vsli:raw="&lt;paramref name=&quot;offset&quot; /&gt; is less than 0.&#xA;&#xA; -or-&#xA;&#xA; &lt;paramref name=&quot;offset&quot; /&gt; is greater than the length of &lt;paramref name=&quot;buffer&quot; /&gt;.&#xA;&#xA; -or-&#xA;&#xA; &lt;paramref name=&quot;size&quot; /&gt; is less than 0.&#xA;&#xA; -or-&#xA;&#xA; &lt;paramref name=&quot;size&quot; /&gt; is greater than the length of &lt;paramref name=&quot;buffer&quot; /&gt; minus the value of the &lt;paramref name=&quot;offset&quot; /&gt; parameter.">
        <paramref name="offset" />가 0보다 작은 경우.  
  
또는 
 <paramref name="offset" />이 <paramref name="buffer" />의 길이보다 큽니다.  
  
또는 
 <paramref name="size" />가 0보다 작은 경우.  
  
또는 
 <paramref name="size" />가 <paramref name="buffer" />의 길이에서 <paramref name="offset" /> 매개 변수 값을 뺀 크기보다 큰 경우</exception>
      <exception cref="T:System.Net.Sockets.SocketException" vsli:raw="&lt;paramref name=&quot;socketFlags&quot; /&gt; is not a valid combination of values.&#xA;&#xA; -or-&#xA;&#xA; An operating system error occurs while accessing the &lt;see cref=&quot;T:System.Net.Sockets.Socket&quot; /&gt;.">
        <paramref name="socketFlags" />가 값의 유효한 조합이 아닌 경우  
  
또는 
<see cref="T:System.Net.Sockets.Socket" />에 액세스하는 동안 운영 체제 오류가 발생한 경우</exception>
      <exception cref="T:System.ObjectDisposedException" vsli:raw="The &lt;see cref=&quot;T:System.Net.Sockets.Socket&quot; /&gt; has been closed.">
        <see cref="T:System.Net.Sockets.Socket" />이 닫혔습니다.</exception>
      <exception cref="T:System.Security.SecurityException" vsli:raw="A caller in the call stack does not have the required permissions.">호출 스택에 있는 호출자에게 필요한 권한이 없는 경우</exception>
      <returns vsli:raw="The number of bytes sent.">보낸 바이트 수입니다.</returns>
    </member>
    <member name="M:System.Net.Sockets.Socket.SendTo(System.Byte[],System.Int32,System.Net.Sockets.SocketFlags,System.Net.EndPoint)">
      <summary vsli:raw="Sends the specified number of bytes of data to the specified endpoint using the specified &lt;see cref=&quot;T:System.Net.Sockets.SocketFlags&quot; /&gt;.">지정된 <see cref="T:System.Net.Sockets.SocketFlags" />를 사용하여 특정 엔드포인트에 원하는 바이트 수의 데이터를 보냅니다.</summary>
      <param name="buffer" vsli:raw="An array of type &lt;see cref=&quot;T:System.Byte&quot; /&gt; that contains the data to be sent.">전송할 데이터를 포함하는 형식 <see cref="T:System.Byte" />의 배열입니다.</param>
      <param name="size" vsli:raw="The number of bytes to send.">보낼 바이트 수입니다.</param>
      <param name="socketFlags" vsli:raw="A bitwise combination of the &lt;see cref=&quot;T:System.Net.Sockets.SocketFlags&quot; /&gt; values.">
        <see cref="T:System.Net.Sockets.SocketFlags" /> 값의 비트 조합입니다.</param>
      <param name="remoteEP" vsli:raw="The &lt;see cref=&quot;T:System.Net.EndPoint&quot; /&gt; that represents the destination location for the data.">해당 데이터의 대상 위치를 나타내는 <see cref="T:System.Net.EndPoint" />입니다.</param>
      <exception cref="T:System.ArgumentNullException" vsli:raw="&lt;paramref name=&quot;buffer&quot; /&gt; is &lt;see langword=&quot;null&quot; /&gt;.&#xA;&#xA; -or-&#xA;&#xA; &lt;paramref name=&quot;remoteEP&quot; /&gt; is &lt;see langword=&quot;null&quot; /&gt;.">
        <paramref name="buffer" />이(가) <see langword="null" />인 경우  
  
또는 
 <paramref name="remoteEP" />이(가) <see langword="null" />인 경우</exception>
      <exception cref="T:System.ArgumentOutOfRangeException" vsli:raw="The specified &lt;paramref name=&quot;size&quot; /&gt; exceeds the size of &lt;paramref name=&quot;buffer&quot; /&gt;.">지정된 <paramref name="size" />가 <paramref name="buffer" />의 크기를 초과한 경우</exception>
      <exception cref="T:System.Net.Sockets.SocketException" vsli:raw="An error occurred when attempting to access the socket.">소켓에 액세스하는 동안 오류가 발생했습니다.</exception>
      <exception cref="T:System.ObjectDisposedException" vsli:raw="The &lt;see cref=&quot;T:System.Net.Sockets.Socket&quot; /&gt; has been closed.">
        <see cref="T:System.Net.Sockets.Socket" />이 닫혔습니다.</exception>
      <returns vsli:raw="The number of bytes sent.">보낸 바이트 수입니다.</returns>
    </member>
    <member name="M:System.Net.Sockets.Socket.SendTo(System.Byte[],System.Net.EndPoint)">
      <summary vsli:raw="Sends data to the specified endpoint.">지정된 엔드포인트에 데이터를 보냅니다.</summary>
      <param name="buffer" vsli:raw="An array of type &lt;see cref=&quot;T:System.Byte&quot; /&gt; that contains the data to be sent.">전송할 데이터를 포함하는 형식 <see cref="T:System.Byte" />의 배열입니다.</param>
      <param name="remoteEP" vsli:raw="The &lt;see cref=&quot;T:System.Net.EndPoint&quot; /&gt; that represents the destination for the data.">데이터의 대상을 나타내는 <see cref="T:System.Net.EndPoint" />입니다.</param>
      <exception cref="T:System.ArgumentNullException" vsli:raw="&lt;paramref name=&quot;buffer&quot; /&gt; is &lt;see langword=&quot;null&quot; /&gt;.&#xA;&#xA; -or-&#xA;&#xA; &lt;paramref name=&quot;remoteEP&quot; /&gt; is &lt;see langword=&quot;null&quot; /&gt;.">
        <paramref name="buffer" />이(가) <see langword="null" />인 경우  
  
또는 
 <paramref name="remoteEP" />이(가) <see langword="null" />인 경우</exception>
      <exception cref="T:System.Net.Sockets.SocketException" vsli:raw="An error occurred when attempting to access the socket.">소켓에 액세스하는 동안 오류가 발생했습니다.</exception>
      <exception cref="T:System.ObjectDisposedException" vsli:raw="The &lt;see cref=&quot;T:System.Net.Sockets.Socket&quot; /&gt; has been closed.">
        <see cref="T:System.Net.Sockets.Socket" />이 닫혔습니다.</exception>
      <returns vsli:raw="The number of bytes sent.">보낸 바이트 수입니다.</returns>
    </member>
    <member name="M:System.Net.Sockets.Socket.SendTo(System.Byte[],System.Net.Sockets.SocketFlags,System.Net.EndPoint)">
      <summary vsli:raw="Sends data to a specific endpoint using the specified &lt;see cref=&quot;T:System.Net.Sockets.SocketFlags&quot; /&gt;.">지정된 <see cref="T:System.Net.Sockets.SocketFlags" />를 사용하여 특정 엔드포인트에 데이터를 보냅니다.</summary>
      <param name="buffer" vsli:raw="An array of type &lt;see cref=&quot;T:System.Byte&quot; /&gt; that contains the data to be sent.">전송할 데이터를 포함하는 형식 <see cref="T:System.Byte" />의 배열입니다.</param>
      <param name="socketFlags" vsli:raw="A bitwise combination of the &lt;see cref=&quot;T:System.Net.Sockets.SocketFlags&quot; /&gt; values.">
        <see cref="T:System.Net.Sockets.SocketFlags" /> 값의 비트 조합입니다.</param>
      <param name="remoteEP" vsli:raw="The &lt;see cref=&quot;T:System.Net.EndPoint&quot; /&gt; that represents the destination location for the data.">해당 데이터의 대상 위치를 나타내는 <see cref="T:System.Net.EndPoint" />입니다.</param>
      <exception cref="T:System.ArgumentNullException" vsli:raw="&lt;paramref name=&quot;buffer&quot; /&gt; is &lt;see langword=&quot;null&quot; /&gt;.&#xA;&#xA; -or-&#xA;&#xA; &lt;paramref name=&quot;remoteEP&quot; /&gt; is &lt;see langword=&quot;null&quot; /&gt;.">
        <paramref name="buffer" />이(가) <see langword="null" />인 경우  
  
또는 
 <paramref name="remoteEP" />이(가) <see langword="null" />인 경우</exception>
      <exception cref="T:System.Net.Sockets.SocketException" vsli:raw="An error occurred when attempting to access the socket.">소켓에 액세스하는 동안 오류가 발생했습니다.</exception>
      <exception cref="T:System.ObjectDisposedException" vsli:raw="The &lt;see cref=&quot;T:System.Net.Sockets.Socket&quot; /&gt; has been closed.">
        <see cref="T:System.Net.Sockets.Socket" />이 닫혔습니다.</exception>
      <returns vsli:raw="The number of bytes sent.">보낸 바이트 수입니다.</returns>
    </member>
    <member name="M:System.Net.Sockets.Socket.SendToAsync(System.Net.Sockets.SocketAsyncEventArgs)">
      <summary vsli:raw="Sends data asynchronously to a specific remote host.">특정 원격 호스트에 데이터를 비동기적으로 보냅니다.</summary>
      <param name="e" vsli:raw="The &lt;see cref=&quot;T:System.Net.Sockets.SocketAsyncEventArgs&quot; /&gt; object to use for this asynchronous socket operation.">이 비동기 소켓 작업에 사용할 <see cref="T:System.Net.Sockets.SocketAsyncEventArgs" /> 개체입니다.</param>
      <exception cref="T:System.ArgumentNullException" vsli:raw="The &lt;see cref=&quot;P:System.Net.Sockets.SocketAsyncEventArgs.RemoteEndPoint&quot; /&gt; cannot be null.">
        <see cref="P:System.Net.Sockets.SocketAsyncEventArgs.RemoteEndPoint" />가 null인 경우</exception>
      <exception cref="T:System.InvalidOperationException" vsli:raw="A socket operation was already in progress using the &lt;see cref=&quot;T:System.Net.Sockets.SocketAsyncEventArgs&quot; /&gt; object specified in the &lt;paramref name=&quot;e&quot; /&gt; parameter.">
        <paramref name="e" /> 매개 변수에 지정된 <see cref="T:System.Net.Sockets.SocketAsyncEventArgs" /> 개체를 사용하여 소켓 작업이 이미 진행 중인 경우</exception>
      <exception cref="T:System.NotSupportedException">이 메서드에 Windows XP 이상이 필요한 경우.</exception>
      <exception cref="T:System.ObjectDisposedException" vsli:raw="The &lt;see cref=&quot;T:System.Net.Sockets.Socket&quot; /&gt; has been closed.">
        <see cref="T:System.Net.Sockets.Socket" />이 닫혔습니다.</exception>
      <exception cref="T:System.Net.Sockets.SocketException" vsli:raw="The protocol specified is connection-oriented, but the &lt;see cref=&quot;T:System.Net.Sockets.Socket&quot; /&gt; is not yet connected.">연결 지향 프로토콜이 지정되었는데 <see cref="T:System.Net.Sockets.Socket" />이 아직 연결되지 않은 경우</exception>
      <returns vsli:raw="&lt;see langword=&quot;true&quot; /&gt; if the I/O operation is pending. The &lt;see cref=&quot;E:System.Net.Sockets.SocketAsyncEventArgs.Completed&quot; /&gt; event on the &lt;paramref name=&quot;e&quot; /&gt; parameter will be raised upon completion of the operation.&#xA;&#xA; &lt;see langword=&quot;false&quot; /&gt; if the I/O operation completed synchronously. In this case, The &lt;see cref=&quot;E:System.Net.Sockets.SocketAsyncEventArgs.Completed&quot; /&gt; event on the &lt;paramref name=&quot;e&quot; /&gt; parameter will not be raised and the &lt;paramref name=&quot;e&quot; /&gt; object passed as a parameter may be examined immediately after the method call returns to retrieve the result of the operation.">I/O 작업이 보류 중인 경우 <see langword="true" />입니다. 작업이 완료되면 <paramref name="e" /> 매개 변수에 대한 <see cref="E:System.Net.Sockets.SocketAsyncEventArgs.Completed" /> 이벤트가 발생합니다.  
  
 I/O 작업이 동기적으로 완료된 경우 <see langword="false" />입니다. 이 경우에는 <paramref name="e" /> 매개 변수에서 <see cref="E:System.Net.Sockets.SocketAsyncEventArgs.Completed" /> 이벤트가 발생하지 않으며, 메서드 호출이 반환된 직후 매개 변수로 전달된 <paramref name="e" /> 개체를 검사하여 작업 결과를 검색할 수 있습니다.</returns>
    </member>
    <member name="M:System.Net.Sockets.Socket.SetIPProtectionLevel(System.Net.Sockets.IPProtectionLevel)">
      <summary vsli:raw="Sets the IP protection level on a socket.">소켓에 IP 보호 수준을 설정합니다.</summary>
      <param name="level" vsli:raw="The IP protection level to set on this socket.">이 소켓에 설정할 IP 보호 수준입니다.</param>
      <exception cref="T:System.ArgumentException" vsli:raw="The &lt;paramref name=&quot;level&quot; /&gt; argument is set to &lt;see cref=&quot;F:System.Net.Sockets.IPProtectionLevel.Unspecified&quot; /&gt;.">
        <paramref name="level" /> 매개 변수는 <see cref="F:System.Net.Sockets.IPProtectionLevel.Unspecified" />일 수 없습니다. IP 보호 수준은 미지정으로 설정할 수 없습니다.</exception>
      <exception cref="T:System.NotSupportedException" vsli:raw="The socket is not in the &lt;see cref=&quot;F:System.Net.Sockets.AddressFamily.InterNetworkV6&quot; /&gt; or &lt;see cref=&quot;F:System.Net.Sockets.AddressFamily.InterNetwork&quot; /&gt; address families.">소켓의 설정은 <see cref="T:System.Net.Sockets.AddressFamily" />는 <see cref="F:System.Net.Sockets.AddressFamily.InterNetworkV6" /> 또는 <see cref="F:System.Net.Sockets.AddressFamily.InterNetwork" />여야 합니다.</exception>
    </member>
    <member name="M:System.Net.Sockets.Socket.SetRawSocketOption(System.Int32,System.Int32,System.ReadOnlySpan{System.Byte})">
      <summary vsli:raw="Sets a socket option value using platform-specific level and name identifiers.">플랫폼별 수준 및 이름 식별자를 사용하여 소켓 옵션 값을 설정합니다.</summary>
      <param name="optionLevel" vsli:raw="The platform-defined option level.">플랫폼 정의 옵션 수준입니다.</param>
      <param name="optionName" vsli:raw="The platform-defined option name.">플랫폼 정의 옵션 이름입니다.</param>
      <param name="optionValue" vsli:raw="The value to which the option should be set.">옵션을 설정해야 하는 값입니다.</param>
      <exception cref="T:System.ObjectDisposedException" vsli:raw="The &lt;see cref=&quot;T:System.Net.Sockets.Socket&quot; /&gt; has been closed.">
        <see cref="T:System.Net.Sockets.Socket" />이 닫혔습니다.</exception>
      <exception cref="T:System.Net.Sockets.SocketException" vsli:raw="An error occurred when attempting to access the socket.">소켓에 액세스하는 동안 오류가 발생했습니다.</exception>
    </member>
    <member name="M:System.Net.Sockets.Socket.SetSocketOption(System.Net.Sockets.SocketOptionLevel,System.Net.Sockets.SocketOptionName,System.Boolean)">
      <summary vsli:raw="Sets the specified &lt;see cref=&quot;T:System.Net.Sockets.Socket&quot; /&gt; option to the specified &lt;see cref=&quot;T:System.Boolean&quot; /&gt; value.">지정된 <see cref="T:System.Net.Sockets.Socket" /> 옵션을 지정된 <see cref="T:System.Boolean" /> 값으로 설정합니다.</summary>
      <param name="optionLevel" vsli:raw="One of the &lt;see cref=&quot;T:System.Net.Sockets.SocketOptionLevel&quot; /&gt; values.">
        <see cref="T:System.Net.Sockets.SocketOptionLevel" /> 값 중 하나입니다.</param>
      <param name="optionName" vsli:raw="One of the &lt;see cref=&quot;T:System.Net.Sockets.SocketOptionName&quot; /&gt; values.">
        <see cref="T:System.Net.Sockets.SocketOptionName" /> 값 중 하나입니다.</param>
      <param name="optionValue" vsli:raw="The value of the option, represented as a &lt;see cref=&quot;T:System.Boolean&quot; /&gt;.">
        <see cref="T:System.Boolean" />으로 나타낸 옵션 값입니다.</param>
      <exception cref="T:System.ObjectDisposedException" vsli:raw="The &lt;see cref=&quot;T:System.Net.Sockets.Socket&quot; /&gt; object has been closed.">
        <see cref="T:System.Net.Sockets.Socket" /> 개체가 닫힌 경우</exception>
      <exception cref="T:System.Net.Sockets.SocketException" vsli:raw="An error occurred when attempting to access the socket.">소켓에 액세스하는 동안 오류가 발생했습니다.</exception>
    </member>
    <member name="M:System.Net.Sockets.Socket.SetSocketOption(System.Net.Sockets.SocketOptionLevel,System.Net.Sockets.SocketOptionName,System.Byte[])">
      <summary vsli:raw="Sets the specified &lt;see cref=&quot;T:System.Net.Sockets.Socket&quot; /&gt; option to the specified value, represented as a byte array.">지정된 <see cref="T:System.Net.Sockets.Socket" /> 옵션을 바이트 배열로 나타내는 특정 값으로 설정합니다.</summary>
      <param name="optionLevel" vsli:raw="One of the &lt;see cref=&quot;T:System.Net.Sockets.SocketOptionLevel&quot; /&gt; values.">
        <see cref="T:System.Net.Sockets.SocketOptionLevel" /> 값 중 하나입니다.</param>
      <param name="optionName" vsli:raw="One of the &lt;see cref=&quot;T:System.Net.Sockets.SocketOptionName&quot; /&gt; values.">
        <see cref="T:System.Net.Sockets.SocketOptionName" /> 값 중 하나입니다.</param>
      <param name="optionValue" vsli:raw="An array of type &lt;see cref=&quot;T:System.Byte&quot; /&gt; that represents the value of the option.">해당 옵션 값을 나타내는 <see cref="T:System.Byte" /> 형식의 배열입니다.</param>
      <exception cref="T:System.Net.Sockets.SocketException" vsli:raw="An error occurred when attempting to access the socket.">소켓에 액세스하는 동안 오류가 발생했습니다.</exception>
      <exception cref="T:System.ObjectDisposedException" vsli:raw="The &lt;see cref=&quot;T:System.Net.Sockets.Socket&quot; /&gt; has been closed.">
        <see cref="T:System.Net.Sockets.Socket" />이 닫혔습니다.</exception>
    </member>
    <member name="M:System.Net.Sockets.Socket.SetSocketOption(System.Net.Sockets.SocketOptionLevel,System.Net.Sockets.SocketOptionName,System.Int32)">
      <summary vsli:raw="Sets the specified &lt;see cref=&quot;T:System.Net.Sockets.Socket&quot; /&gt; option to the specified integer value.">지정된 <see cref="T:System.Net.Sockets.Socket" /> 옵션을 원하는 정수 값으로 설정합니다.</summary>
      <param name="optionLevel" vsli:raw="One of the &lt;see cref=&quot;T:System.Net.Sockets.SocketOptionLevel&quot; /&gt; values.">
        <see cref="T:System.Net.Sockets.SocketOptionLevel" /> 값 중 하나입니다.</param>
      <param name="optionName" vsli:raw="One of the &lt;see cref=&quot;T:System.Net.Sockets.SocketOptionName&quot; /&gt; values.">
        <see cref="T:System.Net.Sockets.SocketOptionName" /> 값 중 하나입니다.</param>
      <param name="optionValue" vsli:raw="A value of the option.">해당 옵션의 값입니다.</param>
      <exception cref="T:System.Net.Sockets.SocketException" vsli:raw="An error occurred when attempting to access the socket.">소켓에 액세스하는 동안 오류가 발생했습니다.</exception>
      <exception cref="T:System.ObjectDisposedException" vsli:raw="The &lt;see cref=&quot;T:System.Net.Sockets.Socket&quot; /&gt; has been closed.">
        <see cref="T:System.Net.Sockets.Socket" />이 닫혔습니다.</exception>
    </member>
    <member name="M:System.Net.Sockets.Socket.SetSocketOption(System.Net.Sockets.SocketOptionLevel,System.Net.Sockets.SocketOptionName,System.Object)">
      <summary vsli:raw="Sets the specified &lt;see cref=&quot;T:System.Net.Sockets.Socket&quot; /&gt; option to the specified value, represented as an object.">지정된 <see cref="T:System.Net.Sockets.Socket" /> 옵션을 개체로 나타내는 특정 값으로 설정합니다.</summary>
      <param name="optionLevel" vsli:raw="One of the &lt;see cref=&quot;T:System.Net.Sockets.SocketOptionLevel&quot; /&gt; values.">
        <see cref="T:System.Net.Sockets.SocketOptionLevel" /> 값 중 하나입니다.</param>
      <param name="optionName" vsli:raw="One of the &lt;see cref=&quot;T:System.Net.Sockets.SocketOptionName&quot; /&gt; values.">
        <see cref="T:System.Net.Sockets.SocketOptionName" /> 값 중 하나입니다.</param>
      <param name="optionValue" vsli:raw="A &lt;see cref=&quot;T:System.Net.Sockets.LingerOption&quot; /&gt; or &lt;see cref=&quot;T:System.Net.Sockets.MulticastOption&quot; /&gt; that contains the value of the option.">해당 옵션의 값이 들어 있는 <see cref="T:System.Net.Sockets.LingerOption" /> 또는 <see cref="T:System.Net.Sockets.MulticastOption" />입니다.</param>
      <exception cref="T:System.ArgumentNullException" vsli:raw="&lt;paramref name=&quot;optionValue&quot; /&gt; is &lt;see langword=&quot;null&quot; /&gt;.">
        <paramref name="optionValue" />이(가) <see langword="null" />인 경우</exception>
      <exception cref="T:System.Net.Sockets.SocketException" vsli:raw="An error occurred when attempting to access the socket.">소켓에 액세스하는 동안 오류가 발생했습니다.</exception>
      <exception cref="T:System.ObjectDisposedException" vsli:raw="The &lt;see cref=&quot;T:System.Net.Sockets.Socket&quot; /&gt; has been closed.">
        <see cref="T:System.Net.Sockets.Socket" />이 닫혔습니다.</exception>
    </member>
    <member name="M:System.Net.Sockets.Socket.Shutdown(System.Net.Sockets.SocketShutdown)">
      <summary vsli:raw="Disables sends and receives on a &lt;see cref=&quot;T:System.Net.Sockets.Socket&quot; /&gt;.">
        <see cref="T:System.Net.Sockets.Socket" />에서 보내기 및 받기를 사용할 수 없도록 설정합니다.</summary>
      <param name="how" vsli:raw="One of the &lt;see cref=&quot;T:System.Net.Sockets.SocketShutdown&quot; /&gt; values that specifies the operation that will no longer be allowed.">더 이상 허용하지 않을 작업을 지정하는 <see cref="T:System.Net.Sockets.SocketShutdown" /> 값 중 하나입니다.</param>
      <exception cref="T:System.Net.Sockets.SocketException" vsli:raw="An error occurred when attempting to access the socket.">소켓에 액세스하는 동안 오류가 발생했습니다.</exception>
      <exception cref="T:System.ObjectDisposedException" vsli:raw="The &lt;see cref=&quot;T:System.Net.Sockets.Socket&quot; /&gt; has been closed.">
        <see cref="T:System.Net.Sockets.Socket" />이 닫혔습니다.</exception>
    </member>
    <member name="P:System.Net.Sockets.Socket.AddressFamily">
      <summary vsli:raw="Gets the address family of the &lt;see cref=&quot;T:System.Net.Sockets.Socket&quot; /&gt;.">
        <see cref="T:System.Net.Sockets.Socket" />의 주소 패밀리를 가져옵니다.</summary>
      <returns vsli:raw="One of the &lt;see cref=&quot;T:System.Net.Sockets.AddressFamily&quot; /&gt; values.">
        <see cref="T:System.Net.Sockets.AddressFamily" /> 값 중 하나입니다.</returns>
    </member>
    <member name="P:System.Net.Sockets.Socket.Available">
      <summary vsli:raw="Gets the amount of data that has been received from the network and is available to be read.">네트워크에서 받아서 읽을 수 있는 데이터의 양을 가져옵니다.</summary>
      <exception cref="T:System.Net.Sockets.SocketException" vsli:raw="An error occurred when attempting to access the socket.">소켓에 액세스하는 동안 오류가 발생했습니다.</exception>
      <exception cref="T:System.ObjectDisposedException" vsli:raw="The &lt;see cref=&quot;T:System.Net.Sockets.Socket&quot; /&gt; has been closed.">
        <see cref="T:System.Net.Sockets.Socket" />이 닫혔습니다.</exception>
      <returns vsli:raw="The number of bytes of data received from the network and available to be read.">네트워크에서 받아서 읽을 수 있는 데이터의 바이트 수입니다.</returns>
    </member>
    <member name="P:System.Net.Sockets.Socket.Blocking">
      <summary vsli:raw="Gets or sets a value that indicates whether the &lt;see cref=&quot;T:System.Net.Sockets.Socket&quot; /&gt; is in blocking mode.">
        <see cref="T:System.Net.Sockets.Socket" />이 블로킹 모드인지 여부를 나타내는 값을 설정하거나 가져옵니다.</summary>
      <exception cref="T:System.Net.Sockets.SocketException" vsli:raw="An error occurred when attempting to access the socket.">소켓에 액세스하는 동안 오류가 발생했습니다.</exception>
      <exception cref="T:System.ObjectDisposedException" vsli:raw="The &lt;see cref=&quot;T:System.Net.Sockets.Socket&quot; /&gt; has been closed.">
        <see cref="T:System.Net.Sockets.Socket" />이 닫혔습니다.</exception>
      <returns vsli:raw="&lt;see langword=&quot;true&quot; /&gt; if the &lt;see cref=&quot;T:System.Net.Sockets.Socket&quot; /&gt; will block; otherwise, &lt;see langword=&quot;false&quot; /&gt;. The default is &lt;see langword=&quot;true&quot; /&gt;.">
        <see cref="T:System.Net.Sockets.Socket" />이 차단되면 <see langword="true" />이고, 그렇지 않으면 <see langword="false" />입니다. 기본값은 <see langword="true" />입니다.</returns>
    </member>
    <member name="P:System.Net.Sockets.Socket.Connected">
      <summary vsli:raw="Gets a value that indicates whether a &lt;see cref=&quot;T:System.Net.Sockets.Socket&quot; /&gt; is connected to a remote host as of the last &lt;see cref=&quot;Overload:System.Net.Sockets.Socket.Send&quot; /&gt; or &lt;see cref=&quot;Overload:System.Net.Sockets.Socket.Receive&quot; /&gt; operation.">
        <see cref="T:System.Net.Sockets.Socket" />이 마지막으로 <see cref="Overload:System.Net.Sockets.Socket.Send" /> 또는 <see cref="Overload:System.Net.Sockets.Socket.Receive" /> 작업을 수행할 때 원격 호스트에 연결되었는지 여부를 나타내는 값을 가져옵니다.</summary>
      <returns vsli:raw="&lt;see langword=&quot;true&quot; /&gt; if the &lt;see cref=&quot;T:System.Net.Sockets.Socket&quot; /&gt; was connected to a remote resource as of the most recent operation; otherwise, &lt;see langword=&quot;false&quot; /&gt;.">가장 최근 작업에서 <see cref="T:System.Net.Sockets.Socket" />이 원격 리소스에 연결되었으면 <see langword="true" />이고, 그렇지 않으면 <see langword="false" />입니다.</returns>
    </member>
    <member name="P:System.Net.Sockets.Socket.DontFragment">
      <summary vsli:raw="Gets or sets a value that specifies whether the &lt;see cref=&quot;T:System.Net.Sockets.Socket&quot; /&gt; allows Internet Protocol (IP) datagrams to be fragmented.">
        <see cref="T:System.Boolean" />에서 IP(인터넷 프로토콜) 데이터그램의 조각화를 허용하는지 여부를 나타내는 <see cref="T:System.Net.Sockets.Socket" /> 값을 가져오거나 설정합니다.</summary>
      <exception cref="T:System.NotSupportedException" vsli:raw="The socket is not in the &lt;see cref=&quot;F:System.Net.Sockets.AddressFamily.InterNetwork&quot; /&gt; family.">
        <see cref="F:System.Net.Sockets.AddressFamily.InterNetwork" /> 또는 <see cref="F:System.Net.Sockets.AddressFamily.InterNetworkV6" /> 패밀리의 소켓이 아닌 소켓에 대해 이 속성을 설정한 경우</exception>
      <exception cref="T:System.Net.Sockets.SocketException" vsli:raw="An error occurred when attempting to access the socket.">소켓에 액세스하는 동안 오류가 발생했습니다.</exception>
      <exception cref="T:System.ObjectDisposedException" vsli:raw="The &lt;see cref=&quot;T:System.Net.Sockets.Socket&quot; /&gt; has been closed.">
        <see cref="T:System.Net.Sockets.Socket" />이 닫혔습니다.</exception>
      <returns vsli:raw="&lt;see langword=&quot;true&quot; /&gt; if the &lt;see cref=&quot;T:System.Net.Sockets.Socket&quot; /&gt; doesn't allow datagram fragmentation; otherwise, &lt;see langword=&quot;false&quot; /&gt;. The default is &lt;see langword=&quot;true&quot; /&gt;.">
        <see cref="T:System.Net.Sockets.Socket" />에서 데이터그램 조각화를 허용하면 <see langword="true" />이고, 그렇지 않으면 <see langword="false" />입니다. 기본값은 <see langword="true" />입니다.</returns>
    </member>
    <member name="P:System.Net.Sockets.Socket.DualMode">
      <summary vsli:raw="Gets or sets a value that specifies whether the &lt;see cref=&quot;T:System.Net.Sockets.Socket&quot; /&gt; is a dual-mode socket used for both IPv4 and IPv6.">
        <see cref="T:System.Net.Sockets.Socket" />이 IPv4 및 IPv6 둘 다에 사용되는 이중 모드 소켓인지 여부를 지정하는 <see cref="T:System.Boolean" /> 값을 가져오거나 설정합니다.</summary>
      <returns vsli:raw="&lt;see langword=&quot;true&quot; /&gt; if the &lt;see cref=&quot;T:System.Net.Sockets.Socket&quot; /&gt; is a dual-mode socket; otherwise, &lt;see langword=&quot;false&quot; /&gt;. The default is &lt;see langword=&quot;true&quot; /&gt; if the socket was created by calling the &lt;see cref=&quot;M:System.Net.Sockets.Socket.#ctor(System.Net.Sockets.SocketType,System.Net.Sockets.ProtocolType)&quot; /&gt; constructor and the operating system supports IPv6; otherwise, the default is &lt;see langword=&quot;false&quot; /&gt;.">
        <see cref="T:System.Net.Sockets.Socket" />이 이중 모드 소켓이면 <see langword="true" />이고, 그렇지 않으면 <see langword="false" />입니다. 기본값은 <see langword="false" />입니다.</returns>
    </member>
    <member name="P:System.Net.Sockets.Socket.EnableBroadcast">
      <summary vsli:raw="Gets or sets a &lt;see cref=&quot;T:System.Boolean&quot; /&gt; value that specifies whether the &lt;see cref=&quot;T:System.Net.Sockets.Socket&quot; /&gt; can send broadcast packets.">
        <see cref="T:System.Boolean" />이 브로드캐스트 패킷을 보내거나 받을 수 있는지 여부를 나타내는 <see cref="T:System.Net.Sockets.Socket" /> 값을 가져오거나 설정합니다.</summary>
      <exception cref="T:System.Net.Sockets.SocketException" vsli:raw="This option is valid for a datagram socket only.">데이터그램 소켓이 아닌 소켓에 이 옵션을 설정한 경우</exception>
      <exception cref="T:System.ObjectDisposedException" vsli:raw="The &lt;see cref=&quot;T:System.Net.Sockets.Socket&quot; /&gt; has been closed.">
        <see cref="T:System.Net.Sockets.Socket" />이 닫혔습니다.</exception>
      <returns vsli:raw="&lt;see langword=&quot;true&quot; /&gt; if the &lt;see cref=&quot;T:System.Net.Sockets.Socket&quot; /&gt; allows sending broadcast packets; otherwise, &lt;see langword=&quot;false&quot; /&gt;. The default is &lt;see langword=&quot;false&quot; /&gt;.">
        <see cref="T:System.Net.Sockets.Socket" />이 브로드캐스트 패킷을 허용하면 <see langword="true" />이고, 그렇지 않으면 <see langword="false" />입니다. 기본값은 <see langword="false" />입니다.</returns>
    </member>
    <member name="P:System.Net.Sockets.Socket.ExclusiveAddressUse">
      <summary vsli:raw="Gets or sets a &lt;see cref=&quot;T:System.Boolean&quot; /&gt; value that specifies whether the &lt;see cref=&quot;T:System.Net.Sockets.Socket&quot; /&gt; allows only one process to bind to a port.">
        <see cref="T:System.Boolean" />이 하나의 포트에 하나의 프로세스만 바인딩하는 것을 허용하는지 여부를 지정하는 <see cref="T:System.Net.Sockets.Socket" /> 값을 가져오거나 설정합니다.</summary>
      <exception cref="T:System.Net.Sockets.SocketException" vsli:raw="An error occurred when attempting to access the socket.">소켓에 액세스하는 동안 오류가 발생했습니다.</exception>
      <exception cref="T:System.ObjectDisposedException" vsli:raw="The &lt;see cref=&quot;T:System.Net.Sockets.Socket&quot; /&gt; has been closed.">
        <see cref="T:System.Net.Sockets.Socket" />이 닫혔습니다.</exception>
      <exception cref="T:System.InvalidOperationException" vsli:raw="&lt;see cref=&quot;M:System.Net.Sockets.Socket.Bind(System.Net.EndPoint)&quot; /&gt; has been called for this &lt;see cref=&quot;T:System.Net.Sockets.Socket&quot; /&gt;.">
        <see cref="M:System.Net.Sockets.Socket.Bind(System.Net.EndPoint)" />가 이 <see cref="T:System.Net.Sockets.Socket" />에 대해 호출된 경우</exception>
      <returns vsli:raw="&lt;see langword=&quot;true&quot; /&gt; if the &lt;see cref=&quot;T:System.Net.Sockets.Socket&quot; /&gt; allows only one socket to bind to a specific port; otherwise, &lt;see langword=&quot;false&quot; /&gt;. The default is &lt;see langword=&quot;true&quot; /&gt; for Windows Server 2003 and Windows XP Service Pack 2, and &lt;see langword=&quot;false&quot; /&gt; for all other versions.">
        <see cref="T:System.Net.Sockets.Socket" />이 특정 포트에 하나의 소켓만 바인딩하는 것을 허용하면 <see langword="true" />이고, 그렇지 않으면 <see langword="false" />입니다. 기본값은 <see langword="true" /> Windows Server 2003 및 WINDOWS XP 서비스 팩 2의 경우이 고 <see langword="false" /> 다른 모든 버전의 경우입니다.</returns>
    </member>
    <member name="P:System.Net.Sockets.Socket.Handle">
      <summary vsli:raw="Gets the operating system handle for the &lt;see cref=&quot;T:System.Net.Sockets.Socket&quot; /&gt;.">
        <see cref="T:System.Net.Sockets.Socket" />에 대한 운영 체제 핸들을 가져옵니다.</summary>
      <returns vsli:raw="An &lt;see cref=&quot;T:System.IntPtr&quot; /&gt; that represents the operating system handle for the &lt;see cref=&quot;T:System.Net.Sockets.Socket&quot; /&gt;.">
        <see cref="T:System.IntPtr" />에 대한 운영 체제 핸들을 나타내는 <see cref="T:System.Net.Sockets.Socket" />입니다.</returns>
    </member>
    <member name="P:System.Net.Sockets.Socket.IsBound">
      <summary vsli:raw="Gets a value that indicates whether the &lt;see cref=&quot;T:System.Net.Sockets.Socket&quot; /&gt; is bound to a specific local port.">
        <see cref="T:System.Net.Sockets.Socket" />이 특정 로컬 포트에 바인딩되었는지 여부를 나타내는 값을 가져옵니다.</summary>
      <returns vsli:raw="&lt;see langword=&quot;true&quot; /&gt; if the &lt;see cref=&quot;T:System.Net.Sockets.Socket&quot; /&gt; is bound to a local port; otherwise, &lt;see langword=&quot;false&quot; /&gt;.">
        <see cref="T:System.Net.Sockets.Socket" />이 로컬 포트에 바인딩되었으면 <see langword="true" />이고, 그렇지 않으면 <see langword="false" />입니다.</returns>
    </member>
    <member name="P:System.Net.Sockets.Socket.LingerState">
      <summary vsli:raw="Gets or sets a value that specifies whether the &lt;see cref=&quot;T:System.Net.Sockets.Socket&quot; /&gt; will delay closing a socket in an attempt to send all pending data.">보류 중인 데이터를 모두 보내려고 할 때 <see cref="T:System.Net.Sockets.Socket" />에서 소켓 닫기를 지연할지 여부를 지정하는 값을 가져오거나 설정합니다.</summary>
      <exception cref="T:System.Net.Sockets.SocketException" vsli:raw="An error occurred when attempting to access the socket.">소켓에 액세스하는 동안 오류가 발생했습니다.</exception>
      <exception cref="T:System.ObjectDisposedException" vsli:raw="The &lt;see cref=&quot;T:System.Net.Sockets.Socket&quot; /&gt; has been closed.">
        <see cref="T:System.Net.Sockets.Socket" />이 닫혔습니다.</exception>
      <returns vsli:raw="A &lt;see cref=&quot;T:System.Net.Sockets.LingerOption&quot; /&gt; that specifies how to linger while closing a socket.">소켓을 닫는 동안 링거하는 방법을 지정하는 <see cref="T:System.Net.Sockets.LingerOption" />입니다.</returns>
    </member>
    <member name="P:System.Net.Sockets.Socket.LocalEndPoint">
      <summary vsli:raw="Gets the local endpoint.">로컬 엔드포인트를 가져옵니다.</summary>
      <exception cref="T:System.Net.Sockets.SocketException" vsli:raw="An error occurred when attempting to access the socket.">소켓에 액세스하는 동안 오류가 발생했습니다.</exception>
      <exception cref="T:System.ObjectDisposedException" vsli:raw="The &lt;see cref=&quot;T:System.Net.Sockets.Socket&quot; /&gt; has been closed.">
        <see cref="T:System.Net.Sockets.Socket" />이 닫혔습니다.</exception>
      <returns vsli:raw="The &lt;see cref=&quot;T:System.Net.EndPoint&quot; /&gt; that the &lt;see cref=&quot;T:System.Net.Sockets.Socket&quot; /&gt; is using for communications.">
        <see cref="T:System.Net.EndPoint" />이 통신하는 데 사용하는 <see cref="T:System.Net.Sockets.Socket" />입니다.</returns>
    </member>
    <member name="P:System.Net.Sockets.Socket.MulticastLoopback">
      <summary vsli:raw="Gets or sets a value that specifies whether outgoing multicast packets are delivered to the sending application.">나가는 멀티캐스트 패킷을 보내는 애플리케이션에 전달할지 여부를 지정하는 값을 가져오거나 설정합니다.</summary>
      <exception cref="T:System.Net.Sockets.SocketException" vsli:raw="An error occurred when attempting to access the socket.">소켓에 액세스하는 동안 오류가 발생했습니다.</exception>
      <exception cref="T:System.ObjectDisposedException" vsli:raw="The &lt;see cref=&quot;T:System.Net.Sockets.Socket&quot; /&gt; has been closed.">
        <see cref="T:System.Net.Sockets.Socket" />이 닫혔습니다.</exception>
      <returns vsli:raw="&lt;see langword=&quot;true&quot; /&gt; if the &lt;see cref=&quot;T:System.Net.Sockets.Socket&quot; /&gt; receives outgoing multicast packets; otherwise, &lt;see langword=&quot;false&quot; /&gt;.">
        <see cref="T:System.Net.Sockets.Socket" />이 나가는 멀티캐스트 패킷을 받으면 <see langword="true" />이고, 그렇지 않으면 <see langword="false" />입니다.</returns>
    </member>
    <member name="P:System.Net.Sockets.Socket.NoDelay">
      <summary vsli:raw="Gets or sets a &lt;see cref=&quot;T:System.Boolean&quot; /&gt; value that specifies whether the stream &lt;see cref=&quot;T:System.Net.Sockets.Socket&quot; /&gt; is using the Nagle algorithm.">
        <see cref="T:System.Boolean" /> 스트림에서 Nagle 알고리즘을 사용하는지 여부를 나타내는 <see cref="T:System.Net.Sockets.Socket" /> 값을 가져오거나 설정합니다.</summary>
      <exception cref="T:System.Net.Sockets.SocketException" vsli:raw="An error occurred when attempting to access the &lt;see cref=&quot;T:System.Net.Sockets.Socket&quot; /&gt;.">
        <see cref="T:System.Net.Sockets.Socket" />에 액세스하려고 시도하는 동안 오류가 발생한 경우.</exception>
      <exception cref="T:System.ObjectDisposedException" vsli:raw="The &lt;see cref=&quot;T:System.Net.Sockets.Socket&quot; /&gt; has been closed.">
        <see cref="T:System.Net.Sockets.Socket" />이 닫혔습니다.</exception>
      <returns vsli:raw="&lt;see langword=&quot;false&quot; /&gt; if the &lt;see cref=&quot;T:System.Net.Sockets.Socket&quot; /&gt; uses the Nagle algorithm; otherwise, &lt;see langword=&quot;true&quot; /&gt;. The default is &lt;see langword=&quot;false&quot; /&gt;.">
        <see cref="T:System.Net.Sockets.Socket" />에서 Nagle 알고리즘을 사용하면 <see langword="false" />이고, 그렇지 않으면 <see langword="true" />입니다. 기본값은 <see langword="false" />입니다.</returns>
    </member>
    <member name="P:System.Net.Sockets.Socket.OSSupportsIPv4">
      <summary vsli:raw="Indicates whether the underlying operating system and network adaptors support Internet Protocol version 4 (IPv4).">내부 운영 체제 및 네트워크 어댑터에서 IPv4(인터넷 프로토콜 버전 4)를 지원하는지 여부를 나타냅니다.</summary>
      <returns vsli:raw="&lt;see langword=&quot;true&quot; /&gt; if the operating system and network adaptors support the IPv4 protocol; otherwise, &lt;see langword=&quot;false&quot; /&gt;.">운영 체제 및 네트워크 어댑터에서 IPv4 프로토콜을 지원하면 <see langword="true" />이고, 그렇지 않으면 <see langword="false" />입니다.</returns>
    </member>
    <member name="P:System.Net.Sockets.Socket.OSSupportsIPv6">
      <summary vsli:raw="Indicates whether the underlying operating system and network adaptors support Internet Protocol version 6 (IPv6).">내부 운영 체제 및 네트워크 어댑터에서 IPv6(인터넷 프로토콜 버전 6)을 지원하는지 여부를 나타냅니다.</summary>
      <returns vsli:raw="&lt;see langword=&quot;true&quot; /&gt; if the operating system and network adaptors support the IPv6 protocol; otherwise, &lt;see langword=&quot;false&quot; /&gt;.">운영 체제 및 네트워크 어댑터에서 IPv6 프로토콜을 지원하면 <see langword="true" />이고, 그렇지 않으면 <see langword="false" />입니다.</returns>
    </member>
    <member name="P:System.Net.Sockets.Socket.OSSupportsUnixDomainSockets">
      <summary vsli:raw="Indicates whether the underlying operating system support the Unix domain sockets.">기본 운영 체제에서 Unix 도메인 소켓을 지원하는지 여부를 나타냅니다.</summary>
      <returns vsli:raw="&lt;see langword=&quot;true&quot; /&gt; if the operating system support the Unix domain sockets; otherwise, &lt;see langword=&quot;false&quot; /&gt;.">
        <see langword="true" /> 운영 체제가 Unix 도메인 소켓을 지 원하는 경우 그렇지 않으면 <see langword="false" /> 입니다.</returns>
    </member>
    <member name="P:System.Net.Sockets.Socket.ProtocolType">
      <summary vsli:raw="Gets the protocol type of the &lt;see cref=&quot;T:System.Net.Sockets.Socket&quot; /&gt;.">
        <see cref="T:System.Net.Sockets.Socket" />의 프로토콜 종류를 가져옵니다.</summary>
      <returns vsli:raw="One of the &lt;see cref=&quot;T:System.Net.Sockets.ProtocolType&quot; /&gt; values.">
        <see cref="T:System.Net.Sockets.ProtocolType" /> 값 중 하나입니다.</returns>
    </member>
    <member name="P:System.Net.Sockets.Socket.ReceiveBufferSize">
      <summary vsli:raw="Gets or sets a value that specifies the size of the receive buffer of the &lt;see cref=&quot;T:System.Net.Sockets.Socket&quot; /&gt;.">
        <see cref="T:System.Net.Sockets.Socket" />의 수신 버퍼 크기를 지정하는 값을 가져오거나 설정합니다.</summary>
      <exception cref="T:System.Net.Sockets.SocketException" vsli:raw="An error occurred when attempting to access the socket.">소켓에 액세스하는 동안 오류가 발생했습니다.</exception>
      <exception cref="T:System.ObjectDisposedException" vsli:raw="The &lt;see cref=&quot;T:System.Net.Sockets.Socket&quot; /&gt; has been closed.">
        <see cref="T:System.Net.Sockets.Socket" />이 닫혔습니다.</exception>
      <exception cref="T:System.ArgumentOutOfRangeException" vsli:raw="The value specified for a set operation is less than 0.">set 작업에 지정된 값이 0보다 작은 경우</exception>
      <returns vsli:raw="An &lt;see cref=&quot;T:System.Int32&quot; /&gt; that contains the size, in bytes, of the receive buffer. The default is 8192.">수신 버퍼의 크기(바이트)가 들어 있는 <see cref="T:System.Int32" />입니다. 기본값은 8192입니다.</returns>
    </member>
    <member name="P:System.Net.Sockets.Socket.ReceiveTimeout">
      <summary vsli:raw="Gets or sets a value that specifies the amount of time after which a synchronous &lt;see cref=&quot;Overload:System.Net.Sockets.Socket.Receive&quot; /&gt; call will time out.">동기 <see cref="Overload:System.Net.Sockets.Socket.Receive" /> 호출이 완료되어야 하는 제한 시간을 지정하는 값을 가져오거나 설정합니다.</summary>
      <exception cref="T:System.Net.Sockets.SocketException" vsli:raw="An error occurred when attempting to access the socket.">소켓에 액세스하는 동안 오류가 발생했습니다.</exception>
      <exception cref="T:System.ObjectDisposedException" vsli:raw="The &lt;see cref=&quot;T:System.Net.Sockets.Socket&quot; /&gt; has been closed.">
        <see cref="T:System.Net.Sockets.Socket" />이 닫혔습니다.</exception>
      <exception cref="T:System.ArgumentOutOfRangeException" vsli:raw="The value specified for a set operation is less than -1.">set 작업에 지정된 값이 -1보다 작습니다.</exception>
      <returns vsli:raw="The time-out value, in milliseconds. The default value is 0, which indicates an infinite time-out period. Specifying -1 also indicates an infinite time-out period.">제한 시간 값(밀리초)입니다. 기본값은 0으로, 시간 제한이 없음을 나타냅니다. - 1을 지정해도 시간 제한이 없음을 나타냅니다.</returns>
    </member>
    <member name="P:System.Net.Sockets.Socket.RemoteEndPoint">
      <summary vsli:raw="Gets the remote endpoint.">원격 엔드포인트를 가져옵니다.</summary>
      <exception cref="T:System.Net.Sockets.SocketException" vsli:raw="An error occurred when attempting to access the socket.">소켓에 액세스하는 동안 오류가 발생했습니다.</exception>
      <exception cref="T:System.ObjectDisposedException" vsli:raw="The &lt;see cref=&quot;T:System.Net.Sockets.Socket&quot; /&gt; has been closed.">
        <see cref="T:System.Net.Sockets.Socket" />이 닫혔습니다.</exception>
      <returns vsli:raw="The &lt;see cref=&quot;T:System.Net.EndPoint&quot; /&gt; with which the &lt;see cref=&quot;T:System.Net.Sockets.Socket&quot; /&gt; is communicating.">
        <see cref="T:System.Net.EndPoint" />이 통신에 사용하는 <see cref="T:System.Net.Sockets.Socket" />입니다.</returns>
    </member>
    <member name="P:System.Net.Sockets.Socket.SafeHandle">
      <summary vsli:raw="Gets a &lt;see cref=&quot;T:System.Net.Sockets.SafeSocketHandle&quot; /&gt; that represents the socket handle that the current &lt;see cref=&quot;T:System.Net.Sockets.Socket&quot; /&gt; object encapsulates.">현재 <see cref="T:System.Net.Sockets.Socket" /> 개체가 캡슐화하는 소켓 핸들을 나타내는 <see cref="T:System.Net.Sockets.SafeSocketHandle" />을 가져옵니다.</summary>
      <returns vsli:raw="A socket handle exposed in a safe manner for the socket that the current &lt;see cref=&quot;T:System.Net.Sockets.Socket&quot; /&gt; object encapsulates.">현재 개체가 캡슐화 하는 소켓에 안전 하 게 노출 된 소켓 핸들입니다 <see cref="T:System.Net.Sockets.Socket" /> .</returns>
    </member>
    <member name="P:System.Net.Sockets.Socket.SendBufferSize">
      <summary vsli:raw="Gets or sets a value that specifies the size of the send buffer of the &lt;see cref=&quot;T:System.Net.Sockets.Socket&quot; /&gt;.">
        <see cref="T:System.Net.Sockets.Socket" />의 송신 버퍼 크기를 지정하는 값을 가져오거나 설정합니다.</summary>
      <exception cref="T:System.Net.Sockets.SocketException" vsli:raw="An error occurred when attempting to access the socket.">소켓에 액세스하는 동안 오류가 발생했습니다.</exception>
      <exception cref="T:System.ObjectDisposedException" vsli:raw="The &lt;see cref=&quot;T:System.Net.Sockets.Socket&quot; /&gt; has been closed.">
        <see cref="T:System.Net.Sockets.Socket" />이 닫혔습니다.</exception>
      <exception cref="T:System.ArgumentOutOfRangeException" vsli:raw="The value specified for a set operation is less than 0.">set 작업에 지정된 값이 0보다 작은 경우</exception>
      <returns vsli:raw="An &lt;see cref=&quot;T:System.Int32&quot; /&gt; that contains the size, in bytes, of the send buffer. The default is 8192.">송신 버퍼의 크기(바이트)가 들어 있는 <see cref="T:System.Int32" />입니다. 기본값은 8192입니다.</returns>
    </member>
    <member name="P:System.Net.Sockets.Socket.SendTimeout">
      <summary vsli:raw="Gets or sets a value that specifies the amount of time after which a synchronous &lt;see cref=&quot;Overload:System.Net.Sockets.Socket.Send&quot; /&gt; call will time out.">동기 <see cref="Overload:System.Net.Sockets.Socket.Send" /> 호출이 완료되어야 하는 제한 시간을 지정하는 값을 가져오거나 설정합니다.</summary>
      <exception cref="T:System.Net.Sockets.SocketException" vsli:raw="An error occurred when attempting to access the socket.">소켓에 액세스하는 동안 오류가 발생했습니다.</exception>
      <exception cref="T:System.ObjectDisposedException" vsli:raw="The &lt;see cref=&quot;T:System.Net.Sockets.Socket&quot; /&gt; has been closed.">
        <see cref="T:System.Net.Sockets.Socket" />이 닫혔습니다.</exception>
      <exception cref="T:System.ArgumentOutOfRangeException" vsli:raw="The value specified for a set operation is less than -1.">set 작업에 지정된 값이 -1보다 작습니다.</exception>
      <returns vsli:raw="The time-out value, in milliseconds. If you set the property with a value between 1 and 499, the value will be changed to 500. The default value is 0, which indicates an infinite time-out period. Specifying -1 also indicates an infinite time-out period.">제한 시간 값(밀리초)입니다. 1부터 499 사이의 값으로 속성을 설정하면 값이 500으로 변경됩니다. 기본값은 0으로, 시간 제한이 없음을 나타냅니다. - 1을 지정해도 시간 제한이 없음을 나타냅니다.</returns>
    </member>
    <member name="P:System.Net.Sockets.Socket.SocketType">
      <summary vsli:raw="Gets the type of the &lt;see cref=&quot;T:System.Net.Sockets.Socket&quot; /&gt;.">
        <see cref="T:System.Net.Sockets.Socket" />의 형식을 가져옵니다.</summary>
      <returns vsli:raw="One of the &lt;see cref=&quot;T:System.Net.Sockets.SocketType&quot; /&gt; values.">
        <see cref="T:System.Net.Sockets.SocketType" /> 값 중 하나입니다.</returns>
    </member>
    <member name="P:System.Net.Sockets.Socket.SupportsIPv4">
      <summary vsli:raw="Gets a value indicating whether IPv4 support is available and enabled on the current host.">IPv4 지원이 사용 가능하며 현재 호스트에서 사용하도록 설정되어 있는지 여부를 나타내는 값을 가져옵니다.</summary>
      <returns vsli:raw="&lt;see langword=&quot;true&quot; /&gt; if the current host supports the IPv4 protocol; otherwise, &lt;see langword=&quot;false&quot; /&gt;.">현재 호스트에서 IPv4 프로토콜을 지원하면 <see langword="true" />이고, 그렇지 않으면 <see langword="false" />입니다.</returns>
    </member>
    <member name="P:System.Net.Sockets.Socket.SupportsIPv6">
      <summary vsli:raw="Gets a value that indicates whether the Framework supports IPv6 for certain obsolete &lt;see cref=&quot;T:System.Net.Dns&quot; /&gt; members.">Framework에서 더 이상 사용되지 않는 특정 <see cref="T:System.Net.Dns" /> 멤버에 대해 IPv6을 지원하는지 여부를 나타내는 값을 가져옵니다.</summary>
      <returns vsli:raw="&lt;see langword=&quot;true&quot; /&gt; if the Framework supports IPv6 for certain obsolete &lt;see cref=&quot;T:System.Net.Dns&quot; /&gt; methods; otherwise, &lt;see langword=&quot;false&quot; /&gt;.">Framework에서 더 이상 사용되지 않는 특정 <see cref="T:System.Net.Dns" /> 메서드에 대해 IPv6을 지원하면 <see langword="true" />이고, 그렇지 않으면 <see langword="false" />입니다.</returns>
    </member>
    <member name="P:System.Net.Sockets.Socket.Ttl">
      <summary vsli:raw="Gets or sets a value that specifies the Time To Live (TTL) value of Internet Protocol (IP) packets sent by the &lt;see cref=&quot;T:System.Net.Sockets.Socket&quot; /&gt;.">
        <see cref="T:System.Net.Sockets.Socket" />에서 보낸 IP(인터넷 프로토콜) 패킷의 TTL(Time-To-Live) 값을 지정하는 값을 가져오거나 설정합니다.</summary>
      <exception cref="T:System.ArgumentOutOfRangeException" vsli:raw="The TTL value is a negative number.">TTL 값은 음수로 설정할 수 있습니다.</exception>
      <exception cref="T:System.NotSupportedException" vsli:raw="The socket is not in the &lt;see cref=&quot;F:System.Net.Sockets.AddressFamily.InterNetwork&quot; /&gt; or &lt;see cref=&quot;F:System.Net.Sockets.AddressFamily.InterNetworkV6&quot; /&gt; families.">
        <see cref="F:System.Net.Sockets.AddressFamily.InterNetwork" /> 또는 <see cref="F:System.Net.Sockets.AddressFamily.InterNetworkV6" /> 패밀리의 소켓이 아닌 소켓에 대해 이 속성을 설정한 경우</exception>
      <exception cref="T:System.Net.Sockets.SocketException" vsli:raw="An error occurred when attempting to access the socket. This error is also returned when an attempt was made to set TTL to a value higher than 255.">소켓에 액세스하는 동안 오류가 발생했습니다. TTL을 255보다 큰 값으로 설정하고자 할 때에도 이 오류가 반환됩니다.</exception>
      <exception cref="T:System.ObjectDisposedException" vsli:raw="The &lt;see cref=&quot;T:System.Net.Sockets.Socket&quot; /&gt; has been closed.">
        <see cref="T:System.Net.Sockets.Socket" />이 닫혔습니다.</exception>
      <returns vsli:raw="The TTL value.">TTL 값입니다.</returns>
    </member>
    <member name="P:System.Net.Sockets.Socket.UseOnlyOverlappedIO">
      <summary vsli:raw="Gets or sets a value that specifies whether the socket should only use Overlapped I/O mode. On .NET 5+ (including .NET Core versions), the value is always &lt;see langword=&quot;false&quot; /&gt;.">소켓에서 중첩된 I/O 모드만 사용해야 하는지 여부를 지정합니다.</summary>
      <exception cref="T:System.InvalidOperationException" vsli:raw="The socket has been bound to a completion port.">소켓이 완료 포트에 바인딩된 경우</exception>
      <returns vsli:raw="&lt;see langword=&quot;true&quot; /&gt; on .NET Framework if the &lt;see cref=&quot;T:System.Net.Sockets.Socket&quot; /&gt; uses only overlapped I/O; otherwise, &lt;see langword=&quot;false&quot; /&gt;. The default is &lt;see langword=&quot;false&quot; /&gt;.">
        <see cref="T:System.Net.Sockets.Socket" />에서 중첩된 I/O 모드만 사용하면 <see langword="true" />이고, 그렇지 않으면 <see langword="false" />입니다. 기본값은 <see langword="false" />입니다.</returns>
    </member>
    <member name="T:System.Net.Sockets.SocketAsyncEventArgs">
      <summary vsli:raw="Represents an asynchronous socket operation.">비동기 소켓 작업을 나타냅니다.</summary>
    </member>
    <member name="E:System.Net.Sockets.SocketAsyncEventArgs.Completed">
      <summary vsli:raw="The event used to complete an asynchronous operation.">비동기 작업을 완료하는 데 사용할 이벤트입니다.</summary>
    </member>
    <member name="M:System.Net.Sockets.SocketAsyncEventArgs.#ctor">
      <summary vsli:raw="Creates an empty &lt;see cref=&quot;T:System.Net.Sockets.SocketAsyncEventArgs&quot; /&gt; instance.">빈 <see cref="T:System.Net.Sockets.SocketAsyncEventArgs" /> 인스턴스를 만듭니다.</summary>
      <exception cref="T:System.NotSupportedException" vsli:raw="The platform is not supported.">플랫폼이 지원되지 않는 경우</exception>
    </member>
    <member name="M:System.Net.Sockets.SocketAsyncEventArgs.#ctor(System.Boolean)">
      <summary vsli:raw="Initializes the &lt;see cref=&quot;T:System.Net.Sockets.SocketAsyncEventArgs&quot; /&gt;.">
        <see cref="T:System.Net.Sockets.SocketAsyncEventArgs" />을 초기화합니다.</summary>
      <param name="unsafeSuppressExecutionContextFlow" vsli:raw="Whether to disable the capturing and flow of execution context. Execution context flow should only be disabled if it's handled by higher layers.">실행 컨텍스트의 캡처 및 흐름을 사용하지 않도록 설정할지 여부입니다. 실행 컨텍스트 흐름은 상위 계층에서 처리되는 경우에만 사용하지 않도록 설정해야 합니다.</param>
    </member>
    <member name="M:System.Net.Sockets.SocketAsyncEventArgs.Dispose">
      <summary vsli:raw="Releases the unmanaged resources used by the &lt;see cref=&quot;T:System.Net.Sockets.SocketAsyncEventArgs&quot; /&gt; instance and optionally disposes of the managed resources.">
        <see cref="T:System.Net.Sockets.SocketAsyncEventArgs" /> 인스턴스에서 사용하는 관리되지 않는 리소스를 해제하고, 관리되는 리소스를 선택적으로 삭제합니다.</summary>
    </member>
    <member name="M:System.Net.Sockets.SocketAsyncEventArgs.Finalize">
      <summary vsli:raw="Frees resources used by the &lt;see cref=&quot;T:System.Net.Sockets.SocketAsyncEventArgs&quot; /&gt; class.">
        <see cref="T:System.Net.Sockets.SocketAsyncEventArgs" /> 클래스에서 사용한 리소스를 해제합니다.</summary>
    </member>
    <member name="M:System.Net.Sockets.SocketAsyncEventArgs.OnCompleted(System.Net.Sockets.SocketAsyncEventArgs)">
      <summary vsli:raw="Represents a method that is called when an asynchronous operation completes.">비동기 작업이 완료되면 호출할 메서드를 나타냅니다.</summary>
      <param name="e" vsli:raw="The event that is signaled.">신호를 받는 이벤트입니다.</param>
    </member>
    <member name="M:System.Net.Sockets.SocketAsyncEventArgs.SetBuffer(System.Byte[],System.Int32,System.Int32)">
      <summary vsli:raw="Sets the data buffer to use with an asynchronous socket method.">비동기 소켓 메서드에 사용할 데이터 버퍼를 설정합니다.</summary>
      <param name="buffer" vsli:raw="The data buffer to use with an asynchronous socket method.">비동기 소켓 메서드에 사용할 데이터 버퍼입니다.</param>
      <param name="offset" vsli:raw="The offset, in bytes, in the data buffer where the operation starts.">데이터 버퍼에서 작업이 시작되는 오프셋(바이트)입니다.</param>
      <param name="count" vsli:raw="The maximum amount of data, in bytes, to send or receive in the buffer.">버퍼에서 보내거나 받을 최대 데이터 양(바이트)입니다.</param>
      <exception cref="T:System.ArgumentException" vsli:raw="There are ambiguous buffers specified. This exception occurs if the &lt;see cref=&quot;P:System.Net.Sockets.SocketAsyncEventArgs.Buffer&quot; /&gt; property is also not null and the &lt;see cref=&quot;P:System.Net.Sockets.SocketAsyncEventArgs.BufferList&quot; /&gt; property is also not null.">지정된 버퍼가 명확하지 않은 경우. <see cref="P:System.Net.Sockets.SocketAsyncEventArgs.Buffer" /> 속성도 null이 아니고 <see cref="P:System.Net.Sockets.SocketAsyncEventArgs.BufferList" /> 속성도 null이 아니면 이 예외가 발생합니다.</exception>
      <exception cref="T:System.ArgumentOutOfRangeException" vsli:raw="An argument was out of range. This exception occurs if the &lt;paramref name=&quot;offset&quot; /&gt; parameter is less than zero or greater than the length of the array in the &lt;see cref=&quot;P:System.Net.Sockets.SocketAsyncEventArgs.Buffer&quot; /&gt; property. This exception also occurs if the &lt;paramref name=&quot;count&quot; /&gt; parameter is less than zero or greater than the length of the array in the &lt;see cref=&quot;P:System.Net.Sockets.SocketAsyncEventArgs.Buffer&quot; /&gt; property minus the &lt;paramref name=&quot;offset&quot; /&gt; parameter.">인수가 범위를 벗어난 경우. <paramref name="offset" /> 매개 변수가 0보다 작거나 <see cref="P:System.Net.Sockets.SocketAsyncEventArgs.Buffer" /> 속성에 지정된 배열 길이보다 크면 이 예외가 발생합니다. 또한 <paramref name="count" /> 매개 변수가 0보다 작거나, <see cref="P:System.Net.Sockets.SocketAsyncEventArgs.Buffer" /> 속성에 지정된 배열 길이에서 <paramref name="offset" /> 매개 변수를 뺀 값보다 큰 경우에도 이 예외가 발생합니다.</exception>
    </member>
    <member name="M:System.Net.Sockets.SocketAsyncEventArgs.SetBuffer(System.Int32,System.Int32)">
      <summary vsli:raw="Sets the data buffer to use with an asynchronous socket method.">비동기 소켓 메서드에 사용할 데이터 버퍼를 설정합니다.</summary>
      <param name="offset" vsli:raw="The offset, in bytes, in the data buffer where the operation starts.">데이터 버퍼에서 작업이 시작되는 오프셋(바이트)입니다.</param>
      <param name="count" vsli:raw="The maximum amount of data, in bytes, to send or receive in the buffer.">버퍼에서 보내거나 받을 최대 데이터 양(바이트)입니다.</param>
      <exception cref="T:System.ArgumentOutOfRangeException" vsli:raw="An argument was out of range. This exception occurs if the &lt;paramref name=&quot;offset&quot; /&gt; parameter is less than zero or greater than the length of the array in the &lt;see cref=&quot;P:System.Net.Sockets.SocketAsyncEventArgs.Buffer&quot; /&gt; property. This exception also occurs if the &lt;paramref name=&quot;count&quot; /&gt; parameter is less than zero or greater than the length of the array in the &lt;see cref=&quot;P:System.Net.Sockets.SocketAsyncEventArgs.Buffer&quot; /&gt; property minus the &lt;paramref name=&quot;offset&quot; /&gt; parameter.">인수가 범위를 벗어난 경우. <paramref name="offset" /> 매개 변수가 0보다 작거나 <see cref="P:System.Net.Sockets.SocketAsyncEventArgs.Buffer" /> 속성에 지정된 배열 길이보다 크면 이 예외가 발생합니다. 또한 <paramref name="count" /> 매개 변수가 0보다 작거나, <see cref="P:System.Net.Sockets.SocketAsyncEventArgs.Buffer" /> 속성에 지정된 배열 길이에서 <paramref name="offset" /> 매개 변수를 뺀 값보다 큰 경우에도 이 예외가 발생합니다.</exception>
    </member>
    <member name="M:System.Net.Sockets.SocketAsyncEventArgs.SetBuffer(System.Memory{System.Byte})">
      <summary vsli:raw="Sets the region of memory to use as a buffer with an asynchronous socket method.">비동기 소켓 메서드를 사용하여 버퍼로 사용할 메모리 영역을 설정합니다.</summary>
      <param name="buffer" vsli:raw="The region of memory to use as a buffer with an asynchronous socket method.">비동기 소켓 메서드를 사용하여 버퍼로 사용할 메모리 영역입니다.</param>
    </member>
    <member name="P:System.Net.Sockets.SocketAsyncEventArgs.AcceptSocket">
      <summary vsli:raw="Gets or sets the socket to use or the socket created for accepting a connection with an asynchronous socket method.">비동기 소켓 메서드를 통해 연결을 허용하기 위해 만들었거나 사용할 소켓을 가져오거나 설정합니다.</summary>
      <returns vsli:raw="The &lt;see cref=&quot;T:System.Net.Sockets.Socket&quot; /&gt; to use or the socket created for accepting a connection with an asynchronous socket method.">비동기 소켓 메서드를 통해 연결을 허용하기 위해 만들었거나 사용할 <see cref="T:System.Net.Sockets.Socket" />입니다.</returns>
    </member>
    <member name="P:System.Net.Sockets.SocketAsyncEventArgs.Buffer">
      <summary vsli:raw="Gets the data buffer to use with an asynchronous socket method.">비동기 소켓 메서드에 사용할 데이터 버퍼를 가져옵니다.</summary>
      <returns vsli:raw="A &lt;see cref=&quot;T:System.Byte&quot; /&gt; array that represents the data buffer to use with an asynchronous socket method.">비동기 소켓 메서드에 사용할 데이터 버퍼를 나타내는 <see cref="T:System.Byte" /> 배열입니다.</returns>
    </member>
    <member name="P:System.Net.Sockets.SocketAsyncEventArgs.BufferList">
      <summary vsli:raw="Gets or sets an array of data buffers to use with an asynchronous socket method.">비동기 소켓 메서드에 사용할 데이터 버퍼의 배열을 가져오거나 설정합니다.</summary>
      <exception cref="T:System.ArgumentException" vsli:raw="There are ambiguous buffers specified on a set operation. This exception occurs if the &lt;see cref=&quot;P:System.Net.Sockets.SocketAsyncEventArgs.Buffer&quot; /&gt; property has been set to a non-null value and an attempt was made to set the &lt;see cref=&quot;P:System.Net.Sockets.SocketAsyncEventArgs.BufferList&quot; /&gt; property to a non-null value.">설정 작업에 지정된 버퍼가 명확하지 않은 경우. <see cref="P:System.Net.Sockets.SocketAsyncEventArgs.Buffer" /> 속성이 null이 아닌 값으로 설정되고, <see cref="P:System.Net.Sockets.SocketAsyncEventArgs.BufferList" />속성을 null이 아닌 값으로 설정하고자 하는 경우, 이러한 예외가 발생합니다.</exception>
      <returns vsli:raw="An &lt;see cref=&quot;T:System.Collections.IList&quot; /&gt; that represents an array of data buffers to use with an asynchronous socket method.">비동기 소켓 메서드에 사용할 데이터 버퍼의 배열을 나타내는 <see cref="T:System.Collections.IList" />입니다.</returns>
    </member>
    <member name="P:System.Net.Sockets.SocketAsyncEventArgs.BytesTransferred">
      <summary vsli:raw="Gets the number of bytes transferred in the socket operation.">소켓 작업에서 전송된 바이트 수를 가져옵니다.</summary>
      <returns vsli:raw="An &lt;see cref=&quot;T:System.Int32&quot; /&gt; that contains the number of bytes transferred in the socket operation.">소켓 작업에서 전송된 바이트 수를 포함하는 <see cref="T:System.Int32" />입니다.</returns>
    </member>
    <member name="P:System.Net.Sockets.SocketAsyncEventArgs.ConnectByNameError">
      <summary vsli:raw="Gets the exception in the case of a connection failure when a &lt;see cref=&quot;T:System.Net.DnsEndPoint&quot; /&gt; was used.">
        <see cref="T:System.Net.DnsEndPoint" />를 사용할 때 연결 실패가 발생하는 경우의 예외를 가져옵니다.</summary>
      <returns vsli:raw="An &lt;see cref=&quot;T:System.Exception&quot; /&gt; that indicates the cause of the connection error when a &lt;see cref=&quot;T:System.Net.DnsEndPoint&quot; /&gt; was specified for the &lt;see cref=&quot;P:System.Net.Sockets.SocketAsyncEventArgs.RemoteEndPoint&quot; /&gt; property.">
        <see cref="T:System.Exception" />가 <see cref="T:System.Net.DnsEndPoint" /> 속성에 지정된 경우 연결 오류의 원인을 나타내는 <see cref="P:System.Net.Sockets.SocketAsyncEventArgs.RemoteEndPoint" />입니다.</returns>
    </member>
    <member name="P:System.Net.Sockets.SocketAsyncEventArgs.ConnectSocket">
      <summary vsli:raw="The created and connected &lt;see cref=&quot;T:System.Net.Sockets.Socket&quot; /&gt; object after successful completion of the &lt;see cref=&quot;Overload:System.Net.Sockets.Socket.ConnectAsync&quot; /&gt; method.">
        <see cref="T:System.Net.Sockets.Socket" /> 메서드가 성공적으로 완료된 후 만들어지고 연결되는 <see cref="Overload:System.Net.Sockets.Socket.ConnectAsync" /> 개체입니다.</summary>
      <returns vsli:raw="The connected &lt;see cref=&quot;T:System.Net.Sockets.Socket&quot; /&gt; object.">연결된 <see cref="T:System.Net.Sockets.Socket" /> 개체입니다.</returns>
    </member>
    <member name="P:System.Net.Sockets.SocketAsyncEventArgs.Count">
      <summary vsli:raw="Gets the maximum amount of data, in bytes, to send or receive in an asynchronous operation.">비동기 작업을 통해 보내거나 받을 최대 데이터 양(바이트)을 가져옵니다.</summary>
      <returns vsli:raw="An &lt;see cref=&quot;T:System.Int32&quot; /&gt; that contains the maximum amount of data, in bytes, to send or receive.">보내거나 받을 최대 데이터 양(바이트)을 포함하는 <see cref="T:System.Int32" />입니다.</returns>
    </member>
    <member name="P:System.Net.Sockets.SocketAsyncEventArgs.DisconnectReuseSocket">
      <summary vsli:raw="Gets or sets a value that specifies if socket can be reused after a disconnect operation.">연결 끊기 작업이 완료된 후 소켓을 다시 사용할 수 있는지 여부를 지정하는 값을 가져오거나 설정합니다.</summary>
      <returns vsli:raw="A &lt;see cref=&quot;T:System.Boolean&quot; /&gt; that specifies if socket can be reused after a disconnect operation.">연결 끊기 작업이 완료된 후 소켓을 다시 사용할 수 있는지 여부를 지정하는 <see cref="T:System.Boolean" />입니다.</returns>
    </member>
    <member name="P:System.Net.Sockets.SocketAsyncEventArgs.LastOperation">
      <summary vsli:raw="Gets the type of socket operation most recently performed with this context object.">이 컨텍스트 개체를 사용하여 가장 최근에 수행한 소켓 작업의 유형을 가져옵니다.</summary>
      <returns vsli:raw="A &lt;see cref=&quot;T:System.Net.Sockets.SocketAsyncOperation&quot; /&gt; instance that indicates the type of socket operation most recently performed with this context object.">이 컨텍스트 개체를 사용하여 가장 최근에 수행한 소켓 작업의 유형을 나타내는 <see cref="T:System.Net.Sockets.SocketAsyncOperation" /> 인스턴스입니다.</returns>
    </member>
    <member name="P:System.Net.Sockets.SocketAsyncEventArgs.MemoryBuffer">
      <summary vsli:raw="Gets the region of memory to use as a buffer with an asynchronous socket method.">비동기 소켓 메서드를 사용하여 버퍼로 사용할 메모리 영역을 가져옵니다.</summary>
      <returns vsli:raw="A region of memory that represents the data buffer to use with an asynchronous socket method.">비동기 소켓 메서드에 사용할 데이터 버퍼를 나타내는 메모리 영역입니다.</returns>
    </member>
    <member name="P:System.Net.Sockets.SocketAsyncEventArgs.Offset">
      <summary vsli:raw="Gets the offset, in bytes, into the data buffer referenced by the &lt;see cref=&quot;P:System.Net.Sockets.SocketAsyncEventArgs.Buffer&quot; /&gt; property.">
        <see cref="P:System.Net.Sockets.SocketAsyncEventArgs.Buffer" /> 속성에서 참조하는 데이터 버퍼의 오프셋(바이트)을 가져옵니다.</summary>
      <returns vsli:raw="An &lt;see cref=&quot;T:System.Int32&quot; /&gt; that contains the offset, in bytes, into the data buffer referenced by the &lt;see cref=&quot;P:System.Net.Sockets.SocketAsyncEventArgs.Buffer&quot; /&gt; property.">
        <see cref="T:System.Int32" /> 속성에서 참조하는 데이터 버퍼의 오프셋(바이트)이 포함된 <see cref="P:System.Net.Sockets.SocketAsyncEventArgs.Buffer" />입니다.</returns>
    </member>
    <member name="P:System.Net.Sockets.SocketAsyncEventArgs.ReceiveMessageFromPacketInfo">
      <summary vsli:raw="Gets the IP address and interface of a received packet.">받은 패킷의 IP 주소 및 인터페이스를 가져옵니다.</summary>
      <returns vsli:raw="An &lt;see cref=&quot;T:System.Net.Sockets.IPPacketInformation&quot; /&gt; instance that contains the destination IP address and interface of a received packet.">받은 패킷의 대상 IP 주소 및 인터페이스를 포함하는 <see cref="T:System.Net.Sockets.IPPacketInformation" /> 인스턴스입니다.</returns>
    </member>
    <member name="P:System.Net.Sockets.SocketAsyncEventArgs.RemoteEndPoint">
      <summary vsli:raw="Gets or sets the remote IP endpoint for an asynchronous operation.">비동기 작업의 원격 IP 엔드포인트를 가져오거나 설정합니다.</summary>
      <returns vsli:raw="An &lt;see cref=&quot;T:System.Net.EndPoint&quot; /&gt; that represents the remote IP endpoint for an asynchronous operation.">비동기 작업의 원격 IP 엔드포인트를 나타내는 <see cref="T:System.Net.EndPoint" />입니다.</returns>
    </member>
    <member name="P:System.Net.Sockets.SocketAsyncEventArgs.SendPacketsElements">
      <summary vsli:raw="Gets or sets an array of buffers to be sent for an asynchronous operation used by the &lt;see cref=&quot;M:System.Net.Sockets.Socket.SendPacketsAsync(System.Net.Sockets.SocketAsyncEventArgs)&quot; /&gt; method.">
        <see cref="M:System.Net.Sockets.Socket.SendPacketsAsync(System.Net.Sockets.SocketAsyncEventArgs)" /> 메서드로 비동기 작업을 수행할 때 보낼 버퍼의 배열을 가져오거나 설정합니다.</summary>
      <returns vsli:raw="An array of &lt;see cref=&quot;T:System.Net.Sockets.SendPacketsElement&quot; /&gt; objects that represent an array of buffers to be sent.">보낼 버퍼의 배열을 나타내는 <see cref="T:System.Net.Sockets.SendPacketsElement" /> 개체 배열입니다.</returns>
    </member>
    <member name="P:System.Net.Sockets.SocketAsyncEventArgs.SendPacketsFlags">
      <summary vsli:raw="Gets or sets a bitwise combination of &lt;see cref=&quot;T:System.Net.Sockets.TransmitFileOptions&quot; /&gt; values for an asynchronous operation used by the &lt;see cref=&quot;M:System.Net.Sockets.Socket.SendPacketsAsync(System.Net.Sockets.SocketAsyncEventArgs)&quot; /&gt; method.">
        <see cref="T:System.Net.Sockets.TransmitFileOptions" /> 메서드로 비동기 작업을 수행할 때 사용하는 <see cref="M:System.Net.Sockets.Socket.SendPacketsAsync(System.Net.Sockets.SocketAsyncEventArgs)" /> 값의 비트 조합을 가져오거나 설정합니다.</summary>
      <returns vsli:raw="A &lt;see cref=&quot;T:System.Net.Sockets.TransmitFileOptions&quot; /&gt; that contains a bitwise combination of values that are used with an asynchronous operation.">비동기 작업에 사용되는 값의 비트 조합을 포함하는 <see cref="T:System.Net.Sockets.TransmitFileOptions" />입니다.</returns>
    </member>
    <member name="P:System.Net.Sockets.SocketAsyncEventArgs.SendPacketsSendSize">
      <summary vsli:raw="Gets or sets the size, in bytes, of the data block used in the send operation.">보내기 작업에 사용되는 데이터 블록의 크기(바이트)를 가져오거나 설정합니다.</summary>
      <returns vsli:raw="An &lt;see cref=&quot;T:System.Int32&quot; /&gt; that contains the size, in bytes, of the data block used in the send operation.">보내기 작업에 사용되는 데이터 블록의 크기(바이트)가 포함된 <see cref="T:System.Int32" />입니다.</returns>
    </member>
    <member name="P:System.Net.Sockets.SocketAsyncEventArgs.SocketError">
      <summary vsli:raw="Gets or sets the result of the asynchronous socket operation.">비동기 소켓 작업의 결과를 가져오거나 설정합니다.</summary>
      <returns vsli:raw="A &lt;see cref=&quot;T:System.Net.Sockets.SocketError&quot; /&gt; that represents the result of the asynchronous socket operation.">비동기 소켓 작업의 결과를 나타내는 <see cref="T:System.Net.Sockets.SocketError" />입니다.</returns>
    </member>
    <member name="P:System.Net.Sockets.SocketAsyncEventArgs.SocketFlags">
      <summary vsli:raw="Gets the results of an asynchronous socket operation or sets the behavior of an asynchronous operation.">비동기 소켓 작업의 결과를 가져오거나 비동기 작업의 동작을 설정합니다.</summary>
      <returns vsli:raw="A &lt;see cref=&quot;T:System.Net.Sockets.SocketFlags&quot; /&gt; that represents the results of an asynchronous socket operation.">비동기 소켓 작업의 결과를 나타내는 <see cref="T:System.Net.Sockets.SocketFlags" />입니다.</returns>
    </member>
    <member name="P:System.Net.Sockets.SocketAsyncEventArgs.UserToken">
      <summary vsli:raw="Gets or sets a user or application object associated with this asynchronous socket operation.">이 비동기 소켓 작업과 연결된 사용자 또는 애플리케이션 개체를 가져오거나 설정합니다.</summary>
      <returns vsli:raw="An object that represents the user or application object associated with this asynchronous socket operation.">이 비동기 소켓 작업과 연결된 사용자 또는 애플리케이션 개체를 나타내는 개체입니다.</returns>
    </member>
    <member name="T:System.Net.Sockets.SocketAsyncOperation">
      <summary vsli:raw="The type of asynchronous socket operation most recently performed with this context object.">이 컨텍스트 개체로 가장 최근에 수행한 비동기 소켓 작업의 형식입니다.</summary>
    </member>
    <member name="F:System.Net.Sockets.SocketAsyncOperation.Accept">
      <summary vsli:raw="A socket Accept operation.">소켓 Accept 작업입니다.</summary>
    </member>
    <member name="F:System.Net.Sockets.SocketAsyncOperation.Connect">
      <summary vsli:raw="A socket Connect operation.">소켓 Connect 작업입니다.</summary>
    </member>
    <member name="F:System.Net.Sockets.SocketAsyncOperation.Disconnect">
      <summary vsli:raw="A socket Disconnect operation.">소켓 Disconnect 작업입니다.</summary>
    </member>
    <member name="F:System.Net.Sockets.SocketAsyncOperation.None">
      <summary vsli:raw="None of the socket operations.">소켓 작업이 없습니다.</summary>
    </member>
    <member name="F:System.Net.Sockets.SocketAsyncOperation.Receive">
      <summary vsli:raw="A socket Receive operation.">소켓 Receive 작업입니다.</summary>
    </member>
    <member name="F:System.Net.Sockets.SocketAsyncOperation.ReceiveFrom">
      <summary vsli:raw="A socket ReceiveFrom operation.">소켓 ReceiveFrom 작업입니다.</summary>
    </member>
    <member name="F:System.Net.Sockets.SocketAsyncOperation.ReceiveMessageFrom">
      <summary vsli:raw="A socket ReceiveMessageFrom operation.">소켓 ReceiveMessageFrom 작업입니다.</summary>
    </member>
    <member name="F:System.Net.Sockets.SocketAsyncOperation.Send">
      <summary vsli:raw="A socket Send operation.">소켓 Send 작업입니다.</summary>
    </member>
    <member name="F:System.Net.Sockets.SocketAsyncOperation.SendPackets">
      <summary vsli:raw="A socket SendPackets operation.">소켓 SendPackets 작업입니다.</summary>
    </member>
    <member name="F:System.Net.Sockets.SocketAsyncOperation.SendTo">
      <summary vsli:raw="A socket SendTo operation.">소켓 SendTo 작업입니다.</summary>
    </member>
    <member name="T:System.Net.Sockets.SocketFlags">
      <summary vsli:raw="Specifies socket send and receive behaviors.">소켓 전송 및 수신 동작을 지정합니다.</summary>
    </member>
    <member name="F:System.Net.Sockets.SocketFlags.Broadcast">
      <summary vsli:raw="Indicates a broadcast packet.">브로드캐스트 패킷을 나타냅니다.</summary>
    </member>
    <member name="F:System.Net.Sockets.SocketFlags.ControlDataTruncated">
      <summary vsli:raw="Indicates that the control data did not fit into an internal 64-KB buffer and was truncated.">컨트롤 데이터가 내부 64KB 버퍼에 맞지 않아 잘렸음을 나타냅니다.</summary>
    </member>
    <member name="F:System.Net.Sockets.SocketFlags.DontRoute">
      <summary vsli:raw="Send without using routing tables.">라우팅 테이블을 사용하지 않고 보냅니다.</summary>
    </member>
    <member name="F:System.Net.Sockets.SocketFlags.Multicast">
      <summary vsli:raw="Indicates a multicast packet.">멀티캐스트 패킷을 나타냅니다.</summary>
    </member>
    <member name="F:System.Net.Sockets.SocketFlags.None">
      <summary vsli:raw="Use no flags for this call.">이 호출에 대해 플래그를 사용하지 않습니다.</summary>
    </member>
    <member name="F:System.Net.Sockets.SocketFlags.OutOfBand">
      <summary vsli:raw="Process out-of-band data.">대역 외 데이터를 처리합니다.</summary>
    </member>
    <member name="F:System.Net.Sockets.SocketFlags.Partial">
      <summary vsli:raw="Partial send or receive for message.">메시지에 대한 부분 전송 또는 수신입니다.</summary>
    </member>
    <member name="F:System.Net.Sockets.SocketFlags.Peek">
      <summary vsli:raw="Peek at the incoming message.">들어오는 메시지를 미리 봅니다.</summary>
    </member>
    <member name="F:System.Net.Sockets.SocketFlags.Truncated">
      <summary vsli:raw="The message was too large to fit into the specified buffer and was truncated.">메시지가 너무 커서 지정된 버퍼에 맞지 않아 잘렸습니다.</summary>
    </member>
    <member name="T:System.Net.Sockets.SocketInformation">
      <summary vsli:raw="Encapsulates the information that is necessary to duplicate a &lt;see cref=&quot;T:System.Net.Sockets.Socket&quot; /&gt;.">
        <see cref="T:System.Net.Sockets.Socket" />을 복제하는 데 필요한 정보를 캡슐화합니다.</summary>
    </member>
    <member name="P:System.Net.Sockets.SocketInformation.Options">
      <summary vsli:raw="Gets or sets the options for a &lt;see cref=&quot;T:System.Net.Sockets.Socket&quot; /&gt;.">
        <see cref="T:System.Net.Sockets.Socket" />의 옵션을 가져오거나 설정합니다.</summary>
      <returns vsli:raw="A &lt;see cref=&quot;T:System.Net.Sockets.SocketInformationOptions&quot; /&gt; instance.">
        <see cref="T:System.Net.Sockets.SocketInformationOptions" /> 인스턴스입니다.</returns>
    </member>
    <member name="P:System.Net.Sockets.SocketInformation.ProtocolInformation">
      <summary vsli:raw="Gets or sets the protocol information for a &lt;see cref=&quot;T:System.Net.Sockets.Socket&quot; /&gt;.">
        <see cref="T:System.Net.Sockets.Socket" />의 프로토콜 정보를 가져오거나 설정합니다.</summary>
      <returns vsli:raw="An array of type &lt;see cref=&quot;T:System.Byte&quot; /&gt;.">
        <see cref="T:System.Byte" /> 형식의 배열입니다.</returns>
    </member>
    <member name="T:System.Net.Sockets.SocketInformationOptions">
      <summary vsli:raw="Describes states for a &lt;see cref=&quot;T:System.Net.Sockets.Socket&quot; /&gt;.">
        <see cref="T:System.Net.Sockets.Socket" />의 상태를 설명합니다.</summary>
    </member>
    <member name="F:System.Net.Sockets.SocketInformationOptions.Connected">
      <summary vsli:raw="The &lt;see cref=&quot;T:System.Net.Sockets.Socket&quot; /&gt; is connected.">
        <see cref="T:System.Net.Sockets.Socket" />이 연결되어 있습니다.</summary>
    </member>
    <member name="F:System.Net.Sockets.SocketInformationOptions.Listening">
      <summary vsli:raw="The &lt;see cref=&quot;T:System.Net.Sockets.Socket&quot; /&gt; is listening for new connections.">
        <see cref="T:System.Net.Sockets.Socket" />이 새 연결을 수신 대기하고 있습니다.</summary>
    </member>
    <member name="F:System.Net.Sockets.SocketInformationOptions.NonBlocking">
      <summary vsli:raw="The &lt;see cref=&quot;T:System.Net.Sockets.Socket&quot; /&gt; is nonblocking.">
        <see cref="T:System.Net.Sockets.Socket" />이 비블로킹 상태입니다.</summary>
    </member>
    <member name="F:System.Net.Sockets.SocketInformationOptions.UseOnlyOverlappedIO">
      <summary vsli:raw="The &lt;see cref=&quot;T:System.Net.Sockets.Socket&quot; /&gt; uses overlapped I/O.">
        <see cref="T:System.Net.Sockets.Socket" />이 겹쳐진 I/O를 사용합니다.</summary>
    </member>
    <member name="T:System.Net.Sockets.SocketOptionLevel">
      <summary vsli:raw="Defines socket option levels for the &lt;see cref=&quot;M:System.Net.Sockets.Socket.SetSocketOption(System.Net.Sockets.SocketOptionLevel,System.Net.Sockets.SocketOptionName,System.Int32)&quot; /&gt; and &lt;see cref=&quot;M:System.Net.Sockets.Socket.GetSocketOption(System.Net.Sockets.SocketOptionLevel,System.Net.Sockets.SocketOptionName)&quot; /&gt; methods.">
        <see cref="M:System.Net.Sockets.Socket.SetSocketOption(System.Net.Sockets.SocketOptionLevel,System.Net.Sockets.SocketOptionName,System.Int32)" /> 및 <see cref="M:System.Net.Sockets.Socket.GetSocketOption(System.Net.Sockets.SocketOptionLevel,System.Net.Sockets.SocketOptionName)" /> 메서드에 대한 소켓 옵션 수준을 정의합니다.</summary>
    </member>
    <member name="F:System.Net.Sockets.SocketOptionLevel.IP">
      <summary vsli:raw="&lt;see cref=&quot;T:System.Net.Sockets.Socket&quot; /&gt; options apply only to IP sockets.">
        <see cref="T:System.Net.Sockets.Socket" /> 옵션은 IP 소켓에만 적용됩니다.</summary>
    </member>
    <member name="F:System.Net.Sockets.SocketOptionLevel.IPv6">
      <summary vsli:raw="&lt;see cref=&quot;T:System.Net.Sockets.Socket&quot; /&gt; options apply only to IPv6 sockets.">
        <see cref="T:System.Net.Sockets.Socket" /> 옵션은 IPv6 소켓에만 적용됩니다.</summary>
    </member>
    <member name="F:System.Net.Sockets.SocketOptionLevel.Socket">
      <summary vsli:raw="&lt;see cref=&quot;T:System.Net.Sockets.Socket&quot; /&gt; options apply to all sockets.">
        <see cref="T:System.Net.Sockets.Socket" /> 옵션이 모든 소켓에 적용됩니다.</summary>
    </member>
    <member name="F:System.Net.Sockets.SocketOptionLevel.Tcp">
      <summary vsli:raw="&lt;see cref=&quot;T:System.Net.Sockets.Socket&quot; /&gt; options apply only to TCP sockets.">
        <see cref="T:System.Net.Sockets.Socket" /> 옵션이 TCP 소켓에만 적용됩니다.</summary>
    </member>
    <member name="F:System.Net.Sockets.SocketOptionLevel.Udp">
      <summary vsli:raw="&lt;see cref=&quot;T:System.Net.Sockets.Socket&quot; /&gt; options apply only to UDP sockets.">
        <see cref="T:System.Net.Sockets.Socket" /> 옵션은 UDP 소켓에만 적용됩니다.</summary>
    </member>
    <member name="T:System.Net.Sockets.SocketOptionName">
      <summary vsli:raw="Defines configuration option names.">구성 옵션 이름을 정의합니다.</summary>
    </member>
    <member name="F:System.Net.Sockets.SocketOptionName.AcceptConnection">
      <summary vsli:raw="The socket is listening.">소켓이 수신 중입니다.</summary>
    </member>
    <member name="F:System.Net.Sockets.SocketOptionName.AddMembership">
      <summary vsli:raw="Add an IP group membership.">IP 그룹 구성원을 추가합니다.</summary>
    </member>
    <member name="F:System.Net.Sockets.SocketOptionName.AddSourceMembership">
      <summary vsli:raw="Join a source group.">원본 그룹을 조인합니다.</summary>
    </member>
    <member name="F:System.Net.Sockets.SocketOptionName.BlockSource">
      <summary vsli:raw="Block data from a source.">원본의 데이터를 차단합니다.</summary>
    </member>
    <member name="F:System.Net.Sockets.SocketOptionName.Broadcast">
      <summary vsli:raw="Permit sending broadcast messages on the socket.">소켓의 브로드캐스트 메시지 보내기를 허용합니다.</summary>
    </member>
    <member name="F:System.Net.Sockets.SocketOptionName.BsdUrgent">
      <summary vsli:raw="Use urgent data as defined in RFC-1222. This option can be set only once; after it is set, it cannot be turned off.">RFC-1222에 정의된 대로 긴급한 데이터를 사용합니다. 이 옵션은 한 번만 설정할 수 있으며, 설정한 후에는 해제할 수 없습니다.</summary>
    </member>
    <member name="F:System.Net.Sockets.SocketOptionName.ChecksumCoverage">
      <summary vsli:raw="Set or get the UDP checksum coverage.">UDP 체크섬 범위를 설정하거나 가져옵니다.</summary>
    </member>
    <member name="F:System.Net.Sockets.SocketOptionName.Debug">
      <summary vsli:raw="Record debugging information.">디버깅 정보를 기록합니다.</summary>
    </member>
    <member name="F:System.Net.Sockets.SocketOptionName.DontFragment">
      <summary vsli:raw="Do not fragment IP datagrams.">IP 데이터그램을 조각화하지 않습니다.</summary>
    </member>
    <member name="F:System.Net.Sockets.SocketOptionName.DontLinger">
      <summary vsli:raw="Close the socket gracefully without lingering.">소켓을 즉시 자동으로 닫습니다.</summary>
    </member>
    <member name="F:System.Net.Sockets.SocketOptionName.DontRoute">
      <summary vsli:raw="Do not route; send the packet directly to the interface addresses.">라우팅하지 않고 인터페이스 주소로 직접 패킷을 보냅니다.</summary>
    </member>
    <member name="F:System.Net.Sockets.SocketOptionName.DropMembership">
      <summary vsli:raw="Drop an IP group membership.">IP 그룹 구성원을 드롭합니다.</summary>
    </member>
    <member name="F:System.Net.Sockets.SocketOptionName.DropSourceMembership">
      <summary vsli:raw="Drop a source group.">원본 그룹을 삭제합니다.</summary>
    </member>
    <member name="F:System.Net.Sockets.SocketOptionName.Error">
      <summary vsli:raw="Gets the error status and clear.">오류 상태를 가져온 다음, 지웁니다.</summary>
    </member>
    <member name="F:System.Net.Sockets.SocketOptionName.ExclusiveAddressUse">
      <summary vsli:raw="Enables a socket to be bound for exclusive access.">단독 액세스를 위해 소켓에 바인딩할 수 있습니다.</summary>
    </member>
    <member name="F:System.Net.Sockets.SocketOptionName.Expedited">
      <summary vsli:raw="Use expedited data as defined in RFC-1222. This option can be set only once; after it is set, it cannot be turned off.">RFC-1222에 정의된 대로 긴급 데이터를 사용합니다. 이 옵션은 한 번만 설정할 수 있으며, 설정한 후에는 해제할 수 없습니다.</summary>
    </member>
    <member name="F:System.Net.Sockets.SocketOptionName.HeaderIncluded">
      <summary vsli:raw="Indicates that the application provides the IP header for outgoing datagrams.">나가는 데이터그램의 IP 헤더를 애플리케이션이 제공함을 나타냅니다.</summary>
    </member>
    <member name="F:System.Net.Sockets.SocketOptionName.HopLimit">
      <summary vsli:raw="Specifies the maximum number of router hops for an Internet Protocol version 6 (IPv6) packet. This is similar to Time to Live (TTL) for Internet Protocol version 4.">IPv6(인터넷 프로토콜 버전 6) 패킷에 대한 최대 라우터 홉 수를 지정합니다. 이 옵션은 인터넷 프로토콜 버전 4의 TTL(Time to Live)과 유사합니다.</summary>
    </member>
    <member name="F:System.Net.Sockets.SocketOptionName.IPOptions">
      <summary vsli:raw="Specifies the IP options to be inserted into outgoing datagrams.">나가는 데이터그램에 삽입될 IP 옵션을 지정합니다.</summary>
    </member>
    <member name="F:System.Net.Sockets.SocketOptionName.IPProtectionLevel">
      <summary vsli:raw="Enables restriction of a IPv6 socket to a specified scope, such as addresses with the same link local or site local prefix. This socket option enables applications to place access restrictions on IPv6 sockets. Such restrictions enable an application running on a private LAN to simply and robustly harden itself against external attacks. This socket option widens or narrows the scope of a listening socket, enabling unrestricted access from public and private users when appropriate, or restricting access only to the same site, as required. This socket option has defined protection levels specified in the &lt;see cref=&quot;T:System.Net.Sockets.IPProtectionLevel&quot; /&gt; enumeration.">동일한 링크 로컬 또는 사이트 로컬 접두사가 있는 주소와 같이 지정 된 범위에 대 한 IPv6 소켓 제한을 사용 하도록 설정 합니다. 이 소켓 옵션을 사용 하면 응용 프로그램에서 IPv6 소켓에 대 한 액세스 제한을 적용할 수 있습니다. 이러한 제한을 사용하면 사설 LAN에서 실행되는 애플리케이션을 간단하고 강력하게 외부 공격으로부터 보호할 수 있습니다. 이 소켓 옵션을 통해 적절한 경우 공용 및 개인 사용자의 무제한 액세스를 허용하거나 필요에 따라 같은 사이트로만 액세스를 제한하여 수신 소켓의 범위를 넓히거나 좁힐 수 있습니다. 이 소켓 옵션은 <see cref="T:System.Net.Sockets.IPProtectionLevel" /> 열거형에 지정된 보호 수준을 정의합니다.</summary>
    </member>
    <member name="F:System.Net.Sockets.SocketOptionName.IpTimeToLive">
      <summary vsli:raw="Set the IP header Time-to-Live field.">IP 헤더의 TTL(Time to Live) 필드를 설정합니다.</summary>
    </member>
    <member name="F:System.Net.Sockets.SocketOptionName.IPv6Only">
      <summary vsli:raw="Indicates if a socket created for the AF_INET6 address family is restricted to IPv6 communications only. Sockets created for the AF_INET6 address family may be used for both IPv6 and IPv4 communications. Some applications may want to restrict their use of a socket created for the AF_INET6 address family to IPv6 communications only. When this value is non-zero (the default on Windows), a socket created for the AF_INET6 address family can be used to send and receive IPv6 packets only. When this value is zero, a socket created for the AF_INET6 address family can be used to send and receive packets to and from an IPv6 address or an IPv4 address. Note that the ability to interact with an IPv4 address requires the use of IPv4 mapped addresses. This socket option is supported on Windows Vista or later.">AF_INET6 주소 패밀리에 대해 만든 소켓을 IPv6 통신에만 사용하도록 제한할지 여부를 나타냅니다. AF_INET6 주소 패밀리에 대해 만든 소켓은 IPv6 및 IPv4 통신 모두에 사용할 수 있습니다. 애플리케이션에 따라 AF_INET6 주소 패밀리에 대해 만든 소켓을 IPv6 통신에만 사용하도록 제한할 수 있습니다. 이 값이 0이 아니면(Windows의 경우 기본값) AF_INET6 주소 패밀리에 대해 만든 소켓을 IPv6 패킷을 보내고 받는 데만 사용할 수 있습니다. 이 값이 0이면 AF_INET6 주소 패밀리에 대해 만든 소켓을 IPv6 주소 또는 IPv4 주소에서 패킷을 보내고 받는 데 사용할 수 있습니다. IPv4 주소를 조작할 수 있으려면 IPv4로 매핑된 주소를 사용해야 합니다. 이 소켓 옵션은 Windows Vista 이상에서 지원됩니다.</summary>
    </member>
    <member name="F:System.Net.Sockets.SocketOptionName.KeepAlive">
      <summary vsli:raw="Use keep-alives.">연결 유지를 사용합니다.</summary>
    </member>
    <member name="F:System.Net.Sockets.SocketOptionName.Linger">
      <summary vsli:raw="Linger on close if unsent data is present.">보내지 않은 데이터가 있으면 닫기가 지연됩니다.</summary>
    </member>
    <member name="F:System.Net.Sockets.SocketOptionName.MaxConnections">
      <summary vsli:raw="Not supported; will throw a &lt;see cref=&quot;T:System.Net.Sockets.SocketException&quot; /&gt; if used.">지원되지 않는 값이므로 이 값을 사용하면 <see cref="T:System.Net.Sockets.SocketException" />이 throw됩니다.</summary>
    </member>
    <member name="F:System.Net.Sockets.SocketOptionName.MulticastInterface">
      <summary vsli:raw="Set the interface for outgoing multicast packets.">나가는 멀티캐스트 패킷에 대한 인터페이스를 설정합니다.</summary>
    </member>
    <member name="F:System.Net.Sockets.SocketOptionName.MulticastLoopback">
      <summary vsli:raw="An IP multicast loopback.">IP 멀티캐스트 루프백입니다.</summary>
    </member>
    <member name="F:System.Net.Sockets.SocketOptionName.MulticastTimeToLive">
      <summary vsli:raw="An IP multicast Time to Live.">IP 멀티캐스트  TTL(Time to Live)입니다.</summary>
    </member>
    <member name="F:System.Net.Sockets.SocketOptionName.NoChecksum">
      <summary vsli:raw="Send UDP datagrams with checksum set to zero.">체크섬을 0으로 설정하여 UDP 데이터그램을 보냅니다.</summary>
    </member>
    <member name="F:System.Net.Sockets.SocketOptionName.NoDelay">
      <summary vsli:raw="Disables the Nagle algorithm for send coalescing.">보내기 통합을 위해 Nagle 알고리즘을 비활성화합니다.</summary>
    </member>
    <member name="F:System.Net.Sockets.SocketOptionName.OutOfBandInline">
      <summary vsli:raw="Receives out-of-band data in the normal data stream.">정상 데이터 스트림 내의 대역 외 데이터를 받습니다.</summary>
    </member>
    <member name="F:System.Net.Sockets.SocketOptionName.PacketInformation">
      <summary vsli:raw="Return information about received packets.">받은 패킷에 관한 정보를 반환합니다.</summary>
    </member>
    <member name="F:System.Net.Sockets.SocketOptionName.ReceiveBuffer">
      <summary vsli:raw="Specifies the total per-socket buffer space reserved for receives. This is unrelated to the maximum message size or the size of a TCP window.">받기용으로 예약된 소켓당 버퍼 공간 전체를 지정합니다. 이 크기는 최대 메시지 크기나 TCP 창의 크기와는 관련이 없습니다.</summary>
    </member>
    <member name="F:System.Net.Sockets.SocketOptionName.ReceiveLowWater">
      <summary vsli:raw="Specifies the low water mark for &lt;see cref=&quot;Overload:System.Net.Sockets.Socket.Receive&quot; /&gt; operations.">
        <see cref="Overload:System.Net.Sockets.Socket.Receive" /> 작업에 대해 하위 워터마크를 지정합니다.</summary>
    </member>
    <member name="F:System.Net.Sockets.SocketOptionName.ReceiveTimeout">
      <summary vsli:raw="Receive a time-out. This option applies only to synchronous methods; it has no effect on asynchronous methods such as the &lt;see cref=&quot;M:System.Net.Sockets.Socket.BeginSend(System.Byte[],System.Int32,System.Int32,System.Net.Sockets.SocketFlags,System.AsyncCallback,System.Object)&quot; /&gt; method.">제한 시간을 받습니다. 이 옵션은 동기 메서드에만 적용 됩니다. 메서드와 같은 비동기 메서드에는 영향을 주지 않습니다 <see cref="M:System.Net.Sockets.Socket.BeginSend(System.Byte[],System.Int32,System.Int32,System.Net.Sockets.SocketFlags,System.AsyncCallback,System.Object)" /> .</summary>
    </member>
    <member name="F:System.Net.Sockets.SocketOptionName.ReuseAddress">
      <summary vsli:raw="Allows the socket to be bound to an address that is already in use.">소켓이 이미 사용 중인 주소에 바인딩될 수 있습니다.</summary>
    </member>
    <member name="F:System.Net.Sockets.SocketOptionName.ReuseUnicastPort">
      <summary vsli:raw="Indicates that the system should defer ephemeral port allocation for outbound connections. This is equivalent to using the Winsock2 SO_REUSE_UNICASTPORT socket option.">시스템이 아웃바운드 연결에 대한 임시 포트 할당을 연기 해야 함을 나타냅니다. Winsock2 SO_REUSE_UNICASTPORT 소켓 옵션을 사용하는 것과 같습니다.</summary>
    </member>
    <member name="F:System.Net.Sockets.SocketOptionName.SendBuffer">
      <summary vsli:raw="Specifies the total per-socket buffer space reserved for sends. This is unrelated to the maximum message size or the size of a TCP window.">보내기용으로 예약된 소켓당 버퍼 공간 전체를 지정합니다. 이 크기는 최대 메시지 크기나 TCP 창의 크기와는 관련이 없습니다.</summary>
    </member>
    <member name="F:System.Net.Sockets.SocketOptionName.SendLowWater">
      <summary vsli:raw="Specifies the low water mark for &lt;see cref=&quot;Overload:System.Net.Sockets.Socket.Send&quot; /&gt; operations.">
        <see cref="Overload:System.Net.Sockets.Socket.Send" /> 작업에 대해 하위 워터마크를 지정합니다.</summary>
    </member>
    <member name="F:System.Net.Sockets.SocketOptionName.SendTimeout">
      <summary vsli:raw="Send a time-out. This option applies only to synchronous methods; it has no effect on asynchronous methods such as the &lt;see cref=&quot;M:System.Net.Sockets.Socket.BeginSend(System.Byte[],System.Int32,System.Int32,System.Net.Sockets.SocketFlags,System.AsyncCallback,System.Object)&quot; /&gt; method.">제한 시간을 보냅니다. 이 옵션은 동기 메서드에만 적용 됩니다. 메서드와 같은 비동기 메서드에는 영향을 주지 않습니다 <see cref="M:System.Net.Sockets.Socket.BeginSend(System.Byte[],System.Int32,System.Int32,System.Net.Sockets.SocketFlags,System.AsyncCallback,System.Object)" /> .</summary>
    </member>
    <member name="F:System.Net.Sockets.SocketOptionName.TcpKeepAliveInterval">
      <summary vsli:raw="The number of seconds a TCP connection will wait for a keepalive response before sending another keepalive probe.">TCP 연결에서 다른 keepalive 프로브를 보내기 전에 keepalive 응답을 대기하는 시 (초)입니다.</summary>
    </member>
    <member name="F:System.Net.Sockets.SocketOptionName.TcpKeepAliveRetryCount">
      <summary vsli:raw="The number of TCP keep alive probes that will be sent before the connection is terminated.">연결이 종료되기 전에 전송되는 TCP 연결 유지 프로브 수입니다.</summary>
    </member>
    <member name="F:System.Net.Sockets.SocketOptionName.TcpKeepAliveTime">
      <summary vsli:raw="The number of seconds a TCP connection will remain alive/idle before keepalive probes are sent to the remote.">Keepalive 프로브를 원격으로 보내기 전에 TCP 연결이 활성/유휴 상태로 유지되는 시간(초)입니다.</summary>
    </member>
    <member name="F:System.Net.Sockets.SocketOptionName.Type">
      <summary vsli:raw="Gets the socket type.">소켓 형식을 가져옵니다.</summary>
    </member>
    <member name="F:System.Net.Sockets.SocketOptionName.TypeOfService">
      <summary vsli:raw="Change the IP header type of the service field.">서비스 필드의 IP 헤더 형식을 변경합니다.</summary>
    </member>
    <member name="F:System.Net.Sockets.SocketOptionName.UnblockSource">
      <summary vsli:raw="Unblock a previously blocked source.">이전에 차단된 원본의 차단을 해제합니다.</summary>
    </member>
    <member name="F:System.Net.Sockets.SocketOptionName.UpdateAcceptContext">
      <summary vsli:raw="Updates an accepted socket's properties by using those of an existing socket. This is equivalent to using the Winsock2 SO_UPDATE_ACCEPT_CONTEXT socket option and is supported only on connection-oriented sockets.">기존 소켓의 속성을 사용하여 받아들인 소켓의 속성을 업데이트합니다. 이 옵션은 Winsock2 SO_UPDATE_ACCEPT_CONTEXT 소켓 옵션을 사용하는 것과 동일하며 연결 지향 소켓에서만 지원됩니다.</summary>
    </member>
    <member name="F:System.Net.Sockets.SocketOptionName.UpdateConnectContext">
      <summary vsli:raw="Updates a connected socket's properties by using those of an existing socket. This is equivalent to using the Winsock2 SO_UPDATE_CONNECT_CONTEXT socket option and is supported only on connection-oriented sockets.">기존 소켓의 속성을 사용하여 연결된 소켓의 속성을 업데이트합니다. 이 옵션은 Winsock2 SO_UPDATE_CONNECT_CONTEXT 소켓 옵션을 사용하는 것과 동일하며 연결 지향 소켓에서만 지원됩니다.</summary>
    </member>
    <member name="F:System.Net.Sockets.SocketOptionName.UseLoopback">
      <summary vsli:raw="Bypass hardware when possible.">가능한 경우 하드웨어를 건너뜁니다.</summary>
    </member>
    <member name="T:System.Net.Sockets.SocketReceiveFromResult">
      <summary vsli:raw="The result of a &lt;see cref=&quot;M:System.Net.Sockets.SocketTaskExtensions.ReceiveFromAsync(System.Net.Sockets.Socket,System.ArraySegment{System.Byte},System.Net.Sockets.SocketFlags,System.Net.EndPoint)&quot; /&gt; operation.">
        <see cref="M:System.Net.Sockets.SocketTaskExtensions.ReceiveFromAsync(System.Net.Sockets.Socket,System.ArraySegment{System.Byte},System.Net.Sockets.SocketFlags,System.Net.EndPoint)" /> 작업의 결과입니다.</summary>
    </member>
    <member name="F:System.Net.Sockets.SocketReceiveFromResult.ReceivedBytes">
      <summary vsli:raw="The number of bytes received. If the &lt;see cref=&quot;M:System.Net.Sockets.SocketTaskExtensions.ReceiveFromAsync(System.Net.Sockets.Socket,System.ArraySegment{System.Byte},System.Net.Sockets.SocketFlags,System.Net.EndPoint)&quot; /&gt; operation was unsuccessful, then 0.">받은 바이트 수입니다. <see cref="M:System.Net.Sockets.SocketTaskExtensions.ReceiveFromAsync(System.Net.Sockets.Socket,System.ArraySegment{System.Byte},System.Net.Sockets.SocketFlags,System.Net.EndPoint)" /> 작업에 실패하는 경우 0입니다.</summary>
    </member>
    <member name="F:System.Net.Sockets.SocketReceiveFromResult.RemoteEndPoint">
      <summary vsli:raw="The source &lt;see cref=&quot;T:System.Net.EndPoint&quot; /&gt;.">소스 <see cref="T:System.Net.EndPoint" />입니다.</summary>
    </member>
    <member name="T:System.Net.Sockets.SocketReceiveMessageFromResult">
      <summary vsli:raw="The result of a &lt;see cref=&quot;M:System.Net.Sockets.SocketTaskExtensions.ReceiveMessageFromAsync(System.Net.Sockets.Socket,System.ArraySegment{System.Byte},System.Net.Sockets.SocketFlags,System.Net.EndPoint)&quot; /&gt; operation.">
        <see cref="M:System.Net.Sockets.SocketTaskExtensions.ReceiveMessageFromAsync(System.Net.Sockets.Socket,System.ArraySegment{System.Byte},System.Net.Sockets.SocketFlags,System.Net.EndPoint)" /> 작업의 결과입니다.</summary>
    </member>
    <member name="F:System.Net.Sockets.SocketReceiveMessageFromResult.PacketInformation">
      <summary vsli:raw="An &lt;see cref=&quot;T:System.Net.Sockets.IPPacketInformation&quot; /&gt; holding address and interface information.">
        <see cref="T:System.Net.Sockets.IPPacketInformation" /> 보유 주소 및 인터페이스 정보입니다.</summary>
    </member>
    <member name="F:System.Net.Sockets.SocketReceiveMessageFromResult.ReceivedBytes">
      <summary vsli:raw="The number of bytes received. If the &lt;see cref=&quot;M:System.Net.Sockets.SocketTaskExtensions.ReceiveMessageFromAsync(System.Net.Sockets.Socket,System.ArraySegment{System.Byte},System.Net.Sockets.SocketFlags,System.Net.EndPoint)&quot; /&gt; operation is unsuccessful, this value will be 0.">받은 바이트 수입니다. <see cref="M:System.Net.Sockets.SocketTaskExtensions.ReceiveMessageFromAsync(System.Net.Sockets.Socket,System.ArraySegment{System.Byte},System.Net.Sockets.SocketFlags,System.Net.EndPoint)" /> 작업에 실패하는 경우 값은 0이 됩니다.</summary>
    </member>
    <member name="F:System.Net.Sockets.SocketReceiveMessageFromResult.RemoteEndPoint">
      <summary vsli:raw="The source &lt;see cref=&quot;T:System.Net.EndPoint&quot; /&gt;.">소스 <see cref="T:System.Net.EndPoint" />입니다.</summary>
    </member>
    <member name="F:System.Net.Sockets.SocketReceiveMessageFromResult.SocketFlags">
      <summary vsli:raw="A bitwise combination of the &lt;see cref=&quot;T:System.Net.Sockets.SocketFlags&quot; /&gt; values for the received packet.">받은 패킷에 대한 <see cref="T:System.Net.Sockets.SocketFlags" /> 값의 비트 조합입니다.</summary>
    </member>
    <member name="T:System.Net.Sockets.SocketShutdown">
      <summary vsli:raw="Defines constants that are used by the &lt;see cref=&quot;M:System.Net.Sockets.Socket.Shutdown(System.Net.Sockets.SocketShutdown)&quot; /&gt; method.">
        <see cref="M:System.Net.Sockets.Socket.Shutdown(System.Net.Sockets.SocketShutdown)" /> 메서드에서 사용하는 상수를 정의합니다.</summary>
    </member>
    <member name="F:System.Net.Sockets.SocketShutdown.Both">
      <summary vsli:raw="Disables a &lt;see cref=&quot;T:System.Net.Sockets.Socket&quot; /&gt; for both sending and receiving. This field is constant.">
        <see cref="T:System.Net.Sockets.Socket" />을 보내기와 받기 모두에 사용할 수 없도록 설정합니다. 이 필드는 상수입니다.</summary>
    </member>
    <member name="F:System.Net.Sockets.SocketShutdown.Receive">
      <summary vsli:raw="Disables a &lt;see cref=&quot;T:System.Net.Sockets.Socket&quot; /&gt; for receiving. This field is constant.">
        <see cref="T:System.Net.Sockets.Socket" />을 받기에 사용할 수 없도록 설정합니다. 이 필드는 상수입니다.</summary>
    </member>
    <member name="F:System.Net.Sockets.SocketShutdown.Send">
      <summary vsli:raw="Disables a &lt;see cref=&quot;T:System.Net.Sockets.Socket&quot; /&gt; for sending. This field is constant.">
        <see cref="T:System.Net.Sockets.Socket" />을 보내기에 사용할 수 없도록 설정합니다. 이 필드는 상수입니다.</summary>
    </member>
    <member name="T:System.Net.Sockets.SocketTaskExtensions">
      <summary vsli:raw="This class contains extension methods to the &lt;see cref=&quot;T:System.Net.Sockets.Socket&quot; /&gt; class.">이 클래스에는 <see cref="T:System.Net.Sockets.Socket" /> 클래스에 대한 확장 메서드가 포함됩니다.</summary>
    </member>
    <member name="M:System.Net.Sockets.SocketTaskExtensions.AcceptAsync(System.Net.Sockets.Socket)">
      <summary vsli:raw="Performs an asynchronous operation on to accept an incoming connection attempt on the socket.">소켓에서 들어오는 연결 시도를 허용하도록 비동기 작업을 수행합니다.</summary>
      <param name="socket" vsli:raw="The socket that is listening for connections.">연결을 수신하는 소켓입니다.</param>
      <returns vsli:raw="An asynchronous task that completes with a &lt;see cref=&quot;T:System.Net.Sockets.Socket&quot; /&gt; to handle communication with the remote host.">원격 호스트와의 통신을 처리하기 위해 <see cref="T:System.Net.Sockets.Socket" />에서 완료되는 비동기 작업입니다.</returns>
    </member>
    <member name="M:System.Net.Sockets.SocketTaskExtensions.AcceptAsync(System.Net.Sockets.Socket,System.Net.Sockets.Socket)">
      <summary vsli:raw="Performs an asynchronous operation on to accept an incoming connection attempt on the socket.">소켓에서 들어오는 연결 시도를 허용하도록 비동기 작업을 수행합니다.</summary>
      <param name="socket" vsli:raw="The socket that is listening for incoming connections.">들어오는 연결을 수신하는 소켓입니다.</param>
      <param name="acceptSocket" vsli:raw="The accepted &lt;see cref=&quot;T:System.Net.Sockets.Socket&quot; /&gt; object. This value may be &lt;see langword=&quot;null&quot; /&gt;.">허용되는 <see cref="T:System.Net.Sockets.Socket" /> 개체입니다. 이 값은 <see langword="null" />일 수 있습니다.</param>
      <returns vsli:raw="An asynchronous task that completes with a &lt;see cref=&quot;T:System.Net.Sockets.Socket&quot; /&gt; to handle communication with the remote host.">원격 호스트와의 통신을 처리하기 위해 <see cref="T:System.Net.Sockets.Socket" />에서 완료되는 비동기 작업입니다.</returns>
    </member>
    <member name="M:System.Net.Sockets.SocketTaskExtensions.ConnectAsync(System.Net.Sockets.Socket,System.Net.EndPoint)">
      <summary vsli:raw="Establishes a connection to a remote host.">원격 호스트에 대한 연결을 설정합니다.</summary>
      <param name="socket" vsli:raw="The socket that is used for establishing a connection.">연결 설정에 사용되는 소켓입니다.</param>
      <param name="remoteEP" vsli:raw="An EndPoint that represents the remote device.">원격 디바이스를 나타내는 엔드포인트입니다.</param>
      <returns vsli:raw="An asynchronous Task.">비동기 작업입니다.</returns>
    </member>
    <member name="M:System.Net.Sockets.SocketTaskExtensions.ConnectAsync(System.Net.Sockets.Socket,System.Net.EndPoint,System.Threading.CancellationToken)">
      <summary vsli:raw="Establishes a connection to a remote host.">원격 호스트에 대한 연결을 설정합니다.</summary>
      <param name="socket" vsli:raw="The socket that is used for establishing a connection.">연결 설정에 사용되는 소켓입니다.</param>
      <param name="remoteEP" vsli:raw="An EndPoint that represents the remote device.">원격 디바이스를 나타내는 엔드포인트입니다.</param>
      <param name="cancellationToken" vsli:raw="A cancellation token that can be used to signal the asynchronous operation should be canceled.">비동기 작업에 신호를 보내는 데 사용될 수 있는 취소 토큰은 취소되어야 합니다.</param>
      <returns vsli:raw="A task that represents the asynchronous connection operation.">비동기 연결 작업(operation)을 나타내는 작업(task)입니다.</returns>
    </member>
    <member name="M:System.Net.Sockets.SocketTaskExtensions.ConnectAsync(System.Net.Sockets.Socket,System.Net.IPAddress,System.Int32)">
      <summary vsli:raw="Establishes a connection to a remote host. The host is specified by an IP address and a port number.">원격 호스트에 대한 연결을 설정합니다. 호스트는 IP 주소와 포트 번호로 지정됩니다.</summary>
      <param name="socket" vsli:raw="The socket to perform the connect operation on.">연결 작업을 수행할 소켓입니다.</param>
      <param name="address" vsli:raw="The IP address of the remote host.">원격 호스트의 IP 주소입니다.</param>
      <param name="port" vsli:raw="The port number of the remote host.">원격 호스트의 포트 번호입니다.</param>
      <returns vsli:raw="A task that represents an asynchronous connection operation.">비동기 연결 작업(operation)을 나타내는 작업(task)입니다.</returns>
    </member>
    <member name="M:System.Net.Sockets.SocketTaskExtensions.ConnectAsync(System.Net.Sockets.Socket,System.Net.IPAddress,System.Int32,System.Threading.CancellationToken)">
      <summary vsli:raw="Establishes a connection to a remote host, which is specified by an IP address and a port number.">IP 주소 및 포트 번호로 지정되는 원격 호스트에 대한 연결을 설정합니다.</summary>
      <param name="socket" vsli:raw="The socket to perform the connect operation on.">연결 작업을 수행할 소켓입니다.</param>
      <param name="address" vsli:raw="The IP address of the remote host.">원격 호스트의 IP 주소입니다.</param>
      <param name="port" vsli:raw="The port number of the remote host.">원격 호스트의 포트 번호입니다.</param>
      <param name="cancellationToken" vsli:raw="A cancellation token that can be used to signal the asynchronous operation should be canceled.">비동기 작업에 신호를 보내는 데 사용될 수 있는 취소 토큰은 취소되어야 합니다.</param>
      <returns vsli:raw="A task that represents the asynchronous connection operation.">비동기 연결 작업(operation)을 나타내는 작업(task)입니다.</returns>
    </member>
    <member name="M:System.Net.Sockets.SocketTaskExtensions.ConnectAsync(System.Net.Sockets.Socket,System.Net.IPAddress[],System.Int32)">
      <summary vsli:raw="Establishes a connection to a remote host. The host is specified by an array of IP addresses and a port number.">원격 호스트에 대한 연결을 설정합니다. 호스트는 IP 주소의 배열과 포트 번호로 지정됩니다.</summary>
      <param name="socket" vsli:raw="The socket that the connect operation is performed on.">연결 작업이 수행되는 소켓입니다.</param>
      <param name="addresses" vsli:raw="The IP addresses of the remote host.">원격 호스트의 IP 주소입니다.</param>
      <param name="port" vsli:raw="The port number of the remote host.">원격 호스트의 포트 번호입니다.</param>
      <returns vsli:raw="A task that represents the asynchronous connect operation.">비동기 연결 작업(operation)을 나타내는 작업(task)입니다.</returns>
    </member>
    <member name="M:System.Net.Sockets.SocketTaskExtensions.ConnectAsync(System.Net.Sockets.Socket,System.Net.IPAddress[],System.Int32,System.Threading.CancellationToken)">
      <summary vsli:raw="Establishes a connection to a remote host, which is specified by an array of IP addresses and a port number.">IP 주소 배열 및 포트 번호로 지정되는 원격 호스트에 대한 연결을 설정합니다.</summary>
      <param name="socket" vsli:raw="The socket that the connect operation is performed on.">연결 작업이 수행되는 소켓입니다.</param>
      <param name="addresses" vsli:raw="The IP addresses of the remote host.">원격 호스트의 IP 주소입니다.</param>
      <param name="port" vsli:raw="The port number of the remote host.">원격 호스트의 포트 번호입니다.</param>
      <param name="cancellationToken" vsli:raw="A cancellation token that can be used to signal the asynchronous operation should be canceled.">비동기 작업에 신호를 보내는 데 사용될 수 있는 취소 토큰은 취소되어야 합니다.</param>
      <returns vsli:raw="A task that represents the asynchronous connection operation.">비동기 연결 작업(operation)을 나타내는 작업(task)입니다.</returns>
    </member>
    <member name="M:System.Net.Sockets.SocketTaskExtensions.ConnectAsync(System.Net.Sockets.Socket,System.String,System.Int32)">
      <summary vsli:raw="Establishes a connection to a remote host. The host is specified by a host name and a port number.">원격 호스트에 대한 연결을 설정합니다. 호스트는 호스트 이름과 포트 번호로 지정됩니다.</summary>
      <param name="socket" vsli:raw="The socket to perform the connect operation on.">연결 작업을 수행할 소켓입니다.</param>
      <param name="host" vsli:raw="The name of the remote host.">원격 호스트의 이름입니다.</param>
      <param name="port" vsli:raw="The port number of the remote host.">원격 호스트의 포트 번호입니다.</param>
      <returns vsli:raw="An asynchronous task.">비동기 작업입니다.</returns>
    </member>
    <member name="M:System.Net.Sockets.SocketTaskExtensions.ConnectAsync(System.Net.Sockets.Socket,System.String,System.Int32,System.Threading.CancellationToken)">
      <summary vsli:raw="Establishes a connection to a remote host, which is specified by a host name and a port number.">호스트 이름 및 포트 번호로 지정되는 원격 호스트에 대한 연결을 설정합니다.</summary>
      <param name="socket" vsli:raw="The socket to perform the connect operation on.">연결 작업을 수행할 소켓입니다.</param>
      <param name="host" vsli:raw="The name of the remote host.">원격 호스트의 이름입니다.</param>
      <param name="port" vsli:raw="The port number of the remote host.">원격 호스트의 포트 번호입니다.</param>
      <param name="cancellationToken" vsli:raw="A cancellation token that can be used to signal the asynchronous operation should be canceled.">비동기 작업에 신호를 보내는 데 사용될 수 있는 취소 토큰은 취소되어야 합니다.</param>
      <returns vsli:raw="A task that represents an asynchronous connection operation.">비동기 연결 작업(operation)을 나타내는 작업(task)입니다.</returns>
    </member>
    <member name="M:System.Net.Sockets.SocketTaskExtensions.ReceiveAsync(System.Net.Sockets.Socket,System.ArraySegment{System.Byte},System.Net.Sockets.SocketFlags)">
      <summary vsli:raw="Receives data from a connected socket.">연결된 소켓에서 데이터를 수신합니다.</summary>
      <param name="socket" vsli:raw="The socket to perform the receive operation on.">수신 작업을 수행할 소켓입니다.</param>
      <param name="buffer" vsli:raw="An array that is the storage location for the received data.">수신된 데이터의 스토리지 위치에 해당하는 배열입니다.</param>
      <param name="socketFlags" vsli:raw="A bitwise combination of the &lt;see cref=&quot;T:System.Net.Sockets.SocketFlags&quot; /&gt; values.">
        <see cref="T:System.Net.Sockets.SocketFlags" /> 값의 비트 조합입니다.</param>
      <returns vsli:raw="A task that represents the asynchronous receive operation. The value of the &lt;paramref name=&quot;TResult&quot; /&gt; parameter contains the number of bytes received.">비동기 수신 작업을 나타내는 작업입니다. <paramref name="TResult" /> 매개 변수의 값은 수신된 바이트 수를 포함합니다.</returns>
    </member>
    <member name="M:System.Net.Sockets.SocketTaskExtensions.ReceiveAsync(System.Net.Sockets.Socket,System.Collections.Generic.IList{System.ArraySegment{System.Byte}},System.Net.Sockets.SocketFlags)">
      <summary vsli:raw="Receives data from a connected socket.">연결된 소켓에서 데이터를 수신합니다.</summary>
      <param name="socket" vsli:raw="The socket to perform the receive operation on.">수신 작업을 수행할 소켓입니다.</param>
      <param name="buffers" vsli:raw="An array that is the storage location for the received data.">수신된 데이터의 스토리지 위치에 해당하는 배열입니다.</param>
      <param name="socketFlags" vsli:raw="A bitwise combination of the &lt;see cref=&quot;T:System.Net.Sockets.SocketFlags&quot; /&gt; values.">
        <see cref="T:System.Net.Sockets.SocketFlags" /> 값의 비트 조합입니다.</param>
      <returns vsli:raw="A task that represents the asynchronous receive operation. The value of the &lt;paramref name=&quot;TResult&quot; /&gt; parameter contains the number of bytes received.">비동기 수신 작업을 나타내는 작업입니다. <paramref name="TResult" /> 매개 변수의 값은 수신된 바이트 수를 포함합니다.</returns>
    </member>
    <member name="M:System.Net.Sockets.SocketTaskExtensions.ReceiveAsync(System.Net.Sockets.Socket,System.Memory{System.Byte},System.Net.Sockets.SocketFlags,System.Threading.CancellationToken)">
      <summary vsli:raw="Receives data from a connected socket.">연결된 소켓에서 데이터를 수신합니다.</summary>
      <param name="socket" vsli:raw="The socket to perform the receive operation on.">수신 작업을 수행할 소켓입니다.</param>
      <param name="buffer" vsli:raw="A region of memory that is the storage location for the received data.">받는 데이터에 대한 스토리지 위치인 메모리의 영역입니다.</param>
      <param name="socketFlags" vsli:raw="A bitwise combination of the &lt;see cref=&quot;T:System.Net.Sockets.SocketFlags&quot; /&gt; values.">
        <see cref="T:System.Net.Sockets.SocketFlags" /> 값의 비트 조합입니다.</param>
      <param name="cancellationToken" vsli:raw="A cancellation token that can be used to signal the asynchronous operation should be canceled.">비동기 작업에 신호를 보내는 데 사용될 수 있는 취소 토큰은 취소되어야 합니다.</param>
      <returns vsli:raw="A task that completes with the number of bytes received, or 0 if the end of the stream has been reached.">받은 바이트 수로 완료되는 작업이거나, 스트림의 끝에 도달한 경우 0입니다.</returns>
    </member>
    <member name="M:System.Net.Sockets.SocketTaskExtensions.ReceiveFromAsync(System.Net.Sockets.Socket,System.ArraySegment{System.Byte},System.Net.Sockets.SocketFlags,System.Net.EndPoint)">
      <summary vsli:raw="Receives data from a specified network device.">지정한 네트워크 디바이스에서 데이터를 수신합니다.</summary>
      <param name="socket" vsli:raw="The socket to perform the ReceiveFrom operation on.">ReceiveFrom 작업을 수행할 소켓입니다.</param>
      <param name="buffer" vsli:raw="An array of type Byte that is the storage location for the received data.">수신된 데이터의 스토리지 위치에 해당하는 Byte 형식의 배열입니다.</param>
      <param name="socketFlags" vsli:raw="A bitwise combination of the &lt;see cref=&quot;T:System.Net.Sockets.SocketFlags&quot; /&gt; values.">
        <see cref="T:System.Net.Sockets.SocketFlags" /> 값의 비트 조합입니다.</param>
      <param name="remoteEndPoint" vsli:raw="An EndPoint that represents the source of the data.">데이터 원본을 나타내는 엔드포인트입니다.</param>
      <returns vsli:raw="An asynchronous Task that completes with a SocketReceiveFromResult struct.">SocketReceiveFromResult 구조체로 완료되는 비동기 작업입니다.</returns>
    </member>
    <member name="M:System.Net.Sockets.SocketTaskExtensions.ReceiveMessageFromAsync(System.Net.Sockets.Socket,System.ArraySegment{System.Byte},System.Net.Sockets.SocketFlags,System.Net.EndPoint)">
      <summary vsli:raw="Receives the specified number of bytes of data into the specified location of the data buffer, using the specified &lt;see cref=&quot;T:System.Net.Sockets.SocketFlags&quot; /&gt;, and stores the endpoint and packet information.">지정된 <see cref="T:System.Net.Sockets.SocketFlags" />를 사용하여 데이터 버퍼의 지정된 위치에 지정된 바이트 수의 데이터를 수신하고 엔드포인트 및 패킷 정보를 저장합니다.</summary>
      <param name="socket" vsli:raw="The socket to perform the operation on.">작업을 수행할 소켓입니다.</param>
      <param name="buffer" vsli:raw="An array that is the storage location for received data.">수신된 데이터의 스토리지 위치에 해당하는 배열입니다.</param>
      <param name="socketFlags" vsli:raw="A bitwise combination of the &lt;see cref=&quot;T:System.Net.Sockets.SocketFlags&quot; /&gt; values.">
        <see cref="T:System.Net.Sockets.SocketFlags" /> 값의 비트 조합입니다.</param>
      <param name="remoteEndPoint" vsli:raw="An &lt;see cref=&quot;T:System.Net.EndPoint&quot; /&gt;, that represents the remote server.">원격 서버를 나타내는 <see cref="T:System.Net.EndPoint" />입니다.</param>
      <returns vsli:raw="An asynchronous Task that completes with a &lt;see cref=&quot;T:System.Net.Sockets.SocketReceiveMessageFromResult&quot; /&gt; struct.">
        <see cref="T:System.Net.Sockets.SocketReceiveMessageFromResult" /> 구조체로 완료되는 비동기 작업입니다.</returns>
    </member>
    <member name="M:System.Net.Sockets.SocketTaskExtensions.SendAsync(System.Net.Sockets.Socket,System.ArraySegment{System.Byte},System.Net.Sockets.SocketFlags)">
      <summary vsli:raw="Sends data to a connected socket.">데이터를 연결된 소켓으로 전송합니다.</summary>
      <param name="socket" vsli:raw="The socket to perform the operation on.">작업을 수행할 소켓입니다.</param>
      <param name="buffer" vsli:raw="An array of type Byte that contains the data to send.">전송할 데이터를 포함하는 Byte 형식의 배열입니다.</param>
      <param name="socketFlags" vsli:raw="A bitwise combination of the &lt;see cref=&quot;T:System.Net.Sockets.SocketFlags&quot; /&gt; values.">
        <see cref="T:System.Net.Sockets.SocketFlags" /> 값의 비트 조합입니다.</param>
      <returns vsli:raw="An asynchronous task that completes with number of bytes sent to the socket if the operation was successful. Otherwise, the task will complete with an invalid socket error.">작업에 성공하면 소켓에 보낸 바이트 수로 완료되는 비동기 작업입니다. 작업에 실패하면 비동기 작업은 잘못된 소켓 오류가 발생하며 완료됩니다.</returns>
    </member>
    <member name="M:System.Net.Sockets.SocketTaskExtensions.SendAsync(System.Net.Sockets.Socket,System.Collections.Generic.IList{System.ArraySegment{System.Byte}},System.Net.Sockets.SocketFlags)">
      <summary vsli:raw="Sends data to a connected socket.">데이터를 연결된 소켓으로 전송합니다.</summary>
      <param name="socket" vsli:raw="The socket to perform the operation on.">작업을 수행할 소켓입니다.</param>
      <param name="buffers" vsli:raw="An array that contains the data to send.">전송할 데이터가 들어 있는 배열입니다.</param>
      <param name="socketFlags" vsli:raw="A bitwise combination of the &lt;see cref=&quot;T:System.Net.Sockets.SocketFlags&quot; /&gt; values.">
        <see cref="T:System.Net.Sockets.SocketFlags" /> 값의 비트 조합입니다.</param>
      <returns vsli:raw="An asynchronous task that completes with number of bytes sent to the socket if the operation was successful. Otherwise, the task will complete with an invalid socket error.">작업에 성공하면 소켓에 보낸 바이트 수로 완료되는 비동기 작업입니다. 작업에 실패하면 비동기 작업은 잘못된 소켓 오류가 발생하며 완료됩니다.</returns>
    </member>
    <member name="M:System.Net.Sockets.SocketTaskExtensions.SendAsync(System.Net.Sockets.Socket,System.ReadOnlyMemory{System.Byte},System.Net.Sockets.SocketFlags,System.Threading.CancellationToken)">
      <summary vsli:raw="Sends data to a connected socket.">데이터를 연결된 소켓으로 전송합니다.</summary>
      <param name="socket" vsli:raw="The socket to perform the operation on.">작업을 수행할 소켓입니다.</param>
      <param name="buffer" vsli:raw="A region of memory that contains the data to send.">전송할 데이터를 포함하는 메모리 영역입니다.</param>
      <param name="socketFlags" vsli:raw="A bitwise combination of the &lt;see cref=&quot;T:System.Net.Sockets.SocketFlags&quot; /&gt; values.">
        <see cref="T:System.Net.Sockets.SocketFlags" /> 값의 비트 조합입니다.</param>
      <param name="cancellationToken" vsli:raw="A cancellation token that can be used to signal the asynchronous operation should be canceled.">비동기 작업에 신호를 보내는 데 사용될 수 있는 취소 토큰은 취소되어야 합니다.</param>
      <returns vsli:raw="A task that completes with number of bytes sent to the socket if the operation was successful. Otherwise, the task will complete with an invalid socket error.">작업에 성공하면 소켓에 보낸 바이트 수로 완료되는 작업입니다. 작업에 실패하면 비동기 작업은 잘못된 소켓 오류가 발생하며 완료됩니다.</returns>
    </member>
    <member name="M:System.Net.Sockets.SocketTaskExtensions.SendToAsync(System.Net.Sockets.Socket,System.ArraySegment{System.Byte},System.Net.Sockets.SocketFlags,System.Net.EndPoint)">
      <summary vsli:raw="Sends data asynchronously to a specific remote host.">특정 원격 호스트에 데이터를 비동기적으로 보냅니다.</summary>
      <param name="socket" vsli:raw="The socket to perform the operation on.">작업을 수행할 소켓입니다.</param>
      <param name="buffer" vsli:raw="An array that contains the data to send.">전송할 데이터가 들어 있는 배열입니다.</param>
      <param name="socketFlags" vsli:raw="A bitwise combination of the &lt;see cref=&quot;T:System.Net.Sockets.SocketFlags&quot; /&gt; values.">
        <see cref="T:System.Net.Sockets.SocketFlags" /> 값의 비트 조합입니다.</param>
      <param name="remoteEP" vsli:raw="An &lt;see cref=&quot;T:System.Net.EndPoint&quot; /&gt; that represents the remote device.">원격 디바이스를 나타내는 <see cref="T:System.Net.EndPoint" />입니다.</param>
      <returns vsli:raw="An asynchronous task that completes with number of bytes sent if the operation was successful. Otherwise, the task will complete with an invalid socket error.">작업에 성공한 경우 보낸 바이트 수로 완료되는 비동기 작업입니다. 작업에 실패하면 비동기 작업은 잘못된 소켓 오류가 발생하며 완료됩니다.</returns>
    </member>
    <member name="T:System.Net.Sockets.SocketType">
      <summary vsli:raw="Specifies the type of socket that an instance of the &lt;see cref=&quot;T:System.Net.Sockets.Socket&quot; /&gt; class represents.">
        <see cref="T:System.Net.Sockets.Socket" /> 클래스의 인스턴스가 나타내는 소켓의 종류를 지정합니다.</summary>
    </member>
    <member name="F:System.Net.Sockets.SocketType.Dgram">
      <summary vsli:raw="Supports datagrams, which are connectionless, unreliable messages of a fixed (typically small) maximum length. Messages might be lost or duplicated and might arrive out of order. A &lt;see cref=&quot;T:System.Net.Sockets.Socket&quot; /&gt; of type &lt;see cref=&quot;F:System.Net.Sockets.SocketType.Dgram&quot; /&gt; requires no connection prior to sending and receiving data, and can communicate with multiple peers. &lt;see cref=&quot;F:System.Net.Sockets.SocketType.Dgram&quot; /&gt; uses the Datagram Protocol (&lt;see langword=&quot;ProtocolType&quot; /&gt;.&lt;see cref=&quot;F:System.Net.Sockets.ProtocolType.Udp&quot; /&gt;) and the &lt;see langword=&quot;AddressFamily&quot; /&gt;.&lt;see cref=&quot;F:System.Net.Sockets.AddressFamily.InterNetwork&quot; /&gt; address family.">고정된 최대 길이(대개 작음)의 신뢰할 수 없고 연결 없는 메시지인 데이터그램을 지원합니다. 메시지가 손실되거나 중복될 수 있으며 메시지 순서가 잘못될 수도 있습니다. <see cref="T:System.Net.Sockets.Socket" /> 종류의 <see cref="F:System.Net.Sockets.SocketType.Dgram" />은 데이터를 보내고 받기 전에 연결하지 않고도 여러 피어와 통신할 수 있습니다. <see cref="F:System.Net.Sockets.SocketType.Dgram" />은 Datagram Protocol(<see langword="ProtocolType" />.<see cref="F:System.Net.Sockets.ProtocolType.Udp" />)과 <see langword="AddressFamily" />.<see cref="F:System.Net.Sockets.AddressFamily.InterNetwork" /> 주소 패밀리를 사용합니다.</summary>
    </member>
    <member name="F:System.Net.Sockets.SocketType.Raw">
      <summary vsli:raw="Supports access to the underlying transport protocol. Using &lt;see cref=&quot;F:System.Net.Sockets.SocketType.Raw&quot; /&gt;, you can communicate using protocols like Internet Control Message Protocol (&lt;see langword=&quot;ProtocolType&quot; /&gt;.&lt;see cref=&quot;F:System.Net.Sockets.ProtocolType.Icmp&quot; /&gt;) and Internet Group Management Protocol (&lt;see langword=&quot;ProtocolType&quot; /&gt;.&lt;see cref=&quot;F:System.Net.Sockets.ProtocolType.Igmp&quot; /&gt;). Your application must provide a complete IP header when sending. Received datagrams return with the IP header and options intact.">내부 전송 프로토콜에 대한 액세스를 지원합니다. <see cref="F:System.Net.Sockets.SocketType.Raw" />를 사용하면 Internet Control Message Protocol(<see langword="ProtocolType" />.<see cref="F:System.Net.Sockets.ProtocolType.Icmp" />) 및 Internet Group Management Protocol(<see langword="ProtocolType" />.<see cref="F:System.Net.Sockets.ProtocolType.Igmp" />) 같은 프로토콜을 사용하여 통신할 수 있습니다. 애플리케이션은 전송 시 전체 IP 헤더를 제공해야 합니다. 받은 데이터그램은 변경되지 않은 IP 헤더 및 옵션과 함께 반환됩니다.</summary>
    </member>
    <member name="F:System.Net.Sockets.SocketType.Rdm">
      <summary vsli:raw="Supports connectionless, message-oriented, reliably delivered messages, and preserves message boundaries in data. Rdm (Reliably Delivered Messages) messages arrive unduplicated and in order. Furthermore, the sender is notified if messages are lost. If you initialize a &lt;see cref=&quot;T:System.Net.Sockets.Socket&quot; /&gt; using &lt;see cref=&quot;F:System.Net.Sockets.SocketType.Rdm&quot; /&gt;, you do not require a remote host connection before sending and receiving data. With &lt;see cref=&quot;F:System.Net.Sockets.SocketType.Rdm&quot; /&gt;, you can communicate with multiple peers.">연결 없고, 메시지 지향적이고, 신뢰성 있게 배달되는 메시지를 지원하고, 데이터 내의 메시지 경계를 유지합니다. RDM(Reliably Delivered Message) 메시지는 복제되지 않은 상태로 순서에 따라 도착합니다. 또한 메시지가 손실되면 보낸 사람에게 알립니다. <see cref="F:System.Net.Sockets.SocketType.Rdm" />을 사용하여 <see cref="T:System.Net.Sockets.Socket" />을 초기화하면 데이터를 보내고 받기 전에 원격 호스트에 연결하지 않아도 됩니다. 또한 <see cref="F:System.Net.Sockets.SocketType.Rdm" />을 사용하면 여러 피어와 통신할 수 있습니다.</summary>
    </member>
    <member name="F:System.Net.Sockets.SocketType.Seqpacket">
      <summary vsli:raw="Provides connection-oriented and reliable two-way transfer of ordered byte streams across a network. &lt;see cref=&quot;F:System.Net.Sockets.SocketType.Seqpacket&quot; /&gt; does not duplicate data, and it preserves boundaries within the data stream. A &lt;see cref=&quot;T:System.Net.Sockets.Socket&quot; /&gt; of type &lt;see cref=&quot;F:System.Net.Sockets.SocketType.Seqpacket&quot; /&gt; communicates with a single peer and requires a remote host connection before communication can begin.">네트워크를 통해 연결 지향적이고, 양방향으로 신뢰성 있게 전송되며, 순서가 지정된 바이트 스트림을 제공합니다. <see cref="F:System.Net.Sockets.SocketType.Seqpacket" />은 데이터를 중복하지 않고 데이터 스트림 내의 경계를 유지합니다. <see cref="F:System.Net.Sockets.SocketType.Seqpacket" /> 종류의 <see cref="T:System.Net.Sockets.Socket" />은 단일 피어와 통신하며 통신을 시작하기 전에 원격 호스트에 연결해야 합니다.</summary>
    </member>
    <member name="F:System.Net.Sockets.SocketType.Stream">
      <summary vsli:raw="Supports reliable, two-way, connection-based byte streams without the duplication of data and without preservation of boundaries. A &lt;see cref=&quot;T:System.Net.Sockets.Socket&quot; /&gt; of this type communicates with a single peer and requires a remote host connection before communication can begin. &lt;see cref=&quot;F:System.Net.Sockets.SocketType.Stream&quot; /&gt; uses the Transmission Control Protocol (&lt;see langword=&quot;ProtocolType&quot; /&gt;.&lt;see cref=&quot;F:System.Net.Sockets.ProtocolType.Tcp&quot; /&gt;) and the &lt;see langword=&quot;AddressFamily&quot; /&gt;.&lt;see cref=&quot;F:System.Net.Sockets.AddressFamily.InterNetwork&quot; /&gt; address family.">데이터 중복이나 경계 유지 없이 신뢰성 있는 양방향 연결 기반의 바이트 스트림을 지원합니다. 이 종류의 <see cref="T:System.Net.Sockets.Socket" />은 단일 피어와 통신하며 이 소켓을 사용할 경우 통신을 시작하기 전에 원격 호스트에 연결해야 합니다. <see cref="F:System.Net.Sockets.SocketType.Stream" />은 Transmission Control Protocol(<see langword="ProtocolType" />.<see cref="F:System.Net.Sockets.ProtocolType.Tcp" />) 및 <see langword="AddressFamily" />.<see cref="F:System.Net.Sockets.AddressFamily.InterNetwork" /> 주소 패밀리를 사용합니다.</summary>
    </member>
    <member name="F:System.Net.Sockets.SocketType.Unknown">
      <summary vsli:raw="Specifies an unknown &lt;see cref=&quot;T:System.Net.Sockets.Socket&quot; /&gt; type.">알 수 없는 <see cref="T:System.Net.Sockets.Socket" /> 종류를 지정합니다.</summary>
    </member>
    <member name="T:System.Net.Sockets.TcpClient">
      <summary vsli:raw="Provides client connections for TCP network services.">TCP 네트워크 서비스에 대한 클라이언트 연결을 제공합니다.</summary>
    </member>
    <member name="M:System.Net.Sockets.TcpClient.#ctor">
      <summary vsli:raw="Initializes a new instance of the &lt;see cref=&quot;T:System.Net.Sockets.TcpClient&quot; /&gt; class.">
        <see cref="T:System.Net.Sockets.TcpClient" /> 클래스의 새 인스턴스를 초기화합니다.</summary>
    </member>
    <member name="M:System.Net.Sockets.TcpClient.#ctor(System.Net.IPEndPoint)">
      <summary vsli:raw="Initializes a new instance of the &lt;see cref=&quot;T:System.Net.Sockets.TcpClient&quot; /&gt; class and binds it to the specified local endpoint.">
        <see cref="T:System.Net.Sockets.TcpClient" /> 클래스의 새 인스턴스를 초기화하고 해당 인스턴스를 지정된 로컬 엔드포인트에 바인딩합니다.</summary>
      <param name="localEP" vsli:raw="The &lt;see cref=&quot;T:System.Net.IPEndPoint&quot; /&gt; to which you bind the TCP &lt;see cref=&quot;T:System.Net.Sockets.Socket&quot; /&gt;.">TCP <see cref="T:System.Net.Sockets.Socket" />을 바인딩할 <see cref="T:System.Net.IPEndPoint" />입니다.</param>
      <exception cref="T:System.ArgumentNullException" vsli:raw="The  &lt;paramref name=&quot;localEP&quot; /&gt; parameter is &lt;see langword=&quot;null&quot; /&gt;.">
        <paramref name="localEP" /> 매개 변수가 <see langword="null" />입니다.</exception>
    </member>
    <member name="M:System.Net.Sockets.TcpClient.#ctor(System.Net.Sockets.AddressFamily)">
      <summary vsli:raw="Initializes a new instance of the &lt;see cref=&quot;T:System.Net.Sockets.TcpClient&quot; /&gt; class with the specified family.">지정된 패밀리를 사용하여 <see cref="T:System.Net.Sockets.TcpClient" /> 클래스의 새 인스턴스를 초기화합니다.</summary>
      <param name="family" vsli:raw="The &lt;see cref=&quot;P:System.Net.IPAddress.AddressFamily&quot; /&gt; of the IP protocol.">IP 프로토콜의 <see cref="P:System.Net.IPAddress.AddressFamily" />입니다.</param>
      <exception cref="T:System.ArgumentException" vsli:raw="The &lt;paramref name=&quot;family&quot; /&gt; parameter is not equal to AddressFamily.InterNetwork&#xA;&#xA; -or-&#xA;&#xA; The &lt;paramref name=&quot;family&quot; /&gt; parameter is not equal to AddressFamily.InterNetworkV6">
        <paramref name="family" /> 매개 변수가 AddressFamily.InterNetwork와 같지 않은 경우 
또는 
<paramref name="family" /> 매개 변수가 AddressFamily.InterNetworkV6와 같지 않은 경우</exception>
    </member>
    <member name="M:System.Net.Sockets.TcpClient.#ctor(System.String,System.Int32)">
      <summary vsli:raw="Initializes a new instance of the &lt;see cref=&quot;T:System.Net.Sockets.TcpClient&quot; /&gt; class and connects to the specified port on the specified host.">
        <see cref="T:System.Net.Sockets.TcpClient" /> 클래스의 새 인스턴스를 초기화하고 지정된 호스트의 지정된 포트에 연결합니다.</summary>
      <param name="hostname" vsli:raw="The DNS name of the remote host to which you intend to connect.">연결할 원격 호스트의 DNS 이름입니다.</param>
      <param name="port" vsli:raw="The port number of the remote host to which you intend to connect.">연결한 원격 호스트의 포트 번호입니다.</param>
      <exception cref="T:System.ArgumentNullException" vsli:raw="The &lt;paramref name=&quot;hostname&quot; /&gt; parameter is &lt;see langword=&quot;null&quot; /&gt;.">
        <paramref name="hostname" /> 매개 변수가 <see langword="null" />인 경우</exception>
      <exception cref="T:System.ArgumentOutOfRangeException" vsli:raw="The &lt;paramref name=&quot;port&quot; /&gt; parameter is not between &lt;see cref=&quot;F:System.Net.IPEndPoint.MinPort&quot; /&gt; and &lt;see cref=&quot;F:System.Net.IPEndPoint.MaxPort&quot; /&gt;.">
        <paramref name="port" /> 매개 변수가 <see cref="F:System.Net.IPEndPoint.MinPort" />와 <see cref="F:System.Net.IPEndPoint.MaxPort" /> 사이에 없습니다.</exception>
      <exception cref="T:System.Net.Sockets.SocketException" vsli:raw="An error occurred when accessing the socket.">소켓에 액세스할 때 오류가 발생했습니다.</exception>
    </member>
    <member name="M:System.Net.Sockets.TcpClient.BeginConnect(System.Net.IPAddress,System.Int32,System.AsyncCallback,System.Object)">
      <summary vsli:raw="Begins an asynchronous request for a remote host connection. The remote host is specified by an &lt;see cref=&quot;T:System.Net.IPAddress&quot; /&gt; and a port number (&lt;see cref=&quot;T:System.Int32&quot; /&gt;).">원격 호스트 연결에 대한 비동기 요청을 시작합니다. 원격 호스트는 <see cref="T:System.Net.IPAddress" />와 포트 번호(<see cref="T:System.Int32" />)로 지정됩니다.</summary>
      <param name="address" vsli:raw="The &lt;see cref=&quot;T:System.Net.IPAddress&quot; /&gt; of the remote host.">원격 호스트의 <see cref="T:System.Net.IPAddress" />입니다.</param>
      <param name="port" vsli:raw="The port number of the remote host.">원격 호스트의 포트 번호입니다.</param>
      <param name="requestCallback" vsli:raw="An &lt;see cref=&quot;T:System.AsyncCallback&quot; /&gt; delegate that references the method to invoke when the operation is complete.">작업이 완료되었을 때 호출할 메서드를 참조하는 <see cref="T:System.AsyncCallback" /> 대리자입니다.</param>
      <param name="state" vsli:raw="A user-defined object that contains information about the connect operation. This object is passed to the &lt;paramref name=&quot;requestCallback&quot; /&gt; delegate when the operation is complete.">연결 작업에 대한 정보가 들어 있는 사용자 정의 개체입니다. 이 개체는 작업이 완료되면 <paramref name="requestCallback" /> 대리자에게 전달됩니다.</param>
      <exception cref="T:System.ArgumentNullException" vsli:raw="The &lt;paramref name=&quot;address&quot; /&gt; parameter is &lt;see langword=&quot;null&quot; /&gt;.">
        <paramref name="address" /> 매개 변수가 <see langword="null" />인 경우</exception>
      <exception cref="T:System.Net.Sockets.SocketException" vsli:raw="An error occurred when attempting to access the socket.">소켓에 액세스하는 동안 오류가 발생했습니다.</exception>
      <exception cref="T:System.ObjectDisposedException" vsli:raw="The &lt;see cref=&quot;T:System.Net.Sockets.Socket&quot; /&gt; has been closed.">
        <see cref="T:System.Net.Sockets.Socket" />이 닫혔습니다.</exception>
      <exception cref="T:System.Security.SecurityException" vsli:raw="A caller higher in the call stack does not have permission for the requested operation.">호출 스택의 상위 호출자에게 요청된 작업을 수행할 권한이 없는 경우</exception>
      <exception cref="T:System.ArgumentOutOfRangeException" vsli:raw="The port number is not valid.">포트 번호가 잘못된 경우</exception>
      <returns vsli:raw="An &lt;see cref=&quot;T:System.IAsyncResult&quot; /&gt; object that references the asynchronous connection.">비동기 연결을 참조하는 <see cref="T:System.IAsyncResult" /> 개체입니다.</returns>
    </member>
    <member name="M:System.Net.Sockets.TcpClient.BeginConnect(System.Net.IPAddress[],System.Int32,System.AsyncCallback,System.Object)">
      <summary vsli:raw="Begins an asynchronous request for a remote host connection. The remote host is specified by an &lt;see cref=&quot;T:System.Net.IPAddress&quot; /&gt; array and a port number (&lt;see cref=&quot;T:System.Int32&quot; /&gt;).">원격 호스트 연결에 대한 비동기 요청을 시작합니다. 원격 호스트는 <see cref="T:System.Net.IPAddress" /> 배열과 포트 번호(<see cref="T:System.Int32" />)로 지정됩니다.</summary>
      <param name="addresses" vsli:raw="At least one &lt;see cref=&quot;T:System.Net.IPAddress&quot; /&gt; that designates the remote hosts.">원격 호스트를 지정하는 하나 이상의 <see cref="T:System.Net.IPAddress" />입니다.</param>
      <param name="port" vsli:raw="The port number of the remote hosts.">원격 호스트의 포트 번호입니다.</param>
      <param name="requestCallback" vsli:raw="An &lt;see cref=&quot;T:System.AsyncCallback&quot; /&gt; delegate that references the method to invoke when the operation is complete.">작업이 완료되었을 때 호출할 메서드를 참조하는 <see cref="T:System.AsyncCallback" /> 대리자입니다.</param>
      <param name="state" vsli:raw="A user-defined object that contains information about the connect operation. This object is passed to the &lt;paramref name=&quot;requestCallback&quot; /&gt; delegate when the operation is complete.">연결 작업에 대한 정보가 들어 있는 사용자 정의 개체입니다. 이 개체는 작업이 완료되면 <paramref name="requestCallback" /> 대리자에게 전달됩니다.</param>
      <exception cref="T:System.ArgumentNullException" vsli:raw="The &lt;paramref name=&quot;addresses&quot; /&gt; parameter is &lt;see langword=&quot;null&quot; /&gt;.">
        <paramref name="addresses" /> 매개 변수가 <see langword="null" />인 경우</exception>
      <exception cref="T:System.Net.Sockets.SocketException" vsli:raw="An error occurred when attempting to access the socket.">소켓에 액세스하는 동안 오류가 발생했습니다.</exception>
      <exception cref="T:System.ObjectDisposedException" vsli:raw="The &lt;see cref=&quot;T:System.Net.Sockets.Socket&quot; /&gt; has been closed.">
        <see cref="T:System.Net.Sockets.Socket" />이 닫혔습니다.</exception>
      <exception cref="T:System.Security.SecurityException" vsli:raw="A caller higher in the call stack does not have permission for the requested operation.">호출 스택의 상위 호출자에게 요청된 작업을 수행할 권한이 없는 경우</exception>
      <exception cref="T:System.ArgumentOutOfRangeException" vsli:raw="The port number is not valid.">포트 번호가 잘못된 경우</exception>
      <returns vsli:raw="An &lt;see cref=&quot;T:System.IAsyncResult&quot; /&gt; object that references the asynchronous connection.">비동기 연결을 참조하는 <see cref="T:System.IAsyncResult" /> 개체입니다.</returns>
    </member>
    <member name="M:System.Net.Sockets.TcpClient.BeginConnect(System.String,System.Int32,System.AsyncCallback,System.Object)">
      <summary vsli:raw="Begins an asynchronous request for a remote host connection. The remote host is specified by a host name (&lt;see cref=&quot;T:System.String&quot; /&gt;) and a port number (&lt;see cref=&quot;T:System.Int32&quot; /&gt;).">원격 호스트 연결에 대한 비동기 요청을 시작합니다. 원격 호스트는 호스트 이름(<see cref="T:System.String" />)과 포트 번호(<see cref="T:System.Int32" />)로 지정됩니다.</summary>
      <param name="host" vsli:raw="The name of the remote host.">원격 호스트의 이름입니다.</param>
      <param name="port" vsli:raw="The port number of the remote host.">원격 호스트의 포트 번호입니다.</param>
      <param name="requestCallback" vsli:raw="An &lt;see cref=&quot;T:System.AsyncCallback&quot; /&gt; delegate that references the method to invoke when the operation is complete.">작업이 완료되었을 때 호출할 메서드를 참조하는 <see cref="T:System.AsyncCallback" /> 대리자입니다.</param>
      <param name="state" vsli:raw="A user-defined object that contains information about the connect operation. This object is passed to the &lt;paramref name=&quot;requestCallback&quot; /&gt; delegate when the operation is complete.">연결 작업에 대한 정보가 들어 있는 사용자 정의 개체입니다. 이 개체는 작업이 완료되면 <paramref name="requestCallback" /> 대리자에게 전달됩니다.</param>
      <exception cref="T:System.ArgumentNullException" vsli:raw="The &lt;paramref name=&quot;host&quot; /&gt; parameter is &lt;see langword=&quot;null&quot; /&gt;.">
        <paramref name="host" /> 매개 변수가 <see langword="null" />인 경우</exception>
      <exception cref="T:System.Net.Sockets.SocketException" vsli:raw="An error occurred when attempting to access the socket.">소켓에 액세스하는 동안 오류가 발생했습니다.</exception>
      <exception cref="T:System.ObjectDisposedException" vsli:raw="The &lt;see cref=&quot;T:System.Net.Sockets.Socket&quot; /&gt; has been closed.">
        <see cref="T:System.Net.Sockets.Socket" />이 닫혔습니다.</exception>
      <exception cref="T:System.Security.SecurityException" vsli:raw="A caller higher in the call stack does not have permission for the requested operation.">호출 스택의 상위 호출자에게 요청된 작업을 수행할 권한이 없는 경우</exception>
      <exception cref="T:System.ArgumentOutOfRangeException" vsli:raw="The port number is not valid.">포트 번호가 잘못된 경우</exception>
      <returns vsli:raw="An &lt;see cref=&quot;T:System.IAsyncResult&quot; /&gt; object that references the asynchronous connection.">비동기 연결을 참조하는 <see cref="T:System.IAsyncResult" /> 개체입니다.</returns>
    </member>
    <member name="M:System.Net.Sockets.TcpClient.Close">
      <summary vsli:raw="Disposes this &lt;see cref=&quot;T:System.Net.Sockets.TcpClient&quot; /&gt; instance and requests that the underlying TCP connection be closed.">이 <see cref="T:System.Net.Sockets.TcpClient" /> 인스턴스를 삭제하고 내부 TCP 연결을 닫도록 요청합니다.</summary>
    </member>
    <member name="M:System.Net.Sockets.TcpClient.Connect(System.Net.IPAddress,System.Int32)">
      <summary vsli:raw="Connects the client to a remote TCP host using the specified IP address and port number.">지정된 IP 주소와 포트 번호를 사용하여 원격 TCP 호스트에 클라이언트를 연결합니다.</summary>
      <param name="address" vsli:raw="The &lt;see cref=&quot;T:System.Net.IPAddress&quot; /&gt; of the host to which you intend to connect.">연결할 호스트의 <see cref="T:System.Net.IPAddress" />입니다.</param>
      <param name="port" vsli:raw="The port number to which you intend to connect.">연결할 포트 번호입니다.</param>
      <exception cref="T:System.ArgumentNullException" vsli:raw="The &lt;paramref name=&quot;address&quot; /&gt; parameter is &lt;see langword=&quot;null&quot; /&gt;.">
        <paramref name="address" /> 매개 변수가 <see langword="null" />인 경우</exception>
      <exception cref="T:System.ArgumentOutOfRangeException" vsli:raw="The &lt;paramref name=&quot;port&quot; /&gt; is not between &lt;see cref=&quot;F:System.Net.IPEndPoint.MinPort&quot; /&gt; and &lt;see cref=&quot;F:System.Net.IPEndPoint.MaxPort&quot; /&gt;.">
        <paramref name="port" />가 <see cref="F:System.Net.IPEndPoint.MinPort" />와 <see cref="F:System.Net.IPEndPoint.MaxPort" /> 사이에 없는 경우</exception>
      <exception cref="T:System.Net.Sockets.SocketException" vsli:raw="An error occurred when accessing the socket.">소켓에 액세스할 때 오류가 발생했습니다.</exception>
      <exception cref="T:System.ObjectDisposedException" vsli:raw="&lt;see cref=&quot;T:System.Net.Sockets.TcpClient&quot; /&gt; is closed.">
        <see cref="T:System.Net.Sockets.TcpClient" />가 닫혀 있습니다.</exception>
    </member>
    <member name="M:System.Net.Sockets.TcpClient.Connect(System.Net.IPAddress[],System.Int32)">
      <summary vsli:raw="Connects the client to a remote TCP host using the specified IP addresses and port number.">지정된 IP 주소와 포트 번호를 사용하여 원격 TCP 호스트에 클라이언트를 연결합니다.</summary>
      <param name="ipAddresses" vsli:raw="The &lt;see cref=&quot;T:System.Net.IPAddress&quot; /&gt; array of the host to which you intend to connect.">연결할 호스트의 <see cref="T:System.Net.IPAddress" /> 배열입니다.</param>
      <param name="port" vsli:raw="The port number to which you intend to connect.">연결할 포트 번호입니다.</param>
      <exception cref="T:System.ArgumentNullException" vsli:raw="The &lt;paramref name=&quot;ipAddresses&quot; /&gt; parameter is &lt;see langword=&quot;null&quot; /&gt;.">
        <paramref name="ipAddresses" /> 매개 변수가 <see langword="null" />인 경우</exception>
      <exception cref="T:System.ArgumentOutOfRangeException" vsli:raw="The port number is not valid.">포트 번호가 잘못된 경우</exception>
      <exception cref="T:System.Net.Sockets.SocketException" vsli:raw="An error occurred when attempting to access the socket.">소켓에 액세스하는 동안 오류가 발생했습니다.</exception>
      <exception cref="T:System.ObjectDisposedException" vsli:raw="The &lt;see cref=&quot;T:System.Net.Sockets.Socket&quot; /&gt; has been closed.">
        <see cref="T:System.Net.Sockets.Socket" />이 닫혔습니다.</exception>
      <exception cref="T:System.Security.SecurityException" vsli:raw="A caller higher in the call stack does not have permission for the requested operation.">호출 스택의 상위 호출자에게 요청된 작업을 수행할 권한이 없는 경우</exception>
      <exception cref="T:System.NotSupportedException" vsli:raw="This method is valid for sockets that use the &lt;see cref=&quot;F:System.Net.Sockets.AddressFamily.InterNetwork&quot; /&gt; flag or the &lt;see cref=&quot;F:System.Net.Sockets.AddressFamily.InterNetworkV6&quot; /&gt; flag.">이 메서드는 <see cref="F:System.Net.Sockets.AddressFamily.InterNetwork" /> 플래그 또는 <see cref="F:System.Net.Sockets.AddressFamily.InterNetworkV6" /> 플래그를 사용하는 소켓에 대해서만 사용할 수 있습니다.</exception>
    </member>
    <member name="M:System.Net.Sockets.TcpClient.Connect(System.Net.IPEndPoint)">
      <summary vsli:raw="Connects the client to a remote TCP host using the specified remote network endpoint.">지정된 네트워크 엔드포인트를 사용하여 원격 TCP 호스트에 클라이언트를 연결합니다.</summary>
      <param name="remoteEP" vsli:raw="The &lt;see cref=&quot;T:System.Net.IPEndPoint&quot; /&gt; to which you intend to connect.">연결할 <see cref="T:System.Net.IPEndPoint" />입니다.</param>
      <exception cref="T:System.ArgumentNullException" vsli:raw="The &lt;paramref name=&quot;remoteEp&quot; /&gt; parameter is &lt;see langword=&quot;null&quot; /&gt;.">
        <paramref name="remoteEp" /> 매개 변수가 <see langword="null" />인 경우</exception>
      <exception cref="T:System.Net.Sockets.SocketException" vsli:raw="An error occurred when accessing the socket.">소켓에 액세스할 때 오류가 발생했습니다.</exception>
      <exception cref="T:System.ObjectDisposedException" vsli:raw="The &lt;see cref=&quot;T:System.Net.Sockets.TcpClient&quot; /&gt; is closed.">
        <see cref="T:System.Net.Sockets.TcpClient" />가 닫혔습니다.</exception>
    </member>
    <member name="M:System.Net.Sockets.TcpClient.Connect(System.String,System.Int32)">
      <summary vsli:raw="Connects the client to the specified port on the specified host.">지정된 호스트의 지정된 포트에 클라이언트를 연결합니다.</summary>
      <param name="hostname" vsli:raw="The DNS name of the remote host to which you intend to connect.">연결할 원격 호스트의 DNS 이름입니다.</param>
      <param name="port" vsli:raw="The port number of the remote host to which you intend to connect.">연결한 원격 호스트의 포트 번호입니다.</param>
      <exception cref="T:System.ArgumentNullException" vsli:raw="The &lt;paramref name=&quot;hostname&quot; /&gt; parameter is &lt;see langword=&quot;null&quot; /&gt;.">
        <paramref name="hostname" /> 매개 변수가 <see langword="null" />인 경우</exception>
      <exception cref="T:System.ArgumentOutOfRangeException" vsli:raw="The &lt;paramref name=&quot;port&quot; /&gt; parameter is not between &lt;see cref=&quot;F:System.Net.IPEndPoint.MinPort&quot; /&gt; and &lt;see cref=&quot;F:System.Net.IPEndPoint.MaxPort&quot; /&gt;.">
        <paramref name="port" /> 매개 변수가 <see cref="F:System.Net.IPEndPoint.MinPort" />와 <see cref="F:System.Net.IPEndPoint.MaxPort" /> 사이에 없습니다.</exception>
      <exception cref="T:System.Net.Sockets.SocketException" vsli:raw="An error occurred when accessing the socket.">소켓에 액세스할 때 오류가 발생했습니다.</exception>
      <exception cref="T:System.ObjectDisposedException" vsli:raw="&lt;see cref=&quot;T:System.Net.Sockets.TcpClient&quot; /&gt; is closed.">
        <see cref="T:System.Net.Sockets.TcpClient" />가 닫혀 있습니다.</exception>
    </member>
    <member name="M:System.Net.Sockets.TcpClient.ConnectAsync(System.Net.IPAddress,System.Int32)">
      <summary vsli:raw="Connects the client to a remote TCP host using the specified IP address and port number as an asynchronous operation.">지정된 IP 주소와 포트 번호를 사용하여 비동기 작업으로 원격 TCP 호스트에 클라이언트를 연결합니다.</summary>
      <param name="address" vsli:raw="The &lt;see cref=&quot;T:System.Net.IPAddress&quot; /&gt; of the host to which you intend to connect.">연결할 호스트의 <see cref="T:System.Net.IPAddress" />입니다.</param>
      <param name="port" vsli:raw="The port number to which you intend to connect.">연결할 포트 번호입니다.</param>
      <exception cref="T:System.ArgumentNullException" vsli:raw="The &lt;paramref name=&quot;address&quot; /&gt; parameter is &lt;see langword=&quot;null&quot; /&gt;.">
        <paramref name="address" /> 매개 변수가 <see langword="null" />인 경우</exception>
      <exception cref="T:System.ArgumentOutOfRangeException" vsli:raw="The &lt;paramref name=&quot;port&quot; /&gt; is not between &lt;see cref=&quot;F:System.Net.IPEndPoint.MinPort&quot; /&gt; and &lt;see cref=&quot;F:System.Net.IPEndPoint.MaxPort&quot; /&gt;.">
        <paramref name="port" />가 <see cref="F:System.Net.IPEndPoint.MinPort" />와 <see cref="F:System.Net.IPEndPoint.MaxPort" /> 사이에 없는 경우</exception>
      <exception cref="T:System.Net.Sockets.SocketException" vsli:raw="An error occurred when accessing the socket.">소켓에 액세스할 때 오류가 발생했습니다.</exception>
      <exception cref="T:System.ObjectDisposedException" vsli:raw="&lt;see cref=&quot;T:System.Net.Sockets.TcpClient&quot; /&gt; is closed.">
        <see cref="T:System.Net.Sockets.TcpClient" />가 닫혀 있습니다.</exception>
      <returns vsli:raw="The task object representing the asynchronous operation.">비동기 작업(operation)을 나타내는 작업(task) 개체입니다.</returns>
    </member>
    <member name="M:System.Net.Sockets.TcpClient.ConnectAsync(System.Net.IPAddress,System.Int32,System.Threading.CancellationToken)">
      <summary vsli:raw="Connects the client to a remote TCP host using the specified IP address and port number as an asynchronous operation.">지정된 IP 주소와 포트 번호를 사용하여 비동기 작업으로 원격 TCP 호스트에 클라이언트를 연결합니다.</summary>
      <param name="address" vsli:raw="The IP address of the remote host.">원격 호스트의 IP 주소입니다.</param>
      <param name="port" vsli:raw="The port number of the remote host.">원격 호스트의 포트 번호입니다.</param>
      <param name="cancellationToken" vsli:raw="A cancellation token that can be used to signal the asynchronous operation should be canceled.">비동기 작업에 신호를 보내는 데 사용될 수 있는 취소 토큰은 취소되어야 합니다.</param>
      <exception cref="T:System.ArgumentNullException" vsli:raw="The &lt;paramref name=&quot;address&quot; /&gt; parameter is &lt;see langword=&quot;null&quot; /&gt;.">
        <paramref name="address" /> 매개 변수가 <see langword="null" />인 경우</exception>
      <exception cref="T:System.ArgumentOutOfRangeException" vsli:raw="The &lt;paramref name=&quot;port&quot; /&gt; is not between &lt;see cref=&quot;F:System.Net.IPEndPoint.MinPort&quot; /&gt; and &lt;see cref=&quot;F:System.Net.IPEndPoint.MaxPort&quot; /&gt;.">
        <paramref name="port" />가 <see cref="F:System.Net.IPEndPoint.MinPort" />와 <see cref="F:System.Net.IPEndPoint.MaxPort" /> 사이에 없는 경우</exception>
      <exception cref="T:System.Net.Sockets.SocketException" vsli:raw="An error occurred when accessing the socket.">소켓에 액세스할 때 오류가 발생했습니다.</exception>
      <exception cref="T:System.ObjectDisposedException" vsli:raw="&lt;see cref=&quot;T:System.Net.Sockets.TcpClient&quot; /&gt; is closed.">
        <see cref="T:System.Net.Sockets.TcpClient" />가 닫혀 있습니다.</exception>
      <returns vsli:raw="A task that represents the asynchronous connection operation.">비동기 연결 작업(operation)을 나타내는 작업(task)입니다.</returns>
    </member>
    <member name="M:System.Net.Sockets.TcpClient.ConnectAsync(System.Net.IPAddress[],System.Int32)">
      <summary vsli:raw="Connects the client to a remote TCP host using the specified IP addresses and port number as an asynchronous operation.">지정된 IP 주소와 포트 번호를 사용하여 비동기 작업으로 원격 TCP 호스트에 클라이언트를 연결합니다.</summary>
      <param name="addresses" vsli:raw="The &lt;see cref=&quot;T:System.Net.IPAddress&quot; /&gt; array of the host to which you intend to connect.">연결할 호스트의 <see cref="T:System.Net.IPAddress" /> 배열입니다.</param>
      <param name="port" vsli:raw="The port number to which you intend to connect.">연결할 포트 번호입니다.</param>
      <exception cref="T:System.ArgumentNullException" vsli:raw="The &lt;paramref name=&quot;ipAddresses&quot; /&gt; parameter is &lt;see langword=&quot;null&quot; /&gt;.">
        <paramref name="ipAddresses" /> 매개 변수가 <see langword="null" />인 경우</exception>
      <exception cref="T:System.ArgumentOutOfRangeException" vsli:raw="The port number is not valid.">포트 번호가 잘못된 경우</exception>
      <exception cref="T:System.Net.Sockets.SocketException" vsli:raw="An error occurred when attempting to access the socket.">소켓에 액세스하는 동안 오류가 발생했습니다.</exception>
      <exception cref="T:System.ObjectDisposedException" vsli:raw="The &lt;see cref=&quot;T:System.Net.Sockets.Socket&quot; /&gt; has been closed.">
        <see cref="T:System.Net.Sockets.Socket" />이 닫혔습니다.</exception>
      <exception cref="T:System.Security.SecurityException" vsli:raw="A caller higher in the call stack does not have permission for the requested operation.">호출 스택의 상위 호출자에게 요청된 작업을 수행할 권한이 없는 경우</exception>
      <exception cref="T:System.NotSupportedException" vsli:raw="This method is valid for sockets that use the &lt;see cref=&quot;F:System.Net.Sockets.AddressFamily.InterNetwork&quot; /&gt; flag or the &lt;see cref=&quot;F:System.Net.Sockets.AddressFamily.InterNetworkV6&quot; /&gt; flag.">이 메서드는 <see cref="F:System.Net.Sockets.AddressFamily.InterNetwork" /> 플래그 또는 <see cref="F:System.Net.Sockets.AddressFamily.InterNetworkV6" /> 플래그를 사용하는 소켓에 대해서만 사용할 수 있습니다.</exception>
      <returns vsli:raw="The task object representing the asynchronous operation.">비동기 작업(operation)을 나타내는 작업(task) 개체입니다.</returns>
    </member>
    <member name="M:System.Net.Sockets.TcpClient.ConnectAsync(System.Net.IPAddress[],System.Int32,System.Threading.CancellationToken)">
      <summary vsli:raw="Connects the client to a remote TCP host using the specified IP addresses and port number as an asynchronous operation.">지정된 IP 주소와 포트 번호를 사용하여 비동기 작업으로 원격 TCP 호스트에 클라이언트를 연결합니다.</summary>
      <param name="addresses" vsli:raw="The array of IP address of the remote host.">원격 호스트의 IP 주소 배열입니다.</param>
      <param name="port" vsli:raw="The port number of the remote host.">원격 호스트의 포트 번호입니다.</param>
      <param name="cancellationToken" vsli:raw="A cancellation token that can be used to signal the asynchronous operation should be canceled.">비동기 작업에 신호를 보내는 데 사용될 수 있는 취소 토큰은 취소되어야 합니다.</param>
      <exception cref="T:System.ArgumentNullException" vsli:raw="The &lt;paramref name=&quot;ipAddresses&quot; /&gt; parameter is &lt;see langword=&quot;null&quot; /&gt;.">
        <paramref name="ipAddresses" /> 매개 변수가 <see langword="null" />인 경우</exception>
      <exception cref="T:System.ArgumentOutOfRangeException" vsli:raw="The port number is not valid.">포트 번호가 잘못된 경우</exception>
      <exception cref="T:System.Net.Sockets.SocketException" vsli:raw="An error occurred when attempting to access the socket.">소켓에 액세스하는 동안 오류가 발생했습니다.</exception>
      <exception cref="T:System.ObjectDisposedException" vsli:raw="The &lt;see cref=&quot;T:System.Net.Sockets.Socket&quot; /&gt; has been closed.">
        <see cref="T:System.Net.Sockets.Socket" />이 닫혔습니다.</exception>
      <exception cref="T:System.Security.SecurityException" vsli:raw="A caller higher in the call stack does not have permission for the requested operation.">호출 스택의 상위 호출자에게 요청된 작업을 수행할 권한이 없는 경우</exception>
      <exception cref="T:System.NotSupportedException" vsli:raw="This method is valid for sockets that use the &lt;see cref=&quot;F:System.Net.Sockets.AddressFamily.InterNetwork&quot; /&gt; flag or the &lt;see cref=&quot;F:System.Net.Sockets.AddressFamily.InterNetworkV6&quot; /&gt; flag.">이 메서드는 <see cref="F:System.Net.Sockets.AddressFamily.InterNetwork" /> 플래그 또는 <see cref="F:System.Net.Sockets.AddressFamily.InterNetworkV6" /> 플래그를 사용하는 소켓에 대해서만 사용할 수 있습니다.</exception>
      <returns vsli:raw="A task that represents the asynchronous connection operation.">비동기 연결 작업(operation)을 나타내는 작업(task)입니다.</returns>
    </member>
    <member name="M:System.Net.Sockets.TcpClient.ConnectAsync(System.String,System.Int32)">
      <summary vsli:raw="Connects the client to the specified TCP port on the specified host as an asynchronous operation.">지정된 호스트의 지정된 TCP 포트에 클라이언트를 비동기 작업으로 연결합니다.</summary>
      <param name="host" vsli:raw="The DNS name of the remote host to which you intend to connect.">연결할 원격 호스트의 DNS 이름입니다.</param>
      <param name="port" vsli:raw="The port number of the remote host to which you intend to connect.">연결한 원격 호스트의 포트 번호입니다.</param>
      <exception cref="T:System.ArgumentNullException" vsli:raw="The &lt;paramref name=&quot;host&quot; /&gt; parameter is &lt;see langword=&quot;null&quot; /&gt;.">
        <paramref name="hostname" /> 매개 변수가 <see langword="null" />인 경우</exception>
      <exception cref="T:System.ArgumentOutOfRangeException" vsli:raw="The &lt;paramref name=&quot;port&quot; /&gt; parameter is not between &lt;see cref=&quot;F:System.Net.IPEndPoint.MinPort&quot; /&gt; and &lt;see cref=&quot;F:System.Net.IPEndPoint.MaxPort&quot; /&gt;.">
        <paramref name="port" /> 매개 변수가 <see cref="F:System.Net.IPEndPoint.MinPort" />와 <see cref="F:System.Net.IPEndPoint.MaxPort" /> 사이에 없습니다.</exception>
      <exception cref="T:System.Net.Sockets.SocketException" vsli:raw="An error occurred when accessing the socket.">소켓에 액세스할 때 오류가 발생했습니다.</exception>
      <exception cref="T:System.ObjectDisposedException" vsli:raw="&lt;see cref=&quot;T:System.Net.Sockets.TcpClient&quot; /&gt; is closed.">
        <see cref="T:System.Net.Sockets.TcpClient" />가 닫혀 있습니다.</exception>
      <returns vsli:raw="The task object representing the asynchronous operation.">비동기 작업(operation)을 나타내는 작업(task) 개체입니다.</returns>
    </member>
    <member name="M:System.Net.Sockets.TcpClient.ConnectAsync(System.String,System.Int32,System.Threading.CancellationToken)">
      <summary vsli:raw="Connects the client to the specified TCP port on the specified host as an asynchronous operation.">지정된 호스트의 지정된 TCP 포트에 클라이언트를 비동기 작업으로 연결합니다.</summary>
      <param name="host" vsli:raw="The DNS name of the remote host.">원격 호스트의 DNS 이름입니다.</param>
      <param name="port" vsli:raw="The port number of the remote host.">원격 호스트의 포트 번호입니다.</param>
      <param name="cancellationToken" vsli:raw="A cancellation token that can be used to signal the asynchronous operation should be canceled.">비동기 작업에 신호를 보내는 데 사용될 수 있는 취소 토큰은 취소되어야 합니다.</param>
      <exception cref="T:System.ArgumentNullException" vsli:raw="The &lt;paramref name=&quot;host&quot; /&gt; parameter is &lt;see langword=&quot;null&quot; /&gt;.">
        <paramref name="hostname" /> 매개 변수가 <see langword="null" />인 경우</exception>
      <exception cref="T:System.ArgumentOutOfRangeException" vsli:raw="The &lt;paramref name=&quot;port&quot; /&gt; parameter is not between &lt;see cref=&quot;F:System.Net.IPEndPoint.MinPort&quot; /&gt; and &lt;see cref=&quot;F:System.Net.IPEndPoint.MaxPort&quot; /&gt;.">
        <paramref name="port" /> 매개 변수가 <see cref="F:System.Net.IPEndPoint.MinPort" />와 <see cref="F:System.Net.IPEndPoint.MaxPort" /> 사이에 없습니다.</exception>
      <exception cref="T:System.Net.Sockets.SocketException" vsli:raw="An error occurred when accessing the socket.">소켓에 액세스할 때 오류가 발생했습니다.</exception>
      <exception cref="T:System.ObjectDisposedException" vsli:raw="&lt;see cref=&quot;T:System.Net.Sockets.TcpClient&quot; /&gt; is closed.">
        <see cref="T:System.Net.Sockets.TcpClient" />가 닫혀 있습니다.</exception>
      <returns vsli:raw="A task that represents the asynchronous connection operation.">비동기 연결 작업(operation)을 나타내는 작업(task)입니다.</returns>
    </member>
    <member name="M:System.Net.Sockets.TcpClient.Dispose">
      <summary vsli:raw="Releases the managed and unmanaged resources used by the &lt;see cref=&quot;T:System.Net.Sockets.TcpClient&quot; /&gt;.">
        <see cref="T:System.Net.Sockets.TcpClient" />에서 사용하는 관리되는 리소스 및 관리되지 않는 리소스를 해제합니다.</summary>
    </member>
    <member name="M:System.Net.Sockets.TcpClient.Dispose(System.Boolean)">
      <summary vsli:raw="Releases the unmanaged resources used by the &lt;see cref=&quot;T:System.Net.Sockets.TcpClient&quot; /&gt; and optionally releases the managed resources.">
        <see cref="T:System.Net.Sockets.TcpClient" />에서 사용하는 관리되지 않는 리소스를 해제하고, 관리되는 리소스를 선택적으로 해제할 수 있습니다.</summary>
      <param name="disposing" vsli:raw="Set to &lt;see langword=&quot;true&quot; /&gt; to release both managed and unmanaged resources; &lt;see langword=&quot;false&quot; /&gt; to release only unmanaged resources.">관리되는 리소스와 관리되지 않는 리소스를 모두 해제하려면 <see langword="true" />로 설정하고, 관리되지 않는 리소스만 해제하려면 <see langword="false" />로 설정합니다.</param>
    </member>
    <member name="M:System.Net.Sockets.TcpClient.EndConnect(System.IAsyncResult)">
      <summary vsli:raw="Ends a pending asynchronous connection attempt.">보류 중인 비동기 연결 시도를 끝냅니다.</summary>
      <param name="asyncResult" vsli:raw="An &lt;see cref=&quot;T:System.IAsyncResult&quot; /&gt; object returned by a call to &lt;see cref=&quot;Overload:System.Net.Sockets.TcpClient.BeginConnect&quot; /&gt;.">
        <see cref="T:System.IAsyncResult" />를 호출할 때 반환되는 <see cref="Overload:System.Net.Sockets.TcpClient.BeginConnect" /> 개체입니다.</param>
      <exception cref="T:System.ArgumentNullException" vsli:raw="The &lt;paramref name=&quot;asyncResult&quot; /&gt; parameter is &lt;see langword=&quot;null&quot; /&gt;.">
        <paramref name="asyncResult" /> 매개 변수가 <see langword="null" />인 경우</exception>
      <exception cref="T:System.ArgumentException" vsli:raw="The &lt;paramref name=&quot;asyncResult&quot; /&gt; parameter was not returned by a call to a &lt;see cref=&quot;Overload:System.Net.Sockets.TcpClient.BeginConnect&quot; /&gt; method.">
        <see cref="Overload:System.Net.Sockets.TcpClient.BeginConnect" /> 메서드를 호출했지만 <paramref name="asyncResult" /> 매개 변수가 반환되지 않은 경우</exception>
      <exception cref="T:System.InvalidOperationException" vsli:raw="The &lt;see cref=&quot;M:System.Net.Sockets.TcpClient.EndConnect(System.IAsyncResult)&quot; /&gt; method was previously called for the asynchronous connection.">
        <see cref="M:System.Net.Sockets.TcpClient.EndConnect(System.IAsyncResult)" /> 메서드가 비동기 연결을 위해 이미 호출된 경우</exception>
      <exception cref="T:System.Net.Sockets.SocketException" vsli:raw="An error occurred when attempting to access the &lt;see cref=&quot;T:System.Net.Sockets.Socket&quot; /&gt;.">
        <see cref="T:System.Net.Sockets.Socket" />에 액세스하려고 시도하는 동안 오류가 발생한 경우.</exception>
      <exception cref="T:System.ObjectDisposedException" vsli:raw="The underlying &lt;see cref=&quot;T:System.Net.Sockets.Socket&quot; /&gt; has been closed.">내부 <see cref="T:System.Net.Sockets.Socket" />이 닫힌 경우</exception>
    </member>
    <member name="M:System.Net.Sockets.TcpClient.Finalize">
      <summary vsli:raw="Frees resources used by the &lt;see cref=&quot;T:System.Net.Sockets.TcpClient&quot; /&gt; class.">
        <see cref="T:System.Net.Sockets.TcpClient" /> 클래스에서 사용한 리소스를 해제합니다.</summary>
    </member>
    <member name="M:System.Net.Sockets.TcpClient.GetStream">
      <summary vsli:raw="Returns the &lt;see cref=&quot;T:System.Net.Sockets.NetworkStream&quot; /&gt; used to send and receive data.">데이터를 보내고 받는 데 사용되는 <see cref="T:System.Net.Sockets.NetworkStream" />을 반환합니다.</summary>
      <exception cref="T:System.InvalidOperationException" vsli:raw="The &lt;see cref=&quot;T:System.Net.Sockets.TcpClient&quot; /&gt; is not connected to a remote host.">
        <see cref="T:System.Net.Sockets.TcpClient" />가 원격 호스트에 연결되어 있지 않은 경우</exception>
      <exception cref="T:System.ObjectDisposedException" vsli:raw="The &lt;see cref=&quot;T:System.Net.Sockets.TcpClient&quot; /&gt; has been closed.">
        <see cref="T:System.Net.Sockets.TcpClient" />이 닫혔습니다.</exception>
      <returns vsli:raw="The underlying &lt;see cref=&quot;T:System.Net.Sockets.NetworkStream&quot; /&gt;.">내부 <see cref="T:System.Net.Sockets.NetworkStream" />입니다.</returns>
    </member>
    <member name="P:System.Net.Sockets.TcpClient.Active">
      <summary vsli:raw="Gets or sets a value that indicates whether a connection has been made.">연결되었는지 여부를 나타내는 값을 가져오거나 설정합니다.</summary>
      <returns vsli:raw="&lt;see langword=&quot;true&quot; /&gt; if the connection has been made; otherwise, &lt;see langword=&quot;false&quot; /&gt;.">연결되었으면 <see langword="true" />이고, 그렇지 않으면 <see langword="false" />입니다.</returns>
    </member>
    <member name="P:System.Net.Sockets.TcpClient.Available">
      <summary vsli:raw="Gets the amount of data that has been received from the network and is available to be read.">네트워크에서 받아서 읽을 수 있는 데이터의 양을 가져옵니다.</summary>
      <exception cref="T:System.Net.Sockets.SocketException" vsli:raw="An error occurred when attempting to access the socket.">소켓에 액세스하는 동안 오류가 발생했습니다.</exception>
      <exception cref="T:System.ObjectDisposedException" vsli:raw="The &lt;see cref=&quot;T:System.Net.Sockets.Socket&quot; /&gt; has been closed.">
        <see cref="T:System.Net.Sockets.Socket" />이 닫혔습니다.</exception>
      <returns vsli:raw="The number of bytes of data received from the network and available to be read.">네트워크에서 받아서 읽을 수 있는 데이터의 바이트 수입니다.</returns>
    </member>
    <member name="P:System.Net.Sockets.TcpClient.Client">
      <summary vsli:raw="Gets or sets the underlying &lt;see cref=&quot;T:System.Net.Sockets.Socket&quot; /&gt;.">내부 <see cref="T:System.Net.Sockets.Socket" />을 가져오거나 설정합니다.</summary>
      <returns vsli:raw="The underlying network &lt;see cref=&quot;T:System.Net.Sockets.Socket&quot; /&gt;.">내부 네트워크 <see cref="T:System.Net.Sockets.Socket" />입니다.</returns>
    </member>
    <member name="P:System.Net.Sockets.TcpClient.Connected">
      <summary vsli:raw="Gets a value indicating whether the underlying &lt;see cref=&quot;T:System.Net.Sockets.Socket&quot; /&gt; for a &lt;see cref=&quot;T:System.Net.Sockets.TcpClient&quot; /&gt; is connected to a remote host.">
        <see cref="T:System.Net.Sockets.Socket" />의 내부 <see cref="T:System.Net.Sockets.TcpClient" />이 원격 호스트에 연결되어 있는지 여부를 나타내는 값을 가져옵니다.</summary>
      <returns vsli:raw="&lt;see langword=&quot;true&quot; /&gt; if the &lt;see cref=&quot;P:System.Net.Sockets.TcpClient.Client&quot; /&gt; socket was connected to a remote resource as of the most recent operation; otherwise, &lt;see langword=&quot;false&quot; /&gt;.">가장 최근 작업에서 <see cref="P:System.Net.Sockets.TcpClient.Client" /> 소켓이 원격 리소스에 연결되었으면 <see langword="true" />이고, 그렇지 않으면 <see langword="false" />입니다.</returns>
    </member>
    <member name="P:System.Net.Sockets.TcpClient.ExclusiveAddressUse">
      <summary vsli:raw="Gets or sets a &lt;see cref=&quot;T:System.Boolean&quot; /&gt; value that specifies whether the &lt;see cref=&quot;T:System.Net.Sockets.TcpClient&quot; /&gt; allows only one client to use a port.">
        <see cref="T:System.Boolean" />가 하나의 포트를 하나의 클라이언트에서만 사용하도록 허용하는지 여부를 지정하는 <see cref="T:System.Net.Sockets.TcpClient" /> 값을 가져오거나 설정합니다.</summary>
      <exception cref="T:System.Net.Sockets.SocketException" vsli:raw="An error occurred when attempting to access the underlying socket.">내부 소켓에 액세스하려고 시도하는 동안 오류가 발생한 경우.</exception>
      <exception cref="T:System.ObjectDisposedException" vsli:raw="The underlying &lt;see cref=&quot;T:System.Net.Sockets.Socket&quot; /&gt; has been closed.">내부 <see cref="T:System.Net.Sockets.Socket" />이 닫힌 경우</exception>
      <returns vsli:raw="&lt;see langword=&quot;true&quot; /&gt; if the &lt;see cref=&quot;T:System.Net.Sockets.TcpClient&quot; /&gt; allows only one client to use a specific port; otherwise, &lt;see langword=&quot;false&quot; /&gt;. The default is &lt;see langword=&quot;true&quot; /&gt; for Windows Server 2003 and Windows XP Service Pack 2 and later, and &lt;see langword=&quot;false&quot; /&gt; for all other versions.">
        <see cref="T:System.Net.Sockets.TcpClient" />에서 특정 포트를 하나의 클라이언트에서만 사용하도록 허용하면 <see langword="true" />이고, 그렇지 않으면 <see langword="false" />입니다. Windows Server 2003 및 Windows XP 서비스 팩 2 이상에서는 기본값이 <see langword="true" />이고, 다른 모든 버전에서는 <see langword="false" />입니다.</returns>
    </member>
    <member name="P:System.Net.Sockets.TcpClient.LingerState">
      <summary vsli:raw="Gets or sets information about the linger state of the associated socket.">연결된 소켓의 링거 상태에 대한 정보를 가져오거나 설정합니다.</summary>
      <returns vsli:raw="A &lt;see cref=&quot;T:System.Net.Sockets.LingerOption&quot; /&gt;. By default, lingering is disabled.">
        <see cref="T:System.Net.Sockets.LingerOption" /> 기본적으로 링거는 비활성화됩니다.</returns>
    </member>
    <member name="P:System.Net.Sockets.TcpClient.NoDelay">
      <summary vsli:raw="Gets or sets a value that disables a delay when send or receive buffers are not full.">송신 또는 수신 버퍼가 꽉 차지 않았을 때 지연을 비활성화하는 값을 가져오거나 설정합니다.</summary>
      <returns vsli:raw="&lt;see langword=&quot;true&quot; /&gt; if the delay is disabled; otherwise, &lt;see langword=&quot;false&quot; /&gt;. The default value is &lt;see langword=&quot;false&quot; /&gt;.">
        <see langword="true" /> 지연이 비활성화 되어 있으면이 고, 그렇지 않으면입니다. 그렇지 않으면 <see langword="false" /> 입니다. 기본값은 <see langword="false" />입니다.</returns>
    </member>
    <member name="P:System.Net.Sockets.TcpClient.ReceiveBufferSize">
      <summary vsli:raw="Gets or sets the size of the receive buffer.">수신 버퍼의 크기를 가져오거나 설정합니다.</summary>
      <exception cref="T:System.Net.Sockets.SocketException" vsli:raw="An error occurred when setting the buffer size.&#xA;&#xA; -or-&#xA;&#xA; In .NET Compact Framework applications, you cannot set this property. For a workaround, see the Platform Note in Remarks.">버퍼 크기를 설정하는 동안 오류가 발생한 경우  
  
 또는  
  
 .NET Compact Framework 애플리케이션에서 이 속성을 설정할 수 없는 경우. 해결 방법은 설명 부분의 플랫폼 참고를 참조하십시오.</exception>
      <returns vsli:raw="The size of the receive buffer, in bytes. The default value is 8192 bytes.">수신 버퍼의 크기(바이트)입니다. 기본값은 8192,536바이트입니다.</returns>
    </member>
    <member name="P:System.Net.Sockets.TcpClient.ReceiveTimeout">
      <summary vsli:raw="Gets or sets the amount of time a &lt;see cref=&quot;T:System.Net.Sockets.TcpClient&quot; /&gt; will wait to receive data once a read operation is initiated.">읽기 작업이 시작된 후에 <see cref="T:System.Net.Sockets.TcpClient" />가 데이터를 수신하기 위해 대기하는 기간을 가져오거나 설정합니다.</summary>
      <returns vsli:raw="The time-out value of the connection in milliseconds. The default value is 0.">해당 연결의 제한 시간 값(밀리초)입니다. 기본값은 0입니다.</returns>
    </member>
    <member name="P:System.Net.Sockets.TcpClient.SendBufferSize">
      <summary vsli:raw="Gets or sets the size of the send buffer.">송신 버퍼의 크기를 가져오거나 설정합니다.</summary>
      <returns vsli:raw="The size of the send buffer, in bytes. The default value is 8192 bytes.">송신 버퍼의 크기(바이트)입니다. 기본값은 8192,536바이트입니다.</returns>
    </member>
    <member name="P:System.Net.Sockets.TcpClient.SendTimeout">
      <summary vsli:raw="Gets or sets the amount of time a &lt;see cref=&quot;T:System.Net.Sockets.TcpClient&quot; /&gt; will wait for a send operation to complete successfully.">보내기 작업을 성공적으로 완료하기 위해 <see cref="T:System.Net.Sockets.TcpClient" />가 대기하는 기간을 가져오거나 설정합니다.</summary>
      <returns vsli:raw="The send time-out value, in milliseconds. The default is 0.">송신 제한 시간 값(밀리초)입니다. 기본값은 0입니다.</returns>
    </member>
    <member name="T:System.Net.Sockets.TcpListener">
      <summary vsli:raw="Listens for connections from TCP network clients.">TCP 네트워크 클라이언트에서 연결을 수신합니다.</summary>
    </member>
    <member name="M:System.Net.Sockets.TcpListener.#ctor(System.Int32)">
      <summary vsli:raw="Initializes a new instance of the &lt;see cref=&quot;T:System.Net.Sockets.TcpListener&quot; /&gt; class that listens on the specified port.">지정된 포트에서 수신하는 <see cref="T:System.Net.Sockets.TcpListener" /> 클래스의 새 인스턴스를 초기화합니다.</summary>
      <param name="port" vsli:raw="The port on which to listen for incoming connection attempts.">들어오는 연결 시도를 수신하는 데 사용되는 포트입니다.</param>
      <exception cref="T:System.ArgumentOutOfRangeException" vsli:raw="&lt;paramref name=&quot;port&quot; /&gt; is not between &lt;see cref=&quot;F:System.Net.IPEndPoint.MinPort&quot; /&gt; and &lt;see cref=&quot;F:System.Net.IPEndPoint.MaxPort&quot; /&gt;.">
        <paramref name="port" />가 <see cref="F:System.Net.IPEndPoint.MinPort" />와 <see cref="F:System.Net.IPEndPoint.MaxPort" /> 사이에 없는 경우</exception>
    </member>
    <member name="M:System.Net.Sockets.TcpListener.#ctor(System.Net.IPAddress,System.Int32)">
      <summary vsli:raw="Initializes a new instance of the &lt;see cref=&quot;T:System.Net.Sockets.TcpListener&quot; /&gt; class that listens for incoming connection attempts on the specified local IP address and port number.">지정된 로컬 IP 주소와 포트 번호에서 들어오는 연결 시도를 수신하는 <see cref="T:System.Net.Sockets.TcpListener" /> 클래스의 새 인스턴스를 초기화합니다.</summary>
      <param name="localaddr" vsli:raw="An &lt;see cref=&quot;T:System.Net.IPAddress&quot; /&gt; that represents the local IP address.">로컬 IP 주소를 나타내는 <see cref="T:System.Net.IPAddress" />입니다.</param>
      <param name="port" vsli:raw="The port on which to listen for incoming connection attempts.">들어오는 연결 시도를 수신하는 데 사용되는 포트입니다.</param>
      <exception cref="T:System.ArgumentNullException" vsli:raw="&lt;paramref name=&quot;localaddr&quot; /&gt; is &lt;see langword=&quot;null&quot; /&gt;.">
        <paramref name="localaddr" />이(가) <see langword="null" />인 경우</exception>
      <exception cref="T:System.ArgumentOutOfRangeException" vsli:raw="&lt;paramref name=&quot;port&quot; /&gt; is not between &lt;see cref=&quot;F:System.Net.IPEndPoint.MinPort&quot; /&gt; and &lt;see cref=&quot;F:System.Net.IPEndPoint.MaxPort&quot; /&gt;.">
        <paramref name="port" />가 <see cref="F:System.Net.IPEndPoint.MinPort" />와 <see cref="F:System.Net.IPEndPoint.MaxPort" /> 사이에 없는 경우</exception>
    </member>
    <member name="M:System.Net.Sockets.TcpListener.#ctor(System.Net.IPEndPoint)">
      <summary vsli:raw="Initializes a new instance of the &lt;see cref=&quot;T:System.Net.Sockets.TcpListener&quot; /&gt; class with the specified local endpoint.">지정된 로컬 엔드포인트를 사용하여 <see cref="T:System.Net.Sockets.TcpListener" /> 클래스의 새 인스턴스를 초기화합니다.</summary>
      <param name="localEP" vsli:raw="An &lt;see cref=&quot;T:System.Net.IPEndPoint&quot; /&gt; that represents the local endpoint to which to bind the listener &lt;see cref=&quot;T:System.Net.Sockets.Socket&quot; /&gt;.">
        <see cref="T:System.Net.IPEndPoint" />수신기를 바인딩할 로컬 엔드포인트를 나타내는 <see cref="T:System.Net.Sockets.Socket" />입니다.</param>
      <exception cref="T:System.ArgumentNullException" vsli:raw="&lt;paramref name=&quot;localEP&quot; /&gt; is &lt;see langword=&quot;null&quot; /&gt;.">
        <paramref name="localEP" />이(가) <see langword="null" />인 경우</exception>
    </member>
    <member name="M:System.Net.Sockets.TcpListener.AcceptSocket">
      <summary vsli:raw="Accepts a pending connection request.">보류 중인 연결 요청을 받아들입니다.</summary>
      <exception cref="T:System.InvalidOperationException" vsli:raw="The listener has not been started with a call to &lt;see cref=&quot;M:System.Net.Sockets.TcpListener.Start&quot; /&gt;.">
        <see cref="M:System.Net.Sockets.TcpListener.Start" />의 호출과 함께 수신기가 시작하지 않은 경우</exception>
      <returns vsli:raw="A &lt;see cref=&quot;T:System.Net.Sockets.Socket&quot; /&gt; used to send and receive data.">데이터를 보내고 받는 데 사용되는 <see cref="T:System.Net.Sockets.Socket" />입니다.</returns>
    </member>
    <member name="M:System.Net.Sockets.TcpListener.AcceptSocketAsync">
      <summary vsli:raw="Accepts a pending connection request as an asynchronous operation.">보류 중인 연결 요청을 비동기 작업으로 허용합니다.</summary>
      <exception cref="T:System.InvalidOperationException" vsli:raw="The listener has not been started with a call to &lt;see cref=&quot;M:System.Net.Sockets.TcpListener.Start&quot; /&gt;.">
        <see cref="M:System.Net.Sockets.TcpListener.Start" />의 호출과 함께 수신기가 시작하지 않은 경우</exception>
      <returns vsli:raw="The task object representing the asynchronous operation. The &lt;see cref=&quot;P:System.Threading.Tasks.Task`1.Result&quot; /&gt; property on the task object returns a &lt;see cref=&quot;T:System.Net.Sockets.Socket&quot; /&gt; used to send and receive data.">비동기 작업(operation)을 나타내는 작업(task) 개체입니다. 작업 개체의 <see cref="P:System.Threading.Tasks.Task`1.Result" /> 속성은 데이터를 보내고 받는 데 사용하는 <see cref="T:System.Net.Sockets.Socket" />을 반환합니다.</returns>
    </member>
    <member name="M:System.Net.Sockets.TcpListener.AcceptTcpClient">
      <summary vsli:raw="Accepts a pending connection request.">보류 중인 연결 요청을 받아들입니다.</summary>
      <exception cref="T:System.InvalidOperationException" vsli:raw="The listener has not been started with a call to &lt;see cref=&quot;M:System.Net.Sockets.TcpListener.Start&quot; /&gt;.">
        <see cref="M:System.Net.Sockets.TcpListener.Start" />의 호출과 함께 수신기가 시작하지 않은 경우</exception>
      <exception cref="T:System.Net.Sockets.SocketException" vsli:raw="Use the &lt;see cref=&quot;P:System.Net.Sockets.SocketException.ErrorCode&quot; /&gt; property to obtain the specific error code. When you have obtained this code, you can refer to the Windows Sockets version 2 API error code documentation for a detailed description of the error.">
        <see cref="P:System.Net.Sockets.SocketException.ErrorCode" /> 속성을 사용하여 특정 오류 코드를 가져오십시오. 이 코드를 가져온 다음, Windows 소켓 버전 2 API 오류 코드 설명서에서 오류에 대한 자세한 설명을 참조할 수 있습니다.</exception>
      <returns vsli:raw="A &lt;see cref=&quot;T:System.Net.Sockets.TcpClient&quot; /&gt; used to send and receive data.">데이터를 보내고 받는 데 사용되는 <see cref="T:System.Net.Sockets.TcpClient" />입니다.</returns>
    </member>
    <member name="M:System.Net.Sockets.TcpListener.AcceptTcpClientAsync">
      <summary vsli:raw="Accepts a pending connection request as an asynchronous operation.">보류 중인 연결 요청을 비동기 작업으로 허용합니다.</summary>
      <exception cref="T:System.InvalidOperationException" vsli:raw="The listener has not been started with a call to &lt;see cref=&quot;M:System.Net.Sockets.TcpListener.Start&quot; /&gt;.">
        <see cref="M:System.Net.Sockets.TcpListener.Start" />의 호출과 함께 수신기가 시작하지 않은 경우</exception>
      <exception cref="T:System.Net.Sockets.SocketException" vsli:raw="Use the &lt;see cref=&quot;P:System.Net.Sockets.SocketException.ErrorCode&quot; /&gt; property to obtain the specific error code. When you have obtained this code, you can refer to the Windows Sockets version 2 API error code documentation for a detailed description of the error.">
        <see cref="P:System.Net.Sockets.SocketException.ErrorCode" /> 속성을 사용하여 특정 오류 코드를 가져오십시오. 이 코드를 가져온 다음, Windows 소켓 버전 2 API 오류 코드 설명서에서 오류에 대한 자세한 설명을 참조할 수 있습니다.</exception>
      <returns vsli:raw="The task object representing the asynchronous operation. The &lt;see cref=&quot;P:System.Threading.Tasks.Task`1.Result&quot; /&gt; property on the task object returns a &lt;see cref=&quot;T:System.Net.Sockets.TcpClient&quot; /&gt; used to send and receive data.">비동기 작업(operation)을 나타내는 작업(task) 개체입니다. 작업 개체의 <see cref="P:System.Threading.Tasks.Task`1.Result" /> 속성은 데이터를 보내고 받는 데 사용하는 <see cref="T:System.Net.Sockets.TcpClient" />을 반환합니다.</returns>
    </member>
    <member name="M:System.Net.Sockets.TcpListener.AllowNatTraversal(System.Boolean)">
      <summary vsli:raw="Enables or disables Network Address Translation (NAT) traversal on a &lt;see cref=&quot;T:System.Net.Sockets.TcpListener&quot; /&gt; instance.">
        <see cref="T:System.Net.Sockets.TcpListener" /> 인스턴스에 대해 NAT(Network Address Translation) 통과를 설정하거나 해제합니다.</summary>
      <param name="allowed" vsli:raw="A Boolean value that specifies whether to enable or disable NAT traversal.">NAT 통과를 설정 또는 해제할지를 지정하는 부울 값입니다.</param>
      <exception cref="T:System.InvalidOperationException" vsli:raw="The &lt;see cref=&quot;M:System.Net.Sockets.TcpListener.AllowNatTraversal(System.Boolean)&quot; /&gt; method was called after calling the &lt;see cref=&quot;M:System.Net.Sockets.TcpListener.Start&quot; /&gt; method">
        <see cref="M:System.Net.Sockets.TcpListener.AllowNatTraversal(System.Boolean)" /> 메서드를 호출한 후 <see cref="M:System.Net.Sockets.TcpListener.Start" /> 메서드를 호출한 경우입니다.</exception>
    </member>
    <member name="M:System.Net.Sockets.TcpListener.BeginAcceptSocket(System.AsyncCallback,System.Object)">
      <summary vsli:raw="Begins an asynchronous operation to accept an incoming connection attempt.">들어오는 연결 시도를 받아들이는 비동기 작업을 시작합니다.</summary>
      <param name="callback" vsli:raw="An &lt;see cref=&quot;T:System.AsyncCallback&quot; /&gt; delegate that references the method to invoke when the operation is complete.">작업이 완료되었을 때 호출할 메서드를 참조하는 <see cref="T:System.AsyncCallback" /> 대리자입니다.</param>
      <param name="state" vsli:raw="A user-defined object containing information about the accept operation. This object is passed to the &lt;paramref name=&quot;callback&quot; /&gt; delegate when the operation is complete.">연결을 받아들이는 작업에 대한 정보가 들어 있는 사용자 정의 개체입니다. 이 개체는 작업이 완료되면 <paramref name="callback" /> 대리자에게 전달됩니다.</param>
      <exception cref="T:System.Net.Sockets.SocketException" vsli:raw="An error occurred while attempting to access the socket.">소켓에 액세스하려고 시도하는 동안 오류가 발생한 경우.</exception>
      <exception cref="T:System.ObjectDisposedException" vsli:raw="The &lt;see cref=&quot;T:System.Net.Sockets.Socket&quot; /&gt; has been closed.">
        <see cref="T:System.Net.Sockets.Socket" />이 닫혔습니다.</exception>
      <returns vsli:raw="An &lt;see cref=&quot;T:System.IAsyncResult&quot; /&gt; that references the asynchronous creation of the &lt;see cref=&quot;T:System.Net.Sockets.Socket&quot; /&gt;.">
        <see cref="T:System.IAsyncResult" />의 비동기 생성을 참조하는 <see cref="T:System.Net.Sockets.Socket" />입니다.</returns>
    </member>
    <member name="M:System.Net.Sockets.TcpListener.BeginAcceptTcpClient(System.AsyncCallback,System.Object)">
      <summary vsli:raw="Begins an asynchronous operation to accept an incoming connection attempt.">들어오는 연결 시도를 받아들이는 비동기 작업을 시작합니다.</summary>
      <param name="callback" vsli:raw="An &lt;see cref=&quot;T:System.AsyncCallback&quot; /&gt; delegate that references the method to invoke when the operation is complete.">작업이 완료되었을 때 호출할 메서드를 참조하는 <see cref="T:System.AsyncCallback" /> 대리자입니다.</param>
      <param name="state" vsli:raw="A user-defined object containing information about the accept operation. This object is passed to the &lt;paramref name=&quot;callback&quot; /&gt; delegate when the operation is complete.">연결을 받아들이는 작업에 대한 정보가 들어 있는 사용자 정의 개체입니다. 이 개체는 작업이 완료되면 <paramref name="callback" /> 대리자에게 전달됩니다.</param>
      <exception cref="T:System.Net.Sockets.SocketException" vsli:raw="An error occurred while attempting to access the socket.">소켓에 액세스하려고 시도하는 동안 오류가 발생한 경우.</exception>
      <exception cref="T:System.ObjectDisposedException" vsli:raw="The &lt;see cref=&quot;T:System.Net.Sockets.Socket&quot; /&gt; has been closed.">
        <see cref="T:System.Net.Sockets.Socket" />이 닫혔습니다.</exception>
      <returns vsli:raw="An &lt;see cref=&quot;T:System.IAsyncResult&quot; /&gt; that references the asynchronous creation of the &lt;see cref=&quot;T:System.Net.Sockets.TcpClient&quot; /&gt;.">
        <see cref="T:System.IAsyncResult" />의 비동기 생성을 참조하는 <see cref="T:System.Net.Sockets.TcpClient" />입니다.</returns>
    </member>
    <member name="M:System.Net.Sockets.TcpListener.Create(System.Int32)">
      <summary vsli:raw="Creates a new &lt;see cref=&quot;T:System.Net.Sockets.TcpListener&quot; /&gt; instance to listen on the specified port.">지정된 포트에서 수신 대기할 새 <see cref="T:System.Net.Sockets.TcpListener" /> 인스턴스를 만듭니다.</summary>
      <param name="port" vsli:raw="The port on which to listen for incoming connection attempts.">들어오는 연결 시도를 수신하는 데 사용되는 포트입니다.</param>
      <returns vsli:raw="A new &lt;see cref=&quot;T:System.Net.Sockets.TcpListener&quot; /&gt; instance to listen on the specified port.">지정된 포트에서 수신 대기할 새 <see cref="T:System.Net.Sockets.TcpListener" /> 인스턴스입니다.</returns>
    </member>
    <member name="M:System.Net.Sockets.TcpListener.EndAcceptSocket(System.IAsyncResult)">
      <summary vsli:raw="Asynchronously accepts an incoming connection attempt and creates a new &lt;see cref=&quot;T:System.Net.Sockets.Socket&quot; /&gt; to handle remote host communication.">들어오는 연결 시도를 비동기적으로 받아들이고 원격 호스트 통신을 처리할 새로운 <see cref="T:System.Net.Sockets.Socket" />을 만듭니다.</summary>
      <param name="asyncResult" vsli:raw="An &lt;see cref=&quot;T:System.IAsyncResult&quot; /&gt; returned by a call to the &lt;see cref=&quot;M:System.Net.Sockets.TcpListener.BeginAcceptSocket(System.AsyncCallback,System.Object)&quot; /&gt; method.">
        <see cref="T:System.IAsyncResult" /> 메서드를 호출하여 반환된 <see cref="M:System.Net.Sockets.TcpListener.BeginAcceptSocket(System.AsyncCallback,System.Object)" />입니다.</param>
      <exception cref="T:System.ObjectDisposedException" vsli:raw="The underlying &lt;see cref=&quot;T:System.Net.Sockets.Socket&quot; /&gt; has been closed.">내부 <see cref="T:System.Net.Sockets.Socket" />이 닫힌 경우</exception>
      <exception cref="T:System.ArgumentNullException" vsli:raw="The &lt;paramref name=&quot;asyncResult&quot; /&gt; parameter is &lt;see langword=&quot;null&quot; /&gt;.">
        <paramref name="asyncResult" /> 매개 변수가 <see langword="null" />인 경우</exception>
      <exception cref="T:System.ArgumentException" vsli:raw="The &lt;paramref name=&quot;asyncResult&quot; /&gt; parameter was not created by a call to the &lt;see cref=&quot;M:System.Net.Sockets.TcpListener.BeginAcceptSocket(System.AsyncCallback,System.Object)&quot; /&gt; method.">
        <see cref="M:System.Net.Sockets.TcpListener.BeginAcceptSocket(System.AsyncCallback,System.Object)" /> 메서드를 호출하여 <paramref name="asyncResult" /> 매개 변수를 만들지 못한 경우</exception>
      <exception cref="T:System.InvalidOperationException" vsli:raw="The &lt;see cref=&quot;M:System.Net.Sockets.TcpListener.EndAcceptSocket(System.IAsyncResult)&quot; /&gt; method was previously called.">
        <see cref="M:System.Net.Sockets.TcpListener.EndAcceptSocket(System.IAsyncResult)" /> 메서드가 이미 호출된 경우</exception>
      <exception cref="T:System.Net.Sockets.SocketException" vsli:raw="An error occurred while attempting to access the &lt;see cref=&quot;T:System.Net.Sockets.Socket&quot; /&gt;.">
        <see cref="T:System.Net.Sockets.Socket" />에 액세스하려고 시도하는 동안 오류가 발생한 경우.</exception>
      <returns vsli:raw="A &lt;see cref=&quot;T:System.Net.Sockets.Socket&quot; /&gt;.  &#xA;  &#xA; The &lt;see cref=&quot;T:System.Net.Sockets.Socket&quot; /&gt; used to send and receive data.">
        <see cref="T:System.Net.Sockets.Socket" />  
  
데이터를 보내고 받는 데 사용되는 <see cref="T:System.Net.Sockets.Socket" />입니다.</returns>
    </member>
    <member name="M:System.Net.Sockets.TcpListener.EndAcceptTcpClient(System.IAsyncResult)">
      <summary vsli:raw="Asynchronously accepts an incoming connection attempt and creates a new &lt;see cref=&quot;T:System.Net.Sockets.TcpClient&quot; /&gt; to handle remote host communication.">들어오는 연결 시도를 비동기적으로 받아들이고 원격 호스트 통신을 처리할 새로운 <see cref="T:System.Net.Sockets.TcpClient" />을 만듭니다.</summary>
      <param name="asyncResult" vsli:raw="An &lt;see cref=&quot;T:System.IAsyncResult&quot; /&gt; returned by a call to the &lt;see cref=&quot;M:System.Net.Sockets.TcpListener.BeginAcceptTcpClient(System.AsyncCallback,System.Object)&quot; /&gt; method.">
        <see cref="T:System.IAsyncResult" /> 메서드를 호출하여 반환된 <see cref="M:System.Net.Sockets.TcpListener.BeginAcceptTcpClient(System.AsyncCallback,System.Object)" />입니다.</param>
      <returns vsli:raw="A &lt;see cref=&quot;T:System.Net.Sockets.TcpClient&quot; /&gt;.  &#xA;  &#xA; The &lt;see cref=&quot;T:System.Net.Sockets.TcpClient&quot; /&gt; used to send and receive data.">
        <see cref="T:System.Net.Sockets.TcpClient" />  
  
데이터를 보내고 받는 데 사용되는 <see cref="T:System.Net.Sockets.TcpClient" />입니다.</returns>
    </member>
    <member name="M:System.Net.Sockets.TcpListener.Pending">
      <summary vsli:raw="Determines if there are pending connection requests.">보류 중인 연결 요청이 있는지 여부를 확인합니다.</summary>
      <exception cref="T:System.InvalidOperationException" vsli:raw="The listener has not been started with a call to &lt;see cref=&quot;M:System.Net.Sockets.TcpListener.Start&quot; /&gt;.">
        <see cref="M:System.Net.Sockets.TcpListener.Start" />의 호출과 함께 수신기가 시작하지 않은 경우</exception>
      <returns vsli:raw="&lt;see langword=&quot;true&quot; /&gt; if connections are pending; otherwise, &lt;see langword=&quot;false&quot; /&gt;.">연결이 보류 중이면 <see langword="true" />이고, 그렇지 않으면 <see langword="false" />입니다.</returns>
    </member>
    <member name="M:System.Net.Sockets.TcpListener.Start">
      <summary vsli:raw="Starts listening for incoming connection requests.">들어오는 연결 요청의 수신을 시작합니다.</summary>
      <exception cref="T:System.Net.Sockets.SocketException" vsli:raw="Use the &lt;see cref=&quot;P:System.Net.Sockets.SocketException.ErrorCode&quot; /&gt; property to obtain the specific error code. When you have obtained this code, you can refer to the Windows Sockets version 2 API error code documentation for a detailed description of the error.">
        <see cref="P:System.Net.Sockets.SocketException.ErrorCode" /> 속성을 사용하여 특정 오류 코드를 가져오십시오. 이 코드를 가져온 다음, Windows 소켓 버전 2 API 오류 코드 설명서에서 오류에 대한 자세한 설명을 참조할 수 있습니다.</exception>
    </member>
    <member name="M:System.Net.Sockets.TcpListener.Start(System.Int32)">
      <summary vsli:raw="Starts listening for incoming connection requests with a maximum number of pending connection.">최대 보류 연결 수로 들어오는 연결 요청에 대한 수신을 시작합니다.</summary>
      <param name="backlog" vsli:raw="The maximum length of the pending connections queue.">보류 중인 연결 큐의 최대 길이입니다.</param>
      <exception cref="T:System.Net.Sockets.SocketException" vsli:raw="An error occurred while accessing the socket.">소켓에 액세스하는 동안 오류가 발생한 경우.</exception>
      <exception cref="T:System.ArgumentOutOfRangeException" vsli:raw="The &lt;paramref name=&quot;backlog&quot; /&gt; parameter is less than zero or exceeds the maximum number of permitted connections.">
        <paramref name="backlog" /> 매개 변수가 0보다 작거나 허용된 최대 연결 수를 초과한 경우.</exception>
      <exception cref="T:System.InvalidOperationException" vsli:raw="The underlying &lt;see cref=&quot;T:System.Net.Sockets.Socket&quot; /&gt; is null.">내부 <see cref="T:System.Net.Sockets.Socket" />이 null인 경우</exception>
    </member>
    <member name="M:System.Net.Sockets.TcpListener.Stop">
      <summary vsli:raw="Closes the listener.">수신기를 닫습니다.</summary>
      <exception cref="T:System.Net.Sockets.SocketException" vsli:raw="Use the &lt;see cref=&quot;P:System.Net.Sockets.SocketException.ErrorCode&quot; /&gt; property to obtain the specific error code. When you have obtained this code, you can refer to the Windows Sockets version 2 API error code documentation for a detailed description of the error.">
        <see cref="P:System.Net.Sockets.SocketException.ErrorCode" /> 속성을 사용하여 특정 오류 코드를 가져오십시오. 이 코드를 가져온 다음, Windows 소켓 버전 2 API 오류 코드 설명서에서 오류에 대한 자세한 설명을 참조할 수 있습니다.</exception>
    </member>
    <member name="P:System.Net.Sockets.TcpListener.Active">
      <summary vsli:raw="Gets a value that indicates whether &lt;see cref=&quot;T:System.Net.Sockets.TcpListener&quot; /&gt; is actively listening for client connections.">
        <see cref="T:System.Net.Sockets.TcpListener" />가 클라이언트 연결을 실제로 수신하고 있는지 여부를 나타내는 값을 가져옵니다.</summary>
      <returns vsli:raw="&lt;see langword=&quot;true&quot; /&gt; if &lt;see cref=&quot;T:System.Net.Sockets.TcpListener&quot; /&gt; is actively listening; otherwise, &lt;see langword=&quot;false&quot; /&gt;.">
        <see cref="T:System.Net.Sockets.TcpListener" />가 실제로 수신하고 있으면 <see langword="true" />이고, 그렇지 않으면 <see langword="false" />입니다.</returns>
    </member>
    <member name="P:System.Net.Sockets.TcpListener.ExclusiveAddressUse">
      <summary vsli:raw="Gets or sets a &lt;see cref=&quot;T:System.Boolean&quot; /&gt; value that specifies whether the &lt;see cref=&quot;T:System.Net.Sockets.TcpListener&quot; /&gt; allows only one underlying socket to listen to a specific port.">
        <see cref="T:System.Boolean" />가 특정 포트를 하나의 내부 소켓에서만 수신하는 것을 허용하는지 여부를 지정하는 <see cref="T:System.Net.Sockets.TcpListener" /> 값을 가져오거나 설정합니다.</summary>
      <exception cref="T:System.InvalidOperationException" vsli:raw="The &lt;see cref=&quot;T:System.Net.Sockets.TcpListener&quot; /&gt; has been started. Call the &lt;see cref=&quot;M:System.Net.Sockets.TcpListener.Stop&quot; /&gt; method and then set the &lt;see cref=&quot;P:System.Net.Sockets.Socket.ExclusiveAddressUse&quot; /&gt; property.">
        <see cref="T:System.Net.Sockets.TcpListener" />가 시작된 경우. <see cref="M:System.Net.Sockets.TcpListener.Stop" /> 메서드를 호출한 다음 <see cref="P:System.Net.Sockets.Socket.ExclusiveAddressUse" /> 속성을 설정하십시오.</exception>
      <exception cref="T:System.Net.Sockets.SocketException" vsli:raw="An error occurred when attempting to access the underlying socket.">내부 소켓에 액세스하려고 시도하는 동안 오류가 발생한 경우.</exception>
      <exception cref="T:System.ObjectDisposedException" vsli:raw="The underlying &lt;see cref=&quot;T:System.Net.Sockets.Socket&quot; /&gt; has been closed.">내부 <see cref="T:System.Net.Sockets.Socket" />이 닫힌 경우</exception>
      <returns vsli:raw="&lt;see langword=&quot;true&quot; /&gt; if the &lt;see cref=&quot;T:System.Net.Sockets.TcpListener&quot; /&gt; allows only one &lt;see cref=&quot;T:System.Net.Sockets.TcpListener&quot; /&gt; to listen to a specific port; otherwise, &lt;see langword=&quot;false&quot; /&gt;. The default is &lt;see langword=&quot;true&quot; /&gt; for Windows Server 2003 and Windows XP Service Pack 2 and later, and &lt;see langword=&quot;false&quot; /&gt; for all other versions.">
        <see cref="T:System.Net.Sockets.TcpListener" />가 특정 포트를 하나의 <see cref="T:System.Net.Sockets.TcpListener" />에서만 수신하는 것을 허용하면 <see langword="true" />이고, 그렇지 않으면 <see langword="false" />입니다. Windows Server 2003 및 Windows XP 서비스 팩 2 이상에서는 기본값이 <see langword="true" />이고, 다른 모든 버전에서는 <see langword="false" />입니다.</returns>
    </member>
    <member name="P:System.Net.Sockets.TcpListener.LocalEndpoint">
      <summary vsli:raw="Gets the underlying &lt;see cref=&quot;T:System.Net.EndPoint&quot; /&gt; of the current &lt;see cref=&quot;T:System.Net.Sockets.TcpListener&quot; /&gt;.">현재 <see cref="T:System.Net.EndPoint" />의 내부 <see cref="T:System.Net.Sockets.TcpListener" />를 가져옵니다.</summary>
      <returns vsli:raw="The &lt;see cref=&quot;T:System.Net.EndPoint&quot; /&gt; to which the &lt;see cref=&quot;T:System.Net.Sockets.Socket&quot; /&gt; is bound.">
        <see cref="T:System.Net.EndPoint" />이 바인딩될 <see cref="T:System.Net.Sockets.Socket" />입니다.</returns>
    </member>
    <member name="P:System.Net.Sockets.TcpListener.Server">
      <summary vsli:raw="Gets the underlying network &lt;see cref=&quot;T:System.Net.Sockets.Socket&quot; /&gt;.">내부 네트워크 <see cref="T:System.Net.Sockets.Socket" />을 가져옵니다.</summary>
      <returns vsli:raw="The underlying &lt;see cref=&quot;T:System.Net.Sockets.Socket&quot; /&gt;.">내부 <see cref="T:System.Net.Sockets.Socket" />입니다.</returns>
    </member>
    <member name="T:System.Net.Sockets.TransmitFileOptions">
      <summary vsli:raw="The &lt;see cref=&quot;T:System.Net.Sockets.TransmitFileOptions&quot; /&gt; enumeration defines values used in file transfer requests.">
        <see cref="T:System.Net.Sockets.TransmitFileOptions" /> 열거형은 파일 전송 요청에 사용되는 값을 정의합니다.</summary>
    </member>
    <member name="F:System.Net.Sockets.TransmitFileOptions.Disconnect">
      <summary vsli:raw="Start a transport-level disconnect after all the file data has been queued for transmission. When used with &lt;see cref=&quot;F:System.Net.Sockets.TransmitFileOptions.ReuseSocket&quot; /&gt;, these flags return the socket to a disconnected, reusable state after the file has been transmitted.">전송을 위해 모든 파일 데이터를 큐에 대기시킨 후 전송 수준에서 연결 끊기를 시작합니다. <see cref="F:System.Net.Sockets.TransmitFileOptions.ReuseSocket" />과 함께 사용하면 이 플래그는 파일이 전송된 후에 해당 소켓의 연결을 끊고 다시 사용할 수 있는 상태로 되돌립니다.</summary>
    </member>
    <member name="F:System.Net.Sockets.TransmitFileOptions.ReuseSocket">
      <summary vsli:raw="The socket handle may be reused when the request completes. This flag is valid only if &lt;see cref=&quot;F:System.Net.Sockets.TransmitFileOptions.Disconnect&quot; /&gt; is also specified. When used with &lt;see cref=&quot;F:System.Net.Sockets.TransmitFileOptions.Disconnect&quot; /&gt;, these flags return the socket to a disconnected, reusable state after the file has been transmitted.">요청이 완료되면 소켓 핸들을 다시 사용할 수 있습니다. 이 플래그는 <see cref="F:System.Net.Sockets.TransmitFileOptions.Disconnect" />도 지정된 경우에만 유효합니다. <see cref="F:System.Net.Sockets.TransmitFileOptions.Disconnect" />과 함께 사용하면 이 플래그는 파일이 전송된 후에 해당 소켓의 연결을 끊고 다시 사용할 수 있는 상태로 되돌립니다.</summary>
    </member>
    <member name="F:System.Net.Sockets.TransmitFileOptions.UseDefaultWorkerThread">
      <summary vsli:raw="Use the default thread to process long file transfer requests.">기본 스레드를 사용하여 긴 파일 전송 요청을 처리합니다.</summary>
    </member>
    <member name="F:System.Net.Sockets.TransmitFileOptions.UseKernelApc">
      <summary vsli:raw="Use kernel asynchronous procedure calls (APCs) instead of worker threads to process long file transfer requests. Long requests are defined as requests that require more than a single read from the file or a cache; the request therefore depends on the size of the file and the specified length of the send packet.">작업자 스레드 대신 커널 APC(Asynchronous Procedure Call)를 사용하여 긴 파일 전송 요청을 처리합니다. 긴 요청은 파일 또는 캐시에서 두 번 이상 읽어야 하는 요청으로 정의됩니다. 따라서 이 요청은 파일 크기와 지정된 송신 패킷 길이에 따라 달라집니다.</summary>
    </member>
    <member name="F:System.Net.Sockets.TransmitFileOptions.UseSystemThread">
      <summary vsli:raw="Use system threads to process long file transfer requests.">시스템 스레드를 사용하여 긴 파일 전송 요청을 처리합니다.</summary>
    </member>
    <member name="F:System.Net.Sockets.TransmitFileOptions.WriteBehind">
      <summary vsli:raw="Complete the file transfer request immediately, without pending. If this flag is specified and the file transfer succeeds, the data has been accepted by the system but not necessarily acknowledged by the remote end. Do not use this flag with the &lt;see cref=&quot;F:System.Net.Sockets.TransmitFileOptions.Disconnect&quot; /&gt; and &lt;see cref=&quot;F:System.Net.Sockets.TransmitFileOptions.ReuseSocket&quot; /&gt; flags.">파일 전송 요청을 보류하지 않고 즉시 완료합니다. 이 플래그를 지정한 경우 파일이 성공적으로 전송되면 시스템에서 데이터를 받아들인 것이지만 원격 끝점에서 데이터를 승인했는지 여부는 보장할 수 없습니다. 이 플래그는 <see cref="F:System.Net.Sockets.TransmitFileOptions.Disconnect" /> 및 <see cref="F:System.Net.Sockets.TransmitFileOptions.ReuseSocket" /> 플래그와 함께 사용하지 마십시오.</summary>
    </member>
    <member name="T:System.Net.Sockets.UdpClient">
      <summary vsli:raw="Provides User Datagram Protocol (UDP) network services.">UDP(User Datagram Protocol) 네트워크 서비스를 제공합니다.</summary>
    </member>
    <member name="M:System.Net.Sockets.UdpClient.#ctor">
      <summary vsli:raw="Initializes a new instance of the &lt;see cref=&quot;T:System.Net.Sockets.UdpClient&quot; /&gt; class.">
        <see cref="T:System.Net.Sockets.UdpClient" /> 클래스의 새 인스턴스를 초기화합니다.</summary>
      <exception cref="T:System.Net.Sockets.SocketException" vsli:raw="An error occurred when accessing the socket.">소켓에 액세스할 때 오류가 발생했습니다.</exception>
    </member>
    <member name="M:System.Net.Sockets.UdpClient.#ctor(System.Int32)">
      <summary vsli:raw="Initializes a new instance of the &lt;see cref=&quot;T:System.Net.Sockets.UdpClient&quot; /&gt; class and binds it to the local port number provided.">
        <see cref="T:System.Net.Sockets.UdpClient" /> 클래스의 새 인스턴스를 초기화하고 해당 인스턴스를 제공되는 로컬 포트 번호에 바인딩합니다.</summary>
      <param name="port" vsli:raw="The local port number from which you intend to communicate.">통신할 로컬 포트 번호입니다.</param>
      <exception cref="T:System.ArgumentOutOfRangeException" vsli:raw="The &lt;paramref name=&quot;port&quot; /&gt; parameter is greater than &lt;see cref=&quot;F:System.Net.IPEndPoint.MaxPort&quot; /&gt; or less than &lt;see cref=&quot;F:System.Net.IPEndPoint.MinPort&quot; /&gt;.">
        <paramref name="port" /> 매개 변수가 <see cref="F:System.Net.IPEndPoint.MaxPort" />보다 크거나 <see cref="F:System.Net.IPEndPoint.MinPort" />보다 작은 경우</exception>
      <exception cref="T:System.Net.Sockets.SocketException" vsli:raw="An error occurred when accessing the socket.">소켓에 액세스할 때 오류가 발생했습니다.</exception>
    </member>
    <member name="M:System.Net.Sockets.UdpClient.#ctor(System.Int32,System.Net.Sockets.AddressFamily)">
      <summary vsli:raw="Initializes a new instance of the &lt;see cref=&quot;T:System.Net.Sockets.UdpClient&quot; /&gt; class and binds it to the local port number provided.">
        <see cref="T:System.Net.Sockets.UdpClient" /> 클래스의 새 인스턴스를 초기화하고 해당 인스턴스를 제공되는 로컬 포트 번호에 바인딩합니다.</summary>
      <param name="port" vsli:raw="The port on which to listen for incoming connection attempts.">들어오는 연결 시도를 수신하는 데 사용되는 포트입니다.</param>
      <param name="family" vsli:raw="One of the &lt;see cref=&quot;T:System.Net.Sockets.AddressFamily&quot; /&gt; values that specifies the addressing scheme of the socket.">소켓의 주소 지정 체계를 지정하는 <see cref="T:System.Net.Sockets.AddressFamily" /> 값 중 하나입니다.</param>
      <exception cref="T:System.ArgumentException" vsli:raw="&lt;paramref name=&quot;family&quot; /&gt; is not &lt;see cref=&quot;F:System.Net.Sockets.AddressFamily.InterNetwork&quot; /&gt; or &lt;see cref=&quot;F:System.Net.Sockets.AddressFamily.InterNetworkV6&quot; /&gt;.">
        <paramref name="family" />이 <see cref="F:System.Net.Sockets.AddressFamily.InterNetwork" /> 또는 <see cref="F:System.Net.Sockets.AddressFamily.InterNetworkV6" />이 아닌 경우</exception>
      <exception cref="T:System.ArgumentOutOfRangeException" vsli:raw="&lt;paramref name=&quot;port&quot; /&gt; is greater than &lt;see cref=&quot;F:System.Net.IPEndPoint.MaxPort&quot; /&gt; or less than &lt;see cref=&quot;F:System.Net.IPEndPoint.MinPort&quot; /&gt;.">
        <paramref name="port" />가 <see cref="F:System.Net.IPEndPoint.MaxPort" />보다 크거나 <see cref="F:System.Net.IPEndPoint.MinPort" />보다 작습니다.</exception>
      <exception cref="T:System.Net.Sockets.SocketException" vsli:raw="An error occurred when accessing the socket.">소켓에 액세스할 때 오류가 발생했습니다.</exception>
    </member>
    <member name="M:System.Net.Sockets.UdpClient.#ctor(System.Net.IPEndPoint)">
      <summary vsli:raw="Initializes a new instance of the &lt;see cref=&quot;T:System.Net.Sockets.UdpClient&quot; /&gt; class and binds it to the specified local endpoint.">
        <see cref="T:System.Net.Sockets.UdpClient" /> 클래스의 새 인스턴스를 초기화하고 해당 인스턴스를 지정된 로컬 엔드포인트에 바인딩합니다.</summary>
      <param name="localEP" vsli:raw="An &lt;see cref=&quot;T:System.Net.IPEndPoint&quot; /&gt; that represents the local endpoint to which you bind the UDP connection.">UDP 연결을 바인딩할 로컬 엔드포인트를 나타내는 <see cref="T:System.Net.IPEndPoint" />입니다.</param>
      <exception cref="T:System.ArgumentNullException" vsli:raw="&lt;paramref name=&quot;localEP&quot; /&gt; is &lt;see langword=&quot;null&quot; /&gt;.">
        <paramref name="localEP" />이(가) <see langword="null" />인 경우</exception>
      <exception cref="T:System.Net.Sockets.SocketException" vsli:raw="An error occurred when accessing the socket.">소켓에 액세스할 때 오류가 발생했습니다.</exception>
    </member>
    <member name="M:System.Net.Sockets.UdpClient.#ctor(System.Net.Sockets.AddressFamily)">
      <summary vsli:raw="Initializes a new instance of the &lt;see cref=&quot;T:System.Net.Sockets.UdpClient&quot; /&gt; class.">
        <see cref="T:System.Net.Sockets.UdpClient" /> 클래스의 새 인스턴스를 초기화합니다.</summary>
      <param name="family" vsli:raw="One of the &lt;see cref=&quot;T:System.Net.Sockets.AddressFamily&quot; /&gt; values that specifies the addressing scheme of the socket.">소켓의 주소 지정 체계를 지정하는 <see cref="T:System.Net.Sockets.AddressFamily" /> 값 중 하나입니다.</param>
      <exception cref="T:System.ArgumentException" vsli:raw="&lt;paramref name=&quot;family&quot; /&gt; is not &lt;see cref=&quot;F:System.Net.Sockets.AddressFamily.InterNetwork&quot; /&gt; or &lt;see cref=&quot;F:System.Net.Sockets.AddressFamily.InterNetworkV6&quot; /&gt;.">
        <paramref name="family" />이 <see cref="F:System.Net.Sockets.AddressFamily.InterNetwork" /> 또는 <see cref="F:System.Net.Sockets.AddressFamily.InterNetworkV6" />이 아닌 경우</exception>
      <exception cref="T:System.Net.Sockets.SocketException" vsli:raw="An error occurred when accessing the socket.">소켓에 액세스할 때 오류가 발생했습니다.</exception>
    </member>
    <member name="M:System.Net.Sockets.UdpClient.#ctor(System.String,System.Int32)">
      <summary vsli:raw="Initializes a new instance of the &lt;see cref=&quot;T:System.Net.Sockets.UdpClient&quot; /&gt; class and establishes a default remote host.">
        <see cref="T:System.Net.Sockets.UdpClient" /> 클래스의 새 인스턴스를 초기화하고 기본 원격 호스트를 설정합니다.</summary>
      <param name="hostname" vsli:raw="The name of the remote DNS host to which you intend to connect.">연결할 원격 DNS 호스트의 이름입니다.</param>
      <param name="port" vsli:raw="The remote port number to which you intend to connect.">연결할 원격 포트 번호입니다.</param>
      <exception cref="T:System.ArgumentNullException" vsli:raw="&lt;paramref name=&quot;hostname&quot; /&gt; is &lt;see langword=&quot;null&quot; /&gt;.">
        <paramref name="hostname" />이(가) <see langword="null" />인 경우</exception>
      <exception cref="T:System.ArgumentOutOfRangeException" vsli:raw="&lt;paramref name=&quot;port&quot; /&gt; is not between &lt;see cref=&quot;F:System.Net.IPEndPoint.MinPort&quot; /&gt; and &lt;see cref=&quot;F:System.Net.IPEndPoint.MaxPort&quot; /&gt;.">
        <paramref name="port" />가 <see cref="F:System.Net.IPEndPoint.MinPort" />와 <see cref="F:System.Net.IPEndPoint.MaxPort" /> 사이에 없는 경우</exception>
      <exception cref="T:System.Net.Sockets.SocketException" vsli:raw="An error occurred when accessing the socket.">소켓에 액세스할 때 오류가 발생했습니다.</exception>
    </member>
    <member name="M:System.Net.Sockets.UdpClient.AllowNatTraversal(System.Boolean)">
      <summary vsli:raw="Enables or disables Network Address Translation (NAT) traversal on a &lt;see cref=&quot;T:System.Net.Sockets.UdpClient&quot; /&gt; instance.">
        <see cref="T:System.Net.Sockets.UdpClient" /> 인스턴스에 대해 NAT(Network Address Translation) 통과를 설정하거나 해제합니다.</summary>
      <param name="allowed" vsli:raw="A Boolean value that specifies whether to enable or disable NAT traversal.">NAT 통과를 설정 또는 해제할지를 지정하는 부울 값입니다.</param>
    </member>
    <member name="M:System.Net.Sockets.UdpClient.BeginReceive(System.AsyncCallback,System.Object)">
      <summary vsli:raw="Receives a datagram from a remote host asynchronously.">데이터그램을 원격 호스트에서 비동기적으로 받습니다.</summary>
      <param name="requestCallback" vsli:raw="An &lt;see cref=&quot;T:System.AsyncCallback&quot; /&gt; delegate that references the method to invoke when the operation is complete.">작업이 완료되었을 때 호출할 메서드를 참조하는 <see cref="T:System.AsyncCallback" /> 대리자입니다.</param>
      <param name="state" vsli:raw="A user-defined object that contains information about the receive operation. This object is passed to the &lt;paramref name=&quot;requestCallback&quot; /&gt; delegate when the operation is complete.">수신 작업에 대한 정보가 들어 있는 사용자 정의 개체입니다. 이 개체는 작업이 완료되면 <paramref name="requestCallback" /> 대리자에게 전달됩니다.</param>
      <returns vsli:raw="An &lt;see cref=&quot;T:System.IAsyncResult&quot; /&gt; object that references the asynchronous receive.">비동기 수신을 참조하는 <see cref="T:System.IAsyncResult" /> 개체입니다.</returns>
    </member>
    <member name="M:System.Net.Sockets.UdpClient.BeginSend(System.Byte[],System.Int32,System.AsyncCallback,System.Object)">
      <summary vsli:raw="Sends a datagram to a remote host asynchronously. The destination was specified previously by a call to &lt;see cref=&quot;Overload:System.Net.Sockets.UdpClient.Connect&quot; /&gt;.">데이터그램을 원격 호스트에 비동기적으로 보냅니다. 대상은 이전에 <see cref="Overload:System.Net.Sockets.UdpClient.Connect" />를 호출할 때 지정됩니다.</summary>
      <param name="datagram" vsli:raw="A &lt;see cref=&quot;T:System.Byte&quot; /&gt; array that contains the data to be sent.">보낼 데이터가 들어 있는 <see cref="T:System.Byte" /> 배열입니다.</param>
      <param name="bytes" vsli:raw="The number of bytes to send.">보낼 바이트 수입니다.</param>
      <param name="requestCallback" vsli:raw="An &lt;see cref=&quot;T:System.AsyncCallback&quot; /&gt; delegate that references the method to invoke when the operation is complete.">작업이 완료되었을 때 호출할 메서드를 참조하는 <see cref="T:System.AsyncCallback" /> 대리자입니다.</param>
      <param name="state" vsli:raw="A user-defined object that contains information about the send operation. This object is passed to the &lt;paramref name=&quot;requestCallback&quot; /&gt; delegate when the operation is complete.">보내기 작업에 대한 정보가 들어 있는 사용자 정의 개체입니다. 이 개체는 작업이 완료되면 <paramref name="requestCallback" /> 대리자에게 전달됩니다.</param>
      <returns vsli:raw="An &lt;see cref=&quot;T:System.IAsyncResult&quot; /&gt; object that references the asynchronous send.">비동기 보내기를 참조하는 <see cref="T:System.IAsyncResult" /> 개체입니다.</returns>
    </member>
    <member name="M:System.Net.Sockets.UdpClient.BeginSend(System.Byte[],System.Int32,System.Net.IPEndPoint,System.AsyncCallback,System.Object)">
      <summary vsli:raw="Sends a datagram to a destination asynchronously. The destination is specified by a &lt;see cref=&quot;T:System.Net.EndPoint&quot; /&gt;.">데이터그램을 대상에 비동기적으로 보냅니다. 대상은 <see cref="T:System.Net.EndPoint" />에 지정됩니다.</summary>
      <param name="datagram" vsli:raw="A &lt;see cref=&quot;T:System.Byte&quot; /&gt; array that contains the data to be sent.">보낼 데이터가 들어 있는 <see cref="T:System.Byte" /> 배열입니다.</param>
      <param name="bytes" vsli:raw="The number of bytes to send.">보낼 바이트 수입니다.</param>
      <param name="endPoint" vsli:raw="The &lt;see cref=&quot;T:System.Net.EndPoint&quot; /&gt; that represents the destination for the data.">데이터의 대상을 나타내는 <see cref="T:System.Net.EndPoint" />입니다.</param>
      <param name="requestCallback" vsli:raw="An &lt;see cref=&quot;T:System.AsyncCallback&quot; /&gt; delegate that references the method to invoke when the operation is complete.">작업이 완료되었을 때 호출할 메서드를 참조하는 <see cref="T:System.AsyncCallback" /> 대리자입니다.</param>
      <param name="state" vsli:raw="A user-defined object that contains information about the send operation. This object is passed to the &lt;paramref name=&quot;requestCallback&quot; /&gt; delegate when the operation is complete.">보내기 작업에 대한 정보가 들어 있는 사용자 정의 개체입니다. 이 개체는 작업이 완료되면 <paramref name="requestCallback" /> 대리자에게 전달됩니다.</param>
      <returns vsli:raw="An &lt;see cref=&quot;T:System.IAsyncResult&quot; /&gt; object that references the asynchronous send.">비동기 보내기를 참조하는 <see cref="T:System.IAsyncResult" /> 개체입니다.</returns>
    </member>
    <member name="M:System.Net.Sockets.UdpClient.BeginSend(System.Byte[],System.Int32,System.String,System.Int32,System.AsyncCallback,System.Object)">
      <summary vsli:raw="Sends a datagram to a destination asynchronously. The destination is specified by the host name and port number.">데이터그램을 대상에 비동기적으로 보냅니다. 대상은 호스트 이름과 포트 번호를 사용하여 지정합니다.</summary>
      <param name="datagram" vsli:raw="A &lt;see cref=&quot;T:System.Byte&quot; /&gt; array that contains the data to be sent.">보낼 데이터가 들어 있는 <see cref="T:System.Byte" /> 배열입니다.</param>
      <param name="bytes" vsli:raw="The number of bytes to send.">보낼 바이트 수입니다.</param>
      <param name="hostname" vsli:raw="The destination host.">대상 호스트입니다.</param>
      <param name="port" vsli:raw="The destination port number.">대상 포트 번호입니다.</param>
      <param name="requestCallback" vsli:raw="An &lt;see cref=&quot;T:System.AsyncCallback&quot; /&gt; delegate that references the method to invoke when the operation is complete.">작업이 완료되었을 때 호출할 메서드를 참조하는 <see cref="T:System.AsyncCallback" /> 대리자입니다.</param>
      <param name="state" vsli:raw="A user-defined object that contains information about the send operation. This object is passed to the &lt;paramref name=&quot;requestCallback&quot; /&gt; delegate when the operation is complete.">보내기 작업에 대한 정보가 들어 있는 사용자 정의 개체입니다. 이 개체는 작업이 완료되면 <paramref name="requestCallback" /> 대리자에게 전달됩니다.</param>
      <returns vsli:raw="An &lt;see cref=&quot;T:System.IAsyncResult&quot; /&gt; object that references the asynchronous send.">비동기 보내기를 참조하는 <see cref="T:System.IAsyncResult" /> 개체입니다.</returns>
    </member>
    <member name="M:System.Net.Sockets.UdpClient.Close">
      <summary vsli:raw="Closes the UDP connection.">UDP 연결을 닫습니다.</summary>
      <exception cref="T:System.Net.Sockets.SocketException" vsli:raw="An error occurred when accessing the socket.">소켓에 액세스할 때 오류가 발생했습니다.</exception>
    </member>
    <member name="M:System.Net.Sockets.UdpClient.Connect(System.Net.IPAddress,System.Int32)">
      <summary vsli:raw="Establishes a default remote host using the specified IP address and port number.">지정된 IP 주소와 포트 번호를 사용하여 기본 원격 호스트를 설정합니다.</summary>
      <param name="addr" vsli:raw="The &lt;see cref=&quot;T:System.Net.IPAddress&quot; /&gt; of the remote host to which you intend to send data.">데이터를 보낼 원격 호스트의 <see cref="T:System.Net.IPAddress" />입니다.</param>
      <param name="port" vsli:raw="The port number to which you intend send data.">데이터를 보낼 포트 번호입니다.</param>
      <exception cref="T:System.ObjectDisposedException" vsli:raw="&lt;see cref=&quot;T:System.Net.Sockets.UdpClient&quot; /&gt; is closed.">
        <see cref="T:System.Net.Sockets.UdpClient" />가 닫혀 있습니다.</exception>
      <exception cref="T:System.ArgumentNullException" vsli:raw="&lt;paramref name=&quot;addr&quot; /&gt; is &lt;see langword=&quot;null&quot; /&gt;.">
        <paramref name="addr" />이(가) <see langword="null" />인 경우</exception>
      <exception cref="T:System.ArgumentOutOfRangeException" vsli:raw="&lt;paramref name=&quot;port&quot; /&gt; is not between &lt;see cref=&quot;F:System.Net.IPEndPoint.MinPort&quot; /&gt; and &lt;see cref=&quot;F:System.Net.IPEndPoint.MaxPort&quot; /&gt;.">
        <paramref name="port" />가 <see cref="F:System.Net.IPEndPoint.MinPort" />와 <see cref="F:System.Net.IPEndPoint.MaxPort" /> 사이에 없는 경우</exception>
      <exception cref="T:System.Net.Sockets.SocketException" vsli:raw="An error occurred when accessing the socket.">소켓에 액세스할 때 오류가 발생했습니다.</exception>
    </member>
    <member name="M:System.Net.Sockets.UdpClient.Connect(System.Net.IPEndPoint)">
      <summary vsli:raw="Establishes a default remote host using the specified network endpoint.">지정된 네트워크 엔드포인트를 사용하여 기본 원격 호스트를 설정합니다.</summary>
      <param name="endPoint" vsli:raw="An &lt;see cref=&quot;T:System.Net.IPEndPoint&quot; /&gt; that specifies the network endpoint to which you intend to send data.">데이터를 보낼 네트워크 엔드포인트를 지정하는 <see cref="T:System.Net.IPEndPoint" />입니다.</param>
      <exception cref="T:System.Net.Sockets.SocketException" vsli:raw="An error occurred when accessing the socket.">소켓에 액세스할 때 오류가 발생했습니다.</exception>
      <exception cref="T:System.ArgumentNullException" vsli:raw="&lt;paramref name=&quot;endPoint&quot; /&gt; is &lt;see langword=&quot;null&quot; /&gt;.">
        <paramref name="endPoint" />이(가) <see langword="null" />인 경우</exception>
      <exception cref="T:System.ObjectDisposedException" vsli:raw="The &lt;see cref=&quot;T:System.Net.Sockets.UdpClient&quot; /&gt; is closed.">
        <see cref="T:System.Net.Sockets.UdpClient" />가 닫혔습니다.</exception>
    </member>
    <member name="M:System.Net.Sockets.UdpClient.Connect(System.String,System.Int32)">
      <summary vsli:raw="Establishes a default remote host using the specified host name and port number.">지정된 호스트 이름과 포트 번호를 사용하여 기본 원격 호스트를 설정합니다.</summary>
      <param name="hostname" vsli:raw="The DNS name of the remote host to which you intend send data.">데이터를 보낼 원격 호스트의 DNS 이름입니다.</param>
      <param name="port" vsli:raw="The port number on the remote host to which you intend to send data.">데이터를 보낼 원격 호스트의 포트 번호입니다.</param>
      <exception cref="T:System.ObjectDisposedException" vsli:raw="The &lt;see cref=&quot;T:System.Net.Sockets.UdpClient&quot; /&gt; is closed.">
        <see cref="T:System.Net.Sockets.UdpClient" />가 닫혔습니다.</exception>
      <exception cref="T:System.ArgumentOutOfRangeException" vsli:raw="&lt;paramref name=&quot;port&quot; /&gt; is not between &lt;see cref=&quot;F:System.Net.IPEndPoint.MinPort&quot; /&gt; and &lt;see cref=&quot;F:System.Net.IPEndPoint.MaxPort&quot; /&gt;.">
        <paramref name="port" />가 <see cref="F:System.Net.IPEndPoint.MinPort" />와 <see cref="F:System.Net.IPEndPoint.MaxPort" /> 사이에 없는 경우</exception>
      <exception cref="T:System.Net.Sockets.SocketException" vsli:raw="An error occurred when accessing the socket.">소켓에 액세스할 때 오류가 발생했습니다.</exception>
    </member>
    <member name="M:System.Net.Sockets.UdpClient.Dispose">
      <summary vsli:raw="Releases the managed and unmanaged resources used by the &lt;see cref=&quot;T:System.Net.Sockets.UdpClient&quot; /&gt;.">
        <see cref="T:System.Net.Sockets.UdpClient" />에서 사용하는 관리되는 리소스 및 관리되지 않는 리소스를 해제합니다.</summary>
    </member>
    <member name="M:System.Net.Sockets.UdpClient.Dispose(System.Boolean)">
      <summary vsli:raw="Releases the unmanaged resources used by the &lt;see cref=&quot;T:System.Net.Sockets.UdpClient&quot; /&gt; and optionally releases the managed resources.">
        <see cref="T:System.Net.Sockets.UdpClient" />에서 사용하는 관리되지 않는 리소스를 해제하고, 관리되는 리소스를 선택적으로 해제할 수 있습니다.</summary>
      <param name="disposing" vsli:raw="&lt;see langword=&quot;true&quot; /&gt; to release both managed and unmanaged resources; &lt;see langword=&quot;false&quot; /&gt; to release only unmanaged resources.">관리되는 리소스와 관리되지 않는 리소스를 모두 해제하려면 <see langword="true" />로 설정하고, 관리되지 않는 리소스만 해제하려면 <see langword="false" />로 설정합니다.</param>
    </member>
    <member name="M:System.Net.Sockets.UdpClient.DropMulticastGroup(System.Net.IPAddress)">
      <summary vsli:raw="Leaves a multicast group.">멀티캐스트 그룹을 나갑니다.</summary>
      <param name="multicastAddr" vsli:raw="The &lt;see cref=&quot;T:System.Net.IPAddress&quot; /&gt; of the multicast group to leave.">나갈 멀티캐스트 그룹의 <see cref="T:System.Net.IPAddress" />입니다.</param>
      <exception cref="T:System.ObjectDisposedException" vsli:raw="The underlying &lt;see cref=&quot;T:System.Net.Sockets.Socket&quot; /&gt; has been closed.">내부 <see cref="T:System.Net.Sockets.Socket" />이 닫힌 경우</exception>
      <exception cref="T:System.Net.Sockets.SocketException" vsli:raw="An error occurred when accessing the socket.">소켓에 액세스할 때 오류가 발생했습니다.</exception>
      <exception cref="T:System.ArgumentException" vsli:raw="The IP address is not compatible with the &lt;see cref=&quot;T:System.Net.Sockets.AddressFamily&quot; /&gt; value that defines the addressing scheme of the socket.">IP 주소가 소켓의 주소 지정 체계를 정의하는 <see cref="T:System.Net.Sockets.AddressFamily" /> 값과 호환되지 않는 경우</exception>
      <exception cref="T:System.ArgumentNullException" vsli:raw="&lt;paramref name=&quot;multicastAddr&quot; /&gt; is &lt;see langword=&quot;null&quot; /&gt;.">
        <paramref name="multicastAddr" />이(가) <see langword="null" />인 경우</exception>
    </member>
    <member name="M:System.Net.Sockets.UdpClient.DropMulticastGroup(System.Net.IPAddress,System.Int32)">
      <summary vsli:raw="Leaves a multicast group.">멀티캐스트 그룹을 나갑니다.</summary>
      <param name="multicastAddr" vsli:raw="The &lt;see cref=&quot;T:System.Net.IPAddress&quot; /&gt; of the multicast group to leave.">나갈 멀티캐스트 그룹의 <see cref="T:System.Net.IPAddress" />입니다.</param>
      <param name="ifindex" vsli:raw="The local address of the multicast group to leave.">나갈 멀티캐스트 그룹의 로컬 주소입니다.</param>
      <exception cref="T:System.ObjectDisposedException" vsli:raw="The underlying &lt;see cref=&quot;T:System.Net.Sockets.Socket&quot; /&gt; has been closed.">내부 <see cref="T:System.Net.Sockets.Socket" />이 닫힌 경우</exception>
      <exception cref="T:System.Net.Sockets.SocketException" vsli:raw="An error occurred when accessing the socket.">소켓에 액세스할 때 오류가 발생했습니다.</exception>
      <exception cref="T:System.ArgumentException" vsli:raw="The IP address is not compatible with the &lt;see cref=&quot;T:System.Net.Sockets.AddressFamily&quot; /&gt; value that defines the addressing scheme of the socket.">IP 주소가 소켓의 주소 지정 체계를 정의하는 <see cref="T:System.Net.Sockets.AddressFamily" /> 값과 호환되지 않는 경우</exception>
      <exception cref="T:System.ArgumentNullException" vsli:raw="&lt;paramref name=&quot;multicastAddr&quot; /&gt; is &lt;see langword=&quot;null&quot; /&gt;.">
        <paramref name="multicastAddr" />이(가) <see langword="null" />인 경우</exception>
    </member>
    <member name="M:System.Net.Sockets.UdpClient.EndReceive(System.IAsyncResult,System.Net.IPEndPoint@)">
      <summary vsli:raw="Ends a pending asynchronous receive.">보류 중인 비동기 수신을 끝냅니다.</summary>
      <param name="asyncResult" vsli:raw="An &lt;see cref=&quot;T:System.IAsyncResult&quot; /&gt; object returned by a call to &lt;see cref=&quot;M:System.Net.Sockets.UdpClient.BeginReceive(System.AsyncCallback,System.Object)&quot; /&gt;.">
        <see cref="T:System.IAsyncResult" />를 호출할 때 반환되는 <see cref="M:System.Net.Sockets.UdpClient.BeginReceive(System.AsyncCallback,System.Object)" /> 개체입니다.</param>
      <param name="remoteEP" vsli:raw="The specified remote endpoint.">지정된 원격 엔드포인트입니다.</param>
      <exception cref="T:System.ArgumentNullException" vsli:raw="&lt;paramref name=&quot;asyncResult&quot; /&gt; is &lt;see langword=&quot;null&quot; /&gt;.">
        <paramref name="asyncResult" />이(가) <see langword="null" />인 경우</exception>
      <exception cref="T:System.ArgumentException" vsli:raw="&lt;paramref name=&quot;asyncResult&quot; /&gt; was not returned by a call to the &lt;see cref=&quot;M:System.Net.Sockets.UdpClient.BeginReceive(System.AsyncCallback,System.Object)&quot; /&gt; method.">
        <see cref="M:System.Net.Sockets.UdpClient.BeginReceive(System.AsyncCallback,System.Object)" /> 메서드를 호출했지만 <paramref name="asyncResult" />가 반환되지 않은 경우</exception>
      <exception cref="T:System.InvalidOperationException" vsli:raw="&lt;see cref=&quot;M:System.Net.Sockets.UdpClient.EndReceive(System.IAsyncResult,System.Net.IPEndPoint@)&quot; /&gt; was previously called for the asynchronous read.">
        <see cref="M:System.Net.Sockets.UdpClient.EndReceive(System.IAsyncResult,System.Net.IPEndPoint@)" />가 비동기 읽기를 위해 이미 호출된 경우</exception>
      <exception cref="T:System.Net.Sockets.SocketException" vsli:raw="An error occurred when attempting to access the underlying &lt;see cref=&quot;T:System.Net.Sockets.Socket&quot; /&gt;.">내부 <see cref="T:System.Net.Sockets.Socket" />에 액세스하려고 시도하는 동안 오류가 발생한 경우.</exception>
      <exception cref="T:System.ObjectDisposedException" vsli:raw="The underlying &lt;see cref=&quot;T:System.Net.Sockets.Socket&quot; /&gt; has been closed.">내부 <see cref="T:System.Net.Sockets.Socket" />이 닫힌 경우</exception>
      <returns vsli:raw="If successful, an array of bytes that contains datagram data.">성공하면 데이터그램 데이터가 포함된 바이트 배열입니다.</returns>
    </member>
    <member name="M:System.Net.Sockets.UdpClient.EndSend(System.IAsyncResult)">
      <summary vsli:raw="Ends a pending asynchronous send.">보류 중인 비동기 보내기를 끝냅니다.</summary>
      <param name="asyncResult" vsli:raw="An &lt;see cref=&quot;T:System.IAsyncResult&quot; /&gt; object returned by a call to &lt;see cref=&quot;Overload:System.Net.Sockets.UdpClient.BeginSend&quot; /&gt;.">
        <see cref="T:System.IAsyncResult" />를 호출할 때 반환되는 <see cref="Overload:System.Net.Sockets.UdpClient.BeginSend" /> 개체입니다.</param>
      <exception cref="T:System.ArgumentNullException" vsli:raw="&lt;paramref name=&quot;asyncResult&quot; /&gt; is &lt;see langword=&quot;null&quot; /&gt;.">
        <paramref name="asyncResult" />이(가) <see langword="null" />인 경우</exception>
      <exception cref="T:System.ArgumentException" vsli:raw="&lt;paramref name=&quot;asyncResult&quot; /&gt; was not returned by a call to the &lt;see cref=&quot;M:System.Net.Sockets.Socket.BeginSend(System.Byte[],System.Int32,System.Int32,System.Net.Sockets.SocketFlags,System.AsyncCallback,System.Object)&quot; /&gt; method.">
        <see cref="M:System.Net.Sockets.Socket.BeginSend(System.Byte[],System.Int32,System.Int32,System.Net.Sockets.SocketFlags,System.AsyncCallback,System.Object)" /> 메서드를 호출했지만 <paramref name="asyncResult" />가 반환되지 않은 경우</exception>
      <exception cref="T:System.InvalidOperationException" vsli:raw="&lt;see cref=&quot;M:System.Net.Sockets.Socket.EndSend(System.IAsyncResult)&quot; /&gt; was previously called for the asynchronous read.">
        <see cref="M:System.Net.Sockets.Socket.EndSend(System.IAsyncResult)" />가 비동기 읽기를 위해 이미 호출된 경우</exception>
      <exception cref="T:System.Net.Sockets.SocketException" vsli:raw="An error occurred when attempting to access the underlying socket.">내부 소켓에 액세스하려고 시도하는 동안 오류가 발생한 경우.</exception>
      <exception cref="T:System.ObjectDisposedException" vsli:raw="The underlying &lt;see cref=&quot;T:System.Net.Sockets.Socket&quot; /&gt; has been closed.">내부 <see cref="T:System.Net.Sockets.Socket" />이 닫힌 경우</exception>
      <returns vsli:raw="If successful, the number of bytes sent to the &lt;see cref=&quot;T:System.Net.Sockets.UdpClient&quot; /&gt;.">메서드가 성공할 경우 <see cref="T:System.Net.Sockets.UdpClient" />에 보낸 바이트 수입니다.</returns>
    </member>
    <member name="M:System.Net.Sockets.UdpClient.JoinMulticastGroup(System.Int32,System.Net.IPAddress)">
      <summary vsli:raw="Adds a &lt;see cref=&quot;T:System.Net.Sockets.UdpClient&quot; /&gt; to a multicast group.">멀티캐스트 그룹에 <see cref="T:System.Net.Sockets.UdpClient" />를 추가합니다.</summary>
      <param name="ifindex" vsli:raw="The interface index associated with the local IP address on which to join the multicast group.">멀티캐스트 그룹을 연결할 로컬 IP 주소에 연결된 인터페이스 인덱스입니다.</param>
      <param name="multicastAddr" vsli:raw="The multicast &lt;see cref=&quot;T:System.Net.IPAddress&quot; /&gt; of the group you want to join.">가입할 그룹의 멀티캐스트 <see cref="T:System.Net.IPAddress" />입니다.</param>
      <exception cref="T:System.ObjectDisposedException" vsli:raw="The underlying &lt;see cref=&quot;T:System.Net.Sockets.Socket&quot; /&gt; has been closed.">내부 <see cref="T:System.Net.Sockets.Socket" />이 닫힌 경우</exception>
      <exception cref="T:System.Net.Sockets.SocketException" vsli:raw="An error occurred when accessing the socket.">소켓에 액세스할 때 오류가 발생했습니다.</exception>
    </member>
    <member name="M:System.Net.Sockets.UdpClient.JoinMulticastGroup(System.Net.IPAddress)">
      <summary vsli:raw="Adds a &lt;see cref=&quot;T:System.Net.Sockets.UdpClient&quot; /&gt; to a multicast group.">멀티캐스트 그룹에 <see cref="T:System.Net.Sockets.UdpClient" />를 추가합니다.</summary>
      <param name="multicastAddr" vsli:raw="The multicast &lt;see cref=&quot;T:System.Net.IPAddress&quot; /&gt; of the group you want to join.">가입할 그룹의 멀티캐스트 <see cref="T:System.Net.IPAddress" />입니다.</param>
      <exception cref="T:System.ObjectDisposedException" vsli:raw="The underlying &lt;see cref=&quot;T:System.Net.Sockets.Socket&quot; /&gt; has been closed.">내부 <see cref="T:System.Net.Sockets.Socket" />이 닫힌 경우</exception>
      <exception cref="T:System.Net.Sockets.SocketException" vsli:raw="An error occurred when accessing the socket.">소켓에 액세스할 때 오류가 발생했습니다.</exception>
      <exception cref="T:System.ArgumentException" vsli:raw="The IP address is not compatible with the &lt;see cref=&quot;T:System.Net.Sockets.AddressFamily&quot; /&gt; value that defines the addressing scheme of the socket.">IP 주소가 소켓의 주소 지정 체계를 정의하는 <see cref="T:System.Net.Sockets.AddressFamily" /> 값과 호환되지 않는 경우</exception>
    </member>
    <member name="M:System.Net.Sockets.UdpClient.JoinMulticastGroup(System.Net.IPAddress,System.Int32)">
      <summary vsli:raw="Adds a &lt;see cref=&quot;T:System.Net.Sockets.UdpClient&quot; /&gt; to a multicast group with the specified Time to Live (TTL).">지정된 TTL(Time to Live)을 사용하여 멀티캐스트 그룹에 <see cref="T:System.Net.Sockets.UdpClient" />를 추가합니다.</summary>
      <param name="multicastAddr" vsli:raw="The &lt;see cref=&quot;T:System.Net.IPAddress&quot; /&gt; of the multicast group to join.">가입할 멀티캐스트 그룹의 <see cref="T:System.Net.IPAddress" />입니다.</param>
      <param name="timeToLive" vsli:raw="The Time to Live (TTL), measured in router hops.">라우터 홉 수 단위로 측정된 TTL(Time to Live)입니다.</param>
      <exception cref="T:System.ArgumentOutOfRangeException" vsli:raw="The TTL provided is not between 0 and 255">제공된 TTL이 0에서 255 사이에 없는 경우</exception>
      <exception cref="T:System.ObjectDisposedException" vsli:raw="The underlying &lt;see cref=&quot;T:System.Net.Sockets.Socket&quot; /&gt; has been closed.">내부 <see cref="T:System.Net.Sockets.Socket" />이 닫힌 경우</exception>
      <exception cref="T:System.Net.Sockets.SocketException" vsli:raw="An error occurred when accessing the socket.">소켓에 액세스할 때 오류가 발생했습니다.</exception>
      <exception cref="T:System.ArgumentNullException" vsli:raw="&lt;paramref name=&quot;multicastAddr&quot; /&gt; is &lt;see langword=&quot;null&quot; /&gt;.">
        <paramref name="multicastAddr" />이(가) <see langword="null" />인 경우</exception>
      <exception cref="T:System.ArgumentException" vsli:raw="The IP address is not compatible with the &lt;see cref=&quot;T:System.Net.Sockets.AddressFamily&quot; /&gt; value that defines the addressing scheme of the socket.">IP 주소가 소켓의 주소 지정 체계를 정의하는 <see cref="T:System.Net.Sockets.AddressFamily" /> 값과 호환되지 않는 경우</exception>
    </member>
    <member name="M:System.Net.Sockets.UdpClient.JoinMulticastGroup(System.Net.IPAddress,System.Net.IPAddress)">
      <summary vsli:raw="Adds a &lt;see cref=&quot;T:System.Net.Sockets.UdpClient&quot; /&gt; to a multicast group.">멀티캐스트 그룹에 <see cref="T:System.Net.Sockets.UdpClient" />를 추가합니다.</summary>
      <param name="multicastAddr" vsli:raw="The multicast &lt;see cref=&quot;T:System.Net.IPAddress&quot; /&gt; of the group you want to join.">가입할 그룹의 멀티캐스트 <see cref="T:System.Net.IPAddress" />입니다.</param>
      <param name="localAddress" vsli:raw="The local &lt;see cref=&quot;T:System.Net.IPAddress&quot; /&gt;.">로컬 <see cref="T:System.Net.IPAddress" />입니다.</param>
      <exception cref="T:System.ObjectDisposedException" vsli:raw="The underlying &lt;see cref=&quot;T:System.Net.Sockets.Socket&quot; /&gt; has been closed.">내부 <see cref="T:System.Net.Sockets.Socket" />이 닫힌 경우</exception>
      <exception cref="T:System.Net.Sockets.SocketException" vsli:raw="An error occurred when accessing the socket.">소켓에 액세스할 때 오류가 발생했습니다.</exception>
    </member>
    <member name="M:System.Net.Sockets.UdpClient.Receive(System.Net.IPEndPoint@)">
      <summary vsli:raw="Returns a UDP datagram that was sent by a remote host.">원격 호스트가 보낸 UDP 데이터그램을 반환합니다.</summary>
      <param name="remoteEP" vsli:raw="An &lt;see cref=&quot;T:System.Net.IPEndPoint&quot; /&gt; that represents the remote host from which the data was sent.">데이터를 보낸 원격 호스트를 나타내는 <see cref="T:System.Net.IPEndPoint" />입니다.</param>
      <exception cref="T:System.ObjectDisposedException" vsli:raw="The underlying &lt;see cref=&quot;T:System.Net.Sockets.Socket&quot; /&gt; has been closed.">내부 <see cref="T:System.Net.Sockets.Socket" />이 닫힌 경우</exception>
      <exception cref="T:System.Net.Sockets.SocketException" vsli:raw="An error occurred when accessing the socket.">소켓에 액세스할 때 오류가 발생했습니다.</exception>
      <returns vsli:raw="An array of type &lt;see cref=&quot;T:System.Byte&quot; /&gt; that contains datagram data.">데이터그램 데이터를 포함하는 <see cref="T:System.Byte" /> 형식의 배열입니다.</returns>
    </member>
    <member name="M:System.Net.Sockets.UdpClient.ReceiveAsync">
      <summary vsli:raw="Returns a UDP datagram asynchronously that was sent by a remote host.">원격 호스트가 보낸 UDP 데이터그램을 비동기적으로 반환합니다.</summary>
      <exception cref="T:System.ObjectDisposedException" vsli:raw="The underlying &lt;see cref=&quot;T:System.Net.Sockets.Socket&quot; /&gt; has been closed.">내부 <see cref="T:System.Net.Sockets.Socket" />이 닫힌 경우</exception>
      <exception cref="T:System.Net.Sockets.SocketException" vsli:raw="An error occurred when accessing the socket.">소켓에 액세스할 때 오류가 발생했습니다.</exception>
      <returns vsli:raw="The task object representing the asynchronous operation.">비동기 작업(operation)을 나타내는 작업(task) 개체입니다.</returns>
    </member>
    <member name="M:System.Net.Sockets.UdpClient.Send(System.Byte[],System.Int32)">
      <summary vsli:raw="Sends a UDP datagram to a remote host.">원격 호스트에 UDP 데이터그램을 보냅니다.</summary>
      <param name="dgram" vsli:raw="An array of type &lt;see cref=&quot;T:System.Byte&quot; /&gt; that specifies the UDP datagram that you intend to send represented as an array of bytes.">보내려는 UDP 데이터그램을 지정하는 형식 <see cref="T:System.Byte" /> 의 배열이며, 바이트 배열로 표시됩니다.</param>
      <param name="bytes" vsli:raw="The number of bytes in the datagram.">데이터그램의 바이트 수입니다.</param>
      <exception cref="T:System.ArgumentNullException" vsli:raw="&lt;paramref name=&quot;dgram&quot; /&gt; is &lt;see langword=&quot;null&quot; /&gt;.">
        <paramref name="dgram" />이(가) <see langword="null" />인 경우</exception>
      <exception cref="T:System.InvalidOperationException" vsli:raw="The &lt;see cref=&quot;T:System.Net.Sockets.UdpClient&quot; /&gt; has already established a default remote host.">
        <see cref="T:System.Net.Sockets.UdpClient" /> 에서는 기본 원격 호스트를 이미 설정한 경우</exception>
      <exception cref="T:System.ObjectDisposedException" vsli:raw="The &lt;see cref=&quot;T:System.Net.Sockets.UdpClient&quot; /&gt; is closed.">
        <see cref="T:System.Net.Sockets.UdpClient" />가 닫혔습니다.</exception>
      <exception cref="T:System.Net.Sockets.SocketException" vsli:raw="An error occurred when accessing the socket.">소켓에 액세스할 때 오류가 발생했습니다.</exception>
      <returns vsli:raw="The number of bytes sent.">보낸 바이트 수입니다.</returns>
    </member>
    <member name="M:System.Net.Sockets.UdpClient.Send(System.Byte[],System.Int32,System.Net.IPEndPoint)">
      <summary vsli:raw="Sends a UDP datagram to the host at the specified remote endpoint.">지정된 원격 엔드포인트에서 호스트에 UDP 데이터그램을 보냅니다.</summary>
      <param name="dgram" vsli:raw="An array of type &lt;see cref=&quot;T:System.Byte&quot; /&gt; that specifies the UDP datagram that you intend to send, represented as an array of bytes.">보내려는 UDP 데이터그램을 지정하는 형식 <see cref="T:System.Byte" /> 의 배열이며, 바이트 배열로 표시됩니다.</param>
      <param name="bytes" vsli:raw="The number of bytes in the datagram.">데이터그램의 바이트 수입니다.</param>
      <param name="endPoint" vsli:raw="An &lt;see cref=&quot;T:System.Net.IPEndPoint&quot; /&gt; that represents the host and port to which to send the datagram.">데이터그램을 보낼 호스트 및 포트를 나타내는 <see cref="T:System.Net.IPEndPoint" /> 입니다.</param>
      <exception cref="T:System.ArgumentNullException" vsli:raw="&lt;paramref name=&quot;dgram&quot; /&gt; is &lt;see langword=&quot;null&quot; /&gt;.">
        <paramref name="dgram" />이(가) <see langword="null" />인 경우</exception>
      <exception cref="T:System.InvalidOperationException" vsli:raw="&lt;see cref=&quot;T:System.Net.Sockets.UdpClient&quot; /&gt; has already established a default remote host.">
        <see cref="T:System.Net.Sockets.UdpClient" /> 에서 기본 원격 호스트를 이미 설정했습니다.</exception>
      <exception cref="T:System.ObjectDisposedException" vsli:raw="&lt;see cref=&quot;T:System.Net.Sockets.UdpClient&quot; /&gt; is closed.">
        <see cref="T:System.Net.Sockets.UdpClient" />가 닫혀 있습니다.</exception>
      <exception cref="T:System.Net.Sockets.SocketException" vsli:raw="An error occurred when accessing the socket.">소켓에 액세스할 때 오류가 발생했습니다.</exception>
      <returns vsli:raw="The number of bytes sent.">보낸 바이트 수입니다.</returns>
    </member>
    <member name="M:System.Net.Sockets.UdpClient.Send(System.Byte[],System.Int32,System.String,System.Int32)">
      <summary vsli:raw="Sends a UDP datagram to a specified port on a specified remote host.">지정된 원격 호스트의 지정된 포트에 UDP 데이터그램을 보냅니다.</summary>
      <param name="dgram" vsli:raw="An array of type &lt;see cref=&quot;T:System.Byte&quot; /&gt; that specifies the UDP datagram that you intend to send represented as an array of bytes.">보내려는 UDP 데이터그램을 지정하는 형식 <see cref="T:System.Byte" /> 의 배열이며, 바이트 배열로 표시됩니다.</param>
      <param name="bytes" vsli:raw="The number of bytes in the datagram.">데이터그램의 바이트 수입니다.</param>
      <param name="hostname" vsli:raw="The name of the remote host to which you intend to send the datagram.">데이터그램을 보낼 원격 호스트의 이름입니다.</param>
      <param name="port" vsli:raw="The remote port number with which you intend to communicate.">통신하려는 원격 포트 번호입니다.</param>
      <exception cref="T:System.ArgumentNullException" vsli:raw="&lt;paramref name=&quot;dgram&quot; /&gt; is &lt;see langword=&quot;null&quot; /&gt;.">
        <paramref name="dgram" />이(가) <see langword="null" />인 경우</exception>
      <exception cref="T:System.InvalidOperationException" vsli:raw="The &lt;see cref=&quot;T:System.Net.Sockets.UdpClient&quot; /&gt; has already established a default remote host.">
        <see cref="T:System.Net.Sockets.UdpClient" /> 에서는 기본 원격 호스트를 이미 설정한 경우</exception>
      <exception cref="T:System.ObjectDisposedException" vsli:raw="The &lt;see cref=&quot;T:System.Net.Sockets.UdpClient&quot; /&gt; is closed.">
        <see cref="T:System.Net.Sockets.UdpClient" />가 닫혔습니다.</exception>
      <exception cref="T:System.Net.Sockets.SocketException" vsli:raw="An error occurred when accessing the socket.">소켓에 액세스할 때 오류가 발생했습니다.</exception>
      <returns vsli:raw="The number of bytes sent.">보낸 바이트 수입니다.</returns>
    </member>
    <member name="M:System.Net.Sockets.UdpClient.SendAsync(System.Byte[],System.Int32)">
      <summary vsli:raw="Sends a UDP datagram asynchronously to a remote host.">UDP 데이터그램을 원격 호스트에 비동기적으로 보냅니다.</summary>
      <param name="datagram" vsli:raw="An array of type &lt;see cref=&quot;T:System.Byte&quot; /&gt; that specifies the UDP datagram that you intend to send represented as an array of bytes.">보내려는 UDP 데이터그램을 지정하는 형식 <see cref="T:System.Byte" /> 의 배열이며, 바이트 배열로 표시됩니다.</param>
      <param name="bytes" vsli:raw="The number of bytes in the datagram.">데이터그램의 바이트 수입니다.</param>
      <exception cref="T:System.ArgumentNullException" vsli:raw="&lt;paramref name=&quot;dgram&quot; /&gt; is &lt;see langword=&quot;null&quot; /&gt;.">
        <paramref name="dgram" />이(가) <see langword="null" />인 경우</exception>
      <exception cref="T:System.InvalidOperationException" vsli:raw="The &lt;see cref=&quot;T:System.Net.Sockets.UdpClient&quot; /&gt; has already established a default remote host.">
        <see cref="T:System.Net.Sockets.UdpClient" /> 에서는 기본 원격 호스트를 이미 설정한 경우</exception>
      <exception cref="T:System.ObjectDisposedException" vsli:raw="The &lt;see cref=&quot;T:System.Net.Sockets.UdpClient&quot; /&gt; is closed.">
        <see cref="T:System.Net.Sockets.UdpClient" />가 닫혔습니다.</exception>
      <exception cref="T:System.Net.Sockets.SocketException" vsli:raw="An error occurred when accessing the socket.">소켓에 액세스할 때 오류가 발생했습니다.</exception>
      <returns vsli:raw="Returns &lt;see cref=&quot;T:System.Threading.Tasks.Task`1&quot; /&gt;.">
        <see cref="T:System.Threading.Tasks.Task`1" />를 반환합니다.</returns>
    </member>
    <member name="M:System.Net.Sockets.UdpClient.SendAsync(System.Byte[],System.Int32,System.Net.IPEndPoint)">
      <summary vsli:raw="Sends a UDP datagram asynchronously to a remote host.">UDP 데이터그램을 원격 호스트에 비동기적으로 보냅니다.</summary>
      <param name="datagram" vsli:raw="An array of type &lt;see cref=&quot;T:System.Byte&quot; /&gt; that specifies the UDP datagram that you intend to send represented as an array of bytes.">보내려는 UDP 데이터그램을 지정하는 형식 <see cref="T:System.Byte" /> 의 배열이며, 바이트 배열로 표시됩니다.</param>
      <param name="bytes" vsli:raw="The number of bytes in the datagram.">데이터그램의 바이트 수입니다.</param>
      <param name="endPoint" vsli:raw="An &lt;see cref=&quot;T:System.Net.IPEndPoint&quot; /&gt; that represents the host and port to which to send the datagram.">데이터그램을 보낼 호스트 및 포트를 나타내는 <see cref="T:System.Net.IPEndPoint" /> 입니다.</param>
      <exception cref="T:System.ArgumentNullException" vsli:raw="&lt;paramref name=&quot;dgram&quot; /&gt; is &lt;see langword=&quot;null&quot; /&gt;.">
        <paramref name="dgram" />이(가) <see langword="null" />인 경우</exception>
      <exception cref="T:System.InvalidOperationException" vsli:raw="&lt;see cref=&quot;T:System.Net.Sockets.UdpClient&quot; /&gt; has already established a default remote host.">
        <see cref="T:System.Net.Sockets.UdpClient" /> 에서 기본 원격 호스트를 이미 설정했습니다.</exception>
      <exception cref="T:System.ObjectDisposedException" vsli:raw="&lt;see cref=&quot;T:System.Net.Sockets.UdpClient&quot; /&gt; is closed.">
        <see cref="T:System.Net.Sockets.UdpClient" />가 닫혀 있습니다.</exception>
      <exception cref="T:System.Net.Sockets.SocketException" vsli:raw="An error occurred when accessing the socket.">소켓에 액세스할 때 오류가 발생했습니다.</exception>
      <returns vsli:raw="Returns &lt;see cref=&quot;T:System.Threading.Tasks.Task`1&quot; /&gt;.">
        <see cref="T:System.Threading.Tasks.Task`1" />를 반환합니다.</returns>
    </member>
    <member name="M:System.Net.Sockets.UdpClient.SendAsync(System.Byte[],System.Int32,System.String,System.Int32)">
      <summary vsli:raw="Sends a UDP datagram asynchronously to a remote host.">UDP 데이터그램을 원격 호스트에 비동기적으로 보냅니다.</summary>
      <param name="datagram" vsli:raw="An array of type &lt;see cref=&quot;T:System.Byte&quot; /&gt; that specifies the UDP datagram that you intend to send represented as an array of bytes.">보내려는 UDP 데이터그램을 지정하는 형식 <see cref="T:System.Byte" /> 의 배열이며, 바이트 배열로 표시됩니다.</param>
      <param name="bytes" vsli:raw="The number of bytes in the datagram.">데이터그램의 바이트 수입니다.</param>
      <param name="hostname" vsli:raw="The name of the remote host to which you intend to send the datagram.">데이터그램을 보낼 원격 호스트의 이름입니다.</param>
      <param name="port" vsli:raw="The remote port number with which you intend to communicate.">통신하려는 원격 포트 번호입니다.</param>
      <exception cref="T:System.ArgumentNullException" vsli:raw="&lt;paramref name=&quot;dgram&quot; /&gt; is &lt;see langword=&quot;null&quot; /&gt;.">
        <paramref name="dgram" />이(가) <see langword="null" />인 경우</exception>
      <exception cref="T:System.InvalidOperationException" vsli:raw="The &lt;see cref=&quot;T:System.Net.Sockets.UdpClient&quot; /&gt; has already established a default remote host.">
        <see cref="T:System.Net.Sockets.UdpClient" /> 에서는 기본 원격 호스트를 이미 설정한 경우</exception>
      <exception cref="T:System.ObjectDisposedException" vsli:raw="The &lt;see cref=&quot;T:System.Net.Sockets.UdpClient&quot; /&gt; is closed.">
        <see cref="T:System.Net.Sockets.UdpClient" />가 닫혔습니다.</exception>
      <exception cref="T:System.Net.Sockets.SocketException" vsli:raw="An error occurred when accessing the socket.">소켓에 액세스할 때 오류가 발생했습니다.</exception>
      <returns vsli:raw="Returns &lt;see cref=&quot;T:System.Threading.Tasks.Task`1&quot; /&gt;.">
        <see cref="T:System.Threading.Tasks.Task`1" />를 반환합니다.</returns>
    </member>
    <member name="P:System.Net.Sockets.UdpClient.Active">
      <summary vsli:raw="Gets or sets a value indicating whether a default remote host has been established.">기본 원격 호스트가 설정되었는지 여부를 나타내는 값을 가져오거나 설정합니다.</summary>
      <returns vsli:raw="&lt;see langword=&quot;true&quot; /&gt; if a connection is active; otherwise, &lt;see langword=&quot;false&quot; /&gt;.">연결이 활성화되면 <see langword="true" />이고, 그렇지 않으면 <see langword="false" />입니다.</returns>
    </member>
    <member name="P:System.Net.Sockets.UdpClient.Available">
      <summary vsli:raw="Gets the amount of data received from the network that is available to read.">네트워크에서 받은 데이터 중 읽을 수 있는 데이터의 양을 가져옵니다.</summary>
      <exception cref="T:System.Net.Sockets.SocketException" vsli:raw="An error occurred while attempting to access the socket.">소켓에 액세스하려고 시도하는 동안 오류가 발생한 경우.</exception>
      <exception cref="T:System.ObjectDisposedException" vsli:raw="The &lt;see cref=&quot;T:System.Net.Sockets.Socket&quot; /&gt; has been closed.">
        <see cref="T:System.Net.Sockets.Socket" />이 닫혔습니다.</exception>
      <returns vsli:raw="The number of bytes of data received from the network.">네트워크에서 받은 데이터의 바이트 수입니다.</returns>
    </member>
    <member name="P:System.Net.Sockets.UdpClient.Client">
      <summary vsli:raw="Gets or sets the underlying network &lt;see cref=&quot;T:System.Net.Sockets.Socket&quot; /&gt;.">내부 네트워크 <see cref="T:System.Net.Sockets.Socket" />을 가져오거나 설정합니다.</summary>
      <returns vsli:raw="The underlying Network &lt;see cref=&quot;T:System.Net.Sockets.Socket&quot; /&gt;.">내부 네트워크 <see cref="T:System.Net.Sockets.Socket" />입니다.</returns>
    </member>
    <member name="P:System.Net.Sockets.UdpClient.DontFragment">
      <summary vsli:raw="Gets or sets a &lt;see cref=&quot;T:System.Boolean&quot; /&gt; value that specifies whether the &lt;see cref=&quot;T:System.Net.Sockets.UdpClient&quot; /&gt; allows Internet Protocol (IP) datagrams to be fragmented.">
        <see cref="T:System.Boolean" />에서 IP(인터넷 프로토콜) 데이터그램의 조각화를 허용하는지 여부를 나타내는 <see cref="T:System.Net.Sockets.UdpClient" /> 값을 가져오거나 설정합니다.</summary>
      <exception cref="T:System.NotSupportedException" vsli:raw="This property can be set only for sockets that use the &lt;see cref=&quot;F:System.Net.Sockets.AddressFamily.InterNetwork&quot; /&gt; flag or the &lt;see cref=&quot;F:System.Net.Sockets.AddressFamily.InterNetworkV6&quot; /&gt; flag.">이 속성은 <see cref="F:System.Net.Sockets.AddressFamily.InterNetwork" /> 플래그나 <see cref="F:System.Net.Sockets.AddressFamily.InterNetworkV6" /> 플래그를 사용하는 소켓에만 설정할 수 있습니다.</exception>
      <returns vsli:raw="&lt;see langword=&quot;true&quot; /&gt; if the &lt;see cref=&quot;T:System.Net.Sockets.UdpClient&quot; /&gt; doesn't allow datagram fragmentation; otherwise, &lt;see langword=&quot;false&quot; /&gt;. The default is &lt;see langword=&quot;true&quot; /&gt;.">
        <see cref="T:System.Net.Sockets.UdpClient" />에서 데이터그램 조각화를 허용하면 <see langword="true" />이고, 그렇지 않으면 <see langword="false" />입니다. 기본값은 <see langword="true" />입니다.</returns>
    </member>
    <member name="P:System.Net.Sockets.UdpClient.EnableBroadcast">
      <summary vsli:raw="Gets or sets a &lt;see cref=&quot;T:System.Boolean&quot; /&gt; value that specifies whether the &lt;see cref=&quot;T:System.Net.Sockets.UdpClient&quot; /&gt; may send broadcast packets.">
        <see cref="T:System.Boolean" />가 브로드캐스트 패킷을 보내거나 받을 수 있는지 여부를 지정하는 <see cref="T:System.Net.Sockets.UdpClient" /> 값을 가져오거나 설정합니다.</summary>
      <returns vsli:raw="&lt;see langword=&quot;true&quot; /&gt; if the &lt;see cref=&quot;T:System.Net.Sockets.UdpClient&quot; /&gt; allows sending broadcast packets; otherwise, &lt;see langword=&quot;false&quot; /&gt;. The default is &lt;see langword=&quot;false&quot; /&gt;.">
        <see cref="T:System.Net.Sockets.UdpClient" />이 브로드캐스트 패킷을 허용하면 <see langword="true" />이고, 그렇지 않으면 <see langword="false" />입니다. 기본값은 <see langword="false" />입니다.</returns>
    </member>
    <member name="P:System.Net.Sockets.UdpClient.ExclusiveAddressUse">
      <summary vsli:raw="Gets or sets a &lt;see cref=&quot;T:System.Boolean&quot; /&gt; value that specifies whether the &lt;see cref=&quot;T:System.Net.Sockets.UdpClient&quot; /&gt; allows only one client to use a port.">
        <see cref="T:System.Boolean" />가 하나의 포트를 하나의 클라이언트에서만 사용하도록 허용하는지 여부를 지정하는 <see cref="T:System.Net.Sockets.UdpClient" /> 값을 가져오거나 설정합니다.</summary>
      <exception cref="T:System.Net.Sockets.SocketException" vsli:raw="An error occurred when attempting to access the underlying socket.">내부 소켓에 액세스하려고 시도하는 동안 오류가 발생한 경우.</exception>
      <exception cref="T:System.ObjectDisposedException" vsli:raw="The underlying &lt;see cref=&quot;T:System.Net.Sockets.Socket&quot; /&gt; has been closed.">내부 <see cref="T:System.Net.Sockets.Socket" />이 닫힌 경우</exception>
      <returns vsli:raw="&lt;see langword=&quot;true&quot; /&gt; if the &lt;see cref=&quot;T:System.Net.Sockets.UdpClient&quot; /&gt; allows only one client to use a specific port; otherwise, &lt;see langword=&quot;false&quot; /&gt;. The default is &lt;see langword=&quot;true&quot; /&gt; for Windows Server 2003 and Windows XP Service Pack 2 and later, and &lt;see langword=&quot;false&quot; /&gt; for all other versions.">
        <see cref="T:System.Net.Sockets.UdpClient" />에서 특정 포트를 하나의 클라이언트에서만 사용하도록 허용하면 <see langword="true" />이고, 그렇지 않으면 <see langword="false" />입니다. Windows Server 2003 및 Windows XP 서비스 팩 2 이상에서는 기본값이 <see langword="true" />이고, 다른 모든 버전에서는 <see langword="false" />입니다.</returns>
    </member>
    <member name="P:System.Net.Sockets.UdpClient.MulticastLoopback">
      <summary vsli:raw="Gets or sets a &lt;see cref=&quot;T:System.Boolean&quot; /&gt; value that specifies whether outgoing multicast packets are delivered to the sending application.">나가는 멀티캐스트 패킷을 보내는 애플리케이션에 전달할지 여부를 지정하는 <see cref="T:System.Boolean" /> 값을 가져오거나 설정합니다.</summary>
      <returns vsli:raw="&lt;see langword=&quot;true&quot; /&gt; if the &lt;see cref=&quot;T:System.Net.Sockets.UdpClient&quot; /&gt; receives outgoing multicast packets; otherwise, &lt;see langword=&quot;false&quot; /&gt;.">
        <see cref="T:System.Net.Sockets.UdpClient" />이 나가는 멀티캐스트 패킷을 받으면 <see langword="true" />이고, 그렇지 않으면 <see langword="false" />입니다.</returns>
    </member>
    <member name="P:System.Net.Sockets.UdpClient.Ttl">
      <summary vsli:raw="Gets or sets a value that specifies the Time to Live (TTL) value of Internet Protocol (IP) packets sent by the &lt;see cref=&quot;T:System.Net.Sockets.UdpClient&quot; /&gt;.">
        <see cref="T:System.Net.Sockets.UdpClient" />에서 보낸 IP(인터넷 프로토콜) 패킷의 TTL(Time to Live) 값을 지정하는 값을 가져오거나 설정합니다.</summary>
      <returns vsli:raw="The TTL value.">TTL 값입니다.</returns>
    </member>
    <member name="T:System.Net.Sockets.UdpReceiveResult">
      <summary vsli:raw="Presents UDP receive result information from a call to the &lt;see cref=&quot;M:System.Net.Sockets.UdpClient.ReceiveAsync&quot; /&gt; method.">UDP가 <see cref="M:System.Net.Sockets.UdpClient.ReceiveAsync" /> 메서드에 대한 호출에서 결과 정보를 수신하도록 합니다.</summary>
    </member>
    <member name="M:System.Net.Sockets.UdpReceiveResult.#ctor(System.Byte[],System.Net.IPEndPoint)">
      <summary vsli:raw="Initializes a new instance of the &lt;see cref=&quot;T:System.Net.Sockets.UdpReceiveResult&quot; /&gt; class.">
        <see cref="T:System.Net.Sockets.UdpReceiveResult" /> 클래스의 새 인스턴스를 초기화합니다.</summary>
      <param name="buffer" vsli:raw="A buffer for data to receive in the UDP packet.">UDP 패킷에서 수신할 데이터 버퍼입니다.</param>
      <param name="remoteEndPoint" vsli:raw="The remote endpoint of the UDP packet.">UDP 패킷의 원격 엔드포인트입니다.</param>
    </member>
    <member name="M:System.Net.Sockets.UdpReceiveResult.Equals(System.Net.Sockets.UdpReceiveResult)">
      <summary vsli:raw="Returns a value that indicates whether this instance is equal to a specified object.">@FSHO2@이 인스턴스가 지정한 개체와 같은지를 나타내는 값을 반환합니다.</summary>
      <param name="other" vsli:raw="The object to compare with this instance.">이 인스턴스와 비교할 개체입니다.</param>
      <returns vsli:raw="&lt;see langword=&quot;true&quot; /&gt; if &lt;paramref name=&quot;other&quot; /&gt; is an instance of &lt;see cref=&quot;T:System.Net.Sockets.UdpReceiveResult&quot; /&gt; and equals the value of the instance; otherwise, &lt;see langword=&quot;false&quot; /&gt;.">
        <paramref name="other" />가 <see cref="T:System.Net.Sockets.UdpReceiveResult" />의 인스턴스이고 해당 인스턴스의 값과 같으면 <see langword="true" />이고, 그렇지 않으면 <see langword="false" />입니다.</returns>
    </member>
    <member name="M:System.Net.Sockets.UdpReceiveResult.Equals(System.Object)">
      <summary vsli:raw="Returns a value that indicates whether this instance is equal to a specified object.">@FSHO2@이 인스턴스가 지정한 개체와 같은지를 나타내는 값을 반환합니다.</summary>
      <param name="obj" vsli:raw="The object to compare with this instance.">이 인스턴스와 비교할 개체입니다.</param>
      <returns vsli:raw="&lt;see langword=&quot;true&quot; /&gt; if &lt;paramref name=&quot;obj&quot; /&gt; is an instance of &lt;see cref=&quot;T:System.Net.Sockets.UdpReceiveResult&quot; /&gt; and equals the value of the instance; otherwise, &lt;see langword=&quot;false&quot; /&gt;.">
        <paramref name="obj" />가 <see cref="T:System.Net.Sockets.UdpReceiveResult" />의 인스턴스이고 해당 인스턴스의 값과 같으면 <see langword="true" />이고, 그렇지 않으면 <see langword="false" />입니다.</returns>
    </member>
    <member name="M:System.Net.Sockets.UdpReceiveResult.GetHashCode">
      <summary vsli:raw="Returns the hash code for this instance.">이 인스턴스의 해시 코드를 반환합니다.</summary>
      <returns vsli:raw="The hash code.">해시 코드입니다.</returns>
    </member>
    <member name="M:System.Net.Sockets.UdpReceiveResult.op_Equality(System.Net.Sockets.UdpReceiveResult,System.Net.Sockets.UdpReceiveResult)">
      <summary vsli:raw="Tests whether two specified &lt;see cref=&quot;T:System.Net.Sockets.UdpReceiveResult&quot; /&gt; instances are equivalent.">지정된 두 <see cref="T:System.Net.Sockets.UdpReceiveResult" /> 인스턴스가 같은지 여부를 테스트합니다.</summary>
      <param name="left" vsli:raw="The &lt;see cref=&quot;T:System.Net.Sockets.UdpReceiveResult&quot; /&gt; instance that is to the left of the equality operator.">같음 연산자의 왼쪽에 있는 <see cref="T:System.Net.Sockets.UdpReceiveResult" /> 인스턴스입니다.</param>
      <param name="right" vsli:raw="The &lt;see cref=&quot;T:System.Net.Sockets.UdpReceiveResult&quot; /&gt; instance that is to the right of the equality operator.">같음 연산자의 오른쪽에 있는 <see cref="T:System.Net.Sockets.UdpReceiveResult" /> 인스턴스입니다.</param>
      <returns vsli:raw="&lt;see langword=&quot;true&quot; /&gt; if &lt;paramref name=&quot;left&quot; /&gt; and &lt;paramref name=&quot;right&quot; /&gt; are equal; otherwise, &lt;see langword=&quot;false&quot; /&gt;.">
        <paramref name="left" />과 <paramref name="right" />가 같으면 <see langword="true" />이고, 그렇지 않으면 <see langword="false" />입니다.</returns>
    </member>
    <member name="M:System.Net.Sockets.UdpReceiveResult.op_Inequality(System.Net.Sockets.UdpReceiveResult,System.Net.Sockets.UdpReceiveResult)">
      <summary vsli:raw="Tests whether two specified &lt;see cref=&quot;T:System.Net.Sockets.UdpReceiveResult&quot; /&gt; instances are not equal.">지정된 두 <see cref="T:System.Net.Sockets.UdpReceiveResult" /> 인스턴스가 서로 다른지 여부를 테스트합니다.</summary>
      <param name="left" vsli:raw="The &lt;see cref=&quot;T:System.Net.Sockets.UdpReceiveResult&quot; /&gt; instance that is to the left of the not equal operator.">같지 않음 연산자의 왼쪽에 있는 <see cref="T:System.Net.Sockets.UdpReceiveResult" /> 인스턴스입니다.</param>
      <param name="right" vsli:raw="The &lt;see cref=&quot;T:System.Net.Sockets.UdpReceiveResult&quot; /&gt; instance that is to the right of the not equal operator.">같지 않음 연산자의 오른쪽에 있는 <see cref="T:System.Net.Sockets.UdpReceiveResult" /> 인스턴스입니다.</param>
      <returns vsli:raw="&lt;see langword=&quot;true&quot; /&gt; if &lt;paramref name=&quot;left&quot; /&gt; and &lt;paramref name=&quot;right&quot; /&gt; are unequal; otherwise, &lt;see langword=&quot;false&quot; /&gt;.">
        <paramref name="left" />와 <paramref name="right" />가 다르면 <see langword="true" />이고,다르지 않으면 <see langword="false" />입니다.</returns>
    </member>
    <member name="P:System.Net.Sockets.UdpReceiveResult.Buffer">
      <summary vsli:raw="Gets a buffer with the data received in the UDP packet.">UDP 패킷에 수신한 데이터가 포함된 버퍼를 가져옵니다.</summary>
      <returns vsli:raw="A &lt;see cref=&quot;T:System.Byte&quot; /&gt; array with the data received in the UDP packet.">UDP 패킷에 수신한 데이터가 포함된 <see cref="T:System.Byte" /> 배열입니다.</returns>
    </member>
    <member name="P:System.Net.Sockets.UdpReceiveResult.RemoteEndPoint">
      <summary vsli:raw="Gets the remote endpoint from which the UDP packet was received.">UDP 패키지를 수신한 원격 엔드포인트를 가져옵니다.</summary>
      <returns vsli:raw="The remote endpoint from which the UDP packet was received.">UDP 패키지를 수신한 원격 엔드포인트입니다.</returns>
    </member>
    <member name="T:System.Net.Sockets.UnixDomainSocketEndPoint">
      <summary vsli:raw="Represents a Unix Domain Socket endpoint as a path.">Unix 도메인 소켓 엔드포인트를 경로로 나타냅니다.</summary>
    </member>
    <member name="M:System.Net.Sockets.UnixDomainSocketEndPoint.#ctor(System.String)">
      <summary vsli:raw="Initializes a new instance of the &lt;see cref=&quot;T:System.Net.Sockets.UnixDomainSocketEndPoint&quot; /&gt; with the file path to connect a unix domain socket over.">Unix 도메인 소켓을 연결하는 데 사용되는 파일 경로를 사용하여 <see cref="T:System.Net.Sockets.UnixDomainSocketEndPoint" />의 새 인스턴스를 초기화합니다.</summary>
      <param name="path" vsli:raw="The path to connect a unix domain socket over.">Unix 도메인 소켓을 연결할 경로입니다.</param>
      <exception cref="T:System.ArgumentNullException" vsli:raw="&lt;paramref name=&quot;path&quot; /&gt; is &lt;see langword=&quot;null&quot; /&gt;.">
        <paramref name="path" />이(가) <see langword="null" />인 경우</exception>
      <exception cref="T:System.ArgumentOutOfRangeException" vsli:raw="&lt;paramref name=&quot;path&quot; /&gt; is of an invalid length for use with domain sockets on this platform. The length must be between 1 and the allowed native path length.">
        <paramref name="path" />의 길이가 이 플랫폼의 도메인 소켓과 함께 사용하기에 부적합합니다. 길이는 1에서 허용되는 원시 경로 길이 사이여야 합니다.</exception>
      <exception cref="T:System.PlatformNotSupportedException" vsli:raw="The current OS does not support Unix Domain Sockets.">현재 OS는 Unix 도메인 소켓을 지원하지 않습니다.</exception>
    </member>
  </members>
</doc>